### YamlMime:ManagedReference
items:
- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass1
  id: MarkupCompilePass1
  children:
  - Microsoft.Build.Tasks.Windows.MarkupCompilePass1.#ctor
  - Microsoft.Build.Tasks.Windows.MarkupCompilePass1.AllGeneratedFiles
  - Microsoft.Build.Tasks.Windows.MarkupCompilePass1.AlwaysCompileMarkupFilesInSeparateDomain
  - Microsoft.Build.Tasks.Windows.MarkupCompilePass1.ApplicationMarkup
  - Microsoft.Build.Tasks.Windows.MarkupCompilePass1.AssembliesGeneratedDuringBuild
  - Microsoft.Build.Tasks.Windows.MarkupCompilePass1.AssemblyName
  - Microsoft.Build.Tasks.Windows.MarkupCompilePass1.AssemblyPublicKeyToken
  - Microsoft.Build.Tasks.Windows.MarkupCompilePass1.AssemblyVersion
  - Microsoft.Build.Tasks.Windows.MarkupCompilePass1.ContentFiles
  - Microsoft.Build.Tasks.Windows.MarkupCompilePass1.DefineConstants
  - Microsoft.Build.Tasks.Windows.MarkupCompilePass1.Execute
  - Microsoft.Build.Tasks.Windows.MarkupCompilePass1.ExtraBuildControlFiles
  - Microsoft.Build.Tasks.Windows.MarkupCompilePass1.GeneratedBamlFiles
  - Microsoft.Build.Tasks.Windows.MarkupCompilePass1.GeneratedCodeFiles
  - Microsoft.Build.Tasks.Windows.MarkupCompilePass1.GeneratedLocalizationFiles
  - Microsoft.Build.Tasks.Windows.MarkupCompilePass1.HostInBrowser
  - Microsoft.Build.Tasks.Windows.MarkupCompilePass1.IsRunningInVisualStudio
  - Microsoft.Build.Tasks.Windows.MarkupCompilePass1.KnownReferencePaths
  - Microsoft.Build.Tasks.Windows.MarkupCompilePass1.Language
  - Microsoft.Build.Tasks.Windows.MarkupCompilePass1.LanguageSourceExtension
  - Microsoft.Build.Tasks.Windows.MarkupCompilePass1.LocalizationDirectivesToLocFile
  - Microsoft.Build.Tasks.Windows.MarkupCompilePass1.OutputPath
  - Microsoft.Build.Tasks.Windows.MarkupCompilePass1.OutputType
  - Microsoft.Build.Tasks.Windows.MarkupCompilePass1.PageMarkup
  - Microsoft.Build.Tasks.Windows.MarkupCompilePass1.References
  - Microsoft.Build.Tasks.Windows.MarkupCompilePass1.RequirePass2ForMainAssembly
  - Microsoft.Build.Tasks.Windows.MarkupCompilePass1.RequirePass2ForSatelliteAssembly
  - Microsoft.Build.Tasks.Windows.MarkupCompilePass1.RootNamespace
  - Microsoft.Build.Tasks.Windows.MarkupCompilePass1.SourceCodeFiles
  - Microsoft.Build.Tasks.Windows.MarkupCompilePass1.SplashScreen
  - Microsoft.Build.Tasks.Windows.MarkupCompilePass1.UICulture
  - Microsoft.Build.Tasks.Windows.MarkupCompilePass1.XamlDebuggingInformation
  langs:
  - csharp
  name: MarkupCompilePass1
  nameWithType: MarkupCompilePass1
  fullName: Microsoft.Build.Tasks.Windows.MarkupCompilePass1
  type: Class
  summary: "구현 된 `MarkupCompilePass1` 작업 합니다. 사용 하 여는 `MarkupCompilePass1` 생성 하 고이 작업을 실행 하기 위해 프로젝트 파일의 요소입니다. 사용 및 매개 변수 정보를 참조 하십시오. [MarkupCompilePass1](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: 'public sealed class MarkupCompilePass1 : Microsoft.Build.Utilities.Task'
  inheritance:
  - System.Object
  - Microsoft.Build.Utilities.Task
  implements: []
  inheritedMembers:
  - Microsoft.Build.Utilities.Task.BuildEngine
  - Microsoft.Build.Utilities.Task.BuildEngine2
  - Microsoft.Build.Utilities.Task.BuildEngine3
  - Microsoft.Build.Utilities.Task.BuildEngine4
  - Microsoft.Build.Utilities.Task.HelpKeywordPrefix
  - Microsoft.Build.Utilities.Task.HostObject
  - Microsoft.Build.Utilities.Task.Log
  - Microsoft.Build.Utilities.Task.TaskResources
  platform:
  - net462
- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.#ctor
  id: '#ctor'
  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass1
  langs:
  - csharp
  name: MarkupCompilePass1()
  nameWithType: MarkupCompilePass1.MarkupCompilePass1()
  fullName: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.MarkupCompilePass1()
  type: Constructor
  assemblies:
  - PresentationBuildTasks
  namespace: Microsoft.Build.Tasks.Windows
  summary: "새 인스턴스를 초기화는 <xref href=&quot;Microsoft.Build.Tasks.Windows.MarkupCompilePass1&quot;> </xref> 클래스입니다."
  syntax:
    content: public MarkupCompilePass1 ();
    parameters: []
  overload: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.AllGeneratedFiles
  id: AllGeneratedFiles
  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass1
  langs:
  - csharp
  name: AllGeneratedFiles
  nameWithType: MarkupCompilePass1.AllGeneratedFiles
  fullName: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.AllGeneratedFiles
  type: Property
  assemblies:
  - PresentationBuildTasks
  namespace: Microsoft.Build.Tasks.Windows
  summary: "태그 컴파일러에서 생성 되는 파일의 목록을 가져오거나 설정 합니다."
  syntax:
    content: public Microsoft.Build.Framework.ITaskItem[] AllGeneratedFiles { get; set; }
    return:
      type: Microsoft.Build.Framework.ITaskItem[]
      description: "목록 태그 컴파일러에 의해 생성 되는 파일입니다."
  overload: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.AllGeneratedFiles*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.AlwaysCompileMarkupFilesInSeparateDomain
  id: AlwaysCompileMarkupFilesInSeparateDomain
  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass1
  langs:
  - csharp
  name: AlwaysCompileMarkupFilesInSeparateDomain
  nameWithType: MarkupCompilePass1.AlwaysCompileMarkupFilesInSeparateDomain
  fullName: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.AlwaysCompileMarkupFilesInSeparateDomain
  type: Property
  assemblies:
  - PresentationBuildTasks
  namespace: Microsoft.Build.Tasks.Windows
  summary: "두 번째 응용 프로그램 도메인에서 컴파일할 때 실행할지 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "이 속성을 설정 `false` 빠른 컴파일 결과입니다."
  syntax:
    content: public bool AlwaysCompileMarkupFilesInSeparateDomain { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>두 번째 응용 프로그램 도메인에서 호환성을 실행 하려면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.AlwaysCompileMarkupFilesInSeparateDomain*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.ApplicationMarkup
  id: ApplicationMarkup
  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass1
  langs:
  - csharp
  name: ApplicationMarkup
  nameWithType: MarkupCompilePass1.ApplicationMarkup
  fullName: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.ApplicationMarkup
  type: Property
  assemblies:
  - PresentationBuildTasks
  namespace: Microsoft.Build.Tasks.Windows
  summary: "응용 프로그램 정의의 이름을 가져오거나 설정 합니다. [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] 파일입니다."
  syntax:
    content: public Microsoft.Build.Framework.ITaskItem[] ApplicationMarkup { get; set; }
    return:
      type: Microsoft.Build.Framework.ITaskItem[]
      description: "응용 프로그램 정의의 이름을 [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] 파일입니다."
  overload: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.ApplicationMarkup*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.AssembliesGeneratedDuringBuild
  id: AssembliesGeneratedDuringBuild
  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass1
  langs:
  - csharp
  name: AssembliesGeneratedDuringBuild
  nameWithType: MarkupCompilePass1.AssembliesGeneratedDuringBuild
  fullName: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.AssembliesGeneratedDuringBuild
  type: Property
  assemblies:
  - PresentationBuildTasks
  namespace: Microsoft.Build.Tasks.Windows
  summary: "빌드 주기 동안 변경 하는 참조 어셈블리의 목록을 가져오거나 설정 합니다."
  syntax:
    content: public string[] AssembliesGeneratedDuringBuild { get; set; }
    return:
      type: System.String[]
      description: "빌드 주기 동안 변경 하는 참조 어셈블리의 목록."
  overload: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.AssembliesGeneratedDuringBuild*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.AssemblyName
  id: AssemblyName
  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass1
  langs:
  - csharp
  name: AssemblyName
  nameWithType: MarkupCompilePass1.AssemblyName
  fullName: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.AssemblyName
  type: Property
  assemblies:
  - PresentationBuildTasks
  namespace: Microsoft.Build.Tasks.Windows
  summary: "이 프로젝트에 대해 생성 되는 어셈블리의 약식 이름을 가져오거나 설정 합니다."
  syntax:
    content: public string AssemblyName { get; set; }
    return:
      type: System.String
      description: "이 프로젝트에 대해 생성 된 어셈블리의 짧은 이름입니다."
  overload: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.AssemblyName*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.AssemblyPublicKeyToken
  id: AssemblyPublicKeyToken
  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass1
  langs:
  - csharp
  name: AssemblyPublicKeyToken
  nameWithType: MarkupCompilePass1.AssemblyPublicKeyToken
  fullName: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.AssemblyPublicKeyToken
  type: Property
  assemblies:
  - PresentationBuildTasks
  namespace: Microsoft.Build.Tasks.Windows
  summary: "어셈블리의 공개 키 토큰을 가져오거나 설정 합니다."
  syntax:
    content: public string AssemblyPublicKeyToken { get; set; }
    return:
      type: System.String
      description: "어셈블리의 공개 키 토큰입니다."
  overload: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.AssemblyPublicKeyToken*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.AssemblyVersion
  id: AssemblyVersion
  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass1
  langs:
  - csharp
  name: AssemblyVersion
  nameWithType: MarkupCompilePass1.AssemblyVersion
  fullName: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.AssemblyVersion
  type: Property
  assemblies:
  - PresentationBuildTasks
  namespace: Microsoft.Build.Tasks.Windows
  summary: "어셈블리의 버전을 가져오거나 설정 합니다."
  syntax:
    content: public string AssemblyVersion { get; set; }
    return:
      type: System.String
      description: "어셈블리의 버전입니다."
  overload: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.AssemblyVersion*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.ContentFiles
  id: ContentFiles
  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass1
  langs:
  - csharp
  name: ContentFiles
  nameWithType: MarkupCompilePass1.ContentFiles
  fullName: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.ContentFiles
  type: Property
  assemblies:
  - PresentationBuildTasks
  namespace: Microsoft.Build.Tasks.Windows
  summary: "느슨한 콘텐츠 파일의 목록을 가져오거나 설정 합니다."
  syntax:
    content: public Microsoft.Build.Framework.ITaskItem[] ContentFiles { get; set; }
    return:
      type: Microsoft.Build.Framework.ITaskItem[]
      description: "느슨한 콘텐츠 파일의 목록입니다."
  overload: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.ContentFiles*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.DefineConstants
  id: DefineConstants
  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass1
  langs:
  - csharp
  name: DefineConstants
  nameWithType: MarkupCompilePass1.DefineConstants
  fullName: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.DefineConstants
  type: Property
  assemblies:
  - PresentationBuildTasks
  namespace: Microsoft.Build.Tasks.Windows
  summary: "지정 하는 값을 가져오거나 설정 합니다. 있는지 여부를 지정 된 **DefineConstants** 유지 됩니다."
  syntax:
    content: public string DefineConstants { get; set; }
    return:
      type: System.String
      description: "지정 여부의 현재 값 **DefineConstants** 유지 되는 영향을 줌 대상 어셈블리 생성;이 매개 변수를 변경 하는 경우 대상 어셈블리에서 공용 API를 변경할 수 있습니다 및의 컴파일 [!INCLUDE[TLA2#tla_titlexaml](~/add/includes/tla2sharptla-titlexaml-md.md)] 로컬 형식을 참조 하는 파일에 영향을 줄 수 있습니다."
  overload: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.DefineConstants*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.Execute
  id: Execute
  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass1
  langs:
  - csharp
  name: Execute()
  nameWithType: MarkupCompilePass1.Execute()
  fullName: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.Execute()
  type: Method
  assemblies:
  - PresentationBuildTasks
  namespace: Microsoft.Build.Tasks.Windows
  summary: "작업을 실행합니다."
  syntax:
    content: public override bool Execute ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>작업이는 성공적으로 실행 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.Execute*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.ExtraBuildControlFiles
  id: ExtraBuildControlFiles
  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass1
  langs:
  - csharp
  name: ExtraBuildControlFiles
  nameWithType: MarkupCompilePass1.ExtraBuildControlFiles
  fullName: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.ExtraBuildControlFiles
  type: Property
  assemblies:
  - PresentationBuildTasks
  namespace: Microsoft.Build.Tasks.Windows
  summary: "빌드를 다시 여부를 제어 하는 파일의 목록을 가져오거나 설정 합니다. 때 트리거되는 <xref href=&quot;Microsoft.Build.Tasks.Windows.MarkupCompilePass1&quot;> </xref> 작업을 다시 실행; 재구성은 파일의 경우에 트리거됩니다."
  syntax:
    content: public Microsoft.Build.Framework.ITaskItem[] ExtraBuildControlFiles { get; set; }
    return:
      type: Microsoft.Build.Framework.ITaskItem[]
      description: "빌드를 다시 여부를 제어 하는 파일 목록을 때 트리거되는 <xref href=&quot;Microsoft.Build.Tasks.Windows.MarkupCompilePass1&quot;> </xref> 작업을 다시 실행; 재구성은 파일의 경우에 트리거됩니다."
  overload: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.ExtraBuildControlFiles*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.GeneratedBamlFiles
  id: GeneratedBamlFiles
  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass1
  langs:
  - csharp
  name: GeneratedBamlFiles
  nameWithType: MarkupCompilePass1.GeneratedBamlFiles
  fullName: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.GeneratedBamlFiles
  type: Property
  assemblies:
  - PresentationBuildTasks
  namespace: Microsoft.Build.Tasks.Windows
  summary: "가져오거나 생성 된 [!INCLUDE[TLA#tla_baml](~/add/includes/tlasharptla-baml-md.md)] 파일입니다."
  syntax:
    content: public Microsoft.Build.Framework.ITaskItem[] GeneratedBamlFiles { get; set; }
    return:
      type: Microsoft.Build.Framework.ITaskItem[]
      description: "생성 된 [!INCLUDE[TLA#tla_baml](~/add/includes/tlasharptla-baml-md.md)] 파일입니다."
  overload: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.GeneratedBamlFiles*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.GeneratedCodeFiles
  id: GeneratedCodeFiles
  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass1
  langs:
  - csharp
  name: GeneratedCodeFiles
  nameWithType: MarkupCompilePass1.GeneratedCodeFiles
  fullName: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.GeneratedCodeFiles
  type: Property
  assemblies:
  - PresentationBuildTasks
  namespace: Microsoft.Build.Tasks.Windows
  summary: "생성 된 관리 되는 코드 파일의 목록을 가져오거나 설정 합니다."
  syntax:
    content: public Microsoft.Build.Framework.ITaskItem[] GeneratedCodeFiles { get; set; }
    return:
      type: Microsoft.Build.Framework.ITaskItem[]
      description: "관리 되는 생성 된 코드 파일 목록이 있습니다."
  overload: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.GeneratedCodeFiles*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.GeneratedLocalizationFiles
  id: GeneratedLocalizationFiles
  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass1
  langs:
  - csharp
  name: GeneratedLocalizationFiles
  nameWithType: MarkupCompilePass1.GeneratedLocalizationFiles
  fullName: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.GeneratedLocalizationFiles
  type: Property
  assemblies:
  - PresentationBuildTasks
  namespace: Microsoft.Build.Tasks.Windows
  summary: "생성 된 지역화 파일을 지역화할 수 있는 각 가져오거나 [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] 파일입니다."
  syntax:
    content: public Microsoft.Build.Framework.ITaskItem[] GeneratedLocalizationFiles { get; set; }
    return:
      type: Microsoft.Build.Framework.ITaskItem[]
      description: "생성 된 지역화 파일 각각에 대해 지역화 가능 [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] 파일입니다."
  overload: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.GeneratedLocalizationFiles*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.HostInBrowser
  id: HostInBrowser
  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass1
  langs:
  - csharp
  name: HostInBrowser
  nameWithType: MarkupCompilePass1.HostInBrowser
  fullName: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.HostInBrowser
  type: Property
  assemblies:
  - PresentationBuildTasks
  namespace: Microsoft.Build.Tasks.Windows
  summary: "생성된 된 어셈블리 인지 여부를 나타내는 값을 가져오거나 설정 합니다.는 [!INCLUDE[TLA#tla_xbap](~/add/includes/tlasharptla-xbap-md.md)]합니다."
  syntax:
    content: public string HostInBrowser { get; set; }
    return:
      type: System.String
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>생성 된 어셈블리가 있는 경우는 [!INCLUDE[TLA#tla_xbap](~/add/includes/tlasharptla-xbap-md.md)], 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.HostInBrowser*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.IsRunningInVisualStudio
  id: IsRunningInVisualStudio
  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass1
  langs:
  - csharp
  name: IsRunningInVisualStudio
  nameWithType: MarkupCompilePass1.IsRunningInVisualStudio
  fullName: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.IsRunningInVisualStudio
  type: Property
  assemblies:
  - PresentationBuildTasks
  namespace: Microsoft.Build.Tasks.Windows
  summary: "Visual Studio에서 작업이 실행 되 고 있는지 여부를 나타내는 값을 가져오거나 설정 합니다."
  syntax:
    content: public bool IsRunningInVisualStudio { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Visual Studio;에서 작업이 실행 되는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.IsRunningInVisualStudio*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.KnownReferencePaths
  id: KnownReferencePaths
  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass1
  langs:
  - csharp
  name: KnownReferencePaths
  nameWithType: MarkupCompilePass1.KnownReferencePaths
  fullName: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.KnownReferencePaths
  type: Property
  assemblies:
  - PresentationBuildTasks
  namespace: Microsoft.Build.Tasks.Windows
  summary: "빌드는 동안 변경 되지 않는 참조 된 어셈블리의 경로 가져오거나 설정 합니다."
  syntax:
    content: public string[] KnownReferencePaths { get; set; }
    return:
      type: System.String[]
      description: "빌드는 동안 변경 되지 않는 참조 된 어셈블리의 경로입니다."
  overload: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.KnownReferencePaths*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.Language
  id: Language
  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass1
  langs:
  - csharp
  name: Language
  nameWithType: MarkupCompilePass1.Language
  fullName: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.Language
  type: Property
  assemblies:
  - PresentationBuildTasks
  namespace: Microsoft.Build.Tasks.Windows
  summary: "컴파일러가 지 원하는 관리 되는 언어를 가져오거나 설정 합니다."
  syntax:
    content: public string Language { get; set; }
    return:
      type: System.String
      description: "관리 되는 언어 컴파일러 지원입니다. The valid values are **C#**, **VB**, and **C++**."
  overload: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.Language*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.LanguageSourceExtension
  id: LanguageSourceExtension
  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass1
  langs:
  - csharp
  name: LanguageSourceExtension
  nameWithType: MarkupCompilePass1.LanguageSourceExtension
  fullName: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.LanguageSourceExtension
  type: Property
  assemblies:
  - PresentationBuildTasks
  namespace: Microsoft.Build.Tasks.Windows
  summary: "관리 되는 생성 된 코드 파일의 확장명에 추가 되는 확장명을 가져오거나 설정 합니다."
  syntax:
    content: public string LanguageSourceExtension { get; set; }
    return:
      type: System.String
      description: "생성 된 확장에 추가 되는 확장 코드 파일을 관리 합니다."
  overload: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.LanguageSourceExtension*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.LocalizationDirectivesToLocFile
  id: LocalizationDirectivesToLocFile
  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass1
  langs:
  - csharp
  name: LocalizationDirectivesToLocFile
  nameWithType: MarkupCompilePass1.LocalizationDirectivesToLocFile
  fullName: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.LocalizationDirectivesToLocFile
  type: Property
  assemblies:
  - PresentationBuildTasks
  namespace: Microsoft.Build.Tasks.Windows
  summary: "각각에 대 한 지역화 정보를 생성 하는 방법을 지정 하는 값을 가져오거나 설정 합니다. [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)] 파일입니다."
  syntax:
    content: public string LocalizationDirectivesToLocFile { get; set; }
    return:
      type: System.String
      description: "각각에 대 한 지역화 정보를 생성 하는 방법을 지정 하는 값 [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)] 파일입니다. 유효한 값은 **None**, **CommentsOnly**, 및 **모든**합니다."
  overload: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.LocalizationDirectivesToLocFile*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.OutputPath
  id: OutputPath
  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass1
  langs:
  - csharp
  name: OutputPath
  nameWithType: MarkupCompilePass1.OutputPath
  fullName: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.OutputPath
  type: Property
  assemblies:
  - PresentationBuildTasks
  namespace: Microsoft.Build.Tasks.Windows
  summary: "생성 된 코드 파일의 위치를 가져오거나 설정 합니다."
  syntax:
    content: public string OutputPath { get; set; }
    return:
      type: System.String
      description: "생성 된 코드 파일의 위치입니다."
  overload: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.OutputPath*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.OutputType
  id: OutputType
  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass1
  langs:
  - csharp
  name: OutputType
  nameWithType: MarkupCompilePass1.OutputType
  fullName: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.OutputType
  type: Property
  assemblies:
  - PresentationBuildTasks
  namespace: Microsoft.Build.Tasks.Windows
  summary: "어셈블리의 출력 형식을 가져오거나 설정 합니다."
  syntax:
    content: public string OutputType { get; set; }
    return:
      type: System.String
      description: "프로젝트에서 생성 되는 어셈블리의 형식입니다. 유효한 값은 **winexe**, **exe**, **라이브러리**, 및 **netmodule**합니다."
  overload: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.OutputType*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.PageMarkup
  id: PageMarkup
  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass1
  langs:
  - csharp
  name: PageMarkup
  nameWithType: MarkupCompilePass1.PageMarkup
  fullName: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.PageMarkup
  type: Property
  assemblies:
  - PresentationBuildTasks
  namespace: Microsoft.Build.Tasks.Windows
  summary: "목록을 가져오거나 설정 합니다. [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] 처리할 파일을 합니다."
  syntax:
    content: public Microsoft.Build.Framework.ITaskItem[] PageMarkup { get; set; }
    return:
      type: Microsoft.Build.Framework.ITaskItem[]
      description: "목록은 [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] 처리할 파일을 합니다."
  overload: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.PageMarkup*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.References
  id: References
  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass1
  langs:
  - csharp
  name: References
  nameWithType: MarkupCompilePass1.References
  fullName: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.References
  type: Property
  assemblies:
  - PresentationBuildTasks
  namespace: Microsoft.Build.Tasks.Windows
  summary: "어셈블리 참조를 가져오거나 설정 합니다."
  syntax:
    content: public Microsoft.Build.Framework.ITaskItem[] References { get; set; }
    return:
      type: Microsoft.Build.Framework.ITaskItem[]
      description: "어셈블리 참조입니다."
  overload: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.References*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.RequirePass2ForMainAssembly
  id: RequirePass2ForMainAssembly
  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass1
  langs:
  - csharp
  name: RequirePass2ForMainAssembly
  nameWithType: MarkupCompilePass1.RequirePass2ForMainAssembly
  fullName: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.RequirePass2ForMainAssembly
  type: Property
  assemblies:
  - PresentationBuildTasks
  namespace: Microsoft.Build.Tasks.Windows
  summary: "지역화할 수 없는 프로젝트에 포함 되어 있는지 여부를 나타내는 값 가져오거나 [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] 주 어셈블리에 포함 되는 로컬 형식을 참조 하는 파일입니다."
  syntax:
    content: public bool RequirePass2ForMainAssembly { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>프로젝트를 지역화할 수 없는 포함 되어 있으면 [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] 고, 그러지 않으면 주 어셈블리에 포함 되는 로컬 형식을 참조 하는 파일 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.RequirePass2ForMainAssembly*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.RequirePass2ForSatelliteAssembly
  id: RequirePass2ForSatelliteAssembly
  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass1
  langs:
  - csharp
  name: RequirePass2ForSatelliteAssembly
  nameWithType: MarkupCompilePass1.RequirePass2ForSatelliteAssembly
  fullName: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.RequirePass2ForSatelliteAssembly
  type: Property
  assemblies:
  - PresentationBuildTasks
  namespace: Microsoft.Build.Tasks.Windows
  summary: "지역화할 수 있는 프로젝트에 포함 되어 있는지 여부를 나타내는 값 가져오거나 [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] 위성 어셈블리에 포함 되는 로컬 형식을 참조 하는 파일입니다."
  syntax:
    content: public bool RequirePass2ForSatelliteAssembly { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>p 프로젝트 지역화할 수 있는 경우 [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] 고, 그러지 않으면 위성 어셈블리에 포함 되는 로컬 형식을 참조 하는 파일 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.RequirePass2ForSatelliteAssembly*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.RootNamespace
  id: RootNamespace
  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass1
  langs:
  - csharp
  name: RootNamespace
  nameWithType: MarkupCompilePass1.RootNamespace
  fullName: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.RootNamespace
  type: Property
  assemblies:
  - PresentationBuildTasks
  namespace: Microsoft.Build.Tasks.Windows
  summary: "프로젝트 내의 클래스의 루트 네임 스페이스를 가져오거나 설정 합니다."
  syntax:
    content: public string RootNamespace { get; set; }
    return:
      type: System.String
      description: "프로젝트 내의 클래스의 루트 네임 스페이스입니다."
  overload: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.RootNamespace*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.SourceCodeFiles
  id: SourceCodeFiles
  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass1
  langs:
  - csharp
  name: SourceCodeFiles
  nameWithType: MarkupCompilePass1.SourceCodeFiles
  fullName: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.SourceCodeFiles
  type: Property
  assemblies:
  - PresentationBuildTasks
  namespace: Microsoft.Build.Tasks.Windows
  summary: "현재 프로젝트에 대 한 소스 코드 파일 목록을 가져오거나 설정 합니다."
  syntax:
    content: public Microsoft.Build.Framework.ITaskItem[] SourceCodeFiles { get; set; }
    return:
      type: Microsoft.Build.Framework.ITaskItem[]
      description: "현재 프로젝트에 대 한 소스 코드 파일 목록입니다."
  overload: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.SourceCodeFiles*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.SplashScreen
  id: SplashScreen
  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass1
  langs:
  - csharp
  name: SplashScreen
  nameWithType: MarkupCompilePass1.SplashScreen
  fullName: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.SplashScreen
  type: Property
  assemblies:
  - PresentationBuildTasks
  namespace: Microsoft.Build.Tasks.Windows
  summary: "응용 프로그램을 초기화 하기 전에 표시할 시작 화면 이미지를 가져오거나 설정 합니다."
  syntax:
    content: public Microsoft.Build.Framework.ITaskItem[] SplashScreen { get; set; }
    return:
      type: Microsoft.Build.Framework.ITaskItem[]
      description: "시작 화면 이미지입니다."
  overload: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.SplashScreen*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.UICulture
  id: UICulture
  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass1
  langs:
  - csharp
  name: UICulture
  nameWithType: MarkupCompilePass1.UICulture
  fullName: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.UICulture
  type: Property
  assemblies:
  - PresentationBuildTasks
  namespace: Microsoft.Build.Tasks.Windows
  summary: "문화권 위성 어셈블리를 포함할 경우 생성 된을 지정 하는 값을 가져오거나 설정 합니다. [!INCLUDE[TLA#tla_baml](~/add/includes/tlasharptla-baml-md.md)] 파일입니다."
  syntax:
    content: public string UICulture { get; set; }
    return:
      type: System.String
      description: "A 문화권 위성 어셈블리를 포함할 경우 생성 된을 지정 하는 값 [!INCLUDE[TLA#tla_baml](~/add/includes/tlasharptla-baml-md.md)] 파일입니다."
  overload: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.UICulture*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.XamlDebuggingInformation
  id: XamlDebuggingInformation
  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass1
  langs:
  - csharp
  name: XamlDebuggingInformation
  nameWithType: MarkupCompilePass1.XamlDebuggingInformation
  fullName: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.XamlDebuggingInformation
  type: Property
  assemblies:
  - PresentationBuildTasks
  namespace: Microsoft.Build.Tasks.Windows
  summary: "진단 정보 생성 되 고 컴파일된에 포함 되어 있는지 여부를 나타내는 값을 가져오거나 설정 합니다. [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] 디버깅에 도움이 되도록 합니다."
  syntax:
    content: public bool XamlDebuggingInformation { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>진단 정보 생성 되 고 컴파일된에 포함 된 경우 [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] ; 디버깅에 도움이 되도록 그렇지 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.XamlDebuggingInformation*
  exceptions: []
  platform:
  - net462
references:
- uid: Microsoft.Build.Utilities.Task
  isExternal: false
  name: Microsoft.Build.Utilities.Task
- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.#ctor
  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass1
  isExternal: false
  name: MarkupCompilePass1()
  nameWithType: MarkupCompilePass1.MarkupCompilePass1()
  fullName: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.MarkupCompilePass1()
- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.AllGeneratedFiles
  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass1
  isExternal: false
  name: AllGeneratedFiles
  nameWithType: MarkupCompilePass1.AllGeneratedFiles
  fullName: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.AllGeneratedFiles
- uid: Microsoft.Build.Framework.ITaskItem[]
  parent: Microsoft.Build.Framework
  isExternal: false
  name: ITaskItem
  nameWithType: ITaskItem
  fullName: Microsoft.Build.Framework.ITaskItem[]
  spec.csharp:
  - uid: Microsoft.Build.Framework.ITaskItem
    name: ITaskItem
    nameWithType: ITaskItem
    fullName: ITaskItem[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.AlwaysCompileMarkupFilesInSeparateDomain
  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass1
  isExternal: false
  name: AlwaysCompileMarkupFilesInSeparateDomain
  nameWithType: MarkupCompilePass1.AlwaysCompileMarkupFilesInSeparateDomain
  fullName: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.AlwaysCompileMarkupFilesInSeparateDomain
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.ApplicationMarkup
  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass1
  isExternal: false
  name: ApplicationMarkup
  nameWithType: MarkupCompilePass1.ApplicationMarkup
  fullName: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.ApplicationMarkup
- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.AssembliesGeneratedDuringBuild
  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass1
  isExternal: false
  name: AssembliesGeneratedDuringBuild
  nameWithType: MarkupCompilePass1.AssembliesGeneratedDuringBuild
  fullName: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.AssembliesGeneratedDuringBuild
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.AssemblyName
  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass1
  isExternal: false
  name: AssemblyName
  nameWithType: MarkupCompilePass1.AssemblyName
  fullName: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.AssemblyName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.AssemblyPublicKeyToken
  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass1
  isExternal: false
  name: AssemblyPublicKeyToken
  nameWithType: MarkupCompilePass1.AssemblyPublicKeyToken
  fullName: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.AssemblyPublicKeyToken
- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.AssemblyVersion
  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass1
  isExternal: false
  name: AssemblyVersion
  nameWithType: MarkupCompilePass1.AssemblyVersion
  fullName: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.AssemblyVersion
- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.ContentFiles
  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass1
  isExternal: false
  name: ContentFiles
  nameWithType: MarkupCompilePass1.ContentFiles
  fullName: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.ContentFiles
- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.DefineConstants
  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass1
  isExternal: false
  name: DefineConstants
  nameWithType: MarkupCompilePass1.DefineConstants
  fullName: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.DefineConstants
- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.Execute
  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass1
  isExternal: false
  name: Execute()
  nameWithType: MarkupCompilePass1.Execute()
  fullName: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.Execute()
- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.ExtraBuildControlFiles
  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass1
  isExternal: false
  name: ExtraBuildControlFiles
  nameWithType: MarkupCompilePass1.ExtraBuildControlFiles
  fullName: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.ExtraBuildControlFiles
- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.GeneratedBamlFiles
  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass1
  isExternal: false
  name: GeneratedBamlFiles
  nameWithType: MarkupCompilePass1.GeneratedBamlFiles
  fullName: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.GeneratedBamlFiles
- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.GeneratedCodeFiles
  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass1
  isExternal: false
  name: GeneratedCodeFiles
  nameWithType: MarkupCompilePass1.GeneratedCodeFiles
  fullName: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.GeneratedCodeFiles
- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.GeneratedLocalizationFiles
  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass1
  isExternal: false
  name: GeneratedLocalizationFiles
  nameWithType: MarkupCompilePass1.GeneratedLocalizationFiles
  fullName: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.GeneratedLocalizationFiles
- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.HostInBrowser
  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass1
  isExternal: false
  name: HostInBrowser
  nameWithType: MarkupCompilePass1.HostInBrowser
  fullName: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.HostInBrowser
- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.IsRunningInVisualStudio
  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass1
  isExternal: false
  name: IsRunningInVisualStudio
  nameWithType: MarkupCompilePass1.IsRunningInVisualStudio
  fullName: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.IsRunningInVisualStudio
- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.KnownReferencePaths
  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass1
  isExternal: false
  name: KnownReferencePaths
  nameWithType: MarkupCompilePass1.KnownReferencePaths
  fullName: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.KnownReferencePaths
- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.Language
  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass1
  isExternal: false
  name: Language
  nameWithType: MarkupCompilePass1.Language
  fullName: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.Language
- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.LanguageSourceExtension
  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass1
  isExternal: false
  name: LanguageSourceExtension
  nameWithType: MarkupCompilePass1.LanguageSourceExtension
  fullName: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.LanguageSourceExtension
- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.LocalizationDirectivesToLocFile
  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass1
  isExternal: false
  name: LocalizationDirectivesToLocFile
  nameWithType: MarkupCompilePass1.LocalizationDirectivesToLocFile
  fullName: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.LocalizationDirectivesToLocFile
- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.OutputPath
  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass1
  isExternal: false
  name: OutputPath
  nameWithType: MarkupCompilePass1.OutputPath
  fullName: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.OutputPath
- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.OutputType
  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass1
  isExternal: false
  name: OutputType
  nameWithType: MarkupCompilePass1.OutputType
  fullName: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.OutputType
- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.PageMarkup
  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass1
  isExternal: false
  name: PageMarkup
  nameWithType: MarkupCompilePass1.PageMarkup
  fullName: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.PageMarkup
- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.References
  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass1
  isExternal: false
  name: References
  nameWithType: MarkupCompilePass1.References
  fullName: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.References
- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.RequirePass2ForMainAssembly
  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass1
  isExternal: false
  name: RequirePass2ForMainAssembly
  nameWithType: MarkupCompilePass1.RequirePass2ForMainAssembly
  fullName: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.RequirePass2ForMainAssembly
- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.RequirePass2ForSatelliteAssembly
  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass1
  isExternal: false
  name: RequirePass2ForSatelliteAssembly
  nameWithType: MarkupCompilePass1.RequirePass2ForSatelliteAssembly
  fullName: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.RequirePass2ForSatelliteAssembly
- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.RootNamespace
  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass1
  isExternal: false
  name: RootNamespace
  nameWithType: MarkupCompilePass1.RootNamespace
  fullName: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.RootNamespace
- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.SourceCodeFiles
  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass1
  isExternal: false
  name: SourceCodeFiles
  nameWithType: MarkupCompilePass1.SourceCodeFiles
  fullName: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.SourceCodeFiles
- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.SplashScreen
  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass1
  isExternal: false
  name: SplashScreen
  nameWithType: MarkupCompilePass1.SplashScreen
  fullName: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.SplashScreen
- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.UICulture
  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass1
  isExternal: false
  name: UICulture
  nameWithType: MarkupCompilePass1.UICulture
  fullName: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.UICulture
- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.XamlDebuggingInformation
  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass1
  isExternal: false
  name: XamlDebuggingInformation
  nameWithType: MarkupCompilePass1.XamlDebuggingInformation
  fullName: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.XamlDebuggingInformation
- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.#ctor*
  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass1
  isExternal: false
  name: MarkupCompilePass1
  nameWithType: MarkupCompilePass1.MarkupCompilePass1
- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.AllGeneratedFiles*
  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass1
  isExternal: false
  name: AllGeneratedFiles
  nameWithType: MarkupCompilePass1.AllGeneratedFiles
- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.AlwaysCompileMarkupFilesInSeparateDomain*
  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass1
  isExternal: false
  name: AlwaysCompileMarkupFilesInSeparateDomain
  nameWithType: MarkupCompilePass1.AlwaysCompileMarkupFilesInSeparateDomain
- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.ApplicationMarkup*
  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass1
  isExternal: false
  name: ApplicationMarkup
  nameWithType: MarkupCompilePass1.ApplicationMarkup
- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.AssembliesGeneratedDuringBuild*
  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass1
  isExternal: false
  name: AssembliesGeneratedDuringBuild
  nameWithType: MarkupCompilePass1.AssembliesGeneratedDuringBuild
- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.AssemblyName*
  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass1
  isExternal: false
  name: AssemblyName
  nameWithType: MarkupCompilePass1.AssemblyName
- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.AssemblyPublicKeyToken*
  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass1
  isExternal: false
  name: AssemblyPublicKeyToken
  nameWithType: MarkupCompilePass1.AssemblyPublicKeyToken
- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.AssemblyVersion*
  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass1
  isExternal: false
  name: AssemblyVersion
  nameWithType: MarkupCompilePass1.AssemblyVersion
- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.ContentFiles*
  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass1
  isExternal: false
  name: ContentFiles
  nameWithType: MarkupCompilePass1.ContentFiles
- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.DefineConstants*
  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass1
  isExternal: false
  name: DefineConstants
  nameWithType: MarkupCompilePass1.DefineConstants
- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.Execute*
  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass1
  isExternal: false
  name: Execute
  nameWithType: MarkupCompilePass1.Execute
- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.ExtraBuildControlFiles*
  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass1
  isExternal: false
  name: ExtraBuildControlFiles
  nameWithType: MarkupCompilePass1.ExtraBuildControlFiles
- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.GeneratedBamlFiles*
  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass1
  isExternal: false
  name: GeneratedBamlFiles
  nameWithType: MarkupCompilePass1.GeneratedBamlFiles
- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.GeneratedCodeFiles*
  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass1
  isExternal: false
  name: GeneratedCodeFiles
  nameWithType: MarkupCompilePass1.GeneratedCodeFiles
- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.GeneratedLocalizationFiles*
  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass1
  isExternal: false
  name: GeneratedLocalizationFiles
  nameWithType: MarkupCompilePass1.GeneratedLocalizationFiles
- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.HostInBrowser*
  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass1
  isExternal: false
  name: HostInBrowser
  nameWithType: MarkupCompilePass1.HostInBrowser
- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.IsRunningInVisualStudio*
  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass1
  isExternal: false
  name: IsRunningInVisualStudio
  nameWithType: MarkupCompilePass1.IsRunningInVisualStudio
- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.KnownReferencePaths*
  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass1
  isExternal: false
  name: KnownReferencePaths
  nameWithType: MarkupCompilePass1.KnownReferencePaths
- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.Language*
  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass1
  isExternal: false
  name: Language
  nameWithType: MarkupCompilePass1.Language
- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.LanguageSourceExtension*
  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass1
  isExternal: false
  name: LanguageSourceExtension
  nameWithType: MarkupCompilePass1.LanguageSourceExtension
- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.LocalizationDirectivesToLocFile*
  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass1
  isExternal: false
  name: LocalizationDirectivesToLocFile
  nameWithType: MarkupCompilePass1.LocalizationDirectivesToLocFile
- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.OutputPath*
  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass1
  isExternal: false
  name: OutputPath
  nameWithType: MarkupCompilePass1.OutputPath
- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.OutputType*
  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass1
  isExternal: false
  name: OutputType
  nameWithType: MarkupCompilePass1.OutputType
- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.PageMarkup*
  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass1
  isExternal: false
  name: PageMarkup
  nameWithType: MarkupCompilePass1.PageMarkup
- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.References*
  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass1
  isExternal: false
  name: References
  nameWithType: MarkupCompilePass1.References
- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.RequirePass2ForMainAssembly*
  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass1
  isExternal: false
  name: RequirePass2ForMainAssembly
  nameWithType: MarkupCompilePass1.RequirePass2ForMainAssembly
- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.RequirePass2ForSatelliteAssembly*
  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass1
  isExternal: false
  name: RequirePass2ForSatelliteAssembly
  nameWithType: MarkupCompilePass1.RequirePass2ForSatelliteAssembly
- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.RootNamespace*
  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass1
  isExternal: false
  name: RootNamespace
  nameWithType: MarkupCompilePass1.RootNamespace
- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.SourceCodeFiles*
  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass1
  isExternal: false
  name: SourceCodeFiles
  nameWithType: MarkupCompilePass1.SourceCodeFiles
- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.SplashScreen*
  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass1
  isExternal: false
  name: SplashScreen
  nameWithType: MarkupCompilePass1.SplashScreen
- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.UICulture*
  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass1
  isExternal: false
  name: UICulture
  nameWithType: MarkupCompilePass1.UICulture
- uid: Microsoft.Build.Tasks.Windows.MarkupCompilePass1.XamlDebuggingInformation*
  parent: Microsoft.Build.Tasks.Windows.MarkupCompilePass1
  isExternal: false
  name: XamlDebuggingInformation
  nameWithType: MarkupCompilePass1.XamlDebuggingInformation
