### YamlMime:ManagedReference
items:
- uid: System.Xaml.AttachablePropertyServices
  id: AttachablePropertyServices
  children:
  - System.Xaml.AttachablePropertyServices.CopyPropertiesTo(System.Object,System.Collections.Generic.KeyValuePair{System.Xaml.AttachableMemberIdentifier,System.Object}[],System.Int32)
  - System.Xaml.AttachablePropertyServices.GetAttachedPropertyCount(System.Object)
  - System.Xaml.AttachablePropertyServices.RemoveProperty(System.Object,System.Xaml.AttachableMemberIdentifier)
  - System.Xaml.AttachablePropertyServices.SetProperty(System.Object,System.Xaml.AttachableMemberIdentifier,System.Object)
  - System.Xaml.AttachablePropertyServices.TryGetProperty(System.Object,System.Xaml.AttachableMemberIdentifier,System.Object@)
  - System.Xaml.AttachablePropertyServices.TryGetProperty``1(System.Object,System.Xaml.AttachableMemberIdentifier,``0@)
  langs:
  - csharp
  name: AttachablePropertyServices
  nameWithType: AttachablePropertyServices
  fullName: System.Xaml.AttachablePropertyServices
  type: Class
  summary: "연결 가능한 속성에서 값과 접근자 메서드 정보를 가져올 하 고 연결된 된 속성 저장소와 작동 하는 정적 도우미 메서드를 제공 합니다."
  remarks: "이 클래스의 대부분의 기능은 일반적으로 구현 하는 연결 된 속성 저장소에서 사용 된 <xref:System.Xaml.IAttachedPropertyStore>인터페이스.</xref:System.Xaml.IAttachedPropertyStore> 그러나 저장소 AttachablePropertyServices에 전달 하기 위한 인터페이스와 형식이 아니며 매개 변수와 대신로 형식화 되 `object`합니다. 즉 임의 개체를 전달할 수 있으며이 경우는 내부 기본 가능한 속성 저장소에 사용 됩니다.       임의의 개체에 대 한 모범 사례는 저장소와 연결 될 수 있는 개체를 전달 합니다. 전달 하지 마십시오 `null` 되지 않았는지를 나타내기 위해는 <xref:System.Xaml.IAttachedPropertyStore>사용할.</xref:System.Xaml.IAttachedPropertyStore> 전달 `null` 아무 작업도 수행 하지 않는 코드 경로가 입력 합니다. Null이 아닌 개체를 전달 이지만로 계산 `null` 시도한에 <xref:System.Xaml.IAttachedPropertyStore>캐스팅, 기본 연결 가능한 속성 저장소를 사용 하 여.</xref:System.Xaml.IAttachedPropertyStore>"
  syntax:
    content: public static class AttachablePropertyServices
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xaml.AttachablePropertyServices.CopyPropertiesTo(System.Object,System.Collections.Generic.KeyValuePair{System.Xaml.AttachableMemberIdentifier,System.Object}[],System.Int32)
  id: CopyPropertiesTo(System.Object,System.Collections.Generic.KeyValuePair{System.Xaml.AttachableMemberIdentifier,System.Object}[],System.Int32)
  parent: System.Xaml.AttachablePropertyServices
  langs:
  - csharp
  name: CopyPropertiesTo(Object,KeyValuePair<AttachableMemberIdentifier,Object>,Int32)
  nameWithType: AttachablePropertyServices.CopyPropertiesTo(Object,KeyValuePair<AttachableMemberIdentifier,Object>,Int32)
  fullName: System.Xaml.AttachablePropertyServices.CopyPropertiesTo(Object,KeyValuePair<AttachableMemberIdentifier,Object>,Int32)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "모든 연결 가능한 속성/값 쌍 지정된 된 연결 가능한 속성 저장소 대상 배열에 복사합니다."
  remarks: "이 메서드를 호출 하면 호출 내부 <xref:System.Collections.Generic.ICollection%601.CopyTo%2A>구현 제한 된이 항목에 나열 되지 않은 예외의 소스가 될 수 있는 키/값 쌍을 사용 합니다.</xref:System.Collections.Generic.ICollection%601.CopyTo%2A>"
  syntax:
    content: public static void CopyPropertiesTo (object instance, System.Collections.Generic.KeyValuePair<System.Xaml.AttachableMemberIdentifier,object>[] array, int index);
    parameters:
    - id: instance
      type: System.Object
      description: "구현 하는 특정 연결 가능한 속성이 저장소 <xref href=&quot;System.Xaml.IAttachedPropertyStore&quot;> </xref>; 또는 null이 아닌 개체 고정 기본 연결 가능한 속성 저장소에 액세스할 수 있습니다."
    - id: array
      type: System.Collections.Generic.KeyValuePair{System.Xaml.AttachableMemberIdentifier,System.Object}[]
      description: "대상 배열입니다. 배열의 제네릭 배열 차원 없이 전달 해야 하며의 구성 요소가 있어야 <xref href=&quot;System.Xaml.AttachableMemberIdentifier&quot;> </xref> 및 <xref uid=&quot;langword_csharp_object&quot; name=&quot;object&quot; href=&quot;&quot;> </xref>합니다."
    - id: index
      type: System.Int32
      description: "복사할 원본 인덱스입니다."
  overload: System.Xaml.AttachablePropertyServices.CopyPropertiesTo*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.AttachablePropertyServices.GetAttachedPropertyCount(System.Object)
  id: GetAttachedPropertyCount(System.Object)
  parent: System.Xaml.AttachablePropertyServices
  langs:
  - csharp
  name: GetAttachedPropertyCount(Object)
  nameWithType: AttachablePropertyServices.GetAttachedPropertyCount(Object)
  fullName: System.Xaml.AttachablePropertyServices.GetAttachedPropertyCount(Object)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "지정된 된 저장소에 있는 연결 가능한 속성 항목의 개수를 반환 합니다."
  syntax:
    content: public static int GetAttachedPropertyCount (object instance);
    parameters:
    - id: instance
      type: System.Object
      description: "구현 하는 특정 연결 가능한 속성이 저장소 <xref href=&quot;System.Xaml.IAttachedPropertyStore&quot;> </xref>; 또는 null이 아닌 개체 고정 기본 연결 가능한 속성 저장소에 액세스할 수 있습니다."
    return:
      type: System.Int32
      description: "저장소에 있는 항목의 정수 수입니다."
  overload: System.Xaml.AttachablePropertyServices.GetAttachedPropertyCount*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.AttachablePropertyServices.RemoveProperty(System.Object,System.Xaml.AttachableMemberIdentifier)
  id: RemoveProperty(System.Object,System.Xaml.AttachableMemberIdentifier)
  parent: System.Xaml.AttachablePropertyServices
  langs:
  - csharp
  name: RemoveProperty(Object,AttachableMemberIdentifier)
  nameWithType: AttachablePropertyServices.RemoveProperty(Object,AttachableMemberIdentifier)
  fullName: System.Xaml.AttachablePropertyServices.RemoveProperty(Object,AttachableMemberIdentifier)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "지정된 된 저장소에서 지정된 된 연결 가능한 속성에 대 한 항목을 제거합니다."
  remarks: "인스턴스당; 저장소가 있으므로 따라서 저장소에에서는 `name` 값은 모호 수 없습니다."
  syntax:
    content: public static bool RemoveProperty (object instance, System.Xaml.AttachableMemberIdentifier name);
    parameters:
    - id: instance
      type: System.Object
      description: "구현 하는 특정 연결 가능한 속성이 저장소 <xref href=&quot;System.Xaml.IAttachedPropertyStore&quot;> </xref>; 또는 null이 아닌 개체 고정 기본 연결 가능한 속성 저장소에 액세스할 수 있습니다."
    - id: name
      type: System.Xaml.AttachableMemberIdentifier
      description: "저장소에서 제거 하려면 연결 가능한 속성 항목에 대 한 식별자입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우에 대 한 연결 가능한 속성 항목이 <code> name </code> 가 저장소에서 검색 하 고 여기에서 제거 되지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Xaml.AttachablePropertyServices.RemoveProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.AttachablePropertyServices.SetProperty(System.Object,System.Xaml.AttachableMemberIdentifier,System.Object)
  id: SetProperty(System.Object,System.Xaml.AttachableMemberIdentifier,System.Object)
  parent: System.Xaml.AttachablePropertyServices
  langs:
  - csharp
  name: SetProperty(Object,AttachableMemberIdentifier,Object)
  nameWithType: AttachablePropertyServices.SetProperty(Object,AttachableMemberIdentifier,Object)
  fullName: System.Xaml.AttachablePropertyServices.SetProperty(Object,AttachableMemberIdentifier,Object)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "지정된 된 저장소에서 지정된 된 연결 가능한 속성에 대 한 값을 설정합니다."
  syntax:
    content: public static void SetProperty (object instance, System.Xaml.AttachableMemberIdentifier name, object value);
    parameters:
    - id: instance
      type: System.Object
      description: "구현 하는 특정 연결 가능한 속성이 저장소 <xref href=&quot;System.Xaml.IAttachedPropertyStore&quot;> </xref>; 또는 정적 기본 연결 가능한 속성 저장소를 사용 하려면 null이 아닌 개체입니다."
    - id: name
      type: System.Xaml.AttachableMemberIdentifier
      description: "값을 설정 하는 연결 가능한 속성 항목의 식별자입니다."
    - id: value
      type: System.Object
      description: "설정할 값입니다."
  overload: System.Xaml.AttachablePropertyServices.SetProperty*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "저장소에 값을 설정할 수 없습니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Xaml.AttachablePropertyServices.TryGetProperty(System.Object,System.Xaml.AttachableMemberIdentifier,System.Object@)
  id: TryGetProperty(System.Object,System.Xaml.AttachableMemberIdentifier,System.Object@)
  parent: System.Xaml.AttachablePropertyServices
  langs:
  - csharp
  name: TryGetProperty(Object,AttachableMemberIdentifier,Object)
  nameWithType: AttachablePropertyServices.TryGetProperty(Object,AttachableMemberIdentifier,Object)
  fullName: System.Xaml.AttachablePropertyServices.TryGetProperty(Object,AttachableMemberIdentifier,Object)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "지정된 된 저장소에서 지정된 된 연결 가능한 속성에 대 한 값을 가져오려고 시도 합니다. 특정 연결 가능한 속성 저장소에 없는 경우 예외를 throw 하지 않습니다."
  syntax:
    content: public static bool TryGetProperty (object instance, System.Xaml.AttachableMemberIdentifier name, out object value);
    parameters:
    - id: instance
      type: System.Object
      description: "구현 하는 특정 연결 가능한 속성이 저장소 <xref href=&quot;System.Xaml.IAttachedPropertyStore&quot;> </xref>; 또는 정적 기본 연결 가능한 속성 저장소를 사용 하려면 null이 아닌 개체입니다."
    - id: name
      type: System.Xaml.AttachableMemberIdentifier
      description: "값을 가져오는 연결 가능한 속성 항목의 식별자입니다."
    - id: value
      type: System.Object
      description: "Out 매개 변수입니다. 이 메서드가 반환 하는 경우 값에 대 한 대상 개체를 포함 `name` 저장소에 있고 값입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우에 대 한 연결 가능한 속성 항목이 <code> name </code> 저장소에 있고 값에 게시 된 <code> value </code>, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Xaml.AttachablePropertyServices.TryGetProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.AttachablePropertyServices.TryGetProperty``1(System.Object,System.Xaml.AttachableMemberIdentifier,``0@)
  id: TryGetProperty``1(System.Object,System.Xaml.AttachableMemberIdentifier,``0@)
  parent: System.Xaml.AttachablePropertyServices
  langs:
  - csharp
  name: TryGetProperty(Object,AttachableMemberIdentifier,T)
  nameWithType: AttachablePropertyServices.TryGetProperty(Object,AttachableMemberIdentifier,T)
  fullName: System.Xaml.AttachablePropertyServices.TryGetProperty(Object,AttachableMemberIdentifier,T)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  syntax:
    content: public static bool TryGetProperty<T> (object instance, System.Xaml.AttachableMemberIdentifier name, out T value);
    parameters:
    - id: instance
      type: System.Object
      description: "추가할 수 있습니다."
    - id: name
      type: System.Xaml.AttachableMemberIdentifier
      description: "추가할 수 있습니다."
    - id: value
      type: T
      description: "추가할 수 있습니다."
    return:
      type: System.Boolean
      description: "추가할 수 있습니다."
  overload: System.Xaml.AttachablePropertyServices.TryGetProperty<T>*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Xaml.AttachablePropertyServices.CopyPropertiesTo(System.Object,System.Collections.Generic.KeyValuePair{System.Xaml.AttachableMemberIdentifier,System.Object}[],System.Int32)
  parent: System.Xaml.AttachablePropertyServices
  isExternal: false
  name: CopyPropertiesTo(Object,KeyValuePair<AttachableMemberIdentifier,Object>,Int32)
  nameWithType: AttachablePropertyServices.CopyPropertiesTo(Object,KeyValuePair<AttachableMemberIdentifier,Object>,Int32)
  fullName: System.Xaml.AttachablePropertyServices.CopyPropertiesTo(Object,KeyValuePair<AttachableMemberIdentifier,Object>,Int32)
- uid: System.Collections.Generic.KeyValuePair{System.Xaml.AttachableMemberIdentifier,System.Object}[]
  parent: System.Collections.Generic
  isExternal: true
  name: KeyValuePair<AttachableMemberIdentifier,Object>
  nameWithType: KeyValuePair<AttachableMemberIdentifier,Object>
  fullName: System.Collections.Generic.KeyValuePair<System.Xaml.AttachableMemberIdentifier,System.Object>[]
  spec.csharp:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair<System.Xaml.AttachableMemberIdentifier,System.Object>[]
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xaml.AttachableMemberIdentifier
    name: AttachableMemberIdentifier
    nameWithType: AttachableMemberIdentifier
    fullName: AttachableMemberIdentifier
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Xaml.AttachablePropertyServices.GetAttachedPropertyCount(System.Object)
  parent: System.Xaml.AttachablePropertyServices
  isExternal: false
  name: GetAttachedPropertyCount(Object)
  nameWithType: AttachablePropertyServices.GetAttachedPropertyCount(Object)
  fullName: System.Xaml.AttachablePropertyServices.GetAttachedPropertyCount(Object)
- uid: System.Xaml.AttachablePropertyServices.RemoveProperty(System.Object,System.Xaml.AttachableMemberIdentifier)
  parent: System.Xaml.AttachablePropertyServices
  isExternal: false
  name: RemoveProperty(Object,AttachableMemberIdentifier)
  nameWithType: AttachablePropertyServices.RemoveProperty(Object,AttachableMemberIdentifier)
  fullName: System.Xaml.AttachablePropertyServices.RemoveProperty(Object,AttachableMemberIdentifier)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xaml.AttachableMemberIdentifier
  parent: System.Xaml
  isExternal: false
  name: AttachableMemberIdentifier
  nameWithType: AttachableMemberIdentifier
  fullName: System.Xaml.AttachableMemberIdentifier
- uid: System.Xaml.AttachablePropertyServices.SetProperty(System.Object,System.Xaml.AttachableMemberIdentifier,System.Object)
  parent: System.Xaml.AttachablePropertyServices
  isExternal: false
  name: SetProperty(Object,AttachableMemberIdentifier,Object)
  nameWithType: AttachablePropertyServices.SetProperty(Object,AttachableMemberIdentifier,Object)
  fullName: System.Xaml.AttachablePropertyServices.SetProperty(Object,AttachableMemberIdentifier,Object)
- uid: System.Xaml.AttachablePropertyServices.TryGetProperty(System.Object,System.Xaml.AttachableMemberIdentifier,System.Object@)
  parent: System.Xaml.AttachablePropertyServices
  isExternal: false
  name: TryGetProperty(Object,AttachableMemberIdentifier,Object)
  nameWithType: AttachablePropertyServices.TryGetProperty(Object,AttachableMemberIdentifier,Object)
  fullName: System.Xaml.AttachablePropertyServices.TryGetProperty(Object,AttachableMemberIdentifier,Object)
- uid: System.Xaml.AttachablePropertyServices.TryGetProperty``1(System.Object,System.Xaml.AttachableMemberIdentifier,``0@)
  parent: System.Xaml.AttachablePropertyServices
  isExternal: false
  name: TryGetProperty(Object,AttachableMemberIdentifier,T)
  nameWithType: AttachablePropertyServices.TryGetProperty(Object,AttachableMemberIdentifier,T)
  fullName: System.Xaml.AttachablePropertyServices.TryGetProperty(Object,AttachableMemberIdentifier,T)
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.Xaml.AttachablePropertyServices.CopyPropertiesTo*
  parent: System.Xaml.AttachablePropertyServices
  isExternal: false
  name: CopyPropertiesTo
  nameWithType: AttachablePropertyServices.CopyPropertiesTo
- uid: System.Xaml.AttachablePropertyServices.GetAttachedPropertyCount*
  parent: System.Xaml.AttachablePropertyServices
  isExternal: false
  name: GetAttachedPropertyCount
  nameWithType: AttachablePropertyServices.GetAttachedPropertyCount
- uid: System.Xaml.AttachablePropertyServices.RemoveProperty*
  parent: System.Xaml.AttachablePropertyServices
  isExternal: false
  name: RemoveProperty
  nameWithType: AttachablePropertyServices.RemoveProperty
- uid: System.Xaml.AttachablePropertyServices.SetProperty*
  parent: System.Xaml.AttachablePropertyServices
  isExternal: false
  name: SetProperty
  nameWithType: AttachablePropertyServices.SetProperty
- uid: System.Xaml.AttachablePropertyServices.TryGetProperty*
  parent: System.Xaml.AttachablePropertyServices
  isExternal: false
  name: TryGetProperty
  nameWithType: AttachablePropertyServices.TryGetProperty
- uid: System.Xaml.AttachablePropertyServices.TryGetProperty<T>*
  parent: System.Xaml.AttachablePropertyServices
  isExternal: false
  name: TryGetProperty<T>
  nameWithType: AttachablePropertyServices.TryGetProperty<T>
