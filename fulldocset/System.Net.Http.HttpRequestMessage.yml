### YamlMime:ManagedReference
items:
- uid: System.Net.Http.HttpRequestMessage
  id: HttpRequestMessage
  children:
  - System.Net.Http.HttpRequestMessage.#ctor
  - System.Net.Http.HttpRequestMessage.#ctor(System.Net.Http.HttpMethod,System.String)
  - System.Net.Http.HttpRequestMessage.#ctor(System.Net.Http.HttpMethod,System.Uri)
  - System.Net.Http.HttpRequestMessage.Content
  - System.Net.Http.HttpRequestMessage.Dispose
  - System.Net.Http.HttpRequestMessage.Dispose(System.Boolean)
  - System.Net.Http.HttpRequestMessage.Headers
  - System.Net.Http.HttpRequestMessage.Method
  - System.Net.Http.HttpRequestMessage.Properties
  - System.Net.Http.HttpRequestMessage.RequestUri
  - System.Net.Http.HttpRequestMessage.ToString
  - System.Net.Http.HttpRequestMessage.Version
  langs:
  - csharp
  name: HttpRequestMessage
  nameWithType: HttpRequestMessage
  fullName: System.Net.Http.HttpRequestMessage
  type: Class
  summary: "HTTP 요청 메시지를 나타냅니다."
  remarks: "HttpRequestMessage 클래스 헤더, HTTP 동사 및 잠재적으로 데이터를 포함합니다."
  syntax:
    content: 'public class HttpRequestMessage : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.Http.HttpRequestMessage.#ctor
  id: '#ctor'
  parent: System.Net.Http.HttpRequestMessage
  langs:
  - csharp
  name: HttpRequestMessage()
  nameWithType: HttpRequestMessage.HttpRequestMessage()
  fullName: System.Net.Http.HttpRequestMessage.HttpRequestMessage()
  type: Constructor
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Net.Http.HttpRequestMessage&quot;> </xref> 클래스입니다."
  syntax:
    content: public HttpRequestMessage ();
    parameters: []
  overload: System.Net.Http.HttpRequestMessage.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.HttpRequestMessage.#ctor(System.Net.Http.HttpMethod,System.String)
  id: '#ctor(System.Net.Http.HttpMethod,System.String)'
  parent: System.Net.Http.HttpRequestMessage
  langs:
  - csharp
  name: HttpRequestMessage(HttpMethod,String)
  nameWithType: HttpRequestMessage.HttpRequestMessage(HttpMethod,String)
  fullName: System.Net.Http.HttpRequestMessage.HttpRequestMessage(HttpMethod,String)
  type: Constructor
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Net.Http.HttpRequestMessage&quot;> </xref> HTTP 메서드 및 요청 <xref:System.Uri>.</xref:System.Uri> 클래스"
  syntax:
    content: public HttpRequestMessage (System.Net.Http.HttpMethod method, string requestUri);
    parameters:
    - id: method
      type: System.Net.Http.HttpMethod
      description: "HTTP 메서드입니다."
    - id: requestUri
      type: System.String
      description: "<xref:System.Uri>.</xref:System.Uri> 요청을 나타내는 문자열"
  overload: System.Net.Http.HttpRequestMessage.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.HttpRequestMessage.#ctor(System.Net.Http.HttpMethod,System.Uri)
  id: '#ctor(System.Net.Http.HttpMethod,System.Uri)'
  parent: System.Net.Http.HttpRequestMessage
  langs:
  - csharp
  name: HttpRequestMessage(HttpMethod,Uri)
  nameWithType: HttpRequestMessage.HttpRequestMessage(HttpMethod,Uri)
  fullName: System.Net.Http.HttpRequestMessage.HttpRequestMessage(HttpMethod,Uri)
  type: Constructor
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Net.Http.HttpRequestMessage&quot;> </xref> HTTP 메서드 및 요청 <xref:System.Uri>.</xref:System.Uri> 클래스"
  syntax:
    content: public HttpRequestMessage (System.Net.Http.HttpMethod method, Uri requestUri);
    parameters:
    - id: method
      type: System.Net.Http.HttpMethod
      description: "HTTP 메서드입니다."
    - id: requestUri
      type: System.Uri
      description: "<xref:System.Uri>요청에.</xref:System.Uri>"
  overload: System.Net.Http.HttpRequestMessage.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.HttpRequestMessage.Content
  id: Content
  parent: System.Net.Http.HttpRequestMessage
  langs:
  - csharp
  name: Content
  nameWithType: HttpRequestMessage.Content
  fullName: System.Net.Http.HttpRequestMessage.Content
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "HTTP 메시지의 내용을 가져오거나 설정 합니다."
  remarks: "RFC 2616에 정의 된 엔터티 본문에는 HTTP 메시지의 내용을 해당 합니다.       HTTP 콘텐츠를 다양 한 클래스를 사용할 수 있습니다. 이 다음과 같습니다.      1.  <xref:System.Net.Http.ByteArrayContent>-에 따라 HTTP 콘텐츠는 바이트 배열입니다.</xref:System.Net.Http.ByteArrayContent>      2.  <xref:System.Net.Http.FormUrlEncodedContent>이름/값 튜플의의 HTTP 콘텐츠 응용 프로그램/x-www-형식-urlencoded MIME 형식을 사용 하 여 인코딩됩니다.</xref:System.Net.Http.FormUrlEncodedContent>      3.  <xref:System.Net.Http.MultipartContent>Serialize 되는 다중을 사용 하 여 HTTP 콘텐츠 / * 콘텐츠 형식 사양을 합니다.</xref:System.Net.Http.MultipartContent>      4.  <xref:System.Net.Http.MultipartFormDataContent>HTTP 콘텐츠 multipart/form-data MIME 형식을 사용 하 여 인코딩됩니다.</xref:System.Net.Http.MultipartFormDataContent>      5.  <xref:System.Net.Http.StreamContent>HTTP 콘텐츠 스트림을 기반으로 합니다.</xref:System.Net.Http.StreamContent>      6.  <xref:System.Net.Http.StringContent>-에 따라 HTTP 콘텐츠는 문자열입니다.</xref:System.Net.Http.StringContent>"
  syntax:
    content: public System.Net.Http.HttpContent Content { get; set; }
    return:
      type: System.Net.Http.HttpContent
      description: "메시지의 내용"
  overload: System.Net.Http.HttpRequestMessage.Content*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.HttpRequestMessage.Dispose
  id: Dispose
  parent: System.Net.Http.HttpRequestMessage
  langs:
  - csharp
  name: Dispose()
  nameWithType: HttpRequestMessage.Dispose()
  fullName: System.Net.Http.HttpRequestMessage.Dispose()
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "사용 하는 관리 되지 않는 리소스와 관리 되는 리소스를 삭제 하는 릴리스는 <xref href=&quot;System.Net.Http.HttpRequestMessage&quot;> </xref>합니다."
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Net.Http.HttpRequestMessage.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.HttpRequestMessage.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Net.Http.HttpRequestMessage
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: HttpRequestMessage.Dispose(Boolean)
  fullName: System.Net.Http.HttpRequestMessage.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "사용 하는 관리 되지 않는 리소스를 해제는 <xref href=&quot;System.Net.Http.HttpRequestMessage&quot;> </xref> 관리 되는 리소스를 선택적으로 삭제 하 고 있습니다."
  remarks: "이 메서드는 public `Dispose()` 메서드 및 <xref:System.Object.Finalize%2A>메서드.</xref:System.Object.Finalize%2A> `Dispose()`보호 된 호출 `Dispose(Boolean)` 메서드는 `disposing` 매개 변수 설정 `true`합니다. <xref:System.Object.Finalize%2A>호출 `Dispose` 와 `disposing` 로 설정 `false`합니다. 경우는 `disposing` 매개 변수는 `true`,이 메서드는 관리 개체가 보유 하는 모든 리소스를 해제 합니다.이 <xref:System.Net.Http.HttpRequestMessage>참조.</xref:System.Net.Http.HttpRequestMessage></xref:System.Object.Finalize%2A> 이 메서드 호출에서 `Dispose()` 각 참조 된 개체의 메서드."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>관리 되는 관리 되지 않는 리소스만 해제 하려면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 관리 되지 않는 리소스를 해제 합니다."
  overload: System.Net.Http.HttpRequestMessage.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.HttpRequestMessage.Headers
  id: Headers
  parent: System.Net.Http.HttpRequestMessage
  langs:
  - csharp
  name: Headers
  nameWithType: HttpRequestMessage.Headers
  fullName: System.Net.Http.HttpRequestMessage.Headers
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "HTTP 요청 헤더의 컬렉션을 가져옵니다."
  syntax:
    content: public System.Net.Http.Headers.HttpRequestHeaders Headers { get; }
    return:
      type: System.Net.Http.Headers.HttpRequestHeaders
      description: "HTTP 요청 헤더의 컬렉션입니다."
  overload: System.Net.Http.HttpRequestMessage.Headers*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.HttpRequestMessage.Method
  id: Method
  parent: System.Net.Http.HttpRequestMessage
  langs:
  - csharp
  name: Method
  nameWithType: HttpRequestMessage.Method
  fullName: System.Net.Http.HttpRequestMessage.Method
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "HTTP 요청 메시지에서 사용한 HTTP 메서드를 가져오거나 설정 합니다."
  syntax:
    content: public System.Net.Http.HttpMethod Method { get; set; }
    return:
      type: System.Net.Http.HttpMethod
      description: "요청 메시지에서 사용 하는 HTTP 메서드. 기본값은 GET 메서드."
  overload: System.Net.Http.HttpRequestMessage.Method*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.HttpRequestMessage.Properties
  id: Properties
  parent: System.Net.Http.HttpRequestMessage
  langs:
  - csharp
  name: Properties
  nameWithType: HttpRequestMessage.Properties
  fullName: System.Net.Http.HttpRequestMessage.Properties
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "HTTP 요청에 대 한 속성의 집합을 가져옵니다."
  syntax:
    content: public System.Collections.Generic.IDictionary<string,object> Properties { get; }
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
      description: "반환 &lt;xref:System.Collections.Generic.IDictionary%602&gt;합니다."
  overload: System.Net.Http.HttpRequestMessage.Properties*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.HttpRequestMessage.RequestUri
  id: RequestUri
  parent: System.Net.Http.HttpRequestMessage
  langs:
  - csharp
  name: RequestUri
  nameWithType: HttpRequestMessage.RequestUri
  fullName: System.Net.Http.HttpRequestMessage.RequestUri
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "가져오거나는 <xref:System.Uri>HTTP 요청에 사용 합니다.</xref:System.Uri>"
  remarks: "경우 요청 <xref:System.Uri>상대 uri <xref:System.Net.Http.HttpClient.BaseAddress%2A>.</xref:System.Net.Http.HttpClient.BaseAddress%2A> 와 결합 하는</xref:System.Uri>"
  syntax:
    content: public Uri RequestUri { get; set; }
    return:
      type: System.Uri
      description: "<xref:System.Uri>HTTP 요청에 사용 합니다.</xref:System.Uri>"
  overload: System.Net.Http.HttpRequestMessage.RequestUri*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.HttpRequestMessage.ToString
  id: ToString
  parent: System.Net.Http.HttpRequestMessage
  langs:
  - csharp
  name: ToString()
  nameWithType: HttpRequestMessage.ToString()
  fullName: System.Net.Http.HttpRequestMessage.ToString()
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "현재 개체를 나타내는 문자열을 반환 합니다."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "현재 개체의 문자열 표현입니다."
  overload: System.Net.Http.HttpRequestMessage.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.HttpRequestMessage.Version
  id: Version
  parent: System.Net.Http.HttpRequestMessage
  langs:
  - csharp
  name: Version
  nameWithType: HttpRequestMessage.Version
  fullName: System.Net.Http.HttpRequestMessage.Version
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "HTTP 메시지 버전을 가져오거나 설정 합니다."
  syntax:
    content: public Version Version { get; set; }
    return:
      type: System.Version
      description: "HTTP 메시지 버전입니다. 기본값은 1.1."
  overload: System.Net.Http.HttpRequestMessage.Version*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Net.Http.HttpRequestMessage.#ctor
  parent: System.Net.Http.HttpRequestMessage
  isExternal: false
  name: HttpRequestMessage()
  nameWithType: HttpRequestMessage.HttpRequestMessage()
  fullName: System.Net.Http.HttpRequestMessage.HttpRequestMessage()
- uid: System.Net.Http.HttpRequestMessage.#ctor(System.Net.Http.HttpMethod,System.String)
  parent: System.Net.Http.HttpRequestMessage
  isExternal: false
  name: HttpRequestMessage(HttpMethod,String)
  nameWithType: HttpRequestMessage.HttpRequestMessage(HttpMethod,String)
  fullName: System.Net.Http.HttpRequestMessage.HttpRequestMessage(HttpMethod,String)
- uid: System.Net.Http.HttpMethod
  parent: System.Net.Http
  isExternal: false
  name: HttpMethod
  nameWithType: HttpMethod
  fullName: System.Net.Http.HttpMethod
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.Http.HttpRequestMessage.#ctor(System.Net.Http.HttpMethod,System.Uri)
  parent: System.Net.Http.HttpRequestMessage
  isExternal: false
  name: HttpRequestMessage(HttpMethod,Uri)
  nameWithType: HttpRequestMessage.HttpRequestMessage(HttpMethod,Uri)
  fullName: System.Net.Http.HttpRequestMessage.HttpRequestMessage(HttpMethod,Uri)
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Net.Http.HttpRequestMessage.Content
  parent: System.Net.Http.HttpRequestMessage
  isExternal: false
  name: Content
  nameWithType: HttpRequestMessage.Content
  fullName: System.Net.Http.HttpRequestMessage.Content
- uid: System.Net.Http.HttpContent
  parent: System.Net.Http
  isExternal: false
  name: HttpContent
  nameWithType: HttpContent
  fullName: System.Net.Http.HttpContent
- uid: System.Net.Http.HttpRequestMessage.Dispose
  parent: System.Net.Http.HttpRequestMessage
  isExternal: false
  name: Dispose()
  nameWithType: HttpRequestMessage.Dispose()
  fullName: System.Net.Http.HttpRequestMessage.Dispose()
- uid: System.Net.Http.HttpRequestMessage.Dispose(System.Boolean)
  parent: System.Net.Http.HttpRequestMessage
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: HttpRequestMessage.Dispose(Boolean)
  fullName: System.Net.Http.HttpRequestMessage.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.Http.HttpRequestMessage.Headers
  parent: System.Net.Http.HttpRequestMessage
  isExternal: false
  name: Headers
  nameWithType: HttpRequestMessage.Headers
  fullName: System.Net.Http.HttpRequestMessage.Headers
- uid: System.Net.Http.Headers.HttpRequestHeaders
  parent: System.Net.Http.Headers
  isExternal: false
  name: HttpRequestHeaders
  nameWithType: HttpRequestHeaders
  fullName: System.Net.Http.Headers.HttpRequestHeaders
- uid: System.Net.Http.HttpRequestMessage.Method
  parent: System.Net.Http.HttpRequestMessage
  isExternal: false
  name: Method
  nameWithType: HttpRequestMessage.Method
  fullName: System.Net.Http.HttpRequestMessage.Method
- uid: System.Net.Http.HttpRequestMessage.Properties
  parent: System.Net.Http.HttpRequestMessage
  isExternal: false
  name: Properties
  nameWithType: HttpRequestMessage.Properties
  fullName: System.Net.Http.HttpRequestMessage.Properties
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,Object>
  nameWithType: IDictionary<String,Object>
  fullName: System.Collections.Generic.IDictionary<System.String,System.Object>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.Http.HttpRequestMessage.RequestUri
  parent: System.Net.Http.HttpRequestMessage
  isExternal: false
  name: RequestUri
  nameWithType: HttpRequestMessage.RequestUri
  fullName: System.Net.Http.HttpRequestMessage.RequestUri
- uid: System.Net.Http.HttpRequestMessage.ToString
  parent: System.Net.Http.HttpRequestMessage
  isExternal: false
  name: ToString()
  nameWithType: HttpRequestMessage.ToString()
  fullName: System.Net.Http.HttpRequestMessage.ToString()
- uid: System.Net.Http.HttpRequestMessage.Version
  parent: System.Net.Http.HttpRequestMessage
  isExternal: false
  name: Version
  nameWithType: HttpRequestMessage.Version
  fullName: System.Net.Http.HttpRequestMessage.Version
- uid: System.Version
  parent: System
  isExternal: true
  name: Version
  nameWithType: Version
  fullName: System.Version
- uid: System.Net.Http.HttpRequestMessage.#ctor*
  parent: System.Net.Http.HttpRequestMessage
  isExternal: false
  name: HttpRequestMessage
  nameWithType: HttpRequestMessage.HttpRequestMessage
- uid: System.Net.Http.HttpRequestMessage.Content*
  parent: System.Net.Http.HttpRequestMessage
  isExternal: false
  name: Content
  nameWithType: HttpRequestMessage.Content
- uid: System.Net.Http.HttpRequestMessage.Dispose*
  parent: System.Net.Http.HttpRequestMessage
  isExternal: false
  name: Dispose
  nameWithType: HttpRequestMessage.Dispose
- uid: System.Net.Http.HttpRequestMessage.Headers*
  parent: System.Net.Http.HttpRequestMessage
  isExternal: false
  name: Headers
  nameWithType: HttpRequestMessage.Headers
- uid: System.Net.Http.HttpRequestMessage.Method*
  parent: System.Net.Http.HttpRequestMessage
  isExternal: false
  name: Method
  nameWithType: HttpRequestMessage.Method
- uid: System.Net.Http.HttpRequestMessage.Properties*
  parent: System.Net.Http.HttpRequestMessage
  isExternal: false
  name: Properties
  nameWithType: HttpRequestMessage.Properties
- uid: System.Net.Http.HttpRequestMessage.RequestUri*
  parent: System.Net.Http.HttpRequestMessage
  isExternal: false
  name: RequestUri
  nameWithType: HttpRequestMessage.RequestUri
- uid: System.Net.Http.HttpRequestMessage.ToString*
  parent: System.Net.Http.HttpRequestMessage
  isExternal: false
  name: ToString
  nameWithType: HttpRequestMessage.ToString
- uid: System.Net.Http.HttpRequestMessage.Version*
  parent: System.Net.Http.HttpRequestMessage
  isExternal: false
  name: Version
  nameWithType: HttpRequestMessage.Version
