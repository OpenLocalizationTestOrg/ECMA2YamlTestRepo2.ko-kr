### YamlMime:ManagedReference
items:
- uid: System.Activities.DurableInstancing.HasActivatableWorkflowEvent
  id: HasActivatableWorkflowEvent
  children:
  - System.Activities.DurableInstancing.HasActivatableWorkflowEvent.#ctor
  langs:
  - csharp
  name: HasActivatableWorkflowEvent
  nameWithType: HasActivatableWorkflowEvent
  fullName: System.Activities.DurableInstancing.HasActivatableWorkflowEvent
  type: Class
  summary: "인스턴스 저장소가 지 속성 데이터베이스에서 활성화 가능한 인스턴스가 있음 일반 호스트에 알리기 위해 발생 하는 이벤트를 나타냅니다."
  remarks: "인스턴스는 *활성화할 수 있는*일시 중단 된 상태나 완료 된 상태가 아니며 다음 조건을 충족 하는 경우:-인스턴스가 *실행 가능한*합니다. 인스턴스 지 속성 데이터베이스에서 실행 다음 조건을 만족 하는 경우 가능한 것으로 간주 됩니다.-인스턴스가 잠금 해제 되어 되었으며 만료 된 보류 중인 타이머가 있습니다.          -인스턴스 잠금이 해제 되어 상태가 **Executing**합니다.          -인스턴스는 잘못 된 잠금이 있습니다.      -는 컴퓨터에서 실행 중인 인스턴스를 로드할 수 있는 워크플로 호스트가 있습니다.       저장소를 사용 하는 워크플로 호스트에 속하는 활성화 가능한 워크플로 인스턴스를 인스턴스 저장소는 정기적으로 검색 해야 합니다. 지 속성 저장소에서 활성화 가능한 인스턴스를 찾을 때는 HasActivatableWorkflowEvent를 발생 시켜야 합니다. 인스턴스 저장소를 찾지 못하면 활성화 가능한 인스턴스 지 속성 저장소에서 활성화 가능한 인스턴스 지 속성 저장소를 모니터링 하려면 계속 해야 합니다.       HasActivatableWorkflowEvent를 발생 시키고, 인스턴스 저장소에 활성화 가능한 인스턴스가 지 속성 저장소를 수신 하 고 있는 <xref:System.Activities.DurableInstancing.QueryActivatableWorkflowsCommand>.</xref:System.Activities.DurableInstancing.QueryActivatableWorkflowsCommand> 실행 될 때까지 모니터링 중지 해야 모니터링이 계속 됩니다만 경우 명령이 실행 되는 활성화 가능한 워크플로 인스턴스를 반환 하지 않습니다.       실행 하는 일반 호스트는이 이벤트를 받을 때의 <xref:System.Activities.DurableInstancing.QueryActivatableWorkflowsCommand>를 워크플로 호스트를 만드는 데 필요한 활성화 매개 변수를 가져올 인스턴스 저장소에 대해.</xref:System.Activities.DurableInstancing.QueryActivatableWorkflowsCommand> 일반 호스트는 다시 로드 하 고 서비스 인스턴스를 실행 하는 워크플로 호스트를 만들고 이러한 활성화 매개 변수를 사용 합니다. WAS 활성화 형식의 활성화 매개 변수: 사이트 이름과 응용 프로그램 경로 (사이트 기준), (응용 프로그램)에 상대적인 서비스 경로입니다. 인스턴스 저장소는 여러 집합이 이러한 세 활성화 매개 변수를 반환할 수 있습니다.       일반 호스트는 이라는 XName 매개 변수가 있는 호스트 **ActivationType**, 인스턴스 저장소에서 지 원하는 값으로 설정 해야 합니다. 현재 SQL 워크플로 인스턴스 저장소는 ActivationType 매개 변수 값으로 설정 된 일반 호스트를 지원: **WAS**합니다. ActivationType 전혀 설정 하지 않으면 SQL 워크플로 인스턴스 저장소는 호스트를 일반 호스트로 처리 합니다.      > [!NOTE] >는 코드와 &quot;dublin&quot; (Application Server Extensions for.NET 4.0)의 워크플로 관리 서비스 정품 인증 유형으로 설정 된 일반 호스트는 **WAS**합니다."
  syntax:
    content: 'public sealed class HasActivatableWorkflowEvent : System.Runtime.DurableInstancing.InstancePersistenceEvent<System.Activities.DurableInstancing.HasActivatableWorkflowEvent>'
  inheritance:
  - System.Object
  - System.Runtime.DurableInstancing.InstancePersistenceEvent
  - System.Runtime.DurableInstancing.InstancePersistenceEvent`1
  implements: []
  inheritedMembers:
  - System.Runtime.DurableInstancing.InstancePersistenceEvent.Equals(System.Object)
  - System.Runtime.DurableInstancing.InstancePersistenceEvent.Equals(System.Runtime.DurableInstancing.InstancePersistenceEvent)
  - System.Runtime.DurableInstancing.InstancePersistenceEvent.GetHashCode
  - System.Runtime.DurableInstancing.InstancePersistenceEvent.Name
  - System.Runtime.DurableInstancing.InstancePersistenceEvent.op_Equality(System.Runtime.DurableInstancing.InstancePersistenceEvent,System.Runtime.DurableInstancing.InstancePersistenceEvent)
  - System.Runtime.DurableInstancing.InstancePersistenceEvent.op_Inequality(System.Runtime.DurableInstancing.InstancePersistenceEvent,System.Runtime.DurableInstancing.InstancePersistenceEvent)
  - System.Runtime.DurableInstancing.InstancePersistenceEvent`1.Value
  platform:
  - net462
- uid: System.Activities.DurableInstancing.HasActivatableWorkflowEvent.#ctor
  id: '#ctor'
  parent: System.Activities.DurableInstancing.HasActivatableWorkflowEvent
  langs:
  - csharp
  name: HasActivatableWorkflowEvent()
  nameWithType: HasActivatableWorkflowEvent.HasActivatableWorkflowEvent()
  fullName: System.Activities.DurableInstancing.HasActivatableWorkflowEvent.HasActivatableWorkflowEvent()
  type: Constructor
  assemblies:
  - System.Activities
  namespace: System.Activities.DurableInstancing
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Activities.DurableInstancing.HasActivatableWorkflowEvent&quot;> </xref> 클래스입니다."
  syntax:
    content: public HasActivatableWorkflowEvent ();
    parameters: []
  overload: System.Activities.DurableInstancing.HasActivatableWorkflowEvent.#ctor*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Runtime.DurableInstancing.InstancePersistenceEvent`1
  isExternal: false
  name: System.Runtime.DurableInstancing.InstancePersistenceEvent<System.Activities.DurableInstancing.HasActivatableWorkflowEvent>
- uid: System.Activities.DurableInstancing.HasActivatableWorkflowEvent.#ctor
  parent: System.Activities.DurableInstancing.HasActivatableWorkflowEvent
  isExternal: false
  name: HasActivatableWorkflowEvent()
  nameWithType: HasActivatableWorkflowEvent.HasActivatableWorkflowEvent()
  fullName: System.Activities.DurableInstancing.HasActivatableWorkflowEvent.HasActivatableWorkflowEvent()
- uid: System.Activities.DurableInstancing.HasActivatableWorkflowEvent.#ctor*
  parent: System.Activities.DurableInstancing.HasActivatableWorkflowEvent
  isExternal: false
  name: HasActivatableWorkflowEvent
  nameWithType: HasActivatableWorkflowEvent.HasActivatableWorkflowEvent
