### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor
  id: Cursor
  children:
  - System.Windows.Forms.DataVisualization.Charting.Cursor.#ctor
  - System.Windows.Forms.DataVisualization.Charting.Cursor.AutoScroll
  - System.Windows.Forms.DataVisualization.Charting.Cursor.AxisType
  - System.Windows.Forms.DataVisualization.Charting.Cursor.Dispose
  - System.Windows.Forms.DataVisualization.Charting.Cursor.Dispose(System.Boolean)
  - System.Windows.Forms.DataVisualization.Charting.Cursor.Interval
  - System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset
  - System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffsetType
  - System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType
  - System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserEnabled
  - System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserSelectionEnabled
  - System.Windows.Forms.DataVisualization.Charting.Cursor.LineColor
  - System.Windows.Forms.DataVisualization.Charting.Cursor.LineDashStyle
  - System.Windows.Forms.DataVisualization.Charting.Cursor.LineWidth
  - System.Windows.Forms.DataVisualization.Charting.Cursor.Position
  - System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionColor
  - System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd
  - System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart
  - System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPixelPosition(System.Drawing.PointF,System.Boolean)
  - System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPosition(System.Double)
  - System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPixelPosition(System.Drawing.PointF,System.Drawing.PointF,System.Boolean)
  - System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition(System.Double,System.Double)
  langs:
  - csharp
  name: Cursor
  nameWithType: Cursor
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor
  type: Class
  summary: "축의 위치를 정의 하는 수평 또는 수직 행을 나타냅니다."
  remarks: "커서는 축의 위치를 정의 하는 가로 또는 세로 선입니다. 범위 선택에는 시작 및 끝 위치가 정의 되어 있고 반 투명 한 색을 사용 하 여 표시 되는 축 상에 범위입니다.       커서 및 범위 선택 내용을 둘 다로 노출 되는 커서 클래스에서 구현 된 <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorX%2A>및 <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorY%2A>의 속성은 <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea>개체입니다.</xref:System.Windows.Forms.DataVisualization.Charting.ChartArea> </xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorY%2A> </xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorX%2A> <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorX%2A>차트 영역의 X 축에 대 한 개체는 및 <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorY%2A>Y 축에 대 한 개체는.</xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorY%2A> </xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorX%2A> <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.AxisType%2A>이러한 개체의 속성은 연결 된 축 기본 또는 보조 인지를 확인 합니다.</xref:System.Windows.Forms.DataVisualization.Charting.Cursor.AxisType%2A>       커서 클래스 외부 이벤트 관련 된 커서 및 범위 선택 루트에 있는 유일한 커서 및 범위 선택 기능 찾을 <xref:System.Windows.Forms.DataVisualization.Charting.Chart>개체입니다.</xref:System.Windows.Forms.DataVisualization.Charting.Chart>"
  syntax:
    content: >-
      [System.ComponentModel.DefaultProperty("Enabled")]

      public class Cursor : IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.#ctor
  id: '#ctor'
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  langs:
  - csharp
  name: Cursor()
  nameWithType: Cursor.Cursor()
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.Cursor()
  type: Constructor
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Windows.Forms.DataVisualization.Charting.Cursor&quot;> </xref> 클래스입니다."
  syntax:
    content: public Cursor ();
    parameters: []
  overload: System.Windows.Forms.DataVisualization.Charting.Cursor.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.AutoScroll
  id: AutoScroll
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  langs:
  - csharp
  name: AutoScroll
  nameWithType: Cursor.AutoScroll
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.AutoScroll
  type: Property
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: "범위 선택 작업 차트 영역의 경계를 벗어난 경우 스크롤 발생 여부를 결정 하는 플래그를 가져오거나 설정 합니다."
  remarks: "데이터 뷰는 그려진된 계열을에 모든 데이터 요소를 표시 하지 않을 사용자가 범위를 선택 하는 경우이 속성은 경우 발생 합니다 보기의 자동 스크롤 `true` 와 마우스-커서가-차트 영역 경계 밖으로 이동 됩니다.       스크롤만 수행 됩니다는 축을 따라 더 많은 데이터를 볼 수 없는 경우.       일반적으로 모든 데이터가 표시 되지 않는 데이터 뷰는 최종 사용자 데이터의 하위 집합을 확대 하는 경우 발생 합니다. <xref:System.Windows.Forms.DataVisualization.Charting.AxisScaleView>클래스</xref:System.Windows.Forms.DataVisualization.Charting.AxisScaleView> 뷰 및 확대/축소 구현"
  syntax:
    content: public bool AutoScroll { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>데이터 뷰를 자동으로 스크롤할 수 있는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.DataVisualization.Charting.Cursor.AutoScroll*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.AxisType
  id: AxisType
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  langs:
  - csharp
  name: AxisType
  nameWithType: Cursor.AxisType
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.AxisType
  type: Property
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: "커서에 연결 되어 있는 축 유형을 가져오거나 설정 합니다."
  remarks: "축에 두 가지: 기본 및 보조 합니다. 가로 막대형 차트를 제외한 모든 차트에 대 한 기본 축 아래쪽 (기본 x 축) 및 차트 영역의 테두리 왼쪽 (기본 y 축)에 나와 있습니다.       보조 축은 오른쪽 (보조 축) 및 차트 영역의 테두리 위쪽 (보조 y 축)에 배치 됩니다.      > [!NOTE] > 내에서 모든 계열이 그려지는 경우 차트 영역 축 (예를 들어 기본 x 축)에 한 가지 형식만 사용 하 여 다음이 속성을 설정할 축에 계열 (이 경우 보조 x 축)에서 사용 하지 않는 형식을 아무런 효과가; 커서는 계열을 그리는 데 사용 되는 유일한 축에 자동으로 연결 됩니다."
  syntax:
    content: public System.Windows.Forms.DataVisualization.Charting.AxisType AxisType { get; set; }
    return:
      type: System.Windows.Forms.DataVisualization.Charting.AxisType
      description: "<xref href=&quot;System.Windows.Forms.DataVisualization.Charting.AxisType&quot;> </xref> 축의 주 또는 보조 축에 연결 되어 있는지 여부를 나타내는 열거형 값입니다."
  overload: System.Windows.Forms.DataVisualization.Charting.Cursor.AxisType*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.Dispose
  id: Dispose
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  langs:
  - csharp
  name: Dispose()
  nameWithType: Cursor.Dispose()
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.Dispose()
  type: Method
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: "확보, 해제 또는 관리 되지 않는 리소스를 다시 설정 하는 응용 프로그램 정의 작업을 수행 합니다."
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Windows.Forms.DataVisualization.Charting.Cursor.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: Cursor.Dispose(Boolean)
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: "릴리스 관리 되지 않는 하 고 필요에 따라 관리 되는 리소스입니다."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>이전 및 관리 되는 관리 되지 않는 리소스만 해제 하려면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 만 관리 되지 않는 리소스를 해제 합니다."
  overload: System.Windows.Forms.DataVisualization.Charting.Cursor.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.Interval
  id: Interval
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  langs:
  - csharp
  name: Interval
  nameWithType: Cursor.Interval
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.Interval
  type: Property
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: "커서 간격을 가져오거나 설정 합니다."
  remarks: "Interval 속성은 최종 사용자가 커서를 그릴 수 자주 방법과 위치를 결정 및 범위 선택의 시작 부분 및 끝점 그릴 수 있습니다. 값이&0; 이며이 값은 기본값, 커서 또는 범위 선택 차트 영역 내에서 아무 곳 이나 그릴 수 있는지를 나타냅니다. 0이 아닌 값을 커서 또는 시작 및/또는 선택한 범위의 끝점 사용자 인터페이스에 의해 설정 된 경우 지정된 된 간격에 그릴만 나타냅니다.       측정 단위에 의해 결정 됩니다는 <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType%2A>속성.</xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType%2A>       와 함께에서이 속성을 사용할 수도 있습니다는 <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset%2A>속성에서 지정된 된 간격 오프셋 값을 지정할 수 있습니다.</xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset%2A> 예를 들어 매주 토요일만 표시할 커서를 허용 하려면 1 주 간격 지정 해야 합니다 함께 6 일 간격 오프셋입니다. .NET Framework에서 일요일은 첫 번째 요일 간주 됩니다.       커서 사용자 인터페이스를 설정 하 여 사용 하는 경우는 <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserEnabled%2A>를 차트 영역 내부 속성과 마우스 클릭 하면 커서의 위치를로 설정 됩니다는 허용 가능한 위치 가장 가까운.</xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserEnabled%2A>      > [!IMPORTANT] > 범위 선택을 프로그래밍 방식으로 또는 커서의 위치를 설정 하는 경우 Interval 속성에 영향을 주지 않습니다."
  syntax:
    content: public double Interval { get; set; }
    return:
      type: System.Double
      description: "커서 간격입니다."
  overload: System.Windows.Forms.DataVisualization.Charting.Cursor.Interval*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset
  id: IntervalOffset
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  langs:
  - csharp
  name: IntervalOffset
  nameWithType: Cursor.IntervalOffset
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset
  type: Property
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: "사용자가 설정 된 경우 커서 및 범위 선택을 그릴 수 위치에 영향을 주는 간격 오프셋을 가져오거나 설정 합니다."
  remarks: "IntervalOffset 속성의 커서 시작 간격 오프셋 및/또는 범위 선택의 끝점을 결정합니다. 와 함께에서 <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval%2A>속성을이 속성은 커서 위치를 결정 하 고 범위 차트 영역 내에 표시 될 수 있습니다.</xref:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval%2A> 값의 기본 설정인&0; 오프셋 없이 리터럴임을 나타냅니다.       측정 단위에 의해 결정 됩니다는 <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffsetType%2A>속성.</xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffsetType%2A>       오프셋 되는 커서 및 시작, 범위 선택의 끝점에 그릴 수 위치를 영향을 줍니다. 예를 들어 매주 토요일만 표시할 커서를 허용 하려면 1 주 간격 지정 해야 합니다 함께 6 일 간격 오프셋입니다. .NET Framework에서 일요일은 첫 번째 요일 간주 됩니다.       커서 사용자 인터페이스를 설정 하 여 사용 하는 경우는 <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserEnabled%2A>를 차트 영역 내부 속성과 마우스 클릭 하면 커서의 위치를로 설정 됩니다는 허용 가능한 위치 가장 가까운.</xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserEnabled%2A>      > [!IMPORTANT] > 간격 관련 속성 또는 효과가 없습니다 범위 선택 때 커서 위치를 프로그래밍 방식으로 설정 됩니다."
  syntax:
    content: public double IntervalOffset { get; set; }
    return:
      type: System.Double
      description: "간격 오프셋입니다. 기본값은&0; 이며이 제한이 없음을 나타내는, 및 음수 값이 허용 됩니다."
  overload: System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffsetType
  id: IntervalOffsetType
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  langs:
  - csharp
  name: IntervalOffsetType
  nameWithType: Cursor.IntervalOffsetType
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffsetType
  type: Property
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: "축에 대해 선택한 범위와 커서의 간격 오프셋된 유형으로 설정 하거나 가져옵니다."
  remarks: "IntervalOffsetType 속성 형식을 사용 하 여 지정 된 간격 오프셋의 결정은 <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset%2A>속성.</xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset%2A>       IntervalOffsetType 속성이로 설정 된 경우 <xref:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType>, <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType%2A>속성 설정이 사용 됩니다.</xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType%2A> </xref:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType>      > [!NOTE] > 간격 관련 속성 또는 효과가 없습니다 범위 선택 때 커서 위치를 프로그래밍 방식으로 설정 됩니다."
  syntax:
    content: public System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType IntervalOffsetType { get; set; }
    return:
      type: System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType
      description: "A <xref href=&quot;System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType&quot;> </xref> 간격 오프셋에 대 한 측정 단위를 결정 하는 열거형 값입니다."
  overload: System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffsetType*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType
  id: IntervalType
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  langs:
  - csharp
  name: IntervalType
  nameWithType: Cursor.IntervalType
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType
  type: Property
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: "커서와 선택한 범위의 축 간격 유형을 가져오거나 설정 합니다."
  remarks: "IntervalType 속성 형식을 사용 하 여 지정 된 간격의 결정은 <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval%2A>속성.</xref:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval%2A>       간격 형식이 <xref:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType>로 처리 되는 간격에 대 한 측정 단위는 `double`, 하며이 값은&1; 일 때 <xref:System.DateTime>값이 지정 되어 있습니다.</xref:System.DateTime> </xref:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType>      > [!NOTE] > 간격 관련 속성 또는 효과가 없습니다 범위 선택 때 커서 위치를 프로그래밍 방식으로 설정 됩니다.       축 간격 종류는 시간을 나타내는 경우-예를 들어, 시간, 분 등-확대/축소 기능을 제대로 사용 하려면는 IntervalType 또한 수로 설정 합니다 시간 값입니다. 예를 들어는 ChartArea1.AxisX.IntervalType은 시간으로 표현, 하는 경우는 ChartArea1.CursorX.IntervalType 분으로 설정 수 없습니다."
  syntax:
    content: public System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType IntervalType { get; set; }
    return:
      type: System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType
      description: "커서 및 축의 선택한 범위에 대 한 간격 유형입니다."
  overload: System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserEnabled
  id: IsUserEnabled
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  langs:
  - csharp
  name: IsUserEnabled
  nameWithType: Cursor.IsUserEnabled
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserEnabled
  type: Property
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: "커서 사용자 인터페이스를 사용할지 여부를 지정 하는 플래그를 가져오거나 설정 합니다."
  syntax:
    content: public bool IsUserEnabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>커서 사용자 인터페이스를 사용 하면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserSelectionEnabled
  id: IsUserSelectionEnabled
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  langs:
  - csharp
  name: IsUserSelectionEnabled
  nameWithType: Cursor.IsUserSelectionEnabled
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserSelectionEnabled
  type: Property
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: "범위 선택 사용자 인터페이스를 사용할지 여부를 지정 하는 플래그를 가져오거나 설정 합니다."
  syntax:
    content: public bool IsUserSelectionEnabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>범위 선택 사용자 인터페이스를 사용 하면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserSelectionEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.LineColor
  id: LineColor
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  langs:
  - csharp
  name: LineColor
  nameWithType: Cursor.LineColor
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.LineColor
  type: Property
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: "커서 선 색을 가져오거나 설정 합니다."
  syntax:
    content: public System.Drawing.Color LineColor { get; set; }
    return:
      type: System.Drawing.Color
      description: "커서의 선 색입니다. 기본값은 <xref:System.Drawing.Color.Red*>.</xref:System.Drawing.Color.Red*>"
  overload: System.Windows.Forms.DataVisualization.Charting.Cursor.LineColor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.LineDashStyle
  id: LineDashStyle
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  langs:
  - csharp
  name: LineDashStyle
  nameWithType: Cursor.LineDashStyle
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.LineDashStyle
  type: Property
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: "커서를 줄의 스타일을 가져오거나 설정 합니다."
  syntax:
    content: public System.Windows.Forms.DataVisualization.Charting.ChartDashStyle LineDashStyle { get; set; }
    return:
      type: System.Windows.Forms.DataVisualization.Charting.ChartDashStyle
      description: "커서를 줄의 스타일입니다."
  overload: System.Windows.Forms.DataVisualization.Charting.Cursor.LineDashStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.LineWidth
  id: LineWidth
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  langs:
  - csharp
  name: LineWidth
  nameWithType: Cursor.LineWidth
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.LineWidth
  type: Property
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: "커서를 픽셀 단위로 선 두께 가져오거나"
  remarks: "커서를 픽셀 단위로 선 두께 지정 하려면이 속성을 사용 합니다."
  syntax:
    content: public int LineWidth { get; set; }
    return:
      type: System.Int32
      description: "선 두께 (픽셀)에서입니다. 기본값은&1;입니다."
  overload: System.Windows.Forms.DataVisualization.Charting.Cursor.LineWidth*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.Position
  id: Position
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  langs:
  - csharp
  name: Position
  nameWithType: Cursor.Position
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.Position
  type: Property
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: "커서의 위치를 가져오거나 설정 합니다."
  remarks: "이 속성 커서에도 커서 위치를 프로그래밍 방식으로 설정 하는 작업의 위치를 가져오는 데 사용할 수 있습니다.       기준에 따라 결정 되는 커서 속하는 축의 값으로 위치는 <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.AxisType%2A>속성.</xref:System.Windows.Forms.DataVisualization.Charting.Cursor.AxisType%2A> 예를 들어, 커서 X 축 상자 2000 년 1 월 1 일의 값으로이 속성을 설정 합니다. 주 복제본에 속하는 경우 축 따라 있는 2000 년 1 월 1 일 위치의 그리고 x 축 커서에서 발생 합니다. 이 값이 존재 하지 않는 커서 표시 되지 않습니다.       이 속성을 설정 하는 경우, <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval%2A>및 <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset%2A>이 지정 된 위치에 커서가 표시 되는, 즉; 속성에는 영향을 주지 않습니다.</xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset%2A> </xref:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval%2A>       이 속성은 발생 시 키 지 설정은 <xref:System.Windows.Forms.DataVisualization.Charting.Chart.CursorPositionChanged>또는 <xref:System.Windows.Forms.DataVisualization.Charting.Chart.CursorPositionChanging>이벤트.</xref:System.Windows.Forms.DataVisualization.Charting.Chart.CursorPositionChanging> </xref:System.Windows.Forms.DataVisualization.Charting.Chart.CursorPositionChanged>       또는 <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPosition%2A>및 <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPixelPosition%2A>메서드 커서 설정 데 사용할 수 있습니다.</xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPixelPosition%2A> </xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPosition%2A>       <xref:System.Double.NaN>.</xref:System.Double.NaN> 커서의 위치를 설정 하는 커서를 프로그래밍 방식으로 제거 하려면이 속성을 사용"
  syntax:
    content: public double Position { get; set; }
    return:
      type: System.Double
      description: "커서의 위치입니다."
  overload: System.Windows.Forms.DataVisualization.Charting.Cursor.Position*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionColor
  id: SelectionColor
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  langs:
  - csharp
  name: SelectionColor
  nameWithType: Cursor.SelectionColor
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionColor
  type: Property
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: "반투명 데이터 범위를 강조 표시 색을 가져오거나 설정 합니다."
  remarks: "이 속성은 범위 선택 색상을 결정 하며 올바른 ARGB (알파, 빨간색, 녹색, 파랑) 값으로 설정할 수 있습니다. 투명도 수준을 결정, 알파 값을 제공 하지 않으면 120 기본 알파 값이 사용 됩니다.       사용 하 여 구현 된 X 및 Y 축 커서에 대해 선택한 색을 설정할 수 있습니다는 <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorX%2A>및 <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorY%2A>의 속성은 <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea>개체를 각각.</xref:System.Windows.Forms.DataVisualization.Charting.ChartArea> </xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorY%2A> </xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorX%2A> 범위는 x 축만 선택 하 고, x 축 커서에 대 한 SelectionColor 값이 사용 됩니다. 범위는 y 축을 따라만 선택 하 고, y 축 커서에 대 한 SelectionColor 값이 사용 됩니다. 양쪽 축 따라는 범위를 선택한 경우 y 축 커서에 대 한 SelectionColor 값도 선택된 된 색에 사용 됩니다."
  syntax:
    content: public System.Drawing.Color SelectionColor { get; set; }
    return:
      type: System.Drawing.Color
      description: "색 강조 표시 된 범위입니다. 기본값은 <xref:System.Drawing.Color.LightGray*>, 120 알파 값.</xref:System.Drawing.Color.LightGray*>"
  overload: System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionColor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd
  id: SelectionEnd
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  langs:
  - csharp
  name: SelectionEnd
  nameWithType: Cursor.SelectionEnd
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd
  type: Property
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: "범위 선택 끝 위치를 가져오거나 설정 합니다."
  remarks: "사용자는 마우스 왼쪽된 단추를 클릭 하 여 다음 마우스를 끌어 차트 영역 내에서 범위를 선택할 수 있습니다. <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserSelectionEnabled%2A>속성 설정 해야 `true`.</xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserSelectionEnabled%2A> 또한 범위 선택 설정할 수 있습니다는 SelectionEnd 중 하나를 사용 하 여 프로그래밍 방식으로 및 <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart%2A>속성 또는 <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition%2A>또는 <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPixelPosition%2A>메서드.</xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPixelPosition%2A> </xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition%2A> </xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart%2A>       범위 선택 끝 위치는 커서 속해 있는 축의 값으로 계산 됩니다. 예를 들어, 커서 기본 x 축에 속하며 SelectionEnd 속성 2000 년 12 월 31 일의 값을 설정 하는 경우 선택 영역의 끝 따라에 발생 합니다 년 12 월 31, 2000 기본 X 축 합니다.       범위의 시작 점과 끝 설정 범위 선택을 프로그래밍 방식으로 제거 하려면 <xref:System.Double.NaN>는 SelectionEnd를 사용 하 여 및 <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart%2A>속성 또는 사용 하 여는 <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition%2A>메서드.</xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition%2A> </xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart%2A> </xref:System.Double.NaN>"
  syntax:
    content: public double SelectionEnd { get; set; }
    return:
      type: System.Double
      description: "범위 선택 끝 위치입니다."
  overload: System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart
  id: SelectionStart
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  langs:
  - csharp
  name: SelectionStart
  nameWithType: Cursor.SelectionStart
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart
  type: Property
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: "커서의 선택 된 범위의 시작 위치를 가져오거나 설정 합니다."
  remarks: "사용자는 마우스 왼쪽된 단추를 클릭 하 고 다음 마우스를 끌어 커서 위치를 이동 하 여 범위를 선택할 수 있습니다. <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserSelectionEnabled%2A>속성 설정 해야 `true`.</xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserSelectionEnabled%2A> 프로그래밍 방식으로 하나를 사용 하 여 범위 선택 수 설정 또한는 <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd%2A>및 SelectionStart 속성 또는 <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition%2A>또는 <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPixelPosition%2A>메서드.</xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPixelPosition%2A> </xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition%2A> </xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd%2A>       범위 선택 시작 위치는 커서 속해 있는 축의 값으로 계산 됩니다. 예를 들어, 커서 기본 x 축에 속하며 SelectionStart 속성 2000 년 1 월 1 일의 값을 설정 하는 경우 선택한 시간 범위 시작 부분의 따라에 발생 합니다 2000 년 1 월 1 일 기본 X 축 합니다.       범위의 시작 점과 끝 설정 범위 선택을 프로그래밍 방식으로 제거 하려면 <xref:System.Double.NaN>를 사용 하는 <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd%2A>SelectionStart 속성 또는 사용 하 고는 <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition%2A>메서드.</xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition%2A> </xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd%2A> </xref:System.Double.NaN>"
  syntax:
    content: public double SelectionStart { get; set; }
    return:
      type: System.Double
      description: "커서의 선택 범위의 시작 위치입니다."
  overload: System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPixelPosition(System.Drawing.PointF,System.Boolean)
  id: SetCursorPixelPosition(System.Drawing.PointF,System.Boolean)
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  langs:
  - csharp
  name: SetCursorPixelPosition(PointF,Boolean)
  nameWithType: Cursor.SetCursorPixelPosition(PointF,Boolean)
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPixelPosition(PointF,Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: "지정된 된 위치에 커서를 표시합니다. 픽셀 단위로 지정 합니다."
  syntax:
    content: public void SetCursorPixelPosition (System.Drawing.PointF point, bool roundToBoundary);
    parameters:
    - id: point
      type: System.Drawing.PointF
      description: "A <xref href=&quot;System.Drawing.PointF&quot;> </xref> 커서를 그릴지를 지정 하는 구조입니다."
    - id: roundToBoundary
      type: System.Boolean
      description: "경우 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, 지정된 된 위치에도 속하지 경우 커서를 가장 가까운 차트 영역 경계를 따라 그릴지는 <xref href=&quot;System.Windows.Forms.DataVisualization.Charting.ChartArea&quot;> </xref> 개체입니다."
  overload: System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPixelPosition*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPosition(System.Double)
  id: SetCursorPosition(System.Double)
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  langs:
  - csharp
  name: SetCursorPosition(Double)
  nameWithType: Cursor.SetCursorPosition(Double)
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPosition(Double)
  type: Method
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: "차트 영역 내에 지정 된 축 값은 커서의 위치를 설정합니다."
  syntax:
    content: public void SetCursorPosition (double newPosition);
    parameters:
    - id: newPosition
      type: System.Double
      description: "커서의 새 위치입니다. 해당 축 따라 값으로 측정 합니다."
  overload: System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPosition*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPixelPosition(System.Drawing.PointF,System.Drawing.PointF,System.Boolean)
  id: SetSelectionPixelPosition(System.Drawing.PointF,System.Drawing.PointF,System.Boolean)
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  langs:
  - csharp
  name: SetSelectionPixelPosition(PointF,PointF,Boolean)
  nameWithType: Cursor.SetSelectionPixelPosition(PointF,PointF,Boolean)
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPixelPosition(PointF,PointF,Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: "범위 선택의 시작 및 끝 위치를 설정합니다."
  syntax:
    content: public void SetSelectionPixelPosition (System.Drawing.PointF startPoint, System.Drawing.PointF endPoint, bool roundToBoundary);
    parameters:
    - id: startPoint
      type: System.Drawing.PointF
      description: "A <xref href=&quot;System.Drawing.PointF&quot;> </xref> 범위 선택 시작 위치를 지정 하는 구조입니다."
    - id: endPoint
      type: System.Drawing.PointF
      description: "A <xref href=&quot;System.Drawing.PointF&quot;> </xref> 범위 선택이 끝나는 지정 하는 구조입니다."
    - id: roundToBoundary
      type: System.Boolean
      description: "경우 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, 시작점과 끝점으로 반올림 됩니다 가장 가까운 차트 영역 경계 내에서 지정 된 위치를 포함 되지 않는 경우는 <xref href=&quot;System.Windows.Forms.DataVisualization.Charting.ChartArea&quot;> </xref> 개체입니다."
  overload: System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPixelPosition*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition(System.Double,System.Double)
  id: SetSelectionPosition(System.Double,System.Double)
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  langs:
  - csharp
  name: SetSelectionPosition(Double,Double)
  nameWithType: Cursor.SetSelectionPosition(Double,Double)
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition(Double,Double)
  type: Method
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: "차트 영역 내에 지정 된 축 값 선택 범위의 위치를 설정합니다."
  syntax:
    content: public void SetSelectionPosition (double newStart, double newEnd);
    parameters:
    - id: newStart
      type: System.Double
      description: "범위 선택의 새 시작 위치입니다. 해당 축 따라 값으로 측정 합니다."
    - id: newEnd
      type: System.Double
      description: "범위 선택의 새로운 끝 위치를 지정 합니다. 해당 축 따라 값으로 측정 합니다."
  overload: System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.#ctor
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: Cursor()
  nameWithType: Cursor.Cursor()
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.Cursor()
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.AutoScroll
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: AutoScroll
  nameWithType: Cursor.AutoScroll
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.AutoScroll
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.AxisType
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: AxisType
  nameWithType: Cursor.AxisType
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.AxisType
- uid: System.Windows.Forms.DataVisualization.Charting.AxisType
  parent: System.Windows.Forms.DataVisualization.Charting
  isExternal: false
  name: AxisType
  nameWithType: AxisType
  fullName: System.Windows.Forms.DataVisualization.Charting.AxisType
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.Dispose
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: Dispose()
  nameWithType: Cursor.Dispose()
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.Dispose()
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.Dispose(System.Boolean)
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: Cursor.Dispose(Boolean)
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.Dispose(Boolean)
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.Interval
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: Interval
  nameWithType: Cursor.Interval
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.Interval
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: IntervalOffset
  nameWithType: Cursor.IntervalOffset
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffsetType
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: IntervalOffsetType
  nameWithType: Cursor.IntervalOffsetType
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffsetType
- uid: System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType
  parent: System.Windows.Forms.DataVisualization.Charting
  isExternal: false
  name: DateTimeIntervalType
  nameWithType: DateTimeIntervalType
  fullName: System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: IntervalType
  nameWithType: Cursor.IntervalType
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserEnabled
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: IsUserEnabled
  nameWithType: Cursor.IsUserEnabled
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserEnabled
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserSelectionEnabled
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: IsUserSelectionEnabled
  nameWithType: Cursor.IsUserSelectionEnabled
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserSelectionEnabled
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.LineColor
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: LineColor
  nameWithType: Cursor.LineColor
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.LineColor
- uid: System.Drawing.Color
  parent: System.Drawing
  isExternal: false
  name: Color
  nameWithType: Color
  fullName: System.Drawing.Color
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.LineDashStyle
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: LineDashStyle
  nameWithType: Cursor.LineDashStyle
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.LineDashStyle
- uid: System.Windows.Forms.DataVisualization.Charting.ChartDashStyle
  parent: System.Windows.Forms.DataVisualization.Charting
  isExternal: false
  name: ChartDashStyle
  nameWithType: ChartDashStyle
  fullName: System.Windows.Forms.DataVisualization.Charting.ChartDashStyle
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.LineWidth
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: LineWidth
  nameWithType: Cursor.LineWidth
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.LineWidth
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.Position
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: Position
  nameWithType: Cursor.Position
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.Position
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionColor
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: SelectionColor
  nameWithType: Cursor.SelectionColor
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionColor
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: SelectionEnd
  nameWithType: Cursor.SelectionEnd
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: SelectionStart
  nameWithType: Cursor.SelectionStart
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPixelPosition(System.Drawing.PointF,System.Boolean)
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: SetCursorPixelPosition(PointF,Boolean)
  nameWithType: Cursor.SetCursorPixelPosition(PointF,Boolean)
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPixelPosition(PointF,Boolean)
- uid: System.Drawing.PointF
  parent: System.Drawing
  isExternal: false
  name: PointF
  nameWithType: PointF
  fullName: System.Drawing.PointF
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPosition(System.Double)
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: SetCursorPosition(Double)
  nameWithType: Cursor.SetCursorPosition(Double)
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPosition(Double)
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPixelPosition(System.Drawing.PointF,System.Drawing.PointF,System.Boolean)
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: SetSelectionPixelPosition(PointF,PointF,Boolean)
  nameWithType: Cursor.SetSelectionPixelPosition(PointF,PointF,Boolean)
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPixelPosition(PointF,PointF,Boolean)
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition(System.Double,System.Double)
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: SetSelectionPosition(Double,Double)
  nameWithType: Cursor.SetSelectionPosition(Double,Double)
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition(Double,Double)
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.#ctor*
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: Cursor
  nameWithType: Cursor.Cursor
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.AutoScroll*
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: AutoScroll
  nameWithType: Cursor.AutoScroll
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.AxisType*
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: AxisType
  nameWithType: Cursor.AxisType
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.Dispose*
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: Dispose
  nameWithType: Cursor.Dispose
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.Interval*
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: Interval
  nameWithType: Cursor.Interval
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset*
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: IntervalOffset
  nameWithType: Cursor.IntervalOffset
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffsetType*
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: IntervalOffsetType
  nameWithType: Cursor.IntervalOffsetType
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType*
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: IntervalType
  nameWithType: Cursor.IntervalType
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserEnabled*
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: IsUserEnabled
  nameWithType: Cursor.IsUserEnabled
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserSelectionEnabled*
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: IsUserSelectionEnabled
  nameWithType: Cursor.IsUserSelectionEnabled
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.LineColor*
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: LineColor
  nameWithType: Cursor.LineColor
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.LineDashStyle*
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: LineDashStyle
  nameWithType: Cursor.LineDashStyle
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.LineWidth*
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: LineWidth
  nameWithType: Cursor.LineWidth
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.Position*
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: Position
  nameWithType: Cursor.Position
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionColor*
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: SelectionColor
  nameWithType: Cursor.SelectionColor
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd*
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: SelectionEnd
  nameWithType: Cursor.SelectionEnd
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart*
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: SelectionStart
  nameWithType: Cursor.SelectionStart
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPixelPosition*
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: SetCursorPixelPosition
  nameWithType: Cursor.SetCursorPixelPosition
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPosition*
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: SetCursorPosition
  nameWithType: Cursor.SetCursorPosition
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPixelPosition*
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: SetSelectionPixelPosition
  nameWithType: Cursor.SetSelectionPixelPosition
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition*
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: SetSelectionPosition
  nameWithType: Cursor.SetSelectionPosition
