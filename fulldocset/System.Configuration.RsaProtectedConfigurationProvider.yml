### YamlMime:ManagedReference
items:
- uid: System.Configuration.RsaProtectedConfigurationProvider
  id: RsaProtectedConfigurationProvider
  children:
  - System.Configuration.RsaProtectedConfigurationProvider.#ctor
  - System.Configuration.RsaProtectedConfigurationProvider.AddKey(System.Int32,System.Boolean)
  - System.Configuration.RsaProtectedConfigurationProvider.CspProviderName
  - System.Configuration.RsaProtectedConfigurationProvider.Decrypt(System.Xml.XmlNode)
  - System.Configuration.RsaProtectedConfigurationProvider.DeleteKey
  - System.Configuration.RsaProtectedConfigurationProvider.Encrypt(System.Xml.XmlNode)
  - System.Configuration.RsaProtectedConfigurationProvider.ExportKey(System.String,System.Boolean)
  - System.Configuration.RsaProtectedConfigurationProvider.ImportKey(System.String,System.Boolean)
  - System.Configuration.RsaProtectedConfigurationProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  - System.Configuration.RsaProtectedConfigurationProvider.KeyContainerName
  - System.Configuration.RsaProtectedConfigurationProvider.RsaPublicKey
  - System.Configuration.RsaProtectedConfigurationProvider.UseFIPS
  - System.Configuration.RsaProtectedConfigurationProvider.UseMachineContainer
  - System.Configuration.RsaProtectedConfigurationProvider.UseOAEP
  langs:
  - csharp
  name: RsaProtectedConfigurationProvider
  nameWithType: RsaProtectedConfigurationProvider
  fullName: System.Configuration.RsaProtectedConfigurationProvider
  type: Class
  summary: "제공 된 <xref href=&quot;System.Configuration.ProtectedConfigurationProvider&quot;> </xref> RSA 암호화를 사용 하 여 암호화 하 고 구성 데이터를 해독 하는 인스턴스."
  remarks: "RsaProtectedConfigurationProvider 클래스에 대 한 무단된 액세스 로부터 보호할 수 있는 구성 파일에 저장 된 중요 한 정보를 암호화 하는 방법을 제공 합니다. 공급자를 선언 하 고이 항목의 뒷부분에 나오는 예제에 나와 있는 것 처럼이 클래스의 인스턴스를 만드는 대신 구성 파일에 적절 한 설정 하 여 기본 제공 RsaProtectedConfigurationProvider 인스턴스를 사용 합니다.       RsaProtectedConfigurationProvider 개체에서 제공 되는 암호화 함수를 사용 하 여 <xref:System.Security.Cryptography.RSA>클래스를 암호화 하는 구성 섹션의 암호를 해독 합니다.</xref:System.Security.Cryptography.RSA>      > [!NOTE] > 하기 전에 ASP.NET 구성 파일에 암호화 된 정보를 해독할 수, ASP.NET 응용 프로그램의 id에는 구성 데이터 암호화 및 해독 하는 데 사용 된 암호화 키에 대 한 읽기 권한이 있어야 합니다. 자세한 내용은 참조 [연습: 암호화 구성 정보를 사용 하 여 보호 되는 구성](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example shows how to use the standard RsaProtectedConfigurationProvider to protect or unprotect a configuration section.  \n  \n [!code-vb[System.Configuration.RsaProtectedConfigurationProvider#1](~/add/codesnippet/visualbasic/t-system.configuration.r_1_1.vb)]\n [!code-cs[System.Configuration.RsaProtectedConfigurationProvider#1](~/add/codesnippet/csharp/t-system.configuration.r_1_1.cs)]  \n  \n The following example shows an excerpt from a configuration file after encryption.  \n  \n```  \n<?xml version=\"1.0\" encoding=\"utf-8\"?>  \n<configuration>  \n  <connectionStrings configProtectionProvider=\"RsaProtectedConfigurationProvider\">  \n    <EncryptedData Type=\"http://www.w3.org/2001/04/xmlenc#Element\"  \n        xmlns=\"http://www.w3.org/2001/04/xmlenc#\">  \n      <EncryptionMethod Algorithm=\"http://www.w3.org/2001/04/xmlenc#tripledes-cbc\" />  \n      <KeyInfo xmlns=\"http://www.w3.org/2000/09/xmldsig#\">  \n        <EncryptedKey xmlns=\"http://www.w3.org/2001/04/xmlenc#\">  \n          <EncryptionMethod Algorithm=\"http://www.w3.org/2001/04/xmlenc#rsa-1_5\" />  \n          <KeyInfo xmlns=\"http://www.w3.org/2000/09/xmldsig#\">  \n            <KeyName>Rsa Key</KeyName>  \n          </KeyInfo>  \n          <CipherData>  \n            <CipherValue>B702tRDVHJjC3CYXt7I0ucCDjdht/Vyk/DdUhwQyt7vepSD85dwCP8ox9Y1BUdjajFeTFfFBsGypbli5HPGRYamQdrVkPo07bBBXNT5H02qxREguGUU4iDtV1Xp8BLVZjQMV4ZgP6Wbctw2xRvPC7GvKHLI4fUN/Je5LmutsijA=</CipherValue>  \n          </CipherData>  \n        </EncryptedKey>  \n      </KeyInfo>  \n      <CipherData>  \n        <CipherValue>ME+XJA2TAj3QN3yT4pJq3sRArC0i7Cz3Da71BkaRe9QNfuVuUjcv0jeGUN4wDdOAZ7LPq6UpVrpirY3kQcALDvPJ5nKxk++Mw75rjtIO8eh2goTY9rCK6zanfzaDshFy7IqItpvs/y2kmij25nM3ury6uO0hCf0UbEL1mbT2jXDqvcrHZUobO1Ef6bygBZ/8HpU+VfF9CTCob/BBE9zUkK37EQhcduwsnzBvDblYbF/Rd+F4lxAkZnecGLfCZjOzJB4xH1a0vvWtPR7zNwL/7I0uHzQjyMdWrkBnotMjoR70R7NELBotCogWO0MBimncKigdR3dTTdrCd72a7UJ4LMlEQaZXGIJp4PIg6qVDHII=</CipherValue>  \n      </CipherData>  \n    </EncryptedData>  \n  </connectionStrings>  \n</configuration>  \n```"
  syntax:
    content: 'public sealed class RsaProtectedConfigurationProvider : System.Configuration.ProtectedConfigurationProvider'
  inheritance:
  - System.Object
  - System.Configuration.Provider.ProviderBase
  - System.Configuration.ProtectedConfigurationProvider
  implements: []
  inheritedMembers:
  - System.Configuration.Provider.ProviderBase.Description
  - System.Configuration.Provider.ProviderBase.Name
  platform:
  - net462
- uid: System.Configuration.RsaProtectedConfigurationProvider.#ctor
  id: '#ctor'
  parent: System.Configuration.RsaProtectedConfigurationProvider
  langs:
  - csharp
  name: RsaProtectedConfigurationProvider()
  nameWithType: RsaProtectedConfigurationProvider.RsaProtectedConfigurationProvider()
  fullName: System.Configuration.RsaProtectedConfigurationProvider.RsaProtectedConfigurationProvider()
  type: Constructor
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Configuration.RsaProtectedConfigurationProvider&quot;> </xref> 클래스입니다."
  remarks: "사용자 코드에서 직접 사용할 RsaProtectedConfigurationProvider 생성자를 사용 하는 것이 없습니다. ASP.NET 구성 시스템에 의해 호출 됩니다."
  syntax:
    content: public RsaProtectedConfigurationProvider ();
    parameters: []
  overload: System.Configuration.RsaProtectedConfigurationProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.RsaProtectedConfigurationProvider.AddKey(System.Int32,System.Boolean)
  id: AddKey(System.Int32,System.Boolean)
  parent: System.Configuration.RsaProtectedConfigurationProvider
  langs:
  - csharp
  name: AddKey(Int32,Boolean)
  nameWithType: RsaProtectedConfigurationProvider.AddKey(Int32,Boolean)
  fullName: System.Configuration.RsaProtectedConfigurationProvider.AddKey(Int32,Boolean)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "RSA 키 컨테이너에 키를 추가합니다."
  syntax:
    content: public void AddKey (int keySize, bool exportable);
    parameters:
    - id: keySize
      type: System.Int32
      description: "추가할 키의 크기입니다."
    - id: exportable
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>키를 내보낼 수 있습니다; 임을 나타내기 위해 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Configuration.RsaProtectedConfigurationProvider.AddKey*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.RsaProtectedConfigurationProvider.CspProviderName
  id: CspProviderName
  parent: System.Configuration.RsaProtectedConfigurationProvider
  langs:
  - csharp
  name: CspProviderName
  nameWithType: RsaProtectedConfigurationProvider.CspProviderName
  fullName: System.Configuration.RsaProtectedConfigurationProvider.CspProviderName
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Windows 암호화 API (crypto API) 암호화 서비스 공급자 (CSP)의 이름을 가져옵니다."
  syntax:
    content: public string CspProviderName { get; }
    return:
      type: System.String
      description: "CryptoAPI 암호화 서비스 공급자의 이름입니다."
  overload: System.Configuration.RsaProtectedConfigurationProvider.CspProviderName*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.RsaProtectedConfigurationProvider.Decrypt(System.Xml.XmlNode)
  id: Decrypt(System.Xml.XmlNode)
  parent: System.Configuration.RsaProtectedConfigurationProvider
  langs:
  - csharp
  name: Decrypt(XmlNode)
  nameWithType: RsaProtectedConfigurationProvider.Decrypt(XmlNode)
  fullName: System.Configuration.RsaProtectedConfigurationProvider.Decrypt(XmlNode)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "전달 된 XML 노드를 해독 합니다."
  syntax:
    content: public override System.Xml.XmlNode Decrypt (System.Xml.XmlNode encryptedNode);
    parameters:
    - id: encryptedNode
      type: System.Xml.XmlNode
      description: "<xref href=&quot;System.Xml.XmlNode&quot;> </xref> 를 해독 합니다."
    return:
      type: System.Xml.XmlNode
      description: "암호 해독 된 XML 노드입니다."
  overload: System.Configuration.RsaProtectedConfigurationProvider.Decrypt*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.RsaProtectedConfigurationProvider.DeleteKey
  id: DeleteKey
  parent: System.Configuration.RsaProtectedConfigurationProvider
  langs:
  - csharp
  name: DeleteKey()
  nameWithType: RsaProtectedConfigurationProvider.DeleteKey()
  fullName: System.Configuration.RsaProtectedConfigurationProvider.DeleteKey()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "RSA 키 컨테이너에서 키를 제거 합니다."
  syntax:
    content: public void DeleteKey ();
    parameters: []
  overload: System.Configuration.RsaProtectedConfigurationProvider.DeleteKey*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.RsaProtectedConfigurationProvider.Encrypt(System.Xml.XmlNode)
  id: Encrypt(System.Xml.XmlNode)
  parent: System.Configuration.RsaProtectedConfigurationProvider
  langs:
  - csharp
  name: Encrypt(XmlNode)
  nameWithType: RsaProtectedConfigurationProvider.Encrypt(XmlNode)
  fullName: System.Configuration.RsaProtectedConfigurationProvider.Encrypt(XmlNode)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "전달 된 XML 노드를 암호화 합니다."
  syntax:
    content: public override System.Xml.XmlNode Encrypt (System.Xml.XmlNode node);
    parameters:
    - id: node
      type: System.Xml.XmlNode
      description: "<xref href=&quot;System.Xml.XmlNode&quot;> </xref> 를 암호화 합니다."
    return:
      type: System.Xml.XmlNode
      description: "암호화 된 <xref href=&quot;System.Xml.XmlNode&quot;> </xref> 개체입니다."
  overload: System.Configuration.RsaProtectedConfigurationProvider.Encrypt*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.RsaProtectedConfigurationProvider.ExportKey(System.String,System.Boolean)
  id: ExportKey(System.String,System.Boolean)
  parent: System.Configuration.RsaProtectedConfigurationProvider
  langs:
  - csharp
  name: ExportKey(String,Boolean)
  nameWithType: RsaProtectedConfigurationProvider.ExportKey(String,Boolean)
  fullName: System.Configuration.RsaProtectedConfigurationProvider.ExportKey(String,Boolean)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "키 컨테이너에서 RSA 키를 내보냅니다."
  syntax:
    content: public void ExportKey (string xmlFileName, bool includePrivateParameters);
    parameters:
    - id: xmlFileName
      type: System.String
      description: "파일 이름과 키를 내보낼 경로입니다."
    - id: includePrivateParameters
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>private 매개 변수를 내보냈음을; 나타내기 위해 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Configuration.RsaProtectedConfigurationProvider.ExportKey*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>길이가&0; 인 문자열인, 공백만 포함 또는에 정의 된 대로 하나 이상의 잘못 된 문자가 들어 <xref:System.IO.Path.InvalidPathChars>합니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "지정된 된 경로, 파일 이름 또는 둘 다에 시스템 정의 최대 길이 초과 합니다. 예를 들어 Windows 기반 플랫폼에서 경로 248 자 미만, 이어야 하 고 파일 이름은 260 자 미만 이어야 합니다."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "지정된 된 경로 예: 매핑되지 않은 드라이브에 올바르지 않습니다."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "파일을 여는 동안 오류가 발생 했습니다."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>파일을 지정한 경우 읽기 전용입니다.       -또는-이 작업은 현재 플랫폼에서 지원 되지 않습니다.       -또는- <code>path</code> 가 디렉터리를 지정 합니다.       -또는-호출자에 게는 필요한 사용 권한이 없습니다."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "에 지정 된 파일 <code> path </code> 찾을 수 없습니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>잘못 된 형식입니다."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "호출자에 게 필요한 권한이 없습니다."
  platform:
  - net462
- uid: System.Configuration.RsaProtectedConfigurationProvider.ImportKey(System.String,System.Boolean)
  id: ImportKey(System.String,System.Boolean)
  parent: System.Configuration.RsaProtectedConfigurationProvider
  langs:
  - csharp
  name: ImportKey(String,Boolean)
  nameWithType: RsaProtectedConfigurationProvider.ImportKey(String,Boolean)
  fullName: System.Configuration.RsaProtectedConfigurationProvider.ImportKey(String,Boolean)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "RSA 키를 키 컨테이너로 가져옵니다."
  syntax:
    content: public void ImportKey (string xmlFileName, bool exportable);
    parameters:
    - id: xmlFileName
      type: System.String
      description: "파일 이름과에서 키를 가져올 경로입니다."
    - id: exportable
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>키를 내보낼 수 있습니다; 임을 나타내기 위해 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Configuration.RsaProtectedConfigurationProvider.ImportKey*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>길이가&0; 인 문자열인, 공백만 포함 또는에 정의 된 대로 하나 이상의 잘못 된 문자가 들어 <xref:System.IO.Path.InvalidPathChars>합니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "지정된 된 경로, 파일 이름 또는 둘 다에 시스템 정의 최대 길이 초과 합니다. 예를 들어 Windows 기반 플랫폼에서 경로 248 자 미만, 이어야 하 고 파일 이름은 260 자 미만 이어야 합니다."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "지정된 된 경로 예: 매핑되지 않은 드라이브에 올바르지 않습니다."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "파일을 여는 동안 오류가 발생 했습니다."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>파일을 지정한 경우 쓰기 전용입니다.       -또는-이 작업은 현재 플랫폼에서 지원 되지 않습니다.       -또는- <code>path</code> 가 디렉터리를 지정 합니다.       -또는-호출자에 게는 필요한 사용 권한이 없습니다."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "에 지정 된 파일 <code> path </code> 찾을 수 없습니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>잘못 된 형식입니다."
  platform:
  - net462
- uid: System.Configuration.RsaProtectedConfigurationProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  id: Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Configuration.RsaProtectedConfigurationProvider
  langs:
  - csharp
  name: Initialize(String,NameValueCollection)
  nameWithType: RsaProtectedConfigurationProvider.Initialize(String,NameValueCollection)
  fullName: System.Configuration.RsaProtectedConfigurationProvider.Initialize(String,NameValueCollection)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "기본 설정 사용 하 여 공급자를 초기화합니다."
  syntax:
    content: public override void Initialize (string name, System.Collections.Specialized.NameValueCollection configurationValues);
    parameters:
    - id: name
      type: System.String
      description: "개체에 사용할 공급자 이름입니다."
    - id: configurationValues
      type: System.Collections.Specialized.NameValueCollection
      description: "A <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> 개체를 초기화할 때 사용할 값의 컬렉션입니다."
  overload: System.Configuration.RsaProtectedConfigurationProvider.Initialize*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "<code>configurationValues</code>하나 이상의 인식할 수 없는 값을 포함합니다."
  platform:
  - net462
- uid: System.Configuration.RsaProtectedConfigurationProvider.KeyContainerName
  id: KeyContainerName
  parent: System.Configuration.RsaProtectedConfigurationProvider
  langs:
  - csharp
  name: KeyContainerName
  nameWithType: RsaProtectedConfigurationProvider.KeyContainerName
  fullName: System.Configuration.RsaProtectedConfigurationProvider.KeyContainerName
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "키 컨테이너의 이름을 가져옵니다."
  syntax:
    content: public string KeyContainerName { get; }
    return:
      type: System.String
      description: "키 컨테이너의 이름입니다."
  overload: System.Configuration.RsaProtectedConfigurationProvider.KeyContainerName*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.RsaProtectedConfigurationProvider.RsaPublicKey
  id: RsaPublicKey
  parent: System.Configuration.RsaProtectedConfigurationProvider
  langs:
  - csharp
  name: RsaPublicKey
  nameWithType: RsaProtectedConfigurationProvider.RsaPublicKey
  fullName: System.Configuration.RsaProtectedConfigurationProvider.RsaPublicKey
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "공급자가 사용 된 공개 키를 가져옵니다."
  syntax:
    content: public System.Security.Cryptography.RSAParameters RsaPublicKey { get; }
    return:
      type: System.Security.Cryptography.RSAParameters
      description: "<xref href=&quot;System.Security.Cryptography.RSAParameters&quot;> </xref> 공급자가 사용 된 공개 키를 포함 하는 개체입니다."
  overload: System.Configuration.RsaProtectedConfigurationProvider.RsaPublicKey*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.RsaProtectedConfigurationProvider.UseFIPS
  id: UseFIPS
  parent: System.Configuration.RsaProtectedConfigurationProvider
  langs:
  - csharp
  name: UseFIPS
  nameWithType: RsaProtectedConfigurationProvider.UseFIPS
  fullName: System.Configuration.RsaProtectedConfigurationProvider.UseFIPS
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "공급자가 FIPS를 사용 하는지 여부를 나타내는 값을 가져옵니다."
  syntax:
    content: public bool UseFIPS { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>공급자가 FIPS를 사용 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Configuration.RsaProtectedConfigurationProvider.UseFIPS*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.RsaProtectedConfigurationProvider.UseMachineContainer
  id: UseMachineContainer
  parent: System.Configuration.RsaProtectedConfigurationProvider
  langs:
  - csharp
  name: UseMachineContainer
  nameWithType: RsaProtectedConfigurationProvider.UseMachineContainer
  fullName: System.Configuration.RsaProtectedConfigurationProvider.UseMachineContainer
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "나타내는 값을 가져옵니다 여부는 <xref href=&quot;System.Configuration.RsaProtectedConfigurationProvider&quot;> </xref> 개체가 컴퓨터 키 컨테이너를 사용 합니다."
  syntax:
    content: public bool UseMachineContainer { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우는 <xref href=&quot;System.Configuration.RsaProtectedConfigurationProvider&quot;> </xref> 개체가 컴퓨터 키 컨테이너를 사용, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Configuration.RsaProtectedConfigurationProvider.UseMachineContainer*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.RsaProtectedConfigurationProvider.UseOAEP
  id: UseOAEP
  parent: System.Configuration.RsaProtectedConfigurationProvider
  langs:
  - csharp
  name: UseOAEP
  nameWithType: RsaProtectedConfigurationProvider.UseOAEP
  fullName: System.Configuration.RsaProtectedConfigurationProvider.UseOAEP
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "비대칭 암호화 OAEP (Optimal Padding) 키 교환 데이터 공급자를 사용 중인지 여부를 나타내는 값을 가져옵니다."
  syntax:
    content: public bool UseOAEP { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우는 <xref href=&quot;System.Configuration.RsaProtectedConfigurationProvider&quot;> </xref> 개체 비대칭 암호화 패딩 OAEP (Optimal) 키 교환 데이터를 사용 하 고, 그렇지 않으면, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Configuration.RsaProtectedConfigurationProvider.UseOAEP*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.ProtectedConfigurationProvider
  isExternal: false
  name: System.Configuration.ProtectedConfigurationProvider
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.IO.PathTooLongException
  isExternal: true
  name: System.IO.PathTooLongException
- uid: System.IO.DirectoryNotFoundException
  isExternal: true
  name: System.IO.DirectoryNotFoundException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.UnauthorizedAccessException
  isExternal: true
  name: System.UnauthorizedAccessException
- uid: System.IO.FileNotFoundException
  isExternal: true
  name: System.IO.FileNotFoundException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.Configuration.ConfigurationErrorsException
  parent: System.Configuration
  isExternal: false
  name: ConfigurationErrorsException
  nameWithType: ConfigurationErrorsException
  fullName: System.Configuration.ConfigurationErrorsException
- uid: System.Configuration.RsaProtectedConfigurationProvider.#ctor
  parent: System.Configuration.RsaProtectedConfigurationProvider
  isExternal: false
  name: RsaProtectedConfigurationProvider()
  nameWithType: RsaProtectedConfigurationProvider.RsaProtectedConfigurationProvider()
  fullName: System.Configuration.RsaProtectedConfigurationProvider.RsaProtectedConfigurationProvider()
- uid: System.Configuration.RsaProtectedConfigurationProvider.AddKey(System.Int32,System.Boolean)
  parent: System.Configuration.RsaProtectedConfigurationProvider
  isExternal: false
  name: AddKey(Int32,Boolean)
  nameWithType: RsaProtectedConfigurationProvider.AddKey(Int32,Boolean)
  fullName: System.Configuration.RsaProtectedConfigurationProvider.AddKey(Int32,Boolean)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Configuration.RsaProtectedConfigurationProvider.CspProviderName
  parent: System.Configuration.RsaProtectedConfigurationProvider
  isExternal: false
  name: CspProviderName
  nameWithType: RsaProtectedConfigurationProvider.CspProviderName
  fullName: System.Configuration.RsaProtectedConfigurationProvider.CspProviderName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Configuration.RsaProtectedConfigurationProvider.Decrypt(System.Xml.XmlNode)
  parent: System.Configuration.RsaProtectedConfigurationProvider
  isExternal: false
  name: Decrypt(XmlNode)
  nameWithType: RsaProtectedConfigurationProvider.Decrypt(XmlNode)
  fullName: System.Configuration.RsaProtectedConfigurationProvider.Decrypt(XmlNode)
- uid: System.Xml.XmlNode
  parent: System.Xml
  isExternal: false
  name: XmlNode
  nameWithType: XmlNode
  fullName: System.Xml.XmlNode
- uid: System.Configuration.RsaProtectedConfigurationProvider.DeleteKey
  parent: System.Configuration.RsaProtectedConfigurationProvider
  isExternal: false
  name: DeleteKey()
  nameWithType: RsaProtectedConfigurationProvider.DeleteKey()
  fullName: System.Configuration.RsaProtectedConfigurationProvider.DeleteKey()
- uid: System.Configuration.RsaProtectedConfigurationProvider.Encrypt(System.Xml.XmlNode)
  parent: System.Configuration.RsaProtectedConfigurationProvider
  isExternal: false
  name: Encrypt(XmlNode)
  nameWithType: RsaProtectedConfigurationProvider.Encrypt(XmlNode)
  fullName: System.Configuration.RsaProtectedConfigurationProvider.Encrypt(XmlNode)
- uid: System.Configuration.RsaProtectedConfigurationProvider.ExportKey(System.String,System.Boolean)
  parent: System.Configuration.RsaProtectedConfigurationProvider
  isExternal: false
  name: ExportKey(String,Boolean)
  nameWithType: RsaProtectedConfigurationProvider.ExportKey(String,Boolean)
  fullName: System.Configuration.RsaProtectedConfigurationProvider.ExportKey(String,Boolean)
- uid: System.Configuration.RsaProtectedConfigurationProvider.ImportKey(System.String,System.Boolean)
  parent: System.Configuration.RsaProtectedConfigurationProvider
  isExternal: false
  name: ImportKey(String,Boolean)
  nameWithType: RsaProtectedConfigurationProvider.ImportKey(String,Boolean)
  fullName: System.Configuration.RsaProtectedConfigurationProvider.ImportKey(String,Boolean)
- uid: System.Configuration.RsaProtectedConfigurationProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Configuration.RsaProtectedConfigurationProvider
  isExternal: false
  name: Initialize(String,NameValueCollection)
  nameWithType: RsaProtectedConfigurationProvider.Initialize(String,NameValueCollection)
  fullName: System.Configuration.RsaProtectedConfigurationProvider.Initialize(String,NameValueCollection)
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Configuration.RsaProtectedConfigurationProvider.KeyContainerName
  parent: System.Configuration.RsaProtectedConfigurationProvider
  isExternal: false
  name: KeyContainerName
  nameWithType: RsaProtectedConfigurationProvider.KeyContainerName
  fullName: System.Configuration.RsaProtectedConfigurationProvider.KeyContainerName
- uid: System.Configuration.RsaProtectedConfigurationProvider.RsaPublicKey
  parent: System.Configuration.RsaProtectedConfigurationProvider
  isExternal: false
  name: RsaPublicKey
  nameWithType: RsaProtectedConfigurationProvider.RsaPublicKey
  fullName: System.Configuration.RsaProtectedConfigurationProvider.RsaPublicKey
- uid: System.Security.Cryptography.RSAParameters
  parent: System.Security.Cryptography
  isExternal: false
  name: RSAParameters
  nameWithType: RSAParameters
  fullName: System.Security.Cryptography.RSAParameters
- uid: System.Configuration.RsaProtectedConfigurationProvider.UseFIPS
  parent: System.Configuration.RsaProtectedConfigurationProvider
  isExternal: false
  name: UseFIPS
  nameWithType: RsaProtectedConfigurationProvider.UseFIPS
  fullName: System.Configuration.RsaProtectedConfigurationProvider.UseFIPS
- uid: System.Configuration.RsaProtectedConfigurationProvider.UseMachineContainer
  parent: System.Configuration.RsaProtectedConfigurationProvider
  isExternal: false
  name: UseMachineContainer
  nameWithType: RsaProtectedConfigurationProvider.UseMachineContainer
  fullName: System.Configuration.RsaProtectedConfigurationProvider.UseMachineContainer
- uid: System.Configuration.RsaProtectedConfigurationProvider.UseOAEP
  parent: System.Configuration.RsaProtectedConfigurationProvider
  isExternal: false
  name: UseOAEP
  nameWithType: RsaProtectedConfigurationProvider.UseOAEP
  fullName: System.Configuration.RsaProtectedConfigurationProvider.UseOAEP
- uid: System.Configuration.RsaProtectedConfigurationProvider.#ctor*
  parent: System.Configuration.RsaProtectedConfigurationProvider
  isExternal: false
  name: RsaProtectedConfigurationProvider
  nameWithType: RsaProtectedConfigurationProvider.RsaProtectedConfigurationProvider
- uid: System.Configuration.RsaProtectedConfigurationProvider.AddKey*
  parent: System.Configuration.RsaProtectedConfigurationProvider
  isExternal: false
  name: AddKey
  nameWithType: RsaProtectedConfigurationProvider.AddKey
- uid: System.Configuration.RsaProtectedConfigurationProvider.CspProviderName*
  parent: System.Configuration.RsaProtectedConfigurationProvider
  isExternal: false
  name: CspProviderName
  nameWithType: RsaProtectedConfigurationProvider.CspProviderName
- uid: System.Configuration.RsaProtectedConfigurationProvider.Decrypt*
  parent: System.Configuration.RsaProtectedConfigurationProvider
  isExternal: false
  name: Decrypt
  nameWithType: RsaProtectedConfigurationProvider.Decrypt
- uid: System.Configuration.RsaProtectedConfigurationProvider.DeleteKey*
  parent: System.Configuration.RsaProtectedConfigurationProvider
  isExternal: false
  name: DeleteKey
  nameWithType: RsaProtectedConfigurationProvider.DeleteKey
- uid: System.Configuration.RsaProtectedConfigurationProvider.Encrypt*
  parent: System.Configuration.RsaProtectedConfigurationProvider
  isExternal: false
  name: Encrypt
  nameWithType: RsaProtectedConfigurationProvider.Encrypt
- uid: System.Configuration.RsaProtectedConfigurationProvider.ExportKey*
  parent: System.Configuration.RsaProtectedConfigurationProvider
  isExternal: false
  name: ExportKey
  nameWithType: RsaProtectedConfigurationProvider.ExportKey
- uid: System.Configuration.RsaProtectedConfigurationProvider.ImportKey*
  parent: System.Configuration.RsaProtectedConfigurationProvider
  isExternal: false
  name: ImportKey
  nameWithType: RsaProtectedConfigurationProvider.ImportKey
- uid: System.Configuration.RsaProtectedConfigurationProvider.Initialize*
  parent: System.Configuration.RsaProtectedConfigurationProvider
  isExternal: false
  name: Initialize
  nameWithType: RsaProtectedConfigurationProvider.Initialize
- uid: System.Configuration.RsaProtectedConfigurationProvider.KeyContainerName*
  parent: System.Configuration.RsaProtectedConfigurationProvider
  isExternal: false
  name: KeyContainerName
  nameWithType: RsaProtectedConfigurationProvider.KeyContainerName
- uid: System.Configuration.RsaProtectedConfigurationProvider.RsaPublicKey*
  parent: System.Configuration.RsaProtectedConfigurationProvider
  isExternal: false
  name: RsaPublicKey
  nameWithType: RsaProtectedConfigurationProvider.RsaPublicKey
- uid: System.Configuration.RsaProtectedConfigurationProvider.UseFIPS*
  parent: System.Configuration.RsaProtectedConfigurationProvider
  isExternal: false
  name: UseFIPS
  nameWithType: RsaProtectedConfigurationProvider.UseFIPS
- uid: System.Configuration.RsaProtectedConfigurationProvider.UseMachineContainer*
  parent: System.Configuration.RsaProtectedConfigurationProvider
  isExternal: false
  name: UseMachineContainer
  nameWithType: RsaProtectedConfigurationProvider.UseMachineContainer
- uid: System.Configuration.RsaProtectedConfigurationProvider.UseOAEP*
  parent: System.Configuration.RsaProtectedConfigurationProvider
  isExternal: false
  name: UseOAEP
  nameWithType: RsaProtectedConfigurationProvider.UseOAEP
