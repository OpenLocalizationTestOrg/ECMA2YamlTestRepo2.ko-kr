### YamlMime:ManagedReference
items:
- uid: System.Messaging.BinaryMessageFormatter
  id: BinaryMessageFormatter
  children:
  - System.Messaging.BinaryMessageFormatter.#ctor
  - System.Messaging.BinaryMessageFormatter.#ctor(System.Runtime.Serialization.Formatters.FormatterAssemblyStyle,System.Runtime.Serialization.Formatters.FormatterTypeStyle)
  - System.Messaging.BinaryMessageFormatter.CanRead(System.Messaging.Message)
  - System.Messaging.BinaryMessageFormatter.Clone
  - System.Messaging.BinaryMessageFormatter.Read(System.Messaging.Message)
  - System.Messaging.BinaryMessageFormatter.TopObjectFormat
  - System.Messaging.BinaryMessageFormatter.TypeFormat
  - System.Messaging.BinaryMessageFormatter.Write(System.Messaging.Message,System.Object)
  langs:
  - csharp
  name: BinaryMessageFormatter
  nameWithType: BinaryMessageFormatter
  fullName: System.Messaging.BinaryMessageFormatter
  type: Class
  summary: "직렬화 또는 개체 또는 이진 형식을 사용 하 여 메시지 큐 메시지의 본문에서 연결 된 개체에 대 한 전체 그래프를 역직렬화 합니다."
  remarks: "BinaryMessageFormatter 매우 효율적 이며 대부분의 개체를 직렬화 하는 데 사용할 수 있습니다. 결과 간단 하 고 빠르게 구문 분석을 하지만 느슨하게 결합 된 메시징을으로 허용 하지 않습니다는 <xref:System.Messaging.XmlMessageFormatter>않습니다.</xref:System.Messaging.XmlMessageFormatter> 느슨하게 연결 된 의미 하는 클라이언트와 서버에서 다를 수 전송 및 수신 되는 형식 버전입니다.       응용 프로그램의 인스턴스를 사용 하 여 큐에 메시지를 보낼 때는 <xref:System.Messaging.MessageQueue>포맷터 클래스 개체를 스트림으로 serialize 하 고 메시지 본문에 삽입 합니다.</xref:System.Messaging.MessageQueue> 을 사용 하는 <xref:System.Messaging.MessageQueue>포맷터는 메시지 데이터 <xref:System.Messaging.Message.Body%2A> <xref:System.Messaging.Message>.</xref:System.Messaging.Message> 의 속성</xref:System.Messaging.Message.Body%2A> 으로,</xref:System.Messaging.MessageQueue> 큐에서 읽을 때       BinaryMessageFormatter은 <xref:System.Messaging.XmlMessageFormatter>.</xref:System.Messaging.XmlMessageFormatter> 보다 처리량 BinaryMessageFormatter 순수 속도 보다 느슨하게 결합 된 메시징는 필요한 경우 사용 합니다."
  example:
  - >-
    [!code-cpp[MessagingBinaryFormatter#1](~/add/codesnippet/cpp/t-system.messaging.binar_1.cpp)]
     [!code-cs[MessagingBinaryFormatter#1](~/add/codesnippet/csharp/t-system.messaging.binar_1.cs)]
     [!code-vb[MessagingBinaryFormatter#1](~/add/codesnippet/visualbasic/t-system.messaging.binar_1.vb)]
  syntax:
    content: 'public class BinaryMessageFormatter : ICloneable, System.Messaging.IMessageFormatter'
  inheritance:
  - System.Object
  implements:
  - System.ICloneable
  - System.Messaging.IMessageFormatter
  inheritedMembers: []
  platform:
  - net462
- uid: System.Messaging.BinaryMessageFormatter.#ctor
  id: '#ctor'
  parent: System.Messaging.BinaryMessageFormatter
  langs:
  - csharp
  name: BinaryMessageFormatter()
  nameWithType: BinaryMessageFormatter.BinaryMessageFormatter()
  fullName: System.Messaging.BinaryMessageFormatter.BinaryMessageFormatter()
  type: Constructor
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Messaging.BinaryMessageFormatter&quot;> </xref> 형식 스타일 또는 최상위 개체 어셈블리 스타일을 지정 하지 않고 클래스입니다."
  remarks: "에 대 한 값을 지정 해야 합니다는 <xref:System.Messaging.BinaryMessageFormatter.TopObjectFormat%2A>속성 (그래프의 루트 개체 레이아웃 방법을 정의) 및 <xref:System.Messaging.BinaryMessageFormatter.TypeFormat%2A>속성 (개체 유형 설명 레이아웃 하는 방법 정의)의 인스턴스를 사용 하기 전에 <xref:System.Messaging.BinaryMessageFormatter>클래스를 직렬화 하 고 메시지를 보냅니다.</xref:System.Messaging.BinaryMessageFormatter> </xref:System.Messaging.BinaryMessageFormatter.TypeFormat%2A> </xref:System.Messaging.BinaryMessageFormatter.TopObjectFormat%2A>"
  syntax:
    content: public BinaryMessageFormatter ();
    parameters: []
  overload: System.Messaging.BinaryMessageFormatter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.BinaryMessageFormatter.#ctor(System.Runtime.Serialization.Formatters.FormatterAssemblyStyle,System.Runtime.Serialization.Formatters.FormatterTypeStyle)
  id: '#ctor(System.Runtime.Serialization.Formatters.FormatterAssemblyStyle,System.Runtime.Serialization.Formatters.FormatterTypeStyle)'
  parent: System.Messaging.BinaryMessageFormatter
  langs:
  - csharp
  name: BinaryMessageFormatter(FormatterAssemblyStyle,FormatterTypeStyle)
  nameWithType: BinaryMessageFormatter.BinaryMessageFormatter(FormatterAssemblyStyle,FormatterTypeStyle)
  fullName: System.Messaging.BinaryMessageFormatter.BinaryMessageFormatter(FormatterAssemblyStyle,FormatterTypeStyle)
  type: Constructor
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Messaging.BinaryMessageFormatter&quot;> </xref> 클래스, 루트 개체와 형식 설명의 형식을 지정 합니다."
  syntax:
    content: public BinaryMessageFormatter (System.Runtime.Serialization.Formatters.FormatterAssemblyStyle topObjectFormat, System.Runtime.Serialization.Formatters.FormatterTypeStyle typeFormat);
    parameters:
    - id: topObjectFormat
      type: System.Runtime.Serialization.Formatters.FormatterAssemblyStyle
      description: "직렬화 된 스트림에 그래프의 최상위 (루트) 개체 레이아웃 방법을 결정 합니다."
    - id: typeFormat
      type: System.Runtime.Serialization.Formatters.FormatterTypeStyle
      description: "Serialize 된 스트림으로에 유형 설명으로 배치 된 방법을 결정 합니다."
  overload: System.Messaging.BinaryMessageFormatter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.BinaryMessageFormatter.CanRead(System.Messaging.Message)
  id: CanRead(System.Messaging.Message)
  parent: System.Messaging.BinaryMessageFormatter
  langs:
  - csharp
  name: CanRead(Message)
  nameWithType: BinaryMessageFormatter.CanRead(Message)
  fullName: System.Messaging.BinaryMessageFormatter.CanRead(Message)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "포맷터는 메시지의 콘텐츠를 deserialize 할 수 있는지 여부를 결정 합니다."
  remarks: "CanRead 반환 `false` 메시지 본문 이진 개체인 경우.       CanRead 받는 컴퓨터에서 반환 `true` 역직렬화 하는 클래스에 대 한 어셈블리를 로컬로 존재 하는 경우. 어셈블리를 전역 어셈블리 캐시에서 발견 되어야 하거나 (예를 들어 경우 해당 개체가 나타내는 사용자 지정 클래스) 응용 프로그램에 연결 합니다."
  syntax:
    content: public bool CanRead (System.Messaging.Message message);
    parameters:
    - id: message
      type: System.Messaging.Message
      description: "<xref href=&quot;System.Messaging.Message&quot;> </xref> 를 검토 합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>이진 메시지 포맷터에서 메시지를 deserialize 할 수 있는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Messaging.BinaryMessageFormatter.CanRead*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>message</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Messaging.BinaryMessageFormatter.Clone
  id: Clone
  parent: System.Messaging.BinaryMessageFormatter
  langs:
  - csharp
  name: Clone()
  nameWithType: BinaryMessageFormatter.Clone()
  fullName: System.Messaging.BinaryMessageFormatter.Clone()
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "인스턴스를 만듭니다는 <xref href=&quot;System.Messaging.BinaryMessageFormatter&quot;> </xref> 클래스는 읽기/쓰기 속성 (의 루트 개체 및 형식 설명 형식)은 현재 동일 <xref href=&quot;System.Messaging.BinaryMessageFormatter&quot;> </xref>합니다."
  remarks: "이 메서드는 포맷터의 복사본을 만들고이 <xref:System.Messaging.BinaryMessageFormatter>.</xref:System.Messaging.BinaryMessageFormatter> 의 값에 해당 하는 모든 속성을 초기화 합니다. 확장성을 위해 사용 되는 하지만 않습니다 하지 보장 읽기 또는 쓰기 스레드로부터의 안전성."
  syntax:
    content: public object Clone ();
    parameters: []
    return:
      type: System.Object
      description: "이 동일한 속성을 가진 개체 <xref href=&quot;System.Messaging.BinaryMessageFormatter&quot;> </xref>, 하지만 해당 메타 데이터 포맷터 클래스 인스턴스 수를 지정 하지 않습니다."
  overload: System.Messaging.BinaryMessageFormatter.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.BinaryMessageFormatter.Read(System.Messaging.Message)
  id: Read(System.Messaging.Message)
  parent: System.Messaging.BinaryMessageFormatter
  langs:
  - csharp
  name: Read(Message)
  nameWithType: BinaryMessageFormatter.Read(Message)
  fullName: System.Messaging.BinaryMessageFormatter.Read(Message)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "지정된 된 메시지의 콘텐츠를 읽고 deserialize 된 메시지를 포함 하는 개체를 만듭니다."
  remarks: "> [!IMPORTANT]> 신뢰할 수 없는 데이터로이 메서드를 호출 하는 것은 보안상 위험 합니다. 신뢰할 수 있는 데이터에만이 메서드를 호출 합니다. 자세한 내용은 참조 [신뢰할 수 없는 데이터 보안 위험](http://go.microsoft.com/fwlink/?LinkId=330378)합니다.       메시지의 본문 이진 형식 이어야 하며 처음 직렬화 된 것과 메시지를 deserialize 하는 데 동일한 직렬 변환기를 사용 해야 합니다. 본문에는 사용자 지정 클래스를 나타내는 경우 해당 클래스에 대 한 어셈블리는 로컬로 존재 해야 합니다."
  syntax:
    content: public object Read (System.Messaging.Message message);
    parameters:
    - id: message
      type: System.Messaging.Message
      description: "<xref href=&quot;System.Messaging.Message&quot;> </xref>를 deserialize 하는 데 이진 형식에서입니다."
    return:
      type: System.Object
      description: "Deserialize 된 메시지입니다."
  overload: System.Messaging.BinaryMessageFormatter.Read*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "메시지의 <xref:System.Messaging.Message.BodyType*>속성 이진 개체를 나타내지 않습니다.</xref:System.Messaging.Message.BodyType*>"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>message</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Messaging.BinaryMessageFormatter.TopObjectFormat
  id: TopObjectFormat
  parent: System.Messaging.BinaryMessageFormatter
  langs:
  - csharp
  name: TopObjectFormat
  nameWithType: BinaryMessageFormatter.TopObjectFormat
  fullName: System.Messaging.BinaryMessageFormatter.TopObjectFormat
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "찾기 및 해당 어셈블리를 로드할 때 그래프의 최상위 (루트) 개체가 deserialize 되는 방식을 정의 하는 값을 가져오거나 설정 합니다."
  remarks: "기본값을 적용 해야 하는 현재 `AssemblyStyle`합니다."
  syntax:
    content: public System.Runtime.Serialization.Formatters.FormatterAssemblyStyle TopObjectFormat { get; set; }
    return:
      type: System.Runtime.Serialization.Formatters.FormatterAssemblyStyle
      description: "중 하나는 <xref href=&quot;System.Runtime.Serialization.Formatters.FormatterAssemblyStyle&quot;> </xref> 역직렬화 동작을 정의 하는 값입니다."
  overload: System.Messaging.BinaryMessageFormatter.TopObjectFormat*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.BinaryMessageFormatter.TypeFormat
  id: TypeFormat
  parent: System.Messaging.BinaryMessageFormatter
  langs:
  - csharp
  name: TypeFormat
  nameWithType: BinaryMessageFormatter.TypeFormat
  fullName: System.Messaging.BinaryMessageFormatter.TypeFormat
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Serialize 된 스트림으로에 유형 설명으로 배치 된 방법을 정의 하는 값을 가져오거나 설정 합니다."
  remarks: "기본값을 적용 해야 하는 현재 `TypesWhenNeeded`합니다."
  syntax:
    content: public System.Runtime.Serialization.Formatters.FormatterTypeStyle TypeFormat { get; set; }
    return:
      type: System.Runtime.Serialization.Formatters.FormatterTypeStyle
      description: "A <xref href=&quot;System.Runtime.Serialization.Formatters.FormatterTypeStyle&quot;> </xref> 형식 설명 형식을 정의 하는 합니다."
  overload: System.Messaging.BinaryMessageFormatter.TypeFormat*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.BinaryMessageFormatter.Write(System.Messaging.Message,System.Object)
  id: Write(System.Messaging.Message,System.Object)
  parent: System.Messaging.BinaryMessageFormatter
  langs:
  - csharp
  name: Write(Message,Object)
  nameWithType: BinaryMessageFormatter.Write(Message,Object)
  fullName: System.Messaging.BinaryMessageFormatter.Write(Message,Object)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "메시지의 본문으로 개체를 serialize합니다."
  remarks: "Top 개체 형식 및 형식 서식 지정할 필요가 없습니다 읽을 때 있어야 큐에 쓰려고 합니다. <xref:System.Messaging.BinaryMessageFormatter.TopObjectFormat%2A>및 <xref:System.Messaging.BinaryMessageFormatter.TypeFormat%2A>속성은 메시지를 역직렬화 하는 경우에 포맷터에 의해 사용 됩니다.</xref:System.Messaging.BinaryMessageFormatter.TypeFormat%2A> </xref:System.Messaging.BinaryMessageFormatter.TopObjectFormat%2A>       <xref:System.Messaging.BinaryMessageFormatter>대부분의 개체를 serialize 할 수 있지만 결과 느슨하게 결합 되지 않습니다.</xref:System.Messaging.BinaryMessageFormatter> 그러나 이므로 compact, 포맷터는 큰 개체에 알맞습니다."
  syntax:
    content: public void Write (System.Messaging.Message message, object obj);
    parameters:
    - id: message
      type: System.Messaging.Message
      description: "<xref href=&quot;System.Messaging.Message&quot;> </xref> 인 <xref:System.Messaging.Message.Body*>속성은 직렬화 된 개체를 포함 합니다.</xref:System.Messaging.Message.Body*>"
    - id: obj
      type: System.Object
      description: "메시지 본문으로 serialize 할 개체입니다."
  overload: System.Messaging.BinaryMessageFormatter.Write*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>message</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Messaging.BinaryMessageFormatter.#ctor
  parent: System.Messaging.BinaryMessageFormatter
  isExternal: false
  name: BinaryMessageFormatter()
  nameWithType: BinaryMessageFormatter.BinaryMessageFormatter()
  fullName: System.Messaging.BinaryMessageFormatter.BinaryMessageFormatter()
- uid: System.Messaging.BinaryMessageFormatter.#ctor(System.Runtime.Serialization.Formatters.FormatterAssemblyStyle,System.Runtime.Serialization.Formatters.FormatterTypeStyle)
  parent: System.Messaging.BinaryMessageFormatter
  isExternal: false
  name: BinaryMessageFormatter(FormatterAssemblyStyle,FormatterTypeStyle)
  nameWithType: BinaryMessageFormatter.BinaryMessageFormatter(FormatterAssemblyStyle,FormatterTypeStyle)
  fullName: System.Messaging.BinaryMessageFormatter.BinaryMessageFormatter(FormatterAssemblyStyle,FormatterTypeStyle)
- uid: System.Runtime.Serialization.Formatters.FormatterAssemblyStyle
  parent: System.Runtime.Serialization.Formatters
  isExternal: false
  name: FormatterAssemblyStyle
  nameWithType: FormatterAssemblyStyle
  fullName: System.Runtime.Serialization.Formatters.FormatterAssemblyStyle
- uid: System.Runtime.Serialization.Formatters.FormatterTypeStyle
  parent: System.Runtime.Serialization.Formatters
  isExternal: false
  name: FormatterTypeStyle
  nameWithType: FormatterTypeStyle
  fullName: System.Runtime.Serialization.Formatters.FormatterTypeStyle
- uid: System.Messaging.BinaryMessageFormatter.CanRead(System.Messaging.Message)
  parent: System.Messaging.BinaryMessageFormatter
  isExternal: false
  name: CanRead(Message)
  nameWithType: BinaryMessageFormatter.CanRead(Message)
  fullName: System.Messaging.BinaryMessageFormatter.CanRead(Message)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Messaging.Message
  parent: System.Messaging
  isExternal: false
  name: Message
  nameWithType: Message
  fullName: System.Messaging.Message
- uid: System.Messaging.BinaryMessageFormatter.Clone
  parent: System.Messaging.BinaryMessageFormatter
  isExternal: false
  name: Clone()
  nameWithType: BinaryMessageFormatter.Clone()
  fullName: System.Messaging.BinaryMessageFormatter.Clone()
- uid: System.Messaging.BinaryMessageFormatter.Read(System.Messaging.Message)
  parent: System.Messaging.BinaryMessageFormatter
  isExternal: false
  name: Read(Message)
  nameWithType: BinaryMessageFormatter.Read(Message)
  fullName: System.Messaging.BinaryMessageFormatter.Read(Message)
- uid: System.Messaging.BinaryMessageFormatter.TopObjectFormat
  parent: System.Messaging.BinaryMessageFormatter
  isExternal: false
  name: TopObjectFormat
  nameWithType: BinaryMessageFormatter.TopObjectFormat
  fullName: System.Messaging.BinaryMessageFormatter.TopObjectFormat
- uid: System.Messaging.BinaryMessageFormatter.TypeFormat
  parent: System.Messaging.BinaryMessageFormatter
  isExternal: false
  name: TypeFormat
  nameWithType: BinaryMessageFormatter.TypeFormat
  fullName: System.Messaging.BinaryMessageFormatter.TypeFormat
- uid: System.Messaging.BinaryMessageFormatter.Write(System.Messaging.Message,System.Object)
  parent: System.Messaging.BinaryMessageFormatter
  isExternal: false
  name: Write(Message,Object)
  nameWithType: BinaryMessageFormatter.Write(Message,Object)
  fullName: System.Messaging.BinaryMessageFormatter.Write(Message,Object)
- uid: System.Messaging.BinaryMessageFormatter.#ctor*
  parent: System.Messaging.BinaryMessageFormatter
  isExternal: false
  name: BinaryMessageFormatter
  nameWithType: BinaryMessageFormatter.BinaryMessageFormatter
- uid: System.Messaging.BinaryMessageFormatter.CanRead*
  parent: System.Messaging.BinaryMessageFormatter
  isExternal: false
  name: CanRead
  nameWithType: BinaryMessageFormatter.CanRead
- uid: System.Messaging.BinaryMessageFormatter.Clone*
  parent: System.Messaging.BinaryMessageFormatter
  isExternal: false
  name: Clone
  nameWithType: BinaryMessageFormatter.Clone
- uid: System.Messaging.BinaryMessageFormatter.Read*
  parent: System.Messaging.BinaryMessageFormatter
  isExternal: false
  name: Read
  nameWithType: BinaryMessageFormatter.Read
- uid: System.Messaging.BinaryMessageFormatter.TopObjectFormat*
  parent: System.Messaging.BinaryMessageFormatter
  isExternal: false
  name: TopObjectFormat
  nameWithType: BinaryMessageFormatter.TopObjectFormat
- uid: System.Messaging.BinaryMessageFormatter.TypeFormat*
  parent: System.Messaging.BinaryMessageFormatter
  isExternal: false
  name: TypeFormat
  nameWithType: BinaryMessageFormatter.TypeFormat
- uid: System.Messaging.BinaryMessageFormatter.Write*
  parent: System.Messaging.BinaryMessageFormatter
  isExternal: false
  name: Write
  nameWithType: BinaryMessageFormatter.Write
