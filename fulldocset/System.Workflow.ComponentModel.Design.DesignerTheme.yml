### YamlMime:ManagedReference
items:
- uid: System.Workflow.ComponentModel.Design.DesignerTheme
  id: DesignerTheme
  children:
  - System.Workflow.ComponentModel.Design.DesignerTheme.#ctor(System.Workflow.ComponentModel.Design.WorkflowTheme)
  - System.Workflow.ComponentModel.Design.DesignerTheme.ApplyTo
  - System.Workflow.ComponentModel.Design.DesignerTheme.ContainingTheme
  - System.Workflow.ComponentModel.Design.DesignerTheme.DesignerType
  - System.Workflow.ComponentModel.Design.DesignerTheme.Dispose(System.Boolean)
  - System.Workflow.ComponentModel.Design.DesignerTheme.Finalize
  - System.Workflow.ComponentModel.Design.DesignerTheme.Initialize
  - System.Workflow.ComponentModel.Design.DesignerTheme.OnAmbientPropertyChanged(System.Workflow.ComponentModel.Design.AmbientProperty)
  - System.Workflow.ComponentModel.Design.DesignerTheme.ReadOnly
  - System.Workflow.ComponentModel.Design.DesignerTheme.System#IDisposable#Dispose
  langs:
  - csharp
  name: DesignerTheme
  nameWithType: DesignerTheme
  fullName: System.Workflow.ComponentModel.Design.DesignerTheme
  type: Class
  summary: "워크플로 디자인 타임 환경에서 사용 되는 모든 activity designer 테마 클래스에 대 한 클래스 구현을 기본를 제공 합니다."
  remarks: "> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]<xref:System.Workflow.ComponentModel.Design.ActivityDesigner>클래스는 DesignerTheme 클래스에서 상속 해야</xref:System.Workflow.ComponentModel.Design.ActivityDesigner> 하는 테마 속성 설정을 제공 하는 모든 클래스  디자이너 테마는 배경 및 전경 색 및 스타일, 글꼴 및 워크플로 디자인 화면에 표시 되는 디자이너 클래스에 대 한 기타 스타일 설정을 표시 하는 속성 값의 집합을 제공 합니다.       <xref:System.Workflow.ComponentModel.Design.AmbientTheme>DesignerTheme에서 클래스 상속.</xref:System.Workflow.ComponentModel.Design.AmbientTheme>"
  syntax:
    content: >-
      [System.ComponentModel.Design.Serialization.DesignerSerializer(typeof(System.Workflow.ComponentModel.Design.DesignerTheme/ThemeSerializer), typeof(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer))]

      [System.ComponentModel.TypeConverter(typeof(System.Workflow.ComponentModel.Design.ThemeTypeConverter))]

      [System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]

      public abstract class DesignerTheme : IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Design.DesignerTheme.#ctor(System.Workflow.ComponentModel.Design.WorkflowTheme)
  id: '#ctor(System.Workflow.ComponentModel.Design.WorkflowTheme)'
  parent: System.Workflow.ComponentModel.Design.DesignerTheme
  langs:
  - csharp
  name: DesignerTheme(WorkflowTheme)
  nameWithType: DesignerTheme.DesignerTheme(WorkflowTheme)
  fullName: System.Workflow.ComponentModel.Design.DesignerTheme.DesignerTheme(WorkflowTheme)
  type: Constructor
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Design
  summary: "파생된 클래스에서 구현 된 경우의 새 인스턴스를 초기화 합니다.는 <xref href=&quot;System.Workflow.ComponentModel.Design.DesignerTheme&quot;> </xref> 클래스를 사용 하 여 한 <xref href=&quot;System.Workflow.ComponentModel.Design.WorkflowTheme&quot;> </xref> 개체입니다."
  syntax:
    content: protected DesignerTheme (System.Workflow.ComponentModel.Design.WorkflowTheme theme);
    parameters:
    - id: theme
      type: System.Workflow.ComponentModel.Design.WorkflowTheme
      description: "<xref href=&quot;System.Workflow.ComponentModel.Design.WorkflowTheme&quot;> </xref> 디자이너 테마가 연결 된 합니다."
  overload: System.Workflow.ComponentModel.Design.DesignerTheme.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Design.DesignerTheme.ApplyTo
  id: ApplyTo
  parent: System.Workflow.ComponentModel.Design.DesignerTheme
  langs:
  - csharp
  name: ApplyTo
  nameWithType: DesignerTheme.ApplyTo
  fullName: System.Workflow.ComponentModel.Design.DesignerTheme.ApplyTo
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Design
  summary: "디자이너 테마가 적용 되는 디자이너 형식의 정규화 되지 않은 이름을 가져오거나 설정 합니다."
  remarks: "ApplyTo 속성 디자이너 형식의 정규화 되지 않은 이름을 사용 하 여 디자이너 테마는 디자이너와 연결 하는 동안는 <xref:System.Workflow.ComponentModel.Design.DesignerTheme.DesignerType%2A>속성을 사용 하 여 디자이너 테마를 디자이너 형식과 연결 된 <xref:System.Type>디자이너의.</xref:System.Type> </xref:System.Workflow.ComponentModel.Design.DesignerTheme.DesignerType%2A>"
  syntax:
    content: public virtual string ApplyTo { get; set; }
    return:
      type: System.String
      description: "디자이너 테마가 적용 되는 디자이너 형식의 이름입니다."
  overload: System.Workflow.ComponentModel.Design.DesignerTheme.ApplyTo*
  exceptions:
  - type: System.Data.ReadOnlyException
    commentId: T:System.Data.ReadOnlyException
    description: "사용자는 set 작업을 시도한 경우는 <xref:System.Workflow.ComponentModel.Design.DesignerTheme.ReadOnly*>속성이로 설정 된 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>.</xref:System.Workflow.ComponentModel.Design.DesignerTheme.ReadOnly*>"
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Design.DesignerTheme.ContainingTheme
  id: ContainingTheme
  parent: System.Workflow.ComponentModel.Design.DesignerTheme
  langs:
  - csharp
  name: ContainingTheme
  nameWithType: DesignerTheme.ContainingTheme
  fullName: System.Workflow.ComponentModel.Design.DesignerTheme.ContainingTheme
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Design
  summary: "디자이너 테마를 캡슐화 하는 워크플로 테마를 가져옵니다."
  remarks: "ContainingTheme 속성은 반환 된 <xref:System.Workflow.ComponentModel.Design.WorkflowTheme>개체를 <xref:System.Workflow.ComponentModel.Design.DesignerTheme.%23ctor%2A>초기화 하는 동안 사용 되는.</xref:System.Workflow.ComponentModel.Design.DesignerTheme.%23ctor%2A> </xref:System.Workflow.ComponentModel.Design.WorkflowTheme>"
  syntax:
    content: protected System.Workflow.ComponentModel.Design.WorkflowTheme ContainingTheme { get; }
    return:
      type: System.Workflow.ComponentModel.Design.WorkflowTheme
      description: "<xref href=&quot;System.Workflow.ComponentModel.Design.WorkflowTheme&quot;> </xref> 연관 된 개체는 <xref href=&quot;System.Workflow.ComponentModel.Design.DesignerTheme&quot;> </xref>합니다."
  overload: System.Workflow.ComponentModel.Design.DesignerTheme.ContainingTheme*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Design.DesignerTheme.DesignerType
  id: DesignerType
  parent: System.Workflow.ComponentModel.Design.DesignerTheme
  langs:
  - csharp
  name: DesignerType
  nameWithType: DesignerTheme.DesignerType
  fullName: System.Workflow.ComponentModel.Design.DesignerTheme.DesignerType
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Design
  summary: "디자이너 테마와 연결 된 디자이너의 유형을 가져오거나 설정 합니다."
  remarks: "DesignerType 속성 사용 하 여 디자이너 테마를 디자이너 형식과 연결 된 <xref:System.Type>디자이너 동안는 <xref:System.Workflow.ComponentModel.Design.DesignerTheme.ApplyTo%2A>속성 디자이너 형식의 정규화 되지 않은 이름을 사용 하 여 디자이너 테마는 디자이너와 연결 합니다.</xref:System.Workflow.ComponentModel.Design.DesignerTheme.ApplyTo%2A> </xref:System.Type>       이 속성에 대 한 가능한 값에는 <xref:System.Workflow.ComponentModel.Design.ActivityDesigner>, <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner>, 및 <xref:System.Workflow.ComponentModel.Design.DesignerTheme>.</xref:System.Workflow.ComponentModel.Design.DesignerTheme> 에서 상속 하는 활동 디자이너 개발자가 만든 클래스가</xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner> </xref:System.Workflow.ComponentModel.Design.ActivityDesigner>"
  syntax:
    content: public virtual Type DesignerType { get; set; }
    return:
      type: System.Type
      description: "A <xref:System.Type>현재 디자이너 테마와 연결할 디자이너를 나타내는입니다.</xref:System.Type>"
  overload: System.Workflow.ComponentModel.Design.DesignerTheme.DesignerType*
  exceptions:
  - type: System.Data.ReadOnlyException
    commentId: T:System.Data.ReadOnlyException
    description: "사용자는 set 작업을 시도한 경우는 <xref:System.Workflow.ComponentModel.Design.DesignerTheme.ReadOnly*>속성이로 설정 된 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>.</xref:System.Workflow.ComponentModel.Design.DesignerTheme.ReadOnly*>"
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Design.DesignerTheme.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Workflow.ComponentModel.Design.DesignerTheme
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: DesignerTheme.Dispose(Boolean)
  fullName: System.Workflow.ComponentModel.Design.DesignerTheme.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Design
  summary: "사용 하는 관리 되지 않는 리소스를 해제는 <xref href=&quot;System.Workflow.ComponentModel.Design.DesignerTheme&quot;> </xref> 관리 되는 리소스를 선택적으로 해제 합니다."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>관리 되는 관리 되지 않는 리소스만 해제 하려면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 만 관리 되지 않는 리소스를 해제 합니다."
  overload: System.Workflow.ComponentModel.Design.DesignerTheme.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Design.DesignerTheme.Finalize
  id: Finalize
  parent: System.Workflow.ComponentModel.Design.DesignerTheme
  langs:
  - csharp
  name: Finalize()
  nameWithType: DesignerTheme.Finalize()
  fullName: System.Workflow.ComponentModel.Design.DesignerTheme.Finalize()
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Design
  summary: "허용 된 <xref href=&quot;System.Workflow.ComponentModel.Design.DesignerTheme&quot;> </xref> 리소스를 해제 하 고 가비지 수집에서 회수 하기 전에 다른 정리 작업을 수행 하려고 합니다."
  remarks: "가비지 수집 이전만 관리 되지 않는 리소스를 해제를 완료 합니다."
  syntax:
    content: ~DesignerTheme ();
    parameters: []
  overload: System.Workflow.ComponentModel.Design.DesignerTheme.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Design.DesignerTheme.Initialize
  id: Initialize
  parent: System.Workflow.ComponentModel.Design.DesignerTheme
  langs:
  - csharp
  name: Initialize()
  nameWithType: DesignerTheme.Initialize()
  fullName: System.Workflow.ComponentModel.Design.DesignerTheme.Initialize()
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Design
  summary: "초기화 작업에서 수행 하는 것 이상의 추가 수행 &lt;xref:System.Workflow.ComponentModel.Design.DesignerTheme.%23ctor%2A&gt;합니다."
  remarks: "<xref:System.Workflow.ComponentModel.Design.DesignerTheme>클래스는이 메서드에 대 한 기본 동작이 없습니다를 제공 합니다.</xref:System.Workflow.ComponentModel.Design.DesignerTheme> 상속 된 클래스 <xref:System.Workflow.ComponentModel.Design.DesignerTheme>이 메서드에 대 한 고유 논리를 제공 해야 합니다.</xref:System.Workflow.ComponentModel.Design.DesignerTheme>"
  syntax:
    content: public virtual void Initialize ();
    parameters: []
  overload: System.Workflow.ComponentModel.Design.DesignerTheme.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Design.DesignerTheme.OnAmbientPropertyChanged(System.Workflow.ComponentModel.Design.AmbientProperty)
  id: OnAmbientPropertyChanged(System.Workflow.ComponentModel.Design.AmbientProperty)
  parent: System.Workflow.ComponentModel.Design.DesignerTheme
  langs:
  - csharp
  name: OnAmbientPropertyChanged(AmbientProperty)
  nameWithType: DesignerTheme.OnAmbientPropertyChanged(AmbientProperty)
  fullName: System.Workflow.ComponentModel.Design.DesignerTheme.OnAmbientPropertyChanged(AmbientProperty)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Design
  summary: "디자이너 테마 클래스를 디자이너에 대 한 앰비언트 속성 설정이 변경 되었음을 알립니다."
  remarks: "상속 된 클래스 <xref:System.Workflow.ComponentModel.Design.DesignerTheme>사용 될 때이 메서드를 필요한 변경 <xref:System.Workflow.ComponentModel.Design.AmbientProperty> <xref:System.Workflow.ComponentModel.Design.AmbientProperty>하거나 <xref:System.Workflow.ComponentModel.Design.AmbientProperty> <xref:System.Workflow.ComponentModel.Design.AmbientProperty> <xref:System.Workflow.ComponentModel.Design.AmbientProperty>.</xref:System.Workflow.ComponentModel.Design.AmbientProperty> </xref:System.Workflow.ComponentModel.Design.AmbientProperty> </xref:System.Workflow.ComponentModel.Design.AmbientProperty> </xref:System.Workflow.ComponentModel.Design.AmbientProperty> 에서 열거형 값이 변경</xref:System.Workflow.ComponentModel.Design.AmbientProperty> </xref:System.Workflow.ComponentModel.Design.DesignerTheme>       <xref:System.Workflow.ComponentModel.Design.AmbientProperty>열거형은 디자이너 테마가 앰비언트 속성 설정을 가져올 위치를 결정 합니다.</xref:System.Workflow.ComponentModel.Design.AmbientProperty> 경우는 <xref:System.Workflow.ComponentModel.Design.AmbientProperty>값은 설정 되 면 디자이너 테마 클래스에서 앰비언트 설정을 가져옵니다는 <xref:System.Workflow.ComponentModel.Design.WorkflowTheme.AmbientTheme%2A>속성.</xref:System.Workflow.ComponentModel.Design.WorkflowTheme.AmbientTheme%2A> </xref:System.Workflow.ComponentModel.Design.AmbientProperty> 경우는 <xref:System.Workflow.ComponentModel.Design.AmbientProperty>값은 설정 되 면 디자이너 테마 클래스는 디자이너가 설치 된 운영 체제에서 앰비언트 설정을 가져옵니다.</xref:System.Workflow.ComponentModel.Design.AmbientProperty>"
  syntax:
    content: public virtual void OnAmbientPropertyChanged (System.Workflow.ComponentModel.Design.AmbientProperty ambientProperty);
    parameters:
    - id: ambientProperty
      type: System.Workflow.ComponentModel.Design.AmbientProperty
      description: "<xref href=&quot;System.Workflow.ComponentModel.Design.AmbientProperty&quot;> </xref> 디자이너 테마가 사용 해야 하는 열거형 값입니다."
  overload: System.Workflow.ComponentModel.Design.DesignerTheme.OnAmbientPropertyChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Design.DesignerTheme.ReadOnly
  id: ReadOnly
  parent: System.Workflow.ComponentModel.Design.DesignerTheme
  langs:
  - csharp
  name: ReadOnly
  nameWithType: DesignerTheme.ReadOnly
  fullName: System.Workflow.ComponentModel.Design.DesignerTheme.ReadOnly
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Design
  summary: "디자이너 테마가 읽기 전용인 지 여부를 나타내는 값을 가져옵니다."
  remarks: "경우는 <xref:System.Workflow.ComponentModel.Design.WorkflowTheme>하는 <xref:System.Workflow.ComponentModel.Design.DesignerTheme>초기화 되는 null 참조 (`Nothing` Visual Basic의), 읽기 전용에서 값을 가져옵니다는 <xref:System.Workflow.ComponentModel.Design.WorkflowTheme.ReadOnly%2A?displayProperty=fullName>속성.</xref:System.Workflow.ComponentModel.Design.WorkflowTheme.ReadOnly%2A?displayProperty=fullName> </xref:System.Workflow.ComponentModel.Design.DesignerTheme> </xref:System.Workflow.ComponentModel.Design.WorkflowTheme> 경우는 <xref:System.Workflow.ComponentModel.Design.WorkflowTheme>가 null 참조 (`Nothing`), 읽기 전용은 `false`.</xref:System.Workflow.ComponentModel.Design.WorkflowTheme>       경우는 <xref:System.Workflow.ComponentModel.Design.WorkflowTheme>에 할당 되는 <xref:System.Workflow.ComponentModel.Design.WorkflowTheme.CurrentTheme%2A?displayProperty=fullName>, ReadOnly 속성이로 설정 되어 `true`,이 테마와 연결 된 모든 디자이너 테마의 속성을 변경할 수 없습니다.</xref:System.Workflow.ComponentModel.Design.WorkflowTheme.CurrentTheme%2A?displayProperty=fullName> </xref:System.Workflow.ComponentModel.Design.WorkflowTheme> 테마를 로드 한 후 하지만 <xref:System.Workflow.ComponentModel.Design.WorkflowTheme.CurrentTheme%2A>.</xref:System.Workflow.ComponentModel.Design.WorkflowTheme.CurrentTheme%2A> 을 할당 하기 전에 속성을 설정할 수, 필요한 경우"
  syntax:
    content: public bool ReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우 <xref href=&quot;System.Workflow.ComponentModel.Design.DesignerTheme&quot;> </xref> 읽기 전용, 되지 않았으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Workflow.ComponentModel.Design.DesignerTheme.ReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Design.DesignerTheme.System#IDisposable#Dispose
  id: System#IDisposable#Dispose
  isEii: true
  parent: System.Workflow.ComponentModel.Design.DesignerTheme
  langs:
  - csharp
  name: System.IDisposable.Dispose()
  nameWithType: DesignerTheme.System.IDisposable.Dispose()
  fullName: System.Workflow.ComponentModel.Design.DesignerTheme.System.IDisposable.Dispose()
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Design
  summary: "관련 확보, 해제 또는 관리 되지 않는 리소스를 다시 설정 된 응용 프로그램 정의 작업을 수행 합니다."
  remarks: "이 버전의 <xref:System.Workflow.ComponentModel.Design.DesignerTheme.System.IDisposable.Dispose%2A>구현 하는 <xref:System.IDisposable>인터페이스.</xref:System.IDisposable> </xref:System.Workflow.ComponentModel.Design.DesignerTheme.System.IDisposable.Dispose%2A>"
  syntax:
    content: void IDisposable.Dispose ();
    parameters: []
  overload: System.Workflow.ComponentModel.Design.DesignerTheme.System#IDisposable#Dispose*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Data.ReadOnlyException
  parent: System.Data
  isExternal: false
  name: ReadOnlyException
  nameWithType: ReadOnlyException
  fullName: System.Data.ReadOnlyException
- uid: System.Workflow.ComponentModel.Design.DesignerTheme.#ctor(System.Workflow.ComponentModel.Design.WorkflowTheme)
  parent: System.Workflow.ComponentModel.Design.DesignerTheme
  isExternal: false
  name: DesignerTheme(WorkflowTheme)
  nameWithType: DesignerTheme.DesignerTheme(WorkflowTheme)
  fullName: System.Workflow.ComponentModel.Design.DesignerTheme.DesignerTheme(WorkflowTheme)
- uid: System.Workflow.ComponentModel.Design.WorkflowTheme
  parent: System.Workflow.ComponentModel.Design
  isExternal: false
  name: WorkflowTheme
  nameWithType: WorkflowTheme
  fullName: System.Workflow.ComponentModel.Design.WorkflowTheme
- uid: System.Workflow.ComponentModel.Design.DesignerTheme.ApplyTo
  parent: System.Workflow.ComponentModel.Design.DesignerTheme
  isExternal: false
  name: ApplyTo
  nameWithType: DesignerTheme.ApplyTo
  fullName: System.Workflow.ComponentModel.Design.DesignerTheme.ApplyTo
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Workflow.ComponentModel.Design.DesignerTheme.ContainingTheme
  parent: System.Workflow.ComponentModel.Design.DesignerTheme
  isExternal: false
  name: ContainingTheme
  nameWithType: DesignerTheme.ContainingTheme
  fullName: System.Workflow.ComponentModel.Design.DesignerTheme.ContainingTheme
- uid: System.Workflow.ComponentModel.Design.DesignerTheme.DesignerType
  parent: System.Workflow.ComponentModel.Design.DesignerTheme
  isExternal: false
  name: DesignerType
  nameWithType: DesignerTheme.DesignerType
  fullName: System.Workflow.ComponentModel.Design.DesignerTheme.DesignerType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Workflow.ComponentModel.Design.DesignerTheme.Dispose(System.Boolean)
  parent: System.Workflow.ComponentModel.Design.DesignerTheme
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: DesignerTheme.Dispose(Boolean)
  fullName: System.Workflow.ComponentModel.Design.DesignerTheme.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Workflow.ComponentModel.Design.DesignerTheme.Finalize
  parent: System.Workflow.ComponentModel.Design.DesignerTheme
  isExternal: false
  name: Finalize()
  nameWithType: DesignerTheme.Finalize()
  fullName: System.Workflow.ComponentModel.Design.DesignerTheme.Finalize()
- uid: System.Workflow.ComponentModel.Design.DesignerTheme.Initialize
  parent: System.Workflow.ComponentModel.Design.DesignerTheme
  isExternal: false
  name: Initialize()
  nameWithType: DesignerTheme.Initialize()
  fullName: System.Workflow.ComponentModel.Design.DesignerTheme.Initialize()
- uid: System.Workflow.ComponentModel.Design.DesignerTheme.OnAmbientPropertyChanged(System.Workflow.ComponentModel.Design.AmbientProperty)
  parent: System.Workflow.ComponentModel.Design.DesignerTheme
  isExternal: false
  name: OnAmbientPropertyChanged(AmbientProperty)
  nameWithType: DesignerTheme.OnAmbientPropertyChanged(AmbientProperty)
  fullName: System.Workflow.ComponentModel.Design.DesignerTheme.OnAmbientPropertyChanged(AmbientProperty)
- uid: System.Workflow.ComponentModel.Design.AmbientProperty
  parent: System.Workflow.ComponentModel.Design
  isExternal: false
  name: AmbientProperty
  nameWithType: AmbientProperty
  fullName: System.Workflow.ComponentModel.Design.AmbientProperty
- uid: System.Workflow.ComponentModel.Design.DesignerTheme.ReadOnly
  parent: System.Workflow.ComponentModel.Design.DesignerTheme
  isExternal: false
  name: ReadOnly
  nameWithType: DesignerTheme.ReadOnly
  fullName: System.Workflow.ComponentModel.Design.DesignerTheme.ReadOnly
- uid: System.Workflow.ComponentModel.Design.DesignerTheme.System#IDisposable#Dispose
  parent: System.Workflow.ComponentModel.Design.DesignerTheme
  isExternal: false
  name: System.IDisposable.Dispose()
  nameWithType: DesignerTheme.System.IDisposable.Dispose()
  fullName: System.Workflow.ComponentModel.Design.DesignerTheme.System.IDisposable.Dispose()
- uid: System.Workflow.ComponentModel.Design.DesignerTheme.#ctor*
  parent: System.Workflow.ComponentModel.Design.DesignerTheme
  isExternal: false
  name: DesignerTheme
  nameWithType: DesignerTheme.DesignerTheme
- uid: System.Workflow.ComponentModel.Design.DesignerTheme.ApplyTo*
  parent: System.Workflow.ComponentModel.Design.DesignerTheme
  isExternal: false
  name: ApplyTo
  nameWithType: DesignerTheme.ApplyTo
- uid: System.Workflow.ComponentModel.Design.DesignerTheme.ContainingTheme*
  parent: System.Workflow.ComponentModel.Design.DesignerTheme
  isExternal: false
  name: ContainingTheme
  nameWithType: DesignerTheme.ContainingTheme
- uid: System.Workflow.ComponentModel.Design.DesignerTheme.DesignerType*
  parent: System.Workflow.ComponentModel.Design.DesignerTheme
  isExternal: false
  name: DesignerType
  nameWithType: DesignerTheme.DesignerType
- uid: System.Workflow.ComponentModel.Design.DesignerTheme.Dispose*
  parent: System.Workflow.ComponentModel.Design.DesignerTheme
  isExternal: false
  name: Dispose
  nameWithType: DesignerTheme.Dispose
- uid: System.Workflow.ComponentModel.Design.DesignerTheme.Finalize*
  parent: System.Workflow.ComponentModel.Design.DesignerTheme
  isExternal: false
  name: Finalize
  nameWithType: DesignerTheme.Finalize
- uid: System.Workflow.ComponentModel.Design.DesignerTheme.Initialize*
  parent: System.Workflow.ComponentModel.Design.DesignerTheme
  isExternal: false
  name: Initialize
  nameWithType: DesignerTheme.Initialize
- uid: System.Workflow.ComponentModel.Design.DesignerTheme.OnAmbientPropertyChanged*
  parent: System.Workflow.ComponentModel.Design.DesignerTheme
  isExternal: false
  name: OnAmbientPropertyChanged
  nameWithType: DesignerTheme.OnAmbientPropertyChanged
- uid: System.Workflow.ComponentModel.Design.DesignerTheme.ReadOnly*
  parent: System.Workflow.ComponentModel.Design.DesignerTheme
  isExternal: false
  name: ReadOnly
  nameWithType: DesignerTheme.ReadOnly
- uid: System.Workflow.ComponentModel.Design.DesignerTheme.System#IDisposable#Dispose*
  parent: System.Workflow.ComponentModel.Design.DesignerTheme
  isExternal: false
  name: System.IDisposable.Dispose
  nameWithType: DesignerTheme.System.IDisposable.Dispose
