### YamlMime:ManagedReference
items:
- uid: System.Net.PeerToPeer.PeerName
  id: PeerName
  children:
  - System.Net.PeerToPeer.PeerName.#ctor(System.String)
  - System.Net.PeerToPeer.PeerName.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Net.PeerToPeer.PeerName.#ctor(System.String,System.Net.PeerToPeer.PeerNameType)
  - System.Net.PeerToPeer.PeerName.Authority
  - System.Net.PeerToPeer.PeerName.Classifier
  - System.Net.PeerToPeer.PeerName.CreateFromPeerHostName(System.String)
  - System.Net.PeerToPeer.PeerName.CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)
  - System.Net.PeerToPeer.PeerName.Equals(System.Net.PeerToPeer.PeerName)
  - System.Net.PeerToPeer.PeerName.Equals(System.Object)
  - System.Net.PeerToPeer.PeerName.GetHashCode
  - System.Net.PeerToPeer.PeerName.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Net.PeerToPeer.PeerName.IsSecured
  - System.Net.PeerToPeer.PeerName.PeerHostName
  - System.Net.PeerToPeer.PeerName.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Net.PeerToPeer.PeerName.ToString
  langs:
  - csharp
  name: PeerName
  nameWithType: PeerName
  fullName: System.Net.PeerToPeer.PeerName
  type: Class
  summary: "피어-투-피어 PeerName 개체를 정의 하는 값을 지정 합니다. 피어 이름을 일반적으로 피어 리소스를 식별 하는 데 사용 하는 문자열입니다."
  syntax:
    content: 'public class PeerName : IEquatable<System.Net.PeerToPeer.PeerName>, System.Runtime.Serialization.ISerializable'
  inheritance:
  - System.Object
  implements:
  - System.IEquatable<System.Net.PeerToPeer.PeerName>
  - System.Runtime.Serialization.ISerializable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerName.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Net.PeerToPeer.PeerName
  langs:
  - csharp
  name: PeerName(String)
  nameWithType: PeerName.PeerName(String)
  fullName: System.Net.PeerToPeer.PeerName.PeerName(String)
  type: Constructor
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "형식의 새 개체를 초기화 합니다. <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> 제공 된 피어 정규화 된 이름을 가진 <xref:System.String>값.</xref:System.String>"
  syntax:
    content: public PeerName (string remotePeerName);
    parameters:
    - id: remotePeerName
      type: System.String
      description: "인코딩할 피어 이름을 포함 한 <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> 인스턴스."
  overload: System.Net.PeerToPeer.PeerName.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<xref:System.String>제공 유효 하지 않거나 <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref>.</xref:System.String>"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>remotePeerName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerName.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.Net.PeerToPeer.PeerName
  langs:
  - csharp
  name: PeerName(SerializationInfo,StreamingContext)
  nameWithType: PeerName.PeerName(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.PeerName.PeerName(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "정보를 표시 한 <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> serialize 하는 데 필요한 데이터로 개체는 <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref>합니다."
  remarks: "이 생성자는이 형식의 deserialization에 필요 합니다."
  syntax:
    content: protected PeerName (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "이 인스턴스를 deserialize 하는 데 필요한 데이터를 보유 하는 개체에 대 한 참조입니다."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "데이터를 역직렬화 하는 동안에 방법을 제공 하는 컨텍스트. Serialize 된 데이터의 원본 라고도 합니다."
  overload: System.Net.PeerToPeer.PeerName.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "하나 이상의 매개 변수는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerName.#ctor(System.String,System.Net.PeerToPeer.PeerNameType)
  id: '#ctor(System.String,System.Net.PeerToPeer.PeerNameType)'
  parent: System.Net.PeerToPeer.PeerName
  langs:
  - csharp
  name: PeerName(String,PeerNameType)
  nameWithType: PeerName.PeerName(String,PeerNameType)
  fullName: System.Net.PeerToPeer.PeerName.PeerName(String,PeerNameType)
  type: Constructor
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> 클래스입니다."
  remarks: "형식의 개체를 반환 하는이 생성자 <xref:System.Net.PeerToPeer.PeerName>피어의 정규화 된 이름을 포함 하는.</xref:System.Net.PeerToPeer.PeerName> 또한 여부 피어 이름과 보안 되는지 지정 합니다.       이 인스턴스는 기본 피어 id를 사용 하 여 현재 사용자와 지정 된에 대 한 <xref:System.Net.PeerToPeer.PeerName.Classifier%2A>, 지정 된 분류자 및 형식으로 만들 피어 이름의 종류.</xref:System.Net.PeerToPeer.PeerName.Classifier%2A>"
  syntax:
    content: public PeerName (string classifier, System.Net.PeerToPeer.PeerNameType peerNameType);
    parameters:
    - id: classifier
      type: System.String
      description: "<xref:System.String>인코딩할 피어 이름을 포함 하는 <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref>합니다.</xref:System.String>"
    - id: peerNameType
      type: System.Net.PeerToPeer.PeerNameType
      description: "<xref href=&quot;System.Net.PeerToPeer.PeerNameType&quot;></xref>만들려는 피어 이름 형식을 지정 하는 열거형 값입니다."
  overload: System.Net.PeerToPeer.PeerName.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<xref:System.Net.PeerToPeer.PeerName.Classifier*>잘못 된 문자가 하나 이상 포함 됩니다.</xref:System.Net.PeerToPeer.PeerName.Classifier*>"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "하나 이상의 매개 변수는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "-기본으로 사용 되는 기본 Id는 <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> 검색할 수 없습니다.      - <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> 만들 수 없습니다."
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerName.Authority
  id: Authority
  parent: System.Net.PeerToPeer.PeerName
  langs:
  - csharp
  name: Authority
  nameWithType: PeerName.Authority
  fullName: System.Net.PeerToPeer.PeerName.Authority
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "사용 하는 기관을 지정 하는 문자열을 반환 <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> 개체입니다."
  remarks: "소유자 또는 피어 호스트 보안 된 피어 이름을 등록할 수 있습니다. 피어 이름은 자체 서명 된 인증서에 의해 지원 되는 경우 보안이 간주 됩니다.       피어 이름은 대/소문자 구분 및 피어 이름의 포맷이: *Authority.Classifier*합니다. 예를 들어 &quot;0.MyPeerName&quot; 잘 구성 된 피어 이름입니다."
  syntax:
    content: public string Authority { get; }
    return:
      type: System.String
      description: "지정 된 인증 부분을 포함 하는 문자열 <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref>합니다. 이 속성을 보안 된 피어 이름에 대 한&40; 자리&16; 진수 문자열로 공개 키를 포함합니다. 보안 되지 않은 피어 이름에 대 한이 속성은 영 (0)으로 설정 됩니다."
  overload: System.Net.PeerToPeer.PeerName.Authority*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerName.Classifier
  id: Classifier
  parent: System.Net.PeerToPeer.PeerName
  langs:
  - csharp
  name: Classifier
  nameWithType: PeerName.Classifier
  fullName: System.Net.PeerToPeer.PeerName.Classifier
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "피어-투-피어에 대 한 분류자를 포함 하는 문자열을 반환 <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref>합니다."
  remarks: "The format of a peer name is: *Authority.Classifier*. The peer name *Classifier* component can be set to any string that contains 149 or fewer Unicode characters, including the `null` (\"\\0\") terminator. Peer name strings are case-sensitive.  \n  \n For secured peer names, the classifier and the dot (period) after the authority are optional. For unsecured peer names, the classifier is not optional."
  syntax:
    content: public string Classifier { get; }
    return:
      type: System.String
      description: "에 대 한 피어 이름을 식별 하는 데 사용 된 분류자 부분을 포함 하는 문자열 <xref href=&quot;System.Net.PeerToPeer.PeerNameRegistration&quot;> </xref> 또는 PNRP 내에서 확인 <xref href=&quot;System.Net.PeerToPeer.Cloud&quot;> </xref>합니다.       모든 속성에 대 한 기본 값은 명시적으로 지정 하지 않으면 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 참조 형식 및 영 (0) 속성에 대 한 형식에 대 한 <xref uid=&quot;langword_csharp_int&quot; name=&quot;int&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Net.PeerToPeer.PeerName.Classifier*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerName.CreateFromPeerHostName(System.String)
  id: CreateFromPeerHostName(System.String)
  parent: System.Net.PeerToPeer.PeerName
  langs:
  - csharp
  name: CreateFromPeerHostName(String)
  nameWithType: PeerName.CreateFromPeerHostName(String)
  fullName: System.Net.PeerToPeer.PeerName.CreateFromPeerHostName(String)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "지정 된의 새 인스턴스를 만듭니다 <xref:System.Net.PeerToPeer.PeerName.PeerHostName*>지정한 피어 호스트 이름 가진 개체입니다.</xref:System.Net.PeerToPeer.PeerName.PeerHostName*>"
  remarks: "피어-투-피어 호스트 &quot;초기값&quot;노드는 피어 투 피어 네트워킹 세션을 시작 하기 위한 책임을 피어를 초대를이 네트워크 연결 유형은 채팅 그룹 또는 게임 세션과 같은 통신에 가장 적합 한 응용 프로그램에 참여 합니다.       이 메서드는 만드는 데 사용할 수는 <xref:System.Net.PeerToPeer.PeerName>기반 개체는 <xref:System.Net.PeerToPeer.PeerName.PeerHostName%2A>속성.</xref:System.Net.PeerToPeer.PeerName.PeerHostName%2A> </xref:System.Net.PeerToPeer.PeerName> 이 피어 이름이 호출 노드의 id와 연결 되었습니다."
  syntax:
    content: public static System.Net.PeerToPeer.PeerName CreateFromPeerHostName (string peerHostName);
    parameters:
    - id: peerHostName
      type: System.String
      description: "정규화 된 DNS 호스트 이름을 포함 하는 문자열입니다."
    return:
      type: System.Net.PeerToPeer.PeerName
      description: "A <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> 지정 된 피어 호스트 이름을 나타내는 개체입니다."
  overload: System.Net.PeerToPeer.PeerName.CreateFromPeerHostName*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<xref:System.String>제공 된 피어 유효한 호스트 이름 문자열이 아닙니다.</xref:System.String>"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<xref href=&quot;System.Net.PeerToPeer.PeerName.PeerHostName&quot;></xref>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "A <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> 만들 수 없음을 제공 된<xref:System.Net.PeerToPeer.PeerName.PeerHostName*></xref:System.Net.PeerToPeer.PeerName.PeerHostName*>"
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerName.CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)
  id: CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)
  parent: System.Net.PeerToPeer.PeerName
  langs:
  - csharp
  name: CreateRelativePeerName(PeerName,String)
  nameWithType: PeerName.CreateRelativePeerName(PeerName,String)
  fullName: System.Net.PeerToPeer.PeerName.CreateRelativePeerName(PeerName,String)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "새 <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> 대체 하 여는 <xref:System.Net.PeerToPeer.PeerName.Classifier*>에 제공 된 정의 된 필드 <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> 분류자 지정 된 문자열 값을 가진 개체입니다.</xref:System.Net.PeerToPeer.PeerName.Classifier*>"
  remarks: "<xref:System.Net.PeerToPeer.PeerName.Classifier%2A>기존 <xref:System.Net.PeerToPeer.PeerName.Authority%2A> <xref:System.Net.PeerToPeer.PeerName>.</xref:System.Net.PeerToPeer.PeerName> 의 부분</xref:System.Net.PeerToPeer.PeerName.Authority%2A> 에 추가</xref:System.Net.PeerToPeer.PeerName.Classifier%2A> 이 문자열은 최대 149 자를 포함 하는 `null` 종결자입니다. 지정 `null` 이름을 반환 하는 피어 id입니다."
  syntax:
    content: public static System.Net.PeerToPeer.PeerName CreateRelativePeerName (System.Net.PeerToPeer.PeerName peerName, string classifier);
    parameters:
    - id: peerName
      type: System.Net.PeerToPeer.PeerName
      description: "<xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> 새 분류자 문자열 값을 설정 하는 개체입니다."
    - id: classifier
      type: System.String
      description: "<xref:System.Net.PeerToPeer.PeerName.Classifier*>반환 된 설정할 <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref>.</xref:System.Net.PeerToPeer.PeerName.Classifier*>"
    return:
      type: System.Net.PeerToPeer.PeerName
      description: "새 <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> 업데이트 된 분류자를 포함 하는 개체입니다."
  overload: System.Net.PeerToPeer.PeerName.CreateRelativePeerName*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<xref:System.String>제공 되는 올바른 피어 이름 분류자 아닙니다.</xref:System.String>"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "하나 이상의 매개 변수는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "A <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> 만들 수 없음을 제공 된<xref:System.Net.PeerToPeer.PeerName.PeerHostName*></xref:System.Net.PeerToPeer.PeerName.PeerHostName*>"
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerName.Equals(System.Net.PeerToPeer.PeerName)
  id: Equals(System.Net.PeerToPeer.PeerName)
  parent: System.Net.PeerToPeer.PeerName
  langs:
  - csharp
  name: Equals(PeerName)
  nameWithType: PeerName.Equals(PeerName)
  fullName: System.Net.PeerToPeer.PeerName.Equals(PeerName)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "현재 대/소문자 구분 비교를 수행 <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> 및 피어 이름입니다."
  remarks: "두 개의 피어 이름에 동일한 문자가 포함 된 경우 같은 개체로 간주 되는지 자신의 <xref:System.Net.PeerToPeer.PeerName.Authority%2A>및 <xref:System.Net.PeerToPeer.PeerName.Classifier%2A>구성 요소.</xref:System.Net.PeerToPeer.PeerName.Classifier%2A> </xref:System.Net.PeerToPeer.PeerName.Authority%2A>       정규화 문자열 비교 하기 전에 수행 됩니다.  모든 정규화 완료 되어야 하는 동안 또는 피어 이름 개체를 생성 하기 전에."
  syntax:
    content: public bool Equals (System.Net.PeerToPeer.PeerName other);
    parameters:
    - id: other
      type: System.Net.PeerToPeer.PeerName
      description: "와 비교할 피어 이름을 <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref>합니다."
    return:
      type: System.Boolean
      description: "반환 <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;> </xref> 경우 지정 된 <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> 현재 피어 이름 개체와 동일한 리소스를 식별 합니다. 그렇지 않으면이 메서드가 반환 <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>합니다.       또한이 메서드 반환 <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref> 경우 <code> other </code> 로 설정 된 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Net.PeerToPeer.PeerName.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerName.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Net.PeerToPeer.PeerName
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: PeerName.Equals(Object)
  fullName: System.Net.PeerToPeer.PeerName.Equals(Object)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "결정 여부이 콘텐츠 <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> 다른 개체의 내용과 같습니다."
  remarks: "이 메서드는 기본 서명 및 <xref:System.Object>.</xref:System.Object> 동작 상속"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "<xref:System.Object>현재과 비교할 <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref>.</xref:System.Object>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>경우는 <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> 비교 개체는 같은 정보를 포함 하 고, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Net.PeerToPeer.PeerName.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerName.GetHashCode
  id: GetHashCode
  parent: System.Net.PeerToPeer.PeerName
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: PeerName.GetHashCode()
  fullName: System.Net.PeerToPeer.PeerName.GetHashCode()
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "재정의 <xref:System.Object.GetHashCode*>메서드.</xref:System.Object.GetHashCode*>"
  remarks: "두 개체는이 메서드는 둘 모두에 대해 동일한 해시 코드를 반환 하는 경우 같은 것으로 간주 됩니다."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "현재 <xref:System.Object>.</xref:System.Object> 에 대 한 해시 코드"
  overload: System.Net.PeerToPeer.PeerName.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerName.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Net.PeerToPeer.PeerName
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: PeerName.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.PeerName.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Serialization 정보 개체를 serialize 하는 데 필요한 데이터로 채우는 <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref>합니다."
  remarks: "파생된 된 형식을 기본 형식을 호출 해야 <xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A>메서드.</xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A>"
  syntax:
    content: protected virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "와 관련 된 serialize 된 데이터를 보유는 <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> 개체입니다."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "와 연결 된 직렬화 된 스트림의 대상이 들어는 <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> 개체입니다."
  overload: System.Net.PeerToPeer.PeerName.GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerName.IsSecured
  id: IsSecured
  parent: System.Net.PeerToPeer.PeerName
  langs:
  - csharp
  name: IsSecured
  nameWithType: PeerName.IsSecured
  fullName: System.Net.PeerToPeer.PeerName.IsSecured
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "보안 된 피어 이름 인지를 지정 하는 부울 값을 가져옵니다."
  remarks: "피어 이름은 자체 서명 된 인증서에 의해 지원 되는 경우 보안이 간주 됩니다.       소유자만를 PNRP 보안 된 피어 이름을 등록할 수 있습니다."
  syntax:
    content: public bool IsSecured { get; }
    return:
      type: System.Boolean
      description: "경우 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>를 키 / 공개 키 쌍이 피어 이름은 개인으로 보안 됩니다. 해당 피어 컴퓨터의 사용자 인증서의 공개 키의 알고리즘 SHA (Secure Hash) 해시를 포함 하는 이름입니다. 그렇지 않은 경우, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, 피어 이름에 연결 된 id가 없습니다.       모든 속성에 대 한 기본 값은 명시적으로 지정 하지 않으면 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 참조 형식 및 영 (0) 속성에 대 한 형식에 대 한 <xref uid=&quot;langword_csharp_int&quot; name=&quot;int&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Net.PeerToPeer.PeerName.IsSecured*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerName.PeerHostName
  id: PeerHostName
  parent: System.Net.PeerToPeer.PeerName
  langs:
  - csharp
  name: PeerHostName
  nameWithType: PeerName.PeerHostName
  fullName: System.Net.PeerToPeer.PeerName.PeerHostName
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "피어-투-피어 호스트의 이름을 가져옵니다. 이 DNS로 인코딩된 버전의는 <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> 값은 한 PeerHostName 두 식별자 라고도 합니다.  두 기능 간의 차이점은 시각적 표현입니다."
  remarks: "피어-투-피어 호스트 &quot;초기값&quot;노드는 피어 투 피어 네트워킹 세션을 시작 하기 위한 책임을 피어를 초대를이 네트워크 연결 유형은 채팅 그룹 또는 게임 세션과 같은 통신에 가장 적합 한 응용 프로그램에 참여 합니다.       PeerHostName 속성에는 피어의 피어 투 피어 네트워킹 세션을 만든을 세션의 호스트 이름을 지정 합니다.  피어 투 피어 네트워킹 세션의 호스트에 둘 이상의 <xref:System.Net.PeerToPeer.Cloud>.</xref:System.Net.PeerToPeer.Cloud> 피어를 수집할 수 있습니다. 또한 피어 동시에 호스트할 수는 하나 이상의 피어 호스트 합니다."
  syntax:
    content: public string PeerHostName { get; }
    return:
      type: System.String
      description: "A <xref:System.String>피어-투-피어 호스트의 이름을 나타내는 값입니다.</xref:System.String> 모든 속성에 대 한 기본 값은 명시적으로 지정 하지 않으면 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 참조 형식에 대 한 합니다."
  overload: System.Net.PeerToPeer.PeerName.PeerHostName*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerName.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  isEii: true
  parent: System.Net.PeerToPeer.PeerName
  langs:
  - csharp
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: PeerName.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.PeerName.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "구현 하는 <xref href=&quot;System.Runtime.Serialization.ISerializable&quot;> </xref> 인터페이스를 serialize 하는 데 필요한 데이터를 반환 된 <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> 인스턴스."
  syntax:
    content: void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "와 관련 된 serialize 된 데이터를 보유는 <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> 개체입니다."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "와 연결 된 직렬화 된 스트림의 대상이 들어는 <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> 개체입니다."
  overload: System.Net.PeerToPeer.PeerName.System#Runtime#Serialization#ISerializable#GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerName.ToString
  id: ToString
  parent: System.Net.PeerToPeer.PeerName
  langs:
  - csharp
  name: ToString()
  nameWithType: PeerName.ToString()
  fullName: System.Net.PeerToPeer.PeerName.ToString()
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "현재 문자열 표현을 반환 <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> 개체입니다."
  remarks: "이 메서드는 기본 서명 및 <xref:System.Object>.</xref:System.Object> 동작 상속"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: '현재를 나타내는 문자열을 <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref>, 다음 형식으로 지정 하 고: *Authority.Classifier*합니다. 예를 들어 &quot;0.MyInternetPeer&quot;가 있습니다.'
  overload: System.Net.PeerToPeer.PeerName.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Net.PeerToPeer.PeerToPeerException
  parent: System.Net.PeerToPeer
  isExternal: false
  name: PeerToPeerException
  nameWithType: PeerToPeerException
  fullName: System.Net.PeerToPeer.PeerToPeerException
- uid: System.Net.PeerToPeer.PeerName.#ctor(System.String)
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: PeerName(String)
  nameWithType: PeerName.PeerName(String)
  fullName: System.Net.PeerToPeer.PeerName.PeerName(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.PeerToPeer.PeerName.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: PeerName(SerializationInfo,StreamingContext)
  nameWithType: PeerName.PeerName(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.PeerName.PeerName(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Net.PeerToPeer.PeerName.#ctor(System.String,System.Net.PeerToPeer.PeerNameType)
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: PeerName(String,PeerNameType)
  nameWithType: PeerName.PeerName(String,PeerNameType)
  fullName: System.Net.PeerToPeer.PeerName.PeerName(String,PeerNameType)
- uid: System.Net.PeerToPeer.PeerNameType
  parent: System.Net.PeerToPeer
  isExternal: false
  name: PeerNameType
  nameWithType: PeerNameType
  fullName: System.Net.PeerToPeer.PeerNameType
- uid: System.Net.PeerToPeer.PeerName.Authority
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: Authority
  nameWithType: PeerName.Authority
  fullName: System.Net.PeerToPeer.PeerName.Authority
- uid: System.Net.PeerToPeer.PeerName.Classifier
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: Classifier
  nameWithType: PeerName.Classifier
  fullName: System.Net.PeerToPeer.PeerName.Classifier
- uid: System.Net.PeerToPeer.PeerName.CreateFromPeerHostName(System.String)
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: CreateFromPeerHostName(String)
  nameWithType: PeerName.CreateFromPeerHostName(String)
  fullName: System.Net.PeerToPeer.PeerName.CreateFromPeerHostName(String)
- uid: System.Net.PeerToPeer.PeerName
  parent: System.Net.PeerToPeer
  isExternal: false
  name: PeerName
  nameWithType: PeerName
  fullName: System.Net.PeerToPeer.PeerName
- uid: System.Net.PeerToPeer.PeerName.CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: CreateRelativePeerName(PeerName,String)
  nameWithType: PeerName.CreateRelativePeerName(PeerName,String)
  fullName: System.Net.PeerToPeer.PeerName.CreateRelativePeerName(PeerName,String)
- uid: System.Net.PeerToPeer.PeerName.Equals(System.Net.PeerToPeer.PeerName)
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: Equals(PeerName)
  nameWithType: PeerName.Equals(PeerName)
  fullName: System.Net.PeerToPeer.PeerName.Equals(PeerName)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.PeerToPeer.PeerName.Equals(System.Object)
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: Equals(Object)
  nameWithType: PeerName.Equals(Object)
  fullName: System.Net.PeerToPeer.PeerName.Equals(Object)
- uid: System.Net.PeerToPeer.PeerName.GetHashCode
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: GetHashCode()
  nameWithType: PeerName.GetHashCode()
  fullName: System.Net.PeerToPeer.PeerName.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.PeerToPeer.PeerName.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: PeerName.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.PeerName.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Net.PeerToPeer.PeerName.IsSecured
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: IsSecured
  nameWithType: PeerName.IsSecured
  fullName: System.Net.PeerToPeer.PeerName.IsSecured
- uid: System.Net.PeerToPeer.PeerName.PeerHostName
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: PeerHostName
  nameWithType: PeerName.PeerHostName
  fullName: System.Net.PeerToPeer.PeerName.PeerHostName
- uid: System.Net.PeerToPeer.PeerName.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: PeerName.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.PeerName.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Net.PeerToPeer.PeerName.ToString
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: ToString()
  nameWithType: PeerName.ToString()
  fullName: System.Net.PeerToPeer.PeerName.ToString()
- uid: System.Net.PeerToPeer.PeerName.#ctor*
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: PeerName
  nameWithType: PeerName.PeerName
- uid: System.Net.PeerToPeer.PeerName.Authority*
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: Authority
  nameWithType: PeerName.Authority
- uid: System.Net.PeerToPeer.PeerName.Classifier*
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: Classifier
  nameWithType: PeerName.Classifier
- uid: System.Net.PeerToPeer.PeerName.CreateFromPeerHostName*
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: CreateFromPeerHostName
  nameWithType: PeerName.CreateFromPeerHostName
- uid: System.Net.PeerToPeer.PeerName.CreateRelativePeerName*
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: CreateRelativePeerName
  nameWithType: PeerName.CreateRelativePeerName
- uid: System.Net.PeerToPeer.PeerName.Equals*
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: Equals
  nameWithType: PeerName.Equals
- uid: System.Net.PeerToPeer.PeerName.GetHashCode*
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: GetHashCode
  nameWithType: PeerName.GetHashCode
- uid: System.Net.PeerToPeer.PeerName.GetObjectData*
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: GetObjectData
  nameWithType: PeerName.GetObjectData
- uid: System.Net.PeerToPeer.PeerName.IsSecured*
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: IsSecured
  nameWithType: PeerName.IsSecured
- uid: System.Net.PeerToPeer.PeerName.PeerHostName*
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: PeerHostName
  nameWithType: PeerName.PeerHostName
- uid: System.Net.PeerToPeer.PeerName.System#Runtime#Serialization#ISerializable#GetObjectData*
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData
  nameWithType: PeerName.System.Runtime.Serialization.ISerializable.GetObjectData
- uid: System.Net.PeerToPeer.PeerName.ToString*
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: ToString
  nameWithType: PeerName.ToString
