### YamlMime:ManagedReference
items:
- uid: System.Security.AccessControl.FileSystemSecurity
  id: FileSystemSecurity
  children:
  - System.Security.AccessControl.FileSystemSecurity.AccessRightType
  - System.Security.AccessControl.FileSystemSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  - System.Security.AccessControl.FileSystemSecurity.AccessRuleType
  - System.Security.AccessControl.FileSystemSecurity.AddAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  - System.Security.AccessControl.FileSystemSecurity.AddAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  - System.Security.AccessControl.FileSystemSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  - System.Security.AccessControl.FileSystemSecurity.AuditRuleType
  - System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  - System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleAll(System.Security.AccessControl.FileSystemAccessRule)
  - System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.FileSystemAccessRule)
  - System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  - System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleAll(System.Security.AccessControl.FileSystemAuditRule)
  - System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.FileSystemAuditRule)
  - System.Security.AccessControl.FileSystemSecurity.ResetAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  - System.Security.AccessControl.FileSystemSecurity.SetAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  - System.Security.AccessControl.FileSystemSecurity.SetAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  langs:
  - csharp
  name: FileSystemSecurity
  nameWithType: FileSystemSecurity
  fullName: System.Security.AccessControl.FileSystemSecurity
  type: Class
  summary: "액세스 제어를 나타내는 파일 또는 디렉터리에 대 한 보안 감사 합니다."
  remarks: "FileSystemSecurity 클래스는에 대 한 기본 클래스는 <xref:System.Security.AccessControl.FileSecurity>및 <xref:System.Security.AccessControl.DirectorySecurity>클래스.</xref:System.Security.AccessControl.DirectorySecurity> </xref:System.Security.AccessControl.FileSecurity>  이러한 클래스는 모든 시스템 파일 또는 디렉터리에 대 한 액세스 권한을 나타내는 하 고 액세스 시도 감사 하는 방법을 정의 합니다.       FileSystemSecurity 클래스를 사용 하는 규칙의 집합으로 액세스 및 감사 권한을 나타냅니다. 각 액세스 규칙으로 표시 됩니다는 <xref:System.Security.AccessControl.FileSystemAccessRule>개체를 나타내는 각 감사 규칙이 동안는 <xref:System.Security.AccessControl.FileSystemAuditRule>개체입니다.</xref:System.Security.AccessControl.FileSystemAuditRule> </xref:System.Security.AccessControl.FileSystemAccessRule>       FileSystemSecurity 클래스는 기본 Microsoft Windows 파일 보안 시스템 추상화 합니다. 이 시스템에서 각 파일 또는 디렉터리에 파일 또는 디렉터리에 대 한 액세스를 제어 하는 임의 액세스 제어 목록 (DACL) 및 시스템 액세스 제어 목록 (SACL) 감사가 수행 되는 액세스 제어 시도 지정 하는 합니다.  <xref:System.Security.AccessControl.FileSystemAccessRule>및 <xref:System.Security.AccessControl.FileSystemAuditRule>클래스 Dacl과 Sacl을 구성 하는 액세스 제어 항목 (Ace)의 추상화는.</xref:System.Security.AccessControl.FileSystemAuditRule> </xref:System.Security.AccessControl.FileSystemAccessRule>       대부분의 Dacl과 Sacl;의 세부 정보를 숨깁니다 FileSystemSecurity 클래스 ACE 순서를 지정 하거나 null DACL 걱정할 필요가 없습니다.       파일에 변경 되거나 새로운 액세스 제어 목록 (ACL) 정보를 유지 하기 위해 사용 하 여는 <xref:System.IO.File.SetAccessControl%2A>또는 <xref:System.IO.FileInfo.SetAccessControl%2A>메서드.</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.File.SetAccessControl%2A>  디렉터리에 새로 추가 되거나 변경 ACL 정보를 유지 하기 위해 사용 하 여는 <xref:System.IO.Directory.SetAccessControl%2A>또는 <xref:System.IO.FileInfo.SetAccessControl%2A>메서드.</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.Directory.SetAccessControl%2A>       파일에서 ACL 정보를 검색 하려면 사용 된 <xref:System.IO.File.GetAccessControl%2A>또는 <xref:System.IO.FileInfo.GetAccessControl%2A>메서드.</xref:System.IO.FileInfo.GetAccessControl%2A> </xref:System.IO.File.GetAccessControl%2A>  디렉터리에서 ACL 정보를 검색 하려면 사용 된 <xref:System.IO.Directory.GetAccessControl%2A>또는 <xref:System.IO.DirectoryInfo.GetAccessControl%2A>메서드.</xref:System.IO.DirectoryInfo.GetAccessControl%2A> </xref:System.IO.Directory.GetAccessControl%2A>"
  example:
  - "The following code example uses the <xref:System.Security.AccessControl.FileSecurity> class to add and then remove an access control list (ACL) entry from a file.  You must supply a valid user or group account to run this example.  \n  \n [!code-cs[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/csharp/t-system.security.access_6_1.cs)]\n [!code-vb[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/visualbasic/t-system.security.access_6_1.vb)]\n [!code-cpp[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/cpp/t-system.security.access_6_1.cpp)]"
  syntax:
    content: 'public abstract class FileSystemSecurity : System.Security.AccessControl.NativeObjectSecurity'
  inheritance:
  - System.Object
  - System.Security.AccessControl.ObjectSecurity
  - System.Security.AccessControl.CommonObjectSecurity
  - System.Security.AccessControl.NativeObjectSecurity
  implements: []
  inheritedMembers:
  - System.Security.AccessControl.CommonObjectSecurity.AddAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.AddAuditRule(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)
  - System.Security.AccessControl.CommonObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)
  - System.Security.AccessControl.CommonObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  - System.Security.AccessControl.CommonObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.SetAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.SetAuditRule(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections,System.Object)
  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections,System.Object)
  - System.Security.AccessControl.ObjectSecurity.AccessRulesModified
  - System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical
  - System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected
  - System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical
  - System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected
  - System.Security.AccessControl.ObjectSecurity.AuditRulesModified
  - System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)
  - System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)
  - System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm
  - System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.GroupModified
  - System.Security.AccessControl.ObjectSecurity.IsContainer
  - System.Security.AccessControl.ObjectSecurity.IsDS
  - System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported
  - System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  - System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  - System.Security.AccessControl.ObjectSecurity.OwnerModified
  - System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.ReadLock
  - System.Security.AccessControl.ObjectSecurity.ReadUnlock
  - System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)
  - System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)
  - System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.WriteLock
  - System.Security.AccessControl.ObjectSecurity.WriteUnlock
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.AccessRightType
  id: AccessRightType
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: AccessRightType
  nameWithType: FileSystemSecurity.AccessRightType
  fullName: System.Security.AccessControl.FileSystemSecurity.AccessRightType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "열거형을 가져옵니다는 <xref href=&quot;System.Security.AccessControl.FileSystemSecurity&quot;> </xref> 액세스 권한을 나타내는 데 사용 하 여 합니다."
  remarks: "파생 된 클래스는 <xref:System.Security.AccessControl.FileSystemSecurity>클래스 AccessRightType 속성을 재정의 하 고 액세스 권한을 나타내는 데 사용 하는 형식을 반환 합니다.</xref:System.Security.AccessControl.FileSystemSecurity> 배열 또는 여러 유형의 보안 개체를 포함 하는 컬렉션으로 작업할 때 각 보안 개체에 사용할 올바른 열거형 형식을 확인 하려면이 속성을 사용 합니다."
  syntax:
    content: public override Type AccessRightType { get; }
    return:
      type: System.Type
      description: "A <xref:System.Type>나타내는 개체는 <xref href=&quot;System.Security.AccessControl.FileSystemRights&quot;> </xref> 열거형.</xref:System.Type>"
  overload: System.Security.AccessControl.FileSystemSecurity.AccessRightType*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  id: AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
  nameWithType: FileSystemSecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
  fullName: System.Security.AccessControl.FileSystemSecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Security.AccessControl.FileSystemAccessRule&quot;> </xref> 지정 된 액세스 권한, 액세스 제어 및 플래그가 지정된 된 사용자에 대 한 새 액세스 제어 규칙을 나타내는 클래스입니다."
  remarks: "<xref:System.Security.AccessControl.FileSystemAccessRule>클래스</xref:System.Security.AccessControl.FileSystemAccessRule> 의 생성자를 사용 하는 액세스 제어 규칙을 작성 하는 권장된 방법       AccessRuleFactory 메서드의 반환 형식이 기본 클래스 <xref:System.Security.AccessControl.AccessRule>, 파생 클래스로 반환 값을 안전 하 게 캐스팅 하지만</xref:System.Security.AccessControl.AccessRule>"
  syntax:
    content: public override sealed System.Security.AccessControl.AccessRule AccessRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type);
    parameters:
    - id: identityReference
      type: System.Security.Principal.IdentityReference
      description: "<xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref> 사용자 계정을 나타내는 개체입니다."
    - id: accessMask
      type: System.Int32
      description: "액세스 형식을 지정 하는 정수입니다."
    - id: isInherited
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>액세스 규칙; 상속 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: "중 하나는 <xref href=&quot;System.Security.AccessControl.InheritanceFlags&quot;> </xref> 액세스 마스크 자식 개체를 전파 하는 방법을 지정 하는 값입니다."
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: "중 하나는 <xref href=&quot;System.Security.AccessControl.PropagationFlags&quot;> </xref> (Ace) 액세스 제어 항목 자식 개체에 전파 하는 방법을 지정 하는 값입니다."
    - id: type
      type: System.Security.AccessControl.AccessControlType
      description: "중 하나는 <xref href=&quot;System.Security.AccessControl.AccessControlType&quot;> </xref> 액세스 허용 또는 거부할지 여부를 지정 하는 값입니다."
    return:
      type: System.Security.AccessControl.AccessRule
      description: "새 <xref href=&quot;System.Security.AccessControl.FileSystemAccessRule&quot;> </xref> 지정 된 액세스 권한, 액세스 제어 및 플래그가 지정된 된 사용자에 대 한 새 액세스 제어 규칙을 나타내는 개체입니다."
  overload: System.Security.AccessControl.FileSystemSecurity.AccessRuleFactory*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The <code>accessMask</code>, <code>inheritanceFlags</code>, <code>propagationFlags</code>, or <code>type</code> parameters specify an invalid value."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>identityReference</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -또는- <code> accessMask </code> 매개 변수가&0;입니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> identityReference </code> 매개 변수는 형식이 <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref>, 아니고과 같은 형식 <xref href=&quot;System.Security.Principal.NTAccount&quot;> </xref> 변환할 수 있는 <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.AccessRuleType
  id: AccessRuleType
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: AccessRuleType
  nameWithType: FileSystemSecurity.AccessRuleType
  fullName: System.Security.AccessControl.FileSystemSecurity.AccessRuleType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "열거형을 가져옵니다는 <xref href=&quot;System.Security.AccessControl.FileSystemSecurity&quot;> </xref> 액세스 규칙을 나타내는 클래스입니다."
  remarks: "파생 된 클래스는 <xref:System.Security.AccessControl.FileSystemSecurity>클래스 AccessRuleType 속성을 재정의 하 고 액세스 규칙을 나타내는 데 사용 하는 형식을 반환 합니다.</xref:System.Security.AccessControl.FileSystemSecurity> 배열 또는 여러 유형의 보안 개체를 포함 하는 컬렉션으로 작업할 때 각 보안 개체에 사용할 올바른 액세스 규칙을 확인 하려면이 속성을 사용 합니다."
  syntax:
    content: public override Type AccessRuleType { get; }
    return:
      type: System.Type
      description: "A <xref:System.Type>나타내는 개체는 <xref href=&quot;System.Security.AccessControl.FileSystemAccessRule&quot;> </xref> 클래스</xref:System.Type>"
  overload: System.Security.AccessControl.FileSystemSecurity.AccessRuleType*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.AddAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  id: AddAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: AddAccessRule(FileSystemAccessRule)
  nameWithType: FileSystemSecurity.AddAccessRule(FileSystemAccessRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.AddAccessRule(FileSystemAccessRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "현재 파일 또는 디렉터리를 지정 된 액세스 제어 목록 (ACL) 권한을 추가합니다."
  remarks: "AddAccessRule 메서드 내에 포함 된 규칙 목록에 새 규칙을 추가 <xref:System.Security.AccessControl.FileSystemSecurity>개체입니다.</xref:System.Security.AccessControl.FileSystemSecurity>       AddAccessRule 메서드 예외적으로 규칙을 지정된 된 규칙에 대 한 액세스 제어 목록 (ACL)가 이미 있는 경우 추가 여전히 합니다:는 <xref:System.Security.AccessControl.FileSystemAccessRule>사용 하 여 만든 개체는 <xref:System.Security.AccessControl.AccessControlType>열거형 값 대체를 사용 하 여 만든 개체는 <xref:System.Security.AccessControl.AccessControlType>열거형 값입니다.</xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.FileSystemAccessRule>       파일에 새로 추가 되거나 변경 ACL 정보를 유지 하기 위해 사용 하 여는 <xref:System.IO.File.SetAccessControl%2A>또는 <xref:System.IO.FileInfo.SetAccessControl%2A>메서드.</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.File.SetAccessControl%2A>  디렉터리에 새로 추가 되거나 변경 ACL 정보를 유지 하기 위해 사용 하 여는 <xref:System.IO.Directory.SetAccessControl%2A>또는 <xref:System.IO.FileInfo.SetAccessControl%2A>메서드.</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.Directory.SetAccessControl%2A>       파일에서 ACL 정보를 검색 하려면 사용 된 <xref:System.IO.File.GetAccessControl%2A>또는 <xref:System.IO.FileInfo.GetAccessControl%2A>메서드.</xref:System.IO.FileInfo.GetAccessControl%2A> </xref:System.IO.File.GetAccessControl%2A>  디렉터리에서 ACL 정보를 검색 하려면 사용 된 <xref:System.IO.Directory.GetAccessControl%2A>또는 <xref:System.IO.DirectoryInfo.GetAccessControl%2A>메서드.</xref:System.IO.DirectoryInfo.GetAccessControl%2A> </xref:System.IO.Directory.GetAccessControl%2A>       설정 하지 않고 액세스 규칙을 추가 하는 경우는 <xref:System.Security.AccessControl.FileSystemRights>플래그는 <xref:System.Security.AccessControl.FileSystemRights>규칙에 플래그를 자동으로 추가 됩니다.</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights>  지정 하지 않고 나중에 규칙을 제거 하는 경우는 <xref:System.Security.AccessControl.FileSystemRights>플래그를 플래그는 자동으로 제거 됩니다.</xref:System.Security.AccessControl.FileSystemRights>"
  example:
  - "The following code example uses the <xref:System.Security.AccessControl.FileSecurity> class to add and then remove an access control list (ACL) entry from a file.  You must supply a valid user or group account to run this example.  \n  \n [!code-cs[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/csharp/92a71f8c-d81d-4955-8014-_1.cs)]\n [!code-vb[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/visualbasic/92a71f8c-d81d-4955-8014-_1.vb)]\n [!code-cpp[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/cpp/92a71f8c-d81d-4955-8014-_1.cpp)]"
  syntax:
    content: public void AddAccessRule (System.Security.AccessControl.FileSystemAccessRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.FileSystemAccessRule
      description: "A <xref href=&quot;System.Security.AccessControl.FileSystemAccessRule&quot;> </xref> 파일 또는 디렉터리를 추가 하는 액세스 제어 목록 (ACL) 권한을 나타내는 개체입니다."
  overload: System.Security.AccessControl.FileSystemSecurity.AddAccessRule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.AddAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  id: AddAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: AddAuditRule(FileSystemAuditRule)
  nameWithType: FileSystemSecurity.AddAuditRule(FileSystemAuditRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.AddAuditRule(FileSystemAuditRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "현재 파일이 나 디렉터리에 지정된 된 감사 규칙을 추가합니다."
  remarks: "에 포함 된 규칙 목록에 새 감사 규칙을 추가 하는 AddAuditRule 메서드는 <xref:System.Security.AccessControl.FileSystemSecurity>개체입니다.</xref:System.Security.AccessControl.FileSystemSecurity>       감사 규칙에 이미 있으면 지정된 된 규칙에 대 한에 여전히 AddAuditRule 메서드는 규칙을 추가 합니다."
  example:
  - "The following code example uses the AddAuditRule method to add an audit rule to a file and uses the <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule%2A> method to remove the audit rule from the file.  You must supply a valid user or group account to run this example.  \n  \n [!code-vb[AccessControl.FileSystemAuditRule#1](~/add/codesnippet/visualbasic/a9a5c9f6-a8bf-4ad9-9027-_1.vb)]\n [!code-cs[AccessControl.FileSystemAuditRule#1](~/add/codesnippet/csharp/a9a5c9f6-a8bf-4ad9-9027-_1.cs)]"
  syntax:
    content: public void AddAuditRule (System.Security.AccessControl.FileSystemAuditRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.FileSystemAuditRule
      description: "A <xref href=&quot;System.Security.AccessControl.FileSystemAuditRule&quot;> </xref> 파일 또는 디렉터리를 추가 하는 감사 규칙을 나타내는 개체입니다."
  overload: System.Security.AccessControl.FileSystemSecurity.AddAuditRule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  id: AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
  nameWithType: FileSystemSecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
  fullName: System.Security.AccessControl.FileSystemSecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Security.AccessControl.FileSystemAuditRule&quot;> </xref> 지정된 된 사용자에 대 한 지정 된 감사 규칙을 나타내는 클래스입니다."
  remarks: "<xref:System.Security.AccessControl.FileSystemAuditRule>클래스</xref:System.Security.AccessControl.FileSystemAuditRule> 의 생성자를 사용 하는 감사 규칙을 만드는 권장된 방법을       AuditRuleFactory 메서드의 반환 형식이 기본 클래스 <xref:System.Security.AccessControl.AuditRule>, 파생 클래스로 반환 값을 안전 하 게 캐스팅 하지만</xref:System.Security.AccessControl.AuditRule>"
  syntax:
    content: public override sealed System.Security.AccessControl.AuditRule AuditRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);
    parameters:
    - id: identityReference
      type: System.Security.Principal.IdentityReference
      description: "<xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref> 사용자 계정을 나타내는 개체입니다."
    - id: accessMask
      type: System.Int32
      description: "액세스 형식을 지정 하는 정수입니다."
    - id: isInherited
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>액세스 규칙; 상속 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: "중 하나는 <xref href=&quot;System.Security.AccessControl.InheritanceFlags&quot;> </xref> 액세스 마스크 자식 개체를 전파 하는 방법을 지정 하는 값입니다."
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: "중 하나는 <xref href=&quot;System.Security.AccessControl.PropagationFlags&quot;> </xref> (Ace) 액세스 제어 항목 자식 개체에 전파 하는 방법을 지정 하는 값입니다."
    - id: flags
      type: System.Security.AccessControl.AuditFlags
      description: "중 하나는 <xref href=&quot;System.Security.AccessControl.AuditFlags&quot;> </xref> 수행할 감사의 유형을 지정 하는 값입니다."
    return:
      type: System.Security.AccessControl.AuditRule
      description: "새 <xref href=&quot;System.Security.AccessControl.FileSystemAuditRule&quot;> </xref> 지정된 된 사용자에 대 한 지정 된 감사 규칙을 나타내는 개체입니다."
  overload: System.Security.AccessControl.FileSystemSecurity.AuditRuleFactory*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The <code>accessMask</code>, <code>inheritanceFlags</code>, <code>propagationFlags</code>, or <code>flags</code> properties specify an invalid value."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>identityReference</code> property is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -또는- <code> accessMask </code> 속성은&0;입니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> identityReference </code> 속성은 형식이 <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref>, 아니고과 같은 형식 <xref href=&quot;System.Security.Principal.NTAccount&quot;> </xref> 변환할 수 있는 <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.AuditRuleType
  id: AuditRuleType
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: AuditRuleType
  nameWithType: FileSystemSecurity.AuditRuleType
  fullName: System.Security.AccessControl.FileSystemSecurity.AuditRuleType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "형식을 가져옵니다는 <xref href=&quot;System.Security.AccessControl.FileSystemSecurity&quot;> </xref> 감사 규칙을 나타내는 클래스입니다."
  remarks: "파생 된 클래스는 <xref:System.Security.AccessControl.FileSystemSecurity>클래스 AuditRuleType 속성을 재정의 하 고 감사 권한을 나타내는 데 사용 하는 형식을 반환 합니다.</xref:System.Security.AccessControl.FileSystemSecurity> 배열 또는 여러 유형의 보안 개체를 포함 하는 컬렉션으로 작업할 때 각 보안 개체에 사용할 올바른 감사 규칙을 확인 하려면이 속성을 사용 합니다."
  syntax:
    content: public override Type AuditRuleType { get; }
    return:
      type: System.Type
      description: "A <xref:System.Type>나타내는 개체는 <xref href=&quot;System.Security.AccessControl.FileSystemAuditRule&quot;> </xref> 클래스</xref:System.Type>"
  overload: System.Security.AccessControl.FileSystemSecurity.AuditRuleType*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  id: RemoveAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: RemoveAccessRule(FileSystemAccessRule)
  nameWithType: FileSystemSecurity.RemoveAccessRule(FileSystemAccessRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule(FileSystemAccessRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "제거 일치 하는 모든 권한을 허용 하거나 거부할 액세스 제어 목록 (ACL)에서 현재 파일 또는 디렉터리입니다."
  remarks: "RemoveAccessRule 메서드 제거 일치 <xref:System.Security.AccessControl.AccessControlType>액세스 규칙 또는 일치 하는 모든 <xref:System.Security.AccessControl.AccessControlType>액세스 규칙에서 현재 <xref:System.Security.AccessControl.FileSystemSecurity>개체입니다.</xref:System.Security.AccessControl.FileSystemSecurity> </xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.AccessControlType>  예를 들어 모든 제거 하려면이 방법을 사용할 수 있습니다 <xref:System.Security.AccessControl.AccessControlType>전달 하 여 사용자에 대 한 액세스는 <xref:System.Security.AccessControl.FileSystemAccessRule>사용 하 여 만든 개체는 <xref:System.Security.AccessControl.AccessControlType>값은 <xref:System.Security.AccessControl.FileSystemRights>값 및 사용자 계정.</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.FileSystemAccessRule> </xref:System.Security.AccessControl.AccessControlType>  RemoveAccessRule 메서드를 지정 하는 모든 거부 규칙 제거이 작업을 수행 하는 경우는 <xref:System.Security.AccessControl.FileSystemRights>값 또는 <xref:System.Security.AccessControl.FileSystemRights>값.</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights>       파일에 변경 되거나 새로운 액세스 제어 목록 (ACL) 정보를 유지 하기 위해 사용 하 여는 <xref:System.IO.File.SetAccessControl%2A>또는 <xref:System.IO.FileInfo.SetAccessControl%2A>메서드.</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.File.SetAccessControl%2A>  디렉터리에 새로 추가 되거나 변경 ACL 정보를 유지 하기 위해 사용 하 여는 <xref:System.IO.Directory.SetAccessControl%2A>또는 <xref:System.IO.FileInfo.SetAccessControl%2A>메서드.</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.Directory.SetAccessControl%2A>       파일에서 ACL 정보를 검색 하려면 사용 된 <xref:System.IO.File.GetAccessControl%2A>또는 <xref:System.IO.FileInfo.GetAccessControl%2A>메서드.</xref:System.IO.FileInfo.GetAccessControl%2A> </xref:System.IO.File.GetAccessControl%2A>  디렉터리에서 ACL 정보를 검색 하려면 사용 된 <xref:System.IO.Directory.GetAccessControl%2A>또는 <xref:System.IO.DirectoryInfo.GetAccessControl%2A>메서드.</xref:System.IO.DirectoryInfo.GetAccessControl%2A> </xref:System.IO.Directory.GetAccessControl%2A>       설정 하지 않고 액세스 규칙을 추가 하는 경우는 <xref:System.Security.AccessControl.FileSystemRights>플래그는 <xref:System.Security.AccessControl.FileSystemRights>규칙에 플래그를 자동으로 추가 됩니다.</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights>  지정 하지 않고 나중에 규칙을 제거 하는 경우는 <xref:System.Security.AccessControl.FileSystemRights>플래그를 플래그는 자동으로 제거 됩니다.</xref:System.Security.AccessControl.FileSystemRights>"
  example:
  - "The following code example uses the <xref:System.Security.AccessControl.FileSecurity> class to add and then remove an access control list (ACL) entry from a file.  You must supply a valid user or group account to run this example.  \n  \n [!code-cs[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/csharp/8c37102e-50e1-48e9-baeb-_1.cs)]\n [!code-vb[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/visualbasic/8c37102e-50e1-48e9-baeb-_1.vb)]\n [!code-cpp[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/cpp/8c37102e-50e1-48e9-baeb-_1.cpp)]"
  syntax:
    content: public bool RemoveAccessRule (System.Security.AccessControl.FileSystemAccessRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.FileSystemAccessRule
      description: "A <xref href=&quot;System.Security.AccessControl.FileSystemAccessRule&quot;> </xref> 파일 또는 디렉터리에서 제거 하는 액세스 제어 목록 (ACL) 권한을 나타내는 개체입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>액세스 규칙이 제거 되었으면; 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleAll(System.Security.AccessControl.FileSystemAccessRule)
  id: RemoveAccessRuleAll(System.Security.AccessControl.FileSystemAccessRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: RemoveAccessRuleAll(FileSystemAccessRule)
  nameWithType: FileSystemSecurity.RemoveAccessRuleAll(FileSystemAccessRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleAll(FileSystemAccessRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "현재 파일이 나 디렉터리에서 지정된 된 사용자에 대 한 모든 액세스 제어 목록 (ACL) 권한을 제거합니다."
  remarks: "RemoveAccessRuleAll 메서드는 지정된 된 사용자에 대 한 모든 액세스 제어 목록 (ACL) 권한을 제거합니다.  모든 값을 무시 하는 메서드는 <xref:System.Security.AccessControl.FileSystemAccessRule>개체에서 사용자 계정 제외한.</xref:System.Security.AccessControl.FileSystemAccessRule>       파일에 새로 추가 되거나 변경 ACL 정보를 유지 하기 위해 사용 하 여는 <xref:System.IO.File.SetAccessControl%2A>또는 <xref:System.IO.FileInfo.SetAccessControl%2A>메서드.</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.File.SetAccessControl%2A>  디렉터리에 새로 추가 되거나 변경 ACL 정보를 유지 하기 위해 사용 하 여는 <xref:System.IO.Directory.SetAccessControl%2A>또는 <xref:System.IO.FileInfo.SetAccessControl%2A>메서드.</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.Directory.SetAccessControl%2A>       파일에서 ACL 정보를 검색 하려면 사용 된 <xref:System.IO.File.GetAccessControl%2A>또는 <xref:System.IO.FileInfo.GetAccessControl%2A>메서드.</xref:System.IO.FileInfo.GetAccessControl%2A> </xref:System.IO.File.GetAccessControl%2A>  디렉터리에서 ACL 정보를 검색 하려면 사용 된 <xref:System.IO.Directory.GetAccessControl%2A>또는 <xref:System.IO.DirectoryInfo.GetAccessControl%2A>메서드.</xref:System.IO.DirectoryInfo.GetAccessControl%2A> </xref:System.IO.Directory.GetAccessControl%2A>       설정 하지 않고 액세스 규칙을 추가 하는 경우는 <xref:System.Security.AccessControl.FileSystemRights>플래그는 <xref:System.Security.AccessControl.FileSystemRights>규칙에 플래그를 자동으로 추가 됩니다.</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights>  지정 하지 않고 나중에 규칙을 제거 하는 경우는 <xref:System.Security.AccessControl.FileSystemRights>플래그를 플래그는 자동으로 제거 됩니다.</xref:System.Security.AccessControl.FileSystemRights>"
  syntax:
    content: public void RemoveAccessRuleAll (System.Security.AccessControl.FileSystemAccessRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.FileSystemAccessRule
      description: "A <xref href=&quot;System.Security.AccessControl.FileSystemAccessRule&quot;> </xref> 파일 또는 디렉터리에서 사용자 액세스 제어 목록 (ACL) 사용 권한을 지정 하는 개체를 제거 해야 합니다."
  overload: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleAll*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.FileSystemAccessRule)
  id: RemoveAccessRuleSpecific(System.Security.AccessControl.FileSystemAccessRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: RemoveAccessRuleSpecific(FileSystemAccessRule)
  nameWithType: FileSystemSecurity.RemoveAccessRuleSpecific(FileSystemAccessRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific(FileSystemAccessRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "허용 / 거부 현재 파일이 나 디렉터리에서 액세스 제어 목록 (ACL) 권한을 일치 하는 특정 제거 합니다."
  remarks: "RemoveAccessRuleSpecific 메서드를 지정 된 제거 <xref:System.Security.AccessControl.AccessControlType>규칙 또는 일치 하는 지정 된 액세스 <xref:System.Security.AccessControl.AccessControlType>현재에서 액세스 규칙 <xref:System.Security.AccessControl.FileSystemSecurity>개체입니다.</xref:System.Security.AccessControl.FileSystemSecurity> </xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.AccessControlType>  지정 된 제거 하려면이 메서드를 사용할 수는 예를 들어 <xref:System.Security.AccessControl.AccessControlType>전달 하 여 사용자에 대 한 액세스 규칙은 <xref:System.Security.AccessControl.FileSystemAccessRule>사용 하 여 만든 개체는 <xref:System.Security.AccessControl.AccessControlType>값은 <xref:System.Security.AccessControl.FileSystemRights>값 및 사용자 계정.</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.FileSystemAccessRule> </xref:System.Security.AccessControl.AccessControlType>  이렇게 하면 RemoveAccessRuleSpecific도 제거 거부 규칙을 지정 하는 <xref:System.Security.AccessControl.FileSystemRights>값.</xref:System.Security.AccessControl.FileSystemRights>  지정 된 거부 규칙을 제거 하지 않습니다는 <xref:System.Security.AccessControl.FileSystemRights>값.</xref:System.Security.AccessControl.FileSystemRights>       파일에 변경 되거나 새로운 액세스 제어 목록 (ACL) 정보를 유지 하기 위해 사용 하 여는 <xref:System.IO.File.SetAccessControl%2A>또는 <xref:System.IO.FileInfo.SetAccessControl%2A>메서드.</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.File.SetAccessControl%2A>  디렉터리에 새로 추가 되거나 변경 ACL 정보를 유지 하기 위해 사용 하 여는 <xref:System.IO.Directory.SetAccessControl%2A>또는 <xref:System.IO.FileInfo.SetAccessControl%2A>메서드.</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.Directory.SetAccessControl%2A>       파일에서 ACL 정보를 검색 하려면 사용 된 <xref:System.IO.File.GetAccessControl%2A>또는 <xref:System.IO.FileInfo.GetAccessControl%2A>메서드.</xref:System.IO.FileInfo.GetAccessControl%2A> </xref:System.IO.File.GetAccessControl%2A>  디렉터리에서 ACL 정보를 검색 하려면 사용 된 <xref:System.IO.Directory.GetAccessControl%2A>또는 <xref:System.IO.DirectoryInfo.GetAccessControl%2A>메서드.</xref:System.IO.DirectoryInfo.GetAccessControl%2A> </xref:System.IO.Directory.GetAccessControl%2A>       설정 하지 않고 액세스 규칙을 추가 하는 경우는 <xref:System.Security.AccessControl.FileSystemRights>플래그는 <xref:System.Security.AccessControl.FileSystemRights>규칙에 플래그를 자동으로 추가 됩니다.</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights>  지정 하지 않고 나중에 규칙을 제거 하는 경우는 <xref:System.Security.AccessControl.FileSystemRights>플래그를 플래그는 자동으로 제거 됩니다.</xref:System.Security.AccessControl.FileSystemRights>"
  syntax:
    content: public void RemoveAccessRuleSpecific (System.Security.AccessControl.FileSystemAccessRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.FileSystemAccessRule
      description: "A <xref href=&quot;System.Security.AccessControl.FileSystemAccessRule&quot;> </xref> 파일 또는 디렉터리에서 사용자 액세스 제어 목록 (ACL) 사용 권한을 지정 하는 개체를 제거 해야 합니다."
  overload: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  id: RemoveAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: RemoveAuditRule(FileSystemAuditRule)
  nameWithType: FileSystemSecurity.RemoveAuditRule(FileSystemAuditRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule(FileSystemAuditRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "일치 하는 모든 제거를 허용 하거나 현재 파일이 나 디렉터리에서 감사 규칙을 거부 합니다."
  remarks: "RemoveAuditRule 메서드 제거 일치 <xref:System.Security.AccessControl.AccessControlType>감사 규칙 또는 일치 하는 모든 <xref:System.Security.AccessControl.AccessControlType>감사는 현재 규칙 <xref:System.Security.AccessControl.FileSystemSecurity>개체입니다.</xref:System.Security.AccessControl.FileSystemSecurity> </xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.AccessControlType>  예를 들어 모든 제거 하려면이 방법을 사용할 수 있습니다 <xref:System.Security.AccessControl.AccessControlType>전달 하 여 사용자에 대 한 규칙을 감사는 <xref:System.Security.AccessControl.FileSystemAuditRule>사용 하 여 만든 개체는 <xref:System.Security.AccessControl.AccessControlType>값은 <xref:System.Security.AccessControl.AuditFlags>값 및 사용자 계정.</xref:System.Security.AccessControl.AuditFlags> </xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.FileSystemAuditRule> </xref:System.Security.AccessControl.AccessControlType>  RemoveAuditRule 메서드를 지정 하는 모든 거부 규칙 제거이 작업을 수행 하는 경우는 <xref:System.Security.AccessControl.AuditFlags>값 또는 <xref:System.Security.AccessControl.AuditFlags>값.</xref:System.Security.AccessControl.AuditFlags> </xref:System.Security.AccessControl.AuditFlags>"
  example:
  - "The following code example uses the <xref:System.Security.AccessControl.FileSystemSecurity.AddAuditRule%2A> method to add an audit rule to a file and uses the RemoveAuditRule method to remove the audit rule from the file.  You must supply a valid user or group account to run this example.  \n  \n [!code-vb[AccessControl.FileSystemAuditRule#1](~/add/codesnippet/visualbasic/e76c77df-35cd-4fcd-bf24-_1.vb)]\n [!code-cs[AccessControl.FileSystemAuditRule#1](~/add/codesnippet/csharp/e76c77df-35cd-4fcd-bf24-_1.cs)]"
  syntax:
    content: public bool RemoveAuditRule (System.Security.AccessControl.FileSystemAuditRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.FileSystemAuditRule
      description: "A <xref href=&quot;System.Security.AccessControl.FileSystemAuditRule&quot;> </xref> 파일 또는 디렉터리에서 제거 하는 감사 규칙을 나타내는 개체입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>감사 규칙이 제거 되었으면; 그렇지 않은 경우<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>"
  overload: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleAll(System.Security.AccessControl.FileSystemAuditRule)
  id: RemoveAuditRuleAll(System.Security.AccessControl.FileSystemAuditRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: RemoveAuditRuleAll(FileSystemAuditRule)
  nameWithType: FileSystemSecurity.RemoveAuditRuleAll(FileSystemAuditRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleAll(FileSystemAuditRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "현재 파일이 나 디렉터리에서 지정된 된 사용자에 대 한 모든 감사 규칙을 제거합니다."
  remarks: "RemoveAuditRuleAll 메서드는 지정된 된 사용자에 대 한 모든 감사 규칙을 제거합니다.  모든 값은 무시는 <xref:System.Security.AccessControl.FileSystemAuditRule>개체에서 사용자 계정 제외한.</xref:System.Security.AccessControl.FileSystemAuditRule>"
  syntax:
    content: public void RemoveAuditRuleAll (System.Security.AccessControl.FileSystemAuditRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.FileSystemAuditRule
      description: "A <xref href=&quot;System.Security.AccessControl.FileSystemAuditRule&quot;> </xref> 감사 규칙의 파일 또는 디렉터리에서 제거 해야 하는 사용자 지정 하는 개체입니다."
  overload: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleAll*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.FileSystemAuditRule)
  id: RemoveAuditRuleSpecific(System.Security.AccessControl.FileSystemAuditRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: RemoveAuditRuleSpecific(FileSystemAuditRule)
  nameWithType: FileSystemSecurity.RemoveAuditRuleSpecific(FileSystemAuditRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific(FileSystemAuditRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "허용 / 거부 현재 파일이 나 디렉터리에서 감사 규칙이 일치 하는 특정 제거 합니다."
  remarks: "RemoveAuditRuleSpecific 메서드는 일치 하는 지정 된 제거 <xref:System.Security.AccessControl.AccessControlType>감사 규칙이 나 특정 <xref:System.Security.AccessControl.AccessControlType>현재에서 감사 규칙 <xref:System.Security.AccessControl.FileSystemSecurity>개체입니다.</xref:System.Security.AccessControl.FileSystemSecurity> </xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.AccessControlType>  지정 된 제거 하려면이 메서드를 사용할 수는 예를 들어 <xref:System.Security.AccessControl.AccessControlType>전달 하 여 사용자에 대 한 감사 규칙은 <xref:System.Security.AccessControl.FileSystemAuditRule>사용 하 여 만든 개체는 <xref:System.Security.AccessControl.AccessControlType>값은 <xref:System.Security.AccessControl.AuditFlags>값 및 사용자 계정.</xref:System.Security.AccessControl.AuditFlags> </xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.FileSystemAuditRule> </xref:System.Security.AccessControl.AccessControlType>  이렇게 하면 RemoveAuditRuleSpecific도 제거는 거부 규칙을 지정 하는 <xref:System.Security.AccessControl.AuditFlags>값.</xref:System.Security.AccessControl.AuditFlags>  지정 된 거부 규칙을 제거 하지 않습니다는 <xref:System.Security.AccessControl.AuditFlags>값.</xref:System.Security.AccessControl.AuditFlags>"
  syntax:
    content: public void RemoveAuditRuleSpecific (System.Security.AccessControl.FileSystemAuditRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.FileSystemAuditRule
      description: "A <xref href=&quot;System.Security.AccessControl.FileSystemAuditRule&quot;> </xref> 파일 또는 디렉터리에서 제거 하는 감사 규칙을 나타내는 개체입니다."
  overload: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.ResetAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  id: ResetAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: ResetAccessRule(FileSystemAccessRule)
  nameWithType: FileSystemSecurity.ResetAccessRule(FileSystemAccessRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.ResetAccessRule(FileSystemAccessRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "현재 파일 또는 디렉터리를 지정 된 액세스 제어 목록 (ACL) 권한을 추가 하 고 모든 일치 하는 ACL 사용 권한을 제거 합니다."
  remarks: "ResetAccessRule 메서드를 지정 된 액세스 제어 목록 (ACL) 규칙을 추가 하거나 일치 하는 동일한 모든 ACL 규칙을 덮어씁니다는 `rule` 매개 변수입니다.  예를 들어 경우는 `rule` 매개 변수 지정는 <xref:System.Security.AccessControl.FileSystemRights>값과 ResetAccessRule 메서드 동일한 규칙을 찾으면 ACL을 지정 하는 <xref:System.Security.AccessControl.FileSystemRights>값을 동일한 규칙 덮어쓰게 됩니다.</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights>  경우 ResetAccessRule 찾으면 동일한 ACL 규칙을 지정 하는 <xref:System.Security.AccessControl.FileSystemRights>값을 동일한 규칙도 덮어쓰게 됩니다.</xref:System.Security.AccessControl.FileSystemRights>       파일에 새로 추가 되거나 변경 ACL 정보를 유지 하기 위해 사용 하 여는 <xref:System.IO.File.SetAccessControl%2A>또는 <xref:System.IO.FileInfo.SetAccessControl%2A>메서드.</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.File.SetAccessControl%2A>  디렉터리에 새로 추가 되거나 변경 ACL 정보를 유지 하기 위해 사용 하 여는 <xref:System.IO.Directory.SetAccessControl%2A>또는 <xref:System.IO.FileInfo.SetAccessControl%2A>메서드.</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.Directory.SetAccessControl%2A>       파일에서 ACL 정보를 검색 하려면 사용 된 <xref:System.IO.File.GetAccessControl%2A>또는 <xref:System.IO.FileInfo.GetAccessControl%2A>메서드.</xref:System.IO.FileInfo.GetAccessControl%2A> </xref:System.IO.File.GetAccessControl%2A>  디렉터리에서 ACL 정보를 검색 하려면 사용 된 <xref:System.IO.Directory.GetAccessControl%2A>또는 <xref:System.IO.DirectoryInfo.GetAccessControl%2A>메서드.</xref:System.IO.DirectoryInfo.GetAccessControl%2A> </xref:System.IO.Directory.GetAccessControl%2A>"
  syntax:
    content: public void ResetAccessRule (System.Security.AccessControl.FileSystemAccessRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.FileSystemAccessRule
      description: "A <xref href=&quot;System.Security.AccessControl.FileSystemAccessRule&quot;> </xref> 파일 또는 디렉터리를 추가 하는 액세스 제어 목록 (ACL) 권한을 나타내는 개체입니다."
  overload: System.Security.AccessControl.FileSystemSecurity.ResetAccessRule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.SetAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  id: SetAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: SetAccessRule(FileSystemAccessRule)
  nameWithType: FileSystemSecurity.SetAccessRule(FileSystemAccessRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.SetAccessRule(FileSystemAccessRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "현재 파일이 나 디렉터리에 대 한 지정 된 액세스 제어 목록 (ACL) 권한을 설정합니다."
  remarks: "SetAccessRule 메서드를 지정 된 액세스 제어 목록 (ACL) 규칙을 추가 하거나 일치 하는 동일한 모든 ACL 규칙을 덮어씁니다는 <xref:System.Security.AccessControl.FileSystemRights>의 값은 `rule` 매개 변수.</xref:System.Security.AccessControl.FileSystemRights>  예를 들어 경우는 `rule` 매개 변수 지정는 <xref:System.Security.AccessControl.FileSystemRights>값과 SetAccessRule 메서드 동일한 규칙을 찾으면 ACL을 지정 하는 <xref:System.Security.AccessControl.FileSystemRights>값을 동일한 규칙 덮어쓰게 됩니다.</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights>  경우 SetAccessRule 찾으면 동일한 ACL 규칙을 지정 하는 <xref:System.Security.AccessControl.FileSystemRights>값을 동일한 규칙 하지 덮어쓰게 됩니다.</xref:System.Security.AccessControl.FileSystemRights>       파일에 새로 추가 되거나 변경 ACL 정보를 유지 하기 위해 사용 하 여는 <xref:System.IO.File.SetAccessControl%2A>또는 <xref:System.IO.FileInfo.SetAccessControl%2A>메서드.</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.File.SetAccessControl%2A>  디렉터리에 새로 추가 되거나 변경 ACL 정보를 유지 하기 위해 사용 하 여는 <xref:System.IO.Directory.SetAccessControl%2A>또는 <xref:System.IO.FileInfo.SetAccessControl%2A>메서드.</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.Directory.SetAccessControl%2A>       파일에서 ACL 정보를 검색 하려면 사용 된 <xref:System.IO.File.GetAccessControl%2A>또는 <xref:System.IO.FileInfo.GetAccessControl%2A>메서드.</xref:System.IO.FileInfo.GetAccessControl%2A> </xref:System.IO.File.GetAccessControl%2A>  디렉터리에서 ACL 정보를 검색 하려면 사용 된 <xref:System.IO.Directory.GetAccessControl%2A>또는 <xref:System.IO.DirectoryInfo.GetAccessControl%2A>메서드.</xref:System.IO.DirectoryInfo.GetAccessControl%2A> </xref:System.IO.Directory.GetAccessControl%2A>"
  syntax:
    content: public void SetAccessRule (System.Security.AccessControl.FileSystemAccessRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.FileSystemAccessRule
      description: "A <xref href=&quot;System.Security.AccessControl.FileSystemAccessRule&quot;> </xref> 파일 또는 디렉터리에 대 한 액세스 제어 목록 (ACL) 권한을 나타내는 개체입니다."
  overload: System.Security.AccessControl.FileSystemSecurity.SetAccessRule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.SetAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  id: SetAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: SetAuditRule(FileSystemAuditRule)
  nameWithType: FileSystemSecurity.SetAuditRule(FileSystemAuditRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.SetAuditRule(FileSystemAuditRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "현재 파일이 나 디렉터리에 대 한 지정 된 감사 규칙을 설정합니다."
  remarks: "SetAuditRule 메서드는 지정 된 감사 규칙을 추가 하거나 일치 하는 모든 동일한 감사 규칙을 덮어씁니다는 <xref:System.Security.AccessControl.FileSystemRights>의 값은 `rule` 매개 변수.</xref:System.Security.AccessControl.FileSystemRights>  예를 들어 경우는 `rule` 매개 변수 지정는 <xref:System.Security.AccessControl.FileSystemRights>지정 하는 동일한 감사 규칙을 찾으면 값과 SetAuditRule 메서드는 <xref:System.Security.AccessControl.FileSystemRights>값을 동일한 규칙 덮어쓰게 됩니다.</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights>  SetAuditRule 메서드는 동일한 감사 규칙을 찾을 경우를 지정 하는 <xref:System.Security.AccessControl.FileSystemRights>값을 동일한 규칙 하지 덮어쓰게 됩니다.</xref:System.Security.AccessControl.FileSystemRights>"
  syntax:
    content: public void SetAuditRule (System.Security.AccessControl.FileSystemAuditRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.FileSystemAuditRule
      description: "A <xref href=&quot;System.Security.AccessControl.FileSystemAuditRule&quot;> </xref> 파일 또는 디렉터리에 대 한 감사 규칙을 나타내는 개체입니다."
  overload: System.Security.AccessControl.FileSystemSecurity.SetAuditRule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Security.AccessControl.NativeObjectSecurity
  isExternal: false
  name: System.Security.AccessControl.NativeObjectSecurity
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Security.AccessControl.FileSystemSecurity.AccessRightType
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AccessRightType
  nameWithType: FileSystemSecurity.AccessRightType
  fullName: System.Security.AccessControl.FileSystemSecurity.AccessRightType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Security.AccessControl.FileSystemSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
  nameWithType: FileSystemSecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
  fullName: System.Security.AccessControl.FileSystemSecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
- uid: System.Security.AccessControl.AccessRule
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessRule
  nameWithType: AccessRule
  fullName: System.Security.AccessControl.AccessRule
- uid: System.Security.Principal.IdentityReference
  parent: System.Security.Principal
  isExternal: false
  name: IdentityReference
  nameWithType: IdentityReference
  fullName: System.Security.Principal.IdentityReference
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.AccessControl.InheritanceFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: InheritanceFlags
  nameWithType: InheritanceFlags
  fullName: System.Security.AccessControl.InheritanceFlags
- uid: System.Security.AccessControl.PropagationFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: PropagationFlags
  nameWithType: PropagationFlags
  fullName: System.Security.AccessControl.PropagationFlags
- uid: System.Security.AccessControl.AccessControlType
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessControlType
  nameWithType: AccessControlType
  fullName: System.Security.AccessControl.AccessControlType
- uid: System.Security.AccessControl.FileSystemSecurity.AccessRuleType
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AccessRuleType
  nameWithType: FileSystemSecurity.AccessRuleType
  fullName: System.Security.AccessControl.FileSystemSecurity.AccessRuleType
- uid: System.Security.AccessControl.FileSystemSecurity.AddAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AddAccessRule(FileSystemAccessRule)
  nameWithType: FileSystemSecurity.AddAccessRule(FileSystemAccessRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.AddAccessRule(FileSystemAccessRule)
- uid: System.Security.AccessControl.FileSystemAccessRule
  parent: System.Security.AccessControl
  isExternal: false
  name: FileSystemAccessRule
  nameWithType: FileSystemAccessRule
  fullName: System.Security.AccessControl.FileSystemAccessRule
- uid: System.Security.AccessControl.FileSystemSecurity.AddAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AddAuditRule(FileSystemAuditRule)
  nameWithType: FileSystemSecurity.AddAuditRule(FileSystemAuditRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.AddAuditRule(FileSystemAuditRule)
- uid: System.Security.AccessControl.FileSystemAuditRule
  parent: System.Security.AccessControl
  isExternal: false
  name: FileSystemAuditRule
  nameWithType: FileSystemAuditRule
  fullName: System.Security.AccessControl.FileSystemAuditRule
- uid: System.Security.AccessControl.FileSystemSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
  nameWithType: FileSystemSecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
  fullName: System.Security.AccessControl.FileSystemSecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
- uid: System.Security.AccessControl.AuditRule
  parent: System.Security.AccessControl
  isExternal: false
  name: AuditRule
  nameWithType: AuditRule
  fullName: System.Security.AccessControl.AuditRule
- uid: System.Security.AccessControl.AuditFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: AuditFlags
  nameWithType: AuditFlags
  fullName: System.Security.AccessControl.AuditFlags
- uid: System.Security.AccessControl.FileSystemSecurity.AuditRuleType
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AuditRuleType
  nameWithType: FileSystemSecurity.AuditRuleType
  fullName: System.Security.AccessControl.FileSystemSecurity.AuditRuleType
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: RemoveAccessRule(FileSystemAccessRule)
  nameWithType: FileSystemSecurity.RemoveAccessRule(FileSystemAccessRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule(FileSystemAccessRule)
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleAll(System.Security.AccessControl.FileSystemAccessRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: RemoveAccessRuleAll(FileSystemAccessRule)
  nameWithType: FileSystemSecurity.RemoveAccessRuleAll(FileSystemAccessRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleAll(FileSystemAccessRule)
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.FileSystemAccessRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: RemoveAccessRuleSpecific(FileSystemAccessRule)
  nameWithType: FileSystemSecurity.RemoveAccessRuleSpecific(FileSystemAccessRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific(FileSystemAccessRule)
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: RemoveAuditRule(FileSystemAuditRule)
  nameWithType: FileSystemSecurity.RemoveAuditRule(FileSystemAuditRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule(FileSystemAuditRule)
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleAll(System.Security.AccessControl.FileSystemAuditRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: RemoveAuditRuleAll(FileSystemAuditRule)
  nameWithType: FileSystemSecurity.RemoveAuditRuleAll(FileSystemAuditRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleAll(FileSystemAuditRule)
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.FileSystemAuditRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: RemoveAuditRuleSpecific(FileSystemAuditRule)
  nameWithType: FileSystemSecurity.RemoveAuditRuleSpecific(FileSystemAuditRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific(FileSystemAuditRule)
- uid: System.Security.AccessControl.FileSystemSecurity.ResetAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: ResetAccessRule(FileSystemAccessRule)
  nameWithType: FileSystemSecurity.ResetAccessRule(FileSystemAccessRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.ResetAccessRule(FileSystemAccessRule)
- uid: System.Security.AccessControl.FileSystemSecurity.SetAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: SetAccessRule(FileSystemAccessRule)
  nameWithType: FileSystemSecurity.SetAccessRule(FileSystemAccessRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.SetAccessRule(FileSystemAccessRule)
- uid: System.Security.AccessControl.FileSystemSecurity.SetAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: SetAuditRule(FileSystemAuditRule)
  nameWithType: FileSystemSecurity.SetAuditRule(FileSystemAuditRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.SetAuditRule(FileSystemAuditRule)
- uid: System.Security.AccessControl.FileSystemSecurity.AccessRightType*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AccessRightType
  nameWithType: FileSystemSecurity.AccessRightType
- uid: System.Security.AccessControl.FileSystemSecurity.AccessRuleFactory*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AccessRuleFactory
  nameWithType: FileSystemSecurity.AccessRuleFactory
- uid: System.Security.AccessControl.FileSystemSecurity.AccessRuleType*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AccessRuleType
  nameWithType: FileSystemSecurity.AccessRuleType
- uid: System.Security.AccessControl.FileSystemSecurity.AddAccessRule*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AddAccessRule
  nameWithType: FileSystemSecurity.AddAccessRule
- uid: System.Security.AccessControl.FileSystemSecurity.AddAuditRule*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AddAuditRule
  nameWithType: FileSystemSecurity.AddAuditRule
- uid: System.Security.AccessControl.FileSystemSecurity.AuditRuleFactory*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AuditRuleFactory
  nameWithType: FileSystemSecurity.AuditRuleFactory
- uid: System.Security.AccessControl.FileSystemSecurity.AuditRuleType*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AuditRuleType
  nameWithType: FileSystemSecurity.AuditRuleType
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: RemoveAccessRule
  nameWithType: FileSystemSecurity.RemoveAccessRule
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleAll*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: RemoveAccessRuleAll
  nameWithType: FileSystemSecurity.RemoveAccessRuleAll
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: RemoveAccessRuleSpecific
  nameWithType: FileSystemSecurity.RemoveAccessRuleSpecific
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: RemoveAuditRule
  nameWithType: FileSystemSecurity.RemoveAuditRule
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleAll*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: RemoveAuditRuleAll
  nameWithType: FileSystemSecurity.RemoveAuditRuleAll
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: RemoveAuditRuleSpecific
  nameWithType: FileSystemSecurity.RemoveAuditRuleSpecific
- uid: System.Security.AccessControl.FileSystemSecurity.ResetAccessRule*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: ResetAccessRule
  nameWithType: FileSystemSecurity.ResetAccessRule
- uid: System.Security.AccessControl.FileSystemSecurity.SetAccessRule*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: SetAccessRule
  nameWithType: FileSystemSecurity.SetAccessRule
- uid: System.Security.AccessControl.FileSystemSecurity.SetAuditRule*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: SetAuditRule
  nameWithType: FileSystemSecurity.SetAuditRule
