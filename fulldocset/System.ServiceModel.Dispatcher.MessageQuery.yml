### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Dispatcher.MessageQuery
  id: MessageQuery
  children:
  - System.ServiceModel.Dispatcher.MessageQuery.#ctor
  - System.ServiceModel.Dispatcher.MessageQuery.CreateMessageQueryCollection
  - System.ServiceModel.Dispatcher.MessageQuery.Evaluate``1(System.ServiceModel.Channels.Message)
  - System.ServiceModel.Dispatcher.MessageQuery.Evaluate``1(System.ServiceModel.Channels.MessageBuffer)
  langs:
  - csharp
  name: MessageQuery
  nameWithType: MessageQuery
  fullName: System.ServiceModel.Dispatcher.MessageQuery
  type: Class
  summary: "메시지의 특정 상관 관계 자동 연결 데이터를 검색 하는 데 사용 되는 클래스의 핵심 동작을 정의 합니다."
  remarks: "MessageQuery 클래스 <xref:System.ServiceModel.Dispatcher.MessageFilter>클래스</xref:System.ServiceModel.Dispatcher.MessageFilter> 에 대해 비슷합니다.  그러나 일치 항목을 반환 하는 대신는 <xref:System.ServiceModel.Dispatcher.MessageQuery.Evaluate%2A>메서드는 메시지에 대 한 쿼리를 평가의 결과 반환 합니다.</xref:System.ServiceModel.Dispatcher.MessageQuery.Evaluate%2A> 쿼리의 결과 메시지의 값입니다. 메시지를 다른 메시지 상관 관계를 키로 값을 사용 합니다. <xref:System.ServiceModel.Channels.CorrelationDataMessageProperty.Add%2A> <xref:System.ServiceModel.Channels.CorrelationDataMessageProperty>클래스</xref:System.ServiceModel.Channels.CorrelationDataMessageProperty> 의 메서드</xref:System.ServiceModel.Channels.CorrelationDataMessageProperty.Add%2A> 를 사용 하 여 데이터에 대 한 새 속성을 추가 하려면      > [!NOTE] >는 MessageQuery의 구체적인 구현, <xref:System.ServiceModel.XPathMessageQuery>클래스</xref:System.ServiceModel.XPathMessageQuery> 를 참조 하십시오.      ## 쿼리 개체의 집합을 만드는 <xref:System.ServiceModel.Dispatcher.MessageQueryCollection>클래스</xref:System.ServiceModel.Dispatcher.MessageQueryCollection> 의 인스턴스로 삽입 하 여 쿼리 프로세스를 최적화할 수 XPathMessageQuery 및 MessageQueryCollection 클래스 사용      > [!NOTE] > 구체적 구현은 <xref:System.ServiceModel.Dispatcher.MessageQueryCollection> <xref:System.ServiceModel.Dispatcher.XPathMessageQueryCollection>클래스</xref:System.ServiceModel.Dispatcher.XPathMessageQueryCollection> 를 참조 하십시오</xref:System.ServiceModel.Dispatcher.MessageQueryCollection>       일반적인 사용 있는 XPath 조건자가 같고 마지막 리프 값만 다른 쿼리로 컬렉션을 채우는 것입니다. 예를 들어 다음 XPath 쿼리는 마지막 절 제외 하 고 동일 합니다. 수량 특성이 1로 설정 있고 두 번째 쿼리는 제품 특성이 있는 요소에 대 한 &quot;Contoso&quot;로 설정 하는 모든 요소에 대 한 첫 번째 쿼리): ```   &quot;/s12:Envelope/s12:Body/PurchaseOrder/Items/Item[@quantity = 1]&quot;   &quot;/s12:Envelope/s12:Body/PurchaseOrder/Items/Item[@product = &quot;Contoso&quot;]&quot;   ``` 는 <xref:System.ServiceModel.Dispatcher.MessageQueryCollection>클래스를 사용 하면 약간, 보다 효율적인 처리가 가능만 다른 쿼리 테이블을 만들 수 있습니다.</xref:System.ServiceModel.Dispatcher.MessageQueryCollection>       사용할 수 있습니다는 <xref:System.ServiceModel.Dispatcher.MessageQueryTable%601>클래스를 저장 하 고 메시지 쿼리를 평가 합니다.</xref:System.ServiceModel.Dispatcher.MessageQueryTable%601>"
  example:
  - "The following example creates a message and XPath message queries. The queries are evaluated by the <xref:System.ServiceModel.XPathMessageQuery> objects contained in an <xref:System.ServiceModel.Dispatcher.XPathMessageQueryCollection> object. The results of each query are tested using the <xref:System.ServiceModel.Dispatcher.XPathResult.ResultType%2A> property of the <xref:System.ServiceModel.Dispatcher.XPathResult> class.  \n  \n [!code-vb[XPathMessageQuery#0](~/add/codesnippet/visualbasic/t-system.servicemodel.di_8_1.vb)]\n [!code-cs[XPathMessageQuery#0](~/add/codesnippet/csharp/t-system.servicemodel.di_8_1.cs)]"
  syntax:
    content: public abstract class MessageQuery
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.MessageQuery.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Dispatcher.MessageQuery
  langs:
  - csharp
  name: MessageQuery()
  nameWithType: MessageQuery.MessageQuery()
  fullName: System.ServiceModel.Dispatcher.MessageQuery.MessageQuery()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.ServiceModel.Dispatcher.MessageQuery&quot;> </xref> 클래스입니다."
  syntax:
    content: protected MessageQuery ();
    parameters: []
  overload: System.ServiceModel.Dispatcher.MessageQuery.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.MessageQuery.CreateMessageQueryCollection
  id: CreateMessageQueryCollection
  parent: System.ServiceModel.Dispatcher.MessageQuery
  langs:
  - csharp
  name: CreateMessageQueryCollection()
  nameWithType: MessageQuery.CreateMessageQueryCollection()
  fullName: System.ServiceModel.Dispatcher.MessageQuery.CreateMessageQueryCollection()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "특정 유형의 연결 된 데이터를 반환 하는 쿼리의 컬렉션을 만듭니다."
  remarks: "이 메서드를 사용 하는 <xref:System.ServiceModel.Dispatcher.MessageQueryCollection>클래스</xref:System.ServiceModel.Dispatcher.MessageQueryCollection> 에서 사용할"
  syntax:
    content: public virtual System.ServiceModel.Dispatcher.MessageQueryCollection CreateMessageQueryCollection ();
    parameters: []
    return:
      type: System.ServiceModel.Dispatcher.MessageQueryCollection
      description: "<xref href=&quot;System.ServiceModel.Dispatcher.MessageQueryCollection&quot;></xref>데이터 형식과 연결 된 쿼리 컬렉션입니다."
  overload: System.ServiceModel.Dispatcher.MessageQuery.CreateMessageQueryCollection*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.MessageQuery.Evaluate``1(System.ServiceModel.Channels.Message)
  id: Evaluate``1(System.ServiceModel.Channels.Message)
  parent: System.ServiceModel.Dispatcher.MessageQuery
  langs:
  - csharp
  name: Evaluate(Message)
  nameWithType: MessageQuery.Evaluate(Message)
  fullName: System.ServiceModel.Dispatcher.MessageQuery.Evaluate(Message)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  syntax:
    content: public abstract TResult Evaluate<TResult> (System.ServiceModel.Channels.Message message);
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "추가할 수 있습니다."
    return:
      type: TResult
      description: "추가할 수 있습니다."
  overload: System.ServiceModel.Dispatcher.MessageQuery.Evaluate<TResult>*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.MessageQuery.Evaluate``1(System.ServiceModel.Channels.MessageBuffer)
  id: Evaluate``1(System.ServiceModel.Channels.MessageBuffer)
  parent: System.ServiceModel.Dispatcher.MessageQuery
  langs:
  - csharp
  name: Evaluate(MessageBuffer)
  nameWithType: MessageQuery.Evaluate(MessageBuffer)
  fullName: System.ServiceModel.Dispatcher.MessageQuery.Evaluate(MessageBuffer)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  syntax:
    content: public abstract TResult Evaluate<TResult> (System.ServiceModel.Channels.MessageBuffer buffer);
    parameters:
    - id: buffer
      type: System.ServiceModel.Channels.MessageBuffer
      description: "추가할 수 있습니다."
    return:
      type: TResult
      description: "추가할 수 있습니다."
  overload: System.ServiceModel.Dispatcher.MessageQuery.Evaluate<TResult>*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ServiceModel.Dispatcher.MessageQuery.#ctor
  parent: System.ServiceModel.Dispatcher.MessageQuery
  isExternal: false
  name: MessageQuery()
  nameWithType: MessageQuery.MessageQuery()
  fullName: System.ServiceModel.Dispatcher.MessageQuery.MessageQuery()
- uid: System.ServiceModel.Dispatcher.MessageQuery.CreateMessageQueryCollection
  parent: System.ServiceModel.Dispatcher.MessageQuery
  isExternal: false
  name: CreateMessageQueryCollection()
  nameWithType: MessageQuery.CreateMessageQueryCollection()
  fullName: System.ServiceModel.Dispatcher.MessageQuery.CreateMessageQueryCollection()
- uid: System.ServiceModel.Dispatcher.MessageQueryCollection
  parent: System.ServiceModel.Dispatcher
  isExternal: false
  name: MessageQueryCollection
  nameWithType: MessageQueryCollection
  fullName: System.ServiceModel.Dispatcher.MessageQueryCollection
- uid: System.ServiceModel.Dispatcher.MessageQuery.Evaluate``1(System.ServiceModel.Channels.Message)
  parent: System.ServiceModel.Dispatcher.MessageQuery
  isExternal: false
  name: Evaluate(Message)
  nameWithType: MessageQuery.Evaluate(Message)
  fullName: System.ServiceModel.Dispatcher.MessageQuery.Evaluate(Message)
- uid: TResult
  isExternal: true
  name: TResult
  nameWithType: TResult
  fullName: TResult
- uid: System.ServiceModel.Channels.Message
  parent: System.ServiceModel.Channels
  isExternal: true
  name: Message
  nameWithType: Message
  fullName: System.ServiceModel.Channels.Message
- uid: System.ServiceModel.Dispatcher.MessageQuery.Evaluate``1(System.ServiceModel.Channels.MessageBuffer)
  parent: System.ServiceModel.Dispatcher.MessageQuery
  isExternal: false
  name: Evaluate(MessageBuffer)
  nameWithType: MessageQuery.Evaluate(MessageBuffer)
  fullName: System.ServiceModel.Dispatcher.MessageQuery.Evaluate(MessageBuffer)
- uid: System.ServiceModel.Channels.MessageBuffer
  parent: System.ServiceModel.Channels
  isExternal: true
  name: MessageBuffer
  nameWithType: MessageBuffer
  fullName: System.ServiceModel.Channels.MessageBuffer
- uid: System.ServiceModel.Dispatcher.MessageQuery.#ctor*
  parent: System.ServiceModel.Dispatcher.MessageQuery
  isExternal: false
  name: MessageQuery
  nameWithType: MessageQuery.MessageQuery
- uid: System.ServiceModel.Dispatcher.MessageQuery.CreateMessageQueryCollection*
  parent: System.ServiceModel.Dispatcher.MessageQuery
  isExternal: false
  name: CreateMessageQueryCollection
  nameWithType: MessageQuery.CreateMessageQueryCollection
- uid: System.ServiceModel.Dispatcher.MessageQuery.Evaluate<TResult>*
  parent: System.ServiceModel.Dispatcher.MessageQuery
  isExternal: false
  name: Evaluate<TResult>
  nameWithType: MessageQuery.Evaluate<TResult>
