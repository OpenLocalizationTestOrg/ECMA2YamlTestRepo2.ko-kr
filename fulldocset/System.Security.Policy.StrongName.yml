### YamlMime:ManagedReference
items:
- uid: System.Security.Policy.StrongName
  id: StrongName
  children:
  - System.Security.Policy.StrongName.#ctor(System.Security.Permissions.StrongNamePublicKeyBlob,System.String,System.Version)
  - System.Security.Policy.StrongName.Clone
  - System.Security.Policy.StrongName.Copy
  - System.Security.Policy.StrongName.CreateIdentityPermission(System.Security.Policy.Evidence)
  - System.Security.Policy.StrongName.Equals(System.Object)
  - System.Security.Policy.StrongName.GetHashCode
  - System.Security.Policy.StrongName.Name
  - System.Security.Policy.StrongName.PublicKey
  - System.Security.Policy.StrongName.ToString
  - System.Security.Policy.StrongName.Version
  langs:
  - csharp
  name: StrongName
  nameWithType: StrongName
  fullName: System.Security.Policy.StrongName
  type: Class
  summary: "정책 평가 대 한 증명 정보로는 코드 어셈블리의 강력한 이름을 제공합니다. 이 클래스는 상속 될 수 없습니다."
  remarks: "StrongName 클래스는 코드 어셈블리의 고유 하 고 암호화 된 강력한 이름의 증거를 나타냅니다. 강력한 이름 공개 키, 지정 된 이름 및 버전 구성 됩니다. 공개 키는 비밀을 유지 하 고 있는 어셈블리가 강력한 이름이 유효 하려면 서명 해야 합니다는 게시자의 개인 키에 해당 합니다.       일반적으로 하나를 사용 하 여 어셈블리에 할당 된 강력한 이름을 <xref:System.Reflection.AssemblyKeyFileAttribute>, <xref:System.Reflection.AssemblyKeyNameAttribute>또는 <xref:System.Reflection.AssemblyDelaySignAttribute>SN 유틸리티와 함께에서 (참조 [Sn.exe (강력한 이름 도구)](~/add/includes/ajax-current-ext-md.md)).</xref:System.Reflection.AssemblyDelaySignAttribute> </xref:System.Reflection.AssemblyKeyNameAttribute> </xref:System.Reflection.AssemblyKeyFileAttribute>       <xref:System.Security.Permissions.StrongNameIdentityPermission>이 클래스를 사용 하 여 특정 강력한 이름의 코드 어셈블리에서 코드 호출 되어 있는지 확인 합니다.</xref:System.Security.Permissions.StrongNameIdentityPermission>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class StrongName : System.Security.Policy.EvidenceBase, System.Security.Policy.IIdentityPermissionFactory
  inheritance:
  - System.Object
  - System.Security.Policy.EvidenceBase
  implements:
  - System.Security.Policy.IIdentityPermissionFactory
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Policy.StrongName.#ctor(System.Security.Permissions.StrongNamePublicKeyBlob,System.String,System.Version)
  id: '#ctor(System.Security.Permissions.StrongNamePublicKeyBlob,System.String,System.Version)'
  parent: System.Security.Policy.StrongName
  langs:
  - csharp
  name: StrongName(StrongNamePublicKeyBlob,String,Version)
  nameWithType: StrongName.StrongName(StrongNamePublicKeyBlob,String,Version)
  fullName: System.Security.Policy.StrongName.StrongName(StrongNamePublicKeyBlob,String,Version)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Security.Policy.StrongName&quot;> </xref> 강력한 이름 공개 키 blob, 이름 및 버전을 사용 하 여 클래스입니다."
  remarks: "`name` 매개 변수 수 `null`, 빈 문자열일 수 없습니다 것은 아니지만 (&quot;&quot;).       강력한 이름에 대 한 자세한 내용은 <xref:System.Security.Permissions.StrongNameIdentityPermission>및 <xref:System.Security.Permissions.StrongNamePublicKeyBlob>.</xref:System.Security.Permissions.StrongNamePublicKeyBlob> </xref:System.Security.Permissions.StrongNameIdentityPermission> 를 참조 하십시오."
  syntax:
    content: public StrongName (System.Security.Permissions.StrongNamePublicKeyBlob blob, string name, Version version);
    parameters:
    - id: blob
      type: System.Security.Permissions.StrongNamePublicKeyBlob
      description: "<xref href=&quot;System.Security.Permissions.StrongNamePublicKeyBlob&quot;> </xref> 소프트웨어 게시자입니다."
    - id: name
      type: System.String
      description: "강력한 이름의 단순한 이름 부분입니다."
    - id: version
      type: System.Version
      description: "<xref:System.Version>강력한 이름의.</xref:System.Version>"
  overload: System.Security.Policy.StrongName.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>blob</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       The <code>version</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> name </code> 매개 변수는 빈 문자열 (&quot;&quot;)."
  platform:
  - net462
- uid: System.Security.Policy.StrongName.Clone
  id: Clone
  parent: System.Security.Policy.StrongName
  langs:
  - csharp
  name: Clone()
  nameWithType: StrongName.Clone()
  fullName: System.Security.Policy.StrongName.Clone()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "현재 인스턴스의 복사본 인 새 개체를 만듭니다."
  syntax:
    content: public override System.Security.Policy.EvidenceBase Clone ();
    parameters: []
    return:
      type: System.Security.Policy.EvidenceBase
      description: "이 인스턴스의 복사본 인 새 개체입니다."
  overload: System.Security.Policy.StrongName.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.StrongName.Copy
  id: Copy
  parent: System.Security.Policy.StrongName
  langs:
  - csharp
  name: Copy()
  nameWithType: StrongName.Copy()
  fullName: System.Security.Policy.StrongName.Copy()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "현재의 동일한 복사본을 만듭니다 <xref href=&quot;System.Security.Policy.StrongName&quot;> </xref>합니다."
  syntax:
    content: public object Copy ();
    parameters: []
    return:
      type: System.Object
      description: "현재 동일한 새 복사본 <xref href=&quot;System.Security.Policy.StrongName&quot;> </xref>합니다."
  overload: System.Security.Policy.StrongName.Copy*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.StrongName.CreateIdentityPermission(System.Security.Policy.Evidence)
  id: CreateIdentityPermission(System.Security.Policy.Evidence)
  parent: System.Security.Policy.StrongName
  langs:
  - csharp
  name: CreateIdentityPermission(Evidence)
  nameWithType: StrongName.CreateIdentityPermission(Evidence)
  fullName: System.Security.Policy.StrongName.CreateIdentityPermission(Evidence)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "만듭니다는 <xref href=&quot;System.Security.Permissions.StrongNameIdentityPermission&quot;> </xref> 현재에 해당 하는 <xref href=&quot;System.Security.Policy.StrongName&quot;> </xref>합니다."
  remarks: "있는지 여부를 호출 하는 코드를 특정 강력한 이름은 코드 어셈블리를 확인 하려면 강력한 이름에 대 한 id 권한을 사용할 수 있습니다."
  syntax:
    content: public System.Security.IPermission CreateIdentityPermission (System.Security.Policy.Evidence evidence);
    parameters:
    - id: evidence
      type: System.Security.Policy.Evidence
      description: "<xref href=&quot;System.Security.Policy.Evidence&quot;> </xref> 를 생성할는 <xref href=&quot;System.Security.Permissions.StrongNameIdentityPermission&quot;> </xref>합니다."
    return:
      type: System.Security.IPermission
      description: "A <xref href=&quot;System.Security.Permissions.StrongNameIdentityPermission&quot;> </xref> 지정 된 <xref href=&quot;System.Security.Policy.StrongName&quot;> </xref>합니다."
  overload: System.Security.Policy.StrongName.CreateIdentityPermission*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.StrongName.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Security.Policy.StrongName
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: StrongName.Equals(Object)
  fullName: System.Security.Policy.StrongName.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "지정 된 강력한 이름의 현재 강력한 이름과 같은지 여부를 결정 합니다."
  syntax:
    content: public override bool Equals (object o);
    parameters:
    - id: o
      type: System.Object
      description: "현재 강력한 이름에 대해 비교할 강력한 이름입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>지정된 된 강력한 이름이 같으면 현재 강력한 이름입니다. 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Security.Policy.StrongName.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.StrongName.GetHashCode
  id: GetHashCode
  parent: System.Security.Policy.StrongName
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: StrongName.GetHashCode()
  fullName: System.Security.Policy.StrongName.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "현재의 해시 코드를 가져옵니다 <xref href=&quot;System.Security.Policy.StrongName&quot;> </xref>합니다."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "현재의 해시 코드 <xref href=&quot;System.Security.Policy.StrongName&quot;> </xref>합니다."
  overload: System.Security.Policy.StrongName.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.StrongName.Name
  id: Name
  parent: System.Security.Policy.StrongName
  langs:
  - csharp
  name: Name
  nameWithType: StrongName.Name
  fullName: System.Security.Policy.StrongName.Name
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "현재의 단순한 이름을 가져옵니다 <xref href=&quot;System.Security.Policy.StrongName&quot;> </xref>합니다."
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "단순 이름 부분에서 <xref href=&quot;System.Security.Policy.StrongName&quot;> </xref>합니다."
  overload: System.Security.Policy.StrongName.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.StrongName.PublicKey
  id: PublicKey
  parent: System.Security.Policy.StrongName
  langs:
  - csharp
  name: PublicKey
  nameWithType: StrongName.PublicKey
  fullName: System.Security.Policy.StrongName.PublicKey
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "가져옵니다는 <xref href=&quot;System.Security.Permissions.StrongNamePublicKeyBlob&quot;> </xref> 현재 <xref href=&quot;System.Security.Policy.StrongName&quot;> </xref>합니다."
  remarks: "Blob은 소프트웨어 게시자의 공개 키를 고유 하 게 지정 하는 암호화 정보.       Blob 인증서 한다는 점에서 다릅니다 blob만에 대 한 정보가 공개 키입니다. 인증서에 키와 소유자의 이름을 연결 하는 정보 뿐만 아니라 인증서를 확인 하는 정보가 포함 됩니다."
  syntax:
    content: public System.Security.Permissions.StrongNamePublicKeyBlob PublicKey { get; }
    return:
      type: System.Security.Permissions.StrongNamePublicKeyBlob
      description: "The <xref href=&quot;System.Security.Permissions.StrongNamePublicKeyBlob&quot;></xref> of the current <xref href=&quot;System.Security.Policy.StrongName&quot;></xref>."
  overload: System.Security.Policy.StrongName.PublicKey*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.StrongName.ToString
  id: ToString
  parent: System.Security.Policy.StrongName
  langs:
  - csharp
  name: ToString()
  nameWithType: StrongName.ToString()
  fullName: System.Security.Policy.StrongName.ToString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "현재 문자열 표현을 만듭니다 <xref href=&quot;System.Security.Policy.StrongName&quot;> </xref>합니다."
  remarks: "이 메서드는 개체의 읽기 쉬운 표현을 가져오는 디버깅 중에 유용 합니다."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "현재 표현 <xref href=&quot;System.Security.Policy.StrongName&quot;> </xref>합니다."
  overload: System.Security.Policy.StrongName.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.StrongName.Version
  id: Version
  parent: System.Security.Policy.StrongName
  langs:
  - csharp
  name: Version
  nameWithType: StrongName.Version
  fullName: System.Security.Policy.StrongName.Version
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "가져옵니다는 <xref:System.Version>현재 <xref href=&quot;System.Security.Policy.StrongName&quot;> </xref>.</xref:System.Version>"
  syntax:
    content: public Version Version { get; }
    return:
      type: System.Version
      description: "<xref:System.Version>현재 <xref href=&quot;System.Security.Policy.StrongName&quot;> </xref>.</xref:System.Version>"
  overload: System.Security.Policy.StrongName.Version*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Policy.EvidenceBase
  isExternal: false
  name: System.Security.Policy.EvidenceBase
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Security.Policy.StrongName.#ctor(System.Security.Permissions.StrongNamePublicKeyBlob,System.String,System.Version)
  parent: System.Security.Policy.StrongName
  isExternal: false
  name: StrongName(StrongNamePublicKeyBlob,String,Version)
  nameWithType: StrongName.StrongName(StrongNamePublicKeyBlob,String,Version)
  fullName: System.Security.Policy.StrongName.StrongName(StrongNamePublicKeyBlob,String,Version)
- uid: System.Security.Permissions.StrongNamePublicKeyBlob
  parent: System.Security.Permissions
  isExternal: false
  name: StrongNamePublicKeyBlob
  nameWithType: StrongNamePublicKeyBlob
  fullName: System.Security.Permissions.StrongNamePublicKeyBlob
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Version
  parent: System
  isExternal: true
  name: Version
  nameWithType: Version
  fullName: System.Version
- uid: System.Security.Policy.StrongName.Clone
  parent: System.Security.Policy.StrongName
  isExternal: false
  name: Clone()
  nameWithType: StrongName.Clone()
  fullName: System.Security.Policy.StrongName.Clone()
- uid: System.Security.Policy.StrongName.Copy
  parent: System.Security.Policy.StrongName
  isExternal: false
  name: Copy()
  nameWithType: StrongName.Copy()
  fullName: System.Security.Policy.StrongName.Copy()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Security.Policy.StrongName.CreateIdentityPermission(System.Security.Policy.Evidence)
  parent: System.Security.Policy.StrongName
  isExternal: false
  name: CreateIdentityPermission(Evidence)
  nameWithType: StrongName.CreateIdentityPermission(Evidence)
  fullName: System.Security.Policy.StrongName.CreateIdentityPermission(Evidence)
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Security.Policy.Evidence
  parent: System.Security.Policy
  isExternal: false
  name: Evidence
  nameWithType: Evidence
  fullName: System.Security.Policy.Evidence
- uid: System.Security.Policy.StrongName.Equals(System.Object)
  parent: System.Security.Policy.StrongName
  isExternal: false
  name: Equals(Object)
  nameWithType: StrongName.Equals(Object)
  fullName: System.Security.Policy.StrongName.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Policy.StrongName.GetHashCode
  parent: System.Security.Policy.StrongName
  isExternal: false
  name: GetHashCode()
  nameWithType: StrongName.GetHashCode()
  fullName: System.Security.Policy.StrongName.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Policy.StrongName.Name
  parent: System.Security.Policy.StrongName
  isExternal: false
  name: Name
  nameWithType: StrongName.Name
  fullName: System.Security.Policy.StrongName.Name
- uid: System.Security.Policy.StrongName.PublicKey
  parent: System.Security.Policy.StrongName
  isExternal: false
  name: PublicKey
  nameWithType: StrongName.PublicKey
  fullName: System.Security.Policy.StrongName.PublicKey
- uid: System.Security.Policy.StrongName.ToString
  parent: System.Security.Policy.StrongName
  isExternal: false
  name: ToString()
  nameWithType: StrongName.ToString()
  fullName: System.Security.Policy.StrongName.ToString()
- uid: System.Security.Policy.StrongName.Version
  parent: System.Security.Policy.StrongName
  isExternal: false
  name: Version
  nameWithType: StrongName.Version
  fullName: System.Security.Policy.StrongName.Version
- uid: System.Security.Policy.StrongName.#ctor*
  parent: System.Security.Policy.StrongName
  isExternal: false
  name: StrongName
  nameWithType: StrongName.StrongName
- uid: System.Security.Policy.StrongName.Clone*
  parent: System.Security.Policy.StrongName
  isExternal: false
  name: Clone
  nameWithType: StrongName.Clone
- uid: System.Security.Policy.StrongName.Copy*
  parent: System.Security.Policy.StrongName
  isExternal: false
  name: Copy
  nameWithType: StrongName.Copy
- uid: System.Security.Policy.StrongName.CreateIdentityPermission*
  parent: System.Security.Policy.StrongName
  isExternal: false
  name: CreateIdentityPermission
  nameWithType: StrongName.CreateIdentityPermission
- uid: System.Security.Policy.StrongName.Equals*
  parent: System.Security.Policy.StrongName
  isExternal: false
  name: Equals
  nameWithType: StrongName.Equals
- uid: System.Security.Policy.StrongName.GetHashCode*
  parent: System.Security.Policy.StrongName
  isExternal: false
  name: GetHashCode
  nameWithType: StrongName.GetHashCode
- uid: System.Security.Policy.StrongName.Name*
  parent: System.Security.Policy.StrongName
  isExternal: false
  name: Name
  nameWithType: StrongName.Name
- uid: System.Security.Policy.StrongName.PublicKey*
  parent: System.Security.Policy.StrongName
  isExternal: false
  name: PublicKey
  nameWithType: StrongName.PublicKey
- uid: System.Security.Policy.StrongName.ToString*
  parent: System.Security.Policy.StrongName
  isExternal: false
  name: ToString
  nameWithType: StrongName.ToString
- uid: System.Security.Policy.StrongName.Version*
  parent: System.Security.Policy.StrongName
  isExternal: false
  name: Version
  nameWithType: StrongName.Version
