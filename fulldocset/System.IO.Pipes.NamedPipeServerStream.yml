### YamlMime:ManagedReference
items:
- uid: System.IO.Pipes.NamedPipeServerStream
  id: NamedPipeServerStream
  children:
  - System.IO.Pipes.NamedPipeServerStream.#ctor(System.String)
  - System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection)
  - System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32)
  - System.IO.Pipes.NamedPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.Boolean,System.Boolean,Microsoft.Win32.SafeHandles.SafePipeHandle)
  - System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode)
  - System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions)
  - System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions,System.Int32,System.Int32)
  - System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions,System.Int32,System.Int32,System.IO.Pipes.PipeSecurity)
  - System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions,System.Int32,System.Int32,System.IO.Pipes.PipeSecurity,System.IO.HandleInheritability)
  - System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions,System.Int32,System.Int32,System.IO.Pipes.PipeSecurity,System.IO.HandleInheritability,System.IO.Pipes.PipeAccessRights)
  - System.IO.Pipes.NamedPipeServerStream.BeginWaitForConnection(System.AsyncCallback,System.Object)
  - System.IO.Pipes.NamedPipeServerStream.Disconnect
  - System.IO.Pipes.NamedPipeServerStream.EndWaitForConnection(System.IAsyncResult)
  - System.IO.Pipes.NamedPipeServerStream.Finalize
  - System.IO.Pipes.NamedPipeServerStream.GetImpersonationUserName
  - System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances
  - System.IO.Pipes.NamedPipeServerStream.RunAsClient(System.IO.Pipes.PipeStreamImpersonationWorker)
  - System.IO.Pipes.NamedPipeServerStream.WaitForConnection
  - System.IO.Pipes.NamedPipeServerStream.WaitForConnectionAsync
  - System.IO.Pipes.NamedPipeServerStream.WaitForConnectionAsync(System.Threading.CancellationToken)
  langs:
  - csharp
  name: NamedPipeServerStream
  nameWithType: NamedPipeServerStream
  fullName: System.IO.Pipes.NamedPipeServerStream
  type: Class
  summary: "노출 된 <xref:System.IO.Stream>읽기 / 쓰기 작업 둘 다 동기 및 비동기 지원 하 명명된 된 파이프 주위의.</xref:System.IO.Stream>"
  remarks: "명명 된 파이프 파이프 서버와 하나 이상의 파이프 클라이언트 간의 통신에 대 한 단방향 또는 이중 파이프를 제공합니다. 로컬 또는 네트워크를 통해 명명 된 파이프를 프로세스 간 통신에 사용할 수 있습니다. 여러 하나의 파이프 이름을 공유할 수 <xref:System.IO.Pipes.NamedPipeClientStream>개체입니다.</xref:System.IO.Pipes.NamedPipeClientStream>       모든 프로세스는 명명된 된 파이프 서버 또는 클라이언트 또는 둘 다로 작동할 수 있습니다.      > [!NOTE] >에 대 한 [!INCLUDE[winxppro](~/add/includes/winxppro-md.md)] 및 [!INCLUDE[win2kserver](~/add/includes/win2kserver-md.md)], 최대 10 개의 파이프는 네트워크를 통해 동시에 연결할 수 있습니다."
  example:
  - "The following example demonstrates a way to send a string from a parent process to a child process on the same computer using named pipes. This example creates a NamedPipeServerStream object in a parent process with a <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection>. The server then waits for a <xref:System.IO.Pipes.NamedPipeClientStream> object in a child process to connect to it. In this example, both processes are on the same computer and the <xref:System.IO.Pipes.NamedPipeClientStream> object has a <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection>. The parent process then sends a user-supplied string to the child process. The string is displayed to the console.  \n  \n This example is for the server process, which uses the NamedPipeServerStream class. For the entire code example, including the code for both the pipe client and server, see [How to: Use Named Pipes for Network Interprocess Communication](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.IO.Pipes.NamedPipeServerStream_Sample1#01](~/add/codesnippet/visualbasic/t-system.io.pipes.namedp_0_1.vb)]\n [!code-cs[System.IO.Pipes.NamedPipeServerStream_Sample1#01](~/add/codesnippet/csharp/t-system.io.pipes.namedp_0_1.cs)]"
  syntax:
    content: 'public sealed class NamedPipeServerStream : System.IO.Pipes.PipeStream'
  inheritance:
  - System.IO.Stream
  - System.IO.Pipes.PipeStream
  implements: []
  inheritedMembers:
  - System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.IO.Pipes.PipeStream.CanRead
  - System.IO.Pipes.PipeStream.CanSeek
  - System.IO.Pipes.PipeStream.CanWrite
  - System.IO.Pipes.PipeStream.CheckPipePropertyOperations
  - System.IO.Pipes.PipeStream.CheckReadOperations
  - System.IO.Pipes.PipeStream.CheckWriteOperations
  - System.IO.Pipes.PipeStream.Dispose(System.Boolean)
  - System.IO.Pipes.PipeStream.EndRead(System.IAsyncResult)
  - System.IO.Pipes.PipeStream.EndWrite(System.IAsyncResult)
  - System.IO.Pipes.PipeStream.Flush
  - System.IO.Pipes.PipeStream.GetAccessControl
  - System.IO.Pipes.PipeStream.InBufferSize
  - System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)
  - System.IO.Pipes.PipeStream.IsAsync
  - System.IO.Pipes.PipeStream.IsConnected
  - System.IO.Pipes.PipeStream.IsHandleExposed
  - System.IO.Pipes.PipeStream.IsMessageComplete
  - System.IO.Pipes.PipeStream.Length
  - System.IO.Pipes.PipeStream.OutBufferSize
  - System.IO.Pipes.PipeStream.Position
  - System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)
  - System.IO.Pipes.PipeStream.ReadByte
  - System.IO.Pipes.PipeStream.ReadMode
  - System.IO.Pipes.PipeStream.SafePipeHandle
  - System.IO.Pipes.PipeStream.Seek(System.Int64,System.IO.SeekOrigin)
  - System.IO.Pipes.PipeStream.SetAccessControl(System.IO.Pipes.PipeSecurity)
  - System.IO.Pipes.PipeStream.SetLength(System.Int64)
  - System.IO.Pipes.PipeStream.TransmissionMode
  - System.IO.Pipes.PipeStream.WaitForPipeDrain
  - System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)
  - System.IO.Pipes.PipeStream.WriteByte(System.Byte)
  platform:
  - net462
- uid: System.IO.Pipes.NamedPipeServerStream.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.IO.Pipes.NamedPipeServerStream
  langs:
  - csharp
  name: NamedPipeServerStream(String)
  nameWithType: NamedPipeServerStream.NamedPipeServerStream(String)
  fullName: System.IO.Pipes.NamedPipeServerStream.NamedPipeServerStream(String)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.IO.Pipes.NamedPipeServerStream&quot;> </xref> 지정 된 파이프 이름 사용 합니다."
  remarks: "이 생성자는 <xref:System.IO.Pipes.NamedPipeServerStream>다음과 같은 특징이 있는 개체:- <xref:System.IO.Pipes.PipeDirection>안내 하십시오.</xref:System.IO.Pipes.PipeDirection> 기본 파이프 방향</xref:System.IO.Pipes.NamedPipeServerStream>      -동일한 이름을 공유 하는 서버 인스턴스의 최대 수는 1로 설정 합니다.      - <xref:System.IO.Pipes.PipeTransmissionMode> <xref:System.IO.Pipes.PipeTransmissionMode>안내 하십시오.</xref:System.IO.Pipes.PipeTransmissionMode> 값</xref:System.IO.Pipes.PipeTransmissionMode>      - <xref:System.IO.Pipes.PipeOptions> <xref:System.IO.Pipes.PipeOptions>안내 하십시오.</xref:System.IO.Pipes.PipeOptions> 값</xref:System.IO.Pipes.PipeOptions>      -기본 입력 및 출력 버퍼 크기를 사용 합니다.      -파이프 보안 합니다.      - <xref:System.IO.HandleInheritability> <xref:System.IO.HandleInheritability>안내 하십시오.</xref:System.IO.HandleInheritability> 값</xref:System.IO.HandleInheritability>      -지정 된 추가 <xref:System.IO.Pipes.PipeAccessRights>.</xref:System.IO.Pipes.PipeAccessRights>"
  syntax:
    content: public NamedPipeServerStream (string pipeName);
    parameters:
    - id: pipeName
      type: System.String
      description: "파이프의 이름입니다."
  overload: System.IO.Pipes.NamedPipeServerStream.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pipeName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>pipeName</code>빈 문자열입니다."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>pipeName</code>&quot;anonymous&quot;로 설정 합니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>pipeName</code>콜론 (&quot;:&quot;)."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "운영 체제가 Windows Millennium Edition, Windows 98 또는 Windows 95 지원 되지 않는 경우"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "서버 인스턴스의 최대 수를 초과 했습니다."
  platform:
  - net462
- uid: System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection)
  id: '#ctor(System.String,System.IO.Pipes.PipeDirection)'
  parent: System.IO.Pipes.NamedPipeServerStream
  langs:
  - csharp
  name: NamedPipeServerStream(String,PipeDirection)
  nameWithType: NamedPipeServerStream.NamedPipeServerStream(String,PipeDirection)
  fullName: System.IO.Pipes.NamedPipeServerStream.NamedPipeServerStream(String,PipeDirection)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.IO.Pipes.NamedPipeServerStream&quot;> </xref> 된 지정 된 파이프 이름과 파이프 방향입니다."
  remarks: "이 생성자는 <xref:System.IO.Pipes.NamedPipeServerStream>다음과 같은 특징이 있는 개체:- <xref:System.IO.Pipes.PipeTransmissionMode> <xref:System.IO.Pipes.PipeTransmissionMode>안내 하십시오.</xref:System.IO.Pipes.PipeTransmissionMode> 값</xref:System.IO.Pipes.PipeTransmissionMode> </xref:System.IO.Pipes.NamedPipeServerStream>      - <xref:System.IO.Pipes.PipeOptions> <xref:System.IO.Pipes.PipeOptions>안내 하십시오.</xref:System.IO.Pipes.PipeOptions> 값</xref:System.IO.Pipes.PipeOptions>      -기본 입력 및 출력 버퍼 크기를 사용 합니다.      -파이프 보안 합니다.      - <xref:System.IO.HandleInheritability> <xref:System.IO.HandleInheritability>안내 하십시오.</xref:System.IO.HandleInheritability> 값</xref:System.IO.HandleInheritability>      -지정 된 추가 <xref:System.IO.Pipes.PipeAccessRights>.</xref:System.IO.Pipes.PipeAccessRights>"
  example:
  - "The following example demonstrates a method to send a string from a parent process to a child process using named pipes. This example creates a <xref:System.IO.Pipes.NamedPipeServerStream> object in a parent process. The <xref:System.IO.Pipes.NamedPipeServerStream> object has a <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection>, which then blocks until a <xref:System.IO.Pipes.NamedPipeClientStream> object establishes a connection to the current <xref:System.IO.Pipes.NamedPipeServerStream> object.  \n  \n [!code-vb[System.IO.Pipes.NamedPipeServerStream_Sample1#01](~/add/codesnippet/visualbasic/d64b6168-a553-4879-8047-_1.vb)]\n [!code-cs[System.IO.Pipes.NamedPipeServerStream_Sample1#01](~/add/codesnippet/csharp/d64b6168-a553-4879-8047-_1.cs)]"
  syntax:
    content: public NamedPipeServerStream (string pipeName, System.IO.Pipes.PipeDirection direction);
    parameters:
    - id: pipeName
      type: System.String
      description: "파이프의 이름입니다."
    - id: direction
      type: System.IO.Pipes.PipeDirection
      description: "파이프의 방향을 결정 하는 열거형 값 중 하나입니다."
  overload: System.IO.Pipes.NamedPipeServerStream.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pipeName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>pipeName</code>빈 문자열입니다."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>pipeName</code>&quot;anonymous&quot;로 설정 합니다.       -또는- <code>direction</code> 유효 하지 않거나 <xref href=&quot;System.IO.Pipes.PipeDirection&quot;> </xref> 값입니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>pipeName</code>콜론 (&quot;:&quot;)."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "운영 체제가 Windows Millennium Edition, Windows 98 또는 Windows 95 지원 되지 않는 경우"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "서버 인스턴스의 최대 수를 초과 했습니다."
  platform:
  - net462
- uid: System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32)
  id: '#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32)'
  parent: System.IO.Pipes.NamedPipeServerStream
  langs:
  - csharp
  name: NamedPipeServerStream(String,PipeDirection,Int32)
  nameWithType: NamedPipeServerStream.NamedPipeServerStream(String,PipeDirection,Int32)
  fullName: System.IO.Pipes.NamedPipeServerStream.NamedPipeServerStream(String,PipeDirection,Int32)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.IO.Pipes.NamedPipeServerStream&quot;> </xref> 된 지정 된 파이프 이름, 파이프 방향 및 서버 인스턴스의 최대 수입니다."
  remarks: "이 생성자를 만듭니다는 <xref:System.IO.Pipes.NamedPipeServerStream>다음과 같은 특징이 있는 개체:-기본값인 같은 이름을 공유 하는 서버 인스턴스의 최대 수는 1.</xref:System.IO.Pipes.NamedPipeServerStream>      -기본 <xref:System.IO.Pipes.PipeTransmissionMode> <xref:System.IO.Pipes.PipeTransmissionMode>안내 하십시오.</xref:System.IO.Pipes.PipeTransmissionMode> 값</xref:System.IO.Pipes.PipeTransmissionMode>      - <xref:System.IO.Pipes.PipeOptions> <xref:System.IO.Pipes.PipeOptions>안내 하십시오.</xref:System.IO.Pipes.PipeOptions> 값</xref:System.IO.Pipes.PipeOptions>      -기본 입력 및 출력 버퍼 크기를 사용 합니다.      -파이프 보안 합니다.      - <xref:System.IO.HandleInheritability> <xref:System.IO.HandleInheritability>안내 하십시오.</xref:System.IO.HandleInheritability> 값</xref:System.IO.HandleInheritability>      -지정 된 추가 <xref:System.IO.Pipes.PipeAccessRights>.</xref:System.IO.Pipes.PipeAccessRights>"
  syntax:
    content: public NamedPipeServerStream (string pipeName, System.IO.Pipes.PipeDirection direction, int maxNumberOfServerInstances);
    parameters:
    - id: pipeName
      type: System.String
      description: "파이프의 이름입니다."
    - id: direction
      type: System.IO.Pipes.PipeDirection
      description: "파이프의 방향을 결정 하는 열거형 값 중 하나입니다."
    - id: maxNumberOfServerInstances
      type: System.Int32
      description: "같은 이름을 공유 하는 서버 인스턴스의 최대 수입니다. 전달할 수 <xref href=&quot;System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances&quot;> </xref> 이 값에 대 한 합니다."
  overload: System.IO.Pipes.NamedPipeServerStream.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pipeName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>pipeName</code>빈 문자열입니다."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>pipeName</code>&quot;anonymous&quot;로 설정 합니다.       -또는- <code>direction</code> 유효 하지 않거나 <xref href=&quot;System.IO.Pipes.PipeDirection&quot;> </xref> 값입니다.       -또는-음수가 아닌 숫자가 필요 합니다.       -또는- <code>maxNumberofServerInstances</code> 가-1 보다 작거나 254 보다 큰 (나타내는-1 <xref href=&quot;System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances&quot;> </xref>)-또는- <xref:System.IO.HandleInheritability> 또는 <xref:System.IO.HandleInheritability> 가 필요 합니다.       -또는-액세스 권한으로 제한 됩니다.는 <xref href=&quot;System.IO.Pipes.PipeAccessRights&quot;> </xref> , <xref href=&quot;System.IO.Pipes.PipeAccessRights&quot;> </xref> , 및 <xref href=&quot;System.IO.Pipes.PipeAccessRights&quot;> </xref> 플래그입니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>pipeName</code>콜론 (&quot;:&quot;)."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "운영 체제가 Windows Millennium Edition, Windows 98 또는 Windows 95 지원 되지 않는 경우"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "서버 인스턴스의 최대 수를 초과 했습니다."
  platform:
  - net462
- uid: System.IO.Pipes.NamedPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.Boolean,System.Boolean,Microsoft.Win32.SafeHandles.SafePipeHandle)
  id: '#ctor(System.IO.Pipes.PipeDirection,System.Boolean,System.Boolean,Microsoft.Win32.SafeHandles.SafePipeHandle)'
  parent: System.IO.Pipes.NamedPipeServerStream
  langs:
  - csharp
  name: NamedPipeServerStream(PipeDirection,Boolean,Boolean,SafePipeHandle)
  nameWithType: NamedPipeServerStream.NamedPipeServerStream(PipeDirection,Boolean,Boolean,SafePipeHandle)
  fullName: System.IO.Pipes.NamedPipeServerStream.NamedPipeServerStream(PipeDirection,Boolean,Boolean,SafePipeHandle)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.IO.Pipes.NamedPipeServerStream&quot;> </xref> 지정된 된 파이프 핸들에서 클래스입니다."
  syntax:
    content: public NamedPipeServerStream (System.IO.Pipes.PipeDirection direction, bool isAsync, bool isConnected, Microsoft.Win32.SafeHandles.SafePipeHandle safePipeHandle);
    parameters:
    - id: direction
      type: System.IO.Pipes.PipeDirection
      description: "파이프의 방향을 결정 하는 열거형 값 중 하나입니다."
    - id: isAsync
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>핸들이 비동기적으로 열렸으면 나타내기 위해 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
    - id: isConnected
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>파이프가; 연결을 나타내기 위해 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
    - id: safePipeHandle
      type: Microsoft.Win32.SafeHandles.SafePipeHandle
      description: "이 파이프에 대 한 안전 하 게 처리 <xref href=&quot;System.IO.Pipes.NamedPipeServerStream&quot;> </xref> 개체가 캡슐화 됩니다."
  overload: System.IO.Pipes.NamedPipeServerStream.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>direction</code>유효 하지 않거나 <xref href=&quot;System.IO.Pipes.PipeDirection&quot;> </xref> 값입니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>safePipeHandle</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>safePipeHandle</code>잘못 된 핸들이입니다."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>safePipeHandle</code>유효한 파이프 핸들이 아닙니다.       -또는-서버 인스턴스의 최대 수를 초과 했습니다."
  platform:
  - net462
- uid: System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode)
  id: '#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode)'
  parent: System.IO.Pipes.NamedPipeServerStream
  langs:
  - csharp
  name: NamedPipeServerStream(String,PipeDirection,Int32,PipeTransmissionMode)
  nameWithType: NamedPipeServerStream.NamedPipeServerStream(String,PipeDirection,Int32,PipeTransmissionMode)
  fullName: System.IO.Pipes.NamedPipeServerStream.NamedPipeServerStream(String,PipeDirection,Int32,PipeTransmissionMode)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.IO.Pipes.NamedPipeServerStream&quot;> </xref> 된 지정 된 파이프 이름, 파이프 방향, 서버 인스턴스 및 전송 모드의 최대 수입니다."
  remarks: "이 생성자는 <xref:System.IO.Pipes.NamedPipeServerStream>다음과 같은 특징이 있는 개체:-A <xref:System.IO.Pipes.PipeOptions> <xref:System.IO.Pipes.PipeOptions>안내 하십시오.</xref:System.IO.Pipes.PipeOptions> </xref:System.IO.Pipes.PipeOptions> 기본값</xref:System.IO.Pipes.NamedPipeServerStream>      -기본 입력 및 출력 버퍼 크기를 사용 합니다.      -파이프 보안 합니다.      - <xref:System.IO.HandleInheritability> <xref:System.IO.HandleInheritability>안내 하십시오.</xref:System.IO.HandleInheritability> 값</xref:System.IO.HandleInheritability>      -지정 된 추가 <xref:System.IO.Pipes.PipeAccessRights>.</xref:System.IO.Pipes.PipeAccessRights>"
  syntax:
    content: public NamedPipeServerStream (string pipeName, System.IO.Pipes.PipeDirection direction, int maxNumberOfServerInstances, System.IO.Pipes.PipeTransmissionMode transmissionMode);
    parameters:
    - id: pipeName
      type: System.String
      description: "파이프의 이름입니다."
    - id: direction
      type: System.IO.Pipes.PipeDirection
      description: "파이프의 방향을 결정 하는 열거형 값 중 하나입니다."
    - id: maxNumberOfServerInstances
      type: System.Int32
      description: "같은 이름을 공유 하는 서버 인스턴스의 최대 수입니다. 전달할 수 <xref href=&quot;System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances&quot;> </xref> 이 값에 대 한 합니다."
    - id: transmissionMode
      type: System.IO.Pipes.PipeTransmissionMode
      description: "파이프의 전송 모드를 결정 하는 열거형 값 중 하나입니다."
  overload: System.IO.Pipes.NamedPipeServerStream.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pipeName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>pipeName</code>빈 문자열입니다."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>pipeName</code>&quot;anonymous&quot;로 설정 합니다.       -또는- <code>direction</code> 유효 하지 않거나 <xref href=&quot;System.IO.Pipes.PipeDirection&quot;> </xref> 값입니다.       -또는- <code>maxNumberofServerInstances</code> 가-1 보다 작거나 254 보다 큰 (나타내는-1 <xref href=&quot;System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances&quot;> </xref>)"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>pipeName</code>콜론 (&quot;:&quot;)."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "운영 체제가 Windows Millennium Edition, Windows 98 또는 Windows 95 지원 되지 않는 경우"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "서버 인스턴스의 최대 수를 초과 했습니다."
  platform:
  - net462
- uid: System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions)
  id: '#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions)'
  parent: System.IO.Pipes.NamedPipeServerStream
  langs:
  - csharp
  name: NamedPipeServerStream(String,PipeDirection,Int32,PipeTransmissionMode,PipeOptions)
  nameWithType: NamedPipeServerStream.NamedPipeServerStream(String,PipeDirection,Int32,PipeTransmissionMode,PipeOptions)
  fullName: System.IO.Pipes.NamedPipeServerStream.NamedPipeServerStream(String,PipeDirection,Int32,PipeTransmissionMode,PipeOptions)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.IO.Pipes.NamedPipeServerStream&quot;> </xref> 된 지정 된 파이프 이름, 파이프 방향, 서버 인스턴스, 전송 모드 및 파이프 옵션의 최대 수입니다."
  remarks: "이 생성자는 <xref:System.IO.Pipes.NamedPipeServerStream>다음과 같은 특징이 있는 개체:-기본 입력 및 출력 버퍼 크기입니다.</xref:System.IO.Pipes.NamedPipeServerStream>      -파이프 보안 합니다.      - <xref:System.IO.HandleInheritability> <xref:System.IO.HandleInheritability>안내 하십시오.</xref:System.IO.HandleInheritability> 값</xref:System.IO.HandleInheritability>      -지정 된 추가 <xref:System.IO.Pipes.PipeAccessRights>.</xref:System.IO.Pipes.PipeAccessRights>"
  syntax:
    content: public NamedPipeServerStream (string pipeName, System.IO.Pipes.PipeDirection direction, int maxNumberOfServerInstances, System.IO.Pipes.PipeTransmissionMode transmissionMode, System.IO.Pipes.PipeOptions options);
    parameters:
    - id: pipeName
      type: System.String
      description: "파이프의 이름입니다."
    - id: direction
      type: System.IO.Pipes.PipeDirection
      description: "파이프의 방향을 결정 하는 열거형 값 중 하나입니다."
    - id: maxNumberOfServerInstances
      type: System.Int32
      description: "같은 이름을 공유 하는 서버 인스턴스의 최대 수입니다. 전달할 수 <xref href=&quot;System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances&quot;> </xref> 이 값에 대 한 합니다."
    - id: transmissionMode
      type: System.IO.Pipes.PipeTransmissionMode
      description: "파이프의 전송 모드를 결정 하는 열거형 값 중 하나입니다."
    - id: options
      type: System.IO.Pipes.PipeOptions
      description: "열거나 파이프를 만드는 방법을 결정 하는 열거형 값 중 하나입니다."
  overload: System.IO.Pipes.NamedPipeServerStream.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pipeName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>pipeName</code>빈 문자열입니다."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>pipeName</code>&quot;anonymous&quot;로 설정 합니다.       -또는- <code>direction</code> 유효 하지 않거나 <xref href=&quot;System.IO.Pipes.PipeDirection&quot;> </xref> 값입니다.       -또는- <code>maxNumberofServerInstances</code> 가-1 보다 작거나 254 보다 큰 (나타내는-1 <xref href=&quot;System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances&quot;> </xref>)-또는- <code>options</code> 유효 하지 않거나 <xref href=&quot;System.IO.Pipes.PipeOptions&quot;> </xref> 값입니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>pipeName</code>콜론 (&quot;:&quot;)."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "운영 체제가 Windows Millennium Edition, Windows 98 또는 Windows 95 지원 되지 않는 경우"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "서버 인스턴스의 최대 수를 초과 했습니다."
  platform:
  - net462
- uid: System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions,System.Int32,System.Int32)
  id: '#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions,System.Int32,System.Int32)'
  parent: System.IO.Pipes.NamedPipeServerStream
  langs:
  - csharp
  name: NamedPipeServerStream(String,PipeDirection,Int32,PipeTransmissionMode,PipeOptions,Int32,Int32)
  nameWithType: NamedPipeServerStream.NamedPipeServerStream(String,PipeDirection,Int32,PipeTransmissionMode,PipeOptions,Int32,Int32)
  fullName: System.IO.Pipes.NamedPipeServerStream.NamedPipeServerStream(String,PipeDirection,Int32,PipeTransmissionMode,PipeOptions,Int32,Int32)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.IO.Pipes.NamedPipeServerStream&quot;> </xref> 된 지정 된 파이프 이름, 파이프 방향, 최대 서버 인스턴스, 전송 모드, 파이프 옵션의 수 및 버퍼 크기 입출력 권장 합니다."
  remarks: "이 생성자는 만듭니다는 <xref:System.IO.Pipes.NamedPipeServerStream>다음과 같은 특징이 있는 개체: 더 추가-파이프 보안.</xref:System.IO.Pipes.NamedPipeServerStream>      -기본 <xref:System.IO.HandleInheritability> <xref:System.IO.HandleInheritability>안내 하십시오.</xref:System.IO.HandleInheritability> 값</xref:System.IO.HandleInheritability>      -지정 된 추가 <xref:System.IO.Pipes.PipeAccessRights>.</xref:System.IO.Pipes.PipeAccessRights>"
  syntax:
    content: public NamedPipeServerStream (string pipeName, System.IO.Pipes.PipeDirection direction, int maxNumberOfServerInstances, System.IO.Pipes.PipeTransmissionMode transmissionMode, System.IO.Pipes.PipeOptions options, int inBufferSize, int outBufferSize);
    parameters:
    - id: pipeName
      type: System.String
      description: "파이프의 이름입니다."
    - id: direction
      type: System.IO.Pipes.PipeDirection
      description: "파이프의 방향을 결정 하는 열거형 값 중 하나입니다."
    - id: maxNumberOfServerInstances
      type: System.Int32
      description: "같은 이름을 공유 하는 서버 인스턴스의 최대 수입니다. 전달할 수 <xref href=&quot;System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances&quot;> </xref> 이 값에 대 한 합니다."
    - id: transmissionMode
      type: System.IO.Pipes.PipeTransmissionMode
      description: "파이프의 전송 모드를 결정 하는 열거형 값 중 하나입니다."
    - id: options
      type: System.IO.Pipes.PipeOptions
      description: "열거나 파이프를 만드는 방법을 결정 하는 열거형 값 중 하나입니다."
    - id: inBufferSize
      type: System.Int32
      description: "입력된 버퍼 크기를 나타내는 0 보다 큰 양의 값입니다."
    - id: outBufferSize
      type: System.Int32
      description: "출력 버퍼 크기를 나타내는 0 보다 큰 양의 값입니다."
  overload: System.IO.Pipes.NamedPipeServerStream.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pipeName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>pipeName</code>빈 문자열입니다."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>pipeName</code>&quot;anonymous&quot;로 설정 합니다.       -또는- <code>direction</code> 유효 하지 않거나 <xref href=&quot;System.IO.Pipes.PipeDirection&quot;> </xref> 값입니다.       -또는- <code>maxNumberofServerInstances</code> 가-1 보다 작거나 254 보다 큰 (나타내는-1 <xref href=&quot;System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances&quot;> </xref>)-또는- <code>options</code> 유효 하지 않거나 <xref href=&quot;System.IO.Pipes.PipeOptions&quot;> </xref> 값입니다.       -또는- <code>inBufferSize</code> 음수입니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>pipeName</code>콜론 (&quot;:&quot;)."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "운영 체제가 Windows Millennium Edition, Windows 98 또는 Windows 95 지원 되지 않는 경우"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "서버 인스턴스의 최대 수를 초과 했습니다."
  platform:
  - net462
- uid: System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions,System.Int32,System.Int32,System.IO.Pipes.PipeSecurity)
  id: '#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions,System.Int32,System.Int32,System.IO.Pipes.PipeSecurity)'
  parent: System.IO.Pipes.NamedPipeServerStream
  langs:
  - csharp
  name: NamedPipeServerStream(String,PipeDirection,Int32,PipeTransmissionMode,PipeOptions,Int32,Int32,PipeSecurity)
  nameWithType: NamedPipeServerStream.NamedPipeServerStream(String,PipeDirection,Int32,PipeTransmissionMode,PipeOptions,Int32,Int32,PipeSecurity)
  fullName: System.IO.Pipes.NamedPipeServerStream.NamedPipeServerStream(String,PipeDirection,Int32,PipeTransmissionMode,PipeOptions,Int32,Int32,PipeSecurity)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.IO.Pipes.NamedPipeServerStream&quot;> </xref> 지정 된 파이프를 사용 하 여 클래스 이름, 파이프 방향, 서버 인스턴스의 최대 수 전송 모드, 파이프 옵션, 시작 및 종료 권장 버퍼 크기 및 보안을 파이프 합니다."
  remarks: "이 생성자는 <xref:System.IO.Pipes.NamedPipeServerStream>다음과 같은 특징이 있는 개체:-A <xref:System.IO.HandleInheritability> <xref:System.IO.HandleInheritability>안내 하십시오.</xref:System.IO.HandleInheritability> </xref:System.IO.HandleInheritability> 기본값</xref:System.IO.Pipes.NamedPipeServerStream>      -지정 된 추가 <xref:System.IO.Pipes.PipeAccessRights>.</xref:System.IO.Pipes.PipeAccessRights>"
  syntax:
    content: public NamedPipeServerStream (string pipeName, System.IO.Pipes.PipeDirection direction, int maxNumberOfServerInstances, System.IO.Pipes.PipeTransmissionMode transmissionMode, System.IO.Pipes.PipeOptions options, int inBufferSize, int outBufferSize, System.IO.Pipes.PipeSecurity pipeSecurity);
    parameters:
    - id: pipeName
      type: System.String
      description: "파이프의 이름입니다."
    - id: direction
      type: System.IO.Pipes.PipeDirection
      description: "파이프의 방향을 결정 하는 열거형 값 중 하나입니다."
    - id: maxNumberOfServerInstances
      type: System.Int32
      description: "같은 이름을 공유 하는 서버 인스턴스의 최대 수입니다. 전달할 수 <xref href=&quot;System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances&quot;> </xref> 이 값에 대 한 합니다."
    - id: transmissionMode
      type: System.IO.Pipes.PipeTransmissionMode
      description: "파이프의 전송 모드를 결정 하는 열거형 값 중 하나입니다."
    - id: options
      type: System.IO.Pipes.PipeOptions
      description: "열거나 파이프를 만드는 방법을 결정 하는 열거형 값 중 하나입니다."
    - id: inBufferSize
      type: System.Int32
      description: "입력된 버퍼 크기를 나타내는 0 보다 큰 양의 값입니다."
    - id: outBufferSize
      type: System.Int32
      description: "출력 버퍼 크기를 나타내는 0 보다 큰 양의 값입니다."
    - id: pipeSecurity
      type: System.IO.Pipes.PipeSecurity
      description: "액세스 제어를 결정 하는 개체 및 감사 보안을 파이프 합니다."
  overload: System.IO.Pipes.NamedPipeServerStream.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pipeName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>pipeName</code>빈 문자열입니다."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>pipeName</code>&quot;anonymous&quot;로 설정 합니다.       -또는- <code>direction</code> 유효 하지 않거나 <xref href=&quot;System.IO.Pipes.PipeDirection&quot;> </xref> 값입니다.       -또는- <code>maxNumberofServerInstances</code> 가-1 보다 작거나 254 보다 큰 (나타내는-1 <xref href=&quot;System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances&quot;> </xref>)-또는- <code>options</code> 유효 하지 않거나 <xref href=&quot;System.IO.Pipes.PipeOptions&quot;> </xref> 값입니다.       -또는- <code>inBufferSize</code> 음수입니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>pipeName</code>콜론 (&quot;:&quot;)."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "운영 체제가 Windows Millennium Edition, Windows 98 또는 Windows 95 지원 되지 않는 경우"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "서버 인스턴스의 최대 수를 초과 했습니다."
  platform:
  - net462
- uid: System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions,System.Int32,System.Int32,System.IO.Pipes.PipeSecurity,System.IO.HandleInheritability)
  id: '#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions,System.Int32,System.Int32,System.IO.Pipes.PipeSecurity,System.IO.HandleInheritability)'
  parent: System.IO.Pipes.NamedPipeServerStream
  langs:
  - csharp
  name: NamedPipeServerStream(String,PipeDirection,Int32,PipeTransmissionMode,PipeOptions,Int32,Int32,PipeSecurity,HandleInheritability)
  nameWithType: NamedPipeServerStream.NamedPipeServerStream(String,PipeDirection,Int32,PipeTransmissionMode,PipeOptions,Int32,Int32,PipeSecurity,HandleInheritability)
  fullName: System.IO.Pipes.NamedPipeServerStream.NamedPipeServerStream(String,PipeDirection,Int32,PipeTransmissionMode,PipeOptions,Int32,Int32,PipeSecurity,HandleInheritability)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.IO.Pipes.NamedPipeServerStream&quot;> </xref> 된 지정 된 파이프 이름, 파이프 방향, 서버 인스턴스, 전송 모드, 파이프 옵션, 권장 및 버퍼 크기, 파이프 보안 및 상속 모드 종료 최대 수입니다."
  remarks: "이 생성자 <xref:System.IO.Pipes.NamedPipeServerStream>없는 지정 된 추가 <xref:System.IO.Pipes.PipeAccessRights>.</xref:System.IO.Pipes.PipeAccessRights> 개체</xref:System.IO.Pipes.NamedPipeServerStream> 를 만듭니다."
  syntax:
    content: public NamedPipeServerStream (string pipeName, System.IO.Pipes.PipeDirection direction, int maxNumberOfServerInstances, System.IO.Pipes.PipeTransmissionMode transmissionMode, System.IO.Pipes.PipeOptions options, int inBufferSize, int outBufferSize, System.IO.Pipes.PipeSecurity pipeSecurity, System.IO.HandleInheritability inheritability);
    parameters:
    - id: pipeName
      type: System.String
      description: "파이프의 이름입니다."
    - id: direction
      type: System.IO.Pipes.PipeDirection
      description: "파이프의 방향을 결정 하는 열거형 값 중 하나입니다."
    - id: maxNumberOfServerInstances
      type: System.Int32
      description: "같은 이름을 공유 하는 서버 인스턴스의 최대 수입니다. 전달할 수 <xref href=&quot;System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances&quot;> </xref> 이 값에 대 한 합니다."
    - id: transmissionMode
      type: System.IO.Pipes.PipeTransmissionMode
      description: "파이프의 전송 모드를 결정 하는 열거형 값 중 하나입니다."
    - id: options
      type: System.IO.Pipes.PipeOptions
      description: "열거나 파이프를 만드는 방법을 결정 하는 열거형 값 중 하나입니다."
    - id: inBufferSize
      type: System.Int32
      description: "입력된 버퍼 크기를 나타내는 0 보다 큰 양의 값입니다."
    - id: outBufferSize
      type: System.Int32
      description: "출력 버퍼 크기를 나타내는 0 보다 큰 양의 값입니다."
    - id: pipeSecurity
      type: System.IO.Pipes.PipeSecurity
      description: "액세스 제어를 결정 하는 개체 및 감사 보안을 파이프 합니다."
    - id: inheritability
      type: System.IO.HandleInheritability
      description: "자식 프로세스에 의해 기본 핸들을 상속할 수 있는지 여부를 결정 하는 열거형 값 중 하나입니다."
  overload: System.IO.Pipes.NamedPipeServerStream.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pipeName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>pipeName</code>빈 문자열입니다."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>pipeName</code>&quot;anonymous&quot;로 설정 합니다.       -또는- <code>direction</code> 유효 하지 않거나 <xref href=&quot;System.IO.Pipes.PipeDirection&quot;> </xref> 값입니다.       -또는- <code>maxNumberofServerInstances</code> 가-1 보다 작거나 254 보다 큰 (나타내는-1 <xref href=&quot;System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances&quot;> </xref>)-또는- <code>options</code> 유효 하지 않거나 <xref href=&quot;System.IO.Pipes.PipeOptions&quot;> </xref> 값입니다.       -또는- <code>inBufferSize</code> 음수입니다.       -또는- <code>inheritability</code> 유효 하지 않거나 <xref:System.IO.HandleInheritability> 값입니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>pipeName</code>콜론 (&quot;:&quot;)."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "운영 체제가 Windows Millennium Edition, Windows 98 또는 Windows 95 지원 되지 않는 경우"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "서버 인스턴스의 최대 수를 초과 했습니다."
  platform:
  - net462
- uid: System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions,System.Int32,System.Int32,System.IO.Pipes.PipeSecurity,System.IO.HandleInheritability,System.IO.Pipes.PipeAccessRights)
  id: '#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions,System.Int32,System.Int32,System.IO.Pipes.PipeSecurity,System.IO.HandleInheritability,System.IO.Pipes.PipeAccessRights)'
  parent: System.IO.Pipes.NamedPipeServerStream
  langs:
  - csharp
  name: NamedPipeServerStream(String,PipeDirection,Int32,PipeTransmissionMode,PipeOptions,Int32,Int32,PipeSecurity,HandleInheritability,PipeAccessRights)
  nameWithType: NamedPipeServerStream.NamedPipeServerStream(String,PipeDirection,Int32,PipeTransmissionMode,PipeOptions,Int32,Int32,PipeSecurity,HandleInheritability,PipeAccessRights)
  fullName: System.IO.Pipes.NamedPipeServerStream.NamedPipeServerStream(String,PipeDirection,Int32,PipeTransmissionMode,PipeOptions,Int32,Int32,PipeSecurity,HandleInheritability,PipeAccessRights)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.IO.Pipes.NamedPipeServerStream&quot;> </xref> 지정 된 파이프를 사용 하 여 클래스 이름, 파이프 방향, 서버 인스턴스의 최대 수 전송 모드, 권장 입출력 파이프 옵션, 버퍼 크기, 파이프 보안, 상속 모드 및 액세스 권한을 사용 하는 파이프 합니다."
  syntax:
    content: public NamedPipeServerStream (string pipeName, System.IO.Pipes.PipeDirection direction, int maxNumberOfServerInstances, System.IO.Pipes.PipeTransmissionMode transmissionMode, System.IO.Pipes.PipeOptions options, int inBufferSize, int outBufferSize, System.IO.Pipes.PipeSecurity pipeSecurity, System.IO.HandleInheritability inheritability, System.IO.Pipes.PipeAccessRights additionalAccessRights);
    parameters:
    - id: pipeName
      type: System.String
      description: "파이프의 이름입니다."
    - id: direction
      type: System.IO.Pipes.PipeDirection
      description: "파이프의 방향을 결정 하는 열거형 값 중 하나입니다."
    - id: maxNumberOfServerInstances
      type: System.Int32
      description: "같은 이름을 공유 하는 서버 인스턴스의 최대 수입니다. 전달할 수 <xref href=&quot;System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances&quot;> </xref> 이 값에 대 한 합니다."
    - id: transmissionMode
      type: System.IO.Pipes.PipeTransmissionMode
      description: "파이프의 전송 모드를 결정 하는 열거형 값 중 하나입니다."
    - id: options
      type: System.IO.Pipes.PipeOptions
      description: "열거나 파이프를 만드는 방법을 결정 하는 열거형 값 중 하나입니다."
    - id: inBufferSize
      type: System.Int32
      description: "입력된 버퍼 크기입니다."
    - id: outBufferSize
      type: System.Int32
      description: "출력 버퍼 크기입니다."
    - id: pipeSecurity
      type: System.IO.Pipes.PipeSecurity
      description: "액세스 제어를 결정 하는 개체 및 감사 보안을 파이프 합니다."
    - id: inheritability
      type: System.IO.HandleInheritability
      description: "자식 프로세스에 의해 기본 핸들을 상속할 수 있는지 여부를 결정 하는 열거형 값 중 하나입니다."
    - id: additionalAccessRights
      type: System.IO.Pipes.PipeAccessRights
      description: "파이프의 액세스 권한을 지정 하는 열거형 값 중 하나입니다."
  overload: System.IO.Pipes.NamedPipeServerStream.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pipeName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>pipeName</code>빈 문자열입니다."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>pipeName</code>&quot;anonymous&quot;로 설정 합니다.       -또는- <code>direction</code> 유효 하지 않거나 <xref href=&quot;System.IO.Pipes.PipeDirection&quot;> </xref> 값입니다.       -또는- <code>maxNumberofServerInstances</code> 가-1 보다 작거나 254 보다 큰 (나타내는-1 <xref href=&quot;System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances&quot;> </xref>)-또는- <code>options</code> 유효 하지 않거나 <xref href=&quot;System.IO.Pipes.PipeOptions&quot;> </xref> 값입니다.       -또는- <code>inBufferSize</code> 음수입니다.       -또는- <code>inheritability</code> 유효 하지 않거나 <xref:System.IO.HandleInheritability> 값입니다.       -또는- <code>additionalAccessRights</code> 유효 하지 않거나 <xref href=&quot;System.IO.Pipes.PipeAccessRights&quot;> </xref> 값입니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>pipeName</code>콜론 (&quot;:&quot;)."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "운영 체제가 Windows Millennium Edition, Windows 98 또는 Windows 95 지원 되지 않는 경우"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "서버 인스턴스의 최대 수를 초과 했습니다."
  platform:
  - net462
- uid: System.IO.Pipes.NamedPipeServerStream.BeginWaitForConnection(System.AsyncCallback,System.Object)
  id: BeginWaitForConnection(System.AsyncCallback,System.Object)
  parent: System.IO.Pipes.NamedPipeServerStream
  langs:
  - csharp
  name: BeginWaitForConnection(AsyncCallback,Object)
  nameWithType: NamedPipeServerStream.BeginWaitForConnection(AsyncCallback,Object)
  fullName: System.IO.Pipes.NamedPipeServerStream.BeginWaitForConnection(AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "클라이언트를 연결할 때까지 대기 하는 비동기 작업을 시작 합니다."
  remarks: "이 <xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A>안내 하십시오.</xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A> 비동기       <xref:System.IO.Pipes.NamedPipeServerStream.EndWaitForConnection%2A>BeginWaitForConnection 호출할 때마다 한 번만 호출 되어야 합니다.</xref:System.IO.Pipes.NamedPipeServerStream.EndWaitForConnection%2A>"
  syntax:
    content: public IAsyncResult BeginWaitForConnection (AsyncCallback callback, object state);
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: "클라이언트가 연결할 때 호출할 메서드를는 <xref href=&quot;System.IO.Pipes.NamedPipeServerStream&quot;> </xref> 개체입니다."
    - id: state
      type: System.Object
      description: "이 특정 비동기 요청을 다른 요청과 구별 하는 사용자 제공 개체입니다."
    return:
      type: System.IAsyncResult
      description: "비동기 요청을 참조 하는 개체입니다."
  overload: System.IO.Pipes.NamedPipeServerStream.BeginWaitForConnection*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "파이프는 비동기적으로 열리지 않았습니다.       -또는-파이프 연결이 이미 설정 되었습니다.       -또는-파이프 핸들이 설정 되지 않았습니다."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "파이프 연결이 끊겼습니다."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "파이프가 닫혔습니다."
  platform:
  - net462
- uid: System.IO.Pipes.NamedPipeServerStream.Disconnect
  id: Disconnect
  parent: System.IO.Pipes.NamedPipeServerStream
  langs:
  - csharp
  name: Disconnect()
  nameWithType: NamedPipeServerStream.Disconnect()
  fullName: System.IO.Pipes.NamedPipeServerStream.Disconnect()
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "현재 연결을 끊습니다."
  remarks: "파이프의 전송 모드 설정 되어 있지 않으면 보낸된 모든 문자를 읽었는지 될 때까지 차단 됩니다 Disconnect 메서드를 호출 <xref:System.IO.Pipes.PipeTransmissionMode>생성 하는 생성자를 설정한 버퍼 크기는 <xref:System.IO.Pipes.NamedPipeServerStream>개체.</xref:System.IO.Pipes.NamedPipeServerStream> </xref:System.IO.Pipes.PipeTransmissionMode> 이 경우 모든 메시지가 수신 됩니다. 호출 <xref:System.IO.Pipes.PipeStream.WaitForPipeDrain%2A>하면 서버는를 파이프에서 모든 데이터를 읽을 때까지 차단 됩니다.</xref:System.IO.Pipes.PipeStream.WaitForPipeDrain%2A>"
  syntax:
    content: public void Disconnect ();
    parameters: []
  overload: System.IO.Pipes.NamedPipeServerStream.Disconnect*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "파이프 연결이 내용이 아직 적용 되었습니다.       -또는-이미 연결 된 파이프의 연결이 끊어졌습니다.       -또는-파이프 핸들이 설정 되지 않았습니다."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "파이프가 닫혔습니다."
  platform:
  - net462
- uid: System.IO.Pipes.NamedPipeServerStream.EndWaitForConnection(System.IAsyncResult)
  id: EndWaitForConnection(System.IAsyncResult)
  parent: System.IO.Pipes.NamedPipeServerStream
  langs:
  - csharp
  name: EndWaitForConnection(IAsyncResult)
  nameWithType: NamedPipeServerStream.EndWaitForConnection(IAsyncResult)
  fullName: System.IO.Pipes.NamedPipeServerStream.EndWaitForConnection(IAsyncResult)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "클라이언트를 연결할 때까지 대기 하는 비동기 작업을 종료 합니다."
  remarks: "Endwaitforconnection은 <xref:System.IO.Pipes.NamedPipeServerStream.BeginWaitForConnection%2A>.</xref:System.IO.Pipes.NamedPipeServerStream.BeginWaitForConnection%2A> 를 호출할 때마다 한 번만 호출 해야 합니다."
  syntax:
    content: public void EndWaitForConnection (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "보류 중인 비동기 요청입니다."
  overload: System.IO.Pipes.NamedPipeServerStream.EndWaitForConnection*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>asyncResult</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "파이프는 비동기적으로 열리지 않았습니다.       -또는-파이프 핸들이 설정 되지 않았습니다."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "파이프 연결이 끊겼습니다."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "파이프가 닫혔습니다."
  platform:
  - net462
- uid: System.IO.Pipes.NamedPipeServerStream.Finalize
  id: Finalize
  parent: System.IO.Pipes.NamedPipeServerStream
  langs:
  - csharp
  name: Finalize()
  nameWithType: NamedPipeServerStream.Finalize()
  fullName: System.IO.Pipes.NamedPipeServerStream.Finalize()
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "관리 되지 않는 리소스를 해제 하 고 기타 정리 작업 하기 전에 수행 된 <xref href=&quot;System.IO.Pipes.NamedPipeServerStream&quot;> </xref> 인스턴스 가비지 컬렉션이 회수 합니다."
  syntax:
    content: ~NamedPipeServerStream ();
    parameters: []
  overload: System.IO.Pipes.NamedPipeServerStream.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.NamedPipeServerStream.GetImpersonationUserName
  id: GetImpersonationUserName
  parent: System.IO.Pipes.NamedPipeServerStream
  langs:
  - csharp
  name: GetImpersonationUserName()
  nameWithType: NamedPipeServerStream.GetImpersonationUserName()
  fullName: System.IO.Pipes.NamedPipeServerStream.GetImpersonationUserName()
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "파이프의 다른 끝에 있는 클라이언트의 사용자 이름을 가져옵니다."
  remarks: "GetImpersonationUserName 메서드가 반환 `null` 클라이언트 파이프에 아직 기록 되지 않은 경우 또는 연결 된 클라이언트는 <xref:System.Security.Principal.TokenImpersonationLevel> <xref:System.Security.Principal.TokenImpersonationLevel>안내 하십시오.</xref:System.Security.Principal.TokenImpersonationLevel> </xref:System.Security.Principal.TokenImpersonationLevel> 와 연결 되지 않은 경우"
  example:
  - "The following example demonstrates a method to create a pipe server that can respond to multiple simultaneous client requests, and a method for client impersonation. This example creates a <xref:System.IO.Pipes.NamedPipeServerStream> object in a parent process, which then creates multiple threads that wait for <xref:System.IO.Pipes.NamedPipeClientStream> objects to connect. After a client is connected, it supplies a file name to the server and the contents of that file are read and sent back to the client. Because the <xref:System.IO.Pipes.NamedPipeServerStream> impersonates the client when opening the file, the client can request only files that it has sufficient permissions to open.  \n  \n [!code-cpp[System.IO.Pipes.NamedPipeServerStream_ImpersonationSample1#01](~/add/codesnippet/cpp/m-system.io.pipes.namedp_0_1.cpp)]\n [!code-vb[System.IO.Pipes.NamedPipeServerStream_ImpersonationSample1#01](~/add/codesnippet/visualbasic/m-system.io.pipes.namedp_0_1.vb)]\n [!code-cs[System.IO.Pipes.NamedPipeServerStream_ImpersonationSample1#01](~/add/codesnippet/csharp/m-system.io.pipes.namedp_0_1.cs)]"
  syntax:
    content: public string GetImpersonationUserName ();
    parameters: []
    return:
      type: System.String
      description: "파이프의 다른 끝에 있는 클라이언트의 사용자 이름입니다."
  overload: System.IO.Pipes.NamedPipeServerStream.GetImpersonationUserName*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "파이프 연결이 내용이 아직 적용 되었습니다.       -또는-이미 연결 된 파이프의 연결이 끊어졌습니다.       -또는-파이프 핸들이 설정 되지 않았습니다."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "파이프가 닫혔습니다."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "파이프 연결이 끊겼습니다.       -또는-클라이언트의 사용자 이름을 19 자 보다 깁니다."
  platform:
  - net462
- uid: System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances
  id: MaxAllowedServerInstances
  parent: System.IO.Pipes.NamedPipeServerStream
  langs:
  - csharp
  name: MaxAllowedServerInstances
  nameWithType: NamedPipeServerStream.MaxAllowedServerInstances
  fullName: System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances
  type: Field
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "시스템 리소스가 허용 하는 서버 인스턴스의 최대 수를 나타냅니다."
  remarks: "MaxAllowedServerInstances 만들 때 사용 하 여 한 <xref:System.IO.Pipes.NamedPipeServerStream>시스템 리소스가 허용 하는 서버 인스턴스의 최대 수를 설정 하는 개체입니다.</xref:System.IO.Pipes.NamedPipeServerStream>"
  syntax:
    content: public const int MaxAllowedServerInstances = -1;
    return:
      type: System.Int32
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.NamedPipeServerStream.RunAsClient(System.IO.Pipes.PipeStreamImpersonationWorker)
  id: RunAsClient(System.IO.Pipes.PipeStreamImpersonationWorker)
  parent: System.IO.Pipes.NamedPipeServerStream
  langs:
  - csharp
  name: RunAsClient(PipeStreamImpersonationWorker)
  nameWithType: NamedPipeServerStream.RunAsClient(PipeStreamImpersonationWorker)
  fullName: System.IO.Pipes.NamedPipeServerStream.RunAsClient(PipeStreamImpersonationWorker)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "클라이언트를 가장 하는 동안 대리자를 호출 합니다."
  remarks: "원격 서버에 연결 하는 클라이언트의 사용 권한이 적용 됩니다. 예를 들어 연결 중인 클라이언트에는 서버에 있는 파일의 내용을 요청 하려고 클라이언트 열려는 충분 한 권한이 있는 파일만 요청할 수 있습니다."
  example:
  - "The following example demonstrates a method to create a pipe server that can respond to multiple simultaneous client requests, and a method for client impersonation. This example creates a <xref:System.IO.Pipes.NamedPipeServerStream> object in a parent process, which then creates multiple threads that wait for <xref:System.IO.Pipes.NamedPipeClientStream> objects to connect. After a client is connected, it supplies a file name to the server and the contents of that file are read and sent back to the client. Because the <xref:System.IO.Pipes.NamedPipeServerStream> impersonates the client when opening the file, the client can request only files that it has sufficient permissions to open.  \n  \n [!code-cpp[System.IO.Pipes.NamedPipeServerStream_ImpersonationSample1#01](~/add/codesnippet/cpp/01d52198-2c83-4f39-bef9-_1.cpp)]\n [!code-vb[System.IO.Pipes.NamedPipeServerStream_ImpersonationSample1#01](~/add/codesnippet/visualbasic/01d52198-2c83-4f39-bef9-_1.vb)]\n [!code-cs[System.IO.Pipes.NamedPipeServerStream_ImpersonationSample1#01](~/add/codesnippet/csharp/01d52198-2c83-4f39-bef9-_1.cs)]"
  syntax:
    content: public void RunAsClient (System.IO.Pipes.PipeStreamImpersonationWorker impersonationWorker);
    parameters:
    - id: impersonationWorker
      type: System.IO.Pipes.PipeStreamImpersonationWorker
      description: "호출할 메서드를 지정 하는 대리자입니다."
  overload: System.IO.Pipes.NamedPipeServerStream.RunAsClient*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "파이프 연결이 내용이 아직 적용 되었습니다.       -또는-이미 연결 된 파이프의 연결이 끊어졌습니다.       -또는-파이프 핸들이 설정 되지 않았습니다."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "파이프가 닫혔습니다."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "파이프 연결이 끊겼습니다.       -또는-한 I/O 오류가 발생 했습니다."
  platform:
  - net462
- uid: System.IO.Pipes.NamedPipeServerStream.WaitForConnection
  id: WaitForConnection
  parent: System.IO.Pipes.NamedPipeServerStream
  langs:
  - csharp
  name: WaitForConnection()
  nameWithType: NamedPipeServerStream.WaitForConnection()
  fullName: System.IO.Pipes.NamedPipeServerStream.WaitForConnection()
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "이에 연결 하는 클라이언트에 대 한 대기 <xref href=&quot;System.IO.Pipes.NamedPipeServerStream&quot;> </xref> 개체입니다."
  remarks: "이 메서드를 호출 하면는 <xref:System.IO.Pipes.NamedPipeServerStream>클라이언트가 연결 될 때까지 차단 하는 개체입니다.</xref:System.IO.Pipes.NamedPipeServerStream>"
  example:
  - "The following example demonstrates a method to send a string from a parent process to a child process using named pipes. This example creates a <xref:System.IO.Pipes.NamedPipeServerStream> object in a parent process. This object has a <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection>, which then blocks until a <xref:System.IO.Pipes.NamedPipeClientStream> object establishes a connection to the <xref:System.IO.Pipes.NamedPipeServerStream> object. This example is part of a larger example provided for the <xref:System.IO.Pipes.NamedPipeServerStream> and <xref:System.IO.Pipes.NamedPipeClientStream> classes.  \n  \n [!code-vb[System.IO.Pipes.NamedPipeServerStream_Sample1#01](~/add/codesnippet/visualbasic/m-system.io.pipes.namedp_2_1.vb)]\n [!code-cs[System.IO.Pipes.NamedPipeServerStream_Sample1#01](~/add/codesnippet/csharp/m-system.io.pipes.namedp_2_1.cs)]"
  syntax:
    content: public void WaitForConnection ();
    parameters: []
  overload: System.IO.Pipes.NamedPipeServerStream.WaitForConnection*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "파이프 연결이 이미 설정 되었습니다.       -또는-파이프 핸들이 설정 되지 않았습니다."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "파이프가 닫혔습니다."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "파이프 연결이 끊겼습니다."
  platform:
  - net462
- uid: System.IO.Pipes.NamedPipeServerStream.WaitForConnectionAsync
  id: WaitForConnectionAsync
  parent: System.IO.Pipes.NamedPipeServerStream
  langs:
  - csharp
  name: WaitForConnectionAsync()
  nameWithType: NamedPipeServerStream.WaitForConnectionAsync()
  fullName: System.IO.Pipes.NamedPipeServerStream.WaitForConnectionAsync()
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "이에 연결 하는 클라이언트에 비동기적으로 기다립니다 <xref href=&quot;System.IO.Pipes.NamedPipeServerStream&quot;> </xref> 개체입니다."
  remarks: "비동기 이기 때문에이 메서드가 즉시 반환 하지만, 클라이언트 <xref:System.IO.Pipes.NamedPipeClientStream.Connect%2A>또는 <xref:System.IO.Pipes.NamedPipeClientStream.ConnectAsync%2A>.</xref:System.IO.Pipes.NamedPipeClientStream.ConnectAsync%2A> </xref:System.IO.Pipes.NamedPipeClientStream.Connect%2A> 을 호출할 때 연결 프로세스가 완료 된"
  syntax:
    content: public System.Threading.Tasks.Task WaitForConnectionAsync ();
    parameters: []
    return:
      type: System.Threading.Tasks.Task
      description: "비동기 대기 작업을 나타내는 작업입니다."
  overload: System.IO.Pipes.NamedPipeServerStream.WaitForConnectionAsync*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.NamedPipeServerStream.WaitForConnectionAsync(System.Threading.CancellationToken)
  id: WaitForConnectionAsync(System.Threading.CancellationToken)
  parent: System.IO.Pipes.NamedPipeServerStream
  langs:
  - csharp
  name: WaitForConnectionAsync(CancellationToken)
  nameWithType: NamedPipeServerStream.WaitForConnectionAsync(CancellationToken)
  fullName: System.IO.Pipes.NamedPipeServerStream.WaitForConnectionAsync(CancellationToken)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "이에 연결 하는 클라이언트에 비동기적으로 기다립니다 <xref href=&quot;System.IO.Pipes.NamedPipeServerStream&quot;> </xref> 취소 요청 개체를 모니터링 합니다."
  remarks: "비동기 이기 때문에이 메서드가 즉시 반환 하지만, 클라이언트 <xref:System.IO.Pipes.NamedPipeClientStream.Connect%2A>또는 <xref:System.IO.Pipes.NamedPipeClientStream.ConnectAsync%2A>.</xref:System.IO.Pipes.NamedPipeClientStream.ConnectAsync%2A> </xref:System.IO.Pipes.NamedPipeClientStream.Connect%2A> 을 호출할 때 연결 프로세스가 완료 된       취소 요청을 취소 토큰을 사용 하 여 에서만 작동 하는 경우는 <xref:System.IO.Pipes.NamedPipeServerStream>개체가 파이프 옵션 값으로 만들어진 <xref:System.IO.Pipes.PipeOptions?displayProperty=fullName>취소 WaitForConnectionAsync 메서드가 호출 되기 전에 발생 하는 경우 또는.</xref:System.IO.Pipes.PipeOptions?displayProperty=fullName> </xref:System.IO.Pipes.NamedPipeServerStream>"
  syntax:
    content: public System.Threading.Tasks.Task WaitForConnectionAsync (System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "취소 요청을 모니터링할 토큰입니다."
    return:
      type: System.Threading.Tasks.Task
      description: "비동기 대기 작업을 나타내는 작업입니다."
  overload: System.IO.Pipes.NamedPipeServerStream.WaitForConnectionAsync*
  exceptions: []
  platform:
  - net462
references:
- uid: System.IO.Pipes.PipeStream
  isExternal: false
  name: System.IO.Pipes.PipeStream
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.PlatformNotSupportedException
  isExternal: true
  name: System.PlatformNotSupportedException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.IO.Pipes.NamedPipeServerStream.#ctor(System.String)
  parent: System.IO.Pipes.NamedPipeServerStream
  isExternal: false
  name: NamedPipeServerStream(String)
  nameWithType: NamedPipeServerStream.NamedPipeServerStream(String)
  fullName: System.IO.Pipes.NamedPipeServerStream.NamedPipeServerStream(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection)
  parent: System.IO.Pipes.NamedPipeServerStream
  isExternal: false
  name: NamedPipeServerStream(String,PipeDirection)
  nameWithType: NamedPipeServerStream.NamedPipeServerStream(String,PipeDirection)
  fullName: System.IO.Pipes.NamedPipeServerStream.NamedPipeServerStream(String,PipeDirection)
- uid: System.IO.Pipes.PipeDirection
  parent: System.IO.Pipes
  isExternal: false
  name: PipeDirection
  nameWithType: PipeDirection
  fullName: System.IO.Pipes.PipeDirection
- uid: System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32)
  parent: System.IO.Pipes.NamedPipeServerStream
  isExternal: false
  name: NamedPipeServerStream(String,PipeDirection,Int32)
  nameWithType: NamedPipeServerStream.NamedPipeServerStream(String,PipeDirection,Int32)
  fullName: System.IO.Pipes.NamedPipeServerStream.NamedPipeServerStream(String,PipeDirection,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IO.Pipes.NamedPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.Boolean,System.Boolean,Microsoft.Win32.SafeHandles.SafePipeHandle)
  parent: System.IO.Pipes.NamedPipeServerStream
  isExternal: false
  name: NamedPipeServerStream(PipeDirection,Boolean,Boolean,SafePipeHandle)
  nameWithType: NamedPipeServerStream.NamedPipeServerStream(PipeDirection,Boolean,Boolean,SafePipeHandle)
  fullName: System.IO.Pipes.NamedPipeServerStream.NamedPipeServerStream(PipeDirection,Boolean,Boolean,SafePipeHandle)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Win32.SafeHandles.SafePipeHandle
  parent: Microsoft.Win32.SafeHandles
  isExternal: false
  name: SafePipeHandle
  nameWithType: SafePipeHandle
  fullName: Microsoft.Win32.SafeHandles.SafePipeHandle
- uid: System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode)
  parent: System.IO.Pipes.NamedPipeServerStream
  isExternal: false
  name: NamedPipeServerStream(String,PipeDirection,Int32,PipeTransmissionMode)
  nameWithType: NamedPipeServerStream.NamedPipeServerStream(String,PipeDirection,Int32,PipeTransmissionMode)
  fullName: System.IO.Pipes.NamedPipeServerStream.NamedPipeServerStream(String,PipeDirection,Int32,PipeTransmissionMode)
- uid: System.IO.Pipes.PipeTransmissionMode
  parent: System.IO.Pipes
  isExternal: false
  name: PipeTransmissionMode
  nameWithType: PipeTransmissionMode
  fullName: System.IO.Pipes.PipeTransmissionMode
- uid: System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions)
  parent: System.IO.Pipes.NamedPipeServerStream
  isExternal: false
  name: NamedPipeServerStream(String,PipeDirection,Int32,PipeTransmissionMode,PipeOptions)
  nameWithType: NamedPipeServerStream.NamedPipeServerStream(String,PipeDirection,Int32,PipeTransmissionMode,PipeOptions)
  fullName: System.IO.Pipes.NamedPipeServerStream.NamedPipeServerStream(String,PipeDirection,Int32,PipeTransmissionMode,PipeOptions)
- uid: System.IO.Pipes.PipeOptions
  parent: System.IO.Pipes
  isExternal: false
  name: PipeOptions
  nameWithType: PipeOptions
  fullName: System.IO.Pipes.PipeOptions
- uid: System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions,System.Int32,System.Int32)
  parent: System.IO.Pipes.NamedPipeServerStream
  isExternal: false
  name: NamedPipeServerStream(String,PipeDirection,Int32,PipeTransmissionMode,PipeOptions,Int32,Int32)
  nameWithType: NamedPipeServerStream.NamedPipeServerStream(String,PipeDirection,Int32,PipeTransmissionMode,PipeOptions,Int32,Int32)
  fullName: System.IO.Pipes.NamedPipeServerStream.NamedPipeServerStream(String,PipeDirection,Int32,PipeTransmissionMode,PipeOptions,Int32,Int32)
- uid: System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions,System.Int32,System.Int32,System.IO.Pipes.PipeSecurity)
  parent: System.IO.Pipes.NamedPipeServerStream
  isExternal: false
  name: NamedPipeServerStream(String,PipeDirection,Int32,PipeTransmissionMode,PipeOptions,Int32,Int32,PipeSecurity)
  nameWithType: NamedPipeServerStream.NamedPipeServerStream(String,PipeDirection,Int32,PipeTransmissionMode,PipeOptions,Int32,Int32,PipeSecurity)
  fullName: System.IO.Pipes.NamedPipeServerStream.NamedPipeServerStream(String,PipeDirection,Int32,PipeTransmissionMode,PipeOptions,Int32,Int32,PipeSecurity)
- uid: System.IO.Pipes.PipeSecurity
  parent: System.IO.Pipes
  isExternal: false
  name: PipeSecurity
  nameWithType: PipeSecurity
  fullName: System.IO.Pipes.PipeSecurity
- uid: System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions,System.Int32,System.Int32,System.IO.Pipes.PipeSecurity,System.IO.HandleInheritability)
  parent: System.IO.Pipes.NamedPipeServerStream
  isExternal: false
  name: NamedPipeServerStream(String,PipeDirection,Int32,PipeTransmissionMode,PipeOptions,Int32,Int32,PipeSecurity,HandleInheritability)
  nameWithType: NamedPipeServerStream.NamedPipeServerStream(String,PipeDirection,Int32,PipeTransmissionMode,PipeOptions,Int32,Int32,PipeSecurity,HandleInheritability)
  fullName: System.IO.Pipes.NamedPipeServerStream.NamedPipeServerStream(String,PipeDirection,Int32,PipeTransmissionMode,PipeOptions,Int32,Int32,PipeSecurity,HandleInheritability)
- uid: System.IO.HandleInheritability
  parent: System.IO
  isExternal: true
  name: HandleInheritability
  nameWithType: HandleInheritability
  fullName: System.IO.HandleInheritability
- uid: System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions,System.Int32,System.Int32,System.IO.Pipes.PipeSecurity,System.IO.HandleInheritability,System.IO.Pipes.PipeAccessRights)
  parent: System.IO.Pipes.NamedPipeServerStream
  isExternal: false
  name: NamedPipeServerStream(String,PipeDirection,Int32,PipeTransmissionMode,PipeOptions,Int32,Int32,PipeSecurity,HandleInheritability,PipeAccessRights)
  nameWithType: NamedPipeServerStream.NamedPipeServerStream(String,PipeDirection,Int32,PipeTransmissionMode,PipeOptions,Int32,Int32,PipeSecurity,HandleInheritability,PipeAccessRights)
  fullName: System.IO.Pipes.NamedPipeServerStream.NamedPipeServerStream(String,PipeDirection,Int32,PipeTransmissionMode,PipeOptions,Int32,Int32,PipeSecurity,HandleInheritability,PipeAccessRights)
- uid: System.IO.Pipes.PipeAccessRights
  parent: System.IO.Pipes
  isExternal: false
  name: PipeAccessRights
  nameWithType: PipeAccessRights
  fullName: System.IO.Pipes.PipeAccessRights
- uid: System.IO.Pipes.NamedPipeServerStream.BeginWaitForConnection(System.AsyncCallback,System.Object)
  parent: System.IO.Pipes.NamedPipeServerStream
  isExternal: false
  name: BeginWaitForConnection(AsyncCallback,Object)
  nameWithType: NamedPipeServerStream.BeginWaitForConnection(AsyncCallback,Object)
  fullName: System.IO.Pipes.NamedPipeServerStream.BeginWaitForConnection(AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IO.Pipes.NamedPipeServerStream.Disconnect
  parent: System.IO.Pipes.NamedPipeServerStream
  isExternal: false
  name: Disconnect()
  nameWithType: NamedPipeServerStream.Disconnect()
  fullName: System.IO.Pipes.NamedPipeServerStream.Disconnect()
- uid: System.IO.Pipes.NamedPipeServerStream.EndWaitForConnection(System.IAsyncResult)
  parent: System.IO.Pipes.NamedPipeServerStream
  isExternal: false
  name: EndWaitForConnection(IAsyncResult)
  nameWithType: NamedPipeServerStream.EndWaitForConnection(IAsyncResult)
  fullName: System.IO.Pipes.NamedPipeServerStream.EndWaitForConnection(IAsyncResult)
- uid: System.IO.Pipes.NamedPipeServerStream.Finalize
  parent: System.IO.Pipes.NamedPipeServerStream
  isExternal: false
  name: Finalize()
  nameWithType: NamedPipeServerStream.Finalize()
  fullName: System.IO.Pipes.NamedPipeServerStream.Finalize()
- uid: System.IO.Pipes.NamedPipeServerStream.GetImpersonationUserName
  parent: System.IO.Pipes.NamedPipeServerStream
  isExternal: false
  name: GetImpersonationUserName()
  nameWithType: NamedPipeServerStream.GetImpersonationUserName()
  fullName: System.IO.Pipes.NamedPipeServerStream.GetImpersonationUserName()
- uid: System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances
  parent: System.IO.Pipes.NamedPipeServerStream
  isExternal: false
  name: MaxAllowedServerInstances
  nameWithType: NamedPipeServerStream.MaxAllowedServerInstances
  fullName: System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances
- uid: System.IO.Pipes.NamedPipeServerStream.RunAsClient(System.IO.Pipes.PipeStreamImpersonationWorker)
  parent: System.IO.Pipes.NamedPipeServerStream
  isExternal: false
  name: RunAsClient(PipeStreamImpersonationWorker)
  nameWithType: NamedPipeServerStream.RunAsClient(PipeStreamImpersonationWorker)
  fullName: System.IO.Pipes.NamedPipeServerStream.RunAsClient(PipeStreamImpersonationWorker)
- uid: System.IO.Pipes.PipeStreamImpersonationWorker
  parent: System.IO.Pipes
  isExternal: false
  name: PipeStreamImpersonationWorker
  nameWithType: PipeStreamImpersonationWorker
  fullName: System.IO.Pipes.PipeStreamImpersonationWorker
- uid: System.IO.Pipes.NamedPipeServerStream.WaitForConnection
  parent: System.IO.Pipes.NamedPipeServerStream
  isExternal: false
  name: WaitForConnection()
  nameWithType: NamedPipeServerStream.WaitForConnection()
  fullName: System.IO.Pipes.NamedPipeServerStream.WaitForConnection()
- uid: System.IO.Pipes.NamedPipeServerStream.WaitForConnectionAsync
  parent: System.IO.Pipes.NamedPipeServerStream
  isExternal: false
  name: WaitForConnectionAsync()
  nameWithType: NamedPipeServerStream.WaitForConnectionAsync()
  fullName: System.IO.Pipes.NamedPipeServerStream.WaitForConnectionAsync()
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.IO.Pipes.NamedPipeServerStream.WaitForConnectionAsync(System.Threading.CancellationToken)
  parent: System.IO.Pipes.NamedPipeServerStream
  isExternal: false
  name: WaitForConnectionAsync(CancellationToken)
  nameWithType: NamedPipeServerStream.WaitForConnectionAsync(CancellationToken)
  fullName: System.IO.Pipes.NamedPipeServerStream.WaitForConnectionAsync(CancellationToken)
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.IO.Pipes.NamedPipeServerStream.#ctor*
  parent: System.IO.Pipes.NamedPipeServerStream
  isExternal: false
  name: NamedPipeServerStream
  nameWithType: NamedPipeServerStream.NamedPipeServerStream
- uid: System.IO.Pipes.NamedPipeServerStream.BeginWaitForConnection*
  parent: System.IO.Pipes.NamedPipeServerStream
  isExternal: false
  name: BeginWaitForConnection
  nameWithType: NamedPipeServerStream.BeginWaitForConnection
- uid: System.IO.Pipes.NamedPipeServerStream.Disconnect*
  parent: System.IO.Pipes.NamedPipeServerStream
  isExternal: false
  name: Disconnect
  nameWithType: NamedPipeServerStream.Disconnect
- uid: System.IO.Pipes.NamedPipeServerStream.EndWaitForConnection*
  parent: System.IO.Pipes.NamedPipeServerStream
  isExternal: false
  name: EndWaitForConnection
  nameWithType: NamedPipeServerStream.EndWaitForConnection
- uid: System.IO.Pipes.NamedPipeServerStream.Finalize*
  parent: System.IO.Pipes.NamedPipeServerStream
  isExternal: false
  name: Finalize
  nameWithType: NamedPipeServerStream.Finalize
- uid: System.IO.Pipes.NamedPipeServerStream.GetImpersonationUserName*
  parent: System.IO.Pipes.NamedPipeServerStream
  isExternal: false
  name: GetImpersonationUserName
  nameWithType: NamedPipeServerStream.GetImpersonationUserName
- uid: System.IO.Pipes.NamedPipeServerStream.RunAsClient*
  parent: System.IO.Pipes.NamedPipeServerStream
  isExternal: false
  name: RunAsClient
  nameWithType: NamedPipeServerStream.RunAsClient
- uid: System.IO.Pipes.NamedPipeServerStream.WaitForConnection*
  parent: System.IO.Pipes.NamedPipeServerStream
  isExternal: false
  name: WaitForConnection
  nameWithType: NamedPipeServerStream.WaitForConnection
- uid: System.IO.Pipes.NamedPipeServerStream.WaitForConnectionAsync*
  parent: System.IO.Pipes.NamedPipeServerStream
  isExternal: false
  name: WaitForConnectionAsync
  nameWithType: NamedPipeServerStream.WaitForConnectionAsync
