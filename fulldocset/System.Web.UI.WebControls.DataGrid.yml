### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.DataGrid
  id: DataGrid
  children:
  - System.Web.UI.WebControls.DataGrid.#ctor
  - System.Web.UI.WebControls.DataGrid.AllowCustomPaging
  - System.Web.UI.WebControls.DataGrid.AllowPaging
  - System.Web.UI.WebControls.DataGrid.AllowSorting
  - System.Web.UI.WebControls.DataGrid.AlternatingItemStyle
  - System.Web.UI.WebControls.DataGrid.AutoGenerateColumns
  - System.Web.UI.WebControls.DataGrid.BackImageUrl
  - System.Web.UI.WebControls.DataGrid.CancelCommand
  - System.Web.UI.WebControls.DataGrid.CancelCommandName
  - System.Web.UI.WebControls.DataGrid.Columns
  - System.Web.UI.WebControls.DataGrid.CreateColumnSet(System.Web.UI.WebControls.PagedDataSource,System.Boolean)
  - System.Web.UI.WebControls.DataGrid.CreateControlHierarchy(System.Boolean)
  - System.Web.UI.WebControls.DataGrid.CreateControlStyle
  - System.Web.UI.WebControls.DataGrid.CreateItem(System.Int32,System.Int32,System.Web.UI.WebControls.ListItemType)
  - System.Web.UI.WebControls.DataGrid.CurrentPageIndex
  - System.Web.UI.WebControls.DataGrid.DeleteCommand
  - System.Web.UI.WebControls.DataGrid.DeleteCommandName
  - System.Web.UI.WebControls.DataGrid.EditCommand
  - System.Web.UI.WebControls.DataGrid.EditCommandName
  - System.Web.UI.WebControls.DataGrid.EditItemIndex
  - System.Web.UI.WebControls.DataGrid.EditItemStyle
  - System.Web.UI.WebControls.DataGrid.FooterStyle
  - System.Web.UI.WebControls.DataGrid.HeaderStyle
  - System.Web.UI.WebControls.DataGrid.InitializeItem(System.Web.UI.WebControls.DataGridItem,System.Web.UI.WebControls.DataGridColumn[])
  - System.Web.UI.WebControls.DataGrid.InitializePager(System.Web.UI.WebControls.DataGridItem,System.Int32,System.Web.UI.WebControls.PagedDataSource)
  - System.Web.UI.WebControls.DataGrid.ItemCommand
  - System.Web.UI.WebControls.DataGrid.ItemCreated
  - System.Web.UI.WebControls.DataGrid.ItemDataBound
  - System.Web.UI.WebControls.DataGrid.Items
  - System.Web.UI.WebControls.DataGrid.ItemStyle
  - System.Web.UI.WebControls.DataGrid.LoadViewState(System.Object)
  - System.Web.UI.WebControls.DataGrid.NextPageCommandArgument
  - System.Web.UI.WebControls.DataGrid.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.WebControls.DataGrid.OnCancelCommand(System.Web.UI.WebControls.DataGridCommandEventArgs)
  - System.Web.UI.WebControls.DataGrid.OnDeleteCommand(System.Web.UI.WebControls.DataGridCommandEventArgs)
  - System.Web.UI.WebControls.DataGrid.OnEditCommand(System.Web.UI.WebControls.DataGridCommandEventArgs)
  - System.Web.UI.WebControls.DataGrid.OnItemCommand(System.Web.UI.WebControls.DataGridCommandEventArgs)
  - System.Web.UI.WebControls.DataGrid.OnItemCreated(System.Web.UI.WebControls.DataGridItemEventArgs)
  - System.Web.UI.WebControls.DataGrid.OnItemDataBound(System.Web.UI.WebControls.DataGridItemEventArgs)
  - System.Web.UI.WebControls.DataGrid.OnPageIndexChanged(System.Web.UI.WebControls.DataGridPageChangedEventArgs)
  - System.Web.UI.WebControls.DataGrid.OnSortCommand(System.Web.UI.WebControls.DataGridSortCommandEventArgs)
  - System.Web.UI.WebControls.DataGrid.OnUpdateCommand(System.Web.UI.WebControls.DataGridCommandEventArgs)
  - System.Web.UI.WebControls.DataGrid.PageCommandName
  - System.Web.UI.WebControls.DataGrid.PageCount
  - System.Web.UI.WebControls.DataGrid.PageIndexChanged
  - System.Web.UI.WebControls.DataGrid.PagerStyle
  - System.Web.UI.WebControls.DataGrid.PageSize
  - System.Web.UI.WebControls.DataGrid.PrepareControlHierarchy
  - System.Web.UI.WebControls.DataGrid.PrevPageCommandArgument
  - System.Web.UI.WebControls.DataGrid.SaveViewState
  - System.Web.UI.WebControls.DataGrid.SelectCommandName
  - System.Web.UI.WebControls.DataGrid.SelectedIndex
  - System.Web.UI.WebControls.DataGrid.SelectedItem
  - System.Web.UI.WebControls.DataGrid.SelectedItemStyle
  - System.Web.UI.WebControls.DataGrid.ShowFooter
  - System.Web.UI.WebControls.DataGrid.ShowHeader
  - System.Web.UI.WebControls.DataGrid.SortCommand
  - System.Web.UI.WebControls.DataGrid.SortCommandName
  - System.Web.UI.WebControls.DataGrid.TagKey
  - System.Web.UI.WebControls.DataGrid.TrackViewState
  - System.Web.UI.WebControls.DataGrid.UpdateCommand
  - System.Web.UI.WebControls.DataGrid.UpdateCommandName
  - System.Web.UI.WebControls.DataGrid.VirtualItemCount
  langs:
  - csharp
  name: DataGrid
  nameWithType: DataGrid
  fullName: System.Web.UI.WebControls.DataGrid
  type: Class
  summary: "데이터 바인딩된 테이블의 데이터 소스에서 항목을 표시 하는 목록 컨트롤입니다. DataGrid 컨트롤을 사용 하면 선택, 정렬 및 이러한 항목을 편집할 수 있습니다."
  remarks: "이 항목의:- [소개](#Introduction)      -   [내게 필요한 옵션](#Accessibility)      -   [선언적 구문](#DeclarativeSyntax)           >  [!NOTE] > DataGrid 컨트롤을 사용 하기 전에 고려를 사용 하는 <xref:System.Web.UI.WebControls.GridView>컨트롤을 대신 합니다.</xref:System.Web.UI.WebControls.GridView> <xref:System.Web.UI.WebControls.GridView>.NET Framework 버전 2.0에서에서 도입 된 컨트롤은 DataGrid 컨트롤에.</xref:System.Web.UI.WebControls.GridView>      <a name=&quot;Introduction&quot;></a># # 소개 DataGrid 컨트롤을 사용 하 여 데이터 원본의 필드 테이블의 열으로 표시 합니다. DataGrid 컨트롤의 각 행은 데이터 원본에서 레코드를 나타냅니다. DataGrid 컨트롤에 선택 항목을 편집, 삭제, 페이징 및 정렬을 지원 합니다.      > [!CAUTION] > 악의적인 클라이언트 스크립트가 포함 될 수 있습니다는 사용자 입력을 표시 하려면이 컨트롤을 사용할 수 있습니다. 응용 프로그램에 표시 하기 전에 실행 스크립트, SQL 문 또는 다른 코드에 대 한 클라이언트에서 보낸 모든 정보를 확인 합니다. ASP.NET은 사용자 입력에 있는 스크립트 블록 및 HTML에 있는 입력된 요청 유효성 검사 기능을 제공 합니다. 유효성 검사 서버 컨트롤이 사용자 입력을 평가 하기 위해 제공 됩니다. 자세한 내용은 참조 [유효성 검사 서버 컨트롤 구문](http://msdn.microsoft.com/en-us/96d2c59e-693c-4079-9b53-b3ff0d9e9133)합니다.       열 형식에 따라 컨트롤의 열의 동작을 결정 합니다. 다음 표에서 사용할 수 있는 다양 한 열 형식입니다.      | 열 형식 | 설명 |   |-----------------|-----------------|   | <xref:System.Web.UI.WebControls.BoundColumn>| 데이터 원본의 필드에 바인딩된 열 표시 됩니다.</xref:System.Web.UI.WebControls.BoundColumn> 필드의 각 항목 텍스트로 표시합니다. DataGrid 컨트롤의 기본 열 형식입니다. |   | <xref:System.Web.UI.WebControls.ButtonColumn>| 열에서 각 항목에 대 한 명령 단추를 표시 합니다.</xref:System.Web.UI.WebControls.ButtonColumn> 와 같은 사용자 지정 단추 컨트롤의 열을 만들 수 있습니다 `Add` 또는 `Remove` 단추입니다. |   | <xref:System.Web.UI.WebControls.EditCommandColumn>| 편집을 포함 하는 열이 열에서 각 항목에 대 한 명령을 표시 합니다. |   | <xref:System.Web.UI.WebControls.HyperLinkColumn>| 하이퍼링크 열에서 각 항목의 내용을 표시 합니다.</xref:System.Web.UI.WebControls.HyperLinkColumn> </xref:System.Web.UI.WebControls.EditCommandColumn> 열 내용의 데이터 소스 나 정적 텍스트 필드에 바인딩할 수 있습니다. |   | <xref:System.Web.UI.WebControls.TemplateColumn>| 지정된 된 서식 파일의 열에 각 항목을 표시 합니다.</xref:System.Web.UI.WebControls.TemplateColumn> 열에서 사용자 지정 컨트롤을 제공할 수 있습니다. |       기본적으로는 <xref:System.Web.UI.WebControls.DataGrid.AutoGenerateColumns%2A>속성 `true`, 만듦는 <xref:System.Web.UI.WebControls.BoundColumn>데이터 원본에 있는 각 필드에 대 한 개체입니다.</xref:System.Web.UI.WebControls.BoundColumn> </xref:System.Web.UI.WebControls.DataGrid.AutoGenerateColumns%2A> 그런 다음 각 필드는 각 필드는 데이터 소스에 표시 된 순서 대로 DataGrid 컨트롤의 열으로 렌더링 됩니다.       수동으로 설정 하 여 DataGrid 컨트롤에 표시할 열을 제어할 수 있습니다는 <xref:System.Web.UI.WebControls.DataGrid.AutoGenerateColumns%2A>속성을 `false` 열기 및 닫기 간의 포함 시킬 열 모델별 `<Columns>` 태그.</xref:System.Web.UI.WebControls.DataGrid.AutoGenerateColumns%2A> 지정 된 열에 추가 되는 <xref:System.Web.UI.WebControls.DataGrid.Columns%2A>순서 대로 나열 합니다.</xref:System.Web.UI.WebControls.DataGrid.Columns%2A> 이 옵션을 사용 하면 DataGrid 컨트롤의 열을 프로그래밍 방식으로 제어할 수 있습니다.      > [!NOTE] >는 열이 DataGrid 컨트롤에 표시 되는 순서에 표시 되는 순서에 의해 제어 되는 <xref:System.Web.UI.WebControls.DataGrid.Columns%2A>컬렉션.</xref:System.Web.UI.WebControls.DataGrid.Columns%2A> 열 순서를 조작 하 여 프로그래밍 방식으로 변경할 수 있지만 <xref:System.Web.UI.WebControls.DataGrid.Columns%2A>컬렉션 쉽습니다 표시 순서 대로 열을 나열 합니다.</xref:System.Web.UI.WebControls.DataGrid.Columns%2A>       명시적으로 선언 된 열을 자동으로 생성 된 열과 함께에서 표시할 수 있습니다. 열을 명시적으로 선언 모두 사용 하 여 렌더링 되 먼저 때 자동으로 생성 된 열 뒤 합니다.      > [!NOTE] > 자동으로 생성 된 열에 추가 되지 않습니다는 <xref:System.Web.UI.WebControls.DataGrid.Columns%2A>컬렉션.</xref:System.Web.UI.WebControls.DataGrid.Columns%2A>       DataGrid 컨트롤의 모양 컨트롤의 다른 부분에 대 한 스타일 속성을 설정 하 여 사용자 지정할 수 있습니다. 다음 표에서 다른 스타일 속성을 나열합니다.      | Style 속성 | 설명 |   |--------------------|-----------------|   | <xref:System.Web.UI.WebControls.DataGrid.AlternatingItemStyle%2A>| DataGrid 컨트롤에 있는 대체 항목에 대 한 스타일을 지정 합니다. |   | <xref:System.Web.UI.WebControls.DataGrid.EditItemStyle%2A>| DataGrid 컨트롤에서 편집 중인 항목에 대 한 스타일을 지정 합니다. |   | <xref:System.Web.UI.WebControls.DataGrid.FooterStyle%2A>| DataGrid 컨트롤에 바닥글 섹션에 대 한 스타일을 지정 합니다. |   | <xref:System.Web.UI.WebControls.DataGrid.HeaderStyle%2A>| DataGrid 컨트롤의 헤더 부분에 대 한 스타일을 지정 합니다. |   | <xref:System.Web.UI.WebControls.DataGrid.ItemStyle%2A>| DataGrid 컨트롤의 항목에 대 한 스타일을 지정 합니다. |   | <xref:System.Web.UI.WebControls.DataGrid.PagerStyle%2A>| DataGrid 컨트롤의 페이지 선택 섹션에 대 한 스타일을 지정 합니다. |   | <xref:System.Web.UI.WebControls.DataGrid.SelectedItemStyle%2A>| DataGrid 컨트롤에서 선택한 항목에 대 한 스타일을 지정 합니다. |       표시 하거나 컨트롤의 다른 부분을 숨길 수도 있습니다.</xref:System.Web.UI.WebControls.DataGrid.SelectedItemStyle%2A> </xref:System.Web.UI.WebControls.DataGrid.PagerStyle%2A> </xref:System.Web.UI.WebControls.DataGrid.ItemStyle%2A> </xref:System.Web.UI.WebControls.DataGrid.HeaderStyle%2A> </xref:System.Web.UI.WebControls.DataGrid.FooterStyle%2A> </xref:System.Web.UI.WebControls.DataGrid.EditItemStyle%2A> </xref:System.Web.UI.WebControls.DataGrid.AlternatingItemStyle%2A> 다음 표에서 표시 하거나 숨길 어느 부분을 제어 하는 속성을 나열 합니다.      | 속성 | 설명 |   |--------------|-----------------|   | <xref:System.Web.UI.WebControls.DataGrid.ShowFooter%2A>| DataGrid 컨트롤의 바닥글 구역을 표시 하거나 숨깁니다. |   | <xref:System.Web.UI.WebControls.DataGrid.ShowHeader%2A>| DataGrid 컨트롤의 헤더 구역을 표시 하거나 숨깁니다. |       프로그래밍 방식으로 특성을 추가 하 여 DataGrid 컨트롤의 모양을 제어할 수 있습니다는 `<td>` 및 `<tr>` 브라우저 컨트롤에서 렌더링 되는 태그입니다.</xref:System.Web.UI.WebControls.DataGrid.ShowHeader%2A> </xref:System.Web.UI.WebControls.DataGrid.ShowFooter%2A> 특성에 대 한 이벤트 처리기에서 코드를 제공 하 여 프로그래밍 방식으로 추가할 수 있습니다는 <xref:System.Web.UI.WebControls.DataGrid.OnItemCreated%2A>또는 <xref:System.Web.UI.WebControls.DataGrid.OnItemDataBound%2A>이벤트.</xref:System.Web.UI.WebControls.DataGrid.OnItemDataBound%2A> </xref:System.Web.UI.WebControls.DataGrid.OnItemCreated%2A>       특성을 추가 하는 `<td>` 태그, 먼저는 <xref:System.Web.UI.WebControls.TableCell>특성을 추가 하려는 DataGrid 컨트롤의 셀을 나타내는 개체입니다.</xref:System.Web.UI.WebControls.TableCell> <xref:System.Web.UI.Control.Controls%2A?displayProperty=fullName>에 대 한 컬렉션은 <xref:System.Web.UI.WebControls.DataGridItemEventArgs.Item%2A>의 속성은 <xref:System.Web.UI.WebControls.DataGridItemEventArgs>를 이벤트 처리기에 전달 된 개체에서 원하는 가져오는 데 사용할 수 있습니다 <xref:System.Web.UI.WebControls.TableCell>개체.</xref:System.Web.UI.WebControls.TableCell> </xref:System.Web.UI.WebControls.DataGridItemEventArgs> </xref:System.Web.UI.WebControls.DataGridItemEventArgs.Item%2A> </xref:System.Web.UI.Control.Controls%2A?displayProperty=fullName> 사용할 수 있습니다는 <xref:System.Web.UI.AttributeCollection.Add%2A?displayProperty=fullName>의 메서드는 <xref:System.Web.UI.WebControls.WebControl.Attributes%2A>에 대 한 컬렉션은 <xref:System.Web.UI.WebControls.TableCell>개체 특성을 추가할 수는 `<td>` 태그.</xref:System.Web.UI.WebControls.TableCell> </xref:System.Web.UI.WebControls.WebControl.Attributes%2A> </xref:System.Web.UI.AttributeCollection.Add%2A?displayProperty=fullName>       특성을 추가 하는 `<tr>` 태그, 먼저는 <xref:System.Web.UI.WebControls.DataGridItem>특성을 추가 하려는 DataGrid 컨트롤의 행을 나타내는 개체입니다.</xref:System.Web.UI.WebControls.DataGridItem> <xref:System.Web.UI.WebControls.DataGridItemEventArgs.Item%2A>의 속성은 <xref:System.Web.UI.WebControls.DataGridItemEventArgs>를 이벤트 처리기에 전달 된 개체에서 원하는 가져오는 데 사용할 수 있습니다 <xref:System.Web.UI.WebControls.DataGridItem>개체입니다.</xref:System.Web.UI.WebControls.DataGridItem> </xref:System.Web.UI.WebControls.DataGridItemEventArgs> </xref:System.Web.UI.WebControls.DataGridItemEventArgs.Item%2A> 사용할 수 있습니다는 <xref:System.Web.UI.AttributeCollection.Add%2A?displayProperty=fullName>의 메서드는 <xref:System.Web.UI.WebControls.WebControl.Attributes%2A>에 대 한 컬렉션은 <xref:System.Web.UI.WebControls.DataGridItem>개체 특성을 추가할 수는 `<tr>` 태그.</xref:System.Web.UI.WebControls.DataGridItem> </xref:System.Web.UI.WebControls.WebControl.Attributes%2A> </xref:System.Web.UI.AttributeCollection.Add%2A?displayProperty=fullName>      <a name=&quot;Accessibility&quot;></a># # 내게 필요한 옵션 표준을 준수 하는 태그를 생성 되도록이 컨트롤을 구성 하는 방법에 대 한 정보에 대 한 내게 필요한 옵션 참고 [Visual Studio 및 ASP.NET의 내게 필요한 옵션](~/add/includes/ajax-current-ext-md.md) 및 [ASP.NET 컨트롤 및 내게 필요한 옵션](~/add/includes/ajax-current-ext-md.md)합니다.      <a name=&quot;DeclarativeSyntax&quot;></a># # 선언적 구문```   <asp:DataGrid       AccessKey=&quot;string&quot;       AllowCustomPaging=&quot;True|False&quot;       AllowPaging=&quot;True|False&quot;       AllowSorting=&quot;True|False&quot;       AutoGenerateColumns=&quot;True|False&quot;       BackColor=&quot;color name|#dddddd&quot;       BackImageUrl=&quot;uri&quot;       BorderColor=&quot;color name|#dddddd&quot;       BorderStyle=&quot;NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|           Inset|Outset&quot;       BorderWidth=&quot;size&quot;       Caption=&quot;string&quot;       CaptionAlign=&quot;NotSet|Top|Bottom|Left|Right&quot;       CellPadding=&quot;integer&quot;       CellSpacing=&quot;integer&quot;       CssClass=&quot;string&quot;       DataKeyField=&quot;string&quot;       DataMember=&quot;string&quot;       DataSource=&quot;string&quot;       DataSourceID=&quot;string&quot;       EditItemIndex=&quot;integer&quot;       Enabled=&quot;True|False&quot;       EnableTheming=&quot;True|False&quot;       EnableViewState=&quot;True|False&quot;       Font-Bold=&quot;True|False&quot;       Font-Italic=&quot;True|False&quot;       Font-Names=&quot;string&quot;       Font-Overline=&quot;True|False&quot;       Font-Size=&quot;string|Smaller|Larger|XX-Small|X-Small|Small|Medium|           Large|X-Large|XX-Large&quot;       Font-Strikeout=&quot;True|False&quot;       Font-Underline=&quot;True|False&quot;       ForeColor=&quot;color name|#dddddd&quot;       GridLines=&quot;None|Horizontal|Vertical|Both&quot;       Height=&quot;size&quot;       HorizontalAlign=&quot;NotSet|Left|Center|Right|Justify&quot;       ID=&quot;string&quot;       OnCancelCommand=&quot;CancelCommand event handler&quot;       OnDataBinding=&quot;DataBinding event handler&quot;       OnDeleteCommand=&quot;DeleteCommand event handler&quot;       OnDisposed=&quot;Disposed event handler&quot;       OnEditCommand=&quot;EditCommand event handler&quot;       OnInit=&quot;Init event handler&quot;       OnItemCommand=&quot;ItemCommand event handler&quot;       OnItemCreated=&quot;ItemCreated event handler&quot;       OnItemDataBound=&quot;ItemDataBound event handler&quot;       OnLoad=&quot;Load event handler&quot;       OnPageIndexChanged=&quot;PageIndexChanged event handler&quot;       OnPreRender=&quot;PreRender event handler&quot;       OnSelectedIndexChanged=&quot;SelectedIndexChanged event handler&quot;       OnSortCommand=&quot;SortCommand event handler&quot;       OnUnload=&quot;Unload event handler&quot;       OnUpdateCommand=&quot;UpdateCommand event handler&quot;       PageSize=&quot;integer&quot;       runat=&quot;server&quot;       SelectedIndex=&quot;integer&quot;       ShowFooter=&quot;True|False&quot;       ShowHeader=&quot;True|False&quot;       SkinID=&quot;string&quot;       Style=&quot;string&quot;       TabIndex=&quot;integer&quot;       ToolTip=&quot;string&quot;       UseAccessibleHeader=&quot;True|False&quot;       Visible=&quot;True|False&quot;       Width=&quot;size&quot;   >           <AlternatingItemStyle />           <Columns>                   <asp:BoundColumn                       DataField=&quot;string&quot;                       DataFormatString=&quot;string&quot;                       FooterText=&quot;string&quot;                       HeaderImageUrl=&quot;uri&quot;                       HeaderText=&quot;string&quot;                       ReadOnly=&quot;True|False&quot;                       SortExpression=&quot;string&quot;                       Visible=&quot;True|False&quot;   >                           <FooterStyle />                           <HeaderStyle />                           <ItemStyle />                   </asp:BoundColumn>                   <asp:ButtonColumn                       ButtonType=&quot;LinkButton|PushButton&quot;                       CausesValidation=&quot;True|False&quot;                       CommandName=&quot;string&quot;                       DataTextField=&quot;string&quot;                       DataTextFormatString=&quot;string&quot;                       FooterText=&quot;string&quot;                       HeaderImageUrl=&quot;uri&quot;                       HeaderText=&quot;string&quot;                       SortExpression=&quot;string&quot;                       Text=&quot;string&quot;                       ValidationGroup=&quot;string&quot;                       Visible=&quot;True|False&quot;   >                           <FooterStyle />                           <HeaderStyle />                           <ItemStyle />                   </asp:ButtonColumn>                   <asp:EditCommandColumn                       ButtonType=&quot;LinkButton|PushButton&quot;                       CancelText=&quot;string&quot;                       CausesValidation=&quot;True|False&quot;                       EditText=&quot;string&quot;                       FooterText=&quot;string&quot;                       HeaderImageUrl=&quot;uri&quot;                       HeaderText=&quot;string&quot;                       SortExpression=&quot;string&quot;                       UpdateText=&quot;string&quot;                       ValidationGroup=&quot;string&quot;                       Visible=&quot;True|False&quot;   >                           <FooterStyle />                           <HeaderStyle />                           <ItemStyle />                   </asp:EditCommandColumn>                   <asp:HyperLinkColumn                       DataNavigateUrlField=&quot;string&quot;                       DataNavigateUrlFormatString=&quot;string&quot;                       DataTextField=&quot;string&quot;                       DataTextFormatString=&quot;string&quot;                       FooterText=&quot;string&quot;                       HeaderImageUrl=&quot;uri&quot;                       HeaderText=&quot;string&quot;                       NavigateUrl=&quot;uri&quot;                       SortExpression=&quot;string&quot;                       Target=&quot;string|_blank|_parent|_search|_self|_top&quot;                       Text=&quot;string&quot;                       Visible=&quot;True|False&quot;   >                           <FooterStyle />                           <HeaderStyle />                           <ItemStyle />                   </asp:HyperLinkColumn>                   <asp:TemplateColumn                       FooterText=&quot;string&quot;                       HeaderImageUrl=&quot;uri&quot;                       HeaderText=&quot;string&quot;                       SortExpression=&quot;string&quot;                       Visible=&quot;True|False&quot;   >                               <FooterStyle />                               <HeaderStyle />                               <ItemStyle />                           <EditItemTemplate>                               <!-- child controls -->                           </EditItemTemplate>                           <FooterTemplate>                               <!-- child controls -->                           </FooterTemplate>                           <HeaderTemplate>                               <!-- child controls -->                           </HeaderTemplate>                           <ItemTemplate>                               <!-- child controls -->                           </ItemTemplate>                   </asp:TemplateColumn>           </Columns>           <EditItemStyle />           <FooterStyle />           <HeaderStyle />           <ItemStyle />           <PagerStyle               BackColor=&quot;color name|#dddddd&quot;               BorderColor=&quot;color name|#dddddd&quot;               BorderStyle=&quot;NotSet|None|Dotted|Dashed|Solid|Double|                   Groove|Ridge|Inset|Outset&quot;               BorderWidth=&quot;size&quot;               CssClass=&quot;string&quot;               Font-Bold=&quot;True|False&quot;               Font-Italic=&quot;True|False&quot;               Font-Names=&quot;string&quot;               Font-Overline=&quot;True|False&quot;               Font-Size=&quot;string|Smaller|Larger|XX-Small|X-Small|Small|                   Medium|Large|X-Large|XX-Large&quot;               Font-Strikeout=&quot;True|False&quot;               Font-Underline=&quot;True|False&quot;               ForeColor=&quot;color name|#dddddd&quot;               Height=&quot;size&quot;               HorizontalAlign=&quot;NotSet|Left|Center|Right|Justify&quot;               Mode=&quot;NextPrev|NumericPages&quot;               NextPageText=&quot;string&quot;               OnDisposed=&quot;Disposed event handler&quot;               PageButtonCount=&quot;integer&quot;               Position=&quot;Bottom|Top|TopAndBottom&quot;               PrevPageText=&quot;string&quot;               VerticalAlign=&quot;NotSet|Top|Middle|Bottom&quot;               Visible=&quot;True|False&quot;               Width=&quot;size&quot;               Wrap=&quot;True|False&quot;           />           <SelectedItemStyle />   </asp:DataGrid>   ```"
  example:
  - "A Visual Studio Web site project with source code is available to accompany this topic: [Download](http://code.msdn.microsoft.com/Project/Download/FileDownload.aspx?ProjectName=aspnetmsdnexamples&DownloadId=11217).  \n  \n The following code example demonstrates how to use the DataGrid control to display the items in the data source.  \n  \n [!code-cs[Classic DataGrid Example 2#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_162_1.aspx)]\n [!code-vb[Classic DataGrid Example 2#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_162_1.aspx)]  \n  \n The following code example demonstrates how to use the DataGrid control for a simple shopping cart.  \n  \n [!code-vb[Classic DataGrid Example 2#2](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_162_2.aspx)]\n [!code-cs[Classic DataGrid Example 2#2](~/add/codesnippet/csharp/t-system.web.ui.webcontr_162_2.aspx)]  \n  \n The following code example demonstrates how to dynamically add attributes to the `<td>` and `<tr>` tags generated by the DataGrid control.  \n  \n [!code-cs[DataGridTrTdTags#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_162_3.aspx)]\n [!code-vb[DataGridTrTdTags#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_162_3.aspx)]  \n  \n [!code-vb[DataGridExample#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_162_4.aspx)]\n [!code-cs[DataGridExample#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_162_4.aspx)]"
  syntax:
    content: >-
      [System.ComponentModel.Designer("System.Web.UI.Design.WebControls.DataGridDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.ComponentModel.Editor("System.Web.UI.Design.WebControls.DataGridComponentEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.ComponentModel.ComponentEditor))]

      public class DataGrid : System.Web.UI.WebControls.BaseDataList, System.Web.UI.INamingContainer
  inheritance:
  - System.Object
  - System.Web.UI.Control
  - System.Web.UI.WebControls.WebControl
  - System.Web.UI.WebControls.BaseDataList
  implements:
  - System.Web.UI.INamingContainer
  inheritedMembers:
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientID
  - System.Web.UI.Control.ClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Context
  - System.Web.UI.Control.CreateControlCollection
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EnableViewState
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String)
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.Focus
  - System.Web.UI.Control.GetDesignModeState
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasControls
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.ID
  - System.Web.UI.Control.IdSeparator
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadControlState(System.Object)
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnUnload(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SaveControlState
  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ValidateRequestMode
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  - System.Web.UI.Control.Visible
  - System.Web.UI.WebControls.BaseDataList.AddParsedSubObject(System.Object)
  - System.Web.UI.WebControls.BaseDataList.Caption
  - System.Web.UI.WebControls.BaseDataList.CaptionAlign
  - System.Web.UI.WebControls.BaseDataList.CellPadding
  - System.Web.UI.WebControls.BaseDataList.CellSpacing
  - System.Web.UI.WebControls.BaseDataList.Controls
  - System.Web.UI.WebControls.BaseDataList.CreateChildControls
  - System.Web.UI.WebControls.BaseDataList.CreateDataSourceSelectArguments
  - System.Web.UI.WebControls.BaseDataList.DataBind
  - System.Web.UI.WebControls.BaseDataList.DataKeyField
  - System.Web.UI.WebControls.BaseDataList.DataKeys
  - System.Web.UI.WebControls.BaseDataList.DataKeysArray
  - System.Web.UI.WebControls.BaseDataList.DataMember
  - System.Web.UI.WebControls.BaseDataList.DataSource
  - System.Web.UI.WebControls.BaseDataList.DataSourceID
  - System.Web.UI.WebControls.BaseDataList.EnsureDataBound
  - System.Web.UI.WebControls.BaseDataList.GetData
  - System.Web.UI.WebControls.BaseDataList.GridLines
  - System.Web.UI.WebControls.BaseDataList.HorizontalAlign
  - System.Web.UI.WebControls.BaseDataList.Initialized
  - System.Web.UI.WebControls.BaseDataList.IsBindableType(System.Type)
  - System.Web.UI.WebControls.BaseDataList.IsBoundUsingDataSourceID
  - System.Web.UI.WebControls.BaseDataList.OnDataBinding(System.EventArgs)
  - System.Web.UI.WebControls.BaseDataList.OnDataPropertyChanged
  - System.Web.UI.WebControls.BaseDataList.OnDataSourceViewChanged(System.Object,System.EventArgs)
  - System.Web.UI.WebControls.BaseDataList.OnInit(System.EventArgs)
  - System.Web.UI.WebControls.BaseDataList.OnLoad(System.EventArgs)
  - System.Web.UI.WebControls.BaseDataList.OnPreRender(System.EventArgs)
  - System.Web.UI.WebControls.BaseDataList.OnSelectedIndexChanged(System.EventArgs)
  - System.Web.UI.WebControls.BaseDataList.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.BaseDataList.RequiresDataBinding
  - System.Web.UI.WebControls.BaseDataList.SelectArguments
  - System.Web.UI.WebControls.BaseDataList.SelectedIndexChanged
  - System.Web.UI.WebControls.BaseDataList.SupportsDisabledAttribute
  - System.Web.UI.WebControls.BaseDataList.UseAccessibleHeader
  - System.Web.UI.WebControls.WebControl.AccessKey
  - System.Web.UI.WebControls.WebControl.AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.ApplyStyle(System.Web.UI.WebControls.Style)
  - System.Web.UI.WebControls.WebControl.Attributes
  - System.Web.UI.WebControls.WebControl.BackColor
  - System.Web.UI.WebControls.WebControl.BorderColor
  - System.Web.UI.WebControls.WebControl.BorderStyle
  - System.Web.UI.WebControls.WebControl.BorderWidth
  - System.Web.UI.WebControls.WebControl.ControlStyle
  - System.Web.UI.WebControls.WebControl.ControlStyleCreated
  - System.Web.UI.WebControls.WebControl.CopyBaseAttributes(System.Web.UI.WebControls.WebControl)
  - System.Web.UI.WebControls.WebControl.CssClass
  - System.Web.UI.WebControls.WebControl.DisabledCssClass
  - System.Web.UI.WebControls.WebControl.Enabled
  - System.Web.UI.WebControls.WebControl.EnableTheming
  - System.Web.UI.WebControls.WebControl.Font
  - System.Web.UI.WebControls.WebControl.ForeColor
  - System.Web.UI.WebControls.WebControl.HasAttributes
  - System.Web.UI.WebControls.WebControl.Height
  - System.Web.UI.WebControls.WebControl.IsEnabled
  - System.Web.UI.WebControls.WebControl.MergeStyle(System.Web.UI.WebControls.Style)
  - System.Web.UI.WebControls.WebControl.RenderBeginTag(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.RenderContents(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.RenderEndTag(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.SkinID
  - System.Web.UI.WebControls.WebControl.Style
  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)
  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)
  - System.Web.UI.WebControls.WebControl.TabIndex
  - System.Web.UI.WebControls.WebControl.TagName
  - System.Web.UI.WebControls.WebControl.ToolTip
  - System.Web.UI.WebControls.WebControl.Width
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataGrid.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.DataGrid
  langs:
  - csharp
  name: DataGrid()
  nameWithType: DataGrid.DataGrid()
  fullName: System.Web.UI.WebControls.DataGrid.DataGrid()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.UI.WebControls.DataGrid&quot;> </xref> 클래스입니다."
  remarks: "이 생성자를 사용 하 여 만들고 <xref:System.Web.UI.WebControls.DataGrid>클래스</xref:System.Web.UI.WebControls.DataGrid> 의 새 인스턴스를 초기화 합니다."
  example:
  - "The following code example demonstrates how to create and initialize a new instance of the <xref:System.Web.UI.WebControls.DataGrid> class.  \n  \n [!code-cs[DataGridCtor#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_148_1.aspx)]\n [!code-vb[DataGridCtor#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_148_1.aspx)]"
  syntax:
    content: public DataGrid ();
    parameters: []
  overload: System.Web.UI.WebControls.DataGrid.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataGrid.AllowCustomPaging
  id: AllowCustomPaging
  parent: System.Web.UI.WebControls.DataGrid
  langs:
  - csharp
  name: AllowCustomPaging
  nameWithType: DataGrid.AllowCustomPaging
  fullName: System.Web.UI.WebControls.DataGrid.AllowCustomPaging
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "사용자 지정 페이징을 사용 되는지 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "페이징의 내용을 표시할 수 있도록는 <xref:System.Web.UI.WebControls.DataGrid>페이지 세그먼트에서 제어 합니다.</xref:System.Web.UI.WebControls.DataGrid> 페이지에 있는 항목 수에 의해 결정 됩니다는 <xref:System.Web.UI.WebControls.DataGrid.PageSize%2A>속성.</xref:System.Web.UI.WebControls.DataGrid.PageSize%2A> 경우에 대 한 지정 된 값의 <xref:System.Web.UI.WebControls.DataGrid.PageSize%2A>속성은 <xref:System.Web.UI.WebControls.DataGrid>10 개 항목이 한 페이지에 표시 됩니다.</xref:System.Web.UI.WebControls.DataGrid> </xref:System.Web.UI.WebControls.DataGrid.PageSize%2A>       일반적으로의 모든 행을 포함 하는 데이터 소스는 <xref:System.Web.UI.WebControls.DataGrid>컨트롤이 로드 될 때마다는 <xref:System.Web.UI.WebControls.DataGrid>컨트롤이 다른 페이지로 이동 합니다.</xref:System.Web.UI.WebControls.DataGrid> </xref:System.Web.UI.WebControls.DataGrid> 이 하면 데이터 원본이 매우 큰 경우 리소스를 많이 사용할 수 있습니다. 사용자 지정 페이징을 사용 하면 단일 페이지를 표시 하는 데 필요한 데이터 세그먼트를 로드할 수 있습니다.       페이징을 사용 하도록 사용자 지정을 모두 설정 된 <xref:System.Web.UI.WebControls.DataGrid.AllowPaging%2A>및, allowcustompaging은 속성을 `true`.</xref:System.Web.UI.WebControls.DataGrid.AllowPaging%2A> 그런 다음 처리 하는 코드를 입력의 <xref:System.Web.UI.WebControls.DataGrid.PageIndexChanged>이벤트.</xref:System.Web.UI.WebControls.DataGrid.PageIndexChanged>       에 대 한 일반적인 논리는 <xref:System.Web.UI.WebControls.DataGrid.PageIndexChanged>먼저 설정 하는 이벤트 처리기는 <xref:System.Web.UI.WebControls.DataGrid.CurrentPageIndex%2A>속성을 표시 하려면 페이지의 인덱스입니다.</xref:System.Web.UI.WebControls.DataGrid.CurrentPageIndex%2A> </xref:System.Web.UI.WebControls.DataGrid.PageIndexChanged>      > [!NOTE] > 이벤트 처리기는 <xref:System.Web.UI.WebControls.DataGridPageChangedEventArgs>개체를 매개 변수로.</xref:System.Web.UI.WebControls.DataGridPageChangedEventArgs> 사용할 수는 <xref:System.Web.UI.WebControls.DataGridPageChangedEventArgs.NewPageIndex%2A>속성의 페이지 선택 요소에서 사용자가 선택한 페이지의 인덱스를 확인 하려면이 매개 변수는 <xref:System.Web.UI.WebControls.DataGrid>컨트롤.</xref:System.Web.UI.WebControls.DataGrid> </xref:System.Web.UI.WebControls.DataGridPageChangedEventArgs.NewPageIndex%2A>       다음으로 단일 페이지에 표시 되 고 사용 하 여 데이터를 포함 하는 데이터 소스를 만듭니다는 <xref:System.Web.UI.WebControls.BaseDataList.DataBind%2A>메서드 데이터를 바인딩하는 <xref:System.Web.UI.WebControls.DataGrid>컨트롤.</xref:System.Web.UI.WebControls.DataGrid> </xref:System.Web.UI.WebControls.BaseDataList.DataBind%2A>      > [!NOTE] > 설정 해야 데이터의 세그먼트에만 로드 되므로 <xref:System.Web.UI.WebControls.DataGrid.VirtualItemCount%2A>속성에 있는 항목의 총 수는 <xref:System.Web.UI.WebControls.DataGrid>컨트롤.</xref:System.Web.UI.WebControls.DataGrid> </xref:System.Web.UI.WebControls.DataGrid.VirtualItemCount%2A> 이렇게 하면 컨트롤이 페이지에 있는 모든 항목을 표시 하는 데 필요한 총 수를 결정 하는 <xref:System.Web.UI.WebControls.DataGrid>컨트롤.</xref:System.Web.UI.WebControls.DataGrid> 이 일반적으로 프로그래밍 방식으로 속성은 한 번에 있는 항목의 총 수는 <xref:System.Web.UI.WebControls.DataGrid>제어 결정 됩니다.</xref:System.Web.UI.WebControls.DataGrid>       로 설정 되어, allowcustompaging은 속성이 페이징이 활성화 된 경우 `false`, <xref:System.Web.UI.WebControls.DataGrid>컨트롤 데이터 소스에 모든 항목을 표시할 수이 포함 되어 있다고 가정 합니다.</xref:System.Web.UI.WebControls.DataGrid> <xref:System.Web.UI.WebControls.DataGrid>컨트롤 계산으로 지정 된 페이지 인덱스를 기반으로 표시 된 페이지에서 항목의 인덱스는 <xref:System.Web.UI.WebControls.DataGrid.CurrentPageIndex%2A>속성과로 지정 된 페이지에 있는 항목의 수는 <xref:System.Web.UI.WebControls.DataGrid.PageSize%2A>속성.</xref:System.Web.UI.WebControls.DataGrid.PageSize%2A> </xref:System.Web.UI.WebControls.DataGrid.CurrentPageIndex%2A> </xref:System.Web.UI.WebControls.DataGrid>       Allowcustompaging은 속성이로 설정 된 경우 `true`, <xref:System.Web.UI.WebControls.DataGrid>컨트롤 데이터 소스에만 기준으로 항목이 포함 하는 것으로 가정은 <xref:System.Web.UI.WebControls.DataGrid.VirtualItemCount%2A>속성.</xref:System.Web.UI.WebControls.DataGrid.VirtualItemCount%2A> </xref:System.Web.UI.WebControls.DataGrid> 로 지정 된 항목의 수에 따라 결정 된 <xref:System.Web.UI.WebControls.DataGrid.PageSize%2A>속성이 표시 됩니다.</xref:System.Web.UI.WebControls.DataGrid.PageSize%2A>"
  example:
  - "The following code example demonstrates how to use the AllowCustomPaging property to enable custom paging.  \n  \n [!code-cs[DataGridCustomPaging#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_71_1.aspx)]\n [!code-vb[DataGridCustomPaging#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_71_1.aspx)]"
  syntax:
    content: public virtual bool AllowCustomPaging { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>사용자 지정 페이징을 활성화 되 면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.DataGrid.AllowCustomPaging*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataGrid.AllowPaging
  id: AllowPaging
  parent: System.Web.UI.WebControls.DataGrid
  langs:
  - csharp
  name: AllowPaging
  nameWithType: DataGrid.AllowPaging
  fullName: System.Web.UI.WebControls.DataGrid.AllowPaging
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "페이징 사용 되는지 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "페이징의 내용을 표시할 수 있도록는 <xref:System.Web.UI.WebControls.DataGrid>페이지 세그먼트에서 제어 합니다.</xref:System.Web.UI.WebControls.DataGrid> 페이지에 있는 항목 수에 의해 결정 됩니다는 <xref:System.Web.UI.WebControls.DataGrid.PageSize%2A>속성.</xref:System.Web.UI.WebControls.DataGrid.PageSize%2A> 경우에 대 한 지정 된 값은 <xref:System.Web.UI.WebControls.DataGrid.PageSize%2A>속성을는 <xref:System.Web.UI.WebControls.DataGrid>컨트롤이 페이지에 10 개의 항목을 표시 합니다.</xref:System.Web.UI.WebControls.DataGrid> </xref:System.Web.UI.WebControls.DataGrid.PageSize%2A>       기본적으로 페이징 불가능 합니다. 페이징을 사용 하도록 설정 하려면이 속성을 설정 `true` 처리 하는 코드를 제공 하 고는 <xref:System.Web.UI.WebControls.DataGrid.PageIndexChanged>이벤트.</xref:System.Web.UI.WebControls.DataGrid.PageIndexChanged>       에 대 한 일반적인 논리는 <xref:System.Web.UI.WebControls.DataGrid.PageIndexChanged>설정 하는 이벤트는 <xref:System.Web.UI.WebControls.DataGrid.CurrentPageIndex%2A>속성을 표시 하 고 사용 하 여 원하는 페이지의 인덱스는 <xref:System.Web.UI.WebControls.BaseDataList.DataBind%2A>메서드 데이터를 바인딩하는 <xref:System.Web.UI.WebControls.DataGrid>컨트롤.</xref:System.Web.UI.WebControls.DataGrid> </xref:System.Web.UI.WebControls.BaseDataList.DataBind%2A> </xref:System.Web.UI.WebControls.DataGrid.CurrentPageIndex%2A> </xref:System.Web.UI.WebControls.DataGrid.PageIndexChanged>      > [!NOTE] > 이벤트 처리기는 <xref:System.Web.UI.WebControls.DataGridPageChangedEventArgs>개체를 매개 변수로.</xref:System.Web.UI.WebControls.DataGridPageChangedEventArgs> 사용할 수는 <xref:System.Web.UI.WebControls.DataGridPageChangedEventArgs.NewPageIndex%2A>속성의 페이지 선택 요소에서 사용자가 선택한 페이지의 인덱스를 확인 하려면이 매개 변수는 <xref:System.Web.UI.WebControls.DataGrid>컨트롤.</xref:System.Web.UI.WebControls.DataGrid> </xref:System.Web.UI.WebControls.DataGridPageChangedEventArgs.NewPageIndex%2A>       표준 페이징을 <xref:System.Web.UI.WebControls.DataGrid>제어 데이터 소스에 모든 항목을 표시할 수이 포함 되어 있다고 가정 합니다.</xref:System.Web.UI.WebControls.DataGrid> <xref:System.Web.UI.WebControls.DataGrid>컨트롤 계산으로 지정 된 페이지 인덱스를 기반으로 표시 된 페이지에서 항목의 인덱스는 <xref:System.Web.UI.WebControls.DataGrid.CurrentPageIndex%2A>속성과 항목으로 지정 된 페이지에 있는 항목의 수는 <xref:System.Web.UI.WebControls.DataGrid.PageSize%2A>속성.</xref:System.Web.UI.WebControls.DataGrid.PageSize%2A> </xref:System.Web.UI.WebControls.DataGrid.CurrentPageIndex%2A> </xref:System.Web.UI.WebControls.DataGrid>       모든 항목을 표시할 수 있는 데이터 원본이 될 때마다 로드할 일반적으로 <xref:System.Web.UI.WebControls.DataGrid>컨트롤 호출입니다.</xref:System.Web.UI.WebControls.DataGrid> 이 하면 데이터 원본이 매우 큰 경우 리소스를 많이 사용할 수 있습니다. 사용자 지정 페이징을 사용 하면 단일 페이지를 표시 하는 데 필요한 데이터 세그먼트를 로드할 수 있습니다. 사용자 지정 페이징에 자세한 내용은 참조는 <xref:System.Web.UI.WebControls.DataGrid.AllowCustomPaging%2A>속성.</xref:System.Web.UI.WebControls.DataGrid.AllowCustomPaging%2A>"
  example:
  - "The following code example demonstrates how to use the AllowPaging property to enable paging.  \n  \n [!code-cs[Classic DataGrid.AllowPaging Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_166_1.aspx)]\n [!code-vb[Classic DataGrid.AllowPaging Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_166_1.aspx)]  \n  \n [!code-vb[DataGridAllowPaging#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_166_2.aspx)]\n [!code-cs[DataGridAllowPaging#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_166_2.aspx)]"
  syntax:
    content: public virtual bool AllowPaging { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>페이징 사용 되 면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.DataGrid.AllowPaging*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataGrid.AllowSorting
  id: AllowSorting
  parent: System.Web.UI.WebControls.DataGrid
  langs:
  - csharp
  name: AllowSorting
  nameWithType: DataGrid.AllowSorting
  fullName: System.Web.UI.WebControls.DataGrid.AllowSorting
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "정렬 사용 되는지 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "정렬을 사용 하도록 설정한 경우 <xref:System.Web.UI.WebControls.LinkButton>컨트롤의 각 열 머리글 섹션에서 렌더링 됩니다 여기서는 <xref:System.Web.UI.WebControls.DataGridColumn.SortExpression%2A>속성을 설정 합니다.</xref:System.Web.UI.WebControls.DataGridColumn.SortExpression%2A> </xref:System.Web.UI.WebControls.LinkButton> 이러한 <xref:System.Web.UI.WebControls.LinkButton>컨트롤을 사용 하면 정렬 하는 <xref:System.Web.UI.WebControls.DataGrid>컨트롤 선택 된 열입니다.</xref:System.Web.UI.WebControls.DataGrid> </xref:System.Web.UI.WebControls.LinkButton> 유일한 예외는 사용 하는 경우는 <xref:System.Web.UI.WebControls.TemplateColumn>열 유형으로는 <xref:System.Web.UI.WebControls.TemplateColumn.HeaderTemplate%2A>속성 집합입니다.</xref:System.Web.UI.WebControls.TemplateColumn.HeaderTemplate%2A> </xref:System.Web.UI.WebControls.TemplateColumn> 이 경우 제공 해야는 <xref:System.Web.UI.WebControls.Button>컨트롤에 <xref:System.Web.UI.WebControls.TemplateColumn.HeaderTemplate%2A>열의.</xref:System.Web.UI.WebControls.TemplateColumn.HeaderTemplate%2A> </xref:System.Web.UI.WebControls.Button>       <xref:System.Web.UI.WebControls.DataGrid.SortCommand>이벤트가 발생 한 경우의 <xref:System.Web.UI.WebControls.LinkButton>컨트롤을 클릭할.</xref:System.Web.UI.WebControls.LinkButton> </xref:System.Web.UI.WebControls.DataGrid.SortCommand> 이벤트 처리기에 대 한 코드를 제공할 수 있습니다. 목록을 정렬을 다음 데이터를 다시 바인딩해야 하는 처리기에 대 한 일반적인 논리는 <xref:System.Web.UI.WebControls.DataGrid>컨트롤.</xref:System.Web.UI.WebControls.DataGrid>"
  example:
  - "The following code example demonstrates how to use the AllowSorting property to enable sorting.  \n  \n [!code-cs[Classic DataGrid.AllowSorting Example 2#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_144_1.aspx)]\n [!code-vb[Classic DataGrid.AllowSorting Example 2#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_144_1.aspx)]  \n  \n [!code-cs[DataGridAllowSorting#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_144_2.aspx)]\n [!code-vb[DataGridAllowSorting#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_144_2.aspx)]"
  syntax:
    content: public virtual bool AllowSorting { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>정렬을 활성화 되 면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.DataGrid.AllowSorting*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataGrid.AlternatingItemStyle
  id: AlternatingItemStyle
  parent: System.Web.UI.WebControls.DataGrid
  langs:
  - csharp
  name: AlternatingItemStyle
  nameWithType: DataGrid.AlternatingItemStyle
  fullName: System.Web.UI.WebControls.DataGrid.AlternatingItemStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "에 있는 대체 항목에 대 한 스타일 속성을 가져옵니다는 <xref href=&quot;System.Web.UI.WebControls.DataGrid&quot;> </xref> 제어 합니다."
  remarks: "AlternatingItemStyle 속성을 사용 하 여 교대로 반복 되는 항목에 대 한 사용자 지정 스타일을 제공 하는 <xref:System.Web.UI.WebControls.DataGrid>컨트롤.</xref:System.Web.UI.WebControls.DataGrid> 조정할 수 있는 일반 스타일 특성 전경색, 배경색, 글꼴 및 셀 내용 맞춤을 포함 합니다. 모양을 향상 시킬 다른 스타일을 사용 하 여 <xref:System.Web.UI.WebControls.DataGrid>컨트롤.</xref:System.Web.UI.WebControls.DataGrid>       항목의 스타일 속성은 <xref:System.Web.UI.WebControls.DataGrid>컨트롤 계층을 통해 다른 항목을 하나 style 속성에서 상속 됩니다.</xref:System.Web.UI.WebControls.DataGrid> 계층 구조에서 낮게 설정할 항목 스타일 속성은 계층 구조의 상위 항목 스타일 속성에 의해 상속 됩니다. 예를 들어 빨강 글꼴을 지정 하는 경우는 <xref:System.Web.UI.WebControls.DataGrid.ItemStyle%2A>속성에서 다른 모든 항목 스타일 속성은 <xref:System.Web.UI.WebControls.DataGrid>컨트롤에는 빨간색 글꼴로.</xref:System.Web.UI.WebControls.DataGrid> </xref:System.Web.UI.WebControls.DataGrid.ItemStyle%2A> 이 옵션을 사용 하면 단일 항목 style 속성을 설정 하 여 컨트롤에 대 한 공통 된 모양을 지정할 수 있습니다. 스타일 속성을 설정 하 여 계층에 있는 항목 스타일 속성에 대 한 상속 된 스타일 설정을 재정의할 수 있습니다. 예를 들어에 지정 된 빨간색 글꼴로 재정의 AlternatingItemStyle 속성에 대 한 파란색 글꼴을 지정할 수는 <xref:System.Web.UI.WebControls.DataGrid.ItemStyle%2A>속성.</xref:System.Web.UI.WebControls.DataGrid.ItemStyle%2A> 다음 표에서 내림차순으로 최고 계층 구조 순서로 나열합니다.      | 우선 순위 | Style 속성 |   |----------------|--------------------|   |&1; | <xref:System.Web.UI.WebControls.DataGrid.EditItemStyle%2A>|   |&2; | <xref:System.Web.UI.WebControls.DataGrid.SelectedItemStyle%2A>|   |&3; | AlternatingItemStyle |   |&4; | <xref:System.Web.UI.WebControls.DataGrid.ItemStyle%2A>|   |&5; | <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>|       대체 항목에 대 한 사용자 지정 스타일을 지정 하려면는 `<AlternatingItemStyle>` 여는 태그와 닫는 태그 사이 <xref:System.Web.UI.WebControls.DataGrid>컨트롤.</xref:System.Web.UI.WebControls.DataGrid> </xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> </xref:System.Web.UI.WebControls.DataGrid.ItemStyle%2A> </xref:System.Web.UI.WebControls.DataGrid.SelectedItemStyle%2A> </xref:System.Web.UI.WebControls.DataGrid.EditItemStyle%2A> 다음을 표시 하 여 스타일 특성 `<AlternatingItemStyle>` 태그입니다."
  example:
  - "The following code example demonstrates how to use the AlternatingItemStyle property to specify a different background color for alternating items in the <xref:System.Web.UI.WebControls.DataGrid> control.  \n  \n [!code-cs[DataGridAlternatingItemStyle#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_513_1.aspx)]\n [!code-vb[DataGridAlternatingItemStyle#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_513_1.aspx)]  \n  \n [!code-vb[DataGridItemStyle#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_513_2.aspx)]\n [!code-cs[DataGridItemStyle#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_513_2.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.TableItemStyle AlternatingItemStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "A <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref> 대체에 대 한 스타일 속성을 나타내는 개체를 항목에 <xref href=&quot;System.Web.UI.WebControls.DataGrid&quot;> </xref>합니다. 기본값은 빈 <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref> 개체입니다."
  overload: System.Web.UI.WebControls.DataGrid.AlternatingItemStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataGrid.AutoGenerateColumns
  id: AutoGenerateColumns
  parent: System.Web.UI.WebControls.DataGrid
  langs:
  - csharp
  name: AutoGenerateColumns
  nameWithType: DataGrid.AutoGenerateColumns
  fullName: System.Web.UI.WebControls.DataGrid.AutoGenerateColumns
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "표시 하는 값을 가져오거나 설정 합니다. 여부 <xref href=&quot;System.Web.UI.WebControls.BoundColumn&quot;> </xref> 개체가 자동으로 만들어져에 표시 되는 <xref href=&quot;System.Web.UI.WebControls.DataGrid&quot;> </xref> 데이터 원본에 있는 각 필드에 대 한 제어 합니다."
  remarks: "이 속성을 사용 하 여 자동으로 만들려면는 <xref:System.Web.UI.WebControls.BoundColumn>데이터 원본에 있는 각 필드에 대 한 개체입니다.</xref:System.Web.UI.WebControls.BoundColumn> 각 필드에 열으로 렌더링할는 <xref:System.Web.UI.WebControls.DataGrid>데이터 원본에 표시 된 순서 대로 제어 합니다.</xref:System.Web.UI.WebControls.DataGrid>       일부 데이터 형식에 바인딩할 수는 <xref:System.Web.UI.WebControls.DataGrid>컨트롤.</xref:System.Web.UI.WebControls.DataGrid> 필드는 지원 되지 않는 데이터 형식을 포함 하는 경우 해당 필드에 대 한 열 생성 되지 않습니다. 데이터 소스는 지원 되지 않는 데이터 형식 가진 열이 하나 포함 된 경우 예외가 throw 됩니다. 다음 표에서 컨트롤에 바인딩할 수 있는 데이터 형식을 보여 줍니다.      | 데이터 형식 | 설명 |   |---------------|-----------------|   | 기본 형식 | 와 같은 기본 데이터 형식 <xref:System.Int32?displayProperty=fullName>, <xref:System.Char>, <xref:System.Double>등.</xref:System.Double> </xref:System.Char> </xref:System.Int32?displayProperty=fullName> 전체 목록을 보려면 <xref:System.Type.IsPrimitive%2A?displayProperty=fullName>를 참조 하십시오. |   | 문자열 | <xref:System.String?displayProperty=fullName>개체입니다. |   | 날짜/시간 | <xref:System.DateTime?displayProperty=fullName>개체입니다. |   |&10; 진수 | <xref:System.Decimal?displayProperty=fullName>개체입니다. |      > [!NOTE] > 열을 자동으로 생성 된 열과 함께에서 사용할 수 있습니다를 명시적으로 선언 합니다.</xref:System.Decimal?displayProperty=fullName> </xref:System.DateTime?displayProperty=fullName> </xref:System.String?displayProperty=fullName> </xref:System.Type.IsPrimitive%2A?displayProperty=fullName> 열을 명시적으로 선언 모두 사용 하 여 렌더링 되 먼저 때 자동 생성 된 열 뒤 합니다. 자동 생성 된 열에 추가 되지 않습니다는 <xref:System.Web.UI.WebControls.DataGrid.Columns%2A>컬렉션.</xref:System.Web.UI.WebControls.DataGrid.Columns%2A>"
  example:
  - "The following code example demonstrates how to use the AutoGenerateColumns property to automatically create a <xref:System.Web.UI.WebControls.BoundColumn> object for each field in the data source.  \n  \n [!code-cs[Classic DataGrid.AutoGenerateColumns Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_75_1.aspx)]\n [!code-vb[Classic DataGrid.AutoGenerateColumns Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_75_1.aspx)]"
  syntax:
    content: public virtual bool AutoGenerateColumns { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우 <xref href=&quot;System.Web.UI.WebControls.BoundColumn&quot;> </xref> 개체는 자동으로 생성 하 고 표시 되 고, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.DataGrid.AutoGenerateColumns*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataGrid.BackImageUrl
  id: BackImageUrl
  parent: System.Web.UI.WebControls.DataGrid
  langs:
  - csharp
  name: BackImageUrl
  nameWithType: DataGrid.BackImageUrl
  fullName: System.Web.UI.WebControls.DataGrid.BackImageUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "배경에 표시할 이미지의 URL을 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.WebControls.DataGrid&quot;> </xref> 제어 합니다."
  remarks: "BackImageUrl 속성을 사용 하 여의 배경에 표시할 이미지를 지정 하는 <xref:System.Web.UI.WebControls.DataGrid>컨트롤.</xref:System.Web.UI.WebControls.DataGrid>      > [!NOTE] > 지정된 된 이미지 보다 작은 경우는 <xref:System.Web.UI.WebControls.DataGrid>컨트롤 이미지가 바둑판식으로 배열 컨트롤의 배경을 채웁니다.</xref:System.Web.UI.WebControls.DataGrid>"
  example:
  - "The following code example demonstrates how use the BackImageUrl property to specify a background image for the <xref:System.Web.UI.WebControls.DataGrid> control.  \n  \n [!code-cs[Classic DataGrid.BackImageUrl Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1166_1.aspx)]\n [!code-vb[Classic DataGrid.BackImageUrl Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1166_1.aspx)]  \n  \n [!code-cs[DataGridBackImageUrl#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1166_2.aspx)]\n [!code-vb[DataGridBackImageUrl#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1166_2.aspx)]"
  syntax:
    content: public virtual string BackImageUrl { get; set; }
    return:
      type: System.String
      description: "배경에 표시할 이미지의 URL은 <xref href=&quot;System.Web.UI.WebControls.DataGrid&quot;> </xref> 제어 합니다. 기본값은 &lt;xref:System.String.Empty?displayProperty=fullName&gt;합니다."
  overload: System.Web.UI.WebControls.DataGrid.BackImageUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataGrid.CancelCommand
  id: CancelCommand
  parent: System.Web.UI.WebControls.DataGrid
  langs:
  - csharp
  name: CancelCommand
  nameWithType: DataGrid.CancelCommand
  fullName: System.Web.UI.WebControls.DataGrid.CancelCommand
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "발생 경우는 <xref uid=&quot;langword_csharp_Cancel&quot; name=&quot;Cancel&quot; href=&quot;&quot;> </xref> 항목에 대해 단추를 클릭할는 <xref href=&quot;System.Web.UI.WebControls.DataGrid&quot;> </xref> 제어 합니다."
  remarks: "CancelCommand 이벤트가 발생할 때는 `Cancel` 항목에 대해 단추를 클릭는 <xref:System.Web.UI.WebControls.DataGrid>컨트롤.</xref:System.Web.UI.WebControls.DataGrid>       CancelCommand 이벤트 집합에 대 한 일반적인 처리기는 <xref:System.Web.UI.WebControls.DataGrid.EditItemIndex%2A>속성을 `-1` 항목을 선택 취소) 하는 것 (하 한 다음 데이터를 다시 바인딩 횟수와 <xref:System.Web.UI.WebControls.DataGrid>컨트롤.</xref:System.Web.UI.WebControls.DataGrid> </xref:System.Web.UI.WebControls.DataGrid.EditItemIndex%2A>      > [!CAUTION] > 텍스트는 HTML에 표시 되기 전에 인코딩되지는 <xref:System.Web.UI.WebControls.DataGrid>컨트롤.</xref:System.Web.UI.WebControls.DataGrid> 따라서 텍스트에 HTML 태그 내에서 스크립트를 포함 시킬 수 있습니다. 컨트롤에 대 한 값 사용자 입력에 연결 하는 경우에 보안 취약점을 줄이기 위해 값을 확인 해야 합니다.       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다."
  example:
  - "The following code example demonstrates how to specify and code a handler for the CancelCommand event to cancel edits made to an item in the <xref:System.Web.UI.WebControls.DataGrid> control.  \n  \n [!code-cs[DataGridEdit#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_95_1.aspx)]\n [!code-vb[DataGridEdit#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_95_1.aspx)]  \n  \n [!code-cs[DataGridEdit2#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_95_2.aspx)]\n [!code-vb[DataGridEdit2#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_95_2.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.DataGridCommandEventHandler CancelCommand;
    return:
      type: System.Web.UI.WebControls.DataGridCommandEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataGrid.CancelCommandName
  id: CancelCommandName
  parent: System.Web.UI.WebControls.DataGrid
  langs:
  - csharp
  name: CancelCommandName
  nameWithType: DataGrid.CancelCommandName
  fullName: System.Web.UI.WebControls.DataGrid.CancelCommandName
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "나타냅니다는 <xref uid=&quot;langword_csharp_Cancel&quot; name=&quot;Cancel&quot; href=&quot;&quot;> </xref> 명령 이름입니다. 이 필드는 읽기 전용입니다."
  remarks: "나타내는 CancelCommandName 필드를 사용 하 여는 `Cancel` 명령 이름입니다."
  syntax:
    content: public const string CancelCommandName;
    return:
      type: System.String
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataGrid.Columns
  id: Columns
  parent: System.Web.UI.WebControls.DataGrid
  langs:
  - csharp
  name: Columns
  nameWithType: DataGrid.Columns
  fullName: System.Web.UI.WebControls.DataGrid.Columns
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "열을 나타내는 개체의 컬렉션을 가져옵니다는 <xref href=&quot;System.Web.UI.WebControls.DataGrid&quot;> </xref> 제어 합니다."
  remarks: "이 속성을 사용 하 여 프로그래밍 방식으로 컬렉션의 열을 제어 하는 <xref:System.Web.UI.WebControls.DataGrid>컨트롤.</xref:System.Web.UI.WebControls.DataGrid> Columns 컬렉션에 명시적으로 선언 된 열에 렌더링 되는 <xref:System.Web.UI.WebControls.DataGrid>컨트롤.</xref:System.Web.UI.WebControls.DataGrid>      > [!NOTE] > 명시적으로 선언 된 열을 자동으로 생성 된 열과 함께에서 사용할 수 있습니다. 열을 명시적으로 선언 모두 사용 하 여 렌더링 되 먼저 때 자동으로 생성 된 열 뒤 합니다. 자동으로 생성 된 열 Columns 컬렉션에 추가 되지 않습니다.       열에 표시 되는 순서는 <xref:System.Web.UI.WebControls.DataGrid>제어 Columns 컬렉션에 표시 되는 순서에 의해 제어 됩니다.</xref:System.Web.UI.WebControls.DataGrid>       다음 표에서 다른 열에서 파생 된 클래스는 <xref:System.Web.UI.WebControls.DataGridColumn>클래스 및 열 컬렉션에서 사용할 수 있습니다.</xref:System.Web.UI.WebControls.DataGridColumn>      | 열 형식 | 설명 |   |-----------------|-----------------|   | <xref:System.Web.UI.WebControls.BoundColumn>| 데이터 원본의 필드에 바인딩된 열 표시 됩니다.</xref:System.Web.UI.WebControls.BoundColumn> 필드의 각 항목 텍스트로 표시합니다. 이 <xref:System.Web.UI.WebControls.DataGrid>컨트롤의 기본 열 형식입니다. |   | <xref:System.Web.UI.WebControls.ButtonColumn>| 열에서 각 항목에 대 한 명령 단추를 표시 합니다.</xref:System.Web.UI.WebControls.ButtonColumn> </xref:System.Web.UI.WebControls.DataGrid> 와 같은 사용자 지정 단추 컨트롤의 열을 만들 수 있습니다는 `Add` 또는 `Remove` 단추입니다. |   | <xref:System.Web.UI.WebControls.EditCommandColumn>| 편집을 포함 하는 열이 열에서 각 항목에 대 한 명령을 표시 합니다. |   | <xref:System.Web.UI.WebControls.HyperLinkColumn>| 하이퍼링크 열에서 각 항목의 내용을 표시 합니다.</xref:System.Web.UI.WebControls.HyperLinkColumn> </xref:System.Web.UI.WebControls.EditCommandColumn> 열 내용의 데이터 소스 나 정적 텍스트 필드에 바인딩할 수 있습니다. |   | <xref:System.Web.UI.WebControls.TemplateColumn>| 지정된 된 서식 파일의 열에 각 항목을 표시 합니다.</xref:System.Web.UI.WebControls.TemplateColumn> 열에서 사용자 지정 컨트롤을 제공할 수 있습니다. |      > [!NOTE] > Columns 컬렉션에 프로그래밍 방식으로 열을 추가할 수 있습니다, 이지만 열을 정적으로 나열을 사용 하 여 보다 쉽게는 <xref:System.Web.UI.WebControls.DataGridColumn.Visible%2A>속성을 표시 하거나 숨길 열.</xref:System.Web.UI.WebControls.DataGridColumn.Visible%2A>"
  example:
  - "The following code example demonstrates how to use the Columns collection to dynamically add a column to the <xref:System.Web.UI.WebControls.DataGrid> control.  \n  \n [!code-vb[Classic DataGrid.Columns Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_225_1.aspx)]\n [!code-cs[Classic DataGrid.Columns Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_225_1.aspx)]  \n  \n [!code-cs[DataGridColumnVisible#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_225_2.aspx)]\n [!code-vb[DataGridColumnVisible#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_225_2.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.DataGridColumnCollection Columns { get; }
    return:
      type: System.Web.UI.WebControls.DataGridColumnCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.DataGridColumnCollection&quot;> </xref> 개체의 열을 나타내는 개체의 컬렉션을 포함 하는 <xref href=&quot;System.Web.UI.WebControls.DataGrid&quot;> </xref> 제어 합니다."
  overload: System.Web.UI.WebControls.DataGrid.Columns*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataGrid.CreateColumnSet(System.Web.UI.WebControls.PagedDataSource,System.Boolean)
  id: CreateColumnSet(System.Web.UI.WebControls.PagedDataSource,System.Boolean)
  parent: System.Web.UI.WebControls.DataGrid
  langs:
  - csharp
  name: CreateColumnSet(PagedDataSource,Boolean)
  nameWithType: DataGrid.CreateColumnSet(PagedDataSource,Boolean)
  fullName: System.Web.UI.WebControls.DataGrid.CreateColumnSet(PagedDataSource,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "컨트롤 계층 구조를 구축 하는 데 사용할 열 집합을 만듭니다. 때 <> </> *>이 true 이면 열 데이터 원본과 일치 하도록 만들어지고에 정의 된 열 집합에 추가 되는 <> </> *> 컬렉션입니다."
  syntax:
    content: protected virtual System.Collections.ArrayList CreateColumnSet (System.Web.UI.WebControls.PagedDataSource dataSource, bool useDataSource);
    parameters:
    - id: dataSource
      type: System.Web.UI.WebControls.PagedDataSource
      description: "컨트롤 계층 구조를 만드는 사용 되는 데이터 소스"
    - id: useDataSource
      type: System.Boolean
      description: "열을 자동으로 생성 하거나 저장 된 상태를 사용 하도록 데이터 원본을 사용 여부를 나타냅니다."
    return:
      type: System.Collections.ArrayList
      description: "<xref href=&quot;System.Collections.ArrayList&quot;> </xref> 유효 열에 적절 한 순서로 집합이 들어 있는입니다."
  overload: System.Web.UI.WebControls.DataGrid.CreateColumnSet*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataGrid.CreateControlHierarchy(System.Boolean)
  id: CreateControlHierarchy(System.Boolean)
  parent: System.Web.UI.WebControls.DataGrid
  langs:
  - csharp
  name: CreateControlHierarchy(Boolean)
  nameWithType: DataGrid.CreateControlHierarchy(Boolean)
  fullName: System.Web.UI.WebControls.DataGrid.CreateControlHierarchy(Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "렌더링 하는 데 사용 되는 컨트롤 계층 구조로 만듭니다는 <xref href=&quot;System.Web.UI.WebControls.DataGrid&quot;> </xref>합니다."
  remarks: "이 구현은 컨트롤 컬렉션의 모든 자식을 취소 이미 있다고 가정 합니다."
  syntax:
    content: protected override void CreateControlHierarchy (bool useDataSource);
    parameters:
    - id: useDataSource
      type: System.Boolean
      description: "열을 자동으로 생성 하거나 저장 된 상태를 사용 하도록 데이터 원본을 사용 여부를 나타냅니다."
  overload: System.Web.UI.WebControls.DataGrid.CreateControlHierarchy*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<code>useDataSource</code> is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, the value of <xref:System.Web.UI.WebControls.DataGrid.VirtualItemCount*> is not set, and the selected data source does not implement the <xref:System.Collections.ICollection> interface.  \n  \n \\- or -  \n  \n <code>useDataSource</code> is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> and the data source has an invalid <xref:System.Web.UI.WebControls.PagedDataSource.CurrentPageIndex*> property."
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataGrid.CreateControlStyle
  id: CreateControlStyle
  parent: System.Web.UI.WebControls.DataGrid
  langs:
  - csharp
  name: CreateControlStyle()
  nameWithType: DataGrid.CreateControlStyle()
  fullName: System.Web.UI.WebControls.DataGrid.CreateControlStyle()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "새 컨트롤 스타일을 만듭니다."
  remarks: ''
  example:
  - "The following code example demonstrates how to override the CreateControlStyle method in a custom server control so that it always displays the <xref:System.Web.UI.WebControls.BaseDataList.GridLines%2A> with no <xref:System.Web.UI.WebControls.BaseDataList.CellSpacing%2A> in the <xref:System.Web.UI.WebControls.DataGrid>.  \n  \n [!code-cs[CustomDataGridCreateControlStyle#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_9_1.aspx)]\n [!code-vb[CustomDataGridCreateControlStyle#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_9_1.aspx)]  \n[!code-cs[CustomDataGridCreateControlStyle#2](~/add/codesnippet/csharp/m-system.web.ui.webcontr_9_2.cs)]\n[!code-vb[CustomDataGridCreateControlStyle#2](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_9_2.vb)]"
  syntax:
    content: protected override System.Web.UI.WebControls.Style CreateControlStyle ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.Style
      description: "A <xref href=&quot;System.Web.UI.WebControls.Style&quot;> </xref> 나타내는 새 스타일입니다."
  overload: System.Web.UI.WebControls.DataGrid.CreateControlStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataGrid.CreateItem(System.Int32,System.Int32,System.Web.UI.WebControls.ListItemType)
  id: CreateItem(System.Int32,System.Int32,System.Web.UI.WebControls.ListItemType)
  parent: System.Web.UI.WebControls.DataGrid
  langs:
  - csharp
  name: CreateItem(Int32,Int32,ListItemType)
  nameWithType: DataGrid.CreateItem(Int32,Int32,ListItemType)
  fullName: System.Web.UI.WebControls.DataGrid.CreateItem(Int32,Int32,ListItemType)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "만듭니다는 <xref href=&quot;System.Web.UI.WebControls.DataGridItem&quot;> </xref> 개체입니다."
  remarks: "CreateItem는에서 사용 하는 도우미 메서드입니다는 <xref:System.Web.UI.WebControls.DataGrid>만들 클래스의 <xref:System.Web.UI.WebControls.DataGridItem>개체.</xref:System.Web.UI.WebControls.DataGridItem> </xref:System.Web.UI.WebControls.DataGrid>      > [!NOTE] >이 메서드는 주로 컨트롤 개발자가 사용 됩니다."
  syntax:
    content: protected virtual System.Web.UI.WebControls.DataGridItem CreateItem (int itemIndex, int dataSourceIndex, System.Web.UI.WebControls.ListItemType itemType);
    parameters:
    - id: itemIndex
      type: System.Int32
      description: "에 대 한 인덱스는 <xref href=&quot;System.Web.UI.WebControls.DataGridItem&quot;> </xref> 개체입니다."
    - id: dataSourceIndex
      type: System.Int32
      description: "데이터 원본에서 데이터 항목의 인덱스입니다."
    - id: itemType
      type: System.Web.UI.WebControls.ListItemType
      description: "중 하나는 <xref href=&quot;System.Web.UI.WebControls.ListItemType&quot;> </xref> 값입니다."
    return:
      type: System.Web.UI.WebControls.DataGridItem
      description: "A <xref href=&quot;System.Web.UI.WebControls.DataGridItem&quot;></xref> object."
  overload: System.Web.UI.WebControls.DataGrid.CreateItem*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataGrid.CurrentPageIndex
  id: CurrentPageIndex
  parent: System.Web.UI.WebControls.DataGrid
  langs:
  - csharp
  name: CurrentPageIndex
  nameWithType: DataGrid.CurrentPageIndex
  fullName: System.Web.UI.WebControls.DataGrid.CurrentPageIndex
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "현재 표시 된 페이지의 인덱스를 가져오거나 설정 합니다."
  remarks: "이 속성을 사용 하 여에 현재 표시 된 페이지를 확인 하는 <xref:System.Web.UI.WebControls.DataGrid>페이징이 활성화 된 경우를 제어 합니다.</xref:System.Web.UI.WebControls.DataGrid> 이 속성은 프로그래밍 방식으로 표시 되는 페이지 제어에 사용 됩니다.       페이징 컨트롤에서 기본 제공 숨김 하 고 사용자 지정 컨트롤을 만들 수도 있습니다. 특정 페이지를 표시 하려면이 속성을 설정 페이지 인덱스를 표시 하 고 데이터를 다시 바인딩 후에 <xref:System.Web.UI.WebControls.DataGrid>컨트롤.</xref:System.Web.UI.WebControls.DataGrid>"
  example:
  - "The following code example demonstrates how to use the CurrentPageIndex property to programmatically control the page to display in the <xref:System.Web.UI.WebControls.DataGrid> control.  \n  \n [!code-cs[Classic DataGrid.CurrentPageIndex Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_442_1.aspx)]\n [!code-vb[Classic DataGrid.CurrentPageIndex Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_442_1.aspx)]  \n  \n [!code-vb[DataGridAllowPaging#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_442_2.aspx)]\n [!code-cs[DataGridAllowPaging#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_442_2.aspx)]"
  syntax:
    content: public int CurrentPageIndex { get; set; }
    return:
      type: System.Int32
      description: "현재 표시 된 페이지의&0;부터 시작 하는 인덱스입니다."
  overload: System.Web.UI.WebControls.DataGrid.CurrentPageIndex*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "지정 된 페이지 색인은 음수 값입니다."
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataGrid.DeleteCommand
  id: DeleteCommand
  parent: System.Web.UI.WebControls.DataGrid
  langs:
  - csharp
  name: DeleteCommand
  nameWithType: DataGrid.DeleteCommand
  fullName: System.Web.UI.WebControls.DataGrid.DeleteCommand
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "항목에 대해 삭제 단추를 클릭할 때 발생는 <xref href=&quot;System.Web.UI.WebControls.DataGrid&quot;> </xref> 제어 합니다."
  remarks: "DeleteCommand 이벤트 항목에 대해 삭제 단추를 클릭할 때 일어나는 <xref:System.Web.UI.WebControls.DataGrid>컨트롤.</xref:System.Web.UI.WebControls.DataGrid>       표준 처리기 DeleteCommand 이벤트에 대 한 데이터 원본에서 선택한 항목을 제거 하 고 다음 데이터를 다시 바인딩 횟수는 <xref:System.Web.UI.WebControls.DataGrid>컨트롤.</xref:System.Web.UI.WebControls.DataGrid>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다."
  example:
  - "The following code example demonstrates how to specify and code a handler for the DeleteCommand event to delete an item from the <xref:System.Web.UI.WebControls.DataGrid> control.  \n  \n [!code-cs[DataGridEdit#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_54_1.aspx)]\n [!code-vb[DataGridEdit#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_54_1.aspx)]  \n  \n [!code-cs[DataGridEdit2#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_54_2.aspx)]\n [!code-vb[DataGridEdit2#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_54_2.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.DataGridCommandEventHandler DeleteCommand;
    return:
      type: System.Web.UI.WebControls.DataGridCommandEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataGrid.DeleteCommandName
  id: DeleteCommandName
  parent: System.Web.UI.WebControls.DataGrid
  langs:
  - csharp
  name: DeleteCommandName
  nameWithType: DataGrid.DeleteCommandName
  fullName: System.Web.UI.WebControls.DataGrid.DeleteCommandName
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Delete 명령 이름을 나타냅니다. 이 필드는 읽기 전용입니다."
  remarks: "DeleteCommandName 필드를 사용 하 여 Delete 명령 이름을 나타냅니다."
  syntax:
    content: public const string DeleteCommandName;
    return:
      type: System.String
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataGrid.EditCommand
  id: EditCommand
  parent: System.Web.UI.WebControls.DataGrid
  langs:
  - csharp
  name: EditCommand
  nameWithType: DataGrid.EditCommand
  fullName: System.Web.UI.WebControls.DataGrid.EditCommand
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "항목에 대해 편집 단추를 클릭할 때 발생는 <xref href=&quot;System.Web.UI.WebControls.DataGrid&quot;> </xref> 제어 합니다."
  remarks: "항목에 대해 편집 단추를 클릭할 때 EditCommand 이벤트가 발생 된 <xref:System.Web.UI.WebControls.DataGrid>컨트롤.</xref:System.Web.UI.WebControls.DataGrid>       EditCommand 이벤트 집합에 대 한 일반적인 처리기는 <xref:System.Web.UI.WebControls.DataGrid.EditItemIndex%2A>속성 선택된 된 행을 다음 데이터를 다시 바인딩 횟수와 <xref:System.Web.UI.WebControls.DataGrid>컨트롤.</xref:System.Web.UI.WebControls.DataGrid> </xref:System.Web.UI.WebControls.DataGrid.EditItemIndex%2A>      > [!CAUTION] > 텍스트는 HTML에 표시 되기 전에 인코딩되지는 <xref:System.Web.UI.WebControls.DataGrid>컨트롤.</xref:System.Web.UI.WebControls.DataGrid> 따라서 텍스트에 HTML 태그 내에서 스크립트를 포함 시킬 수 있습니다. 컨트롤에 대 한 값 사용자 입력에 연결 하는 경우에 보안 취약점을 줄이기 위해 값을 확인 해야 합니다.       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다."
  example:
  - "The following code example demonstrates how to specify and code a handler for the EditCommand event to edit an item in the <xref:System.Web.UI.WebControls.DataGrid> control.  \n  \n [!code-cs[DataGridEdit#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_147_1.aspx)]\n [!code-vb[DataGridEdit#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_147_1.aspx)]  \n  \n [!code-cs[DataGridEdit2#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_147_2.aspx)]\n [!code-vb[DataGridEdit2#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_147_2.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.DataGridCommandEventHandler EditCommand;
    return:
      type: System.Web.UI.WebControls.DataGridCommandEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataGrid.EditCommandName
  id: EditCommandName
  parent: System.Web.UI.WebControls.DataGrid
  langs:
  - csharp
  name: EditCommandName
  nameWithType: DataGrid.EditCommandName
  fullName: System.Web.UI.WebControls.DataGrid.EditCommandName
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "편집 명령 이름을 나타냅니다. 이 필드는 읽기 전용입니다."
  remarks: "EditCommandName 필드를 사용 하 여 편집 명령 이름을 나타냅니다."
  syntax:
    content: public const string EditCommandName;
    return:
      type: System.String
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataGrid.EditItemIndex
  id: EditItemIndex
  parent: System.Web.UI.WebControls.DataGrid
  langs:
  - csharp
  name: EditItemIndex
  nameWithType: DataGrid.EditItemIndex
  fullName: System.Web.UI.WebControls.DataGrid.EditItemIndex
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "에 있는 항목의 인덱스를 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.WebControls.DataGrid&quot;> </xref> 컨트롤을 편집 합니다."
  remarks: "EditItemIndex 속성을 사용 하면 <xref:System.Web.UI.WebControls.DataGrid> <xref:System.Web.UI.WebControls.EditCommandColumn> <xref:System.Web.UI.WebControls.DataGrid>편집 컨트롤</xref:System.Web.UI.WebControls.DataGrid> 에서 선택 된 항목의 인덱스를 결정 하</xref:System.Web.UI.WebControls.EditCommandColumn> 는 컨트롤에 포함</xref:System.Web.UI.WebControls.DataGrid>       이 속성은 프로그래밍 방식으로 제어 항목을 편집 하 고도 사용 됩니다. 이 속성을 <xref:System.Web.UI.WebControls.DataGrid>컨트롤에 컨트롤 <xref:System.Web.UI.WebControls.EditCommandColumn>.</xref:System.Web.UI.WebControls.EditCommandColumn> 해당 항목을 편집할 수는</xref:System.Web.UI.WebControls.DataGrid> 에 있는 항목의 인덱스      > [!NOTE] > The EditItemIndex 속성은&0;부터 시작 합니다.       편집을 취소 하려면 프로그래밍 방식으로이 속성을-1로 설정 합니다.      > [!CAUTION] > 텍스트는 HTML에 표시 되기 전에 인코딩되지는 <xref:System.Web.UI.WebControls.DataGrid>컨트롤.</xref:System.Web.UI.WebControls.DataGrid> 따라서 텍스트에 HTML 태그 내에서 스크립트를 포함 시킬 수 있습니다. 컨트롤에 대 한 값 사용자 입력에 연결 하는 경우에 보안 취약점을 줄이기 위해 값을 확인 해야 합니다."
  example:
  - "The following code example demonstrates how to use the EditItemIndex property to determine the item selected for editing in the <xref:System.Web.UI.WebControls.DataGrid> control.  \n  \n [!code-vb[Classic DataGrid.EditItemIndex Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1188_1.aspx)]\n [!code-cs[Classic DataGrid.EditItemIndex Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1188_1.aspx)]"
  syntax:
    content: public virtual int EditItemIndex { get; set; }
    return:
      type: System.Int32
      description: "에 있는 항목의 인덱스는 <xref href=&quot;System.Web.UI.WebControls.DataGrid&quot;> </xref> 컨트롤을 편집 합니다. 기본값은-1을 반환 하 고 있음을 나타냅니다에 항목이 <xref href=&quot;System.Web.UI.WebControls.DataGrid&quot;> </xref> 편집 하 고 제어 합니다."
  overload: System.Web.UI.WebControls.DataGrid.EditItemIndex*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "지정된 된 인덱스-1 보다 작은 경우"
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataGrid.EditItemStyle
  id: EditItemStyle
  parent: System.Web.UI.WebControls.DataGrid
  langs:
  - csharp
  name: EditItemStyle
  nameWithType: DataGrid.EditItemStyle
  fullName: System.Web.UI.WebControls.DataGrid.EditItemStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "편집을 위해 선택한 항목의 스타일 속성을 가져옵니다는 <xref href=&quot;System.Web.UI.WebControls.DataGrid&quot;> </xref> 제어 합니다."
  remarks: "EditItemStyle 속성을 사용 하 여 편집을 위해 항목에 대 한 사용자 지정 스타일을 제공 하는 <xref:System.Web.UI.WebControls.DataGrid>컨트롤.</xref:System.Web.UI.WebControls.DataGrid> 조정할 수 있는 일반 스타일 특성 전경색, 배경색, 글꼴 및 셀 내용 맞춤을 포함 합니다. 모양을 향상 시킬 다른 스타일을 사용 하 여 <xref:System.Web.UI.WebControls.DataGrid>컨트롤.</xref:System.Web.UI.WebControls.DataGrid>       항목의 스타일 속성은 <xref:System.Web.UI.WebControls.DataGrid>컨트롤 계층을 통해 다른 항목을 하나 style 속성에서 상속 됩니다.</xref:System.Web.UI.WebControls.DataGrid> 계층 구조에서 낮게 설정할 항목 스타일 속성은 계층 구조의 상위 항목 스타일 속성에 의해 상속 됩니다. 예를 들어 빨강 글꼴을 지정 하는 경우는 <xref:System.Web.UI.WebControls.DataGrid.ItemStyle%2A>속성에서 다른 모든 항목 스타일 속성은 <xref:System.Web.UI.WebControls.DataGrid>컨트롤에는 빨간색 글꼴로.</xref:System.Web.UI.WebControls.DataGrid> </xref:System.Web.UI.WebControls.DataGrid.ItemStyle%2A> 이 옵션을 사용 하면 단일 항목 style 속성을 설정 하 여 컨트롤에 대 한 공통 된 모양을 지정할 수 있습니다. 스타일 속성을 설정 하 여 계층에 있는 항목 스타일 속성에 대 한 상속 된 스타일 설정을 재정의할 수 있습니다. 예를 들어, 파랑 글꼴을 지정할 수 있습니다는 <xref:System.Web.UI.WebControls.DataGrid.AlternatingItemStyle%2A>속성을 재정의에 지정 된 예는 <xref:System.Web.UI.WebControls.DataGrid.ItemStyle%2A>속성.</xref:System.Web.UI.WebControls.DataGrid.ItemStyle%2A> </xref:System.Web.UI.WebControls.DataGrid.AlternatingItemStyle%2A> 다음 표에서 내림차순으로 최고 계층 구조 순서로 나열합니다.      | 우선 순위 | Style 속성 |   |----------------|--------------------|   |&1; | EditItemStyle |   |&2; | <xref:System.Web.UI.WebControls.DataGrid.SelectedItemStyle%2A>|   |&3; | <xref:System.Web.UI.WebControls.DataGrid.AlternatingItemStyle%2A>|   |&4; | <xref:System.Web.UI.WebControls.DataGrid.ItemStyle%2A>|   |&5; | <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>|       편집을 위해 선택한 항목에 대 한 사용자 지정 스타일을 지정 하려면는 `<EditItemStyle>` 여는 태그와 닫는 태그 사이 <xref:System.Web.UI.WebControls.DataGrid>컨트롤.</xref:System.Web.UI.WebControls.DataGrid> </xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> </xref:System.Web.UI.WebControls.DataGrid.ItemStyle%2A> </xref:System.Web.UI.WebControls.DataGrid.AlternatingItemStyle%2A> </xref:System.Web.UI.WebControls.DataGrid.SelectedItemStyle%2A> 다음을 표시 하 여 스타일 특성 `<EditItemStyle>` 태그입니다."
  example:
  - "The following code example demonstrates how to use the EditItemStyle property to set the background color of the item selected for editing to yellow.  \n  \n [!code-vb[Classic DataGrid.EditItemStyle Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_343_1.aspx)]\n [!code-cs[Classic DataGrid.EditItemStyle Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_343_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.TableItemStyle EditItemStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "A <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref> 에서 편집을 위해 선택한 항목의 스타일 속성이 들어 있는 개체는 <xref href=&quot;System.Web.UI.WebControls.DataGrid&quot;> </xref> 제어 합니다. 기본값은 빈 <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref> 개체입니다."
  overload: System.Web.UI.WebControls.DataGrid.EditItemStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataGrid.FooterStyle
  id: FooterStyle
  parent: System.Web.UI.WebControls.DataGrid
  langs:
  - csharp
  name: FooterStyle
  nameWithType: DataGrid.FooterStyle
  fullName: System.Web.UI.WebControls.DataGrid.FooterStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "에 바닥글 구역이의 스타일 속성을 가져옵니다는 <xref href=&quot;System.Web.UI.WebControls.DataGrid&quot;> </xref> 제어 합니다."
  remarks: "이 속성을 사용 하 여 사용자 지정 스타일의 바닥글을 제공 하는 <xref:System.Web.UI.WebControls.DataGrid>컨트롤.</xref:System.Web.UI.WebControls.DataGrid> 조정할 수 있는 일반 스타일 특성 전경색, 배경색, 글꼴 및 셀 내용 맞춤을 포함 합니다. 모양을 향상 시킬 다른 스타일을 사용 하 여 <xref:System.Web.UI.WebControls.DataGrid>컨트롤.</xref:System.Web.UI.WebControls.DataGrid>       FooterStyle 속성은 <xref:System.Web.UI.WebControls.DataGrid>컨트롤의 스타일 설정을 상속는 <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>속성.</xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> </xref:System.Web.UI.WebControls.DataGrid> 예를 들어 빨강 글꼴을 지정 하는 경우는 <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>속성 FooterStyle 속성에는 빨간색 글꼴로.</xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> 이 옵션을 사용 하면 단일 style 속성을 설정 하 여 컨트롤에 대 한 공통 된 모양을 지정할 수 있습니다. 상속된 된 스타일 설정 FooterStyle 속성을 설정 하 여 재정의할 수 있습니다. 예를 들어에 지정 된 빨간색 글꼴로 재정의 FooterStyle 속성에 대 한 파란색 글꼴을 지정할 수는 <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>속성.</xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>       바닥글 섹션에 대 한 사용자 지정 스타일을 지정 하려면는 `<FooterStyle>` 여는 태그와 닫는 태그 사이 <xref:System.Web.UI.WebControls.DataGrid>컨트롤.</xref:System.Web.UI.WebControls.DataGrid> 다음을 표시 하 여 스타일 특성 `<FooterStyle>` 태그입니다.      > [!NOTE] >는 <xref:System.Web.UI.WebControls.DataGrid.ShowFooter%2A>속성으로 설정 되어 있어야 `true` 표시 되도록이 속성에 대 한.</xref:System.Web.UI.WebControls.DataGrid.ShowFooter%2A>"
  example:
  - "The following code example demonstrates how to use the FooterStyle property to set the background color of the footer section.  \n  \n [!code-cs[classic datagrid.footerstyle example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_200_1.aspx)]\n [!code-vb[classic datagrid.footerstyle example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_200_1.aspx)]  \n  \n [!code-cs[DataGridFooterStyle#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_200_2.aspx)]\n [!code-vb[DataGridFooterStyle#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_200_2.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.TableItemStyle FooterStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "A <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref> 의 바닥글 섹션의 스타일 속성이 들어 있는 개체는 <xref href=&quot;System.Web.UI.WebControls.DataGrid&quot;> </xref> 제어 합니다. 기본값은 빈 <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref> 개체입니다."
  overload: System.Web.UI.WebControls.DataGrid.FooterStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataGrid.HeaderStyle
  id: HeaderStyle
  parent: System.Web.UI.WebControls.DataGrid
  langs:
  - csharp
  name: HeaderStyle
  nameWithType: DataGrid.HeaderStyle
  fullName: System.Web.UI.WebControls.DataGrid.HeaderStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "에 머리글 구역이의 스타일 속성을 가져옵니다는 <xref href=&quot;System.Web.UI.WebControls.DataGrid&quot;> </xref> 제어 합니다."
  remarks: "이 속성을 사용 하 여 사용자 지정 스타일의 머리글 섹션에 제공 하는 <xref:System.Web.UI.WebControls.DataGrid>컨트롤.</xref:System.Web.UI.WebControls.DataGrid> 조정할 수 있는 일반 스타일 특성 전경색, 배경색, 글꼴 및 셀 내용 맞춤을 포함 합니다. 모양을 향상 시킬 다른 스타일을 사용 하 여 <xref:System.Web.UI.WebControls.DataGrid>컨트롤.</xref:System.Web.UI.WebControls.DataGrid>       HeaderStyle 속성은 <xref:System.Web.UI.WebControls.DataGrid>컨트롤의 스타일 설정을 상속는 <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>속성.</xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> </xref:System.Web.UI.WebControls.DataGrid> 예를 들어 빨강 글꼴을 지정 하는 경우는 <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>속성 HeaderStyle 속성에는 빨간색 글꼴로.</xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> 이 옵션을 사용 하면 단일 style 속성을 설정 하 여 컨트롤에 대 한 공통 된 모양을 지정할 수 있습니다. 상속된 된 스타일 설정 HeaderStyle 속성을 설정 하 여 재정의할 수 있습니다. 예를 들어에 지정 된 빨간색 글꼴로 재정의 HeaderStyle 속성에 대 한 파란색 글꼴을 지정할 수는 <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>속성.</xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>       머리글 섹션에 대 한 사용자 지정 스타일을 지정 하려면는 `<HeaderStyle>` 여는 태그와 닫는 태그 사이 <xref:System.Web.UI.WebControls.DataGrid>컨트롤.</xref:System.Web.UI.WebControls.DataGrid> 다음을 표시 하 여 스타일 특성 `<HeaderStyle>` 태그입니다.      > [!NOTE] >는 <xref:System.Web.UI.WebControls.DataGrid.ShowHeader%2A>속성으로 설정 되어 있어야 `true` 표시 되도록이 속성에 대 한.</xref:System.Web.UI.WebControls.DataGrid.ShowHeader%2A>"
  example:
  - "The following code example demonstrates how to use the HeaderStyle property to set the background color of the heading section.  \n  \n [!code-cs[classic datagrid.footerstyle example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1259_1.aspx)]\n [!code-vb[classic datagrid.footerstyle example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1259_1.aspx)]  \n  \n [!code-cs[DataGridFooterStyle#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1259_2.aspx)]\n [!code-vb[DataGridFooterStyle#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1259_2.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.TableItemStyle HeaderStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "A <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref> 에 머리글 구역이의 스타일 속성이 들어 있는 개체는 <xref href=&quot;System.Web.UI.WebControls.DataGrid&quot;> </xref> 제어 합니다. 기본값은 빈 <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref> 개체입니다."
  overload: System.Web.UI.WebControls.DataGrid.HeaderStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataGrid.InitializeItem(System.Web.UI.WebControls.DataGridItem,System.Web.UI.WebControls.DataGridColumn[])
  id: InitializeItem(System.Web.UI.WebControls.DataGridItem,System.Web.UI.WebControls.DataGridColumn[])
  parent: System.Web.UI.WebControls.DataGrid
  langs:
  - csharp
  name: InitializeItem(DataGridItem,DataGridColumn[])
  nameWithType: DataGrid.InitializeItem(DataGridItem,DataGridColumn[])
  fullName: System.Web.UI.WebControls.DataGrid.InitializeItem(DataGridItem,DataGridColumn[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "지정 된 초기화 <xref href=&quot;System.Web.UI.WebControls.DataGridItem&quot;> </xref> 개체입니다."
  remarks: "InitializeItem 메서드는에서 사용 하는 도우미 메서드는 <xref:System.Web.UI.WebControls.DataGrid>으로 지정 된 클래스 <xref:System.Web.UI.WebControls.DataGridItem>개체입니다.</xref:System.Web.UI.WebControls.DataGridItem> </xref:System.Web.UI.WebControls.DataGrid>      > [!NOTE] >이 메서드는 주로 컨트롤 개발자가 사용 됩니다."
  syntax:
    content: protected virtual void InitializeItem (System.Web.UI.WebControls.DataGridItem item, System.Web.UI.WebControls.DataGridColumn[] columns);
    parameters:
    - id: item
      type: System.Web.UI.WebControls.DataGridItem
      description: "<xref href=&quot;System.Web.UI.WebControls.DataGridItem&quot;> </xref> 를 초기화 합니다."
    - id: columns
      type: System.Web.UI.WebControls.DataGridColumn[]
      description: "배열을 <xref href=&quot;System.Web.UI.WebControls.DataGridColumn&quot;> </xref> 의 열이 포함 된 개체 <xref href=&quot;System.Web.UI.WebControls.DataGrid&quot;> </xref> 제어 합니다."
  overload: System.Web.UI.WebControls.DataGrid.InitializeItem*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataGrid.InitializePager(System.Web.UI.WebControls.DataGridItem,System.Int32,System.Web.UI.WebControls.PagedDataSource)
  id: InitializePager(System.Web.UI.WebControls.DataGridItem,System.Int32,System.Web.UI.WebControls.PagedDataSource)
  parent: System.Web.UI.WebControls.DataGrid
  langs:
  - csharp
  name: InitializePager(DataGridItem,Int32,PagedDataSource)
  nameWithType: DataGrid.InitializePager(DataGridItem,Int32,PagedDataSource)
  fullName: System.Web.UI.WebControls.DataGrid.InitializePager(DataGridItem,Int32,PagedDataSource)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "만듭니다는 <xref href=&quot;System.Web.UI.WebControls.DataGridItem&quot;> </xref> 페이징 UI를 포함 하는 개체입니다."
  remarks: "페이징 UI는 단일에 내장 되어 있는 탐색 모음 <xref:System.Web.UI.WebControls.TableCell>의 모든 열에 걸쳐 있는 <xref:System.Web.UI.WebControls.DataGrid>컨트롤.</xref:System.Web.UI.WebControls.DataGrid> </xref:System.Web.UI.WebControls.TableCell> InitializePager 메서드는에서 사용 하는 도우미 메서드는 <xref:System.Web.UI.WebControls.DataGrid>호출기 행을 만들고 클래스.</xref:System.Web.UI.WebControls.DataGrid>      > [!NOTE] >이 메서드는 주로 컨트롤 개발자가 사용 됩니다."
  syntax:
    content: protected virtual void InitializePager (System.Web.UI.WebControls.DataGridItem item, int columnSpan, System.Web.UI.WebControls.PagedDataSource pagedDataSource);
    parameters:
    - id: item
      type: System.Web.UI.WebControls.DataGridItem
      description: "<xref href=&quot;System.Web.UI.WebControls.DataGridItem&quot;> </xref> 페이저가 들어 있는입니다."
    - id: columnSpan
      type: System.Int32
      description: "호출기 확장할 열의 수입니다."
    - id: pagedDataSource
      type: System.Web.UI.WebControls.PagedDataSource
      description: "A <xref href=&quot;System.Web.UI.WebControls.PagedDataSource&quot;> </xref> 호출기에 대 한 속성이 들어 있는입니다."
  overload: System.Web.UI.WebControls.DataGrid.InitializePager*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataGrid.ItemCommand
  id: ItemCommand
  parent: System.Web.UI.WebControls.DataGrid
  langs:
  - csharp
  name: ItemCommand
  nameWithType: DataGrid.ItemCommand
  fullName: System.Web.UI.WebControls.DataGrid.ItemCommand
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "에 있는 단추를 클릭할 때 발생는 <xref href=&quot;System.Web.UI.WebControls.DataGrid&quot;> </xref> 제어 합니다."
  remarks: "모든 단추를 클릭할 때 ItemCommand 이벤트가 발생 된 <xref:System.Web.UI.WebControls.DataGrid>컨트롤.</xref:System.Web.UI.WebControls.DataGrid> 이 이벤트는 같은 추가 사용자 지정 CommandName 값이 있는 단추 컨트롤에서 처리 하는 데 주로 사용 된 <xref:System.Web.UI.WebControls.DataGrid>컨트롤.</xref:System.Web.UI.WebControls.DataGrid>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다."
  example:
  - "The following code example demonstrates how to specify and code a handler for the ItemCommand event to add or remove an item from a shopping cart.  \n  \n [!code-cs[DataGridEdit#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_148_1.aspx)]\n [!code-vb[DataGridEdit#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_148_1.aspx)]  \n  \n [!code-cs[DataGridEdit2#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_148_2.aspx)]\n [!code-vb[DataGridEdit2#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_148_2.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.DataGridCommandEventHandler ItemCommand;
    return:
      type: System.Web.UI.WebControls.DataGridCommandEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataGrid.ItemCreated
  id: ItemCreated
  parent: System.Web.UI.WebControls.DataGrid
  langs:
  - csharp
  name: ItemCreated
  nameWithType: DataGrid.ItemCreated
  fullName: System.Web.UI.WebControls.DataGrid.ItemCreated
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "항목이 서버에서 발생 된 <xref href=&quot;System.Web.UI.WebControls.DataGrid&quot;> </xref> 컨트롤이 만들어집니다."
  remarks: "항목이 ItemCreated 이벤트가 발생는 <xref:System.Web.UI.WebControls.DataGrid>데이터가 컨트롤에 바인딩되는 왕복 중 및 시간에, 컨트롤이 만들어집니다.</xref:System.Web.UI.WebControls.DataGrid>       ItemCreated 이벤트는 내용과에 있는 행의 모양을 제어 하는 데 주로 사용 된 <xref:System.Web.UI.WebControls.DataGrid>컨트롤.</xref:System.Web.UI.WebControls.DataGrid>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다."
  example:
  - "The following code example demonstrates how to specify and code a handler for the ItemCreated event to display the order that items are created in the <xref:System.Web.UI.WebControls.DataGrid> control.  \n  \n [!code-cs[Classic DataGrid.ItemCreated Example#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_12_1.aspx)]\n [!code-vb[Classic DataGrid.ItemCreated Example#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_12_1.aspx)]  \n  \n [!code-vb[DataGridItemCreated#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_12_2.aspx)]\n [!code-cs[DataGridItemCreated#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_12_2.aspx)]  \n  \n [!code-cs[DataGridItemCreated2#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_12_3.aspx)]\n [!code-vb[DataGridItemCreated2#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_12_3.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.DataGridItemEventHandler ItemCreated;
    return:
      type: System.Web.UI.WebControls.DataGridItemEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataGrid.ItemDataBound
  id: ItemDataBound
  parent: System.Web.UI.WebControls.DataGrid
  langs:
  - csharp
  name: ItemDataBound
  nameWithType: DataGrid.ItemDataBound
  fullName: System.Web.UI.WebControls.DataGrid.ItemDataBound
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "항목은 데이터에 바인딩된 후에 발생는 <xref href=&quot;System.Web.UI.WebControls.DataGrid&quot;> </xref> 제어 합니다."
  remarks: "항목 데이터에 바인딩된 후 ItemDataBound 이벤트가 발생 된 <xref:System.Web.UI.WebControls.DataGrid>컨트롤.</xref:System.Web.UI.WebControls.DataGrid> 이 이벤트는 클라이언트에 표시 되기 전에 데이터 항목에 액세스할 수 있는 마지막 기회를 제공 합니다. 이 이벤트는 발생 한 후 데이터 항목은 null이 되어 더 이상 사용할 수 없습니다.       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다."
  example:
  - "The following code example demonstrates how to specify and code a handler for the ItemDataBound event to display the order that items in the <xref:System.Web.UI.WebControls.DataGrid> are data bounded.  \n  \n [!code-vb[Classic DataGrid.ItemDataBound Example#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_14_1.aspx)]\n [!code-cs[Classic DataGrid.ItemDataBound Example#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_14_1.aspx)]  \n  \n [!code-cs[DataGridItemDataBound#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_14_2.aspx)]\n [!code-vb[DataGridItemDataBound#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_14_2.aspx)]  \n  \n [!code-vb[DataGridItemDataBound2#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_14_3.aspx)]\n [!code-cs[DataGridItemDataBound2#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_14_3.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.DataGridItemEventHandler ItemDataBound;
    return:
      type: System.Web.UI.WebControls.DataGridItemEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataGrid.Items
  id: Items
  parent: System.Web.UI.WebControls.DataGrid
  langs:
  - csharp
  name: Items
  nameWithType: DataGrid.Items
  fullName: System.Web.UI.WebControls.DataGrid.Items
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "컬렉션을 가져옵니다 <xref href=&quot;System.Web.UI.WebControls.DataGridItem&quot;> </xref> 의 개별 항목을 나타내는 개체의 <xref href=&quot;System.Web.UI.WebControls.DataGrid&quot;> </xref> 제어 합니다."
  remarks: "Items 컬렉션을 사용 하 여 프로그래밍 방식으로 항목을 제어 하는 <xref:System.Web.UI.WebControls.DataGrid>컨트롤.</xref:System.Web.UI.WebControls.DataGrid> Items 컬렉션에 항목을 컬렉션에 추가 하거나 제거 하는 메서드를 제공 하지 않습니다. 에 대 한 처리기를 제공 하 여 항목의 내용을 제어할 수 있습니다는 <xref:System.Web.UI.WebControls.DataGrid.ItemCreated>이벤트.</xref:System.Web.UI.WebControls.DataGrid.ItemCreated>      > [!NOTE] > 데이터 원본에 연결 하는 항목만 항목 컬렉션에 포함 되어 있습니다. 머리글, 바닥글 및 구분 기호는 컬렉션에 포함 되지 않습니다."
  example:
  - "The following code example demonstrates how to use the Items collection to display the contents of each item in the <xref:System.Web.UI.WebControls.DataGrid> control.  \n  \n [!code-cs[Classic DataGrid.Items Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_967_1.aspx)]\n [!code-vb[Classic DataGrid.Items Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_967_1.aspx)]  \n  \n [!code-cs[DataGridColumnVisible#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_967_2.aspx)]\n [!code-vb[DataGridColumnVisible#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_967_2.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.DataGridItemCollection Items { get; }
    return:
      type: System.Web.UI.WebControls.DataGridItemCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.DataGridItemCollection&quot;> </xref> 의 컬렉션을 포함 하는 <xref href=&quot;System.Web.UI.WebControls.DataGridItem&quot;> </xref> 의 개별 항목을 나타내는 개체의 <xref href=&quot;System.Web.UI.WebControls.DataGrid&quot;> </xref> 제어 합니다."
  overload: System.Web.UI.WebControls.DataGrid.Items*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataGrid.ItemStyle
  id: ItemStyle
  parent: System.Web.UI.WebControls.DataGrid
  langs:
  - csharp
  name: ItemStyle
  nameWithType: DataGrid.ItemStyle
  fullName: System.Web.UI.WebControls.DataGrid.ItemStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "에 있는 항목의 스타일 속성을 가져옵니다는 <xref href=&quot;System.Web.UI.WebControls.DataGrid&quot;> </xref> 제어 합니다."
  remarks: "이 속성을 사용 하 여의 항목에 대 한 사용자 지정 스타일을 제공 하는 <xref:System.Web.UI.WebControls.DataGrid>컨트롤.</xref:System.Web.UI.WebControls.DataGrid> 조정할 수 있는 일반 스타일 특성 전경색, 배경색, 글꼴 및 셀 내용 맞춤을 포함 합니다. 모양을 향상 시킬 다른 스타일을 사용 하 여 <xref:System.Web.UI.WebControls.DataGrid>컨트롤.</xref:System.Web.UI.WebControls.DataGrid>       항목의 스타일 속성은 <xref:System.Web.UI.WebControls.DataGrid>컨트롤 계층을 통해 다른 항목을 하나 style 속성에서 상속 됩니다.</xref:System.Web.UI.WebControls.DataGrid> 계층 구조에서 낮게 설정할 항목 스타일 속성은 계층 구조의 상위 항목 스타일 속성에 의해 상속 됩니다. 예를 들어 빨강 글꼴을 ItemStyle 속성에 대 한을 지정 하면 다른 모든 항목 스타일 속성에는 <xref:System.Web.UI.WebControls.DataGrid>컨트롤에는 빨간색 글꼴로.</xref:System.Web.UI.WebControls.DataGrid> 이 옵션을 사용 하면 단일 항목 style 속성을 설정 하 여 컨트롤에 대 한 공통 된 모양을 지정할 수 있습니다. 스타일 속성을 설정 하 여 계층에 있는 항목 스타일 속성에 대 한 상속 된 스타일 설정을 재정의할 수 있습니다. 예를 들어, 파랑 글꼴을 지정할 수 있습니다는 <xref:System.Web.UI.WebControls.DataGrid.AlternatingItemStyle%2A>ItemStyle 속성에 지정 된 빨간색 글꼴로 재정의 속성.</xref:System.Web.UI.WebControls.DataGrid.AlternatingItemStyle%2A> 다음 표에서 내림차순으로 최고 계층 구조 순서로 나열합니다.      | 우선 순위 | Style 속성 |   |----------------|--------------------|   |&1; | <xref:System.Web.UI.WebControls.DataGrid.EditItemStyle%2A>|   |&2; | <xref:System.Web.UI.WebControls.DataGrid.SelectedItemStyle%2A>|   |&3; | <xref:System.Web.UI.WebControls.DataGrid.AlternatingItemStyle%2A>|   |&4; | ItemStyle |   |&5; | <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>|       항목에 대 한 사용자 지정 스타일을 지정 하는 <xref:System.Web.UI.WebControls.DataGrid>컨트롤은 `<ItemStyle>` 여는 태그와 닫는 태그 사이 <xref:System.Web.UI.WebControls.DataGrid>컨트롤.</xref:System.Web.UI.WebControls.DataGrid> </xref:System.Web.UI.WebControls.DataGrid> </xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> </xref:System.Web.UI.WebControls.DataGrid.AlternatingItemStyle%2A> </xref:System.Web.UI.WebControls.DataGrid.SelectedItemStyle%2A> </xref:System.Web.UI.WebControls.DataGrid.EditItemStyle%2A> 다음을 표시 하 여 스타일 특성 `<ItemStyle>` 태그입니다.       사용할 수도 있습니다는 <xref:System.Web.UI.WebControls.DataGrid.AlternatingItemStyle%2A>있는 대체에 서로 다른 모양을 제공 하는 속성 항목에 <xref:System.Web.UI.WebControls.DataGrid>컨트롤.</xref:System.Web.UI.WebControls.DataGrid> </xref:System.Web.UI.WebControls.DataGrid.AlternatingItemStyle%2A>"
  example:
  - "The following code example demonstrates how to use the ItemStyle property to set the background color of the items in the <xref:System.Web.UI.WebControls.DataGrid> to yellow.  \n  \n [!code-cs[Classic DataGrid.ItemStyle Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_298_1.aspx)]\n [!code-vb[Classic DataGrid.ItemStyle Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_298_1.aspx)]  \n  \n [!code-vb[DataGridItemStyle#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_298_2.aspx)]\n [!code-cs[DataGridItemStyle#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_298_2.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.TableItemStyle ItemStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "A <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref> 개체에 있는 항목의 스타일 속성을 포함 하는 <xref href=&quot;System.Web.UI.WebControls.DataGrid&quot;> </xref> 제어 합니다. 기본값은 빈 <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref> 개체입니다."
  overload: System.Web.UI.WebControls.DataGrid.ItemStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataGrid.LoadViewState(System.Object)
  id: LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.DataGrid
  langs:
  - csharp
  name: LoadViewState(Object)
  nameWithType: DataGrid.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.DataGrid.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "저장 된 상태를 로드는 <xref href=&quot;System.Web.UI.WebControls.DataGrid&quot;> </xref>합니다."
  syntax:
    content: protected override void LoadViewState (object savedState);
    parameters:
    - id: savedState
      type: System.Object
      description: "저장된 된 상태는 <xref href=&quot;System.Web.UI.WebControls.DataGrid&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.DataGrid.LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataGrid.NextPageCommandArgument
  id: NextPageCommandArgument
  parent: System.Web.UI.WebControls.DataGrid
  langs:
  - csharp
  name: NextPageCommandArgument
  nameWithType: DataGrid.NextPageCommandArgument
  fullName: System.Web.UI.WebControls.DataGrid.NextPageCommandArgument
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "다음 명령 인수를 나타냅니다. 이 필드는 읽기 전용입니다."
  remarks: "NextPageCommandArgument 필드를 사용 하 여 다음 명령 인수를 나타냅니다."
  syntax:
    content: public const string NextPageCommandArgument;
    return:
      type: System.String
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataGrid.OnBubbleEvent(System.Object,System.EventArgs)
  id: OnBubbleEvent(System.Object,System.EventArgs)
  parent: System.Web.UI.WebControls.DataGrid
  langs:
  - csharp
  name: OnBubbleEvent(Object,EventArgs)
  nameWithType: DataGrid.OnBubbleEvent(Object,EventArgs)
  fullName: System.Web.UI.WebControls.DataGrid.OnBubbleEvent(Object,EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "컨테이너는 페이지의 UI 서버 컨트롤 계층 구조 내에서 컨트롤에 의해 발생 한 이벤트를 전달 합니다."
  remarks: "컨테이너는 페이지의 UI 서버 컨트롤 계층 구조 내에서 컨트롤에 의해 발생 하는 이벤트를 전달 하려면 OnBubbleEvent 메서드를 사용 합니다.      > [!NOTE] >이 메서드는 주로 컨트롤 개발자가 사용 됩니다."
  syntax:
    content: protected override bool OnBubbleEvent (object source, EventArgs e);
    parameters:
    - id: source
      type: System.Object
      description: "이벤트의 소스입니다."
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>이 메서드는 페이지의 UI 서버 컨트롤 계층 구조; 컨테이너 내의 컨트롤에서 발생 한 이벤트를 전달 하 고 있음을 나타내기 위해 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.DataGrid.OnBubbleEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataGrid.OnCancelCommand(System.Web.UI.WebControls.DataGridCommandEventArgs)
  id: OnCancelCommand(System.Web.UI.WebControls.DataGridCommandEventArgs)
  parent: System.Web.UI.WebControls.DataGrid
  langs:
  - csharp
  name: OnCancelCommand(DataGridCommandEventArgs)
  nameWithType: DataGrid.OnCancelCommand(DataGridCommandEventArgs)
  fullName: System.Web.UI.WebControls.DataGrid.OnCancelCommand(DataGridCommandEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "발생 된 <xref href=&quot;System.Web.UI.WebControls.DataGrid.CancelCommand&quot;> </xref> 이벤트입니다. 이 이벤트에 대 한 사용자 지정 처리기를 제공할 수 있습니다."
  remarks: "OnCancelCommand 메서드를 사용 하 여에 대 한 사용자 지정 처리기를 제공 하는 <xref:System.Web.UI.WebControls.DataGrid.CancelCommand>이벤트.</xref:System.Web.UI.WebControls.DataGrid.CancelCommand>       <xref:System.Web.UI.WebControls.DataGrid.CancelCommand>항목에 대해 취소 단추를 클릭할 때 이벤트가 발생 된 <xref:System.Web.UI.WebControls.DataGrid>컨트롤.</xref:System.Web.UI.WebControls.DataGrid> </xref:System.Web.UI.WebControls.DataGrid.CancelCommand>       에 대 한 일반적인 처리기는 <xref:System.Web.UI.WebControls.DataGrid.CancelCommand>이벤트 설정의 <xref:System.Web.UI.WebControls.DataGrid.EditItemIndex%2A>속성을 `-1` (항목을 선택 취소)를 다음 데이터를 다시 바인딩 횟수와 <xref:System.Web.UI.WebControls.DataGrid>컨트롤.</xref:System.Web.UI.WebControls.DataGrid> </xref:System.Web.UI.WebControls.DataGrid.EditItemIndex%2A> </xref:System.Web.UI.WebControls.DataGrid.CancelCommand>      > [!CAUTION] > 텍스트는 HTML에 표시 되기 전에 인코딩되지는 <xref:System.Web.UI.WebControls.DataGrid>컨트롤.</xref:System.Web.UI.WebControls.DataGrid> 따라서 텍스트에 HTML 태그 내에서 스크립트를 포함 시킬 수 있습니다. 컨트롤에 대 한 값 사용자 입력에 연결 하는 경우에 보안 취약점을 줄이기 위해 값을 확인 해야 합니다.       이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [NIB: 이벤트를 발생 시키는](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)합니다."
  example:
  - "The following code example demonstrates how to specify and code a handler for the <xref:System.Web.UI.WebControls.DataGrid.CancelCommand> event to cancel edits made to an item in the <xref:System.Web.UI.WebControls.DataGrid> control.  \n  \n [!code-cs[DataGridEdit#1](~/add/codesnippet/csharp/51aa2dae-6c09-4eb8-9f08-_1.aspx)]\n [!code-vb[DataGridEdit#1](~/add/codesnippet/visualbasic/51aa2dae-6c09-4eb8-9f08-_1.aspx)]  \n  \n [!code-cs[DataGridEdit2#1](~/add/codesnippet/csharp/51aa2dae-6c09-4eb8-9f08-_2.aspx)]\n [!code-vb[DataGridEdit2#1](~/add/codesnippet/visualbasic/51aa2dae-6c09-4eb8-9f08-_2.aspx)]"
  syntax:
    content: protected virtual void OnCancelCommand (System.Web.UI.WebControls.DataGridCommandEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.DataGridCommandEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.DataGridCommandEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Web.UI.WebControls.DataGrid.OnCancelCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataGrid.OnDeleteCommand(System.Web.UI.WebControls.DataGridCommandEventArgs)
  id: OnDeleteCommand(System.Web.UI.WebControls.DataGridCommandEventArgs)
  parent: System.Web.UI.WebControls.DataGrid
  langs:
  - csharp
  name: OnDeleteCommand(DataGridCommandEventArgs)
  nameWithType: DataGrid.OnDeleteCommand(DataGridCommandEventArgs)
  fullName: System.Web.UI.WebControls.DataGrid.OnDeleteCommand(DataGridCommandEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "발생 된 <xref href=&quot;System.Web.UI.WebControls.DataGrid.DeleteCommand&quot;> </xref> 이벤트입니다. 이 이벤트에 대 한 사용자 지정 처리기를 제공할 수 있습니다."
  remarks: "OnDeleteCommand 메서드를 사용 하 여에 대 한 사용자 지정 처리기를 제공 하는 <xref:System.Web.UI.WebControls.DataGrid.DeleteCommand>이벤트.</xref:System.Web.UI.WebControls.DataGrid.DeleteCommand>       <xref:System.Web.UI.WebControls.DataGrid.DeleteCommand>항목에 대해 삭제 단추를 클릭할 때 이벤트가 발생는 <xref:System.Web.UI.WebControls.DataGrid>컨트롤.</xref:System.Web.UI.WebControls.DataGrid> </xref:System.Web.UI.WebControls.DataGrid.DeleteCommand>       에 대 한 일반적인 처리기는 <xref:System.Web.UI.WebControls.DataGrid.DeleteCommand>이벤트 데이터 원본에서 선택한 항목을 제거 하 고 다음 데이터를 다시 바인딩 횟수는 <xref:System.Web.UI.WebControls.DataGrid>컨트롤.</xref:System.Web.UI.WebControls.DataGrid> </xref:System.Web.UI.WebControls.DataGrid.DeleteCommand>       이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [NIB: 이벤트를 발생 시키는](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)합니다."
  example:
  - "The following code example demonstrates how to specify and code a handler for the <xref:System.Web.UI.WebControls.DataGrid.DeleteCommand> event to delete an item from the <xref:System.Web.UI.WebControls.DataGrid> control.  \n  \n [!code-cs[DataGridEdit#1](~/add/codesnippet/csharp/1890b438-1bae-42af-bde4-_1.aspx)]\n [!code-vb[DataGridEdit#1](~/add/codesnippet/visualbasic/1890b438-1bae-42af-bde4-_1.aspx)]  \n  \n [!code-cs[DataGridEdit2#1](~/add/codesnippet/csharp/1890b438-1bae-42af-bde4-_2.aspx)]\n [!code-vb[DataGridEdit2#1](~/add/codesnippet/visualbasic/1890b438-1bae-42af-bde4-_2.aspx)]"
  syntax:
    content: protected virtual void OnDeleteCommand (System.Web.UI.WebControls.DataGridCommandEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.DataGridCommandEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.DataGridCommandEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Web.UI.WebControls.DataGrid.OnDeleteCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataGrid.OnEditCommand(System.Web.UI.WebControls.DataGridCommandEventArgs)
  id: OnEditCommand(System.Web.UI.WebControls.DataGridCommandEventArgs)
  parent: System.Web.UI.WebControls.DataGrid
  langs:
  - csharp
  name: OnEditCommand(DataGridCommandEventArgs)
  nameWithType: DataGrid.OnEditCommand(DataGridCommandEventArgs)
  fullName: System.Web.UI.WebControls.DataGrid.OnEditCommand(DataGridCommandEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "발생 된 <xref href=&quot;System.Web.UI.WebControls.DataGrid.EditCommand&quot;> </xref> 이벤트입니다. 이 이벤트에 대 한 사용자 지정 처리기를 제공할 수 있습니다."
  remarks: "OnEditCommand 메서드를 사용 하 여에 대 한 사용자 지정 처리기를 제공 하는 <xref:System.Web.UI.WebControls.DataGrid.EditCommand>이벤트.</xref:System.Web.UI.WebControls.DataGrid.EditCommand>       <xref:System.Web.UI.WebControls.DataGrid.EditCommand>항목에 대해 편집 단추를 클릭할 때 이벤트가 발생는 <xref:System.Web.UI.WebControls.DataGrid>컨트롤.</xref:System.Web.UI.WebControls.DataGrid> </xref:System.Web.UI.WebControls.DataGrid.EditCommand>       에 대 한 일반적인 처리기는 <xref:System.Web.UI.WebControls.DataGrid.EditCommand>이벤트 설정의 <xref:System.Web.UI.WebControls.DataGrid.EditItemIndex%2A>속성 선택된 된 행을 다음 데이터를 다시 바인딩 횟수와 <xref:System.Web.UI.WebControls.DataGrid>컨트롤.</xref:System.Web.UI.WebControls.DataGrid> </xref:System.Web.UI.WebControls.DataGrid.EditItemIndex%2A> </xref:System.Web.UI.WebControls.DataGrid.EditCommand>       이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [NIB: 이벤트를 발생 시키는](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)합니다.      > [!CAUTION] > 텍스트는 HTML에 표시 되기 전에 인코딩되지는 <xref:System.Web.UI.WebControls.DataGrid>컨트롤.</xref:System.Web.UI.WebControls.DataGrid> 따라서 텍스트에 HTML 태그 내에서 스크립트를 포함 시킬 수 있습니다. 컨트롤에 대 한 값 사용자 입력에 연결 하는 경우에 보안 취약점을 줄이기 위해 값을 확인 해야 합니다."
  example:
  - "The following code example demonstrates how to specify and code a handler for the <xref:System.Web.UI.WebControls.DataGrid.EditCommand> event to edit an item in the <xref:System.Web.UI.WebControls.DataGrid> control.  \n  \n [!code-cs[DataGridEdit#1](~/add/codesnippet/csharp/b46a6119-1e5d-457c-8ecf-_1.aspx)]\n [!code-vb[DataGridEdit#1](~/add/codesnippet/visualbasic/b46a6119-1e5d-457c-8ecf-_1.aspx)]  \n  \n [!code-cs[DataGridEdit2#1](~/add/codesnippet/csharp/b46a6119-1e5d-457c-8ecf-_2.aspx)]\n [!code-vb[DataGridEdit2#1](~/add/codesnippet/visualbasic/b46a6119-1e5d-457c-8ecf-_2.aspx)]"
  syntax:
    content: protected virtual void OnEditCommand (System.Web.UI.WebControls.DataGridCommandEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.DataGridCommandEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.DataGridCommandEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Web.UI.WebControls.DataGrid.OnEditCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataGrid.OnItemCommand(System.Web.UI.WebControls.DataGridCommandEventArgs)
  id: OnItemCommand(System.Web.UI.WebControls.DataGridCommandEventArgs)
  parent: System.Web.UI.WebControls.DataGrid
  langs:
  - csharp
  name: OnItemCommand(DataGridCommandEventArgs)
  nameWithType: DataGrid.OnItemCommand(DataGridCommandEventArgs)
  fullName: System.Web.UI.WebControls.DataGrid.OnItemCommand(DataGridCommandEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "발생 된 <xref href=&quot;System.Web.UI.WebControls.DataGrid.ItemCommand&quot;> </xref> 이벤트입니다. 이 이벤트에 대 한 사용자 지정 처리기를 제공할 수 있습니다."
  remarks: "OnItemCommand 메서드를 사용 하 여에 대 한 사용자 지정 처리기를 제공 하는 <xref:System.Web.UI.WebControls.DataGrid.ItemCommand>이벤트.</xref:System.Web.UI.WebControls.DataGrid.ItemCommand>       <xref:System.Web.UI.WebControls.DataGrid.ItemCommand>에 있는 단추를 클릭할 때 이벤트가 발생 된 <xref:System.Web.UI.WebControls.DataGrid>컨트롤.</xref:System.Web.UI.WebControls.DataGrid> </xref:System.Web.UI.WebControls.DataGrid.ItemCommand> 이 이벤트는 같은 추가 사용자 지정 CommandName 값이 있는 단추 컨트롤에서 처리 하는 데 주로 사용 된 <xref:System.Web.UI.WebControls.DataGrid>컨트롤.</xref:System.Web.UI.WebControls.DataGrid>       이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [NIB: 이벤트를 발생 시키는](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)합니다."
  example:
  - "The following code example demonstrates how to specify and code a handler for the <xref:System.Web.UI.WebControls.DataGrid.ItemCommand> event to add or remove an item from a shopping cart.  \n  \n [!code-cs[DataGridEdit#1](~/add/codesnippet/csharp/bea05fa3-0074-4a3c-b2d7-_1.aspx)]\n [!code-vb[DataGridEdit#1](~/add/codesnippet/visualbasic/bea05fa3-0074-4a3c-b2d7-_1.aspx)]  \n  \n [!code-cs[DataGridEdit2#1](~/add/codesnippet/csharp/bea05fa3-0074-4a3c-b2d7-_2.aspx)]\n [!code-vb[DataGridEdit2#1](~/add/codesnippet/visualbasic/bea05fa3-0074-4a3c-b2d7-_2.aspx)]"
  syntax:
    content: protected virtual void OnItemCommand (System.Web.UI.WebControls.DataGridCommandEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.DataGridCommandEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.DataGridCommandEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Web.UI.WebControls.DataGrid.OnItemCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataGrid.OnItemCreated(System.Web.UI.WebControls.DataGridItemEventArgs)
  id: OnItemCreated(System.Web.UI.WebControls.DataGridItemEventArgs)
  parent: System.Web.UI.WebControls.DataGrid
  langs:
  - csharp
  name: OnItemCreated(DataGridItemEventArgs)
  nameWithType: DataGrid.OnItemCreated(DataGridItemEventArgs)
  fullName: System.Web.UI.WebControls.DataGrid.OnItemCreated(DataGridItemEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "발생 된 <xref href=&quot;System.Web.UI.WebControls.DataGrid.ItemCreated&quot;> </xref> 이벤트입니다. 이 이벤트에 대 한 사용자 지정 처리기를 제공할 수 있습니다."
  remarks: "OnItemCreated 메서드를 사용 하 여에 대 한 사용자 지정 처리기를 제공 하는 <xref:System.Web.UI.WebControls.DataGrid.ItemCreated>이벤트.</xref:System.Web.UI.WebControls.DataGrid.ItemCreated>       <xref:System.Web.UI.WebControls.DataGrid.ItemCreated>이벤트는 항목에는 <xref:System.Web.UI.WebControls.DataGrid>컨트롤이 만들어지고, 데이터가 컨트롤에 바인딩되는 왕복 중 및 시간에.</xref:System.Web.UI.WebControls.DataGrid> </xref:System.Web.UI.WebControls.DataGrid.ItemCreated>       <xref:System.Web.UI.WebControls.DataGrid.ItemCreated>이벤트는 일반적으로 내용과에 있는 행의 모양을 제어 하는 데 사용 된 <xref:System.Web.UI.WebControls.DataGrid>컨트롤.</xref:System.Web.UI.WebControls.DataGrid> </xref:System.Web.UI.WebControls.DataGrid.ItemCreated>       이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [NIB: 이벤트를 발생 시키는](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)합니다."
  example:
  - "The following code example demonstrates how to specify and code a handler for the <xref:System.Web.UI.WebControls.DataGrid.ItemCreated> event to display the order that items are created in the <xref:System.Web.UI.WebControls.DataGrid> control.  \n  \n [!code-cs[Classic DataGrid.ItemCreated Example#1](~/add/codesnippet/csharp/687770eb-7dd3-4952-ab98-_1.aspx)]\n [!code-vb[Classic DataGrid.ItemCreated Example#1](~/add/codesnippet/visualbasic/687770eb-7dd3-4952-ab98-_1.aspx)]  \n  \n [!code-vb[DataGridItemCreated#1](~/add/codesnippet/visualbasic/687770eb-7dd3-4952-ab98-_2.aspx)]\n [!code-cs[DataGridItemCreated#1](~/add/codesnippet/csharp/687770eb-7dd3-4952-ab98-_2.aspx)]  \n  \n [!code-cs[DataGridItemCreated2#1](~/add/codesnippet/csharp/687770eb-7dd3-4952-ab98-_3.aspx)]\n [!code-vb[DataGridItemCreated2#1](~/add/codesnippet/visualbasic/687770eb-7dd3-4952-ab98-_3.aspx)]"
  syntax:
    content: protected virtual void OnItemCreated (System.Web.UI.WebControls.DataGridItemEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.DataGridItemEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.DataGridItemEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Web.UI.WebControls.DataGrid.OnItemCreated*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataGrid.OnItemDataBound(System.Web.UI.WebControls.DataGridItemEventArgs)
  id: OnItemDataBound(System.Web.UI.WebControls.DataGridItemEventArgs)
  parent: System.Web.UI.WebControls.DataGrid
  langs:
  - csharp
  name: OnItemDataBound(DataGridItemEventArgs)
  nameWithType: DataGrid.OnItemDataBound(DataGridItemEventArgs)
  fullName: System.Web.UI.WebControls.DataGrid.OnItemDataBound(DataGridItemEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "발생 된 <xref href=&quot;System.Web.UI.WebControls.DataGrid.ItemDataBound&quot;> </xref> 이벤트입니다. 이 이벤트에 대 한 사용자 지정 처리기를 제공할 수 있습니다."
  remarks: "OnItemDataBound 메서드를 사용 하 여에 대 한 사용자 지정 처리기를 제공 하는 <xref:System.Web.UI.WebControls.DataGrid.ItemDataBound>이벤트.</xref:System.Web.UI.WebControls.DataGrid.ItemDataBound>       <xref:System.Web.UI.WebControls.DataGrid.ItemDataBound>항목 데이터에 바인딩된 후에 이벤트가 발생 된 <xref:System.Web.UI.WebControls.DataGrid>컨트롤.</xref:System.Web.UI.WebControls.DataGrid> </xref:System.Web.UI.WebControls.DataGrid.ItemDataBound> 이 이벤트는 클라이언트에 표시 되기 전에 데이터 항목에 액세스할 수 있는 마지막 기회를 제공 합니다. 이 이벤트는 발생 한 후 데이터 항목은 null이 되어 더 이상 사용할 수 없습니다.       이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [NIB: 이벤트를 발생 시키는](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)합니다."
  example:
  - "The following code example demonstrates how to specify and code a handler for the <xref:System.Web.UI.WebControls.DataGrid.ItemDataBound> event to display the order that items in the <xref:System.Web.UI.WebControls.DataGrid> are data bounded.  \n  \n [!code-vb[Classic DataGrid.ItemDataBound Example#1](~/add/codesnippet/visualbasic/434d1d8c-b319-467b-b3ec-_1.aspx)]\n [!code-cs[Classic DataGrid.ItemDataBound Example#1](~/add/codesnippet/csharp/434d1d8c-b319-467b-b3ec-_1.aspx)]  \n  \n [!code-cs[DataGridItemDataBound#1](~/add/codesnippet/csharp/434d1d8c-b319-467b-b3ec-_2.aspx)]\n [!code-vb[DataGridItemDataBound#1](~/add/codesnippet/visualbasic/434d1d8c-b319-467b-b3ec-_2.aspx)]  \n  \n [!code-vb[DataGridItemDataBound2#1](~/add/codesnippet/visualbasic/434d1d8c-b319-467b-b3ec-_3.aspx)]\n [!code-cs[DataGridItemDataBound2#1](~/add/codesnippet/csharp/434d1d8c-b319-467b-b3ec-_3.aspx)]"
  syntax:
    content: protected virtual void OnItemDataBound (System.Web.UI.WebControls.DataGridItemEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.DataGridItemEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.DataGridItemEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Web.UI.WebControls.DataGrid.OnItemDataBound*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataGrid.OnPageIndexChanged(System.Web.UI.WebControls.DataGridPageChangedEventArgs)
  id: OnPageIndexChanged(System.Web.UI.WebControls.DataGridPageChangedEventArgs)
  parent: System.Web.UI.WebControls.DataGrid
  langs:
  - csharp
  name: OnPageIndexChanged(DataGridPageChangedEventArgs)
  nameWithType: DataGrid.OnPageIndexChanged(DataGridPageChangedEventArgs)
  fullName: System.Web.UI.WebControls.DataGrid.OnPageIndexChanged(DataGridPageChangedEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "발생 된 <xref href=&quot;System.Web.UI.WebControls.DataGrid.PageIndexChanged&quot;> </xref> 이벤트입니다. 이 이벤트에 대 한 사용자 지정 처리기를 제공할 수 있습니다."
  remarks: "OnPageIndexChanged 메서드를 사용 하 여에 대 한 사용자 지정 처리기를 제공 하는 <xref:System.Web.UI.WebControls.DataGrid.PageIndexChanged>이벤트.</xref:System.Web.UI.WebControls.DataGrid.PageIndexChanged>       <xref:System.Web.UI.WebControls.DataGrid.PageIndexChanged>페이지 선택 요소 중 하나를 클릭 하면 이벤트가 발생 합니다.</xref:System.Web.UI.WebControls.DataGrid.PageIndexChanged>       에 대 한 일반적인 처리기는 <xref:System.Web.UI.WebControls.DataGrid.PageIndexChanged>이벤트 설정의 <xref:System.Web.UI.WebControls.DataGrid.CurrentPageIndex%2A>속성을 인덱스의 페이지를 표시 한 다음 사용 하는 <xref:System.Web.UI.WebControls.BaseDataList.DataBind%2A>메서드 데이터를 바인딩하는 <xref:System.Web.UI.WebControls.DataGrid>컨트롤.</xref:System.Web.UI.WebControls.DataGrid> </xref:System.Web.UI.WebControls.BaseDataList.DataBind%2A> </xref:System.Web.UI.WebControls.DataGrid.CurrentPageIndex%2A> </xref:System.Web.UI.WebControls.DataGrid.PageIndexChanged>      > [!NOTE] > 이벤트 처리기는 <xref:System.Web.UI.WebControls.DataGridPageChangedEventArgs>개체를 매개 변수로.</xref:System.Web.UI.WebControls.DataGridPageChangedEventArgs> 사용할 수는 <xref:System.Web.UI.WebControls.DataGridPageChangedEventArgs.NewPageIndex%2A>속성의 페이지 선택 요소에서 사용자가 선택한 페이지의 인덱스를 확인 하려면이 매개 변수는 <xref:System.Web.UI.WebControls.DataGrid>컨트롤.</xref:System.Web.UI.WebControls.DataGrid> </xref:System.Web.UI.WebControls.DataGridPageChangedEventArgs.NewPageIndex%2A>       이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [NIB: 이벤트를 발생 시키는](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)합니다."
  example:
  - "The following code example demonstrates how to specify and code a handler for the <xref:System.Web.UI.WebControls.DataGrid.PageIndexChanged> event. It displays pages on the <xref:System.Web.UI.WebControls.DataGrid> control in 10-item increments.  \n  \n [!code-vb[DataGridAllowPaging#1](~/add/codesnippet/visualbasic/77c294cf-ca10-45a1-858b-_1.aspx)]\n [!code-cs[DataGridAllowPaging#1](~/add/codesnippet/csharp/77c294cf-ca10-45a1-858b-_1.aspx)]  \n  \n [!code-cs[PageIndexChanged#1](~/add/codesnippet/csharp/77c294cf-ca10-45a1-858b-_2.aspx)]\n [!code-vb[PageIndexChanged#1](~/add/codesnippet/visualbasic/77c294cf-ca10-45a1-858b-_2.aspx)]"
  syntax:
    content: protected virtual void OnPageIndexChanged (System.Web.UI.WebControls.DataGridPageChangedEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.DataGridPageChangedEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.DataGridPageChangedEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Web.UI.WebControls.DataGrid.OnPageIndexChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataGrid.OnSortCommand(System.Web.UI.WebControls.DataGridSortCommandEventArgs)
  id: OnSortCommand(System.Web.UI.WebControls.DataGridSortCommandEventArgs)
  parent: System.Web.UI.WebControls.DataGrid
  langs:
  - csharp
  name: OnSortCommand(DataGridSortCommandEventArgs)
  nameWithType: DataGrid.OnSortCommand(DataGridSortCommandEventArgs)
  fullName: System.Web.UI.WebControls.DataGrid.OnSortCommand(DataGridSortCommandEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "발생 된 <xref href=&quot;System.Web.UI.WebControls.DataGrid.SortCommand&quot;> </xref> 이벤트입니다. 이 이벤트에 대 한 사용자 지정 처리기를 제공할 수 있습니다."
  remarks: "OnSortCommand 메서드를 사용 하 여에 대 한 사용자 지정 처리기를 제공 하는 <xref:System.Web.UI.WebControls.DataGrid.SortCommand>이벤트.</xref:System.Web.UI.WebControls.DataGrid.SortCommand>       <xref:System.Web.UI.WebControls.DataGrid.SortCommand>열이 정렬 때 이벤트가 발생 합니다.</xref:System.Web.UI.WebControls.DataGrid.SortCommand>       에 대 한 일반적인 처리기는 <xref:System.Web.UI.WebControls.DataGrid.SortCommand>이벤트는 목록을 정렬 하 고 다음 데이터를 다시 바인딩 횟수는 <xref:System.Web.UI.WebControls.DataGrid>컨트롤.</xref:System.Web.UI.WebControls.DataGrid> </xref:System.Web.UI.WebControls.DataGrid.SortCommand>       이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [NIB: 이벤트를 발생 시키는](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)합니다."
  example:
  - "The following code example demonstrates how to specify and code a handler for the <xref:System.Web.UI.WebControls.DataGrid.SortCommand> event to sort a <xref:System.Web.UI.WebControls.DataGrid> control.  \n  \n [!code-cs[DataGridAllowSorting#1](~/add/codesnippet/csharp/067f6c32-8382-41e3-abbc-_1.aspx)]\n [!code-vb[DataGridAllowSorting#1](~/add/codesnippet/visualbasic/067f6c32-8382-41e3-abbc-_1.aspx)]  \n  \n [!code-cs[DataGridSortCommand#1](~/add/codesnippet/csharp/067f6c32-8382-41e3-abbc-_2.aspx)]\n [!code-vb[DataGridSortCommand#1](~/add/codesnippet/visualbasic/067f6c32-8382-41e3-abbc-_2.aspx)]"
  syntax:
    content: protected virtual void OnSortCommand (System.Web.UI.WebControls.DataGridSortCommandEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.DataGridSortCommandEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.DataGridSortCommandEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Web.UI.WebControls.DataGrid.OnSortCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataGrid.OnUpdateCommand(System.Web.UI.WebControls.DataGridCommandEventArgs)
  id: OnUpdateCommand(System.Web.UI.WebControls.DataGridCommandEventArgs)
  parent: System.Web.UI.WebControls.DataGrid
  langs:
  - csharp
  name: OnUpdateCommand(DataGridCommandEventArgs)
  nameWithType: DataGrid.OnUpdateCommand(DataGridCommandEventArgs)
  fullName: System.Web.UI.WebControls.DataGrid.OnUpdateCommand(DataGridCommandEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "발생 된 <xref href=&quot;System.Web.UI.WebControls.DataGrid.UpdateCommand&quot;> </xref> 이벤트입니다. 이 이벤트에 대 한 사용자 지정 처리기를 제공할 수 있습니다."
  remarks: "OnUpdateCommand 메서드를 사용 하 여에 대 한 사용자 지정 처리기를 제공 하는 <xref:System.Web.UI.WebControls.DataGrid.UpdateCommand>이벤트.</xref:System.Web.UI.WebControls.DataGrid.UpdateCommand>       <xref:System.Web.UI.WebControls.DataGrid.UpdateCommand>항목에 대 한 [업데이트] 단추를 클릭할 때 이벤트가 발생 합니다.</xref:System.Web.UI.WebControls.DataGrid.UpdateCommand>       에 대 한 일반적인 처리기는 <xref:System.Web.UI.WebControls.DataGrid.UpdateCommand>집합 데이터를 업데이트 하는 이벤트는 <xref:System.Web.UI.WebControls.DataGrid.EditItemIndex%2A>속성을-1 (항목이 선택 취소), 다음 데이터를 다시 바인딩 횟수와 <xref:System.Web.UI.WebControls.DataGrid>컨트롤.</xref:System.Web.UI.WebControls.DataGrid> </xref:System.Web.UI.WebControls.DataGrid.EditItemIndex%2A> </xref:System.Web.UI.WebControls.DataGrid.UpdateCommand>      > [!CAUTION] > 텍스트는 HTML에 표시 되기 전에 인코딩되지는 <xref:System.Web.UI.WebControls.DataGrid>컨트롤.</xref:System.Web.UI.WebControls.DataGrid> 컨트롤에 대 한 값 사용자 입력에 연결 하는 경우에 보안 취약점을 줄이기 위해 값을 확인 해야 합니다.       이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [NIB: 이벤트를 발생 시키는](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)합니다.       OnUpdateCommand 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  example:
  - "The following code example demonstrates how to specify and code a handler for the <xref:System.Web.UI.WebControls.DataGrid.UpdateCommand> event to update the values of an item in the <xref:System.Web.UI.WebControls.DataGrid> control to new values specified by the user.  \n  \n [!code-cs[DataGridEdit#1](~/add/codesnippet/csharp/cabcc454-95b4-44c8-9505-_1.aspx)]\n [!code-vb[DataGridEdit#1](~/add/codesnippet/visualbasic/cabcc454-95b4-44c8-9505-_1.aspx)]  \n  \n [!code-cs[DataGridEdit2#1](~/add/codesnippet/csharp/cabcc454-95b4-44c8-9505-_2.aspx)]\n [!code-vb[DataGridEdit2#1](~/add/codesnippet/visualbasic/cabcc454-95b4-44c8-9505-_2.aspx)]"
  syntax:
    content: protected virtual void OnUpdateCommand (System.Web.UI.WebControls.DataGridCommandEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.DataGridCommandEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.DataGridCommandEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Web.UI.WebControls.DataGrid.OnUpdateCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataGrid.PageCommandName
  id: PageCommandName
  parent: System.Web.UI.WebControls.DataGrid
  langs:
  - csharp
  name: PageCommandName
  nameWithType: DataGrid.PageCommandName
  fullName: System.Web.UI.WebControls.DataGrid.PageCommandName
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "페이지 명령 이름을 나타냅니다. 이 필드는 읽기 전용입니다."
  remarks: "PageCommandName 필드를 사용 하 여 페이지 명령 이름을 나타냅니다."
  syntax:
    content: public const string PageCommandName;
    return:
      type: System.String
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataGrid.PageCount
  id: PageCount
  parent: System.Web.UI.WebControls.DataGrid
  langs:
  - csharp
  name: PageCount
  nameWithType: DataGrid.PageCount
  fullName: System.Web.UI.WebControls.DataGrid.PageCount
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "에 항목을 표시 하는 데 필요한 페이지의 총 수를 가져옵니다는 <xref href=&quot;System.Web.UI.WebControls.DataGrid&quot;> </xref> 제어 합니다."
  remarks: "이 속성을 사용 하 여 프로그래밍 방식으로에 항목을 표시 하는 데 필요한 페이지 수를 결정 하는 <xref:System.Web.UI.WebControls.DataGrid>컨트롤.</xref:System.Web.UI.WebControls.DataGrid> 이 속성은 경우에만 사용된 된 <xref:System.Web.UI.WebControls.DataGrid.AllowPaging%2A>속성이 `true`.</xref:System.Web.UI.WebControls.DataGrid.AllowPaging%2A>"
  example:
  - "The following code example demonstrates how to use the PageCount property to determine the number of pages required to display the items in the <xref:System.Web.UI.WebControls.DataGrid> control.  \n  \n [!code-cs[Classic DataGrid.PageCount Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_640_1.aspx)]\n [!code-vb[Classic DataGrid.PageCount Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_640_1.aspx)]"
  syntax:
    content: public int PageCount { get; }
    return:
      type: System.Int32
      description: "에 항목을 표시 하는 데 필요한 페이지의 총 수는 <xref href=&quot;System.Web.UI.WebControls.DataGrid&quot;> </xref> 제어 합니다."
  overload: System.Web.UI.WebControls.DataGrid.PageCount*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataGrid.PageIndexChanged
  id: PageIndexChanged
  parent: System.Web.UI.WebControls.DataGrid
  langs:
  - csharp
  name: PageIndexChanged
  nameWithType: DataGrid.PageIndexChanged
  fullName: System.Web.UI.WebControls.DataGrid.PageIndexChanged
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "페이지 선택 요소 중 하나를 클릭할 때 발생 합니다."
  remarks: "PageIndexChanged 이벤트는 페이지 선택 요소 중 하나를 클릭할 때 발생 합니다.       PageIndexChanged 이벤트 집합에 대 한 일반적인 처리기는 <xref:System.Web.UI.WebControls.DataGrid.CurrentPageIndex%2A>속성을 인덱스의 페이지를 표시 한 다음 사용 하는 <xref:System.Web.UI.WebControls.BaseDataList.DataBind%2A>메서드 데이터를 바인딩하는 <xref:System.Web.UI.WebControls.DataGrid>컨트롤.</xref:System.Web.UI.WebControls.DataGrid> </xref:System.Web.UI.WebControls.BaseDataList.DataBind%2A> </xref:System.Web.UI.WebControls.DataGrid.CurrentPageIndex%2A>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다."
  example:
  - "The following code example demonstrates how to specify and code a handler for the PageIndexChanged event. It displays pages on the <xref:System.Web.UI.WebControls.DataGrid> control in 10-item increments.  \n  \n [!code-vb[DataGridAllowPaging#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_145_1.aspx)]\n [!code-cs[DataGridAllowPaging#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_145_1.aspx)]  \n  \n [!code-cs[PageIndexChanged#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_145_2.aspx)]\n [!code-vb[PageIndexChanged#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_145_2.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.DataGridPageChangedEventHandler PageIndexChanged;
    return:
      type: System.Web.UI.WebControls.DataGridPageChangedEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataGrid.PagerStyle
  id: PagerStyle
  parent: System.Web.UI.WebControls.DataGrid
  langs:
  - csharp
  name: PagerStyle
  nameWithType: DataGrid.PagerStyle
  fullName: System.Web.UI.WebControls.DataGrid.PagerStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "페이징 섹션의 스타일 속성을 가져옵니다는 <xref href=&quot;System.Web.UI.WebControls.DataGrid&quot;> </xref> 제어 합니다."
  remarks: "이 속성을 사용 하 여의 페이징 섹션에 대 한 사용자 지정 스타일을 제공 하는 <xref:System.Web.UI.WebControls.DataGrid>컨트롤.</xref:System.Web.UI.WebControls.DataGrid> 조정할 수 있는 일반 스타일 특성 전경색, 배경색, 글꼴 및 셀 내용 맞춤을 포함 합니다. 모양을 향상 시킬 다른 스타일을 사용 하 여 <xref:System.Web.UI.WebControls.DataGrid>컨트롤.</xref:System.Web.UI.WebControls.DataGrid>       페이징 섹션에 대 한 사용자 지정 스타일을 지정 하려면는 `<PagerStyle>` 여는 태그와 닫는 태그 사이 <xref:System.Web.UI.WebControls.DataGrid>컨트롤.</xref:System.Web.UI.WebControls.DataGrid> 다음을 표시 하 여 스타일 특성 `<PagerStyle>` 태그입니다."
  example:
  - "The following code example demonstrates how to use the PagerStyle property to specify a custom style for the page selection elements of the <xref:System.Web.UI.WebControls.DataGrid> control.  \n  \n [!code-vb[Classic DataGrid.PagerStyle Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1086_1.aspx)]\n [!code-cs[Classic DataGrid.PagerStyle Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1086_1.aspx)]  \n  \n [!code-cs[DataGridPagerStyle#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1086_2.aspx)]\n [!code-vb[DataGridPagerStyle#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1086_2.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.DataGridPagerStyle PagerStyle { get; }
    return:
      type: System.Web.UI.WebControls.DataGridPagerStyle
      description: "A <xref href=&quot;System.Web.UI.WebControls.DataGridPagerStyle&quot;> </xref> 의 페이징 섹션의 스타일 속성이 들어 있는 개체는 <xref href=&quot;System.Web.UI.WebControls.DataGrid&quot;> </xref> 제어 합니다. 기본값은 빈 <xref href=&quot;System.Web.UI.WebControls.DataGridPagerStyle&quot;> </xref> 개체입니다."
  overload: System.Web.UI.WebControls.DataGrid.PagerStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataGrid.PageSize
  id: PageSize
  parent: System.Web.UI.WebControls.DataGrid
  langs:
  - csharp
  name: PageSize
  nameWithType: DataGrid.PageSize
  fullName: System.Web.UI.WebControls.DataGrid.PageSize
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "단일 페이지에 표시할 항목의 수를 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.WebControls.DataGrid&quot;> </xref> 제어 합니다."
  remarks: "단일 페이지에 표시할 항목의 수를 지정 하려면이 속성을 사용 하 여 <xref:System.Web.UI.WebControls.DataGrid>컨트롤.</xref:System.Web.UI.WebControls.DataGrid> <xref:System.Web.UI.WebControls.DataGrid.AllowPaging%2A>속성으로 설정 되어 있어야 `true` 이 속성에 대 한 영향을 줄 수 있습니다.</xref:System.Web.UI.WebControls.DataGrid.AllowPaging%2A>"
  example:
  - "The following code example demonstrates how to use the PageSize property to specify that five items are displayed on a single page of the <xref:System.Web.UI.WebControls.DataGrid> control.  \n  \n [!code-cs[Classic DataGrid.PageCount Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_220_1.aspx)]\n [!code-vb[Classic DataGrid.PageCount Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_220_1.aspx)]  \n  \n [!code-vb[DataGridPageSize#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_220_2.aspx)]\n [!code-cs[DataGridPageSize#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_220_2.aspx)]"
  syntax:
    content: public virtual int PageSize { get; set; }
    return:
      type: System.Int32
      description: "단일 페이지에 표시할 항목의 수는 <xref href=&quot;System.Web.UI.WebControls.DataGrid&quot;> </xref> 제어 합니다. 기본값은 10입니다."
  overload: System.Web.UI.WebControls.DataGrid.PageSize*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "지정된 된 페이지 크기를 1 보다 작습니다."
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataGrid.PrepareControlHierarchy
  id: PrepareControlHierarchy
  parent: System.Web.UI.WebControls.DataGrid
  langs:
  - csharp
  name: PrepareControlHierarchy()
  nameWithType: DataGrid.PrepareControlHierarchy()
  fullName: System.Web.UI.WebControls.DataGrid.PrepareControlHierarchy()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "이 컨트롤 계층 구조 설정 <xref href=&quot;System.Web.UI.WebControls.DataGrid&quot;> </xref> 제어 합니다."
  remarks: "PrepareControlHierarchy 메서드는 호출 하는 도우미 메서드입니다는 <xref:System.Web.UI.WebControls.DataGrid>컨트롤의 컨트롤 계층 구조를 설정 하는 <xref:System.Web.UI.WebControls.DataGrid>컨트롤 렌더링 되기 전에 제어.</xref:System.Web.UI.WebControls.DataGrid> </xref:System.Web.UI.WebControls.DataGrid>"
  syntax:
    content: protected override void PrepareControlHierarchy ();
    parameters: []
  overload: System.Web.UI.WebControls.DataGrid.PrepareControlHierarchy*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataGrid.PrevPageCommandArgument
  id: PrevPageCommandArgument
  parent: System.Web.UI.WebControls.DataGrid
  langs:
  - csharp
  name: PrevPageCommandArgument
  nameWithType: DataGrid.PrevPageCommandArgument
  fullName: System.Web.UI.WebControls.DataGrid.PrevPageCommandArgument
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "이전 명령 인수를 나타냅니다. 이 필드는 읽기 전용입니다."
  remarks: "PrevPageCommandArgument 필드를 사용 하 여 이전 명령 인수를 나타냅니다."
  syntax:
    content: public const string PrevPageCommandArgument;
    return:
      type: System.String
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataGrid.SaveViewState
  id: SaveViewState
  parent: System.Web.UI.WebControls.DataGrid
  langs:
  - csharp
  name: SaveViewState()
  nameWithType: DataGrid.SaveViewState()
  fullName: System.Web.UI.WebControls.DataGrid.SaveViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "현재 상태를 저장 된 <xref href=&quot;System.Web.UI.WebControls.DataGrid&quot;> </xref>합니다."
  syntax:
    content: protected override object SaveViewState ();
    parameters: []
    return:
      type: System.Object
      description: "저장된 된 상태는 <xref href=&quot;System.Web.UI.WebControls.DataGrid&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.DataGrid.SaveViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataGrid.SelectCommandName
  id: SelectCommandName
  parent: System.Web.UI.WebControls.DataGrid
  langs:
  - csharp
  name: SelectCommandName
  nameWithType: DataGrid.SelectCommandName
  fullName: System.Web.UI.WebControls.DataGrid.SelectCommandName
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Select 명령 이름을 나타냅니다. 이 필드는 읽기 전용입니다."
  remarks: "Select 명령 이름을 나타내는 데 SelectCommandName 필드를 사용 합니다."
  syntax:
    content: public const string SelectCommandName;
    return:
      type: System.String
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataGrid.SelectedIndex
  id: SelectedIndex
  parent: System.Web.UI.WebControls.DataGrid
  langs:
  - csharp
  name: SelectedIndex
  nameWithType: DataGrid.SelectedIndex
  fullName: System.Web.UI.WebControls.DataGrid.SelectedIndex
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "선택한 항목의 인덱스를 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.WebControls.DataGrid&quot;> </xref> 제어 합니다."
  remarks: "SelectedIndex 속성을 사용 하 여에서 사용자가 선택한 항목의 인덱스를 결정 하는 <xref:System.Web.UI.WebControls.DataGrid>컨트롤.</xref:System.Web.UI.WebControls.DataGrid> 선택한 항목을 프로그래밍 방식으로 지정 하려면이 속성을 사용할 수도 있습니다는 <xref:System.Web.UI.WebControls.DataGrid>컨트롤.</xref:System.Web.UI.WebControls.DataGrid>       에 있는 항목을 선택 취소 하 고 <xref:System.Web.UI.WebControls.DataGrid>제어,이 속성을-1로 설정 합니다.</xref:System.Web.UI.WebControls.DataGrid>"
  example:
  - "The following code example demonstrates how to use the SelectedIndex property to determine the index number of the selected item in the <xref:System.Web.UI.WebControls.DataGrid> control. It also shows how to select and deselect an item programmatically.  \n  \n [!code-vb[Classic DataGrid.SelectedIndex Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_583_1.aspx)]\n [!code-cs[Classic DataGrid.SelectedIndex Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_583_1.aspx)]"
  syntax:
    content: public virtual int SelectedIndex { get; set; }
    return:
      type: System.Int32
      description: "선택한 항목의 인덱스는 <xref href=&quot;System.Web.UI.WebControls.DataGrid&quot;> </xref> 제어 합니다."
  overload: System.Web.UI.WebControls.DataGrid.SelectedIndex*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "지정된 된 인덱스-1 보다 작은 경우"
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataGrid.SelectedItem
  id: SelectedItem
  parent: System.Web.UI.WebControls.DataGrid
  langs:
  - csharp
  name: SelectedItem
  nameWithType: DataGrid.SelectedItem
  fullName: System.Web.UI.WebControls.DataGrid.SelectedItem
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "가져옵니다는 <xref href=&quot;System.Web.UI.WebControls.DataGridItem&quot;> </xref> 에서 선택한 항목을 나타내는 개체의 <xref href=&quot;System.Web.UI.WebControls.DataGrid&quot;> </xref> 제어 합니다."
  remarks: "SelectedItem 속성을 사용 하 여 가져오려는 <xref:System.Web.UI.WebControls.DataGridItem>에서 선택한 항목을 나타내는 개체는 <xref:System.Web.UI.WebControls.DataGrid>컨트롤.</xref:System.Web.UI.WebControls.DataGrid> </xref:System.Web.UI.WebControls.DataGridItem> 그런 다음이 개체 선택한 항목의 속성에 액세스 데 사용할 수 있습니다."
  example:
  - "The following code example demonstrates how to use the <xref:System.Web.UI.WebControls.DataList.SelectedItem%2A> property to access the properties of the selected item in the <xref:System.Web.UI.WebControls.DataList> control.  \n  \n [!code-vb[Classic DataGrid.SelectedIndex Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_976_1.aspx)]\n [!code-cs[Classic DataGrid.SelectedIndex Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_976_1.aspx)]  \n  \n [!code-vb[BaseDataListSelectedIndexChanged#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_976_2.aspx)]\n [!code-cs[BaseDataListSelectedIndexChanged#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_976_2.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.DataGridItem SelectedItem { get; }
    return:
      type: System.Web.UI.WebControls.DataGridItem
      description: "A <xref href=&quot;System.Web.UI.WebControls.DataGridItem&quot;> </xref> 에서 선택한 항목을 나타내는 개체의 <xref href=&quot;System.Web.UI.WebControls.DataGrid&quot;> </xref> 제어 합니다."
  overload: System.Web.UI.WebControls.DataGrid.SelectedItem*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataGrid.SelectedItemStyle
  id: SelectedItemStyle
  parent: System.Web.UI.WebControls.DataGrid
  langs:
  - csharp
  name: SelectedItemStyle
  nameWithType: DataGrid.SelectedItemStyle
  fullName: System.Web.UI.WebControls.DataGrid.SelectedItemStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "현재 선택한 항목의 스타일 속성을 가져옵니다는 <xref href=&quot;System.Web.UI.WebControls.DataGrid&quot;> </xref> 제어 합니다."
  remarks: "SelectedItemStyle 속성을 사용 하 여 선택한 항목에 대 한 사용자 지정 스타일을 제공 하는 <xref:System.Web.UI.WebControls.DataGrid>컨트롤.</xref:System.Web.UI.WebControls.DataGrid> 조정할 수 있는 일반 스타일 특성 전경색, 배경색, 글꼴 및 셀 내용 맞춤을 포함 합니다. 모양을 향상 시킬 다른 스타일을 사용 하 여 <xref:System.Web.UI.WebControls.DataGrid>컨트롤.</xref:System.Web.UI.WebControls.DataGrid>       항목의 스타일 속성은 <xref:System.Web.UI.WebControls.DataGrid>컨트롤 계층을 통해 다른 항목을 하나 style 속성에서 상속 됩니다.</xref:System.Web.UI.WebControls.DataGrid> 계층 구조에서 낮게 설정할 항목 스타일 속성은 계층 구조의 상위 항목 스타일 속성에 의해 상속 됩니다. 예를 들어 빨강 글꼴을 지정 하는 경우는 <xref:System.Web.UI.WebControls.DataGrid.ItemStyle%2A>속성에서 다른 모든 항목 스타일 속성은 <xref:System.Web.UI.WebControls.DataGrid>컨트롤에는 빨간색 글꼴로.</xref:System.Web.UI.WebControls.DataGrid> </xref:System.Web.UI.WebControls.DataGrid.ItemStyle%2A> 이 옵션을 사용 하면 단일 항목 style 속성을 설정 하 여 컨트롤에 대 한 공통 된 모양을 지정할 수 있습니다. 스타일 속성을 설정 하 여 계층에 있는 항목 스타일 속성에 대 한 상속 된 스타일 설정을 재정의할 수 있습니다. 예를 들어, 파랑 글꼴을 지정할 수 있습니다는 <xref:System.Web.UI.WebControls.DataGrid.AlternatingItemStyle%2A>속성을 재정의에 지정 된 예는 <xref:System.Web.UI.WebControls.DataGrid.ItemStyle%2A>속성.</xref:System.Web.UI.WebControls.DataGrid.ItemStyle%2A> </xref:System.Web.UI.WebControls.DataGrid.AlternatingItemStyle%2A> 다음 표에서 내림차순으로 최고 계층 구조 순서로 나열합니다.      | 우선 순위 | Style 속성 |   |----------------|--------------------|   |&1; | <xref:System.Web.UI.WebControls.DataGrid.EditItemStyle%2A>|   |&2; | SelectedItemStyle |   |&3; | <xref:System.Web.UI.WebControls.DataGrid.AlternatingItemStyle%2A>|   |&4; | <xref:System.Web.UI.WebControls.DataGrid.ItemStyle%2A>|   |&5; | <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>|       선택한 항목에 대 한 사용자 지정 스타일을 지정 하려면는 `<SelectedItemStyle>` 여는 태그와 닫는 태그 사이 <xref:System.Web.UI.WebControls.DataGrid>컨트롤.</xref:System.Web.UI.WebControls.DataGrid> </xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> </xref:System.Web.UI.WebControls.DataGrid.ItemStyle%2A> </xref:System.Web.UI.WebControls.DataGrid.AlternatingItemStyle%2A> </xref:System.Web.UI.WebControls.DataGrid.EditItemStyle%2A> 다음을 표시 하 여 스타일 특성 `<SelectedItemStyle>` 태그입니다."
  example:
  - "The following code example demonstrates how to use SelectedItemStyle property to set the background color of the selected item in the <xref:System.Web.UI.WebControls.DataGrid> control to yellow.  \n  \n [!code-vb[Classic DataGrid.SelectedIndex Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_197_1.aspx)]\n [!code-cs[Classic DataGrid.SelectedIndex Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_197_1.aspx)]  \n  \n [!code-vb[DataGridSelectedItemStyle#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_197_2.aspx)]\n [!code-cs[DataGridSelectedItemStyle#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_197_2.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.TableItemStyle SelectedItemStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "A <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref> 개체에서 현재 선택한 항목의 스타일 속성을 포함 하는 <xref href=&quot;System.Web.UI.WebControls.DataGrid&quot;> </xref> 제어 합니다. 기본값은 빈 <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref> 개체입니다."
  overload: System.Web.UI.WebControls.DataGrid.SelectedItemStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataGrid.ShowFooter
  id: ShowFooter
  parent: System.Web.UI.WebControls.DataGrid
  langs:
  - csharp
  name: ShowFooter
  nameWithType: DataGrid.ShowFooter
  fullName: System.Web.UI.WebControls.DataGrid.ShowFooter
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "바닥글에 표시 되는지 여부를 나타내는 값을 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.WebControls.DataGrid&quot;> </xref> 제어 합니다."
  remarks: "이 속성을 설정 `true` 에 바닥글을 표시 하는 <xref:System.Web.UI.WebControls.DataGrid>컨트롤.</xref:System.Web.UI.WebControls.DataGrid> 바닥글의 모양은 사용 하 여 제어 되는 <xref:System.Web.UI.WebControls.DataGrid.FooterStyle%2A>속성.</xref:System.Web.UI.WebControls.DataGrid.FooterStyle%2A>"
  example:
  - "The following code example demonstrates how to use the ShowFooter property to display the footer in the <xref:System.Web.UI.WebControls.DataGrid> control.  \n  \n [!code-vb[Classic DataGrid.ShowFooter Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_541_1.aspx)]\n [!code-cs[Classic DataGrid.ShowFooter Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_541_1.aspx)]  \n  \n [!code-vb[DataGridShowHeader#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_541_2.aspx)]\n [!code-cs[DataGridShowHeader#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_541_2.aspx)]"
  syntax:
    content: public virtual bool ShowFooter { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>바닥글을 표시 하려면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.DataGrid.ShowFooter*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataGrid.ShowHeader
  id: ShowHeader
  parent: System.Web.UI.WebControls.DataGrid
  langs:
  - csharp
  name: ShowHeader
  nameWithType: DataGrid.ShowHeader
  fullName: System.Web.UI.WebControls.DataGrid.ShowHeader
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "헤더에 표시 되는지 여부를 나타내는 값을 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.WebControls.DataGrid&quot;> </xref> 제어 합니다."
  remarks: "이 속성을 설정 `true` <xref:System.Web.UI.WebControls.DataGrid>.</xref:System.Web.UI.WebControls.DataGrid> 머리글을 표시 하려면 머리글의 모양은 사용 하 여 제어 되는 <xref:System.Web.UI.WebControls.DataGrid.HeaderStyle%2A>속성.</xref:System.Web.UI.WebControls.DataGrid.HeaderStyle%2A>"
  example:
  - "The following code example demonstrates how to use the ShowHeader property to hide the header on the <xref:System.Web.UI.WebControls.DataGrid> control.  \n  \n [!code-vb[Classic DataGrid.ShowHeader Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_893_1.aspx)]\n [!code-cs[Classic DataGrid.ShowHeader Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_893_1.aspx)]  \n  \n [!code-vb[DataGridShowHeader#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_893_2.aspx)]\n [!code-cs[DataGridShowHeader#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_893_2.aspx)]"
  syntax:
    content: public virtual bool ShowHeader { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>헤더를 표시 하려면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.DataGrid.ShowHeader*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataGrid.SortCommand
  id: SortCommand
  parent: System.Web.UI.WebControls.DataGrid
  langs:
  - csharp
  name: SortCommand
  nameWithType: DataGrid.SortCommand
  fullName: System.Web.UI.WebControls.DataGrid.SortCommand
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "열이 정렬 될 때 발생 합니다."
  remarks: "SortCommand 이벤트는 열이 정렬 될 때 발생 합니다.       SortCommand 이벤트에 대 한 일반적인 처리기는 목록을 정렬 하 고 다음 데이터를 다시 바인딩 횟수는 <xref:System.Web.UI.WebControls.DataGrid>컨트롤.</xref:System.Web.UI.WebControls.DataGrid>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다."
  example:
  - "The following code example demonstrates how to specify and code a handler for the SortCommand event to sort a <xref:System.Web.UI.WebControls.DataGrid> control.  \n  \n [!code-cs[DataGridAllowSorting#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_20_1.aspx)]\n [!code-vb[DataGridAllowSorting#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_20_1.aspx)]  \n  \n [!code-cs[DataGridSortCommand#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_20_2.aspx)]\n [!code-vb[DataGridSortCommand#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_20_2.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.DataGridSortCommandEventHandler SortCommand;
    return:
      type: System.Web.UI.WebControls.DataGridSortCommandEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataGrid.SortCommandName
  id: SortCommandName
  parent: System.Web.UI.WebControls.DataGrid
  langs:
  - csharp
  name: SortCommandName
  nameWithType: DataGrid.SortCommandName
  fullName: System.Web.UI.WebControls.DataGrid.SortCommandName
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "정렬 명령 이름을 나타냅니다. 이 필드는 읽기 전용입니다."
  remarks: "SortCommandName 필드를 사용 하 여 정렬 명령 이름을 나타냅니다."
  syntax:
    content: public const string SortCommandName;
    return:
      type: System.String
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataGrid.TagKey
  id: TagKey
  parent: System.Web.UI.WebControls.DataGrid
  langs:
  - csharp
  name: TagKey
  nameWithType: DataGrid.TagKey
  fullName: System.Web.UI.WebControls.DataGrid.TagKey
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "가져옵니다는 <xref href=&quot;System.Web.UI.HtmlTextWriterTag&quot;> </xref> 에 대 한 값은 <xref href=&quot;System.Web.UI.WebControls.DataGrid&quot;> </xref> 제어 합니다."
  remarks: "TagKey 속성에 대 한 적절 한 HTML 태그를 작성 하기 위한 출력 스트림의 사용 하면는 <xref:System.Web.UI.WebControls.DataGrid>컨트롤.</xref:System.Web.UI.WebControls.DataGrid>"
  syntax:
    content: protected override System.Web.UI.HtmlTextWriterTag TagKey { get; }
    return:
      type: System.Web.UI.HtmlTextWriterTag
      description: "항상 반환 <xref uid=&quot;langword_csharp_HtmlTextWriterTag.Table&quot; name=&quot;HtmlTextWriterTag.Table&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.DataGrid.TagKey*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataGrid.TrackViewState
  id: TrackViewState
  parent: System.Web.UI.WebControls.DataGrid
  langs:
  - csharp
  name: TrackViewState()
  nameWithType: DataGrid.TrackViewState()
  fullName: System.Web.UI.WebControls.DataGrid.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "컨트롤 뷰 상태의 일환으로 컨트롤의 변경 내용을 추적 하 고 저장을 시작 하려면 시작 위치를 표시 합니다."
  syntax:
    content: protected override void TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.DataGrid.TrackViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataGrid.UpdateCommand
  id: UpdateCommand
  parent: System.Web.UI.WebControls.DataGrid
  langs:
  - csharp
  name: UpdateCommand
  nameWithType: DataGrid.UpdateCommand
  fullName: System.Web.UI.WebControls.DataGrid.UpdateCommand
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "항목에 대해 업데이트 단추를 클릭할 때 발생는 <xref href=&quot;System.Web.UI.WebControls.DataGrid&quot;> </xref> 제어 합니다."
  remarks: "UpdateCommand 이벤트는 항목에 대 한 [업데이트] 단추를 클릭할 때 발생 합니다.       표준 처리기 UpdateCommand 이벤트 데이터를 업데이트에 대 한 설정의 <xref:System.Web.UI.WebControls.DataGrid.EditItemIndex%2A>속성을 `-1` (항목의 선택을 취소) 하려면, 다음 데이터를 다시 바인딩 횟수와 <xref:System.Web.UI.WebControls.DataGrid>컨트롤.</xref:System.Web.UI.WebControls.DataGrid> </xref:System.Web.UI.WebControls.DataGrid.EditItemIndex%2A>      > [!CAUTION] > 텍스트는 HTML에 표시 되기 전에 인코딩되지는 <xref:System.Web.UI.WebControls.DataGrid>컨트롤.</xref:System.Web.UI.WebControls.DataGrid> 따라서 텍스트에 HTML 태그 내에서 스크립트를 포함 시킬 수 있습니다. 컨트롤에 대 한 값 사용자 입력에 연결 하는 경우에 보안 취약점을 줄이기 위해 값을 확인 해야 합니다.       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다."
  example:
  - "The following code example demonstrates how to specify and code a handler for the UpdateCommand event to update the values of an item in the <xref:System.Web.UI.WebControls.DataGrid> control to new values specified by the user.  \n  \n [!code-cs[DataGridEdit#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_117_1.aspx)]\n [!code-vb[DataGridEdit#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_117_1.aspx)]  \n  \n [!code-cs[DataGridEdit2#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_117_2.aspx)]\n [!code-vb[DataGridEdit2#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_117_2.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.DataGridCommandEventHandler UpdateCommand;
    return:
      type: System.Web.UI.WebControls.DataGridCommandEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataGrid.UpdateCommandName
  id: UpdateCommandName
  parent: System.Web.UI.WebControls.DataGrid
  langs:
  - csharp
  name: UpdateCommandName
  nameWithType: DataGrid.UpdateCommandName
  fullName: System.Web.UI.WebControls.DataGrid.UpdateCommandName
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "업데이트 명령 이름을 나타냅니다. 이 필드는 읽기 전용입니다."
  remarks: "UpdateCommandName 필드를 사용 하 여 Update 명령 이름을 나타냅니다."
  syntax:
    content: public const string UpdateCommandName;
    return:
      type: System.String
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataGrid.VirtualItemCount
  id: VirtualItemCount
  parent: System.Web.UI.WebControls.DataGrid
  langs:
  - csharp
  name: VirtualItemCount
  nameWithType: DataGrid.VirtualItemCount
  fullName: System.Web.UI.WebControls.DataGrid.VirtualItemCount
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "가상의 항목 수를 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.WebControls.DataGrid&quot;> </xref> 사용자 지정 페이징을 사용 되는 경우를 제어 합니다."
  remarks: "이 속성을 사용 하 여 가상의 항목 수를 지정 하는 <xref:System.Web.UI.WebControls.DataGrid>사용자 지정 페이징을 사용 되는 경우를 제어 합니다.</xref:System.Web.UI.WebControls.DataGrid> 이 속성은 경우에만 사용된 된 <xref:System.Web.UI.WebControls.DataGrid.AllowCustomPaging%2A>속성이 `true`.</xref:System.Web.UI.WebControls.DataGrid.AllowCustomPaging%2A>       경우는 <xref:System.Web.UI.WebControls.DataGrid.AllowCustomPaging%2A>속성이로 설정 되어 `true`에 있는 모든 항목을 표시 하는 데 필요한 페이지 수는 <xref:System.Web.UI.WebControls.DataGrid>컨트롤의 값을 기반으로 계산 되는 <xref:System.Web.UI.WebControls.DataGrid.PageSize%2A>및 VirtualItemCount 속성.</xref:System.Web.UI.WebControls.DataGrid.PageSize%2A> </xref:System.Web.UI.WebControls.DataGrid> </xref:System.Web.UI.WebControls.DataGrid.AllowCustomPaging%2A>       경우는 <xref:System.Web.UI.WebControls.DataGrid.AllowCustomPaging%2A>속성이로 설정 되어 `false`에 표시 된 페이지 수는 <xref:System.Web.UI.WebControls.DataGrid>컨트롤의 값을 기반으로 계산 되는 <xref:System.Web.UI.WebControls.DataGrid.PageSize%2A>속성과 데이터 원본에 있는 항목의 총 수입니다.</xref:System.Web.UI.WebControls.DataGrid.PageSize%2A> </xref:System.Web.UI.WebControls.DataGrid> </xref:System.Web.UI.WebControls.DataGrid.AllowCustomPaging%2A>"
  example:
  - "The following code example demonstrates how to use the VirtualItemCount property to specify the total number of items in the <xref:System.Web.UI.WebControls.DataGrid> control when custom paging is used.  \n  \n [!code-cs[DataGridCustomPaging#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_635_1.aspx)]\n [!code-vb[DataGridCustomPaging#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_635_1.aspx)]"
  syntax:
    content: public virtual int VirtualItemCount { get; set; }
    return:
      type: System.Int32
      description: "가상 항목의 개수는 <xref href=&quot;System.Web.UI.WebControls.DataGrid&quot;> </xref> 사용자 지정 페이징을 사용 되는 경우를 제어 합니다."
  overload: System.Web.UI.WebControls.DataGrid.VirtualItemCount*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "지정된 된 값은 음수입니다."
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.BaseDataList
  isExternal: false
  name: System.Web.UI.WebControls.BaseDataList
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Web.UI.WebControls.DataGrid.#ctor
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: DataGrid()
  nameWithType: DataGrid.DataGrid()
  fullName: System.Web.UI.WebControls.DataGrid.DataGrid()
- uid: System.Web.UI.WebControls.DataGrid.AllowCustomPaging
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: AllowCustomPaging
  nameWithType: DataGrid.AllowCustomPaging
  fullName: System.Web.UI.WebControls.DataGrid.AllowCustomPaging
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.DataGrid.AllowPaging
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: AllowPaging
  nameWithType: DataGrid.AllowPaging
  fullName: System.Web.UI.WebControls.DataGrid.AllowPaging
- uid: System.Web.UI.WebControls.DataGrid.AllowSorting
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: AllowSorting
  nameWithType: DataGrid.AllowSorting
  fullName: System.Web.UI.WebControls.DataGrid.AllowSorting
- uid: System.Web.UI.WebControls.DataGrid.AlternatingItemStyle
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: AlternatingItemStyle
  nameWithType: DataGrid.AlternatingItemStyle
  fullName: System.Web.UI.WebControls.DataGrid.AlternatingItemStyle
- uid: System.Web.UI.WebControls.TableItemStyle
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TableItemStyle
  nameWithType: TableItemStyle
  fullName: System.Web.UI.WebControls.TableItemStyle
- uid: System.Web.UI.WebControls.DataGrid.AutoGenerateColumns
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: AutoGenerateColumns
  nameWithType: DataGrid.AutoGenerateColumns
  fullName: System.Web.UI.WebControls.DataGrid.AutoGenerateColumns
- uid: System.Web.UI.WebControls.DataGrid.BackImageUrl
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: BackImageUrl
  nameWithType: DataGrid.BackImageUrl
  fullName: System.Web.UI.WebControls.DataGrid.BackImageUrl
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.DataGrid.CancelCommand
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: CancelCommand
  nameWithType: DataGrid.CancelCommand
  fullName: System.Web.UI.WebControls.DataGrid.CancelCommand
- uid: System.Web.UI.WebControls.DataGridCommandEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataGridCommandEventHandler
  nameWithType: DataGridCommandEventHandler
  fullName: System.Web.UI.WebControls.DataGridCommandEventHandler
- uid: System.Web.UI.WebControls.DataGrid.CancelCommandName
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: CancelCommandName
  nameWithType: DataGrid.CancelCommandName
  fullName: System.Web.UI.WebControls.DataGrid.CancelCommandName
- uid: System.Web.UI.WebControls.DataGrid.Columns
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: Columns
  nameWithType: DataGrid.Columns
  fullName: System.Web.UI.WebControls.DataGrid.Columns
- uid: System.Web.UI.WebControls.DataGridColumnCollection
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataGridColumnCollection
  nameWithType: DataGridColumnCollection
  fullName: System.Web.UI.WebControls.DataGridColumnCollection
- uid: System.Web.UI.WebControls.DataGrid.CreateColumnSet(System.Web.UI.WebControls.PagedDataSource,System.Boolean)
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: CreateColumnSet(PagedDataSource,Boolean)
  nameWithType: DataGrid.CreateColumnSet(PagedDataSource,Boolean)
  fullName: System.Web.UI.WebControls.DataGrid.CreateColumnSet(PagedDataSource,Boolean)
- uid: System.Collections.ArrayList
  parent: System.Collections
  isExternal: false
  name: ArrayList
  nameWithType: ArrayList
  fullName: System.Collections.ArrayList
- uid: System.Web.UI.WebControls.PagedDataSource
  parent: System.Web.UI.WebControls
  isExternal: false
  name: PagedDataSource
  nameWithType: PagedDataSource
  fullName: System.Web.UI.WebControls.PagedDataSource
- uid: System.Web.UI.WebControls.DataGrid.CreateControlHierarchy(System.Boolean)
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: CreateControlHierarchy(Boolean)
  nameWithType: DataGrid.CreateControlHierarchy(Boolean)
  fullName: System.Web.UI.WebControls.DataGrid.CreateControlHierarchy(Boolean)
- uid: System.Web.UI.WebControls.DataGrid.CreateControlStyle
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: CreateControlStyle()
  nameWithType: DataGrid.CreateControlStyle()
  fullName: System.Web.UI.WebControls.DataGrid.CreateControlStyle()
- uid: System.Web.UI.WebControls.Style
  parent: System.Web.UI.WebControls
  isExternal: false
  name: Style
  nameWithType: Style
  fullName: System.Web.UI.WebControls.Style
- uid: System.Web.UI.WebControls.DataGrid.CreateItem(System.Int32,System.Int32,System.Web.UI.WebControls.ListItemType)
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: CreateItem(Int32,Int32,ListItemType)
  nameWithType: DataGrid.CreateItem(Int32,Int32,ListItemType)
  fullName: System.Web.UI.WebControls.DataGrid.CreateItem(Int32,Int32,ListItemType)
- uid: System.Web.UI.WebControls.DataGridItem
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataGridItem
  nameWithType: DataGridItem
  fullName: System.Web.UI.WebControls.DataGridItem
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.ListItemType
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ListItemType
  nameWithType: ListItemType
  fullName: System.Web.UI.WebControls.ListItemType
- uid: System.Web.UI.WebControls.DataGrid.CurrentPageIndex
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: CurrentPageIndex
  nameWithType: DataGrid.CurrentPageIndex
  fullName: System.Web.UI.WebControls.DataGrid.CurrentPageIndex
- uid: System.Web.UI.WebControls.DataGrid.DeleteCommand
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: DeleteCommand
  nameWithType: DataGrid.DeleteCommand
  fullName: System.Web.UI.WebControls.DataGrid.DeleteCommand
- uid: System.Web.UI.WebControls.DataGrid.DeleteCommandName
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: DeleteCommandName
  nameWithType: DataGrid.DeleteCommandName
  fullName: System.Web.UI.WebControls.DataGrid.DeleteCommandName
- uid: System.Web.UI.WebControls.DataGrid.EditCommand
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: EditCommand
  nameWithType: DataGrid.EditCommand
  fullName: System.Web.UI.WebControls.DataGrid.EditCommand
- uid: System.Web.UI.WebControls.DataGrid.EditCommandName
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: EditCommandName
  nameWithType: DataGrid.EditCommandName
  fullName: System.Web.UI.WebControls.DataGrid.EditCommandName
- uid: System.Web.UI.WebControls.DataGrid.EditItemIndex
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: EditItemIndex
  nameWithType: DataGrid.EditItemIndex
  fullName: System.Web.UI.WebControls.DataGrid.EditItemIndex
- uid: System.Web.UI.WebControls.DataGrid.EditItemStyle
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: EditItemStyle
  nameWithType: DataGrid.EditItemStyle
  fullName: System.Web.UI.WebControls.DataGrid.EditItemStyle
- uid: System.Web.UI.WebControls.DataGrid.FooterStyle
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: FooterStyle
  nameWithType: DataGrid.FooterStyle
  fullName: System.Web.UI.WebControls.DataGrid.FooterStyle
- uid: System.Web.UI.WebControls.DataGrid.HeaderStyle
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: HeaderStyle
  nameWithType: DataGrid.HeaderStyle
  fullName: System.Web.UI.WebControls.DataGrid.HeaderStyle
- uid: System.Web.UI.WebControls.DataGrid.InitializeItem(System.Web.UI.WebControls.DataGridItem,System.Web.UI.WebControls.DataGridColumn[])
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: InitializeItem(DataGridItem,DataGridColumn[])
  nameWithType: DataGrid.InitializeItem(DataGridItem,DataGridColumn[])
  fullName: System.Web.UI.WebControls.DataGrid.InitializeItem(DataGridItem,DataGridColumn[])
- uid: System.Web.UI.WebControls.DataGridColumn[]
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataGridColumn
  nameWithType: DataGridColumn
  fullName: System.Web.UI.WebControls.DataGridColumn[]
  spec.csharp:
  - uid: System.Web.UI.WebControls.DataGridColumn
    name: DataGridColumn
    nameWithType: DataGridColumn
    fullName: DataGridColumn[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.UI.WebControls.DataGrid.InitializePager(System.Web.UI.WebControls.DataGridItem,System.Int32,System.Web.UI.WebControls.PagedDataSource)
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: InitializePager(DataGridItem,Int32,PagedDataSource)
  nameWithType: DataGrid.InitializePager(DataGridItem,Int32,PagedDataSource)
  fullName: System.Web.UI.WebControls.DataGrid.InitializePager(DataGridItem,Int32,PagedDataSource)
- uid: System.Web.UI.WebControls.DataGrid.ItemCommand
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: ItemCommand
  nameWithType: DataGrid.ItemCommand
  fullName: System.Web.UI.WebControls.DataGrid.ItemCommand
- uid: System.Web.UI.WebControls.DataGrid.ItemCreated
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: ItemCreated
  nameWithType: DataGrid.ItemCreated
  fullName: System.Web.UI.WebControls.DataGrid.ItemCreated
- uid: System.Web.UI.WebControls.DataGridItemEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataGridItemEventHandler
  nameWithType: DataGridItemEventHandler
  fullName: System.Web.UI.WebControls.DataGridItemEventHandler
- uid: System.Web.UI.WebControls.DataGrid.ItemDataBound
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: ItemDataBound
  nameWithType: DataGrid.ItemDataBound
  fullName: System.Web.UI.WebControls.DataGrid.ItemDataBound
- uid: System.Web.UI.WebControls.DataGrid.Items
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: Items
  nameWithType: DataGrid.Items
  fullName: System.Web.UI.WebControls.DataGrid.Items
- uid: System.Web.UI.WebControls.DataGridItemCollection
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataGridItemCollection
  nameWithType: DataGridItemCollection
  fullName: System.Web.UI.WebControls.DataGridItemCollection
- uid: System.Web.UI.WebControls.DataGrid.ItemStyle
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: ItemStyle
  nameWithType: DataGrid.ItemStyle
  fullName: System.Web.UI.WebControls.DataGrid.ItemStyle
- uid: System.Web.UI.WebControls.DataGrid.LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: LoadViewState(Object)
  nameWithType: DataGrid.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.DataGrid.LoadViewState(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.DataGrid.NextPageCommandArgument
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: NextPageCommandArgument
  nameWithType: DataGrid.NextPageCommandArgument
  fullName: System.Web.UI.WebControls.DataGrid.NextPageCommandArgument
- uid: System.Web.UI.WebControls.DataGrid.OnBubbleEvent(System.Object,System.EventArgs)
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: OnBubbleEvent(Object,EventArgs)
  nameWithType: DataGrid.OnBubbleEvent(Object,EventArgs)
  fullName: System.Web.UI.WebControls.DataGrid.OnBubbleEvent(Object,EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.WebControls.DataGrid.OnCancelCommand(System.Web.UI.WebControls.DataGridCommandEventArgs)
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: OnCancelCommand(DataGridCommandEventArgs)
  nameWithType: DataGrid.OnCancelCommand(DataGridCommandEventArgs)
  fullName: System.Web.UI.WebControls.DataGrid.OnCancelCommand(DataGridCommandEventArgs)
- uid: System.Web.UI.WebControls.DataGridCommandEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataGridCommandEventArgs
  nameWithType: DataGridCommandEventArgs
  fullName: System.Web.UI.WebControls.DataGridCommandEventArgs
- uid: System.Web.UI.WebControls.DataGrid.OnDeleteCommand(System.Web.UI.WebControls.DataGridCommandEventArgs)
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: OnDeleteCommand(DataGridCommandEventArgs)
  nameWithType: DataGrid.OnDeleteCommand(DataGridCommandEventArgs)
  fullName: System.Web.UI.WebControls.DataGrid.OnDeleteCommand(DataGridCommandEventArgs)
- uid: System.Web.UI.WebControls.DataGrid.OnEditCommand(System.Web.UI.WebControls.DataGridCommandEventArgs)
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: OnEditCommand(DataGridCommandEventArgs)
  nameWithType: DataGrid.OnEditCommand(DataGridCommandEventArgs)
  fullName: System.Web.UI.WebControls.DataGrid.OnEditCommand(DataGridCommandEventArgs)
- uid: System.Web.UI.WebControls.DataGrid.OnItemCommand(System.Web.UI.WebControls.DataGridCommandEventArgs)
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: OnItemCommand(DataGridCommandEventArgs)
  nameWithType: DataGrid.OnItemCommand(DataGridCommandEventArgs)
  fullName: System.Web.UI.WebControls.DataGrid.OnItemCommand(DataGridCommandEventArgs)
- uid: System.Web.UI.WebControls.DataGrid.OnItemCreated(System.Web.UI.WebControls.DataGridItemEventArgs)
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: OnItemCreated(DataGridItemEventArgs)
  nameWithType: DataGrid.OnItemCreated(DataGridItemEventArgs)
  fullName: System.Web.UI.WebControls.DataGrid.OnItemCreated(DataGridItemEventArgs)
- uid: System.Web.UI.WebControls.DataGridItemEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataGridItemEventArgs
  nameWithType: DataGridItemEventArgs
  fullName: System.Web.UI.WebControls.DataGridItemEventArgs
- uid: System.Web.UI.WebControls.DataGrid.OnItemDataBound(System.Web.UI.WebControls.DataGridItemEventArgs)
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: OnItemDataBound(DataGridItemEventArgs)
  nameWithType: DataGrid.OnItemDataBound(DataGridItemEventArgs)
  fullName: System.Web.UI.WebControls.DataGrid.OnItemDataBound(DataGridItemEventArgs)
- uid: System.Web.UI.WebControls.DataGrid.OnPageIndexChanged(System.Web.UI.WebControls.DataGridPageChangedEventArgs)
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: OnPageIndexChanged(DataGridPageChangedEventArgs)
  nameWithType: DataGrid.OnPageIndexChanged(DataGridPageChangedEventArgs)
  fullName: System.Web.UI.WebControls.DataGrid.OnPageIndexChanged(DataGridPageChangedEventArgs)
- uid: System.Web.UI.WebControls.DataGridPageChangedEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataGridPageChangedEventArgs
  nameWithType: DataGridPageChangedEventArgs
  fullName: System.Web.UI.WebControls.DataGridPageChangedEventArgs
- uid: System.Web.UI.WebControls.DataGrid.OnSortCommand(System.Web.UI.WebControls.DataGridSortCommandEventArgs)
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: OnSortCommand(DataGridSortCommandEventArgs)
  nameWithType: DataGrid.OnSortCommand(DataGridSortCommandEventArgs)
  fullName: System.Web.UI.WebControls.DataGrid.OnSortCommand(DataGridSortCommandEventArgs)
- uid: System.Web.UI.WebControls.DataGridSortCommandEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataGridSortCommandEventArgs
  nameWithType: DataGridSortCommandEventArgs
  fullName: System.Web.UI.WebControls.DataGridSortCommandEventArgs
- uid: System.Web.UI.WebControls.DataGrid.OnUpdateCommand(System.Web.UI.WebControls.DataGridCommandEventArgs)
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: OnUpdateCommand(DataGridCommandEventArgs)
  nameWithType: DataGrid.OnUpdateCommand(DataGridCommandEventArgs)
  fullName: System.Web.UI.WebControls.DataGrid.OnUpdateCommand(DataGridCommandEventArgs)
- uid: System.Web.UI.WebControls.DataGrid.PageCommandName
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: PageCommandName
  nameWithType: DataGrid.PageCommandName
  fullName: System.Web.UI.WebControls.DataGrid.PageCommandName
- uid: System.Web.UI.WebControls.DataGrid.PageCount
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: PageCount
  nameWithType: DataGrid.PageCount
  fullName: System.Web.UI.WebControls.DataGrid.PageCount
- uid: System.Web.UI.WebControls.DataGrid.PageIndexChanged
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: PageIndexChanged
  nameWithType: DataGrid.PageIndexChanged
  fullName: System.Web.UI.WebControls.DataGrid.PageIndexChanged
- uid: System.Web.UI.WebControls.DataGridPageChangedEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataGridPageChangedEventHandler
  nameWithType: DataGridPageChangedEventHandler
  fullName: System.Web.UI.WebControls.DataGridPageChangedEventHandler
- uid: System.Web.UI.WebControls.DataGrid.PagerStyle
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: PagerStyle
  nameWithType: DataGrid.PagerStyle
  fullName: System.Web.UI.WebControls.DataGrid.PagerStyle
- uid: System.Web.UI.WebControls.DataGridPagerStyle
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataGridPagerStyle
  nameWithType: DataGridPagerStyle
  fullName: System.Web.UI.WebControls.DataGridPagerStyle
- uid: System.Web.UI.WebControls.DataGrid.PageSize
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: PageSize
  nameWithType: DataGrid.PageSize
  fullName: System.Web.UI.WebControls.DataGrid.PageSize
- uid: System.Web.UI.WebControls.DataGrid.PrepareControlHierarchy
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: PrepareControlHierarchy()
  nameWithType: DataGrid.PrepareControlHierarchy()
  fullName: System.Web.UI.WebControls.DataGrid.PrepareControlHierarchy()
- uid: System.Web.UI.WebControls.DataGrid.PrevPageCommandArgument
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: PrevPageCommandArgument
  nameWithType: DataGrid.PrevPageCommandArgument
  fullName: System.Web.UI.WebControls.DataGrid.PrevPageCommandArgument
- uid: System.Web.UI.WebControls.DataGrid.SaveViewState
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: SaveViewState()
  nameWithType: DataGrid.SaveViewState()
  fullName: System.Web.UI.WebControls.DataGrid.SaveViewState()
- uid: System.Web.UI.WebControls.DataGrid.SelectCommandName
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: SelectCommandName
  nameWithType: DataGrid.SelectCommandName
  fullName: System.Web.UI.WebControls.DataGrid.SelectCommandName
- uid: System.Web.UI.WebControls.DataGrid.SelectedIndex
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: SelectedIndex
  nameWithType: DataGrid.SelectedIndex
  fullName: System.Web.UI.WebControls.DataGrid.SelectedIndex
- uid: System.Web.UI.WebControls.DataGrid.SelectedItem
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: SelectedItem
  nameWithType: DataGrid.SelectedItem
  fullName: System.Web.UI.WebControls.DataGrid.SelectedItem
- uid: System.Web.UI.WebControls.DataGrid.SelectedItemStyle
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: SelectedItemStyle
  nameWithType: DataGrid.SelectedItemStyle
  fullName: System.Web.UI.WebControls.DataGrid.SelectedItemStyle
- uid: System.Web.UI.WebControls.DataGrid.ShowFooter
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: ShowFooter
  nameWithType: DataGrid.ShowFooter
  fullName: System.Web.UI.WebControls.DataGrid.ShowFooter
- uid: System.Web.UI.WebControls.DataGrid.ShowHeader
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: ShowHeader
  nameWithType: DataGrid.ShowHeader
  fullName: System.Web.UI.WebControls.DataGrid.ShowHeader
- uid: System.Web.UI.WebControls.DataGrid.SortCommand
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: SortCommand
  nameWithType: DataGrid.SortCommand
  fullName: System.Web.UI.WebControls.DataGrid.SortCommand
- uid: System.Web.UI.WebControls.DataGridSortCommandEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataGridSortCommandEventHandler
  nameWithType: DataGridSortCommandEventHandler
  fullName: System.Web.UI.WebControls.DataGridSortCommandEventHandler
- uid: System.Web.UI.WebControls.DataGrid.SortCommandName
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: SortCommandName
  nameWithType: DataGrid.SortCommandName
  fullName: System.Web.UI.WebControls.DataGrid.SortCommandName
- uid: System.Web.UI.WebControls.DataGrid.TagKey
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: TagKey
  nameWithType: DataGrid.TagKey
  fullName: System.Web.UI.WebControls.DataGrid.TagKey
- uid: System.Web.UI.HtmlTextWriterTag
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriterTag
  nameWithType: HtmlTextWriterTag
  fullName: System.Web.UI.HtmlTextWriterTag
- uid: System.Web.UI.WebControls.DataGrid.TrackViewState
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: TrackViewState()
  nameWithType: DataGrid.TrackViewState()
  fullName: System.Web.UI.WebControls.DataGrid.TrackViewState()
- uid: System.Web.UI.WebControls.DataGrid.UpdateCommand
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: UpdateCommand
  nameWithType: DataGrid.UpdateCommand
  fullName: System.Web.UI.WebControls.DataGrid.UpdateCommand
- uid: System.Web.UI.WebControls.DataGrid.UpdateCommandName
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: UpdateCommandName
  nameWithType: DataGrid.UpdateCommandName
  fullName: System.Web.UI.WebControls.DataGrid.UpdateCommandName
- uid: System.Web.UI.WebControls.DataGrid.VirtualItemCount
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: VirtualItemCount
  nameWithType: DataGrid.VirtualItemCount
  fullName: System.Web.UI.WebControls.DataGrid.VirtualItemCount
- uid: System.Web.UI.WebControls.DataGrid.#ctor*
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: DataGrid
  nameWithType: DataGrid.DataGrid
- uid: System.Web.UI.WebControls.DataGrid.AllowCustomPaging*
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: AllowCustomPaging
  nameWithType: DataGrid.AllowCustomPaging
- uid: System.Web.UI.WebControls.DataGrid.AllowPaging*
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: AllowPaging
  nameWithType: DataGrid.AllowPaging
- uid: System.Web.UI.WebControls.DataGrid.AllowSorting*
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: AllowSorting
  nameWithType: DataGrid.AllowSorting
- uid: System.Web.UI.WebControls.DataGrid.AlternatingItemStyle*
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: AlternatingItemStyle
  nameWithType: DataGrid.AlternatingItemStyle
- uid: System.Web.UI.WebControls.DataGrid.AutoGenerateColumns*
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: AutoGenerateColumns
  nameWithType: DataGrid.AutoGenerateColumns
- uid: System.Web.UI.WebControls.DataGrid.BackImageUrl*
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: BackImageUrl
  nameWithType: DataGrid.BackImageUrl
- uid: System.Web.UI.WebControls.DataGrid.Columns*
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: Columns
  nameWithType: DataGrid.Columns
- uid: System.Web.UI.WebControls.DataGrid.CreateColumnSet*
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: CreateColumnSet
  nameWithType: DataGrid.CreateColumnSet
- uid: System.Web.UI.WebControls.DataGrid.CreateControlHierarchy*
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: CreateControlHierarchy
  nameWithType: DataGrid.CreateControlHierarchy
- uid: System.Web.UI.WebControls.DataGrid.CreateControlStyle*
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: CreateControlStyle
  nameWithType: DataGrid.CreateControlStyle
- uid: System.Web.UI.WebControls.DataGrid.CreateItem*
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: CreateItem
  nameWithType: DataGrid.CreateItem
- uid: System.Web.UI.WebControls.DataGrid.CurrentPageIndex*
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: CurrentPageIndex
  nameWithType: DataGrid.CurrentPageIndex
- uid: System.Web.UI.WebControls.DataGrid.EditItemIndex*
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: EditItemIndex
  nameWithType: DataGrid.EditItemIndex
- uid: System.Web.UI.WebControls.DataGrid.EditItemStyle*
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: EditItemStyle
  nameWithType: DataGrid.EditItemStyle
- uid: System.Web.UI.WebControls.DataGrid.FooterStyle*
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: FooterStyle
  nameWithType: DataGrid.FooterStyle
- uid: System.Web.UI.WebControls.DataGrid.HeaderStyle*
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: HeaderStyle
  nameWithType: DataGrid.HeaderStyle
- uid: System.Web.UI.WebControls.DataGrid.InitializeItem*
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: InitializeItem
  nameWithType: DataGrid.InitializeItem
- uid: System.Web.UI.WebControls.DataGrid.InitializePager*
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: InitializePager
  nameWithType: DataGrid.InitializePager
- uid: System.Web.UI.WebControls.DataGrid.Items*
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: Items
  nameWithType: DataGrid.Items
- uid: System.Web.UI.WebControls.DataGrid.ItemStyle*
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: ItemStyle
  nameWithType: DataGrid.ItemStyle
- uid: System.Web.UI.WebControls.DataGrid.LoadViewState*
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: LoadViewState
  nameWithType: DataGrid.LoadViewState
- uid: System.Web.UI.WebControls.DataGrid.OnBubbleEvent*
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: OnBubbleEvent
  nameWithType: DataGrid.OnBubbleEvent
- uid: System.Web.UI.WebControls.DataGrid.OnCancelCommand*
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: OnCancelCommand
  nameWithType: DataGrid.OnCancelCommand
- uid: System.Web.UI.WebControls.DataGrid.OnDeleteCommand*
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: OnDeleteCommand
  nameWithType: DataGrid.OnDeleteCommand
- uid: System.Web.UI.WebControls.DataGrid.OnEditCommand*
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: OnEditCommand
  nameWithType: DataGrid.OnEditCommand
- uid: System.Web.UI.WebControls.DataGrid.OnItemCommand*
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: OnItemCommand
  nameWithType: DataGrid.OnItemCommand
- uid: System.Web.UI.WebControls.DataGrid.OnItemCreated*
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: OnItemCreated
  nameWithType: DataGrid.OnItemCreated
- uid: System.Web.UI.WebControls.DataGrid.OnItemDataBound*
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: OnItemDataBound
  nameWithType: DataGrid.OnItemDataBound
- uid: System.Web.UI.WebControls.DataGrid.OnPageIndexChanged*
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: OnPageIndexChanged
  nameWithType: DataGrid.OnPageIndexChanged
- uid: System.Web.UI.WebControls.DataGrid.OnSortCommand*
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: OnSortCommand
  nameWithType: DataGrid.OnSortCommand
- uid: System.Web.UI.WebControls.DataGrid.OnUpdateCommand*
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: OnUpdateCommand
  nameWithType: DataGrid.OnUpdateCommand
- uid: System.Web.UI.WebControls.DataGrid.PageCount*
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: PageCount
  nameWithType: DataGrid.PageCount
- uid: System.Web.UI.WebControls.DataGrid.PagerStyle*
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: PagerStyle
  nameWithType: DataGrid.PagerStyle
- uid: System.Web.UI.WebControls.DataGrid.PageSize*
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: PageSize
  nameWithType: DataGrid.PageSize
- uid: System.Web.UI.WebControls.DataGrid.PrepareControlHierarchy*
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: PrepareControlHierarchy
  nameWithType: DataGrid.PrepareControlHierarchy
- uid: System.Web.UI.WebControls.DataGrid.SaveViewState*
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: SaveViewState
  nameWithType: DataGrid.SaveViewState
- uid: System.Web.UI.WebControls.DataGrid.SelectedIndex*
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: SelectedIndex
  nameWithType: DataGrid.SelectedIndex
- uid: System.Web.UI.WebControls.DataGrid.SelectedItem*
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: SelectedItem
  nameWithType: DataGrid.SelectedItem
- uid: System.Web.UI.WebControls.DataGrid.SelectedItemStyle*
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: SelectedItemStyle
  nameWithType: DataGrid.SelectedItemStyle
- uid: System.Web.UI.WebControls.DataGrid.ShowFooter*
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: ShowFooter
  nameWithType: DataGrid.ShowFooter
- uid: System.Web.UI.WebControls.DataGrid.ShowHeader*
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: ShowHeader
  nameWithType: DataGrid.ShowHeader
- uid: System.Web.UI.WebControls.DataGrid.TagKey*
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: TagKey
  nameWithType: DataGrid.TagKey
- uid: System.Web.UI.WebControls.DataGrid.TrackViewState*
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: TrackViewState
  nameWithType: DataGrid.TrackViewState
- uid: System.Web.UI.WebControls.DataGrid.VirtualItemCount*
  parent: System.Web.UI.WebControls.DataGrid
  isExternal: false
  name: VirtualItemCount
  nameWithType: DataGrid.VirtualItemCount
