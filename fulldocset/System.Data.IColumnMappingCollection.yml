### YamlMime:ManagedReference
items:
- uid: System.Data.IColumnMappingCollection
  id: IColumnMappingCollection
  children:
  - System.Data.IColumnMappingCollection.Add(System.String,System.String)
  - System.Data.IColumnMappingCollection.Contains(System.String)
  - System.Data.IColumnMappingCollection.GetByDataSetColumn(System.String)
  - System.Data.IColumnMappingCollection.IndexOf(System.String)
  - System.Data.IColumnMappingCollection.Item(System.String)
  - System.Data.IColumnMappingCollection.RemoveAt(System.String)
  langs:
  - csharp
  name: IColumnMappingCollection
  nameWithType: IColumnMappingCollection
  fullName: System.Data.IColumnMappingCollection
  type: Interface
  summary: "DataColumnMapping 개체의 컬렉션을 포함 하 고 구현한는 <xref href=&quot;System.Data.Common.DataColumnMappingCollection&quot;> </xref>,.NET Framework 데이터 공급자에 공통으로 사용 되는 합니다."
  remarks: "IColumnMappingCollection 인터페이스 ColumnMapping 컬렉션 구현 상속 하는 클래스를 사용 합니다. 자세한 내용은 참조 [DataAdapter DataTable 및 DataColumn 매핑](~/add/includes/ajax-current-ext-md.md)합니다.       응용 프로그램을 직접 IColumnMappingCollection 인터페이스의 인스턴스를 만들지 않는 있지만 IColumnMappingCollection 상속 하는 클래스의 인스턴스를 만듭니다.       IColumnMappingCollection 상속 된 클래스는 상속 된 모든 멤버를 구현 하 고 일반적으로 공급자 특정 기능을 추가 하려면 추가 멤버를 정의 해야 합니다. 예를 들어 IColumnMappingCollection 인터페이스 정의 <xref:System.Data.IColumnMappingCollection.RemoveAt%2A>메서드.</xref:System.Data.IColumnMappingCollection.RemoveAt%2A> <xref:System.Data.Common.DataTableMappingCollection>클래스는이 메서드를 상속 하 고 <xref:System.Data.Common.DataTableMappingCollection.RemoveAt%2A>안내 하십시오.</xref:System.Data.Common.DataTableMappingCollection.RemoveAt%2A> 두 개의 추가 오버 로드를 정의</xref:System.Data.Common.DataTableMappingCollection> 차례로"
  example:
  - "The following example uses an instance of the derived class, <xref:System.Data.Common.DataTableMapping>, to <xref:System.Data.Common.DataColumnMappingCollection.Add%2A> several <xref:System.Data.Common.DataColumnMapping> objects to its <xref:System.Data.Common.DataTableMapping.ColumnMappings%2A> collection, and then displays a list of those mapped source tables. This example assumes that a <xref:System.Data.Common.DataTableMapping> has already been created.  \n  \n [!code-vb[Classic WebData DataColumnMappingCollection Example#1](~/add/codesnippet/visualbasic/t-system.data.icolumnmap_1_1.vb)]\n [!code-cs[Classic WebData DataColumnMappingCollection Example#1](~/add/codesnippet/csharp/t-system.data.icolumnmap_1_1.cs)]"
  syntax:
    content: 'public interface IColumnMappingCollection : System.Collections.IList'
  implements:
  - System.Collections.IList
  platform:
  - net462
- uid: System.Data.IColumnMappingCollection.Add(System.String,System.String)
  id: Add(System.String,System.String)
  parent: System.Data.IColumnMappingCollection
  langs:
  - csharp
  name: Add(String,String)
  nameWithType: IColumnMappingCollection.Add(String,String)
  fullName: System.Data.IColumnMappingCollection.Add(String,String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "원본 열을 사용 하 여 ColumnMapping 컬렉션은 ColumnMapping 개체를 추가 하 고 <xref href=&quot;System.Data.DataSet&quot;> </xref> 열 이름입니다."
  syntax:
    content: public System.Data.IColumnMapping Add (string sourceColumnName, string dataSetColumnName);
    parameters:
    - id: sourceColumnName
      type: System.String
      description: "대/소문자 구분 원본 열의 이름입니다."
    - id: dataSetColumnName
      type: System.String
      description: "이름에서 <xref href=&quot;System.Data.DataSet&quot;> </xref> 열입니다."
    return:
      type: System.Data.IColumnMapping
      description: "컬렉션에 추가 된 ColumnMapping 개체입니다."
  overload: System.Data.IColumnMappingCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Data.IColumnMappingCollection.Contains(System.String)
  id: Contains(System.String)
  parent: System.Data.IColumnMappingCollection
  langs:
  - csharp
  name: Contains(String)
  nameWithType: IColumnMappingCollection.Contains(String)
  fullName: System.Data.IColumnMappingCollection.Contains(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "나타내는 값을 가져옵니다 여부는 <xref href=&quot;System.Data.Common.DataColumnMappingCollection&quot;> </xref> 포함 한 <xref href=&quot;System.Data.Common.DataColumnMapping&quot;> </xref> 지정한 원본 열 이름 가진 개체입니다."
  syntax:
    content: public bool Contains (string sourceColumnName);
    parameters:
    - id: sourceColumnName
      type: System.String
      description: "대/소문자 구분 원본 열의 이름입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우는 <xref href=&quot;System.Data.Common.DataColumnMapping&quot;> </xref> 그렇지 않은 경우의 지정한 원본 열 이름 가진 개체가 있는 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Data.IColumnMappingCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Data.IColumnMappingCollection.GetByDataSetColumn(System.String)
  id: GetByDataSetColumn(System.String)
  parent: System.Data.IColumnMappingCollection
  langs:
  - csharp
  name: GetByDataSetColumn(String)
  nameWithType: IColumnMappingCollection.GetByDataSetColumn(String)
  fullName: System.Data.IColumnMappingCollection.GetByDataSetColumn(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "지정 된 ColumnMapping 개체를 가져옵니다 <xref href=&quot;System.Data.DataSet&quot;> </xref> 열 이름입니다."
  syntax:
    content: public System.Data.IColumnMapping GetByDataSetColumn (string dataSetColumnName);
    parameters:
    - id: dataSetColumnName
      type: System.String
      description: "이름에서 <xref href=&quot;System.Data.DataSet&quot;> </xref> 컬렉션 내의 열입니다."
    return:
      type: System.Data.IColumnMapping
      description: "지정 된 ColumnMapping 개체 <xref uid=&quot;langword_csharp_DataSet&quot; name=&quot;DataSet&quot; href=&quot;&quot;> </xref> 열 이름입니다."
  overload: System.Data.IColumnMappingCollection.GetByDataSetColumn*
  exceptions: []
  platform:
  - net462
- uid: System.Data.IColumnMappingCollection.IndexOf(System.String)
  id: IndexOf(System.String)
  parent: System.Data.IColumnMappingCollection
  langs:
  - csharp
  name: IndexOf(String)
  nameWithType: IColumnMappingCollection.IndexOf(String)
  fullName: System.Data.IColumnMappingCollection.IndexOf(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "위치를 가져옵니다는 <xref href=&quot;System.Data.Common.DataColumnMapping&quot;> </xref> 지정한 원본 열 이름 가진 개체입니다. 이름은 대/소문자 구분입니다."
  remarks: ''
  example:
  - "The following example searches for an instance of the derived class, <xref:System.Data.Common.DataColumnMapping>, with the given source column name within a <xref:System.Data.Common.DataColumnMappingCollection> collection. If the <xref:System.Data.Common.DataColumnMapping> exists, the example displays the name and the index of the mapping. If the mapping does not exist, the example displays an error. This example assumes that a <xref:System.Data.Common.DataColumnMappingCollection> collection has been created.  \n  \n [!code-cs[Classic WebData DataColumnMappingCollection.this1 Example#1](~/add/codesnippet/csharp/m-system.data.icolumnmap_1_1.cs)]\n [!code-vb[Classic WebData DataColumnMappingCollection.this1 Example#1](~/add/codesnippet/visualbasic/m-system.data.icolumnmap_1_1.vb)]"
  syntax:
    content: public int IndexOf (string sourceColumnName);
    parameters:
    - id: sourceColumnName
      type: System.String
      description: "대/소문자 구분 원본 열의 이름입니다."
    return:
      type: System.Int32
      description: "0부터 시작 위치는 <xref uid=&quot;langword_csharp_DataColumnMapping&quot; name=&quot;DataColumnMapping&quot; href=&quot;&quot;> </xref> 지정한 원본 열 이름 가진 개체입니다."
  overload: System.Data.IColumnMappingCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Data.IColumnMappingCollection.Item(System.String)
  id: Item(System.String)
  parent: System.Data.IColumnMappingCollection
  langs:
  - csharp
  name: Item(String)
  nameWithType: IColumnMappingCollection.Item(String)
  fullName: System.Data.IColumnMappingCollection.Item(String)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "가져오거나는 <xref href=&quot;System.Data.IColumnMapping&quot;> </xref> 개체를 지정 된 <xref uid=&quot;langword_csharp_SourceColumn&quot; name=&quot;SourceColumn&quot; href=&quot;&quot;> </xref> 이름입니다."
  syntax:
    content: public object this[string index] { get; set; }
    parameters:
    - id: index
      type: System.String
      description: "<xref uid=&quot;langword_csharp_SourceColumn&quot; name=&quot;SourceColumn&quot; href=&quot;&quot;> </xref> 이름는 <xref uid=&quot;langword_csharp_IColumnMapping&quot; name=&quot;IColumnMapping&quot; href=&quot;&quot;> </xref> 찾을 개체입니다."
    return:
      type: System.Object
      description: "<xref uid=&quot;langword_csharp_IColumnMapping&quot; name=&quot;IColumnMapping&quot; href=&quot;&quot;> </xref> 개체를 지정 된 <xref uid=&quot;langword_csharp_SourceColumn&quot; name=&quot;SourceColumn&quot; href=&quot;&quot;> </xref> 이름입니다."
  overload: System.Data.IColumnMappingCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Data.IColumnMappingCollection.RemoveAt(System.String)
  id: RemoveAt(System.String)
  parent: System.Data.IColumnMappingCollection
  langs:
  - csharp
  name: RemoveAt(String)
  nameWithType: IColumnMappingCollection.RemoveAt(String)
  fullName: System.Data.IColumnMappingCollection.RemoveAt(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "제거는 <xref href=&quot;System.Data.IColumnMapping&quot;> </xref> 개체를 지정 된 <xref:System.Data.IColumnMapping.SourceColumn*>컬렉션에서 이름이.</xref:System.Data.IColumnMapping.SourceColumn*>"
  remarks: ''
  example:
  - "The following example searches for an instance of the derived class, <xref:System.Data.Common.DataColumnMapping>, with the given `SourceColumn` name within a <xref:System.Data.Common.DataColumnMappingCollection> collection. If the <xref:System.Data.Common.DataColumnMapping> exists, the mapping is removed. This example assumes that a <xref:System.Data.Common.DataColumnMappingCollection> collection has been created.  \n  \n [!code-cs[Classic WebData DataColumnMappingCollection.RemoveAt1 Example#1](~/add/codesnippet/csharp/m-system.data.icolumnmap_0_1.cs)]\n [!code-vb[Classic WebData DataColumnMappingCollection.RemoveAt1 Example#1](~/add/codesnippet/visualbasic/m-system.data.icolumnmap_0_1.vb)]"
  syntax:
    content: public void RemoveAt (string sourceColumnName);
    parameters:
    - id: sourceColumnName
      type: System.String
      description: "대/소문자 구분 <xref uid=&quot;langword_csharp_SourceColumn&quot; name=&quot;SourceColumn&quot; href=&quot;&quot;> </xref> 이름입니다."
  overload: System.Data.IColumnMappingCollection.RemoveAt*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "A <xref href=&quot;System.Data.Common.DataColumnMapping&quot;> </xref> 지정 된 개체가 존재 하지 않는 <xref uid=&quot;langword_csharp_SourceColumn&quot; name=&quot;SourceColumn&quot; href=&quot;&quot;> </xref> 이름입니다."
  platform:
  - net462
references:
- uid: System.IndexOutOfRangeException
  isExternal: true
  name: System.IndexOutOfRangeException
- uid: System.Data.IColumnMappingCollection.Add(System.String,System.String)
  parent: System.Data.IColumnMappingCollection
  isExternal: false
  name: Add(String,String)
  nameWithType: IColumnMappingCollection.Add(String,String)
  fullName: System.Data.IColumnMappingCollection.Add(String,String)
- uid: System.Data.IColumnMapping
  parent: System.Data
  isExternal: false
  name: IColumnMapping
  nameWithType: IColumnMapping
  fullName: System.Data.IColumnMapping
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.IColumnMappingCollection.Contains(System.String)
  parent: System.Data.IColumnMappingCollection
  isExternal: false
  name: Contains(String)
  nameWithType: IColumnMappingCollection.Contains(String)
  fullName: System.Data.IColumnMappingCollection.Contains(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.IColumnMappingCollection.GetByDataSetColumn(System.String)
  parent: System.Data.IColumnMappingCollection
  isExternal: false
  name: GetByDataSetColumn(String)
  nameWithType: IColumnMappingCollection.GetByDataSetColumn(String)
  fullName: System.Data.IColumnMappingCollection.GetByDataSetColumn(String)
- uid: System.Data.IColumnMappingCollection.IndexOf(System.String)
  parent: System.Data.IColumnMappingCollection
  isExternal: false
  name: IndexOf(String)
  nameWithType: IColumnMappingCollection.IndexOf(String)
  fullName: System.Data.IColumnMappingCollection.IndexOf(String)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.IColumnMappingCollection.Item(System.String)
  parent: System.Data.IColumnMappingCollection
  isExternal: false
  name: Item(String)
  nameWithType: IColumnMappingCollection.Item(String)
  fullName: System.Data.IColumnMappingCollection.Item(String)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.IColumnMappingCollection.RemoveAt(System.String)
  parent: System.Data.IColumnMappingCollection
  isExternal: false
  name: RemoveAt(String)
  nameWithType: IColumnMappingCollection.RemoveAt(String)
  fullName: System.Data.IColumnMappingCollection.RemoveAt(String)
- uid: System.Data.IColumnMappingCollection.Add*
  parent: System.Data.IColumnMappingCollection
  isExternal: false
  name: Add
  nameWithType: IColumnMappingCollection.Add
- uid: System.Data.IColumnMappingCollection.Contains*
  parent: System.Data.IColumnMappingCollection
  isExternal: false
  name: Contains
  nameWithType: IColumnMappingCollection.Contains
- uid: System.Data.IColumnMappingCollection.GetByDataSetColumn*
  parent: System.Data.IColumnMappingCollection
  isExternal: false
  name: GetByDataSetColumn
  nameWithType: IColumnMappingCollection.GetByDataSetColumn
- uid: System.Data.IColumnMappingCollection.IndexOf*
  parent: System.Data.IColumnMappingCollection
  isExternal: false
  name: IndexOf
  nameWithType: IColumnMappingCollection.IndexOf
- uid: System.Data.IColumnMappingCollection.Item*
  parent: System.Data.IColumnMappingCollection
  isExternal: false
  name: Item
  nameWithType: IColumnMappingCollection.Item
- uid: System.Data.IColumnMappingCollection.RemoveAt*
  parent: System.Data.IColumnMappingCollection
  isExternal: false
  name: RemoveAt
  nameWithType: IColumnMappingCollection.RemoveAt
