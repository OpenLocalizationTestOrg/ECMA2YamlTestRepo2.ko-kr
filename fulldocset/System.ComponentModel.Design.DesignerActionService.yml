### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.DesignerActionService
  id: DesignerActionService
  children:
  - System.ComponentModel.Design.DesignerActionService.#ctor(System.IServiceProvider)
  - System.ComponentModel.Design.DesignerActionService.Add(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionList)
  - System.ComponentModel.Design.DesignerActionService.Add(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)
  - System.ComponentModel.Design.DesignerActionService.Clear
  - System.ComponentModel.Design.DesignerActionService.Contains(System.ComponentModel.IComponent)
  - System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged
  - System.ComponentModel.Design.DesignerActionService.Dispose
  - System.ComponentModel.Design.DesignerActionService.Dispose(System.Boolean)
  - System.ComponentModel.Design.DesignerActionService.GetComponentActions(System.ComponentModel.IComponent)
  - System.ComponentModel.Design.DesignerActionService.GetComponentActions(System.ComponentModel.IComponent,System.ComponentModel.Design.ComponentActionsType)
  - System.ComponentModel.Design.DesignerActionService.GetComponentDesignerActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)
  - System.ComponentModel.Design.DesignerActionService.GetComponentServiceActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)
  - System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.Design.DesignerActionList)
  - System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.IComponent)
  - System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionList)
  langs:
  - csharp
  name: DesignerActionService
  nameWithType: DesignerActionService
  fullName: System.ComponentModel.Design.DesignerActionService
  type: Class
  summary: "컬렉션을 관리 하는 디자인 타임 서비스를 설정 <xref href=&quot;System.ComponentModel.Design.DesignerActionItem&quot;> </xref> 구성 요소에 대 한 개체입니다."
  remarks: "DesignerActionService 클래스는 컬렉션을 관리 하는 일을 담당 <xref:System.ComponentModel.Design.DesignerActionItem>디자인 타임에 폼에 존재 하는 구성 요소의 각 인스턴스에 대 한 개체입니다.</xref:System.ComponentModel.Design.DesignerActionItem> 이 클래스는 직접 밀어 넣기 모델 항목을 만들 수 있도록 하며는 주로 사용 하기 위해 디자인 타임 도구 개발자가 구성 요소 및 사용자 지정 컨트롤 개발 데 사용 될 수도 있습니다.       디자인 타임 도구 개발자는 구성 요소에 대 한 표시 하 고이 목록을 변경할 때 결정 항목의 목록을 확인 해야 합니다. 스마트 태그 패널 개체와 함께에서 작동 하는 추가 기능을 만들 수도 있습니다.       고급 구성 요소 따라서을 대체 하거나 표준 끌어오기 모델을 보완 개발자는 구성 요소와 관련 된 항목을 동적으로 제어 해야 할 수 있습니다. 예를 들어 패널 명령 사용 및 구성 요소의 디자인 타임 상태에 따라 변경할 수 있습니다.      > [!NOTE] > The DesignerActionService 푸시와 끌어오기 모두 모델 뒤 구동 서비스에 실제로 이며 이때 후자의 경우 작동 하며 암시적으로 합니다.       액세스 하 고 다음 메서드 및 이벤트를 포함 하 여 각 구성 요소에 대 한 항목을 조작 하기 위한 간단한 인터페이스를 제공 하는 DesignerActionService:- <xref:System.ComponentModel.Design.DesignerActionService.Contains%2A>메서드는 DesignerActionService 현재는 특정 구성 요소를 관리 하는지 여부를 확인 합니다.</xref:System.ComponentModel.Design.DesignerActionService.Contains%2A>      - <xref:System.ComponentModel.Design.DesignerActionService.GetComponentActions%2A>메서드 항목의 목록인 enumeration을 지원 합니다.</xref:System.ComponentModel.Design.DesignerActionService.GetComponentActions%2A>      - <xref:System.ComponentModel.Design.DesignerActionService.Add%2A>메서드를 추가할 수 있습니다. 한 <xref:System.ComponentModel.Design.DesignerActionList>또는 <xref:System.ComponentModel.Design.DesignerActionListCollection>구성 요소 인스턴스에 대 한 기존 항목의 집합에.</xref:System.ComponentModel.Design.DesignerActionListCollection> </xref:System.ComponentModel.Design.DesignerActionList> </xref:System.ComponentModel.Design.DesignerActionService.Add%2A> 반면,는 <xref:System.ComponentModel.Design.DesignerActionService.Remove%2A>메서드는 구성 요소와 연결 된 항목 목록 중 하나 또는 모두를 제거 합니다.</xref:System.ComponentModel.Design.DesignerActionService.Remove%2A>          > [!NOTE] >는 <xref:System.ComponentModel.Design.DesignerActionService.Add%2A>메서드 직접 밀어 넣기 모델 제어판 항목 구성 요소와 연결을 나타냅니다.</xref:System.ComponentModel.Design.DesignerActionService.Add%2A> 재정의할 때 같음 끌어오기 모델을 사용 하는 반면,는 <xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A>해당 구성 요소에 대 한 디자이너 클래스의 속성입니다.</xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A> 디자인 환경은 디자인 화면에서 구성 요소를 만들 때 현재 DesignerActionService에 이러한 항목을 추가 합니다.          > [!IMPORTANT] >는 <xref:System.ComponentModel.Design.DesignerActionService.Add%2A>, <xref:System.ComponentModel.Design.DesignerActionService.Remove%2A>, <xref:System.ComponentModel.Design.DesignerActionService.Contains%2A>, 및 <xref:System.ComponentModel.Design.DesignerActionService.Clear%2A>만 고려 메서드나 밀어 넣기 모델 항목에 영향을 줍니다.</xref:System.ComponentModel.Design.DesignerActionService.Clear%2A> </xref:System.ComponentModel.Design.DesignerActionService.Contains%2A> </xref:System.ComponentModel.Design.DesignerActionService.Remove%2A> </xref:System.ComponentModel.Design.DesignerActionService.Add%2A>      - <xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged>이벤트는 구성 요소에 대 한 항목의 컬렉션 변경 되었음을 나타냅니다.</xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged>       큰 수준의 상호 운용성 사이 존재 하므로 해당 구성 요소의 디자인 타임 바로 가기 메뉴와 해당 패널에 있는 동일한 제어판 항목 중 일부를 사용 하는 것이 좋습니다, <xref:System.ComponentModel.Design.DesignerActionItem>개체와 디자이너 동사.</xref:System.ComponentModel.Design.DesignerActionItem>       구성 요소 디자이너에서 명시적으로 지정 하지 않으면는 <xref:System.ComponentModel.Design.DesignerActionList>(즉, 없기 재정의 된 <xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A>속성), 기존 디자이너 동사를 목록이 생성 됩니다.</xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A> </xref:System.ComponentModel.Design.DesignerActionList> 지정 된 이러한 동사는 <xref:System.ComponentModel.Design.ComponentDesigner.Verbs%2A>속성.</xref:System.ComponentModel.Design.ComponentDesigner.Verbs%2A> 이 경우 동사 항목 패널 항목의 컬렉션을 포함 하는 내부 동사 목록 클래스 사용 됩니다.       원하는 경우는 <xref:System.ComponentModel.Design.DesignerActionMethodItem>사용할 패널 항목과 디자인 타임 바로 가기 메뉴 항목으로 모두 설정할 수는 `includeAsDesignerVerb` 항목의 생성자에서 매개 변수.</xref:System.ComponentModel.Design.DesignerActionMethodItem>       <xref:System.ComponentModel.Design.DesignerActionUIService>디자이너의 <xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A>.</xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A> 의 표시를 제어를</xref:System.ComponentModel.Design.DesignerActionUIService> 사용 하 여"
  syntax:
    content: 'public class DesignerActionService : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionService.#ctor(System.IServiceProvider)
  id: '#ctor(System.IServiceProvider)'
  parent: System.ComponentModel.Design.DesignerActionService
  langs:
  - csharp
  name: DesignerActionService(IServiceProvider)
  nameWithType: DesignerActionService.DesignerActionService(IServiceProvider)
  fullName: System.ComponentModel.Design.DesignerActionService.DesignerActionService(IServiceProvider)
  type: Constructor
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.ComponentModel.Design.DesignerActionService&quot;> </xref> 클래스입니다."
  remarks: "서비스 공급자가 선택 및 구성 요소 변경 모니터링을 위해 필요 합니다. 지 원하는 예상는 <xref:System.ComponentModel.Design.IDesignerHost>및 <xref:System.ComponentModel.Design.IComponentChangeService>형식.</xref:System.ComponentModel.Design.IComponentChangeService> </xref:System.ComponentModel.Design.IDesignerHost> <xref:System.ComponentModel.Design.DesignerActionService>클래스는 내부 테이블을 사용 하 여 구성 요소와 관련 된 관리 <xref:System.ComponentModel.Design.DesignerActionList>스마트 태그.</xref:System.ComponentModel.Design.DesignerActionList> </xref:System.ComponentModel.Design.DesignerActionService>       일반적으로 구성 요소 개발자 필요가 없습니다;이 클래스의 인스턴스를 만들고 대신, 호출을 통해 기존 인스턴스를 가져올 수 있습니다는 <xref:System.ComponentModel.Component.GetService%2A?displayProperty=fullName>메서드.</xref:System.ComponentModel.Component.GetService%2A?displayProperty=fullName>"
  syntax:
    content: public DesignerActionService (IServiceProvider serviceProvider);
    parameters:
    - id: serviceProvider
      type: System.IServiceProvider
      description: "현재 디자인 타임 환경에 대 한 서비스 공급자입니다."
  overload: System.ComponentModel.Design.DesignerActionService.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionService.Add(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionList)
  id: Add(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionList)
  parent: System.ComponentModel.Design.DesignerActionService
  langs:
  - csharp
  name: Add(IComponent,DesignerActionList)
  nameWithType: DesignerActionService.Add(IComponent,DesignerActionList)
  fullName: System.ComponentModel.Design.DesignerActionService.Add(IComponent,DesignerActionList)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "추가 <xref href=&quot;System.ComponentModel.Design.DesignerActionList&quot;> </xref> 관리 되는 스마트 태그의 현재 컬렉션에 있습니다."
  remarks: "Add 메서드 항목에 스마트 태그를 추가 하는 밀어넣기 모델을 나타냅니다. 재정의할 때 같음 대체 끌어오기 모델을 사용 합니다.는 <xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A>해당 구성 요소에 대 한 디자이너에서 속성.</xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A>       이 메서드가 호출 되 면 추가 될 목록 있는지 검색 됩니다 <xref:System.ComponentModel.Design.DesignerActionMethodItem>와 <xref:System.ComponentModel.Design.DesignerActionMethodItem.IncludeAsDesignerVerb%2A>속성이로 설정 `true`.</xref:System.ComponentModel.Design.DesignerActionMethodItem.IncludeAsDesignerVerb%2A> </xref:System.ComponentModel.Design.DesignerActionMethodItem> 이러한 항목에 대 한 호출을 통해이 구성 요소에 대 한 디자이너 동사 목록에 추가 됩니다는 <xref:System.ComponentModel.Design.MenuCommandService.AddVerb%2A?displayProperty=fullName>메서드.</xref:System.ComponentModel.Design.MenuCommandService.AddVerb%2A?displayProperty=fullName>       스마트 태그는 구성 요소 인스턴스 단위로 관리 됩니다. 관리 되는 컬렉션에 중복 된 항목이 있을 수 있습니다.       이 메서드는 <xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged>이벤트.</xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged>"
  syntax:
    content: public void Add (System.ComponentModel.IComponent comp, System.ComponentModel.Design.DesignerActionList actionList);
    parameters:
    - id: comp
      type: System.ComponentModel.IComponent
      description: "<xref href=&quot;System.ComponentModel.IComponent&quot;> </xref> 스마트 태그와 연결 합니다."
    - id: actionList
      type: System.ComponentModel.Design.DesignerActionList
      description: "<xref href=&quot;System.ComponentModel.Design.DesignerActionList&quot;> </xref> 새 스마트 태그 항목을 추가할 수 있는 합니다."
  overload: System.ComponentModel.Design.DesignerActionService.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "매개 변수 중 하나 또는 모두는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionService.Add(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)
  id: Add(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)
  parent: System.ComponentModel.Design.DesignerActionService
  langs:
  - csharp
  name: Add(IComponent,DesignerActionListCollection)
  nameWithType: DesignerActionService.Add(IComponent,DesignerActionListCollection)
  fullName: System.ComponentModel.Design.DesignerActionService.Add(IComponent,DesignerActionListCollection)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "추가 <xref href=&quot;System.ComponentModel.Design.DesignerActionListCollection&quot;> </xref> 관리 되는 스마트 태그의 현재 컬렉션에 있습니다."
  remarks: "Add 메서드 항목에 스마트 태그를 추가 하는 밀어넣기 모델을 나타냅니다. 재정의할 때 같음 대체 끌어오기 모델을 사용 합니다.는 <xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A>해당 구성 요소에 대 한 디자이너에서 속성.</xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A>       이 메서드가 호출 되 면 추가 될 목록 있는지 검색 됩니다 <xref:System.ComponentModel.Design.DesignerActionMethodItem>와 <xref:System.ComponentModel.Design.DesignerActionMethodItem.IncludeAsDesignerVerb%2A>속성이로 설정 `true`.</xref:System.ComponentModel.Design.DesignerActionMethodItem.IncludeAsDesignerVerb%2A> </xref:System.ComponentModel.Design.DesignerActionMethodItem> 이러한 항목에 대 한 호출을 통해이 구성 요소에 대 한 디자이너 동사 목록에 추가 됩니다는 <xref:System.ComponentModel.Design.MenuCommandService.AddVerb%2A?displayProperty=fullName>메서드.</xref:System.ComponentModel.Design.MenuCommandService.AddVerb%2A?displayProperty=fullName>       스마트 태그는 구성 요소 인스턴스 단위로 관리 됩니다. 관리 되는 컬렉션에 중복 된 항목이 있을 수 있습니다.       이 메서드는 <xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged>이벤트.</xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged>"
  syntax:
    content: public void Add (System.ComponentModel.IComponent comp, System.ComponentModel.Design.DesignerActionListCollection designerActionListCollection);
    parameters:
    - id: comp
      type: System.ComponentModel.IComponent
      description: "<xref href=&quot;System.ComponentModel.IComponent&quot;> </xref> 스마트 태그와 연결 합니다."
    - id: designerActionListCollection
      type: System.ComponentModel.Design.DesignerActionListCollection
      description: "<xref href=&quot;System.ComponentModel.Design.DesignerActionListCollection&quot;> </xref> 새 스마트 태그 항목을 추가할 수 있는 합니다."
  overload: System.ComponentModel.Design.DesignerActionService.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "매개 변수 중 하나 또는 모두는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionService.Clear
  id: Clear
  parent: System.ComponentModel.Design.DesignerActionService
  langs:
  - csharp
  name: Clear()
  nameWithType: DesignerActionService.Clear()
  fullName: System.ComponentModel.Design.DesignerActionService.Clear()
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "관리에서 모든 구성 요소를 해제 하 고 모든 밀어 넣기 모델 스마트 태그 목록을 지웁니다."
  remarks: "Clear 메서드는 구성 요소 및 해당 밀어 넣기 모델 스마트 태그 목록에 대 한 정보를 저장 하는 데 사용 하는 내부 테이블을 비웁니다.      > [!CAUTION] >이 메서드는 현재 구성 요소 뿐 아니라 및 현재 서비스에서 관리 하는 모든 구성 요소에 영향을 주는 때문에이 방법이 주의 해 서 사용 해야 합니다. 일반적으로 디자인 타임 도구 개발자는 디자인 화면을 다시 설정할 때 해당 합니다. 구성 요소 개발자 중 하나를 사용 해야는 <xref:System.ComponentModel.Design.DesignerActionService.Remove%2A>메서드 대신 개별 스마트 태그를 제거 하려면 항목 목록 또는.</xref:System.ComponentModel.Design.DesignerActionService.Remove%2A>       A <xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged>이전에 현재 서비스에서 관리 하는 각 구성 요소에 대 한 이벤트가 발생 합니다.</xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged>"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.ComponentModel.Design.DesignerActionService.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionService.Contains(System.ComponentModel.IComponent)
  id: Contains(System.ComponentModel.IComponent)
  parent: System.ComponentModel.Design.DesignerActionService
  langs:
  - csharp
  name: Contains(IComponent)
  nameWithType: DesignerActionService.Contains(IComponent)
  fullName: System.ComponentModel.Design.DesignerActionService.Contains(IComponent)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "현재 스마트 태그 서비스가 지정된 된 구성 요소에 대 한 작업 목록을 관리 하는지 여부를 결정 합니다."
  remarks: "Contains 메서드만 지 원하는 구성 요소에 연관 된 밀어 넣기 모델 스마트 태그를 인식 하는 <xref:System.ComponentModel.Design.DesignerActionService.Add%2A>메서드.</xref:System.ComponentModel.Design.DesignerActionService.Add%2A>       동시에 구조 제한 없이 없지만 <xref:System.ComponentModel.Design.DesignerActionService>디자인 타임 도구에서 만든 인스턴스, 일반적으로 서비스의 단일 인스턴스만 생성 디자인 화면 당.</xref:System.ComponentModel.Design.DesignerActionService>"
  syntax:
    content: public bool Contains (System.ComponentModel.IComponent comp);
    parameters:
    - id: comp
      type: System.ComponentModel.IComponent
      description: "<xref href=&quot;System.ComponentModel.IComponent&quot;> </xref> 을 찾으려고 합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>구성 요소가 현재 서비스에서 관리 되는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.ComponentModel.Design.DesignerActionService.Contains*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>comp</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged
  id: DesignerActionListsChanged
  parent: System.ComponentModel.Design.DesignerActionService
  langs:
  - csharp
  name: DesignerActionListsChanged
  nameWithType: DesignerActionService.DesignerActionListsChanged
  fullName: System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged
  type: Event
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "발생 경우는 <xref href=&quot;System.ComponentModel.Design.DesignerActionList&quot;> </xref> 제거 되거나 모든 구성 요소에 대 한 추가 합니다."
  remarks: "다음 표에서 DesignerActionListsChanged 이벤트와 연결 된 특수 한 클래스의 집합을 보여 줍니다.      | 특수화 형식 | 설명 |   |----------------------|-----------------|   | <xref:System.ComponentModel.Design.DesignerActionListsChangedEventArgs>| 스마트 태그 목록 관리 관련 된 정보를 추가 합니다.</xref:System.ComponentModel.Design.DesignerActionListsChangedEventArgs> 이 클래스는 <xref:System.EventArgs>에서 특수화는 합니다. |   | <xref:System.ComponentModel.Design.DesignerActionListsChangedEventHandler>| <xref:System.ComponentModel.Design.DesignerActionListsChangedEventArgs>와 처리기를 연결 합니다. |   | <xref:System.ComponentModel.Design.DesignerActionListsChangedType>| 목록을 추가 되거나 제거 되었는지 여부를 나타냅니다. |       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).</xref:System.ComponentModel.Design.DesignerActionListsChangedType> </xref:System.ComponentModel.Design.DesignerActionListsChangedEventArgs> </xref:System.ComponentModel.Design.DesignerActionListsChangedEventHandler> </xref:System.EventArgs>"
  syntax:
    content: public event System.ComponentModel.Design.DesignerActionListsChangedEventHandler DesignerActionListsChanged;
    return:
      type: System.ComponentModel.Design.DesignerActionListsChangedEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionService.Dispose
  id: Dispose
  parent: System.ComponentModel.Design.DesignerActionService
  langs:
  - csharp
  name: Dispose()
  nameWithType: DesignerActionService.Dispose()
  fullName: System.ComponentModel.Design.DesignerActionService.Dispose()
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "사용 하는 모든 리소스를 해제는 <xref href=&quot;System.ComponentModel.Design.DesignerActionService&quot;> </xref> 클래스입니다."
  remarks: "Dispose 메서드는 지정 된 유일한 메서드의 구현에서 <xref:System.IDisposable>인터페이스.</xref:System.IDisposable> <xref:System.ComponentModel.Design.DesignerActionService>.</xref:System.ComponentModel.Design.DesignerActionService> 를 사용 하 여 완료 했으면이 메서드를 호출 합니다. 두 가지 주요 작업 수행:-현재 서비스를 호출 하 여 디자인 환경에서 사용 가능한 서비스 목록에서 제거 된 <xref:System.ComponentModel.Design.IServiceContainer.RemoveService%2A>메서드.</xref:System.ComponentModel.Design.IServiceContainer.RemoveService%2A>      -에서 구독 해제 구성 변경 이벤트에 연결 된 <xref:System.ComponentModel.Design.IComponentChangeService>인터페이스.</xref:System.ComponentModel.Design.IComponentChangeService>       <xref:System.ComponentModel.Design.DesignerActionService>.</xref:System.ComponentModel.Design.DesignerActionService> 를 사용 하 여 작업을 마쳤으면 Dispose를 호출 합니다. Dispose 메서드는 <xref:System.ComponentModel.Design.DesignerActionService>불안정 한 상태가.</xref:System.ComponentModel.Design.DesignerActionService> Dispose를 호출한 후에 대 한 모든 참조를 해제 해야는 <xref:System.ComponentModel.Design.DesignerActionService>가비지 수집기는 메모리를 회수할 수 있도록 하는 <xref:System.ComponentModel.Design.DesignerActionService>차지한.</xref:System.ComponentModel.Design.DesignerActionService> </xref:System.ComponentModel.Design.DesignerActionService> 자세한 내용은 참조 [관리 되지 않는 리소스 정리](~/add/includes/ajax-current-ext-md.md) 및 [Dispose 메서드를 구현](~/add/includes/ajax-current-ext-md.md)합니다.      > [!NOTE] > <xref:System.ComponentModel.Design.DesignerActionService>.</xref:System.ComponentModel.Design.DesignerActionService> 에 대 한 마지막 참조를 해제 하기 전에 항상 호출 삭제 사용 중인 리소스가 가비지 수집기 호출할 때까지 해제 되지 것입니다 그렇지 않은 경우는 <xref:System.ComponentModel.Design.DesignerActionService>개체의 `Finalize` 메서드.</xref:System.ComponentModel.Design.DesignerActionService>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.ComponentModel.Design.DesignerActionService.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionService.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.ComponentModel.Design.DesignerActionService
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: DesignerActionService.Dispose(Boolean)
  fullName: System.ComponentModel.Design.DesignerActionService.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "사용 하는 관리 되지 않는 리소스를 해제는 <xref href=&quot;System.ComponentModel.Design.DesignerActionService&quot;> </xref> 관리 되는 리소스를 선택적으로 해제 합니다."
  remarks: "<xref:System.ComponentModel.Design.DesignerActionService.Dispose%2A>메서드는 지정 된 유일한 메서드의 구현에서 <xref:System.IDisposable>인터페이스.</xref:System.IDisposable> </xref:System.ComponentModel.Design.DesignerActionService.Dispose%2A> <xref:System.ComponentModel.Design.DesignerActionService>.</xref:System.ComponentModel.Design.DesignerActionService> 를 사용 하 여 완료 했으면이 메서드를 호출 합니다. 두 가지 주요 작업 수행:-현재 서비스를 호출 하 여 디자인 환경에서 사용 가능한 서비스 목록에서 제거 된 <xref:System.ComponentModel.Design.IServiceContainer.RemoveService%2A>메서드.</xref:System.ComponentModel.Design.IServiceContainer.RemoveService%2A>      -에서 구독 해제 구성 변경 이벤트에 연결 된 <xref:System.ComponentModel.Design.IComponentChangeService>인터페이스.</xref:System.ComponentModel.Design.IComponentChangeService>       이 메서드는 public `Dispose()` 메서드 및 <xref:System.Object.Finalize%2A>메서드.</xref:System.Object.Finalize%2A> `Dispose()`보호 된 호출 `Dispose(Boolean)` 메서드는 `disposing` 매개 변수 설정 `true`합니다. <xref:System.Object.Finalize%2A>호출 `Dispose` 와 `disposing` 로 설정 `false`합니다.</xref:System.Object.Finalize%2A>       경우는 `disposing` 매개 변수는 `true`,이 메서드는 관리 개체가 보유 하는 모든 리소스를 해제 합니다.이 <xref:System.ComponentModel.Design.DesignerActionService>참조.</xref:System.ComponentModel.Design.DesignerActionService> 이 메서드 호출에서 `Dispose()` 각 참조 된 개체의 메서드."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>관리 되는 관리 되지 않는 리소스만 해제 하려면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 만 관리 되지 않는 리소스를 해제 합니다."
  overload: System.ComponentModel.Design.DesignerActionService.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionService.GetComponentActions(System.ComponentModel.IComponent)
  id: GetComponentActions(System.ComponentModel.IComponent)
  parent: System.ComponentModel.Design.DesignerActionService
  langs:
  - csharp
  name: GetComponentActions(IComponent)
  nameWithType: DesignerActionService.GetComponentActions(IComponent)
  fullName: System.ComponentModel.Design.DesignerActionService.GetComponentActions(IComponent)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "구성 요소와 연결 된 스마트 태그 항목 목록의 컬렉션을 반환 합니다."
  remarks: "GetComponentActions 메서드는에 대 한 호출에 해당 하는 <xref:System.ComponentModel.Design.DesignerActionService.GetComponentActions%28System.ComponentModel.IComponent%2CSystem.ComponentModel.Design.ComponentActionsType%29>메서드를 사용 하는 `type` <xref:System.ComponentModel.Design.ComponentActionsType>.</xref:System.ComponentModel.Design.ComponentActionsType> 의 매개 변수</xref:System.ComponentModel.Design.DesignerActionService.GetComponentActions%28System.ComponentModel.IComponent%2CSystem.ComponentModel.Design.ComponentActionsType%29> 따라서 반환 된 컬렉션의 스마트 태그 밀어넣기 및 끌어오기 목록이 포함 됩니다.       반환 된 <xref:System.ComponentModel.Design.DesignerActionListCollection>통해 추가 된 항목 목록의 합집합의 <xref:System.ComponentModel.Design.DesignerActionService.Add%2A>메서드 및 목록에서 가져온는 <xref:System.ComponentModel.Design.DesignerCommandSet>인스턴스 구성 요소의 사이트에서 얻은.</xref:System.ComponentModel.Design.DesignerCommandSet> </xref:System.ComponentModel.Design.DesignerActionService.Add%2A> </xref:System.ComponentModel.Design.DesignerActionListCollection>"
  syntax:
    content: public System.ComponentModel.Design.DesignerActionListCollection GetComponentActions (System.ComponentModel.IComponent component);
    parameters:
    - id: component
      type: System.ComponentModel.IComponent
      description: "스마트 태그와 연결 된 구성 요소입니다."
    return:
      type: System.ComponentModel.Design.DesignerActionListCollection
      description: "지정된 된 구성 요소에 대 한 스마트 태그의 컬렉션입니다."
  overload: System.ComponentModel.Design.DesignerActionService.GetComponentActions*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>comp</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionService.GetComponentActions(System.ComponentModel.IComponent,System.ComponentModel.Design.ComponentActionsType)
  id: GetComponentActions(System.ComponentModel.IComponent,System.ComponentModel.Design.ComponentActionsType)
  parent: System.ComponentModel.Design.DesignerActionService
  langs:
  - csharp
  name: GetComponentActions(IComponent,ComponentActionsType)
  nameWithType: DesignerActionService.GetComponentActions(IComponent,ComponentActionsType)
  fullName: System.ComponentModel.Design.DesignerActionService.GetComponentActions(IComponent,ComponentActionsType)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "구성 요소와 연결 된 지정 된 형식의 항목 목록 스마트 태그의 컬렉션을 반환 합니다."
  remarks: "이 버전의 오버 로드 된 <xref:System.ComponentModel.Design.DesignerActionService.GetComponentActions%2A>으로 필터링 하는 메서드는 `type` 매개 변수를 다음 값 중 하나일 수 있습니다.</xref:System.ComponentModel.Design.DesignerActionService.GetComponentActions%2A>      | 값 | 설명 |   |-----------|-----------------|   | <xref:System.ComponentModel.Design.ComponentActionsType>| 스마트 태그를 연결 된 모든. |   | <xref:System.ComponentModel.Design.ComponentActionsType>| 끌어오기 모델 스마트 태그를 삽입만. |   | <xref:System.ComponentModel.Design.ComponentActionsType>| 밀어 넣기 모델 스마트 태그를 삽입만. |       구성 요소에 대 한 연결 된 디자이너 스마트 태그 끌어오기 모델 목록을 제공 하지 않는 경우 GetComponentActions 메서드를 대신 디자이너의 디자인 타임 바로 가기 메뉴 항목에서 사용 된 <xref:System.ComponentModel.Design.ComponentDesigner.Verbs%2A>속성.</xref:System.ComponentModel.Design.ComponentDesigner.Verbs%2A> </xref:System.ComponentModel.Design.ComponentActionsType> </xref:System.ComponentModel.Design.ComponentActionsType> </xref:System.ComponentModel.Design.ComponentActionsType>"
  syntax:
    content: public virtual System.ComponentModel.Design.DesignerActionListCollection GetComponentActions (System.ComponentModel.IComponent component, System.ComponentModel.Design.ComponentActionsType type);
    parameters:
    - id: component
      type: System.ComponentModel.IComponent
      description: "스마트 태그와 연결 된 구성 요소입니다."
    - id: type
      type: System.ComponentModel.Design.ComponentActionsType
      description: "<xref href=&quot;System.ComponentModel.Design.ComponentActionsType&quot;> </xref> 와 연결된 된 스마트 태그를 필터링 합니다."
    return:
      type: System.ComponentModel.Design.DesignerActionListCollection
      description: "지정 된 형식의 지정된 된 구성 요소에 대 한 스마트 태그의 컬렉션입니다."
  overload: System.ComponentModel.Design.DesignerActionService.GetComponentActions*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>comp</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionService.GetComponentDesignerActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)
  id: GetComponentDesignerActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)
  parent: System.ComponentModel.Design.DesignerActionService
  langs:
  - csharp
  name: GetComponentDesignerActions(IComponent,DesignerActionListCollection)
  nameWithType: DesignerActionService.GetComponentDesignerActions(IComponent,DesignerActionListCollection)
  fullName: System.ComponentModel.Design.DesignerActionService.GetComponentDesignerActions(IComponent,DesignerActionListCollection)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "구성 요소와 연결 된 끌어오기 모델 스마트 태그를 검색 합니다."
  remarks: "GetComponentDesignerActions 메서드는에 대 한 도우미 메서드는 <xref:System.ComponentModel.Design.DesignerActionService.GetComponentActions%2A>메서드.</xref:System.ComponentModel.Design.DesignerActionService.GetComponentActions%2A> GetComponentDesignerActions 검색 끌어오기 모델에 대 한 스마트 태그 형식의 <xref:System.ComponentModel.Design.ComponentActionsType>, 다음에 제공 된 추가 `actionLists` 컬렉션.</xref:System.ComponentModel.Design.ComponentActionsType>       구성 요소의 개발자 통해 스마트 태그의 컬렉션을 명시적으로 제공 하지 않는 경우는 <xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A>디자이너의 속성을이 메서드는 다시 사용을 통해 가져온 디자인 타임 바로 가기 메뉴 항목의 <xref:System.ComponentModel.Design.ComponentDesigner.Verbs%2A>디자이너의 속성입니다.</xref:System.ComponentModel.Design.ComponentDesigner.Verbs%2A> </xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A>"
  syntax:
    content: protected virtual void GetComponentDesignerActions (System.ComponentModel.IComponent component, System.ComponentModel.Design.DesignerActionListCollection actionLists);
    parameters:
    - id: component
      type: System.ComponentModel.IComponent
      description: "스마트 태그와 연결 된 구성 요소입니다."
    - id: actionLists
      type: System.ComponentModel.Design.DesignerActionListCollection
      description: "에 연결된 된 스마트 태그를 추가할 컬렉션입니다."
  overload: System.ComponentModel.Design.DesignerActionService.GetComponentDesignerActions*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "매개 변수 중 하나 또는 모두는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionService.GetComponentServiceActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)
  id: GetComponentServiceActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)
  parent: System.ComponentModel.Design.DesignerActionService
  langs:
  - csharp
  name: GetComponentServiceActions(IComponent,DesignerActionListCollection)
  nameWithType: DesignerActionService.GetComponentServiceActions(IComponent,DesignerActionListCollection)
  fullName: System.ComponentModel.Design.DesignerActionService.GetComponentServiceActions(IComponent,DesignerActionListCollection)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "구성 요소와 연결 된 밀어 넣기 모델 스마트 태그를 검색 합니다."
  remarks: "GetComponentServiceActions 메서드는에 대 한 도우미 메서드는 <xref:System.ComponentModel.Design.DesignerActionService.GetComponentActions%2A>메서드.</xref:System.ComponentModel.Design.DesignerActionService.GetComponentActions%2A> 밀어 넣기 모델 형식의 스마트 태그에 대 한 검색 <xref:System.ComponentModel.Design.ComponentActionsType>, 다음에 제공 된 추가 `actionLists` 컬렉션.</xref:System.ComponentModel.Design.ComponentActionsType>"
  syntax:
    content: protected virtual void GetComponentServiceActions (System.ComponentModel.IComponent component, System.ComponentModel.Design.DesignerActionListCollection actionLists);
    parameters:
    - id: component
      type: System.ComponentModel.IComponent
      description: "스마트 태그와 연결 된 구성 요소입니다."
    - id: actionLists
      type: System.ComponentModel.Design.DesignerActionListCollection
      description: "에 연결된 된 스마트 태그를 추가할 컬렉션입니다."
  overload: System.ComponentModel.Design.DesignerActionService.GetComponentServiceActions*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "매개 변수 중 하나 또는 모두는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.Design.DesignerActionList)
  id: Remove(System.ComponentModel.Design.DesignerActionList)
  parent: System.ComponentModel.Design.DesignerActionService
  langs:
  - csharp
  name: Remove(DesignerActionList)
  nameWithType: DesignerActionService.Remove(DesignerActionList)
  fullName: System.ComponentModel.Design.DesignerActionService.Remove(DesignerActionList)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "현재 서비스에서 관리 되는 모든 구성 요소에서 지정 된 스마트 태그 목록을 제거 합니다."
  remarks: "이 버전의는 <xref:System.ComponentModel.Design.DesignerActionService.Remove%2A>구성 요소가 현재 디자인 공간에 있는 구성 요소 개발자가 일반적으로 알지 못할 다른 때문에, 메서드는 디자인 도구 개발자가 일반적으로 사용 됩니다.</xref:System.ComponentModel.Design.DesignerActionService.Remove%2A>       경우 성공이 메서드는 <xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged>이벤트.</xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged>"
  syntax:
    content: public void Remove (System.ComponentModel.Design.DesignerActionList actionList);
    parameters:
    - id: actionList
      type: System.ComponentModel.Design.DesignerActionList
      description: "제거할 스마트 태그의 목록입니다."
  overload: System.ComponentModel.Design.DesignerActionService.Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>actionList</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.IComponent)
  id: Remove(System.ComponentModel.IComponent)
  parent: System.ComponentModel.Design.DesignerActionService
  langs:
  - csharp
  name: Remove(IComponent)
  nameWithType: DesignerActionService.Remove(IComponent)
  fullName: System.ComponentModel.Design.DesignerActionService.Remove(IComponent)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "지정된 된 구성 요소와 연결 된 모든 스마트 태그 목록을 제거 합니다."
  remarks: "성공의 Remove 메서드를 발생 시킵니다는 <xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged>이벤트.</xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged>"
  syntax:
    content: public void Remove (System.ComponentModel.IComponent comp);
    parameters:
    - id: comp
      type: System.ComponentModel.IComponent
      description: "스마트 태그를 분리할 구성 요소입니다."
  overload: System.ComponentModel.Design.DesignerActionService.Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>comp</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionList)
  id: Remove(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionList)
  parent: System.ComponentModel.Design.DesignerActionService
  langs:
  - csharp
  name: Remove(IComponent,DesignerActionList)
  nameWithType: DesignerActionService.Remove(IComponent,DesignerActionList)
  fullName: System.ComponentModel.Design.DesignerActionService.Remove(IComponent,DesignerActionList)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "지정된 된 구성 요소에서 지정 된 스마트 태그 목록을 제거합니다."
  remarks: "성공의 Remove 메서드를 발생 시킵니다는 <xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged>이벤트.</xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged>"
  syntax:
    content: public void Remove (System.ComponentModel.IComponent comp, System.ComponentModel.Design.DesignerActionList actionList);
    parameters:
    - id: comp
      type: System.ComponentModel.IComponent
      description: "스마트 태그를 분리할 구성 요소입니다."
    - id: actionList
      type: System.ComponentModel.Design.DesignerActionList
      description: "제거 하려면 스마트 태그 목록입니다."
  overload: System.ComponentModel.Design.DesignerActionService.Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "매개 변수 중 하나 또는 모두는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ComponentModel.Design.DesignerActionService.#ctor(System.IServiceProvider)
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: DesignerActionService(IServiceProvider)
  nameWithType: DesignerActionService.DesignerActionService(IServiceProvider)
  fullName: System.ComponentModel.Design.DesignerActionService.DesignerActionService(IServiceProvider)
- uid: System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.ComponentModel.Design.DesignerActionService.Add(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionList)
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: Add(IComponent,DesignerActionList)
  nameWithType: DesignerActionService.Add(IComponent,DesignerActionList)
  fullName: System.ComponentModel.Design.DesignerActionService.Add(IComponent,DesignerActionList)
- uid: System.ComponentModel.IComponent
  parent: System.ComponentModel
  isExternal: false
  name: IComponent
  nameWithType: IComponent
  fullName: System.ComponentModel.IComponent
- uid: System.ComponentModel.Design.DesignerActionList
  parent: System.ComponentModel.Design
  isExternal: false
  name: DesignerActionList
  nameWithType: DesignerActionList
  fullName: System.ComponentModel.Design.DesignerActionList
- uid: System.ComponentModel.Design.DesignerActionService.Add(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: Add(IComponent,DesignerActionListCollection)
  nameWithType: DesignerActionService.Add(IComponent,DesignerActionListCollection)
  fullName: System.ComponentModel.Design.DesignerActionService.Add(IComponent,DesignerActionListCollection)
- uid: System.ComponentModel.Design.DesignerActionListCollection
  parent: System.ComponentModel.Design
  isExternal: false
  name: DesignerActionListCollection
  nameWithType: DesignerActionListCollection
  fullName: System.ComponentModel.Design.DesignerActionListCollection
- uid: System.ComponentModel.Design.DesignerActionService.Clear
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: Clear()
  nameWithType: DesignerActionService.Clear()
  fullName: System.ComponentModel.Design.DesignerActionService.Clear()
- uid: System.ComponentModel.Design.DesignerActionService.Contains(System.ComponentModel.IComponent)
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: Contains(IComponent)
  nameWithType: DesignerActionService.Contains(IComponent)
  fullName: System.ComponentModel.Design.DesignerActionService.Contains(IComponent)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: DesignerActionListsChanged
  nameWithType: DesignerActionService.DesignerActionListsChanged
  fullName: System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged
- uid: System.ComponentModel.Design.DesignerActionListsChangedEventHandler
  parent: System.ComponentModel.Design
  isExternal: false
  name: DesignerActionListsChangedEventHandler
  nameWithType: DesignerActionListsChangedEventHandler
  fullName: System.ComponentModel.Design.DesignerActionListsChangedEventHandler
- uid: System.ComponentModel.Design.DesignerActionService.Dispose
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: Dispose()
  nameWithType: DesignerActionService.Dispose()
  fullName: System.ComponentModel.Design.DesignerActionService.Dispose()
- uid: System.ComponentModel.Design.DesignerActionService.Dispose(System.Boolean)
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: DesignerActionService.Dispose(Boolean)
  fullName: System.ComponentModel.Design.DesignerActionService.Dispose(Boolean)
- uid: System.ComponentModel.Design.DesignerActionService.GetComponentActions(System.ComponentModel.IComponent)
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: GetComponentActions(IComponent)
  nameWithType: DesignerActionService.GetComponentActions(IComponent)
  fullName: System.ComponentModel.Design.DesignerActionService.GetComponentActions(IComponent)
- uid: System.ComponentModel.Design.DesignerActionService.GetComponentActions(System.ComponentModel.IComponent,System.ComponentModel.Design.ComponentActionsType)
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: GetComponentActions(IComponent,ComponentActionsType)
  nameWithType: DesignerActionService.GetComponentActions(IComponent,ComponentActionsType)
  fullName: System.ComponentModel.Design.DesignerActionService.GetComponentActions(IComponent,ComponentActionsType)
- uid: System.ComponentModel.Design.ComponentActionsType
  parent: System.ComponentModel.Design
  isExternal: false
  name: ComponentActionsType
  nameWithType: ComponentActionsType
  fullName: System.ComponentModel.Design.ComponentActionsType
- uid: System.ComponentModel.Design.DesignerActionService.GetComponentDesignerActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: GetComponentDesignerActions(IComponent,DesignerActionListCollection)
  nameWithType: DesignerActionService.GetComponentDesignerActions(IComponent,DesignerActionListCollection)
  fullName: System.ComponentModel.Design.DesignerActionService.GetComponentDesignerActions(IComponent,DesignerActionListCollection)
- uid: System.ComponentModel.Design.DesignerActionService.GetComponentServiceActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: GetComponentServiceActions(IComponent,DesignerActionListCollection)
  nameWithType: DesignerActionService.GetComponentServiceActions(IComponent,DesignerActionListCollection)
  fullName: System.ComponentModel.Design.DesignerActionService.GetComponentServiceActions(IComponent,DesignerActionListCollection)
- uid: System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.Design.DesignerActionList)
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: Remove(DesignerActionList)
  nameWithType: DesignerActionService.Remove(DesignerActionList)
  fullName: System.ComponentModel.Design.DesignerActionService.Remove(DesignerActionList)
- uid: System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.IComponent)
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: Remove(IComponent)
  nameWithType: DesignerActionService.Remove(IComponent)
  fullName: System.ComponentModel.Design.DesignerActionService.Remove(IComponent)
- uid: System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionList)
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: Remove(IComponent,DesignerActionList)
  nameWithType: DesignerActionService.Remove(IComponent,DesignerActionList)
  fullName: System.ComponentModel.Design.DesignerActionService.Remove(IComponent,DesignerActionList)
- uid: System.ComponentModel.Design.DesignerActionService.#ctor*
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: DesignerActionService
  nameWithType: DesignerActionService.DesignerActionService
- uid: System.ComponentModel.Design.DesignerActionService.Add*
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: Add
  nameWithType: DesignerActionService.Add
- uid: System.ComponentModel.Design.DesignerActionService.Clear*
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: Clear
  nameWithType: DesignerActionService.Clear
- uid: System.ComponentModel.Design.DesignerActionService.Contains*
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: Contains
  nameWithType: DesignerActionService.Contains
- uid: System.ComponentModel.Design.DesignerActionService.Dispose*
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: Dispose
  nameWithType: DesignerActionService.Dispose
- uid: System.ComponentModel.Design.DesignerActionService.GetComponentActions*
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: GetComponentActions
  nameWithType: DesignerActionService.GetComponentActions
- uid: System.ComponentModel.Design.DesignerActionService.GetComponentDesignerActions*
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: GetComponentDesignerActions
  nameWithType: DesignerActionService.GetComponentDesignerActions
- uid: System.ComponentModel.Design.DesignerActionService.GetComponentServiceActions*
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: GetComponentServiceActions
  nameWithType: DesignerActionService.GetComponentServiceActions
- uid: System.ComponentModel.Design.DesignerActionService.Remove*
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: Remove
  nameWithType: DesignerActionService.Remove
