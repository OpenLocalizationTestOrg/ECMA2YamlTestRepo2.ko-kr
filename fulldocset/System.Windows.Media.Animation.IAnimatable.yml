### YamlMime:ManagedReference
items:
- uid: System.Windows.Media.Animation.IAnimatable
  id: IAnimatable
  children:
  - System.Windows.Media.Animation.IAnimatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.Media.Animation.IAnimatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.IAnimatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)
  - System.Windows.Media.Animation.IAnimatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.IAnimatable.GetAnimationBaseValue(System.Windows.DependencyProperty)
  - System.Windows.Media.Animation.IAnimatable.HasAnimatedProperties
  langs:
  - csharp
  name: IAnimatable
  nameWithType: IAnimatable
  fullName: System.Windows.Media.Animation.IAnimatable
  type: Interface
  summary: "이 형식은 지원는 [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] 인프라 하며 사용자 코드에서 직접 사용할 수 없습니다. 파생 되어야 클래스를 애니메이션을 적용 하려면 <xref href=&quot;System.Windows.UIElement&quot;> </xref>, <xref href=&quot;System.Windows.ContentElement&quot;> </xref>, 또는 <xref href=&quot;System.Windows.Media.Animation.Animatable&quot;> </xref>합니다."
  syntax:
    content: public interface IAnimatable
  implements: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.IAnimatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)
  id: ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)
  parent: System.Windows.Media.Animation.IAnimatable
  langs:
  - csharp
  name: ApplyAnimationClock(DependencyProperty,AnimationClock)
  nameWithType: IAnimatable.ApplyAnimationClock(DependencyProperty,AnimationClock)
  fullName: System.Windows.Media.Animation.IAnimatable.ApplyAnimationClock(DependencyProperty,AnimationClock)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "효과 적용 한 지정 <xref href=&quot;System.Windows.Media.Animation.AnimationClock&quot;> </xref> 지정 된 종속성 속성에 있습니다."
  syntax:
    content: public void ApplyAnimationClock (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationClock clock);
    parameters:
    - id: dp
      type: System.Windows.DependencyProperty
      description: "<xref href=&quot;System.Windows.DependencyProperty&quot;> </xref> 에 애니메이션을 적용 합니다."
    - id: clock
      type: System.Windows.Media.Animation.AnimationClock
      description: "<xref href=&quot;System.Windows.Media.Animation.AnimationClock&quot;> </xref> 속성에 애니메이션 효과가 적용 합니다."
  overload: System.Windows.Media.Animation.IAnimatable.ApplyAnimationClock*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.IAnimatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)
  id: ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)
  parent: System.Windows.Media.Animation.IAnimatable
  langs:
  - csharp
  name: ApplyAnimationClock(DependencyProperty,AnimationClock,HandoffBehavior)
  nameWithType: IAnimatable.ApplyAnimationClock(DependencyProperty,AnimationClock,HandoffBehavior)
  fullName: System.Windows.Media.Animation.IAnimatable.ApplyAnimationClock(DependencyProperty,AnimationClock,HandoffBehavior)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "효과 적용 한 지정 <xref href=&quot;System.Windows.Media.Animation.AnimationClock&quot;> </xref> 지정 된 종속성 속성에 있습니다. 새 효과 <xref href=&quot;System.Windows.Media.Animation.AnimationClock&quot;> </xref> 현재 애니메이션에 따라 사용자가 값은 <code> handoffBehavior </code> 매개 변수입니다."
  syntax:
    content: public void ApplyAnimationClock (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationClock clock, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);
    parameters:
    - id: dp
      type: System.Windows.DependencyProperty
      description: "<xref href=&quot;System.Windows.DependencyProperty&quot;> </xref> 에 애니메이션을 적용 합니다."
    - id: clock
      type: System.Windows.Media.Animation.AnimationClock
      description: "<xref href=&quot;System.Windows.Media.Animation.AnimationClock&quot;> </xref> 속성에 애니메이션 효과가 적용 합니다."
    - id: handoffBehavior
      type: System.Windows.Media.Animation.HandoffBehavior
      description: "결정 방법을 새 <xref href=&quot;System.Windows.Media.Animation.AnimationClock&quot;> </xref> 에서 전환 또는 속성에 현재 애니메이션이 모두에 영향을 줄 합니다."
  overload: System.Windows.Media.Animation.IAnimatable.ApplyAnimationClock*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.IAnimatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)
  id: BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)
  parent: System.Windows.Media.Animation.IAnimatable
  langs:
  - csharp
  name: BeginAnimation(DependencyProperty,AnimationTimeline)
  nameWithType: IAnimatable.BeginAnimation(DependencyProperty,AnimationTimeline)
  fullName: System.Windows.Media.Animation.IAnimatable.BeginAnimation(DependencyProperty,AnimationTimeline)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "에 대 한 애니메이션 시퀀스를 시작는 <xref href=&quot;System.Windows.DependencyProperty&quot;> </xref> 개체를 기반으로 지정 <xref href=&quot;System.Windows.Media.Animation.AnimationTimeline&quot;> </xref>합니다."
  remarks: "애니메이션 시퀀스는 다음 프레임이 렌더링 되 면 발생 합니다."
  syntax:
    content: public void BeginAnimation (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationTimeline animation);
    parameters:
    - id: dp
      type: System.Windows.DependencyProperty
      description: "애니메이션 효과를 줄 개체입니다."
    - id: animation
      type: System.Windows.Media.Animation.AnimationTimeline
      description: "속성에 애니메이션을 적용 하는 데 필요한 기능으로 시간대를 지정 합니다."
  overload: System.Windows.Media.Animation.IAnimatable.BeginAnimation*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.IAnimatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)
  id: BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)
  parent: System.Windows.Media.Animation.IAnimatable
  langs:
  - csharp
  name: BeginAnimation(DependencyProperty,AnimationTimeline,HandoffBehavior)
  nameWithType: IAnimatable.BeginAnimation(DependencyProperty,AnimationTimeline,HandoffBehavior)
  fullName: System.Windows.Media.Animation.IAnimatable.BeginAnimation(DependencyProperty,AnimationTimeline,HandoffBehavior)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "에 대 한 애니메이션 시퀀스를 시작는 <xref href=&quot;System.Windows.DependencyProperty&quot;> </xref>개체를 기반으로 지정 된 <xref href=&quot;System.Windows.Media.Animation.AnimationTimeline&quot;> </xref> 및 <xref href=&quot;System.Windows.Media.Animation.HandoffBehavior&quot;> </xref>합니다."
  remarks: "애니메이션 시퀀스는 다음 프레임이 렌더링 되 면 발생 합니다."
  syntax:
    content: public void BeginAnimation (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationTimeline animation, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);
    parameters:
    - id: dp
      type: System.Windows.DependencyProperty
      description: "애니메이션 효과를 줄 개체입니다."
    - id: animation
      type: System.Windows.Media.Animation.AnimationTimeline
      description: "새 애니메이션을 조정 하는 데 필요한 기능으로 시간대를 지정 합니다."
    - id: handoffBehavior
      type: System.Windows.Media.Animation.HandoffBehavior
      description: "모든 관련 애니메이션 시퀀스와 상호 작용 하는 방식을 지정 하는 개체입니다."
  overload: System.Windows.Media.Animation.IAnimatable.BeginAnimation*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.IAnimatable.GetAnimationBaseValue(System.Windows.DependencyProperty)
  id: GetAnimationBaseValue(System.Windows.DependencyProperty)
  parent: System.Windows.Media.Animation.IAnimatable
  langs:
  - csharp
  name: GetAnimationBaseValue(DependencyProperty)
  nameWithType: IAnimatable.GetAnimationBaseValue(DependencyProperty)
  fullName: System.Windows.Media.Animation.IAnimatable.GetAnimationBaseValue(DependencyProperty)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "지정 된 기준 값을 검색 <xref href=&quot;System.Windows.DependencyProperty&quot;> </xref> 개체입니다."
  remarks: "대신이 메서드를 사용 하 여 <xref:System.Windows.DependencyObject.GetValue%2A>애니메이션된 속성의 애니메이션이 적용 되지 않은 값을 검색 하려는 경우.</xref:System.Windows.DependencyObject.GetValue%2A> 이 메서드는 사실 활용 하는 [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] 애니메이션 대상 속성의 원래 값을 제거 하지 않습니다. 자세한 내용은 참조 [종속성 속성 값 우선 순위](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public object GetAnimationBaseValue (System.Windows.DependencyProperty dp);
    parameters:
    - id: dp
      type: System.Windows.DependencyProperty
      description: "요청 되는 기준 값 개체입니다."
    return:
      type: System.Object
      description: "기본 값을 나타내는 개체입니다. <code> Dp </code>합니다."
  overload: System.Windows.Media.Animation.IAnimatable.GetAnimationBaseValue*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.IAnimatable.HasAnimatedProperties
  id: HasAnimatedProperties
  parent: System.Windows.Media.Animation.IAnimatable
  langs:
  - csharp
  name: HasAnimatedProperties
  nameWithType: IAnimatable.HasAnimatedProperties
  fullName: System.Windows.Media.Animation.IAnimatable.HasAnimatedProperties
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "이 인스턴스의 모든 애니메이션된 속성이 있는지 여부를 나타내는 값을 가져옵니다."
  remarks: "이 속성을 반환 하는 참고 `true` 경우에 연결 되어 있던 애니메이션 <xref:System.Windows.Media.Animation.ClockState>또는 <xref:System.Windows.Media.Animation.ClockState>.</xref:System.Windows.Media.Animation.ClockState> </xref:System.Windows.Media.Animation.ClockState>"
  syntax:
    content: public bool HasAnimatedProperties { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우는 <xref href=&quot;System.Windows.Media.Animation.Clock&quot;> </xref> 현재 개체의 속성 중 하나 이상에 연결 되지 않았으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Media.Animation.IAnimatable.HasAnimatedProperties*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Media.Animation.IAnimatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)
  parent: System.Windows.Media.Animation.IAnimatable
  isExternal: false
  name: ApplyAnimationClock(DependencyProperty,AnimationClock)
  nameWithType: IAnimatable.ApplyAnimationClock(DependencyProperty,AnimationClock)
  fullName: System.Windows.Media.Animation.IAnimatable.ApplyAnimationClock(DependencyProperty,AnimationClock)
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.Media.Animation.AnimationClock
  parent: System.Windows.Media.Animation
  isExternal: false
  name: AnimationClock
  nameWithType: AnimationClock
  fullName: System.Windows.Media.Animation.AnimationClock
- uid: System.Windows.Media.Animation.IAnimatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)
  parent: System.Windows.Media.Animation.IAnimatable
  isExternal: false
  name: ApplyAnimationClock(DependencyProperty,AnimationClock,HandoffBehavior)
  nameWithType: IAnimatable.ApplyAnimationClock(DependencyProperty,AnimationClock,HandoffBehavior)
  fullName: System.Windows.Media.Animation.IAnimatable.ApplyAnimationClock(DependencyProperty,AnimationClock,HandoffBehavior)
- uid: System.Windows.Media.Animation.HandoffBehavior
  parent: System.Windows.Media.Animation
  isExternal: false
  name: HandoffBehavior
  nameWithType: HandoffBehavior
  fullName: System.Windows.Media.Animation.HandoffBehavior
- uid: System.Windows.Media.Animation.IAnimatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)
  parent: System.Windows.Media.Animation.IAnimatable
  isExternal: false
  name: BeginAnimation(DependencyProperty,AnimationTimeline)
  nameWithType: IAnimatable.BeginAnimation(DependencyProperty,AnimationTimeline)
  fullName: System.Windows.Media.Animation.IAnimatable.BeginAnimation(DependencyProperty,AnimationTimeline)
- uid: System.Windows.Media.Animation.AnimationTimeline
  parent: System.Windows.Media.Animation
  isExternal: false
  name: AnimationTimeline
  nameWithType: AnimationTimeline
  fullName: System.Windows.Media.Animation.AnimationTimeline
- uid: System.Windows.Media.Animation.IAnimatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)
  parent: System.Windows.Media.Animation.IAnimatable
  isExternal: false
  name: BeginAnimation(DependencyProperty,AnimationTimeline,HandoffBehavior)
  nameWithType: IAnimatable.BeginAnimation(DependencyProperty,AnimationTimeline,HandoffBehavior)
  fullName: System.Windows.Media.Animation.IAnimatable.BeginAnimation(DependencyProperty,AnimationTimeline,HandoffBehavior)
- uid: System.Windows.Media.Animation.IAnimatable.GetAnimationBaseValue(System.Windows.DependencyProperty)
  parent: System.Windows.Media.Animation.IAnimatable
  isExternal: false
  name: GetAnimationBaseValue(DependencyProperty)
  nameWithType: IAnimatable.GetAnimationBaseValue(DependencyProperty)
  fullName: System.Windows.Media.Animation.IAnimatable.GetAnimationBaseValue(DependencyProperty)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Media.Animation.IAnimatable.HasAnimatedProperties
  parent: System.Windows.Media.Animation.IAnimatable
  isExternal: false
  name: HasAnimatedProperties
  nameWithType: IAnimatable.HasAnimatedProperties
  fullName: System.Windows.Media.Animation.IAnimatable.HasAnimatedProperties
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Media.Animation.IAnimatable.ApplyAnimationClock*
  parent: System.Windows.Media.Animation.IAnimatable
  isExternal: false
  name: ApplyAnimationClock
  nameWithType: IAnimatable.ApplyAnimationClock
- uid: System.Windows.Media.Animation.IAnimatable.BeginAnimation*
  parent: System.Windows.Media.Animation.IAnimatable
  isExternal: false
  name: BeginAnimation
  nameWithType: IAnimatable.BeginAnimation
- uid: System.Windows.Media.Animation.IAnimatable.GetAnimationBaseValue*
  parent: System.Windows.Media.Animation.IAnimatable
  isExternal: false
  name: GetAnimationBaseValue
  nameWithType: IAnimatable.GetAnimationBaseValue
- uid: System.Windows.Media.Animation.IAnimatable.HasAnimatedProperties*
  parent: System.Windows.Media.Animation.IAnimatable
  isExternal: false
  name: HasAnimatedProperties
  nameWithType: IAnimatable.HasAnimatedProperties
