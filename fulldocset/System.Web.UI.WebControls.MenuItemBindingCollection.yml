### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.MenuItemBindingCollection
  id: MenuItemBindingCollection
  children:
  - System.Web.UI.WebControls.MenuItemBindingCollection.Add(System.Web.UI.WebControls.MenuItemBinding)
  - System.Web.UI.WebControls.MenuItemBindingCollection.Contains(System.Web.UI.WebControls.MenuItemBinding)
  - System.Web.UI.WebControls.MenuItemBindingCollection.CopyTo(System.Web.UI.WebControls.MenuItemBinding[],System.Int32)
  - System.Web.UI.WebControls.MenuItemBindingCollection.CreateKnownType(System.Int32)
  - System.Web.UI.WebControls.MenuItemBindingCollection.GetKnownTypes
  - System.Web.UI.WebControls.MenuItemBindingCollection.IndexOf(System.Web.UI.WebControls.MenuItemBinding)
  - System.Web.UI.WebControls.MenuItemBindingCollection.Insert(System.Int32,System.Web.UI.WebControls.MenuItemBinding)
  - System.Web.UI.WebControls.MenuItemBindingCollection.Item(System.Int32)
  - System.Web.UI.WebControls.MenuItemBindingCollection.OnClear
  - System.Web.UI.WebControls.MenuItemBindingCollection.OnRemoveComplete(System.Int32,System.Object)
  - System.Web.UI.WebControls.MenuItemBindingCollection.OnValidate(System.Object)
  - System.Web.UI.WebControls.MenuItemBindingCollection.Remove(System.Web.UI.WebControls.MenuItemBinding)
  - System.Web.UI.WebControls.MenuItemBindingCollection.RemoveAt(System.Int32)
  - System.Web.UI.WebControls.MenuItemBindingCollection.SetDirtyObject(System.Object)
  langs:
  - csharp
  name: MenuItemBindingCollection
  nameWithType: MenuItemBindingCollection
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection
  type: Class
  summary: "컬렉션을 나타냅니다 <xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref> 개체입니다."
  remarks: "MenuItemBindingCollection 클래스는 저장 하 고 컬렉션을 관리 하는 데 사용 <xref:System.Web.UI.WebControls.MenuItemBinding>개체에 <xref:System.Web.UI.WebControls.Menu>컨트롤.</xref:System.Web.UI.WebControls.Menu> </xref:System.Web.UI.WebControls.MenuItemBinding> <xref:System.Web.UI.WebControls.Menu>컨트롤 MenuItemBindingCollection 클래스에 대 한 데이터 형식으로 사용 하 여 해당 <xref:System.Web.UI.WebControls.Menu.DataBindings%2A>속성.</xref:System.Web.UI.WebControls.Menu.DataBindings%2A> </xref:System.Web.UI.WebControls.Menu> <xref:System.Web.UI.WebControls.Menu.DataBindings%2A>속성에 대해 정의 된 모든 메뉴 항목 바인딩을 저장을 사용 하 여 <xref:System.Web.UI.WebControls.Menu>컨트롤.</xref:System.Web.UI.WebControls.Menu> </xref:System.Web.UI.WebControls.Menu.DataBindings%2A>      > [!NOTE] > 되는 순서 <xref:System.Web.UI.WebControls.MenuItemBinding>에 나타나는 개체 컬렉션의 해당 개체에 메뉴 항목에 적용 되는 방식에 영향을 주지는 <xref:System.Web.UI.WebControls.Menu>컨트롤.</xref:System.Web.UI.WebControls.Menu> </xref:System.Web.UI.WebControls.MenuItemBinding>       MenuItemBindingCollection 클래스를 사용 하는 컬렉션의 항목에 액세스 하는 여러 방법을 지원:-사용 된 <xref:System.Web.UI.WebControls.MenuItemBindingCollection.Item%2A>인덱서를 직접 검색 하는 <xref:System.Web.UI.WebControls.MenuItemBinding>특정 인덱스에 개체.</xref:System.Web.UI.WebControls.MenuItemBinding> </xref:System.Web.UI.WebControls.MenuItemBindingCollection.Item%2A>      -사용 된 <xref:System.Web.UI.StateManagedCollection.GetEnumerator%2A>메서드는 컬렉션을 반복 하는 데 사용할 수 있는 열거자를 만드는.</xref:System.Web.UI.StateManagedCollection.GetEnumerator%2A>      -사용 된 <xref:System.Web.UI.WebControls.MenuItemCollection.CopyTo%2A>컬렉션의 내용을 배열에 복사 하려면.</xref:System.Web.UI.WebControls.MenuItemCollection.CopyTo%2A>       MenuItemBindingCollection 개체를 추가 및 제거 하 여 프로그래밍 방식으로 관리할 수 있습니다 <xref:System.Web.UI.WebControls.MenuItemBinding>개체입니다.</xref:System.Web.UI.WebControls.MenuItemBinding> 메뉴 항목 컬렉션에 추가 하려면 사용 된 <xref:System.Web.UI.WebControls.MenuItemBindingCollection.Add%2A>또는 <xref:System.Web.UI.WebControls.MenuItemBindingCollection.Insert%2A>메서드.</xref:System.Web.UI.WebControls.MenuItemBindingCollection.Insert%2A> </xref:System.Web.UI.WebControls.MenuItemBindingCollection.Add%2A> 컬렉션에서 노드를 제거 하려면 사용 하 여는 <xref:System.Web.UI.WebControls.MenuItemBindingCollection.Remove%2A>, <xref:System.Web.UI.WebControls.MenuItemBindingCollection.RemoveAt%2A>, 또는 <xref:System.Web.UI.StateManagedCollection.Clear%2A>메서드.</xref:System.Web.UI.StateManagedCollection.Clear%2A> </xref:System.Web.UI.WebControls.MenuItemBindingCollection.RemoveAt%2A> </xref:System.Web.UI.WebControls.MenuItemBindingCollection.Remove%2A>       MenuItemBindingCollection 클래스 자체는 컬렉션에 대 한 정보를 검색할 수 있도록 하는 메서드와 속성을 포함 합니다. 컬렉션에 있는 항목 수를 확인 하려면 사용 하 여는 <xref:System.Web.UI.StateManagedCollection.Count%2A>속성.</xref:System.Web.UI.StateManagedCollection.Count%2A> 특정 컬렉션에 있는지 확인 하려는 경우 <xref:System.Web.UI.WebControls.MenuItemBinding>개체를 가져오려면는 <xref:System.Web.UI.WebControls.MenuItemBindingCollection.Contains%2A>메서드.</xref:System.Web.UI.WebControls.MenuItemBindingCollection.Contains%2A> </xref:System.Web.UI.WebControls.MenuItemBinding> 인덱스를 가져옵니다는 <xref:System.Web.UI.WebControls.MenuItemBinding>사용 하 여 컬렉션의 개체는 <xref:System.Web.UI.WebControls.MenuItemBindingCollection.IndexOf%2A>메서드.</xref:System.Web.UI.WebControls.MenuItemBindingCollection.IndexOf%2A> </xref:System.Web.UI.WebControls.MenuItemBinding>"
  example:
  - "The following code example demonstrates how to populate a MenuItemBindingCollection object declaratively. For this example to work correctly, you must copy the sample XML data below to a file named Map.xml.  \n  \n [!code-vb[MenuBindings#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_217_1.aspx)]\n [!code-cs[MenuBindings#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_217_1.aspx)]  \n  \n The following code example demonstrates how to add <xref:System.Web.UI.WebControls.MenuItemBinding> objects to a MenuItemBindingCollection object programmatically. For this example to work correctly, you must copy the sample XML data below to a file named Map.xml.  \n  \n [!code-cs[MenuItemBindingCollectionAdd#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_217_2.aspx)]\n [!code-vb[MenuItemBindingCollectionAdd#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_217_2.aspx)]  \n  \n The following is sample site map data for the previous examples.  \n  \n `<MapHomeNode url=\"~\\Home.aspx\"`  \n  \n `title=\"Home\"`  \n  \n `description=\"Home\">`  \n  \n `<MapNode url=\"~\\Music.aspx\"`  \n  \n `title=\"Music\"`  \n  \n `description=\"Music\">`  \n  \n `<MapNode url=\"~\\Classical.aspx\"`  \n  \n `title=\"Classical\"`  \n  \n `description=\"Classical\"/>`  \n  \n `<MapNode url=\"~\\Rock.aspx\"`  \n  \n `title=\"Rock\"`  \n  \n `description=\"Rock\"/>`  \n  \n `<MapNode url=\"~\\Jazz.aspx\"`  \n  \n `title=\"Jazz\"`  \n  \n `description=\"Jazz\"/>`  \n  \n `</MapNode>`  \n  \n `<MapNode url=\"~\\Movies.aspx\"`  \n  \n `title=\"Movies\"`  \n  \n `description=\"Movies\">`  \n  \n `<MapNode url=\"~\\Action.aspx\"`  \n  \n `title=\"Action\"`  \n  \n `description=\"Action\"/>`  \n  \n `<MapNode url=\"~\\Drama.aspx\"`  \n  \n `title=\"Drama\"`  \n  \n `description=\"Drama\"/>`  \n  \n `<MapNode url=\"~\\Musical.aspx\"`  \n  \n `title=\"Musical\"`  \n  \n `description=\"Musical\"/>`  \n  \n `</MapNode>`  \n  \n `</MapHomeNode>`"
  syntax:
    content: 'public sealed class MenuItemBindingCollection : System.Web.UI.StateManagedCollection'
  inheritance:
  - System.Object
  - System.Web.UI.StateManagedCollection
  implements: []
  inheritedMembers:
  - System.Web.UI.StateManagedCollection.Clear
  - System.Web.UI.StateManagedCollection.CopyTo(System.Array,System.Int32)
  - System.Web.UI.StateManagedCollection.Count
  - System.Web.UI.StateManagedCollection.GetEnumerator
  - System.Web.UI.StateManagedCollection.OnClearComplete
  - System.Web.UI.StateManagedCollection.OnInsert(System.Int32,System.Object)
  - System.Web.UI.StateManagedCollection.OnInsertComplete(System.Int32,System.Object)
  - System.Web.UI.StateManagedCollection.OnRemove(System.Int32,System.Object)
  - System.Web.UI.StateManagedCollection.SetDirty
  - System.Web.UI.StateManagedCollection.System#Collections#ICollection#Count
  - System.Web.UI.StateManagedCollection.System#Collections#ICollection#IsSynchronized
  - System.Web.UI.StateManagedCollection.System#Collections#ICollection#SyncRoot
  - System.Web.UI.StateManagedCollection.System#Collections#IEnumerable#GetEnumerator
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Add(System.Object)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Clear
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Contains(System.Object)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#IndexOf(System.Object)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#IsFixedSize
  - System.Web.UI.StateManagedCollection.System#Collections#IList#IsReadOnly
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Item(System.Int32)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Remove(System.Object)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#RemoveAt(System.Int32)
  - System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#TrackViewState
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.Add(System.Web.UI.WebControls.MenuItemBinding)
  id: Add(System.Web.UI.WebControls.MenuItemBinding)
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  langs:
  - csharp
  name: Add(MenuItemBinding)
  nameWithType: MenuItemBindingCollection.Add(MenuItemBinding)
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.Add(MenuItemBinding)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "지정 된 추가 <xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref> 개체 컬렉션의 끝입니다."
  remarks: "Add 메서드를 사용 하 여 지정 된 추가할 <xref:System.Web.UI.WebControls.MenuItemBinding>개체 컬렉션의 끝입니다.</xref:System.Web.UI.WebControls.MenuItemBinding>      > [!NOTE] > Null 값을 추가 하 고 중복 수 <xref:System.Web.UI.WebControls.MenuItemBinding>개체를 컬렉션에.</xref:System.Web.UI.WebControls.MenuItemBinding>       삽입할 수 있습니다는 <xref:System.Web.UI.WebControls.MenuItemBinding>를 사용 하 여 특정 인덱스에 컬렉션의 개체는 <xref:System.Web.UI.WebControls.MenuItemBindingCollection.Insert%2A>메서드.</xref:System.Web.UI.WebControls.MenuItemBindingCollection.Insert%2A> </xref:System.Web.UI.WebControls.MenuItemBinding>      > [!NOTE] > 되는 순서 <xref:System.Web.UI.WebControls.MenuItemBinding>에 나타나는 개체 컬렉션의 해당 개체에 메뉴 항목에 적용 되는 방식에 영향을 주지는 <xref:System.Web.UI.WebControls.Menu>컨트롤.</xref:System.Web.UI.WebControls.Menu> </xref:System.Web.UI.WebControls.MenuItemBinding>"
  example:
  - "The following code example demonstrates how to use the Add method to append a <xref:System.Web.UI.WebControls.MenuItemBinding> object to the end of the <xref:System.Web.UI.WebControls.Menu.DataBindings%2A> collection of a <xref:System.Web.UI.WebControls.Menu> control. For this example to work correctly, you must copy the sample XML data below to a file named Map.xml.  \n  \n [!code-cs[MenuItemBindingCollectionAdd#1](~/add/codesnippet/csharp/455e41fd-8e8e-40dd-99e4-_1.aspx)]\n [!code-vb[MenuItemBindingCollectionAdd#1](~/add/codesnippet/visualbasic/455e41fd-8e8e-40dd-99e4-_1.aspx)]  \n  \n The following is sample site map data for the previous example.  \n  \n `<MapHomeNode url=\"~\\Home.aspx\"`  \n  \n `title=\"Home\"`  \n  \n `description=\"Home\">`  \n  \n `<MapNode url=\"~\\Music.aspx\"`  \n  \n `title=\"Music\"`  \n  \n `description=\"Music\">`  \n  \n `<MapNode url=\"~\\Classical.aspx\"`  \n  \n `title=\"Classical\"`  \n  \n `description=\"Classical\"/>`  \n  \n `<MapNode url=\"~\\Rock.aspx\"`  \n  \n `title=\"Rock\"`  \n  \n `description=\"Rock\"/>`  \n  \n `<MapNode url=\"~\\Jazz.aspx\"`  \n  \n `title=\"Jazz\"`  \n  \n `description=\"Jazz\"/>`  \n  \n `</MapNode>`  \n  \n `<MapNode url=\"~\\Movies.aspx\"`  \n  \n `title=\"Movies\"`  \n  \n `description=\"Movies\">`  \n  \n `<MapNode url=\"~\\Action.aspx\"`  \n  \n `title=\"Action\"`  \n  \n `description=\"Action\"/>`  \n  \n `<MapNode url=\"~\\Drama.aspx\"`  \n  \n `title=\"Drama\"`  \n  \n `description=\"Drama\"/>`  \n  \n `<MapNode url=\"~\\Musical.aspx\"`  \n  \n `title=\"Musical\"`  \n  \n `description=\"Musical\"/>`  \n  \n `</MapNode>`  \n  \n `</MapHomeNode>`"
  syntax:
    content: public int Add (System.Web.UI.WebControls.MenuItemBinding binding);
    parameters:
    - id: binding
      type: System.Web.UI.WebControls.MenuItemBinding
      description: "<xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref> 컬렉션의 끝에 추가할 합니다."
    return:
      type: System.Int32
      description: "인덱스는 <xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref> 를 컬렉션에 삽입 합니다."
  overload: System.Web.UI.WebControls.MenuItemBindingCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.Contains(System.Web.UI.WebControls.MenuItemBinding)
  id: Contains(System.Web.UI.WebControls.MenuItemBinding)
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  langs:
  - csharp
  name: Contains(MenuItemBinding)
  nameWithType: MenuItemBindingCollection.Contains(MenuItemBinding)
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.Contains(MenuItemBinding)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "결정 하는지 여부를 지정 된 <xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref> 개체 컬렉션에에서 포함 되어 있습니다."
  remarks: "Contains 메서드를 사용 하는지 여부를 <xref:System.Web.UI.WebControls.MenuItemBinding>개체가 컬렉션에 포함 되어 있습니다.</xref:System.Web.UI.WebControls.MenuItemBinding> 이 메서드는의 존재 여부를 테스트 하는 데 주로 사용 된 <xref:System.Web.UI.WebControls.MenuItemBinding>추가 하거나 컬렉션에서 제거 되는 메뉴 항목 바인딩 등의 작업을 수행 하기 전에 개체입니다.</xref:System.Web.UI.WebControls.MenuItemBinding>"
  syntax:
    content: public bool Contains (System.Web.UI.WebControls.MenuItemBinding binding);
    parameters:
    - id: binding
      type: System.Web.UI.WebControls.MenuItemBinding
      description: "<xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref> 찾으려고 합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>하는 경우 지정 된 <xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref> 컬렉션에 포함 되지 않았으면, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.MenuItemBindingCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.CopyTo(System.Web.UI.WebControls.MenuItemBinding[],System.Int32)
  id: CopyTo(System.Web.UI.WebControls.MenuItemBinding[],System.Int32)
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  langs:
  - csharp
  name: CopyTo(MenuItemBinding[],Int32)
  nameWithType: MenuItemBindingCollection.CopyTo(MenuItemBinding[],Int32)
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.CopyTo(MenuItemBinding[],Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "모든 항목을 복사는 <xref href=&quot;System.Web.UI.WebControls.MenuItemBindingCollection&quot;> </xref> 호환 가능한&1; 차원 배열에 개체 <xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref> 대상 배열의 지정된 된 인덱스부터 시작 합니다."
  remarks: "사용 하 여는 <xref:System.Web.UI.WebControls.MenuItemCollection.CopyTo%2A>메서드를 지정된 된&0;부터 시작 배열에 컬렉션의 내용을 복사 합니다.</xref:System.Web.UI.WebControls.MenuItemCollection.CopyTo%2A> 항목 대상 배열의 지정 된 인덱스부터 복사 됩니다. 배열에서는 다음 구문을 사용할 수 있습니다 배열에서 항목에 액세스 하는 <xref:System.Web.UI.WebControls.MenuItemBindingCollection>개체입니다.</xref:System.Web.UI.WebControls.MenuItemBindingCollection>       대신 사용할 수도 있습니다는 <xref:System.Web.UI.StateManagedCollection.GetEnumerator%2A>컬렉션의 항목에 액세스를 사용할 수 있는 열거자를 만드는 방법.</xref:System.Web.UI.StateManagedCollection.GetEnumerator%2A>"
  example:
  - "The following code example demonstrates how to use the CopyTo method to copy the <xref:System.Web.UI.WebControls.MenuItemBinding> objects from the collection to an array. The array is then iterated through to display the properties of the <xref:System.Web.UI.WebControls.MenuItemBinding> objects. For this example to work correctly, you must copy the sample XML data below to a file named Map.xml.  \n  \n [!code-cs[MenuItemBindingCollectionCopyTo#1](~/add/codesnippet/csharp/23779e9d-0868-4199-8f19-_1.aspx)]\n [!code-vb[MenuItemBindingCollectionCopyTo#1](~/add/codesnippet/visualbasic/23779e9d-0868-4199-8f19-_1.aspx)]  \n  \n The following is sample site map data for the previous example.  \n  \n `<MapHomeNode url=\"~\\Home.aspx\"`  \n  \n `title=\"Home\"`  \n  \n `description=\"Home\">`  \n  \n `<MapNode url=\"~\\Music.aspx\"`  \n  \n `title=\"Music\"`  \n  \n `description=\"Music\">`  \n  \n `<MapNode url=\"~\\Classical.aspx\"`  \n  \n `title=\"Classical\"`  \n  \n `description=\"Classical\"/>`  \n  \n `<MapNode url=\"~\\Rock.aspx\"`  \n  \n `title=\"Rock\"`  \n  \n `description=\"Rock\"/>`  \n  \n `<MapNode url=\"~\\Jazz.aspx\"`  \n  \n `title=\"Jazz\"`  \n  \n `description=\"Jazz\"/>`  \n  \n `</MapNode>`  \n  \n `<MapNode url=\"~\\Movies.aspx\"`  \n  \n `title=\"Movies\"`  \n  \n `description=\"Movies\">`  \n  \n `<MapNode url=\"~\\Action.aspx\"`  \n  \n `title=\"Action\"`  \n  \n `description=\"Action\"/>`  \n  \n `<MapNode url=\"~\\Drama.aspx\"`  \n  \n `title=\"Drama\"`  \n  \n `description=\"Drama\"/>`  \n  \n `<MapNode url=\"~\\Musical.aspx\"`  \n  \n `title=\"Musical\"`  \n  \n `description=\"Musical\"/>`  \n  \n `</MapNode>`  \n  \n `</MapHomeNode>`"
  syntax:
    content: public void CopyTo (System.Web.UI.WebControls.MenuItemBinding[] array, int index);
    parameters:
    - id: array
      type: System.Web.UI.WebControls.MenuItemBinding[]
      description: "0부터 시작 배열 <xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref> 컬렉션에서 복사한 항목을 받는 개체입니다."
    - id: index
      type: System.Int32
      description: "대상 배열에서 복사 된 내용을 받기 시작 하는 위치입니다."
  overload: System.Web.UI.WebControls.MenuItemBindingCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.CreateKnownType(System.Int32)
  id: CreateKnownType(System.Int32)
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  langs:
  - csharp
  name: CreateKnownType(Int32)
  nameWithType: MenuItemBindingCollection.CreateKnownType(Int32)
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.CreateKnownType(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  syntax:
    content: protected override object CreateKnownType (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "추가할 수 있습니다."
    return:
      type: System.Object
      description: "추가할 수 있습니다."
  overload: System.Web.UI.WebControls.MenuItemBindingCollection.CreateKnownType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.GetKnownTypes
  id: GetKnownTypes
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  langs:
  - csharp
  name: GetKnownTypes()
  nameWithType: MenuItemBindingCollection.GetKnownTypes()
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.GetKnownTypes()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  syntax:
    content: protected override Type[] GetKnownTypes ();
    parameters: []
    return:
      type: System.Type[]
      description: "추가할 수 있습니다."
  overload: System.Web.UI.WebControls.MenuItemBindingCollection.GetKnownTypes*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.IndexOf(System.Web.UI.WebControls.MenuItemBinding)
  id: IndexOf(System.Web.UI.WebControls.MenuItemBinding)
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  langs:
  - csharp
  name: IndexOf(MenuItemBinding)
  nameWithType: MenuItemBindingCollection.IndexOf(MenuItemBinding)
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.IndexOf(MenuItemBinding)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "지정 된 인덱스를 결정 <xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref> 컬렉션의 개체입니다."
  remarks: "IndexOf 메서드를 사용 하 여 지정 된 인덱스를 확인 하려면 <xref:System.Web.UI.WebControls.MenuItemBinding>컬렉션의 개체입니다.</xref:System.Web.UI.WebControls.MenuItemBinding>      > [!NOTE] > 되는 순서 <xref:System.Web.UI.WebControls.MenuItemBinding>에 나타나는 개체 컬렉션의 해당 개체에 메뉴 항목에 적용 되는 방식에 영향을 주지는 <xref:System.Web.UI.WebControls.Menu>컨트롤.</xref:System.Web.UI.WebControls.Menu> </xref:System.Web.UI.WebControls.MenuItemBinding>       메뉴 항목 바인딩을 컬렉션에 없는 경우-1이 반환 됩니다.      > [!NOTE] > 지정한 메뉴 항목 바인딩 컬렉션에 여러 번 나타나면 처음 나타나는 인덱스 반환 됩니다."
  example:
  - "The following code example demonstrates how to use the IndexOf method to determine the index of a <xref:System.Web.UI.WebControls.MenuItemBinding> object in the collection. For this example to work correctly, you must copy the sample XML data below to a file named Map.xml.  \n  \n [!code-vb[MenuItemBindingCollectionIndexOf#1](~/add/codesnippet/visualbasic/4ddc9e66-fb4e-4063-8f80-_1.aspx)]\n [!code-cs[MenuItemBindingCollectionIndexOf#1](~/add/codesnippet/csharp/4ddc9e66-fb4e-4063-8f80-_1.aspx)]  \n  \n The following is sample site map data for the previous example.  \n  \n `<MapHomeNode url=\"~\\Home.aspx\"`  \n  \n `title=\"Home\"`  \n  \n `description=\"Home\">`  \n  \n `<MapNode url=\"~\\Music.aspx\"`  \n  \n `title=\"Music\"`  \n  \n `description=\"Music\">`  \n  \n `<MapNode url=\"~\\Classical.aspx\"`  \n  \n `title=\"Classical\"`  \n  \n `description=\"Classical\"/>`  \n  \n `<MapNode url=\"~\\Rock.aspx\"`  \n  \n `title=\"Rock\"`  \n  \n `description=\"Rock\"/>`  \n  \n `<MapNode url=\"~\\Jazz.aspx\"`  \n  \n `title=\"Jazz\"`  \n  \n `description=\"Jazz\"/>`  \n  \n `</MapNode>`  \n  \n `<MapNode url=\"~\\Movies.aspx\"`  \n  \n `title=\"Movies\"`  \n  \n `description=\"Movies\">`  \n  \n `<MapNode url=\"~\\Action.aspx\"`  \n  \n `title=\"Action\"`  \n  \n `description=\"Action\"/>`  \n  \n `<MapNode url=\"~\\Drama.aspx\"`  \n  \n `title=\"Drama\"`  \n  \n `description=\"Drama\"/>`  \n  \n `<MapNode url=\"~\\Musical.aspx\"`  \n  \n `title=\"Musical\"`  \n  \n `description=\"Musical\"/>`  \n  \n `</MapNode>`  \n  \n `</MapHomeNode>`"
  syntax:
    content: public int IndexOf (System.Web.UI.WebControls.MenuItemBinding value);
    parameters:
    - id: value
      type: System.Web.UI.WebControls.MenuItemBinding
      description: "<xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref> 의 인덱스를 확인 합니다."
    return:
      type: System.Int32
      description: "첫 번째로 나타나는 항목의&0;부터 시작 인덱스 <code> value </code> 컬렉션에서 발견 되지 않으면-1입니다."
  overload: System.Web.UI.WebControls.MenuItemBindingCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.Insert(System.Int32,System.Web.UI.WebControls.MenuItemBinding)
  id: Insert(System.Int32,System.Web.UI.WebControls.MenuItemBinding)
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  langs:
  - csharp
  name: Insert(Int32,MenuItemBinding)
  nameWithType: MenuItemBindingCollection.Insert(Int32,MenuItemBinding)
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.Insert(Int32,MenuItemBinding)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "지정 된 추가 <xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref> 개체를 컬렉션에 지정된 된 인덱스 위치입니다."
  remarks: "Insert 메서드를 사용 하 여 지정 된 삽입 <xref:System.Web.UI.WebControls.MenuItemBinding>지정된 된 인덱스에 컬렉션에 있는 개체입니다.</xref:System.Web.UI.WebControls.MenuItemBinding>      > [!NOTE] > Null 값을 추가 하 고 중복 수 <xref:System.Web.UI.WebControls.MenuItemBinding>개체를 컬렉션에.</xref:System.Web.UI.WebControls.MenuItemBinding>       추가할 수도 있습니다는 <xref:System.Web.UI.WebControls.MenuItemBinding>개체를 사용 하 여 컬렉션의 끝에서 <xref:System.Web.UI.WebControls.MenuItemBindingCollection.Add%2A>메서드.</xref:System.Web.UI.WebControls.MenuItemBindingCollection.Add%2A> </xref:System.Web.UI.WebControls.MenuItemBinding>      > [!NOTE] > 되는 순서 <xref:System.Web.UI.WebControls.MenuItemBinding>에 나타나는 개체 컬렉션의 영향을 주지 않습니다는 방법에 해당 개체에 메뉴 항목에 적용 되는 <xref:System.Web.UI.WebControls.Menu>컨트롤.</xref:System.Web.UI.WebControls.Menu> </xref:System.Web.UI.WebControls.MenuItemBinding>"
  example:
  - "The following code example demonstrates how to use the Insert method to add a <xref:System.Web.UI.WebControls.MenuItemBinding> object to the collection at a specific index. For this example to work correctly, you must copy the sample XML data below to a file named Map.xml.  \n  \n [!code-vb[MenuItemBindingCollectionInsert#1](~/add/codesnippet/visualbasic/4e0eb68e-1774-4135-bfc7-_1.aspx)]\n [!code-cs[MenuItemBindingCollectionInsert#1](~/add/codesnippet/csharp/4e0eb68e-1774-4135-bfc7-_1.aspx)]  \n  \n The following is sample site map data for the previous example.  \n  \n `<MapHomeNode url=\"~\\Home.aspx\"`  \n  \n `title=\"Home\"`  \n  \n `description=\"Home\">`  \n  \n `<MapNode url=\"~\\Music.aspx\"`  \n  \n `title=\"Music\"`  \n  \n `description=\"Music\">`  \n  \n `<MapNode url=\"~\\Classical.aspx\"`  \n  \n `title=\"Classical\"`  \n  \n `description=\"Classical\"/>`  \n  \n `<MapNode url=\"~\\Rock.aspx\"`  \n  \n `title=\"Rock\"`  \n  \n `description=\"Rock\"/>`  \n  \n `<MapNode url=\"~\\Jazz.aspx\"`  \n  \n `title=\"Jazz\"`  \n  \n `description=\"Jazz\"/>`  \n  \n `</MapNode>`  \n  \n `<MapNode url=\"~\\Movies.aspx\"`  \n  \n `title=\"Movies\"`  \n  \n `description=\"Movies\">`  \n  \n `<MapNode url=\"~\\Action.aspx\"`  \n  \n `title=\"Action\"`  \n  \n `description=\"Action\"/>`  \n  \n `<MapNode url=\"~\\Drama.aspx\"`  \n  \n `title=\"Drama\"`  \n  \n `description=\"Drama\"/>`  \n  \n `<MapNode url=\"~\\Musical.aspx\"`  \n  \n `title=\"Musical\"`  \n  \n `description=\"Musical\"/>`  \n  \n `</MapNode>`  \n  \n `</MapHomeNode>`"
  syntax:
    content: public void Insert (int index, System.Web.UI.WebControls.MenuItemBinding binding);
    parameters:
    - id: index
      type: System.Int32
      description: "삽입할&0;부터 시작 인덱스 위치는 <xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref>합니다."
    - id: binding
      type: System.Web.UI.WebControls.MenuItemBinding
      description: "<xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref> 를 삽입 합니다."
  overload: System.Web.UI.WebControls.MenuItemBindingCollection.Insert*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: MenuItemBindingCollection.Item(Int32)
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.Item(Int32)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "가져옵니다는 <xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref> 개체 컬렉션에서 지정 된 인덱스입니다."
  remarks: "이 인덱서를 사용 하 여 액세스 하는 <xref:System.Web.UI.WebControls.MenuItemBinding>배열 표기법을 사용 하 여 지정된 된 인덱스에 컬렉션 개체입니다.</xref:System.Web.UI.WebControls.MenuItemBinding> 인덱서 액세스 하거나, 수정 하거나 대체할 수 있습니다는 <xref:System.Web.UI.WebControls.MenuItemBinding>개체 컬렉션에서 직접.</xref:System.Web.UI.WebControls.MenuItemBinding>"
  example:
  - "The following code example demonstrates how to retrieve a <xref:System.Web.UI.WebControls.MenuItemBinding> object from the collection using the indexer. The properties of the <xref:System.Web.UI.WebControls.MenuItemBinding> object are then updated programmatically. For this example to work correctly, you must copy the sample XML data below to a file named Map.xml.  \n  \n [!code-cs[MenuItemBindingCollectionIndexer#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_289_1.aspx)]\n [!code-vb[MenuItemBindingCollectionIndexer#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_289_1.aspx)]  \n  \n The following is sample site map data for the previous example.  \n  \n `<MapHomeNode url=\"~\\Home.aspx\"`  \n  \n `title=\"Home\"`  \n  \n `description=\"Home\">`  \n  \n `<MapNode url=\"~\\Music.aspx\"`  \n  \n `title=\"Music\"`  \n  \n `description=\"Music\">`  \n  \n `<MapNode url=\"~\\Classical.aspx\"`  \n  \n `title=\"Classical\"`  \n  \n `description=\"Classical\"/>`  \n  \n `<MapNode url=\"~\\Rock.aspx\"`  \n  \n `title=\"Rock\"`  \n  \n `description=\"Rock\"/>`  \n  \n `<MapNode url=\"~\\Jazz.aspx\"`  \n  \n `title=\"Jazz\"`  \n  \n `description=\"Jazz\"/>`  \n  \n `</MapNode>`  \n  \n `<MapNode url=\"~\\Movies.aspx\"`  \n  \n `title=\"Movies\"`  \n  \n `description=\"Movies\">`  \n  \n `<MapNode url=\"~\\Action.aspx\"`  \n  \n `title=\"Action\"`  \n  \n `description=\"Action\"/>`  \n  \n `<MapNode url=\"~\\Drama.aspx\"`  \n  \n `title=\"Drama\"`  \n  \n `description=\"Drama\"/>`  \n  \n `<MapNode url=\"~\\Musical.aspx\"`  \n  \n `title=\"Musical\"`  \n  \n `description=\"Musical\"/>`  \n  \n `</MapNode>`  \n  \n `</MapHomeNode>`"
  syntax:
    content: public System.Web.UI.WebControls.MenuItemBinding this[int i] { get; set; }
    parameters:
    - id: i
      type: System.Int32
      description: "0부터 시작 인덱스는 <xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref> 를 검색 합니다."
    return:
      type: System.Web.UI.WebControls.MenuItemBinding
      description: "<xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref> 컬렉션에서 지정 된 인덱스입니다."
  overload: System.Web.UI.WebControls.MenuItemBindingCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.OnClear
  id: OnClear
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  langs:
  - csharp
  name: OnClear()
  nameWithType: MenuItemBindingCollection.OnClear()
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.OnClear()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  syntax:
    content: protected override void OnClear ();
    parameters: []
  overload: System.Web.UI.WebControls.MenuItemBindingCollection.OnClear*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.OnRemoveComplete(System.Int32,System.Object)
  id: OnRemoveComplete(System.Int32,System.Object)
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  langs:
  - csharp
  name: OnRemoveComplete(Int32,Object)
  nameWithType: MenuItemBindingCollection.OnRemoveComplete(Int32,Object)
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.OnRemoveComplete(Int32,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  syntax:
    content: protected override void OnRemoveComplete (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: "추가할 수 있습니다."
    - id: value
      type: System.Object
      description: "추가할 수 있습니다."
  overload: System.Web.UI.WebControls.MenuItemBindingCollection.OnRemoveComplete*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.OnValidate(System.Object)
  id: OnValidate(System.Object)
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  langs:
  - csharp
  name: OnValidate(Object)
  nameWithType: MenuItemBindingCollection.OnValidate(Object)
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.OnValidate(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  syntax:
    content: protected override void OnValidate (object value);
    parameters:
    - id: value
      type: System.Object
      description: "추가할 수 있습니다."
  overload: System.Web.UI.WebControls.MenuItemBindingCollection.OnValidate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.Remove(System.Web.UI.WebControls.MenuItemBinding)
  id: Remove(System.Web.UI.WebControls.MenuItemBinding)
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  langs:
  - csharp
  name: Remove(MenuItemBinding)
  nameWithType: MenuItemBindingCollection.Remove(MenuItemBinding)
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.Remove(MenuItemBinding)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "지정 된 제거 <xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref> 컬렉션의 개체입니다."
  remarks: "Remove 메서드를 사용 하 여 컬렉션에서 지정 된 메뉴 항목 바인딩을 제거 합니다. 해당 메뉴 항목 아래에 있는 모든 항목은 다음 빈 자리를 채웁니다 위로 이동 됩니다. 이동된 된 항목의 인덱스도 업데이트 됩니다.      > [!NOTE] > 컬렉션 수 null 값이 포함 될 뿐만 아니라 복제 <xref:System.Web.UI.WebControls.MenuItemBinding>개체입니다.</xref:System.Web.UI.WebControls.MenuItemBinding>       제거할 수 있습니다 메뉴 항목 컬렉션에 있는 특정 인덱스에서 사용 하 여는 <xref:System.Web.UI.WebControls.MenuItemBindingCollection.RemoveAt%2A>메서드.</xref:System.Web.UI.WebControls.MenuItemBindingCollection.RemoveAt%2A> 사용 하 여 컬렉션에서 모든 메뉴 항목을 제거할 수도 있습니다는 <xref:System.Web.UI.StateManagedCollection.Clear%2A>메서드.</xref:System.Web.UI.StateManagedCollection.Clear%2A>      > [!NOTE] > 되는 순서 <xref:System.Web.UI.WebControls.MenuItemBinding>에 나타나는 개체 컬렉션의 해당 개체에 메뉴 항목에 적용 되는 방식에 영향을 주지는 <xref:System.Web.UI.WebControls.Menu>컨트롤.</xref:System.Web.UI.WebControls.Menu> </xref:System.Web.UI.WebControls.MenuItemBinding>"
  example:
  - "The following code example demonstrates how to use the Remove method to remove a <xref:System.Web.UI.WebControls.MenuItemBinding> object from the collection. For this example to work correctly, you must copy the sample XML data below to a file named Map.xml.  \n  \n [!code-vb[MenuItemBindingCollectionRemove#1](~/add/codesnippet/visualbasic/5c2a1f0c-56d8-4214-8cb5-_1.aspx)]\n [!code-cs[MenuItemBindingCollectionRemove#1](~/add/codesnippet/csharp/5c2a1f0c-56d8-4214-8cb5-_1.aspx)]  \n  \n The following is sample site map data for the previous example.  \n  \n `<MapHomeNode url=\"~\\Home.aspx\"`  \n  \n `title=\"Home\"`  \n  \n `description=\"Home\">`  \n  \n `<MapNode url=\"~\\Music.aspx\"`  \n  \n `title=\"Music\"`  \n  \n `description=\"Music\">`  \n  \n `<MapNode url=\"~\\Classical.aspx\"`  \n  \n `title=\"Classical\"`  \n  \n `description=\"Classical\"/>`  \n  \n `<MapNode url=\"~\\Rock.aspx\"`  \n  \n `title=\"Rock\"`  \n  \n `description=\"Rock\"/>`  \n  \n `<MapNode url=\"~\\Jazz.aspx\"`  \n  \n `title=\"Jazz\"`  \n  \n `description=\"Jazz\"/>`  \n  \n `</MapNode>`  \n  \n `<MapNode url=\"~\\Movies.aspx\"`  \n  \n `title=\"Movies\"`  \n  \n `description=\"Movies\">`  \n  \n `<MapNode url=\"~\\Action.aspx\"`  \n  \n `title=\"Action\"`  \n  \n `description=\"Action\"/>`  \n  \n `<MapNode url=\"~\\Drama.aspx\"`  \n  \n `title=\"Drama\"`  \n  \n `description=\"Drama\"/>`  \n  \n `<MapNode url=\"~\\Musical.aspx\"`  \n  \n `title=\"Musical\"`  \n  \n `description=\"Musical\"/>`  \n  \n `</MapNode>`  \n  \n `</MapHomeNode>`"
  syntax:
    content: public void Remove (System.Web.UI.WebControls.MenuItemBinding binding);
    parameters:
    - id: binding
      type: System.Web.UI.WebControls.MenuItemBinding
      description: "<xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref> 는 컬렉션에서 제거할 수 있습니다."
  overload: System.Web.UI.WebControls.MenuItemBindingCollection.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: MenuItemBindingCollection.RemoveAt(Int32)
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "제거는 <xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref> 개체 컬렉션에서 지정한 인덱스 위치입니다."
  remarks: "RemoveAt 메서드를 사용 하 여 제거 하는 <xref:System.Web.UI.WebControls.MenuItemBinding>개체 컬렉션에서 지정한 인덱스 위치입니다.</xref:System.Web.UI.WebControls.MenuItemBinding> 해당 메뉴 항목 아래에 있는 모든 항목은 다음 빈 자리를 채웁니다 위로 이동 됩니다. 이동된 된 항목의 인덱스도 업데이트 됩니다.      > [!NOTE] > 컬렉션 수 null 값이 포함 될 뿐만 아니라 복제 <xref:System.Web.UI.WebControls.MenuItemBinding>개체입니다.</xref:System.Web.UI.WebControls.MenuItemBinding>       대신 특정을 제거할 수 있습니다 <xref:System.Web.UI.WebControls.MenuItemBinding>사용 하 여 개체는 <xref:System.Web.UI.WebControls.MenuItemBindingCollection.Remove%2A>메서드.</xref:System.Web.UI.WebControls.MenuItemBindingCollection.Remove%2A> </xref:System.Web.UI.WebControls.MenuItemBinding> 사용 하 여 컬렉션에서 모든 메뉴 항목을 제거할 수도 있습니다는 <xref:System.Web.UI.StateManagedCollection.Clear%2A>메서드.</xref:System.Web.UI.StateManagedCollection.Clear%2A>"
  example:
  - "The following code example demonstrates how to use the RemoveAt method to remove a <xref:System.Web.UI.WebControls.MenuItemBinding> object from the collection at a specific index. For this example to work correctly, you must copy the sample XML data below to a file named Map.xml.  \n  \n [!code-cs[MenuItemBindingCollectionRemoveAt#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_120_1.aspx)]\n [!code-vb[MenuItemBindingCollectionRemoveAt#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_120_1.aspx)]  \n  \n The following is sample site map data for the previous example.  \n  \n `<MapHomeNode url=\"~\\Home.aspx\"`  \n  \n `title=\"Home\"`  \n  \n `description=\"Home\">`  \n  \n `<MapNode url=\"~\\Music.aspx\"`  \n  \n `title=\"Music\"`  \n  \n `description=\"Music\">`  \n  \n `<MapNode url=\"~\\Classical.aspx\"`  \n  \n `title=\"Classical\"`  \n  \n `description=\"Classical\"/>`  \n  \n `<MapNode url=\"~\\Rock.aspx\"`  \n  \n `title=\"Rock\"`  \n  \n `description=\"Rock\"/>`  \n  \n `<MapNode url=\"~\\Jazz.aspx\"`  \n  \n `title=\"Jazz\"`  \n  \n `description=\"Jazz\"/>`  \n  \n `</MapNode>`  \n  \n `<MapNode url=\"~\\Movies.aspx\"`  \n  \n `title=\"Movies\"`  \n  \n `description=\"Movies\">`  \n  \n `<MapNode url=\"~\\Action.aspx\"`  \n  \n `title=\"Action\"`  \n  \n `description=\"Action\"/>`  \n  \n `<MapNode url=\"~\\Drama.aspx\"`  \n  \n `title=\"Drama\"`  \n  \n `description=\"Drama\"/>`  \n  \n `<MapNode url=\"~\\Musical.aspx\"`  \n  \n `title=\"Musical\"`  \n  \n `description=\"Musical\"/>`  \n  \n `</MapNode>`  \n  \n `</MapHomeNode>`"
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "메뉴 항목 바인딩 제거할의&0;부터 시작 인덱스 위치입니다."
  overload: System.Web.UI.WebControls.MenuItemBindingCollection.RemoveAt*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.SetDirtyObject(System.Object)
  id: SetDirtyObject(System.Object)
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  langs:
  - csharp
  name: SetDirtyObject(Object)
  nameWithType: MenuItemBindingCollection.SetDirtyObject(Object)
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.SetDirtyObject(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  syntax:
    content: protected override void SetDirtyObject (object o);
    parameters:
    - id: o
      type: System.Object
      description: "추가할 수 있습니다."
  overload: System.Web.UI.WebControls.MenuItemBindingCollection.SetDirtyObject*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Web.UI.StateManagedCollection
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.Add(System.Web.UI.WebControls.MenuItemBinding)
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: Add(MenuItemBinding)
  nameWithType: MenuItemBindingCollection.Add(MenuItemBinding)
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.Add(MenuItemBinding)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.MenuItemBinding
  parent: System.Web.UI.WebControls
  isExternal: false
  name: MenuItemBinding
  nameWithType: MenuItemBinding
  fullName: System.Web.UI.WebControls.MenuItemBinding
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.Contains(System.Web.UI.WebControls.MenuItemBinding)
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: Contains(MenuItemBinding)
  nameWithType: MenuItemBindingCollection.Contains(MenuItemBinding)
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.Contains(MenuItemBinding)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.CopyTo(System.Web.UI.WebControls.MenuItemBinding[],System.Int32)
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: CopyTo(MenuItemBinding[],Int32)
  nameWithType: MenuItemBindingCollection.CopyTo(MenuItemBinding[],Int32)
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.CopyTo(MenuItemBinding[],Int32)
- uid: System.Web.UI.WebControls.MenuItemBinding[]
  parent: System.Web.UI.WebControls
  isExternal: false
  name: MenuItemBinding
  nameWithType: MenuItemBinding
  fullName: System.Web.UI.WebControls.MenuItemBinding[]
  spec.csharp:
  - uid: System.Web.UI.WebControls.MenuItemBinding
    name: MenuItemBinding
    nameWithType: MenuItemBinding
    fullName: MenuItemBinding[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.CreateKnownType(System.Int32)
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: CreateKnownType(Int32)
  nameWithType: MenuItemBindingCollection.CreateKnownType(Int32)
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.CreateKnownType(Int32)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.GetKnownTypes
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: GetKnownTypes()
  nameWithType: MenuItemBindingCollection.GetKnownTypes()
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.GetKnownTypes()
- uid: System.Type[]
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type[]
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.IndexOf(System.Web.UI.WebControls.MenuItemBinding)
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: IndexOf(MenuItemBinding)
  nameWithType: MenuItemBindingCollection.IndexOf(MenuItemBinding)
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.IndexOf(MenuItemBinding)
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.Insert(System.Int32,System.Web.UI.WebControls.MenuItemBinding)
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: Insert(Int32,MenuItemBinding)
  nameWithType: MenuItemBindingCollection.Insert(Int32,MenuItemBinding)
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.Insert(Int32,MenuItemBinding)
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.Item(System.Int32)
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: MenuItemBindingCollection.Item(Int32)
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.Item(Int32)
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.OnClear
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: OnClear()
  nameWithType: MenuItemBindingCollection.OnClear()
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.OnClear()
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.OnRemoveComplete(System.Int32,System.Object)
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: OnRemoveComplete(Int32,Object)
  nameWithType: MenuItemBindingCollection.OnRemoveComplete(Int32,Object)
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.OnRemoveComplete(Int32,Object)
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.OnValidate(System.Object)
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: OnValidate(Object)
  nameWithType: MenuItemBindingCollection.OnValidate(Object)
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.OnValidate(Object)
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.Remove(System.Web.UI.WebControls.MenuItemBinding)
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: Remove(MenuItemBinding)
  nameWithType: MenuItemBindingCollection.Remove(MenuItemBinding)
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.Remove(MenuItemBinding)
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.RemoveAt(System.Int32)
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: MenuItemBindingCollection.RemoveAt(Int32)
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.RemoveAt(Int32)
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.SetDirtyObject(System.Object)
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: SetDirtyObject(Object)
  nameWithType: MenuItemBindingCollection.SetDirtyObject(Object)
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.SetDirtyObject(Object)
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.Add*
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: Add
  nameWithType: MenuItemBindingCollection.Add
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.Contains*
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: Contains
  nameWithType: MenuItemBindingCollection.Contains
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.CopyTo*
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: CopyTo
  nameWithType: MenuItemBindingCollection.CopyTo
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.CreateKnownType*
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: CreateKnownType
  nameWithType: MenuItemBindingCollection.CreateKnownType
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.GetKnownTypes*
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: GetKnownTypes
  nameWithType: MenuItemBindingCollection.GetKnownTypes
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.IndexOf*
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: IndexOf
  nameWithType: MenuItemBindingCollection.IndexOf
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.Insert*
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: Insert
  nameWithType: MenuItemBindingCollection.Insert
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.Item*
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: Item
  nameWithType: MenuItemBindingCollection.Item
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.OnClear*
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: OnClear
  nameWithType: MenuItemBindingCollection.OnClear
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.OnRemoveComplete*
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: OnRemoveComplete
  nameWithType: MenuItemBindingCollection.OnRemoveComplete
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.OnValidate*
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: OnValidate
  nameWithType: MenuItemBindingCollection.OnValidate
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.Remove*
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: Remove
  nameWithType: MenuItemBindingCollection.Remove
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.RemoveAt*
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: RemoveAt
  nameWithType: MenuItemBindingCollection.RemoveAt
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.SetDirtyObject*
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: SetDirtyObject
  nameWithType: MenuItemBindingCollection.SetDirtyObject
