### YamlMime:ManagedReference
items:
- uid: System.Activities.Argument
  id: Argument
  children:
  - System.Activities.Argument.ArgumentType
  - System.Activities.Argument.Create(System.Type,System.Activities.ArgumentDirection)
  - System.Activities.Argument.CreateReference(System.Activities.Argument,System.String)
  - System.Activities.Argument.Direction
  - System.Activities.Argument.EvaluationOrder
  - System.Activities.Argument.Expression
  - System.Activities.Argument.Get(System.Activities.ActivityContext)
  - System.Activities.Argument.Get``1(System.Activities.ActivityContext)
  - System.Activities.Argument.GetLocation(System.Activities.ActivityContext)
  - System.Activities.Argument.ResultValue
  - System.Activities.Argument.Set(System.Activities.ActivityContext,System.Object)
  - System.Activities.Argument.UnspecifiedEvaluationOrder
  langs:
  - csharp
  name: Argument
  nameWithType: Argument
  fullName: System.Activities.Argument
  type: Class
  summary: "추상 기본 클래스 바인딩 터미널을 나타내는 / 작업 외부로 데이터 흐름을 지 원하는입니다."
  syntax:
    content: public abstract class Argument
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Activities.Argument.ArgumentType
  id: ArgumentType
  parent: System.Activities.Argument
  langs:
  - csharp
  name: ArgumentType
  nameWithType: Argument.ArgumentType
  fullName: System.Activities.Argument.ArgumentType
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "이에 바인딩된 데이터에 대 한 데이터 형식을 가져옵니다 <xref href=&quot;System.Activities.Argument&quot;> </xref>합니다."
  syntax:
    content: public Type ArgumentType { get; }
    return:
      type: System.Type
      description: "이에 바인딩된 데이터에 대 한 데이터 형식이 <xref href=&quot;System.Activities.Argument&quot;> </xref>합니다."
  overload: System.Activities.Argument.ArgumentType*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Argument.Create(System.Type,System.Activities.ArgumentDirection)
  id: Create(System.Type,System.Activities.ArgumentDirection)
  parent: System.Activities.Argument
  langs:
  - csharp
  name: Create(Type,ArgumentDirection)
  nameWithType: Argument.Create(Type,ArgumentDirection)
  fullName: System.Activities.Argument.Create(Type,ArgumentDirection)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "초기화 하 고 새 반환 <xref href=&quot;System.Activities.Argument&quot;> </xref>합니다."
  syntax:
    content: public static System.Activities.Argument Create (Type type, System.Activities.ArgumentDirection direction);
    parameters:
    - id: type
      type: System.Type
      description: "데이터 형식이 고 <xref href=&quot;System.Activities.Argument&quot;> </xref>합니다."
    - id: direction
      type: System.Activities.ArgumentDirection
      description: "통해 데이터 흐름의 방향을 지정 하는 열거형 값 중 하나는 <xref href=&quot;System.Activities.Argument&quot;> </xref>합니다."
    return:
      type: System.Activities.Argument
      description: "새로 만든된 인수입니다."
  overload: System.Activities.Argument.Create*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Argument.CreateReference(System.Activities.Argument,System.String)
  id: CreateReference(System.Activities.Argument,System.String)
  parent: System.Activities.Argument
  langs:
  - csharp
  name: CreateReference(Argument,String)
  nameWithType: Argument.CreateReference(Argument,String)
  fullName: System.Activities.Argument.CreateReference(Argument,String)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "지정한 참조 된 인수 이름을 사용 하 여 지정한 대상 인수를 참조 하는 새 인수를 만듭니다."
  syntax:
    content: public static System.Activities.Argument CreateReference (System.Activities.Argument argumentToReference, string referencedArgumentName);
    parameters:
    - id: argumentToReference
      type: System.Activities.Argument
      description: "참조할 대상 인수입니다."
    - id: referencedArgumentName
      type: System.String
      description: "참조 된 인수의 이름입니다."
    return:
      type: System.Activities.Argument
      description: "지정한 대상 인수를 참조 하는 새 인수입니다."
  overload: System.Activities.Argument.CreateReference*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Argument.Direction
  id: Direction
  parent: System.Activities.Argument
  langs:
  - csharp
  name: Direction
  nameWithType: Argument.Direction
  fullName: System.Activities.Argument.Direction
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "가져옵니다는 <xref href=&quot;System.Activities.ArgumentDirection&quot;> </xref> 지정 하는 여부는 <xref href=&quot;System.Activities.Argument&quot;> </xref> 활동 또는 / 작업 외부로 작업 내부로 데이터 흐름을 나타냅니다."
  syntax:
    content: public System.Activities.ArgumentDirection Direction { get; }
    return:
      type: System.Activities.ArgumentDirection
      description: "통해 데이터 흐름의 방향을 지정 하는 열거형 값 중 하나는 <xref href=&quot;System.Activities.Argument&quot;> </xref>합니다."
  overload: System.Activities.Argument.Direction*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Argument.EvaluationOrder
  id: EvaluationOrder
  parent: System.Activities.Argument
  langs:
  - csharp
  name: EvaluationOrder
  nameWithType: Argument.EvaluationOrder
  fullName: System.Activities.Argument.EvaluationOrder
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "인수를 평가 하는 순서를 지정 하는&0;부터 시작 값을 가져오거나 설정 합니다."
  remarks: "기본적으로 인수의 평가 순서는 지정 되지 않으며와 같으면는 <xref:System.Activities.Argument.UnspecifiedEvaluationOrder>값.</xref:System.Activities.Argument.UnspecifiedEvaluationOrder> 이 인수의 평가 순서를 지정 하려면&0; 보다 같거나 큰 EvaluationOrder 값으로 설정 합니다. [!INCLUDE[wf2](~/add/includes/wf2-md.md)]오름차순 지정한 평가 순서의 인수를 평가 합니다. 참고가 지정 되지 않은 평가 순서의 인수를 평가 순서가 지정된 된 보다 먼저 평가 됩니다."
  syntax:
    content: public int EvaluationOrder { get; set; }
    return:
      type: System.Int32
      description: "인수를 평가 순서를 지정 하는&0;부터 시작 값입니다."
  overload: System.Activities.Argument.EvaluationOrder*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "값이&0; 보다 작거나 같지 않은 <xref href=&quot;System.Activities.Argument.UnspecifiedEvaluationOrder&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Activities.Argument.Expression
  id: Expression
  parent: System.Activities.Argument
  langs:
  - csharp
  name: Expression
  nameWithType: Argument.Expression
  fullName: System.Activities.Argument.Expression
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "가져오거나는 <xref href=&quot;System.Activities.ActivityWithResult&quot;> </xref> 이 바인딩된 데이터의 값을 나타내는 <xref href=&quot;System.Activities.Argument&quot;> </xref>합니다."
  syntax:
    content: public System.Activities.ActivityWithResult Expression { get; set; }
    return:
      type: System.Activities.ActivityWithResult
      description: "데이터의 값이 바인딩된 <xref href=&quot;System.Activities.Argument&quot;> </xref>합니다."
  overload: System.Activities.Argument.Expression*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Argument.Get(System.Activities.ActivityContext)
  id: Get(System.Activities.ActivityContext)
  parent: System.Activities.Argument
  langs:
  - csharp
  name: Get(ActivityContext)
  nameWithType: Argument.Get(ActivityContext)
  fullName: System.Activities.Argument.Get(ActivityContext)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "지정한 작업 컨텍스트를 사용 하 여 인수 값을 가져옵니다."
  syntax:
    content: public object Get (System.Activities.ActivityContext context);
    parameters:
    - id: context
      type: System.Activities.ActivityContext
      description: "현재 작업 컨텍스트입니다."
    return:
      type: System.Object
      description: "인수 값입니다."
  overload: System.Activities.Argument.Get*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Argument.Get``1(System.Activities.ActivityContext)
  id: Get``1(System.Activities.ActivityContext)
  parent: System.Activities.Argument
  langs:
  - csharp
  name: Get(ActivityContext)
  nameWithType: Argument.Get(ActivityContext)
  fullName: System.Activities.Argument.Get(ActivityContext)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  syntax:
    content: public T Get<T> (System.Activities.ActivityContext context);
    parameters:
    - id: context
      type: System.Activities.ActivityContext
      description: "추가할 수 있습니다."
    return:
      type: T
      description: "추가할 수 있습니다."
  overload: System.Activities.Argument.Get<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Argument.GetLocation(System.Activities.ActivityContext)
  id: GetLocation(System.Activities.ActivityContext)
  parent: System.Activities.Argument
  langs:
  - csharp
  name: GetLocation(ActivityContext)
  nameWithType: Argument.GetLocation(ActivityContext)
  fullName: System.Activities.Argument.GetLocation(ActivityContext)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Gets the <xref href=&quot;System.Activities.Location&quot;></xref> for this <xref href=&quot;System.Activities.Argument&quot;></xref>."
  syntax:
    content: public System.Activities.Location GetLocation (System.Activities.ActivityContext context);
    parameters:
    - id: context
      type: System.Activities.ActivityContext
      description: "실행 중인 작업의 작업 컨텍스트입니다."
    return:
      type: System.Activities.Location
      description: "이 위치 <xref href=&quot;System.Activities.Argument&quot;> </xref>합니다."
  overload: System.Activities.Argument.GetLocation*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Argument.ResultValue
  id: ResultValue
  parent: System.Activities.Argument
  langs:
  - csharp
  name: ResultValue
  nameWithType: Argument.ResultValue
  fullName: System.Activities.Argument.ResultValue
  type: Field
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "상수 값 &quot;result&quot;의 이름에 해당 나타냅니다는 <xref:System.Activities.ActivityWithResult.Result*>형식의 속성이 <xref href=&quot;System.Activities.OutArgument&quot;> </xref> 식 기본 클래스에 <xref href=&quot;System.Activities.ActivityWithResult&quot;> </xref>.</xref:System.Activities.ActivityWithResult.Result*>"
  remarks: "이 상수를 사용 하 여 런타임에 바인딩을 사용할 때 식 작업의 결과 참조 합니다."
  syntax:
    content: public const string ResultValue;
    return:
      type: System.String
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Argument.Set(System.Activities.ActivityContext,System.Object)
  id: Set(System.Activities.ActivityContext,System.Object)
  parent: System.Activities.Argument
  langs:
  - csharp
  name: Set(ActivityContext,Object)
  nameWithType: Argument.Set(ActivityContext,Object)
  fullName: System.Activities.Argument.Set(ActivityContext,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "지정한 작업 컨텍스트를 사용 하 여 인수 값을 설정 합니다."
  syntax:
    content: public void Set (System.Activities.ActivityContext context, object value);
    parameters:
    - id: context
      type: System.Activities.ActivityContext
      description: "현재 작업 컨텍스트입니다."
    - id: value
      type: System.Object
      description: "인수에 대 한 값입니다."
  overload: System.Activities.Argument.Set*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Argument.UnspecifiedEvaluationOrder
  id: UnspecifiedEvaluationOrder
  parent: System.Activities.Argument
  langs:
  - csharp
  name: UnspecifiedEvaluationOrder
  nameWithType: Argument.UnspecifiedEvaluationOrder
  fullName: System.Activities.Argument.UnspecifiedEvaluationOrder
  type: Field
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "값을 나타내는 <xref:System.Activities.Argument.EvaluationOrder*>지정 되지 않은 평가 순서의 인수에 대 한 속성.</xref:System.Activities.Argument.EvaluationOrder*> 이 값은 읽기 전용입니다."
  syntax:
    content: public static readonly int UnspecifiedEvaluationOrder;
    return:
      type: System.Int32
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Activities.Argument.ArgumentType
  parent: System.Activities.Argument
  isExternal: false
  name: ArgumentType
  nameWithType: Argument.ArgumentType
  fullName: System.Activities.Argument.ArgumentType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Activities.Argument.Create(System.Type,System.Activities.ArgumentDirection)
  parent: System.Activities.Argument
  isExternal: false
  name: Create(Type,ArgumentDirection)
  nameWithType: Argument.Create(Type,ArgumentDirection)
  fullName: System.Activities.Argument.Create(Type,ArgumentDirection)
- uid: System.Activities.Argument
  parent: System.Activities
  isExternal: false
  name: Argument
  nameWithType: Argument
  fullName: System.Activities.Argument
- uid: System.Activities.ArgumentDirection
  parent: System.Activities
  isExternal: false
  name: ArgumentDirection
  nameWithType: ArgumentDirection
  fullName: System.Activities.ArgumentDirection
- uid: System.Activities.Argument.CreateReference(System.Activities.Argument,System.String)
  parent: System.Activities.Argument
  isExternal: false
  name: CreateReference(Argument,String)
  nameWithType: Argument.CreateReference(Argument,String)
  fullName: System.Activities.Argument.CreateReference(Argument,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Activities.Argument.Direction
  parent: System.Activities.Argument
  isExternal: false
  name: Direction
  nameWithType: Argument.Direction
  fullName: System.Activities.Argument.Direction
- uid: System.Activities.Argument.EvaluationOrder
  parent: System.Activities.Argument
  isExternal: false
  name: EvaluationOrder
  nameWithType: Argument.EvaluationOrder
  fullName: System.Activities.Argument.EvaluationOrder
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Activities.Argument.Expression
  parent: System.Activities.Argument
  isExternal: false
  name: Expression
  nameWithType: Argument.Expression
  fullName: System.Activities.Argument.Expression
- uid: System.Activities.ActivityWithResult
  parent: System.Activities
  isExternal: false
  name: ActivityWithResult
  nameWithType: ActivityWithResult
  fullName: System.Activities.ActivityWithResult
- uid: System.Activities.Argument.Get(System.Activities.ActivityContext)
  parent: System.Activities.Argument
  isExternal: false
  name: Get(ActivityContext)
  nameWithType: Argument.Get(ActivityContext)
  fullName: System.Activities.Argument.Get(ActivityContext)
- uid: System.Activities.ActivityContext
  parent: System.Activities
  isExternal: false
  name: ActivityContext
  nameWithType: ActivityContext
  fullName: System.Activities.ActivityContext
- uid: System.Activities.Argument.Get``1(System.Activities.ActivityContext)
  parent: System.Activities.Argument
  isExternal: false
  name: Get(ActivityContext)
  nameWithType: Argument.Get(ActivityContext)
  fullName: System.Activities.Argument.Get(ActivityContext)
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.Activities.Argument.GetLocation(System.Activities.ActivityContext)
  parent: System.Activities.Argument
  isExternal: false
  name: GetLocation(ActivityContext)
  nameWithType: Argument.GetLocation(ActivityContext)
  fullName: System.Activities.Argument.GetLocation(ActivityContext)
- uid: System.Activities.Location
  parent: System.Activities
  isExternal: false
  name: Location
  nameWithType: Location
  fullName: System.Activities.Location
- uid: System.Activities.Argument.ResultValue
  parent: System.Activities.Argument
  isExternal: false
  name: ResultValue
  nameWithType: Argument.ResultValue
  fullName: System.Activities.Argument.ResultValue
- uid: System.Activities.Argument.Set(System.Activities.ActivityContext,System.Object)
  parent: System.Activities.Argument
  isExternal: false
  name: Set(ActivityContext,Object)
  nameWithType: Argument.Set(ActivityContext,Object)
  fullName: System.Activities.Argument.Set(ActivityContext,Object)
- uid: System.Activities.Argument.UnspecifiedEvaluationOrder
  parent: System.Activities.Argument
  isExternal: false
  name: UnspecifiedEvaluationOrder
  nameWithType: Argument.UnspecifiedEvaluationOrder
  fullName: System.Activities.Argument.UnspecifiedEvaluationOrder
- uid: System.Activities.Argument.ArgumentType*
  parent: System.Activities.Argument
  isExternal: false
  name: ArgumentType
  nameWithType: Argument.ArgumentType
- uid: System.Activities.Argument.Create*
  parent: System.Activities.Argument
  isExternal: false
  name: Create
  nameWithType: Argument.Create
- uid: System.Activities.Argument.CreateReference*
  parent: System.Activities.Argument
  isExternal: false
  name: CreateReference
  nameWithType: Argument.CreateReference
- uid: System.Activities.Argument.Direction*
  parent: System.Activities.Argument
  isExternal: false
  name: Direction
  nameWithType: Argument.Direction
- uid: System.Activities.Argument.EvaluationOrder*
  parent: System.Activities.Argument
  isExternal: false
  name: EvaluationOrder
  nameWithType: Argument.EvaluationOrder
- uid: System.Activities.Argument.Expression*
  parent: System.Activities.Argument
  isExternal: false
  name: Expression
  nameWithType: Argument.Expression
- uid: System.Activities.Argument.Get*
  parent: System.Activities.Argument
  isExternal: false
  name: Get
  nameWithType: Argument.Get
- uid: System.Activities.Argument.Get<T>*
  parent: System.Activities.Argument
  isExternal: false
  name: Get<T>
  nameWithType: Argument.Get<T>
- uid: System.Activities.Argument.GetLocation*
  parent: System.Activities.Argument
  isExternal: false
  name: GetLocation
  nameWithType: Argument.GetLocation
- uid: System.Activities.Argument.Set*
  parent: System.Activities.Argument
  isExternal: false
  name: Set
  nameWithType: Argument.Set
