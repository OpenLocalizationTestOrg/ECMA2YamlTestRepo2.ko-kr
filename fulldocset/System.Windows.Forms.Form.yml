### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.Form
  id: Form
  children:
  - System.Windows.Forms.Form.#ctor
  - System.Windows.Forms.Form.AcceptButton
  - System.Windows.Forms.Form.Activate
  - System.Windows.Forms.Form.Activated
  - System.Windows.Forms.Form.ActivateMdiChild(System.Windows.Forms.Form)
  - System.Windows.Forms.Form.ActiveForm
  - System.Windows.Forms.Form.ActiveMdiChild
  - System.Windows.Forms.Form.AddOwnedForm(System.Windows.Forms.Form)
  - System.Windows.Forms.Form.AdjustFormScrollbars(System.Boolean)
  - System.Windows.Forms.Form.AllowTransparency
  - System.Windows.Forms.Form.ApplyAutoScaling
  - System.Windows.Forms.Form.AutoScale
  - System.Windows.Forms.Form.AutoScaleBaseSize
  - System.Windows.Forms.Form.AutoScroll
  - System.Windows.Forms.Form.AutoSize
  - System.Windows.Forms.Form.AutoSizeChanged
  - System.Windows.Forms.Form.AutoSizeMode
  - System.Windows.Forms.Form.AutoValidate
  - System.Windows.Forms.Form.AutoValidateChanged
  - System.Windows.Forms.Form.BackColor
  - System.Windows.Forms.Form.CancelButton
  - System.Windows.Forms.Form.CenterToParent
  - System.Windows.Forms.Form.CenterToScreen
  - System.Windows.Forms.Form.ClientSize
  - System.Windows.Forms.Form.Close
  - System.Windows.Forms.Form.Closed
  - System.Windows.Forms.Form.Closing
  - System.Windows.Forms.Form.ControlBox
  - System.Windows.Forms.Form.CreateControlsInstance
  - System.Windows.Forms.Form.CreateHandle
  - System.Windows.Forms.Form.CreateParams
  - System.Windows.Forms.Form.Deactivate
  - System.Windows.Forms.Form.DefaultImeMode
  - System.Windows.Forms.Form.DefaultSize
  - System.Windows.Forms.Form.DefWndProc(System.Windows.Forms.Message@)
  - System.Windows.Forms.Form.DesktopBounds
  - System.Windows.Forms.Form.DesktopLocation
  - System.Windows.Forms.Form.DialogResult
  - System.Windows.Forms.Form.Dispose(System.Boolean)
  - System.Windows.Forms.Form.FormBorderStyle
  - System.Windows.Forms.Form.FormClosed
  - System.Windows.Forms.Form.FormClosing
  - System.Windows.Forms.Form.GetAutoScaleSize(System.Drawing.Font)
  - System.Windows.Forms.Form.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)
  - System.Windows.Forms.Form.HelpButton
  - System.Windows.Forms.Form.HelpButtonClicked
  - System.Windows.Forms.Form.Icon
  - System.Windows.Forms.Form.InputLanguageChanged
  - System.Windows.Forms.Form.InputLanguageChanging
  - System.Windows.Forms.Form.IsMdiChild
  - System.Windows.Forms.Form.IsMdiContainer
  - System.Windows.Forms.Form.IsRestrictedWindow
  - System.Windows.Forms.Form.KeyPreview
  - System.Windows.Forms.Form.LayoutMdi(System.Windows.Forms.MdiLayout)
  - System.Windows.Forms.Form.Load
  - System.Windows.Forms.Form.Location
  - System.Windows.Forms.Form.MainMenuStrip
  - System.Windows.Forms.Form.Margin
  - System.Windows.Forms.Form.MarginChanged
  - System.Windows.Forms.Form.MaximizeBox
  - System.Windows.Forms.Form.MaximizedBounds
  - System.Windows.Forms.Form.MaximizedBoundsChanged
  - System.Windows.Forms.Form.MaximumSize
  - System.Windows.Forms.Form.MaximumSizeChanged
  - System.Windows.Forms.Form.MdiChildActivate
  - System.Windows.Forms.Form.MdiChildren
  - System.Windows.Forms.Form.MdiParent
  - System.Windows.Forms.Form.Menu
  - System.Windows.Forms.Form.MenuComplete
  - System.Windows.Forms.Form.MenuStart
  - System.Windows.Forms.Form.MergedMenu
  - System.Windows.Forms.Form.MinimizeBox
  - System.Windows.Forms.Form.MinimumSize
  - System.Windows.Forms.Form.MinimumSizeChanged
  - System.Windows.Forms.Form.Modal
  - System.Windows.Forms.Form.OnActivated(System.EventArgs)
  - System.Windows.Forms.Form.OnBackgroundImageChanged(System.EventArgs)
  - System.Windows.Forms.Form.OnBackgroundImageLayoutChanged(System.EventArgs)
  - System.Windows.Forms.Form.OnClosed(System.EventArgs)
  - System.Windows.Forms.Form.OnClosing(System.ComponentModel.CancelEventArgs)
  - System.Windows.Forms.Form.OnCreateControl
  - System.Windows.Forms.Form.OnDeactivate(System.EventArgs)
  - System.Windows.Forms.Form.OnEnabledChanged(System.EventArgs)
  - System.Windows.Forms.Form.OnEnter(System.EventArgs)
  - System.Windows.Forms.Form.OnFontChanged(System.EventArgs)
  - System.Windows.Forms.Form.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)
  - System.Windows.Forms.Form.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)
  - System.Windows.Forms.Form.OnHandleCreated(System.EventArgs)
  - System.Windows.Forms.Form.OnHandleDestroyed(System.EventArgs)
  - System.Windows.Forms.Form.OnHelpButtonClicked(System.ComponentModel.CancelEventArgs)
  - System.Windows.Forms.Form.OnInputLanguageChanged(System.Windows.Forms.InputLanguageChangedEventArgs)
  - System.Windows.Forms.Form.OnInputLanguageChanging(System.Windows.Forms.InputLanguageChangingEventArgs)
  - System.Windows.Forms.Form.OnLayout(System.Windows.Forms.LayoutEventArgs)
  - System.Windows.Forms.Form.OnLoad(System.EventArgs)
  - System.Windows.Forms.Form.OnMaximizedBoundsChanged(System.EventArgs)
  - System.Windows.Forms.Form.OnMaximumSizeChanged(System.EventArgs)
  - System.Windows.Forms.Form.OnMdiChildActivate(System.EventArgs)
  - System.Windows.Forms.Form.OnMenuComplete(System.EventArgs)
  - System.Windows.Forms.Form.OnMenuStart(System.EventArgs)
  - System.Windows.Forms.Form.OnMinimumSizeChanged(System.EventArgs)
  - System.Windows.Forms.Form.OnPaint(System.Windows.Forms.PaintEventArgs)
  - System.Windows.Forms.Form.OnResize(System.EventArgs)
  - System.Windows.Forms.Form.OnResizeBegin(System.EventArgs)
  - System.Windows.Forms.Form.OnResizeEnd(System.EventArgs)
  - System.Windows.Forms.Form.OnRightToLeftLayoutChanged(System.EventArgs)
  - System.Windows.Forms.Form.OnShown(System.EventArgs)
  - System.Windows.Forms.Form.OnStyleChanged(System.EventArgs)
  - System.Windows.Forms.Form.OnTextChanged(System.EventArgs)
  - System.Windows.Forms.Form.OnVisibleChanged(System.EventArgs)
  - System.Windows.Forms.Form.Opacity
  - System.Windows.Forms.Form.OwnedForms
  - System.Windows.Forms.Form.Owner
  - System.Windows.Forms.Form.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)
  - System.Windows.Forms.Form.ProcessDialogChar(System.Char)
  - System.Windows.Forms.Form.ProcessDialogKey(System.Windows.Forms.Keys)
  - System.Windows.Forms.Form.ProcessKeyPreview(System.Windows.Forms.Message@)
  - System.Windows.Forms.Form.ProcessMnemonic(System.Char)
  - System.Windows.Forms.Form.ProcessTabKey(System.Boolean)
  - System.Windows.Forms.Form.RemoveOwnedForm(System.Windows.Forms.Form)
  - System.Windows.Forms.Form.ResizeBegin
  - System.Windows.Forms.Form.ResizeEnd
  - System.Windows.Forms.Form.RestoreBounds
  - System.Windows.Forms.Form.RightToLeftLayout
  - System.Windows.Forms.Form.RightToLeftLayoutChanged
  - System.Windows.Forms.Form.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)
  - System.Windows.Forms.Form.ScaleCore(System.Single,System.Single)
  - System.Windows.Forms.Form.Select(System.Boolean,System.Boolean)
  - System.Windows.Forms.Form.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)
  - System.Windows.Forms.Form.SetClientSizeCore(System.Int32,System.Int32)
  - System.Windows.Forms.Form.SetDesktopBounds(System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Windows.Forms.Form.SetDesktopLocation(System.Int32,System.Int32)
  - System.Windows.Forms.Form.SetVisibleCore(System.Boolean)
  - System.Windows.Forms.Form.Show(System.Windows.Forms.IWin32Window)
  - System.Windows.Forms.Form.ShowDialog
  - System.Windows.Forms.Form.ShowDialog(System.Windows.Forms.IWin32Window)
  - System.Windows.Forms.Form.ShowIcon
  - System.Windows.Forms.Form.ShowInTaskbar
  - System.Windows.Forms.Form.Shown
  - System.Windows.Forms.Form.ShowWithoutActivation
  - System.Windows.Forms.Form.Size
  - System.Windows.Forms.Form.SizeGripStyle
  - System.Windows.Forms.Form.StartPosition
  - System.Windows.Forms.Form.TabIndex
  - System.Windows.Forms.Form.TabIndexChanged
  - System.Windows.Forms.Form.TabStop
  - System.Windows.Forms.Form.TabStopChanged
  - System.Windows.Forms.Form.Text
  - System.Windows.Forms.Form.TopLevel
  - System.Windows.Forms.Form.TopMost
  - System.Windows.Forms.Form.ToString
  - System.Windows.Forms.Form.TransparencyKey
  - System.Windows.Forms.Form.UpdateDefaultButton
  - System.Windows.Forms.Form.ValidateChildren
  - System.Windows.Forms.Form.ValidateChildren(System.Windows.Forms.ValidationConstraints)
  - System.Windows.Forms.Form.WindowState
  - System.Windows.Forms.Form.WndProc(System.Windows.Forms.Message@)
  langs:
  - csharp
  name: Form
  nameWithType: Form
  fullName: System.Windows.Forms.Form
  type: Class
  summary: "응용 프로그램의 사용자 인터페이스를 구성 하는 창 또는 대화 상자를 나타냅니다."
  remarks: "폼은 응용 프로그램에 표시 하는 모든 창의 표현입니다. Form 클래스 standard, 여백, 도구 및 부동 창은 만드는 데 사용할 수 있습니다. 또한 대화 상자와 같은 모달 창을 만들 폼 클래스를 사용할 수 있습니다. 특별 한 종류 (MDI) 다중 문서 인터페이스 폼을 폼의 MDI 자식 폼을 호출 하는 다른 폼을 포함할 수 있습니다. 설정 하 여 MDI 폼 만들어집니다는 <xref:System.Windows.Forms.Form.IsMdiContainer%2A>속성을 `true`.</xref:System.Windows.Forms.Form.IsMdiContainer%2A> MDI 자식 폼을 설정 하 여 만든는 <xref:System.Windows.Forms.Form.MdiParent%2A>속성 자식 폼을 포함 하는 MDI 부모 폼을.</xref:System.Windows.Forms.Form.MdiParent%2A>       Form 클래스에 사용할 수 있는 속성을 사용 하 여, 만들면 창 또는 대화 상자의 모양, 크기, 색 및 창 관리 기능을 확인할 수 있습니다. <xref:System.Windows.Forms.Control.Text%2A>속성을 통해 제목 표시줄에 창의 캡션을 지정할 수 있습니다.</xref:System.Windows.Forms.Control.Text%2A> <xref:System.Windows.Forms.Form.Size%2A>및 <xref:System.Windows.Forms.Form.DesktopLocation%2A>속성을 사용 하면 표시 되 면 크기와 창의 위치를 정의할 수 있습니다.</xref:System.Windows.Forms.Form.DesktopLocation%2A> </xref:System.Windows.Forms.Form.Size%2A> 사용할 수는 <xref:System.Windows.Forms.Control.ForeColor%2A>모든 컨트롤의 기본 전경색을 변경 하려면 색 속성 폼에 배치 합니다.</xref:System.Windows.Forms.Control.ForeColor%2A> <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, 및 <xref:System.Windows.Forms.Form.MaximizeBox%2A>속성을 사용 하면 컨트롤을 폼 최소화, 최대화 하거나 실행 시 크기를 조정할 수 있는지 여부를.</xref:System.Windows.Forms.Form.MaximizeBox%2A> </xref:System.Windows.Forms.Form.MinimizeBox%2A> </xref:System.Windows.Forms.Form.FormBorderStyle%2A>       속성 외에 폼을 조작 하는 클래스의 메서드를 사용할 수 있습니다. 예를 들어, 사용할 수는 <xref:System.Windows.Forms.Form.ShowDialog%2A>메서드를 폼을 모달 대화 상자로 표시 합니다.</xref:System.Windows.Forms.Form.ShowDialog%2A> 사용할 수는 <xref:System.Windows.Forms.Form.SetDesktopLocation%2A>메서드를 폼의 바탕 화면에서 위치를 지정 합니다.</xref:System.Windows.Forms.Form.SetDesktopLocation%2A>       Form 클래스의 이벤트를 사용 하는 양식에서 수행 하는 작업에 응답할 수 있습니다. 사용할 수는 <xref:System.Windows.Forms.Form.Activated>폼 활성화 될 때 폼의 컨트롤에 표시 된 데이터를 업데이트 하는 등 작업을 수행 하는 이벤트입니다.</xref:System.Windows.Forms.Form.Activated>       라는 메서드를 배치 하 여 응용 프로그램에서 폼 시작 클래스로 사용할 수 있습니다 `Main` 클래스에 있습니다. 에 `Main` 메서드를 만들고 폼을 표시 하는 코드를 추가 합니다. 추가 해야 합니다는 `STAThread` 특성을 `Main` 폼을 실행 하려면 메서드. 시작 폼을 닫을 때 응용 프로그램이 닫힙니다.       설정 하는 경우는 <xref:System.Windows.Forms.Control.Enabled%2A>속성을 `false` 폼이 표시 되기 전에 (예를 들어 설정 <xref:System.Windows.Forms.Control.Enabled%2A>를 false로 [!INCLUDE[TLA#tla_visualstu](~/add/includes/tlasharptla-visualstu-md.md)] 디자이너), 최소화, 최대화, 닫기 및 시스템 단추를 사용 하도록 유지.</xref:System.Windows.Forms.Control.Enabled%2A> </xref:System.Windows.Forms.Control.Enabled%2A> 설정한 경우 <xref:System.Windows.Forms.Control.Enabled%2A>를 `false` 형식 (예: Load 이벤트가 발생할 때)에 표시 되 면 단추가 비활성화 됩니다.</xref:System.Windows.Forms.Control.Enabled%2A>"
  example:
  - "The following code example creates a new instance of a Form and calls the <xref:System.Windows.Forms.Form.ShowDialog%2A> method to display the form as a dialog box. The example sets the <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.AcceptButton%2A>, <xref:System.Windows.Forms.Form.CancelButton%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, <xref:System.Windows.Forms.Form.MaximizeBox%2A>, and <xref:System.Windows.Forms.Form.StartPosition%2A> properties to change the appearance and functionality of the form to a dialog box. The example also uses the <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> method of the form's <xref:System.Windows.Forms.Control.Controls%2A> collection to add two <xref:System.Windows.Forms.Button> controls. The example uses the <xref:System.Windows.Forms.Form.HelpButton%2A> property to display a help button in the caption bar of the dialog box.  \n  \n [!code-cpp[Classic Form.AcceptButton Example#1](~/add/codesnippet/cpp/t-system.windows.forms.f_4_1.cpp)]\n [!code-cs[Classic Form.AcceptButton Example#1](~/add/codesnippet/csharp/t-system.windows.forms.f_4_1.cs)]\n [!code-vb[Classic Form.AcceptButton Example#1](~/add/codesnippet/visualbasic/t-system.windows.forms.f_4_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("Load")]

      [System.ComponentModel.Designer("System.Windows.Forms.Design.FormDocumentDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.ComponentModel.Design.IRootDesigner))]

      [System.ComponentModel.DesignerCategory("Form")]

      [System.ComponentModel.DesignTimeVisible(false)]

      [System.ComponentModel.InitializationEvent("Load")]

      [System.ComponentModel.ToolboxItem(false)]

      [System.ComponentModel.ToolboxItemFilter("System.Windows.Forms.Control.TopLevel")]

      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)]

      [System.Runtime.InteropServices.ComVisible(true)]

      public class Form : System.Windows.Forms.ContainerControl
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Windows.Forms.Control
  - System.Windows.Forms.ScrollableControl
  - System.Windows.Forms.ContainerControl
  implements: []
  inheritedMembers:
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  - System.Windows.Forms.ContainerControl.ActiveControl
  - System.Windows.Forms.ContainerControl.AutoScaleDimensions
  - System.Windows.Forms.ContainerControl.AutoScaleFactor
  - System.Windows.Forms.ContainerControl.AutoScaleMode
  - System.Windows.Forms.ContainerControl.BindingContext
  - System.Windows.Forms.ContainerControl.CanEnableIme
  - System.Windows.Forms.ContainerControl.CurrentAutoScaleDimensions
  - System.Windows.Forms.ContainerControl.OnAutoValidateChanged(System.EventArgs)
  - System.Windows.Forms.ContainerControl.OnParentChanged(System.EventArgs)
  - System.Windows.Forms.ContainerControl.ParentForm
  - System.Windows.Forms.ContainerControl.PerformAutoScale
  - System.Windows.Forms.ContainerControl.System#Windows#Forms#IContainerControl#ActivateControl(System.Windows.Forms.Control)
  - System.Windows.Forms.ContainerControl.Validate
  - System.Windows.Forms.ContainerControl.Validate(System.Boolean)
  - System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32)
  - System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32,System.Int32)
  - System.Windows.Forms.Control.AccessibilityObject
  - System.Windows.Forms.Control.AccessibleDefaultActionDescription
  - System.Windows.Forms.Control.AccessibleDescription
  - System.Windows.Forms.Control.AccessibleName
  - System.Windows.Forms.Control.AccessibleRole
  - System.Windows.Forms.Control.AllowDrop
  - System.Windows.Forms.Control.Anchor
  - System.Windows.Forms.Control.AutoScrollOffset
  - System.Windows.Forms.Control.BackColorChanged
  - System.Windows.Forms.Control.BackgroundImage
  - System.Windows.Forms.Control.BackgroundImageChanged
  - System.Windows.Forms.Control.BackgroundImageLayout
  - System.Windows.Forms.Control.BackgroundImageLayoutChanged
  - System.Windows.Forms.Control.BeginInvoke(System.Delegate)
  - System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])
  - System.Windows.Forms.Control.BindingContextChanged
  - System.Windows.Forms.Control.Bottom
  - System.Windows.Forms.Control.Bounds
  - System.Windows.Forms.Control.BringToFront
  - System.Windows.Forms.Control.CanFocus
  - System.Windows.Forms.Control.CanRaiseEvents
  - System.Windows.Forms.Control.CanSelect
  - System.Windows.Forms.Control.Capture
  - System.Windows.Forms.Control.CausesValidation
  - System.Windows.Forms.Control.CausesValidationChanged
  - System.Windows.Forms.Control.ChangeUICues
  - System.Windows.Forms.Control.CheckForIllegalCrossThreadCalls
  - System.Windows.Forms.Control.Click
  - System.Windows.Forms.Control.ClientRectangle
  - System.Windows.Forms.Control.ClientSizeChanged
  - System.Windows.Forms.Control.CompanyName
  - System.Windows.Forms.Control.Contains(System.Windows.Forms.Control)
  - System.Windows.Forms.Control.ContainsFocus
  - System.Windows.Forms.Control.ContextMenu
  - System.Windows.Forms.Control.ContextMenuChanged
  - System.Windows.Forms.Control.ContextMenuStrip
  - System.Windows.Forms.Control.ContextMenuStripChanged
  - System.Windows.Forms.Control.ControlAdded
  - System.Windows.Forms.Control.ControlRemoved
  - System.Windows.Forms.Control.Controls
  - System.Windows.Forms.Control.CreateAccessibilityInstance
  - System.Windows.Forms.Control.CreateControl
  - System.Windows.Forms.Control.Created
  - System.Windows.Forms.Control.CreateGraphics
  - System.Windows.Forms.Control.Cursor
  - System.Windows.Forms.Control.CursorChanged
  - System.Windows.Forms.Control.DataBindings
  - System.Windows.Forms.Control.DefaultBackColor
  - System.Windows.Forms.Control.DefaultCursor
  - System.Windows.Forms.Control.DefaultFont
  - System.Windows.Forms.Control.DefaultForeColor
  - System.Windows.Forms.Control.DefaultMargin
  - System.Windows.Forms.Control.DefaultMaximumSize
  - System.Windows.Forms.Control.DefaultMinimumSize
  - System.Windows.Forms.Control.DefaultPadding
  - System.Windows.Forms.Control.DestroyHandle
  - System.Windows.Forms.Control.Disposing
  - System.Windows.Forms.Control.Dock
  - System.Windows.Forms.Control.DockChanged
  - System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)
  - System.Windows.Forms.Control.DoubleBuffered
  - System.Windows.Forms.Control.DoubleClick
  - System.Windows.Forms.Control.DragDrop
  - System.Windows.Forms.Control.DragEnter
  - System.Windows.Forms.Control.DragLeave
  - System.Windows.Forms.Control.DragOver
  - System.Windows.Forms.Control.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)
  - System.Windows.Forms.Control.Enabled
  - System.Windows.Forms.Control.EnabledChanged
  - System.Windows.Forms.Control.EndInvoke(System.IAsyncResult)
  - System.Windows.Forms.Control.Enter
  - System.Windows.Forms.Control.FindForm
  - System.Windows.Forms.Control.Focus
  - System.Windows.Forms.Control.Focused
  - System.Windows.Forms.Control.Font
  - System.Windows.Forms.Control.FontChanged
  - System.Windows.Forms.Control.FontHeight
  - System.Windows.Forms.Control.ForeColor
  - System.Windows.Forms.Control.ForeColorChanged
  - System.Windows.Forms.Control.FromChildHandle(System.IntPtr)
  - System.Windows.Forms.Control.FromHandle(System.IntPtr)
  - System.Windows.Forms.Control.GetAccessibilityObjectById(System.Int32)
  - System.Windows.Forms.Control.GetAutoSizeMode
  - System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point)
  - System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point,System.Windows.Forms.GetChildAtPointSkip)
  - System.Windows.Forms.Control.GetContainerControl
  - System.Windows.Forms.Control.GetNextControl(System.Windows.Forms.Control,System.Boolean)
  - System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)
  - System.Windows.Forms.Control.GetStyle(System.Windows.Forms.ControlStyles)
  - System.Windows.Forms.Control.GetTopLevel
  - System.Windows.Forms.Control.GiveFeedback
  - System.Windows.Forms.Control.GotFocus
  - System.Windows.Forms.Control.Handle
  - System.Windows.Forms.Control.HandleCreated
  - System.Windows.Forms.Control.HandleDestroyed
  - System.Windows.Forms.Control.HasChildren
  - System.Windows.Forms.Control.Height
  - System.Windows.Forms.Control.HelpRequested
  - System.Windows.Forms.Control.Hide
  - System.Windows.Forms.Control.ImeMode
  - System.Windows.Forms.Control.ImeModeBase
  - System.Windows.Forms.Control.ImeModeChanged
  - System.Windows.Forms.Control.InitLayout
  - System.Windows.Forms.Control.Invalidate
  - System.Windows.Forms.Control.Invalidate(System.Boolean)
  - System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle)
  - System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle,System.Boolean)
  - System.Windows.Forms.Control.Invalidate(System.Drawing.Region)
  - System.Windows.Forms.Control.Invalidate(System.Drawing.Region,System.Boolean)
  - System.Windows.Forms.Control.Invalidated
  - System.Windows.Forms.Control.Invoke(System.Delegate)
  - System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])
  - System.Windows.Forms.Control.InvokeGotFocus(System.Windows.Forms.Control,System.EventArgs)
  - System.Windows.Forms.Control.InvokeLostFocus(System.Windows.Forms.Control,System.EventArgs)
  - System.Windows.Forms.Control.InvokeOnClick(System.Windows.Forms.Control,System.EventArgs)
  - System.Windows.Forms.Control.InvokePaint(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)
  - System.Windows.Forms.Control.InvokePaintBackground(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)
  - System.Windows.Forms.Control.InvokeRequired
  - System.Windows.Forms.Control.IsAccessible
  - System.Windows.Forms.Control.IsDisposed
  - System.Windows.Forms.Control.IsHandleCreated
  - System.Windows.Forms.Control.IsInputChar(System.Char)
  - System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)
  - System.Windows.Forms.Control.IsKeyLocked(System.Windows.Forms.Keys)
  - System.Windows.Forms.Control.IsMirrored
  - System.Windows.Forms.Control.IsMnemonic(System.Char,System.String)
  - System.Windows.Forms.Control.KeyDown
  - System.Windows.Forms.Control.KeyPress
  - System.Windows.Forms.Control.KeyUp
  - System.Windows.Forms.Control.Layout
  - System.Windows.Forms.Control.LayoutEngine
  - System.Windows.Forms.Control.Leave
  - System.Windows.Forms.Control.Left
  - System.Windows.Forms.Control.LocationChanged
  - System.Windows.Forms.Control.LostFocus
  - System.Windows.Forms.Control.ModifierKeys
  - System.Windows.Forms.Control.MouseButtons
  - System.Windows.Forms.Control.MouseCaptureChanged
  - System.Windows.Forms.Control.MouseClick
  - System.Windows.Forms.Control.MouseDoubleClick
  - System.Windows.Forms.Control.MouseDown
  - System.Windows.Forms.Control.MouseEnter
  - System.Windows.Forms.Control.MouseHover
  - System.Windows.Forms.Control.MouseLeave
  - System.Windows.Forms.Control.MouseMove
  - System.Windows.Forms.Control.MousePosition
  - System.Windows.Forms.Control.MouseUp
  - System.Windows.Forms.Control.MouseWheel
  - System.Windows.Forms.Control.Move
  - System.Windows.Forms.Control.Name
  - System.Windows.Forms.Control.NotifyInvalidate(System.Drawing.Rectangle)
  - System.Windows.Forms.Control.OnAutoSizeChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnBindingContextChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)
  - System.Windows.Forms.Control.OnClick(System.EventArgs)
  - System.Windows.Forms.Control.OnClientSizeChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnContextMenuStripChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnControlAdded(System.Windows.Forms.ControlEventArgs)
  - System.Windows.Forms.Control.OnControlRemoved(System.Windows.Forms.ControlEventArgs)
  - System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnDockChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnDoubleClick(System.EventArgs)
  - System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)
  - System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)
  - System.Windows.Forms.Control.OnDragLeave(System.EventArgs)
  - System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)
  - System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)
  - System.Windows.Forms.Control.OnGotFocus(System.EventArgs)
  - System.Windows.Forms.Control.OnHelpRequested(System.Windows.Forms.HelpEventArgs)
  - System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)
  - System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)
  - System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)
  - System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)
  - System.Windows.Forms.Control.OnLeave(System.EventArgs)
  - System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnLostFocus(System.EventArgs)
  - System.Windows.Forms.Control.OnMarginChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnMouseCaptureChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnMouseClick(System.Windows.Forms.MouseEventArgs)
  - System.Windows.Forms.Control.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)
  - System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)
  - System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)
  - System.Windows.Forms.Control.OnMouseHover(System.EventArgs)
  - System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)
  - System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)
  - System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)
  - System.Windows.Forms.Control.OnMove(System.EventArgs)
  - System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)
  - System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnParentCursorChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)
  - System.Windows.Forms.Control.OnPrint(System.Windows.Forms.PaintEventArgs)
  - System.Windows.Forms.Control.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)
  - System.Windows.Forms.Control.OnRegionChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnSizeChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnSystemColorsChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnTabIndexChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnValidated(System.EventArgs)
  - System.Windows.Forms.Control.OnValidating(System.ComponentModel.CancelEventArgs)
  - System.Windows.Forms.Control.Padding
  - System.Windows.Forms.Control.PaddingChanged
  - System.Windows.Forms.Control.Paint
  - System.Windows.Forms.Control.Parent
  - System.Windows.Forms.Control.ParentChanged
  - System.Windows.Forms.Control.PerformLayout
  - System.Windows.Forms.Control.PerformLayout(System.Windows.Forms.Control,System.String)
  - System.Windows.Forms.Control.PointToClient(System.Drawing.Point)
  - System.Windows.Forms.Control.PointToScreen(System.Drawing.Point)
  - System.Windows.Forms.Control.PreferredSize
  - System.Windows.Forms.Control.PreProcessControlMessage(System.Windows.Forms.Message@)
  - System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)
  - System.Windows.Forms.Control.PreviewKeyDown
  - System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)
  - System.Windows.Forms.Control.ProcessKeyMessage(System.Windows.Forms.Message@)
  - System.Windows.Forms.Control.ProductName
  - System.Windows.Forms.Control.ProductVersion
  - System.Windows.Forms.Control.PropagatingImeMode
  - System.Windows.Forms.Control.QueryAccessibilityHelp
  - System.Windows.Forms.Control.QueryContinueDrag
  - System.Windows.Forms.Control.RaiseDragEvent(System.Object,System.Windows.Forms.DragEventArgs)
  - System.Windows.Forms.Control.RaiseKeyEvent(System.Object,System.Windows.Forms.KeyEventArgs)
  - System.Windows.Forms.Control.RaiseMouseEvent(System.Object,System.Windows.Forms.MouseEventArgs)
  - System.Windows.Forms.Control.RaisePaintEvent(System.Object,System.Windows.Forms.PaintEventArgs)
  - System.Windows.Forms.Control.RecreateHandle
  - System.Windows.Forms.Control.RecreatingHandle
  - System.Windows.Forms.Control.RectangleToClient(System.Drawing.Rectangle)
  - System.Windows.Forms.Control.RectangleToScreen(System.Drawing.Rectangle)
  - System.Windows.Forms.Control.ReflectMessage(System.IntPtr,System.Windows.Forms.Message@)
  - System.Windows.Forms.Control.Refresh
  - System.Windows.Forms.Control.Region
  - System.Windows.Forms.Control.RegionChanged
  - System.Windows.Forms.Control.RenderRightToLeft
  - System.Windows.Forms.Control.ResetBackColor
  - System.Windows.Forms.Control.ResetBindings
  - System.Windows.Forms.Control.ResetCursor
  - System.Windows.Forms.Control.ResetFont
  - System.Windows.Forms.Control.ResetForeColor
  - System.Windows.Forms.Control.ResetImeMode
  - System.Windows.Forms.Control.ResetMouseEventArgs
  - System.Windows.Forms.Control.ResetRightToLeft
  - System.Windows.Forms.Control.ResetText
  - System.Windows.Forms.Control.Resize
  - System.Windows.Forms.Control.ResizeRedraw
  - System.Windows.Forms.Control.ResumeLayout
  - System.Windows.Forms.Control.ResumeLayout(System.Boolean)
  - System.Windows.Forms.Control.Right
  - System.Windows.Forms.Control.RightToLeft
  - System.Windows.Forms.Control.RightToLeftChanged
  - System.Windows.Forms.Control.RtlTranslateAlignment(System.Drawing.ContentAlignment)
  - System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.HorizontalAlignment)
  - System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.LeftRightAlignment)
  - System.Windows.Forms.Control.RtlTranslateContent(System.Drawing.ContentAlignment)
  - System.Windows.Forms.Control.RtlTranslateHorizontal(System.Windows.Forms.HorizontalAlignment)
  - System.Windows.Forms.Control.RtlTranslateLeftRight(System.Windows.Forms.LeftRightAlignment)
  - System.Windows.Forms.Control.Scale(System.Drawing.SizeF)
  - System.Windows.Forms.Control.Scale(System.Single)
  - System.Windows.Forms.Control.Scale(System.Single,System.Single)
  - System.Windows.Forms.Control.ScaleChildren
  - System.Windows.Forms.Control.Select
  - System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  - System.Windows.Forms.Control.SendToBack
  - System.Windows.Forms.Control.SetAutoSizeMode(System.Windows.Forms.AutoSizeMode)
  - System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)
  - System.Windows.Forms.Control.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)
  - System.Windows.Forms.Control.SetTopLevel(System.Boolean)
  - System.Windows.Forms.Control.Show
  - System.Windows.Forms.Control.ShowFocusCues
  - System.Windows.Forms.Control.ShowKeyboardCues
  - System.Windows.Forms.Control.Site
  - System.Windows.Forms.Control.SizeChanged
  - System.Windows.Forms.Control.SizeFromClientSize(System.Drawing.Size)
  - System.Windows.Forms.Control.StyleChanged
  - System.Windows.Forms.Control.SuspendLayout
  - System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragDrop(System.Windows.Forms.DragEventArgs)
  - System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragEnter(System.Windows.Forms.DragEventArgs)
  - System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragLeave(System.EventArgs)
  - System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragOver(System.Windows.Forms.DragEventArgs)
  - System.Windows.Forms.Control.SystemColorsChanged
  - System.Windows.Forms.Control.Tag
  - System.Windows.Forms.Control.TextChanged
  - System.Windows.Forms.Control.Top
  - System.Windows.Forms.Control.TopLevelControl
  - System.Windows.Forms.Control.Update
  - System.Windows.Forms.Control.UpdateBounds
  - System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Windows.Forms.Control.UpdateStyles
  - System.Windows.Forms.Control.UpdateZOrder
  - System.Windows.Forms.Control.UseWaitCursor
  - System.Windows.Forms.Control.Validated
  - System.Windows.Forms.Control.Validating
  - System.Windows.Forms.Control.Visible
  - System.Windows.Forms.Control.VisibleChanged
  - System.Windows.Forms.Control.Width
  - System.Windows.Forms.Control.WindowTarget
  - System.Windows.Forms.ScrollableControl.AutoScrollMargin
  - System.Windows.Forms.ScrollableControl.AutoScrollMinSize
  - System.Windows.Forms.ScrollableControl.AutoScrollPosition
  - System.Windows.Forms.ScrollableControl.DisplayRectangle
  - System.Windows.Forms.ScrollableControl.DockPadding
  - System.Windows.Forms.ScrollableControl.GetScrollState(System.Int32)
  - System.Windows.Forms.ScrollableControl.HorizontalScroll
  - System.Windows.Forms.ScrollableControl.HScroll
  - System.Windows.Forms.ScrollableControl.OnMouseWheel(System.Windows.Forms.MouseEventArgs)
  - System.Windows.Forms.ScrollableControl.OnPaddingChanged(System.EventArgs)
  - System.Windows.Forms.ScrollableControl.OnPaintBackground(System.Windows.Forms.PaintEventArgs)
  - System.Windows.Forms.ScrollableControl.OnRightToLeftChanged(System.EventArgs)
  - System.Windows.Forms.ScrollableControl.OnScroll(System.Windows.Forms.ScrollEventArgs)
  - System.Windows.Forms.ScrollableControl.Scroll
  - System.Windows.Forms.ScrollableControl.ScrollControlIntoView(System.Windows.Forms.Control)
  - System.Windows.Forms.ScrollableControl.ScrollStateAutoScrolling
  - System.Windows.Forms.ScrollableControl.ScrollStateFullDrag
  - System.Windows.Forms.ScrollableControl.ScrollStateHScrollVisible
  - System.Windows.Forms.ScrollableControl.ScrollStateUserHasScrolled
  - System.Windows.Forms.ScrollableControl.ScrollStateVScrollVisible
  - System.Windows.Forms.ScrollableControl.ScrollToControl(System.Windows.Forms.Control)
  - System.Windows.Forms.ScrollableControl.SetAutoScrollMargin(System.Int32,System.Int32)
  - System.Windows.Forms.ScrollableControl.SetDisplayRectLocation(System.Int32,System.Int32)
  - System.Windows.Forms.ScrollableControl.SetScrollState(System.Int32,System.Boolean)
  - System.Windows.Forms.ScrollableControl.VerticalScroll
  - System.Windows.Forms.ScrollableControl.VScroll
  platform:
  - net462
- uid: System.Windows.Forms.Form.#ctor
  id: '#ctor'
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: Form()
  nameWithType: Form.Form()
  fullName: System.Windows.Forms.Form.Form()
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Windows.Forms.Form&quot;> </xref> 클래스입니다."
  remarks: "기본 폼의 크기가 높이 및 너비가 300 픽셀이 고 합니다."
  example:
  - "The following code example creates a new instance of a <xref:System.Windows.Forms.Form> and calls the <xref:System.Windows.Forms.Form.ShowDialog%2A> method to display the form as a dialog box. The example sets the <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.AcceptButton%2A>, <xref:System.Windows.Forms.Form.CancelButton%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, <xref:System.Windows.Forms.Form.MaximizeBox%2A>, and <xref:System.Windows.Forms.Form.StartPosition%2A> properties to change the appearance and functionality of the form to a dialog box. The example also sets uses the <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> method of the form's <xref:System.Windows.Forms.Control.Controls%2A> collection to add two <xref:System.Windows.Forms.Button> controls. The example uses the <xref:System.Windows.Forms.Form.HelpButton%2A> property to display a help button in the caption bar of the dialog box.  \n  \n [!code-cpp[Classic Form.AcceptButton Example#1](~/add/codesnippet/cpp/m-system.windows.forms.f_12_1.cpp)]\n [!code-cs[Classic Form.AcceptButton Example#1](~/add/codesnippet/csharp/m-system.windows.forms.f_12_1.cs)]\n [!code-vb[Classic Form.AcceptButton Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.f_12_1.vb)]"
  syntax:
    content: public Form ();
    parameters: []
  overload: System.Windows.Forms.Form.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.AcceptButton
  id: AcceptButton
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: AcceptButton
  nameWithType: Form.AcceptButton
  fullName: System.Windows.Forms.Form.AcceptButton
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "사용자가 ENTER 키를 누를 때 클릭 되는 폼에 단추를 가져오거나 설정 합니다."
  remarks: "이 속성을 사용 하면 사용자가 응용 프로그램에서 ENTER 키를 누를 때 발생 하는 기본 동작을 지정할 수 있습니다. 이 속성에 할당 된 단추 이어야 합니다는 <xref:System.Windows.Forms.IButtonControl>또는 현재 양식에 컨테이너 내에 있는 현재 양식에 인.</xref:System.Windows.Forms.IButtonControl>       사용자가 수동으로 마우스로 accept 단추를 클릭 하지 않고 완료 되 면 ENTER 키를 누르면 수 있으므로 간단한 양식을 빠르게 탐색할 수 있도록이 속성을 사용할 수 있습니다.       폼에서 현재 선택 된 컨트롤 ENTER 키를 차단 하 고 처리 하는 경우 적용 단추가 활성화 될 수 있습니다. 예를 들어 여러 줄 텍스트 상자 컨트롤에 ENTER 키를를 누른 상태로 선택 컨트롤에서 줄 바꿈 문자를 삽입할 수 있습니다."
  example:
  - "The following code example creates a new instance of a <xref:System.Windows.Forms.Form> and calls the <xref:System.Windows.Forms.Form.ShowDialog%2A> method to display the form as a dialog box. The example sets the <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, AcceptButton, <xref:System.Windows.Forms.Form.CancelButton%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, <xref:System.Windows.Forms.Form.MaximizeBox%2A>, and <xref:System.Windows.Forms.Form.StartPosition%2A> properties to change the appearance and functionality of the form to a dialog box. The example also uses the <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> method of the form's <xref:System.Windows.Forms.Control.Controls%2A> collection to add two <xref:System.Windows.Forms.Button> controls. The example uses the <xref:System.Windows.Forms.Form.HelpButton%2A> property to display a help button in the caption bar of the dialog box.  \n  \n [!code-cpp[Classic Form.AcceptButton Example#1](~/add/codesnippet/cpp/p-system.windows.forms.f_47_1.cpp)]\n [!code-cs[Classic Form.AcceptButton Example#1](~/add/codesnippet/csharp/p-system.windows.forms.f_47_1.cs)]\n [!code-vb[Classic Form.AcceptButton Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.f_47_1.vb)]"
  syntax:
    content: public System.Windows.Forms.IButtonControl AcceptButton { get; set; }
    return:
      type: System.Windows.Forms.IButtonControl
      description: "<xref href=&quot;System.Windows.Forms.IButtonControl&quot;> </xref> 폼의 적용 단추로 사용할 단추를 나타내는입니다."
  overload: System.Windows.Forms.Form.AcceptButton*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.Activate
  id: Activate
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: Activate()
  nameWithType: Form.Activate()
  fullName: System.Windows.Forms.Form.Activate()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "폼을 활성화 하 고 포커스를 제공 합니다."
  remarks: "폼 활성화 상태가 앞으로 활성 응용 프로그램 이거나 없으면이 활성 응용 프로그램 창 캡션의 깜박입니다. 폼이이 메서드를 사용 하려면에 대 한 표시 되어야 합니다. 응용 프로그램에서 활성 폼을 확인 하려면 사용 하 여는 <xref:System.Windows.Forms.Form.ActiveForm%2A>속성 또는 <xref:System.Windows.Forms.Form.ActiveMdiChild%2A>속성 폼 다중 문서 MDI (인터페이스) 응용 프로그램에 있는 경우.</xref:System.Windows.Forms.Form.ActiveMdiChild%2A> </xref:System.Windows.Forms.Form.ActiveForm%2A>"
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Forms.Form.SetDesktopLocation%2A>, <xref:System.Windows.Forms.Form.Load> and Activate members. To run the example, paste the following code in a form called `Form1` containing a button called `Button1` and two `Label` controls called `Label1` and `Label2`.  \n  \n [!code-cs[System.Windows.Forms.FormsActivate#1](~/add/codesnippet/csharp/m-system.windows.forms.f_5_1.cs)]\n [!code-vb[System.Windows.Forms.FormsActivate#1](~/add/codesnippet/visualbasic/m-system.windows.forms.f_5_1.vb)]\n [!code-cpp[System.Windows.Forms.FormsActivate#1](~/add/codesnippet/cpp/m-system.windows.forms.f_5_1.cpp)]"
  syntax:
    content: public void Activate ();
    parameters: []
  overload: System.Windows.Forms.Form.Activate*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.Activated
  id: Activated
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: Activated
  nameWithType: Form.Activated
  fullName: System.Windows.Forms.Form.Activated
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "폼 또는 사용자 코드에서 활성화 될 때 발생 합니다."
  remarks: "> [!NOTE]> 응용 프로그램이 활성 상태 이며 폼이 여러 개 때 현재 형식은 입력된 포커스가 있는 폼이입니다. 양식에 표시 되지 않는 활성 폼 일 수 없습니다. 표시 폼을 활성화 하는 가장 간단한 방법은를 클릭 하거나 적절 한 키보드 조합을 사용 됩니다.       호출 코드를 사용 하 여 런타임에 폼을 활성화 하는 <xref:System.Windows.Forms.Form.Activate%2A>메서드.</xref:System.Windows.Forms.Form.Activate%2A> 폼이 활성화 되지 않은 경우 폼의 데이터에 대 한 변경 내용에 따라 폼의 내용을 업데이트 하는 등 작업에 대 한이 이벤트를 사용할 수 있습니다.       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Forms.Form.SetDesktopLocation%2A>, <xref:System.Windows.Forms.Form.Closed>, <xref:System.Windows.Forms.Form.Load>, Activated, and <xref:System.Windows.Forms.Form.Activate%2A> members. To run the example, paste the following code in a form called Form1 containing a <xref:System.Windows.Forms.Button> called `Button1` and two <xref:System.Windows.Forms.Label> controls called `Label1` and `Label2`.  \n  \n [!code-cs[System.Windows.Forms.FormsActivate#1](~/add/codesnippet/csharp/e-system.windows.forms.f_18_1.cs)]\n [!code-vb[System.Windows.Forms.FormsActivate#1](~/add/codesnippet/visualbasic/e-system.windows.forms.f_18_1.vb)]\n [!code-cpp[System.Windows.Forms.FormsActivate#1](~/add/codesnippet/cpp/e-system.windows.forms.f_18_1.cpp)]"
  syntax:
    content: public event EventHandler Activated;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.ActivateMdiChild(System.Windows.Forms.Form)
  id: ActivateMdiChild(System.Windows.Forms.Form)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: ActivateMdiChild(Form)
  nameWithType: Form.ActivateMdiChild(Form)
  fullName: System.Windows.Forms.Form.ActivateMdiChild(Form)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "폼의 MDI 자식을 활성화 합니다."
  remarks: "경우는 `form` 매개 변수는 이미 활성 MDI 자식 폼 다음 ActivateMdiChild 메서드를 반환 합니다. 경우 `form` 않습니다 `null`, 활성 MDI 자식 폼 되도록 설정 됩니다.       여부는 `form` 매개 변수는 `null` 또는 ActivateMdiChild 발생 하지는 <xref:System.Windows.Forms.Form.MdiChildActivate>이벤트.</xref:System.Windows.Forms.Form.MdiChildActivate>"
  syntax:
    content: protected void ActivateMdiChild (System.Windows.Forms.Form form);
    parameters:
    - id: form
      type: System.Windows.Forms.Form
      description: "활성화할 자식 폼입니다."
  overload: System.Windows.Forms.Form.ActivateMdiChild*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.ActiveForm
  id: ActiveForm
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: ActiveForm
  nameWithType: Form.ActiveForm
  fullName: System.Windows.Forms.Form.ActiveForm
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "이 응용 프로그램에 대 한 현재 활성 폼을 가져옵니다."
  remarks: "이 메서드는 폼 이나 컨트롤에서 동작을 수행 하려면 현재 활성 폼에 대 한 참조를 사용할 수 있습니다.       응용 프로그램은 (mdi 다중) 다중 문서 인터페이스 응용 프로그램을 사용 하 여는 <xref:System.Windows.Forms.Form.ActiveMdiChild%2A>속성을 현재 활성 MDI 자식 폼을 가져옵니다.</xref:System.Windows.Forms.Form.ActiveMdiChild%2A>"
  example:
  - "The following code example gets the active form and disables all the controls on the form. The example uses the <xref:System.Windows.Forms.Control.Controls%2A> collection of the form to iterate through each control on the form and disable the controls.  \n  \n [!code-cpp[Classic Form.ActiveForm Example#1](~/add/codesnippet/cpp/p-system.windows.forms.f_9_1.cpp)]\n [!code-vb[Classic Form.ActiveForm Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.f_9_1.vb)]\n [!code-cs[Classic Form.ActiveForm Example#1](~/add/codesnippet/csharp/p-system.windows.forms.f_9_1.cs)]"
  syntax:
    content: public static System.Windows.Forms.Form ActiveForm { get; }
    return:
      type: System.Windows.Forms.Form
      description: "A <xref href=&quot;System.Windows.Forms.Form&quot;> </xref> 현재 활성 폼을 나타내는 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 활성 폼이 없는 경우."
  overload: System.Windows.Forms.Form.ActiveForm*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.ActiveMdiChild
  id: ActiveMdiChild
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: ActiveMdiChild
  nameWithType: Form.ActiveMdiChild
  fullName: System.Windows.Forms.Form.ActiveMdiChild
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "현재 사용 중인 다중 문서 MDI (인터페이스) 자식 창을 가져옵니다."
  remarks: "MDI 응용 프로그램에서 열려 있는 MDI 자식 폼을 확인 하려면이 메서드를 사용할 수 있습니다. 또한 응용 프로그램에 표시 되는 또 다른 형태 또는 MDI 부모 폼에서 MDI 자식 창에 대 한 작업을 수행 하려면이 메서드를 사용할 수 있습니다.       현재 활성 폼 MDI 자식 폼인 경우 <xref:System.Windows.Forms.Form.ActiveForm%2A>속성에 대 한 참조를 가져올을</xref:System.Windows.Forms.Form.ActiveForm%2A> 사용할 수 있습니다."
  example:
  - "The following code example obtains a reference to the active MDI child form and loops through all <xref:System.Windows.Forms.TextBox> controls on the form, resetting their <xref:System.Windows.Forms.TextBoxBase.Text%2A> properties. This example requires that an MDI parent form has been created and that this method call is being made from the MDI parent form.  \n  \n [!code-cs[Classic Form.ActiveMdiChild Example#1](~/add/codesnippet/csharp/p-system.windows.forms.f_38_1.cs)]\n [!code-vb[Classic Form.ActiveMdiChild Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.f_38_1.vb)]\n [!code-cpp[Classic Form.ActiveMdiChild Example#1](~/add/codesnippet/cpp/p-system.windows.forms.f_38_1.cpp)]"
  syntax:
    content: public System.Windows.Forms.Form ActiveMdiChild { get; }
    return:
      type: System.Windows.Forms.Form
      description: "반환 된 <xref href=&quot;System.Windows.Forms.Form&quot;> </xref> 현재 활성 MDI 자식 창을 나타내는 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 현재 자식 창이 없는 경우."
  overload: System.Windows.Forms.Form.ActiveMdiChild*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.AddOwnedForm(System.Windows.Forms.Form)
  id: AddOwnedForm(System.Windows.Forms.Form)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: AddOwnedForm(Form)
  nameWithType: Form.AddOwnedForm(Form)
  fullName: System.Windows.Forms.Form.AddOwnedForm(Form)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "이 폼에 소유 된 폼을 추가합니다."
  remarks: "소유자 폼에 할당 된 상태를 유지 될 때까지 소유는 <xref:System.Windows.Forms.Form.RemoveOwnedForm%2A>메서드를 호출 합니다.</xref:System.Windows.Forms.Form.RemoveOwnedForm%2A> 설정 하 여 다른가 소유 하는 폼을 만들 수도 있습니다는 <xref:System.Windows.Forms.Form.Owner%2A>소유자 폼에 대 한 참조를 사용 하 여 속성.</xref:System.Windows.Forms.Form.Owner%2A>       폼을 다른 폼에서 소유 하는 경우 종료 되었거나 소유자 양식으로 숨겨집니다. 예를 들어 라는 폼 `Form2` 이라는 폼에서 소유 하는 `Form1`합니다. 경우 `Form1` 닫히거나을 최소화 하 고 `Form2` 도 닫히거나 숨겨집니다. 소유 된 폼의 소유자 폼 뒤 표시 되지 됩니다. 찾기 등의 windows에 대 한 소유 된 폼을 사용할 수 있으며 소유자 폼을 선택한 경우 소유자 폼 뒤 표시 되지 않아야 하는 창과 바꿀 수 있습니다.      > [!NOTE] >이 속성은 현재 열려 있는 MDI 자식 폼을 제외 하 고 표시 되는 모든 폼 폼이 (mdi 다중) 다중 문서 인터페이스 부모 폼을 반환 합니다. MDI 부모 폼에서 열려 있는 MDI 자식 폼을 가져오려면는 <xref:System.Windows.Forms.Form.MdiChildren%2A>속성.</xref:System.Windows.Forms.Form.MdiChildren%2A>"
  example:
  - "The following code example demonstrates how to use the AddOwnedForm method to display a form as an owned form of another form. Once the owned form is shown, you can minimize its owner form and the owned form will minimize with it. The example requires that the code in the example is called from another event or method of a form.  \n  \n [!code-cs[Form.AddOwnedForm#1](~/add/codesnippet/csharp/m-system.windows.forms.f_3_1.cs)]\n [!code-cpp[Form.AddOwnedForm#1](~/add/codesnippet/cpp/m-system.windows.forms.f_3_1.cpp)]\n [!code-vb[Form.AddOwnedForm#1](~/add/codesnippet/visualbasic/m-system.windows.forms.f_3_1.vb)]"
  syntax:
    content: public void AddOwnedForm (System.Windows.Forms.Form ownedForm);
    parameters:
    - id: ownedForm
      type: System.Windows.Forms.Form
      description: "<xref href=&quot;System.Windows.Forms.Form&quot;> </xref> 이 폼을 소유할 합니다."
  overload: System.Windows.Forms.Form.AddOwnedForm*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.AdjustFormScrollbars(System.Boolean)
  id: AdjustFormScrollbars(System.Boolean)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: AdjustFormScrollbars(Boolean)
  nameWithType: Form.AdjustFormScrollbars(Boolean)
  fullName: System.Windows.Forms.Form.AdjustFormScrollbars(Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "현재 컨트롤 위치에 따라 컨테이너 및 현재 선택 된 컨트롤의 스크롤 막대를 조정 합니다."
  syntax:
    content: protected override void AdjustFormScrollbars (bool displayScrollbars);
    parameters:
    - id: displayScrollbars
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>스크롤 막대를 표시 하려면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.Form.AdjustFormScrollbars*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.AllowTransparency
  id: AllowTransparency
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: AllowTransparency
  nameWithType: Form.AllowTransparency
  fullName: System.Windows.Forms.Form.AllowTransparency
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "폼의 불투명도 조정할 수 있는지 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "이 속성은으로 자동 설정 `true` 경우는 `Opacity` 변경 됩니다. 폼의 불투명도 사용 하 여 설정 된 경우는 `Opacity` 속성 폼에 폼에서 개체 계층화 됩니다. AllowTransparency 속성을 설정 하는 경우 `false` 폼 폼의 표시 성능을 향상 하는 계층화 된 모드에 있지 않게 됩니다."
  syntax:
    content: public bool AllowTransparency { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>폼의 불투명도 변경할 수 있으면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.Form.AllowTransparency*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.ApplyAutoScaling
  id: ApplyAutoScaling
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: ApplyAutoScaling()
  nameWithType: Form.ApplyAutoScaling()
  fullName: System.Windows.Forms.Form.ApplyAutoScaling()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "현재 값에 따라 폼의 크기를 조정는 <xref:System.Windows.Forms.Form.AutoScaleBaseSize*>속성과 현재 글꼴의 크기입니다.</xref:System.Windows.Forms.Form.AutoScaleBaseSize*>"
  remarks: "값을 사용 하 여 폼 크기를 결정 하는이 메서드는 <xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A>속성 및 <xref:System.Windows.Forms.Form.Size%2A>에서 반환 된 값은 <xref:System.Windows.Forms.Form.GetAutoScaleSize%2A>메서드.</xref:System.Windows.Forms.Form.GetAutoScaleSize%2A> </xref:System.Windows.Forms.Form.Size%2A> </xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A>"
  syntax:
    content: protected void ApplyAutoScaling ();
    parameters: []
  overload: System.Windows.Forms.Form.ApplyAutoScaling*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.AutoScale
  id: AutoScale
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: AutoScale
  nameWithType: Form.AutoScale
  fullName: System.Windows.Forms.Form.AutoScale
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "또는 폼 폼에 사용 되는 글꼴의 높이 맞게 크기 조정 되는지를 나타내는 값을 설정 가져오고 해당 컨트롤의 크기를 조정 합니다."
  remarks: "> [!IMPORTANT]> 자동 크기 조정 사용 되지 않으며 이전 버전과 호환성을 위해 유지 되었습니다. 사용 되는 대체 항목은 <xref:System.Windows.Forms.ContainerControl.AutoScaleMode%2A?displayProperty=fullName>.</xref:System.Windows.Forms.ContainerControl.AutoScaleMode%2A?displayProperty=fullName> 자동 크기 조정 하는 방법에 대 한 자세한 내용은 참조 [Windows Forms의 자동 크기 조정을](~/add/includes/ajax-current-ext-md.md)합니다.       이 속성을 사용 하 여 폼 및 글꼴 변경 내용에 따라 자동으로 조정 하도록 컨트롤입니다. 이 글꼴의 크기가 달라질 응용 프로그램 또는 Windows에서 사용 하기 위해 지정 된 언어에 따라 유용할 수 있습니다.       눈금을 사용 하 여 폼이 자동 크기를 가져올 수는 <xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A>속성.</xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A> 크기를 결정 하려면 폼 자동으로 조정 기반으로 사용 하 여 특정 글꼴는 <xref:System.Windows.Forms.Form.GetAutoScaleSize%2A>메서드.</xref:System.Windows.Forms.Form.GetAutoScaleSize%2A>"
  syntax:
    content: public bool AutoScale { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>폼의 및 해당 컨트롤이 폼에 사용 된 현재 글꼴에 따라 자동으로 크기 조정 됩니다 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.Form.AutoScale*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.AutoScaleBaseSize
  id: AutoScaleBaseSize
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: AutoScaleBaseSize
  nameWithType: Form.AutoScaleBaseSize
  fullName: System.Windows.Forms.Form.AutoScaleBaseSize
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "폼의 조정을 위해 사용 되는 기본 크기를 가져오거나 설정 합니다."
  remarks: "> [!IMPORTANT]>이 멤버의 이전 버전과 호환성을 위해 유지 합니다. 자동 크기 조정 하는 방법에 대 한 자세한 내용은 참조 [Windows Forms의 자동 크기 조정을](~/add/includes/ajax-current-ext-md.md)합니다.       폼에 대 한 배율 인수를 계산 하 AutoScaleBaseSize 속성의 값은 폼이 표시 시 사용 됩니다. 자동 크기 조정 기본 크기는 폼에서 사용를 기반으로 비교 하는 시스템의 글꼴 크기에 대 한 자동 크기 조정을 사용 되는 경우 폼의 크기 조정을를 결정 하기. 크기를 결정 하려면 폼 자동으로 조정 기반으로 사용 하 여 특정 글꼴는 <xref:System.Windows.Forms.Form.GetAutoScaleSize%2A>메서드.</xref:System.Windows.Forms.Form.GetAutoScaleSize%2A>      > [!NOTE] > 양식을 처음 만들어질 때이 속성의 값이 사용 됩니다. 속성이 설정 되어 변경할 수 없습니다."
  syntax:
    content: public virtual System.Drawing.Size AutoScaleBaseSize { get; set; }
    return:
      type: System.Drawing.Size
      description: "A <xref href=&quot;System.Drawing.Size&quot;> </xref> 크기 조정을 위해이 양식을 사용 하는 기본 크기를 나타내는입니다."
  overload: System.Windows.Forms.Form.AutoScaleBaseSize*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.AutoScroll
  id: AutoScroll
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: AutoScroll
  nameWithType: Form.AutoScroll
  fullName: System.Windows.Forms.Form.AutoScroll
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "폼에서 자동 스크롤 기능을 사용할 수 있는지 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "이 속성은로 설정 하는 경우 `true`, 컨트롤이 폼의 클라이언트 영역 외부에 있는 경우 스크롤 막대가 폼에 표시 됩니다. 또한 자동 스크롤에 있으면 폼의 클라이언트 영역 자동으로 스크롤됩니다 입력된 포커스가 있는 컨트롤을 표시 되도록 합니다.       사용자가 자신의 비디오 해상도 설정을 낮은 해상도로 설정 된 경우 컨트롤을 볼 수 있는 기능을 손실 하지 못하도록 하려면이 속성을 사용할 수 있습니다."
  example:
  - "The following code example demonstrates how to use the AutoScroll property to enable the display of controls that are outsize the client area of a form. The example creates a new form and adds a <xref:System.Windows.Forms.Button> control to the form. The <xref:System.Windows.Forms.Button> control is positioned outsize the client area of the new form. The AutoScroll property is set to true to display scroll bars on the form to enable the user to scroll to the control. This example requires that the method defined in this example is called from another form in an event handler or other method.  \n  \n [!code-vb[Form.AutoScroll#1](~/add/codesnippet/visualbasic/p-system.windows.forms.f_28_1.vb)]\n [!code-cpp[Form.AutoScroll#1](~/add/codesnippet/cpp/p-system.windows.forms.f_28_1.cpp)]\n [!code-cs[Form.AutoScroll#1](~/add/codesnippet/csharp/p-system.windows.forms.f_28_1.cs)]"
  syntax:
    content: public override bool AutoScroll { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>폼에서 자동 스크롤 기능을 사용 하도록 설정 하려면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.Form.AutoScroll*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.AutoSize
  id: AutoSize
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: AutoSize
  nameWithType: Form.AutoSize
  fullName: System.Windows.Forms.Form.AutoSize
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "<xref:System.Windows.Forms.Form.AutoSizeMode*>.</xref:System.Windows.Forms.Form.AutoSizeMode*> 의 설정에 따라 폼의 크기 조정"
  remarks: "AutoSize 내용에 맞게 크기를 조정할 수 있는 폼을 사용 합니다.       Visual Studio 폼 디자이너에서 자동 크기 조정 값에 관계 없이 자동으로 크기가 조정 되지 않습니다는 양식 및 <xref:System.Windows.Forms.Form.AutoSizeMode%2A>속성.</xref:System.Windows.Forms.Form.AutoSizeMode%2A> 폼 올바르게 크기 조정에서 이러한 두 속성의 값에 따라 런타임에 합니다. 반대로, 사용자 지정 <xref:System.Windows.Forms.UserControl>자동으로 디자인 타임 및 런타임 시 크기 조정.</xref:System.Windows.Forms.UserControl>       AutoSize를 사용 하는 경우는 <xref:System.Windows.Forms.Control.MinimumSize%2A>및 <xref:System.Windows.Forms.Control.MaximumSize%2A>의 현재 값을 제외한 속성은 적용 된 <xref:System.Windows.Forms.Control.Size%2A>속성은 무시 됩니다.</xref:System.Windows.Forms.Control.Size%2A> </xref:System.Windows.Forms.Control.MaximumSize%2A> </xref:System.Windows.Forms.Control.MinimumSize%2A> AutoSize를 사용 하 고 <xref:System.Windows.Forms.Form.AutoSizeMode%2A>렌더링는 <xref:System.Windows.Forms.Form.AutoScroll%2A>속성 폼 보기에서 포함된 된 컨트롤 숨기기을 축소할 수 없으므로 없기 때문에 불필요 합니다.</xref:System.Windows.Forms.Form.AutoScroll%2A> </xref:System.Windows.Forms.Form.AutoSizeMode%2A>       참조는 <xref:System.Windows.Forms.AutoSizeMode>폼 AutoSize가 동작에 대 한 내용은 열거형 `true`.</xref:System.Windows.Forms.AutoSizeMode>"
  example:
  - "The following code example shows a form created using code that automatically resizes to fit its contents. When run, the form displays a <xref:System.Windows.Forms.Label>, a <xref:System.Windows.Forms.TextBox> for entering a URL, and a <xref:System.Windows.Forms.Button> for displaying that URL inside of the user's default Web browser. The code example uses a <xref:System.Windows.Forms.FlowLayoutPanel> to lay out the contained controls one after the other. It also sets the <xref:System.Windows.Forms.Control.AutoSize%2A> and <xref:System.Windows.Forms.AutoSizeMode> to grow and shrink to fit the contents of its form.  \n  \n [!code-vb[Form.AutoSize#1](~/add/codesnippet/visualbasic/AutoSizeProjectVB/Form1.vb#1)]\n [!code-cs[Form.AutoSize#1](~/add/codesnippet/csharp/AutoSizeProject/Form1.cs#1)]"
  syntax:
    content: public override bool AutoSize { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>폼 크기가 자동으로 조정 됩니다. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 것 수동으로 크기를 조정 해야 하는 경우."
  overload: System.Windows.Forms.Form.AutoSize*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.AutoSizeChanged
  id: AutoSizeChanged
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: AutoSizeChanged
  nameWithType: Form.AutoSizeChanged
  fullName: System.Windows.Forms.Form.AutoSizeChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 경우는 <xref:System.Windows.Forms.Form.AutoSize*>속성 변경.</xref:System.Windows.Forms.Form.AutoSize*>"
  syntax:
    content: public event EventHandler AutoSizeChanged;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.AutoSizeMode
  id: AutoSizeMode
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: AutoSizeMode
  nameWithType: Form.AutoSizeMode
  fullName: System.Windows.Forms.Form.AutoSizeMode
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "기준인 폼 크기를 자동 조정 모드를 가져오거나 설정 합니다."
  remarks: "AutoSizeMode 속성을 새 값으로 설정 하면 폼에 다시 배치 합니다.       폼의 값에 관계 없이 Visual Studio 폼 디자이너에서 자동으로 크기가 조정 되지 않습니다는 <xref:System.Windows.Forms.Form.AutoSize%2A>및 AutoSizeMode 속성.</xref:System.Windows.Forms.Form.AutoSize%2A> 폼 올바르게 크기 조정에서 이러한 두 속성의 값에 따라 런타임에 합니다. 반대로, 사용자 지정 <xref:System.Windows.Forms.UserControl>자동으로 디자인 타임 및 런타임 시 크기 조정.</xref:System.Windows.Forms.UserControl>"
  example:
  - "The following code example shows a form created using code that automatically resizes to fit its contents. When run, the form displaya a <xref:System.Windows.Forms.Label>, a <xref:System.Windows.Forms.TextBox> for entering a URL, and a <xref:System.Windows.Forms.Button> for displaying that URL inside of the user's default Web browser. The code example uses a <xref:System.Windows.Forms.FlowLayoutPanel> to lay out the contained controls one after the other. It also sets the <xref:System.Windows.Forms.Control.AutoSize%2A> and <xref:System.Windows.Forms.AutoSizeMode> to grow and shrink to fit the contents of its form.  \n  \n [!code-vb[Form.AutoSize#1](~/add/codesnippet/visualbasic/AutoSizeProjectVB/Form1.vb#1)]\n [!code-cs[Form.AutoSize#1](~/add/codesnippet/csharp/AutoSizeProject/Form1.cs#1)]"
  syntax:
    content: public System.Windows.Forms.AutoSizeMode AutoSizeMode { get; set; }
    return:
      type: System.Windows.Forms.AutoSizeMode
      description: "<xref href=&quot;System.Windows.Forms.AutoSizeMode&quot;> </xref> 열거형 값입니다. 기본값은 <xref href=&quot;System.Windows.Forms.AutoSizeMode&quot;> </xref>합니다."
  overload: System.Windows.Forms.Form.AutoSizeMode*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "값이 유효한 <xref href=&quot;System.Windows.Forms.AutoSizeMode&quot;> </xref> 값입니다."
  platform:
  - net462
- uid: System.Windows.Forms.Form.AutoValidate
  id: AutoValidate
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: AutoValidate
  nameWithType: Form.AutoValidate
  fullName: System.Windows.Forms.Form.AutoValidate
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "이 컨테이너에서 컨트롤은 자동으로 유효성을 검사 하는지 포커스가 변경 될 때를 나타내는 값을 가져오거나 설정 합니다."
  syntax:
    content: public override System.Windows.Forms.AutoValidate AutoValidate { get; set; }
    return:
      type: System.Windows.Forms.AutoValidate
      description: "<xref href=&quot;System.Windows.Forms.AutoValidate&quot;> </xref> 포커스 변경에 포함 된 컨트롤은 암시적으로 유효성 검사할지 여부를 나타내는 값을 열거 합니다. 기본값은 Inherit입니다."
  overload: System.Windows.Forms.Form.AutoValidate*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.AutoValidateChanged
  id: AutoValidateChanged
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: AutoValidateChanged
  nameWithType: Form.AutoValidateChanged
  fullName: System.Windows.Forms.Form.AutoValidateChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 경우는 <xref:System.Windows.Forms.Form.AutoValidate*>속성 변경.</xref:System.Windows.Forms.Form.AutoValidate*>"
  syntax:
    content: public event EventHandler AutoValidateChanged;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.BackColor
  id: BackColor
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: BackColor
  nameWithType: Form.BackColor
  fullName: System.Windows.Forms.Form.BackColor
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤에 대 한 배경색을 가져오거나 설정 합니다."
  syntax:
    content: public override System.Drawing.Color BackColor { get; set; }
    return:
      type: System.Drawing.Color
      description: "A <xref href=&quot;System.Drawing.Color&quot;> </xref> 컨트롤의 배경색을 나타내는입니다. 기본값은 값의는 <xref:System.Windows.Forms.Control.DefaultBackColor*>속성.</xref:System.Windows.Forms.Control.DefaultBackColor*>"
  overload: System.Windows.Forms.Form.BackColor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.CancelButton
  id: CancelButton
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: CancelButton
  nameWithType: Form.CancelButton
  fullName: System.Windows.Forms.Form.CancelButton
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "사용자가 ESC 키를 누를 때 클릭 되는 단추 컨트롤을 가져오거나 설정 합니다."
  remarks: "폼에 대 한 취소 단추에는 ESC 키를 누를 때마다 클릭 되 단추 컨트롤입니다. 이 속성에 할당 된 단추 이어야 합니다는 <xref:System.Windows.Forms.IButtonControl>또는 현재 양식에 컨테이너 내에 있는 현재 양식에 인.</xref:System.Windows.Forms.IButtonControl>       이 속성을 사용 하면 사용자가 응용 프로그램에서 ESC 키를 누를 때 발생 하는 기본 동작을 지정할 수 있습니다. 수동으로 마우스로 취소 단추를 클릭 하지 않고 변경 내용을 커밋하지 않고 창을 닫으려면 ESC 키를 누르기만 허용 하 여 간단한 양식을 빠르게 탐색할 수 있도록 하려면이 속성을 사용할 수 있습니다.       폼에서 다른 컨트롤 ESC 키를 가로채 면 CancelButton 작동 하지 않을 수 있습니다. 예를 들어 한 <xref:System.Windows.Forms.ComboBox>폼에 열려 ESC 닫힙니다는 <xref:System.Windows.Forms.ComboBox>폼을 종료 하는 대신.</xref:System.Windows.Forms.ComboBox> </xref:System.Windows.Forms.ComboBox>       <xref:System.Windows.Forms.IButtonControl>CancelButton에 할당 된 개체는 폼에 표시 되어야 합니다. 그렇지 않으면 ESC 키를 누르면 아무런 효과가 없습니다.</xref:System.Windows.Forms.IButtonControl>"
  example:
  - "The following code example creates a new instance of a <xref:System.Windows.Forms.Form> and calls the <xref:System.Windows.Forms.Form.ShowDialog%2A> method to display the form as a dialog box. The example sets the <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.AcceptButton%2A>, CancelButton, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, <xref:System.Windows.Forms.Form.MaximizeBox%2A>, and <xref:System.Windows.Forms.Form.StartPosition%2A> properties to change the appearance and functionality of the form to a dialog box. The example also uses the <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> method of the form's <xref:System.Windows.Forms.Control.Controls%2A> collection to add two <xref:System.Windows.Forms.Button> controls. The example uses the <xref:System.Windows.Forms.Form.HelpButton%2A> property to display a help button in the caption bar of the dialog box.  \n  \n [!code-cpp[Classic Form.AcceptButton Example#1](~/add/codesnippet/cpp/p-system.windows.forms.f_17_1.cpp)]\n [!code-cs[Classic Form.AcceptButton Example#1](~/add/codesnippet/csharp/p-system.windows.forms.f_17_1.cs)]\n [!code-vb[Classic Form.AcceptButton Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.f_17_1.vb)]"
  syntax:
    content: public System.Windows.Forms.IButtonControl CancelButton { get; set; }
    return:
      type: System.Windows.Forms.IButtonControl
      description: "<xref href=&quot;System.Windows.Forms.IButtonControl&quot;> </xref> 폼에 대 한 취소 단추를 나타내는입니다."
  overload: System.Windows.Forms.Form.CancelButton*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.CenterToParent
  id: CenterToParent
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: CenterToParent()
  nameWithType: Form.CenterToParent()
  fullName: System.Windows.Forms.Form.CenterToParent()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "부모 폼의 경계 안에서 폼의 위치를 가운데로 맞춥니다."
  remarks: "사용자 코드에서 직접 CenterToParent 메서드를 호출 하지 마십시오. 대신, <xref:System.Windows.Forms.Form.StartPosition%2A> <xref:System.Windows.Forms.FormStartPosition>.</xref:System.Windows.Forms.FormStartPosition> 속성</xref:System.Windows.Forms.Form.StartPosition%2A> 설정       양식 또는 대화 이면 최상위 CenterToParent 가운데 화면이 나 바탕 화면에 대해 폼을 배치 합니다."
  syntax:
    content: protected void CenterToParent ();
    parameters: []
  overload: System.Windows.Forms.Form.CenterToParent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.CenterToScreen
  id: CenterToScreen
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: CenterToScreen()
  nameWithType: Form.CenterToScreen()
  fullName: System.Windows.Forms.Form.CenterToScreen()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "현재 화면에 폼 가운데 맞춤합니다."
  remarks: "이 사용자 코드에서 직접 호출 하지 마십시오. 대신, <xref:System.Windows.Forms.Form.StartPosition%2A> <xref:System.Windows.Forms.FormStartPosition>.</xref:System.Windows.Forms.FormStartPosition> 속성</xref:System.Windows.Forms.Form.StartPosition%2A> 설정       CenterToScreen 메서드 다음과 같은 우선 순위를 사용 하 여 폼 가운데 하는 데 사용 하 여 화면을 결정 합니다. 1.  <xref:System.Windows.Forms.Form.Owner%2A>폼의 속성입니다.</xref:System.Windows.Forms.Form.Owner%2A>      2.  폼의 HWND 소유자입니다.      3.  현재 마우스 커서에 있는 화면입니다."
  syntax:
    content: protected void CenterToScreen ();
    parameters: []
  overload: System.Windows.Forms.Form.CenterToScreen*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.ClientSize
  id: ClientSize
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: ClientSize
  nameWithType: Form.ClientSize
  fullName: System.Windows.Forms.Form.ClientSize
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "폼의 클라이언트 영역 크기를 가져오거나 설정 합니다."
  remarks: "폼의 클라이언트 영역 크기에는 테두리 및 제목 표시줄을 제외한 폼의 크기가입니다. 폼의 클라이언트 영역에는 컨트롤을 배치할 수 있는 폼 내에서 영역이입니다. 이 속성을 사용 하 여 폼의 컨트롤을 배치 하 고 크기를 조정할 또는 그래픽 작업을 수행할 때 적절 한 크기를 가져올 수 있습니다. 전체 폼의 크기를 가져오려면 사용 <xref:System.Windows.Forms.Form.Size%2A>속성 또는 개별 속성 <xref:System.Windows.Forms.Control.Height%2A>및 <xref:System.Windows.Forms.Control.Width%2A>.</xref:System.Windows.Forms.Control.Width%2A> </xref:System.Windows.Forms.Control.Height%2A> 사용</xref:System.Windows.Forms.Form.Size%2A>      > [!NOTE] > 현재 응용 프로그램 설정을 사용 하 여이 속성에 바인딩할 수 없습니다. 응용 프로그램 설정에 대 한 자세한 내용은 참조 하십시오. [응용 프로그램 설정 개요](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example creates an event handler for the <xref:System.Windows.Forms.Control.Resize> event of a form. The event handler uses the ClientSize property of the form to make a <xref:System.Windows.Forms.Button> control named `button1` fill the entire client area of the form.  \n  \n [!code-cs[Classic Form.ClientSize Example#1](~/add/codesnippet/csharp/p-system.windows.forms.f_48_1.cs)]\n [!code-cpp[Classic Form.ClientSize Example#1](~/add/codesnippet/cpp/p-system.windows.forms.f_48_1.cpp)]\n [!code-vb[Classic Form.ClientSize Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.f_48_1.vb)]"
  syntax:
    content: public System.Drawing.Size ClientSize { get; set; }
    return:
      type: System.Drawing.Size
      description: "A <xref href=&quot;System.Drawing.Size&quot;> </xref> 폼의 클라이언트 영역 크기를 나타내는입니다."
  overload: System.Windows.Forms.Form.ClientSize*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.Close
  id: Close
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: Close()
  nameWithType: Form.Close()
  fullName: System.Windows.Forms.Form.Close()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "폼을 닫습니다."
  remarks: "폼이 닫힐 때 개체 내에서 생성 된 모든 리소스 닫혀 있고 폼이 삭제 됩니다. 처리 하 여 런타임에 폼의 닫는 방지할 수 있습니다는 <xref:System.Windows.Forms.Form.Closing>이벤트와 설정 된 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>속성의는 <xref:System.ComponentModel.CancelEventArgs>이벤트 처리기에 매개 변수로 전달 합니다.</xref:System.ComponentModel.CancelEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A> </xref:System.Windows.Forms.Form.Closing> 닫으려는 폼은 응용 프로그램의 시작 폼을 응용 프로그램 종료 됩니다.       폼에서 삭제 되지 않은 두 가지 경우 `Close` 는 경우는 (mdi 다중) 다중 문서 인터페이스 응용 프로그램의 일부인 (1) 및 폼은 보이지 않습니다. (2)을 표시 한 양식 사용 하 여 및 <xref:System.Windows.Forms.Form.ShowDialog%2A>.</xref:System.Windows.Forms.Form.ShowDialog%2A> 이러한 경우에 호출 해야 합니다 <xref:System.Windows.Forms.Form.Dispose%2A>가비지 수집에 대 한 폼의 컨트롤을 모두 표시 하도록 수동으로.</xref:System.Windows.Forms.Form.Dispose%2A>      > [!NOTE] > 때 종결 메서드가 호출 되는 <xref:System.Windows.Forms.Form>모덜리스 창으로 표시를 호출할 수 없습니다는 <xref:System.Windows.Forms.Control.Show%2A>메서드가 폼의 리소스가 이미 해제 되었으므로 때문에 폼을 표시 합니다.</xref:System.Windows.Forms.Control.Show%2A> </xref:System.Windows.Forms.Form> 폼을 숨기고 표시를 사용 하 여 확인 된 <xref:System.Windows.Forms.Control.Hide%2A?displayProperty=fullName>메서드.</xref:System.Windows.Forms.Control.Hide%2A?displayProperty=fullName>      > [!CAUTION] > 이전에 [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] 2.0는 <xref:System.Windows.Forms.Form.Closed?displayProperty=fullName>및 <xref:System.Windows.Forms.Form.Closing?displayProperty=fullName>이벤트는 실행 될 때 발생 하는 <xref:System.Windows.Forms.Application.Exit%2A?displayProperty=fullName>메서드를 호출 응용 프로그램을 종료 하.</xref:System.Windows.Forms.Application.Exit%2A?displayProperty=fullName> </xref:System.Windows.Forms.Form.Closing?displayProperty=fullName> </xref:System.Windows.Forms.Form.Closed?displayProperty=fullName> 호출 하기 전에 개별적으로 열려 있는 각 폼에 대 한 Close 메서드를 호출 해야 유효성 검사 코드를 실행 해야 하는 이러한 이벤트 중 하나에 있으면는 <xref:System.Windows.Forms.Application.Exit%2A>메서드.</xref:System.Windows.Forms.Application.Exit%2A>"
  syntax:
    content: public void Close ();
    parameters: []
  overload: System.Windows.Forms.Form.Close*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "폼에 대 한 핸들 만들어지는 동안 닫혔습니다."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "이 메서드를 호출할 수 없습니다는 <xref href=&quot;System.Windows.Forms.Form.Activated&quot;> </xref> 이벤트 때 <xref:System.Windows.Forms.Form.WindowState*>로 설정 된 <xref href=&quot;System.Windows.Forms.FormWindowState&quot;> </xref>.</xref:System.Windows.Forms.Form.WindowState*>"
  platform:
  - net462
- uid: System.Windows.Forms.Form.Closed
  id: Closed
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: Closed
  nameWithType: Form.Closed
  fullName: System.Windows.Forms.Form.Closed
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "폼을 닫을 때 발생 합니다."
  remarks: "> [!CAUTION]> 고 Closed 이벤트는.NET Framework 버전 2.0;에서 사용 되지 않습니다. 사용 하 여는 <xref:System.Windows.Forms.Form.FormClosed>이벤트 대신.</xref:System.Windows.Forms.Form.FormClosed>       이 이벤트는 사용자 또는 폼이 닫힌 후 발생는 <xref:System.Windows.Forms.Form.Close%2A>형식의 메서드에.</xref:System.Windows.Forms.Form.Close%2A> 폼을 닫는 하지 않도록 하려면 처리는 <xref:System.Windows.Forms.Form.Closing>이벤트 집합과 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>속성은 <xref:System.ComponentModel.CancelEventArgs>이벤트 처리기에 전달 된 `true`.</xref:System.ComponentModel.CancelEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A> </xref:System.Windows.Forms.Form.Closing>       폼에서 사용 하는 리소스를 확보 하는 등의 작업을 수행 하 고 폼에 입력 한 정보를 저장 하 또는 부모 폼을 업데이트 하려면이 이벤트를 사용할 수 있습니다.      > [!CAUTION] > The 닫혀 및 <xref:System.Windows.Forms.Form.Closing?displayProperty=fullName>이벤트는 실행 될 때 발생 하는 <xref:System.Windows.Forms.Application.Exit%2A?displayProperty=fullName>메서드를 호출 응용 프로그램을 종료 하.</xref:System.Windows.Forms.Application.Exit%2A?displayProperty=fullName> </xref:System.Windows.Forms.Form.Closing?displayProperty=fullName> 유효성 검사 코드를 실행 해야 하는 이러한 이벤트 중 하나에 있으면 호출 해야는 <xref:System.Windows.Forms.Form.Close%2A?displayProperty=fullName>호출 하기 전에 개별적으로 열려 있는 각 폼에 대 한 메서드는 <xref:System.Windows.Forms.Application.Exit%2A>메서드.</xref:System.Windows.Forms.Application.Exit%2A> </xref:System.Windows.Forms.Form.Close%2A?displayProperty=fullName>       폼이 MDI 부모 폼의 <xref:System.Windows.Forms.Form.Closing>모든 MDI 자식 폼의 MDI 부모 폼의 하기 전에 발생 <xref:System.Windows.Forms.Form.Closing>이벤트가 발생 합니다.</xref:System.Windows.Forms.Form.Closing> </xref:System.Windows.Forms.Form.Closing> 또한 MDI 부모 폼의 고 Closed 이벤트 발생 하기 전에 모든 MDI 자식 폼의 종료 된 이벤트 발생 합니다.       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Forms.Form.SetDesktopLocation%2A>, Closed, <xref:System.Windows.Forms.Form.Load>, <xref:System.Windows.Forms.Form.Activated>, and <xref:System.Windows.Forms.Form.Activate%2A> members. To run the example, paste the following code in a form called `Form1` containing a <xref:System.Windows.Forms.Button> called `Button1` and two <xref:System.Windows.Forms.Label> controls called `Label1` and `Label2`.  \n  \n [!code-cs[System.Windows.Forms.FormsActivate#1](~/add/codesnippet/csharp/e-system.windows.forms.f_6_1.cs)]\n [!code-vb[System.Windows.Forms.FormsActivate#1](~/add/codesnippet/visualbasic/e-system.windows.forms.f_6_1.vb)]\n [!code-cpp[System.Windows.Forms.FormsActivate#1](~/add/codesnippet/cpp/e-system.windows.forms.f_6_1.cpp)]"
  syntax:
    content: public event EventHandler Closed;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.Closing
  id: Closing
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: Closing
  nameWithType: Form.Closing
  fullName: System.Windows.Forms.Form.Closing
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "폼을 닫을 때 발생 합니다."
  remarks: "> [!CAUTION]> 고 Closing 이벤트는.NET Framework 버전 2.0;에서 사용 되지 않습니다. 사용 하 여는 <xref:System.Windows.Forms.Form.FormClosing>이벤트 대신.</xref:System.Windows.Forms.Form.FormClosing>       Closing 이벤트에는 폼을 닫을 때 발생 합니다. 폼이 닫힐 때 개체 내에서 만들어진 모든 리소스가 해제 되 고 폼이 삭제 됩니다. 이 이벤트를 취소 하면 폼 열린 상태로 유지 됩니다. 폼의 클로저를 취소 하려면는 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>의 속성은 <xref:System.ComponentModel.CancelEventArgs>이벤트 처리기에 전달 된 `true`.</xref:System.ComponentModel.CancelEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A>       폼을 모달 대화 상자로 표시 되 면 클릭 하 고 **닫기** 단추 (x 폼의 오른쪽 위 모서리에 있는 단추)를 사용 하면 양식을 숨길 및 <xref:System.Windows.Forms.Form.DialogResult%2A>속성으로 설정 됩니다 `DialogResult.Cancel`.</xref:System.Windows.Forms.Form.DialogResult%2A> 에 할당 된 값을 재정의할 수 있습니다는 <xref:System.Windows.Forms.Form.DialogResult%2A>속성을 클릭할 때는 **닫기** 설정 하 여 단추는 <xref:System.Windows.Forms.Form.DialogResult%2A>속성 폼의 닫는 이벤트에 대 한 이벤트 처리기에서.</xref:System.Windows.Forms.Form.DialogResult%2A> </xref:System.Windows.Forms.Form.DialogResult%2A>      > [!NOTE] > 때는 <xref:System.Windows.Forms.Form.Close%2A>메서드가 호출 되는 <xref:System.Windows.Forms.Form>모덜리스 창으로 표시를 호출할 수 없습니다는 <xref:System.Windows.Forms.Control.Show%2A>메서드가 폼의 리소스가 이미 해제 되었으므로 때문에 폼을 표시 합니다.</xref:System.Windows.Forms.Control.Show%2A> </xref:System.Windows.Forms.Form> </xref:System.Windows.Forms.Form.Close%2A> 폼을 숨기고 표시를 사용 하 여 확인 된 <xref:System.Windows.Forms.Control.Hide%2A?displayProperty=fullName>메서드.</xref:System.Windows.Forms.Control.Hide%2A?displayProperty=fullName>      > [!CAUTION] >는 <xref:System.Windows.Forms.Form.Closed?displayProperty=fullName>와 이벤트를 닫는 경우 발생 하지 않습니다는 <xref:System.Windows.Forms.Application.Exit%2A?displayProperty=fullName>메서드는 응용 프로그램을 종료 합니다.</xref:System.Windows.Forms.Application.Exit%2A?displayProperty=fullName> </xref:System.Windows.Forms.Form.Closed?displayProperty=fullName> 유효성 검사 코드를 실행 해야 하는 이러한 이벤트 중 하나에 있으면 호출 해야는 <xref:System.Windows.Forms.Form.Close%2A?displayProperty=fullName>호출 하기 전에 개별적으로 열려 있는 각 폼에 대 한 메서드는 <xref:System.Windows.Forms.Application.Exit%2A>메서드.</xref:System.Windows.Forms.Application.Exit%2A> </xref:System.Windows.Forms.Form.Close%2A?displayProperty=fullName>       폼이 MDI 부모 폼을 MDI 부모 폼의 닫는 이벤트가 발생 하기 전에 모든 MDI 자식 폼의 닫는 이벤트가 발생 합니다. 또한는 <xref:System.Windows.Forms.Form.Closed>모든 MDI 자식 폼의 발생 하기 전에 <xref:System.Windows.Forms.Form.Closed>MDI 부모 폼의 이벤트가 발생 합니다.</xref:System.Windows.Forms.Form.Closed> </xref:System.Windows.Forms.Form.Closed> MDI 자식 폼의 닫는 이벤트를 취소 해도 MDI 부모 폼의 닫는 이벤트 발생 수 있습니다. 그러나로 설정 됩니다 이벤트를 취소 `true` 는 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>의 속성은 <xref:System.ComponentModel.CancelEventArgs>부모 폼에 매개 변수로 전달 되는.</xref:System.ComponentModel.CancelEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 모든 MDI 부모 및 자식 폼을 강제로 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>속성을 `false` 는 mdi 부모 폼.</xref:System.ComponentModel.CancelEventArgs.Cancel%2A>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example uses Closing to test if the text in a <xref:System.Windows.Forms.TextBox> has changed. If it has, the user is asked whether to save the changes to a file.  \n  \n [!code-cs[Form.Closing#1](~/add/codesnippet/csharp/e-system.windows.forms.f_10_1.cs)]\n [!code-vb[Form.Closing#1](~/add/codesnippet/visualbasic/e-system.windows.forms.f_10_1.vb)]\n [!code-cpp[Form.Closing#1](~/add/codesnippet/cpp/e-system.windows.forms.f_10_1.cpp)]"
  syntax:
    content: public event System.ComponentModel.CancelEventHandler Closing;
    return:
      type: System.ComponentModel.CancelEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.ControlBox
  id: ControlBox
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: ControlBox
  nameWithType: Form.ControlBox
  fullName: System.Windows.Forms.Form.ControlBox
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "폼의 캡션 표시줄에 컨트롤 상자가 표시 되는지를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "ControlBox 속성이로 설정 된 경우 `true`, 캡션 표시줄의 왼쪽 위 모퉁이에 컨트롤 상자가 표시 됩니다. 컨트롤 상자가 시스템 메뉴에 액세스 하는 사용자 클릭할 수 있는입니다.       ControlBox을 설정 하면 `false`, 설정는 <xref:System.Windows.Forms.Form.Location%2A>속성을는 <xref:System.Windows.Forms.Form.Size%2A>속성 폼의 폼의 비클라이언트 영역 숨겨진 반영 하도록 업데이트 되지 것입니다.</xref:System.Windows.Forms.Form.Size%2A> </xref:System.Windows.Forms.Form.Location%2A> 이 문제를 해결 하려면 변경 하는 코드를 삽입는 <xref:System.Windows.Forms.Form.Location%2A>속성을는 <xref:System.Windows.Forms.Control.HandleCreated>이벤트.</xref:System.Windows.Forms.Control.HandleCreated> </xref:System.Windows.Forms.Form.Location%2A>      > [!NOTE] >로 설정 된 경우 `false`, ControlBox 속성은 생성 시 최대화 표시 되는 다중 문서 MDI (인터페이스) 자식 폼에는 영향을 주지 않습니다."
  example:
  - "The following code example uses the ControlBox, <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.MaximizeBox%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, and <xref:System.Windows.Forms.Form.StartPosition%2A> properties to create a form that does not have any border or caption box. The form created in this example could be used to create a splash screen for an application. The example requires that the example's method is defined in a form class and called when the form is being initialized.  \n  \n [!code-cs[Classic Form.ControlBox Example#1](~/add/codesnippet/csharp/p-system.windows.forms.f_6_1.cs)]\n [!code-cpp[Classic Form.ControlBox Example#1](~/add/codesnippet/cpp/p-system.windows.forms.f_6_1.cpp)]\n [!code-vb[Classic Form.ControlBox Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.f_6_1.vb)]"
  syntax:
    content: public bool ControlBox { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>폼의 왼쪽된 위 모퉁이에 컨트롤 상자가 표시 되는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.Form.ControlBox*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.CreateControlsInstance
  id: CreateControlsInstance
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: CreateControlsInstance()
  nameWithType: Form.CreateControlsInstance()
  fullName: System.Windows.Forms.Form.CreateControlsInstance()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤에 대 한 컨트롤 컬렉션의 새 인스턴스를 만듭니다."
  syntax:
    content: protected override System.Windows.Forms.Control.ControlCollection CreateControlsInstance ();
    parameters: []
    return:
      type: System.Windows.Forms.Control.ControlCollection
      description: "새 인스턴스 <xref:System.Windows.Forms.Control.ControlCollection>컨트롤에 할당 합니다.</xref:System.Windows.Forms.Control.ControlCollection>"
  overload: System.Windows.Forms.Form.CreateControlsInstance*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.CreateHandle
  id: CreateHandle
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: CreateHandle()
  nameWithType: Form.CreateHandle()
  fullName: System.Windows.Forms.Form.CreateHandle()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "폼에 대 한 핸들을 만듭니다. 파생된 클래스에서이 함수를 재정의 하는 경우의 기본 구현을 호출 해야 합니다."
  syntax:
    content: protected override void CreateHandle ();
    parameters: []
  overload: System.Windows.Forms.Form.CreateHandle*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "이 대 한 핸들 <xref href=&quot;System.Windows.Forms.Form&quot;> </xref> 이미 생성 되었습니다."
  platform:
  - net462
- uid: System.Windows.Forms.Form.CreateParams
  id: CreateParams
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: CreateParams
  nameWithType: Form.CreateParams
  fullName: System.Windows.Forms.Form.CreateParams
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤 핸들이 만들어지는 경우 필요한 작성 매개 변수를 가져옵니다."
  syntax:
    content: protected override System.Windows.Forms.CreateParams CreateParams { get; }
    return:
      type: System.Windows.Forms.CreateParams
      description: "A <xref href=&quot;System.Windows.Forms.CreateParams&quot;> </xref> 컨트롤에 대 한 핸들을 만들 때 필요한 작성 매개 변수를 포함 하는 합니다."
  overload: System.Windows.Forms.Form.CreateParams*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.Deactivate
  id: Deactivate
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: Deactivate
  nameWithType: Form.Deactivate
  fullName: System.Windows.Forms.Form.Deactivate
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "폼 포커스를 잃어 더 이상 활성 폼 때 발생 합니다."
  remarks: "비활성화 된 폼의 데이터로 업데이트 하는 응용 프로그램의 다른 창 등의 작업을 수행 하려면이 이벤트를 사용할 수 있습니다.       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the Deactivate event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`. Then ensure that the event handler is associated with the Deactivate event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#393](~/add/codesnippet/csharp/e-system.windows.forms.f_5_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#393](~/add/codesnippet/visualbasic/e-system.windows.forms.f_5_1.vb)]"
  syntax:
    content: public event EventHandler Deactivate;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.DefaultImeMode
  id: DefaultImeMode
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: DefaultImeMode
  nameWithType: Form.DefaultImeMode
  fullName: System.Windows.Forms.Form.DefaultImeMode
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤에서 지 원하는 기본 Ime (입력기) 모드를 가져옵니다."
  remarks: "입력된 (입력기)는 사용자가 표준 키보드를 사용 하 여 복잡 한 한글 등의 기호를 입력할 수 있는 프로그램입니다.       구현 되는 <xref:System.Windows.Forms.Form>클래스,이 속성은 항상 반환 된 <xref:System.Windows.Forms.ImeMode?displayProperty=fullName>값.</xref:System.Windows.Forms.ImeMode?displayProperty=fullName> </xref:System.Windows.Forms.Form> 이 속성의 값에 할당 되는 <xref:System.Windows.Forms.Control.ImeMode%2A?displayProperty=fullName>속성.</xref:System.Windows.Forms.Control.ImeMode%2A?displayProperty=fullName>"
  syntax:
    content: protected override System.Windows.Forms.ImeMode DefaultImeMode { get; }
    return:
      type: System.Windows.Forms.ImeMode
      description: "중 하나는 <xref href=&quot;System.Windows.Forms.ImeMode&quot;> </xref> 값입니다."
  overload: System.Windows.Forms.Form.DefaultImeMode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.DefaultSize
  id: DefaultSize
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: DefaultSize
  nameWithType: Form.DefaultSize
  fullName: System.Windows.Forms.Form.DefaultSize
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤의 기본 크기를 가져옵니다."
  syntax:
    content: protected override System.Drawing.Size DefaultSize { get; }
    return:
      type: System.Drawing.Size
      description: "기본 <xref href=&quot;System.Drawing.Size&quot;> </xref> 컨트롤의 합니다."
  overload: System.Windows.Forms.Form.DefaultSize*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.DefWndProc(System.Windows.Forms.Message@)
  id: DefWndProc(System.Windows.Forms.Message@)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: DefWndProc(Message)
  nameWithType: Form.DefWndProc(Message)
  fullName: System.Windows.Forms.Form.DefWndProc(Message)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "기본 창 프로시저에 지정된 된 메시지를 보냅니다."
  syntax:
    content: protected override void DefWndProc (ref System.Windows.Forms.Message m);
    parameters:
    - id: m
      type: System.Windows.Forms.Message
      description: "Windows <xref href=&quot;System.Windows.Forms.Message&quot;> </xref> 프로세스에 있습니다."
  overload: System.Windows.Forms.Form.DefWndProc*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.DesktopBounds
  id: DesktopBounds
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: DesktopBounds
  nameWithType: Form.DesktopBounds
  fullName: System.Windows.Forms.Form.DesktopBounds
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Windows 바탕 화면 크기와 폼의 위치를 가져오거나 설정 합니다."
  remarks: "데스크톱 좌표로 작업 표시줄을 제외 하는 화면에서의 작업 영역을 기반으로 합니다. 바탕 화면 좌표계는 픽셀 시작 합니다. 응용 프로그램이 다중 모니터 시스템에서 실행 되는 경우 폼의 좌표는 조합 된 데스크톱 좌표입니다.       이 속성은 크기와 다른 양식 또는 응용 프로그램을 기준으로 폼의 Windows 바탕 화면에서 위치를 사용할 수 있습니다."
  example:
  - "The following code example sets the size and position of a form so that the form is positioned 50 pixels from the left border of the desktop and 50 pixels from the top of the desktop. This example requires that the method is defined within a form class.  \n  \n [!code-cpp[Classic Form.DesktopBounds Example#1](~/add/codesnippet/cpp/p-system.windows.forms.f_4_1.cpp)]\n [!code-cs[Classic Form.DesktopBounds Example#1](~/add/codesnippet/csharp/p-system.windows.forms.f_4_1.cs)]\n [!code-vb[Classic Form.DesktopBounds Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.f_4_1.vb)]"
  syntax:
    content: public System.Drawing.Rectangle DesktopBounds { get; set; }
    return:
      type: System.Drawing.Rectangle
      description: "A <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 데스크톱 좌표를 사용 하 여 Windows 데스크톱에서 폼의 경계를 나타내는입니다."
  overload: System.Windows.Forms.Form.DesktopBounds*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.DesktopLocation
  id: DesktopLocation
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: DesktopLocation
  nameWithType: Form.DesktopLocation
  fullName: System.Windows.Forms.Form.DesktopLocation
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Windows 데스크톱에서 폼의 위치를 가져오거나 설정 합니다."
  remarks: "데스크톱 좌표로 작업 표시줄을 제외 하는 화면에서의 작업 영역을 기반으로 합니다. 바탕 화면 좌표계는 픽셀 기반으로 합니다. 응용 프로그램이 다중 모니터 시스템에서 실행 되는 경우 폼의 좌표는 조합 된 데스크톱 좌표입니다.       Windows 바탕 화면에서 다른 폼과 응용 프로그램을 기준으로 폼 배치 하려면이 속성을 사용할 수 있습니다.       호출 하는 경우는 <xref:System.Windows.Forms.Form.SetDesktopLocation%2A>메서드 호출 하기 전에 <xref:System.Windows.Forms.Form.Show%2A>메서드를 폼으로 운영 체제에 의해 결정 된 기본 위치에 배치 됩니다.</xref:System.Windows.Forms.Form.Show%2A> </xref:System.Windows.Forms.Form.SetDesktopLocation%2A> 창 위치 지정에 대 한 자세한 내용은 http://msdn.microsoft.com/library에 MSDN library에서 &quot;창 기능&quot; 문서 &quot;창 크기 및 위치&quot; 섹션을 참조 합니다.       호출 하는 경우 <xref:System.Windows.Forms.Form.SetDesktopLocation%2A>호출한 후 <xref:System.Windows.Forms.Form.Show%2A>, 폼을 사용자가 지정한 위치에 배치 됩니다.</xref:System.Windows.Forms.Form.Show%2A> </xref:System.Windows.Forms.Form.SetDesktopLocation%2A>"
  example:
  - "The following code example sets the position of a form so that the form is positioned 100 pixels from the left border of the desktop and 100 pixels from the top of the desktop. This example requires that method has been defined within a form class.  \n  \n [!code-vb[Classic Form.DesktopLocation Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.f_14_1.vb)]\n [!code-cpp[Classic Form.DesktopLocation Example#1](~/add/codesnippet/cpp/p-system.windows.forms.f_14_1.cpp)]\n [!code-cs[Classic Form.DesktopLocation Example#1](~/add/codesnippet/csharp/p-system.windows.forms.f_14_1.cs)]"
  syntax:
    content: public System.Drawing.Point DesktopLocation { get; set; }
    return:
      type: System.Drawing.Point
      description: "A <xref href=&quot;System.Drawing.Point&quot;> </xref> 데스크톱에서 폼의 위치를 나타내는입니다."
  overload: System.Windows.Forms.Form.DesktopLocation*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.DialogResult
  id: DialogResult
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: DialogResult
  nameWithType: Form.DialogResult
  fullName: System.Windows.Forms.Form.DialogResult
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "폼에 대 한 대화 상자 결과 가져오거나 설정 합니다."
  remarks: "폼의 대화 상자 결과는 모달 대화 상자로 표시 되 면 폼에서 반환 되는 값입니다. 폼이 대화 상자로 표시를 하는 경우이 속성의 값으로 설정 된 <xref:System.Windows.Forms.DialogResult>열거형 형식에 대 한 대화 상자 결과의 값을 설정, 모달 대화 상자를 숨깁니다 및 컨트롤을 반환 합니다.</xref:System.Windows.Forms.DialogResult> 이 속성은 일반적으로에서 설정 되는 <xref:System.Windows.Forms.Button.DialogResult%2A>속성의는 <xref:System.Windows.Forms.Button>폼에서 컨트롤.</xref:System.Windows.Forms.Button> </xref:System.Windows.Forms.Button.DialogResult%2A> 사용자가 클릭할 때는 <xref:System.Windows.Forms.Button>에 할당 된 값을 제어는 <xref:System.Windows.Forms.Button.DialogResult%2A>속성의는 <xref:System.Windows.Forms.Button>폼의 DialogResult 속성에 할당 됩니다.</xref:System.Windows.Forms.Button> </xref:System.Windows.Forms.Button.DialogResult%2A> </xref:System.Windows.Forms.Button>       폼을 모달 대화 상자로 표시 되 면 클릭 하 고 **닫기** 숨겨져야 양식과 DialogResult 속성으로 설정 됩니다 (폼의 오른쪽 위 모퉁이의 x 단추) 단추를 클릭 하면 `DialogResult.Cancel`합니다. <xref:System.Windows.Forms.Form.Close%2A>메서드가 클릭할 때 자동으로 호출 되지 않습니다는 **닫기** 대화 상자의 단추 DialogResult 속성의 값을 설정 하거나.</xref:System.Windows.Forms.Form.Close%2A> 대신, 폼 숨겨져 있고 대화 상자의 새 인스턴스를 만들지 않고 다시 표시할 수 있습니다. 이러한 동작으로 인해를 호출 해야 합니다는 <xref:System.Windows.Forms.Control.Dispose%2A>폼은 더 이상 필요 없는 응용 프로그램에서 폼의 메서드.</xref:System.Windows.Forms.Control.Dispose%2A>       대화 상자에서 수행 되는 동작을 제대로 처리할 수 있도록 대화 상자를 닫을 하는 방법을 확인 하려면이 속성을 사용할 수 있습니다.      > [!NOTE] >를 클릭할 때 DialogResult 속성에 할당 된 값을 재정의할 수는 **닫기** 단추에 대 한 이벤트 처리기에서 DialogResult 속성을 설정 하 여는 <xref:System.Windows.Forms.Form.Closing>폼의 이벤트입니다.</xref:System.Windows.Forms.Form.Closing>      > [!NOTE] > 경우는 <xref:System.Windows.Forms.Form>모덜리스 창, DialogResult 속성에서 반환한 값 폼을 닫을 때 폼의 리소스가 자동으로 해제 하기 때문에 폼에 사용 된 값을 반환 하지 수도 표시 됩니다.</xref:System.Windows.Forms.Form>"
  example:
  - "The following code example displays a form as a dialog box and displays a message box indicating whether the OK or Cancel button of the form was clicked by referencing the DialogResult property of the form.  \n  \n [!code-cs[Classic Form.DialogResult Example#1](~/add/codesnippet/csharp/p-system.windows.forms.f_35_1.cs)]\n [!code-cpp[Classic Form.DialogResult Example#1](~/add/codesnippet/cpp/p-system.windows.forms.f_35_1.cpp)]\n [!code-vb[Classic Form.DialogResult Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.f_35_1.vb)]"
  syntax:
    content: public System.Windows.Forms.DialogResult DialogResult { get; set; }
    return:
      type: System.Windows.Forms.DialogResult
      description: "A <xref href=&quot;System.Windows.Forms.DialogResult&quot;> </xref> 대화 상자로 사용 되는 경우 해당 폼의 결과 나타내는입니다."
  overload: System.Windows.Forms.Form.DialogResult*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "지정 된 값이 유효한 값의 범위를 벗어났습니다."
  platform:
  - net462
- uid: System.Windows.Forms.Form.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: Form.Dispose(Boolean)
  fullName: System.Windows.Forms.Form.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "사용 하는 리소스 (메모리 제외) 삭제는 <xref href=&quot;System.Windows.Forms.Form&quot;> </xref>합니다."
  remarks: "이 메서드는 public `Dispose` 메서드 및 <xref:System.Object.Finalize%2A>메서드.</xref:System.Object.Finalize%2A> `Dispose`보호 된 호출 `Dispose(Boolean)` 메서드는 `disposing` 매개 변수 설정 `true`합니다. <xref:System.Object.Finalize%2A>호출 `Dispose` 와 `disposing` 로 설정 `false`합니다.</xref:System.Object.Finalize%2A>       경우는 `disposing` 매개 변수는 `true`,이 메서드는 관리 개체가 보유 하는 모든 리소스를 해제 합니다.이 <xref:System.Windows.Forms.Form>참조.</xref:System.Windows.Forms.Form> 이 메서드 호출에서 `Dispose` 각 참조 된 개체의 메서드.       Dispose를 호출할지 자동으로 사용 하 여 폼이 표시 되는 <xref:System.Windows.Forms.Form.Show%2A>메서드.</xref:System.Windows.Forms.Form.Show%2A> 경우와 같은 다른 방법을 <xref:System.Windows.Forms.Form.ShowDialog%2A>사용 하는 경우 또는 폼이 전혀 표시 되지 않는, 응용 프로그램 내에서 직접 Dispose를 호출 해야 있습니다.</xref:System.Windows.Forms.Form.ShowDialog%2A>"
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>관리 되는 관리 되지 않는 리소스만 해제 하려면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 만 관리 되지 않는 리소스를 해제 합니다."
  overload: System.Windows.Forms.Form.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.FormBorderStyle
  id: FormBorderStyle
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: FormBorderStyle
  nameWithType: Form.FormBorderStyle
  fullName: System.Windows.Forms.Form.FormBorderStyle
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "폼의 테두리 스타일을 가져오거나 설정 합니다."
  remarks: "폼의 테두리 스타일 폼의 바깥쪽 가장자리 표시 되는 방식을 결정 합니다. 폼의 테두리 표시를 변경 하는 것 외에도 특정 테두리 스타일의 크기도 조정할 폼을 방지 합니다. 예를 들어는 `FormBorderStyle.FixedDialog` 테두리 스타일의 대화 상자 폼의 테두리 변경 하 고 폼 크기를 조정 하지 못하도록 합니다. 테두리 스타일 크기 또는 폼의 캡션 표시줄 섹션의 가용성에 영향을 줄 수 있습니다.      > [!NOTE] >와 <xref:System.Windows.Forms.FormBorderStyle>스타일 수 없으면 특정 한 최소 값 이하로 창 크기를 조정 하면 설정한 경우에 <xref:System.Windows.Forms.Form.ControlBox%2A>를 `false` <xref:System.Windows.Forms.Form.Text%2A>.</xref:System.Windows.Forms.Form.Text%2A> 길이가&0; 인 문자열을 할당 하 고</xref:System.Windows.Forms.Form.ControlBox%2A> </xref:System.Windows.Forms.FormBorderStyle> 사용 하 여이 문제를 해결할 것이 좋습니다는 <xref:System.Windows.Forms.FormBorderStyle>대신 스타일.</xref:System.Windows.Forms.FormBorderStyle>"
  example:
  - "The following code example creates a new instance of a <xref:System.Windows.Forms.Form> and calls the <xref:System.Windows.Forms.Form.ShowDialog%2A> method to display the form as a dialog box. The example sets the FormBorderStyle, <xref:System.Windows.Forms.Form.AcceptButton%2A>, <xref:System.Windows.Forms.Form.CancelButton%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, <xref:System.Windows.Forms.Form.MaximizeBox%2A>, and <xref:System.Windows.Forms.Form.StartPosition%2A> properties to change the appearance and functionality of the form to a dialog box. The example also uses the <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> method of the form's <xref:System.Windows.Forms.Control.Controls%2A> collection to add two <xref:System.Windows.Forms.Button> controls. The example uses the <xref:System.Windows.Forms.Form.HelpButton%2A> property to display a help button in the caption bar of the dialog box.  \n  \n [!code-cpp[Classic Form.AcceptButton Example#1](~/add/codesnippet/cpp/p-system.windows.forms.f_41_1.cpp)]\n [!code-cs[Classic Form.AcceptButton Example#1](~/add/codesnippet/csharp/p-system.windows.forms.f_41_1.cs)]\n [!code-vb[Classic Form.AcceptButton Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.f_41_1.vb)]"
  syntax:
    content: public System.Windows.Forms.FormBorderStyle FormBorderStyle { get; set; }
    return:
      type: System.Windows.Forms.FormBorderStyle
      description: "A <xref href=&quot;System.Windows.Forms.FormBorderStyle&quot;> </xref> 폼에 표시할 테두리의 스타일을 나타내는입니다. 기본값은 <xref uid=&quot;langword_csharp_FormBorderStyle.Sizable&quot; name=&quot;FormBorderStyle.Sizable&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.Form.FormBorderStyle*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "지정 된 값이 유효한 값의 범위를 벗어났습니다."
  platform:
  - net462
- uid: System.Windows.Forms.Form.FormClosed
  id: FormClosed
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: FormClosed
  nameWithType: Form.FormClosed
  fullName: System.Windows.Forms.Form.FormClosed
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "폼이 닫힌 후 발생 합니다."
  remarks: "<xref:System.Windows.Forms.Form.Close%2A>메서드 또는 <xref:System.Windows.Forms.Application.Exit%2A> <xref:System.Windows.Forms.Application>클래스</xref:System.Windows.Forms.Application> 의 메서드</xref:System.Windows.Forms.Application.Exit%2A> </xref:System.Windows.Forms.Form.Close%2A> 또는 사용자가 폼이 닫힌 후 FormClosed 이벤트 발생 폼을 닫는 하지 않도록 하려면 처리는 <xref:System.Windows.Forms.Form.FormClosing>이벤트 집합과 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>속성은 <xref:System.ComponentModel.CancelEventArgs>이벤트 처리기에 전달 된 `true`.</xref:System.ComponentModel.CancelEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A> </xref:System.Windows.Forms.Form.FormClosing>       폼에서 사용 하는 리소스를 확보 하는 등의 작업을 수행 하 고 폼에 입력 한 정보를 저장 하 또는 부모 폼을 업데이트 하려면이 이벤트를 사용할 수 있습니다.       폼이 (mdi 다중) 다중 문서 인터페이스 부모 폼의 <xref:System.Windows.Forms.Form.FormClosing>모든 MDI 자식 폼의 MDI 부모 폼의 하기 전에 발생 <xref:System.Windows.Forms.Form.FormClosing>이벤트가 발생 합니다.</xref:System.Windows.Forms.Form.FormClosing> </xref:System.Windows.Forms.Form.FormClosing> 마찬가지로, FormClosed 이벤트 모든 MDI 자식 폼의 MDI 부모 폼의 FormClosed 이벤트 발생 하기 전에 발생 합니다.       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the FormClosed event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`. Then ensure that the event handler is associated with the FormClosed event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#395](~/add/codesnippet/csharp/e-system.windows.forms.f_13_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#395](~/add/codesnippet/visualbasic/e-system.windows.forms.f_13_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.FormClosedEventHandler FormClosed;
    return:
      type: System.Windows.Forms.FormClosedEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.FormClosing
  id: FormClosing
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: FormClosing
  nameWithType: Form.FormClosing
  fullName: System.Windows.Forms.Form.FormClosing
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "폼이 닫히기 전에 발생 합니다."
  remarks: "FormClosing 이벤트에는 폼을 닫을 때 발생 합니다. 폼을 닫을 때 삭제 되 고 폼과 관련 된 모든 리소스를 해제 합니다. 이 이벤트를 취소 하면 폼 열린 상태로 유지 됩니다. 폼의 클로저를 취소 하려면는 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>의 속성은 <xref:System.Windows.Forms.FormClosingEventArgs>이벤트 처리기에 전달 된 `true`.</xref:System.Windows.Forms.FormClosingEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A>       폼을 모달 대화 상자로 표시 되 면 클릭 하 고 **닫기** 단추 (x 폼의 오른쪽 위 모서리에 있는 단추)를 사용 하면 양식을 숨길 및 <xref:System.Windows.Forms.Form.DialogResult%2A>속성으로 설정 됩니다 `DialogResult.Cancel`.</xref:System.Windows.Forms.Form.DialogResult%2A> 에 할당 된 값을 재정의할 수 있습니다는 <xref:System.Windows.Forms.Form.DialogResult%2A>속성을 클릭할 때는 **닫기** 설정 하 여 단추는 <xref:System.Windows.Forms.Form.DialogResult%2A>속성 폼의 FormClosing 이벤트에 대 한 이벤트 처리기에서.</xref:System.Windows.Forms.Form.DialogResult%2A> </xref:System.Windows.Forms.Form.DialogResult%2A>      > [!NOTE] > 때는 <xref:System.Windows.Forms.Form.Close%2A>메서드가 호출 되는 <xref:System.Windows.Forms.Form>모덜리스 창으로 표시를 호출할 수 없습니다는 <xref:System.Windows.Forms.Control.Show%2A>메서드가 폼의 리소스가 이미 해제 되었으므로 때문에 폼을 표시 합니다.</xref:System.Windows.Forms.Control.Show%2A> </xref:System.Windows.Forms.Form> </xref:System.Windows.Forms.Form.Close%2A> 폼을 숨기고 표시를 사용 하 여 확인 된 <xref:System.Windows.Forms.Control.Hide%2A>메서드.</xref:System.Windows.Forms.Control.Hide%2A>       폼이 (mdi 다중) 다중 문서 인터페이스 부모 폼 FormClosing 이벤트 모든 MDI 자식 폼의 MDI 부모 폼의 FormClosing 이벤트 발생 하기 전에 발생 합니다. 마찬가지로,는 <xref:System.Windows.Forms.Form.FormClosed>모든 MDI 자식 폼의 발생 하기 전에 <xref:System.Windows.Forms.Form.FormClosed>MDI 부모 폼의 이벤트가 발생 합니다.</xref:System.Windows.Forms.Form.FormClosed> </xref:System.Windows.Forms.Form.FormClosed> MDI 자식 폼의 FormClosing 이벤트를 취소 해도 MDI 부모 폼의 FormClosing 이벤트 발생 수 있습니다. 그러나로 설정 됩니다 이벤트를 취소 `true` 는 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>의 속성은 <xref:System.Windows.Forms.FormClosingEventArgs>부모 폼에 매개 변수로 전달 되는 클래스입니다.</xref:System.Windows.Forms.FormClosingEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 모든 MDI 부모 및 자식 폼을 강제로 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>속성을 `false` 는 mdi 부모 폼.</xref:System.ComponentModel.CancelEventArgs.Cancel%2A>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the FormClosing event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`. Then ensure that the event handler is associated with the FormClosing event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#394](~/add/codesnippet/csharp/e-system.windows.forms.f_7_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#394](~/add/codesnippet/visualbasic/e-system.windows.forms.f_7_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.FormClosingEventHandler FormClosing;
    return:
      type: System.Windows.Forms.FormClosingEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.GetAutoScaleSize(System.Drawing.Font)
  id: GetAutoScaleSize(System.Drawing.Font)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: GetAutoScaleSize(Font)
  nameWithType: Form.GetAutoScaleSize(Font)
  fullName: System.Windows.Forms.Form.GetAutoScaleSize(Font)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "자동 크기 조정이 지정된 된 글꼴에 따라 폼 때 크기를 가져옵니다."
  remarks: "> [!IMPORTANT]>은 GetAutoScaleSize 메서드는 사용 되지 않는 in.NET Framework 버전 2.0. 이 멤버의 이전 버전과 호환성을 위해 유지 합니다. 자동 크기 조정 하는 방법에 대 한 자세한 내용은 참조 [Windows Forms의 자동 크기 조정을](~/add/includes/ajax-current-ext-md.md)합니다.       폼을 폼에 글꼴을 적용 하기 전에 자동 크기 조정을 특정 글꼴에 대 한는 크기를 확인 하려면이 메서드를 사용할 수 있습니다. 크기를 확인 하려는 경우는 특정 폼이를 폼에 사용 된 현재 글꼴에 따라, 사용 된 <xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A>속성.</xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A>"
  syntax:
    content: public static System.Drawing.SizeF GetAutoScaleSize (System.Drawing.Font font);
    parameters:
    - id: font
      type: System.Drawing.Font
      description: "A <xref href=&quot;System.Drawing.Font&quot;> </xref> 폼의 특정 기본 크기를 결정 하는 글꼴을 나타내는입니다."
    return:
      type: System.Drawing.SizeF
      description: "A <xref href=&quot;System.Drawing.SizeF&quot;> </xref> 폼의 특정 크기를 나타내는입니다."
  overload: System.Windows.Forms.Form.GetAutoScaleSize*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)
  id: GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: GetScaledBounds(Rectangle,SizeF,BoundsSpecified)
  nameWithType: Form.GetScaledBounds(Rectangle,SizeF,BoundsSpecified)
  fullName: System.Windows.Forms.Form.GetScaledBounds(Rectangle,SizeF,BoundsSpecified)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤의 배율이 조정 되는 범위를 검색 합니다."
  syntax:
    content: protected override System.Drawing.Rectangle GetScaledBounds (System.Drawing.Rectangle bounds, System.Drawing.SizeF factor, System.Windows.Forms.BoundsSpecified specified);
    parameters:
    - id: bounds
      type: System.Drawing.Rectangle
      description: "A <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 디스플레이 범위를 검색할 영역을 지정 하는 합니다."
    - id: factor
      type: System.Drawing.SizeF
      description: "높이 너비 컨트롤의 범위입니다."
    - id: specified
      type: System.Windows.Forms.BoundsSpecified
      description: "값 중 하나 <xref href=&quot;System.Windows.Forms.BoundsSpecified&quot;> </xref> 의 크기와 위치를 정의할 때 사용할 컨트롤의 범위를 지정 하는 합니다."
    return:
      type: System.Drawing.Rectangle
      description: "A <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 컨트롤의 배율이 조정 되는 범위를 나타내는입니다."
  overload: System.Windows.Forms.Form.GetScaledBounds*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.HelpButton
  id: HelpButton
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: HelpButton
  nameWithType: Form.HelpButton
  fullName: System.Windows.Forms.Form.HelpButton
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "폼의 캡션 상자에 도움말 단추를 표시할지 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "이 속성이로 설정 된 경우 `true`, 왼쪽의 캡션 표시줄에 물음표 있는 작은 단추가 표시 되는 **닫기** 단추입니다. 응용 프로그램에 대 한 도움말을 표시 하려면이 단추를 사용할 수 있습니다. 에 대 한 이벤트 처리기를 만들 수는 <xref:System.Windows.Forms.Control.HelpRequested>의 이벤트는 <xref:System.Windows.Forms.Control>폼의 도움말 단추를 클릭할 때 사용자에 게 도움말 정보를 표시 하는 클래스입니다.</xref:System.Windows.Forms.Control> </xref:System.Windows.Forms.Control.HelpRequested>      > [!IMPORTANT] > 경우 HelpButton 속성의 값이 무시는 **최대화** 또는 **최소화** 단추가 표시 됩니다."
  example:
  - "The following code example creates a new instance of a <xref:System.Windows.Forms.Form> and calls the <xref:System.Windows.Forms.Form.ShowDialog%2A> method to display the form as a dialog box. The example sets the <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.AcceptButton%2A>, <xref:System.Windows.Forms.Form.CancelButton%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, <xref:System.Windows.Forms.Form.MaximizeBox%2A>, and <xref:System.Windows.Forms.Form.StartPosition%2A> properties to change the appearance and functionality of the form to a dialog box. The example also uses the <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> method of the form's <xref:System.Windows.Forms.Control.Controls%2A> collection to add two <xref:System.Windows.Forms.Button> controls. The example uses the HelpButton property to display a Help button in the caption bar of the dialog box.  \n  \n [!code-cpp[Classic Form.AcceptButton Example#1](~/add/codesnippet/cpp/p-system.windows.forms.f_57_1.cpp)]\n [!code-cs[Classic Form.AcceptButton Example#1](~/add/codesnippet/csharp/p-system.windows.forms.f_57_1.cs)]\n [!code-vb[Classic Form.AcceptButton Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.f_57_1.vb)]"
  syntax:
    content: public bool HelpButton { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>폼의 캡션 표시줄에 도움말 단추를 표시 하려면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.Form.HelpButton*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.HelpButtonClicked
  id: HelpButtonClicked
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: HelpButtonClicked
  nameWithType: Form.HelpButtonClicked
  fullName: System.Windows.Forms.Form.HelpButtonClicked
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 경우는 **도움말** 단추를 클릭 합니다."
  remarks: "HelpButtonClicked 이벤트가 발생할 때의 **도움말** 폼의 캡션 표시줄에 단추를 클릭 합니다. **도움말** 단추가 표시 되는지를 때는 <xref:System.Windows.Forms.Form.HelpButton%2A>속성이 `true`.</xref:System.Windows.Forms.Form.HelpButton%2A> HelpButtonClicked는 취소할 수 있습니다.       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the HelpButtonClicked event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`. Then ensure that the event handler is associated with the HelpButtonClicked event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#388](~/add/codesnippet/csharp/e-system.windows.forms.f_19_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#388](~/add/codesnippet/visualbasic/e-system.windows.forms.f_19_1.vb)]"
  syntax:
    content: public event System.ComponentModel.CancelEventHandler HelpButtonClicked;
    return:
      type: System.ComponentModel.CancelEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.Icon
  id: Icon
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: Icon
  nameWithType: Form.Icon
  fullName: System.Windows.Forms.Form.Icon
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "폼에 대 한 아이콘을 가져오거나 설정 합니다."
  remarks: "폼의 아이콘을 폼의 컨트롤 상자에 표시 되는 아이콘을 비롯 하 여 작업 표시줄에 폼을 나타내는 그림을 지정 합니다.       이 속성이 아무런 효과가 경우 <xref:System.Windows.Forms.Form.FormBorderStyle%2A>를 <xref:System.Windows.Forms.FormBorderStyle>.</xref:System.Windows.Forms.FormBorderStyle> </xref:System.Windows.Forms.Form.FormBorderStyle%2A> 이 경우 폼 아이콘이 표시 되지 않습니다."
  syntax:
    content: public System.Drawing.Icon Icon { get; set; }
    return:
      type: System.Drawing.Icon
      description: "<xref href=&quot;System.Drawing.Icon&quot;> </xref> 폼에 대 한 아이콘을 나타내는입니다."
  overload: System.Windows.Forms.Form.Icon*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.InputLanguageChanged
  id: InputLanguageChanged
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: InputLanguageChanged
  nameWithType: Form.InputLanguageChanged
  fullName: System.Windows.Forms.Form.InputLanguageChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "폼의 입력된 언어가 변경 된 후 발생 합니다."
  remarks: "폼의 모양 및 폼의 입력된 언어에 대 한 변경 내용을 기반으로 하는 텍스트를 변경 하려면이 이벤트를 사용할 수 있습니다.       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the InputLanguageChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`. Then ensure that the event handler is associated with the InputLanguageChanged event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#400](~/add/codesnippet/csharp/e-system.windows.forms.f_2_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#400](~/add/codesnippet/visualbasic/e-system.windows.forms.f_2_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.InputLanguageChangedEventHandler InputLanguageChanged;
    return:
      type: System.Windows.Forms.InputLanguageChangedEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.InputLanguageChanging
  id: InputLanguageChanging
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: InputLanguageChanging
  nameWithType: Form.InputLanguageChanging
  fullName: System.Windows.Forms.Form.InputLanguageChanging
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "사용자가 폼에 대 한 입력된 언어를 변경 하려고 할 때 발생 합니다."
  remarks: "이 이벤트는 폼에 대 한 입력된 언어를 변경 하 여 만들어지기 전에 발생 합니다. 언어 변경 설정 하 여 취소할 수 있습니다는 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>의 속성은 <xref:System.Windows.Forms.InputLanguageChangingEventArgs>이벤트 처리기에 전달 된 `false`.</xref:System.Windows.Forms.InputLanguageChangingEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 이벤트가 취소 되는 입력된 언어 변경 되지 않습니다. 응용 프로그램에 대 한 적절 한 요청한 입력된 언어 변경 되는지 확인 하려면이 이벤트를 사용할 수 있습니다.       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the InputLanguageChanging event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`. Then ensure that the event handler is associated with the InputLanguageChanging event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#401](~/add/codesnippet/csharp/e-system.windows.forms.f_4_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#401](~/add/codesnippet/visualbasic/e-system.windows.forms.f_4_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.InputLanguageChangingEventHandler InputLanguageChanging;
    return:
      type: System.Windows.Forms.InputLanguageChangingEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.IsMdiChild
  id: IsMdiChild
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: IsMdiChild
  nameWithType: Form.IsMdiChild
  fullName: System.Windows.Forms.Form.IsMdiChild
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "다중 문서 MDI (인터페이스) 자식 폼을 폼 인지를 나타내는 값을 가져옵니다."
  remarks: "런타임 시 MDI 자식 폼은 MDI 부모 폼의 클라이언트 영역 안에 표시 됩니다. MDI 자식 폼 최대화을 최소화 하며 MDI 부모 폼 내에서 이동 될 수 있습니다. MDI 자식 폼을 만들려면 할당는 <xref:System.Windows.Forms.Form>MDI 부모 폼에 사용 됩니다는 <xref:System.Windows.Forms.Form.MdiParent%2A>자식 폼의 속성입니다.</xref:System.Windows.Forms.Form.MdiParent%2A> </xref:System.Windows.Forms.Form> 사용할 수는 <xref:System.Windows.Forms.Form.IsMdiContainer%2A>속성을 폼이 MDI 부모 폼.</xref:System.Windows.Forms.Form.IsMdiContainer%2A>       메서드 또는 속성에서 반환 된 폼이 MDI 자식 폼 또는 대화 상자와 같은 응용 프로그램에서 표준 형식 확인 하려면 IsMdiChild 속성을 사용할 수 있습니다.      > [!NOTE] > 모든 MDI 자식 폼에는 크기 조정 가능한 테두리, 컨트롤 메뉴 상자 및 최소화 및 **최대화** 의 설정에 관계 없이 단추는 <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.ControlBox%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, 및 <xref:System.Windows.Forms.Form.MaximizeBox%2A>속성.</xref:System.Windows.Forms.Form.MaximizeBox%2A> </xref:System.Windows.Forms.Form.MinimizeBox%2A> </xref:System.Windows.Forms.Form.ControlBox%2A> </xref:System.Windows.Forms.Form.FormBorderStyle%2A>"
  syntax:
    content: public bool IsMdiChild { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>폼이 MDI 자식 폼입니다. 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.Form.IsMdiChild*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.IsMdiContainer
  id: IsMdiContainer
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: IsMdiContainer
  nameWithType: Form.IsMdiContainer
  fullName: System.Windows.Forms.Form.IsMdiContainer
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "다중 문서 MDI (인터페이스) 자식 폼에 대 한 컨테이너 형식 인지를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "이 속성 MDI 부모 폼을 표시 및 폼의 동작을 변경합니다. 이 속성이로 설정 된 경우 `true`, 폼에 볼록한 테두리가 오목한 클라이언트 영역을 표시 합니다. 부모 폼에 사용 된 모든 MDI 자식 폼의 클라이언트 영역 내에 표시 됩니다.       MDI 부모 폼이 닫히면는 <xref:System.Windows.Forms.Form.Closing>모든 MDI 자식 폼의 MDI 부모 폼의 하기 전에 발생 <xref:System.Windows.Forms.Form.Closing>이벤트가 발생 합니다.</xref:System.Windows.Forms.Form.Closing> </xref:System.Windows.Forms.Form.Closing> 또한는 <xref:System.Windows.Forms.Form.Closed>모든 MDI 자식 폼의 발생 하기 전에 <xref:System.Windows.Forms.Form.Closed>MDI 부모 폼의 이벤트가 발생 합니다.</xref:System.Windows.Forms.Form.Closed> </xref:System.Windows.Forms.Form.Closed>      > [!NOTE] > 두 개 있는 경우 <xref:System.Windows.Forms.MenuStrip>IsMdiContainer 설정는 MDI 자식 폼의 컨트롤에 `true` 부모에 대 한 폼 중 하나만의 내용을 병합 하는 <xref:System.Windows.Forms.MenuStrip>컨트롤.</xref:System.Windows.Forms.MenuStrip> </xref:System.Windows.Forms.MenuStrip> 사용 하 여 <xref:System.Windows.Forms.ToolStripManager.Merge%2A>내용을 병합 하 여 추가 자식 <xref:System.Windows.Forms.MenuStrip>MDI 부모 폼에서 컨트롤.</xref:System.Windows.Forms.MenuStrip> </xref:System.Windows.Forms.ToolStripManager.Merge%2A>"
  example:
  - "The following code example demonstrates using the IsMdiContainer property as well as changing the `BackColor` property of an MDI Form. To run this example, paste the following code in a new form.  \n  \n [!code-cs[System.Windows.Forms.MdiClientExample#1](~/add/codesnippet/csharp/p-system.windows.forms.f_49_1.cs)]\n [!code-vb[System.Windows.Forms.MdiClientExample#1](~/add/codesnippet/visualbasic/p-system.windows.forms.f_49_1.vb)]"
  syntax:
    content: public bool IsMdiContainer { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>폼이 MDI 자식 폼;에 대 한 컨테이너 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.Form.IsMdiContainer*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.IsRestrictedWindow
  id: IsRestrictedWindow
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: IsRestrictedWindow
  nameWithType: Form.IsRestrictedWindow
  fullName: System.Windows.Forms.Form.IsRestrictedWindow
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "폼이 모든 창과 사용자 입력된 이벤트를 제한 없이 사용할 수 있는지 여부를 나타내는 값을 가져옵니다."
  remarks: "IsRestrictedWindow 속성 결정 여부는 <xref:System.Security.Permissions.UIPermissionWindow>권한이 부여 됩니다.</xref:System.Security.Permissions.UIPermissionWindow> 이 속성은 런타임에 폼의 생성자에서 설정 되며 폼의 수명 동안 캐시 됩니다. 공용 언어 런타임 부모 생성자가 부분 신뢰 환경에서 항상 호출을 보장 부분 신뢰에서 실행 되는 Windows Forms 응용 프로그램에서이 검사를 피할 수 없습니다."
  syntax:
    content: public bool IsRestrictedWindow { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>폼에 제한이; 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.Form.IsRestrictedWindow*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.KeyPreview
  id: KeyPreview
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: KeyPreview
  nameWithType: Form.KeyPreview
  fullName: System.Windows.Forms.Form.KeyPreview
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "이 폼에 포커스가 있는 컨트롤에 이벤트가 전달 되기 전에 주요 이벤트를 받을지를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "이 속성이로 설정 된 경우 `true`, 폼을 모두를 받게 됩니다 <xref:System.Windows.Forms.Control.KeyPress>, <xref:System.Windows.Forms.Control.KeyDown>, 및 <xref:System.Windows.Forms.Control.KeyUp>이벤트.</xref:System.Windows.Forms.Control.KeyUp> </xref:System.Windows.Forms.Control.KeyDown> </xref:System.Windows.Forms.Control.KeyPress> 폼의 이벤트 처리기는 키 입력 처리를 완료 하면 키 입력 포커스가 있는 컨트롤에 할당 됩니다. 예를 들어, KeyPreview 속성이로 설정 된 경우 `true` 현재 선택 된 컨트롤은는 <xref:System.Windows.Forms.TextBox>키 입력은 폼의 이벤트 처리기에서 처리 한 후는 <xref:System.Windows.Forms.TextBox>제어는 눌린 키를 받게 됩니다.</xref:System.Windows.Forms.TextBox> </xref:System.Windows.Forms.TextBox> 폼 수준 에서만 키보드 이벤트를 처리 하 고 키보드 이벤트를 수신 하도록 컨트롤을 허용 하지 설정는 <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A?displayProperty=fullName>속성 폼의 <xref:System.Windows.Forms.Control.KeyPress>이벤트 처리기를 `true`.</xref:System.Windows.Forms.Control.KeyPress> </xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A?displayProperty=fullName>       이 속성을 사용 하 여 처리 하거나 응용 프로그램의 대부분의 키 입력을 처리 하거나 키 입력을 처리 하는 적절 한 컨트롤을 호출할 수 있습니다. 예를 들어 응용 프로그램에서 기능 키를 사용할 때 키 입력 이벤트를 받을 수 있는 각 컨트롤에 대 한 코드를 작성 하는 대신 폼 수준에서 키 입력을 처리 하는 것이 좋습니다.      > [!NOTE] > 키보드 이벤트를 모든 폼에 컨트롤이 표시 되거나 설정 된 경우 자동으로 받습니다.      > [!NOTE] > 수신 키 입력을 취소 하려면 폼의 컨트롤을 프로그래밍할 수 있습니다. 컨트롤을 폼에 이러한 키 입력 보내지 않습니다, 이후 양식에 표시 되지 않습니다에 KeyPreview 설정에 관계 없이 합니다."
  example:
  - "The following code example demonstrates setting a form's KeyPreview property to true and handling the key events at the form level. To run the example, paste the following code in a blank form.  \n  \n [!code-cs[System.Windows.Forms.ProcessMnemonic#2](~/add/codesnippet/csharp/p-system.windows.forms.f_31_1.cs)]\n [!code-cpp[System.Windows.Forms.ProcessMnemonic#2](~/add/codesnippet/cpp/p-system.windows.forms.f_31_1.cpp)]\n [!code-vb[System.Windows.Forms.ProcessMnemonic#2](~/add/codesnippet/visualbasic/p-system.windows.forms.f_31_1.vb)]"
  syntax:
    content: public bool KeyPreview { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>폼에 모든 키 이벤트를 수신할 경우 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 폼에서 현재 선택 된 컨트롤 키 이벤트를 수신 하는 경우. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.Form.KeyPreview*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.LayoutMdi(System.Windows.Forms.MdiLayout)
  id: LayoutMdi(System.Windows.Forms.MdiLayout)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: LayoutMdi(MdiLayout)
  nameWithType: Form.LayoutMdi(MdiLayout)
  fullName: System.Windows.Forms.Form.LayoutMdi(MdiLayout)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "MDI 부모 폼 내에서 다중 문서 MDI (인터페이스) 자식 폼을 정렬 합니다."
  remarks: "허용 하기 위해 더 쉽게 탐색 및 조작 MDI 자식 폼의 MDI 부모 폼의 MDI 자식 폼을 정렬 하려면이 메서드를 사용할 수 있습니다. MDI 자식 폼 종속 연결 된, 또는 MDI 부모 폼 내에서 아이콘으로 가로 또는 세로로 바둑판식 수 수 있습니다."
  example:
  - "The following code example shows the event handlers for the menu items of a Window menu in an MDI application's parent form. Each event handler makes calls to the LayoutMdi method to arrange any child forms that are currently open in the application.  \n  \n [!code-cs[Classic Form.LayoutMdi Example#1](~/add/codesnippet/csharp/m-system.windows.forms.f_10_1.cs)]\n [!code-cpp[Classic Form.LayoutMdi Example#1](~/add/codesnippet/cpp/m-system.windows.forms.f_10_1.cpp)]\n [!code-vb[Classic Form.LayoutMdi Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.f_10_1.vb)]"
  syntax:
    content: public void LayoutMdi (System.Windows.Forms.MdiLayout value);
    parameters:
    - id: value
      type: System.Windows.Forms.MdiLayout
      description: "중 하나는 <xref href=&quot;System.Windows.Forms.MdiLayout&quot;> </xref> MDI 자식 폼의 레이아웃을 정의 하는 값입니다."
  overload: System.Windows.Forms.Form.LayoutMdi*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.Load
  id: Load
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: Load
  nameWithType: Form.Load
  fullName: System.Windows.Forms.Form.Load
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "폼이 처음으로 표시 되기 전에 발생 합니다."
  remarks: "폼에서 사용 하는 리소스를 할당 하는 등의 작업을 수행 하려면이 이벤트를 사용할 수 있습니다.       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Forms.Form.SetDesktopLocation%2A>, Load, <xref:System.Windows.Forms.Form.Activated>, and <xref:System.Windows.Forms.Form.Activate%2A> members. To run the example, paste the following code in a form called `Form1` containing a <xref:System.Windows.Forms.Button> called `Button1` and two <xref:System.Windows.Forms.Label> controls called `Label1` and `Label2`.  \n  \n [!code-cs[System.Windows.Forms.FormsActivate#1](~/add/codesnippet/csharp/e-system.windows.forms.f_9_1.cs)]\n [!code-vb[System.Windows.Forms.FormsActivate#1](~/add/codesnippet/visualbasic/e-system.windows.forms.f_9_1.vb)]\n [!code-cpp[System.Windows.Forms.FormsActivate#1](~/add/codesnippet/cpp/e-system.windows.forms.f_9_1.cpp)]"
  syntax:
    content: public event EventHandler Load;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.Location
  id: Location
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: Location
  nameWithType: Form.Location
  fullName: System.Windows.Forms.Form.Location
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "가져오거나는 <xref href=&quot;System.Drawing.Point&quot;> </xref> 의 왼쪽 위 모퉁이 나타내는 <xref href=&quot;System.Windows.Forms.Form&quot;> </xref> 화면 좌표에서입니다."
  remarks: "<xref:System.Drawing.Point>즉, 값 형식 구조가입니다.</xref:System.Drawing.Point> 속성에 액세스 하는 경우 <xref:System.Drawing.Point>, 속성의 복사본이 반환 됩니다.</xref:System.Drawing.Point> 따라서 변경는 <xref:System.Drawing.Point.X%2A>또는 <xref:System.Drawing.Point.Y%2A>의 속성은 <xref:System.Drawing.Point>에서 반환 되는 <xref:System.Windows.Forms.Control.Location%2A>속성에 영향을 주지 것입니다는 <xref:System.Windows.Forms.Control.Left%2A>, <xref:System.Windows.Forms.Control.Right%2A>, <xref:System.Windows.Forms.Control.Top%2A>, 또는 <xref:System.Windows.Forms.Control.Bottom%2A>속성 값이 있는 <xref:System.Windows.Forms.Form>.</xref:System.Windows.Forms.Form> </xref:System.Windows.Forms.Control.Bottom%2A> </xref:System.Windows.Forms.Control.Top%2A> </xref:System.Windows.Forms.Control.Right%2A> </xref:System.Windows.Forms.Control.Left%2A> </xref:System.Windows.Forms.Control.Location%2A> </xref:System.Drawing.Point> </xref:System.Drawing.Point.Y%2A> </xref:System.Drawing.Point.X%2A> 이러한 속성을 조정 하려면 각 속성 값을 개별적으로 설정 하거나에 새 <xref:System.Drawing.Point>.</xref:System.Drawing.Point> Location 속성 설정       Location 속성을 가져오거나는 <xref:System.Windows.Forms.Control.Location%2A>속성은 <xref:System.Windows.Forms.Control>기본 클래스 및 집합은 <xref:System.ComponentModel.SettingsBindableAttribute.Bindable%2A>속성을 `true`.</xref:System.ComponentModel.SettingsBindableAttribute.Bindable%2A> </xref:System.Windows.Forms.Control> </xref:System.Windows.Forms.Control.Location%2A>"
  syntax:
    content: public System.Drawing.Point Location { get; set; }
    return:
      type: System.Drawing.Point
      description: "<xref href=&quot;System.Drawing.Point&quot;> </xref> 의 왼쪽 위 모퉁이 나타내는 <xref href=&quot;System.Windows.Forms.Form&quot;> </xref> 화면 좌표에서입니다."
  overload: System.Windows.Forms.Form.Location*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.MainMenuStrip
  id: MainMenuStrip
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: MainMenuStrip
  nameWithType: Form.MainMenuStrip
  fullName: System.Windows.Forms.Form.MainMenuStrip
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "폼에 대 한 기본 메뉴 컨테이너를 가져오거나 설정 합니다."
  remarks: "해야 MainMenuStrip 속성을 설정 하는 것 외에도 <xref:System.Windows.Forms.Control.ControlCollection.Add%2A>는 <xref:System.Windows.Forms.MenuStrip>컨트롤을 <xref:System.Windows.Forms.Control.Controls%2A>폼의 컬렉션입니다.</xref:System.Windows.Forms.Control.Controls%2A> </xref:System.Windows.Forms.MenuStrip> </xref:System.Windows.Forms.Control.ControlCollection.Add%2A>       <xref:System.Windows.Forms.MenuStrip>클래스를 대체는 <xref:System.Windows.Forms.MainMenu>이전 버전의.NET Framework의 클래스.</xref:System.Windows.Forms.MainMenu> </xref:System.Windows.Forms.MenuStrip>"
  syntax:
    content: public System.Windows.Forms.MenuStrip MainMenuStrip { get; set; }
    return:
      type: System.Windows.Forms.MenuStrip
      description: "A <xref href=&quot;System.Windows.Forms.MenuStrip&quot;> </xref> 폼의 메뉴 구조에 대 한 컨테이너를 나타내는입니다. 기본값은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.Form.MainMenuStrip*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.Margin
  id: Margin
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: Margin
  nameWithType: Form.Margin
  fullName: System.Windows.Forms.Form.Margin
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤 사이의 공백을 가져오거나 설정 합니다."
  syntax:
    content: public System.Windows.Forms.Padding Margin { get; set; }
    return:
      type: System.Windows.Forms.Padding
      description: "컨트롤 사이의 공백을 나타내는 값입니다."
  overload: System.Windows.Forms.Form.Margin*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.MarginChanged
  id: MarginChanged
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: MarginChanged
  nameWithType: Form.MarginChanged
  fullName: System.Windows.Forms.Form.MarginChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 경우는 <xref:System.Windows.Forms.Form.Margin*>속성 변경.</xref:System.Windows.Forms.Form.Margin*>"
  syntax:
    content: public event EventHandler MarginChanged;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.MaximizeBox
  id: MaximizeBox
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: MaximizeBox
  nameWithType: Form.MaximizeBox
  fullName: System.Windows.Forms.Form.MaximizeBox
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "나타내는 값을 가져오거나 여부는 **최대화** 단추가 폼의 캡션 표시줄에 표시 됩니다."
  remarks: "A **최대화** 단추를 사용 하면 사용자가 창을 전체 화면 크기로 확대 합니다. 표시 하는 **최대화** 단추를 설정 해야 양식의 <xref:System.Windows.Forms.Form.FormBorderStyle%2A>속성을 `FormBorderStyle.FixedSingle`, `FormBorderStyle.Sizable`, `FormBorderStyle.Fixed3D`, 또는 `FormBorderStyle.FixedDialog`.</xref:System.Windows.Forms.Form.FormBorderStyle%2A>       A **최대화** 창이 최대화 되 면 자동으로 단추 복원 단추 됩니다. 최소화 하거나 창을 자동으로 복원 하면 복원 단추 변경 다시는 **최대화** 단추입니다.      > [!NOTE] > 런타임에 폼을 최대화를 생성 한 <xref:System.Windows.Forms.Control.Resize>이벤트.</xref:System.Windows.Forms.Control.Resize> <xref:System.Windows.Forms.Form.WindowState%2A>속성 창의 현재 상태를 반영 합니다.</xref:System.Windows.Forms.Form.WindowState%2A> 설정 하는 경우는 <xref:System.Windows.Forms.Form.WindowState%2A>속성을 `FormWindowState.Maximized`, 없이 MaximizeBox에 대 한 모든 설정이 적용 되는 폼이 최대화 및 <xref:System.Windows.Forms.Form.FormBorderStyle%2A>속성.</xref:System.Windows.Forms.Form.FormBorderStyle%2A> </xref:System.Windows.Forms.Form.WindowState%2A>"
  example:
  - "The following code example creates a new instance of a <xref:System.Windows.Forms.Form> and calls the <xref:System.Windows.Forms.Form.ShowDialog%2A> method to display the form as a dialog box. The example sets the <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.AcceptButton%2A>, <xref:System.Windows.Forms.Form.CancelButton%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, MaximizeBox, and <xref:System.Windows.Forms.Form.StartPosition%2A> properties to change the appearance and functionality of the form to a dialog box. The example also uses the <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> method of the form's <xref:System.Windows.Forms.Control.Controls%2A> collection to add two <xref:System.Windows.Forms.Button> controls. The example uses the <xref:System.Windows.Forms.Form.HelpButton%2A> property to display a help button in the caption bar of the dialog box.  \n  \n [!code-cpp[Classic Form.AcceptButton Example#1](~/add/codesnippet/cpp/p-system.windows.forms.f_40_1.cpp)]\n [!code-cs[Classic Form.AcceptButton Example#1](~/add/codesnippet/csharp/p-system.windows.forms.f_40_1.cs)]\n [!code-vb[Classic Form.AcceptButton Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.f_40_1.vb)]"
  syntax:
    content: public bool MaximizeBox { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>표시 하는 **최대화** 폼; 단추를 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.Form.MaximizeBox*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.MaximizedBounds
  id: MaximizedBounds
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: MaximizedBounds
  nameWithType: Form.MaximizedBounds
  fullName: System.Windows.Forms.Form.MaximizedBounds
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "가져오고가 최대화 될 때 폼의 크기를 설정 합니다."
  syntax:
    content: protected System.Drawing.Rectangle MaximizedBounds { get; set; }
    return:
      type: System.Drawing.Rectangle
      description: "A <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 최대화 되었을 때 폼의 경계를 나타내는입니다."
  overload: System.Windows.Forms.Form.MaximizedBounds*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "값은 <> </> *> 속성은 폼의 높이 보다 큽니다.       -또는-의 값은 <> </> *> 속성은 폼의 너비 보다 큽니다."
  platform:
  - net462
- uid: System.Windows.Forms.Form.MaximizedBoundsChanged
  id: MaximizedBoundsChanged
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: MaximizedBoundsChanged
  nameWithType: Form.MaximizedBoundsChanged
  fullName: System.Windows.Forms.Form.MaximizedBoundsChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 경우의 값은 <xref:System.Windows.Forms.Form.MaximizedBounds*>속성이 변경.</xref:System.Windows.Forms.Form.MaximizedBounds*>"
  remarks: "이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the MaximizedBoundsChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`. Then ensure that the event handler is associated with the MaximizedBoundsChanged event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#389](~/add/codesnippet/csharp/e-system.windows.forms.f_15_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#389](~/add/codesnippet/visualbasic/e-system.windows.forms.f_15_1.vb)]"
  syntax:
    content: public event EventHandler MaximizedBoundsChanged;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.MaximumSize
  id: MaximumSize
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: MaximumSize
  nameWithType: Form.MaximumSize
  fullName: System.Windows.Forms.Form.MaximumSize
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "폼을 조정할 수 있는 최대 크기를 가져옵니다."
  remarks: "이 속성을 사용 하면 지정된 된 최대 크기를 폼의 크기를 제한할 수 있습니다. 단일 창 숨겨져야 다른 창을 이어지지 되도록이 기능을 동시에 여러 창을 표시할 때 사용할 수 있습니다. 이 속성은로 설정 하는 경우는 <xref:System.Drawing.Size>높이 및 너비를 폼 0 개체 Windows 설정도 넘어 없습니다 최대 크기를 가집니다.</xref:System.Drawing.Size>"
  example:
  - "The following code example demonstrates setting the MaximumSize property.  \n  \n [!code-cs[System.Windows.Forms.FormExample#3](~/add/codesnippet/csharp/p-system.windows.forms.f_42_1.cs)]\n [!code-vb[System.Windows.Forms.FormExample#3](~/add/codesnippet/visualbasic/p-system.windows.forms.f_42_1.vb)]\n [!code-cpp[System.Windows.Forms.FormExample#3](~/add/codesnippet/cpp/p-system.windows.forms.f_42_1.cpp)]"
  syntax:
    content: public override System.Drawing.Size MaximumSize { get; set; }
    return:
      type: System.Drawing.Size
      description: "A <xref href=&quot;System.Drawing.Size&quot;> </xref> 폼에 대 한 최대 크기를 나타내는입니다."
  overload: System.Windows.Forms.Form.MaximumSize*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "내에서 너비 또는 높이의 값은 <xref href=&quot;System.Drawing.Size&quot;> </xref> 개체는&0; 보다 작은 합니다."
  platform:
  - net462
- uid: System.Windows.Forms.Form.MaximumSizeChanged
  id: MaximumSizeChanged
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: MaximumSizeChanged
  nameWithType: Form.MaximumSizeChanged
  fullName: System.Windows.Forms.Form.MaximumSizeChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 경우의 값은 <xref:System.Windows.Forms.Form.MaximumSize*>속성이 변경.</xref:System.Windows.Forms.Form.MaximumSize*>"
  remarks: "이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the MaximumSizeChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`. Then ensure that the event handler is associated with the MaximumSizeChanged event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#390](~/add/codesnippet/csharp/e-system.windows.forms.f_0_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#390](~/add/codesnippet/visualbasic/e-system.windows.forms.f_0_1.vb)]"
  syntax:
    content: public event EventHandler MaximumSizeChanged;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.MdiChildActivate
  id: MdiChildActivate
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: MdiChildActivate
  nameWithType: Form.MdiChildActivate
  fullName: System.Windows.Forms.Form.MdiChildActivate
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "다중 문서 MDI (인터페이스) 자식 폼을 활성화 또는 MDI 응용 프로그램 내에서 닫을 때 발생 합니다."
  remarks: "이 이벤트를 사용 하 여 MDI 자식 폼의 콘텐츠를 업데이트 하는 등 작업을 수행 하 고 활성화 된 MDI 자식 폼의 상태에 따라 MDI 부모 폼에서 사용할 수 있는 메뉴 옵션을 변경 합니다.       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the MdiChildActivate event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`. Then ensure that the event handler is associated with the MdiChildActivate event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#397](~/add/codesnippet/csharp/e-system.windows.forms.f_11_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#397](~/add/codesnippet/visualbasic/e-system.windows.forms.f_11_1.vb)]"
  syntax:
    content: public event EventHandler MdiChildActivate;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.MdiChildren
  id: MdiChildren
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: MdiChildren
  nameWithType: Form.MdiChildren
  fullName: System.Windows.Forms.Form.MdiChildren
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "이 양식에 부모가 다중 문서 MDI (인터페이스) 자식 폼을 나타내는 폼 배열을 가져옵니다."
  remarks: "이 속성을 사용 하면 MDI 부모 폼에서 현재 열려 있는 모든 MDI 자식 폼에 대 한 참조를 가져올 수 있습니다. MDI 자식 폼을 만들려면 할당는 <xref:System.Windows.Forms.Form>MDI 부모 폼에 사용 됩니다는 <xref:System.Windows.Forms.Form.MdiParent%2A>자식 폼의 속성입니다.</xref:System.Windows.Forms.Form.MdiParent%2A> </xref:System.Windows.Forms.Form>       이 속성을 모든 MDI 자식 폼 MDI 부모 폼을 닫을 때 데이터베이스에 데이터를 저장 하는 등 작업을 수행 하거나 응용 프로그램에서 수행 된 작업에 따라 자식 폼의 필드를 업데이트할 루핑하려면 사용할 수 있습니다."
  example:
  - "The following code example demonstrates how to use the MdiChildren property to iterate through the list of MDI child forms and add a <xref:System.Windows.Forms.Button> control to each.  \n  \n [!code-cpp[Form.MDIChildren#1](~/add/codesnippet/cpp/p-system.windows.forms.f_8_1.cpp)]\n [!code-cs[Form.MDIChildren#1](~/add/codesnippet/csharp/p-system.windows.forms.f_8_1.cs)]\n [!code-vb[Form.MDIChildren#1](~/add/codesnippet/visualbasic/p-system.windows.forms.f_8_1.vb)]"
  syntax:
    content: public System.Windows.Forms.Form[] MdiChildren { get; }
    return:
      type: System.Windows.Forms.Form[]
      description: "배열을 <xref href=&quot;System.Windows.Forms.Form&quot;> </xref> 개체는 각각이 폼의 MDI 자식 폼 중 하나를 식별 합니다."
  overload: System.Windows.Forms.Form.MdiChildren*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.MdiParent
  id: MdiParent
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: MdiParent
  nameWithType: Form.MdiParent
  fullName: System.Windows.Forms.Form.MdiParent
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "이 폼의 현재 다중 문서 인터페이스 (mdi 다중) 부모 폼을 가져오거나 설정 합니다."
  remarks: "MDI 자식 폼을 만들려면 할당는 <xref:System.Windows.Forms.Form>MDI 부모 폼 자식 폼의 호출할 수 속성에 사용 됩니다.</xref:System.Windows.Forms.Form> 모든 자식 폼을 동작을 수행 하는 메서드를 호출 하거나 모든 자식 폼을 필요로 하는 전역 정보를 가져오는 MDI 자식 폼에서이 속성을 사용할 수 있습니다.      > [!NOTE] > 두 개 있는 경우 <xref:System.Windows.Forms.MenuStrip>설정 된 MDI 자식 폼의 컨트롤 <xref:System.Windows.Forms.Form.IsMdiContainer%2A>를 `true` 부모에 대 한 폼 중 하나만의 내용을 병합 하는 <xref:System.Windows.Forms.MenuStrip>컨트롤.</xref:System.Windows.Forms.MenuStrip> </xref:System.Windows.Forms.Form.IsMdiContainer%2A> </xref:System.Windows.Forms.MenuStrip> 사용 하 여 <xref:System.Windows.Forms.ToolStripManager.Merge%2A>내용을 병합 하 여 추가 자식 <xref:System.Windows.Forms.MenuStrip>MDI 부모 폼에서 컨트롤.</xref:System.Windows.Forms.MenuStrip> </xref:System.Windows.Forms.ToolStripManager.Merge%2A>"
  example:
  - "The following code example demonstrates how to create child forms in an MDI application. The example code creates a form with unique text to identify the child form. The example uses the MdiParent property to specify that a form is a child form. This example requires that the code in the example is called from a form that has its <xref:System.Windows.Forms.Form.IsMdiContainer%2A> property set to `true` and that the form has a private class level integer variable named `childCount`.  \n  \n [!code-cpp[Form.MDIParent#1](~/add/codesnippet/cpp/p-system.windows.forms.f_32_1.cpp)]\n [!code-cs[Form.MDIParent#1](~/add/codesnippet/csharp/p-system.windows.forms.f_32_1.cs)]\n [!code-vb[Form.MDIParent#1](~/add/codesnippet/visualbasic/p-system.windows.forms.f_32_1.vb)]"
  syntax:
    content: public System.Windows.Forms.Form MdiParent { get; set; }
    return:
      type: System.Windows.Forms.Form
      description: "A <xref href=&quot;System.Windows.Forms.Form&quot;> </xref> MDI 부모 폼을 나타내는입니다."
  overload: System.Windows.Forms.Form.MdiParent*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "<xref href=&quot;System.Windows.Forms.Form&quot;> </xref> 에 할당 된이 속성은 MDI 컨테이너로 표시 되지 않습니다.       -또는- <xref href=&quot;System.Windows.Forms.Form&quot;> </xref> 자식와 MDI 컨테이너 폼은이 속성에 할당 합니다.       -또는- <xref href=&quot;System.Windows.Forms.Form&quot;> </xref> 에 할당 된이 속성은 다른 스레드에서 있습니다."
  platform:
  - net462
- uid: System.Windows.Forms.Form.Menu
  id: Menu
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: Menu
  nameWithType: Form.Menu
  fullName: System.Windows.Forms.Form.Menu
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "가져오거나는 <xref href=&quot;System.Windows.Forms.MainMenu&quot;> </xref> 형태로 표시 되는 합니다."
  remarks: "런타임 시 완전 한 메뉴 집합 사이 전환 하려면이 속성을 사용할 수 있습니다. 예를 들어 하나 정의할 수 있습니다 <xref:System.Windows.Forms.MainMenu>활성 MDI 자식 폼 및 다른 (mdi 다중) 다중 문서 인터페이스 폼에 표시할 <xref:System.Windows.Forms.MainMenu>자식 창이 표시 될 때 표시할.</xref:System.Windows.Forms.MainMenu> </xref:System.Windows.Forms.MainMenu> 사용할 수도 있습니다를 다른 <xref:System.Windows.Forms.MainMenu>특정 조건을 서로 다른 메뉴 집합을 표시 해야 하는 응용 프로그램에 존재 하는 경우.</xref:System.Windows.Forms.MainMenu>"
  example:
  - "The following code example creates a <xref:System.Windows.Forms.MainMenu>, assigns two <xref:System.Windows.Forms.MenuItem> objects to the <xref:System.Windows.Forms.MainMenu> and binds it to a form. This example requires that you have a <xref:System.Windows.Forms.Form> created that is named `Form1`.  \n  \n [!code-cs[Classic MainMenu.MainMenu Example#1](~/add/codesnippet/csharp/p-system.windows.forms.f_13_1.cs)]\n [!code-vb[Classic MainMenu.MainMenu Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.f_13_1.vb)]\n [!code-cpp[Classic MainMenu.MainMenu Example#1](~/add/codesnippet/cpp/p-system.windows.forms.f_13_1.cpp)]"
  syntax:
    content: public System.Windows.Forms.MainMenu Menu { get; set; }
    return:
      type: System.Windows.Forms.MainMenu
      description: "A <xref href=&quot;System.Windows.Forms.MainMenu&quot;> </xref> 폼에 표시할 메뉴를 나타내는입니다."
  overload: System.Windows.Forms.Form.Menu*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.MenuComplete
  id: MenuComplete
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: MenuComplete
  nameWithType: Form.MenuComplete
  fullName: System.Windows.Forms.Form.MenuComplete
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "폼의 메뉴가 포커스를 잃을 때 발생 합니다."
  remarks: "이 이벤트는 수행 중인 명령에서 발생 하 고 메뉴가 포커스를 잃으면 메뉴 항목에에서 대 한 메뉴를 클릭할 때 발생 합니다. 이 이벤트를 사용 하 여 <xref:System.Windows.Forms.StatusBar>제어 또는 설정 및 해제에 <xref:System.Windows.Forms.ToolBar>.</xref:System.Windows.Forms.ToolBar> 에 단추</xref:System.Windows.Forms.StatusBar> 텍스트를 업데이트 하는 등 작업을 수행할 수 있습니다.       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the MenuComplete event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`. Then ensure that the event handler is associated with the MenuComplete event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#398](~/add/codesnippet/csharp/e-system.windows.forms.f_14_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#398](~/add/codesnippet/visualbasic/e-system.windows.forms.f_14_1.vb)]"
  syntax:
    content: public event EventHandler MenuComplete;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.MenuStart
  id: MenuStart
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: MenuStart
  nameWithType: Form.MenuStart
  fullName: System.Windows.Forms.Form.MenuStart
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "폼의 메뉴가 포커스를 받을 때 발생 합니다."
  remarks: "이 이벤트는 사용자가 메뉴에서 모든 메뉴 항목을 클릭할 때 발생 합니다. 설정 및 해제 메뉴에 액세스 하는 경우 사용자가 액세스 해서는 안 되는 양식에서 컨트롤 등의 작업을 수행 하려면이 이벤트를 사용할 수 있습니다.       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the MenuStart event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`. Then ensure that the event handler is associated with the MenuStart event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#399](~/add/codesnippet/csharp/e-system.windows.forms.f_20_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#399](~/add/codesnippet/visualbasic/e-system.windows.forms.f_20_1.vb)]"
  syntax:
    content: public event EventHandler MenuStart;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.MergedMenu
  id: MergedMenu
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: MergedMenu
  nameWithType: Form.MergedMenu
  fullName: System.Windows.Forms.Form.MergedMenu
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "폼의 병합 된 메뉴를 가져옵니다."
  remarks: "이 속성은 폼이 (mdi 다중) 다중 문서 인터페이스 자식 폼은 부모 폼의 메뉴가 해당 메뉴를 병합 하는 경우에 주로 사용 됩니다. 이 속성을 사용 하 여를 변경 하거나 메뉴 구조에 대 한 추가 MDI 응용 프로그램에서 현재 메뉴 구조를 가져올 수 있습니다. 된 병합 되지 않은 <xref:System.Windows.Forms.MainMenu>사용 하 여 폼에 할당 된 <xref:System.Windows.Forms.Form.Menu%2A>속성.</xref:System.Windows.Forms.Form.Menu%2A> </xref:System.Windows.Forms.MainMenu>"
  syntax:
    content: public System.Windows.Forms.MainMenu MergedMenu { get; }
    return:
      type: System.Windows.Forms.MainMenu
      description: "A <xref href=&quot;System.Windows.Forms.MainMenu&quot;> </xref> 폼의 병합 된 메뉴를 나타내는입니다."
  overload: System.Windows.Forms.Form.MergedMenu*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.MinimizeBox
  id: MinimizeBox
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: MinimizeBox
  nameWithType: Form.MinimizeBox
  fullName: System.Windows.Forms.Form.MinimizeBox
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "나타내는 값을 가져오거나 여부는 **최소화** 단추가 폼의 캡션 표시줄에 표시 됩니다."
  remarks: "A **최소화** 창을 아이콘으로 최소화 하기 위해 사용자가 단추를 사용 합니다. 표시 하는 **최소화** 단추를 설정 해야 양식의 <xref:System.Windows.Forms.Form.FormBorderStyle%2A>속성을 `FormBorderStyle.FixedSingle`, `FormBorderStyle.Sizable`, `FormBorderStyle.Fixed3D`, 또는 `FormBorderStyle.FixedDialog`.</xref:System.Windows.Forms.Form.FormBorderStyle%2A>      > [!NOTE] > 생성 런타임에 폼을 최소화 한 <xref:System.Windows.Forms.Control.Resize>이벤트.</xref:System.Windows.Forms.Control.Resize> <xref:System.Windows.Forms.Form.WindowState%2A>속성 창의 현재 상태를 반영 합니다.</xref:System.Windows.Forms.Form.WindowState%2A> 설정 하는 경우는 <xref:System.Windows.Forms.Form.WindowState%2A>속성을 `FormWindowState.Minimized`, 없이 MinimizeBox에 대 한 모든 설정이 적용 되는 폼이 최소화 및 <xref:System.Windows.Forms.Form.FormBorderStyle%2A>속성.</xref:System.Windows.Forms.Form.FormBorderStyle%2A> </xref:System.Windows.Forms.Form.WindowState%2A>"
  example:
  - "The following code example creates a new instance of a <xref:System.Windows.Forms.Form> and calls the <xref:System.Windows.Forms.Form.ShowDialog%2A> method to display the form as a dialog box. The example sets the <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.AcceptButton%2A>, <xref:System.Windows.Forms.Form.CancelButton%2A>, MinimizeBox, <xref:System.Windows.Forms.Form.MaximizeBox%2A>, and <xref:System.Windows.Forms.Form.StartPosition%2A> properties to change the appearance and functionality of the form to a dialog box. The example also uses the <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> method of the form's <xref:System.Windows.Forms.Control.Controls%2A> collection to add two <xref:System.Windows.Forms.Button> controls. The example uses the <xref:System.Windows.Forms.Form.HelpButton%2A> property to display a help button in the caption bar of the dialog box.  \n  \n [!code-cpp[Classic Form.AcceptButton Example#1](~/add/codesnippet/cpp/p-system.windows.forms.f_27_1.cpp)]\n [!code-cs[Classic Form.AcceptButton Example#1](~/add/codesnippet/csharp/p-system.windows.forms.f_27_1.cs)]\n [!code-vb[Classic Form.AcceptButton Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.f_27_1.vb)]"
  syntax:
    content: public bool MinimizeBox { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>표시 하는 **최소화** 폼; 단추를 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.Form.MinimizeBox*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.MinimumSize
  id: MinimumSize
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: MinimumSize
  nameWithType: Form.MinimumSize
  fullName: System.Windows.Forms.Form.MinimumSize
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "폼을 조정할 수 있는 최소 크기를 가져오거나 설정 합니다."
  remarks: "이 속성을 사용 하면 지정 된 최소 크기로 폼의 크기를 제한할 수 있습니다. 사용자가 원하지 않는 크기로 창 크기를 조정 하지 않도록 하려면이 기능을 사용할 수 있습니다. 이 속성은로 설정 하는 경우는 <xref:System.Drawing.Size>높이 및 너비를 폼 0 개체 Windows 설정도 넘어 없는 최소 크기를 가집니다.</xref:System.Drawing.Size>"
  syntax:
    content: public override System.Drawing.Size MinimumSize { get; set; }
    return:
      type: System.Drawing.Size
      description: "A <xref href=&quot;System.Drawing.Size&quot;> </xref> 폼에 대 한 최소 크기를 나타내는입니다."
  overload: System.Windows.Forms.Form.MinimumSize*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "내에서 너비 또는 높이의 값은 <xref href=&quot;System.Drawing.Size&quot;> </xref> 개체는&0; 보다 작은 합니다."
  platform:
  - net462
- uid: System.Windows.Forms.Form.MinimumSizeChanged
  id: MinimumSizeChanged
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: MinimumSizeChanged
  nameWithType: Form.MinimumSizeChanged
  fullName: System.Windows.Forms.Form.MinimumSizeChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 경우의 값은 <xref:System.Windows.Forms.Form.MinimumSize*>속성이 변경.</xref:System.Windows.Forms.Form.MinimumSize*>"
  remarks: "이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the MinimumSizeChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`. Then ensure that the event handler is associated with the MinimumSizeChanged event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#391](~/add/codesnippet/csharp/e-system.windows.forms.f_17_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#391](~/add/codesnippet/visualbasic/e-system.windows.forms.f_17_1.vb)]"
  syntax:
    content: public event EventHandler MinimumSizeChanged;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.Modal
  id: Modal
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: Modal
  nameWithType: Form.Modal
  fullName: System.Windows.Forms.Form.Modal
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "이 폼이 모달 형식으로 표시 되는지를 나타내는 값을 가져옵니다."
  remarks: "폼이 모달 형식으로 표시 합니다 (키보드 또는 마우스 클릭)을 입력 하지 않고 모달 폼에 있는 개체를 제외 하 고 발생할 수 있습니다. 프로그램 숨기 거 나 닫기를 모달 폼 (일반적으로 사용자의 일부 동작에 대 한 응답) 다른 폼에 입력 하기 전에 발생할 수 있습니다. 모달 형식으로 표시 되는 폼은 일반적으로 응용 프로그램에서 대화 상자로 사용 됩니다.       메서드 또는 속성에서 가져온 양식 모달 형식으로 표시 되어 있는지 여부를 확인 하려면이 속성을 사용할 수 있습니다.       표시 하려면 폼 모달 형식으로 사용 된 <xref:System.Windows.Forms.Form.ShowDialog%2A>메서드.</xref:System.Windows.Forms.Form.ShowDialog%2A>"
  example:
  - "The following code example uses the Modal property to determine if a form is displayed as a modal form. If it is not the <xref:System.Windows.Forms.Form.FormBorderStyle%2A> and <xref:System.Windows.Forms.Form.TopLevel%2A> properties are changed to make the form a non-top-level form with a tool window border.  \n  \n [!code-cpp[Form.Modal#1](~/add/codesnippet/cpp/p-system.windows.forms.f_20_1.cpp)]\n [!code-cs[Form.Modal#1](~/add/codesnippet/csharp/p-system.windows.forms.f_20_1.cs)]\n [!code-vb[Form.Modal#1](~/add/codesnippet/visualbasic/p-system.windows.forms.f_20_1.vb)]"
  syntax:
    content: public bool Modal { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>폼이 모달 형식으로 표시 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.Form.Modal*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.OnActivated(System.EventArgs)
  id: OnActivated(System.EventArgs)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: OnActivated(EventArgs)
  nameWithType: Form.OnActivated(EventArgs)
  fullName: System.Windows.Forms.Form.OnActivated(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Form.Activated&quot;> </xref> 이벤트입니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다.       OnActivated 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 파생된 클래스에서 이벤트를 처리 하는 기본 방법에는이 메서드를 재정의 합니다."
  syntax:
    content: protected virtual void OnActivated (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Form.OnActivated*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.OnBackgroundImageChanged(System.EventArgs)
  id: OnBackgroundImageChanged(System.EventArgs)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: OnBackgroundImageChanged(EventArgs)
  nameWithType: Form.OnBackgroundImageChanged(EventArgs)
  fullName: System.Windows.Forms.Form.OnBackgroundImageChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Control.BackgroundImageChanged&quot;> </xref> 이벤트입니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다.       OnBackgroundImageChanged 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected override void OnBackgroundImageChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>데이터가 들어 있는.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Form.OnBackgroundImageChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.OnBackgroundImageLayoutChanged(System.EventArgs)
  id: OnBackgroundImageLayoutChanged(System.EventArgs)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: OnBackgroundImageLayoutChanged(EventArgs)
  nameWithType: Form.OnBackgroundImageLayoutChanged(EventArgs)
  fullName: System.Windows.Forms.Form.OnBackgroundImageLayoutChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Control.BackgroundImageLayoutChanged&quot;> </xref> 이벤트입니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다.       OnBackgroundImageLayoutChanged 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected override void OnBackgroundImageLayoutChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Form.OnBackgroundImageLayoutChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.OnClosed(System.EventArgs)
  id: OnClosed(System.EventArgs)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: OnClosed(EventArgs)
  nameWithType: Form.OnClosed(EventArgs)
  fullName: System.Windows.Forms.Form.OnClosed(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Form.Closed&quot;> </xref> 이벤트입니다."
  remarks: "> [!CAUTION]> OnClosed 메서드는.NET Framework 버전 2.0;에서 사용 되지 않습니다. 사용 하 여는 <xref:System.Windows.Forms.Form.OnFormClosed%2A>메서드 대신.</xref:System.Windows.Forms.Form.OnFormClosed%2A>       이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다.       <xref:System.Windows.Forms.Form.OnFormClosed%2A>방법을 수 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할 수 있습니다.</xref:System.Windows.Forms.Form.OnFormClosed%2A> 파생된 클래스에서 이벤트를 처리 하는 기본 방법에는이 메서드를 재정의 합니다.      > [!CAUTION] > The OnClosed 및 <xref:System.Windows.Forms.Form.OnClosing%2A>메서드 호출 되지 않습니다는 <xref:System.Windows.Forms.Application.Exit%2A?displayProperty=fullName>메서드는 응용 프로그램을 종료 합니다.</xref:System.Windows.Forms.Application.Exit%2A?displayProperty=fullName> </xref:System.Windows.Forms.Form.OnClosing%2A> 유효성 검사 코드를 실행 해야 하는 이러한 방법 중 하나에 있으면 호출 해야는 <xref:System.Windows.Forms.Form.Close%2A?displayProperty=fullName>호출 하기 전에 개별적으로 열려 있는 각 폼에 대 한 메서드는 <xref:System.Windows.Forms.Application.Exit%2A>메서드.</xref:System.Windows.Forms.Application.Exit%2A> </xref:System.Windows.Forms.Form.Close%2A?displayProperty=fullName>"
  example:
  - "The following code example demonstrates how to override the OnClosed method in a class derived from <xref:System.Windows.Forms.Form> .  \n  \n [!code-cs[System.Drawing.PointsAndSizes#6](~/add/codesnippet/csharp/m-system.windows.forms.f_4_1.cs)]\n [!code-cpp[System.Drawing.PointsAndSizes#6](~/add/codesnippet/cpp/m-system.windows.forms.f_4_1.cpp)]\n [!code-vb[System.Drawing.PointsAndSizes#6](~/add/codesnippet/visualbasic/m-system.windows.forms.f_4_1.vb)]"
  syntax:
    content: protected virtual void OnClosed (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Form.OnClosed*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.OnClosing(System.ComponentModel.CancelEventArgs)
  id: OnClosing(System.ComponentModel.CancelEventArgs)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: OnClosing(CancelEventArgs)
  nameWithType: Form.OnClosing(CancelEventArgs)
  fullName: System.Windows.Forms.Form.OnClosing(CancelEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Form.Closing&quot;> </xref> 이벤트입니다."
  remarks: "> [!CAUTION]> OnClosing 메서드는.NET Framework 버전 2.0;에서 사용 되지 않습니다. 사용 하 여는 <xref:System.Windows.Forms.Form.OnFormClosing%2A>메서드 대신.</xref:System.Windows.Forms.Form.OnFormClosing%2A>       이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다.       OnClosing 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 파생된 클래스에서 이벤트를 처리 하는 기본 방법에는이 메서드를 재정의 합니다.      > [!CAUTION] >는 <xref:System.Windows.Forms.Form.OnClosed%2A>를 OnClosing 메서드가 호출 되지 않습니다 됩니다는 <xref:System.Windows.Forms.Application.Exit%2A?displayProperty=fullName>메서드는 응용 프로그램을 종료 합니다.</xref:System.Windows.Forms.Application.Exit%2A?displayProperty=fullName> </xref:System.Windows.Forms.Form.OnClosed%2A> 유효성 검사 코드를 실행 해야 하는 이러한 방법 중 하나에 있으면 호출 해야는 <xref:System.Windows.Forms.Form.Close%2A?displayProperty=fullName>호출 하기 전에 개별적으로 열려 있는 각 폼에 대 한 메서드는 <xref:System.Windows.Forms.Application.Exit%2A>메서드.</xref:System.Windows.Forms.Application.Exit%2A> </xref:System.Windows.Forms.Form.Close%2A?displayProperty=fullName>"
  example:
  - "The following code example uses <xref:System.Windows.Forms.Form.Closing> to test if the text in a <xref:System.Windows.Forms.TextBox> has changed. If it has, the user is asked whether to save the changes to a file.  \n  \n [!code-cs[Form.Closing#1](~/add/codesnippet/csharp/m-system.windows.forms.f_8_1.cs)]\n [!code-vb[Form.Closing#1](~/add/codesnippet/visualbasic/m-system.windows.forms.f_8_1.vb)]\n [!code-cpp[Form.Closing#1](~/add/codesnippet/cpp/m-system.windows.forms.f_8_1.cpp)]"
  syntax:
    content: protected virtual void OnClosing (System.ComponentModel.CancelEventArgs e);
    parameters:
    - id: e
      type: System.ComponentModel.CancelEventArgs
      description: "A <xref:System.ComponentModel.CancelEventArgs>이벤트 데이터를 포함 하는.</xref:System.ComponentModel.CancelEventArgs>"
  overload: System.Windows.Forms.Form.OnClosing*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.OnCreateControl
  id: OnCreateControl
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: OnCreateControl()
  nameWithType: Form.OnCreateControl()
  fullName: System.Windows.Forms.Form.OnCreateControl()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref uid=&quot;langword_csharp_CreateControl&quot; name=&quot;CreateControl&quot; href=&quot;&quot;> </xref> 이벤트입니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: protected override void OnCreateControl ();
    parameters: []
  overload: System.Windows.Forms.Form.OnCreateControl*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.OnDeactivate(System.EventArgs)
  id: OnDeactivate(System.EventArgs)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: OnDeactivate(EventArgs)
  nameWithType: Form.OnDeactivate(EventArgs)
  fullName: System.Windows.Forms.Form.OnDeactivate(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Form.Deactivate&quot;> </xref> 이벤트입니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다.       OnDeactivate 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnDeactivate (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Form.OnDeactivate*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.OnEnabledChanged(System.EventArgs)
  id: OnEnabledChanged(System.EventArgs)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: OnEnabledChanged(EventArgs)
  nameWithType: Form.OnEnabledChanged(EventArgs)
  fullName: System.Windows.Forms.Form.OnEnabledChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Control.EnabledChanged&quot;> </xref> 이벤트입니다."
  syntax:
    content: protected override void OnEnabledChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Form.OnEnabledChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.OnEnter(System.EventArgs)
  id: OnEnter(System.EventArgs)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: OnEnter(EventArgs)
  nameWithType: Form.OnEnter(EventArgs)
  fullName: System.Windows.Forms.Form.OnEnter(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Control.Enter&quot;> </xref> 이벤트입니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다.       OnEnter 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected override void OnEnter (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Form.OnEnter*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.OnFontChanged(System.EventArgs)
  id: OnFontChanged(System.EventArgs)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: OnFontChanged(EventArgs)
  nameWithType: Form.OnFontChanged(EventArgs)
  fullName: System.Windows.Forms.Form.OnFontChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Control.FontChanged&quot;> </xref> 이벤트입니다."
  syntax:
    content: protected override void OnFontChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Form.OnFontChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)
  id: OnFormClosed(System.Windows.Forms.FormClosedEventArgs)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: OnFormClosed(FormClosedEventArgs)
  nameWithType: Form.OnFormClosed(FormClosedEventArgs)
  fullName: System.Windows.Forms.Form.OnFormClosed(FormClosedEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Form.FormClosed&quot;> </xref> 이벤트입니다."
  remarks: "<xref:System.Windows.Forms.Form.OnFormClosing%2A> <xref:System.Windows.Forms.Application.OpenForms%2A> <xref:System.Windows.Forms.Application>.</xref:System.Windows.Forms.Application> 연결된의 컬렉션</xref:System.Windows.Forms.Application.OpenForms%2A> 에서 현재 폼을 제거 하는 메서드</xref:System.Windows.Forms.Form.OnFormClosing%2A>       이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다.       OnFormClosed 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 파생된 클래스에서 이벤트를 처리 하는 기본 방법에는이 메서드를 재정의 합니다."
  syntax:
    content: protected virtual void OnFormClosed (System.Windows.Forms.FormClosedEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.FormClosedEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.FormClosedEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Windows.Forms.Form.OnFormClosed*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)
  id: OnFormClosing(System.Windows.Forms.FormClosingEventArgs)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: OnFormClosing(FormClosingEventArgs)
  nameWithType: Form.OnFormClosing(FormClosingEventArgs)
  fullName: System.Windows.Forms.Form.OnFormClosing(FormClosingEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Form.FormClosing&quot;> </xref> 이벤트입니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다.       OnFormClosing 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnFormClosing (System.Windows.Forms.FormClosingEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.FormClosingEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.FormClosingEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Windows.Forms.Form.OnFormClosing*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.OnHandleCreated(System.EventArgs)
  id: OnHandleCreated(System.EventArgs)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: OnHandleCreated(EventArgs)
  nameWithType: Form.OnHandleCreated(EventArgs)
  fullName: System.Windows.Forms.Form.OnHandleCreated(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Control.HandleCreated&quot;> </xref> 이벤트입니다."
  syntax:
    content: protected override void OnHandleCreated (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Form.OnHandleCreated*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.OnHandleDestroyed(System.EventArgs)
  id: OnHandleDestroyed(System.EventArgs)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: OnHandleDestroyed(EventArgs)
  nameWithType: Form.OnHandleDestroyed(EventArgs)
  fullName: System.Windows.Forms.Form.OnHandleDestroyed(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Control.HandleDestroyed&quot;> </xref> 이벤트입니다."
  syntax:
    content: protected override void OnHandleDestroyed (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Form.OnHandleDestroyed*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.OnHelpButtonClicked(System.ComponentModel.CancelEventArgs)
  id: OnHelpButtonClicked(System.ComponentModel.CancelEventArgs)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: OnHelpButtonClicked(CancelEventArgs)
  nameWithType: Form.OnHelpButtonClicked(CancelEventArgs)
  fullName: System.Windows.Forms.Form.OnHelpButtonClicked(CancelEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Form.HelpButtonClicked&quot;> </xref> 이벤트입니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다.       OnHelpButtonClicked 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnHelpButtonClicked (System.ComponentModel.CancelEventArgs e);
    parameters:
    - id: e
      type: System.ComponentModel.CancelEventArgs
      description: "A <xref:System.ComponentModel.CancelEventArgs>이벤트 데이터를 포함 하는.</xref:System.ComponentModel.CancelEventArgs>"
  overload: System.Windows.Forms.Form.OnHelpButtonClicked*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.OnInputLanguageChanged(System.Windows.Forms.InputLanguageChangedEventArgs)
  id: OnInputLanguageChanged(System.Windows.Forms.InputLanguageChangedEventArgs)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: OnInputLanguageChanged(InputLanguageChangedEventArgs)
  nameWithType: Form.OnInputLanguageChanged(InputLanguageChangedEventArgs)
  fullName: System.Windows.Forms.Form.OnInputLanguageChanged(InputLanguageChangedEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Form.InputLanguageChanged&quot;> </xref> 이벤트입니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다.       OnInputLanguageChanged 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnInputLanguageChanged (System.Windows.Forms.InputLanguageChangedEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.InputLanguageChangedEventArgs
      description: "<xref href=&quot;System.Windows.Forms.InputLanguageChangedEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Windows.Forms.Form.OnInputLanguageChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.OnInputLanguageChanging(System.Windows.Forms.InputLanguageChangingEventArgs)
  id: OnInputLanguageChanging(System.Windows.Forms.InputLanguageChangingEventArgs)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: OnInputLanguageChanging(InputLanguageChangingEventArgs)
  nameWithType: Form.OnInputLanguageChanging(InputLanguageChangingEventArgs)
  fullName: System.Windows.Forms.Form.OnInputLanguageChanging(InputLanguageChangingEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Form.InputLanguageChanging&quot;> </xref> 이벤트입니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다.       OnInputLanguageChanging 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnInputLanguageChanging (System.Windows.Forms.InputLanguageChangingEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.InputLanguageChangingEventArgs
      description: "<xref href=&quot;System.Windows.Forms.InputLanguageChangingEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Windows.Forms.Form.OnInputLanguageChanging*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.OnLayout(System.Windows.Forms.LayoutEventArgs)
  id: OnLayout(System.Windows.Forms.LayoutEventArgs)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: OnLayout(LayoutEventArgs)
  nameWithType: Form.OnLayout(LayoutEventArgs)
  fullName: System.Windows.Forms.Form.OnLayout(LayoutEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Control.Layout&quot;> </xref> 이벤트입니다."
  syntax:
    content: protected override void OnLayout (System.Windows.Forms.LayoutEventArgs levent);
    parameters:
    - id: levent
      type: System.Windows.Forms.LayoutEventArgs
      description: "이벤트 데이터입니다."
  overload: System.Windows.Forms.Form.OnLayout*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.OnLoad(System.EventArgs)
  id: OnLoad(System.EventArgs)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: OnLoad(EventArgs)
  nameWithType: Form.OnLoad(EventArgs)
  fullName: System.Windows.Forms.Form.OnLoad(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Form.Load&quot;> </xref> 이벤트입니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다.       OnLoad 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnLoad (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Form.OnLoad*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.OnMaximizedBoundsChanged(System.EventArgs)
  id: OnMaximizedBoundsChanged(System.EventArgs)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: OnMaximizedBoundsChanged(EventArgs)
  nameWithType: Form.OnMaximizedBoundsChanged(EventArgs)
  fullName: System.Windows.Forms.Form.OnMaximizedBoundsChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Form.MaximizedBoundsChanged&quot;> </xref> 이벤트입니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다.       OnMaximizedBoundsChanged 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnMaximizedBoundsChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Form.OnMaximizedBoundsChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.OnMaximumSizeChanged(System.EventArgs)
  id: OnMaximumSizeChanged(System.EventArgs)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: OnMaximumSizeChanged(EventArgs)
  nameWithType: Form.OnMaximumSizeChanged(EventArgs)
  fullName: System.Windows.Forms.Form.OnMaximumSizeChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Form.MaximumSizeChanged&quot;> </xref> 이벤트입니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다.       OnMaximumSizeChanged 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnMaximumSizeChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Form.OnMaximumSizeChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.OnMdiChildActivate(System.EventArgs)
  id: OnMdiChildActivate(System.EventArgs)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: OnMdiChildActivate(EventArgs)
  nameWithType: Form.OnMdiChildActivate(EventArgs)
  fullName: System.Windows.Forms.Form.OnMdiChildActivate(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Form.MdiChildActivate&quot;> </xref> 이벤트입니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다.       OnMdiChildActivate 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnMdiChildActivate (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Form.OnMdiChildActivate*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.OnMenuComplete(System.EventArgs)
  id: OnMenuComplete(System.EventArgs)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: OnMenuComplete(EventArgs)
  nameWithType: Form.OnMenuComplete(EventArgs)
  fullName: System.Windows.Forms.Form.OnMenuComplete(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Form.MenuComplete&quot;> </xref> 이벤트입니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다.       OnMenuComplete 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnMenuComplete (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Form.OnMenuComplete*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.OnMenuStart(System.EventArgs)
  id: OnMenuStart(System.EventArgs)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: OnMenuStart(EventArgs)
  nameWithType: Form.OnMenuStart(EventArgs)
  fullName: System.Windows.Forms.Form.OnMenuStart(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Form.MenuStart&quot;> </xref> 이벤트입니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다.       OnMenuStart 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnMenuStart (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Form.OnMenuStart*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.OnMinimumSizeChanged(System.EventArgs)
  id: OnMinimumSizeChanged(System.EventArgs)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: OnMinimumSizeChanged(EventArgs)
  nameWithType: Form.OnMinimumSizeChanged(EventArgs)
  fullName: System.Windows.Forms.Form.OnMinimumSizeChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Form.MinimumSizeChanged&quot;> </xref> 이벤트입니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다.       OnMinimumSizeChanged 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnMinimumSizeChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Form.OnMinimumSizeChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.OnPaint(System.Windows.Forms.PaintEventArgs)
  id: OnPaint(System.Windows.Forms.PaintEventArgs)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: OnPaint(PaintEventArgs)
  nameWithType: Form.OnPaint(PaintEventArgs)
  fullName: System.Windows.Forms.Form.OnPaint(PaintEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Control.Paint&quot;> </xref> 이벤트입니다."
  syntax:
    content: protected override void OnPaint (System.Windows.Forms.PaintEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.PaintEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.PaintEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Windows.Forms.Form.OnPaint*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.OnResize(System.EventArgs)
  id: OnResize(System.EventArgs)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: OnResize(EventArgs)
  nameWithType: Form.OnResize(EventArgs)
  fullName: System.Windows.Forms.Form.OnResize(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Control.Resize&quot;> </xref> 이벤트입니다."
  syntax:
    content: protected override void OnResize (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Form.OnResize*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.OnResizeBegin(System.EventArgs)
  id: OnResizeBegin(System.EventArgs)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: OnResizeBegin(EventArgs)
  nameWithType: Form.OnResizeBegin(EventArgs)
  fullName: System.Windows.Forms.Form.OnResizeBegin(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Form.ResizeBegin&quot;> </xref> 이벤트입니다."
  remarks: "<xref:System.Windows.Forms.Form.ResizeBegin>경우에 이벤트를 발생는 폼의 <xref:System.Windows.Forms.Control.CanRaiseEvents%2A>속성이로 설정 되어 `true`.</xref:System.Windows.Forms.Control.CanRaiseEvents%2A> </xref:System.Windows.Forms.Form.ResizeBegin>       이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다.       OnResizeBegin 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnResizeBegin (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "A <xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Form.OnResizeBegin*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.OnResizeEnd(System.EventArgs)
  id: OnResizeEnd(System.EventArgs)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: OnResizeEnd(EventArgs)
  nameWithType: Form.OnResizeEnd(EventArgs)
  fullName: System.Windows.Forms.Form.OnResizeEnd(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Form.ResizeEnd&quot;> </xref> 이벤트입니다."
  remarks: "<xref:System.Windows.Forms.Form.ResizeEnd>경우에 이벤트를 발생는 폼의 <xref:System.Windows.Forms.Control.CanRaiseEvents%2A>속성이로 설정 되어 `true`.</xref:System.Windows.Forms.Control.CanRaiseEvents%2A> </xref:System.Windows.Forms.Form.ResizeEnd>       이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다.       OnResizeEnd 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnResizeEnd (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "A <xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Form.OnResizeEnd*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.OnRightToLeftLayoutChanged(System.EventArgs)
  id: OnRightToLeftLayoutChanged(System.EventArgs)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: OnRightToLeftLayoutChanged(EventArgs)
  nameWithType: Form.OnRightToLeftLayoutChanged(EventArgs)
  fullName: System.Windows.Forms.Form.OnRightToLeftLayoutChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Form.RightToLeftLayoutChanged&quot;> </xref> 이벤트입니다."
  remarks: "현재 폼 또는 부모 중 하나는 리소스를 삭제 하는 경우 OnRightToLeftLayoutChanged 메서드는 작업을 수행 하지 않고 반환 합니다. 경우는 <xref:System.Windows.Forms.Control.RightToLeft%2A>폼의 속성 값이 <xref:System.Windows.Forms.RightToLeft>, 호출을 통해 폼과 해당 자식 컨트롤의 핸들은 다시 다음는 <xref:System.Windows.Forms.Control.RecreateHandle%2A>메서드.</xref:System.Windows.Forms.Control.RecreateHandle%2A> </xref:System.Windows.Forms.RightToLeft> </xref:System.Windows.Forms.Control.RightToLeft%2A>       이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다.       OnRightToLeftLayoutChanged 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnRightToLeftLayoutChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Form.OnRightToLeftLayoutChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.OnShown(System.EventArgs)
  id: OnShown(System.EventArgs)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: OnShown(EventArgs)
  nameWithType: Form.OnShown(EventArgs)
  fullName: System.Windows.Forms.Form.OnShown(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Form.Shown&quot;> </xref> 이벤트입니다."
  remarks: "<xref:System.Windows.Forms.Form.Shown>이벤트는 폼이 처음 표시 될 때마다 발생 합니다.</xref:System.Windows.Forms.Form.Shown>       이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다.       OnShown 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnShown (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "A <xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Form.OnShown*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.OnStyleChanged(System.EventArgs)
  id: OnStyleChanged(System.EventArgs)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: OnStyleChanged(EventArgs)
  nameWithType: Form.OnStyleChanged(EventArgs)
  fullName: System.Windows.Forms.Form.OnStyleChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Control.StyleChanged&quot;> </xref> 이벤트입니다."
  syntax:
    content: protected override void OnStyleChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Form.OnStyleChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.OnTextChanged(System.EventArgs)
  id: OnTextChanged(System.EventArgs)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: OnTextChanged(EventArgs)
  nameWithType: Form.OnTextChanged(EventArgs)
  fullName: System.Windows.Forms.Form.OnTextChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Control.TextChanged&quot;> </xref> 이벤트입니다."
  syntax:
    content: protected override void OnTextChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Form.OnTextChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.OnVisibleChanged(System.EventArgs)
  id: OnVisibleChanged(System.EventArgs)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: OnVisibleChanged(EventArgs)
  nameWithType: Form.OnVisibleChanged(EventArgs)
  fullName: System.Windows.Forms.Form.OnVisibleChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.Control.VisibleChanged&quot;> </xref> 이벤트입니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다.       OnVisibleChanged 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected override void OnVisibleChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Form.OnVisibleChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.Opacity
  id: Opacity
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: Opacity
  nameWithType: Form.Opacity
  fullName: System.Windows.Forms.Form.Opacity
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "폼의 불투명도 가져오거나 설정 합니다."
  remarks: "불투명도 속성을 사용 하는 폼과 해당 컨트롤에 대 한 투명도 수준을 지정할 수 있습니다. 이 속성을 100% (1.00) 보다 작은 값으로 설정, 테두리를 비롯 한 전체 양식은 더욱 투명해 집니다. 이 속성 값이 0% (0.00)을 설정 하면 폼 완전히 표시 되지 않습니다. 서로 다른 수준의 투명도 제공 하거나 나타나거나 폼을 단계적으로 변경 하는 등의 효과 제공 하려면이 속성을 사용할 수 있습니다. 예를 들어 0% (0.00)의 값에 불투명도 속성을 설정 하 고 100% (1.00)에 도달할 때까지 값을 점차적으로 증가 하 여 폼 보기에 단계 수 있습니다.       제공 하는 투명도에서 다른 불투명도 <xref:System.Windows.Forms.Form.TransparencyKey%2A>, 폼 수만 있게 해줍니다 며, 해당 컨트롤 완전히 투명 한 경우 같은 색에 지정 된 값으로는 <xref:System.Windows.Forms.Form.TransparencyKey%2A>속성.</xref:System.Windows.Forms.Form.TransparencyKey%2A> </xref:System.Windows.Forms.Form.TransparencyKey%2A>       이 속성은 실행할 수 <xref:System.Windows.Forms.Form.RightToLeftLayout%2A>은 `true`.</xref:System.Windows.Forms.Form.RightToLeftLayout%2A>       계층화 된 Windows API에 도입 된 Windows 2000 불투명도 속성에 따라 달라 집니다. 자세한 내용은 &quot;계층화 된 Windows:: A 새로운 방식으로를 사용 하 여 투명도 및 투명도 효과에 Windows&quot; 응용 프로그램 참조의 Platform SDK 설명서에 [http://msdn.microsoft.com](http://msdn.microsoft.com/)합니다."
  example:
  - "The following code example demonstrates how to create a form that is displayed with an opacity level of 75 percent. The code example creates a new form that is positioned in the center of the screen with an Opacity property set to change the opacity level of the form. The code example also sets the <xref:System.Windows.Forms.Form.Size%2A> property to provide a larger sized form than the default size of the form. This code example was written under the assumption that the method defined in this example is called from another form in an event handler or other method.  \n  \n [!code-cpp[Form.Opacity#1](~/add/codesnippet/cpp/p-system.windows.forms.f_21_1.cpp)]\n [!code-cs[Form.Opacity#1](~/add/codesnippet/csharp/p-system.windows.forms.f_21_1.cs)]\n [!code-vb[Form.Opacity#1](~/add/codesnippet/visualbasic/p-system.windows.forms.f_21_1.vb)]"
  syntax:
    content: public double Opacity { get; set; }
    return:
      type: System.Double
      description: "폼에 대 한 불투명도 수준입니다. 기본값은 1.00입니다."
  overload: System.Windows.Forms.Form.Opacity*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.OwnedForms
  id: OwnedForms
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: OwnedForms
  nameWithType: Form.OwnedForms
  fullName: System.Windows.Forms.Form.OwnedForms
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "배열을 가져옵니다 <xref href=&quot;System.Windows.Forms.Form&quot;> </xref> 이 폼에서 소유 하 고 있는 모든 폼을 나타내는 개체입니다."
  remarks: "이 속성을이 폼에서 소유 하 고 있는 모든 폼을 포함 하는 배열을 반환 합니다. 다른 폼에 소유 하는 폼을 하려면 호출 된 <xref:System.Windows.Forms.Form.AddOwnedForm%2A>메서드.</xref:System.Windows.Forms.Form.AddOwnedForm%2A> 될 때까지 소유 소유자 폼에 할당 된 상태로 유지 됩니다는 <xref:System.Windows.Forms.Form.RemoveOwnedForm%2A>메서드를 호출 합니다.</xref:System.Windows.Forms.Form.RemoveOwnedForm%2A> 설정 하 여 다른가 소유 하는 폼을 만들 수도 있습니다는 <xref:System.Windows.Forms.Form.Owner%2A>소유자 폼에 대 한 참조를 사용 하 여 속성.</xref:System.Windows.Forms.Form.Owner%2A>       폼을 다른 폼에서 소유 하는 경우 종료 되었거나 소유자 양식으로 숨겨집니다. 예를 들어 라는 폼 `Form2` 이라는 폼에서 소유 하는 `Form1`합니다. 경우 `Form1` 닫히거나을 최소화 하 고 `Form2` 도 닫히거나 숨겨집니다. 소유 된 폼의 소유자 폼 뒤 표시 되지 됩니다. 찾기 등의 windows에 대 한 소유 된 폼을 사용할 수 있으며 소유자 폼을 선택한 경우 소유자 폼 뒤 표시 되지 않아야 하는 창과 바꿀 수 있습니다.      > [!NOTE] > 폼이 (mdi 다중) 다중 문서 인터페이스 부모 폼이이 속성은 현재 열려 있는 MDI 자식 폼을 제외 하 고 표시 되는 모든 폼을 반환 합니다. MDI 부모 폼에서 열려 있는 MDI 자식 폼을 가져오려면는 <xref:System.Windows.Forms.Form.MdiChildren%2A>속성.</xref:System.Windows.Forms.Form.MdiChildren%2A>"
  example:
  - "The following code example demonstrates how to use the OwnedForms property to modify all forms owned by the owner form. The first method in the example adds forms to the array of owned forms associated with the owned form. The second method loops through all owned forms and changes the caption. This example requires that both methods are called by an event or other method of a form.  \n  \n [!code-vb[Form.OwnedForms#1](~/add/codesnippet/visualbasic/p-system.windows.forms.f_33_1.vb)]\n [!code-cs[Form.OwnedForms#1](~/add/codesnippet/csharp/p-system.windows.forms.f_33_1.cs)]\n [!code-cpp[Form.OwnedForms#1](~/add/codesnippet/cpp/p-system.windows.forms.f_33_1.cpp)]"
  syntax:
    content: public System.Windows.Forms.Form[] OwnedForms { get; }
    return:
      type: System.Windows.Forms.Form[]
      description: "A <xref href=&quot;System.Windows.Forms.Form&quot;> </xref> 이 폼에 소유 된 폼을 나타내는 배열입니다."
  overload: System.Windows.Forms.Form.OwnedForms*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.Owner
  id: Owner
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: Owner
  nameWithType: Form.Owner
  fullName: System.Windows.Forms.Form.Owner
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "이 폼을 소유 하는 폼을 가져오거나 설정 합니다."
  remarks: "다른 폼에 소유 하는 폼을 하려면 소유자가 될 폼에 대 한 참조의 소유자 속성을 할당 합니다.       폼을 다른 폼에서 소유 하는 경우 종료 되었거나 소유자 양식으로 숨겨집니다. 예를 들어 라는 폼 `Form2` 이라는 폼에서 소유 하는 `Form1`합니다. 경우 `Form1` 닫히거나을 최소화 하 고 `Form2` 도 닫히거나 숨겨집니다. 소유 된 폼의 소유자 폼 뒤 표시 되지 됩니다. 찾기 등의 windows에 대 한 소유 된 폼을 사용할 수 있으며 기존 소유자 폼을 선택한 경우 표시 되어야 하는 windows 수 있습니다. 부모 폼에서 소유 하는 폼을 확인 하려면 사용 하 여는 <xref:System.Windows.Forms.Form.OwnedForms%2A>속성.</xref:System.Windows.Forms.Form.OwnedForms%2A>"
  syntax:
    content: public System.Windows.Forms.Form Owner { get; set; }
    return:
      type: System.Windows.Forms.Form
      description: "A <xref href=&quot;System.Windows.Forms.Form&quot;> </xref> 이 폼의 소유자가 있는 폼을 나타내는입니다."
  overload: System.Windows.Forms.Form.Owner*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "최상위 창 소유자를 가질 수 없습니다."
  platform:
  - net462
- uid: System.Windows.Forms.Form.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)
  id: ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: ProcessCmdKey(Message,Keys)
  nameWithType: Form.ProcessCmdKey(Message,Keys)
  fullName: System.Windows.Forms.Form.ProcessCmdKey(Message,Keys)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "명령 키를 처리 합니다."
  remarks: "메서드가 ProcessCmdKey 재정의 기본 <xref:System.Windows.Forms.ContainerControl.ProcessCmdKey%2A?displayProperty=fullName>구현 주 메뉴 명령 키 및 MDI 액셀러레이터의 추가 처리 작업을 제공 합니다.</xref:System.Windows.Forms.ContainerControl.ProcessCmdKey%2A?displayProperty=fullName>       트래핑 키 입력에 대 한 정보에 대 한 참조 &quot;Visual C#을 사용 하 여 컨트롤에서 키 입력 트래핑 하는 방법&quot; 및 &quot;Visual Basic.NET을 사용 하 여.NET 컨트롤에서 키 입력 트래핑 하는 방법&quot; http://support.microsoft.com에서 Microsoft 기술 자료에서."
  syntax:
    content: protected override bool ProcessCmdKey (ref System.Windows.Forms.Message msg, System.Windows.Forms.Keys keyData);
    parameters:
    - id: msg
      type: System.Windows.Forms.Message
      description: "A <xref href=&quot;System.Windows.Forms.Message&quot;> </xref>, 처리할 Win32 메시지를 나타내는 참조로 전달 합니다."
    - id: keyData
      type: System.Windows.Forms.Keys
      description: "중 하나는 <xref href=&quot;System.Windows.Forms.Keys&quot;> </xref> 처리할 키를 나타내는 값입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>키가 처리 하 고 컨트롤이 사용 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 추가로 처리할 수 있도록 합니다."
  overload: System.Windows.Forms.Form.ProcessCmdKey*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.ProcessDialogChar(System.Char)
  id: ProcessDialogChar(System.Char)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: ProcessDialogChar(Char)
  nameWithType: Form.ProcessDialogChar(Char)
  fullName: System.Windows.Forms.Form.ProcessDialogChar(Char)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "대화 상자 문자를 처리합니다."
  syntax:
    content: protected override bool ProcessDialogChar (char charCode);
    parameters:
    - id: charCode
      type: System.Char
      description: "처리할 문자입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>컨트롤이 문자를 처리 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.Form.ProcessDialogChar*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.ProcessDialogKey(System.Windows.Forms.Keys)
  id: ProcessDialogKey(System.Windows.Forms.Keys)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: ProcessDialogKey(Keys)
  nameWithType: Form.ProcessDialogKey(Keys)
  fullName: System.Windows.Forms.Form.ProcessDialogKey(Keys)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "대화 상자 키를 처리합니다."
  remarks: "메서드가 호출 재정의 기본 <xref:System.Windows.Forms.ContainerControl.ProcessDialogKey%2A?displayProperty=fullName>구현 리턴 및 이스케이프 키 대화 상자에서 추가 처리 작업을 제공 합니다.</xref:System.Windows.Forms.ContainerControl.ProcessDialogKey%2A?displayProperty=fullName> Alt 키 또는 제어 한정자를 포함 하는 키 입력 없음 처리를 수행 하는 메서드."
  syntax:
    content: protected override bool ProcessDialogKey (System.Windows.Forms.Keys keyData);
    parameters:
    - id: keyData
      type: System.Windows.Forms.Keys
      description: "중 하나는 <xref href=&quot;System.Windows.Forms.Keys&quot;> </xref> 처리할 키를 나타내는 값입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>키가 처리 하 고 컨트롤이 사용 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 추가로 처리할 수 있도록 합니다."
  overload: System.Windows.Forms.Form.ProcessDialogKey*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.ProcessKeyPreview(System.Windows.Forms.Message@)
  id: ProcessKeyPreview(System.Windows.Forms.Message@)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: ProcessKeyPreview(Message)
  nameWithType: Form.ProcessKeyPreview(Message)
  fullName: System.Windows.Forms.Form.ProcessKeyPreview(Message)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "키보드 메시지를 미리 봅니다."
  syntax:
    content: protected override bool ProcessKeyPreview (ref System.Windows.Forms.Message m);
    parameters:
    - id: m
      type: System.Windows.Forms.Message
      description: "A <xref href=&quot;System.Windows.Forms.Message&quot;> </xref>, 처리할 창 메시지를 나타내는 참조로 전달 합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>컨트롤이 메시지를 처리 하면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.Form.ProcessKeyPreview*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.ProcessMnemonic(System.Char)
  id: ProcessMnemonic(System.Char)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: ProcessMnemonic(Char)
  nameWithType: Form.ProcessMnemonic(Char)
  fullName: System.Windows.Forms.Form.ProcessMnemonic(Char)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "니모닉 문자를 처리 합니다."
  syntax:
    content: protected override bool ProcessMnemonic (char charCode);
    parameters:
    - id: charCode
      type: System.Char
      description: "처리할 문자입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>컨트롤이 문자를 니모닉으로 처리 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.Form.ProcessMnemonic*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.ProcessTabKey(System.Boolean)
  id: ProcessTabKey(System.Boolean)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: ProcessTabKey(Boolean)
  nameWithType: Form.ProcessTabKey(Boolean)
  fullName: System.Windows.Forms.Form.ProcessTabKey(Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "사용 가능한 다음 컨트롤을 선택 하 고 활성 컨트롤로 만듭니다."
  syntax:
    content: protected override bool ProcessTabKey (bool forward);
    parameters:
    - id: forward
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ContainerControl의 컨트롤 전체를 순환 하려면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>컨트롤이 선택 되 면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.Form.ProcessTabKey*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.RemoveOwnedForm(System.Windows.Forms.Form)
  id: RemoveOwnedForm(System.Windows.Forms.Form)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: RemoveOwnedForm(Form)
  nameWithType: Form.RemoveOwnedForm(Form)
  fullName: System.Windows.Forms.Form.RemoveOwnedForm(Form)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "이 폼에서 소유 된 폼을 제거합니다."
  remarks: "소유자 폼에 할당 된 RemoveOwnedForm 메서드를 호출할 때까지 소유 상태로 유지 됩니다. 소유 된 폼 소유 된 폼 목록에서이 메서드 제거도 설정 소유자 폼 `null`합니다."
  syntax:
    content: public void RemoveOwnedForm (System.Windows.Forms.Form ownedForm);
    parameters:
    - id: ownedForm
      type: System.Windows.Forms.Form
      description: "A <xref href=&quot;System.Windows.Forms.Form&quot;> </xref> 소유 된 폼이이 폼에 대 한 목록에서 제거할 폼을 나타내는입니다."
  overload: System.Windows.Forms.Form.RemoveOwnedForm*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.ResizeBegin
  id: ResizeBegin
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: ResizeBegin
  nameWithType: Form.ResizeBegin
  fullName: System.Windows.Forms.Form.ResizeBegin
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "폼 크기 조정 모드로 들어가면 발생 합니다."
  remarks: "ResizeBegin 이벤트는 사용자가 일반적으로 클릭 하 고 끌어서 테두리 또는 폼의 오른쪽 아래 모서리에 있는 크기 조정 그립 중 하나는 폼 크기를 조정 하기 시작할 때 발생 합니다. 이 작업 크기 조정 작업이 완료 될 때까지 크기 조정 모달 루프에 폼을 넣습니다. 크기 조정 작업 중에 다음과 같은 이벤트 집합이 발생 되는 일반적으로: 1입니다.  단일 ResizeBegin 이벤트 처럼 폼 크기 조정 모드로 들어가면 발생 합니다.      2.  0 개 이상의 쌍 <xref:System.Windows.Forms.Control.Resize>및 <xref:System.Windows.Forms.Control.SizeChanged>폼의 이벤트가 발생할 <xref:System.Windows.Forms.Form.Size%2A>수정 됩니다.</xref:System.Windows.Forms.Form.Size%2A> </xref:System.Windows.Forms.Control.SizeChanged> </xref:System.Windows.Forms.Control.Resize>      3.  단일 <xref:System.Windows.Forms.Form.ResizeEnd>폼 크기 조정 모드를 종료 이벤트가 발생 합니다.</xref:System.Windows.Forms.Form.ResizeEnd>      > [!NOTE] >을 클릭 하기만 하는 테두리에 끌거나 크기 조정 그립은 ResizeBegin 생성 됩니다 및 <xref:System.Windows.Forms.Form.ResizeEnd>이벤트 중간 단계의 없이 <xref:System.Windows.Forms.Control.Resize>및 <xref:System.Windows.Forms.Control.SizeChanged>이벤트 쌍.</xref:System.Windows.Forms.Control.SizeChanged> </xref:System.Windows.Forms.Control.Resize> </xref:System.Windows.Forms.Form.ResizeEnd>       ResizeBegin 및 <xref:System.Windows.Forms.Form.ResizeEnd>이벤트 쌍은 일반적으로 클릭 하 고 끌어서 캡션 표시줄에 폼을 이동할 때에 발생</xref:System.Windows.Forms.Form.ResizeEnd> 이러한 이벤트에서 생성 되지 않은 폼의 프로그래밍 방식으로 조작 예를 들어 변경 하 여는 <xref:System.Windows.Forms.Form.Size%2A>또는 <xref:System.Windows.Forms.Control.Location%2A>속성.</xref:System.Windows.Forms.Control.Location%2A> </xref:System.Windows.Forms.Form.Size%2A>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the ResizeBegin event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`. Then ensure that the event handler is associated with the ResizeBegin event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#404](~/add/codesnippet/csharp/e-system.windows.forms.f_3_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#404](~/add/codesnippet/visualbasic/e-system.windows.forms.f_3_1.vb)]"
  syntax:
    content: public event EventHandler ResizeBegin;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.ResizeEnd
  id: ResizeEnd
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: ResizeEnd
  nameWithType: Form.ResizeEnd
  fullName: System.Windows.Forms.Form.ResizeEnd
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "폼 크기 조정 모드를 종료 될 때 발생 합니다."
  remarks: "ResizeEnd 이벤트는 테두리 또는 폼의 오른쪽 아래 모서리에 있는 크기 조정 그립 중 하나를 끌어서 놓는 하 여 일반적으로 폼의 크기 조정을 마쳤을 때 발생 합니다. 크기 조정 작업에 대 한 자세한 내용은 참조는 <xref:System.Windows.Forms.Form.ResizeBegin>이벤트.</xref:System.Windows.Forms.Form.ResizeBegin>       사용자가 클릭 하 고 캡션 표시줄을 끌어 양식을 이동한 후에 ResizeEnd 이벤트 생성 됩니다. 이 이벤트가 생성 되지 않습니다는 폼의 프로그래밍 방식으로 조작 하 여 예를 들어 변경 하 여는 <xref:System.Windows.Forms.Form.Size%2A>또는 <xref:System.Windows.Forms.Control.Location%2A>속성.</xref:System.Windows.Forms.Control.Location%2A> </xref:System.Windows.Forms.Form.Size%2A>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the ResizeEnd event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`. Then ensure that the event handler is associated with the ResizeEnd event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#405](~/add/codesnippet/csharp/e-system.windows.forms.f_16_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#405](~/add/codesnippet/visualbasic/e-system.windows.forms.f_16_1.vb)]"
  syntax:
    content: public event EventHandler ResizeEnd;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.RestoreBounds
  id: RestoreBounds
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: RestoreBounds
  nameWithType: Form.RestoreBounds
  fullName: System.Windows.Forms.Form.RestoreBounds
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "표준 창 상태의 폼의 크기와 위치를 가져옵니다."
  remarks: "일반적으로 사용자의 창 크기를 추적 하 고 표준 창 상태의 폼에 대 한 기본 설정 위치를 지정 하려면 RestoreBounds 속성을 사용 하면 됩니다. 값을 추적 해야는 <xref:System.Windows.Forms.Form.WindowState%2A>및 사용자의 창 기본 추적할 때 RestoreBounds 속성.</xref:System.Windows.Forms.Form.WindowState%2A>      > [!NOTE] > RestoreBounds 속성의 값은 경우에만 유효 <xref:System.Windows.Forms.Form.WindowState%2A> <xref:System.Windows.Forms.Form>클래스는 같지 않음 <xref:System.Windows.Forms.FormWindowState>.</xref:System.Windows.Forms.FormWindowState> </xref:System.Windows.Forms.Form> 속성</xref:System.Windows.Forms.Form.WindowState%2A>"
  syntax:
    content: public System.Drawing.Rectangle RestoreBounds { get; }
    return:
      type: System.Drawing.Rectangle
      description: "A <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 표준 창 상태의 폼의 크기와 위치를 포함 합니다."
  overload: System.Windows.Forms.Form.RestoreBounds*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.RightToLeftLayout
  id: RightToLeftLayout
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: RightToLeftLayout
  nameWithType: Form.RightToLeftLayout
  fullName: System.Windows.Forms.Form.RightToLeftLayout
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "오른쪽에서 왼쪽 방향의 미러 배치가 설정 되어 있는지 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "RightToLeftLayout 속성은 전세계 사용자를 위한 지역화 대비 폼을 개발 하는 데 매우 유용 합니다. 여러 폼은 왼쪽에서 오른쪽으로 폼에 컨트롤 표시 되는 있도록 설계 되었습니다. 이러한 폼이 쓰기 방향 언어와 호환 됩니다. 그러나 오른쪽에서 왼쪽 방향 언어의 사용자에 게 동일한 폼을 표시할 때 것이 좋습니다 폼에서 컨트롤의 순서를 반대로 하 합니다. 경우 모두는 RightToLeftLayout 및 <xref:System.Windows.Forms.Control.RightToLeft%2A>속성은 `true`, 미러링 켜 집니다 양식 및 컨트롤 배치 및 텍스트 방향에는 오른쪽에서 왼쪽 됩니다.</xref:System.Windows.Forms.Control.RightToLeft%2A>       와 달리 <xref:System.Windows.Forms.Control.RightToLeft%2A>, RightToLeftLayout 상속 되지 않습니다.</xref:System.Windows.Forms.Control.RightToLeft%2A> 자식 컨트롤에 적용 하려는 경우 원하는 미러된 각 자식 컨트롤에 설정 해야 합니다.       소유자 그리기 RightToLeftLayout로 설정 된 경우 지원 되지 않습니다 `Yes`합니다. 소유자 그리기 이벤트가 계속 발생 하지만 이러한 이벤트에서 작성 한 코드의 동작은 정의 되지 않았습니다. 또한 <xref:System.Windows.Forms.Control.BackgroundImage%2A>, <xref:System.Windows.Forms.Form.Opacity%2A>, <xref:System.Windows.Forms.Form.TransparencyKey%2A>, 그리기 이벤트 지원 되지 않습니다.</xref:System.Windows.Forms.Form.TransparencyKey%2A> </xref:System.Windows.Forms.Form.Opacity%2A> </xref:System.Windows.Forms.Control.BackgroundImage%2A>       RightToLeftLayout 및 <xref:System.Windows.Forms.Control.RightToLeft%2A>속성 다음 Win32 API 창 스타일을 설정 하면:- <xref:System.Windows.Forms.Control.RightToLeft%2A>로 설정 된 `Yes` RightToLeftLayout로 설정 되 고 `true`, 설정 하는 Windows Forms는 `WS_EX_LAYOUTRTL` 창 스타일을 설정 하 고 제거는 `WS_EX_RIGHT` 및 `WS_EX_RTLREADING` 스타일.</xref:System.Windows.Forms.Control.RightToLeft%2A> </xref:System.Windows.Forms.Control.RightToLeft%2A>      - <xref:System.Windows.Forms.Control.RightToLeft%2A>로 설정 된 `Yes` RightToLeftLayout로 설정 되어 있지만 `No`를 설정 하는 Windows Forms는 `WS_EX_RIGHT` 및 `WS_EX_RTLREADING` 창 스타일입니다.</xref:System.Windows.Forms.Control.RightToLeft%2A>       이 속성의 값을 변경 발생는 <xref:System.Windows.Forms.Form.RightToLeftLayoutChanged>이벤트.</xref:System.Windows.Forms.Form.RightToLeftLayoutChanged>       전역화 문제에 대 한 자세한 내용은 참조 [지역화 대비 응용 프로그램 개발에 대 한 유용한](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public virtual bool RightToLeftLayout { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>오른쪽에서 왼쪽 방향의 미러 배치가 설정 되어 있으면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 표준 자식 컨트롤 배치에 대 한 합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.Form.RightToLeftLayout*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.RightToLeftLayoutChanged
  id: RightToLeftLayoutChanged
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: RightToLeftLayoutChanged
  nameWithType: Form.RightToLeftLayoutChanged
  fullName: System.Windows.Forms.Form.RightToLeftLayoutChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "값 뒤에 오는 <xref:System.Windows.Forms.Form.RightToLeftLayout*>속성 변경.</xref:System.Windows.Forms.Form.RightToLeftLayout*>"
  remarks: "<xref:System.Windows.Forms.Control.RightToLeft%2A>및 <xref:System.Windows.Forms.Form.RightToLeftLayout%2A>속성 지역화 대비 응용 프로그램 개발에 일반적으로 사용 됩니다.</xref:System.Windows.Forms.Form.RightToLeftLayout%2A> </xref:System.Windows.Forms.Control.RightToLeft%2A>"
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the RightToLeftLayoutChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`. Then ensure that the event handler is associated with the RightToLeftLayoutChanged event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#402](~/add/codesnippet/csharp/e-system.windows.forms.f_21_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#402](~/add/codesnippet/visualbasic/e-system.windows.forms.f_21_1.vb)]"
  syntax:
    content: public event EventHandler RightToLeftLayoutChanged;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)
  id: ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: ScaleControl(SizeF,BoundsSpecified)
  nameWithType: Form.ScaleControl(SizeF,BoundsSpecified)
  fullName: System.Windows.Forms.Form.ScaleControl(SizeF,BoundsSpecified)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "위치, 크기, 안쪽 여백 및 여백을 컨트롤의 배율을 조정합니다."
  syntax:
    content: protected override void ScaleControl (System.Drawing.SizeF factor, System.Windows.Forms.BoundsSpecified specified);
    parameters:
    - id: factor
      type: System.Drawing.SizeF
      description: "된 배율을 높이 컨트롤의 너비 됩니다."
    - id: specified
      type: System.Windows.Forms.BoundsSpecified
      description: "A <xref href=&quot;System.Windows.Forms.BoundsSpecified&quot;> </xref> 의 크기와 위치를 정의할 때 사용할 컨트롤의 범위를 지정 하는 값입니다."
  overload: System.Windows.Forms.Form.ScaleControl*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.ScaleCore(System.Single,System.Single)
  id: ScaleCore(System.Single,System.Single)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: ScaleCore(Single,Single)
  nameWithType: Form.ScaleCore(Single,Single)
  fullName: System.Windows.Forms.Form.ScaleCore(Single,Single)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "폼의 크기를 조정 합니다."
  syntax:
    content: protected override void ScaleCore (float x, float y);
    parameters:
    - id: x
      type: System.Single
      description: "가로로 폼의 크기를 조정 하는 백분율"
    - id: y
      type: System.Single
      description: "세로로 폼의 크기를 조정 하는 백분율"
  overload: System.Windows.Forms.Form.ScaleCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.Select(System.Boolean,System.Boolean)
  id: Select(System.Boolean,System.Boolean)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: Select(Boolean,Boolean)
  nameWithType: Form.Select(Boolean,Boolean)
  fullName: System.Windows.Forms.Form.Select(Boolean,Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "이 폼을 선택 하 고 필요에 따라 다음 또는 이전 컨트롤을 선택 합니다."
  syntax:
    content: protected override void Select (bool directed, bool forward);
    parameters:
    - id: directed
      type: System.Boolean
      description: "활성 컨트롤이 true로 설정 변경 되는 경우"
    - id: forward
      type: System.Boolean
      description: "가 true 이면 포커스가 이동 하는 방향이 조절 라는 지시를 받으면 합니다. 이것이 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, 다음 다음 컨트롤이 선택; 그렇지 않으면 이전 컨트롤이 선택 되어 있습니다."
  overload: System.Windows.Forms.Form.Select*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)
  id: SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: SetBoundsCore(Int32,Int32,Int32,Int32,BoundsSpecified)
  nameWithType: Form.SetBoundsCore(Int32,Int32,Int32,Int32,BoundsSpecified)
  fullName: System.Windows.Forms.Form.SetBoundsCore(Int32,Int32,Int32,Int32,BoundsSpecified)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "이 컨트롤의 지정 된 범위를 설정 합니다."
  syntax:
    content: protected override void SetBoundsCore (int x, int y, int width, int height, System.Windows.Forms.BoundsSpecified specified);
    parameters:
    - id: x
      type: System.Int32
      description: "새 <xref:System.Windows.Forms.Control.Left*>컨트롤의 속성 값.</xref:System.Windows.Forms.Control.Left*>"
    - id: y
      type: System.Int32
      description: "새 <xref:System.Windows.Forms.Control.Top*>컨트롤의 속성 값.</xref:System.Windows.Forms.Control.Top*>"
    - id: width
      type: System.Int32
      description: "새 <xref:System.Windows.Forms.Control.Width*>컨트롤의 속성 값.</xref:System.Windows.Forms.Control.Width*>"
    - id: height
      type: System.Int32
      description: "새 <xref:System.Windows.Forms.Control.Height*>컨트롤의 속성 값.</xref:System.Windows.Forms.Control.Height*>"
    - id: specified
      type: System.Windows.Forms.BoundsSpecified
      description: "비트 조합 된 <xref href=&quot;System.Windows.Forms.BoundsSpecified&quot;> </xref> 값입니다."
  overload: System.Windows.Forms.Form.SetBoundsCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.SetClientSizeCore(System.Int32,System.Int32)
  id: SetClientSizeCore(System.Int32,System.Int32)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: SetClientSizeCore(Int32,Int32)
  nameWithType: Form.SetClientSizeCore(Int32,Int32)
  fullName: System.Windows.Forms.Form.SetClientSizeCore(Int32,Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "폼의 클라이언트 크기를 설정합니다. 하 여 클라이언트 크기를 요청한 크기로 폼의 경계를 조정 합니다."
  syntax:
    content: protected override void SetClientSizeCore (int x, int y);
    parameters:
    - id: x
      type: System.Int32
      description: "클라이언트 영역의 너비를 요청 했습니다."
    - id: y
      type: System.Int32
      description: "클라이언트 영역의 요청 된 높이입니다."
  overload: System.Windows.Forms.Form.SetClientSizeCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.SetDesktopBounds(System.Int32,System.Int32,System.Int32,System.Int32)
  id: SetDesktopBounds(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: SetDesktopBounds(Int32,Int32,Int32,Int32)
  nameWithType: Form.SetDesktopBounds(Int32,Int32,Int32,Int32)
  fullName: System.Windows.Forms.Form.SetDesktopBounds(Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "폼의 경계를 데스크톱 좌표로 설정합니다."
  remarks: "데스크톱 좌표로 작업 표시줄을 제외 하는 화면에서의 작업 영역을 기반으로 합니다. 데스크톱에서 폼의 크기와 위치를 설정 하려면이 메서드를 사용할 수 있습니다. 데스크톱 좌표로 폼의 작업 영역을 기반으로 하므로 양식에 바탕 화면에서 완전히 표시 되는지 확인 하려면이 메서드를 사용할 수 있습니다."
  example:
  - "The following code example demonstrates using the SetDesktopBounds method. To run this example, paste the following code in a form that contains a button named `Button2`. Ensure all events are associated with their event handlers.  \n  \n [!code-cs[System.Windows.Forms.FormExample#2](~/add/codesnippet/csharp/aeb52b4e-75f0-4c8f-b371-_1.cs)]\n [!code-vb[System.Windows.Forms.FormExample#2](~/add/codesnippet/visualbasic/aeb52b4e-75f0-4c8f-b371-_1.vb)]\n [!code-cpp[System.Windows.Forms.FormExample#2](~/add/codesnippet/cpp/aeb52b4e-75f0-4c8f-b371-_1.cpp)]"
  syntax:
    content: public void SetDesktopBounds (int x, int y, int width, int height);
    parameters:
    - id: x
      type: System.Int32
      description: "폼 위치의 x 좌표입니다."
    - id: y
      type: System.Int32
      description: "폼 위치의 y 좌표입니다."
    - id: width
      type: System.Int32
      description: "폼의 너비입니다."
    - id: height
      type: System.Int32
      description: "폼의 높이입니다."
  overload: System.Windows.Forms.Form.SetDesktopBounds*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.SetDesktopLocation(System.Int32,System.Int32)
  id: SetDesktopLocation(System.Int32,System.Int32)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: SetDesktopLocation(Int32,Int32)
  nameWithType: Form.SetDesktopLocation(Int32,Int32)
  fullName: System.Windows.Forms.Form.SetDesktopLocation(Int32,Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "폼의 위치를 데스크톱 좌표로 설정합니다."
  remarks: "데스크톱 좌표로 작업 표시줄을 제외 하는 화면에서의 작업 영역을 기반으로 합니다. 폼을 배치할 바탕 화면에서이 메서드를 사용할 수 있습니다. 데스크톱 좌표로 폼의 작업 영역을 기반으로 하므로 양식에 바탕 화면에서 완전히 표시 되는지 확인 하려면이 메서드를 사용할 수 있습니다. 이 메서드는 최상위 폼;에 주로 사용 하도록 사용 하 여는 <xref:System.Windows.Forms.Form.LayoutMdi%2A>다중 문서 MDI (인터페이스) 자식 폼을 배치 하는 메서드.</xref:System.Windows.Forms.Form.LayoutMdi%2A>"
  example:
  - "The following code example demonstrates how to use the SetDesktopLocation, <xref:System.Windows.Forms.Form.Load> and <xref:System.Windows.Forms.Form.Activate%2A> members. To run the example, paste the following code in a form called `Form1` containing a button called `Button1` and two `Label` controls called `Label1` and `Label2`.  \n  \n [!code-cs[System.Windows.Forms.FormsActivate#1](~/add/codesnippet/csharp/m-system.windows.forms.f_9_1.cs)]\n [!code-vb[System.Windows.Forms.FormsActivate#1](~/add/codesnippet/visualbasic/m-system.windows.forms.f_9_1.vb)]\n [!code-cpp[System.Windows.Forms.FormsActivate#1](~/add/codesnippet/cpp/m-system.windows.forms.f_9_1.cpp)]"
  syntax:
    content: public void SetDesktopLocation (int x, int y);
    parameters:
    - id: x
      type: System.Int32
      description: "폼 위치의 x 좌표입니다."
    - id: y
      type: System.Int32
      description: "폼 위치의 y 좌표입니다."
  overload: System.Windows.Forms.Form.SetDesktopLocation*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.SetVisibleCore(System.Boolean)
  id: SetVisibleCore(System.Boolean)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: SetVisibleCore(Boolean)
  nameWithType: Form.SetVisibleCore(Boolean)
  fullName: System.Windows.Forms.Form.SetVisibleCore(Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤을 지정 된 표시 상태로 설정합니다."
  syntax:
    content: protected override void SetVisibleCore (bool value);
    parameters:
    - id: value
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>볼 수 있도록 하려면 컨트롤; 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.Form.SetVisibleCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.Show(System.Windows.Forms.IWin32Window)
  id: Show(System.Windows.Forms.IWin32Window)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: Show(IWin32Window)
  nameWithType: Form.Show(IWin32Window)
  fullName: System.Windows.Forms.Form.Show(IWin32Window)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "사용자에 게 소유자가 지정된 된 폼을 표시 합니다."
  remarks: "비 모달 폼을 표시 하려면이 메서드를 사용할 수 있습니다. 이 메서드를 사용 하는 경우는 <xref:System.Windows.Forms.Form.Owner%2A>폼의 속성이로 설정 되어 `owner`.</xref:System.Windows.Forms.Form.Owner%2A> 비 모달 폼 צ ְ ײ는 <xref:System.Windows.Forms.Form.Owner%2A>소유 양식에 대 한 정보를 가져올 속성입니다.</xref:System.Windows.Forms.Form.Owner%2A>  이 메서드를 호출 하는 것은 동일한 설정으로는 <xref:System.Windows.Forms.Form.Owner%2A>비 모달의 속성과 다음 호출는 <xref:System.Windows.Forms.Control.Show>메서드.</xref:System.Windows.Forms.Control.Show> </xref:System.Windows.Forms.Form.Owner%2A>       폼을 표시 설정에 해당 하는 <xref:System.Windows.Forms.Control.Visible%2A>속성을 `true`.</xref:System.Windows.Forms.Control.Visible%2A> Show 메서드를 호출한 후의 <xref:System.Windows.Forms.Control.Visible%2A>속성의 값을 반환 `true` 될 때까지 <xref:System.Windows.Forms.Control.Hide%2A>메서드를 호출 합니다.</xref:System.Windows.Forms.Control.Hide%2A> </xref:System.Windows.Forms.Control.Visible%2A>"
  syntax:
    content: public void Show (System.Windows.Forms.IWin32Window owner);
    parameters:
    - id: owner
      type: System.Windows.Forms.IWin32Window
      description: "구현 하는 모든 개체 <xref href=&quot;System.Windows.Forms.IWin32Window&quot;> </xref> 이 폼을 소유할 최상위 창을 나타냅니다."
  overload: System.Windows.Forms.Form.Show*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "표시 되 고 폼에 표시 되어 있습니다.       -또는-에 지정 된 폼의 <code> owner </code> 매개 변수는 표시 되 고 폼과 동일 합니다.       -또는-표시 된 폼을 사용할 수 없습니다.       -또는-표시 된 폼을 최상위 창 아닙니다.       -또는-대화 상자로 표시 되 고 폼이 모달 폼 이미 있습니다.       -또는-현재 프로세스가 사용자 대화형 모드로 실행 되 고 있지 (자세한 내용은 참조 <xref:System.Windows.Forms.SystemInformation.UserInteractive*>).</xref:System.Windows.Forms.SystemInformation.UserInteractive*>"
  platform:
  - net462
- uid: System.Windows.Forms.Form.ShowDialog
  id: ShowDialog
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: ShowDialog()
  nameWithType: Form.ShowDialog()
  fullName: System.Windows.Forms.Form.ShowDialog()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "폼을 모달 대화 상자로 표시 합니다."
  remarks: "응용 프로그램에 모달 대화 상자를 표시 하려면이 메서드를 사용할 수 있습니다. 이 메서드가 호출 되 면 대화 상자를 닫은 후 뒤에 나오는 코드 될 때까지 실행 되지 않습니다. 대화 상자 할당할 수의 값 중 하나는 <xref:System.Windows.Forms.DialogResult>열거형에 할당는 <xref:System.Windows.Forms.Button.DialogResult%2A>속성의는 <xref:System.Windows.Forms.Button>는 폼 또는 설정 하 여는 <xref:System.Windows.Forms.Form.DialogResult%2A>코드에서 폼의 속성입니다.</xref:System.Windows.Forms.Form.DialogResult%2A> </xref:System.Windows.Forms.Button> </xref:System.Windows.Forms.Button.DialogResult%2A> </xref:System.Windows.Forms.DialogResult> 이 값은 다음이 메서드에 의해 반환 됩니다. 대화 상자에서 발생 한 동작을 처리할 방법을 결정 하기 위해이 반환 값을 사용할 수 있습니다. 예를 들어 대화 상자가 닫히고 반환 되는 `DialogResult.Cancel` 값이이 메서드를 통해 코드를 실행할 수 없도록 ShowDialog 호출 하면 못하게 합니다.       폼을 모달 대화 상자로 표시 되 면 클릭 하 고 **닫기** 단추 (x 폼의 오른쪽 위 모서리에 있는 단추)를 사용 하면 양식을 숨길 및 <xref:System.Windows.Forms.Form.DialogResult%2A>속성으로 설정 됩니다 `DialogResult.Cancel`.</xref:System.Windows.Forms.Form.DialogResult%2A> 비 모달 폼 달리는 <xref:System.Windows.Forms.Form.Close%2A>대화 상자 닫기 폼 단추를 클릭 하거나의 값을 설정 하는 경우.NET Framework에서 메서드가 호출 되지 않습니다는 <xref:System.Windows.Forms.Form.DialogResult%2A>속성.</xref:System.Windows.Forms.Form.DialogResult%2A> </xref:System.Windows.Forms.Form.Close%2A> 대신 폼 숨겨져 있고 대화 상자의 새 인스턴스를 만들지 않고 다시 표시할 수 있습니다. 호출 해야 대신 종료 하는 대화 상자가 모음이 숨겨진 표시 된 폼을 하기 때문에 <xref:System.Windows.Forms.Control.Dispose%2A>폼은 더 이상 필요 없는 응용 프로그램에서 폼의 메서드.</xref:System.Windows.Forms.Control.Dispose%2A>       이 버전의 ShowDialog 메서드 소유자로 폼 이나 컨트롤을 지정 하지 않습니다. 이 버전 호출 될 때 현재 활성 창의 대화 상자의 소유자를 이루어집니다. 특정 소유자를 지정 하려는 경우이 방법의 다른 버전을 사용 합니다."
  example:
  - "The following code example displays a form as a modal dialog box and evaluates the return value of the dialog box before determining whether to read the value of a <xref:System.Windows.Forms.TextBox> control on the dialog box form. This example requires that a <xref:System.Windows.Forms.Form> named `testDialog` is created and that it contains a <xref:System.Windows.Forms.TextBox> control named `TextBox1`. Furthermore, the example requires that code in this example is contained and called from a different <xref:System.Windows.Forms.Form> in order to display `testDialog` as a modal dialog box. The example uses the version of ShowDialog that specifies an owner for the dialog box.  \n  \n [!code-cs[Classic Form.ShowDialog Example#1](~/add/codesnippet/csharp/m-system.windows.forms.f_13_1.cs)]\n [!code-cpp[Classic Form.ShowDialog Example#1](~/add/codesnippet/cpp/m-system.windows.forms.f_13_1.cpp)]\n [!code-vb[Classic Form.ShowDialog Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.f_13_1.vb)]"
  syntax:
    content: public System.Windows.Forms.DialogResult ShowDialog ();
    parameters: []
    return:
      type: System.Windows.Forms.DialogResult
      description: "중 하나는 <xref href=&quot;System.Windows.Forms.DialogResult&quot;> </xref> 값입니다."
  overload: System.Windows.Forms.Form.ShowDialog*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "표시 되 고 폼에 표시 되어 있습니다.       -또는-표시 된 폼을 사용할 수 없습니다.       -또는-표시 된 폼을 최상위 창 아닙니다.       -또는-대화 상자로 표시 되 고 폼이 모달 폼 이미 있습니다.       -또는-현재 프로세스가 사용자 대화형 모드로 실행 되 고 있지 (자세한 내용은 참조 <xref:System.Windows.Forms.SystemInformation.UserInteractive*>).</xref:System.Windows.Forms.SystemInformation.UserInteractive*>"
  platform:
  - net462
- uid: System.Windows.Forms.Form.ShowDialog(System.Windows.Forms.IWin32Window)
  id: ShowDialog(System.Windows.Forms.IWin32Window)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: ShowDialog(IWin32Window)
  nameWithType: Form.ShowDialog(IWin32Window)
  fullName: System.Windows.Forms.Form.ShowDialog(IWin32Window)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "지정 된 소유자가 있는 모달 대화 상자로 폼을 표시 합니다."
  remarks: "응용 프로그램에 모달 대화 상자를 표시 하려면이 메서드를 사용할 수 있습니다. 이 메서드가 호출 되 면 대화 상자를 닫은 후 뒤에 나오는 코드 될 때까지 실행 되지 않습니다. 값 중 하나는 대화 상자를 할당할 수 있습니다 <xref:System.Windows.Forms.DialogResult>에 할당 된 <xref:System.Windows.Forms.Button.DialogResult%2A>의 속성은 <xref:System.Windows.Forms.Button>는 폼 또는 설정 하 여는 <xref:System.Windows.Forms.Form.DialogResult%2A>코드에서 폼의 속성.</xref:System.Windows.Forms.Form.DialogResult%2A> </xref:System.Windows.Forms.Button> </xref:System.Windows.Forms.Button.DialogResult%2A> </xref:System.Windows.Forms.DialogResult> 이 값은 다음이 메서드에 의해 반환 됩니다. 대화 상자에서 발생 한 동작을 처리할 방법을 결정 하기 위해이 반환 값을 사용할 수 있습니다. 예를 들어 대화 상자가 닫히고 반환 되는 `DialogResult.Cancel` 값이이 메서드를 통해 코드를 호출 하면 못하게 <xref:System.Windows.Forms.Form.ShowDialog%2A>에서 실행 합니다.</xref:System.Windows.Forms.Form.ShowDialog%2A>       폼을 모달 대화 상자로 표시 되 면 클릭 하 고 **닫기** 단추 (x 폼의 오른쪽 위 모서리에 있는 단추)를 사용 하면 양식을 숨길 및 <xref:System.Windows.Forms.Form.DialogResult%2A>속성으로 설정 됩니다 `DialogResult.Cancel`.</xref:System.Windows.Forms.Form.DialogResult%2A> 모덜리스 폼과 달리는 <xref:System.Windows.Forms.Form.Close%2A>대화 상자 닫기 폼 단추를 클릭 하거나의 값을 설정 하는 경우.NET Framework에서 메서드가 호출 되지 않습니다는 <xref:System.Windows.Forms.Form.DialogResult%2A>속성.</xref:System.Windows.Forms.Form.DialogResult%2A> </xref:System.Windows.Forms.Form.Close%2A> 대신 폼 숨겨져 있고 대화 상자의 새 인스턴스를 만들지 않고 다시 표시할 수 있습니다. 호출 해야 대신 종료 하는 대화 상자가 모음이 숨겨진 표시 된 폼을 하기 때문에 <xref:System.Windows.Forms.Control.Dispose%2A>폼은 더 이상 필요 없는 응용 프로그램에서 폼의 메서드.</xref:System.Windows.Forms.Control.Dispose%2A>       이 버전의는 <xref:System.Windows.Forms.Form.ShowDialog%2A>메서드를 사용 하는 표시 되는 대화 상자를 소유 하는 특정 모양을 지정할 수 있습니다.</xref:System.Windows.Forms.Form.ShowDialog%2A>"
  example:
  - "The following code example displays a form as a modal dialog box and evaluates the return value of the dialog box before determining whether to read the value of a <xref:System.Windows.Forms.TextBox> control on the dialog box form. This example requires that a <xref:System.Windows.Forms.Form> named `Form2` is created and that it contains a <xref:System.Windows.Forms.TextBox> control named `TextBox1`. The example uses the version of <xref:System.Windows.Forms.Form.ShowDialog%2A> that specifies an owner for the dialog box.  \n  \n [!code-cs[Classic Form.ShowDialog Example#1](~/add/codesnippet/csharp/m-system.windows.forms.f_11_1.cs)]\n [!code-cpp[Classic Form.ShowDialog Example#1](~/add/codesnippet/cpp/m-system.windows.forms.f_11_1.cpp)]\n [!code-vb[Classic Form.ShowDialog Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.f_11_1.vb)]"
  syntax:
    content: public System.Windows.Forms.DialogResult ShowDialog (System.Windows.Forms.IWin32Window owner);
    parameters:
    - id: owner
      type: System.Windows.Forms.IWin32Window
      description: "구현 하는 모든 개체 <xref href=&quot;System.Windows.Forms.IWin32Window&quot;> </xref> 모달 대화 상자를 소유할 최상위 창을 나타내는입니다."
    return:
      type: System.Windows.Forms.DialogResult
      description: "중 하나는 <xref href=&quot;System.Windows.Forms.DialogResult&quot;> </xref> 값입니다."
  overload: System.Windows.Forms.Form.ShowDialog*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "에 지정 된 폼의 <code> owner </code> 매개 변수는 표시 되 고 폼과 동일 합니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "표시 되 고 폼에 표시 되어 있습니다.       -또는-표시 된 폼을 사용할 수 없습니다.       -또는-표시 된 폼을 최상위 창 아닙니다.       -또는-대화 상자로 표시 되 고 폼이 모달 폼 이미 있습니다.       -또는-현재 프로세스가 사용자 대화형 모드로 실행 되 고 있지 (자세한 내용은 참조 <xref:System.Windows.Forms.SystemInformation.UserInteractive*>).</xref:System.Windows.Forms.SystemInformation.UserInteractive*>"
  platform:
  - net462
- uid: System.Windows.Forms.Form.ShowIcon
  id: ShowIcon
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: ShowIcon
  nameWithType: Form.ShowIcon
  fullName: System.Windows.Forms.Form.ShowIcon
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "폼의 캡션 표시줄에 아이콘이 표시 되는지를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "ShowIcon 속성을 포함 한 <xref:System.Boolean>나타내는 값 있는지 여부를 폼의 <xref:System.Windows.Forms.Form.Icon%2A>폼의 캡션 표시줄에 표시 됩니다.</xref:System.Windows.Forms.Form.Icon%2A> </xref:System.Boolean> 경우는 <xref:System.Windows.Forms.Form.ControlBox%2A>속성은 `false`, 아이콘과 컨트롤 상자는 표시 되지 않습니다.</xref:System.Windows.Forms.Form.ControlBox%2A>       ShowIcon 이면 `false` 일반 아이콘 기본 폼이 표시 되 면 응용 프로그램에 대 한 작업 표시줄 단추에 표시 됩니다.       경우에이 속성이 적용 되지 않습니다 <xref:System.Windows.Forms.Form.FormBorderStyle%2A>를 <xref:System.Windows.Forms.FormBorderStyle>.</xref:System.Windows.Forms.FormBorderStyle> </xref:System.Windows.Forms.Form.FormBorderStyle%2A> 이 경우 폼 아이콘이 표시 되지 않습니다."
  syntax:
    content: public bool ShowIcon { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>폼의 캡션 표시줄에 아이콘을 표시 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.Form.ShowIcon*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.ShowInTaskbar
  id: ShowInTaskbar
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: ShowInTaskbar
  nameWithType: Form.ShowInTaskbar
  fullName: System.Windows.Forms.Form.ShowInTaskbar
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Windows 작업 표시줄에 폼이 표시 되는지를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "다른 폼 내에서 폼 부모가 부모로 지정된 된 폼을 Windows 작업 표시줄에 표시 되지 않습니다.       사용자가 해당 폼 Windows 작업 표시줄을 선택 하지 못하도록 하려면이 속성을 사용할 수 있습니다. 예를 들어 응용 프로그램에서 찾기 및 바꾸기 도구 창을 표시 하면 해당 창 응용 프로그램의 주 창와 적절 하 게 검색 하려면 표시 찾기 및 바꾸기 도구 창 모두에 필요 하기 때문에 Windows 작업 표시줄 선택 되지 않도록 하려면는 것이 좋습니다.       폼을 만들 때이 속성을 사용 하려면 자주는 <xref:System.Windows.Forms.FormBorderStyle>스타일.</xref:System.Windows.Forms.FormBorderStyle> 설정의 <xref:System.Windows.Forms.FormBorderStyle>스타일 것 만으로 창을 작업 표시줄에 표시 되지 것입니다.</xref:System.Windows.Forms.FormBorderStyle>"
  example:
  - "The following code example demonstrates how to use the ShowInTaskbar property to make a dialog box that is not displayed in the Windows taskbar.  \n  \n [!code-cpp[Form.ShowInTaskbar#1](~/add/codesnippet/cpp/p-system.windows.forms.f_7_1.cpp)]\n [!code-cs[Form.ShowInTaskbar#1](~/add/codesnippet/csharp/p-system.windows.forms.f_7_1.cs)]\n [!code-vb[Form.ShowInTaskbar#1](~/add/codesnippet/visualbasic/p-system.windows.forms.f_7_1.vb)]"
  syntax:
    content: public bool ShowInTaskbar { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>런타임 시; Windows 작업 표시줄에 폼을 표시 하려면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.Form.ShowInTaskbar*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.Shown
  id: Shown
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: Shown
  nameWithType: Form.Shown
  fullName: System.Windows.Forms.Form.Shown
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "폼이 처음 표시 될 때마다 발생 합니다."
  remarks: "표시 되는만 이벤트가 처음으로 폼이 표시 됩니다. 또는 무효화 및 다시 그리기 이후에 최소화, 최대화, 복원, 숨기기, 표시,이 이벤트를 발생 하지 않습니다. 폼의 이벤트 순서에 대 한 자세한 내용은 참조 [Windows Forms에서 이벤트의 순서](~/add/includes/ajax-current-ext-md.md)합니다.       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the Shown event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`. Then ensure that the event handler is associated with the Shown event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#403](~/add/codesnippet/csharp/e-system.windows.forms.f_12_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#403](~/add/codesnippet/visualbasic/e-system.windows.forms.f_12_1.vb)]"
  syntax:
    content: public event EventHandler Shown;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.ShowWithoutActivation
  id: ShowWithoutActivation
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: ShowWithoutActivation
  nameWithType: Form.ShowWithoutActivation
  fullName: System.Windows.Forms.Form.ShowWithoutActivation
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "창이 표시 될 때 활성화 여부를 나타내는 값을 가져옵니다."
  remarks: "최상위 창을 표시 하려고 하지만 현재 창에서 입력된 포커스를 수행 하 여 사용자의 작업을 중단 하지 않으려는 경우이 속성을 사용 합니다. 이 정보 팝업 창이 또는 도구 팔레트 그리기 응용 프로그램에서 같은 부동 창 수 있습니다.       이 속성이 읽기 전용 이므로 변경할 수 있습니다 값인 고유한 형태로 ShowWithoutActivation를 재정의 하 고 프로그래밍 하는 데 반환 하 여 `true`합니다.       <xref:System.Windows.Forms.ToolStrip> <xref:System.Windows.Forms.ToolStripDropDown>.</xref:System.Windows.Forms.ToolStripDropDown> 등의 컨트롤</xref:System.Windows.Forms.ToolStrip> 사용을 고려해 야 하면 활성화 되지 않은 창 UI 컨트롤을 사용 하는 경우 이러한 컨트롤은 창 없는, 되며 창이 선택할 때 활성화 되지 않습니다."
  syntax:
    content: protected virtual bool ShowWithoutActivation { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>표시 될 때 창이 활성화 되지 않습니다 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.Form.ShowWithoutActivation*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.Size
  id: Size
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: Size
  nameWithType: Form.Size
  fullName: System.Windows.Forms.Form.Size
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "폼의 크기를 가져오거나 설정 합니다."
  remarks: "이 속성을 사용 하면 설정 하는 대신 동시에 높이 너비 (픽셀 단위)는 폼의 설정할 수 있습니다는 <xref:System.Windows.Forms.Control.Height%2A>및 <xref:System.Windows.Forms.Control.Width%2A>속성 개별적으로.</xref:System.Windows.Forms.Control.Width%2A> </xref:System.Windows.Forms.Control.Height%2A> 크기와 폼의 위치를 설정 하려는 경우 사용할 수 있습니다는 <xref:System.Windows.Forms.Form.DesktopBounds%2A>데스크톱 좌표 또는 사용을 기반으로 하 고 양식을 찾습니다 크기 속성은 <xref:System.Windows.Forms.Control.Bounds%2A>속성의는 <xref:System.Windows.Forms.Control>화면 좌표에 따라 폼의 위치와 크기를 설정 하는 클래스입니다.</xref:System.Windows.Forms.Control> </xref:System.Windows.Forms.Control.Bounds%2A> </xref:System.Windows.Forms.Form.DesktopBounds%2A>      > [!NOTE] >이 속성의 최대값은 폼 실행 되는 화면 해상도 의해 제한 됩니다. 값 (예: 가로 + 12, 세로 + 12) 각 화면 크기 보다 12 픽셀 보다 클 수 없습니다.      > [!NOTE] > Pocket PC에 장치를 설정 하 여 크기 조정 가능한 창을 만들 수 <xref:System.Windows.Forms.Form.FormBorderStyle%2A>를 `None` 모두 제거 하 고 <xref:System.Windows.Forms.MainMenu>컨트롤.</xref:System.Windows.Forms.MainMenu> </xref:System.Windows.Forms.Form.FormBorderStyle%2A> SmartPhone 장치에서 되지 크기를 조정할 수는 <xref:System.Windows.Forms.Form>-전체 화면을 항상 채웁니다.</xref:System.Windows.Forms.Form>"
  example:
  - "The following code example demonstrates how to create a form that is displayed with an opacity level of 75 percent. The example code creates a new form that is positioned in the center of the screen with an <xref:System.Windows.Forms.Form.Opacity%2A> property set to change the opacity level of the form. The example code also sets the Size property to provide a larger sized form than the default size of the form. This example requires that the method defined in this example is called from another form in an event handler or other method.  \n  \n [!code-cpp[Form.Opacity#1](~/add/codesnippet/cpp/p-system.windows.forms.f_39_1.cpp)]\n [!code-cs[Form.Opacity#1](~/add/codesnippet/csharp/p-system.windows.forms.f_39_1.cs)]\n [!code-vb[Form.Opacity#1](~/add/codesnippet/visualbasic/p-system.windows.forms.f_39_1.vb)]"
  syntax:
    content: public System.Drawing.Size Size { get; set; }
    return:
      type: System.Drawing.Size
      description: "A <xref href=&quot;System.Drawing.Size&quot;> </xref> 폼의 크기를 나타내는입니다."
  overload: System.Windows.Forms.Form.Size*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.SizeGripStyle
  id: SizeGripStyle
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: SizeGripStyle
  nameWithType: Form.SizeGripStyle
  fullName: System.Windows.Forms.Form.SizeGripStyle
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "폼의 오른쪽 아래 모퉁이에 표시할 크기 조정 그립의 스타일을 가져오거나 설정 합니다."
  remarks: "이 속성을 사용 하면 크기 조정 그립 폼에 표시 되는 시기를 확인할 수 있습니다. 크기 조정 그립을 표시 하거나의 설정에 따라이 자동으로 표시 한이 속성을 설정할 수 있습니다는 <xref:System.Windows.Forms.Form.FormBorderStyle%2A>속성.</xref:System.Windows.Forms.Form.FormBorderStyle%2A>"
  example:
  - "The following code example demonstrates how to hide the size grip for a <xref:System.Windows.Forms.Form> when the <xref:System.Windows.Forms.Form> is not resizable.  \n  \n [!code-cpp[Form.SizeGripStyle#1](~/add/codesnippet/cpp/p-system.windows.forms.f_11_1.cpp)]\n [!code-cs[Form.SizeGripStyle#1](~/add/codesnippet/csharp/p-system.windows.forms.f_11_1.cs)]\n [!code-vb[Form.SizeGripStyle#1](~/add/codesnippet/visualbasic/p-system.windows.forms.f_11_1.vb)]"
  syntax:
    content: public System.Windows.Forms.SizeGripStyle SizeGripStyle { get; set; }
    return:
      type: System.Windows.Forms.SizeGripStyle
      description: "A <xref href=&quot;System.Windows.Forms.SizeGripStyle&quot;> </xref> 표시할 크기 조정 그립의 스타일을 나타내는입니다. 기본값은<xref href=&quot;System.Windows.Forms.SizeGripStyle&quot;></xref>"
  overload: System.Windows.Forms.Form.SizeGripStyle*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "지정 된 값이 유효한 값의 범위를 벗어났습니다."
  platform:
  - net462
- uid: System.Windows.Forms.Form.StartPosition
  id: StartPosition
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: StartPosition
  nameWithType: Form.StartPosition
  fullName: System.Windows.Forms.Form.StartPosition
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "런타임에 폼의 시작 위치를 가져오거나 설정 합니다."
  remarks: "이 속성을 사용 하면 런타임 시 표시 될 때 폼의 시작 위치를 설정할 수 있습니다. 폼의 위치를 설정 하 여 수동으로 지정할 수 있습니다는 <xref:System.Windows.Forms.Form.Location%2A>속성 또는 Windows가 지정한 기본 위치를 사용 하 여.</xref:System.Windows.Forms.Form.Location%2A> 다중 문서 MDI (인터페이스) 자식 폼과 같은 폼은 부모 폼의 중심 또는 화면 중앙에 표시 하려면 폼을 배치할 수 있습니다.       폼이 표시 되기 전에이 속성을 설정 해야 합니다.  호출 하기 전에이 속성을 설정할 수는 <xref:System.Windows.Forms.Form.Show%2A>또는 <xref:System.Windows.Forms.Form.ShowDialog%2A>메서드 또는 폼의 생성자입니다.</xref:System.Windows.Forms.Form.ShowDialog%2A> </xref:System.Windows.Forms.Form.Show%2A>"
  example:
  - "The following code example creates a new instance of a <xref:System.Windows.Forms.Form> and calls the <xref:System.Windows.Forms.Form.ShowDialog%2A> method to display the form as a dialog box. The example sets the <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.AcceptButton%2A>, <xref:System.Windows.Forms.Form.CancelButton%2A>, and StartPosition properties to change the appearance and functionality of the form to a dialog box. The example also uses the <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> method of the form's <xref:System.Windows.Forms.Control.Controls%2A> collection to add two <xref:System.Windows.Forms.Button> controls. The example uses the <xref:System.Windows.Forms.Form.HelpButton%2A> property to display a help button in the caption bar of the dialog box.  \n  \n [!code-vb[Classic Form.StartPosition Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.f_1_1.vb)]\n [!code-cpp[Classic Form.StartPosition Example#1](~/add/codesnippet/cpp/p-system.windows.forms.f_1_1.cpp)]\n [!code-cs[Classic Form.StartPosition Example#1](~/add/codesnippet/csharp/p-system.windows.forms.f_1_1.cs)]"
  syntax:
    content: public System.Windows.Forms.FormStartPosition StartPosition { get; set; }
    return:
      type: System.Windows.Forms.FormStartPosition
      description: "A <xref href=&quot;System.Windows.Forms.FormStartPosition&quot;> </xref> 폼의 시작 위치를 나타내는입니다."
  overload: System.Windows.Forms.Form.StartPosition*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "지정 된 값이 유효한 값의 범위를 벗어났습니다."
  platform:
  - net462
- uid: System.Windows.Forms.Form.TabIndex
  id: TabIndex
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: TabIndex
  nameWithType: Form.TabIndex
  fullName: System.Windows.Forms.Form.TabIndex
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "해당 컨테이너 내에서 컨트롤의 탭 순서를 가져오거나 설정 합니다."
  remarks: "Forms 탭 순서에 포함 되지 않습니다. TabIndex 속성 일어나지 않습니다."
  syntax:
    content: public int TabIndex { get; set; }
    return:
      type: System.Int32
      description: "<xref:System.Int32>탭 순서에 포함 된 해당 컨테이너 내의 컨트롤 집합 내에서 컨트롤의 인덱스를 포함 합니다.</xref:System.Int32>"
  overload: System.Windows.Forms.Form.TabIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.TabIndexChanged
  id: TabIndexChanged
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: TabIndexChanged
  nameWithType: Form.TabIndexChanged
  fullName: System.Windows.Forms.Form.TabIndexChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 경우의 값은 <xref:System.Windows.Forms.Form.TabIndex*>속성 변경.</xref:System.Windows.Forms.Form.TabIndex*>"
  syntax:
    content: public event EventHandler TabIndexChanged;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.TabStop
  id: TabStop
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: TabStop
  nameWithType: Form.TabStop
  fullName: System.Windows.Forms.Form.TabStop
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "TAB 키를 사용 하 여이 컨트롤에 포커스를 이동할 수 있는지 여부를 나타내는 값을 가져오거나 설정 합니다."
  syntax:
    content: public bool TabStop { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>사용자는 TAB 키를 사용 하 여 컨트롤에 포커스를 이동할 수 있으면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.Form.TabStop*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.TabStopChanged
  id: TabStopChanged
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: TabStopChanged
  nameWithType: Form.TabStopChanged
  fullName: System.Windows.Forms.Form.TabStopChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 경우는 <xref:System.Windows.Forms.Form.TabStop*>속성 변경.</xref:System.Windows.Forms.Form.TabStop*>"
  syntax:
    content: public event EventHandler TabStopChanged;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.Text
  id: Text
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: Text
  nameWithType: Form.Text
  fullName: System.Windows.Forms.Form.Text
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "이 컨트롤과 관련 된 텍스트를 가져오거나 설정 합니다."
  syntax:
    content: public override string Text { get; set; }
    return:
      type: System.String
      description: "이 컨트롤과 관련 된 텍스트입니다."
  overload: System.Windows.Forms.Form.Text*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.TopLevel
  id: TopLevel
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: TopLevel
  nameWithType: Form.TopLevel
  fullName: System.Windows.Forms.Form.TopLevel
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "폼을 최상위 창으로 표시할지 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "최상위 폼에는 창 있는 부모 폼이 없는, 또는 해당 부모 폼은 데스크톱 창입니다. 최상위 창에서 응용 프로그램 기본 폼으로 일반적으로 사용 됩니다."
  example:
  - "The following code example use the <xref:System.Windows.Forms.Form.Modal%2A> property to determine if a form is displayed as a modal form. If it is not the <xref:System.Windows.Forms.Form.FormBorderStyle%2A> and TopLevel properties are changed to make the form non-top-level form with a tool window border.  \n  \n [!code-cpp[Form.Modal#1](~/add/codesnippet/cpp/p-system.windows.forms.f_34_1.cpp)]\n [!code-cs[Form.Modal#1](~/add/codesnippet/csharp/p-system.windows.forms.f_34_1.cs)]\n [!code-vb[Form.Modal#1](~/add/codesnippet/visualbasic/p-system.windows.forms.f_34_1.vb)]"
  syntax:
    content: public bool TopLevel { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>폼을 최상위 창;으로 표시 하려면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.Form.TopLevel*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "다중 문서 MDI (인터페이스) 부모 폼을 최상위 창 이어야 합니다."
  platform:
  - net462
- uid: System.Windows.Forms.Form.TopMost
  id: TopMost
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: TopMost
  nameWithType: Form.TopMost
  fullName: System.Windows.Forms.Form.TopMost
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "폼을 맨 위 폼으로 표시 해야 하는지를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "맨 위 폼은 활성 또는 전경 폼 폼이 아닌 경우에 다른 (맨 위) 폼을 합니다. 맨 위 폼의 windows 바탕 화면에 z-순서에서 가장 높은 지점에 항상 표시 됩니다. 찾기 및 바꾸기 도구 창과 같은 응용 프로그램에 항상 표시 되는 폼을 만들려면이 속성을 사용할 수 있습니다."
  example:
  - "The following code example demonstrates how to create a topmost form. The example creates two forms, one that is maximized and one that will be displayed as a topmost form. The first form, named `bottomForm`, is displayed maximized, using the <xref:System.Windows.Forms.Form.WindowState%2A> property, to better demonstrate the abilities of the topmost form. The second form, named `topMostForm`, sets the TopMost property to `true` to display the form as a topmost form. When this code is run, clicking on the maximized form will not cause the topmost form to be displayed below the maximized form. The example requires that the method defined in the example is called from another form.  \n  \n [!code-cs[Form.TopMost#1](~/add/codesnippet/csharp/p-system.windows.forms.f_15_1.cs)]\n [!code-cpp[Form.TopMost#1](~/add/codesnippet/cpp/p-system.windows.forms.f_15_1.cpp)]\n [!code-vb[Form.TopMost#1](~/add/codesnippet/visualbasic/p-system.windows.forms.f_15_1.vb)]"
  syntax:
    content: public bool TopMost { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>폼을 맨 위;으로 표시 하려면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.Form.TopMost*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.ToString
  id: ToString
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: ToString()
  nameWithType: Form.ToString()
  fullName: System.Windows.Forms.Form.ToString()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "폼의 현재 인스턴스를 나타내는 문자열을 가져옵니다."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: 'A string consisting of the fully qualified name of the form object''s class, with the <xref:System.Windows.Forms.Form.Text*> property of the form appended to the end. For example, if the form is derived from the class `MyForm` in the `MyNamespace` namespace, and the <xref:System.Windows.Forms.Form.Text*> property is set to `Hello, World`, this method will return `MyNamespace.MyForm, Text: Hello, World`.'
  overload: System.Windows.Forms.Form.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.TransparencyKey
  id: TransparencyKey
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: TransparencyKey
  nameWithType: Form.TransparencyKey
  fullName: System.Windows.Forms.Form.TransparencyKey
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "폼의 투명 영역을 나타내는 색을 가져오거나 설정 합니다."
  remarks: "TransparencyKey 속성 할당 된 경우는 <xref:System.Drawing.Color>, 동일한 폼의 영역 <xref:System.Windows.Forms.Control.BackColor%2A>투명 하 게 표시 됩니다.</xref:System.Windows.Forms.Control.BackColor%2A> </xref:System.Drawing.Color> 모든 마우스 작업을 마우스 클릭과 같은 폼의 투명 영역에서 수행 되는 투명 한 영역 아래의 창으로 전송 됩니다. 예를 들어 폼의 클라이언트 영역와 투명 하 게 수행 해당 영역에서 마우스를 클릭 하는 보내기 클릭에 대 한 이벤트 알림을 창 아래에 있습니다. 양식의 모든 컨트롤 동일 TransparencyKey 속성에 할당 된 색 이면도 표시 됩니다 투명 하 게 합니다. 예를 들어, 있는 경우는 <xref:System.Windows.Forms.Button>해당 TransparencyKey 속성이로 설정 하는 폼에 컨트롤 `SystemColors.Control`, 컨트롤은 투명 하 게 않은 경우 표시는 <xref:System.Windows.Forms.Control.BackColor%2A>속성의는 <xref:System.Windows.Forms.Button>컨트롤을 다른 색으로 변경 됩니다.</xref:System.Windows.Forms.Button> </xref:System.Windows.Forms.Control.BackColor%2A> </xref:System.Windows.Forms.Button>       이 속성은 실행할 수 <xref:System.Windows.Forms.Form.RightToLeftLayout%2A>은 `true`.</xref:System.Windows.Forms.Form.RightToLeftLayout%2A>"
  example:
  - "The following code example creates a window that has a transparent client region regardless of background color of the form. This example requires that the example method is defined within a form class.  \n  \n [!code-cpp[Classic Form.TransparencyKey Example#1](~/add/codesnippet/cpp/p-system.windows.forms.f_51_1.cpp)]\n [!code-vb[Classic Form.TransparencyKey Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.f_51_1.vb)]\n [!code-cs[Classic Form.TransparencyKey Example#1](~/add/codesnippet/csharp/p-system.windows.forms.f_51_1.cs)]"
  syntax:
    content: public System.Drawing.Color TransparencyKey { get; set; }
    return:
      type: System.Drawing.Color
      description: "A <xref href=&quot;System.Drawing.Color&quot;> </xref> 폼에 투명 하 게 표시할 색을 나타내는입니다."
  overload: System.Windows.Forms.Form.TransparencyKey*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.UpdateDefaultButton
  id: UpdateDefaultButton
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: UpdateDefaultButton()
  nameWithType: Form.UpdateDefaultButton()
  fullName: System.Windows.Forms.Form.UpdateDefaultButton()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "기본 단추로 사용 되는 단추를 업데이트 합니다."
  remarks: "폼에 단추를 다음 우선 순위에 따라 사용자가 ENTER를 누를 때 Click 이벤트를 발생 시킵니다. UpdateDefaultButton 메서드 확인: 1입니다.  경우는 <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A>속성이 구현 하는 <xref:System.Windows.Forms.IButtonControl>인터페이스, 제어 기본 단추 인지.</xref:System.Windows.Forms.IButtonControl> </xref:System.Windows.Forms.ContainerControl.ActiveControl%2A>      2.  <xref:System.Windows.Forms.Form.AcceptButton%2A>속성 기본 단추입니다.</xref:System.Windows.Forms.Form.AcceptButton%2A>"
  syntax:
    content: protected override void UpdateDefaultButton ();
    parameters: []
  overload: System.Windows.Forms.Form.UpdateDefaultButton*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.ValidateChildren
  id: ValidateChildren
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: ValidateChildren()
  nameWithType: Form.ValidateChildren()
  fullName: System.Windows.Forms.Form.ValidateChildren()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤이 모든 자식 컨트롤 내에서 데이터 유효성을 검사 하는 유효성 검사를 지원 합니다."
  syntax:
    content: public override bool ValidateChildren ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>모든 자식의 유효성 검사를 성공적으로 수행 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 호출 된 경우는 <xref href=&quot;System.Windows.Forms.Control.Validating&quot;> </xref> 또는 <xref href=&quot;System.Windows.Forms.Control.Validated&quot;> </xref> 이벤트 처리기를이 메서드는 항상 반환 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.Form.ValidateChildren*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.ValidateChildren(System.Windows.Forms.ValidationConstraints)
  id: ValidateChildren(System.Windows.Forms.ValidationConstraints)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: ValidateChildren(ValidationConstraints)
  nameWithType: Form.ValidateChildren(ValidationConstraints)
  fullName: System.Windows.Forms.Form.ValidateChildren(ValidationConstraints)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤이 모든 자식 컨트롤 내에서 데이터 유효성을 검사 하는 유효성 검사를 지원 합니다."
  syntax:
    content: public override bool ValidateChildren (System.Windows.Forms.ValidationConstraints validationConstraints);
    parameters:
    - id: validationConstraints
      type: System.Windows.Forms.ValidationConstraints
      description: "컨트롤에는 기반이 되는 제한의 <xref href=&quot;System.Windows.Forms.Control.Validating&quot;> </xref> 이벤트가 발생 합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>모든 자식의 유효성 검사를 성공적으로 수행 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 호출 된 경우는 <xref href=&quot;System.Windows.Forms.Control.Validating&quot;> </xref> 또는 <xref href=&quot;System.Windows.Forms.Control.Validated&quot;> </xref> 이벤트 처리기를이 메서드는 항상 반환 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.Form.ValidateChildren*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Form.WindowState
  id: WindowState
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: WindowState
  nameWithType: Form.WindowState
  fullName: System.Windows.Forms.Form.WindowState
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "최소화, 최대화 또는 표준 형식 인지 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "WindowState 속성이 항상로 설정 되어 폼이 표시 되기 전에 `FormWindowState.Normal`초기 설정에 관계 없이 합니다. 이 <xref:System.Windows.Forms.Control.Height%2A>, <xref:System.Windows.Forms.Control.Left%2A>, <xref:System.Windows.Forms.Control.Top%2A>, 및 <xref:System.Windows.Forms.Control.Width%2A>속성 설정을.</xref:System.Windows.Forms.Control.Width%2A> </xref:System.Windows.Forms.Control.Top%2A> </xref:System.Windows.Forms.Control.Left%2A> </xref:System.Windows.Forms.Control.Height%2A> 표시 된 후 폼이 나타나지 않으면 이러한 속성 WindowState 속성이 변경에 관계 없이 다시 폼이 표시 될 때까지 이전 상태를 반영 합니다."
  example:
  - "The following code example demonstrates how to set the WindowStateto maximized. The code is called from the <xref:System.Windows.Forms.Form.Shown> event handler after the form has been created.  \n  \n```c#  \nprivate void Form1_Shown(object sender, EventArgs e)  \n        {  \n            this.WindowState = System.Windows.Forms.FormWindowState.Maximized;  \n        }  \n```  \n  \n```vb  \nPrivate  Sub Form1_Shown(ByVal sender As Object, ByVal e As EventArgs)  \n            Me.WindowState = System.Windows.Forms.FormWindowState.Maximized  \nEnd Sub  \n```"
  syntax:
    content: public System.Windows.Forms.FormWindowState WindowState { get; set; }
    return:
      type: System.Windows.Forms.FormWindowState
      description: "A <xref href=&quot;System.Windows.Forms.FormWindowState&quot;> </xref> 폼이 최소화, 최대화 또는 표준 여부를 나타내는입니다. 기본값은 <xref uid=&quot;langword_csharp_FormWindowState.Normal&quot; name=&quot;FormWindowState.Normal&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.Form.WindowState*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "지정 된 값이 유효한 값의 범위를 벗어났습니다."
  platform:
  - net462
- uid: System.Windows.Forms.Form.WndProc(System.Windows.Forms.Message@)
  id: WndProc(System.Windows.Forms.Message@)
  parent: System.Windows.Forms.Form
  langs:
  - csharp
  name: WndProc(Message)
  nameWithType: Form.WndProc(Message)
  fullName: System.Windows.Forms.Form.WndProc(Message)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Windows 메시지를 처리 합니다."
  syntax:
    content: protected override void WndProc (ref System.Windows.Forms.Message m);
    parameters:
    - id: m
      type: System.Windows.Forms.Message
      description: "Windows <xref href=&quot;System.Windows.Forms.Message&quot;> </xref> 프로세스에 있습니다."
  overload: System.Windows.Forms.Form.WndProc*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Forms.ContainerControl
  isExternal: false
  name: System.Windows.Forms.ContainerControl
- uid: System.ComponentModel.InvalidEnumArgumentException
  parent: System.ComponentModel
  isExternal: false
  name: InvalidEnumArgumentException
  nameWithType: InvalidEnumArgumentException
  fullName: System.ComponentModel.InvalidEnumArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Exception
  isExternal: true
  name: System.Exception
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Windows.Forms.Form.#ctor
  parent: System.Windows.Forms.Form
  isExternal: false
  name: Form()
  nameWithType: Form.Form()
  fullName: System.Windows.Forms.Form.Form()
- uid: System.Windows.Forms.Form.AcceptButton
  parent: System.Windows.Forms.Form
  isExternal: false
  name: AcceptButton
  nameWithType: Form.AcceptButton
  fullName: System.Windows.Forms.Form.AcceptButton
- uid: System.Windows.Forms.IButtonControl
  parent: System.Windows.Forms
  isExternal: false
  name: IButtonControl
  nameWithType: IButtonControl
  fullName: System.Windows.Forms.IButtonControl
- uid: System.Windows.Forms.Form.Activate
  parent: System.Windows.Forms.Form
  isExternal: false
  name: Activate()
  nameWithType: Form.Activate()
  fullName: System.Windows.Forms.Form.Activate()
- uid: System.Windows.Forms.Form.Activated
  parent: System.Windows.Forms.Form
  isExternal: false
  name: Activated
  nameWithType: Form.Activated
  fullName: System.Windows.Forms.Form.Activated
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Windows.Forms.Form.ActivateMdiChild(System.Windows.Forms.Form)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: ActivateMdiChild(Form)
  nameWithType: Form.ActivateMdiChild(Form)
  fullName: System.Windows.Forms.Form.ActivateMdiChild(Form)
- uid: System.Windows.Forms.Form
  parent: System.Windows.Forms
  isExternal: false
  name: Form
  nameWithType: Form
  fullName: System.Windows.Forms.Form
- uid: System.Windows.Forms.Form.ActiveForm
  parent: System.Windows.Forms.Form
  isExternal: false
  name: ActiveForm
  nameWithType: Form.ActiveForm
  fullName: System.Windows.Forms.Form.ActiveForm
- uid: System.Windows.Forms.Form.ActiveMdiChild
  parent: System.Windows.Forms.Form
  isExternal: false
  name: ActiveMdiChild
  nameWithType: Form.ActiveMdiChild
  fullName: System.Windows.Forms.Form.ActiveMdiChild
- uid: System.Windows.Forms.Form.AddOwnedForm(System.Windows.Forms.Form)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: AddOwnedForm(Form)
  nameWithType: Form.AddOwnedForm(Form)
  fullName: System.Windows.Forms.Form.AddOwnedForm(Form)
- uid: System.Windows.Forms.Form.AdjustFormScrollbars(System.Boolean)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: AdjustFormScrollbars(Boolean)
  nameWithType: Form.AdjustFormScrollbars(Boolean)
  fullName: System.Windows.Forms.Form.AdjustFormScrollbars(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.Form.AllowTransparency
  parent: System.Windows.Forms.Form
  isExternal: false
  name: AllowTransparency
  nameWithType: Form.AllowTransparency
  fullName: System.Windows.Forms.Form.AllowTransparency
- uid: System.Windows.Forms.Form.ApplyAutoScaling
  parent: System.Windows.Forms.Form
  isExternal: false
  name: ApplyAutoScaling()
  nameWithType: Form.ApplyAutoScaling()
  fullName: System.Windows.Forms.Form.ApplyAutoScaling()
- uid: System.Windows.Forms.Form.AutoScale
  parent: System.Windows.Forms.Form
  isExternal: false
  name: AutoScale
  nameWithType: Form.AutoScale
  fullName: System.Windows.Forms.Form.AutoScale
- uid: System.Windows.Forms.Form.AutoScaleBaseSize
  parent: System.Windows.Forms.Form
  isExternal: false
  name: AutoScaleBaseSize
  nameWithType: Form.AutoScaleBaseSize
  fullName: System.Windows.Forms.Form.AutoScaleBaseSize
- uid: System.Drawing.Size
  parent: System.Drawing
  isExternal: false
  name: Size
  nameWithType: Size
  fullName: System.Drawing.Size
- uid: System.Windows.Forms.Form.AutoScroll
  parent: System.Windows.Forms.Form
  isExternal: false
  name: AutoScroll
  nameWithType: Form.AutoScroll
  fullName: System.Windows.Forms.Form.AutoScroll
- uid: System.Windows.Forms.Form.AutoSize
  parent: System.Windows.Forms.Form
  isExternal: false
  name: AutoSize
  nameWithType: Form.AutoSize
  fullName: System.Windows.Forms.Form.AutoSize
- uid: System.Windows.Forms.Form.AutoSizeChanged
  parent: System.Windows.Forms.Form
  isExternal: false
  name: AutoSizeChanged
  nameWithType: Form.AutoSizeChanged
  fullName: System.Windows.Forms.Form.AutoSizeChanged
- uid: System.Windows.Forms.Form.AutoSizeMode
  parent: System.Windows.Forms.Form
  isExternal: false
  name: AutoSizeMode
  nameWithType: Form.AutoSizeMode
  fullName: System.Windows.Forms.Form.AutoSizeMode
- uid: System.Windows.Forms.AutoSizeMode
  parent: System.Windows.Forms
  isExternal: false
  name: AutoSizeMode
  nameWithType: AutoSizeMode
  fullName: System.Windows.Forms.AutoSizeMode
- uid: System.Windows.Forms.Form.AutoValidate
  parent: System.Windows.Forms.Form
  isExternal: false
  name: AutoValidate
  nameWithType: Form.AutoValidate
  fullName: System.Windows.Forms.Form.AutoValidate
- uid: System.Windows.Forms.AutoValidate
  parent: System.Windows.Forms
  isExternal: false
  name: AutoValidate
  nameWithType: AutoValidate
  fullName: System.Windows.Forms.AutoValidate
- uid: System.Windows.Forms.Form.AutoValidateChanged
  parent: System.Windows.Forms.Form
  isExternal: false
  name: AutoValidateChanged
  nameWithType: Form.AutoValidateChanged
  fullName: System.Windows.Forms.Form.AutoValidateChanged
- uid: System.Windows.Forms.Form.BackColor
  parent: System.Windows.Forms.Form
  isExternal: false
  name: BackColor
  nameWithType: Form.BackColor
  fullName: System.Windows.Forms.Form.BackColor
- uid: System.Drawing.Color
  parent: System.Drawing
  isExternal: false
  name: Color
  nameWithType: Color
  fullName: System.Drawing.Color
- uid: System.Windows.Forms.Form.CancelButton
  parent: System.Windows.Forms.Form
  isExternal: false
  name: CancelButton
  nameWithType: Form.CancelButton
  fullName: System.Windows.Forms.Form.CancelButton
- uid: System.Windows.Forms.Form.CenterToParent
  parent: System.Windows.Forms.Form
  isExternal: false
  name: CenterToParent()
  nameWithType: Form.CenterToParent()
  fullName: System.Windows.Forms.Form.CenterToParent()
- uid: System.Windows.Forms.Form.CenterToScreen
  parent: System.Windows.Forms.Form
  isExternal: false
  name: CenterToScreen()
  nameWithType: Form.CenterToScreen()
  fullName: System.Windows.Forms.Form.CenterToScreen()
- uid: System.Windows.Forms.Form.ClientSize
  parent: System.Windows.Forms.Form
  isExternal: false
  name: ClientSize
  nameWithType: Form.ClientSize
  fullName: System.Windows.Forms.Form.ClientSize
- uid: System.Windows.Forms.Form.Close
  parent: System.Windows.Forms.Form
  isExternal: false
  name: Close()
  nameWithType: Form.Close()
  fullName: System.Windows.Forms.Form.Close()
- uid: System.Windows.Forms.Form.Closed
  parent: System.Windows.Forms.Form
  isExternal: false
  name: Closed
  nameWithType: Form.Closed
  fullName: System.Windows.Forms.Form.Closed
- uid: System.Windows.Forms.Form.Closing
  parent: System.Windows.Forms.Form
  isExternal: false
  name: Closing
  nameWithType: Form.Closing
  fullName: System.Windows.Forms.Form.Closing
- uid: System.ComponentModel.CancelEventHandler
  parent: System.ComponentModel
  isExternal: false
  name: CancelEventHandler
  nameWithType: CancelEventHandler
  fullName: System.ComponentModel.CancelEventHandler
- uid: System.Windows.Forms.Form.ControlBox
  parent: System.Windows.Forms.Form
  isExternal: false
  name: ControlBox
  nameWithType: Form.ControlBox
  fullName: System.Windows.Forms.Form.ControlBox
- uid: System.Windows.Forms.Form.CreateControlsInstance
  parent: System.Windows.Forms.Form
  isExternal: false
  name: CreateControlsInstance()
  nameWithType: Form.CreateControlsInstance()
  fullName: System.Windows.Forms.Form.CreateControlsInstance()
- uid: System.Windows.Forms.Control.ControlCollection
  parent: System.Windows.Forms
  isExternal: false
  name: Control+ControlCollection
  nameWithType: Control+ControlCollection
  fullName: System.Windows.Forms.Control+ControlCollection
- uid: System.Windows.Forms.Form.CreateHandle
  parent: System.Windows.Forms.Form
  isExternal: false
  name: CreateHandle()
  nameWithType: Form.CreateHandle()
  fullName: System.Windows.Forms.Form.CreateHandle()
- uid: System.Windows.Forms.Form.CreateParams
  parent: System.Windows.Forms.Form
  isExternal: false
  name: CreateParams
  nameWithType: Form.CreateParams
  fullName: System.Windows.Forms.Form.CreateParams
- uid: System.Windows.Forms.CreateParams
  parent: System.Windows.Forms
  isExternal: false
  name: CreateParams
  nameWithType: CreateParams
  fullName: System.Windows.Forms.CreateParams
- uid: System.Windows.Forms.Form.Deactivate
  parent: System.Windows.Forms.Form
  isExternal: false
  name: Deactivate
  nameWithType: Form.Deactivate
  fullName: System.Windows.Forms.Form.Deactivate
- uid: System.Windows.Forms.Form.DefaultImeMode
  parent: System.Windows.Forms.Form
  isExternal: false
  name: DefaultImeMode
  nameWithType: Form.DefaultImeMode
  fullName: System.Windows.Forms.Form.DefaultImeMode
- uid: System.Windows.Forms.ImeMode
  parent: System.Windows.Forms
  isExternal: false
  name: ImeMode
  nameWithType: ImeMode
  fullName: System.Windows.Forms.ImeMode
- uid: System.Windows.Forms.Form.DefaultSize
  parent: System.Windows.Forms.Form
  isExternal: false
  name: DefaultSize
  nameWithType: Form.DefaultSize
  fullName: System.Windows.Forms.Form.DefaultSize
- uid: System.Windows.Forms.Form.DefWndProc(System.Windows.Forms.Message@)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: DefWndProc(Message)
  nameWithType: Form.DefWndProc(Message)
  fullName: System.Windows.Forms.Form.DefWndProc(Message)
- uid: System.Windows.Forms.Message
  parent: System.Windows.Forms
  isExternal: false
  name: Message
  nameWithType: Message
  fullName: System.Windows.Forms.Message
- uid: System.Windows.Forms.Form.DesktopBounds
  parent: System.Windows.Forms.Form
  isExternal: false
  name: DesktopBounds
  nameWithType: Form.DesktopBounds
  fullName: System.Windows.Forms.Form.DesktopBounds
- uid: System.Drawing.Rectangle
  parent: System.Drawing
  isExternal: false
  name: Rectangle
  nameWithType: Rectangle
  fullName: System.Drawing.Rectangle
- uid: System.Windows.Forms.Form.DesktopLocation
  parent: System.Windows.Forms.Form
  isExternal: false
  name: DesktopLocation
  nameWithType: Form.DesktopLocation
  fullName: System.Windows.Forms.Form.DesktopLocation
- uid: System.Drawing.Point
  parent: System.Drawing
  isExternal: false
  name: Point
  nameWithType: Point
  fullName: System.Drawing.Point
- uid: System.Windows.Forms.Form.DialogResult
  parent: System.Windows.Forms.Form
  isExternal: false
  name: DialogResult
  nameWithType: Form.DialogResult
  fullName: System.Windows.Forms.Form.DialogResult
- uid: System.Windows.Forms.DialogResult
  parent: System.Windows.Forms
  isExternal: false
  name: DialogResult
  nameWithType: DialogResult
  fullName: System.Windows.Forms.DialogResult
- uid: System.Windows.Forms.Form.Dispose(System.Boolean)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: Form.Dispose(Boolean)
  fullName: System.Windows.Forms.Form.Dispose(Boolean)
- uid: System.Windows.Forms.Form.FormBorderStyle
  parent: System.Windows.Forms.Form
  isExternal: false
  name: FormBorderStyle
  nameWithType: Form.FormBorderStyle
  fullName: System.Windows.Forms.Form.FormBorderStyle
- uid: System.Windows.Forms.FormBorderStyle
  parent: System.Windows.Forms
  isExternal: false
  name: FormBorderStyle
  nameWithType: FormBorderStyle
  fullName: System.Windows.Forms.FormBorderStyle
- uid: System.Windows.Forms.Form.FormClosed
  parent: System.Windows.Forms.Form
  isExternal: false
  name: FormClosed
  nameWithType: Form.FormClosed
  fullName: System.Windows.Forms.Form.FormClosed
- uid: System.Windows.Forms.FormClosedEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: FormClosedEventHandler
  nameWithType: FormClosedEventHandler
  fullName: System.Windows.Forms.FormClosedEventHandler
- uid: System.Windows.Forms.Form.FormClosing
  parent: System.Windows.Forms.Form
  isExternal: false
  name: FormClosing
  nameWithType: Form.FormClosing
  fullName: System.Windows.Forms.Form.FormClosing
- uid: System.Windows.Forms.FormClosingEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: FormClosingEventHandler
  nameWithType: FormClosingEventHandler
  fullName: System.Windows.Forms.FormClosingEventHandler
- uid: System.Windows.Forms.Form.GetAutoScaleSize(System.Drawing.Font)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: GetAutoScaleSize(Font)
  nameWithType: Form.GetAutoScaleSize(Font)
  fullName: System.Windows.Forms.Form.GetAutoScaleSize(Font)
- uid: System.Drawing.SizeF
  parent: System.Drawing
  isExternal: false
  name: SizeF
  nameWithType: SizeF
  fullName: System.Drawing.SizeF
- uid: System.Drawing.Font
  parent: System.Drawing
  isExternal: false
  name: Font
  nameWithType: Font
  fullName: System.Drawing.Font
- uid: System.Windows.Forms.Form.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: GetScaledBounds(Rectangle,SizeF,BoundsSpecified)
  nameWithType: Form.GetScaledBounds(Rectangle,SizeF,BoundsSpecified)
  fullName: System.Windows.Forms.Form.GetScaledBounds(Rectangle,SizeF,BoundsSpecified)
- uid: System.Windows.Forms.BoundsSpecified
  parent: System.Windows.Forms
  isExternal: false
  name: BoundsSpecified
  nameWithType: BoundsSpecified
  fullName: System.Windows.Forms.BoundsSpecified
- uid: System.Windows.Forms.Form.HelpButton
  parent: System.Windows.Forms.Form
  isExternal: false
  name: HelpButton
  nameWithType: Form.HelpButton
  fullName: System.Windows.Forms.Form.HelpButton
- uid: System.Windows.Forms.Form.HelpButtonClicked
  parent: System.Windows.Forms.Form
  isExternal: false
  name: HelpButtonClicked
  nameWithType: Form.HelpButtonClicked
  fullName: System.Windows.Forms.Form.HelpButtonClicked
- uid: System.Windows.Forms.Form.Icon
  parent: System.Windows.Forms.Form
  isExternal: false
  name: Icon
  nameWithType: Form.Icon
  fullName: System.Windows.Forms.Form.Icon
- uid: System.Drawing.Icon
  parent: System.Drawing
  isExternal: false
  name: Icon
  nameWithType: Icon
  fullName: System.Drawing.Icon
- uid: System.Windows.Forms.Form.InputLanguageChanged
  parent: System.Windows.Forms.Form
  isExternal: false
  name: InputLanguageChanged
  nameWithType: Form.InputLanguageChanged
  fullName: System.Windows.Forms.Form.InputLanguageChanged
- uid: System.Windows.Forms.InputLanguageChangedEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: InputLanguageChangedEventHandler
  nameWithType: InputLanguageChangedEventHandler
  fullName: System.Windows.Forms.InputLanguageChangedEventHandler
- uid: System.Windows.Forms.Form.InputLanguageChanging
  parent: System.Windows.Forms.Form
  isExternal: false
  name: InputLanguageChanging
  nameWithType: Form.InputLanguageChanging
  fullName: System.Windows.Forms.Form.InputLanguageChanging
- uid: System.Windows.Forms.InputLanguageChangingEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: InputLanguageChangingEventHandler
  nameWithType: InputLanguageChangingEventHandler
  fullName: System.Windows.Forms.InputLanguageChangingEventHandler
- uid: System.Windows.Forms.Form.IsMdiChild
  parent: System.Windows.Forms.Form
  isExternal: false
  name: IsMdiChild
  nameWithType: Form.IsMdiChild
  fullName: System.Windows.Forms.Form.IsMdiChild
- uid: System.Windows.Forms.Form.IsMdiContainer
  parent: System.Windows.Forms.Form
  isExternal: false
  name: IsMdiContainer
  nameWithType: Form.IsMdiContainer
  fullName: System.Windows.Forms.Form.IsMdiContainer
- uid: System.Windows.Forms.Form.IsRestrictedWindow
  parent: System.Windows.Forms.Form
  isExternal: false
  name: IsRestrictedWindow
  nameWithType: Form.IsRestrictedWindow
  fullName: System.Windows.Forms.Form.IsRestrictedWindow
- uid: System.Windows.Forms.Form.KeyPreview
  parent: System.Windows.Forms.Form
  isExternal: false
  name: KeyPreview
  nameWithType: Form.KeyPreview
  fullName: System.Windows.Forms.Form.KeyPreview
- uid: System.Windows.Forms.Form.LayoutMdi(System.Windows.Forms.MdiLayout)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: LayoutMdi(MdiLayout)
  nameWithType: Form.LayoutMdi(MdiLayout)
  fullName: System.Windows.Forms.Form.LayoutMdi(MdiLayout)
- uid: System.Windows.Forms.MdiLayout
  parent: System.Windows.Forms
  isExternal: false
  name: MdiLayout
  nameWithType: MdiLayout
  fullName: System.Windows.Forms.MdiLayout
- uid: System.Windows.Forms.Form.Load
  parent: System.Windows.Forms.Form
  isExternal: false
  name: Load
  nameWithType: Form.Load
  fullName: System.Windows.Forms.Form.Load
- uid: System.Windows.Forms.Form.Location
  parent: System.Windows.Forms.Form
  isExternal: false
  name: Location
  nameWithType: Form.Location
  fullName: System.Windows.Forms.Form.Location
- uid: System.Windows.Forms.Form.MainMenuStrip
  parent: System.Windows.Forms.Form
  isExternal: false
  name: MainMenuStrip
  nameWithType: Form.MainMenuStrip
  fullName: System.Windows.Forms.Form.MainMenuStrip
- uid: System.Windows.Forms.MenuStrip
  parent: System.Windows.Forms
  isExternal: false
  name: MenuStrip
  nameWithType: MenuStrip
  fullName: System.Windows.Forms.MenuStrip
- uid: System.Windows.Forms.Form.Margin
  parent: System.Windows.Forms.Form
  isExternal: false
  name: Margin
  nameWithType: Form.Margin
  fullName: System.Windows.Forms.Form.Margin
- uid: System.Windows.Forms.Padding
  parent: System.Windows.Forms
  isExternal: false
  name: Padding
  nameWithType: Padding
  fullName: System.Windows.Forms.Padding
- uid: System.Windows.Forms.Form.MarginChanged
  parent: System.Windows.Forms.Form
  isExternal: false
  name: MarginChanged
  nameWithType: Form.MarginChanged
  fullName: System.Windows.Forms.Form.MarginChanged
- uid: System.Windows.Forms.Form.MaximizeBox
  parent: System.Windows.Forms.Form
  isExternal: false
  name: MaximizeBox
  nameWithType: Form.MaximizeBox
  fullName: System.Windows.Forms.Form.MaximizeBox
- uid: System.Windows.Forms.Form.MaximizedBounds
  parent: System.Windows.Forms.Form
  isExternal: false
  name: MaximizedBounds
  nameWithType: Form.MaximizedBounds
  fullName: System.Windows.Forms.Form.MaximizedBounds
- uid: System.Windows.Forms.Form.MaximizedBoundsChanged
  parent: System.Windows.Forms.Form
  isExternal: false
  name: MaximizedBoundsChanged
  nameWithType: Form.MaximizedBoundsChanged
  fullName: System.Windows.Forms.Form.MaximizedBoundsChanged
- uid: System.Windows.Forms.Form.MaximumSize
  parent: System.Windows.Forms.Form
  isExternal: false
  name: MaximumSize
  nameWithType: Form.MaximumSize
  fullName: System.Windows.Forms.Form.MaximumSize
- uid: System.Windows.Forms.Form.MaximumSizeChanged
  parent: System.Windows.Forms.Form
  isExternal: false
  name: MaximumSizeChanged
  nameWithType: Form.MaximumSizeChanged
  fullName: System.Windows.Forms.Form.MaximumSizeChanged
- uid: System.Windows.Forms.Form.MdiChildActivate
  parent: System.Windows.Forms.Form
  isExternal: false
  name: MdiChildActivate
  nameWithType: Form.MdiChildActivate
  fullName: System.Windows.Forms.Form.MdiChildActivate
- uid: System.Windows.Forms.Form.MdiChildren
  parent: System.Windows.Forms.Form
  isExternal: false
  name: MdiChildren
  nameWithType: Form.MdiChildren
  fullName: System.Windows.Forms.Form.MdiChildren
- uid: System.Windows.Forms.Form[]
  parent: System.Windows.Forms
  isExternal: false
  name: Form
  nameWithType: Form
  fullName: System.Windows.Forms.Form[]
  spec.csharp:
  - uid: System.Windows.Forms.Form
    name: Form
    nameWithType: Form
    fullName: Form[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Forms.Form.MdiParent
  parent: System.Windows.Forms.Form
  isExternal: false
  name: MdiParent
  nameWithType: Form.MdiParent
  fullName: System.Windows.Forms.Form.MdiParent
- uid: System.Windows.Forms.Form.Menu
  parent: System.Windows.Forms.Form
  isExternal: false
  name: Menu
  nameWithType: Form.Menu
  fullName: System.Windows.Forms.Form.Menu
- uid: System.Windows.Forms.MainMenu
  parent: System.Windows.Forms
  isExternal: false
  name: MainMenu
  nameWithType: MainMenu
  fullName: System.Windows.Forms.MainMenu
- uid: System.Windows.Forms.Form.MenuComplete
  parent: System.Windows.Forms.Form
  isExternal: false
  name: MenuComplete
  nameWithType: Form.MenuComplete
  fullName: System.Windows.Forms.Form.MenuComplete
- uid: System.Windows.Forms.Form.MenuStart
  parent: System.Windows.Forms.Form
  isExternal: false
  name: MenuStart
  nameWithType: Form.MenuStart
  fullName: System.Windows.Forms.Form.MenuStart
- uid: System.Windows.Forms.Form.MergedMenu
  parent: System.Windows.Forms.Form
  isExternal: false
  name: MergedMenu
  nameWithType: Form.MergedMenu
  fullName: System.Windows.Forms.Form.MergedMenu
- uid: System.Windows.Forms.Form.MinimizeBox
  parent: System.Windows.Forms.Form
  isExternal: false
  name: MinimizeBox
  nameWithType: Form.MinimizeBox
  fullName: System.Windows.Forms.Form.MinimizeBox
- uid: System.Windows.Forms.Form.MinimumSize
  parent: System.Windows.Forms.Form
  isExternal: false
  name: MinimumSize
  nameWithType: Form.MinimumSize
  fullName: System.Windows.Forms.Form.MinimumSize
- uid: System.Windows.Forms.Form.MinimumSizeChanged
  parent: System.Windows.Forms.Form
  isExternal: false
  name: MinimumSizeChanged
  nameWithType: Form.MinimumSizeChanged
  fullName: System.Windows.Forms.Form.MinimumSizeChanged
- uid: System.Windows.Forms.Form.Modal
  parent: System.Windows.Forms.Form
  isExternal: false
  name: Modal
  nameWithType: Form.Modal
  fullName: System.Windows.Forms.Form.Modal
- uid: System.Windows.Forms.Form.OnActivated(System.EventArgs)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnActivated(EventArgs)
  nameWithType: Form.OnActivated(EventArgs)
  fullName: System.Windows.Forms.Form.OnActivated(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Windows.Forms.Form.OnBackgroundImageChanged(System.EventArgs)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnBackgroundImageChanged(EventArgs)
  nameWithType: Form.OnBackgroundImageChanged(EventArgs)
  fullName: System.Windows.Forms.Form.OnBackgroundImageChanged(EventArgs)
- uid: System.Windows.Forms.Form.OnBackgroundImageLayoutChanged(System.EventArgs)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnBackgroundImageLayoutChanged(EventArgs)
  nameWithType: Form.OnBackgroundImageLayoutChanged(EventArgs)
  fullName: System.Windows.Forms.Form.OnBackgroundImageLayoutChanged(EventArgs)
- uid: System.Windows.Forms.Form.OnClosed(System.EventArgs)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnClosed(EventArgs)
  nameWithType: Form.OnClosed(EventArgs)
  fullName: System.Windows.Forms.Form.OnClosed(EventArgs)
- uid: System.Windows.Forms.Form.OnClosing(System.ComponentModel.CancelEventArgs)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnClosing(CancelEventArgs)
  nameWithType: Form.OnClosing(CancelEventArgs)
  fullName: System.Windows.Forms.Form.OnClosing(CancelEventArgs)
- uid: System.ComponentModel.CancelEventArgs
  parent: System.ComponentModel
  isExternal: true
  name: CancelEventArgs
  nameWithType: CancelEventArgs
  fullName: System.ComponentModel.CancelEventArgs
- uid: System.Windows.Forms.Form.OnCreateControl
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnCreateControl()
  nameWithType: Form.OnCreateControl()
  fullName: System.Windows.Forms.Form.OnCreateControl()
- uid: System.Windows.Forms.Form.OnDeactivate(System.EventArgs)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnDeactivate(EventArgs)
  nameWithType: Form.OnDeactivate(EventArgs)
  fullName: System.Windows.Forms.Form.OnDeactivate(EventArgs)
- uid: System.Windows.Forms.Form.OnEnabledChanged(System.EventArgs)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnEnabledChanged(EventArgs)
  nameWithType: Form.OnEnabledChanged(EventArgs)
  fullName: System.Windows.Forms.Form.OnEnabledChanged(EventArgs)
- uid: System.Windows.Forms.Form.OnEnter(System.EventArgs)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnEnter(EventArgs)
  nameWithType: Form.OnEnter(EventArgs)
  fullName: System.Windows.Forms.Form.OnEnter(EventArgs)
- uid: System.Windows.Forms.Form.OnFontChanged(System.EventArgs)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnFontChanged(EventArgs)
  nameWithType: Form.OnFontChanged(EventArgs)
  fullName: System.Windows.Forms.Form.OnFontChanged(EventArgs)
- uid: System.Windows.Forms.Form.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnFormClosed(FormClosedEventArgs)
  nameWithType: Form.OnFormClosed(FormClosedEventArgs)
  fullName: System.Windows.Forms.Form.OnFormClosed(FormClosedEventArgs)
- uid: System.Windows.Forms.FormClosedEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: FormClosedEventArgs
  nameWithType: FormClosedEventArgs
  fullName: System.Windows.Forms.FormClosedEventArgs
- uid: System.Windows.Forms.Form.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnFormClosing(FormClosingEventArgs)
  nameWithType: Form.OnFormClosing(FormClosingEventArgs)
  fullName: System.Windows.Forms.Form.OnFormClosing(FormClosingEventArgs)
- uid: System.Windows.Forms.FormClosingEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: FormClosingEventArgs
  nameWithType: FormClosingEventArgs
  fullName: System.Windows.Forms.FormClosingEventArgs
- uid: System.Windows.Forms.Form.OnHandleCreated(System.EventArgs)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnHandleCreated(EventArgs)
  nameWithType: Form.OnHandleCreated(EventArgs)
  fullName: System.Windows.Forms.Form.OnHandleCreated(EventArgs)
- uid: System.Windows.Forms.Form.OnHandleDestroyed(System.EventArgs)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnHandleDestroyed(EventArgs)
  nameWithType: Form.OnHandleDestroyed(EventArgs)
  fullName: System.Windows.Forms.Form.OnHandleDestroyed(EventArgs)
- uid: System.Windows.Forms.Form.OnHelpButtonClicked(System.ComponentModel.CancelEventArgs)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnHelpButtonClicked(CancelEventArgs)
  nameWithType: Form.OnHelpButtonClicked(CancelEventArgs)
  fullName: System.Windows.Forms.Form.OnHelpButtonClicked(CancelEventArgs)
- uid: System.Windows.Forms.Form.OnInputLanguageChanged(System.Windows.Forms.InputLanguageChangedEventArgs)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnInputLanguageChanged(InputLanguageChangedEventArgs)
  nameWithType: Form.OnInputLanguageChanged(InputLanguageChangedEventArgs)
  fullName: System.Windows.Forms.Form.OnInputLanguageChanged(InputLanguageChangedEventArgs)
- uid: System.Windows.Forms.InputLanguageChangedEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: InputLanguageChangedEventArgs
  nameWithType: InputLanguageChangedEventArgs
  fullName: System.Windows.Forms.InputLanguageChangedEventArgs
- uid: System.Windows.Forms.Form.OnInputLanguageChanging(System.Windows.Forms.InputLanguageChangingEventArgs)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnInputLanguageChanging(InputLanguageChangingEventArgs)
  nameWithType: Form.OnInputLanguageChanging(InputLanguageChangingEventArgs)
  fullName: System.Windows.Forms.Form.OnInputLanguageChanging(InputLanguageChangingEventArgs)
- uid: System.Windows.Forms.InputLanguageChangingEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: InputLanguageChangingEventArgs
  nameWithType: InputLanguageChangingEventArgs
  fullName: System.Windows.Forms.InputLanguageChangingEventArgs
- uid: System.Windows.Forms.Form.OnLayout(System.Windows.Forms.LayoutEventArgs)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnLayout(LayoutEventArgs)
  nameWithType: Form.OnLayout(LayoutEventArgs)
  fullName: System.Windows.Forms.Form.OnLayout(LayoutEventArgs)
- uid: System.Windows.Forms.LayoutEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: LayoutEventArgs
  nameWithType: LayoutEventArgs
  fullName: System.Windows.Forms.LayoutEventArgs
- uid: System.Windows.Forms.Form.OnLoad(System.EventArgs)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnLoad(EventArgs)
  nameWithType: Form.OnLoad(EventArgs)
  fullName: System.Windows.Forms.Form.OnLoad(EventArgs)
- uid: System.Windows.Forms.Form.OnMaximizedBoundsChanged(System.EventArgs)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnMaximizedBoundsChanged(EventArgs)
  nameWithType: Form.OnMaximizedBoundsChanged(EventArgs)
  fullName: System.Windows.Forms.Form.OnMaximizedBoundsChanged(EventArgs)
- uid: System.Windows.Forms.Form.OnMaximumSizeChanged(System.EventArgs)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnMaximumSizeChanged(EventArgs)
  nameWithType: Form.OnMaximumSizeChanged(EventArgs)
  fullName: System.Windows.Forms.Form.OnMaximumSizeChanged(EventArgs)
- uid: System.Windows.Forms.Form.OnMdiChildActivate(System.EventArgs)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnMdiChildActivate(EventArgs)
  nameWithType: Form.OnMdiChildActivate(EventArgs)
  fullName: System.Windows.Forms.Form.OnMdiChildActivate(EventArgs)
- uid: System.Windows.Forms.Form.OnMenuComplete(System.EventArgs)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnMenuComplete(EventArgs)
  nameWithType: Form.OnMenuComplete(EventArgs)
  fullName: System.Windows.Forms.Form.OnMenuComplete(EventArgs)
- uid: System.Windows.Forms.Form.OnMenuStart(System.EventArgs)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnMenuStart(EventArgs)
  nameWithType: Form.OnMenuStart(EventArgs)
  fullName: System.Windows.Forms.Form.OnMenuStart(EventArgs)
- uid: System.Windows.Forms.Form.OnMinimumSizeChanged(System.EventArgs)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnMinimumSizeChanged(EventArgs)
  nameWithType: Form.OnMinimumSizeChanged(EventArgs)
  fullName: System.Windows.Forms.Form.OnMinimumSizeChanged(EventArgs)
- uid: System.Windows.Forms.Form.OnPaint(System.Windows.Forms.PaintEventArgs)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnPaint(PaintEventArgs)
  nameWithType: Form.OnPaint(PaintEventArgs)
  fullName: System.Windows.Forms.Form.OnPaint(PaintEventArgs)
- uid: System.Windows.Forms.PaintEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: PaintEventArgs
  nameWithType: PaintEventArgs
  fullName: System.Windows.Forms.PaintEventArgs
- uid: System.Windows.Forms.Form.OnResize(System.EventArgs)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnResize(EventArgs)
  nameWithType: Form.OnResize(EventArgs)
  fullName: System.Windows.Forms.Form.OnResize(EventArgs)
- uid: System.Windows.Forms.Form.OnResizeBegin(System.EventArgs)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnResizeBegin(EventArgs)
  nameWithType: Form.OnResizeBegin(EventArgs)
  fullName: System.Windows.Forms.Form.OnResizeBegin(EventArgs)
- uid: System.Windows.Forms.Form.OnResizeEnd(System.EventArgs)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnResizeEnd(EventArgs)
  nameWithType: Form.OnResizeEnd(EventArgs)
  fullName: System.Windows.Forms.Form.OnResizeEnd(EventArgs)
- uid: System.Windows.Forms.Form.OnRightToLeftLayoutChanged(System.EventArgs)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnRightToLeftLayoutChanged(EventArgs)
  nameWithType: Form.OnRightToLeftLayoutChanged(EventArgs)
  fullName: System.Windows.Forms.Form.OnRightToLeftLayoutChanged(EventArgs)
- uid: System.Windows.Forms.Form.OnShown(System.EventArgs)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnShown(EventArgs)
  nameWithType: Form.OnShown(EventArgs)
  fullName: System.Windows.Forms.Form.OnShown(EventArgs)
- uid: System.Windows.Forms.Form.OnStyleChanged(System.EventArgs)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnStyleChanged(EventArgs)
  nameWithType: Form.OnStyleChanged(EventArgs)
  fullName: System.Windows.Forms.Form.OnStyleChanged(EventArgs)
- uid: System.Windows.Forms.Form.OnTextChanged(System.EventArgs)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnTextChanged(EventArgs)
  nameWithType: Form.OnTextChanged(EventArgs)
  fullName: System.Windows.Forms.Form.OnTextChanged(EventArgs)
- uid: System.Windows.Forms.Form.OnVisibleChanged(System.EventArgs)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnVisibleChanged(EventArgs)
  nameWithType: Form.OnVisibleChanged(EventArgs)
  fullName: System.Windows.Forms.Form.OnVisibleChanged(EventArgs)
- uid: System.Windows.Forms.Form.Opacity
  parent: System.Windows.Forms.Form
  isExternal: false
  name: Opacity
  nameWithType: Form.Opacity
  fullName: System.Windows.Forms.Form.Opacity
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.Forms.Form.OwnedForms
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OwnedForms
  nameWithType: Form.OwnedForms
  fullName: System.Windows.Forms.Form.OwnedForms
- uid: System.Windows.Forms.Form.Owner
  parent: System.Windows.Forms.Form
  isExternal: false
  name: Owner
  nameWithType: Form.Owner
  fullName: System.Windows.Forms.Form.Owner
- uid: System.Windows.Forms.Form.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: ProcessCmdKey(Message,Keys)
  nameWithType: Form.ProcessCmdKey(Message,Keys)
  fullName: System.Windows.Forms.Form.ProcessCmdKey(Message,Keys)
- uid: System.Windows.Forms.Keys
  parent: System.Windows.Forms
  isExternal: false
  name: Keys
  nameWithType: Keys
  fullName: System.Windows.Forms.Keys
- uid: System.Windows.Forms.Form.ProcessDialogChar(System.Char)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: ProcessDialogChar(Char)
  nameWithType: Form.ProcessDialogChar(Char)
  fullName: System.Windows.Forms.Form.ProcessDialogChar(Char)
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Windows.Forms.Form.ProcessDialogKey(System.Windows.Forms.Keys)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: ProcessDialogKey(Keys)
  nameWithType: Form.ProcessDialogKey(Keys)
  fullName: System.Windows.Forms.Form.ProcessDialogKey(Keys)
- uid: System.Windows.Forms.Form.ProcessKeyPreview(System.Windows.Forms.Message@)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: ProcessKeyPreview(Message)
  nameWithType: Form.ProcessKeyPreview(Message)
  fullName: System.Windows.Forms.Form.ProcessKeyPreview(Message)
- uid: System.Windows.Forms.Form.ProcessMnemonic(System.Char)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: ProcessMnemonic(Char)
  nameWithType: Form.ProcessMnemonic(Char)
  fullName: System.Windows.Forms.Form.ProcessMnemonic(Char)
- uid: System.Windows.Forms.Form.ProcessTabKey(System.Boolean)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: ProcessTabKey(Boolean)
  nameWithType: Form.ProcessTabKey(Boolean)
  fullName: System.Windows.Forms.Form.ProcessTabKey(Boolean)
- uid: System.Windows.Forms.Form.RemoveOwnedForm(System.Windows.Forms.Form)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: RemoveOwnedForm(Form)
  nameWithType: Form.RemoveOwnedForm(Form)
  fullName: System.Windows.Forms.Form.RemoveOwnedForm(Form)
- uid: System.Windows.Forms.Form.ResizeBegin
  parent: System.Windows.Forms.Form
  isExternal: false
  name: ResizeBegin
  nameWithType: Form.ResizeBegin
  fullName: System.Windows.Forms.Form.ResizeBegin
- uid: System.Windows.Forms.Form.ResizeEnd
  parent: System.Windows.Forms.Form
  isExternal: false
  name: ResizeEnd
  nameWithType: Form.ResizeEnd
  fullName: System.Windows.Forms.Form.ResizeEnd
- uid: System.Windows.Forms.Form.RestoreBounds
  parent: System.Windows.Forms.Form
  isExternal: false
  name: RestoreBounds
  nameWithType: Form.RestoreBounds
  fullName: System.Windows.Forms.Form.RestoreBounds
- uid: System.Windows.Forms.Form.RightToLeftLayout
  parent: System.Windows.Forms.Form
  isExternal: false
  name: RightToLeftLayout
  nameWithType: Form.RightToLeftLayout
  fullName: System.Windows.Forms.Form.RightToLeftLayout
- uid: System.Windows.Forms.Form.RightToLeftLayoutChanged
  parent: System.Windows.Forms.Form
  isExternal: false
  name: RightToLeftLayoutChanged
  nameWithType: Form.RightToLeftLayoutChanged
  fullName: System.Windows.Forms.Form.RightToLeftLayoutChanged
- uid: System.Windows.Forms.Form.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: ScaleControl(SizeF,BoundsSpecified)
  nameWithType: Form.ScaleControl(SizeF,BoundsSpecified)
  fullName: System.Windows.Forms.Form.ScaleControl(SizeF,BoundsSpecified)
- uid: System.Windows.Forms.Form.ScaleCore(System.Single,System.Single)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: ScaleCore(Single,Single)
  nameWithType: Form.ScaleCore(Single,Single)
  fullName: System.Windows.Forms.Form.ScaleCore(Single,Single)
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Windows.Forms.Form.Select(System.Boolean,System.Boolean)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: Select(Boolean,Boolean)
  nameWithType: Form.Select(Boolean,Boolean)
  fullName: System.Windows.Forms.Form.Select(Boolean,Boolean)
- uid: System.Windows.Forms.Form.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: SetBoundsCore(Int32,Int32,Int32,Int32,BoundsSpecified)
  nameWithType: Form.SetBoundsCore(Int32,Int32,Int32,Int32,BoundsSpecified)
  fullName: System.Windows.Forms.Form.SetBoundsCore(Int32,Int32,Int32,Int32,BoundsSpecified)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Forms.Form.SetClientSizeCore(System.Int32,System.Int32)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: SetClientSizeCore(Int32,Int32)
  nameWithType: Form.SetClientSizeCore(Int32,Int32)
  fullName: System.Windows.Forms.Form.SetClientSizeCore(Int32,Int32)
- uid: System.Windows.Forms.Form.SetDesktopBounds(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: SetDesktopBounds(Int32,Int32,Int32,Int32)
  nameWithType: Form.SetDesktopBounds(Int32,Int32,Int32,Int32)
  fullName: System.Windows.Forms.Form.SetDesktopBounds(Int32,Int32,Int32,Int32)
- uid: System.Windows.Forms.Form.SetDesktopLocation(System.Int32,System.Int32)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: SetDesktopLocation(Int32,Int32)
  nameWithType: Form.SetDesktopLocation(Int32,Int32)
  fullName: System.Windows.Forms.Form.SetDesktopLocation(Int32,Int32)
- uid: System.Windows.Forms.Form.SetVisibleCore(System.Boolean)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: SetVisibleCore(Boolean)
  nameWithType: Form.SetVisibleCore(Boolean)
  fullName: System.Windows.Forms.Form.SetVisibleCore(Boolean)
- uid: System.Windows.Forms.Form.Show(System.Windows.Forms.IWin32Window)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: Show(IWin32Window)
  nameWithType: Form.Show(IWin32Window)
  fullName: System.Windows.Forms.Form.Show(IWin32Window)
- uid: System.Windows.Forms.IWin32Window
  parent: System.Windows.Forms
  isExternal: false
  name: IWin32Window
  nameWithType: IWin32Window
  fullName: System.Windows.Forms.IWin32Window
- uid: System.Windows.Forms.Form.ShowDialog
  parent: System.Windows.Forms.Form
  isExternal: false
  name: ShowDialog()
  nameWithType: Form.ShowDialog()
  fullName: System.Windows.Forms.Form.ShowDialog()
- uid: System.Windows.Forms.Form.ShowDialog(System.Windows.Forms.IWin32Window)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: ShowDialog(IWin32Window)
  nameWithType: Form.ShowDialog(IWin32Window)
  fullName: System.Windows.Forms.Form.ShowDialog(IWin32Window)
- uid: System.Windows.Forms.Form.ShowIcon
  parent: System.Windows.Forms.Form
  isExternal: false
  name: ShowIcon
  nameWithType: Form.ShowIcon
  fullName: System.Windows.Forms.Form.ShowIcon
- uid: System.Windows.Forms.Form.ShowInTaskbar
  parent: System.Windows.Forms.Form
  isExternal: false
  name: ShowInTaskbar
  nameWithType: Form.ShowInTaskbar
  fullName: System.Windows.Forms.Form.ShowInTaskbar
- uid: System.Windows.Forms.Form.Shown
  parent: System.Windows.Forms.Form
  isExternal: false
  name: Shown
  nameWithType: Form.Shown
  fullName: System.Windows.Forms.Form.Shown
- uid: System.Windows.Forms.Form.ShowWithoutActivation
  parent: System.Windows.Forms.Form
  isExternal: false
  name: ShowWithoutActivation
  nameWithType: Form.ShowWithoutActivation
  fullName: System.Windows.Forms.Form.ShowWithoutActivation
- uid: System.Windows.Forms.Form.Size
  parent: System.Windows.Forms.Form
  isExternal: false
  name: Size
  nameWithType: Form.Size
  fullName: System.Windows.Forms.Form.Size
- uid: System.Windows.Forms.Form.SizeGripStyle
  parent: System.Windows.Forms.Form
  isExternal: false
  name: SizeGripStyle
  nameWithType: Form.SizeGripStyle
  fullName: System.Windows.Forms.Form.SizeGripStyle
- uid: System.Windows.Forms.SizeGripStyle
  parent: System.Windows.Forms
  isExternal: false
  name: SizeGripStyle
  nameWithType: SizeGripStyle
  fullName: System.Windows.Forms.SizeGripStyle
- uid: System.Windows.Forms.Form.StartPosition
  parent: System.Windows.Forms.Form
  isExternal: false
  name: StartPosition
  nameWithType: Form.StartPosition
  fullName: System.Windows.Forms.Form.StartPosition
- uid: System.Windows.Forms.FormStartPosition
  parent: System.Windows.Forms
  isExternal: false
  name: FormStartPosition
  nameWithType: FormStartPosition
  fullName: System.Windows.Forms.FormStartPosition
- uid: System.Windows.Forms.Form.TabIndex
  parent: System.Windows.Forms.Form
  isExternal: false
  name: TabIndex
  nameWithType: Form.TabIndex
  fullName: System.Windows.Forms.Form.TabIndex
- uid: System.Windows.Forms.Form.TabIndexChanged
  parent: System.Windows.Forms.Form
  isExternal: false
  name: TabIndexChanged
  nameWithType: Form.TabIndexChanged
  fullName: System.Windows.Forms.Form.TabIndexChanged
- uid: System.Windows.Forms.Form.TabStop
  parent: System.Windows.Forms.Form
  isExternal: false
  name: TabStop
  nameWithType: Form.TabStop
  fullName: System.Windows.Forms.Form.TabStop
- uid: System.Windows.Forms.Form.TabStopChanged
  parent: System.Windows.Forms.Form
  isExternal: false
  name: TabStopChanged
  nameWithType: Form.TabStopChanged
  fullName: System.Windows.Forms.Form.TabStopChanged
- uid: System.Windows.Forms.Form.Text
  parent: System.Windows.Forms.Form
  isExternal: false
  name: Text
  nameWithType: Form.Text
  fullName: System.Windows.Forms.Form.Text
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Forms.Form.TopLevel
  parent: System.Windows.Forms.Form
  isExternal: false
  name: TopLevel
  nameWithType: Form.TopLevel
  fullName: System.Windows.Forms.Form.TopLevel
- uid: System.Windows.Forms.Form.TopMost
  parent: System.Windows.Forms.Form
  isExternal: false
  name: TopMost
  nameWithType: Form.TopMost
  fullName: System.Windows.Forms.Form.TopMost
- uid: System.Windows.Forms.Form.ToString
  parent: System.Windows.Forms.Form
  isExternal: false
  name: ToString()
  nameWithType: Form.ToString()
  fullName: System.Windows.Forms.Form.ToString()
- uid: System.Windows.Forms.Form.TransparencyKey
  parent: System.Windows.Forms.Form
  isExternal: false
  name: TransparencyKey
  nameWithType: Form.TransparencyKey
  fullName: System.Windows.Forms.Form.TransparencyKey
- uid: System.Windows.Forms.Form.UpdateDefaultButton
  parent: System.Windows.Forms.Form
  isExternal: false
  name: UpdateDefaultButton()
  nameWithType: Form.UpdateDefaultButton()
  fullName: System.Windows.Forms.Form.UpdateDefaultButton()
- uid: System.Windows.Forms.Form.ValidateChildren
  parent: System.Windows.Forms.Form
  isExternal: false
  name: ValidateChildren()
  nameWithType: Form.ValidateChildren()
  fullName: System.Windows.Forms.Form.ValidateChildren()
- uid: System.Windows.Forms.Form.ValidateChildren(System.Windows.Forms.ValidationConstraints)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: ValidateChildren(ValidationConstraints)
  nameWithType: Form.ValidateChildren(ValidationConstraints)
  fullName: System.Windows.Forms.Form.ValidateChildren(ValidationConstraints)
- uid: System.Windows.Forms.ValidationConstraints
  parent: System.Windows.Forms
  isExternal: false
  name: ValidationConstraints
  nameWithType: ValidationConstraints
  fullName: System.Windows.Forms.ValidationConstraints
- uid: System.Windows.Forms.Form.WindowState
  parent: System.Windows.Forms.Form
  isExternal: false
  name: WindowState
  nameWithType: Form.WindowState
  fullName: System.Windows.Forms.Form.WindowState
- uid: System.Windows.Forms.FormWindowState
  parent: System.Windows.Forms
  isExternal: false
  name: FormWindowState
  nameWithType: FormWindowState
  fullName: System.Windows.Forms.FormWindowState
- uid: System.Windows.Forms.Form.WndProc(System.Windows.Forms.Message@)
  parent: System.Windows.Forms.Form
  isExternal: false
  name: WndProc(Message)
  nameWithType: Form.WndProc(Message)
  fullName: System.Windows.Forms.Form.WndProc(Message)
- uid: System.Windows.Forms.Form.#ctor*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: Form
  nameWithType: Form.Form
- uid: System.Windows.Forms.Form.AcceptButton*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: AcceptButton
  nameWithType: Form.AcceptButton
- uid: System.Windows.Forms.Form.Activate*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: Activate
  nameWithType: Form.Activate
- uid: System.Windows.Forms.Form.ActivateMdiChild*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: ActivateMdiChild
  nameWithType: Form.ActivateMdiChild
- uid: System.Windows.Forms.Form.ActiveForm*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: ActiveForm
  nameWithType: Form.ActiveForm
- uid: System.Windows.Forms.Form.ActiveMdiChild*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: ActiveMdiChild
  nameWithType: Form.ActiveMdiChild
- uid: System.Windows.Forms.Form.AddOwnedForm*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: AddOwnedForm
  nameWithType: Form.AddOwnedForm
- uid: System.Windows.Forms.Form.AdjustFormScrollbars*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: AdjustFormScrollbars
  nameWithType: Form.AdjustFormScrollbars
- uid: System.Windows.Forms.Form.AllowTransparency*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: AllowTransparency
  nameWithType: Form.AllowTransparency
- uid: System.Windows.Forms.Form.ApplyAutoScaling*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: ApplyAutoScaling
  nameWithType: Form.ApplyAutoScaling
- uid: System.Windows.Forms.Form.AutoScale*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: AutoScale
  nameWithType: Form.AutoScale
- uid: System.Windows.Forms.Form.AutoScaleBaseSize*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: AutoScaleBaseSize
  nameWithType: Form.AutoScaleBaseSize
- uid: System.Windows.Forms.Form.AutoScroll*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: AutoScroll
  nameWithType: Form.AutoScroll
- uid: System.Windows.Forms.Form.AutoSize*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: AutoSize
  nameWithType: Form.AutoSize
- uid: System.Windows.Forms.Form.AutoSizeMode*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: AutoSizeMode
  nameWithType: Form.AutoSizeMode
- uid: System.Windows.Forms.Form.AutoValidate*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: AutoValidate
  nameWithType: Form.AutoValidate
- uid: System.Windows.Forms.Form.BackColor*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: BackColor
  nameWithType: Form.BackColor
- uid: System.Windows.Forms.Form.CancelButton*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: CancelButton
  nameWithType: Form.CancelButton
- uid: System.Windows.Forms.Form.CenterToParent*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: CenterToParent
  nameWithType: Form.CenterToParent
- uid: System.Windows.Forms.Form.CenterToScreen*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: CenterToScreen
  nameWithType: Form.CenterToScreen
- uid: System.Windows.Forms.Form.ClientSize*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: ClientSize
  nameWithType: Form.ClientSize
- uid: System.Windows.Forms.Form.Close*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: Close
  nameWithType: Form.Close
- uid: System.Windows.Forms.Form.ControlBox*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: ControlBox
  nameWithType: Form.ControlBox
- uid: System.Windows.Forms.Form.CreateControlsInstance*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: CreateControlsInstance
  nameWithType: Form.CreateControlsInstance
- uid: System.Windows.Forms.Form.CreateHandle*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: CreateHandle
  nameWithType: Form.CreateHandle
- uid: System.Windows.Forms.Form.CreateParams*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: CreateParams
  nameWithType: Form.CreateParams
- uid: System.Windows.Forms.Form.DefaultImeMode*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: DefaultImeMode
  nameWithType: Form.DefaultImeMode
- uid: System.Windows.Forms.Form.DefaultSize*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: DefaultSize
  nameWithType: Form.DefaultSize
- uid: System.Windows.Forms.Form.DefWndProc*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: DefWndProc
  nameWithType: Form.DefWndProc
- uid: System.Windows.Forms.Form.DesktopBounds*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: DesktopBounds
  nameWithType: Form.DesktopBounds
- uid: System.Windows.Forms.Form.DesktopLocation*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: DesktopLocation
  nameWithType: Form.DesktopLocation
- uid: System.Windows.Forms.Form.DialogResult*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: DialogResult
  nameWithType: Form.DialogResult
- uid: System.Windows.Forms.Form.Dispose*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: Dispose
  nameWithType: Form.Dispose
- uid: System.Windows.Forms.Form.FormBorderStyle*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: FormBorderStyle
  nameWithType: Form.FormBorderStyle
- uid: System.Windows.Forms.Form.GetAutoScaleSize*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: GetAutoScaleSize
  nameWithType: Form.GetAutoScaleSize
- uid: System.Windows.Forms.Form.GetScaledBounds*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: GetScaledBounds
  nameWithType: Form.GetScaledBounds
- uid: System.Windows.Forms.Form.HelpButton*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: HelpButton
  nameWithType: Form.HelpButton
- uid: System.Windows.Forms.Form.Icon*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: Icon
  nameWithType: Form.Icon
- uid: System.Windows.Forms.Form.IsMdiChild*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: IsMdiChild
  nameWithType: Form.IsMdiChild
- uid: System.Windows.Forms.Form.IsMdiContainer*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: IsMdiContainer
  nameWithType: Form.IsMdiContainer
- uid: System.Windows.Forms.Form.IsRestrictedWindow*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: IsRestrictedWindow
  nameWithType: Form.IsRestrictedWindow
- uid: System.Windows.Forms.Form.KeyPreview*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: KeyPreview
  nameWithType: Form.KeyPreview
- uid: System.Windows.Forms.Form.LayoutMdi*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: LayoutMdi
  nameWithType: Form.LayoutMdi
- uid: System.Windows.Forms.Form.Location*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: Location
  nameWithType: Form.Location
- uid: System.Windows.Forms.Form.MainMenuStrip*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: MainMenuStrip
  nameWithType: Form.MainMenuStrip
- uid: System.Windows.Forms.Form.Margin*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: Margin
  nameWithType: Form.Margin
- uid: System.Windows.Forms.Form.MaximizeBox*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: MaximizeBox
  nameWithType: Form.MaximizeBox
- uid: System.Windows.Forms.Form.MaximizedBounds*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: MaximizedBounds
  nameWithType: Form.MaximizedBounds
- uid: System.Windows.Forms.Form.MaximumSize*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: MaximumSize
  nameWithType: Form.MaximumSize
- uid: System.Windows.Forms.Form.MdiChildren*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: MdiChildren
  nameWithType: Form.MdiChildren
- uid: System.Windows.Forms.Form.MdiParent*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: MdiParent
  nameWithType: Form.MdiParent
- uid: System.Windows.Forms.Form.Menu*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: Menu
  nameWithType: Form.Menu
- uid: System.Windows.Forms.Form.MergedMenu*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: MergedMenu
  nameWithType: Form.MergedMenu
- uid: System.Windows.Forms.Form.MinimizeBox*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: MinimizeBox
  nameWithType: Form.MinimizeBox
- uid: System.Windows.Forms.Form.MinimumSize*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: MinimumSize
  nameWithType: Form.MinimumSize
- uid: System.Windows.Forms.Form.Modal*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: Modal
  nameWithType: Form.Modal
- uid: System.Windows.Forms.Form.OnActivated*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnActivated
  nameWithType: Form.OnActivated
- uid: System.Windows.Forms.Form.OnBackgroundImageChanged*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnBackgroundImageChanged
  nameWithType: Form.OnBackgroundImageChanged
- uid: System.Windows.Forms.Form.OnBackgroundImageLayoutChanged*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnBackgroundImageLayoutChanged
  nameWithType: Form.OnBackgroundImageLayoutChanged
- uid: System.Windows.Forms.Form.OnClosed*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnClosed
  nameWithType: Form.OnClosed
- uid: System.Windows.Forms.Form.OnClosing*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnClosing
  nameWithType: Form.OnClosing
- uid: System.Windows.Forms.Form.OnCreateControl*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnCreateControl
  nameWithType: Form.OnCreateControl
- uid: System.Windows.Forms.Form.OnDeactivate*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnDeactivate
  nameWithType: Form.OnDeactivate
- uid: System.Windows.Forms.Form.OnEnabledChanged*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnEnabledChanged
  nameWithType: Form.OnEnabledChanged
- uid: System.Windows.Forms.Form.OnEnter*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnEnter
  nameWithType: Form.OnEnter
- uid: System.Windows.Forms.Form.OnFontChanged*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnFontChanged
  nameWithType: Form.OnFontChanged
- uid: System.Windows.Forms.Form.OnFormClosed*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnFormClosed
  nameWithType: Form.OnFormClosed
- uid: System.Windows.Forms.Form.OnFormClosing*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnFormClosing
  nameWithType: Form.OnFormClosing
- uid: System.Windows.Forms.Form.OnHandleCreated*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnHandleCreated
  nameWithType: Form.OnHandleCreated
- uid: System.Windows.Forms.Form.OnHandleDestroyed*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnHandleDestroyed
  nameWithType: Form.OnHandleDestroyed
- uid: System.Windows.Forms.Form.OnHelpButtonClicked*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnHelpButtonClicked
  nameWithType: Form.OnHelpButtonClicked
- uid: System.Windows.Forms.Form.OnInputLanguageChanged*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnInputLanguageChanged
  nameWithType: Form.OnInputLanguageChanged
- uid: System.Windows.Forms.Form.OnInputLanguageChanging*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnInputLanguageChanging
  nameWithType: Form.OnInputLanguageChanging
- uid: System.Windows.Forms.Form.OnLayout*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnLayout
  nameWithType: Form.OnLayout
- uid: System.Windows.Forms.Form.OnLoad*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnLoad
  nameWithType: Form.OnLoad
- uid: System.Windows.Forms.Form.OnMaximizedBoundsChanged*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnMaximizedBoundsChanged
  nameWithType: Form.OnMaximizedBoundsChanged
- uid: System.Windows.Forms.Form.OnMaximumSizeChanged*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnMaximumSizeChanged
  nameWithType: Form.OnMaximumSizeChanged
- uid: System.Windows.Forms.Form.OnMdiChildActivate*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnMdiChildActivate
  nameWithType: Form.OnMdiChildActivate
- uid: System.Windows.Forms.Form.OnMenuComplete*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnMenuComplete
  nameWithType: Form.OnMenuComplete
- uid: System.Windows.Forms.Form.OnMenuStart*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnMenuStart
  nameWithType: Form.OnMenuStart
- uid: System.Windows.Forms.Form.OnMinimumSizeChanged*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnMinimumSizeChanged
  nameWithType: Form.OnMinimumSizeChanged
- uid: System.Windows.Forms.Form.OnPaint*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnPaint
  nameWithType: Form.OnPaint
- uid: System.Windows.Forms.Form.OnResize*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnResize
  nameWithType: Form.OnResize
- uid: System.Windows.Forms.Form.OnResizeBegin*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnResizeBegin
  nameWithType: Form.OnResizeBegin
- uid: System.Windows.Forms.Form.OnResizeEnd*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnResizeEnd
  nameWithType: Form.OnResizeEnd
- uid: System.Windows.Forms.Form.OnRightToLeftLayoutChanged*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnRightToLeftLayoutChanged
  nameWithType: Form.OnRightToLeftLayoutChanged
- uid: System.Windows.Forms.Form.OnShown*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnShown
  nameWithType: Form.OnShown
- uid: System.Windows.Forms.Form.OnStyleChanged*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnStyleChanged
  nameWithType: Form.OnStyleChanged
- uid: System.Windows.Forms.Form.OnTextChanged*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnTextChanged
  nameWithType: Form.OnTextChanged
- uid: System.Windows.Forms.Form.OnVisibleChanged*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OnVisibleChanged
  nameWithType: Form.OnVisibleChanged
- uid: System.Windows.Forms.Form.Opacity*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: Opacity
  nameWithType: Form.Opacity
- uid: System.Windows.Forms.Form.OwnedForms*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: OwnedForms
  nameWithType: Form.OwnedForms
- uid: System.Windows.Forms.Form.Owner*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: Owner
  nameWithType: Form.Owner
- uid: System.Windows.Forms.Form.ProcessCmdKey*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: ProcessCmdKey
  nameWithType: Form.ProcessCmdKey
- uid: System.Windows.Forms.Form.ProcessDialogChar*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: ProcessDialogChar
  nameWithType: Form.ProcessDialogChar
- uid: System.Windows.Forms.Form.ProcessDialogKey*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: ProcessDialogKey
  nameWithType: Form.ProcessDialogKey
- uid: System.Windows.Forms.Form.ProcessKeyPreview*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: ProcessKeyPreview
  nameWithType: Form.ProcessKeyPreview
- uid: System.Windows.Forms.Form.ProcessMnemonic*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: ProcessMnemonic
  nameWithType: Form.ProcessMnemonic
- uid: System.Windows.Forms.Form.ProcessTabKey*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: ProcessTabKey
  nameWithType: Form.ProcessTabKey
- uid: System.Windows.Forms.Form.RemoveOwnedForm*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: RemoveOwnedForm
  nameWithType: Form.RemoveOwnedForm
- uid: System.Windows.Forms.Form.RestoreBounds*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: RestoreBounds
  nameWithType: Form.RestoreBounds
- uid: System.Windows.Forms.Form.RightToLeftLayout*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: RightToLeftLayout
  nameWithType: Form.RightToLeftLayout
- uid: System.Windows.Forms.Form.ScaleControl*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: ScaleControl
  nameWithType: Form.ScaleControl
- uid: System.Windows.Forms.Form.ScaleCore*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: ScaleCore
  nameWithType: Form.ScaleCore
- uid: System.Windows.Forms.Form.Select*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: Select
  nameWithType: Form.Select
- uid: System.Windows.Forms.Form.SetBoundsCore*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: SetBoundsCore
  nameWithType: Form.SetBoundsCore
- uid: System.Windows.Forms.Form.SetClientSizeCore*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: SetClientSizeCore
  nameWithType: Form.SetClientSizeCore
- uid: System.Windows.Forms.Form.SetDesktopBounds*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: SetDesktopBounds
  nameWithType: Form.SetDesktopBounds
- uid: System.Windows.Forms.Form.SetDesktopLocation*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: SetDesktopLocation
  nameWithType: Form.SetDesktopLocation
- uid: System.Windows.Forms.Form.SetVisibleCore*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: SetVisibleCore
  nameWithType: Form.SetVisibleCore
- uid: System.Windows.Forms.Form.Show*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: Show
  nameWithType: Form.Show
- uid: System.Windows.Forms.Form.ShowDialog*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: ShowDialog
  nameWithType: Form.ShowDialog
- uid: System.Windows.Forms.Form.ShowIcon*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: ShowIcon
  nameWithType: Form.ShowIcon
- uid: System.Windows.Forms.Form.ShowInTaskbar*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: ShowInTaskbar
  nameWithType: Form.ShowInTaskbar
- uid: System.Windows.Forms.Form.ShowWithoutActivation*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: ShowWithoutActivation
  nameWithType: Form.ShowWithoutActivation
- uid: System.Windows.Forms.Form.Size*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: Size
  nameWithType: Form.Size
- uid: System.Windows.Forms.Form.SizeGripStyle*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: SizeGripStyle
  nameWithType: Form.SizeGripStyle
- uid: System.Windows.Forms.Form.StartPosition*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: StartPosition
  nameWithType: Form.StartPosition
- uid: System.Windows.Forms.Form.TabIndex*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: TabIndex
  nameWithType: Form.TabIndex
- uid: System.Windows.Forms.Form.TabStop*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: TabStop
  nameWithType: Form.TabStop
- uid: System.Windows.Forms.Form.Text*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: Text
  nameWithType: Form.Text
- uid: System.Windows.Forms.Form.TopLevel*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: TopLevel
  nameWithType: Form.TopLevel
- uid: System.Windows.Forms.Form.TopMost*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: TopMost
  nameWithType: Form.TopMost
- uid: System.Windows.Forms.Form.ToString*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: ToString
  nameWithType: Form.ToString
- uid: System.Windows.Forms.Form.TransparencyKey*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: TransparencyKey
  nameWithType: Form.TransparencyKey
- uid: System.Windows.Forms.Form.UpdateDefaultButton*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: UpdateDefaultButton
  nameWithType: Form.UpdateDefaultButton
- uid: System.Windows.Forms.Form.ValidateChildren*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: ValidateChildren
  nameWithType: Form.ValidateChildren
- uid: System.Windows.Forms.Form.WindowState*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: WindowState
  nameWithType: Form.WindowState
- uid: System.Windows.Forms.Form.WndProc*
  parent: System.Windows.Forms.Form
  isExternal: false
  name: WndProc
  nameWithType: Form.WndProc
