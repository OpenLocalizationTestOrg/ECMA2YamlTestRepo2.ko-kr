### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.ExceptionMapper
  id: ExceptionMapper
  children:
  - System.ServiceModel.ExceptionMapper.#ctor
  - System.ServiceModel.ExceptionMapper.FromException(System.Exception)
  - System.ServiceModel.ExceptionMapper.FromException(System.Exception,System.String,System.String)
  - System.ServiceModel.ExceptionMapper.HandleSecurityTokenProcessingException(System.Exception)
  langs:
  - csharp
  name: ExceptionMapper
  nameWithType: ExceptionMapper
  fullName: System.ServiceModel.ExceptionMapper
  type: Class
  summary: "오류에 대 한 변환 예외에 사용할 매핑을 정의 합니다."
  syntax:
    content: public class ExceptionMapper
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.ExceptionMapper.#ctor
  id: '#ctor'
  parent: System.ServiceModel.ExceptionMapper
  langs:
  - csharp
  name: ExceptionMapper()
  nameWithType: ExceptionMapper.ExceptionMapper()
  fullName: System.ServiceModel.ExceptionMapper.ExceptionMapper()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.ServiceModel.ExceptionMapper&quot;> </xref> 클래스입니다."
  syntax:
    content: public ExceptionMapper ();
    parameters: []
  overload: System.ServiceModel.ExceptionMapper.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ExceptionMapper.FromException(System.Exception)
  id: FromException(System.Exception)
  parent: System.ServiceModel.ExceptionMapper
  langs:
  - csharp
  name: FromException(Exception)
  nameWithType: ExceptionMapper.FromException(Exception)
  fullName: System.ServiceModel.ExceptionMapper.FromException(Exception)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "오류에 대 한 입력된 예외를 변환합니다."
  syntax:
    content: public virtual System.ServiceModel.FaultException FromException (Exception ex);
    parameters:
    - id: ex
      type: System.Exception
      description: "예외는 오류에 매핑할 수입니다."
    return:
      type: System.ServiceModel.FaultException
      description: "입력된 예외에 해당 하는 오류입니다."
  overload: System.ServiceModel.ExceptionMapper.FromException*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ExceptionMapper.FromException(System.Exception,System.String,System.String)
  id: FromException(System.Exception,System.String,System.String)
  parent: System.ServiceModel.ExceptionMapper
  langs:
  - csharp
  name: FromException(Exception,String,String)
  nameWithType: ExceptionMapper.FromException(Exception,String,String)
  fullName: System.ServiceModel.ExceptionMapper.FromException(Exception,String,String)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "오류에 대 한 입력된 예외를 변환합니다."
  syntax:
    content: public virtual System.ServiceModel.FaultException FromException (Exception ex, string soapNamespace, string trustNamespace);
    parameters:
    - id: ex
      type: System.Exception
      description: "예외는 오류에 매핑할 수입니다."
    - id: soapNamespace
      type: System.String
      description: "매핑된 오류를 생성할 때 사용할 SOAP Namespace입니다."
    - id: trustNamespace
      type: System.String
      description: "매핑된 오류를 생성할 때 사용 되는 WS-트러스트 Namespace입니다."
    return:
      type: System.ServiceModel.FaultException
      description: "입력된 예외에 해당 하는 오류입니다."
  overload: System.ServiceModel.ExceptionMapper.FromException*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ExceptionMapper.HandleSecurityTokenProcessingException(System.Exception)
  id: HandleSecurityTokenProcessingException(System.Exception)
  parent: System.ServiceModel.ExceptionMapper
  langs:
  - csharp
  name: HandleSecurityTokenProcessingException(Exception)
  nameWithType: ExceptionMapper.HandleSecurityTokenProcessingException(Exception)
  fullName: System.ServiceModel.ExceptionMapper.HandleSecurityTokenProcessingException(Exception)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "보안 토큰을 처리 하는 동안 발생 한 예외를 처리 해야 하는지 여부를 결정 합니다."
  syntax:
    content: public virtual bool HandleSecurityTokenProcessingException (Exception ex);
    parameters:
    - id: ex
      type: System.Exception
      description: "입력된 예외입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>예외를 처리 해야 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.ServiceModel.ExceptionMapper.HandleSecurityTokenProcessingException*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ServiceModel.ExceptionMapper.#ctor
  parent: System.ServiceModel.ExceptionMapper
  isExternal: false
  name: ExceptionMapper()
  nameWithType: ExceptionMapper.ExceptionMapper()
  fullName: System.ServiceModel.ExceptionMapper.ExceptionMapper()
- uid: System.ServiceModel.ExceptionMapper.FromException(System.Exception)
  parent: System.ServiceModel.ExceptionMapper
  isExternal: false
  name: FromException(Exception)
  nameWithType: ExceptionMapper.FromException(Exception)
  fullName: System.ServiceModel.ExceptionMapper.FromException(Exception)
- uid: System.ServiceModel.FaultException
  parent: System.ServiceModel
  isExternal: true
  name: FaultException
  nameWithType: FaultException
  fullName: System.ServiceModel.FaultException
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.ServiceModel.ExceptionMapper.FromException(System.Exception,System.String,System.String)
  parent: System.ServiceModel.ExceptionMapper
  isExternal: false
  name: FromException(Exception,String,String)
  nameWithType: ExceptionMapper.FromException(Exception,String,String)
  fullName: System.ServiceModel.ExceptionMapper.FromException(Exception,String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.ExceptionMapper.HandleSecurityTokenProcessingException(System.Exception)
  parent: System.ServiceModel.ExceptionMapper
  isExternal: false
  name: HandleSecurityTokenProcessingException(Exception)
  nameWithType: ExceptionMapper.HandleSecurityTokenProcessingException(Exception)
  fullName: System.ServiceModel.ExceptionMapper.HandleSecurityTokenProcessingException(Exception)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.ExceptionMapper.#ctor*
  parent: System.ServiceModel.ExceptionMapper
  isExternal: false
  name: ExceptionMapper
  nameWithType: ExceptionMapper.ExceptionMapper
- uid: System.ServiceModel.ExceptionMapper.FromException*
  parent: System.ServiceModel.ExceptionMapper
  isExternal: false
  name: FromException
  nameWithType: ExceptionMapper.FromException
- uid: System.ServiceModel.ExceptionMapper.HandleSecurityTokenProcessingException*
  parent: System.ServiceModel.ExceptionMapper
  isExternal: false
  name: HandleSecurityTokenProcessingException
  nameWithType: ExceptionMapper.HandleSecurityTokenProcessingException
