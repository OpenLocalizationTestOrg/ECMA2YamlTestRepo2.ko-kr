### YamlMime:ManagedReference
items:
- uid: System.Web.Management.IWebEventCustomEvaluator
  id: IWebEventCustomEvaluator
  children:
  - System.Web.Management.IWebEventCustomEvaluator.CanFire(System.Web.Management.WebBaseEvent,System.Web.Management.RuleFiringRecord)
  langs:
  - csharp
  name: IWebEventCustomEvaluator
  nameWithType: IWebEventCustomEvaluator
  fullName: System.Web.Management.IWebEventCustomEvaluator
  type: Interface
  summary: "이벤트가 처리를 위해 관련된 공급자에 전송 하는지 여부를 평가 합니다."
  remarks: "ASP.NET 상태 모니터링 생산 및 운영 담당자를 웹 응용 프로그램 배포를 관리할 수 있습니다. <xref:System.Web.Management>네임 스페이스 응용 프로그램 상태 데이터와이 데이터를 처리 하는 공급자 유형을 패키지 하는 상태 이벤트 형식을 포함 합니다.</xref:System.Web.Management> 또한 상태 이벤트를 관리 하는 동안 유용한 지 원하는 형식을 포함 합니다.       이 인터페이스에는 특정 이벤트의 발생 사용 여부 설정을 허용 합니다. 사용자 고유의 사용자 지정 이벤트를 구현할 때는 것은 공급자에 게 전송 관련 처리를 위해 속도 제어 하려는 경우 특히 유용 합니다.      > [!NOTE] >이 인터페이스는 이벤트는 발생 빈도 제어 하지 않습니다. 처리에 대 한 이벤트 정보는 공급자에 보내는 빈도 제어 합니다."
  example:
  - "The following code example shows how to derive from the IWebEventCustomEvaluator interface when creating a custom event.  \n  \n [!code-cs[System.Web.Management.WebBaseEvent#1](~/add/codesnippet/csharp/t-system.web.management._19_1.cs)]\n [!code-vb[System.Web.Management.WebBaseEvent#1](~/add/codesnippet/visualbasic/t-system.web.management._19_1.vb)]  \n  \n The following is an excerpt of the configuration file that enables ASP.NET to use the <xref:System.Web.Management.IWebEventCustomEvaluator.CanFire%2A> method to decide whether the raised event must be sent to the provider for processing.  \n  \n```  \n<healthMonitoring   \n  heartBeatInterval=\"0\" enabled=\"true\">  \n  \n    <providers>  \n      <add name=\"SampleWebEventProvider\"   \n        type=\"SamplesAspNet.SampleEventProvider, webeventprovider, Version=1.0.1741.20369, Culture=neutral, PublicKeyToken=cf85aa6c978d9dea, processorArchitecture=MSIL\" />  \n    </providers>  \n  \n    <profiles>  \n      <add   \n        name=\"Custom\"   \n        minInstances=\"1\"   \n        maxLimit=\"Infinite\"   \n        minInterval=\"00:00:00\"   \n        custom =\"SamplesAspNet.SampleWebRequestEvent,webrequestevent\"   \n        />  \n    </profiles>  \n  \n    <eventMappings>  \n  \n      <add name=\"SampleWebRequestEvent\" type=\"SamplesAspNet.SampleWebRequestEvent,webrequestevent, Version=1.0.1759.20533, Culture=neutral, PublicKeyToken=0d72899b07049076, processorArchitecture=MSIL\" />  \n  \n    </eventMappings>  \n  \n    <rules>  \n      <clear />  \n  \n        <add name=\"Custom Web Request Event\"   \n          eventName=\"SampleWebRequestEvent\"  \n          provider=\"SampleWebEventProvider\" profile=\"Custom\" />  \n    </rules>  \n  \n</healthMonitoring>  \n```"
  syntax:
    content: public interface IWebEventCustomEvaluator
  implements: []
  platform:
  - net462
- uid: System.Web.Management.IWebEventCustomEvaluator.CanFire(System.Web.Management.WebBaseEvent,System.Web.Management.RuleFiringRecord)
  id: CanFire(System.Web.Management.WebBaseEvent,System.Web.Management.RuleFiringRecord)
  parent: System.Web.Management.IWebEventCustomEvaluator
  langs:
  - csharp
  name: CanFire(WebBaseEvent,RuleFiringRecord)
  nameWithType: IWebEventCustomEvaluator.CanFire(WebBaseEvent,RuleFiringRecord)
  fullName: System.Web.Management.IWebEventCustomEvaluator.CanFire(WebBaseEvent,RuleFiringRecord)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "이벤트를 발생시킬지 여부를 평가 합니다."
  remarks: "사용자 지정 이벤트 계산기 반환 하는 경우 `true`, 이벤트에서 발생 하 고 다음 연결된 된 공급자에 의해 처리 됩니다."
  example:
  - "The following code example shows a custom implementation of the CanFire method.  \n  \n [!code-cs[System.Web.Management.WebBaseEvent#22](~/add/codesnippet/csharp/47187ebb-ac4e-45bf-9b77-_1.cs)]\n [!code-vb[System.Web.Management.WebBaseEvent#22](~/add/codesnippet/visualbasic/47187ebb-ac4e-45bf-9b77-_1.vb)]"
  syntax:
    content: public bool CanFire (System.Web.Management.WebBaseEvent raisedEvent, System.Web.Management.RuleFiringRecord record);
    parameters:
    - id: raisedEvent
      type: System.Web.Management.WebBaseEvent
      description: "이벤트 발생입니다."
    - id: record
      type: System.Web.Management.RuleFiringRecord
      description: "<xref href=&quot;System.Web.Management.RuleFiringRecord&quot;> </xref> 이벤트에 대 한 정보가 들어 있는입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>이벤트가 발생 하면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Management.IWebEventCustomEvaluator.CanFire*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.Management.IWebEventCustomEvaluator.CanFire(System.Web.Management.WebBaseEvent,System.Web.Management.RuleFiringRecord)
  parent: System.Web.Management.IWebEventCustomEvaluator
  isExternal: false
  name: CanFire(WebBaseEvent,RuleFiringRecord)
  nameWithType: IWebEventCustomEvaluator.CanFire(WebBaseEvent,RuleFiringRecord)
  fullName: System.Web.Management.IWebEventCustomEvaluator.CanFire(WebBaseEvent,RuleFiringRecord)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Management.WebBaseEvent
  parent: System.Web.Management
  isExternal: false
  name: WebBaseEvent
  nameWithType: WebBaseEvent
  fullName: System.Web.Management.WebBaseEvent
- uid: System.Web.Management.RuleFiringRecord
  parent: System.Web.Management
  isExternal: false
  name: RuleFiringRecord
  nameWithType: RuleFiringRecord
  fullName: System.Web.Management.RuleFiringRecord
- uid: System.Web.Management.IWebEventCustomEvaluator.CanFire*
  parent: System.Web.Management.IWebEventCustomEvaluator
  isExternal: false
  name: CanFire
  nameWithType: IWebEventCustomEvaluator.CanFire
