### YamlMime:ManagedReference
items:
- uid: System.IO.FileOptions
  id: FileOptions
  children:
  - System.IO.FileOptions.Asynchronous
  - System.IO.FileOptions.DeleteOnClose
  - System.IO.FileOptions.Encrypted
  - System.IO.FileOptions.None
  - System.IO.FileOptions.RandomAccess
  - System.IO.FileOptions.SequentialScan
  - System.IO.FileOptions.WriteThrough
  langs:
  - csharp
  name: FileOptions
  nameWithType: FileOptions
  fullName: System.IO.FileOptions
  type: Enum
  summary: "고급 옵션을 만들기 위한 나타냅니다는 <xref href=&quot;System.IO.FileStream&quot;> </xref> 개체입니다."
  remarks: ''
  example:
  - "The following example shows how to use the Asynchronous value when creating a file stream.  \n  \n [!code-cs[IO.FileStream.ctor2#2](~/add/codesnippet/csharp/t-system.io.fileoptions_1.cs)]\n [!code-vb[IO.FileStream.ctor2#2](~/add/codesnippet/visualbasic/t-system.io.fileoptions_1.vb)]"
  syntax:
    content: >-
      [System.Flags]

      [System.Runtime.InteropServices.ComVisible(true)]

      public enum FileOptions
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.IO.FileOptions.Asynchronous
  id: Asynchronous
  parent: System.IO.FileOptions
  langs:
  - csharp
  name: Asynchronous
  nameWithType: FileOptions.Asynchronous
  fullName: System.IO.FileOptions.Asynchronous
  type: Field
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "비동기 읽기와 쓰기에 대 한 파일을 사용할 수 있음을 나타냅니다."
  syntax:
    content: Asynchronous
    return:
      type: System.IO.FileOptions
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.IO.FileOptions.DeleteOnClose
  id: DeleteOnClose
  parent: System.IO.FileOptions
  langs:
  - csharp
  name: DeleteOnClose
  nameWithType: FileOptions.DeleteOnClose
  fullName: System.IO.FileOptions.DeleteOnClose
  type: Field
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "더 이상 사용 중인 경우 파일을 자동으로 삭제 됨을 나타냅니다."
  syntax:
    content: DeleteOnClose
    return:
      type: System.IO.FileOptions
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.IO.FileOptions.Encrypted
  id: Encrypted
  parent: System.IO.FileOptions
  langs:
  - csharp
  name: Encrypted
  nameWithType: FileOptions.Encrypted
  fullName: System.IO.FileOptions.Encrypted
  type: Field
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "파일 암호화 및 암호화에 사용 되는 동일한 사용자 계정을 사용 하 여만 암호화할 수를 나타냅니다."
  syntax:
    content: Encrypted
    return:
      type: System.IO.FileOptions
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.IO.FileOptions.None
  id: None
  parent: System.IO.FileOptions
  langs:
  - csharp
  name: None
  nameWithType: FileOptions.None
  fullName: System.IO.FileOptions.None
  type: Field
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "추가 옵션 없이 만들 때 사용 해야 함을 나타냅니다는 <xref href=&quot;System.IO.FileStream&quot;> </xref> 개체입니다."
  syntax:
    content: None
    return:
      type: System.IO.FileOptions
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.IO.FileOptions.RandomAccess
  id: RandomAccess
  parent: System.IO.FileOptions
  langs:
  - csharp
  name: RandomAccess
  nameWithType: FileOptions.RandomAccess
  fullName: System.IO.FileOptions.RandomAccess
  type: Field
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "이 파일은 임의로 액세스를 나타냅니다. 사용할 수이 힌트로 파일 캐싱을 최적화할 수 있습니다."
  syntax:
    content: RandomAccess
    return:
      type: System.IO.FileOptions
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.IO.FileOptions.SequentialScan
  id: SequentialScan
  parent: System.IO.FileOptions
  langs:
  - csharp
  name: SequentialScan
  nameWithType: FileOptions.SequentialScan
  fullName: System.IO.FileOptions.SequentialScan
  type: Field
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "에 처음부터 끝까지 순차적으로 액세스 하는 파일 임을 나타냅니다. 사용할 수이 힌트로 파일 캐싱을 최적화할 수 있습니다. 임의 액세스를 위해 파일 포인터를 이동 하는 응용 프로그램을 최적 캐싱이 발생 하지 않을 수 있습니다. 그러나 제대로 작동 여전히 보장 됩니다."
  remarks: "이 플래그를 지정 하면 순차적 액세스를 사용 하 여 큰 파일을 읽는 응용 프로그램 성능을 향상 시킬 수 있습니다. 성능 향상을 훨씬 더 큰 파일을 대부분를 순차적으로 읽을 하지만 작은 바이트 범위를 건너뛰는 경우에 따라 응용 프로그램을 처리할 수 있습니다."
  syntax:
    content: SequentialScan
    return:
      type: System.IO.FileOptions
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.IO.FileOptions.WriteThrough
  id: WriteThrough
  parent: System.IO.FileOptions
  langs:
  - csharp
  name: WriteThrough
  nameWithType: FileOptions.WriteThrough
  fullName: System.IO.FileOptions.WriteThrough
  type: Field
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "시스템이 해야 중간 캐시를 통해 작성 하 고 디스크에 바로 나타냅니다."
  syntax:
    content: WriteThrough
    return:
      type: System.IO.FileOptions
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.IO.FileOptions.Asynchronous
  parent: System.IO.FileOptions
  isExternal: false
  name: Asynchronous
  nameWithType: FileOptions.Asynchronous
  fullName: System.IO.FileOptions.Asynchronous
- uid: System.IO.FileOptions
  parent: System.IO
  isExternal: false
  name: FileOptions
  nameWithType: FileOptions
  fullName: System.IO.FileOptions
- uid: System.IO.FileOptions.DeleteOnClose
  parent: System.IO.FileOptions
  isExternal: false
  name: DeleteOnClose
  nameWithType: FileOptions.DeleteOnClose
  fullName: System.IO.FileOptions.DeleteOnClose
- uid: System.IO.FileOptions.Encrypted
  parent: System.IO.FileOptions
  isExternal: false
  name: Encrypted
  nameWithType: FileOptions.Encrypted
  fullName: System.IO.FileOptions.Encrypted
- uid: System.IO.FileOptions.None
  parent: System.IO.FileOptions
  isExternal: false
  name: None
  nameWithType: FileOptions.None
  fullName: System.IO.FileOptions.None
- uid: System.IO.FileOptions.RandomAccess
  parent: System.IO.FileOptions
  isExternal: false
  name: RandomAccess
  nameWithType: FileOptions.RandomAccess
  fullName: System.IO.FileOptions.RandomAccess
- uid: System.IO.FileOptions.SequentialScan
  parent: System.IO.FileOptions
  isExternal: false
  name: SequentialScan
  nameWithType: FileOptions.SequentialScan
  fullName: System.IO.FileOptions.SequentialScan
- uid: System.IO.FileOptions.WriteThrough
  parent: System.IO.FileOptions
  isExternal: false
  name: WriteThrough
  nameWithType: FileOptions.WriteThrough
  fullName: System.IO.FileOptions.WriteThrough
