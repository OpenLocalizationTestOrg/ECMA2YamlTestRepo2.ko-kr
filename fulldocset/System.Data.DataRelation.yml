### YamlMime:ManagedReference
items:
- uid: System.Data.DataRelation
  id: DataRelation
  children:
  - System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn)
  - System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[])
  - System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)
  - System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)
  - System.Data.DataRelation.#ctor(System.String,System.String,System.String,System.String[],System.String[],System.Boolean)
  - System.Data.DataRelation.#ctor(System.String,System.String,System.String,System.String,System.String,System.String[],System.String[],System.Boolean)
  - System.Data.DataRelation.CheckStateForProperty
  - System.Data.DataRelation.ChildColumns
  - System.Data.DataRelation.ChildKeyConstraint
  - System.Data.DataRelation.ChildTable
  - System.Data.DataRelation.DataSet
  - System.Data.DataRelation.ExtendedProperties
  - System.Data.DataRelation.Nested
  - System.Data.DataRelation.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)
  - System.Data.DataRelation.ParentColumns
  - System.Data.DataRelation.ParentKeyConstraint
  - System.Data.DataRelation.ParentTable
  - System.Data.DataRelation.RaisePropertyChanging(System.String)
  - System.Data.DataRelation.RelationName
  - System.Data.DataRelation.ToString
  langs:
  - csharp
  name: DataRelation
  nameWithType: DataRelation
  fullName: System.Data.DataRelation
  type: Class
  summary: "두 부모/자식 관계를 나타내는 <xref href=&quot;System.Data.DataTable&quot;> </xref> 개체입니다."
  remarks: "DataRelation 하는 데 두 개의 관련 <xref:System.Data.DataTable>개체를 통해 서로 <xref:System.Data.DataColumn>개체.</xref:System.Data.DataColumn> </xref:System.Data.DataTable> 예를 들어 고객/Orders 관계에서 고객 테이블은 부모 및 Orders 테이블은 관계의 자식입니다. 이것은 기본 키/외래 키 관계와 비슷합니다. 자세한 내용은 참조 [Datarelation 탐색](~/add/includes/ajax-current-ext-md.md)합니다.       부모 및 자식 테이블에서 일치 하는 열 간의 관계가 생성 됩니다. 즉,는 <xref:System.Data.DataColumn.DataType%2A>값이 두 열 모두 동일 해야 합니다.</xref:System.Data.DataColumn.DataType%2A>       관계의 부모 여러 변경 내용을 종속 수 <xref:System.Data.DataRow>자식 행에.</xref:System.Data.DataRow> 자식 행의 값이 변경 되는 방식을 제어 하기 위해 추가 <xref:System.Data.ForeignKeyConstraint>에 <xref:System.Data.ConstraintCollection>의 <xref:System.Data.DataTable>개체입니다.</xref:System.Data.DataTable> </xref:System.Data.ConstraintCollection> </xref:System.Data.ForeignKeyConstraint> <xref:System.Data.ConstraintCollection>부모 테이블의 값을 수행 하는 작업을 삭제 하거나 업데이트를 결정 합니다.</xref:System.Data.ConstraintCollection>       DataRelation 만들어질 때에 먼저 관계를 설정할 수 있는지 확인 합니다. 그 뒤 <xref:System.Data.DataRelationCollection>를 무효화 합니다. 변경 내용을 허용 하지 않습니다는 관계가 유지 되므로,</xref:System.Data.DataRelationCollection> 추가 DataRelation를 만들고에 추가 하는 기간 사이 <xref:System.Data.DataRelationCollection>, 부모 또는 자식 행에 대해 수을 추가로 변경할 수 있습니다.</xref:System.Data.DataRelationCollection> 이 인해 관계를 유효 하지 않은 경우 예외가 생성 됩니다.      > [!NOTE] > 양방향 관계는 두 테이블 간에 정의 된 경우 데이터 손상이 발생할 수 있습니다. 양방향 관계는 두 개의 이루어져 `DataRelation` 전환 하 고 부모-자식 역할에 동일한 열을 사용 하는 개체입니다. 예외가 발생 하면는 `DataRelation` 개체 저장 됩니다; 하지만 데이터 손상이 발생할 수 있습니다.       DataRelation 개체에 포함 됩니다는 <xref:System.Data.DataRelationCollection>를 통해 액세스할 수 있는 <xref:System.Data.DataSet.Relations%2A>의 속성에서 <xref:System.Data.DataSet>는 <xref:System.Data.DataTable.ChildRelations%2A>및 <xref:System.Data.DataTable.ParentRelations%2A> <xref:System.Data.DataTable>.</xref:System.Data.DataTable> 속성</xref:System.Data.DataTable.ParentRelations%2A> </xref:System.Data.DataTable.ChildRelations%2A> 및</xref:System.Data.DataSet> </xref:System.Data.DataSet.Relations%2A> </xref:System.Data.DataRelationCollection>"
  example:
  - "The following example creates a new DataRelation and adds it to the <xref:System.Data.DataRelationCollection> of a <xref:System.Data.DataSet>.  \n  \n [!code-cs[Classic WebData DataRelation Example#1](~/add/codesnippet/csharp/t-system.data.datarelation_1.cs)]\n [!code-vb[Classic WebData DataRelation Example#1](~/add/codesnippet/visualbasic/t-system.data.datarelation_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultProperty("RelationName")]

      [System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DataRelationEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.ComponentModel.TypeConverter(typeof(System.Data.RelationshipConverter))]

      public class DataRelation
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn)
  id: '#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn)'
  parent: System.Data.DataRelation
  langs:
  - csharp
  name: DataRelation(String,DataColumn,DataColumn)
  nameWithType: DataRelation.DataRelation(String,DataColumn,DataColumn)
  fullName: System.Data.DataRelation.DataRelation(String,DataColumn,DataColumn)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Data.DataRelation&quot;> </xref> 사용 하 여 지정 된 클래스 <xref href=&quot;System.Data.DataRelation&quot;> </xref> 이름, 부모 및 자식 <xref href=&quot;System.Data.DataColumn&quot;> </xref> 개체입니다."
  remarks: ''
  example:
  - "The following example creates a new <xref:System.Data.DataRelation> and adds it to the <xref:System.Data.DataRelationCollection> of a <xref:System.Data.DataSet>.  \n  \n [!code-cs[Classic WebData DataRelation.DataRelation#1](~/add/codesnippet/csharp/c51592f7-179d-4737-b5e5-_1.cs)]\n [!code-vb[Classic WebData DataRelation.DataRelation#1](~/add/codesnippet/visualbasic/c51592f7-179d-4737-b5e5-_1.vb)]"
  syntax:
    content: public DataRelation (string relationName, System.Data.DataColumn parentColumn, System.Data.DataColumn childColumn);
    parameters:
    - id: relationName
      type: System.String
      description: "이름에서 <xref href=&quot;System.Data.DataRelation&quot;> </xref>합니다. 경우 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 또는 빈 문자열 (&quot;&quot;), 생성된 된 개체에 추가 되 면 기본 이름이 지정 됩니다는 <xref href=&quot;System.Data.DataRelationCollection&quot;> </xref>합니다."
    - id: parentColumn
      type: System.Data.DataColumn
      description: "부모 <xref href=&quot;System.Data.DataColumn&quot;> </xref> 관계에 있습니다."
    - id: childColumn
      type: System.Data.DataColumn
      description: "자식 <xref href=&quot;System.Data.DataColumn&quot;> </xref> 관계에 있습니다."
  overload: System.Data.DataRelation.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "하나 또는 둘 다는 <xref href=&quot;System.Data.DataColumn&quot;> </xref> 개체 포함 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  - type: System.Data.InvalidConstraintException
    commentId: T:System.Data.InvalidConstraintException
    description: "열에 서로 다른 데이터 형식이 있어야-또는-테이블에 동일한 속해 있지 않아서 <xref href=&quot;System.Data.DataSet&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[])
  id: '#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[])'
  parent: System.Data.DataRelation
  langs:
  - csharp
  name: DataRelation(String,DataColumn[],DataColumn[])
  nameWithType: DataRelation.DataRelation(String,DataColumn[],DataColumn[])
  fullName: System.Data.DataRelation.DataRelation(String,DataColumn[],DataColumn[])
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Data.DataRelation&quot;> </xref> 사용 하 여 지정 된 클래스 <xref href=&quot;System.Data.DataRelation&quot;> </xref> 부모 및 자식 이름과 일치 하는 배열 <xref href=&quot;System.Data.DataColumn&quot;> </xref> 개체입니다."
  remarks: ''
  example:
  - "The following example creates a new <xref:System.Data.DataRelation> and adds it to the <xref:System.Data.DataRelationCollection> of a <xref:System.Data.DataSet>.  \n  \n [!code-vb[Classic WebData DataRelation.DataRelation2 Example#1](~/add/codesnippet/visualbasic/74c401a9-c184-4dbd-895b-_1.vb)]"
  syntax:
    content: public DataRelation (string relationName, System.Data.DataColumn[] parentColumns, System.Data.DataColumn[] childColumns);
    parameters:
    - id: relationName
      type: System.String
      description: "관계의 이름입니다. 경우 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 또는 빈 문자열 (&quot;&quot;), 생성된 된 개체에 추가 되 면 기본 이름이 지정 됩니다는 <xref href=&quot;System.Data.DataRelationCollection&quot;> </xref>합니다."
    - id: parentColumns
      type: System.Data.DataColumn[]
      description: "부모 배열을 <xref href=&quot;System.Data.DataColumn&quot;> </xref> 개체입니다."
    - id: childColumns
      type: System.Data.DataColumn[]
      description: "자식 배열 <xref href=&quot;System.Data.DataColumn&quot;> </xref> 개체입니다."
  overload: System.Data.DataRelation.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "하나 또는 둘 다는 <xref href=&quot;System.Data.DataColumn&quot;> </xref> 개체 포함 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  - type: System.Data.InvalidConstraintException
    commentId: T:System.Data.InvalidConstraintException
    description: "<xref href=&quot;System.Data.DataColumn&quot;> </xref> 개체는 서로 다른 데이터 형식-또는-하나 또는 두 개의 배열의 같은 테이블의 고유 열으로 구성 되지 않은 합니다.       -또는-테이블에 동일한 속해 있지 않아서 <xref href=&quot;System.Data.DataSet&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)
  id: '#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)'
  parent: System.Data.DataRelation
  langs:
  - csharp
  name: DataRelation(String,DataColumn,DataColumn,Boolean)
  nameWithType: DataRelation.DataRelation(String,DataColumn,DataColumn,Boolean)
  fullName: System.Data.DataRelation.DataRelation(String,DataColumn,DataColumn,Boolean)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Data.DataRelation&quot;> </xref> 지정한 이름, 부모 및 자식을 사용 하 여 클래스 <xref href=&quot;System.Data.DataColumn&quot;> </xref> 개체 및 제약 조건을 만들지 여부를 나타내는 값입니다."
  remarks: ''
  example:
  - "The following example creates a new <xref:System.Data.DataRelation> and adds it to the <xref:System.Data.DataRelationCollection> of a <xref:System.Data.DataSet>.  \n  \n [!code-vb[Classic WebData DataRelation.DataRelation1 Example#1](~/add/codesnippet/visualbasic/6c615cfd-3655-4658-a32b-_1.vb)]"
  syntax:
    content: public DataRelation (string relationName, System.Data.DataColumn parentColumn, System.Data.DataColumn childColumn, bool createConstraints);
    parameters:
    - id: relationName
      type: System.String
      description: "관계의 이름입니다. 경우 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 또는 빈 문자열 (&quot;&quot;), 생성된 된 개체에 추가 되 면 기본 이름이 지정 됩니다는 <xref href=&quot;System.Data.DataRelationCollection&quot;> </xref>합니다."
    - id: parentColumn
      type: System.Data.DataColumn
      description: "부모 <xref href=&quot;System.Data.DataColumn&quot;> </xref> 관계에 있습니다."
    - id: childColumn
      type: System.Data.DataColumn
      description: "자식 <xref href=&quot;System.Data.DataColumn&quot;> </xref> 관계에 있습니다."
    - id: createConstraints
      type: System.Boolean
      description: "제약 조건 생성 되는지 여부를 나타내는 값입니다. <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>제약 조건 생성 되는 경우. 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Data.DataRelation.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "하나 또는 둘 다는 <xref href=&quot;System.Data.DataColumn&quot;> </xref> 개체 포함 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  - type: System.Data.InvalidConstraintException
    commentId: T:System.Data.InvalidConstraintException
    description: "열에 서로 다른 데이터 형식이 있어야-또는-테이블에 동일한 속해 있지 않아서 <xref href=&quot;System.Data.DataSet&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)
  id: '#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)'
  parent: System.Data.DataRelation
  langs:
  - csharp
  name: DataRelation(String,DataColumn[],DataColumn[],Boolean)
  nameWithType: DataRelation.DataRelation(String,DataColumn[],DataColumn[],Boolean)
  fullName: System.Data.DataRelation.DataRelation(String,DataColumn[],DataColumn[],Boolean)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Data.DataRelation&quot;> </xref> 지정된 된 이름, 부모 및 자식 일치 하는 배열을 사용 하 여 클래스 <xref href=&quot;System.Data.DataColumn&quot;> </xref> 개체 및 제약 조건을 만들지 여부를 나타내는 값입니다."
  remarks: ''
  example:
  - "The following example creates a new <xref:System.Data.DataRelation> and adds it to the <xref:System.Data.DataRelationCollection> of a <xref:System.Data.DataSet>.  \n  \n [!code-vb[Classic WebData DataRelation.DataRelation3 Example#1](~/add/codesnippet/visualbasic/91b51f14-3ecf-436c-8f4c-_1.vb)]"
  syntax:
    content: public DataRelation (string relationName, System.Data.DataColumn[] parentColumns, System.Data.DataColumn[] childColumns, bool createConstraints);
    parameters:
    - id: relationName
      type: System.String
      description: "관계의 이름입니다. 경우 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 또는 빈 문자열 (&quot;&quot;), 생성된 된 개체에 추가 되 면 기본 이름이 지정 됩니다는 <xref href=&quot;System.Data.DataRelationCollection&quot;> </xref>합니다."
    - id: parentColumns
      type: System.Data.DataColumn[]
      description: "부모 배열을 <xref href=&quot;System.Data.DataColumn&quot;> </xref> 개체입니다."
    - id: childColumns
      type: System.Data.DataColumn[]
      description: "자식 배열 <xref href=&quot;System.Data.DataColumn&quot;> </xref> 개체입니다."
    - id: createConstraints
      type: System.Boolean
      description: "제약 조건을 만들지 여부를 나타내는 값입니다. <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>제약 조건 생성 되는 경우. 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Data.DataRelation.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "하나 또는 둘 다는 <xref href=&quot;System.Data.DataColumn&quot;> </xref> 개체 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  - type: System.Data.InvalidConstraintException
    commentId: T:System.Data.InvalidConstraintException
    description: "열에 서로 다른 데이터 형식이 있어야-또는-테이블에 동일한 속해 있지 않아서 <xref href=&quot;System.Data.DataSet&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Data.DataRelation.#ctor(System.String,System.String,System.String,System.String[],System.String[],System.Boolean)
  id: '#ctor(System.String,System.String,System.String,System.String[],System.String[],System.Boolean)'
  parent: System.Data.DataRelation
  langs:
  - csharp
  name: DataRelation(String,String,String,String[],String[],Boolean)
  nameWithType: DataRelation.DataRelation(String,String,String,String[],String[],Boolean)
  fullName: System.Data.DataRelation.DataRelation(String,String,String,String[],String[],Boolean)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "이 생성자는 Visual Studio 환경에서 디자인 타임 지원을 위해 제공 됩니다."
  remarks: "모든 <xref:System.Data.DataRelation>이 생성자를 사용 하 여 만든 개체를 사용 하 여 컬렉션에 추가 해야는 <xref:System.Data.DataRelationCollection.AddRange%2A>메서드 내부에 <xref:System.Data.DataTable.BeginInit%2A>및 <xref:System.Data.DataTable.EndInit%2A>블록.</xref:System.Data.DataTable.EndInit%2A> </xref:System.Data.DataTable.BeginInit%2A> </xref:System.Data.DataRelationCollection.AddRange%2A> </xref:System.Data.DataRelation> 사이의이 생성자를 호출 하지 않은 경우 <xref:System.Data.DataTable.BeginInit%2A>및 <xref:System.Data.DataTable.EndInit%2A>는 <xref:System.NullReferenceException>발생 합니다.</xref:System.NullReferenceException> </xref:System.Data.DataTable.EndInit%2A> </xref:System.Data.DataTable.BeginInit%2A> 또한, 테이블 및 열 지정한 이름 가진 생성자를 호출 시 존재 해야 합니다."
  syntax:
    content: public DataRelation (string relationName, string parentTableName, string childTableName, string[] parentColumnNames, string[] childColumnNames, bool nested);
    parameters:
    - id: relationName
      type: System.String
      description: "관계의 이름입니다. 경우 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 또는 빈 문자열 (&quot;&quot;), 생성된 된 개체에 추가 되 면 기본 이름이 지정 됩니다는 <xref href=&quot;System.Data.DataRelationCollection&quot;> </xref>합니다."
    - id: parentTableName
      type: System.String
      description: "이름에서 <xref href=&quot;System.Data.DataTable&quot;> </xref> 관계의 부모 테이블입니다."
    - id: childTableName
      type: System.String
      description: "이름에서 <xref href=&quot;System.Data.DataTable&quot;> </xref> 관계의 자식 테이블입니다."
    - id: parentColumnNames
      type: System.String[]
      description: "배열을 <xref href=&quot;System.Data.DataColumn&quot;> </xref> 개체 이름으로 부모 <xref href=&quot;System.Data.DataTable&quot;> </xref> 간의 관계입니다."
    - id: childColumnNames
      type: System.String[]
      description: "배열을 <xref href=&quot;System.Data.DataColumn&quot;> </xref> 개체 이름으로 자식 <xref href=&quot;System.Data.DataTable&quot;> </xref> 관계의 합니다."
    - id: nested
      type: System.Boolean
      description: "관계가 중첩 되는지 여부를 나타내는 값입니다."
  overload: System.Data.DataRelation.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelation.#ctor(System.String,System.String,System.String,System.String,System.String,System.String[],System.String[],System.Boolean)
  id: '#ctor(System.String,System.String,System.String,System.String,System.String,System.String[],System.String[],System.Boolean)'
  parent: System.Data.DataRelation
  langs:
  - csharp
  name: DataRelation(String,String,String,String,String,String[],String[],Boolean)
  nameWithType: DataRelation.DataRelation(String,String,String,String,String,String[],String[],Boolean)
  fullName: System.Data.DataRelation.DataRelation(String,String,String,String,String,String[],String[],Boolean)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "이 생성자는 Visual Studio 환경에서 디자인 타임 지원을 위해 제공 됩니다."
  remarks: "<xref:System.Data.DataRelation>이 생성자를 사용 하 여 만든 개체는 <xref:System.Data.DataRelationCollection.AddRange%2A>.</xref:System.Data.DataRelationCollection.AddRange%2A> 를 사용 하 여 컬렉션에 다음 추가 합니다</xref:System.Data.DataRelation> 테이블 및 열 지정한 이름 가진 메서드가 호출 시점에 존재 해야 경우 <xref:System.Data.DataTable.BeginInit%2A>시점에 존재 해야 테이블 및 지정된 된 이름 가진 열이이 생성자를 호출 하기 전에 호출 된 하 <xref:System.Data.DataTable.EndInit%2A>호출 됩니다.</xref:System.Data.DataTable.EndInit%2A> </xref:System.Data.DataTable.BeginInit%2A>"
  syntax:
    content: public DataRelation (string relationName, string parentTableName, string parentTableNamespace, string childTableName, string childTableNamespace, string[] parentColumnNames, string[] childColumnNames, bool nested);
    parameters:
    - id: relationName
      type: System.String
      description: "이름에서 <xref href=&quot;System.Data.DataRelation&quot;> </xref>합니다. 경우 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 또는 빈 문자열 (&quot;&quot;), 생성된 된 개체에 추가 되 면 기본 이름이 지정 됩니다는 <xref href=&quot;System.Data.DataRelationCollection&quot;> </xref>합니다."
    - id: parentTableName
      type: System.String
      description: "이름에서 <xref href=&quot;System.Data.DataTable&quot;> </xref> 관계의 부모 테이블입니다."
    - id: parentTableNamespace
      type: System.String
      description: "부모 테이블 네임 스페이스의 이름입니다."
    - id: childTableName
      type: System.String
      description: "이름에서 <xref href=&quot;System.Data.DataTable&quot;> </xref> 관계의 자식 테이블입니다."
    - id: childTableNamespace
      type: System.String
      description: "자식 테이블 네임 스페이스의 이름입니다."
    - id: parentColumnNames
      type: System.String[]
      description: "배열을 <xref href=&quot;System.Data.DataColumn&quot;> </xref> 개체 이름으로 부모 <xref href=&quot;System.Data.DataTable&quot;> </xref> 간의 관계입니다."
    - id: childColumnNames
      type: System.String[]
      description: "배열을 <xref href=&quot;System.Data.DataColumn&quot;> </xref> 개체 이름으로 자식 <xref href=&quot;System.Data.DataTable&quot;> </xref> 관계의 합니다."
    - id: nested
      type: System.Boolean
      description: "관계가 중첩 되는지 여부를 나타내는 값입니다."
  overload: System.Data.DataRelation.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelation.CheckStateForProperty
  id: CheckStateForProperty
  parent: System.Data.DataRelation
  langs:
  - csharp
  name: CheckStateForProperty()
  nameWithType: DataRelation.CheckStateForProperty()
  fullName: System.Data.DataRelation.CheckStateForProperty()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "이 메서드는.NET Framework 인프라를 지원 하며 사용자 코드에서 직접 사용할 수 없습니다."
  syntax:
    content: protected void CheckStateForProperty ();
    parameters: []
  overload: System.Data.DataRelation.CheckStateForProperty*
  exceptions:
  - type: System.Data.DataException
    commentId: T:System.Data.DataException
    description: "부모 및 자식 테이블에 다른 속하는 <xref href=&quot;System.Data.DataSet&quot;> </xref> 개체입니다.       -또는-부모 및 자식 하나 이상의 쌍 <xref href=&quot;System.Data.DataColumn&quot;> </xref> 개체 데이터 형식에 일치 하지 않는 합니다.       부모 및 자식-또는- <xref href=&quot;System.Data.DataColumn&quot;> </xref> 개체는 동일 합니다."
  platform:
  - net462
- uid: System.Data.DataRelation.ChildColumns
  id: ChildColumns
  parent: System.Data.DataRelation
  langs:
  - csharp
  name: ChildColumns
  nameWithType: DataRelation.ChildColumns
  fullName: System.Data.DataRelation.ChildColumns
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "자식 가져옵니다 <xref href=&quot;System.Data.DataColumn&quot;> </xref> 이 관계의 개체입니다."
  remarks: ''
  example:
  - "The following example gets the child <xref:System.Data.DataColumn> objects of a <xref:System.Data.DataRelation>.  \n  \n [!code-vb[Classic WebData DataRelation.ChildColumns Example#1](~/add/codesnippet/visualbasic/p-system.data.datarelati_7_1.vb)]"
  syntax:
    content: public virtual System.Data.DataColumn[] ChildColumns { get; }
    return:
      type: System.Data.DataColumn[]
      description: "배열을 <xref href=&quot;System.Data.DataColumn&quot;> </xref> 개체입니다."
  overload: System.Data.DataRelation.ChildColumns*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelation.ChildKeyConstraint
  id: ChildKeyConstraint
  parent: System.Data.DataRelation
  langs:
  - csharp
  name: ChildKeyConstraint
  nameWithType: DataRelation.ChildKeyConstraint
  fullName: System.Data.DataRelation.ChildKeyConstraint
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "가져옵니다는 <xref href=&quot;System.Data.ForeignKeyConstraint&quot;> </xref> 관계에 대 한 합니다."
  remarks: "연결 되지 않은 경우 <xref:System.Data.ForeignKeyConstraint>존재이 관계에 대 한 것은 자동으로 생성 되며 가리키는 `ChildKeyConstraint`관계 관계 컬렉션에 추가 될 때,.</xref:System.Data.ForeignKeyConstraint>"
  example:
  - "The following example sets the `UpdateRule`, `DeleteRule`, and `AcceptReject` rule for the `ForeignKeyConstraint` associated with the `DataRelation`.  \n  \n [!code-vb[Classic WebData DataRelation.ChildKeyConstraint Example#1](~/add/codesnippet/visualbasic/p-system.data.datarelati_2_1.vb)]"
  syntax:
    content: public virtual System.Data.ForeignKeyConstraint ChildKeyConstraint { get; }
    return:
      type: System.Data.ForeignKeyConstraint
      description: "A <xref uid=&quot;langword_csharp_ForeignKeyConstraint&quot; name=&quot;ForeignKeyConstraint&quot; href=&quot;&quot;></xref>."
  overload: System.Data.DataRelation.ChildKeyConstraint*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelation.ChildTable
  id: ChildTable
  parent: System.Data.DataRelation
  langs:
  - csharp
  name: ChildTable
  nameWithType: DataRelation.ChildTable
  fullName: System.Data.DataRelation.ChildTable
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "이 관계의 자식 테이블을 가져옵니다."
  remarks: ''
  example:
  - "The following example gets the child <xref:System.Data.DataTable> of a <xref:System.Data.DataRelation>.  \n  \n [!code-vb[Classic WebData DataRelation.ChildTable Example#1](~/add/codesnippet/visualbasic/p-system.data.datarelati_0_1.vb)]"
  syntax:
    content: public virtual System.Data.DataTable ChildTable { get; }
    return:
      type: System.Data.DataTable
      description: "A <xref href=&quot;System.Data.DataTable&quot;> </xref> 관계의 자식 테이블입니다."
  overload: System.Data.DataRelation.ChildTable*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelation.DataSet
  id: DataSet
  parent: System.Data.DataRelation
  langs:
  - csharp
  name: DataSet
  nameWithType: DataRelation.DataSet
  fullName: System.Data.DataRelation.DataSet
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "가져옵니다는 <xref href=&quot;System.Data.DataSet&quot;> </xref> 입니다는 <xref href=&quot;System.Data.DataRelation&quot;> </xref> 속해 있습니다."
  remarks: "<xref:System.Data.DataRelationCollection>연관는 <xref:System.Data.DataSet>통해 액세스 하는 <xref:System.Data.DataSet.Relations%2A>의 속성은 <xref:System.Data.DataSet>개체.</xref:System.Data.DataSet> </xref:System.Data.DataSet.Relations%2A> </xref:System.Data.DataSet> </xref:System.Data.DataRelationCollection>"
  example:
  - "The following example gets the <xref:System.Data.DataSet> of a <xref:System.Data.DataRelation>.  \n  \n [!code-vb[Classic WebData DataRelation.DataSet Example#1](~/add/codesnippet/visualbasic/p-system.data.datarelati_1_1.vb)]"
  syntax:
    content: public virtual System.Data.DataSet DataSet { get; }
    return:
      type: System.Data.DataSet
      description: "A <xref href=&quot;System.Data.DataSet&quot;> </xref> 입니다는 <xref href=&quot;System.Data.DataRelation&quot;> </xref> 속해 있습니다."
  overload: System.Data.DataRelation.DataSet*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelation.ExtendedProperties
  id: ExtendedProperties
  parent: System.Data.DataRelation
  langs:
  - csharp
  name: ExtendedProperties
  nameWithType: DataRelation.ExtendedProperties
  fullName: System.Data.DataRelation.ExtendedProperties
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "사용자 지정 된 속성을 저장 하는 컬렉션을 가져옵니다."
  remarks: "ExtendedProperties를 사용 하 여 사용자 지정 정보를 추가 하는 <xref:System.Data.DataRelation>개체입니다.</xref:System.Data.DataRelation> Add 메서드가 있는 정보를 추가 합니다. Item 메서드가 정보를 검색 합니다.       확장된 속성 <xref:System.String>.</xref:System.String> 형식 이어야 합니다. 문자열 형식이 아닌 속성 유지 되지 않습니다 때는 <xref:System.Data.DataRelation>XML로 기록 됩니다.</xref:System.Data.DataRelation>"
  syntax:
    content: public System.Data.PropertyCollection ExtendedProperties { get; }
    return:
      type: System.Data.PropertyCollection
      description: "A <xref href=&quot;System.Data.PropertyCollection&quot;> </xref> 사용자 지정 된 속성이 들어 있는입니다."
  overload: System.Data.DataRelation.ExtendedProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelation.Nested
  id: Nested
  parent: System.Data.DataRelation
  langs:
  - csharp
  name: Nested
  nameWithType: DataRelation.Nested
  fullName: System.Data.DataRelation.Nested
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "지정 하는 값을 가져오거나 설정 합니다. 여부 <xref href=&quot;System.Data.DataRelation&quot;> </xref> 개체의 중첩 합니다."
  remarks: "사용할 수 있습니다 <xref:System.Data.DataRelation>XML에 지정 된 같은 계층 관계를 정의 하는 개체입니다.</xref:System.Data.DataRelation> 자세한 내용은 참조 [Datarelation 중첩](~/add/includes/ajax-current-ext-md.md)합니다.      > [!NOTE] > 경우는 <xref:System.Data.DataTable.TableName%2A>관계에서 자식 테이블의 일치는 <xref:System.Data.DataColumn.ColumnName%2A>관계에서 부모 테이블에 있는 열의 중첩 속성이 false 여야 합니다.</xref:System.Data.DataColumn.ColumnName%2A> </xref:System.Data.DataTable.TableName%2A> 이것은.NET framework 버전 1.0 필요 하지 않습니다."
  syntax:
    content: public virtual bool Nested { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>를 경우 <xref href=&quot;System.Data.DataRelation&quot;> </xref> 고, 그렇지 않으면 중첩 된 개체는 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Data.DataRelation.Nested*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelation.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)
  id: OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)
  parent: System.Data.DataRelation
  langs:
  - csharp
  name: OnPropertyChanging(PropertyChangedEventArgs)
  nameWithType: DataRelation.OnPropertyChanging(PropertyChangedEventArgs)
  fullName: System.Data.DataRelation.OnPropertyChanging(PropertyChangedEventArgs)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "이 멤버는.NET Framework 인프라를 지원 하며 사용자 코드에서 직접 사용할 수 없습니다."
  syntax:
    content: protected void OnPropertyChanging (System.ComponentModel.PropertyChangedEventArgs pcevent);
    parameters:
    - id: pcevent
      type: System.ComponentModel.PropertyChangedEventArgs
      description: "매개 변수 참조입니다."
  overload: System.Data.DataRelation.OnPropertyChanging*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelation.ParentColumns
  id: ParentColumns
  parent: System.Data.DataRelation
  langs:
  - csharp
  name: ParentColumns
  nameWithType: DataRelation.ParentColumns
  fullName: System.Data.DataRelation.ParentColumns
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "배열을 가져옵니다 <xref href=&quot;System.Data.DataColumn&quot;> </xref> 부모 열이 있는 개체 <xref href=&quot;System.Data.DataRelation&quot;> </xref>합니다."
  remarks: ''
  example:
  - "The following example gets the array of <xref:System.Data.DataColumn> objects that function as parent columns for the relation.  \n  \n [!code-vb[Classic WebData DataRelation.ParentColumns Example#1](~/add/codesnippet/visualbasic/p-system.data.datarelati_5_1.vb)]"
  syntax:
    content: public virtual System.Data.DataColumn[] ParentColumns { get; }
    return:
      type: System.Data.DataColumn[]
      description: "배열을 <xref href=&quot;System.Data.DataColumn&quot;> </xref> 부모 열이 있는 개체 <xref href=&quot;System.Data.DataRelation&quot;> </xref>합니다."
  overload: System.Data.DataRelation.ParentColumns*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelation.ParentKeyConstraint
  id: ParentKeyConstraint
  parent: System.Data.DataRelation
  langs:
  - csharp
  name: ParentKeyConstraint
  nameWithType: DataRelation.ParentKeyConstraint
  fullName: System.Data.DataRelation.ParentKeyConstraint
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "가져옵니다는 <xref href=&quot;System.Data.UniqueConstraint&quot;> </xref> 의 부모 열에 있는 값을 보장 하는 <xref href=&quot;System.Data.DataRelation&quot;> </xref> 고유 합니다."
  remarks: ''
  example:
  - "The following example gets the ParentKeyConstraint of a <xref:System.Data.DataRelation> object.  \n  \n [!code-vb[Classic WebData DataRelation.ParentKeyConstraint Example#1](~/add/codesnippet/visualbasic/p-system.data.datarelati_6_1.vb)]"
  syntax:
    content: public virtual System.Data.UniqueConstraint ParentKeyConstraint { get; }
    return:
      type: System.Data.UniqueConstraint
      description: "A <xref href=&quot;System.Data.UniqueConstraint&quot;> </xref> 지도록 부모 열에 값이 고유한 지 확인 합니다."
  overload: System.Data.DataRelation.ParentKeyConstraint*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelation.ParentTable
  id: ParentTable
  parent: System.Data.DataRelation
  langs:
  - csharp
  name: ParentTable
  nameWithType: DataRelation.ParentTable
  fullName: System.Data.DataRelation.ParentTable
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "부모를 가져옵니다 <xref href=&quot;System.Data.DataTable&quot;> </xref> 이 <xref href=&quot;System.Data.DataRelation&quot;> </xref>합니다."
  remarks: ''
  example:
  - "The following example gets the parent <xref:System.Data.DataTable> of a <xref:System.Data.DataRelation>.  \n  \n [!code-vb[Classic WebData DataRelation.ParentTable Example#1](~/add/codesnippet/visualbasic/p-system.data.datarelati_3_1.vb)]"
  syntax:
    content: public virtual System.Data.DataTable ParentTable { get; }
    return:
      type: System.Data.DataTable
      description: "A <xref href=&quot;System.Data.DataTable&quot;> </xref> 이 관계의 부모 테이블입니다."
  overload: System.Data.DataRelation.ParentTable*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelation.RaisePropertyChanging(System.String)
  id: RaisePropertyChanging(System.String)
  parent: System.Data.DataRelation
  langs:
  - csharp
  name: RaisePropertyChanging(String)
  nameWithType: DataRelation.RaisePropertyChanging(String)
  fullName: System.Data.DataRelation.RaisePropertyChanging(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "이 멤버는.NET Framework 인프라를 지원 하며 사용자 코드에서 직접 사용할 수 없습니다."
  syntax:
    content: protected void RaisePropertyChanging (string name);
    parameters:
    - id: name
      type: System.String
      description: "매개 변수 참조입니다."
  overload: System.Data.DataRelation.RaisePropertyChanging*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelation.RelationName
  id: RelationName
  parent: System.Data.DataRelation
  langs:
  - csharp
  name: RelationName
  nameWithType: DataRelation.RelationName
  fullName: System.Data.DataRelation.RelationName
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "검색 하기 위해 사용할 이름을 가져오거나 설정 합니다.는 <xref href=&quot;System.Data.DataRelation&quot;> </xref> 에서 <xref href=&quot;System.Data.DataRelationCollection&quot;> </xref>합니다."
  remarks: "검색 하는 <xref:System.Data.DataRelation> <xref:System.Data.DataRelationCollection>.</xref:System.Data.DataRelationCollection> </xref:System.Data.DataRelation> 경우 RelationName 속성을 사용 하 여"
  example:
  - "The following example uses the RelationName property to retrieve a <xref:System.Data.DataRelation> from a <xref:System.Data.DataRelationCollection>.  \n  \n [!code-vb[Classic WebData DataRelation.RelationName Example#1](~/add/codesnippet/visualbasic/p-system.data.datarelati_4_1.vb)]"
  syntax:
    content: public virtual string RelationName { get; set; }
    return:
      type: System.String
      description: "이름에서는 <xref href=&quot;System.Data.DataRelation&quot;> </xref>합니다."
  overload: System.Data.DataRelation.RelationName*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>또는 빈 문자열 (&quot;&quot;)에 전달 된는 <xref href=&quot;System.Data.DataColumn&quot;> </xref> 즉는 <xref href=&quot;System.Data.DataRelation&quot;> </xref>합니다."
  - type: System.Data.DuplicateNameException
    commentId: T:System.Data.DuplicateNameException
    description: "<xref href=&quot;System.Data.DataRelation&quot;> </xref> 이미 포함 되어 있는 컬렉션에 속한는 <xref href=&quot;System.Data.DataRelation&quot;> </xref> 동일한 이름을 가진입니다."
  platform:
  - net462
- uid: System.Data.DataRelation.ToString
  id: ToString
  parent: System.Data.DataRelation
  langs:
  - csharp
  name: ToString()
  nameWithType: DataRelation.ToString()
  fullName: System.Data.DataRelation.ToString()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "가져옵니다는 <xref:System.Data.DataRelation.RelationName*>있는 경우.</xref:System.Data.DataRelation.RelationName*>"
  remarks: ''
  example:
  - "The following example uses the <xref:System.Data.DataColumn.ToString%2A> property to return the name of the <xref:System.Data.DataRelation> object.  \n  \n [!code-vb[Classic WebData DataRelation.ToString Example#1](~/add/codesnippet/visualbasic/m-system.data.datarelati_1_1.vb)]\n [!code-cs[Classic WebData DataRelation.ToString Example#1](~/add/codesnippet/csharp/m-system.data.datarelati_1_1.cs)]"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "값은 <xref:System.Data.DataRelation.RelationName*>속성.</xref:System.Data.DataRelation.RelationName*>"
  overload: System.Data.DataRelation.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Data.InvalidConstraintException
  parent: System.Data
  isExternal: false
  name: InvalidConstraintException
  nameWithType: InvalidConstraintException
  fullName: System.Data.InvalidConstraintException
- uid: System.Data.DataException
  parent: System.Data
  isExternal: false
  name: DataException
  nameWithType: DataException
  fullName: System.Data.DataException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Data.DuplicateNameException
  parent: System.Data
  isExternal: false
  name: DuplicateNameException
  nameWithType: DuplicateNameException
  fullName: System.Data.DuplicateNameException
- uid: System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn)
  parent: System.Data.DataRelation
  isExternal: false
  name: DataRelation(String,DataColumn,DataColumn)
  nameWithType: DataRelation.DataRelation(String,DataColumn,DataColumn)
  fullName: System.Data.DataRelation.DataRelation(String,DataColumn,DataColumn)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.DataColumn
  parent: System.Data
  isExternal: false
  name: DataColumn
  nameWithType: DataColumn
  fullName: System.Data.DataColumn
- uid: System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[])
  parent: System.Data.DataRelation
  isExternal: false
  name: DataRelation(String,DataColumn[],DataColumn[])
  nameWithType: DataRelation.DataRelation(String,DataColumn[],DataColumn[])
  fullName: System.Data.DataRelation.DataRelation(String,DataColumn[],DataColumn[])
- uid: System.Data.DataColumn[]
  parent: System.Data
  isExternal: false
  name: DataColumn
  nameWithType: DataColumn
  fullName: System.Data.DataColumn[]
  spec.csharp:
  - uid: System.Data.DataColumn
    name: DataColumn
    nameWithType: DataColumn
    fullName: DataColumn[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)
  parent: System.Data.DataRelation
  isExternal: false
  name: DataRelation(String,DataColumn,DataColumn,Boolean)
  nameWithType: DataRelation.DataRelation(String,DataColumn,DataColumn,Boolean)
  fullName: System.Data.DataRelation.DataRelation(String,DataColumn,DataColumn,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)
  parent: System.Data.DataRelation
  isExternal: false
  name: DataRelation(String,DataColumn[],DataColumn[],Boolean)
  nameWithType: DataRelation.DataRelation(String,DataColumn[],DataColumn[],Boolean)
  fullName: System.Data.DataRelation.DataRelation(String,DataColumn[],DataColumn[],Boolean)
- uid: System.Data.DataRelation.#ctor(System.String,System.String,System.String,System.String[],System.String[],System.Boolean)
  parent: System.Data.DataRelation
  isExternal: false
  name: DataRelation(String,String,String,String[],String[],Boolean)
  nameWithType: DataRelation.DataRelation(String,String,String,String[],String[],Boolean)
  fullName: System.Data.DataRelation.DataRelation(String,String,String,String[],String[],Boolean)
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.DataRelation.#ctor(System.String,System.String,System.String,System.String,System.String,System.String[],System.String[],System.Boolean)
  parent: System.Data.DataRelation
  isExternal: false
  name: DataRelation(String,String,String,String,String,String[],String[],Boolean)
  nameWithType: DataRelation.DataRelation(String,String,String,String,String,String[],String[],Boolean)
  fullName: System.Data.DataRelation.DataRelation(String,String,String,String,String,String[],String[],Boolean)
- uid: System.Data.DataRelation.CheckStateForProperty
  parent: System.Data.DataRelation
  isExternal: false
  name: CheckStateForProperty()
  nameWithType: DataRelation.CheckStateForProperty()
  fullName: System.Data.DataRelation.CheckStateForProperty()
- uid: System.Data.DataRelation.ChildColumns
  parent: System.Data.DataRelation
  isExternal: false
  name: ChildColumns
  nameWithType: DataRelation.ChildColumns
  fullName: System.Data.DataRelation.ChildColumns
- uid: System.Data.DataRelation.ChildKeyConstraint
  parent: System.Data.DataRelation
  isExternal: false
  name: ChildKeyConstraint
  nameWithType: DataRelation.ChildKeyConstraint
  fullName: System.Data.DataRelation.ChildKeyConstraint
- uid: System.Data.ForeignKeyConstraint
  parent: System.Data
  isExternal: false
  name: ForeignKeyConstraint
  nameWithType: ForeignKeyConstraint
  fullName: System.Data.ForeignKeyConstraint
- uid: System.Data.DataRelation.ChildTable
  parent: System.Data.DataRelation
  isExternal: false
  name: ChildTable
  nameWithType: DataRelation.ChildTable
  fullName: System.Data.DataRelation.ChildTable
- uid: System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Data.DataRelation.DataSet
  parent: System.Data.DataRelation
  isExternal: false
  name: DataSet
  nameWithType: DataRelation.DataSet
  fullName: System.Data.DataRelation.DataSet
- uid: System.Data.DataSet
  parent: System.Data
  isExternal: false
  name: DataSet
  nameWithType: DataSet
  fullName: System.Data.DataSet
- uid: System.Data.DataRelation.ExtendedProperties
  parent: System.Data.DataRelation
  isExternal: false
  name: ExtendedProperties
  nameWithType: DataRelation.ExtendedProperties
  fullName: System.Data.DataRelation.ExtendedProperties
- uid: System.Data.PropertyCollection
  parent: System.Data
  isExternal: false
  name: PropertyCollection
  nameWithType: PropertyCollection
  fullName: System.Data.PropertyCollection
- uid: System.Data.DataRelation.Nested
  parent: System.Data.DataRelation
  isExternal: false
  name: Nested
  nameWithType: DataRelation.Nested
  fullName: System.Data.DataRelation.Nested
- uid: System.Data.DataRelation.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)
  parent: System.Data.DataRelation
  isExternal: false
  name: OnPropertyChanging(PropertyChangedEventArgs)
  nameWithType: DataRelation.OnPropertyChanging(PropertyChangedEventArgs)
  fullName: System.Data.DataRelation.OnPropertyChanging(PropertyChangedEventArgs)
- uid: System.ComponentModel.PropertyChangedEventArgs
  parent: System.ComponentModel
  isExternal: true
  name: PropertyChangedEventArgs
  nameWithType: PropertyChangedEventArgs
  fullName: System.ComponentModel.PropertyChangedEventArgs
- uid: System.Data.DataRelation.ParentColumns
  parent: System.Data.DataRelation
  isExternal: false
  name: ParentColumns
  nameWithType: DataRelation.ParentColumns
  fullName: System.Data.DataRelation.ParentColumns
- uid: System.Data.DataRelation.ParentKeyConstraint
  parent: System.Data.DataRelation
  isExternal: false
  name: ParentKeyConstraint
  nameWithType: DataRelation.ParentKeyConstraint
  fullName: System.Data.DataRelation.ParentKeyConstraint
- uid: System.Data.UniqueConstraint
  parent: System.Data
  isExternal: false
  name: UniqueConstraint
  nameWithType: UniqueConstraint
  fullName: System.Data.UniqueConstraint
- uid: System.Data.DataRelation.ParentTable
  parent: System.Data.DataRelation
  isExternal: false
  name: ParentTable
  nameWithType: DataRelation.ParentTable
  fullName: System.Data.DataRelation.ParentTable
- uid: System.Data.DataRelation.RaisePropertyChanging(System.String)
  parent: System.Data.DataRelation
  isExternal: false
  name: RaisePropertyChanging(String)
  nameWithType: DataRelation.RaisePropertyChanging(String)
  fullName: System.Data.DataRelation.RaisePropertyChanging(String)
- uid: System.Data.DataRelation.RelationName
  parent: System.Data.DataRelation
  isExternal: false
  name: RelationName
  nameWithType: DataRelation.RelationName
  fullName: System.Data.DataRelation.RelationName
- uid: System.Data.DataRelation.ToString
  parent: System.Data.DataRelation
  isExternal: false
  name: ToString()
  nameWithType: DataRelation.ToString()
  fullName: System.Data.DataRelation.ToString()
- uid: System.Data.DataRelation.#ctor*
  parent: System.Data.DataRelation
  isExternal: false
  name: DataRelation
  nameWithType: DataRelation.DataRelation
- uid: System.Data.DataRelation.CheckStateForProperty*
  parent: System.Data.DataRelation
  isExternal: false
  name: CheckStateForProperty
  nameWithType: DataRelation.CheckStateForProperty
- uid: System.Data.DataRelation.ChildColumns*
  parent: System.Data.DataRelation
  isExternal: false
  name: ChildColumns
  nameWithType: DataRelation.ChildColumns
- uid: System.Data.DataRelation.ChildKeyConstraint*
  parent: System.Data.DataRelation
  isExternal: false
  name: ChildKeyConstraint
  nameWithType: DataRelation.ChildKeyConstraint
- uid: System.Data.DataRelation.ChildTable*
  parent: System.Data.DataRelation
  isExternal: false
  name: ChildTable
  nameWithType: DataRelation.ChildTable
- uid: System.Data.DataRelation.DataSet*
  parent: System.Data.DataRelation
  isExternal: false
  name: DataSet
  nameWithType: DataRelation.DataSet
- uid: System.Data.DataRelation.ExtendedProperties*
  parent: System.Data.DataRelation
  isExternal: false
  name: ExtendedProperties
  nameWithType: DataRelation.ExtendedProperties
- uid: System.Data.DataRelation.Nested*
  parent: System.Data.DataRelation
  isExternal: false
  name: Nested
  nameWithType: DataRelation.Nested
- uid: System.Data.DataRelation.OnPropertyChanging*
  parent: System.Data.DataRelation
  isExternal: false
  name: OnPropertyChanging
  nameWithType: DataRelation.OnPropertyChanging
- uid: System.Data.DataRelation.ParentColumns*
  parent: System.Data.DataRelation
  isExternal: false
  name: ParentColumns
  nameWithType: DataRelation.ParentColumns
- uid: System.Data.DataRelation.ParentKeyConstraint*
  parent: System.Data.DataRelation
  isExternal: false
  name: ParentKeyConstraint
  nameWithType: DataRelation.ParentKeyConstraint
- uid: System.Data.DataRelation.ParentTable*
  parent: System.Data.DataRelation
  isExternal: false
  name: ParentTable
  nameWithType: DataRelation.ParentTable
- uid: System.Data.DataRelation.RaisePropertyChanging*
  parent: System.Data.DataRelation
  isExternal: false
  name: RaisePropertyChanging
  nameWithType: DataRelation.RaisePropertyChanging
- uid: System.Data.DataRelation.RelationName*
  parent: System.Data.DataRelation
  isExternal: false
  name: RelationName
  nameWithType: DataRelation.RelationName
- uid: System.Data.DataRelation.ToString*
  parent: System.Data.DataRelation
  isExternal: false
  name: ToString
  nameWithType: DataRelation.ToString
