### YamlMime:ManagedReference
items:
- uid: System.Windows.Media.Effects.ShaderEffect
  id: ShaderEffect
  children:
  - System.Windows.Media.Effects.ShaderEffect.#ctor
  - System.Windows.Media.Effects.ShaderEffect.Clone
  - System.Windows.Media.Effects.ShaderEffect.CloneCore(System.Windows.Freezable)
  - System.Windows.Media.Effects.ShaderEffect.CloneCurrentValue
  - System.Windows.Media.Effects.ShaderEffect.CloneCurrentValueCore(System.Windows.Freezable)
  - System.Windows.Media.Effects.ShaderEffect.CreateInstanceCore
  - System.Windows.Media.Effects.ShaderEffect.DdxUvDdyUvRegisterIndex
  - System.Windows.Media.Effects.ShaderEffect.GetAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Media.Effects.ShaderEffect.GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Media.Effects.ShaderEffect.PaddingBottom
  - System.Windows.Media.Effects.ShaderEffect.PaddingLeft
  - System.Windows.Media.Effects.ShaderEffect.PaddingRight
  - System.Windows.Media.Effects.ShaderEffect.PaddingTop
  - System.Windows.Media.Effects.ShaderEffect.PixelShader
  - System.Windows.Media.Effects.ShaderEffect.PixelShaderConstantCallback(System.Int32)
  - System.Windows.Media.Effects.ShaderEffect.PixelShaderProperty
  - System.Windows.Media.Effects.ShaderEffect.PixelShaderSamplerCallback(System.Int32)
  - System.Windows.Media.Effects.ShaderEffect.PixelShaderSamplerCallback(System.Int32,System.Windows.Media.Effects.SamplingMode)
  - System.Windows.Media.Effects.ShaderEffect.RegisterPixelShaderSamplerProperty(System.String,System.Type,System.Int32)
  - System.Windows.Media.Effects.ShaderEffect.RegisterPixelShaderSamplerProperty(System.String,System.Type,System.Int32,System.Windows.Media.Effects.SamplingMode)
  - System.Windows.Media.Effects.ShaderEffect.UpdateShaderValue(System.Windows.DependencyProperty)
  langs:
  - csharp
  name: ShaderEffect
  nameWithType: ShaderEffect
  fullName: System.Windows.Media.Effects.ShaderEffect
  type: Class
  summary: "사용자 지정 비트맵 효과 사용 하 여 제공 된 <xref href=&quot;System.Windows.Media.Effects.PixelShader&quot;> </xref>합니다."
  remarks: "단일 픽셀 셰이더에 따라 사용자 지정 효과 구현 하려면 ShaderEffect 클래스에서 파생 됩니다.       다음 단계에는 사용자 지정 효과 만드는 방법을 보여 줍니다.      1.  부하는 <xref:System.Windows.Media.Effects.PixelShader>미리 컴파일된 높은 수준 음영 언어 (HLSL) 바이트 코드에서.</xref:System.Windows.Media.Effects.PixelShader>      2.  효과의 매개 변수를 나타내는 종속성 속성을 정의 및 <xref:System.Windows.Media.Brush>-기반 화면 입력.</xref:System.Windows.Media.Brush> 중 하나를 사용 하 여는 <xref:System.Windows.Media.Effects.ShaderEffect.RegisterPixelShaderSamplerProperty%2A>오버 로드와 이러한 입력을 연결 하려면 HLSL 바이트 코드에서 참조 되는 숫자를 등록 합니다.</xref:System.Windows.Media.Effects.ShaderEffect.RegisterPixelShaderSamplerProperty%2A>       샘플 수를 4로 제한 됩니다.       PS 3.0 셰이더를 사용 하는 경우 다음과 같은 제한이 있습니다.      -PS 3.0 셰이더를 할당 하는 경우 샘플 수 8 개로 증가 합니다. 다른 셰이더가 8 샘플러를 등록 하기 전에 PS 3.0 셰이더를 할당 합니다.      Float에 대 한 224-전체 셰이더 상수 레지스터 제한이 사용 됩니다. 자세한 내용은 참조 [ps_3_0](http://go.microsoft.com/fwlink/?LinkId=166292)합니다.      -다음 데이터 형식은 PS 3.0 셰이더만 사용할 수 있습니다. 이러한 하위 셰이더 버전에서 사용 하는 경우 예외가 throw 됩니다.          - `int` 및 형식으로 변환할 수 `int`: `uint`, `byte`, `sbyte`, `long`, `ulong`, `short`, `ushort`, `char`           -    `bool` -경우 셰이더 셰이더 PS 3.0에 대 한 하드웨어 지원 되지 않는 컴퓨터에 로드 된 유효한 PS 3.0은 무시 됩니다. 셰이더 유효 하지 않을 경우 예외가 throw 되지 않습니다.      -컴퓨터에 있는 경우 둘 이상의 비디오 카드, 동작 최소 가능 비디오 카드에 의해 정의 됩니다. 예를 들어 컴퓨터에 있는 경우 두 개의 비디오 카드 중 하나는 PS 3.0을 지원 하 고 그 중 하나는 그렇지 않습니다 동작은 동일 컴퓨터 PS 3.0을 지원 하지 않는 하는 경우.      -컴퓨터 하드웨어에서 렌더링 PS 3.0을 지원 하지만 잘못 된 PS 3.0 셰이더는 할당 된 경우는 <xref:System.Windows.Media.Effects.PixelShader.InvalidPixelShaderEncountered>이벤트가 발생 합니다.</xref:System.Windows.Media.Effects.PixelShader.InvalidPixelShaderEncountered> 잘못 된 PS 3.0 셰이더 프로그램의 예로 사용 하 여 컴파일된는 `ps_3_sw` 플래그입니다. ShaderEffect 클래스 허용으로 컴파일되는 PS 3.0 셰이더만 `ps_3_0` 플래그가 fxc.exe에 전달 합니다. 자세한 내용은 참조 [효과 컴파일러 도구](http://go.microsoft.com/fwlink/?LinkId=166293)합니다.      > [!NOTE] > PS 2.0 셰이더는 소프트웨어에서 렌더링할 때 실행 됩니다. 그러나 PS 3.0 시스템 하드웨어에서 사용할 수, 하는 경우에 PS 3.0 셰이더 소프트웨어 렌더링 하는 동안 실행 되지 않습니다."
  example:
  - "The following code example shows how to derive from the ShaderEffect class.  \n  \n [!code-cs[System.Windows.Media.Effects.ShaderEffect#1](~/add/codesnippet/csharp/ShaderEffectDemo/ThresholdEffect.cs#1)]  \n  \n The following code example shows a shader that corresponds to the previous ShaderEffect class.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  \n  \n The following XAML shows how to use the custom shader effect.  \n  \n [!code-xml[System.Windows.Media.Effects.ShaderEffect#1000](~/add/codesnippet/xaml/ShaderEffectDemo/Window1.xaml#1000)]"
  syntax:
    content: 'public abstract class ShaderEffect : System.Windows.Media.Effects.Effect'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  - System.Windows.Freezable
  - System.Windows.Media.Animation.Animatable
  - System.Windows.Media.Effects.Effect
  implements: []
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Freezable.CanFreeze
  - System.Windows.Freezable.Changed
  - System.Windows.Freezable.CreateInstance
  - System.Windows.Freezable.Freeze
  - System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)
  - System.Windows.Freezable.GetAsFrozen
  - System.Windows.Freezable.GetCurrentValueAsFrozen
  - System.Windows.Freezable.IsFrozen
  - System.Windows.Freezable.OnChanged
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)
  - System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.Freezable.ReadPreamble
  - System.Windows.Freezable.WritePostscript
  - System.Windows.Freezable.WritePreamble
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)
  - System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)
  - System.Windows.Media.Animation.Animatable.HasAnimatedProperties
  - System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)
  - System.Windows.Media.Effects.Effect.EffectMapping
  - System.Windows.Media.Effects.Effect.ImplicitInput
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Media.Effects.ShaderEffect.#ctor
  id: '#ctor'
  parent: System.Windows.Media.Effects.ShaderEffect
  langs:
  - csharp
  name: ShaderEffect()
  nameWithType: ShaderEffect.ShaderEffect()
  fullName: System.Windows.Media.Effects.ShaderEffect.ShaderEffect()
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Windows.Media.Effects.ShaderEffect&quot;> </xref> 클래스입니다."
  syntax:
    content: protected ShaderEffect ();
    parameters: []
  overload: System.Windows.Media.Effects.ShaderEffect.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.ShaderEffect.Clone
  id: Clone
  parent: System.Windows.Media.Effects.ShaderEffect
  langs:
  - csharp
  name: Clone()
  nameWithType: ShaderEffect.Clone()
  fullName: System.Windows.Media.Effects.ShaderEffect.Clone()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "수정 가능한 복제본을 만듭니다 <xref href=&quot;System.Windows.Media.Effects.ShaderEffect&quot;> </xref> 개체를이 개체 값의 전체 복사본입니다. 이 개체의 종속성 속성을 복사 하는 경우이 메서드는 리소스 참조와 데이터 바인딩이 없습니다 더 이상 확인 있는 하지만 애니메이션 말거나의 현재 값은 복사 합니다."
  remarks: "Clone 메서드를 사용 하 여의 수정 가능한 복사본을 만드는 수 고정 <xref:System.Windows.Freezable>개체입니다.</xref:System.Windows.Freezable> 편의 위해이 메서드는 상속 된 숨깁니다 <xref:System.Windows.Freezable.Clone%2A>메서드는 강력한 형식의 구현을 제공 합니다.</xref:System.Windows.Freezable.Clone%2A>"
  syntax:
    content: public System.Windows.Media.Effects.ShaderEffect Clone ();
    parameters: []
    return:
      type: System.Windows.Media.Effects.ShaderEffect
      description: "이 인스턴스의 수정 가능한 복제본입니다. 반환 되는 복제본은 사실상 현재 개체의 전체 복사본입니다. 복제본의 <xref:System.Windows.Freezable.IsFrozen*>속성은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Windows.Freezable.IsFrozen*>"
  overload: System.Windows.Media.Effects.ShaderEffect.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.ShaderEffect.CloneCore(System.Windows.Freezable)
  id: CloneCore(System.Windows.Freezable)
  parent: System.Windows.Media.Effects.ShaderEffect
  langs:
  - csharp
  name: CloneCore(Freezable)
  nameWithType: ShaderEffect.CloneCore(Freezable)
  fullName: System.Windows.Media.Effects.ShaderEffect.CloneCore(Freezable)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "인스턴스는 지정 된 복제본 (전체 복사본)으로 만듭니다 <xref href=&quot;System.Windows.Freezable&quot;> </xref> 기본 (애니메이션이 적용 되지 않은) 속성 값을 사용 하 여 합니다."
  syntax:
    content: protected override void CloneCore (System.Windows.Freezable sourceFreezable);
    parameters:
    - id: sourceFreezable
      type: System.Windows.Freezable
      description: "복제할 개체입니다."
  overload: System.Windows.Media.Effects.ShaderEffect.CloneCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.ShaderEffect.CloneCurrentValue
  id: CloneCurrentValue
  parent: System.Windows.Media.Effects.ShaderEffect
  langs:
  - csharp
  name: CloneCurrentValue()
  nameWithType: ShaderEffect.CloneCurrentValue()
  fullName: System.Windows.Media.Effects.ShaderEffect.CloneCurrentValue()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "수정 가능한 복제본을 만듭니다 <xref href=&quot;System.Windows.Media.Effects.ShaderEffect&quot;> </xref> 개체를이 개체의 현재 값의 전체 복사본입니다. 리소스 참조, 데이터 바인딩 및 애니메이션은 복사 되지 않지만 이러한 요소의 현재 값은 복사 합니다."
  remarks: "수정 가능한 복사본을 생성 하기 위해이 메서드는 고정 된 <xref:System.Windows.Freezable>개체 (또는 모든 <xref:System.Windows.Freezable>개체).</xref:System.Windows.Freezable> </xref:System.Windows.Freezable> 편의 위해이 메서드는 강력한 형식의 구현이 포함 된 상속 된 버전을 숨깁니다.       자세한 내용은 <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>.</xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName> 을 참조 하십시오."
  syntax:
    content: public System.Windows.Media.Effects.ShaderEffect CloneCurrentValue ();
    parameters: []
    return:
      type: System.Windows.Media.Effects.ShaderEffect
      description: "현재 개체의 수정 가능한 복제본입니다. 복제 된 개체의 <> </> *> 속성은 됩니다 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 경우에 원본의 <> </> *> 속성은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Media.Effects.ShaderEffect.CloneCurrentValue*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.ShaderEffect.CloneCurrentValueCore(System.Windows.Freezable)
  id: CloneCurrentValueCore(System.Windows.Freezable)
  parent: System.Windows.Media.Effects.ShaderEffect
  langs:
  - csharp
  name: CloneCurrentValueCore(Freezable)
  nameWithType: ShaderEffect.CloneCurrentValueCore(Freezable)
  fullName: System.Windows.Media.Effects.ShaderEffect.CloneCurrentValueCore(Freezable)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "인스턴스는 지정 된 수정 가능한 복제본 (전체 복사본)으로 만듭니다 <xref href=&quot;System.Windows.Freezable&quot;> </xref> 현재 속성 값을 사용 하 여 합니다."
  syntax:
    content: protected override void CloneCurrentValueCore (System.Windows.Freezable sourceFreezable);
    parameters:
    - id: sourceFreezable
      type: System.Windows.Freezable
      description: "<xref href=&quot;System.Windows.Freezable&quot;> </xref> 복제 되도록 합니다."
  overload: System.Windows.Media.Effects.ShaderEffect.CloneCurrentValueCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.ShaderEffect.CreateInstanceCore
  id: CreateInstanceCore
  parent: System.Windows.Media.Effects.ShaderEffect
  langs:
  - csharp
  name: CreateInstanceCore()
  nameWithType: ShaderEffect.CreateInstanceCore()
  fullName: System.Windows.Media.Effects.ShaderEffect.CreateInstanceCore()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "새 인스턴스를 만듭니다는 <xref href=&quot;System.Windows.Freezable&quot;> </xref> 클래스를 파생 합니다."
  syntax:
    content: protected override System.Windows.Freezable CreateInstanceCore ();
    parameters: []
    return:
      type: System.Windows.Freezable
      description: "새 인스턴스입니다."
  overload: System.Windows.Media.Effects.ShaderEffect.CreateInstanceCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.ShaderEffect.DdxUvDdyUvRegisterIndex
  id: DdxUvDdyUvRegisterIndex
  parent: System.Windows.Media.Effects.ShaderEffect
  langs:
  - csharp
  name: DdxUvDdyUvRegisterIndex
  nameWithType: ShaderEffect.DdxUvDdyUvRegisterIndex
  fullName: System.Windows.Media.Effects.ShaderEffect.DdxUvDdyUvRegisterIndex
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "화면 공간을 기준으로 하는 질감 좌표의 부분 파생 값에 사용할 셰이더 레지스터를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "질감의 부분 파생 값을 포함 하는 DdxUvDdyUvRegisterIndex 속성 셰이더 등록을 지정 하려면 화면 공간을 기준으로 조정 하는 데 사용 하 여 합니다. 예를 들어 DdxUvDdyUvRegisterIndex 4로 설정 되 면 셰이더 레지스터 c 4 ´ ù. 레지스터 c&4;는&4; 개의 부동 소수점 수 필드를 포함합니다. 다음과 같은 높은 수준의 음영 언어 (HLSL) 코드에서는이 레지스터를 사용 하는 방법을 보여 줍니다. `nextPixelUV` 값 오른쪽에 다음 픽셀을 나타냅니다.      ```   float4 ddxUvDdyUv : register(c4);   SamplerState  sampler : register(S0);   ...   float2 nextPixelUV;   nextPixelUV.u = ddxUvDdyUv.x + u;   nextPixelUV.v = ddxUvDdyUv.y + v;      tex2D(sampler, nextPixelUV);   ```다음 표에서 DdxUvDdyUvRegisterIndex에 대 한 지정 된 레지스터를 채우는 방법을 보여 줍니다.      | 레지스터 상수 | 파생 값 |   |-----------------------|----------------------|   | component|ddx(u) x |   | y component|ddx(v) |   | z component|ddy(u) |   | w component|ddy(v) |       로 표시 됩니다. 질감 좌표 `(u, v)`합니다. `ddx(u)`질감 좌표 구성 요소의 일정 부분 파생 값은 `u` 화면 공간 x 좌표를 기준으로 합니다. `ddy(u)`질감 좌표의 부분 파생 값 `u` 화면 공간 y 좌표를 기준으로 합니다. 마찬가지로, `ddx(v)` 및 `ddy(v)` 질감 좌표 구성 요소에 대 한 해당 화면 공간 파생 값은 `v`합니다.      > [!NOTE] > HLSL에 이러한 값을 계산 하려면 ddx 및 ddy 명령이 하지만 이러한 지침 모든 PixelShader 2.0 하드웨어에서 사용할 수 없습니다.       이러한 상수는 다음과 같은 방식으로 생각할 수 있습니다. 다음 1 픽셀 x 방향), (에서 화면 영역에서 오른쪽으로 실행 하면 `ddx(u)` 양 하 `u` 질감 공간에서 변경 내용 및 `ddx(v)` 양 하는 `v` 질감 공간에서 변경 합니다. 경우 효과 축에 맞춰질 렌더링 될 때 `ddx(v)` 은 0입니다. 효과 렌더링 될 때 회전 `ddx(v)`&0;이 아닙니다."
  syntax:
    content: protected int DdxUvDdyUvRegisterIndex { get; set; }
    return:
      type: System.Int32
      description: "부분 파생 값을 포함 하는 레지스터의 인덱스입니다."
  overload: System.Windows.Media.Effects.ShaderEffect.DdxUvDdyUvRegisterIndex*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "효과의 초기 처리 한 후 한 번 크거나 DdxUvDdyUvRegisterIndex 속성을 설정 하려고 했습니다."
  platform:
  - net462
- uid: System.Windows.Media.Effects.ShaderEffect.GetAsFrozenCore(System.Windows.Freezable)
  id: GetAsFrozenCore(System.Windows.Freezable)
  parent: System.Windows.Media.Effects.ShaderEffect
  langs:
  - csharp
  name: GetAsFrozenCore(Freezable)
  nameWithType: ShaderEffect.GetAsFrozenCore(Freezable)
  fullName: System.Windows.Media.Effects.ShaderEffect.GetAsFrozenCore(Freezable)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "인스턴스는 지정 된 고정된 복제본으로 만듭니다 <xref href=&quot;System.Windows.Freezable&quot;> </xref> 기본 (애니메이션이 적용 되지 않은) 속성 값을 사용 하 여 합니다."
  syntax:
    content: protected override void GetAsFrozenCore (System.Windows.Freezable sourceFreezable);
    parameters:
    - id: sourceFreezable
      type: System.Windows.Freezable
      description: "복사할 인스턴스입니다."
  overload: System.Windows.Media.Effects.ShaderEffect.GetAsFrozenCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.ShaderEffect.GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  id: GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  parent: System.Windows.Media.Effects.ShaderEffect
  langs:
  - csharp
  name: GetCurrentValueAsFrozenCore(Freezable)
  nameWithType: ShaderEffect.GetCurrentValueAsFrozenCore(Freezable)
  fullName: System.Windows.Media.Effects.ShaderEffect.GetCurrentValueAsFrozenCore(Freezable)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "현재 인스턴스가 지정 된의 고정된 복제본으로 만듭니다 <xref href=&quot;System.Windows.Freezable&quot;> </xref>합니다. 개체에 애니메이션 효과 준된 종속성 속성이 애니메이션된의 현재 값은 복사 됩니다."
  syntax:
    content: protected override void GetCurrentValueAsFrozenCore (System.Windows.Freezable sourceFreezable);
    parameters:
    - id: sourceFreezable
      type: System.Windows.Freezable
      description: "<xref href=&quot;System.Windows.Freezable&quot;> </xref> 복사 및 고정할 합니다."
  overload: System.Windows.Media.Effects.ShaderEffect.GetCurrentValueAsFrozenCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.ShaderEffect.PaddingBottom
  id: PaddingBottom
  parent: System.Windows.Media.Effects.ShaderEffect
  langs:
  - csharp
  name: PaddingBottom
  nameWithType: ShaderEffect.PaddingBottom
  fullName: System.Windows.Media.Effects.ShaderEffect.PaddingBottom
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "효과 출력 질감이 아래쪽 가장자리를 따라 해당 입력된 질감 보다 큼을 나타내는 값을 가져오거나 설정 합니다."
  syntax:
    content: protected double PaddingBottom { get; set; }
    return:
      type: System.Double
      description: "효과의 아래쪽 가장자리를 따라 있는 안쪽 여백입니다."
  overload: System.Windows.Media.Effects.ShaderEffect.PaddingBottom*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "제공 된 값이 0 보다 작습니다."
  platform:
  - net462
- uid: System.Windows.Media.Effects.ShaderEffect.PaddingLeft
  id: PaddingLeft
  parent: System.Windows.Media.Effects.ShaderEffect
  langs:
  - csharp
  name: PaddingLeft
  nameWithType: ShaderEffect.PaddingLeft
  fullName: System.Windows.Media.Effects.ShaderEffect.PaddingLeft
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "효과 출력 질감이 왼쪽된 가장자리를 따라 해당 입력된 질감 보다 큼을 나타내는 값을 가져오거나 설정 합니다."
  syntax:
    content: protected double PaddingLeft { get; set; }
    return:
      type: System.Double
      description: "효과의 왼쪽된 가장자리를 따라 있는 안쪽 여백입니다."
  overload: System.Windows.Media.Effects.ShaderEffect.PaddingLeft*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "제공 된 값이 0 보다 작습니다."
  platform:
  - net462
- uid: System.Windows.Media.Effects.ShaderEffect.PaddingRight
  id: PaddingRight
  parent: System.Windows.Media.Effects.ShaderEffect
  langs:
  - csharp
  name: PaddingRight
  nameWithType: ShaderEffect.PaddingRight
  fullName: System.Windows.Media.Effects.ShaderEffect.PaddingRight
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "효과 출력 질감이 오른쪽 가장자리를 따라 해당 입력된 질감 보다 큼을 나타내는 값을 가져오거나 설정 합니다."
  syntax:
    content: protected double PaddingRight { get; set; }
    return:
      type: System.Double
      description: "효과의 오른쪽 가장자리를 따라 있는 안쪽 여백입니다."
  overload: System.Windows.Media.Effects.ShaderEffect.PaddingRight*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "제공 된 값이 0 보다 작습니다."
  platform:
  - net462
- uid: System.Windows.Media.Effects.ShaderEffect.PaddingTop
  id: PaddingTop
  parent: System.Windows.Media.Effects.ShaderEffect
  langs:
  - csharp
  name: PaddingTop
  nameWithType: ShaderEffect.PaddingTop
  fullName: System.Windows.Media.Effects.ShaderEffect.PaddingTop
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "효과 출력 질감이 위쪽 가장자리를 따라 해당 입력된 질감 보다 큼을 나타내는 값을 가져오거나 설정 합니다."
  syntax:
    content: protected double PaddingTop { get; set; }
    return:
      type: System.Double
      description: "효과의 위쪽 가장자리를 따라 있는 안쪽 여백입니다."
  overload: System.Windows.Media.Effects.ShaderEffect.PaddingTop*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "제공 된 값이 0 보다 작습니다."
  platform:
  - net462
- uid: System.Windows.Media.Effects.ShaderEffect.PixelShader
  id: PixelShader
  parent: System.Windows.Media.Effects.ShaderEffect
  langs:
  - csharp
  name: PixelShader
  nameWithType: ShaderEffect.PixelShader
  fullName: System.Windows.Media.Effects.ShaderEffect.PixelShader
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "가져오거나는 <xref href=&quot;System.Windows.Media.Effects.PixelShader&quot;> </xref> 효과 대해 사용 하도록 합니다."
  remarks: "<a name=&quot;dependencyPropertyInfo_PixelShader&quot;></a># # 종속성 속성 정보 | | |   |-|-|   | 식별자 필드 | <xref:System.Windows.Media.Effects.ShaderEffect.PixelShaderProperty>|   | 메타 데이터 속성이 `true`| None |</xref:System.Windows.Media.Effects.ShaderEffect.PixelShaderProperty>"
  syntax:
    content: protected System.Windows.Media.Effects.PixelShader PixelShader { get; set; }
    return:
      type: System.Windows.Media.Effects.PixelShader
      description: "<xref href=&quot;System.Windows.Media.Effects.PixelShader&quot;> </xref> 효과 대 한 합니다."
  overload: System.Windows.Media.Effects.ShaderEffect.PixelShader*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.ShaderEffect.PixelShaderConstantCallback(System.Int32)
  id: PixelShaderConstantCallback(System.Int32)
  parent: System.Windows.Media.Effects.ShaderEffect
  langs:
  - csharp
  name: PixelShaderConstantCallback(Int32)
  nameWithType: ShaderEffect.PixelShaderConstantCallback(Int32)
  fullName: System.Windows.Media.Effects.ShaderEffect.PixelShaderConstantCallback(Int32)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "종속성 속성 값을 픽셀 셰이더의 float 상수 레지스터와 연결합니다."
  remarks: "셰이더 상수에 대 한 종속성 속성을 등록할 때 PixelShaderConstantCallback 메서드를 사용 합니다. PixelShaderConstantCallback 메서드 생성 한 <xref:System.Windows.PropertyChangedCallback>대리자를 호출 하는 경우 종속성 속성으로 지정 된 셰이더 상수 레지스터 사이의 연결을 만듭니다 `floatRegisterIndex`.</xref:System.Windows.PropertyChangedCallback>"
  syntax:
    content: protected static System.Windows.PropertyChangedCallback PixelShaderConstantCallback (int floatRegisterIndex);
    parameters:
    - id: floatRegisterIndex
      type: System.Int32
      description: "종속성 속성과 연결 된 셰이더 레지스터의 인덱스입니다."
    return:
      type: System.Windows.PropertyChangedCallback
      description: "A <xref href=&quot;System.Windows.PropertyChangedCallback&quot;> </xref> 종속성 속성과로 지정 된 셰이더 상수 레지스터를 연결 하는 대리자 <code> floatRegisterIndex </code>합니다."
  overload: System.Windows.Media.Effects.ShaderEffect.PixelShaderConstantCallback*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "종속성 속성에 알 수 없는 형식입니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>floatRegisterIndex</code>보다 크거나 32, 또는 <code>floatRegisterIndex</code> 0 보다 작습니다."
  platform:
  - net462
- uid: System.Windows.Media.Effects.ShaderEffect.PixelShaderProperty
  id: PixelShaderProperty
  parent: System.Windows.Media.Effects.ShaderEffect
  langs:
  - csharp
  name: PixelShaderProperty
  nameWithType: ShaderEffect.PixelShaderProperty
  fullName: System.Windows.Media.Effects.ShaderEffect.PixelShaderProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "식별 된 <xref:System.Windows.Media.Effects.ShaderEffect.PixelShader*>종속성 속성입니다.</xref:System.Windows.Media.Effects.ShaderEffect.PixelShader*>"
  syntax:
    content: protected static readonly System.Windows.DependencyProperty PixelShaderProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.ShaderEffect.PixelShaderSamplerCallback(System.Int32)
  id: PixelShaderSamplerCallback(System.Int32)
  parent: System.Windows.Media.Effects.ShaderEffect
  langs:
  - csharp
  name: PixelShaderSamplerCallback(Int32)
  nameWithType: ShaderEffect.PixelShaderSamplerCallback(Int32)
  fullName: System.Windows.Media.Effects.ShaderEffect.PixelShaderSamplerCallback(Int32)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "종속성 속성 값을 픽셀 셰이더의 샘플러 레지스터를 연결합니다."
  remarks: "등록할 때 PixelShaderSamplerCallback 메서드를 사용 하 여 한 <xref:System.Windows.Media.Brush>-셰이더 샘플러에 대 한 종속성 속성을 반환 합니다.</xref:System.Windows.Media.Brush> PixelShaderSamplerCallback 메서드 생성 한 <xref:System.Windows.PropertyChangedCallback>를 호출 하면 대리자를 종속성 속성과 셰이더 샘플러 레지스터로 지정 된 관계를 만듭니다 `samplerRegisterIndex`.</xref:System.Windows.PropertyChangedCallback>"
  syntax:
    content: protected static System.Windows.PropertyChangedCallback PixelShaderSamplerCallback (int samplerRegisterIndex);
    parameters:
    - id: samplerRegisterIndex
      type: System.Int32
      description: "종속성 속성과 연결 된 셰이더 샘플러의 인덱스입니다."
    return:
      type: System.Windows.PropertyChangedCallback
      description: "A <xref href=&quot;System.Windows.PropertyChangedCallback&quot;> </xref> 종속성 속성과로 지정 된 셰이더 샘플러 레지스터를 연결 하는 대리자 <code> samplerRegisterIndex </code>합니다."
  overload: System.Windows.Media.Effects.ShaderEffect.PixelShaderSamplerCallback*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.ShaderEffect.PixelShaderSamplerCallback(System.Int32,System.Windows.Media.Effects.SamplingMode)
  id: PixelShaderSamplerCallback(System.Int32,System.Windows.Media.Effects.SamplingMode)
  parent: System.Windows.Media.Effects.ShaderEffect
  langs:
  - csharp
  name: PixelShaderSamplerCallback(Int32,SamplingMode)
  nameWithType: ShaderEffect.PixelShaderSamplerCallback(Int32,SamplingMode)
  fullName: System.Windows.Media.Effects.ShaderEffect.PixelShaderSamplerCallback(Int32,SamplingMode)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "종속성 속성 값과 픽셀 셰이더의 샘플러 레지스터를 연결 및 <xref href=&quot;System.Windows.Media.Effects.SamplingMode&quot;> </xref>합니다."
  remarks: "사용 하 여는 <xref:System.Windows.Media.Effects.ShaderEffect.RegisterPixelShaderSamplerProperty%2A>등록 하는 경우 메서드는 <xref:System.Windows.Media.Brush>-셰이더 샘플러에 대 한 종속성 속성을 반환 합니다.</xref:System.Windows.Media.Brush> </xref:System.Windows.Media.Effects.ShaderEffect.RegisterPixelShaderSamplerProperty%2A> <xref:System.Windows.Media.Effects.ShaderEffect.RegisterPixelShaderSamplerProperty%2A>메서드 구문은 <xref:System.Windows.PropertyChangedCallback>를 호출 하면 대리자를 종속성 속성과 셰이더 샘플러 레지스터로 지정 된 관계를 만듭니다 `samplerRegisterIndex`.</xref:System.Windows.PropertyChangedCallback> </xref:System.Windows.Media.Effects.ShaderEffect.RegisterPixelShaderSamplerProperty%2A>"
  syntax:
    content: protected static System.Windows.PropertyChangedCallback PixelShaderSamplerCallback (int samplerRegisterIndex, System.Windows.Media.Effects.SamplingMode samplingMode);
    parameters:
    - id: samplerRegisterIndex
      type: System.Int32
      description: "종속성 속성과 연결 된 셰이더 샘플러의 인덱스입니다."
    - id: samplingMode
      type: System.Windows.Media.Effects.SamplingMode
      description: "<xref href=&quot;System.Windows.Media.Effects.SamplingMode&quot;> </xref> 셰이더 샘플러에 대 한 합니다."
    return:
      type: System.Windows.PropertyChangedCallback
      description: "A <xref href=&quot;System.Windows.PropertyChangedCallback&quot;> </xref> 종속성 속성과로 지정 된 셰이더 샘플러 레지스터를 연결 하는 대리자 <code> samplerRegisterIndex </code>합니다."
  overload: System.Windows.Media.Effects.ShaderEffect.PixelShaderSamplerCallback*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.ShaderEffect.RegisterPixelShaderSamplerProperty(System.String,System.Type,System.Int32)
  id: RegisterPixelShaderSamplerProperty(System.String,System.Type,System.Int32)
  parent: System.Windows.Media.Effects.ShaderEffect
  langs:
  - csharp
  name: RegisterPixelShaderSamplerProperty(String,Type,Int32)
  nameWithType: ShaderEffect.RegisterPixelShaderSamplerProperty(String,Type,Int32)
  fullName: System.Windows.Media.Effects.ShaderEffect.RegisterPixelShaderSamplerProperty(String,Type,Int32)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "종속성 속성과 셰이더 샘플러 레지스터를 연결 합니다."
  syntax:
    content: protected static System.Windows.DependencyProperty RegisterPixelShaderSamplerProperty (string dpName, Type ownerType, int samplerRegisterIndex);
    parameters:
    - id: dpName
      type: System.String
      description: "종속성 속성의 이름입니다."
    - id: ownerType
      type: System.Type
      description: "종속성 속성이 있는 효과의 형식입니다."
    - id: samplerRegisterIndex
      type: System.Int32
      description: "종속성 속성과 연결 된 셰이더 샘플러의 인덱스입니다."
    return:
      type: System.Windows.DependencyProperty
      description: "종속성 속성으로 지정 된 셰이더 샘플러에 연결 된 <code> samplerRegisterIndex </code>합니다."
  overload: System.Windows.Media.Effects.ShaderEffect.RegisterPixelShaderSamplerProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.ShaderEffect.RegisterPixelShaderSamplerProperty(System.String,System.Type,System.Int32,System.Windows.Media.Effects.SamplingMode)
  id: RegisterPixelShaderSamplerProperty(System.String,System.Type,System.Int32,System.Windows.Media.Effects.SamplingMode)
  parent: System.Windows.Media.Effects.ShaderEffect
  langs:
  - csharp
  name: RegisterPixelShaderSamplerProperty(String,Type,Int32,SamplingMode)
  nameWithType: ShaderEffect.RegisterPixelShaderSamplerProperty(String,Type,Int32,SamplingMode)
  fullName: System.Windows.Media.Effects.ShaderEffect.RegisterPixelShaderSamplerProperty(String,Type,Int32,SamplingMode)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "종속성 속성과 셰이더 샘플러 레지스터를 연결 및 <xref href=&quot;System.Windows.Media.Effects.SamplingMode&quot;> </xref>합니다."
  syntax:
    content: protected static System.Windows.DependencyProperty RegisterPixelShaderSamplerProperty (string dpName, Type ownerType, int samplerRegisterIndex, System.Windows.Media.Effects.SamplingMode samplingMode);
    parameters:
    - id: dpName
      type: System.String
      description: "종속성 속성의 이름입니다."
    - id: ownerType
      type: System.Type
      description: "종속성 속성이 있는 효과의 형식입니다."
    - id: samplerRegisterIndex
      type: System.Int32
      description: "종속성 속성과 연결 된 셰이더 샘플러의 인덱스입니다."
    - id: samplingMode
      type: System.Windows.Media.Effects.SamplingMode
      description: "<xref href=&quot;System.Windows.Media.Effects.SamplingMode&quot;> </xref> 셰이더 샘플러에 대 한 합니다."
    return:
      type: System.Windows.DependencyProperty
      description: "종속성 속성으로 지정 된 셰이더 샘플러에 연결 된 <code> samplerRegisterIndex </code>합니다."
  overload: System.Windows.Media.Effects.ShaderEffect.RegisterPixelShaderSamplerProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.ShaderEffect.UpdateShaderValue(System.Windows.DependencyProperty)
  id: UpdateShaderValue(System.Windows.DependencyProperty)
  parent: System.Windows.Media.Effects.ShaderEffect
  langs:
  - csharp
  name: UpdateShaderValue(DependencyProperty)
  nameWithType: ShaderEffect.UpdateShaderValue(DependencyProperty)
  fullName: System.Windows.Media.Effects.ShaderEffect.UpdateShaderValue(DependencyProperty)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "셰이더 상수 또는 지정 된 종속성 속성에 해당 하는 샘플러를 업데이트 해야 하는 효과 알립니다."
  syntax:
    content: protected void UpdateShaderValue (System.Windows.DependencyProperty dp);
    parameters:
    - id: dp
      type: System.Windows.DependencyProperty
      description: "업데이트할 종속성 속성입니다."
  overload: System.Windows.Media.Effects.ShaderEffect.UpdateShaderValue*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Media.Effects.Effect
  isExternal: false
  name: System.Windows.Media.Effects.Effect
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Windows.Media.Effects.ShaderEffect.#ctor
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: ShaderEffect()
  nameWithType: ShaderEffect.ShaderEffect()
  fullName: System.Windows.Media.Effects.ShaderEffect.ShaderEffect()
- uid: System.Windows.Media.Effects.ShaderEffect.Clone
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: Clone()
  nameWithType: ShaderEffect.Clone()
  fullName: System.Windows.Media.Effects.ShaderEffect.Clone()
- uid: System.Windows.Media.Effects.ShaderEffect
  parent: System.Windows.Media.Effects
  isExternal: false
  name: ShaderEffect
  nameWithType: ShaderEffect
  fullName: System.Windows.Media.Effects.ShaderEffect
- uid: System.Windows.Media.Effects.ShaderEffect.CloneCore(System.Windows.Freezable)
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: CloneCore(Freezable)
  nameWithType: ShaderEffect.CloneCore(Freezable)
  fullName: System.Windows.Media.Effects.ShaderEffect.CloneCore(Freezable)
- uid: System.Windows.Freezable
  parent: System.Windows
  isExternal: false
  name: Freezable
  nameWithType: Freezable
  fullName: System.Windows.Freezable
- uid: System.Windows.Media.Effects.ShaderEffect.CloneCurrentValue
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: CloneCurrentValue()
  nameWithType: ShaderEffect.CloneCurrentValue()
  fullName: System.Windows.Media.Effects.ShaderEffect.CloneCurrentValue()
- uid: System.Windows.Media.Effects.ShaderEffect.CloneCurrentValueCore(System.Windows.Freezable)
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: CloneCurrentValueCore(Freezable)
  nameWithType: ShaderEffect.CloneCurrentValueCore(Freezable)
  fullName: System.Windows.Media.Effects.ShaderEffect.CloneCurrentValueCore(Freezable)
- uid: System.Windows.Media.Effects.ShaderEffect.CreateInstanceCore
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: CreateInstanceCore()
  nameWithType: ShaderEffect.CreateInstanceCore()
  fullName: System.Windows.Media.Effects.ShaderEffect.CreateInstanceCore()
- uid: System.Windows.Media.Effects.ShaderEffect.DdxUvDdyUvRegisterIndex
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: DdxUvDdyUvRegisterIndex
  nameWithType: ShaderEffect.DdxUvDdyUvRegisterIndex
  fullName: System.Windows.Media.Effects.ShaderEffect.DdxUvDdyUvRegisterIndex
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Media.Effects.ShaderEffect.GetAsFrozenCore(System.Windows.Freezable)
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: GetAsFrozenCore(Freezable)
  nameWithType: ShaderEffect.GetAsFrozenCore(Freezable)
  fullName: System.Windows.Media.Effects.ShaderEffect.GetAsFrozenCore(Freezable)
- uid: System.Windows.Media.Effects.ShaderEffect.GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: GetCurrentValueAsFrozenCore(Freezable)
  nameWithType: ShaderEffect.GetCurrentValueAsFrozenCore(Freezable)
  fullName: System.Windows.Media.Effects.ShaderEffect.GetCurrentValueAsFrozenCore(Freezable)
- uid: System.Windows.Media.Effects.ShaderEffect.PaddingBottom
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: PaddingBottom
  nameWithType: ShaderEffect.PaddingBottom
  fullName: System.Windows.Media.Effects.ShaderEffect.PaddingBottom
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.Media.Effects.ShaderEffect.PaddingLeft
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: PaddingLeft
  nameWithType: ShaderEffect.PaddingLeft
  fullName: System.Windows.Media.Effects.ShaderEffect.PaddingLeft
- uid: System.Windows.Media.Effects.ShaderEffect.PaddingRight
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: PaddingRight
  nameWithType: ShaderEffect.PaddingRight
  fullName: System.Windows.Media.Effects.ShaderEffect.PaddingRight
- uid: System.Windows.Media.Effects.ShaderEffect.PaddingTop
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: PaddingTop
  nameWithType: ShaderEffect.PaddingTop
  fullName: System.Windows.Media.Effects.ShaderEffect.PaddingTop
- uid: System.Windows.Media.Effects.ShaderEffect.PixelShader
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: PixelShader
  nameWithType: ShaderEffect.PixelShader
  fullName: System.Windows.Media.Effects.ShaderEffect.PixelShader
- uid: System.Windows.Media.Effects.PixelShader
  parent: System.Windows.Media.Effects
  isExternal: false
  name: PixelShader
  nameWithType: PixelShader
  fullName: System.Windows.Media.Effects.PixelShader
- uid: System.Windows.Media.Effects.ShaderEffect.PixelShaderConstantCallback(System.Int32)
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: PixelShaderConstantCallback(Int32)
  nameWithType: ShaderEffect.PixelShaderConstantCallback(Int32)
  fullName: System.Windows.Media.Effects.ShaderEffect.PixelShaderConstantCallback(Int32)
- uid: System.Windows.PropertyChangedCallback
  parent: System.Windows
  isExternal: false
  name: PropertyChangedCallback
  nameWithType: PropertyChangedCallback
  fullName: System.Windows.PropertyChangedCallback
- uid: System.Windows.Media.Effects.ShaderEffect.PixelShaderProperty
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: PixelShaderProperty
  nameWithType: ShaderEffect.PixelShaderProperty
  fullName: System.Windows.Media.Effects.ShaderEffect.PixelShaderProperty
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.Media.Effects.ShaderEffect.PixelShaderSamplerCallback(System.Int32)
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: PixelShaderSamplerCallback(Int32)
  nameWithType: ShaderEffect.PixelShaderSamplerCallback(Int32)
  fullName: System.Windows.Media.Effects.ShaderEffect.PixelShaderSamplerCallback(Int32)
- uid: System.Windows.Media.Effects.ShaderEffect.PixelShaderSamplerCallback(System.Int32,System.Windows.Media.Effects.SamplingMode)
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: PixelShaderSamplerCallback(Int32,SamplingMode)
  nameWithType: ShaderEffect.PixelShaderSamplerCallback(Int32,SamplingMode)
  fullName: System.Windows.Media.Effects.ShaderEffect.PixelShaderSamplerCallback(Int32,SamplingMode)
- uid: System.Windows.Media.Effects.SamplingMode
  parent: System.Windows.Media.Effects
  isExternal: false
  name: SamplingMode
  nameWithType: SamplingMode
  fullName: System.Windows.Media.Effects.SamplingMode
- uid: System.Windows.Media.Effects.ShaderEffect.RegisterPixelShaderSamplerProperty(System.String,System.Type,System.Int32)
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: RegisterPixelShaderSamplerProperty(String,Type,Int32)
  nameWithType: ShaderEffect.RegisterPixelShaderSamplerProperty(String,Type,Int32)
  fullName: System.Windows.Media.Effects.ShaderEffect.RegisterPixelShaderSamplerProperty(String,Type,Int32)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Windows.Media.Effects.ShaderEffect.RegisterPixelShaderSamplerProperty(System.String,System.Type,System.Int32,System.Windows.Media.Effects.SamplingMode)
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: RegisterPixelShaderSamplerProperty(String,Type,Int32,SamplingMode)
  nameWithType: ShaderEffect.RegisterPixelShaderSamplerProperty(String,Type,Int32,SamplingMode)
  fullName: System.Windows.Media.Effects.ShaderEffect.RegisterPixelShaderSamplerProperty(String,Type,Int32,SamplingMode)
- uid: System.Windows.Media.Effects.ShaderEffect.UpdateShaderValue(System.Windows.DependencyProperty)
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: UpdateShaderValue(DependencyProperty)
  nameWithType: ShaderEffect.UpdateShaderValue(DependencyProperty)
  fullName: System.Windows.Media.Effects.ShaderEffect.UpdateShaderValue(DependencyProperty)
- uid: System.Windows.Media.Effects.ShaderEffect.#ctor*
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: ShaderEffect
  nameWithType: ShaderEffect.ShaderEffect
- uid: System.Windows.Media.Effects.ShaderEffect.Clone*
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: Clone
  nameWithType: ShaderEffect.Clone
- uid: System.Windows.Media.Effects.ShaderEffect.CloneCore*
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: CloneCore
  nameWithType: ShaderEffect.CloneCore
- uid: System.Windows.Media.Effects.ShaderEffect.CloneCurrentValue*
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: CloneCurrentValue
  nameWithType: ShaderEffect.CloneCurrentValue
- uid: System.Windows.Media.Effects.ShaderEffect.CloneCurrentValueCore*
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: CloneCurrentValueCore
  nameWithType: ShaderEffect.CloneCurrentValueCore
- uid: System.Windows.Media.Effects.ShaderEffect.CreateInstanceCore*
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: CreateInstanceCore
  nameWithType: ShaderEffect.CreateInstanceCore
- uid: System.Windows.Media.Effects.ShaderEffect.DdxUvDdyUvRegisterIndex*
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: DdxUvDdyUvRegisterIndex
  nameWithType: ShaderEffect.DdxUvDdyUvRegisterIndex
- uid: System.Windows.Media.Effects.ShaderEffect.GetAsFrozenCore*
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: GetAsFrozenCore
  nameWithType: ShaderEffect.GetAsFrozenCore
- uid: System.Windows.Media.Effects.ShaderEffect.GetCurrentValueAsFrozenCore*
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: GetCurrentValueAsFrozenCore
  nameWithType: ShaderEffect.GetCurrentValueAsFrozenCore
- uid: System.Windows.Media.Effects.ShaderEffect.PaddingBottom*
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: PaddingBottom
  nameWithType: ShaderEffect.PaddingBottom
- uid: System.Windows.Media.Effects.ShaderEffect.PaddingLeft*
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: PaddingLeft
  nameWithType: ShaderEffect.PaddingLeft
- uid: System.Windows.Media.Effects.ShaderEffect.PaddingRight*
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: PaddingRight
  nameWithType: ShaderEffect.PaddingRight
- uid: System.Windows.Media.Effects.ShaderEffect.PaddingTop*
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: PaddingTop
  nameWithType: ShaderEffect.PaddingTop
- uid: System.Windows.Media.Effects.ShaderEffect.PixelShader*
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: PixelShader
  nameWithType: ShaderEffect.PixelShader
- uid: System.Windows.Media.Effects.ShaderEffect.PixelShaderConstantCallback*
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: PixelShaderConstantCallback
  nameWithType: ShaderEffect.PixelShaderConstantCallback
- uid: System.Windows.Media.Effects.ShaderEffect.PixelShaderSamplerCallback*
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: PixelShaderSamplerCallback
  nameWithType: ShaderEffect.PixelShaderSamplerCallback
- uid: System.Windows.Media.Effects.ShaderEffect.RegisterPixelShaderSamplerProperty*
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: RegisterPixelShaderSamplerProperty
  nameWithType: ShaderEffect.RegisterPixelShaderSamplerProperty
- uid: System.Windows.Media.Effects.ShaderEffect.UpdateShaderValue*
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: UpdateShaderValue
  nameWithType: ShaderEffect.UpdateShaderValue
