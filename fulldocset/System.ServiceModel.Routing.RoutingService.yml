### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Routing.RoutingService
  id: RoutingService
  children:
  - System.ServiceModel.Routing.RoutingService.System#IDisposable#Dispose
  - System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IDuplexSessionRouter#BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  - System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IDuplexSessionRouter#EndProcessMessage(System.IAsyncResult)
  - System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IRequestReplyRouter#BeginProcessRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  - System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IRequestReplyRouter#EndProcessRequest(System.IAsyncResult)
  - System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexDatagramRouter#BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  - System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexDatagramRouter#EndProcessMessage(System.IAsyncResult)
  - System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexSessionRouter#BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  - System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexSessionRouter#EndProcessMessage(System.IAsyncResult)
  langs:
  - csharp
  name: RoutingService
  nameWithType: RoutingService
  fullName: System.ServiceModel.Routing.RoutingService
  type: Class
  summary: "필터 조건에 기반 하 여 끝점 간의 메시지 라우팅을 담당 하는 라우팅 서비스를 정의 합니다."
  syntax:
    content: >-
      [System.ServiceModel.Activation.AspNetCompatibilityRequirements(RequirementsMode=System.ServiceModel.Activation.AspNetCompatibilityRequirementsMode.Allowed)]

      [System.ServiceModel.ServiceBehavior(AddressFilterMode=System.ServiceModel.AddressFilterMode.Any, InstanceContextMode=System.ServiceModel.InstanceContextMode.PerSession, UseSynchronizationContext=false, ValidateMustUnderstand=false)]

      public sealed class RoutingService : IDisposable, System.ServiceModel.Routing.IDuplexSessionRouter, System.ServiceModel.Routing.IRequestReplyRouter, System.ServiceModel.Routing.ISimplexDatagramRouter, System.ServiceModel.Routing.ISimplexSessionRouter
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  - System.ServiceModel.Routing.IDuplexSessionRouter
  - System.ServiceModel.Routing.IRequestReplyRouter
  - System.ServiceModel.Routing.ISimplexDatagramRouter
  - System.ServiceModel.Routing.ISimplexSessionRouter
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Routing.RoutingService.System#IDisposable#Dispose
  id: System#IDisposable#Dispose
  isEii: true
  parent: System.ServiceModel.Routing.RoutingService
  langs:
  - csharp
  name: System.IDisposable.Dispose()
  nameWithType: RoutingService.System.IDisposable.Dispose()
  fullName: System.ServiceModel.Routing.RoutingService.System.IDisposable.Dispose()
  type: Method
  assemblies:
  - System.ServiceModel.Routing
  namespace: System.ServiceModel.Routing
  summary: "관련 확보, 해제 또는 관리 되지 않는 리소스를 다시 설정 된 응용 프로그램 정의 작업을 수행 합니다."
  syntax:
    content: void IDisposable.Dispose ();
    parameters: []
  overload: System.ServiceModel.Routing.RoutingService.System#IDisposable#Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IDuplexSessionRouter#BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  id: System#ServiceModel#Routing#IDuplexSessionRouter#BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  isEii: true
  parent: System.ServiceModel.Routing.RoutingService
  langs:
  - csharp
  name: System.ServiceModel.Routing.IDuplexSessionRouter.BeginProcessMessage(Message,AsyncCallback,Object)
  nameWithType: RoutingService.System.ServiceModel.Routing.IDuplexSessionRouter.BeginProcessMessage(Message,AsyncCallback,Object)
  fullName: System.ServiceModel.Routing.RoutingService.System.ServiceModel.Routing.IDuplexSessionRouter.BeginProcessMessage(Message,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel.Routing
  namespace: System.ServiceModel.Routing
  summary: "메시지의 비동기 처리를 시작합니다."
  remarks: "IDuplexSessionRouter 계약을 사용 하 여에 대 한 자세한 내용은 <xref:System.ServiceModel.Routing.IDuplexSessionRouter>.</xref:System.ServiceModel.Routing.IDuplexSessionRouter> 을 참조 하십시오."
  syntax:
    content: IAsyncResult IDuplexSessionRouter.BeginProcessMessage (System.ServiceModel.Channels.Message message, AsyncCallback callback, object state);
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "<xref:System.ServiceModel.Channels.Message>처리할.</xref:System.ServiceModel.Channels.Message>"
    - id: callback
      type: System.AsyncCallback
      description: "<xref:System.AsyncCallback>메시지 처리가 완료 될 때 호출 되는 대리자입니다.</xref:System.AsyncCallback>"
    - id: state
      type: System.Object
      description: "콜백 프로시저에 전달 되는 사용자 정의 상태 개체입니다."
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>를 호출할 때 두,이 값이 필요 하거나 결과 대기 하거나 폴링하는 데 사용할 수 있는 &lt;xref:System.ServiceModel.Routing.RoutingService.System%23ServiceModel%23Routing%23IDuplexSessionRouter%23EndProcessMessage%2A&gt;.</xref:System.IAsyncResult>"
  overload: System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IDuplexSessionRouter#BeginProcessMessage*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IDuplexSessionRouter#EndProcessMessage(System.IAsyncResult)
  id: System#ServiceModel#Routing#IDuplexSessionRouter#EndProcessMessage(System.IAsyncResult)
  isEii: true
  parent: System.ServiceModel.Routing.RoutingService
  langs:
  - csharp
  name: System.ServiceModel.Routing.IDuplexSessionRouter.EndProcessMessage(IAsyncResult)
  nameWithType: RoutingService.System.ServiceModel.Routing.IDuplexSessionRouter.EndProcessMessage(IAsyncResult)
  fullName: System.ServiceModel.Routing.RoutingService.System.ServiceModel.Routing.IDuplexSessionRouter.EndProcessMessage(IAsyncResult)
  type: Method
  assemblies:
  - System.ServiceModel.Routing
  namespace: System.ServiceModel.Routing
  summary: "메시지 처리의 비동기 실행을 완료합니다."
  remarks: "IDuplexSessionRouter 계약을 사용 하 여에 대 한 자세한 내용은 <xref:System.ServiceModel.Routing.IDuplexSessionRouter>.</xref:System.ServiceModel.Routing.IDuplexSessionRouter> 을 참조 하십시오."
  syntax:
    content: void IDuplexSessionRouter.EndProcessMessage (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>에 대 한 호출에서 반환 된 &lt;xref:System.ServiceModel.Routing.RoutingService.System%23ServiceModel%23Routing%23IDuplexSessionRouter%23BeginProcessMessage%2A&gt; </xref:System.IAsyncResult>"
  overload: System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IDuplexSessionRouter#EndProcessMessage*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IRequestReplyRouter#BeginProcessRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  id: System#ServiceModel#Routing#IRequestReplyRouter#BeginProcessRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  isEii: true
  parent: System.ServiceModel.Routing.RoutingService
  langs:
  - csharp
  name: System.ServiceModel.Routing.IRequestReplyRouter.BeginProcessRequest(Message,AsyncCallback,Object)
  nameWithType: RoutingService.System.ServiceModel.Routing.IRequestReplyRouter.BeginProcessRequest(Message,AsyncCallback,Object)
  fullName: System.ServiceModel.Routing.RoutingService.System.ServiceModel.Routing.IRequestReplyRouter.BeginProcessRequest(Message,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel.Routing
  namespace: System.ServiceModel.Routing
  summary: "메시지의 비동기 처리를 시작 합니다."
  remarks: "IRequestReplyRouter 계약을 사용 하 여에 대 한 자세한 내용은 <xref:System.ServiceModel.Routing.IRequestReplyRouter>.</xref:System.ServiceModel.Routing.IRequestReplyRouter> 을 참조 하십시오."
  syntax:
    content: IAsyncResult IRequestReplyRouter.BeginProcessRequest (System.ServiceModel.Channels.Message message, AsyncCallback callback, object state);
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "<xref:System.ServiceModel.Channels.Message>처리할.</xref:System.ServiceModel.Channels.Message>"
    - id: callback
      type: System.AsyncCallback
      description: "<xref:System.AsyncCallback>메시지 처리가 완료 될 때 호출 되는 대리자입니다.</xref:System.AsyncCallback>"
    - id: state
      type: System.Object
      description: "콜백 프로시저에 전달 되는 사용자 정의 상태 개체입니다."
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>를 호출할 때 두,이 값이 필요 하거나 결과 대기 하거나 폴링하는 데 사용할 수 있는 &lt;xref:System.ServiceModel.Routing.RoutingService.System%23ServiceModel%23Routing%23IRequestReplyRouter%23EndProcessRequest%2A&gt;.</xref:System.IAsyncResult>"
  overload: System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IRequestReplyRouter#BeginProcessRequest*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IRequestReplyRouter#EndProcessRequest(System.IAsyncResult)
  id: System#ServiceModel#Routing#IRequestReplyRouter#EndProcessRequest(System.IAsyncResult)
  isEii: true
  parent: System.ServiceModel.Routing.RoutingService
  langs:
  - csharp
  name: System.ServiceModel.Routing.IRequestReplyRouter.EndProcessRequest(IAsyncResult)
  nameWithType: RoutingService.System.ServiceModel.Routing.IRequestReplyRouter.EndProcessRequest(IAsyncResult)
  fullName: System.ServiceModel.Routing.RoutingService.System.ServiceModel.Routing.IRequestReplyRouter.EndProcessRequest(IAsyncResult)
  type: Method
  assemblies:
  - System.ServiceModel.Routing
  namespace: System.ServiceModel.Routing
  summary: "메시지 처리의 비동기 실행을 완료 합니다."
  remarks: "IRequestReplyRouter 계약을 사용 하 여에 대 한 자세한 내용은 <xref:System.ServiceModel.Routing.IRequestReplyRouter>.</xref:System.ServiceModel.Routing.IRequestReplyRouter> 을 참조 하십시오."
  syntax:
    content: System.ServiceModel.Channels.Message IRequestReplyRouter.EndProcessRequest (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>에 대 한 호출에서 반환 된 &lt;xref:System.ServiceModel.Routing.RoutingService.System%23ServiceModel%23Routing%23IRequestReplyRouter%23BeginProcessRequest%2A&gt; </xref:System.IAsyncResult>"
    return:
      type: System.ServiceModel.Channels.Message
      description: "A <xref:System.ServiceModel.Channels.Message>회신이 들어 있는.</xref:System.ServiceModel.Channels.Message>"
  overload: System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IRequestReplyRouter#EndProcessRequest*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexDatagramRouter#BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  id: System#ServiceModel#Routing#ISimplexDatagramRouter#BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  isEii: true
  parent: System.ServiceModel.Routing.RoutingService
  langs:
  - csharp
  name: System.ServiceModel.Routing.ISimplexDatagramRouter.BeginProcessMessage(Message,AsyncCallback,Object)
  nameWithType: RoutingService.System.ServiceModel.Routing.ISimplexDatagramRouter.BeginProcessMessage(Message,AsyncCallback,Object)
  fullName: System.ServiceModel.Routing.RoutingService.System.ServiceModel.Routing.ISimplexDatagramRouter.BeginProcessMessage(Message,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel.Routing
  namespace: System.ServiceModel.Routing
  summary: "메시지의 비동기 처리를 시작 합니다."
  remarks: "ISimplexDatagramRouter 계약을 사용 하 여에 대 한 자세한 내용은 <xref:System.ServiceModel.Routing.ISimplexDatagramRouter>.</xref:System.ServiceModel.Routing.ISimplexDatagramRouter> 을 참조 하십시오."
  syntax:
    content: IAsyncResult ISimplexDatagramRouter.BeginProcessMessage (System.ServiceModel.Channels.Message message, AsyncCallback callback, object state);
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "<xref:System.ServiceModel.Channels.Message>처리할.</xref:System.ServiceModel.Channels.Message>"
    - id: callback
      type: System.AsyncCallback
      description: "<xref:System.AsyncCallback>메시지 처리가 완료 될 때 호출 되는 대리자입니다.</xref:System.AsyncCallback>"
    - id: state
      type: System.Object
      description: "콜백 프로시저에 전달 되는 사용자 정의 상태 개체입니다."
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>를 호출할 때 두,이 값이 필요 하거나 결과 대기 하거나 폴링하는 데 사용할 수 있는 &lt;xref:System.ServiceModel.Routing.RoutingService.System%23ServiceModel%23Routing%23ISimplexDatagramRouter%23EndProcessMessage%2A&gt;.</xref:System.IAsyncResult>"
  overload: System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexDatagramRouter#BeginProcessMessage*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexDatagramRouter#EndProcessMessage(System.IAsyncResult)
  id: System#ServiceModel#Routing#ISimplexDatagramRouter#EndProcessMessage(System.IAsyncResult)
  isEii: true
  parent: System.ServiceModel.Routing.RoutingService
  langs:
  - csharp
  name: System.ServiceModel.Routing.ISimplexDatagramRouter.EndProcessMessage(IAsyncResult)
  nameWithType: RoutingService.System.ServiceModel.Routing.ISimplexDatagramRouter.EndProcessMessage(IAsyncResult)
  fullName: System.ServiceModel.Routing.RoutingService.System.ServiceModel.Routing.ISimplexDatagramRouter.EndProcessMessage(IAsyncResult)
  type: Method
  assemblies:
  - System.ServiceModel.Routing
  namespace: System.ServiceModel.Routing
  summary: "메시지 처리의 비동기 실행을 완료 합니다."
  remarks: "ISimplexDatagramRouter 계약을 사용 하 여에 대 한 자세한 내용은 <xref:System.ServiceModel.Routing.ISimplexDatagramRouter>.</xref:System.ServiceModel.Routing.ISimplexDatagramRouter> 을 참조 하십시오."
  syntax:
    content: void ISimplexDatagramRouter.EndProcessMessage (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>에 대 한 호출에서 반환 된 &lt;xref:System.ServiceModel.Routing.RoutingService.System%23ServiceModel%23Routing%23ISimplexDatagramRouter%23BeginProcessMessage%2A&gt;.</xref:System.IAsyncResult>"
  overload: System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexDatagramRouter#EndProcessMessage*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexSessionRouter#BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  id: System#ServiceModel#Routing#ISimplexSessionRouter#BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  isEii: true
  parent: System.ServiceModel.Routing.RoutingService
  langs:
  - csharp
  name: System.ServiceModel.Routing.ISimplexSessionRouter.BeginProcessMessage(Message,AsyncCallback,Object)
  nameWithType: RoutingService.System.ServiceModel.Routing.ISimplexSessionRouter.BeginProcessMessage(Message,AsyncCallback,Object)
  fullName: System.ServiceModel.Routing.RoutingService.System.ServiceModel.Routing.ISimplexSessionRouter.BeginProcessMessage(Message,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel.Routing
  namespace: System.ServiceModel.Routing
  summary: "메시지의 비동기 처리를 시작 합니다."
  remarks: "ISimplexSessionRouter 계약을 사용 하 여에 대 한 자세한 내용은 <xref:System.ServiceModel.Routing.ISimplexSessionRouter>.</xref:System.ServiceModel.Routing.ISimplexSessionRouter> 을 참조 하십시오."
  syntax:
    content: IAsyncResult ISimplexSessionRouter.BeginProcessMessage (System.ServiceModel.Channels.Message message, AsyncCallback callback, object state);
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "<xref:System.ServiceModel.Channels.Message>처리할.</xref:System.ServiceModel.Channels.Message>"
    - id: callback
      type: System.AsyncCallback
      description: "<xref:System.AsyncCallback>메시지 처리가 완료 될 때 호출 되는 대리자입니다.</xref:System.AsyncCallback>"
    - id: state
      type: System.Object
      description: "콜백 프로시저에 전달 되는 사용자 정의 상태 개체입니다."
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>를 호출할 때 두,이 값이 필요 하거나 결과 대기 하거나 폴링하는 데 사용할 수 있는 &lt;xref:System.ServiceModel.Routing.RoutingService.System%23ServiceModel%23Routing%23ISimplexSessionRouter%23EndProcessMessage%2A&gt;.</xref:System.IAsyncResult>"
  overload: System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexSessionRouter#BeginProcessMessage*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexSessionRouter#EndProcessMessage(System.IAsyncResult)
  id: System#ServiceModel#Routing#ISimplexSessionRouter#EndProcessMessage(System.IAsyncResult)
  isEii: true
  parent: System.ServiceModel.Routing.RoutingService
  langs:
  - csharp
  name: System.ServiceModel.Routing.ISimplexSessionRouter.EndProcessMessage(IAsyncResult)
  nameWithType: RoutingService.System.ServiceModel.Routing.ISimplexSessionRouter.EndProcessMessage(IAsyncResult)
  fullName: System.ServiceModel.Routing.RoutingService.System.ServiceModel.Routing.ISimplexSessionRouter.EndProcessMessage(IAsyncResult)
  type: Method
  assemblies:
  - System.ServiceModel.Routing
  namespace: System.ServiceModel.Routing
  summary: "메시지 처리의 비동기 실행을 완료 합니다."
  remarks: "ISimplexSessionRouter 계약을 사용 하 여에 대 한 자세한 내용은 <xref:System.ServiceModel.Routing.ISimplexSessionRouter>.</xref:System.ServiceModel.Routing.ISimplexSessionRouter> 을 참조 하십시오."
  syntax:
    content: void ISimplexSessionRouter.EndProcessMessage (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>에 대 한 호출에서 반환 된 &lt;xref:System.ServiceModel.Routing.RoutingService.System%23ServiceModel%23Routing%23ISimplexSessionRouter%23BeginProcessMessage%2A&gt;.</xref:System.IAsyncResult>"
  overload: System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexSessionRouter#EndProcessMessage*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ServiceModel.Routing.RoutingService.System#IDisposable#Dispose
  parent: System.ServiceModel.Routing.RoutingService
  isExternal: false
  name: System.IDisposable.Dispose()
  nameWithType: RoutingService.System.IDisposable.Dispose()
  fullName: System.ServiceModel.Routing.RoutingService.System.IDisposable.Dispose()
- uid: System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IDuplexSessionRouter#BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Routing.RoutingService
  isExternal: false
  name: System.ServiceModel.Routing.IDuplexSessionRouter.BeginProcessMessage(Message,AsyncCallback,Object)
  nameWithType: RoutingService.System.ServiceModel.Routing.IDuplexSessionRouter.BeginProcessMessage(Message,AsyncCallback,Object)
  fullName: System.ServiceModel.Routing.RoutingService.System.ServiceModel.Routing.IDuplexSessionRouter.BeginProcessMessage(Message,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.ServiceModel.Channels.Message
  parent: System.ServiceModel.Channels
  isExternal: true
  name: Message
  nameWithType: Message
  fullName: System.ServiceModel.Channels.Message
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IDuplexSessionRouter#EndProcessMessage(System.IAsyncResult)
  parent: System.ServiceModel.Routing.RoutingService
  isExternal: false
  name: System.ServiceModel.Routing.IDuplexSessionRouter.EndProcessMessage(IAsyncResult)
  nameWithType: RoutingService.System.ServiceModel.Routing.IDuplexSessionRouter.EndProcessMessage(IAsyncResult)
  fullName: System.ServiceModel.Routing.RoutingService.System.ServiceModel.Routing.IDuplexSessionRouter.EndProcessMessage(IAsyncResult)
- uid: System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IRequestReplyRouter#BeginProcessRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Routing.RoutingService
  isExternal: false
  name: System.ServiceModel.Routing.IRequestReplyRouter.BeginProcessRequest(Message,AsyncCallback,Object)
  nameWithType: RoutingService.System.ServiceModel.Routing.IRequestReplyRouter.BeginProcessRequest(Message,AsyncCallback,Object)
  fullName: System.ServiceModel.Routing.RoutingService.System.ServiceModel.Routing.IRequestReplyRouter.BeginProcessRequest(Message,AsyncCallback,Object)
- uid: System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IRequestReplyRouter#EndProcessRequest(System.IAsyncResult)
  parent: System.ServiceModel.Routing.RoutingService
  isExternal: false
  name: System.ServiceModel.Routing.IRequestReplyRouter.EndProcessRequest(IAsyncResult)
  nameWithType: RoutingService.System.ServiceModel.Routing.IRequestReplyRouter.EndProcessRequest(IAsyncResult)
  fullName: System.ServiceModel.Routing.RoutingService.System.ServiceModel.Routing.IRequestReplyRouter.EndProcessRequest(IAsyncResult)
- uid: System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexDatagramRouter#BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Routing.RoutingService
  isExternal: false
  name: System.ServiceModel.Routing.ISimplexDatagramRouter.BeginProcessMessage(Message,AsyncCallback,Object)
  nameWithType: RoutingService.System.ServiceModel.Routing.ISimplexDatagramRouter.BeginProcessMessage(Message,AsyncCallback,Object)
  fullName: System.ServiceModel.Routing.RoutingService.System.ServiceModel.Routing.ISimplexDatagramRouter.BeginProcessMessage(Message,AsyncCallback,Object)
- uid: System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexDatagramRouter#EndProcessMessage(System.IAsyncResult)
  parent: System.ServiceModel.Routing.RoutingService
  isExternal: false
  name: System.ServiceModel.Routing.ISimplexDatagramRouter.EndProcessMessage(IAsyncResult)
  nameWithType: RoutingService.System.ServiceModel.Routing.ISimplexDatagramRouter.EndProcessMessage(IAsyncResult)
  fullName: System.ServiceModel.Routing.RoutingService.System.ServiceModel.Routing.ISimplexDatagramRouter.EndProcessMessage(IAsyncResult)
- uid: System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexSessionRouter#BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Routing.RoutingService
  isExternal: false
  name: System.ServiceModel.Routing.ISimplexSessionRouter.BeginProcessMessage(Message,AsyncCallback,Object)
  nameWithType: RoutingService.System.ServiceModel.Routing.ISimplexSessionRouter.BeginProcessMessage(Message,AsyncCallback,Object)
  fullName: System.ServiceModel.Routing.RoutingService.System.ServiceModel.Routing.ISimplexSessionRouter.BeginProcessMessage(Message,AsyncCallback,Object)
- uid: System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexSessionRouter#EndProcessMessage(System.IAsyncResult)
  parent: System.ServiceModel.Routing.RoutingService
  isExternal: false
  name: System.ServiceModel.Routing.ISimplexSessionRouter.EndProcessMessage(IAsyncResult)
  nameWithType: RoutingService.System.ServiceModel.Routing.ISimplexSessionRouter.EndProcessMessage(IAsyncResult)
  fullName: System.ServiceModel.Routing.RoutingService.System.ServiceModel.Routing.ISimplexSessionRouter.EndProcessMessage(IAsyncResult)
- uid: System.ServiceModel.Routing.RoutingService.System#IDisposable#Dispose*
  parent: System.ServiceModel.Routing.RoutingService
  isExternal: false
  name: System.IDisposable.Dispose
  nameWithType: RoutingService.System.IDisposable.Dispose
- uid: System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IDuplexSessionRouter#BeginProcessMessage*
  parent: System.ServiceModel.Routing.RoutingService
  isExternal: false
  name: System.ServiceModel.Routing.IDuplexSessionRouter.BeginProcessMessage
  nameWithType: RoutingService.System.ServiceModel.Routing.IDuplexSessionRouter.BeginProcessMessage
- uid: System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IDuplexSessionRouter#EndProcessMessage*
  parent: System.ServiceModel.Routing.RoutingService
  isExternal: false
  name: System.ServiceModel.Routing.IDuplexSessionRouter.EndProcessMessage
  nameWithType: RoutingService.System.ServiceModel.Routing.IDuplexSessionRouter.EndProcessMessage
- uid: System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IRequestReplyRouter#BeginProcessRequest*
  parent: System.ServiceModel.Routing.RoutingService
  isExternal: false
  name: System.ServiceModel.Routing.IRequestReplyRouter.BeginProcessRequest
  nameWithType: RoutingService.System.ServiceModel.Routing.IRequestReplyRouter.BeginProcessRequest
- uid: System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IRequestReplyRouter#EndProcessRequest*
  parent: System.ServiceModel.Routing.RoutingService
  isExternal: false
  name: System.ServiceModel.Routing.IRequestReplyRouter.EndProcessRequest
  nameWithType: RoutingService.System.ServiceModel.Routing.IRequestReplyRouter.EndProcessRequest
- uid: System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexDatagramRouter#BeginProcessMessage*
  parent: System.ServiceModel.Routing.RoutingService
  isExternal: false
  name: System.ServiceModel.Routing.ISimplexDatagramRouter.BeginProcessMessage
  nameWithType: RoutingService.System.ServiceModel.Routing.ISimplexDatagramRouter.BeginProcessMessage
- uid: System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexDatagramRouter#EndProcessMessage*
  parent: System.ServiceModel.Routing.RoutingService
  isExternal: false
  name: System.ServiceModel.Routing.ISimplexDatagramRouter.EndProcessMessage
  nameWithType: RoutingService.System.ServiceModel.Routing.ISimplexDatagramRouter.EndProcessMessage
- uid: System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexSessionRouter#BeginProcessMessage*
  parent: System.ServiceModel.Routing.RoutingService
  isExternal: false
  name: System.ServiceModel.Routing.ISimplexSessionRouter.BeginProcessMessage
  nameWithType: RoutingService.System.ServiceModel.Routing.ISimplexSessionRouter.BeginProcessMessage
- uid: System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexSessionRouter#EndProcessMessage*
  parent: System.ServiceModel.Routing.RoutingService
  isExternal: false
  name: System.ServiceModel.Routing.ISimplexSessionRouter.EndProcessMessage
  nameWithType: RoutingService.System.ServiceModel.Routing.ISimplexSessionRouter.EndProcessMessage
