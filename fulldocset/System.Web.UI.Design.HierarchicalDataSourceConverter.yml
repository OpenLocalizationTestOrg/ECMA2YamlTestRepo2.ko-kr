### YamlMime:ManagedReference
items:
- uid: System.Web.UI.Design.HierarchicalDataSourceConverter
  id: HierarchicalDataSourceConverter
  children:
  - System.Web.UI.Design.HierarchicalDataSourceConverter.#ctor
  - System.Web.UI.Design.HierarchicalDataSourceConverter.IsValidDataSource(System.ComponentModel.IComponent)
  langs:
  - csharp
  name: HierarchicalDataSourceConverter
  nameWithType: HierarchicalDataSourceConverter
  fullName: System.Web.UI.Design.HierarchicalDataSourceConverter
  type: Class
  summary: "현재 구성 요소에 액세스할 수 있는 계층적 데이터 원본 목록을 검색할 수 있는 형식 변환기를 제공 합니다."
  remarks: "HierarchicalDataSourceConverter 클래스는 현재 디자인 타임 구성 요소에 액세스할 수 있는 계층적 데이터 원본의 목록을 검색 하는 데 사용할 수 있는 메서드를 제공 합니다.       원본 데이터의 목록에 표시 되는 값을 제공 하려면 Microsoft Visual Studio에서 HierarchicalDataSourceConverter 형식 변환기가 사용 된 **속성** 창.      > [!CAUTION] >는 형식 변환기를 직접 액세스 하지 마십시오. 대신, 적절 한 변환기 <xref:System.ComponentModel.TypeDescriptor>클래스</xref:System.ComponentModel.TypeDescriptor> 를 사용 하 여 호출 자세한 내용은 <xref:System.ComponentModel.TypeConverter>.</xref:System.ComponentModel.TypeConverter> 예제를 참조 하세요.       형식 변환기에 대 한 자세한 내용은 참조는 <xref:System.ComponentModel.TypeConverter>기본 클래스 및 [하는 방법: 형식 변환기 구현](~/add/includes/ajax-current-ext-md.md).</xref:System.ComponentModel.TypeConverter>"
  example:
  - "The following code example demonstrates how to associate a HierarchicalDataSourceConverter with a hierarchical data source property that is contained within a custom control.  \n  \n [!code-cs[HierarchicalDataSourceConverter#1](~/add/codesnippet/csharp/t-system.web.ui.design.h_0_1.cs)]"
  syntax:
    content: 'public class HierarchicalDataSourceConverter : System.Web.UI.Design.DataSourceConverter'
  inheritance:
  - System.Object
  - System.ComponentModel.TypeConverter
  - System.Web.UI.Design.DataSourceConverter
  implements: []
  inheritedMembers:
  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)
  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)
  - System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)
  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)
  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  - System.ComponentModel.TypeConverter.GetProperties(System.Object)
  - System.ComponentModel.TypeConverter.GetPropertiesSupported
  - System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValues
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported
  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.IsValid(System.Object)
  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])
  - System.Web.UI.Design.DataSourceConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.Web.UI.Design.DataSourceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.Web.UI.Design.DataSourceConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  - System.Web.UI.Design.DataSourceConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  - System.Web.UI.Design.DataSourceConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  platform:
  - net462
- uid: System.Web.UI.Design.HierarchicalDataSourceConverter.#ctor
  id: '#ctor'
  parent: System.Web.UI.Design.HierarchicalDataSourceConverter
  langs:
  - csharp
  name: HierarchicalDataSourceConverter()
  nameWithType: HierarchicalDataSourceConverter.HierarchicalDataSourceConverter()
  fullName: System.Web.UI.Design.HierarchicalDataSourceConverter.HierarchicalDataSourceConverter()
  type: Constructor
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.UI.Design.HierarchicalDataSourceConverter&quot;> </xref> 클래스입니다."
  syntax:
    content: public HierarchicalDataSourceConverter ();
    parameters: []
  overload: System.Web.UI.Design.HierarchicalDataSourceConverter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.HierarchicalDataSourceConverter.IsValidDataSource(System.ComponentModel.IComponent)
  id: IsValidDataSource(System.ComponentModel.IComponent)
  parent: System.Web.UI.Design.HierarchicalDataSourceConverter
  langs:
  - csharp
  name: IsValidDataSource(IComponent)
  nameWithType: HierarchicalDataSourceConverter.IsValidDataSource(IComponent)
  fullName: System.Web.UI.Design.HierarchicalDataSourceConverter.IsValidDataSource(IComponent)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "이 변환기에 대 한 올바른 데이터 원본이 지정된 된 구성 요소 인지를 나타냅니다."
  remarks: "<xref:System.Web.UI.Design.DataSourceConverter.GetStandardValues%2A>메서드 IsValidDataSource 메서드를 사용 하 여 표준 액세스할 수 있는 데이터 원본으로 사용할 수 있는 구성 요소를 결정 합니다.</xref:System.Web.UI.Design.DataSourceConverter.GetStandardValues%2A> 에 대 한는 <xref:System.Web.UI.Design.HierarchicalDataSourceConverter>클래스, 올바른 데이터 소스는 구현 하는 구성 요소는 <xref:System.Web.UI.IHierarchicalEnumerable>인터페이스.</xref:System.Web.UI.IHierarchicalEnumerable> </xref:System.Web.UI.Design.HierarchicalDataSourceConverter>"
  syntax:
    content: protected override bool IsValidDataSource (System.ComponentModel.IComponent component);
    parameters:
    - id: component
      type: System.ComponentModel.IComponent
      description: "유효한 데이터 원본으로 확인 하려면 구성 요소입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>component</code> implements <xref href=&quot;System.Web.UI.IHierarchicalEnumerable&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.Design.HierarchicalDataSourceConverter.IsValidDataSource*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.Design.DataSourceConverter
  isExternal: false
  name: System.Web.UI.Design.DataSourceConverter
- uid: System.Web.UI.Design.HierarchicalDataSourceConverter.#ctor
  parent: System.Web.UI.Design.HierarchicalDataSourceConverter
  isExternal: false
  name: HierarchicalDataSourceConverter()
  nameWithType: HierarchicalDataSourceConverter.HierarchicalDataSourceConverter()
  fullName: System.Web.UI.Design.HierarchicalDataSourceConverter.HierarchicalDataSourceConverter()
- uid: System.Web.UI.Design.HierarchicalDataSourceConverter.IsValidDataSource(System.ComponentModel.IComponent)
  parent: System.Web.UI.Design.HierarchicalDataSourceConverter
  isExternal: false
  name: IsValidDataSource(IComponent)
  nameWithType: HierarchicalDataSourceConverter.IsValidDataSource(IComponent)
  fullName: System.Web.UI.Design.HierarchicalDataSourceConverter.IsValidDataSource(IComponent)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.IComponent
  parent: System.ComponentModel
  isExternal: false
  name: IComponent
  nameWithType: IComponent
  fullName: System.ComponentModel.IComponent
- uid: System.Web.UI.Design.HierarchicalDataSourceConverter.#ctor*
  parent: System.Web.UI.Design.HierarchicalDataSourceConverter
  isExternal: false
  name: HierarchicalDataSourceConverter
  nameWithType: HierarchicalDataSourceConverter.HierarchicalDataSourceConverter
- uid: System.Web.UI.Design.HierarchicalDataSourceConverter.IsValidDataSource*
  parent: System.Web.UI.Design.HierarchicalDataSourceConverter
  isExternal: false
  name: IsValidDataSource
  nameWithType: HierarchicalDataSourceConverter.IsValidDataSource
