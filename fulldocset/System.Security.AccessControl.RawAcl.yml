### YamlMime:ManagedReference
items:
- uid: System.Security.AccessControl.RawAcl
  id: RawAcl
  children:
  - System.Security.AccessControl.RawAcl.#ctor(System.Byte,System.Int32)
  - System.Security.AccessControl.RawAcl.#ctor(System.Byte[],System.Int32)
  - System.Security.AccessControl.RawAcl.BinaryLength
  - System.Security.AccessControl.RawAcl.Count
  - System.Security.AccessControl.RawAcl.GetBinaryForm(System.Byte[],System.Int32)
  - System.Security.AccessControl.RawAcl.InsertAce(System.Int32,System.Security.AccessControl.GenericAce)
  - System.Security.AccessControl.RawAcl.Item(System.Int32)
  - System.Security.AccessControl.RawAcl.RemoveAce(System.Int32)
  - System.Security.AccessControl.RawAcl.Revision
  langs:
  - csharp
  name: RawAcl
  nameWithType: RawAcl
  fullName: System.Security.AccessControl.RawAcl
  type: Class
  summary: "액세스 제어 목록을 (ACL)을 나타냅니다."
  remarks: "RawAcl 클래스 (Ace) 액세스 제어 항목의 완전 하 게 조작할 수 있습니다. Ace에 대 한 순서 지정 규칙을 적용 하지 않는 하 고 유효성 검사 논리를 제공 하지 않습니다. 모든 ACE는 삽입, 수정 또는 ACL에는 모든 위치에서 제거할 수 있습니다."
  syntax:
    content: 'public sealed class RawAcl : System.Security.AccessControl.GenericAcl'
  inheritance:
  - System.Object
  - System.Security.AccessControl.GenericAcl
  implements: []
  inheritedMembers:
  - System.Security.AccessControl.GenericAcl.AclRevision
  - System.Security.AccessControl.GenericAcl.AclRevisionDS
  - System.Security.AccessControl.GenericAcl.CopyTo(System.Security.AccessControl.GenericAce[],System.Int32)
  - System.Security.AccessControl.GenericAcl.GetEnumerator
  - System.Security.AccessControl.GenericAcl.IsSynchronized
  - System.Security.AccessControl.GenericAcl.MaxBinaryLength
  - System.Security.AccessControl.GenericAcl.SyncRoot
  - System.Security.AccessControl.GenericAcl.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Security.AccessControl.GenericAcl.System#Collections#IEnumerable#GetEnumerator
  platform:
  - net462
- uid: System.Security.AccessControl.RawAcl.#ctor(System.Byte,System.Int32)
  id: '#ctor(System.Byte,System.Int32)'
  parent: System.Security.AccessControl.RawAcl
  langs:
  - csharp
  name: RawAcl(Byte,Int32)
  nameWithType: RawAcl.RawAcl(Byte,Int32)
  fullName: System.Security.AccessControl.RawAcl.RawAcl(Byte,Int32)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Security.AccessControl.RawAcl&quot;> </xref> 지정 된 수정 수준 사용 합니다."
  syntax:
    content: public RawAcl (byte revision, int capacity);
    parameters:
    - id: revision
      type: System.Byte
      description: "수정 버전의 새 액세스 제어 목록 (ACL) 수준입니다."
    - id: capacity
      type: System.Int32
      description: "액세스 제어 항목 (Ace)의 수가 <xref href=&quot;System.Security.AccessControl.RawAcl&quot;> </xref> 개체에 포함 될 수 있습니다. 이 숫자는 힌트로 사용 될 것입니다."
  overload: System.Security.AccessControl.RawAcl.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.RawAcl.#ctor(System.Byte[],System.Int32)
  id: '#ctor(System.Byte[],System.Int32)'
  parent: System.Security.AccessControl.RawAcl
  langs:
  - csharp
  name: RawAcl(Byte[],Int32)
  nameWithType: RawAcl.RawAcl(Byte[],Int32)
  fullName: System.Security.AccessControl.RawAcl.RawAcl(Byte[],Int32)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Security.AccessControl.RawAcl&quot;> </xref> 지정된 된 이진 형식에서 클래스입니다."
  syntax:
    content: public RawAcl (byte[] binaryForm, int offset);
    parameters:
    - id: binaryForm
      type: System.Byte[]
      description: "액세스 제어 목록 (ACL)을 나타내는 바이트 값의 배열입니다."
    - id: offset
      type: System.Int32
      description: "오프셋은 `binaryForm` 역마샬링 데이터를 시작 하는 매개 변수입니다."
  overload: System.Security.AccessControl.RawAcl.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.RawAcl.BinaryLength
  id: BinaryLength
  parent: System.Security.AccessControl.RawAcl
  langs:
  - csharp
  name: BinaryLength
  nameWithType: RawAcl.BinaryLength
  fullName: System.Security.AccessControl.RawAcl.BinaryLength
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "바이트의 이진 표현 길이 가져옵니다 <xref href=&quot;System.Security.AccessControl.RawAcl&quot;> </xref> 개체입니다. 이 길이 ACL 사용을 이진 배열로 마샬링하기 전에 사용 해야는 <xref:System.Security.AccessControl.RawAcl.GetBinaryForm*>메서드.</xref:System.Security.AccessControl.RawAcl.GetBinaryForm*>"
  syntax:
    content: public override int BinaryLength { get; }
    return:
      type: System.Int32
      description: "현재의 이진 표현 길이 (바이트)를 <xref href=&quot;System.Security.AccessControl.RawAcl&quot;> </xref> 개체입니다."
  overload: System.Security.AccessControl.RawAcl.BinaryLength*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.RawAcl.Count
  id: Count
  parent: System.Security.AccessControl.RawAcl
  langs:
  - csharp
  name: Count
  nameWithType: RawAcl.Count
  fullName: System.Security.AccessControl.RawAcl.Count
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "에서 수를 가져옵니다는 액세스 제어 항목 (Ace) 현재 <xref href=&quot;System.Security.AccessControl.RawAcl&quot;> </xref> 개체입니다."
  syntax:
    content: public override int Count { get; }
    return:
      type: System.Int32
      description: "현재의 Ace 수 <xref href=&quot;System.Security.AccessControl.RawAcl&quot;> </xref> 개체입니다."
  overload: System.Security.AccessControl.RawAcl.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.RawAcl.GetBinaryForm(System.Byte[],System.Int32)
  id: GetBinaryForm(System.Byte[],System.Int32)
  parent: System.Security.AccessControl.RawAcl
  langs:
  - csharp
  name: GetBinaryForm(Byte[],Int32)
  nameWithType: RawAcl.GetBinaryForm(Byte[],Int32)
  fullName: System.Security.AccessControl.RawAcl.GetBinaryForm(Byte[],Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "내용을 마샬링합니다는 <xref href=&quot;System.Security.AccessControl.RawAcl&quot;> </xref> 개체에 지정된 된 오프셋에서 시작 하 여 지정 된 바이트 배열입니다."
  syntax:
    content: public override void GetBinaryForm (byte[] binaryForm, int offset);
    parameters:
    - id: binaryForm
      type: System.Byte[]
      description: "바이트 배열 내용의 <xref href=&quot;System.Security.AccessControl.RawAcl&quot;> </xref> 마샬링됩니다."
    - id: offset
      type: System.Int32
      description: "마샬링을 시작할 오프셋입니다."
  overload: System.Security.AccessControl.RawAcl.GetBinaryForm*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>가 음수 이거나 너무 높아서 전체 <xref href=&quot;System.Security.AccessControl.RawAcl&quot;> </xref> 복사할 <code>array</code>합니다."
  platform:
  - net462
- uid: System.Security.AccessControl.RawAcl.InsertAce(System.Int32,System.Security.AccessControl.GenericAce)
  id: InsertAce(System.Int32,System.Security.AccessControl.GenericAce)
  parent: System.Security.AccessControl.RawAcl
  langs:
  - csharp
  name: InsertAce(Int32,GenericAce)
  nameWithType: RawAcl.InsertAce(Int32,GenericAce)
  fullName: System.Security.AccessControl.RawAcl.InsertAce(Int32,GenericAce)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "지정된 된 인덱스에는 지정 된 항목 ACE (액세스 제어)를 삽입합니다."
  remarks: "삽입 된 ACE가 때문에 삽입 한 후 ACE에 대 한 수정을 액세스 제어 목록 (ACL)에 반영 됩니다 삽입 하기 전에 복제 되지 않습니다."
  syntax:
    content: public void InsertAce (int index, System.Security.AccessControl.GenericAce ace);
    parameters:
    - id: index
      type: System.Int32
      description: "새 ACE를 추가할 위치입니다. 값을 지정 된 <xref:System.Security.AccessControl.RawAcl.Count*>ACE의 끝에 삽입 하는 속성은 <xref href=&quot;System.Security.AccessControl.RawAcl&quot;> </xref> 개체.</xref:System.Security.AccessControl.RawAcl.Count*>"
    - id: ace
      type: System.Security.AccessControl.GenericAce
      description: "ACE를 삽입 합니다."
  overload: System.Security.AccessControl.RawAcl.InsertAce*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>가 음수 이거나 너무 높아서 전체 <xref href=&quot;System.Security.AccessControl.GenericAcl&quot;> </xref> 복사할 <code>array</code>합니다."
  platform:
  - net462
- uid: System.Security.AccessControl.RawAcl.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Security.AccessControl.RawAcl
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: RawAcl.Item(Int32)
  fullName: System.Security.AccessControl.RawAcl.Item(Int32)
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "지정된 된 인덱스에 대 한 (ACE (액세스 제어 항목)을 가져오거나 설정 합니다."
  syntax:
    content: public override System.Security.AccessControl.GenericAce this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "가져오거나 설정할 ACE의&0;부터 시작 하는 인덱스입니다."
    return:
      type: System.Security.AccessControl.GenericAce
      description: "지정된 된 인덱스에 대 한 ACE 합니다."
  overload: System.Security.AccessControl.RawAcl.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.RawAcl.RemoveAce(System.Int32)
  id: RemoveAce(System.Int32)
  parent: System.Security.AccessControl.RawAcl
  langs:
  - csharp
  name: RemoveAce(Int32)
  nameWithType: RawAcl.RemoveAce(Int32)
  fullName: System.Security.AccessControl.RawAcl.RemoveAce(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "항목 ACE (액세스 제어) 지정된 된 위치에서 제거합니다."
  syntax:
    content: public void RemoveAce (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "제거 하려면 ACE의&0;부터 시작 하는 인덱스입니다."
  overload: System.Security.AccessControl.RawAcl.RemoveAce*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "값은 <code> index </code> 매개 변수 값 보다 높습니다.는 <xref:System.Security.AccessControl.RawAcl.Count*>속성&1;을 뺀 값이 음수 또는.</xref:System.Security.AccessControl.RawAcl.Count*>"
  platform:
  - net462
- uid: System.Security.AccessControl.RawAcl.Revision
  id: Revision
  parent: System.Security.AccessControl.RawAcl
  langs:
  - csharp
  name: Revision
  nameWithType: RawAcl.Revision
  fullName: System.Security.AccessControl.RawAcl.Revision
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "수정 수준을 가져옵니다는 <xref href=&quot;System.Security.AccessControl.RawAcl&quot;> </xref>합니다."
  syntax:
    content: public override byte Revision { get; }
    return:
      type: System.Byte
      description: "수정 수준을 지정 하는 바이트 값은 <xref href=&quot;System.Security.AccessControl.RawAcl&quot;> </xref>합니다."
  overload: System.Security.AccessControl.RawAcl.Revision*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.AccessControl.GenericAcl
  isExternal: false
  name: System.Security.AccessControl.GenericAcl
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Security.AccessControl.RawAcl.#ctor(System.Byte,System.Int32)
  parent: System.Security.AccessControl.RawAcl
  isExternal: false
  name: RawAcl(Byte,Int32)
  nameWithType: RawAcl.RawAcl(Byte,Int32)
  fullName: System.Security.AccessControl.RawAcl.RawAcl(Byte,Int32)
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.AccessControl.RawAcl.#ctor(System.Byte[],System.Int32)
  parent: System.Security.AccessControl.RawAcl
  isExternal: false
  name: RawAcl(Byte[],Int32)
  nameWithType: RawAcl.RawAcl(Byte[],Int32)
  fullName: System.Security.AccessControl.RawAcl.RawAcl(Byte[],Int32)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.AccessControl.RawAcl.BinaryLength
  parent: System.Security.AccessControl.RawAcl
  isExternal: false
  name: BinaryLength
  nameWithType: RawAcl.BinaryLength
  fullName: System.Security.AccessControl.RawAcl.BinaryLength
- uid: System.Security.AccessControl.RawAcl.Count
  parent: System.Security.AccessControl.RawAcl
  isExternal: false
  name: Count
  nameWithType: RawAcl.Count
  fullName: System.Security.AccessControl.RawAcl.Count
- uid: System.Security.AccessControl.RawAcl.GetBinaryForm(System.Byte[],System.Int32)
  parent: System.Security.AccessControl.RawAcl
  isExternal: false
  name: GetBinaryForm(Byte[],Int32)
  nameWithType: RawAcl.GetBinaryForm(Byte[],Int32)
  fullName: System.Security.AccessControl.RawAcl.GetBinaryForm(Byte[],Int32)
- uid: System.Security.AccessControl.RawAcl.InsertAce(System.Int32,System.Security.AccessControl.GenericAce)
  parent: System.Security.AccessControl.RawAcl
  isExternal: false
  name: InsertAce(Int32,GenericAce)
  nameWithType: RawAcl.InsertAce(Int32,GenericAce)
  fullName: System.Security.AccessControl.RawAcl.InsertAce(Int32,GenericAce)
- uid: System.Security.AccessControl.GenericAce
  parent: System.Security.AccessControl
  isExternal: false
  name: GenericAce
  nameWithType: GenericAce
  fullName: System.Security.AccessControl.GenericAce
- uid: System.Security.AccessControl.RawAcl.Item(System.Int32)
  parent: System.Security.AccessControl.RawAcl
  isExternal: false
  name: Item(Int32)
  nameWithType: RawAcl.Item(Int32)
  fullName: System.Security.AccessControl.RawAcl.Item(Int32)
- uid: System.Security.AccessControl.RawAcl.RemoveAce(System.Int32)
  parent: System.Security.AccessControl.RawAcl
  isExternal: false
  name: RemoveAce(Int32)
  nameWithType: RawAcl.RemoveAce(Int32)
  fullName: System.Security.AccessControl.RawAcl.RemoveAce(Int32)
- uid: System.Security.AccessControl.RawAcl.Revision
  parent: System.Security.AccessControl.RawAcl
  isExternal: false
  name: Revision
  nameWithType: RawAcl.Revision
  fullName: System.Security.AccessControl.RawAcl.Revision
- uid: System.Security.AccessControl.RawAcl.#ctor*
  parent: System.Security.AccessControl.RawAcl
  isExternal: false
  name: RawAcl
  nameWithType: RawAcl.RawAcl
- uid: System.Security.AccessControl.RawAcl.BinaryLength*
  parent: System.Security.AccessControl.RawAcl
  isExternal: false
  name: BinaryLength
  nameWithType: RawAcl.BinaryLength
- uid: System.Security.AccessControl.RawAcl.Count*
  parent: System.Security.AccessControl.RawAcl
  isExternal: false
  name: Count
  nameWithType: RawAcl.Count
- uid: System.Security.AccessControl.RawAcl.GetBinaryForm*
  parent: System.Security.AccessControl.RawAcl
  isExternal: false
  name: GetBinaryForm
  nameWithType: RawAcl.GetBinaryForm
- uid: System.Security.AccessControl.RawAcl.InsertAce*
  parent: System.Security.AccessControl.RawAcl
  isExternal: false
  name: InsertAce
  nameWithType: RawAcl.InsertAce
- uid: System.Security.AccessControl.RawAcl.Item*
  parent: System.Security.AccessControl.RawAcl
  isExternal: false
  name: Item
  nameWithType: RawAcl.Item
- uid: System.Security.AccessControl.RawAcl.RemoveAce*
  parent: System.Security.AccessControl.RawAcl
  isExternal: false
  name: RemoveAce
  nameWithType: RawAcl.RemoveAce
- uid: System.Security.AccessControl.RawAcl.Revision*
  parent: System.Security.AccessControl.RawAcl
  isExternal: false
  name: Revision
  nameWithType: RawAcl.Revision
