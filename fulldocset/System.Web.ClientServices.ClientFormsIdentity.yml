### YamlMime:ManagedReference
items:
- uid: System.Web.ClientServices.ClientFormsIdentity
  id: ClientFormsIdentity
  children:
  - System.Web.ClientServices.ClientFormsIdentity.#ctor(System.String,System.String,System.Web.Security.MembershipProvider,System.String,System.Boolean,System.Net.CookieContainer)
  - System.Web.ClientServices.ClientFormsIdentity.AuthenticationCookies
  - System.Web.ClientServices.ClientFormsIdentity.AuthenticationType
  - System.Web.ClientServices.ClientFormsIdentity.Dispose
  - System.Web.ClientServices.ClientFormsIdentity.Dispose(System.Boolean)
  - System.Web.ClientServices.ClientFormsIdentity.IsAuthenticated
  - System.Web.ClientServices.ClientFormsIdentity.Name
  - System.Web.ClientServices.ClientFormsIdentity.Provider
  - System.Web.ClientServices.ClientFormsIdentity.RevalidateUser
  langs:
  - csharp
  name: ClientFormsIdentity
  nameWithType: ClientFormsIdentity
  fullName: System.Web.ClientServices.ClientFormsIdentity
  type: Class
  summary: "폼 인증을 사용 하 여 클라이언트 응용 프로그램 서비스에 대해 인증 된 사용자 id를 나타냅니다."
  remarks: "클라이언트 응용 프로그램 서비스 기능은이 클래스를 사용 하 여 인증된 사용자를 나타냅니다. 클라이언트 응용 프로그램 서비스 및 폼 인증을 사용 하도록 응용 프로그램을 구성 하면 호출 하 여 사용자를 인증할 수 있습니다는 `static` <xref:System.Web.Security.Membership.ValidateUser%2A?displayProperty=fullName>메서드.</xref:System.Web.Security.Membership.ValidateUser%2A?displayProperty=fullName> 인증을 통해 현재 ClientFormsIdentity 인스턴스에 대 한 참조를 검색할 수 있습니다는 <xref:System.Security.Principal.IPrincipal.Identity%2A>속성의는 <xref:System.Security.Principal.IPrincipal>통해 검색 된 `static` <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName>속성.</xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName> </xref:System.Security.Principal.IPrincipal> </xref:System.Security.Principal.IPrincipal.Identity%2A> 자세한 내용은 참조 [클라이언트 응용 프로그램 서비스](~/add/includes/ajax-current-ext-md.md)합니다.       <xref:System.Security.Principal.IIdentity>이 클래스에 대 한 직접 종속성을 방지 하기 위해 참조</xref:System.Security.Principal.IIdentity> 로 ClientFormsIdentity 개체를 일반적으로 액세스 됩니다. 사용자가 확인 하 여 인증 여부를 확인할 수 있습니다는 <xref:System.Security.Principal.IIdentity.IsAuthenticated%2A?displayProperty=fullName>id의 속성입니다.</xref:System.Security.Principal.IIdentity.IsAuthenticated%2A?displayProperty=fullName> 그러나 클라이언트 응용 프로그램 서비스 아니라 windows, 사용자가 인증 받을 수 있습니다. 클라이언트 응용 프로그램 서비스에 대 한 사용자가 인증 여부를 확인 하려면 인지도 확인 해야 하는 <xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=fullName>속성 값이 &quot;ClientForms&quot;입니다.</xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=fullName>       호출 하려면 ClientFormsIdentity에 대 한 명시적 참조를 사용 해야는 <xref:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser%2A>하 여 정의 되지 않은 메서드는 <xref:System.Security.Principal.IIdentity>인터페이스.</xref:System.Security.Principal.IIdentity> </xref:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser%2A>"
  example:
  - "The following example code demonstrates how to use this class to silently revalidate a user when the application leaves the offline state. In this example, a <xref:System.Windows.Forms.CheckBox.CheckedChanged> event handler updates the offline status to match the check box value. If the user sets the application to the online state, the event handler attempts to revalidate the user by calling the <xref:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser%2A> method. However, if the authentication server is unavailable, the event handler returns the application to the offline state.  \n  \n> [!NOTE]\n>  The <xref:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser%2A> method is for convenience only. Because it does not have a return value, it cannot indicate whether revalidation has failed. Revalidation can fail, for example, if the user credentials have changed on the server. In this case, you might want to include code that explicitly validates users after a service call fails. For more information, see the Accessing Web Settings section in [Walkthrough: Using Client Application Services](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[ClientApplicationServices#315](~/add/codesnippet/visualbasic/ClientAppServicesDemo/Class1.vb#315)]\n [!code-cs[ClientApplicationServices#315](~/add/codesnippet/csharp/ClientAppServicesDemo/Class1.cs#315)]"
  syntax:
    content: 'public class ClientFormsIdentity : IDisposable, System.Security.Principal.IIdentity'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  - System.Security.Principal.IIdentity
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.ClientServices.ClientFormsIdentity.#ctor(System.String,System.String,System.Web.Security.MembershipProvider,System.String,System.Boolean,System.Net.CookieContainer)
  id: '#ctor(System.String,System.String,System.Web.Security.MembershipProvider,System.String,System.Boolean,System.Net.CookieContainer)'
  parent: System.Web.ClientServices.ClientFormsIdentity
  langs:
  - csharp
  name: ClientFormsIdentity(String,String,MembershipProvider,String,Boolean,CookieContainer)
  nameWithType: ClientFormsIdentity.ClientFormsIdentity(String,String,MembershipProvider,String,Boolean,CookieContainer)
  fullName: System.Web.ClientServices.ClientFormsIdentity.ClientFormsIdentity(String,String,MembershipProvider,String,Boolean,CookieContainer)
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.ClientServices.ClientFormsIdentity&quot;> </xref> 클래스입니다."
  syntax:
    content: public ClientFormsIdentity (string name, string password, System.Web.Security.MembershipProvider provider, string authenticationType, bool isAuthenticated, System.Net.CookieContainer authenticationCookies);
    parameters:
    - id: name
      type: System.String
      description: "인증된 된 사용자의 이름입니다."
    - id: password
      type: System.String
      description: "인증된 된 사용자의 암호입니다."
    - id: provider
      type: System.Web.Security.MembershipProvider
      description: "멤버 자격 공급자를 사용자를 인증 하는 데 사용 합니다."
    - id: authenticationType
      type: System.String
      description: "사용 되는 인증의 형식입니다."
    - id: isAuthenticated
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>사용자가 인증 된 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
    - id: authenticationCookies
      type: System.Net.CookieContainer
      description: "인증 서비스에서 검색 된 쿠키입니다."
  overload: System.Web.ClientServices.ClientFormsIdentity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ClientServices.ClientFormsIdentity.AuthenticationCookies
  id: AuthenticationCookies
  parent: System.Web.ClientServices.ClientFormsIdentity
  langs:
  - csharp
  name: AuthenticationCookies
  nameWithType: ClientFormsIdentity.AuthenticationCookies
  fullName: System.Web.ClientServices.ClientFormsIdentity.AuthenticationCookies
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices
  summary: "인증 서비스에서 검색 된 쿠키의 컬렉션을 가져옵니다."
  remarks: "이 속성은 응용 프로그램 코드에서 사용 하기 위해 사용 되지 않습니다. 이 속성을 통해 검색 된 쿠키를 의미 있게 수정할 수 없습니다 및 없는 유용한 정보를 포함 합니다."
  syntax:
    content: public System.Net.CookieContainer AuthenticationCookies { get; }
    return:
      type: System.Net.CookieContainer
      description: "인증 서비스에서 검색 된 쿠키입니다."
  overload: System.Web.ClientServices.ClientFormsIdentity.AuthenticationCookies*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ClientServices.ClientFormsIdentity.AuthenticationType
  id: AuthenticationType
  parent: System.Web.ClientServices.ClientFormsIdentity
  langs:
  - csharp
  name: AuthenticationType
  nameWithType: ClientFormsIdentity.AuthenticationType
  fullName: System.Web.ClientServices.ClientFormsIdentity.AuthenticationType
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices
  summary: "사용자를 인증 하는 데 사용 되는 인증 유형을 가져옵니다."
  remarks: "일반적으로 <xref:System.Web.ClientServices.ClientFormsIdentity> <xref:System.Security.Principal.IIdentity>이 클래스에 대 한 직접 종속성을 방지 하기 위해 참조</xref:System.Security.Principal.IIdentity> 로 개체</xref:System.Web.ClientServices.ClientFormsIdentity> 에 액세스 합니다. 사용자가 확인 하 여 인증 여부를 확인할 수 있습니다는 <xref:System.Security.Principal.IIdentity.IsAuthenticated%2A?displayProperty=fullName>id의 속성입니다.</xref:System.Security.Principal.IIdentity.IsAuthenticated%2A?displayProperty=fullName> 그러나 클라이언트 응용 프로그램 서비스 아니라 windows, 사용자가 인증 받을 수 있습니다. 클라이언트 응용 프로그램 서비스에 대 한 사용자가 인증 여부를 확인 하려면 인지도 확인 해야 하는 <xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=fullName>속성 값이 &quot;ClientForms&quot;입니다.</xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=fullName> 자세한 내용은 참조는 <xref:System.Web.ClientServices.ClientFormsIdentity>클래스 개요.</xref:System.Web.ClientServices.ClientFormsIdentity>"
  example:
  - "The following example code demonstrates how to use this property through an <xref:System.Security.Principal.IIdentity> reference to determine whether a user is currently authenticated for client application services. This example assumes that the application is in the default configuration where users are not required to log in again when the authentication cookie expires. Otherwise, the <xref:System.Net.WebException> might indicate that the user login has expired. For more information, see [How to: Configure Client Application Services](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[ClientApplicationServices#312](~/add/codesnippet/visualbasic/ClientAppServicesDemo/Class1.vb#312)]\n [!code-cs[ClientApplicationServices#312](~/add/codesnippet/csharp/ClientAppServicesDemo/Class1.cs#312)]"
  syntax:
    content: public string AuthenticationType { get; }
    return:
      type: System.String
      description: "사용자를 인증 하는 데 사용 되는 인증 유형입니다."
  overload: System.Web.ClientServices.ClientFormsIdentity.AuthenticationType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ClientServices.ClientFormsIdentity.Dispose
  id: Dispose
  parent: System.Web.ClientServices.ClientFormsIdentity
  langs:
  - csharp
  name: Dispose()
  nameWithType: ClientFormsIdentity.Dispose()
  fullName: System.Web.ClientServices.ClientFormsIdentity.Dispose()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices
  summary: "사용 하는 모든 리소스를 해제는 <xref href=&quot;System.Web.ClientServices.ClientFormsIdentity&quot;> </xref>합니다."
  remarks: "<xref:System.Web.ClientServices.ClientFormsIdentity>.</xref:System.Web.ClientServices.ClientFormsIdentity> 를 사용 하 여 작업을 마쳤으면 Dispose를 호출 합니다. Dispose 메서드는 <xref:System.Web.ClientServices.ClientFormsIdentity>불안정 한 상태가.</xref:System.Web.ClientServices.ClientFormsIdentity> Dispose를 호출한 후에 대 한 모든 참조를 해제 해야는 <xref:System.Web.ClientServices.ClientFormsIdentity>가비지 수집기는 메모리를 회수할 수 있도록 하는 <xref:System.Web.ClientServices.ClientFormsIdentity>차지한.</xref:System.Web.ClientServices.ClientFormsIdentity> </xref:System.Web.ClientServices.ClientFormsIdentity> 자세한 내용은 참조 [관리 되지 않는 리소스 정리](~/add/includes/ajax-current-ext-md.md) 및 [Dispose 메서드를 구현](~/add/includes/ajax-current-ext-md.md)합니다.      > [!NOTE] > <xref:System.Web.ClientServices.ClientFormsIdentity>.</xref:System.Web.ClientServices.ClientFormsIdentity> 에 대 한 마지막 참조를 해제 하기 전에 항상 호출 삭제 사용 중인 리소스가 가비지 수집기 호출할 때까지 해제 되지 것입니다 그렇지 않은 경우는 <xref:System.Web.ClientServices.ClientFormsIdentity>개체의 `Finalize` 메서드.</xref:System.Web.ClientServices.ClientFormsIdentity>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Web.ClientServices.ClientFormsIdentity.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ClientServices.ClientFormsIdentity.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Web.ClientServices.ClientFormsIdentity
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: ClientFormsIdentity.Dispose(Boolean)
  fullName: System.Web.ClientServices.ClientFormsIdentity.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices
  summary: "사용 하는 관리 되지 않는 리소스를 해제는 <xref href=&quot;System.Web.ClientServices.ClientFormsIdentity&quot;> </xref> 관리 되는 리소스를 선택적으로 해제 합니다."
  remarks: "이 메서드는 public `Dispose()` 메서드 및 <xref:System.Object.Finalize%2A>메서드.</xref:System.Object.Finalize%2A> `Dispose()`보호 된 호출 `Dispose(Boolean)` 메서드는 `disposing` 매개 변수 설정 `true`합니다. <xref:System.Object.Finalize%2A>호출 `Dispose` 와 `disposing` 로 설정 `false`합니다.</xref:System.Object.Finalize%2A>       경우는 `disposing` 매개 변수가 true 이면이 메서드는 관리 개체가 보유 하는 모든 리소스를 해제 합니다.이 <xref:System.Web.ClientServices.ClientFormsIdentity>참조.</xref:System.Web.ClientServices.ClientFormsIdentity> 이 메서드 호출에서 `Dispose()` 각 참조 된 개체의 메서드."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>관리 되는 관리 되지 않는 리소스만 해제 하려면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 만 관리 되지 않는 리소스를 해제 합니다."
  overload: System.Web.ClientServices.ClientFormsIdentity.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ClientServices.ClientFormsIdentity.IsAuthenticated
  id: IsAuthenticated
  parent: System.Web.ClientServices.ClientFormsIdentity
  langs:
  - csharp
  name: IsAuthenticated
  nameWithType: ClientFormsIdentity.IsAuthenticated
  fullName: System.Web.ClientServices.ClientFormsIdentity.IsAuthenticated
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices
  summary: "사용자 인증 되었는지 여부를 나타내는 값을 가져옵니다."
  remarks: "일반적으로 <xref:System.Web.ClientServices.ClientFormsIdentity> <xref:System.Security.Principal.IIdentity>이 클래스에 대 한 직접 종속성을 방지 하기 위해 참조</xref:System.Security.Principal.IIdentity> 로 개체</xref:System.Web.ClientServices.ClientFormsIdentity> 에 액세스 합니다. 사용자가 확인 하 여 인증 여부를 확인할 수 있습니다는 <xref:System.Security.Principal.IIdentity.IsAuthenticated%2A?displayProperty=fullName>id의 속성입니다.</xref:System.Security.Principal.IIdentity.IsAuthenticated%2A?displayProperty=fullName> 그러나 클라이언트 응용 프로그램 서비스 아니라 windows, 사용자가 인증 받을 수 있습니다. 클라이언트 응용 프로그램 서비스에 대 한 사용자가 인증 여부를 확인 하려면 인지도 확인 해야 하는 <xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=fullName>속성 값이 &quot;ClientForms&quot;입니다.</xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=fullName> 자세한 내용은 참조는 <xref:System.Web.ClientServices.ClientFormsIdentity>클래스 개요.</xref:System.Web.ClientServices.ClientFormsIdentity>"
  example:
  - "The following example code demonstrates how to use this property through an <xref:System.Security.Principal.IIdentity> reference to determine whether a user is currently authenticated for client application services. This example assumes that the application is in the default configuration where users are not required to log in again when the authentication cookie expires. Otherwise, the <xref:System.Net.WebException> might indicate that the user login has expired. For more information, see [How to: Configure Client Application Services](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[ClientApplicationServices#312](~/add/codesnippet/visualbasic/ClientAppServicesDemo/Class1.vb#312)]\n [!code-cs[ClientApplicationServices#312](~/add/codesnippet/csharp/ClientAppServicesDemo/Class1.cs#312)]"
  syntax:
    content: public bool IsAuthenticated { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>사용자가 인증 된 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.ClientServices.ClientFormsIdentity.IsAuthenticated*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ClientServices.ClientFormsIdentity.Name
  id: Name
  parent: System.Web.ClientServices.ClientFormsIdentity
  langs:
  - csharp
  name: Name
  nameWithType: ClientFormsIdentity.Name
  fullName: System.Web.ClientServices.ClientFormsIdentity.Name
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices
  summary: "사용자의 이름을 가져옵니다."
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "사용자의 이름입니다."
  overload: System.Web.ClientServices.ClientFormsIdentity.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ClientServices.ClientFormsIdentity.Provider
  id: Provider
  parent: System.Web.ClientServices.ClientFormsIdentity
  langs:
  - csharp
  name: Provider
  nameWithType: ClientFormsIdentity.Provider
  fullName: System.Web.ClientServices.ClientFormsIdentity.Provider
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices
  summary: "사용자를 인증 하는 데 사용 되는 멤버 자격 공급자를 가져옵니다."
  syntax:
    content: public System.Web.Security.MembershipProvider Provider { get; }
    return:
      type: System.Web.Security.MembershipProvider
      description: "사용자를 인증 하는 데 사용 되는 멤버 자격 공급자입니다."
  overload: System.Web.ClientServices.ClientFormsIdentity.Provider*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ClientServices.ClientFormsIdentity.RevalidateUser
  id: RevalidateUser
  parent: System.Web.ClientServices.ClientFormsIdentity
  langs:
  - csharp
  name: RevalidateUser()
  nameWithType: ClientFormsIdentity.RevalidateUser()
  fullName: System.Web.ClientServices.ClientFormsIdentity.RevalidateUser()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices
  summary: "자동으로 캐시 된 자격 증명을 사용 하 여 사용자를 인증 합니다."
  remarks: "폼 인증을 사용 하 여 현재 사용자의 유효성을 검사 하는 <xref:System.Web.ClientServices.ClientFormsIdentity>클래스 응용 프로그램이 실행 되는 사용자 자격 증명을 저장 합니다.</xref:System.Web.ClientServices.ClientFormsIdentity> 그러나 사용자가 인증 쿠키가 만료 될 때까지만 인증 됩니다. 쿠키가 만료 되 면 사용자는 원격 역할 또는 웹 설정 서비스에 액세스 하 다시 확인 되어야 합니다. 사용할 수는 **서비스에 대 한 고급 설정** 대화 상자에 설명 된 대로 응용 프로그램의 사용자를 자동으로 유효성 검사를 구성 하려면 [하는 방법: 클라이언트 응용 프로그램 서비스 구성](~/add/includes/ajax-current-ext-md.md)합니다. 그러나 쿠키 만료를 따르도록 응용 프로그램을 구성 하는 경우 있습니다 수 프로그래밍 방식으로 다시 유효성을 검사 사용자 RevalidateUser 메서드를 호출 합니다. 이 메서드는 또한 유용 오프 라인 모드에서 온라인 모드로 전환 하는 경우 응용 프로그램 종료 때문에 중 오프 라인 상태입니다.      > [!NOTE] > The RevalidateUser 메서드는 편의 위해서만 합니다. 반환 값이 없기 때문에 유효성 재검사가 실패 하는지 여부를 나타낼 수 없습니다. 예를 들어 사용자 자격 증명 서버에서 변경 된 경우 유효성 재검사 실패할 수 있습니다. 이 경우 다음 서비스 호출이 실패 한 후 사용자가 명시적으로 유효성을 검사 하는 코드를 포함 하는 것이 좋습니다. 자세한 내용은의 웹 설정 액세스 섹션을 참조 하십시오. [연습: 클라이언트 응용 프로그램 서비스를 사용 하 여](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following example code demonstrates how to use this method to silently revalidate a user when the application leaves the offline state. In this example, a <xref:System.Windows.Forms.CheckBox.CheckedChanged> event handler updates the offline status to match the check box value. If the user sets the application to the online state, the event handler attempts to revalidate the user. However, if the authentication server is unavailable, the event handler returns the application to the offline state.  \n  \n [!code-vb[ClientApplicationServices#315](~/add/codesnippet/visualbasic/ClientAppServicesDemo/Class1.vb#315)]\n [!code-cs[ClientApplicationServices#315](~/add/codesnippet/csharp/ClientAppServicesDemo/Class1.cs#315)]"
  syntax:
    content: public void RevalidateUser ();
    parameters: []
  overload: System.Web.ClientServices.ClientFormsIdentity.RevalidateUser*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.ClientServices.ClientFormsIdentity.#ctor(System.String,System.String,System.Web.Security.MembershipProvider,System.String,System.Boolean,System.Net.CookieContainer)
  parent: System.Web.ClientServices.ClientFormsIdentity
  isExternal: false
  name: ClientFormsIdentity(String,String,MembershipProvider,String,Boolean,CookieContainer)
  nameWithType: ClientFormsIdentity.ClientFormsIdentity(String,String,MembershipProvider,String,Boolean,CookieContainer)
  fullName: System.Web.ClientServices.ClientFormsIdentity.ClientFormsIdentity(String,String,MembershipProvider,String,Boolean,CookieContainer)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Security.MembershipProvider
  parent: System.Web.Security
  isExternal: true
  name: MembershipProvider
  nameWithType: MembershipProvider
  fullName: System.Web.Security.MembershipProvider
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.CookieContainer
  parent: System.Net
  isExternal: true
  name: CookieContainer
  nameWithType: CookieContainer
  fullName: System.Net.CookieContainer
- uid: System.Web.ClientServices.ClientFormsIdentity.AuthenticationCookies
  parent: System.Web.ClientServices.ClientFormsIdentity
  isExternal: false
  name: AuthenticationCookies
  nameWithType: ClientFormsIdentity.AuthenticationCookies
  fullName: System.Web.ClientServices.ClientFormsIdentity.AuthenticationCookies
- uid: System.Web.ClientServices.ClientFormsIdentity.AuthenticationType
  parent: System.Web.ClientServices.ClientFormsIdentity
  isExternal: false
  name: AuthenticationType
  nameWithType: ClientFormsIdentity.AuthenticationType
  fullName: System.Web.ClientServices.ClientFormsIdentity.AuthenticationType
- uid: System.Web.ClientServices.ClientFormsIdentity.Dispose
  parent: System.Web.ClientServices.ClientFormsIdentity
  isExternal: false
  name: Dispose()
  nameWithType: ClientFormsIdentity.Dispose()
  fullName: System.Web.ClientServices.ClientFormsIdentity.Dispose()
- uid: System.Web.ClientServices.ClientFormsIdentity.Dispose(System.Boolean)
  parent: System.Web.ClientServices.ClientFormsIdentity
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: ClientFormsIdentity.Dispose(Boolean)
  fullName: System.Web.ClientServices.ClientFormsIdentity.Dispose(Boolean)
- uid: System.Web.ClientServices.ClientFormsIdentity.IsAuthenticated
  parent: System.Web.ClientServices.ClientFormsIdentity
  isExternal: false
  name: IsAuthenticated
  nameWithType: ClientFormsIdentity.IsAuthenticated
  fullName: System.Web.ClientServices.ClientFormsIdentity.IsAuthenticated
- uid: System.Web.ClientServices.ClientFormsIdentity.Name
  parent: System.Web.ClientServices.ClientFormsIdentity
  isExternal: false
  name: Name
  nameWithType: ClientFormsIdentity.Name
  fullName: System.Web.ClientServices.ClientFormsIdentity.Name
- uid: System.Web.ClientServices.ClientFormsIdentity.Provider
  parent: System.Web.ClientServices.ClientFormsIdentity
  isExternal: false
  name: Provider
  nameWithType: ClientFormsIdentity.Provider
  fullName: System.Web.ClientServices.ClientFormsIdentity.Provider
- uid: System.Web.ClientServices.ClientFormsIdentity.RevalidateUser
  parent: System.Web.ClientServices.ClientFormsIdentity
  isExternal: false
  name: RevalidateUser()
  nameWithType: ClientFormsIdentity.RevalidateUser()
  fullName: System.Web.ClientServices.ClientFormsIdentity.RevalidateUser()
- uid: System.Web.ClientServices.ClientFormsIdentity.#ctor*
  parent: System.Web.ClientServices.ClientFormsIdentity
  isExternal: false
  name: ClientFormsIdentity
  nameWithType: ClientFormsIdentity.ClientFormsIdentity
- uid: System.Web.ClientServices.ClientFormsIdentity.AuthenticationCookies*
  parent: System.Web.ClientServices.ClientFormsIdentity
  isExternal: false
  name: AuthenticationCookies
  nameWithType: ClientFormsIdentity.AuthenticationCookies
- uid: System.Web.ClientServices.ClientFormsIdentity.AuthenticationType*
  parent: System.Web.ClientServices.ClientFormsIdentity
  isExternal: false
  name: AuthenticationType
  nameWithType: ClientFormsIdentity.AuthenticationType
- uid: System.Web.ClientServices.ClientFormsIdentity.Dispose*
  parent: System.Web.ClientServices.ClientFormsIdentity
  isExternal: false
  name: Dispose
  nameWithType: ClientFormsIdentity.Dispose
- uid: System.Web.ClientServices.ClientFormsIdentity.IsAuthenticated*
  parent: System.Web.ClientServices.ClientFormsIdentity
  isExternal: false
  name: IsAuthenticated
  nameWithType: ClientFormsIdentity.IsAuthenticated
- uid: System.Web.ClientServices.ClientFormsIdentity.Name*
  parent: System.Web.ClientServices.ClientFormsIdentity
  isExternal: false
  name: Name
  nameWithType: ClientFormsIdentity.Name
- uid: System.Web.ClientServices.ClientFormsIdentity.Provider*
  parent: System.Web.ClientServices.ClientFormsIdentity
  isExternal: false
  name: Provider
  nameWithType: ClientFormsIdentity.Provider
- uid: System.Web.ClientServices.ClientFormsIdentity.RevalidateUser*
  parent: System.Web.ClientServices.ClientFormsIdentity
  isExternal: false
  name: RevalidateUser
  nameWithType: ClientFormsIdentity.RevalidateUser
