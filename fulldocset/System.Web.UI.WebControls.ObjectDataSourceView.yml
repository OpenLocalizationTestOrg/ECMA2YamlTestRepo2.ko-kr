### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.ObjectDataSourceView
  id: ObjectDataSourceView
  children:
  - System.Web.UI.WebControls.ObjectDataSourceView.#ctor(System.Web.UI.WebControls.ObjectDataSource,System.String,System.Web.HttpContext)
  - System.Web.UI.WebControls.ObjectDataSourceView.CanDelete
  - System.Web.UI.WebControls.ObjectDataSourceView.CanInsert
  - System.Web.UI.WebControls.ObjectDataSourceView.CanPage
  - System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount
  - System.Web.UI.WebControls.ObjectDataSourceView.CanSort
  - System.Web.UI.WebControls.ObjectDataSourceView.CanUpdate
  - System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection
  - System.Web.UI.WebControls.ObjectDataSourceView.ConvertNullToDBNull
  - System.Web.UI.WebControls.ObjectDataSourceView.DataObjectTypeName
  - System.Web.UI.WebControls.ObjectDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.WebControls.ObjectDataSourceView.Deleted
  - System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod
  - System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters
  - System.Web.UI.WebControls.ObjectDataSourceView.Deleting
  - System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging
  - System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.WebControls.ObjectDataSourceView.ExecuteInsert(System.Collections.IDictionary)
  - System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)
  - System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression
  - System.Web.UI.WebControls.ObjectDataSourceView.Filtering
  - System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters
  - System.Web.UI.WebControls.ObjectDataSourceView.Insert(System.Collections.IDictionary)
  - System.Web.UI.WebControls.ObjectDataSourceView.Inserted
  - System.Web.UI.WebControls.ObjectDataSourceView.Inserting
  - System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod
  - System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters
  - System.Web.UI.WebControls.ObjectDataSourceView.IsTrackingViewState
  - System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState(System.Object)
  - System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName
  - System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated
  - System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating
  - System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing
  - System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString
  - System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  - System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)
  - System.Web.UI.WebControls.ObjectDataSourceView.OnFiltering(System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs)
  - System.Web.UI.WebControls.ObjectDataSourceView.OnInserted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  - System.Web.UI.WebControls.ObjectDataSourceView.OnInserting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)
  - System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated(System.Web.UI.WebControls.ObjectDataSourceEventArgs)
  - System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating(System.Web.UI.WebControls.ObjectDataSourceEventArgs)
  - System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing(System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs)
  - System.Web.UI.WebControls.ObjectDataSourceView.OnSelected(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  - System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting(System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs)
  - System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  - System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)
  - System.Web.UI.WebControls.ObjectDataSourceView.ParsingCulture
  - System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState
  - System.Web.UI.WebControls.ObjectDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)
  - System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod
  - System.Web.UI.WebControls.ObjectDataSourceView.Selected
  - System.Web.UI.WebControls.ObjectDataSourceView.Selecting
  - System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod
  - System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters
  - System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName
  - System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName
  - System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#TrackViewState
  - System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState
  - System.Web.UI.WebControls.ObjectDataSourceView.TypeName
  - System.Web.UI.WebControls.ObjectDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.WebControls.ObjectDataSourceView.Updated
  - System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod
  - System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters
  - System.Web.UI.WebControls.ObjectDataSourceView.Updating
  langs:
  - csharp
  name: ObjectDataSourceView
  nameWithType: ObjectDataSourceView
  fullName: System.Web.UI.WebControls.ObjectDataSourceView
  type: Class
  summary: "지원 된 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> 제어 하 고 비즈니스 및 데이터 개체와 데이터 작업을 수행할 데이터 바인딩된 컨트롤에 대 한 인터페이스를 제공 합니다."
  remarks: "ObjectDataSourceView 클래스는 페이지 코드에서 프로그래밍 가능한 개체 하지 데이터 바인딩된 컨트롤에서 사용할 수 하는 데 주로 사용 됩니다.       ObjectDataSourceView 클래스에 대 한 데이터 기능을 구현 하는 <xref:System.Web.UI.WebControls.ObjectDataSource>컨트롤을 포함 하는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>, <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A>, <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A>, 및 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>작업, 정렬, 필터링 및 설정 관리 뷰 상태에 저장 합니다.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Web.UI.WebControls.ObjectDataSource>       ObjectDataSourceView 개체의 각 인스턴스에 대해 만들어진는 <xref:System.Web.UI.WebControls.ObjectDataSource>런타임 시 클래스.</xref:System.Web.UI.WebControls.ObjectDataSource> 인스턴스의 데이터 작업에 대 한 호출에서 <xref:System.Web.UI.WebControls.ObjectDataSource>클래스 ObjectDataSourceView 개체의 인스턴스에 의해 처리 됩니다.</xref:System.Web.UI.WebControls.ObjectDataSource> 페이지 개발자 ObjectDataSourceView 클래스의 인스턴스를 직접 액세스 하지 않습니다. 컨트롤 개발자가 확장 하 여 사용자 지정 데이터 컨트롤을 만들 수는 <xref:System.Web.UI.WebControls.ObjectDataSource>및 ObjectDataSourceView 클래스.</xref:System.Web.UI.WebControls.ObjectDataSource>       ObjectDataSourceView 클래스는 리플렉션을 사용 하 여 비즈니스 또는 데이터 개체에서 메서드를 호출 하 여 데이터 작업을 수행 합니다. 런타임에 <xref:System.Web.UI.WebControls.ObjectDataSource>컨트롤으로 식별 되는 형식의 인스턴스를 만듭니다는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.TypeName%2A>속성을 데이터 작업에 대 한 적절 한 메서드를 호출 합니다.</xref:System.Web.UI.WebControls.ObjectDataSourceView.TypeName%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> ObjectDataSourceView는 인스턴스화된 개체가 메모리에 캐시 되지 않습니다. 개체를 생성 하 고 모든 데이터 메서드 호출에 대 한 소멸 합니다. 메서드가 `static` (`Shared` Visual basic에서), 인스턴스 만들어지지 않지만 데이터 작업 메서드는 호출 됩니다.       ObjectDataSourceView 하 여 페이지 개발자에 게 직접 노출 되지 않은 <xref:System.Web.UI.WebControls.ObjectDataSource>컨트롤.</xref:System.Web.UI.WebControls.ObjectDataSource> 속성 및 메서드는 ObjectDataSourceView의 <xref:System.Web.UI.WebControls.ObjectDataSource>.</xref:System.Web.UI.WebControls.ObjectDataSource> 통해 액세스 되는 대신, 예를 들어는 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>ObjectDataSourceView <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> <xref:System.Web.UI.WebControls.ObjectDataSource>.</xref:System.Web.UI.WebControls.ObjectDataSource> 의 속성</xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> 을 설정 하 여 속성 설정</xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>      ## 사용 하 여 기본 데이터 저장소에서 데이터 검색은 데이터 원본 뷰를 수행 하는 가장 기본적인 작업 데이터를 검색 하는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>를 검색 하는 메서드는 <xref:System.Collections.IEnumerable>데이터 항목의 컬렉션입니다.</xref:System.Collections.IEnumerable> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> 다음 데이터 검색 메서드, 속성 및 이벤트 ObjectDataSourceView 개체에 의해 구현 되 고에서 직접 노출 해당 <xref:System.Web.UI.WebControls.ObjectDataSource>제어 페이지 개발자와 다른 호출자를:- <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>방법-는 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>속성-는 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A>속성-는 <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting>이벤트-는 <xref:System.Web.UI.WebControls.ObjectDataSource.Selected>이벤트 # #로 식별 되는 데이터 또는 비즈니스 개체 메서드를 호출 하 여 데이터 업데이트를 지원 하는 데이터의 ObjectDataSourceView 업데이트 개체는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A>속성.</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.Selected> </xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> </xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> 등의 업데이트를 자동으로 수행 하는 데이터 바인딩된 컨트롤에서 <xref:System.Web.UI.WebControls.GridView>및 <xref:System.Web.UI.WebControls.DetailsView>컨트롤에서 자신의 매개 변수에 전달는 <xref:System.Collections.Specialized.IOrderedDictionary>인터페이스는 ObjectDataSourceView와 view 개체를 병합 하에 있는 매개 변수와이 매개 변수는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A>컬렉션.</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A> </xref:System.Collections.Specialized.IOrderedDictionary> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView>       다음 업데이트 메서드, 속성 및 이벤트는 ObjectDataSourceView에서 구현 되 고에서 직접 노출 된 해당 <xref:System.Web.UI.WebControls.ObjectDataSource>제어 페이지 개발자와 다른 호출자를:- <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A>방법-는 <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>속성-는 <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A>속성-는 <xref:System.Web.UI.WebControls.ObjectDataSource.Updating>이벤트-는 <xref:System.Web.UI.WebControls.ObjectDataSource.Updated>이벤트 # # 삽입 데이터 The ObjectDataSourceView 개체가로 식별 되는 비즈니스 또는 데이터 개체 메서드를 호출 하 여 새 데이터 행을 삽입 지 원하는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A>속성.</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.Updated> </xref:System.Web.UI.WebControls.ObjectDataSource.Updating> </xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> 자동으로 같은 삽입을 수행 하는 데이터 바인딩된 컨트롤의 <xref:System.Web.UI.WebControls.GridView>및 <xref:System.Web.UI.WebControls.DetailsView>에 자신의 매개 변수에 전달는 <xref:System.Collections.Specialized.IOrderedDictionary>인터페이스는 ObjectDataSourceView와 view 개체를 병합 하에 있는 매개 변수와이 매개 변수는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A>컬렉션.</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A> </xref:System.Collections.Specialized.IOrderedDictionary> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView>       다음 삽입 메서드, 속성 및 이벤트는 ObjectDataSourceView에서 구현 되 고에서 직접 노출 된 해당 <xref:System.Web.UI.WebControls.ObjectDataSource>제어 페이지 개발자와 다른 호출자를:- <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A>방법-는 <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>속성-는 <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A>속성-는 <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting>이벤트-는 <xref:System.Web.UI.WebControls.ObjectDataSource.Inserted>이벤트 # # 데이터 The ObjectDataSourceView 삭제로 식별 되는 데이터 또는 비즈니스 개체 메서드를 호출 하 여 데이터 삭제를 지원 개체는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A>속성.</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.Inserted> </xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> </xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> 와 같은 삭제를 자동으로 수행 하는 데이터 바인딩된 컨트롤의 <xref:System.Web.UI.WebControls.GridView>및 <xref:System.Web.UI.WebControls.DetailsView>에 자신의 매개 변수에 전달는 <xref:System.Collections.Specialized.IOrderedDictionary>인터페이스는 ObjectDataSourceView와 view 개체를 병합 하에 있는 매개 변수와이 매개 변수는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A>컬렉션.</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A> </xref:System.Collections.Specialized.IOrderedDictionary> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> 다음 메서드, 속성을 삭제 하 고 이벤트는 ObjectDataSourceView에서 구현 되 고에서 직접 노출 된 해당 <xref:System.Web.UI.WebControls.ObjectDataSource>제어 페이지 개발자와 다른 호출자를:- <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A>방법-는 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>속성-는 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A>속성-는 <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting>이벤트-는 <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted>이벤트 # # 데이터를 동적으로 필터링 할 때 필터링 및 정렬 데이터 데이터 검색 속도가 더 강력한.</xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> </xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> </xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> 필터링 에서만 지원 됩니다는 <xref:System.Web.UI.WebControls.ObjectDataSource>으로 제어는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>메서드가 반환 되는 <xref:System.Data.DataTable>또는 <xref:System.Data.DataSet>개체입니다.</xref:System.Data.DataSet> </xref:System.Data.DataTable> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> 사용할 수는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A>및 <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A>속성 데이터 검색에 동적 필터링을 적용 합니다.</xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A> 이러한 속성 ObjectDataSourceView 개체에 의해 구현 되 고에서 직접 노출 된 해당 <xref:System.Web.UI.WebControls.ObjectDataSource>컨트롤을 데이터 바인딩된 컨트롤 및 다른 호출자에 게.</xref:System.Web.UI.WebControls.ObjectDataSource>       검색 하는 데이터를 정렬할 수는 <xref:System.Web.UI.WebControls.ObjectDataSource>검색 한 후 메모리에 데이터를 정렬 하 여.</xref:System.Web.UI.WebControls.ObjectDataSource> 정렬이 에서만 지원 되는 <xref:System.Web.UI.WebControls.ObjectDataSource>으로 제어 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>메서드 반환 <xref:System.Data.DataTable>하거나 <xref:System.Data.DataSet>.</xref:System.Data.DataSet> </xref:System.Data.DataTable> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> <xref:System.Web.UI.WebControls.ObjectDataSourceView.CanSort%2A>속성은 항상 반환 `true`는 ObjectDataSourceView 반환 종류를 확인할 수 없으므로는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>메서드를 호출 하지 않고 메서드.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.CanSort%2A> <xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A>속성 구문은와 같습니다는 <xref:System.Data.DataView.Sort%2A?displayProperty=fullName>속성.</xref:System.Data.DataView.Sort%2A?displayProperty=fullName> </xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A>      ## 뷰 상태는 ObjectDataSourceView 추적 구현에서 <xref:System.Web.UI.IStateManager>인터페이스 및 사용 하 여 뷰 페이지 요청에 대해 해당 상태를 추적 하는 상태.</xref:System.Web.UI.IStateManager> 구현에서 <xref:System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState%2A>, <xref:System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState%2A>, 및 <xref:System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState%2A>컨트롤의 뷰 상태 추적을 사용 하도록 설정 하려면 메서드가 제공 됩니다.</xref:System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState%2A> 자세한 내용은 참조 [ASP.NET 상태 관리 개요](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: 'public class ObjectDataSourceView : System.Web.UI.DataSourceView, System.Web.UI.IStateManager'
  inheritance:
  - System.Object
  - System.Web.UI.DataSourceView
  implements:
  - System.Web.UI.IStateManager
  inheritedMembers:
  - System.Web.UI.DataSourceView.CanExecute(System.String)
  - System.Web.UI.DataSourceView.DataSourceViewChanged
  - System.Web.UI.DataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  - System.Web.UI.DataSourceView.Events
  - System.Web.UI.DataSourceView.ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.DataSourceView.ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  - System.Web.UI.DataSourceView.Insert(System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  - System.Web.UI.DataSourceView.Name
  - System.Web.UI.DataSourceView.OnDataSourceViewChanged(System.EventArgs)
  - System.Web.UI.DataSourceView.RaiseUnsupportedCapabilityError(System.Web.UI.DataSourceCapabilities)
  - System.Web.UI.DataSourceView.Select(System.Web.UI.DataSourceSelectArguments,System.Web.UI.DataSourceViewSelectCallback)
  - System.Web.UI.DataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.#ctor(System.Web.UI.WebControls.ObjectDataSource,System.String,System.Web.HttpContext)
  id: '#ctor(System.Web.UI.WebControls.ObjectDataSource,System.String,System.Web.HttpContext)'
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: ObjectDataSourceView(ObjectDataSource,String,HttpContext)
  nameWithType: ObjectDataSourceView.ObjectDataSourceView(ObjectDataSource,String,HttpContext)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ObjectDataSourceView(ObjectDataSource,String,HttpContext)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> 클래스입니다."
  remarks: "<xref:System.Web.UI.WebControls.ObjectDataSourceView>생성자는 <xref:System.Web.UI.WebControls.ObjectDataSource.GetView%2A>지정 된 데이터 원본 뷰의 새 인스턴스를 반환 하는 메서드 `viewName` 매개 변수.</xref:System.Web.UI.WebControls.ObjectDataSource.GetView%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView> <xref:System.Web.UI.WebControls.ObjectDataSource>컨트롤이 하나만와 연결 되어 <xref:System.Web.UI.WebControls.ObjectDataSourceView>언제 든 지 해당 뷰 이름을 항상 및 `DefaultView`이 명명 언제나는 <xref:System.Web.UI.WebControls.ObjectDataSource>제어, 하지 있는 <xref:System.Web.UI.WebControls.ObjectDataSourceView>.</xref:System.Web.UI.WebControls.ObjectDataSourceView> </xref:System.Web.UI.WebControls.ObjectDataSource> 하지만,</xref:System.Web.UI.WebControls.ObjectDataSourceView> </xref:System.Web.UI.WebControls.ObjectDataSource> 재정의할 수 있습니다는 <xref:System.Web.UI.WebControls.ObjectDataSource.GetView%2A>다른 명명 규칙을 사용 하 여 뷰를 지원 하기 위해 메서드에.</xref:System.Web.UI.WebControls.ObjectDataSource.GetView%2A>       <xref:System.Web.HttpContext>으로 전달 되는 개체 `context` 와 같은 데이터 원본 뷰 매개 변수 개체 액세스를 사용한 <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A>및 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A>속성.</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A> </xref:System.Web.HttpContext>"
  syntax:
    content: public ObjectDataSourceView (System.Web.UI.WebControls.ObjectDataSource owner, string name, System.Web.HttpContext context);
    parameters:
    - id: owner
      type: System.Web.UI.WebControls.ObjectDataSource
      description: "<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> 하는 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> 연관 됩니다."
    - id: name
      type: System.String
      description: "데이터 원본 뷰를 소유 하는 데이터 소스 컨트롤의 범위 내에 대 한 고유 이름입니다."
    - id: context
      type: System.Web.HttpContext
      description: "현재 <xref href=&quot;System.Web.HttpContext&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanDelete
  id: CanDelete
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: CanDelete
  nameWithType: ObjectDataSourceView.CanDelete
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.CanDelete
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "나타내는 값을 가져옵니다 여부는 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> 개체와 현재 연결 된 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> 컨트롤 삭제 작업을 지원 합니다."
  remarks: "CanDelete 속성은 반환 `true`경우는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A>속성을 설정 합니다.</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> 모든 데이터 속성이 설정 되어 있지 않거나 올바르게 설정 되지 않은, 삭제 작업이 실패할 수 있습니다."
  syntax:
    content: public override bool CanDelete { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>작업이 지원 되 면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 삭제가 지원 되지 않는 경우는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*>속성은 빈 문자열 (&quot;&quot;).</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*>"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.CanDelete*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanInsert
  id: CanInsert
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: CanInsert
  nameWithType: ObjectDataSourceView.CanInsert
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.CanInsert
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "나타내는 값을 가져옵니다 여부는 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> 개체와 현재 연결 된 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> 컨트롤 삽입 작업을 지원 합니다."
  remarks: "CanInsert 속성은 반환 `true`경우는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A>속성을 설정 합니다.</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> 모든 데이터 속성이 설정 되어 있지 않거나 올바르게 설정 되지 않은, 삽입 작업이 실패할 수 있습니다."
  syntax:
    content: public override bool CanInsert { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>작업이 지원 되 면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 삽입 지원 되지 않는 경우는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*>속성은 빈 문자열입니다.</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*>"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.CanInsert*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanPage
  id: CanPage
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: CanPage
  nameWithType: ObjectDataSourceView.CanPage
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.CanPage
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "나타내는 값을 가져옵니다 여부는 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> 개체와 현재 연결 된 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> 컨트롤은 검색된 된 데이터 집합에 대해 페이징을 지원 합니다."
  remarks: "CanPage 속성은 표시 여부는 <xref:System.Web.UI.WebControls.ObjectDataSourceView>개체 페이징을 지원 합니다.</xref:System.Web.UI.WebControls.ObjectDataSourceView> <xref:System.Web.UI.WebControls.ObjectDataSourceView>참조 하십시오 <xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A>.</xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView> 에서 페이징은 지 원하는 방법에 대 한"
  syntax:
    content: public override bool CanPage { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>를 하는 경우는 <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging*>값으로 설정 되어 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging*>"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.CanPage*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount
  id: CanRetrieveTotalRowCount
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: CanRetrieveTotalRowCount
  nameWithType: ObjectDataSourceView.CanRetrieveTotalRowCount
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "나타내는 값을 가져옵니다 여부는 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> 개체와 현재 연결 된 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> 컨트롤은 데이터 집합 외에도 데이터 행의 총 수 검색을 지원 합니다."
  remarks: "CanRetrieveTotalRowCount 속성은 반환 `true`경우는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A>속성을 설정 합니다.</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A> 메서드를 반환 하는 페이지의 행 수가 아니라 페이징할 수 있는 행의 총 수를 반환 해야 합니다. 데이터 바인딩된 컨트롤 페이징 컨트롤을 렌더링 하는 방법을 결정 하기 위해 페이징할 수 있는 행의 총 수를 사용 합니다. 예를 들어 숫자 페이저 단추의 개수에 렌더링 하는 <xref:System.Web.UI.WebControls.GridView>호출기를 제어 합니다.</xref:System.Web.UI.WebControls.GridView> 페이징 지원에 대 한 자세한 내용은 <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A>.</xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A> 을 참조 하십시오.       호출 하는 동안 CanRetrieveTotalRowCount 속성은 확인 된 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect%2A>메서드는 데이터 소스 제어를 다양 한 설정 하 여 요청 된 모든 기능을 지원 <xref:System.Web.UI.DataSourceSelectArguments>속성.</xref:System.Web.UI.DataSourceSelectArguments> </xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect%2A>"
  syntax:
    content: public override bool CanRetrieveTotalRowCount { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>작업이 지원 되 면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanSort
  id: CanSort
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: CanSort
  nameWithType: ObjectDataSourceView.CanSort
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.CanSort
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "나타내는 값을 가져옵니다 여부는 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> 개체와 현재 연결 된 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> 컨트롤은 데이터 원본에 대 한 정렬 된 뷰를 지원 합니다."
  remarks: "때문에 <xref:System.Web.UI.WebControls.ObjectDataSource>데이터 정렬 지원만 때는 <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>메서드가 반환 되는 <xref:System.Data.DataSet>, <xref:System.Data.DataView>, 또는 <xref:System.Data.DataTable>개체 보기 개체 정렬 될 때까지 지원 되는지 여부를 확인할 수 없습니다는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>메서드가 호출 되 고 반환 합니다.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Data.DataTable> </xref:System.Data.DataView> </xref:System.Data.DataSet> </xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> 이러한 이유로 CanSort 속성은 항상 반환 `true`합니다."
  syntax:
    content: public override bool CanSort { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.CanSort*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanUpdate
  id: CanUpdate
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: CanUpdate
  nameWithType: ObjectDataSourceView.CanUpdate
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.CanUpdate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "나타내는 값을 가져옵니다 여부는 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> 개체와 현재 연결 된 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> 컨트롤 업데이트 작업을 지원 합니다."
  remarks: "CanUpdate 속성은 반환 `true`경우는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A>속성을 설정 합니다.</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A> 모든 데이터 속성이 설정 되지 않은 또는 올바르게 설정 되지 않은 경우, 업데이트 작업이 실패할 수 있습니다."
  syntax:
    content: public override bool CanUpdate { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>작업이 지원 되 면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 업데이트 하는 경우 지원 되지 않습니다는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>속성은 빈 문자열 (&quot;&quot;).</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.CanUpdate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection
  id: ConflictDetection
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: ConflictDetection
  nameWithType: ObjectDataSourceView.ConflictDetection
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "결정 하는 값을 가져오거나 설정 합니다. 방법을 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> 제어 업데이트를 수행 하 고 작업의 시간 동안 행 내부 데이터 저장소의 데이터가 변경 합니다."
  remarks: "ConflictDetection 속성에 이전 및 새 값에 대 한 매개 변수 적용 되었는지 여부를 결정은 `Update` 메서드. 된 메서드가 해당 하는 경우 등으로 지정 된는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A>속성에서 반환은 <xref:System.Data.DataTable>열이 포함 된 개체 `Name` 및 `Number`, ConflictDetection 속성을로 설정 하 고는 <xref:System.Web.UI.ConflictOptions>값 매개 변수가 대 한 만들어집니다 `Name` 및 `Number` 에 대 한는 `Update` 메서드.</xref:System.Web.UI.ConflictOptions> </xref:System.Data.DataTable> </xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> ConflictDetection 속성이로 설정 된 경우는 <xref:System.Web.UI.ConflictOptions>값, 매개 변수 이름을 사용 하 여 만들어진 `Name`, `Number`, `original_Name`, 및 `original_Name`.</xref:System.Web.UI.ConflictOptions> (원래 값에 대 한 정확한 이름은 매개 변수는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A>.)</xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A> <xref:System.Web.UI.WebControls.ObjectDataSourceView>가장 하는 방법은 다음 결정에 지정 된는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A>속성에 일치 하는 매개 변수가.</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView>       동시성 제어는 데이터 저장소가 데이터 읽기 및 여러 클라이언트가 액세스 하 고 동일한 데이터를 조작 하는 경우 저장소에서 변경 방법을 제어 하는 데 사용 하는 방법. 예를 들어 하나의 클라이언트 데이터 읽고는 사용자에 게 제공 하는 동안 다른 클라이언트가 동일한 데이터를 읽는 다른 사용자에 게 제공 합니다. 두 사용자가 데이터를 업데이트 하는 데이터 저장소에 제출 하는 경우 두 클라이언트 모두 동일한 데이터에 대해 서로 다른 값을 업데이트할 수 없기 때문에 예기치 않은 결과가 발생할 수 있습니다. 충돌로 간주 됩니다. ConflictDetection 속성을 설정 하 여는 <xref:System.Web.UI.ConflictOptions>값의 `Update` 후에 충돌을 감지 하 고 처리할 필요에 따라 데이터 원본에 이전 및 새 값을 비교 수 있습니다.</xref:System.Web.UI.ConflictOptions>       속성은 ConflictDetection 값 뷰 상태에 저장 합니다."
  syntax:
    content: public System.Web.UI.ConflictOptions ConflictDetection { get; set; }
    return:
      type: System.Web.UI.ConflictOptions
      description: "중 하나는 <xref href=&quot;System.Web.UI.ConflictOptions&quot;> </xref> 값입니다. 기본값은는 <xref href=&quot;System.Web.UI.ConflictOptions&quot;> </xref> 값입니다."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "선택한 값 중 하나이 고 <xref href=&quot;System.Web.UI.ConflictOptions&quot;> </xref> 값입니다."
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ConvertNullToDBNull
  id: ConvertNullToDBNull
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: ConvertNullToDBNull
  nameWithType: ObjectDataSourceView.ConvertNullToDBNull
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ConvertNullToDBNull
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "나타내는 값을 가져오거나 여부 <xref href=&quot;System.Web.UI.WebControls.Parameter&quot;> </xref> 에서 업데이트, 삽입 또는 삭제 작업에 전달 되는 값이 자동으로 변환 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 에 <xref href=&quot;System.DBNull.Value&quot;> </xref> 값입니다."
  remarks: "변환 되지 않으면 `null` 에 <xref:System.DBNull.Value?displayProperty=fullName>값 실행 시 오류가 발생할 수 있습니다.</xref:System.DBNull.Value?displayProperty=fullName> ConvertNullToDBNull 속성을 사용 여부는 <xref:System.Web.UI.WebControls.Parameter>에서 업데이트, 삽입 또는 삭제 작업에 전달 되는 값이 자동으로 변환 `null` 에 <xref:System.DBNull.Value?displayProperty=fullName>값.</xref:System.DBNull.Value?displayProperty=fullName> </xref:System.Web.UI.WebControls.Parameter> 자세한 내용은 <xref:System.Web.UI.WebControls.ObjectDataSource.ConvertNullToDBNull?displayProperty=fullName>.</xref:System.Web.UI.WebControls.ObjectDataSource.ConvertNullToDBNull?displayProperty=fullName> 을 참조 하십시오."
  syntax:
    content: public bool ConvertNullToDBNull { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 에 <xref href=&quot;System.Web.UI.WebControls.Parameter&quot;> </xref> 에 전달 된 개체는 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> 자동으로 변환 되며는 <xref href=&quot;System.DBNull.Value&quot;> </xref> 값입니다; 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.ConvertNullToDBNull*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.DataObjectTypeName
  id: DataObjectTypeName
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: DataObjectTypeName
  nameWithType: ObjectDataSourceView.DataObjectTypeName
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.DataObjectTypeName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "클래스의 이름을 가져오거나는 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> 데이터 작업에 대 한 매개 변수에 대 한 제어를 사용 합니다. <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> 컨트롤 대신 지정된 된 클래스를 사용 하 여는 <xref href=&quot;System.Web.UI.WebControls.Parameter&quot;> </xref> 다양 한 매개 변수 컬렉션에 있는 개체입니다."
  remarks: "에 전달 되는 여러 매개 변수를 지정 하는 대신는 `Select`, `Update`, `Insert`, 및 `Delete` 메서드를 여러 개의 항목을 집계 하는 하나의 개체를 만들 수 있습니다. 이 하나의 개체가 여러 매개 변수 대신 메서드로 전달 됩니다. 자세한 내용은 <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName?displayProperty=fullName>.</xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName?displayProperty=fullName> 을 참조 하십시오."
  syntax:
    content: public string DataObjectTypeName { get; set; }
    return:
      type: System.String
      description: "개체의 형식을 식별 하는 부분적으로 또는 완전히 정규화 된 클래스 이름을 하는 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> 에 대 한 매개 변수로 사용할 수는 <> </> *>, <> </> *>, 또는 <xref:System.Web.UI.WebControls.ObjectDataSource.Delete*>작업.</xref:System.Web.UI.WebControls.ObjectDataSource.Delete*> 기본값은 빈 문자열 (&quot;&quot;)."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.DataObjectTypeName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)
  id: Delete(System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: Delete(IDictionary,IDictionary)
  nameWithType: ObjectDataSourceView.Delete(IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Delete(IDictionary,IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "로 식별 되는 비즈니스 개체 메서드를 호출 하 여 삭제 작업을 수행 합니다.는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*>사용 하 여 지정 된 속성 <code> keys </code> 및 <code> oldValues </code> 컬렉션.</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*>"
  remarks: "기본값은-1로, 알 수 없는 개수의 행이 삭제 된 것을 의미 합니다. 다른 값을 반환 하려면 설정는 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A>속성은 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>의 개체는 <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted>이벤트 처리기.</xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> </xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> </xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A> 일반적으로 반환 된 영향을 받는 행 수는 `Delete` 비즈니스 개체 및 해당 값에 대 한 메서드는에서 사용할 수는 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A>의 속성은 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>의 매개 변수는 <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted>이벤트 처리기.</xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> </xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> </xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A>       Delete 메서드 호출의 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete%2A>전달 하는 메서드는 `keys` 및 `oldValues` 컬렉션.</xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete%2A>"
  syntax:
    content: public int Delete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues);
    parameters:
    - id: keys
      type: System.Collections.IDictionary
      description: "A <xref:System.Collections.IDictionary>삭제할 항목을 식별 하는 데 사용 되는 키 값.</xref:System.Collections.IDictionary> 이러한 매개 변수에 사용 되는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*>삭제 작업을 수행 하는 속성.</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*> 메서드와 연결 된 매개 변수가 없는 경우 전달 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
    - id: oldValues
      type: System.Collections.IDictionary
      description: "A <xref:System.Collections.IDictionary>데이터 원본의 항목과 일치 하는 데 사용 되는 추가 키가 아닌 값을 포함 하.</xref:System.Collections.IDictionary> 행 값은 경우에만 메서드에 전달 된 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection*>속성이로 설정 되는 <xref href=&quot;System.Web.UI.ConflictOptions&quot;> </xref> 필드.</xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection*>"
    return:
      type: System.Int32
      description: "삭제 된 행 수 그렇지 않으면-1 수를 알 수 없는 경우."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.Delete*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Deleted
  id: Deleted
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: Deleted
  nameWithType: ObjectDataSourceView.Deleted
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Deleted
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "발생 경우는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete*>작업이 완료 된.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete*>"
  remarks: "출력 매개 변수 및 반환 값의 값을 확인 하거나 후 예외가 throw 되었는지 여부를 확인 하려면 삭제 된 이벤트를 처리 한 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A>작업이 완료 된.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> 사용할 수 있는 반환 값, 출력 매개 변수 및 속성을 처리 하는 예외는 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>이벤트와 연결 된 개체입니다.</xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다."
  example:
  - "The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.GridView> control to delete data. The <xref:System.Web.UI.WebControls.GridView> initially displays a set of all employees, using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> property to retrieve the data from the `EmployeeLogic` object. Because the <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> property is set to `true`, the <xref:System.Web.UI.WebControls.GridView> control automatically displays a **Delete** button.  \n  \n If you click the **Delete** button, the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> operation is performed using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> property and any parameters that are specified in the <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A> collection. In this code example, some preprocessing and post-processing steps are also performed. The `NorthwindEmployeeDeleting` delegate is called to handle the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleting> event before the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> operation is performed, and the `NorthwindEmployeeDeleted` delegate is called to handle the Deleted event after the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> operation has completed, to perform an exception handling. In this example, if a `NorthwindDataException` is thrown, it is handled by this delegate.  \n  \n To examine the implementation of the `EmployeeLogic` middle-tier business object that this code example uses, see <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_10#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_129_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_129_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Deleted;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod
  id: DeleteMethod
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: DeleteMethod
  nameWithType: ObjectDataSourceView.DeleteMethod
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "메서드 또는 함수의 이름을 가져오거나는 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> 데이터를 삭제 하려면 개체를 호출 합니다."
  remarks: "DeleteMethod 속성으로 식별 되는 메서드는 인스턴스 메서드 일 수 또는 `static` (`Shared` Visual basic에서) 메서드. 인스턴스 메서드인 경우 비즈니스 개체가 생성 되 고 DeleteMethod 속성에 지정 된 메서드를 호출할 때마다 제거 합니다. 처리할 수는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated>DeleteMethod 속성에 지정 된 메서드를 호출 하기 전에 비즈니스 개체를 사용 하는 이벤트입니다.</xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated> 처리할 수도 있습니다는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing>DeleteMethod 속성에 지정 된 메서드가 호출 된 후 발생 하는 이벤트입니다.</xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing> 메서드가 `static` (`Shared` Visual basic에서) 메서드를 비즈니스 개체를 만들지는 및 이러한 이벤트를 처리할 수 없습니다.       비즈니스 개체가 <xref:System.Web.UI.WebControls.ObjectDataSource>(메서드 오버 로드) 이름이 같은 함수나 메서드를 여러 개 구현으로 작동 하는 컨트롤, 데이터 소스 컨트롤의 매개 변수를 포함 하 여 조건의 집합에 따라 올바른 메서드나를 호출 하려고 시도 <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A>컬렉션.</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> 경우에 매개 변수는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A>컬렉션 DeleteMethod 메서드 시그니처의 인수와 일치 하지 않는 경우 예외를 throw 하는 데이터 원본.</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A>       속성은 DeleteMethod 값 뷰 상태에 저장 합니다.       자세한 내용은 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>.</xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> 을 참조 하십시오."
  example:
  - "The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.GridView> control to delete data. The <xref:System.Web.UI.WebControls.GridView> initially displays a set of all employees, using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> property to retrieve the data from the `EmployeeLogic` object. Because the <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> property is set to `true`, the <xref:System.Web.UI.WebControls.GridView> control automatically displays a **Delete** button.  \n  \n If you click the **Delete** button, the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> operation is performed using the method that is specified by the DeleteMethod property and any parameters that are specified in the <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A> collection. In this code example, some preprocessing and post-processing steps are also performed. The `NorthwindEmployeeDeleting` delegate is called to handle the <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> event before the <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> operation is performed, and the `NorthwindEmployeeDeleted` delegate is called to handle the <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> event after the <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> operation has completed, to perform an exception handling. In this example, if a `NorthwindDataException` is thrown, it is handled by this delegate.  \n  \n To examine the implementation of the `EmployeeLogic` middle-tier business object that this code example uses, see <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_10#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1099_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1099_1.aspx)]"
  syntax:
    content: public string DeleteMethod { get; set; }
    return:
      type: System.String
      description: "사용 하는 함수 또는 메서드의 이름을 나타내는 문자열의 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> 데이터를 삭제 하려면 사용 합니다. 기본값은 빈 문자열 (&quot;&quot;)."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters
  id: DeleteParameters
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: DeleteParameters
  nameWithType: ObjectDataSourceView.DeleteParameters
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "사용 되는 매개 변수를 포함 하는 매개 변수 컬렉션을 가져옵니다는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*>메서드.</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*>"
  remarks: "이름 및 유형의 DeleteParameters 컬렉션에 포함 된 매개 변수 이름 및 지정 된 메서드에 매개 변수의 형식을 일치 해야 합니다는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A>속성 서명.</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> 매개 변수 이름은 영향을 받는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A>속성 및 대/소문자 구분 됩니다.</xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A> 와 같은 매개 변수를 제공 하는 데이터 바인딩된 컨트롤을 작업할 때 <xref:System.Web.UI.WebControls.GridView>및 <xref:System.Web.UI.WebControls.DetailsView>, <xref:System.Web.UI.WebControls.ObjectDataSource>컨트롤이 데이터 바인딩된 컨트롤에서 제공 되는 이러한 매개 변수를 사용 하 여 컬렉션에 명시적으로 지정 된 매개 변수를 자동으로 병합 합니다.</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView>       자세한 내용은 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>.</xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> 을 참조 하십시오."
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection DeleteParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.ParameterCollection&quot;> </xref> 로 지정 된 메서드에서 사용 되는 매개 변수를 포함 하는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*>속성.</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*>"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Deleting
  id: Deleting
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: Deleting
  nameWithType: ObjectDataSourceView.Deleting
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Deleting
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "앞에 오는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete*>작업.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete*>"
  remarks: "매개 변수 값의 유효성을 검사 하는 응용 프로그램에 적용 되는 추가 초기화 작업을 수행 하려면 Deleting 이벤트를 처리 또는 하기 전에 값을 매개 변수를 변경 하는 <xref:System.Web.UI.WebControls.ObjectDataSource>컨트롤 수행 되는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A>작업.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> 매개 변수는 사용할 수는 <xref:System.Collections.IDictionary>액세스 하는 컬렉션의 <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A>속성에 의해 노출 되는 <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs>개체입니다.</xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> </xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> </xref:System.Collections.IDictionary>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다."
  example:
  - "The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.GridView> control to delete data. The <xref:System.Web.UI.WebControls.GridView> initially displays a set of all employees, using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> property to retrieve the data from the `EmployeeLogic` object. Because the <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> property is set to `true`, the <xref:System.Web.UI.WebControls.GridView> control automatically displays a **Delete** button.  \n  \n If you click the **Delete** button, the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> operation is performed using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> property and any parameters that are specified in the <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A> collection. In this code example, some preprocessing and post-processing steps are also performed. The `NorthwindEmployeeDeleting` delegate is called to handle the Deleting event before the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> operation is performed, and the `NorthwindEmployeeDeleted` delegate is called to handle the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleted> event after the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> operation has completed, to perform an exception handling. In this example, if a `NorthwindDataException` is thrown, it is handled by this delegate.  \n  \n To examine the implementation of the `EmployeeLogic` middle-tier business object that this code example uses, see <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_10#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_88_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_88_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Deleting;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging
  id: EnablePaging
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: EnablePaging
  nameWithType: ObjectDataSourceView.EnablePaging
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "데이터 소스 컨트롤에 검색 된 데이터 집합에 페이징을 지원 하는지 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "페이징은 <xref:System.Web.UI.WebControls.ObjectDataSourceView>제어 EnablePaging를 설정 하 여 처리 됩니다 <xref:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName%2A>, <xref:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName%2A>, 및 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A>의 속성은 <xref:System.Web.UI.WebControls.ObjectDataSourceView>및 정의 `Select` 적절 한 매개 변수를 사용 하 여 비즈니스 개체의 메서드.</xref:System.Web.UI.WebControls.ObjectDataSourceView> </xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView> EnablePaging 속성이로 설정 된 경우 `true`, <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A>컬렉션 요청 된 첫 번째 행 및 요청 된 행 수에 대 한 두 개의 추가 매개 변수를 포함 합니다.</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A> 에 정의 된 대로이 두 매개 변수 이름은 <xref:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName%2A>및 <xref:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName%2A>속성.</xref:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName%2A> `Select` 메서드 요청된 수가 지정된 된 인덱스에서 시작 하는 행을 반환 해야 합니다. 데이터 페이지 크기에 따라 균등 하 게 나누지 수 때문에 적은 수의 행 마지막 페이지에 포함 될 수 있습니다. 따라서 요청 된 행 수는 실제로 반환 되는 행의 최대 수입니다.       <xref:System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount%2A>속성을 호출 하는 동안 검사는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect%2A>메서드는 데이터 소스 제어를 다양 한 설정 하 여 요청 된 모든 기능을 지 원하는 <xref:System.Web.UI.DataSourceSelectArguments>속성.</xref:System.Web.UI.DataSourceSelectArguments> </xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount%2A>       연결된 된 데이터 바인딩된 컨트롤에서 페이징이 활성화 된 데이터 바인딩 컨트롤 호출는 `Select` 메서드 시작 인덱스와 요청 된 행의 수를 사용 합니다. 또한 경우는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A>속성이 설정 되 면 데이터 바인딩된 컨트롤 페이저 컨트롤을 렌더링 하기 전에 메서드를 호출 합니다.</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A> 예를 들어 경우는 <xref:System.Web.UI.WebControls.GridView>컨트롤에서 페이징을 5, 페이지 크기가 사용 및 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A>메서드 반환 20, 호출기에 4 개의 페이지만 표시 됩니다.</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A> </xref:System.Web.UI.WebControls.GridView>       속성은 EnablePaging 값 뷰 상태에 저장 합니다."
  syntax:
    content: public bool EnablePaging { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>를 데이터 소스 제어의 데이터를 통한 페이징을 것 검색; 지 원하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)
  id: ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: ExecuteDelete(IDictionary,IDictionary)
  nameWithType: ObjectDataSourceView.ExecuteDelete(IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete(IDictionary,IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "사용 하 여 삭제 작업이 수행 된 <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*>메서드 및 지정 된 <code> keys </code> 및 <code> oldValues </code> 컬렉션.</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*>"
  remarks: "<xref:System.Web.UI.WebControls.ObjectDataSourceView>비즈니스 개체를 사용 하 여 기본 데이터 저장소에서 데이터를 삭제 상속 된 ExecuteDelete 메서드를 구현 하는 클래스입니다.</xref:System.Web.UI.WebControls.ObjectDataSourceView> 페이지 개발자와 데이터 바인딩된 컨트롤 작성자 직접 호출 하지 않습니다 ExecuteDelete 메서드; 대신, 공개적으로 노출 된 상태로 사용 하 여 <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A>메서드.</xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A>       삭제 작업을 수행 하기 전에 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting%2A>를 발생 시키는 메서드는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleting>이벤트.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleting> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting%2A> 이 이벤트는 매개 변수의 값을 검사 하 고 이전에 모든 전처리 수행할를 처리할 수 있습니다는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A>메서드를 호출 합니다.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A>       삭제 작업을 수행 하는 <xref:System.Web.UI.WebControls.ObjectDataSourceView>리플렉션을 사용 하 여로 식별 되는 메서드를 호출 하는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A>속성 및 연관 된 모든 매개 변수는 `keys` 및 `oldValues` 컬렉션, 다음 실행 합니다.</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView> 작업이 완료 되는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted%2A>를 발생 시키는 메서드는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleted>이벤트.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleted> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted%2A> 모든 반환 값과 오류 코드를 검사 하 고 사후 처리를 수행 하려면이 이벤트를 처리할 수 있습니다."
  syntax:
    content: protected override int ExecuteDelete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues);
    parameters:
    - id: keys
      type: System.Collections.IDictionary
      description: "A <xref:System.Collections.IDictionary>함께 사용 하는 매개 변수는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*>삭제 작업을 수행 하는 속성.</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*> </xref:System.Collections.IDictionary> 메서드와 연결 된 매개 변수가 없는 경우 전달 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
    - id: oldValues
      type: System.Collections.IDictionary
      description: "A <xref:System.Collections.IDictionary>경우에 평가 되는 행 값을 포함 하는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection*>속성이로 설정 되는 <xref href=&quot;System.Web.UI.ConflictOptions&quot;> </xref> 필드.</xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection*> </xref:System.Collections.IDictionary>"
    return:
      type: System.Int32
      description: "삭제 된 행 수 그렇지 않으면-1 수를 알 수 없는 경우. 자세한 내용은 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete*>.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete*> 을 참조 하십시오."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref:System.Web.UI.WebControls.ObjectDataSourceView.CanDelete*>속성에서 반환 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.ObjectDataSourceView.CanDelete*>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection*>속성이로 설정 되는 <xref href=&quot;System.Web.UI.ConflictOptions&quot;> </xref> 값 및 값이 없는에 전달 되는 <code> oldValues </code> 컬렉션.</xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteInsert(System.Collections.IDictionary)
  id: ExecuteInsert(System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: ExecuteInsert(IDictionary)
  nameWithType: ObjectDataSourceView.ExecuteInsert(IDictionary)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteInsert(IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "로 식별 되는 비즈니스 개체 메서드를 호출 하 여 삽입 작업을 수행 합니다.는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*>사용 하 여 지정 된 속성 <code> values </code> 컬렉션.</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*>"
  remarks: "<xref:System.Web.UI.WebControls.ObjectDataSourceView>비즈니스 개체를 사용 하 여 기본 데이터 저장소에 데이터를 삽입할 상속 된 ExecuteInsert 메서드를 구현 하는 클래스입니다.</xref:System.Web.UI.WebControls.ObjectDataSourceView> 페이지 개발자와 데이터 바인딩된 컨트롤 작성자 직접 호출 하지 않습니다 ExecuteInsert 메서드; 대신, 공개적으로 노출 된 상태로 사용 하 여 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>메서드.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>       삽입을 수행 하기 전에 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserting%2A>를 발생 시키는 메서드는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Inserting>이벤트.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Inserting> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserting%2A> 이 이벤트는 매개 변수의 값을 검사 하 고 이전에 모든 전처리 수행할를 처리할 수 있습니다는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>메서드를 호출 합니다.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>       삽입 작업을 수행 하는 <xref:System.Web.UI.WebControls.ObjectDataSourceView>제어로 식별 되는 메서드를 호출 하기 위해는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A>속성 및 관련에 있는 매개 변수는 `values` 컬렉션 다음 실행 합니다.</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView> 작업이 완료 되는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted%2A>를 발생 시키는 메서드는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Inserted>이벤트.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Inserted> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted%2A> 모든 반환 값, 오류 코드를 검사 하려면이 이벤트를 처리 하 고 후 처리를 수행할 수 있습니다.       삽입 된 행 수를 반환 하는 방법에 대 한 자세한 내용은 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> 을 참조 하십시오."
  syntax:
    content: protected override int ExecuteInsert (System.Collections.IDictionary values);
    parameters:
    - id: values
      type: System.Collections.IDictionary
      description: "A <xref:System.Collections.IDictionary>함께 사용 하는 매개 변수는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*>속성을 삽입 작업을 수행 합니다.</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*> </xref:System.Collections.IDictionary> 메서드와 연결 된 매개 변수가 없는 경우 전달 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
    return:
      type: System.Int32
      description: "삽입 된; 행의 수 그렇지 않으면-1 수를 알 수 없는 경우. 자세한 내용은 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert*>.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert*> 을 참조 하십시오."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteInsert*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref:System.Web.UI.WebControls.ObjectDataSourceView.CanInsert*>속성에서 반환 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.ObjectDataSourceView.CanInsert*>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>values</code><xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 이거나 비어 있습니다."
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)
  id: ExecuteSelect(System.Web.UI.DataSourceSelectArguments)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: ExecuteSelect(DataSourceSelectArguments)
  nameWithType: ObjectDataSourceView.ExecuteSelect(DataSourceSelectArguments)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect(DataSourceSelectArguments)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "로 식별 되는 개체에서 데이터를 검색는 <> </> *> 메서드를 호출 하 여 속성으로 식별 되는 <> </> *> 속성의 값을 전달 하는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters*>컬렉션.</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters*>"
  remarks: "<xref:System.Web.UI.WebControls.ObjectDataSourceView>비즈니스 개체를 사용 하 여 데이터를 검색 하려면 상속 된 executeselect를 실행 메서드를 구현 하는 클래스입니다.</xref:System.Web.UI.WebControls.ObjectDataSourceView> 페이지 개발자와 데이터 바인딩된 컨트롤 작성자 직접 호출 하지 않습니다 executeselect를 실행 메서드; 대신, 공개적으로 노출 된 상태로 사용 하 여 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>메서드.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>       지정된 된 메서드 어떤 메서드 시그니처를 가질 수 있습니다 하지만 형식 중 하나를 반환 해야는 <xref:System.Web.UI.WebControls.ObjectDataSource>성공적으로 호출 하려면 다음 표에 나열 된 컨트롤.</xref:System.Web.UI.WebControls.ObjectDataSource>      | 반환 형식 | 작업 |   |-----------------|------------|   | <xref:System.Collections.IEnumerable>| <xref:System.Collections.IEnumerable> <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>메서드에 의해 반환 됩니다. |   | <xref:System.Data.DataTable>| <xref:System.Data.DataView>는 <xref:System.Data.DataTable>를 사용 하 여 만들어지고 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>확장 메서드에서 반환한. |   | <xref:System.Data.DataSet>| <xref:System.Data.DataSet>의 첫 번째 <xref:System.Data.DataTable>추출 되 고는 <xref:System.Data.DataView>만들어지고 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>확장 메서드에서 반환한. |   | <xref:System.Object>| 개체가 단일 요소 <xref:System.Collections.IEnumerable>에에서 래핑된 이며 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>확장 메서드에서 반환한. |       데이터 검색을 수행 하기 전에 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting%2A>를 발생 시키는 메서드는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Selecting>이벤트.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Selecting> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Collections.IEnumerable> </xref:System.Object> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Data.DataView>  </xref:System.Data.DataTable></xref:System.Data.DataSet> </xref:System.Data.DataSet> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Data.DataTable> </xref:System.Data.DataView> </xref:System.Data.DataTable> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Collections.IEnumerable> </xref:System.Collections.IEnumerable> 이 이벤트는 매개 변수의 값을 확인 하 고 작업 전에 전처리를 수행할 수를 처리할 수 있습니다.       선택 작업을 수행 하는 <xref:System.Web.UI.WebControls.ObjectDataSourceView>제어 리플렉션을 사용 하 여로 식별 되는 메서드를 호출 하는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A>속성 및 관련의 매개 변수를는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A>컬렉션, 다음 실행 합니다.</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView> 작업이 완료 되는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected%2A>를 발생 시키는 메서드는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Selected>이벤트.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Selected> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected%2A> 모든 반환 값과 오류 코드를 검사 하 고 사후 처리를 수행 하려면이 이벤트를 처리할 수 있습니다.       경우는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>메서드가 반환 되는 <xref:System.Data.DataSet>개체 및 캐싱을 사용 하도록 설정 된 <xref:System.Web.UI.WebControls.ObjectDataSourceView>에서 데이터를 검색 하 고 작업을 하는 동안 캐시에 데이터를 저장 합니다.</xref:System.Web.UI.WebControls.ObjectDataSourceView> </xref:System.Data.DataSet> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> 캐시 또는 생성 된 경우 삭제 된 새로 고침의 조합에 의해 지정 된 캐싱 동작에 따라는 <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A>및 <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A>속성.</xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A>       경우는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>메서드가 반환 되는 <xref:System.Data.DataSet>개체 및 <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A>속성이 지정 된 경우, 제공 된 함께 평가 되 <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A>속성 및 결과 필터 목록 중 데이터에 적용 되는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>작업.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A> </xref:System.Data.DataSet> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>       선택 된 행 수를 반환 하는 방법에 내용은 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> 을 참조 하십시오."
  syntax:
    content: protected override System.Collections.IEnumerable ExecuteSelect (System.Web.UI.DataSourceSelectArguments arguments);
    parameters:
    - id: arguments
      type: System.Web.UI.DataSourceSelectArguments
      description: "A <xref href=&quot;System.Web.UI.DataSourceSelectArguments&quot;> </xref> 기본 데이터 검색 범위를 벗어난 데이터에 대해 요청 작업을 사용 합니다."
    return:
      type: System.Collections.IEnumerable
      description: "A <xref:System.Collections.IEnumerable>데이터 행 목록입니다.</xref:System.Collections.IEnumerable>"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "The <code>arguments</code> passed to the ExecuteSelect method specify that the data source should perform some additional work while retrieving data to enable paging or sorting through the retrieved data, but the data source control does not support the requested capability.  \n  \n \\- or -  \n  \n The object returned by the ExecuteSelect method is not a <xref href=\"System.Data.DataSet\"></xref> or <xref href=\"System.Data.DataTable\"></xref>, and caching is enabled. Only <xref href=\"System.Data.DataSet\"></xref> and <xref href=\"System.Data.DataTable\"></xref> objects can be cached for the <xref href=\"System.Web.UI.WebControls.ObjectDataSourceView\"></xref> control.  \n  \n \\- or -  \n  \n Both caching and client impersonation are enabled. The <xref href=\"System.Web.UI.WebControls.ObjectDataSource\"></xref> does not support caching when client impersonation is enabled."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The object returned by the ExecuteSelect method is a <xref href=\"System.Data.DataSet\"></xref>, but has no tables in its <xref:System.Data.DataSet.Tables*> collection.  \n  \n \\- or -  \n  \n The <xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging*> property is set to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, but the <xref:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName*> and <xref:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName*> properties are not set."
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  id: ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: ExecuteUpdate(IDictionary,IDictionary,IDictionary)
  nameWithType: ObjectDataSourceView.ExecuteUpdate(IDictionary,IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate(IDictionary,IDictionary,IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "로 식별 되는 메서드를 호출 하 여 업데이트 작업을 수행는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>속성과에 제공 된 매개 변수를 사용 하 여 <code> keys </code>, <code> values </code>, 또는 <code> oldValues </code> 컬렉션.</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>"
  remarks: "<xref:System.Web.UI.WebControls.ObjectDataSourceView>비즈니스 개체를 사용 하 여 데이터를 업데이트 하려면 상속 된 ExecuteUpdate 메서드를 구현 하는 클래스입니다.</xref:System.Web.UI.WebControls.ObjectDataSourceView> 페이지 개발자와 데이터 바인딩된 컨트롤 작성자 직접 호출 하지 않습니다 ExecuteUpdate 메서드; 대신, 공개적으로 노출 된 상태로 사용 하 여 <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A>메서드.</xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A>       에 포함 된 값의 `keys` 및 `values` 컬렉션 평가 되 고 포함 된 모든 값과 병합는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A>컬렉션.</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A> 경우는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A>속성이로 설정 되는 <xref:System.Web.UI.ConflictOptions>값, 값에 포함 된는 `oldValues` 컬렉션으로 지정 된는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A>속성 고 병합 됩니다.</xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A> </xref:System.Web.UI.ConflictOptions> </xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A>       업데이트 작업을 수행 하기 전에 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating%2A>를 발생 시키는 메서드는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Updating>이벤트.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Updating> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating%2A> 이 이벤트는 매개 변수의 값을 확인 하 고 업데이트 하기 전에 전처리를 수행할 수를 처리할 수 있습니다. 업데이트 작업을 수행 하는 <xref:System.Web.UI.WebControls.ObjectDataSourceView>리플렉션을 사용 하 여로 식별 되는 메서드를 호출 하는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A>속성 및 연관 된 모든 매개 변수는 `keys` 컬렉션 합니다. 빌드한 다음 실행</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView> 작업이 완료 되는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated%2A>를 발생 시키는 메서드는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Updated>이벤트.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Updated> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated%2A> 모든 반환 값, 오류 코드를 검사 하려면이 이벤트를 처리 하 고 후 처리를 수행할 수 있습니다.       업데이트 된 행 수를 반환 하는 방법에 대 한 자세한 내용은 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A>.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A> 을 참조 하십시오."
  syntax:
    content: protected override int ExecuteUpdate (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues);
    parameters:
    - id: keys
      type: System.Collections.IDictionary
      description: "A <xref:System.Collections.IDictionary>의 기본 키를 사용 하는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>속성 업데이트 데이터베이스 작업을 수행 합니다.</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*> </xref:System.Collections.IDictionary> 메서드와 연결 된 키가 있는 경우 전달 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
    - id: values
      type: System.Collections.IDictionary
      description: "A <xref:System.Collections.IDictionary>함께 사용 되는 값의는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>업데이트 데이터베이스 작업을 수행 합니다.</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*> </xref:System.Collections.IDictionary> 메서드와 연결 된 매개 변수가 없는 경우 전달 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
    - id: oldValues
      type: System.Collections.IDictionary
      description: "A <xref:System.Collections.IDictionary>내부 데이터 저장소에 있는 원래 값을 나타내는입니다.</xref:System.Collections.IDictionary> 쿼리에 연결 된 매개 변수가 없는 경우 전달 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
    return:
      type: System.Int32
      description: "업데이트 된 행 수 또는 수를 알 수 없는 경우-1을 추가 합니다. 자세한 내용은 <xref:System.Web.UI.WebControls.ObjectDataSource.Update*>.</xref:System.Web.UI.WebControls.ObjectDataSource.Update*> 을 참조 하십시오."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref:System.Web.UI.WebControls.ObjectDataSourceView.CanInsert*>속성에서 반환 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.ObjectDataSourceView.CanInsert*>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>oldValues</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> or empty and <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection*> is set to <xref href=&quot;System.Web.UI.ConflictOptions&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression
  id: FilterExpression
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: FilterExpression
  nameWithType: ObjectDataSourceView.FilterExpression
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "비즈니스 개체 메서드 때 적용 되는 필터링 식을 가져오거나 설정 합니다.로 식별 되는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod*>속성이 호출 되었습니다.</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod*>"
  remarks: "<xref:System.Web.UI.WebControls.ObjectDataSource>컨트롤이 데이터 필터링을 지 원하는 경우에만 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>메서드가 반환 되는 <xref:System.Data.DataSet>, <xref:System.Data.DataView>, 또는 <xref:System.Data.DataTable>개체.</xref:System.Data.DataTable> </xref:System.Data.DataView> </xref:System.Data.DataSet> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Web.UI.WebControls.ObjectDataSource>       에 사용 되는 구문에서 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>속성은 형식 문자열 스타일 식.</xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> 필터 식 구문은에 허용 되는 동일한 구문을 <xref:System.Data.DataView.RowFilter%2A>속성 필터 식에 적용 되므로 <xref:System.Data.DataView.RowFilter%2A>속성은 <xref:System.Data.DataView>실행에서 반환 되는 개체는 <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>메서드.</xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> </xref:System.Data.DataView> </xref:System.Data.DataView.RowFilter%2A> </xref:System.Data.DataView.RowFilter%2A> (자세한 내용은 참조 <xref:System.Data.DataColumn.Expression%2A>.)</xref:System.Data.DataColumn.Expression%2A> 매개 변수를 추가 하는 경우는 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A>컬렉션을 포함할 수도 있습니다 형식 문자열에 자리 표시자, 예를 들어 `&quot;{0}&quot;`, 대체 매개 변수 값에 대 한 식에.</xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> 인덱스에 있는 매개 변수 자리 표시자는는 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A>컬렉션.</xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A>       <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>.</xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> 매개 변수를 포함할 수 있습니다. 매개 변수 형식의 문자열 또는 문자 형식인 경우 매개 변수를 작은따옴표로 묶어야 합니다. 매개 변수가 숫자 형식인 경우에 인용 부호 필요 하지 않습니다. <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A>컬렉션 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>.</xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> 에 자리 표시자를 평가 하는 매개 변수를 포함 합니다.</xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A>       속성은 FilterExpression 값 뷰 상태에 저장 합니다.      > [!IMPORTANT] > 클라이언트에서 수신 하는 모든 필터 매개 변수 값의 유효성을 검사 하는 것이 좋습니다. 런타임에 매개 변수 값은 필터 식으로 대체 하 고에 적용 됩니다는 <xref:System.Data.DataView>에서 반환 되는 개체는 <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>메서드.</xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> </xref:System.Data.DataView> 사용 하는 경우는 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>필터링이 발생 하기 전에 매개 변수 값의 유효성을 검사 해야 반환 되는 항목의 수를 제한 하려면 보안 조치로 속성.</xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>"
  example:
  - "This section contains two code examples. The first code example demonstrates how to display filtered data using an <xref:System.Web.UI.WebControls.ObjectDataSource> control to retrieve data from a middle-tier business object and a <xref:System.Web.UI.WebControls.GridView> control to display the results. The second code example provides an example of the middle-tier business object that is used in the first code example.  \n  \n The following code example demonstrates how to display filtered data using an <xref:System.Web.UI.WebControls.ObjectDataSource> control to retrieve data from a middle-tier business object and a <xref:System.Web.UI.WebControls.GridView> control to display the results. The <xref:System.Web.UI.WebControls.ObjectDataSource> control can filter data only when the method that retrieves the data retrieves it as a <xref:System.Data.DataSet> object. For this reason, the <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> property identifies a business object method that retrieves data as a <xref:System.Data.DataSet>.  \n  \n The code example consists of a <xref:System.Web.UI.WebControls.TextBox>, a <xref:System.Web.UI.WebControls.GridView> control, the <xref:System.Web.UI.WebControls.ObjectDataSource> control, and a **Submit** button. By default, the <xref:System.Web.UI.WebControls.TextBox> is populated with the name of one of the Northwind Traders employees. The <xref:System.Web.UI.WebControls.GridView> displays information about the employee that is identified by the name in the <xref:System.Web.UI.WebControls.TextBox>. To retrieve data on another employee, in the <xref:System.Web.UI.WebControls.TextBox>, enter the full name of the employee, and then click the **Submit** button.  \n  \n The FilterExpression property specifies an expression that is used to filter the data that is retrieved by the <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> property. It uses parameter placeholders that are evaluated to the parameters that are contained in the <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A> collection. In this example, the parameter placeholder is bounded by single quotation marks because the type of the parameter is a string type that might contain spaces. If the type of the parameter is a numeric or date type, bounding quotation marks are not required.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_9#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1284_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_9#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1284_1.aspx)]  \n  \n The following code example provides an example of a middle-tier business object that the preceding code example uses. The code example consists of two basic classes:  \n  \n-   The `EmployeeLogic` class, which is a class that encapsulates business logic.  \n  \n-   The `NorthwindEmployee` class, which is a model class that contains only the basic functionality that is required to load and persist data from the data tier.  \n  \n For simplicity, the `EmployeeLogic` class creates a static set of data, rather than retrieving the data from a data tier. It is also helpful for this example, because the sample relies on you to provide the full name of a Northwind Traders employee to demonstrate filtering.  \n  \n For a complete working example, you must compile and use these classes with the Web Forms page code examples that are provided.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_9#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1284_2.cs)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_9#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1284_2.vb)]"
  syntax:
    content: public string FilterExpression { get; set; }
    return:
      type: System.String
      description: "로 식별 되는 비즈니스 개체 메서드를 사용 하 여 데이터를 검색할 때 적용 되는 필터링 식을 나타내는 문자열의 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod*>속성.</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod*>"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "FilterExpression 속성에 설정 및 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select*>메서드 반환 하지 않습니다는 <xref href=&quot;System.Data.DataSet&quot;> </xref>.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Select*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Filtering
  id: Filtering
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: Filtering
  nameWithType: ObjectDataSourceView.Filtering
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Filtering
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "필터 작업 전에 발생합니다."
  remarks: "처리는 <xref:System.Web.UI.WebControls.ObjectDataSource.Filtering>하기 전에 필터 매개 변수 값에 대해 유효성 검사 작업을 수행 하는 이벤트는 <xref:System.Web.UI.WebControls.ObjectDataSource>컨트롤이 필터 작업을 수행 합니다.</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.ObjectDataSource.Filtering> 취소할 수 있습니다는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>설정 하 여 작업의 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>의 속성은 <xref:System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs>개체를 `true`.</xref:System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> 경우에이 이벤트는 발생 된 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>속성을 설정 합니다.</xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.      > [!IMPORTANT] > 클라이언트에서 수신 하는 모든 필터 매개 변수 값의 유효성을 검사 해야 합니다. 런타임에 매개 변수 값은 필터 식으로 대체 하 고에 적용 됩니다는 <xref:System.Data.DataView>에서 반환 되는 개체는 <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>메서드.</xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> </xref:System.Data.DataView> 사용 하는 경우는 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>필터링이 발생 하기 전에 매개 변수 값의 유효성을 검사 해야 반환 되는 항목의 수를 제한 하려면 보안 조치로 속성.</xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>"
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler Filtering;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters
  id: FilterParameters
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: FilterParameters
  nameWithType: ObjectDataSourceView.FilterParameters
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "에 있는 모든 매개 변수 자리 표시자와 관련 된 매개 변수 컬렉션을 가져옵니다는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression*>문자열.</xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression*>"
  remarks: "<xref:System.Web.UI.WebControls.ObjectDataSource>컨트롤이 데이터 필터링을 지 원하는 경우에만 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>메서드가 반환 되는 <xref:System.Data.DataSet>, <xref:System.Data.DataTable>, 또는 <xref:System.Data.DataView>개체.</xref:System.Data.DataView> </xref:System.Data.DataTable> </xref:System.Data.DataSet> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Web.UI.WebControls.ObjectDataSource>       FilterParameters 컬렉션의 매개 변수는에 지정 된 매개 변수와 연결 된 <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A>속성.</xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A> 에 지정 된 매개 변수 자리 표시자는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A>메서드에 의해 지정 된 경우 속성 FilterParameters 컬렉션의 매개 변수 개체에 대응 됩니다는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A>속성이 호출 되었습니다.</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A>"
  example:
  - "This section contains two code examples. The first code example demonstrates how to display filtered data using an <xref:System.Web.UI.WebControls.ObjectDataSource> control to retrieve data from a middle-tier business object and a <xref:System.Web.UI.WebControls.GridView> control to display the results. The second code example provides an example of the middle-tier business object that is used in the first code example.  \n  \n The following code example demonstrates how to display filtered data using an <xref:System.Web.UI.WebControls.ObjectDataSource> control to retrieve data from a middle-tier business object and a <xref:System.Web.UI.WebControls.GridView> control to display the results. The <xref:System.Web.UI.WebControls.ObjectDataSource> control can filter data only when the method that retrieves the data retrieves it as a <xref:System.Data.DataSet> object. For this reason, the <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> property identifies a business object method that retrieves data as a <xref:System.Data.DataSet>.  \n  \n The code example consists of a <xref:System.Web.UI.WebControls.TextBox>, a <xref:System.Web.UI.WebControls.GridView> control, the <xref:System.Web.UI.WebControls.ObjectDataSource> control, and a **Submit** button. By default, the <xref:System.Web.UI.WebControls.TextBox> is populated with the name of one of the Northwind Traders employees. The <xref:System.Web.UI.WebControls.GridView> displays information about the employee that is identified by the name in the <xref:System.Web.UI.WebControls.TextBox>. To retrieve data on another employee, in the <xref:System.Web.UI.WebControls.TextBox>, enter the full name of the employee, and then click the **Submit** button.  \n  \n The <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A> property specifies an expression that is used to filter the data that is retrieved by the method specified by the <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> property. It uses parameter placeholders that are evaluated to the parameters that are contained in the FilterParameters collection. In this example, the parameter placeholder is bounded by single quotation marks because the type of the parameter is a string type that might contain spaces. If the type of the parameter is a numeric or date type, bounding quotation marks are not required. The FilterParameters collection contains one parameter, a <xref:System.Web.UI.WebControls.FormParameter> that is bound to the <xref:System.Web.UI.WebControls.TextBox> control.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_9#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1120_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_9#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1120_1.aspx)]  \n  \n The following code example provides an example of a middle-tier business object that the preceding code example uses. The code example consists of two basic classes:  \n  \n-   The `EmployeeLogic` class, which is a class that encapsulates business logic.  \n  \n-   The `NorthwindEmployee` class, which is a model class that contains only the basic functionality that is required to load and persist data from the data tier.  \n  \n For simplicity, the `EmployeeLogic` class creates a static set of data, rather than retrieving the data from a data tier. It is also helpful for this example, because the sample relies on you to provide the full name of a Northwind Traders employee to demonstrate filtering.  \n  \n For a complete working example, you must compile and use these classes with the Web Forms page code examples that are provided.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_9#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1120_2.cs)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_9#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1120_2.vb)]"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection FilterParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.ParameterCollection&quot;> </xref> 에 모든 매개 변수 자리 표시자와 연관 된 매개 변수 집합을 포함 하는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression*>속성.</xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression*>"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<> </> *> 속성이 설정 된 및 <> </> *> 메서드가 반환 하지 않습니다는 <xref href=&quot;System.Data.DataSet&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Insert(System.Collections.IDictionary)
  id: Insert(System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: Insert(IDictionary)
  nameWithType: ObjectDataSourceView.Insert(IDictionary)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Insert(IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "로 식별 되는 비즈니스 개체 메서드를 호출 하 여 삽입 작업을 수행 합니다.는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*>사용 하 여 지정 된 속성 <code> values </code> 컬렉션.</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*>"
  remarks: "기본 반환 값은-1로, 알 수 없는 개수의 행이 삽입 된 것을 의미 합니다. 다른 값을 반환 하려면 설정는 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A>속성은 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>의 개체는 <xref:System.Web.UI.WebControls.ObjectDataSource.Inserted>이벤트.</xref:System.Web.UI.WebControls.ObjectDataSource.Inserted> </xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> </xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A> 일반적으로 반환 된 영향을 받는 행 수는 `Insert` 비즈니스 개체 및 해당 값에 대 한 메서드는에서 사용할 수는 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A>의 속성은 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>의 개체는 <xref:System.Web.UI.WebControls.ObjectDataSource.Inserted>이벤트.</xref:System.Web.UI.WebControls.ObjectDataSource.Inserted> </xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> </xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A>       Insert 메서드 호출의 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteInsert%2A>전달 하는 메서드는 `values` 컬렉션.</xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteInsert%2A>"
  syntax:
    content: public int Insert (System.Collections.IDictionary values);
    parameters:
    - id: values
      type: System.Collections.IDictionary
      description: "A <xref:System.Collections.IDictionary>함께 사용 하는 매개 변수 컬렉션을는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*>속성을 삽입 작업을 수행 합니다.</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*> </xref:System.Collections.IDictionary> 메서드와 연결 된 매개 변수가 없는 경우 전달 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
    return:
      type: System.Int32
      description: "삽입 된; 행의 수 그렇지 않으면-1 수를 알 수 없는 경우."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.Insert*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref:System.Web.UI.WebControls.ObjectDataSourceView.CanInsert*>속성에서 반환 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.ObjectDataSourceView.CanInsert*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Inserted
  id: Inserted
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: Inserted
  nameWithType: ObjectDataSourceView.Inserted
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Inserted
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "발생 경우는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert*>작업이 완료 된.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert*>"
  remarks: "출력 매개 변수 및 반환 값의 값을 확인 하거나 후 예외가 throw 되었는지 여부를 확인 하려면 Inserted 이벤트를 처리 한 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>작업이 완료 된.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> 사용할 수 있는 반환 값, 출력 매개 변수 및 속성을 처리 하는 예외는 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>이벤트와 연결 된 개체입니다.</xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다."
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Inserted;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Inserting
  id: Inserting
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: Inserting
  nameWithType: ObjectDataSourceView.Inserting
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Inserting
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "앞에 오는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert*>작업.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert*>"
  remarks: "삽입 이벤트를 처리 매개 변수 값의 유효성을 검사 하는 응용 프로그램에 적용 되는 추가 초기화 작업을 수행할 또는 하기 전에 값을 매개 변수를 변경 하는 <xref:System.Web.UI.WebControls.ObjectDataSource>컨트롤 수행 되는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>작업.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> 매개 변수는 사용할 수는 <xref:System.Collections.IDictionary>액세스 하는 컬렉션의 <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A>속성에 의해 노출 되는 <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs>개체입니다.</xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> </xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> </xref:System.Collections.IDictionary>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다."
  example:
  - "This section contains two code examples. The first code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.DetailsView> control to insert data. The second code example provides an example of the middle-tier business object that is used in the first code example.  \n  \n The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.DetailsView> control to insert data. The <xref:System.Web.UI.WebControls.DetailsView> initially displays a new `NorthwindEmployee` record, along with an automatically generated **Insert** button. After you enter data into the fields of the <xref:System.Web.UI.WebControls.DetailsView> control, click the **Insert** button. The <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> property identifies which method performs the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> operation.  \n  \n In this code example, the `UpdateEmployeeInfo` method is used to perform an insert; however it requires a `NorthwindEmployee` parameter to insert the data. For this reason, the collection of strings that the <xref:System.Web.UI.WebControls.DetailsView> control passes automatically is not sufficient. The `NorthwindEmployeeInserting` delegate is an <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler> object that handles the Inserting event and enables you to manipulate the input parameters before the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> operation proceeds. Because the `UpdateEmployeeInfo` method requires a `NorthwindEmployee` object as a parameter, one is created using the collection of strings, and then added to the <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> collection using a parameter name (`ne`) that the method expects. You might perform steps like these when using an existing middle-tier object as a data source with types and methods that are not designed specifically for use with the <xref:System.Web.UI.WebControls.ObjectDataSource> control.  \n  \n When the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> operation is performed, the method that is identified by the <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> property is called. If the `Insert` method of the object has a method signature that includes parameters, the <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A> collection must contain a parameter with names that match the method signature parameters for the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> method to complete successfully.  \n  \n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_4#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_22_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_4#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_22_1.aspx)]  \n  \n The following code example provides an example of a middle-tier business object that the preceding code example uses. The code example consists of two basic classes:  \n  \n-   The `EmployeeLogic` class, which is a stateless class that encapsulates business logic.  \n  \n-   The `NorthwindEmployee` class, which is a model class that contains only the basic functionality that is required to load and persist data from the data tier.  \n  \n An additional `NorthwindDataException` class is provided as a convenience.  \n  \n For a complete working example, you must compile and use these classes. The `UpdateEmployeeInfo` method is not completely implemented, so you will not insert data into the Northwind Traders database when you experiment with this example.  \n  \n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_4#2](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_22_2.vb)]\n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_4#2](~/add/codesnippet/csharp/e-system.web.ui.webcontr_22_2.cs)]"
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Inserting;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod
  id: InsertMethod
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: InsertMethod
  nameWithType: ObjectDataSourceView.InsertMethod
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "메서드 또는 함수의 이름을 가져오거나는 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> 개체 호출 데이터를 삽입 합니다."
  remarks: "InsertMethod 속성으로 식별 되는 메서드는 인스턴스 메서드 일 수 또는 `static` (`Shared` Visual basic에서) 메서드. 인스턴스 메서드인 경우 비즈니스 개체가 생성 되 고 InsertMethod 속성에 지정 된 메서드를 호출할 때마다 제거 합니다. 처리할 수는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated>InsertMethod 속성에 지정 된 메서드를 호출 하기 전에 비즈니스 개체를 사용 하는 이벤트입니다.</xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated> 처리할 수도 있습니다는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing>InsertMethod 속성에 지정 된 메서드가 호출 된 후 발생 하는 이벤트입니다.</xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing> (`Dispose` 비즈니스 개체를 구현 하는 경우에 호출 되는 <xref:System.IDisposable>인터페이스입니다.)</xref:System.IDisposable> 메서드가 `static` (`Shared` Visual basic에서) 메서드를 비즈니스 개체를 만들지는 및 이러한 이벤트를 처리할 수 없습니다.       비즈니스 개체가 <xref:System.Web.UI.WebControls.ObjectDataSource>둘 이상의 메서드 또는 함수 같은 이름의 (메서드 오버 로드)을 구현 하는 개체, 데이터 소스 컨트롤의 매개 변수를 포함 하 여 조건의 집합에 따라 올바른 메서드나를 호출 하려고 시도 <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A>컬렉션.</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> 경우에 매개 변수는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A>컬렉션 InsertMethod 속성 서명으로 지정한 메서드의의 인수와 일치 하지 않는 경우 예외를 throw 하는 데이터 원본.</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A>       속성은 InsertMethod 값 뷰 상태에 저장 합니다.       자세한 내용은 <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>.</xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> 을 참조 하십시오."
  example:
  - "This section contains two code examples. The first code example demonstrates how to display filtered data using an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.DetailsView> control to insert data. The second code example provides an example of the middle-tier business object that is used in the first code example.  \n  \n The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.DetailsView> control to insert data. The <xref:System.Web.UI.WebControls.DetailsView> initially displays a new `NorthwindEmployee` record, along with an automatically generated **Insert** button. After you enter data into the fields of the <xref:System.Web.UI.WebControls.DetailsView> control, click the **Insert** button. The InsertMethod property identifies which method performs the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> operation.  \n  \n In this code example, the `UpdateEmployeeInfo` method is used to perform an insert; however, it requires a `NorthwindEmployee` parameter to insert the data. For this reason, the collection of strings that the <xref:System.Web.UI.WebControls.DetailsView> control passes automatically is not sufficient. The `NorthwindEmployeeInserting` delegate is an <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler> object that handles the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Inserting> event and enables you to manipulate the input parameters before the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> operation proceeds. Because the `UpdateEmployeeInfo` method requires a `NorthwindEmployee` object as a parameter, one is created using the collection of strings and is added to the <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> collection using a parameter name (`ne`) that the method expects. You might perform steps like these when using an existing middle-tier object as a data source with types and methods that are not designed specifically for use with the <xref:System.Web.UI.WebControls.ObjectDataSource> control.  \n  \n When the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> operation is performed, the method that is identified by the InsertMethod property is called. If the `Insert` method of the object has a method signature that includes parameters, the <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A> collection must contain a parameter with names that match the method signature parameters for the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> method to complete successfully.  \n  \n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_4#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1176_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_4#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1176_1.aspx)]  \n  \n The following code example provides an example of a middle-tier business object that the previous code example uses. The code example consists of two basic classes and an additional class:  \n  \n-   The `EmployeeLogic` class is a stateless class, which encapsulates business logic.  \n  \n-   The `NorthwindEmployee` class is a model class, which contains only the basic functionality that is required to load and persist data from the data tier.  \n  \n-   An additional `NorthwindDataException` class is provided as a convenience.  \n  \n For a complete working example, you must compile and use these classes. The `UpdateEmployeeInfo` method is not completely implemented, so you will not insert data into the Northwind Traders database when you experiment with this code example.  \n  \n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_4#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1176_2.vb)]\n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_4#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1176_2.cs)]"
  syntax:
    content: public string InsertMethod { get; set; }
    return:
      type: System.String
      description: "사용 하는 함수 또는 메서드의 이름을 나타내는 문자열의 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> 사용 하 여 데이터를 삽입 합니다. 기본값은 빈 문자열 (&quot;&quot;)."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters
  id: InsertParameters
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: InsertParameters
  nameWithType: ObjectDataSourceView.InsertParameters
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "사용 되는 매개 변수를 포함 하는 매개 변수 컬렉션을 가져옵니다는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*>메서드.</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*>"
  remarks: "이름 및 유형의 InsertParameters 컬렉션에 포함 된 매개 변수 이름 및 지정 된 메서드에 매개 변수의 형식을 일치 해야 합니다는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A>속성 서명.</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> 와 같은 매개 변수를 제공 하는 데이터 바인딩된 컨트롤을 작업할 때 <xref:System.Web.UI.WebControls.GridView>및 <xref:System.Web.UI.WebControls.DetailsView>, <xref:System.Web.UI.WebControls.ObjectDataSource>컨트롤이 데이터 바인딩된 컨트롤에서 제공 되는 이러한 매개 변수를 사용 하 여 컬렉션에 명시적으로 지정 된 매개 변수를 자동으로 병합 합니다.</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> 자세한 내용은 <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>.</xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> 을 참조 하십시오."
  example:
  - "This section contains two code examples. The first code example demonstrates how to display filtered data using an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.DetailsView> control to insert data. The second code example provides an example implementation of the `Insert` method that is used in the first code example.  \n  \n The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.DetailsView> control to insert data. The <xref:System.Web.UI.WebControls.DetailsView> initially displays a new `NorthwindEmployee` record, along with an automatically generated **Insert** button. After you enter data into the fields of the <xref:System.Web.UI.WebControls.DetailsView> control, click the **Insert** button. The <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> property identifies which method performs the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> operation.  \n  \n If you click the **Insert** button, the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> operation is performed using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> property and any parameters that are specified in the InsertParameters collection. In this code example, one parameter is specified in the InsertParameters collection that corresponds to the supervisor's ID. This is because even though the ID is displayed in the <xref:System.Web.UI.WebControls.DetailsView.Fields%2A> collection for the <xref:System.Web.UI.WebControls.DetailsView> control as a <xref:System.Web.UI.WebControls.BoundField> object, it will be passed as a string to the <xref:System.Web.UI.WebControls.ObjectDataSource> control. By adding it explicitly to the InsertParameters collection with a <xref:System.Web.UI.WebControls.Parameter.Type%2A> property that is set to the <xref:System.TypeCode> value, it will be passed correctly by the <xref:System.Web.UI.WebControls.ObjectDataSource> to the method as an `int`, not as `string`.  \n  \n When the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> operation is performed, the method that is identified by the <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> property is called. If the `Insert` method of the object has a method signature that includes parameters, the InsertParameters collection must contain a parameter with names that match the method signature parameters for the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> to complete successfully.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_8#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_138_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_8#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_138_1.aspx)]  \n  \n The following code example provides an example implementation of the `Insert` method that the preceding code example uses. The `InsertNewEmployeeWrapper` method is added to the `EmployeeLogic` middle-tier object to enable the object to work more easily with the <xref:System.Web.UI.WebControls.ObjectDataSource> control in Web scenarios, without a substantial rewrite to the actual business logic.  \n  \n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_8#3](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_138_2.vb)]\n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_8#3](~/add/codesnippet/csharp/p-system.web.ui.webcontr_138_2.cs)]"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection InsertParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.ParameterCollection&quot;> </xref> 에서 사용 하는 매개 변수를 포함 하는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*>속성.</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*>"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.IsTrackingViewState
  id: IsTrackingViewState
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: IsTrackingViewState
  nameWithType: ObjectDataSourceView.IsTrackingViewState
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.IsTrackingViewState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "나타내는 값을 가져옵니다 여부는 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> 개체가 해당 뷰 상태의 변경 내용을 저장 합니다."
  syntax:
    content: protected bool IsTrackingViewState { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>를 데이터 원본 뷰는 해당 상태를 저장 하도록 표시 되어 있으면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.IsTrackingViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState(System.Object)
  id: LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: LoadViewState(Object)
  nameWithType: ObjectDataSourceView.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "이전에 저장 된 데이터 원본 뷰에 대 한 뷰 상태를 복원 합니다."
  remarks: "이 메서드는.NET Framework 인프라에서 주로 사용 하 고 사용자 코드에서 직접 사용할 수 없습니다.  그러나 컨트롤 개발자가 사용자 지정 서버 컨트롤에서 해당 뷰 상태를 복원 하는 방법을 지정 하려면이 메서드를 재정의할 수 있습니다. 자세한 내용은 참조 [ASP.NET 상태 관리 개요](~/add/includes/ajax-current-ext-md.md)합니다.       LoadViewState 메서드 복원에 대 한 뷰 상태 정보는 <xref:System.Web.UI.WebControls.ObjectDataSourceView>에서 저장 된 이전 페이지 요청에서 개체는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState%2A>메서드.</xref:System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView>"
  syntax:
    content: protected virtual void LoadViewState (object savedState);
    parameters:
    - id: savedState
      type: System.Object
      description: "나타내는 개체는 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> 상태를 복원 합니다."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName
  id: MaximumRowsParameterName
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: MaximumRowsParameterName
  nameWithType: ObjectDataSourceView.MaximumRowsParameterName
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "데이터 소스 페이징 지원에 대 한 검색할 레코드 수를 지정 하는 데 사용 되는 데이터 검색 메서드 매개 변수의 이름을 가져오거나 설정 합니다."
  remarks: "MaximumRowsParameterName 속성은 데이터 소스 페이징을 지 원하는 데 사용 됩니다. 자세한 내용은 <xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A>.</xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A> 을 참조 하십시오.       속성은 MaximumRowsParameterName 값 뷰 상태에 저장 합니다."
  syntax:
    content: public string MaximumRowsParameterName { get; set; }
    return:
      type: System.String
      description: "검색할 레코드 수를 지정 하는 데 사용 하는 메서드 매개 변수의 이름입니다. 기본값은 `&quot;maximumRows&quot;`합니다."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated
  id: ObjectCreated
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: ObjectCreated
  nameWithType: ObjectDataSourceView.ObjectCreated
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "뒤에 오는 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> 개체로 식별 되는 형식의 인스턴스를 만듭니다는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.TypeName*>속성.</xref:System.Web.UI.WebControls.ObjectDataSourceView.TypeName*>"
  remarks: "속성을 설정 비즈니스 개체의 다른 메서드를 호출 하거나 앞에 비즈니스 개체에만 적용 되는 다른 초기화를 수행 하도록 ObjectCreated 이벤트 처리는 <xref:System.Web.UI.WebControls.ObjectDataSource>제어 호출은 `Data` 비즈니스 개체에 대 한 메서드.</xref:System.Web.UI.WebControls.ObjectDataSource> 액세스 하는 개체에 대 한 참조는 <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A>속성에 의해 노출 되는 <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>개체입니다.</xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs> </xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A>       메서드를 식별 하는 데이터 작업을 수행 하는 데는 경우 `static` (`Shared` Visual basic에서), <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating>고 ObjectCreated 이벤트가 발생 하지 않습니다.</xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating>"
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler ObjectCreated;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating
  id: ObjectCreating
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: ObjectCreating
  nameWithType: ObjectDataSourceView.ObjectCreating
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "앞에 오는 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> 개체로 식별 되는 형식의 인스턴스를 만듭니다는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.TypeName*>속성.</xref:System.Web.UI.WebControls.ObjectDataSourceView.TypeName*>"
  remarks: "<xref:System.Web.UI.WebControls.ObjectDataSource>컨트롤이 자동으로 리플렉션을 사용 하 여 해당 형식의 인스턴스를 만들려는 비즈니스 개체의 기본 생성자를 호출 합니다.</xref:System.Web.UI.WebControls.ObjectDataSource> 다른 생성자를 명시적으로 호출 하 고 결과를 개체의 인스턴스를 설정 하려면 ObjectCreating 이벤트를 처리 하는 <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A>속성은 연결 된 <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>개체입니다.</xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs> </xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.       메서드를 식별 하는 데이터 작업을 수행 하는 데는 경우 `static` (`Shared` Visual basic에서)는 ObjectCreating 및 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated>이벤트는 발생 하지 않습니다.</xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated>"
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler ObjectCreating;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing
  id: ObjectDisposing
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: ObjectDisposing
  nameWithType: ObjectDataSourceView.ObjectDisposing
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "발생 경우는 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> 개체가 생성 하는 개체의 인스턴스를 삭제 합니다."
  remarks: "ObjectDisposing 이벤트는 비즈니스 개체의 인스턴스가 삭제 되기 전에 발생 합니다. 비즈니스 개체를 구현 하는 경우는 <xref:System.IDisposable>인터페이스는 <xref:System.IDisposable.Dispose%2A>The ObjectDisposing 이벤트가 발생 한 후 메서드는.</xref:System.IDisposable.Dispose%2A> </xref:System.IDisposable>       개체에 다른 메서드를 호출 하 고 속성을 설정 하거나 개체를 제거 하기 전에 개체에 지정 된 정리를 수행 하 ObjectDisposing 이벤트를 처리 합니다. 액세스 하는 개체에 대 한 참조는 <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A>속성에 의해 노출 되는 <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>개체입니다.</xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs> </xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A>       메서드를 식별 하는 데이터 작업을 수행 하는 데는 경우 `static` (`Shared` Visual basic에서), ObjectDisposing 이벤트는 발생 하지 않습니다."
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler ObjectDisposing;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString
  id: OldValuesParameterFormatString
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: OldValuesParameterFormatString
  nameWithType: ObjectDataSourceView.OldValuesParameterFormatString
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "에 전달 되는 원래 값에 대 한 매개 변수 이름에 적용할 형식 문자열을 가져오거나 설정 합니다.는 <xref uid=&quot;langword_csharp_Delete&quot; name=&quot;Delete&quot; href=&quot;&quot;> </xref> 또는 <xref uid=&quot;langword_csharp_Update&quot; name=&quot;Update&quot; href=&quot;&quot;> </xref> 메서드."
  remarks: "OldValuesParameterFormatString 형식 문자열이로 식별 하는 것과 같은 기본 키에 적용 되는 `DataKeyNames` 또는 삭제에는 데이터 바인딩된 컨트롤의 속성 및 업데이트 시나리오, 여기서는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A>속성이로 설정 되어는 <xref:System.Web.UI.ConflictOptions>값과 해당 데이터 메서드에 전달 되는 원래 값의 집합입니다.</xref:System.Web.UI.ConflictOptions> </xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A>       OldValuesParameterFormatString 속성을 변경할 수 있는 두 가지 일반적인 시나리오는 다음과 같습니다.-업데이트에 이전 및 새 값을 구분할 수 있습니다. 경우는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A>속성이로 설정 되는 <xref:System.Web.UI.ConflictOptions>의 값, 매개 변수는 원래 값과 새 값 모두에 추가 됩니다는 <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A>컬렉션.</xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> </xref:System.Web.UI.ConflictOptions> </xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A> 서식 문자열 사용 하지 않고 동일한 이름 가진 두 개의 매개 변수는 각 데이터 필드에 대 한 만들어졌습니다. 원래 값 매개 변수의 이름을 변경 하 여 충돌을 감지 하 고 키 값을 비교 하려면 데이터 원본에 데이터를 비교할 수 있습니다.      -일부 비주얼 디자이너에는 원래 값 및 키에 대 한 특정 이름 지정 체계를 구현 합니다.       OldValuesParameterFormatString 값 뷰 상태에 저장 됩니다."
  syntax:
    content: public string OldValuesParameterFormatString { get; set; }
    return:
      type: System.String
      description: "모든 이름에 적용 된 형식 문자열을 나타내는 문자열로 <code> oldValues </code> 에 전달 되는 <> </> *> 또는 <> </> *> 메서드. 기본값은 &quot;{0}&quot; 매개 변수 이름은 필드 이름 단순히 것을 의미 합니다."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  id: OnDeleted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: OnDeleted(ObjectDataSourceStatusEventArgs)
  nameWithType: ObjectDataSourceView.OnDeleted(ObjectDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted(ObjectDataSourceStatusEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "발생는 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView.Deleted&quot;> </xref> 후 이벤트는 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> 개체가 삭제 작업을 완료 합니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.       OnDeleted 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  example:
  - "The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.GridView> control to delete data. The <xref:System.Web.UI.WebControls.GridView> initially displays a set of all employees, using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> property to retrieve the data from the `EmployeeLogic` object. Because the <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> property is set to `true`, the <xref:System.Web.UI.WebControls.GridView> control automatically displays a **Delete** button.  \n  \n If you click the **Delete** button, the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> operation is performed using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> property and any parameters that are specified in the <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A> collection. In this code example, some preprocessing and post-processing steps are also performed. The `NorthwindEmployeeDeleting` delegate is called to handle the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleting> event before the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> operation is performed, and the `NorthwindEmployeeDeleted` delegate is called to handle the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleted> event after the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> operation has completed, to perform an exception handling. In this example, if a `NorthwindDataException` is thrown, it is handled by this delegate.  \n  \n To examine the implementation of the `EmployeeLogic` middle-tier business object that this code example uses, see <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_10#1](~/add/codesnippet/csharp/bc34632f-3713-4841-acd5-_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/add/codesnippet/visualbasic/bc34632f-3713-4841-acd5-_1.aspx)]"
  syntax:
    content: protected virtual void OnDeleted (System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs
      description: "<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)
  id: OnDeleting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: OnDeleting(ObjectDataSourceMethodEventArgs)
  nameWithType: ObjectDataSourceView.OnDeleting(ObjectDataSourceMethodEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting(ObjectDataSourceMethodEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "발생는 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView.Deleting&quot;> </xref> 이전 이벤트는 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> 개체 삭제 작업을 시도 합니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.       OnDeleting 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  example:
  - "The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.GridView> control to delete data. The <xref:System.Web.UI.WebControls.GridView> initially displays a set of all employees, using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> property to retrieve the data from the `EmployeeLogic` object. Because the <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> property is set to `true`, the <xref:System.Web.UI.WebControls.GridView> control automatically displays a **Delete** button.  \n  \n If you click the **Delete** button, the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> operation is performed using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> property and any parameters that are specified in the <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A> collection. In this code example, some preprocessing and post-processing steps are also performed. The `NorthwindEmployeeDeleting` delegate is called to handle the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleting> event before the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> operation is performed, and the `NorthwindEmployeeDeleted` delegate is called to handle the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleted> event after the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> operation has completed, to perform an exception handling. In this example, if a `NorthwindDataException` is thrown, it is handled by this delegate.  \n  \n To examine the implementation of the `EmployeeLogic` middle-tier business object that this code example uses, see <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_10#1](~/add/codesnippet/csharp/6b2992c6-c81b-455e-8607-_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/add/codesnippet/visualbasic/6b2992c6-c81b-455e-8607-_1.aspx)]"
  syntax:
    content: protected virtual void OnDeleting (System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs
      description: "<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnFiltering(System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs)
  id: OnFiltering(System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: OnFiltering(ObjectDataSourceFilteringEventArgs)
  nameWithType: ObjectDataSourceView.OnFiltering(ObjectDataSourceFilteringEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnFiltering(ObjectDataSourceFilteringEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "발생는 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView.Filtering&quot;> </xref> 이전 이벤트는 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> 개체가 필터링 작업을 시도 합니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.       OnFiltering 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnFiltering (System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs
      description: "<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.OnFiltering*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnInserted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  id: OnInserted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: OnInserted(ObjectDataSourceStatusEventArgs)
  nameWithType: ObjectDataSourceView.OnInserted(ObjectDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnInserted(ObjectDataSourceStatusEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "발생는 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView.Inserted&quot;> </xref> 후 이벤트는 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> 개체가 삽입 작업을 완료 합니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.       OnInserted 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnInserted (System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs
      description: "<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.OnInserted*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnInserting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)
  id: OnInserting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: OnInserting(ObjectDataSourceMethodEventArgs)
  nameWithType: ObjectDataSourceView.OnInserting(ObjectDataSourceMethodEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnInserting(ObjectDataSourceMethodEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "발생는 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView.Inserting&quot;> </xref> 이전 이벤트는 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> 개체 삽입 작업을 시도 합니다."
  remarks: "<xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating%2A>식별 하는 데 데이터 작업을 수행 하는 방법이 있는 경우에 메서드가 호출 되 `static` (`Shared` Visual basic에서).</xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating%2A>       이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.       OnInserting 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnInserting (System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs
      description: "<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.OnInserting*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated(System.Web.UI.WebControls.ObjectDataSourceEventArgs)
  id: OnObjectCreated(System.Web.UI.WebControls.ObjectDataSourceEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: OnObjectCreated(ObjectDataSourceEventArgs)
  nameWithType: ObjectDataSourceView.OnObjectCreated(ObjectDataSourceEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated(ObjectDataSourceEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "발생는 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated&quot;> </xref> 후 이벤트는 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> 로 식별 되는 개체의 인스턴스를 만듭니다는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.TypeName*>속성.</xref:System.Web.UI.WebControls.ObjectDataSourceView.TypeName*>"
  remarks: "OnObjectCreated 메서드가 호출 메서드를 식별 하는 데이터 작업을 수행 하는 데에 없는 경우에 `static` (`Shared` Visual basic에서).       이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating>.</xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating> 을 참조 하십시오.       OnObjectCreated 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnObjectCreated (System.Web.UI.WebControls.ObjectDataSourceEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.ObjectDataSourceEventArgs
      description: "<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating(System.Web.UI.WebControls.ObjectDataSourceEventArgs)
  id: OnObjectCreating(System.Web.UI.WebControls.ObjectDataSourceEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: OnObjectCreating(ObjectDataSourceEventArgs)
  nameWithType: ObjectDataSourceView.OnObjectCreating(ObjectDataSourceEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating(ObjectDataSourceEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "발생는 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating&quot;> </xref> 이전 이벤트는 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> 개체 데이터 작업을 수행 하는 비즈니스 개체의 인스턴스를 만듭니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.       OnObjectCreating 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnObjectCreating (System.Web.UI.WebControls.ObjectDataSourceEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.ObjectDataSourceEventArgs
      description: "<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing(System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs)
  id: OnObjectDisposing(System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: OnObjectDisposing(ObjectDataSourceDisposingEventArgs)
  nameWithType: ObjectDataSourceView.OnObjectDisposing(ObjectDataSourceDisposingEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing(ObjectDataSourceDisposingEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "발생는 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing&quot;> </xref> 이전 이벤트는 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> 개체는 인스턴스화된 형식을 삭제 합니다."
  remarks: "OnObjectDisposing 데이터 작업을 수행 하도록 만든 개체의 인스턴스는 삭제 될 때 호출 됩니다. `Dispose` 메서드가 호출 되는 경우에 형식으로 식별 되는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.TypeName%2A>속성 구현은 <xref:System.IDisposable>인터페이스.</xref:System.IDisposable> </xref:System.Web.UI.WebControls.ObjectDataSourceView.TypeName%2A>       이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.       OnObjectDisposing 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnObjectDisposing (System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs
      description: "<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnSelected(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  id: OnSelected(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: OnSelected(ObjectDataSourceStatusEventArgs)
  nameWithType: ObjectDataSourceView.OnSelected(ObjectDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnSelected(ObjectDataSourceStatusEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "발생는 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView.Selected&quot;> </xref> 후 이벤트는 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> 개체가 데이터 검색 작업을 완료 합니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.       OnSelected 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnSelected (System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs
      description: "<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.OnSelected*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting(System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs)
  id: OnSelecting(System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: OnSelecting(ObjectDataSourceSelectingEventArgs)
  nameWithType: ObjectDataSourceView.OnSelecting(ObjectDataSourceSelectingEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting(ObjectDataSourceSelectingEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "발생는 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView.Selecting&quot;> </xref> 이전 이벤트는 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> 개체는 데이터 검색 작업을 시도 합니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.       OnSelecting 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnSelecting (System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs
      description: "<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  id: OnUpdated(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: OnUpdated(ObjectDataSourceStatusEventArgs)
  nameWithType: ObjectDataSourceView.OnUpdated(ObjectDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated(ObjectDataSourceStatusEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "발생는 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView.Updated&quot;> </xref> 후 이벤트는 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> 개체가 업데이트 작업을 완료 합니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.       OnUpdated 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnUpdated (System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs
      description: "<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)
  id: OnUpdating(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: OnUpdating(ObjectDataSourceMethodEventArgs)
  nameWithType: ObjectDataSourceView.OnUpdating(ObjectDataSourceMethodEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating(ObjectDataSourceMethodEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "발생는 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView.Updating&quot;> </xref> 이전 이벤트는 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> 개체 업데이트 작업을 시도 합니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.       OnUpdating 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  example:
  - "The following code example demonstrates how to use a <xref:System.Web.UI.WebControls.DropDownList> control, <xref:System.Web.UI.WebControls.TextBox> controls, and several <xref:System.Web.UI.WebControls.ObjectDataSource> controls to update data. The <xref:System.Web.UI.WebControls.DropDownList> displays the name of a `NorthwindEmployee`, while the <xref:System.Web.UI.WebControls.TextBox> controls are used to enter and update address information. Because the <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A> collection contains a <xref:System.Web.UI.WebControls.ControlParameter> object that is bound to the selected value of the <xref:System.Web.UI.WebControls.DropDownList>, the button that triggers the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A> operation is enabled only after an employee is selected.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_13#1](~/add/codesnippet/csharp/5e0e1dac-16d8-4af3-b004-_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_13#1](~/add/codesnippet/visualbasic/5e0e1dac-16d8-4af3-b004-_1.aspx)]"
  syntax:
    content: protected virtual void OnUpdating (System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs
      description: "<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ParsingCulture
  id: ParsingCulture
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: ParsingCulture
  nameWithType: ObjectDataSourceView.ParsingCulture
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ParsingCulture
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "가져옵니다는 culture 정보에 표시 된 형식의 개체를 생성 하기 위해 실제 속성 형식에 문자열 값을 변환 하는 경우 <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName*>.</xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName*> 사용 되는지 나타내는 값을 설정 하거나"
  syntax:
    content: public System.Web.UI.WebControls.ParsingCulture ParsingCulture { get; set; }
    return:
      type: System.Web.UI.WebControls.ParsingCulture
      description: "문화권 정보입니다. 기본값은 <xref href=&quot;System.Web.UI.WebControls.ParsingCulture&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.ParsingCulture*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState
  id: SaveViewState
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: SaveViewState()
  nameWithType: ObjectDataSourceView.SaveViewState()
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "에 대 한 뷰 상태의 변경 내용을 저장는 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> 페이지가 서버에 다시 게시 된 이후에 개체입니다."
  remarks: "SaveViewState 메서드는 주로 컨트롤 개발자가 사용 됩니다.       뷰 상태는 서버 컨트롤의 속성 값의 누적 합니다. 이러한 값이 <xref:System.Web.UI.Control.ViewState%2A> <xref:System.Web.UI.StateBag>클래스</xref:System.Web.UI.StateBag> 의 인스턴스가 있는 서버 컨트롤에 대 한 속성</xref:System.Web.UI.Control.ViewState%2A> 에 자동으로 포함 됩니다. <xref:System.Web.UI.Control.ViewState%2A>값은 다음 서버 수명 주기의 저장 상태 단계 후 문자열 개체에 유지 됩니다.</xref:System.Web.UI.Control.ViewState%2A>       뷰 상태 내용은 HTML에 저장 된 변수로 반환 클라이언트에 뷰 상태를 저장할 때 `Hidden` 요소입니다. 사용자 지정 서버 컨트롤을 만들 때 SaveViewState 메서드를 재정의 하 여 효율성을 높일 수 있습니다는 `ViewState` 서버 컨트롤에 대 한 속성입니다. 자세한 내용은 참조 [ASP.NET 상태 관리 개요](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: protected virtual object SaveViewState ();
    parameters: []
    return:
      type: System.Object
      description: "변경 내용을 포함 하는 개체는 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> 뷰 상태가 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>개체와 연결 된 뷰 상태가 없는 경우."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)
  id: Select(System.Web.UI.DataSourceSelectArguments)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: Select(DataSourceSelectArguments)
  nameWithType: ObjectDataSourceView.Select(DataSourceSelectArguments)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Select(DataSourceSelectArguments)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "로 식별 되는 개체에서 데이터를 검색는 <> </> *> 메서드를 호출 하 여 속성으로 식별 되는 <> </> *> 속성의 값을 전달 하는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters*>컬렉션.</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters*>"
  remarks: "Select 메서드 호출의 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect%2A>전달 된 `arguments` 매개 변수.</xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect%2A>"
  syntax:
    content: public System.Collections.IEnumerable Select (System.Web.UI.DataSourceSelectArguments arguments);
    parameters:
    - id: arguments
      type: System.Web.UI.DataSourceSelectArguments
      description: "A <xref href=&quot;System.Web.UI.DataSourceSelectArguments&quot;> </xref> 기본 데이터 검색 범위를 벗어난 데이터에 대해 요청 작업을 사용 합니다."
    return:
      type: System.Collections.IEnumerable
      description: "<xref:System.Collections.IEnumerable>데이터 행 목록입니다.</xref:System.Collections.IEnumerable> 자세한 내용은 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod*>.</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod*> 을 참조 하십시오."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.Select*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code> arguments </code> 전달 Select 메서드 지정 데이터 원본 페이징 또는 검색 된 데이터를 정렬할 수 있도록 데이터를 검색 하는 동안 몇 가지 추가 작업을 수행 해야 하지만 데이터 소스 컨트롤은 필요한 기능을 지원 하지 않습니다."
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod
  id: SelectCountMethod
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: SelectCountMethod
  nameWithType: ObjectDataSourceView.SelectCountMethod
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "메서드 또는 함수의 이름을 가져오거나는 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> 제어를 행 수를 검색 하기 위해 호출 합니다."
  remarks: "SelectCountMethod 데이터 소스 페이징을 지원 하기 위해 총 행 수를 검색 하는 데 사용 되는 비즈니스 개체 메서드를 식별 합니다. 경우에 SelectCountMethod 속성이 계산 되는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A>속성이 `true`.</xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A> <xref:System.Web.UI.WebControls.ObjectDataSourceView>참조 하십시오 <xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A>.</xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView> 에서 페이징은 지 원하는 방법에 대 한       속성은 SelectCountMethod 값 뷰 상태에 저장 합니다."
  syntax:
    content: public string SelectCountMethod { get; set; }
    return:
      type: System.String
      description: "사용 하는 함수 또는 메서드의 이름을 나타내는 문자열의 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> 사용 하 여 행 수를 검색 합니다. 기본값은 빈 문자열 (&quot;&quot;)."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Selected
  id: Selected
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: Selected
  nameWithType: ObjectDataSourceView.Selected
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Selected
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "데이터 검색 작업이 완료 되 면 발생 합니다."
  remarks: "출력 매개 변수 및 반환 값의 값을 확인 하거나 데이터 검색 작업이 완료 된 후 예외가 throw 되었는지 여부를 확인 하려면 선택한 이벤트를 처리 합니다. 사용할 수 있는 반환 값, 출력 매개 변수 및 속성을 처리 하는 예외는 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>이벤트와 연결 된 개체입니다.</xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다."
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Selected;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Selecting
  id: Selecting
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: Selecting
  nameWithType: ObjectDataSourceView.Selecting
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Selecting
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "데이터 검색 작업을 하기 전에 발생합니다."
  remarks: "매개 변수 값의 유효성을 검사 하는 응용 프로그램에 적용 되는 추가 초기화 작업을 수행 하려면 Selecting 이벤트를 처리 하거나 하기 전에 값을 매개 변수를 변경 하는 <xref:System.Web.UI.WebControls.ObjectDataSource>컨트롤이 데이터 검색 작업을 수행 합니다.</xref:System.Web.UI.WebControls.ObjectDataSource> 매개 변수는 사용할 수는 <xref:System.Collections.IDictionary>액세스 하는 컬렉션의 <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A>속성에 의해 노출 되는 <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs>개체입니다.</xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> </xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> </xref:System.Collections.IDictionary>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다."
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler Selecting;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod
  id: SelectMethod
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: SelectMethod
  nameWithType: ObjectDataSourceView.SelectMethod
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "메서드 또는 함수의 이름을 가져오거나는 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> 컨트롤이 호출 데이터를 검색 합니다."
  remarks: "지정된 된 메서드 어떤 메서드 시그니처를 가질 수 있습니다 하지만 성공적으로 호출할 <xref:System.Web.UI.WebControls.ObjectDataSource>컨트롤이 다음 표에 나열 된 형식 중 하나를 반환 해야 | 반환 형식 | 작업 |   |-----------------|------------|   | <xref:System.Collections.IEnumerable>| <xref:System.Collections.IEnumerable> <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>메서드에 의해 반환 됩니다. |   | <xref:System.Data.DataTable>| <xref:System.Data.DataView>는 <xref:System.Data.DataTable>를 사용 하 여 만들어지고 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>확장 메서드에서 반환한. |   | <xref:System.Data.DataSet>| <xref:System.Data.DataSet>의 첫 번째 <xref:System.Data.DataTable>추출 되 고는 <xref:System.Data.DataView>만들어지고 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>확장 메서드에서 반환한. |   | <xref:System.Object>| 개체가 단일 요소 <xref:System.Collections.IEnumerable>에에서 래핑된 이며 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>확장 메서드에서 반환한. |       SelectMethod 속성으로 식별 되는 메서드는 인스턴스 메서드 일 수 또는 `static` (`Shared` Visual basic에서) 메서드.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Collections.IEnumerable> </xref:System.Object> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Data.DataView>  </xref:System.Data.DataTable></xref:System.Data.DataSet> </xref:System.Data.DataSet> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Data.DataTable> </xref:System.Data.DataView> </xref:System.Data.DataTable> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Collections.IEnumerable> </xref:System.Collections.IEnumerable> </xref:System.Web.UI.WebControls.ObjectDataSource> 인스턴스 메서드인 경우 비즈니스 개체가 생성 되 고 SelectMethod 메서드를 호출할 때마다 제거 합니다. 처리할 수는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated>SelectMethod 속성에 지정 된 메서드를 호출 하기 전에 비즈니스 개체를 사용 하는 이벤트입니다.</xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated> 처리할 수도 있습니다는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing>SelectMethod 속성에 지정 된 메서드가 호출 된 후 발생 하는 이벤트입니다.</xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing> (`Dispose` 비즈니스 개체를 구현 하는 경우에 호출 되는 <xref:System.IDisposable>인터페이스입니다.)</xref:System.IDisposable> 메서드가 `static` (`Shared` Visual basic에서) 메서드를 비즈니스 개체를 만들지는 및 이러한 이벤트를 처리할 수 없습니다.       비즈니스 개체가 <xref:System.Web.UI.WebControls.ObjectDataSource>(메서드 오버 로드) 이름이 같은 함수나 메서드를 여러 개 구현으로 작동 하는 컨트롤, 데이터 소스 컨트롤의 매개 변수를 포함 하 여 조건의 집합에 따라 올바른 메서드나를 호출 하려고 시도 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A>컬렉션.</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> 경우에 매개 변수는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A>컬렉션 SelectMethod 속성에 지정 된 메서드의 서명을의 인수와 일치 하지 않는 경우 예외를 throw 하는 데이터 원본.</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A>       자세한 내용은 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod?displayProperty=fullName>.</xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod?displayProperty=fullName> 을 참조 하십시오."
  example:
  - "The following code example demonstrates how a <xref:System.Web.UI.WebControls.GridView> control can display data using an <xref:System.Web.UI.WebControls.ObjectDataSource> control on a Web Forms page. The <xref:System.Web.UI.WebControls.ObjectDataSource> identifies a partially or fully qualified class name with its <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> property and a method that is called to retrieve data with its SelectMethod property. At run time, the object is created and the method is called using reflection. The <xref:System.Web.UI.WebControls.GridView> control enumerates through the <xref:System.Collections.IEnumerable> collection that is returned by the SelectMethod, and then displays the data.  \n  \n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_1#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_584_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_1#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_584_1.aspx)]"
  syntax:
    content: public string SelectMethod { get; set; }
    return:
      type: System.String
      description: "사용 하는 함수 또는 메서드의 이름을 나타내는 문자열의 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> 사용 하 여 데이터를 검색 합니다. 기본값은 빈 문자열 (&quot;&quot;)."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters
  id: SelectParameters
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: SelectParameters
  nameWithType: ObjectDataSourceView.SelectParameters
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "사용 되는 매개 변수가 포함 된 매개 변수 컬렉션을 가져옵니다는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod*>메서드.</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod*>"
  remarks: "이름 및 유형의 SelectParameters 컬렉션에 포함 된 매개 변수 이름 및 지정 된 메서드에 매개 변수의 형식을 일치 해야 합니다는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A>속성 서명.</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> 와 같은 매개 변수를 제공 하는 데이터 바인딩된 컨트롤을 작업할 때 <xref:System.Web.UI.WebControls.GridView>및 <xref:System.Web.UI.WebControls.DetailsView>, <xref:System.Web.UI.WebControls.ObjectDataSource>컨트롤이 데이터 바인딩된 컨트롤에서 제공 되는 이러한 매개 변수를 사용 하 여 컬렉션에 명시적으로 지정 된 매개 변수를 자동으로 병합 합니다.</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> 자세한 내용은 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod?displayProperty=fullName>.</xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod?displayProperty=fullName> 을 참조 하십시오."
  example:
  - "The following code example demonstrates how to retrieve a single data record using an <xref:System.Web.UI.WebControls.ObjectDataSource> control, and then display the data record in a <xref:System.Web.UI.WebControls.DetailsView> control. The <xref:System.Web.UI.WebControls.ObjectDataSource> retrieves a specific employee record by calling the `GetEmployee` method of the `EmployeeLogic` class. The `GetEmployee` method requires an employee ID parameter. The <xref:System.Web.UI.WebControls.ObjectDataSource> control uses a <xref:System.Web.UI.WebControls.QueryStringParameter> object in its SelectParameters collection to pass an ID to the `GetEmployee` method.  \n  \n To view the example implementation of the `EmployeeLogic` class and the `GetEmployee` method, see <xref:System.Web.UI.WebControls.ObjectDataSource>.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_3#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_297_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_3#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_297_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection SelectParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.ParameterCollection&quot;> </xref> 로 지정 된 메서드에서 사용 되는 매개 변수를 포함 하는 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod*>속성.</xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod*>"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName
  id: SortParameterName
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: SortParameterName
  nameWithType: ObjectDataSourceView.SortParameterName
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "정렬 지원을 데이터 원본에 대 한 정렬 식을 지정 하는 데 사용 되는 데이터 검색 메서드 매개 변수의 이름을 가져오거나 설정 합니다."
  remarks: "SortParameterName 속성은 데이터 소스 정렬을 지 원하는 데 사용 됩니다. 때는 <xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A>속성이에 설정 되는 <xref:System.Web.UI.DataSourceSelectArguments>개체를 전달는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>메서드를 SortParameterName 속성을 식별 하 여 지정 된 메서드의 매개 변수 이름은 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A>정렬 식 값을 허용 하는 비즈니스 개체 속성입니다.</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Web.UI.DataSourceSelectArguments> </xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A>       속성은 SortParameterName 값 뷰 상태에 저장 합니다."
  syntax:
    content: public string SortParameterName { get; set; }
    return:
      type: System.String
      description: "이 정렬 식 값을 받는 매개 변수를 나타내는 데 사용 하는 메서드 매개 변수의 이름입니다. 기본값은 빈 문자열 (&quot;&quot;)."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName
  id: StartRowIndexParameterName
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: StartRowIndexParameterName
  nameWithType: ObjectDataSourceView.StartRowIndexParameterName
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "데이터 소스 페이징 지원 위해 결과 집합에서 검색할 첫 번째 레코드의 정수 인덱스를 나타내는 데 사용 되는 데이터 검색 메서드 매개 변수의 이름을 가져오거나 설정 합니다."
  remarks: "StartRowIndexParameterName 속성 페이징을 사용 하도록 설정 되어야 합니다. <xref:System.Web.UI.WebControls.ObjectDataSourceView>개체를 참조 하십시오 <xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A>.</xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView> 에서 페이징은 지 원하는 방법에 대 한       속성은 StartRowIndexParameterName 값 뷰 상태에 저장 합니다."
  syntax:
    content: public string StartRowIndexParameterName { get; set; }
    return:
      type: System.String
      description: "검색할 첫 번째 레코드를 나타내는 데 사용 하는 비즈니스 개체 메서드 매개 변수의 이름입니다. 기본값은 &quot;startRowIndex&quot;."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState
  id: System#Web#UI#IStateManager#IsTrackingViewState
  isEii: true
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: ObjectDataSourceView.System.Web.UI.IStateManager.IsTrackingViewState
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.System.Web.UI.IStateManager.IsTrackingViewState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "이 멤버에 대 한 참조 <xref:System.Web.UI.IStateManager.IsTrackingViewState*>.</xref:System.Web.UI.IStateManager.IsTrackingViewState*>"
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Web.UI.WebControls.ObjectDataSourceView>인스턴스로 캐스팅 되는 <xref:System.Web.UI.IStateManager>인터페이스.</xref:System.Web.UI.IStateManager> </xref:System.Web.UI.WebControls.ObjectDataSourceView>"
  syntax:
    content: bool System.Web.UI.IStateManager.IsTrackingViewState { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>를 데이터 원본 뷰는 해당 상태를 저장 하도록 표시 되어 있으면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#LoadViewState(System.Object)
  id: System#Web#UI#IStateManager#LoadViewState(System.Object)
  isEii: true
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: System.Web.UI.IStateManager.LoadViewState(Object)
  nameWithType: ObjectDataSourceView.System.Web.UI.IStateManager.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.System.Web.UI.IStateManager.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "이 멤버에 대 한 참조 &lt;xref:System.Web.UI.IStateManager.LoadViewState%2A?displayProperty=fullName&gt;합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Web.UI.WebControls.ObjectDataSourceView>인스턴스로 캐스팅 되는 <xref:System.Web.UI.IStateManager>인터페이스.</xref:System.Web.UI.IStateManager> </xref:System.Web.UI.WebControls.ObjectDataSourceView>"
  syntax:
    content: void IStateManager.LoadViewState (object savedState);
    parameters:
    - id: savedState
      type: System.Object
      description: "나타내는 개체는 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> 상태를 복원 합니다."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#SaveViewState
  id: System#Web#UI#IStateManager#SaveViewState
  isEii: true
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: System.Web.UI.IStateManager.SaveViewState()
  nameWithType: ObjectDataSourceView.System.Web.UI.IStateManager.SaveViewState()
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.System.Web.UI.IStateManager.SaveViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "이 멤버에 대 한 참조 &lt;xref:System.Web.UI.IStateManager.SaveViewState%2A?displayProperty=fullName&gt;합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Web.UI.WebControls.ObjectDataSourceView>인스턴스로 캐스팅 되는 <xref:System.Web.UI.IStateManager>인터페이스.</xref:System.Web.UI.IStateManager> </xref:System.Web.UI.WebControls.ObjectDataSourceView>"
  syntax:
    content: object IStateManager.SaveViewState ();
    parameters: []
    return:
      type: System.Object
      description: "변경 내용을 포함 하는 개체는 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> 뷰 상태가, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#SaveViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#TrackViewState
  id: System#Web#UI#IStateManager#TrackViewState
  isEii: true
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: System.Web.UI.IStateManager.TrackViewState()
  nameWithType: ObjectDataSourceView.System.Web.UI.IStateManager.TrackViewState()
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.System.Web.UI.IStateManager.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "이 멤버에 대 한 참조 &lt;xref:System.Web.UI.IStateManager.TrackViewState%2A?displayProperty=fullName&gt;합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Web.UI.WebControls.ObjectDataSourceView>인스턴스로 캐스팅 되는 <xref:System.Web.UI.IStateManager>인터페이스.</xref:System.Web.UI.IStateManager> </xref:System.Web.UI.WebControls.ObjectDataSourceView>"
  syntax:
    content: void IStateManager.TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#TrackViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState
  id: TrackViewState
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: TrackViewState()
  nameWithType: ObjectDataSourceView.TrackViewState()
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "로 인해는 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> 에 변경 내용을 저장할 수 있도록 해당 뷰 상태의 변경 내용을 추적 하는 개체는 <xref:System.Web.UI.Control.ViewState*>컨트롤과 같은 페이지에 대 한 전체 지속 된 요청에 대 한 개체입니다.</xref:System.Web.UI.Control.ViewState*>"
  remarks: "TrackViewState 메서드는 주로 컨트롤 개발자가 사용 됩니다."
  syntax:
    content: protected virtual void TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.TypeName
  id: TypeName
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: TypeName
  nameWithType: ObjectDataSourceView.TypeName
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.TypeName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "클래스의 이름을 가져오거나는 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> 컨트롤이 나타내는입니다."
  remarks: "개체의 인스턴스를 만들는 <xref:System.Web.UI.WebControls.ObjectDataSource>컨트롤 리플렉션을 사용 하 여 런타임 시 형식 이름으로 식별 되는 형식을 로드, 컨트롤에 바인딩합니다.</xref:System.Web.UI.WebControls.ObjectDataSource> 따라서, Bin 또는 App_Code 디렉터리에 있는 코드는 부분적으로 정규화 된 형식 또는 전역 어셈블리 캐시에 등록 되어 있는 코드에 대 한 정규화 된 형식 이름을 TypeName 속성의 값 수 있습니다. 에 대 한 적절 한 참조를 추가 해야 전역 어셈블리 캐시를 사용 하는 경우는 `assemblies` Machine.config 또는 Web.config 구성 파일의 섹션입니다."
  example:
  - "The following code example demonstrates how a <xref:System.Web.UI.WebControls.GridView> control can display data using an <xref:System.Web.UI.WebControls.ObjectDataSource> control on a Web Forms page. The <xref:System.Web.UI.WebControls.ObjectDataSource> identifies a partially or fully qualified class name with its TypeName property and a method that is called to retrieve data with its <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> property. At run time, the object is created and the method is called using reflection. The <xref:System.Web.UI.WebControls.GridView> control enumerates through the <xref:System.Collections.IEnumerable> collection that is returned by the <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> and displays the data.  \n  \n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_1#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_218_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_1#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_218_1.aspx)]"
  syntax:
    content: public string TypeName { get; set; }
    return:
      type: System.String
      description: "개체의 형식을 식별 하는 부분적으로 또는 완전히 정규화 된 클래스 이름을 하는 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> 나타냅니다. 기본값은 빈 문자열입니다."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.TypeName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  id: Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: Update(IDictionary,IDictionary,IDictionary)
  nameWithType: ObjectDataSourceView.Update(IDictionary,IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Update(IDictionary,IDictionary,IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "로 식별 되는 메서드를 호출 하 여 업데이트 작업을 수행는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>속성과에 제공 된 매개 변수를 사용 하 여 <code> keys </code>, <code> values </code>, 또는 <code> oldValues </code> 컬렉션.</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>"
  remarks: "기본 반환 값은-1로, 알 수 없는 개수의 행이 업데이트 되었음을 의미 합니다. 다른 값을 반환 하려면 설정는 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A>속성은 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>의 개체는 <xref:System.Web.UI.WebControls.ObjectDataSource.Updated>이벤트.</xref:System.Web.UI.WebControls.ObjectDataSource.Updated> </xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> </xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A> 일반적으로 반환 된 영향을 받는 행 수는 `Update` 비즈니스 개체 및 해당 값에 대 한 메서드는에서 사용할 수는 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A>의 속성은 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>의 매개 변수는 <xref:System.Web.UI.WebControls.ObjectDataSource.Updated>이벤트.</xref:System.Web.UI.WebControls.ObjectDataSource.Updated> </xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> </xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A>       Update 메서드 호출의 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate%2A>전달 하는 메서드는 `keys`, `values`, 및 `oldValues` 매개 변수.</xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate%2A>"
  syntax:
    content: public int Update (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues);
    parameters:
    - id: keys
      type: System.Collections.IDictionary
      description: "A <xref:System.Collections.IDictionary>업데이트할 항목을 식별 하는 데 사용 되는 키 값.</xref:System.Collections.IDictionary> 이러한 매개 변수에서 지정한 메서드와 함께 사용 되는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>속성을 업데이트 작업을 수행 합니다.</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*> 메서드와 연결 된 매개 변수가 없는 경우 전달 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
    - id: values
      type: System.Collections.IDictionary
      description: "A <xref:System.Collections.IDictionary>데이터 소스에 적용 하는 새 값의.</xref:System.Collections.IDictionary> 이러한 매개 변수에서 지정한 메서드와 함께 사용 되는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>속성 업데이트 데이터베이스 작업을 수행 합니다.</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*> 메서드와 연결 된 매개 변수가 없는 경우 전달 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
    - id: oldValues
      type: System.Collections.IDictionary
      description: "A <xref:System.Collections.IDictionary>데이터 원본의 항목과 일치 하는 데 사용 되는 추가 키가 아닌 값을 포함 하.</xref:System.Collections.IDictionary> 경우에 행 값의 delete 메서드로 전달 되는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection*>속성이로 설정 되는 <xref href=&quot;System.Web.UI.ConflictOptions&quot;> </xref> 필드.</xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection*>"
    return:
      type: System.Int32
      description: "업데이트 된 행 수 그렇지 않으면-1 수를 알 수 없는 경우."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.Update*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Updated
  id: Updated
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: Updated
  nameWithType: ObjectDataSourceView.Updated
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Updated
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "발생 경우는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update*>작업이 완료 된.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Update*>"
  remarks: "출력 매개 변수 및 반환 값의 값을 확인 하거나 후 예외가 throw 되었는지 여부를 확인 하려면 업데이트 된 이벤트를 처리 한 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A>작업이 완료 된.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A> 사용할 수 있는 반환 값, 출력 매개 변수 및 속성을 처리 하는 예외는 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>이벤트와 연결 된 개체입니다.</xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다."
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Updated;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod
  id: UpdateMethod
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: UpdateMethod
  nameWithType: ObjectDataSourceView.UpdateMethod
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "메서드 또는 함수의 이름을 가져오거나는 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> 개체 호출 데이터를 업데이트 합니다."
  remarks: "<xref:System.Web.UI.WebControls.ObjectDataSourceView>개체 UpdateMethod 속성으로 식별 되는 메서드가 아닌 일괄 처리에서 한 번에 하나씩 업데이트를 수행 하는 것으로 가정 합니다.</xref:System.Web.UI.WebControls.ObjectDataSourceView>       메서드는 인스턴스 메서드 일 수 또는 `static` (`Shared` Visual basic에서) 메서드. 인스턴스 메서드인 경우 비즈니스 개체가 생성 되 고 UpdateMethod 속성에 지정 된 메서드를 호출할 때마다 제거 합니다. 처리할 수는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated>UpdateMethod 속성에 지정 된 메서드를 호출 하기 전에 비즈니스 개체를 사용 하는 이벤트입니다.</xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated> 처리할 수도 있습니다는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing>UpdateMethod 메서드가 호출 된 후 발생 하는 이벤트입니다.</xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing> (`Dispose` 비즈니스 개체를 구현 하는 경우에 호출 되는 <xref:System.IDisposable>인터페이스입니다.)</xref:System.IDisposable> 메서드가 `static` (`Shared` Visual basic에서) 메서드를 비즈니스 개체를 만들지는 및 이러한 이벤트를 처리할 수 없습니다.       비즈니스 개체가 <xref:System.Web.UI.WebControls.ObjectDataSource>(메서드 오버 로드) 이름이 같은 함수나 메서드를 여러 개 구현으로 작동 하는 개체, 데이터 소스 컨트롤의 매개 변수를 포함 하 여 조건의 집합에 따라 올바른 메서드나를 호출 하려고 시도 <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A>컬렉션.</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> 경우에 매개 변수는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A>컬렉션 UpdateMethod 속성에 지정 된 메서드의 서명을의 인수와 일치 하지 않는 경우 예외를 throw 하는 데이터 원본.</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A>       자세한 내용은 <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod?displayProperty=fullName>.</xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod?displayProperty=fullName> 을 참조 하십시오.       속성은 UpdateMethod 값 뷰 상태에 저장 합니다."
  example:
  - "The following code example demonstrates how to use a <xref:System.Web.UI.WebControls.DropDownList> control, <xref:System.Web.UI.WebControls.TextBox> controls, and several <xref:System.Web.UI.WebControls.ObjectDataSource> controls to update data. The <xref:System.Web.UI.WebControls.DropDownList> displays the name of a `NorthwindEmployee`, while the <xref:System.Web.UI.WebControls.TextBox> controls are used to enter and update address information. Because the <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A> collection contains a <xref:System.Web.UI.WebControls.ControlParameter> object that is bound to the selected value of the <xref:System.Web.UI.WebControls.DropDownList>, the button that triggers the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A> operation is enabled only after an employee is selected.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_12#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_413_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_12#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_413_1.aspx)]"
  syntax:
    content: public string UpdateMethod { get; set; }
    return:
      type: System.String
      description: "사용 하는 함수 또는 메서드의 이름을 나타내는 문자열의 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> 데이터 업데이트를 사용 하 여 합니다. 기본값은 빈 문자열 (&quot;&quot;)."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters
  id: UpdateParameters
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: UpdateParameters
  nameWithType: ObjectDataSourceView.UpdateParameters
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "사용 되는 매개 변수가 포함 된 매개 변수 컬렉션을 가져옵니다는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>메서드.</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>"
  remarks: "이름 및 유형의 UpdateParameters 컬렉션에 포함 된 매개 변수 이름 및 지정 된 메서드에 매개 변수의 형식을 일치 해야 합니다는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A>속성 서명.</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A> 매개 변수 이름은 영향을 받는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A>속성 및 대/소문자 구분 됩니다.</xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A> 와 같은 매개 변수를 제공 하는 데이터 바인딩된 컨트롤을 작업할 때 <xref:System.Web.UI.WebControls.GridView>및 <xref:System.Web.UI.WebControls.DetailsView>, <xref:System.Web.UI.WebControls.ObjectDataSource>컨트롤이 데이터 바인딩된 컨트롤에서 제공 되는 이러한 매개 변수를 사용 하 여 컬렉션에 명시적으로 지정 된 매개 변수를 자동으로 병합 합니다.</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> 자세한 내용은 <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod?displayProperty=fullName>.</xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod?displayProperty=fullName> 을 참조 하십시오."
  example:
  - "The following code example demonstrates how to use a <xref:System.Web.UI.WebControls.DropDownList> control, <xref:System.Web.UI.WebControls.TextBox> controls, and several <xref:System.Web.UI.WebControls.ObjectDataSource> controls to update data. The <xref:System.Web.UI.WebControls.DropDownList> displays the name of a `NorthwindEmployee`, while the <xref:System.Web.UI.WebControls.TextBox> controls are used to enter and update address information. Because the UpdateParameters collection contains a <xref:System.Web.UI.WebControls.ControlParameter> object that is bound to the selected value of the <xref:System.Web.UI.WebControls.DropDownList>, the button that triggers the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A> operation is enabled only after an employee is selected.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_12#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_182_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_12#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_182_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection UpdateParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.ParameterCollection&quot;> </xref> 에서 사용 하는 매개 변수를 포함 하는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>속성.</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Updating
  id: Updating
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: Updating
  nameWithType: ObjectDataSourceView.Updating
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Updating
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "앞에 오는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update*>작업.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Update*>"
  remarks: "매개 변수 값의 유효성을 검사 하는 응용 프로그램에 적용 되는 추가 초기화 작업을 수행 하려면 업데이트 이벤트를 처리 또는 하기 전에 값을 매개 변수를 변경 하는 <xref:System.Web.UI.WebControls.ObjectDataSource>컨트롤 수행 되는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A>작업.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> 매개 변수는 사용할 수는 <xref:System.Collections.IDictionary>액세스 하 여 컬렉션의 <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A>속성에 의해 노출 되는 <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs>개체입니다.</xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> </xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> </xref:System.Collections.IDictionary>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다."
  example:
  - "The following code example demonstrates how to use a <xref:System.Web.UI.WebControls.DropDownList> control, <xref:System.Web.UI.WebControls.TextBox> controls, and several <xref:System.Web.UI.WebControls.ObjectDataSource> controls to update data. The <xref:System.Web.UI.WebControls.DropDownList> displays the name of a `NorthwindEmployee`, while the <xref:System.Web.UI.WebControls.TextBox> controls are used to enter and update address information. Because the <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A> collection contains a <xref:System.Web.UI.WebControls.ControlParameter> object that is bound to the selected value of the <xref:System.Web.UI.WebControls.DropDownList>, the button that triggers the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A> operation is enabled only after an employee is selected.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_13#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_93_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_13#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_93_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Updating;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.DataSourceView
  isExternal: false
  name: System.Web.UI.DataSourceView
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Web.UI.WebControls.ObjectDataSourceView.#ctor(System.Web.UI.WebControls.ObjectDataSource,System.String,System.Web.HttpContext)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ObjectDataSourceView(ObjectDataSource,String,HttpContext)
  nameWithType: ObjectDataSourceView.ObjectDataSourceView(ObjectDataSource,String,HttpContext)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ObjectDataSourceView(ObjectDataSource,String,HttpContext)
- uid: System.Web.UI.WebControls.ObjectDataSource
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSource
  nameWithType: ObjectDataSource
  fullName: System.Web.UI.WebControls.ObjectDataSource
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanDelete
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: CanDelete
  nameWithType: ObjectDataSourceView.CanDelete
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.CanDelete
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanInsert
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: CanInsert
  nameWithType: ObjectDataSourceView.CanInsert
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.CanInsert
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanPage
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: CanPage
  nameWithType: ObjectDataSourceView.CanPage
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.CanPage
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: CanRetrieveTotalRowCount
  nameWithType: ObjectDataSourceView.CanRetrieveTotalRowCount
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanSort
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: CanSort
  nameWithType: ObjectDataSourceView.CanSort
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.CanSort
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanUpdate
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: CanUpdate
  nameWithType: ObjectDataSourceView.CanUpdate
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.CanUpdate
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ConflictDetection
  nameWithType: ObjectDataSourceView.ConflictDetection
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection
- uid: System.Web.UI.ConflictOptions
  parent: System.Web.UI
  isExternal: false
  name: ConflictOptions
  nameWithType: ConflictOptions
  fullName: System.Web.UI.ConflictOptions
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ConvertNullToDBNull
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ConvertNullToDBNull
  nameWithType: ObjectDataSourceView.ConvertNullToDBNull
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ConvertNullToDBNull
- uid: System.Web.UI.WebControls.ObjectDataSourceView.DataObjectTypeName
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: DataObjectTypeName
  nameWithType: ObjectDataSourceView.DataObjectTypeName
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.DataObjectTypeName
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Delete(IDictionary,IDictionary)
  nameWithType: ObjectDataSourceView.Delete(IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Delete(IDictionary,IDictionary)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Deleted
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Deleted
  nameWithType: ObjectDataSourceView.Deleted
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Deleted
- uid: System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSourceStatusEventHandler
  nameWithType: ObjectDataSourceStatusEventHandler
  fullName: System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler
- uid: System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: DeleteMethod
  nameWithType: ObjectDataSourceView.DeleteMethod
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod
- uid: System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: DeleteParameters
  nameWithType: ObjectDataSourceView.DeleteParameters
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters
- uid: System.Web.UI.WebControls.ParameterCollection
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ParameterCollection
  nameWithType: ParameterCollection
  fullName: System.Web.UI.WebControls.ParameterCollection
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Deleting
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Deleting
  nameWithType: ObjectDataSourceView.Deleting
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Deleting
- uid: System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSourceMethodEventHandler
  nameWithType: ObjectDataSourceMethodEventHandler
  fullName: System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler
- uid: System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: EnablePaging
  nameWithType: ObjectDataSourceView.EnablePaging
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ExecuteDelete(IDictionary,IDictionary)
  nameWithType: ObjectDataSourceView.ExecuteDelete(IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete(IDictionary,IDictionary)
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteInsert(System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ExecuteInsert(IDictionary)
  nameWithType: ObjectDataSourceView.ExecuteInsert(IDictionary)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteInsert(IDictionary)
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ExecuteSelect(DataSourceSelectArguments)
  nameWithType: ObjectDataSourceView.ExecuteSelect(DataSourceSelectArguments)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect(DataSourceSelectArguments)
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Web.UI.DataSourceSelectArguments
  parent: System.Web.UI
  isExternal: false
  name: DataSourceSelectArguments
  nameWithType: DataSourceSelectArguments
  fullName: System.Web.UI.DataSourceSelectArguments
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ExecuteUpdate(IDictionary,IDictionary,IDictionary)
  nameWithType: ObjectDataSourceView.ExecuteUpdate(IDictionary,IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate(IDictionary,IDictionary,IDictionary)
- uid: System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: FilterExpression
  nameWithType: ObjectDataSourceView.FilterExpression
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Filtering
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Filtering
  nameWithType: ObjectDataSourceView.Filtering
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Filtering
- uid: System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSourceFilteringEventHandler
  nameWithType: ObjectDataSourceFilteringEventHandler
  fullName: System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler
- uid: System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: FilterParameters
  nameWithType: ObjectDataSourceView.FilterParameters
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Insert(System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Insert(IDictionary)
  nameWithType: ObjectDataSourceView.Insert(IDictionary)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Insert(IDictionary)
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Inserted
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Inserted
  nameWithType: ObjectDataSourceView.Inserted
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Inserted
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Inserting
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Inserting
  nameWithType: ObjectDataSourceView.Inserting
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Inserting
- uid: System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: InsertMethod
  nameWithType: ObjectDataSourceView.InsertMethod
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod
- uid: System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: InsertParameters
  nameWithType: ObjectDataSourceView.InsertParameters
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters
- uid: System.Web.UI.WebControls.ObjectDataSourceView.IsTrackingViewState
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: IsTrackingViewState
  nameWithType: ObjectDataSourceView.IsTrackingViewState
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.IsTrackingViewState
- uid: System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: LoadViewState(Object)
  nameWithType: ObjectDataSourceView.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: MaximumRowsParameterName
  nameWithType: ObjectDataSourceView.MaximumRowsParameterName
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ObjectCreated
  nameWithType: ObjectDataSourceView.ObjectCreated
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated
- uid: System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSourceObjectEventHandler
  nameWithType: ObjectDataSourceObjectEventHandler
  fullName: System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ObjectCreating
  nameWithType: ObjectDataSourceView.ObjectCreating
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ObjectDisposing
  nameWithType: ObjectDataSourceView.ObjectDisposing
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing
- uid: System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSourceDisposingEventHandler
  nameWithType: ObjectDataSourceDisposingEventHandler
  fullName: System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OldValuesParameterFormatString
  nameWithType: ObjectDataSourceView.OldValuesParameterFormatString
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnDeleted(ObjectDataSourceStatusEventArgs)
  nameWithType: ObjectDataSourceView.OnDeleted(ObjectDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted(ObjectDataSourceStatusEventArgs)
- uid: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSourceStatusEventArgs
  nameWithType: ObjectDataSourceStatusEventArgs
  fullName: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnDeleting(ObjectDataSourceMethodEventArgs)
  nameWithType: ObjectDataSourceView.OnDeleting(ObjectDataSourceMethodEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting(ObjectDataSourceMethodEventArgs)
- uid: System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSourceMethodEventArgs
  nameWithType: ObjectDataSourceMethodEventArgs
  fullName: System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnFiltering(System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnFiltering(ObjectDataSourceFilteringEventArgs)
  nameWithType: ObjectDataSourceView.OnFiltering(ObjectDataSourceFilteringEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnFiltering(ObjectDataSourceFilteringEventArgs)
- uid: System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSourceFilteringEventArgs
  nameWithType: ObjectDataSourceFilteringEventArgs
  fullName: System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnInserted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnInserted(ObjectDataSourceStatusEventArgs)
  nameWithType: ObjectDataSourceView.OnInserted(ObjectDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnInserted(ObjectDataSourceStatusEventArgs)
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnInserting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnInserting(ObjectDataSourceMethodEventArgs)
  nameWithType: ObjectDataSourceView.OnInserting(ObjectDataSourceMethodEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnInserting(ObjectDataSourceMethodEventArgs)
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated(System.Web.UI.WebControls.ObjectDataSourceEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnObjectCreated(ObjectDataSourceEventArgs)
  nameWithType: ObjectDataSourceView.OnObjectCreated(ObjectDataSourceEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated(ObjectDataSourceEventArgs)
- uid: System.Web.UI.WebControls.ObjectDataSourceEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSourceEventArgs
  nameWithType: ObjectDataSourceEventArgs
  fullName: System.Web.UI.WebControls.ObjectDataSourceEventArgs
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating(System.Web.UI.WebControls.ObjectDataSourceEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnObjectCreating(ObjectDataSourceEventArgs)
  nameWithType: ObjectDataSourceView.OnObjectCreating(ObjectDataSourceEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating(ObjectDataSourceEventArgs)
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing(System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnObjectDisposing(ObjectDataSourceDisposingEventArgs)
  nameWithType: ObjectDataSourceView.OnObjectDisposing(ObjectDataSourceDisposingEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing(ObjectDataSourceDisposingEventArgs)
- uid: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSourceDisposingEventArgs
  nameWithType: ObjectDataSourceDisposingEventArgs
  fullName: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnSelected(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnSelected(ObjectDataSourceStatusEventArgs)
  nameWithType: ObjectDataSourceView.OnSelected(ObjectDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnSelected(ObjectDataSourceStatusEventArgs)
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting(System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnSelecting(ObjectDataSourceSelectingEventArgs)
  nameWithType: ObjectDataSourceView.OnSelecting(ObjectDataSourceSelectingEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting(ObjectDataSourceSelectingEventArgs)
- uid: System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSourceSelectingEventArgs
  nameWithType: ObjectDataSourceSelectingEventArgs
  fullName: System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnUpdated(ObjectDataSourceStatusEventArgs)
  nameWithType: ObjectDataSourceView.OnUpdated(ObjectDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated(ObjectDataSourceStatusEventArgs)
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnUpdating(ObjectDataSourceMethodEventArgs)
  nameWithType: ObjectDataSourceView.OnUpdating(ObjectDataSourceMethodEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating(ObjectDataSourceMethodEventArgs)
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ParsingCulture
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ParsingCulture
  nameWithType: ObjectDataSourceView.ParsingCulture
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ParsingCulture
- uid: System.Web.UI.WebControls.ParsingCulture
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ParsingCulture
  nameWithType: ParsingCulture
  fullName: System.Web.UI.WebControls.ParsingCulture
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: SaveViewState()
  nameWithType: ObjectDataSourceView.SaveViewState()
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState()
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Select(DataSourceSelectArguments)
  nameWithType: ObjectDataSourceView.Select(DataSourceSelectArguments)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Select(DataSourceSelectArguments)
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: SelectCountMethod
  nameWithType: ObjectDataSourceView.SelectCountMethod
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Selected
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Selected
  nameWithType: ObjectDataSourceView.Selected
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Selected
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Selecting
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Selecting
  nameWithType: ObjectDataSourceView.Selecting
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Selecting
- uid: System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSourceSelectingEventHandler
  nameWithType: ObjectDataSourceSelectingEventHandler
  fullName: System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: SelectMethod
  nameWithType: ObjectDataSourceView.SelectMethod
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: SelectParameters
  nameWithType: ObjectDataSourceView.SelectParameters
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: SortParameterName
  nameWithType: ObjectDataSourceView.SortParameterName
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName
- uid: System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: StartRowIndexParameterName
  nameWithType: ObjectDataSourceView.StartRowIndexParameterName
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName
- uid: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: ObjectDataSourceView.System.Web.UI.IStateManager.IsTrackingViewState
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.System.Web.UI.IStateManager.IsTrackingViewState
- uid: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.LoadViewState(Object)
  nameWithType: ObjectDataSourceView.System.Web.UI.IStateManager.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.System.Web.UI.IStateManager.LoadViewState(Object)
- uid: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#SaveViewState
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.SaveViewState()
  nameWithType: ObjectDataSourceView.System.Web.UI.IStateManager.SaveViewState()
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.System.Web.UI.IStateManager.SaveViewState()
- uid: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#TrackViewState
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.TrackViewState()
  nameWithType: ObjectDataSourceView.System.Web.UI.IStateManager.TrackViewState()
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.System.Web.UI.IStateManager.TrackViewState()
- uid: System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: TrackViewState()
  nameWithType: ObjectDataSourceView.TrackViewState()
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState()
- uid: System.Web.UI.WebControls.ObjectDataSourceView.TypeName
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: TypeName
  nameWithType: ObjectDataSourceView.TypeName
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.TypeName
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Update(IDictionary,IDictionary,IDictionary)
  nameWithType: ObjectDataSourceView.Update(IDictionary,IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Update(IDictionary,IDictionary,IDictionary)
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Updated
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Updated
  nameWithType: ObjectDataSourceView.Updated
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Updated
- uid: System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: UpdateMethod
  nameWithType: ObjectDataSourceView.UpdateMethod
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod
- uid: System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: UpdateParameters
  nameWithType: ObjectDataSourceView.UpdateParameters
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Updating
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Updating
  nameWithType: ObjectDataSourceView.Updating
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Updating
- uid: System.Web.UI.WebControls.ObjectDataSourceView.#ctor*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ObjectDataSourceView
  nameWithType: ObjectDataSourceView.ObjectDataSourceView
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanDelete*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: CanDelete
  nameWithType: ObjectDataSourceView.CanDelete
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanInsert*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: CanInsert
  nameWithType: ObjectDataSourceView.CanInsert
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanPage*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: CanPage
  nameWithType: ObjectDataSourceView.CanPage
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: CanRetrieveTotalRowCount
  nameWithType: ObjectDataSourceView.CanRetrieveTotalRowCount
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanSort*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: CanSort
  nameWithType: ObjectDataSourceView.CanSort
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanUpdate*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: CanUpdate
  nameWithType: ObjectDataSourceView.CanUpdate
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ConflictDetection
  nameWithType: ObjectDataSourceView.ConflictDetection
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ConvertNullToDBNull*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ConvertNullToDBNull
  nameWithType: ObjectDataSourceView.ConvertNullToDBNull
- uid: System.Web.UI.WebControls.ObjectDataSourceView.DataObjectTypeName*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: DataObjectTypeName
  nameWithType: ObjectDataSourceView.DataObjectTypeName
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Delete*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Delete
  nameWithType: ObjectDataSourceView.Delete
- uid: System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: DeleteMethod
  nameWithType: ObjectDataSourceView.DeleteMethod
- uid: System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: DeleteParameters
  nameWithType: ObjectDataSourceView.DeleteParameters
- uid: System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: EnablePaging
  nameWithType: ObjectDataSourceView.EnablePaging
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ExecuteDelete
  nameWithType: ObjectDataSourceView.ExecuteDelete
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteInsert*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ExecuteInsert
  nameWithType: ObjectDataSourceView.ExecuteInsert
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ExecuteSelect
  nameWithType: ObjectDataSourceView.ExecuteSelect
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ExecuteUpdate
  nameWithType: ObjectDataSourceView.ExecuteUpdate
- uid: System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: FilterExpression
  nameWithType: ObjectDataSourceView.FilterExpression
- uid: System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: FilterParameters
  nameWithType: ObjectDataSourceView.FilterParameters
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Insert*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Insert
  nameWithType: ObjectDataSourceView.Insert
- uid: System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: InsertMethod
  nameWithType: ObjectDataSourceView.InsertMethod
- uid: System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: InsertParameters
  nameWithType: ObjectDataSourceView.InsertParameters
- uid: System.Web.UI.WebControls.ObjectDataSourceView.IsTrackingViewState*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: IsTrackingViewState
  nameWithType: ObjectDataSourceView.IsTrackingViewState
- uid: System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: LoadViewState
  nameWithType: ObjectDataSourceView.LoadViewState
- uid: System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: MaximumRowsParameterName
  nameWithType: ObjectDataSourceView.MaximumRowsParameterName
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OldValuesParameterFormatString
  nameWithType: ObjectDataSourceView.OldValuesParameterFormatString
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnDeleted
  nameWithType: ObjectDataSourceView.OnDeleted
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnDeleting
  nameWithType: ObjectDataSourceView.OnDeleting
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnFiltering*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnFiltering
  nameWithType: ObjectDataSourceView.OnFiltering
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnInserted*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnInserted
  nameWithType: ObjectDataSourceView.OnInserted
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnInserting*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnInserting
  nameWithType: ObjectDataSourceView.OnInserting
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnObjectCreated
  nameWithType: ObjectDataSourceView.OnObjectCreated
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnObjectCreating
  nameWithType: ObjectDataSourceView.OnObjectCreating
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnObjectDisposing
  nameWithType: ObjectDataSourceView.OnObjectDisposing
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnSelected*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnSelected
  nameWithType: ObjectDataSourceView.OnSelected
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnSelecting
  nameWithType: ObjectDataSourceView.OnSelecting
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnUpdated
  nameWithType: ObjectDataSourceView.OnUpdated
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnUpdating
  nameWithType: ObjectDataSourceView.OnUpdating
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ParsingCulture*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ParsingCulture
  nameWithType: ObjectDataSourceView.ParsingCulture
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: SaveViewState
  nameWithType: ObjectDataSourceView.SaveViewState
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Select*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Select
  nameWithType: ObjectDataSourceView.Select
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: SelectCountMethod
  nameWithType: ObjectDataSourceView.SelectCountMethod
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: SelectMethod
  nameWithType: ObjectDataSourceView.SelectMethod
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: SelectParameters
  nameWithType: ObjectDataSourceView.SelectParameters
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: SortParameterName
  nameWithType: ObjectDataSourceView.SortParameterName
- uid: System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: StartRowIndexParameterName
  nameWithType: ObjectDataSourceView.StartRowIndexParameterName
- uid: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: ObjectDataSourceView.System.Web.UI.IStateManager.IsTrackingViewState
- uid: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#LoadViewState*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.LoadViewState
  nameWithType: ObjectDataSourceView.System.Web.UI.IStateManager.LoadViewState
- uid: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#SaveViewState*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.SaveViewState
  nameWithType: ObjectDataSourceView.System.Web.UI.IStateManager.SaveViewState
- uid: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#TrackViewState*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.TrackViewState
  nameWithType: ObjectDataSourceView.System.Web.UI.IStateManager.TrackViewState
- uid: System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: TrackViewState
  nameWithType: ObjectDataSourceView.TrackViewState
- uid: System.Web.UI.WebControls.ObjectDataSourceView.TypeName*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: TypeName
  nameWithType: ObjectDataSourceView.TypeName
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Update*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Update
  nameWithType: ObjectDataSourceView.Update
- uid: System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: UpdateMethod
  nameWithType: ObjectDataSourceView.UpdateMethod
- uid: System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: UpdateParameters
  nameWithType: ObjectDataSourceView.UpdateParameters
