### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.IDataGridViewEditingControl
  id: IDataGridViewEditingControl
  children:
  - System.Windows.Forms.IDataGridViewEditingControl.ApplyCellStyleToEditingControl(System.Windows.Forms.DataGridViewCellStyle)
  - System.Windows.Forms.IDataGridViewEditingControl.EditingControlDataGridView
  - System.Windows.Forms.IDataGridViewEditingControl.EditingControlFormattedValue
  - System.Windows.Forms.IDataGridViewEditingControl.EditingControlRowIndex
  - System.Windows.Forms.IDataGridViewEditingControl.EditingControlValueChanged
  - System.Windows.Forms.IDataGridViewEditingControl.EditingControlWantsInputKey(System.Windows.Forms.Keys,System.Boolean)
  - System.Windows.Forms.IDataGridViewEditingControl.EditingPanelCursor
  - System.Windows.Forms.IDataGridViewEditingControl.GetEditingControlFormattedValue(System.Windows.Forms.DataGridViewDataErrorContexts)
  - System.Windows.Forms.IDataGridViewEditingControl.PrepareEditingControlForEdit(System.Boolean)
  - System.Windows.Forms.IDataGridViewEditingControl.RepositionEditingControlOnValueChange
  langs:
  - csharp
  name: IDataGridViewEditingControl
  nameWithType: IDataGridViewEditingControl
  fullName: System.Windows.Forms.IDataGridViewEditingControl
  type: Interface
  summary: "셀 내에 호스팅되는 컨트롤에 대 한 공통 기능을 정의 <xref href=&quot;System.Windows.Forms.DataGridView&quot;> </xref>합니다."
  remarks: "이 인터페이스와 같은 컨트롤에 의해 구현 됩니다 <xref:System.Windows.Forms.DataGridViewComboBoxEditingControl>및 <xref:System.Windows.Forms.DataGridViewTextBoxEditingControl>, 해당에서 호스팅되는 <xref:System.Windows.Forms.DataGridView>셀 <xref:System.Windows.Forms.DataGridViewComboBoxCell>및 <xref:System.Windows.Forms.DataGridViewTextBoxCell>편집 모드에 있을 때,.</xref:System.Windows.Forms.DataGridViewTextBoxCell> </xref:System.Windows.Forms.DataGridViewComboBoxCell> </xref:System.Windows.Forms.DataGridView> </xref:System.Windows.Forms.DataGridViewTextBoxEditingControl> </xref:System.Windows.Forms.DataGridViewComboBoxEditingControl>       셀 편집 컨트롤 집합을 호스팅할 수 있는 형식은 자신의 <xref:System.Windows.Forms.DataGridViewCell.EditType%2A>속성을는 <xref:System.Type>컨트롤 편집을 나타내는 형식입니다.</xref:System.Type> </xref:System.Windows.Forms.DataGridViewCell.EditType%2A> 다음 단계를 수행 하는 셀이 편집 모드로 전환할 때: 1입니다.  <xref:System.Windows.Forms.DataGridView>컨트롤 편집 컨트롤 형식의 인스턴스를 만듭니다.</xref:System.Windows.Forms.DataGridView>      2.  <xref:System.Windows.Forms.DataGridView>컨트롤 호출 셀 <xref:System.Windows.Forms.DataGridViewCell.InitializeEditingControl%2A>메서드.</xref:System.Windows.Forms.DataGridViewCell.InitializeEditingControl%2A> </xref:System.Windows.Forms.DataGridView> 편집 컨트롤에 셀 값을 전송 하려면이 메서드를 재정의할 수 있습니다.      3.  <xref:System.Windows.Forms.DataGridView>편집 컨트롤을 호출 하는 컨트롤 <xref:System.Windows.Forms.IDataGridViewEditingControl.ApplyCellStyleToEditingControl%2A>메서드 및 현재 셀의 스타일에 전달 합니다.</xref:System.Windows.Forms.IDataGridViewEditingControl.ApplyCellStyleToEditingControl%2A> </xref:System.Windows.Forms.DataGridView> 셀의 모양을 일치 하도록 편집 컨트롤의 모양을 초기화 하려면이 메서드를 구현할 수 있습니다.      4.  <xref:System.Windows.Forms.DataGridView>편집 컨트롤을 호출 하는 컨트롤 <xref:System.Windows.Forms.IDataGridViewEditingControl.PrepareEditingControlForEdit%2A>메서드.</xref:System.Windows.Forms.IDataGridViewEditingControl.PrepareEditingControlForEdit%2A> </xref:System.Windows.Forms.DataGridView> 컨트롤 값을 선택 하면 같은 편집 컨트롤에 최종적으로 조정 하려면이 메서드를 구현할 수 있습니다.       IDataGridViewEditingControl 구현에 대 한 자세한 내용은 참조 [하는 방법: Windows Forms DataGridView 셀에서 호스트 컨트롤](~/add/includes/ajax-current-ext-md.md)합니다.       셀과 같은 형식의 <xref:System.Windows.Forms.DataGridViewCheckBoxCell>호스팅하는 편집 컨트롤 구현 하지 않고 값을 지정 하기 위한 사용자 인터페이스 (UI)를 제공 하는 <xref:System.Windows.Forms.IDataGridViewEditingCell>인터페이스.</xref:System.Windows.Forms.IDataGridViewEditingCell> </xref:System.Windows.Forms.DataGridViewCheckBoxCell> 이 경우 UI 셀이 편집 모드에 있는지 여부에 관계 없이 표시 됩니다.       등의 다른 셀 형식은 <xref:System.Windows.Forms.DataGridViewButtonCell>, UI를 제공 하지만 사용자가 지정한 값을 저장 하지 마십시오.</xref:System.Windows.Forms.DataGridViewButtonCell> 이 경우 셀 유형을 구현 하지 않는 <xref:System.Windows.Forms.IDataGridViewEditingCell>또는 편집 컨트롤 호스트.</xref:System.Windows.Forms.IDataGridViewEditingCell>"
  example:
  - "The following code example provides an implementation of this interface that derives from <xref:System.Windows.Forms.DateTimePicker>. This example is part of a larger example available in [How to: Host Controls in Windows Forms DataGridView Cells](../Topic/How%20to:%20Host%20Controls%20in%20Windows%20Forms%20DataGridView%20Cells.md).  \n  \n [!code-cs[System.Windows.Forms.DataGridViewCalendarColumn#300](~/add/codesnippet/csharp/t-system.windows.forms.i_12_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridViewCalendarColumn#300](~/add/codesnippet/visualbasic/t-system.windows.forms.i_12_1.vb)]"
  syntax:
    content: public interface IDataGridViewEditingControl
  implements: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataGridViewEditingControl.ApplyCellStyleToEditingControl(System.Windows.Forms.DataGridViewCellStyle)
  id: ApplyCellStyleToEditingControl(System.Windows.Forms.DataGridViewCellStyle)
  parent: System.Windows.Forms.IDataGridViewEditingControl
  langs:
  - csharp
  name: ApplyCellStyleToEditingControl(DataGridViewCellStyle)
  nameWithType: IDataGridViewEditingControl.ApplyCellStyleToEditingControl(DataGridViewCellStyle)
  fullName: System.Windows.Forms.IDataGridViewEditingControl.ApplyCellStyleToEditingControl(DataGridViewCellStyle)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컨트롤의 UI (사용자 인터페이스) 지정 된 셀 스타일와 일치 하도록 변경 합니다."
  remarks: "일반적으로이 메서드를 구현 하는 글꼴, 배경색 및 전경색, 예: 편집 컨트롤에 대 한 UI 속성에서 해당 속성의 값에 설정 됩니다는 `dataGridViewCellStyle`, 컨트롤을 호스팅하는 셀에 사용 되는 스타일은입니다."
  example:
  - "The following code example provides an implementation of this member. This example is part of a larger example available in [How to: Host Controls in Windows Forms DataGridView Cells](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Windows.Forms.DataGridViewCalendarColumn#303](~/add/codesnippet/csharp/52aef5c4-161e-4d03-8f12-_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridViewCalendarColumn#303](~/add/codesnippet/visualbasic/52aef5c4-161e-4d03-8f12-_1.vb)]"
  syntax:
    content: public void ApplyCellStyleToEditingControl (System.Windows.Forms.DataGridViewCellStyle dataGridViewCellStyle);
    parameters:
    - id: dataGridViewCellStyle
      type: System.Windows.Forms.DataGridViewCellStyle
      description: "<xref href=&quot;System.Windows.Forms.DataGridViewCellStyle&quot;> </xref> UI에 대 한 모델을 사용 하도록 합니다."
  overload: System.Windows.Forms.IDataGridViewEditingControl.ApplyCellStyleToEditingControl*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataGridViewEditingControl.EditingControlDataGridView
  id: EditingControlDataGridView
  parent: System.Windows.Forms.IDataGridViewEditingControl
  langs:
  - csharp
  name: EditingControlDataGridView
  nameWithType: IDataGridViewEditingControl.EditingControlDataGridView
  fullName: System.Windows.Forms.IDataGridViewEditingControl.EditingControlDataGridView
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "가져오거나는 <xref href=&quot;System.Windows.Forms.DataGridView&quot;> </xref> 셀이 들어 있는입니다."
  syntax:
    content: public System.Windows.Forms.DataGridView EditingControlDataGridView { get; set; }
    return:
      type: System.Windows.Forms.DataGridView
      description: "<xref href=&quot;System.Windows.Forms.DataGridView&quot;> </xref> 를 포함 하는 <xref href=&quot;System.Windows.Forms.DataGridViewCell&quot;> </xref> 편집 중인; <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 더 연결 된 경우 <xref href=&quot;System.Windows.Forms.DataGridView&quot;> </xref>합니다."
  overload: System.Windows.Forms.IDataGridViewEditingControl.EditingControlDataGridView*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataGridViewEditingControl.EditingControlFormattedValue
  id: EditingControlFormattedValue
  parent: System.Windows.Forms.IDataGridViewEditingControl
  langs:
  - csharp
  name: EditingControlFormattedValue
  nameWithType: IDataGridViewEditingControl.EditingControlFormattedValue
  fullName: System.Windows.Forms.IDataGridViewEditingControl.EditingControlFormattedValue
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "편집기가 수정 하 고 셀의 형식이 지정 된 값을 가져오거나 설정 합니다."
  remarks: "형식이 지정 된 값을 컨트롤의 사용자 인터페이스에 표시 되는 값을 나타냅니다. 형식이 지정 된 값은 컨트롤에 포함 된 실제 값이 절대 값 및 데이터 형식과 다른 수 있습니다."
  example:
  - "The following code example provides an implementation of this member. This example is part of a larger example available in [How to: Host Controls in Windows Forms DataGridView Cells](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Windows.Forms.DataGridViewCalendarColumn#301](~/add/codesnippet/csharp/p-system.windows.forms.i_4_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridViewCalendarColumn#301](~/add/codesnippet/visualbasic/p-system.windows.forms.i_4_1.vb)]"
  syntax:
    content: public object EditingControlFormattedValue { get; set; }
    return:
      type: System.Object
      description: "<xref:System.Object>셀의 형식이 지정 된 값을 나타내는입니다.</xref:System.Object>"
  overload: System.Windows.Forms.IDataGridViewEditingControl.EditingControlFormattedValue*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataGridViewEditingControl.EditingControlRowIndex
  id: EditingControlRowIndex
  parent: System.Windows.Forms.IDataGridViewEditingControl
  langs:
  - csharp
  name: EditingControlRowIndex
  nameWithType: IDataGridViewEditingControl.EditingControlRowIndex
  fullName: System.Windows.Forms.IDataGridViewEditingControl.EditingControlRowIndex
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "호스팅 셀의 부모 행의 인덱스를 가져오거나 설정 합니다."
  remarks: "<xref:System.Windows.Forms.IDataGridViewEditingControl>인터페이스를 정의 하지는 해당 `ColumnIndex` 속성.</xref:System.Windows.Forms.IDataGridViewEditingControl> 사용할 수는 <xref:System.Windows.Forms.IDataGridViewEditingControl.EditingControlDataGridView%2A>부모를 검색 하도록 속성 <xref:System.Windows.Forms.DataGridView>제어 하 고 사용 하 여는 <xref:System.Windows.Forms.DataGridView.CurrentCellAddress%2A?displayProperty=fullName>현재 셀의 행 및 열 인덱스를 결정 하는 속성.</xref:System.Windows.Forms.DataGridView.CurrentCellAddress%2A?displayProperty=fullName> </xref:System.Windows.Forms.DataGridView> </xref:System.Windows.Forms.IDataGridViewEditingControl.EditingControlDataGridView%2A>"
  syntax:
    content: public int EditingControlRowIndex { get; set; }
    return:
      type: System.Int32
      description: "부모 행이 없는 경우 셀을 또는-1을 포함 하는 행의 인덱스입니다."
  overload: System.Windows.Forms.IDataGridViewEditingControl.EditingControlRowIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataGridViewEditingControl.EditingControlValueChanged
  id: EditingControlValueChanged
  parent: System.Windows.Forms.IDataGridViewEditingControl
  langs:
  - csharp
  name: EditingControlValueChanged
  nameWithType: IDataGridViewEditingControl.EditingControlValueChanged
  fullName: System.Windows.Forms.IDataGridViewEditingControl.EditingControlValueChanged
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "호스팅 셀의 값에서 편집 컨트롤의 값이 다른 지 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "EditingControlValueChanged 속성이로 설정 되어 `true` 를 나타내는 호스팅 셀의 상태가 변경 되 고 해당 사용자 인터페이스 (UI)의 값이이 변경 내용을 반영 하도록 업데이트 해야 합니다. 소유 하는 셀 이나 테이블에이 속성을 다시 설정 됩니다 `false` 업데이트 후 합니다."
  syntax:
    content: public bool EditingControlValueChanged { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>컨트롤의 값 셀 값; 다른 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.IDataGridViewEditingControl.EditingControlValueChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataGridViewEditingControl.EditingControlWantsInputKey(System.Windows.Forms.Keys,System.Boolean)
  id: EditingControlWantsInputKey(System.Windows.Forms.Keys,System.Boolean)
  parent: System.Windows.Forms.IDataGridViewEditingControl
  langs:
  - csharp
  name: EditingControlWantsInputKey(Keys,Boolean)
  nameWithType: IDataGridViewEditingControl.EditingControlWantsInputKey(Keys,Boolean)
  fullName: System.Windows.Forms.IDataGridViewEditingControl.EditingControlWantsInputKey(Keys,Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "지정된 된 키가 일반 입력된 키인지 편집 컨트롤에서 처리 해야 하는 특수 키인지 여부를 결정은 <xref href=&quot;System.Windows.Forms.DataGridView&quot;> </xref> 처리 해야 합니다."
  remarks: "편집 컨트롤이 컨트롤에 의해 처리는 입력된 키를 확인 하려면이 메서드를 구현 하 고는 입력 키에 <xref:System.Windows.Forms.DataGridView>.</xref:System.Windows.Forms.DataGridView> 처리       에 <xref:System.Windows.Forms.DataGridView>.</xref:System.Windows.Forms.DataGridView> EditingControlWantsInputKey 메서드는 <xref:System.Windows.Forms.DataGridView>전달 합니다 `true` 에 대 한 `dataGridViewWantsInputKey` 처리할 수 있으면는 `keyData`.</xref:System.Windows.Forms.DataGridView> 편집 컨트롤 수 있게 하는 경우는 <xref:System.Windows.Forms.DataGridView>처리는 `keyData`, EditingControlWantsInputKey 반환할지 `false` 때 `dataGridViewWantsInputKey` 은 `true`.</xref:System.Windows.Forms.DataGridView> EditingControlWantsInputKey의 다른 구현과 무시 될 수 있습니다는 `dataGridViewWantsInputKey` 값 `true` 처리는 `keyData` 편집 컨트롤의 합니다."
  example:
  - "The following code example provides an implementation of this member. This example is part of a larger example available in [How to: Host Controls in Windows Forms DataGridView Cells](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Windows.Forms.DataGridViewCalendarColumn#305](~/add/codesnippet/csharp/99571247-1933-4391-ba8c-_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridViewCalendarColumn#305](~/add/codesnippet/visualbasic/99571247-1933-4391-ba8c-_1.vb)]"
  syntax:
    content: public bool EditingControlWantsInputKey (System.Windows.Forms.Keys keyData, bool dataGridViewWantsInputKey);
    parameters:
    - id: keyData
      type: System.Windows.Forms.Keys
      description: "A <xref href=&quot;System.Windows.Forms.Keys&quot;> </xref> 누른 키를 나타내는입니다."
    - id: dataGridViewWantsInputKey
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우는 <xref href=&quot;System.Windows.Forms.DataGridView&quot;> </xref> 처리할는 <xref href=&quot;System.Windows.Forms.Keys&quot;> </xref> 에 `keyData`, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>지정된 된 키가 일반 입력된 키인지; 편집 컨트롤에서 처리 되어야 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.IDataGridViewEditingControl.EditingControlWantsInputKey*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataGridViewEditingControl.EditingPanelCursor
  id: EditingPanelCursor
  parent: System.Windows.Forms.IDataGridViewEditingControl
  langs:
  - csharp
  name: EditingPanelCursor
  nameWithType: IDataGridViewEditingControl.EditingPanelCursor
  fullName: System.Windows.Forms.IDataGridViewEditingControl.EditingPanelCursor
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "마우스 포인터를 위로 가져갈 때 사용 되는 커서를 가져옵니다는 &lt;xref:System.Windows.Forms.DataGridView.EditingPanel%2A?displayProperty=fullName&gt; 편집 컨트롤이 없습니다 이상이 걸립니다."
  remarks: "편집 패널은는 <xref:System.Windows.Forms.Panel>는 편집 컨트롤을 호스팅하는 경우는 <xref:System.Windows.Forms.DataGridView>컨트롤은 편집 모드에 있습니다.</xref:System.Windows.Forms.DataGridView> </xref:System.Windows.Forms.Panel> 실제 편집 컨트롤 편집 패널의 전체 영역을 처리 하지 않을 수 있습니다. 이 경우 EditingPanelCursor 구현에는 마우스 포인터가 컨트롤 위에 하지 아니라 패널 위에 있을 때 사용할 커서를 반환 해야 합니다. 일반적으로 컨트롤을 사용 하는 같은 커서를 반환 합니다. 포인터가 컨트롤 위에 있을 때 나타나는 커서를 변경 하려는 경우 설정 해야는 <xref:System.Windows.Forms.Control.Cursor%2A>속성.</xref:System.Windows.Forms.Control.Cursor%2A> 생성자에서 설정할 수 있습니다는 <xref:System.Windows.Forms.IDataGridViewEditingControl>구현 중 하나 또는 있습니다에서 설정할 수는 <xref:System.Windows.Forms.IDataGridViewEditingControl.PrepareEditingControlForEdit%2A>구현.</xref:System.Windows.Forms.IDataGridViewEditingControl.PrepareEditingControlForEdit%2A> </xref:System.Windows.Forms.IDataGridViewEditingControl>"
  example:
  - "The following code example provides an implementation of this member. This example is part of a larger example available in [How to: Host Controls in Windows Forms DataGridView Cells](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Windows.Forms.DataGridViewCalendarColumn#311](~/add/codesnippet/csharp/p-system.windows.forms.i_28_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridViewCalendarColumn#311](~/add/codesnippet/visualbasic/p-system.windows.forms.i_28_1.vb)]"
  syntax:
    content: public System.Windows.Forms.Cursor EditingPanelCursor { get; }
    return:
      type: System.Windows.Forms.Cursor
      description: "A <xref href=&quot;System.Windows.Forms.Cursor&quot;> </xref> 편집 패널에 사용 되는 마우스 포인터를 나타내는입니다."
  overload: System.Windows.Forms.IDataGridViewEditingControl.EditingPanelCursor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataGridViewEditingControl.GetEditingControlFormattedValue(System.Windows.Forms.DataGridViewDataErrorContexts)
  id: GetEditingControlFormattedValue(System.Windows.Forms.DataGridViewDataErrorContexts)
  parent: System.Windows.Forms.IDataGridViewEditingControl
  langs:
  - csharp
  name: GetEditingControlFormattedValue(DataGridViewDataErrorContexts)
  nameWithType: IDataGridViewEditingControl.GetEditingControlFormattedValue(DataGridViewDataErrorContexts)
  fullName: System.Windows.Forms.IDataGridViewEditingControl.GetEditingControlFormattedValue(DataGridViewDataErrorContexts)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "셀의 형식이 지정 된 값을 검색합니다."
  remarks: "형식이 지정 된 값을 컨트롤의 사용자 인터페이스에 표시 되는 값을 나타냅니다. 형식이 지정 된 값은 컨트롤에 포함 된 실제 값이 절대 값 및 데이터 형식과 다른 수 있습니다.       컨트롤의 형식이 지정 된 값을 설정 하려면는 <xref:System.Windows.Forms.IDataGridViewEditingControl.EditingControlFormattedValue%2A>속성.</xref:System.Windows.Forms.IDataGridViewEditingControl.EditingControlFormattedValue%2A>"
  syntax:
    content: public object GetEditingControlFormattedValue (System.Windows.Forms.DataGridViewDataErrorContexts context);
    parameters:
    - id: context
      type: System.Windows.Forms.DataGridViewDataErrorContexts
      description: "비트 조합 <xref href=&quot;System.Windows.Forms.DataGridViewDataErrorContexts&quot;> </xref> 데이터가 필요 컨텍스트를 지정 하는 값입니다."
    return:
      type: System.Object
      description: "<xref:System.Object>셀 내용의 서식이 지정 된 버전을 나타냅니다.</xref:System.Object>"
  overload: System.Windows.Forms.IDataGridViewEditingControl.GetEditingControlFormattedValue*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataGridViewEditingControl.PrepareEditingControlForEdit(System.Boolean)
  id: PrepareEditingControlForEdit(System.Boolean)
  parent: System.Windows.Forms.IDataGridViewEditingControl
  langs:
  - csharp
  name: PrepareEditingControlForEdit(Boolean)
  nameWithType: IDataGridViewEditingControl.PrepareEditingControlForEdit(Boolean)
  fullName: System.Windows.Forms.IDataGridViewEditingControl.PrepareEditingControlForEdit(Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "편집 하기 위해 현재 선택 된 셀을 준비합니다."
  remarks: "이 메서드의 목적은 편집을 위해 컨트롤 및 해당 내용을 준비 하는 것입니다. 예를 들어 다음 콘텐츠, 끝에 삽입 지점을 하거나 내용을 정렬 되는 방법을 변경 하는 것이 좋습니다."
  syntax:
    content: public void PrepareEditingControlForEdit (bool selectAll);
    parameters:
    - id: selectAll
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>셀의 내용을; 모두 선택 하려면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.IDataGridViewEditingControl.PrepareEditingControlForEdit*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataGridViewEditingControl.RepositionEditingControlOnValueChange
  id: RepositionEditingControlOnValueChange
  parent: System.Windows.Forms.IDataGridViewEditingControl
  langs:
  - csharp
  name: RepositionEditingControlOnValueChange
  nameWithType: IDataGridViewEditingControl.RepositionEditingControlOnValueChange
  fullName: System.Windows.Forms.IDataGridViewEditingControl.RepositionEditingControlOnValueChange
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "셀 내용 값이 변경 될 때마다 위치를 변경 해야 하는지 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "값이 변경 될 때 셀 내용 위치는 해야 할 경우도 있습니다. 예를 들어 셀 내용 셀에 텍스트를 배치 하 고 커지면 위치를 변경 해야 합니다."
  syntax:
    content: public bool RepositionEditingControlOnValueChange { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>콘텐츠를; 위치를 변경 해야 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.IDataGridViewEditingControl.RepositionEditingControlOnValueChange*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Forms.IDataGridViewEditingControl.ApplyCellStyleToEditingControl(System.Windows.Forms.DataGridViewCellStyle)
  parent: System.Windows.Forms.IDataGridViewEditingControl
  isExternal: false
  name: ApplyCellStyleToEditingControl(DataGridViewCellStyle)
  nameWithType: IDataGridViewEditingControl.ApplyCellStyleToEditingControl(DataGridViewCellStyle)
  fullName: System.Windows.Forms.IDataGridViewEditingControl.ApplyCellStyleToEditingControl(DataGridViewCellStyle)
- uid: System.Windows.Forms.DataGridViewCellStyle
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewCellStyle
  nameWithType: DataGridViewCellStyle
  fullName: System.Windows.Forms.DataGridViewCellStyle
- uid: System.Windows.Forms.IDataGridViewEditingControl.EditingControlDataGridView
  parent: System.Windows.Forms.IDataGridViewEditingControl
  isExternal: false
  name: EditingControlDataGridView
  nameWithType: IDataGridViewEditingControl.EditingControlDataGridView
  fullName: System.Windows.Forms.IDataGridViewEditingControl.EditingControlDataGridView
- uid: System.Windows.Forms.DataGridView
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridView
  nameWithType: DataGridView
  fullName: System.Windows.Forms.DataGridView
- uid: System.Windows.Forms.IDataGridViewEditingControl.EditingControlFormattedValue
  parent: System.Windows.Forms.IDataGridViewEditingControl
  isExternal: false
  name: EditingControlFormattedValue
  nameWithType: IDataGridViewEditingControl.EditingControlFormattedValue
  fullName: System.Windows.Forms.IDataGridViewEditingControl.EditingControlFormattedValue
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Forms.IDataGridViewEditingControl.EditingControlRowIndex
  parent: System.Windows.Forms.IDataGridViewEditingControl
  isExternal: false
  name: EditingControlRowIndex
  nameWithType: IDataGridViewEditingControl.EditingControlRowIndex
  fullName: System.Windows.Forms.IDataGridViewEditingControl.EditingControlRowIndex
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Forms.IDataGridViewEditingControl.EditingControlValueChanged
  parent: System.Windows.Forms.IDataGridViewEditingControl
  isExternal: false
  name: EditingControlValueChanged
  nameWithType: IDataGridViewEditingControl.EditingControlValueChanged
  fullName: System.Windows.Forms.IDataGridViewEditingControl.EditingControlValueChanged
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.IDataGridViewEditingControl.EditingControlWantsInputKey(System.Windows.Forms.Keys,System.Boolean)
  parent: System.Windows.Forms.IDataGridViewEditingControl
  isExternal: false
  name: EditingControlWantsInputKey(Keys,Boolean)
  nameWithType: IDataGridViewEditingControl.EditingControlWantsInputKey(Keys,Boolean)
  fullName: System.Windows.Forms.IDataGridViewEditingControl.EditingControlWantsInputKey(Keys,Boolean)
- uid: System.Windows.Forms.Keys
  parent: System.Windows.Forms
  isExternal: false
  name: Keys
  nameWithType: Keys
  fullName: System.Windows.Forms.Keys
- uid: System.Windows.Forms.IDataGridViewEditingControl.EditingPanelCursor
  parent: System.Windows.Forms.IDataGridViewEditingControl
  isExternal: false
  name: EditingPanelCursor
  nameWithType: IDataGridViewEditingControl.EditingPanelCursor
  fullName: System.Windows.Forms.IDataGridViewEditingControl.EditingPanelCursor
- uid: System.Windows.Forms.Cursor
  parent: System.Windows.Forms
  isExternal: false
  name: Cursor
  nameWithType: Cursor
  fullName: System.Windows.Forms.Cursor
- uid: System.Windows.Forms.IDataGridViewEditingControl.GetEditingControlFormattedValue(System.Windows.Forms.DataGridViewDataErrorContexts)
  parent: System.Windows.Forms.IDataGridViewEditingControl
  isExternal: false
  name: GetEditingControlFormattedValue(DataGridViewDataErrorContexts)
  nameWithType: IDataGridViewEditingControl.GetEditingControlFormattedValue(DataGridViewDataErrorContexts)
  fullName: System.Windows.Forms.IDataGridViewEditingControl.GetEditingControlFormattedValue(DataGridViewDataErrorContexts)
- uid: System.Windows.Forms.DataGridViewDataErrorContexts
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewDataErrorContexts
  nameWithType: DataGridViewDataErrorContexts
  fullName: System.Windows.Forms.DataGridViewDataErrorContexts
- uid: System.Windows.Forms.IDataGridViewEditingControl.PrepareEditingControlForEdit(System.Boolean)
  parent: System.Windows.Forms.IDataGridViewEditingControl
  isExternal: false
  name: PrepareEditingControlForEdit(Boolean)
  nameWithType: IDataGridViewEditingControl.PrepareEditingControlForEdit(Boolean)
  fullName: System.Windows.Forms.IDataGridViewEditingControl.PrepareEditingControlForEdit(Boolean)
- uid: System.Windows.Forms.IDataGridViewEditingControl.RepositionEditingControlOnValueChange
  parent: System.Windows.Forms.IDataGridViewEditingControl
  isExternal: false
  name: RepositionEditingControlOnValueChange
  nameWithType: IDataGridViewEditingControl.RepositionEditingControlOnValueChange
  fullName: System.Windows.Forms.IDataGridViewEditingControl.RepositionEditingControlOnValueChange
- uid: System.Windows.Forms.IDataGridViewEditingControl.ApplyCellStyleToEditingControl*
  parent: System.Windows.Forms.IDataGridViewEditingControl
  isExternal: false
  name: ApplyCellStyleToEditingControl
  nameWithType: IDataGridViewEditingControl.ApplyCellStyleToEditingControl
- uid: System.Windows.Forms.IDataGridViewEditingControl.EditingControlDataGridView*
  parent: System.Windows.Forms.IDataGridViewEditingControl
  isExternal: false
  name: EditingControlDataGridView
  nameWithType: IDataGridViewEditingControl.EditingControlDataGridView
- uid: System.Windows.Forms.IDataGridViewEditingControl.EditingControlFormattedValue*
  parent: System.Windows.Forms.IDataGridViewEditingControl
  isExternal: false
  name: EditingControlFormattedValue
  nameWithType: IDataGridViewEditingControl.EditingControlFormattedValue
- uid: System.Windows.Forms.IDataGridViewEditingControl.EditingControlRowIndex*
  parent: System.Windows.Forms.IDataGridViewEditingControl
  isExternal: false
  name: EditingControlRowIndex
  nameWithType: IDataGridViewEditingControl.EditingControlRowIndex
- uid: System.Windows.Forms.IDataGridViewEditingControl.EditingControlValueChanged*
  parent: System.Windows.Forms.IDataGridViewEditingControl
  isExternal: false
  name: EditingControlValueChanged
  nameWithType: IDataGridViewEditingControl.EditingControlValueChanged
- uid: System.Windows.Forms.IDataGridViewEditingControl.EditingControlWantsInputKey*
  parent: System.Windows.Forms.IDataGridViewEditingControl
  isExternal: false
  name: EditingControlWantsInputKey
  nameWithType: IDataGridViewEditingControl.EditingControlWantsInputKey
- uid: System.Windows.Forms.IDataGridViewEditingControl.EditingPanelCursor*
  parent: System.Windows.Forms.IDataGridViewEditingControl
  isExternal: false
  name: EditingPanelCursor
  nameWithType: IDataGridViewEditingControl.EditingPanelCursor
- uid: System.Windows.Forms.IDataGridViewEditingControl.GetEditingControlFormattedValue*
  parent: System.Windows.Forms.IDataGridViewEditingControl
  isExternal: false
  name: GetEditingControlFormattedValue
  nameWithType: IDataGridViewEditingControl.GetEditingControlFormattedValue
- uid: System.Windows.Forms.IDataGridViewEditingControl.PrepareEditingControlForEdit*
  parent: System.Windows.Forms.IDataGridViewEditingControl
  isExternal: false
  name: PrepareEditingControlForEdit
  nameWithType: IDataGridViewEditingControl.PrepareEditingControlForEdit
- uid: System.Windows.Forms.IDataGridViewEditingControl.RepositionEditingControlOnValueChange*
  parent: System.Windows.Forms.IDataGridViewEditingControl
  isExternal: false
  name: RepositionEditingControlOnValueChange
  nameWithType: IDataGridViewEditingControl.RepositionEditingControlOnValueChange
