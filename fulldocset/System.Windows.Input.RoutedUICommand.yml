### YamlMime:ManagedReference
items:
- uid: System.Windows.Input.RoutedUICommand
  id: RoutedUICommand
  children:
  - System.Windows.Input.RoutedUICommand.#ctor
  - System.Windows.Input.RoutedUICommand.#ctor(System.String,System.String,System.Type)
  - System.Windows.Input.RoutedUICommand.#ctor(System.String,System.String,System.Type,System.Windows.Input.InputGestureCollection)
  - System.Windows.Input.RoutedUICommand.Text
  langs:
  - csharp
  name: RoutedUICommand
  nameWithType: RoutedUICommand
  fullName: System.Windows.Input.RoutedUICommand
  type: Class
  summary: "정의 <xref:System.Windows.Input.ICommand>요소 트리를 통해 라우팅됩니다 하 고 텍스트 속성을 포함 합니다.</xref:System.Windows.Input.ICommand>"
  remarks: "RoutedUICommand 사이의 차이 및 <xref:System.Windows.Input.RoutedCommand>은 RoutedUICommand 포함 하는 한 <xref:System.Windows.Input.RoutedUICommand.Text%2A>속성.</xref:System.Windows.Input.RoutedUICommand.Text%2A> </xref:System.Windows.Input.RoutedCommand>       <xref:System.Windows.Input.RoutedCommand.Execute%2A>및 <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> <xref:System.Windows.Input.RoutedCommand>에 일반적인 <xref:System.Windows.Input.ICommand>.</xref:System.Windows.Input.ICommand> 경우 처럼 명령에 대 한 명령 논리가 포함 되어 있지 않으면</xref:System.Windows.Input.RoutedCommand> 를 메서드</xref:System.Windows.Input.RoutedCommand.CanExecute%2A> </xref:System.Windows.Input.RoutedCommand.Execute%2A>  이러한 메서드는 개체에 <xref:System.Windows.Input.CommandBinding>.</xref:System.Windows.Input.CommandBinding> 찾는 요소 트리를 탐색 하는 이벤트를 발생 시킵니다.  에 연결 된 이벤트 처리기는 <xref:System.Windows.Input.CommandBinding>명령 논리를 포함 합니다.</xref:System.Windows.Input.CommandBinding>       <xref:System.Windows.Input.RoutedCommand.Execute%2A>발생 시키는 메서드는 <xref:System.Windows.Input.CommandManager.PreviewExecuted>및 <xref:System.Windows.Input.CommandManager.Executed>이벤트.</xref:System.Windows.Input.CommandManager.Executed> </xref:System.Windows.Input.CommandManager.PreviewExecuted> </xref:System.Windows.Input.RoutedCommand.Execute%2A>  <xref:System.Windows.Input.RoutedCommand.CanExecute%2A>발생 시키는 메서드는 <xref:System.Windows.Input.CommandManager.PreviewCanExecute>및 <xref:System.Windows.Input.CommandManager.CanExecute>이벤트.</xref:System.Windows.Input.CommandManager.CanExecute> </xref:System.Windows.Input.CommandManager.PreviewCanExecute> </xref:System.Windows.Input.RoutedCommand.CanExecute%2A>      <a name=&quot;xamlAttributeUsage_RoutedUICommand&quot;></a># # XAML 특성 사용 ```   <object property=&quot;predefinedCommandName&quot;/>   - or -   <object property=&quot;predefinedClassName.predefinedCommandName&quot;/>   - or -   <object property=&quot;{x:Static customClassName.customCommandName}&quot;/>      ``` <a name=&quot;xamlValues_RoutedUICommand&quot;> </a> # # XAML 값 *predefinedClassName* 미리 정의 된 명령 클래스 중 하나입니다.             *predefinedCommandName* 미리 정의 된 명령 중 하나입니다.       *접두사* 는 `xlmns` 매핑되는 접두사 *customClassName*.* customCommandName* 에 [!INCLUDE[TLA2#tla_net](~/add/includes/tla2sharptla-net-md.md)] 클래스입니다.  자세한 내용은 참조 [XAML 네임 스페이스 및 WPF XAML에 대 한 매핑 Namespace](~/add/includes/ajax-current-ext-md.md)합니다.       *customClassName* 사용자 지정 명령을 포함 하는 사용자 지정 클래스입니다.       *customCommandName* 사용자 지정 명령입니다."
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter("System.Windows.Input.CommandConverter, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")]

      public class RoutedUICommand : System.Windows.Input.RoutedCommand
  inheritance:
  - System.Object
  - System.Windows.Input.RoutedCommand
  implements: []
  inheritedMembers:
  - System.Windows.Input.RoutedCommand.CanExecute(System.Object,System.Windows.IInputElement)
  - System.Windows.Input.RoutedCommand.CanExecuteChanged
  - System.Windows.Input.RoutedCommand.Execute(System.Object,System.Windows.IInputElement)
  - System.Windows.Input.RoutedCommand.InputGestures
  - System.Windows.Input.RoutedCommand.Name
  - System.Windows.Input.RoutedCommand.OwnerType
  - System.Windows.Input.RoutedCommand.System#Windows#Input#ICommand#CanExecute(System.Object)
  - System.Windows.Input.RoutedCommand.System#Windows#Input#ICommand#Execute(System.Object)
  platform:
  - net462
- uid: System.Windows.Input.RoutedUICommand.#ctor
  id: '#ctor'
  parent: System.Windows.Input.RoutedUICommand
  langs:
  - csharp
  name: RoutedUICommand()
  nameWithType: RoutedUICommand.RoutedUICommand()
  fullName: System.Windows.Input.RoutedUICommand.RoutedUICommand()
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Windows.Input.RoutedUICommand&quot;> </xref> 클래스입니다."
  syntax:
    content: public RoutedUICommand ();
    parameters: []
  overload: System.Windows.Input.RoutedUICommand.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.RoutedUICommand.#ctor(System.String,System.String,System.Type)
  id: '#ctor(System.String,System.String,System.Type)'
  parent: System.Windows.Input.RoutedUICommand
  langs:
  - csharp
  name: RoutedUICommand(String,String,Type)
  nameWithType: RoutedUICommand.RoutedUICommand(String,String,Type)
  fullName: System.Windows.Input.RoutedUICommand.RoutedUICommand(String,String,Type)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Windows.Input.RoutedUICommand&quot;> </xref> 클래스, 이름 및 소유자 유형을 선언 합니다. 지정된 된 설명 텍스트를 사용 합니다."
  syntax:
    content: public RoutedUICommand (string text, string name, Type ownerType);
    parameters:
    - id: text
      type: System.String
      description: "명령에 대 한 설명 텍스트입니다."
    - id: name
      type: System.String
      description: "Serialization에 대 한 명령의 선언 된 이름입니다."
    - id: ownerType
      type: System.Type
      description: "명령을 등록 하는 형식입니다."
  overload: System.Windows.Input.RoutedUICommand.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>ownerType</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Input.RoutedUICommand.#ctor(System.String,System.String,System.Type,System.Windows.Input.InputGestureCollection)
  id: '#ctor(System.String,System.String,System.Type,System.Windows.Input.InputGestureCollection)'
  parent: System.Windows.Input.RoutedUICommand
  langs:
  - csharp
  name: RoutedUICommand(String,String,Type,InputGestureCollection)
  nameWithType: RoutedUICommand.RoutedUICommand(String,String,Type,InputGestureCollection)
  fullName: System.Windows.Input.RoutedUICommand.RoutedUICommand(String,String,Type,InputGestureCollection)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Windows.Input.RoutedUICommand&quot;> </xref> 클래스, 지정 된 설명 텍스트, 선언 된 이름, 소유자 유형 및 입력된 제스처를 사용 합니다."
  syntax:
    content: public RoutedUICommand (string text, string name, Type ownerType, System.Windows.Input.InputGestureCollection inputGestures);
    parameters:
    - id: text
      type: System.String
      description: "명령에 대 한 설명 텍스트입니다."
    - id: name
      type: System.String
      description: "Serialization에 대 한 명령의 선언 된 이름입니다."
    - id: ownerType
      type: System.Type
      description: "명령을 등록 하는 형식입니다."
    - id: inputGestures
      type: System.Windows.Input.InputGestureCollection
      description: "명령을 사용 하 여 연결 하는 제스처의 컬렉션입니다."
  overload: System.Windows.Input.RoutedUICommand.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>ownerType</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Input.RoutedUICommand.Text
  id: Text
  parent: System.Windows.Input.RoutedUICommand
  langs:
  - csharp
  name: Text
  nameWithType: RoutedUICommand.Text
  fullName: System.Windows.Input.RoutedUICommand.Text
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "이 명령에 설명 하는 텍스트를 가져오거나 설정 합니다."
  syntax:
    content: public string Text { get; set; }
    return:
      type: System.String
      description: "텍스트 명령을 설명입니다.  기본값은 빈 문자열입니다."
  overload: System.Windows.Input.RoutedUICommand.Text*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Input.RoutedCommand
  isExternal: false
  name: System.Windows.Input.RoutedCommand
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Windows.Input.RoutedUICommand.#ctor
  parent: System.Windows.Input.RoutedUICommand
  isExternal: false
  name: RoutedUICommand()
  nameWithType: RoutedUICommand.RoutedUICommand()
  fullName: System.Windows.Input.RoutedUICommand.RoutedUICommand()
- uid: System.Windows.Input.RoutedUICommand.#ctor(System.String,System.String,System.Type)
  parent: System.Windows.Input.RoutedUICommand
  isExternal: false
  name: RoutedUICommand(String,String,Type)
  nameWithType: RoutedUICommand.RoutedUICommand(String,String,Type)
  fullName: System.Windows.Input.RoutedUICommand.RoutedUICommand(String,String,Type)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Windows.Input.RoutedUICommand.#ctor(System.String,System.String,System.Type,System.Windows.Input.InputGestureCollection)
  parent: System.Windows.Input.RoutedUICommand
  isExternal: false
  name: RoutedUICommand(String,String,Type,InputGestureCollection)
  nameWithType: RoutedUICommand.RoutedUICommand(String,String,Type,InputGestureCollection)
  fullName: System.Windows.Input.RoutedUICommand.RoutedUICommand(String,String,Type,InputGestureCollection)
- uid: System.Windows.Input.InputGestureCollection
  parent: System.Windows.Input
  isExternal: false
  name: InputGestureCollection
  nameWithType: InputGestureCollection
  fullName: System.Windows.Input.InputGestureCollection
- uid: System.Windows.Input.RoutedUICommand.Text
  parent: System.Windows.Input.RoutedUICommand
  isExternal: false
  name: Text
  nameWithType: RoutedUICommand.Text
  fullName: System.Windows.Input.RoutedUICommand.Text
- uid: System.Windows.Input.RoutedUICommand.#ctor*
  parent: System.Windows.Input.RoutedUICommand
  isExternal: false
  name: RoutedUICommand
  nameWithType: RoutedUICommand.RoutedUICommand
- uid: System.Windows.Input.RoutedUICommand.Text*
  parent: System.Windows.Input.RoutedUICommand
  isExternal: false
  name: Text
  nameWithType: RoutedUICommand.Text
