### YamlMime:ManagedReference
items:
- uid: System.Windows.Shell.JumpTask
  id: JumpTask
  children:
  - System.Windows.Shell.JumpTask.#ctor
  - System.Windows.Shell.JumpTask.ApplicationPath
  - System.Windows.Shell.JumpTask.Arguments
  - System.Windows.Shell.JumpTask.Description
  - System.Windows.Shell.JumpTask.IconResourceIndex
  - System.Windows.Shell.JumpTask.IconResourcePath
  - System.Windows.Shell.JumpTask.Title
  - System.Windows.Shell.JumpTask.WorkingDirectory
  langs:
  - csharp
  name: JumpTask
  nameWithType: JumpTask
  fullName: System.Windows.Shell.JumpTask
  type: Class
  summary: "응용 프로그램에 바로 가기를 나타냅니다는 [!INCLUDE[win7](~/add/includes/win7-md.md)] 작업 표시줄 점프 목록입니다."
  remarks: "응용 프로그램에 바로 가기로 JumpTask 생각할 수 있습니다. 실행 파일의 경로를 설정 하 여 지정 된 <xref:System.Windows.Shell.JumpTask.ApplicationPath%2A>속성.</xref:System.Windows.Shell.JumpTask.ApplicationPath%2A> 경우는 <xref:System.Windows.Shell.JumpTask.ApplicationPath%2A>암시 현재 실행 중인 프로세스의 경로 설정 하지 않으면.</xref:System.Windows.Shell.JumpTask.ApplicationPath%2A> 선택적으로 지정할 수 <xref:System.Windows.Shell.JumpTask.Arguments%2A>시작 시 응용 프로그램에 전달할.</xref:System.Windows.Shell.JumpTask.Arguments%2A>       와 같은 기본 표시 속성을 설정할 수 있습니다 <xref:System.Windows.Shell.JumpTask.Title%2A>, <xref:System.Windows.Shell.JumpTask.Description%2A>, 및 <xref:System.Windows.Shell.JumpTask.IconResourcePath%2A>점프 목록에 작업의 모양을 지정할 수 있습니다.</xref:System.Windows.Shell.JumpTask.IconResourcePath%2A> </xref:System.Windows.Shell.JumpTask.Description%2A> </xref:System.Windows.Shell.JumpTask.Title%2A> JumpTask 함께 사용 하는 아이콘은 네이티브 리소스로 제공 해야 합니다. 에 있는 오프셋을 지정 하 여 사용할을 지정 하는 여러 아이콘 리소스 DLL 또는 실행 파일에서 사용할 수 있는 경우는 <xref:System.Windows.Shell.JumpTask.IconResourceIndex%2A>속성.</xref:System.Windows.Shell.JumpTask.IconResourceIndex%2A>       기본적으로는 JumpTask에 배치 됩니다는 **작업** 범주 점프 목록입니다. 설정 하 여 작업의 사용자 지정 그룹화를 지정할 수는 <xref:System.Windows.Shell.JumpItem.CustomCategory%2A>속성.</xref:System.Windows.Shell.JumpItem.CustomCategory%2A>       가 없는 JumpTask 만들어 점프 목록에서 항목을 시각적으로 구분할 수 있습니다는 <xref:System.Windows.Shell.JumpTask.Title%2A>및 <xref:System.Windows.Shell.JumpItem.CustomCategory%2A>지정.</xref:System.Windows.Shell.JumpItem.CustomCategory%2A> </xref:System.Windows.Shell.JumpTask.Title%2A> 이 빈 JumpTask 점프 목록에는 가로 선으로 표시 됩니다. 이 경우 다른 속성을 설정할 수 있지만 영향을 줄 수는 없습니다."
  example:
  - "The following example shows how to declare a JumpTask in markup. The JumpTask opens a text file named `readme.txt` in the Notepad application.  \n  \n [!code-xml[Shell_JumpListSample#002](~/add/codesnippet/xaml/jumplistsample/app.xaml#002)]  \n  \n The following example shows how to configure a JumpTask in code. The JumpTask opens the Calculator application.  \n  \n [!code-cs[Shell_JumpListSample#241](~/add/codesnippet/csharp/jumplistsample/mainwindow.xaml.cs#241)]"
  syntax:
    content: 'public class JumpTask : System.Windows.Shell.JumpItem'
  inheritance:
  - System.Object
  - System.Windows.Shell.JumpItem
  implements: []
  inheritedMembers:
  - System.Windows.Shell.JumpItem.CustomCategory
  platform:
  - net462
- uid: System.Windows.Shell.JumpTask.#ctor
  id: '#ctor'
  parent: System.Windows.Shell.JumpTask
  langs:
  - csharp
  name: JumpTask()
  nameWithType: JumpTask.JumpTask()
  fullName: System.Windows.Shell.JumpTask.JumpTask()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Windows.Shell.JumpTask&quot;> </xref> 클래스입니다."
  syntax:
    content: public JumpTask ();
    parameters: []
  overload: System.Windows.Shell.JumpTask.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.JumpTask.ApplicationPath
  id: ApplicationPath
  parent: System.Windows.Shell.JumpTask
  langs:
  - csharp
  name: ApplicationPath
  nameWithType: JumpTask.ApplicationPath
  fullName: System.Windows.Shell.JumpTask.ApplicationPath
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "응용 프로그램에는 경로 가져오거나 설정 합니다."
  remarks: "ApplicationPath 속성을 지정 하지 않으면 현재 실행 중인 프로세스의 경로 포함 됩니다. 응용 프로그램이 다른 프로그램 실행 파일에 대 한 작업을 포함할 수 있습니다."
  example:
  - "The following example shows how to declare a <xref:System.Windows.Shell.JumpTask> in markup. The <xref:System.Windows.Shell.JumpTask> opens a text file named `readme.txt` in the Notepad application.  \n  \n [!code-xml[Shell_JumpListSample#002](~/add/codesnippet/xaml/jumplistsample/app.xaml#002)]  \n  \n The following example shows how to configure a <xref:System.Windows.Shell.JumpTask> in code. The <xref:System.Windows.Shell.JumpTask> opens the Calculator application.  \n  \n [!code-cs[Shell_JumpListSample#241](~/add/codesnippet/csharp/jumplistsample/mainwindow.xaml.cs#241)]"
  syntax:
    content: public string ApplicationPath { get; set; }
    return:
      type: System.String
      description: "응용 프로그램에 대 한 경로입니다. 기본값은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Shell.JumpTask.ApplicationPath*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.JumpTask.Arguments
  id: Arguments
  parent: System.Windows.Shell.JumpTask
  langs:
  - csharp
  name: Arguments
  nameWithType: JumpTask.Arguments
  fullName: System.Windows.Shell.JumpTask.Arguments
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "시작할 때 응용 프로그램에 전달 된 인수를 가져오거나 설정 합니다."
  remarks: ''
  example:
  - "The following example shows how to declare a <xref:System.Windows.Shell.JumpTask> in markup. The <xref:System.Windows.Shell.JumpTask> opens a text file named `readme.txt` in the Notepad application.  \n  \n [!code-xml[Shell_JumpListSample#002](~/add/codesnippet/xaml/jumplistsample/app.xaml#002)]"
  syntax:
    content: public string Arguments { get; set; }
    return:
      type: System.String
      description: "인수는 시작할 때 응용 프로그램에 전달 합니다. 기본값은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Shell.JumpTask.Arguments*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.JumpTask.Description
  id: Description
  parent: System.Windows.Shell.JumpTask
  langs:
  - csharp
  name: Description
  nameWithType: JumpTask.Description
  fullName: System.Windows.Shell.JumpTask.Description
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "점프 목록에 작업에 대 한 도구 설명에 표시 되는 텍스트를 가져오거나 설정 합니다."
  remarks: ''
  example:
  - "The following example shows how to declare a <xref:System.Windows.Shell.JumpTask> in markup. The <xref:System.Windows.Shell.JumpTask> opens a text file named `readme.txt` in the Notepad application.  \n  \n [!code-xml[Shell_JumpListSample#002](~/add/codesnippet/xaml/jumplistsample/app.xaml#002)]  \n  \n The following example shows how to configure a <xref:System.Windows.Shell.JumpTask> in code. The <xref:System.Windows.Shell.JumpTask> opens the Calculator application.  \n  \n [!code-cs[Shell_JumpListSample#241](~/add/codesnippet/csharp/jumplistsample/mainwindow.xaml.cs#241)]"
  syntax:
    content: public string Description { get; set; }
    return:
      type: System.String
      description: "작업에 대 한 도구 설명에 표시할 텍스트입니다. 기본값은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Shell.JumpTask.Description*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.JumpTask.IconResourceIndex
  id: IconResourceIndex
  parent: System.Windows.Shell.JumpTask
  langs:
  - csharp
  name: IconResourceIndex
  nameWithType: JumpTask.IconResourceIndex
  fullName: System.Windows.Shell.JumpTask.IconResourceIndex
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "리소스에 포함 된 아이콘의&0;부터 시작 하는 인덱스를 가져오거나 설정 합니다."
  remarks: "함께 사용할 아이콘을 <xref:System.Windows.Shell.JumpTask>네이티브 리소스로 사용할 수 있어야 합니다.</xref:System.Windows.Shell.JumpTask> 여러 개의 아이콘을 DLL 또는 실행 파일에서 사용할 수 있으면 IconResourceIndex 속성에 있는 오프셋을 지정 하 여 사용할 하나를 지정 합니다.       없는 아이콘 리소스를 지정 하거나 지정 된 아이콘을 찾을 수 없는 경우에 표준 시스템 아이콘이 표시 됩니다. 아이콘이 표시 되도록를 지정 하려면-1로 IconResourceIndex 속성을 설정 합니다."
  example:
  - "The following example shows how to declare a <xref:System.Windows.Shell.JumpTask> in markup. The <xref:System.Windows.Shell.JumpTask> opens a text file named `readme.txt` in the Notepad application.  \n  \n [!code-xml[Shell_JumpListSample#002](~/add/codesnippet/xaml/jumplistsample/app.xaml#002)]"
  syntax:
    content: public int IconResourceIndex { get; set; }
    return:
      type: System.Int32
      description: "아이콘을 사용 하는 아이콘이 없는 경우-1의&0;부터 시작 하는 인덱스입니다. 기본값은 0입니다."
  overload: System.Windows.Shell.JumpTask.IconResourceIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.JumpTask.IconResourcePath
  id: IconResourcePath
  parent: System.Windows.Shell.JumpTask
  langs:
  - csharp
  name: IconResourcePath
  nameWithType: JumpTask.IconResourcePath
  fullName: System.Windows.Shell.JumpTask.IconResourcePath
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "점프 목록에 표시할 아이콘을 포함 하는 리소스에 경로 가져오거나 설정 합니다."
  remarks: "함께 사용할 아이콘을 <xref:System.Windows.Shell.JumpTask>네이티브 리소스로 사용할 수 있어야 합니다.</xref:System.Windows.Shell.JumpTask> 에 있는 오프셋을 지정 하 여 사용할을 지정 하는 여러 개의 아이콘을 DLL 또는 실행 파일에서 사용할 수는 <xref:System.Windows.Shell.JumpTask.IconResourceIndex%2A>속성.</xref:System.Windows.Shell.JumpTask.IconResourceIndex%2A>       없는 아이콘 리소스를 지정 하거나 지정 된 아이콘을 찾을 수 없는 경우에 표준 시스템 아이콘이 표시 됩니다. 아이콘이 표시 되도록 지정 하려면는 <xref:System.Windows.Shell.JumpTask.IconResourceIndex%2A>속성을-1.</xref:System.Windows.Shell.JumpTask.IconResourceIndex%2A>"
  example:
  - "The following example shows how to declare a <xref:System.Windows.Shell.JumpTask> in markup. The <xref:System.Windows.Shell.JumpTask> opens a text file named `readme.txt` in the Notepad application.  \n  \n [!code-xml[Shell_JumpListSample#002](~/add/codesnippet/xaml/jumplistsample/app.xaml#002)]  \n  \n The following example shows how to configure a <xref:System.Windows.Shell.JumpTask> in code. The <xref:System.Windows.Shell.JumpTask> opens the Calculator application.  \n  \n [!code-cs[Shell_JumpListSample#241](~/add/codesnippet/csharp/jumplistsample/mainwindow.xaml.cs#241)]"
  syntax:
    content: public string IconResourcePath { get; set; }
    return:
      type: System.String
      description: "아이콘이 포함 된 리소스에 대 한 경로입니다. 기본값은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Shell.JumpTask.IconResourcePath*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.JumpTask.Title
  id: Title
  parent: System.Windows.Shell.JumpTask
  langs:
  - csharp
  name: Title
  nameWithType: JumpTask.Title
  fullName: System.Windows.Shell.JumpTask.Title
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "점프 목록에 작업에 대 한 표시 텍스트를 가져오거나 설정 합니다."
  remarks: "에 대 한 Title 속성 일반적으로 설정 해야 합니다는 <xref:System.Windows.Shell.JumpTask>클릭할 수 있는 작업으로 점프 목록 표시를 합니다.</xref:System.Windows.Shell.JumpTask>       만들어서 점프 목록에서 항목 시각적으로 구분할 수 또는 <xref:System.Windows.Shell.JumpTask>제목을 변수가 없는 및 <xref:System.Windows.Shell.JumpItem.CustomCategory%2A>지정.</xref:System.Windows.Shell.JumpItem.CustomCategory%2A> </xref:System.Windows.Shell.JumpTask> 이 빈 <xref:System.Windows.Shell.JumpTask>점프 목록에는 가로 선으로 표시 됩니다.</xref:System.Windows.Shell.JumpTask> 이 경우 다른 속성을 설정할 수 있지만 영향을 줄 수는 없습니다."
  example:
  - "The following example shows how to declare a <xref:System.Windows.Shell.JumpTask> in markup. The <xref:System.Windows.Shell.JumpTask> opens a text file name `readme.txt` in the Notepad application.  \n  \n [!code-xml[Shell_JumpListSample#002](~/add/codesnippet/xaml/jumplistsample/app.xaml#002)]  \n  \n The following example shows how to configure a <xref:System.Windows.Shell.JumpTask> in code. The <xref:System.Windows.Shell.JumpTask> opens the Calculator application.  \n  \n [!code-cs[Shell_JumpListSample#241](~/add/codesnippet/csharp/jumplistsample/mainwindow.xaml.cs#241)]"
  syntax:
    content: public string Title { get; set; }
    return:
      type: System.String
      description: "점프 목록에 작업에 대 한 표시 텍스트입니다. 기본값은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Shell.JumpTask.Title*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.JumpTask.WorkingDirectory
  id: WorkingDirectory
  parent: System.Windows.Shell.JumpTask
  langs:
  - csharp
  name: WorkingDirectory
  nameWithType: JumpTask.WorkingDirectory
  fullName: System.Windows.Shell.JumpTask.WorkingDirectory
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "시작할 때 응용 프로그램의 작업 디렉터리를 가져오거나 설정 합니다."
  remarks: ''
  example:
  - "The following example shows how to declare a <xref:System.Windows.Shell.JumpTask> in markup. The <xref:System.Windows.Shell.JumpTask> opens a text file named `readme.txt` in the Notepad application.  \n  \n [!code-xml[Shell_JumpListSample#002](~/add/codesnippet/xaml/jumplistsample/app.xaml#002)]"
  syntax:
    content: public string WorkingDirectory { get; set; }
    return:
      type: System.String
      description: "시작할 때 응용 프로그램의 작업 디렉터리입니다. 기본값은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Shell.JumpTask.WorkingDirectory*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Shell.JumpItem
  isExternal: false
  name: System.Windows.Shell.JumpItem
- uid: System.Windows.Shell.JumpTask.#ctor
  parent: System.Windows.Shell.JumpTask
  isExternal: false
  name: JumpTask()
  nameWithType: JumpTask.JumpTask()
  fullName: System.Windows.Shell.JumpTask.JumpTask()
- uid: System.Windows.Shell.JumpTask.ApplicationPath
  parent: System.Windows.Shell.JumpTask
  isExternal: false
  name: ApplicationPath
  nameWithType: JumpTask.ApplicationPath
  fullName: System.Windows.Shell.JumpTask.ApplicationPath
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Shell.JumpTask.Arguments
  parent: System.Windows.Shell.JumpTask
  isExternal: false
  name: Arguments
  nameWithType: JumpTask.Arguments
  fullName: System.Windows.Shell.JumpTask.Arguments
- uid: System.Windows.Shell.JumpTask.Description
  parent: System.Windows.Shell.JumpTask
  isExternal: false
  name: Description
  nameWithType: JumpTask.Description
  fullName: System.Windows.Shell.JumpTask.Description
- uid: System.Windows.Shell.JumpTask.IconResourceIndex
  parent: System.Windows.Shell.JumpTask
  isExternal: false
  name: IconResourceIndex
  nameWithType: JumpTask.IconResourceIndex
  fullName: System.Windows.Shell.JumpTask.IconResourceIndex
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Shell.JumpTask.IconResourcePath
  parent: System.Windows.Shell.JumpTask
  isExternal: false
  name: IconResourcePath
  nameWithType: JumpTask.IconResourcePath
  fullName: System.Windows.Shell.JumpTask.IconResourcePath
- uid: System.Windows.Shell.JumpTask.Title
  parent: System.Windows.Shell.JumpTask
  isExternal: false
  name: Title
  nameWithType: JumpTask.Title
  fullName: System.Windows.Shell.JumpTask.Title
- uid: System.Windows.Shell.JumpTask.WorkingDirectory
  parent: System.Windows.Shell.JumpTask
  isExternal: false
  name: WorkingDirectory
  nameWithType: JumpTask.WorkingDirectory
  fullName: System.Windows.Shell.JumpTask.WorkingDirectory
- uid: System.Windows.Shell.JumpTask.#ctor*
  parent: System.Windows.Shell.JumpTask
  isExternal: false
  name: JumpTask
  nameWithType: JumpTask.JumpTask
- uid: System.Windows.Shell.JumpTask.ApplicationPath*
  parent: System.Windows.Shell.JumpTask
  isExternal: false
  name: ApplicationPath
  nameWithType: JumpTask.ApplicationPath
- uid: System.Windows.Shell.JumpTask.Arguments*
  parent: System.Windows.Shell.JumpTask
  isExternal: false
  name: Arguments
  nameWithType: JumpTask.Arguments
- uid: System.Windows.Shell.JumpTask.Description*
  parent: System.Windows.Shell.JumpTask
  isExternal: false
  name: Description
  nameWithType: JumpTask.Description
- uid: System.Windows.Shell.JumpTask.IconResourceIndex*
  parent: System.Windows.Shell.JumpTask
  isExternal: false
  name: IconResourceIndex
  nameWithType: JumpTask.IconResourceIndex
- uid: System.Windows.Shell.JumpTask.IconResourcePath*
  parent: System.Windows.Shell.JumpTask
  isExternal: false
  name: IconResourcePath
  nameWithType: JumpTask.IconResourcePath
- uid: System.Windows.Shell.JumpTask.Title*
  parent: System.Windows.Shell.JumpTask
  isExternal: false
  name: Title
  nameWithType: JumpTask.Title
- uid: System.Windows.Shell.JumpTask.WorkingDirectory*
  parent: System.Windows.Shell.JumpTask
  isExternal: false
  name: WorkingDirectory
  nameWithType: JumpTask.WorkingDirectory
