### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.DebuggerStepperBoundaryAttribute
  id: DebuggerStepperBoundaryAttribute
  children:
  - System.Diagnostics.DebuggerStepperBoundaryAttribute.#ctor
  langs:
  - csharp
  name: DebuggerStepperBoundaryAttribute
  nameWithType: DebuggerStepperBoundaryAttribute
  fullName: System.Diagnostics.DebuggerStepperBoundaryAttribute
  type: Class
  summary: "특성 뒤에 코드 실행, 하지 단계, 모드에서 실행 하는 것을 나타냅니다."
  remarks: "에 <xref:System.Diagnostics.DebuggerNonUserCodeAttribute>.</xref:System.Diagnostics.DebuggerNonUserCodeAttribute> 효과에서 벗어나기 DebuggerStepperBoundaryAttribute 특성은 사용 경계 내에서 실행 되는 경우는 <xref:System.Diagnostics.DebuggerNonUserCodeAttribute>, 디자이너 제공 코드가 발견 한 단계별 다음 사용자 코드를 제공 될 때까지 실행 됩니다.</xref:System.Diagnostics.DebuggerNonUserCodeAttribute> 컨텍스트 전환에 스레드에서 수행 될 경우에 다음 사용자 제공 코드 모듈 관련이 없을 수 있습니다 코드 디버깅 중인 프로세스를 합니다. 이 디버깅 환경을 방지 하려면 이스케이프 코드를 실행 하려면 코드를 단계별로 실행 하는 DebuggerStepperBoundaryAttribute를 사용 합니다. 예를 들어, [!INCLUDE[vsprvslong](~/add/includes/ajax-current-ext-md.md)], F10 키를 사용 하 여 코드를 단계별로 실행할 때 발생 하는 한 DebuggerStepperBoundaryAttribute (또는 **프로시저 단위 실행** 명령) F5 키를 누르거나를 사용 하 여 것과 동일한 결과가 **디버깅 시작** 명령 합니다."
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Constructor | System.AttributeTargets.Method, Inherited=false)]

      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class DebuggerStepperBoundaryAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Diagnostics.DebuggerStepperBoundaryAttribute.#ctor
  id: '#ctor'
  parent: System.Diagnostics.DebuggerStepperBoundaryAttribute
  langs:
  - csharp
  name: DebuggerStepperBoundaryAttribute()
  nameWithType: DebuggerStepperBoundaryAttribute.DebuggerStepperBoundaryAttribute()
  fullName: System.Diagnostics.DebuggerStepperBoundaryAttribute.DebuggerStepperBoundaryAttribute()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Diagnostics
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Diagnostics.DebuggerStepperBoundaryAttribute&quot;> </xref> 클래스입니다."
  remarks: "이 생성자의 용도 대 한 참조 <xref:System.Diagnostics.DebuggerStepperBoundaryAttribute>클래스</xref:System.Diagnostics.DebuggerStepperBoundaryAttribute>"
  syntax:
    content: public DebuggerStepperBoundaryAttribute ();
    parameters: []
  overload: System.Diagnostics.DebuggerStepperBoundaryAttribute.#ctor*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.Diagnostics.DebuggerStepperBoundaryAttribute.#ctor
  parent: System.Diagnostics.DebuggerStepperBoundaryAttribute
  isExternal: false
  name: DebuggerStepperBoundaryAttribute()
  nameWithType: DebuggerStepperBoundaryAttribute.DebuggerStepperBoundaryAttribute()
  fullName: System.Diagnostics.DebuggerStepperBoundaryAttribute.DebuggerStepperBoundaryAttribute()
- uid: System.Diagnostics.DebuggerStepperBoundaryAttribute.#ctor*
  parent: System.Diagnostics.DebuggerStepperBoundaryAttribute
  isExternal: false
  name: DebuggerStepperBoundaryAttribute
  nameWithType: DebuggerStepperBoundaryAttribute.DebuggerStepperBoundaryAttribute
