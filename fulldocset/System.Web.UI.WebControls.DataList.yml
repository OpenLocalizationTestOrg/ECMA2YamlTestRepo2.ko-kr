### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.DataList
  id: DataList
  children:
  - System.Web.UI.WebControls.DataList.#ctor
  - System.Web.UI.WebControls.DataList.AlternatingItemStyle
  - System.Web.UI.WebControls.DataList.AlternatingItemTemplate
  - System.Web.UI.WebControls.DataList.CancelCommand
  - System.Web.UI.WebControls.DataList.CancelCommandName
  - System.Web.UI.WebControls.DataList.CreateControlHierarchy(System.Boolean)
  - System.Web.UI.WebControls.DataList.CreateControlStyle
  - System.Web.UI.WebControls.DataList.CreateItem(System.Int32,System.Web.UI.WebControls.ListItemType)
  - System.Web.UI.WebControls.DataList.DeleteCommand
  - System.Web.UI.WebControls.DataList.DeleteCommandName
  - System.Web.UI.WebControls.DataList.EditCommand
  - System.Web.UI.WebControls.DataList.EditCommandName
  - System.Web.UI.WebControls.DataList.EditItemIndex
  - System.Web.UI.WebControls.DataList.EditItemStyle
  - System.Web.UI.WebControls.DataList.EditItemTemplate
  - System.Web.UI.WebControls.DataList.ExtractTemplateRows
  - System.Web.UI.WebControls.DataList.FooterStyle
  - System.Web.UI.WebControls.DataList.FooterTemplate
  - System.Web.UI.WebControls.DataList.GridLines
  - System.Web.UI.WebControls.DataList.HeaderStyle
  - System.Web.UI.WebControls.DataList.HeaderTemplate
  - System.Web.UI.WebControls.DataList.InitializeItem(System.Web.UI.WebControls.DataListItem)
  - System.Web.UI.WebControls.DataList.ItemCommand
  - System.Web.UI.WebControls.DataList.ItemCreated
  - System.Web.UI.WebControls.DataList.ItemDataBound
  - System.Web.UI.WebControls.DataList.Items
  - System.Web.UI.WebControls.DataList.ItemStyle
  - System.Web.UI.WebControls.DataList.ItemTemplate
  - System.Web.UI.WebControls.DataList.LoadViewState(System.Object)
  - System.Web.UI.WebControls.DataList.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.WebControls.DataList.OnCancelCommand(System.Web.UI.WebControls.DataListCommandEventArgs)
  - System.Web.UI.WebControls.DataList.OnDeleteCommand(System.Web.UI.WebControls.DataListCommandEventArgs)
  - System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)
  - System.Web.UI.WebControls.DataList.OnInit(System.EventArgs)
  - System.Web.UI.WebControls.DataList.OnItemCommand(System.Web.UI.WebControls.DataListCommandEventArgs)
  - System.Web.UI.WebControls.DataList.OnItemCreated(System.Web.UI.WebControls.DataListItemEventArgs)
  - System.Web.UI.WebControls.DataList.OnItemDataBound(System.Web.UI.WebControls.DataListItemEventArgs)
  - System.Web.UI.WebControls.DataList.OnUpdateCommand(System.Web.UI.WebControls.DataListCommandEventArgs)
  - System.Web.UI.WebControls.DataList.PrepareControlHierarchy
  - System.Web.UI.WebControls.DataList.RenderContents(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.DataList.RepeatColumns
  - System.Web.UI.WebControls.DataList.RepeatDirection
  - System.Web.UI.WebControls.DataList.RepeatLayout
  - System.Web.UI.WebControls.DataList.SaveViewState
  - System.Web.UI.WebControls.DataList.SelectCommandName
  - System.Web.UI.WebControls.DataList.SelectedIndex
  - System.Web.UI.WebControls.DataList.SelectedItem
  - System.Web.UI.WebControls.DataList.SelectedItemStyle
  - System.Web.UI.WebControls.DataList.SelectedItemTemplate
  - System.Web.UI.WebControls.DataList.SelectedValue
  - System.Web.UI.WebControls.DataList.SeparatorStyle
  - System.Web.UI.WebControls.DataList.SeparatorTemplate
  - System.Web.UI.WebControls.DataList.ShowFooter
  - System.Web.UI.WebControls.DataList.ShowHeader
  - System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#GetItemStyle(System.Web.UI.WebControls.ListItemType,System.Int32)
  - System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#HasFooter
  - System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#HasHeader
  - System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#HasSeparators
  - System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#RenderItem(System.Web.UI.WebControls.ListItemType,System.Int32,System.Web.UI.WebControls.RepeatInfo,System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#RepeatedItemCount
  - System.Web.UI.WebControls.DataList.TagKey
  - System.Web.UI.WebControls.DataList.TrackViewState
  - System.Web.UI.WebControls.DataList.UpdateCommand
  - System.Web.UI.WebControls.DataList.UpdateCommandName
  langs:
  - csharp
  name: DataList
  nameWithType: DataList
  fullName: System.Web.UI.WebControls.DataList
  type: Class
  summary: "데이터 바인딩된 목록 컨트롤 템플릿을 사용 하 여 항목을 표시 합니다."
  remarks: "이 항목의:- [소개](#introduction)      -   [템플릿](#templates)      -   [DataList 컨트롤의 모양 사용자 지정](#customizing_the_appearance_of_the_datalist_control)      -   [표시 방향과 레이아웃](#display_direction_and_layout)      -   [보안](#security)      -   [선언적 구문](#declarative_syntax) <a name=&quot;introduction&quot;> </a> # # 소개 DataList 컨트롤을 사용 하 여 템플릿 기반 데이터 바인딩된 목록을 표시 합니다.       DataList 컨트롤 선택 및 편집을 지원 합니다.      <a name=&quot;templates&quot;></a># # 템플릿을 사용 하 여 템플릿 DataList 컨트롤의 콘텐츠를 조작할 수 있습니다. 다음 표에서 지원 되는 서식 파일을 나열합니다.      | 템플릿 이름 | 설명 |   |-------------------|-----------------|   | <xref:System.Web.UI.WebControls.DataList.AlternatingItemTemplate%2A>| 정의 된 경우 대체 DataList의 항목에 대 한 내용 및 레이아웃 제공 합니다.</xref:System.Web.UI.WebControls.DataList.AlternatingItemTemplate%2A> 정의 되지 않은 경우 `ItemTemplate` 사용 됩니다. |   | <xref:System.Web.UI.WebControls.DataList.EditItemTemplate%2A>| 을 정의한 경우 속성이 제공 DataList에서 현재 편집 중인 항목에 대 한 내용 및 레이아웃.</xref:System.Web.UI.WebControls.DataList.EditItemTemplate%2A> 정의 되지 않은 경우 `ItemTemplate` 사용 됩니다. |   | <xref:System.Web.UI.WebControls.DataList.FooterTemplate%2A>| 을 정의한 경우 속성이 DataList의 바닥글 섹션에 대 한 내용 및 레이아웃 제공 합니다.</xref:System.Web.UI.WebControls.DataList.FooterTemplate%2A> 정의 되지 않은 경우에 바닥글 섹션이 표시 되지 것입니다. |   | <xref:System.Web.UI.WebControls.DataList.HeaderTemplate%2A>| 을 정의한 경우 속성이 DataList의 헤더 섹션에 대 한 내용 및 레이아웃 제공 합니다.</xref:System.Web.UI.WebControls.DataList.HeaderTemplate%2A> 정의 되지 않은 경우 머리글 섹션이 표시 되지 것입니다. |   | <xref:System.Web.UI.WebControls.DataList.ItemTemplate%2A>| DataList의 항목에 대 한 내용 및 레이아웃을 제공 하는 필수 템플릿입니다. |   | <xref:System.Web.UI.WebControls.DataList.SelectedItemTemplate%2A>| 을 정의한 경우 속성이 DataList에서 현재 선택한 항목에 대 한 내용 및 레이아웃 제공 합니다.</xref:System.Web.UI.WebControls.DataList.SelectedItemTemplate%2A> </xref:System.Web.UI.WebControls.DataList.ItemTemplate%2A> 정의 되지 않은 <xref:System.Web.UI.WebControls.DataList.ItemTemplate%2A>사용 됩니다. |   | <xref:System.Web.UI.WebControls.DataList.SeparatorTemplate%2A>| 을 정의한 경우 속성이 DataList에 있는 항목 사이 구분 기호에 대 한 내용 및 레이아웃 제공 합니다.</xref:System.Web.UI.WebControls.DataList.SeparatorTemplate%2A> </xref:System.Web.UI.WebControls.DataList.ItemTemplate%2A> 정의 되지 않은 경우 구분 기호가 표시 되지 것입니다. |       최소한,는 <xref:System.Web.UI.WebControls.DataList.ItemTemplate%2A>DataList 컨트롤에서 항목을 표시 하려면 정의 해야 합니다.</xref:System.Web.UI.WebControls.DataList.ItemTemplate%2A> 추가 템플릿 DataList 컨트롤에 사용자 지정 모양을 제공 데 사용할 수 있습니다.      <a name=&quot;customizing_the_appearance_of_the_datalist_control&quot;></a># #는 컨트롤의 다른 부분에 대 한 스타일 속성을 설정 하 여 DataList 컨트롤의 모양을 사용자 지정할 수 있습니다 DataList 컨트롤의 모양 사용자 지정 합니다. 다음 표에서 다른 스타일 속성을 나열합니다.      | Style 속성 | 설명 |   |--------------------|-----------------|   | <xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A>| DataList 컨트롤에 있는 대체 항목에 대 한 스타일을 지정 합니다. |   | <xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A>| DataList 컨트롤에서 편집 중인 항목에 대 한 스타일을 지정 합니다. |   | <xref:System.Web.UI.WebControls.DataList.FooterStyle%2A>| DataList 컨트롤의 바닥글에 대 한 스타일을 지정 합니다. |   | <xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A>| DataList 컨트롤의 헤더에 대 한 스타일을 지정 합니다. |   | <xref:System.Web.UI.WebControls.DataList.ItemStyle%2A>| DataList 컨트롤의 항목에 대 한 스타일을 지정 합니다. |   | <xref:System.Web.UI.WebControls.DataList.SelectedItemStyle%2A>| DataList 컨트롤에서 선택한 항목에 대 한 스타일을 지정 합니다. |   | <xref:System.Web.UI.WebControls.DataList.SeparatorStyle%2A>| DataList 컨트롤에 있는 항목 사이 구분 기호에 대 한 스타일을 지정 합니다. |       표시 하거나 컨트롤의 다른 부분을 숨길 수도 있습니다.</xref:System.Web.UI.WebControls.DataList.SeparatorStyle%2A> </xref:System.Web.UI.WebControls.DataList.SelectedItemStyle%2A> </xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> </xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A> </xref:System.Web.UI.WebControls.DataList.FooterStyle%2A> </xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A> </xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A> 다음 표에서 표시 하거나 숨길 어느 부분을 제어 하는 속성을 나열 합니다.      | 속성 | 설명 |   |--------------|-----------------|   | <xref:System.Web.UI.WebControls.DataList.ShowFooter%2A>| DataList 컨트롤의 바닥글 구역을 표시 하거나 숨깁니다. |   | <xref:System.Web.UI.WebControls.DataList.ShowHeader%2A>| DataList 컨트롤의 헤더 구역을 표시 하거나 숨깁니다. |      <a name=&quot;display_direction_and_layout&quot;> </a> # # 세로 또는 가로 방향과 레이아웃 DataList 컨트롤에 표시 되는 방향 표시 될 수 있습니다.</xref:System.Web.UI.WebControls.DataList.ShowHeader%2A> </xref:System.Web.UI.WebControls.DataList.ShowFooter%2A> 설정의 <xref:System.Web.UI.WebControls.DataList.RepeatDirection%2A>디스플레이 방향을 지정 하는 속성.</xref:System.Web.UI.WebControls.DataList.RepeatDirection%2A>       DataList 컨트롤의 레이아웃에 의해 제어 되는 <xref:System.Web.UI.WebControls.DataList.RepeatLayout%2A>속성.</xref:System.Web.UI.WebControls.DataList.RepeatLayout%2A> 이 속성을 설정 `RepeatLayout.Table` DataList는 테이블 형식으로 표시 됩니다는 동안 `RepeatLayout.Flow` DataList 테이블 구조 없이 표시 됩니다.      <a name=&quot;security&quot;></a># # 보안은 `DataList` 컨트롤 사용자가 정보를 입력할 수 있도록 하는 컨트롤을 포함할 수 있습니다.      > [!CAUTION] > 악의적인 클라이언트 스크립트가 포함 될 수 있습니다는 사용자 입력을 표시 하려면이 컨트롤을 사용할 수 있습니다. 응용 프로그램에 표시 하기 전에 실행 스크립트, SQL 문 또는 다른 코드에 대 한 클라이언트에서 보낸 모든 정보를 확인 합니다. 컨트롤에서 입력된 텍스트를 표시 하기 전에 사용자 입력을 확인 하려면 유효성 검사 컨트롤을 사용할 수 있습니다. ASP.NET은 사용자 입력에 있는 스크립트 블록 및 HTML에 있는 입력된 요청 유효성 검사 기능을 제공 합니다.       보안에 대 한 자세한 내용은 참조 [보안 표준 컨트롤](~/add/includes/ajax-current-ext-md.md), [하는 방법: 보호에 대 한 스크립트에 의해 악용 문자열을 HTML 인코딩 적용 하 여 웹 응용 프로그램에서](~/add/includes/ajax-current-ext-md.md), 및 [ASP.NET 웹 페이지에서 사용자 입력 유효성 검사](~/add/includes/ajax-current-ext-md.md)합니다.      <a name=&quot;declarative_syntax&quot;></a># # 선언적 구문```   <asp:DataList       AccessKey=&quot;string&quot;       BackColor=&quot;color name|#dddddd&quot;       BorderColor=&quot;color name|#dddddd&quot;       BorderStyle=&quot;NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|           Inset|Outset&quot;       BorderWidth=&quot;size&quot;       Caption=&quot;string&quot;       CaptionAlign=&quot;NotSet|Top|Bottom|Left|Right&quot;       CellPadding=&quot;integer&quot;       CellSpacing=&quot;integer&quot;       CssClass=&quot;string&quot;       DataKeyField=&quot;string&quot;       DataMember=&quot;string&quot;       DataSource=&quot;string&quot;       DataSourceID=&quot;string&quot;       EditItemIndex=&quot;integer&quot;       Enabled=&quot;True|False&quot;       EnableTheming=&quot;True|False&quot;       EnableViewState=&quot;True|False&quot;       ExtractTemplateRows=&quot;True|False&quot;       Font-Bold=&quot;True|False&quot;       Font-Italic=&quot;True|False&quot;       Font-Names=&quot;string&quot;       Font-Overline=&quot;True|False&quot;       Font-Size=&quot;string|Smaller|Larger|XX-Small|X-Small|Small|Medium|           Large|X-Large|XX-Large&quot;       Font-Strikeout=&quot;True|False&quot;       Font-Underline=&quot;True|False&quot;       ForeColor=&quot;color name|#dddddd&quot;       GridLines=&quot;None|Horizontal|Vertical|Both&quot;       Height=&quot;size&quot;       HorizontalAlign=&quot;NotSet|Left|Center|Right|Justify&quot;       ID=&quot;string&quot;       OnCancelCommand=&quot;CancelCommand event handler&quot;       OnDataBinding=&quot;DataBinding event handler&quot;       OnDeleteCommand=&quot;DeleteCommand event handler&quot;       OnDisposed=&quot;Disposed event handler&quot;       OnEditCommand=&quot;EditCommand event handler&quot;       OnInit=&quot;Init event handler&quot;       OnItemCommand=&quot;ItemCommand event handler&quot;       OnItemCreated=&quot;ItemCreated event handler&quot;       OnItemDataBound=&quot;ItemDataBound event handler&quot;       OnLoad=&quot;Load event handler&quot;       OnPreRender=&quot;PreRender event handler&quot;       OnSelectedIndexChanged=&quot;SelectedIndexChanged event handler&quot;       OnUnload=&quot;Unload event handler&quot;       OnUpdateCommand=&quot;UpdateCommand event handler&quot;       RepeatColumns=&quot;integer&quot;       RepeatDirection=&quot;Horizontal|Vertical&quot;       RepeatLayout=&quot;Table|Flow&quot;       runat=&quot;server&quot;       SelectedIndex=&quot;integer&quot;       ShowFooter=&quot;True|False&quot;       ShowHeader=&quot;True|False&quot;       SkinID=&quot;string&quot;       Style=&quot;string&quot;       TabIndex=&quot;integer&quot;       ToolTip=&quot;string&quot;       UseAccessibleHeader=&quot;True|False&quot;       Visible=&quot;True|False&quot;       Width=&quot;size&quot;   >           <AlternatingItemStyle />           <AlternatingItemTemplate>               <!-- child controls -->           </AlternatingItemTemplate>           <EditItemStyle />           <EditItemTemplate>               <!-- child controls -->           </EditItemTemplate>           <FooterStyle />           <FooterTemplate>               <!-- child controls -->           </FooterTemplate>           <HeaderStyle />           <HeaderTemplate>               <!-- child controls -->           </HeaderTemplate>           <ItemStyle />           <ItemTemplate>               <!-- child controls -->           </ItemTemplate>           <SelectedItemStyle />           <SelectedItemTemplate>               <!-- child controls -->           </SelectedItemTemplate>           <SeparatorStyle />           <SeparatorTemplate>               <!-- child controls -->           </SeparatorTemplate>   </asp:DataList>   ```"
  example:
  - "The following code example demonstrates how to use a DataList control to display a list of items from a data source.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[DataList#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_141_1.aspx)]\n [!code-vb[DataList#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_141_1.aspx)]"
  syntax:
    content: >-
      [System.ComponentModel.Designer("System.Web.UI.Design.WebControls.DataListDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.ComponentModel.Editor("System.Web.UI.Design.WebControls.DataListComponentEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.ComponentModel.ComponentEditor))]

      [System.Web.UI.ControlValueProperty("SelectedValue")]

      public class DataList : System.Web.UI.WebControls.BaseDataList, System.Web.UI.INamingContainer, System.Web.UI.WebControls.IRepeatInfoUser
  inheritance:
  - System.Object
  - System.Web.UI.Control
  - System.Web.UI.WebControls.WebControl
  - System.Web.UI.WebControls.BaseDataList
  implements:
  - System.Web.UI.INamingContainer
  - System.Web.UI.WebControls.IRepeatInfoUser
  inheritedMembers:
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientID
  - System.Web.UI.Control.ClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Context
  - System.Web.UI.Control.CreateControlCollection
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EnableViewState
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String)
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.Focus
  - System.Web.UI.Control.GetDesignModeState
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasControls
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.ID
  - System.Web.UI.Control.IdSeparator
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadControlState(System.Object)
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnUnload(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SaveControlState
  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ValidateRequestMode
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  - System.Web.UI.Control.Visible
  - System.Web.UI.WebControls.BaseDataList.AddParsedSubObject(System.Object)
  - System.Web.UI.WebControls.BaseDataList.Caption
  - System.Web.UI.WebControls.BaseDataList.CaptionAlign
  - System.Web.UI.WebControls.BaseDataList.CellPadding
  - System.Web.UI.WebControls.BaseDataList.CellSpacing
  - System.Web.UI.WebControls.BaseDataList.Controls
  - System.Web.UI.WebControls.BaseDataList.CreateChildControls
  - System.Web.UI.WebControls.BaseDataList.CreateDataSourceSelectArguments
  - System.Web.UI.WebControls.BaseDataList.DataBind
  - System.Web.UI.WebControls.BaseDataList.DataKeyField
  - System.Web.UI.WebControls.BaseDataList.DataKeys
  - System.Web.UI.WebControls.BaseDataList.DataKeysArray
  - System.Web.UI.WebControls.BaseDataList.DataMember
  - System.Web.UI.WebControls.BaseDataList.DataSource
  - System.Web.UI.WebControls.BaseDataList.DataSourceID
  - System.Web.UI.WebControls.BaseDataList.EnsureDataBound
  - System.Web.UI.WebControls.BaseDataList.GetData
  - System.Web.UI.WebControls.BaseDataList.HorizontalAlign
  - System.Web.UI.WebControls.BaseDataList.Initialized
  - System.Web.UI.WebControls.BaseDataList.IsBindableType(System.Type)
  - System.Web.UI.WebControls.BaseDataList.IsBoundUsingDataSourceID
  - System.Web.UI.WebControls.BaseDataList.OnDataBinding(System.EventArgs)
  - System.Web.UI.WebControls.BaseDataList.OnDataPropertyChanged
  - System.Web.UI.WebControls.BaseDataList.OnDataSourceViewChanged(System.Object,System.EventArgs)
  - System.Web.UI.WebControls.BaseDataList.OnLoad(System.EventArgs)
  - System.Web.UI.WebControls.BaseDataList.OnPreRender(System.EventArgs)
  - System.Web.UI.WebControls.BaseDataList.OnSelectedIndexChanged(System.EventArgs)
  - System.Web.UI.WebControls.BaseDataList.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.BaseDataList.RequiresDataBinding
  - System.Web.UI.WebControls.BaseDataList.SelectArguments
  - System.Web.UI.WebControls.BaseDataList.SelectedIndexChanged
  - System.Web.UI.WebControls.BaseDataList.SupportsDisabledAttribute
  - System.Web.UI.WebControls.BaseDataList.UseAccessibleHeader
  - System.Web.UI.WebControls.WebControl.AccessKey
  - System.Web.UI.WebControls.WebControl.AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.ApplyStyle(System.Web.UI.WebControls.Style)
  - System.Web.UI.WebControls.WebControl.Attributes
  - System.Web.UI.WebControls.WebControl.BackColor
  - System.Web.UI.WebControls.WebControl.BorderColor
  - System.Web.UI.WebControls.WebControl.BorderStyle
  - System.Web.UI.WebControls.WebControl.BorderWidth
  - System.Web.UI.WebControls.WebControl.ControlStyle
  - System.Web.UI.WebControls.WebControl.ControlStyleCreated
  - System.Web.UI.WebControls.WebControl.CopyBaseAttributes(System.Web.UI.WebControls.WebControl)
  - System.Web.UI.WebControls.WebControl.CssClass
  - System.Web.UI.WebControls.WebControl.DisabledCssClass
  - System.Web.UI.WebControls.WebControl.Enabled
  - System.Web.UI.WebControls.WebControl.EnableTheming
  - System.Web.UI.WebControls.WebControl.Font
  - System.Web.UI.WebControls.WebControl.ForeColor
  - System.Web.UI.WebControls.WebControl.HasAttributes
  - System.Web.UI.WebControls.WebControl.Height
  - System.Web.UI.WebControls.WebControl.IsEnabled
  - System.Web.UI.WebControls.WebControl.MergeStyle(System.Web.UI.WebControls.Style)
  - System.Web.UI.WebControls.WebControl.RenderBeginTag(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.RenderEndTag(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.SkinID
  - System.Web.UI.WebControls.WebControl.Style
  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)
  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)
  - System.Web.UI.WebControls.WebControl.TabIndex
  - System.Web.UI.WebControls.WebControl.TagName
  - System.Web.UI.WebControls.WebControl.ToolTip
  - System.Web.UI.WebControls.WebControl.Width
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: DataList()
  nameWithType: DataList.DataList()
  fullName: System.Web.UI.WebControls.DataList.DataList()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref> 클래스입니다."
  remarks: "이 생성자를 사용 하 여 만들고 <xref:System.Web.UI.WebControls.DataList>클래스</xref:System.Web.UI.WebControls.DataList> 의 새 인스턴스를 초기화 합니다."
  example:
  - "The following code example demonstrates how to create and initialize a new instance of the <xref:System.Web.UI.WebControls.DataList> class.  \n  \n [!code-cs[Classic DataList.DataList Example#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_27_1.cs)]\n [!code-vb[Classic DataList.DataList Example#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_27_1.vb)]"
  syntax:
    content: public DataList ();
    parameters: []
  overload: System.Web.UI.WebControls.DataList.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.AlternatingItemStyle
  id: AlternatingItemStyle
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: AlternatingItemStyle
  nameWithType: DataList.AlternatingItemStyle
  fullName: System.Web.UI.WebControls.DataList.AlternatingItemStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "에 있는 대체 항목에 대 한 스타일 속성을 가져옵니다는 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref> 제어 합니다."
  remarks: "AlternatingItemStyle 속성을 사용 하 여 교대로 반복 되는 항목에 대 한 사용자 지정 스타일을 제공 하는 <xref:System.Web.UI.WebControls.DataList>컨트롤.</xref:System.Web.UI.WebControls.DataList> 조정할 수 있는 일반 스타일 특성 전경색, 배경색, 글꼴 및 셀 내용 맞춤을 포함 합니다. 모양을 향상 시킬 다른 스타일을 사용 하 여 <xref:System.Web.UI.WebControls.DataList>컨트롤.</xref:System.Web.UI.WebControls.DataList>       항목의 스타일 속성은 <xref:System.Web.UI.WebControls.DataList>컨트롤 계층을 통해 다른 항목을 하나 style 속성에서 상속 됩니다.</xref:System.Web.UI.WebControls.DataList> 계층 구조에서 낮게 설정할 항목 스타일 속성은 계층 구조의 상위 항목 스타일 속성에 의해 상속 됩니다. 예를 들어 빨강 글꼴을 지정 하는 경우는 <xref:System.Web.UI.WebControls.DataList.ItemStyle%2A>속성에서 다른 모든 항목 스타일 속성은 <xref:System.Web.UI.WebControls.DataList>컨트롤에는 빨간색 글꼴로.</xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> 이 옵션을 사용 하면 단일 항목 style 속성을 설정 하 여 컨트롤에 대 한 공통 된 모양을 지정할 수 있습니다. 스타일 속성을 설정 하 여 계층에 있는 항목 스타일 속성에 대 한 상속 된 스타일 설정을 재정의할 수 있습니다. 예를 들어에 지정 된 빨간색 글꼴로 재정의 AlternatingItemStyle 속성에 대 한 파란색 글꼴을 지정할 수는 <xref:System.Web.UI.WebControls.DataList.ItemStyle%2A>속성.</xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> 다음 표에서 내림차순으로 최고 계층 구조 순서로 나열합니다.      | 우선 순위 | Style 속성 |   |----------------|--------------------|   |&1; | <xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A>|   |&2; | <xref:System.Web.UI.WebControls.DataList.SelectedItemStyle%2A>|   |&3; | AlternatingItemStyle |   |&4; | <xref:System.Web.UI.WebControls.DataList.ItemStyle%2A>|   |&5; | <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>|       대체 항목에 대 한 사용자 지정 스타일을 지정 하려면는 `<AlternatingItemStyle>` 여는 태그와 닫는 태그 사이 <xref:System.Web.UI.WebControls.DataList>컨트롤.</xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> </xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> </xref:System.Web.UI.WebControls.DataList.SelectedItemStyle%2A> </xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A> 다음을 표시 하 여 스타일 특성 `<AlternatingItemStyle>` 태그입니다."
  example:
  - "The following code example demonstrates how to use the AlternatingItemStyle property to specify a different background color for alternating items in the <xref:System.Web.UI.WebControls.DataList> control.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[DataListItemStyle#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_512_1.aspx)]\n [!code-cs[DataListItemStyle#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_512_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.TableItemStyle AlternatingItemStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "A <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref> 대체에 대 한 스타일 속성을 나타내는 개체를 항목에 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref> 제어 합니다. 기본값은 빈 <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref> 개체입니다."
  overload: System.Web.UI.WebControls.DataList.AlternatingItemStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.AlternatingItemTemplate
  id: AlternatingItemTemplate
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: AlternatingItemTemplate
  nameWithType: DataList.AlternatingItemTemplate
  fullName: System.Web.UI.WebControls.DataList.AlternatingItemTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "에 있는 대체 항목에 대 한 서식 파일을 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref>합니다."
  remarks: "AlternatingItemTemplate 속성을 사용 하 여 교대로 반복 되는 항목의 내용을 제어 하는 <xref:System.Web.UI.WebControls.DataList>컨트롤.</xref:System.Web.UI.WebControls.DataList> 대체 항목의 표시에 의해 제어 되는 <xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A>속성.</xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A>       대체 항목에 대 한 서식 파일을 지정 하려면는 `<AlternatingItemTemplate>` 여는 태그와 닫는 태그 사이 <xref:System.Web.UI.WebControls.DataList>컨트롤.</xref:System.Web.UI.WebControls.DataList> 그런 다음 열기 및 닫기 사이의 서식 파일의 내용을 나열 수 `<AlternatingItemTemplate>` 태그입니다.      > [!CAUTION] > 악의적인 클라이언트 스크립트가 포함 될 수 있습니다는 사용자 입력을 표시 하려면이 컨트롤을 사용할 수 있습니다. 응용 프로그램에 표시 하기 전에 실행 스크립트, SQL 문 또는 다른 코드에 대 한 클라이언트에서 보낸 모든 정보를 확인 합니다. 컨트롤에서 입력된 텍스트를 표시 하기 전에 사용자 입력을 확인 하려면 유효성 검사 컨트롤을 사용할 수 있습니다. ASP.NET은 사용자 입력에 있는 스크립트 블록 및 HTML에 있는 입력된 요청 유효성 검사 기능을 제공 합니다. 자세한 내용은 참조 [보안 표준 컨트롤](~/add/includes/ajax-current-ext-md.md), [하는 방법: 보호에 대 한 스크립트에 의해 악용 문자열을 HTML 인코딩 적용 하 여 웹 응용 프로그램에서](~/add/includes/ajax-current-ext-md.md), 및 [ASP.NET 웹 페이지에서 사용자 입력 유효성 검사](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example demonstrates how to use the AlternatingItemTemplate property to control the contents of alternating items in the <xref:System.Web.UI.WebControls.DataList> control.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[DataListAlternatingItemTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1361_1.aspx)]\n [!code-cs[DataListAlternatingItemTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1361_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate AlternatingItemTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "A <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref> 개체 대체에 대 한 템플릿이 포함 된 항목에 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref> 제어 합니다. 기본값은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.DataList.AlternatingItemTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.CancelCommand
  id: CancelCommand
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: CancelCommand
  nameWithType: DataList.CancelCommand
  fullName: System.Web.UI.WebControls.DataList.CancelCommand
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "발생 경우는 <xref uid=&quot;langword_csharp_Cancel&quot; name=&quot;Cancel&quot; href=&quot;&quot;> </xref> 항목에 대해 단추를 클릭할는 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref> 제어 합니다."
  remarks: "CancelCommand 이벤트가 발생할 때는 `Cancel` 항목에 대해 단추를 클릭는 <xref:System.Web.UI.WebControls.DataList>컨트롤.</xref:System.Web.UI.WebControls.DataList>       CancelCommand 이벤트 집합에 대 한 일반적인 처리기는 <xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A>속성을 `-1` 항목을 선택 취소) 하는 것 (하 한 다음 데이터를 다시 바인딩 횟수와 <xref:System.Web.UI.WebControls.DataList>컨트롤.</xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A>      > [!CAUTION] > 텍스트는 HTML에 표시 되기 전에 인코딩되지는 <xref:System.Web.UI.WebControls.DataList>컨트롤.</xref:System.Web.UI.WebControls.DataList> 따라서 텍스트에 HTML 태그 내에서 스크립트를 포함 시킬 수 있습니다. 컨트롤에 대 한 값 사용자 입력에 연결 하는 경우에 보안 취약점을 줄이기 위해 값을 확인 해야 합니다.       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [하는 방법: Web Forms 응용 프로그램에](~/add/includes/ajax-current-ext-md.md)합니다.      > [!CAUTION] > 악의적인 클라이언트 스크립트가 포함 될 수 있습니다는 사용자 입력을 표시 하려면이 컨트롤을 사용할 수 있습니다. 응용 프로그램에 표시 하기 전에 실행 스크립트, SQL 문 또는 다른 코드에 대 한 클라이언트에서 보낸 모든 정보를 확인 합니다. 컨트롤에서 입력된 텍스트를 표시 하기 전에 사용자 입력을 확인 하려면 유효성 검사 컨트롤을 사용할 수 있습니다. ASP.NET은 사용자 입력에 있는 스크립트 블록 및 HTML에 있는 입력된 요청 유효성 검사 기능을 제공 합니다. 자세한 내용은 참조 [보안 표준 컨트롤](~/add/includes/ajax-current-ext-md.md), [하는 방법: 보호에 대 한 스크립트에 의해 악용 문자열을 HTML 인코딩 적용 하 여 웹 응용 프로그램에서](~/add/includes/ajax-current-ext-md.md), 및 [ASP.NET 웹 페이지에서 사용자 입력 유효성 검사](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example demonstrates how to specify and code a handler for the CancelCommand event. It cancels any edits made to an item in the <xref:System.Web.UI.WebControls.DataList> control when the `Cancel` button is clicked.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[DataListEdit#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_29_1.aspx)]\n [!code-vb[DataListEdit#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_29_1.aspx)]  \n  \n [!code-vb[DataListEdit2#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_29_2.aspx)]\n [!code-cs[DataListEdit2#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_29_2.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.DataListCommandEventHandler CancelCommand;
    return:
      type: System.Web.UI.WebControls.DataListCommandEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.CancelCommandName
  id: CancelCommandName
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: CancelCommandName
  nameWithType: DataList.CancelCommandName
  fullName: System.Web.UI.WebControls.DataList.CancelCommandName
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "나타냅니다는 <xref uid=&quot;langword_csharp_Cancel&quot; name=&quot;Cancel&quot; href=&quot;&quot;> </xref> 명령 이름입니다. 이 필드는 읽기 전용입니다."
  remarks: "나타내는 CancelCommandName 필드를 사용 하 여는 `Cancel` 명령 이름입니다."
  syntax:
    content: public const string CancelCommandName;
    return:
      type: System.String
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.CreateControlHierarchy(System.Boolean)
  id: CreateControlHierarchy(System.Boolean)
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: CreateControlHierarchy(Boolean)
  nameWithType: DataList.CreateControlHierarchy(Boolean)
  fullName: System.Web.UI.WebControls.DataList.CreateControlHierarchy(Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "또는 지정 된 데이터 원본을 사용 하지 않고 데이터 목록 컨트롤을 렌더링 하는 데 사용 되는 컨트롤 계층 구조를 만듭니다."
  remarks: "사용자 지정 구현을 파생할 때 CreateControlHierarchy 메서드 주로 컨트롤 개발자가 사용 되는 <xref:System.Web.UI.WebControls.DataList>컨트롤.</xref:System.Web.UI.WebControls.DataList>       CreateControlHierarchy 메서드에서 사용 하는 <xref:System.Web.UI.WebControls.DataList.CreateItem%2A>및 <xref:System.Web.UI.WebControls.DataList.InitializeItem%2A>를 만드는 방법과 <xref:System.Web.UI.WebControls.DataListItem>머리글, 바닥글, 구분 기호, 및 데이터 목록에 포함 된 데이터 바인딩 항목을 나타내는 컨트롤.</xref:System.Web.UI.WebControls.DataListItem> </xref:System.Web.UI.WebControls.DataList.InitializeItem%2A> </xref:System.Web.UI.WebControls.DataList.CreateItem%2A> 데이터 바인딩된 항목을 통해 데이터 목록에 액세스할 수 있습니다는 <xref:System.Web.UI.WebControls.DataList.Items%2A>컬렉션.</xref:System.Web.UI.WebControls.DataList.Items%2A> 통해 머리글, 바닥글 및 구분 기호 항목을 포함 하 여 모든 항목 형식에 액세스할 수 있습니다는 <xref:System.Web.UI.WebControls.BaseDataList.Controls%2A>컬렉션.</xref:System.Web.UI.WebControls.BaseDataList.Controls%2A>       사용자 지정 하려면 CreateControlHierarchy 메서드를 재정의 방법을 <xref:System.Web.UI.WebControls.DataListItem>컨트롤 만들어지거나에 추가 되는 <xref:System.Web.UI.WebControls.DataList>컨트롤.</xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.DataListItem> 재정의 <xref:System.Web.UI.WebControls.DataList.InitializeItem%2A>에 대 한 템플릿을 사용자 지정 하는 메서드는 <xref:System.Web.UI.WebControls.DataListItem>컨트롤.</xref:System.Web.UI.WebControls.DataListItem> </xref:System.Web.UI.WebControls.DataList.InitializeItem%2A>"
  syntax:
    content: protected override void CreateControlHierarchy (bool useDataSource);
    parameters:
    - id: useDataSource
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>컨트롤의 데이터 소스를 사용 하려면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 표시 되는 컨트롤 뷰 상태에서 다시 생성 되는 데이터 바인딩된 수 없습니다."
  overload: System.Web.UI.WebControls.DataList.CreateControlHierarchy*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.CreateControlStyle
  id: CreateControlStyle
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: CreateControlStyle()
  nameWithType: DataList.CreateControlStyle()
  fullName: System.Web.UI.WebControls.DataList.CreateControlStyle()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "내부적으로 사용 되는 기본 스타일 개체를 만듭니다는 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref> 모든 스타일을 구현 하는 컨트롤 관련 속성입니다."
  remarks: "사용자 지정 구현을 파생 시킬 컨트롤 개발자가 주로 CreateControlStyle 메서드를 사용 하는 <xref:System.Web.UI.WebControls.DataList>컨트롤.</xref:System.Web.UI.WebControls.DataList>"
  example:
  - "The following code example demonstrates how to override the CreateControlStyle method in a custom server control so that it always displays horizontal grid lines with no cell spacing in the <xref:System.Web.UI.WebControls.DataList> control.  \n  \n [!code-vb[CustomDataListCreateControlStyle#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_243_1.aspx)]\n [!code-cs[CustomDataListCreateControlStyle#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_243_1.aspx)]  \n[!code-vb[CustomDataListCreateControlStyle#2](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_243_2.vb)]\n[!code-cs[CustomDataListCreateControlStyle#2](~/add/codesnippet/csharp/m-system.web.ui.webcontr_243_2.cs)]"
  syntax:
    content: protected override System.Web.UI.WebControls.Style CreateControlStyle ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.Style
      description: "A <xref href=&quot;System.Web.UI.WebControls.TableStyle&quot;> </xref> 컨트롤에 대 한 기본 스타일 속성이 들어 있는입니다."
  overload: System.Web.UI.WebControls.DataList.CreateControlStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.CreateItem(System.Int32,System.Web.UI.WebControls.ListItemType)
  id: CreateItem(System.Int32,System.Web.UI.WebControls.ListItemType)
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: CreateItem(Int32,ListItemType)
  nameWithType: DataList.CreateItem(Int32,ListItemType)
  fullName: System.Web.UI.WebControls.DataList.CreateItem(Int32,ListItemType)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "만듭니다는 <xref href=&quot;System.Web.UI.WebControls.DataListItem&quot;> </xref> 개체입니다."
  remarks: "CreateItem 메서드 컨트롤 개발자가 사용자 지정 구현을 만드는 주로 사용 되는 <xref:System.Web.UI.WebControls.DataList>컨트롤.</xref:System.Web.UI.WebControls.DataList> CreateItem 메서드는 기능적으로 <xref:System.Web.UI.WebControls.DataListItem.%23ctor%2A> <xref:System.Web.UI.WebControls.DataListItem>.</xref:System.Web.UI.WebControls.DataListItem> 에 대 한 생성자</xref:System.Web.UI.WebControls.DataListItem.%23ctor%2A> 를 호출 합니다. <xref:System.Web.UI.WebControls.DataListItem.ItemIndex%2A> <xref:System.Web.UI.WebControls.DataListItem.ItemType%2A>새 <xref:System.Web.UI.WebControls.DataListItem>했지만 항목이 지정된 된 값을 사용 하 여 <xref:System.Web.UI.WebControls.DataList>.</xref:System.Web.UI.WebControls.DataList> 에 삽입 되지</xref:System.Web.UI.WebControls.DataListItem> 에 대 한 속성은</xref:System.Web.UI.WebControls.DataListItem.ItemType%2A> 초기화</xref:System.Web.UI.WebControls.DataListItem.ItemIndex%2A>       <xref:System.Web.UI.WebControls.DataList.CreateControlHierarchy%2A>메서드는 CreateItem를 사용 하 여 및 <xref:System.Web.UI.WebControls.DataList.InitializeItem%2A>를 만드는 방법과 <xref:System.Web.UI.WebControls.DataListItem>머리글, 바닥글, 구분 기호, 및 데이터 목록에 포함 된 데이터 바인딩 항목을 나타내는 컨트롤.</xref:System.Web.UI.WebControls.DataListItem> </xref:System.Web.UI.WebControls.DataList.InitializeItem%2A> </xref:System.Web.UI.WebControls.DataList.CreateControlHierarchy%2A> 데이터 바인딩된 항목을 통해 데이터 목록에 액세스할 수 있습니다는 <xref:System.Web.UI.WebControls.DataList.Items%2A>컬렉션.</xref:System.Web.UI.WebControls.DataList.Items%2A> 통해 머리글, 바닥글 및 구분 기호 항목을 포함 하 여 모든 항목 형식에 액세스할 수 있습니다는 <xref:System.Web.UI.WebControls.BaseDataList.Controls%2A>컬렉션.</xref:System.Web.UI.WebControls.BaseDataList.Controls%2A>"
  syntax:
    content: protected virtual System.Web.UI.WebControls.DataListItem CreateItem (int itemIndex, System.Web.UI.WebControls.ListItemType itemType);
    parameters:
    - id: itemIndex
      type: System.Int32
      description: "내의 지정된 된 위치에서 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref> 만든된 항목을 배치할 수 있습니다."
    - id: itemType
      type: System.Web.UI.WebControls.ListItemType
      description: "A <xref href=&quot;System.Web.UI.WebControls.ListItemType&quot;> </xref> 만들 항목의 지정 된 형식을 나타내는입니다."
    return:
      type: System.Web.UI.WebControls.DataListItem
      description: "새 <xref href=&quot;System.Web.UI.WebControls.DataListItem&quot;> </xref> 지정 된 목록 항목 형식으로 생성 합니다."
  overload: System.Web.UI.WebControls.DataList.CreateItem*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.DeleteCommand
  id: DeleteCommand
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: DeleteCommand
  nameWithType: DataList.DeleteCommand
  fullName: System.Web.UI.WebControls.DataList.DeleteCommand
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "발생 경우는 <xref uid=&quot;langword_csharp_Delete&quot; name=&quot;Delete&quot; href=&quot;&quot;> </xref> 항목에 대해 단추를 클릭할는 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref> 제어 합니다."
  remarks: "DeleteCommand 이벤트가 발생할 때는 `Delete` 항목에 대해 단추를 클릭는 <xref:System.Web.UI.WebControls.DataList>컨트롤.</xref:System.Web.UI.WebControls.DataList>       표준 처리기 DeleteCommand 이벤트에 대 한 데이터 원본에서 선택한 항목을 제거 하 고 다음 데이터를 다시 바인딩 횟수는 <xref:System.Web.UI.WebControls.DataList>컨트롤.</xref:System.Web.UI.WebControls.DataList>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [하는 방법: Web Forms 응용 프로그램에](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example demonstrates how to specify and code a handler for the DeleteCommand event. It deletes the selected item in the <xref:System.Web.UI.WebControls.DataList> control when the `Delete` button is clicked.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[DataListEdit#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_109_1.aspx)]\n [!code-vb[DataListEdit#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_109_1.aspx)]  \n  \n [!code-vb[DataListEdit2#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_109_2.aspx)]\n [!code-cs[DataListEdit2#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_109_2.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.DataListCommandEventHandler DeleteCommand;
    return:
      type: System.Web.UI.WebControls.DataListCommandEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.DeleteCommandName
  id: DeleteCommandName
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: DeleteCommandName
  nameWithType: DataList.DeleteCommandName
  fullName: System.Web.UI.WebControls.DataList.DeleteCommandName
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "나타냅니다는 <xref uid=&quot;langword_csharp_Delete&quot; name=&quot;Delete&quot; href=&quot;&quot;> </xref> 명령 이름입니다. 이 필드는 읽기 전용입니다."
  remarks: "나타내는 DeleteCommandName 필드를 사용 하 여는 `Delete` 명령 이름입니다."
  syntax:
    content: public const string DeleteCommandName;
    return:
      type: System.String
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.EditCommand
  id: EditCommand
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: EditCommand
  nameWithType: DataList.EditCommand
  fullName: System.Web.UI.WebControls.DataList.EditCommand
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "발생 경우는 <xref uid=&quot;langword_csharp_Edit&quot; name=&quot;Edit&quot; href=&quot;&quot;> </xref> 항목에 대해 단추를 클릭할는 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref> 제어 합니다."
  remarks: "EditCommand 이벤트가 발생할 때는 `Edit` 항목에 대해 단추를 클릭는 <xref:System.Web.UI.WebControls.DataList>컨트롤.</xref:System.Web.UI.WebControls.DataList>       EditCommand 이벤트 집합에 대 한 일반적인 처리기는 <xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A>속성 선택된 된 행을 다음 데이터를 다시 바인딩 횟수와 <xref:System.Web.UI.WebControls.DataList>컨트롤.</xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A>      > [!CAUTION] > 텍스트는 HTML에 표시 되기 전에 인코딩되지는 <xref:System.Web.UI.WebControls.DataList>컨트롤.</xref:System.Web.UI.WebControls.DataList> 따라서 텍스트에 HTML 태그 내에서 스크립트를 포함 시킬 수 있습니다. 컨트롤에 대 한 값 사용자 입력에 연결 하는 경우에 보안 취약점을 줄이기 위해 값을 확인 해야 합니다.       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [하는 방법: Web Forms 응용 프로그램에](~/add/includes/ajax-current-ext-md.md)합니다.      > [!CAUTION] > 악의적인 클라이언트 스크립트가 포함 될 수 있습니다는 사용자 입력을 표시 하려면이 컨트롤을 사용할 수 있습니다. 응용 프로그램에 표시 하기 전에 실행 스크립트, SQL 문 또는 다른 코드에 대 한 클라이언트에서 보낸 모든 정보를 확인 합니다. 컨트롤에서 입력된 텍스트를 표시 하기 전에 사용자 입력을 확인 하려면 유효성 검사 컨트롤을 사용할 수 있습니다. ASP.NET은 사용자 입력에 있는 스크립트 블록 및 HTML에 있는 입력된 요청 유효성 검사 기능을 제공 합니다. 자세한 내용은 참조 [보안 표준 컨트롤](~/add/includes/ajax-current-ext-md.md), [하는 방법: 보호에 대 한 스크립트에 의해 악용 문자열을 HTML 인코딩 적용 하 여 웹 응용 프로그램에서](~/add/includes/ajax-current-ext-md.md), 및 [ASP.NET 웹 페이지에서 사용자 입력 유효성 검사](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example demonstrates how to specify and code a handler for the EditCommand event. It allows you to edit the selected item in the <xref:System.Web.UI.WebControls.DataList> control when the `Edit` button is clicked.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[DataListEdit#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_64_1.aspx)]\n [!code-vb[DataListEdit#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_64_1.aspx)]  \n  \n [!code-vb[DataListEdit2#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_64_2.aspx)]\n [!code-cs[DataListEdit2#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_64_2.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.DataListCommandEventHandler EditCommand;
    return:
      type: System.Web.UI.WebControls.DataListCommandEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.EditCommandName
  id: EditCommandName
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: EditCommandName
  nameWithType: DataList.EditCommandName
  fullName: System.Web.UI.WebControls.DataList.EditCommandName
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "나타냅니다는 <xref uid=&quot;langword_csharp_Edit&quot; name=&quot;Edit&quot; href=&quot;&quot;> </xref> 명령 이름입니다. 이 필드는 읽기 전용입니다."
  remarks: "나타내는 EditCommandName 필드를 사용 하 여는 `Edit` 명령 이름입니다."
  syntax:
    content: public const string EditCommandName;
    return:
      type: System.String
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.EditItemIndex
  id: EditItemIndex
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: EditItemIndex
  nameWithType: DataList.EditItemIndex
  fullName: System.Web.UI.WebControls.DataList.EditItemIndex
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "선택한 항목의 인덱스 번호를 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref> 컨트롤을 편집 합니다."
  remarks: "EditItemIndex 속성을 사용 하 여 프로그래밍 방식으로 편집할 항목을 지정 합니다. 또한 편집을 위해 선택한 항목의 인덱스를 확인 하려면이 속성을 사용할 수 있습니다.      > [!NOTE] > The EditItemIndex 속성은&0;부터 시작 합니다.       항목을 선택 취소 하려면 EditItemIndex 속성을 설정 `-1`합니다.      > [!CAUTION] > 악의적인 클라이언트 스크립트가 포함 될 수 있습니다는 사용자 입력을 표시 하려면이 컨트롤을 사용할 수 있습니다. 응용 프로그램에 표시 하기 전에 실행 스크립트, SQL 문 또는 다른 코드에 대 한 클라이언트에서 보낸 모든 정보를 확인 합니다. 컨트롤에서 입력된 텍스트를 표시 하기 전에 사용자 입력을 확인 하려면 유효성 검사 컨트롤을 사용할 수 있습니다. ASP.NET은 사용자 입력에 있는 스크립트 블록 및 HTML에 있는 입력된 요청 유효성 검사 기능을 제공 합니다. 자세한 내용은 참조 [보안 표준 컨트롤](~/add/includes/ajax-current-ext-md.md), [하는 방법: 보호에 대 한 스크립트에 의해 악용 문자열을 HTML 인코딩 적용 하 여 웹 응용 프로그램에서](~/add/includes/ajax-current-ext-md.md), 및 [ASP.NET 웹 페이지에서 사용자 입력 유효성 검사](~/add/includes/ajax-current-ext-md.md)합니다.       EditItemIndex 속성 컨트롤 상태에 저장 됩니다."
  example:
  - "The following code example demonstrates how to use the EditItemIndex property to specify the item selected by the user for editing.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[DataListEdit#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_620_1.aspx)]\n [!code-vb[DataListEdit#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_620_1.aspx)]"
  syntax:
    content: public virtual int EditItemIndex { get; set; }
    return:
      type: System.Int32
      description: "선택한 항목의 인덱스 번호는 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref> 컨트롤을 편집 합니다."
  overload: System.Web.UI.WebControls.DataList.EditItemIndex*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "선택한 값이 보다 작은 <xref uid=&quot;langword_csharp_0&quot; name=&quot;0&quot; href=&quot;&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.EditItemStyle
  id: EditItemStyle
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: EditItemStyle
  nameWithType: DataList.EditItemStyle
  fullName: System.Web.UI.WebControls.DataList.EditItemStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "편집을 위해 항목에 대 한 스타일 속성을 가져옵니다는 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref> 제어 합니다."
  remarks: "EditItemStyle 속성을 사용 하 여 편집을 위해 항목에 대 한 사용자 지정 스타일을 제공 하는 <xref:System.Web.UI.WebControls.DataList>컨트롤.</xref:System.Web.UI.WebControls.DataList> 조정할 수 있는 일반 스타일 특성 전경색, 배경색, 글꼴 및 셀 내용 맞춤을 포함 합니다. 모양을 향상 시킬 다른 스타일을 사용 하 여 <xref:System.Web.UI.WebControls.DataList>컨트롤.</xref:System.Web.UI.WebControls.DataList>       항목의 스타일 속성은 <xref:System.Web.UI.WebControls.DataList>컨트롤 계층을 통해 다른 항목을 하나 style 속성에서 상속 됩니다.</xref:System.Web.UI.WebControls.DataList> 계층 구조에서 낮게 설정할 항목 스타일 속성은 계층 구조의 상위 항목 스타일 속성에 의해 상속 됩니다. 예를 들어 빨강 글꼴을 지정 하는 경우는 <xref:System.Web.UI.WebControls.DataList.ItemStyle%2A>속성에서 다른 모든 항목 스타일 속성은 <xref:System.Web.UI.WebControls.DataList>컨트롤에는 빨간색 글꼴로.</xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> 이 옵션을 사용 하면 단일 항목 style 속성을 설정 하 여 컨트롤에 대 한 공통 된 모양을 지정할 수 있습니다. 스타일 속성을 설정 하 여 계층에 있는 항목 스타일 속성에 대 한 상속 된 스타일 설정을 재정의할 수 있습니다. 예를 들어, 파랑 글꼴을 지정할 수 있습니다는 <xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A>속성을 재정의에 지정 된 예는 <xref:System.Web.UI.WebControls.DataList.ItemStyle%2A>속성.</xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> </xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A> 다음 표에서 내림차순으로 최고 계층 구조 순서로 나열합니다.      | 우선 순위 | Style 속성 |   |----------------|--------------------|   |&1; | EditItemStyle |   |&2; | <xref:System.Web.UI.WebControls.DataList.SelectedItemStyle%2A>|   |&3; | <xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A>|   |&4; | <xref:System.Web.UI.WebControls.DataList.ItemStyle%2A>|   |&5; | <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>|       편집을 위해 선택한 항목에 대 한 사용자 지정 스타일을 지정 하려면는 `<EditItemStyle>` 여는 태그와 닫는 태그 사이 <xref:System.Web.UI.WebControls.DataList>컨트롤.</xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> </xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> </xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A> </xref:System.Web.UI.WebControls.DataList.SelectedItemStyle%2A> 다음을 표시 하 여 스타일 특성 `<EditItemStyle>` 태그입니다."
  example:
  - "The following code example demonstrates how to use the EditItemStyle property to specify a different appearance for the item selected by the user for editing.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[DataListEdit#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_214_1.aspx)]\n [!code-vb[DataListEdit#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_214_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.TableItemStyle EditItemStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "A <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref> 개체 편집을 위해 항목에 대 한 스타일 속성을 포함 하는 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref> 제어 합니다. 기본값은 빈 <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref> 개체입니다."
  overload: System.Web.UI.WebControls.DataList.EditItemStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.EditItemTemplate
  id: EditItemTemplate
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: EditItemTemplate
  nameWithType: DataList.EditItemTemplate
  fullName: System.Web.UI.WebControls.DataList.EditItemTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "편집을 위해 항목에 대 한 서식 파일을 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref> 제어 합니다."
  remarks: "EditItemTemplate 속성을 사용 하 여 편집을 위해 항목의 내용을 제어 하는 <xref:System.Web.UI.WebControls.DataList>컨트롤.</xref:System.Web.UI.WebControls.DataList> 에 의해 제어 됩니다 편집을 위해 선택한 항목의 모양을 <xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A>속성.</xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A>       편집을 위해 선택한 항목에 대 한 서식 파일을 지정 하려면는 `<EditItemTemplate>` 여는 태그와 닫는 태그 사이 <xref:System.Web.UI.WebControls.DataList>컨트롤.</xref:System.Web.UI.WebControls.DataList> 그런 다음 열기 및 닫기 사이의 서식 파일의 내용을 나열 수 `<EditItemTemplate>` 태그입니다.      > [!CAUTION] > 악의적인 클라이언트 스크립트가 포함 될 수 있습니다는 사용자 입력을 표시 하려면이 컨트롤을 사용할 수 있습니다. 응용 프로그램에 표시 하기 전에 실행 스크립트, SQL 문 또는 다른 코드에 대 한 클라이언트에서 보낸 모든 정보를 확인 합니다. 컨트롤에서 입력된 텍스트를 표시 하기 전에 사용자 입력을 확인 하려면 유효성 검사 컨트롤을 사용할 수 있습니다. ASP.NET은 사용자 입력에 있는 스크립트 블록 및 HTML에 있는 입력된 요청 유효성 검사 기능을 제공 합니다. 자세한 내용은 참조 [보안 표준 컨트롤](~/add/includes/ajax-current-ext-md.md), [하는 방법: 보호에 대 한 스크립트에 의해 악용 문자열을 HTML 인코딩 적용 하 여 웹 응용 프로그램에서](~/add/includes/ajax-current-ext-md.md), 및 [ASP.NET 웹 페이지에서 사용자 입력 유효성 검사](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example demonstrates how to use the EditItemTemplate property to control the contents of the item selected by the user for editing.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[DataListEdit#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_316_1.aspx)]\n [!code-vb[DataListEdit#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_316_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate EditItemTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "A <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref> 편집을 위해 항목에 대 한 템플릿이 포함 된 개체는 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref> 제어 합니다. 기본값은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.DataList.EditItemTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.ExtractTemplateRows
  id: ExtractTemplateRows
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: ExtractTemplateRows
  nameWithType: DataList.ExtractTemplateRows
  fullName: System.Web.UI.WebControls.DataList.ExtractTemplateRows
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "표시 하는 값을 가져오거나 설정 합니다. 여부의 행은 <xref href=&quot;System.Web.UI.WebControls.Table&quot;> </xref> 의 각 서식 파일에 정의 된 제어는 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref> 제어 추출 되 고 표시 합니다."
  remarks: "콘텐츠는 <xref:System.Web.UI.WebControls.DataList>컨트롤 템플릿을 사용 하 여 지정 됩니다.</xref:System.Web.UI.WebControls.DataList> 일반적으로 컨트롤 서식 파일에 표시 하려는 나열 합니다. 배치할 수 있습니다는 <xref:System.Web.UI.WebControls.Table>템플릿에서 제어 하 고 테이블의 행을 표시 합니다.</xref:System.Web.UI.WebControls.Table>       ExtractTemplateRows 속성을 사용 하 여 지정할 수 있는지 여부를의 행은 <xref:System.Web.UI.WebControls.Table>의 각 서식 파일에 정의 된 제어는 <xref:System.Web.UI.WebControls.DataList>제어 추출 되 고 표시 합니다.</xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.Table> 모든 행의 서식 파일에서 추출 된 <xref:System.Web.UI.WebControls.DataList>컨트롤은 단일 테이블에 표시 됩니다.</xref:System.Web.UI.WebControls.DataList> 이렇게 하면 보다 작은 여러 테이블에서 단일 테이블을 만들고의 기능을 유지할 수 있습니다는 <xref:System.Web.UI.WebControls.DataList>컨트롤.</xref:System.Web.UI.WebControls.DataList>      > [!NOTE] >로이 속성이 설정 된 경우 `true`, 올바른 형식의 제공 해야 <xref:System.Web.UI.WebControls.Table>에 포함 시킬 각 서식 파일에 대 한 제어는 <xref:System.Web.UI.WebControls.DataList>컨트롤.</xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.Table> 테이블의 행만 표시 됩니다. 서식 파일에서 다른 모든 내용이 무시 됩니다. 사용 해야 합니다는 <xref:System.Web.UI.WebControls.Table>제대로 작동 하려면이 기능에 대 한 제어 합니다.</xref:System.Web.UI.WebControls.Table> <xref:System.Web.UI.HtmlControls.HtmlTable?displayProperty=fullName>제어가이 속성에 호환 되지 않습니다.</xref:System.Web.UI.HtmlControls.HtmlTable?displayProperty=fullName>       에 대 한 셀을 만들 때는 <xref:System.Web.UI.WebControls.Table>컨트롤에서 서식 파일을 사용할 수 있습니다는 <xref:System.Web.UI.WebControls.TableCell.ColumnSpan%2A>속성의는 <xref:System.Web.UI.WebControls.TableCell>셀이 확장 될 열 수를 제어 하는 개체입니다.</xref:System.Web.UI.WebControls.TableCell> </xref:System.Web.UI.WebControls.TableCell.ColumnSpan%2A> </xref:System.Web.UI.WebControls.Table> 사용할 수도 있습니다는 <xref:System.Web.UI.WebControls.TableCell.RowSpan%2A>셀이 확장 될 행 수를 제어 하려면 속성.</xref:System.Web.UI.WebControls.TableCell.RowSpan%2A>      > [!NOTE] >는 <xref:System.Web.UI.WebControls.DataList.RepeatColumns%2A>, <xref:System.Web.UI.WebControls.DataList.RepeatDirection%2A>, 및 <xref:System.Web.UI.WebControls.DataList.RepeatLayout%2A>속성의 모양에 영향을 주지 않는 <xref:System.Web.UI.WebControls.DataList>로이 속성이 설정 된 경우 제어 `true`.</xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.DataList.RepeatLayout%2A> </xref:System.Web.UI.WebControls.DataList.RepeatDirection%2A> </xref:System.Web.UI.WebControls.DataList.RepeatColumns%2A>"
  example:
  - "The following code example demonstrate how to use the ExtractTemplateRows property to extract and display the rows of <xref:System.Web.UI.WebControls.Table> controls defined in the templates of the <xref:System.Web.UI.WebControls.DataList> control.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[Classic DataList.ExtractTemplateRows Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1162_1.aspx)]\n [!code-cs[Classic DataList.ExtractTemplateRows Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1162_1.aspx)]"
  syntax:
    content: public virtual bool ExtractTemplateRows { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>하는 경우의 행은 <xref href=&quot;System.Web.UI.WebControls.Table&quot;> </xref> 의 각 서식 파일에 정의 된 제어는 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref> 제어 하 고, 추출 및 표시 된, 그렇지 않으면, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.DataList.ExtractTemplateRows*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.FooterStyle
  id: FooterStyle
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: FooterStyle
  nameWithType: DataList.FooterStyle
  fullName: System.Web.UI.WebControls.DataList.FooterStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "바닥글 섹션에 대 한 스타일 속성을 가져옵니다는 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref> 제어 합니다."
  remarks: "이 속성을 사용 하 여의 바닥글 섹션에 대 한 사용자 지정 스타일을 제공 하는 <xref:System.Web.UI.WebControls.DataList>컨트롤.</xref:System.Web.UI.WebControls.DataList> 조정할 수 있는 일반 스타일 특성 전경색, 배경색, 글꼴 및 셀 내용 맞춤을 포함 합니다. 모양을 향상 시킬 다른 스타일을 사용 하 여 <xref:System.Web.UI.WebControls.DataList>컨트롤.</xref:System.Web.UI.WebControls.DataList>       FooterStyle 속성은 <xref:System.Web.UI.WebControls.DataList>컨트롤의 스타일 설정을 상속는 <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>속성.</xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> </xref:System.Web.UI.WebControls.DataList> 예를 들어 빨강 글꼴을 지정 하는 경우는 <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>속성 FooterStyle 속성에는 빨간색 글꼴로.</xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> 이 옵션을 사용 하면 단일 style 속성을 설정 하 여 컨트롤에 대 한 공통 된 모양을 지정할 수 있습니다. 상속된 된 스타일 설정 FooterStyle 속성을 설정 하 여 재정의할 수 있습니다. 예를 들어에 지정 된 빨간색 글꼴로 재정의 FooterStyle 속성에 대 한 파란색 글꼴을 지정할 수는 <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>속성.</xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>       바닥글 섹션에 대 한 사용자 지정 스타일을 지정 하려면는 `<FooterStyle>` 여는 태그와 닫는 태그 사이 <xref:System.Web.UI.WebControls.DataList>컨트롤.</xref:System.Web.UI.WebControls.DataList> 다음을 표시 하 여 스타일 특성 `<FooterStyle>` 태그입니다.      > [!NOTE] >는 <xref:System.Web.UI.WebControls.DataList.ShowFooter%2A>속성으로 설정 되어 있어야 `true` 표시 되도록이 속성에 대 한.</xref:System.Web.UI.WebControls.DataList.ShowFooter%2A>"
  example:
  - "The following code example demonstrates how to use the FooterStyle property to specify a custom background color for the footer section of the <xref:System.Web.UI.WebControls.DataList> control.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[DataListHeaderStyle#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_335_1.aspx)]\n [!code-vb[DataListHeaderStyle#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_335_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.TableItemStyle FooterStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "A <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref> 의 바닥글 섹션에 대 한 스타일 속성을 포함 하는 개체는 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref> 제어 합니다. 기본값은 빈 <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref> 개체입니다."
  overload: System.Web.UI.WebControls.DataList.FooterStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.FooterTemplate
  id: FooterTemplate
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: FooterTemplate
  nameWithType: DataList.FooterTemplate
  fullName: System.Web.UI.WebControls.DataList.FooterTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "바닥글 섹션에 대 한 서식 파일을 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref> 제어 합니다."
  remarks: "바닥글 섹션의 내용을 제어 하려면 먼저 속성을 사용 합니다. 바닥글 섹션의 표시에 의해 제어 되는 <xref:System.Web.UI.WebControls.DataList.FooterStyle%2A>속성.</xref:System.Web.UI.WebControls.DataList.FooterStyle%2A>      > [!NOTE] >는 <xref:System.Web.UI.WebControls.DataList.ShowFooter%2A>속성으로 설정 되어 있어야 `true` 표시 되도록이 속성에 대 한.</xref:System.Web.UI.WebControls.DataList.ShowFooter%2A>       <xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A>의 속성은 <xref:System.Web.UI.WebControls.DataList>컨트롤의 스타일 설정을 상속는 <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>속성.</xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> </xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A> 예를 들어 빨강 글꼴을 지정 하는 경우는 <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>속성에는 <xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A>속성에는 빨간색 글꼴로.</xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A> </xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> 이 옵션을 사용 하면 단일 style 속성을 설정 하 여 컨트롤에 대 한 공통 된 모양을 지정할 수 있습니다. 상속 된 스타일 설정을 설정 하 여 재정의할 수 있습니다는 <xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A>속성.</xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A> 예를 들어, 파랑 글꼴을 지정할 수 있습니다는 <xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A>속성을 재정의에 지정 된 예는 <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>속성.</xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> </xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A>       바닥글 섹션에 대 한 서식 파일을 지정 하려면는 `<FooterTemplate>` 여는 태그와 닫는 태그 사이 <xref:System.Web.UI.WebControls.DataList>컨트롤.</xref:System.Web.UI.WebControls.DataList> 그런 다음 열기 및 닫기 사이의 서식 파일의 내용을 나열 수 `<FooterTemplate>` 태그입니다.      > [!CAUTION] > 악의적인 클라이언트 스크립트가 포함 될 수 있습니다는 사용자 입력을 표시 하려면이 컨트롤을 사용할 수 있습니다. 응용 프로그램에 표시 하기 전에 실행 스크립트, SQL 문 또는 다른 코드에 대 한 클라이언트에서 보낸 모든 정보를 확인 합니다. 컨트롤에서 입력된 텍스트를 표시 하기 전에 사용자 입력을 확인 하려면 유효성 검사 컨트롤을 사용할 수 있습니다. ASP.NET은 사용자 입력에 있는 스크립트 블록 및 HTML에 있는 입력된 요청 유효성 검사 기능을 제공 합니다. 자세한 내용은 참조 [보안 표준 컨트롤](~/add/includes/ajax-current-ext-md.md), [하는 방법: 보호에 대 한 스크립트에 의해 악용 문자열을 HTML 인코딩 적용 하 여 웹 응용 프로그램에서](~/add/includes/ajax-current-ext-md.md), 및 [ASP.NET 웹 페이지에서 사용자 입력 유효성 검사](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example demonstrates how to use the FooterTemplate property to control the contents of the footer section of the <xref:System.Web.UI.WebControls.DataList> control.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[DataListHeaderStyle#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1036_1.aspx)]\n [!code-vb[DataListHeaderStyle#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1036_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate FooterTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "A <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref> 의 바닥글 섹션에 대 한 템플릿이 포함 된 개체는 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref> 제어 합니다. 기본값은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.DataList.FooterTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.GridLines
  id: GridLines
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: GridLines
  nameWithType: DataList.GridLines
  fullName: System.Web.UI.WebControls.DataList.GridLines
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "눈금 선 스타일을 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref> 시점을 제어할는 <xref:System.Web.UI.WebControls.DataList.RepeatLayout*>속성이 <xref uid=&quot;langword_csharp_RepeatLayout.Table&quot; name=&quot;RepeatLayout.Table&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.DataList.RepeatLayout*>"
  remarks: "눈금선 속성을 사용 하 여 눈금 선 스타일을 지정 하는 <xref:System.Web.UI.WebControls.DataList>컨트롤.</xref:System.Web.UI.WebControls.DataList> 다음 표에서 가능한 스타일을 보여 줍니다.      | 스타일 | 설명 |   |-----------|-----------------|   | <xref:System.Web.UI.WebControls.GridLines>| 모눈선이 없습니다. |   | <xref:System.Web.UI.WebControls.GridLines>| 가로 모눈선을 표시 합니다. |   | <xref:System.Web.UI.WebControls.GridLines>| 세로 격자 눈금 줄이 표시 됩니다. |   | <xref:System.Web.UI.WebControls.GridLines>| 가로 및 세로 모눈 줄을 표시 합니다. |      > [!NOTE] > 경우에이 속성이 적용 된 <xref:System.Web.UI.WebControls.DataList.RepeatLayout%2A>속성이 `RepeatLayout.Table`.</xref:System.Web.UI.WebControls.DataList.RepeatLayout%2A> </xref:System.Web.UI.WebControls.GridLines> </xref:System.Web.UI.WebControls.GridLines> </xref:System.Web.UI.WebControls.GridLines> </xref:System.Web.UI.WebControls.GridLines>"
  example:
  - "The following code example demonstrates how to use the GridLines property to display the vertical and horizontal grid lines of the <xref:System.Web.UI.WebControls.DataList> control.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[DataListLayout#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1324_1.aspx)]\n [!code-cs[DataListLayout#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1324_1.aspx)]"
  syntax:
    content: public override System.Web.UI.WebControls.GridLines GridLines { get; set; }
    return:
      type: System.Web.UI.WebControls.GridLines
      description: "중 하나는 <xref href=&quot;System.Web.UI.WebControls.GridLines&quot;> </xref> 열거형 값입니다. 기본값은 <xref uid=&quot;langword_csharp_None&quot; name=&quot;None&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.DataList.GridLines*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.HeaderStyle
  id: HeaderStyle
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: HeaderStyle
  nameWithType: DataList.HeaderStyle
  fullName: System.Web.UI.WebControls.DataList.HeaderStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "머리글 섹션에 대 한 스타일 속성을 가져옵니다는 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref> 제어 합니다."
  remarks: "이 속성을 사용 하 여 사용자 지정 스타일의 머리글을 제공 하는 <xref:System.Web.UI.WebControls.DataList>컨트롤.</xref:System.Web.UI.WebControls.DataList> 조정할 수 있는 일반 스타일 특성 전경색, 배경색, 글꼴 및 셀 내용 맞춤을 포함 합니다. 모양을 향상 시킬 다른 스타일을 사용 하 여 <xref:System.Web.UI.WebControls.DataList>컨트롤.</xref:System.Web.UI.WebControls.DataList>       머리글 섹션에 대 한 사용자 지정 스타일을 지정 하려면는 `<HeaderStyle>` 여는 태그와 닫는 태그 사이 <xref:System.Web.UI.WebControls.DataList>컨트롤.</xref:System.Web.UI.WebControls.DataList> 다음을 표시 하 여 스타일 특성 `<HeaderStyle>` 태그입니다.      > [!NOTE] >는 <xref:System.Web.UI.WebControls.DataList.ShowHeader%2A>속성으로 설정 되어 있어야 `true` 표시 되도록이 속성에 대 한.</xref:System.Web.UI.WebControls.DataList.ShowHeader%2A>"
  example:
  - "The following code example demonstrates how to use the HeaderStyle property to specify a custom background color for the heading section of the <xref:System.Web.UI.WebControls.DataList> control.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[DataListHeaderStyle#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1175_1.aspx)]\n [!code-vb[DataListHeaderStyle#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1175_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.TableItemStyle HeaderStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "A <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref> 의 머리글 섹션에 대 한 스타일 속성을 포함 하는 개체는 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref> 제어 합니다. 기본값은 빈 <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref> 개체입니다."
  overload: System.Web.UI.WebControls.DataList.HeaderStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.HeaderTemplate
  id: HeaderTemplate
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: HeaderTemplate
  nameWithType: DataList.HeaderTemplate
  fullName: System.Web.UI.WebControls.DataList.HeaderTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "머리글 섹션에 대 한 서식 파일을 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref> 제어 합니다."
  remarks: "HeaderTemplate 속성을 사용 하 여 머리글 섹션의 내용을 제어 합니다. 헤더 섹션의 표시에 의해 제어 되는 <xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A>속성.</xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A>      > [!NOTE] >는 <xref:System.Web.UI.WebControls.DataList.ShowHeader%2A>속성으로 설정 되어 있어야 `true` 표시 되도록이 속성에 대 한.</xref:System.Web.UI.WebControls.DataList.ShowHeader%2A>       머리글 섹션에 대 한 서식 파일을 지정 하려면는 `<HeaderTemplate>` 여는 태그와 닫는 태그 사이 <xref:System.Web.UI.WebControls.DataList>컨트롤.</xref:System.Web.UI.WebControls.DataList> 그런 다음 열기 및 닫기 사이의 서식 파일의 내용을 나열 수 `<HeaderTemplate>` 태그입니다.      > [!CAUTION] > 악의적인 클라이언트 스크립트가 포함 될 수 있습니다는 사용자 입력을 표시 하려면이 컨트롤을 사용할 수 있습니다. 응용 프로그램에 표시 하기 전에 실행 스크립트, SQL 문 또는 다른 코드에 대 한 클라이언트에서 보낸 모든 정보를 확인 합니다. 컨트롤에서 입력된 텍스트를 표시 하기 전에 사용자 입력을 확인 하려면 유효성 검사 컨트롤을 사용할 수 있습니다. ASP.NET은 사용자 입력에 있는 스크립트 블록 및 HTML에 있는 입력된 요청 유효성 검사 기능을 제공 합니다. 자세한 내용은 참조 [보안 표준 컨트롤](~/add/includes/ajax-current-ext-md.md), [하는 방법: 보호에 대 한 스크립트에 의해 악용 문자열을 HTML 인코딩 적용 하 여 웹 응용 프로그램에서](~/add/includes/ajax-current-ext-md.md), 및 [ASP.NET 웹 페이지에서 사용자 입력 유효성 검사](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example demonstrates how to use the HeaderTemplate property to control the contents of the heading section of the <xref:System.Web.UI.WebControls.DataList> control.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[DataListLayout#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_905_1.aspx)]\n [!code-cs[DataListLayout#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_905_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate HeaderTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "A <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref> 의 머리글 섹션에 대 한 서식 파일을 포함 하는 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref> 제어 합니다. 기본값은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.DataList.HeaderTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.InitializeItem(System.Web.UI.WebControls.DataListItem)
  id: InitializeItem(System.Web.UI.WebControls.DataListItem)
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: InitializeItem(DataListItem)
  nameWithType: DataList.InitializeItem(DataListItem)
  fullName: System.Web.UI.WebControls.DataList.InitializeItem(DataListItem)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "초기화는 <xref href=&quot;System.Web.UI.WebControls.DataListItem&quot;> </xref> 지정 된 템플릿 및 목록 항목 형식에 대 한 스타일에 따라 개체입니다."
  remarks: "InitializeItem 메서드는 주로 컨트롤 개발자가 확장 된 <xref:System.Web.UI.WebControls.DataList>컨트롤.</xref:System.Web.UI.WebControls.DataList>       <xref:System.Web.UI.WebControls.DataList.CreateControlHierarchy%2A>메서드는 <xref:System.Web.UI.WebControls.DataList.CreateItem%2A>및 만들려는 InitializeItem 메서드 <xref:System.Web.UI.WebControls.DataListItem>머리글, 바닥글, 구분 기호, 및 데이터 목록에 포함 된 데이터 바인딩 항목을 나타내는 컨트롤.</xref:System.Web.UI.WebControls.DataListItem> </xref:System.Web.UI.WebControls.DataList.CreateItem%2A> </xref:System.Web.UI.WebControls.DataList.CreateControlHierarchy%2A> 데이터 바인딩된 항목을 통해 데이터 목록에 액세스할 수 있습니다는 <xref:System.Web.UI.WebControls.DataList.Items%2A>컬렉션.</xref:System.Web.UI.WebControls.DataList.Items%2A> 통해 머리글, 바닥글 및 구분 기호 항목을 포함 하 여 모든 항목 형식에 액세스할 수 있습니다는 <xref:System.Web.UI.WebControls.BaseDataList.Controls%2A>컬렉션.</xref:System.Web.UI.WebControls.BaseDataList.Controls%2A>       재정의 <xref:System.Web.UI.WebControls.DataList.CreateControlHierarchy%2A>사용자 지정 하는 방법을 어떻게 <xref:System.Web.UI.WebControls.DataListItem>컨트롤을 만들거나에 추가 <xref:System.Web.UI.WebControls.DataList>컨트롤.</xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.DataListItem> </xref:System.Web.UI.WebControls.DataList.CreateControlHierarchy%2A> 에 대 한 템플릿을 사용자 지정 하려면 InitializeItem 메서드를 재정의 한 <xref:System.Web.UI.WebControls.DataListItem>컨트롤.</xref:System.Web.UI.WebControls.DataListItem>"
  syntax:
    content: protected virtual void InitializeItem (System.Web.UI.WebControls.DataListItem item);
    parameters:
    - id: item
      type: System.Web.UI.WebControls.DataListItem
      description: "<xref href=&quot;System.Web.UI.WebControls.DataListItem&quot;> </xref> 를 초기화 합니다."
  overload: System.Web.UI.WebControls.DataList.InitializeItem*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.ItemCommand
  id: ItemCommand
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: ItemCommand
  nameWithType: DataList.ItemCommand
  fullName: System.Web.UI.WebControls.DataList.ItemCommand
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "에 있는 단추를 클릭할 때 발생는 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref> 제어 합니다."
  remarks: "ItemCommand 이벤트는에 있는 단추를 클릭할 때 발생는 <xref:System.Web.UI.WebControls.DataList>제어 하 고를 사용자 지정 단추 컨트롤이 있는 경우에 주로 사용은 `CommandName` 값.</xref:System.Web.UI.WebControls.DataList>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조[하는 방법: Web Forms 응용 프로그램에](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example demonstrates how to specify and code a handler for the ItemCommand event to select an item from the <xref:System.Web.UI.WebControls.DataList> control.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[DataListItemCommand#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_0_1.aspx)]\n [!code-cs[DataListItemCommand#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_0_1.aspx)]  \n  \n [!code-vb[DataListItemCommand2#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_0_2.aspx)]\n [!code-cs[DataListItemCommand2#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_0_2.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.DataListCommandEventHandler ItemCommand;
    return:
      type: System.Web.UI.WebControls.DataListCommandEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.ItemCreated
  id: ItemCreated
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: ItemCreated
  nameWithType: DataList.ItemCreated
  fullName: System.Web.UI.WebControls.DataList.ItemCreated
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "항목이 서버에서 발생 된 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref> 컨트롤이 만들어집니다."
  remarks: "항목이 ItemCreated 이벤트가 발생는 <xref:System.Web.UI.WebControls.DataList>데이터가 컨트롤에 바인딩되는 왕복 중 및 시간에, 컨트롤이 만들어집니다.</xref:System.Web.UI.WebControls.DataList>       ItemCreated 이벤트는 내용과에 있는 행의 모양을 제어 하는 데 주로 사용 된 <xref:System.Web.UI.WebControls.DataList>컨트롤.</xref:System.Web.UI.WebControls.DataList>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [하는 방법: Web Forms 응용 프로그램에](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example demonstrates how to specify and code a handler for the ItemCreated event to display the order in which items in the <xref:System.Web.UI.WebControls.DataList> control are created.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[DataListItemCreated#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_106_1.aspx)]\n [!code-cs[DataListItemCreated#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_106_1.aspx)]  \n  \n [!code-cs[DataListItemCreated2#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_106_2.aspx)]\n [!code-vb[DataListItemCreated2#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_106_2.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.DataListItemEventHandler ItemCreated;
    return:
      type: System.Web.UI.WebControls.DataListItemEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.ItemDataBound
  id: ItemDataBound
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: ItemDataBound
  nameWithType: DataList.ItemDataBound
  fullName: System.Web.UI.WebControls.DataList.ItemDataBound
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "항목에 데이터 바인딩된 경우에 발생는 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref> 제어 합니다."
  remarks: "항목 데이터에 바인딩된 후 ItemDataBound 이벤트가 발생 된 <xref:System.Web.UI.WebControls.DataList>컨트롤.</xref:System.Web.UI.WebControls.DataList> 이 이벤트는 클라이언트에 표시 되기 전에 데이터 항목에 액세스할 수 있는 마지막 기회를 제공 합니다. 이 이벤트는 발생 한 후에 데이터 항목을 사용할 수 없습니다.       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [하는 방법: Web Forms 응용 프로그램에](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example demonstrates how to specify and code a handler for the ItemDataBound event to display the order in which items in the <xref:System.Web.UI.WebControls.DataList> control are bound to the control.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[DataListItemDataBound#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_143_1.aspx)]\n [!code-vb[DataListItemDataBound#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_143_1.aspx)]  \n  \n [!code-vb[DataListItemDataBound2#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_143_2.aspx)]\n [!code-cs[DataListItemDataBound2#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_143_2.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.DataListItemEventHandler ItemDataBound;
    return:
      type: System.Web.UI.WebControls.DataListItemEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.Items
  id: Items
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: Items
  nameWithType: DataList.Items
  fullName: System.Web.UI.WebControls.DataList.Items
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "컬렉션을 가져옵니다 <xref href=&quot;System.Web.UI.WebControls.DataListItem&quot;> </xref> 컨트롤 내에서 개별 항목을 나타내는 개체입니다."
  remarks: "Items 컬렉션을 사용 하 여 프로그래밍 방식으로 항목을 제어 하는 <xref:System.Web.UI.WebControls.DataList>컨트롤.</xref:System.Web.UI.WebControls.DataList> Items 컬렉션에 항목을 컬렉션에 추가 하거나 제거 하는 메서드를 제공 하지 않습니다. 에 대 한 처리기를 제공 하 여 항목의 내용을 제어할 수 있습니다는 <xref:System.Web.UI.WebControls.DataList.ItemCreated>이벤트.</xref:System.Web.UI.WebControls.DataList.ItemCreated>      > [!NOTE] > 데이터 원본에 연결 하는 항목만 항목 컬렉션에 포함 되어 있습니다. 머리글, 바닥글 및 구분 기호는 컬렉션에 포함 되지 않습니다."
  example:
  - "The following code example demonstrates how to use the Items collection to display the items in the <xref:System.Web.UI.WebControls.DataList> control.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[Classic DataList.Items Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_231_1.aspx)]\n [!code-cs[Classic DataList.Items Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_231_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.DataListItemCollection Items { get; }
    return:
      type: System.Web.UI.WebControls.DataListItemCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.DataListItemCollection&quot;> </xref> 의 컬렉션을 포함 하는 <xref href=&quot;System.Web.UI.WebControls.DataListItem&quot;> </xref> 내에서 개별 항목을 나타내는 개체는 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref> 제어 합니다."
  overload: System.Web.UI.WebControls.DataList.Items*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.ItemStyle
  id: ItemStyle
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: ItemStyle
  nameWithType: DataList.ItemStyle
  fullName: System.Web.UI.WebControls.DataList.ItemStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "항목에 대 한 스타일 속성을 가져옵니다는 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref> 제어 합니다."
  remarks: "이 속성을 사용 하 여의 항목에 대 한 사용자 지정 스타일을 제공 하는 <xref:System.Web.UI.WebControls.DataList>컨트롤.</xref:System.Web.UI.WebControls.DataList> 조정할 수 있는 일반 스타일 특성 전경색, 배경색, 글꼴 및 셀 내용 맞춤을 포함 합니다. 모양을 향상 시킬 다른 스타일을 사용 하 여 <xref:System.Web.UI.WebControls.DataList>컨트롤.</xref:System.Web.UI.WebControls.DataList>       항목의 스타일 속성은 <xref:System.Web.UI.WebControls.DataList>컨트롤 계층을 통해 다른 항목을 하나 style 속성에서 상속 됩니다.</xref:System.Web.UI.WebControls.DataList> 계층 구조에서 낮게 설정할 항목 스타일 속성은 계층 구조의 상위 항목 스타일 속성에 의해 상속 됩니다. 예를 들어 빨강 글꼴을 ItemStyle 속성에 대 한을 지정 하면 다른 모든 항목 스타일 속성에는 <xref:System.Web.UI.WebControls.DataList>컨트롤에는 빨간색 글꼴로.</xref:System.Web.UI.WebControls.DataList> 이 옵션을 사용 하면 단일 항목 style 속성을 설정 하 여 컨트롤에 대 한 공통 된 모양을 지정할 수 있습니다. 스타일 속성을 설정 하 여 계층에 있는 항목 스타일 속성에 대 한 상속 된 스타일 설정을 재정의할 수 있습니다. 예를 들어, 파랑 글꼴을 지정할 수 있습니다는 <xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A>ItemStyle 속성에 지정 된 빨간색 글꼴로 재정의 속성.</xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A> 다음 표에서 내림차순으로 최고 계층 구조 순서로 나열합니다.      | 우선 순위 | Style 속성 |   |----------------|--------------------|   |&1; | <xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A>|   |&2; | <xref:System.Web.UI.WebControls.DataList.SelectedItemStyle%2A>|   |&3; | <xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A>|   |&4; | ItemStyle |   |&5; | <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>|       항목에 대 한 사용자 지정 스타일을 지정 하는 <xref:System.Web.UI.WebControls.DataList>컨트롤은 `<ItemStyle>` 여는 태그와 닫는 태그 사이 <xref:System.Web.UI.WebControls.DataList>컨트롤.</xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> </xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A> </xref:System.Web.UI.WebControls.DataList.SelectedItemStyle%2A> </xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A> 다음을 표시 하 여 스타일 특성 `<ItemStyle>` 태그입니다.       사용할 수도 있습니다는 <xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A>있는 대체에 서로 다른 모양을 제공 하는 속성 항목에 <xref:System.Web.UI.WebControls.DataList>컨트롤.</xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A>"
  example:
  - "The following code example demonstrates how to use the ItemStyle property to specify a different background color for the items in the <xref:System.Web.UI.WebControls.DataList> control.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[DataListItemStyle#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_649_1.aspx)]\n [!code-cs[DataListItemStyle#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_649_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.TableItemStyle ItemStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "A <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref> 항목에 대 한 스타일 속성을 포함 하는 개체는 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref> 제어 합니다. 기본값은 빈 <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref> 개체입니다."
  overload: System.Web.UI.WebControls.DataList.ItemStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.ItemTemplate
  id: ItemTemplate
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: ItemTemplate
  nameWithType: DataList.ItemTemplate
  fullName: System.Web.UI.WebControls.DataList.ItemTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "항목에 대 한 서식 파일을 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref> 제어 합니다."
  remarks: "ItemTemplate 속성을 사용 하 여에 있는 항목의 내용을 제어 하는 <xref:System.Web.UI.WebControls.DataList>컨트롤.</xref:System.Web.UI.WebControls.DataList> 항목의 모양을 <xref:System.Web.UI.WebControls.DataList>컨트롤에 의해 제어 되는 <xref:System.Web.UI.WebControls.DataList.ItemStyle%2A>속성.</xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> </xref:System.Web.UI.WebControls.DataList>       항목에 대 한 서식 파일을 지정 하는 <xref:System.Web.UI.WebControls.DataList>컨트롤은 `<ItemTemplate>` 여는 태그와 닫는 태그 사이 <xref:System.Web.UI.WebControls.DataList>컨트롤.</xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.DataList> 그런 다음 열기 및 닫기 사이의 서식 파일의 내용을 나열 수 `<ItemTemplate>` 태그입니다.       선택적으로 사용할 수는 <xref:System.Web.UI.WebControls.DataList.AlternatingItemTemplate%2A>있는 대체에 서로 다른 모양을 제공 하는 속성 항목에 <xref:System.Web.UI.WebControls.DataList>컨트롤.</xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.DataList.AlternatingItemTemplate%2A>      > [!CAUTION] > 악의적인 클라이언트 스크립트가 포함 될 수 있습니다는 사용자 입력을 표시 하려면이 컨트롤을 사용할 수 있습니다. 응용 프로그램에 표시 하기 전에 실행 스크립트, SQL 문 또는 다른 코드에 대 한 클라이언트에서 보낸 모든 정보를 확인 합니다. 컨트롤에서 입력된 텍스트를 표시 하기 전에 사용자 입력을 확인 하려면 유효성 검사 컨트롤을 사용할 수 있습니다. ASP.NET은 사용자 입력에 있는 스크립트 블록 및 HTML에 있는 입력된 요청 유효성 검사 기능을 제공 합니다. 자세한 내용은 참조 [보안 표준 컨트롤](~/add/includes/ajax-current-ext-md.md), [하는 방법: 보호에 대 한 스크립트에 의해 악용 문자열을 HTML 인코딩 적용 하 여 웹 응용 프로그램에서](~/add/includes/ajax-current-ext-md.md), 및 [ASP.NET 웹 페이지에서 사용자 입력 유효성 검사](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example demonstrates how to use the ItemTemplate property to control the contents of the items in the <xref:System.Web.UI.WebControls.DataList> control.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[DataListLayout#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_848_1.aspx)]\n [!code-cs[DataListLayout#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_848_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate ItemTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "A <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref> 항목에 대 한 서식 파일을 포함 하는 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref> 제어 합니다. 기본값은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.DataList.ItemTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.LoadViewState(System.Object)
  id: LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: LoadViewState(Object)
  nameWithType: DataList.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.DataList.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "이전에 저장 된 뷰 상태를 로드는 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref> 제어 합니다."
  remarks: "이 메서드는.NET Framework 인프라에서 주로 사용 하 고 사용자 코드에서 직접 사용할 수 없습니다.  그러나 컨트롤 개발자가 사용자 지정 서버 컨트롤에서 해당 뷰 상태를 복원 하는 방법을 지정 하려면이 메서드를 재정의할 수 있습니다. 자세한 내용은 참조 [ASP.NET 상태 관리 개요](~/add/includes/ajax-current-ext-md.md)합니다.       LoadViewState 메서드 복원에 대 한 뷰 상태 정보는 <xref:System.Web.UI.WebControls.DataList>컨트롤에서 저장 된 이전 페이지 요청에서는 <xref:System.Web.UI.WebControls.DataList.SaveViewState%2A>메서드.</xref:System.Web.UI.WebControls.DataList.SaveViewState%2A> </xref:System.Web.UI.WebControls.DataList>"
  syntax:
    content: protected override void LoadViewState (object savedState);
    parameters:
    - id: savedState
      type: System.Object
      description: "상태를 나타내는 개체는 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.DataList.LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.OnBubbleEvent(System.Object,System.EventArgs)
  id: OnBubbleEvent(System.Object,System.EventArgs)
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: OnBubbleEvent(Object,EventArgs)
  nameWithType: DataList.OnBubbleEvent(Object,EventArgs)
  fullName: System.Web.UI.WebControls.DataList.OnBubbleEvent(Object,EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "서버 컨트롤의 이벤트가 페이지의 UI 서버 컨트롤 계층 구조로 전달 되는지 여부를 결정 합니다."
  syntax:
    content: protected override bool OnBubbleEvent (object source, EventArgs e);
    parameters:
    - id: source
      type: System.Object
      description: "이벤트의 소스입니다."
    - id: e
      type: System.EventArgs
      description: "이벤트 데이터입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>이벤트가 취소 되었습니다. 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.DataList.OnBubbleEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.OnCancelCommand(System.Web.UI.WebControls.DataListCommandEventArgs)
  id: OnCancelCommand(System.Web.UI.WebControls.DataListCommandEventArgs)
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: OnCancelCommand(DataListCommandEventArgs)
  nameWithType: DataList.OnCancelCommand(DataListCommandEventArgs)
  fullName: System.Web.UI.WebControls.DataList.OnCancelCommand(DataListCommandEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "발생 된 <xref href=&quot;System.Web.UI.WebControls.DataList.CancelCommand&quot;> </xref> 이벤트입니다. 이 이벤트에 대 한 사용자 지정 처리기를 제공할 수 있습니다."
  remarks: "OnCancelCommand 메서드를 사용 하 여에 대 한 사용자 지정 처리기를 제공 하는 <xref:System.Web.UI.WebControls.DataList.CancelCommand>이벤트.</xref:System.Web.UI.WebControls.DataList.CancelCommand>       <xref:System.Web.UI.WebControls.DataList.CancelCommand>이벤트가 발생할 때는 `Cancel` 항목에 대해 단추를 클릭는 <xref:System.Web.UI.WebControls.DataList>컨트롤.</xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.DataList.CancelCommand>       에 대 한 일반적인 처리기는 <xref:System.Web.UI.WebControls.DataList.CancelCommand>이벤트 설정의 <xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A>속성을 `-1` (항목을 선택 취소)를 다음 데이터를 다시 바인딩 횟수와 <xref:System.Web.UI.WebControls.DataList>컨트롤.</xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A> </xref:System.Web.UI.WebControls.DataList.CancelCommand>      > [!CAUTION] > 악의적인 클라이언트 스크립트가 포함 될 수 있습니다는 사용자 입력을 표시 하려면이 컨트롤을 사용할 수 있습니다. 응용 프로그램에 표시 하기 전에 실행 스크립트, SQL 문 또는 다른 코드에 대 한 클라이언트에서 보낸 모든 정보를 확인 합니다. 컨트롤에서 입력된 텍스트를 표시 하기 전에 사용자 입력을 확인 하려면 유효성 검사 컨트롤을 사용할 수 있습니다. ASP.NET은 사용자 입력에 있는 스크립트 블록 및 HTML에 있는 입력된 요청 유효성 검사 기능을 제공 합니다. 자세한 내용은 참조 [보안 표준 컨트롤](~/add/includes/ajax-current-ext-md.md), [하는 방법: 보호에 대 한 스크립트에 의해 악용 문자열을 HTML 인코딩 적용 하 여 웹 응용 프로그램에서](~/add/includes/ajax-current-ext-md.md), 및 [ASP.NET 웹 페이지에서 사용자 입력 유효성 검사](~/add/includes/ajax-current-ext-md.md)합니다.       이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [하는 방법: Web Forms 응용 프로그램에](~/add/includes/ajax-current-ext-md.md)합니다.       OnCancelCommand 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  example:
  - "The following code example demonstrates how to specify and code a handler for the <xref:System.Web.UI.WebControls.DataList.CancelCommand> event. It cancels any edits made to an item in the <xref:System.Web.UI.WebControls.DataList> control when the `Cancel` button is clicked.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[DataListEdit#1](~/add/codesnippet/csharp/f712037e-c950-4136-8daf-_1.aspx)]\n [!code-vb[DataListEdit#1](~/add/codesnippet/visualbasic/f712037e-c950-4136-8daf-_1.aspx)]  \n  \n [!code-vb[DataListEdit2#1](~/add/codesnippet/visualbasic/f712037e-c950-4136-8daf-_2.aspx)]\n [!code-cs[DataListEdit2#1](~/add/codesnippet/csharp/f712037e-c950-4136-8daf-_2.aspx)]"
  syntax:
    content: protected virtual void OnCancelCommand (System.Web.UI.WebControls.DataListCommandEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.DataListCommandEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.DataListCommandEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Web.UI.WebControls.DataList.OnCancelCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.OnDeleteCommand(System.Web.UI.WebControls.DataListCommandEventArgs)
  id: OnDeleteCommand(System.Web.UI.WebControls.DataListCommandEventArgs)
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: OnDeleteCommand(DataListCommandEventArgs)
  nameWithType: DataList.OnDeleteCommand(DataListCommandEventArgs)
  fullName: System.Web.UI.WebControls.DataList.OnDeleteCommand(DataListCommandEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "발생 된 <xref href=&quot;System.Web.UI.WebControls.DataList.DeleteCommand&quot;> </xref> 이벤트입니다. 이 이벤트에 대 한 사용자 지정 처리기를 제공할 수 있습니다."
  remarks: "OnDeleteCommand 메서드를 사용 하 여에 대 한 사용자 지정 처리기를 제공 하는 <xref:System.Web.UI.WebControls.DataList.DeleteCommand>이벤트.</xref:System.Web.UI.WebControls.DataList.DeleteCommand>       <xref:System.Web.UI.WebControls.DataList.DeleteCommand>이벤트가 발생할 때는 `Delete` 항목에 대해 단추를 클릭는 <xref:System.Web.UI.WebControls.DataList>컨트롤.</xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.DataList.DeleteCommand>       에 대 한 일반적인 처리기는 <xref:System.Web.UI.WebControls.DataList.DeleteCommand>이벤트 데이터 원본에서 선택한 항목을 제거 하 고 다음 데이터를 다시 바인딩 횟수는 <xref:System.Web.UI.WebControls.DataList>컨트롤.</xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.DataList.DeleteCommand>       이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [하는 방법: Web Forms 응용 프로그램에](~/add/includes/ajax-current-ext-md.md)합니다.       OnDeleteCommand 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  example:
  - "The following code example demonstrates how to specify and code a handler for the <xref:System.Web.UI.WebControls.DataList.DeleteCommand> event. It deletes the selected item in the <xref:System.Web.UI.WebControls.DataList> control when the `Delete` button is clicked.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[DataListEdit#1](~/add/codesnippet/csharp/b69fcef1-7d66-4606-9238-_1.aspx)]\n [!code-vb[DataListEdit#1](~/add/codesnippet/visualbasic/b69fcef1-7d66-4606-9238-_1.aspx)]  \n  \n [!code-vb[DataListEdit2#1](~/add/codesnippet/visualbasic/b69fcef1-7d66-4606-9238-_2.aspx)]\n [!code-cs[DataListEdit2#1](~/add/codesnippet/csharp/b69fcef1-7d66-4606-9238-_2.aspx)]"
  syntax:
    content: protected virtual void OnDeleteCommand (System.Web.UI.WebControls.DataListCommandEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.DataListCommandEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.DataListCommandEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Web.UI.WebControls.DataList.OnDeleteCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)
  id: OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: OnEditCommand(DataListCommandEventArgs)
  nameWithType: DataList.OnEditCommand(DataListCommandEventArgs)
  fullName: System.Web.UI.WebControls.DataList.OnEditCommand(DataListCommandEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "발생 된 <xref href=&quot;System.Web.UI.WebControls.DataList.EditCommand&quot;> </xref> 이벤트입니다. 이 이벤트에 대 한 사용자 지정 처리기를 제공할 수 있습니다."
  remarks: "OnEditCommand 메서드를 사용 하 여에 대 한 사용자 지정 처리기를 제공 하는 <xref:System.Web.UI.WebControls.DataList.EditCommand>이벤트.</xref:System.Web.UI.WebControls.DataList.EditCommand>       <xref:System.Web.UI.WebControls.DataList.EditCommand>이벤트가 발생할 때는 `Edit` 항목에 대해 단추를 클릭는 <xref:System.Web.UI.WebControls.DataList>컨트롤.</xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.DataList.EditCommand>       에 대 한 일반적인 처리기는 <xref:System.Web.UI.WebControls.DataList.EditCommand>이벤트 설정의 <xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A>속성 선택된 된 행을 다음 데이터를 다시 바인딩 횟수와 <xref:System.Web.UI.WebControls.DataList>컨트롤.</xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A> </xref:System.Web.UI.WebControls.DataList.EditCommand>      > [!CAUTION] > 악의적인 클라이언트 스크립트가 포함 될 수 있습니다는 사용자 입력을 표시 하려면이 컨트롤을 사용할 수 있습니다. 응용 프로그램에 표시 하기 전에 실행 스크립트, SQL 문 또는 다른 코드에 대 한 클라이언트에서 보낸 모든 정보를 확인 합니다. 컨트롤에서 입력된 텍스트를 표시 하기 전에 사용자 입력을 확인 하려면 유효성 검사 컨트롤을 사용할 수 있습니다. ASP.NET은 사용자 입력에 있는 스크립트 블록 및 HTML에 있는 입력된 요청 유효성 검사 기능을 제공 합니다. 자세한 내용은 참조 [보안 표준 컨트롤](~/add/includes/ajax-current-ext-md.md), [하는 방법: 보호에 대 한 스크립트에 의해 악용 문자열을 HTML 인코딩 적용 하 여 웹 응용 프로그램에서](~/add/includes/ajax-current-ext-md.md), 및 [ASP.NET 웹 페이지에서 사용자 입력 유효성 검사](~/add/includes/ajax-current-ext-md.md)합니다.       이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [하는 방법: Web Forms 응용 프로그램에](~/add/includes/ajax-current-ext-md.md)합니다.       OnEditCommand 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  example:
  - "The following code example demonstrates how to specify and code a handler for the <xref:System.Web.UI.WebControls.DataList.EditCommand> event. It allows you to edit the selected item in the <xref:System.Web.UI.WebControls.DataList> control when the `Edit` button is clicked.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[DataListEdit#1](~/add/codesnippet/csharp/99a47a87-5972-4aac-87aa-_1.aspx)]\n [!code-vb[DataListEdit#1](~/add/codesnippet/visualbasic/99a47a87-5972-4aac-87aa-_1.aspx)]  \n  \n [!code-vb[DataListEdit2#1](~/add/codesnippet/visualbasic/99a47a87-5972-4aac-87aa-_2.aspx)]\n [!code-cs[DataListEdit2#1](~/add/codesnippet/csharp/99a47a87-5972-4aac-87aa-_2.aspx)]"
  syntax:
    content: protected virtual void OnEditCommand (System.Web.UI.WebControls.DataListCommandEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.DataListCommandEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.DataListCommandEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Web.UI.WebControls.DataList.OnEditCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.OnInit(System.EventArgs)
  id: OnInit(System.EventArgs)
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: OnInit(EventArgs)
  nameWithType: DataList.OnInit(EventArgs)
  fullName: System.Web.UI.WebControls.DataList.OnInit(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "발생는 <xref href=&quot;System.Web.UI.Control.Init&quot;> </xref> 에 대 한 이벤트는 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref> 제어 합니다."
  remarks: "OnInit 메서드 알립니다는 <xref:System.Web.UI.WebControls.DataList>컨트롤을 만들고 인스턴스를 설정 하는 데 필요한 초기화 단계를 수행 합니다.</xref:System.Web.UI.WebControls.DataList>"
  syntax:
    content: protected override void OnInit (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.DataList.OnInit*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.OnItemCommand(System.Web.UI.WebControls.DataListCommandEventArgs)
  id: OnItemCommand(System.Web.UI.WebControls.DataListCommandEventArgs)
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: OnItemCommand(DataListCommandEventArgs)
  nameWithType: DataList.OnItemCommand(DataListCommandEventArgs)
  fullName: System.Web.UI.WebControls.DataList.OnItemCommand(DataListCommandEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "발생 된 <xref href=&quot;System.Web.UI.WebControls.DataList.ItemCommand&quot;> </xref> 이벤트입니다. 이 이벤트에 대 한 사용자 지정 처리기를 제공할 수 있습니다."
  remarks: "OnItemCommand 메서드를 사용 하 여에 대 한 사용자 지정 처리기를 제공 하는 <xref:System.Web.UI.WebControls.DataList.ItemCommand>이벤트.</xref:System.Web.UI.WebControls.DataList.ItemCommand>       <xref:System.Web.UI.WebControls.DataList.ItemCommand>에 있는 단추를 클릭할 때 이벤트가 발생는 <xref:System.Web.UI.WebControls.DataList>제어 하 고를 사용자 지정 단추 컨트롤이 있는 경우에 주로 사용 됩니다 `CommandName` 같은 값 `Add`에 <xref:System.Web.UI.WebControls.DataList>컨트롤.</xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.DataList.ItemCommand>       이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [하는 방법: Web Forms 응용 프로그램에](~/add/includes/ajax-current-ext-md.md)합니다.       OnItemCommand 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  example:
  - "The following code example demonstrates how to specify and code a handler for the <xref:System.Web.UI.WebControls.DataList.ItemCommand> event to select an item from the <xref:System.Web.UI.WebControls.DataList> control.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[DataListItemCommand#1](~/add/codesnippet/visualbasic/346e0b5a-81b1-46ba-abc9-_1.aspx)]\n [!code-cs[DataListItemCommand#1](~/add/codesnippet/csharp/346e0b5a-81b1-46ba-abc9-_1.aspx)]  \n  \n [!code-vb[DataListItemCommand2#1](~/add/codesnippet/visualbasic/346e0b5a-81b1-46ba-abc9-_2.aspx)]\n [!code-cs[DataListItemCommand2#1](~/add/codesnippet/csharp/346e0b5a-81b1-46ba-abc9-_2.aspx)]"
  syntax:
    content: protected virtual void OnItemCommand (System.Web.UI.WebControls.DataListCommandEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.DataListCommandEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.DataListCommandEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Web.UI.WebControls.DataList.OnItemCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.OnItemCreated(System.Web.UI.WebControls.DataListItemEventArgs)
  id: OnItemCreated(System.Web.UI.WebControls.DataListItemEventArgs)
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: OnItemCreated(DataListItemEventArgs)
  nameWithType: DataList.OnItemCreated(DataListItemEventArgs)
  fullName: System.Web.UI.WebControls.DataList.OnItemCreated(DataListItemEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "발생 된 <xref href=&quot;System.Web.UI.WebControls.DataList.ItemCreated&quot;> </xref> 이벤트입니다. 이 이벤트에 대 한 사용자 지정 처리기를 제공할 수 있습니다."
  remarks: "OnItemCreated 메서드를 사용 하 여에 대 한 사용자 지정 처리기를 제공 하는 <xref:System.Web.UI.WebControls.DataList.ItemCreated>이벤트.</xref:System.Web.UI.WebControls.DataList.ItemCreated>       <xref:System.Web.UI.WebControls.DataList.ItemCreated>이벤트는 항목에는 <xref:System.Web.UI.WebControls.DataList>컨트롤이 만들어지고, 데이터가 컨트롤에 바인딩되는 왕복 중 및 시간에.</xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.DataList.ItemCreated>       <xref:System.Web.UI.WebControls.DataList.ItemCreated>이벤트는 일반적으로 내용과에 있는 행의 모양을 제어 하는 데 사용 된 <xref:System.Web.UI.WebControls.DataList>컨트롤.</xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.DataList.ItemCreated>       이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [하는 방법: Web Forms 응용 프로그램에](~/add/includes/ajax-current-ext-md.md)합니다.       OnItemCreated 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  example:
  - "The following code example demonstrates how to specify and code a handler for the <xref:System.Web.UI.WebControls.DataList.ItemCreated> event to display the order in which items in the <xref:System.Web.UI.WebControls.DataList> control are created.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[DataListItemCreated#1](~/add/codesnippet/visualbasic/daa572be-0a5b-4a9b-a0e3-_1.aspx)]\n [!code-cs[DataListItemCreated#1](~/add/codesnippet/csharp/daa572be-0a5b-4a9b-a0e3-_1.aspx)]  \n  \n [!code-cs[DataListItemCreated2#1](~/add/codesnippet/csharp/daa572be-0a5b-4a9b-a0e3-_2.aspx)]\n [!code-vb[DataListItemCreated2#1](~/add/codesnippet/visualbasic/daa572be-0a5b-4a9b-a0e3-_2.aspx)]"
  syntax:
    content: protected virtual void OnItemCreated (System.Web.UI.WebControls.DataListItemEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.DataListItemEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.DataListItemEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Web.UI.WebControls.DataList.OnItemCreated*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.OnItemDataBound(System.Web.UI.WebControls.DataListItemEventArgs)
  id: OnItemDataBound(System.Web.UI.WebControls.DataListItemEventArgs)
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: OnItemDataBound(DataListItemEventArgs)
  nameWithType: DataList.OnItemDataBound(DataListItemEventArgs)
  fullName: System.Web.UI.WebControls.DataList.OnItemDataBound(DataListItemEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "발생 된 <xref href=&quot;System.Web.UI.WebControls.DataList.ItemDataBound&quot;> </xref> 이벤트입니다. 이 이벤트에 대 한 사용자 지정 처리기를 제공할 수 있습니다."
  remarks: "OnItemDataBound 메서드를 사용 하 여에 대 한 사용자 지정 처리기를 제공 하는 <xref:System.Web.UI.WebControls.DataList.ItemDataBound>이벤트.</xref:System.Web.UI.WebControls.DataList.ItemDataBound>       <xref:System.Web.UI.WebControls.DataList.ItemDataBound>항목 데이터에 바인딩된 후에 이벤트가 발생 된 <xref:System.Web.UI.WebControls.DataList>컨트롤.</xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.DataList.ItemDataBound> 이 이벤트는 클라이언트에 표시 되기 전에 데이터 항목에 액세스할 수 있는 마지막 기회를 제공 합니다. 이 이벤트는 발생 한 후에 데이터 항목을 사용할 수 없습니다.       이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [하는 방법: Web Forms 응용 프로그램에](~/add/includes/ajax-current-ext-md.md)합니다.       OnItemDataBound 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  example:
  - "The following code example demonstrates how to specify and code a handler for the <xref:System.Web.UI.WebControls.DataList.ItemDataBound> event to display the order in which items in the <xref:System.Web.UI.WebControls.DataList> control are bound to the control.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[DataListItemDataBound#1](~/add/codesnippet/csharp/d0f378ec-24e7-443f-8ae5-_1.aspx)]\n [!code-vb[DataListItemDataBound#1](~/add/codesnippet/visualbasic/d0f378ec-24e7-443f-8ae5-_1.aspx)]  \n  \n [!code-vb[DataListItemDataBound2#1](~/add/codesnippet/visualbasic/d0f378ec-24e7-443f-8ae5-_2.aspx)]\n [!code-cs[DataListItemDataBound2#1](~/add/codesnippet/csharp/d0f378ec-24e7-443f-8ae5-_2.aspx)]"
  syntax:
    content: protected virtual void OnItemDataBound (System.Web.UI.WebControls.DataListItemEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.DataListItemEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.DataListItemEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Web.UI.WebControls.DataList.OnItemDataBound*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.OnUpdateCommand(System.Web.UI.WebControls.DataListCommandEventArgs)
  id: OnUpdateCommand(System.Web.UI.WebControls.DataListCommandEventArgs)
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: OnUpdateCommand(DataListCommandEventArgs)
  nameWithType: DataList.OnUpdateCommand(DataListCommandEventArgs)
  fullName: System.Web.UI.WebControls.DataList.OnUpdateCommand(DataListCommandEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "발생 된 <xref href=&quot;System.Web.UI.WebControls.DataList.UpdateCommand&quot;> </xref> 이벤트입니다. 이 이벤트에 대 한 사용자 지정 처리기를 제공할 수 있습니다."
  remarks: "OnUpdateCommand 메서드를 사용 하 여에 대 한 사용자 지정 처리기를 제공 하는 <xref:System.Web.UI.WebControls.DataList.UpdateCommand>이벤트.</xref:System.Web.UI.WebControls.DataList.UpdateCommand>       <xref:System.Web.UI.WebControls.DataList.UpdateCommand>이벤트가 발생할 때는 `Update` 항목을 클릭할 단추.</xref:System.Web.UI.WebControls.DataList.UpdateCommand>       에 대 한 일반적인 처리기는 <xref:System.Web.UI.WebControls.DataList.UpdateCommand>집합 데이터를 업데이트 하는 이벤트는 <xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A>속성을 `-1` (항목의 선택을 취소) 하려면, 다음 데이터를 다시 바인딩 횟수와 <xref:System.Web.UI.WebControls.DataList>컨트롤.</xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A> </xref:System.Web.UI.WebControls.DataList.UpdateCommand>      > [!CAUTION] > 악의적인 클라이언트 스크립트가 포함 될 수 있습니다는 사용자 입력을 표시 하려면이 컨트롤을 사용할 수 있습니다. 응용 프로그램에 표시 하기 전에 실행 스크립트, SQL 문 또는 다른 코드에 대 한 클라이언트에서 보낸 모든 정보를 확인 합니다. 컨트롤에서 입력된 텍스트를 표시 하기 전에 사용자 입력을 확인 하려면 유효성 검사 컨트롤을 사용할 수 있습니다. ASP.NET은 사용자 입력에 있는 스크립트 블록 및 HTML에 있는 입력된 요청 유효성 검사 기능을 제공 합니다. 자세한 내용은 참조 [보안 표준 컨트롤](~/add/includes/ajax-current-ext-md.md), [하는 방법: 보호에 대 한 스크립트에 의해 악용 문자열을 HTML 인코딩 적용 하 여 웹 응용 프로그램에서](~/add/includes/ajax-current-ext-md.md), 및 [ASP.NET 웹 페이지에서 사용자 입력 유효성 검사](~/add/includes/ajax-current-ext-md.md)합니다.       이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [하는 방법: Web Forms 응용 프로그램에](~/add/includes/ajax-current-ext-md.md)합니다.       OnUpdateCommand 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  example:
  - "The following code example demonstrates how to specify and code a handler for the <xref:System.Web.UI.WebControls.DataList.UpdateCommand> event. It allows you to update the selected item in the <xref:System.Web.UI.WebControls.DataList> control with the new values entered by the user when the `Update` button is clicked.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[DataListEdit#1](~/add/codesnippet/csharp/0d1a8fde-7046-4f78-b346-_1.aspx)]\n [!code-vb[DataListEdit#1](~/add/codesnippet/visualbasic/0d1a8fde-7046-4f78-b346-_1.aspx)]  \n  \n [!code-vb[DataListEdit2#1](~/add/codesnippet/visualbasic/0d1a8fde-7046-4f78-b346-_2.aspx)]\n [!code-cs[DataListEdit2#1](~/add/codesnippet/csharp/0d1a8fde-7046-4f78-b346-_2.aspx)]"
  syntax:
    content: protected virtual void OnUpdateCommand (System.Web.UI.WebControls.DataListCommandEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.DataListCommandEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.DataListItemEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Web.UI.WebControls.DataList.OnUpdateCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.PrepareControlHierarchy
  id: PrepareControlHierarchy
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: PrepareControlHierarchy()
  nameWithType: DataList.PrepareControlHierarchy()
  fullName: System.Web.UI.WebControls.DataList.PrepareControlHierarchy()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "으로 렌더링 하기 위한 컨트롤 계층 구조를 준비는 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref> 제어 합니다."
  remarks: "사용자 지정 컨트롤을 파생할 때 PrepareControlHierarchy 메서드 주로 컨트롤 개발자가 사용 되는 <xref:System.Web.UI.WebControls.DataList>컨트롤.</xref:System.Web.UI.WebControls.DataList>       PrepareControlHierarchy 준비 컨트롤 계층 구조 및 집합 스타일 포함에 대 한 <xref:System.Web.UI.WebControls.DataListItem>자식 컨트롤 렌더링 되기 전에 제어.</xref:System.Web.UI.WebControls.DataListItem>"
  syntax:
    content: protected override void PrepareControlHierarchy ();
    parameters: []
  overload: System.Web.UI.WebControls.DataList.PrepareControlHierarchy*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.RenderContents(System.Web.UI.HtmlTextWriter)
  id: RenderContents(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: RenderContents(HtmlTextWriter)
  nameWithType: DataList.RenderContents(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.DataList.RenderContents(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "목록 항목에 렌더링 된 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref> 제어 합니다."
  remarks: "사용자 지정 컨트롤을 파생할 때 RenderContents 메서드 주로 컨트롤 개발자가 사용 되는 <xref:System.Web.UI.WebControls.DataList>컨트롤.</xref:System.Web.UI.WebControls.DataList>       RenderContents 메서드 내부의 내용을 렌더링는 <xref:System.Web.UI.WebControls.DataList>컨트롤을 포함 하 여 포함 된 <xref:System.Web.UI.WebControls.DataListItem>컨트롤.</xref:System.Web.UI.WebControls.DataListItem> </xref:System.Web.UI.WebControls.DataList>"
  example:
  - "The following code example demonstrates how to override the RenderContents method in a custom server control so that some text precedes the <xref:System.Web.UI.WebControls.DataList> object.  \n  \n [!code-cs[CustomDataListRenderContents#1](~/add/codesnippet/csharp/723e0bf7-1579-4578-bf9d-_1.aspx)]\n [!code-vb[CustomDataListRenderContents#1](~/add/codesnippet/visualbasic/723e0bf7-1579-4578-bf9d-_1.aspx)]  \n[!code-cs[CustomDataListRenderContents#2](~/add/codesnippet/csharp/723e0bf7-1579-4578-bf9d-_2.cs)]\n[!code-vb[CustomDataListRenderContents#2](~/add/codesnippet/visualbasic/723e0bf7-1579-4578-bf9d-_2.vb)]"
  syntax:
    content: protected override void RenderContents (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "A <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> HTML 클라이언트에서 콘텐츠를 렌더링 하기 위한 출력 스트림을 나타내는입니다."
  overload: System.Web.UI.WebControls.DataList.RenderContents*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.RepeatColumns
  id: RepeatColumns
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: RepeatColumns
  nameWithType: DataList.RepeatColumns
  fullName: System.Web.UI.WebControls.DataList.RepeatColumns
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "에 표시할 열의 수를 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref> 제어 합니다."
  remarks: "에 항목을 표시 하는 열 개수를 지정 하려면이 속성을 사용 하 여 <xref:System.Web.UI.WebControls.DataList>컨트롤.</xref:System.Web.UI.WebControls.DataList> 예를 들어,이 속성을 설정 하는 경우 `5`, <xref:System.Web.UI.WebControls.DataList>컨트롤 다섯 개의 열에 해당 항목을 표시 합니다.</xref:System.Web.UI.WebControls.DataList>      > [!NOTE] >이 속성을 설정 하는 경우 `0`, <xref:System.Web.UI.WebControls.DataList>단일 행 이나의 값에 따라 열에 해당 항목을 표시 하는 컨트롤은 <xref:System.Web.UI.WebControls.DataList.RepeatDirection%2A>속성.</xref:System.Web.UI.WebControls.DataList.RepeatDirection%2A> </xref:System.Web.UI.WebControls.DataList> 경우는 <xref:System.Web.UI.WebControls.DataList.RepeatDirection%2A>속성이 `RepeatDirection.Horizontal`, 단일 행에서에 항목이 표시 됩니다.</xref:System.Web.UI.WebControls.DataList.RepeatDirection%2A> 경우는 <xref:System.Web.UI.WebControls.DataList.RepeatDirection%2A>속성이 `RepeatDirection.Vertical`, 항목을 단일 열에 표시 됩니다.</xref:System.Web.UI.WebControls.DataList.RepeatDirection%2A>"
  example:
  - "The following code example demonstrates how to use the RepeatColumns property to specify the number of columns to display in the <xref:System.Web.UI.WebControls.DataList> control.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[DataListLayout#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_722_1.aspx)]\n [!code-cs[DataListLayout#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_722_1.aspx)]"
  syntax:
    content: public virtual int RepeatColumns { get; set; }
    return:
      type: System.Int32
      description: "에 표시할 열의 수는 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref> 제어 합니다. 기본값은 <xref uid=&quot;langword_csharp_0&quot; name=&quot;0&quot; href=&quot;&quot;> </xref>, 않는다는 의미에 있는 항목의 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref> 컨트롤은 단일 행 이나의 값에 따라 열에 표시 됩니다는 <xref:System.Web.UI.WebControls.DataList.RepeatDirection*>속성.</xref:System.Web.UI.WebControls.DataList.RepeatDirection*>"
  overload: System.Web.UI.WebControls.DataList.RepeatColumns*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "지정한 열 수에 음수 값입니다."
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.RepeatDirection
  id: RepeatDirection
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: RepeatDirection
  nameWithType: DataList.RepeatDirection
  fullName: System.Web.UI.WebControls.DataList.RepeatDirection
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "가져오거나 여부는 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref> 컨트롤이 가로 또는 세로로 표시 합니다."
  remarks: "RepeatDirection 속성을 사용 하 여 표시 되는 방향을 지정 하는 <xref:System.Web.UI.WebControls.DataList>컨트롤.</xref:System.Web.UI.WebControls.DataList>      > [!NOTE] > 표시 된 열의 수는 항상 의해 결정 되는 <xref:System.Web.UI.WebControls.DataList.RepeatColumns%2A>속성.</xref:System.Web.UI.WebControls.DataList.RepeatColumns%2A>       이 속성은로 설정 하는 경우 `RepeatDirection.Vertical`, 목록의 항목은 모든 항목이 렌더링 될 때까지 왼쪽에서 오른쪽으로 다음 위쪽에서 아래쪽으로 로드 된 열에 표시 됩니다. 예를 들어 경우는 <xref:System.Web.UI.WebControls.DataList.RepeatColumns%2A>속성이 `3`, 항목에는 <xref:System.Web.UI.WebControls.DataList>제어는 다음 표와 같이&3; 개의 열에 표시 됩니다.</xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.DataList.RepeatColumns%2A>      ||||   |-|-|-|   |&1; |&4; |&7; |   |&2; |&5; |&8; |   |&3; |&6; |&9; |       이 속성은로 설정 하는 경우 `RepeatDirection.Horizontal`다음 위쪽에서 아래쪽으로 모든 항목을 렌더링할 때까지, 목록의 항목은 왼쪽에서 오른쪽으로 로드 되는 행에 표시 됩니다. 예를 들어 경우는 <xref:System.Web.UI.WebControls.DataList.RepeatColumns%2A>속성이로 설정 되어 `3`의 항목은 <xref:System.Web.UI.WebControls.DataList>제어는 다음 테이블에 있는 대로 각 세 항목의 행에 표시 됩니다.</xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.DataList.RepeatColumns%2A>      ||||   |-|-|-|   |1|2|3|   |4|5|6|   |7|8|9|"
  example:
  - "The following code example demonstrates how to use the RepeatDirection property to specify the direction in which the <xref:System.Web.UI.WebControls.DataList> control is displayed.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[DataListLayout#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_42_1.aspx)]\n [!code-cs[DataListLayout#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_42_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.RepeatDirection RepeatDirection { get; set; }
    return:
      type: System.Web.UI.WebControls.RepeatDirection
      description: "중 하나는 <xref href=&quot;System.Web.UI.WebControls.RepeatDirection&quot;> </xref> 값입니다. 기본값은 <xref uid=&quot;langword_csharp_Vertical&quot; name=&quot;Vertical&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.DataList.RepeatDirection*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "지정한 값 중 하나이 고 <xref href=&quot;System.Web.UI.WebControls.RepeatDirection&quot;> </xref> 값입니다."
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.RepeatLayout
  id: RepeatLayout
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: RepeatLayout
  nameWithType: DataList.RepeatLayout
  fullName: System.Web.UI.WebControls.DataList.RepeatLayout
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "테이블 또는 흐름 레이아웃에서 컨트롤을 표시할지 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "RepeatLayout 속성을 사용 하 여 지정할 수 있는지 여부를 항목에는 <xref:System.Web.UI.WebControls.DataList>제어는 테이블에 표시 됩니다.</xref:System.Web.UI.WebControls.DataList> <xref:System.Web.UI.WebControls.RepeatLayout>값 <xref:System.Web.UI.WebControls.DataList>컨트롤은 <xref:System.Web.UI.WebControls.RepeatLayout>및 <xref:System.Web.UI.WebControls.RepeatLayout>.</xref:System.Web.UI.WebControls.RepeatLayout> </xref:System.Web.UI.WebControls.RepeatLayout> </xref:System.Web.UI.WebControls.DataList> 에서 지 원하는</xref:System.Web.UI.WebControls.RepeatLayout> 지 원하는 유일한       이 속성은로 설정 하는 경우 `RepeatLayout.Table`, 목록에 항목 테이블에 표시 됩니다. 이 속성은로 설정 하는 경우 `RepeatLayout.Flow`, 목록에 항목 테이블 구조 없이 표시 됩니다.       경우는 <xref:System.Web.UI.WebControls.DataList>컨트롤이 테이블에 표시 되는지, 사용할 수 있습니다는 <xref:System.Web.UI.WebControls.DataList.GridLines%2A>속성을 통해 모눈선 스타일을 지정 합니다.</xref:System.Web.UI.WebControls.DataList.GridLines%2A> </xref:System.Web.UI.WebControls.DataList>"
  example:
  - "The following code example demonstrates how to use the RepeatLayout property to specify the layout style of the <xref:System.Web.UI.WebControls.DataList> control.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[DataListLayout#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_586_1.aspx)]\n [!code-cs[DataListLayout#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_586_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.RepeatLayout RepeatLayout { get; set; }
    return:
      type: System.Web.UI.WebControls.RepeatLayout
      description: "컨트롤이 선형 레이아웃 또는 테이블에 표시 되는지 여부를 지정 하는 값입니다."
  overload: System.Web.UI.WebControls.DataList.RepeatLayout*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "지정한 값이 지원 되는 하나 <xref href=&quot;System.Web.UI.WebControls.RepeatLayout&quot;> </xref> 값입니다."
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.SaveViewState
  id: SaveViewState
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: SaveViewState()
  nameWithType: DataList.SaveViewState()
  fullName: System.Web.UI.WebControls.DataList.SaveViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "컨트롤에 변경 내용을 뷰 저장 상태 페이지가 서버에 다시 게시 된 이후로 합니다."
  remarks: "SaveViewState 메서드는 주로 컨트롤 개발자가 사용 됩니다.       뷰 상태는 서버 컨트롤의 속성 값의 누적 합니다. 이러한 값이 서버 컨트롤의 <xref:System.Web.UI.Control.ViewState%2A>속성을 <xref:System.Web.UI.StateBag>클래스</xref:System.Web.UI.StateBag> 의 인스턴스인</xref:System.Web.UI.Control.ViewState%2A> 에 자동으로 포함 됩니다. <xref:System.Web.UI.Control.ViewState%2A>속성의 값은 다음 서버 컨트롤의 수명 주기 단계에서 상태 저장 후 문자열 개체에 유지 됩니다.</xref:System.Web.UI.Control.ViewState%2A> 자세한 내용은 참조 [ASP.NET 페이지 수명 주기 개요](~/add/includes/ajax-current-ext-md.md)합니다.       뷰 상태가 저장 되는 경우이 문자열 개체 변수는 숨겨진된 HTML input 요소에 저장 된 클라이언트에 반환 됩니다. 사용자 지정 서버 컨트롤을 만들 때 SaveViewState 메서드를 재정의 하 여 효율성을 높일 수 있습니다는 <xref:System.Web.UI.Control.ViewState%2A>서버 컨트롤에 대 한 속성.</xref:System.Web.UI.Control.ViewState%2A> 자세한 내용은 참조 [사용자 지정 ASP.NET 서버 컨트롤 개발](~/add/includes/ajax-current-ext-md.md) 및 [ASP.NET 상태 관리 개요](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: protected override object SaveViewState ();
    parameters: []
    return:
      type: System.Object
      description: "변경 내용을 포함 하는 개체는 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref> 뷰 상태입니다."
  overload: System.Web.UI.WebControls.DataList.SaveViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.SelectCommandName
  id: SelectCommandName
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: SelectCommandName
  nameWithType: DataList.SelectCommandName
  fullName: System.Web.UI.WebControls.DataList.SelectCommandName
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "나타냅니다는 <xref uid=&quot;langword_csharp_Select&quot; name=&quot;Select&quot; href=&quot;&quot;> </xref> 명령 이름입니다. 이 필드는 읽기 전용입니다."
  remarks: "나타내는 SelectCommandName 필드를 사용 하 여는 `Select` 명령 이름입니다."
  syntax:
    content: public const string SelectCommandName;
    return:
      type: System.String
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.SelectedIndex
  id: SelectedIndex
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: SelectedIndex
  nameWithType: DataList.SelectedIndex
  fullName: System.Web.UI.WebControls.DataList.SelectedIndex
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "선택한 항목의 인덱스를 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref> 제어 합니다."
  remarks: "SelectedIndex 속성을 사용 하 여 프로그래밍 방식으로 선택한 항목에 지정 된 <xref:System.Web.UI.WebControls.DataList>컨트롤.</xref:System.Web.UI.WebControls.DataList> 또한 선택한 항목의 인덱스를 확인 하려면이 속성을 사용할 수 있습니다.      > [!NOTE] > The SelectedIndex 속성은&0;부터 시작 합니다.       항목의 선택을 취소 하려면 SelectedIndex 속성을 설정 `-1`합니다.       SelectedIndex 속성은 컨트롤 상태에 저장 됩니다."
  example:
  - "The following code example demonstrates how to use the SelectedIndex property to specify the selected item in the <xref:System.Web.UI.WebControls.DataList> control.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[DataListItemCommand#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1039_1.aspx)]\n [!code-cs[DataListItemCommand#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1039_1.aspx)]"
  syntax:
    content: public virtual int SelectedIndex { get; set; }
    return:
      type: System.Int32
      description: "선택한 항목의 인덱스는 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref> 제어 합니다."
  overload: System.Web.UI.WebControls.DataList.SelectedIndex*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "지정 된 값이 보다 작은 <xref uid=&quot;langword_csharp_-1&quot; name=&quot;-1&quot; href=&quot;&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.SelectedItem
  id: SelectedItem
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: SelectedItem
  nameWithType: DataList.SelectedItem
  fullName: System.Web.UI.WebControls.DataList.SelectedItem
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "선택한 항목을 가져옵니다는 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref> 제어 합니다."
  remarks: "SelectedItem 속성을 사용 하 여 가져오려는 <xref:System.Web.UI.WebControls.DataListItem>에서 선택한 항목을 나타내는 개체는 <xref:System.Web.UI.WebControls.DataList>컨트롤.</xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.DataListItem> 그런 다음이 개체 선택한 항목의 속성에 액세스 데 사용할 수 있습니다."
  example:
  - "The following code example demonstrates how to use the SelectedItem property to display the contents of the selected item in the <xref:System.Web.UI.WebControls.DataList> control.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[Classic DataList.SelectedItem Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_681_1.aspx)]\n [!code-vb[Classic DataList.SelectedItem Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_681_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.DataListItem SelectedItem { get; }
    return:
      type: System.Web.UI.WebControls.DataListItem
      description: "A <xref href=&quot;System.Web.UI.WebControls.DataListItem&quot;> </xref> 에서 선택한 항목을 나타내는 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref> 제어 합니다."
  overload: System.Web.UI.WebControls.DataList.SelectedItem*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.SelectedItemStyle
  id: SelectedItemStyle
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: SelectedItemStyle
  nameWithType: DataList.SelectedItemStyle
  fullName: System.Web.UI.WebControls.DataList.SelectedItemStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "선택한 항목에 대 한 스타일 속성을 가져옵니다는 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref> 제어 합니다."
  remarks: "이 속성을 사용 하 여 선택한 항목에 대 한 사용자 지정 스타일을 제공 하는 <xref:System.Web.UI.WebControls.DataList>컨트롤.</xref:System.Web.UI.WebControls.DataList> 조정할 수 있는 일반 스타일 특성 전경색, 배경색, 글꼴 및 셀 내용 맞춤을 포함 합니다. 모양을 향상 시킬 다른 스타일을 사용 하 여 <xref:System.Web.UI.WebControls.DataList>컨트롤.</xref:System.Web.UI.WebControls.DataList>       항목의 스타일 속성은 <xref:System.Web.UI.WebControls.DataList>컨트롤 계층을 통해 다른 항목을 하나 style 속성에서 상속 됩니다.</xref:System.Web.UI.WebControls.DataList> 계층 구조에서 낮게 설정할 항목 스타일 속성은 계층 구조의 상위 항목 스타일 속성에 의해 상속 됩니다. 예를 들어 빨강 글꼴을 지정 하는 경우는 <xref:System.Web.UI.WebControls.DataList.ItemStyle%2A>속성에서 다른 모든 항목 스타일 속성은 <xref:System.Web.UI.WebControls.DataList>컨트롤에는 빨간색 글꼴로.</xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> 이 옵션을 사용 하면 단일 항목 style 속성을 설정 하 여 컨트롤에 대 한 공통 된 모양을 지정할 수 있습니다. 스타일 속성을 설정 하 여 계층에 있는 항목 스타일 속성에 대 한 상속 된 스타일 설정을 재정의할 수 있습니다. 예를 들어, 파랑 글꼴을 지정할 수 있습니다는 <xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A>속성을 재정의에 지정 된 예는 <xref:System.Web.UI.WebControls.DataList.ItemStyle%2A>속성.</xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> </xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A> 다음 표에서 내림차순으로 최고 계층 구조 순서로 나열합니다.      | 우선 순위 | Style 속성 |   |----------------|--------------------|   |&1; | <xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A>|   |&2; | SelectedItemStyle |   |&3; | <xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A>|   |&4; | <xref:System.Web.UI.WebControls.DataList.ItemStyle%2A>|   |&5; | <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>|       선택한 항목에 대 한 사용자 지정 스타일을 지정 하려면는 `<SelectedItemStyle>` 여는 태그와 닫는 태그 사이 <xref:System.Web.UI.WebControls.DataList>컨트롤.</xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> </xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> </xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A> </xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A> 다음을 표시 하 여 스타일 특성 `<SelectedItemStyle>` 태그입니다."
  example:
  - "The following code example demonstrates how to use the SelectedItemStyle property to specify a custom background color for the selected item in the <xref:System.Web.UI.WebControls.DataList> control.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[DataListItemCommand#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_571_1.aspx)]\n [!code-cs[DataListItemCommand#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_571_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.TableItemStyle SelectedItemStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "A <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref> 개체에서 선택한 항목에 대 한 스타일 속성을 포함 하는 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref> 제어 합니다. 기본값은 빈 <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref> 개체입니다."
  overload: System.Web.UI.WebControls.DataList.SelectedItemStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.SelectedItemTemplate
  id: SelectedItemTemplate
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: SelectedItemTemplate
  nameWithType: DataList.SelectedItemTemplate
  fullName: System.Web.UI.WebControls.DataList.SelectedItemTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "선택한 항목에 대 한 서식 파일을 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref> 제어 합니다."
  remarks: "SelectedItemTemplate 속성을 사용 하 여 선택한 항목의 내용을 제어 합니다. 선택한 항목의 표시에 의해 제어 되는 <xref:System.Web.UI.WebControls.DataList.SelectedItemStyle%2A>속성.</xref:System.Web.UI.WebControls.DataList.SelectedItemStyle%2A>       선택한 항목에 대 한 서식 파일을 지정 하려면는 `<SelectedItemTemplate>` 여는 태그와 닫는 태그 사이 <xref:System.Web.UI.WebControls.DataList>컨트롤.</xref:System.Web.UI.WebControls.DataList> 그런 다음 열기 및 닫기 사이의 서식 파일의 내용을 나열 수 `<SelectedItemTemplate>` 태그입니다.      > [!CAUTION] > 악의적인 클라이언트 스크립트가 포함 될 수 있습니다는 사용자 입력을 표시 하려면이 컨트롤을 사용할 수 있습니다. 응용 프로그램에 표시 하기 전에 실행 스크립트, SQL 문 또는 다른 코드에 대 한 클라이언트에서 보낸 모든 정보를 확인 합니다. 컨트롤에서 입력된 텍스트를 표시 하기 전에 사용자 입력을 확인 하려면 유효성 검사 컨트롤을 사용할 수 있습니다. ASP.NET은 사용자 입력에 있는 스크립트 블록 및 HTML에 있는 입력된 요청 유효성 검사 기능을 제공 합니다. 자세한 내용은 참조 [보안 표준 컨트롤](~/add/includes/ajax-current-ext-md.md), [하는 방법: 보호에 대 한 스크립트에 의해 악용 문자열을 HTML 인코딩 적용 하 여 웹 응용 프로그램에서](~/add/includes/ajax-current-ext-md.md), 및 [ASP.NET 웹 페이지에서 사용자 입력 유효성 검사](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example demonstrates how to use the SelectedItemTemplate property to control the contents of the selected item in the <xref:System.Web.UI.WebControls.DataList> control.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[DataListItemCommand#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_845_1.aspx)]\n [!code-cs[DataListItemCommand#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_845_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate SelectedItemTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "A <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref> 에서 선택한 항목에 대 한 서식 파일을 포함 하는 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref> 제어 합니다. 기본값은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.DataList.SelectedItemTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.SelectedValue
  id: SelectedValue
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: SelectedValue
  nameWithType: DataList.SelectedValue
  fullName: System.Web.UI.WebControls.DataList.SelectedValue
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "선택한 데이터 목록 항목에 대 한 키 필드의 값을 가져옵니다."
  syntax:
    content: public object SelectedValue { get; }
    return:
      type: System.Object
      description: "선택한 데이터 목록 항목에 대 한 키 필드 값입니다. 기본값은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, 현재 선택 되어 데이터 목록 항목이 없음을 나타냅니다."
  overload: System.Web.UI.WebControls.DataList.SelectedValue*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.Web.UI.WebControls.BaseDataList.DataKeyField*>속성이 설정 되지 않았습니다.</xref:System.Web.UI.WebControls.BaseDataList.DataKeyField*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.SeparatorStyle
  id: SeparatorStyle
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: SeparatorStyle
  nameWithType: DataList.SeparatorStyle
  fullName: System.Web.UI.WebControls.DataList.SeparatorStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "각 항목 사이 구분선의 스타일 속성을 가져옵니다는 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref> 제어 합니다."
  remarks: "SeparatorStyle 속성을 사용 하 여 각 항목 사이 구분 기호에 대 한 사용자 지정 스타일을 제공 하는 <xref:System.Web.UI.WebControls.DataList>컨트롤.</xref:System.Web.UI.WebControls.DataList> 구분 기호를 사용 하면의 각 항목 사이 사용자 지정 내용 가진 요소를 배치할 수 있습니다는 <xref:System.Web.UI.WebControls.DataList>컨트롤.</xref:System.Web.UI.WebControls.DataList> 조정할 수 있는 일반 스타일 특성 전경색, 배경색, 글꼴 및 셀 내용 맞춤을 포함 합니다. 모양을 향상 시킬 다른 스타일을 사용 하 여 <xref:System.Web.UI.WebControls.DataList>컨트롤.</xref:System.Web.UI.WebControls.DataList>       구분 기호에 대 한 사용자 지정 스타일을 지정 하려면는 `<SeparatorStyle>` 여는 태그와 닫는 태그 사이 <xref:System.Web.UI.WebControls.DataList>컨트롤.</xref:System.Web.UI.WebControls.DataList> 다음을 표시 하 여 스타일 특성 `<SeparatorStyle>` 태그입니다."
  example:
  - "The following code example demonstrates how to use the SeparatorStyle property to specify a custom background color for the separator between each item in the <xref:System.Web.UI.WebControls.DataList> control.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[DataListSeparatorStyle#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1134_1.aspx)]\n [!code-vb[DataListSeparatorStyle#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1134_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.TableItemStyle SeparatorStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "A <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref> 개체의 각 항목 사이 구분선의 스타일 속성을 포함 하는 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref> 제어 합니다. 기본값은 빈 <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref> 개체입니다."
  overload: System.Web.UI.WebControls.DataList.SeparatorStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.SeparatorTemplate
  id: SeparatorTemplate
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: SeparatorTemplate
  nameWithType: DataList.SeparatorTemplate
  fullName: System.Web.UI.WebControls.DataList.SeparatorTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "에 있는 항목 사이 구분 기호에 대 한 템플릿을 가져오거나는 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref> 제어 합니다."
  remarks: "SeparatorTemplate 속성을 사용 하 여의 항목 간의 구분 기호가의 내용을 제어 하는 <xref:System.Web.UI.WebControls.DataList>컨트롤.</xref:System.Web.UI.WebControls.DataList> 구분 기호를 사용 하면의 각 항목 사이 사용자 지정 내용 가진 요소를 배치할 수 있습니다는 <xref:System.Web.UI.WebControls.DataList>컨트롤.</xref:System.Web.UI.WebControls.DataList> 항목 간의 구분 기호가의 모양을 <xref:System.Web.UI.WebControls.DataList>컨트롤에 의해 제어 되는 <xref:System.Web.UI.WebControls.DataList.SeparatorStyle%2A>속성.</xref:System.Web.UI.WebControls.DataList.SeparatorStyle%2A> </xref:System.Web.UI.WebControls.DataList>       구분 기호에 대 한 서식 파일을 지정 하려면는 `<SeparatorTemplate>` 여는 태그와 닫는 태그 사이 <xref:System.Web.UI.WebControls.DataList>컨트롤.</xref:System.Web.UI.WebControls.DataList> 그런 다음 열기 및 닫기 사이의 서식 파일의 내용을 나열 수 `<SeparatorTemplate>` 태그입니다.      > [!CAUTION] > 악의적인 클라이언트 스크립트가 포함 될 수 있습니다는 사용자 입력을 표시 하려면이 컨트롤을 사용할 수 있습니다. 응용 프로그램에 표시 하기 전에 실행 스크립트, SQL 문 또는 다른 코드에 대 한 클라이언트에서 보낸 모든 정보를 확인 합니다. 컨트롤에서 입력된 텍스트를 표시 하기 전에 사용자 입력을 확인 하려면 유효성 검사 컨트롤을 사용할 수 있습니다. ASP.NET은 사용자 입력에 있는 스크립트 블록 및 HTML에 있는 입력된 요청 유효성 검사 기능을 제공 합니다. 자세한 내용은 참조 [보안 표준 컨트롤](~/add/includes/ajax-current-ext-md.md), [하는 방법: 보호에 대 한 스크립트에 의해 악용 문자열을 HTML 인코딩 적용 하 여 웹 응용 프로그램에서](~/add/includes/ajax-current-ext-md.md), 및 [ASP.NET 웹 페이지에서 사용자 입력 유효성 검사](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example demonstrates how to use the SeparatorTemplate property to control the contents of the separator between each item in the <xref:System.Web.UI.WebControls.DataList> control.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[DataListSeparatorStyle#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1118_1.aspx)]\n [!code-vb[DataListSeparatorStyle#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1118_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate SeparatorTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "A <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref> 에 있는 항목 사이 구분 기호에 대 한 서식 파일을 포함 하는 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref> 제어 합니다. 기본값은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.DataList.SeparatorTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.ShowFooter
  id: ShowFooter
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: ShowFooter
  nameWithType: DataList.ShowFooter
  fullName: System.Web.UI.WebControls.DataList.ShowFooter
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "바닥글 섹션에 표시 되는지 여부를 나타내는 값을 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref> 제어 합니다."
  remarks: "ShowFooter 속성을 사용 하 여 바닥글 섹션에 표시 되는지 여부를 지정 하는 <xref:System.Web.UI.WebControls.DataList>컨트롤.</xref:System.Web.UI.WebControls.DataList>       바닥글 섹션의 모양을 설정 하 여 제어할 수 있습니다는 <xref:System.Web.UI.WebControls.DataList.FooterStyle%2A>속성.</xref:System.Web.UI.WebControls.DataList.FooterStyle%2A> 바닥글 섹션의 내용에 의해 제어 되는 <xref:System.Web.UI.WebControls.DataList.FooterTemplate%2A>속성.</xref:System.Web.UI.WebControls.DataList.FooterTemplate%2A>"
  example:
  - "The following code example demonstrates how to use the ShowFooter property to display the footer section in the <xref:System.Web.UI.WebControls.DataList> control.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[DataListShowHeader#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_885_1.aspx)]\n [!code-vb[DataListShowHeader#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_885_1.aspx)]"
  syntax:
    content: public virtual bool ShowFooter { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>바닥글 섹션에 표시 되 면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>이 속성은만 있지만, 검사 하는 경우는 <xref:System.Web.UI.WebControls.DataList.FooterTemplate*>속성은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.DataList.FooterTemplate*>"
  overload: System.Web.UI.WebControls.DataList.ShowFooter*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.ShowHeader
  id: ShowHeader
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: ShowHeader
  nameWithType: DataList.ShowHeader
  fullName: System.Web.UI.WebControls.DataList.ShowHeader
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "헤더 섹션에 표시 되는지 여부를 나타내는 값을 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref> 제어 합니다."
  remarks: "ShowHeader 속성을 사용 하 여 헤더 섹션에 표시 되는지 여부를 지정 하는 <xref:System.Web.UI.WebControls.DataList>컨트롤.</xref:System.Web.UI.WebControls.DataList>       헤더 섹션의 모양을 설정 하 여 제어할 수 있습니다는 <xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A>속성.</xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A> 헤더 섹션의 내용에 의해 제어 되는 <xref:System.Web.UI.WebControls.DataList.HeaderTemplate%2A>속성.</xref:System.Web.UI.WebControls.DataList.HeaderTemplate%2A>"
  example:
  - "The following code example demonstrates how to use the ShowHeader property to display the header section in the <xref:System.Web.UI.WebControls.DataList> control.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[DataListShowHeader#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_933_1.aspx)]\n [!code-vb[DataListShowHeader#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_933_1.aspx)]"
  syntax:
    content: public virtual bool ShowHeader { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>머리글 표시 되 면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>이 속성은만 있지만, 검사 하는 경우는 <xref:System.Web.UI.WebControls.DataList.HeaderTemplate*>속성은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.DataList.HeaderTemplate*>"
  overload: System.Web.UI.WebControls.DataList.ShowHeader*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#GetItemStyle(System.Web.UI.WebControls.ListItemType,System.Int32)
  id: System#Web#UI#WebControls#IRepeatInfoUser#GetItemStyle(System.Web.UI.WebControls.ListItemType,System.Int32)
  isEii: true
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: System.Web.UI.WebControls.IRepeatInfoUser.GetItemStyle(ListItemType,Int32)
  nameWithType: DataList.System.Web.UI.WebControls.IRepeatInfoUser.GetItemStyle(ListItemType,Int32)
  fullName: System.Web.UI.WebControls.DataList.System.Web.UI.WebControls.IRepeatInfoUser.GetItemStyle(ListItemType,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "이 멤버에 대 한 참조 &lt;xref:System.Web.UI.WebControls.IRepeatInfoUser.GetItemStyle%2A?displayProperty=fullName&gt;합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Web.UI.WebControls.DataList>인스턴스로 캐스팅 되는 <xref:System.Web.UI.WebControls.IRepeatInfoUser>인터페이스.</xref:System.Web.UI.WebControls.IRepeatInfoUser> </xref:System.Web.UI.WebControls.DataList>"
  syntax:
    content: System.Web.UI.WebControls.Style IRepeatInfoUser.GetItemStyle (System.Web.UI.WebControls.ListItemType itemType, int repeatIndex);
    parameters:
    - id: itemType
      type: System.Web.UI.WebControls.ListItemType
      description: "중 하나는 <xref href=&quot;System.Web.UI.WebControls.ListItemType&quot;> </xref> 열거형 값입니다."
    - id: repeatIndex
      type: System.Int32
      description: "목록 컨트롤에서 항목의 인덱스입니다."
    return:
      type: System.Web.UI.WebControls.Style
      description: "A <xref href=&quot;System.Web.UI.WebControls.Style&quot;> </xref> 목록 컨트롤의 지정된 된 인덱스에 있는 지정한 항목 형식의 스타일을 나타내는입니다."
  overload: System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#GetItemStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#HasFooter
  id: System#Web#UI#WebControls#IRepeatInfoUser#HasFooter
  isEii: true
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: System.Web.UI.WebControls.IRepeatInfoUser.HasFooter
  nameWithType: DataList.System.Web.UI.WebControls.IRepeatInfoUser.HasFooter
  fullName: System.Web.UI.WebControls.DataList.System.Web.UI.WebControls.IRepeatInfoUser.HasFooter
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "이 멤버에 대 한 참조 &lt;xref:System.Web.UI.WebControls.IRepeatInfoUser.HasFooter%2A?displayProperty=fullName&gt;합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Web.UI.WebControls.DataList>인스턴스로 캐스팅 되는 <xref:System.Web.UI.WebControls.IRepeatInfoUser>인터페이스.</xref:System.Web.UI.WebControls.IRepeatInfoUser> </xref:System.Web.UI.WebControls.DataList>"
  syntax:
    content: bool System.Web.UI.WebControls.IRepeatInfoUser.HasFooter { get; }
    return:
      type: System.Boolean
      description: "추가할 수 있습니다."
  overload: System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#HasFooter*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#HasHeader
  id: System#Web#UI#WebControls#IRepeatInfoUser#HasHeader
  isEii: true
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: System.Web.UI.WebControls.IRepeatInfoUser.HasHeader
  nameWithType: DataList.System.Web.UI.WebControls.IRepeatInfoUser.HasHeader
  fullName: System.Web.UI.WebControls.DataList.System.Web.UI.WebControls.IRepeatInfoUser.HasHeader
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "이 멤버에 대 한 참조 &lt;xref:System.Web.UI.WebControls.IRepeatInfoUser.HasHeader%2A?displayProperty=fullName&gt;합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Web.UI.WebControls.DataList>인스턴스 캐스팅 되는 <xref:System.Web.UI.WebControls.IRepeatInfoUser>인터페이스.</xref:System.Web.UI.WebControls.IRepeatInfoUser> </xref:System.Web.UI.WebControls.DataList>"
  syntax:
    content: bool System.Web.UI.WebControls.IRepeatInfoUser.HasHeader { get; }
    return:
      type: System.Boolean
      description: "추가할 수 있습니다."
  overload: System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#HasHeader*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#HasSeparators
  id: System#Web#UI#WebControls#IRepeatInfoUser#HasSeparators
  isEii: true
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: System.Web.UI.WebControls.IRepeatInfoUser.HasSeparators
  nameWithType: DataList.System.Web.UI.WebControls.IRepeatInfoUser.HasSeparators
  fullName: System.Web.UI.WebControls.DataList.System.Web.UI.WebControls.IRepeatInfoUser.HasSeparators
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "이 멤버에 대 한 참조 &lt;xref:System.Web.UI.WebControls.IRepeatInfoUser.HasSeparators%2A?displayProperty=fullName&gt;합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Web.UI.WebControls.DataList>인스턴스로 캐스팅 되는 <xref:System.Web.UI.WebControls.IRepeatInfoUser>인터페이스.</xref:System.Web.UI.WebControls.IRepeatInfoUser> </xref:System.Web.UI.WebControls.DataList>"
  syntax:
    content: bool System.Web.UI.WebControls.IRepeatInfoUser.HasSeparators { get; }
    return:
      type: System.Boolean
      description: "추가할 수 있습니다."
  overload: System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#HasSeparators*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#RenderItem(System.Web.UI.WebControls.ListItemType,System.Int32,System.Web.UI.WebControls.RepeatInfo,System.Web.UI.HtmlTextWriter)
  id: System#Web#UI#WebControls#IRepeatInfoUser#RenderItem(System.Web.UI.WebControls.ListItemType,System.Int32,System.Web.UI.WebControls.RepeatInfo,System.Web.UI.HtmlTextWriter)
  isEii: true
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: System.Web.UI.WebControls.IRepeatInfoUser.RenderItem(ListItemType,Int32,RepeatInfo,HtmlTextWriter)
  nameWithType: DataList.System.Web.UI.WebControls.IRepeatInfoUser.RenderItem(ListItemType,Int32,RepeatInfo,HtmlTextWriter)
  fullName: System.Web.UI.WebControls.DataList.System.Web.UI.WebControls.IRepeatInfoUser.RenderItem(ListItemType,Int32,RepeatInfo,HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "이 멤버에 대 한 참조 &lt;xref:System.Web.UI.WebControls.IRepeatInfoUser.RenderItem%2A?displayProperty=fullName&gt;합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Web.UI.WebControls.DataList>인스턴스로 캐스팅 되는 <xref:System.Web.UI.WebControls.IRepeatInfoUser>인터페이스.</xref:System.Web.UI.WebControls.IRepeatInfoUser> </xref:System.Web.UI.WebControls.DataList>"
  syntax:
    content: void IRepeatInfoUser.RenderItem (System.Web.UI.WebControls.ListItemType itemType, int repeatIndex, System.Web.UI.WebControls.RepeatInfo repeatInfo, System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: itemType
      type: System.Web.UI.WebControls.ListItemType
      description: "항목의 형식입니다."
    - id: repeatIndex
      type: System.Int32
      description: "항목의 인덱스입니다."
    - id: repeatInfo
      type: System.Web.UI.WebControls.RepeatInfo
      description: "항목을 렌더링 하는 데 사용 되는 정보입니다."
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> 항목을 렌더링 하는 데 사용할 개체입니다."
  overload: System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#RenderItem*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#RepeatedItemCount
  id: System#Web#UI#WebControls#IRepeatInfoUser#RepeatedItemCount
  isEii: true
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: System.Web.UI.WebControls.IRepeatInfoUser.RepeatedItemCount
  nameWithType: DataList.System.Web.UI.WebControls.IRepeatInfoUser.RepeatedItemCount
  fullName: System.Web.UI.WebControls.DataList.System.Web.UI.WebControls.IRepeatInfoUser.RepeatedItemCount
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "이 멤버에 대 한 참조 &lt;xref:System.Web.UI.WebControls.IRepeatInfoUser.RepeatedItemCount%2A?displayProperty=fullName&gt;합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Web.UI.WebControls.DataList>인스턴스로 캐스팅 되는 <xref:System.Web.UI.WebControls.IRepeatInfoUser>인터페이스.</xref:System.Web.UI.WebControls.IRepeatInfoUser> </xref:System.Web.UI.WebControls.DataList>"
  syntax:
    content: int System.Web.UI.WebControls.IRepeatInfoUser.RepeatedItemCount { get; }
    return:
      type: System.Int32
      description: "추가할 수 있습니다."
  overload: System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#RepeatedItemCount*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.TagKey
  id: TagKey
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: TagKey
  nameWithType: DataList.TagKey
  fullName: System.Web.UI.WebControls.DataList.TagKey
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "렌더링 하는 데 사용 되는 HTML 태그를 가져옵니다는 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref> 제어 합니다."
  remarks: "TagKey 속성을 사용 하 여 확인 하는 <xref:System.Web.UI.HtmlTextWriterTag>연관 된 값을 <xref:System.Web.UI.WebControls.DataList>컨트롤.</xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.HtmlTextWriterTag> TagKey 속성은 주로 컨트롤 개발자가 사용 됩니다."
  syntax:
    content: protected override System.Web.UI.HtmlTextWriterTag TagKey { get; }
    return:
      type: System.Web.UI.HtmlTextWriterTag
      description: "반환 된 <xref href=&quot;System.Web.UI.HtmlTextWriterTag&quot;> </xref> 태그를 지정 하는 경우는 <xref:System.Web.UI.WebControls.DataList.RepeatLayout*>로 설정 되어 <xref href=&quot;System.Web.UI.WebControls.RepeatLayout&quot;> </xref>, 그렇지 않으면 반환는 <xref href=&quot;System.Web.UI.HtmlTextWriterTag&quot;> </xref> 태그.</xref:System.Web.UI.WebControls.DataList.RepeatLayout*> 기본값은 <xref href=&quot;System.Web.UI.WebControls.RepeatLayout&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.DataList.TagKey*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.TrackViewState
  id: TrackViewState
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: TrackViewState()
  nameWithType: DataList.TrackViewState()
  fullName: System.Web.UI.WebControls.DataList.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "뷰 상태 변경을 추적는 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref> 컨트롤의 저장할 수 있도록 <xref:System.Web.UI.Control.ViewState*>속성.</xref:System.Web.UI.Control.ViewState*>"
  remarks: "TrackViewState 메서드는 컨트롤의 뷰 상태의 일환으로 컨트롤의 변경 내용을 추적 하 고 저장을 시작 하는 시작 위치를 표시 하도록 재정의 됩니다."
  syntax:
    content: protected override void TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.DataList.TrackViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.UpdateCommand
  id: UpdateCommand
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: UpdateCommand
  nameWithType: DataList.UpdateCommand
  fullName: System.Web.UI.WebControls.DataList.UpdateCommand
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "발생 경우는 <xref uid=&quot;langword_csharp_Update&quot; name=&quot;Update&quot; href=&quot;&quot;> </xref> 항목에 대해 단추를 클릭할는 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref> 제어 합니다."
  remarks: "UpdateCommand 이벤트가 발생할 때는 `Update` 단추는 항목을 클릭 합니다.       표준 처리기 UpdateCommand 이벤트 데이터를 업데이트에 대 한 설정의 <xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A>속성을 `-1` (항목의 선택을 취소) 하려면, 다음 데이터를 다시 바인딩 횟수와 <xref:System.Web.UI.WebControls.DataList>컨트롤.</xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A>      > [!CAUTION] > 악의적인 클라이언트 스크립트가 포함 될 수 있습니다는 사용자 입력을 표시 하려면이 컨트롤을 사용할 수 있습니다. 응용 프로그램에 표시 하기 전에 실행 스크립트, SQL 문 또는 다른 코드에 대 한 클라이언트에서 보낸 모든 정보를 확인 합니다. 컨트롤에서 입력된 텍스트를 표시 하기 전에 사용자 입력을 확인 하려면 유효성 검사 컨트롤을 사용할 수 있습니다. ASP.NET은 사용자 입력에 있는 스크립트 블록 및 HTML에 있는 입력된 요청 유효성 검사 기능을 제공 합니다. 자세한 내용은 참조 [보안 표준 컨트롤](~/add/includes/ajax-current-ext-md.md), [하는 방법: 보호에 대 한 스크립트에 의해 악용 문자열을 HTML 인코딩 적용 하 여 웹 응용 프로그램에서](~/add/includes/ajax-current-ext-md.md), 및 [ASP.NET 웹 페이지에서 사용자 입력 유효성 검사](~/add/includes/ajax-current-ext-md.md)합니다.       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [하는 방법: Web Forms 응용 프로그램에](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example demonstrates how to specify and code a handler for the UpdateCommand event. It allows you to update the selected item in the <xref:System.Web.UI.WebControls.DataList> control with the new values entered by the user when the `Update` button is clicked.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[DataListEdit#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_128_1.aspx)]\n [!code-vb[DataListEdit#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_128_1.aspx)]  \n  \n [!code-vb[DataListEdit2#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_128_2.aspx)]\n [!code-cs[DataListEdit2#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_128_2.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.DataListCommandEventHandler UpdateCommand;
    return:
      type: System.Web.UI.WebControls.DataListCommandEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.UpdateCommandName
  id: UpdateCommandName
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: UpdateCommandName
  nameWithType: DataList.UpdateCommandName
  fullName: System.Web.UI.WebControls.DataList.UpdateCommandName
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "나타냅니다는 <xref uid=&quot;langword_csharp_Update&quot; name=&quot;Update&quot; href=&quot;&quot;> </xref> 명령 이름입니다. 이 필드는 읽기 전용입니다."
  remarks: "나타내는 UpdateCommandName 필드를 사용 하 여는 `Update` 명령 이름입니다."
  syntax:
    content: public const string UpdateCommandName;
    return:
      type: System.String
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.BaseDataList
  isExternal: false
  name: System.Web.UI.WebControls.BaseDataList
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Web.UI.WebControls.DataList.#ctor
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: DataList()
  nameWithType: DataList.DataList()
  fullName: System.Web.UI.WebControls.DataList.DataList()
- uid: System.Web.UI.WebControls.DataList.AlternatingItemStyle
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: AlternatingItemStyle
  nameWithType: DataList.AlternatingItemStyle
  fullName: System.Web.UI.WebControls.DataList.AlternatingItemStyle
- uid: System.Web.UI.WebControls.TableItemStyle
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TableItemStyle
  nameWithType: TableItemStyle
  fullName: System.Web.UI.WebControls.TableItemStyle
- uid: System.Web.UI.WebControls.DataList.AlternatingItemTemplate
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: AlternatingItemTemplate
  nameWithType: DataList.AlternatingItemTemplate
  fullName: System.Web.UI.WebControls.DataList.AlternatingItemTemplate
- uid: System.Web.UI.ITemplate
  parent: System.Web.UI
  isExternal: false
  name: ITemplate
  nameWithType: ITemplate
  fullName: System.Web.UI.ITemplate
- uid: System.Web.UI.WebControls.DataList.CancelCommand
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: CancelCommand
  nameWithType: DataList.CancelCommand
  fullName: System.Web.UI.WebControls.DataList.CancelCommand
- uid: System.Web.UI.WebControls.DataListCommandEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataListCommandEventHandler
  nameWithType: DataListCommandEventHandler
  fullName: System.Web.UI.WebControls.DataListCommandEventHandler
- uid: System.Web.UI.WebControls.DataList.CancelCommandName
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: CancelCommandName
  nameWithType: DataList.CancelCommandName
  fullName: System.Web.UI.WebControls.DataList.CancelCommandName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.DataList.CreateControlHierarchy(System.Boolean)
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: CreateControlHierarchy(Boolean)
  nameWithType: DataList.CreateControlHierarchy(Boolean)
  fullName: System.Web.UI.WebControls.DataList.CreateControlHierarchy(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.DataList.CreateControlStyle
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: CreateControlStyle()
  nameWithType: DataList.CreateControlStyle()
  fullName: System.Web.UI.WebControls.DataList.CreateControlStyle()
- uid: System.Web.UI.WebControls.Style
  parent: System.Web.UI.WebControls
  isExternal: false
  name: Style
  nameWithType: Style
  fullName: System.Web.UI.WebControls.Style
- uid: System.Web.UI.WebControls.DataList.CreateItem(System.Int32,System.Web.UI.WebControls.ListItemType)
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: CreateItem(Int32,ListItemType)
  nameWithType: DataList.CreateItem(Int32,ListItemType)
  fullName: System.Web.UI.WebControls.DataList.CreateItem(Int32,ListItemType)
- uid: System.Web.UI.WebControls.DataListItem
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataListItem
  nameWithType: DataListItem
  fullName: System.Web.UI.WebControls.DataListItem
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.ListItemType
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ListItemType
  nameWithType: ListItemType
  fullName: System.Web.UI.WebControls.ListItemType
- uid: System.Web.UI.WebControls.DataList.DeleteCommand
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: DeleteCommand
  nameWithType: DataList.DeleteCommand
  fullName: System.Web.UI.WebControls.DataList.DeleteCommand
- uid: System.Web.UI.WebControls.DataList.DeleteCommandName
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: DeleteCommandName
  nameWithType: DataList.DeleteCommandName
  fullName: System.Web.UI.WebControls.DataList.DeleteCommandName
- uid: System.Web.UI.WebControls.DataList.EditCommand
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: EditCommand
  nameWithType: DataList.EditCommand
  fullName: System.Web.UI.WebControls.DataList.EditCommand
- uid: System.Web.UI.WebControls.DataList.EditCommandName
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: EditCommandName
  nameWithType: DataList.EditCommandName
  fullName: System.Web.UI.WebControls.DataList.EditCommandName
- uid: System.Web.UI.WebControls.DataList.EditItemIndex
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: EditItemIndex
  nameWithType: DataList.EditItemIndex
  fullName: System.Web.UI.WebControls.DataList.EditItemIndex
- uid: System.Web.UI.WebControls.DataList.EditItemStyle
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: EditItemStyle
  nameWithType: DataList.EditItemStyle
  fullName: System.Web.UI.WebControls.DataList.EditItemStyle
- uid: System.Web.UI.WebControls.DataList.EditItemTemplate
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: EditItemTemplate
  nameWithType: DataList.EditItemTemplate
  fullName: System.Web.UI.WebControls.DataList.EditItemTemplate
- uid: System.Web.UI.WebControls.DataList.ExtractTemplateRows
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: ExtractTemplateRows
  nameWithType: DataList.ExtractTemplateRows
  fullName: System.Web.UI.WebControls.DataList.ExtractTemplateRows
- uid: System.Web.UI.WebControls.DataList.FooterStyle
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: FooterStyle
  nameWithType: DataList.FooterStyle
  fullName: System.Web.UI.WebControls.DataList.FooterStyle
- uid: System.Web.UI.WebControls.DataList.FooterTemplate
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: FooterTemplate
  nameWithType: DataList.FooterTemplate
  fullName: System.Web.UI.WebControls.DataList.FooterTemplate
- uid: System.Web.UI.WebControls.DataList.GridLines
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: GridLines
  nameWithType: DataList.GridLines
  fullName: System.Web.UI.WebControls.DataList.GridLines
- uid: System.Web.UI.WebControls.GridLines
  parent: System.Web.UI.WebControls
  isExternal: false
  name: GridLines
  nameWithType: GridLines
  fullName: System.Web.UI.WebControls.GridLines
- uid: System.Web.UI.WebControls.DataList.HeaderStyle
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: HeaderStyle
  nameWithType: DataList.HeaderStyle
  fullName: System.Web.UI.WebControls.DataList.HeaderStyle
- uid: System.Web.UI.WebControls.DataList.HeaderTemplate
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: HeaderTemplate
  nameWithType: DataList.HeaderTemplate
  fullName: System.Web.UI.WebControls.DataList.HeaderTemplate
- uid: System.Web.UI.WebControls.DataList.InitializeItem(System.Web.UI.WebControls.DataListItem)
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: InitializeItem(DataListItem)
  nameWithType: DataList.InitializeItem(DataListItem)
  fullName: System.Web.UI.WebControls.DataList.InitializeItem(DataListItem)
- uid: System.Web.UI.WebControls.DataList.ItemCommand
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: ItemCommand
  nameWithType: DataList.ItemCommand
  fullName: System.Web.UI.WebControls.DataList.ItemCommand
- uid: System.Web.UI.WebControls.DataList.ItemCreated
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: ItemCreated
  nameWithType: DataList.ItemCreated
  fullName: System.Web.UI.WebControls.DataList.ItemCreated
- uid: System.Web.UI.WebControls.DataListItemEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataListItemEventHandler
  nameWithType: DataListItemEventHandler
  fullName: System.Web.UI.WebControls.DataListItemEventHandler
- uid: System.Web.UI.WebControls.DataList.ItemDataBound
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: ItemDataBound
  nameWithType: DataList.ItemDataBound
  fullName: System.Web.UI.WebControls.DataList.ItemDataBound
- uid: System.Web.UI.WebControls.DataList.Items
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: Items
  nameWithType: DataList.Items
  fullName: System.Web.UI.WebControls.DataList.Items
- uid: System.Web.UI.WebControls.DataListItemCollection
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataListItemCollection
  nameWithType: DataListItemCollection
  fullName: System.Web.UI.WebControls.DataListItemCollection
- uid: System.Web.UI.WebControls.DataList.ItemStyle
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: ItemStyle
  nameWithType: DataList.ItemStyle
  fullName: System.Web.UI.WebControls.DataList.ItemStyle
- uid: System.Web.UI.WebControls.DataList.ItemTemplate
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: ItemTemplate
  nameWithType: DataList.ItemTemplate
  fullName: System.Web.UI.WebControls.DataList.ItemTemplate
- uid: System.Web.UI.WebControls.DataList.LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: LoadViewState(Object)
  nameWithType: DataList.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.DataList.LoadViewState(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.DataList.OnBubbleEvent(System.Object,System.EventArgs)
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: OnBubbleEvent(Object,EventArgs)
  nameWithType: DataList.OnBubbleEvent(Object,EventArgs)
  fullName: System.Web.UI.WebControls.DataList.OnBubbleEvent(Object,EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.WebControls.DataList.OnCancelCommand(System.Web.UI.WebControls.DataListCommandEventArgs)
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: OnCancelCommand(DataListCommandEventArgs)
  nameWithType: DataList.OnCancelCommand(DataListCommandEventArgs)
  fullName: System.Web.UI.WebControls.DataList.OnCancelCommand(DataListCommandEventArgs)
- uid: System.Web.UI.WebControls.DataListCommandEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataListCommandEventArgs
  nameWithType: DataListCommandEventArgs
  fullName: System.Web.UI.WebControls.DataListCommandEventArgs
- uid: System.Web.UI.WebControls.DataList.OnDeleteCommand(System.Web.UI.WebControls.DataListCommandEventArgs)
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: OnDeleteCommand(DataListCommandEventArgs)
  nameWithType: DataList.OnDeleteCommand(DataListCommandEventArgs)
  fullName: System.Web.UI.WebControls.DataList.OnDeleteCommand(DataListCommandEventArgs)
- uid: System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: OnEditCommand(DataListCommandEventArgs)
  nameWithType: DataList.OnEditCommand(DataListCommandEventArgs)
  fullName: System.Web.UI.WebControls.DataList.OnEditCommand(DataListCommandEventArgs)
- uid: System.Web.UI.WebControls.DataList.OnInit(System.EventArgs)
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: OnInit(EventArgs)
  nameWithType: DataList.OnInit(EventArgs)
  fullName: System.Web.UI.WebControls.DataList.OnInit(EventArgs)
- uid: System.Web.UI.WebControls.DataList.OnItemCommand(System.Web.UI.WebControls.DataListCommandEventArgs)
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: OnItemCommand(DataListCommandEventArgs)
  nameWithType: DataList.OnItemCommand(DataListCommandEventArgs)
  fullName: System.Web.UI.WebControls.DataList.OnItemCommand(DataListCommandEventArgs)
- uid: System.Web.UI.WebControls.DataList.OnItemCreated(System.Web.UI.WebControls.DataListItemEventArgs)
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: OnItemCreated(DataListItemEventArgs)
  nameWithType: DataList.OnItemCreated(DataListItemEventArgs)
  fullName: System.Web.UI.WebControls.DataList.OnItemCreated(DataListItemEventArgs)
- uid: System.Web.UI.WebControls.DataListItemEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataListItemEventArgs
  nameWithType: DataListItemEventArgs
  fullName: System.Web.UI.WebControls.DataListItemEventArgs
- uid: System.Web.UI.WebControls.DataList.OnItemDataBound(System.Web.UI.WebControls.DataListItemEventArgs)
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: OnItemDataBound(DataListItemEventArgs)
  nameWithType: DataList.OnItemDataBound(DataListItemEventArgs)
  fullName: System.Web.UI.WebControls.DataList.OnItemDataBound(DataListItemEventArgs)
- uid: System.Web.UI.WebControls.DataList.OnUpdateCommand(System.Web.UI.WebControls.DataListCommandEventArgs)
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: OnUpdateCommand(DataListCommandEventArgs)
  nameWithType: DataList.OnUpdateCommand(DataListCommandEventArgs)
  fullName: System.Web.UI.WebControls.DataList.OnUpdateCommand(DataListCommandEventArgs)
- uid: System.Web.UI.WebControls.DataList.PrepareControlHierarchy
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: PrepareControlHierarchy()
  nameWithType: DataList.PrepareControlHierarchy()
  fullName: System.Web.UI.WebControls.DataList.PrepareControlHierarchy()
- uid: System.Web.UI.WebControls.DataList.RenderContents(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: RenderContents(HtmlTextWriter)
  nameWithType: DataList.RenderContents(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.DataList.RenderContents(HtmlTextWriter)
- uid: System.Web.UI.HtmlTextWriter
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HtmlTextWriter
  fullName: System.Web.UI.HtmlTextWriter
- uid: System.Web.UI.WebControls.DataList.RepeatColumns
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: RepeatColumns
  nameWithType: DataList.RepeatColumns
  fullName: System.Web.UI.WebControls.DataList.RepeatColumns
- uid: System.Web.UI.WebControls.DataList.RepeatDirection
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: RepeatDirection
  nameWithType: DataList.RepeatDirection
  fullName: System.Web.UI.WebControls.DataList.RepeatDirection
- uid: System.Web.UI.WebControls.RepeatDirection
  parent: System.Web.UI.WebControls
  isExternal: false
  name: RepeatDirection
  nameWithType: RepeatDirection
  fullName: System.Web.UI.WebControls.RepeatDirection
- uid: System.Web.UI.WebControls.DataList.RepeatLayout
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: RepeatLayout
  nameWithType: DataList.RepeatLayout
  fullName: System.Web.UI.WebControls.DataList.RepeatLayout
- uid: System.Web.UI.WebControls.RepeatLayout
  parent: System.Web.UI.WebControls
  isExternal: false
  name: RepeatLayout
  nameWithType: RepeatLayout
  fullName: System.Web.UI.WebControls.RepeatLayout
- uid: System.Web.UI.WebControls.DataList.SaveViewState
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: SaveViewState()
  nameWithType: DataList.SaveViewState()
  fullName: System.Web.UI.WebControls.DataList.SaveViewState()
- uid: System.Web.UI.WebControls.DataList.SelectCommandName
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: SelectCommandName
  nameWithType: DataList.SelectCommandName
  fullName: System.Web.UI.WebControls.DataList.SelectCommandName
- uid: System.Web.UI.WebControls.DataList.SelectedIndex
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: SelectedIndex
  nameWithType: DataList.SelectedIndex
  fullName: System.Web.UI.WebControls.DataList.SelectedIndex
- uid: System.Web.UI.WebControls.DataList.SelectedItem
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: SelectedItem
  nameWithType: DataList.SelectedItem
  fullName: System.Web.UI.WebControls.DataList.SelectedItem
- uid: System.Web.UI.WebControls.DataList.SelectedItemStyle
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: SelectedItemStyle
  nameWithType: DataList.SelectedItemStyle
  fullName: System.Web.UI.WebControls.DataList.SelectedItemStyle
- uid: System.Web.UI.WebControls.DataList.SelectedItemTemplate
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: SelectedItemTemplate
  nameWithType: DataList.SelectedItemTemplate
  fullName: System.Web.UI.WebControls.DataList.SelectedItemTemplate
- uid: System.Web.UI.WebControls.DataList.SelectedValue
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: SelectedValue
  nameWithType: DataList.SelectedValue
  fullName: System.Web.UI.WebControls.DataList.SelectedValue
- uid: System.Web.UI.WebControls.DataList.SeparatorStyle
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: SeparatorStyle
  nameWithType: DataList.SeparatorStyle
  fullName: System.Web.UI.WebControls.DataList.SeparatorStyle
- uid: System.Web.UI.WebControls.DataList.SeparatorTemplate
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: SeparatorTemplate
  nameWithType: DataList.SeparatorTemplate
  fullName: System.Web.UI.WebControls.DataList.SeparatorTemplate
- uid: System.Web.UI.WebControls.DataList.ShowFooter
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: ShowFooter
  nameWithType: DataList.ShowFooter
  fullName: System.Web.UI.WebControls.DataList.ShowFooter
- uid: System.Web.UI.WebControls.DataList.ShowHeader
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: ShowHeader
  nameWithType: DataList.ShowHeader
  fullName: System.Web.UI.WebControls.DataList.ShowHeader
- uid: System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#GetItemStyle(System.Web.UI.WebControls.ListItemType,System.Int32)
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: System.Web.UI.WebControls.IRepeatInfoUser.GetItemStyle(ListItemType,Int32)
  nameWithType: DataList.System.Web.UI.WebControls.IRepeatInfoUser.GetItemStyle(ListItemType,Int32)
  fullName: System.Web.UI.WebControls.DataList.System.Web.UI.WebControls.IRepeatInfoUser.GetItemStyle(ListItemType,Int32)
- uid: System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#HasFooter
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: System.Web.UI.WebControls.IRepeatInfoUser.HasFooter
  nameWithType: DataList.System.Web.UI.WebControls.IRepeatInfoUser.HasFooter
  fullName: System.Web.UI.WebControls.DataList.System.Web.UI.WebControls.IRepeatInfoUser.HasFooter
- uid: System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#HasHeader
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: System.Web.UI.WebControls.IRepeatInfoUser.HasHeader
  nameWithType: DataList.System.Web.UI.WebControls.IRepeatInfoUser.HasHeader
  fullName: System.Web.UI.WebControls.DataList.System.Web.UI.WebControls.IRepeatInfoUser.HasHeader
- uid: System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#HasSeparators
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: System.Web.UI.WebControls.IRepeatInfoUser.HasSeparators
  nameWithType: DataList.System.Web.UI.WebControls.IRepeatInfoUser.HasSeparators
  fullName: System.Web.UI.WebControls.DataList.System.Web.UI.WebControls.IRepeatInfoUser.HasSeparators
- uid: System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#RenderItem(System.Web.UI.WebControls.ListItemType,System.Int32,System.Web.UI.WebControls.RepeatInfo,System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: System.Web.UI.WebControls.IRepeatInfoUser.RenderItem(ListItemType,Int32,RepeatInfo,HtmlTextWriter)
  nameWithType: DataList.System.Web.UI.WebControls.IRepeatInfoUser.RenderItem(ListItemType,Int32,RepeatInfo,HtmlTextWriter)
  fullName: System.Web.UI.WebControls.DataList.System.Web.UI.WebControls.IRepeatInfoUser.RenderItem(ListItemType,Int32,RepeatInfo,HtmlTextWriter)
- uid: System.Web.UI.WebControls.RepeatInfo
  parent: System.Web.UI.WebControls
  isExternal: false
  name: RepeatInfo
  nameWithType: RepeatInfo
  fullName: System.Web.UI.WebControls.RepeatInfo
- uid: System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#RepeatedItemCount
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: System.Web.UI.WebControls.IRepeatInfoUser.RepeatedItemCount
  nameWithType: DataList.System.Web.UI.WebControls.IRepeatInfoUser.RepeatedItemCount
  fullName: System.Web.UI.WebControls.DataList.System.Web.UI.WebControls.IRepeatInfoUser.RepeatedItemCount
- uid: System.Web.UI.WebControls.DataList.TagKey
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: TagKey
  nameWithType: DataList.TagKey
  fullName: System.Web.UI.WebControls.DataList.TagKey
- uid: System.Web.UI.HtmlTextWriterTag
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriterTag
  nameWithType: HtmlTextWriterTag
  fullName: System.Web.UI.HtmlTextWriterTag
- uid: System.Web.UI.WebControls.DataList.TrackViewState
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: TrackViewState()
  nameWithType: DataList.TrackViewState()
  fullName: System.Web.UI.WebControls.DataList.TrackViewState()
- uid: System.Web.UI.WebControls.DataList.UpdateCommand
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: UpdateCommand
  nameWithType: DataList.UpdateCommand
  fullName: System.Web.UI.WebControls.DataList.UpdateCommand
- uid: System.Web.UI.WebControls.DataList.UpdateCommandName
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: UpdateCommandName
  nameWithType: DataList.UpdateCommandName
  fullName: System.Web.UI.WebControls.DataList.UpdateCommandName
- uid: System.Web.UI.WebControls.DataList.#ctor*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: DataList
  nameWithType: DataList.DataList
- uid: System.Web.UI.WebControls.DataList.AlternatingItemStyle*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: AlternatingItemStyle
  nameWithType: DataList.AlternatingItemStyle
- uid: System.Web.UI.WebControls.DataList.AlternatingItemTemplate*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: AlternatingItemTemplate
  nameWithType: DataList.AlternatingItemTemplate
- uid: System.Web.UI.WebControls.DataList.CreateControlHierarchy*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: CreateControlHierarchy
  nameWithType: DataList.CreateControlHierarchy
- uid: System.Web.UI.WebControls.DataList.CreateControlStyle*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: CreateControlStyle
  nameWithType: DataList.CreateControlStyle
- uid: System.Web.UI.WebControls.DataList.CreateItem*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: CreateItem
  nameWithType: DataList.CreateItem
- uid: System.Web.UI.WebControls.DataList.EditItemIndex*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: EditItemIndex
  nameWithType: DataList.EditItemIndex
- uid: System.Web.UI.WebControls.DataList.EditItemStyle*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: EditItemStyle
  nameWithType: DataList.EditItemStyle
- uid: System.Web.UI.WebControls.DataList.EditItemTemplate*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: EditItemTemplate
  nameWithType: DataList.EditItemTemplate
- uid: System.Web.UI.WebControls.DataList.ExtractTemplateRows*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: ExtractTemplateRows
  nameWithType: DataList.ExtractTemplateRows
- uid: System.Web.UI.WebControls.DataList.FooterStyle*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: FooterStyle
  nameWithType: DataList.FooterStyle
- uid: System.Web.UI.WebControls.DataList.FooterTemplate*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: FooterTemplate
  nameWithType: DataList.FooterTemplate
- uid: System.Web.UI.WebControls.DataList.GridLines*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: GridLines
  nameWithType: DataList.GridLines
- uid: System.Web.UI.WebControls.DataList.HeaderStyle*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: HeaderStyle
  nameWithType: DataList.HeaderStyle
- uid: System.Web.UI.WebControls.DataList.HeaderTemplate*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: HeaderTemplate
  nameWithType: DataList.HeaderTemplate
- uid: System.Web.UI.WebControls.DataList.InitializeItem*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: InitializeItem
  nameWithType: DataList.InitializeItem
- uid: System.Web.UI.WebControls.DataList.Items*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: Items
  nameWithType: DataList.Items
- uid: System.Web.UI.WebControls.DataList.ItemStyle*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: ItemStyle
  nameWithType: DataList.ItemStyle
- uid: System.Web.UI.WebControls.DataList.ItemTemplate*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: ItemTemplate
  nameWithType: DataList.ItemTemplate
- uid: System.Web.UI.WebControls.DataList.LoadViewState*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: LoadViewState
  nameWithType: DataList.LoadViewState
- uid: System.Web.UI.WebControls.DataList.OnBubbleEvent*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: OnBubbleEvent
  nameWithType: DataList.OnBubbleEvent
- uid: System.Web.UI.WebControls.DataList.OnCancelCommand*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: OnCancelCommand
  nameWithType: DataList.OnCancelCommand
- uid: System.Web.UI.WebControls.DataList.OnDeleteCommand*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: OnDeleteCommand
  nameWithType: DataList.OnDeleteCommand
- uid: System.Web.UI.WebControls.DataList.OnEditCommand*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: OnEditCommand
  nameWithType: DataList.OnEditCommand
- uid: System.Web.UI.WebControls.DataList.OnInit*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: OnInit
  nameWithType: DataList.OnInit
- uid: System.Web.UI.WebControls.DataList.OnItemCommand*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: OnItemCommand
  nameWithType: DataList.OnItemCommand
- uid: System.Web.UI.WebControls.DataList.OnItemCreated*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: OnItemCreated
  nameWithType: DataList.OnItemCreated
- uid: System.Web.UI.WebControls.DataList.OnItemDataBound*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: OnItemDataBound
  nameWithType: DataList.OnItemDataBound
- uid: System.Web.UI.WebControls.DataList.OnUpdateCommand*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: OnUpdateCommand
  nameWithType: DataList.OnUpdateCommand
- uid: System.Web.UI.WebControls.DataList.PrepareControlHierarchy*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: PrepareControlHierarchy
  nameWithType: DataList.PrepareControlHierarchy
- uid: System.Web.UI.WebControls.DataList.RenderContents*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: RenderContents
  nameWithType: DataList.RenderContents
- uid: System.Web.UI.WebControls.DataList.RepeatColumns*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: RepeatColumns
  nameWithType: DataList.RepeatColumns
- uid: System.Web.UI.WebControls.DataList.RepeatDirection*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: RepeatDirection
  nameWithType: DataList.RepeatDirection
- uid: System.Web.UI.WebControls.DataList.RepeatLayout*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: RepeatLayout
  nameWithType: DataList.RepeatLayout
- uid: System.Web.UI.WebControls.DataList.SaveViewState*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: SaveViewState
  nameWithType: DataList.SaveViewState
- uid: System.Web.UI.WebControls.DataList.SelectedIndex*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: SelectedIndex
  nameWithType: DataList.SelectedIndex
- uid: System.Web.UI.WebControls.DataList.SelectedItem*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: SelectedItem
  nameWithType: DataList.SelectedItem
- uid: System.Web.UI.WebControls.DataList.SelectedItemStyle*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: SelectedItemStyle
  nameWithType: DataList.SelectedItemStyle
- uid: System.Web.UI.WebControls.DataList.SelectedItemTemplate*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: SelectedItemTemplate
  nameWithType: DataList.SelectedItemTemplate
- uid: System.Web.UI.WebControls.DataList.SelectedValue*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: SelectedValue
  nameWithType: DataList.SelectedValue
- uid: System.Web.UI.WebControls.DataList.SeparatorStyle*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: SeparatorStyle
  nameWithType: DataList.SeparatorStyle
- uid: System.Web.UI.WebControls.DataList.SeparatorTemplate*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: SeparatorTemplate
  nameWithType: DataList.SeparatorTemplate
- uid: System.Web.UI.WebControls.DataList.ShowFooter*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: ShowFooter
  nameWithType: DataList.ShowFooter
- uid: System.Web.UI.WebControls.DataList.ShowHeader*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: ShowHeader
  nameWithType: DataList.ShowHeader
- uid: System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#GetItemStyle*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: System.Web.UI.WebControls.IRepeatInfoUser.GetItemStyle
  nameWithType: DataList.System.Web.UI.WebControls.IRepeatInfoUser.GetItemStyle
- uid: System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#HasFooter*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: System.Web.UI.WebControls.IRepeatInfoUser.HasFooter
  nameWithType: DataList.System.Web.UI.WebControls.IRepeatInfoUser.HasFooter
- uid: System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#HasHeader*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: System.Web.UI.WebControls.IRepeatInfoUser.HasHeader
  nameWithType: DataList.System.Web.UI.WebControls.IRepeatInfoUser.HasHeader
- uid: System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#HasSeparators*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: System.Web.UI.WebControls.IRepeatInfoUser.HasSeparators
  nameWithType: DataList.System.Web.UI.WebControls.IRepeatInfoUser.HasSeparators
- uid: System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#RenderItem*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: System.Web.UI.WebControls.IRepeatInfoUser.RenderItem
  nameWithType: DataList.System.Web.UI.WebControls.IRepeatInfoUser.RenderItem
- uid: System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#RepeatedItemCount*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: System.Web.UI.WebControls.IRepeatInfoUser.RepeatedItemCount
  nameWithType: DataList.System.Web.UI.WebControls.IRepeatInfoUser.RepeatedItemCount
- uid: System.Web.UI.WebControls.DataList.TagKey*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: TagKey
  nameWithType: DataList.TagKey
- uid: System.Web.UI.WebControls.DataList.TrackViewState*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: TrackViewState
  nameWithType: DataList.TrackViewState
