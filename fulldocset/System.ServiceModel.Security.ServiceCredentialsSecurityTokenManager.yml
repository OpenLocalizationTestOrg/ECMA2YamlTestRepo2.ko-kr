### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager
  id: ServiceCredentialsSecurityTokenManager
  children:
  - System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.#ctor(System.ServiceModel.Description.ServiceCredentials)
  - System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecureConversationTokenAuthenticator(System.ServiceModel.Security.Tokens.RecipientServiceModelSecurityTokenRequirement,System.Boolean,System.IdentityModel.Selectors.SecurityTokenResolver@)
  - System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenAuthenticator(System.IdentityModel.Selectors.SecurityTokenRequirement,System.IdentityModel.Selectors.SecurityTokenResolver@)
  - System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenProvider(System.IdentityModel.Selectors.SecurityTokenRequirement)
  - System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenSerializer(System.IdentityModel.Selectors.SecurityTokenVersion)
  - System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.GetIdentityOfSelf(System.IdentityModel.Selectors.SecurityTokenRequirement)
  - System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.IsIssuedSecurityTokenRequirement(System.IdentityModel.Selectors.SecurityTokenRequirement)
  - System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.ServiceCredentials
  langs:
  - csharp
  name: ServiceCredentialsSecurityTokenManager
  nameWithType: ServiceCredentialsSecurityTokenManager
  fullName: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager
  type: Class
  summary: "나타냅니다는 <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenManager&quot;> </xref> 기반으로 하는 보안 토큰 serializer를 제공 하는 <xref href=&quot;System.ServiceModel.Description.ServiceCredentials&quot;> </xref> 서비스에 구성 합니다."
  remarks: "이 클래스는 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer>클래스</xref:System.IdentityModel.Selectors.SecurityTokenSerializer> 의 인스턴스를 만듭니다. 각 서비스 채널 수신기에 대 한이 클래스의 인스턴스가 하나씩 있습니다."
  example:
  - "The following code shows how to override this class to create a customized Service Credentials Token Manager.  \n  \n [!code-vb[c_CustomCredentials#5](~/add/codesnippet/visualbasic/t-system.servicemodel.se_12_1.vb)]\n [!code-cs[c_CustomCredentials#5](~/add/codesnippet/csharp/t-system.servicemodel.se_12_1.cs)]"
  syntax:
    content: 'public class ServiceCredentialsSecurityTokenManager : System.IdentityModel.Selectors.SecurityTokenManager, System.ServiceModel.Security.IEndpointIdentityProvider'
  inheritance:
  - System.Object
  - System.IdentityModel.Selectors.SecurityTokenManager
  implements:
  - System.ServiceModel.Security.IEndpointIdentityProvider
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.#ctor(System.ServiceModel.Description.ServiceCredentials)
  id: '#ctor(System.ServiceModel.Description.ServiceCredentials)'
  parent: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager
  langs:
  - csharp
  name: ServiceCredentialsSecurityTokenManager(ServiceCredentials)
  nameWithType: ServiceCredentialsSecurityTokenManager.ServiceCredentialsSecurityTokenManager(ServiceCredentials)
  fullName: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.ServiceCredentialsSecurityTokenManager(ServiceCredentials)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager&quot;> </xref> 클래스에 따라는 <xref href=&quot;System.ServiceModel.Description.ServiceCredentials&quot;> </xref> 전달 합니다."
  syntax:
    content: public ServiceCredentialsSecurityTokenManager (System.ServiceModel.Description.ServiceCredentials parent);
    parameters:
    - id: parent
      type: System.ServiceModel.Description.ServiceCredentials
      description: "서비스 자격 증명입니다."
  overload: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecureConversationTokenAuthenticator(System.ServiceModel.Security.Tokens.RecipientServiceModelSecurityTokenRequirement,System.Boolean,System.IdentityModel.Selectors.SecurityTokenResolver@)
  id: CreateSecureConversationTokenAuthenticator(System.ServiceModel.Security.Tokens.RecipientServiceModelSecurityTokenRequirement,System.Boolean,System.IdentityModel.Selectors.SecurityTokenResolver@)
  parent: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager
  langs:
  - csharp
  name: CreateSecureConversationTokenAuthenticator(RecipientServiceModelSecurityTokenRequirement,Boolean,SecurityTokenResolver)
  nameWithType: ServiceCredentialsSecurityTokenManager.CreateSecureConversationTokenAuthenticator(RecipientServiceModelSecurityTokenRequirement,Boolean,SecurityTokenResolver)
  fullName: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecureConversationTokenAuthenticator(RecipientServiceModelSecurityTokenRequirement,Boolean,SecurityTokenResolver)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "보안 대화에 전달 된 속성 요구 사항을 기반으로 하는 토큰 인증자를 만듭니다."
  syntax:
    content: protected System.IdentityModel.Selectors.SecurityTokenAuthenticator CreateSecureConversationTokenAuthenticator (System.ServiceModel.Security.Tokens.RecipientServiceModelSecurityTokenRequirement recipientRequirement, bool preserveBootstrapTokens, out System.IdentityModel.Selectors.SecurityTokenResolver sctResolver);
    parameters:
    - id: recipientRequirement
      type: System.ServiceModel.Security.Tokens.RecipientServiceModelSecurityTokenRequirement
      description: "수신기에 특정 보안 속성 요구 사항을 나타냅니다."
    - id: preserveBootstrapTokens
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>부트스트랩 토큰; 유지 해야 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
    - id: sctResolver
      type: System.IdentityModel.Selectors.SecurityTokenResolver
      description: "키 식별자 나 키 식별자 절이 있는 경우 보안 토큰이 나 키를 검색할 수 있는 보안 토큰 확인자 개체입니다."
    return:
      type: System.IdentityModel.Selectors.SecurityTokenAuthenticator
      description: "보안 토큰 인증자입니다."
  overload: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecureConversationTokenAuthenticator*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenAuthenticator(System.IdentityModel.Selectors.SecurityTokenRequirement,System.IdentityModel.Selectors.SecurityTokenResolver@)
  id: CreateSecurityTokenAuthenticator(System.IdentityModel.Selectors.SecurityTokenRequirement,System.IdentityModel.Selectors.SecurityTokenResolver@)
  parent: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager
  langs:
  - csharp
  name: CreateSecurityTokenAuthenticator(SecurityTokenRequirement,SecurityTokenResolver)
  nameWithType: ServiceCredentialsSecurityTokenManager.CreateSecurityTokenAuthenticator(SecurityTokenRequirement,SecurityTokenResolver)
  fullName: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenAuthenticator(SecurityTokenRequirement,SecurityTokenResolver)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "보안 토큰 인증자에 따라 만듭니다는 <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenRequirement&quot;> </xref>합니다."
  remarks: "`outOfBand` 토큰 확인자에 사용 되는 메서드에 의해 선택적으로 반환할 수는 [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] 보안 프로세서가 토큰 SOAP에 없는 메시지 보안을 처리 하는 경우 확인할 수 있습니다. <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator>이 반환 되는 메서드 토큰의 유효성을 검사 하 고 클레임을 추출 합니다.</xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator> 하나의 <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator> <xref:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement>.</xref:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement> 에서 파생 된 각 클래스에 대해 생성 됩니다</xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator>"
  example:
  - "The following code is an example of how to override this method.  \n  \n [!code-cs[c_CustomTokenAuthenticator#2](~/add/codesnippet/csharp/b70d167c-ca6e-4160-bfdd-_1.cs)]\n [!code-vb[c_CustomTokenAuthenticator#2](~/add/codesnippet/visualbasic/b70d167c-ca6e-4160-bfdd-_1.vb)]"
  syntax:
    content: public override System.IdentityModel.Selectors.SecurityTokenAuthenticator CreateSecurityTokenAuthenticator (System.IdentityModel.Selectors.SecurityTokenRequirement tokenRequirement, out System.IdentityModel.Selectors.SecurityTokenResolver outOfBandTokenResolver);
    parameters:
    - id: tokenRequirement
      type: System.IdentityModel.Selectors.SecurityTokenRequirement
      description: "보안 토큰 요구 사항입니다."
    - id: outOfBandTokenResolver
      type: System.IdentityModel.Selectors.SecurityTokenResolver
      description: "이 메서드가 반환 될 때를 포함 한 <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenResolver&quot;> </xref>합니다. 이 매개 변수는 초기화 되지 않은 상태로 전달 됩니다."
    return:
      type: System.IdentityModel.Selectors.SecurityTokenAuthenticator
      description: "보안 토큰 인증자입니다."
  overload: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenAuthenticator*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>tokenRequirement</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "에 대 한 보안 토큰 인증자를 만들 수 없습니다는 <code>  tokenRequirement </code> 전달 된입니다."
  platform:
  - net462
- uid: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenProvider(System.IdentityModel.Selectors.SecurityTokenRequirement)
  id: CreateSecurityTokenProvider(System.IdentityModel.Selectors.SecurityTokenRequirement)
  parent: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager
  langs:
  - csharp
  name: CreateSecurityTokenProvider(SecurityTokenRequirement)
  nameWithType: ServiceCredentialsSecurityTokenManager.CreateSecurityTokenProvider(SecurityTokenRequirement)
  fullName: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenProvider(SecurityTokenRequirement)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "보안 토큰 공급자에 따라 만듭니다는 <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenRequirement&quot;> </xref>합니다."
  remarks: "<xref:System.IdentityModel.Selectors.SecurityTokenProvider>클래스는 주어진된 <xref:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement>.</xref:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement> 에 맞는 토큰을</xref:System.IdentityModel.Selectors.SecurityTokenProvider> 필요에 따라 토큰 공급자는 갱신 하 고 토큰 갱신과 취소도 지원할 수 있습니다. 이렇게 하려면 구성 된 경우 토큰 공급자 토큰을 캐시할 수 있습니다."
  example:
  - "The following code shows how to override this method.  \n  \n [!code-vb[ClientCredentialsSecurityTokenManager#4](~/add/codesnippet/visualbasic/399fa5ca-8ab5-4dd6-bfe8-_1.vb)]\n [!code-cs[ClientCredentialsSecurityTokenManager#4](~/add/codesnippet/csharp/399fa5ca-8ab5-4dd6-bfe8-_1.cs)]"
  syntax:
    content: public override System.IdentityModel.Selectors.SecurityTokenProvider CreateSecurityTokenProvider (System.IdentityModel.Selectors.SecurityTokenRequirement requirement);
    parameters:
    - id: requirement
      type: System.IdentityModel.Selectors.SecurityTokenRequirement
      description: "보안 토큰 요구 사항입니다."
    return:
      type: System.IdentityModel.Selectors.SecurityTokenProvider
      description: "보안 토큰 공급자입니다."
  overload: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenProvider*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>requirement</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "에 대 한 보안 토큰 공급자를 만들 수 없습니다는 <code> requirement </code> 전달 된입니다."
  platform:
  - net462
- uid: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenSerializer(System.IdentityModel.Selectors.SecurityTokenVersion)
  id: CreateSecurityTokenSerializer(System.IdentityModel.Selectors.SecurityTokenVersion)
  parent: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager
  langs:
  - csharp
  name: CreateSecurityTokenSerializer(SecurityTokenVersion)
  nameWithType: ServiceCredentialsSecurityTokenManager.CreateSecurityTokenSerializer(SecurityTokenVersion)
  fullName: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenSerializer(SecurityTokenVersion)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "토큰 serializer에 전달 된 보안 토큰 버전을 기반으로 보안을 만듭니다."
  remarks: "<xref:System.IdentityModel.Selectors.SecurityTokenSerializer>쓰기 및 읽기 보안 토큰 및 보안 토큰 참조에 사용 됩니다.</xref:System.IdentityModel.Selectors.SecurityTokenSerializer> XML에서 토큰을 역직렬화 할 때 반환 된 토큰은 암호화 작업을 수행할 수 있어야 합니다. 토큰 serializer는 토큰이 암호화 작업 (Kerberos 티켓 처리, X.509 디코딩, SAML 디코딩 및 등)를 수행할 수 있지만 응용 프로그램 신뢰 결정은 인증 자가 하도록 연기 해야 되도록 충분 한 유효성 검사를 할 수 있어야 합니다."
  syntax:
    content: public override System.IdentityModel.Selectors.SecurityTokenSerializer CreateSecurityTokenSerializer (System.IdentityModel.Selectors.SecurityTokenVersion version);
    parameters:
    - id: version
      type: System.IdentityModel.Selectors.SecurityTokenVersion
      description: "보안 토큰의 버전입니다."
    return:
      type: System.IdentityModel.Selectors.SecurityTokenSerializer
      description: "보안 토큰 serializer입니다."
  overload: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenSerializer*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "에 대 한 보안 토큰 serializer를 만들 수 없습니다는 <code> version </code> 전달 된입니다."
  platform:
  - net462
- uid: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.GetIdentityOfSelf(System.IdentityModel.Selectors.SecurityTokenRequirement)
  id: GetIdentityOfSelf(System.IdentityModel.Selectors.SecurityTokenRequirement)
  parent: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager
  langs:
  - csharp
  name: GetIdentityOfSelf(SecurityTokenRequirement)
  nameWithType: ServiceCredentialsSecurityTokenManager.GetIdentityOfSelf(SecurityTokenRequirement)
  fullName: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.GetIdentityOfSelf(SecurityTokenRequirement)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "가져옵니다는 <xref:System.ServiceModel.EndpointIdentity>보안 토큰 요구 사항에 따라.</xref:System.ServiceModel.EndpointIdentity>"
  remarks: "이 메서드는 [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] 얻으려고 인프라는 <xref:System.ServiceModel.EndpointIdentity>서비스 끝점에 해당 하는.</xref:System.ServiceModel.EndpointIdentity>"
  syntax:
    content: public virtual System.ServiceModel.EndpointIdentity GetIdentityOfSelf (System.IdentityModel.Selectors.SecurityTokenRequirement tokenRequirement);
    parameters:
    - id: tokenRequirement
      type: System.IdentityModel.Selectors.SecurityTokenRequirement
      description: "보안 토큰 요구 사항입니다."
    return:
      type: System.ServiceModel.EndpointIdentity
      description: "에 해당 하는 끝점 id는 <code> tokenRequirement </code>합니다. <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>id에서 만들 수 없습니다 경우 반환 되는 <code> tokenRequirement </code>합니다."
  overload: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.GetIdentityOfSelf*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>tokenRequirement</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.IsIssuedSecurityTokenRequirement(System.IdentityModel.Selectors.SecurityTokenRequirement)
  id: IsIssuedSecurityTokenRequirement(System.IdentityModel.Selectors.SecurityTokenRequirement)
  parent: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager
  langs:
  - csharp
  name: IsIssuedSecurityTokenRequirement(SecurityTokenRequirement)
  nameWithType: ServiceCredentialsSecurityTokenManager.IsIssuedSecurityTokenRequirement(SecurityTokenRequirement)
  fullName: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.IsIssuedSecurityTokenRequirement(SecurityTokenRequirement)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "발급된 된 토큰에 대 한 보안 토큰 요구 사항 인지 확인 합니다."
  syntax:
    content: protected bool IsIssuedSecurityTokenRequirement (System.IdentityModel.Selectors.SecurityTokenRequirement requirement);
    parameters:
    - id: requirement
      type: System.IdentityModel.Selectors.SecurityTokenRequirement
      description: "보안 토큰 요구 사항입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>보안 토큰 요구 사항이 발급된 된 토큰;에 대 한 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.IsIssuedSecurityTokenRequirement*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.ServiceCredentials
  id: ServiceCredentials
  parent: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager
  langs:
  - csharp
  name: ServiceCredentials
  nameWithType: ServiceCredentialsSecurityTokenManager.ServiceCredentials
  fullName: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.ServiceCredentials
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "이 클래스의이 인스턴스를 생성 하는 데 사용 하 여 서비스 자격 증명을 가져옵니다."
  remarks: "<xref:System.ServiceModel.Description.ServiceCredentials>개체를 사용 하면 서비스 자격 증명 뿐만 아니라 서비스 자격 증명 인증 설정을 구성할 수 있습니다.</xref:System.ServiceModel.Description.ServiceCredentials>"
  syntax:
    content: public System.ServiceModel.Description.ServiceCredentials ServiceCredentials { get; }
    return:
      type: System.ServiceModel.Description.ServiceCredentials
      description: "서비스 자격 증명입니다."
  overload: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.ServiceCredentials*
  exceptions: []
  platform:
  - net462
references:
- uid: System.IdentityModel.Selectors.SecurityTokenManager
  isExternal: false
  name: System.IdentityModel.Selectors.SecurityTokenManager
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.#ctor(System.ServiceModel.Description.ServiceCredentials)
  parent: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager
  isExternal: false
  name: ServiceCredentialsSecurityTokenManager(ServiceCredentials)
  nameWithType: ServiceCredentialsSecurityTokenManager.ServiceCredentialsSecurityTokenManager(ServiceCredentials)
  fullName: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.ServiceCredentialsSecurityTokenManager(ServiceCredentials)
- uid: System.ServiceModel.Description.ServiceCredentials
  parent: System.ServiceModel.Description
  isExternal: false
  name: ServiceCredentials
  nameWithType: ServiceCredentials
  fullName: System.ServiceModel.Description.ServiceCredentials
- uid: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecureConversationTokenAuthenticator(System.ServiceModel.Security.Tokens.RecipientServiceModelSecurityTokenRequirement,System.Boolean,System.IdentityModel.Selectors.SecurityTokenResolver@)
  parent: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager
  isExternal: false
  name: CreateSecureConversationTokenAuthenticator(RecipientServiceModelSecurityTokenRequirement,Boolean,SecurityTokenResolver)
  nameWithType: ServiceCredentialsSecurityTokenManager.CreateSecureConversationTokenAuthenticator(RecipientServiceModelSecurityTokenRequirement,Boolean,SecurityTokenResolver)
  fullName: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecureConversationTokenAuthenticator(RecipientServiceModelSecurityTokenRequirement,Boolean,SecurityTokenResolver)
- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: SecurityTokenAuthenticator
  nameWithType: SecurityTokenAuthenticator
  fullName: System.IdentityModel.Selectors.SecurityTokenAuthenticator
- uid: System.ServiceModel.Security.Tokens.RecipientServiceModelSecurityTokenRequirement
  parent: System.ServiceModel.Security.Tokens
  isExternal: false
  name: RecipientServiceModelSecurityTokenRequirement
  nameWithType: RecipientServiceModelSecurityTokenRequirement
  fullName: System.ServiceModel.Security.Tokens.RecipientServiceModelSecurityTokenRequirement
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Selectors.SecurityTokenResolver
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: SecurityTokenResolver
  nameWithType: SecurityTokenResolver
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver
- uid: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenAuthenticator(System.IdentityModel.Selectors.SecurityTokenRequirement,System.IdentityModel.Selectors.SecurityTokenResolver@)
  parent: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager
  isExternal: false
  name: CreateSecurityTokenAuthenticator(SecurityTokenRequirement,SecurityTokenResolver)
  nameWithType: ServiceCredentialsSecurityTokenManager.CreateSecurityTokenAuthenticator(SecurityTokenRequirement,SecurityTokenResolver)
  fullName: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenAuthenticator(SecurityTokenRequirement,SecurityTokenResolver)
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: SecurityTokenRequirement
  nameWithType: SecurityTokenRequirement
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement
- uid: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenProvider(System.IdentityModel.Selectors.SecurityTokenRequirement)
  parent: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager
  isExternal: false
  name: CreateSecurityTokenProvider(SecurityTokenRequirement)
  nameWithType: ServiceCredentialsSecurityTokenManager.CreateSecurityTokenProvider(SecurityTokenRequirement)
  fullName: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenProvider(SecurityTokenRequirement)
- uid: System.IdentityModel.Selectors.SecurityTokenProvider
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: SecurityTokenProvider
  nameWithType: SecurityTokenProvider
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider
- uid: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenSerializer(System.IdentityModel.Selectors.SecurityTokenVersion)
  parent: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager
  isExternal: false
  name: CreateSecurityTokenSerializer(SecurityTokenVersion)
  nameWithType: ServiceCredentialsSecurityTokenManager.CreateSecurityTokenSerializer(SecurityTokenVersion)
  fullName: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenSerializer(SecurityTokenVersion)
- uid: System.IdentityModel.Selectors.SecurityTokenSerializer
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: SecurityTokenSerializer
  nameWithType: SecurityTokenSerializer
  fullName: System.IdentityModel.Selectors.SecurityTokenSerializer
- uid: System.IdentityModel.Selectors.SecurityTokenVersion
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: SecurityTokenVersion
  nameWithType: SecurityTokenVersion
  fullName: System.IdentityModel.Selectors.SecurityTokenVersion
- uid: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.GetIdentityOfSelf(System.IdentityModel.Selectors.SecurityTokenRequirement)
  parent: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager
  isExternal: false
  name: GetIdentityOfSelf(SecurityTokenRequirement)
  nameWithType: ServiceCredentialsSecurityTokenManager.GetIdentityOfSelf(SecurityTokenRequirement)
  fullName: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.GetIdentityOfSelf(SecurityTokenRequirement)
- uid: System.ServiceModel.EndpointIdentity
  parent: System.ServiceModel
  isExternal: true
  name: EndpointIdentity
  nameWithType: EndpointIdentity
  fullName: System.ServiceModel.EndpointIdentity
- uid: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.IsIssuedSecurityTokenRequirement(System.IdentityModel.Selectors.SecurityTokenRequirement)
  parent: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager
  isExternal: false
  name: IsIssuedSecurityTokenRequirement(SecurityTokenRequirement)
  nameWithType: ServiceCredentialsSecurityTokenManager.IsIssuedSecurityTokenRequirement(SecurityTokenRequirement)
  fullName: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.IsIssuedSecurityTokenRequirement(SecurityTokenRequirement)
- uid: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.ServiceCredentials
  parent: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager
  isExternal: false
  name: ServiceCredentials
  nameWithType: ServiceCredentialsSecurityTokenManager.ServiceCredentials
  fullName: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.ServiceCredentials
- uid: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.#ctor*
  parent: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager
  isExternal: false
  name: ServiceCredentialsSecurityTokenManager
  nameWithType: ServiceCredentialsSecurityTokenManager.ServiceCredentialsSecurityTokenManager
- uid: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecureConversationTokenAuthenticator*
  parent: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager
  isExternal: false
  name: CreateSecureConversationTokenAuthenticator
  nameWithType: ServiceCredentialsSecurityTokenManager.CreateSecureConversationTokenAuthenticator
- uid: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenAuthenticator*
  parent: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager
  isExternal: false
  name: CreateSecurityTokenAuthenticator
  nameWithType: ServiceCredentialsSecurityTokenManager.CreateSecurityTokenAuthenticator
- uid: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenProvider*
  parent: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager
  isExternal: false
  name: CreateSecurityTokenProvider
  nameWithType: ServiceCredentialsSecurityTokenManager.CreateSecurityTokenProvider
- uid: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenSerializer*
  parent: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager
  isExternal: false
  name: CreateSecurityTokenSerializer
  nameWithType: ServiceCredentialsSecurityTokenManager.CreateSecurityTokenSerializer
- uid: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.GetIdentityOfSelf*
  parent: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager
  isExternal: false
  name: GetIdentityOfSelf
  nameWithType: ServiceCredentialsSecurityTokenManager.GetIdentityOfSelf
- uid: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.IsIssuedSecurityTokenRequirement*
  parent: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager
  isExternal: false
  name: IsIssuedSecurityTokenRequirement
  nameWithType: ServiceCredentialsSecurityTokenManager.IsIssuedSecurityTokenRequirement
- uid: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.ServiceCredentials*
  parent: System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager
  isExternal: false
  name: ServiceCredentials
  nameWithType: ServiceCredentialsSecurityTokenManager.ServiceCredentials
