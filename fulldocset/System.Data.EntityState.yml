### YamlMime:ManagedReference
items:
- uid: System.Data.EntityState
  id: EntityState
  children:
  - System.Data.EntityState.Added
  - System.Data.EntityState.Deleted
  - System.Data.EntityState.Detached
  - System.Data.EntityState.Modified
  - System.Data.EntityState.Unchanged
  langs:
  - csharp
  name: EntityState
  nameWithType: EntityState
  fullName: System.Data.EntityState
  type: Enum
  summary: "엔터티 개체의 상태입니다."
  remarks: "개체 컨텍스트에서 변경 내용을 데이터 소스에 다시 저장 하는 개체의 상태를 알고 있어야 합니다. <xref:System.Data.Objects.ObjectStateEntry>개체는 EntityState 정보를 저장합니다.</xref:System.Data.Objects.ObjectStateEntry> `SaveChanges` 의 메서드는 <xref:System.Data.Objects.ObjectContext>엔터티는 컨텍스트에 연결 된 각 개체의 EntityState에 따라 데이터 소스를 업데이트를 처리 합니다.</xref:System.Data.Objects.ObjectContext> 자세한 내용은 참조 [만들기, 추가, 수정, 및 개체 삭제](http://msdn.microsoft.com/en-us/f76f1fad-c553-4b59-820b-89b3dec2fad1)합니다.       개체 컨텍스트의 개체의 상태에 <xref:System.Data.Objects.ObjectStateManager>.</xref:System.Data.Objects.ObjectStateManager> 관리 되는 개체의 상태를 확인 하려면 다음 중 하나를 호출 <xref:System.Data.Objects.ObjectStateManager>메서드: <xref:System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry%2A>, <xref:System.Data.Objects.ObjectStateManager.GetObjectStateEntry%2A>, 또는 <xref:System.Data.Objects.ObjectStateManager.GetObjectStateEntries%2A>.</xref:System.Data.Objects.ObjectStateManager.GetObjectStateEntries%2A> </xref:System.Data.Objects.ObjectStateManager.GetObjectStateEntry%2A> </xref:System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry%2A> </xref:System.Data.Objects.ObjectStateManager> <xref:System.Data.Objects.ObjectStateEntry.State%2A>의 속성은 <xref:System.Data.Objects.ObjectStateEntry>개체의 상태를 정의 합니다.</xref:System.Data.Objects.ObjectStateEntry> </xref:System.Data.Objects.ObjectStateEntry.State%2A>"
  syntax:
    content: >-
      [System.ComponentModel.DataAnnotations.BindableType(IsBindable=false)]

      [System.Flags]

      public enum EntityState
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.Data.EntityState.Added
  id: Added
  parent: System.Data.EntityState
  langs:
  - csharp
  name: Added
  nameWithType: EntityState.Added
  fullName: System.Data.EntityState.Added
  type: Field
  assemblies:
  - System.Data.Entity
  namespace: System.Data
  summary: "개체를 개체 컨텍스트에 추가 된 새로운, 및 <xref:System.Data.Objects.ObjectContext.SaveChanges*>메서드 호출 되지 않았습니다.</xref:System.Data.Objects.ObjectContext.SaveChanges*> 변경 된 후에 저장 됩니다 Unchanged로 개체 상태 변경. Added 상태의 개체에 원래 값이 없습니다는 <xref href=&quot;System.Data.Objects.ObjectStateEntry&quot;> </xref>합니다."
  syntax:
    content: Added
    return:
      type: System.Data.EntityState
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityState.Deleted
  id: Deleted
  parent: System.Data.EntityState
  langs:
  - csharp
  name: Deleted
  nameWithType: EntityState.Deleted
  fullName: System.Data.EntityState.Deleted
  type: Field
  assemblies:
  - System.Data.Entity
  namespace: System.Data
  summary: "개체가 개체 컨텍스트에서 삭제 되었습니다. 변경 된 후에 저장 됩니다 Detached 개체 상태 변경."
  syntax:
    content: Deleted
    return:
      type: System.Data.EntityState
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityState.Detached
  id: Detached
  parent: System.Data.EntityState
  langs:
  - csharp
  name: Detached
  nameWithType: EntityState.Detached
  fullName: System.Data.EntityState.Detached
  type: Field
  assemblies:
  - System.Data.Entity
  namespace: System.Data
  summary: "개체가 있지만 추적 되지 않습니다. 엔터티 및 만들어진 직후 개체 컨텍스트에 추가 되기 전에이 상태입니다. 엔터티는 또한이 상태에서는 호출 하 여 컨텍스트에서 제거 된 후의 <xref:System.Data.Objects.ObjectContext.Detach*>메서드 또는 사용 하 여 로드 되는 <xref:System.Data.Objects.MergeOption.NoTracking> <xref href=&quot;System.Data.Objects.MergeOption&quot;> </xref>.</xref:System.Data.Objects.MergeOption.NoTracking> </xref:System.Data.Objects.ObjectContext.Detach*> 없는 <xref href=&quot;System.Data.Objects.ObjectStateEntry&quot;> </xref> 분리 된 상태에 있는 개체와 연결 된 인스턴스."
  syntax:
    content: Detached
    return:
      type: System.Data.EntityState
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityState.Modified
  id: Modified
  parent: System.Data.EntityState
  langs:
  - csharp
  name: Modified
  nameWithType: EntityState.Modified
  fullName: System.Data.EntityState.Modified
  type: Field
  assemblies:
  - System.Data.Entity
  namespace: System.Data
  summary: "수정한 개체의 스칼라 속성 중 하나 및 <> </> *> 메서드 호출 되지 않았습니다. 수정 된 속성 변경 내용이 상태가 수정 될 때 변경 내용 추적 프록시가 없는 POCO 엔터티에서는 <> </> *> 메서드를 호출 합니다. 변경 된 후에 저장 됩니다 Unchanged로 개체 상태 변경."
  syntax:
    content: Modified
    return:
      type: System.Data.EntityState
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityState.Unchanged
  id: Unchanged
  parent: System.Data.EntityState
  langs:
  - csharp
  name: Unchanged
  nameWithType: EntityState.Unchanged
  fullName: System.Data.EntityState.Unchanged
  type: Field
  assemblies:
  - System.Data.Entity
  namespace: System.Data
  summary: "마지막으로 이후 또는 컨텍스트에 연결 된 이후 개체가 수정 되지 않았습니다 고 <xref:System.Data.Objects.ObjectContext.SaveChanges*>메서드를 호출 했습니다.</xref:System.Data.Objects.ObjectContext.SaveChanges*>"
  syntax:
    content: Unchanged
    return:
      type: System.Data.EntityState
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.Data.EntityState.Added
  parent: System.Data.EntityState
  isExternal: false
  name: Added
  nameWithType: EntityState.Added
  fullName: System.Data.EntityState.Added
- uid: System.Data.EntityState
  parent: System.Data
  isExternal: false
  name: EntityState
  nameWithType: EntityState
  fullName: System.Data.EntityState
- uid: System.Data.EntityState.Deleted
  parent: System.Data.EntityState
  isExternal: false
  name: Deleted
  nameWithType: EntityState.Deleted
  fullName: System.Data.EntityState.Deleted
- uid: System.Data.EntityState.Detached
  parent: System.Data.EntityState
  isExternal: false
  name: Detached
  nameWithType: EntityState.Detached
  fullName: System.Data.EntityState.Detached
- uid: System.Data.EntityState.Modified
  parent: System.Data.EntityState
  isExternal: false
  name: Modified
  nameWithType: EntityState.Modified
  fullName: System.Data.EntityState.Modified
- uid: System.Data.EntityState.Unchanged
  parent: System.Data.EntityState
  isExternal: false
  name: Unchanged
  nameWithType: EntityState.Unchanged
  fullName: System.Data.EntityState.Unchanged
