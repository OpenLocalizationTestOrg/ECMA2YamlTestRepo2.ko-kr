### YamlMime:ManagedReference
items:
- uid: System.IO.Compression.ZipArchiveEntry
  id: ZipArchiveEntry
  children:
  - System.IO.Compression.ZipArchiveEntry.Archive
  - System.IO.Compression.ZipArchiveEntry.CompressedLength
  - System.IO.Compression.ZipArchiveEntry.Delete
  - System.IO.Compression.ZipArchiveEntry.FullName
  - System.IO.Compression.ZipArchiveEntry.LastWriteTime
  - System.IO.Compression.ZipArchiveEntry.Length
  - System.IO.Compression.ZipArchiveEntry.Name
  - System.IO.Compression.ZipArchiveEntry.Open
  - System.IO.Compression.ZipArchiveEntry.ToString
  langs:
  - csharp
  name: ZipArchiveEntry
  nameWithType: ZipArchiveEntry
  fullName: System.IO.Compression.ZipArchiveEntry
  type: Class
  summary: "Zip 보관 파일 내의 압축 된 파일을 나타냅니다."
  remarks: "Zip 보관 파일 압축 된 각 파일에 대 한 항목이 포함 되어 있습니다. ZipArchiveEntry 클래스를 사용 하는 항목의 속성을 검사 하 고 열거나 항목을 삭제할 수 있습니다. 항목을 열 때 해당 압축 된 파일에 대 한 스트림에 작성 하 여 압축 된 파일을 수정할 수 있습니다.       Zip 보관 함이 있고 해당 파일 항목을 조작 하기 위한 메서드 분산 되는 세 가지 클래스: <xref:System.IO.Compression.ZipFile>, <xref:System.IO.Compression.ZipArchive>및 ZipArchiveEntry.</xref:System.IO.Compression.ZipArchive> </xref:System.IO.Compression.ZipFile>      | ... | 사용... |   |---------|----------|   | 디렉터리에서 zip 보관 파일 만들기 | <xref:System.IO.Compression.ZipFile.CreateFromDirectory%2A?displayProperty=fullName>|   | 디렉터리를 zip 보관 파일의 내용을 추출 | <xref:System.IO.Compression.ZipFile.ExtractToDirectory%2A?displayProperty=fullName>|   | 새 파일 기존 zip 보관 파일을 추가 | <xref:System.IO.Compression.ZipArchive.CreateEntry%2A?displayProperty=fullName>|   | Zip 보관 파일의 파일을 검색할 | <xref:System.IO.Compression.ZipArchive.GetEntry%2A?displayProperty=fullName>|   | Zip 보관 파일에 있는 파일의 모든 검색 | <xref:System.IO.Compression.ZipArchive.Entries%2A?displayProperty=fullName>|   | Zip 보관 파일에 포함 된 개별 파일에 스트림을 여 | <xref:System.IO.Compression.ZipArchiveEntry.Open%2A?displayProperty=fullName>|   | Zip 보관 파일에서 파일을 삭제 | <xref:System.IO.Compression.ZipArchiveEntry.Delete%2A?displayProperty=fullName>|       참조 하는 경우는 `System.IO.Compression.FileSystem` 어셈블리 프로젝트를 ZipArchiveEntry 클래스에 대 한 두 가지 확장 메서드를 액세스할 수 있습니다</xref:System.IO.Compression.ZipArchiveEntry.Delete%2A?displayProperty=fullName> </xref:System.IO.Compression.ZipArchiveEntry.Open%2A?displayProperty=fullName> </xref:System.IO.Compression.ZipArchive.Entries%2A?displayProperty=fullName> </xref:System.IO.Compression.ZipArchive.GetEntry%2A?displayProperty=fullName> </xref:System.IO.Compression.ZipArchive.CreateEntry%2A?displayProperty=fullName> </xref:System.IO.Compression.ZipFile.ExtractToDirectory%2A?displayProperty=fullName> </xref:System.IO.Compression.ZipFile.CreateFromDirectory%2A?displayProperty=fullName> 이러한 메서드는 <xref:System.IO.Compression.ZipFileExtensions.ExtractToFile%28System.IO.Compression.ZipArchiveEntry%2CSystem.String%29>및 <xref:System.IO.Compression.ZipFileExtensions.ExtractToFile%28System.IO.Compression.ZipArchiveEntry%2CSystem.String%2CSystem.Boolean%29>, 파일에 항목의 내용을 압축을 풀 수 있도록 하 고.</xref:System.IO.Compression.ZipFileExtensions.ExtractToFile%28System.IO.Compression.ZipArchiveEntry%2CSystem.String%2CSystem.Boolean%29> </xref:System.IO.Compression.ZipFileExtensions.ExtractToFile%28System.IO.Compression.ZipArchiveEntry%2CSystem.String%29> `System.IO.Compression.FileSystem` 어셈블리에서 사용할 수 없는 [!INCLUDE[win8](~/add/includes/ajax-current-ext-md.md)]합니다. [!INCLUDE[win8_appname_long](~/add/includes/win8-appname-long-md.md)] 응용 프로그램을 사용 하 여 보관 파일의 내용을 압축을 해제할 수 있습니다 <xref:System.IO.Compression.DeflateStream>또는 <xref:System.IO.Compression.GZipStream>, 하거나 사용할 수 있습니다는 [!INCLUDE[wrt](~/add/includes/wrt-md.md)] 형식 [압축 프로그램](http://go.microsoft.com/fwlink/p/?LinkId=246357) 및 [해제기](http://go.microsoft.com/fwlink/?LinkId=246358) 를 압축 하 고 파일의 압축 풀기.</xref:System.IO.Compression.GZipStream> </xref:System.IO.Compression.DeflateStream>"
  example:
  - "The first example shows how to create a new entry in a zip archive and write to it.  \n  \n [!code-cs[System.IO.Compression.ZipArchiveMode#1](~/add/codesnippet/csharp/t-system.io.compression._4_1.cs)]\n [!code-vb[System.IO.Compression.ZipArchiveMode#1](~/add/codesnippet/visualbasic/t-system.io.compression._4_1.vb)]  \n  \n The second example shows how to use the <xref:System.IO.Compression.ZipFileExtensions.ExtractToFile%28System.IO.Compression.ZipArchiveEntry%2CSystem.String%29> extension method. You must reference the `System.IO.Compression.FileSystem` assembly in your project for the code to execute.  \n  \n [!code-cs[System.IO.Compression.ZipArchive#1](~/add/codesnippet/csharp/t-system.io.compression._4_2.cs)]\n [!code-vb[System.IO.Compression.ZipArchive#1](~/add/codesnippet/visualbasic/t-system.io.compression._4_2.vb)]"
  syntax:
    content: public class ZipArchiveEntry
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IO.Compression.ZipArchiveEntry.Archive
  id: Archive
  parent: System.IO.Compression.ZipArchiveEntry
  langs:
  - csharp
  name: Archive
  nameWithType: ZipArchiveEntry.Archive
  fullName: System.IO.Compression.ZipArchiveEntry.Archive
  type: Property
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: "항목이 속하는 zip 보관 파일을 가져옵니다."
  syntax:
    content: public System.IO.Compression.ZipArchive Archive { get; }
    return:
      type: System.IO.Compression.ZipArchive
      description: "항목이 속하는 zip 보관 파일 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 항목 삭제 된 경우."
  overload: System.IO.Compression.ZipArchiveEntry.Archive*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Compression.ZipArchiveEntry.CompressedLength
  id: CompressedLength
  parent: System.IO.Compression.ZipArchiveEntry
  langs:
  - csharp
  name: CompressedLength
  nameWithType: ZipArchiveEntry.CompressedLength
  fullName: System.IO.Compression.ZipArchiveEntry.CompressedLength
  type: Property
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: "Zip 보관 파일에 있는 항목의 압축 된 크기를 가져옵니다."
  remarks: "모드로 설정 된 경우이 속성을 검색할 수 없습니다 <xref:System.IO.Compression.ZipArchiveMode>는 모드가 설정 되어 또는 <xref:System.IO.Compression.ZipArchiveMode>항목 열었습니다.</xref:System.IO.Compression.ZipArchiveMode> </xref:System.IO.Compression.ZipArchiveMode>"
  example:
  - "The following example shows how to retrieve entries in a zip archive, and evaluate the properties of the entries. It uses the <xref:System.IO.Compression.ZipArchiveEntry.Name%2A> property to display the name of the entry, and the <xref:System.IO.Compression.ZipArchiveEntry.Length%2A> and CompressedLength properties to calculate how much the file was compressed.  \n  \n [!code-cs[System.IO.Compression.ZipArchiveEntry#1](~/add/codesnippet/csharp/p-system.io.compression._2_1.cs)]\n [!code-vb[System.IO.Compression.ZipArchiveEntry#1](~/add/codesnippet/visualbasic/p-system.io.compression._2_1.vb)]"
  syntax:
    content: public long CompressedLength { get; }
    return:
      type: System.Int64
      description: "Zip 보관 파일에 있는 항목의 압축 된 크기입니다."
  overload: System.IO.Compression.ZipArchiveEntry.CompressedLength*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "항목이 수정 되었습니다 속성의 값을 사용할 수 없습니다."
  platform:
  - net462
- uid: System.IO.Compression.ZipArchiveEntry.Delete
  id: Delete
  parent: System.IO.Compression.ZipArchiveEntry
  langs:
  - csharp
  name: Delete()
  nameWithType: ZipArchiveEntry.Delete()
  fullName: System.IO.Compression.ZipArchiveEntry.Delete()
  type: Method
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: "Zip 보관 파일에서 항목을 삭제 합니다."
  syntax:
    content: public void Delete ();
    parameters: []
  overload: System.IO.Compression.ZipArchiveEntry.Delete*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "항목이 이미 읽거나 쓰기 위해 열려 있습니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "이 항목에 대 한 zip 보관 파일 모드에서 아닌 열린 <xref href=&quot;System.IO.Compression.ZipArchiveMode&quot;> </xref>합니다."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "이 항목에 대 한 zip 보관 파일이 삭제 되었습니다."
  platform:
  - net462
- uid: System.IO.Compression.ZipArchiveEntry.FullName
  id: FullName
  parent: System.IO.Compression.ZipArchiveEntry
  langs:
  - csharp
  name: FullName
  nameWithType: ZipArchiveEntry.FullName
  fullName: System.IO.Compression.ZipArchiveEntry.FullName
  type: Property
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: "Zip 보관 파일에 있는 항목의 상대 경로 가져옵니다."
  remarks: "The FullName property contains the relative path, including the subdirectory hierarchy, of an entry in a zip archive. (In contrast, the <xref:System.IO.Compression.ZipArchiveEntry.Name%2A> property contains only the name of the entry and does not include the subdirectory hierarchy.) For example, if you create two entries in a zip archive by using the <xref:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile%2A> method and provide `NewEntry.txt` as the name for the first entry and `AddedFolder\\\\NewEntry.txt` for the second entry, both entries will have `NewEntry.txt` in the <xref:System.IO.Compression.ZipArchiveEntry.Name%2A> property. The first entry will also have `NewEntry.txt` in the FullName property, but the second entry will have `AddedFolder\\\\NewEntry.txt` in the FullName property.  \n  \n You can specify any string as the path of an entry, including strings that specify invalid and absolute paths. Therefore, the FullName property might contain a value that is not correctly formatted. An invalid or absolute path might result in an exception when you extract the contents of the zip archive."
  example:
  - "The following example shows how to iterate through the contents of a .zip file, and extract files that contain the .txt extension.  \n  \n [!code-cs[System.IO.Compression.ZipArchive#1](~/add/codesnippet/csharp/p-system.io.compression._0_1.cs)]\n [!code-vb[System.IO.Compression.ZipArchive#1](~/add/codesnippet/visualbasic/p-system.io.compression._0_1.vb)]"
  syntax:
    content: public string FullName { get; }
    return:
      type: System.String
      description: "Zip 보관 파일에 있는 항목의 상대 경로입니다."
  overload: System.IO.Compression.ZipArchiveEntry.FullName*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Compression.ZipArchiveEntry.LastWriteTime
  id: LastWriteTime
  parent: System.IO.Compression.ZipArchiveEntry
  langs:
  - csharp
  name: LastWriteTime
  nameWithType: ZipArchiveEntry.LastWriteTime
  fullName: System.IO.Compression.ZipArchiveEntry.LastWriteTime
  type: Property
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: "Zip 보관 파일에 항목을 변경한 마지막 시간을 가져오거나 설정 합니다."
  remarks: "호출 하 여 기존 파일에서 새 항목을 만들 하는 경우는 <xref:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile%2A>메서드 항목에 대 한 LastWriteTime 속성이 파일을 수정한 마지막으로 자동 설정 됩니다.</xref:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile%2A> 항목을 만들 때는 새 프로그래밍 방식으로 호출 하 여는 <xref:System.IO.Compression.ZipArchive.CreateEntry%2A>메서드 항목에 대 한 LastWriteTime 속성이 실행의 시간으로 자동 설정 됩니다.</xref:System.IO.Compression.ZipArchive.CreateEntry%2A> 항목을 수정 하는 경우 최신 변경의 시간을 반영 하도록 값을 구하려는 경우 LastWriteTime 속성이 명시적으로 설정 해야 합니다.       이 속성을 설정 하는 경우는 <xref:System.DateTimeOffset>값 zip 보관 파일에만 적용 되는 타임 스탬프 형식으로 변환 됩니다.</xref:System.DateTimeOffset> 이 형식은&2; 초의 해상도 지원합니다. 가장 빠른 허용 된 값은 1980 년 1 월 1 0:00:00 (자정)입니다. 최근 허용 된 값은 2107 12 월 31 일 23시 59분: 58 (1 초 전에 자정)입니다. 마지막으로 쓴 시간에 대 한 값이 잘못 되었으면 속성 반환 1980 기본값은 1 월 1 일 0:00:00 (자정)입니다."
  example:
  - "The following example shows how to open an entry in a zip archive, modify it, and set the LastWriteTime property to the current time.  \n  \n [!code-cs[System.IO.Compression.ZipArchiveEntry#2](~/add/codesnippet/csharp/p-system.io.compression._3_1.cs)]\n [!code-vb[System.IO.Compression.ZipArchiveEntry#2](~/add/codesnippet/visualbasic/p-system.io.compression._3_1.vb)]"
  syntax:
    content: public DateTimeOffset LastWriteTime { get; set; }
    return:
      type: System.DateTimeOffset
      description: "Zip 보관 파일의 항목이 마지막으로 변경 되었습니다."
  overload: System.IO.Compression.ZipArchiveEntry.LastWriteTime*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Zip 보관 파일 항목에 대 한 이므로이 속성을 설정 하려는 시도가 실패 했습니다 <xref href=&quot;System.IO.Compression.ZipArchiveMode&quot;> </xref> 모드입니다."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The archive mode is set to <xref href=\"System.IO.Compression.ZipArchiveMode\"></xref>.  \n  \n \\- or -  \n  \n The archive mode is set to <xref href=\"System.IO.Compression.ZipArchiveMode\"></xref> and the entry has been opened."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "이 속성은 이전 1980 년 1 월 1 하는 값을 설정 하려고 했습니다 0:00:00 (자정) 또는 이후 2107 12 월 31 일 23시 59분: 58 (1 초 전에 자정)입니다."
  platform:
  - net462
- uid: System.IO.Compression.ZipArchiveEntry.Length
  id: Length
  parent: System.IO.Compression.ZipArchiveEntry
  langs:
  - csharp
  name: Length
  nameWithType: ZipArchiveEntry.Length
  fullName: System.IO.Compression.ZipArchiveEntry.Length
  type: Property
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: "Zip 보관 파일에 있는 항목의 압축 되지 않은 크기를 가져옵니다."
  remarks: "모드로 설정 된 경우이 속성을 검색할 수 없습니다 <xref:System.IO.Compression.ZipArchiveMode>는 모드가 설정 되어 또는 <xref:System.IO.Compression.ZipArchiveMode>항목 열었습니다.</xref:System.IO.Compression.ZipArchiveMode> </xref:System.IO.Compression.ZipArchiveMode>"
  example:
  - "The following example shows how to retrieve entries from a zip archive, and evaluate the properties of the entries. It uses the <xref:System.IO.Compression.ZipArchiveEntry.Name%2A> property to display the name of the entry, and the Length and <xref:System.IO.Compression.ZipArchiveEntry.CompressedLength%2A> properties to calculate how much the file was compressed.  \n  \n [!code-cs[System.IO.Compression.ZipArchiveEntry#1](~/add/codesnippet/csharp/p-system.io.compression._1_1.cs)]\n [!code-vb[System.IO.Compression.ZipArchiveEntry#1](~/add/codesnippet/visualbasic/p-system.io.compression._1_1.vb)]"
  syntax:
    content: public long Length { get; }
    return:
      type: System.Int64
      description: "Zip 보관 파일에 있는 항목의 압축 되지 않은 크기입니다."
  overload: System.IO.Compression.ZipArchiveEntry.Length*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "항목이 수정 되었습니다 속성의 값을 사용할 수 없습니다."
  platform:
  - net462
- uid: System.IO.Compression.ZipArchiveEntry.Name
  id: Name
  parent: System.IO.Compression.ZipArchiveEntry
  langs:
  - csharp
  name: Name
  nameWithType: ZipArchiveEntry.Name
  fullName: System.IO.Compression.ZipArchiveEntry.Name
  type: Property
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: "Zip 보관 파일에 있는 항목의 파일 이름을 가져옵니다."
  remarks: "부분을 포함 하는 Name 속성은 <xref:System.IO.Compression.ZipArchiveEntry.FullName%2A>마지막 디렉터리 구분 문자 다음에 나오는 속성 (\\\\), 하위 디렉터리 계층 구조를 포함 하지 않습니다.</xref:System.IO.Compression.ZipArchiveEntry.FullName%2A> 예를 사용 하 여 zip 보관 파일에 두 항목을 만들 경우는 <xref:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile%2A>메서드를 제공 하 고 `NewEntry.txt` 첫 번째 항목에 대 한 이름으로 및 `AddedFolder\\ ewEntry.txt` 두 번째 항목에 대 한 두 항목이 모두 갖습니다 `NewEntry.txt` Name 속성에.</xref:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile%2A> 첫 번째 항목에는 `NewEntry.txt` 에 <xref:System.IO.Compression.ZipArchiveEntry.FullName%2A>속성에 있지만 두 번째 항목 `AddedFolder\\ ewEntry.txt` 에 <xref:System.IO.Compression.ZipArchiveEntry.FullName%2A>속성.</xref:System.IO.Compression.ZipArchiveEntry.FullName%2A> </xref:System.IO.Compression.ZipArchiveEntry.FullName%2A>"
  example:
  - "The following example shows how to retrieve entries from a zip archive and evaluate the properties of the entries. It uses the Name property to display the name of the entry, and the <xref:System.IO.Compression.ZipArchiveEntry.Length%2A> and <xref:System.IO.Compression.ZipArchiveEntry.CompressedLength%2A> properties to calculate how much the file was compressed.  \n  \n [!code-cs[System.IO.Compression.ZipArchiveEntry#1](~/add/codesnippet/csharp/p-system.io.compression._4_1.cs)]\n [!code-vb[System.IO.Compression.ZipArchiveEntry#1](~/add/codesnippet/visualbasic/p-system.io.compression._4_1.vb)]"
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "Zip 보관 파일에 있는 항목의 파일 이름입니다."
  overload: System.IO.Compression.ZipArchiveEntry.Name*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Compression.ZipArchiveEntry.Open
  id: Open
  parent: System.IO.Compression.ZipArchiveEntry
  langs:
  - csharp
  name: Open()
  nameWithType: ZipArchiveEntry.Open()
  fullName: System.IO.Compression.ZipArchiveEntry.Open()
  type: Method
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: "Zip 보관 파일에서 항목을 엽니다."
  remarks: "Zip 보관 파일의 항목에 대 한 스트림에 액세스 하려면이 메서드를 사용 합니다. 스트림을 검색 한 후에서 읽을 하거나 스트림에 쓸 수 있습니다. 스트림에 쓸 때 항목을 수정 zip 보관 파일에 표시 됩니다."
  example:
  - "The following example shows how to create a new entry, open it with the Open method, and write to the stream.  \n  \n [!code-cs[System.IO.Compression.ZipArchiveMode#1](~/add/codesnippet/csharp/m-system.io.compression._0_1.cs)]\n [!code-vb[System.IO.Compression.ZipArchiveMode#1](~/add/codesnippet/visualbasic/m-system.io.compression._0_1.vb)]"
  syntax:
    content: public System.IO.Stream Open ();
    parameters: []
    return:
      type: System.IO.Stream
      description: "항목의 내용을 나타내는 스트림."
  overload: System.IO.Compression.ZipArchiveEntry.Open*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "항목이 이미 현재 쓰기용으로 열려 있습니다.       -또는-항목이 보관에서 삭제 되었습니다.       -또는-이 항목에 대 한 보관으로 열렸으면는 <xref href=&quot;System.IO.Compression.ZipArchiveMode&quot;> </xref> 모드 및이 항목이 이미에 기록 되었습니다."
  - type: System.IO.InvalidDataException
    commentId: T:System.IO.InvalidDataException
    description: "이 항목은 하나는 보관 파일에서 누락 또는 손상 되어 읽을 수 없습니다.       -또는-항목이 지원 되지 않는 압축 방법을 사용 하 여 압축 되었습니다."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "이 항목에 대 한 zip 보관 파일이 삭제 되었습니다."
  platform:
  - net462
- uid: System.IO.Compression.ZipArchiveEntry.ToString
  id: ToString
  parent: System.IO.Compression.ZipArchiveEntry
  langs:
  - csharp
  name: ToString()
  nameWithType: ZipArchiveEntry.ToString()
  fullName: System.IO.Compression.ZipArchiveEntry.ToString()
  type: Method
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: "Zip 보관 파일에 있는 항목의 상대 경로 검색합니다."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "에 저장 된 값은 항목의 상대 경로 <xref:System.IO.Compression.ZipArchiveEntry.FullName*>속성.</xref:System.IO.Compression.ZipArchiveEntry.FullName*>"
  overload: System.IO.Compression.ZipArchiveEntry.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.IO.InvalidDataException
  isExternal: true
  name: System.IO.InvalidDataException
- uid: System.IO.Compression.ZipArchiveEntry.Archive
  parent: System.IO.Compression.ZipArchiveEntry
  isExternal: false
  name: Archive
  nameWithType: ZipArchiveEntry.Archive
  fullName: System.IO.Compression.ZipArchiveEntry.Archive
- uid: System.IO.Compression.ZipArchive
  parent: System.IO.Compression
  isExternal: false
  name: ZipArchive
  nameWithType: ZipArchive
  fullName: System.IO.Compression.ZipArchive
- uid: System.IO.Compression.ZipArchiveEntry.CompressedLength
  parent: System.IO.Compression.ZipArchiveEntry
  isExternal: false
  name: CompressedLength
  nameWithType: ZipArchiveEntry.CompressedLength
  fullName: System.IO.Compression.ZipArchiveEntry.CompressedLength
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.IO.Compression.ZipArchiveEntry.Delete
  parent: System.IO.Compression.ZipArchiveEntry
  isExternal: false
  name: Delete()
  nameWithType: ZipArchiveEntry.Delete()
  fullName: System.IO.Compression.ZipArchiveEntry.Delete()
- uid: System.IO.Compression.ZipArchiveEntry.FullName
  parent: System.IO.Compression.ZipArchiveEntry
  isExternal: false
  name: FullName
  nameWithType: ZipArchiveEntry.FullName
  fullName: System.IO.Compression.ZipArchiveEntry.FullName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.Compression.ZipArchiveEntry.LastWriteTime
  parent: System.IO.Compression.ZipArchiveEntry
  isExternal: false
  name: LastWriteTime
  nameWithType: ZipArchiveEntry.LastWriteTime
  fullName: System.IO.Compression.ZipArchiveEntry.LastWriteTime
- uid: System.DateTimeOffset
  parent: System
  isExternal: true
  name: DateTimeOffset
  nameWithType: DateTimeOffset
  fullName: System.DateTimeOffset
- uid: System.IO.Compression.ZipArchiveEntry.Length
  parent: System.IO.Compression.ZipArchiveEntry
  isExternal: false
  name: Length
  nameWithType: ZipArchiveEntry.Length
  fullName: System.IO.Compression.ZipArchiveEntry.Length
- uid: System.IO.Compression.ZipArchiveEntry.Name
  parent: System.IO.Compression.ZipArchiveEntry
  isExternal: false
  name: Name
  nameWithType: ZipArchiveEntry.Name
  fullName: System.IO.Compression.ZipArchiveEntry.Name
- uid: System.IO.Compression.ZipArchiveEntry.Open
  parent: System.IO.Compression.ZipArchiveEntry
  isExternal: false
  name: Open()
  nameWithType: ZipArchiveEntry.Open()
  fullName: System.IO.Compression.ZipArchiveEntry.Open()
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.IO.Compression.ZipArchiveEntry.ToString
  parent: System.IO.Compression.ZipArchiveEntry
  isExternal: false
  name: ToString()
  nameWithType: ZipArchiveEntry.ToString()
  fullName: System.IO.Compression.ZipArchiveEntry.ToString()
- uid: System.IO.Compression.ZipArchiveEntry.Archive*
  parent: System.IO.Compression.ZipArchiveEntry
  isExternal: false
  name: Archive
  nameWithType: ZipArchiveEntry.Archive
- uid: System.IO.Compression.ZipArchiveEntry.CompressedLength*
  parent: System.IO.Compression.ZipArchiveEntry
  isExternal: false
  name: CompressedLength
  nameWithType: ZipArchiveEntry.CompressedLength
- uid: System.IO.Compression.ZipArchiveEntry.Delete*
  parent: System.IO.Compression.ZipArchiveEntry
  isExternal: false
  name: Delete
  nameWithType: ZipArchiveEntry.Delete
- uid: System.IO.Compression.ZipArchiveEntry.FullName*
  parent: System.IO.Compression.ZipArchiveEntry
  isExternal: false
  name: FullName
  nameWithType: ZipArchiveEntry.FullName
- uid: System.IO.Compression.ZipArchiveEntry.LastWriteTime*
  parent: System.IO.Compression.ZipArchiveEntry
  isExternal: false
  name: LastWriteTime
  nameWithType: ZipArchiveEntry.LastWriteTime
- uid: System.IO.Compression.ZipArchiveEntry.Length*
  parent: System.IO.Compression.ZipArchiveEntry
  isExternal: false
  name: Length
  nameWithType: ZipArchiveEntry.Length
- uid: System.IO.Compression.ZipArchiveEntry.Name*
  parent: System.IO.Compression.ZipArchiveEntry
  isExternal: false
  name: Name
  nameWithType: ZipArchiveEntry.Name
- uid: System.IO.Compression.ZipArchiveEntry.Open*
  parent: System.IO.Compression.ZipArchiveEntry
  isExternal: false
  name: Open
  nameWithType: ZipArchiveEntry.Open
- uid: System.IO.Compression.ZipArchiveEntry.ToString*
  parent: System.IO.Compression.ZipArchiveEntry
  isExternal: false
  name: ToString
  nameWithType: ZipArchiveEntry.ToString
