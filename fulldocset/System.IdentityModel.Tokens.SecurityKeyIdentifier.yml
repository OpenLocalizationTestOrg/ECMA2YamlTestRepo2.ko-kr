### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier
  id: SecurityKeyIdentifier
  children:
  - System.IdentityModel.Tokens.SecurityKeyIdentifier.#ctor
  - System.IdentityModel.Tokens.SecurityKeyIdentifier.#ctor(System.IdentityModel.Tokens.SecurityKeyIdentifierClause[])
  - System.IdentityModel.Tokens.SecurityKeyIdentifier.Add(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  - System.IdentityModel.Tokens.SecurityKeyIdentifier.CanCreateKey
  - System.IdentityModel.Tokens.SecurityKeyIdentifier.Count
  - System.IdentityModel.Tokens.SecurityKeyIdentifier.CreateKey
  - System.IdentityModel.Tokens.SecurityKeyIdentifier.Find``1
  - System.IdentityModel.Tokens.SecurityKeyIdentifier.GetEnumerator
  - System.IdentityModel.Tokens.SecurityKeyIdentifier.IsReadOnly
  - System.IdentityModel.Tokens.SecurityKeyIdentifier.Item(System.Int32)
  - System.IdentityModel.Tokens.SecurityKeyIdentifier.MakeReadOnly
  - System.IdentityModel.Tokens.SecurityKeyIdentifier.System#Collections#IEnumerable#GetEnumerator
  - System.IdentityModel.Tokens.SecurityKeyIdentifier.ToString
  - System.IdentityModel.Tokens.SecurityKeyIdentifier.TryFind``1(``0@)
  langs:
  - csharp
  name: SecurityKeyIdentifier
  nameWithType: SecurityKeyIdentifier
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier
  type: Class
  summary: "키 식별자를 나타냅니다."
  remarks: "일반적으로 SecurityKeyIdentifier 사용 되지 않습니다, 아닌 다른 사용자 지정 보안 토큰 서비스를 만들 때. 보안 토큰 서비스에서 보안 토큰을 반환할 때 발급 된 보안 토큰 연결 되 고 연결 되지 않은 보안 토큰에 대 한 참조를 포함 합니다. 연결 된 참조는 SOAP 메시지의 보안 헤더에 포함 된 보안 토큰을 연결 되지 않은 참조는 SOAP 메시지의 보안 헤더에 포함 되지 않은 보안 토큰입니다. 일반적으로 이러한 참조는 발급 된 보안 토큰의 신뢰성을 확인 합니다. 이러한 참조는 <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause>클래스</xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause> 에서 파생 된 클래스로 표현 됩니다. SecurityKeyIdentifier 클래스는이 참조의 컬렉션을 포함합니다."
  syntax:
    content: 'public class SecurityKeyIdentifier : System.Collections.Generic.IEnumerable<System.IdentityModel.Tokens.SecurityKeyIdentifierClause>'
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IEnumerable<System.IdentityModel.Tokens.SecurityKeyIdentifierClause>
  inheritedMembers: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.#ctor
  id: '#ctor'
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  langs:
  - csharp
  name: SecurityKeyIdentifier()
  nameWithType: SecurityKeyIdentifier.SecurityKeyIdentifier()
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.SecurityKeyIdentifier()
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifier&quot;> </xref> 클래스입니다."
  syntax:
    content: public SecurityKeyIdentifier ();
    parameters: []
  overload: System.IdentityModel.Tokens.SecurityKeyIdentifier.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.#ctor(System.IdentityModel.Tokens.SecurityKeyIdentifierClause[])
  id: '#ctor(System.IdentityModel.Tokens.SecurityKeyIdentifierClause[])'
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  langs:
  - csharp
  name: SecurityKeyIdentifier(SecurityKeyIdentifierClause[])
  nameWithType: SecurityKeyIdentifier.SecurityKeyIdentifier(SecurityKeyIdentifierClause[])
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.SecurityKeyIdentifier(SecurityKeyIdentifierClause[])
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifier&quot;> </xref> 클래스는 지정 된 키 식별자 절을 사용 합니다."
  syntax:
    content: public SecurityKeyIdentifier (System.IdentityModel.Tokens.SecurityKeyIdentifierClause[] clauses);
    parameters:
    - id: clauses
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause[]
      description: "배열을 <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifierClause&quot;> </xref> 키 식별자 절이 들어 있는입니다."
  overload: System.IdentityModel.Tokens.SecurityKeyIdentifier.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>clauses</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.Add(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  id: Add(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  langs:
  - csharp
  name: Add(SecurityKeyIdentifierClause)
  nameWithType: SecurityKeyIdentifier.Add(SecurityKeyIdentifierClause)
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.Add(SecurityKeyIdentifierClause)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "목록의 끝에는 키 식별자 절을 추가합니다."
  syntax:
    content: public void Add (System.IdentityModel.Tokens.SecurityKeyIdentifierClause clause);
    parameters:
    - id: clause
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifierClause&quot;> </xref> 목록의 끝에 추가할 수 있습니다."
  overload: System.IdentityModel.Tokens.SecurityKeyIdentifier.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>clause</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "값은 <xref:System.IdentityModel.Tokens.SecurityKeyIdentifier.IsReadOnly*>속성은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>.</xref:System.IdentityModel.Tokens.SecurityKeyIdentifier.IsReadOnly*>"
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.CanCreateKey
  id: CanCreateKey
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  langs:
  - csharp
  name: CanCreateKey
  nameWithType: SecurityKeyIdentifier.CanCreateKey
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.CanCreateKey
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "키 식별자 절 중 하나 이상에 대 한 키를 만들 수 있는지 여부를 나타내는 값을 가져옵니다."
  syntax:
    content: public bool CanCreateKey { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>키 식별자 절이; 중 하나 이상에 대 한 키를 만들 수 있는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.IdentityModel.Tokens.SecurityKeyIdentifier.CanCreateKey*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.Count
  id: Count
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  langs:
  - csharp
  name: Count
  nameWithType: SecurityKeyIdentifier.Count
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.Count
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "키 식별자 절의 수를 가져옵니다."
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "키 식별자 절의 수입니다."
  overload: System.IdentityModel.Tokens.SecurityKeyIdentifier.Count*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.CreateKey
  id: CreateKey
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  langs:
  - csharp
  name: CreateKey()
  nameWithType: SecurityKeyIdentifier.CreateKey()
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.CreateKey()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "키 식별자 절 중 하나에 대 한 키를 만듭니다."
  remarks: "<xref:System.IdentityModel.Tokens.SecurityKey>반환 된 키를 만들 수 있는 컬렉션의 첫 번째 키 식별자 절에 대 한.</xref:System.IdentityModel.Tokens.SecurityKey>"
  syntax:
    content: public System.IdentityModel.Tokens.SecurityKey CreateKey ();
    parameters: []
    return:
      type: System.IdentityModel.Tokens.SecurityKey
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityKey&quot;> </xref> 만든된 키를 나타내는입니다."
  overload: System.IdentityModel.Tokens.SecurityKeyIdentifier.CreateKey*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "키 식별자 절 중 하나에 대 한 키를 만들 수 없습니다."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.Find``1
  id: Find``1
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  langs:
  - csharp
  name: Find()
  nameWithType: SecurityKeyIdentifier.Find()
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.Find()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  syntax:
    content: 'public TClause Find<TClause> () where TClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause;'
    parameters: []
    return:
      type: TClause
      description: "추가할 수 있습니다."
  overload: System.IdentityModel.Tokens.SecurityKeyIdentifier.Find<TClause>*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.GetEnumerator
  id: GetEnumerator
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: SecurityKeyIdentifier.GetEnumerator()
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.GetEnumerator()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "키 식별자 절의 컬렉션을 반복 하는 열거자를 반환 합니다."
  syntax:
    content: public System.Collections.Generic.IEnumerator<System.IdentityModel.Tokens.SecurityKeyIdentifierClause> GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerator{System.IdentityModel.Tokens.SecurityKeyIdentifierClause}
      description: "A &lt;xref:System.Collections.Generic.List%601.Enumerator&gt; 형식의 <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifierClause&quot;> </xref> 컬렉션에 대 한 합니다."
  overload: System.IdentityModel.Tokens.SecurityKeyIdentifier.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.IsReadOnly
  id: IsReadOnly
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: SecurityKeyIdentifier.IsReadOnly
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.IsReadOnly
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "이 인스턴스의 속성이 읽기 전용인 지 여부를 나타내는 값을 가져옵니다."
  remarks: "이 인스턴스를는 <xref:System.IdentityModel.Tokens.SecurityKeyIdentifier>클래스 읽기 전용 호출은 <xref:System.IdentityModel.Tokens.SecurityKeyIdentifier.MakeReadOnly%2A>메서드.</xref:System.IdentityModel.Tokens.SecurityKeyIdentifier.MakeReadOnly%2A> </xref:System.IdentityModel.Tokens.SecurityKeyIdentifier>"
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>이 인스턴스의 속성이 읽기 전용 이면 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.IdentityModel.Tokens.SecurityKeyIdentifier.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: SecurityKeyIdentifier.Item(Int32)
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.Item(Int32)
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "지정된 된 인덱스에서 키 식별자 절을 가져옵니다."
  syntax:
    content: public System.IdentityModel.Tokens.SecurityKeyIdentifierClause this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "컬렉션의 키 식별자 절에서 키 식별자 절의&0;부터 시작 하는 인덱스입니다."
    return:
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifierClause&quot;> </xref> 지정 된 인덱스입니다."
  overload: System.IdentityModel.Tokens.SecurityKeyIdentifier.Item*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>0 보다 작습니다.       -또는- <code>index</code> 보다 크거나 같으면 <xref:System.IdentityModel.Tokens.SecurityKeyIdentifier.Count*>합니다."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.MakeReadOnly
  id: MakeReadOnly
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  langs:
  - csharp
  name: MakeReadOnly()
  nameWithType: SecurityKeyIdentifier.MakeReadOnly()
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.MakeReadOnly()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "이 인스턴스를 읽기 전용으로 설정 하면 됩니다."
  remarks: "MakeReadOnly 메서드를 호출 하는 경우는 <xref:System.IdentityModel.Tokens.SecurityKeyIdentifier.IsReadOnly%2A>속성이 `true` 이 인스턴스의 속성을 더 이상 설정할 수 없습니다.</xref:System.IdentityModel.Tokens.SecurityKeyIdentifier.IsReadOnly%2A> 예를 들어,이 개체에는 키 식별자 절을 추가할 수 없습니다."
  syntax:
    content: public void MakeReadOnly ();
    parameters: []
  overload: System.IdentityModel.Tokens.SecurityKeyIdentifier.MakeReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: SecurityKeyIdentifier.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "키 식별자 절의 컬렉션을 반복 하는 열거자를 반환 합니다."
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "A &lt;xref:System.Collections.Generic.IEnumerator%601&gt; 컬렉션을 반복에 사용할 수 있는 합니다."
  overload: System.IdentityModel.Tokens.SecurityKeyIdentifier.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.ToString
  id: ToString
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  langs:
  - csharp
  name: ToString()
  nameWithType: SecurityKeyIdentifier.ToString()
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.ToString()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "현재 개체를 반환합니다."
  remarks: "ToString 메서드 키 식별자의 모든 키 식별자 절에 대 한 세부 정보를 반환합니다."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "현재 개체입니다."
  overload: System.IdentityModel.Tokens.SecurityKeyIdentifier.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.TryFind``1(``0@)
  id: TryFind``1(``0@)
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  langs:
  - csharp
  name: TryFind(TClause)
  nameWithType: SecurityKeyIdentifier.TryFind(TClause)
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.TryFind(TClause)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  syntax:
    content: 'public bool TryFind<TClause> (out TClause clause) where TClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause;'
    parameters:
    - id: clause
      type: TClause
      description: "추가할 수 있습니다."
    return:
      type: System.Boolean
      description: "추가할 수 있습니다."
  overload: System.IdentityModel.Tokens.SecurityKeyIdentifier.TryFind<TClause>*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.#ctor
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: SecurityKeyIdentifier()
  nameWithType: SecurityKeyIdentifier.SecurityKeyIdentifier()
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.SecurityKeyIdentifier()
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.#ctor(System.IdentityModel.Tokens.SecurityKeyIdentifierClause[])
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: SecurityKeyIdentifier(SecurityKeyIdentifierClause[])
  nameWithType: SecurityKeyIdentifier.SecurityKeyIdentifier(SecurityKeyIdentifierClause[])
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.SecurityKeyIdentifier(SecurityKeyIdentifierClause[])
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause[]
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKeyIdentifierClause
  nameWithType: SecurityKeyIdentifierClause
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause[]
  spec.csharp:
  - uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
    name: SecurityKeyIdentifierClause
    nameWithType: SecurityKeyIdentifierClause
    fullName: SecurityKeyIdentifierClause[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.Add(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: Add(SecurityKeyIdentifierClause)
  nameWithType: SecurityKeyIdentifier.Add(SecurityKeyIdentifierClause)
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.Add(SecurityKeyIdentifierClause)
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKeyIdentifierClause
  nameWithType: SecurityKeyIdentifierClause
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.CanCreateKey
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: CanCreateKey
  nameWithType: SecurityKeyIdentifier.CanCreateKey
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.CanCreateKey
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.Count
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: Count
  nameWithType: SecurityKeyIdentifier.Count
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.Count
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.CreateKey
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: CreateKey()
  nameWithType: SecurityKeyIdentifier.CreateKey()
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.CreateKey()
- uid: System.IdentityModel.Tokens.SecurityKey
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKey
  nameWithType: SecurityKey
  fullName: System.IdentityModel.Tokens.SecurityKey
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.Find``1
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: Find()
  nameWithType: SecurityKeyIdentifier.Find()
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.Find()
- uid: TClause
  isExternal: true
  name: TClause
  nameWithType: TClause
  fullName: TClause
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.GetEnumerator
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: GetEnumerator()
  nameWithType: SecurityKeyIdentifier.GetEnumerator()
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.GetEnumerator()
- uid: System.Collections.Generic.IEnumerator{System.IdentityModel.Tokens.SecurityKeyIdentifierClause}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerator<SecurityKeyIdentifierClause>
  nameWithType: IEnumerator<SecurityKeyIdentifierClause>
  fullName: System.Collections.Generic.IEnumerator<System.IdentityModel.Tokens.SecurityKeyIdentifierClause>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator<System.IdentityModel.Tokens.SecurityKeyIdentifierClause>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
    name: SecurityKeyIdentifierClause
    nameWithType: SecurityKeyIdentifierClause
    fullName: SecurityKeyIdentifierClause
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.IsReadOnly
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: IsReadOnly
  nameWithType: SecurityKeyIdentifier.IsReadOnly
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.IsReadOnly
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.Item(System.Int32)
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: Item(Int32)
  nameWithType: SecurityKeyIdentifier.Item(Int32)
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.Item(Int32)
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.MakeReadOnly
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: MakeReadOnly()
  nameWithType: SecurityKeyIdentifier.MakeReadOnly()
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.MakeReadOnly()
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.System#Collections#IEnumerable#GetEnumerator
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: SecurityKeyIdentifier.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.ToString
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: ToString()
  nameWithType: SecurityKeyIdentifier.ToString()
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.ToString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.TryFind``1(``0@)
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: TryFind(TClause)
  nameWithType: SecurityKeyIdentifier.TryFind(TClause)
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.TryFind(TClause)
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.#ctor*
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: SecurityKeyIdentifier
  nameWithType: SecurityKeyIdentifier.SecurityKeyIdentifier
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.Add*
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: Add
  nameWithType: SecurityKeyIdentifier.Add
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.CanCreateKey*
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: CanCreateKey
  nameWithType: SecurityKeyIdentifier.CanCreateKey
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.Count*
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: Count
  nameWithType: SecurityKeyIdentifier.Count
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.CreateKey*
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: CreateKey
  nameWithType: SecurityKeyIdentifier.CreateKey
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.Find<TClause>*
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: Find<TClause>
  nameWithType: SecurityKeyIdentifier.Find<TClause>
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.GetEnumerator*
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: GetEnumerator
  nameWithType: SecurityKeyIdentifier.GetEnumerator
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.IsReadOnly*
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: IsReadOnly
  nameWithType: SecurityKeyIdentifier.IsReadOnly
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.Item*
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: Item
  nameWithType: SecurityKeyIdentifier.Item
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.MakeReadOnly*
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: MakeReadOnly
  nameWithType: SecurityKeyIdentifier.MakeReadOnly
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.System#Collections#IEnumerable#GetEnumerator*
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: SecurityKeyIdentifier.System.Collections.IEnumerable.GetEnumerator
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.ToString*
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: ToString
  nameWithType: SecurityKeyIdentifier.ToString
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.TryFind<TClause>*
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: TryFind<TClause>
  nameWithType: SecurityKeyIdentifier.TryFind<TClause>
