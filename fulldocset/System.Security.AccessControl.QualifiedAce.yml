### YamlMime:ManagedReference
items:
- uid: System.Security.AccessControl.QualifiedAce
  id: QualifiedAce
  children:
  - System.Security.AccessControl.QualifiedAce.AceQualifier
  - System.Security.AccessControl.QualifiedAce.GetOpaque
  - System.Security.AccessControl.QualifiedAce.IsCallback
  - System.Security.AccessControl.QualifiedAce.OpaqueLength
  - System.Security.AccessControl.QualifiedAce.SetOpaque(System.Byte[])
  langs:
  - csharp
  name: QualifiedAce
  nameWithType: QualifiedAce
  fullName: System.Security.AccessControl.QualifiedAce
  type: Class
  summary: "항목 ACE (액세스 제어) 한정자가 포함 된를 나타냅니다. 가 나타내는 한정자는 <xref href=&quot;System.Security.AccessControl.AceQualifier&quot;> </xref> 개체, 여부를 지정 ACE 액세스할 수 있도록, 액세스 거부, 시스템 감사 수행 시스템 경보 발생 합니다. QualifiedAce 클래스는에 대 한 추상 기본 클래스는 <xref href=&quot;System.Security.AccessControl.CommonAce&quot;> </xref> 및 <xref href=&quot;System.Security.AccessControl.ObjectAce&quot;> </xref> 클래스입니다."
  syntax:
    content: 'public abstract class QualifiedAce : System.Security.AccessControl.KnownAce'
  inheritance:
  - System.Object
  - System.Security.AccessControl.GenericAce
  - System.Security.AccessControl.KnownAce
  implements: []
  inheritedMembers:
  - System.Security.AccessControl.GenericAce.AceFlags
  - System.Security.AccessControl.GenericAce.AceType
  - System.Security.AccessControl.GenericAce.AuditFlags
  - System.Security.AccessControl.GenericAce.BinaryLength
  - System.Security.AccessControl.GenericAce.Copy
  - System.Security.AccessControl.GenericAce.CreateFromBinaryForm(System.Byte[],System.Int32)
  - System.Security.AccessControl.GenericAce.Equals(System.Object)
  - System.Security.AccessControl.GenericAce.GetBinaryForm(System.Byte[],System.Int32)
  - System.Security.AccessControl.GenericAce.GetHashCode
  - System.Security.AccessControl.GenericAce.InheritanceFlags
  - System.Security.AccessControl.GenericAce.IsInherited
  - System.Security.AccessControl.GenericAce.op_Equality(System.Security.AccessControl.GenericAce,System.Security.AccessControl.GenericAce)
  - System.Security.AccessControl.GenericAce.op_Inequality(System.Security.AccessControl.GenericAce,System.Security.AccessControl.GenericAce)
  - System.Security.AccessControl.GenericAce.PropagationFlags
  - System.Security.AccessControl.KnownAce.AccessMask
  - System.Security.AccessControl.KnownAce.SecurityIdentifier
  platform:
  - net462
- uid: System.Security.AccessControl.QualifiedAce.AceQualifier
  id: AceQualifier
  parent: System.Security.AccessControl.QualifiedAce
  langs:
  - csharp
  name: AceQualifier
  nameWithType: QualifiedAce.AceQualifier
  fullName: System.Security.AccessControl.QualifiedAce.AceQualifier
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "ACE 액세스할 수 있도록, 액세스 거부, 시스템 감사 수행 여부 시스템 경보 발생을 지정 하는 값을 가져옵니다."
  syntax:
    content: public System.Security.AccessControl.AceQualifier AceQualifier { get; }
    return:
      type: System.Security.AccessControl.AceQualifier
      description: "ACE에 대 한 액세스를 허용 하는지 여부를 지정 하는 값에서 액세스를 거부 하 고 시스템 감사 수행 또는 시스템 경보 발생 합니다."
  overload: System.Security.AccessControl.QualifiedAce.AceQualifier*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.QualifiedAce.GetOpaque
  id: GetOpaque
  parent: System.Security.AccessControl.QualifiedAce
  langs:
  - csharp
  name: GetOpaque()
  nameWithType: QualifiedAce.GetOpaque()
  fullName: System.Security.AccessControl.QualifiedAce.GetOpaque()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "이 관련 된 불투명 콜백 데이터 반환 <xref href=&quot;System.Security.AccessControl.QualifiedAce&quot;> </xref> 개체입니다."
  remarks: "불투명 콜백 데이터는 콜백 (Ace) 액세스 제어 항목에만 존재 합니다."
  syntax:
    content: public byte[] GetOpaque ();
    parameters: []
    return:
      type: System.Byte[]
      description: "이 관련 된 불투명 콜백 데이터를 나타내는 바이트 값 배열을 <xref href=&quot;System.Security.AccessControl.QualifiedAce&quot;> </xref> 개체입니다."
  overload: System.Security.AccessControl.QualifiedAce.GetOpaque*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.QualifiedAce.IsCallback
  id: IsCallback
  parent: System.Security.AccessControl.QualifiedAce
  langs:
  - csharp
  name: IsCallback
  nameWithType: QualifiedAce.IsCallback
  fullName: System.Security.AccessControl.QualifiedAce.IsCallback
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "지정 하는지 여부를이 <xref href=&quot;System.Security.AccessControl.QualifiedAce&quot;> </xref> 개체가 콜백 데이터를 포함 합니다."
  syntax:
    content: public bool IsCallback { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>이 경우 <xref href=&quot;System.Security.AccessControl.QualifiedAce&quot;> </xref> 콜백 데이터를 포함 하는 개체, 그러지 않으면 false입니다."
  overload: System.Security.AccessControl.QualifiedAce.IsCallback*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.QualifiedAce.OpaqueLength
  id: OpaqueLength
  parent: System.Security.AccessControl.QualifiedAce
  langs:
  - csharp
  name: OpaqueLength
  nameWithType: QualifiedAce.OpaqueLength
  fullName: System.Security.AccessControl.QualifiedAce.OpaqueLength
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "이 관련 된 불투명 콜백 데이터의 길이 가져옵니다 <xref href=&quot;System.Security.AccessControl.QualifiedAce&quot;> </xref> 개체입니다. 이 속성은 콜백 (Ace) 액세스 제어 항목에 대해서만 유효 합니다."
  syntax:
    content: public int OpaqueLength { get; }
    return:
      type: System.Int32
      description: "불투명 콜백 데이터의 길이입니다."
  overload: System.Security.AccessControl.QualifiedAce.OpaqueLength*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.QualifiedAce.SetOpaque(System.Byte[])
  id: SetOpaque(System.Byte[])
  parent: System.Security.AccessControl.QualifiedAce
  langs:
  - csharp
  name: SetOpaque(Byte[])
  nameWithType: QualifiedAce.SetOpaque(Byte[])
  fullName: System.Security.AccessControl.QualifiedAce.SetOpaque(Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "이 관련 된 불투명 콜백 데이터 설정 <xref href=&quot;System.Security.AccessControl.QualifiedAce&quot;> </xref> 개체입니다."
  remarks: "불투명 콜백 데이터는 콜백 (Ace) 액세스 제어 항목에만 존재 합니다."
  syntax:
    content: public void SetOpaque (byte[] opaque);
    parameters:
    - id: opaque
      type: System.Byte[]
      description: "이 대 한 불투명 콜백 데이터를 나타내는 바이트 값 배열을 <xref href=&quot;System.Security.AccessControl.QualifiedAce&quot;> </xref> 개체입니다."
  overload: System.Security.AccessControl.QualifiedAce.SetOpaque*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.AccessControl.KnownAce
  isExternal: false
  name: System.Security.AccessControl.KnownAce
- uid: System.Security.AccessControl.QualifiedAce.AceQualifier
  parent: System.Security.AccessControl.QualifiedAce
  isExternal: false
  name: AceQualifier
  nameWithType: QualifiedAce.AceQualifier
  fullName: System.Security.AccessControl.QualifiedAce.AceQualifier
- uid: System.Security.AccessControl.AceQualifier
  parent: System.Security.AccessControl
  isExternal: false
  name: AceQualifier
  nameWithType: AceQualifier
  fullName: System.Security.AccessControl.AceQualifier
- uid: System.Security.AccessControl.QualifiedAce.GetOpaque
  parent: System.Security.AccessControl.QualifiedAce
  isExternal: false
  name: GetOpaque()
  nameWithType: QualifiedAce.GetOpaque()
  fullName: System.Security.AccessControl.QualifiedAce.GetOpaque()
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.AccessControl.QualifiedAce.IsCallback
  parent: System.Security.AccessControl.QualifiedAce
  isExternal: false
  name: IsCallback
  nameWithType: QualifiedAce.IsCallback
  fullName: System.Security.AccessControl.QualifiedAce.IsCallback
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.AccessControl.QualifiedAce.OpaqueLength
  parent: System.Security.AccessControl.QualifiedAce
  isExternal: false
  name: OpaqueLength
  nameWithType: QualifiedAce.OpaqueLength
  fullName: System.Security.AccessControl.QualifiedAce.OpaqueLength
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.AccessControl.QualifiedAce.SetOpaque(System.Byte[])
  parent: System.Security.AccessControl.QualifiedAce
  isExternal: false
  name: SetOpaque(Byte[])
  nameWithType: QualifiedAce.SetOpaque(Byte[])
  fullName: System.Security.AccessControl.QualifiedAce.SetOpaque(Byte[])
- uid: System.Security.AccessControl.QualifiedAce.AceQualifier*
  parent: System.Security.AccessControl.QualifiedAce
  isExternal: false
  name: AceQualifier
  nameWithType: QualifiedAce.AceQualifier
- uid: System.Security.AccessControl.QualifiedAce.GetOpaque*
  parent: System.Security.AccessControl.QualifiedAce
  isExternal: false
  name: GetOpaque
  nameWithType: QualifiedAce.GetOpaque
- uid: System.Security.AccessControl.QualifiedAce.IsCallback*
  parent: System.Security.AccessControl.QualifiedAce
  isExternal: false
  name: IsCallback
  nameWithType: QualifiedAce.IsCallback
- uid: System.Security.AccessControl.QualifiedAce.OpaqueLength*
  parent: System.Security.AccessControl.QualifiedAce
  isExternal: false
  name: OpaqueLength
  nameWithType: QualifiedAce.OpaqueLength
- uid: System.Security.AccessControl.QualifiedAce.SetOpaque*
  parent: System.Security.AccessControl.QualifiedAce
  isExternal: false
  name: SetOpaque
  nameWithType: QualifiedAce.SetOpaque
