### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper
  id: InternalXmlHelper
  children:
  - Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.AttributeValue(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)
  - Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.AttributeValue(System.Xml.Linq.XElement,System.Xml.Linq.XName)
  - Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.CreateAttribute(System.Xml.Linq.XName,System.Object)
  - Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.CreateNamespaceAttribute(System.Xml.Linq.XName,System.Xml.Linq.XNamespace)
  - Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.RemoveNamespaceAttributes(System.String[],System.Xml.Linq.XNamespace[],System.Collections.Generic.List{System.Xml.Linq.XAttribute},System.Collections.IEnumerable)
  - Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.RemoveNamespaceAttributes(System.String[],System.Xml.Linq.XNamespace[],System.Collections.Generic.List{System.Xml.Linq.XAttribute},System.Object)
  - Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.RemoveNamespaceAttributes(System.String[],System.Xml.Linq.XNamespace[],System.Collections.Generic.List{System.Xml.Linq.XAttribute},System.Xml.Linq.XElement)
  - Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.Value(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})
  langs:
  - csharp
  name: InternalXmlHelper
  nameWithType: InternalXmlHelper
  fullName: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper
  type: Class
  summary: "Visual Basic XML 리터럴을 지원는 속성과 메서드를 제공 합니다. 이 클래스는 사용자 코드에서 직접 사용할 수 없습니다."
  syntax:
    content: >-
      [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]

      [System.Diagnostics.DebuggerNonUserCode]

      public sealed class InternalXmlHelper
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.AttributeValue(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)
  id: AttributeValue(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)
  parent: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper
  langs:
  - csharp
  name: AttributeValue(IEnumerable<XElement>,XName)
  nameWithType: InternalXmlHelper.AttributeValue(IEnumerable<XElement>,XName)
  fullName: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.AttributeValue(IEnumerable<XElement>,XName)
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "XML 특성의 값을 가져오거나 설정 합니다. 이 속성은 사용자 코드에서 사용할 수 없습니다."
  syntax:
    content: public static string AttributeValue[System.Collections.Generic.IEnumerable<System.Xml.Linq.XElement> source, System.Xml.Linq.XName name] { get; set; }
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}
      description: "속성을 가져오는 데 사용 되는 XML 요소의 컬렉션에서 값 또는 특성 값을 설정 합니다."
    - id: name
      type: System.Xml.Linq.XName
      description: "값을 가져오거나에 대 한 값을 설정 하는 XML 특성의 이름입니다."
    return:
      type: System.String
      description: "로 식별 되는 XML 특성의 값은 <code> name </code> XML 요소의 제공된 된 컬렉션의 첫 번째 요소에서 매개 변수입니다. 빈 컬렉션이 반환 <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>합니다."
  overload: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.AttributeValue*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.AttributeValue(System.Xml.Linq.XElement,System.Xml.Linq.XName)
  id: AttributeValue(System.Xml.Linq.XElement,System.Xml.Linq.XName)
  parent: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper
  langs:
  - csharp
  name: AttributeValue(XElement,XName)
  nameWithType: InternalXmlHelper.AttributeValue(XElement,XName)
  fullName: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.AttributeValue(XElement,XName)
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "XML 특성의 값을 가져오거나 설정 합니다. 이 속성은 사용자 코드에서 사용할 수 없습니다."
  syntax:
    content: public static string AttributeValue[System.Xml.Linq.XElement source, System.Xml.Linq.XName name] { get; set; }
    parameters:
    - id: source
      type: System.Xml.Linq.XElement
      description: "특성을 가져오는 XML 요소에서 값 또는 특성 값을 설정 합니다."
    - id: name
      type: System.Xml.Linq.XName
      description: "값을 가져오거나에 대 한 값을 설정 하는 XML 특성의 이름입니다."
    return:
      type: System.String
      description: "로 식별 되는 XML 특성의 값은 <code> name </code> 제공 된 XML 요소에 대 한 매개 변수입니다."
  overload: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.AttributeValue*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.CreateAttribute(System.Xml.Linq.XName,System.Object)
  id: CreateAttribute(System.Xml.Linq.XName,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper
  langs:
  - csharp
  name: CreateAttribute(XName,Object)
  nameWithType: InternalXmlHelper.CreateAttribute(XName,Object)
  fullName: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.CreateAttribute(XName,Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "제공 된 이름과 값을 가진 XML 특성을 만듭니다. 이 메서드는 사용자 코드에서 사용할 수 없습니다."
  syntax:
    content: public static System.Xml.Linq.XAttribute CreateAttribute (System.Xml.Linq.XName name, object value);
    parameters:
    - id: name
      type: System.Xml.Linq.XName
      description: "만들려는 XML 특성의 이름입니다."
    - id: value
      type: System.Object
      description: "생성된 되는 XML 특성에 할당할 값입니다. 경우 `value` 은 <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>,이 메서드가 반환 <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>합니다."
    return:
      type: System.Xml.Linq.XAttribute
      description: "<xref:System.Xml.Linq.XAttribute>제공 된 이름 및 값을 가진 개체를.</xref:System.Xml.Linq.XAttribute>"
  overload: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.CreateAttribute*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.CreateNamespaceAttribute(System.Xml.Linq.XName,System.Xml.Linq.XNamespace)
  id: CreateNamespaceAttribute(System.Xml.Linq.XName,System.Xml.Linq.XNamespace)
  parent: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper
  langs:
  - csharp
  name: CreateNamespaceAttribute(XName,XNamespace)
  nameWithType: InternalXmlHelper.CreateNamespaceAttribute(XName,XNamespace)
  fullName: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.CreateNamespaceAttribute(XName,XNamespace)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "제공 된 이름 및 네임 스페이스 값이 있는 XML 특성을 만듭니다. 이 메서드는 사용자 코드에서 사용할 수 없습니다."
  syntax:
    content: public static System.Xml.Linq.XAttribute CreateNamespaceAttribute (System.Xml.Linq.XName name, System.Xml.Linq.XNamespace ns);
    parameters:
    - id: name
      type: System.Xml.Linq.XName
      description: "만들려는 XML 특성의 이름입니다."
    - id: ns
      type: System.Xml.Linq.XNamespace
      description: "생성된 되는 XML 특성에 할당 하려면 네임 스페이스 값입니다."
    return:
      type: System.Xml.Linq.XAttribute
      description: "<xref:System.Xml.Linq.XAttribute>제공 된 이름 및 네임 스페이스 값 개체입니다.</xref:System.Xml.Linq.XAttribute>"
  overload: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.CreateNamespaceAttribute*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.RemoveNamespaceAttributes(System.String[],System.Xml.Linq.XNamespace[],System.Collections.Generic.List{System.Xml.Linq.XAttribute},System.Collections.IEnumerable)
  id: RemoveNamespaceAttributes(System.String[],System.Xml.Linq.XNamespace[],System.Collections.Generic.List{System.Xml.Linq.XAttribute},System.Collections.IEnumerable)
  parent: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper
  langs:
  - csharp
  name: RemoveNamespaceAttributes(String[],XNamespace[],List<XAttribute>,IEnumerable)
  nameWithType: InternalXmlHelper.RemoveNamespaceAttributes(String[],XNamespace[],List<XAttribute>,IEnumerable)
  fullName: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.RemoveNamespaceAttributes(String[],XNamespace[],List<XAttribute>,IEnumerable)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "XML 요소에서 XML 네임 스페이스 특성을 제거합니다. 이 메서드는 사용자 코드에서 사용할 수 없습니다."
  syntax:
    content: public static System.Collections.IEnumerable RemoveNamespaceAttributes (string[] inScopePrefixes, System.Xml.Linq.XNamespace[] inScopeNs, System.Collections.Generic.List<System.Xml.Linq.XAttribute> attributes, System.Collections.IEnumerable obj);
    parameters:
    - id: inScopePrefixes
      type: System.String[]
      description: "현재 범위에 있는 XML 요소에 대 한 XML 네임 스페이스 접두사의 목록."
    - id: inScopeNs
      type: System.Xml.Linq.XNamespace[]
      description: "현재 범위에 있는 XML 요소에 대 한 XML 네임 스페이스의 목록."
    - id: attributes
      type: System.Collections.Generic.List{System.Xml.Linq.XAttribute}
      description: "목록에서 XML 요소를 제거 하려면 네임 스페이스 특성입니다."
    - id: obj
      type: System.Collections.IEnumerable
      description: "XML 네임 스페이스 특성을 제거 하려면 XML 요소입니다."
    return:
      type: System.Collections.IEnumerable
      description: "지정 된 XML 네임 스페이스 특성 제거 제공 된 XML 요소입니다."
  overload: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.RemoveNamespaceAttributes*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.RemoveNamespaceAttributes(System.String[],System.Xml.Linq.XNamespace[],System.Collections.Generic.List{System.Xml.Linq.XAttribute},System.Object)
  id: RemoveNamespaceAttributes(System.String[],System.Xml.Linq.XNamespace[],System.Collections.Generic.List{System.Xml.Linq.XAttribute},System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper
  langs:
  - csharp
  name: RemoveNamespaceAttributes(String[],XNamespace[],List<XAttribute>,Object)
  nameWithType: InternalXmlHelper.RemoveNamespaceAttributes(String[],XNamespace[],List<XAttribute>,Object)
  fullName: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.RemoveNamespaceAttributes(String[],XNamespace[],List<XAttribute>,Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "XML 요소에서 XML 네임 스페이스 특성을 제거합니다. 이 메서드는 사용자 코드에서 사용할 수 없습니다."
  syntax:
    content: public static object RemoveNamespaceAttributes (string[] inScopePrefixes, System.Xml.Linq.XNamespace[] inScopeNs, System.Collections.Generic.List<System.Xml.Linq.XAttribute> attributes, object obj);
    parameters:
    - id: inScopePrefixes
      type: System.String[]
      description: "현재 범위에 있는 XML 요소에 대 한 XML 네임 스페이스 접두사의 목록."
    - id: inScopeNs
      type: System.Xml.Linq.XNamespace[]
      description: "현재 범위에 있는 XML 요소에 대 한 XML 네임 스페이스의 목록."
    - id: attributes
      type: System.Collections.Generic.List{System.Xml.Linq.XAttribute}
      description: "목록에서 XML 요소를 제거 하려면 네임 스페이스 특성입니다."
    - id: obj
      type: System.Object
      description: "XML 네임 스페이스 특성을 제거 하려면 XML 요소입니다."
    return:
      type: System.Object
      description: "지정 된 XML 네임 스페이스 특성 제거 제공 된 XML 요소입니다."
  overload: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.RemoveNamespaceAttributes*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.RemoveNamespaceAttributes(System.String[],System.Xml.Linq.XNamespace[],System.Collections.Generic.List{System.Xml.Linq.XAttribute},System.Xml.Linq.XElement)
  id: RemoveNamespaceAttributes(System.String[],System.Xml.Linq.XNamespace[],System.Collections.Generic.List{System.Xml.Linq.XAttribute},System.Xml.Linq.XElement)
  parent: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper
  langs:
  - csharp
  name: RemoveNamespaceAttributes(String[],XNamespace[],List<XAttribute>,XElement)
  nameWithType: InternalXmlHelper.RemoveNamespaceAttributes(String[],XNamespace[],List<XAttribute>,XElement)
  fullName: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.RemoveNamespaceAttributes(String[],XNamespace[],List<XAttribute>,XElement)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "XML 요소에서 XML 네임 스페이스 특성을 제거합니다. 이 메서드는 사용자 코드에서 사용할 수 없습니다."
  syntax:
    content: public static System.Xml.Linq.XElement RemoveNamespaceAttributes (string[] inScopePrefixes, System.Xml.Linq.XNamespace[] inScopeNs, System.Collections.Generic.List<System.Xml.Linq.XAttribute> attributes, System.Xml.Linq.XElement e);
    parameters:
    - id: inScopePrefixes
      type: System.String[]
      description: "현재 범위에 있는 XML 요소에 대 한 XML 네임 스페이스 접두사의 목록."
    - id: inScopeNs
      type: System.Xml.Linq.XNamespace[]
      description: "현재 범위에 있는 XML 요소에 대 한 XML 네임 스페이스의 목록."
    - id: attributes
      type: System.Collections.Generic.List{System.Xml.Linq.XAttribute}
      description: "목록에서 XML 요소를 제거 하려면 네임 스페이스 특성입니다."
    - id: e
      type: System.Xml.Linq.XElement
      description: "XML 네임 스페이스 특성을 제거 하려면 XML 요소입니다."
    return:
      type: System.Xml.Linq.XElement
      description: "지정 된 XML 네임 스페이스 특성 제거 제공 된 XML 요소입니다."
  overload: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.RemoveNamespaceAttributes*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.Value(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})
  id: Value(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})
  parent: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper
  langs:
  - csharp
  name: Value(IEnumerable<XElement>)
  nameWithType: InternalXmlHelper.Value(IEnumerable<XElement>)
  fullName: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.Value(IEnumerable<XElement>)
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "XML 요소의 값을 가져오거나 설정 합니다. 이 속성은 사용자 코드에서 사용할 수 없습니다."
  syntax:
    content: public static string Value[System.Collections.Generic.IEnumerable<System.Xml.Linq.XElement> source] { get; set; }
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}
      description: "에 대 한 값을 설정 하거나 값을 가져올 XML 요소의 컬렉션입니다."
    return:
      type: System.String
      description: "제공된 된 컬렉션에 첫 번째 XML 요소의 값입니다. 빈 컬렉션이 반환 <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>합니다."
  overload: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.Value*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.AttributeValue(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)
  parent: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper
  isExternal: false
  name: AttributeValue(IEnumerable<XElement>,XName)
  nameWithType: InternalXmlHelper.AttributeValue(IEnumerable<XElement>,XName)
  fullName: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.AttributeValue(IEnumerable<XElement>,XName)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<XElement>
  nameWithType: IEnumerable<XElement>
  fullName: System.Collections.Generic.IEnumerable<System.Xml.Linq.XElement>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Xml.Linq.XElement>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xml.Linq.XElement
    name: XElement
    nameWithType: XElement
    fullName: XElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xml.Linq.XName
  parent: System.Xml.Linq
  isExternal: true
  name: XName
  nameWithType: XName
  fullName: System.Xml.Linq.XName
- uid: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.AttributeValue(System.Xml.Linq.XElement,System.Xml.Linq.XName)
  parent: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper
  isExternal: false
  name: AttributeValue(XElement,XName)
  nameWithType: InternalXmlHelper.AttributeValue(XElement,XName)
  fullName: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.AttributeValue(XElement,XName)
- uid: System.Xml.Linq.XElement
  parent: System.Xml.Linq
  isExternal: true
  name: XElement
  nameWithType: XElement
  fullName: System.Xml.Linq.XElement
- uid: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.CreateAttribute(System.Xml.Linq.XName,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper
  isExternal: false
  name: CreateAttribute(XName,Object)
  nameWithType: InternalXmlHelper.CreateAttribute(XName,Object)
  fullName: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.CreateAttribute(XName,Object)
- uid: System.Xml.Linq.XAttribute
  parent: System.Xml.Linq
  isExternal: true
  name: XAttribute
  nameWithType: XAttribute
  fullName: System.Xml.Linq.XAttribute
- uid: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.CreateNamespaceAttribute(System.Xml.Linq.XName,System.Xml.Linq.XNamespace)
  parent: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper
  isExternal: false
  name: CreateNamespaceAttribute(XName,XNamespace)
  nameWithType: InternalXmlHelper.CreateNamespaceAttribute(XName,XNamespace)
  fullName: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.CreateNamespaceAttribute(XName,XNamespace)
- uid: System.Xml.Linq.XNamespace
  parent: System.Xml.Linq
  isExternal: true
  name: XNamespace
  nameWithType: XNamespace
  fullName: System.Xml.Linq.XNamespace
- uid: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.RemoveNamespaceAttributes(System.String[],System.Xml.Linq.XNamespace[],System.Collections.Generic.List{System.Xml.Linq.XAttribute},System.Collections.IEnumerable)
  parent: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper
  isExternal: false
  name: RemoveNamespaceAttributes(String[],XNamespace[],List<XAttribute>,IEnumerable)
  nameWithType: InternalXmlHelper.RemoveNamespaceAttributes(String[],XNamespace[],List<XAttribute>,IEnumerable)
  fullName: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.RemoveNamespaceAttributes(String[],XNamespace[],List<XAttribute>,IEnumerable)
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Xml.Linq.XNamespace[]
  parent: System.Xml.Linq
  isExternal: true
  name: XNamespace
  nameWithType: XNamespace
  fullName: System.Xml.Linq.XNamespace[]
  spec.csharp:
  - uid: System.Xml.Linq.XNamespace
    name: XNamespace
    nameWithType: XNamespace
    fullName: XNamespace[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Collections.Generic.List{System.Xml.Linq.XAttribute}
  parent: System.Collections.Generic
  isExternal: true
  name: List<XAttribute>
  nameWithType: List<XAttribute>
  fullName: System.Collections.Generic.List<System.Xml.Linq.XAttribute>
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: List<System.Xml.Linq.XAttribute>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xml.Linq.XAttribute
    name: XAttribute
    nameWithType: XAttribute
    fullName: XAttribute
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.RemoveNamespaceAttributes(System.String[],System.Xml.Linq.XNamespace[],System.Collections.Generic.List{System.Xml.Linq.XAttribute},System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper
  isExternal: false
  name: RemoveNamespaceAttributes(String[],XNamespace[],List<XAttribute>,Object)
  nameWithType: InternalXmlHelper.RemoveNamespaceAttributes(String[],XNamespace[],List<XAttribute>,Object)
  fullName: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.RemoveNamespaceAttributes(String[],XNamespace[],List<XAttribute>,Object)
- uid: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.RemoveNamespaceAttributes(System.String[],System.Xml.Linq.XNamespace[],System.Collections.Generic.List{System.Xml.Linq.XAttribute},System.Xml.Linq.XElement)
  parent: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper
  isExternal: false
  name: RemoveNamespaceAttributes(String[],XNamespace[],List<XAttribute>,XElement)
  nameWithType: InternalXmlHelper.RemoveNamespaceAttributes(String[],XNamespace[],List<XAttribute>,XElement)
  fullName: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.RemoveNamespaceAttributes(String[],XNamespace[],List<XAttribute>,XElement)
- uid: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.Value(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})
  parent: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper
  isExternal: false
  name: Value(IEnumerable<XElement>)
  nameWithType: InternalXmlHelper.Value(IEnumerable<XElement>)
  fullName: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.Value(IEnumerable<XElement>)
- uid: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.AttributeValue*
  parent: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper
  isExternal: false
  name: AttributeValue
  nameWithType: InternalXmlHelper.AttributeValue
- uid: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.CreateAttribute*
  parent: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper
  isExternal: false
  name: CreateAttribute
  nameWithType: InternalXmlHelper.CreateAttribute
- uid: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.CreateNamespaceAttribute*
  parent: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper
  isExternal: false
  name: CreateNamespaceAttribute
  nameWithType: InternalXmlHelper.CreateNamespaceAttribute
- uid: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.RemoveNamespaceAttributes*
  parent: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper
  isExternal: false
  name: RemoveNamespaceAttributes
  nameWithType: InternalXmlHelper.RemoveNamespaceAttributes
- uid: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.Value*
  parent: Microsoft.VisualBasic.CompilerServices.InternalXmlHelper
  isExternal: false
  name: Value
  nameWithType: InternalXmlHelper.Value
