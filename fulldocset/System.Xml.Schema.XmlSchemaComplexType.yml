### YamlMime:ManagedReference
items:
- uid: System.Xml.Schema.XmlSchemaComplexType
  id: XmlSchemaComplexType
  children:
  - System.Xml.Schema.XmlSchemaComplexType.#ctor
  - System.Xml.Schema.XmlSchemaComplexType.AnyAttribute
  - System.Xml.Schema.XmlSchemaComplexType.Attributes
  - System.Xml.Schema.XmlSchemaComplexType.AttributeUses
  - System.Xml.Schema.XmlSchemaComplexType.AttributeWildcard
  - System.Xml.Schema.XmlSchemaComplexType.Block
  - System.Xml.Schema.XmlSchemaComplexType.BlockResolved
  - System.Xml.Schema.XmlSchemaComplexType.ContentModel
  - System.Xml.Schema.XmlSchemaComplexType.ContentType
  - System.Xml.Schema.XmlSchemaComplexType.ContentTypeParticle
  - System.Xml.Schema.XmlSchemaComplexType.IsAbstract
  - System.Xml.Schema.XmlSchemaComplexType.IsMixed
  - System.Xml.Schema.XmlSchemaComplexType.Particle
  langs:
  - csharp
  name: XmlSchemaComplexType
  nameWithType: XmlSchemaComplexType
  fullName: System.Xml.Schema.XmlSchemaComplexType
  type: Class
  summary: "나타냅니다는 <xref uid=&quot;langword_csharp_complexType&quot; name=&quot;complexType&quot; href=&quot;&quot;> </xref> World Wide Web Consortium (W3C)에 지정 된 대로 XML 스키마에서 요소입니다. 이 클래스는 특성 집합이 및 요소 내용을 결정 하는 복합 유형을 정의 합니다."
  remarks: "요소를 참조 하는 type 특성이 선언할 수 있습니다는 `complexType` 구조, 내용 및 해당 요소의 특성을 정의 하는 요소입니다."
  example:
  - "The following example creates a `complexType` element.  \n  \n [!code-cpp[Classic WebData XmlSchemaComplexType Example#1](~/add/codesnippet/cpp/t-system.xml.schema.xmls_27_1.cpp)]\n [!code-vb[Classic WebData XmlSchemaComplexType Example#1](~/add/codesnippet/visualbasic/t-system.xml.schema.xmls_27_1.vb)]\n [!code-cs[Classic WebData XmlSchemaComplexType Example#1](~/add/codesnippet/csharp/t-system.xml.schema.xmls_27_1.cs)]  \n  \n The following XML file is used for the preceding code example.  \n  \n [!code-xml[Classic WebData XmlSchemaComplexType Example#2](~/add/codesnippet/xml/t-system.xml.schema.xmls_27_2.xsd)]"
  syntax:
    content: 'public class XmlSchemaComplexType : System.Xml.Schema.XmlSchemaType'
  inheritance:
  - System.Object
  - System.Xml.Schema.XmlSchemaObject
  - System.Xml.Schema.XmlSchemaAnnotated
  - System.Xml.Schema.XmlSchemaType
  implements: []
  inheritedMembers:
  - System.Xml.Schema.XmlSchemaAnnotated.Annotation
  - System.Xml.Schema.XmlSchemaAnnotated.Id
  - System.Xml.Schema.XmlSchemaAnnotated.UnhandledAttributes
  - System.Xml.Schema.XmlSchemaObject.LineNumber
  - System.Xml.Schema.XmlSchemaObject.LinePosition
  - System.Xml.Schema.XmlSchemaObject.Namespaces
  - System.Xml.Schema.XmlSchemaObject.Parent
  - System.Xml.Schema.XmlSchemaObject.SourceUri
  - System.Xml.Schema.XmlSchemaType.BaseSchemaType
  - System.Xml.Schema.XmlSchemaType.BaseXmlSchemaType
  - System.Xml.Schema.XmlSchemaType.Datatype
  - System.Xml.Schema.XmlSchemaType.DerivedBy
  - System.Xml.Schema.XmlSchemaType.Final
  - System.Xml.Schema.XmlSchemaType.FinalResolved
  - System.Xml.Schema.XmlSchemaType.GetBuiltInComplexType(System.Xml.Schema.XmlTypeCode)
  - System.Xml.Schema.XmlSchemaType.GetBuiltInComplexType(System.Xml.XmlQualifiedName)
  - System.Xml.Schema.XmlSchemaType.GetBuiltInSimpleType(System.Xml.Schema.XmlTypeCode)
  - System.Xml.Schema.XmlSchemaType.GetBuiltInSimpleType(System.Xml.XmlQualifiedName)
  - System.Xml.Schema.XmlSchemaType.IsDerivedFrom(System.Xml.Schema.XmlSchemaType,System.Xml.Schema.XmlSchemaType,System.Xml.Schema.XmlSchemaDerivationMethod)
  - System.Xml.Schema.XmlSchemaType.Name
  - System.Xml.Schema.XmlSchemaType.QualifiedName
  - System.Xml.Schema.XmlSchemaType.TypeCode
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaComplexType.#ctor
  id: '#ctor'
  parent: System.Xml.Schema.XmlSchemaComplexType
  langs:
  - csharp
  name: XmlSchemaComplexType()
  nameWithType: XmlSchemaComplexType.XmlSchemaComplexType()
  fullName: System.Xml.Schema.XmlSchemaComplexType.XmlSchemaComplexType()
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Xml.Schema.XmlSchemaComplexType&quot;> </xref> 클래스입니다."
  syntax:
    content: public XmlSchemaComplexType ();
    parameters: []
  overload: System.Xml.Schema.XmlSchemaComplexType.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaComplexType.AnyAttribute
  id: AnyAttribute
  parent: System.Xml.Schema.XmlSchemaComplexType
  langs:
  - csharp
  name: AnyAttribute
  nameWithType: XmlSchemaComplexType.AnyAttribute
  fullName: System.Xml.Schema.XmlSchemaComplexType.AnyAttribute
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "에 대 한 값을 가져오거나 설정 합니다.는 <xref href=&quot;System.Xml.Schema.XmlSchemaAnyAttribute&quot;> </xref> 복합 형식의 구성 요소입니다."
  remarks: "이 속성은 null, 복합 형식 <xref:System.Xml.Schema.XmlSchemaAnyAttribute>.</xref:System.Xml.Schema.XmlSchemaAnyAttribute> 에 지정 된 네임 스페이스의 모든 특성을 포함할 수 있습니다."
  syntax:
    content: public System.Xml.Schema.XmlSchemaAnyAttribute AnyAttribute { get; set; }
    return:
      type: System.Xml.Schema.XmlSchemaAnyAttribute
      description: "<xref href=&quot;System.Xml.Schema.XmlSchemaAnyAttribute&quot;> </xref> 복합 형식의 구성 요소입니다."
  overload: System.Xml.Schema.XmlSchemaComplexType.AnyAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaComplexType.Attributes
  id: Attributes
  parent: System.Xml.Schema.XmlSchemaComplexType
  langs:
  - csharp
  name: Attributes
  nameWithType: XmlSchemaComplexType.Attributes
  fullName: System.Xml.Schema.XmlSchemaComplexType.Attributes
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "복합 유형에 대 한 특성의 컬렉션을 가져옵니다."
  syntax:
    content: public System.Xml.Schema.XmlSchemaObjectCollection Attributes { get; }
    return:
      type: System.Xml.Schema.XmlSchemaObjectCollection
      description: "포함 <xref href=&quot;System.Xml.Schema.XmlSchemaAttribute&quot;> </xref> 및 <xref href=&quot;System.Xml.Schema.XmlSchemaAttributeGroupRef&quot;> </xref> 클래스입니다."
  overload: System.Xml.Schema.XmlSchemaComplexType.Attributes*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaComplexType.AttributeUses
  id: AttributeUses
  parent: System.Xml.Schema.XmlSchemaComplexType
  langs:
  - csharp
  name: AttributeUses
  nameWithType: XmlSchemaComplexType.AttributeUses
  fullName: System.Xml.Schema.XmlSchemaComplexType.AttributeUses
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "이 복합 형식과 그 기본 형식의 모든 컴파일된 특성의 컬렉션을 가져옵니다."
  remarks: "예를 들어 모든 특성의 조합을 `Attributes` 각 형식 계층 구조에는 속성입니다.       이 속성의 값은 읽기 전용입니다. 이 속성 스키마가 성공적으로 컴파일되어 인스턴스 문서에서 허용 되는 전체 특성 집합을 결정 한 후 값을 갖습니다."
  syntax:
    content: public System.Xml.Schema.XmlSchemaObjectTable AttributeUses { get; }
    return:
      type: System.Xml.Schema.XmlSchemaObjectTable
      description: "이 복합 형식과 그 기본 형식의 모든 특성의 컬렉션입니다. 컴파일 이후 값은 <xref uid=&quot;langword_csharp_AttributeUses&quot; name=&quot;AttributeUses&quot; href=&quot;&quot;> </xref> 속성입니다."
  overload: System.Xml.Schema.XmlSchemaComplexType.AttributeUses*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaComplexType.AttributeWildcard
  id: AttributeWildcard
  parent: System.Xml.Schema.XmlSchemaComplexType
  langs:
  - csharp
  name: AttributeWildcard
  nameWithType: XmlSchemaComplexType.AttributeWildcard
  fullName: System.Xml.Schema.XmlSchemaComplexType.AttributeWildcard
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "에 대 한 컴파일 이후 값을 가져옵니다 <xref uid=&quot;langword_csharp_anyAttribute&quot; name=&quot;anyAttribute&quot; href=&quot;&quot;> </xref> 이 복합 형식과 해당 기본 형식에 대 한 합니다."
  remarks: "이 속성의 값은 읽기 전용입니다. 이 속성에 값 스키마 컴파일한 후에 성공적으로 복합 유형의 전체 특성 집합을 결정 합니다. 예를 들어, 수 있습니다는 `anyAttribute` 기본 형식 중 하나에서 요소입니다."
  syntax:
    content: public System.Xml.Schema.XmlSchemaAnyAttribute AttributeWildcard { get; }
    return:
      type: System.Xml.Schema.XmlSchemaAnyAttribute
      description: "컴파일 이후 값은 <xref uid=&quot;langword_csharp_anyAttribute&quot; name=&quot;anyAttribute&quot; href=&quot;&quot;> </xref> 요소입니다."
  overload: System.Xml.Schema.XmlSchemaComplexType.AttributeWildcard*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaComplexType.Block
  id: Block
  parent: System.Xml.Schema.XmlSchemaComplexType
  langs:
  - csharp
  name: Block
  nameWithType: XmlSchemaComplexType.Block
  fullName: System.Xml.Schema.XmlSchemaComplexType.Block
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "가져오거나는 <xref uid=&quot;langword_csharp_block&quot; name=&quot;block&quot; href=&quot;&quot;> </xref> 특성입니다."
  remarks: "파생 형식을 나타냅니다.       이 특성에는 다음 값이 포함 될 수 있습니다. | Enum | 설명 |   |----------|-----------------|   | `None`| 에 정의 된 파생 제한을 사용는 `BlockDefault` 있는 경우 스키마의 속성입니다. |   | `Extension`| 이 요소는 확장에 의해 파생 된 형식으로 바꿀 수 없습니다. |   | `Restriction`| 이 요소는 제한에 의해 파생 된 형식으로 바꿀 수 없습니다. |   | `All`|`#all`. 이 요소는 파생 방법에 관계 없이 모든 형식으로 바꿀 수 없습니다. |       `Substitution`, `List`, 및 `Union` 파생 메서드는이 속성에서 지원 되지 않습니다."
  syntax:
    content: public System.Xml.Schema.XmlSchemaDerivationMethod Block { get; set; }
    return:
      type: System.Xml.Schema.XmlSchemaDerivationMethod
      description: "<xref uid=&quot;langword_csharp_block&quot; name=&quot;block&quot; href=&quot;&quot;> </xref> 특성이 지정된 된 형식의 파생에서 사용 되는 복합 유형을 않습니다. 기본값은 <xref uid=&quot;langword_csharp_XmlSchemaDerivationMethod.None&quot; name=&quot;XmlSchemaDerivationMethod.None&quot; href=&quot;&quot;> </xref>합니다.       선택 사항입니다."
  overload: System.Xml.Schema.XmlSchemaComplexType.Block*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaComplexType.BlockResolved
  id: BlockResolved
  parent: System.Xml.Schema.XmlSchemaComplexType
  langs:
  - csharp
  name: BlockResolved
  nameWithType: XmlSchemaComplexType.BlockResolved
  fullName: System.Xml.Schema.XmlSchemaComplexType.BlockResolved
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "스키마 유효성 검사 정보 집합 (infoset) 유형을 편집한 후 값을 가져옵니다. 이 값 형식이 적용 되는 방식을 나타냅니다 때 <xref uid=&quot;langword_csharp_xsi:type&quot; name=&quot;xsi:type&quot; href=&quot;&quot;> </xref> 인스턴스 문서에서 사용 됩니다."
  remarks: "이 값은 형식 자체에서 가져오거나에서 가져온 것 형식 수준에서 정의 되지 않은 경우는 `schema` 요소입니다. 예를 들어 값이 제한 된 경우 구체적으로 정의 된 형식에만 사용할 수를 구체적으로 정의 된 형식에서 파생 된 형식이 아닌 합니다.       이 특성에는 다음 값이 포함 될 수 있습니다. | Enum | 설명 |   |----------|-----------------|   | `None`| 에 정의 된 파생 제한을 사용는 `BlockDefault` 있는 경우 스키마의 속성입니다. |   | `Extension`| 이 요소는 확장에 의해 파생 된 형식으로 바꿀 수 없습니다. |   | `Restriction`| 이 요소는 제한에 의해 파생 된 형식으로 바꿀 수 없습니다. |   | `All`|`#all`. 이 요소는 파생 방법에 관계 없이 모든 형식으로 바꿀 수 없습니다. |       `Substitution`, `List`, 및 `Union` 파생 메서드는이 속성에서 지원 되지 않습니다."
  syntax:
    content: public System.Xml.Schema.XmlSchemaDerivationMethod BlockResolved { get; }
    return:
      type: System.Xml.Schema.XmlSchemaDerivationMethod
      description: "이후 스키마 유효성 검사 이후 정보 집합 값입니다. 기본값은 <xref uid=&quot;langword_csharp_BlockDefault&quot; name=&quot;BlockDefault&quot; href=&quot;&quot;> </xref> 값에 <xref uid=&quot;langword_csharp_schema&quot; name=&quot;schema&quot; href=&quot;&quot;> </xref> 요소입니다."
  overload: System.Xml.Schema.XmlSchemaComplexType.BlockResolved*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaComplexType.ContentModel
  id: ContentModel
  parent: System.Xml.Schema.XmlSchemaComplexType
  langs:
  - csharp
  name: ContentModel
  nameWithType: XmlSchemaComplexType.ContentModel
  fullName: System.Xml.Schema.XmlSchemaComplexType.ContentModel
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "컴파일 이후을 가져오거나 설정 합니다. <xref href=&quot;System.Xml.Schema.XmlSchemaContentModel&quot;> </xref> 이 복합 형식의 합니다."
  remarks: "이 함께 사용할 수 없습니다는 <xref:System.Xml.Schema.XmlSchemaComplexType.Particle%2A>속성.</xref:System.Xml.Schema.XmlSchemaComplexType.Particle%2A>"
  syntax:
    content: public System.Xml.Schema.XmlSchemaContentModel ContentModel { get; set; }
    return:
      type: System.Xml.Schema.XmlSchemaContentModel
      description: "중 하나인 하는 콘텐츠 모델 유형에 <xref href=&quot;System.Xml.Schema.XmlSchemaSimpleContent&quot;> </xref> 또는 <xref href=&quot;System.Xml.Schema.XmlSchemaComplexContent&quot;> </xref> 클래스입니다."
  overload: System.Xml.Schema.XmlSchemaComplexType.ContentModel*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaComplexType.ContentType
  id: ContentType
  parent: System.Xml.Schema.XmlSchemaComplexType
  langs:
  - csharp
  name: ContentType
  nameWithType: XmlSchemaComplexType.ContentType
  fullName: System.Xml.Schema.XmlSchemaComplexType.ContentType
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "컴파일 이후 값을 보유 하 고 복합 형식의 콘텐츠 모델을 가져옵니다."
  remarks: "스키마 유효성 검사 이후 정보 집합의 콘텐츠입니다.       경우는 `IsMixed` 속성이 `true` 에 `ContentModel` 속성 형식을 갖는 `XmlSchemaComplexContent`, 반환 값은 `Mixed`합니다.       경우는 `IsMixed` 속성은 `false`, 값은 `Empty` 또는 `ElementOnly`합니다.       경우에 입력 된 문자는 `ContentModel` 속성의 형식이 `XmlSchemaSimpleContent`,이 값은 항상 `TextOnly`합니다.       `ContentType` 속성 다음 표에 표시 된 값 중 하나가 있어야 합니다.      | Enum | 설명 |   |----------|-----------------|   | `TextOnly`| 텍스트 전용 콘텐츠가 있습니다. |   | `Empty`| 빈 콘텐츠가. |   | `ElementOnly`| 요소 전용 콘텐츠. |   | `Mixed`| 혼합된 콘텐츠 모델입니다. |"
  syntax:
    content: public System.Xml.Schema.XmlSchemaContentType ContentType { get; }
    return:
      type: System.Xml.Schema.XmlSchemaContentType
      description: "복합 형식에 대 한 콘텐츠 모델의 컴파일 이후 값입니다."
  overload: System.Xml.Schema.XmlSchemaComplexType.ContentType*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaComplexType.ContentTypeParticle
  id: ContentTypeParticle
  parent: System.Xml.Schema.XmlSchemaComplexType
  langs:
  - csharp
  name: ContentTypeParticle
  nameWithType: XmlSchemaComplexType.ContentTypeParticle
  fullName: System.Xml.Schema.XmlSchemaComplexType.ContentTypeParticle
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "컴파일 이후 값을 포함 하는 파티클을 가져옵니다는 <xref:System.Xml.Schema.XmlSchemaComplexType.ContentType*>입자.</xref:System.Xml.Schema.XmlSchemaComplexType.ContentType*>"
  remarks: "이 `ContentTypeParticle` 가장 많이 파생 된 형식 및 기본 복합 유형의 콘텐츠 모델 W3C XML 스키마 정의 언어 (XSD) 사양에 정의 된 규칙에 따라 해결 된 후에 결정 됩니다."
  syntax:
    content: public System.Xml.Schema.XmlSchemaParticle ContentTypeParticle { get; }
    return:
      type: System.Xml.Schema.XmlSchemaParticle
      description: "콘텐츠 형식에 대 한 파티클입니다. 컴파일 이후 값은 <xref:System.Xml.Schema.XmlSchemaComplexType.ContentType*>입자.</xref:System.Xml.Schema.XmlSchemaComplexType.ContentType*>"
  overload: System.Xml.Schema.XmlSchemaComplexType.ContentTypeParticle*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaComplexType.IsAbstract
  id: IsAbstract
  parent: System.Xml.Schema.XmlSchemaComplexType
  langs:
  - csharp
  name: IsAbstract
  nameWithType: XmlSchemaComplexType.IsAbstract
  fullName: System.Xml.Schema.XmlSchemaComplexType.IsAbstract
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "있는지 여부를 확인 하는 정보를 가져오거나 설정 합니다.는 <xref uid=&quot;langword_csharp_complexType&quot; name=&quot;complexType&quot; href=&quot;&quot;> </xref> 인스턴스 문서에서 요소를 사용할 수 있습니다."
  syntax:
    content: public bool IsAbstract { get; set; }
    return:
      type: System.Boolean
      description: "경우 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>,이 요소를 사용할 수 없습니다 <xref uid=&quot;langword_csharp_complexType&quot; name=&quot;complexType&quot; href=&quot;&quot;> </xref> 요소를 직접이에서 파생 된 복합 형식을 사용 해야 하 고 <xref uid=&quot;langword_csharp_complexType&quot; name=&quot;complexType&quot; href=&quot;&quot;> </xref> 요소입니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다.       선택 사항입니다."
  overload: System.Xml.Schema.XmlSchemaComplexType.IsAbstract*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaComplexType.IsMixed
  id: IsMixed
  parent: System.Xml.Schema.XmlSchemaComplexType
  langs:
  - csharp
  name: IsMixed
  nameWithType: XmlSchemaComplexType.IsMixed
  fullName: System.Xml.Schema.XmlSchemaComplexType.IsMixed
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "복합 형식은 혼합된 콘텐츠 모델 (콘텐츠 내의 태그) 인지 여부를 결정 하는 정보를 가져오거나 설정 합니다."
  remarks: "문자 데이터의이 자식 요소 사이 나타날 수 경우 나타냅니다 `complexType`합니다. 경우는 `simpleContent` 요소는 자식 요소는 `mixed` 특성을 사용할 수 없습니다 (`false`). 경우는 `complexContent` 요소는 자식 요소는 `mixed` 특성으로 재정의할 수 있습니다는 `mixed` 특성에 `complexContent` 요소입니다."
  syntax:
    content: public override bool IsMixed { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>을 문자 데이터가 복합 형식의 자식 요소 사이 나타날 수 있는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다.       선택 사항입니다."
  overload: System.Xml.Schema.XmlSchemaComplexType.IsMixed*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaComplexType.Particle
  id: Particle
  parent: System.Xml.Schema.XmlSchemaComplexType
  langs:
  - csharp
  name: Particle
  nameWithType: XmlSchemaComplexType.Particle
  fullName: System.Xml.Schema.XmlSchemaComplexType.Particle
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "작성자 형식 중 하나로 설정 하거나 가져옵니다는 <xref href=&quot;System.Xml.Schema.XmlSchemaGroupRef&quot;> </xref>, <xref href=&quot;System.Xml.Schema.XmlSchemaChoice&quot;> </xref>, <xref href=&quot;System.Xml.Schema.XmlSchemaAll&quot;> </xref>, 또는 <xref href=&quot;System.Xml.Schema.XmlSchemaSequence&quot;> </xref> 클래스입니다."
  remarks: "파티클 다음 작성자 중 하나 여야 합니다: | 요소 | 설명 |   |-------------|-----------------|   | `group`| 복합 형식 참조 된 그룹에 정의 된 요소를 포함 합니다. |   | `sequence`| 복합 형식 지정된 된 시퀀스에 정의 된 요소를 포함 합니다. |   | `choice`| 복합 형식에 지정 된 요소 중 하나를 허용 합니다.는 `choice` 요소입니다. |   | `all`| 복합 형식을 사용 하면 모든에 지정 된 요소는 `all` 요소를 한 번만 나타나거나 전혀 나타나지 않도록 합니다. |       이 함께 사용할 수 없습니다는 <xref:System.Xml.Schema.XmlSchemaComplexType.ContentModel%2A>속성.</xref:System.Xml.Schema.XmlSchemaComplexType.ContentModel%2A>"
  syntax:
    content: public System.Xml.Schema.XmlSchemaParticle Particle { get; set; }
    return:
      type: System.Xml.Schema.XmlSchemaParticle
      description: "작성자 형식입니다."
  overload: System.Xml.Schema.XmlSchemaComplexType.Particle*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Xml.Schema.XmlSchemaType
  isExternal: false
  name: System.Xml.Schema.XmlSchemaType
- uid: System.Xml.Schema.XmlSchemaComplexType.#ctor
  parent: System.Xml.Schema.XmlSchemaComplexType
  isExternal: false
  name: XmlSchemaComplexType()
  nameWithType: XmlSchemaComplexType.XmlSchemaComplexType()
  fullName: System.Xml.Schema.XmlSchemaComplexType.XmlSchemaComplexType()
- uid: System.Xml.Schema.XmlSchemaComplexType.AnyAttribute
  parent: System.Xml.Schema.XmlSchemaComplexType
  isExternal: false
  name: AnyAttribute
  nameWithType: XmlSchemaComplexType.AnyAttribute
  fullName: System.Xml.Schema.XmlSchemaComplexType.AnyAttribute
- uid: System.Xml.Schema.XmlSchemaAnyAttribute
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaAnyAttribute
  nameWithType: XmlSchemaAnyAttribute
  fullName: System.Xml.Schema.XmlSchemaAnyAttribute
- uid: System.Xml.Schema.XmlSchemaComplexType.Attributes
  parent: System.Xml.Schema.XmlSchemaComplexType
  isExternal: false
  name: Attributes
  nameWithType: XmlSchemaComplexType.Attributes
  fullName: System.Xml.Schema.XmlSchemaComplexType.Attributes
- uid: System.Xml.Schema.XmlSchemaObjectCollection
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaObjectCollection
  nameWithType: XmlSchemaObjectCollection
  fullName: System.Xml.Schema.XmlSchemaObjectCollection
- uid: System.Xml.Schema.XmlSchemaComplexType.AttributeUses
  parent: System.Xml.Schema.XmlSchemaComplexType
  isExternal: false
  name: AttributeUses
  nameWithType: XmlSchemaComplexType.AttributeUses
  fullName: System.Xml.Schema.XmlSchemaComplexType.AttributeUses
- uid: System.Xml.Schema.XmlSchemaObjectTable
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaObjectTable
  nameWithType: XmlSchemaObjectTable
  fullName: System.Xml.Schema.XmlSchemaObjectTable
- uid: System.Xml.Schema.XmlSchemaComplexType.AttributeWildcard
  parent: System.Xml.Schema.XmlSchemaComplexType
  isExternal: false
  name: AttributeWildcard
  nameWithType: XmlSchemaComplexType.AttributeWildcard
  fullName: System.Xml.Schema.XmlSchemaComplexType.AttributeWildcard
- uid: System.Xml.Schema.XmlSchemaComplexType.Block
  parent: System.Xml.Schema.XmlSchemaComplexType
  isExternal: false
  name: Block
  nameWithType: XmlSchemaComplexType.Block
  fullName: System.Xml.Schema.XmlSchemaComplexType.Block
- uid: System.Xml.Schema.XmlSchemaDerivationMethod
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaDerivationMethod
  nameWithType: XmlSchemaDerivationMethod
  fullName: System.Xml.Schema.XmlSchemaDerivationMethod
- uid: System.Xml.Schema.XmlSchemaComplexType.BlockResolved
  parent: System.Xml.Schema.XmlSchemaComplexType
  isExternal: false
  name: BlockResolved
  nameWithType: XmlSchemaComplexType.BlockResolved
  fullName: System.Xml.Schema.XmlSchemaComplexType.BlockResolved
- uid: System.Xml.Schema.XmlSchemaComplexType.ContentModel
  parent: System.Xml.Schema.XmlSchemaComplexType
  isExternal: false
  name: ContentModel
  nameWithType: XmlSchemaComplexType.ContentModel
  fullName: System.Xml.Schema.XmlSchemaComplexType.ContentModel
- uid: System.Xml.Schema.XmlSchemaContentModel
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaContentModel
  nameWithType: XmlSchemaContentModel
  fullName: System.Xml.Schema.XmlSchemaContentModel
- uid: System.Xml.Schema.XmlSchemaComplexType.ContentType
  parent: System.Xml.Schema.XmlSchemaComplexType
  isExternal: false
  name: ContentType
  nameWithType: XmlSchemaComplexType.ContentType
  fullName: System.Xml.Schema.XmlSchemaComplexType.ContentType
- uid: System.Xml.Schema.XmlSchemaContentType
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaContentType
  nameWithType: XmlSchemaContentType
  fullName: System.Xml.Schema.XmlSchemaContentType
- uid: System.Xml.Schema.XmlSchemaComplexType.ContentTypeParticle
  parent: System.Xml.Schema.XmlSchemaComplexType
  isExternal: false
  name: ContentTypeParticle
  nameWithType: XmlSchemaComplexType.ContentTypeParticle
  fullName: System.Xml.Schema.XmlSchemaComplexType.ContentTypeParticle
- uid: System.Xml.Schema.XmlSchemaParticle
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaParticle
  nameWithType: XmlSchemaParticle
  fullName: System.Xml.Schema.XmlSchemaParticle
- uid: System.Xml.Schema.XmlSchemaComplexType.IsAbstract
  parent: System.Xml.Schema.XmlSchemaComplexType
  isExternal: false
  name: IsAbstract
  nameWithType: XmlSchemaComplexType.IsAbstract
  fullName: System.Xml.Schema.XmlSchemaComplexType.IsAbstract
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.Schema.XmlSchemaComplexType.IsMixed
  parent: System.Xml.Schema.XmlSchemaComplexType
  isExternal: false
  name: IsMixed
  nameWithType: XmlSchemaComplexType.IsMixed
  fullName: System.Xml.Schema.XmlSchemaComplexType.IsMixed
- uid: System.Xml.Schema.XmlSchemaComplexType.Particle
  parent: System.Xml.Schema.XmlSchemaComplexType
  isExternal: false
  name: Particle
  nameWithType: XmlSchemaComplexType.Particle
  fullName: System.Xml.Schema.XmlSchemaComplexType.Particle
- uid: System.Xml.Schema.XmlSchemaComplexType.#ctor*
  parent: System.Xml.Schema.XmlSchemaComplexType
  isExternal: false
  name: XmlSchemaComplexType
  nameWithType: XmlSchemaComplexType.XmlSchemaComplexType
- uid: System.Xml.Schema.XmlSchemaComplexType.AnyAttribute*
  parent: System.Xml.Schema.XmlSchemaComplexType
  isExternal: false
  name: AnyAttribute
  nameWithType: XmlSchemaComplexType.AnyAttribute
- uid: System.Xml.Schema.XmlSchemaComplexType.Attributes*
  parent: System.Xml.Schema.XmlSchemaComplexType
  isExternal: false
  name: Attributes
  nameWithType: XmlSchemaComplexType.Attributes
- uid: System.Xml.Schema.XmlSchemaComplexType.AttributeUses*
  parent: System.Xml.Schema.XmlSchemaComplexType
  isExternal: false
  name: AttributeUses
  nameWithType: XmlSchemaComplexType.AttributeUses
- uid: System.Xml.Schema.XmlSchemaComplexType.AttributeWildcard*
  parent: System.Xml.Schema.XmlSchemaComplexType
  isExternal: false
  name: AttributeWildcard
  nameWithType: XmlSchemaComplexType.AttributeWildcard
- uid: System.Xml.Schema.XmlSchemaComplexType.Block*
  parent: System.Xml.Schema.XmlSchemaComplexType
  isExternal: false
  name: Block
  nameWithType: XmlSchemaComplexType.Block
- uid: System.Xml.Schema.XmlSchemaComplexType.BlockResolved*
  parent: System.Xml.Schema.XmlSchemaComplexType
  isExternal: false
  name: BlockResolved
  nameWithType: XmlSchemaComplexType.BlockResolved
- uid: System.Xml.Schema.XmlSchemaComplexType.ContentModel*
  parent: System.Xml.Schema.XmlSchemaComplexType
  isExternal: false
  name: ContentModel
  nameWithType: XmlSchemaComplexType.ContentModel
- uid: System.Xml.Schema.XmlSchemaComplexType.ContentType*
  parent: System.Xml.Schema.XmlSchemaComplexType
  isExternal: false
  name: ContentType
  nameWithType: XmlSchemaComplexType.ContentType
- uid: System.Xml.Schema.XmlSchemaComplexType.ContentTypeParticle*
  parent: System.Xml.Schema.XmlSchemaComplexType
  isExternal: false
  name: ContentTypeParticle
  nameWithType: XmlSchemaComplexType.ContentTypeParticle
- uid: System.Xml.Schema.XmlSchemaComplexType.IsAbstract*
  parent: System.Xml.Schema.XmlSchemaComplexType
  isExternal: false
  name: IsAbstract
  nameWithType: XmlSchemaComplexType.IsAbstract
- uid: System.Xml.Schema.XmlSchemaComplexType.IsMixed*
  parent: System.Xml.Schema.XmlSchemaComplexType
  isExternal: false
  name: IsMixed
  nameWithType: XmlSchemaComplexType.IsMixed
- uid: System.Xml.Schema.XmlSchemaComplexType.Particle*
  parent: System.Xml.Schema.XmlSchemaComplexType
  isExternal: false
  name: Particle
  nameWithType: XmlSchemaComplexType.Particle
