### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection
  id: PersonalizationStateInfoCollection
  children:
  - System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.#ctor
  - System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.Add(System.Web.UI.WebControls.WebParts.PersonalizationStateInfo)
  - System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.Clear
  - System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.CopyTo(System.Web.UI.WebControls.WebParts.PersonalizationStateInfo[],System.Int32)
  - System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.Count
  - System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.GetEnumerator
  - System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.IsSynchronized
  - System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.Item(System.Int32)
  - System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.Item(System.String,System.String)
  - System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.Remove(System.String,System.String)
  - System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.SetReadOnly
  - System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.SyncRoot
  - System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  langs:
  - csharp
  name: PersonalizationStateInfoCollection
  nameWithType: PersonalizationStateInfoCollection
  fullName: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection
  type: Class
  summary: "컬렉션을 제공 <xref href=&quot;System.Web.UI.WebControls.WebParts.SharedPersonalizationStateInfo&quot;> </xref> 및 <xref href=&quot;System.Web.UI.WebControls.WebParts.UserPersonalizationStateInfo&quot;> </xref> 개체입니다."
  remarks: "집합에 대 한 컬렉션 기반 래퍼를 제공 하는 동안 클래스 <xref:System.Web.UI.WebControls.WebParts.SharedPersonalizationStateInfo>및 <xref:System.Web.UI.WebControls.WebParts.UserPersonalizationStateInfo>인스턴스.</xref:System.Web.UI.WebControls.WebParts.UserPersonalizationStateInfo> </xref:System.Web.UI.WebControls.WebParts.SharedPersonalizationStateInfo> 이러한 인스턴스 컬렉션을 순차적으로 반복 하 여, 서 수 인덱스 또는 키 값으로 검색 됩니다.       인스턴스는 경로 사용자의 조합에 인덱싱됩니다. 이 작업은 필요 하기 때문에 <xref:System.Web.UI.WebControls.WebParts.SharedPersonalizationStateInfo>에 따라 공유 데이터를 나타내는 인스턴스 인덱싱됩니다 <xref:System.Web.UI.WebControls.WebParts.PersonalizationStateInfo.Path%2A>개체인 반면 <xref:System.Web.UI.WebControls.WebParts.UserPersonalizationStateInfo>인스턴스 둘 다에 따라 인덱싱된는 <xref:System.Web.UI.WebControls.WebParts.PersonalizationStateInfo.Path%2A>개체 및 <xref:System.Web.UI.WebControls.WebParts.UserPersonalizationStateInfo.Username%2A>개체입니다.</xref:System.Web.UI.WebControls.WebParts.UserPersonalizationStateInfo.Username%2A> </xref:System.Web.UI.WebControls.WebParts.PersonalizationStateInfo.Path%2A> </xref:System.Web.UI.WebControls.WebParts.UserPersonalizationStateInfo> </xref:System.Web.UI.WebControls.WebParts.PersonalizationStateInfo.Path%2A> </xref:System.Web.UI.WebControls.WebParts.SharedPersonalizationStateInfo>       개체 정보는 공급자 로부터 수신 된 순서 대로 컬렉션에 유지 됩니다. 컬렉션은 인스턴스 순서를 변경 하거나 컬렉션에서 특정 정렬 순서를 유지 관리 하는 시도 하지 않습니다."
  syntax:
    content: 'public sealed class PersonalizationStateInfoCollection : System.Collections.ICollection'
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection
  langs:
  - csharp
  name: PersonalizationStateInfoCollection()
  nameWithType: PersonalizationStateInfoCollection.PersonalizationStateInfoCollection()
  fullName: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.PersonalizationStateInfoCollection()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection&quot;> </xref> 클래스입니다."
  remarks: "이 생성자는 빈 컬렉션을 초기화합니다."
  syntax:
    content: public PersonalizationStateInfoCollection ();
    parameters: []
  overload: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.Add(System.Web.UI.WebControls.WebParts.PersonalizationStateInfo)
  id: Add(System.Web.UI.WebControls.WebParts.PersonalizationStateInfo)
  parent: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection
  langs:
  - csharp
  name: Add(PersonalizationStateInfo)
  nameWithType: PersonalizationStateInfoCollection.Add(PersonalizationStateInfo)
  fullName: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.Add(PersonalizationStateInfo)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "추가 <xref href=&quot;System.Web.UI.WebControls.WebParts.PersonalizationStateInfo&quot;> </xref>-파생 인스턴스를 컬렉션의 끝에 있습니다."
  remarks: "이 메서드는 추가 <xref:System.Web.UI.WebControls.WebParts.PersonalizationStateInfo>-파생 인스턴스를 컬렉션의 끝에.</xref:System.Web.UI.WebControls.WebParts.PersonalizationStateInfo> 내부적으로 컬렉션의 수가&1; 씩 증가 합니다. 컬렉션에서 현재 활성화 된 모든 열거자가 무효화 됩니다."
  syntax:
    content: public void Add (System.Web.UI.WebControls.WebParts.PersonalizationStateInfo data);
    parameters:
    - id: data
      type: System.Web.UI.WebControls.WebParts.PersonalizationStateInfo
      description: "<xref href=&quot;System.Web.UI.WebControls.WebParts.PersonalizationStateInfo&quot;> </xref>-파생 인스턴스를 추가할 수 있습니다."
  overload: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.Add*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "컬렉션은 읽기 전용으로 표시 되었습니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "사용자별 상태는 컬렉션에 이미 있습니다. 또는 동일한 공유의 인스턴스가 컬렉션에 개체를 추가 하려고 합니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "데이터 매개 변수가 null입니다."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.Clear
  id: Clear
  parent: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: PersonalizationStateInfoCollection.Clear()
  fullName: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.Clear()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "모든 항목의 컬렉션을 지웁니다."
  remarks: "컬렉션에서 현재 활성화 된 모든 열거자가 무효화 됩니다."
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.Clear*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "컬렉션은 읽기 전용으로 표시 되었습니다."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.CopyTo(System.Web.UI.WebControls.WebParts.PersonalizationStateInfo[],System.Int32)
  id: CopyTo(System.Web.UI.WebControls.WebParts.PersonalizationStateInfo[],System.Int32)
  parent: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection
  langs:
  - csharp
  name: CopyTo(PersonalizationStateInfo[],Int32)
  nameWithType: PersonalizationStateInfoCollection.CopyTo(PersonalizationStateInfo[],Int32)
  fullName: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.CopyTo(PersonalizationStateInfo[],Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "요소에 복사는 <xref href=&quot;System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection&quot;> </xref> 컬렉션에는 <xref href=&quot;System.Web.UI.WebControls.WebParts.PersonalizationStateInfo&quot;> </xref> 지정된 된 위치에서 시작 하는 배열입니다."
  remarks: "만들려는 경우이 메서드를 사용 하 여 한 <xref:System.Web.UI.WebControls.WebParts.PersonalizationStateInfo>배열.</xref:System.Web.UI.WebControls.WebParts.PersonalizationStateInfo> 이 메서드를 호출 하기만 하면는 <xref:System.Collections.ArrayList.CopyTo%2A?displayProperty=fullName>메서드와 전달은 `array` 및 `index` 매개 변수.</xref:System.Collections.ArrayList.CopyTo%2A?displayProperty=fullName>"
  syntax:
    content: public void CopyTo (System.Web.UI.WebControls.WebParts.PersonalizationStateInfo[] array, int index);
    parameters:
    - id: array
      type: System.Web.UI.WebControls.WebParts.PersonalizationStateInfo[]
      description: "컬렉션의 요소를 복사할 배열입니다."
    - id: index
      type: System.Int32
      description: "복사 작업을 시작 하는 위치입니다."
  overload: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.Count
  id: Count
  parent: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection
  langs:
  - csharp
  name: Count
  nameWithType: PersonalizationStateInfoCollection.Count
  fullName: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.Count
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "컬렉션의 항목 수를 가져옵니다."
  remarks: "컬렉션의 항목 수 예제에 나와 있는 것 처럼 컬렉션을 반복 하 사용할 수 있습니다."
  example:
  - "The following code example demonstrates how to use the Count property.  \n  \n [!code-cs[WebParts_PersAdmin#3](~/add/codesnippet/csharp/p-system.web.ui.webcontr_61_1.ascx)]"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "컬렉션에 있는 항목의 수입니다."
  overload: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: PersonalizationStateInfoCollection.GetEnumerator()
  fullName: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.GetEnumerator()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "컬렉션을 반복할 수 있는 표준 열거자를 반환 합니다. 이 메서드는 상속 될 수 없습니다."
  remarks: "열거자는 컬렉션의에서 데이터를 읽는 데 사용할 수 있지만 기본 컬렉션을 수정 하는 사용할 수 없습니다.       처음에 열거자는 컬렉션의 첫 번째 요소 앞에 배치 됩니다. <xref:System.Collections.IEnumerator.Reset%2A>메서드도 실행 하면 열거자가이 위치로 복원 합니다.</xref:System.Collections.IEnumerator.Reset%2A> 이 위치는 <xref:System.Collections.IEnumerator.Current%2A>속성이 정의 되지 않습니다.</xref:System.Collections.IEnumerator.Current%2A> <xref:System.Collections.IEnumerator.MoveNext%2A>열거자 <xref:System.Collections.IEnumerator.Current%2A>.</xref:System.Collections.IEnumerator.Current%2A> 의 값을 읽기 전에 컬렉션의 첫 번째 요소로 이동 하는 메서드</xref:System.Collections.IEnumerator.MoveNext%2A> 를 호출 해야 따라서 열거자에 대 한 자세한 내용은 <xref:System.Collections.IEnumerator>.</xref:System.Collections.IEnumerator> 을 참조 하십시오.       열거자는 컬렉션이 변경 되지으로 유효한 상태를 유지 합니다. 컬렉션 변경 되 면 추가, 수정 또는 요소를 삭제와 같은 열거자는 무효화 하 고 해당 동작은 정의 되지 않습니다.       `foreach` C# 언어의 (`for each` Visual basic에서)은 열거자의 복잡성을 숨깁니다. 따라서 사용 하 여 `foreach` 열거자를 직접 조작 하는 대신이 좋습니다.       열거자는 컬렉션에 배타적으로 액세스가 없습니다. 따라서 컬렉션을 열거 것은 본질적으로 스레드로부터 안전한 프로시저가 아닙니다. 을 열거 하는 동안 스레드로부터 안전을 보장 하려면 전체 열거 동안 컬렉션을 잠글 수 있습니다. 컬렉션에 여러 스레드에서 읽기 및 쓰기에 대 한 액세스를 허용 하려면 사용자 지정 동기화를 구현 해야 합니다."
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "<xref:System.Collections.IEnumerator>컬렉션을 반복에 사용할 수 있는.</xref:System.Collections.IEnumerator>"
  overload: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.IsSynchronized
  id: IsSynchronized
  parent: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: PersonalizationStateInfoCollection.IsSynchronized
  fullName: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.IsSynchronized
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "에 대 한 액세스 여부를 나타내는 값을 가져옵니다는 <xref href=&quot;System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection&quot;> </xref> 컬렉션이 동기화 되어 스레드로부터 안전 하 게 보호 합니다."
  remarks: "컬렉션을 열거 본질적으로 스레드로부터 안전한 프로시저가 아닙니다. 컬렉션이 동기화 되어 있을 때 다른 스레드에서 수 수정할 열거자에서 예외가 발생 하는 컬렉션입니다. 열거 동안 스레드 보안을 보장 하려면 전체 열거 동안 컬렉션을 잠글 하거나 다른 스레드에서 변경 된 내용으로 인해 발생 한 예외를 catch 합니다.       <xref:System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.SyncRoot%2A>속성 사용 <xref:System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection>.</xref:System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection> 에 대 한 액세스를 동기화 할 수 있는 개체를 반환 합니다.</xref:System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.SyncRoot%2A>"
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>컬렉션에 대 한 액세스가 동기화 되어; 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 값은 항상 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 에 대 한 <xref href=&quot;System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection&quot;> </xref> 웹 파트 컨트롤 집합에 의해 생성 된 개체입니다."
  overload: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: PersonalizationStateInfoCollection.Item(Int32)
  fullName: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.Item(Int32)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "가져옵니다는 <xref href=&quot;System.Web.UI.WebControls.WebParts.PersonalizationStateInfo&quot;> </xref> 인스턴스 컬렉션에서 지정 된 서 수 인덱스에 위치 합니다."
  remarks: "이 속성을 검색 된 <xref:System.Web.UI.WebControls.WebParts.PersonalizationStateInfo>인스턴스 컬렉션에서 지정 된 서 수 인덱스에 위치 합니다.</xref:System.Web.UI.WebControls.WebParts.PersonalizationStateInfo>"
  syntax:
    content: public System.Web.UI.WebControls.WebParts.PersonalizationStateInfo this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "검색할 개체의 서 수 인덱스입니다."
    return:
      type: System.Web.UI.WebControls.WebParts.PersonalizationStateInfo
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.PersonalizationStateInfo&quot;> </xref> 인스턴스 컬렉션에서 지정 된 서 수 인덱스에 위치 합니다."
  overload: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.Item*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code> is less than zero.  \n  \n \\- or -  \n  \n <code>index</code> is greater than <xref:System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.Count*>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.Item(System.String,System.String)
  id: Item(System.String,System.String)
  parent: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection
  langs:
  - csharp
  name: Item(String,String)
  nameWithType: PersonalizationStateInfoCollection.Item(String,String)
  fullName: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.Item(String,String)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "지정된 된 매개 변수를 기반으로 컬렉션에서 요소를 가져옵니다."
  remarks: "이 속성은 컬렉션에 대 한 기본 인덱서 합니다. 만 `path` 속성이 반환 제공 되는 <xref:System.Web.UI.WebControls.WebParts.SharedPersonalizationStateInfo>인스턴스.</xref:System.Web.UI.WebControls.WebParts.SharedPersonalizationStateInfo> 두 `path` 및 `username` 속성이 반환 제공 되는 <xref:System.Web.UI.WebControls.WebParts.UserPersonalizationStateInfo>의 조합에 대 한 인스턴스 `path` 및 `username`.</xref:System.Web.UI.WebControls.WebParts.UserPersonalizationStateInfo>       경우 `path` (경우에는 `username` 로 설정 되어 `null`) 존재 하지 않는 경우 `username` 및 `path` 이 존재 하지 않는 `null` 반환 됩니다."
  syntax:
    content: public System.Web.UI.WebControls.WebParts.PersonalizationStateInfo this[string path, string username] { get; }
    parameters:
    - id: path
      type: System.String
      description: "개인 설정 상태 개체를 검색할 수의 응용 프로그램 상대 경로입니다."
    - id: username
      type: System.String
      description: "사용자 이름에서 <xref href=&quot;System.Web.UI.WebControls.WebParts.UserPersonalizationStateInfo&quot;> </xref> 검색할 개체입니다."
    return:
      type: System.Web.UI.WebControls.WebParts.PersonalizationStateInfo
      description: "지정된 된 매개 변수를 기반으로 컬렉션에서 요소입니다."
  overload: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.Item*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.Remove(System.String,System.String)
  id: Remove(System.String,System.String)
  parent: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection
  langs:
  - csharp
  name: Remove(String,String)
  nameWithType: PersonalizationStateInfoCollection.Remove(String,String)
  fullName: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.Remove(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "제거는 <xref href=&quot;System.Web.UI.WebControls.WebParts.PersonalizationStateInfo&quot;> </xref>-컬렉션에서 파생 되는 개체입니다."
  remarks: "이 메서드는 <xref:System.Web.UI.WebControls.WebParts.PersonalizationStateInfo>-컬렉션에서 파생 되는 인스턴스.</xref:System.Web.UI.WebControls.WebParts.PersonalizationStateInfo> 제거 된 인스턴스 다음 요소가 하나라도 그룹이 하 여 빈 자리를 차지 위로 이동 합니다. 내부적으로 컬렉션의 카운트는 컬렉션은&1; 씩 감소 합니다. 컬렉션에서 현재 활성화 된 모든 열거자가 무효화 됩니다.       경우에 `path` 제공 하면 <xref:System.Web.UI.WebControls.WebParts.SharedPersonalizationStateInfo>인스턴스가 해당 경로가 제거 됩니다.</xref:System.Web.UI.WebControls.WebParts.SharedPersonalizationStateInfo> 두 `path` 및 `username` 제공 되 면 <xref:System.Web.UI.WebControls.WebParts.UserPersonalizationStateInfo>의 조합에 대 한 인스턴스 `path` 및 `username` 제거 됩니다.</xref:System.Web.UI.WebControls.WebParts.UserPersonalizationStateInfo>      > [!NOTE] > 컬렉션에서 존재 하지 않는 항목을 제거 하려고 시도할 수 있습니다;이 작업에서 예외가 발생 하지 것입니다."
  syntax:
    content: public void Remove (string path, string username);
    parameters:
    - id: path
      type: System.String
      description: "제거할 개인 설정 상태 개체의 상대 응용 프로그램 경로입니다."
    - id: username
      type: System.String
      description: "사용자 이름에서 <xref href=&quot;System.Web.UI.WebControls.WebParts.UserPersonalizationStateInfo&quot;> </xref>-파생 개체를 삭제 합니다."
  overload: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.Remove*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "컬렉션은 읽기 전용으로 표시 되었습니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code> is null.  \n  \n \\- or -  \n  \n both parameters are null."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.SetReadOnly
  id: SetReadOnly
  parent: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection
  langs:
  - csharp
  name: SetReadOnly()
  nameWithType: PersonalizationStateInfoCollection.SetReadOnly()
  fullName: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.SetReadOnly()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "컬렉션을 읽기 전용으로 표시 합니다."
  remarks: "과 같은 읽기 전용 컬렉션을 수정 하려고 하는 메서드 <xref:System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.Add%2A>및 <xref:System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.Remove%2A>, throw 한 <xref:System.NotSupportedException>예외.</xref:System.NotSupportedException> </xref:System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.Remove%2A> </xref:System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.Add%2A>      > [!NOTE] > 컬렉션에 여러 번 SetReadOnly 메서드를 호출할 수;이 예외가 발생 하지 것입니다."
  syntax:
    content: public void SetReadOnly ();
    parameters: []
  overload: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.SetReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.SyncRoot
  id: SyncRoot
  parent: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection
  langs:
  - csharp
  name: SyncRoot
  nameWithType: PersonalizationStateInfoCollection.SyncRoot
  fullName: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.SyncRoot
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "에 대 한 액세스를 동기화 하는 데 사용할 수 있는 개체를 가져옵니다는 <xref href=&quot;System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection&quot;> </xref> 인스턴스."
  remarks: "컬렉션을 열거 본질적으로 스레드로부터 안전한 프로시저가 아닙니다. 컬렉션이 동기화 되어 있을 때 다른 스레드에서 수 수정할 열거자에서 예외가 발생 하는 컬렉션입니다. 열거 동안 스레드 보안을 보장 하려면 전체 열거 동안 컬렉션을 잠글 하거나 다른 스레드에서 변경 된 내용으로 인해 발생 한 예외를 catch 합니다.       파생된 클래스에 SyncRoot 속성을 사용 하 여 컬렉션의 동기화 된 고유 버전을 제공할 수 있습니다. 동기화 하는 코드에서 컬렉션의 SyncRoot, 컬렉션 자체에서 직접 작업을 수행 해야 합니다. 이렇게 하면 다른 개체에서 파생 된 컬렉션의 적절 한 작업입니다. 특히 컬렉션 인스턴스를 동시에 수정할 수 있는 다른 스레드와 적절 한 동기화 유지 관리 합니다."
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "에 대 한 액세스를 동기화 하는 데 사용할 수 있는 개체는 <xref href=&quot;System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection&quot;> </xref>합니다. 웹 파트 컨트롤 집합 현재 컬렉션 개체에 대 한 참조를 반환합니다."
  overload: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection
  langs:
  - csharp
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: PersonalizationStateInfoCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "기본 구현 <xref:System.Collections.ICollection.CopyTo*>메서드.</xref:System.Collections.ICollection.CopyTo*>"
  remarks: "이 메서드, like는 <xref:System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection>클래스의 <xref:System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.CopyTo%2A>메서드를 단순히 호출는 <xref:System.Collections.ArrayList.CopyTo%2A?displayProperty=fullName>메서드와 전달은 `array` 및 `index` 매개 변수.</xref:System.Collections.ArrayList.CopyTo%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.CopyTo%2A> </xref:System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection>"
  syntax:
    content: void ICollection.CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "배열 컬렉션 <xref href=&quot;System.Web.UI.WebControls.WebParts.PersonalizationStateInfo&quot;> </xref> 개체가 복사 됩니다."
    - id: index
      type: System.Int32
      description: "점 `array` 에서 복사를 시작할는 <xref href=&quot;System.Web.UI.WebControls.WebParts.PersonalizationStateInfo&quot;> </xref> 개체입니다."
  overload: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.System#Collections#ICollection#CopyTo*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.#ctor
  parent: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection
  isExternal: false
  name: PersonalizationStateInfoCollection()
  nameWithType: PersonalizationStateInfoCollection.PersonalizationStateInfoCollection()
  fullName: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.PersonalizationStateInfoCollection()
- uid: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.Add(System.Web.UI.WebControls.WebParts.PersonalizationStateInfo)
  parent: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection
  isExternal: false
  name: Add(PersonalizationStateInfo)
  nameWithType: PersonalizationStateInfoCollection.Add(PersonalizationStateInfo)
  fullName: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.Add(PersonalizationStateInfo)
- uid: System.Web.UI.WebControls.WebParts.PersonalizationStateInfo
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: PersonalizationStateInfo
  nameWithType: PersonalizationStateInfo
  fullName: System.Web.UI.WebControls.WebParts.PersonalizationStateInfo
- uid: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.Clear
  parent: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection
  isExternal: false
  name: Clear()
  nameWithType: PersonalizationStateInfoCollection.Clear()
  fullName: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.Clear()
- uid: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.CopyTo(System.Web.UI.WebControls.WebParts.PersonalizationStateInfo[],System.Int32)
  parent: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection
  isExternal: false
  name: CopyTo(PersonalizationStateInfo[],Int32)
  nameWithType: PersonalizationStateInfoCollection.CopyTo(PersonalizationStateInfo[],Int32)
  fullName: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.CopyTo(PersonalizationStateInfo[],Int32)
- uid: System.Web.UI.WebControls.WebParts.PersonalizationStateInfo[]
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: PersonalizationStateInfo
  nameWithType: PersonalizationStateInfo
  fullName: System.Web.UI.WebControls.WebParts.PersonalizationStateInfo[]
  spec.csharp:
  - uid: System.Web.UI.WebControls.WebParts.PersonalizationStateInfo
    name: PersonalizationStateInfo
    nameWithType: PersonalizationStateInfo
    fullName: PersonalizationStateInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.Count
  parent: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection
  isExternal: false
  name: Count
  nameWithType: PersonalizationStateInfoCollection.Count
  fullName: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.Count
- uid: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.GetEnumerator
  parent: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: PersonalizationStateInfoCollection.GetEnumerator()
  fullName: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.IsSynchronized
  parent: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: PersonalizationStateInfoCollection.IsSynchronized
  fullName: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.IsSynchronized
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.Item(System.Int32)
  parent: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: PersonalizationStateInfoCollection.Item(Int32)
  fullName: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.Item(Int32)
- uid: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.Item(System.String,System.String)
  parent: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection
  isExternal: false
  name: Item(String,String)
  nameWithType: PersonalizationStateInfoCollection.Item(String,String)
  fullName: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.Item(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.Remove(System.String,System.String)
  parent: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection
  isExternal: false
  name: Remove(String,String)
  nameWithType: PersonalizationStateInfoCollection.Remove(String,String)
  fullName: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.Remove(String,String)
- uid: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.SetReadOnly
  parent: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection
  isExternal: false
  name: SetReadOnly()
  nameWithType: PersonalizationStateInfoCollection.SetReadOnly()
  fullName: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.SetReadOnly()
- uid: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.SyncRoot
  parent: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection
  isExternal: false
  name: SyncRoot
  nameWithType: PersonalizationStateInfoCollection.SyncRoot
  fullName: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.SyncRoot
- uid: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: PersonalizationStateInfoCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.System.Collections.ICollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.#ctor*
  parent: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection
  isExternal: false
  name: PersonalizationStateInfoCollection
  nameWithType: PersonalizationStateInfoCollection.PersonalizationStateInfoCollection
- uid: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.Add*
  parent: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection
  isExternal: false
  name: Add
  nameWithType: PersonalizationStateInfoCollection.Add
- uid: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.Clear*
  parent: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection
  isExternal: false
  name: Clear
  nameWithType: PersonalizationStateInfoCollection.Clear
- uid: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.CopyTo*
  parent: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection
  isExternal: false
  name: CopyTo
  nameWithType: PersonalizationStateInfoCollection.CopyTo
- uid: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.Count*
  parent: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection
  isExternal: false
  name: Count
  nameWithType: PersonalizationStateInfoCollection.Count
- uid: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.GetEnumerator*
  parent: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: PersonalizationStateInfoCollection.GetEnumerator
- uid: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.IsSynchronized*
  parent: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: PersonalizationStateInfoCollection.IsSynchronized
- uid: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.Item*
  parent: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection
  isExternal: false
  name: Item
  nameWithType: PersonalizationStateInfoCollection.Item
- uid: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.Remove*
  parent: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection
  isExternal: false
  name: Remove
  nameWithType: PersonalizationStateInfoCollection.Remove
- uid: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.SetReadOnly*
  parent: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection
  isExternal: false
  name: SetReadOnly
  nameWithType: PersonalizationStateInfoCollection.SetReadOnly
- uid: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.SyncRoot*
  parent: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection
  isExternal: false
  name: SyncRoot
  nameWithType: PersonalizationStateInfoCollection.SyncRoot
- uid: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.System#Collections#ICollection#CopyTo*
  parent: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo
  nameWithType: PersonalizationStateInfoCollection.System.Collections.ICollection.CopyTo
