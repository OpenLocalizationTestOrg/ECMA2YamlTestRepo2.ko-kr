### YamlMime:ManagedReference
items:
- uid: System.Security.HostSecurityManager
  id: HostSecurityManager
  children:
  - System.Security.HostSecurityManager.#ctor
  - System.Security.HostSecurityManager.DetermineApplicationTrust(System.Security.Policy.Evidence,System.Security.Policy.Evidence,System.Security.Policy.TrustManagerContext)
  - System.Security.HostSecurityManager.DomainPolicy
  - System.Security.HostSecurityManager.Flags
  - System.Security.HostSecurityManager.GenerateAppDomainEvidence(System.Type)
  - System.Security.HostSecurityManager.GenerateAssemblyEvidence(System.Type,System.Reflection.Assembly)
  - System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes
  - System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes(System.Reflection.Assembly)
  - System.Security.HostSecurityManager.ProvideAppDomainEvidence(System.Security.Policy.Evidence)
  - System.Security.HostSecurityManager.ProvideAssemblyEvidence(System.Reflection.Assembly,System.Security.Policy.Evidence)
  - System.Security.HostSecurityManager.ResolvePolicy(System.Security.Policy.Evidence)
  langs:
  - csharp
  name: HostSecurityManager
  nameWithType: HostSecurityManager
  fullName: System.Security.HostSecurityManager
  type: Class
  summary: "제어 및 응용 프로그램 도메인에 대 한 보안 동작의 사용자 지정을 허용합니다."
  remarks: "역할에 새 <xref:System.AppDomain>공용 언어 런타임 <xref:System.AppDomainManager> <xref:System.AppDomain>.</xref:System.AppDomain> 보안 결정에 참여 하는 HostSecurityManager의 존재 여부에 대 한</xref:System.AppDomainManager> 쿼리</xref:System.AppDomain> 를 만들 때  호스트 공급자 HostSecurityManager 클래스에서 상속 되는 호스트 보안 관리자를 구현 해야 합니다."
  example:
  - "The following example shows a very simple implementation of a HostSecurityManager.  \n  \n [!code-cs[System.Security.HostSecurityManager#1](~/add/codesnippet/csharp/t-system.security.hostse_1.cs)]\n [!code-vb[System.Security.HostSecurityManager#1](~/add/codesnippet/visualbasic/t-system.security.hostse_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      [System.Security.SecurityCritical]

      public class HostSecurityManager
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.HostSecurityManager.#ctor
  id: '#ctor'
  parent: System.Security.HostSecurityManager
  langs:
  - csharp
  name: HostSecurityManager()
  nameWithType: HostSecurityManager.HostSecurityManager()
  fullName: System.Security.HostSecurityManager.HostSecurityManager()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Security.HostSecurityManager&quot;> </xref> 클래스입니다."
  syntax:
    content: public HostSecurityManager ();
    parameters: []
  overload: System.Security.HostSecurityManager.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.HostSecurityManager.DetermineApplicationTrust(System.Security.Policy.Evidence,System.Security.Policy.Evidence,System.Security.Policy.TrustManagerContext)
  id: DetermineApplicationTrust(System.Security.Policy.Evidence,System.Security.Policy.Evidence,System.Security.Policy.TrustManagerContext)
  parent: System.Security.HostSecurityManager
  langs:
  - csharp
  name: DetermineApplicationTrust(Evidence,Evidence,TrustManagerContext)
  nameWithType: HostSecurityManager.DetermineApplicationTrust(Evidence,Evidence,TrustManagerContext)
  fullName: System.Security.HostSecurityManager.DetermineApplicationTrust(Evidence,Evidence,TrustManagerContext)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "응용 프로그램을 실행 해야 하는지를 결정 합니다."
  remarks: "이 메서드는 파생된 클래스에서 재정의할 수 있습니다. 기본 구현은 응용 프로그램을 실행 해야 하는 경우를 확인 하려면 응용 프로그램 보안 관리자를 호출 합니다.       기본 구현은 활성기 증거를 사용 하지 않습니다. 하지만 재정의 된 구현 응용 프로그램을 활성화 하는 응용 프로그램 도메인에 대 한 보안 증명 정보를 확인 하려면 활성기 증거를 사용할 수 있습니다."
  example:
  - "The following example shows how to override the DetermineApplicationTrust method for a custom host security manager. This example is part of a larger example provided for the <xref:System.Security.HostSecurityManager> class.  \n  \n [!code-cs[System.Security.HostSecurityManager#3](~/add/codesnippet/csharp/c64c31c7-d035-4489-84b0-_1.cs)]\n [!code-vb[System.Security.HostSecurityManager#3](~/add/codesnippet/visualbasic/c64c31c7-d035-4489-84b0-_1.vb)]"
  syntax:
    content: public virtual System.Security.Policy.ApplicationTrust DetermineApplicationTrust (System.Security.Policy.Evidence applicationEvidence, System.Security.Policy.Evidence activatorEvidence, System.Security.Policy.TrustManagerContext context);
    parameters:
    - id: applicationEvidence
      type: System.Security.Policy.Evidence
      description: "활성화 될 응용 프로그램에 대 한 증명 정보입니다."
    - id: activatorEvidence
      type: System.Security.Policy.Evidence
      description: "필요에 따라 활성 응용 프로그램 도메인에 대 한 증거입니다."
    - id: context
      type: System.Security.Policy.TrustManagerContext
      description: "신뢰 컨텍스트입니다."
    return:
      type: System.Security.Policy.ApplicationTrust
      description: "응용 프로그램에 대 한 신뢰 정보를 포함 하는 개체입니다."
  overload: System.Security.HostSecurityManager.DetermineApplicationTrust*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>applicationEvidence</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<xref href=&quot;System.Runtime.Hosting.ActivationArguments&quot;> </xref> 응용 프로그램 증명에 개체를 찾을 수 없습니다.       -또는- <xref:System.Runtime.Hosting.ActivationArguments.ActivationContext*>활성화 인수에는 속성은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Runtime.Hosting.ActivationArguments.ActivationContext*>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.Security.Policy.ApplicationTrust&quot;> </xref> 집합 최소 요청에 지정 된 집합에 포함 하지 않는 부여는 <xref href=&quot;System.ActivationContext&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Security.HostSecurityManager.DomainPolicy
  id: DomainPolicy
  parent: System.Security.HostSecurityManager
  langs:
  - csharp
  name: DomainPolicy
  nameWithType: HostSecurityManager.DomainPolicy
  fullName: System.Security.HostSecurityManager.DomainPolicy
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "파생된 클래스에서 재정의 되 면 현재 응용 프로그램 도메인에 대 한 보안 정책을 가져옵니다."
  remarks: "이 속성은 파생된 클래스에서 재정의할 수 있습니다. 기본 구현에서는 항상 반환 `null`합니다.       이 속성에 호출 되 <xref:System.AppDomain>만든 시간입니다.</xref:System.AppDomain> 현재 <xref:System.AppDomain>.</xref:System.AppDomain> 에 대 한 정책을 제공 하는 호스트 수  정책 수준은 다음으로 구성:-단일 루트 트리로 구성 되는 코드 그룹의 집합입니다.      -코드 그룹에 속한 코드에 부여할 사용 권한을 지정 하기 위해 코드 그룹에서 참조 되는 명명 된 권한 집합의 집합입니다.      -완전 신뢰 어셈블리의 목록입니다.      > [!IMPORTANT] > 상속자에 대 한 참조는 <xref:System.Security.HostSecurityManager>중요 한 구현 정보에 대 한 클래스입니다.</xref:System.Security.HostSecurityManager>"
  syntax:
    content: public virtual System.Security.Policy.PolicyLevel DomainPolicy { get; }
    return:
      type: System.Security.Policy.PolicyLevel
      description: "현재 어플리케이션 도메인에 대 한 보안 정책입니다. 기본값은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Security.HostSecurityManager.DomainPolicy*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "이 메서드는 코드 액세스 보안 (CA) 정책에서 사용 되지 않는 사용은 [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]합니다. .NET Framework의 이전 버전과 호환성을 위해 CAS 정책을 사용 하려면 사용 된 [ &lt;legacyCasPolicy&gt; 요소](../Topic/%3CNetFx40_LegacySecurityPolicy%3E%20Element.md)합니다."
  platform:
  - net462
- uid: System.Security.HostSecurityManager.Flags
  id: Flags
  parent: System.Security.HostSecurityManager
  langs:
  - csharp
  name: Flags
  nameWithType: HostSecurityManager.Flags
  fullName: System.Security.HostSecurityManager.Flags
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "호스트에 중요 한 보안 정책 구성 요소를 나타내는 플래그를 가져옵니다."
  remarks: "이 속성은 파생된 클래스에서 재정의할 수 있습니다. 기본 구현에서는 항상 <xref:System.Security.HostSecurityManagerOptions>.</xref:System.Security.HostSecurityManagerOptions> 반환       파생 된 호스트의 하위 집합만이 속성의 값을 변경할 수는 <xref:System.Security.HostSecurityManagerOptions>관심.</xref:System.Security.HostSecurityManagerOptions>  이러한 하위 집합 없음, 거부 된 집합, 정책 수준 및 포함 어셈블리 증명 정보입니다."
  example:
  - "The following example shows how to override the Flags property for a custom host security manager. This example is part of a larger example provided for the <xref:System.Security.HostSecurityManager> class.  \n  \n [!code-cs[System.Security.HostSecurityManager#2](~/add/codesnippet/csharp/p-system.security.hostse_1.cs)]\n [!code-vb[System.Security.HostSecurityManager#2](~/add/codesnippet/visualbasic/p-system.security.hostse_1.vb)]"
  syntax:
    content: public virtual System.Security.HostSecurityManagerOptions Flags { get; }
    return:
      type: System.Security.HostSecurityManagerOptions
      description: "보안 정책 구성 요소를 지정 하는 열거형 값 중 하나입니다. 기본값은 <xref href=&quot;System.Security.HostSecurityManagerOptions&quot;> </xref>합니다."
  overload: System.Security.HostSecurityManager.Flags*
  exceptions: []
  platform:
  - net462
- uid: System.Security.HostSecurityManager.GenerateAppDomainEvidence(System.Type)
  id: GenerateAppDomainEvidence(System.Type)
  parent: System.Security.HostSecurityManager
  langs:
  - csharp
  name: GenerateAppDomainEvidence(Type)
  nameWithType: HostSecurityManager.GenerateAppDomainEvidence(Type)
  fullName: System.Security.HostSecurityManager.GenerateAppDomainEvidence(Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "응용 프로그램 도메인에 대 한 특정 증명 정보 형식을 요청합니다."
  remarks: "이 메서드는 파생된 클래스에서 재정의할 수 있습니다. 기본 구현은 반환 `null`합니다.       공용 언어 런타임에서 지정 된 형식의 증거 현재 <xref:System.AppDomain>.</xref:System.AppDomain> 에 필요할 때이 메서드를 호출 반환 된 값은 호스트에서 제공한 증거로 사용 되며에 저장 되는 <xref:System.AppDomain.Evidence%2A>의 컬렉션은 <xref:System.AppDomain.CurrentDomain%2A>속성.</xref:System.AppDomain.CurrentDomain%2A> </xref:System.AppDomain.Evidence%2A> 사용할 수는 <xref:System.Security.Policy.Evidence.GetAssemblyEvidence%2A?displayProperty=fullName>컬렉션에서 생성 된 증명 정보를 얻는 메서드를.</xref:System.Security.Policy.Evidence.GetAssemblyEvidence%2A?displayProperty=fullName>       이 메서드는 콜백을 가져오려면 호스트 지정 해야 합니다는 <xref:System.Security.HostSecurityManagerOptions>플래그는 <xref:System.Security.HostSecurityManager.Flags%2A>속성.</xref:System.Security.HostSecurityManager.Flags%2A> </xref:System.Security.HostSecurityManagerOptions>       증명 정보를 생성 합니다.이 방법은 통해 호스트에 대 한 증거 생성을 지연 하는 <xref:System.AppDomain>증거 필요할 때까지.</xref:System.AppDomain> .NET Framework 버전 3.5 및 이전 버전에서 제공 하는 데 필요한 했습니다 <xref:System.AppDomain>재정의 하 여 로드할 때 증거는 <xref:System.Security.HostSecurityManager.ProvideAppDomainEvidence%2A>메서드.</xref:System.Security.HostSecurityManager.ProvideAppDomainEvidence%2A> </xref:System.AppDomain> GenerateAppDomainEvidence 사용 하 여 <xref:System.Security.HostSecurityManager.ProvideAppDomainEvidence%2A>.</xref:System.Security.HostSecurityManager.ProvideAppDomainEvidence%2A> 를 재정의 하는 대신 증거를 제공 하는 것이 좋습니다.       GenerateAppDomainEvidence 메서드가 콜백 됩니다의 재정의에 지정 된 증명 정보 형식에 대해서만 <xref:System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes%2A>메서드.</xref:System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes%2A>       반환 값이 `null` 호스트가 특정 유형의 증명 정보를 생성할 수 없음을 나타냅니다."
  example:
  - "The following example shows how to override the <xref:System.Security.HostSecurityManager.ProvideAppDomainEvidence%2A> method for a custom host security manager. This example is part of a larger example provided for the <xref:System.Security.HostSecurityManager> class.  \n  \n [!code-cs[System.Security.HostSecurityManager#6](~/add/codesnippet/csharp/m-system.security.hostse_1.cs)]\n [!code-vb[System.Security.HostSecurityManager#6](~/add/codesnippet/visualbasic/m-system.security.hostse_1.vb)]"
  syntax:
    content: public virtual System.Security.Policy.EvidenceBase GenerateAppDomainEvidence (Type evidenceType);
    parameters:
    - id: evidenceType
      type: System.Type
      description: "증명 정보 유형입니다."
    return:
      type: System.Security.Policy.EvidenceBase
      description: "요청한 응용 프로그램 도메인 증명 정보입니다."
  overload: System.Security.HostSecurityManager.GenerateAppDomainEvidence*
  exceptions: []
  platform:
  - net462
- uid: System.Security.HostSecurityManager.GenerateAssemblyEvidence(System.Type,System.Reflection.Assembly)
  id: GenerateAssemblyEvidence(System.Type,System.Reflection.Assembly)
  parent: System.Security.HostSecurityManager
  langs:
  - csharp
  name: GenerateAssemblyEvidence(Type,Assembly)
  nameWithType: HostSecurityManager.GenerateAssemblyEvidence(Type,Assembly)
  fullName: System.Security.HostSecurityManager.GenerateAssemblyEvidence(Type,Assembly)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "어셈블리에 대 한 특정 증명 정보 형식을 요청합니다."
  remarks: "이 메서드는 파생된 클래스에서 재정의할 수 있습니다. 기본 구현은 반환 `null`합니다.       공용 언어 런타임에서 지정 된 형식의 증거는 현재 어셈블리에 필요할 때이 메서드를 호출 합니다. 반환 된 값은 호스트에서 제공한 증거로 사용 되며에 저장 되는 <xref:System.Reflection.Assembly.Evidence%2A>속성.</xref:System.Reflection.Assembly.Evidence%2A> 사용할 수는 <xref:System.Security.Policy.Evidence.GetAssemblyEvidence%2A?displayProperty=fullName>에서 생성 된 증명 정보를 얻는 메서드를는 <xref:System.Reflection.Assembly.Evidence%2A>속성.</xref:System.Reflection.Assembly.Evidence%2A> </xref:System.Security.Policy.Evidence.GetAssemblyEvidence%2A?displayProperty=fullName>       이 메서드는 콜백을 가져오려면 호스트 지정 해야 합니다는 <xref:System.Security.HostSecurityManagerOptions>플래그는 <xref:System.Security.HostSecurityManager.Flags%2A>속성.</xref:System.Security.HostSecurityManager.Flags%2A> </xref:System.Security.HostSecurityManagerOptions>       증명 정보를 생성 합니다.이 방법은 통해 호스트에 대 한 증거 생성을 지연 하는 <xref:System.AppDomain>증거 필요할 때까지.</xref:System.AppDomain> .NET Framework 3.5 및 이전 버전에서 제공 하는 데 필요한 했습니다 <xref:System.AppDomain>재정의 하 여 로드할 때 증거는 <xref:System.Security.HostSecurityManager.ProvideAppDomainEvidence%2A>메서드.</xref:System.Security.HostSecurityManager.ProvideAppDomainEvidence%2A> </xref:System.AppDomain> GenerateAssemblyEvidence 사용 하 여 <xref:System.Security.HostSecurityManager.ProvideAssemblyEvidence%2A>.</xref:System.Security.HostSecurityManager.ProvideAssemblyEvidence%2A> 를 재정의 하는 대신 증거를 제공 하는 것이 좋습니다.       GenerateAssemblyEvidence 메서드가 콜백 됩니다의 재정의에 지정 된 증명 정보 형식에 대해서만 <xref:System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes%2A>메서드.</xref:System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes%2A>       반환 값이 `null` 호스트가 특정 유형의 증명 정보를 생성할 수 없음을 나타냅니다."
  syntax:
    content: public virtual System.Security.Policy.EvidenceBase GenerateAssemblyEvidence (Type evidenceType, System.Reflection.Assembly assembly);
    parameters:
    - id: evidenceType
      type: System.Type
      description: "증명 정보 유형입니다."
    - id: assembly
      type: System.Reflection.Assembly
      description: "대상 어셈블리입니다."
    return:
      type: System.Security.Policy.EvidenceBase
      description: "요청한 어셈블리 증명 정보입니다."
  overload: System.Security.HostSecurityManager.GenerateAssemblyEvidence*
  exceptions: []
  platform:
  - net462
- uid: System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes
  id: GetHostSuppliedAppDomainEvidenceTypes
  parent: System.Security.HostSecurityManager
  langs:
  - csharp
  name: GetHostSuppliedAppDomainEvidenceTypes()
  nameWithType: HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes()
  fullName: System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "요청 호스트 응용 프로그램 도메인에서 제공할 수 있는 증명 정보 형식을 결정 합니다."
  remarks: "이 메서드는 파생된 클래스에서 재정의할 수 있습니다. 기본 구현은 반환 `null`합니다.       이 메서드에서 반환 된 형식이 결정 여부는 <xref:System.Security.HostSecurityManager.GenerateAppDomainEvidence%2A>메서드를 다시 호출 됩니다.</xref:System.Security.HostSecurityManager.GenerateAppDomainEvidence%2A> 호스트는이 증거 유형을 생성할 수 있어야 하지만 할 수 있습니다이 목록에 있는 형식의 존재를 의미 하지 않습니다. 이 이유로, 아래에서-지정이 목록의 유형 보다는 과도 하 게 지정 하 가장 좋습니다."
  syntax:
    content: public virtual Type[] GetHostSuppliedAppDomainEvidenceTypes ();
    parameters: []
    return:
      type: System.Type[]
      description: "증거 형식의 배열입니다."
  overload: System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes*
  exceptions: []
  platform:
  - net462
- uid: System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes(System.Reflection.Assembly)
  id: GetHostSuppliedAssemblyEvidenceTypes(System.Reflection.Assembly)
  parent: System.Security.HostSecurityManager
  langs:
  - csharp
  name: GetHostSuppliedAssemblyEvidenceTypes(Assembly)
  nameWithType: HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes(Assembly)
  fullName: System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes(Assembly)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "요청 호스트 된 어셈블리에 대해 제공할 수 있는 증명 정보 형식을 결정 합니다."
  remarks: "이 메서드는 파생된 클래스에서 재정의할 수 있습니다. 기본 구현은 반환 `null`합니다.       이 메서드에서 반환 된 형식이 결정 여부는 <xref:System.Security.HostSecurityManager.GenerateAssemblyEvidence%2A>메서드를 다시 호출 됩니다.</xref:System.Security.HostSecurityManager.GenerateAssemblyEvidence%2A> 호스트는이 증거 유형을 생성할 수 있어야 하지만 할 수 있습니다이 목록에 있는 형식의 존재를 의미 하지 않습니다. 이 이유로, 아래에서-지정이 목록의 유형 보다는 과도 하 게 지정 하 가장 좋습니다."
  syntax:
    content: public virtual Type[] GetHostSuppliedAssemblyEvidenceTypes (System.Reflection.Assembly assembly);
    parameters:
    - id: assembly
      type: System.Reflection.Assembly
      description: "대상 어셈블리입니다."
    return:
      type: System.Type[]
      description: "증거 형식의 배열입니다."
  overload: System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes*
  exceptions: []
  platform:
  - net462
- uid: System.Security.HostSecurityManager.ProvideAppDomainEvidence(System.Security.Policy.Evidence)
  id: ProvideAppDomainEvidence(System.Security.Policy.Evidence)
  parent: System.Security.HostSecurityManager
  langs:
  - csharp
  name: ProvideAppDomainEvidence(Evidence)
  nameWithType: HostSecurityManager.ProvideAppDomainEvidence(Evidence)
  fullName: System.Security.HostSecurityManager.ProvideAppDomainEvidence(Evidence)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "로드 되는 어셈블리에 대 한 응용 프로그램 도메인 증명을 제공 합니다."
  remarks: "이 메서드는 파생된 클래스에서 재정의할 수 있습니다.       이 메서드를 호출할 때마다는 <xref:System.AppDomain>개체가 만들어집니다.</xref:System.AppDomain> `inputEvidence` 매개 변수는 공용 언어 런타임에서 계산된 된 증명 정보입니다. 호스트 구현 확장 또는 축소 증거를 선택할 수 있습니다. 반환 값은 응용 프로그램 도메인에 사용 되는 증명 정보입니다.  로 전달 된 증명 정보 개체를 반환 하는 기본 구현에서는 항상는 `inputEvidence` 매개 변수입니다.      > [!IMPORTANT] > 상속자에 대 한 참조는 <xref:System.Security.HostSecurityManager>중요 한 구현 정보에 대 한 클래스입니다.</xref:System.Security.HostSecurityManager>"
  syntax:
    content: public virtual System.Security.Policy.Evidence ProvideAppDomainEvidence (System.Security.Policy.Evidence inputEvidence);
    parameters:
    - id: inputEvidence
      type: System.Security.Policy.Evidence
      description: "에 추가할 추가 증거는 <xref href=&quot;System.AppDomain&quot;> </xref> 증명 정보입니다."
    return:
      type: System.Security.Policy.Evidence
      description: "에 사용할 증명 정보는 <xref href=&quot;System.AppDomain&quot;> </xref>합니다."
  overload: System.Security.HostSecurityManager.ProvideAppDomainEvidence*
  exceptions: []
  platform:
  - net462
- uid: System.Security.HostSecurityManager.ProvideAssemblyEvidence(System.Reflection.Assembly,System.Security.Policy.Evidence)
  id: ProvideAssemblyEvidence(System.Reflection.Assembly,System.Security.Policy.Evidence)
  parent: System.Security.HostSecurityManager
  langs:
  - csharp
  name: ProvideAssemblyEvidence(Assembly,Evidence)
  nameWithType: HostSecurityManager.ProvideAssemblyEvidence(Assembly,Evidence)
  fullName: System.Security.HostSecurityManager.ProvideAssemblyEvidence(Assembly,Evidence)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "로드 되는 어셈블리에 대 한 어셈블리 증명 정보를 제공 합니다."
  remarks: "이 메서드는 파생된 클래스에서 재정의할 수 있습니다.       이 메서드는 암시적 또는 명시적으로 어셈블리가 로드 될 때마다 호출 됩니다. 전달 된 매개 변수는 로드 되는 어셈블리와 공용 언어 런타임에서 계산된 된 증명 정보입니다. 호스트 구현 확장 또는 축소 증거를 선택할 수 있습니다. 반환 값은 어셈블리에 사용할 증명 정보입니다.  로 전달 된 증명 정보 개체를 반환 하는 기본 구현에서는 항상는 `inputEvidence` 매개 변수입니다.      > [!IMPORTANT] > 상속자에 대 한 참조는 <xref:System.Security.HostSecurityManager>중요 한 구현 정보에 대 한 클래스입니다.</xref:System.Security.HostSecurityManager>"
  example:
  - "The following example shows how to override the ProvideAssemblyEvidence method for a custom host security manager. This example is part of a larger example provided for the <xref:System.Security.HostSecurityManager> class.  \n  \n [!code-cs[System.Security.HostSecurityManager#5](~/add/codesnippet/csharp/b37483ba-2dfe-4c5d-87e6-_1.cs)]\n [!code-vb[System.Security.HostSecurityManager#5](~/add/codesnippet/visualbasic/b37483ba-2dfe-4c5d-87e6-_1.vb)]"
  syntax:
    content: public virtual System.Security.Policy.Evidence ProvideAssemblyEvidence (System.Reflection.Assembly loadedAssembly, System.Security.Policy.Evidence inputEvidence);
    parameters:
    - id: loadedAssembly
      type: System.Reflection.Assembly
      description: "로드 된 어셈블리입니다."
    - id: inputEvidence
      type: System.Security.Policy.Evidence
      description: "어셈블리 증명 정보에 추가할 추가 증거입니다."
    return:
      type: System.Security.Policy.Evidence
      description: "어셈블리에 사용할 증명 정보입니다."
  overload: System.Security.HostSecurityManager.ProvideAssemblyEvidence*
  exceptions: []
  platform:
  - net462
- uid: System.Security.HostSecurityManager.ResolvePolicy(System.Security.Policy.Evidence)
  id: ResolvePolicy(System.Security.Policy.Evidence)
  parent: System.Security.HostSecurityManager
  langs:
  - csharp
  name: ResolvePolicy(Evidence)
  nameWithType: HostSecurityManager.ResolvePolicy(Evidence)
  fullName: System.Security.HostSecurityManager.ResolvePolicy(Evidence)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "지정한 증명 정보 기반 코드에 부여할 권한을 결정 합니다."
  remarks: "이 메서드는 지정 된 증명 정보를 제공 하는 보안 정책 엔진을 호출 합니다. 결과 보안 정책에 의해 결정 됩니다."
  syntax:
    content: public virtual System.Security.PermissionSet ResolvePolicy (System.Security.Policy.Evidence evidence);
    parameters:
    - id: evidence
      type: System.Security.Policy.Evidence
      description: "증명 정보 집합 정책을 평가 하는 데 사용 합니다."
    return:
      type: System.Security.PermissionSet
      description: "보안 시스템으로 부여할 수 있는 권한 집합입니다."
  overload: System.Security.HostSecurityManager.ResolvePolicy*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>evidence</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Security.HostSecurityManager.#ctor
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: HostSecurityManager()
  nameWithType: HostSecurityManager.HostSecurityManager()
  fullName: System.Security.HostSecurityManager.HostSecurityManager()
- uid: System.Security.HostSecurityManager.DetermineApplicationTrust(System.Security.Policy.Evidence,System.Security.Policy.Evidence,System.Security.Policy.TrustManagerContext)
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: DetermineApplicationTrust(Evidence,Evidence,TrustManagerContext)
  nameWithType: HostSecurityManager.DetermineApplicationTrust(Evidence,Evidence,TrustManagerContext)
  fullName: System.Security.HostSecurityManager.DetermineApplicationTrust(Evidence,Evidence,TrustManagerContext)
- uid: System.Security.Policy.ApplicationTrust
  parent: System.Security.Policy
  isExternal: false
  name: ApplicationTrust
  nameWithType: ApplicationTrust
  fullName: System.Security.Policy.ApplicationTrust
- uid: System.Security.Policy.Evidence
  parent: System.Security.Policy
  isExternal: false
  name: Evidence
  nameWithType: Evidence
  fullName: System.Security.Policy.Evidence
- uid: System.Security.Policy.TrustManagerContext
  parent: System.Security.Policy
  isExternal: false
  name: TrustManagerContext
  nameWithType: TrustManagerContext
  fullName: System.Security.Policy.TrustManagerContext
- uid: System.Security.HostSecurityManager.DomainPolicy
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: DomainPolicy
  nameWithType: HostSecurityManager.DomainPolicy
  fullName: System.Security.HostSecurityManager.DomainPolicy
- uid: System.Security.Policy.PolicyLevel
  parent: System.Security.Policy
  isExternal: false
  name: PolicyLevel
  nameWithType: PolicyLevel
  fullName: System.Security.Policy.PolicyLevel
- uid: System.Security.HostSecurityManager.Flags
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: Flags
  nameWithType: HostSecurityManager.Flags
  fullName: System.Security.HostSecurityManager.Flags
- uid: System.Security.HostSecurityManagerOptions
  parent: System.Security
  isExternal: false
  name: HostSecurityManagerOptions
  nameWithType: HostSecurityManagerOptions
  fullName: System.Security.HostSecurityManagerOptions
- uid: System.Security.HostSecurityManager.GenerateAppDomainEvidence(System.Type)
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: GenerateAppDomainEvidence(Type)
  nameWithType: HostSecurityManager.GenerateAppDomainEvidence(Type)
  fullName: System.Security.HostSecurityManager.GenerateAppDomainEvidence(Type)
- uid: System.Security.Policy.EvidenceBase
  parent: System.Security.Policy
  isExternal: false
  name: EvidenceBase
  nameWithType: EvidenceBase
  fullName: System.Security.Policy.EvidenceBase
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Security.HostSecurityManager.GenerateAssemblyEvidence(System.Type,System.Reflection.Assembly)
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: GenerateAssemblyEvidence(Type,Assembly)
  nameWithType: HostSecurityManager.GenerateAssemblyEvidence(Type,Assembly)
  fullName: System.Security.HostSecurityManager.GenerateAssemblyEvidence(Type,Assembly)
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: true
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: GetHostSuppliedAppDomainEvidenceTypes()
  nameWithType: HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes()
  fullName: System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes()
- uid: System.Type[]
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type[]
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes(System.Reflection.Assembly)
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: GetHostSuppliedAssemblyEvidenceTypes(Assembly)
  nameWithType: HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes(Assembly)
  fullName: System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes(Assembly)
- uid: System.Security.HostSecurityManager.ProvideAppDomainEvidence(System.Security.Policy.Evidence)
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: ProvideAppDomainEvidence(Evidence)
  nameWithType: HostSecurityManager.ProvideAppDomainEvidence(Evidence)
  fullName: System.Security.HostSecurityManager.ProvideAppDomainEvidence(Evidence)
- uid: System.Security.HostSecurityManager.ProvideAssemblyEvidence(System.Reflection.Assembly,System.Security.Policy.Evidence)
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: ProvideAssemblyEvidence(Assembly,Evidence)
  nameWithType: HostSecurityManager.ProvideAssemblyEvidence(Assembly,Evidence)
  fullName: System.Security.HostSecurityManager.ProvideAssemblyEvidence(Assembly,Evidence)
- uid: System.Security.HostSecurityManager.ResolvePolicy(System.Security.Policy.Evidence)
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: ResolvePolicy(Evidence)
  nameWithType: HostSecurityManager.ResolvePolicy(Evidence)
  fullName: System.Security.HostSecurityManager.ResolvePolicy(Evidence)
- uid: System.Security.PermissionSet
  parent: System.Security
  isExternal: false
  name: PermissionSet
  nameWithType: PermissionSet
  fullName: System.Security.PermissionSet
- uid: System.Security.HostSecurityManager.#ctor*
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: HostSecurityManager
  nameWithType: HostSecurityManager.HostSecurityManager
- uid: System.Security.HostSecurityManager.DetermineApplicationTrust*
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: DetermineApplicationTrust
  nameWithType: HostSecurityManager.DetermineApplicationTrust
- uid: System.Security.HostSecurityManager.DomainPolicy*
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: DomainPolicy
  nameWithType: HostSecurityManager.DomainPolicy
- uid: System.Security.HostSecurityManager.Flags*
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: Flags
  nameWithType: HostSecurityManager.Flags
- uid: System.Security.HostSecurityManager.GenerateAppDomainEvidence*
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: GenerateAppDomainEvidence
  nameWithType: HostSecurityManager.GenerateAppDomainEvidence
- uid: System.Security.HostSecurityManager.GenerateAssemblyEvidence*
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: GenerateAssemblyEvidence
  nameWithType: HostSecurityManager.GenerateAssemblyEvidence
- uid: System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes*
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: GetHostSuppliedAppDomainEvidenceTypes
  nameWithType: HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes
- uid: System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes*
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: GetHostSuppliedAssemblyEvidenceTypes
  nameWithType: HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes
- uid: System.Security.HostSecurityManager.ProvideAppDomainEvidence*
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: ProvideAppDomainEvidence
  nameWithType: HostSecurityManager.ProvideAppDomainEvidence
- uid: System.Security.HostSecurityManager.ProvideAssemblyEvidence*
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: ProvideAssemblyEvidence
  nameWithType: HostSecurityManager.ProvideAssemblyEvidence
- uid: System.Security.HostSecurityManager.ResolvePolicy*
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: ResolvePolicy
  nameWithType: HostSecurityManager.ResolvePolicy
