### YamlMime:ManagedReference
items:
- uid: System.Security.RightsManagement.ContentUser
  id: ContentUser
  children:
  - System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)
  - System.Security.RightsManagement.ContentUser.AnyoneUser
  - System.Security.RightsManagement.ContentUser.AuthenticationType
  - System.Security.RightsManagement.ContentUser.Equals(System.Object)
  - System.Security.RightsManagement.ContentUser.GetHashCode
  - System.Security.RightsManagement.ContentUser.IsAuthenticated
  - System.Security.RightsManagement.ContentUser.Name
  - System.Security.RightsManagement.ContentUser.OwnerUser
  langs:
  - csharp
  name: ContentUser
  nameWithType: ContentUser
  fullName: System.Security.RightsManagement.ContentUser
  type: Class
  summary: "사용자 또는 사용자 그룹에 권한 관리 콘텐츠에 대 한 액세스를 부여 하는 것을 나타냅니다."
  remarks: "다른와 마찬가지로 <xref:System.Security.RightsManagement>형식의 ContentUser이 완전 신뢰 응용 프로그램에서 사용할 수만 있습니다.</xref:System.Security.RightsManagement>"
  example:
  - "The following example shows how to use <xref:System.Security.RightsManagement.UnsignedPublishLicense.Owner%2A> property to assign a variable of this type.  \n  \n [!code-vb[RightsManagedPackagePublish#RmPkgPubUnPubLic](~/add/codesnippet/visualbasic/rmpackagepublish/window1.xaml.vb#rmpkgpubunpublic)]\n [!code-cs[RightsManagedPackagePublish#RmPkgPubUnPubLic](~/add/codesnippet/csharp/RmPackagePublish/Window1.xaml.cs#rmpkgpubunpublic)]"
  syntax:
    content: >-
      [System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)]

      public class ContentUser
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)
  id: '#ctor(System.String,System.Security.RightsManagement.AuthenticationType)'
  parent: System.Security.RightsManagement.ContentUser
  langs:
  - csharp
  name: ContentUser(String,AuthenticationType)
  nameWithType: ContentUser.ContentUser(String,AuthenticationType)
  fullName: System.Security.RightsManagement.ContentUser.ContentUser(String,AuthenticationType)
  type: Constructor
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Security.RightsManagement.ContentUser&quot;> </xref> 클래스입니다."
  remarks: "사용자 또는 그룹 `name` 는 종종 개별 전자 메일 주소 형식 (같은 johndoe@contoso.com) 또는 메일 그룹 (같은 marketing@contoso.com)."
  example:
  - "The following example shows how to use this constructor to create a secure environment.  \n  \n [!code-vb[RightsManagedPackagePublish#RmPkgPubSecEnv](~/add/codesnippet/visualbasic/rmpackagepublish/window1.xaml.vb#rmpkgpubsecenv)]\n [!code-cs[RightsManagedPackagePublish#RmPkgPubSecEnv](~/add/codesnippet/csharp/RmPackagePublish/Window1.xaml.cs#rmpkgpubsecenv)]"
  syntax:
    content: public ContentUser (string name, System.Security.RightsManagement.AuthenticationType authenticationType);
    parameters:
    - id: name
      type: System.String
      description: "사용자 또는 그룹 이름입니다."
    - id: authenticationType
      type: System.Security.RightsManagement.AuthenticationType
      description: "인증 방법입니다."
  overload: System.Security.RightsManagement.ContentUser.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.RightsManagement.ContentUser.AnyoneUser
  id: AnyoneUser
  parent: System.Security.RightsManagement.ContentUser
  langs:
  - csharp
  name: AnyoneUser
  nameWithType: ContentUser.AnyoneUser
  fullName: System.Security.RightsManagement.ContentUser.AnyoneUser
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: "&quot;모든 사용자&quot;의 인스턴스를 가져옵니다 <xref href=&quot;System.Security.RightsManagement.ContentUser&quot;> </xref> 가상 사용자입니다."
  remarks: "AnyoneUser가 <xref:System.Security.RightsManagement.ContentUser.AuthenticationType%2A>&quot;내부&quot; 및 <xref:System.Security.RightsManagement.ContentUser.Name%2A>&quot;모든 사용자&quot;.</xref:System.Security.RightsManagement.ContentUser.Name%2A> </xref:System.Security.RightsManagement.ContentUser.AuthenticationType%2A>       경우 <xref:System.Security.RightsManagement.ContentUser.AuthenticationType%2A>&quot;Internal&quot; <xref:System.Security.RightsManagement.ContentUser.Name%2A>게시 하는 동안 권한 부여는 &quot;모든 사용자&quot;, 인증 서버에서 발생 한 <xref:System.Security.RightsManagement.UseLicense>를 요청 하 고 라이선스를 요청 하는 사용자를 연결 합니다.</xref:System.Security.RightsManagement.UseLicense> </xref:System.Security.RightsManagement.ContentUser.Name%2A> </xref:System.Security.RightsManagement.ContentUser.AuthenticationType%2A>"
  syntax:
    content: public static System.Security.RightsManagement.ContentUser AnyoneUser { get; }
    return:
      type: System.Security.RightsManagement.ContentUser
      description: "&quot;모든 사용자&quot;의 인스턴스 <xref href=&quot;System.Security.RightsManagement.ContentUser&quot;> </xref> 가상 사용자입니다."
  overload: System.Security.RightsManagement.ContentUser.AnyoneUser*
  exceptions: []
  platform:
  - net462
- uid: System.Security.RightsManagement.ContentUser.AuthenticationType
  id: AuthenticationType
  parent: System.Security.RightsManagement.ContentUser
  langs:
  - csharp
  name: AuthenticationType
  nameWithType: ContentUser.AuthenticationType
  fullName: System.Security.RightsManagement.ContentUser.AuthenticationType
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: "가져옵니다는 <xref href=&quot;System.Security.RightsManagement.AuthenticationType&quot;> </xref> 에 지정 된 된 &lt;xref:System.Security.RightsManagement.ContentUser.%23ctor%2A&gt; 생성자입니다."
  syntax:
    content: public System.Security.RightsManagement.AuthenticationType AuthenticationType { get; }
    return:
      type: System.Security.RightsManagement.AuthenticationType
      description: "<xref href=&quot;System.Security.RightsManagement.AuthenticationType&quot;> </xref> 에 지정 된 &lt;xref:System.Security.RightsManagement.ContentUser.%23ctor%2A&gt; 생성자입니다."
  overload: System.Security.RightsManagement.ContentUser.AuthenticationType*
  exceptions: []
  platform:
  - net462
- uid: System.Security.RightsManagement.ContentUser.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Security.RightsManagement.ContentUser
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: ContentUser.Equals(Object)
  fullName: System.Security.RightsManagement.ContentUser.Equals(Object)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: "나타내는 값을 반환 하는지 여부를이 <xref href=&quot;System.Security.RightsManagement.ContentUser&quot;> </xref> 인스턴스 제공할지를 다른 것과 같습니다."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "같은지 비교할 사용자 인스턴스입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우 <> </> *> 및 <> </> *>이 사용자와 지정된 된 사용자에 대해 동일 그렇지 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Security.RightsManagement.ContentUser.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Security.RightsManagement.ContentUser.GetHashCode
  id: GetHashCode
  parent: System.Security.RightsManagement.ContentUser
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: ContentUser.GetHashCode()
  fullName: System.Security.RightsManagement.ContentUser.GetHashCode()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: "사용자를 기반으로 계산 된 해시 코드를 반환 <> </> *> 및 <> </> *> 합니다."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "사용자에 게 서 계산 된 해시 코드를 <> </> *> 및 <> </> *> 합니다."
  overload: System.Security.RightsManagement.ContentUser.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Security.RightsManagement.ContentUser.IsAuthenticated
  id: IsAuthenticated
  parent: System.Security.RightsManagement.ContentUser
  langs:
  - csharp
  name: IsAuthenticated()
  nameWithType: ContentUser.IsAuthenticated()
  fullName: System.Security.RightsManagement.ContentUser.IsAuthenticated()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: "사용자가 현재 인증 여부를 나타내는 값을 반환 합니다."
  remarks: "지정 된 사용자 <xref:System.Security.RightsManagement.ContentUser.Name%2A>가 <xref:System.Security.RightsManagement.ContentUser.AuthenticationType%2A>.</xref:System.Security.RightsManagement.ContentUser.AuthenticationType%2A> 주어진된 기반 인증</xref:System.Security.RightsManagement.ContentUser.Name%2A>       사용자가 인증 한 후 IsAuthenticated 된 `true`, 사용자 대화 상자 및 인증은 더 이상 표시 되지 <xref:System.Security.RightsManagement.SecureEnvironment>.</xref:System.Security.RightsManagement.SecureEnvironment> 를 만들 때 확인 프롬프트"
  syntax:
    content: public bool IsAuthenticated ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>사용자가 인증 현재; 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다.  기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 인증 될 때까지 합니다."
  overload: System.Security.RightsManagement.ContentUser.IsAuthenticated*
  exceptions: []
  platform:
  - net462
- uid: System.Security.RightsManagement.ContentUser.Name
  id: Name
  parent: System.Security.RightsManagement.ContentUser
  langs:
  - csharp
  name: Name
  nameWithType: ContentUser.Name
  fullName: System.Security.RightsManagement.ContentUser.Name
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: "에 지정 된 사용자 또는 그룹 이름을 가져옵니다는 &lt;xref:System.Security.RightsManagement.ContentUser.%23ctor%2A&gt; 생성자입니다."
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "사용자 또는 그룹 이름을 지정 하는 &lt;xref:System.Security.RightsManagement.ContentUser.%23ctor%2A&gt; 생성자입니다."
  overload: System.Security.RightsManagement.ContentUser.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Security.RightsManagement.ContentUser.OwnerUser
  id: OwnerUser
  parent: System.Security.RightsManagement.ContentUser
  langs:
  - csharp
  name: OwnerUser
  nameWithType: ContentUser.OwnerUser
  fullName: System.Security.RightsManagement.ContentUser.OwnerUser
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: "&quot;소유자&quot;의 인스턴스를 가져옵니다 <xref href=&quot;System.Security.RightsManagement.ContentUser&quot;> </xref> 가상 사용자입니다."
  remarks: "OwnerUser가 <xref:System.Security.RightsManagement.ContentUser.AuthenticationType%2A>&quot;내부&quot; 및 <xref:System.Security.RightsManagement.ContentUser.Name%2A>&quot;소유자&quot;.</xref:System.Security.RightsManagement.ContentUser.Name%2A> </xref:System.Security.RightsManagement.ContentUser.AuthenticationType%2A>       OwnerUser 보호 된 문서를 만들 때 콘텐츠 작성자 또는 게시자에 대 한 특별 한 권한을 부여 하려면 서버 쪽 서식 파일에서 사용 됩니다."
  syntax:
    content: public static System.Security.RightsManagement.ContentUser OwnerUser { get; }
    return:
      type: System.Security.RightsManagement.ContentUser
      description: "&quot;소유자&quot;의 인스턴스 <xref href=&quot;System.Security.RightsManagement.ContentUser&quot;> </xref> 가상 사용자입니다."
  overload: System.Security.RightsManagement.ContentUser.OwnerUser*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)
  parent: System.Security.RightsManagement.ContentUser
  isExternal: false
  name: ContentUser(String,AuthenticationType)
  nameWithType: ContentUser.ContentUser(String,AuthenticationType)
  fullName: System.Security.RightsManagement.ContentUser.ContentUser(String,AuthenticationType)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.RightsManagement.AuthenticationType
  parent: System.Security.RightsManagement
  isExternal: false
  name: AuthenticationType
  nameWithType: AuthenticationType
  fullName: System.Security.RightsManagement.AuthenticationType
- uid: System.Security.RightsManagement.ContentUser.AnyoneUser
  parent: System.Security.RightsManagement.ContentUser
  isExternal: false
  name: AnyoneUser
  nameWithType: ContentUser.AnyoneUser
  fullName: System.Security.RightsManagement.ContentUser.AnyoneUser
- uid: System.Security.RightsManagement.ContentUser
  parent: System.Security.RightsManagement
  isExternal: false
  name: ContentUser
  nameWithType: ContentUser
  fullName: System.Security.RightsManagement.ContentUser
- uid: System.Security.RightsManagement.ContentUser.AuthenticationType
  parent: System.Security.RightsManagement.ContentUser
  isExternal: false
  name: AuthenticationType
  nameWithType: ContentUser.AuthenticationType
  fullName: System.Security.RightsManagement.ContentUser.AuthenticationType
- uid: System.Security.RightsManagement.ContentUser.Equals(System.Object)
  parent: System.Security.RightsManagement.ContentUser
  isExternal: false
  name: Equals(Object)
  nameWithType: ContentUser.Equals(Object)
  fullName: System.Security.RightsManagement.ContentUser.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.RightsManagement.ContentUser.GetHashCode
  parent: System.Security.RightsManagement.ContentUser
  isExternal: false
  name: GetHashCode()
  nameWithType: ContentUser.GetHashCode()
  fullName: System.Security.RightsManagement.ContentUser.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.RightsManagement.ContentUser.IsAuthenticated
  parent: System.Security.RightsManagement.ContentUser
  isExternal: false
  name: IsAuthenticated()
  nameWithType: ContentUser.IsAuthenticated()
  fullName: System.Security.RightsManagement.ContentUser.IsAuthenticated()
- uid: System.Security.RightsManagement.ContentUser.Name
  parent: System.Security.RightsManagement.ContentUser
  isExternal: false
  name: Name
  nameWithType: ContentUser.Name
  fullName: System.Security.RightsManagement.ContentUser.Name
- uid: System.Security.RightsManagement.ContentUser.OwnerUser
  parent: System.Security.RightsManagement.ContentUser
  isExternal: false
  name: OwnerUser
  nameWithType: ContentUser.OwnerUser
  fullName: System.Security.RightsManagement.ContentUser.OwnerUser
- uid: System.Security.RightsManagement.ContentUser.#ctor*
  parent: System.Security.RightsManagement.ContentUser
  isExternal: false
  name: ContentUser
  nameWithType: ContentUser.ContentUser
- uid: System.Security.RightsManagement.ContentUser.AnyoneUser*
  parent: System.Security.RightsManagement.ContentUser
  isExternal: false
  name: AnyoneUser
  nameWithType: ContentUser.AnyoneUser
- uid: System.Security.RightsManagement.ContentUser.AuthenticationType*
  parent: System.Security.RightsManagement.ContentUser
  isExternal: false
  name: AuthenticationType
  nameWithType: ContentUser.AuthenticationType
- uid: System.Security.RightsManagement.ContentUser.Equals*
  parent: System.Security.RightsManagement.ContentUser
  isExternal: false
  name: Equals
  nameWithType: ContentUser.Equals
- uid: System.Security.RightsManagement.ContentUser.GetHashCode*
  parent: System.Security.RightsManagement.ContentUser
  isExternal: false
  name: GetHashCode
  nameWithType: ContentUser.GetHashCode
- uid: System.Security.RightsManagement.ContentUser.IsAuthenticated*
  parent: System.Security.RightsManagement.ContentUser
  isExternal: false
  name: IsAuthenticated
  nameWithType: ContentUser.IsAuthenticated
- uid: System.Security.RightsManagement.ContentUser.Name*
  parent: System.Security.RightsManagement.ContentUser
  isExternal: false
  name: Name
  nameWithType: ContentUser.Name
- uid: System.Security.RightsManagement.ContentUser.OwnerUser*
  parent: System.Security.RightsManagement.ContentUser
  isExternal: false
  name: OwnerUser
  nameWithType: ContentUser.OwnerUser
