### YamlMime:ManagedReference
items:
- uid: System.Deployment.Application.ApplicationDeployment
  id: ApplicationDeployment
  children:
  - System.Deployment.Application.ApplicationDeployment.ActivationUri
  - System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate
  - System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate(System.Boolean)
  - System.Deployment.Application.ApplicationDeployment.CheckForUpdate
  - System.Deployment.Application.ApplicationDeployment.CheckForUpdate(System.Boolean)
  - System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync
  - System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsyncCancel
  - System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted
  - System.Deployment.Application.ApplicationDeployment.CheckForUpdateProgressChanged
  - System.Deployment.Application.ApplicationDeployment.CurrentDeployment
  - System.Deployment.Application.ApplicationDeployment.CurrentVersion
  - System.Deployment.Application.ApplicationDeployment.DataDirectory
  - System.Deployment.Application.ApplicationDeployment.DownloadFileGroup(System.String)
  - System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync(System.String)
  - System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync(System.String,System.Object)
  - System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsyncCancel(System.String)
  - System.Deployment.Application.ApplicationDeployment.DownloadFileGroupCompleted
  - System.Deployment.Application.ApplicationDeployment.DownloadFileGroupProgressChanged
  - System.Deployment.Application.ApplicationDeployment.IsFileGroupDownloaded(System.String)
  - System.Deployment.Application.ApplicationDeployment.IsFirstRun
  - System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed
  - System.Deployment.Application.ApplicationDeployment.TimeOfLastUpdateCheck
  - System.Deployment.Application.ApplicationDeployment.Update
  - System.Deployment.Application.ApplicationDeployment.UpdateAsync
  - System.Deployment.Application.ApplicationDeployment.UpdateAsyncCancel
  - System.Deployment.Application.ApplicationDeployment.UpdateCompleted
  - System.Deployment.Application.ApplicationDeployment.UpdatedApplicationFullName
  - System.Deployment.Application.ApplicationDeployment.UpdatedVersion
  - System.Deployment.Application.ApplicationDeployment.UpdateLocation
  - System.Deployment.Application.ApplicationDeployment.UpdateProgressChanged
  langs:
  - csharp
  name: ApplicationDeployment
  nameWithType: ApplicationDeployment
  fullName: System.Deployment.Application.ApplicationDeployment
  type: Class
  summary: "현재 배포의 업데이트를 프로그래밍 방식으로 지원 하 고 요청 시의 파일 다운로드를 처리 합니다. 이 클래스는 상속 될 수 없습니다."
  remarks: "구성할 수 있습니다 프로그램 [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] 응용 프로그램 업데이트를 확인 하 고 통해 자동으로 설치 하는 `subscription` 배포 매니페스트의 요소입니다. 그러나 일부 응용 프로그램에 대 한 업데이트가 보다 자세히 제어 하려면 필요. 프로그래밍 방식으로 필수 업데이트를 설치 하 여 사용자 편의에 선택적 업데이트를 설치 하 게 좋습니다. 배포 매니페스트에 구독 업데이트를 해제 하 여 응용 프로그램의 업데이트 정책 완전히 제어를 걸릴 수 있습니다. 또는 자동 구독 매핑함으로써 ApplicationDeployment와 함께에서 사용할 수 있습니다 [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] 릴리스되는 직후 중요 업데이트를 다운로드 하려면 응용 프로그램을 정기적으로, 하지만 ApplicationDeployment 사용 하 여 업데이트 합니다.       배포 중 하나를 사용 하 여 사용 가능한 업데이트에 있는지 테스트할 수 있습니다는 <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdate%2A>또는 <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync%2A>방법으로, 두 번째 방법 발생은 <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted>성공적으로 완료 되는 이벤트입니다.</xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted> </xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync%2A> </xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdate%2A> <xref:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate%2A>버전 번호 및 여부와 현재 사용자에 대 한 필수 업데이트를 비롯 하 여 업데이트에 대 한 중요 한 정보를 반환 합니다.</xref:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate%2A> 업데이트를 사용할 수 있는 경우 사용 하 여 설치할 수 있습니다 <xref:System.Deployment.Application.ApplicationDeployment.Update%2A>또는 <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A>; 후자의 메서드는 <xref:System.Deployment.Application.ApplicationDeployment.UpdateCompleted>업데이트의 설치가 완료 된 후 이벤트.</xref:System.Deployment.Application.ApplicationDeployment.UpdateCompleted> </xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A> </xref:System.Deployment.Application.ApplicationDeployment.Update%2A> 대규모 업데이트를 통해 진행 상황 알림을 받을 수 있습니다는 <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateProgressChanged>및 <xref:System.Deployment.Application.ApplicationDeployment.UpdateProgressChanged>이벤트의 정보를 사용 하 고 <xref:System.ComponentModel.ProgressChangedEventArgs>다운로드 하 여 상태의 사용자에 게 알리도록.</xref:System.ComponentModel.ProgressChangedEventArgs> </xref:System.Deployment.Application.ApplicationDeployment.UpdateProgressChanged> </xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateProgressChanged>       큰 파일 및 요청 시 어셈블리 다운로드 ApplicationDeployment를 사용할 수도 있습니다. 이러한 파일은 설치 하는 동안 다운로드 되지 않도록 배포의 응용 프로그램 매니페스트 내에서 &quot;optional&quot;로 표시 되어야 합니다. 사용 하 여 응용 프로그램의 기간 중 언제 든 지 파일을 다운로드할 수는 <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A>또는 <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A>메서드.</xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> </xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> <xref:System.AppDomain.AssemblyResolve> <xref:System.AppDomain>클래스</xref:System.AppDomain> 의 이벤트</xref:System.AppDomain.AssemblyResolve> 에 대 한 이벤트 처리기를 제공 하 여 메모리에 로드 하기 전에 어셈블리를 다운로드할 수 있습니다. 자세한 내용은 참조 [연습: ClickOnce 배포 API를 사용 하 여 디자이너는 요청 시 어셈블리 다운로드](~/add/includes/ajax-current-ext-md.md)합니다.      > [!NOTE] > 업데이트 하는 경우는 [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] 응용 프로그램이 실행 되는 동안 응용 프로그램에 사용자 표시 되지 것입니다는 업데이트 <xref:System.Windows.Forms.Application.Restart%2A> <xref:System.Windows.Forms.Application>응용 프로그램의 현재 실행 중인 인스턴스를 닫고 즉시 합니다. 다시 시작 됩니다는</xref:System.Windows.Forms.Application> 메서드</xref:System.Windows.Forms.Application.Restart%2A> 를 호출 하기 전에       ApplicationDeployment public 생성자를 없습니다. 내에서 클래스의 인스턴스를 가져올는 [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] 를 통해 응용 프로그램의 <xref:System.Deployment.Application.ApplicationDeployment.CurrentDeployment%2A>속성.</xref:System.Deployment.Application.ApplicationDeployment.CurrentDeployment%2A> 사용 하면는 <xref:System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed%2A>속성을 현재 응용 프로그램 인지 확인 한 [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] 응용 프로그램.</xref:System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed%2A>       업데이트 확인 및 새을 사용 하 여 업데이트 된 파일을 비동기적으로 다운로드 ApplicationDeployment 지원 [이벤트 기반 비동기 패턴 개요](~/add/includes/ajax-current-ext-md.md), 완료 콜백을 클래스 이벤트로 노출 하는 합니다. ApplicationDeployment 시작,는 스레드를 관리 하 고 올바른 UI 스레드에서 응용 프로그램을 다시 호출 합니다. 이 클래스를 통해 사용자에 업데이트가 설치 되는 동안 작업을 계속할 수 있도록 응용 프로그램을 잠그지 않고도 업데이트할 수 있습니다. 업데이트가 발생 하는 동안 모든 작업을 중단 해야, 동기 메서드를 대신 사용 하는 것이 좋습니다.      > [!NOTE] > 응용 프로그램 둘 다 가져옵니다 비동기 업데이트를 수행 하려면는 <xref:System.Deployment.Application>및 <xref:System.ComponentModel>네임 스페이스.</xref:System.ComponentModel> </xref:System.Deployment.Application>"
  example:
  - "The following code example determines at application load time whether a new update is available; if a required update is available, the code example installs the update asynchronously. This code should be added to a form that contains a <xref:System.Windows.Forms.TextBox> named `downloadStatus`.  \n  \n [!code-cs[ClickOnceAPI#1](~/add/codesnippet/csharp/ClickOnceAPI/Form1.cs#1)]\n [!code-cpp[ClickOnceAPI#1](~/add/codesnippet/cpp/t-system.deployment.appl_4_1.cpp)]\n [!code-vb[ClickOnceAPI#1](~/add/codesnippet/visualbasic/ClickOnceAPIVB/Form1.vb#1)]"
  syntax:
    content: public sealed class ApplicationDeployment
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.ActivationUri
  id: ActivationUri
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: ActivationUri
  nameWithType: ApplicationDeployment.ActivationUri
  fullName: System.Deployment.Application.ApplicationDeployment.ActivationUri
  type: Property
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "응용 프로그램의 배포 매니페스트를 시작 하는 데 사용 하는 URL을 가져옵니다."
  remarks: "이 속성은 완전히 신뢰할 수 있는 및 부분적으로 신뢰할 수 있는 응용 프로그램에서 작동 합니다."
  example:
  - "The following code shows how to retrieve the URL parameters by using ActivationUri, and how to use the <xref:System.Web.HttpUtility> class to parse the query string safely. Multiple occurrences of the same query string variable are consolidated in one entry of the returned <xref:System.Collections.Specialized.NameValueCollection>.  \n  \n [!code-cs[ClickOnceQueryString#1](~/add/codesnippet/csharp/ClickOnceQueryString/Form1.cs#1)]\n [!code-vb[ClickOnceQueryString#1](~/add/codesnippet/visualbasic/ClickOnceQueryStringVB/Form1.vb#1)]"
  syntax:
    content: public Uri ActivationUri { get; }
    return:
      type: System.Uri
      description: "길이가&0; 인 경우 문자열는 `TrustUrlParameters` 배포 매니페스트에 속성은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, 사용자가 제공한 배포를 열려는 UNC 또는 로컬 열에 있습니다. 그렇지 않으면 반환 값은 전체 URL 매개 변수를 포함 하 여 응용 프로그램을 시작 하는 데 사용 합니다."
  overload: System.Deployment.Application.ApplicationDeployment.ActivationUri*
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate
  id: CheckForDetailedUpdate
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: CheckForDetailedUpdate()
  nameWithType: ApplicationDeployment.CheckForDetailedUpdate()
  fullName: System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate()
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "와 동일한 작업을 수행 <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdate*>, 사용 가능한 업데이트에 대 한 자세한 정보를 반환 하지만.</xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdate*>"
  remarks: "CheckForDetailedUpdate 메서드 사용 동기 호출자가 비동기 호출자가 <xref:System.Deployment.Application.CheckForUpdateCompletedEventArgs>클래스</xref:System.Deployment.Application.CheckForUpdateCompletedEventArgs> 를 사용 하 여 가져올 동일한 확장된 정보를 얻을 수 있습니다."
  example:
  - "The following code example uses CheckForDetailedUpdate to retrieve the information about the latest update. If an update exists, it installs it automatically only if it is a required update; otherwise, it prompts the user.  \n  \n [!code-cs[ClickOnceAPI#7](~/add/codesnippet/csharp/ClickOnceAPI/Form1.cs#7)]\n [!code-cpp[ClickOnceAPI#7](~/add/codesnippet/cpp/m-system.deployment.appl_4_1.cpp)]\n [!code-vb[ClickOnceAPI#7](~/add/codesnippet/visualbasic/ClickOnceAPIVB/Form1.vb#7)]"
  syntax:
    content: public System.Deployment.Application.UpdateCheckInfo CheckForDetailedUpdate ();
    parameters: []
    return:
      type: System.Deployment.Application.UpdateCheckInfo
      description: "<xref href=&quot;System.Deployment.Application.UpdateCheckInfo&quot;> </xref> 사용 가능한 업데이트에 대 한 합니다."
  overload: System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "현재 응용 프로그램 하거나 업데이트를 지원 하도록 구성 되지 않았거나 다른 업데이트 확인 작업이 진행 중에 이미 있습니다."
  - type: System.Deployment.Application.DeploymentDownloadException
    commentId: T:System.Deployment.Application.DeploymentDownloadException
    description: "배포 매니페스트를 다운로드할 수 없습니다. 이 예외에 표시 됩니다는 <xref:System.ComponentModel.AsyncCompletedEventArgs.Error*>의 속성은 <xref href=&quot;System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted&quot;> </xref> 이벤트.</xref:System.ComponentModel.AsyncCompletedEventArgs.Error*>"
  - type: System.Deployment.Application.InvalidDeploymentException
    commentId: T:System.Deployment.Application.InvalidDeploymentException
    description: "배포 매니페스트가 손상 되었습니다. 사용자에 게이 응용 프로그램을 배포 하기 전에 응용 프로그램의 매니페스트를 다시 생성 합니다. 이 예외에 표시 됩니다는 <xref:System.ComponentModel.AsyncCompletedEventArgs.Error*>의 속성은 <xref href=&quot;System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted&quot;> </xref> 이벤트.</xref:System.ComponentModel.AsyncCompletedEventArgs.Error*>"
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate(System.Boolean)
  id: CheckForDetailedUpdate(System.Boolean)
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: CheckForDetailedUpdate(Boolean)
  nameWithType: ApplicationDeployment.CheckForDetailedUpdate(Boolean)
  fullName: System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate(Boolean)
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "와 동일한 작업을 수행 <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdate*>, 사용 가능한 업데이트에 대 한 자세한 정보를 반환 하지만.</xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdate*>"
  syntax:
    content: public System.Deployment.Application.UpdateCheckInfo CheckForDetailedUpdate (bool persistUpdateCheckResult);
    parameters:
    - id: persistUpdateCheckResult
      type: System.Boolean
      description: "경우 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>하면 업데이트가 자동으로 적용 하 고 대화 상자가 표시 됩니다."
    return:
      type: System.Deployment.Application.UpdateCheckInfo
      description: "<xref href=&quot;System.Deployment.Application.UpdateCheckInfo&quot;> </xref> 사용 가능한 업데이트에 대 한 합니다."
  overload: System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate*
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.CheckForUpdate
  id: CheckForUpdate
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: CheckForUpdate()
  nameWithType: ApplicationDeployment.CheckForUpdate()
  fullName: System.Deployment.Application.ApplicationDeployment.CheckForUpdate()
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "확인 <xref:System.Deployment.Application.ApplicationDeployment.UpdateLocation*>새 업데이트를 사용할 수 있는지 여부를 확인 하려면.</xref:System.Deployment.Application.ApplicationDeployment.UpdateLocation*>"
  remarks: "CheckForUpdate 메서드 비교 <xref:System.Deployment.Application.ApplicationDeployment.UpdateLocation%2A>.</xref:System.Deployment.Application.ApplicationDeployment.UpdateLocation%2A> 에 배포 매니페스트에 지정 된 버전과 현재 설치 된 배포의 버전 서버에 버전와에서 다른 경우 설치 된 버전을 반환 `true`합니다.       이 메서드는 확인이 완료 될 때까지 차단 됩니다. 를 확인 하려면 업데이트를 위해 비동기적으로 사용 된 <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync%2A>메서드 대신.</xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync%2A>      > [!NOTE] > 업데이트를 사용할 수 있으며 사용자가을 설치 하지 않도록 선택 하는 경우 CheckForUpdate 검색 [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] 업데이트가 사용할 수 있는 다음에 응용 프로그램이 실행 될 때 사용자에 게 확인 합니다. 이러한 메시지를 표시 하지 않으려면 방식은 없습니다. (응용 프로그램이 있는 경우 필요한 업데이트 [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] 확인 하지 않고 설치 됩니다.)"
  example:
  - "The following code example checks for an application update; if one is available, it installs it synchronously.  \n  \n [!code-cs[ClickOnceAPI#5](~/add/codesnippet/csharp/ClickOnceAPI/Form1.cs#5)]\n [!code-cpp[ClickOnceAPI#5](~/add/codesnippet/cpp/m-system.deployment.appl_5_1.cpp)]\n [!code-vb[ClickOnceAPI#5](~/add/codesnippet/visualbasic/ClickOnceAPIVB/Form1.vb#5)]"
  syntax:
    content: public bool CheckForUpdate ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>새 업데이트는 사용할 수 있습니다. 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Deployment.Application.ApplicationDeployment.CheckForUpdate*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: '[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]업데이트가 이미 진행 중이면 CheckForUpdate 메서드를 호출 하면 즉시이 예외를 throw 합니다.'
  - type: System.Deployment.Application.DeploymentDownloadException
    commentId: T:System.Deployment.Application.DeploymentDownloadException
    description: "배포 매니페스트를 다운로드할 수 없습니다."
  - type: System.Deployment.Application.InvalidDeploymentException
    commentId: T:System.Deployment.Application.InvalidDeploymentException
    description: "배포 매니페스트가 손상 되었습니다. 이 문제를 해결 하려면 응용 프로그램을 재배포 해야 합니다."
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.CheckForUpdate(System.Boolean)
  id: CheckForUpdate(System.Boolean)
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: CheckForUpdate(Boolean)
  nameWithType: ApplicationDeployment.CheckForUpdate(Boolean)
  fullName: System.Deployment.Application.ApplicationDeployment.CheckForUpdate(Boolean)
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "확인 <xref:System.Deployment.Application.ApplicationDeployment.UpdateLocation*>새 업데이트를 사용할 수 있는지 여부를 확인 하려면.</xref:System.Deployment.Application.ApplicationDeployment.UpdateLocation*>"
  syntax:
    content: public bool CheckForUpdate (bool persistUpdateCheckResult);
    parameters:
    - id: persistUpdateCheckResult
      type: System.Boolean
      description: "경우 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>하면 업데이트가 자동으로 적용 하 고 대화 상자가 표시 됩니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>새 업데이트는 사용할 수 있습니다. 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Deployment.Application.ApplicationDeployment.CheckForUpdate*
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync
  id: CheckForUpdateAsync
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: CheckForUpdateAsync()
  nameWithType: ApplicationDeployment.CheckForUpdateAsync()
  fullName: System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync()
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "확인 <xref:System.Deployment.Application.ApplicationDeployment.UpdateLocation*>비동기적으로 새 업데이트를 사용할 수 있는지 여부를 확인 하려면.</xref:System.Deployment.Application.ApplicationDeployment.UpdateLocation*>"
  remarks: "CheckForUpdateAsync 즉시 반환 하 고 업데이트 된 응용 프로그램을 다운로드 하기 위한 별도 스레드를 시작 합니다. 메서드가 완료 되거나 취소를 발생 시킵니다는 <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted>이벤트.</xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted> 사용할 수 있습니다 <xref:System.ComponentModel.AsyncCompletedEventArgs>작업이 취소 되었는지 여부 또는 업데이트 하는 동안 예외가 발생 하는 경우를 확인 하려면이 이벤트 처리기에서.</xref:System.ComponentModel.AsyncCompletedEventArgs>       <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsyncCancel%2A>.</xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsyncCancel%2A> 를 호출 하 여 비동기 업데이트를 취소할 수 있습니다.      > [!NOTE] > 경우 <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdate%2A>업데이트를 사용할 수 있으며 사용자가을 설치 하지 않도록 선택은 검색 [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] 업데이트가 제공 되 고 다음에 응용 프로그램이 실행 될 때 사용자 묻습니다.</xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdate%2A> 이러한 메시지를 표시 하지 않으려면 방식은 없습니다. (응용 프로그램이 있는 경우 필요한 업데이트 [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] 확인 하지 않고 설치 됩니다.)"
  example:
  - "The following example checks for an update asynchronously, and installs the update if one exists.  \n  \n [!code-cs[ClickOnceAPI#1](~/add/codesnippet/csharp/ClickOnceAPI/Form1.cs#1)]\n [!code-cpp[ClickOnceAPI#1](~/add/codesnippet/cpp/m-system.deployment.appl_3_1.cpp)]\n [!code-vb[ClickOnceAPI#1](~/add/codesnippet/visualbasic/ClickOnceAPIVB/Form1.vb#1)]"
  syntax:
    content: public void CheckForUpdateAsync ();
    parameters: []
  overload: System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: '[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]업데이트가 이미 진행 중이면 CheckForUpdateAsync 메서드를 호출 하면 즉시이 예외를 throw 합니다.'
  - type: System.Deployment.Application.DeploymentDownloadException
    commentId: T:System.Deployment.Application.DeploymentDownloadException
    description: "배포 매니페스트를 다운로드할 수 없습니다. 이 예외에 표시는 <xref:System.ComponentModel.AsyncCompletedEventArgs.Error*>의 속성은 <xref href=&quot;System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted&quot;> </xref> 이벤트.</xref:System.ComponentModel.AsyncCompletedEventArgs.Error*>"
  - type: System.Deployment.Application.InvalidDeploymentException
    commentId: T:System.Deployment.Application.InvalidDeploymentException
    description: "배포 매니페스트가 손상 되었습니다. 이 문제를 해결 하려면 응용 프로그램을 재배포 해야 합니다. 이 예외에 표시는 <xref:System.ComponentModel.AsyncCompletedEventArgs.Error*>의 속성은 <xref href=&quot;System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted&quot;> </xref> 이벤트.</xref:System.ComponentModel.AsyncCompletedEventArgs.Error*>"
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsyncCancel
  id: CheckForUpdateAsyncCancel
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: CheckForUpdateAsyncCancel()
  nameWithType: ApplicationDeployment.CheckForUpdateAsyncCancel()
  fullName: System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsyncCancel()
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "비동기 업데이트 확인을 취소합니다."
  remarks: "이 메서드를 사용 하 여 업데이트 확인 된 시작 작업을 취소 하 고 <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync%2A>메서드.</xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync%2A>       이 메서드는 백그라운드 업데이트 이미 진행 되는 취소 되지 것입니다 가입의 일환으로 시작 된 업데이트와 같은 합니다. 구독에 대 한 자세한 내용은 참조 [ClickOnce 업데이트 전략 선택](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public void CheckForUpdateAsyncCancel ();
    parameters: []
  overload: System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsyncCancel*
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted
  id: CheckForUpdateCompleted
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: CheckForUpdateCompleted
  nameWithType: ApplicationDeployment.CheckForUpdateCompleted
  fullName: System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted
  type: Event
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "발생 경우 <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync*>완료 되었습니다.</xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync*>"
  remarks: "<xref:System.Deployment.Application.CheckForUpdateCompletedEventArgs>클래스 쿼리를 확인할 수, 다른 작업, 업데이트의 버전, 업데이트는 크기 및 사용 가능한 업데이트를 필수 또는 선택적 여부.</xref:System.Deployment.Application.CheckForUpdateCompletedEventArgs>"
  example:
  - "The following code example uses CheckForUpdateCompleted to decide whether to ask the user to install the available application update. If the update is a mandatory upgrade, the CheckForUpdateCompleted event handler does not prompt the user. The example requires that you deploy a Windows Forms application that includes a <xref:System.Windows.Forms.StatusStrip> control, and that this control contain a <xref:System.Windows.Forms.ToolStripStatusLabel> control named `downloadStatus`.  \n  \n [!code-cs[ClickOnceAPI#1](~/add/codesnippet/csharp/ClickOnceAPI/Form1.cs#1)]\n [!code-cpp[ClickOnceAPI#1](~/add/codesnippet/cpp/e-system.deployment.appl_2_1.cpp)]\n [!code-vb[ClickOnceAPI#1](~/add/codesnippet/visualbasic/ClickOnceAPIVB/Form1.vb#1)]"
  syntax:
    content: public event System.Deployment.Application.CheckForUpdateCompletedEventHandler CheckForUpdateCompleted;
    return:
      type: System.Deployment.Application.CheckForUpdateCompletedEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.CheckForUpdateProgressChanged
  id: CheckForUpdateProgressChanged
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: CheckForUpdateProgressChanged
  nameWithType: ApplicationDeployment.CheckForUpdateProgressChanged
  fullName: System.Deployment.Application.ApplicationDeployment.CheckForUpdateProgressChanged
  type: Event
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "진행 상황 업데이트에 사용할 수 있는 경우에 발생 한 <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync*>호출.</xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync*>"
  remarks: "응용 프로그램의 배포의 다운로드 상태에서 CheckForUpdateProgressChanged 보고서 매니페스트합니다. 이 사용자에 느린 네트워크 연결을 통해 배포를 다운로드 하는 게 중요 한 정보를 수 있습니다."
  example:
  - "The following code example uses the CheckForUpdateProgressChanged event to inform the user how much of the deployment manifest is left to download. The example requires that you deploy a Windows Forms application that includes a <xref:System.Windows.Forms.StatusStrip> control, and that this control contain a <xref:System.Windows.Forms.ToolStripStatusLabel> control named `downloadStatus`..  \n  \n [!code-cs[ClickOnceAPI#1](~/add/codesnippet/csharp/ClickOnceAPI/Form1.cs#1)]\n [!code-cpp[ClickOnceAPI#1](~/add/codesnippet/cpp/d621aa2f-b92e-4e9d-b698-_1.cpp)]\n [!code-vb[ClickOnceAPI#1](~/add/codesnippet/visualbasic/ClickOnceAPIVB/Form1.vb#1)]"
  syntax:
    content: public event System.Deployment.Application.DeploymentProgressChangedEventHandler CheckForUpdateProgressChanged;
    return:
      type: System.Deployment.Application.DeploymentProgressChangedEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.CurrentDeployment
  id: CurrentDeployment
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: CurrentDeployment
  nameWithType: ApplicationDeployment.CurrentDeployment
  fullName: System.Deployment.Application.ApplicationDeployment.CurrentDeployment
  type: Property
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "현재 반환 <xref href=&quot;System.Deployment.Application.ApplicationDeployment&quot;> </xref> 이 배포에 대 한 합니다."
  remarks: "인스턴스를 만들 수 <xref:System.Deployment.Application.ApplicationDeployment>직접; 응용 프로그램에 검색 해야 CurrentDeployment 속성을 통해 올바른 인스턴스.</xref:System.Deployment.Application.ApplicationDeployment>       CurrentDeployment 정적 속성은 사용 하 여 배포 된 응용 프로그램 내 에서만 유효 [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]합니다. 비-에서이 속성을 호출 하려고[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] 응용 프로그램 예외를 throw 합니다. 수도 있습니다를 사용 하 여 배포 될 수 있는 응용 프로그램을 개발 하는 경우 [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]를 사용 하 여는 <xref:System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed%2A>속성은 현재 프로그램 인지를 테스트 하는 [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] 응용 프로그램.</xref:System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed%2A>"
  example:
  - "The following code example retrieves CurrentDeployment and checks to determine whether the application has been updated in the past three days.  \n  \n [!code-cs[ClickOnceAPI#3](~/add/codesnippet/csharp/ClickOnceAPI/Form1.cs#3)]\n [!code-cpp[ClickOnceAPI#3](~/add/codesnippet/cpp/p-system.deployment.appl_12_1.cpp)]\n [!code-vb[ClickOnceAPI#3](~/add/codesnippet/visualbasic/ClickOnceAPIVB/Form1.vb#3)]"
  syntax:
    content: public static System.Deployment.Application.ApplicationDeployment CurrentDeployment { get; }
    return:
      type: System.Deployment.Application.ApplicationDeployment
      description: "현재 배포 합니다."
  overload: System.Deployment.Application.ApplicationDeployment.CurrentDeployment*
  exceptions:
  - type: System.Deployment.Application.InvalidDeploymentException
    commentId: T:System.Deployment.Application.InvalidDeploymentException
    description: "비-에서이 정적 속성을 호출 하려고 했습니다.[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] 응용 프로그램입니다."
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.CurrentVersion
  id: CurrentVersion
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: CurrentVersion
  nameWithType: ApplicationDeployment.CurrentVersion
  fullName: System.Deployment.Application.ApplicationDeployment.CurrentVersion
  type: Property
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "응용 프로그램의 현재 실행 중인 인스턴스에 대 한 배포의 버전을 가져옵니다."
  remarks: "CurrentVersion <xref:System.Deployment.Application.ApplicationDeployment.UpdatedVersion%2A>새 업데이트가 설치 되어 있지만 <xref:System.Windows.Forms.Application.Restart%2A>.</xref:System.Windows.Forms.Application.Restart%2A> 호출 되지 않은 경우</xref:System.Deployment.Application.ApplicationDeployment.UpdatedVersion%2A> 에서 달라 집니다. 배포 매니페스트는 자동 업데이트를 수행 하도록 구성 된, 경우에 응용 프로그램을 다시 시작 해야 하는 경우를 확인 하려면이 두 값을 비교할 수 있습니다."
  example:
  - "The following code example defines a method that determines whether [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] has updated the application.  \n  \n [!code-cs[ClickOnceAPI#3](~/add/codesnippet/csharp/ClickOnceAPI/Form1.cs#3)]\n [!code-cpp[ClickOnceAPI#3](~/add/codesnippet/cpp/p-system.deployment.appl_7_1.cpp)]\n [!code-vb[ClickOnceAPI#3](~/add/codesnippet/visualbasic/ClickOnceAPIVB/Form1.vb#3)]"
  syntax:
    content: public Version CurrentVersion { get; }
    return:
      type: System.Version
      description: "현재 배포 버전입니다."
  overload: System.Deployment.Application.ApplicationDeployment.CurrentVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.DataDirectory
  id: DataDirectory
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: DataDirectory
  nameWithType: ApplicationDeployment.DataDirectory
  fullName: System.Deployment.Application.ApplicationDeployment.DataDirectory
  type: Property
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "경로를 가져옵니다는 [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] 데이터 디렉터리입니다."
  syntax:
    content: public string DataDirectory { get; }
    return:
      type: System.String
      description: "경로 로컬 디스크에 응용 프로그램의 데이터 디렉터리를 포함 하는 문자열입니다."
  overload: System.Deployment.Application.ApplicationDeployment.DataDirectory*
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.DownloadFileGroup(System.String)
  id: DownloadFileGroup(System.String)
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: DownloadFileGroup(String)
  nameWithType: ApplicationDeployment.DownloadFileGroup(String)
  fullName: System.Deployment.Application.ApplicationDeployment.DownloadFileGroup(String)
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "필요에 따라 선택적 파일 집합을 다운로드합니다."
  remarks: "에 [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] 응용 프로그램을 초기화 하거나 업데이트 하는 동안 응용 프로그램 매니페스트의 &quot;optional&quot;로 표시 하는 파일 다운로드 되지 않습니다. 사용 하지 않도록 네트워크 리소스와 디스크 공간이 사용자가 필요할 때까지 있도록 필요에 따라 명명된 된 그룹에 속하는 파일을 모두 다운로드 하는 DownloadFileGroup 메서드를 사용할 수 있습니다. 예를 들어 특정 사용자에 게 다른 사용자가를 호출 하지 않는 동안 매일, 응용 프로그램에 포함 된 데이터 분석 패키지를 사용 해야 합니다.       DownloadFileGroup 함께 다운로드 한 어셈블리를 사용, 이벤트 수신기를 연결 <xref:System.AppDomain.AssemblyResolve> <xref:System.AppDomain.CurrentDomain%2A>했습니다.</xref:System.AppDomain.CurrentDomain%2A> 이벤트</xref:System.AppDomain.AssemblyResolve> 예를 들어 참조 =[연습: ClickOnce 배포 API를 사용 하 여 디자이너는 요청 시 어셈블리 다운로드](~/add/includes/ajax-current-ext-md.md)합니다.       모든 파일에 다운로드 됩니다는 [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] 응용 프로그램 캐시 격리 됩니다 응용 프로그램의 현재 버전입니다. 응용 프로그램 파일 그룹을 다운로드 한 후 사용자는 응용 프로그램의 새 버전을 설치 하지만 나중에 응용 프로그램의 이전 버전으로 되돌립니다 가정해 봅니다. 이 경우 이전 버전은 계속 원래 다운로드 한 파일의 복사본을 보유 합니다. 데이터 파일에 액세스 하는 방법에 대 한 자세한 내용은 참조 [로컬 액세스 및 ClickOnce 응용 프로그램의 원격 데이터](~/add/includes/ajax-current-ext-md.md)합니다.       DownloadFileGroup 작동 하는 부분적으로 신뢰할 수 있는 응용 프로그램에서 즉, 모든 [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] 제한 된 권한으로 실행 응용 프로그램입니다. 그러나 어셈블리를 동적으로 로드 하려고 하면 응용 프로그램에 완전 신뢰가 필요 합니다.       요청 시 데이터 파일의 다운로드는 현재 지원 되지 않습니다.       응용 프로그램 사용자 DownloadFileGroup 메서드가 반환 될 때까지 입력에 응답 되지 않습니다. 사용자의 워크플로 사용 하 여 중단 하지 않고 파일을 다운로드 하는 경우는 <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A>메서드 대신.</xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A>       파일 이름 으로만 한 파일을 다운로드할 수 없습니다. 단일 파일을 다운로드 하려면 그룹 이름을 할당에 프로그램 [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] 배포 및 다운로드가이 메서드를 사용 하 여 그룹입니다."
  example:
  - "The following code example demonstrates how to load an assembly on demand by listening for the <xref:System.AppDomain.AssemblyResolve> event.  \n  \n [!code-cs[ClickOnceOnDemandCmdLine#2](~/add/codesnippet/csharp/6f3e5fcc-9a7b-4ff6-a5e4-_1.cs)]"
  syntax:
    content: public void DownloadFileGroup (string groupName);
    parameters:
    - id: groupName
      type: System.String
      description: "다운로드할 파일의 명명 된 그룹입니다. 모든 파일 표시 &quot;optional&quot;는 [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] 응용 프로그램에는 그룹 이름이 필요 합니다."
  overload: System.Deployment.Application.ApplicationDeployment.DownloadFileGroup*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> groupName </code> 매개 변수는 null 또는 길이가&0;입니다."
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync(System.String)
  id: DownloadFileGroupAsync(System.String)
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: DownloadFileGroupAsync(String)
  nameWithType: ApplicationDeployment.DownloadFileGroupAsync(String)
  fullName: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync(String)
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "백그라운드에서 선택적 파일 집합을 필요에 따라 다운로드합니다."
  remarks: "에 [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] 응용 프로그램을 초기화 하거나 업데이트 하는 동안 응용 프로그램 매니페스트의 &quot;optional&quot;로 표시 하는 파일 다운로드 되지 않습니다. 사용 하지 않도록 네트워크 리소스와 디스크 공간이 사용자가 필요할 때까지 있도록 필요에 따라 명명된 된 그룹에 속하는 파일을 모두 다운로드 하는 DownloadFileGroupAsync 메서드를 사용할 수 있습니다. 이 방법은 정적 파일 뿐만 아니라 응용 프로그램 않거나 필요 하지 않을 수 있는 어셈블리에 대 한 작동 합니다. 예를 들어 특정 사용자에 게 다른 사용자가를 호출 하지 않는 동안 매일, 응용 프로그램에 포함 된 데이터 분석 패키지를 사용 해야 합니다.       요청 시 어셈블리를 다운로드 하려면 이벤트 수신기 연결 <xref:System.AppDomain.AssemblyResolve>에 <xref:System.AppDomain.CurrentDomain%2A>했습니다.</xref:System.AppDomain.CurrentDomain%2A> 이벤트</xref:System.AppDomain.AssemblyResolve> 예를 들어 참조 [연습: ClickOnce 배포 API를 사용 하 여 요청 시 어셈블리 다운로드](~/add/includes/ajax-current-ext-md.md)합니다.       모든 어셈블리에 다운로드 됩니다는 [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] 응용 프로그램 캐시 합니다.       모든 정적 파일에 다운로드 됩니다는 [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] 응용 프로그램의 데이터 디렉터리 격리 됩니다 응용 프로그램의 현재 버전입니다. 응용 프로그램 파일 그룹을 다운로드 한 후 사용자는 응용 프로그램의 새 버전을 설치 하지만 나중에 응용 프로그램의 이전 버전으로 되돌립니다 가정해 봅니다. 이 경우 이전 버전은 계속 원래 다운로드 한 파일의 복사본을 보유 합니다. 정적 파일에 액세스 하는 방법에 대 한 자세한 내용은 참조 [로컬 액세스 및 ClickOnce 응용 프로그램의 원격 데이터](~/add/includes/ajax-current-ext-md.md)합니다.       <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A>.</xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> 를 사용 하 여 동시에 여러 파일 그룹을 다운로드할 수 있습니다. 사용 하 여 파일 그룹을 구분할 수는 <xref:System.Deployment.Application.DeploymentProgressChangedEventArgs.Group%2A>속성은 <xref:System.Deployment.Application.DeploymentProgressChangedEventArgs>에 전달 되는 클래스는 <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupProgressChanged>이벤트.</xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupProgressChanged> </xref:System.Deployment.Application.DeploymentProgressChangedEventArgs> </xref:System.Deployment.Application.DeploymentProgressChangedEventArgs.Group%2A> 보다 복잡 한 상태를 전달 해야 하는 경우 사용할 수 있습니다 <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A>를 전달 하는 `state` 개체입니다.</xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A>       <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A>즉, 모든 부분적으로 신뢰할 수 있는 응용 프로그램에서 작동 [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] 제한 된 권한으로 실행 응용 프로그램입니다.</xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> 그러나 어셈블리를 동적으로 로드 하려는 응용 프로그램에 완전 신뢰가 필요 합니다.       요청 시 데이터 파일의 다운로드는 현재 지원 되지 않습니다.       파일 이름 으로만 한 파일을 다운로드할 수 없습니다. 단일 파일을 다운로드 하려면 그룹 이름을 할당에 프로그램 [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] 배포 및 다운로드가이 메서드를 사용 하 여 그룹입니다.       비동기 다운로드를 취소 하려면 호출 된 <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsyncCancel%2A>메서드.</xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsyncCancel%2A>"
  syntax:
    content: public void DownloadFileGroupAsync (string groupName);
    parameters:
    - id: groupName
      type: System.String
      description: "다운로드할 파일의 명명 된 그룹입니다. 모든 파일 표시 &quot;optional&quot;는 [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] 응용 프로그램에는 그룹 이름이 필요 합니다."
  overload: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> groupName </code> 매개 변수는 null 또는 길이가&0;입니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "여러 개 다운로드를 시작할 수 없습니다 <code> groupName </code> 한 번에 있습니다."
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync(System.String,System.Object)
  id: DownloadFileGroupAsync(System.String,System.Object)
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: DownloadFileGroupAsync(String,Object)
  nameWithType: ApplicationDeployment.DownloadFileGroupAsync(String,Object)
  fullName: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync(String,Object)
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "필요에 따라 백그라운드에서 선택적 파일 집합을 다운로드 하 고 이벤트 콜백으로 응용 프로그램 상태를 전달 합니다."
  remarks: "에 [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] 응용 프로그램을 초기화 하거나 업데이트 하는 동안 응용 프로그램 매니페스트의 &quot;optional&quot;로 표시 하는 파일 다운로드 되지 않습니다. 사용할 수는 <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A>메서드를 사용 하지 않도록 네트워크 리소스와 디스크 공간이 사용자가 필요할 때까지 있도록 필요에 따라 명명된 된 그룹에 속하는 파일을 모두 다운로드 합니다.</xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> 이 방법은 정적 파일 뿐만 아니라 응용 프로그램 않거나 필요 하지 않을 수 있는 어셈블리에 대 한 작동 합니다. 예를 들어 특정 사용자에 게 다른 사용자가를 호출 하지 않는 동안 매일, 응용 프로그램에 포함 된 데이터 분석 패키지를 사용 해야 합니다. 요청 시 어셈블리를 다운로드 하려면 이벤트 수신기 연결 <xref:System.AppDomain.AssemblyResolve>에 <xref:System.AppDomain.CurrentDomain%2A>했습니다.</xref:System.AppDomain.CurrentDomain%2A> 이벤트</xref:System.AppDomain.AssemblyResolve>       DownloadFileGroupAsync 메서드를 사용 하 여 여러 파일 그룹을 동시에 다운로드할 수 있습니다. 사용 하 여 파일 그룹을 구분할 수는 <xref:System.Deployment.Application.DeploymentProgressChangedEventArgs.Group%2A>속성은 <xref:System.Deployment.Application.DeploymentProgressChangedEventArgs>에 전달 되는 클래스는 <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupProgressChanged>이벤트.</xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupProgressChanged> </xref:System.Deployment.Application.DeploymentProgressChangedEventArgs> </xref:System.Deployment.Application.DeploymentProgressChangedEventArgs.Group%2A> 에 전달 하도록 DownloadFileGroupAsync 보다 복잡 한 상태를 전달 해야 하는 경우 사용할 수 있습니다는 `state` 개체입니다.       모든 정적 파일에 다운로드 됩니다는 [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] 응용 프로그램의 데이터 디렉터리 격리 됩니다 응용 프로그램의 현재 버전입니다. 정적 파일에 액세스 하는 방법에 대 한 자세한 내용은 참조 [로컬 액세스 및 ClickOnce 응용 프로그램의 원격 데이터](~/add/includes/ajax-current-ext-md.md)합니다. . 가정해 봅시다 다운로드 한 후 응용 프로그램에서 파일 그룹, 사용자는 응용 프로그램의 새 버전을 설치 하지만 이후 사용자는 응용 프로그램의 이전 버전으로 돌아갑니다. 이 경우 이전 버전은 계속 원래 다운로드 한 파일의 복사본을 보유 합니다.       <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A>즉, 모든 부분적으로 신뢰할 수 있는 응용 프로그램에서 작동 [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] 제한 된 권한으로 실행 응용 프로그램입니다.</xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> 그러나 어셈블리를 동적으로 로드 하려는 응용 프로그램에 완전 신뢰가 필요 합니다.       요청 시 데이터 파일의 다운로드는 현재 지원 되지 않습니다.       비동기 다운로드를 취소 하려면 호출 된 <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsyncCancel%2A>메서드.</xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsyncCancel%2A>"
  syntax:
    content: public void DownloadFileGroupAsync (string groupName, object userState);
    parameters:
    - id: groupName
      type: System.String
      description: "다운로드할 파일의 명명 된 그룹입니다. 모든 파일 표시 &quot;optional&quot;는 [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] 응용 프로그램에는 그룹 이름이 필요 합니다."
    - id: userState
      type: System.Object
      description: "비동기 작업에 대 한 상태 정보를 포함 하는 임의 개체입니다."
  overload: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> groupName </code> 매개 변수는 null 또는 길이가&0;입니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "여러 개 다운로드를 시작할 수 없습니다 <code> groupName </code> 한 번에 있습니다."
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsyncCancel(System.String)
  id: DownloadFileGroupAsyncCancel(System.String)
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: DownloadFileGroupAsyncCancel(String)
  nameWithType: ApplicationDeployment.DownloadFileGroupAsyncCancel(String)
  fullName: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsyncCancel(String)
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "비동기 파일 다운로드를 취소합니다."
  syntax:
    content: public void DownloadFileGroupAsyncCancel (string groupName);
    parameters:
    - id: groupName
      type: System.String
      description: "다운로드할 파일의 명명 된 그룹입니다. 모든 파일 표시 &quot;optional&quot;는 [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] 응용 프로그램에는 그룹 이름이 필요 합니다."
  overload: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsyncCancel*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>groupName</code>일 수 없습니다 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupCompleted
  id: DownloadFileGroupCompleted
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: DownloadFileGroupCompleted
  nameWithType: ApplicationDeployment.DownloadFileGroupCompleted
  fullName: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupCompleted
  type: Event
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "파일 다운로드가 완료 되 면 주 응용 프로그램 스레드에서 발생 합니다."
  remarks: "DownloadFileGroupCompleted 이벤트는 주 응용 프로그램 스레드에서 호출 됩니다. 스레드로부터 안전 하 게이 콜백 내에서 직접 응용 프로그램의 Windows Forms 컨트롤을 호출할지 않습니다.       확인는 <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A>의 속성은 <xref:System.ComponentModel.AsyncCompletedEventArgs>이 콜백은에 제공 된.</xref:System.ComponentModel.AsyncCompletedEventArgs> </xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> 이 속성이 `null`, 다운로드 작업이 성공적 없으면 `null`설치 실패 했으며, 및 절차를 통해 설치 문제에 대 한 자세한 정보를 찾을 수 있습니다는 <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A>속성.</xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A>"
  example:
  - "The following code example downloads a group of Help files in the background. The example requires that you deploy a Windows Forms application that includes a <xref:System.Windows.Forms.StatusStrip> control, and that this control contain a <xref:System.Windows.Forms.ToolStripStatusLabel> control named `downloadStatus`..  \n  \n [!code-cs[ClickOnceAPI#8](~/add/codesnippet/csharp/ClickOnceAPI/Form1.cs#8)]\n [!code-cpp[ClickOnceAPI#8](~/add/codesnippet/cpp/d8c90486-6b41-4c55-b911-_1.cpp)]\n [!code-vb[ClickOnceAPI#8](~/add/codesnippet/visualbasic/ClickOnceAPIVB/Form1.vb#8)]"
  syntax:
    content: public event System.Deployment.Application.DownloadFileGroupCompletedEventHandler DownloadFileGroupCompleted;
    return:
      type: System.Deployment.Application.DownloadFileGroupCompletedEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupProgressChanged
  id: DownloadFileGroupProgressChanged
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: DownloadFileGroupProgressChanged
  nameWithType: ApplicationDeployment.DownloadFileGroupProgressChanged
  fullName: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupProgressChanged
  type: Event
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "상태 정보 파일 다운로드 <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync*>.</xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync*> 를 호출 하 여 시작 된 작업에서 사용할 수 있는 경우에 발생"
  remarks: "DownloadFileGroupProgressChanged 이벤트는 주 응용 프로그램 스레드에서 호출 됩니다. 스레드로부터 안전 하 게이 콜백 내에서 직접 응용 프로그램의 Windows Forms 컨트롤을 호출할지 않습니다.       에 제공 된 정보를 사용 하 여 <xref:System.Deployment.Application.DeploymentProgressChangedEventArgs>사용자에 게 진행률 정보를 전달 합니다.</xref:System.Deployment.Application.DeploymentProgressChangedEventArgs>"
  example:
  - "The following code example downloads a group of Help files in the background. The example requires that you deploy a Windows Forms application that includes a <xref:System.Windows.Forms.StatusStrip> control, and that this control contain a <xref:System.Windows.Forms.ToolStripStatusLabel> control named `downloadStatus`.  \n  \n [!code-cs[ClickOnceAPI#8](~/add/codesnippet/csharp/ClickOnceAPI/Form1.cs#8)]\n [!code-cpp[ClickOnceAPI#8](~/add/codesnippet/cpp/dd149587-df74-4c6a-9251-_1.cpp)]\n [!code-vb[ClickOnceAPI#8](~/add/codesnippet/visualbasic/ClickOnceAPIVB/Form1.vb#8)]"
  syntax:
    content: public event System.Deployment.Application.DeploymentProgressChangedEventHandler DownloadFileGroupProgressChanged;
    return:
      type: System.Deployment.Application.DeploymentProgressChangedEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.IsFileGroupDownloaded(System.String)
  id: IsFileGroupDownloaded(System.String)
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: IsFileGroupDownloaded(String)
  nameWithType: ApplicationDeployment.IsFileGroupDownloaded(String)
  fullName: System.Deployment.Application.ApplicationDeployment.IsFileGroupDownloaded(String)
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "클라이언트 컴퓨터에 명명된 된 파일 그룹이 이미 다운로드 되었는지 여부를 확인 합니다."
  remarks: "IsFileGroupDownloaded 보안 요청 없이 부분적으로 신뢰할 수 있는 응용 프로그램에서 작동합니다.       응용 프로그램을 업데이트 하는 경우 [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] 이전 버전의 모든 요청에 데이터 파일에서 새 버전의 데이터 디렉터리로 복사 합니다. 이러한 파일의 새 버전을 다운로드 하는 경우 이전 버전에서 유지 하 고 새 버전으로 이동 하려는 모든 데이터를 제거 해야 합니다."
  example:
  - "The following code example downloads all of the files in the `HelpFiles` group to disk.  \n  \n [!code-cs[ClickOnceAPI#8](~/add/codesnippet/csharp/ClickOnceAPI/Form1.cs#8)]\n [!code-cpp[ClickOnceAPI#8](~/add/codesnippet/cpp/ff7c4993-a9b0-4966-b9a0-_1.cpp)]\n [!code-vb[ClickOnceAPI#8](~/add/codesnippet/visualbasic/ClickOnceAPIVB/Form1.vb#8)]"
  syntax:
    content: public bool IsFileGroupDownloaded (string groupName);
    parameters:
    - id: groupName
      type: System.String
      description: "다운로드할 파일의 명명 된 그룹입니다. 모든 파일 표시 &quot;optional&quot;는 [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] 응용 프로그램에는 그룹 이름이 필요 합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>파일 그룹이 이미이 응용 프로그램의 현재 버전에 대 한 다운로드 된 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. IsFileGroupDownloaded 반환 하는 경우 새 버전의 응용 프로그램 설치가 완료 된 후 및 새 버전에 없는 추가, 제거 또는 파일 그룹의 파일 변경, <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Deployment.Application.ApplicationDeployment.IsFileGroupDownloaded*
  exceptions:
  - type: System.Deployment.Application.InvalidDeploymentException
    commentId: T:System.Deployment.Application.InvalidDeploymentException
    description: "<code>groupName</code>파일 그룹이 아닌 응용 프로그램 매니페스트에서 정의 됩니다."
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.IsFirstRun
  id: IsFirstRun
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: IsFirstRun
  nameWithType: ApplicationDeployment.IsFirstRun
  fullName: System.Deployment.Application.ApplicationDeployment.IsFirstRun
  type: Property
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "처음으로 클라이언트 컴퓨터에서이 응용 프로그램 실행 되었는지 여부를 나타내는 값을 가져옵니다."
  remarks: "IsFirstRun를 사용 하 여 처음으로 응용 프로그램이 실행 되는 한 번만 초기화 작업을 수행 해야 하는지 여부를 결정 합니다.       이라고 단정 하지 마십시오 IsFirstRun 설정인 `true` 이 인스턴스는 응용 프로그램의 사용자에 게 해당 사용자 인터페이스를 표시 하기 위한 첫 번째 임을 나타냅니다. 시스템 프로세스를 예약 하는 방식으로 인해 응용 프로그램의 한 인스턴스에 해당 IsFirstRun 속성이 설정 있을 수 있습니다 `true`, 되지만 다른 인스턴스는 처음 화면에 렌더링 될 수 있습니다. 이 속성의 값에는 다음 버전 간에 업그레이드 하는 사용자 될 때마다 다시 설정 됩니다. 처음의 모든 버전에만 작업을 수행 하려는 경우 응용 프로그램 실행, 처음으로 생성 되는 파일의 존재 여부를 확인 하는 플래그를 사용 하 여 저장 등의 추가 테스트를 수행 해야 합니다 **응용 프로그램 설정**합니다."
  example:
  - "The following code example uses IsFirstRun to decide whether to check for an update to the file group `HelpFiles`. If one or more of the files have been updated, it calls <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> to obtain the new versions.  \n  \n [!code-cs[ClickOnceAPI#9](~/add/codesnippet/csharp/ClickOnceAPI/Form1.cs#9)]\n [!code-vb[ClickOnceAPI#9](~/add/codesnippet/visualbasic/ClickOnceAPIVB/Form1.vb#9)]"
  syntax:
    content: public bool IsFirstRun { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>응용 프로그램의이 버전이; 하기 전에 클라이언트 컴퓨터에서 실행 된 적 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Deployment.Application.ApplicationDeployment.IsFirstRun*
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed
  id: IsNetworkDeployed
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: IsNetworkDeployed
  nameWithType: ApplicationDeployment.IsNetworkDeployed
  fullName: System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed
  type: Property
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "현재 응용 프로그램 인지를 나타내는 값을 가져옵니다는 [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] 응용 프로그램입니다."
  remarks: "응용 프로그램의 내부와 외부 모두에서 실행 되도록 하는 경우는 [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] 배포 (예를 들어, 로컬 컴퓨터에 배포 하기 전에 응용 프로그램을 디버깅 하는 경우)에 액세스 하기 전에 IsNetworkDeployed 테스트는 <xref:System.Deployment.Application.ApplicationDeployment.CurrentDeployment%2A>속성.</xref:System.Deployment.Application.ApplicationDeployment.CurrentDeployment%2A>       IsNetworkDeployed 돌아갑니다 `true` 여부에 관계 없이 응용 프로그램은 설치 된 온라인 호스팅 및 웹 사이트, 파일 공유 또는 CD-ROM에서 설치 된 여부에 관계 없이 합니다."
  example:
  - "The following code example retrieves <xref:System.Deployment.Application.ApplicationDeployment.CurrentDeployment%2A> by using IsNetworkDeployed first to ensure that the reference is not `null`.  \n  \n [!code-cs[ClickOnceAPI#2](~/add/codesnippet/csharp/ClickOnceAPI/Form1.cs#2)]\n [!code-cpp[ClickOnceAPI#2](~/add/codesnippet/cpp/p-system.deployment.appl_0_1.cpp)]"
  syntax:
    content: public static bool IsNetworkDeployed { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>이것이 [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] 고, 그렇지 않으면 응용 프로그램 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed*
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.TimeOfLastUpdateCheck
  id: TimeOfLastUpdateCheck
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: TimeOfLastUpdateCheck
  nameWithType: ApplicationDeployment.TimeOfLastUpdateCheck
  fullName: System.Deployment.Application.ApplicationDeployment.TimeOfLastUpdateCheck
  type: Property
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "날짜와 시간을 가져옵니다 [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] 응용 프로그램 업데이트에 대 한 마지막으로 확인 합니다."
  remarks: "A [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] 구독 업데이트를 위해 응용 프로그램을 구성할 수 있습니다. 이 시나리오에서는 [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] 응용 프로그램의 배포 위치를 배포 매니페스트에 정의 된 간격으로 자동으로 폴링한 사용 가능한 업데이트가 있는지 여부를 결정 합니다. 또는 명시적인 확인 사용 하 여 구독에 의해 초기화 되었는지 여부에 관계 없이 마지막으로 업데이트 확인의 시간을 반환 하는 TimeOfLastUpdateCheck는 <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdate%2A>, <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync%2A>, <xref:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate%2A>, <xref:System.Deployment.Application.ApplicationDeployment.Update%2A>, 또는 <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A>메서드.</xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A> </xref:System.Deployment.Application.ApplicationDeployment.Update%2A> </xref:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate%2A> </xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync%2A> </xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdate%2A>       업데이트 확인 응용 프로그램이 설치 된 이후 수행 된, TimeOfLastUpdateCheck 설치 시간을 반환 합니다."
  example:
  - "The following code example checks whether a [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] application has been checked for available updates in the past three days.  \n  \n [!code-cs[ClickOnceAPI#3](~/add/codesnippet/csharp/ClickOnceAPI/Form1.cs#3)]\n [!code-cpp[ClickOnceAPI#3](~/add/codesnippet/cpp/p-system.deployment.appl_8_1.cpp)]\n [!code-vb[ClickOnceAPI#3](~/add/codesnippet/visualbasic/ClickOnceAPIVB/Form1.vb#3)]"
  syntax:
    content: public DateTime TimeOfLastUpdateCheck { get; }
    return:
      type: System.DateTime
      description: "<xref:System.DateTime>마지막 업데이트 확인 합니다.</xref:System.DateTime>"
  overload: System.Deployment.Application.ApplicationDeployment.TimeOfLastUpdateCheck*
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.Update
  id: Update
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: Update()
  nameWithType: ApplicationDeployment.Update()
  fullName: System.Deployment.Application.ApplicationDeployment.Update()
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "동기 다운로드 및이 응용 프로그램의 최신 버전의 설치를 시작 합니다."
  remarks: "응용 프로그램에서 지정한 위치에 응용 프로그램의 새 버전을 게시할 때 것으로 간주 됩니다 <xref:System.Deployment.Application.ApplicationDeployment.UpdateLocation%2A>, 응용 프로그램의 배포 매니페스트에 버전 번호는 현재 사용자의 컴퓨터에 설치 된 응용 프로그램의 버전 번호 보다 큰 및.</xref:System.Deployment.Application.ApplicationDeployment.UpdateLocation%2A>       업데이트 호출에서 업데이트가 클라이언트 컴퓨터에 다운로드 되어에 설치 될 때까지 차단 됩니다는 [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] 캐시할이 시간 동안 응용 프로그램 됩니다 사용자에 게 응답 합니다. 응용 프로그램의 응답성을 유지 하거나 다운로드를 사용 하는 동안 진행률 보고서를 표시 하려는 경우는 <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A>메서드 대신.</xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A>       업데이트를 다운로드 하의 모든 응용 프로그램 매니페스트의 &quot;optional&quot;로 표시 되지 않은 파일입니다. 사용 하 여 필요에 따라 선택적 파일을 다운로드할 수 있습니다는 <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A>또는 <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A>메서드.</xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> </xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A>       [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]이미 하나일 수 응용 프로그램이 자동으로; Update 메서드를 호출 하는 경우 이 메서드를 호출 <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> 를 throw 합니다 이렇게 되 면       배포에 있는 하나 이상의 파일을 업데이트 하는 경우 응용 프로그램 매니페스트 새로 <xref:System.Deployment.Application.InvalidDeploymentException>.</xref:System.Deployment.Application.InvalidDeploymentException> 나타납니다. 대부분의 경우 재배포 프로그램 [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] 응용 프로그램에서는이 문제를 해결 합니다. 배포 매니페스트 또는 응용 프로그램 매니페스트에 공개 키 서명 잘못 되었거나 누락 된 경우이 예외를 발생 하기도 합니다.       업데이트에는 응용 프로그램의 이전 버전 보다 더 높은 수준의 신뢰 로컬 컴퓨터에 요청할 수 있습니다. 응용 프로그램에서 신뢰할 수 있는 응용 프로그램 배포를 사용 하는 경우 공용 언어 런타임 (CLR) 신뢰 관리자는 올바른 신뢰 라이선스가 포함 되어 있는지 확인 하려면 배포 매니페스트를 검사 합니다. 배포 매니페스트에 올바른 신뢰 라이선스가 없는 경우 [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] 설치를 중지 하 고 <xref:System.Deployment.Application.TrustNotGrantedException>.</xref:System.Deployment.Application.TrustNotGrantedException> throw Update 메서드를 실행할 응용 프로그램 권한을 부여 하 게 할지를 사용자에 게 묻는 프롬프트를 표시 하지 않습니다."
  example:
  - "The following code example checks for an application update; if an update is available, it installs it synchronously.  \n  \n [!code-cs[ClickOnceAPI#6](~/add/codesnippet/csharp/ClickOnceAPI/Form1.cs#6)]\n [!code-cpp[ClickOnceAPI#6](~/add/codesnippet/cpp/m-system.deployment.appl_6_1.cpp)]\n [!code-vb[ClickOnceAPI#6](~/add/codesnippet/visualbasic/ClickOnceAPIVB/Form1.vb#6)]"
  syntax:
    content: public bool Update ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>응용 프로그램이 업데이트 되었습니다. 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Deployment.Application.ApplicationDeployment.Update*
  exceptions:
  - type: System.Deployment.Application.TrustNotGrantedException
    commentId: T:System.Deployment.Application.TrustNotGrantedException
    description: "로컬 컴퓨터 응용 프로그램 실행 하도록 요청 하는 권한 수준을 부여 하지 않은 합니다."
  - type: System.Deployment.Application.InvalidDeploymentException
    commentId: T:System.Deployment.Application.InvalidDeploymentException
    description: "프로그램 [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] 배포 손상 되었습니다. 진단 및 문제를 해결 하는 방법에 대 한 팁을 참조 하십시오. [ClickOnce 배포 문제 해결](~/add/includes/ajax-current-ext-md.md)합니다."
  - type: System.Deployment.Application.DeploymentDownloadException
    commentId: T:System.Deployment.Application.DeploymentDownloadException
    description: "네트워크 위치에서 새 배포를 다운로드할 수 없습니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "응용 프로그램이 현재 업데이트 중입니다."
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.UpdateAsync
  id: UpdateAsync
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: UpdateAsync()
  nameWithType: ApplicationDeployment.UpdateAsync()
  fullName: System.Deployment.Application.ApplicationDeployment.UpdateAsync()
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "비동기 다운로드 및이 응용 프로그램의 최신 버전의 설치를 시작합니다."
  remarks: "응용 프로그램에서 지정한 위치에 응용 프로그램의 새 버전을 게시할 때 것으로 간주 됩니다 <xref:System.Deployment.Application.ApplicationDeployment.UpdateLocation%2A>, 응용 프로그램의 배포 매니페스트에 버전 번호는 현재 사용자의 컴퓨터에 설치 된 응용 프로그램의 버전 번호 보다 큰 및.</xref:System.Deployment.Application.ApplicationDeployment.UpdateLocation%2A>       업데이트를 다운로드 하는 동안 [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] 에서 발생 된 <xref:System.Deployment.Application.ApplicationDeployment.UpdateProgressChanged>다운로드의 상태에 대 한 주 응용 프로그램 스레드에서 이벤트 처리기.</xref:System.Deployment.Application.ApplicationDeployment.UpdateProgressChanged> 비동기 업데이트가 완료 되거나 예외가 발생 하면 [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] 시킵니다는 <xref:System.Deployment.Application.ApplicationDeployment.UpdateCompleted>주 응용 프로그램 스레드에서 이벤트를.</xref:System.Deployment.Application.ApplicationDeployment.UpdateCompleted> 검사는 <xref:System.ComponentModel.AsyncCompletedEventArgs>업데이트가 성공 했는지 여부를 확인 하려면이 이벤트를 제공 합니다.</xref:System.ComponentModel.AsyncCompletedEventArgs>       UpdateAsync 예외를 throw 하는 경우 [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] 호출 <xref:System.Deployment.Application.ApplicationDeployment.UpdateCompleted>설정 하 고는 <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A>속성 <xref:System.ComponentModel.AsyncCompletedEventArgs>throw 된 예외에.</xref:System.ComponentModel.AsyncCompletedEventArgs> </xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> </xref:System.Deployment.Application.ApplicationDeployment.UpdateCompleted>       UpdateAsync 응용 프로그램 매니페스트의 &quot;optional&quot;로 표시 되지 배포의 모든 파일을 다운로드 합니다. 사용 하 여 필요에 따라 선택적 파일을 다운로드할 수 있습니다는 <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A>또는 <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A>메서드.</xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> </xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A>       [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]이미 하나일 수 응용 프로그램이 자동으로 UpdateAsync 메서드를 호출 하는 경우 이 메서드를 호출 <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> 를 throw 합니다 이렇게 되 면       배포에 있는 하나 이상의 파일을 업데이트 하는 경우 응용 프로그램 매니페스트 새로 <xref:System.Deployment.Application.InvalidDeploymentException>.</xref:System.Deployment.Application.InvalidDeploymentException> 나타납니다. 대부분의 경우 응용 프로그램 매니페스트를 다시 빌드하면이 문제를 해결 합니다. 배포 매니페스트 또는 응용 프로그램 매니페스트에 공개 키 서명 잘못 되었거나 누락 된 경우이 예외를 발생 하기도 합니다.       업데이트에는 응용 프로그램의 이전 버전 보다 더 높은 수준의 신뢰 로컬 컴퓨터에 요청할 수 있습니다. 응용 프로그램에서 신뢰할 수 있는 응용 프로그램 배포를 사용 하는 경우 공용 언어 런타임 (CLR) 신뢰 관리자는 올바른 신뢰 라이선스가 포함 되어 있는지 확인 하려면 배포 매니페스트를 검사 합니다. 배포 매니페스트에 올바른 신뢰 라이선스가 없는 경우 [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] 설치를 중지 하 고 <xref:System.Deployment.Application.TrustNotGrantedException>.</xref:System.Deployment.Application.TrustNotGrantedException> throw UpdateAsync에서 사용자에 게 응용 프로그램 실행에 필요한 권한을 부여 하기를 원하는 지 묻는 메시지를 표시 하지 않습니다."
  example:
  - "The following code example determines whether a new update is available at application load time; if a required update is available, it installs the update asynchronously. The example requires that you deploy a Windows Forms application that includes a <xref:System.Windows.Forms.StatusStrip> control, and that this control contain a <xref:System.Windows.Forms.ToolStripStatusLabel> control named `downloadStatus`.  \n  \n [!code-cs[ClickOnceAPI#1](~/add/codesnippet/csharp/ClickOnceAPI/Form1.cs#1)]\n [!code-cpp[ClickOnceAPI#1](~/add/codesnippet/cpp/m-system.deployment.appl_2_1.cpp)]\n [!code-vb[ClickOnceAPI#1](~/add/codesnippet/visualbasic/ClickOnceAPIVB/Form1.vb#1)]"
  syntax:
    content: public void UpdateAsync ();
    parameters: []
  overload: System.Deployment.Application.ApplicationDeployment.UpdateAsync*
  exceptions:
  - type: System.Deployment.Application.TrustNotGrantedException
    commentId: T:System.Deployment.Application.TrustNotGrantedException
    description: "로컬 컴퓨터가 응용이 프로그램 실행 하도록 요청 하는 권한 수준을 부여 하지 않은 합니다."
  - type: System.Deployment.Application.InvalidDeploymentException
    commentId: T:System.Deployment.Application.InvalidDeploymentException
    description: "프로그램 [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] 배포 손상 되었습니다. 진단 및 문제를 해결 하는 방법에 대 한 팁을 참조 하십시오. [ClickOnce 배포 문제 해결](~/add/includes/ajax-current-ext-md.md)합니다."
  - type: System.Deployment.Application.DeploymentDownloadException
    commentId: T:System.Deployment.Application.DeploymentDownloadException
    description: "네트워크 위치에서 새 배포를 다운로드할 수 없습니다."
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.UpdateAsyncCancel
  id: UpdateAsyncCancel
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: UpdateAsyncCancel()
  nameWithType: ApplicationDeployment.UpdateAsyncCancel()
  fullName: System.Deployment.Application.ApplicationDeployment.UpdateAsyncCancel()
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "<xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync*>.</xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync*> 에서 시작 된 비동기 업데이트를 취소"
  remarks: "취소에 대 한 호출에서 시작 된 업데이트 UpdateAsyncCancel <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A>; 가입의 일환으로 시작 하는 업데이트를 취소 하지 않습니다.</xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A>"
  syntax:
    content: public void UpdateAsyncCancel ();
    parameters: []
  overload: System.Deployment.Application.ApplicationDeployment.UpdateAsyncCancel*
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.UpdateCompleted
  id: UpdateCompleted
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: UpdateCompleted
  nameWithType: ApplicationDeployment.UpdateCompleted
  fullName: System.Deployment.Application.ApplicationDeployment.UpdateCompleted
  type: Event
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "발생 경우 [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync*>.</xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync*> 에 대 한 호출의 결과로 응용 프로그램 업그레이드 완료 했습니다."
  remarks: "UpdateCompleted 이벤트는 주 응용 프로그램 스레드에서 호출 됩니다. 예외를 트리거하지 않고이 콜백 내에서 직접 응용 프로그램의 Windows Forms 컨트롤을 호출할 수 있습니다.       확인는 <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A>의 속성은 <xref:System.ComponentModel.AsyncCompletedEventArgs>이 콜백은에 제공 된.</xref:System.ComponentModel.AsyncCompletedEventArgs> </xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> 이 속성이 `null`, 설치가 성공적; 없으면 `null`설치 실패 했으며, 및 절차를 통해이 설치 문제에 대 한 자세한 정보를 찾을 수 있습니다는 <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A>속성.</xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> 업데이트를 다운로드 한 후 호출 해야 합니다는 <xref:System.Windows.Forms.Application.Restart%2A>에서 메서드는 <xref:System.Windows.Forms.Application>응용 프로그램의 최신 버전을 사용 합니다.</xref:System.Windows.Forms.Application> </xref:System.Windows.Forms.Application.Restart%2A>       업데이트의 설치를 호출 하 여 취소 되었습니다 <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsyncCancel%2A>, <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A>의 속성은 <xref:System.ComponentModel.AsyncCompletedEventArgs>클래스 됩니다 `true`.</xref:System.ComponentModel.AsyncCompletedEventArgs> </xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> </xref:System.Deployment.Application.ApplicationDeployment.UpdateAsyncCancel%2A>       이 이벤트 처리기를 사용 하려면 응용 프로그램 모두 가져와야는 <xref:System.Deployment.Application>및 <xref:System.ComponentModel>네임 스페이스.</xref:System.ComponentModel> </xref:System.Deployment.Application>"
  example:
  - "The following code example determines at application load time whether a new update is available; if a required update is available, it installs the update asynchronously. The example requires that you deploy a Windows Forms application that includes a <xref:System.Windows.Forms.StatusStrip> control, and that this control contain a <xref:System.Windows.Forms.ToolStripStatusLabel> control named `downloadStatus`.  \n  \n [!code-cs[ClickOnceAPI#1](~/add/codesnippet/csharp/ClickOnceAPI/Form1.cs#1)]\n [!code-cpp[ClickOnceAPI#1](~/add/codesnippet/cpp/e-system.deployment.appl_3_1.cpp)]\n [!code-vb[ClickOnceAPI#1](~/add/codesnippet/visualbasic/ClickOnceAPIVB/Form1.vb#1)]"
  syntax:
    content: public event System.ComponentModel.AsyncCompletedEventHandler UpdateCompleted;
    return:
      type: System.ComponentModel.AsyncCompletedEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.UpdatedApplicationFullName
  id: UpdatedApplicationFullName
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: UpdatedApplicationFullName
  nameWithType: ApplicationDeployment.UpdatedApplicationFullName
  fullName: System.Deployment.Application.ApplicationDeployment.UpdatedApplicationFullName
  type: Property
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "업데이트 된 후 응용 프로그램의 전체 이름을 가져옵니다."
  syntax:
    content: public string UpdatedApplicationFullName { get; }
    return:
      type: System.String
      description: "A <xref:System.String>응용 프로그램의 전체 이름을 포함 하는.</xref:System.String>"
  overload: System.Deployment.Application.ApplicationDeployment.UpdatedApplicationFullName*
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.UpdatedVersion
  id: UpdatedVersion
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: UpdatedVersion
  nameWithType: ApplicationDeployment.UpdatedVersion
  fullName: System.Deployment.Application.ApplicationDeployment.UpdatedVersion
  type: Property
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "최근에 다운로드 된 업데이트의 버전을 가져옵니다."
  remarks: "<xref:System.Deployment.Application.ApplicationDeployment.CurrentVersion%2A>새 업데이트가 설치 되어 있지만 <xref:System.Windows.Forms.Application.Restart%2A> <xref:System.Windows.Forms.Application>.</xref:System.Windows.Forms.Application> </xref:System.Windows.Forms.Application.Restart%2A> 를 호출 하지 않은 경우</xref:System.Deployment.Application.ApplicationDeployment.CurrentVersion%2A> 에서 다른 UpdatedVersion 응용 프로그램의 배포 매니페스트는 자동 업데이트를 수행 하도록 구성 된, 경우에 응용 프로그램을 다시 시작 해야 하는지 여부를 확인 하려면이 두 값을 비교할 수 있습니다.       UpdatedVersion <xref:System.Deployment.Application.ApplicationDeployment.CurrentVersion%2A>.</xref:System.Deployment.Application.ApplicationDeployment.CurrentVersion%2A> 과 동일한 값을 반환 응용 프로그램 업데이트 되지 않은 경우"
  example:
  - "The following code example defines a method that determines whether [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] has updated the application.  \n  \n [!code-cs[ClickOnceAPI#4](~/add/codesnippet/csharp/ClickOnceAPI/Form1.cs#4)]\n [!code-cpp[ClickOnceAPI#4](~/add/codesnippet/cpp/p-system.deployment.appl_5_1.cpp)]\n [!code-vb[ClickOnceAPI#4](~/add/codesnippet/visualbasic/ClickOnceAPIVB/Form1.vb#4)]"
  syntax:
    content: public Version UpdatedVersion { get; }
    return:
      type: System.Version
      description: "<xref:System.Version>업데이트의 버전을 설명 하는.</xref:System.Version>"
  overload: System.Deployment.Application.ApplicationDeployment.UpdatedVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.UpdateLocation
  id: UpdateLocation
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: UpdateLocation
  nameWithType: ApplicationDeployment.UpdateLocation
  fullName: System.Deployment.Application.ApplicationDeployment.UpdateLocation
  type: Property
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "웹 사이트 또는 파일 공유를이 응용 프로그램 자동 업데이트를 가져옵니다."
  remarks: "UpdateLocation은 업데이트 리디렉션을 사용 하도록 응용 프로그램의 배포를 구성한 경우 처음 응용 프로그램을 다운로드 하는 데 사용 되는 웹 사이트에서 다를 수 있습니다.       응용 프로그램의 배포 매니페스트에만이 값을 변경할 수 있습니다."
  syntax:
    content: public Uri UpdateLocation { get; }
    return:
      type: System.Uri
      description: "HTTP, HTTPS 또는 파일 URL;으로 표시 되는 업데이트 경로 또는 Windows로 네트워크 파일 경로 (UNC)."
  overload: System.Deployment.Application.ApplicationDeployment.UpdateLocation*
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.UpdateProgressChanged
  id: UpdateProgressChanged
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: UpdateProgressChanged
  nameWithType: ApplicationDeployment.UpdateProgressChanged
  fullName: System.Deployment.Application.ApplicationDeployment.UpdateProgressChanged
  type: Event
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "발생 경우 [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] 호출 하 여 시작 되는 업데이트 작업에 대 한 새 상태 정보는 <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync*>메서드.</xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync*>"
  remarks: "UpdateProgressChanged 이벤트는 주 응용 프로그램 스레드에서 호출 됩니다. 예외를 트리거하지 않고이 콜백 내에서 직접 응용 프로그램의 Windows Forms 컨트롤을 호출할 수 있습니다."
  example:
  - "The following code example determines at application load time whether a new update is available; if a required update is available, it installs the update asynchronously.  \n  \n [!code-cs[ClickOnceAPI#1](~/add/codesnippet/csharp/ClickOnceAPI/Form1.cs#1)]\n [!code-cpp[ClickOnceAPI#1](~/add/codesnippet/cpp/e-system.deployment.appl_1_1.cpp)]\n [!code-vb[ClickOnceAPI#1](~/add/codesnippet/visualbasic/ClickOnceAPIVB/Form1.vb#1)]"
  syntax:
    content: public event System.Deployment.Application.DeploymentProgressChangedEventHandler UpdateProgressChanged;
    return:
      type: System.Deployment.Application.DeploymentProgressChangedEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Deployment.Application.DeploymentDownloadException
  parent: System.Deployment.Application
  isExternal: false
  name: DeploymentDownloadException
  nameWithType: DeploymentDownloadException
  fullName: System.Deployment.Application.DeploymentDownloadException
- uid: System.Deployment.Application.InvalidDeploymentException
  parent: System.Deployment.Application
  isExternal: false
  name: InvalidDeploymentException
  nameWithType: InvalidDeploymentException
  fullName: System.Deployment.Application.InvalidDeploymentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Deployment.Application.TrustNotGrantedException
  parent: System.Deployment.Application
  isExternal: false
  name: TrustNotGrantedException
  nameWithType: TrustNotGrantedException
  fullName: System.Deployment.Application.TrustNotGrantedException
- uid: System.Deployment.Application.ApplicationDeployment.ActivationUri
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: ActivationUri
  nameWithType: ApplicationDeployment.ActivationUri
  fullName: System.Deployment.Application.ApplicationDeployment.ActivationUri
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: CheckForDetailedUpdate()
  nameWithType: ApplicationDeployment.CheckForDetailedUpdate()
  fullName: System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate()
- uid: System.Deployment.Application.UpdateCheckInfo
  parent: System.Deployment.Application
  isExternal: false
  name: UpdateCheckInfo
  nameWithType: UpdateCheckInfo
  fullName: System.Deployment.Application.UpdateCheckInfo
- uid: System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate(System.Boolean)
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: CheckForDetailedUpdate(Boolean)
  nameWithType: ApplicationDeployment.CheckForDetailedUpdate(Boolean)
  fullName: System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Deployment.Application.ApplicationDeployment.CheckForUpdate
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: CheckForUpdate()
  nameWithType: ApplicationDeployment.CheckForUpdate()
  fullName: System.Deployment.Application.ApplicationDeployment.CheckForUpdate()
- uid: System.Deployment.Application.ApplicationDeployment.CheckForUpdate(System.Boolean)
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: CheckForUpdate(Boolean)
  nameWithType: ApplicationDeployment.CheckForUpdate(Boolean)
  fullName: System.Deployment.Application.ApplicationDeployment.CheckForUpdate(Boolean)
- uid: System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: CheckForUpdateAsync()
  nameWithType: ApplicationDeployment.CheckForUpdateAsync()
  fullName: System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync()
- uid: System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsyncCancel
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: CheckForUpdateAsyncCancel()
  nameWithType: ApplicationDeployment.CheckForUpdateAsyncCancel()
  fullName: System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsyncCancel()
- uid: System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: CheckForUpdateCompleted
  nameWithType: ApplicationDeployment.CheckForUpdateCompleted
  fullName: System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted
- uid: System.Deployment.Application.CheckForUpdateCompletedEventHandler
  parent: System.Deployment.Application
  isExternal: false
  name: CheckForUpdateCompletedEventHandler
  nameWithType: CheckForUpdateCompletedEventHandler
  fullName: System.Deployment.Application.CheckForUpdateCompletedEventHandler
- uid: System.Deployment.Application.ApplicationDeployment.CheckForUpdateProgressChanged
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: CheckForUpdateProgressChanged
  nameWithType: ApplicationDeployment.CheckForUpdateProgressChanged
  fullName: System.Deployment.Application.ApplicationDeployment.CheckForUpdateProgressChanged
- uid: System.Deployment.Application.DeploymentProgressChangedEventHandler
  parent: System.Deployment.Application
  isExternal: false
  name: DeploymentProgressChangedEventHandler
  nameWithType: DeploymentProgressChangedEventHandler
  fullName: System.Deployment.Application.DeploymentProgressChangedEventHandler
- uid: System.Deployment.Application.ApplicationDeployment.CurrentDeployment
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: CurrentDeployment
  nameWithType: ApplicationDeployment.CurrentDeployment
  fullName: System.Deployment.Application.ApplicationDeployment.CurrentDeployment
- uid: System.Deployment.Application.ApplicationDeployment
  parent: System.Deployment.Application
  isExternal: false
  name: ApplicationDeployment
  nameWithType: ApplicationDeployment
  fullName: System.Deployment.Application.ApplicationDeployment
- uid: System.Deployment.Application.ApplicationDeployment.CurrentVersion
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: CurrentVersion
  nameWithType: ApplicationDeployment.CurrentVersion
  fullName: System.Deployment.Application.ApplicationDeployment.CurrentVersion
- uid: System.Version
  parent: System
  isExternal: true
  name: Version
  nameWithType: Version
  fullName: System.Version
- uid: System.Deployment.Application.ApplicationDeployment.DataDirectory
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: DataDirectory
  nameWithType: ApplicationDeployment.DataDirectory
  fullName: System.Deployment.Application.ApplicationDeployment.DataDirectory
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Deployment.Application.ApplicationDeployment.DownloadFileGroup(System.String)
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: DownloadFileGroup(String)
  nameWithType: ApplicationDeployment.DownloadFileGroup(String)
  fullName: System.Deployment.Application.ApplicationDeployment.DownloadFileGroup(String)
- uid: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync(System.String)
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: DownloadFileGroupAsync(String)
  nameWithType: ApplicationDeployment.DownloadFileGroupAsync(String)
  fullName: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync(String)
- uid: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync(System.String,System.Object)
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: DownloadFileGroupAsync(String,Object)
  nameWithType: ApplicationDeployment.DownloadFileGroupAsync(String,Object)
  fullName: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync(String,Object)
- uid: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsyncCancel(System.String)
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: DownloadFileGroupAsyncCancel(String)
  nameWithType: ApplicationDeployment.DownloadFileGroupAsyncCancel(String)
  fullName: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsyncCancel(String)
- uid: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupCompleted
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: DownloadFileGroupCompleted
  nameWithType: ApplicationDeployment.DownloadFileGroupCompleted
  fullName: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupCompleted
- uid: System.Deployment.Application.DownloadFileGroupCompletedEventHandler
  parent: System.Deployment.Application
  isExternal: false
  name: DownloadFileGroupCompletedEventHandler
  nameWithType: DownloadFileGroupCompletedEventHandler
  fullName: System.Deployment.Application.DownloadFileGroupCompletedEventHandler
- uid: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupProgressChanged
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: DownloadFileGroupProgressChanged
  nameWithType: ApplicationDeployment.DownloadFileGroupProgressChanged
  fullName: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupProgressChanged
- uid: System.Deployment.Application.ApplicationDeployment.IsFileGroupDownloaded(System.String)
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: IsFileGroupDownloaded(String)
  nameWithType: ApplicationDeployment.IsFileGroupDownloaded(String)
  fullName: System.Deployment.Application.ApplicationDeployment.IsFileGroupDownloaded(String)
- uid: System.Deployment.Application.ApplicationDeployment.IsFirstRun
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: IsFirstRun
  nameWithType: ApplicationDeployment.IsFirstRun
  fullName: System.Deployment.Application.ApplicationDeployment.IsFirstRun
- uid: System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: IsNetworkDeployed
  nameWithType: ApplicationDeployment.IsNetworkDeployed
  fullName: System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed
- uid: System.Deployment.Application.ApplicationDeployment.TimeOfLastUpdateCheck
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: TimeOfLastUpdateCheck
  nameWithType: ApplicationDeployment.TimeOfLastUpdateCheck
  fullName: System.Deployment.Application.ApplicationDeployment.TimeOfLastUpdateCheck
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Deployment.Application.ApplicationDeployment.Update
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: Update()
  nameWithType: ApplicationDeployment.Update()
  fullName: System.Deployment.Application.ApplicationDeployment.Update()
- uid: System.Deployment.Application.ApplicationDeployment.UpdateAsync
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: UpdateAsync()
  nameWithType: ApplicationDeployment.UpdateAsync()
  fullName: System.Deployment.Application.ApplicationDeployment.UpdateAsync()
- uid: System.Deployment.Application.ApplicationDeployment.UpdateAsyncCancel
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: UpdateAsyncCancel()
  nameWithType: ApplicationDeployment.UpdateAsyncCancel()
  fullName: System.Deployment.Application.ApplicationDeployment.UpdateAsyncCancel()
- uid: System.Deployment.Application.ApplicationDeployment.UpdateCompleted
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: UpdateCompleted
  nameWithType: ApplicationDeployment.UpdateCompleted
  fullName: System.Deployment.Application.ApplicationDeployment.UpdateCompleted
- uid: System.ComponentModel.AsyncCompletedEventHandler
  parent: System.ComponentModel
  isExternal: true
  name: AsyncCompletedEventHandler
  nameWithType: AsyncCompletedEventHandler
  fullName: System.ComponentModel.AsyncCompletedEventHandler
- uid: System.Deployment.Application.ApplicationDeployment.UpdatedApplicationFullName
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: UpdatedApplicationFullName
  nameWithType: ApplicationDeployment.UpdatedApplicationFullName
  fullName: System.Deployment.Application.ApplicationDeployment.UpdatedApplicationFullName
- uid: System.Deployment.Application.ApplicationDeployment.UpdatedVersion
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: UpdatedVersion
  nameWithType: ApplicationDeployment.UpdatedVersion
  fullName: System.Deployment.Application.ApplicationDeployment.UpdatedVersion
- uid: System.Deployment.Application.ApplicationDeployment.UpdateLocation
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: UpdateLocation
  nameWithType: ApplicationDeployment.UpdateLocation
  fullName: System.Deployment.Application.ApplicationDeployment.UpdateLocation
- uid: System.Deployment.Application.ApplicationDeployment.UpdateProgressChanged
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: UpdateProgressChanged
  nameWithType: ApplicationDeployment.UpdateProgressChanged
  fullName: System.Deployment.Application.ApplicationDeployment.UpdateProgressChanged
- uid: System.Deployment.Application.ApplicationDeployment.ActivationUri*
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: ActivationUri
  nameWithType: ApplicationDeployment.ActivationUri
- uid: System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate*
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: CheckForDetailedUpdate
  nameWithType: ApplicationDeployment.CheckForDetailedUpdate
- uid: System.Deployment.Application.ApplicationDeployment.CheckForUpdate*
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: CheckForUpdate
  nameWithType: ApplicationDeployment.CheckForUpdate
- uid: System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync*
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: CheckForUpdateAsync
  nameWithType: ApplicationDeployment.CheckForUpdateAsync
- uid: System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsyncCancel*
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: CheckForUpdateAsyncCancel
  nameWithType: ApplicationDeployment.CheckForUpdateAsyncCancel
- uid: System.Deployment.Application.ApplicationDeployment.CurrentDeployment*
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: CurrentDeployment
  nameWithType: ApplicationDeployment.CurrentDeployment
- uid: System.Deployment.Application.ApplicationDeployment.CurrentVersion*
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: CurrentVersion
  nameWithType: ApplicationDeployment.CurrentVersion
- uid: System.Deployment.Application.ApplicationDeployment.DataDirectory*
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: DataDirectory
  nameWithType: ApplicationDeployment.DataDirectory
- uid: System.Deployment.Application.ApplicationDeployment.DownloadFileGroup*
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: DownloadFileGroup
  nameWithType: ApplicationDeployment.DownloadFileGroup
- uid: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync*
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: DownloadFileGroupAsync
  nameWithType: ApplicationDeployment.DownloadFileGroupAsync
- uid: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsyncCancel*
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: DownloadFileGroupAsyncCancel
  nameWithType: ApplicationDeployment.DownloadFileGroupAsyncCancel
- uid: System.Deployment.Application.ApplicationDeployment.IsFileGroupDownloaded*
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: IsFileGroupDownloaded
  nameWithType: ApplicationDeployment.IsFileGroupDownloaded
- uid: System.Deployment.Application.ApplicationDeployment.IsFirstRun*
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: IsFirstRun
  nameWithType: ApplicationDeployment.IsFirstRun
- uid: System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed*
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: IsNetworkDeployed
  nameWithType: ApplicationDeployment.IsNetworkDeployed
- uid: System.Deployment.Application.ApplicationDeployment.TimeOfLastUpdateCheck*
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: TimeOfLastUpdateCheck
  nameWithType: ApplicationDeployment.TimeOfLastUpdateCheck
- uid: System.Deployment.Application.ApplicationDeployment.Update*
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: Update
  nameWithType: ApplicationDeployment.Update
- uid: System.Deployment.Application.ApplicationDeployment.UpdateAsync*
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: UpdateAsync
  nameWithType: ApplicationDeployment.UpdateAsync
- uid: System.Deployment.Application.ApplicationDeployment.UpdateAsyncCancel*
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: UpdateAsyncCancel
  nameWithType: ApplicationDeployment.UpdateAsyncCancel
- uid: System.Deployment.Application.ApplicationDeployment.UpdatedApplicationFullName*
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: UpdatedApplicationFullName
  nameWithType: ApplicationDeployment.UpdatedApplicationFullName
- uid: System.Deployment.Application.ApplicationDeployment.UpdatedVersion*
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: UpdatedVersion
  nameWithType: ApplicationDeployment.UpdatedVersion
- uid: System.Deployment.Application.ApplicationDeployment.UpdateLocation*
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: UpdateLocation
  nameWithType: ApplicationDeployment.UpdateLocation
