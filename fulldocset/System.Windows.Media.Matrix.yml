### YamlMime:ManagedReference
items:
- uid: System.Windows.Media.Matrix
  id: Matrix
  children:
  - System.Windows.Media.Matrix.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)
  - System.Windows.Media.Matrix.Append(System.Windows.Media.Matrix)
  - System.Windows.Media.Matrix.Determinant
  - System.Windows.Media.Matrix.Equals(System.Object)
  - System.Windows.Media.Matrix.Equals(System.Windows.Media.Matrix)
  - System.Windows.Media.Matrix.Equals(System.Windows.Media.Matrix,System.Windows.Media.Matrix)
  - System.Windows.Media.Matrix.GetHashCode
  - System.Windows.Media.Matrix.HasInverse
  - System.Windows.Media.Matrix.Identity
  - System.Windows.Media.Matrix.Invert
  - System.Windows.Media.Matrix.IsIdentity
  - System.Windows.Media.Matrix.M11
  - System.Windows.Media.Matrix.M12
  - System.Windows.Media.Matrix.M21
  - System.Windows.Media.Matrix.M22
  - System.Windows.Media.Matrix.Multiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)
  - System.Windows.Media.Matrix.OffsetX
  - System.Windows.Media.Matrix.OffsetY
  - System.Windows.Media.Matrix.op_Equality(System.Windows.Media.Matrix,System.Windows.Media.Matrix)
  - System.Windows.Media.Matrix.op_Inequality(System.Windows.Media.Matrix,System.Windows.Media.Matrix)
  - System.Windows.Media.Matrix.op_Multiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)
  - System.Windows.Media.Matrix.Parse(System.String)
  - System.Windows.Media.Matrix.Prepend(System.Windows.Media.Matrix)
  - System.Windows.Media.Matrix.Rotate(System.Double)
  - System.Windows.Media.Matrix.RotateAt(System.Double,System.Double,System.Double)
  - System.Windows.Media.Matrix.RotateAtPrepend(System.Double,System.Double,System.Double)
  - System.Windows.Media.Matrix.RotatePrepend(System.Double)
  - System.Windows.Media.Matrix.Scale(System.Double,System.Double)
  - System.Windows.Media.Matrix.ScaleAt(System.Double,System.Double,System.Double,System.Double)
  - System.Windows.Media.Matrix.ScaleAtPrepend(System.Double,System.Double,System.Double,System.Double)
  - System.Windows.Media.Matrix.ScalePrepend(System.Double,System.Double)
  - System.Windows.Media.Matrix.SetIdentity
  - System.Windows.Media.Matrix.Skew(System.Double,System.Double)
  - System.Windows.Media.Matrix.SkewPrepend(System.Double,System.Double)
  - System.Windows.Media.Matrix.System#IFormattable#ToString(System.String,System.IFormatProvider)
  - System.Windows.Media.Matrix.ToString
  - System.Windows.Media.Matrix.ToString(System.IFormatProvider)
  - System.Windows.Media.Matrix.Transform(System.Windows.Point)
  - System.Windows.Media.Matrix.Transform(System.Windows.Point[])
  - System.Windows.Media.Matrix.Transform(System.Windows.Vector)
  - System.Windows.Media.Matrix.Transform(System.Windows.Vector[])
  - System.Windows.Media.Matrix.Translate(System.Double,System.Double)
  - System.Windows.Media.Matrix.TranslatePrepend(System.Double,System.Double)
  langs:
  - csharp
  name: Matrix
  nameWithType: Matrix
  fullName: System.Windows.Media.Matrix
  type: Struct
  summary: "변환에 사용 되는 3 x 3 3x3 유사 변형 매트릭스를 나타냅니다. [!INCLUDE[TLA#tla_2d](~/add/includes/tlasharptla-2d-md.md)] 공간입니다."
  remarks: "3x3 매트릭스 변환에 사용 되는 [!INCLUDE[TLA2#tla_2d](~/add/includes/tla2sharptla-2d-md.md)] x, y 평면입니다. 3x3 유사 변형 매트릭스에 번역 나옵니다 선형 변환, 회전 및 기울이기와 같은 (기울이기) 원하는 만큼를 중 됩니다. 3x3 유사 변형 매트릭스에의 마지막 열은 (0, 0, 1) 이므로 열 처음 두 개의 멤버만 지정할 수 있습니다.  참고 벡터 열 벡터가 아니라 행으로 표현 됩니다.       A [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] 행렬 행 중심 순서를 사용 하 여 저장 되 고 구조는 다음과 같습니다: | | |   |-|-|-|   | <xref:System.Windows.Media.Matrix.M11%2A>| <xref:System.Windows.Media.Matrix.M12%2A>|0|   | <xref:System.Windows.Media.Matrix.M21%2A>| <xref:System.Windows.Media.Matrix.M22%2A>|0|   | <xref:System.Windows.Media.Matrix.OffsetX%2A>| <xref:System.Windows.Media.Matrix.OffsetY%2A>|1|       마지막 행의 멤버 <xref:System.Windows.Media.Matrix.OffsetX%2A>및 <xref:System.Windows.Media.Matrix.OffsetY%2A>, 변환 값을 나타냅니다.</xref:System.Windows.Media.Matrix.OffsetY%2A> </xref:System.Windows.Media.Matrix.OffsetX%2A> </xref:System.Windows.Media.Matrix.OffsetY%2A> </xref:System.Windows.Media.Matrix.OffsetX%2A> </xref:System.Windows.Media.Matrix.M22%2A> </xref:System.Windows.Media.Matrix.M21%2A> </xref:System.Windows.Media.Matrix.M12%2A> </xref:System.Windows.Media.Matrix.M11%2A>       메서드 및 속성의 변형 매트릭스는 일반적으로 지정&6; 명의 멤버를 사용 하 여 벡터도 다음과 같이: (<xref:System.Windows.Media.Matrix.M11%2A>, <xref:System.Windows.Media.Matrix.M12%2A>, <xref:System.Windows.Media.Matrix.M21%2A>, <xref:System.Windows.Media.Matrix.M22%2A>, <xref:System.Windows.Media.Matrix.OffsetX%2A>, <xref:System.Windows.Media.Matrix.OffsetY%2A>) 직접 개별 점을 변환할 행렬 구조를 사용할 수 있지만 또는 <xref:System.Windows.Media.MatrixTransform>개체를 변환할 [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] 매트릭스를 직접 조작 하지 않고 개체를 변환할 수 있도록 하는 클래스 집합을 제공: <xref:System.Windows.Media.RotateTransform>, <xref:System.Windows.Media.ScaleTransform>, <xref:System.Windows.Media.SkewTransform>, 및 <xref:System.Windows.Media.TranslateTransform>.</xref:System.Windows.Media.TranslateTransform> </xref:System.Windows.Media.SkewTransform> </xref:System.Windows.Media.ScaleTransform> </xref:System.Windows.Media.RotateTransform> </xref:System.Windows.Media.MatrixTransform> </xref:System.Windows.Media.Matrix.OffsetY%2A> </xref:System.Windows.Media.Matrix.OffsetX%2A> </xref:System.Windows.Media.Matrix.M22%2A> </xref:System.Windows.Media.Matrix.M21%2A> </xref:System.Windows.Media.Matrix.M12%2A> </xref:System.Windows.Media.Matrix.M11%2A>      <a name=&quot;xamlAttributeUsage_Matrix&quot;></a># # XAML 특성 사용 ```   <object property=&quot;m11, m12, m21, m22, offsetX, offsetY&quot;/>   - or -   <object property=&quot;Identity&quot;/>   ``` <a name=&quot;xamlValues_Matrix&quot;> </a> # # XAML 값 *m11* <xref:System.Double?displayProperty=fullName> 첫 번째 행과이 행렬의 첫 번째 열 값입니다.</xref:System.Double?displayProperty=fullName>           자세한 내용은 참조는 <xref:System.Windows.Media.Matrix.M11%2A>속성.</xref:System.Windows.Media.Matrix.M11%2A>       *m12* <xref:System.Double?displayProperty=fullName> 첫 번째 행과 둘째 열에서 값입니다.</xref:System.Double?displayProperty=fullName>     자세한 내용은 참조는 <xref:System.Windows.Media.Matrix.M12%2A>속성.</xref:System.Windows.Media.Matrix.M12%2A>       *m21* <xref:System.Double?displayProperty=fullName> 두 번째 행과 첫째 열 값입니다.</xref:System.Double?displayProperty=fullName>     자세한 내용은 참조는 <xref:System.Windows.Media.Matrix.M21%2A>속성.</xref:System.Windows.Media.Matrix.M21%2A>       *m22* <xref:System.Double?displayProperty=fullName> 두 번째 행과 둘째 열에서 값입니다.</xref:System.Double?displayProperty=fullName>     자세한 내용은 참조는 <xref:System.Windows.Media.Matrix.M22%2A>속성.</xref:System.Windows.Media.Matrix.M22%2A>       *offsetX* <xref:System.Double?displayProperty=fullName> 세 번째 행과 세 번째 열에 값.</xref:System.Double?displayProperty=fullName>     자세한 내용은 참조는 <xref:System.Windows.Media.Matrix.OffsetX%2A>속성.</xref:System.Windows.Media.Matrix.OffsetX%2A>       *offsetY* <xref:System.Double?displayProperty=fullName> 세 번째 행과 둘째 열에 값.</xref:System.Double?displayProperty=fullName>     자세한 내용은 참조는 <xref:System.Windows.Media.Matrix.OffsetY%2A>속성.</xref:System.Windows.Media.Matrix.OffsetY%2A>"
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter(typeof(System.Windows.Media.MatrixConverter))]

      [System.Windows.Markup.ValueSerializer(typeof(System.Windows.Media.Converters.MatrixValueSerializer))]

      public struct Matrix : IFormattable
  inheritance:
  - System.ValueType
  implements:
  - System.IFormattable
  platform:
  - net462
- uid: System.Windows.Media.Matrix.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)
  id: '#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)'
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: Matrix(Double,Double,Double,Double,Double,Double)
  nameWithType: Matrix.Matrix(Double,Double,Double,Double,Double,Double)
  fullName: System.Windows.Media.Matrix.Matrix(Double,Double,Double,Double,Double,Double)
  type: Constructor
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Windows.Media.Matrix&quot;> </xref> 구조입니다."
  syntax:
    content: public Matrix (double m11, double m12, double m21, double m22, double offsetX, double offsetY);
    parameters:
    - id: m11
      type: System.Double
      description: "새 <xref href=&quot;System.Windows.Media.Matrix&quot;> </xref> 구조체의 <xref:System.Windows.Media.Matrix.M11*>계수.</xref:System.Windows.Media.Matrix.M11*>"
    - id: m12
      type: System.Double
      description: "새 <xref href=&quot;System.Windows.Media.Matrix&quot;> </xref> 구조체의 <xref:System.Windows.Media.Matrix.M12*>계수.</xref:System.Windows.Media.Matrix.M12*>"
    - id: m21
      type: System.Double
      description: "새 <xref href=&quot;System.Windows.Media.Matrix&quot;> </xref> 구조체의 <xref:System.Windows.Media.Matrix.M21*>계수.</xref:System.Windows.Media.Matrix.M21*>"
    - id: m22
      type: System.Double
      description: "새 <xref href=&quot;System.Windows.Media.Matrix&quot;> </xref> 구조체의 <xref:System.Windows.Media.Matrix.M22*>계수.</xref:System.Windows.Media.Matrix.M22*>"
    - id: offsetX
      type: System.Double
      description: "새 <xref href=&quot;System.Windows.Media.Matrix&quot;> </xref> 구조체의 <xref:System.Windows.Media.Matrix.OffsetX*>계수.</xref:System.Windows.Media.Matrix.OffsetX*>"
    - id: offsetY
      type: System.Double
      description: "새 <xref href=&quot;System.Windows.Media.Matrix&quot;> </xref> 구조체의 <xref:System.Windows.Media.Matrix.OffsetY*>계수.</xref:System.Windows.Media.Matrix.OffsetY*>"
  overload: System.Windows.Media.Matrix.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.Append(System.Windows.Media.Matrix)
  id: Append(System.Windows.Media.Matrix)
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: Append(Matrix)
  nameWithType: Matrix.Append(Matrix)
  fullName: System.Windows.Media.Matrix.Append(Matrix)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "지정 된 추가 <xref href=&quot;System.Windows.Media.Matrix&quot;> </xref> 구조체를이 <xref href=&quot;System.Windows.Media.Matrix&quot;> </xref> 구조입니다."
  remarks: "이 작업은이 값을 곱한 동일 <xref:System.Windows.Media.Matrix>매개 변수로 구조 `matrix`.</xref:System.Windows.Media.Matrix>  행렬 곱 아니므로 가환 적, 그러나이 작업은 매개 변수를 곱한와 동일 하지 `matrix` 받았습니다 <xref:System.Windows.Media.Matrix>그렇지 즉, (이 * `matrix`)와 같지 않습니다 (`matrix` \\* 이).</xref:System.Windows.Media.Matrix>"
  example:
  - "The following example shows how to append a <xref:System.Windows.Media.Matrix> structure to another <xref:System.Windows.Media.Matrix> structure.  \n  \n [!code-cs[MatrixExamples_snip#MatrixRotateAboutPointExample_csharp](~/add/codesnippet/csharp/MatrixExamples_snip/MatrixExample.cs#matrixrotateaboutpointexample_csharp)]"
  syntax:
    content: public void Append (System.Windows.Media.Matrix matrix);
    parameters:
    - id: matrix
      type: System.Windows.Media.Matrix
      description: "<xref href=&quot;System.Windows.Media.Matrix&quot;> </xref> 이를 추가 하는 구조 <xref href=&quot;System.Windows.Media.Matrix&quot;> </xref> 구조입니다."
  overload: System.Windows.Media.Matrix.Append*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.Determinant
  id: Determinant
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: Determinant
  nameWithType: Matrix.Determinant
  fullName: System.Windows.Media.Matrix.Determinant
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "이 결정 가져옵니다 <xref href=&quot;System.Windows.Media.Matrix&quot;> </xref> 구조입니다."
  remarks: ''
  example:
  - "This example shows how to get the determinant of a <xref:System.Windows.Media.Matrix>.  \n  \n [!code-cs[MatrixExamples_snip#MatrixDeterminantExample_csharp](~/add/codesnippet/csharp/MatrixExamples_snip/MatrixExample.cs#matrixdeterminantexample_csharp)]"
  syntax:
    content: public double Determinant { get; }
    return:
      type: System.Double
      description: "이 결정 <xref href=&quot;System.Windows.Media.Matrix&quot;> </xref>합니다."
  overload: System.Windows.Media.Matrix.Determinant*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: Matrix.Equals(Object)
  fullName: System.Windows.Media.Matrix.Equals(Object)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "확인 여부를 지정 된 <xref:System.Object>는 <xref href=&quot;System.Windows.Media.Matrix&quot;> </xref> 이 동일한 구조 <xref href=&quot;System.Windows.Media.Matrix&quot;> </xref>.</xref:System.Object>"
  remarks: >-
    > [!NOTE]

    >  A <xref:System.Windows.Media.Matrix> stores its values as doubles. Because the value of a <xref:System.Double> can lose precision when arithmetic operations are performed on it, a comparison between two <xref:System.Double> structures that are logically equal might fail.
  example:
  - "The following example shows how to check two <xref:System.Windows.Media.Matrix> structures for equality.  \n  \n [!code-cs[MatrixExamples_snip#MatrixEqualityExample_csharp](~/add/codesnippet/csharp/MatrixExamples_snip/MatrixExample.cs#matrixequalityexample_csharp)]"
  syntax:
    content: public override bool Equals (object o);
    parameters:
    - id: o
      type: System.Object
      description: "<xref:System.Object>비교할.</xref:System.Object>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우 <code> o </code> 는 <xref href=&quot;System.Windows.Media.Matrix&quot;> </xref> 이 동일한 구조 <xref href=&quot;System.Windows.Media.Matrix&quot;> </xref> 그렇지 그렇지 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Media.Matrix.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.Equals(System.Windows.Media.Matrix)
  id: Equals(System.Windows.Media.Matrix)
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: Equals(Matrix)
  nameWithType: Matrix.Equals(Matrix)
  fullName: System.Windows.Media.Matrix.Equals(Matrix)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "확인 여부를 지정 된 <xref href=&quot;System.Windows.Media.Matrix&quot;> </xref> 구조는이 인스턴스와 동일 합니다."
  remarks: >-
    > [!NOTE]

    >  A <xref:System.Windows.Media.Matrix> stores its values as doubles. Because the value of a <xref:System.Double> can lose precision when arithmetic operations are performed on it, a comparison between two <xref:System.Double> structures that are logically equal might fail.
  example:
  - "The following example shows how to check two <xref:System.Windows.Media.Matrix> structures for equality.  \n  \n [!code-cs[MatrixExamples_snip#MatrixEqualityExample_csharp](~/add/codesnippet/csharp/MatrixExamples_snip/MatrixExample.cs#matrixequalityexample_csharp)]"
  syntax:
    content: public bool Equals (System.Windows.Media.Matrix value);
    parameters:
    - id: value
      type: System.Windows.Media.Matrix
      description: "인스턴스 <xref href=&quot;System.Windows.Media.Matrix&quot;> </xref> 이 인스턴스와 비교할 합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>인스턴스가 서로 같으면; 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Media.Matrix.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.Equals(System.Windows.Media.Matrix,System.Windows.Media.Matrix)
  id: Equals(System.Windows.Media.Matrix,System.Windows.Media.Matrix)
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: Equals(Matrix,Matrix)
  nameWithType: Matrix.Equals(Matrix,Matrix)
  fullName: System.Windows.Media.Matrix.Equals(Matrix,Matrix)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "지정 된 두 결정 <xref href=&quot;System.Windows.Media.Matrix&quot;> </xref> 구조가 동일 합니다."
  remarks: >-
    > [!NOTE]

    >  A <xref:System.Windows.Media.Matrix> stores its values as doubles. Because the value of a <xref:System.Double> can lose precision when arithmetic operations are performed on it, a comparison between two <xref:System.Double> structures that are logically equal might fail.
  syntax:
    content: public static bool Equals (System.Windows.Media.Matrix matrix1, System.Windows.Media.Matrix matrix2);
    parameters:
    - id: matrix1
      type: System.Windows.Media.Matrix
      description: "첫 번째 <xref href=&quot;System.Windows.Media.Matrix&quot;> </xref> 비교할 구조체입니다."
    - id: matrix2
      type: System.Windows.Media.Matrix
      description: "두 번째 <xref href=&quot;System.Windows.Media.Matrix&quot;> </xref> 비교할 구조체입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>matrix1</code> and <code>matrix2</code> are identical; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Media.Matrix.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.GetHashCode
  id: GetHashCode
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: Matrix.GetHashCode()
  fullName: System.Windows.Media.Matrix.GetHashCode()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "이 대 한 해시 코드를 반환 합니다. <xref href=&quot;System.Windows.Media.Matrix&quot;> </xref> 구조입니다."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "이 인스턴스에 대 한 해시 코드입니다."
  overload: System.Windows.Media.Matrix.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.HasInverse
  id: HasInverse
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: HasInverse
  nameWithType: Matrix.HasInverse
  fullName: System.Windows.Media.Matrix.HasInverse
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "나타내는 값을 가져옵니다 여부이 <xref href=&quot;System.Windows.Media.Matrix&quot;> </xref> 구조는 반전할 수 있습니다."
  remarks: ''
  example:
  - "The following example checks whether a <xref:System.Windows.Media.Matrix> is invertible. If it is invertible, the <xref:System.Windows.Media.Matrix> is inverted.  \n  \n [!code-cs[MatrixExamples_snip#MatrixInverseExample_csharp](~/add/codesnippet/csharp/MatrixExamples_snip/MatrixExample.cs#matrixinverseexample_csharp)]"
  syntax:
    content: public bool HasInverse { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우는 <xref href=&quot;System.Windows.Media.Matrix&quot;> </xref> 역에, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Media.Matrix.HasInverse*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.Identity
  id: Identity
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: Identity
  nameWithType: Matrix.Identity
  fullName: System.Windows.Media.Matrix.Identity
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "id를 가져옵니다 <xref href=&quot;System.Windows.Media.Matrix&quot;> </xref>합니다."
  remarks: "항등 매트릭스 계수 [1, 1], [2, 2] [3, 3]에 대 한 값이 1 및 값이 나머지 계수에에서는 0입니다. 이 설정에 상관 관계가 <xref:System.Windows.Media.Matrix.M11%2A>및 <xref:System.Windows.Media.Matrix.M22%2A>1 및 <xref:System.Windows.Media.Matrix.M12%2A>, <xref:System.Windows.Media.Matrix.M21%2A>, <xref:System.Windows.Media.Matrix.OffsetX%2A>, 및 <xref:System.Windows.Media.Matrix.OffsetY%2A>0으로.</xref:System.Windows.Media.Matrix.OffsetY%2A> </xref:System.Windows.Media.Matrix.OffsetX%2A> </xref:System.Windows.Media.Matrix.M21%2A> </xref:System.Windows.Media.Matrix.M12%2A> </xref:System.Windows.Media.Matrix.M22%2A> </xref:System.Windows.Media.Matrix.M11%2A> 구현 유사 매트릭스를 하는 [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] 에 사용 하는 <xref:System.Windows.Media.Matrix>, 구조, [3, 1], [3, 2], [3.3] 계수의 0,0,1 값을 각각은 항상.</xref:System.Windows.Media.Matrix>      ||||   |-|-|-|   |&1; |&0; |&0; |   |&0; |&1; |&0; |   |&0; |&0; |&1; |       <xref:System.Windows.Media.Matrix.ToString%2A>메서드 <xref:System.Windows.Media.Matrix>.</xref:System.Windows.Media.Matrix> 계수 대신 &quot;Id&quot; 문자열을 반환</xref:System.Windows.Media.Matrix.ToString%2A> 하는 id 행렬에 대 한"
  example:
  - "The following example shows how to retrieve the Identity matrix.  \n  \n [!code-cs[MatrixExamples_snip#MatrixIdentityExample_csharp](~/add/codesnippet/csharp/MatrixExamples_snip/MatrixExample.cs#matrixidentityexample_csharp)]"
  syntax:
    content: public static System.Windows.Media.Matrix Identity { get; }
    return:
      type: System.Windows.Media.Matrix
      description: "항등 매트릭스입니다."
  overload: System.Windows.Media.Matrix.Identity*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.Invert
  id: Invert
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: Invert()
  nameWithType: Matrix.Invert()
  fullName: System.Windows.Media.Matrix.Invert()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "이 <xref href=&quot;System.Windows.Media.Matrix&quot;> </xref> 구조입니다."
  remarks: ''
  example:
  - "The following example checks if a <xref:System.Windows.Media.Matrix> structure is invertible. If it is invertible, the <xref:System.Windows.Media.Matrix> structure is inverted.  \n  \n [!code-cs[MatrixExamples_snip#MatrixInverseExample_csharp](~/add/codesnippet/csharp/MatrixExamples_snip/MatrixExample.cs#matrixinverseexample_csharp)]"
  syntax:
    content: public void Invert ();
    parameters: []
  overload: System.Windows.Media.Matrix.Invert*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.Windows.Media.Matrix&quot;> </xref> 구조를 반전할 수 없습니다."
  platform:
  - net462
- uid: System.Windows.Media.Matrix.IsIdentity
  id: IsIdentity
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: IsIdentity
  nameWithType: Matrix.IsIdentity
  fullName: System.Windows.Media.Matrix.IsIdentity
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "나타내는 값을 가져옵니다 여부이 <xref href=&quot;System.Windows.Media.Matrix&quot;> </xref> 구조는 항등 매트릭스입니다."
  remarks: "항등 매트릭스 계수 [1, 1], [2, 2] [3, 3]에 대 한 값이 1 및 값이 나머지 계수에에서는 0입니다. 이 설정에 상관 관계가 <xref:System.Windows.Media.Matrix.M11%2A>및 <xref:System.Windows.Media.Matrix.M22%2A>1 및 <xref:System.Windows.Media.Matrix.M12%2A>, <xref:System.Windows.Media.Matrix.M21%2A>, <xref:System.Windows.Media.Matrix.OffsetX%2A>, 및 <xref:System.Windows.Media.Matrix.OffsetY%2A>0으로.</xref:System.Windows.Media.Matrix.OffsetY%2A> </xref:System.Windows.Media.Matrix.OffsetX%2A> </xref:System.Windows.Media.Matrix.M21%2A> </xref:System.Windows.Media.Matrix.M12%2A> </xref:System.Windows.Media.Matrix.M22%2A> </xref:System.Windows.Media.Matrix.M11%2A> 구현 유사 매트릭스를 하는 [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] 에 사용 하는 <xref:System.Windows.Media.Matrix>구조, [3, 1], [3, 2], [3.3] 계수의 0,0,1 값을 각각은 항상.</xref:System.Windows.Media.Matrix>      ||||   |-|-|-|   |&1; |&0; |&0; |   |&0; |&1; |&0; |   |&0; |&0; |&1; |       <xref:System.Windows.Media.Matrix.ToString%2A>메서드 대신 <xref:System.Windows.Media.Matrix>.</xref:System.Windows.Media.Matrix> 계수 &quot;Id&quot;, 문자열을 반환</xref:System.Windows.Media.Matrix.ToString%2A> 항등 매트릭스"
  syntax:
    content: public bool IsIdentity { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우는 <xref href=&quot;System.Windows.Media.Matrix&quot;> </xref> 구조 항등 매트릭스는, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Media.Matrix.IsIdentity*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.M11
  id: M11
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: M11
  nameWithType: Matrix.M11
  fullName: System.Windows.Media.Matrix.M11
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "첫 번째 행과 첫째 열 값을 가져오거나 설정 합니다. <xref href=&quot;System.Windows.Media.Matrix&quot;> </xref> 구조입니다."
  remarks: ''
  example:
  - "The following example shows how to multiply two <xref:System.Windows.Media.Matrix> structures and how to assign values to a <xref:System.Windows.Media.Matrix> when it is declared, and after the structure is declared.  \n  \n [!code-cs[MatrixExamples_snip#MatrixMultiplicationExample_csharp](~/add/codesnippet/csharp/MatrixExamples_snip/MatrixExample.cs#matrixmultiplicationexample_csharp)]"
  syntax:
    content: public double M11 { get; set; }
    return:
      type: System.Double
      description: "첫 번째 행과 첫째 열 값 <xref href=&quot;System.Windows.Media.Matrix&quot;> </xref>합니다. 기본값은 1입니다."
  overload: System.Windows.Media.Matrix.M11*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.M12
  id: M12
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: M12
  nameWithType: Matrix.M12
  fullName: System.Windows.Media.Matrix.M12
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "첫 번째 행과 둘째 열 값을 가져오거나 설정 합니다. <xref href=&quot;System.Windows.Media.Matrix&quot;> </xref> 구조입니다."
  remarks: "다음 표에서 <xref:System.Windows.Media.Matrix>.</xref:System.Windows.Media.Matrix> 의 레이아웃을 보여 줍니다.      ||||   |-|-|-|   | <xref:System.Windows.Media.Matrix.M11%2A>| M12 |&0; |   | <xref:System.Windows.Media.Matrix.M21%2A>| <xref:System.Windows.Media.Matrix.M22%2A>|0|   | <xref:System.Windows.Media.Matrix.OffsetX%2A>| <xref:System.Windows.Media.Matrix.OffsetY%2A>|1|</xref:System.Windows.Media.Matrix.OffsetY%2A></xref:System.Windows.Media.Matrix.OffsetX%2A></xref:System.Windows.Media.Matrix.M22%2A></xref:System.Windows.Media.Matrix.M21%2A></xref:System.Windows.Media.Matrix.M11%2A>"
  example:
  - "The following example shows how to multiply two <xref:System.Windows.Media.Matrix> structures and how to assign values to a <xref:System.Windows.Media.Matrix> when it is declared, and after the structure is declared.  \n  \n [!code-cs[MatrixExamples_snip#MatrixMultiplicationExample_csharp](~/add/codesnippet/csharp/MatrixExamples_snip/MatrixExample.cs#matrixmultiplicationexample_csharp)]"
  syntax:
    content: public double M12 { get; set; }
    return:
      type: System.Double
      description: "첫 번째 행과 둘째 열 값 <xref href=&quot;System.Windows.Media.Matrix&quot;> </xref>합니다. 기본값은 0입니다"
  overload: System.Windows.Media.Matrix.M12*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.M21
  id: M21
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: M21
  nameWithType: Matrix.M21
  fullName: System.Windows.Media.Matrix.M21
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "두 번째 행과 첫째 열 값을 가져오거나 설정 합니다. <xref href=&quot;System.Windows.Media.Matrix&quot;> </xref> 구조입니다."
  remarks: "다음 표에서 <xref:System.Windows.Media.Matrix>.</xref:System.Windows.Media.Matrix> 의 레이아웃을 보여 줍니다.      ||||   |-|-|-|   | <xref:System.Windows.Media.Matrix.M11%2A>| <xref:System.Windows.Media.Matrix.M12%2A>|0|   | M21 | <xref:System.Windows.Media.Matrix.M22%2A>|0|   | <xref:System.Windows.Media.Matrix.OffsetX%2A>| <xref:System.Windows.Media.Matrix.OffsetY%2A>|1|</xref:System.Windows.Media.Matrix.OffsetY%2A></xref:System.Windows.Media.Matrix.OffsetX%2A></xref:System.Windows.Media.Matrix.M22%2A></xref:System.Windows.Media.Matrix.M12%2A></xref:System.Windows.Media.Matrix.M11%2A>"
  example:
  - "The following example shows how to multiply two <xref:System.Windows.Media.Matrix> structures and how to assign values to a <xref:System.Windows.Media.Matrix> when it is declared, and after the structure is declared.  \n  \n [!code-cs[MatrixExamples_snip#MatrixMultiplicationExample_csharp](~/add/codesnippet/csharp/MatrixExamples_snip/MatrixExample.cs#matrixmultiplicationexample_csharp)]"
  syntax:
    content: public double M21 { get; set; }
    return:
      type: System.Double
      description: "두 번째 행과 첫째 열 값 <xref href=&quot;System.Windows.Media.Matrix&quot;> </xref>합니다. 기본값은 0입니다"
  overload: System.Windows.Media.Matrix.M21*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.M22
  id: M22
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: M22
  nameWithType: Matrix.M22
  fullName: System.Windows.Media.Matrix.M22
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "이 두 번째 행과 둘째 열 값을 가져오거나 설정 합니다. <xref href=&quot;System.Windows.Media.Matrix&quot;> </xref> 구조입니다."
  remarks: "다음 표에서의 레이아웃을 보여 줍니다.는 <xref:System.Windows.Media.Matrix>구조.</xref:System.Windows.Media.Matrix>      ||||   |-|-|-|   | <xref:System.Windows.Media.Matrix.M11%2A>| <xref:System.Windows.Media.Matrix.M12%2A>|0|   | <xref:System.Windows.Media.Matrix.M21%2A>| M22 |&0; |   | <xref:System.Windows.Media.Matrix.OffsetX%2A>| <xref:System.Windows.Media.Matrix.OffsetY%2A>|1|</xref:System.Windows.Media.Matrix.OffsetY%2A></xref:System.Windows.Media.Matrix.OffsetX%2A></xref:System.Windows.Media.Matrix.M21%2A></xref:System.Windows.Media.Matrix.M12%2A></xref:System.Windows.Media.Matrix.M11%2A>"
  example:
  - "The following example shows how to multiply two <xref:System.Windows.Media.Matrix> structures and how to assign values to a <xref:System.Windows.Media.Matrix> when it is declared, and after the structure is declared.  \n  \n [!code-cs[MatrixExamples_snip#MatrixMultiplicationExample_csharp](~/add/codesnippet/csharp/MatrixExamples_snip/MatrixExample.cs#matrixmultiplicationexample_csharp)]"
  syntax:
    content: public double M22 { get; set; }
    return:
      type: System.Double
      description: "이 두 번째 행과 둘째 열 값 <xref href=&quot;System.Windows.Media.Matrix&quot;> </xref> 구조입니다. 기본값은 1입니다."
  overload: System.Windows.Media.Matrix.M22*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.Multiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)
  id: Multiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: Multiply(Matrix,Matrix)
  nameWithType: Matrix.Multiply(Matrix,Matrix)
  fullName: System.Windows.Media.Matrix.Multiply(Matrix,Matrix)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "Multiplies는 <xref href=&quot;System.Windows.Media.Matrix&quot;> </xref> 다른 <xref href=&quot;System.Windows.Media.Matrix&quot;> </xref> 구조입니다."
  remarks: "행렬 곱은 가환 적입니다. 곱한 `trans1` 여 `trans2` 곱한 같지는 않습니다 `trans2` 여 `trans1`합니다."
  example:
  - "The following example shows how to multiply two <xref:System.Windows.Media.Matrix> structures.  \n  \n [!code-cs[MatrixExamples_snip#MatrixMultiplicationExample_csharp](~/add/codesnippet/csharp/MatrixExamples_snip/MatrixExample.cs#matrixmultiplicationexample_csharp)]"
  syntax:
    content: public static System.Windows.Media.Matrix Multiply (System.Windows.Media.Matrix trans1, System.Windows.Media.Matrix trans2);
    parameters:
    - id: trans1
      type: System.Windows.Media.Matrix
      description: "첫 번째 <xref href=&quot;System.Windows.Media.Matrix&quot;> </xref> 곱할 구조입니다."
    - id: trans2
      type: System.Windows.Media.Matrix
      description: "두 번째 <xref href=&quot;System.Windows.Media.Matrix&quot;> </xref> 곱할 구조입니다."
    return:
      type: System.Windows.Media.Matrix
      description: "곱한 결과를 <code> trans1 </code> 여 <code> trans2 </code>합니다."
  overload: System.Windows.Media.Matrix.Multiply*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.OffsetX
  id: OffsetX
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: OffsetX
  nameWithType: Matrix.OffsetX
  fullName: System.Windows.Media.Matrix.OffsetX
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "세 번째 행과 첫째 열 값을 가져오거나 설정 합니다. <xref href=&quot;System.Windows.Media.Matrix&quot;> </xref> 구조입니다."
  remarks: "X 축 따라 있는 좌표 공간 변환할 크기를 지정 하기 때문에 따라서 OffsetX 속성 이라고 합니다.       다음 표에서 <xref:System.Windows.Media.Matrix>.</xref:System.Windows.Media.Matrix> 의 레이아웃을 보여 줍니다.      ||||   |-|-|-|   | <xref:System.Windows.Media.Matrix.M11%2A>| <xref:System.Windows.Media.Matrix.M12%2A>|0|   | <xref:System.Windows.Media.Matrix.M21%2A>| <xref:System.Windows.Media.Matrix.M22%2A>|0|   | OffsetX | <xref:System.Windows.Media.Matrix.OffsetY%2A>|1|</xref:System.Windows.Media.Matrix.OffsetY%2A></xref:System.Windows.Media.Matrix.M22%2A></xref:System.Windows.Media.Matrix.M21%2A></xref:System.Windows.Media.Matrix.M12%2A></xref:System.Windows.Media.Matrix.M11%2A>"
  syntax:
    content: public double OffsetX { get; set; }
    return:
      type: System.Double
      description: "세 번째 행과 첫째 열 값 <xref href=&quot;System.Windows.Media.Matrix&quot;> </xref> 구조입니다. 기본값은 0입니다"
  overload: System.Windows.Media.Matrix.OffsetX*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.OffsetY
  id: OffsetY
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: OffsetY
  nameWithType: Matrix.OffsetY
  fullName: System.Windows.Media.Matrix.OffsetY
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "셋째 행과 둘째 열 값을 가져오거나 설정 합니다. <xref href=&quot;System.Windows.Media.Matrix&quot;> </xref> 구조입니다."
  remarks: "Y 축 따라 있는 좌표 공간 변환할 크기를 지정 하기 때문에 따라서 OffsetY 속성 이라고 합니다.       다음 표에서 <xref:System.Windows.Media.Matrix>.</xref:System.Windows.Media.Matrix> 의 레이아웃을 보여 줍니다.      ||||   |-|-|-|   | <xref:System.Windows.Media.Matrix.M11%2A>| <xref:System.Windows.Media.Matrix.M12%2A>|0|   | <xref:System.Windows.Media.Matrix.M21%2A>| <xref:System.Windows.Media.Matrix.M22%2A>|0|   | <xref:System.Windows.Media.Matrix.OffsetX%2A>| OffsetY |&1; |</xref:System.Windows.Media.Matrix.OffsetX%2A> </xref:System.Windows.Media.Matrix.M22%2A> </xref:System.Windows.Media.Matrix.M21%2A> </xref:System.Windows.Media.Matrix.M12%2A> </xref:System.Windows.Media.Matrix.M11%2A>"
  syntax:
    content: public double OffsetY { get; set; }
    return:
      type: System.Double
      description: "셋째 행과 둘째 열 값 <xref href=&quot;System.Windows.Media.Matrix&quot;> </xref> 구조입니다. 기본값은 0입니다"
  overload: System.Windows.Media.Matrix.OffsetY*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.op_Equality(System.Windows.Media.Matrix,System.Windows.Media.Matrix)
  id: op_Equality(System.Windows.Media.Matrix,System.Windows.Media.Matrix)
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: op_Equality(Matrix,Matrix)
  nameWithType: Matrix.op_Equality(Matrix,Matrix)
  fullName: System.Windows.Media.Matrix.op_Equality(Matrix,Matrix)
  type: Operator
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "지정 된 두 결정 <xref href=&quot;System.Windows.Media.Matrix&quot;> </xref> 구조가 동일 합니다."
  remarks: >-
    > [!NOTE]

    >  A <xref:System.Windows.Media.Matrix> stores its values as doubles. Because the value of a <xref:System.Double> can lose precision when arithmetic operations are performed on it, a comparison between two <xref:System.Double> structures that are logically equal might fail.
  example:
  - "The following example shows how to check two <xref:System.Windows.Media.Matrix> structures for equality.  \n  \n [!code-cs[MatrixExamples_snip#MatrixEqualityExample_csharp](~/add/codesnippet/csharp/MatrixExamples_snip/MatrixExample.cs#matrixequalityexample_csharp)]"
  syntax:
    content: public static bool op_Equality (System.Windows.Media.Matrix matrix1, System.Windows.Media.Matrix matrix2);
    parameters:
    - id: matrix1
      type: System.Windows.Media.Matrix
      description: "첫 번째 <xref href=&quot;System.Windows.Media.Matrix&quot;> </xref> 비교할 구조체입니다."
    - id: matrix2
      type: System.Windows.Media.Matrix
      description: "두 번째 <xref href=&quot;System.Windows.Media.Matrix&quot;> </xref> 비교할 구조체입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>matrix1</code> and <code>matrix2</code> are identical; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Media.Matrix.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.op_Inequality(System.Windows.Media.Matrix,System.Windows.Media.Matrix)
  id: op_Inequality(System.Windows.Media.Matrix,System.Windows.Media.Matrix)
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: op_Inequality(Matrix,Matrix)
  nameWithType: Matrix.op_Inequality(Matrix,Matrix)
  fullName: System.Windows.Media.Matrix.op_Inequality(Matrix,Matrix)
  type: Operator
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "지정 된 두 결정 <xref href=&quot;System.Windows.Media.Matrix&quot;> </xref> 구조가 동일 합니다."
  remarks: >-
    > [!NOTE]

    >  A <xref:System.Windows.Media.Matrix> stores its values as doubles. Because the value of a <xref:System.Double> can lose precision when arithmetic operations are performed on it, a comparison between two <xref:System.Double> structures that are logically equal might fail.
  example:
  - "The following example shows how to check two <xref:System.Windows.Media.Matrix> structures for equality.  \n  \n [!code-cs[MatrixExamples_snip#MatrixEqualityExample_csharp](~/add/codesnippet/csharp/MatrixExamples_snip/MatrixExample.cs#matrixequalityexample_csharp)]"
  syntax:
    content: public static bool op_Inequality (System.Windows.Media.Matrix matrix1, System.Windows.Media.Matrix matrix2);
    parameters:
    - id: matrix1
      type: System.Windows.Media.Matrix
      description: "첫 번째 <xref href=&quot;System.Windows.Media.Matrix&quot;> </xref> 비교할 구조체입니다."
    - id: matrix2
      type: System.Windows.Media.Matrix
      description: "두 번째 <xref href=&quot;System.Windows.Media.Matrix&quot;> </xref> 비교할 구조체입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>matrix1</code> and <code>matrix2</code> are not identical; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Media.Matrix.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.op_Multiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)
  id: op_Multiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: op_Multiply(Matrix,Matrix)
  nameWithType: Matrix.op_Multiply(Matrix,Matrix)
  fullName: System.Windows.Media.Matrix.op_Multiply(Matrix,Matrix)
  type: Operator
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "Multiplies는 <xref href=&quot;System.Windows.Media.Matrix&quot;> </xref> 다른 <xref href=&quot;System.Windows.Media.Matrix&quot;> </xref> 구조입니다."
  remarks: "행렬 곱은 가환 적입니다. 곱한 `trans1` 여 `trans2` 곱한 같지는 않습니다 `trans2` 여 `trans1`합니다."
  example:
  - "The following example shows how to multiply two <xref:System.Windows.Media.Matrix> structures.  \n  \n [!code-cs[MatrixExamples_snip#MatrixMultiplicationExample_csharp](~/add/codesnippet/csharp/MatrixExamples_snip/MatrixExample.cs#matrixmultiplicationexample_csharp)]"
  syntax:
    content: public static System.Windows.Media.Matrix op_Multiply (System.Windows.Media.Matrix trans1, System.Windows.Media.Matrix trans2);
    parameters:
    - id: trans1
      type: System.Windows.Media.Matrix
      description: "첫 번째 <xref href=&quot;System.Windows.Media.Matrix&quot;> </xref> 곱할 구조입니다."
    - id: trans2
      type: System.Windows.Media.Matrix
      description: "두 번째 <xref href=&quot;System.Windows.Media.Matrix&quot;> </xref> 곱할 구조입니다."
    return:
      type: System.Windows.Media.Matrix
      description: "곱한 결과를 <code> trans1 </code> 여 <code> trans2 </code>합니다."
  overload: System.Windows.Media.Matrix.op_Multiply*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.Parse(System.String)
  id: Parse(System.String)
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: Parse(String)
  nameWithType: Matrix.Parse(String)
  fullName: System.Windows.Media.Matrix.Parse(String)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "변환 된 <xref:System.String>표현을 행렬의 해당 <xref href=&quot;System.Windows.Media.Matrix&quot;> </xref> 구조.</xref:System.String>"
  remarks: ''
  example:
  - "The following example shows how to convert a string representation of a matrix into a <xref:System.Windows.Media.Matrix> structure.  \n  \n [!code-cs[MatrixExamples_snip#MatrixParseExample_csharp](~/add/codesnippet/csharp/MatrixExamples_snip/MatrixExample.cs#matrixparseexample_csharp)]"
  syntax:
    content: public static System.Windows.Media.Matrix Parse (string source);
    parameters:
    - id: source
      type: System.String
      description: "<xref:System.String>매트릭스의.</xref:System.String>"
    return:
      type: System.Windows.Media.Matrix
      description: "에 해당 하는 <xref href=&quot;System.Windows.Media.Matrix&quot;> </xref> 구조입니다."
  overload: System.Windows.Media.Matrix.Parse*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.Prepend(System.Windows.Media.Matrix)
  id: Prepend(System.Windows.Media.Matrix)
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: Prepend(Matrix)
  nameWithType: Matrix.Prepend(Matrix)
  fullName: System.Windows.Media.Matrix.Prepend(Matrix)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "지정 된 앞에 추가 <xref href=&quot;System.Windows.Media.Matrix&quot;> </xref> 구조체를이 <xref href=&quot;System.Windows.Media.Matrix&quot;> </xref> 구조입니다."
  remarks: "This operation is the same as multiplying the parameter `matrix` by this <xref:System.Windows.Media.Matrix> structure. Matrix multiplication is not commutative, however, so this operation is not the same as multiplying this <xref:System.Windows.Media.Matrix> structure by the parameter `matrix`; that is, `matrix` * this is not the same as this \\* `matrix`.  \n  \n In a composite transformation, the order of individual transformations is important. For example, if you first rotate, then scale, then translate, you get a different result than if you first translate, then rotate, then scale. One reason order is significant is that transformations like rotation and scaling are done with respect to the origin of the coordinate system. Scaling an object that is centered at the origin produces a different result than scaling an object that has been moved away from the origin. Similarly, rotating an object that is centered at the origin produces a different result than rotating an object that has been moved away from the origin."
  example:
  - "The following example shows how to prepend a <xref:System.Windows.Media.Matrix> onto another <xref:System.Windows.Media.Matrix>.  \n  \n [!code-cs[MatrixExamples_snip#MatrixPrependExample_csharp](~/add/codesnippet/csharp/MatrixExamples_snip/MatrixExample.cs#matrixprependexample_csharp)]"
  syntax:
    content: public void Prepend (System.Windows.Media.Matrix matrix);
    parameters:
    - id: matrix
      type: System.Windows.Media.Matrix
      description: "<xref href=&quot;System.Windows.Media.Matrix&quot;> </xref> 이 앞에 추가할 구조 <xref href=&quot;System.Windows.Media.Matrix&quot;> </xref> 구조입니다."
  overload: System.Windows.Media.Matrix.Prepend*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.Rotate(System.Double)
  id: Rotate(System.Double)
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: Rotate(Double)
  nameWithType: Matrix.Rotate(Double)
  fullName: System.Windows.Media.Matrix.Rotate(Double)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "이 원본에 대 한 지정된 된 각도의 회전을 적용 <xref href=&quot;System.Windows.Media.Matrix&quot;> </xref> 구조입니다."
  remarks: ''
  example:
  - "The following example shows how to rotate a <xref:System.Windows.Media.Matrix>.  \n  \n [!code-cs[MatrixExamples_snip#MatrixRotateExample_csharp](~/add/codesnippet/csharp/MatrixExamples_snip/MatrixExample.cs#matrixrotateexample_csharp)]"
  syntax:
    content: public void Rotate (double angle);
    parameters:
    - id: angle
      type: System.Double
      description: "회전 각도입니다."
  overload: System.Windows.Media.Matrix.Rotate*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.RotateAt(System.Double,System.Double,System.Double)
  id: RotateAt(System.Double,System.Double,System.Double)
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: RotateAt(Double,Double,Double)
  nameWithType: Matrix.RotateAt(Double,Double,Double)
  fullName: System.Windows.Media.Matrix.RotateAt(Double,Double,Double)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "지정된 된 지점에 대 한이 행렬을 회전합니다."
  remarks: ''
  example:
  - "The following example shows how to rotate a <xref:System.Windows.Media.Matrix> about a specified point.  \n  \n [!code-cs[MatrixExamples_snip#MatrixRotateAboutPointExample_csharp](~/add/codesnippet/csharp/MatrixExamples_snip/MatrixExample.cs#matrixrotateaboutpointexample_csharp)]"
  syntax:
    content: public void RotateAt (double angle, double centerX, double centerY);
    parameters:
    - id: angle
      type: System.Double
      description: "이 행렬의 회전 하는 기준인도 각도입니다."
    - id: centerX
      type: System.Double
      description: "이 행렬의 회전 지점의 x 좌표입니다."
    - id: centerY
      type: System.Double
      description: "이 행렬의 회전 지점의 y 좌표입니다."
  overload: System.Windows.Media.Matrix.RotateAt*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.RotateAtPrepend(System.Double,System.Double,System.Double)
  id: RotateAtPrepend(System.Double,System.Double,System.Double)
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: RotateAtPrepend(Double,Double,Double)
  nameWithType: Matrix.RotateAtPrepend(Double,Double,Double)
  fullName: System.Windows.Media.Matrix.RotateAtPrepend(Double,Double,Double)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "이 지정된 된 지점에 지정된 된 각도의 회전 앞에 추가 <xref href=&quot;System.Windows.Media.Matrix&quot;> </xref> 구조입니다."
  remarks: "복합 변환에서 개별 변환의 순서가 중요 합니다. 예를 들어 하면 먼저 회전, 크기 조정을 차례로 변환, 메시지가 다른 결과 보다 먼저 변환 하는 경우 다음 회전 다음 크기를 조정 합니다. 순서는 중요 한 가지 이유는 회전 및 배율 조정 같은 변환 좌표계의 원점을 기준으로 수행 됩니다. 원본에서 멀리 이동 된 개체를 확장 합니다. 결과 서로 다르게 생성 중심이 원점 하는 개체 크기를 조정 합니다. 마찬가지로, 중심이 원점 있는 개체를 회전 원본에서 멀리 이동 된 개체를 회전 다른 결과 생성 합니다."
  example:
  - "The following example shows how to prepend a rotation to a <xref:System.Windows.Media.Matrix>.  \n  \n [!code-cs[MatrixExamples_snip#MatrixPrependRotateExamples_csharp](~/add/codesnippet/csharp/MatrixExamples_snip/MatrixExample.cs#matrixprependrotateexamples_csharp)]"
  syntax:
    content: public void RotateAtPrepend (double angle, double centerX, double centerY);
    parameters:
    - id: angle
      type: System.Double
      description: "회전 각도도 합니다."
    - id: centerX
      type: System.Double
      description: "회전 중심의 x 좌표입니다."
    - id: centerY
      type: System.Double
      description: "회전 중심의 y 좌표입니다."
  overload: System.Windows.Media.Matrix.RotateAtPrepend*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.RotatePrepend(System.Double)
  id: RotatePrepend(System.Double)
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: RotatePrepend(Double)
  nameWithType: Matrix.RotatePrepend(Double)
  fullName: System.Windows.Media.Matrix.RotatePrepend(Double)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "이 지정된 된 각도의 회전 앞에 추가 <xref href=&quot;System.Windows.Media.Matrix&quot;> </xref> 구조입니다."
  remarks: "복합 변환에서 개별 변환의 순서가 중요 합니다. 예를 들어 하면 먼저 회전, 크기 조정을 차례로 변환, 메시지가 다른 결과 보다 먼저 변환 하는 경우 다음 회전 다음 크기를 조정 합니다. 순서는 중요 한 가지 이유는 회전 및 배율 조정 같은 변환 좌표계의 원점을 기준으로 수행 됩니다. 원본에서 멀리 이동 된 개체를 확장 합니다. 결과 서로 다르게 생성 중심이 원점 하는 개체 크기를 조정 합니다. 마찬가지로, 중심이 원점 있는 개체를 회전 원본에서 멀리 이동 된 개체를 회전 다른 결과 생성 합니다."
  example:
  - "The following example shows how to prepend a rotation to a <xref:System.Windows.Media.Matrix>.  \n  \n [!code-cs[MatrixExamples_snip#MatrixPrependRotateExamples_csharp](~/add/codesnippet/csharp/MatrixExamples_snip/MatrixExample.cs#matrixprependrotateexamples_csharp)]"
  syntax:
    content: public void RotatePrepend (double angle);
    parameters:
    - id: angle
      type: System.Double
      description: "앞에 추가할 회전의 각도입니다."
  overload: System.Windows.Media.Matrix.RotatePrepend*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.Scale(System.Double,System.Double)
  id: Scale(System.Double,System.Double)
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: Scale(Double,Double)
  nameWithType: Matrix.Scale(Double,Double)
  fullName: System.Windows.Media.Matrix.Scale(Double,Double)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "지정 된 크기 조정 벡터를이 추가 <xref href=&quot;System.Windows.Media.Matrix&quot;> </xref> 구조입니다."
  remarks: ''
  example:
  - "The following example shows how to scale a <xref:System.Windows.Media.Matrix> structure.  \n  \n [!code-cs[MatrixExamples_snip#MatrixScaleExamples_csharp](~/add/codesnippet/csharp/MatrixExamples_snip/MatrixExample.cs#matrixscaleexamples_csharp)]"
  syntax:
    content: public void Scale (double scaleX, double scaleY);
    parameters:
    - id: scaleX
      type: System.Double
      description: "이 크기를 조정 하는 기준인 값 <xref href=&quot;System.Windows.Media.Matrix&quot;> </xref> x 축을 따라 합니다."
    - id: scaleY
      type: System.Double
      description: "이 크기를 조정 하는 기준인 값 <xref href=&quot;System.Windows.Media.Matrix&quot;> </xref> y 축을 따라 합니다."
  overload: System.Windows.Media.Matrix.Scale*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.ScaleAt(System.Double,System.Double,System.Double,System.Double)
  id: ScaleAt(System.Double,System.Double,System.Double,System.Double)
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: ScaleAt(Double,Double,Double,Double)
  nameWithType: Matrix.ScaleAt(Double,Double,Double,Double)
  fullName: System.Windows.Media.Matrix.ScaleAt(Double,Double,Double,Double)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "이 크기를 조정 <xref href=&quot;System.Windows.Media.Matrix&quot;> </xref> 지정된 된 지점에 대 한 지정 된 크기입니다."
  remarks: ''
  example:
  - "The following example shows how to scale a <xref:System.Windows.Media.Matrix> structure.  \n  \n [!code-cs[MatrixExamples_snip#MatrixScaleExamples_csharp](~/add/codesnippet/csharp/MatrixExamples_snip/MatrixExample.cs#matrixscaleexamples_csharp)]"
  syntax:
    content: public void ScaleAt (double scaleX, double scaleY, double centerX, double centerY);
    parameters:
    - id: scaleX
      type: System.Double
      description: "이 크기를 조정 하는 기준인 양 <xref href=&quot;System.Windows.Media.Matrix&quot;> </xref> x 축을 따라 합니다."
    - id: scaleY
      type: System.Double
      description: "이 크기를 조정 하는 기준인 양 <xref href=&quot;System.Windows.Media.Matrix&quot;> </xref> y 축을 따라 합니다."
    - id: centerX
      type: System.Double
      description: "크기 조정 작업의 중심점의 x 좌표입니다."
    - id: centerY
      type: System.Double
      description: "크기 조정 작업의 중심점의 y 좌표입니다."
  overload: System.Windows.Media.Matrix.ScaleAt*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.ScaleAtPrepend(System.Double,System.Double,System.Double,System.Double)
  id: ScaleAtPrepend(System.Double,System.Double,System.Double,System.Double)
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: ScaleAtPrepend(Double,Double,Double,Double)
  nameWithType: Matrix.ScaleAtPrepend(Double,Double,Double,Double)
  fullName: System.Windows.Media.Matrix.ScaleAtPrepend(Double,Double,Double,Double)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "이 지정된 된 지점에 대 한 지정 된 크기 조정 앞에 추가 <xref href=&quot;System.Windows.Media.Matrix&quot;> </xref>합니다."
  remarks: "복합 변환에서 개별 변환의 순서가 중요 합니다. 예를 들어 하면 먼저 회전, 크기 조정을 차례로 변환, 메시지가 다른 결과 보다 먼저 변환 하는 경우 다음 회전 다음 크기를 조정 합니다. 순서는 중요 한 가지 이유는 회전 및 배율 조정 같은 변환 좌표계의 원점을 기준으로 수행 됩니다. 원본에서 멀리 이동 된 개체를 확장 합니다. 결과 서로 다르게 생성 중심이 원점 하는 개체 크기를 조정 합니다. 마찬가지로, 중심이 원점 있는 개체를 회전 원본에서 멀리 이동 된 개체를 회전 다른 결과 생성 합니다."
  example:
  - "The following example shows how to prepend a scale to a <xref:System.Windows.Media.Matrix>.  \n  \n [!code-cs[MatrixExamples_snip#MatrixPrependScaleExamples_csharp](~/add/codesnippet/csharp/MatrixExamples_snip/MatrixExample.cs#matrixprependscaleexamples_csharp)]"
  syntax:
    content: public void ScaleAtPrepend (double scaleX, double scaleY, double centerX, double centerY);
    parameters:
    - id: scaleX
      type: System.Double
      description: "X 축 배율 인수입니다."
    - id: scaleY
      type: System.Double
      description: "Y 축 배율 인수입니다."
    - id: centerX
      type: System.Double
      description: "배율 작업을 수행할 사용할 점의 x 좌표입니다."
    - id: centerY
      type: System.Double
      description: "배율 작업을 수행할 사용할 점의 y 좌표입니다."
  overload: System.Windows.Media.Matrix.ScaleAtPrepend*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.ScalePrepend(System.Double,System.Double)
  id: ScalePrepend(System.Double,System.Double)
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: ScalePrepend(Double,Double)
  nameWithType: Matrix.ScalePrepend(Double,Double)
  fullName: System.Windows.Media.Matrix.ScalePrepend(Double,Double)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "지정 된 크기 조정 벡터를이 앞에 추가 <xref href=&quot;System.Windows.Media.Matrix&quot;> </xref> 구조입니다."
  remarks: "복합 변환에서 개별 변환의 순서가 중요 합니다. 예를 들어 하면 먼저 회전, 크기 조정을 차례로 변환, 메시지가 다른 결과 보다 먼저 변환 하는 경우 다음 회전 다음 크기를 조정 합니다. 순서는 중요 한 가지 이유는 회전 및 배율 조정 같은 변환 좌표계의 원점을 기준으로 수행 됩니다. 원본에서 멀리 이동 된 개체를 확장 합니다. 결과 서로 다르게 생성 중심이 원점 하는 개체 크기를 조정 합니다. 마찬가지로, 중심이 원점 있는 개체를 회전 원본에서 멀리 이동 된 개체를 회전 다른 결과 생성 합니다."
  example:
  - "The following example shows how to prepend a scale to a <xref:System.Windows.Media.Matrix> structure.  \n  \n [!code-cs[MatrixExamples_snip#MatrixPrependScaleExamples_csharp](~/add/codesnippet/csharp/MatrixExamples_snip/MatrixExample.cs#matrixprependscaleexamples_csharp)]"
  syntax:
    content: public void ScalePrepend (double scaleX, double scaleY);
    parameters:
    - id: scaleX
      type: System.Double
      description: "이 크기를 조정 하는 기준인 값 <xref href=&quot;System.Windows.Media.Matrix&quot;> </xref> x 축 따라 구조입니다."
    - id: scaleY
      type: System.Double
      description: "이 크기를 조정 하는 기준인 값 <xref href=&quot;System.Windows.Media.Matrix&quot;> </xref> y 축 따라 구조입니다."
  overload: System.Windows.Media.Matrix.ScalePrepend*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.SetIdentity
  id: SetIdentity
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: SetIdentity()
  nameWithType: Matrix.SetIdentity()
  fullName: System.Windows.Media.Matrix.SetIdentity()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "이 변경 <xref href=&quot;System.Windows.Media.Matrix&quot;> </xref> 를 항등 매트릭스로 구조입니다."
  remarks: "항등 매트릭스 계수 [1, 1], [2, 2] [3, 3]에 대 한 값이 1 및 값이 나머지 계수에에서는 0입니다. 이 설정에 상관 관계가 <xref:System.Windows.Media.Matrix.M11%2A>및 <xref:System.Windows.Media.Matrix.M22%2A>1 및 <xref:System.Windows.Media.Matrix.M12%2A>, <xref:System.Windows.Media.Matrix.M21%2A>, <xref:System.Windows.Media.Matrix.OffsetX%2A>, 및 <xref:System.Windows.Media.Matrix.OffsetY%2A>0으로.</xref:System.Windows.Media.Matrix.OffsetY%2A> </xref:System.Windows.Media.Matrix.OffsetX%2A> </xref:System.Windows.Media.Matrix.M21%2A> </xref:System.Windows.Media.Matrix.M12%2A> </xref:System.Windows.Media.Matrix.M22%2A> </xref:System.Windows.Media.Matrix.M11%2A> 구현 유사 매트릭스를 하는 [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] 에 사용 하는 <xref:System.Windows.Media.Matrix>구조, [3, 1], [3, 2], [3.3] 계수의 0,0,1 값을 각각은 항상.</xref:System.Windows.Media.Matrix>      ||||   |-|-|-|   |&1; |&0; |&0; |   |&0; |&1; |&0; |   |&0; |&0; |&1; |       <xref:System.Windows.Media.Matrix.ToString%2A>메서드 대신 <xref:System.Windows.Media.Matrix>.</xref:System.Windows.Media.Matrix> 계수 &quot;Id&quot;, 문자열을 반환</xref:System.Windows.Media.Matrix.ToString%2A> 항등 매트릭스"
  example:
  - "The following example shows how to turn a <xref:System.Windows.Media.Matrix> structure into an identity matrix.  \n  \n [!code-cs[MatrixExamples_snip#MatrixIdentityExample_csharp](~/add/codesnippet/csharp/MatrixExamples_snip/MatrixExample.cs#matrixidentityexample_csharp)]"
  syntax:
    content: public void SetIdentity ();
    parameters: []
  overload: System.Windows.Media.Matrix.SetIdentity*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.Skew(System.Double,System.Double)
  id: Skew(System.Double,System.Double)
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: Skew(Double,Double)
  nameWithType: Matrix.Skew(Double,Double)
  fullName: System.Windows.Media.Matrix.Skew(Double,Double)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "X 및 y 지정한 각도의 오차가 추가 <xref href=&quot;System.Windows.Media.Matrix&quot;> </xref> 구조입니다."
  remarks: ''
  example:
  - "This example shows how to skew a <xref:System.Windows.Media.Matrix> structure.  \n  \n [!code-cs[MatrixExamples_snip#MatrixSkewExample_csharp](~/add/codesnippet/csharp/MatrixExamples_snip/MatrixExample.cs#matrixskewexample_csharp)]"
  syntax:
    content: public void Skew (double skewX, double skewY);
    parameters:
    - id: skewX
      type: System.Double
      description: "이 기울일 x 축 방향에서 각도 <xref href=&quot;System.Windows.Media.Matrix&quot;> </xref>합니다."
    - id: skewY
      type: System.Double
      description: "이 기울일 y 축 방향에서 각도 <xref href=&quot;System.Windows.Media.Matrix&quot;> </xref>합니다."
  overload: System.Windows.Media.Matrix.Skew*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.SkewPrepend(System.Double,System.Double)
  id: SkewPrepend(System.Double,System.Double)
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: SkewPrepend(Double,Double)
  nameWithType: Matrix.SkewPrepend(Double,Double)
  fullName: System.Windows.Media.Matrix.SkewPrepend(Double,Double)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "X 및 y 지정한 각도의 오차가 앞에 추가 <xref href=&quot;System.Windows.Media.Matrix&quot;> </xref> 구조입니다."
  remarks: "복합 변환에서 개별 변환의 순서가 중요 합니다. 예를 들어 하면 먼저 회전, 크기 조정을 차례로 변환, 메시지가 다른 결과 보다 먼저 변환 하는 경우 다음 회전 다음 크기를 조정 합니다. 순서는 중요 한 가지 이유는 회전 및 배율 조정 같은 변환 좌표계의 원점을 기준으로 수행 됩니다. 원본에서 멀리 이동 된 개체를 확장 합니다. 결과 서로 다르게 생성 중심이 원점 하는 개체 크기를 조정 합니다. 마찬가지로, 중심이 원점 있는 개체를 회전 원본에서 멀리 이동 된 개체를 회전 다른 결과 생성 합니다."
  example:
  - "This example shows how to prepend a skew to a <xref:System.Windows.Media.Matrix> structure.  \n  \n [!code-cs[MatrixExamples_snip#MatrixSkewPrependExample_csharp](~/add/codesnippet/csharp/MatrixExamples_snip/MatrixExample.cs#matrixskewprependexample_csharp)]"
  syntax:
    content: public void SkewPrepend (double skewX, double skewY);
    parameters:
    - id: skewX
      type: System.Double
      description: "이 기울일 x 축 방향에서 각도 <xref href=&quot;System.Windows.Media.Matrix&quot;> </xref>합니다."
    - id: skewY
      type: System.Double
      description: "이 기울일 y 축 방향에서 각도 <xref href=&quot;System.Windows.Media.Matrix&quot;> </xref>합니다."
  overload: System.Windows.Media.Matrix.SkewPrepend*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.System#IFormattable#ToString(System.String,System.IFormatProvider)
  id: System#IFormattable#ToString(System.String,System.IFormatProvider)
  isEii: true
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: System.IFormattable.ToString(String,IFormatProvider)
  nameWithType: Matrix.System.IFormattable.ToString(String,IFormatProvider)
  fullName: System.Windows.Media.Matrix.System.IFormattable.ToString(String,IFormatProvider)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "지정 된 형식을 사용 하 여 현재 인스턴스의 값에 서식을 지정 합니다."
  syntax:
    content: string IFormattable.ToString (string format, IFormatProvider provider);
    parameters:
    - id: format
      type: System.String
      description: "사용할 형식입니다.       -또는-null 참조 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> Visual basic에서)의 형식에 대해 정의 된 기본 형식을 사용 하는 <xref:System.IFormattable>구현.</xref:System.IFormattable>"
    - id: provider
      type: System.IFormatProvider
      description: "값의 서식을 지정 하는 데 사용 되는 공급자입니다.       -또는-null 참조 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> Visual Basic의) 운영 체제의 현재 로캘 설정에서 숫자 형식 정보를 가져올 수 있습니다."
    return:
      type: System.String
      description: "지정된 된 형식에서 현재 인스턴스의 값입니다."
  overload: System.Windows.Media.Matrix.System#IFormattable#ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.ToString
  id: ToString
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: ToString()
  nameWithType: Matrix.ToString()
  fullName: System.Windows.Media.Matrix.ToString()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "만듭니다는 <xref:System.String>이 표현 <xref href=&quot;System.Windows.Media.Matrix&quot;> </xref> 구조.</xref:System.String>"
  remarks: "이 경우 <xref:System.Windows.Media.Matrix>는 <xref:System.Windows.Media.Matrix.Identity%2A>매트릭스, &quot;Identity&quot;가 반환 되는 문자열입니다.</xref:System.Windows.Media.Matrix.Identity%2A> </xref:System.Windows.Media.Matrix>"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "A <xref:System.String> containing the <>*>, <>*>, <>*>, <>*>, <>*>, and <>*> values of this <xref href=&quot;System.Windows.Media.Matrix&quot;></xref>.</xref:System.String>"
  overload: System.Windows.Media.Matrix.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.ToString(System.IFormatProvider)
  id: ToString(System.IFormatProvider)
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: ToString(IFormatProvider)
  nameWithType: Matrix.ToString(IFormatProvider)
  fullName: System.Windows.Media.Matrix.ToString(IFormatProvider)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "만듭니다는 <xref:System.String>이 표현 <xref href=&quot;System.Windows.Media.Matrix&quot;> </xref> culture 별 서식 지정 정보로 구조체.</xref:System.String>"
  remarks: "이 경우 <xref:System.Windows.Media.Matrix>구조 항등 매트릭스 이면 문자열이 &quot;Identity&quot; 반환 됩니다.</xref:System.Windows.Media.Matrix>"
  syntax:
    content: public string ToString (IFormatProvider provider);
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: "문화권별 서식 지정 정보입니다."
    return:
      type: System.String
      description: "A <xref:System.String> containing the <>*>, <>*>, <>*>, <>*>, <>*>, and <>*> values of this <xref href=&quot;System.Windows.Media.Matrix&quot;></xref>.</xref:System.String>"
  overload: System.Windows.Media.Matrix.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.Transform(System.Windows.Point)
  id: Transform(System.Windows.Point)
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: Transform(Point)
  nameWithType: Matrix.Transform(Point)
  fullName: System.Windows.Media.Matrix.Transform(Point)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "지정된 된 점을 변환는 <xref href=&quot;System.Windows.Media.Matrix&quot;> </xref> 결과 반환 합니다."
  remarks: ''
  example:
  - "The follow example shows how to use a <xref:System.Windows.Media.Matrix> to transform points and vectors.  \n  \n [!code-cs[MatrixExamples_snip#MatrixTransformExamples_csharp](~/add/codesnippet/csharp/MatrixExamples_snip/MatrixExample.cs#matrixtransformexamples_csharp)]"
  syntax:
    content: public System.Windows.Point Transform (System.Windows.Point point);
    parameters:
    - id: point
      type: System.Windows.Point
      description: "변환할 점입니다."
    return:
      type: System.Windows.Point
      description: "변형 결과 <code> point </code> 받았습니다 <xref href=&quot;System.Windows.Media.Matrix&quot;> </xref>합니다."
  overload: System.Windows.Media.Matrix.Transform*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.Transform(System.Windows.Point[])
  id: Transform(System.Windows.Point[])
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: Transform(Point[])
  nameWithType: Matrix.Transform(Point[])
  fullName: System.Windows.Media.Matrix.Transform(Point[])
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "이 지정된 된 요소를 변형 <xref href=&quot;System.Windows.Media.Matrix&quot;> </xref>합니다."
  remarks: ''
  example:
  - "The follow example shows how to use a <xref:System.Windows.Media.Matrix> to transform points and vectors.  \n  \n [!code-cs[MatrixExamples_snip#MatrixTransformExamples_csharp](~/add/codesnippet/csharp/MatrixExamples_snip/MatrixExample.cs#matrixtransformexamples_csharp)]"
  syntax:
    content: public void Transform (System.Windows.Point[] points);
    parameters:
    - id: points
      type: System.Windows.Point[]
      description: "변환할 점입니다. 배열에 있는 원래 요소가 변환 된 값으로 대체 됩니다."
  overload: System.Windows.Media.Matrix.Transform*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.Transform(System.Windows.Vector)
  id: Transform(System.Windows.Vector)
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: Transform(Vector)
  nameWithType: Matrix.Transform(Vector)
  fullName: System.Windows.Media.Matrix.Transform(Vector)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "이 지정된 된 벡터를 변환 <xref href=&quot;System.Windows.Media.Matrix&quot;> </xref>합니다."
  remarks: ''
  example:
  - "The follow example shows how to use a <xref:System.Windows.Media.Matrix> to transform points and vectors.  \n  \n [!code-cs[MatrixExamples_snip#MatrixTransformExamples_csharp](~/add/codesnippet/csharp/MatrixExamples_snip/MatrixExample.cs#matrixtransformexamples_csharp)]"
  syntax:
    content: public System.Windows.Vector Transform (System.Windows.Vector vector);
    parameters:
    - id: vector
      type: System.Windows.Vector
      description: "변형할 벡터입니다."
    return:
      type: System.Windows.Vector
      description: "변형 결과 <code> vector </code> 받았습니다 <xref href=&quot;System.Windows.Media.Matrix&quot;> </xref>합니다."
  overload: System.Windows.Media.Matrix.Transform*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.Transform(System.Windows.Vector[])
  id: Transform(System.Windows.Vector[])
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: Transform(Vector[])
  nameWithType: Matrix.Transform(Vector[])
  fullName: System.Windows.Media.Matrix.Transform(Vector[])
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "이 지정 된 벡터를 변형 <xref href=&quot;System.Windows.Media.Matrix&quot;> </xref>합니다."
  remarks: ''
  example:
  - "The follow example shows how to use a <xref:System.Windows.Media.Matrix> to transform points and vectors.  \n  \n [!code-cs[MatrixExamples_snip#MatrixTransformExamples_csharp](~/add/codesnippet/csharp/MatrixExamples_snip/MatrixExample.cs#matrixtransformexamples_csharp)]"
  syntax:
    content: public void Transform (System.Windows.Vector[] vectors);
    parameters:
    - id: vectors
      type: System.Windows.Vector[]
      description: "변환할 벡터입니다. 배열에 있는 원래 벡터의 변환 된 값으로 대체 됩니다."
  overload: System.Windows.Media.Matrix.Transform*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.Translate(System.Double,System.Double)
  id: Translate(System.Double,System.Double)
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: Translate(Double,Double)
  nameWithType: Matrix.Translate(Double,Double)
  fullName: System.Windows.Media.Matrix.Translate(Double,Double)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "이 지정 된 오프셋의 번역 추가 <xref href=&quot;System.Windows.Media.Matrix&quot;> </xref> 구조입니다."
  remarks: ''
  example:
  - "The following example shows how append a translation onto a <xref:System.Windows.Media.Matrix> structure.  \n  \n [!code-cs[MatrixExamples_snip#MatrixTranslateExample_csharp](~/add/codesnippet/csharp/MatrixExamples_snip/MatrixExample.cs#matrixtranslateexample_csharp)]"
  syntax:
    content: public void Translate (double offsetX, double offsetY);
    parameters:
    - id: offsetX
      type: System.Double
      description: "이 오프셋할 크기 <xref href=&quot;System.Windows.Media.Matrix&quot;> </xref> x 축을 따라 합니다."
    - id: offsetY
      type: System.Double
      description: "이 오프셋할 크기 <xref href=&quot;System.Windows.Media.Matrix&quot;> </xref> y 축을 따라 합니다."
  overload: System.Windows.Media.Matrix.Translate*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Matrix.TranslatePrepend(System.Double,System.Double)
  id: TranslatePrepend(System.Double,System.Double)
  parent: System.Windows.Media.Matrix
  langs:
  - csharp
  name: TranslatePrepend(Double,Double)
  nameWithType: Matrix.TranslatePrepend(Double,Double)
  fullName: System.Windows.Media.Matrix.TranslatePrepend(Double,Double)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Media
  summary: "이 지정 된 오프셋의 이동을 <xref href=&quot;System.Windows.Media.Matrix&quot;> </xref> 구조입니다."
  remarks: "복합 변환에서 개별 변환의 순서가 중요 합니다. 예를 들어 하면 먼저 회전, 크기 조정을 차례로 변환, 메시지가 다른 결과 보다 먼저 변환 하는 경우 다음 회전 다음 크기를 조정 합니다. 순서는 중요 한 가지 이유는 회전 및 배율 조정 같은 변환 좌표계의 원점을 기준으로 수행 됩니다. 원본에서 멀리 이동 된 개체를 확장 합니다. 결과 서로 다르게 생성 중심이 원점 하는 개체 크기를 조정 합니다. 마찬가지로, 중심이 원점 있는 개체를 회전 원본에서 멀리 이동 된 개체를 회전 다른 결과 생성 합니다."
  example:
  - "The following example shows how prepend a translation onto a <xref:System.Windows.Media.Matrix> structure.  \n  \n [!code-cs[MatrixExamples_snip#MatrixTranslatePrependExample_csharp](~/add/codesnippet/csharp/MatrixExamples_snip/MatrixExample.cs#matrixtranslateprependexample_csharp)]"
  syntax:
    content: public void TranslatePrepend (double offsetX, double offsetY);
    parameters:
    - id: offsetX
      type: System.Double
      description: "이 오프셋할 크기 <xref href=&quot;System.Windows.Media.Matrix&quot;> </xref> x 축을 따라 합니다."
    - id: offsetY
      type: System.Double
      description: "이 오프셋할 크기 <xref href=&quot;System.Windows.Media.Matrix&quot;> </xref> y 축을 따라 합니다."
  overload: System.Windows.Media.Matrix.TranslatePrepend*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Windows.Media.Matrix.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: Matrix(Double,Double,Double,Double,Double,Double)
  nameWithType: Matrix.Matrix(Double,Double,Double,Double,Double,Double)
  fullName: System.Windows.Media.Matrix.Matrix(Double,Double,Double,Double,Double,Double)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.Media.Matrix.Append(System.Windows.Media.Matrix)
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: Append(Matrix)
  nameWithType: Matrix.Append(Matrix)
  fullName: System.Windows.Media.Matrix.Append(Matrix)
- uid: System.Windows.Media.Matrix
  parent: System.Windows.Media
  isExternal: false
  name: Matrix
  nameWithType: Matrix
  fullName: System.Windows.Media.Matrix
- uid: System.Windows.Media.Matrix.Determinant
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: Determinant
  nameWithType: Matrix.Determinant
  fullName: System.Windows.Media.Matrix.Determinant
- uid: System.Windows.Media.Matrix.Equals(System.Object)
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: Equals(Object)
  nameWithType: Matrix.Equals(Object)
  fullName: System.Windows.Media.Matrix.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Media.Matrix.Equals(System.Windows.Media.Matrix)
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: Equals(Matrix)
  nameWithType: Matrix.Equals(Matrix)
  fullName: System.Windows.Media.Matrix.Equals(Matrix)
- uid: System.Windows.Media.Matrix.Equals(System.Windows.Media.Matrix,System.Windows.Media.Matrix)
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: Equals(Matrix,Matrix)
  nameWithType: Matrix.Equals(Matrix,Matrix)
  fullName: System.Windows.Media.Matrix.Equals(Matrix,Matrix)
- uid: System.Windows.Media.Matrix.GetHashCode
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: GetHashCode()
  nameWithType: Matrix.GetHashCode()
  fullName: System.Windows.Media.Matrix.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Media.Matrix.HasInverse
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: HasInverse
  nameWithType: Matrix.HasInverse
  fullName: System.Windows.Media.Matrix.HasInverse
- uid: System.Windows.Media.Matrix.Identity
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: Identity
  nameWithType: Matrix.Identity
  fullName: System.Windows.Media.Matrix.Identity
- uid: System.Windows.Media.Matrix.Invert
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: Invert()
  nameWithType: Matrix.Invert()
  fullName: System.Windows.Media.Matrix.Invert()
- uid: System.Windows.Media.Matrix.IsIdentity
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: IsIdentity
  nameWithType: Matrix.IsIdentity
  fullName: System.Windows.Media.Matrix.IsIdentity
- uid: System.Windows.Media.Matrix.M11
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: M11
  nameWithType: Matrix.M11
  fullName: System.Windows.Media.Matrix.M11
- uid: System.Windows.Media.Matrix.M12
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: M12
  nameWithType: Matrix.M12
  fullName: System.Windows.Media.Matrix.M12
- uid: System.Windows.Media.Matrix.M21
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: M21
  nameWithType: Matrix.M21
  fullName: System.Windows.Media.Matrix.M21
- uid: System.Windows.Media.Matrix.M22
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: M22
  nameWithType: Matrix.M22
  fullName: System.Windows.Media.Matrix.M22
- uid: System.Windows.Media.Matrix.Multiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: Multiply(Matrix,Matrix)
  nameWithType: Matrix.Multiply(Matrix,Matrix)
  fullName: System.Windows.Media.Matrix.Multiply(Matrix,Matrix)
- uid: System.Windows.Media.Matrix.OffsetX
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: OffsetX
  nameWithType: Matrix.OffsetX
  fullName: System.Windows.Media.Matrix.OffsetX
- uid: System.Windows.Media.Matrix.OffsetY
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: OffsetY
  nameWithType: Matrix.OffsetY
  fullName: System.Windows.Media.Matrix.OffsetY
- uid: System.Windows.Media.Matrix.op_Equality(System.Windows.Media.Matrix,System.Windows.Media.Matrix)
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: op_Equality(Matrix,Matrix)
  nameWithType: Matrix.op_Equality(Matrix,Matrix)
  fullName: System.Windows.Media.Matrix.op_Equality(Matrix,Matrix)
- uid: System.Windows.Media.Matrix.op_Inequality(System.Windows.Media.Matrix,System.Windows.Media.Matrix)
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: op_Inequality(Matrix,Matrix)
  nameWithType: Matrix.op_Inequality(Matrix,Matrix)
  fullName: System.Windows.Media.Matrix.op_Inequality(Matrix,Matrix)
- uid: System.Windows.Media.Matrix.op_Multiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: op_Multiply(Matrix,Matrix)
  nameWithType: Matrix.op_Multiply(Matrix,Matrix)
  fullName: System.Windows.Media.Matrix.op_Multiply(Matrix,Matrix)
- uid: System.Windows.Media.Matrix.Parse(System.String)
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: Parse(String)
  nameWithType: Matrix.Parse(String)
  fullName: System.Windows.Media.Matrix.Parse(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Media.Matrix.Prepend(System.Windows.Media.Matrix)
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: Prepend(Matrix)
  nameWithType: Matrix.Prepend(Matrix)
  fullName: System.Windows.Media.Matrix.Prepend(Matrix)
- uid: System.Windows.Media.Matrix.Rotate(System.Double)
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: Rotate(Double)
  nameWithType: Matrix.Rotate(Double)
  fullName: System.Windows.Media.Matrix.Rotate(Double)
- uid: System.Windows.Media.Matrix.RotateAt(System.Double,System.Double,System.Double)
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: RotateAt(Double,Double,Double)
  nameWithType: Matrix.RotateAt(Double,Double,Double)
  fullName: System.Windows.Media.Matrix.RotateAt(Double,Double,Double)
- uid: System.Windows.Media.Matrix.RotateAtPrepend(System.Double,System.Double,System.Double)
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: RotateAtPrepend(Double,Double,Double)
  nameWithType: Matrix.RotateAtPrepend(Double,Double,Double)
  fullName: System.Windows.Media.Matrix.RotateAtPrepend(Double,Double,Double)
- uid: System.Windows.Media.Matrix.RotatePrepend(System.Double)
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: RotatePrepend(Double)
  nameWithType: Matrix.RotatePrepend(Double)
  fullName: System.Windows.Media.Matrix.RotatePrepend(Double)
- uid: System.Windows.Media.Matrix.Scale(System.Double,System.Double)
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: Scale(Double,Double)
  nameWithType: Matrix.Scale(Double,Double)
  fullName: System.Windows.Media.Matrix.Scale(Double,Double)
- uid: System.Windows.Media.Matrix.ScaleAt(System.Double,System.Double,System.Double,System.Double)
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: ScaleAt(Double,Double,Double,Double)
  nameWithType: Matrix.ScaleAt(Double,Double,Double,Double)
  fullName: System.Windows.Media.Matrix.ScaleAt(Double,Double,Double,Double)
- uid: System.Windows.Media.Matrix.ScaleAtPrepend(System.Double,System.Double,System.Double,System.Double)
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: ScaleAtPrepend(Double,Double,Double,Double)
  nameWithType: Matrix.ScaleAtPrepend(Double,Double,Double,Double)
  fullName: System.Windows.Media.Matrix.ScaleAtPrepend(Double,Double,Double,Double)
- uid: System.Windows.Media.Matrix.ScalePrepend(System.Double,System.Double)
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: ScalePrepend(Double,Double)
  nameWithType: Matrix.ScalePrepend(Double,Double)
  fullName: System.Windows.Media.Matrix.ScalePrepend(Double,Double)
- uid: System.Windows.Media.Matrix.SetIdentity
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: SetIdentity()
  nameWithType: Matrix.SetIdentity()
  fullName: System.Windows.Media.Matrix.SetIdentity()
- uid: System.Windows.Media.Matrix.Skew(System.Double,System.Double)
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: Skew(Double,Double)
  nameWithType: Matrix.Skew(Double,Double)
  fullName: System.Windows.Media.Matrix.Skew(Double,Double)
- uid: System.Windows.Media.Matrix.SkewPrepend(System.Double,System.Double)
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: SkewPrepend(Double,Double)
  nameWithType: Matrix.SkewPrepend(Double,Double)
  fullName: System.Windows.Media.Matrix.SkewPrepend(Double,Double)
- uid: System.Windows.Media.Matrix.System#IFormattable#ToString(System.String,System.IFormatProvider)
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: System.IFormattable.ToString(String,IFormatProvider)
  nameWithType: Matrix.System.IFormattable.ToString(String,IFormatProvider)
  fullName: System.Windows.Media.Matrix.System.IFormattable.ToString(String,IFormatProvider)
- uid: System.IFormatProvider
  parent: System
  isExternal: true
  name: IFormatProvider
  nameWithType: IFormatProvider
  fullName: System.IFormatProvider
- uid: System.Windows.Media.Matrix.ToString
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: ToString()
  nameWithType: Matrix.ToString()
  fullName: System.Windows.Media.Matrix.ToString()
- uid: System.Windows.Media.Matrix.ToString(System.IFormatProvider)
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: ToString(IFormatProvider)
  nameWithType: Matrix.ToString(IFormatProvider)
  fullName: System.Windows.Media.Matrix.ToString(IFormatProvider)
- uid: System.Windows.Media.Matrix.Transform(System.Windows.Point)
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: Transform(Point)
  nameWithType: Matrix.Transform(Point)
  fullName: System.Windows.Media.Matrix.Transform(Point)
- uid: System.Windows.Point
  parent: System.Windows
  isExternal: false
  name: Point
  nameWithType: Point
  fullName: System.Windows.Point
- uid: System.Windows.Media.Matrix.Transform(System.Windows.Point[])
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: Transform(Point[])
  nameWithType: Matrix.Transform(Point[])
  fullName: System.Windows.Media.Matrix.Transform(Point[])
- uid: System.Windows.Point[]
  parent: System.Windows
  isExternal: false
  name: Point
  nameWithType: Point
  fullName: System.Windows.Point[]
  spec.csharp:
  - uid: System.Windows.Point
    name: Point
    nameWithType: Point
    fullName: Point[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Media.Matrix.Transform(System.Windows.Vector)
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: Transform(Vector)
  nameWithType: Matrix.Transform(Vector)
  fullName: System.Windows.Media.Matrix.Transform(Vector)
- uid: System.Windows.Vector
  parent: System.Windows
  isExternal: false
  name: Vector
  nameWithType: Vector
  fullName: System.Windows.Vector
- uid: System.Windows.Media.Matrix.Transform(System.Windows.Vector[])
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: Transform(Vector[])
  nameWithType: Matrix.Transform(Vector[])
  fullName: System.Windows.Media.Matrix.Transform(Vector[])
- uid: System.Windows.Vector[]
  parent: System.Windows
  isExternal: false
  name: Vector
  nameWithType: Vector
  fullName: System.Windows.Vector[]
  spec.csharp:
  - uid: System.Windows.Vector
    name: Vector
    nameWithType: Vector
    fullName: Vector[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Media.Matrix.Translate(System.Double,System.Double)
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: Translate(Double,Double)
  nameWithType: Matrix.Translate(Double,Double)
  fullName: System.Windows.Media.Matrix.Translate(Double,Double)
- uid: System.Windows.Media.Matrix.TranslatePrepend(System.Double,System.Double)
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: TranslatePrepend(Double,Double)
  nameWithType: Matrix.TranslatePrepend(Double,Double)
  fullName: System.Windows.Media.Matrix.TranslatePrepend(Double,Double)
- uid: System.Windows.Media.Matrix.#ctor*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: Matrix
  nameWithType: Matrix.Matrix
- uid: System.Windows.Media.Matrix.Append*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: Append
  nameWithType: Matrix.Append
- uid: System.Windows.Media.Matrix.Determinant*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: Determinant
  nameWithType: Matrix.Determinant
- uid: System.Windows.Media.Matrix.Equals*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: Equals
  nameWithType: Matrix.Equals
- uid: System.Windows.Media.Matrix.GetHashCode*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: GetHashCode
  nameWithType: Matrix.GetHashCode
- uid: System.Windows.Media.Matrix.HasInverse*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: HasInverse
  nameWithType: Matrix.HasInverse
- uid: System.Windows.Media.Matrix.Identity*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: Identity
  nameWithType: Matrix.Identity
- uid: System.Windows.Media.Matrix.Invert*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: Invert
  nameWithType: Matrix.Invert
- uid: System.Windows.Media.Matrix.IsIdentity*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: IsIdentity
  nameWithType: Matrix.IsIdentity
- uid: System.Windows.Media.Matrix.M11*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: M11
  nameWithType: Matrix.M11
- uid: System.Windows.Media.Matrix.M12*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: M12
  nameWithType: Matrix.M12
- uid: System.Windows.Media.Matrix.M21*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: M21
  nameWithType: Matrix.M21
- uid: System.Windows.Media.Matrix.M22*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: M22
  nameWithType: Matrix.M22
- uid: System.Windows.Media.Matrix.Multiply*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: Multiply
  nameWithType: Matrix.Multiply
- uid: System.Windows.Media.Matrix.OffsetX*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: OffsetX
  nameWithType: Matrix.OffsetX
- uid: System.Windows.Media.Matrix.OffsetY*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: OffsetY
  nameWithType: Matrix.OffsetY
- uid: System.Windows.Media.Matrix.op_Equality*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: op_Equality
  nameWithType: Matrix.op_Equality
- uid: System.Windows.Media.Matrix.op_Inequality*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: op_Inequality
  nameWithType: Matrix.op_Inequality
- uid: System.Windows.Media.Matrix.op_Multiply*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: op_Multiply
  nameWithType: Matrix.op_Multiply
- uid: System.Windows.Media.Matrix.Parse*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: Parse
  nameWithType: Matrix.Parse
- uid: System.Windows.Media.Matrix.Prepend*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: Prepend
  nameWithType: Matrix.Prepend
- uid: System.Windows.Media.Matrix.Rotate*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: Rotate
  nameWithType: Matrix.Rotate
- uid: System.Windows.Media.Matrix.RotateAt*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: RotateAt
  nameWithType: Matrix.RotateAt
- uid: System.Windows.Media.Matrix.RotateAtPrepend*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: RotateAtPrepend
  nameWithType: Matrix.RotateAtPrepend
- uid: System.Windows.Media.Matrix.RotatePrepend*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: RotatePrepend
  nameWithType: Matrix.RotatePrepend
- uid: System.Windows.Media.Matrix.Scale*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: Scale
  nameWithType: Matrix.Scale
- uid: System.Windows.Media.Matrix.ScaleAt*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: ScaleAt
  nameWithType: Matrix.ScaleAt
- uid: System.Windows.Media.Matrix.ScaleAtPrepend*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: ScaleAtPrepend
  nameWithType: Matrix.ScaleAtPrepend
- uid: System.Windows.Media.Matrix.ScalePrepend*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: ScalePrepend
  nameWithType: Matrix.ScalePrepend
- uid: System.Windows.Media.Matrix.SetIdentity*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: SetIdentity
  nameWithType: Matrix.SetIdentity
- uid: System.Windows.Media.Matrix.Skew*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: Skew
  nameWithType: Matrix.Skew
- uid: System.Windows.Media.Matrix.SkewPrepend*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: SkewPrepend
  nameWithType: Matrix.SkewPrepend
- uid: System.Windows.Media.Matrix.System#IFormattable#ToString*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: System.IFormattable.ToString
  nameWithType: Matrix.System.IFormattable.ToString
- uid: System.Windows.Media.Matrix.ToString*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: ToString
  nameWithType: Matrix.ToString
- uid: System.Windows.Media.Matrix.Transform*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: Transform
  nameWithType: Matrix.Transform
- uid: System.Windows.Media.Matrix.Translate*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: Translate
  nameWithType: Matrix.Translate
- uid: System.Windows.Media.Matrix.TranslatePrepend*
  parent: System.Windows.Media.Matrix
  isExternal: false
  name: TranslatePrepend
  nameWithType: Matrix.TranslatePrepend
