### YamlMime:ManagedReference
items:
- uid: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract
  id: IRemoteArgumentEnumeratorContract
  children:
  - System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent
  - System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext
  - System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset
  langs:
  - csharp
  name: IRemoteArgumentEnumeratorContract
  nameWithType: IRemoteArgumentEnumeratorContract
  fullName: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract
  type: Interface
  summary: "컬렉션의 요소를 열거 <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> 개체입니다."
  remarks: "열거자는 컬렉션의에서 데이터를 읽는 데 사용할 수 있지만 기본 컬렉션을 수정 하는 사용할 수 없습니다.       처음에 열거자는 컬렉션의 첫 번째 요소 앞에 배치 됩니다. 반환 값이이 위치에서 <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A>정의 되지 않습니다.</xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A> 따라서 <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A> <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A>.</xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A> 를 호출 하기 전에 컬렉션의 첫 번째 요소로 열거자를</xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A> 호출 해야 합니다.       <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A>반환 될 때까지 동일한 개체 <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>호출 됩니다.</xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A></xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A> <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>반환 값이 설정 <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A>를 다음 요소로.</xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A></xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>       경우 <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>전달 컬렉션의 마지막 요소 뒤에 열거자는 컬렉션의 끝에 배치 되 고 <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>반환 `false`.</xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A> </xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A> 열거자가 있는 경우이 위치에 대 한 후속 호출에서 <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>반환할 수도 `false`.</xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A> 마지막으로 호출 하는 경우 <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>반환 `false`의 반환 값 <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A>정의 되지 않습니다.</xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A> </xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>       열거자는 컬렉션이 변경 되지으로 유효한 상태를 유지 합니다. 컬렉션 변경 되 면 추가, 수정 또는 요소를 삭제와 같은 열거자는 무효화 하 고 해당 동작은 정의 되지 않습니다."
  syntax:
    content: 'public interface IRemoteArgumentEnumeratorContract : System.AddIn.Contract.IContract'
  implements:
  - System.AddIn.Contract.IContract
  platform:
  - net462
- uid: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent
  id: GetCurrent
  parent: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract
  langs:
  - csharp
  name: GetCurrent()
  nameWithType: IRemoteArgumentEnumeratorContract.GetCurrent()
  fullName: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent()
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Collections
  summary: "반환 된 <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> 컬렉션에서 열거자의 현재 위치에 있습니다."
  remarks: "다음 조건에서 정의 되지 않은 해 주는 GetCurrent의 반환 값:-열거자를 만든 직후 열거자는 컬렉션의 첫 번째 요소 앞에 배치 됩니다 또는 <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A>호출 됩니다.</xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A> <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>호출 하는 열거자를 해 주는 GetCurrent를 호출 하기 전에 컬렉션의 첫 번째 요소로 이동 되어야 합니다.</xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>      -마지막으로 호출한 <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>반환 `false`, 컬렉션의 끝을 나타내는.</xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>      -열거자는 컬렉션을 추가, 수정 또는 삭제 요소와 같은 변경 작업으로 인해 무효화 됩니다.       해 주는 GetCurrent 반환 될 때까지 동일한 개체 <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>호출 됩니다.</xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A> <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>다음 요소로 해 주는 GetCurrent의 반환 값을 설정합니다.</xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>"
  syntax:
    content: public System.AddIn.Contract.RemoteArgument GetCurrent ();
    parameters: []
    return:
      type: System.AddIn.Contract.RemoteArgument
      description: "<xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> 컬렉션에서 열거자의 현재 위치에 있습니다."
  overload: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext
  id: MoveNext
  parent: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract
  langs:
  - csharp
  name: MoveNext()
  nameWithType: IRemoteArgumentEnumeratorContract.MoveNext()
  fullName: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext()
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Collections
  summary: "열거자는 컬렉션의 다음 요소로 이동 합니다."
  remarks: "열거자를 만든 후 또는 이후에 <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A>메서드가 호출 되 면 열거자는 컬렉션의 첫 번째 요소 앞에 배치 됩니다.</xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A> MoveNext 메서드를 처음 호출할 열거자를 컬렉션의 첫 번째 요소로 이동합니다.       MoveNext 컬렉션의 끝을 통과 열거자는 컬렉션의 마지막 요소 뒤에 배치 되 고 MoveNext 반환 `false`합니다. 이 위치에 열거자는 복구 불가능, 이후에 MoveNext 호출 또한 반환 `false` 될 때까지 <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A>호출 됩니다.</xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A>       열거자는 컬렉션이 변경 되지으로 유효한 상태를 유지 합니다. 예: 추가, 수정 또는 요소를 삭제, 열거자가 복구할 수 없게 무효화 및 MoveNext 또는 <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A> <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> throw</xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A> 을 다음에 호출할 컬렉션 변경 될 경우"
  syntax:
    content: public bool MoveNext ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>열거자를 다음 요소로 이동 성공 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 열거자가 컬렉션의 끝을 통과 하는 경우."
  overload: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "컬렉션은 열거자를 만든 후 수정 되었습니다."
  platform:
  - net462
- uid: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset
  id: Reset
  parent: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract
  langs:
  - csharp
  name: Reset()
  nameWithType: IRemoteArgumentEnumeratorContract.Reset()
  fullName: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset()
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Collections
  summary: "컬렉션의 첫 번째 요소 앞의 초기 위치에 열거자를 설정 합니다."
  remarks: "다시 설정의 값을 호출한 후 <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A>정의 되지 않습니다.</xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A> 호출 된 <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>열거자는 컬렉션의 첫 번째 요소로 이동 하는 메서드.</xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>       열거자는 컬렉션이 변경 되지으로 유효한 상태를 유지 합니다. 컬렉션 변경 되 면 추가, 수정 또는 요소를 삭제와 같은 열거자는 무효화 하 고 <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>재설정 <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> throw 또는</xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A> 을 다음에 호출"
  syntax:
    content: public void Reset ();
    parameters: []
  overload: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "컬렉션은 열거자를 만든 후 수정 되었습니다."
  platform:
  - net462
references:
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent
  parent: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract
  isExternal: false
  name: GetCurrent()
  nameWithType: IRemoteArgumentEnumeratorContract.GetCurrent()
  fullName: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent()
- uid: System.AddIn.Contract.RemoteArgument
  parent: System.AddIn.Contract
  isExternal: false
  name: RemoteArgument
  nameWithType: RemoteArgument
  fullName: System.AddIn.Contract.RemoteArgument
- uid: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext
  parent: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract
  isExternal: false
  name: MoveNext()
  nameWithType: IRemoteArgumentEnumeratorContract.MoveNext()
  fullName: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset
  parent: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract
  isExternal: false
  name: Reset()
  nameWithType: IRemoteArgumentEnumeratorContract.Reset()
  fullName: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset()
- uid: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent*
  parent: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract
  isExternal: false
  name: GetCurrent
  nameWithType: IRemoteArgumentEnumeratorContract.GetCurrent
- uid: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext*
  parent: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract
  isExternal: false
  name: MoveNext
  nameWithType: IRemoteArgumentEnumeratorContract.MoveNext
- uid: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset*
  parent: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract
  isExternal: false
  name: Reset
  nameWithType: IRemoteArgumentEnumeratorContract.Reset
