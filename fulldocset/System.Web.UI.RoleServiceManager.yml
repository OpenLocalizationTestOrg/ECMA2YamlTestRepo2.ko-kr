### YamlMime:ManagedReference
items:
- uid: System.Web.UI.RoleServiceManager
  id: RoleServiceManager
  children:
  - System.Web.UI.RoleServiceManager.#ctor
  - System.Web.UI.RoleServiceManager.LoadRoles
  - System.Web.UI.RoleServiceManager.Path
  langs:
  - csharp
  name: RoleServiceManager
  nameWithType: RoleServiceManager
  fullName: System.Web.UI.RoleServiceManager
  type: Class
  summary: "역할 서비스의 사용자 지정 구현의 위치를 구성 합니다."
  remarks: "RoleServiceManager 클래스에 해당 하는 <xref:System.Web.UI.ScriptManager.RoleService%2A>의 속성은 <xref:System.Web.UI.ScriptManager>또는 <xref:System.Web.UI.ScriptManagerProxy>컨트롤.</xref:System.Web.UI.ScriptManagerProxy> </xref:System.Web.UI.ScriptManager> </xref:System.Web.UI.ScriptManager.RoleService%2A>       웹 서비스 역할 비동기 웹 서비스 호출을 사용 하 여 현재 인증 된 사용자에 대 한 역할 정보를 검색 하 여 AJAX 사용 응용 프로그램에서 사용 됩니다. 역할 서비스는 기본 제공 하는 웹 서비스를 사용 하는 대신 웹 서비스의 대체 구현의 경로 제공 하려면 RoleServiceManager를 사용할 수 있습니다.       응용 프로그램에서 역할 서비스를 사용 하려면 구성 파일에서 사용 하도록 설정 하 고 페이지에서 선언 해야 합니다. 웹 서비스는 기본 제공 역할을 사용 하는 경우 사용 하도록 설정 해야 하지만 역할 페이지에서 서비스 관리자를 명시적으로 선언할 필요가 없습니다.       사용자 지정 역할 서비스를 만들려면 두 메서드가 있는 웹 서비스를 구현 해야 합니다: `GetRolesForCurrentUser` 및 `IsCurrentUserInRole`합니다. 이 메서드는 기본 제공 역할 웹 서비스의 해당 하는 메서드 서명이 되어 있어야 합니다.       다음 예제에서는 사용자 지정 역할 웹 서비스 클래스에서에서 구현 해야 하는 기본 클래스 구조를 보여 줍니다.       [!code-cs[XpsCreate #XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent) ] 사용자 지정 역할 웹 서비스를 사용 하 여 추가할 수 있습니다 서비스 선언적으로 태그에서 배치는 `RoleService` 요소 안에 <xref:System.Web.UI.ScriptManager>다음 예제와 같이 제어 합니다.</xref:System.Web.UI.ScriptManager>      ```   <asp:ScriptManager ID=&quot;SM1&quot; runat=&quot;server&quot;>     <RoleService Path=&quot;MyRoleService.asmx&quot; LoadRoles=&quot;true&quot; />   </asp:ScriptManager>   ```또한 프로그래밍 방식으로 설정할 수 있습니다는 <xref:System.Web.UI.RoleServiceManager.Path%2A>웹 서비스는 사용자 지정 역할을 사용 하는 속성.</xref:System.Web.UI.RoleServiceManager.Path%2A>"
  syntax:
    content: >-
      [System.ComponentModel.DefaultProperty("Path")]

      [System.ComponentModel.TypeConverter(typeof(System.Web.UI.EmptyStringExpandableObjectConverter))]

      public class RoleServiceManager
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.RoleServiceManager.#ctor
  id: '#ctor'
  parent: System.Web.UI.RoleServiceManager
  langs:
  - csharp
  name: RoleServiceManager()
  nameWithType: RoleServiceManager.RoleServiceManager()
  fullName: System.Web.UI.RoleServiceManager.RoleServiceManager()
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.UI.RoleServiceManager&quot;> </xref> 클래스입니다."
  syntax:
    content: public RoleServiceManager ();
    parameters: []
  overload: System.Web.UI.RoleServiceManager.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.RoleServiceManager.LoadRoles
  id: LoadRoles
  parent: System.Web.UI.RoleServiceManager
  langs:
  - csharp
  name: LoadRoles
  nameWithType: RoleServiceManager.LoadRoles
  fullName: System.Web.UI.RoleServiceManager.LoadRoles
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "현재 로그인 한 사용자의 역할 목록을 검색 해야 하는지 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "LoadRoles 속성이로 설정 된 경우 `true`, 역할 목록에서 검색 되는 <xref:System.Web.UI.RoleServiceManager>클래스를 사용 하 여는 <xref:System.Web.Security.Roles.GetRolesForUser%2A?displayProperty=fullName>메서드.</xref:System.Web.Security.Roles.GetRolesForUser%2A?displayProperty=fullName> </xref:System.Web.UI.RoleServiceManager> 목록은 페이지 태그에 다음 serialize 됩니다.      > [!NOTE] > 때 LoadRoles가 `true`, 현재 인증 된 사용자가 속한 모든 역할은 브라우저에 전송 됩니다. 사용자 역할 정보를 잠재적으로 볼 수를이 보안 문제를 수 있습니다.       LoadRoles 속성에 지정할 수 있습니다는 <xref:System.Web.UI.ScriptManager>제어 나 관련 <xref:System.Web.UI.ScriptManagerProxy>컨트롤.</xref:System.Web.UI.ScriptManagerProxy> </xref:System.Web.UI.ScriptManager> LoadRoles로 설정 되어 있으면 `true` 프록시 인스턴스에 대 한 역할의 목록을 검색 이며 페이지에 추가 합니다. LoadRoles 이면 `false`, 역할 페이지 태그에 추가 되지 않습니다. 이 경우 브라우저에서 메모리에 역할 정보를 저장할 메서드를 사용할 수 있습니다."
  syntax:
    content: public bool LoadRoles { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>역할의 목록을; 검색 해야 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.RoleServiceManager.LoadRoles*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.RoleServiceManager.Path
  id: Path
  parent: System.Web.UI.RoleServiceManager
  langs:
  - csharp
  name: Path
  nameWithType: RoleServiceManager.Path
  fullName: System.Web.UI.RoleServiceManager.Path
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "역할 서비스의 경로 가져오거나 설정 합니다."
  remarks: "반환 값은 <xref:System.String?displayProperty=fullName>.</xref:System.String?displayProperty=fullName> Path 속성을 설정 하지 ASP.NET 웹 서비스는 다음과 같은 내부 기본 경로에 해당 하는 기본 제공 인증을 사용 하는 경우: ~ / RolesService.svc 합니다. 빈 문자열에 대 한 경로 설정 하는 경우 또는 같은 동작이 발생 `null`합니다.       에 경로 지정할 수 있습니다는 <xref:System.Web.UI.ScriptManager>제어 나 관련 <xref:System.Web.UI.ScriptManagerProxy>컨트롤.</xref:System.Web.UI.ScriptManagerProxy> </xref:System.Web.UI.ScriptManager> 경로에 설정 된 경우는 <xref:System.Web.UI.ScriptManagerProxy>수준으로 다음 조건에 해당:-경로 컨트롤 계층 구조에 여러 프록시 개체가 있는 경우 각 프록시 인스턴스에 대해 설정할 필요가 없습니다.</xref:System.Web.UI.ScriptManagerProxy>      -프록시 개체에 대 한 경로가 명시적으로 설정 하는 경우이 속성에 대해 설정 된 다른 모든 프록시 개체에 대해 동일한 값 이어야 합니다. 컨트롤 계층 구조에서 다른 프록시 개체에 대 한 서로 다른 경로 설정 하는 경우는 <xref:System.ArgumentException>예외가 throw 됩니다.</xref:System.ArgumentException>"
  syntax:
    content: public string Path { get; set; }
    return:
      type: System.String
      description: "사용자 지정 역할 웹 서비스의 경로입니다."
  overload: System.Web.UI.RoleServiceManager.Path*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "둘 이상의 고유 경로 컨트롤 계층 구조에 설정 되었습니다."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Web.UI.RoleServiceManager.#ctor
  parent: System.Web.UI.RoleServiceManager
  isExternal: false
  name: RoleServiceManager()
  nameWithType: RoleServiceManager.RoleServiceManager()
  fullName: System.Web.UI.RoleServiceManager.RoleServiceManager()
- uid: System.Web.UI.RoleServiceManager.LoadRoles
  parent: System.Web.UI.RoleServiceManager
  isExternal: false
  name: LoadRoles
  nameWithType: RoleServiceManager.LoadRoles
  fullName: System.Web.UI.RoleServiceManager.LoadRoles
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.RoleServiceManager.Path
  parent: System.Web.UI.RoleServiceManager
  isExternal: false
  name: Path
  nameWithType: RoleServiceManager.Path
  fullName: System.Web.UI.RoleServiceManager.Path
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.RoleServiceManager.#ctor*
  parent: System.Web.UI.RoleServiceManager
  isExternal: false
  name: RoleServiceManager
  nameWithType: RoleServiceManager.RoleServiceManager
- uid: System.Web.UI.RoleServiceManager.LoadRoles*
  parent: System.Web.UI.RoleServiceManager
  isExternal: false
  name: LoadRoles
  nameWithType: RoleServiceManager.LoadRoles
- uid: System.Web.UI.RoleServiceManager.Path*
  parent: System.Web.UI.RoleServiceManager
  isExternal: false
  name: Path
  nameWithType: RoleServiceManager.Path
