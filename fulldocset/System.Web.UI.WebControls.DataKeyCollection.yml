### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.DataKeyCollection
  id: DataKeyCollection
  children:
  - System.Web.UI.WebControls.DataKeyCollection.#ctor(System.Collections.ArrayList)
  - System.Web.UI.WebControls.DataKeyCollection.CopyTo(System.Array,System.Int32)
  - System.Web.UI.WebControls.DataKeyCollection.Count
  - System.Web.UI.WebControls.DataKeyCollection.GetEnumerator
  - System.Web.UI.WebControls.DataKeyCollection.IsReadOnly
  - System.Web.UI.WebControls.DataKeyCollection.IsSynchronized
  - System.Web.UI.WebControls.DataKeyCollection.Item(System.Int32)
  - System.Web.UI.WebControls.DataKeyCollection.SyncRoot
  langs:
  - csharp
  name: DataKeyCollection
  nameWithType: DataKeyCollection
  fullName: System.Web.UI.WebControls.DataKeyCollection
  type: Class
  summary: "데이터 원본에서 각 레코드의 키 필드를 포함 하는 컬렉션을 나타냅니다. 이 클래스는 상속 될 수 없습니다."
  remarks: "DataKeyCollection 클래스를 사용 하는 데이터 원본에는 키 필드의 컬렉션을 나타냅니다. 데이터 원본의 각 레코드의 키 필드는이 컬렉션에 저장 됩니다. 이 옵션을 사용 하면 키 필드 목록 컨트롤을 컨트롤에 표시 하지 않고 데이터를 저장할 수 있습니다. 이 컬렉션에서 지정 된 필드의 값으로 자동 채워집니다는 <xref:System.Web.UI.WebControls.BaseDataList.DataKeyField%2A?displayProperty=fullName>속성.</xref:System.Web.UI.WebControls.BaseDataList.DataKeyField%2A?displayProperty=fullName> 이 컬렉션을 수동으로 추가 하거나 컬렉션에서 항목을 제거할 수 없습니다.       키 필드는 일반적으로 사용 되는 처리기에는 이벤트에 대 한와 같은 `ItemCommand` 또는 `DeleteCommand`, 데이터 원본에서 특정 레코드를 수정 하기 위한 업데이트 쿼리 문자열의 일부로 합니다. 키 필드 업데이트 쿼리 문자열을 수정 하려면 적절 한 레코드를 식별 하는 데 도움이 됩니다.       사용 하 여는 <xref:System.Web.UI.WebControls.DataKeyCollection.Count%2A>속성 컬렉션의 항목 수를 결정 합니다.</xref:System.Web.UI.WebControls.DataKeyCollection.Count%2A> 키 필드는 DataKeyCollection에서를 프로그래밍 방식으로 검색 하려면 다음 방법 중 하나를 사용:-배열 표기법을 사용 하 여 컬렉션에서 단일 키 필드를 가져오려면는 인덱서를 사용 합니다.      -사용는 <xref:System.Web.UI.WebControls.DataKeyCollection.CopyTo%2A>컬렉션의 내용을 복사 하는 메서드는 <xref:System.Array?displayProperty=fullName>컬렉션에서 항목을 가져올 사용할 수 있는 개체입니다.</xref:System.Array?displayProperty=fullName> </xref:System.Web.UI.WebControls.DataKeyCollection.CopyTo%2A>      -사용는 <xref:System.Web.UI.WebControls.DataKeyCollection.GetEnumerator%2A>만드는 메서드를 한 <xref:System.Collections.IEnumerator?displayProperty=fullName>구현 된 개체 컬렉션에서 항목을 가져올 사용할 수 있는.</xref:System.Collections.IEnumerator?displayProperty=fullName> </xref:System.Web.UI.WebControls.DataKeyCollection.GetEnumerator%2A>"
  example:
  - >-
    [!code-cs[BaseDataListDataKeys#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_330_1.aspx)]
     [!code-vb[BaseDataListDataKeys#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_330_1.aspx)]
  syntax:
    content: 'public sealed class DataKeyCollection : System.Collections.ICollection'
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataKeyCollection.#ctor(System.Collections.ArrayList)
  id: '#ctor(System.Collections.ArrayList)'
  parent: System.Web.UI.WebControls.DataKeyCollection
  langs:
  - csharp
  name: DataKeyCollection(ArrayList)
  nameWithType: DataKeyCollection.DataKeyCollection(ArrayList)
  fullName: System.Web.UI.WebControls.DataKeyCollection.DataKeyCollection(ArrayList)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.UI.WebControls.DataKeyCollection&quot;> </xref> 클래스입니다."
  remarks: "이 생성자를 사용 하 여 만들고 <xref:System.Web.UI.WebControls.DataKeyCollection>클래스</xref:System.Web.UI.WebControls.DataKeyCollection> 의 새 인스턴스를 초기화 합니다."
  syntax:
    content: public DataKeyCollection (System.Collections.ArrayList keys);
    parameters:
    - id: keys
      type: System.Collections.ArrayList
      description: "A <xref href=&quot;System.Collections.ArrayList&quot;> </xref> 데이터 원본에서 키 필드를 포함 하는 합니다."
  overload: System.Web.UI.WebControls.DataKeyCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataKeyCollection.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Web.UI.WebControls.DataKeyCollection
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: DataKeyCollection.CopyTo(Array,Int32)
  fullName: System.Web.UI.WebControls.DataKeyCollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "모든 항목을 복사는 <xref href=&quot;System.Web.UI.WebControls.DataKeyCollection&quot;> </xref> 지정 된 &lt;xref:System.Array?displayProperty=fullName&gt; 의 지정된 된 인덱스에서 시작 하는 개체는 &lt;xref:System.Array?displayProperty=fullName&gt; 개체입니다."
  remarks: "내용을 복사 하려면이 메서드를 사용 하 여는 <xref:System.Web.UI.WebControls.DataKeyCollection>여 지정 된 <xref:System.Array?displayProperty=fullName>지정된 된 인덱스에서 시작 하는 개체입니다.</xref:System.Array?displayProperty=fullName> </xref:System.Web.UI.WebControls.DataKeyCollection>      > [!NOTE] >는 `array` 매개 변수는&0;부터 시작 해야 합니다. <xref:System.Array?displayProperty=fullName>개체입니다.</xref:System.Array?displayProperty=fullName>"
  syntax:
    content: public void CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "0부터 시작 &lt;xref:System.Array?displayProperty=fullName&gt; 개체에서 복사한 항목을 수신 하는 <xref href=&quot;System.Web.UI.WebControls.DataKeyCollection&quot;> </xref>합니다."
    - id: index
      type: System.Int32
      description: "지정 된 첫 번째 위치 &lt;xref:System.Array?displayProperty=fullName&gt; 복사한 내용의 받을 개체입니다."
  overload: System.Web.UI.WebControls.DataKeyCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataKeyCollection.Count
  id: Count
  parent: System.Web.UI.WebControls.DataKeyCollection
  langs:
  - csharp
  name: Count
  nameWithType: DataKeyCollection.Count
  fullName: System.Web.UI.WebControls.DataKeyCollection.Count
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "컬렉션의 항목 수를 가져옵니다."
  remarks: "Count 속성을 사용 하 여 컬렉션의 항목 수를 결정 합니다. 이 속성은 일반적으로 상한을 결정 하는 컬렉션을 반복 하는 경우 사용 됩니다."
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "컬렉션에 있는 항목의 수입니다."
  overload: System.Web.UI.WebControls.DataKeyCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataKeyCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Web.UI.WebControls.DataKeyCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: DataKeyCollection.GetEnumerator()
  fullName: System.Web.UI.WebControls.DataKeyCollection.GetEnumerator()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "만듭니다는 &lt;xref:System.Collections.IEnumerator?displayProperty=fullName&gt; 구현 개체의 모든 키 필드를 포함 하는 <xref href=&quot;System.Web.UI.WebControls.DataKeyCollection&quot;> </xref>합니다."
  remarks: "이 메서드를 사용 하 여 <xref:System.Collections.IEnumerator?displayProperty=fullName>구현 <xref:System.Web.UI.WebControls.DataKeyCollection>.</xref:System.Web.UI.WebControls.DataKeyCollection> 각 항목을 통해 반복 되는 개체</xref:System.Collections.IEnumerator?displayProperty=fullName> 를 만들려면       사용 하 여는 <xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName>컬렉션에서 항목을 현재 가져올 속성을 가리키는.</xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName>       사용 하 여는 <xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=fullName>컬렉션의 다음 항목으로 이동 하는 메서드.</xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=fullName>       사용 하 여는 <xref:System.Collections.IEnumerator.Reset%2A?displayProperty=fullName>의 초기 위치에 열거자를 이동 하는 메서드.</xref:System.Collections.IEnumerator.Reset%2A?displayProperty=fullName>      > [!NOTE] > 만든 후는 <xref:System.Collections.IEnumerator?displayProperty=fullName>구현 개체를 만들거나 사용 하 여는 <xref:System.Collections.IEnumerator.Reset%2A?displayProperty=fullName>열거자는 컬렉션의 첫 번째 항목을 이동 하는 메서드를 호출 해야 합니다는 <xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=fullName>메서드.</xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=fullName> </xref:System.Collections.IEnumerator.Reset%2A?displayProperty=fullName> </xref:System.Collections.IEnumerator?displayProperty=fullName> 그렇지 않은 경우으로 표시 되는 항목의 <xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName>속성이 정의 되지 않습니다.</xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName>"
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "A &lt;xref:System.Collections.IEnumerator?displayProperty=fullName&gt; 구현 개체의 모든 키 필드를 포함 하는 <xref href=&quot;System.Web.UI.WebControls.DataKeyCollection&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.DataKeyCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataKeyCollection.IsReadOnly
  id: IsReadOnly
  parent: System.Web.UI.WebControls.DataKeyCollection
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: DataKeyCollection.IsReadOnly
  fullName: System.Web.UI.WebControls.DataKeyCollection.IsReadOnly
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "나타내는 값을 가져옵니다 있는지 여부를 항목에 <xref href=&quot;System.Web.UI.WebControls.DataKeyCollection&quot;> </xref> 수정할 수 있습니다."
  remarks: "이 속성은 항상 반환 `false` 임을 나타내는 <xref:System.Web.UI.WebControls.DataKeyCollection>모든 경우에서에 쓸 수 있습니다.</xref:System.Web.UI.WebControls.DataKeyCollection>"
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>모든 경우에 대 한"
  overload: System.Web.UI.WebControls.DataKeyCollection.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataKeyCollection.IsSynchronized
  id: IsSynchronized
  parent: System.Web.UI.WebControls.DataKeyCollection
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: DataKeyCollection.IsSynchronized
  fullName: System.Web.UI.WebControls.DataKeyCollection.IsSynchronized
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "나타내는 값을 가져옵니다 여부는 <xref href=&quot;System.Web.UI.WebControls.DataKeyCollection&quot;> </xref> 동기화 되었는지 (스레드로부터 안전한 지)."
  remarks: "이 속성에서 파생 되는 <xref:System.Collections.ICollection?displayProperty=fullName>인터페이스를 항상 반환 하도록 재정의 `false` 임을 나타내는 <xref:System.Web.UI.WebControls.DataKeyCollection>스레드로부터 안전 하지 않습니다.</xref:System.Web.UI.WebControls.DataKeyCollection> </xref:System.Collections.ICollection?displayProperty=fullName>       IsSynchronized 속성에 대 한 자세한 내용은 참조는 <xref:System.Collections.ICollection.IsSynchronized%2A?displayProperty=fullName>의 속성은 <xref:System.Collections.ICollection?displayProperty=fullName>인터페이스.</xref:System.Collections.ICollection?displayProperty=fullName> </xref:System.Collections.ICollection.IsSynchronized%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>모든 경우에 대 한"
  overload: System.Web.UI.WebControls.DataKeyCollection.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataKeyCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Web.UI.WebControls.DataKeyCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: DataKeyCollection.Item(Int32)
  fullName: System.Web.UI.WebControls.DataKeyCollection.Item(Int32)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "컬렉션에서 지정된 된 인덱스에 키 필드를 가져옵니다."
  remarks: "이 인덱서를 사용 하 여 가져올의 키 필드는 <xref:System.Web.UI.WebControls.DataKeyCollection>배열 표기법을 사용 하 여 지정된 된 인덱스에.</xref:System.Web.UI.WebControls.DataKeyCollection>"
  example:
  - >-
    [!code-cs[BaseDataListDataKeys#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_433_1.aspx)]
     [!code-vb[BaseDataListDataKeys#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_433_1.aspx)]
  syntax:
    content: public object this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "컬렉션에서 검색할 키 필드의&0;부터 시작 하는 인덱스입니다."
    return:
      type: System.Object
      description: "컬렉션에서 지정된 된 인덱스에 키 필드입니다."
  overload: System.Web.UI.WebControls.DataKeyCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataKeyCollection.SyncRoot
  id: SyncRoot
  parent: System.Web.UI.WebControls.DataKeyCollection
  langs:
  - csharp
  name: SyncRoot
  nameWithType: DataKeyCollection.SyncRoot
  fullName: System.Web.UI.WebControls.DataKeyCollection.SyncRoot
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "에 대 한 액세스를 동기화 하는 데 개체를 가져옵니다는 <xref href=&quot;System.Web.UI.WebControls.DataKeyCollection&quot;> </xref>합니다."
  remarks: "이 구현에서 반환 되는 개체는 <xref:System.Web.UI.WebControls.DataKeyCollection>개체 자체입니다.</xref:System.Web.UI.WebControls.DataKeyCollection>       SyncRoot 속성에 대 한 자세한 내용은 참조는 <xref:System.Collections.ICollection.SyncRoot%2A?displayProperty=fullName>의 속성은 <xref:System.Collections.ICollection?displayProperty=fullName>인터페이스.</xref:System.Collections.ICollection?displayProperty=fullName> </xref:System.Collections.ICollection.SyncRoot%2A?displayProperty=fullName>"
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "A &lt;xref:System.Object?displayProperty=fullName&gt; 컬렉션에 대 한 액세스를 동기화에 사용할 수 있는 합니다."
  overload: System.Web.UI.WebControls.DataKeyCollection.SyncRoot*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.UI.WebControls.DataKeyCollection.#ctor(System.Collections.ArrayList)
  parent: System.Web.UI.WebControls.DataKeyCollection
  isExternal: false
  name: DataKeyCollection(ArrayList)
  nameWithType: DataKeyCollection.DataKeyCollection(ArrayList)
  fullName: System.Web.UI.WebControls.DataKeyCollection.DataKeyCollection(ArrayList)
- uid: System.Collections.ArrayList
  parent: System.Collections
  isExternal: false
  name: ArrayList
  nameWithType: ArrayList
  fullName: System.Collections.ArrayList
- uid: System.Web.UI.WebControls.DataKeyCollection.CopyTo(System.Array,System.Int32)
  parent: System.Web.UI.WebControls.DataKeyCollection
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: DataKeyCollection.CopyTo(Array,Int32)
  fullName: System.Web.UI.WebControls.DataKeyCollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.DataKeyCollection.Count
  parent: System.Web.UI.WebControls.DataKeyCollection
  isExternal: false
  name: Count
  nameWithType: DataKeyCollection.Count
  fullName: System.Web.UI.WebControls.DataKeyCollection.Count
- uid: System.Web.UI.WebControls.DataKeyCollection.GetEnumerator
  parent: System.Web.UI.WebControls.DataKeyCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: DataKeyCollection.GetEnumerator()
  fullName: System.Web.UI.WebControls.DataKeyCollection.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Web.UI.WebControls.DataKeyCollection.IsReadOnly
  parent: System.Web.UI.WebControls.DataKeyCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: DataKeyCollection.IsReadOnly
  fullName: System.Web.UI.WebControls.DataKeyCollection.IsReadOnly
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.DataKeyCollection.IsSynchronized
  parent: System.Web.UI.WebControls.DataKeyCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: DataKeyCollection.IsSynchronized
  fullName: System.Web.UI.WebControls.DataKeyCollection.IsSynchronized
- uid: System.Web.UI.WebControls.DataKeyCollection.Item(System.Int32)
  parent: System.Web.UI.WebControls.DataKeyCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: DataKeyCollection.Item(Int32)
  fullName: System.Web.UI.WebControls.DataKeyCollection.Item(Int32)
- uid: System.Web.UI.WebControls.DataKeyCollection.SyncRoot
  parent: System.Web.UI.WebControls.DataKeyCollection
  isExternal: false
  name: SyncRoot
  nameWithType: DataKeyCollection.SyncRoot
  fullName: System.Web.UI.WebControls.DataKeyCollection.SyncRoot
- uid: System.Web.UI.WebControls.DataKeyCollection.#ctor*
  parent: System.Web.UI.WebControls.DataKeyCollection
  isExternal: false
  name: DataKeyCollection
  nameWithType: DataKeyCollection.DataKeyCollection
- uid: System.Web.UI.WebControls.DataKeyCollection.CopyTo*
  parent: System.Web.UI.WebControls.DataKeyCollection
  isExternal: false
  name: CopyTo
  nameWithType: DataKeyCollection.CopyTo
- uid: System.Web.UI.WebControls.DataKeyCollection.Count*
  parent: System.Web.UI.WebControls.DataKeyCollection
  isExternal: false
  name: Count
  nameWithType: DataKeyCollection.Count
- uid: System.Web.UI.WebControls.DataKeyCollection.GetEnumerator*
  parent: System.Web.UI.WebControls.DataKeyCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: DataKeyCollection.GetEnumerator
- uid: System.Web.UI.WebControls.DataKeyCollection.IsReadOnly*
  parent: System.Web.UI.WebControls.DataKeyCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: DataKeyCollection.IsReadOnly
- uid: System.Web.UI.WebControls.DataKeyCollection.IsSynchronized*
  parent: System.Web.UI.WebControls.DataKeyCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: DataKeyCollection.IsSynchronized
- uid: System.Web.UI.WebControls.DataKeyCollection.Item*
  parent: System.Web.UI.WebControls.DataKeyCollection
  isExternal: false
  name: Item
  nameWithType: DataKeyCollection.Item
- uid: System.Web.UI.WebControls.DataKeyCollection.SyncRoot*
  parent: System.Web.UI.WebControls.DataKeyCollection
  isExternal: false
  name: SyncRoot
  nameWithType: DataKeyCollection.SyncRoot
