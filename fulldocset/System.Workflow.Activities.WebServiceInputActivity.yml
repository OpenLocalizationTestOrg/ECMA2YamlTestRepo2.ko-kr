### YamlMime:ManagedReference
items:
- uid: System.Workflow.Activities.WebServiceInputActivity
  id: WebServiceInputActivity
  children:
  - System.Workflow.Activities.WebServiceInputActivity.#ctor
  - System.Workflow.Activities.WebServiceInputActivity.#ctor(System.String)
  - System.Workflow.Activities.WebServiceInputActivity.ActivitySubscribedProperty
  - System.Workflow.Activities.WebServiceInputActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)
  - System.Workflow.Activities.WebServiceInputActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  - System.Workflow.Activities.WebServiceInputActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)
  - System.Workflow.Activities.WebServiceInputActivity.Initialize(System.IServiceProvider)
  - System.Workflow.Activities.WebServiceInputActivity.InputReceived
  - System.Workflow.Activities.WebServiceInputActivity.InputReceivedEvent
  - System.Workflow.Activities.WebServiceInputActivity.InterfaceType
  - System.Workflow.Activities.WebServiceInputActivity.InterfaceTypeProperty
  - System.Workflow.Activities.WebServiceInputActivity.IsActivating
  - System.Workflow.Activities.WebServiceInputActivity.IsActivatingProperty
  - System.Workflow.Activities.WebServiceInputActivity.MethodName
  - System.Workflow.Activities.WebServiceInputActivity.MethodNameProperty
  - System.Workflow.Activities.WebServiceInputActivity.ParameterBindings
  - System.Workflow.Activities.WebServiceInputActivity.ParameterBindingsProperty
  - System.Workflow.Activities.WebServiceInputActivity.Roles
  - System.Workflow.Activities.WebServiceInputActivity.RolesProperty
  - System.Workflow.Activities.WebServiceInputActivity.System#Workflow#Activities#IEventActivity#QueueName
  - System.Workflow.Activities.WebServiceInputActivity.System#Workflow#Activities#IEventActivity#Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})
  - System.Workflow.Activities.WebServiceInputActivity.System#Workflow#Activities#IEventActivity#Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})
  - System.Workflow.Activities.WebServiceInputActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#QueueEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.QueueEventArgs)
  - System.Workflow.Activities.WebServiceInputActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)
  - System.Workflow.Activities.WebServiceInputActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)
  langs:
  - csharp
  name: WebServiceInputActivity
  nameWithType: WebServiceInputActivity
  fullName: System.Workflow.Activities.WebServiceInputActivity
  type: Class
  summary: "워크플로에서 웹 서비스에서 데이터를 받을 수 있습니다. 이 클래스는 상속 될 수 없습니다."
  remarks: "> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]WebServiceInputActivity 포함 된 워크플로 웹 서비스로 배포 될 때 웹 서비스 메서드에 해당 합니다. 워크플로 웹 서비스를 호출할 때는 WebServiceInputActivity 데이터를 받습니다."
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("InputReceived")]

      [System.ComponentModel.Designer(typeof(System.Workflow.Activities.WebServiceReceiveDesigner), typeof(System.ComponentModel.Design.IDesigner))]

      [System.Drawing.ToolboxBitmap(typeof(System.Workflow.Activities.WebServiceInputActivity), "Resources.WebServiceIn.png")]

      [System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]

      [System.Workflow.ComponentModel.Compiler.ActivityCodeGenerator(typeof(System.Workflow.Activities.WebServiceCodeGenerator))]

      [System.Workflow.ComponentModel.Compiler.ActivityValidator(typeof(System.Workflow.Activities.WebServiceReceiveValidator))]

      public sealed class WebServiceInputActivity : System.Workflow.ComponentModel.Activity, System.Workflow.Activities.IEventActivity, System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.QueueEventArgs>, System.Workflow.ComponentModel.IDynamicPropertyTypeProvider
  inheritance:
  - System.Object
  - System.Workflow.ComponentModel.DependencyObject
  - System.Workflow.ComponentModel.Activity
  implements:
  - System.Workflow.Activities.IEventActivity
  - System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.QueueEventArgs>
  - System.Workflow.ComponentModel.IDynamicPropertyTypeProvider
  inheritedMembers:
  - System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty
  - System.Workflow.ComponentModel.Activity.Canceling
  - System.Workflow.ComponentModel.Activity.CancelingEvent
  - System.Workflow.ComponentModel.Activity.Clone
  - System.Workflow.ComponentModel.Activity.Closed
  - System.Workflow.ComponentModel.Activity.ClosedEvent
  - System.Workflow.ComponentModel.Activity.Compensating
  - System.Workflow.ComponentModel.Activity.CompensatingEvent
  - System.Workflow.ComponentModel.Activity.Description
  - System.Workflow.ComponentModel.Activity.Enabled
  - System.Workflow.ComponentModel.Activity.Executing
  - System.Workflow.ComponentModel.Activity.ExecutingEvent
  - System.Workflow.ComponentModel.Activity.ExecutionResult
  - System.Workflow.ComponentModel.Activity.ExecutionStatus
  - System.Workflow.ComponentModel.Activity.Faulting
  - System.Workflow.ComponentModel.Activity.FaultingEvent
  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)
  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)
  - System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)
  - System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener`1,``0)
  - System.Workflow.ComponentModel.Activity.IsDynamicActivity
  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity)
  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity,System.Runtime.Serialization.IFormatter)
  - System.Workflow.ComponentModel.Activity.Name
  - System.Workflow.ComponentModel.Activity.OnActivityExecutionContextLoad(System.IServiceProvider)
  - System.Workflow.ComponentModel.Activity.OnActivityExecutionContextUnload(System.IServiceProvider)
  - System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)
  - System.Workflow.ComponentModel.Activity.Parent
  - System.Workflow.ComponentModel.Activity.QualifiedName
  - System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)
  - System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)
  - System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})
  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)
  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)
  - System.Workflow.ComponentModel.Activity.StatusChanged
  - System.Workflow.ComponentModel.Activity.StatusChangedEvent
  - System.Workflow.ComponentModel.Activity.ToString
  - System.Workflow.ComponentModel.Activity.TrackData(System.Object)
  - System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)
  - System.Workflow.ComponentModel.Activity.Uninitialize(System.IServiceProvider)
  - System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})
  - System.Workflow.ComponentModel.Activity.WorkflowInstanceId
  - System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.DesignMode
  - System.Workflow.ComponentModel.DependencyObject.Dispose
  - System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)
  - System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)
  - System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.InitializeProperties
  - System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)
  - System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject
  - System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)
  - System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.Site
  - System.Workflow.ComponentModel.DependencyObject.UserData
  platform:
  - net462
- uid: System.Workflow.Activities.WebServiceInputActivity.#ctor
  id: '#ctor'
  parent: System.Workflow.Activities.WebServiceInputActivity
  langs:
  - csharp
  name: WebServiceInputActivity()
  nameWithType: WebServiceInputActivity.WebServiceInputActivity()
  fullName: System.Workflow.Activities.WebServiceInputActivity.WebServiceInputActivity()
  type: Constructor
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Workflow.Activities.WebServiceInputActivity&quot;> </xref> 클래스입니다."
  syntax:
    content: public WebServiceInputActivity ();
    parameters: []
  overload: System.Workflow.Activities.WebServiceInputActivity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.WebServiceInputActivity.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Workflow.Activities.WebServiceInputActivity
  langs:
  - csharp
  name: WebServiceInputActivity(String)
  nameWithType: WebServiceInputActivity.WebServiceInputActivity(String)
  fullName: System.Workflow.Activities.WebServiceInputActivity.WebServiceInputActivity(String)
  type: Constructor
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Workflow.Activities.WebServiceInputActivity&quot;> </xref> 클래스 활동의 이름을 사용 합니다."
  syntax:
    content: public WebServiceInputActivity (string name);
    parameters:
    - id: name
      type: System.String
      description: "활동의 사용자 정의 이름입니다."
  overload: System.Workflow.Activities.WebServiceInputActivity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.WebServiceInputActivity.ActivitySubscribedProperty
  id: ActivitySubscribedProperty
  parent: System.Workflow.Activities.WebServiceInputActivity
  langs:
  - csharp
  name: ActivitySubscribedProperty
  nameWithType: WebServiceInputActivity.ActivitySubscribedProperty
  fullName: System.Workflow.Activities.WebServiceInputActivity.ActivitySubscribedProperty
  type: Field
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "나타냅니다는 <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref> ActivitySubscribedProperty 속성을 대상으로 하는 합니다."
  remarks: '[!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]'
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty ActivitySubscribedProperty;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.WebServiceInputActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)
  id: Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)
  parent: System.Workflow.Activities.WebServiceInputActivity
  langs:
  - csharp
  name: Cancel(ActivityExecutionContext)
  nameWithType: WebServiceInputActivity.Cancel(ActivityExecutionContext)
  fullName: System.Workflow.Activities.WebServiceInputActivity.Cancel(ActivityExecutionContext)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  syntax:
    content: protected override sealed System.Workflow.ComponentModel.ActivityExecutionStatus Cancel (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);
    parameters:
    - id: executionContext
      type: System.Workflow.ComponentModel.ActivityExecutionContext
      description: "추가할 수 있습니다."
    return:
      type: System.Workflow.ComponentModel.ActivityExecutionStatus
      description: "추가할 수 있습니다."
  overload: System.Workflow.Activities.WebServiceInputActivity.Cancel*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.WebServiceInputActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  id: Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  parent: System.Workflow.Activities.WebServiceInputActivity
  langs:
  - csharp
  name: Execute(ActivityExecutionContext)
  nameWithType: WebServiceInputActivity.Execute(ActivityExecutionContext)
  fullName: System.Workflow.Activities.WebServiceInputActivity.Execute(ActivityExecutionContext)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  syntax:
    content: protected override sealed System.Workflow.ComponentModel.ActivityExecutionStatus Execute (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);
    parameters:
    - id: executionContext
      type: System.Workflow.ComponentModel.ActivityExecutionContext
      description: "추가할 수 있습니다."
    return:
      type: System.Workflow.ComponentModel.ActivityExecutionStatus
      description: "추가할 수 있습니다."
  overload: System.Workflow.Activities.WebServiceInputActivity.Execute*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.WebServiceInputActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)
  id: HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)
  parent: System.Workflow.Activities.WebServiceInputActivity
  langs:
  - csharp
  name: HandleFault(ActivityExecutionContext,Exception)
  nameWithType: WebServiceInputActivity.HandleFault(ActivityExecutionContext,Exception)
  fullName: System.Workflow.Activities.WebServiceInputActivity.HandleFault(ActivityExecutionContext,Exception)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  syntax:
    content: protected override sealed System.Workflow.ComponentModel.ActivityExecutionStatus HandleFault (System.Workflow.ComponentModel.ActivityExecutionContext executionContext, Exception exception);
    parameters:
    - id: executionContext
      type: System.Workflow.ComponentModel.ActivityExecutionContext
      description: "추가할 수 있습니다."
    - id: exception
      type: System.Exception
      description: "추가할 수 있습니다."
    return:
      type: System.Workflow.ComponentModel.ActivityExecutionStatus
      description: "추가할 수 있습니다."
  overload: System.Workflow.Activities.WebServiceInputActivity.HandleFault*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.WebServiceInputActivity.Initialize(System.IServiceProvider)
  id: Initialize(System.IServiceProvider)
  parent: System.Workflow.Activities.WebServiceInputActivity
  langs:
  - csharp
  name: Initialize(IServiceProvider)
  nameWithType: WebServiceInputActivity.Initialize(IServiceProvider)
  fullName: System.Workflow.Activities.WebServiceInputActivity.Initialize(IServiceProvider)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  syntax:
    content: protected override sealed void Initialize (IServiceProvider provider);
    parameters:
    - id: provider
      type: System.IServiceProvider
      description: "추가할 수 있습니다."
  overload: System.Workflow.Activities.WebServiceInputActivity.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.WebServiceInputActivity.InputReceived
  id: InputReceived
  parent: System.Workflow.Activities.WebServiceInputActivity
  langs:
  - csharp
  name: InputReceived
  nameWithType: WebServiceInputActivity.InputReceived
  fullName: System.Workflow.Activities.WebServiceInputActivity.InputReceived
  type: Event
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "발생 경우는 <xref href=&quot;System.Workflow.Activities.WebServiceInputActivity&quot;> </xref> 입력을 받았습니다."
  syntax:
    content: public event EventHandler InputReceived;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.WebServiceInputActivity.InputReceivedEvent
  id: InputReceivedEvent
  parent: System.Workflow.Activities.WebServiceInputActivity
  langs:
  - csharp
  name: InputReceivedEvent
  nameWithType: WebServiceInputActivity.InputReceivedEvent
  fullName: System.Workflow.Activities.WebServiceInputActivity.InputReceivedEvent
  type: Field
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "활동에서 웹 서비스 호출에서 예상된 된 호출을 받은 후에 실행 되는 이벤트 대리자를 정의 합니다."
  remarks: '[!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]'
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty InputReceivedEvent;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.WebServiceInputActivity.InterfaceType
  id: InterfaceType
  parent: System.Workflow.Activities.WebServiceInputActivity
  langs:
  - csharp
  name: InterfaceType
  nameWithType: WebServiceInputActivity.InterfaceType
  fullName: System.Workflow.Activities.WebServiceInputActivity.InterfaceType
  type: Property
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "이 활동이 수신 대기 하는 메서드를 정의 하는 인터페이스 형식을 가져오거나 설정 합니다."
  syntax:
    content: public Type InterfaceType { get; set; }
    return:
      type: System.Type
      description: "인터페이스 형식입니다."
  overload: System.Workflow.Activities.WebServiceInputActivity.InterfaceType*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.WebServiceInputActivity.InterfaceTypeProperty
  id: InterfaceTypeProperty
  parent: System.Workflow.Activities.WebServiceInputActivity
  langs:
  - csharp
  name: InterfaceTypeProperty
  nameWithType: WebServiceInputActivity.InterfaceTypeProperty
  fullName: System.Workflow.Activities.WebServiceInputActivity.InterfaceTypeProperty
  type: Field
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "웹 서비스 계약으로 사용 되는 인터페이스의 이름에 해당 합니다."
  remarks: '[!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]'
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty InterfaceTypeProperty;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.WebServiceInputActivity.IsActivating
  id: IsActivating
  parent: System.Workflow.Activities.WebServiceInputActivity
  langs:
  - csharp
  name: IsActivating
  nameWithType: WebServiceInputActivity.IsActivating
  fullName: System.Workflow.Activities.WebServiceInputActivity.IsActivating
  type: Property
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "데이터 수신이 워크플로 시작 해야 하는지 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "첫 번째 수신에 워크플로의 IsActivating 속성이로 설정 될 수 있습니다 `true`합니다. 둘 이상의 IsActivating로 설정 되어 있으면 `true`, 첫 번째 요청 시 세션이 잠깁니다. 이 워크플로; 다른 수신 블록으로 long으로 지속 세션이 교착 상태가 있습니다."
  syntax:
    content: public bool IsActivating { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>데이터 받기; 워크플로 시작 해야 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Workflow.Activities.WebServiceInputActivity.IsActivating*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.WebServiceInputActivity.IsActivatingProperty
  id: IsActivatingProperty
  parent: System.Workflow.Activities.WebServiceInputActivity
  langs:
  - csharp
  name: IsActivatingProperty
  nameWithType: WebServiceInputActivity.IsActivatingProperty
  fullName: System.Workflow.Activities.WebServiceInputActivity.IsActivatingProperty
  type: Field
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "나타냅니다는 <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref> 를 대상으로 하는 <xref:System.Workflow.Activities.WebServiceInputActivity.IsActivating*>속성.</xref:System.Workflow.Activities.WebServiceInputActivity.IsActivating*>"
  remarks: "<xref:System.Workflow.Activities.WebServiceInputActivity.IsActivating%2A>속성 설정 해야 `true` 에 처음 <xref:System.Workflow.Activities.WebServiceInputActivity>.</xref:System.Workflow.Activities.WebServiceInputActivity> </xref:System.Workflow.Activities.WebServiceInputActivity.IsActivating%2A> 클라이언트에서이 웹 서비스 메서드를 호출할 워크플로 실행을 시작 하는 워크플로 런타임에 신호를 보냅니다. 형식의 웹 서비스는 노출 되는 워크플로 정의의 첫 번째 활동이 <xref:System.Workflow.Activities.WebServiceInputActivity>로이 속성을 설정 하 고 `true`.</xref:System.Workflow.Activities.WebServiceInputActivity> [!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]"
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty IsActivatingProperty;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.WebServiceInputActivity.MethodName
  id: MethodName
  parent: System.Workflow.Activities.WebServiceInputActivity
  langs:
  - csharp
  name: MethodName
  nameWithType: WebServiceInputActivity.MethodName
  fullName: System.Workflow.Activities.WebServiceInputActivity.MethodName
  type: Property
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "으로 지정한 인터페이스 메서드의 이름을 가져오거나는 <xref:System.Workflow.Activities.WebServiceInputActivity.InterfaceType*>속성이 <xref href=&quot;System.Workflow.Activities.WebServiceInputActivity&quot;> </xref> 나타냅니다.</xref:System.Workflow.Activities.WebServiceInputActivity.InterfaceType*>"
  syntax:
    content: public string MethodName { get; set; }
    return:
      type: System.String
      description: "이름으로 지정한 인터페이스에 대 한 메서드의 <xref:System.Workflow.Activities.WebServiceInputActivity.InterfaceType*>속성이 <xref href=&quot;System.Workflow.Activities.WebServiceInputActivity&quot;> </xref> 나타냅니다.</xref:System.Workflow.Activities.WebServiceInputActivity.InterfaceType*>"
  overload: System.Workflow.Activities.WebServiceInputActivity.MethodName*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.WebServiceInputActivity.MethodNameProperty
  id: MethodNameProperty
  parent: System.Workflow.Activities.WebServiceInputActivity
  langs:
  - csharp
  name: MethodNameProperty
  nameWithType: WebServiceInputActivity.MethodNameProperty
  fullName: System.Workflow.Activities.WebServiceInputActivity.MethodNameProperty
  type: Field
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "웹 서비스 계약으로 사용 되는 인터페이스에 포함 된 메서드 중 하나의 이름에 해당 합니다."
  remarks: '[!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]'
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty MethodNameProperty;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.WebServiceInputActivity.ParameterBindings
  id: ParameterBindings
  parent: System.Workflow.Activities.WebServiceInputActivity
  langs:
  - csharp
  name: ParameterBindings
  nameWithType: WebServiceInputActivity.ParameterBindings
  fullName: System.Workflow.Activities.WebServiceInputActivity.ParameterBindings
  type: Property
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "에 지정 된 메서드에 대 한 입력된 매개 변수가와 연관 된 바인딩 컬렉션을 가져옵니다는 <xref:System.Workflow.Activities.WebServiceInputActivity.MethodName*>속성.</xref:System.Workflow.Activities.WebServiceInputActivity.MethodName*>"
  remarks: "ParameterBindings는 <xref:System.Workflow.Activities.WebServiceInputActivity>인바운드 매개 변수를 워크플로의 위치에에서 바인딩하는 데 사용 됩니다.</xref:System.Workflow.Activities.WebServiceInputActivity> 경우는 <xref:System.Workflow.Activities.WebServiceInputActivity>실행 되는 바인딩 위치가 해당 인바운드 매개 변수의 값으로 설정 됩니다.</xref:System.Workflow.Activities.WebServiceInputActivity>"
  syntax:
    content: public System.Workflow.ComponentModel.WorkflowParameterBindingCollection ParameterBindings { get; }
    return:
      type: System.Workflow.ComponentModel.WorkflowParameterBindingCollection
      description: "으로 지정한 메서드의 인바운드 매개 변수로 사용 되는 속성의 컬렉션은 <xref:System.Workflow.Activities.WebServiceInputActivity.MethodName*>속성.</xref:System.Workflow.Activities.WebServiceInputActivity.MethodName*>"
  overload: System.Workflow.Activities.WebServiceInputActivity.ParameterBindings*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.WebServiceInputActivity.ParameterBindingsProperty
  id: ParameterBindingsProperty
  parent: System.Workflow.Activities.WebServiceInputActivity
  langs:
  - csharp
  name: ParameterBindingsProperty
  nameWithType: WebServiceInputActivity.ParameterBindingsProperty
  fullName: System.Workflow.Activities.WebServiceInputActivity.ParameterBindingsProperty
  type: Field
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "나타냅니다는 <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref> 를 대상으로 하는 <xref:System.Workflow.Activities.WebServiceInputActivity.ParameterBindings*>속성.</xref:System.Workflow.Activities.WebServiceInputActivity.ParameterBindings*>"
  remarks: '[!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]'
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty ParameterBindingsProperty;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.WebServiceInputActivity.Roles
  id: Roles
  parent: System.Workflow.Activities.WebServiceInputActivity
  langs:
  - csharp
  name: Roles
  nameWithType: WebServiceInputActivity.Roles
  fullName: System.Workflow.Activities.WebServiceInputActivity.Roles
  type: Property
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "데이터 전송에 사용할 수 있는 역할의 컬렉션을 가져오거나 설정 합니다.는 <xref href=&quot;System.Workflow.Activities.WebServiceInputActivity&quot;> </xref>합니다."
  remarks: "웹 서비스 역할 컬렉션의 멤버가 아닌에서 요청을 받을 경우 보안 액세스 예외가 throw 됩니다.       기본값은 빈 컬렉션 웹 서비스에 대 한 개방형 액세스를 제공 합니다."
  syntax:
    content: public System.Workflow.Activities.WorkflowRoleCollection Roles { get; set; }
    return:
      type: System.Workflow.Activities.WorkflowRoleCollection
      description: "<xref href=&quot;System.Workflow.Activities.WorkflowRoleCollection&quot;> </xref> 데이터 전송에 사용할 수 있는 웹 서비스 역할을 포함 하는 <xref href=&quot;System.Workflow.Activities.WebServiceInputActivity&quot;> </xref>합니다."
  overload: System.Workflow.Activities.WebServiceInputActivity.Roles*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.WebServiceInputActivity.RolesProperty
  id: RolesProperty
  parent: System.Workflow.Activities.WebServiceInputActivity
  langs:
  - csharp
  name: RolesProperty
  nameWithType: WebServiceInputActivity.RolesProperty
  fullName: System.Workflow.Activities.WebServiceInputActivity.RolesProperty
  type: Field
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "웹 서비스 클라이언트에서 메시지를 보낼 수 있는 유효한 사용자 역할을 식별 하는 <xref href=&quot;System.Workflow.Activities.WebServiceInputActivity&quot;> </xref>합니다. 두 가지 유형의 지원 되는 역할 유형은 Active Directory와 ASP.NET입니다."
  remarks: '[!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]'
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty RolesProperty;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.WebServiceInputActivity.System#Workflow#Activities#IEventActivity#QueueName
  id: System#Workflow#Activities#IEventActivity#QueueName
  isEii: true
  parent: System.Workflow.Activities.WebServiceInputActivity
  langs:
  - csharp
  name: System.Workflow.Activities.IEventActivity.QueueName
  nameWithType: WebServiceInputActivity.System.Workflow.Activities.IEventActivity.QueueName
  fullName: System.Workflow.Activities.WebServiceInputActivity.System.Workflow.Activities.IEventActivity.QueueName
  type: Property
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "이름을 가져옵니다는 <xref href=&quot;System.Workflow.Runtime.WorkflowQueue&quot;> </xref> 활동이 데이터 도착을 대기 중인에 있습니다."
  syntax:
    content: IComparable System.Workflow.Activities.IEventActivity.QueueName { get; }
    return:
      type: System.IComparable
      description: "이름에서 <xref href=&quot;System.Workflow.Runtime.WorkflowQueue&quot;> </xref> 활동이 데이터 도착을 대기 중인에 있습니다."
  overload: System.Workflow.Activities.WebServiceInputActivity.System#Workflow#Activities#IEventActivity#QueueName*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.WebServiceInputActivity.System#Workflow#Activities#IEventActivity#Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})
  id: System#Workflow#Activities#IEventActivity#Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})
  isEii: true
  parent: System.Workflow.Activities.WebServiceInputActivity
  langs:
  - csharp
  name: System.Workflow.Activities.IEventActivity.Subscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)
  nameWithType: WebServiceInputActivity.System.Workflow.Activities.IEventActivity.Subscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)
  fullName: System.Workflow.Activities.WebServiceInputActivity.System.Workflow.Activities.IEventActivity.Subscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "구독을 만듭니다는 <xref href=&quot;System.Workflow.Activities.WebServiceInputActivity&quot;> </xref> 이벤트에는 활동입니다."
  syntax:
    content: void IEventActivity.Subscribe (System.Workflow.ComponentModel.ActivityExecutionContext parentContext, System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.QueueEventArgs> parentEventHandler);
    parameters:
    - id: parentContext
      type: System.Workflow.ComponentModel.ActivityExecutionContext
      description: "<xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionContext&quot;> </xref> 의 실행 환경을 나타내는 <xref href=&quot;System.Workflow.Activities.WebServiceInputActivity&quot;> </xref> 활동입니다."
    - id: parentEventHandler
      type: System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs}
      description: "<xref:System.EventHandler>부모 이벤트에 대 한.</xref:System.EventHandler>"
  overload: System.Workflow.Activities.WebServiceInputActivity.System#Workflow#Activities#IEventActivity#Subscribe*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.WebServiceInputActivity.System#Workflow#Activities#IEventActivity#Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})
  id: System#Workflow#Activities#IEventActivity#Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})
  isEii: true
  parent: System.Workflow.Activities.WebServiceInputActivity
  langs:
  - csharp
  name: System.Workflow.Activities.IEventActivity.Unsubscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)
  nameWithType: WebServiceInputActivity.System.Workflow.Activities.IEventActivity.Unsubscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)
  fullName: System.Workflow.Activities.WebServiceInputActivity.System.Workflow.Activities.IEventActivity.Unsubscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "구독을 취소 한 <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref> 이벤트입니다."
  syntax:
    content: void IEventActivity.Unsubscribe (System.Workflow.ComponentModel.ActivityExecutionContext parentContext, System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.QueueEventArgs> parentEventHandler);
    parameters:
    - id: parentContext
      type: System.Workflow.ComponentModel.ActivityExecutionContext
      description: "<xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionContext&quot;> </xref> 의 실행 환경을 나타내는 <xref href=&quot;System.Workflow.Activities.WebServiceInputActivity&quot;> </xref> 활동입니다."
    - id: parentEventHandler
      type: System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs}
      description: "<xref:System.EventHandler>부모 이벤트에 대 한.</xref:System.EventHandler>"
  overload: System.Workflow.Activities.WebServiceInputActivity.System#Workflow#Activities#IEventActivity#Unsubscribe*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.WebServiceInputActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#QueueEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.QueueEventArgs)
  id: System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#QueueEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.QueueEventArgs)
  isEii: true
  parent: System.Workflow.Activities.WebServiceInputActivity
  langs:
  - csharp
  name: System.Workflow.ComponentModel.IActivityEventListener(Object,QueueEventArgs)
  nameWithType: WebServiceInputActivity.System.Workflow.ComponentModel.IActivityEventListener(Object,QueueEventArgs)
  fullName: System.Workflow.Activities.WebServiceInputActivity.System.Workflow.ComponentModel.IActivityEventListener(Object,QueueEventArgs)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  syntax:
    content: void IActivityEventListener<QueueEventArgs>.OnEvent (object sender, System.Workflow.ComponentModel.QueueEventArgs e);
    parameters:
    - id: sender
      type: System.Object
      description: "추가할 수 있습니다."
    - id: e
      type: System.Workflow.ComponentModel.QueueEventArgs
      description: "추가할 수 있습니다."
  overload: System.Workflow.Activities.WebServiceInputActivity.System#Workflow#ComponentModel#IActivityEventListener<System#Workflow#ComponentModel#QueueEventArgs>#OnEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.WebServiceInputActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)
  id: System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)
  isEii: true
  parent: System.Workflow.Activities.WebServiceInputActivity
  langs:
  - csharp
  name: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider,String)
  nameWithType: WebServiceInputActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider,String)
  fullName: System.Workflow.Activities.WebServiceInputActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider,String)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "지정된 된 속성에 대 한 액세스 형식을 반환합니다."
  remarks: "컴파일 타임에 속성은 서로 올바르게 바인딩되어 있는지 여부를 확인 하는 데 사용 합니다. 이 인터페이스가 없는이 정보는 속성 getter/setter에서 직접 유추 됩니다."
  syntax:
    content: System.Workflow.ComponentModel.Compiler.AccessTypes IDynamicPropertyTypeProvider.GetAccessType (IServiceProvider serviceProvider, string propertyName);
    parameters:
    - id: serviceProvider
      type: System.IServiceProvider
      description: "구현 하는 개체 <xref:System.IServiceProvider>들이 필요한 경우 디자인 타임 서비스에 대 한 액세스를 제공할 수 있습니다.</xref:System.IServiceProvider>"
    - id: propertyName
      type: System.String
      description: "속성의 이름입니다."
    return:
      type: System.Workflow.ComponentModel.Compiler.AccessTypes
      description: "<xref href=&quot;System.Workflow.ComponentModel.Compiler.AccessTypes&quot;> </xref> 열거형 값 속성의 액세스 수준을 나타내는입니다."
  overload: System.Workflow.Activities.WebServiceInputActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.WebServiceInputActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)
  id: System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)
  isEii: true
  parent: System.Workflow.Activities.WebServiceInputActivity
  langs:
  - csharp
  name: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider,String)
  nameWithType: WebServiceInputActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider,String)
  fullName: System.Workflow.Activities.WebServiceInputActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider,String)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "반환 된 <xref:System.Type>지정된 된 속성의.</xref:System.Type>"
  remarks: "컴파일 타임에 속성은 서로 올바르게 바인딩되어 있는지 여부를 확인 하는 데 사용 합니다."
  syntax:
    content: Type IDynamicPropertyTypeProvider.GetPropertyType (IServiceProvider serviceProvider, string propertyName);
    parameters:
    - id: serviceProvider
      type: System.IServiceProvider
      description: "구현 하는 개체 <xref:System.IServiceProvider>들이 필요한 경우 디자인 타임 서비스에 대 한 액세스를 제공할 수 있습니다.</xref:System.IServiceProvider>"
    - id: propertyName
      type: System.String
      description: "속성의 이름입니다."
    return:
      type: System.Type
      description: "<xref:System.Type>이름이로 전달 되는 속성에 대 한는 <code> propertyName  </code>매개 변수.</xref:System.Type>"
  overload: System.Workflow.Activities.WebServiceInputActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: System.Workflow.ComponentModel.Activity
- uid: System.Workflow.Activities.WebServiceInputActivity.#ctor
  parent: System.Workflow.Activities.WebServiceInputActivity
  isExternal: false
  name: WebServiceInputActivity()
  nameWithType: WebServiceInputActivity.WebServiceInputActivity()
  fullName: System.Workflow.Activities.WebServiceInputActivity.WebServiceInputActivity()
- uid: System.Workflow.Activities.WebServiceInputActivity.#ctor(System.String)
  parent: System.Workflow.Activities.WebServiceInputActivity
  isExternal: false
  name: WebServiceInputActivity(String)
  nameWithType: WebServiceInputActivity.WebServiceInputActivity(String)
  fullName: System.Workflow.Activities.WebServiceInputActivity.WebServiceInputActivity(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Workflow.Activities.WebServiceInputActivity.ActivitySubscribedProperty
  parent: System.Workflow.Activities.WebServiceInputActivity
  isExternal: false
  name: ActivitySubscribedProperty
  nameWithType: WebServiceInputActivity.ActivitySubscribedProperty
  fullName: System.Workflow.Activities.WebServiceInputActivity.ActivitySubscribedProperty
- uid: System.Workflow.ComponentModel.DependencyProperty
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Workflow.ComponentModel.DependencyProperty
- uid: System.Workflow.Activities.WebServiceInputActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)
  parent: System.Workflow.Activities.WebServiceInputActivity
  isExternal: false
  name: Cancel(ActivityExecutionContext)
  nameWithType: WebServiceInputActivity.Cancel(ActivityExecutionContext)
  fullName: System.Workflow.Activities.WebServiceInputActivity.Cancel(ActivityExecutionContext)
- uid: System.Workflow.ComponentModel.ActivityExecutionStatus
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: ActivityExecutionStatus
  nameWithType: ActivityExecutionStatus
  fullName: System.Workflow.ComponentModel.ActivityExecutionStatus
- uid: System.Workflow.ComponentModel.ActivityExecutionContext
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: ActivityExecutionContext
  nameWithType: ActivityExecutionContext
  fullName: System.Workflow.ComponentModel.ActivityExecutionContext
- uid: System.Workflow.Activities.WebServiceInputActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  parent: System.Workflow.Activities.WebServiceInputActivity
  isExternal: false
  name: Execute(ActivityExecutionContext)
  nameWithType: WebServiceInputActivity.Execute(ActivityExecutionContext)
  fullName: System.Workflow.Activities.WebServiceInputActivity.Execute(ActivityExecutionContext)
- uid: System.Workflow.Activities.WebServiceInputActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)
  parent: System.Workflow.Activities.WebServiceInputActivity
  isExternal: false
  name: HandleFault(ActivityExecutionContext,Exception)
  nameWithType: WebServiceInputActivity.HandleFault(ActivityExecutionContext,Exception)
  fullName: System.Workflow.Activities.WebServiceInputActivity.HandleFault(ActivityExecutionContext,Exception)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Workflow.Activities.WebServiceInputActivity.Initialize(System.IServiceProvider)
  parent: System.Workflow.Activities.WebServiceInputActivity
  isExternal: false
  name: Initialize(IServiceProvider)
  nameWithType: WebServiceInputActivity.Initialize(IServiceProvider)
  fullName: System.Workflow.Activities.WebServiceInputActivity.Initialize(IServiceProvider)
- uid: System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.Workflow.Activities.WebServiceInputActivity.InputReceived
  parent: System.Workflow.Activities.WebServiceInputActivity
  isExternal: false
  name: InputReceived
  nameWithType: WebServiceInputActivity.InputReceived
  fullName: System.Workflow.Activities.WebServiceInputActivity.InputReceived
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Workflow.Activities.WebServiceInputActivity.InputReceivedEvent
  parent: System.Workflow.Activities.WebServiceInputActivity
  isExternal: false
  name: InputReceivedEvent
  nameWithType: WebServiceInputActivity.InputReceivedEvent
  fullName: System.Workflow.Activities.WebServiceInputActivity.InputReceivedEvent
- uid: System.Workflow.Activities.WebServiceInputActivity.InterfaceType
  parent: System.Workflow.Activities.WebServiceInputActivity
  isExternal: false
  name: InterfaceType
  nameWithType: WebServiceInputActivity.InterfaceType
  fullName: System.Workflow.Activities.WebServiceInputActivity.InterfaceType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Workflow.Activities.WebServiceInputActivity.InterfaceTypeProperty
  parent: System.Workflow.Activities.WebServiceInputActivity
  isExternal: false
  name: InterfaceTypeProperty
  nameWithType: WebServiceInputActivity.InterfaceTypeProperty
  fullName: System.Workflow.Activities.WebServiceInputActivity.InterfaceTypeProperty
- uid: System.Workflow.Activities.WebServiceInputActivity.IsActivating
  parent: System.Workflow.Activities.WebServiceInputActivity
  isExternal: false
  name: IsActivating
  nameWithType: WebServiceInputActivity.IsActivating
  fullName: System.Workflow.Activities.WebServiceInputActivity.IsActivating
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Workflow.Activities.WebServiceInputActivity.IsActivatingProperty
  parent: System.Workflow.Activities.WebServiceInputActivity
  isExternal: false
  name: IsActivatingProperty
  nameWithType: WebServiceInputActivity.IsActivatingProperty
  fullName: System.Workflow.Activities.WebServiceInputActivity.IsActivatingProperty
- uid: System.Workflow.Activities.WebServiceInputActivity.MethodName
  parent: System.Workflow.Activities.WebServiceInputActivity
  isExternal: false
  name: MethodName
  nameWithType: WebServiceInputActivity.MethodName
  fullName: System.Workflow.Activities.WebServiceInputActivity.MethodName
- uid: System.Workflow.Activities.WebServiceInputActivity.MethodNameProperty
  parent: System.Workflow.Activities.WebServiceInputActivity
  isExternal: false
  name: MethodNameProperty
  nameWithType: WebServiceInputActivity.MethodNameProperty
  fullName: System.Workflow.Activities.WebServiceInputActivity.MethodNameProperty
- uid: System.Workflow.Activities.WebServiceInputActivity.ParameterBindings
  parent: System.Workflow.Activities.WebServiceInputActivity
  isExternal: false
  name: ParameterBindings
  nameWithType: WebServiceInputActivity.ParameterBindings
  fullName: System.Workflow.Activities.WebServiceInputActivity.ParameterBindings
- uid: System.Workflow.ComponentModel.WorkflowParameterBindingCollection
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: WorkflowParameterBindingCollection
  nameWithType: WorkflowParameterBindingCollection
  fullName: System.Workflow.ComponentModel.WorkflowParameterBindingCollection
- uid: System.Workflow.Activities.WebServiceInputActivity.ParameterBindingsProperty
  parent: System.Workflow.Activities.WebServiceInputActivity
  isExternal: false
  name: ParameterBindingsProperty
  nameWithType: WebServiceInputActivity.ParameterBindingsProperty
  fullName: System.Workflow.Activities.WebServiceInputActivity.ParameterBindingsProperty
- uid: System.Workflow.Activities.WebServiceInputActivity.Roles
  parent: System.Workflow.Activities.WebServiceInputActivity
  isExternal: false
  name: Roles
  nameWithType: WebServiceInputActivity.Roles
  fullName: System.Workflow.Activities.WebServiceInputActivity.Roles
- uid: System.Workflow.Activities.WorkflowRoleCollection
  parent: System.Workflow.Activities
  isExternal: false
  name: WorkflowRoleCollection
  nameWithType: WorkflowRoleCollection
  fullName: System.Workflow.Activities.WorkflowRoleCollection
- uid: System.Workflow.Activities.WebServiceInputActivity.RolesProperty
  parent: System.Workflow.Activities.WebServiceInputActivity
  isExternal: false
  name: RolesProperty
  nameWithType: WebServiceInputActivity.RolesProperty
  fullName: System.Workflow.Activities.WebServiceInputActivity.RolesProperty
- uid: System.Workflow.Activities.WebServiceInputActivity.System#Workflow#Activities#IEventActivity#QueueName
  parent: System.Workflow.Activities.WebServiceInputActivity
  isExternal: false
  name: System.Workflow.Activities.IEventActivity.QueueName
  nameWithType: WebServiceInputActivity.System.Workflow.Activities.IEventActivity.QueueName
  fullName: System.Workflow.Activities.WebServiceInputActivity.System.Workflow.Activities.IEventActivity.QueueName
- uid: System.IComparable
  parent: System
  isExternal: true
  name: IComparable
  nameWithType: IComparable
  fullName: System.IComparable
- uid: System.Workflow.Activities.WebServiceInputActivity.System#Workflow#Activities#IEventActivity#Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})
  parent: System.Workflow.Activities.WebServiceInputActivity
  isExternal: false
  name: System.Workflow.Activities.IEventActivity.Subscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)
  nameWithType: WebServiceInputActivity.System.Workflow.Activities.IEventActivity.Subscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)
  fullName: System.Workflow.Activities.WebServiceInputActivity.System.Workflow.Activities.IEventActivity.Subscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)
- uid: System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs}
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: IActivityEventListener<QueueEventArgs>
  nameWithType: IActivityEventListener<QueueEventArgs>
  fullName: System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.QueueEventArgs>
  spec.csharp:
  - uid: System.Workflow.ComponentModel.IActivityEventListener`1
    name: IActivityEventListener
    nameWithType: IActivityEventListener
    fullName: IActivityEventListener<System.Workflow.ComponentModel.QueueEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Workflow.ComponentModel.QueueEventArgs
    name: QueueEventArgs
    nameWithType: QueueEventArgs
    fullName: QueueEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.Activities.WebServiceInputActivity.System#Workflow#Activities#IEventActivity#Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})
  parent: System.Workflow.Activities.WebServiceInputActivity
  isExternal: false
  name: System.Workflow.Activities.IEventActivity.Unsubscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)
  nameWithType: WebServiceInputActivity.System.Workflow.Activities.IEventActivity.Unsubscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)
  fullName: System.Workflow.Activities.WebServiceInputActivity.System.Workflow.Activities.IEventActivity.Unsubscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)
- uid: System.Workflow.Activities.WebServiceInputActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#QueueEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.QueueEventArgs)
  parent: System.Workflow.Activities.WebServiceInputActivity
  isExternal: false
  name: System.Workflow.ComponentModel.IActivityEventListener(Object,QueueEventArgs)
  nameWithType: WebServiceInputActivity.System.Workflow.ComponentModel.IActivityEventListener(Object,QueueEventArgs)
  fullName: System.Workflow.Activities.WebServiceInputActivity.System.Workflow.ComponentModel.IActivityEventListener(Object,QueueEventArgs)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Workflow.ComponentModel.QueueEventArgs
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: QueueEventArgs
  nameWithType: QueueEventArgs
  fullName: System.Workflow.ComponentModel.QueueEventArgs
- uid: System.Workflow.Activities.WebServiceInputActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)
  parent: System.Workflow.Activities.WebServiceInputActivity
  isExternal: false
  name: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider,String)
  nameWithType: WebServiceInputActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider,String)
  fullName: System.Workflow.Activities.WebServiceInputActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider,String)
- uid: System.Workflow.ComponentModel.Compiler.AccessTypes
  parent: System.Workflow.ComponentModel.Compiler
  isExternal: false
  name: AccessTypes
  nameWithType: AccessTypes
  fullName: System.Workflow.ComponentModel.Compiler.AccessTypes
- uid: System.Workflow.Activities.WebServiceInputActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)
  parent: System.Workflow.Activities.WebServiceInputActivity
  isExternal: false
  name: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider,String)
  nameWithType: WebServiceInputActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider,String)
  fullName: System.Workflow.Activities.WebServiceInputActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider,String)
- uid: System.Workflow.Activities.WebServiceInputActivity.#ctor*
  parent: System.Workflow.Activities.WebServiceInputActivity
  isExternal: false
  name: WebServiceInputActivity
  nameWithType: WebServiceInputActivity.WebServiceInputActivity
- uid: System.Workflow.Activities.WebServiceInputActivity.Cancel*
  parent: System.Workflow.Activities.WebServiceInputActivity
  isExternal: false
  name: Cancel
  nameWithType: WebServiceInputActivity.Cancel
- uid: System.Workflow.Activities.WebServiceInputActivity.Execute*
  parent: System.Workflow.Activities.WebServiceInputActivity
  isExternal: false
  name: Execute
  nameWithType: WebServiceInputActivity.Execute
- uid: System.Workflow.Activities.WebServiceInputActivity.HandleFault*
  parent: System.Workflow.Activities.WebServiceInputActivity
  isExternal: false
  name: HandleFault
  nameWithType: WebServiceInputActivity.HandleFault
- uid: System.Workflow.Activities.WebServiceInputActivity.Initialize*
  parent: System.Workflow.Activities.WebServiceInputActivity
  isExternal: false
  name: Initialize
  nameWithType: WebServiceInputActivity.Initialize
- uid: System.Workflow.Activities.WebServiceInputActivity.InterfaceType*
  parent: System.Workflow.Activities.WebServiceInputActivity
  isExternal: false
  name: InterfaceType
  nameWithType: WebServiceInputActivity.InterfaceType
- uid: System.Workflow.Activities.WebServiceInputActivity.IsActivating*
  parent: System.Workflow.Activities.WebServiceInputActivity
  isExternal: false
  name: IsActivating
  nameWithType: WebServiceInputActivity.IsActivating
- uid: System.Workflow.Activities.WebServiceInputActivity.MethodName*
  parent: System.Workflow.Activities.WebServiceInputActivity
  isExternal: false
  name: MethodName
  nameWithType: WebServiceInputActivity.MethodName
- uid: System.Workflow.Activities.WebServiceInputActivity.ParameterBindings*
  parent: System.Workflow.Activities.WebServiceInputActivity
  isExternal: false
  name: ParameterBindings
  nameWithType: WebServiceInputActivity.ParameterBindings
- uid: System.Workflow.Activities.WebServiceInputActivity.Roles*
  parent: System.Workflow.Activities.WebServiceInputActivity
  isExternal: false
  name: Roles
  nameWithType: WebServiceInputActivity.Roles
- uid: System.Workflow.Activities.WebServiceInputActivity.System#Workflow#Activities#IEventActivity#QueueName*
  parent: System.Workflow.Activities.WebServiceInputActivity
  isExternal: false
  name: System.Workflow.Activities.IEventActivity.QueueName
  nameWithType: WebServiceInputActivity.System.Workflow.Activities.IEventActivity.QueueName
- uid: System.Workflow.Activities.WebServiceInputActivity.System#Workflow#Activities#IEventActivity#Subscribe*
  parent: System.Workflow.Activities.WebServiceInputActivity
  isExternal: false
  name: System.Workflow.Activities.IEventActivity.Subscribe
  nameWithType: WebServiceInputActivity.System.Workflow.Activities.IEventActivity.Subscribe
- uid: System.Workflow.Activities.WebServiceInputActivity.System#Workflow#Activities#IEventActivity#Unsubscribe*
  parent: System.Workflow.Activities.WebServiceInputActivity
  isExternal: false
  name: System.Workflow.Activities.IEventActivity.Unsubscribe
  nameWithType: WebServiceInputActivity.System.Workflow.Activities.IEventActivity.Unsubscribe
- uid: System.Workflow.Activities.WebServiceInputActivity.System#Workflow#ComponentModel#IActivityEventListener<System#Workflow#ComponentModel#QueueEventArgs>#OnEvent*
  parent: System.Workflow.Activities.WebServiceInputActivity
  isExternal: false
  name: System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.QueueEventArgs>.OnEvent
  nameWithType: WebServiceInputActivity.System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.QueueEventArgs>.OnEvent
- uid: System.Workflow.Activities.WebServiceInputActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType*
  parent: System.Workflow.Activities.WebServiceInputActivity
  isExternal: false
  name: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType
  nameWithType: WebServiceInputActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType
- uid: System.Workflow.Activities.WebServiceInputActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType*
  parent: System.Workflow.Activities.WebServiceInputActivity
  isExternal: false
  name: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType
  nameWithType: WebServiceInputActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType
