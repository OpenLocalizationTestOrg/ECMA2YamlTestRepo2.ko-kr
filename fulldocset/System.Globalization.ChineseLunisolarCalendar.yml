### YamlMime:ManagedReference
items:
- uid: System.Globalization.ChineseLunisolarCalendar
  id: ChineseLunisolarCalendar
  children:
  - System.Globalization.ChineseLunisolarCalendar.#ctor
  - System.Globalization.ChineseLunisolarCalendar.ChineseEra
  - System.Globalization.ChineseLunisolarCalendar.DaysInYearBeforeMinSupportedYear
  - System.Globalization.ChineseLunisolarCalendar.Eras
  - System.Globalization.ChineseLunisolarCalendar.GetEra(System.DateTime)
  - System.Globalization.ChineseLunisolarCalendar.MaxSupportedDateTime
  - System.Globalization.ChineseLunisolarCalendar.MinSupportedDateTime
  langs:
  - csharp
  name: ChineseLunisolarCalendar
  nameWithType: ChineseLunisolarCalendar
  fullName: System.Globalization.ChineseLunisolarCalendar
  type: Class
  summary: "예: 월, 일, 년 사업부의 시간을 나타냅니다. 연도 태음 태양력을 사용 하 여 일 및 월은 계산 중국식 달력을 사용 하 여 계산 됩니다."
  remarks: "ChineseLunisolarCalendar 클래스에서 파생 된는 <xref:System.Globalization.EastAsianLunisolarCalendar>음력 달력을 나타내는 클래스입니다.</xref:System.Globalization.EastAsianLunisolarCalendar> <xref:System.Globalization.EastAsianLunisolarCalendar>클래스는 육십갑자 주기 (60 년 마다 반복) 태양 년과 음력 외에도 지원 합니다.</xref:System.Globalization.EastAsianLunisolarCalendar> 달력에서 태양 매년 육십갑자, 천체 적 어간,와 연결 되며 이러한 달력 연도의 모든 달 윤 월을 가질 수 있습니다. ChineseLunisolarCalendar 클래스 연도 양력 및 월 및 일 음력 계산 기준에 따라 계산 됩니다.      > [!NOTE] > ChineseLunisolarCalendar 클래스와 다른 달력 클래스를 사용 하 여.NET framework에서에 대 한 정보를 참조 하십시오. [달력 작업](~/add/includes/ajax-current-ext-md.md)합니다.       윤 월은 모든 달&1; 년에 발생할 수 있습니다. 예를 들어는 <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A>메서드 13 지정된 된 날짜와 관련 된 달을 나타내는 1 사이의 숫자를 반환 합니다.</xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A> 해당 연도의 8 및 9 번째 달을 윤 월 되어 있는 경우는 <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A>메서드가 윤 월에 대 한 9 및 10 번째 8 월에 대 한 8을 반환 합니다.</xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A>       현재는 ChineseLunisolarCalendar <xref:System.Globalization.CultureInfo>클래스</xref:System.Globalization.CultureInfo> 에서 지 원하는 문화권에서 사용 되지 않는 경우 따라서이 클래스는 중국식 음력 달력에서 날짜 계산에 사용할 수 있습니다.       각 <xref:System.Globalization.CultureInfo>개체가 집합 일정을 지원 합니다.</xref:System.Globalization.CultureInfo> <xref:System.Globalization.CultureInfo.Calendar%2A>문화권에 대 한 기본 일정을 반환 하는 속성 및 <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>속성 문화권에서 지원 되는 모든 달력을 포함 하는 배열을 반환 합니다.</xref:System.Globalization.CultureInfo.OptionalCalendars%2A> </xref:System.Globalization.CultureInfo.Calendar%2A> A <xref:System.Globalization.CultureInfo> <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName>새 <xref:System.Globalization.Calendar>.</xref:System.Globalization.Calendar> </xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> 의 속성</xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> 을 설정 해야 하는 응용 프로그램에서</xref:System.Globalization.CultureInfo> 사용 하는 달력을 변경 하려면"
  syntax:
    content: 'public class ChineseLunisolarCalendar : System.Globalization.EastAsianLunisolarCalendar'
  inheritance:
  - System.Globalization.Calendar
  - System.Globalization.EastAsianLunisolarCalendar
  implements: []
  inheritedMembers:
  - System.Globalization.EastAsianLunisolarCalendar.AddMonths(System.DateTime,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.AddYears(System.DateTime,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.AlgorithmType
  - System.Globalization.EastAsianLunisolarCalendar.GetCelestialStem(System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.GetDayOfMonth(System.DateTime)
  - System.Globalization.EastAsianLunisolarCalendar.GetDayOfWeek(System.DateTime)
  - System.Globalization.EastAsianLunisolarCalendar.GetDayOfYear(System.DateTime)
  - System.Globalization.EastAsianLunisolarCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.GetDaysInYear(System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.GetLeapMonth(System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.GetMonth(System.DateTime)
  - System.Globalization.EastAsianLunisolarCalendar.GetMonthsInYear(System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.GetSexagenaryYear(System.DateTime)
  - System.Globalization.EastAsianLunisolarCalendar.GetTerrestrialBranch(System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.GetYear(System.DateTime)
  - System.Globalization.EastAsianLunisolarCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.IsLeapYear(System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.ToFourDigitYear(System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.TwoDigitYearMax
  platform:
  - net462
- uid: System.Globalization.ChineseLunisolarCalendar.#ctor
  id: '#ctor'
  parent: System.Globalization.ChineseLunisolarCalendar
  langs:
  - csharp
  name: ChineseLunisolarCalendar()
  nameWithType: ChineseLunisolarCalendar.ChineseLunisolarCalendar()
  fullName: System.Globalization.ChineseLunisolarCalendar.ChineseLunisolarCalendar()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Globalization.ChineseLunisolarCalendar&quot;> </xref> 클래스입니다."
  syntax:
    content: public ChineseLunisolarCalendar ();
    parameters: []
  overload: System.Globalization.ChineseLunisolarCalendar.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.ChineseLunisolarCalendar.ChineseEra
  id: ChineseEra
  parent: System.Globalization.ChineseLunisolarCalendar
  langs:
  - csharp
  name: ChineseEra
  nameWithType: ChineseLunisolarCalendar.ChineseEra
  fullName: System.Globalization.ChineseLunisolarCalendar.ChineseEra
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "현재는 연대를 지정 <xref href=&quot;System.Globalization.ChineseLunisolarCalendar&quot;> </xref> 개체입니다."
  remarks: "이 필드의 값은 1입니다.       <xref:System.Globalization.ChineseLunisolarCalendar>클래스 현재 연대만 인식 합니다.</xref:System.Globalization.ChineseLunisolarCalendar>"
  syntax:
    content: public const int ChineseEra = 1;
    return:
      type: System.Int32
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.ChineseLunisolarCalendar.DaysInYearBeforeMinSupportedYear
  id: DaysInYearBeforeMinSupportedYear
  parent: System.Globalization.ChineseLunisolarCalendar
  langs:
  - csharp
  name: DaysInYearBeforeMinSupportedYear
  nameWithType: ChineseLunisolarCalendar.DaysInYearBeforeMinSupportedYear
  fullName: System.Globalization.ChineseLunisolarCalendar.DaysInYearBeforeMinSupportedYear
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "지정 된 연도 앞에 오는 연도에서 일 수를 가져옵니다는 <xref:System.Globalization.ChineseLunisolarCalendar.MinSupportedDateTime*>속성.</xref:System.Globalization.ChineseLunisolarCalendar.MinSupportedDateTime*>"
  remarks: "이 속성에는 384의 상수 값을 반환합니다."
  syntax:
    content: protected override int DaysInYearBeforeMinSupportedYear { get; }
    return:
      type: System.Int32
      description: "<xref:System.Globalization.ChineseLunisolarCalendar.MinSupportedDateTime*>.</xref:System.Globalization.ChineseLunisolarCalendar.MinSupportedDateTime*> 지정 된 연도의 이전 연도에서 일 수"
  overload: System.Globalization.ChineseLunisolarCalendar.DaysInYearBeforeMinSupportedYear*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.ChineseLunisolarCalendar.Eras
  id: Eras
  parent: System.Globalization.ChineseLunisolarCalendar
  langs:
  - csharp
  name: Eras
  nameWithType: ChineseLunisolarCalendar.Eras
  fullName: System.Globalization.ChineseLunisolarCalendar.Eras
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "날짜와 시간에서 현재 지 원하는 범위에 해당 하는 연대 가져옵니다 <xref href=&quot;System.Globalization.ChineseLunisolarCalendar&quot;> </xref> 개체입니다."
  syntax:
    content: public override int[] Eras { get; }
    return:
      type: System.Int32[]
      description: "관련 연대를 지정 하는 32 비트 부호 있는 정수 배열입니다. 반환 값에는 <xref href=&quot;System.Globalization.ChineseLunisolarCalendar&quot;> </xref> 개체는 항상 같음 요소가 두 개를 포함 하는 배열에서 <xref href=&quot;System.Globalization.ChineseLunisolarCalendar.ChineseEra&quot;> </xref> 값입니다."
  overload: System.Globalization.ChineseLunisolarCalendar.Eras*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.ChineseLunisolarCalendar.GetEra(System.DateTime)
  id: GetEra(System.DateTime)
  parent: System.Globalization.ChineseLunisolarCalendar
  langs:
  - csharp
  name: GetEra(DateTime)
  nameWithType: ChineseLunisolarCalendar.GetEra(DateTime)
  fullName: System.Globalization.ChineseLunisolarCalendar.GetEra(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "지정 된에 해당 하는 서 기 검색 <xref:System.DateTime>유형.</xref:System.DateTime>"
  syntax:
    content: public override int GetEra (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "<xref:System.DateTime>읽을 형식입니다.</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "연대를 나타내는 정수는 <code> time </code> 매개 변수입니다."
  overload: System.Globalization.ChineseLunisolarCalendar.GetEra*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>time</code>보다 작은 <xref:System.Globalization.ChineseLunisolarCalendar.MinSupportedDateTime*> 보다 큰 <xref:System.Globalization.ChineseLunisolarCalendar.MaxSupportedDateTime*>합니다."
  platform:
  - net462
- uid: System.Globalization.ChineseLunisolarCalendar.MaxSupportedDateTime
  id: MaxSupportedDateTime
  parent: System.Globalization.ChineseLunisolarCalendar
  langs:
  - csharp
  name: MaxSupportedDateTime
  nameWithType: ChineseLunisolarCalendar.MaxSupportedDateTime
  fullName: System.Globalization.ChineseLunisolarCalendar.MaxSupportedDateTime
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "최대 날짜와 시간에서 지 원하는 가져옵니다는 <xref href=&quot;System.Globalization.ChineseLunisolarCalendar&quot;> </xref> 클래스입니다."
  syntax:
    content: public override DateTime MaxSupportedDateTime { get; }
    return:
      type: System.DateTime
      description: "A &lt;xref:System.DateTime?displayProperty=fullName&gt; 은 약 생성자에는 일반 달력의 2101 년 1 월 28에 마지막 순간을 나타내는 형식을 `DateTime(2101, 1, 28, 23, 59, 59, 999)`합니다."
  overload: System.Globalization.ChineseLunisolarCalendar.MaxSupportedDateTime*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.ChineseLunisolarCalendar.MinSupportedDateTime
  id: MinSupportedDateTime
  parent: System.Globalization.ChineseLunisolarCalendar
  langs:
  - csharp
  name: MinSupportedDateTime
  nameWithType: ChineseLunisolarCalendar.MinSupportedDateTime
  fullName: System.Globalization.ChineseLunisolarCalendar.MinSupportedDateTime
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "최소 날짜와 시간에서 지 원하는 가져옵니다는 <xref href=&quot;System.Globalization.ChineseLunisolarCalendar&quot;> </xref> 클래스입니다."
  syntax:
    content: public override DateTime MinSupportedDateTime { get; }
    return:
      type: System.DateTime
      description: "A &lt;xref:System.DateTime?displayProperty=fullName&gt; 생성자에 해당 하는 일반 달력에서 1901 년 2 월 19를 나타내는 형식을 `DateTime(1901, 2, 19)`합니다."
  overload: System.Globalization.ChineseLunisolarCalendar.MinSupportedDateTime*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: System.Globalization.EastAsianLunisolarCalendar
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Globalization.ChineseLunisolarCalendar.#ctor
  parent: System.Globalization.ChineseLunisolarCalendar
  isExternal: false
  name: ChineseLunisolarCalendar()
  nameWithType: ChineseLunisolarCalendar.ChineseLunisolarCalendar()
  fullName: System.Globalization.ChineseLunisolarCalendar.ChineseLunisolarCalendar()
- uid: System.Globalization.ChineseLunisolarCalendar.ChineseEra
  parent: System.Globalization.ChineseLunisolarCalendar
  isExternal: false
  name: ChineseEra
  nameWithType: ChineseLunisolarCalendar.ChineseEra
  fullName: System.Globalization.ChineseLunisolarCalendar.ChineseEra
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Globalization.ChineseLunisolarCalendar.DaysInYearBeforeMinSupportedYear
  parent: System.Globalization.ChineseLunisolarCalendar
  isExternal: false
  name: DaysInYearBeforeMinSupportedYear
  nameWithType: ChineseLunisolarCalendar.DaysInYearBeforeMinSupportedYear
  fullName: System.Globalization.ChineseLunisolarCalendar.DaysInYearBeforeMinSupportedYear
- uid: System.Globalization.ChineseLunisolarCalendar.Eras
  parent: System.Globalization.ChineseLunisolarCalendar
  isExternal: false
  name: Eras
  nameWithType: ChineseLunisolarCalendar.Eras
  fullName: System.Globalization.ChineseLunisolarCalendar.Eras
- uid: System.Int32[]
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32[]
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Globalization.ChineseLunisolarCalendar.GetEra(System.DateTime)
  parent: System.Globalization.ChineseLunisolarCalendar
  isExternal: false
  name: GetEra(DateTime)
  nameWithType: ChineseLunisolarCalendar.GetEra(DateTime)
  fullName: System.Globalization.ChineseLunisolarCalendar.GetEra(DateTime)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Globalization.ChineseLunisolarCalendar.MaxSupportedDateTime
  parent: System.Globalization.ChineseLunisolarCalendar
  isExternal: false
  name: MaxSupportedDateTime
  nameWithType: ChineseLunisolarCalendar.MaxSupportedDateTime
  fullName: System.Globalization.ChineseLunisolarCalendar.MaxSupportedDateTime
- uid: System.Globalization.ChineseLunisolarCalendar.MinSupportedDateTime
  parent: System.Globalization.ChineseLunisolarCalendar
  isExternal: false
  name: MinSupportedDateTime
  nameWithType: ChineseLunisolarCalendar.MinSupportedDateTime
  fullName: System.Globalization.ChineseLunisolarCalendar.MinSupportedDateTime
- uid: System.Globalization.ChineseLunisolarCalendar.#ctor*
  parent: System.Globalization.ChineseLunisolarCalendar
  isExternal: false
  name: ChineseLunisolarCalendar
  nameWithType: ChineseLunisolarCalendar.ChineseLunisolarCalendar
- uid: System.Globalization.ChineseLunisolarCalendar.DaysInYearBeforeMinSupportedYear*
  parent: System.Globalization.ChineseLunisolarCalendar
  isExternal: false
  name: DaysInYearBeforeMinSupportedYear
  nameWithType: ChineseLunisolarCalendar.DaysInYearBeforeMinSupportedYear
- uid: System.Globalization.ChineseLunisolarCalendar.Eras*
  parent: System.Globalization.ChineseLunisolarCalendar
  isExternal: false
  name: Eras
  nameWithType: ChineseLunisolarCalendar.Eras
- uid: System.Globalization.ChineseLunisolarCalendar.GetEra*
  parent: System.Globalization.ChineseLunisolarCalendar
  isExternal: false
  name: GetEra
  nameWithType: ChineseLunisolarCalendar.GetEra
- uid: System.Globalization.ChineseLunisolarCalendar.MaxSupportedDateTime*
  parent: System.Globalization.ChineseLunisolarCalendar
  isExternal: false
  name: MaxSupportedDateTime
  nameWithType: ChineseLunisolarCalendar.MaxSupportedDateTime
- uid: System.Globalization.ChineseLunisolarCalendar.MinSupportedDateTime*
  parent: System.Globalization.ChineseLunisolarCalendar
  isExternal: false
  name: MinSupportedDateTime
  nameWithType: ChineseLunisolarCalendar.MinSupportedDateTime
