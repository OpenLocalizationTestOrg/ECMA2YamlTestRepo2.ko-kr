### YamlMime:ManagedReference
items:
- uid: System.Numerics.Quaternion
  id: Quaternion
  children:
  - System.Numerics.Quaternion.#ctor(System.Numerics.Vector3,System.Single)
  - System.Numerics.Quaternion.#ctor(System.Single,System.Single,System.Single,System.Single)
  - System.Numerics.Quaternion.Add(System.Numerics.Quaternion,System.Numerics.Quaternion)
  - System.Numerics.Quaternion.Concatenate(System.Numerics.Quaternion,System.Numerics.Quaternion)
  - System.Numerics.Quaternion.Conjugate(System.Numerics.Quaternion)
  - System.Numerics.Quaternion.CreateFromAxisAngle(System.Numerics.Vector3,System.Single)
  - System.Numerics.Quaternion.CreateFromRotationMatrix(System.Numerics.Matrix4x4)
  - System.Numerics.Quaternion.CreateFromYawPitchRoll(System.Single,System.Single,System.Single)
  - System.Numerics.Quaternion.Divide(System.Numerics.Quaternion,System.Numerics.Quaternion)
  - System.Numerics.Quaternion.Dot(System.Numerics.Quaternion,System.Numerics.Quaternion)
  - System.Numerics.Quaternion.Equals(System.Numerics.Quaternion)
  - System.Numerics.Quaternion.Equals(System.Object)
  - System.Numerics.Quaternion.GetHashCode
  - System.Numerics.Quaternion.Identity
  - System.Numerics.Quaternion.Inverse(System.Numerics.Quaternion)
  - System.Numerics.Quaternion.IsIdentity
  - System.Numerics.Quaternion.Length
  - System.Numerics.Quaternion.LengthSquared
  - System.Numerics.Quaternion.Lerp(System.Numerics.Quaternion,System.Numerics.Quaternion,System.Single)
  - System.Numerics.Quaternion.Multiply(System.Numerics.Quaternion,System.Numerics.Quaternion)
  - System.Numerics.Quaternion.Multiply(System.Numerics.Quaternion,System.Single)
  - System.Numerics.Quaternion.Negate(System.Numerics.Quaternion)
  - System.Numerics.Quaternion.Normalize(System.Numerics.Quaternion)
  - System.Numerics.Quaternion.op_Addition(System.Numerics.Quaternion,System.Numerics.Quaternion)
  - System.Numerics.Quaternion.op_Division(System.Numerics.Quaternion,System.Numerics.Quaternion)
  - System.Numerics.Quaternion.op_Equality(System.Numerics.Quaternion,System.Numerics.Quaternion)
  - System.Numerics.Quaternion.op_Inequality(System.Numerics.Quaternion,System.Numerics.Quaternion)
  - System.Numerics.Quaternion.op_Multiply(System.Numerics.Quaternion,System.Numerics.Quaternion)
  - System.Numerics.Quaternion.op_Multiply(System.Numerics.Quaternion,System.Single)
  - System.Numerics.Quaternion.op_Subtraction(System.Numerics.Quaternion,System.Numerics.Quaternion)
  - System.Numerics.Quaternion.op_UnaryNegation(System.Numerics.Quaternion)
  - System.Numerics.Quaternion.Slerp(System.Numerics.Quaternion,System.Numerics.Quaternion,System.Single)
  - System.Numerics.Quaternion.Subtract(System.Numerics.Quaternion,System.Numerics.Quaternion)
  - System.Numerics.Quaternion.ToString
  - System.Numerics.Quaternion.W
  - System.Numerics.Quaternion.X
  - System.Numerics.Quaternion.Y
  - System.Numerics.Quaternion.Z
  langs:
  - csharp
  name: Quaternion
  nameWithType: Quaternion
  fullName: System.Numerics.Quaternion
  type: Struct
  summary: "3 차원 물리적 회전을 인코드하는 데 사용 되는 벡터를 나타냅니다."
  remarks: "개체는 (x, y, z)에 대 한 벡터를 효율적으로 회전 하는 쿼터 니 언 구조체를 사용 하는 것이 각도 세타 여기서:```   w = cos(theta/2)   ```"
  syntax:
    content: 'public struct Quaternion : IEquatable<System.Numerics.Quaternion>'
  inheritance:
  - System.ValueType
  implements:
  - System.IEquatable<System.Numerics.Quaternion>
  platform:
  - net462
- uid: System.Numerics.Quaternion.#ctor(System.Numerics.Vector3,System.Single)
  id: '#ctor(System.Numerics.Vector3,System.Single)'
  parent: System.Numerics.Quaternion
  langs:
  - csharp
  name: Quaternion(Vector3,Single)
  nameWithType: Quaternion.Quaternion(Vector3,Single)
  fullName: System.Numerics.Quaternion.Quaternion(Vector3,Single)
  type: Constructor
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "지정된 된 벡터 및 회전 부분에서 쿼터 니 언을 만듭니다."
  syntax:
    content: public Quaternion (System.Numerics.Vector3 vectorPart, float scalarPart);
    parameters:
    - id: vectorPart
      type: System.Numerics.Vector3
      description: "쿼터 니 언의 벡터 부분입니다."
    - id: scalarPart
      type: System.Single
      description: "쿼터 니 언의 회전 부분입니다."
  overload: System.Numerics.Quaternion.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Quaternion.#ctor(System.Single,System.Single,System.Single,System.Single)
  id: '#ctor(System.Single,System.Single,System.Single,System.Single)'
  parent: System.Numerics.Quaternion
  langs:
  - csharp
  name: Quaternion(Single,Single,Single,Single)
  nameWithType: Quaternion.Quaternion(Single,Single,Single,Single)
  fullName: System.Numerics.Quaternion.Quaternion(Single,Single,Single,Single)
  type: Constructor
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "지정된 된 구성 요소에서 쿼터 니 언을 생성합니다."
  syntax:
    content: public Quaternion (float x, float y, float z, float w);
    parameters:
    - id: x
      type: System.Single
      description: "쿼터 니 언의 X 구성 요소에 할당할 값입니다."
    - id: y
      type: System.Single
      description: "쿼터 니 언의 Y 구성 요소에 할당할 값입니다."
    - id: z
      type: System.Single
      description: "쿼터 니 언의 Z 구성 요소에 할당할 값입니다."
    - id: w
      type: System.Single
      description: "쿼터 니 언의 W 구성 요소에 할당할 값입니다."
  overload: System.Numerics.Quaternion.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Quaternion.Add(System.Numerics.Quaternion,System.Numerics.Quaternion)
  id: Add(System.Numerics.Quaternion,System.Numerics.Quaternion)
  parent: System.Numerics.Quaternion
  langs:
  - csharp
  name: Add(Quaternion,Quaternion)
  nameWithType: Quaternion.Add(Quaternion,Quaternion)
  fullName: System.Numerics.Quaternion.Add(Quaternion,Quaternion)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "와 두 번째 쿼터 니 언의 해당 요소는 한 쿼터 니 언의 각 요소를 추가합니다."
  syntax:
    content: public static System.Numerics.Quaternion Add (System.Numerics.Quaternion value1, System.Numerics.Quaternion value2);
    parameters:
    - id: value1
      type: System.Numerics.Quaternion
      description: "첫 번째 쿼터 니 언입니다."
    - id: value2
      type: System.Numerics.Quaternion
      description: "두 번째 쿼터 니 언입니다."
    return:
      type: System.Numerics.Quaternion
      description: "합한 값을 포함 하는 쿼터 니 언 <code> value1 </code> 및 <code> value2 </code>합니다."
  overload: System.Numerics.Quaternion.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Quaternion.Concatenate(System.Numerics.Quaternion,System.Numerics.Quaternion)
  id: Concatenate(System.Numerics.Quaternion,System.Numerics.Quaternion)
  parent: System.Numerics.Quaternion
  langs:
  - csharp
  name: Concatenate(Quaternion,Quaternion)
  nameWithType: Quaternion.Concatenate(Quaternion,Quaternion)
  fullName: System.Numerics.Quaternion.Concatenate(Quaternion,Quaternion)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "두 쿼터 니 언을 연결 합니다."
  syntax:
    content: public static System.Numerics.Quaternion Concatenate (System.Numerics.Quaternion value1, System.Numerics.Quaternion value2);
    parameters:
    - id: value1
      type: System.Numerics.Quaternion
      description: "시리즈에서 첫 번째 쿼터 니 언 회전입니다."
    - id: value2
      type: System.Numerics.Quaternion
      description: "시리즈에서 두 번째 쿼터 니 언 회전입니다."
    return:
      type: System.Numerics.Quaternion
      description: "연결을 나타내는 새 쿼터 니 언을 <code> value1 </code> 회전과 <code> value2 </code> 회전 합니다."
  overload: System.Numerics.Quaternion.Concatenate*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Quaternion.Conjugate(System.Numerics.Quaternion)
  id: Conjugate(System.Numerics.Quaternion)
  parent: System.Numerics.Quaternion
  langs:
  - csharp
  name: Conjugate(Quaternion)
  nameWithType: Quaternion.Conjugate(Quaternion)
  fullName: System.Numerics.Quaternion.Conjugate(Quaternion)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "지정된 된 쿼터 니 언의 켤레를 반환 합니다."
  syntax:
    content: public static System.Numerics.Quaternion Conjugate (System.Numerics.Quaternion value);
    parameters:
    - id: value
      type: System.Numerics.Quaternion
      description: "쿼터 니 언입니다."
    return:
      type: System.Numerics.Quaternion
      description: "켤레 새 쿼터 니 언을 <xref uid=&quot;langword_csharp_value&quot; name=&quot;value&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Numerics.Quaternion.Conjugate*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Quaternion.CreateFromAxisAngle(System.Numerics.Vector3,System.Single)
  id: CreateFromAxisAngle(System.Numerics.Vector3,System.Single)
  parent: System.Numerics.Quaternion
  langs:
  - csharp
  name: CreateFromAxisAngle(Vector3,Single)
  nameWithType: Quaternion.CreateFromAxisAngle(Vector3,Single)
  fullName: System.Numerics.Quaternion.CreateFromAxisAngle(Vector3,Single)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "벡터와 벡터를 중심으로 회전할 각도에서 쿼터 니 언을 만듭니다."
  syntax:
    content: public static System.Numerics.Quaternion CreateFromAxisAngle (System.Numerics.Vector3 axis, float angle);
    parameters:
    - id: axis
      type: System.Numerics.Vector3
      description: "회전 중심으로 사용할 벡터입니다."
    - id: angle
      type: System.Single
      description: "라디안으로 벡터를 중심으로 회전할 각도입니다."
    return:
      type: System.Numerics.Quaternion
      description: "새로 만든된 쿼터 니 언입니다."
  overload: System.Numerics.Quaternion.CreateFromAxisAngle*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Quaternion.CreateFromRotationMatrix(System.Numerics.Matrix4x4)
  id: CreateFromRotationMatrix(System.Numerics.Matrix4x4)
  parent: System.Numerics.Quaternion
  langs:
  - csharp
  name: CreateFromRotationMatrix(Matrix4x4)
  nameWithType: Quaternion.CreateFromRotationMatrix(Matrix4x4)
  fullName: System.Numerics.Quaternion.CreateFromRotationMatrix(Matrix4x4)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "지정된 된 회전 행렬에서 쿼터 니 언을 만듭니다."
  syntax:
    content: public static System.Numerics.Quaternion CreateFromRotationMatrix (System.Numerics.Matrix4x4 matrix);
    parameters:
    - id: matrix
      type: System.Numerics.Matrix4x4
      description: "회전 행렬입니다."
    return:
      type: System.Numerics.Quaternion
      description: "새로 만든된 쿼터 니 언입니다."
  overload: System.Numerics.Quaternion.CreateFromRotationMatrix*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Quaternion.CreateFromYawPitchRoll(System.Single,System.Single,System.Single)
  id: CreateFromYawPitchRoll(System.Single,System.Single,System.Single)
  parent: System.Numerics.Quaternion
  langs:
  - csharp
  name: CreateFromYawPitchRoll(Single,Single,Single)
  nameWithType: Quaternion.CreateFromYawPitchRoll(Single,Single,Single)
  fullName: System.Numerics.Quaternion.CreateFromYawPitchRoll(Single,Single,Single)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "지정 된 요, 피치 및 롤에서 새 쿼터 니 언을 만듭니다."
  syntax:
    content: public static System.Numerics.Quaternion CreateFromYawPitchRoll (float yaw, float pitch, float roll);
    parameters:
    - id: yaw
      type: System.Single
      description: "Y 축 중심 라디안 단위로 요 각도입니다."
    - id: pitch
      type: System.Single
      description: "X 축을 라디안 단위로 피치 각도입니다."
    - id: roll
      type: System.Single
      description: "Z 축 중심 라디안 단위로 롤 각도입니다."
    return:
      type: System.Numerics.Quaternion
      description: "결과 쿼터 니 언입니다."
  overload: System.Numerics.Quaternion.CreateFromYawPitchRoll*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Quaternion.Divide(System.Numerics.Quaternion,System.Numerics.Quaternion)
  id: Divide(System.Numerics.Quaternion,System.Numerics.Quaternion)
  parent: System.Numerics.Quaternion
  langs:
  - csharp
  name: Divide(Quaternion,Quaternion)
  nameWithType: Quaternion.Divide(Quaternion,Quaternion)
  fullName: System.Numerics.Quaternion.Divide(Quaternion,Quaternion)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "한 쿼터 니 언을 두 번째 쿼터 니 언으로 나눕니다."
  syntax:
    content: public static System.Numerics.Quaternion Divide (System.Numerics.Quaternion value1, System.Numerics.Quaternion value2);
    parameters:
    - id: value1
      type: System.Numerics.Quaternion
      description: "피제수입니다."
    - id: value2
      type: System.Numerics.Quaternion
      description: "제 수입니다."
    return:
      type: System.Numerics.Quaternion
      description: "나눈 결과로 생성 되는 쿼터 니 언 <code> value1 </code> 여 <code> value2 </code>합니다."
  overload: System.Numerics.Quaternion.Divide*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Quaternion.Dot(System.Numerics.Quaternion,System.Numerics.Quaternion)
  id: Dot(System.Numerics.Quaternion,System.Numerics.Quaternion)
  parent: System.Numerics.Quaternion
  langs:
  - csharp
  name: Dot(Quaternion,Quaternion)
  nameWithType: Quaternion.Dot(Quaternion,Quaternion)
  fullName: System.Numerics.Quaternion.Dot(Quaternion,Quaternion)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "두 쿼터 니 언의 내적을 계산 합니다."
  syntax:
    content: public static float Dot (System.Numerics.Quaternion quaternion1, System.Numerics.Quaternion quaternion2);
    parameters:
    - id: quaternion1
      type: System.Numerics.Quaternion
      description: "첫 번째 쿼터 니 언입니다."
    - id: quaternion2
      type: System.Numerics.Quaternion
      description: "두 번째 쿼터 니 언입니다."
    return:
      type: System.Single
      description: "내적입니다."
  overload: System.Numerics.Quaternion.Dot*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Quaternion.Equals(System.Numerics.Quaternion)
  id: Equals(System.Numerics.Quaternion)
  parent: System.Numerics.Quaternion
  langs:
  - csharp
  name: Equals(Quaternion)
  nameWithType: Quaternion.Equals(Quaternion)
  fullName: System.Numerics.Quaternion.Equals(Quaternion)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "이 인스턴스와 다른 쿼터 니 언이 같은지 여부를 나타내는 값을 반환 합니다."
  remarks: "두 쿼터 니 언 각각의 해당 구성 요소와 같은지는 것과 같습니다."
  syntax:
    content: public bool Equals (System.Numerics.Quaternion other);
    parameters:
    - id: other
      type: System.Numerics.Quaternion
      description: "다른 쿼터 니 언입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>두 쿼터 니 언이 같으면; 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Numerics.Quaternion.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Quaternion.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Numerics.Quaternion
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: Quaternion.Equals(Object)
  fullName: System.Numerics.Quaternion.Equals(Object)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "이 인스턴스와 지정 된 개체가 같은지 여부를 나타내는 값을 반환 합니다."
  remarks: "현재 인스턴스 및 `obj` 같은지 경우 `obj` 는 <xref:System.Numerics.Quaternion>개체 주소와 각 행렬의 해당 구성 요소.</xref:System.Numerics.Quaternion>"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "현재 인스턴스와 비교할 개체입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>하는 경우 현재 인스턴스 및 <code> obj </code> 같고, 그렇지 않으면, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> <xref uid=&quot;langword_csharp_&quot; name=&quot;&quot; href=&quot;&quot;> </xref>합니다. If <code>obj</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, the method returns <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Numerics.Quaternion.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Quaternion.GetHashCode
  id: GetHashCode
  parent: System.Numerics.Quaternion
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: Quaternion.GetHashCode()
  fullName: System.Numerics.Quaternion.GetHashCode()
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "이 인스턴스에 대 한 해시 코드를 반환합니다."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "해시 코드입니다."
  overload: System.Numerics.Quaternion.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Quaternion.Identity
  id: Identity
  parent: System.Numerics.Quaternion
  langs:
  - csharp
  name: Identity
  nameWithType: Quaternion.Identity
  fullName: System.Numerics.Quaternion.Identity
  type: Property
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "회전 없음을 나타내는 쿼터 니 언을 가져옵니다."
  syntax:
    content: public static System.Numerics.Quaternion Identity { get; }
    return:
      type: System.Numerics.Quaternion
      description: "값을 포함 하는 쿼터 니 언을 `(0, 0, 0, 1)`합니다."
  overload: System.Numerics.Quaternion.Identity*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Quaternion.Inverse(System.Numerics.Quaternion)
  id: Inverse(System.Numerics.Quaternion)
  parent: System.Numerics.Quaternion
  langs:
  - csharp
  name: Inverse(Quaternion)
  nameWithType: Quaternion.Inverse(Quaternion)
  fullName: System.Numerics.Quaternion.Inverse(Quaternion)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "쿼터 니 언의 역 수를 반환 합니다."
  syntax:
    content: public static System.Numerics.Quaternion Inverse (System.Numerics.Quaternion value);
    parameters:
    - id: value
      type: System.Numerics.Quaternion
      description: "쿼터 니 언입니다."
    return:
      type: System.Numerics.Quaternion
      description: "역된 쿼터 니 언입니다."
  overload: System.Numerics.Quaternion.Inverse*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Quaternion.IsIdentity
  id: IsIdentity
  parent: System.Numerics.Quaternion
  langs:
  - csharp
  name: IsIdentity
  nameWithType: Quaternion.IsIdentity
  fullName: System.Numerics.Quaternion.IsIdentity
  type: Property
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "현재 인스턴스가 id 쿼터 니 언 인지 여부를 나타내는 값을 가져옵니다."
  syntax:
    content: public bool IsIdentity { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>현재 인스턴스가 id 쿼터 니 언이; 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Numerics.Quaternion.IsIdentity*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Quaternion.Length
  id: Length
  parent: System.Numerics.Quaternion
  langs:
  - csharp
  name: Length()
  nameWithType: Quaternion.Length()
  fullName: System.Numerics.Quaternion.Length()
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "쿼터 니 언 길이 계산합니다."
  syntax:
    content: public float Length ();
    parameters: []
    return:
      type: System.Single
      description: "계산 된 쿼터 니 언 길이입니다."
  overload: System.Numerics.Quaternion.Length*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Quaternion.LengthSquared
  id: LengthSquared
  parent: System.Numerics.Quaternion
  langs:
  - csharp
  name: LengthSquared()
  nameWithType: Quaternion.LengthSquared()
  fullName: System.Numerics.Quaternion.LengthSquared()
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "쿼터 니 언 길이 제곱된을 계산합니다."
  syntax:
    content: public float LengthSquared ();
    parameters: []
    return:
      type: System.Single
      description: "쿼터 니 언 길이 제곱입니다."
  overload: System.Numerics.Quaternion.LengthSquared*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Quaternion.Lerp(System.Numerics.Quaternion,System.Numerics.Quaternion,System.Single)
  id: Lerp(System.Numerics.Quaternion,System.Numerics.Quaternion,System.Single)
  parent: System.Numerics.Quaternion
  langs:
  - csharp
  name: Lerp(Quaternion,Quaternion,Single)
  nameWithType: Quaternion.Lerp(Quaternion,Quaternion,Single)
  fullName: System.Numerics.Quaternion.Lerp(Quaternion,Quaternion,Single)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "두 쿼터 니 언 두 번째 쿼터 니 언의 가중치를 지정 하는 값에 따라 사이의 선형 보간을 수행 합니다."
  syntax:
    content: public static System.Numerics.Quaternion Lerp (System.Numerics.Quaternion quaternion1, System.Numerics.Quaternion quaternion2, float amount);
    parameters:
    - id: quaternion1
      type: System.Numerics.Quaternion
      description: "첫 번째 쿼터 니 언입니다."
    - id: quaternion2
      type: System.Numerics.Quaternion
      description: "두 번째 쿼터 니 언입니다."
    - id: amount
      type: System.Single
      description: "상대적 가중치 `quaternion2` 보간에서 합니다."
    return:
      type: System.Numerics.Quaternion
      description: "보간된 쿼터 니 언입니다."
  overload: System.Numerics.Quaternion.Lerp*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Quaternion.Multiply(System.Numerics.Quaternion,System.Numerics.Quaternion)
  id: Multiply(System.Numerics.Quaternion,System.Numerics.Quaternion)
  parent: System.Numerics.Quaternion
  langs:
  - csharp
  name: Multiply(Quaternion,Quaternion)
  nameWithType: Quaternion.Multiply(Quaternion,Quaternion)
  fullName: System.Numerics.Quaternion.Multiply(Quaternion,Quaternion)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "두 쿼터 니 언을 곱한 결과로 생성 되는 쿼터 니 언을 반환 합니다."
  syntax:
    content: public static System.Numerics.Quaternion Multiply (System.Numerics.Quaternion value1, System.Numerics.Quaternion value2);
    parameters:
    - id: value1
      type: System.Numerics.Quaternion
      description: "첫 번째 쿼터 니 언입니다."
    - id: value2
      type: System.Numerics.Quaternion
      description: "두 번째 쿼터 니 언입니다."
    return:
      type: System.Numerics.Quaternion
      description: "쿼터 니 언 곱입니다."
  overload: System.Numerics.Quaternion.Multiply*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Quaternion.Multiply(System.Numerics.Quaternion,System.Single)
  id: Multiply(System.Numerics.Quaternion,System.Single)
  parent: System.Numerics.Quaternion
  langs:
  - csharp
  name: Multiply(Quaternion,Single)
  nameWithType: Quaternion.Multiply(Quaternion,Single)
  fullName: System.Numerics.Quaternion.Multiply(Quaternion,Single)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "지정된 된 쿼터 니 언의 모든 구성 요소를 스칼라 인수로 크기 조정으로 인해 쿼터 니 언을 반환 합니다."
  syntax:
    content: public static System.Numerics.Quaternion Multiply (System.Numerics.Quaternion value1, float value2);
    parameters:
    - id: value1
      type: System.Numerics.Quaternion
      description: "원본 쿼터 니 언입니다."
    - id: value2
      type: System.Single
      description: "스칼라 값입니다."
    return:
      type: System.Numerics.Quaternion
      description: "크기 조정 된 쿼터 니 언입니다."
  overload: System.Numerics.Quaternion.Multiply*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Quaternion.Negate(System.Numerics.Quaternion)
  id: Negate(System.Numerics.Quaternion)
  parent: System.Numerics.Quaternion
  langs:
  - csharp
  name: Negate(Quaternion)
  nameWithType: Quaternion.Negate(Quaternion)
  fullName: System.Numerics.Quaternion.Negate(Quaternion)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "쿼터 니 언의 각 구성 요소 부호를 반대로 바꿉니다."
  syntax:
    content: public static System.Numerics.Quaternion Negate (System.Numerics.Quaternion value);
    parameters:
    - id: value
      type: System.Numerics.Quaternion
      description: "부정 하는 쿼터 니 언입니다."
    return:
      type: System.Numerics.Quaternion
      description: "부정 된 쿼터 니 언입니다."
  overload: System.Numerics.Quaternion.Negate*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Quaternion.Normalize(System.Numerics.Quaternion)
  id: Normalize(System.Numerics.Quaternion)
  parent: System.Numerics.Quaternion
  langs:
  - csharp
  name: Normalize(Quaternion)
  nameWithType: Quaternion.Normalize(Quaternion)
  fullName: System.Numerics.Quaternion.Normalize(Quaternion)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "지정 된 각 구성 요소를 나누고 <xref href=&quot;System.Numerics.Quaternion&quot;> </xref> 해당 길이로 합니다."
  syntax:
    content: public static System.Numerics.Quaternion Normalize (System.Numerics.Quaternion value);
    parameters:
    - id: value
      type: System.Numerics.Quaternion
      description: "정규화 할 쿼터 니 언입니다."
    return:
      type: System.Numerics.Quaternion
      description: "정규화 된 쿼터 니 언입니다."
  overload: System.Numerics.Quaternion.Normalize*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Quaternion.op_Addition(System.Numerics.Quaternion,System.Numerics.Quaternion)
  id: op_Addition(System.Numerics.Quaternion,System.Numerics.Quaternion)
  parent: System.Numerics.Quaternion
  langs:
  - csharp
  name: op_Addition(Quaternion,Quaternion)
  nameWithType: Quaternion.op_Addition(Quaternion,Quaternion)
  fullName: System.Numerics.Quaternion.op_Addition(Quaternion,Quaternion)
  type: Operator
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "와 두 번째 쿼터 니 언의 해당 요소는 한 쿼터 니 언의 각 요소를 추가합니다."
  remarks: "추가 메서드가 정의 대 한 더하기 연산자의 하세요 <xref:System.Numerics.Quaternion>개체입니다.</xref:System.Numerics.Quaternion>"
  syntax:
    content: public static System.Numerics.Quaternion op_Addition (System.Numerics.Quaternion value1, System.Numerics.Quaternion value2);
    parameters:
    - id: value1
      type: System.Numerics.Quaternion
      description: "첫 번째 쿼터 니 언입니다."
    - id: value2
      type: System.Numerics.Quaternion
      description: "두 번째 쿼터 니 언입니다."
    return:
      type: System.Numerics.Quaternion
      description: "합한 값을 포함 하는 쿼터 니 언 <code> value1 </code> 및 <code> value2 </code>합니다."
  overload: System.Numerics.Quaternion.op_Addition*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Quaternion.op_Division(System.Numerics.Quaternion,System.Numerics.Quaternion)
  id: op_Division(System.Numerics.Quaternion,System.Numerics.Quaternion)
  parent: System.Numerics.Quaternion
  langs:
  - csharp
  name: op_Division(Quaternion,Quaternion)
  nameWithType: Quaternion.op_Division(Quaternion,Quaternion)
  fullName: System.Numerics.Quaternion.op_Division(Quaternion,Quaternion)
  type: Operator
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "한 쿼터 니 언을 두 번째 쿼터 니 언으로 나눕니다."
  remarks: "나누기 메서드 정의 대 한 나누기 연산에서 구하는 <xref:System.Numerics.Quaternion>개체입니다.</xref:System.Numerics.Quaternion>"
  syntax:
    content: public static System.Numerics.Quaternion op_Division (System.Numerics.Quaternion value1, System.Numerics.Quaternion value2);
    parameters:
    - id: value1
      type: System.Numerics.Quaternion
      description: "피제수입니다."
    - id: value2
      type: System.Numerics.Quaternion
      description: "제 수입니다."
    return:
      type: System.Numerics.Quaternion
      description: "나눈 결과로 생성 되는 쿼터 니 언 <code> value1 </code> 여 <code> value2 </code>합니다."
  overload: System.Numerics.Quaternion.op_Division*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Quaternion.op_Equality(System.Numerics.Quaternion,System.Numerics.Quaternion)
  id: op_Equality(System.Numerics.Quaternion,System.Numerics.Quaternion)
  parent: System.Numerics.Quaternion
  langs:
  - csharp
  name: op_Equality(Quaternion,Quaternion)
  nameWithType: Quaternion.op_Equality(Quaternion,Quaternion)
  fullName: System.Numerics.Quaternion.op_Equality(Quaternion,Quaternion)
  type: Operator
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "두 쿼터 니 언이 같은지 여부를 나타내는 값을 반환 합니다."
  remarks: "두 쿼터 니 언 각각의 해당 구성 요소와 같은지는 것과 같습니다.       에 대 한 같음 연산자의 작업을 정의 하는 같음 메서드 <xref:System.Numerics.Quaternion>개체입니다.</xref:System.Numerics.Quaternion>"
  syntax:
    content: public static bool op_Equality (System.Numerics.Quaternion value1, System.Numerics.Quaternion value2);
    parameters:
    - id: value1
      type: System.Numerics.Quaternion
      description: "비교할 첫 번째 쿼터 니 언입니다."
    - id: value2
      type: System.Numerics.Quaternion
      description: "비교할 두 번째 쿼터 니 언입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>두 쿼터 니 언이 같으면; 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Numerics.Quaternion.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Quaternion.op_Inequality(System.Numerics.Quaternion,System.Numerics.Quaternion)
  id: op_Inequality(System.Numerics.Quaternion,System.Numerics.Quaternion)
  parent: System.Numerics.Quaternion
  langs:
  - csharp
  name: op_Inequality(Quaternion,Quaternion)
  nameWithType: Quaternion.op_Inequality(Quaternion,Quaternion)
  fullName: System.Numerics.Quaternion.op_Inequality(Quaternion,Quaternion)
  type: Operator
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "두 쿼터 니 언이 같은지 여부를 나타내는 값을 반환 합니다."
  syntax:
    content: public static bool op_Inequality (System.Numerics.Quaternion value1, System.Numerics.Quaternion value2);
    parameters:
    - id: value1
      type: System.Numerics.Quaternion
      description: "비교할 첫 번째 쿼터 니 언입니다."
    - id: value2
      type: System.Numerics.Quaternion
      description: "비교할 두 번째 쿼터 니 언입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>value1</code> and <code>value2</code> are not equal; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Numerics.Quaternion.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Quaternion.op_Multiply(System.Numerics.Quaternion,System.Numerics.Quaternion)
  id: op_Multiply(System.Numerics.Quaternion,System.Numerics.Quaternion)
  parent: System.Numerics.Quaternion
  langs:
  - csharp
  name: op_Multiply(Quaternion,Quaternion)
  nameWithType: Quaternion.op_Multiply(Quaternion,Quaternion)
  fullName: System.Numerics.Quaternion.op_Multiply(Quaternion,Quaternion)
  type: Operator
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "두 쿼터 니 언을 곱한 결과로 생성 되는 쿼터 니 언을 반환 합니다."
  remarks: "방법에 대 한 곱하기 연산자의 작업을 정의 하는 곱하기 <xref:System.Numerics.Quaternion>개체입니다.</xref:System.Numerics.Quaternion>"
  syntax:
    content: public static System.Numerics.Quaternion op_Multiply (System.Numerics.Quaternion value1, System.Numerics.Quaternion value2);
    parameters:
    - id: value1
      type: System.Numerics.Quaternion
      description: "첫 번째 쿼터 니 언입니다."
    - id: value2
      type: System.Numerics.Quaternion
      description: "두 번째 쿼터 니 언입니다."
    return:
      type: System.Numerics.Quaternion
      description: "쿼터 니 언 곱입니다."
  overload: System.Numerics.Quaternion.op_Multiply*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Quaternion.op_Multiply(System.Numerics.Quaternion,System.Single)
  id: op_Multiply(System.Numerics.Quaternion,System.Single)
  parent: System.Numerics.Quaternion
  langs:
  - csharp
  name: op_Multiply(Quaternion,Single)
  nameWithType: Quaternion.op_Multiply(Quaternion,Single)
  fullName: System.Numerics.Quaternion.op_Multiply(Quaternion,Single)
  type: Operator
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "지정된 된 쿼터 니 언의 모든 구성 요소를 스칼라 인수로 크기 조정으로 인해 쿼터 니 언을 반환 합니다."
  remarks: "방법에 대 한 곱하기 연산자의 작업을 정의 하는 곱하기 <xref:System.Numerics.Quaternion>개체입니다.</xref:System.Numerics.Quaternion>"
  syntax:
    content: public static System.Numerics.Quaternion op_Multiply (System.Numerics.Quaternion value1, float value2);
    parameters:
    - id: value1
      type: System.Numerics.Quaternion
      description: "원본 쿼터 니 언입니다."
    - id: value2
      type: System.Single
      description: "스칼라 값입니다."
    return:
      type: System.Numerics.Quaternion
      description: "크기 조정 된 쿼터 니 언입니다."
  overload: System.Numerics.Quaternion.op_Multiply*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Quaternion.op_Subtraction(System.Numerics.Quaternion,System.Numerics.Quaternion)
  id: op_Subtraction(System.Numerics.Quaternion,System.Numerics.Quaternion)
  parent: System.Numerics.Quaternion
  langs:
  - csharp
  name: op_Subtraction(Quaternion,Quaternion)
  nameWithType: Quaternion.op_Subtraction(Quaternion,Quaternion)
  fullName: System.Numerics.Quaternion.op_Subtraction(Quaternion,Quaternion)
  type: Operator
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "첫 번째 쿼터 니 언의 해당 요소에서 두 번째 쿼터 니 언의 각 요소를 뺍니다."
  remarks: "빼기 연산자에 대 한 작업을 정의 하는 빼기 메서드 <xref:System.Numerics.Quaternion>개체입니다.</xref:System.Numerics.Quaternion>"
  syntax:
    content: public static System.Numerics.Quaternion op_Subtraction (System.Numerics.Quaternion value1, System.Numerics.Quaternion value2);
    parameters:
    - id: value1
      type: System.Numerics.Quaternion
      description: "첫 번째 쿼터 니 언입니다."
    - id: value2
      type: System.Numerics.Quaternion
      description: "두 번째 쿼터 니 언입니다."
    return:
      type: System.Numerics.Quaternion
      description: "각 요소에서 뺀 결과로 생성 되는 값을 포함 하는 쿼터 니 언 <code> value2 </code> 니 언의 해당 요소에서 <code> value1 </code>합니다."
  overload: System.Numerics.Quaternion.op_Subtraction*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Quaternion.op_UnaryNegation(System.Numerics.Quaternion)
  id: op_UnaryNegation(System.Numerics.Quaternion)
  parent: System.Numerics.Quaternion
  langs:
  - csharp
  name: op_UnaryNegation(Quaternion)
  nameWithType: Quaternion.op_UnaryNegation(Quaternion)
  fullName: System.Numerics.Quaternion.op_UnaryNegation(Quaternion)
  type: Operator
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "쿼터 니 언의 각 구성 요소 부호를 반대로 바꿉니다."
  remarks: "에 대 한 단항 부정 연산자의 작업을 정의 하는 UnaryNegation 메서드 <xref:System.Numerics.Quaternion>개체입니다.</xref:System.Numerics.Quaternion>"
  syntax:
    content: public static System.Numerics.Quaternion op_UnaryNegation (System.Numerics.Quaternion value);
    parameters:
    - id: value
      type: System.Numerics.Quaternion
      description: "부정 하는 쿼터 니 언입니다."
    return:
      type: System.Numerics.Quaternion
      description: "부정 된 쿼터 니 언입니다."
  overload: System.Numerics.Quaternion.op_UnaryNegation*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Quaternion.Slerp(System.Numerics.Quaternion,System.Numerics.Quaternion,System.Single)
  id: Slerp(System.Numerics.Quaternion,System.Numerics.Quaternion,System.Single)
  parent: System.Numerics.Quaternion
  langs:
  - csharp
  name: Slerp(Quaternion,Quaternion,Single)
  nameWithType: Quaternion.Slerp(Quaternion,Quaternion,Single)
  fullName: System.Numerics.Quaternion.Slerp(Quaternion,Quaternion,Single)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "구면 선형 보간을 사용 하 여 두 쿼터 니 언을 보간합니다."
  syntax:
    content: public static System.Numerics.Quaternion Slerp (System.Numerics.Quaternion quaternion1, System.Numerics.Quaternion quaternion2, float amount);
    parameters:
    - id: quaternion1
      type: System.Numerics.Quaternion
      description: "첫 번째 쿼터 니 언입니다."
    - id: quaternion2
      type: System.Numerics.Quaternion
      description: "두 번째 쿼터 니 언입니다."
    - id: amount
      type: System.Single
      description: "보간에서 두 번째 쿼터 니 언의 상대적 가중치입니다."
    return:
      type: System.Numerics.Quaternion
      description: "보간된 쿼터 니 언입니다."
  overload: System.Numerics.Quaternion.Slerp*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Quaternion.Subtract(System.Numerics.Quaternion,System.Numerics.Quaternion)
  id: Subtract(System.Numerics.Quaternion,System.Numerics.Quaternion)
  parent: System.Numerics.Quaternion
  langs:
  - csharp
  name: Subtract(Quaternion,Quaternion)
  nameWithType: Quaternion.Subtract(Quaternion,Quaternion)
  fullName: System.Numerics.Quaternion.Subtract(Quaternion,Quaternion)
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "첫 번째 쿼터 니 언의 해당 요소에서 두 번째 쿼터 니 언의 각 요소를 뺍니다."
  syntax:
    content: public static System.Numerics.Quaternion Subtract (System.Numerics.Quaternion value1, System.Numerics.Quaternion value2);
    parameters:
    - id: value1
      type: System.Numerics.Quaternion
      description: "첫 번째 쿼터 니 언입니다."
    - id: value2
      type: System.Numerics.Quaternion
      description: "두 번째 쿼터 니 언입니다."
    return:
      type: System.Numerics.Quaternion
      description: "각 요소에서 뺀 결과로 생성 되는 값을 포함 하는 쿼터 니 언 <code> value2 </code> 니 언의 해당 요소에서 <code> value1 </code>합니다."
  overload: System.Numerics.Quaternion.Subtract*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Quaternion.ToString
  id: ToString
  parent: System.Numerics.Quaternion
  langs:
  - csharp
  name: ToString()
  nameWithType: Quaternion.ToString()
  fullName: System.Numerics.Quaternion.ToString()
  type: Method
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "이 쿼터 니이 언을 나타내는 문자열을 반환 합니다."
  remarks: "반환 된 문자열의 숫자 값은 현재 문화권의 규칙을 사용 하 여 형식이 지정 됩니다. 예를 들어 EN-US 문화권에 대 한 반환 된 문자열으로 나타날 수 있습니다 `{X:1.1 Y:2.2 Z:3.3 W:4.4}`합니다."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "이 쿼터 니 언의 문자열 표현입니다."
  overload: System.Numerics.Quaternion.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Quaternion.W
  id: W
  parent: System.Numerics.Quaternion
  langs:
  - csharp
  name: W
  nameWithType: Quaternion.W
  fullName: System.Numerics.Quaternion.W
  type: Field
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "쿼터 니 언의 회전 구성 요소입니다."
  syntax:
    content: public float W;
    return:
      type: System.Single
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Quaternion.X
  id: X
  parent: System.Numerics.Quaternion
  langs:
  - csharp
  name: X
  nameWithType: Quaternion.X
  fullName: System.Numerics.Quaternion.X
  type: Field
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "쿼터 니 언 벡터 구성 요소의 X 값입니다."
  syntax:
    content: public float X;
    return:
      type: System.Single
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Quaternion.Y
  id: Y
  parent: System.Numerics.Quaternion
  langs:
  - csharp
  name: Y
  nameWithType: Quaternion.Y
  fullName: System.Numerics.Quaternion.Y
  type: Field
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "쿼터 니 언 벡터 구성 요소의 Y 값입니다."
  syntax:
    content: public float Y;
    return:
      type: System.Single
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Numerics.Quaternion.Z
  id: Z
  parent: System.Numerics.Quaternion
  langs:
  - csharp
  name: Z
  nameWithType: Quaternion.Z
  fullName: System.Numerics.Quaternion.Z
  type: Field
  assemblies:
  - System.Numerics
  namespace: System.Numerics
  summary: "쿼터 니 언 벡터 구성 요소의 Z 값입니다."
  syntax:
    content: public float Z;
    return:
      type: System.Single
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Numerics.Quaternion.#ctor(System.Numerics.Vector3,System.Single)
  parent: System.Numerics.Quaternion
  isExternal: false
  name: Quaternion(Vector3,Single)
  nameWithType: Quaternion.Quaternion(Vector3,Single)
  fullName: System.Numerics.Quaternion.Quaternion(Vector3,Single)
- uid: System.Numerics.Vector3
  parent: System.Numerics
  isExternal: false
  name: Vector3
  nameWithType: Vector3
  fullName: System.Numerics.Vector3
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Numerics.Quaternion.#ctor(System.Single,System.Single,System.Single,System.Single)
  parent: System.Numerics.Quaternion
  isExternal: false
  name: Quaternion(Single,Single,Single,Single)
  nameWithType: Quaternion.Quaternion(Single,Single,Single,Single)
  fullName: System.Numerics.Quaternion.Quaternion(Single,Single,Single,Single)
- uid: System.Numerics.Quaternion.Add(System.Numerics.Quaternion,System.Numerics.Quaternion)
  parent: System.Numerics.Quaternion
  isExternal: false
  name: Add(Quaternion,Quaternion)
  nameWithType: Quaternion.Add(Quaternion,Quaternion)
  fullName: System.Numerics.Quaternion.Add(Quaternion,Quaternion)
- uid: System.Numerics.Quaternion
  parent: System.Numerics
  isExternal: false
  name: Quaternion
  nameWithType: Quaternion
  fullName: System.Numerics.Quaternion
- uid: System.Numerics.Quaternion.Concatenate(System.Numerics.Quaternion,System.Numerics.Quaternion)
  parent: System.Numerics.Quaternion
  isExternal: false
  name: Concatenate(Quaternion,Quaternion)
  nameWithType: Quaternion.Concatenate(Quaternion,Quaternion)
  fullName: System.Numerics.Quaternion.Concatenate(Quaternion,Quaternion)
- uid: System.Numerics.Quaternion.Conjugate(System.Numerics.Quaternion)
  parent: System.Numerics.Quaternion
  isExternal: false
  name: Conjugate(Quaternion)
  nameWithType: Quaternion.Conjugate(Quaternion)
  fullName: System.Numerics.Quaternion.Conjugate(Quaternion)
- uid: System.Numerics.Quaternion.CreateFromAxisAngle(System.Numerics.Vector3,System.Single)
  parent: System.Numerics.Quaternion
  isExternal: false
  name: CreateFromAxisAngle(Vector3,Single)
  nameWithType: Quaternion.CreateFromAxisAngle(Vector3,Single)
  fullName: System.Numerics.Quaternion.CreateFromAxisAngle(Vector3,Single)
- uid: System.Numerics.Quaternion.CreateFromRotationMatrix(System.Numerics.Matrix4x4)
  parent: System.Numerics.Quaternion
  isExternal: false
  name: CreateFromRotationMatrix(Matrix4x4)
  nameWithType: Quaternion.CreateFromRotationMatrix(Matrix4x4)
  fullName: System.Numerics.Quaternion.CreateFromRotationMatrix(Matrix4x4)
- uid: System.Numerics.Matrix4x4
  parent: System.Numerics
  isExternal: false
  name: Matrix4x4
  nameWithType: Matrix4x4
  fullName: System.Numerics.Matrix4x4
- uid: System.Numerics.Quaternion.CreateFromYawPitchRoll(System.Single,System.Single,System.Single)
  parent: System.Numerics.Quaternion
  isExternal: false
  name: CreateFromYawPitchRoll(Single,Single,Single)
  nameWithType: Quaternion.CreateFromYawPitchRoll(Single,Single,Single)
  fullName: System.Numerics.Quaternion.CreateFromYawPitchRoll(Single,Single,Single)
- uid: System.Numerics.Quaternion.Divide(System.Numerics.Quaternion,System.Numerics.Quaternion)
  parent: System.Numerics.Quaternion
  isExternal: false
  name: Divide(Quaternion,Quaternion)
  nameWithType: Quaternion.Divide(Quaternion,Quaternion)
  fullName: System.Numerics.Quaternion.Divide(Quaternion,Quaternion)
- uid: System.Numerics.Quaternion.Dot(System.Numerics.Quaternion,System.Numerics.Quaternion)
  parent: System.Numerics.Quaternion
  isExternal: false
  name: Dot(Quaternion,Quaternion)
  nameWithType: Quaternion.Dot(Quaternion,Quaternion)
  fullName: System.Numerics.Quaternion.Dot(Quaternion,Quaternion)
- uid: System.Numerics.Quaternion.Equals(System.Numerics.Quaternion)
  parent: System.Numerics.Quaternion
  isExternal: false
  name: Equals(Quaternion)
  nameWithType: Quaternion.Equals(Quaternion)
  fullName: System.Numerics.Quaternion.Equals(Quaternion)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Numerics.Quaternion.Equals(System.Object)
  parent: System.Numerics.Quaternion
  isExternal: false
  name: Equals(Object)
  nameWithType: Quaternion.Equals(Object)
  fullName: System.Numerics.Quaternion.Equals(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Numerics.Quaternion.GetHashCode
  parent: System.Numerics.Quaternion
  isExternal: false
  name: GetHashCode()
  nameWithType: Quaternion.GetHashCode()
  fullName: System.Numerics.Quaternion.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Numerics.Quaternion.Identity
  parent: System.Numerics.Quaternion
  isExternal: false
  name: Identity
  nameWithType: Quaternion.Identity
  fullName: System.Numerics.Quaternion.Identity
- uid: System.Numerics.Quaternion.Inverse(System.Numerics.Quaternion)
  parent: System.Numerics.Quaternion
  isExternal: false
  name: Inverse(Quaternion)
  nameWithType: Quaternion.Inverse(Quaternion)
  fullName: System.Numerics.Quaternion.Inverse(Quaternion)
- uid: System.Numerics.Quaternion.IsIdentity
  parent: System.Numerics.Quaternion
  isExternal: false
  name: IsIdentity
  nameWithType: Quaternion.IsIdentity
  fullName: System.Numerics.Quaternion.IsIdentity
- uid: System.Numerics.Quaternion.Length
  parent: System.Numerics.Quaternion
  isExternal: false
  name: Length()
  nameWithType: Quaternion.Length()
  fullName: System.Numerics.Quaternion.Length()
- uid: System.Numerics.Quaternion.LengthSquared
  parent: System.Numerics.Quaternion
  isExternal: false
  name: LengthSquared()
  nameWithType: Quaternion.LengthSquared()
  fullName: System.Numerics.Quaternion.LengthSquared()
- uid: System.Numerics.Quaternion.Lerp(System.Numerics.Quaternion,System.Numerics.Quaternion,System.Single)
  parent: System.Numerics.Quaternion
  isExternal: false
  name: Lerp(Quaternion,Quaternion,Single)
  nameWithType: Quaternion.Lerp(Quaternion,Quaternion,Single)
  fullName: System.Numerics.Quaternion.Lerp(Quaternion,Quaternion,Single)
- uid: System.Numerics.Quaternion.Multiply(System.Numerics.Quaternion,System.Numerics.Quaternion)
  parent: System.Numerics.Quaternion
  isExternal: false
  name: Multiply(Quaternion,Quaternion)
  nameWithType: Quaternion.Multiply(Quaternion,Quaternion)
  fullName: System.Numerics.Quaternion.Multiply(Quaternion,Quaternion)
- uid: System.Numerics.Quaternion.Multiply(System.Numerics.Quaternion,System.Single)
  parent: System.Numerics.Quaternion
  isExternal: false
  name: Multiply(Quaternion,Single)
  nameWithType: Quaternion.Multiply(Quaternion,Single)
  fullName: System.Numerics.Quaternion.Multiply(Quaternion,Single)
- uid: System.Numerics.Quaternion.Negate(System.Numerics.Quaternion)
  parent: System.Numerics.Quaternion
  isExternal: false
  name: Negate(Quaternion)
  nameWithType: Quaternion.Negate(Quaternion)
  fullName: System.Numerics.Quaternion.Negate(Quaternion)
- uid: System.Numerics.Quaternion.Normalize(System.Numerics.Quaternion)
  parent: System.Numerics.Quaternion
  isExternal: false
  name: Normalize(Quaternion)
  nameWithType: Quaternion.Normalize(Quaternion)
  fullName: System.Numerics.Quaternion.Normalize(Quaternion)
- uid: System.Numerics.Quaternion.op_Addition(System.Numerics.Quaternion,System.Numerics.Quaternion)
  parent: System.Numerics.Quaternion
  isExternal: false
  name: op_Addition(Quaternion,Quaternion)
  nameWithType: Quaternion.op_Addition(Quaternion,Quaternion)
  fullName: System.Numerics.Quaternion.op_Addition(Quaternion,Quaternion)
- uid: System.Numerics.Quaternion.op_Division(System.Numerics.Quaternion,System.Numerics.Quaternion)
  parent: System.Numerics.Quaternion
  isExternal: false
  name: op_Division(Quaternion,Quaternion)
  nameWithType: Quaternion.op_Division(Quaternion,Quaternion)
  fullName: System.Numerics.Quaternion.op_Division(Quaternion,Quaternion)
- uid: System.Numerics.Quaternion.op_Equality(System.Numerics.Quaternion,System.Numerics.Quaternion)
  parent: System.Numerics.Quaternion
  isExternal: false
  name: op_Equality(Quaternion,Quaternion)
  nameWithType: Quaternion.op_Equality(Quaternion,Quaternion)
  fullName: System.Numerics.Quaternion.op_Equality(Quaternion,Quaternion)
- uid: System.Numerics.Quaternion.op_Inequality(System.Numerics.Quaternion,System.Numerics.Quaternion)
  parent: System.Numerics.Quaternion
  isExternal: false
  name: op_Inequality(Quaternion,Quaternion)
  nameWithType: Quaternion.op_Inequality(Quaternion,Quaternion)
  fullName: System.Numerics.Quaternion.op_Inequality(Quaternion,Quaternion)
- uid: System.Numerics.Quaternion.op_Multiply(System.Numerics.Quaternion,System.Numerics.Quaternion)
  parent: System.Numerics.Quaternion
  isExternal: false
  name: op_Multiply(Quaternion,Quaternion)
  nameWithType: Quaternion.op_Multiply(Quaternion,Quaternion)
  fullName: System.Numerics.Quaternion.op_Multiply(Quaternion,Quaternion)
- uid: System.Numerics.Quaternion.op_Multiply(System.Numerics.Quaternion,System.Single)
  parent: System.Numerics.Quaternion
  isExternal: false
  name: op_Multiply(Quaternion,Single)
  nameWithType: Quaternion.op_Multiply(Quaternion,Single)
  fullName: System.Numerics.Quaternion.op_Multiply(Quaternion,Single)
- uid: System.Numerics.Quaternion.op_Subtraction(System.Numerics.Quaternion,System.Numerics.Quaternion)
  parent: System.Numerics.Quaternion
  isExternal: false
  name: op_Subtraction(Quaternion,Quaternion)
  nameWithType: Quaternion.op_Subtraction(Quaternion,Quaternion)
  fullName: System.Numerics.Quaternion.op_Subtraction(Quaternion,Quaternion)
- uid: System.Numerics.Quaternion.op_UnaryNegation(System.Numerics.Quaternion)
  parent: System.Numerics.Quaternion
  isExternal: false
  name: op_UnaryNegation(Quaternion)
  nameWithType: Quaternion.op_UnaryNegation(Quaternion)
  fullName: System.Numerics.Quaternion.op_UnaryNegation(Quaternion)
- uid: System.Numerics.Quaternion.Slerp(System.Numerics.Quaternion,System.Numerics.Quaternion,System.Single)
  parent: System.Numerics.Quaternion
  isExternal: false
  name: Slerp(Quaternion,Quaternion,Single)
  nameWithType: Quaternion.Slerp(Quaternion,Quaternion,Single)
  fullName: System.Numerics.Quaternion.Slerp(Quaternion,Quaternion,Single)
- uid: System.Numerics.Quaternion.Subtract(System.Numerics.Quaternion,System.Numerics.Quaternion)
  parent: System.Numerics.Quaternion
  isExternal: false
  name: Subtract(Quaternion,Quaternion)
  nameWithType: Quaternion.Subtract(Quaternion,Quaternion)
  fullName: System.Numerics.Quaternion.Subtract(Quaternion,Quaternion)
- uid: System.Numerics.Quaternion.ToString
  parent: System.Numerics.Quaternion
  isExternal: false
  name: ToString()
  nameWithType: Quaternion.ToString()
  fullName: System.Numerics.Quaternion.ToString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Numerics.Quaternion.W
  parent: System.Numerics.Quaternion
  isExternal: false
  name: W
  nameWithType: Quaternion.W
  fullName: System.Numerics.Quaternion.W
- uid: System.Numerics.Quaternion.X
  parent: System.Numerics.Quaternion
  isExternal: false
  name: X
  nameWithType: Quaternion.X
  fullName: System.Numerics.Quaternion.X
- uid: System.Numerics.Quaternion.Y
  parent: System.Numerics.Quaternion
  isExternal: false
  name: Y
  nameWithType: Quaternion.Y
  fullName: System.Numerics.Quaternion.Y
- uid: System.Numerics.Quaternion.Z
  parent: System.Numerics.Quaternion
  isExternal: false
  name: Z
  nameWithType: Quaternion.Z
  fullName: System.Numerics.Quaternion.Z
- uid: System.Numerics.Quaternion.#ctor*
  parent: System.Numerics.Quaternion
  isExternal: false
  name: Quaternion
  nameWithType: Quaternion.Quaternion
- uid: System.Numerics.Quaternion.Add*
  parent: System.Numerics.Quaternion
  isExternal: false
  name: Add
  nameWithType: Quaternion.Add
- uid: System.Numerics.Quaternion.Concatenate*
  parent: System.Numerics.Quaternion
  isExternal: false
  name: Concatenate
  nameWithType: Quaternion.Concatenate
- uid: System.Numerics.Quaternion.Conjugate*
  parent: System.Numerics.Quaternion
  isExternal: false
  name: Conjugate
  nameWithType: Quaternion.Conjugate
- uid: System.Numerics.Quaternion.CreateFromAxisAngle*
  parent: System.Numerics.Quaternion
  isExternal: false
  name: CreateFromAxisAngle
  nameWithType: Quaternion.CreateFromAxisAngle
- uid: System.Numerics.Quaternion.CreateFromRotationMatrix*
  parent: System.Numerics.Quaternion
  isExternal: false
  name: CreateFromRotationMatrix
  nameWithType: Quaternion.CreateFromRotationMatrix
- uid: System.Numerics.Quaternion.CreateFromYawPitchRoll*
  parent: System.Numerics.Quaternion
  isExternal: false
  name: CreateFromYawPitchRoll
  nameWithType: Quaternion.CreateFromYawPitchRoll
- uid: System.Numerics.Quaternion.Divide*
  parent: System.Numerics.Quaternion
  isExternal: false
  name: Divide
  nameWithType: Quaternion.Divide
- uid: System.Numerics.Quaternion.Dot*
  parent: System.Numerics.Quaternion
  isExternal: false
  name: Dot
  nameWithType: Quaternion.Dot
- uid: System.Numerics.Quaternion.Equals*
  parent: System.Numerics.Quaternion
  isExternal: false
  name: Equals
  nameWithType: Quaternion.Equals
- uid: System.Numerics.Quaternion.GetHashCode*
  parent: System.Numerics.Quaternion
  isExternal: false
  name: GetHashCode
  nameWithType: Quaternion.GetHashCode
- uid: System.Numerics.Quaternion.Identity*
  parent: System.Numerics.Quaternion
  isExternal: false
  name: Identity
  nameWithType: Quaternion.Identity
- uid: System.Numerics.Quaternion.Inverse*
  parent: System.Numerics.Quaternion
  isExternal: false
  name: Inverse
  nameWithType: Quaternion.Inverse
- uid: System.Numerics.Quaternion.IsIdentity*
  parent: System.Numerics.Quaternion
  isExternal: false
  name: IsIdentity
  nameWithType: Quaternion.IsIdentity
- uid: System.Numerics.Quaternion.Length*
  parent: System.Numerics.Quaternion
  isExternal: false
  name: Length
  nameWithType: Quaternion.Length
- uid: System.Numerics.Quaternion.LengthSquared*
  parent: System.Numerics.Quaternion
  isExternal: false
  name: LengthSquared
  nameWithType: Quaternion.LengthSquared
- uid: System.Numerics.Quaternion.Lerp*
  parent: System.Numerics.Quaternion
  isExternal: false
  name: Lerp
  nameWithType: Quaternion.Lerp
- uid: System.Numerics.Quaternion.Multiply*
  parent: System.Numerics.Quaternion
  isExternal: false
  name: Multiply
  nameWithType: Quaternion.Multiply
- uid: System.Numerics.Quaternion.Negate*
  parent: System.Numerics.Quaternion
  isExternal: false
  name: Negate
  nameWithType: Quaternion.Negate
- uid: System.Numerics.Quaternion.Normalize*
  parent: System.Numerics.Quaternion
  isExternal: false
  name: Normalize
  nameWithType: Quaternion.Normalize
- uid: System.Numerics.Quaternion.op_Addition*
  parent: System.Numerics.Quaternion
  isExternal: false
  name: op_Addition
  nameWithType: Quaternion.op_Addition
- uid: System.Numerics.Quaternion.op_Division*
  parent: System.Numerics.Quaternion
  isExternal: false
  name: op_Division
  nameWithType: Quaternion.op_Division
- uid: System.Numerics.Quaternion.op_Equality*
  parent: System.Numerics.Quaternion
  isExternal: false
  name: op_Equality
  nameWithType: Quaternion.op_Equality
- uid: System.Numerics.Quaternion.op_Inequality*
  parent: System.Numerics.Quaternion
  isExternal: false
  name: op_Inequality
  nameWithType: Quaternion.op_Inequality
- uid: System.Numerics.Quaternion.op_Multiply*
  parent: System.Numerics.Quaternion
  isExternal: false
  name: op_Multiply
  nameWithType: Quaternion.op_Multiply
- uid: System.Numerics.Quaternion.op_Subtraction*
  parent: System.Numerics.Quaternion
  isExternal: false
  name: op_Subtraction
  nameWithType: Quaternion.op_Subtraction
- uid: System.Numerics.Quaternion.op_UnaryNegation*
  parent: System.Numerics.Quaternion
  isExternal: false
  name: op_UnaryNegation
  nameWithType: Quaternion.op_UnaryNegation
- uid: System.Numerics.Quaternion.Slerp*
  parent: System.Numerics.Quaternion
  isExternal: false
  name: Slerp
  nameWithType: Quaternion.Slerp
- uid: System.Numerics.Quaternion.Subtract*
  parent: System.Numerics.Quaternion
  isExternal: false
  name: Subtract
  nameWithType: Quaternion.Subtract
- uid: System.Numerics.Quaternion.ToString*
  parent: System.Numerics.Quaternion
  isExternal: false
  name: ToString
  nameWithType: Quaternion.ToString
