### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Configuration.IdentityModelCachesElement
  id: IdentityModelCachesElement
  children:
  - System.IdentityModel.Configuration.IdentityModelCachesElement.#ctor
  - System.IdentityModel.Configuration.IdentityModelCachesElement.IsConfigured
  - System.IdentityModel.Configuration.IdentityModelCachesElement.Properties
  - System.IdentityModel.Configuration.IdentityModelCachesElement.SessionSecurityTokenCache
  - System.IdentityModel.Configuration.IdentityModelCachesElement.TokenReplayCache
  langs:
  - csharp
  name: IdentityModelCachesElement
  nameWithType: IdentityModelCachesElement
  fullName: System.IdentityModel.Configuration.IdentityModelCachesElement
  type: Class
  summary: "나타냅니다는 <xref uid=&quot;langword_csharp_&lt;caches&gt;&quot; name=&quot;&lt;caches&gt;&quot; href=&quot;&quot;> </xref> 구성 파일의 요소입니다. 이 클래스는 상속 될 수 없습니다."
  remarks: "`<caches>` 요소 WIF에 대 한 캐싱 서비스를 구성 합니다. 세션 보안 토큰 캐시의 형식과 사용 하도록 토큰 재생 캐시의 유형을 등록 합니다. 서비스 수준에서 지정할 수는 `<identityConfiguration>` 요소 또는 아래에 보안 토큰 처리기 컬렉션에는 `<securityTokenHandlerConfiguration>` 요소입니다. `Caches` 의 속성은 <xref:System.IdentityModel.Configuration.IdentityConfigurationElement>클래스와의 <xref:System.IdentityModel.Configuration.SecurityTokenHandlerConfigurationElement>클래스 IdentityModelCachesElement의 인스턴스가.</xref:System.IdentityModel.Configuration.SecurityTokenHandlerConfigurationElement> </xref:System.IdentityModel.Configuration.IdentityConfigurationElement> 구성 된 캐시 구성 파일을 읽은 후 <xref:System.IdentityModel.Configuration.IdentityModelCaches>클래스</xref:System.IdentityModel.Configuration.IdentityModelCaches> 표시 됩니다."
  syntax:
    content: 'public sealed class IdentityModelCachesElement : System.Configuration.ConfigurationElement'
  inheritance:
  - System.Object
  - System.Configuration.ConfigurationElement
  implements: []
  inheritedMembers:
  - System.Configuration.ConfigurationElement.CurrentConfiguration
  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)
  - System.Configuration.ConfigurationElement.ElementInformation
  - System.Configuration.ConfigurationElement.ElementProperty
  - System.Configuration.ConfigurationElement.Equals(System.Object)
  - System.Configuration.ConfigurationElement.EvaluationContext
  - System.Configuration.ConfigurationElement.GetHashCode
  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)
  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)
  - System.Configuration.ConfigurationElement.HasContext
  - System.Configuration.ConfigurationElement.Init
  - System.Configuration.ConfigurationElement.InitializeDefault
  - System.Configuration.ConfigurationElement.IsModified
  - System.Configuration.ConfigurationElement.IsReadOnly
  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)
  - System.Configuration.ConfigurationElement.Item(System.String)
  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)
  - System.Configuration.ConfigurationElement.LockAllAttributesExcept
  - System.Configuration.ConfigurationElement.LockAllElementsExcept
  - System.Configuration.ConfigurationElement.LockAttributes
  - System.Configuration.ConfigurationElement.LockElements
  - System.Configuration.ConfigurationElement.LockItem
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)
  - System.Configuration.ConfigurationElement.PostDeserialize
  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)
  - System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationElement.ResetModified
  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)
  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)
  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)
  - System.Configuration.ConfigurationElement.SetReadOnly
  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  platform:
  - net462
- uid: System.IdentityModel.Configuration.IdentityModelCachesElement.#ctor
  id: '#ctor'
  parent: System.IdentityModel.Configuration.IdentityModelCachesElement
  langs:
  - csharp
  name: IdentityModelCachesElement()
  nameWithType: IdentityModelCachesElement.IdentityModelCachesElement()
  fullName: System.IdentityModel.Configuration.IdentityModelCachesElement.IdentityModelCachesElement()
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Configuration
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.IdentityModel.Configuration.IdentityModelCachesElement&quot;> </xref> 클래스입니다."
  syntax:
    content: public IdentityModelCachesElement ();
    parameters: []
  overload: System.IdentityModel.Configuration.IdentityModelCachesElement.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Configuration.IdentityModelCachesElement.IsConfigured
  id: IsConfigured
  parent: System.IdentityModel.Configuration.IdentityModelCachesElement
  langs:
  - csharp
  name: IsConfigured
  nameWithType: IdentityModelCachesElement.IsConfigured
  fullName: System.IdentityModel.Configuration.IdentityModelCachesElement.IsConfigured
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Configuration
  summary: "이 요소에 구성 되어 있는지 여부를 나타내는 값을 가져옵니다."
  syntax:
    content: public bool IsConfigured { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>요소가; 구성 된 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.IdentityModel.Configuration.IdentityModelCachesElement.IsConfigured*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Configuration.IdentityModelCachesElement.Properties
  id: Properties
  parent: System.IdentityModel.Configuration.IdentityModelCachesElement
  langs:
  - csharp
  name: Properties
  nameWithType: IdentityModelCachesElement.Properties
  fullName: System.IdentityModel.Configuration.IdentityModelCachesElement.Properties
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Configuration
  syntax:
    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }
    return:
      type: System.Configuration.ConfigurationPropertyCollection
      description: "추가할 수 있습니다."
  overload: System.IdentityModel.Configuration.IdentityModelCachesElement.Properties*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Configuration.IdentityModelCachesElement.SessionSecurityTokenCache
  id: SessionSecurityTokenCache
  parent: System.IdentityModel.Configuration.IdentityModelCachesElement
  langs:
  - csharp
  name: SessionSecurityTokenCache
  nameWithType: IdentityModelCachesElement.SessionSecurityTokenCache
  fullName: System.IdentityModel.Configuration.IdentityModelCachesElement.SessionSecurityTokenCache
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Configuration
  summary: "가져오거나는 <xref:System.Type>세션 토큰 캐시의.</xref:System.Type>"
  remarks: "이 속성은 선택 사항입니다. 해당 하는 `<sessionSecurityTokenCache>` 아래에 지정 된 요소는 `<caches>`합니다. 세션 보안 토큰을 저장 하는 데 캐시의 형식을 지정 합니다. 모든 세션 토큰 캐시에서 파생 되어야 합니다.<xref:System.IdentityModel.Tokens.SessionSecurityTokenCache></xref:System.IdentityModel.Tokens.SessionSecurityTokenCache>"
  syntax:
    content: public System.IdentityModel.Configuration.CustomTypeElement SessionSecurityTokenCache { get; set; }
    return:
      type: System.IdentityModel.Configuration.CustomTypeElement
      description: "세션 토큰 캐시의 형식입니다. 형식에서 파생 되어야 [System.IdentityModel.Tokens.SessionSecurityTokenCache](~/add/includes/ajax-current-ext-md.md)합니다."
  overload: System.IdentityModel.Configuration.IdentityModelCachesElement.SessionSecurityTokenCache*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Configuration.IdentityModelCachesElement.TokenReplayCache
  id: TokenReplayCache
  parent: System.IdentityModel.Configuration.IdentityModelCachesElement
  langs:
  - csharp
  name: TokenReplayCache
  nameWithType: IdentityModelCachesElement.TokenReplayCache
  fullName: System.IdentityModel.Configuration.IdentityModelCachesElement.TokenReplayCache
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Configuration
  summary: "가져오거나는 <xref:System.Type>토큰의 캐시를 재생 합니다.</xref:System.Type>"
  remarks: "이 속성은 선택 사항입니다. 해당 하는 `<tokenReplayCache>` 아래에 지정 된 요소는 `<caches>` 요소입니다. 재생 된 토큰을 검색 하는 데 캐시의 형식을 지정 합니다. 모든 재생 캐시에서 파생 되어야 <xref:System.IdentityModel.Tokens.TokenReplayCache>재생 검색이 사용 하도록 설정 되었는지는 `<tokenReplayDetection>` 요소.</xref:System.IdentityModel.Tokens.TokenReplayCache> 이 요소는 <xref:System.IdentityModel.Configuration.TokenReplayDetectionElement>클래스</xref:System.IdentityModel.Configuration.TokenReplayDetectionElement> 표시"
  syntax:
    content: public System.IdentityModel.Configuration.CustomTypeElement TokenReplayCache { get; set; }
    return:
      type: System.IdentityModel.Configuration.CustomTypeElement
      description: "토큰 재생 캐시의 형식입니다. 형식에서 파생 되어야 [System.IdentityModel.Tokens.TokenReplayCache](~/add/includes/ajax-current-ext-md.md)합니다."
  overload: System.IdentityModel.Configuration.IdentityModelCachesElement.TokenReplayCache*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.ConfigurationElement
  isExternal: false
  name: System.Configuration.ConfigurationElement
- uid: System.IdentityModel.Configuration.IdentityModelCachesElement.#ctor
  parent: System.IdentityModel.Configuration.IdentityModelCachesElement
  isExternal: false
  name: IdentityModelCachesElement()
  nameWithType: IdentityModelCachesElement.IdentityModelCachesElement()
  fullName: System.IdentityModel.Configuration.IdentityModelCachesElement.IdentityModelCachesElement()
- uid: System.IdentityModel.Configuration.IdentityModelCachesElement.IsConfigured
  parent: System.IdentityModel.Configuration.IdentityModelCachesElement
  isExternal: false
  name: IsConfigured
  nameWithType: IdentityModelCachesElement.IsConfigured
  fullName: System.IdentityModel.Configuration.IdentityModelCachesElement.IsConfigured
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Configuration.IdentityModelCachesElement.Properties
  parent: System.IdentityModel.Configuration.IdentityModelCachesElement
  isExternal: false
  name: Properties
  nameWithType: IdentityModelCachesElement.Properties
  fullName: System.IdentityModel.Configuration.IdentityModelCachesElement.Properties
- uid: System.Configuration.ConfigurationPropertyCollection
  parent: System.Configuration
  isExternal: false
  name: ConfigurationPropertyCollection
  nameWithType: ConfigurationPropertyCollection
  fullName: System.Configuration.ConfigurationPropertyCollection
- uid: System.IdentityModel.Configuration.IdentityModelCachesElement.SessionSecurityTokenCache
  parent: System.IdentityModel.Configuration.IdentityModelCachesElement
  isExternal: false
  name: SessionSecurityTokenCache
  nameWithType: IdentityModelCachesElement.SessionSecurityTokenCache
  fullName: System.IdentityModel.Configuration.IdentityModelCachesElement.SessionSecurityTokenCache
- uid: System.IdentityModel.Configuration.CustomTypeElement
  parent: System.IdentityModel.Configuration
  isExternal: false
  name: CustomTypeElement
  nameWithType: CustomTypeElement
  fullName: System.IdentityModel.Configuration.CustomTypeElement
- uid: System.IdentityModel.Configuration.IdentityModelCachesElement.TokenReplayCache
  parent: System.IdentityModel.Configuration.IdentityModelCachesElement
  isExternal: false
  name: TokenReplayCache
  nameWithType: IdentityModelCachesElement.TokenReplayCache
  fullName: System.IdentityModel.Configuration.IdentityModelCachesElement.TokenReplayCache
- uid: System.IdentityModel.Configuration.IdentityModelCachesElement.#ctor*
  parent: System.IdentityModel.Configuration.IdentityModelCachesElement
  isExternal: false
  name: IdentityModelCachesElement
  nameWithType: IdentityModelCachesElement.IdentityModelCachesElement
- uid: System.IdentityModel.Configuration.IdentityModelCachesElement.IsConfigured*
  parent: System.IdentityModel.Configuration.IdentityModelCachesElement
  isExternal: false
  name: IsConfigured
  nameWithType: IdentityModelCachesElement.IsConfigured
- uid: System.IdentityModel.Configuration.IdentityModelCachesElement.Properties*
  parent: System.IdentityModel.Configuration.IdentityModelCachesElement
  isExternal: false
  name: Properties
  nameWithType: IdentityModelCachesElement.Properties
- uid: System.IdentityModel.Configuration.IdentityModelCachesElement.SessionSecurityTokenCache*
  parent: System.IdentityModel.Configuration.IdentityModelCachesElement
  isExternal: false
  name: SessionSecurityTokenCache
  nameWithType: IdentityModelCachesElement.SessionSecurityTokenCache
- uid: System.IdentityModel.Configuration.IdentityModelCachesElement.TokenReplayCache*
  parent: System.IdentityModel.Configuration.IdentityModelCachesElement
  isExternal: false
  name: TokenReplayCache
  nameWithType: IdentityModelCachesElement.TokenReplayCache
