### YamlMime:ManagedReference
items:
- uid: System.Windows.Documents.Serialization.SerializerWriter
  id: SerializerWriter
  children:
  - System.Windows.Documents.Serialization.SerializerWriter.#ctor
  - System.Windows.Documents.Serialization.SerializerWriter.CancelAsync
  - System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator
  - System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator(System.Printing.PrintTicket,System.Printing.PrintTicket)
  - System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.DocumentPaginator)
  - System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocument)
  - System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocumentSequence)
  - System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedPage)
  - System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Media.Visual)
  - System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket)
  - System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocument,System.Printing.PrintTicket)
  - System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocumentSequence,System.Printing.PrintTicket)
  - System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedPage,System.Printing.PrintTicket)
  - System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Media.Visual,System.Printing.PrintTicket)
  - System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.DocumentPaginator)
  - System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocument)
  - System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence)
  - System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedPage)
  - System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Media.Visual)
  - System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.DocumentPaginator,System.Object)
  - System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket)
  - System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocument,System.Object)
  - System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocument,System.Printing.PrintTicket)
  - System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence,System.Object)
  - System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence,System.Printing.PrintTicket)
  - System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedPage,System.Object)
  - System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedPage,System.Printing.PrintTicket)
  - System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Media.Visual,System.Object)
  - System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Media.Visual,System.Printing.PrintTicket)
  - System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket,System.Object)
  - System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocument,System.Printing.PrintTicket,System.Object)
  - System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence,System.Printing.PrintTicket,System.Object)
  - System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedPage,System.Printing.PrintTicket,System.Object)
  - System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Media.Visual,System.Printing.PrintTicket,System.Object)
  - System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled
  - System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted
  - System.Windows.Documents.Serialization.SerializerWriter.WritingPrintTicketRequired
  - System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged
  langs:
  - csharp
  name: SerializerWriter
  nameWithType: SerializerWriter
  fullName: System.Windows.Documents.Serialization.SerializerWriter
  type: Class
  summary: "추상 메서드 및 플러그 인 문서 출력 직렬 변환기를 구현 하는 데 필요한 이벤트를 정의 합니다."
  remarks: ''
  example:
  - "The following example illustrates the use of SerializerWriter.  \n  \n [!code-cs[DocumentSerialize#DocSerializePlugIn](~/add/codesnippet/csharp/DocumentSerialize/ThumbViewer.cs#docserializeplugin)]  \n  \n [!code-cs[DocumentSerialize#DocSerializeFileFilter](~/add/codesnippet/csharp/DocumentSerialize/ThumbViewer.cs#docserializefilefilter)]"
  syntax:
    content: public abstract class SerializerWriter
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.#ctor
  id: '#ctor'
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: SerializerWriter()
  nameWithType: SerializerWriter.SerializerWriter()
  fullName: System.Windows.Documents.Serialization.SerializerWriter.SerializerWriter()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Windows.Documents.Serialization.SerializerWriter&quot;> </xref> 클래스입니다."
  remarks: "인스턴스 <xref:System.Windows.Documents.Serialization.SerializerWriter>를 사용 하 여 만들는 <xref:System.Windows.Documents.Serialization.SerializerProvider.CreateSerializerWriter%2A>의 메서드는 <xref:System.Windows.Documents.Serialization.SerializerProvider>개체가 아니라는 <xref:System.Windows.Documents.Serialization.ISerializerFactory.CreateSerializerWriter%2A>의 메서드는 <xref:System.Windows.Documents.Serialization.ISerializerFactory>개체입니다.</xref:System.Windows.Documents.Serialization.ISerializerFactory> </xref:System.Windows.Documents.Serialization.ISerializerFactory.CreateSerializerWriter%2A> </xref:System.Windows.Documents.Serialization.SerializerProvider> </xref:System.Windows.Documents.Serialization.SerializerProvider.CreateSerializerWriter%2A> </xref:System.Windows.Documents.Serialization.SerializerWriter>"
  example:
  - "The following example shows how to create a <xref:System.Windows.Documents.Serialization.SerializerWriter> using the <xref:System.Windows.Documents.Serialization.SerializerProvider>.<xref:System.Windows.Documents.Serialization.SerializerProvider.CreateSerializerWriter%2A> method.  \n  \n [!code-cs[DocumentSerialize#DocSerializePlugIn](~/add/codesnippet/csharp/DocumentSerialize/ThumbViewer.cs#docserializeplugin)]"
  syntax:
    content: protected SerializerWriter ();
    parameters: []
  overload: System.Windows.Documents.Serialization.SerializerWriter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.CancelAsync
  id: CancelAsync
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: CancelAsync()
  nameWithType: SerializerWriter.CancelAsync()
  fullName: System.Windows.Documents.Serialization.SerializerWriter.CancelAsync()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "파생된 클래스에서 재정의 되 면 비동기 쓰기 작업을 취소 합니다."
  syntax:
    content: public abstract void CancelAsync ();
    parameters: []
  overload: System.Windows.Documents.Serialization.SerializerWriter.CancelAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator
  id: CreateVisualsCollator
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: CreateVisualsCollator()
  nameWithType: SerializerWriter.CreateVisualsCollator()
  fullName: System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "파생된 클래스에서 재정의 되는 경우는 <xref href=&quot;System.Windows.Documents.Serialization.SerializerWriterCollator&quot;> </xref> 한 부씩 인쇄 쓰기 <xref href=&quot;System.Windows.Media.Visual&quot;> </xref> 요소입니다."
  remarks: ''
  example:
  - "The following example shows the use of the CreateVisualsCollator method.  \n  \n [!code-cs[XpsSave#CreateAndWriteToVisualsCollator](~/add/codesnippet/csharp/XpsSave/XpsSaveHelper.cs#createandwritetovisualscollator)]\n [!code-vb[XpsSave#CreateAndWriteToVisualsCollator](~/add/codesnippet/visualbasic/xpssave/xpssavehelper.vb#createandwritetovisualscollator)]"
  syntax:
    content: public abstract System.Windows.Documents.Serialization.SerializerWriterCollator CreateVisualsCollator ();
    parameters: []
    return:
      type: System.Windows.Documents.Serialization.SerializerWriterCollator
      description: "A <xref href=&quot;System.Windows.Documents.Serialization.SerializerWriterCollator&quot;> </xref> 한 부씩 인쇄 쓰기 <xref href=&quot;System.Windows.Media.Visual&quot;> </xref> 요소를 문서 출력 serialization <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  overload: System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator(System.Printing.PrintTicket,System.Printing.PrintTicket)
  id: CreateVisualsCollator(System.Printing.PrintTicket,System.Printing.PrintTicket)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: CreateVisualsCollator(PrintTicket,PrintTicket)
  nameWithType: SerializerWriter.CreateVisualsCollator(PrintTicket,PrintTicket)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator(PrintTicket,PrintTicket)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "파생된 클래스에서 재정의 되는 경우는 <xref href=&quot;System.Windows.Documents.Serialization.SerializerWriterCollator&quot;> </xref> 한 부씩 인쇄 쓰기 <xref href=&quot;System.Windows.Media.Visual&quot;> </xref> 요소와 지정 된 인쇄 티켓과 함께 합니다."
  remarks: "`documentSequencePT`또는 `documentPT` 수 `null` 기본 인쇄 설정이 없는 경우.       이 메서드가 유효성을 검사 하지 않거나 <xref:System.Printing.PrintQueue>.</xref:System.Printing.PrintQueue> 특정 작업에 대해 지정 된 인쇄 티켓과 수정  필요한 경우 사용 하 여는 <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName>만드는 메서드를 한 <xref:System.Printing.PrintQueue>-특정 <xref:System.Printing.PrintTicket>지정된 된 프린터에 대 한 유효한.</xref:System.Printing.PrintTicket> </xref:System.Printing.PrintQueue> </xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName>"
  example:
  - "The following example shows the use of the <xref:System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator%2A> method.  \n  \n [!code-cs[XpsSave#CreateAndWriteToVisualsCollator](~/add/codesnippet/csharp/XpsSave/XpsSaveHelper.cs#createandwritetovisualscollator)]\n [!code-vb[XpsSave#CreateAndWriteToVisualsCollator](~/add/codesnippet/visualbasic/xpssave/xpssavehelper.vb#createandwritetovisualscollator)]"
  syntax:
    content: public abstract System.Windows.Documents.Serialization.SerializerWriterCollator CreateVisualsCollator (System.Printing.PrintTicket documentSequencePT, System.Printing.PrintTicket documentPT);
    parameters:
    - id: documentSequencePT
      type: System.Printing.PrintTicket
      description: "에 대 한 기본 인쇄 <xref href=&quot;System.Windows.Documents.FixedDocumentSequence&quot;> </xref> 콘텐츠입니다."
    - id: documentPT
      type: System.Printing.PrintTicket
      description: "에 대 한 기본 인쇄 <xref href=&quot;System.Windows.Documents.FixedDocument&quot;> </xref> 콘텐츠입니다."
    return:
      type: System.Windows.Documents.Serialization.SerializerWriterCollator
      description: "A <xref href=&quot;System.Windows.Documents.Serialization.SerializerWriterCollator&quot;> </xref> 한 부씩 인쇄 쓰기 <xref href=&quot;System.Windows.Media.Visual&quot;> </xref> 요소를 문서 출력 serialization <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  overload: System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.DocumentPaginator)
  id: Write(System.Windows.Documents.DocumentPaginator)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: Write(DocumentPaginator)
  nameWithType: SerializerWriter.Write(DocumentPaginator)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.Write(DocumentPaginator)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "파생된 클래스에서 재정의할 경우, 동기적으로의 콘텐츠를 씁니다는 주어진 <xref href=&quot;System.Windows.Documents.DocumentPaginator&quot;> </xref> <xref:System.IO.Stream>.</xref:System.IO.Stream> serialization"
  remarks: "<xref:System.IO.Stream>쓰기 작업이 정상적으로 지정 파생된 클래스의 생성자에 매개 변수로 <xref:System.Windows.Documents.Serialization.SerializerWriter>.</xref:System.Windows.Documents.Serialization.SerializerWriter> 를 구현 하는</xref:System.IO.Stream> 출력"
  example:
  - "The following example shows the use of the <xref:System.Windows.Documents.Serialization.SerializerWriter.Write%28System.Windows.Documents.DocumentPaginator%2CSystem.Printing.PrintTicket%29> method to serialize a flow document to an output file.  \n  \n [!code-cs[DocumentSerialize#DocSerializePlugIn](~/add/codesnippet/csharp/DocumentSerialize/ThumbViewer.cs#docserializeplugin)]"
  syntax:
    content: public abstract void Write (System.Windows.Documents.DocumentPaginator documentPaginator);
    parameters:
    - id: documentPaginator
      type: System.Windows.Documents.DocumentPaginator
      description: "Serialization <xref:System.IO.Stream>.</xref:System.IO.Stream> 에 쓸 콘텐츠를 정의 하는 문서 페이지 지정자"
  overload: System.Windows.Documents.Serialization.SerializerWriter.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocument)
  id: Write(System.Windows.Documents.FixedDocument)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: Write(FixedDocument)
  nameWithType: SerializerWriter.Write(FixedDocument)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.Write(FixedDocument)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "파생된 클래스에서 재정의 하는 경우는 주어진 <xref href=&quot;System.Windows.Documents.FixedDocument&quot;> </xref> <xref:System.IO.Stream>.</xref:System.IO.Stream> serialization"
  remarks: "<xref:System.IO.Stream>쓰기 작업이 정상적으로 지정 파생된 클래스의 생성자에 매개 변수로 <xref:System.Windows.Documents.Serialization.SerializerWriter>.</xref:System.Windows.Documents.Serialization.SerializerWriter> 를 구현 하는</xref:System.IO.Stream> 출력"
  example:
  - "The following example shows the use of the <xref:System.Windows.Documents.Serialization.SerializerWriter.Write%28System.Windows.Documents.DocumentPaginator%2CSystem.Printing.PrintTicket%29> method to serialize a flow document to an output file.  \n  \n [!code-cs[DocumentSerialize#DocSerializePlugIn](~/add/codesnippet/csharp/DocumentSerialize/ThumbViewer.cs#docserializeplugin)]"
  syntax:
    content: public abstract void Write (System.Windows.Documents.FixedDocument fixedDocument);
    parameters:
    - id: fixedDocument
      type: System.Windows.Documents.FixedDocument
      description: "Serialization <xref:System.IO.Stream>.</xref:System.IO.Stream> 에 작성할 문서입니다"
  overload: System.Windows.Documents.Serialization.SerializerWriter.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocumentSequence)
  id: Write(System.Windows.Documents.FixedDocumentSequence)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: Write(FixedDocumentSequence)
  nameWithType: SerializerWriter.Write(FixedDocumentSequence)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.Write(FixedDocumentSequence)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "파생된 클래스에서 재정의 하는 경우는 주어진 <xref href=&quot;System.Windows.Documents.FixedDocumentSequence&quot;> </xref> <xref:System.IO.Stream>.</xref:System.IO.Stream> serialization"
  remarks: "<xref:System.IO.Stream>쓰기 작업이 정상적으로 지정 파생된 클래스의 생성자에 매개 변수로 <xref:System.Windows.Documents.Serialization.SerializerWriter>.</xref:System.Windows.Documents.Serialization.SerializerWriter> 를 구현 하는</xref:System.IO.Stream> 출력"
  example:
  - "The following example shows the use of the <xref:System.Windows.Documents.Serialization.SerializerWriter.Write%28System.Windows.Documents.DocumentPaginator%2CSystem.Printing.PrintTicket%29> method to serialize a flow document to an output file.  \n  \n [!code-cs[DocumentSerialize#DocSerializePlugIn](~/add/codesnippet/csharp/DocumentSerialize/ThumbViewer.cs#docserializeplugin)]"
  syntax:
    content: public abstract void Write (System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence);
    parameters:
    - id: fixedDocumentSequence
      type: System.Windows.Documents.FixedDocumentSequence
      description: "Serialization <xref:System.IO.Stream>.</xref:System.IO.Stream> 에 쓸 콘텐츠를 정의 하는 문서 시퀀스"
  overload: System.Windows.Documents.Serialization.SerializerWriter.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedPage)
  id: Write(System.Windows.Documents.FixedPage)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: Write(FixedPage)
  nameWithType: SerializerWriter.Write(FixedPage)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.Write(FixedPage)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "파생된 클래스에서 재정의 하는 경우는 주어진 <xref href=&quot;System.Windows.Documents.FixedPage&quot;> </xref> <xref:System.IO.Stream>.</xref:System.IO.Stream> serialization"
  remarks: "<xref:System.IO.Stream>쓰기 작업이 정상적으로 지정 파생된 클래스의 생성자에 매개 변수로 <xref:System.Windows.Documents.Serialization.SerializerWriter>.</xref:System.Windows.Documents.Serialization.SerializerWriter> 를 구현 하는</xref:System.IO.Stream> 출력"
  example:
  - "The following example shows the use of the <xref:System.Windows.Documents.Serialization.SerializerWriter.Write%28System.Windows.Documents.DocumentPaginator%2CSystem.Printing.PrintTicket%29> method to serialize a flow document to an output file.  \n  \n [!code-cs[DocumentSerialize#DocSerializePlugIn](~/add/codesnippet/csharp/DocumentSerialize/ThumbViewer.cs#docserializeplugin)]"
  syntax:
    content: public abstract void Write (System.Windows.Documents.FixedPage fixedPage);
    parameters:
    - id: fixedPage
      type: System.Windows.Documents.FixedPage
      description: "Serialization <xref:System.IO.Stream>.</xref:System.IO.Stream> 에 작성할 페이지입니다"
  overload: System.Windows.Documents.Serialization.SerializerWriter.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Media.Visual)
  id: Write(System.Windows.Media.Visual)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: Write(Visual)
  nameWithType: SerializerWriter.Write(Visual)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.Write(Visual)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "파생된 클래스에서 재정의 하는 경우는 주어진 <xref href=&quot;System.Windows.Media.Visual&quot;> </xref> 요소 <xref:System.IO.Stream>.</xref:System.IO.Stream> 직렬화"
  remarks: "<xref:System.IO.Stream>쓰기 작업이 정상적으로 지정 파생된 클래스의 생성자에 매개 변수로 <xref:System.Windows.Documents.Serialization.SerializerWriter>.</xref:System.Windows.Documents.Serialization.SerializerWriter> 를 구현 하는</xref:System.IO.Stream> 출력"
  example:
  - "The following example shows the use of the <xref:System.Windows.Documents.Serialization.SerializerWriter.Write%28System.Windows.Documents.DocumentPaginator%2CSystem.Printing.PrintTicket%29> method to serialize a flow document to an output file.  \n  \n [!code-cs[DocumentSerialize#DocSerializePlugIn](~/add/codesnippet/csharp/DocumentSerialize/ThumbViewer.cs#docserializeplugin)]"
  syntax:
    content: public abstract void Write (System.Windows.Media.Visual visual);
    parameters:
    - id: visual
      type: System.Windows.Media.Visual
      description: "<xref href=&quot;System.Windows.Media.Visual&quot;> </xref> <xref:System.IO.Stream>.</xref:System.IO.Stream> serialization에 쓰려고 요소"
  overload: System.Windows.Documents.Serialization.SerializerWriter.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket)
  id: Write(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: Write(DocumentPaginator,PrintTicket)
  nameWithType: SerializerWriter.Write(DocumentPaginator,PrintTicket)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.Write(DocumentPaginator,PrintTicket)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "파생된 클래스에서 재정의 되 면 페이지가 매겨진 연결된 된 콘텐츠 <xref href=&quot;System.Printing.PrintTicket&quot;> </xref> <xref:System.IO.Stream>.</xref:System.IO.Stream> serialization"
  remarks: "`printTicket`수 `null` 기본 인쇄 설정이 없는 경우.       이 메서드는 유효성을 검사 하거나 수정 하지는 주어진 `printTicket` 특정 <xref:System.Printing.PrintQueue>.</xref:System.Printing.PrintQueue>  필요한 경우 사용 하 여는 <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName>만드는 메서드를 한 <xref:System.Printing.PrintQueue>-특정 <xref:System.Printing.PrintTicket>지정된 된 프린터에 대 한 유효한.</xref:System.Printing.PrintTicket> </xref:System.Printing.PrintQueue> </xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName>       <xref:System.IO.Stream>쓰기 작업이 정상적으로 지정 파생된 클래스의 생성자에 매개 변수로 <xref:System.Windows.Documents.Serialization.SerializerWriter>.</xref:System.Windows.Documents.Serialization.SerializerWriter> 를 구현 하는</xref:System.IO.Stream> 출력"
  example:
  - "The following example shows the use of the Write method to serialize a flow document to an output file.  \n  \n [!code-cs[DocumentSerialize#DocSerializePlugIn](~/add/codesnippet/csharp/DocumentSerialize/ThumbViewer.cs#docserializeplugin)]"
  syntax:
    content: public abstract void Write (System.Windows.Documents.DocumentPaginator documentPaginator, System.Printing.PrintTicket printTicket);
    parameters:
    - id: documentPaginator
      type: System.Windows.Documents.DocumentPaginator
      description: "Serialization <xref:System.IO.Stream>.</xref:System.IO.Stream> 에 쓸 콘텐츠를 정의 하는 문서 페이지 지정자"
    - id: printTicket
      type: System.Printing.PrintTicket
      description: "에 대 한 기본 인쇄는 `documentPaginator` 콘텐츠입니다."
  overload: System.Windows.Documents.Serialization.SerializerWriter.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocument,System.Printing.PrintTicket)
  id: Write(System.Windows.Documents.FixedDocument,System.Printing.PrintTicket)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: Write(FixedDocument,PrintTicket)
  nameWithType: SerializerWriter.Write(FixedDocument,PrintTicket)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.Write(FixedDocument,PrintTicket)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "파생된 클래스에서 재정의 하는 경우는 주어진 <xref href=&quot;System.Windows.Documents.FixedDocument&quot;> </xref> 함께 연결 된 <xref href=&quot;System.Printing.PrintTicket&quot;> </xref> <xref:System.IO.Stream>.</xref:System.IO.Stream> serialization"
  remarks: "`printTicket`수 `null` 기본 인쇄 설정이 없는 경우.       이 메서드는 유효성을 검사 하거나 수정 하지는 주어진 `printTicket` 특정 <xref:System.Printing.PrintQueue>.</xref:System.Printing.PrintQueue>  필요한 경우 사용 하 여는 <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName>만드는 메서드를 한 <xref:System.Printing.PrintQueue>-특정 <xref:System.Printing.PrintTicket>지정된 된 프린터에 대 한 유효한.</xref:System.Printing.PrintTicket> </xref:System.Printing.PrintQueue> </xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName>       <xref:System.IO.Stream>쓰기 작업이 정상적으로 지정 파생된 클래스의 생성자에 매개 변수로 <xref:System.Windows.Documents.Serialization.SerializerWriter>.</xref:System.Windows.Documents.Serialization.SerializerWriter> 를 구현 하는</xref:System.IO.Stream> 출력"
  example:
  - "The following example shows the use of the <xref:System.Windows.Documents.Serialization.SerializerWriter.Write%28System.Windows.Documents.DocumentPaginator%2CSystem.Printing.PrintTicket%29> method to serialize a flow document to an output file.  \n  \n [!code-cs[DocumentSerialize#DocSerializePlugIn](~/add/codesnippet/csharp/DocumentSerialize/ThumbViewer.cs#docserializeplugin)]"
  syntax:
    content: public abstract void Write (System.Windows.Documents.FixedDocument fixedDocument, System.Printing.PrintTicket printTicket);
    parameters:
    - id: fixedDocument
      type: System.Windows.Documents.FixedDocument
      description: "Serialization <xref:System.IO.Stream>.</xref:System.IO.Stream> 에 작성할 문서입니다"
    - id: printTicket
      type: System.Printing.PrintTicket
      description: "에 대 한 기본 인쇄는 `fixedDocument` 콘텐츠입니다."
  overload: System.Windows.Documents.Serialization.SerializerWriter.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocumentSequence,System.Printing.PrintTicket)
  id: Write(System.Windows.Documents.FixedDocumentSequence,System.Printing.PrintTicket)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: Write(FixedDocumentSequence,PrintTicket)
  nameWithType: SerializerWriter.Write(FixedDocumentSequence,PrintTicket)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.Write(FixedDocumentSequence,PrintTicket)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "파생된 클래스에서 재정의 하는 경우는 주어진 <xref href=&quot;System.Windows.Documents.FixedDocumentSequence&quot;> </xref> 함께 연결 된 <xref href=&quot;System.Printing.PrintTicket&quot;> </xref> <xref:System.IO.Stream>.</xref:System.IO.Stream> serialization"
  remarks: "`printTicket`수 `null` 기본 인쇄 설정이 없는 경우.       이 메서드는 유효성을 검사 하거나 수정 하지는 주어진 `printTicket` 특정 <xref:System.Printing.PrintQueue>.</xref:System.Printing.PrintQueue>  필요한 경우 사용 하 여는 <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName>만드는 메서드를 한 <xref:System.Printing.PrintQueue>-특정 <xref:System.Printing.PrintTicket>지정된 된 프린터에 대 한 유효한.</xref:System.Printing.PrintTicket> </xref:System.Printing.PrintQueue> </xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName>       <xref:System.IO.Stream>쓰기 작업이 정상적으로 지정 파생된 클래스의 생성자에 매개 변수로 <xref:System.Windows.Documents.Serialization.SerializerWriter>.</xref:System.Windows.Documents.Serialization.SerializerWriter> 를 구현 하는</xref:System.IO.Stream> 출력"
  example:
  - "The following example shows the use of the <xref:System.Windows.Documents.Serialization.SerializerWriter.Write%28System.Windows.Documents.DocumentPaginator%2CSystem.Printing.PrintTicket%29> method to serialize a flow document to an output file.  \n  \n [!code-cs[DocumentSerialize#DocSerializePlugIn](~/add/codesnippet/csharp/DocumentSerialize/ThumbViewer.cs#docserializeplugin)]"
  syntax:
    content: public abstract void Write (System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence, System.Printing.PrintTicket printTicket);
    parameters:
    - id: fixedDocumentSequence
      type: System.Windows.Documents.FixedDocumentSequence
      description: "Serialization <xref:System.IO.Stream>.</xref:System.IO.Stream> 에 쓸 콘텐츠를 정의 하는 문서 시퀀스"
    - id: printTicket
      type: System.Printing.PrintTicket
      description: "에 대 한 기본 인쇄는 `fixedDocumentSequence` 콘텐츠입니다."
  overload: System.Windows.Documents.Serialization.SerializerWriter.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedPage,System.Printing.PrintTicket)
  id: Write(System.Windows.Documents.FixedPage,System.Printing.PrintTicket)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: Write(FixedPage,PrintTicket)
  nameWithType: SerializerWriter.Write(FixedPage,PrintTicket)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.Write(FixedPage,PrintTicket)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "파생된 클래스에서 재정의 하는 경우는 주어진 <xref href=&quot;System.Windows.Documents.FixedPage&quot;> </xref> 함께 연결 된 <xref href=&quot;System.Printing.PrintTicket&quot;> </xref> <xref:System.IO.Stream>.</xref:System.IO.Stream> serialization"
  remarks: "`printTicket`수 `null` 기본 인쇄 설정이 없는 경우.       이 메서드는 유효성을 검사 하거나 수정 하지는 주어진 `printTicket` 특정 <xref:System.Printing.PrintQueue>.</xref:System.Printing.PrintQueue>  필요한 경우 사용 하 여는 <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName>만드는 메서드를 한 <xref:System.Printing.PrintQueue>-특정 <xref:System.Printing.PrintTicket>지정된 된 프린터에 대 한 유효한.</xref:System.Printing.PrintTicket> </xref:System.Printing.PrintQueue> </xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName>       <xref:System.IO.Stream>쓰기 작업이 정상적으로 지정 파생된 클래스의 생성자에 매개 변수로 <xref:System.Windows.Documents.Serialization.SerializerWriter>.</xref:System.Windows.Documents.Serialization.SerializerWriter> 를 구현 하는</xref:System.IO.Stream> 출력"
  example:
  - "The following example shows the use of the <xref:System.Windows.Documents.Serialization.SerializerWriter.Write%28System.Windows.Documents.DocumentPaginator%2CSystem.Printing.PrintTicket%29> method to serialize a flow document to an output file.  \n  \n [!code-cs[DocumentSerialize#DocSerializePlugIn](~/add/codesnippet/csharp/DocumentSerialize/ThumbViewer.cs#docserializeplugin)]"
  syntax:
    content: public abstract void Write (System.Windows.Documents.FixedPage fixedPage, System.Printing.PrintTicket printTicket);
    parameters:
    - id: fixedPage
      type: System.Windows.Documents.FixedPage
      description: "Serialization <xref:System.IO.Stream>.</xref:System.IO.Stream> 에 작성할 페이지입니다"
    - id: printTicket
      type: System.Printing.PrintTicket
      description: "에 대 한 기본 인쇄는 `fixedPage` 콘텐츠입니다."
  overload: System.Windows.Documents.Serialization.SerializerWriter.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Media.Visual,System.Printing.PrintTicket)
  id: Write(System.Windows.Media.Visual,System.Printing.PrintTicket)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: Write(Visual,PrintTicket)
  nameWithType: SerializerWriter.Write(Visual,PrintTicket)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.Write(Visual,PrintTicket)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "파생된 클래스에서 재정의 하는 경우는 주어진 <xref href=&quot;System.Windows.Media.Visual&quot;> </xref> 요소를 연결 된 함께 <xref href=&quot;System.Printing.PrintTicket&quot;> </xref> <xref:System.IO.Stream>.</xref:System.IO.Stream> serialization"
  remarks: "`printTicket`수 `null` 기본 인쇄 설정이 없는 경우.       이 메서드는 유효성을 검사 하거나 수정 하지는 주어진 `printTicket` 특정 <xref:System.Printing.PrintQueue>.</xref:System.Printing.PrintQueue>  필요한 경우 사용 하 여는 <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName>만드는 메서드를 한 <xref:System.Printing.PrintQueue>-특정 <xref:System.Printing.PrintTicket>지정된 된 프린터에 대 한 유효한.</xref:System.Printing.PrintTicket> </xref:System.Printing.PrintQueue> </xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName>       <xref:System.IO.Stream>쓰기 작업이 정상적으로 지정 파생된 클래스의 생성자에 매개 변수로 <xref:System.Windows.Documents.Serialization.SerializerWriter>.</xref:System.Windows.Documents.Serialization.SerializerWriter> 를 구현 하는</xref:System.IO.Stream> 출력"
  example:
  - "The following example shows the use of the <xref:System.Windows.Documents.Serialization.SerializerWriter.Write%28System.Windows.Documents.DocumentPaginator%2CSystem.Printing.PrintTicket%29> method to serialize a flow document to an output file.  \n  \n [!code-cs[DocumentSerialize#DocSerializePlugIn](~/add/codesnippet/csharp/DocumentSerialize/ThumbViewer.cs#docserializeplugin)]"
  syntax:
    content: public abstract void Write (System.Windows.Media.Visual visual, System.Printing.PrintTicket printTicket);
    parameters:
    - id: visual
      type: System.Windows.Media.Visual
      description: "<xref href=&quot;System.Windows.Media.Visual&quot;> </xref> <xref:System.IO.Stream>.</xref:System.IO.Stream> serialization에 쓰려고 요소"
    - id: printTicket
      type: System.Printing.PrintTicket
      description: "에 대 한 기본 인쇄는 `visual` 요소입니다."
  overload: System.Windows.Documents.Serialization.SerializerWriter.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.DocumentPaginator)
  id: WriteAsync(System.Windows.Documents.DocumentPaginator)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: WriteAsync(DocumentPaginator)
  nameWithType: SerializerWriter.WriteAsync(DocumentPaginator)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(DocumentPaginator)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "파생된 클래스에서 재정의 되 면의 콘텐츠를 비동기적으로 씁니다는 주어진 <xref href=&quot;System.Windows.Documents.DocumentPaginator&quot;> </xref> <xref:System.IO.Stream>.</xref:System.IO.Stream> serialization"
  remarks: "<xref:System.IO.Stream>쓰기 작업이 정상적으로 지정 파생된 클래스의 생성자에 매개 변수로 <xref:System.Windows.Documents.Serialization.SerializerWriter>.</xref:System.Windows.Documents.Serialization.SerializerWriter> 를 구현 하는</xref:System.IO.Stream> 출력"
  syntax:
    content: public abstract void WriteAsync (System.Windows.Documents.DocumentPaginator documentPaginator);
    parameters:
    - id: documentPaginator
      type: System.Windows.Documents.DocumentPaginator
      description: "Serialization <xref:System.IO.Stream>.</xref:System.IO.Stream> 에 쓸 콘텐츠를 정의 하는 문서 페이지 지정자"
  overload: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocument)
  id: WriteAsync(System.Windows.Documents.FixedDocument)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: WriteAsync(FixedDocument)
  nameWithType: SerializerWriter.WriteAsync(FixedDocument)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(FixedDocument)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "파생된 클래스에서 재정의 하는 경우는 주어진 <xref href=&quot;System.Windows.Documents.FixedDocument&quot;> </xref> <xref:System.IO.Stream>.</xref:System.IO.Stream> serialization"
  remarks: "<xref:System.IO.Stream>쓰기 작업이 정상적으로 지정 파생된 클래스의 생성자에 매개 변수로 <xref:System.Windows.Documents.Serialization.SerializerWriter>.</xref:System.Windows.Documents.Serialization.SerializerWriter> 를 구현 하는</xref:System.IO.Stream> 출력"
  syntax:
    content: public abstract void WriteAsync (System.Windows.Documents.FixedDocument fixedDocument);
    parameters:
    - id: fixedDocument
      type: System.Windows.Documents.FixedDocument
      description: "Serialization <xref:System.IO.Stream>.</xref:System.IO.Stream> 에 작성할 문서입니다"
  overload: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence)
  id: WriteAsync(System.Windows.Documents.FixedDocumentSequence)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: WriteAsync(FixedDocumentSequence)
  nameWithType: SerializerWriter.WriteAsync(FixedDocumentSequence)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(FixedDocumentSequence)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "파생된 클래스에서 재정의 하는 경우는 주어진 <xref href=&quot;System.Windows.Documents.FixedDocumentSequence&quot;> </xref> <xref:System.IO.Stream>.</xref:System.IO.Stream> serialization"
  remarks: "<xref:System.IO.Stream>쓰기 작업이 정상적으로 지정 파생된 클래스의 생성자에 매개 변수로 <xref:System.Windows.Documents.Serialization.SerializerWriter>.</xref:System.Windows.Documents.Serialization.SerializerWriter> 를 구현 하는</xref:System.IO.Stream> 출력"
  syntax:
    content: public abstract void WriteAsync (System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence);
    parameters:
    - id: fixedDocumentSequence
      type: System.Windows.Documents.FixedDocumentSequence
      description: "Serialization <xref:System.IO.Stream>.</xref:System.IO.Stream> 에 쓸 콘텐츠를 정의 하는 문서 시퀀스"
  overload: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedPage)
  id: WriteAsync(System.Windows.Documents.FixedPage)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: WriteAsync(FixedPage)
  nameWithType: SerializerWriter.WriteAsync(FixedPage)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(FixedPage)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "파생된 클래스에서 재정의 하는 경우는 주어진 <xref href=&quot;System.Windows.Documents.FixedPage&quot;> </xref> <xref:System.IO.Stream>.</xref:System.IO.Stream> serialization"
  remarks: "<xref:System.IO.Stream>쓰기 작업이 정상적으로 지정 파생된 클래스의 생성자에 매개 변수로 <xref:System.Windows.Documents.Serialization.SerializerWriter>.</xref:System.Windows.Documents.Serialization.SerializerWriter> 를 구현 하는</xref:System.IO.Stream> 출력"
  syntax:
    content: public abstract void WriteAsync (System.Windows.Documents.FixedPage fixedPage);
    parameters:
    - id: fixedPage
      type: System.Windows.Documents.FixedPage
      description: "Serialization <xref:System.IO.Stream>.</xref:System.IO.Stream> 에 작성할 페이지입니다"
  overload: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Media.Visual)
  id: WriteAsync(System.Windows.Media.Visual)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: WriteAsync(Visual)
  nameWithType: SerializerWriter.WriteAsync(Visual)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(Visual)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "파생된 클래스에서 재정의 하는 경우는 주어진 <xref href=&quot;System.Windows.Media.Visual&quot;> </xref> 요소 <xref:System.IO.Stream>.</xref:System.IO.Stream> 직렬화"
  remarks: "<xref:System.IO.Stream>쓰기 작업이 정상적으로 지정 파생된 클래스의 생성자에 매개 변수로 <xref:System.Windows.Documents.Serialization.SerializerWriter>.</xref:System.Windows.Documents.Serialization.SerializerWriter> 를 구현 하는</xref:System.IO.Stream> 출력"
  syntax:
    content: public abstract void WriteAsync (System.Windows.Media.Visual visual);
    parameters:
    - id: visual
      type: System.Windows.Media.Visual
      description: "<xref href=&quot;System.Windows.Media.Visual&quot;> </xref> <xref:System.IO.Stream>.</xref:System.IO.Stream> serialization에 쓰려고 요소"
  overload: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.DocumentPaginator,System.Object)
  id: WriteAsync(System.Windows.Documents.DocumentPaginator,System.Object)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: WriteAsync(DocumentPaginator,Object)
  nameWithType: SerializerWriter.WriteAsync(DocumentPaginator,Object)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(DocumentPaginator,Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "파생된 클래스에서 재정의 되 면의 콘텐츠를 비동기적으로 씁니다는 주어진 <xref href=&quot;System.Windows.Documents.DocumentPaginator&quot;> </xref> <xref:System.IO.Stream>.</xref:System.IO.Stream> serialization"
  remarks: "`userState`에 전달 되는 <xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler>때는 <xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted>이벤트가 발생 합니다.</xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted> </xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler>       <xref:System.IO.Stream>쓰기 작업이 정상적으로 지정 파생된 클래스의 생성자에 매개 변수로 <xref:System.Windows.Documents.Serialization.SerializerWriter>.</xref:System.Windows.Documents.Serialization.SerializerWriter> 를 구현 하는</xref:System.IO.Stream> 출력"
  syntax:
    content: public abstract void WriteAsync (System.Windows.Documents.DocumentPaginator documentPaginator, object userState);
    parameters:
    - id: documentPaginator
      type: System.Windows.Documents.DocumentPaginator
      description: "Serialization <xref:System.IO.Stream>.</xref:System.IO.Stream> 에 쓸 콘텐츠를 정의 하는 문서 페이지 지정자"
    - id: userState
      type: System.Object
      description: "비동기 쓰기 작업을 식별 하기 위해 호출자가 지정한 개체입니다."
  overload: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket)
  id: WriteAsync(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: WriteAsync(DocumentPaginator,PrintTicket)
  nameWithType: SerializerWriter.WriteAsync(DocumentPaginator,PrintTicket)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(DocumentPaginator,PrintTicket)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "파생된 클래스에서 재정의 되 면의 콘텐츠를 비동기적으로 씁니다는 주어진 <xref href=&quot;System.Windows.Documents.DocumentPaginator&quot;> </xref> <xref:System.IO.Stream>.</xref:System.IO.Stream> serialization"
  remarks: "`printTicket`수 `null` 기본 인쇄 설정이 없는 경우.       이 메서드는 유효성을 검사 하거나 수정 하지는 주어진 `printTicket` 특정 <xref:System.Printing.PrintQueue>.</xref:System.Printing.PrintQueue>  필요한 경우 사용 하 여는 <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName>만드는 메서드를 한 <xref:System.Printing.PrintQueue>-특정 <xref:System.Printing.PrintTicket>지정된 된 프린터에 대 한 유효한.</xref:System.Printing.PrintTicket> </xref:System.Printing.PrintQueue> </xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName>       <xref:System.IO.Stream>쓰기 작업이 정상적으로 지정 파생된 클래스의 생성자에 매개 변수로 <xref:System.Windows.Documents.Serialization.SerializerWriter>.</xref:System.Windows.Documents.Serialization.SerializerWriter> 를 구현 하는</xref:System.IO.Stream> 출력"
  syntax:
    content: public abstract void WriteAsync (System.Windows.Documents.DocumentPaginator documentPaginator, System.Printing.PrintTicket printTicket);
    parameters:
    - id: documentPaginator
      type: System.Windows.Documents.DocumentPaginator
      description: "Serialization <xref:System.IO.Stream>.</xref:System.IO.Stream> 에 쓸 콘텐츠를 정의 하는 문서 페이지 지정자"
    - id: printTicket
      type: System.Printing.PrintTicket
      description: "에 대 한 기본 인쇄는 `documentPaginator` 콘텐츠입니다."
  overload: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocument,System.Object)
  id: WriteAsync(System.Windows.Documents.FixedDocument,System.Object)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: WriteAsync(FixedDocument,Object)
  nameWithType: SerializerWriter.WriteAsync(FixedDocument,Object)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(FixedDocument,Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "파생된 클래스에서 재정의 하는 경우는 주어진 <xref href=&quot;System.Windows.Documents.FixedDocument&quot;> </xref> <xref:System.IO.Stream>.</xref:System.IO.Stream> serialization"
  remarks: "`userState`에 전달 되는 <xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler>때는 <xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted>이벤트가 발생 합니다.</xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted> </xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler>       <xref:System.IO.Stream>쓰기 작업이 정상적으로 지정 파생된 클래스의 생성자에 매개 변수로 <xref:System.Windows.Documents.Serialization.SerializerWriter>.</xref:System.Windows.Documents.Serialization.SerializerWriter> 를 구현 하는</xref:System.IO.Stream> 출력"
  syntax:
    content: public abstract void WriteAsync (System.Windows.Documents.FixedDocument fixedDocument, object userState);
    parameters:
    - id: fixedDocument
      type: System.Windows.Documents.FixedDocument
      description: "Serialization <xref:System.IO.Stream>.</xref:System.IO.Stream> 에 작성할 문서입니다"
    - id: userState
      type: System.Object
      description: "비동기 쓰기 작업을 식별 하기 위해 호출자가 지정한 개체입니다."
  overload: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocument,System.Printing.PrintTicket)
  id: WriteAsync(System.Windows.Documents.FixedDocument,System.Printing.PrintTicket)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: WriteAsync(FixedDocument,PrintTicket)
  nameWithType: SerializerWriter.WriteAsync(FixedDocument,PrintTicket)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(FixedDocument,PrintTicket)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "파생된 클래스에서 재정의 하는 경우는 주어진 <xref href=&quot;System.Windows.Documents.FixedDocument&quot;> </xref> 함께 연결 된 <xref href=&quot;System.Printing.PrintTicket&quot;> </xref> <xref:System.IO.Stream>.</xref:System.IO.Stream> serialization"
  remarks: "`printTicket`수 `null` 기본 인쇄 설정이 없는 경우.       이 메서드는 유효성을 검사 하거나 수정 하지는 주어진 `printTicket` 특정 <xref:System.Printing.PrintQueue>.</xref:System.Printing.PrintQueue>  필요한 경우 사용 하 여는 <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName>만드는 메서드를 한 <xref:System.Printing.PrintQueue>-특정 <xref:System.Printing.PrintTicket>지정된 된 프린터에 대 한 유효한.</xref:System.Printing.PrintTicket> </xref:System.Printing.PrintQueue> </xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName>       <xref:System.IO.Stream>쓰기 작업이 정상적으로 지정 파생된 클래스의 생성자에 매개 변수로 <xref:System.Windows.Documents.Serialization.SerializerWriter>.</xref:System.Windows.Documents.Serialization.SerializerWriter> 를 구현 하는</xref:System.IO.Stream> 출력"
  syntax:
    content: public abstract void WriteAsync (System.Windows.Documents.FixedDocument fixedDocument, System.Printing.PrintTicket printTicket);
    parameters:
    - id: fixedDocument
      type: System.Windows.Documents.FixedDocument
      description: "Serialization <xref:System.IO.Stream>.</xref:System.IO.Stream> 에 작성할 문서입니다"
    - id: printTicket
      type: System.Printing.PrintTicket
      description: "에 대 한 기본 인쇄는 `fixedDocument` 콘텐츠입니다."
  overload: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence,System.Object)
  id: WriteAsync(System.Windows.Documents.FixedDocumentSequence,System.Object)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: WriteAsync(FixedDocumentSequence,Object)
  nameWithType: SerializerWriter.WriteAsync(FixedDocumentSequence,Object)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(FixedDocumentSequence,Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "파생된 클래스에서 재정의 하는 경우는 주어진 <xref href=&quot;System.Windows.Documents.FixedDocumentSequence&quot;> </xref> <xref:System.IO.Stream>.</xref:System.IO.Stream> serialization"
  remarks: "`userState`에 전달 되는 <xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler>때는 <xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted>이벤트가 발생 합니다.</xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted> </xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler>       <xref:System.IO.Stream>쓰기 작업이 정상적으로 지정 파생된 클래스의 생성자에 매개 변수로 <xref:System.Windows.Documents.Serialization.SerializerWriter>.</xref:System.Windows.Documents.Serialization.SerializerWriter> 를 구현 하는</xref:System.IO.Stream> 출력"
  syntax:
    content: public abstract void WriteAsync (System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence, object userState);
    parameters:
    - id: fixedDocumentSequence
      type: System.Windows.Documents.FixedDocumentSequence
      description: "Serialization <xref:System.IO.Stream>.</xref:System.IO.Stream> 에 쓸 콘텐츠를 정의 하는 문서 시퀀스"
    - id: userState
      type: System.Object
      description: "비동기 쓰기 작업을 식별 하기 위해 호출자가 지정한 개체입니다."
  overload: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence,System.Printing.PrintTicket)
  id: WriteAsync(System.Windows.Documents.FixedDocumentSequence,System.Printing.PrintTicket)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: WriteAsync(FixedDocumentSequence,PrintTicket)
  nameWithType: SerializerWriter.WriteAsync(FixedDocumentSequence,PrintTicket)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(FixedDocumentSequence,PrintTicket)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "파생된 클래스에서 재정의 하는 경우는 주어진 <xref href=&quot;System.Windows.Documents.FixedDocumentSequence&quot;> </xref> 함께 연결 된 <xref href=&quot;System.Printing.PrintTicket&quot;> </xref> <xref:System.IO.Stream>.</xref:System.IO.Stream> serialization"
  remarks: "`printTicket`수 `null` 기본 인쇄 설정이 없는 경우.       이 메서드는 유효성을 검사 하거나 수정 하지는 주어진 `printTicket` 특정 <xref:System.Printing.PrintQueue>.</xref:System.Printing.PrintQueue>  필요한 경우 사용 하 여는 <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName>만드는 메서드를 한 <xref:System.Printing.PrintQueue>-특정 <xref:System.Printing.PrintTicket>지정된 된 프린터에 대 한 유효한.</xref:System.Printing.PrintTicket> </xref:System.Printing.PrintQueue> </xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName>       <xref:System.IO.Stream>쓰기 작업이 정상적으로 지정 파생된 클래스의 생성자에 매개 변수로 <xref:System.Windows.Documents.Serialization.SerializerWriter>.</xref:System.Windows.Documents.Serialization.SerializerWriter> 를 구현 하는</xref:System.IO.Stream> 출력"
  syntax:
    content: public abstract void WriteAsync (System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence, System.Printing.PrintTicket printTicket);
    parameters:
    - id: fixedDocumentSequence
      type: System.Windows.Documents.FixedDocumentSequence
      description: "Serialization <xref:System.IO.Stream>.</xref:System.IO.Stream> 에 쓸 콘텐츠를 정의 하는 문서 시퀀스"
    - id: printTicket
      type: System.Printing.PrintTicket
      description: "에 대 한 기본 인쇄는 `fixedDocumentSequence` 콘텐츠입니다."
  overload: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedPage,System.Object)
  id: WriteAsync(System.Windows.Documents.FixedPage,System.Object)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: WriteAsync(FixedPage,Object)
  nameWithType: SerializerWriter.WriteAsync(FixedPage,Object)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(FixedPage,Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "파생된 클래스에서 재정의 하는 경우는 주어진 <xref href=&quot;System.Windows.Documents.FixedPage&quot;> </xref> <xref:System.IO.Stream>.</xref:System.IO.Stream> serialization"
  remarks: "`userState`에 전달 되는 <xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler>때는 <xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted>이벤트가 발생 합니다.</xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted> </xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler>       <xref:System.IO.Stream>쓰기 작업이 정상적으로 지정 파생된 클래스의 생성자에 매개 변수로 <xref:System.Windows.Documents.Serialization.SerializerWriter>.</xref:System.Windows.Documents.Serialization.SerializerWriter> 를 구현 하는</xref:System.IO.Stream> 출력"
  syntax:
    content: public abstract void WriteAsync (System.Windows.Documents.FixedPage fixedPage, object userState);
    parameters:
    - id: fixedPage
      type: System.Windows.Documents.FixedPage
      description: "Serialization <xref:System.IO.Stream>.</xref:System.IO.Stream> 에 작성할 페이지입니다"
    - id: userState
      type: System.Object
      description: "비동기 쓰기 작업을 식별 하기 위해 호출자가 지정한 개체입니다."
  overload: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedPage,System.Printing.PrintTicket)
  id: WriteAsync(System.Windows.Documents.FixedPage,System.Printing.PrintTicket)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: WriteAsync(FixedPage,PrintTicket)
  nameWithType: SerializerWriter.WriteAsync(FixedPage,PrintTicket)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(FixedPage,PrintTicket)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "파생된 클래스에서 재정의 하는 경우는 주어진 <xref href=&quot;System.Windows.Documents.FixedPage&quot;> </xref> 함께 연결 된 <xref href=&quot;System.Printing.PrintTicket&quot;> </xref> <xref:System.IO.Stream>.</xref:System.IO.Stream> serialization"
  remarks: "`printTicket`수 `null` 기본 인쇄 설정이 없는 경우.       이 메서드는 유효성을 검사 하거나 수정 하지는 주어진 `printTicket` 특정 <xref:System.Printing.PrintQueue>.</xref:System.Printing.PrintQueue>  필요한 경우 사용 하 여는 <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName>만드는 메서드를 한 <xref:System.Printing.PrintQueue>-특정 <xref:System.Printing.PrintTicket>지정된 된 프린터에 대 한 유효한.</xref:System.Printing.PrintTicket> </xref:System.Printing.PrintQueue> </xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName>       <xref:System.IO.Stream>쓰기 작업이 정상적으로 지정 파생된 클래스의 생성자에 매개 변수로 <xref:System.Windows.Documents.Serialization.SerializerWriter>.</xref:System.Windows.Documents.Serialization.SerializerWriter> 를 구현 하는</xref:System.IO.Stream> 출력"
  syntax:
    content: public abstract void WriteAsync (System.Windows.Documents.FixedPage fixedPage, System.Printing.PrintTicket printTicket);
    parameters:
    - id: fixedPage
      type: System.Windows.Documents.FixedPage
      description: "Serialization <xref:System.IO.Stream>.</xref:System.IO.Stream> 에 작성할 페이지입니다"
    - id: printTicket
      type: System.Printing.PrintTicket
      description: "에 대 한 기본 인쇄는 `fixedPage` 콘텐츠입니다."
  overload: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Media.Visual,System.Object)
  id: WriteAsync(System.Windows.Media.Visual,System.Object)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: WriteAsync(Visual,Object)
  nameWithType: SerializerWriter.WriteAsync(Visual,Object)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(Visual,Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "파생된 클래스에서 재정의 하는 경우는 주어진 <xref href=&quot;System.Windows.Media.Visual&quot;> </xref> 요소 <xref:System.IO.Stream>.</xref:System.IO.Stream> 직렬화"
  remarks: "`userState`에 전달 되는 <xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler>때는 <xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted>이벤트가 발생 합니다.</xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted> </xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler>       <xref:System.IO.Stream>쓰기 작업이 정상적으로 지정 파생된 클래스의 생성자에 매개 변수로 <xref:System.Windows.Documents.Serialization.SerializerWriter>.</xref:System.Windows.Documents.Serialization.SerializerWriter> 를 구현 하는</xref:System.IO.Stream> 출력"
  syntax:
    content: public abstract void WriteAsync (System.Windows.Media.Visual visual, object userState);
    parameters:
    - id: visual
      type: System.Windows.Media.Visual
      description: "<xref href=&quot;System.Windows.Media.Visual&quot;> </xref> <xref:System.IO.Stream>.</xref:System.IO.Stream> serialization에 쓰려고 요소"
    - id: userState
      type: System.Object
      description: "비동기 쓰기 작업을 식별 하기 위해 호출자가 지정한 개체입니다."
  overload: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Media.Visual,System.Printing.PrintTicket)
  id: WriteAsync(System.Windows.Media.Visual,System.Printing.PrintTicket)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: WriteAsync(Visual,PrintTicket)
  nameWithType: SerializerWriter.WriteAsync(Visual,PrintTicket)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(Visual,PrintTicket)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "파생된 클래스에서 재정의 하는 경우는 주어진 <xref href=&quot;System.Windows.Media.Visual&quot;> </xref> 요소를 연결 된 함께 <xref href=&quot;System.Printing.PrintTicket&quot;> </xref> <xref:System.IO.Stream>.</xref:System.IO.Stream> serialization"
  remarks: "이 메서드는 유효성을 검사 하거나 수정 하지는 주어진 `printTicket` 특정 <xref:System.Printing.PrintQueue>.</xref:System.Printing.PrintQueue>  필요한 경우 사용 하 여는 <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName>만드는 메서드를 한 <xref:System.Printing.PrintQueue>-특정 <xref:System.Printing.PrintTicket>지정된 된 프린터에 대 한 유효한.</xref:System.Printing.PrintTicket> </xref:System.Printing.PrintQueue> </xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName>       <xref:System.IO.Stream>쓰기 작업이 정상적으로 지정 파생된 클래스의 생성자에 매개 변수로 <xref:System.Windows.Documents.Serialization.SerializerWriter>.</xref:System.Windows.Documents.Serialization.SerializerWriter> 를 구현 하는</xref:System.IO.Stream> 출력"
  syntax:
    content: public abstract void WriteAsync (System.Windows.Media.Visual visual, System.Printing.PrintTicket printTicket);
    parameters:
    - id: visual
      type: System.Windows.Media.Visual
      description: "<xref href=&quot;System.Windows.Media.Visual&quot;> </xref> <xref:System.IO.Stream>.</xref:System.IO.Stream> serialization에 쓰려고 요소"
    - id: printTicket
      type: System.Printing.PrintTicket
      description: "에 대 한 기본 인쇄는 `visual` 요소입니다."
  overload: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket,System.Object)
  id: WriteAsync(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket,System.Object)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: WriteAsync(DocumentPaginator,PrintTicket,Object)
  nameWithType: SerializerWriter.WriteAsync(DocumentPaginator,PrintTicket,Object)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(DocumentPaginator,PrintTicket,Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "파생된 클래스에서 재정의 되 면 페이지가 매겨진 연결된 된 콘텐츠 <xref href=&quot;System.Printing.PrintTicket&quot;> </xref> <xref:System.IO.Stream>.</xref:System.IO.Stream> serialization"
  remarks: "`printTicket`수 `null` 기본 인쇄 설정이 없는 경우.       이 메서드는 유효성을 검사 하거나 수정 하지는 주어진 `printTicket` 특정 <xref:System.Printing.PrintQueue>.</xref:System.Printing.PrintQueue>  필요한 경우 사용 하 여는 <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName>만드는 메서드를 한 <xref:System.Printing.PrintQueue>-특정 <xref:System.Printing.PrintTicket>지정된 된 프린터에 대 한 유효한.</xref:System.Printing.PrintTicket> </xref:System.Printing.PrintQueue> </xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName>       `userState`에 전달 되는 <xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler>때는 <xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted>이벤트가 발생 합니다.</xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted> </xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler>       <xref:System.IO.Stream>쓰기 작업이 정상적으로 지정 파생된 클래스의 생성자에 매개 변수로 <xref:System.Windows.Documents.Serialization.SerializerWriter>.</xref:System.Windows.Documents.Serialization.SerializerWriter> 를 구현 하는</xref:System.IO.Stream> 출력"
  syntax:
    content: public abstract void WriteAsync (System.Windows.Documents.DocumentPaginator documentPaginator, System.Printing.PrintTicket printTicket, object userState);
    parameters:
    - id: documentPaginator
      type: System.Windows.Documents.DocumentPaginator
      description: "Serialization <xref:System.IO.Stream>.</xref:System.IO.Stream> 에 쓸 콘텐츠를 정의 하는 문서 페이지 지정자"
    - id: printTicket
      type: System.Printing.PrintTicket
      description: "에 대 한 기본 인쇄는 `documentPaginator` 콘텐츠입니다."
    - id: userState
      type: System.Object
      description: "비동기 쓰기 작업을 식별 하기 위해 호출자가 지정한 개체입니다."
  overload: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocument,System.Printing.PrintTicket,System.Object)
  id: WriteAsync(System.Windows.Documents.FixedDocument,System.Printing.PrintTicket,System.Object)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: WriteAsync(FixedDocument,PrintTicket,Object)
  nameWithType: SerializerWriter.WriteAsync(FixedDocument,PrintTicket,Object)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(FixedDocument,PrintTicket,Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "파생된 클래스에서 재정의 하는 경우는 주어진 <xref href=&quot;System.Windows.Documents.FixedDocument&quot;> </xref> 함께 연결 된 <xref href=&quot;System.Printing.PrintTicket&quot;> </xref> <xref:System.IO.Stream>.</xref:System.IO.Stream> serialization"
  remarks: "`printTicket`수 `null` 기본 인쇄 설정이 없는 경우.       이 메서드는 유효성을 검사 하거나 수정 하지는 주어진 `printTicket` 특정 <xref:System.Printing.PrintQueue>.</xref:System.Printing.PrintQueue>  필요한 경우 사용 하 여는 <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName>만드는 메서드를 한 <xref:System.Printing.PrintQueue>-특정 <xref:System.Printing.PrintTicket>지정된 된 프린터에 대 한 유효한.</xref:System.Printing.PrintTicket> </xref:System.Printing.PrintQueue> </xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName>       `userState`에 전달 되는 <xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler>때는 <xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted>이벤트가 발생 합니다.</xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted> </xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler>       <xref:System.IO.Stream>쓰기 작업이 정상적으로 지정 파생된 클래스의 생성자에 매개 변수로 <xref:System.Windows.Documents.Serialization.SerializerWriter>.</xref:System.Windows.Documents.Serialization.SerializerWriter> 를 구현 하는</xref:System.IO.Stream> 출력"
  syntax:
    content: public abstract void WriteAsync (System.Windows.Documents.FixedDocument fixedDocument, System.Printing.PrintTicket printTicket, object userState);
    parameters:
    - id: fixedDocument
      type: System.Windows.Documents.FixedDocument
      description: "Serialization <xref:System.IO.Stream>.</xref:System.IO.Stream> 에 작성할 문서입니다"
    - id: printTicket
      type: System.Printing.PrintTicket
      description: "에 대 한 기본 인쇄는 `fixedDocument` 콘텐츠입니다."
    - id: userState
      type: System.Object
      description: "비동기 쓰기 작업을 식별 하기 위해 호출자가 지정한 개체입니다."
  overload: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence,System.Printing.PrintTicket,System.Object)
  id: WriteAsync(System.Windows.Documents.FixedDocumentSequence,System.Printing.PrintTicket,System.Object)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: WriteAsync(FixedDocumentSequence,PrintTicket,Object)
  nameWithType: SerializerWriter.WriteAsync(FixedDocumentSequence,PrintTicket,Object)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(FixedDocumentSequence,PrintTicket,Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "파생된 클래스에서 재정의 하는 경우는 주어진 <xref href=&quot;System.Windows.Documents.FixedDocumentSequence&quot;> </xref> 함께 연결 된 <xref href=&quot;System.Printing.PrintTicket&quot;> </xref> <xref:System.IO.Stream>.</xref:System.IO.Stream> serialization"
  remarks: "`printTicket`수 `null` 기본 인쇄 설정이 없는 경우.       이 메서드는 유효성을 검사 하거나 수정 하지는 주어진 `printTicket` 특정 <xref:System.Printing.PrintQueue>.</xref:System.Printing.PrintQueue>  필요한 경우 사용 하 여는 <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName>만드는 메서드를 한 <xref:System.Printing.PrintQueue>-특정 <xref:System.Printing.PrintTicket>지정된 된 프린터에 대 한 유효한.</xref:System.Printing.PrintTicket> </xref:System.Printing.PrintQueue> </xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName>       `userState`에 전달 되는 <xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler>때는 <xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted>이벤트가 발생 합니다.</xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted> </xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler>       <xref:System.IO.Stream>쓰기 작업이 정상적으로 지정 파생된 클래스의 생성자에 매개 변수로 <xref:System.Windows.Documents.Serialization.SerializerWriter>.</xref:System.Windows.Documents.Serialization.SerializerWriter> 를 구현 하는</xref:System.IO.Stream> 출력"
  syntax:
    content: public abstract void WriteAsync (System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence, System.Printing.PrintTicket printTicket, object userState);
    parameters:
    - id: fixedDocumentSequence
      type: System.Windows.Documents.FixedDocumentSequence
      description: "Serialization <xref:System.IO.Stream>.</xref:System.IO.Stream> 에 쓸 콘텐츠를 정의 하는 문서 시퀀스"
    - id: printTicket
      type: System.Printing.PrintTicket
      description: "에 대 한 기본 인쇄는 `fixedDocumentSequence` 콘텐츠입니다."
    - id: userState
      type: System.Object
      description: "비동기 쓰기 작업을 식별 하기 위해 호출자가 지정한 개체입니다."
  overload: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedPage,System.Printing.PrintTicket,System.Object)
  id: WriteAsync(System.Windows.Documents.FixedPage,System.Printing.PrintTicket,System.Object)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: WriteAsync(FixedPage,PrintTicket,Object)
  nameWithType: SerializerWriter.WriteAsync(FixedPage,PrintTicket,Object)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(FixedPage,PrintTicket,Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "파생된 클래스에서 재정의 하는 경우는 주어진 <xref href=&quot;System.Windows.Documents.FixedPage&quot;> </xref> 함께 연결 된 <xref href=&quot;System.Printing.PrintTicket&quot;> </xref> <xref:System.IO.Stream>.</xref:System.IO.Stream> serialization"
  remarks: "`printTicket`수 `null` 기본 인쇄 설정이 없는 경우.       이 메서드는 유효성을 검사 하거나 수정 하지는 주어진 `printTicket` 특정 <xref:System.Printing.PrintQueue>.</xref:System.Printing.PrintQueue>  필요한 경우 사용 하 여는 <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName>만드는 메서드를 한 <xref:System.Printing.PrintQueue>-특정 <xref:System.Printing.PrintTicket>지정된 된 프린터에 대 한 유효한.</xref:System.Printing.PrintTicket> </xref:System.Printing.PrintQueue> </xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName>       `userState`에 전달 되는 <xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler>때는 <xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted>이벤트가 발생 합니다.</xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted> </xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler>       <xref:System.IO.Stream>쓰기 작업이 정상적으로 지정 파생된 클래스의 생성자에 매개 변수로 <xref:System.Windows.Documents.Serialization.SerializerWriter>.</xref:System.Windows.Documents.Serialization.SerializerWriter> 를 구현 하는</xref:System.IO.Stream> 출력"
  syntax:
    content: public abstract void WriteAsync (System.Windows.Documents.FixedPage fixedPage, System.Printing.PrintTicket printTicket, object userState);
    parameters:
    - id: fixedPage
      type: System.Windows.Documents.FixedPage
      description: "Serialization <xref:System.IO.Stream>.</xref:System.IO.Stream> 에 작성할 페이지입니다"
    - id: printTicket
      type: System.Printing.PrintTicket
      description: "에 대 한 기본 인쇄는 `fixedPage` 콘텐츠입니다."
    - id: userState
      type: System.Object
      description: "비동기 쓰기 작업을 식별 하기 위해 호출자가 지정한 개체입니다."
  overload: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Media.Visual,System.Printing.PrintTicket,System.Object)
  id: WriteAsync(System.Windows.Media.Visual,System.Printing.PrintTicket,System.Object)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: WriteAsync(Visual,PrintTicket,Object)
  nameWithType: SerializerWriter.WriteAsync(Visual,PrintTicket,Object)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(Visual,PrintTicket,Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "파생된 클래스에서 재정의 하는 경우는 주어진 <xref href=&quot;System.Windows.Media.Visual&quot;> </xref> 요소를 연결 된 함께 <xref href=&quot;System.Printing.PrintTicket&quot;> </xref> 및 serialization <xref:System.IO.Stream>.</xref:System.IO.Stream> 식별자"
  remarks: "`printTicket`수 `null` 기본 인쇄 설정이 없는 경우.       이 메서드는 유효성을 검사 하거나 수정 하지는 주어진 `printTicket` 특정 <xref:System.Printing.PrintQueue>.</xref:System.Printing.PrintQueue>  필요한 경우 사용 하 여는 <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName>만드는 메서드를 한 <xref:System.Printing.PrintQueue>-특정 <xref:System.Printing.PrintTicket>지정된 된 프린터에 대 한 유효한.</xref:System.Printing.PrintTicket> </xref:System.Printing.PrintQueue> </xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName>       `userState`에 전달 되는 <xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler>때는 <xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted>이벤트가 발생 합니다.</xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted> </xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler>       <xref:System.IO.Stream>쓰기 작업이 정상적으로 지정 파생된 클래스의 생성자에 매개 변수로 <xref:System.Windows.Documents.Serialization.SerializerWriter>.</xref:System.Windows.Documents.Serialization.SerializerWriter> 를 구현 하는</xref:System.IO.Stream> 출력"
  syntax:
    content: public abstract void WriteAsync (System.Windows.Media.Visual visual, System.Printing.PrintTicket printTicket, object userState);
    parameters:
    - id: visual
      type: System.Windows.Media.Visual
      description: "<xref href=&quot;System.Windows.Media.Visual&quot;> </xref> <xref:System.IO.Stream>.</xref:System.IO.Stream> serialization에 쓰려고 요소"
    - id: printTicket
      type: System.Printing.PrintTicket
      description: "에 대 한 기본 인쇄는 `visual` 요소입니다."
    - id: userState
      type: System.Object
      description: "비동기 쓰기 작업을 식별 하기 위해 호출자가 지정한 개체입니다."
  overload: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled
  id: WritingCancelled
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: WritingCancelled
  nameWithType: SerializerWriter.WritingCancelled
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "파생된 클래스에서 재정의 되 면 발생 하면는 <xref:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync*>작업이 수행 됩니다.</xref:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync*>"
  syntax:
    content: public abstract event System.Windows.Documents.Serialization.WritingCancelledEventHandler WritingCancelled;
    return:
      type: System.Windows.Documents.Serialization.WritingCancelledEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted
  id: WritingCompleted
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: WritingCompleted
  nameWithType: SerializerWriter.WritingCompleted
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "파생된 클래스에서 재정의 되 면 쓰기 작업이 완료 되 면 발생 합니다."
  syntax:
    content: public abstract event System.Windows.Documents.Serialization.WritingCompletedEventHandler WritingCompleted;
    return:
      type: System.Windows.Documents.Serialization.WritingCompletedEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.WritingPrintTicketRequired
  id: WritingPrintTicketRequired
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: WritingPrintTicketRequired
  nameWithType: SerializerWriter.WritingPrintTicketRequired
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WritingPrintTicketRequired
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "파생된 클래스에서 재정의 되 면 하기 바로 전에 발생 한 <xref href=&quot;System.Printing.PrintTicket&quot;> </xref> 여 스트림에 추가 <> </> *> 또는 <> </> *> 메서드."
  remarks: "WritingPrintTicketRequired 이벤트를 대체할 새 이벤트 처리기를 사용 하면 <xref:System.Printing.PrintTicket>에 지정 된에 대 한는 <xref:System.Windows.Documents.Serialization.SerializerWriter.Write%2A>또는 <xref:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync%2A>메서드를 호출 합니다.</xref:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync%2A> </xref:System.Windows.Documents.Serialization.SerializerWriter.Write%2A> </xref:System.Printing.PrintTicket>"
  syntax:
    content: public abstract event System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventHandler WritingPrintTicketRequired;
    return:
      type: System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged
  id: WritingProgressChanged
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: WritingProgressChanged
  nameWithType: SerializerWriter.WritingProgressChanged
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "파생된 클래스에서 재정의 되 면 발생 하면는 <xref href=&quot;System.Windows.Documents.Serialization.SerializerWriter&quot;> </xref> 진행 상태를 업데이트 합니다."
  remarks: "예를 들어는 <xref:System.Windows.Documents.Serialization.SerializerWriter>모든 페이지 또는 다중 문서에서 모든 문서 작업을 작성 한 다음 진행률을 업데이트할 수 있습니다.</xref:System.Windows.Documents.Serialization.SerializerWriter>"
  syntax:
    content: public abstract event System.Windows.Documents.Serialization.WritingProgressChangedEventHandler WritingProgressChanged;
    return:
      type: System.Windows.Documents.Serialization.WritingProgressChangedEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Windows.Documents.Serialization.SerializerWriter.#ctor
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: SerializerWriter()
  nameWithType: SerializerWriter.SerializerWriter()
  fullName: System.Windows.Documents.Serialization.SerializerWriter.SerializerWriter()
- uid: System.Windows.Documents.Serialization.SerializerWriter.CancelAsync
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: CancelAsync()
  nameWithType: SerializerWriter.CancelAsync()
  fullName: System.Windows.Documents.Serialization.SerializerWriter.CancelAsync()
- uid: System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: CreateVisualsCollator()
  nameWithType: SerializerWriter.CreateVisualsCollator()
  fullName: System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator()
- uid: System.Windows.Documents.Serialization.SerializerWriterCollator
  parent: System.Windows.Documents.Serialization
  isExternal: false
  name: SerializerWriterCollator
  nameWithType: SerializerWriterCollator
  fullName: System.Windows.Documents.Serialization.SerializerWriterCollator
- uid: System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator(System.Printing.PrintTicket,System.Printing.PrintTicket)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: CreateVisualsCollator(PrintTicket,PrintTicket)
  nameWithType: SerializerWriter.CreateVisualsCollator(PrintTicket,PrintTicket)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator(PrintTicket,PrintTicket)
- uid: System.Printing.PrintTicket
  parent: System.Printing
  isExternal: false
  name: PrintTicket
  nameWithType: PrintTicket
  fullName: System.Printing.PrintTicket
- uid: System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.DocumentPaginator)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: Write(DocumentPaginator)
  nameWithType: SerializerWriter.Write(DocumentPaginator)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.Write(DocumentPaginator)
- uid: System.Windows.Documents.DocumentPaginator
  parent: System.Windows.Documents
  isExternal: false
  name: DocumentPaginator
  nameWithType: DocumentPaginator
  fullName: System.Windows.Documents.DocumentPaginator
- uid: System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocument)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: Write(FixedDocument)
  nameWithType: SerializerWriter.Write(FixedDocument)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.Write(FixedDocument)
- uid: System.Windows.Documents.FixedDocument
  parent: System.Windows.Documents
  isExternal: false
  name: FixedDocument
  nameWithType: FixedDocument
  fullName: System.Windows.Documents.FixedDocument
- uid: System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocumentSequence)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: Write(FixedDocumentSequence)
  nameWithType: SerializerWriter.Write(FixedDocumentSequence)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.Write(FixedDocumentSequence)
- uid: System.Windows.Documents.FixedDocumentSequence
  parent: System.Windows.Documents
  isExternal: false
  name: FixedDocumentSequence
  nameWithType: FixedDocumentSequence
  fullName: System.Windows.Documents.FixedDocumentSequence
- uid: System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedPage)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: Write(FixedPage)
  nameWithType: SerializerWriter.Write(FixedPage)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.Write(FixedPage)
- uid: System.Windows.Documents.FixedPage
  parent: System.Windows.Documents
  isExternal: false
  name: FixedPage
  nameWithType: FixedPage
  fullName: System.Windows.Documents.FixedPage
- uid: System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Media.Visual)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: Write(Visual)
  nameWithType: SerializerWriter.Write(Visual)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.Write(Visual)
- uid: System.Windows.Media.Visual
  parent: System.Windows.Media
  isExternal: false
  name: Visual
  nameWithType: Visual
  fullName: System.Windows.Media.Visual
- uid: System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: Write(DocumentPaginator,PrintTicket)
  nameWithType: SerializerWriter.Write(DocumentPaginator,PrintTicket)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.Write(DocumentPaginator,PrintTicket)
- uid: System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocument,System.Printing.PrintTicket)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: Write(FixedDocument,PrintTicket)
  nameWithType: SerializerWriter.Write(FixedDocument,PrintTicket)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.Write(FixedDocument,PrintTicket)
- uid: System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocumentSequence,System.Printing.PrintTicket)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: Write(FixedDocumentSequence,PrintTicket)
  nameWithType: SerializerWriter.Write(FixedDocumentSequence,PrintTicket)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.Write(FixedDocumentSequence,PrintTicket)
- uid: System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedPage,System.Printing.PrintTicket)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: Write(FixedPage,PrintTicket)
  nameWithType: SerializerWriter.Write(FixedPage,PrintTicket)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.Write(FixedPage,PrintTicket)
- uid: System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Media.Visual,System.Printing.PrintTicket)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: Write(Visual,PrintTicket)
  nameWithType: SerializerWriter.Write(Visual,PrintTicket)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.Write(Visual,PrintTicket)
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.DocumentPaginator)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: WriteAsync(DocumentPaginator)
  nameWithType: SerializerWriter.WriteAsync(DocumentPaginator)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(DocumentPaginator)
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocument)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: WriteAsync(FixedDocument)
  nameWithType: SerializerWriter.WriteAsync(FixedDocument)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(FixedDocument)
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: WriteAsync(FixedDocumentSequence)
  nameWithType: SerializerWriter.WriteAsync(FixedDocumentSequence)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(FixedDocumentSequence)
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedPage)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: WriteAsync(FixedPage)
  nameWithType: SerializerWriter.WriteAsync(FixedPage)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(FixedPage)
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Media.Visual)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: WriteAsync(Visual)
  nameWithType: SerializerWriter.WriteAsync(Visual)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(Visual)
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.DocumentPaginator,System.Object)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: WriteAsync(DocumentPaginator,Object)
  nameWithType: SerializerWriter.WriteAsync(DocumentPaginator,Object)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(DocumentPaginator,Object)
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: WriteAsync(DocumentPaginator,PrintTicket)
  nameWithType: SerializerWriter.WriteAsync(DocumentPaginator,PrintTicket)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(DocumentPaginator,PrintTicket)
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocument,System.Object)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: WriteAsync(FixedDocument,Object)
  nameWithType: SerializerWriter.WriteAsync(FixedDocument,Object)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(FixedDocument,Object)
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocument,System.Printing.PrintTicket)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: WriteAsync(FixedDocument,PrintTicket)
  nameWithType: SerializerWriter.WriteAsync(FixedDocument,PrintTicket)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(FixedDocument,PrintTicket)
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence,System.Object)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: WriteAsync(FixedDocumentSequence,Object)
  nameWithType: SerializerWriter.WriteAsync(FixedDocumentSequence,Object)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(FixedDocumentSequence,Object)
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence,System.Printing.PrintTicket)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: WriteAsync(FixedDocumentSequence,PrintTicket)
  nameWithType: SerializerWriter.WriteAsync(FixedDocumentSequence,PrintTicket)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(FixedDocumentSequence,PrintTicket)
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedPage,System.Object)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: WriteAsync(FixedPage,Object)
  nameWithType: SerializerWriter.WriteAsync(FixedPage,Object)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(FixedPage,Object)
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedPage,System.Printing.PrintTicket)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: WriteAsync(FixedPage,PrintTicket)
  nameWithType: SerializerWriter.WriteAsync(FixedPage,PrintTicket)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(FixedPage,PrintTicket)
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Media.Visual,System.Object)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: WriteAsync(Visual,Object)
  nameWithType: SerializerWriter.WriteAsync(Visual,Object)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(Visual,Object)
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Media.Visual,System.Printing.PrintTicket)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: WriteAsync(Visual,PrintTicket)
  nameWithType: SerializerWriter.WriteAsync(Visual,PrintTicket)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(Visual,PrintTicket)
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket,System.Object)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: WriteAsync(DocumentPaginator,PrintTicket,Object)
  nameWithType: SerializerWriter.WriteAsync(DocumentPaginator,PrintTicket,Object)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(DocumentPaginator,PrintTicket,Object)
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocument,System.Printing.PrintTicket,System.Object)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: WriteAsync(FixedDocument,PrintTicket,Object)
  nameWithType: SerializerWriter.WriteAsync(FixedDocument,PrintTicket,Object)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(FixedDocument,PrintTicket,Object)
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence,System.Printing.PrintTicket,System.Object)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: WriteAsync(FixedDocumentSequence,PrintTicket,Object)
  nameWithType: SerializerWriter.WriteAsync(FixedDocumentSequence,PrintTicket,Object)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(FixedDocumentSequence,PrintTicket,Object)
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedPage,System.Printing.PrintTicket,System.Object)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: WriteAsync(FixedPage,PrintTicket,Object)
  nameWithType: SerializerWriter.WriteAsync(FixedPage,PrintTicket,Object)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(FixedPage,PrintTicket,Object)
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Media.Visual,System.Printing.PrintTicket,System.Object)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: WriteAsync(Visual,PrintTicket,Object)
  nameWithType: SerializerWriter.WriteAsync(Visual,PrintTicket,Object)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(Visual,PrintTicket,Object)
- uid: System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: WritingCancelled
  nameWithType: SerializerWriter.WritingCancelled
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled
- uid: System.Windows.Documents.Serialization.WritingCancelledEventHandler
  parent: System.Windows.Documents.Serialization
  isExternal: false
  name: WritingCancelledEventHandler
  nameWithType: WritingCancelledEventHandler
  fullName: System.Windows.Documents.Serialization.WritingCancelledEventHandler
- uid: System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: WritingCompleted
  nameWithType: SerializerWriter.WritingCompleted
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted
- uid: System.Windows.Documents.Serialization.WritingCompletedEventHandler
  parent: System.Windows.Documents.Serialization
  isExternal: false
  name: WritingCompletedEventHandler
  nameWithType: WritingCompletedEventHandler
  fullName: System.Windows.Documents.Serialization.WritingCompletedEventHandler
- uid: System.Windows.Documents.Serialization.SerializerWriter.WritingPrintTicketRequired
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: WritingPrintTicketRequired
  nameWithType: SerializerWriter.WritingPrintTicketRequired
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WritingPrintTicketRequired
- uid: System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventHandler
  parent: System.Windows.Documents.Serialization
  isExternal: false
  name: WritingPrintTicketRequiredEventHandler
  nameWithType: WritingPrintTicketRequiredEventHandler
  fullName: System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventHandler
- uid: System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: WritingProgressChanged
  nameWithType: SerializerWriter.WritingProgressChanged
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged
- uid: System.Windows.Documents.Serialization.WritingProgressChangedEventHandler
  parent: System.Windows.Documents.Serialization
  isExternal: false
  name: WritingProgressChangedEventHandler
  nameWithType: WritingProgressChangedEventHandler
  fullName: System.Windows.Documents.Serialization.WritingProgressChangedEventHandler
- uid: System.Windows.Documents.Serialization.SerializerWriter.#ctor*
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: SerializerWriter
  nameWithType: SerializerWriter.SerializerWriter
- uid: System.Windows.Documents.Serialization.SerializerWriter.CancelAsync*
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: CancelAsync
  nameWithType: SerializerWriter.CancelAsync
- uid: System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator*
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: CreateVisualsCollator
  nameWithType: SerializerWriter.CreateVisualsCollator
- uid: System.Windows.Documents.Serialization.SerializerWriter.Write*
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: Write
  nameWithType: SerializerWriter.Write
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync*
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: WriteAsync
  nameWithType: SerializerWriter.WriteAsync
