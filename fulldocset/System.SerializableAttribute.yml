### YamlMime:ManagedReference
items:
- uid: System.SerializableAttribute
  id: SerializableAttribute
  children:
  - System.SerializableAttribute.#ctor
  langs:
  - csharp
  name: SerializableAttribute
  nameWithType: SerializableAttribute
  fullName: System.SerializableAttribute
  type: Class
  summary: "클래스를 serialize 할 수 있는지를 나타냅니다. 이 클래스는 상속 될 수 없습니다."
  remarks: "이 형식의 인스턴스를 serialize 할 수 있는지를 나타내는 형식에 SerializableAttribute 특성을 적용 합니다. 공용 언어 런타임에서 throw <xref:System.Runtime.Serialization.SerializationException>SerializableAttribute 특성이 적용 된 모든 형식의 그래프에서 serialize 되는 개체에 없는 경우.</xref:System.Runtime.Serialization.SerializationException>       클래스도 구현 하는 경우에 SerializableAttribute 특성을 적용 된 <xref:System.Runtime.Serialization.ISerializable>serialization 프로세스를 제어 하는 인터페이스입니다.</xref:System.Runtime.Serialization.ISerializable>       SerializableAttribute 특성 형식에 적용 하면 기본적으로 모든 개인 및 공용 필드가 serialize 됩니다. 구현 하 여 serialization을 세부적으로 제어할 수 있습니다는 <xref:System.Runtime.Serialization.ISerializable>serialization 프로세스를 재정의 하는 인터페이스입니다.</xref:System.Runtime.Serialization.ISerializable>       필드의 serialization을 적용 하 여 제외할 수 있습니다 또는 <xref:System.NonSerializedAttribute>특성을 필드.</xref:System.NonSerializedAttribute> 직렬화 가능 형식의 필드에 대 한 포인터, 핸들을 다른 환경에서 의미 있게 재구성 될 수 없습니다와 특정 환경에 관련 된 다른 데이터 구조가 경우 적용 해야 할 수는 <xref:System.NonSerializedAttribute>해당 필드에 특성.</xref:System.NonSerializedAttribute>       특성을 사용 하는 방법에 대 한 자세한 내용은 참조 [특성](~/add/includes/ajax-current-ext-md.md)합니다. Serialization에 대 한 자세한 내용은 <xref:System.Runtime.Serialization>.</xref:System.Runtime.Serialization> 을 참조 하십시오."
  example:
  - "The following example demonstrates serialization of an object that is marked with the SerializableAttribute attribute. To use the <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter> instead of the <xref:System.Runtime.Serialization.Formatters.Soap.SoapFormatter>, uncomment the appropriate lines.  \n  \n [!code-cpp[SerializationAttributes#1](~/add/codesnippet/cpp/t-system.serializableatt_1.cpp)]\n [!code-cs[SerializationAttributes#1](~/add/codesnippet/csharp/t-system.serializableatt_1.cs)]\n [!code-vb[SerializationAttributes#1](~/add/codesnippet/visualbasic/t-system.serializableatt_1.vb)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Enum | System.AttributeTargets.Delegate, Inherited=false)]

      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class SerializableAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.SerializableAttribute.#ctor
  id: '#ctor'
  parent: System.SerializableAttribute
  langs:
  - csharp
  name: SerializableAttribute()
  nameWithType: SerializableAttribute.SerializableAttribute()
  fullName: System.SerializableAttribute.SerializableAttribute()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.SerializableAttribute&quot;> </xref> 클래스입니다."
  syntax:
    content: public SerializableAttribute ();
    parameters: []
  overload: System.SerializableAttribute.#ctor*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.SerializableAttribute.#ctor
  parent: System.SerializableAttribute
  isExternal: false
  name: SerializableAttribute()
  nameWithType: SerializableAttribute.SerializableAttribute()
  fullName: System.SerializableAttribute.SerializableAttribute()
- uid: System.SerializableAttribute.#ctor*
  parent: System.SerializableAttribute
  isExternal: false
  name: SerializableAttribute
  nameWithType: SerializableAttribute.SerializableAttribute
