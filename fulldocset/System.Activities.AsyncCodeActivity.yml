### YamlMime:ManagedReference
items:
- uid: System.Activities.AsyncCodeActivity
  id: AsyncCodeActivity
  children:
  - System.Activities.AsyncCodeActivity.#ctor
  - System.Activities.AsyncCodeActivity.BeginExecute(System.Activities.AsyncCodeActivityContext,System.AsyncCallback,System.Object)
  - System.Activities.AsyncCodeActivity.CacheMetadata(System.Activities.ActivityMetadata)
  - System.Activities.AsyncCodeActivity.CacheMetadata(System.Activities.CodeActivityMetadata)
  - System.Activities.AsyncCodeActivity.Cancel(System.Activities.AsyncCodeActivityContext)
  - System.Activities.AsyncCodeActivity.EndExecute(System.Activities.AsyncCodeActivityContext,System.IAsyncResult)
  - System.Activities.AsyncCodeActivity.Implementation
  - System.Activities.AsyncCodeActivity.ImplementationVersion
  - System.Activities.AsyncCodeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)
  langs:
  - csharp
  name: AsyncCodeActivity
  nameWithType: AsyncCodeActivity
  fullName: System.Activities.AsyncCodeActivity
  type: Class
  summary: "처음부터 끝까지 비동기 코드 활동 실행을 관리합니다. 이 클래스는 추상 클래스입니다."
  remarks: ''
  example:
  - "The following example shows how to derive a class from AsyncCodeActivity to create a custom activity.  \n  \n [!code-cs[Async#0](~/add/codesnippet/csharp/t-system.activities.asyn_1.cs)]"
  syntax:
    content: 'public abstract class AsyncCodeActivity : System.Activities.Activity'
  inheritance:
  - System.Object
  - System.Activities.Activity
  implements: []
  inheritedMembers:
  - System.Activities.Activity.CacheId
  - System.Activities.Activity.Constraints
  - System.Activities.Activity.DisplayName
  - System.Activities.Activity.Id
  - System.Activities.Activity.ShouldSerializeDisplayName
  - System.Activities.Activity.ToString
  platform:
  - net462
- uid: System.Activities.AsyncCodeActivity.#ctor
  id: '#ctor'
  parent: System.Activities.AsyncCodeActivity
  langs:
  - csharp
  name: AsyncCodeActivity()
  nameWithType: AsyncCodeActivity.AsyncCodeActivity()
  fullName: System.Activities.AsyncCodeActivity.AsyncCodeActivity()
  type: Constructor
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "새 인스턴스를 만듭니다는 <xref href=&quot;System.Activities.AsyncCodeActivity&quot;> </xref> 클래스입니다."
  syntax:
    content: protected AsyncCodeActivity ();
    parameters: []
  overload: System.Activities.AsyncCodeActivity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.AsyncCodeActivity.BeginExecute(System.Activities.AsyncCodeActivityContext,System.AsyncCallback,System.Object)
  id: BeginExecute(System.Activities.AsyncCodeActivityContext,System.AsyncCallback,System.Object)
  parent: System.Activities.AsyncCodeActivity
  langs:
  - csharp
  name: BeginExecute(AsyncCodeActivityContext,AsyncCallback,Object)
  nameWithType: AsyncCodeActivity.BeginExecute(AsyncCodeActivityContext,AsyncCallback,Object)
  fullName: System.Activities.AsyncCodeActivity.BeginExecute(AsyncCodeActivityContext,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "파생된 클래스에서 구현 되 고 런타임에 워크플로에서 지정 된 실행 컨텍스트, 콜백 메서드 및 사용자 상태 큐를 비동기 작업을 사용 합니다."
  remarks: ''
  example:
  - "The following example shows how to override the BeginExecute method in a custom activity.  \n  \n [!code-cs[Async#1](~/add/codesnippet/csharp/fea949eb-d912-4322-a111-_1.cs)]"
  syntax:
    content: protected abstract IAsyncResult BeginExecute (System.Activities.AsyncCodeActivityContext context, AsyncCallback callback, object state);
    parameters:
    - id: context
      type: System.Activities.AsyncCodeActivityContext
      description: "에 대 한 실행 환경을 정의 하는 정보는 <xref href=&quot;System.Activities.AsyncCodeActivity&quot;> </xref>합니다."
    - id: callback
      type: System.AsyncCallback
      description: "비동기 작업 및 완료 알림이 발생 한 후 호출 될 메서드."
    - id: state
      type: System.Object
      description: "비동기 작업 인스턴스의 변수 정보를 저장 하는 개체입니다."
    return:
      type: System.IAsyncResult
      description: "비동기 작업 인스턴스의 변수 정보를 저장 하는 개체입니다."
  overload: System.Activities.AsyncCodeActivity.BeginExecute*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.AsyncCodeActivity.CacheMetadata(System.Activities.ActivityMetadata)
  id: CacheMetadata(System.Activities.ActivityMetadata)
  parent: System.Activities.AsyncCodeActivity
  langs:
  - csharp
  name: CacheMetadata(ActivityMetadata)
  nameWithType: AsyncCodeActivity.CacheMetadata(ActivityMetadata)
  fullName: System.Activities.AsyncCodeActivity.CacheMetadata(ActivityMetadata)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "구현되지 않았습니다. 사용 하 여 <xref:System.Activities.AsyncCodeActivity.CacheMetadata*>대신.</xref:System.Activities.AsyncCodeActivity.CacheMetadata*>"
  syntax:
    content: protected override sealed void CacheMetadata (System.Activities.ActivityMetadata metadata);
    parameters:
    - id: metadata
      type: System.Activities.ActivityMetadata
      description: "구현되지 않았습니다."
  overload: System.Activities.AsyncCodeActivity.CacheMetadata*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.AsyncCodeActivity.CacheMetadata(System.Activities.CodeActivityMetadata)
  id: CacheMetadata(System.Activities.CodeActivityMetadata)
  parent: System.Activities.AsyncCodeActivity
  langs:
  - csharp
  name: CacheMetadata(CodeActivityMetadata)
  nameWithType: AsyncCodeActivity.CacheMetadata(CodeActivityMetadata)
  fullName: System.Activities.AsyncCodeActivity.CacheMetadata(CodeActivityMetadata)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "가상 메서드로 사용 되 고 비동기 작업 인수로 캐시 리플렉션에 의해 얻은 정보를 변환 합니다."
  remarks: "사용자 지정 활동 작성자는 활동의 CacheMetadata 재정의에서 유효성 검사 논리를 제공할 수 있습니다. CacheMetadata에서 throw 되는 모든 예외는 유효성 검사 오류로 처리 되지 됩니다. 이러한 예외에 대 한 호출에서 이스케이프 되며 <xref:System.Activities.Validation.ActivityValidationServices.Validate%2A>호출자가 처리 해야 합니다.</xref:System.Activities.Validation.ActivityValidationServices.Validate%2A>"
  syntax:
    content: protected virtual void CacheMetadata (System.Activities.CodeActivityMetadata metadata);
    parameters:
    - id: metadata
      type: System.Activities.CodeActivityMetadata
      description: "<xref href=&quot;System.Activities.CodeActivityMetadata&quot;></xref>비동기 작업 인수 집합에 대 한 데이터가 포함 된 개체입니다."
  overload: System.Activities.AsyncCodeActivity.CacheMetadata*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.AsyncCodeActivity.Cancel(System.Activities.AsyncCodeActivityContext)
  id: Cancel(System.Activities.AsyncCodeActivityContext)
  parent: System.Activities.AsyncCodeActivity
  langs:
  - csharp
  name: Cancel(AsyncCodeActivityContext)
  nameWithType: AsyncCodeActivity.Cancel(AsyncCodeActivityContext)
  fullName: System.Activities.AsyncCodeActivity.Cancel(AsyncCodeActivityContext)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "파생된 클래스에서 구현 하 고 비동기 활동을 조기에 완료에 도달 했음을 워크플로 런타임에 알립니다 지정한 실행 환경 정보를 사용 합니다. 가상 메서드로 사용 합니다."
  syntax:
    content: protected virtual void Cancel (System.Activities.AsyncCodeActivityContext context);
    parameters:
    - id: context
      type: System.Activities.AsyncCodeActivityContext
      description: "에 대 한 실행 환경을 정의 하는 정보는 <xref href=&quot;System.Activities.AsyncCodeActivity&quot;> </xref>합니다."
  overload: System.Activities.AsyncCodeActivity.Cancel*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.AsyncCodeActivity.EndExecute(System.Activities.AsyncCodeActivityContext,System.IAsyncResult)
  id: EndExecute(System.Activities.AsyncCodeActivityContext,System.IAsyncResult)
  parent: System.Activities.AsyncCodeActivity
  langs:
  - csharp
  name: EndExecute(AsyncCodeActivityContext,IAsyncResult)
  nameWithType: AsyncCodeActivity.EndExecute(AsyncCodeActivityContext,IAsyncResult)
  fullName: System.Activities.AsyncCodeActivity.EndExecute(AsyncCodeActivityContext,IAsyncResult)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "파생된 클래스에서 구현 하는 경우 지정한 실행 환경 정보를 사용 하 여 연결 된 비동기 작업 완료 된 워크플로 런타임에 알립니다."
  remarks: ''
  example:
  - "The following example shows how to override the EndExecute method in a custom activity.  \n  \n [!code-cs[Async#2](~/add/codesnippet/csharp/250cdc3d-e27b-4bfa-a113-_1.cs)]"
  syntax:
    content: protected abstract void EndExecute (System.Activities.AsyncCodeActivityContext context, IAsyncResult result);
    parameters:
    - id: context
      type: System.Activities.AsyncCodeActivityContext
      description: "에 대 한 실행 환경을 정의 하는 정보는 <xref href=&quot;System.Activities.AsyncCodeActivity&quot;> </xref>합니다."
    - id: result
      type: System.IAsyncResult
      description: "구현 된 <xref:System.IAsyncResult>실행이 끝날 때 비동기 작업의 상태를 반환 하는.</xref:System.IAsyncResult>"
  overload: System.Activities.AsyncCodeActivity.EndExecute*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.AsyncCodeActivity.Implementation
  id: Implementation
  parent: System.Activities.AsyncCodeActivity
  langs:
  - csharp
  name: Implementation
  nameWithType: AsyncCodeActivity.Implementation
  fullName: System.Activities.AsyncCodeActivity.Implementation
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "가져옵니다 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 또는이 속성의 값을 설정 하는 시도 하는 경우 오류를 throw 합니다."
  syntax:
    content: protected override sealed Func<System.Activities.Activity> Implementation { get; set; }
    return:
      type: System.Func{System.Activities.Activity}
      description: "작업 함수입니다."
  overload: System.Activities.AsyncCodeActivity.Implementation*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.AsyncCodeActivity.ImplementationVersion
  id: ImplementationVersion
  parent: System.Activities.AsyncCodeActivity
  langs:
  - csharp
  name: ImplementationVersion
  nameWithType: AsyncCodeActivity.ImplementationVersion
  fullName: System.Activities.AsyncCodeActivity.ImplementationVersion
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "활동의 구현은 버전을 가져오거나 설정 합니다."
  syntax:
    content: protected override sealed Version ImplementationVersion { get; set; }
    return:
      type: System.Version
      description: "활동의 구현 버전입니다."
  overload: System.Activities.AsyncCodeActivity.ImplementationVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.AsyncCodeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)
  id: OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)
  parent: System.Activities.AsyncCodeActivity
  langs:
  - csharp
  name: OnCreateDynamicUpdateMap(UpdateMapMetadata,Activity)
  nameWithType: AsyncCodeActivity.OnCreateDynamicUpdateMap(UpdateMapMetadata,Activity)
  fullName: System.Activities.AsyncCodeActivity.OnCreateDynamicUpdateMap(UpdateMapMetadata,Activity)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "동적 업데이트에 대 한 맵을 만들 때 이벤트를 발생 시킵니다."
  syntax:
    content: protected override sealed void OnCreateDynamicUpdateMap (System.Activities.DynamicUpdate.UpdateMapMetadata metadata, System.Activities.Activity originalActivity);
    parameters:
    - id: metadata
      type: System.Activities.DynamicUpdate.UpdateMapMetadata
      description: "사용 되는 메타 데이터입니다."
    - id: originalActivity
      type: System.Activities.Activity
      description: "원래 작업입니다."
  overload: System.Activities.AsyncCodeActivity.OnCreateDynamicUpdateMap*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Activities.Activity
  isExternal: false
  name: System.Activities.Activity
- uid: System.Activities.AsyncCodeActivity.#ctor
  parent: System.Activities.AsyncCodeActivity
  isExternal: false
  name: AsyncCodeActivity()
  nameWithType: AsyncCodeActivity.AsyncCodeActivity()
  fullName: System.Activities.AsyncCodeActivity.AsyncCodeActivity()
- uid: System.Activities.AsyncCodeActivity.BeginExecute(System.Activities.AsyncCodeActivityContext,System.AsyncCallback,System.Object)
  parent: System.Activities.AsyncCodeActivity
  isExternal: false
  name: BeginExecute(AsyncCodeActivityContext,AsyncCallback,Object)
  nameWithType: AsyncCodeActivity.BeginExecute(AsyncCodeActivityContext,AsyncCallback,Object)
  fullName: System.Activities.AsyncCodeActivity.BeginExecute(AsyncCodeActivityContext,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Activities.AsyncCodeActivityContext
  parent: System.Activities
  isExternal: false
  name: AsyncCodeActivityContext
  nameWithType: AsyncCodeActivityContext
  fullName: System.Activities.AsyncCodeActivityContext
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Activities.AsyncCodeActivity.CacheMetadata(System.Activities.ActivityMetadata)
  parent: System.Activities.AsyncCodeActivity
  isExternal: false
  name: CacheMetadata(ActivityMetadata)
  nameWithType: AsyncCodeActivity.CacheMetadata(ActivityMetadata)
  fullName: System.Activities.AsyncCodeActivity.CacheMetadata(ActivityMetadata)
- uid: System.Activities.ActivityMetadata
  parent: System.Activities
  isExternal: false
  name: ActivityMetadata
  nameWithType: ActivityMetadata
  fullName: System.Activities.ActivityMetadata
- uid: System.Activities.AsyncCodeActivity.CacheMetadata(System.Activities.CodeActivityMetadata)
  parent: System.Activities.AsyncCodeActivity
  isExternal: false
  name: CacheMetadata(CodeActivityMetadata)
  nameWithType: AsyncCodeActivity.CacheMetadata(CodeActivityMetadata)
  fullName: System.Activities.AsyncCodeActivity.CacheMetadata(CodeActivityMetadata)
- uid: System.Activities.CodeActivityMetadata
  parent: System.Activities
  isExternal: false
  name: CodeActivityMetadata
  nameWithType: CodeActivityMetadata
  fullName: System.Activities.CodeActivityMetadata
- uid: System.Activities.AsyncCodeActivity.Cancel(System.Activities.AsyncCodeActivityContext)
  parent: System.Activities.AsyncCodeActivity
  isExternal: false
  name: Cancel(AsyncCodeActivityContext)
  nameWithType: AsyncCodeActivity.Cancel(AsyncCodeActivityContext)
  fullName: System.Activities.AsyncCodeActivity.Cancel(AsyncCodeActivityContext)
- uid: System.Activities.AsyncCodeActivity.EndExecute(System.Activities.AsyncCodeActivityContext,System.IAsyncResult)
  parent: System.Activities.AsyncCodeActivity
  isExternal: false
  name: EndExecute(AsyncCodeActivityContext,IAsyncResult)
  nameWithType: AsyncCodeActivity.EndExecute(AsyncCodeActivityContext,IAsyncResult)
  fullName: System.Activities.AsyncCodeActivity.EndExecute(AsyncCodeActivityContext,IAsyncResult)
- uid: System.Activities.AsyncCodeActivity.Implementation
  parent: System.Activities.AsyncCodeActivity
  isExternal: false
  name: Implementation
  nameWithType: AsyncCodeActivity.Implementation
  fullName: System.Activities.AsyncCodeActivity.Implementation
- uid: System.Func{System.Activities.Activity}
  parent: System
  isExternal: true
  name: Func<Activity>
  nameWithType: Func<Activity>
  fullName: System.Func<System.Activities.Activity>
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: Func<System.Activities.Activity>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Activities.Activity
    name: Activity
    nameWithType: Activity
    fullName: Activity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.AsyncCodeActivity.ImplementationVersion
  parent: System.Activities.AsyncCodeActivity
  isExternal: false
  name: ImplementationVersion
  nameWithType: AsyncCodeActivity.ImplementationVersion
  fullName: System.Activities.AsyncCodeActivity.ImplementationVersion
- uid: System.Version
  parent: System
  isExternal: true
  name: Version
  nameWithType: Version
  fullName: System.Version
- uid: System.Activities.AsyncCodeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)
  parent: System.Activities.AsyncCodeActivity
  isExternal: false
  name: OnCreateDynamicUpdateMap(UpdateMapMetadata,Activity)
  nameWithType: AsyncCodeActivity.OnCreateDynamicUpdateMap(UpdateMapMetadata,Activity)
  fullName: System.Activities.AsyncCodeActivity.OnCreateDynamicUpdateMap(UpdateMapMetadata,Activity)
- uid: System.Activities.DynamicUpdate.UpdateMapMetadata
  parent: System.Activities.DynamicUpdate
  isExternal: false
  name: UpdateMapMetadata
  nameWithType: UpdateMapMetadata
  fullName: System.Activities.DynamicUpdate.UpdateMapMetadata
- uid: System.Activities.AsyncCodeActivity.#ctor*
  parent: System.Activities.AsyncCodeActivity
  isExternal: false
  name: AsyncCodeActivity
  nameWithType: AsyncCodeActivity.AsyncCodeActivity
- uid: System.Activities.AsyncCodeActivity.BeginExecute*
  parent: System.Activities.AsyncCodeActivity
  isExternal: false
  name: BeginExecute
  nameWithType: AsyncCodeActivity.BeginExecute
- uid: System.Activities.AsyncCodeActivity.CacheMetadata*
  parent: System.Activities.AsyncCodeActivity
  isExternal: false
  name: CacheMetadata
  nameWithType: AsyncCodeActivity.CacheMetadata
- uid: System.Activities.AsyncCodeActivity.Cancel*
  parent: System.Activities.AsyncCodeActivity
  isExternal: false
  name: Cancel
  nameWithType: AsyncCodeActivity.Cancel
- uid: System.Activities.AsyncCodeActivity.EndExecute*
  parent: System.Activities.AsyncCodeActivity
  isExternal: false
  name: EndExecute
  nameWithType: AsyncCodeActivity.EndExecute
- uid: System.Activities.AsyncCodeActivity.Implementation*
  parent: System.Activities.AsyncCodeActivity
  isExternal: false
  name: Implementation
  nameWithType: AsyncCodeActivity.Implementation
- uid: System.Activities.AsyncCodeActivity.ImplementationVersion*
  parent: System.Activities.AsyncCodeActivity
  isExternal: false
  name: ImplementationVersion
  nameWithType: AsyncCodeActivity.ImplementationVersion
- uid: System.Activities.AsyncCodeActivity.OnCreateDynamicUpdateMap*
  parent: System.Activities.AsyncCodeActivity
  isExternal: false
  name: OnCreateDynamicUpdateMap
  nameWithType: AsyncCodeActivity.OnCreateDynamicUpdateMap
