### YamlMime:ManagedReference
items:
- uid: System.Security.AccessControl.CustomAce
  id: CustomAce
  children:
  - System.Security.AccessControl.CustomAce.#ctor(System.Security.AccessControl.AceType,System.Security.AccessControl.AceFlags,System.Byte[])
  - System.Security.AccessControl.CustomAce.BinaryLength
  - System.Security.AccessControl.CustomAce.GetBinaryForm(System.Byte[],System.Int32)
  - System.Security.AccessControl.CustomAce.GetOpaque
  - System.Security.AccessControl.CustomAce.MaxOpaqueLength
  - System.Security.AccessControl.CustomAce.OpaqueLength
  - System.Security.AccessControl.CustomAce.SetOpaque(System.Byte[])
  langs:
  - csharp
  name: CustomAce
  nameWithType: CustomAce
  fullName: System.Security.AccessControl.CustomAce
  type: Class
  summary: "항목 ACE (액세스 제어) 정의 되지 않은의 멤버 중 하나에 의해 나타냅니다는 <xref href=&quot;System.Security.AccessControl.AceType&quot;> </xref> 열거 합니다."
  remarks: "ACE 헤더와 데이터의 불투명 blob CustomAce 개체에 포함 되어 있습니다."
  syntax:
    content: 'public sealed class CustomAce : System.Security.AccessControl.GenericAce'
  inheritance:
  - System.Object
  - System.Security.AccessControl.GenericAce
  implements: []
  inheritedMembers:
  - System.Security.AccessControl.GenericAce.AceFlags
  - System.Security.AccessControl.GenericAce.AceType
  - System.Security.AccessControl.GenericAce.AuditFlags
  - System.Security.AccessControl.GenericAce.Copy
  - System.Security.AccessControl.GenericAce.CreateFromBinaryForm(System.Byte[],System.Int32)
  - System.Security.AccessControl.GenericAce.Equals(System.Object)
  - System.Security.AccessControl.GenericAce.GetHashCode
  - System.Security.AccessControl.GenericAce.InheritanceFlags
  - System.Security.AccessControl.GenericAce.IsInherited
  - System.Security.AccessControl.GenericAce.op_Equality(System.Security.AccessControl.GenericAce,System.Security.AccessControl.GenericAce)
  - System.Security.AccessControl.GenericAce.op_Inequality(System.Security.AccessControl.GenericAce,System.Security.AccessControl.GenericAce)
  - System.Security.AccessControl.GenericAce.PropagationFlags
  platform:
  - net462
- uid: System.Security.AccessControl.CustomAce.#ctor(System.Security.AccessControl.AceType,System.Security.AccessControl.AceFlags,System.Byte[])
  id: '#ctor(System.Security.AccessControl.AceType,System.Security.AccessControl.AceFlags,System.Byte[])'
  parent: System.Security.AccessControl.CustomAce
  langs:
  - csharp
  name: CustomAce(AceType,AceFlags,Byte[])
  nameWithType: CustomAce.CustomAce(AceType,AceFlags,Byte[])
  fullName: System.Security.AccessControl.CustomAce.CustomAce(AceType,AceFlags,Byte[])
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Security.AccessControl.CustomAce&quot;> </xref> 클래스입니다."
  remarks: "`opaque` 데이터가 복제 되지 않습니다. 호출자에 게 데이터를 수정 하지 않는 데이터 소스를 신뢰 하지 않는 경우이 생성자를 호출 하기 전에 데이터를 복제 해야 합니다."
  syntax:
    content: public CustomAce (System.Security.AccessControl.AceType type, System.Security.AccessControl.AceFlags flags, byte[] opaque);
    parameters:
    - id: type
      type: System.Security.AccessControl.AceType
      description: "새 항목 ACE (액세스 제어) 형식입니다. 이 값 보다 커야 <xref href=&quot;System.Security.AccessControl.AceType&quot;> </xref>합니다."
    - id: flags
      type: System.Security.AccessControl.AceFlags
      description: "상속, 상속 전파에 대 한 정보를 지정 하는 플래그 및 감사 새 ACE에 대 한 조건입니다."
    - id: opaque
      type: System.Byte[]
      description: "새 ACE에 대 한 데이터를 포함 하는 바이트 값의 배열입니다. 이 값 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다. 이 배열의 길이의 값 보다 클 수 없습니다는 <xref href=&quot;System.Security.AccessControl.CustomAce.MaxOpaqueLength&quot;> </xref> 필드 및&4;의 배수 여야 합니다."
  overload: System.Security.AccessControl.CustomAce.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "값은 <code> type </code> 매개 변수 보다 크지 않은 <xref href=&quot;System.Security.AccessControl.AceType&quot;> </xref> 또는의 길이 <code> opaque </code> 배열의의 값 보다 커서는 <xref href=&quot;System.Security.AccessControl.CustomAce.MaxOpaqueLength&quot;> </xref> 필드 또는&4;의 배수가 아닙니다."
  platform:
  - net462
- uid: System.Security.AccessControl.CustomAce.BinaryLength
  id: BinaryLength
  parent: System.Security.AccessControl.CustomAce
  langs:
  - csharp
  name: BinaryLength
  nameWithType: CustomAce.BinaryLength
  fullName: System.Security.AccessControl.CustomAce.BinaryLength
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "바이트의 이진 표현 길이 가져옵니다 <xref href=&quot;System.Security.AccessControl.CustomAce&quot;> </xref> 개체입니다. 이 길이 ACL 사용을 이진 배열로 마샬링하기 전에 사용 해야는 <xref:System.Security.AccessControl.CustomAce.GetBinaryForm*>메서드.</xref:System.Security.AccessControl.CustomAce.GetBinaryForm*>"
  syntax:
    content: public override int BinaryLength { get; }
    return:
      type: System.Int32
      description: "현재의 이진 표현 길이 (바이트)를 <xref href=&quot;System.Security.AccessControl.CustomAce&quot;> </xref> 개체입니다."
  overload: System.Security.AccessControl.CustomAce.BinaryLength*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CustomAce.GetBinaryForm(System.Byte[],System.Int32)
  id: GetBinaryForm(System.Byte[],System.Int32)
  parent: System.Security.AccessControl.CustomAce
  langs:
  - csharp
  name: GetBinaryForm(Byte[],Int32)
  nameWithType: CustomAce.GetBinaryForm(Byte[],Int32)
  fullName: System.Security.AccessControl.CustomAce.GetBinaryForm(Byte[],Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "내용을 마샬링합니다는 <xref href=&quot;System.Security.AccessControl.CustomAce&quot;> </xref> 개체에 지정된 된 오프셋에서 시작 하 여 지정 된 바이트 배열입니다."
  syntax:
    content: public override void GetBinaryForm (byte[] binaryForm, int offset);
    parameters:
    - id: binaryForm
      type: System.Byte[]
      description: "바이트 배열 내용의 <xref href=&quot;System.Security.AccessControl.CustomAce&quot;> </xref> 마샬링됩니다."
    - id: offset
      type: System.Int32
      description: "마샬링을 시작할 오프셋입니다."
  overload: System.Security.AccessControl.CustomAce.GetBinaryForm*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>가 음수 이거나 너무 높아서 전체 <xref href=&quot;System.Security.AccessControl.CustomAce&quot;> </xref> 복사할 <code>array</code>합니다."
  platform:
  - net462
- uid: System.Security.AccessControl.CustomAce.GetOpaque
  id: GetOpaque
  parent: System.Security.AccessControl.CustomAce
  langs:
  - csharp
  name: GetOpaque()
  nameWithType: CustomAce.GetOpaque()
  fullName: System.Security.AccessControl.CustomAce.GetOpaque()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "이 관련 된 불투명 데이터 반환 <xref href=&quot;System.Security.AccessControl.CustomAce&quot;> </xref> 개체입니다."
  syntax:
    content: public byte[] GetOpaque ();
    parameters: []
    return:
      type: System.Byte[]
      description: "이 관련 된 불투명 데이터를 나타내는 바이트 값 배열을 <xref href=&quot;System.Security.AccessControl.CustomAce&quot;> </xref> 개체입니다."
  overload: System.Security.AccessControl.CustomAce.GetOpaque*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CustomAce.MaxOpaqueLength
  id: MaxOpaqueLength
  parent: System.Security.AccessControl.CustomAce
  langs:
  - csharp
  name: MaxOpaqueLength
  nameWithType: CustomAce.MaxOpaqueLength
  fullName: System.Security.AccessControl.CustomAce.MaxOpaqueLength
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "이 대 한 불투명 데이터 blob의 허용 되는 최대 반환 <xref href=&quot;System.Security.AccessControl.CustomAce&quot;> </xref> 개체입니다."
  syntax:
    content: public static readonly int MaxOpaqueLength;
    return:
      type: System.Int32
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CustomAce.OpaqueLength
  id: OpaqueLength
  parent: System.Security.AccessControl.CustomAce
  langs:
  - csharp
  name: OpaqueLength
  nameWithType: CustomAce.OpaqueLength
  fullName: System.Security.AccessControl.CustomAce.OpaqueLength
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "이 관련 된 불투명 데이터의 길이 가져옵니다 <xref href=&quot;System.Security.AccessControl.CustomAce&quot;> </xref> 개체입니다."
  syntax:
    content: public int OpaqueLength { get; }
    return:
      type: System.Int32
      description: "불투명 콜백 데이터의 길이입니다."
  overload: System.Security.AccessControl.CustomAce.OpaqueLength*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CustomAce.SetOpaque(System.Byte[])
  id: SetOpaque(System.Byte[])
  parent: System.Security.AccessControl.CustomAce
  langs:
  - csharp
  name: SetOpaque(Byte[])
  nameWithType: CustomAce.SetOpaque(Byte[])
  fullName: System.Security.AccessControl.CustomAce.SetOpaque(Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "이 관련 된 불투명 콜백 데이터 설정 <xref href=&quot;System.Security.AccessControl.CustomAce&quot;> </xref> 개체입니다."
  syntax:
    content: public void SetOpaque (byte[] opaque);
    parameters:
    - id: opaque
      type: System.Byte[]
      description: "이 대 한 불투명 콜백 데이터를 나타내는 바이트 값 배열을 <xref href=&quot;System.Security.AccessControl.CustomAce&quot;> </xref> 개체입니다."
  overload: System.Security.AccessControl.CustomAce.SetOpaque*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.AccessControl.GenericAce
  isExternal: false
  name: System.Security.AccessControl.GenericAce
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Security.AccessControl.CustomAce.#ctor(System.Security.AccessControl.AceType,System.Security.AccessControl.AceFlags,System.Byte[])
  parent: System.Security.AccessControl.CustomAce
  isExternal: false
  name: CustomAce(AceType,AceFlags,Byte[])
  nameWithType: CustomAce.CustomAce(AceType,AceFlags,Byte[])
  fullName: System.Security.AccessControl.CustomAce.CustomAce(AceType,AceFlags,Byte[])
- uid: System.Security.AccessControl.AceType
  parent: System.Security.AccessControl
  isExternal: false
  name: AceType
  nameWithType: AceType
  fullName: System.Security.AccessControl.AceType
- uid: System.Security.AccessControl.AceFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: AceFlags
  nameWithType: AceFlags
  fullName: System.Security.AccessControl.AceFlags
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.AccessControl.CustomAce.BinaryLength
  parent: System.Security.AccessControl.CustomAce
  isExternal: false
  name: BinaryLength
  nameWithType: CustomAce.BinaryLength
  fullName: System.Security.AccessControl.CustomAce.BinaryLength
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.AccessControl.CustomAce.GetBinaryForm(System.Byte[],System.Int32)
  parent: System.Security.AccessControl.CustomAce
  isExternal: false
  name: GetBinaryForm(Byte[],Int32)
  nameWithType: CustomAce.GetBinaryForm(Byte[],Int32)
  fullName: System.Security.AccessControl.CustomAce.GetBinaryForm(Byte[],Int32)
- uid: System.Security.AccessControl.CustomAce.GetOpaque
  parent: System.Security.AccessControl.CustomAce
  isExternal: false
  name: GetOpaque()
  nameWithType: CustomAce.GetOpaque()
  fullName: System.Security.AccessControl.CustomAce.GetOpaque()
- uid: System.Security.AccessControl.CustomAce.MaxOpaqueLength
  parent: System.Security.AccessControl.CustomAce
  isExternal: false
  name: MaxOpaqueLength
  nameWithType: CustomAce.MaxOpaqueLength
  fullName: System.Security.AccessControl.CustomAce.MaxOpaqueLength
- uid: System.Security.AccessControl.CustomAce.OpaqueLength
  parent: System.Security.AccessControl.CustomAce
  isExternal: false
  name: OpaqueLength
  nameWithType: CustomAce.OpaqueLength
  fullName: System.Security.AccessControl.CustomAce.OpaqueLength
- uid: System.Security.AccessControl.CustomAce.SetOpaque(System.Byte[])
  parent: System.Security.AccessControl.CustomAce
  isExternal: false
  name: SetOpaque(Byte[])
  nameWithType: CustomAce.SetOpaque(Byte[])
  fullName: System.Security.AccessControl.CustomAce.SetOpaque(Byte[])
- uid: System.Security.AccessControl.CustomAce.#ctor*
  parent: System.Security.AccessControl.CustomAce
  isExternal: false
  name: CustomAce
  nameWithType: CustomAce.CustomAce
- uid: System.Security.AccessControl.CustomAce.BinaryLength*
  parent: System.Security.AccessControl.CustomAce
  isExternal: false
  name: BinaryLength
  nameWithType: CustomAce.BinaryLength
- uid: System.Security.AccessControl.CustomAce.GetBinaryForm*
  parent: System.Security.AccessControl.CustomAce
  isExternal: false
  name: GetBinaryForm
  nameWithType: CustomAce.GetBinaryForm
- uid: System.Security.AccessControl.CustomAce.GetOpaque*
  parent: System.Security.AccessControl.CustomAce
  isExternal: false
  name: GetOpaque
  nameWithType: CustomAce.GetOpaque
- uid: System.Security.AccessControl.CustomAce.OpaqueLength*
  parent: System.Security.AccessControl.CustomAce
  isExternal: false
  name: OpaqueLength
  nameWithType: CustomAce.OpaqueLength
- uid: System.Security.AccessControl.CustomAce.SetOpaque*
  parent: System.Security.AccessControl.CustomAce
  isExternal: false
  name: SetOpaque
  nameWithType: CustomAce.SetOpaque
