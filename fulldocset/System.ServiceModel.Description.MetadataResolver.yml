### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Description.MetadataResolver
  id: MetadataResolver
  children:
  - System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.AsyncCallback,System.Object)
  - System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Type,System.ServiceModel.EndpointAddress,System.AsyncCallback,System.Object)
  - System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.ServiceModel.Description.MetadataExchangeClient,System.AsyncCallback,System.Object)
  - System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.AsyncCallback,System.Object)
  - System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Type,System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.AsyncCallback,System.Object)
  - System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.ServiceModel.Description.MetadataExchangeClient,System.AsyncCallback,System.Object)
  - System.ServiceModel.Description.MetadataResolver.EndResolve(System.IAsyncResult)
  - System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress)
  - System.ServiceModel.Description.MetadataResolver.Resolve(System.Type,System.ServiceModel.EndpointAddress)
  - System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.ServiceModel.Description.MetadataExchangeClient)
  - System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)
  - System.ServiceModel.Description.MetadataResolver.Resolve(System.Type,System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)
  - System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.ServiceModel.Description.MetadataExchangeClient)
  langs:
  - csharp
  name: MetadataResolver
  nameWithType: MetadataResolver
  fullName: System.ServiceModel.Description.MetadataResolver
  type: Class
  summary: "검색 하 고 서의 메타 데이터를 가져오는 <xref:System.ServiceModel.Description.ServiceEndpoint>개체입니다.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  remarks: "MetadataResolver 클래스를 사용 하 여 신속 하 게 메타 데이터에서 서비스에 대 한 끝점을 가져올 합니다. 이 클래스는 다운로드 하 고 메타 데이터를 변환 <xref:System.ServiceModel.Description.ServiceEndpoint>개체입니다.</xref:System.ServiceModel.Description.ServiceEndpoint> 메타 데이터를 다운로드 하 고 해당 정보 <xref:System.ServiceModel.Description.MetadataSet?displayProperty=fullName>를 참조 하십시오 <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> </xref:System.ServiceModel.Description.MetadataSet?displayProperty=fullName> 를 처리 하려면"
  example:
  - "The following code example shows the use of the MetadataResolver class to return metadata as a collection of <xref:System.ServiceModel.Description.ServiceEndpoint> objects that are then used to connect to a service instance.  \n  \n [!code-cs[MetadataResolver#1](~/add/codesnippet/csharp/metadataresolver.client/client.cs#1)]  \n  \n The following code example shows the use of the MetadataResolver to download and return metadata as a collection of <xref:System.ServiceModel.Description.ServiceEndpoint> objects using an HTTP GET request rather than WS-Transfer.  \n  \n [!code-cs[MetadataResolver#2](~/add/codesnippet/csharp/metadataresolver.client/client.cs#2)]"
  syntax:
    content: public static class MetadataResolver
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.AsyncCallback,System.Object)
  id: BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Description.MetadataResolver
  langs:
  - csharp
  name: BeginResolve(IEnumerable<ContractDescription>,EndpointAddress,AsyncCallback,Object)
  nameWithType: MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,EndpointAddress,AsyncCallback,Object)
  fullName: System.ServiceModel.Description.MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,EndpointAddress,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "메타 데이터 주소를 확인 하는 비동기 호출을 시작는 <xref:System.ServiceModel.Description.ServiceEndpoint>지정 된 주소와 비동기 상태 및 대리자를 사용 하 여 지정된 된 계약에 대 한 개체입니다.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  remarks: "<xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>은 <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>.</xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> </xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> 기본값은 및 메타 데이터를 검색 하는 데 사용 되</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> 는 기본 설정       메타 데이터를 다운로드 하지만 정보를 확인 하지 <xref:System.ServiceModel.Description.ServiceEndpoint>개체를 사용 하 여는 <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>직접.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> </xref:System.ServiceModel.Description.ServiceEndpoint>      > [!NOTE] > 끝점을 하나도 가져오지 않았거나 계약과 일치 하는 끝점이 없으면 빈 컬렉션이 반환 됩니다. 빈 컬렉션이 반환 되 면 경고 추적이 기록 됩니다."
  syntax:
    content: public static IAsyncResult BeginResolve (System.Collections.Generic.IEnumerable<System.ServiceModel.Description.ContractDescription> contracts, System.ServiceModel.EndpointAddress address, AsyncCallback callback, object asyncState);
    parameters:
    - id: contracts
      type: System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription}
      description: "다운로드 하 여 메타 데이터를 확인할 대상 계약입니다."
    - id: address
      type: System.ServiceModel.EndpointAddress
      description: "메타 데이터 주소입니다."
    - id: callback
      type: System.AsyncCallback
      description: "호출이 완료 될 때 호출 되는 비동기 콜백 대리자입니다."
    - id: asyncState
      type: System.Object
      description: "비동기 호출과 관련 된 상태입니다."
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>비동기 확인 작업을 참조 하는.</xref:System.IAsyncResult>"
  overload: System.ServiceModel.Description.MetadataResolver.BeginResolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "주소, 계약 또는 콜백이 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>contracts</code>가 비어 있거나의 구성원을 하나 이상 <code>contracts</code> 은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, 또는 <code>contracts</code> 동일한 이름과 네임 스페이스가 있는 둘 이상의 계약이 포함 되어 있습니다."
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Type,System.ServiceModel.EndpointAddress,System.AsyncCallback,System.Object)
  id: BeginResolve(System.Type,System.ServiceModel.EndpointAddress,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Description.MetadataResolver
  langs:
  - csharp
  name: BeginResolve(Type,EndpointAddress,AsyncCallback,Object)
  nameWithType: MetadataResolver.BeginResolve(Type,EndpointAddress,AsyncCallback,Object)
  fullName: System.ServiceModel.Description.MetadataResolver.BeginResolve(Type,EndpointAddress,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "메타 데이터 주소를 확인 하는 비동기 호출을 시작는 <xref:System.ServiceModel.Description.ServiceEndpoint>지정 된 주소와 비동기 상태 및 대리자를 사용 하 여 지정된 된 계약에 대 한 개체입니다.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  remarks: "<xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>은 <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>.</xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> </xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> 기본값은 및 메타 데이터를 검색 하는 데 사용 되</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> 는 기본 설정       메타 데이터를 다운로드 하지만 정보를 확인 하지 <xref:System.ServiceModel.Description.ServiceEndpoint>개체를 사용 하 여는 <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>직접.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> </xref:System.ServiceModel.Description.ServiceEndpoint>      > [!NOTE] > 끝점을 하나도 가져오지 않았거나 계약과 일치 하는 끝점이 없으면 빈 컬렉션이 반환 됩니다. 빈 컬렉션이 반환 되 면 경고 추적이 기록 됩니다.       이 메서드는 계약 형식을 지정 하는 필요 합니다. 클라이언트 코드에서 서비스 인터페이스를 선언 하거나 사용 하 여 계약을 지정할 수는 [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] Svcutil.exe에서 생성 된 클라이언트입니다. 인터페이스가 변경 되 면 (예: 새 작업을 추가) 클라이언트 코드에서 인터페이스를 업데이트 하거나 해야 새 생성 [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] 클라이언트입니다. 이렇게 하지 않으면 예외가 throw 됩니다. 예를 들어 add (), sub (), mult Div() 배열을 정의 하는 ICalculator 라는 서비스 계약을 구현 하는 서비스를 해야 합니다. 클라이언트 응용 프로그램을 만들고 생성 [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] 클라이언트입니다. 그런 다음 echo () 라는 ICalculator에 메서드를 추가 합니다. 다음 호출 하는 응용 프로그램을 작성 하는 경우 <xref:System.ServiceModel.Description.MetadataResolver.Resolve%28System.Type%2CSystem.ServiceModel.EndpointAddress%29>새를 생성 하지 않고 [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] 클라이언트 얻게 다음 예외가 발생 합니다.</xref:System.ServiceModel.Description.MetadataResolver.Resolve%28System.Type%2CSystem.ServiceModel.EndpointAddress%29>       `Unhandled Exception: System.ServiceModel.Description.WsdlImporter+WsdlImportException: Cannot locate operation Echo in Contract ICalculator`를 재정의하려면 선택합니다."
  syntax:
    content: public static IAsyncResult BeginResolve (Type contract, System.ServiceModel.EndpointAddress address, AsyncCallback callback, object asyncState);
    parameters:
    - id: contract
      type: System.Type
      description: "계약을 다운로드 하 고 메타 데이터를 확인 합니다."
    - id: address
      type: System.ServiceModel.EndpointAddress
      description: "메타 데이터 주소입니다."
    - id: callback
      type: System.AsyncCallback
      description: "호출이 완료 될 때 호출 되는 비동기 콜백 대리자입니다."
    - id: asyncState
      type: System.Object
      description: "비동기 호출과 관련 된 상태입니다."
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>비동기 확인 작업을 참조 하는.</xref:System.IAsyncResult>"
  overload: System.ServiceModel.Description.MetadataResolver.BeginResolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "주소, 계약 또는 콜백이 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.ServiceModel.Description.MetadataExchangeClient,System.AsyncCallback,System.Object)
  id: BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.ServiceModel.Description.MetadataExchangeClient,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Description.MetadataResolver
  langs:
  - csharp
  name: BeginResolve(IEnumerable<ContractDescription>,EndpointAddress,MetadataExchangeClient,AsyncCallback,Object)
  nameWithType: MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,EndpointAddress,MetadataExchangeClient,AsyncCallback,Object)
  fullName: System.ServiceModel.Description.MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,EndpointAddress,MetadataExchangeClient,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "메타 데이터 주소를 확인 하는 비동기 호출을 시작는 <xref:System.ServiceModel.Description.ServiceEndpoint>지정 된 주소를 사용 하 여 지정된 된 계약에 대 한 개체 <xref href=&quot;System.ServiceModel.Description.MetadataExchangeClient&quot;> </xref>, 비동기 상태 및 대리자.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  remarks: "기본값은 <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>은 <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>.</xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> </xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>       메타 데이터를 다운로드 하지만 정보를 확인 하지 <xref:System.ServiceModel.Description.ServiceEndpoint>개체를 사용 하 여는 <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>직접.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> </xref:System.ServiceModel.Description.ServiceEndpoint>      > [!NOTE] > 끝점을 하나도 가져오지 않았거나 계약과 일치 하는 끝점이 없으면 빈 컬렉션이 반환 됩니다. 빈 컬렉션이 반환 되 면 경고 추적이 기록 됩니다."
  syntax:
    content: public static IAsyncResult BeginResolve (System.Collections.Generic.IEnumerable<System.ServiceModel.Description.ContractDescription> contracts, System.ServiceModel.EndpointAddress address, System.ServiceModel.Description.MetadataExchangeClient client, AsyncCallback callback, object asyncState);
    parameters:
    - id: contracts
      type: System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription}
      description: "다운로드 하 여 메타 데이터를 확인할 대상 계약입니다."
    - id: address
      type: System.ServiceModel.EndpointAddress
      description: "메타 데이터 주소입니다."
    - id: client
      type: System.ServiceModel.Description.MetadataExchangeClient
      description: "<xref href=&quot;System.ServiceModel.Description.MetadataExchangeClient&quot;> </xref> 메타 데이터를 검색 하는 데 사용 합니다."
    - id: callback
      type: System.AsyncCallback
      description: "호출이 완료 될 때 호출 되는 비동기 콜백 대리자입니다."
    - id: asyncState
      type: System.Object
      description: "비동기 호출과 관련 된 상태입니다."
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>비동기 확인 작업을 참조 하는.</xref:System.IAsyncResult>"
  overload: System.ServiceModel.Description.MetadataResolver.BeginResolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "주소, 계약, 클라이언트 또는 콜백이 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>contracts</code>가 비어 있거나의 구성원을 하나 이상 <code>contracts</code> 매개 변수가 null 이면 또는 <code>contracts</code> 동일한 이름과 네임 스페이스가 있는 둘 이상의 계약이 포함 되어 있습니다."
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.AsyncCallback,System.Object)
  id: BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Description.MetadataResolver
  langs:
  - csharp
  name: BeginResolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,AsyncCallback,Object)
  nameWithType: MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,AsyncCallback,Object)
  fullName: System.ServiceModel.Description.MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "메타 데이터 주소를 확인 하는 비동기 호출을 시작는 <xref:System.ServiceModel.Description.ServiceEndpoint>지정 된 주소를 사용 하 여 지정된 된 계약에 대 한 개체 <xref href=&quot;System.ServiceModel.Description.MetadataExchangeClientMode&quot;> </xref> 값, 비동기 상태 및 대리자.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  remarks: "기본 설정을 <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>메타 데이터를 검색 하는 데 사용 됩니다.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>       메타 데이터를 다운로드 하지만 정보를 확인 하지 <xref:System.ServiceModel.Description.ServiceEndpoint>개체를 사용 하 여는 <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>직접.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> </xref:System.ServiceModel.Description.ServiceEndpoint>      > [!NOTE] > 끝점을 하나도 가져오지 않았거나 계약과 일치 하는 끝점이 없으면 빈 컬렉션이 반환 됩니다. 빈 컬렉션이 반환 되 면 경고 추적이 기록 됩니다."
  syntax:
    content: public static IAsyncResult BeginResolve (System.Collections.Generic.IEnumerable<System.ServiceModel.Description.ContractDescription> contracts, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode, AsyncCallback callback, object asyncState);
    parameters:
    - id: contracts
      type: System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription}
      description: "다운로드 하 여 메타 데이터를 확인할 대상 계약입니다."
    - id: address
      type: System.Uri
      description: "메타 데이터 주소입니다."
    - id: mode
      type: System.ServiceModel.Description.MetadataExchangeClientMode
      description: "검색 모드입니다."
    - id: callback
      type: System.AsyncCallback
      description: "호출이 완료 될 때 호출 되는 비동기 콜백 대리자입니다."
    - id: asyncState
      type: System.Object
      description: "비동기 호출과 관련 된 상태입니다."
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>비동기 확인 작업을 참조 하는.</xref:System.IAsyncResult>"
  overload: System.ServiceModel.Description.MetadataResolver.BeginResolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "주소, 계약 또는 콜백이 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>contracts</code>가 비어 있거나의 구성원을 하나 이상 <code>contracts</code> 매개 변수가 null 이면 또는 <code>contracts</code> 동일한 이름과 네임 스페이스가 있는 둘 이상의 계약이 포함 되어 있습니다."
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Type,System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.AsyncCallback,System.Object)
  id: BeginResolve(System.Type,System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Description.MetadataResolver
  langs:
  - csharp
  name: BeginResolve(Type,Uri,MetadataExchangeClientMode,AsyncCallback,Object)
  nameWithType: MetadataResolver.BeginResolve(Type,Uri,MetadataExchangeClientMode,AsyncCallback,Object)
  fullName: System.ServiceModel.Description.MetadataResolver.BeginResolve(Type,Uri,MetadataExchangeClientMode,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "메타 데이터 주소를 확인 하는 비동기 호출을 시작는 <xref:System.ServiceModel.Description.ServiceEndpoint>지정된 된 주소를 사용 하 여 지정된 된 계약에 대 한 개체 <xref href=&quot;System.ServiceModel.Description.MetadataExchangeClientMode&quot;> </xref>, 비동기 상태 및 대리자.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  remarks: "기본 설정을 <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>메타 데이터를 검색 하는 데 사용 됩니다.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>       메타 데이터를 다운로드 하지만 정보를 확인 하지 <xref:System.ServiceModel.Description.ServiceEndpoint>개체를 사용 하 여는 <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>직접.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> </xref:System.ServiceModel.Description.ServiceEndpoint>      > [!NOTE] > 끝점을 하나도 가져오지 않았거나 계약과 일치 하는 끝점이 없으면 빈 컬렉션이 반환 됩니다. 빈 컬렉션이 반환 되 면 경고 추적이 기록 됩니다."
  syntax:
    content: public static IAsyncResult BeginResolve (Type contract, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode, AsyncCallback callback, object asyncState);
    parameters:
    - id: contract
      type: System.Type
      description: "계약을 다운로드 하 고 메타 데이터를 확인 합니다."
    - id: address
      type: System.Uri
      description: "메타 데이터 주소입니다."
    - id: mode
      type: System.ServiceModel.Description.MetadataExchangeClientMode
      description: "검색 모드입니다."
    - id: callback
      type: System.AsyncCallback
      description: "호출이 완료 될 때 호출 되는 비동기 콜백 대리자입니다."
    - id: asyncState
      type: System.Object
      description: "비동기 호출과 관련 된 상태입니다."
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>비동기 확인 작업을 참조 하는.</xref:System.IAsyncResult>"
  overload: System.ServiceModel.Description.MetadataResolver.BeginResolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "주소, 계약 또는 콜백이 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.ServiceModel.Description.MetadataExchangeClient,System.AsyncCallback,System.Object)
  id: BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.ServiceModel.Description.MetadataExchangeClient,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Description.MetadataResolver
  langs:
  - csharp
  name: BeginResolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,MetadataExchangeClient,AsyncCallback,Object)
  nameWithType: MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,MetadataExchangeClient,AsyncCallback,Object)
  fullName: System.ServiceModel.Description.MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,MetadataExchangeClient,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "메타 데이터 주소를 확인 하는 비동기 호출을 시작는 <xref:System.ServiceModel.Description.ServiceEndpoint>지정 된 주소를 사용 하 여 지정된 된 계약에 대 한 개체 <xref href=&quot;System.ServiceModel.Description.MetadataExchangeClient&quot;> </xref>, <xref href=&quot;System.ServiceModel.Description.MetadataExchangeClientMode&quot;> </xref>, 비동기 상태 및 대리자.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  remarks: "메타 데이터를 다운로드 하지만 정보를 확인 하지 <xref:System.ServiceModel.Description.ServiceEndpoint>개체를 사용 하 여는 <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>직접.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> </xref:System.ServiceModel.Description.ServiceEndpoint>      > [!NOTE] > 끝점을 하나도 가져오지 않았거나 계약과 일치 하는 끝점이 없으면 빈 컬렉션이 반환 됩니다. 빈 컬렉션이 반환 되 면 경고 추적이 기록 됩니다."
  syntax:
    content: public static IAsyncResult BeginResolve (System.Collections.Generic.IEnumerable<System.ServiceModel.Description.ContractDescription> contracts, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode, System.ServiceModel.Description.MetadataExchangeClient client, AsyncCallback callback, object asyncState);
    parameters:
    - id: contracts
      type: System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription}
      description: "다운로드 하 여 메타 데이터를 확인할 대상 계약입니다."
    - id: address
      type: System.Uri
      description: "메타 데이터 주소입니다."
    - id: mode
      type: System.ServiceModel.Description.MetadataExchangeClientMode
      description: "검색 모드입니다."
    - id: client
      type: System.ServiceModel.Description.MetadataExchangeClient
      description: "<xref href=&quot;System.ServiceModel.Description.MetadataExchangeClient&quot;> </xref> 메타 데이터를 검색 하는 데 사용 합니다."
    - id: callback
      type: System.AsyncCallback
      description: "호출이 완료 될 때 호출 되는 비동기 콜백 대리자입니다."
    - id: asyncState
      type: System.Object
      description: "비동기 호출과 관련 된 상태입니다."
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>비동기 확인 작업을 참조 하는.</xref:System.IAsyncResult>"
  overload: System.ServiceModel.Description.MetadataResolver.BeginResolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "주소, 계약 또는 콜백이 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>contracts</code>가 비어 있거나의 구성원을 하나 이상 <code>contracts</code> 매개 변수가 null 이면 또는 <code>contracts</code> 동일한 이름과 네임 스페이스가 있는 둘 이상의 계약이 포함 되어 있습니다."
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataResolver.EndResolve(System.IAsyncResult)
  id: EndResolve(System.IAsyncResult)
  parent: System.ServiceModel.Description.MetadataResolver
  langs:
  - csharp
  name: EndResolve(IAsyncResult)
  nameWithType: MetadataResolver.EndResolve(IAsyncResult)
  fullName: System.ServiceModel.Description.MetadataResolver.EndResolve(IAsyncResult)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "끝점의 컬렉션에 메타 데이터를 해결 하는 비동기 호출을 완료 합니다."
  remarks: "중 하나에 대 한 비동기 호출을 종료는 <xref:System.ServiceModel.Description.MetadataResolver.BeginResolve%2A>메서드.</xref:System.ServiceModel.Description.MetadataResolver.BeginResolve%2A>"
  syntax:
    content: public static System.ServiceModel.Description.ServiceEndpointCollection EndResolve (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>개체에 대 한 호출에서 받은입니다는 <xref:System.ServiceModel.Description.MetadataResolver.BeginResolve*>메서드.</xref:System.ServiceModel.Description.MetadataResolver.BeginResolve*> </xref:System.IAsyncResult>"
    return:
      type: System.ServiceModel.Description.ServiceEndpointCollection
      description: "컬렉션 <xref:System.ServiceModel.Description.ServiceEndpoint>메타 데이터에 포함 된 끝점에 대 한 개체입니다.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  overload: System.ServiceModel.Description.MetadataResolver.EndResolve*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress)
  id: Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress)
  parent: System.ServiceModel.Description.MetadataResolver
  langs:
  - csharp
  name: Resolve(IEnumerable<ContractDescription>,EndpointAddress)
  nameWithType: MetadataResolver.Resolve(IEnumerable<ContractDescription>,EndpointAddress)
  fullName: System.ServiceModel.Description.MetadataResolver.Resolve(IEnumerable<ContractDescription>,EndpointAddress)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "메타 데이터 주소를 확인는 <xref:System.ServiceModel.Description.ServiceEndpoint>지정한 메타 데이터 주소를 사용 하 여 지정된 된 계약에 대 한 개체입니다.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  remarks: "<xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>은 <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>.</xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> </xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> 기본값은 및 메타 데이터를 검색 하는 데 사용 되</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> 는 기본 설정       메타 데이터를 다운로드 하지만 정보를 확인 하지 <xref:System.ServiceModel.Description.ServiceEndpoint>개체를 사용 하 여는 <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>직접.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> </xref:System.ServiceModel.Description.ServiceEndpoint>      > [!NOTE] > 끝점을 하나도 가져오지 않았거나 계약과 일치 하는 끝점이 없으면 빈 컬렉션이 반환 됩니다. 빈 컬렉션이 반환 되 면 경고 추적이 기록 됩니다."
  syntax:
    content: public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (System.Collections.Generic.IEnumerable<System.ServiceModel.Description.ContractDescription> contracts, System.ServiceModel.EndpointAddress address);
    parameters:
    - id: contracts
      type: System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription}
      description: "다운로드 하 여 메타 데이터를 확인할 대상 계약입니다."
    - id: address
      type: System.ServiceModel.EndpointAddress
      description: "메타 데이터 주소입니다."
    return:
      type: System.ServiceModel.Description.ServiceEndpointCollection
      description: "컬렉션 <xref:System.ServiceModel.Description.ServiceEndpoint>지정된 된 계약에 대 한 개체입니다.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  overload: System.ServiceModel.Description.MetadataResolver.Resolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "주소 또는 계약 컬렉션이 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>contracts</code>가 비어 있거나의 구성원을 하나 이상 <code>contracts</code> 매개 변수가 null 이면 또는 <code>contracts</code> 동일한 이름과 네임 스페이스가 있는 둘 이상의 계약이 포함 되어 있습니다."
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Type,System.ServiceModel.EndpointAddress)
  id: Resolve(System.Type,System.ServiceModel.EndpointAddress)
  parent: System.ServiceModel.Description.MetadataResolver
  langs:
  - csharp
  name: Resolve(Type,EndpointAddress)
  nameWithType: MetadataResolver.Resolve(Type,EndpointAddress)
  fullName: System.ServiceModel.Description.MetadataResolver.Resolve(Type,EndpointAddress)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "다운로드 하 고 컬렉션으로 메타 데이터 주소를 확인 <xref:System.ServiceModel.Description.ServiceEndpoint>지정된 된 주소에서 지정 된 계약에 대 한 개체입니다.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  remarks: "Resolve 메서드를 사용 하 여 다운로드 하 고 메타 데이터를 분석할 때 사용할 계약 및 메타 데이터 주소를 지정 합니다.       <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>은 <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>.</xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> </xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> 기본값은 및 메타 데이터를 검색 하는 데 사용 되</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> 는 기본 설정       메타 데이터를 다운로드 하지만 정보를 확인 하지 <xref:System.ServiceModel.Description.ServiceEndpoint>개체를 사용 하 여는 <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>직접.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> </xref:System.ServiceModel.Description.ServiceEndpoint>      > [!NOTE] > 끝점을 하나도 가져오지 않았거나 계약과 일치 하는 끝점이 없으면 빈 컬렉션이 반환 됩니다. 빈 컬렉션이 반환 되 면 경고 추적이 기록 됩니다.       이 메서드는 계약 형식을 지정 하는 필요 합니다. 클라이언트 코드에서 서비스 인터페이스를 선언 하거나 사용 하 여 계약을 지정할 수는 [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] Svcutil.exe에서 생성 된 클라이언트입니다. 인터페이스가 변경 되 면 (예: 새 작업을 추가) 클라이언트 코드에서 인터페이스를 업데이트 하거나 해야 새 생성 [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] 클라이언트입니다. 이렇게 하지 않으면 예외가 throw 됩니다. 예를 들어 add (), sub (), mult Div() 배열을 정의 하는 ICalculator 라는 서비스 계약을 구현 하는 서비스를 해야 합니다. 클라이언트 응용 프로그램을 만들고 생성 [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] 클라이언트입니다. 그런 다음 echo () 라는 ICalculator에 메서드를 추가 합니다. 작성 하는 경우 다음 응용 프로그램 확인 새를 생성 하지 않고 호출 [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] 클라이언트 얻게 다음 예외가 발생 합니다.       `Unhandled Exception: System.ServiceModel.Description.WsdlImporter+WsdlImportException: Cannot locate operation Echo in Contract ICalculator`를 재정의하려면 선택합니다."
  example:
  - "The following code example shows the use of the <xref:System.ServiceModel.Description.MetadataResolver> class to return metadata as a collection of <xref:System.ServiceModel.Description.ServiceEndpoint> objects that are then used to connect to a service instance.  \n  \n [!code-cs[MetadataResolver#1](~/add/codesnippet/csharp/metadataresolver.client/client.cs#1)]"
  syntax:
    content: public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (Type contract, System.ServiceModel.EndpointAddress address);
    parameters:
    - id: contract
      type: System.Type
      description: "다운로드 하 여 메타 데이터를 확인할 대상 계약입니다."
    - id: address
      type: System.ServiceModel.EndpointAddress
      description: "메타 데이터 주소입니다."
    return:
      type: System.ServiceModel.Description.ServiceEndpointCollection
      description: "컬렉션 <xref:System.ServiceModel.Description.ServiceEndpoint>지정된 된 계약에 대 한 개체입니다.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  overload: System.ServiceModel.Description.MetadataResolver.Resolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "주소 또는 계약 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.ServiceModel.Description.MetadataExchangeClient)
  id: Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.ServiceModel.Description.MetadataExchangeClient)
  parent: System.ServiceModel.Description.MetadataResolver
  langs:
  - csharp
  name: Resolve(IEnumerable<ContractDescription>,EndpointAddress,MetadataExchangeClient)
  nameWithType: MetadataResolver.Resolve(IEnumerable<ContractDescription>,EndpointAddress,MetadataExchangeClient)
  fullName: System.ServiceModel.Description.MetadataResolver.Resolve(IEnumerable<ContractDescription>,EndpointAddress,MetadataExchangeClient)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "메타 데이터 주소를 확인는 <xref:System.ServiceModel.Description.ServiceEndpoint>지정한 메타 데이터 주소를 사용 하 여 지정된 된 계약에 대 한 개체 및 <xref href=&quot;System.ServiceModel.Description.MetadataExchangeClient&quot;> </xref>.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  remarks: "기본값은 <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>은 <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>.</xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> </xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>       메타 데이터를 다운로드 하지만 정보를 확인 하지 <xref:System.ServiceModel.Description.ServiceEndpoint>개체를 사용 하 여는 <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>직접.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> </xref:System.ServiceModel.Description.ServiceEndpoint>      > [!NOTE] > 끝점을 하나도 가져오지 않았거나 계약과 일치 하는 끝점이 없으면 빈 컬렉션이 반환 됩니다. 빈 컬렉션이 반환 되 면 경고 추적이 기록 됩니다."
  syntax:
    content: public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (System.Collections.Generic.IEnumerable<System.ServiceModel.Description.ContractDescription> contracts, System.ServiceModel.EndpointAddress address, System.ServiceModel.Description.MetadataExchangeClient client);
    parameters:
    - id: contracts
      type: System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription}
      description: "다운로드 하 여 메타 데이터를 확인할 대상 계약입니다."
    - id: address
      type: System.ServiceModel.EndpointAddress
      description: "메타 데이터 주소입니다."
    - id: client
      type: System.ServiceModel.Description.MetadataExchangeClient
      description: "<xref href=&quot;System.ServiceModel.Description.MetadataExchangeClient&quot;> </xref> 메타 데이터를 검색 하는 데 사용 합니다."
    return:
      type: System.ServiceModel.Description.ServiceEndpointCollection
      description: "컬렉션 <xref:System.ServiceModel.Description.ServiceEndpoint>지정된 된 계약에 대 한 개체입니다.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  overload: System.ServiceModel.Description.MetadataResolver.Resolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "주소, 계약 컬렉션 또는 클라이언트는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>contracts</code>가 비어 있거나의 구성원을 하나 이상 <code>contracts</code> 매개 변수가 null 이면 또는 <code>contracts</code> 동일한 이름과 네임 스페이스가 있는 둘 이상의 계약이 포함 되어 있습니다."
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)
  id: Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)
  parent: System.ServiceModel.Description.MetadataResolver
  langs:
  - csharp
  name: Resolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode)
  nameWithType: MetadataResolver.Resolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode)
  fullName: System.ServiceModel.Description.MetadataResolver.Resolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "메타 데이터 주소를 확인는 <xref:System.ServiceModel.Description.ServiceEndpoint>지정된 된 주소 및 전송 모드를 사용 하 여 지정된 된 계약에 대 한 개체입니다.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  remarks: "기본 설정을 <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>메타 데이터를 검색 하는 데 사용 됩니다.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>       메타 데이터를 다운로드 하지만 정보를 확인 하지 <xref:System.ServiceModel.Description.ServiceEndpoint>개체를 사용 하 여는 <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>직접.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> </xref:System.ServiceModel.Description.ServiceEndpoint>      > [!NOTE] > 끝점을 하나도 가져오지 않았거나 계약과 일치 하는 끝점이 없으면 빈 컬렉션이 반환 됩니다. 빈 컬렉션이 반환 되 면 경고 추적이 기록 됩니다."
  syntax:
    content: public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (System.Collections.Generic.IEnumerable<System.ServiceModel.Description.ContractDescription> contracts, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode);
    parameters:
    - id: contracts
      type: System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription}
      description: "다운로드 하 여 메타 데이터를 확인할 대상 계약입니다."
    - id: address
      type: System.Uri
      description: "메타 데이터 주소입니다."
    - id: mode
      type: System.ServiceModel.Description.MetadataExchangeClientMode
      description: "검색 모드입니다."
    return:
      type: System.ServiceModel.Description.ServiceEndpointCollection
      description: "컬렉션 <xref:System.ServiceModel.Description.ServiceEndpoint>지정된 된 계약에 대 한 개체입니다.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  overload: System.ServiceModel.Description.MetadataResolver.Resolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "주소 또는 계약 컬렉션이 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>contracts</code>가 비어 있거나의 구성원을 하나 이상 <code>contracts</code> 매개 변수가 null 이면 또는 <code>contracts</code> 동일한 이름과 네임 스페이스가 있는 둘 이상의 계약이 포함 되어 있습니다."
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Type,System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)
  id: Resolve(System.Type,System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)
  parent: System.ServiceModel.Description.MetadataResolver
  langs:
  - csharp
  name: Resolve(Type,Uri,MetadataExchangeClientMode)
  nameWithType: MetadataResolver.Resolve(Type,Uri,MetadataExchangeClientMode)
  fullName: System.ServiceModel.Description.MetadataResolver.Resolve(Type,Uri,MetadataExchangeClientMode)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "메타 데이터 주소를 확인는 <xref:System.ServiceModel.Description.ServiceEndpoint>지정된 된 주소 및 전송 모드를 사용 하 여 지정된 된 계약에 대 한 개체입니다.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  remarks: "Resolve 메서드를 사용 하 여 사용 하는 계약 및 주소 및 다운로드 메커니즘을 지정 합니다.       기본 설정을 <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>메타 데이터를 검색 하는 데 사용 됩니다.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>       메타 데이터를 다운로드 하지만 정보를 확인 하지 <xref:System.ServiceModel.Description.ServiceEndpoint>개체를 사용 하 여는 <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>직접.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> </xref:System.ServiceModel.Description.ServiceEndpoint>      > [!NOTE] > 끝점을 하나도 가져오지 않았거나 계약과 일치 하는 끝점이 없으면 빈 컬렉션이 반환 됩니다. 빈 컬렉션이 반환 되 면 경고 추적이 기록 됩니다."
  example:
  - "The following code example shows the use of the <xref:System.ServiceModel.Description.MetadataResolver> to download and return metadata as a collection of <xref:System.ServiceModel.Description.ServiceEndpoint> objects using an HTTP GET request rather than WS-Transfer.  \n  \n [!code-cs[MetadataResolver#2](~/add/codesnippet/csharp/metadataresolver.client/client.cs#2)]"
  syntax:
    content: public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (Type contract, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode);
    parameters:
    - id: contract
      type: System.Type
      description: "계약을 다운로드 하 고 메타 데이터를 확인 합니다."
    - id: address
      type: System.Uri
      description: "메타 데이터 주소입니다."
    - id: mode
      type: System.ServiceModel.Description.MetadataExchangeClientMode
      description: "검색 모드입니다."
    return:
      type: System.ServiceModel.Description.ServiceEndpointCollection
      description: "컬렉션 <xref:System.ServiceModel.Description.ServiceEndpoint>지정된 된 계약에 대 한 개체입니다.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  overload: System.ServiceModel.Description.MetadataResolver.Resolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "주소 또는 계약 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.ServiceModel.Description.MetadataExchangeClient)
  id: Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.ServiceModel.Description.MetadataExchangeClient)
  parent: System.ServiceModel.Description.MetadataResolver
  langs:
  - csharp
  name: Resolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,MetadataExchangeClient)
  nameWithType: MetadataResolver.Resolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,MetadataExchangeClient)
  fullName: System.ServiceModel.Description.MetadataResolver.Resolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,MetadataExchangeClient)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "메타 데이터 주소를 확인는 <xref:System.ServiceModel.Description.ServiceEndpoint>지정 된 주소, 전송 모드 및 전송 클라이언트를 사용 하 여 지정된 된 계약에 대 한 개체입니다.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  remarks: "메타 데이터를 다운로드 하지만 정보를 확인 하지 <xref:System.ServiceModel.Description.ServiceEndpoint>개체를 사용 하 여는 <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>직접.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> </xref:System.ServiceModel.Description.ServiceEndpoint>      > [!NOTE] > 끝점을 하나도 가져오지 않았거나 계약과 일치 하는 끝점이 없으면 빈 컬렉션이 반환 됩니다. 빈 컬렉션이 반환 되 면 경고 추적이 기록 됩니다."
  syntax:
    content: public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (System.Collections.Generic.IEnumerable<System.ServiceModel.Description.ContractDescription> contracts, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode, System.ServiceModel.Description.MetadataExchangeClient client);
    parameters:
    - id: contracts
      type: System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription}
      description: "다운로드 하 여 메타 데이터를 확인할 대상 계약입니다."
    - id: address
      type: System.Uri
      description: "메타 데이터 주소입니다."
    - id: mode
      type: System.ServiceModel.Description.MetadataExchangeClientMode
      description: "검색 모드입니다."
    - id: client
      type: System.ServiceModel.Description.MetadataExchangeClient
      description: "<xref href=&quot;System.ServiceModel.Description.MetadataExchangeClient&quot;> </xref> 메타 데이터를 검색 하는 데 사용 합니다."
    return:
      type: System.ServiceModel.Description.ServiceEndpointCollection
      description: "컬렉션 <xref:System.ServiceModel.Description.ServiceEndpoint>지정된 된 계약에 대 한 개체입니다.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  overload: System.ServiceModel.Description.MetadataResolver.Resolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "주소, 계약 컬렉션 또는 클라이언트는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>contracts</code>가 비어 있거나의 구성원을 하나 이상 <code>contracts</code> 매개 변수가 null 이면 또는 <code>contracts</code> 동일한 이름과 네임 스페이스가 있는 둘 이상의 계약이 포함 되어 있습니다."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: BeginResolve(IEnumerable<ContractDescription>,EndpointAddress,AsyncCallback,Object)
  nameWithType: MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,EndpointAddress,AsyncCallback,Object)
  fullName: System.ServiceModel.Description.MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,EndpointAddress,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<ContractDescription>
  nameWithType: IEnumerable<ContractDescription>
  fullName: System.Collections.Generic.IEnumerable<System.ServiceModel.Description.ContractDescription>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.ServiceModel.Description.ContractDescription>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ServiceModel.Description.ContractDescription
    name: ContractDescription
    nameWithType: ContractDescription
    fullName: ContractDescription
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.EndpointAddress
  parent: System.ServiceModel
  isExternal: true
  name: EndpointAddress
  nameWithType: EndpointAddress
  fullName: System.ServiceModel.EndpointAddress
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Type,System.ServiceModel.EndpointAddress,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: BeginResolve(Type,EndpointAddress,AsyncCallback,Object)
  nameWithType: MetadataResolver.BeginResolve(Type,EndpointAddress,AsyncCallback,Object)
  fullName: System.ServiceModel.Description.MetadataResolver.BeginResolve(Type,EndpointAddress,AsyncCallback,Object)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.ServiceModel.Description.MetadataExchangeClient,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: BeginResolve(IEnumerable<ContractDescription>,EndpointAddress,MetadataExchangeClient,AsyncCallback,Object)
  nameWithType: MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,EndpointAddress,MetadataExchangeClient,AsyncCallback,Object)
  fullName: System.ServiceModel.Description.MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,EndpointAddress,MetadataExchangeClient,AsyncCallback,Object)
- uid: System.ServiceModel.Description.MetadataExchangeClient
  parent: System.ServiceModel.Description
  isExternal: false
  name: MetadataExchangeClient
  nameWithType: MetadataExchangeClient
  fullName: System.ServiceModel.Description.MetadataExchangeClient
- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: BeginResolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,AsyncCallback,Object)
  nameWithType: MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,AsyncCallback,Object)
  fullName: System.ServiceModel.Description.MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,AsyncCallback,Object)
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.ServiceModel.Description.MetadataExchangeClientMode
  parent: System.ServiceModel.Description
  isExternal: false
  name: MetadataExchangeClientMode
  nameWithType: MetadataExchangeClientMode
  fullName: System.ServiceModel.Description.MetadataExchangeClientMode
- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Type,System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: BeginResolve(Type,Uri,MetadataExchangeClientMode,AsyncCallback,Object)
  nameWithType: MetadataResolver.BeginResolve(Type,Uri,MetadataExchangeClientMode,AsyncCallback,Object)
  fullName: System.ServiceModel.Description.MetadataResolver.BeginResolve(Type,Uri,MetadataExchangeClientMode,AsyncCallback,Object)
- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.ServiceModel.Description.MetadataExchangeClient,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: BeginResolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,MetadataExchangeClient,AsyncCallback,Object)
  nameWithType: MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,MetadataExchangeClient,AsyncCallback,Object)
  fullName: System.ServiceModel.Description.MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,MetadataExchangeClient,AsyncCallback,Object)
- uid: System.ServiceModel.Description.MetadataResolver.EndResolve(System.IAsyncResult)
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: EndResolve(IAsyncResult)
  nameWithType: MetadataResolver.EndResolve(IAsyncResult)
  fullName: System.ServiceModel.Description.MetadataResolver.EndResolve(IAsyncResult)
- uid: System.ServiceModel.Description.ServiceEndpointCollection
  parent: System.ServiceModel.Description
  isExternal: false
  name: ServiceEndpointCollection
  nameWithType: ServiceEndpointCollection
  fullName: System.ServiceModel.Description.ServiceEndpointCollection
- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress)
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: Resolve(IEnumerable<ContractDescription>,EndpointAddress)
  nameWithType: MetadataResolver.Resolve(IEnumerable<ContractDescription>,EndpointAddress)
  fullName: System.ServiceModel.Description.MetadataResolver.Resolve(IEnumerable<ContractDescription>,EndpointAddress)
- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Type,System.ServiceModel.EndpointAddress)
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: Resolve(Type,EndpointAddress)
  nameWithType: MetadataResolver.Resolve(Type,EndpointAddress)
  fullName: System.ServiceModel.Description.MetadataResolver.Resolve(Type,EndpointAddress)
- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.ServiceModel.Description.MetadataExchangeClient)
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: Resolve(IEnumerable<ContractDescription>,EndpointAddress,MetadataExchangeClient)
  nameWithType: MetadataResolver.Resolve(IEnumerable<ContractDescription>,EndpointAddress,MetadataExchangeClient)
  fullName: System.ServiceModel.Description.MetadataResolver.Resolve(IEnumerable<ContractDescription>,EndpointAddress,MetadataExchangeClient)
- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: Resolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode)
  nameWithType: MetadataResolver.Resolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode)
  fullName: System.ServiceModel.Description.MetadataResolver.Resolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode)
- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Type,System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: Resolve(Type,Uri,MetadataExchangeClientMode)
  nameWithType: MetadataResolver.Resolve(Type,Uri,MetadataExchangeClientMode)
  fullName: System.ServiceModel.Description.MetadataResolver.Resolve(Type,Uri,MetadataExchangeClientMode)
- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.ServiceModel.Description.MetadataExchangeClient)
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: Resolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,MetadataExchangeClient)
  nameWithType: MetadataResolver.Resolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,MetadataExchangeClient)
  fullName: System.ServiceModel.Description.MetadataResolver.Resolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,MetadataExchangeClient)
- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve*
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: BeginResolve
  nameWithType: MetadataResolver.BeginResolve
- uid: System.ServiceModel.Description.MetadataResolver.EndResolve*
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: EndResolve
  nameWithType: MetadataResolver.EndResolve
- uid: System.ServiceModel.Description.MetadataResolver.Resolve*
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: Resolve
  nameWithType: MetadataResolver.Resolve
