### YamlMime:ManagedReference
items:
- uid: System.Speech.Synthesis.InstalledVoice
  id: InstalledVoice
  children:
  - System.Speech.Synthesis.InstalledVoice.Enabled
  - System.Speech.Synthesis.InstalledVoice.Equals(System.Object)
  - System.Speech.Synthesis.InstalledVoice.GetHashCode
  - System.Speech.Synthesis.InstalledVoice.VoiceInfo
  langs:
  - csharp
  name: InstalledVoice
  nameWithType: InstalledVoice
  fullName: System.Speech.Synthesis.InstalledVoice
  type: Class
  summary: "Windows에 설치 된 음성 합성 음성에 대 한 정보를 포함 합니다."
  remarks: "이 클래스를 사용 하 여 문화권, 이름, 성별, 연령과 포함 하 여 설치 된 음성에 대 한 정보 및 사용할 수 있는지 여부.       에 지정 된 언어를 사용 하 여 텍스트 음성 변환 수행 하는 <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A>속성, 음성 합성 엔진이 지 원하는 언어 국가 코드를 설치 해야 합니다.</xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> Microsoft Windows 7 작업은 다음과 같은 언어 국가 코드와 함께 제공 된 음성 합성 엔진:-EN-US입니다. 영어 (미국)-ZH-CN 합니다. 중국어 (중국)-zh-tw로 제공 합니다. 중국어 (대만) 두 문자 언어 코드 &quot;en&quot;와 같은 허용 됩니다."
  example:
  - "The following example is part of a console application that initializes a <xref:System.Speech.Synthesis.SpeechSynthesizer> object and outputs to the console a list of the installed voices (engines for speech synthesis) and demonstrates the information that is available for each voice.  \n  \n```c#  \nusing System;  \nusing System.Speech.Synthesis;  \nusing System.Speech.AudioFormat;  \n  \nnamespace SampleSynthesis  \n{  \n  class Program  \n  {  \n    static void Main(string[] args)  \n    {  \n  \n      // Initialize a new instance of the SpeechSynthesizer.  \n      using (SpeechSynthesizer synth = new SpeechSynthesizer())  \n      {  \n  \n        // Output information about all of the installed voices.   \n        Console.WriteLine(\"Installed voices -\");  \n        foreach (InstalledVoice voice in synth.GetInstalledVoices())  \n        {  \n          VoiceInfo info = voice.VoiceInfo;  \n          string AudioFormats = \"\";  \n          foreach (SpeechAudioFormatInfo fmt in info.SupportedAudioFormats)  \n          {  \n            AudioFormats += String.Format(\"{0}\\n\",  \n            fmt.EncodingFormat.ToString());  \n          }  \n  \n          Console.WriteLine(\" Name:          \" + info.Name);  \n          Console.WriteLine(\" Culture:       \" + info.Culture);  \n          Console.WriteLine(\" Age:           \" + info.Age);  \n          Console.WriteLine(\" Gender:        \" + info.Gender);  \n          Console.WriteLine(\" Description:   \" + info.Description);  \n          Console.WriteLine(\" ID:            \" + info.Id);  \n          Console.WriteLine(\" Enabled:       \" + voice.Enabled);  \n          if (info.SupportedAudioFormats.Count != 0)  \n          {  \n            Console.WriteLine( \" Audio formats: \" + AudioFormats);  \n          }  \n          else  \n          {  \n            Console.WriteLine(\" No supported audio formats found\");  \n          }  \n  \n          string AdditionalInfo = \"\";  \n          foreach (string key in info.AdditionalInfo.Keys)  \n          {  \n            AdditionalInfo += String.Format(\"  {0}: {1}\\n\", key, info.AdditionalInfo[key]);  \n          }  \n  \n          Console.WriteLine(\" Additional Info - \" + AdditionalInfo);  \n          Console.WriteLine();  \n        }  \n      }  \n      Console.WriteLine(\"Press any key to exit...\");  \n      Console.ReadKey();  \n    }  \n  }  \n}  \n  \n```"
  syntax:
    content: >-
      [System.Diagnostics.DebuggerDisplay("{VoiceInfo.Name} [{Enabled ? "Enabled" : "Disabled"}]")]

      public class InstalledVoice
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Speech.Synthesis.InstalledVoice.Enabled
  id: Enabled
  parent: System.Speech.Synthesis.InstalledVoice
  langs:
  - csharp
  name: Enabled
  nameWithType: InstalledVoice.Enabled
  fullName: System.Speech.Synthesis.InstalledVoice.Enabled
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "음성을 생성 하는 음성을 사용할 수 있는지 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "Enabled 속성의 값은 `true` 기본적으로 합니다. 응용 프로그램 호출 하는 경우 <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, 메서드 각각 레지스트리에서 찾은 음성의 최소 특정 조건에 맞는지 확인 합니다.</xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> 유효성 검사를 실패 하는 모든 음성에 대 한 <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>의 Enabled 속성 설정 하는 `false`.</xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> 응용 프로그램에 Enabled 속성 음성 선택할 수 없습니다 `false`합니다. 일반적으로 응용 프로그램은 음성의 Enabled 속성을 설정 하지 않습니다."
  syntax:
    content: public bool Enabled { get; set; }
    return:
      type: System.Boolean
      description: "반환 된 <xref uid=&quot;langword_csharp_bool&quot; name=&quot;bool&quot; href=&quot;&quot;> </xref> 음성의 활성화 상태를 나타내는입니다."
  overload: System.Speech.Synthesis.InstalledVoice.Enabled*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.InstalledVoice.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Speech.Synthesis.InstalledVoice
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: InstalledVoice.Equals(Object)
  fullName: System.Speech.Synthesis.InstalledVoice.Equals(Object)
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "지정된 된 개체의 인스턴스 인지 여부를 확인 <xref href=&quot;System.Speech.Synthesis.InstalledVoice&quot;> </xref> 의 현재 인스턴스와 같은지 <xref href=&quot;System.Speech.Synthesis.InstalledVoice&quot;> </xref>합니다."
  remarks: "메서드에서 false가 반환 하는 경우는 <xref:System.Object>에서 제공 되는 `obj` 인수 <xref:System.Speech.Synthesis.InstalledVoice>.</xref:System.Speech.Synthesis.InstalledVoice> 으로 캐스팅할 수 없습니다</xref:System.Object>"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "개체의 인스턴스로 캐스팅 될 수 있는 <xref href=&quot;System.Speech.Synthesis.InstalledVoice&quot;> </xref>합니다."
    return:
      type: System.Boolean
      description: "반환 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> 경우의 현재 인스턴스 <xref href=&quot;System.Speech.Synthesis.InstalledVoice&quot;> </xref> 에서 얻은 것과 <code> obj </code> 인수 같은지, 그렇지 않으면 반환 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Speech.Synthesis.InstalledVoice.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.InstalledVoice.GetHashCode
  id: GetHashCode
  parent: System.Speech.Synthesis.InstalledVoice
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: InstalledVoice.GetHashCode()
  fullName: System.Speech.Synthesis.InstalledVoice.GetHashCode()
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "에 대 한 해시 코드를 제공는 `InstalledVoice` 개체입니다."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "현재에 대 한 해시 코드 <xref href=&quot;System.Speech.Synthesis.InstalledVoice&quot;> </xref> 개체입니다."
  overload: System.Speech.Synthesis.InstalledVoice.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.InstalledVoice.VoiceInfo
  id: VoiceInfo
  parent: System.Speech.Synthesis.InstalledVoice
  langs:
  - csharp
  name: VoiceInfo
  nameWithType: InstalledVoice.VoiceInfo
  fullName: System.Speech.Synthesis.InstalledVoice.VoiceInfo
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "문화권, 이름, 성별 및 연령 등, 음성에 대 한 정보를 가져옵니다."
  syntax:
    content: public System.Speech.Synthesis.VoiceInfo VoiceInfo { get; }
    return:
      type: System.Speech.Synthesis.VoiceInfo
      description: "설치 된 음성에 대 한 정보입니다."
  overload: System.Speech.Synthesis.InstalledVoice.VoiceInfo*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Speech.Synthesis.InstalledVoice.Enabled
  parent: System.Speech.Synthesis.InstalledVoice
  isExternal: false
  name: Enabled
  nameWithType: InstalledVoice.Enabled
  fullName: System.Speech.Synthesis.InstalledVoice.Enabled
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Speech.Synthesis.InstalledVoice.Equals(System.Object)
  parent: System.Speech.Synthesis.InstalledVoice
  isExternal: false
  name: Equals(Object)
  nameWithType: InstalledVoice.Equals(Object)
  fullName: System.Speech.Synthesis.InstalledVoice.Equals(Object)
- uid: System.Speech.Synthesis.InstalledVoice.GetHashCode
  parent: System.Speech.Synthesis.InstalledVoice
  isExternal: false
  name: GetHashCode()
  nameWithType: InstalledVoice.GetHashCode()
  fullName: System.Speech.Synthesis.InstalledVoice.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Speech.Synthesis.InstalledVoice.VoiceInfo
  parent: System.Speech.Synthesis.InstalledVoice
  isExternal: false
  name: VoiceInfo
  nameWithType: InstalledVoice.VoiceInfo
  fullName: System.Speech.Synthesis.InstalledVoice.VoiceInfo
- uid: System.Speech.Synthesis.VoiceInfo
  parent: System.Speech.Synthesis
  isExternal: false
  name: VoiceInfo
  nameWithType: VoiceInfo
  fullName: System.Speech.Synthesis.VoiceInfo
- uid: System.Speech.Synthesis.InstalledVoice.Enabled*
  parent: System.Speech.Synthesis.InstalledVoice
  isExternal: false
  name: Enabled
  nameWithType: InstalledVoice.Enabled
- uid: System.Speech.Synthesis.InstalledVoice.Equals*
  parent: System.Speech.Synthesis.InstalledVoice
  isExternal: false
  name: Equals
  nameWithType: InstalledVoice.Equals
- uid: System.Speech.Synthesis.InstalledVoice.GetHashCode*
  parent: System.Speech.Synthesis.InstalledVoice
  isExternal: false
  name: GetHashCode
  nameWithType: InstalledVoice.GetHashCode
- uid: System.Speech.Synthesis.InstalledVoice.VoiceInfo*
  parent: System.Speech.Synthesis.InstalledVoice
  isExternal: false
  name: VoiceInfo
  nameWithType: InstalledVoice.VoiceInfo
