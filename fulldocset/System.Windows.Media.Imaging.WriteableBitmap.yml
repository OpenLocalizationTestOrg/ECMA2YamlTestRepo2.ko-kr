### YamlMime:ManagedReference
items:
- uid: System.Windows.Media.Imaging.WriteableBitmap
  id: WriteableBitmap
  children:
  - System.Windows.Media.Imaging.WriteableBitmap.#ctor(System.Windows.Media.Imaging.BitmapSource)
  - System.Windows.Media.Imaging.WriteableBitmap.#ctor(System.Int32,System.Int32,System.Double,System.Double,System.Windows.Media.PixelFormat,System.Windows.Media.Imaging.BitmapPalette)
  - System.Windows.Media.Imaging.WriteableBitmap.AddDirtyRect(System.Windows.Int32Rect)
  - System.Windows.Media.Imaging.WriteableBitmap.BackBuffer
  - System.Windows.Media.Imaging.WriteableBitmap.BackBufferStride
  - System.Windows.Media.Imaging.WriteableBitmap.Clone
  - System.Windows.Media.Imaging.WriteableBitmap.CloneCore(System.Windows.Freezable)
  - System.Windows.Media.Imaging.WriteableBitmap.CloneCurrentValue
  - System.Windows.Media.Imaging.WriteableBitmap.CloneCurrentValueCore(System.Windows.Freezable)
  - System.Windows.Media.Imaging.WriteableBitmap.CreateInstanceCore
  - System.Windows.Media.Imaging.WriteableBitmap.FreezeCore(System.Boolean)
  - System.Windows.Media.Imaging.WriteableBitmap.GetAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Media.Imaging.WriteableBitmap.GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Media.Imaging.WriteableBitmap.Lock
  - System.Windows.Media.Imaging.WriteableBitmap.TryLock(System.Windows.Duration)
  - System.Windows.Media.Imaging.WriteableBitmap.Unlock
  - System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.Array,System.Int32,System.Int32)
  - System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.IntPtr,System.Int32,System.Int32)
  - System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.Array,System.Int32,System.Int32,System.Int32)
  - System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32)
  langs:
  - csharp
  name: WriteableBitmap
  nameWithType: WriteableBitmap
  fullName: System.Windows.Media.Imaging.WriteableBitmap
  type: Class
  summary: "제공는 <xref href=&quot;System.Windows.Media.Imaging.BitmapSource&quot;> </xref> 있는에 기록 하 고 업데이트할 수 있습니다."
  remarks: "WriteableBitmap 클래스를 사용 하 여 업데이트 하 고 프레임별으로 비트맵을 렌더링 합니다. 프랙탈 이미지와 같은 알고리즘 내용 생성에 대 한 데이터 시각화를 음악 시각화 도우미에 유용 합니다.       WriteableBitmap 클래스는 두 개의 버퍼를 사용합니다. *백 버퍼* 시스템 메모리에 할당 하 고 표시 되지 않는 콘텐츠를 누적 합니다. *프런트 버퍼* 시스템 메모리에 할당 되 고 현재 표시 되는 콘텐츠를 포함 합니다. 렌더링 시스템 표시에 대 한 비디오 메모리에 프런트 버퍼를 복사합니다.       두 스레드는 이러한 버퍼를 사용합니다. *사용자 인터페이스 (UI) 스레드에서* UI를 생성 하지만 화면에 표시 하지 않습니다. UI 스레드는 사용자 입력, 타이머, 및 기타 이벤트에 응답합니다. 응용 프로그램이 여러 UI 스레드를 가질 수 있습니다. *렌더 스레드에* 작성 하 고 UI 스레드에서 변경 내용을 렌더링 합니다. 응용 프로그램당 하나만 렌더링 스레드가 있습니다.       UI 스레드는 백 버퍼에 콘텐츠를 씁니다. 렌더링 스레드에서 프런트 버퍼의 내용을 읽고 비디오 메모리에 복사 합니다. 변경 된 사각형 영역 백 버퍼에 대 한 변경 내용은 추적 합니다.       하나를 호출 하는 <xref:System.Windows.Media.Imaging.WriteableBitmap.WritePixels%2A>오버 로드를 업데이트 하 고 백 버퍼에 자동으로 콘텐츠를 표시 합니다.</xref:System.Windows.Media.Imaging.WriteableBitmap.WritePixels%2A>       업데이트를 보다 효율적으로 제어 하 고 백 버퍼에 대 한 다중 스레드 액세스에 대 한 다음 워크플로 사용 합니다.      1.  호출 된 <xref:System.Windows.Media.Imaging.WriteableBitmap.Lock%2A>업데이트에 대 한 백 버퍼를 예약 하는 메서드.</xref:System.Windows.Media.Imaging.WriteableBitmap.Lock%2A>      2.  에 액세스 하 여 백 버퍼에 대 한 포인터를 가져오는 <xref:System.Windows.Media.Imaging.WriteableBitmap.BackBuffer%2A>속성.</xref:System.Windows.Media.Imaging.WriteableBitmap.BackBuffer%2A>      3.  백 버퍼에 쓰기 변경합니다. WriteableBitmap 잠겨 있을 때 다른 스레드에서 백 버퍼에 변경 내용을 쓸 수 있습니다.      4.  호출 된 <xref:System.Windows.Media.Imaging.WriteableBitmap.AddDirtyRect%2A>메서드 변경 된 영역을 나타냅니다.</xref:System.Windows.Media.Imaging.WriteableBitmap.AddDirtyRect%2A>      5.  호출 된 <xref:System.Windows.Media.Imaging.WriteableBitmap.Unlock%2A>백 버퍼를 해제 하 고 화면에 표시할 수 있게 하기 메서드.</xref:System.Windows.Media.Imaging.WriteableBitmap.Unlock%2A>       업데이트 렌더링 스레드에 전송 되 면 렌더링 스레드에서 변경 된 사각형 백 버퍼에서는 전면 버퍼로 복사 합니다. 렌더링 시스템이 교착 상태를 방지 하 고이 exchange를 &quot;실행&quot; 등의 아티팩트를 다시 그리기를 제어 합니다."
  example:
  - "The following example demonstrates how a WriteableBitmap can be used as the source of an <xref:System.Windows.Controls.Image> to draw pixels when the mouse moves.  \n  \n [!code-cs[WriteableBitmap2#WriteableBitmapFullPage](~/add/codesnippet/csharp/WriteableBitmapDemo/Program.cs#writeablebitmapfullpage)]"
  syntax:
    content: 'public sealed class WriteableBitmap : System.Windows.Media.Imaging.BitmapSource'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  - System.Windows.Freezable
  - System.Windows.Media.Animation.Animatable
  - System.Windows.Media.ImageSource
  - System.Windows.Media.Imaging.BitmapSource
  implements: []
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Freezable.CanFreeze
  - System.Windows.Freezable.Changed
  - System.Windows.Freezable.CreateInstance
  - System.Windows.Freezable.Freeze
  - System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)
  - System.Windows.Freezable.GetAsFrozen
  - System.Windows.Freezable.GetCurrentValueAsFrozen
  - System.Windows.Freezable.IsFrozen
  - System.Windows.Freezable.OnChanged
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)
  - System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.Freezable.ReadPreamble
  - System.Windows.Freezable.WritePostscript
  - System.Windows.Freezable.WritePreamble
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)
  - System.Windows.Media.Animation.Animatable.HasAnimatedProperties
  - System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)
  - System.Windows.Media.ImageSource.PixelsToDIPs(System.Double,System.Int32)
  - System.Windows.Media.ImageSource.System#IFormattable#ToString(System.String,System.IFormatProvider)
  - System.Windows.Media.ImageSource.ToString
  - System.Windows.Media.ImageSource.ToString(System.IFormatProvider)
  - System.Windows.Media.Imaging.BitmapSource.CheckIfSiteOfOrigin
  - System.Windows.Media.Imaging.BitmapSource.CopyPixels(System.Array,System.Int32,System.Int32)
  - System.Windows.Media.Imaging.BitmapSource.CopyPixels(System.Windows.Int32Rect,System.Array,System.Int32,System.Int32)
  - System.Windows.Media.Imaging.BitmapSource.CopyPixels(System.Windows.Int32Rect,System.IntPtr,System.Int32,System.Int32)
  - System.Windows.Media.Imaging.BitmapSource.Create(System.Int32,System.Int32,System.Double,System.Double,System.Windows.Media.PixelFormat,System.Windows.Media.Imaging.BitmapPalette,System.Array,System.Int32)
  - System.Windows.Media.Imaging.BitmapSource.Create(System.Int32,System.Int32,System.Double,System.Double,System.Windows.Media.PixelFormat,System.Windows.Media.Imaging.BitmapPalette,System.IntPtr,System.Int32,System.Int32)
  - System.Windows.Media.Imaging.BitmapSource.DecodeFailed
  - System.Windows.Media.Imaging.BitmapSource.DownloadCompleted
  - System.Windows.Media.Imaging.BitmapSource.DownloadFailed
  - System.Windows.Media.Imaging.BitmapSource.DownloadProgress
  - System.Windows.Media.Imaging.BitmapSource.DpiX
  - System.Windows.Media.Imaging.BitmapSource.DpiY
  - System.Windows.Media.Imaging.BitmapSource.Format
  - System.Windows.Media.Imaging.BitmapSource.Height
  - System.Windows.Media.Imaging.BitmapSource.IsDownloading
  - System.Windows.Media.Imaging.BitmapSource.Metadata
  - System.Windows.Media.Imaging.BitmapSource.Palette
  - System.Windows.Media.Imaging.BitmapSource.PixelHeight
  - System.Windows.Media.Imaging.BitmapSource.PixelWidth
  - System.Windows.Media.Imaging.BitmapSource.Width
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Media.Imaging.WriteableBitmap.#ctor(System.Windows.Media.Imaging.BitmapSource)
  id: '#ctor(System.Windows.Media.Imaging.BitmapSource)'
  parent: System.Windows.Media.Imaging.WriteableBitmap
  langs:
  - csharp
  name: WriteableBitmap(BitmapSource)
  nameWithType: WriteableBitmap.WriteableBitmap(BitmapSource)
  fullName: System.Windows.Media.Imaging.WriteableBitmap.WriteableBitmap(BitmapSource)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Windows.Media.Imaging.WriteableBitmap&quot;> </xref> 클래스 사용은 주어진 <xref href=&quot;System.Windows.Media.Imaging.BitmapSource&quot;> </xref>합니다."
  remarks: "<xref:System.Windows.Media.Imaging.WriteableBitmap.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Double%2CSystem.Double%2CSystem.Windows.Media.PixelFormat%2CSystem.Windows.Media.Imaging.BitmapPalette%29>생성자가이 생성자를 사용 하는 보다 선호 됩니다.</xref:System.Windows.Media.Imaging.WriteableBitmap.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Double%2CSystem.Double%2CSystem.Windows.Media.PixelFormat%2CSystem.Windows.Media.Imaging.BitmapPalette%29>       경우 `source` 를 고유 하 게 지원 되는 비트맵 형식으로 형식 변환이 하므로 성능이 저하 각 프레임 업데이트에 적용 되므로 사용 하지 않습니다."
  syntax:
    content: public WriteableBitmap (System.Windows.Media.Imaging.BitmapSource source);
    parameters:
    - id: source
      type: System.Windows.Media.Imaging.BitmapSource
      description: "<xref href=&quot;System.Windows.Media.Imaging.BitmapSource&quot;> </xref> 초기화에 사용할 합니다."
  overload: System.Windows.Media.Imaging.WriteableBitmap.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Imaging.WriteableBitmap.#ctor(System.Int32,System.Int32,System.Double,System.Double,System.Windows.Media.PixelFormat,System.Windows.Media.Imaging.BitmapPalette)
  id: '#ctor(System.Int32,System.Int32,System.Double,System.Double,System.Windows.Media.PixelFormat,System.Windows.Media.Imaging.BitmapPalette)'
  parent: System.Windows.Media.Imaging.WriteableBitmap
  langs:
  - csharp
  name: WriteableBitmap(Int32,Int32,Double,Double,PixelFormat,BitmapPalette)
  nameWithType: WriteableBitmap.WriteableBitmap(Int32,Int32,Double,Double,PixelFormat,BitmapPalette)
  fullName: System.Windows.Media.Imaging.WriteableBitmap.WriteableBitmap(Int32,Int32,Double,Double,PixelFormat,BitmapPalette)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Windows.Media.Imaging.WriteableBitmap&quot;> </xref> 지정된 된 매개 변수를 사용 하 여 클래스입니다."
  remarks: "에 대 한 기본 설정된 값 `pixelFormat` 및 <xref:System.Windows.Media.PixelFormats.Bgr32%2A> <xref:System.Windows.Media.PixelFormats.Pbgra32%2A>.</xref:System.Windows.Media.PixelFormats.Pbgra32%2A> </xref:System.Windows.Media.PixelFormats.Bgr32%2A> 이러한 형식은 기본적으로 지 원하는 이며 형식 변환이 필요 하지 않습니다. 다른 `pixelFormat` 값 하므로 성능이 저하 각 프레임 업데이트에 대 한 형식 변환이 필요 합니다."
  syntax:
    content: public WriteableBitmap (int pixelWidth, int pixelHeight, double dpiX, double dpiY, System.Windows.Media.PixelFormat pixelFormat, System.Windows.Media.Imaging.BitmapPalette palette);
    parameters:
    - id: pixelWidth
      type: System.Int32
      description: "원하는 비트맵의 너비입니다."
    - id: pixelHeight
      type: System.Int32
      description: "비트맵의 원하는 높이입니다."
    - id: dpiX
      type: System.Double
      description: "가로 [!INCLUDE[TLA#tla_dpi](~/add/includes/ajax-current-ext-md.md)] 비트맵의 합니다."
    - id: dpiY
      type: System.Double
      description: "세로 [!INCLUDE[TLA#tla_dpi](../Token/TLA%23tla_dpi_md.md)] 비트맵의 합니다."
    - id: pixelFormat
      type: System.Windows.Media.PixelFormat
      description: "<xref href=&quot;System.Windows.Media.PixelFormat&quot;> </xref> 비트맵의 합니다."
    - id: palette
      type: System.Windows.Media.Imaging.BitmapPalette
      description: "<xref href=&quot;System.Windows.Media.Imaging.BitmapPalette&quot;> </xref> 비트맵의 합니다."
  overload: System.Windows.Media.Imaging.WriteableBitmap.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Imaging.WriteableBitmap.AddDirtyRect(System.Windows.Int32Rect)
  id: AddDirtyRect(System.Windows.Int32Rect)
  parent: System.Windows.Media.Imaging.WriteableBitmap
  langs:
  - csharp
  name: AddDirtyRect(Int32Rect)
  nameWithType: WriteableBitmap.AddDirtyRect(Int32Rect)
  fullName: System.Windows.Media.Imaging.WriteableBitmap.AddDirtyRect(Int32Rect)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: "변경 하는 비트맵의 영역을 지정 합니다."
  remarks: "백 버퍼에 호출을 나타내는 AddDirtyRect 메서드 코드를 변경 했습니다.       이 메서드를 여러 번 호출 하면 변경된 된 영역 충분 하지만 최소한 반드시, 표현에 누적 됩니다. 효율성을 높이기 위해 프런트 버퍼에 복사 될 커밋되지 않은 것으로 표시 된 영역에만 보장 됩니다. 그러나 일부 비트맵의 복사 될 수도, 전체 백 버퍼는 항상 유효한 지 확인 해야 합니다.       에 대 한 호출 사이만 AddDirtyRect 메서드를 호출 하는 <xref:System.Windows.Media.Imaging.WriteableBitmap.Lock%2A>및 <xref:System.Windows.Media.Imaging.WriteableBitmap.Unlock%2A>에 설명 된 대로 메서드는 <xref:System.Windows.Media.Imaging.WriteableBitmap>클래스 설명.</xref:System.Windows.Media.Imaging.WriteableBitmap> </xref:System.Windows.Media.Imaging.WriteableBitmap.Unlock%2A> </xref:System.Windows.Media.Imaging.WriteableBitmap.Lock%2A>"
  example:
  - "The following code example shows how to specify the area of the back buffer that changed by using the AddDirtyRect method.  \n  \n [!code-cs[WriteableBitmap2#2](~/add/codesnippet/csharp/WriteableBitmapDemo/Program.cs#2)]"
  syntax:
    content: public void AddDirtyRect (System.Windows.Int32Rect dirtyRect);
    parameters:
    - id: dirtyRect
      type: System.Windows.Int32Rect
      description: "<xref href=&quot;System.Windows.Int32Rect&quot;> </xref> 변경 된 영역을 나타내는입니다. 차원은 (픽셀)에서입니다."
  overload: System.Windows.Media.Imaging.WriteableBitmap.AddDirtyRect*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "비트맵에 대 한 호출에 의해 잠기지 않은 <> </> *> 또는 <> </> *> 메서드."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>dirtyRect</code>범위 밖에 놓이게는 <xref href=&quot;System.Windows.Media.Imaging.WriteableBitmap&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Windows.Media.Imaging.WriteableBitmap.BackBuffer
  id: BackBuffer
  parent: System.Windows.Media.Imaging.WriteableBitmap
  langs:
  - csharp
  name: BackBuffer
  nameWithType: WriteableBitmap.BackBuffer
  fullName: System.Windows.Media.Imaging.WriteableBitmap.BackBuffer
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: "백 버퍼에 대 한 포인터를 가져옵니다."
  remarks: "백 버퍼는 사용자가 요청한 픽셀 형식에서 비트맵 콘텐츠를 포함 합니다.       백 버퍼에 대 한 호출 사이만 업데이트는 <xref:System.Windows.Media.Imaging.WriteableBitmap.Lock%2A>및 <xref:System.Windows.Media.Imaging.WriteableBitmap.Unlock%2A>메서드.</xref:System.Windows.Media.Imaging.WriteableBitmap.Unlock%2A> </xref:System.Windows.Media.Imaging.WriteableBitmap.Lock%2A> 에 설명 된 잠금/잠금 해제 워크플로 준수 하지 않는 경우는 <xref:System.Windows.Media.Imaging.WriteableBitmap>클래스 설명 하는 데 필요한와 같은 정의 되지 않은 동작을 발생할 수 있습니다.</xref:System.Windows.Media.Imaging.WriteableBitmap>       백 버퍼의 주소를 변경 하지 않습니다.      ## 스레드 안전 전달할 수 백 버퍼 포인터 외부 구성 요소 및 처리를 위해 다른 스레드에서 있지만 이렇게 하면 제공 해야 하면 자체의 스레드를 조정 합니다. UI 스레드를 호출 하 여 변경 된 영역을 지정 하는지 확인 해야 특히는 <xref:System.Windows.Media.Imaging.WriteableBitmap.AddDirtyRect%2A>메서드와 UI 스레드에 호출 하 여 버퍼의 잠금을 해제 하는 <xref:System.Windows.Media.Imaging.WriteableBitmap.Unlock%2A>메서드.</xref:System.Windows.Media.Imaging.WriteableBitmap.Unlock%2A> </xref:System.Windows.Media.Imaging.WriteableBitmap.AddDirtyRect%2A>"
  syntax:
    content: public IntPtr BackBuffer { get; }
    return:
      type: System.IntPtr
      description: "<xref:System.IntPtr>백 버퍼의 기본 주소를 가리키는.</xref:System.IntPtr>"
  overload: System.Windows.Media.Imaging.WriteableBitmap.BackBuffer*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Imaging.WriteableBitmap.BackBufferStride
  id: BackBufferStride
  parent: System.Windows.Media.Imaging.WriteableBitmap
  langs:
  - csharp
  name: BackBufferStride
  nameWithType: WriteableBitmap.BackBufferStride
  fullName: System.Windows.Media.Imaging.WriteableBitmap.BackBufferStride
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: "픽셀 데이터의 단일 행의 바이트 수를 나타내는 값을 가져옵니다."
  syntax:
    content: public int BackBufferStride { get; }
    return:
      type: System.Int32
      description: "픽셀 데이터의 단일 행의 바이트 수를 나타내는 정수입니다."
  overload: System.Windows.Media.Imaging.WriteableBitmap.BackBufferStride*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Imaging.WriteableBitmap.Clone
  id: Clone
  parent: System.Windows.Media.Imaging.WriteableBitmap
  langs:
  - csharp
  name: Clone()
  nameWithType: WriteableBitmap.Clone()
  fullName: System.Windows.Media.Imaging.WriteableBitmap.Clone()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: "수정 가능한 복제본을 만듭니다 <xref href=&quot;System.Windows.Media.Imaging.WriteableBitmap&quot;> </xref>,이 개체 값의 전체 복사본입니다. 종속성 속성을 복사 하는 경우이 메서드는 리소스 참조와 데이터 바인딩을 복사 (하지만 이러한 요소는 더 이상 확인) 나 하지 않습니다 애니메이션의 현재 값입니다."
  remarks: "수정 가능한 복사본을 생성 하기 위해이 메서드는 고정 된 <xref:System.Windows.Freezable>개체 (또는 모든 <xref:System.Windows.Freezable>개체).</xref:System.Windows.Freezable> </xref:System.Windows.Freezable> 편의 위해이 메서드는 강력한 형식의 구현이 포함 된 상속 된 버전을 숨깁니다.       자세한 내용은 <xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>.</xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName> 을 참조 하십시오."
  syntax:
    content: public System.Windows.Media.Imaging.WriteableBitmap Clone ();
    parameters: []
    return:
      type: System.Windows.Media.Imaging.WriteableBitmap
      description: "현재 개체의 수정 가능한 복제본입니다. 복제 된 개체의 <> </> *> 속성은 됩니다 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 경우에 원본의 <> </> *> 속성은<xref uid=&quot;langword_csharp_true.&quot; name=&quot;true.&quot; href=&quot;&quot;></xref>"
  overload: System.Windows.Media.Imaging.WriteableBitmap.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Imaging.WriteableBitmap.CloneCore(System.Windows.Freezable)
  id: CloneCore(System.Windows.Freezable)
  parent: System.Windows.Media.Imaging.WriteableBitmap
  langs:
  - csharp
  name: CloneCore(Freezable)
  nameWithType: WriteableBitmap.CloneCore(Freezable)
  fullName: System.Windows.Media.Imaging.WriteableBitmap.CloneCore(Freezable)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  syntax:
    content: protected override void CloneCore (System.Windows.Freezable sourceFreezable);
    parameters:
    - id: sourceFreezable
      type: System.Windows.Freezable
      description: "추가할 수 있습니다."
  overload: System.Windows.Media.Imaging.WriteableBitmap.CloneCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Imaging.WriteableBitmap.CloneCurrentValue
  id: CloneCurrentValue
  parent: System.Windows.Media.Imaging.WriteableBitmap
  langs:
  - csharp
  name: CloneCurrentValue()
  nameWithType: WriteableBitmap.CloneCurrentValue()
  fullName: System.Windows.Media.Imaging.WriteableBitmap.CloneCurrentValue()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: "수정 가능한 복제본을 만듭니다 <xref href=&quot;System.Windows.Media.Animation.ByteAnimationUsingKeyFrames&quot;> </xref> 개체를이 개체의 현재 값의 전체 복사본입니다. 리소스 참조, 데이터 바인딩 및 애니메이션은 복사 되지 않지만 이러한 요소의 현재 값은입니다."
  remarks: "수정 가능한 복사본을 생성 하기 위해이 메서드는 고정 된 <xref:System.Windows.Freezable>개체 (또는 모든 <xref:System.Windows.Freezable>개체).</xref:System.Windows.Freezable> </xref:System.Windows.Freezable> 편의 위해이 메서드는 강력한 형식의 구현이 포함 된 상속 된 버전을 숨깁니다.       자세한 내용은 <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>.</xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName> 을 참조 하십시오."
  syntax:
    content: public System.Windows.Media.Imaging.WriteableBitmap CloneCurrentValue ();
    parameters: []
    return:
      type: System.Windows.Media.Imaging.WriteableBitmap
      description: "현재 개체의 수정 가능한 복제본입니다. 복제 된 개체의 <> </> *> 속성은 됩니다 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 경우에 원본의 <> </> *> 속성은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Media.Imaging.WriteableBitmap.CloneCurrentValue*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Imaging.WriteableBitmap.CloneCurrentValueCore(System.Windows.Freezable)
  id: CloneCurrentValueCore(System.Windows.Freezable)
  parent: System.Windows.Media.Imaging.WriteableBitmap
  langs:
  - csharp
  name: CloneCurrentValueCore(Freezable)
  nameWithType: WriteableBitmap.CloneCurrentValueCore(Freezable)
  fullName: System.Windows.Media.Imaging.WriteableBitmap.CloneCurrentValueCore(Freezable)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  syntax:
    content: protected override void CloneCurrentValueCore (System.Windows.Freezable sourceFreezable);
    parameters:
    - id: sourceFreezable
      type: System.Windows.Freezable
      description: "추가할 수 있습니다."
  overload: System.Windows.Media.Imaging.WriteableBitmap.CloneCurrentValueCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Imaging.WriteableBitmap.CreateInstanceCore
  id: CreateInstanceCore
  parent: System.Windows.Media.Imaging.WriteableBitmap
  langs:
  - csharp
  name: CreateInstanceCore()
  nameWithType: WriteableBitmap.CreateInstanceCore()
  fullName: System.Windows.Media.Imaging.WriteableBitmap.CreateInstanceCore()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  syntax:
    content: protected override System.Windows.Freezable CreateInstanceCore ();
    parameters: []
    return:
      type: System.Windows.Freezable
      description: "추가할 수 있습니다."
  overload: System.Windows.Media.Imaging.WriteableBitmap.CreateInstanceCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Imaging.WriteableBitmap.FreezeCore(System.Boolean)
  id: FreezeCore(System.Boolean)
  parent: System.Windows.Media.Imaging.WriteableBitmap
  langs:
  - csharp
  name: FreezeCore(Boolean)
  nameWithType: WriteableBitmap.FreezeCore(Boolean)
  fullName: System.Windows.Media.Imaging.WriteableBitmap.FreezeCore(Boolean)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  syntax:
    content: protected override bool FreezeCore (bool isChecking);
    parameters:
    - id: isChecking
      type: System.Boolean
      description: "추가할 수 있습니다."
    return:
      type: System.Boolean
      description: "추가할 수 있습니다."
  overload: System.Windows.Media.Imaging.WriteableBitmap.FreezeCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Imaging.WriteableBitmap.GetAsFrozenCore(System.Windows.Freezable)
  id: GetAsFrozenCore(System.Windows.Freezable)
  parent: System.Windows.Media.Imaging.WriteableBitmap
  langs:
  - csharp
  name: GetAsFrozenCore(Freezable)
  nameWithType: WriteableBitmap.GetAsFrozenCore(Freezable)
  fullName: System.Windows.Media.Imaging.WriteableBitmap.GetAsFrozenCore(Freezable)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  syntax:
    content: protected override void GetAsFrozenCore (System.Windows.Freezable sourceFreezable);
    parameters:
    - id: sourceFreezable
      type: System.Windows.Freezable
      description: "추가할 수 있습니다."
  overload: System.Windows.Media.Imaging.WriteableBitmap.GetAsFrozenCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Imaging.WriteableBitmap.GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  id: GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  parent: System.Windows.Media.Imaging.WriteableBitmap
  langs:
  - csharp
  name: GetCurrentValueAsFrozenCore(Freezable)
  nameWithType: WriteableBitmap.GetCurrentValueAsFrozenCore(Freezable)
  fullName: System.Windows.Media.Imaging.WriteableBitmap.GetCurrentValueAsFrozenCore(Freezable)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  syntax:
    content: protected override void GetCurrentValueAsFrozenCore (System.Windows.Freezable sourceFreezable);
    parameters:
    - id: sourceFreezable
      type: System.Windows.Freezable
      description: "추가할 수 있습니다."
  overload: System.Windows.Media.Imaging.WriteableBitmap.GetCurrentValueAsFrozenCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Imaging.WriteableBitmap.Lock
  id: Lock
  parent: System.Windows.Media.Imaging.WriteableBitmap
  langs:
  - csharp
  name: Lock()
  nameWithType: WriteableBitmap.Lock()
  fullName: System.Windows.Media.Imaging.WriteableBitmap.Lock()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: "업데이트에 대 한 백 버퍼를 예약합니다."
  remarks: "Lock 메서드 잠금 수를 증가 시킵니다. 경우는 <xref:System.Windows.Media.Imaging.WriteableBitmap>은 잠긴 렌더링 시스템 보내지 않습니다 업데이트 될 때까지 <xref:System.Windows.Media.Imaging.WriteableBitmap>를 호출 하 여 잠금을 완전히 해제는 <xref:System.Windows.Media.Imaging.WriteableBitmap.Unlock%2A>메서드.</xref:System.Windows.Media.Imaging.WriteableBitmap.Unlock%2A> </xref:System.Windows.Media.Imaging.WriteableBitmap> </xref:System.Windows.Media.Imaging.WriteableBitmap>       다중 스레드 구현을 지원 하기 위해 Lock 메서드를 사용할 수 있습니다. 이러한 시나리오에서 UI 스레드를 비트맵 잠그고 다른 스레드에 백 버퍼를 노출 합니다. 작업자 스레드 프레임 완료 되 면 UI 스레드에서 변경 된 사각형을 추가 하 고 버퍼의 잠금을 해제 합니다.       UI 스레드 렌더링 스레드에서 앞으로 프런트 버퍼에 복사 하는 백 버퍼에 잠금을 획득 하는 경우 차단할 수 있습니다. 사용 하 여이 블록의 대기 시간이 너무 긴 경우는 <xref:System.Windows.Media.Imaging.WriteableBitmap.TryLock%2A>메서드는 짧은 시간 동안 대기 하 고 다음 백 버퍼 잠겨 있는 동안 다른 작업을 수행 하는 UI 스레드를 차단 해제를.</xref:System.Windows.Media.Imaging.WriteableBitmap.TryLock%2A>"
  example:
  - "The following code example shows how to reserve the back buffer by using the Lock method.  \n  \n [!code-cs[WriteableBitmap2#2](~/add/codesnippet/csharp/WriteableBitmapDemo/Program.cs#2)]"
  syntax:
    content: public void Lock ();
    parameters: []
  overload: System.Windows.Media.Imaging.WriteableBitmap.Lock*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Imaging.WriteableBitmap.TryLock(System.Windows.Duration)
  id: TryLock(System.Windows.Duration)
  parent: System.Windows.Media.Imaging.WriteableBitmap
  langs:
  - csharp
  name: TryLock(Duration)
  nameWithType: WriteableBitmap.TryLock(Duration)
  fullName: System.Windows.Media.Imaging.WriteableBitmap.TryLock(Duration)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: "비트맵을 잠그려고 시도 시간을 지정된 된 길이 보다 더 이상에 대 한 대기 합니다."
  remarks: "TryLock 메서드는 잠금을 획득할 때와 같습니다는 <xref:System.Windows.Media.Imaging.WriteableBitmap.Lock%2A>메서드.</xref:System.Windows.Media.Imaging.WriteableBitmap.Lock%2A>"
  syntax:
    content: public bool TryLock (System.Windows.Duration timeout);
    parameters:
    - id: timeout
      type: System.Windows.Duration
      description: "A <xref href=&quot;System.Windows.Duration&quot;> </xref> 대기 하는 시간 길이 나타내는입니다. 값이 0 즉시 반환 됩니다. 값이 <xref:System.Windows.Duration.Forever*>무기한 차단.</xref:System.Windows.Duration.Forever*>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>잠금을 획득; 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Media.Imaging.WriteableBitmap.TryLock*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>로 설정 된 <xref:System.Windows.Duration.Automatic*>합니다."
  platform:
  - net462
- uid: System.Windows.Media.Imaging.WriteableBitmap.Unlock
  id: Unlock
  parent: System.Windows.Media.Imaging.WriteableBitmap
  langs:
  - csharp
  name: Unlock()
  nameWithType: WriteableBitmap.Unlock()
  fullName: System.Windows.Media.Imaging.WriteableBitmap.Unlock()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: "표시를 위해 사용할 수 있도록 백 버퍼를 해제 합니다."
  remarks: "잠금 횟수를 잠금 해제 메서드 줄입니다. 잠금 수가 0에 도달 하는 경우 렌더링 단계 요청 됩니다는 <xref:System.Windows.Media.Imaging.WriteableBitmap.AddDirtyRect%2A>메서드가 호출 되었습니다.</xref:System.Windows.Media.Imaging.WriteableBitmap.AddDirtyRect%2A>"
  example:
  - "The following code example shows how to release the back buffer by using the Unlock method.  \n  \n [!code-cs[WriteableBitmap2#2](~/add/codesnippet/csharp/WriteableBitmapDemo/Program.cs#2)]"
  syntax:
    content: public void Unlock ();
    parameters: []
  overload: System.Windows.Media.Imaging.WriteableBitmap.Unlock*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "비트맵에 대 한 호출에 의해 잠기지 않은 <> </> *> 또는 <> </> *> 메서드."
  platform:
  - net462
- uid: System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.Array,System.Int32,System.Int32)
  id: WritePixels(System.Windows.Int32Rect,System.Array,System.Int32,System.Int32)
  parent: System.Windows.Media.Imaging.WriteableBitmap
  langs:
  - csharp
  name: WritePixels(Int32Rect,Array,Int32,Int32)
  nameWithType: WriteableBitmap.WritePixels(Int32Rect,Array,Int32,Int32)
  fullName: System.Windows.Media.Imaging.WriteableBitmap.WritePixels(Int32Rect,Array,Int32,Int32)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: "비트맵의 지정된 된 지역에 있는 픽셀을 업데이트합니다."
  remarks: "<xref:System.Windows.Media.Imaging.WriteableBitmap.WritePixels%28System.Windows.Int32Rect%2CSystem.Array%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>및 <xref:System.Windows.Media.Imaging.WriteableBitmap.WritePixels%28System.Windows.Int32Rect%2CSystem.IntPtr%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>오버 로드는이 메서드를 사용 하 여 보다 우선 합니다.</xref:System.Windows.Media.Imaging.WriteableBitmap.WritePixels%28System.Windows.Int32Rect%2CSystem.IntPtr%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29> </xref:System.Windows.Media.Imaging.WriteableBitmap.WritePixels%28System.Windows.Int32Rect%2CSystem.Array%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>      > [!NOTE] > 부분 신뢰에서 사용 하 여는 <xref:System.Windows.Media.Imaging.WriteableBitmap.WritePixels%28System.Windows.Int32Rect%2CSystem.Array%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>오버 로드.</xref:System.Windows.Media.Imaging.WriteableBitmap.WritePixels%28System.Windows.Int32Rect%2CSystem.Array%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>"
  example:
  - "The following code example shows how to update a pixel in the back buffer by using the WritePixels method.  \n  \n [!code-cs[WriteableBitmap2#3](~/add/codesnippet/csharp/WriteableBitmapDemo/Program.cs#3)]"
  syntax:
    content: public void WritePixels (System.Windows.Int32Rect sourceRect, Array pixels, int stride, int offset);
    parameters:
    - id: sourceRect
      type: System.Windows.Int32Rect
      description: "사각형은 <xref href=&quot;System.Windows.Media.Imaging.WriteableBitmap&quot;> </xref> 를 업데이트 합니다."
    - id: pixels
      type: System.Array
      description: "비트맵을 업데이트 하는 데 사용 하는 픽셀 배열입니다."
    - id: stride
      type: System.Int32
      description: "업데이트 영역에 stride `pixels`합니다."
    - id: offset
      type: System.Int32
      description: "입력된 버퍼 오프셋입니다."
  overload: System.Windows.Media.Imaging.WriteableBitmap.WritePixels*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "다음 조건 중 하나 이상이 true입니다.       <code>sourceRect</code>범위 밖에 놓이게는 <xref href=&quot;System.Windows.Media.Imaging.WriteableBitmap&quot;> </xref>합니다.       <code>stride</code> &lt; 1       <code>offset</code> &lt; 0"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pixels</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>pixels</code>차수가 1 또는 2, 했거나이 해당 길이 0 보다 작거나 합니다."
  platform:
  - net462
- uid: System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.IntPtr,System.Int32,System.Int32)
  id: WritePixels(System.Windows.Int32Rect,System.IntPtr,System.Int32,System.Int32)
  parent: System.Windows.Media.Imaging.WriteableBitmap
  langs:
  - csharp
  name: WritePixels(Int32Rect,IntPtr,Int32,Int32)
  nameWithType: WriteableBitmap.WritePixels(Int32Rect,IntPtr,Int32,Int32)
  fullName: System.Windows.Media.Imaging.WriteableBitmap.WritePixels(Int32Rect,IntPtr,Int32,Int32)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: "비트맵의 지정된 된 지역에 있는 픽셀을 업데이트합니다."
  remarks: "<xref:System.Windows.Media.Imaging.WriteableBitmap.WritePixels%28System.Windows.Int32Rect%2CSystem.Array%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>및 <xref:System.Windows.Media.Imaging.WriteableBitmap.WritePixels%28System.Windows.Int32Rect%2CSystem.IntPtr%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>오버 로드는이 메서드를 사용 하 여 보다 우선 합니다.</xref:System.Windows.Media.Imaging.WriteableBitmap.WritePixels%28System.Windows.Int32Rect%2CSystem.IntPtr%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29> </xref:System.Windows.Media.Imaging.WriteableBitmap.WritePixels%28System.Windows.Int32Rect%2CSystem.Array%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>      > [!NOTE] > 부분 신뢰에서 사용 하 여는 <xref:System.Windows.Media.Imaging.WriteableBitmap.WritePixels%28System.Windows.Int32Rect%2CSystem.Array%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>오버 로드.</xref:System.Windows.Media.Imaging.WriteableBitmap.WritePixels%28System.Windows.Int32Rect%2CSystem.Array%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>"
  syntax:
    content: public void WritePixels (System.Windows.Int32Rect sourceRect, IntPtr buffer, int bufferSize, int stride);
    parameters:
    - id: sourceRect
      type: System.Windows.Int32Rect
      description: "사각형은 <xref href=&quot;System.Windows.Media.Imaging.WriteableBitmap&quot;> </xref> 를 업데이트 합니다."
    - id: buffer
      type: System.IntPtr
      description: "비트맵을 업데이트 하는 데 사용 하는 입력된 버퍼."
    - id: bufferSize
      type: System.Int32
      description: "입력된 버퍼의 크기입니다."
    - id: stride
      type: System.Int32
      description: "업데이트 영역에 stride `buffer`합니다."
  overload: System.Windows.Media.Imaging.WriteableBitmap.WritePixels*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "다음 조건 중 하나 이상이 true입니다.       <code>sourceRect</code>범위 밖에 놓이게는 <xref href=&quot;System.Windows.Media.Imaging.WriteableBitmap&quot;> </xref>합니다.       <code>bufferSize</code> &lt; 1       <code>stride</code> &lt; 1"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.Array,System.Int32,System.Int32,System.Int32)
  id: WritePixels(System.Windows.Int32Rect,System.Array,System.Int32,System.Int32,System.Int32)
  parent: System.Windows.Media.Imaging.WriteableBitmap
  langs:
  - csharp
  name: WritePixels(Int32Rect,Array,Int32,Int32,Int32)
  nameWithType: WriteableBitmap.WritePixels(Int32Rect,Array,Int32,Int32,Int32)
  fullName: System.Windows.Media.Imaging.WriteableBitmap.WritePixels(Int32Rect,Array,Int32,Int32,Int32)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: "비트맵의 지정된 된 지역에 있는 픽셀을 업데이트합니다."
  remarks: "호출 된 <xref:System.Windows.Media.Imaging.WriteableBitmap.WritePixels%2A>업데이트 하는 메서드는 <xref:System.Windows.Media.Imaging.WriteableBitmap>의 내용으로 자동으로 `sourceBuffer`.</xref:System.Windows.Media.Imaging.WriteableBitmap> </xref:System.Windows.Media.Imaging.WriteableBitmap.WritePixels%2A> 이 메서드는 호출를 사용 하 여 해당 하는 <xref:System.Windows.Media.Imaging.WriteableBitmap.Lock%2A>및 <xref:System.Windows.Media.Imaging.WriteableBitmap.Unlock%2A>에 설명 된 워크플로 <xref:System.Windows.Media.Imaging.WriteableBitmap>클래스 설명.</xref:System.Windows.Media.Imaging.WriteableBitmap> </xref:System.Windows.Media.Imaging.WriteableBitmap.Unlock%2A> </xref:System.Windows.Media.Imaging.WriteableBitmap.Lock%2A>      > [!NOTE] > 부분 신뢰 환경에서이 오버 로드를 사용 합니다."
  syntax:
    content: public void WritePixels (System.Windows.Int32Rect sourceRect, Array sourceBuffer, int sourceBufferStride, int destinationX, int destinationY);
    parameters:
    - id: sourceRect
      type: System.Windows.Int32Rect
      description: "에 사각형 `sourceBuffer` 복사 합니다."
    - id: sourceBuffer
      type: System.Array
      description: "비트맵을 업데이트 하는 데 사용 하는 입력된 버퍼."
    - id: sourceBufferStride
      type: System.Int32
      description: "입력된 버퍼의 바이트의 진행 속도입니다."
    - id: destinationX
      type: System.Int32
      description: "대상의 x 좌표 백 버퍼에서 맨 왼쪽 픽셀이 합니다."
    - id: destinationY
      type: System.Int32
      description: "대상 y-좌표 백 버퍼에 있는 최상위 픽셀의 합니다."
  overload: System.Windows.Media.Imaging.WriteableBitmap.WritePixels*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "다음 조건 중 하나 이상이 true입니다.       <code>sourceRect</code>범위 밖에 놓이게는 <xref href=&quot;System.Windows.Media.Imaging.WriteableBitmap&quot;> </xref>합니다.       <code>destinationX</code>또는 <code> destinationY </code> 의 범위를 벗어난는 <xref href=&quot;System.Windows.Media.Imaging.WriteableBitmap&quot;> </xref>합니다.       <code>sourceBufferStride</code> &lt; 1"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>sourceBuffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>sourceBuffer</code>차수가 1 또는 2, 했거나이 해당 길이 0 보다 작거나 합니다."
  platform:
  - net462
- uid: System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32)
  id: WritePixels(System.Windows.Int32Rect,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Windows.Media.Imaging.WriteableBitmap
  langs:
  - csharp
  name: WritePixels(Int32Rect,IntPtr,Int32,Int32,Int32,Int32)
  nameWithType: WriteableBitmap.WritePixels(Int32Rect,IntPtr,Int32,Int32,Int32,Int32)
  fullName: System.Windows.Media.Imaging.WriteableBitmap.WritePixels(Int32Rect,IntPtr,Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: "비트맵의 지정된 된 지역에 있는 픽셀을 업데이트합니다."
  remarks: "업데이트 하려면 WritePixels 메서드를 호출 하 여 <xref:System.Windows.Media.Imaging.WriteableBitmap>의 내용으로 자동으로 `sourceBuffer`.</xref:System.Windows.Media.Imaging.WriteableBitmap> 이 메서드는 호출를 사용 하 여 해당 하는 <xref:System.Windows.Media.Imaging.WriteableBitmap.Lock%2A>및 <xref:System.Windows.Media.Imaging.WriteableBitmap.Unlock%2A>에 설명 된 워크플로 <xref:System.Windows.Media.Imaging.WriteableBitmap>클래스 설명.</xref:System.Windows.Media.Imaging.WriteableBitmap> </xref:System.Windows.Media.Imaging.WriteableBitmap.Unlock%2A> </xref:System.Windows.Media.Imaging.WriteableBitmap.Lock%2A>      > [!NOTE] > 부분 신뢰에서 사용 하 여는 <xref:System.Windows.Media.Imaging.WriteableBitmap.WritePixels%28System.Windows.Int32Rect%2CSystem.Array%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>오버 로드.</xref:System.Windows.Media.Imaging.WriteableBitmap.WritePixels%28System.Windows.Int32Rect%2CSystem.Array%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>"
  syntax:
    content: public void WritePixels (System.Windows.Int32Rect sourceRect, IntPtr sourceBuffer, int sourceBufferSize, int sourceBufferStride, int destinationX, int destinationY);
    parameters:
    - id: sourceRect
      type: System.Windows.Int32Rect
      description: "에 사각형 `sourceBuffer` 복사 합니다."
    - id: sourceBuffer
      type: System.IntPtr
      description: "비트맵을 업데이트 하는 데 사용 하는 입력된 버퍼."
    - id: sourceBufferSize
      type: System.Int32
      description: "입력된 버퍼의 크기입니다."
    - id: sourceBufferStride
      type: System.Int32
      description: "입력된 버퍼의 바이트의 진행 속도입니다."
    - id: destinationX
      type: System.Int32
      description: "대상의 x 좌표 백 버퍼에서 맨 왼쪽 픽셀이 합니다."
    - id: destinationY
      type: System.Int32
      description: "대상 y-좌표 백 버퍼에 있는 최상위 픽셀의 합니다."
  overload: System.Windows.Media.Imaging.WriteableBitmap.WritePixels*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "다음 조건 중 하나 이상이 true입니다.       <code>sourceRect</code>범위 밖에 놓이게는 <xref href=&quot;System.Windows.Media.Imaging.WriteableBitmap&quot;> </xref>합니다.       <code>destinationX</code>또는 <code> destinationY </code> 의 범위를 벗어난는 <xref href=&quot;System.Windows.Media.Imaging.WriteableBitmap&quot;> </xref>합니다.       <code>sourceBufferSize</code> &lt; 1       <code>sourceBufferStride</code> &lt; 1"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>sourceBuffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Windows.Media.Imaging.BitmapSource
  isExternal: false
  name: System.Windows.Media.Imaging.BitmapSource
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Windows.Media.Imaging.WriteableBitmap.#ctor(System.Windows.Media.Imaging.BitmapSource)
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: WriteableBitmap(BitmapSource)
  nameWithType: WriteableBitmap.WriteableBitmap(BitmapSource)
  fullName: System.Windows.Media.Imaging.WriteableBitmap.WriteableBitmap(BitmapSource)
- uid: System.Windows.Media.Imaging.WriteableBitmap.#ctor(System.Int32,System.Int32,System.Double,System.Double,System.Windows.Media.PixelFormat,System.Windows.Media.Imaging.BitmapPalette)
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: WriteableBitmap(Int32,Int32,Double,Double,PixelFormat,BitmapPalette)
  nameWithType: WriteableBitmap.WriteableBitmap(Int32,Int32,Double,Double,PixelFormat,BitmapPalette)
  fullName: System.Windows.Media.Imaging.WriteableBitmap.WriteableBitmap(Int32,Int32,Double,Double,PixelFormat,BitmapPalette)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.Media.PixelFormat
  parent: System.Windows.Media
  isExternal: false
  name: PixelFormat
  nameWithType: PixelFormat
  fullName: System.Windows.Media.PixelFormat
- uid: System.Windows.Media.Imaging.BitmapPalette
  parent: System.Windows.Media.Imaging
  isExternal: false
  name: BitmapPalette
  nameWithType: BitmapPalette
  fullName: System.Windows.Media.Imaging.BitmapPalette
- uid: System.Windows.Media.Imaging.WriteableBitmap.AddDirtyRect(System.Windows.Int32Rect)
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: AddDirtyRect(Int32Rect)
  nameWithType: WriteableBitmap.AddDirtyRect(Int32Rect)
  fullName: System.Windows.Media.Imaging.WriteableBitmap.AddDirtyRect(Int32Rect)
- uid: System.Windows.Int32Rect
  parent: System.Windows
  isExternal: false
  name: Int32Rect
  nameWithType: Int32Rect
  fullName: System.Windows.Int32Rect
- uid: System.Windows.Media.Imaging.WriteableBitmap.BackBuffer
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: BackBuffer
  nameWithType: WriteableBitmap.BackBuffer
  fullName: System.Windows.Media.Imaging.WriteableBitmap.BackBuffer
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Windows.Media.Imaging.WriteableBitmap.BackBufferStride
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: BackBufferStride
  nameWithType: WriteableBitmap.BackBufferStride
  fullName: System.Windows.Media.Imaging.WriteableBitmap.BackBufferStride
- uid: System.Windows.Media.Imaging.WriteableBitmap.Clone
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: Clone()
  nameWithType: WriteableBitmap.Clone()
  fullName: System.Windows.Media.Imaging.WriteableBitmap.Clone()
- uid: System.Windows.Media.Imaging.WriteableBitmap
  parent: System.Windows.Media.Imaging
  isExternal: false
  name: WriteableBitmap
  nameWithType: WriteableBitmap
  fullName: System.Windows.Media.Imaging.WriteableBitmap
- uid: System.Windows.Media.Imaging.WriteableBitmap.CloneCore(System.Windows.Freezable)
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: CloneCore(Freezable)
  nameWithType: WriteableBitmap.CloneCore(Freezable)
  fullName: System.Windows.Media.Imaging.WriteableBitmap.CloneCore(Freezable)
- uid: System.Windows.Freezable
  parent: System.Windows
  isExternal: false
  name: Freezable
  nameWithType: Freezable
  fullName: System.Windows.Freezable
- uid: System.Windows.Media.Imaging.WriteableBitmap.CloneCurrentValue
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: CloneCurrentValue()
  nameWithType: WriteableBitmap.CloneCurrentValue()
  fullName: System.Windows.Media.Imaging.WriteableBitmap.CloneCurrentValue()
- uid: System.Windows.Media.Imaging.WriteableBitmap.CloneCurrentValueCore(System.Windows.Freezable)
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: CloneCurrentValueCore(Freezable)
  nameWithType: WriteableBitmap.CloneCurrentValueCore(Freezable)
  fullName: System.Windows.Media.Imaging.WriteableBitmap.CloneCurrentValueCore(Freezable)
- uid: System.Windows.Media.Imaging.WriteableBitmap.CreateInstanceCore
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: CreateInstanceCore()
  nameWithType: WriteableBitmap.CreateInstanceCore()
  fullName: System.Windows.Media.Imaging.WriteableBitmap.CreateInstanceCore()
- uid: System.Windows.Media.Imaging.WriteableBitmap.FreezeCore(System.Boolean)
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: FreezeCore(Boolean)
  nameWithType: WriteableBitmap.FreezeCore(Boolean)
  fullName: System.Windows.Media.Imaging.WriteableBitmap.FreezeCore(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Media.Imaging.WriteableBitmap.GetAsFrozenCore(System.Windows.Freezable)
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: GetAsFrozenCore(Freezable)
  nameWithType: WriteableBitmap.GetAsFrozenCore(Freezable)
  fullName: System.Windows.Media.Imaging.WriteableBitmap.GetAsFrozenCore(Freezable)
- uid: System.Windows.Media.Imaging.WriteableBitmap.GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: GetCurrentValueAsFrozenCore(Freezable)
  nameWithType: WriteableBitmap.GetCurrentValueAsFrozenCore(Freezable)
  fullName: System.Windows.Media.Imaging.WriteableBitmap.GetCurrentValueAsFrozenCore(Freezable)
- uid: System.Windows.Media.Imaging.WriteableBitmap.Lock
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: Lock()
  nameWithType: WriteableBitmap.Lock()
  fullName: System.Windows.Media.Imaging.WriteableBitmap.Lock()
- uid: System.Windows.Media.Imaging.WriteableBitmap.TryLock(System.Windows.Duration)
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: TryLock(Duration)
  nameWithType: WriteableBitmap.TryLock(Duration)
  fullName: System.Windows.Media.Imaging.WriteableBitmap.TryLock(Duration)
- uid: System.Windows.Duration
  parent: System.Windows
  isExternal: false
  name: Duration
  nameWithType: Duration
  fullName: System.Windows.Duration
- uid: System.Windows.Media.Imaging.WriteableBitmap.Unlock
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: Unlock()
  nameWithType: WriteableBitmap.Unlock()
  fullName: System.Windows.Media.Imaging.WriteableBitmap.Unlock()
- uid: System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.Array,System.Int32,System.Int32)
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: WritePixels(Int32Rect,Array,Int32,Int32)
  nameWithType: WriteableBitmap.WritePixels(Int32Rect,Array,Int32,Int32)
  fullName: System.Windows.Media.Imaging.WriteableBitmap.WritePixels(Int32Rect,Array,Int32,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.IntPtr,System.Int32,System.Int32)
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: WritePixels(Int32Rect,IntPtr,Int32,Int32)
  nameWithType: WriteableBitmap.WritePixels(Int32Rect,IntPtr,Int32,Int32)
  fullName: System.Windows.Media.Imaging.WriteableBitmap.WritePixels(Int32Rect,IntPtr,Int32,Int32)
- uid: System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.Array,System.Int32,System.Int32,System.Int32)
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: WritePixels(Int32Rect,Array,Int32,Int32,Int32)
  nameWithType: WriteableBitmap.WritePixels(Int32Rect,Array,Int32,Int32,Int32)
  fullName: System.Windows.Media.Imaging.WriteableBitmap.WritePixels(Int32Rect,Array,Int32,Int32,Int32)
- uid: System.Windows.Media.Imaging.WriteableBitmap.WritePixels(System.Windows.Int32Rect,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: WritePixels(Int32Rect,IntPtr,Int32,Int32,Int32,Int32)
  nameWithType: WriteableBitmap.WritePixels(Int32Rect,IntPtr,Int32,Int32,Int32,Int32)
  fullName: System.Windows.Media.Imaging.WriteableBitmap.WritePixels(Int32Rect,IntPtr,Int32,Int32,Int32,Int32)
- uid: System.Windows.Media.Imaging.WriteableBitmap.#ctor*
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: WriteableBitmap
  nameWithType: WriteableBitmap.WriteableBitmap
- uid: System.Windows.Media.Imaging.WriteableBitmap.AddDirtyRect*
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: AddDirtyRect
  nameWithType: WriteableBitmap.AddDirtyRect
- uid: System.Windows.Media.Imaging.WriteableBitmap.BackBuffer*
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: BackBuffer
  nameWithType: WriteableBitmap.BackBuffer
- uid: System.Windows.Media.Imaging.WriteableBitmap.BackBufferStride*
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: BackBufferStride
  nameWithType: WriteableBitmap.BackBufferStride
- uid: System.Windows.Media.Imaging.WriteableBitmap.Clone*
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: Clone
  nameWithType: WriteableBitmap.Clone
- uid: System.Windows.Media.Imaging.WriteableBitmap.CloneCore*
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: CloneCore
  nameWithType: WriteableBitmap.CloneCore
- uid: System.Windows.Media.Imaging.WriteableBitmap.CloneCurrentValue*
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: CloneCurrentValue
  nameWithType: WriteableBitmap.CloneCurrentValue
- uid: System.Windows.Media.Imaging.WriteableBitmap.CloneCurrentValueCore*
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: CloneCurrentValueCore
  nameWithType: WriteableBitmap.CloneCurrentValueCore
- uid: System.Windows.Media.Imaging.WriteableBitmap.CreateInstanceCore*
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: CreateInstanceCore
  nameWithType: WriteableBitmap.CreateInstanceCore
- uid: System.Windows.Media.Imaging.WriteableBitmap.FreezeCore*
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: FreezeCore
  nameWithType: WriteableBitmap.FreezeCore
- uid: System.Windows.Media.Imaging.WriteableBitmap.GetAsFrozenCore*
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: GetAsFrozenCore
  nameWithType: WriteableBitmap.GetAsFrozenCore
- uid: System.Windows.Media.Imaging.WriteableBitmap.GetCurrentValueAsFrozenCore*
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: GetCurrentValueAsFrozenCore
  nameWithType: WriteableBitmap.GetCurrentValueAsFrozenCore
- uid: System.Windows.Media.Imaging.WriteableBitmap.Lock*
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: Lock
  nameWithType: WriteableBitmap.Lock
- uid: System.Windows.Media.Imaging.WriteableBitmap.TryLock*
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: TryLock
  nameWithType: WriteableBitmap.TryLock
- uid: System.Windows.Media.Imaging.WriteableBitmap.Unlock*
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: Unlock
  nameWithType: WriteableBitmap.Unlock
- uid: System.Windows.Media.Imaging.WriteableBitmap.WritePixels*
  parent: System.Windows.Media.Imaging.WriteableBitmap
  isExternal: false
  name: WritePixels
  nameWithType: WriteableBitmap.WritePixels
