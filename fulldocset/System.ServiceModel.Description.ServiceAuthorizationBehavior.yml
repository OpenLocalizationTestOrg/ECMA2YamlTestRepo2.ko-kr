### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Description.ServiceAuthorizationBehavior
  id: ServiceAuthorizationBehavior
  children:
  - System.ServiceModel.Description.ServiceAuthorizationBehavior.#ctor
  - System.ServiceModel.Description.ServiceAuthorizationBehavior.ExternalAuthorizationPolicies
  - System.ServiceModel.Description.ServiceAuthorizationBehavior.ImpersonateCallerForAllOperations
  - System.ServiceModel.Description.ServiceAuthorizationBehavior.ImpersonateOnSerializingReply
  - System.ServiceModel.Description.ServiceAuthorizationBehavior.PrincipalPermissionMode
  - System.ServiceModel.Description.ServiceAuthorizationBehavior.RoleProvider
  - System.ServiceModel.Description.ServiceAuthorizationBehavior.ServiceAuthorizationManager
  - System.ServiceModel.Description.ServiceAuthorizationBehavior.ShouldSerializeExternalAuthorizationPolicies
  - System.ServiceModel.Description.ServiceAuthorizationBehavior.ShouldSerializeServiceAuthorizationManager
  - System.ServiceModel.Description.ServiceAuthorizationBehavior.System#ServiceModel#Description#IServiceBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)
  - System.ServiceModel.Description.ServiceAuthorizationBehavior.System#ServiceModel#Description#IServiceBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)
  - System.ServiceModel.Description.ServiceAuthorizationBehavior.System#ServiceModel#Description#IServiceBehavior#Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)
  langs:
  - csharp
  name: ServiceAuthorizationBehavior
  nameWithType: ServiceAuthorizationBehavior
  fullName: System.ServiceModel.Description.ServiceAuthorizationBehavior
  type: Class
  summary: "서비스 권한 부여 동작과 관련 된 속성을 제공 합니다."
  remarks: "권한 부여는 서비스 수준 및 작업 수준에서 발생합니다. 이 클래스는 서비스 수준에서 권한 부여와 관련 된 속성을 포함 합니다."
  syntax:
    content: 'public sealed class ServiceAuthorizationBehavior : System.ServiceModel.Description.IServiceBehavior'
  inheritance:
  - System.Object
  implements:
  - System.ServiceModel.Description.IServiceBehavior
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Description.ServiceAuthorizationBehavior.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Description.ServiceAuthorizationBehavior
  langs:
  - csharp
  name: ServiceAuthorizationBehavior()
  nameWithType: ServiceAuthorizationBehavior.ServiceAuthorizationBehavior()
  fullName: System.ServiceModel.Description.ServiceAuthorizationBehavior.ServiceAuthorizationBehavior()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.ServiceModel.Description.ServiceAuthorizationBehavior&quot;> </xref> 클래스입니다."
  remarks: "일반적으로 응용 프로그램은 생성자를 직접 호출 하지 않습니다. 이 클래스의 인스턴스를 호출 하 여 검색 대신 `ServiceHostBase.Description.Behaviors.Find<ServiceAuthorizationBehavior>`합니다."
  example:
  - "The following code shows how to retrieve an instance of this class.  \n  \n [!code-vb[c_ImpersonationAndDelegation#3](~/add/codesnippet/visualbasic/m-system.servicemodel.de_6_1.vb)]\n [!code-cs[c_ImpersonationAndDelegation#3](~/add/codesnippet/csharp/m-system.servicemodel.de_6_1.cs)]"
  syntax:
    content: public ServiceAuthorizationBehavior ();
    parameters: []
  overload: System.ServiceModel.Description.ServiceAuthorizationBehavior.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.ServiceAuthorizationBehavior.ExternalAuthorizationPolicies
  id: ExternalAuthorizationPolicies
  parent: System.ServiceModel.Description.ServiceAuthorizationBehavior
  langs:
  - csharp
  name: ExternalAuthorizationPolicies
  nameWithType: ServiceAuthorizationBehavior.ExternalAuthorizationPolicies
  fullName: System.ServiceModel.Description.ServiceAuthorizationBehavior.ExternalAuthorizationPolicies
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "외부 권한 부여 정책의 컬렉션을 가져오거나 설정 합니다."
  remarks: "외부 권한 부여 정책을 사용자 <xref:System.ServiceModel.ServiceSecurityContext>.</xref:System.ServiceModel.ServiceSecurityContext> 에 정책 평가 프로세스에 참여"
  example:
  - "The following code shows how to set this property to use a set of external authorization policies.  \n  \n [!code-cs[PrincipalPermissionMode#3](~/add/codesnippet/csharp/afaf6251-be20-495c-ad4d-_1.cs)]\n [!code-vb[PrincipalPermissionMode#3](~/add/codesnippet/visualbasic/afaf6251-be20-495c-ad4d-_1.vb)]"
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy> ExternalAuthorizationPolicies { get; set; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy}
      description: "외부 권한 부여 정책의 컬렉션입니다."
  overload: System.ServiceModel.Description.ServiceAuthorizationBehavior.ExternalAuthorizationPolicies*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "동작에는 읽기 전용입니다."
  platform:
  - net462
- uid: System.ServiceModel.Description.ServiceAuthorizationBehavior.ImpersonateCallerForAllOperations
  id: ImpersonateCallerForAllOperations
  parent: System.ServiceModel.Description.ServiceAuthorizationBehavior
  langs:
  - csharp
  name: ImpersonateCallerForAllOperations
  nameWithType: ServiceAuthorizationBehavior.ImpersonateCallerForAllOperations
  fullName: System.ServiceModel.Description.ServiceAuthorizationBehavior.ImpersonateCallerForAllOperations
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "서비스에서 지 원하는 모든 작업에 대 한 가장을 수행 하는지 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "값이 `false` 각 작업에 대해 가장이 지정 됨을 나타냅니다."
  example:
  - "This code shows how to set this property.  \n  \n [!code-vb[c_ImpersonationAndDelegation#3](~/add/codesnippet/visualbasic/3f7065e9-a4c7-4253-9e00-_1.vb)]\n [!code-cs[c_ImpersonationAndDelegation#3](~/add/codesnippet/csharp/3f7065e9-a4c7-4253-9e00-_1.cs)]"
  syntax:
    content: public bool ImpersonateCallerForAllOperations { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>서비스에서 지 원하는; 모든 작업에 대 한 가장을 수행 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.ServiceModel.Description.ServiceAuthorizationBehavior.ImpersonateCallerForAllOperations*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "동작에는 읽기 전용입니다."
  platform:
  - net462
- uid: System.ServiceModel.Description.ServiceAuthorizationBehavior.ImpersonateOnSerializingReply
  id: ImpersonateOnSerializingReply
  parent: System.ServiceModel.Description.ServiceAuthorizationBehavior
  langs:
  - csharp
  name: ImpersonateOnSerializingReply
  nameWithType: ServiceAuthorizationBehavior.ImpersonateOnSerializingReply
  fullName: System.ServiceModel.Description.ServiceAuthorizationBehavior.ImpersonateOnSerializingReply
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "서비스에서 회신 가장을 수행 하는지 여부를 나타내는 값을 가져오거나 설정 합니다."
  syntax:
    content: public bool ImpersonateOnSerializingReply { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>서비스에서 회신; 가장을 수행 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.ServiceModel.Description.ServiceAuthorizationBehavior.ImpersonateOnSerializingReply*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.ServiceAuthorizationBehavior.PrincipalPermissionMode
  id: PrincipalPermissionMode
  parent: System.ServiceModel.Description.ServiceAuthorizationBehavior
  langs:
  - csharp
  name: PrincipalPermissionMode
  nameWithType: ServiceAuthorizationBehavior.PrincipalPermissionMode
  fullName: System.ServiceModel.Description.ServiceAuthorizationBehavior.PrincipalPermissionMode
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "보안 주체 사용 권한 모드를 가져오거나 설정 합니다."
  remarks: "이 속성의 멤버 중 하나에 포함 된 <xref:System.ServiceModel.Description.PrincipalPermissionMode>열거형.</xref:System.ServiceModel.Description.PrincipalPermissionMode> 유효한 값은:- <xref:System.ServiceModel.Description.PrincipalPermissionMode>.</xref:System.ServiceModel.Description.PrincipalPermissionMode> 사용자 지정 `IAuthorizationPolicy` 구현 하는 데 채우기 `Thread.CurrentPrincipal`합니다.      -   <xref:System.ServiceModel.Description.PrincipalPermissionMode>.</xref:System.ServiceModel.Description.PrincipalPermissionMode> `Thread.CurrentPrincipal` 속성이 설정 되지 않았습니다.      -   <xref:System.ServiceModel.Description.PrincipalPermissionMode>.</xref:System.ServiceModel.Description.PrincipalPermissionMode> `Thread.CurrentPrincipal` 속성이로 설정 되는 `IPrincipal` ASP.NET 역할 정보에 기반 합니다.      -   <xref:System.ServiceModel.Description.PrincipalPermissionMode>.</xref:System.ServiceModel.Description.PrincipalPermissionMode> `Thread.CurrentPrincipal` 속성이로 설정 되는 `WindowsPrincipal` 들어오는 메시지의 사용자 자격 증명에 따라 합니다."
  example:
  - "This code shows how to set this property.  \n  \n [!code-vb[c_PrincipalPermissionAttribute#3](~/add/codesnippet/visualbasic/ed4c65e4-2594-4bf5-91f6-_1.vb)]\n [!code-cs[c_PrincipalPermissionAttribute#3](~/add/codesnippet/csharp/ed4c65e4-2594-4bf5-91f6-_1.cs)]"
  syntax:
    content: public System.ServiceModel.Description.PrincipalPermissionMode PrincipalPermissionMode { get; set; }
    return:
      type: System.ServiceModel.Description.PrincipalPermissionMode
      description: "주체 권한 모드입니다."
  overload: System.ServiceModel.Description.ServiceAuthorizationBehavior.PrincipalPermissionMode*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.ServiceAuthorizationBehavior.RoleProvider
  id: RoleProvider
  parent: System.ServiceModel.Description.ServiceAuthorizationBehavior
  langs:
  - csharp
  name: RoleProvider
  nameWithType: ServiceAuthorizationBehavior.RoleProvider
  fullName: System.ServiceModel.Description.ServiceAuthorizationBehavior.RoleProvider
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "사용자 지정 역할 공급자를 가져오거나 설정 합니다."
  remarks: "반환 된 <xref:System.Web.Security.RoleProvider>개체는 사용자 지정 역할 공급자의 구현.</xref:System.Web.Security.RoleProvider>"
  example:
  - "The following code shows how to get this property.  \n  \n [!code-cs[PrincipalPermissionMode#6](~/add/codesnippet/csharp/p-system.servicemodel.de_25_1.cs)]\n [!code-vb[PrincipalPermissionMode#6](~/add/codesnippet/visualbasic/p-system.servicemodel.de_25_1.vb)]"
  syntax:
    content: public System.Web.Security.RoleProvider RoleProvider { get; set; }
    return:
      type: System.Web.Security.RoleProvider
      description: "사용자 지정 역할 공급자입니다."
  overload: System.ServiceModel.Description.ServiceAuthorizationBehavior.RoleProvider*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "동작에는 읽기 전용입니다."
  platform:
  - net462
- uid: System.ServiceModel.Description.ServiceAuthorizationBehavior.ServiceAuthorizationManager
  id: ServiceAuthorizationManager
  parent: System.ServiceModel.Description.ServiceAuthorizationBehavior
  langs:
  - csharp
  name: ServiceAuthorizationManager
  nameWithType: ServiceAuthorizationBehavior.ServiceAuthorizationManager
  fullName: System.ServiceModel.Description.ServiceAuthorizationBehavior.ServiceAuthorizationManager
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "서비스 인증 관리자를 가져오거나 설정 합니다."
  remarks: "<xref:System.ServiceModel.ServiceAuthorizationManager>정책을 모두 평가한 앞뒤로 연결 하 고 그 결과, 필요에 따라 연결에 대 한 클래스는 <xref:System.IdentityModel.Policy.AuthorizationContext>에 <xref:System.ServiceModel.ServiceSecurityContext>의 권한 부여 결정을 반환 하 고 `true` 또는 `false` 액세스를 허용 하거나 거부 합니다.</xref:System.ServiceModel.ServiceSecurityContext> </xref:System.IdentityModel.Policy.AuthorizationContext> </xref:System.ServiceModel.ServiceAuthorizationManager>"
  example:
  - "The following code shows how to set this property to use a custom service authorization manager.  \n  \n [!code-cs[PrincipalPermissionMode#3](~/add/codesnippet/csharp/195deeee-7ce7-41ce-9ad6-_1.cs)]\n [!code-vb[PrincipalPermissionMode#3](~/add/codesnippet/visualbasic/195deeee-7ce7-41ce-9ad6-_1.vb)]"
  syntax:
    content: public System.ServiceModel.ServiceAuthorizationManager ServiceAuthorizationManager { get; set; }
    return:
      type: System.ServiceModel.ServiceAuthorizationManager
      description: "서비스 권한 부여 관리자입니다."
  overload: System.ServiceModel.Description.ServiceAuthorizationBehavior.ServiceAuthorizationManager*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.ServiceAuthorizationBehavior.ShouldSerializeExternalAuthorizationPolicies
  id: ShouldSerializeExternalAuthorizationPolicies
  parent: System.ServiceModel.Description.ServiceAuthorizationBehavior
  langs:
  - csharp
  name: ShouldSerializeExternalAuthorizationPolicies()
  nameWithType: ServiceAuthorizationBehavior.ShouldSerializeExternalAuthorizationPolicies()
  fullName: System.ServiceModel.Description.ServiceAuthorizationBehavior.ShouldSerializeExternalAuthorizationPolicies()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "나타내는 값을 반환 여부는 <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior.ExternalAuthorizationPolicies*>속성 값이 기본값에서 변경 되었으며 serialize 해야 합니다.</xref:System.ServiceModel.Description.ServiceAuthorizationBehavior.ExternalAuthorizationPolicies*>"
  syntax:
    content: public bool ShouldSerializeExternalAuthorizationPolicies ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우는 <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior.ExternalAuthorizationPolicies*>고, 그렇지 않으면 직렬화 된 속성 값은 여야 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.ServiceModel.Description.ServiceAuthorizationBehavior.ExternalAuthorizationPolicies*>"
  overload: System.ServiceModel.Description.ServiceAuthorizationBehavior.ShouldSerializeExternalAuthorizationPolicies*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.ServiceAuthorizationBehavior.ShouldSerializeServiceAuthorizationManager
  id: ShouldSerializeServiceAuthorizationManager
  parent: System.ServiceModel.Description.ServiceAuthorizationBehavior
  langs:
  - csharp
  name: ShouldSerializeServiceAuthorizationManager()
  nameWithType: ServiceAuthorizationBehavior.ShouldSerializeServiceAuthorizationManager()
  fullName: System.ServiceModel.Description.ServiceAuthorizationBehavior.ShouldSerializeServiceAuthorizationManager()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "나타내는 값을 반환 여부는 <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior.ServiceAuthorizationManager*>속성 값이 기본값에서 변경 되었으며 serialize 해야 합니다.</xref:System.ServiceModel.Description.ServiceAuthorizationBehavior.ServiceAuthorizationManager*>"
  syntax:
    content: public bool ShouldSerializeServiceAuthorizationManager ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우는 <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior.ServiceAuthorizationManager*>고, 그렇지 않으면 직렬화 된 속성 값은 여야 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.ServiceModel.Description.ServiceAuthorizationBehavior.ServiceAuthorizationManager*>"
  overload: System.ServiceModel.Description.ServiceAuthorizationBehavior.ShouldSerializeServiceAuthorizationManager*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.ServiceAuthorizationBehavior.System#ServiceModel#Description#IServiceBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)
  id: System#ServiceModel#Description#IServiceBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)
  isEii: true
  parent: System.ServiceModel.Description.ServiceAuthorizationBehavior
  langs:
  - csharp
  name: System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(ServiceDescription,ServiceHostBase,Collection<ServiceEndpoint>,BindingParameterCollection)
  nameWithType: ServiceAuthorizationBehavior.System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(ServiceDescription,ServiceHostBase,Collection<ServiceEndpoint>,BindingParameterCollection)
  fullName: System.ServiceModel.Description.ServiceAuthorizationBehavior.System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(ServiceDescription,ServiceHostBase,Collection<ServiceEndpoint>,BindingParameterCollection)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "계약 구현을 지원를 바인딩 요소를 사용자 지정 데이터를 전달 하는 기능을 제공 합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior>인스턴스로 캐스팅 되는 <xref:System.ServiceModel.Description.IServiceBehavior>인터페이스.</xref:System.ServiceModel.Description.IServiceBehavior> </xref:System.ServiceModel.Description.ServiceAuthorizationBehavior>"
  syntax:
    content: void IServiceBehavior.AddBindingParameters (System.ServiceModel.Description.ServiceDescription description, System.ServiceModel.ServiceHostBase serviceHostBase, System.Collections.ObjectModel.Collection<System.ServiceModel.Description.ServiceEndpoint> endpoints, System.ServiceModel.Channels.BindingParameterCollection parameters);
    parameters:
    - id: description
      type: System.ServiceModel.Description.ServiceDescription
      description: "서비스의 서비스 설명입니다."
    - id: serviceHostBase
      type: System.ServiceModel.ServiceHostBase
      description: "서비스의 호스트입니다."
    - id: endpoints
      type: System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint}
      description: "서비스 끝점입니다."
    - id: parameters
      type: System.ServiceModel.Channels.BindingParameterCollection
      description: "사용자 지정 하는 개체에 있는 바인딩 요소에 대 한 액세스 권한이 있습니다."
  overload: System.ServiceModel.Description.ServiceAuthorizationBehavior.System#ServiceModel#Description#IServiceBehavior#AddBindingParameters*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.ServiceAuthorizationBehavior.System#ServiceModel#Description#IServiceBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)
  id: System#ServiceModel#Description#IServiceBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)
  isEii: true
  parent: System.ServiceModel.Description.ServiceAuthorizationBehavior
  langs:
  - csharp
  name: System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(ServiceDescription,ServiceHostBase)
  nameWithType: ServiceAuthorizationBehavior.System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(ServiceDescription,ServiceHostBase)
  fullName: System.ServiceModel.Description.ServiceAuthorizationBehavior.System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(ServiceDescription,ServiceHostBase)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "바인딩을 구성 하는 디스패치 동작을 추가 하는 명시적 인터페이스 구현을 정의 합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior>인스턴스로 캐스팅 되는 <xref:System.ServiceModel.Description.IServiceBehavior>인터페이스.</xref:System.ServiceModel.Description.IServiceBehavior> </xref:System.ServiceModel.Description.ServiceAuthorizationBehavior>"
  syntax:
    content: void IServiceBehavior.ApplyDispatchBehavior (System.ServiceModel.Description.ServiceDescription description, System.ServiceModel.ServiceHostBase serviceHostBase);
    parameters:
    - id: description
      type: System.ServiceModel.Description.ServiceDescription
      description: "서비스 설명입니다."
    - id: serviceHostBase
      type: System.ServiceModel.ServiceHostBase
      description: "현재 구축 중인 호스트입니다."
  overload: System.ServiceModel.Description.ServiceAuthorizationBehavior.System#ServiceModel#Description#IServiceBehavior#ApplyDispatchBehavior*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.ServiceAuthorizationBehavior.System#ServiceModel#Description#IServiceBehavior#Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)
  id: System#ServiceModel#Description#IServiceBehavior#Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)
  isEii: true
  parent: System.ServiceModel.Description.ServiceAuthorizationBehavior
  langs:
  - csharp
  name: System.ServiceModel.Description.IServiceBehavior.Validate(ServiceDescription,ServiceHostBase)
  nameWithType: ServiceAuthorizationBehavior.System.ServiceModel.Description.IServiceBehavior.Validate(ServiceDescription,ServiceHostBase)
  fullName: System.ServiceModel.Description.ServiceAuthorizationBehavior.System.ServiceModel.Description.IServiceBehavior.Validate(ServiceDescription,ServiceHostBase)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "서비스 호스트를 검사 하는 기능 및 서비스를 성공적으로 실행할 수 있는지 확인 하려면 서비스 설명을 제공 합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior>인스턴스로 캐스팅 되는 <xref:System.ServiceModel.Description.IServiceBehavior>인터페이스.</xref:System.ServiceModel.Description.IServiceBehavior> </xref:System.ServiceModel.Description.ServiceAuthorizationBehavior>"
  syntax:
    content: void IServiceBehavior.Validate (System.ServiceModel.Description.ServiceDescription description, System.ServiceModel.ServiceHostBase serviceHostBase);
    parameters:
    - id: description
      type: System.ServiceModel.Description.ServiceDescription
      description: "서비스 설명입니다."
    - id: serviceHostBase
      type: System.ServiceModel.ServiceHostBase
      description: "현재 생성 중인 서비스 호스트입니다."
  overload: System.ServiceModel.Description.ServiceAuthorizationBehavior.System#ServiceModel#Description#IServiceBehavior#Validate*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ServiceModel.Description.ServiceAuthorizationBehavior.#ctor
  parent: System.ServiceModel.Description.ServiceAuthorizationBehavior
  isExternal: false
  name: ServiceAuthorizationBehavior()
  nameWithType: ServiceAuthorizationBehavior.ServiceAuthorizationBehavior()
  fullName: System.ServiceModel.Description.ServiceAuthorizationBehavior.ServiceAuthorizationBehavior()
- uid: System.ServiceModel.Description.ServiceAuthorizationBehavior.ExternalAuthorizationPolicies
  parent: System.ServiceModel.Description.ServiceAuthorizationBehavior
  isExternal: false
  name: ExternalAuthorizationPolicies
  nameWithType: ServiceAuthorizationBehavior.ExternalAuthorizationPolicies
  fullName: System.ServiceModel.Description.ServiceAuthorizationBehavior.ExternalAuthorizationPolicies
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<IAuthorizationPolicy>
  nameWithType: ReadOnlyCollection<IAuthorizationPolicy>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Policy.IAuthorizationPolicy
    name: IAuthorizationPolicy
    nameWithType: IAuthorizationPolicy
    fullName: IAuthorizationPolicy
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Description.ServiceAuthorizationBehavior.ImpersonateCallerForAllOperations
  parent: System.ServiceModel.Description.ServiceAuthorizationBehavior
  isExternal: false
  name: ImpersonateCallerForAllOperations
  nameWithType: ServiceAuthorizationBehavior.ImpersonateCallerForAllOperations
  fullName: System.ServiceModel.Description.ServiceAuthorizationBehavior.ImpersonateCallerForAllOperations
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Description.ServiceAuthorizationBehavior.ImpersonateOnSerializingReply
  parent: System.ServiceModel.Description.ServiceAuthorizationBehavior
  isExternal: false
  name: ImpersonateOnSerializingReply
  nameWithType: ServiceAuthorizationBehavior.ImpersonateOnSerializingReply
  fullName: System.ServiceModel.Description.ServiceAuthorizationBehavior.ImpersonateOnSerializingReply
- uid: System.ServiceModel.Description.ServiceAuthorizationBehavior.PrincipalPermissionMode
  parent: System.ServiceModel.Description.ServiceAuthorizationBehavior
  isExternal: false
  name: PrincipalPermissionMode
  nameWithType: ServiceAuthorizationBehavior.PrincipalPermissionMode
  fullName: System.ServiceModel.Description.ServiceAuthorizationBehavior.PrincipalPermissionMode
- uid: System.ServiceModel.Description.PrincipalPermissionMode
  parent: System.ServiceModel.Description
  isExternal: false
  name: PrincipalPermissionMode
  nameWithType: PrincipalPermissionMode
  fullName: System.ServiceModel.Description.PrincipalPermissionMode
- uid: System.ServiceModel.Description.ServiceAuthorizationBehavior.RoleProvider
  parent: System.ServiceModel.Description.ServiceAuthorizationBehavior
  isExternal: false
  name: RoleProvider
  nameWithType: ServiceAuthorizationBehavior.RoleProvider
  fullName: System.ServiceModel.Description.ServiceAuthorizationBehavior.RoleProvider
- uid: System.Web.Security.RoleProvider
  parent: System.Web.Security
  isExternal: true
  name: RoleProvider
  nameWithType: RoleProvider
  fullName: System.Web.Security.RoleProvider
- uid: System.ServiceModel.Description.ServiceAuthorizationBehavior.ServiceAuthorizationManager
  parent: System.ServiceModel.Description.ServiceAuthorizationBehavior
  isExternal: false
  name: ServiceAuthorizationManager
  nameWithType: ServiceAuthorizationBehavior.ServiceAuthorizationManager
  fullName: System.ServiceModel.Description.ServiceAuthorizationBehavior.ServiceAuthorizationManager
- uid: System.ServiceModel.ServiceAuthorizationManager
  parent: System.ServiceModel
  isExternal: false
  name: ServiceAuthorizationManager
  nameWithType: ServiceAuthorizationManager
  fullName: System.ServiceModel.ServiceAuthorizationManager
- uid: System.ServiceModel.Description.ServiceAuthorizationBehavior.ShouldSerializeExternalAuthorizationPolicies
  parent: System.ServiceModel.Description.ServiceAuthorizationBehavior
  isExternal: false
  name: ShouldSerializeExternalAuthorizationPolicies()
  nameWithType: ServiceAuthorizationBehavior.ShouldSerializeExternalAuthorizationPolicies()
  fullName: System.ServiceModel.Description.ServiceAuthorizationBehavior.ShouldSerializeExternalAuthorizationPolicies()
- uid: System.ServiceModel.Description.ServiceAuthorizationBehavior.ShouldSerializeServiceAuthorizationManager
  parent: System.ServiceModel.Description.ServiceAuthorizationBehavior
  isExternal: false
  name: ShouldSerializeServiceAuthorizationManager()
  nameWithType: ServiceAuthorizationBehavior.ShouldSerializeServiceAuthorizationManager()
  fullName: System.ServiceModel.Description.ServiceAuthorizationBehavior.ShouldSerializeServiceAuthorizationManager()
- uid: System.ServiceModel.Description.ServiceAuthorizationBehavior.System#ServiceModel#Description#IServiceBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)
  parent: System.ServiceModel.Description.ServiceAuthorizationBehavior
  isExternal: false
  name: System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(ServiceDescription,ServiceHostBase,Collection<ServiceEndpoint>,BindingParameterCollection)
  nameWithType: ServiceAuthorizationBehavior.System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(ServiceDescription,ServiceHostBase,Collection<ServiceEndpoint>,BindingParameterCollection)
  fullName: System.ServiceModel.Description.ServiceAuthorizationBehavior.System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(ServiceDescription,ServiceHostBase,Collection<ServiceEndpoint>,BindingParameterCollection)
- uid: System.ServiceModel.Description.ServiceDescription
  parent: System.ServiceModel.Description
  isExternal: false
  name: ServiceDescription
  nameWithType: ServiceDescription
  fullName: System.ServiceModel.Description.ServiceDescription
- uid: System.ServiceModel.ServiceHostBase
  parent: System.ServiceModel
  isExternal: false
  name: ServiceHostBase
  nameWithType: ServiceHostBase
  fullName: System.ServiceModel.ServiceHostBase
- uid: System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<ServiceEndpoint>
  nameWithType: Collection<ServiceEndpoint>
  fullName: System.Collections.ObjectModel.Collection<System.ServiceModel.Description.ServiceEndpoint>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.ServiceModel.Description.ServiceEndpoint>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ServiceModel.Description.ServiceEndpoint
    name: ServiceEndpoint
    nameWithType: ServiceEndpoint
    fullName: ServiceEndpoint
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Channels.BindingParameterCollection
  parent: System.ServiceModel.Channels
  isExternal: true
  name: BindingParameterCollection
  nameWithType: BindingParameterCollection
  fullName: System.ServiceModel.Channels.BindingParameterCollection
- uid: System.ServiceModel.Description.ServiceAuthorizationBehavior.System#ServiceModel#Description#IServiceBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)
  parent: System.ServiceModel.Description.ServiceAuthorizationBehavior
  isExternal: false
  name: System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(ServiceDescription,ServiceHostBase)
  nameWithType: ServiceAuthorizationBehavior.System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(ServiceDescription,ServiceHostBase)
  fullName: System.ServiceModel.Description.ServiceAuthorizationBehavior.System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(ServiceDescription,ServiceHostBase)
- uid: System.ServiceModel.Description.ServiceAuthorizationBehavior.System#ServiceModel#Description#IServiceBehavior#Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)
  parent: System.ServiceModel.Description.ServiceAuthorizationBehavior
  isExternal: false
  name: System.ServiceModel.Description.IServiceBehavior.Validate(ServiceDescription,ServiceHostBase)
  nameWithType: ServiceAuthorizationBehavior.System.ServiceModel.Description.IServiceBehavior.Validate(ServiceDescription,ServiceHostBase)
  fullName: System.ServiceModel.Description.ServiceAuthorizationBehavior.System.ServiceModel.Description.IServiceBehavior.Validate(ServiceDescription,ServiceHostBase)
- uid: System.ServiceModel.Description.ServiceAuthorizationBehavior.#ctor*
  parent: System.ServiceModel.Description.ServiceAuthorizationBehavior
  isExternal: false
  name: ServiceAuthorizationBehavior
  nameWithType: ServiceAuthorizationBehavior.ServiceAuthorizationBehavior
- uid: System.ServiceModel.Description.ServiceAuthorizationBehavior.ExternalAuthorizationPolicies*
  parent: System.ServiceModel.Description.ServiceAuthorizationBehavior
  isExternal: false
  name: ExternalAuthorizationPolicies
  nameWithType: ServiceAuthorizationBehavior.ExternalAuthorizationPolicies
- uid: System.ServiceModel.Description.ServiceAuthorizationBehavior.ImpersonateCallerForAllOperations*
  parent: System.ServiceModel.Description.ServiceAuthorizationBehavior
  isExternal: false
  name: ImpersonateCallerForAllOperations
  nameWithType: ServiceAuthorizationBehavior.ImpersonateCallerForAllOperations
- uid: System.ServiceModel.Description.ServiceAuthorizationBehavior.ImpersonateOnSerializingReply*
  parent: System.ServiceModel.Description.ServiceAuthorizationBehavior
  isExternal: false
  name: ImpersonateOnSerializingReply
  nameWithType: ServiceAuthorizationBehavior.ImpersonateOnSerializingReply
- uid: System.ServiceModel.Description.ServiceAuthorizationBehavior.PrincipalPermissionMode*
  parent: System.ServiceModel.Description.ServiceAuthorizationBehavior
  isExternal: false
  name: PrincipalPermissionMode
  nameWithType: ServiceAuthorizationBehavior.PrincipalPermissionMode
- uid: System.ServiceModel.Description.ServiceAuthorizationBehavior.RoleProvider*
  parent: System.ServiceModel.Description.ServiceAuthorizationBehavior
  isExternal: false
  name: RoleProvider
  nameWithType: ServiceAuthorizationBehavior.RoleProvider
- uid: System.ServiceModel.Description.ServiceAuthorizationBehavior.ServiceAuthorizationManager*
  parent: System.ServiceModel.Description.ServiceAuthorizationBehavior
  isExternal: false
  name: ServiceAuthorizationManager
  nameWithType: ServiceAuthorizationBehavior.ServiceAuthorizationManager
- uid: System.ServiceModel.Description.ServiceAuthorizationBehavior.ShouldSerializeExternalAuthorizationPolicies*
  parent: System.ServiceModel.Description.ServiceAuthorizationBehavior
  isExternal: false
  name: ShouldSerializeExternalAuthorizationPolicies
  nameWithType: ServiceAuthorizationBehavior.ShouldSerializeExternalAuthorizationPolicies
- uid: System.ServiceModel.Description.ServiceAuthorizationBehavior.ShouldSerializeServiceAuthorizationManager*
  parent: System.ServiceModel.Description.ServiceAuthorizationBehavior
  isExternal: false
  name: ShouldSerializeServiceAuthorizationManager
  nameWithType: ServiceAuthorizationBehavior.ShouldSerializeServiceAuthorizationManager
- uid: System.ServiceModel.Description.ServiceAuthorizationBehavior.System#ServiceModel#Description#IServiceBehavior#AddBindingParameters*
  parent: System.ServiceModel.Description.ServiceAuthorizationBehavior
  isExternal: false
  name: System.ServiceModel.Description.IServiceBehavior.AddBindingParameters
  nameWithType: ServiceAuthorizationBehavior.System.ServiceModel.Description.IServiceBehavior.AddBindingParameters
- uid: System.ServiceModel.Description.ServiceAuthorizationBehavior.System#ServiceModel#Description#IServiceBehavior#ApplyDispatchBehavior*
  parent: System.ServiceModel.Description.ServiceAuthorizationBehavior
  isExternal: false
  name: System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior
  nameWithType: ServiceAuthorizationBehavior.System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior
- uid: System.ServiceModel.Description.ServiceAuthorizationBehavior.System#ServiceModel#Description#IServiceBehavior#Validate*
  parent: System.ServiceModel.Description.ServiceAuthorizationBehavior
  isExternal: false
  name: System.ServiceModel.Description.IServiceBehavior.Validate
  nameWithType: ServiceAuthorizationBehavior.System.ServiceModel.Description.IServiceBehavior.Validate
