### YamlMime:ManagedReference
items:
- uid: System.Security.Permissions.ReflectionPermissionFlag
  id: ReflectionPermissionFlag
  children:
  - System.Security.Permissions.ReflectionPermissionFlag.AllFlags
  - System.Security.Permissions.ReflectionPermissionFlag.MemberAccess
  - System.Security.Permissions.ReflectionPermissionFlag.NoFlags
  - System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit
  - System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess
  - System.Security.Permissions.ReflectionPermissionFlag.TypeInformation
  langs:
  - csharp
  name: ReflectionPermissionFlag
  nameWithType: ReflectionPermissionFlag
  fullName: System.Security.Permissions.ReflectionPermissionFlag
  type: Enum
  summary: "허용 되는 용도 지정 된 <xref href=&quot;System.Reflection&quot;> </xref> 및 <xref href=&quot;System.Reflection.Emit&quot;> </xref> 네임 스페이스입니다."
  remarks: "이 열거형은에서 사용 된 <xref:System.Security.Permissions.ReflectionPermission>및 <xref:System.Security.Permissions.ReflectionPermissionAttribute>클래스.</xref:System.Security.Permissions.ReflectionPermissionAttribute> </xref:System.Security.Permissions.ReflectionPermission> 없는 경우 <xref:System.Security.Permissions.ReflectionPermission>권한이 부여 되 면 모든 형식 및 멤버에 리플렉션을 사용할 수 있지만 호출 작업이 표시 되는 형식 및 멤버에 대해서만 허용 됩니다.</xref:System.Security.Permissions.ReflectionPermission> 자세한 내용은 참조 [리플렉션의 보안 고려 사항](~/add/includes/ajax-current-ext-md.md)합니다.      > [!CAUTION] > 때문에 <xref:System.Security.Permissions.ReflectionPermission>액세스 권한을 제공할 수 전용 클래스 멤버에 게 부여 하는 권장 <xref:System.Security.Permissions.ReflectionPermission>인터넷 코드 RestrictedMemberAccess 플래그로 하 고 다른 플래그와 되지 않습니다.</xref:System.Security.Permissions.ReflectionPermission> </xref:System.Security.Permissions.ReflectionPermission>       에 도입 된 RestrictedMemberAccess 플래그는 [!INCLUDE[net_v20SP1_short](~/add/includes/net-v20sp1-short-md.md)]합니다. 이 플래그를 사용 하려면 응용 프로그램이 대상 해야는 [!INCLUDE[net_v35_long](~/add/includes/ajax-current-ext-md.md)] 이상.      > [!IMPORTANT] > AllFlags RestrictedMemberAccess 플래그를 포함 하지 않습니다. 이 열거형의 모든 플래그를 포함 하는 마스크를 가져오려면 RestrictedMemberAccess와 AllFlags 조합의 사용 해야 합니다.       부터는 [!INCLUDE[net_v20SP1_short](~/add/includes/net-v20sp1-short-md.md)], ReflectionEmit 플래그는 더 이상 코드를 내보내는 않으면 필요가 디버그 기호를 내보냅니다. 이 기능을 사용 하려면 응용 프로그램이 대상 해야는 [!INCLUDE[net_v35_short](~/add/includes/net-v35-short-md.md)] 이상.       부터는 [!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)], 플래그 되지 않으면 TypeInformation 플래그가 public이 아닌 형식과 멤버에 대해 반영 하기 위해 더 이상 필요 합니다."
  example:
  - "The following example shows how to use the ReflectionPermissionFlag enumeration to initialize a new instance of the <xref:System.Security.Permissions.ReflectionPermission> class that represents the right to perform restricted member access. This example is part of a larger example that is provided for the <xref:System.Security.Permissions.ReflectionPermission> class.  \n  \n For an example that shows how to use the RestrictedMemberAccess flag with Internet code, see [Walkthrough: Emitting Code in Partial Trust Scenarios](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Security.Permissions.ReflectionPermission#8](~/add/codesnippet/visualbasic/t-system.security.permis_18_1.vb)]\n [!code-cs[System.Security.Permissions.ReflectionPermission#8](~/add/codesnippet/csharp/t-system.security.permis_18_1.cs)]"
  syntax:
    content: >-
      [System.Flags]

      [System.Runtime.InteropServices.ComVisible(true)]

      public enum ReflectionPermissionFlag
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.Security.Permissions.ReflectionPermissionFlag.AllFlags
  id: AllFlags
  parent: System.Security.Permissions.ReflectionPermissionFlag
  langs:
  - csharp
  name: AllFlags
  nameWithType: ReflectionPermissionFlag.AllFlags
  fullName: System.Security.Permissions.ReflectionPermissionFlag.AllFlags
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "<xref uid=&quot;langword_csharp_TypeInformation&quot; name=&quot;TypeInformation&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_MemberAccess&quot; name=&quot;MemberAccess&quot; href=&quot;&quot;></xref>, and <xref uid=&quot;langword_csharp_ReflectionEmit&quot; name=&quot;ReflectionEmit&quot; href=&quot;&quot;></xref> are set. AllFlags RestrictedMemberAccess 포함 되지 않습니다."
  syntax:
    content: AllFlags
    return:
      type: System.Security.Permissions.ReflectionPermissionFlag
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.ReflectionPermissionFlag.MemberAccess
  id: MemberAccess
  parent: System.Security.Permissions.ReflectionPermissionFlag
  langs:
  - csharp
  name: MemberAccess
  nameWithType: ReflectionPermissionFlag.MemberAccess
  fullName: System.Security.Permissions.ReflectionPermissionFlag.MemberAccess
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "권한 부여 집합에 관계 없이 모든 멤버에 대해 호출 작업이 허용 됩니다. 이 플래그를 설정 하지 않으면 호출 작업이 표시 멤버에 대해서만 허용 됩니다."
  syntax:
    content: MemberAccess
    return:
      type: System.Security.Permissions.ReflectionPermissionFlag
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.ReflectionPermissionFlag.NoFlags
  id: NoFlags
  parent: System.Security.Permissions.ReflectionPermissionFlag
  langs:
  - csharp
  name: NoFlags
  nameWithType: ReflectionPermissionFlag.NoFlags
  fullName: System.Security.Permissions.ReflectionPermissionFlag.NoFlags
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "열거형 형식 및 멤버의 허용 됩니다. 호출 작업이 표시 되는 형식 및 멤버에서 허용 됩니다."
  syntax:
    content: NoFlags
    return:
      type: System.Security.Permissions.ReflectionPermissionFlag
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit
  id: ReflectionEmit
  parent: System.Security.Permissions.ReflectionPermissionFlag
  langs:
  - csharp
  name: ReflectionEmit
  nameWithType: ReflectionPermissionFlag.ReflectionEmit
  fullName: System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "디버그 기호 내보내기 허용 됩니다. 부터는 [!INCLUDE[net_v20sp1_long](~/add/includes/net-v20sp1-long-md.md)],이 플래그가 더 이상 코드를 내보내는 데 필요 합니다."
  syntax:
    content: ReflectionEmit
    return:
      type: System.Security.Permissions.ReflectionPermissionFlag
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess
  id: RestrictedMemberAccess
  parent: System.Security.Permissions.ReflectionPermissionFlag
  langs:
  - csharp
  name: RestrictedMemberAccess
  nameWithType: ReflectionPermissionFlag.RestrictedMemberAccess
  fullName: System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "부분적으로 신뢰할 수 있는 코드에 대 한 제한 된 멤버 액세스를 제공 합니다. Public이 아닌 형식과 멤버를 부분적으로 신뢰할 수 있는 코드에 액세스할 수 있지만 권한 부여 집합의 경우에 public이 아닌 형식 및 멤버를 포함 하는 어셈블리의 권한 부여 집합에 부분적으로 신뢰할 수 있는 코드 모든 권한이 포함 됩니다. 이 플래그는의 새로운는 [!INCLUDE[net_v20SP1_short](~/add/includes/net-v20sp1-short-md.md)]합니다."
  syntax:
    content: RestrictedMemberAccess
    return:
      type: System.Security.Permissions.ReflectionPermissionFlag
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.ReflectionPermissionFlag.TypeInformation
  id: TypeInformation
  parent: System.Security.Permissions.ReflectionPermissionFlag
  langs:
  - csharp
  name: TypeInformation
  nameWithType: ReflectionPermissionFlag.TypeInformation
  fullName: System.Security.Permissions.ReflectionPermissionFlag.TypeInformation
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "이 플래그는 사용 되지 않습니다. 없음 플래그는 형식과 멤버를 열거 하 고 해당 메타 데이터를 검사 하는 데 필요 합니다. NoFlags를 대신 사용 합니다."
  syntax:
    content: TypeInformation
    return:
      type: System.Security.Permissions.ReflectionPermissionFlag
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.Security.Permissions.ReflectionPermissionFlag.AllFlags
  parent: System.Security.Permissions.ReflectionPermissionFlag
  isExternal: false
  name: AllFlags
  nameWithType: ReflectionPermissionFlag.AllFlags
  fullName: System.Security.Permissions.ReflectionPermissionFlag.AllFlags
- uid: System.Security.Permissions.ReflectionPermissionFlag
  parent: System.Security.Permissions
  isExternal: false
  name: ReflectionPermissionFlag
  nameWithType: ReflectionPermissionFlag
  fullName: System.Security.Permissions.ReflectionPermissionFlag
- uid: System.Security.Permissions.ReflectionPermissionFlag.MemberAccess
  parent: System.Security.Permissions.ReflectionPermissionFlag
  isExternal: false
  name: MemberAccess
  nameWithType: ReflectionPermissionFlag.MemberAccess
  fullName: System.Security.Permissions.ReflectionPermissionFlag.MemberAccess
- uid: System.Security.Permissions.ReflectionPermissionFlag.NoFlags
  parent: System.Security.Permissions.ReflectionPermissionFlag
  isExternal: false
  name: NoFlags
  nameWithType: ReflectionPermissionFlag.NoFlags
  fullName: System.Security.Permissions.ReflectionPermissionFlag.NoFlags
- uid: System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit
  parent: System.Security.Permissions.ReflectionPermissionFlag
  isExternal: false
  name: ReflectionEmit
  nameWithType: ReflectionPermissionFlag.ReflectionEmit
  fullName: System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit
- uid: System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess
  parent: System.Security.Permissions.ReflectionPermissionFlag
  isExternal: false
  name: RestrictedMemberAccess
  nameWithType: ReflectionPermissionFlag.RestrictedMemberAccess
  fullName: System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess
- uid: System.Security.Permissions.ReflectionPermissionFlag.TypeInformation
  parent: System.Security.Permissions.ReflectionPermissionFlag
  isExternal: false
  name: TypeInformation
  nameWithType: ReflectionPermissionFlag.TypeInformation
  fullName: System.Security.Permissions.ReflectionPermissionFlag.TypeInformation
