### YamlMime:ManagedReference
items:
- uid: System.Security.Permissions.StorePermission
  id: StorePermission
  children:
  - System.Security.Permissions.StorePermission.#ctor(System.Security.Permissions.PermissionState)
  - System.Security.Permissions.StorePermission.#ctor(System.Security.Permissions.StorePermissionFlags)
  - System.Security.Permissions.StorePermission.Copy
  - System.Security.Permissions.StorePermission.Flags
  - System.Security.Permissions.StorePermission.FromXml(System.Security.SecurityElement)
  - System.Security.Permissions.StorePermission.Intersect(System.Security.IPermission)
  - System.Security.Permissions.StorePermission.IsSubsetOf(System.Security.IPermission)
  - System.Security.Permissions.StorePermission.IsUnrestricted
  - System.Security.Permissions.StorePermission.ToXml
  - System.Security.Permissions.StorePermission.Union(System.Security.IPermission)
  langs:
  - csharp
  name: StorePermission
  nameWithType: StorePermission
  fullName: System.Security.Permissions.StorePermission
  type: Class
  summary: "포함 된 X.509 인증서를 저장 하는 액세스를 제어 합니다. 이 클래스는 상속 될 수 없습니다."
  remarks: "StorePermission 제어 코드 액세스 권한을 부여 하기 X.509 저장 합니다. 사용 권한은 모든 매장에 적용 되는 액세스 수준을 나타내는 플래그를 기반으로 합니다."
  syntax:
    content: 'public sealed class StorePermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission'
  inheritance:
  - System.Object
  - System.Security.CodeAccessPermission
  implements:
  - System.Security.Permissions.IUnrestrictedPermission
  inheritedMembers:
  - System.Security.CodeAccessPermission.Assert
  - System.Security.CodeAccessPermission.Demand
  - System.Security.CodeAccessPermission.Deny
  - System.Security.CodeAccessPermission.Equals(System.Object)
  - System.Security.CodeAccessPermission.GetHashCode
  - System.Security.CodeAccessPermission.PermitOnly
  - System.Security.CodeAccessPermission.RevertAll
  - System.Security.CodeAccessPermission.RevertAssert
  - System.Security.CodeAccessPermission.RevertDeny
  - System.Security.CodeAccessPermission.RevertPermitOnly
  - System.Security.CodeAccessPermission.ToString
  platform:
  - net462
- uid: System.Security.Permissions.StorePermission.#ctor(System.Security.Permissions.PermissionState)
  id: '#ctor(System.Security.Permissions.PermissionState)'
  parent: System.Security.Permissions.StorePermission
  langs:
  - csharp
  name: StorePermission(PermissionState)
  nameWithType: StorePermission.StorePermission(PermissionState)
  fullName: System.Security.Permissions.StorePermission.StorePermission(PermissionState)
  type: Constructor
  assemblies:
  - System
  namespace: System.Security.Permissions
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Security.Permissions.StorePermission&quot;> </xref> 완전 제한 또는 무제한 권한 두 상태 중 하나를 사용 하 여 클래스입니다."
  remarks: "Permission 개체 제공 완전 제한 (`None`) 또는 `Unrestricted` X.509 저장소에 액세스 합니다. 완전 제한 (`None`), <xref:System.Security.Permissions.StorePermission.Flags%2A>그런 다음 허용 되는 액세스 형식을 지정 하려면 속성을 설정할 수 있습니다.</xref:System.Security.Permissions.StorePermission.Flags%2A>"
  syntax:
    content: public StorePermission (System.Security.Permissions.PermissionState state);
    parameters:
    - id: state
      type: System.Security.Permissions.PermissionState
      description: "중 하나는 <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref> 값입니다."
  overload: System.Security.Permissions.StorePermission.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>state</code>유효 하지 않거나 <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref> 값입니다."
  platform:
  - net462
- uid: System.Security.Permissions.StorePermission.#ctor(System.Security.Permissions.StorePermissionFlags)
  id: '#ctor(System.Security.Permissions.StorePermissionFlags)'
  parent: System.Security.Permissions.StorePermission
  langs:
  - csharp
  name: StorePermission(StorePermissionFlags)
  nameWithType: StorePermission.StorePermission(StorePermissionFlags)
  fullName: System.Security.Permissions.StorePermission.StorePermission(StorePermissionFlags)
  type: Constructor
  assemblies:
  - System
  namespace: System.Security.Permissions
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Security.Permissions.StorePermission&quot;> </xref> 지정 된 액세스는 클래스입니다."
  remarks: "`flag` 매개 변수는 허용된 된 액세스 X.509 저장소를 지정 합니다. 지정한 액세스 허용 되는 모든 상점에 적용 합니다. 개별 저장소에 대 한 액세스를 지정 하는 것이 불가능 합니다."
  syntax:
    content: public StorePermission (System.Security.Permissions.StorePermissionFlags flag);
    parameters:
    - id: flag
      type: System.Security.Permissions.StorePermissionFlags
      description: "비트 조합 된 <xref href=&quot;System.Security.Permissions.StorePermissionFlags&quot;> </xref> 값입니다."
  overload: System.Security.Permissions.StorePermission.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>flag</code>조합으로 알맞지 않습니다 <xref href=&quot;System.Security.Permissions.StorePermissionFlags&quot;> </xref> 값입니다."
  platform:
  - net462
- uid: System.Security.Permissions.StorePermission.Copy
  id: Copy
  parent: System.Security.Permissions.StorePermission
  langs:
  - csharp
  name: Copy()
  nameWithType: StorePermission.Copy()
  fullName: System.Security.Permissions.StorePermission.Copy()
  type: Method
  assemblies:
  - System
  namespace: System.Security.Permissions
  summary: "만들고 현재 사용 권한의 동일한 복사본을 반환 합니다."
  remarks: "사용 권한의 복사본은 원래 사용 권한과 리소스에 동일한 액세스를 권한을 나타냅니다."
  syntax:
    content: public override System.Security.IPermission Copy ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "현재 사용 권한의 복사본입니다."
  overload: System.Security.Permissions.StorePermission.Copy*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.StorePermission.Flags
  id: Flags
  parent: System.Security.Permissions.StorePermission
  langs:
  - csharp
  name: Flags
  nameWithType: StorePermission.Flags
  fullName: System.Security.Permissions.StorePermission.Flags
  type: Property
  assemblies:
  - System
  namespace: System.Security.Permissions
  summary: "형식을 가져오거나 설정 합니다. <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Store&quot;> </xref> 현재 사용 권한이 허용 된 액세스 합니다."
  remarks: "Flags 속성에 허용된 된 액세스 X.509 저장소를 지정합니다. X.509 저장소는 실제 저장소를 유지 하 고 X.509 인증서를 관리 하는 데 사용 합니다."
  syntax:
    content: public System.Security.Permissions.StorePermissionFlags Flags { get; set; }
    return:
      type: System.Security.Permissions.StorePermissionFlags
      description: "비트 조합 된 <xref href=&quot;System.Security.Permissions.StorePermissionFlags&quot;> </xref> 값입니다."
  overload: System.Security.Permissions.StorePermission.Flags*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "이 속성에 잘못 된 값을 설정 하려고 시도 합니다. 참조 <xref href=&quot;System.Security.Permissions.StorePermissionFlags&quot;> </xref> 유효한 값에 대 한 합니다."
  platform:
  - net462
- uid: System.Security.Permissions.StorePermission.FromXml(System.Security.SecurityElement)
  id: FromXml(System.Security.SecurityElement)
  parent: System.Security.Permissions.StorePermission
  langs:
  - csharp
  name: FromXml(SecurityElement)
  nameWithType: StorePermission.FromXml(SecurityElement)
  fullName: System.Security.Permissions.StorePermission.FromXml(SecurityElement)
  type: Method
  assemblies:
  - System
  namespace: System.Security.Permissions
  summary: "지정 된 상태의 XML 인코딩을 사용 권한을 다시 만듭니다."
  remarks: "FromXml 메서드는 <xref:System.Security.Permissions.StorePermission>XML 인코딩에서 개체 <xref:System.Security.SecurityElement>클래스</xref:System.Security.SecurityElement> 에 정의 된</xref:System.Security.Permissions.StorePermission> 다시 만듭니다. 사용 하 여는 <xref:System.Security.Permissions.StorePermission.ToXml%2A>메서드를 XML로 인코딩하는 <xref:System.Security.Permissions.StorePermission>, 상태 정보를 포함 합니다.</xref:System.Security.Permissions.StorePermission> </xref:System.Security.Permissions.StorePermission.ToXml%2A>"
  syntax:
    content: public override void FromXml (System.Security.SecurityElement securityElement);
    parameters:
    - id: securityElement
      type: System.Security.SecurityElement
      description: "A <xref href=&quot;System.Security.SecurityElement&quot;> </xref> 권한을 다시 생성 하는 데 인코딩 XML이 들어 있습니다."
  overload: System.Security.Permissions.StorePermission.FromXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>securityElement</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>securityElement</code>올바른 권한 요소가 아닙니다.       -또는-의 버전 번호가 <code>securityElement</code> 올바르지 않습니다."
  platform:
  - net462
- uid: System.Security.Permissions.StorePermission.Intersect(System.Security.IPermission)
  id: Intersect(System.Security.IPermission)
  parent: System.Security.Permissions.StorePermission
  langs:
  - csharp
  name: Intersect(IPermission)
  nameWithType: StorePermission.Intersect(IPermission)
  fullName: System.Security.Permissions.StorePermission.Intersect(IPermission)
  type: Method
  assemblies:
  - System
  namespace: System.Security.Permissions
  summary: "만들고 있는 현재 사용 권한 및 지정한 사용 권한의 공통 사용 권한을 반환 합니다."
  remarks: "두 사용 권한의 공통 사항에는 권한을 모두 공통으로 설명 하는 작업 집합을 설명 하는 권한입니다. 원래 사용 권한을 모두 전달 하는 요구만 교집합에 전달 합니다."
  syntax:
    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "현재 사용 권한 집합과 교차 하는 사용 권한입니다. 현재 사용 권한과 동일한 형식 이어야 합니다."
    return:
      type: System.Security.IPermission
      description: "현재 사용 권한 및 지정한 사용 권한의의 교차 부분을 나타내는 새 사용 권한. 이 새로운 사용 권한은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 교집합이 비어 있는 경우."
  overload: System.Security.Permissions.StorePermission.Intersect*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>target</code>s 되지 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 아니고 현재 사용 권한과 동일한 형식이 있습니다."
  platform:
  - net462
- uid: System.Security.Permissions.StorePermission.IsSubsetOf(System.Security.IPermission)
  id: IsSubsetOf(System.Security.IPermission)
  parent: System.Security.Permissions.StorePermission
  langs:
  - csharp
  name: IsSubsetOf(IPermission)
  nameWithType: StorePermission.IsSubsetOf(IPermission)
  fullName: System.Security.Permissions.StorePermission.IsSubsetOf(IPermission)
  type: Method
  assemblies:
  - System
  namespace: System.Security.Permissions
  summary: "현재 사용 권한이 지정된 된 사용 권한의 하위 집합 인지 확인 합니다."
  remarks: "현재 권한은 현재 사용 권한이 지정된 된 사용 하 여 완전히 포함 된 작업의 집합을 지정 하는 경우 지정된 된 사용 권한의 하위 집합입니다. 예를 들어 c:\\example.txt 있는 사용 권한을의 하위 집합인 c: \\에 대 한 액세스를 나타내는 사용 권한의\\\\합니다. 이 메서드가 반환 하는 경우 `true`, 현재 사용 권한과 동일한 액세스 보호 된 리소스에 지정된 된 사용은 보다를 나타냅니다."
  syntax:
    content: public override bool IsSubsetOf (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "하위 집합 관계를 테스트 하는 사용 권한입니다. 이 사용 권한은 현재 권한과 동일한 형식 이어야 합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>현재 사용 권한이 지정 된 사용 권한의 하위 집합이 면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Security.Permissions.StorePermission.IsSubsetOf*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>target</code>가 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 아니고 현재 사용 권한과 동일한 형식이 있습니다."
  platform:
  - net462
- uid: System.Security.Permissions.StorePermission.IsUnrestricted
  id: IsUnrestricted
  parent: System.Security.Permissions.StorePermission
  langs:
  - csharp
  name: IsUnrestricted()
  nameWithType: StorePermission.IsUnrestricted()
  fullName: System.Security.Permissions.StorePermission.IsUnrestricted()
  type: Method
  assemblies:
  - System
  namespace: System.Security.Permissions
  summary: "현재 사용 권한이 제한 되지 않았는지 여부를 나타내는 값을 반환 합니다."
  remarks: "무제한 권한 권한으로 보호 하는 모든 리소스에 대 한 액세스를 나타냅니다."
  syntax:
    content: public bool IsUnrestricted ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>현재 사용 권한이 제한 된; 없는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Security.Permissions.StorePermission.IsUnrestricted*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.StorePermission.ToXml
  id: ToXml
  parent: System.Security.Permissions.StorePermission
  langs:
  - csharp
  name: ToXml()
  nameWithType: StorePermission.ToXml()
  fullName: System.Security.Permissions.StorePermission.ToXml()
  type: Method
  assemblies:
  - System
  namespace: System.Security.Permissions
  summary: "사용 권한 및 현재 상태의 XML 인코딩을 만듭니다."
  remarks: "<xref:System.Security.Permissions.StorePermission.FromXml%2A> <xref:System.Security.SecurityElement>.</xref:System.Security.SecurityElement> 상태 정보를 복원 하는 메서드</xref:System.Security.Permissions.StorePermission.FromXml%2A> 를 사용 하 여"
  syntax:
    content: public override System.Security.SecurityElement ToXml ();
    parameters: []
    return:
      type: System.Security.SecurityElement
      description: "A <xref href=&quot;System.Security.SecurityElement&quot;> </xref> 모든 상태 정보를 포함 하는 권한의 XML 인코딩을 포함 하는 합니다."
  overload: System.Security.Permissions.StorePermission.ToXml*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.StorePermission.Union(System.Security.IPermission)
  id: Union(System.Security.IPermission)
  parent: System.Security.Permissions.StorePermission
  langs:
  - csharp
  name: Union(IPermission)
  nameWithType: StorePermission.Union(IPermission)
  fullName: System.Security.Permissions.StorePermission.Union(IPermission)
  type: Method
  assemblies:
  - System
  namespace: System.Security.Permissions
  summary: "현재 사용 권한 및 지정된 된 사용 권한을 합한 사용 권한을 만듭니다."
  remarks: "Union에 대 한 호출의 결과는 현재 사용 권한 및 지정한 사용 권한의 둘 다로 표현 하는 모든 작업을 나타내는 권한입니다. 사용 권한 중 하나를 전달 하는 모든 요청의 합집합을 통과 합니다."
  syntax:
    content: public override System.Security.IPermission Union (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "현재 사용 권한과 결합할 사용 권한 현재 사용 권한과 동일한 형식 이어야 합니다."
    return:
      type: System.Security.IPermission
      description: "현재 사용 권한 및 지정한 사용 권한의 합집합을 나타내는 새 사용 권한."
  overload: System.Security.Permissions.StorePermission.Union*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>target</code>가 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 아니고 현재 사용 권한과 동일한 형식이 있습니다."
  platform:
  - net462
references:
- uid: System.Security.CodeAccessPermission
  isExternal: false
  name: System.Security.CodeAccessPermission
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Permissions.StorePermission.#ctor(System.Security.Permissions.PermissionState)
  parent: System.Security.Permissions.StorePermission
  isExternal: false
  name: StorePermission(PermissionState)
  nameWithType: StorePermission.StorePermission(PermissionState)
  fullName: System.Security.Permissions.StorePermission.StorePermission(PermissionState)
- uid: System.Security.Permissions.PermissionState
  parent: System.Security.Permissions
  isExternal: false
  name: PermissionState
  nameWithType: PermissionState
  fullName: System.Security.Permissions.PermissionState
- uid: System.Security.Permissions.StorePermission.#ctor(System.Security.Permissions.StorePermissionFlags)
  parent: System.Security.Permissions.StorePermission
  isExternal: false
  name: StorePermission(StorePermissionFlags)
  nameWithType: StorePermission.StorePermission(StorePermissionFlags)
  fullName: System.Security.Permissions.StorePermission.StorePermission(StorePermissionFlags)
- uid: System.Security.Permissions.StorePermissionFlags
  parent: System.Security.Permissions
  isExternal: false
  name: StorePermissionFlags
  nameWithType: StorePermissionFlags
  fullName: System.Security.Permissions.StorePermissionFlags
- uid: System.Security.Permissions.StorePermission.Copy
  parent: System.Security.Permissions.StorePermission
  isExternal: false
  name: Copy()
  nameWithType: StorePermission.Copy()
  fullName: System.Security.Permissions.StorePermission.Copy()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Security.Permissions.StorePermission.Flags
  parent: System.Security.Permissions.StorePermission
  isExternal: false
  name: Flags
  nameWithType: StorePermission.Flags
  fullName: System.Security.Permissions.StorePermission.Flags
- uid: System.Security.Permissions.StorePermission.FromXml(System.Security.SecurityElement)
  parent: System.Security.Permissions.StorePermission
  isExternal: false
  name: FromXml(SecurityElement)
  nameWithType: StorePermission.FromXml(SecurityElement)
  fullName: System.Security.Permissions.StorePermission.FromXml(SecurityElement)
- uid: System.Security.SecurityElement
  parent: System.Security
  isExternal: false
  name: SecurityElement
  nameWithType: SecurityElement
  fullName: System.Security.SecurityElement
- uid: System.Security.Permissions.StorePermission.Intersect(System.Security.IPermission)
  parent: System.Security.Permissions.StorePermission
  isExternal: false
  name: Intersect(IPermission)
  nameWithType: StorePermission.Intersect(IPermission)
  fullName: System.Security.Permissions.StorePermission.Intersect(IPermission)
- uid: System.Security.Permissions.StorePermission.IsSubsetOf(System.Security.IPermission)
  parent: System.Security.Permissions.StorePermission
  isExternal: false
  name: IsSubsetOf(IPermission)
  nameWithType: StorePermission.IsSubsetOf(IPermission)
  fullName: System.Security.Permissions.StorePermission.IsSubsetOf(IPermission)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Permissions.StorePermission.IsUnrestricted
  parent: System.Security.Permissions.StorePermission
  isExternal: false
  name: IsUnrestricted()
  nameWithType: StorePermission.IsUnrestricted()
  fullName: System.Security.Permissions.StorePermission.IsUnrestricted()
- uid: System.Security.Permissions.StorePermission.ToXml
  parent: System.Security.Permissions.StorePermission
  isExternal: false
  name: ToXml()
  nameWithType: StorePermission.ToXml()
  fullName: System.Security.Permissions.StorePermission.ToXml()
- uid: System.Security.Permissions.StorePermission.Union(System.Security.IPermission)
  parent: System.Security.Permissions.StorePermission
  isExternal: false
  name: Union(IPermission)
  nameWithType: StorePermission.Union(IPermission)
  fullName: System.Security.Permissions.StorePermission.Union(IPermission)
- uid: System.Security.Permissions.StorePermission.#ctor*
  parent: System.Security.Permissions.StorePermission
  isExternal: false
  name: StorePermission
  nameWithType: StorePermission.StorePermission
- uid: System.Security.Permissions.StorePermission.Copy*
  parent: System.Security.Permissions.StorePermission
  isExternal: false
  name: Copy
  nameWithType: StorePermission.Copy
- uid: System.Security.Permissions.StorePermission.Flags*
  parent: System.Security.Permissions.StorePermission
  isExternal: false
  name: Flags
  nameWithType: StorePermission.Flags
- uid: System.Security.Permissions.StorePermission.FromXml*
  parent: System.Security.Permissions.StorePermission
  isExternal: false
  name: FromXml
  nameWithType: StorePermission.FromXml
- uid: System.Security.Permissions.StorePermission.Intersect*
  parent: System.Security.Permissions.StorePermission
  isExternal: false
  name: Intersect
  nameWithType: StorePermission.Intersect
- uid: System.Security.Permissions.StorePermission.IsSubsetOf*
  parent: System.Security.Permissions.StorePermission
  isExternal: false
  name: IsSubsetOf
  nameWithType: StorePermission.IsSubsetOf
- uid: System.Security.Permissions.StorePermission.IsUnrestricted*
  parent: System.Security.Permissions.StorePermission
  isExternal: false
  name: IsUnrestricted
  nameWithType: StorePermission.IsUnrestricted
- uid: System.Security.Permissions.StorePermission.ToXml*
  parent: System.Security.Permissions.StorePermission
  isExternal: false
  name: ToXml
  nameWithType: StorePermission.ToXml
- uid: System.Security.Permissions.StorePermission.Union*
  parent: System.Security.Permissions.StorePermission
  isExternal: false
  name: Union
  nameWithType: StorePermission.Union
