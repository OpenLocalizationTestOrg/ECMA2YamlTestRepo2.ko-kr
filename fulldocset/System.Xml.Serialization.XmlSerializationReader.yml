### YamlMime:ManagedReference
items:
- uid: System.Xml.Serialization.XmlSerializationReader
  id: XmlSerializationReader
  children:
  - System.Xml.Serialization.XmlSerializationReader.#ctor
  - System.Xml.Serialization.XmlSerializationReader.AddFixup(System.Xml.Serialization.XmlSerializationReader.CollectionFixup)
  - System.Xml.Serialization.XmlSerializationReader.AddFixup(System.Xml.Serialization.XmlSerializationReader.Fixup)
  - System.Xml.Serialization.XmlSerializationReader.AddReadCallback(System.String,System.String,System.Type,System.Xml.Serialization.XmlSerializationReadCallback)
  - System.Xml.Serialization.XmlSerializationReader.AddTarget(System.String,System.Object)
  - System.Xml.Serialization.XmlSerializationReader.CheckReaderCount(System.Int32@,System.Int32@)
  - System.Xml.Serialization.XmlSerializationReader.CollapseWhitespace(System.String)
  - System.Xml.Serialization.XmlSerializationReader.CreateAbstractTypeException(System.String,System.String)
  - System.Xml.Serialization.XmlSerializationReader.CreateBadDerivationException(System.String,System.String,System.String,System.String,System.String,System.String)
  - System.Xml.Serialization.XmlSerializationReader.CreateCtorHasSecurityException(System.String)
  - System.Xml.Serialization.XmlSerializationReader.CreateInaccessibleConstructorException(System.String)
  - System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException(System.Type,System.Object)
  - System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException(System.Type,System.Object,System.String)
  - System.Xml.Serialization.XmlSerializationReader.CreateMissingIXmlSerializableType(System.String,System.String,System.String)
  - System.Xml.Serialization.XmlSerializationReader.CreateReadOnlyCollectionException(System.String)
  - System.Xml.Serialization.XmlSerializationReader.CreateUnknownConstantException(System.String,System.Type)
  - System.Xml.Serialization.XmlSerializationReader.CreateUnknownNodeException
  - System.Xml.Serialization.XmlSerializationReader.CreateUnknownTypeException(System.Xml.XmlQualifiedName)
  - System.Xml.Serialization.XmlSerializationReader.DecodeName
  - System.Xml.Serialization.XmlSerializationReader.Document
  - System.Xml.Serialization.XmlSerializationReader.EnsureArrayIndex(System.Array,System.Int32,System.Type)
  - System.Xml.Serialization.XmlSerializationReader.FixupArrayRefs(System.Object)
  - System.Xml.Serialization.XmlSerializationReader.GetArrayLength(System.String,System.String)
  - System.Xml.Serialization.XmlSerializationReader.GetNullAttr
  - System.Xml.Serialization.XmlSerializationReader.GetTarget(System.String)
  - System.Xml.Serialization.XmlSerializationReader.GetXsiType
  - System.Xml.Serialization.XmlSerializationReader.InitCallbacks
  - System.Xml.Serialization.XmlSerializationReader.InitIDs
  - System.Xml.Serialization.XmlSerializationReader.IsReturnValue
  - System.Xml.Serialization.XmlSerializationReader.IsXmlnsAttribute(System.String)
  - System.Xml.Serialization.XmlSerializationReader.ParseWsdlArrayType(System.Xml.XmlAttribute)
  - System.Xml.Serialization.XmlSerializationReader.ReadElementQualifiedName
  - System.Xml.Serialization.XmlSerializationReader.ReadEndElement
  - System.Xml.Serialization.XmlSerializationReader.Reader
  - System.Xml.Serialization.XmlSerializationReader.ReaderCount
  - System.Xml.Serialization.XmlSerializationReader.ReadNull
  - System.Xml.Serialization.XmlSerializationReader.ReadNullableQualifiedName
  - System.Xml.Serialization.XmlSerializationReader.ReadNullableString
  - System.Xml.Serialization.XmlSerializationReader.ReadReference(System.String@)
  - System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement
  - System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement(System.String,System.String)
  - System.Xml.Serialization.XmlSerializationReader.ReadReferencedElements
  - System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String@)
  - System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String,System.String,System.String@)
  - System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String,System.String,System.Boolean,System.String@)
  - System.Xml.Serialization.XmlSerializationReader.ReadSerializable(System.Xml.Serialization.IXmlSerializable)
  - System.Xml.Serialization.XmlSerializationReader.ReadSerializable(System.Xml.Serialization.IXmlSerializable,System.Boolean)
  - System.Xml.Serialization.XmlSerializationReader.ReadString(System.String)
  - System.Xml.Serialization.XmlSerializationReader.ReadString(System.String,System.Boolean)
  - System.Xml.Serialization.XmlSerializationReader.ReadTypedNull(System.Xml.XmlQualifiedName)
  - System.Xml.Serialization.XmlSerializationReader.ReadTypedPrimitive(System.Xml.XmlQualifiedName)
  - System.Xml.Serialization.XmlSerializationReader.ReadXmlDocument(System.Boolean)
  - System.Xml.Serialization.XmlSerializationReader.ReadXmlNode(System.Boolean)
  - System.Xml.Serialization.XmlSerializationReader.Referenced(System.Object)
  - System.Xml.Serialization.XmlSerializationReader.ResolveDynamicAssembly(System.String)
  - System.Xml.Serialization.XmlSerializationReader.ShrinkArray(System.Array,System.Int32,System.Type,System.Boolean)
  - System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64(System.Boolean)
  - System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64(System.String)
  - System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex(System.Boolean)
  - System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex(System.String)
  - System.Xml.Serialization.XmlSerializationReader.ToChar(System.String)
  - System.Xml.Serialization.XmlSerializationReader.ToDate(System.String)
  - System.Xml.Serialization.XmlSerializationReader.ToDateTime(System.String)
  - System.Xml.Serialization.XmlSerializationReader.ToEnum(System.String,System.Collections.Hashtable,System.String)
  - System.Xml.Serialization.XmlSerializationReader.ToTime(System.String)
  - System.Xml.Serialization.XmlSerializationReader.ToXmlName(System.String)
  - System.Xml.Serialization.XmlSerializationReader.ToXmlNCName(System.String)
  - System.Xml.Serialization.XmlSerializationReader.ToXmlNmToken(System.String)
  - System.Xml.Serialization.XmlSerializationReader.ToXmlNmTokens(System.String)
  - System.Xml.Serialization.XmlSerializationReader.ToXmlQualifiedName(System.String)
  - System.Xml.Serialization.XmlSerializationReader.UnknownAttribute(System.Object,System.Xml.XmlAttribute)
  - System.Xml.Serialization.XmlSerializationReader.UnknownAttribute(System.Object,System.Xml.XmlAttribute,System.String)
  - System.Xml.Serialization.XmlSerializationReader.UnknownElement(System.Object,System.Xml.XmlElement)
  - System.Xml.Serialization.XmlSerializationReader.UnknownElement(System.Object,System.Xml.XmlElement,System.String)
  - System.Xml.Serialization.XmlSerializationReader.UnknownNode(System.Object)
  - System.Xml.Serialization.XmlSerializationReader.UnknownNode(System.Object,System.String)
  - System.Xml.Serialization.XmlSerializationReader.UnreferencedObject(System.String,System.Object)
  langs:
  - csharp
  name: XmlSerializationReader
  nameWithType: XmlSerializationReader
  fullName: System.Xml.Serialization.XmlSerializationReader
  type: Class
  summary: "<xref:System.Xml.Serialization.XmlSerializer>클래스</xref:System.Xml.Serialization.XmlSerializer> 에서 컨트롤 deserialization"
  remarks: "초기화 하는 동안.NET Framework XML serialization 인프라는 동적으로 생성 하 고 추상 XmlSerializationReader 클래스에서 파생 된 deserialization에 대 한 임시 클래스를 컴파일합니다. XML 문서를 역직렬화에 대 한.NET Framework 내에서 XmlSerializationReader도 구현 됩니다 <xref:System.Web.Services.Discovery.DiscoveryDocument>및 <xref:System.Web.Services.Description.ServiceDescription>개체.</xref:System.Web.Services.Description.ServiceDescription> </xref:System.Web.Services.Discovery.DiscoveryDocument>       XmlSerializationReader에서 클래스를 파생 하지 마십시오. 대신, 호출 중 하나는 <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A>메서드.</xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A>"
  syntax:
    content: 'public abstract class XmlSerializationReader : System.Xml.Serialization.XmlSerializationGeneratedCode'
  inheritance:
  - System.Object
  - System.Xml.Serialization.XmlSerializationGeneratedCode
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.#ctor
  id: '#ctor'
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: XmlSerializationReader()
  nameWithType: XmlSerializationReader.XmlSerializationReader()
  fullName: System.Xml.Serialization.XmlSerializationReader.XmlSerializationReader()
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Xml.Serialization.XmlSerializationReader&quot;> </xref> 클래스입니다."
  syntax:
    content: protected XmlSerializationReader ();
    parameters: []
  overload: System.Xml.Serialization.XmlSerializationReader.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.AddFixup(System.Xml.Serialization.XmlSerializationReader.CollectionFixup)
  id: AddFixup(System.Xml.Serialization.XmlSerializationReader.CollectionFixup)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: AddFixup(XmlSerializationReader+CollectionFixup)
  nameWithType: XmlSerializationReader.AddFixup(XmlSerializationReader+CollectionFixup)
  fullName: System.Xml.Serialization.XmlSerializationReader.AddFixup(XmlSerializationReader+CollectionFixup)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  syntax:
    content: protected void AddFixup (System.Xml.Serialization.XmlSerializationReader.CollectionFixup fixup);
    parameters:
    - id: fixup
      type: System.Xml.Serialization.XmlSerializationReader.CollectionFixup
      description: "추가할 수 있습니다."
  overload: System.Xml.Serialization.XmlSerializationReader.AddFixup*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.AddFixup(System.Xml.Serialization.XmlSerializationReader.Fixup)
  id: AddFixup(System.Xml.Serialization.XmlSerializationReader.Fixup)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: AddFixup(XmlSerializationReader+Fixup)
  nameWithType: XmlSerializationReader.AddFixup(XmlSerializationReader+Fixup)
  fullName: System.Xml.Serialization.XmlSerializationReader.AddFixup(XmlSerializationReader+Fixup)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  syntax:
    content: protected void AddFixup (System.Xml.Serialization.XmlSerializationReader.Fixup fixup);
    parameters:
    - id: fixup
      type: System.Xml.Serialization.XmlSerializationReader.Fixup
      description: "추가할 수 있습니다."
  overload: System.Xml.Serialization.XmlSerializationReader.AddFixup*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.AddReadCallback(System.String,System.String,System.Type,System.Xml.Serialization.XmlSerializationReadCallback)
  id: AddReadCallback(System.String,System.String,System.Type,System.Xml.Serialization.XmlSerializationReadCallback)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: AddReadCallback(String,String,Type,XmlSerializationReadCallback)
  nameWithType: XmlSerializationReader.AddReadCallback(String,String,Type,XmlSerializationReadCallback)
  fullName: System.Xml.Serialization.XmlSerializationReader.AddReadCallback(String,String,Type,XmlSerializationReadCallback)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "구현 저장는 <xref href=&quot;System.Xml.Serialization.XmlSerializationReadCallback&quot;> </xref> 대리자와 나중에 호출에 대 한 입력된 데이터입니다."
  remarks: "보호 된 멤버의 <xref:System.Xml.Serialization.XmlSerializationReader>.NET Framework XML serialization 인프라에서 내부적으로 사용 되는 파생 된 클래스에 의해서만 사용 됩니다.</xref:System.Xml.Serialization.XmlSerializationReader>       초기화 하는 동안.NET Framework XML serialization 인프라 동적으로 생성 하 고 <xref:System.Xml.Serialization.XmlSerializationReader>.</xref:System.Xml.Serialization.XmlSerializationReader> 에서 파생 되는 deserialization에 대 한 임시 클래스를 컴파일합니다. 이 과정에서.NET Framework를 구현 하는 읽기 메서드를 생성 된 <xref:System.Xml.Serialization.XmlSerializationReadCallback>위임.</xref:System.Xml.Serialization.XmlSerializationReadCallback> 따라서 특정.NET Framework 형식 및 SOAP 인코딩된 XML을 통해 직렬화 되 고은 루트 요소가 아닌는 XML 데이터 형식 간의 매핑을 수행 합니다. 필요에 따라 다음으로, 역직렬화 하는 동안 읽기 메서드가 호출 됩니다.       <xref:System.Xml.Serialization.XmlSerializationReadCallback>클래스</xref:System.Xml.Serialization.XmlSerializationReadCallback> 의 인스턴스를 직접 만들지 마십시오"
  syntax:
    content: protected void AddReadCallback (string name, string ns, Type type, System.Xml.Serialization.XmlSerializationReadCallback read);
    parameters:
    - id: name
      type: System.String
      description: "역직렬화 하는.NET Framework 형식의 이름입니다."
    - id: ns
      type: System.String
      description: "역직렬화 하는.NET Framework 형식의 네임 스페이스입니다."
    - id: type
      type: System.Type
      description: "<xref:System.Type>를 deserialize 할 수 있습니다.</xref:System.Type>"
    - id: read
      type: System.Xml.Serialization.XmlSerializationReadCallback
      description: "<xref href=&quot;System.Xml.Serialization.XmlSerializationReadCallback&quot;> </xref> 위임 합니다."
  overload: System.Xml.Serialization.XmlSerializationReader.AddReadCallback*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.AddTarget(System.String,System.Object)
  id: AddTarget(System.String,System.Object)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: AddTarget(String,Object)
  nameWithType: XmlSerializationReader.AddTarget(String,Object)
  fullName: System.Xml.Serialization.XmlSerializationReader.AddTarget(String,Object)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "SOAP 인코딩된 역직렬화 하는 개체를 저장 <xref uid=&quot;langword_csharp_multiRef&quot; name=&quot;multiRef&quot; href=&quot;&quot;> </xref> 통해 나중에 액세스에 대 한 요소는 <xref:System.Xml.Serialization.XmlSerializationReader.GetTarget*>메서드.</xref:System.Xml.Serialization.XmlSerializationReader.GetTarget*>"
  remarks: "보호 된 멤버의 <xref:System.Xml.Serialization.XmlSerializationReader>.NET Framework XML serialization 인프라에서 내부적으로 사용 되는 파생 된 클래스에 의해서만 사용 됩니다.</xref:System.Xml.Serialization.XmlSerializationReader>       SOAP 인코딩을 사용 하면 SOAP 메시지 내에서 한 번 표시 되도록 고유 XML 요소는 `multiRef` 으로 식별 되는 요소는 `id` 특성입니다. `id` 값에서 여러 번 참조할 수 있습니다 `ref` 특성 (또는 `href` SOAP 1.1의 특성) 대체 요소에서 합니다.       SOAP 인코딩은 SOAP 1.1 사양 단원 5에 설명 되어 있습니다."
  syntax:
    content: protected void AddTarget (string id, object o);
    parameters:
    - id: id
      type: System.String
      description: "값은 <xref uid=&quot;langword_csharp_id&quot; name=&quot;id&quot; href=&quot;&quot;> </xref> 특성의는 <xref uid=&quot;langword_csharp_multiRef&quot; name=&quot;multiRef&quot; href=&quot;&quot;> </xref> 요소를 식별 하는 요소입니다."
    - id: o
      type: System.Object
      description: "이 개체에 deserialize 되는 XML 요소에서입니다."
  overload: System.Xml.Serialization.XmlSerializationReader.AddTarget*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.CheckReaderCount(System.Int32@,System.Int32@)
  id: CheckReaderCount(System.Int32@,System.Int32@)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: CheckReaderCount(Int32,Int32)
  nameWithType: XmlSerializationReader.CheckReaderCount(Int32,Int32)
  fullName: System.Xml.Serialization.XmlSerializationReader.CheckReaderCount(Int32,Int32)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Deserializer 고급 권한이 있는지 여부를 확인 합니다."
  remarks: "The method is used by generated classes and should not be directly invoked.  \n  \n The CheckReaderCount method is used when the `checkDeserializerAdvances` attribute of the `<xmlSerializer>` configuration element is set to `true`. For more information, see [\\&lt;xmlSerializer\\&gt; Element](../Topic/%3CxmlSerializer%3E%20Element.md)."
  syntax:
    content: protected void CheckReaderCount (ref int whileIterations, ref int readerCount);
    parameters:
    - id: whileIterations
      type: System.Int32
      description: "현재 <xref uid=&quot;langword_csharp_count&quot; name=&quot;count&quot; href=&quot;&quot;> </xref> 잠시 후에 루프입니다."
    - id: readerCount
      type: System.Int32
      description: "현재 <xref:System.Xml.Serialization.XmlSerializationReader.ReaderCount*>입니다.</xref:System.Xml.Serialization.XmlSerializationReader.ReaderCount*>"
  overload: System.Xml.Serialization.XmlSerializationReader.CheckReaderCount*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.Xml.Serialization.XmlSerializationReader.ReaderCount*>진행 되지 않았으면.</xref:System.Xml.Serialization.XmlSerializationReader.ReaderCount*>"
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.CollapseWhitespace(System.String)
  id: CollapseWhitespace(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: CollapseWhitespace(String)
  nameWithType: XmlSerializationReader.CollapseWhitespace(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.CollapseWhitespace(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "모든 공백 문자를 지정된 된 문자열의 시작과 끝에서 제거합니다."
  remarks: "보호 된 멤버의 <xref:System.Xml.Serialization.XmlSerializationReader>.NET Framework XML serialization 인프라에서 내부적으로 사용 되는 파생 된 클래스에 의해서만 사용 됩니다.</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected string CollapseWhitespace (string value);
    parameters:
    - id: value
      type: System.String
      description: "이 문자열에 공백이 트리밍될입니다."
    return:
      type: System.String
      description: "잘라낸된 문자열입니다."
  overload: System.Xml.Serialization.XmlSerializationReader.CollapseWhitespace*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.CreateAbstractTypeException(System.String,System.String)
  id: CreateAbstractTypeException(System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: CreateAbstractTypeException(String,String)
  nameWithType: XmlSerializationReader.CreateAbstractTypeException(String,String)
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateAbstractTypeException(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "만듭니다는 <xref:System.InvalidOperationException>역직렬화 중인 개체 추상 해야 함을 나타내는.</xref:System.InvalidOperationException>"
  remarks: "보호 된 멤버의 <xref:System.Xml.Serialization.XmlSerializationReader>만 위한 사용 하 여.NET Framework XML serialization 인프라에서 내부적으로 사용 되는 파생된 클래스에서.</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected Exception CreateAbstractTypeException (string name, string ns);
    parameters:
    - id: name
      type: System.String
      description: "추상 형식의 이름입니다."
    - id: ns
      type: System.String
      description: "추상 형식의.NET Framework 네임 스페이스입니다."
    return:
      type: System.Exception
      description: "<xref:System.InvalidOperationException>예외.</xref:System.InvalidOperationException>"
  overload: System.Xml.Serialization.XmlSerializationReader.CreateAbstractTypeException*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.CreateBadDerivationException(System.String,System.String,System.String,System.String,System.String,System.String)
  id: CreateBadDerivationException(System.String,System.String,System.String,System.String,System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: CreateBadDerivationException(String,String,String,String,String,String)
  nameWithType: XmlSerializationReader.CreateBadDerivationException(String,String,String,String,String,String)
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateBadDerivationException(String,String,String,String,String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "현재 위치에서 해당 XML 표현에서 개체를 채우는 <xref:System.Xml.XmlReader>, 내부 요소를 읽는 하는 옵션을 사용 합니다.</xref:System.Xml.XmlReader>"
  remarks: "보호 된 멤버의 <xref:System.Xml.Serialization.XmlSerializationReader>.NET Framework XML serialization 인프라에서 내부적으로 사용 되는 파생 된 클래스에 의해서만 사용 됩니다.</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected Exception CreateBadDerivationException (string xsdDerived, string nsDerived, string xsdBase, string nsBase, string clrDerived, string clrBase);
    parameters:
    - id: xsdDerived
      type: System.String
      description: "파생된 된 XML 스키마 데이터 형식의의 로컬 이름입니다."
    - id: nsDerived
      type: System.String
      description: "파생 되는 XML 스키마 데이터 형식의 네임 스페이스입니다."
    - id: xsdBase
      type: System.String
      description: "로컬 이름 기본 XML 스키마 데이터 형식입니다."
    - id: nsBase
      type: System.String
      description: "네임 스페이스는 기본 XML 스키마 데이터 형식입니다."
    - id: clrDerived
      type: System.String
      description: "파생 된.NET Framework 형식의 네임 스페이스입니다."
    - id: clrBase
      type: System.String
      description: "기본.NET Framework 형식의 이름입니다."
    return:
      type: System.Exception
      description: "<xref:System.InvalidOperationException>예외.</xref:System.InvalidOperationException>"
  overload: System.Xml.Serialization.XmlSerializationReader.CreateBadDerivationException*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.CreateCtorHasSecurityException(System.String)
  id: CreateCtorHasSecurityException(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: CreateCtorHasSecurityException(String)
  nameWithType: XmlSerializationReader.CreateCtorHasSecurityException(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateCtorHasSecurityException(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "만듭니다는 <xref:System.InvalidOperationException>나타내는 역직렬화 되는 개체 생성자는 보안 예외를 throw 하기 때문에 인스턴스화할 수 없습니다.</xref:System.InvalidOperationException>"
  remarks: "보호 된 멤버의 <xref:System.Xml.Serialization.XmlSerializationReader>.NET Framework XML serialization 인프라에서 내부적으로 사용 되는 파생 된 클래스에 의해서만 사용 됩니다.</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected Exception CreateCtorHasSecurityException (string typeName);
    parameters:
    - id: typeName
      type: System.String
      description: "형식의 이름입니다."
    return:
      type: System.Exception
      description: "<xref:System.InvalidOperationException>예외.</xref:System.InvalidOperationException>"
  overload: System.Xml.Serialization.XmlSerializationReader.CreateCtorHasSecurityException*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.CreateInaccessibleConstructorException(System.String)
  id: CreateInaccessibleConstructorException(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: CreateInaccessibleConstructorException(String)
  nameWithType: XmlSerializationReader.CreateInaccessibleConstructorException(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateInaccessibleConstructorException(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "만듭니다는 <xref:System.InvalidOperationException>나타내는 역직렬화 되는 개체 생성자가 없습니다 있기 때문에 인스턴스화할 수 없습니다.</xref:System.InvalidOperationException>"
  remarks: "보호 된 멤버의 <xref:System.Xml.Serialization.XmlSerializationReader>.NET Framework XML serialization 인프라에서 내부적으로 사용 되는 파생 된 클래스에 의해서만 사용 됩니다.</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected Exception CreateInaccessibleConstructorException (string typeName);
    parameters:
    - id: typeName
      type: System.String
      description: "형식의 이름입니다."
    return:
      type: System.Exception
      description: "<xref:System.InvalidOperationException>예외.</xref:System.InvalidOperationException>"
  overload: System.Xml.Serialization.XmlSerializationReader.CreateInaccessibleConstructorException*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException(System.Type,System.Object)
  id: CreateInvalidCastException(System.Type,System.Object)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: CreateInvalidCastException(Type,Object)
  nameWithType: XmlSerializationReader.CreateInvalidCastException(Type,Object)
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException(Type,Object)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "만듭니다는 <xref:System.InvalidCastException>명시적 참조 변환을 실패 했음을 나타내는.</xref:System.InvalidCastException>"
  remarks: "보호 된 멤버의 <xref:System.Xml.Serialization.XmlSerializationReader>.NET Framework XML serialization 인프라에서 내부적으로 사용 되는 파생 된 클래스에 의해서만 사용 됩니다.</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected Exception CreateInvalidCastException (Type type, object value);
    parameters:
    - id: type
      type: System.Type
      description: "<xref:System.Type>개체도 캐스팅 될 수 없습니다.</xref:System.Type> 이 형식은 예외 메시지에 포함 됩니다."
    - id: value
      type: System.Object
      description: "캐스팅할 수 없는 개체입니다. 이 개체는 예외 메시지에 포함 됩니다."
    return:
      type: System.Exception
      description: "<xref:System.InvalidCastException>예외.</xref:System.InvalidCastException>"
  overload: System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException(System.Type,System.Object,System.String)
  id: CreateInvalidCastException(System.Type,System.Object,System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: CreateInvalidCastException(Type,Object,String)
  nameWithType: XmlSerializationReader.CreateInvalidCastException(Type,Object,String)
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException(Type,Object,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "만듭니다는 <xref:System.InvalidCastException>명시적 참조 변환을 실패 했음을 나타내는.</xref:System.InvalidCastException>"
  remarks: "보호 된 멤버의 <xref:System.Xml.Serialization.XmlSerializationReader>.NET Framework XML serialization 인프라에서 내부적으로 사용 되는 파생 된 클래스에 의해서만 사용 됩니다.</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected Exception CreateInvalidCastException (Type type, object value, string id);
    parameters:
    - id: type
      type: System.Type
      description: "<xref:System.Type>개체도 캐스팅 될 수 없습니다.</xref:System.Type> 이 형식은 예외 메시지에 포함 됩니다."
    - id: value
      type: System.Object
      description: "캐스팅할 수 없는 개체입니다. 이 개체는 예외 메시지에 포함 됩니다."
    - id: id
      type: System.String
      description: "문자열 식별자입니다."
    return:
      type: System.Exception
      description: "<xref:System.InvalidCastException>예외.</xref:System.InvalidCastException>"
  overload: System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.CreateMissingIXmlSerializableType(System.String,System.String,System.String)
  id: CreateMissingIXmlSerializableType(System.String,System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: CreateMissingIXmlSerializableType(String,String,String)
  nameWithType: XmlSerializationReader.CreateMissingIXmlSerializableType(String,String,String)
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateMissingIXmlSerializableType(String,String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "만듭니다는 <xref:System.InvalidOperationException>나타내는 XML 스키마 데이터 형식에 매핑되는 파생된 형식을 찾을 수 없습니다.</xref:System.InvalidOperationException>"
  remarks: "보호 된 멤버의 <xref:System.Xml.Serialization.XmlSerializationReader>.NET Framework XML serialization 인프라에서 내부적으로 사용 되는 파생 된 클래스에 의해서만 사용 됩니다.</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected Exception CreateMissingIXmlSerializableType (string name, string ns, string clrType);
    parameters:
    - id: name
      type: System.String
      description: "사용할 수 없는 파생된 형식에 매핑되는 XML 스키마 데이터 형식의 로컬 이름입니다."
    - id: ns
      type: System.String
      description: "사용할 수 없는 파생된 형식에 매핑되는 XML 스키마 데이터 형식의 네임 스페이스입니다."
    - id: clrType
      type: System.String
      description: "전체 이름을 파생된 형식을 찾을 수 없습니다는.NET Framework 기본 형식입니다."
    return:
      type: System.Exception
      description: "<xref:System.InvalidOperationException>예외.</xref:System.InvalidOperationException>"
  overload: System.Xml.Serialization.XmlSerializationReader.CreateMissingIXmlSerializableType*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.CreateReadOnlyCollectionException(System.String)
  id: CreateReadOnlyCollectionException(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: CreateReadOnlyCollectionException(String)
  nameWithType: XmlSerializationReader.CreateReadOnlyCollectionException(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateReadOnlyCollectionException(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "<xref:System.InvalidOperationException>SOAP 인코딩된 컬렉션 형식을 수정할 수 없습니다 및 해당 값에 채울 수 없습니다 나타내는</xref:System.InvalidOperationException> 만듭니다."
  remarks: "보호 된 멤버의 <xref:System.Xml.Serialization.XmlSerializationReader>.NET Framework XML serialization 인프라에서 내부적으로 사용 되는 파생 된 클래스에 의해서만 사용 됩니다.</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected Exception CreateReadOnlyCollectionException (string name);
    parameters:
    - id: name
      type: System.String
      description: "매핑을.NET Framework 유형의 정규화 된 이름입니다."
    return:
      type: System.Exception
      description: "<xref:System.InvalidOperationException>예외.</xref:System.InvalidOperationException>"
  overload: System.Xml.Serialization.XmlSerializationReader.CreateReadOnlyCollectionException*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.CreateUnknownConstantException(System.String,System.Type)
  id: CreateUnknownConstantException(System.String,System.Type)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: CreateUnknownConstantException(String,Type)
  nameWithType: XmlSerializationReader.CreateUnknownConstantException(String,Type)
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateUnknownConstantException(String,Type)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "만듭니다는 <xref:System.InvalidOperationException>나타내는 열거 값이 올바르지 않습니다.</xref:System.InvalidOperationException>"
  remarks: "보호 된 멤버의 <xref:System.Xml.Serialization.XmlSerializationReader>.NET Framework XML serialization 인프라에서 내부적으로 사용 되는 파생 된 클래스에 의해서만 사용 됩니다.</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected Exception CreateUnknownConstantException (string value, Type enumType);
    parameters:
    - id: value
      type: System.String
      description: "유효 하지 않은 열거형 값입니다."
    - id: enumType
      type: System.Type
      description: "열거형 형식입니다."
    return:
      type: System.Exception
      description: "<xref:System.InvalidOperationException>예외.</xref:System.InvalidOperationException>"
  overload: System.Xml.Serialization.XmlSerializationReader.CreateUnknownConstantException*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.CreateUnknownNodeException
  id: CreateUnknownNodeException
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: CreateUnknownNodeException()
  nameWithType: XmlSerializationReader.CreateUnknownNodeException()
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateUnknownNodeException()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "만듭니다는 <xref:System.InvalidOperationException>의미 하의 현재 위치 <xref:System.Xml.XmlReader>알 수 없는 XML 노드를 나타냅니다.</xref:System.Xml.XmlReader> </xref:System.InvalidOperationException>"
  remarks: "보호 된 멤버의 <xref:System.Xml.Serialization.XmlSerializationReader>.NET Framework XML serialization 인프라에서 내부적으로 사용 되는 파생 된 클래스에 의해서만 사용 됩니다.</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected Exception CreateUnknownNodeException ();
    parameters: []
    return:
      type: System.Exception
      description: "<xref:System.InvalidOperationException>예외.</xref:System.InvalidOperationException>"
  overload: System.Xml.Serialization.XmlSerializationReader.CreateUnknownNodeException*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.CreateUnknownTypeException(System.Xml.XmlQualifiedName)
  id: CreateUnknownTypeException(System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: CreateUnknownTypeException(XmlQualifiedName)
  nameWithType: XmlSerializationReader.CreateUnknownTypeException(XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateUnknownTypeException(XmlQualifiedName)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "만듭니다는 <xref:System.InvalidOperationException>된 형식이 알려진 임을 나타내는.</xref:System.InvalidOperationException>"
  remarks: "보호 된 멤버의 <xref:System.Xml.Serialization.XmlSerializationReader>.NET Framework XML serialization 인프라에서 내부적으로 사용 되는 파생 된 클래스에 의해서만 사용 됩니다.</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected Exception CreateUnknownTypeException (System.Xml.XmlQualifiedName type);
    parameters:
    - id: type
      type: System.Xml.XmlQualifiedName
      description: "<xref:System.Xml.XmlQualifiedName>알 수 없는 유형의 이름을 나타내는.</xref:System.Xml.XmlQualifiedName>"
    return:
      type: System.Exception
      description: "<xref:System.InvalidOperationException>예외.</xref:System.InvalidOperationException>"
  overload: System.Xml.Serialization.XmlSerializationReader.CreateUnknownTypeException*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.DecodeName
  id: DecodeName
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: DecodeName
  nameWithType: XmlSerializationReader.DecodeName
  fullName: System.Xml.Serialization.XmlSerializationReader.DecodeName
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "XML 문자열은 유효한.NET Framework 형식 이름으로 변환 하는지 여부를 결정 하는 값을 가져오거나 설정 합니다."
  remarks: "<xref:System.Xml.XmlConvert.EncodeName%2A>메서드에 잘못 된 소스에서 유효한 XML을 씁니다.</xref:System.Xml.XmlConvert.EncodeName%2A> 예를 들어는 <xref:System.Data.DataColumn.ColumnName%2A>의 속성은 <xref:System.Data.DataColumn>클래스에는 XML로 유효 하지 않은 공간에 포함 될 수 있습니다.</xref:System.Data.DataColumn> </xref:System.Data.DataColumn.ColumnName%2A> <xref:System.Xml.XmlConvert.DecodeName%2A>는 인코딩된 XML을 읽고 원래 값으로 복원 합니다.</xref:System.Xml.XmlConvert.DecodeName%2A> 그러나는 <xref:System.Xml.Schema.XmlSchema.Read%2A>의 메서드는 <xref:System.Xml.Schema.XmlSchema>클래스 이러한 인코딩된 XML을 읽을 수 없습니다.</xref:System.Xml.Schema.XmlSchema> </xref:System.Xml.Schema.XmlSchema.Read%2A> 이 경우에 설정 된 <xref:System.Xml.Serialization.XmlSerializationWriter.EscapeName%2A>속성을 `false` XML의 인코딩에 사용 하지 않으려면.</xref:System.Xml.Serialization.XmlSerializationWriter.EscapeName%2A>"
  syntax:
    content: protected bool DecodeName { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>XML 문자열은 유효한.NET Framework 형식 이름으로 디코딩된 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Xml.Serialization.XmlSerializationReader.DecodeName*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.Document
  id: Document
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: Document
  nameWithType: XmlSerializationReader.Document
  fullName: System.Xml.Serialization.XmlSerializationReader.Document
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "XML 문서를 역직렬화 하는 XML 문서 개체를 가져옵니다."
  remarks: "보호 된 멤버의 <xref:System.Xml.Serialization.XmlSerializationReader>.NET Framework XML serialization 인프라에서 내부적으로 사용 되는 파생 된 클래스에 의해서만 사용 됩니다.</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected System.Xml.XmlDocument Document { get; }
    return:
      type: System.Xml.XmlDocument
      description: "<xref href=&quot;System.Xml.XmlDocument&quot;> </xref> deserialize 된 나타내는 <xref href=&quot;System.Xml.XmlDocument&quot;> </xref> 데이터입니다."
  overload: System.Xml.Serialization.XmlSerializationReader.Document*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.EnsureArrayIndex(System.Array,System.Int32,System.Type)
  id: EnsureArrayIndex(System.Array,System.Int32,System.Type)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: EnsureArrayIndex(Array,Int32,Type)
  nameWithType: XmlSerializationReader.EnsureArrayIndex(Array,Int32,Type)
  fullName: System.Xml.Serialization.XmlSerializationReader.EnsureArrayIndex(Array,Int32,Type)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "지정 된 배열 또는 복사본이 지정된 된 인덱스를 포함할 수 있는 크기 되는지 확인 합니다."
  remarks: "보호 된 멤버의 <xref:System.Xml.Serialization.XmlSerializationReader>.NET Framework XML serialization 인프라에서 내부적으로 사용 되는 파생 된 클래스에 의해서만 사용 됩니다.</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected Array EnsureArrayIndex (Array a, int index, Type elementType);
    parameters:
    - id: a
      type: System.Array
      description: "<xref:System.Array>확인 중인.</xref:System.Array>"
    - id: index
      type: System.Int32
      description: "필요한 인덱스입니다."
    - id: elementType
      type: System.Type
      description: "<xref:System.Type>배열의 요소.</xref:System.Type>"
    return:
      type: System.Array
      description: "기존 <xref:System.Array>,이 고, 그렇지 않으면 충분히 큰 이미이 원본 배열의 요소를 포함 하는 새 큰 배열을.</xref:System.Array>"
  overload: System.Xml.Serialization.XmlSerializationReader.EnsureArrayIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.FixupArrayRefs(System.Object)
  id: FixupArrayRefs(System.Object)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: FixupArrayRefs(Object)
  nameWithType: XmlSerializationReader.FixupArrayRefs(Object)
  fullName: System.Xml.Serialization.XmlSerializationReader.FixupArrayRefs(Object)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "데이터 형식을.NET Framework 참조 형식에 매핑되는 SOAP 인코딩된 배열의 값을 채웁니다."
  remarks: "보호 된 멤버의 <xref:System.Xml.Serialization.XmlSerializationReader>.NET Framework XML serialization 인프라에서 내부적으로 사용 되는 파생 된 클래스에 의해서만 사용 됩니다.</xref:System.Xml.Serialization.XmlSerializationReader>       FixupArrayRefs 메서드를 구현 하는 <xref:System.Xml.Serialization.XmlSerializationFixupCallback>SOAP 인코딩된 XML 데이터의 deserialization을 위해 위임.</xref:System.Xml.Serialization.XmlSerializationFixupCallback>       하지만 데이터 형식이.NET Framework 참조 형식에 매핑되는 SOAP 인코딩된 배열에 대 한 FixupArrayRefs 메서드의 인스턴스를 만들고 동적으로.NET Framework 개체,.NET Framework XML serialization 인프라 XML 문서를 역직렬화 합니다. 다음 메서드는 <xref:System.Xml.Serialization.XmlSerializationFixupCallback>을 배열에 있는 개체에 채웁니다.</xref:System.Xml.Serialization.XmlSerializationFixupCallback>       SOAP 인코딩은 SOAP 1.1 사양 단원 5에 설명 되어 있습니다."
  syntax:
    content: protected void FixupArrayRefs (object fixup);
    parameters:
    - id: fixup
      type: System.Object
      description: "해당 값으로 채워지는 배열을 포함 하는 개체입니다."
  overload: System.Xml.Serialization.XmlSerializationReader.FixupArrayRefs*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.GetArrayLength(System.String,System.String)
  id: GetArrayLength(System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: GetArrayLength(String,String)
  nameWithType: XmlSerializationReader.GetArrayLength(String,String)
  fullName: System.Xml.Serialization.XmlSerializationReader.GetArrayLength(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "SOAP 인코딩된 배열의 길이 가져옵니다. 여기서는 <xref:System.Xml.XmlReader>현재 배치 되어.</xref:System.Xml.XmlReader>"
  remarks: "보호 된 멤버의 <xref:System.Xml.Serialization.XmlSerializationReader>.NET Framework XML serialization 인프라에서 내부적으로 사용 되는 파생 된 클래스에 의해서만 사용 됩니다.</xref:System.Xml.Serialization.XmlSerializationReader>       GetArrayLength 메서드가 적용 되는 `arrayType` SOAP 인코딩을 사용 하 여 사용 되 고 &quot;http://schemas.xmlsoap.org/soap/encoding/&quot; 네임 스페이스를 가진 지정 된 특성입니다."
  syntax:
    content: protected int GetArrayLength (string name, string ns);
    parameters:
    - id: name
      type: System.String
      description: "배열 가져야 하는 로컬 이름입니다."
    - id: ns
      type: System.String
      description: "배열 가져야 하는 네임 스페이스입니다."
    return:
      type: System.Int32
      description: "SOAP 배열의 길이입니다."
  overload: System.Xml.Serialization.XmlSerializationReader.GetArrayLength*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.GetNullAttr
  id: GetNullAttr
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: GetNullAttr()
  nameWithType: XmlSerializationReader.GetNullAttr()
  fullName: System.Xml.Serialization.XmlSerializationReader.GetNullAttr()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "결정 여부 XML 요소에는 <xref:System.Xml.XmlReader>현재 배치 되어 null 특성이 있는 값으로 설정 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>.</xref:System.Xml.XmlReader>"
  remarks: "보호 된 멤버의 <xref:System.Xml.Serialization.XmlSerializationReader>.NET Framework XML serialization 인프라에서 내부적으로 사용 되는 파생 된 클래스에 의해서만 사용 됩니다.</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected bool GetNullAttr ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우 <xref:System.Xml.XmlReader>가 현재 값을 가진 null 특성 위치 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Xml.XmlReader>"
  overload: System.Xml.Serialization.XmlSerializationReader.GetNullAttr*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.GetTarget(System.String)
  id: GetTarget(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: GetTarget(String)
  nameWithType: XmlSerializationReader.GetTarget(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.GetTarget(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "SOAP 인코딩된에서 deserialize 되 고 있는 개체를 가져옵니다 <xref uid=&quot;langword_csharp_multiRef&quot; name=&quot;multiRef&quot; href=&quot;&quot;> </xref> <xref:System.Xml.Serialization.XmlSerializationReader.AddTarget*>.</xref:System.Xml.Serialization.XmlSerializationReader.AddTarget*> 에서 이전 요소를 저장"
  remarks: "보호 된 멤버의 <xref:System.Xml.Serialization.XmlSerializationReader>.NET Framework XML serialization 인프라에서 내부적으로 사용 되는 파생 된 클래스에 의해서만 사용 됩니다.</xref:System.Xml.Serialization.XmlSerializationReader>       SOAP 인코딩을 사용 하면 SOAP 메시지 내에서 한 번 표시 되도록 고유 XML 요소는 `multiRef` 으로 식별 되는 요소는 `id` 특성입니다. `id` 값을 여러 번 사용 하 여 참조할된 수 `href` 특성 (또는 `ref` SOAP 1.2의 특성) 대체 요소에서 합니다. SOAP 인코딩은 SOAP 1.1 사양 단원 5에 설명 되어 있습니다."
  syntax:
    content: protected object GetTarget (string id);
    parameters:
    - id: id
      type: System.String
      description: "값은 <xref uid=&quot;langword_csharp_id&quot; name=&quot;id&quot; href=&quot;&quot;> </xref> 특성의는 <xref uid=&quot;langword_csharp_multiRef&quot; name=&quot;multiRef&quot; href=&quot;&quot;> </xref> 요소를 식별 하는 요소입니다."
    return:
      type: System.Object
      description: "SOAP 인코딩된에서 deserialize 할 개체 <xref uid=&quot;langword_csharp_multiRef&quot; name=&quot;multiRef&quot; href=&quot;&quot;> </xref> 요소입니다."
  overload: System.Xml.Serialization.XmlSerializationReader.GetTarget*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.GetXsiType
  id: GetXsiType
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: GetXsiType()
  nameWithType: XmlSerializationReader.GetXsiType()
  fullName: System.Xml.Serialization.XmlSerializationReader.GetXsiType()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "값을 가져옵니다는 <xref uid=&quot;langword_csharp_xsi:type&quot; name=&quot;xsi:type&quot; href=&quot;&quot;> </xref> <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader> 의 현재 위치에 있는 XML 요소에 대 한 특성"
  remarks: "보호 된 멤버의 <xref:System.Xml.Serialization.XmlSerializationReader>.NET Framework XML serialization 인프라에서 내부적으로 사용 되는 파생 된 클래스에 의해서만 사용 됩니다.</xref:System.Xml.Serialization.XmlSerializationReader>       `type` XML 스키마 네임 스페이스의 인스턴스 특성 데이터 형식의 XML 요소를 명시적으로 지정 합니다."
  syntax:
    content: protected System.Xml.XmlQualifiedName GetXsiType ();
    parameters: []
    return:
      type: System.Xml.XmlQualifiedName
      description: "XML 요소의 데이터 형식을 나타내는 XML 정규화 된 이름입니다."
  overload: System.Xml.Serialization.XmlSerializationReader.GetXsiType*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.InitCallbacks
  id: InitCallbacks
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: InitCallbacks()
  nameWithType: XmlSerializationReader.InitCallbacks()
  fullName: System.Xml.Serialization.XmlSerializationReader.InitCallbacks()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "SOAP 인코딩된 XML 데이터에 매핑되는 개체를 채우는 콜백 메서드를 초기화 합니다."
  remarks: "보호 된 멤버의 <xref:System.Xml.Serialization.XmlSerializationReader>.NET Framework XML serialization 인프라에서 내부적으로 사용 되는 파생 된 클래스에 의해서만 사용 됩니다.</xref:System.Xml.Serialization.XmlSerializationReader>       초기화 하는 동안.NET Framework XML serialization 인프라 동적으로 생성 하 고 <xref:System.Xml.Serialization.XmlSerializationReader>.</xref:System.Xml.Serialization.XmlSerializationReader> 에서 파생 된 deserialization에 대 한 임시 클래스를 컴파일합니다. 이 과정에서.NET Framework를 구현 하는 읽기 메서드를 생성 된 <xref:System.Xml.Serialization.XmlSerializationReadCallback>위임.</xref:System.Xml.Serialization.XmlSerializationReadCallback> 따라서 특정.NET Framework 형식 및 SOAP 인코딩된 XML을 통해 직렬화 되 고은 루트 요소가 아닌는 XML 데이터 형식 간의 매핑을 수행 합니다. 필요에 따라 다음으로, 역직렬화 하는 동안 읽기 메서드가 호출 됩니다.       추상 InitCallbacks 메서드는 여기서 임시 파생된 클래스의 인스턴스를 만들고 초기화 읽기 콜백 메서드입니다.       <xref:System.Xml.Serialization.XmlSerializationReadCallback>.</xref:System.Xml.Serialization.XmlSerializationReadCallback> 의 인스턴스를 직접 만들지 마십시오       SOAP 인코딩은 SOAP 1.1 사양 단원 5에 설명 되어 있습니다."
  syntax:
    content: protected abstract void InitCallbacks ();
    parameters: []
  overload: System.Xml.Serialization.XmlSerializationReader.InitCallbacks*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.InitIDs
  id: InitIDs
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: InitIDs()
  nameWithType: XmlSerializationReader.InitIDs()
  fullName: System.Xml.Serialization.XmlSerializationReader.InitIDs()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "요소 및 특성 이름을 저장 한 <xref:System.Xml.NameTable>개체입니다.</xref:System.Xml.NameTable>"
  remarks: "보호 된 멤버의 <xref:System.Xml.Serialization.XmlSerializationReader>.NET Framework XML serialization 인프라에서 내부적으로 사용 되는 파생 된 클래스에 의해서만 사용 됩니다.</xref:System.Xml.Serialization.XmlSerializationReader>       InitIDs 메서드는 추상 클래스입니다."
  syntax:
    content: protected abstract void InitIDs ();
    parameters: []
  overload: System.Xml.Serialization.XmlSerializationReader.InitIDs*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.IsReturnValue
  id: IsReturnValue
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: IsReturnValue
  nameWithType: XmlSerializationReader.IsReturnValue
  fullName: System.Xml.Serialization.XmlSerializationReader.IsReturnValue
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "이어야 하는 값을 가져오거나 설정 합니다. <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> SOAP 1.1에 대 한 값을 반환 합니다."
  remarks: "보호 된 멤버의 <xref:System.Xml.Serialization.XmlSerializationReader>.NET Framework XML serialization 인프라에서 내부적으로 사용 되는 파생 된 클래스에 의해서만 사용 됩니다.</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected bool IsReturnValue { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>값이 값을 반환 합니다."
  overload: System.Xml.Serialization.XmlSerializationReader.IsReturnValue*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.IsXmlnsAttribute(System.String)
  id: IsXmlnsAttribute(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: IsXmlnsAttribute(String)
  nameWithType: XmlSerializationReader.IsXmlnsAttribute(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.IsXmlnsAttribute(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "XML 특성 이름 XML 네임 스페이스를 나타내는지 확인 합니다."
  remarks: "보호 된 멤버의 <xref:System.Xml.Serialization.XmlSerializationReader>.NET Framework XML serialization 인프라에서 내부적으로 사용 되는 파생 된 클래스에 의해서만 사용 됩니다.</xref:System.Xml.Serialization.XmlSerializationReader>       특성 이름 형식을 사용 하는 경우 XML 네임 스페이스를 나타내는 `xmlns:``key`, 여기서 &quot;키&quot;은 네임 스페이스 이름입니다."
  syntax:
    content: protected bool IsXmlnsAttribute (string name);
    parameters:
    - id: name
      type: System.String
      description: "XML 특성의 이름입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true &quot; name=&quot;true &quot; href=&quot;&quot;></xref>XML 특성 이름에는 XML 네임 스페이스; 나타내면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Xml.Serialization.XmlSerializationReader.IsXmlnsAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ParseWsdlArrayType(System.Xml.XmlAttribute)
  id: ParseWsdlArrayType(System.Xml.XmlAttribute)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ParseWsdlArrayType(XmlAttribute)
  nameWithType: XmlSerializationReader.ParseWsdlArrayType(XmlAttribute)
  fullName: System.Xml.Serialization.XmlSerializationReader.ParseWsdlArrayType(XmlAttribute)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "형식의 경우 XML 특성의 값을 설정 <xref uid=&quot;langword_csharp_arrayType&quot; name=&quot;arrayType&quot; href=&quot;&quot;> </xref> 설명 언어 WSDL (웹 서비스) 네임 스페이스에서입니다."
  remarks: "보호 된 멤버의 <xref:System.Xml.Serialization.XmlSerializationReader>.NET Framework XML serialization 인프라에서 내부적으로 사용 되는 파생 된 클래스에 의해서만 사용 됩니다.</xref:System.Xml.Serialization.XmlSerializationReader>       WSDL은 http://schemas.xmlsoap.org/wsdl/ 네임 스페이스를 사용합니다."
  syntax:
    content: protected void ParseWsdlArrayType (System.Xml.XmlAttribute attr);
    parameters:
    - id: attr
      type: System.Xml.XmlAttribute
      description: "<xref href=&quot;System.Xml.XmlAttribute&quot;> </xref> 유형 수 있는 <xref uid=&quot;langword_csharp_wsdl:array&quot; name=&quot;wsdl:array&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Xml.Serialization.XmlSerializationReader.ParseWsdlArrayType*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ReadElementQualifiedName
  id: ReadElementQualifiedName
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ReadElementQualifiedName()
  nameWithType: XmlSerializationReader.ReadElementQualifiedName()
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadElementQualifiedName()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "만듭니다는 <xref:System.Xml.XmlReader>현재 배치 되어 요소의 정규화 된 이름의 읽을.</xref:System.Xml.XmlReader>"
  remarks: "보호 된 멤버의 <xref:System.Xml.Serialization.XmlSerializationReader>.NET Framework XML serialization 인프라에서 내부적으로 사용 되는 파생 된 클래스에 의해서만 사용 됩니다.</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected System.Xml.XmlQualifiedName ReadElementQualifiedName ();
    parameters: []
    return:
      type: System.Xml.XmlQualifiedName
      description: "현재 XML 요소의 정규화 된 이름입니다."
  overload: System.Xml.Serialization.XmlSerializationReader.ReadElementQualifiedName*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ReadEndElement
  id: ReadEndElement
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ReadEndElement()
  nameWithType: XmlSerializationReader.ReadEndElement()
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadEndElement()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "만듭니다는 <xref:System.Xml.XmlReader>XML 끝 태그를 읽을.</xref:System.Xml.XmlReader>"
  remarks: "보호 된 멤버의 <xref:System.Xml.Serialization.XmlSerializationReader>.NET Framework XML serialization 인프라에서 내부적으로 사용 되는 파생 된 클래스에 의해서만 사용 됩니다.</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected void ReadEndElement ();
    parameters: []
  overload: System.Xml.Serialization.XmlSerializationReader.ReadEndElement*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.Reader
  id: Reader
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: Reader
  nameWithType: XmlSerializationReader.Reader
  fullName: System.Xml.Serialization.XmlSerializationReader.Reader
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "가져옵니다는 <xref:System.Xml.XmlReader>개체에서 사용 되는 <xref href=&quot;System.Xml.Serialization.XmlSerializationReader&quot;> </xref>.</xref:System.Xml.XmlReader>"
  remarks: "보호 된 멤버의 <xref:System.Xml.Serialization.XmlSerializationReader>.NET Framework XML serialization 인프라에서 내부적으로 사용 되는 파생 된 클래스에 의해서만 사용 됩니다.</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected System.Xml.XmlReader Reader { get; }
    return:
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader>에서 사용 되는 <xref href=&quot;System.Xml.Serialization.XmlSerializationReader&quot;> </xref>.</xref:System.Xml.XmlReader>"
  overload: System.Xml.Serialization.XmlSerializationReader.Reader*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ReaderCount
  id: ReaderCount
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ReaderCount
  nameWithType: XmlSerializationReader.ReaderCount
  fullName: System.Xml.Serialization.XmlSerializationReader.ReaderCount
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "<xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader> 의 현재 수를 가져옵니다."
  remarks: "생성 된 클래스에서 사용 하는 방법과 직접 호출 되지 않도록 합니다.       <xref:System.Xml.Serialization.XmlSerializationReader>의 인스턴스를 사용 하 여는 <xref:System.Xml.XmlReader>읽기 작업이 발생 하는 경우를 계산 하는 클래스입니다.</xref:System.Xml.XmlReader> </xref:System.Xml.Serialization.XmlSerializationReader> 개수가 판독기 예를 들어 적절 한 메서드를 호출할 때마다 증가 <xref:System.Xml.XmlReader.Read%2A>메서드 또는 <xref:System.Xml.XmlReader.ReadElementString%2A>메서드.</xref:System.Xml.XmlReader.ReadElementString%2A> </xref:System.Xml.XmlReader.Read%2A>"
  syntax:
    content: protected int ReaderCount { get; }
    return:
      type: System.Int32
      description: "<xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader> 의 현재 수"
  overload: System.Xml.Serialization.XmlSerializationReader.ReaderCount*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ReadNull
  id: ReadNull
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ReadNull()
  nameWithType: XmlSerializationReader.ReadNull()
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadNull()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "지시는 <xref:System.Xml.XmlReader>요소에 true 값을 갖는 null 특성이 있는 경우 현재 XML 요소를 읽을 수 있습니다.</xref:System.Xml.XmlReader>"
  remarks: "보호 된 멤버의 <xref:System.Xml.Serialization.XmlSerializationReader>.NET Framework XML serialization 인프라에서 내부적으로 사용 되는 파생 된 클래스에 의해서만 사용 됩니다.</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected bool ReadNull ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>요소에 있는 경우는 **null = &quot;true&quot;** 특성 값이 있고 읽기 않았으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Xml.Serialization.XmlSerializationReader.ReadNull*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ReadNullableQualifiedName
  id: ReadNullableQualifiedName
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ReadNullableQualifiedName()
  nameWithType: XmlSerializationReader.ReadNullableQualifiedName()
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadNullableQualifiedName()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "지시는 <xref:System.Xml.XmlReader>현재 배치 되어 요소의 정규화 된 이름을 읽을 수 있습니다.</xref:System.Xml.XmlReader>"
  remarks: "보호 된 멤버의 <xref:System.Xml.Serialization.XmlSerializationReader>.NET Framework XML serialization 인프라에서 내부적으로 사용 되는 파생 된 클래스에 의해서만 사용 됩니다.</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected System.Xml.XmlQualifiedName ReadNullableQualifiedName ();
    parameters: []
    return:
      type: System.Xml.XmlQualifiedName
      description: "A <xref:System.Xml.XmlQualifiedName>정규화 된 나타내는 현재 XML 요소의 이름이 고, 그렇지 않으면 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 경우는 **null = &quot;true&quot;** 특성 값이 있는.</xref:System.Xml.XmlQualifiedName>"
  overload: System.Xml.Serialization.XmlSerializationReader.ReadNullableQualifiedName*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ReadNullableString
  id: ReadNullableString
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ReadNullableString()
  nameWithType: XmlSerializationReader.ReadNullableString()
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadNullableString()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "지시는 <xref:System.Xml.XmlReader>될 수 있는 간단 하 고 텍스트 전용 XML 요소를 읽기 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Xml.XmlReader>"
  remarks: "보호 된 멤버의 <xref:System.Xml.Serialization.XmlSerializationReader>.NET Framework XML serialization 인프라에서 내부적으로 사용 되는 파생 된 클래스에 의해서만 사용 됩니다.</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected string ReadNullableString ();
    parameters: []
    return:
      type: System.String
      description: "문자열 값입니다. 그렇지 않으면 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Xml.Serialization.XmlSerializationReader.ReadNullableString*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ReadReference(System.String@)
  id: ReadReference(System.String@)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ReadReference(String)
  nameWithType: XmlSerializationReader.ReadReference(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadReference(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "값을 읽습니다는 <xref uid=&quot;langword_csharp_href&quot; name=&quot;href&quot; href=&quot;&quot;> </xref> 특성 (<xref uid=&quot;langword_csharp_ref&quot; name=&quot;ref&quot; href=&quot;&quot;> </xref> SOAP 1.2에 대 한 특성) SOAP 인코딩에서 XML 요소를 참조 하는 데 사용 되는 합니다."
  remarks: "보호 된 멤버의 <xref:System.Xml.Serialization.XmlSerializationReader>.NET Framework XML serialization 인프라에서 내부적으로 사용 되는 파생 된 클래스에 의해서만 사용 됩니다.</xref:System.Xml.Serialization.XmlSerializationReader>       여는 `#` 에서 기호를 제거할지는 `href` 특성 값입니다.       SOAP 인코딩을 사용 하면 SOAP 메시지 내에서 한 번 표시 되도록 고유 XML 요소는 `multiRef` 으로 식별 되는 요소는 `id` 특성입니다. `id` 값을 여러 번 사용 하 여 참조할된 수 `href` 특성 (또는 `ref` SOAP 1.2의 특성) 대체 요소에서 합니다.       SOAP 인코딩은 SOAP 1.1 사양 단원 5에 설명 되어 있습니다."
  syntax:
    content: protected bool ReadReference (out string fixupReference);
    parameters:
    - id: fixupReference
      type: System.String
      description: "올 출력 문자열은 <xref uid=&quot;langword_csharp_href&quot; name=&quot;href&quot; href=&quot;&quot;> </xref> 특성 값을 읽습니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>값을 읽었습니다; 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Xml.Serialization.XmlSerializationReader.ReadReference*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement
  id: ReadReferencedElement
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ReadReferencedElement()
  nameWithType: XmlSerializationReader.ReadReferencedElement()
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "SOAP 인코딩된 개체를 역직렬화 <xref uid=&quot;langword_csharp_multiRef&quot; name=&quot;multiRef&quot; href=&quot;&quot;> </xref> XML 요소입니다."
  remarks: "보호 된 멤버의 <xref:System.Xml.Serialization.XmlSerializationReader>.NET Framework XML serialization 인프라에서 내부적으로 사용 되는 파생 된 클래스에 의해서만 사용 됩니다.</xref:System.Xml.Serialization.XmlSerializationReader>       ReadReferencedElement 메서드 참조 하 여 XML 스키마 데이터 형식을 가져옵니다는 `xsi:type` 의 특성은 `multiRef` 요소입니다. 접두사 `xsi` XML 스키마 네임 스페이스의 인스턴스를 참조 합니다.       SOAP 인코딩을 사용 하면 SOAP 메시지 내에서 한 번 표시 되도록 고유 XML 요소는 `multiRef` 으로 식별 되는 요소는 `id` 특성입니다. `id` 값을 여러 번 사용 하 여 참조할된 수 `href` 특성 (또는 `ref` SOAP 1.2의 특성) 대체 요소에서 합니다.       SOAP 인코딩은 SOAP 1.1 사양 단원 5에 설명 되어 있습니다."
  syntax:
    content: protected object ReadReferencedElement ();
    parameters: []
    return:
      type: System.Object
      description: "문서에서 참조 된 요소의 값입니다."
  overload: System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement(System.String,System.String)
  id: ReadReferencedElement(System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ReadReferencedElement(String,String)
  nameWithType: XmlSerializationReader.ReadReferencedElement(String,String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "SOAP 인코딩된 개체를 역직렬화 <xref uid=&quot;langword_csharp_multiRef&quot; name=&quot;multiRef&quot; href=&quot;&quot;> </xref> XML 요소입니다."
  remarks: "보호 된 멤버의 <xref:System.Xml.Serialization.XmlSerializationReader>.NET Framework XML serialization 인프라에서 내부적으로 사용 되는 파생 된 클래스에 의해서만 사용 됩니다.</xref:System.Xml.Serialization.XmlSerializationReader>       이 서명을 <xref:System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement%2A>의 XML 스키마 데이터 형식 메서드를 가져옵니다는 `multiRef` 을 읽지 않고 메서드 매개 변수에서 요소는 `xsi:type` 특성.</xref:System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement%2A> 접두사 `xsi` XML 스키마 네임 스페이스의 인스턴스를 참조 합니다.       SOAP 인코딩을 사용 하면 SOAP 메시지 내에서 한 번 표시 되도록 고유 XML 요소는 `multiRef` 으로 식별 되는 요소는 `id` 특성입니다. `id` 값을 여러 번 사용 하 여 참조할된 수 `href` 특성 (또는 `ref` SOAP 1.2의 특성) 대체 요소에서 합니다.       SOAP 인코딩은 SOAP 1.1 사양 단원 5에 설명 되어 있습니다."
  syntax:
    content: protected object ReadReferencedElement (string name, string ns);
    parameters:
    - id: name
      type: System.String
      description: "로컬 이름 요소의 XML 스키마 데이터 형식입니다."
    - id: ns
      type: System.String
      description: "네임 스페이스 요소의 XML 스키마 데이터 형식입니다."
    return:
      type: System.Object
      description: "문서에서 참조 된 요소의 값입니다."
  overload: System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ReadReferencedElements
  id: ReadReferencedElements
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ReadReferencedElements()
  nameWithType: XmlSerializationReader.ReadReferencedElements()
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadReferencedElements()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "SOAP 인코딩된 개체를 역직렬화 <xref uid=&quot;langword_csharp_multiRef&quot; name=&quot;multiRef&quot; href=&quot;&quot;> </xref> SOAP 메시지의 요소입니다."
  remarks: "보호 된 멤버의 <xref:System.Xml.Serialization.XmlSerializationReader>.NET Framework XML serialization 인프라에서 내부적으로 사용 되는 파생 된 클래스에 의해서만 사용 됩니다.</xref:System.Xml.Serialization.XmlSerializationReader>       SOAP 인코딩을 사용 하면 SOAP 메시지 내에서 한 번 표시 되도록 고유 XML 요소는 `multiRef` 으로 식별 되는 요소는 `id` 특성입니다. `id` 값을 여러 번 사용 하 여 참조할된 수 `href` 특성 (또는 `ref` SOAP 1.2의 특성) 대체 요소에서 합니다.       SOAP 인코딩은 SOAP 1.1 사양 단원 5에 설명 되어 있습니다."
  syntax:
    content: protected void ReadReferencedElements ();
    parameters: []
  overload: System.Xml.Serialization.XmlSerializationReader.ReadReferencedElements*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String@)
  id: ReadReferencingElement(System.String@)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ReadReferencingElement(String)
  nameWithType: XmlSerializationReader.ReadReferencingElement(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "에 대 한 참조를 포함 하는 SOAP 메시지의 XML 요소에서 개체를 역직렬화 한 <xref uid=&quot;langword_csharp_multiRef&quot; name=&quot;multiRef&quot; href=&quot;&quot;> </xref> 요소입니다."
  remarks: "보호 된 멤버의 <xref:System.Xml.Serialization.XmlSerializationReader>.NET Framework XML serialization 인프라에서 내부적으로 사용 되는 파생 된 클래스에 의해서만 사용 됩니다.</xref:System.Xml.Serialization.XmlSerializationReader>       SOAP 인코딩을 사용 하면 SOAP 메시지 내에서 한 번 표시 되도록 고유 XML 요소는 `multiRef` 으로 식별 되는 요소는 `id` 특성입니다. `id` 값을 여러 번 사용 하 여 참조할된 수 `href` 특성 (또는 `ref` SOAP 1.2의 특성) 대체 요소에서 합니다.       SOAP 인코딩은 SOAP 1.1 사양 단원 5에 설명 되어 있습니다."
  syntax:
    content: protected object ReadReferencingElement (out string fixupReference);
    parameters:
    - id: fixupReference
      type: System.String
      description: "올 출력 문자열은 <xref uid=&quot;langword_csharp_href&quot; name=&quot;href&quot; href=&quot;&quot;> </xref> 특성 값을 읽습니다."
    return:
      type: System.Object
      description: "Deserialize 된 개체입니다."
  overload: System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String,System.String,System.String@)
  id: ReadReferencingElement(System.String,System.String,System.String@)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ReadReferencingElement(String,String,String)
  nameWithType: XmlSerializationReader.ReadReferencingElement(String,String,String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(String,String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "에 대 한 참조를 포함 하는 SOAP 메시지의 XML 요소에서 개체를 역직렬화 한 <xref uid=&quot;langword_csharp_multiRef&quot; name=&quot;multiRef&quot; href=&quot;&quot;> </xref> 요소입니다."
  remarks: "보호 된 멤버의 <xref:System.Xml.Serialization.XmlSerializationReader>.NET Framework XML serialization 인프라에서 내부적으로 사용 되는 파생 된 클래스에 의해서만 사용 됩니다.</xref:System.Xml.Serialization.XmlSerializationReader>       SOAP 인코딩을 사용 하면 SOAP 메시지 내에서 한 번 표시 되도록 고유 XML 요소는 `multiRef` 으로 식별 되는 요소는 `id` 특성입니다. `id` 값을 여러 번 사용 하 여 참조할된 수 `href` 특성 (또는 `ref` SOAP 1.2의 특성) 대체 요소에서 합니다.       SOAP 인코딩은 SOAP 1.1 사양 단원 5에 설명 되어 있습니다."
  syntax:
    content: protected object ReadReferencingElement (string name, string ns, out string fixupReference);
    parameters:
    - id: name
      type: System.String
      description: "로컬 이름 요소의 XML 스키마 데이터 형식입니다."
    - id: ns
      type: System.String
      description: "네임 스페이스 요소의 XML 스키마 데이터 형식입니다."
    - id: fixupReference
      type: System.String
      description: "올 출력 문자열은 <xref uid=&quot;langword_csharp_href&quot; name=&quot;href&quot; href=&quot;&quot;> </xref> 특성 값을 읽습니다."
    return:
      type: System.Object
      description: "Deserialize 된 개체입니다."
  overload: System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String,System.String,System.Boolean,System.String@)
  id: ReadReferencingElement(System.String,System.String,System.Boolean,System.String@)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ReadReferencingElement(String,String,Boolean,String)
  nameWithType: XmlSerializationReader.ReadReferencingElement(String,String,Boolean,String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(String,String,Boolean,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "에 대 한 참조를 포함 하는 SOAP 메시지의 XML 요소에서 개체를 역직렬화 한 <xref uid=&quot;langword_csharp_multiRef&quot; name=&quot;multiRef&quot; href=&quot;&quot;> </xref> 요소입니다."
  remarks: "보호 된 멤버의 <xref:System.Xml.Serialization.XmlSerializationReader>.NET Framework XML serialization 인프라에서 내부적으로 사용 되는 파생 된 클래스에 의해서만 사용 됩니다.</xref:System.Xml.Serialization.XmlSerializationReader>       SOAP 인코딩을 사용 하면 SOAP 메시지 내에서 한 번 표시 되도록 고유 XML 요소는 `multiRef` 으로 식별 되는 요소는 `id` 특성입니다. `id` 값을 여러 번 사용 하 여 참조할된 수 `href` 특성 (또는 `ref` SOAP 1.2의 특성) 대체 요소에서 합니다.       SOAP 인코딩은 SOAP 1.1 사양 단원 5에 설명 되어 있습니다."
  syntax:
    content: protected object ReadReferencingElement (string name, string ns, bool elementCanBeType, out string fixupReference);
    parameters:
    - id: name
      type: System.String
      description: "로컬 이름 요소의 XML 스키마 데이터 형식입니다."
    - id: ns
      type: System.String
      description: "네임 스페이스 요소의 XML 스키마 데이터 형식입니다."
    - id: elementCanBeType
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>요소 이름은 XML 스키마 데이터 형식 이름을; 이기도 한 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
    - id: fixupReference
      type: System.String
      description: "올 출력 문자열의 값은 <xref uid=&quot;langword_csharp_href&quot; name=&quot;href&quot; href=&quot;&quot;> </xref> 특성이 읽기입니다."
    return:
      type: System.Object
      description: "Deserialize 된 개체입니다."
  overload: System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ReadSerializable(System.Xml.Serialization.IXmlSerializable)
  id: ReadSerializable(System.Xml.Serialization.IXmlSerializable)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ReadSerializable(IXmlSerializable)
  nameWithType: XmlSerializationReader.ReadSerializable(IXmlSerializable)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadSerializable(IXmlSerializable)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "<xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader> 의 현재 위치에서 해당 XML 표현에서 개체를 채웁니다."
  remarks: "보호 된 멤버의 <xref:System.Xml.Serialization.XmlSerializationReader>.NET Framework XML serialization 인프라에서 내부적으로 사용 되는 파생 된 클래스에 의해서만 사용 됩니다.</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected System.Xml.Serialization.IXmlSerializable ReadSerializable (System.Xml.Serialization.IXmlSerializable serializable);
    parameters:
    - id: serializable
      type: System.Xml.Serialization.IXmlSerializable
      description: "<xref:System.Xml.Serialization.IXmlSerializable> <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader> 의 현재 위치에 해당 하는</xref:System.Xml.Serialization.IXmlSerializable>"
    return:
      type: System.Xml.Serialization.IXmlSerializable
      description: "<xref:System.Xml.Serialization.IXmlSerializable> <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader> 위치에서 채워진 그 구성원으로 인터페이스</xref:System.Xml.Serialization.IXmlSerializable> 를 구현 하는 개체"
  overload: System.Xml.Serialization.XmlSerializationReader.ReadSerializable*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ReadSerializable(System.Xml.Serialization.IXmlSerializable,System.Boolean)
  id: ReadSerializable(System.Xml.Serialization.IXmlSerializable,System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ReadSerializable(IXmlSerializable,Boolean)
  nameWithType: XmlSerializationReader.ReadSerializable(IXmlSerializable,Boolean)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadSerializable(IXmlSerializable,Boolean)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "이 메서드는.NET Framework 인프라를 지원 하며 사용자 코드에서 직접 사용할 수 없습니다."
  syntax:
    content: protected System.Xml.Serialization.IXmlSerializable ReadSerializable (System.Xml.Serialization.IXmlSerializable serializable, bool wrappedAny);
    parameters:
    - id: serializable
      type: System.Xml.Serialization.IXmlSerializable
      description: "XMLReader의 현재 위치에 해당 하는 IXmlSerializable 개체입니다."
    - id: wrappedAny
      type: System.Boolean
      description: "직렬화 가능 개체에 포함될지 여부를 지정 합니다."
    return:
      type: System.Xml.Serialization.IXmlSerializable
      description: "XmlReader의 위치에서 채워진 그 구성원으로 IXmlSerializable 인터페이스를 구현 하는 개체입니다."
  overload: System.Xml.Serialization.XmlSerializationReader.ReadSerializable*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ReadString(System.String)
  id: ReadString(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ReadString(String)
  nameWithType: XmlSerializationReader.ReadString(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadString(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "에 대 한 호출의 결과 생성 합니다.는 <xref:System.Xml.XmlReader.ReadString*>메서드 입력된 값에 추가 합니다.</xref:System.Xml.XmlReader.ReadString*>"
  remarks: "보호 된 멤버의 <xref:System.Xml.Serialization.XmlSerializationReader>.NET Framework XML serialization 인프라에서 내부적으로 사용 되는 파생 된 클래스에 의해서만 사용 됩니다.</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected string ReadString (string value);
    parameters:
    - id: value
      type: System.String
      description: "에 대 한 호출의 결과로 접두사를 지정 하는 문자열은 <xref:System.Xml.XmlReader.ReadString*>메서드.</xref:System.Xml.XmlReader.ReadString*>"
    return:
      type: System.String
      description: "호출의 결과 <xref:System.Xml.XmlReader.ReadString*>메서드 입력된 값에 추가 합니다.</xref:System.Xml.XmlReader.ReadString*>"
  overload: System.Xml.Serialization.XmlSerializationReader.ReadString*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ReadString(System.String,System.Boolean)
  id: ReadString(System.String,System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ReadString(String,Boolean)
  nameWithType: XmlSerializationReader.ReadString(String,Boolean)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadString(String,Boolean)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "에 대 한 호출의 결과 반환는 <xref:System.Xml.XmlReader.ReadString*>의 메서드는 <xref:System.Xml.XmlReader>클래스인 필요 하 고 입력된 값에 추가 하는 경우 공백이 잘립니다.</xref:System.Xml.XmlReader> </xref:System.Xml.XmlReader.ReadString*>"
  syntax:
    content: protected string ReadString (string value, bool trim);
    parameters:
    - id: value
      type: System.String
      description: "문자열에 추가 됩니다."
    - id: trim
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>읽기 작업의 결과; 트리밍 해야 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
    return:
      type: System.String
      description: "입력된 값에 추가 하는 읽기 작업의 결과입니다."
  overload: System.Xml.Serialization.XmlSerializationReader.ReadString*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ReadTypedNull(System.Xml.XmlQualifiedName)
  id: ReadTypedNull(System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ReadTypedNull(XmlQualifiedName)
  nameWithType: XmlSerializationReader.ReadTypedNull(XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadTypedNull(XmlQualifiedName)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Null 값을 허용 하는 XML 요소를 읽습니다 (<xref uid=&quot;langword_csharp_xsi:nil = &quot;true&quot;&quot; name=&quot;xsi:nil = &quot;true&quot;&quot; href=&quot;&quot;></xref>) 하 고 제네릭 반환 &lt;xref:System.Nullable%601&gt; 값입니다."
  syntax:
    content: protected object ReadTypedNull (System.Xml.XmlQualifiedName type);
    parameters:
    - id: type
      type: System.Xml.XmlQualifiedName
      description: "<xref:System.Xml.XmlQualifiedName> <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader> 의 현재 위치에 대 한 단순 데이터 형식을 나타내는</xref:System.Xml.XmlQualifiedName>"
    return:
      type: System.Object
      description: "제네릭 &lt;xref:System.Nullable%601&gt; null XML 값을 나타내는입니다."
  overload: System.Xml.Serialization.XmlSerializationReader.ReadTypedNull*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ReadTypedPrimitive(System.Xml.XmlQualifiedName)
  id: ReadTypedPrimitive(System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ReadTypedPrimitive(XmlQualifiedName)
  nameWithType: XmlSerializationReader.ReadTypedPrimitive(XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadTypedPrimitive(XmlQualifiedName)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "XML 노드 값을 가져옵니다는 <xref:System.Xml.XmlReader>현재 배치 되어.</xref:System.Xml.XmlReader>"
  remarks: "보호 된 멤버의 <xref:System.Xml.Serialization.XmlSerializationReader>.NET Framework XML serialization 인프라에서 내부적으로 사용 되는 파생 된 클래스에 의해서만 사용 됩니다.</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected object ReadTypedPrimitive (System.Xml.XmlQualifiedName type);
    parameters:
    - id: type
      type: System.Xml.XmlQualifiedName
      description: "<xref:System.Xml.XmlQualifiedName> <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader> 의 현재 위치에 대 한 단순 데이터 형식을 나타내는</xref:System.Xml.XmlQualifiedName>"
    return:
      type: System.Object
      description: ".NET Framework 값 형식, 값이 단순 XML 스키마 데이터 형식으로 노드의 값입니다."
  overload: System.Xml.Serialization.XmlSerializationReader.ReadTypedPrimitive*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ReadXmlDocument(System.Boolean)
  id: ReadXmlDocument(System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ReadXmlDocument(Boolean)
  nameWithType: XmlSerializationReader.ReadXmlDocument(Boolean)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadXmlDocument(Boolean)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "지시는 <xref:System.Xml.XmlReader>현재 위치에 XML 문서 루트 요소를 읽습니다.</xref:System.Xml.XmlReader>"
  remarks: "보호 된 멤버의 <xref:System.Xml.Serialization.XmlSerializationReader>.NET Framework XML serialization 인프라에서 내부적으로 사용 되는 파생 된 클래스에 의해서만 사용 됩니다.</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected System.Xml.XmlDocument ReadXmlDocument (bool wrapped);
    parameters:
    - id: wrapped
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>메서드에서 요소의 시작 요소;를 읽은 후에 읽어야 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
    return:
      type: System.Xml.XmlDocument
      description: "<xref href=&quot;System.Xml.XmlDocument&quot;> </xref> 읽은 루트 요소를 포함 하는 합니다."
  overload: System.Xml.Serialization.XmlSerializationReader.ReadXmlDocument*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ReadXmlNode(System.Boolean)
  id: ReadXmlNode(System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ReadXmlNode(Boolean)
  nameWithType: XmlSerializationReader.ReadXmlNode(Boolean)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadXmlNode(Boolean)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "지시는 <xref:System.Xml.XmlReader>현재 위치에 XML 노드를 읽을 수 있습니다.</xref:System.Xml.XmlReader>"
  remarks: "보호 된 멤버의 <xref:System.Xml.Serialization.XmlSerializationReader>.NET Framework XML serialization 인프라에서 내부적으로 사용 되는 파생 된 클래스에 의해서만 사용 됩니다.</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected System.Xml.XmlNode ReadXmlNode (bool wrapped);
    parameters:
    - id: wrapped
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>요소의 시작 요소;를 읽은 후에 콘텐츠를 읽을 수 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
    return:
      type: System.Xml.XmlNode
      description: "<xref href=&quot;System.Xml.XmlNode&quot;> </xref> 읽은 XML 노드를 나타내는입니다."
  overload: System.Xml.Serialization.XmlSerializationReader.ReadXmlNode*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.Referenced(System.Object)
  id: Referenced(System.Object)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: Referenced(Object)
  nameWithType: XmlSerializationReader.Referenced(Object)
  fullName: System.Xml.Serialization.XmlSerializationReader.Referenced(Object)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "SOAP 인코딩된에서 deserialize 할 개체를 저장 <xref uid=&quot;langword_csharp_multiRef&quot; name=&quot;multiRef&quot; href=&quot;&quot;> </xref> 요소입니다."
  remarks: "보호 된 멤버의 <xref:System.Xml.Serialization.XmlSerializationReader>.NET Framework XML serialization 인프라에서 내부적으로 사용 되는 파생 된 클래스에 의해서만 사용 됩니다.</xref:System.Xml.Serialization.XmlSerializationReader>       SOAP 인코딩을 사용 하면 SOAP 메시지 내에서 한 번 표시 되도록 고유 XML 요소는 `multiRef` 으로 식별 되는 요소는 `id` 특성입니다. `id` 값을 여러 번 사용 하 여 참조할된 수 `href` 특성 (또는 `ref` SOAP 1.2의 특성) 대체 요소에서 합니다.       SOAP 인코딩은 SOAP 1.1 사양 단원 5에 설명 되어 있습니다."
  syntax:
    content: protected void Referenced (object o);
    parameters:
    - id: o
      type: System.Object
      description: "역직렬화 하는 개체입니다."
  overload: System.Xml.Serialization.XmlSerializationReader.Referenced*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ResolveDynamicAssembly(System.String)
  id: ResolveDynamicAssembly(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ResolveDynamicAssembly(String)
  nameWithType: XmlSerializationReader.ResolveDynamicAssembly(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ResolveDynamicAssembly(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "이름으로 동적으로 생성 된 어셈블리를 가져옵니다."
  remarks: "보호 된 멤버의 <xref:System.Xml.Serialization.XmlSerializationReader>.NET Framework XML serialization 인프라에서 내부적으로 사용 되는 파생 된 클래스에 의해서만 사용 됩니다.</xref:System.Xml.Serialization.XmlSerializationReader>       ResolveDynamicAssembly 메서드가 정적입니다."
  syntax:
    content: protected static System.Reflection.Assembly ResolveDynamicAssembly (string assemblyFullName);
    parameters:
    - id: assemblyFullName
      type: System.String
      description: "어셈블리의 전체 이름입니다."
    return:
      type: System.Reflection.Assembly
      description: "에 동적으로 생성 된 <xref:System.Reflection.Assembly>.</xref:System.Reflection.Assembly>"
  overload: System.Xml.Serialization.XmlSerializationReader.ResolveDynamicAssembly*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ShrinkArray(System.Array,System.Int32,System.Type,System.Boolean)
  id: ShrinkArray(System.Array,System.Int32,System.Type,System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ShrinkArray(Array,Int32,Type,Boolean)
  nameWithType: XmlSerializationReader.ShrinkArray(Array,Int32,Type,Boolean)
  fullName: System.Xml.Serialization.XmlSerializationReader.ShrinkArray(Array,Int32,Type,Boolean)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "지정 된 배열 또는 복사본이 지정 된 길이 보다 작은 하는지 확인 합니다."
  remarks: "보호 된 멤버의 <xref:System.Xml.Serialization.XmlSerializationReader>.NET Framework XML serialization 인프라에서 내부적으로 사용 되는 파생 된 클래스에 의해서만 사용 됩니다.</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected Array ShrinkArray (Array a, int length, Type elementType, bool isNullable);
    parameters:
    - id: a
      type: System.Array
      description: "체크 인 되는 배열입니다."
    - id: length
      type: System.Int32
      description: "배열의 최대 길이입니다."
    - id: elementType
      type: System.Type
      description: "<xref:System.Type>배열의 요소.</xref:System.Type>"
    - id: isNullable
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 배열에 대해 있으면 입력된 배열에 대 한 수 고, 그렇지 않으면 반환 된 새로운, 작은 배열입니다."
    return:
      type: System.Array
      description: "기존 <xref:System.Array>경우 이미 만큼 작지 않아서, 그렇지 않으면 새로운, 작은 배열 요소를 포함 하는 원래 배열을 크기의 최대<code> length</code>.</xref:System.Array>"
  overload: System.Xml.Serialization.XmlSerializationReader.ShrinkArray*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64(System.Boolean)
  id: ToByteArrayBase64(System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ToByteArrayBase64(Boolean)
  nameWithType: XmlSerializationReader.ToByteArrayBase64(Boolean)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64(Boolean)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "지시는 <xref:System.Xml.XmlReader>를 현재 위치에서 문자열 값을 읽고 base64 바이트 배열로 반환 합니다.</xref:System.Xml.XmlReader>"
  remarks: "보호 된 멤버의 <xref:System.Xml.Serialization.XmlSerializationReader>.NET Framework XML serialization 인프라에서 내부적으로 사용 되는 파생 된 클래스에 의해서만 사용 됩니다.</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected byte[] ToByteArrayBase64 (bool isNull);
    parameters:
    - id: isNull
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>반환할 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 를 base64 바이트 배열로 반환 합니다."
    return:
      type: System.Byte[]
      description: "Base&64; 바이트 배열입니다. 그렇지 않으면 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 경우의 값은 <code> isNull </code> 매개 변수는 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64(System.String)
  id: ToByteArrayBase64(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ToByteArrayBase64(String)
  nameWithType: XmlSerializationReader.ToByteArrayBase64(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "입력된 문자열에서 base64 바이트 배열을 생성합니다."
  remarks: "보호 된 멤버의 <xref:System.Xml.Serialization.XmlSerializationReader>.NET Framework XML serialization 인프라에서 내부적으로 사용 되는 파생 된 클래스에 의해서만 사용 됩니다.</xref:System.Xml.Serialization.XmlSerializationReader>       ToByteArrayBase64 메서드가 정적입니다."
  syntax:
    content: protected static byte[] ToByteArrayBase64 (string value);
    parameters:
    - id: value
      type: System.String
      description: "Base64 바이트 배열로 변환 하는 문자열입니다."
    return:
      type: System.Byte[]
      description: "Base&64; 바이트 배열입니다."
  overload: System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex(System.Boolean)
  id: ToByteArrayHex(System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ToByteArrayHex(Boolean)
  nameWithType: XmlSerializationReader.ToByteArrayHex(Boolean)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex(Boolean)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "지시는 <xref:System.Xml.XmlReader>를 현재 위치에서 문자열 값을 읽고&16; 진수 바이트 배열로 반환 합니다.</xref:System.Xml.XmlReader>"
  remarks: "보호 된 멤버의 <xref:System.Xml.Serialization.XmlSerializationReader>.NET Framework XML serialization 인프라에서 내부적으로 사용 되는 파생 된 클래스에 의해서만 사용 됩니다.</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected byte[] ToByteArrayHex (bool isNull);
    parameters:
    - id: isNull
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>반환할 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 를&16; 진수 바이트 배열을 반환 합니다."
    return:
      type: System.Byte[]
      description: "16 진수 바이트 배열입니다. 그렇지 않으면 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 경우의 값은 <code> isNull </code> 매개 변수는 **true**합니다."
  overload: System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex(System.String)
  id: ToByteArrayHex(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ToByteArrayHex(String)
  nameWithType: XmlSerializationReader.ToByteArrayHex(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "입력된 문자열에서&16; 진수 바이트 배열을 생성합니다."
  remarks: "보호 된 멤버의 <xref:System.Xml.Serialization.XmlSerializationReader>.NET Framework XML serialization 인프라에서 내부적으로 사용 되는 파생 된 클래스에 의해서만 사용 됩니다.</xref:System.Xml.Serialization.XmlSerializationReader>       ToByteArrayHex 메서드가 정적입니다."
  syntax:
    content: protected static byte[] ToByteArrayHex (string value);
    parameters:
    - id: value
      type: System.String
      description: "16 진수 바이트 배열로 변환 하는 문자열입니다."
    return:
      type: System.Byte[]
      description: "16 진수 바이트 배열입니다."
  overload: System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ToChar(System.String)
  id: ToChar(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ToChar(String)
  nameWithType: XmlSerializationReader.ToChar(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToChar(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "생성 된 <xref:System.Char>입력된 문자열에서 개체.</xref:System.Char>"
  remarks: "보호 된 멤버의 <xref:System.Xml.Serialization.XmlSerializationReader>.NET Framework XML serialization 인프라에서 내부적으로 사용 되는 파생 된 클래스에 의해서만 사용 됩니다.</xref:System.Xml.Serialization.XmlSerializationReader>       ToChar 메서드가 정적입니다."
  syntax:
    content: protected static char ToChar (string value);
    parameters:
    - id: value
      type: System.String
      description: "변환할 문자열을 <xref:System.Char>개체입니다.</xref:System.Char>"
    return:
      type: System.Char
      description: "A <xref:System.Char>개체입니다.</xref:System.Char>"
  overload: System.Xml.Serialization.XmlSerializationReader.ToChar*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ToDate(System.String)
  id: ToDate(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ToDate(String)
  nameWithType: XmlSerializationReader.ToDate(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToDate(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "생성 된 <xref:System.DateTime>입력된 문자열에서 개체.</xref:System.DateTime>"
  remarks: "보호 된 멤버의 <xref:System.Xml.Serialization.XmlSerializationReader>.NET Framework XML serialization 인프라에서 내부적으로 사용 되는 파생 된 클래스에 의해서만 사용 됩니다.</xref:System.Xml.Serialization.XmlSerializationReader>       ToDate 메서드가 정적입니다."
  syntax:
    content: protected static DateTime ToDate (string value);
    parameters:
    - id: value
      type: System.String
      description: "변환할 문자열을 <xref:System.DateTime>클래스 개체입니다.</xref:System.DateTime>"
    return:
      type: System.DateTime
      description: "A <xref:System.DateTime>개체입니다.</xref:System.DateTime>"
  overload: System.Xml.Serialization.XmlSerializationReader.ToDate*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ToDateTime(System.String)
  id: ToDateTime(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ToDateTime(String)
  nameWithType: XmlSerializationReader.ToDateTime(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToDateTime(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "생성 된 <xref:System.DateTime>입력된 문자열에서 개체.</xref:System.DateTime>"
  remarks: "보호 된 멤버의 <xref:System.Xml.Serialization.XmlSerializationReader>.NET Framework XML serialization 인프라에서 내부적으로 사용 되는 파생 된 클래스에 의해서만 사용 됩니다.</xref:System.Xml.Serialization.XmlSerializationReader>       ToDateTime 메서드가 정적입니다."
  syntax:
    content: protected static DateTime ToDateTime (string value);
    parameters:
    - id: value
      type: System.String
      description: "변환할 문자열을 <xref:System.DateTime>개체입니다.</xref:System.DateTime>"
    return:
      type: System.DateTime
      description: "A <xref:System.DateTime>개체입니다.</xref:System.DateTime>"
  overload: System.Xml.Serialization.XmlSerializationReader.ToDateTime*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ToEnum(System.String,System.Collections.Hashtable,System.String)
  id: ToEnum(System.String,System.Collections.Hashtable,System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ToEnum(String,Hashtable,String)
  nameWithType: XmlSerializationReader.ToEnum(String,Hashtable,String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToEnum(String,Hashtable,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "열거자 목록에서 상수를 나타내는 구분 기호로 분리 된 식별자로 구성 된 문자열에서 숫자 열거형 값을 생성 합니다."
  remarks: "보호 된 멤버의 <xref:System.Xml.Serialization.XmlSerializationReader>.NET Framework XML serialization 인프라에서 내부적으로 사용 되는 파생 된 클래스에 의해서만 사용 됩니다.</xref:System.Xml.Serialization.XmlSerializationReader>       ToEnum 메서드가 정적입니다."
  syntax:
    content: protected static long ToEnum (string value, System.Collections.Hashtable h, string typeName);
    parameters:
    - id: value
      type: System.String
      description: "구성 된 문자열로 구분 식별자는 각 식별자의 집합 열거자 목록에서 상수를 나타냅니다."
    - id: h
      type: System.Collections.Hashtable
      description: "A <xref href=&quot;System.Collections.Hashtable&quot;> </xref> 키인 식별자 및 정수인 상수로 구성 됩니다."
    - id: typeName
      type: System.String
      description: "열거형 형식의 이름입니다."
    return:
      type: System.Int64
      description: "일련의 비트 열거형 값으로 구성 된 long 값 <xref uid=&quot;langword_csharp_OR&quot; name=&quot;OR&quot; href=&quot;&quot;> </xref> 작업 합니다."
  overload: System.Xml.Serialization.XmlSerializationReader.ToEnum*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ToTime(System.String)
  id: ToTime(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ToTime(String)
  nameWithType: XmlSerializationReader.ToTime(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToTime(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "생성 된 <xref:System.DateTime>에서 시간을 나타내는 문자열입니다.</xref:System.DateTime>"
  remarks: "보호 된 멤버의 <xref:System.Xml.Serialization.XmlSerializationReader>.NET Framework XML serialization 인프라에서 내부적으로 사용 되는 파생 된 클래스에 의해서만 사용 됩니다.</xref:System.Xml.Serialization.XmlSerializationReader>       ToTime 메서드가 정적입니다."
  syntax:
    content: protected static DateTime ToTime (string value);
    parameters:
    - id: value
      type: System.String
      description: "변환할 문자열을 <xref:System.DateTime>개체입니다.</xref:System.DateTime>"
    return:
      type: System.DateTime
      description: "A <xref:System.DateTime>개체입니다.</xref:System.DateTime>"
  overload: System.Xml.Serialization.XmlSerializationReader.ToTime*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ToXmlName(System.String)
  id: ToXmlName(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ToXmlName(String)
  nameWithType: XmlSerializationReader.ToXmlName(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToXmlName(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "XML 이름을 디코딩합니다."
  remarks: "보호 된 멤버의 <xref:System.Xml.Serialization.XmlSerializationReader>.NET Framework XML serialization 인프라에서 내부적으로 사용 되는 파생 된 클래스에 의해서만 사용 됩니다.</xref:System.Xml.Serialization.XmlSerializationReader>       ToXmlName 메서드가 정적입니다.       ToXmlName는 4 자리 16 진수 ucs-2 코드를 유니코드로 변환 합니다."
  syntax:
    content: protected static string ToXmlName (string value);
    parameters:
    - id: value
      type: System.String
      description: "XML 이름 디코딩할 수입니다."
    return:
      type: System.String
      description: "디코딩된 문자열입니다."
  overload: System.Xml.Serialization.XmlSerializationReader.ToXmlName*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ToXmlNCName(System.String)
  id: ToXmlNCName(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ToXmlNCName(String)
  nameWithType: XmlSerializationReader.ToXmlNCName(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToXmlNCName(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "XML 이름을 디코딩합니다."
  remarks: "보호 된 멤버의 <xref:System.Xml.Serialization.XmlSerializationReader>.NET Framework XML serialization 인프라에서 내부적으로 사용 되는 파생 된 클래스에 의해서만 사용 됩니다.</xref:System.Xml.Serialization.XmlSerializationReader>       ToXmlNCName 메서드가 정적입니다.       ToXmlNCName는 4 자리 16 진수 ucs-2 코드를 유니코드로 변환 합니다."
  syntax:
    content: protected static string ToXmlNCName (string value);
    parameters:
    - id: value
      type: System.String
      description: "XML 이름 디코딩할 수입니다."
    return:
      type: System.String
      description: "디코딩된 문자열입니다."
  overload: System.Xml.Serialization.XmlSerializationReader.ToXmlNCName*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ToXmlNmToken(System.String)
  id: ToXmlNmToken(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ToXmlNmToken(String)
  nameWithType: XmlSerializationReader.ToXmlNmToken(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToXmlNmToken(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "XML 이름을 디코딩합니다."
  remarks: "보호 된 멤버의 <xref:System.Xml.Serialization.XmlSerializationReader>만.NET Framework XML serialization 인프라에서 내부적으로 사용 되는 파생된 클래스에서 사용 하기 위해 사용할.</xref:System.Xml.Serialization.XmlSerializationReader>       ToXmlNmToken 메서드가 정적입니다.       ToXmlNmToken는 4 자리 16 진수 ucs-2 코드를 유니코드로 변환 합니다."
  syntax:
    content: protected static string ToXmlNmToken (string value);
    parameters:
    - id: value
      type: System.String
      description: "XML 이름 디코딩할 수입니다."
    return:
      type: System.String
      description: "디코딩된 문자열입니다."
  overload: System.Xml.Serialization.XmlSerializationReader.ToXmlNmToken*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ToXmlNmTokens(System.String)
  id: ToXmlNmTokens(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ToXmlNmTokens(String)
  nameWithType: XmlSerializationReader.ToXmlNmTokens(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToXmlNmTokens(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "XML 이름을 디코딩합니다."
  remarks: "보호 된 멤버의 <xref:System.Xml.Serialization.XmlSerializationReader>.NET Framework XML serialization 인프라에서 내부적으로 사용 되는 파생된 클래스에서 사용 됩니다.</xref:System.Xml.Serialization.XmlSerializationReader>       ToXmlNmTokens 메서드가 정적입니다.       ToXmlNmTokens는 4 자리 16 진수 ucs-2 코드를 유니코드로 변환 합니다."
  syntax:
    content: protected static string ToXmlNmTokens (string value);
    parameters:
    - id: value
      type: System.String
      description: "XML 이름 디코딩할 수입니다."
    return:
      type: System.String
      description: "디코딩된 문자열입니다."
  overload: System.Xml.Serialization.XmlSerializationReader.ToXmlNmTokens*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ToXmlQualifiedName(System.String)
  id: ToXmlQualifiedName(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ToXmlQualifiedName(String)
  nameWithType: XmlSerializationReader.ToXmlQualifiedName(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToXmlQualifiedName(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "가져옵니다는 <xref:System.Xml.XmlQualifiedName>접두사를 포함할 수 있는 이름에서.</xref:System.Xml.XmlQualifiedName>"
  remarks: "보호 된 멤버의 <xref:System.Xml.Serialization.XmlSerializationReader>.NET Framework XML serialization 인프라에서 내부적으로 사용 되는 파생 된 클래스에 의해서만 사용 됩니다.</xref:System.Xml.Serialization.XmlSerializationReader>       접두사가 있는 경우 ToXmlQualifiedName 메서드 현재 XML 문서에 대 한 연결된 된 네임 스페이스를 조회 하 고는 값에는 <xref:System.Xml.XmlQualifiedName>개체입니다.</xref:System.Xml.XmlQualifiedName>"
  syntax:
    content: protected System.Xml.XmlQualifiedName ToXmlQualifiedName (string value);
    parameters:
    - id: value
      type: System.String
      description: "접두사를 포함할 수 있는 이름입니다."
    return:
      type: System.Xml.XmlQualifiedName
      description: "<xref:System.Xml.XmlQualifiedName>XML 정규화 된 네임 스페이스 이름을 나타내는입니다.</xref:System.Xml.XmlQualifiedName>"
  overload: System.Xml.Serialization.XmlSerializationReader.ToXmlQualifiedName*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.UnknownAttribute(System.Object,System.Xml.XmlAttribute)
  id: UnknownAttribute(System.Object,System.Xml.XmlAttribute)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: UnknownAttribute(Object,XmlAttribute)
  nameWithType: XmlSerializationReader.UnknownAttribute(Object,XmlAttribute)
  fullName: System.Xml.Serialization.XmlSerializationReader.UnknownAttribute(Object,XmlAttribute)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "<xref:System.Xml.Serialization.XmlSerializer.UnknownAttribute> <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader> 의 현재 위치에 대 한 이벤트</xref:System.Xml.Serialization.XmlSerializer.UnknownAttribute> 를 발생 시킵니다."
  remarks: "보호 된 멤버의 <xref:System.Xml.Serialization.XmlSerializationReader>.NET Framework XML serialization 인프라에서 내부적으로 사용 되는 파생 된 클래스에 의해서만 사용 됩니다.</xref:System.Xml.Serialization.XmlSerializationReader>       처리기 메서드는 동안 알 수 없는 특성을 처리 하려면 UnknownAttribute 메서드를 추가 <xref:System.Xml.Serialization.XmlSerializer>실행 하는 해당 <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A>메서드.</xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> </xref:System.Xml.Serialization.XmlSerializer>"
  syntax:
    content: protected void UnknownAttribute (object o, System.Xml.XmlAttribute attr);
    parameters:
    - id: o
      type: System.Object
      description: "개체는는 <xref:System.Xml.Serialization.XmlSerializer>역직렬화를 통해 액세스할 수 있는 이후에 하려고는 <xref:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized*>속성.</xref:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized*> </xref:System.Xml.Serialization.XmlSerializer>"
    - id: attr
      type: System.Xml.XmlAttribute
      description: "<xref href=&quot;System.Xml.XmlAttribute&quot;> </xref> 요청한 특성을 나타내는입니다."
  overload: System.Xml.Serialization.XmlSerializationReader.UnknownAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.UnknownAttribute(System.Object,System.Xml.XmlAttribute,System.String)
  id: UnknownAttribute(System.Object,System.Xml.XmlAttribute,System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: UnknownAttribute(Object,XmlAttribute,String)
  nameWithType: XmlSerializationReader.UnknownAttribute(Object,XmlAttribute,String)
  fullName: System.Xml.Serialization.XmlSerializationReader.UnknownAttribute(Object,XmlAttribute,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "<xref:System.Xml.Serialization.XmlSerializer.UnknownAttribute> <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader> 의 현재 위치에 대 한 이벤트</xref:System.Xml.Serialization.XmlSerializer.UnknownAttribute> 를 발생 시킵니다."
  syntax:
    content: protected void UnknownAttribute (object o, System.Xml.XmlAttribute attr, string qnames);
    parameters:
    - id: o
      type: System.Object
      description: "개체는는 <xref:System.Xml.Serialization.XmlSerializer>역직렬화를 통해 액세스할 수 있는 이후에 하려고는 <xref:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized*>속성.</xref:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized*> </xref:System.Xml.Serialization.XmlSerializer>"
    - id: attr
      type: System.Xml.XmlAttribute
      description: "A <xref href=&quot;System.Xml.XmlAttribute&quot;> </xref> 요청한 특성을 나타내는입니다."
    - id: qnames
      type: System.String
      description: "XML의 쉼표로 구분 된 목록에 정규화 된 이름을 합니다."
  overload: System.Xml.Serialization.XmlSerializationReader.UnknownAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.UnknownElement(System.Object,System.Xml.XmlElement)
  id: UnknownElement(System.Object,System.Xml.XmlElement)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: UnknownElement(Object,XmlElement)
  nameWithType: XmlSerializationReader.UnknownElement(Object,XmlElement)
  fullName: System.Xml.Serialization.XmlSerializationReader.UnknownElement(Object,XmlElement)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "<xref:System.Xml.Serialization.XmlSerializer.UnknownElement> <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader> 의 현재 위치에 대 한 이벤트</xref:System.Xml.Serialization.XmlSerializer.UnknownElement> 를 발생 시킵니다."
  syntax:
    content: protected void UnknownElement (object o, System.Xml.XmlElement elem);
    parameters:
    - id: o
      type: System.Object
      description: "<xref:System.Object>역직렬화 하.</xref:System.Object>"
    - id: elem
      type: System.Xml.XmlElement
      description: "<xref href=&quot;System.Xml.XmlElement&quot;> </xref> 이벤트가 발생 하는 것에 대 한 합니다."
  overload: System.Xml.Serialization.XmlSerializationReader.UnknownElement*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.UnknownElement(System.Object,System.Xml.XmlElement,System.String)
  id: UnknownElement(System.Object,System.Xml.XmlElement,System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: UnknownElement(Object,XmlElement,String)
  nameWithType: XmlSerializationReader.UnknownElement(Object,XmlElement,String)
  fullName: System.Xml.Serialization.XmlSerializationReader.UnknownElement(Object,XmlElement,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "<xref:System.Xml.Serialization.XmlSerializer.UnknownElement> <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader> 의 현재 위치에 대 한 이벤트</xref:System.Xml.Serialization.XmlSerializer.UnknownElement> 를 발생 시킵니다."
  syntax:
    content: protected void UnknownElement (object o, System.Xml.XmlElement elem, string qnames);
    parameters:
    - id: o
      type: System.Object
      description: "개체는는 <xref:System.Xml.Serialization.XmlSerializer>역직렬화를 통해 액세스할 수 있는 이후에 하려고는 <xref:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized*>속성.</xref:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized*> </xref:System.Xml.Serialization.XmlSerializer>"
    - id: elem
      type: System.Xml.XmlElement
      description: "<xref href=&quot;System.Xml.XmlElement&quot;> </xref> 이벤트가 발생 하는 것에 대 한 합니다."
    - id: qnames
      type: System.String
      description: "XML의 쉼표로 구분 된 목록에 정규화 된 이름을 합니다."
  overload: System.Xml.Serialization.XmlSerializationReader.UnknownElement*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.UnknownNode(System.Object)
  id: UnknownNode(System.Object)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: UnknownNode(Object)
  nameWithType: XmlSerializationReader.UnknownNode(Object)
  fullName: System.Xml.Serialization.XmlSerializationReader.UnknownNode(Object)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "<xref:System.Xml.Serialization.XmlSerializer.UnknownNode> <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader> 의 현재 위치에 대 한 이벤트</xref:System.Xml.Serialization.XmlSerializer.UnknownNode> 를 발생 시킵니다."
  syntax:
    content: protected void UnknownNode (object o);
    parameters:
    - id: o
      type: System.Object
      description: "역직렬화 하는 개체입니다."
  overload: System.Xml.Serialization.XmlSerializationReader.UnknownNode*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.UnknownNode(System.Object,System.String)
  id: UnknownNode(System.Object,System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: UnknownNode(Object,String)
  nameWithType: XmlSerializationReader.UnknownNode(Object,String)
  fullName: System.Xml.Serialization.XmlSerializationReader.UnknownNode(Object,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "<xref:System.Xml.Serialization.XmlSerializer.UnknownNode> <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader> 의 현재 위치에 대 한 이벤트</xref:System.Xml.Serialization.XmlSerializer.UnknownNode> 를 발생 시킵니다."
  syntax:
    content: protected void UnknownNode (object o, string qnames);
    parameters:
    - id: o
      type: System.Object
      description: "역직렬화 중인 개체입니다."
    - id: qnames
      type: System.String
      description: "XML의 쉼표로 구분 된 목록에 정규화 된 이름을 합니다."
  overload: System.Xml.Serialization.XmlSerializationReader.UnknownNode*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.UnreferencedObject(System.String,System.Object)
  id: UnreferencedObject(System.String,System.Object)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: UnreferencedObject(String,Object)
  nameWithType: XmlSerializationReader.UnreferencedObject(String,Object)
  fullName: System.Xml.Serialization.XmlSerializationReader.UnreferencedObject(String,Object)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "<xref:System.Xml.Serialization.XmlSerializer.UnreferencedObject> <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader> 의 현재 위치에 대 한 이벤트</xref:System.Xml.Serialization.XmlSerializer.UnreferencedObject> 를 발생 시킵니다."
  remarks: "보호 된 멤버의 <xref:System.Xml.Serialization.XmlSerializationReader>.NET Framework XML serialization 인프라에서 내부적으로 사용 되는 파생 된 클래스에 의해서만 사용 됩니다.</xref:System.Xml.Serialization.XmlSerializationReader>       SOAP 메시지에 여러 번 참조 되는 요소를 고려한 SOAP 1.1 사양에 지정 된 Section 5 대로 SOAP 인코딩은 (또는 필요에 따라 한 번만)에서 참조할 수는 `href` 주 메시지의 특성입니다. <xref:System.Xml.Serialization.XmlSerializer.UnreferencedObject>이러한 요소가 나타나지만 없을 때 이벤트 발생 없는 `href` 후 참조</xref:System.Xml.Serialization.XmlSerializer.UnreferencedObject>       처리기 메서드를 추가 <xref:System.Xml.Serialization.XmlSerializer.UnreferencedObject>하는 동안 참조 되지 않은 개체에 대 한 사용자 지정 처리를 제공할 수는 <xref:System.Xml.Serialization.XmlSerializer>실행 해당 <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A>메서드.</xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> </xref:System.Xml.Serialization.XmlSerializer> </xref:System.Xml.Serialization.XmlSerializer.UnreferencedObject>"
  syntax:
    content: protected void UnreferencedObject (string id, object o);
    parameters:
    - id: id
      type: System.String
      description: "이후에 통해 액세스할 수 있는 참조 되지 않은 개체를 식별 하는 데 사용 되는 고유한 문자열은 <xref:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedId*>속성.</xref:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedId*>"
    - id: o
      type: System.Object
      description: "개체는는 <xref:System.Xml.Serialization.XmlSerializer>역직렬화를 통해 액세스할 수 있는 이후에 하려고는 <xref:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedObject*>속성.</xref:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedObject*> </xref:System.Xml.Serialization.XmlSerializer>"
  overload: System.Xml.Serialization.XmlSerializationReader.UnreferencedObject*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Xml.Serialization.XmlSerializationGeneratedCode
  isExternal: false
  name: System.Xml.Serialization.XmlSerializationGeneratedCode
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Xml.Serialization.XmlSerializationReader.#ctor
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: XmlSerializationReader()
  nameWithType: XmlSerializationReader.XmlSerializationReader()
  fullName: System.Xml.Serialization.XmlSerializationReader.XmlSerializationReader()
- uid: System.Xml.Serialization.XmlSerializationReader.AddFixup(System.Xml.Serialization.XmlSerializationReader.CollectionFixup)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: AddFixup(XmlSerializationReader+CollectionFixup)
  nameWithType: XmlSerializationReader.AddFixup(XmlSerializationReader+CollectionFixup)
  fullName: System.Xml.Serialization.XmlSerializationReader.AddFixup(XmlSerializationReader+CollectionFixup)
- uid: System.Xml.Serialization.XmlSerializationReader.CollectionFixup
  parent: System.Xml.Serialization
  isExternal: false
  name: XmlSerializationReader+CollectionFixup
  nameWithType: XmlSerializationReader+CollectionFixup
  fullName: System.Xml.Serialization.XmlSerializationReader+CollectionFixup
- uid: System.Xml.Serialization.XmlSerializationReader.AddFixup(System.Xml.Serialization.XmlSerializationReader.Fixup)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: AddFixup(XmlSerializationReader+Fixup)
  nameWithType: XmlSerializationReader.AddFixup(XmlSerializationReader+Fixup)
  fullName: System.Xml.Serialization.XmlSerializationReader.AddFixup(XmlSerializationReader+Fixup)
- uid: System.Xml.Serialization.XmlSerializationReader.Fixup
  parent: System.Xml.Serialization
  isExternal: false
  name: XmlSerializationReader+Fixup
  nameWithType: XmlSerializationReader+Fixup
  fullName: System.Xml.Serialization.XmlSerializationReader+Fixup
- uid: System.Xml.Serialization.XmlSerializationReader.AddReadCallback(System.String,System.String,System.Type,System.Xml.Serialization.XmlSerializationReadCallback)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: AddReadCallback(String,String,Type,XmlSerializationReadCallback)
  nameWithType: XmlSerializationReader.AddReadCallback(String,String,Type,XmlSerializationReadCallback)
  fullName: System.Xml.Serialization.XmlSerializationReader.AddReadCallback(String,String,Type,XmlSerializationReadCallback)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Xml.Serialization.XmlSerializationReadCallback
  parent: System.Xml.Serialization
  isExternal: false
  name: XmlSerializationReadCallback
  nameWithType: XmlSerializationReadCallback
  fullName: System.Xml.Serialization.XmlSerializationReadCallback
- uid: System.Xml.Serialization.XmlSerializationReader.AddTarget(System.String,System.Object)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: AddTarget(String,Object)
  nameWithType: XmlSerializationReader.AddTarget(String,Object)
  fullName: System.Xml.Serialization.XmlSerializationReader.AddTarget(String,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Xml.Serialization.XmlSerializationReader.CheckReaderCount(System.Int32@,System.Int32@)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: CheckReaderCount(Int32,Int32)
  nameWithType: XmlSerializationReader.CheckReaderCount(Int32,Int32)
  fullName: System.Xml.Serialization.XmlSerializationReader.CheckReaderCount(Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Xml.Serialization.XmlSerializationReader.CollapseWhitespace(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: CollapseWhitespace(String)
  nameWithType: XmlSerializationReader.CollapseWhitespace(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.CollapseWhitespace(String)
- uid: System.Xml.Serialization.XmlSerializationReader.CreateAbstractTypeException(System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: CreateAbstractTypeException(String,String)
  nameWithType: XmlSerializationReader.CreateAbstractTypeException(String,String)
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateAbstractTypeException(String,String)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Xml.Serialization.XmlSerializationReader.CreateBadDerivationException(System.String,System.String,System.String,System.String,System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: CreateBadDerivationException(String,String,String,String,String,String)
  nameWithType: XmlSerializationReader.CreateBadDerivationException(String,String,String,String,String,String)
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateBadDerivationException(String,String,String,String,String,String)
- uid: System.Xml.Serialization.XmlSerializationReader.CreateCtorHasSecurityException(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: CreateCtorHasSecurityException(String)
  nameWithType: XmlSerializationReader.CreateCtorHasSecurityException(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateCtorHasSecurityException(String)
- uid: System.Xml.Serialization.XmlSerializationReader.CreateInaccessibleConstructorException(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: CreateInaccessibleConstructorException(String)
  nameWithType: XmlSerializationReader.CreateInaccessibleConstructorException(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateInaccessibleConstructorException(String)
- uid: System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException(System.Type,System.Object)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: CreateInvalidCastException(Type,Object)
  nameWithType: XmlSerializationReader.CreateInvalidCastException(Type,Object)
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException(Type,Object)
- uid: System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException(System.Type,System.Object,System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: CreateInvalidCastException(Type,Object,String)
  nameWithType: XmlSerializationReader.CreateInvalidCastException(Type,Object,String)
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException(Type,Object,String)
- uid: System.Xml.Serialization.XmlSerializationReader.CreateMissingIXmlSerializableType(System.String,System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: CreateMissingIXmlSerializableType(String,String,String)
  nameWithType: XmlSerializationReader.CreateMissingIXmlSerializableType(String,String,String)
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateMissingIXmlSerializableType(String,String,String)
- uid: System.Xml.Serialization.XmlSerializationReader.CreateReadOnlyCollectionException(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: CreateReadOnlyCollectionException(String)
  nameWithType: XmlSerializationReader.CreateReadOnlyCollectionException(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateReadOnlyCollectionException(String)
- uid: System.Xml.Serialization.XmlSerializationReader.CreateUnknownConstantException(System.String,System.Type)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: CreateUnknownConstantException(String,Type)
  nameWithType: XmlSerializationReader.CreateUnknownConstantException(String,Type)
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateUnknownConstantException(String,Type)
- uid: System.Xml.Serialization.XmlSerializationReader.CreateUnknownNodeException
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: CreateUnknownNodeException()
  nameWithType: XmlSerializationReader.CreateUnknownNodeException()
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateUnknownNodeException()
- uid: System.Xml.Serialization.XmlSerializationReader.CreateUnknownTypeException(System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: CreateUnknownTypeException(XmlQualifiedName)
  nameWithType: XmlSerializationReader.CreateUnknownTypeException(XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateUnknownTypeException(XmlQualifiedName)
- uid: System.Xml.XmlQualifiedName
  parent: System.Xml
  isExternal: true
  name: XmlQualifiedName
  nameWithType: XmlQualifiedName
  fullName: System.Xml.XmlQualifiedName
- uid: System.Xml.Serialization.XmlSerializationReader.DecodeName
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: DecodeName
  nameWithType: XmlSerializationReader.DecodeName
  fullName: System.Xml.Serialization.XmlSerializationReader.DecodeName
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.Serialization.XmlSerializationReader.Document
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: Document
  nameWithType: XmlSerializationReader.Document
  fullName: System.Xml.Serialization.XmlSerializationReader.Document
- uid: System.Xml.XmlDocument
  parent: System.Xml
  isExternal: false
  name: XmlDocument
  nameWithType: XmlDocument
  fullName: System.Xml.XmlDocument
- uid: System.Xml.Serialization.XmlSerializationReader.EnsureArrayIndex(System.Array,System.Int32,System.Type)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: EnsureArrayIndex(Array,Int32,Type)
  nameWithType: XmlSerializationReader.EnsureArrayIndex(Array,Int32,Type)
  fullName: System.Xml.Serialization.XmlSerializationReader.EnsureArrayIndex(Array,Int32,Type)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Xml.Serialization.XmlSerializationReader.FixupArrayRefs(System.Object)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: FixupArrayRefs(Object)
  nameWithType: XmlSerializationReader.FixupArrayRefs(Object)
  fullName: System.Xml.Serialization.XmlSerializationReader.FixupArrayRefs(Object)
- uid: System.Xml.Serialization.XmlSerializationReader.GetArrayLength(System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: GetArrayLength(String,String)
  nameWithType: XmlSerializationReader.GetArrayLength(String,String)
  fullName: System.Xml.Serialization.XmlSerializationReader.GetArrayLength(String,String)
- uid: System.Xml.Serialization.XmlSerializationReader.GetNullAttr
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: GetNullAttr()
  nameWithType: XmlSerializationReader.GetNullAttr()
  fullName: System.Xml.Serialization.XmlSerializationReader.GetNullAttr()
- uid: System.Xml.Serialization.XmlSerializationReader.GetTarget(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: GetTarget(String)
  nameWithType: XmlSerializationReader.GetTarget(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.GetTarget(String)
- uid: System.Xml.Serialization.XmlSerializationReader.GetXsiType
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: GetXsiType()
  nameWithType: XmlSerializationReader.GetXsiType()
  fullName: System.Xml.Serialization.XmlSerializationReader.GetXsiType()
- uid: System.Xml.Serialization.XmlSerializationReader.InitCallbacks
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: InitCallbacks()
  nameWithType: XmlSerializationReader.InitCallbacks()
  fullName: System.Xml.Serialization.XmlSerializationReader.InitCallbacks()
- uid: System.Xml.Serialization.XmlSerializationReader.InitIDs
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: InitIDs()
  nameWithType: XmlSerializationReader.InitIDs()
  fullName: System.Xml.Serialization.XmlSerializationReader.InitIDs()
- uid: System.Xml.Serialization.XmlSerializationReader.IsReturnValue
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: IsReturnValue
  nameWithType: XmlSerializationReader.IsReturnValue
  fullName: System.Xml.Serialization.XmlSerializationReader.IsReturnValue
- uid: System.Xml.Serialization.XmlSerializationReader.IsXmlnsAttribute(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: IsXmlnsAttribute(String)
  nameWithType: XmlSerializationReader.IsXmlnsAttribute(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.IsXmlnsAttribute(String)
- uid: System.Xml.Serialization.XmlSerializationReader.ParseWsdlArrayType(System.Xml.XmlAttribute)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ParseWsdlArrayType(XmlAttribute)
  nameWithType: XmlSerializationReader.ParseWsdlArrayType(XmlAttribute)
  fullName: System.Xml.Serialization.XmlSerializationReader.ParseWsdlArrayType(XmlAttribute)
- uid: System.Xml.XmlAttribute
  parent: System.Xml
  isExternal: false
  name: XmlAttribute
  nameWithType: XmlAttribute
  fullName: System.Xml.XmlAttribute
- uid: System.Xml.Serialization.XmlSerializationReader.ReadElementQualifiedName
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadElementQualifiedName()
  nameWithType: XmlSerializationReader.ReadElementQualifiedName()
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadElementQualifiedName()
- uid: System.Xml.Serialization.XmlSerializationReader.ReadEndElement
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadEndElement()
  nameWithType: XmlSerializationReader.ReadEndElement()
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadEndElement()
- uid: System.Xml.Serialization.XmlSerializationReader.Reader
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: Reader
  nameWithType: XmlSerializationReader.Reader
  fullName: System.Xml.Serialization.XmlSerializationReader.Reader
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Xml.Serialization.XmlSerializationReader.ReaderCount
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReaderCount
  nameWithType: XmlSerializationReader.ReaderCount
  fullName: System.Xml.Serialization.XmlSerializationReader.ReaderCount
- uid: System.Xml.Serialization.XmlSerializationReader.ReadNull
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadNull()
  nameWithType: XmlSerializationReader.ReadNull()
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadNull()
- uid: System.Xml.Serialization.XmlSerializationReader.ReadNullableQualifiedName
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadNullableQualifiedName()
  nameWithType: XmlSerializationReader.ReadNullableQualifiedName()
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadNullableQualifiedName()
- uid: System.Xml.Serialization.XmlSerializationReader.ReadNullableString
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadNullableString()
  nameWithType: XmlSerializationReader.ReadNullableString()
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadNullableString()
- uid: System.Xml.Serialization.XmlSerializationReader.ReadReference(System.String@)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadReference(String)
  nameWithType: XmlSerializationReader.ReadReference(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadReference(String)
- uid: System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadReferencedElement()
  nameWithType: XmlSerializationReader.ReadReferencedElement()
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement()
- uid: System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement(System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadReferencedElement(String,String)
  nameWithType: XmlSerializationReader.ReadReferencedElement(String,String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement(String,String)
- uid: System.Xml.Serialization.XmlSerializationReader.ReadReferencedElements
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadReferencedElements()
  nameWithType: XmlSerializationReader.ReadReferencedElements()
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadReferencedElements()
- uid: System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String@)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadReferencingElement(String)
  nameWithType: XmlSerializationReader.ReadReferencingElement(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(String)
- uid: System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String,System.String,System.String@)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadReferencingElement(String,String,String)
  nameWithType: XmlSerializationReader.ReadReferencingElement(String,String,String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(String,String,String)
- uid: System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String,System.String,System.Boolean,System.String@)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadReferencingElement(String,String,Boolean,String)
  nameWithType: XmlSerializationReader.ReadReferencingElement(String,String,Boolean,String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(String,String,Boolean,String)
- uid: System.Xml.Serialization.XmlSerializationReader.ReadSerializable(System.Xml.Serialization.IXmlSerializable)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadSerializable(IXmlSerializable)
  nameWithType: XmlSerializationReader.ReadSerializable(IXmlSerializable)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadSerializable(IXmlSerializable)
- uid: System.Xml.Serialization.IXmlSerializable
  parent: System.Xml.Serialization
  isExternal: true
  name: IXmlSerializable
  nameWithType: IXmlSerializable
  fullName: System.Xml.Serialization.IXmlSerializable
- uid: System.Xml.Serialization.XmlSerializationReader.ReadSerializable(System.Xml.Serialization.IXmlSerializable,System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadSerializable(IXmlSerializable,Boolean)
  nameWithType: XmlSerializationReader.ReadSerializable(IXmlSerializable,Boolean)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadSerializable(IXmlSerializable,Boolean)
- uid: System.Xml.Serialization.XmlSerializationReader.ReadString(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadString(String)
  nameWithType: XmlSerializationReader.ReadString(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadString(String)
- uid: System.Xml.Serialization.XmlSerializationReader.ReadString(System.String,System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadString(String,Boolean)
  nameWithType: XmlSerializationReader.ReadString(String,Boolean)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadString(String,Boolean)
- uid: System.Xml.Serialization.XmlSerializationReader.ReadTypedNull(System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadTypedNull(XmlQualifiedName)
  nameWithType: XmlSerializationReader.ReadTypedNull(XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadTypedNull(XmlQualifiedName)
- uid: System.Xml.Serialization.XmlSerializationReader.ReadTypedPrimitive(System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadTypedPrimitive(XmlQualifiedName)
  nameWithType: XmlSerializationReader.ReadTypedPrimitive(XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadTypedPrimitive(XmlQualifiedName)
- uid: System.Xml.Serialization.XmlSerializationReader.ReadXmlDocument(System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadXmlDocument(Boolean)
  nameWithType: XmlSerializationReader.ReadXmlDocument(Boolean)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadXmlDocument(Boolean)
- uid: System.Xml.Serialization.XmlSerializationReader.ReadXmlNode(System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadXmlNode(Boolean)
  nameWithType: XmlSerializationReader.ReadXmlNode(Boolean)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadXmlNode(Boolean)
- uid: System.Xml.XmlNode
  parent: System.Xml
  isExternal: false
  name: XmlNode
  nameWithType: XmlNode
  fullName: System.Xml.XmlNode
- uid: System.Xml.Serialization.XmlSerializationReader.Referenced(System.Object)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: Referenced(Object)
  nameWithType: XmlSerializationReader.Referenced(Object)
  fullName: System.Xml.Serialization.XmlSerializationReader.Referenced(Object)
- uid: System.Xml.Serialization.XmlSerializationReader.ResolveDynamicAssembly(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ResolveDynamicAssembly(String)
  nameWithType: XmlSerializationReader.ResolveDynamicAssembly(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ResolveDynamicAssembly(String)
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: true
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Xml.Serialization.XmlSerializationReader.ShrinkArray(System.Array,System.Int32,System.Type,System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ShrinkArray(Array,Int32,Type,Boolean)
  nameWithType: XmlSerializationReader.ShrinkArray(Array,Int32,Type,Boolean)
  fullName: System.Xml.Serialization.XmlSerializationReader.ShrinkArray(Array,Int32,Type,Boolean)
- uid: System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64(System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ToByteArrayBase64(Boolean)
  nameWithType: XmlSerializationReader.ToByteArrayBase64(Boolean)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64(Boolean)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ToByteArrayBase64(String)
  nameWithType: XmlSerializationReader.ToByteArrayBase64(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64(String)
- uid: System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex(System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ToByteArrayHex(Boolean)
  nameWithType: XmlSerializationReader.ToByteArrayHex(Boolean)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex(Boolean)
- uid: System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ToByteArrayHex(String)
  nameWithType: XmlSerializationReader.ToByteArrayHex(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex(String)
- uid: System.Xml.Serialization.XmlSerializationReader.ToChar(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ToChar(String)
  nameWithType: XmlSerializationReader.ToChar(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToChar(String)
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Xml.Serialization.XmlSerializationReader.ToDate(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ToDate(String)
  nameWithType: XmlSerializationReader.ToDate(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToDate(String)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Xml.Serialization.XmlSerializationReader.ToDateTime(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ToDateTime(String)
  nameWithType: XmlSerializationReader.ToDateTime(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToDateTime(String)
- uid: System.Xml.Serialization.XmlSerializationReader.ToEnum(System.String,System.Collections.Hashtable,System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ToEnum(String,Hashtable,String)
  nameWithType: XmlSerializationReader.ToEnum(String,Hashtable,String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToEnum(String,Hashtable,String)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Collections.Hashtable
  parent: System.Collections
  isExternal: false
  name: Hashtable
  nameWithType: Hashtable
  fullName: System.Collections.Hashtable
- uid: System.Xml.Serialization.XmlSerializationReader.ToTime(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ToTime(String)
  nameWithType: XmlSerializationReader.ToTime(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToTime(String)
- uid: System.Xml.Serialization.XmlSerializationReader.ToXmlName(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ToXmlName(String)
  nameWithType: XmlSerializationReader.ToXmlName(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToXmlName(String)
- uid: System.Xml.Serialization.XmlSerializationReader.ToXmlNCName(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ToXmlNCName(String)
  nameWithType: XmlSerializationReader.ToXmlNCName(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToXmlNCName(String)
- uid: System.Xml.Serialization.XmlSerializationReader.ToXmlNmToken(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ToXmlNmToken(String)
  nameWithType: XmlSerializationReader.ToXmlNmToken(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToXmlNmToken(String)
- uid: System.Xml.Serialization.XmlSerializationReader.ToXmlNmTokens(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ToXmlNmTokens(String)
  nameWithType: XmlSerializationReader.ToXmlNmTokens(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToXmlNmTokens(String)
- uid: System.Xml.Serialization.XmlSerializationReader.ToXmlQualifiedName(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ToXmlQualifiedName(String)
  nameWithType: XmlSerializationReader.ToXmlQualifiedName(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToXmlQualifiedName(String)
- uid: System.Xml.Serialization.XmlSerializationReader.UnknownAttribute(System.Object,System.Xml.XmlAttribute)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: UnknownAttribute(Object,XmlAttribute)
  nameWithType: XmlSerializationReader.UnknownAttribute(Object,XmlAttribute)
  fullName: System.Xml.Serialization.XmlSerializationReader.UnknownAttribute(Object,XmlAttribute)
- uid: System.Xml.Serialization.XmlSerializationReader.UnknownAttribute(System.Object,System.Xml.XmlAttribute,System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: UnknownAttribute(Object,XmlAttribute,String)
  nameWithType: XmlSerializationReader.UnknownAttribute(Object,XmlAttribute,String)
  fullName: System.Xml.Serialization.XmlSerializationReader.UnknownAttribute(Object,XmlAttribute,String)
- uid: System.Xml.Serialization.XmlSerializationReader.UnknownElement(System.Object,System.Xml.XmlElement)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: UnknownElement(Object,XmlElement)
  nameWithType: XmlSerializationReader.UnknownElement(Object,XmlElement)
  fullName: System.Xml.Serialization.XmlSerializationReader.UnknownElement(Object,XmlElement)
- uid: System.Xml.XmlElement
  parent: System.Xml
  isExternal: false
  name: XmlElement
  nameWithType: XmlElement
  fullName: System.Xml.XmlElement
- uid: System.Xml.Serialization.XmlSerializationReader.UnknownElement(System.Object,System.Xml.XmlElement,System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: UnknownElement(Object,XmlElement,String)
  nameWithType: XmlSerializationReader.UnknownElement(Object,XmlElement,String)
  fullName: System.Xml.Serialization.XmlSerializationReader.UnknownElement(Object,XmlElement,String)
- uid: System.Xml.Serialization.XmlSerializationReader.UnknownNode(System.Object)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: UnknownNode(Object)
  nameWithType: XmlSerializationReader.UnknownNode(Object)
  fullName: System.Xml.Serialization.XmlSerializationReader.UnknownNode(Object)
- uid: System.Xml.Serialization.XmlSerializationReader.UnknownNode(System.Object,System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: UnknownNode(Object,String)
  nameWithType: XmlSerializationReader.UnknownNode(Object,String)
  fullName: System.Xml.Serialization.XmlSerializationReader.UnknownNode(Object,String)
- uid: System.Xml.Serialization.XmlSerializationReader.UnreferencedObject(System.String,System.Object)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: UnreferencedObject(String,Object)
  nameWithType: XmlSerializationReader.UnreferencedObject(String,Object)
  fullName: System.Xml.Serialization.XmlSerializationReader.UnreferencedObject(String,Object)
- uid: System.Xml.Serialization.XmlSerializationReader.#ctor*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: XmlSerializationReader
  nameWithType: XmlSerializationReader.XmlSerializationReader
- uid: System.Xml.Serialization.XmlSerializationReader.AddFixup*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: AddFixup
  nameWithType: XmlSerializationReader.AddFixup
- uid: System.Xml.Serialization.XmlSerializationReader.AddReadCallback*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: AddReadCallback
  nameWithType: XmlSerializationReader.AddReadCallback
- uid: System.Xml.Serialization.XmlSerializationReader.AddTarget*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: AddTarget
  nameWithType: XmlSerializationReader.AddTarget
- uid: System.Xml.Serialization.XmlSerializationReader.CheckReaderCount*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: CheckReaderCount
  nameWithType: XmlSerializationReader.CheckReaderCount
- uid: System.Xml.Serialization.XmlSerializationReader.CollapseWhitespace*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: CollapseWhitespace
  nameWithType: XmlSerializationReader.CollapseWhitespace
- uid: System.Xml.Serialization.XmlSerializationReader.CreateAbstractTypeException*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: CreateAbstractTypeException
  nameWithType: XmlSerializationReader.CreateAbstractTypeException
- uid: System.Xml.Serialization.XmlSerializationReader.CreateBadDerivationException*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: CreateBadDerivationException
  nameWithType: XmlSerializationReader.CreateBadDerivationException
- uid: System.Xml.Serialization.XmlSerializationReader.CreateCtorHasSecurityException*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: CreateCtorHasSecurityException
  nameWithType: XmlSerializationReader.CreateCtorHasSecurityException
- uid: System.Xml.Serialization.XmlSerializationReader.CreateInaccessibleConstructorException*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: CreateInaccessibleConstructorException
  nameWithType: XmlSerializationReader.CreateInaccessibleConstructorException
- uid: System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: CreateInvalidCastException
  nameWithType: XmlSerializationReader.CreateInvalidCastException
- uid: System.Xml.Serialization.XmlSerializationReader.CreateMissingIXmlSerializableType*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: CreateMissingIXmlSerializableType
  nameWithType: XmlSerializationReader.CreateMissingIXmlSerializableType
- uid: System.Xml.Serialization.XmlSerializationReader.CreateReadOnlyCollectionException*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: CreateReadOnlyCollectionException
  nameWithType: XmlSerializationReader.CreateReadOnlyCollectionException
- uid: System.Xml.Serialization.XmlSerializationReader.CreateUnknownConstantException*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: CreateUnknownConstantException
  nameWithType: XmlSerializationReader.CreateUnknownConstantException
- uid: System.Xml.Serialization.XmlSerializationReader.CreateUnknownNodeException*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: CreateUnknownNodeException
  nameWithType: XmlSerializationReader.CreateUnknownNodeException
- uid: System.Xml.Serialization.XmlSerializationReader.CreateUnknownTypeException*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: CreateUnknownTypeException
  nameWithType: XmlSerializationReader.CreateUnknownTypeException
- uid: System.Xml.Serialization.XmlSerializationReader.DecodeName*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: DecodeName
  nameWithType: XmlSerializationReader.DecodeName
- uid: System.Xml.Serialization.XmlSerializationReader.Document*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: Document
  nameWithType: XmlSerializationReader.Document
- uid: System.Xml.Serialization.XmlSerializationReader.EnsureArrayIndex*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: EnsureArrayIndex
  nameWithType: XmlSerializationReader.EnsureArrayIndex
- uid: System.Xml.Serialization.XmlSerializationReader.FixupArrayRefs*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: FixupArrayRefs
  nameWithType: XmlSerializationReader.FixupArrayRefs
- uid: System.Xml.Serialization.XmlSerializationReader.GetArrayLength*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: GetArrayLength
  nameWithType: XmlSerializationReader.GetArrayLength
- uid: System.Xml.Serialization.XmlSerializationReader.GetNullAttr*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: GetNullAttr
  nameWithType: XmlSerializationReader.GetNullAttr
- uid: System.Xml.Serialization.XmlSerializationReader.GetTarget*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: GetTarget
  nameWithType: XmlSerializationReader.GetTarget
- uid: System.Xml.Serialization.XmlSerializationReader.GetXsiType*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: GetXsiType
  nameWithType: XmlSerializationReader.GetXsiType
- uid: System.Xml.Serialization.XmlSerializationReader.InitCallbacks*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: InitCallbacks
  nameWithType: XmlSerializationReader.InitCallbacks
- uid: System.Xml.Serialization.XmlSerializationReader.InitIDs*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: InitIDs
  nameWithType: XmlSerializationReader.InitIDs
- uid: System.Xml.Serialization.XmlSerializationReader.IsReturnValue*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: IsReturnValue
  nameWithType: XmlSerializationReader.IsReturnValue
- uid: System.Xml.Serialization.XmlSerializationReader.IsXmlnsAttribute*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: IsXmlnsAttribute
  nameWithType: XmlSerializationReader.IsXmlnsAttribute
- uid: System.Xml.Serialization.XmlSerializationReader.ParseWsdlArrayType*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ParseWsdlArrayType
  nameWithType: XmlSerializationReader.ParseWsdlArrayType
- uid: System.Xml.Serialization.XmlSerializationReader.ReadElementQualifiedName*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadElementQualifiedName
  nameWithType: XmlSerializationReader.ReadElementQualifiedName
- uid: System.Xml.Serialization.XmlSerializationReader.ReadEndElement*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadEndElement
  nameWithType: XmlSerializationReader.ReadEndElement
- uid: System.Xml.Serialization.XmlSerializationReader.Reader*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: Reader
  nameWithType: XmlSerializationReader.Reader
- uid: System.Xml.Serialization.XmlSerializationReader.ReaderCount*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReaderCount
  nameWithType: XmlSerializationReader.ReaderCount
- uid: System.Xml.Serialization.XmlSerializationReader.ReadNull*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadNull
  nameWithType: XmlSerializationReader.ReadNull
- uid: System.Xml.Serialization.XmlSerializationReader.ReadNullableQualifiedName*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadNullableQualifiedName
  nameWithType: XmlSerializationReader.ReadNullableQualifiedName
- uid: System.Xml.Serialization.XmlSerializationReader.ReadNullableString*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadNullableString
  nameWithType: XmlSerializationReader.ReadNullableString
- uid: System.Xml.Serialization.XmlSerializationReader.ReadReference*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadReference
  nameWithType: XmlSerializationReader.ReadReference
- uid: System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadReferencedElement
  nameWithType: XmlSerializationReader.ReadReferencedElement
- uid: System.Xml.Serialization.XmlSerializationReader.ReadReferencedElements*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadReferencedElements
  nameWithType: XmlSerializationReader.ReadReferencedElements
- uid: System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadReferencingElement
  nameWithType: XmlSerializationReader.ReadReferencingElement
- uid: System.Xml.Serialization.XmlSerializationReader.ReadSerializable*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadSerializable
  nameWithType: XmlSerializationReader.ReadSerializable
- uid: System.Xml.Serialization.XmlSerializationReader.ReadString*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadString
  nameWithType: XmlSerializationReader.ReadString
- uid: System.Xml.Serialization.XmlSerializationReader.ReadTypedNull*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadTypedNull
  nameWithType: XmlSerializationReader.ReadTypedNull
- uid: System.Xml.Serialization.XmlSerializationReader.ReadTypedPrimitive*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadTypedPrimitive
  nameWithType: XmlSerializationReader.ReadTypedPrimitive
- uid: System.Xml.Serialization.XmlSerializationReader.ReadXmlDocument*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadXmlDocument
  nameWithType: XmlSerializationReader.ReadXmlDocument
- uid: System.Xml.Serialization.XmlSerializationReader.ReadXmlNode*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadXmlNode
  nameWithType: XmlSerializationReader.ReadXmlNode
- uid: System.Xml.Serialization.XmlSerializationReader.Referenced*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: Referenced
  nameWithType: XmlSerializationReader.Referenced
- uid: System.Xml.Serialization.XmlSerializationReader.ResolveDynamicAssembly*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ResolveDynamicAssembly
  nameWithType: XmlSerializationReader.ResolveDynamicAssembly
- uid: System.Xml.Serialization.XmlSerializationReader.ShrinkArray*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ShrinkArray
  nameWithType: XmlSerializationReader.ShrinkArray
- uid: System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ToByteArrayBase64
  nameWithType: XmlSerializationReader.ToByteArrayBase64
- uid: System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ToByteArrayHex
  nameWithType: XmlSerializationReader.ToByteArrayHex
- uid: System.Xml.Serialization.XmlSerializationReader.ToChar*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ToChar
  nameWithType: XmlSerializationReader.ToChar
- uid: System.Xml.Serialization.XmlSerializationReader.ToDate*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ToDate
  nameWithType: XmlSerializationReader.ToDate
- uid: System.Xml.Serialization.XmlSerializationReader.ToDateTime*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ToDateTime
  nameWithType: XmlSerializationReader.ToDateTime
- uid: System.Xml.Serialization.XmlSerializationReader.ToEnum*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ToEnum
  nameWithType: XmlSerializationReader.ToEnum
- uid: System.Xml.Serialization.XmlSerializationReader.ToTime*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ToTime
  nameWithType: XmlSerializationReader.ToTime
- uid: System.Xml.Serialization.XmlSerializationReader.ToXmlName*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ToXmlName
  nameWithType: XmlSerializationReader.ToXmlName
- uid: System.Xml.Serialization.XmlSerializationReader.ToXmlNCName*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ToXmlNCName
  nameWithType: XmlSerializationReader.ToXmlNCName
- uid: System.Xml.Serialization.XmlSerializationReader.ToXmlNmToken*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ToXmlNmToken
  nameWithType: XmlSerializationReader.ToXmlNmToken
- uid: System.Xml.Serialization.XmlSerializationReader.ToXmlNmTokens*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ToXmlNmTokens
  nameWithType: XmlSerializationReader.ToXmlNmTokens
- uid: System.Xml.Serialization.XmlSerializationReader.ToXmlQualifiedName*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ToXmlQualifiedName
  nameWithType: XmlSerializationReader.ToXmlQualifiedName
- uid: System.Xml.Serialization.XmlSerializationReader.UnknownAttribute*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: UnknownAttribute
  nameWithType: XmlSerializationReader.UnknownAttribute
- uid: System.Xml.Serialization.XmlSerializationReader.UnknownElement*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: UnknownElement
  nameWithType: XmlSerializationReader.UnknownElement
- uid: System.Xml.Serialization.XmlSerializationReader.UnknownNode*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: UnknownNode
  nameWithType: XmlSerializationReader.UnknownNode
- uid: System.Xml.Serialization.XmlSerializationReader.UnreferencedObject*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: UnreferencedObject
  nameWithType: XmlSerializationReader.UnreferencedObject
