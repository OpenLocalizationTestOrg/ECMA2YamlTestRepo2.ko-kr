### YamlMime:ManagedReference
items:
- uid: System.IO.Compression.ZipFile
  id: ZipFile
  children:
  - System.IO.Compression.ZipFile.CreateFromDirectory(System.String,System.String)
  - System.IO.Compression.ZipFile.CreateFromDirectory(System.String,System.String,System.IO.Compression.CompressionLevel,System.Boolean)
  - System.IO.Compression.ZipFile.CreateFromDirectory(System.String,System.String,System.IO.Compression.CompressionLevel,System.Boolean,System.Text.Encoding)
  - System.IO.Compression.ZipFile.ExtractToDirectory(System.String,System.String)
  - System.IO.Compression.ZipFile.ExtractToDirectory(System.String,System.String,System.Text.Encoding)
  - System.IO.Compression.ZipFile.Open(System.String,System.IO.Compression.ZipArchiveMode)
  - System.IO.Compression.ZipFile.Open(System.String,System.IO.Compression.ZipArchiveMode,System.Text.Encoding)
  - System.IO.Compression.ZipFile.OpenRead(System.String)
  langs:
  - csharp
  name: ZipFile
  nameWithType: ZipFile
  fullName: System.IO.Compression.ZipFile
  type: Class
  summary: "Zip 보관 파일 만들기, 추출 및 열기 위한 정적 메서드를 제공 합니다."
  remarks: "> [!IMPORTANT]>에 대 한 참조를 추가 해야 ZipFile 클래스를 사용 하는 `System.IO.Compression.FileSystem` ; 프로젝트에 어셈블리 그렇지 않으면 메시지가 표시 됩니다는 다음과 같은 오류를 컴파일할 때: **&quot;ZipFile&quot;가 현재 컨텍스트에 없습니다. 이름**합니다. Visual Studio에서 프로젝트에 대 한 참조를 추가 하는 방법에 대 한 자세한 내용은 참조 하십시오. [하는 방법: 참조 추가 또는 제거 참조 관리자를 사용 하 여](~/add/includes/ajax-current-ext-md.md)합니다.       Zip 보관 파일 및 파일을 조작 하기 위한 메서드 분산 되는 세 가지 클래스: ZipFile, <xref:System.IO.Compression.ZipArchive>및 <xref:System.IO.Compression.ZipArchiveEntry>.</xref:System.IO.Compression.ZipArchiveEntry> </xref:System.IO.Compression.ZipArchive>      | ... | 사용... |   |---------|----------|   | 디렉터리에서 zip 보관 파일 만들기 | <xref:System.IO.Compression.ZipFile.CreateFromDirectory%2A?displayProperty=fullName>|   | 디렉터리를 zip 보관 파일의 내용을 추출 | <xref:System.IO.Compression.ZipFile.ExtractToDirectory%2A?displayProperty=fullName>|   | 새 파일 기존 zip 보관 파일을 추가 | <xref:System.IO.Compression.ZipArchive.CreateEntry%2A?displayProperty=fullName>|   | Zip 보관 파일의 파일을 검색할 | <xref:System.IO.Compression.ZipArchive.GetEntry%2A?displayProperty=fullName>|   | Zip 보관 파일에 있는 파일의 모든 검색 | <xref:System.IO.Compression.ZipArchive.Entries%2A?displayProperty=fullName>|   | Zip 보관 파일에 포함 된 개별 파일에 스트림을 여 | <xref:System.IO.Compression.ZipArchiveEntry.Open%2A?displayProperty=fullName>|   | Zip 보관 파일에서 파일을 삭제 | <xref:System.IO.Compression.ZipArchiveEntry.Delete%2A?displayProperty=fullName>|       ZipFile를 사용할 수 없습니다 또는 <xref:System.IO.Compression.ZipFileExtensions>에 있는 클래스 [!INCLUDE[win8_appname_long](~/add/includes/win8-appname-long-md.md)] 앱.</xref:System.IO.Compression.ZipFileExtensions> </xref:System.IO.Compression.ZipArchiveEntry.Delete%2A?displayProperty=fullName> </xref:System.IO.Compression.ZipArchiveEntry.Open%2A?displayProperty=fullName> </xref:System.IO.Compression.ZipArchive.Entries%2A?displayProperty=fullName> </xref:System.IO.Compression.ZipArchive.GetEntry%2A?displayProperty=fullName> </xref:System.IO.Compression.ZipArchive.CreateEntry%2A?displayProperty=fullName> </xref:System.IO.Compression.ZipFile.ExtractToDirectory%2A?displayProperty=fullName> </xref:System.IO.Compression.ZipFile.CreateFromDirectory%2A?displayProperty=fullName> [!INCLUDE[win8_appname_long](~/add/includes/win8-appname-long-md.md)] 앱의 경우 압축 된 파일을 사용 하는 다음 클래스를 사용 해야 합니다.      -   <xref:System.IO.Compression.ZipArchive>      -   <xref:System.IO.Compression.ZipArchiveEntry>      -   <xref:System.IO.Compression.DeflateStream>      -   <xref:System.IO.Compression.GZipStream></xref:System.IO.Compression.GZipStream></xref:System.IO.Compression.DeflateStream></xref:System.IO.Compression.ZipArchiveEntry></xref:System.IO.Compression.ZipArchive>"
  example:
  - "This example shows how to create and extract a zip archive by using the ZipFile class. It compresses the contents of a folder into a zip archive, and then extracts that content to a new folder.  \n  \n> [!TIP]\n>  To use the ZipFile class, you must reference the `System.IO.Compression.FileSystem` assembly in your project.  \n  \n [!code-cs[System.IO.Compression.ZipFile#1](~/add/codesnippet/csharp/t-system.io.compression._3_1.cs)]\n [!code-vb[System.IO.Compression.ZipFile#1](~/add/codesnippet/visualbasic/t-system.io.compression._3_1.vb)]"
  syntax:
    content: public static class ZipFile
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IO.Compression.ZipFile.CreateFromDirectory(System.String,System.String)
  id: CreateFromDirectory(System.String,System.String)
  parent: System.IO.Compression.ZipFile
  langs:
  - csharp
  name: CreateFromDirectory(String,String)
  nameWithType: ZipFile.CreateFromDirectory(String,String)
  fullName: System.IO.Compression.ZipFile.CreateFromDirectory(String,String)
  type: Method
  assemblies:
  - System.IO.Compression.FileSystem
  namespace: System.IO.Compression
  summary: "파일 및 지정된 된 디렉터리에서 디렉터리를 포함 하는 zip 보관 파일을 만듭니다."
  remarks: "파일 시스템에서 디렉터리 구조는 보관 파일에 유지 됩니다. 디렉터리가 비어 있으면 빈 아카이브 생성 됩니다. 이 메서드 오버 로드는 보관 파일의 기본 디렉터리를 포함 하지 않습니다 및 압축 수준을 지정할 수는 없습니다. 기본 디렉터리를 포함 하거나 압축 수준 호출을 지정 하려는 경우는 <xref:System.IO.Compression.ZipFile.CreateFromDirectory%28System.String%2CSystem.String%2CSystem.IO.Compression.CompressionLevel%2CSystem.Boolean%29>메서드 오버 로드.</xref:System.IO.Compression.ZipFile.CreateFromDirectory%28System.String%2CSystem.String%2CSystem.IO.Compression.CompressionLevel%2CSystem.Boolean%29>       보관 파일에 이미 있으면는 <xref:System.IO.IOException>예외가 throw 됩니다.</xref:System.IO.IOException> 지정한 이름 가진 엔터티가 이미 보관 되어 있는, 두 번째 항목을 동일한 이름으로 만들어집니다.       디렉터리에 파일 보관 파일에 추가할 수 없습니다, 불완전 하거나 유효 하지 않은, 아카이브는 그대로 남아 있으며 메서드에서 throw 하는 경우는 <xref:System.IO.IOException>예외.</xref:System.IO.IOException>"
  example:
  - "This example shows how to create and extract a zip archive by using the <xref:System.IO.Compression.ZipFile> class. It compresses the contents of a folder into a zip archive, and then extracts that content to a new folder. To use the <xref:System.IO.Compression.ZipFile> class, you must reference the `System.IO.Compression.FileSystem` assembly in your project.  \n  \n [!code-cs[System.IO.Compression.ZipFile#1](~/add/codesnippet/csharp/m-system.io.compression._3_1.cs)]\n [!code-vb[System.IO.Compression.ZipFile#1](~/add/codesnippet/visualbasic/m-system.io.compression._3_1.vb)]"
  syntax:
    content: public static void CreateFromDirectory (string sourceDirectoryName, string destinationArchiveFileName);
    parameters:
    - id: sourceDirectoryName
      type: System.String
      description: "디렉터리에 보관 하, 상대 또는 절대 경로로 지정 된 경로입니다. 상대 경로 현재 작업 디렉터리에 상대적으로 해석 됩니다."
    - id: destinationArchiveFileName
      type: System.String
      description: "상대 또는 절대 경로로 지정을 만들 보관 파일의 경로입니다. 상대 경로 현재 작업 디렉터리에 상대적으로 해석 됩니다."
  overload: System.IO.Compression.ZipFile.CreateFromDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>sourceDirectoryName</code>또는 <code>destinationArchiveFileName</code> 은 <xref:System.String>공백만 포함 하거나 하나 이상의 잘못 된 문자를 포함 합니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>sourceDirectoryName</code>or <code>destinationArchiveFileName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "<code> sourceDirectoryName </code> 또는 <code> destinationArchiveFileName </code>, 지정된 된 경로, 파일 이름 또는 둘 다 시스템 정의 최대 길이 초과 합니다. 예를 들어 Windows 기반 플랫폼에서 경로 248 자를 초과할 수 없습니다 및 파일 이름은 260 자를 초과 하지 않아야 합니다."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "<code>sourceDirectoryName</code>유효 하지 않거나 존재 하지 않습니다 (예를 들어이 매핑되지 않은 드라이브에 있음)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>destinationArchiveFileName</code>이미 존재합니다.       -또는-지정된 된 디렉터리에서 파일을 열 수 없습니다."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>destinationArchiveFileName</code>디렉터리를 지정합니다.       -또는-호출자에 게 필요한 권한을에 지정 된 디렉터리에 액세스할 수 없는 <code>sourceDirectoryName</code> 에 지정 된 파일 또는 <code>destinationArchiveFileName</code>합니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>sourceDirectoryName</code>또는 <code>destinationArchiveFileName</code> 잘못 된 형식이 포함 되어 있습니다.       -또는-zip 보관 파일 쓰기를 지원 하지 않습니다."
  platform:
  - net462
- uid: System.IO.Compression.ZipFile.CreateFromDirectory(System.String,System.String,System.IO.Compression.CompressionLevel,System.Boolean)
  id: CreateFromDirectory(System.String,System.String,System.IO.Compression.CompressionLevel,System.Boolean)
  parent: System.IO.Compression.ZipFile
  langs:
  - csharp
  name: CreateFromDirectory(String,String,CompressionLevel,Boolean)
  nameWithType: ZipFile.CreateFromDirectory(String,String,CompressionLevel,Boolean)
  fullName: System.IO.Compression.ZipFile.CreateFromDirectory(String,String,CompressionLevel,Boolean)
  type: Method
  assemblies:
  - System.IO.Compression.FileSystem
  namespace: System.IO.Compression
  summary: "파일 및 지정된 된 디렉터리에서 디렉터리를 포함 하 고 지정 된 압축 수준을 사용 하 여 필요에 따라 기본 디렉터리를 포함 하는 zip 보관 파일을 만듭니다."
  remarks: "파일 시스템에서 디렉터리 구조는 보관 파일에 유지 됩니다. 디렉터리가 비어 있으면 빈 아카이브 생성 됩니다. 이 메서드 오버 로드를 사용 하 여 압축 수준 및 보관 파일에는 기본 디렉터리를 포함할지 여부를 지정 합니다.       보관 파일에 이미 있으면는 <xref:System.IO.IOException>예외가 throw 됩니다.</xref:System.IO.IOException> 지정한 이름 가진 엔터티가 이미 보관 되어 있는, 두 번째 항목을 동일한 이름으로 만들어집니다.       디렉터리에 파일 보관 파일에 추가할 수 없습니다, 불완전 하거나 유효 하지 않은, 아카이브는 그대로 남아 있으며 메서드에서 throw 하는 경우는 <xref:System.IO.IOException>예외.</xref:System.IO.IOException>"
  example:
  - "This example shows how to create and extract a zip archive by using the <xref:System.IO.Compression.ZipFile> class. It compresses the contents of a folder into a zip archive, and then extracts that content to a new folder. When compressing the archive, the base directory is included and the compression level is set to emphasize the speed of the operation over efficiency. To use the <xref:System.IO.Compression.ZipFile> class, you must reference the `System.IO.Compression.FileSystem` assembly in your project.  \n  \n [!code-cs[System.IO.Compression.ZipFile#2](~/add/codesnippet/csharp/42971baa-9b4d-4381-a7b3-_1.cs)]\n [!code-vb[System.IO.Compression.ZipFile#2](~/add/codesnippet/visualbasic/42971baa-9b4d-4381-a7b3-_1.vb)]"
  syntax:
    content: public static void CreateFromDirectory (string sourceDirectoryName, string destinationArchiveFileName, System.IO.Compression.CompressionLevel compressionLevel, bool includeBaseDirectory);
    parameters:
    - id: sourceDirectoryName
      type: System.String
      description: "디렉터리에 보관 하, 상대 또는 절대 경로로 지정 된 경로입니다. 상대 경로 현재 작업 디렉터리에 상대적으로 해석 됩니다."
    - id: destinationArchiveFileName
      type: System.String
      description: "상대 또는 절대 경로로 지정을 만들 보관 파일의 경로입니다. 상대 경로 현재 작업 디렉터리에 상대적으로 해석 됩니다."
    - id: compressionLevel
      type: System.IO.Compression.CompressionLevel
      description: "항목을 만들 때 속도 또는 압축 효율을 강조할 지를 나타내는 열거형 값 중 하나입니다."
    - id: includeBaseDirectory
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>디렉터리 이름을 포함 하려면 `sourceDirectoryName` ; 보관 파일의 루트에 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 디렉터리의 내용만 포함 합니다."
  overload: System.IO.Compression.ZipFile.CreateFromDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>sourceDirectoryName</code>또는 <code>destinationArchiveFileName</code> 은 <xref:System.String>공백만 포함 하거나 하나 이상의 잘못 된 문자를 포함 합니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>sourceDirectoryName</code>or <code>destinationArchiveFileName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "<code> sourceDirectoryName </code> 또는 <code> destinationArchiveFileName </code>, 지정된 된 경로, 파일 이름 또는 둘 다 시스템 정의 최대 길이 초과 합니다. 예를 들어 Windows 기반 플랫폼에서 경로 248 자를 초과할 수 없습니다 및 파일 이름은 260 자를 초과 하지 않아야 합니다."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "<code>sourceDirectoryName</code>유효 하지 않거나 존재 하지 않습니다 (예를 들어이 매핑되지 않은 드라이브에 있음)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>destinationArchiveFileName</code>이미 존재합니다.       -또는-지정된 된 디렉터리에서 파일을 열 수 없습니다."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>destinationArchiveFileName</code>디렉터리를 지정합니다.       -또는-호출자에 게 필요한 권한을에 지정 된 디렉터리에 액세스할 수 없는 <code>sourceDirectoryName</code> 에 지정 된 파일 또는 <code>destinationArchiveFileName</code>합니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>sourceDirectoryName</code>또는 <code>destinationArchiveFileName</code> 잘못 된 형식이 포함 되어 있습니다.       -또는-zip 보관 파일 쓰기를 지원 하지 않습니다."
  platform:
  - net462
- uid: System.IO.Compression.ZipFile.CreateFromDirectory(System.String,System.String,System.IO.Compression.CompressionLevel,System.Boolean,System.Text.Encoding)
  id: CreateFromDirectory(System.String,System.String,System.IO.Compression.CompressionLevel,System.Boolean,System.Text.Encoding)
  parent: System.IO.Compression.ZipFile
  langs:
  - csharp
  name: CreateFromDirectory(String,String,CompressionLevel,Boolean,Encoding)
  nameWithType: ZipFile.CreateFromDirectory(String,String,CompressionLevel,Boolean,Encoding)
  fullName: System.IO.Compression.ZipFile.CreateFromDirectory(String,String,CompressionLevel,Boolean,Encoding)
  type: Method
  assemblies:
  - System.IO.Compression.FileSystem
  namespace: System.IO.Compression
  summary: "파일 및 지정된 된 디렉터리에서 디렉터리를 포함 하 고 항목 이름에 대해 지정 된 압축 수준 및 문자 인코딩을 사용 하 여 필요에 따라 기본 디렉터리를 포함 하는 zip 보관 파일을 만듭니다."
  remarks: "파일 시스템에서 디렉터리 구조는 보관 파일에 유지 됩니다. 디렉터리가 비어 있으면 빈 아카이브 생성 됩니다. 이 메서드 오버 로드를 사용 하 여 압축 수준 및 문자 인코딩 및 보관 파일에는 기본 디렉터리를 포함할지 여부를 지정 합니다.       보관 파일에 이미 있으면는 <xref:System.IO.IOException>예외가 throw 됩니다.</xref:System.IO.IOException> 지정한 이름 가진 엔터티가 이미 보관 되어 있는, 두 번째 항목을 동일한 이름으로 만들어집니다.       디렉터리에 파일 보관 파일에 추가할 수 없습니다, 불완전 하거나 유효 하지 않은, 아카이브는 그대로 남아 있으며 메서드에서 throw 하는 경우는 <xref:System.IO.IOException>예외.</xref:System.IO.IOException>       경우 `entryNameEncoding` 이외의 값으로 설정 된 `null`, 항목 이름 지정 된 인코딩을 사용 하 여 인코딩됩니다. 지정 된 인코딩을 u t F-8 이면 언어 인코딩 플래그 (로컬 파일 헤더가의 범용 비트 플래그) 하는 경우 각 항목에 대해 설정 되어 `entryNameEncoding` 로 설정 된 `null`, 항목 이름은 다음 규칙에 따라 인코딩됩니다:-항목에 대 한 외부 ASCII 문자가 포함 된 이름을 범위로 인코딩 플래그를 설정 하는 언어 및 u t F-8 항목 이름 인코딩하는 데 사용 됩니다.      -ASCII 문자만 포함 하는 항목 이름, 언어 인코딩 플래그가 설정 되 고 현재 시스템 기본 코드 페이지 항목 이름 인코딩하는 데 사용 됩니다."
  syntax:
    content: public static void CreateFromDirectory (string sourceDirectoryName, string destinationArchiveFileName, System.IO.Compression.CompressionLevel compressionLevel, bool includeBaseDirectory, System.Text.Encoding entryNameEncoding);
    parameters:
    - id: sourceDirectoryName
      type: System.String
      description: "디렉터리에 보관 하, 상대 또는 절대 경로로 지정 된 경로입니다. 상대 경로 현재 작업 디렉터리에 상대적으로 해석 됩니다."
    - id: destinationArchiveFileName
      type: System.String
      description: "상대 또는 절대 경로로 지정을 만들 보관 파일의 경로입니다. 상대 경로 현재 작업 디렉터리에 상대적으로 해석 됩니다."
    - id: compressionLevel
      type: System.IO.Compression.CompressionLevel
      description: "항목을 만들 때 속도 또는 압축 효율을 강조할 지를 나타내는 열거형 값 중 하나입니다."
    - id: includeBaseDirectory
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>디렉터리 이름을 포함 하려면 `sourceDirectoryName` ; 보관 파일의 루트에 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 디렉터리의 내용만 포함 합니다."
    - id: entryNameEncoding
      type: System.Text.Encoding
      description: "읽을 때 사용할 인코딩을 또는 항목 이름이 보관이 파일에 작성 합니다. 인코딩이 zip 보관 도구 및 라이브러리 지원 하지 않는 utf-8 인코딩이 항목 이름에 대 한 상호 운용성을 위해 필요할 경우에이 매개 변수의 값을 지정 합니다."
  overload: System.IO.Compression.ZipFile.CreateFromDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>sourceDirectoryName</code>또는 <code>destinationArchiveFileName</code> 은 <xref:System.String>공백만 포함 하거나 하나 이상의 잘못 된 문자를 포함 합니다.       -또는- <code>entryNameEncoding</code> 은 유니코드로 설정 인코딩을 u t F-8 이외의 합니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>sourceDirectoryName</code>or <code>destinationArchiveFileName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "<code> sourceDirectoryName </code> 또는 <code> destinationArchiveFileName </code>, 지정된 된 경로, 파일 이름 또는 둘 다 시스템 정의 최대 길이 초과 합니다. 예를 들어 Windows 기반 플랫폼에서 경로 248 자를 초과할 수 없습니다 및 파일 이름은 260 자를 초과 하지 않아야 합니다."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "<code>sourceDirectoryName</code>유효 하지 않거나 존재 하지 않습니다 (예를 들어이 매핑되지 않은 드라이브에 있음)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>destinationArchiveFileName</code>이미 존재합니다.       -또는-지정된 된 디렉터리에서 파일을 열 수 없습니다."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>destinationArchiveFileName</code>디렉터리를 지정합니다.       -또는-호출자에 게 필요한 권한을에 지정 된 디렉터리에 액세스할 수 없는 <code>sourceDirectoryName</code> 에 지정 된 파일 또는 <code>destinationArchiveFileName</code>합니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>sourceDirectoryName</code>또는 <code>destinationArchiveFileName</code> 잘못 된 형식이 포함 되어 있습니다.       -또는-zip 보관 파일 쓰기를 지원 하지 않습니다."
  platform:
  - net462
- uid: System.IO.Compression.ZipFile.ExtractToDirectory(System.String,System.String)
  id: ExtractToDirectory(System.String,System.String)
  parent: System.IO.Compression.ZipFile
  langs:
  - csharp
  name: ExtractToDirectory(String,String)
  nameWithType: ZipFile.ExtractToDirectory(String,String)
  fullName: System.IO.Compression.ZipFile.ExtractToDirectory(String,String)
  type: Method
  assemblies:
  - System.IO.Compression.FileSystem
  namespace: System.IO.Compression
  summary: "파일 시스템에 디렉터리를 지정 된 zip 보관 파일의 모든 파일을 추출합니다."
  remarks: "이 메서드는 지정된 된 디렉터리와 모든 하위 디렉터리를 만듭니다. 대상 디렉터리가 이미 존재할 수 없습니다. 예외와 관련 된에서 경로 유효성을 검사 하는 `destinationDirectoryName` 또는 `sourceArchiveFileName` 매개 변수 추출 하기 전에 throw 됩니다. 그렇지 않으면 추출 하는 동안 오류가 발생 하는 경우 아카이브 부분적으로 추출 된 남아 있습니다. 각 추출 된 파일에 의해 지정 된 디렉터리를 동일한 상대 경로 `destinationDirectoryName` 항목 소스로 보관 파일의 루트에 있습니다."
  example:
  - "This example shows how to create and extract a zip archive by using the <xref:System.IO.Compression.ZipFile> class. It compresses the contents of a folder into a zip archive and extracts that content to a new folder. To use the <xref:System.IO.Compression.ZipFile> class, you must reference the `System.IO.Compression.FileSystem` assembly in your project.  \n  \n [!code-cs[System.IO.Compression.ZipFile#1](~/add/codesnippet/csharp/m-system.io.compression._5_1.cs)]\n [!code-vb[System.IO.Compression.ZipFile#1](~/add/codesnippet/visualbasic/m-system.io.compression._5_1.vb)]"
  syntax:
    content: public static void ExtractToDirectory (string sourceArchiveFileName, string destinationDirectoryName);
    parameters:
    - id: sourceArchiveFileName
      type: System.String
      description: "추출 되는 보관 파일에 대 한 경로입니다."
    - id: destinationDirectoryName
      type: System.String
      description: "디렉터리의 상대 또는 절대 경로로 지정 된 추출된 된 파일을 배치할 수 있는 경로입니다. 상대 경로 현재 작업 디렉터리에 상대적으로 해석 됩니다."
  overload: System.IO.Compression.ZipFile.ExtractToDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>destinationDirectoryName</code>또는 <code>sourceArchiveFileName</code> 은 <xref:System.String>공백만 포함 하거나 하나 이상의 잘못 된 문자를 포함 합니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationDirectoryName</code>or <code>sourceArchiveFileName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "지정된 된 경로 <code> destinationDirectoryName </code> 또는 <code> sourceArchiveFileName </code> 시스템 정의 최대 길이 초과 합니다. 예를 들어 Windows 기반 플랫폼에서 경로 248 자를 초과할 수 없습니다 및 파일 이름은 260 자를 초과 하지 않아야 합니다."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "지정 된 경로가 잘못 되었습니다 (예를 들어이 매핑되지 않은 드라이브에 있음)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "로 지정한 디렉터리가 <code> destinationDirectoryName </code> 이미 있습니다.       -또는-보관 파일에 있는 항목의 이름은 <xref:System.String>공백만 포함 하거나 하나 이상의 잘못 된 문자를 포함 합니다.</xref:System.String>       -또는-보관 파일 항목을 추출 하 여 지정 된 디렉터리 외부에 있는 파일을 만듭니다 <code> destinationDirectoryName </code>합니다. (예를 들어이 발생할 수 있습니다 항목 이름에 부모 디렉터리 접근자 경우.)       -또는-동일한 보관 파일에서 추출 된 이미 있는 항목으로 같은 이름의 보관 파일 항목을 추출 합니다."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "호출자에 보관 또는 대상 디렉터리에 액세스할 수 필요한 권한이 없습니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>destinationDirectoryName</code>또는 <code>sourceArchiveFileName</code> 잘못 된 형식이 포함 되어 있습니다."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "<code>sourceArchiveFileName</code>찾을 수 없습니다."
  - type: System.IO.InvalidDataException
    commentId: T:System.IO.InvalidDataException
    description: "로 지정 된 보관 <code> sourceArchiveFileName </code> 유효한 zip 보관 파일이 아닙니다.       -또는-보관 파일 항목을 찾을 수 없거나 손상 되었습니다.       -또는-보관 항목이 지원 되지 않는 압축 방법을 사용 하 여 압축 되었습니다."
  platform:
  - net462
- uid: System.IO.Compression.ZipFile.ExtractToDirectory(System.String,System.String,System.Text.Encoding)
  id: ExtractToDirectory(System.String,System.String,System.Text.Encoding)
  parent: System.IO.Compression.ZipFile
  langs:
  - csharp
  name: ExtractToDirectory(String,String,Encoding)
  nameWithType: ZipFile.ExtractToDirectory(String,String,Encoding)
  fullName: System.IO.Compression.ZipFile.ExtractToDirectory(String,String,Encoding)
  type: Method
  assemblies:
  - System.IO.Compression.FileSystem
  namespace: System.IO.Compression
  summary: "파일 시스템에 디렉터리를 지정 된 zip 보관 파일의 모든 파일을 추출 하 고 항목 이름에 대 한 인코딩이 지정된 된 문자를 사용 합니다."
  remarks: "이 메서드는 지정된 된 디렉터리와 모든 하위 디렉터리를 만듭니다. 대상 디렉터리가 이미 존재할 수 없습니다. 예외와 관련 된에서 경로 유효성을 검사 하는 `destinationDirectoryName` 또는 `sourceArchiveFileName` 매개 변수 추출 하기 전에 throw 됩니다. 그렇지 않으면 추출 하는 동안 오류가 발생 하는 경우 아카이브 부분적으로 추출 된 남아 있습니다. 각 추출 된 파일에 의해 지정 된 디렉터리를 동일한 상대 경로 `destinationDirectoryName` 항목 소스로 보관 파일의 루트에 있습니다.       경우 `entryNameEncoding` 이외의 값으로 설정 된 `null`, 항목 이름은 다음 규칙에 따라 디코딩:-여기서 언어 인코딩 플래그 (로컬 파일 헤더가의 범용 비트 플래그)을 설정 하지 않으면 이름이 지정 된 인코딩을 사용 하 여 디코딩 항목 항목 이름에 대 한 합니다.      -언어 인코딩 플래그가 설정 되어 있는 항목에 대 한 항목 이름 u t F-8을 사용 하 여 디코딩.       경우 `entryNameEncoding` 로 설정 된 `null`, 항목 이름은 다음 규칙에 따라 디코딩:-항목 위치 언어 인코딩 플래그 (로컬 파일 헤더가의 범용 비트 플래그)을 설정 하지 않으면 이름이 현재 시스템 기본 코드 페이지를 사용 하 여 디코딩 되며 항목에 대 한 합니다.      -언어 인코딩 플래그가 설정 되어 있는 항목에 대 한 항목 이름 u t F-8을 사용 하 여 디코딩."
  syntax:
    content: public static void ExtractToDirectory (string sourceArchiveFileName, string destinationDirectoryName, System.Text.Encoding entryNameEncoding);
    parameters:
    - id: sourceArchiveFileName
      type: System.String
      description: "추출 되는 보관 파일에 대 한 경로입니다."
    - id: destinationDirectoryName
      type: System.String
      description: "디렉터리의 상대 또는 절대 경로로 지정 된 추출된 된 파일을 배치할 수 있는 경로입니다. 상대 경로 현재 작업 디렉터리에 상대적으로 해석 됩니다."
    - id: entryNameEncoding
      type: System.Text.Encoding
      description: "읽을 때 사용할 인코딩을 또는 항목 이름이 보관이 파일에 작성 합니다. 인코딩이 zip 보관 도구 및 라이브러리 지원 하지 않는 utf-8 인코딩이 항목 이름에 대 한 상호 운용성을 위해 필요할 경우에이 매개 변수의 값을 지정 합니다."
  overload: System.IO.Compression.ZipFile.ExtractToDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>destinationDirectoryName</code>또는 <code>sourceArchiveFileName</code> 은 <xref:System.String>공백만 포함 하거나 하나 이상의 잘못 된 문자를 포함 합니다.       -또는- <code>entryNameEncoding</code> 은 유니코드로 설정 인코딩을 u t F-8 이외의 합니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationDirectoryName</code>or <code>sourceArchiveFileName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "지정된 된 경로 <code> destinationDirectoryName </code> 또는 <code> sourceArchiveFileName </code> 시스템 정의 최대 길이 초과 합니다. 예를 들어 Windows 기반 플랫폼에서 경로 248 자를 초과할 수 없습니다 및 파일 이름은 260 자를 초과 하지 않아야 합니다."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "지정 된 경로가 잘못 되었습니다 (예를 들어이 매핑되지 않은 드라이브에 있음)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "로 지정한 디렉터리가 <code> destinationDirectoryName </code> 이미 있습니다.       -또는-보관 파일에 있는 항목의 이름은 <xref:System.String>공백만 포함 하거나 하나 이상의 잘못 된 문자를 포함 합니다.</xref:System.String>       -또는-보관 파일 항목을 추출 하 여 지정 된 디렉터리 외부에 있는 파일을 만듭니다 <code> destinationDirectoryName </code>합니다. (예를 들어이 발생할 수 있습니다 항목 이름에 부모 디렉터리 접근자 경우.)       -또는-동일한 보관 파일에서 추출 된 이미 있는 항목으로 같은 이름의 보관 파일 항목을 추출 합니다."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "호출자에 보관 또는 대상 디렉터리에 액세스할 수 필요한 권한이 없습니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>destinationDirectoryName</code>또는 <code>sourceArchiveFileName</code> 잘못 된 형식이 포함 되어 있습니다."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "<code>sourceArchiveFileName</code>찾을 수 없습니다."
  - type: System.IO.InvalidDataException
    commentId: T:System.IO.InvalidDataException
    description: "로 지정 된 보관 <code> sourceArchiveFileName </code> 유효한 zip 보관 파일이 아닙니다.       -또는-보관 파일 항목을 찾을 수 없거나 손상 되었습니다.       -또는-보관 항목이 지원 되지 않는 압축 방법을 사용 하 여 압축 되었습니다."
  platform:
  - net462
- uid: System.IO.Compression.ZipFile.Open(System.String,System.IO.Compression.ZipArchiveMode)
  id: Open(System.String,System.IO.Compression.ZipArchiveMode)
  parent: System.IO.Compression.ZipFile
  langs:
  - csharp
  name: Open(String,ZipArchiveMode)
  nameWithType: ZipFile.Open(String,ZipArchiveMode)
  fullName: System.IO.Compression.ZipFile.Open(String,ZipArchiveMode)
  type: Method
  assemblies:
  - System.IO.Compression.FileSystem
  namespace: System.IO.Compression
  summary: "지정된 된 경로 및 지정된 된 모드에서 zip 보관 파일을 엽니다."
  remarks: "설정 하는 경우는 `mode` 매개 변수를 <xref:System.IO.Compression.ZipArchiveMode>, 아카이브 열리고 <xref:System.IO.FileMode>에서 <xref:System.IO.FileMode>파일 모드 값으로 열거형.</xref:System.IO.FileMode> </xref:System.IO.FileMode> </xref:System.IO.Compression.ZipArchiveMode> 아카이브가 없는 경우는 <xref:System.IO.FileNotFoundException>예외가 throw 됩니다.</xref:System.IO.FileNotFoundException> 설정의 `mode` 매개 변수를 <xref:System.IO.Compression.ZipArchiveMode>하는 것은 <xref:System.IO.Compression.ZipFile.OpenRead%2A>메서드.</xref:System.IO.Compression.ZipFile.OpenRead%2A> </xref:System.IO.Compression.ZipArchiveMode>       설정 하는 경우는 `mode` 매개 변수를 <xref:System.IO.Compression.ZipArchiveMode>, 아카이브 열리고 <xref:System.IO.FileMode?displayProperty=fullName>파일 모드 값으로.</xref:System.IO.FileMode?displayProperty=fullName> </xref:System.IO.Compression.ZipArchiveMode> 보관 파일에 이미 있으면는 <xref:System.IO.IOException>throw 됩니다.</xref:System.IO.IOException>       설정 하는 경우는 `mode` 매개 변수를 <xref:System.IO.Compression.ZipArchiveMode>, 아카이브 열리고 <xref:System.IO.FileMode?displayProperty=fullName>파일 모드 값으로.</xref:System.IO.FileMode?displayProperty=fullName> </xref:System.IO.Compression.ZipArchiveMode> 보관 파일에 있는 경우 자동으로 열립니다. 기존 항목을 수정할 수 있습니다 및 새 항목을 만들 수 있습니다. 아카이브가 없는 경우 새 보관이 만들어집니다. 그러나에서 zip 보관 파일을 만드는 <xref:System.IO.Compression.ZipArchiveMode>모드가 효율적으로 만드는 <xref:System.IO.Compression.ZipArchiveMode>모드.</xref:System.IO.Compression.ZipArchiveMode> </xref:System.IO.Compression.ZipArchiveMode>"
  example:
  - "The following example shows how to open a zip archive in the update mode and add an entry to the archive.  \n  \n [!code-cs[System.IO.Compression.ZipArchive#3](~/add/codesnippet/csharp/7e49a288-de57-4354-b009-_1.cs)]\n [!code-vb[System.IO.Compression.ZipArchive#3](~/add/codesnippet/visualbasic/7e49a288-de57-4354-b009-_1.vb)]"
  syntax:
    content: public static System.IO.Compression.ZipArchive Open (string archiveFileName, System.IO.Compression.ZipArchiveMode mode);
    parameters:
    - id: archiveFileName
      type: System.String
      description: "열 보관 파일에 대 한 경로 상대 또는 절대 경로로 지정 합니다. 상대 경로 현재 작업 디렉터리에 상대적으로 해석 됩니다."
    - id: mode
      type: System.IO.Compression.ZipArchiveMode
      description: "열린된 보관 파일의 항목에는 사용할 수 있는 동작을 지정 하는 열거형 값 중 하나입니다."
    return:
      type: System.IO.Compression.ZipArchive
      description: "열린된 zip 보관 파일입니다."
  overload: System.IO.Compression.ZipFile.Open*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>archiveFileName</code><xref:System.String>공백만 포함 하거나 하나 이상의 잘못 된 문자를 포함 합니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>archiveFileName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "<code> archiveFileName </code>, 지정된 된 경로, 파일 이름 또는 둘 다 시스템 정의 최대 길이 초과 합니다. 예를 들어 Windows 기반 플랫폼에서 경로 248 자를 초과할 수 없습니다 및 파일 이름은 260 자를 초과 하지 않아야 합니다."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "<code>archiveFileName</code>유효 하지 않거나 존재 하지 않습니다 (예를 들어이 매핑되지 않은 드라이브에 있음)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>archiveFileName</code>열 수 없습니다.       -또는- <code>mode</code> 로 설정 된 <xref href=&quot;System.IO.Compression.ZipArchiveMode&quot;> </xref>에 지정 된 파일 이지만 <code>archiveFileName</code> 이미 있습니다."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>archiveFileName</code>디렉터리를 지정합니다.       -또는-호출자에 게는에 지정 된 파일에 액세스 하는 데 필요한 권한이 없는 <code>archiveFileName</code>합니다."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>mode</code>잘못 된 값을 지정합니다."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "<code>mode</code>로 설정 되어 <xref href=&quot;System.IO.Compression.ZipArchiveMode&quot;> </xref>에 지정 된 파일 이지만 <code>archiveFileName</code> 찾을 수 없습니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>archiveFileName</code>잘못 된 형식이 포함 되어 있습니다."
  - type: System.IO.InvalidDataException
    commentId: T:System.IO.InvalidDataException
    description: "<code>archiveFileName</code>zip 보관 파일로 해석할 수 없습니다.       -또는- <code>mode</code> 은 <xref href=&quot;System.IO.Compression.ZipArchiveMode&quot;> </xref>, 하지만 한 항목이 누락 되었거나 손상 하 고 읽을 수 없습니다.       -또는- <code>mode</code> 은 <xref href=&quot;System.IO.Compression.ZipArchiveMode&quot;> </xref>, 하지만 항목은 너무 커서 메모리에 적합 합니다."
  platform:
  - net462
- uid: System.IO.Compression.ZipFile.Open(System.String,System.IO.Compression.ZipArchiveMode,System.Text.Encoding)
  id: Open(System.String,System.IO.Compression.ZipArchiveMode,System.Text.Encoding)
  parent: System.IO.Compression.ZipFile
  langs:
  - csharp
  name: Open(String,ZipArchiveMode,Encoding)
  nameWithType: ZipFile.Open(String,ZipArchiveMode,Encoding)
  fullName: System.IO.Compression.ZipFile.Open(String,ZipArchiveMode,Encoding)
  type: Method
  assemblies:
  - System.IO.Compression.FileSystem
  namespace: System.IO.Compression
  summary: "지정된 된 모드의 항목 이름에 대 한 인코딩이 지정된 된 문자를 사용 하 여 지정된 된 경로에서 zip 보관 파일을 엽니다."
  remarks: "설정 하는 경우는 `mode` 매개 변수를 <xref:System.IO.Compression.ZipArchiveMode>, 아카이브 열리고 <xref:System.IO.FileMode?displayProperty=fullName>파일 모드 값으로.</xref:System.IO.FileMode?displayProperty=fullName> </xref:System.IO.Compression.ZipArchiveMode> 아카이브가 없는 경우는 <xref:System.IO.FileNotFoundException>예외가 throw 됩니다.</xref:System.IO.FileNotFoundException> 설정의 `mode` 매개 변수를 <xref:System.IO.Compression.ZipArchiveMode>하는 것은 <xref:System.IO.Compression.ZipFile.OpenRead%2A>메서드.</xref:System.IO.Compression.ZipFile.OpenRead%2A> </xref:System.IO.Compression.ZipArchiveMode>       설정 하는 경우는 `mode` 매개 변수를 <xref:System.IO.Compression.ZipArchiveMode>, 아카이브 열리고 <xref:System.IO.FileMode?displayProperty=fullName>파일 모드 값으로.</xref:System.IO.FileMode?displayProperty=fullName> </xref:System.IO.Compression.ZipArchiveMode> 보관 파일에 이미 있으면는 <xref:System.IO.IOException>throw 됩니다.</xref:System.IO.IOException>       설정 하는 경우는 `mode` 매개 변수를 <xref:System.IO.Compression.ZipArchiveMode>, 아카이브 열리고 <xref:System.IO.FileMode?displayProperty=fullName>파일 모드 값으로.</xref:System.IO.FileMode?displayProperty=fullName> </xref:System.IO.Compression.ZipArchiveMode> 보관 파일에 있는 경우 자동으로 열립니다. 기존 항목을 수정할 수 있습니다 및 새 항목을 만들 수 있습니다. 아카이브가 없는 경우 새 보관이 만들어집니다. 그러나에서 zip 보관 파일을 만드는 <xref:System.IO.Compression.ZipArchiveMode>모드가 효율적으로 만드는 <xref:System.IO.Compression.ZipArchiveMode>모드.</xref:System.IO.Compression.ZipArchiveMode> </xref:System.IO.Compression.ZipArchiveMode>       읽기 위해 zip 보관 파일을 열 때 및 `entryNameEncoding` 로 설정 되어 `null`, 항목 이름은 다음 규칙에 따라 디코딩:-현재 시스템 기본 코드 페이지 인코딩 플래그 (로컬 파일 헤더가의 범용 비트 플래그)을 설정 하지 않으면 언어 항목 이름을 디코딩하는 데 사용 됩니다.      -언어 인코딩 플래그가 설정 된 경우에 u t F-8 항목 이름을 디코딩 하기 위한 사용 됩니다.       읽기 위해 zip 보관 파일을 열 때 및 `entryNameEncoding` 이외의 값으로 설정 된 `null`, 항목 이름은 다음 규칙에 따라 디코딩:-언어 인코딩 플래그를 설정 하지 않으면 지정 된 경우 `entryNameEncoding` 항목 이름을 디코딩하는 데 사용 됩니다.      -언어 인코딩 플래그가 설정 된 경우에 u t F-8 항목 이름을 디코딩 하기 위한 사용 됩니다.       보관 파일을 작성 하는 경우 및 `entryNameEncoding` 로 설정 된 `null`, 항목 이름은 다음 규칙에 따라 인코딩됩니다:-항목에 대 한 외부 ASCII 문자가 포함 된 이름을 범위로 언어 인코딩 플래그를 설정 하 고 항목 이름은 u t F-8을 사용 하 여 인코딩됩니다.      -ASCII 문자만 포함 된 항목 이름에 대 한 언어 인코딩 플래그를 설정 하지 않으면 및 항목 이름은 현재 시스템 기본 코드 페이지를 사용 하 여 인코딩됩니다.       보관 파일을 작성 하는 경우 및 `entryNameEncoding` 이외의 값으로 설정 된 `null`, 지정 된 `entryNameEncoding` 바이트에 항목 이름 인코딩하는 데 사용 됩니다. 언어 인코딩 플래그 (로컬 파일 헤더가의 범용 비트 플래그)에 지정 된 인코딩의 인코딩을 u t F-8 인 경우에 설정 됩니다."
  syntax:
    content: public static System.IO.Compression.ZipArchive Open (string archiveFileName, System.IO.Compression.ZipArchiveMode mode, System.Text.Encoding entryNameEncoding);
    parameters:
    - id: archiveFileName
      type: System.String
      description: "열 보관 파일에 대 한 경로 상대 또는 절대 경로로 지정 합니다. 상대 경로 현재 작업 디렉터리에 상대적으로 해석 됩니다."
    - id: mode
      type: System.IO.Compression.ZipArchiveMode
      description: "열린된 보관 파일의 항목에는 사용할 수 있는 동작을 지정 하는 열거형 값 중 하나입니다."
    - id: entryNameEncoding
      type: System.Text.Encoding
      description: "읽을 때 사용할 인코딩을 또는 항목 이름이 보관이 파일에 작성 합니다. 인코딩이 zip 보관 도구 및 라이브러리 지원 하지 않는 utf-8 인코딩이 항목 이름에 대 한 상호 운용성을 위해 필요할 경우에이 매개 변수의 값을 지정 합니다."
    return:
      type: System.IO.Compression.ZipArchive
      description: "열린된 zip 보관 파일입니다."
  overload: System.IO.Compression.ZipFile.Open*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>archiveFileName</code><xref:System.String>공백만 포함 하거나 하나 이상의 잘못 된 문자를 포함 합니다.       -또는- <code>entryNameEncoding</code> 은 유니코드로 설정 인코딩을 u t F-8 이외의 합니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>archiveFileName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "<code> archiveFileName </code>, 지정된 된 경로, 파일 이름 또는 둘 다 시스템 정의 최대 길이 초과 합니다. 예를 들어 Windows 기반 플랫폼에서 경로 248 자를 초과할 수 없습니다 및 파일 이름은 260 자를 초과 하지 않아야 합니다."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "<code>archiveFileName</code>유효 하지 않거나 존재 하지 않습니다 (예를 들어이 매핑되지 않은 드라이브에 있음)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>archiveFileName</code>열 수 없습니다.       -또는- <code>mode</code> 로 설정 된 <xref href=&quot;System.IO.Compression.ZipArchiveMode&quot;> </xref>에 지정 된 파일 이지만 <code>archiveFileName</code> 이미 있습니다."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>archiveFileName</code>디렉터리를 지정합니다.       -또는-호출자에 게는에 지정 된 파일에 액세스 하는 데 필요한 권한이 없는 <code>archiveFileName</code>합니다."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>mode</code>잘못 된 값을 지정합니다."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "<code>mode</code>로 설정 되어 <xref href=&quot;System.IO.Compression.ZipArchiveMode&quot;> </xref>에 지정 된 파일 이지만 <code>archiveFileName</code> 찾을 수 없습니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>archiveFileName</code>잘못 된 형식이 포함 되어 있습니다."
  - type: System.IO.InvalidDataException
    commentId: T:System.IO.InvalidDataException
    description: "<code>archiveFileName</code>zip 보관 파일로 해석할 수 없습니다.       -또는- <code>mode</code> 은 <xref href=&quot;System.IO.Compression.ZipArchiveMode&quot;> </xref>, 하지만 한 항목이 누락 되었거나 손상 하 고 읽을 수 없습니다.       -또는- <code>mode</code> 은 <xref href=&quot;System.IO.Compression.ZipArchiveMode&quot;> </xref>, 하지만 항목은 너무 커서 메모리에 적합 합니다."
  platform:
  - net462
- uid: System.IO.Compression.ZipFile.OpenRead(System.String)
  id: OpenRead(System.String)
  parent: System.IO.Compression.ZipFile
  langs:
  - csharp
  name: OpenRead(String)
  nameWithType: ZipFile.OpenRead(String)
  fullName: System.IO.Compression.ZipFile.OpenRead(String)
  type: Method
  assemblies:
  - System.IO.Compression.FileSystem
  namespace: System.IO.Compression
  summary: "지정된 된 경로에서 읽기 위해 zip 보관 파일을 엽니다."
  remarks: "이 메서드는 호출에 해당 하는 <xref:System.IO.Compression.ZipFile.Open%2A>메서드와 설정은 `mode` 매개 변수를 <xref:System.IO.Compression.ZipArchiveMode>.</xref:System.IO.Compression.ZipArchiveMode> </xref:System.IO.Compression.ZipFile.Open%2A> 아카이브 열리고 <xref:System.IO.FileMode?displayProperty=fullName>파일 모드 값으로.</xref:System.IO.FileMode?displayProperty=fullName> 아카이브가 없는 경우는 <xref:System.IO.FileNotFoundException>예외가 throw 됩니다.</xref:System.IO.FileNotFoundException>"
  example:
  - "The following example shows how to open a zip archive for reading.  \n  \n [!code-cs[System.IO.Compression.ZipArchive#1](~/add/codesnippet/csharp/m-system.io.compression._2_1.cs)]\n [!code-vb[System.IO.Compression.ZipArchive#1](~/add/codesnippet/visualbasic/m-system.io.compression._2_1.vb)]"
  syntax:
    content: public static System.IO.Compression.ZipArchive OpenRead (string archiveFileName);
    parameters:
    - id: archiveFileName
      type: System.String
      description: "열 보관 파일에 대 한 경로 상대 또는 절대 경로로 지정 합니다. 상대 경로 현재 작업 디렉터리에 상대적으로 해석 됩니다."
    return:
      type: System.IO.Compression.ZipArchive
      description: "열린된 zip 보관 파일입니다."
  overload: System.IO.Compression.ZipFile.OpenRead*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>archiveFileName</code><xref:System.String>공백만 포함 하거나 하나 이상의 잘못 된 문자를 포함 합니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>archiveFileName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "<code> archiveFileName </code>, 지정된 된 경로, 파일 이름 또는 둘 다 시스템 정의 최대 길이 초과 합니다. 예를 들어 Windows 기반 플랫폼에서 경로 248 자를 초과할 수 없습니다 및 파일 이름은 260 자를 초과 하지 않아야 합니다."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "<code>archiveFileName</code>유효 하지 않거나 존재 하지 않습니다 (예를 들어이 매핑되지 않은 드라이브에 있음)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>archiveFileName</code>열 수 없습니다."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>archiveFileName</code>디렉터리를 지정합니다.       -또는-호출자에 게는에 지정 된 파일에 액세스 하는 데 필요한 권한이 없는 <code>archiveFileName</code>합니다."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "에 지정 된 파일 <code> archiveFileName </code> 찾을 수 없습니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>archiveFileName</code>잘못 된 형식이 포함 되어 있습니다."
  - type: System.IO.InvalidDataException
    commentId: T:System.IO.InvalidDataException
    description: "<code>archiveFileName</code>zip 보관 파일로 해석할 수 없습니다."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.IO.PathTooLongException
  isExternal: true
  name: System.IO.PathTooLongException
- uid: System.IO.DirectoryNotFoundException
  isExternal: true
  name: System.IO.DirectoryNotFoundException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.UnauthorizedAccessException
  isExternal: true
  name: System.UnauthorizedAccessException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.IO.FileNotFoundException
  isExternal: true
  name: System.IO.FileNotFoundException
- uid: System.IO.InvalidDataException
  isExternal: true
  name: System.IO.InvalidDataException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.IO.Compression.ZipFile.CreateFromDirectory(System.String,System.String)
  parent: System.IO.Compression.ZipFile
  isExternal: false
  name: CreateFromDirectory(String,String)
  nameWithType: ZipFile.CreateFromDirectory(String,String)
  fullName: System.IO.Compression.ZipFile.CreateFromDirectory(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.Compression.ZipFile.CreateFromDirectory(System.String,System.String,System.IO.Compression.CompressionLevel,System.Boolean)
  parent: System.IO.Compression.ZipFile
  isExternal: false
  name: CreateFromDirectory(String,String,CompressionLevel,Boolean)
  nameWithType: ZipFile.CreateFromDirectory(String,String,CompressionLevel,Boolean)
  fullName: System.IO.Compression.ZipFile.CreateFromDirectory(String,String,CompressionLevel,Boolean)
- uid: System.IO.Compression.CompressionLevel
  parent: System.IO.Compression
  isExternal: true
  name: CompressionLevel
  nameWithType: CompressionLevel
  fullName: System.IO.Compression.CompressionLevel
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IO.Compression.ZipFile.CreateFromDirectory(System.String,System.String,System.IO.Compression.CompressionLevel,System.Boolean,System.Text.Encoding)
  parent: System.IO.Compression.ZipFile
  isExternal: false
  name: CreateFromDirectory(String,String,CompressionLevel,Boolean,Encoding)
  nameWithType: ZipFile.CreateFromDirectory(String,String,CompressionLevel,Boolean,Encoding)
  fullName: System.IO.Compression.ZipFile.CreateFromDirectory(String,String,CompressionLevel,Boolean,Encoding)
- uid: System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: System.IO.Compression.ZipFile.ExtractToDirectory(System.String,System.String)
  parent: System.IO.Compression.ZipFile
  isExternal: false
  name: ExtractToDirectory(String,String)
  nameWithType: ZipFile.ExtractToDirectory(String,String)
  fullName: System.IO.Compression.ZipFile.ExtractToDirectory(String,String)
- uid: System.IO.Compression.ZipFile.ExtractToDirectory(System.String,System.String,System.Text.Encoding)
  parent: System.IO.Compression.ZipFile
  isExternal: false
  name: ExtractToDirectory(String,String,Encoding)
  nameWithType: ZipFile.ExtractToDirectory(String,String,Encoding)
  fullName: System.IO.Compression.ZipFile.ExtractToDirectory(String,String,Encoding)
- uid: System.IO.Compression.ZipFile.Open(System.String,System.IO.Compression.ZipArchiveMode)
  parent: System.IO.Compression.ZipFile
  isExternal: false
  name: Open(String,ZipArchiveMode)
  nameWithType: ZipFile.Open(String,ZipArchiveMode)
  fullName: System.IO.Compression.ZipFile.Open(String,ZipArchiveMode)
- uid: System.IO.Compression.ZipArchive
  parent: System.IO.Compression
  isExternal: false
  name: ZipArchive
  nameWithType: ZipArchive
  fullName: System.IO.Compression.ZipArchive
- uid: System.IO.Compression.ZipArchiveMode
  parent: System.IO.Compression
  isExternal: false
  name: ZipArchiveMode
  nameWithType: ZipArchiveMode
  fullName: System.IO.Compression.ZipArchiveMode
- uid: System.IO.Compression.ZipFile.Open(System.String,System.IO.Compression.ZipArchiveMode,System.Text.Encoding)
  parent: System.IO.Compression.ZipFile
  isExternal: false
  name: Open(String,ZipArchiveMode,Encoding)
  nameWithType: ZipFile.Open(String,ZipArchiveMode,Encoding)
  fullName: System.IO.Compression.ZipFile.Open(String,ZipArchiveMode,Encoding)
- uid: System.IO.Compression.ZipFile.OpenRead(System.String)
  parent: System.IO.Compression.ZipFile
  isExternal: false
  name: OpenRead(String)
  nameWithType: ZipFile.OpenRead(String)
  fullName: System.IO.Compression.ZipFile.OpenRead(String)
- uid: System.IO.Compression.ZipFile.CreateFromDirectory*
  parent: System.IO.Compression.ZipFile
  isExternal: false
  name: CreateFromDirectory
  nameWithType: ZipFile.CreateFromDirectory
- uid: System.IO.Compression.ZipFile.ExtractToDirectory*
  parent: System.IO.Compression.ZipFile
  isExternal: false
  name: ExtractToDirectory
  nameWithType: ZipFile.ExtractToDirectory
- uid: System.IO.Compression.ZipFile.Open*
  parent: System.IO.Compression.ZipFile
  isExternal: false
  name: Open
  nameWithType: ZipFile.Open
- uid: System.IO.Compression.ZipFile.OpenRead*
  parent: System.IO.Compression.ZipFile
  isExternal: false
  name: OpenRead
  nameWithType: ZipFile.OpenRead
