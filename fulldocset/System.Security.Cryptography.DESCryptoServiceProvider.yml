### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.DESCryptoServiceProvider
  id: DESCryptoServiceProvider
  children:
  - System.Security.Cryptography.DESCryptoServiceProvider.#ctor
  - System.Security.Cryptography.DESCryptoServiceProvider.CreateDecryptor(System.Byte[],System.Byte[])
  - System.Security.Cryptography.DESCryptoServiceProvider.CreateEncryptor(System.Byte[],System.Byte[])
  - System.Security.Cryptography.DESCryptoServiceProvider.GenerateIV
  - System.Security.Cryptography.DESCryptoServiceProvider.GenerateKey
  langs:
  - csharp
  name: DESCryptoServiceProvider
  nameWithType: DESCryptoServiceProvider
  fullName: System.Security.Cryptography.DESCryptoServiceProvider
  type: Class
  summary: "데이터 암호화 표준의 암호화 서비스 공급자 (CSP) 버전에 액세스 하려면 래퍼 개체를 정의 합니다 (<xref href=&quot;System.Security.Cryptography.DES&quot;></xref>) 알고리즘. 이 클래스는 상속 될 수 없습니다."
  remarks: "이 알고리즘은 64 비트의 키 길이 지원 합니다."
  example:
  - "The following code example uses DESCryptoServiceProvider (an implementation of <xref:System.Security.Cryptography.DES>) with the specified key (<xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A>) and initialization vector (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>) to encrypt a file specified by `inName`. It then outputs the encrypted result to the file specified by `outName`.  \n  \n [!code-cpp[Classic DES Example#1](~/add/codesnippet/cpp/t-system.security.crypto_121_1.cpp)]\n [!code-cs[Classic DES Example#1](~/add/codesnippet/csharp/t-system.security.crypto_121_1.cs)]\n [!code-vb[Classic DES Example#1](~/add/codesnippet/visualbasic/t-system.security.crypto_121_1.vb)]  \n  \n Decryption can be handled in the same way; use [CreateDecryptor(Byte\\[\\], Byte\\[\\])](assetId:///M:System.Security.Cryptography.DESCryptoServiceProvider.CreateDecryptor(System.Byte[],System.Byte[])?qualifyHint=False&autoUpgrade=True) instead of [CreateEncryptor(Byte\\[\\], Byte\\[\\])](assetId:///M:System.Security.Cryptography.DESCryptoServiceProvider.CreateEncryptor(System.Byte[],System.Byte[])?qualifyHint=False&autoUpgrade=True). The same key (<xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A>) and initialization vector (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>) used to encrypt the file must be used to decrypt it."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class DESCryptoServiceProvider : System.Security.Cryptography.DES
  inheritance:
  - System.Object
  - System.Security.Cryptography.SymmetricAlgorithm
  - System.Security.Cryptography.DES
  implements: []
  inheritedMembers:
  - System.Security.Cryptography.DES.Create
  - System.Security.Cryptography.DES.Create(System.String)
  - System.Security.Cryptography.DES.IsSemiWeakKey(System.Byte[])
  - System.Security.Cryptography.DES.IsWeakKey(System.Byte[])
  - System.Security.Cryptography.DES.Key
  - System.Security.Cryptography.SymmetricAlgorithm.BlockSize
  - System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue
  - System.Security.Cryptography.SymmetricAlgorithm.Clear
  - System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor
  - System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor
  - System.Security.Cryptography.SymmetricAlgorithm.Dispose
  - System.Security.Cryptography.SymmetricAlgorithm.Dispose(System.Boolean)
  - System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize
  - System.Security.Cryptography.SymmetricAlgorithm.FeedbackSizeValue
  - System.Security.Cryptography.SymmetricAlgorithm.IV
  - System.Security.Cryptography.SymmetricAlgorithm.IVValue
  - System.Security.Cryptography.SymmetricAlgorithm.KeySize
  - System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue
  - System.Security.Cryptography.SymmetricAlgorithm.KeyValue
  - System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizes
  - System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizesValue
  - System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes
  - System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizesValue
  - System.Security.Cryptography.SymmetricAlgorithm.Mode
  - System.Security.Cryptography.SymmetricAlgorithm.ModeValue
  - System.Security.Cryptography.SymmetricAlgorithm.Padding
  - System.Security.Cryptography.SymmetricAlgorithm.PaddingValue
  - System.Security.Cryptography.SymmetricAlgorithm.ValidKeySize(System.Int32)
  platform:
  - net462
- uid: System.Security.Cryptography.DESCryptoServiceProvider.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.DESCryptoServiceProvider
  langs:
  - csharp
  name: DESCryptoServiceProvider()
  nameWithType: DESCryptoServiceProvider.DESCryptoServiceProvider()
  fullName: System.Security.Cryptography.DESCryptoServiceProvider.DESCryptoServiceProvider()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Security.Cryptography.DESCryptoServiceProvider&quot;> </xref> 클래스입니다."
  remarks: ''
  example:
  - "The following code example uses <xref:System.Security.Cryptography.DESCryptoServiceProvider> (an implementation of <xref:System.Security.Cryptography.DES>) with the specified key (<xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A>) and initialization vector (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>) to encrypt a file specified by `inName`. It then outputs the encrypted result to the file specified by `outName`.  \n  \n [!code-cpp[Classic DES Example#1](~/add/codesnippet/cpp/m-system.security.crypto_132_1.cpp)]\n [!code-cs[Classic DES Example#1](~/add/codesnippet/csharp/m-system.security.crypto_132_1.cs)]\n [!code-vb[Classic DES Example#1](~/add/codesnippet/visualbasic/m-system.security.crypto_132_1.vb)]  \n  \n Decryption can be handled in the same way; use <xref:System.Security.Cryptography.DESCryptoServiceProvider.CreateDecryptor%2A> instead of <xref:System.Security.Cryptography.DESCryptoServiceProvider.CreateEncryptor%2A>. The same key (<xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A>) and initialization vector (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>) used to encrypt the file must be used to decrypt it."
  syntax:
    content: public DESCryptoServiceProvider ();
    parameters: []
  overload: System.Security.Cryptography.DESCryptoServiceProvider.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "데이터 암호화 표준 (<xref href=&quot;System.Security.Cryptography.DES&quot;></xref>) 암호화 서비스 공급자를 사용할 수 없습니다."
  platform:
  - net462
- uid: System.Security.Cryptography.DESCryptoServiceProvider.CreateDecryptor(System.Byte[],System.Byte[])
  id: CreateDecryptor(System.Byte[],System.Byte[])
  parent: System.Security.Cryptography.DESCryptoServiceProvider
  langs:
  - csharp
  name: CreateDecryptor(Byte[],Byte[])
  nameWithType: DESCryptoServiceProvider.CreateDecryptor(Byte[],Byte[])
  fullName: System.Security.Cryptography.DESCryptoServiceProvider.CreateDecryptor(Byte[],Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "대칭 데이터 암호화 표준 만듭니다 (<xref href=&quot;System.Security.Cryptography.DES&quot;></xref>) 지정된 된 키와 암호 해독기 개체 (<>*>) 및 초기화 벡터 (<>*>)."
  remarks: "이 메서드를 사용 하 여 생성 된 암호화 된 메시지를 해독는 <xref:System.Security.Cryptography.DESCryptoServiceProvider.CreateEncryptor%2A>동일한 매개 변수 오버 로드.</xref:System.Security.Cryptography.DESCryptoServiceProvider.CreateEncryptor%2A>"
  syntax:
    content: public override System.Security.Cryptography.ICryptoTransform CreateDecryptor (byte[] rgbKey, byte[] rgbIV);
    parameters:
    - id: rgbKey
      type: System.Byte[]
      description: "대칭 알고리즘에 사용할 비밀 키입니다."
    - id: rgbIV
      type: System.Byte[]
      description: "대칭 알고리즘에 사용할 초기화 벡터입니다."
    return:
      type: System.Security.Cryptography.ICryptoTransform
      description: "대칭 <xref href=&quot;System.Security.Cryptography.DES&quot;> </xref> 암호 해독기 개체입니다."
  overload: System.Security.Cryptography.DESCryptoServiceProvider.CreateDecryptor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "값은 <> </> *> 속성은 <xref href=&quot;System.Security.Cryptography.CipherMode&quot;> </xref>합니다.       -또는-의 값은 <> </> *> 속성은 <xref href=&quot;System.Security.Cryptography.CipherMode&quot;> </xref> 의 값과는 <xref:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize*>속성은 8 없습니다.</xref:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize*>       -또는-키 크기가 잘못 사용 했습니다.       -또는-알고리즘 키 크기를 사용할 수 없습니다."
  platform:
  - net462
- uid: System.Security.Cryptography.DESCryptoServiceProvider.CreateEncryptor(System.Byte[],System.Byte[])
  id: CreateEncryptor(System.Byte[],System.Byte[])
  parent: System.Security.Cryptography.DESCryptoServiceProvider
  langs:
  - csharp
  name: CreateEncryptor(Byte[],Byte[])
  nameWithType: DESCryptoServiceProvider.CreateEncryptor(Byte[],Byte[])
  fullName: System.Security.Cryptography.DESCryptoServiceProvider.CreateEncryptor(Byte[],Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "대칭 데이터 암호화 표준 만듭니다 (<xref href=&quot;System.Security.Cryptography.DES&quot;></xref>) 지정된 된 키와 암호기 개체 (<>*>) 및 초기화 벡터 (<>*>)."
  remarks: "사용 하 여 <xref:System.Security.Cryptography.DESCryptoServiceProvider.CreateDecryptor%2A>이 메서드의 결과 암호를 해독 하려면 같은 매개 변수 오버 로드.</xref:System.Security.Cryptography.DESCryptoServiceProvider.CreateDecryptor%2A>"
  example:
  - "The following code example shows how to create and use a <xref:System.Security.Cryptography.DESCryptoServiceProvider> object to encrypt and decrypt data in a file.  \n  \n [!code-cpp[Cryptography.DESCSP.CreateEncryptor.File#1](~/add/codesnippet/cpp/d6da7668-465d-4df8-864e-_1.cpp)]\n [!code-cs[Cryptography.DESCSP.CreateEncryptor.File#1](~/add/codesnippet/csharp/d6da7668-465d-4df8-864e-_1.cs)]\n [!code-vb[Cryptography.DESCSP.CreateEncryptor.File#1](~/add/codesnippet/visualbasic/d6da7668-465d-4df8-864e-_1.vb)]  \n  \n The following code example shows how to create and use a <xref:System.Security.Cryptography.DESCryptoServiceProvider> object to encrypt and decrypt data in memory.  \n  \n [!code-cs[Cryptography.DESCSP.CreateEncryptor.Memory#1](~/add/codesnippet/csharp/d6da7668-465d-4df8-864e-_2.cs)]\n [!code-cpp[Cryptography.DESCSP.CreateEncryptor.Memory#1](~/add/codesnippet/cpp/d6da7668-465d-4df8-864e-_2.cpp)]\n [!code-vb[Cryptography.DESCSP.CreateEncryptor.Memory#1](~/add/codesnippet/visualbasic/d6da7668-465d-4df8-864e-_2.vb)]"
  syntax:
    content: public override System.Security.Cryptography.ICryptoTransform CreateEncryptor (byte[] rgbKey, byte[] rgbIV);
    parameters:
    - id: rgbKey
      type: System.Byte[]
      description: "대칭 알고리즘에 사용할 비밀 키입니다."
    - id: rgbIV
      type: System.Byte[]
      description: "대칭 알고리즘에 사용할 초기화 벡터입니다."
    return:
      type: System.Security.Cryptography.ICryptoTransform
      description: "대칭 <xref href=&quot;System.Security.Cryptography.DES&quot;> </xref> 암호기 개체입니다."
  overload: System.Security.Cryptography.DESCryptoServiceProvider.CreateEncryptor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "값은 <> </> *> 속성은 <xref href=&quot;System.Security.Cryptography.CipherMode&quot;> </xref>합니다.       -또는-의 값은 <> </> *> 속성은 <xref href=&quot;System.Security.Cryptography.CipherMode&quot;> </xref> 의 값과는 <xref:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize*>속성은 8 없습니다.</xref:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize*>       -또는-키 크기가 잘못 사용 했습니다.       -또는-알고리즘 키 크기를 사용할 수 없습니다."
  platform:
  - net462
- uid: System.Security.Cryptography.DESCryptoServiceProvider.GenerateIV
  id: GenerateIV
  parent: System.Security.Cryptography.DESCryptoServiceProvider
  langs:
  - csharp
  name: GenerateIV()
  nameWithType: DESCryptoServiceProvider.GenerateIV()
  fullName: System.Security.Cryptography.DESCryptoServiceProvider.GenerateIV()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "임의 초기화 벡터를 생성 (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV*>) 알고리즘에 사용할.</xref:System.Security.Cryptography.SymmetricAlgorithm.IV*>"
  remarks: "이 메서드를 사용 하 여 임의 생성 <xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>없음 지정 된 경우.</xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>"
  syntax:
    content: public override void GenerateIV ();
    parameters: []
  overload: System.Security.Cryptography.DESCryptoServiceProvider.GenerateIV*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.DESCryptoServiceProvider.GenerateKey
  id: GenerateKey
  parent: System.Security.Cryptography.DESCryptoServiceProvider
  langs:
  - csharp
  name: GenerateKey()
  nameWithType: DESCryptoServiceProvider.GenerateKey()
  fullName: System.Security.Cryptography.DESCryptoServiceProvider.GenerateKey()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "에서는 오류가 발생 하는 임의 키 (<xref:System.Security.Cryptography.SymmetricAlgorithm.Key*>) 알고리즘에 사용할.</xref:System.Security.Cryptography.SymmetricAlgorithm.Key*>"
  remarks: "이 메서드를 사용 하 여 지정 되지 않으면는 임의 키를 생성 합니다. 이 메서드는 weak 키를 반환 하지 것입니다 (참조 <xref:System.Security.Cryptography.DES.IsWeakKey%2A>) 또는 semi-weak 키 (참조 <xref:System.Security.Cryptography.DES.IsSemiWeakKey%2A>).</xref:System.Security.Cryptography.DES.IsSemiWeakKey%2A> </xref:System.Security.Cryptography.DES.IsWeakKey%2A>       이 알고리즘은 64 비트의 키 길이 지원 합니다."
  syntax:
    content: public override void GenerateKey ();
    parameters: []
  overload: System.Security.Cryptography.DESCryptoServiceProvider.GenerateKey*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Cryptography.DES
  isExternal: false
  name: System.Security.Cryptography.DES
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.Security.Cryptography.DESCryptoServiceProvider.#ctor
  parent: System.Security.Cryptography.DESCryptoServiceProvider
  isExternal: false
  name: DESCryptoServiceProvider()
  nameWithType: DESCryptoServiceProvider.DESCryptoServiceProvider()
  fullName: System.Security.Cryptography.DESCryptoServiceProvider.DESCryptoServiceProvider()
- uid: System.Security.Cryptography.DESCryptoServiceProvider.CreateDecryptor(System.Byte[],System.Byte[])
  parent: System.Security.Cryptography.DESCryptoServiceProvider
  isExternal: false
  name: CreateDecryptor(Byte[],Byte[])
  nameWithType: DESCryptoServiceProvider.CreateDecryptor(Byte[],Byte[])
  fullName: System.Security.Cryptography.DESCryptoServiceProvider.CreateDecryptor(Byte[],Byte[])
- uid: System.Security.Cryptography.ICryptoTransform
  parent: System.Security.Cryptography
  isExternal: false
  name: ICryptoTransform
  nameWithType: ICryptoTransform
  fullName: System.Security.Cryptography.ICryptoTransform
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.DESCryptoServiceProvider.CreateEncryptor(System.Byte[],System.Byte[])
  parent: System.Security.Cryptography.DESCryptoServiceProvider
  isExternal: false
  name: CreateEncryptor(Byte[],Byte[])
  nameWithType: DESCryptoServiceProvider.CreateEncryptor(Byte[],Byte[])
  fullName: System.Security.Cryptography.DESCryptoServiceProvider.CreateEncryptor(Byte[],Byte[])
- uid: System.Security.Cryptography.DESCryptoServiceProvider.GenerateIV
  parent: System.Security.Cryptography.DESCryptoServiceProvider
  isExternal: false
  name: GenerateIV()
  nameWithType: DESCryptoServiceProvider.GenerateIV()
  fullName: System.Security.Cryptography.DESCryptoServiceProvider.GenerateIV()
- uid: System.Security.Cryptography.DESCryptoServiceProvider.GenerateKey
  parent: System.Security.Cryptography.DESCryptoServiceProvider
  isExternal: false
  name: GenerateKey()
  nameWithType: DESCryptoServiceProvider.GenerateKey()
  fullName: System.Security.Cryptography.DESCryptoServiceProvider.GenerateKey()
- uid: System.Security.Cryptography.DESCryptoServiceProvider.#ctor*
  parent: System.Security.Cryptography.DESCryptoServiceProvider
  isExternal: false
  name: DESCryptoServiceProvider
  nameWithType: DESCryptoServiceProvider.DESCryptoServiceProvider
- uid: System.Security.Cryptography.DESCryptoServiceProvider.CreateDecryptor*
  parent: System.Security.Cryptography.DESCryptoServiceProvider
  isExternal: false
  name: CreateDecryptor
  nameWithType: DESCryptoServiceProvider.CreateDecryptor
- uid: System.Security.Cryptography.DESCryptoServiceProvider.CreateEncryptor*
  parent: System.Security.Cryptography.DESCryptoServiceProvider
  isExternal: false
  name: CreateEncryptor
  nameWithType: DESCryptoServiceProvider.CreateEncryptor
- uid: System.Security.Cryptography.DESCryptoServiceProvider.GenerateIV*
  parent: System.Security.Cryptography.DESCryptoServiceProvider
  isExternal: false
  name: GenerateIV
  nameWithType: DESCryptoServiceProvider.GenerateIV
- uid: System.Security.Cryptography.DESCryptoServiceProvider.GenerateKey*
  parent: System.Security.Cryptography.DESCryptoServiceProvider
  isExternal: false
  name: GenerateKey
  nameWithType: DESCryptoServiceProvider.GenerateKey
