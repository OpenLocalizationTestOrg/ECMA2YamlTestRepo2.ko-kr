### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.DetailsViewCommandEventArgs
  id: DetailsViewCommandEventArgs
  children:
  - System.Web.UI.WebControls.DetailsViewCommandEventArgs.#ctor(System.Object,System.Web.UI.WebControls.CommandEventArgs)
  - System.Web.UI.WebControls.DetailsViewCommandEventArgs.CommandSource
  - System.Web.UI.WebControls.DetailsViewCommandEventArgs.Handled
  langs:
  - csharp
  name: DetailsViewCommandEventArgs
  nameWithType: DetailsViewCommandEventArgs
  fullName: System.Web.UI.WebControls.DetailsViewCommandEventArgs
  type: Class
  summary: "에 대 한 데이터를 제공는 <xref href=&quot;System.Web.UI.WebControls.DetailsView.ItemCommand&quot;> </xref> 이벤트입니다."
  remarks: "<xref:System.Web.UI.WebControls.DetailsView>발생는 <xref:System.Web.UI.WebControls.DetailsView.ItemCommand>이벤트 내에 있는 단추는 <xref:System.Web.UI.WebControls.ButtonField>, <xref:System.Web.UI.WebControls.CommandField>, 또는 <xref:System.Web.UI.WebControls.TemplateField>행 필드를 클릭 합니다.</xref:System.Web.UI.WebControls.TemplateField> </xref:System.Web.UI.WebControls.CommandField> </xref:System.Web.UI.WebControls.ButtonField> </xref:System.Web.UI.WebControls.DetailsView.ItemCommand> </xref:System.Web.UI.WebControls.DetailsView> 이 옵션을 사용 하면이 이벤트가 발생할 때마다 사용자 지정 루틴을 수행 하는 이벤트 처리기를 제공할 수 있습니다.      > [!NOTE] >는 <xref:System.Web.UI.WebControls.DetailsView>제어 하면 다른 특수 특정 단추를 클릭 하는 경우 (서로 다른 단추는 `CommandName` 속성이 &quot;Delete&quot;, &quot;삽입&quot;, &quot;페이지&quot; 또는 &quot;업데이트&quot;로 설정).</xref:System.Web.UI.WebControls.DetailsView> 컨트롤에서 제공 하는 특수 이벤트 중 하나를 사용 하 여 고려해 야 이러한 단추 중 하나를 사용할 경우 (예: <xref:System.Web.UI.WebControls.DetailsView.ItemDeleted>또는 <xref:System.Web.UI.WebControls.DetailsView.ItemDeleting>).</xref:System.Web.UI.WebControls.DetailsView.ItemDeleting> </xref:System.Web.UI.WebControls.DetailsView.ItemDeleted>       DetailsViewCommandEventArgs 개체는 이벤트 처리기에 전달 됩니다. 이벤트를 발생 하는 단추에 명령 이름이 나 명령 인수 값을 하는 경우 이러한 값을 확인 하려면 DetailsViewCommandEventArgs 개체를 사용할 수 있습니다. 명령 이름과 클릭 된 단추의 명령 인수를 확인 하려면 사용 하 여는 <xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A>및 <xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A>속성을 각각.</xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A> </xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A> 에 액세스할 수도 있습니다는 <xref:System.Web.UI.WebControls.DetailsView>제어를 사용 하 여 이벤트를 발생 시킨는 <xref:System.Web.UI.WebControls.DetailsViewCommandEventArgs.CommandSource%2A>속성.</xref:System.Web.UI.WebControls.DetailsViewCommandEventArgs.CommandSource%2A> </xref:System.Web.UI.WebControls.DetailsView>       목록이 DetailsViewCommandEventArgs 클래스의 인스턴스에 대 한 초기 속성 값에 대 한 참조는 <xref:System.Web.UI.WebControls.DetailsViewCommandEventArgs.%23ctor%2A>생성자.</xref:System.Web.UI.WebControls.DetailsViewCommandEventArgs.%23ctor%2A>"
  example:
  - "The following code example demonstrates how to use the DetailsViewCommandEventArgs object passed to the event handler for the <xref:System.Web.UI.WebControls.DetailsView.ItemCommand> event to determine the command name of the button clicked by the user. This example uses the single-file coding model.  \n  \n [!code-vb[DetailsViewCommandEventArgsCodeInline#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_153_1.aspx)]\n [!code-cs[DetailsViewCommandEventArgsCodeInline#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_153_1.aspx)]  \n  \n The following code example shows a code-behind coding model version of the previous example. For this example to work, you must copy the code below into the associated code-behind file.  \n  \n [!code-cs[DetailsViewCommandEventArgsCodeBehind2#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_153_2.aspx)]\n [!code-vb[DetailsViewCommandEventArgsCodeBehind2#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_153_2.aspx)]  \n  \n The following code example shows the code-behind file for the previous example.  \n  \n [!code-cs[DetailsViewCommandEventArgsCodeBehind2#2](~/add/codesnippet/csharp/t-system.web.ui.webcontr_153_3.cs)]\n [!code-vb[DetailsViewCommandEventArgsCodeBehind2#2](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_153_3.vb)]"
  syntax:
    content: 'public class DetailsViewCommandEventArgs : System.Web.UI.WebControls.CommandEventArgs'
  inheritance:
  - System.EventArgs
  - System.Web.UI.WebControls.CommandEventArgs
  implements: []
  inheritedMembers:
  - System.Web.UI.WebControls.CommandEventArgs.CommandArgument
  - System.Web.UI.WebControls.CommandEventArgs.CommandName
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsViewCommandEventArgs.#ctor(System.Object,System.Web.UI.WebControls.CommandEventArgs)
  id: '#ctor(System.Object,System.Web.UI.WebControls.CommandEventArgs)'
  parent: System.Web.UI.WebControls.DetailsViewCommandEventArgs
  langs:
  - csharp
  name: DetailsViewCommandEventArgs(Object,CommandEventArgs)
  nameWithType: DetailsViewCommandEventArgs.DetailsViewCommandEventArgs(Object,CommandEventArgs)
  fullName: System.Web.UI.WebControls.DetailsViewCommandEventArgs.DetailsViewCommandEventArgs(Object,CommandEventArgs)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.UI.WebControls.DetailsViewCommandEventArgs&quot;> </xref> 클래스입니다."
  remarks: "<xref:System.Web.UI.WebControls.DetailsViewCommandEventArgs>클래스</xref:System.Web.UI.WebControls.DetailsViewCommandEventArgs> 의 새 인스턴스를 초기화 하려면이 생성자를 사용 합니다.       다음 표에서 <xref:System.Web.UI.WebControls.DetailsViewCommandEventArgs>안내 하십시오.</xref:System.Web.UI.WebControls.DetailsViewCommandEventArgs> 인스턴스에 대 한 초기 속성 값을 보여 줍니다.      | 속성 | 초기 값 |   |--------------|-------------------|   | <xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A>| <xref:System.Web.UI.WebControls.CommandEventArgs>의 <xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A>속성 값에 포함 된는 `originalArgs` 매개 변수입니다. |   | <xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A>| 에 포함 된 <xref:System.Web.UI.WebControls.CommandEventArgs>개체 <xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A>속성의 값은 `originalArgs` 매개 변수입니다. |   | <xref:System.Web.UI.WebControls.DetailsViewCommandEventArgs.CommandSource%2A>| 에 포함 된 개체는 `commandSource` 매개 변수입니다. |      > [!NOTE] > 이벤트를 발생 시킬 때이 생성자는 주로 컨트롤 개발자가 사용 됩니다.</xref:System.Web.UI.WebControls.DetailsViewCommandEventArgs.CommandSource%2A>  </xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A></xref:System.Web.UI.WebControls.CommandEventArgs> </xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A>  </xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A></xref:System.Web.UI.WebControls.CommandEventArgs> </xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A>"
  syntax:
    content: public DetailsViewCommandEventArgs (object commandSource, System.Web.UI.WebControls.CommandEventArgs originalArgs);
    parameters:
    - id: commandSource
      type: System.Object
      description: "소스 명령입니다."
    - id: originalArgs
      type: System.Web.UI.WebControls.CommandEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.CommandEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Web.UI.WebControls.DetailsViewCommandEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsViewCommandEventArgs.CommandSource
  id: CommandSource
  parent: System.Web.UI.WebControls.DetailsViewCommandEventArgs
  langs:
  - csharp
  name: CommandSource
  nameWithType: DetailsViewCommandEventArgs.CommandSource
  fullName: System.Web.UI.WebControls.DetailsViewCommandEventArgs.CommandSource
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "명령의 원본을 가져옵니다."
  remarks: "CommandSource 속성을 사용 하 여 명령이 소스를 나타내는 개체의 속성에 액세스할 수 있습니다. 이 경우에 따라 됩니다는 <xref:System.Web.UI.WebControls.DetailsView>컨트롤 자체와 다른 경우에는 것은 <xref:System.Web.UI.WebControls.Button>클릭 된 컨트롤.</xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.WebControls.DetailsView>"
  example:
  - "The following code example demonstrates how to use the CommandSource property to determine which of two <xref:System.Web.UI.WebControls.DetailsView> controls raised the <xref:System.Web.UI.WebControls.DetailsView.ItemCommand> event.  \n  \n [!code-cs[DetailsViewCommandEventArgsCommandSource#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_379_1.aspx)]\n [!code-vb[DetailsViewCommandEventArgsCommandSource#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_379_1.aspx)]"
  syntax:
    content: public object CommandSource { get; }
    return:
      type: System.Object
      description: "인스턴스는 &lt;xref:System.Object?displayProperty=fullName&gt; 명령의 소스를 나타내는 클래스입니다."
  overload: System.Web.UI.WebControls.DetailsViewCommandEventArgs.CommandSource*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsViewCommandEventArgs.Handled
  id: Handled
  parent: System.Web.UI.WebControls.DetailsViewCommandEventArgs
  langs:
  - csharp
  name: Handled
  nameWithType: DetailsViewCommandEventArgs.Handled
  fullName: System.Web.UI.WebControls.DetailsViewCommandEventArgs.Handled
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "컨트롤 이벤트를 처리 했는지 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "이 속성을 설정 `true` 되도록 지정 하려면 이벤트 처리기에는 <xref:System.Web.UI.WebControls.DetailsView>제어 되므로 사용자 코드에서 처리 하는 이벤트를 처리 하지 않도록 합니다.</xref:System.Web.UI.WebControls.DetailsView>"
  syntax:
    content: public bool Handled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>데이터 바인딩 이벤트 코드 건너뛰었거나; 실행이 완료 된 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.DetailsViewCommandEventArgs.Handled*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.CommandEventArgs
  isExternal: false
  name: System.Web.UI.WebControls.CommandEventArgs
- uid: System.Web.UI.WebControls.DetailsViewCommandEventArgs.#ctor(System.Object,System.Web.UI.WebControls.CommandEventArgs)
  parent: System.Web.UI.WebControls.DetailsViewCommandEventArgs
  isExternal: false
  name: DetailsViewCommandEventArgs(Object,CommandEventArgs)
  nameWithType: DetailsViewCommandEventArgs.DetailsViewCommandEventArgs(Object,CommandEventArgs)
  fullName: System.Web.UI.WebControls.DetailsViewCommandEventArgs.DetailsViewCommandEventArgs(Object,CommandEventArgs)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.DetailsViewCommandEventArgs.CommandSource
  parent: System.Web.UI.WebControls.DetailsViewCommandEventArgs
  isExternal: false
  name: CommandSource
  nameWithType: DetailsViewCommandEventArgs.CommandSource
  fullName: System.Web.UI.WebControls.DetailsViewCommandEventArgs.CommandSource
- uid: System.Web.UI.WebControls.DetailsViewCommandEventArgs.Handled
  parent: System.Web.UI.WebControls.DetailsViewCommandEventArgs
  isExternal: false
  name: Handled
  nameWithType: DetailsViewCommandEventArgs.Handled
  fullName: System.Web.UI.WebControls.DetailsViewCommandEventArgs.Handled
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.DetailsViewCommandEventArgs.#ctor*
  parent: System.Web.UI.WebControls.DetailsViewCommandEventArgs
  isExternal: false
  name: DetailsViewCommandEventArgs
  nameWithType: DetailsViewCommandEventArgs.DetailsViewCommandEventArgs
- uid: System.Web.UI.WebControls.DetailsViewCommandEventArgs.CommandSource*
  parent: System.Web.UI.WebControls.DetailsViewCommandEventArgs
  isExternal: false
  name: CommandSource
  nameWithType: DetailsViewCommandEventArgs.CommandSource
- uid: System.Web.UI.WebControls.DetailsViewCommandEventArgs.Handled*
  parent: System.Web.UI.WebControls.DetailsViewCommandEventArgs
  isExternal: false
  name: Handled
  nameWithType: DetailsViewCommandEventArgs.Handled
