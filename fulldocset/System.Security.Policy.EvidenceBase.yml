### YamlMime:ManagedReference
items:
- uid: System.Security.Policy.EvidenceBase
  id: EvidenceBase
  children:
  - System.Security.Policy.EvidenceBase.#ctor
  - System.Security.Policy.EvidenceBase.Clone
  langs:
  - csharp
  name: EvidenceBase
  nameWithType: EvidenceBase
  fullName: System.Security.Policy.EvidenceBase
  type: Class
  summary: "증명 정보에서 파생 되어야 하는 대로 사용할 수 있는 모든 개체에서는 기본 클래스를 제공 합니다."
  remarks: "전에 [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)], 호스팅 코드를 증거로 적용 하려는 경우 증명 개체로 거의 모든 개체를 사용할 수 없습니다. 예를 들어 일부.NET Framework 코드 인식 <xref:System.Uri?displayProperty=fullName>증명 정보로 개체.</xref:System.Uri?displayProperty=fullName> 공용 언어 런타임 (CLR) 증거 개체 변수로 간주 <xref:System.Object?displayProperty=fullName>를 참조 하 고 모든 형식 안전성에 적용 되지 않았습니다.</xref:System.Object?displayProperty=fullName>       에 있는 형식으로 사용 될 수 증거 개체 암시적 제한이 있기 때문에 이런 문제가 나타납니다. 특히, 증명 정보로 사용 되는 모든 개체 직렬화가 가능 해야 및 수 없는 `null`합니다. 이러한 요구 사항을 충족 되지 않은 경우 이러한 가정을 중 하나 필요로 하는 작업을 수행할 때마다 CLR에서 예외가 발생 했습니다.       에 도입 된 모든 증거 개체에서 파생 되어야 합니다, EvidenceBase 클래스는 [!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)] 증명 정보로 사용할 수 있는 개체의 형식에 대 한 제약 조건을 사용 하 고 모든 증거 개체에 새 기능 및 요구 사항을 추가 하는 기능을 제공 합니다. EvidenceBase 클래스 확인을 인스턴스화하면, 증거 개체는 직렬화 가능 합니다. 또한 새 증거 요구 사항을 새 기본 구현을 기본 클래스에 추가 하 여 만들 수 있습니다.       증거 개체에서 업데이트 될 때 CLR에 사용 되는 모든 형식에서 [!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)] EvidenceBase에서 파생 되도록 합니다."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class EvidenceBase
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Policy.EvidenceBase.#ctor
  id: '#ctor'
  parent: System.Security.Policy.EvidenceBase
  langs:
  - csharp
  name: EvidenceBase()
  nameWithType: EvidenceBase.EvidenceBase()
  fullName: System.Security.Policy.EvidenceBase.EvidenceBase()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Security.Policy.EvidenceBase&quot;> </xref> 클래스입니다."
  remarks: "증명 정보로 사용할 수 있는 모든 개체는 직렬화 해야 합니다. 파생된 클래스 serializable 특성 전파 되지 않기 때문에 다른 파생된 형식으로 직렬화를 표시 해야 합니다."
  syntax:
    content: protected EvidenceBase ();
    parameters: []
  overload: System.Security.Policy.EvidenceBase.#ctor*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "증명 정보로 사용할 개체를 직렬화 할 수 없는 경우"
  platform:
  - net462
- uid: System.Security.Policy.EvidenceBase.Clone
  id: Clone
  parent: System.Security.Policy.EvidenceBase
  langs:
  - csharp
  name: Clone()
  nameWithType: EvidenceBase.Clone()
  fullName: System.Security.Policy.EvidenceBase.Clone()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "현재 인스턴스의 전체 복사본 인 새 개체를 만듭니다."
  remarks: "중복 복사본은 컬렉션의 모든 증거 개체를 포함 하는 전체 복사본입니다."
  syntax:
    content: public virtual System.Security.Policy.EvidenceBase Clone ();
    parameters: []
    return:
      type: System.Security.Policy.EvidenceBase
      description: "이 증거 개체의 중복 복사본입니다."
  overload: System.Security.Policy.EvidenceBase.Clone*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Security.Policy.EvidenceBase.#ctor
  parent: System.Security.Policy.EvidenceBase
  isExternal: false
  name: EvidenceBase()
  nameWithType: EvidenceBase.EvidenceBase()
  fullName: System.Security.Policy.EvidenceBase.EvidenceBase()
- uid: System.Security.Policy.EvidenceBase.Clone
  parent: System.Security.Policy.EvidenceBase
  isExternal: false
  name: Clone()
  nameWithType: EvidenceBase.Clone()
  fullName: System.Security.Policy.EvidenceBase.Clone()
- uid: System.Security.Policy.EvidenceBase
  parent: System.Security.Policy
  isExternal: false
  name: EvidenceBase
  nameWithType: EvidenceBase
  fullName: System.Security.Policy.EvidenceBase
- uid: System.Security.Policy.EvidenceBase.#ctor*
  parent: System.Security.Policy.EvidenceBase
  isExternal: false
  name: EvidenceBase
  nameWithType: EvidenceBase.EvidenceBase
- uid: System.Security.Policy.EvidenceBase.Clone*
  parent: System.Security.Policy.EvidenceBase
  isExternal: false
  name: Clone
  nameWithType: EvidenceBase.Clone
