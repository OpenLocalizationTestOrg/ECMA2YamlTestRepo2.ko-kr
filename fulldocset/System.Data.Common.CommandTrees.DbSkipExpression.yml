### YamlMime:ManagedReference
items:
- uid: System.Data.Common.CommandTrees.DbSkipExpression
  id: DbSkipExpression
  children:
  - System.Data.Common.CommandTrees.DbSkipExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)
  - System.Data.Common.CommandTrees.DbSkipExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor`1)
  - System.Data.Common.CommandTrees.DbSkipExpression.Count
  - System.Data.Common.CommandTrees.DbSkipExpression.Input
  - System.Data.Common.CommandTrees.DbSkipExpression.SortOrder
  langs:
  - csharp
  name: DbSkipExpression
  nameWithType: DbSkipExpression
  fullName: System.Data.Common.CommandTrees.DbSkipExpression
  type: Class
  summary: "입력된 집합에 있는 요소의 지정 된 수를 건너뜁니다. DbSkipExpression 입력된 컬렉션이 정렬 된 후에 사용할 수는 정렬 키에 지정 된 대로 합니다."
  remarks: "DbSkipExpression 이미 정렬 하려면 입력된 컬렉션이 필요 합니다. 정렬 순서로 표시 되는 <xref:System.Data.Common.CommandTrees.DbSkipExpression.SortOrder%2A>속성.</xref:System.Data.Common.CommandTrees.DbSkipExpression.SortOrder%2A> <xref:System.Data.Common.CommandTrees.DbSkipExpression.SortOrder%2A>목록이 <xref:System.Data.Common.CommandTrees.DbSortClause>개체입니다.</xref:System.Data.Common.CommandTrees.DbSortClause></xref:System.Data.Common.CommandTrees.DbSkipExpression.SortOrder%2A>"
  syntax:
    content: 'public sealed class DbSkipExpression : System.Data.Common.CommandTrees.DbExpression'
  inheritance:
  - System.Object
  - System.Data.Common.CommandTrees.DbExpression
  implements: []
  inheritedMembers:
  - System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)
  - System.Data.Common.CommandTrees.DbExpression.ExpressionKind
  - System.Data.Common.CommandTrees.DbExpression.FromBinary(System.Byte[])
  - System.Data.Common.CommandTrees.DbExpression.FromBoolean(System.Nullable{System.Boolean})
  - System.Data.Common.CommandTrees.DbExpression.FromByte(System.Nullable{System.Byte})
  - System.Data.Common.CommandTrees.DbExpression.FromDateTime(System.Nullable{System.DateTime})
  - System.Data.Common.CommandTrees.DbExpression.FromDateTimeOffset(System.Nullable{System.DateTimeOffset})
  - System.Data.Common.CommandTrees.DbExpression.FromDecimal(System.Nullable{System.Decimal})
  - System.Data.Common.CommandTrees.DbExpression.FromDouble(System.Nullable{System.Double})
  - System.Data.Common.CommandTrees.DbExpression.FromGeography(System.Data.Spatial.DbGeography)
  - System.Data.Common.CommandTrees.DbExpression.FromGeometry(System.Data.Spatial.DbGeometry)
  - System.Data.Common.CommandTrees.DbExpression.FromGuid(System.Nullable{System.Guid})
  - System.Data.Common.CommandTrees.DbExpression.FromInt16(System.Nullable{System.Int16})
  - System.Data.Common.CommandTrees.DbExpression.FromInt32(System.Nullable{System.Int32})
  - System.Data.Common.CommandTrees.DbExpression.FromInt64(System.Nullable{System.Int64})
  - System.Data.Common.CommandTrees.DbExpression.FromSingle(System.Nullable{System.Single})
  - System.Data.Common.CommandTrees.DbExpression.FromString(System.String)
  - System.Data.Common.CommandTrees.DbExpression.GetHashCode
  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Byte[])
  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Data.Spatial.DbGeography)
  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Data.Spatial.DbGeometry)
  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Boolean})
  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Byte})
  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.DateTime})
  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.DateTimeOffset})
  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Decimal})
  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Double})
  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Guid})
  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Int16})
  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Int32})
  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Int64})
  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Single})
  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.String)
  - System.Data.Common.CommandTrees.DbExpression.ResultType
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.DbSkipExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)
  id: Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)
  parent: System.Data.Common.CommandTrees.DbSkipExpression
  langs:
  - csharp
  name: Accept(DbExpressionVisitor)
  nameWithType: DbSkipExpression.Accept(DbExpressionVisitor)
  fullName: System.Data.Common.CommandTrees.DbSkipExpression.Accept(DbExpressionVisitor)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees
  summary: "결과 값을 생성 하지 않는 식의 visitor 패턴을 구현 합니다."
  syntax:
    content: public override void Accept (System.Data.Common.CommandTrees.DbExpressionVisitor visitor);
    parameters:
    - id: visitor
      type: System.Data.Common.CommandTrees.DbExpressionVisitor
      description: "인스턴스 <xref href=&quot;System.Data.Common.CommandTrees.DbExpressionVisitor&quot;> </xref>합니다."
  overload: System.Data.Common.CommandTrees.DbSkipExpression.Accept*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>visitor</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.DbSkipExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor`1)
  id: Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor`1)
  parent: System.Data.Common.CommandTrees.DbSkipExpression
  langs:
  - csharp
  name: Accept(DbExpressionVisitor<TResultType>)
  nameWithType: DbSkipExpression.Accept(DbExpressionVisitor<TResultType>)
  fullName: System.Data.Common.CommandTrees.DbSkipExpression.Accept(DbExpressionVisitor<TResultType>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees
  syntax:
    content: public override TResultType Accept<TResultType> (System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType> visitor);
    parameters:
    - id: visitor
      type: System.Data.Common.CommandTrees.DbExpressionVisitor`1
      description: "추가할 수 있습니다."
    return:
      type: TResultType
      description: "추가할 수 있습니다."
  overload: System.Data.Common.CommandTrees.DbSkipExpression.Accept<TResultType>*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.DbSkipExpression.Count
  id: Count
  parent: System.Data.Common.CommandTrees.DbSkipExpression
  langs:
  - csharp
  name: Count
  nameWithType: DbSkipExpression.Count
  fullName: System.Data.Common.CommandTrees.DbSkipExpression.Count
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees
  summary: "입력된 컬렉션에서 건너뛸 요소 수를 지정 하는 식을 가져오거나 설정 합니다."
  syntax:
    content: public System.Data.Common.CommandTrees.DbExpression Count { get; }
    return:
      type: System.Data.Common.CommandTrees.DbExpression
      description: "입력된 컬렉션에서 건너뛸 요소 수를 지정 하는 식입니다."
  overload: System.Data.Common.CommandTrees.DbSkipExpression.Count*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "이 식은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "명령 트리와 관련 되지 않은 식이 <xref href=&quot;System.Data.Common.CommandTrees.DbSkipExpression&quot;> </xref>; 식이 아닌 한 <xref href=&quot;System.Data.Common.CommandTrees.DbConstantExpression&quot;> </xref> 또는 <xref href=&quot;System.Data.Common.CommandTrees.DbParameterReferenceExpression&quot;> </xref>;       또는 형식 식의 결과 형식이 다르거나으로 64 비트 정수 형식입니다."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.DbSkipExpression.Input
  id: Input
  parent: System.Data.Common.CommandTrees.DbSkipExpression
  langs:
  - csharp
  name: Input
  nameWithType: DbSkipExpression.Input
  fullName: System.Data.Common.CommandTrees.DbSkipExpression.Input
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees
  summary: "가져옵니다는 <xref href=&quot;System.Data.Common.CommandTrees.DbExpressionBinding&quot;> </xref> 입력된 집합을 지정 하는 합니다."
  syntax:
    content: public System.Data.Common.CommandTrees.DbExpressionBinding Input { get; }
    return:
      type: System.Data.Common.CommandTrees.DbExpressionBinding
      description: "<xref href=&quot;System.Data.Common.CommandTrees.DbExpressionBinding&quot;> </xref> 입력된 집합을 지정 하는 합니다."
  overload: System.Data.Common.CommandTrees.DbSkipExpression.Input*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.DbSkipExpression.SortOrder
  id: SortOrder
  parent: System.Data.Common.CommandTrees.DbSkipExpression
  langs:
  - csharp
  name: SortOrder
  nameWithType: DbSkipExpression.SortOrder
  fullName: System.Data.Common.CommandTrees.DbSkipExpression.SortOrder
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees
  summary: "가져옵니다는 <xref href=&quot;System.Data.Common.CommandTrees.DbSortClause&quot;> </xref> 정렬 순서를 정의 하는 목록입니다."
  remarks: "<xref:System.Data.Common.CommandTrees.DbSkipExpression>이미 정렬 하려면 입력된 컬렉션이 필요 합니다.</xref:System.Data.Common.CommandTrees.DbSkipExpression> 정렬 순서 SortOrder 속성으로 표시 됩니다. SortOrder는 목록이 <xref:System.Data.Common.CommandTrees.DbSortClause>개체입니다.</xref:System.Data.Common.CommandTrees.DbSortClause>"
  syntax:
    content: public System.Collections.Generic.IList<System.Data.Common.CommandTrees.DbSortClause> SortOrder { get; }
    return:
      type: System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbSortClause}
      description: "A <xref href=&quot;System.Data.Common.CommandTrees.DbSortClause&quot;> </xref> 정렬 순서를 정의 하는 목록입니다."
  overload: System.Data.Common.CommandTrees.DbSkipExpression.SortOrder*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Common.CommandTrees.DbExpression
  isExternal: false
  name: System.Data.Common.CommandTrees.DbExpression
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Data.Common.CommandTrees.DbSkipExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)
  parent: System.Data.Common.CommandTrees.DbSkipExpression
  isExternal: false
  name: Accept(DbExpressionVisitor)
  nameWithType: DbSkipExpression.Accept(DbExpressionVisitor)
  fullName: System.Data.Common.CommandTrees.DbSkipExpression.Accept(DbExpressionVisitor)
- uid: System.Data.Common.CommandTrees.DbExpressionVisitor
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpressionVisitor
  nameWithType: DbExpressionVisitor
  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor
- uid: System.Data.Common.CommandTrees.DbSkipExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor`1)
  parent: System.Data.Common.CommandTrees.DbSkipExpression
  isExternal: false
  name: Accept(DbExpressionVisitor<TResultType>)
  nameWithType: DbSkipExpression.Accept(DbExpressionVisitor<TResultType>)
  fullName: System.Data.Common.CommandTrees.DbSkipExpression.Accept(DbExpressionVisitor<TResultType>)
- uid: TResultType
  isExternal: true
  name: TResultType
  nameWithType: TResultType
  fullName: TResultType
- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpressionVisitor<TResultType>
  nameWithType: DbExpressionVisitor<TResultType>
  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>
- uid: System.Data.Common.CommandTrees.DbSkipExpression.Count
  parent: System.Data.Common.CommandTrees.DbSkipExpression
  isExternal: false
  name: Count
  nameWithType: DbSkipExpression.Count
  fullName: System.Data.Common.CommandTrees.DbSkipExpression.Count
- uid: System.Data.Common.CommandTrees.DbSkipExpression.Input
  parent: System.Data.Common.CommandTrees.DbSkipExpression
  isExternal: false
  name: Input
  nameWithType: DbSkipExpression.Input
  fullName: System.Data.Common.CommandTrees.DbSkipExpression.Input
- uid: System.Data.Common.CommandTrees.DbExpressionBinding
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpressionBinding
  nameWithType: DbExpressionBinding
  fullName: System.Data.Common.CommandTrees.DbExpressionBinding
- uid: System.Data.Common.CommandTrees.DbSkipExpression.SortOrder
  parent: System.Data.Common.CommandTrees.DbSkipExpression
  isExternal: false
  name: SortOrder
  nameWithType: DbSkipExpression.SortOrder
  fullName: System.Data.Common.CommandTrees.DbSkipExpression.SortOrder
- uid: System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbSortClause}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<DbSortClause>
  nameWithType: IList<DbSortClause>
  fullName: System.Collections.Generic.IList<System.Data.Common.CommandTrees.DbSortClause>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.Data.Common.CommandTrees.DbSortClause>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.Common.CommandTrees.DbSortClause
    name: DbSortClause
    nameWithType: DbSortClause
    fullName: DbSortClause
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Common.CommandTrees.DbSkipExpression.Accept*
  parent: System.Data.Common.CommandTrees.DbSkipExpression
  isExternal: false
  name: Accept
  nameWithType: DbSkipExpression.Accept
- uid: System.Data.Common.CommandTrees.DbSkipExpression.Accept<TResultType>*
  parent: System.Data.Common.CommandTrees.DbSkipExpression
  isExternal: false
  name: Accept<TResultType>
  nameWithType: DbSkipExpression.Accept<TResultType>
- uid: System.Data.Common.CommandTrees.DbSkipExpression.Count*
  parent: System.Data.Common.CommandTrees.DbSkipExpression
  isExternal: false
  name: Count
  nameWithType: DbSkipExpression.Count
- uid: System.Data.Common.CommandTrees.DbSkipExpression.Input*
  parent: System.Data.Common.CommandTrees.DbSkipExpression
  isExternal: false
  name: Input
  nameWithType: DbSkipExpression.Input
- uid: System.Data.Common.CommandTrees.DbSkipExpression.SortOrder*
  parent: System.Data.Common.CommandTrees.DbSkipExpression
  isExternal: false
  name: SortOrder
  nameWithType: DbSkipExpression.SortOrder
