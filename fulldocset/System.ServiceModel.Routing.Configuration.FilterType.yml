### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Routing.Configuration.FilterType
  id: FilterType
  children:
  - System.ServiceModel.Routing.Configuration.FilterType.Action
  - System.ServiceModel.Routing.Configuration.FilterType.And
  - System.ServiceModel.Routing.Configuration.FilterType.Custom
  - System.ServiceModel.Routing.Configuration.FilterType.EndpointAddress
  - System.ServiceModel.Routing.Configuration.FilterType.EndpointName
  - System.ServiceModel.Routing.Configuration.FilterType.MatchAll
  - System.ServiceModel.Routing.Configuration.FilterType.PrefixEndpointAddress
  - System.ServiceModel.Routing.Configuration.FilterType.XPath
  langs:
  - csharp
  name: FilterType
  nameWithType: FilterType
  fullName: System.ServiceModel.Routing.Configuration.FilterType
  type: Enum
  summary: "메시지를 라우팅할 때 사용할 필터의 유형을 지정 합니다."
  remarks: '[!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]FilterType를 사용 하 여 참조 <xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A>.</xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A>'
  syntax:
    content: public enum FilterType
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.ServiceModel.Routing.Configuration.FilterType.Action
  id: Action
  parent: System.ServiceModel.Routing.Configuration.FilterType
  langs:
  - csharp
  name: Action
  nameWithType: FilterType.Action
  fullName: System.ServiceModel.Routing.Configuration.FilterType.Action
  type: Field
  assemblies:
  - System.ServiceModel.Routing
  namespace: System.ServiceModel.Routing.Configuration
  summary: "사용 하 여 <xref href=&quot;System.ServiceModel.Dispatcher.ActionMessageFilter&quot;> </xref> 동작에 필터를 적용 합니다."
  syntax:
    content: Action
    return:
      type: System.ServiceModel.Routing.Configuration.FilterType
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Routing.Configuration.FilterType.And
  id: And
  parent: System.ServiceModel.Routing.Configuration.FilterType
  langs:
  - csharp
  name: And
  nameWithType: FilterType.And
  fullName: System.ServiceModel.Routing.Configuration.FilterType.And
  type: Field
  assemblies:
  - System.ServiceModel.Routing
  namespace: System.ServiceModel.Routing.Configuration
  summary: "사용 하 여 <xref href=&quot;System.ServiceModel.Dispatcher.StrictAndMessageFilter&quot;> </xref> 함께 필터링 두 메시지 필터를 적용 합니다."
  syntax:
    content: And
    return:
      type: System.ServiceModel.Routing.Configuration.FilterType
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Routing.Configuration.FilterType.Custom
  id: Custom
  parent: System.ServiceModel.Routing.Configuration.FilterType
  langs:
  - csharp
  name: Custom
  nameWithType: FilterType.Custom
  fullName: System.ServiceModel.Routing.Configuration.FilterType.Custom
  type: Field
  assemblies:
  - System.ServiceModel.Routing
  namespace: System.ServiceModel.Routing.Configuration
  summary: "사용자 정의 필터를 사용 합니다."
  syntax:
    content: Custom
    return:
      type: System.ServiceModel.Routing.Configuration.FilterType
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Routing.Configuration.FilterType.EndpointAddress
  id: EndpointAddress
  parent: System.ServiceModel.Routing.Configuration.FilterType
  langs:
  - csharp
  name: EndpointAddress
  nameWithType: FilterType.EndpointAddress
  fullName: System.ServiceModel.Routing.Configuration.FilterType.EndpointAddress
  type: Field
  assemblies:
  - System.ServiceModel.Routing
  namespace: System.ServiceModel.Routing.Configuration
  summary: "사용 하 여 <xref href=&quot;System.ServiceModel.Dispatcher.EndpointAddressMessageFilter&quot;> </xref> 와 <> </> *>로 설정 * *false** 주소에 필터를 적용 합니다."
  syntax:
    content: EndpointAddress
    return:
      type: System.ServiceModel.Routing.Configuration.FilterType
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Routing.Configuration.FilterType.EndpointName
  id: EndpointName
  parent: System.ServiceModel.Routing.Configuration.FilterType
  langs:
  - csharp
  name: EndpointName
  nameWithType: FilterType.EndpointName
  fullName: System.ServiceModel.Routing.Configuration.FilterType.EndpointName
  type: Field
  assemblies:
  - System.ServiceModel.Routing
  namespace: System.ServiceModel.Routing.Configuration
  summary: "사용 하 여는 <xref href=&quot;System.ServiceModel.Dispatcher.EndpointNameMessageFilter&quot;> </xref> 서비스 끝점의 이름을 필터링 할 수 있습니다."
  syntax:
    content: EndpointName
    return:
      type: System.ServiceModel.Routing.Configuration.FilterType
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Routing.Configuration.FilterType.MatchAll
  id: MatchAll
  parent: System.ServiceModel.Routing.Configuration.FilterType
  langs:
  - csharp
  name: MatchAll
  nameWithType: FilterType.MatchAll
  fullName: System.ServiceModel.Routing.Configuration.FilterType.MatchAll
  type: Field
  assemblies:
  - System.ServiceModel.Routing
  namespace: System.ServiceModel.Routing.Configuration
  summary: "사용 하 여 <xref href=&quot;System.ServiceModel.Dispatcher.MatchAllMessageFilter&quot;> </xref> 모든 메시지를 일치 시킵니다."
  syntax:
    content: MatchAll
    return:
      type: System.ServiceModel.Routing.Configuration.FilterType
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Routing.Configuration.FilterType.PrefixEndpointAddress
  id: PrefixEndpointAddress
  parent: System.ServiceModel.Routing.Configuration.FilterType
  langs:
  - csharp
  name: PrefixEndpointAddress
  nameWithType: FilterType.PrefixEndpointAddress
  fullName: System.ServiceModel.Routing.Configuration.FilterType.PrefixEndpointAddress
  type: Field
  assemblies:
  - System.ServiceModel.Routing
  namespace: System.ServiceModel.Routing.Configuration
  summary: "사용 하 여 <xref href=&quot;System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter&quot;> </xref> 와 <> </> *>로 설정 * *false** 가장 긴 접두사 일치를 사용 하 여 주소에 필터를 적용 합니다."
  syntax:
    content: PrefixEndpointAddress
    return:
      type: System.ServiceModel.Routing.Configuration.FilterType
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Routing.Configuration.FilterType.XPath
  id: XPath
  parent: System.ServiceModel.Routing.Configuration.FilterType
  langs:
  - csharp
  name: XPath
  nameWithType: FilterType.XPath
  fullName: System.ServiceModel.Routing.Configuration.FilterType.XPath
  type: Field
  assemblies:
  - System.ServiceModel.Routing
  namespace: System.ServiceModel.Routing.Configuration
  summary: "사용 하 여는 <xref href=&quot;System.ServiceModel.Dispatcher.XPathMessageFilter&quot;> </xref> XPath 식에 필터를 적용 합니다."
  syntax:
    content: XPath
    return:
      type: System.ServiceModel.Routing.Configuration.FilterType
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.ServiceModel.Routing.Configuration.FilterType.Action
  parent: System.ServiceModel.Routing.Configuration.FilterType
  isExternal: false
  name: Action
  nameWithType: FilterType.Action
  fullName: System.ServiceModel.Routing.Configuration.FilterType.Action
- uid: System.ServiceModel.Routing.Configuration.FilterType
  parent: System.ServiceModel.Routing.Configuration
  isExternal: false
  name: FilterType
  nameWithType: FilterType
  fullName: System.ServiceModel.Routing.Configuration.FilterType
- uid: System.ServiceModel.Routing.Configuration.FilterType.And
  parent: System.ServiceModel.Routing.Configuration.FilterType
  isExternal: false
  name: And
  nameWithType: FilterType.And
  fullName: System.ServiceModel.Routing.Configuration.FilterType.And
- uid: System.ServiceModel.Routing.Configuration.FilterType.Custom
  parent: System.ServiceModel.Routing.Configuration.FilterType
  isExternal: false
  name: Custom
  nameWithType: FilterType.Custom
  fullName: System.ServiceModel.Routing.Configuration.FilterType.Custom
- uid: System.ServiceModel.Routing.Configuration.FilterType.EndpointAddress
  parent: System.ServiceModel.Routing.Configuration.FilterType
  isExternal: false
  name: EndpointAddress
  nameWithType: FilterType.EndpointAddress
  fullName: System.ServiceModel.Routing.Configuration.FilterType.EndpointAddress
- uid: System.ServiceModel.Routing.Configuration.FilterType.EndpointName
  parent: System.ServiceModel.Routing.Configuration.FilterType
  isExternal: false
  name: EndpointName
  nameWithType: FilterType.EndpointName
  fullName: System.ServiceModel.Routing.Configuration.FilterType.EndpointName
- uid: System.ServiceModel.Routing.Configuration.FilterType.MatchAll
  parent: System.ServiceModel.Routing.Configuration.FilterType
  isExternal: false
  name: MatchAll
  nameWithType: FilterType.MatchAll
  fullName: System.ServiceModel.Routing.Configuration.FilterType.MatchAll
- uid: System.ServiceModel.Routing.Configuration.FilterType.PrefixEndpointAddress
  parent: System.ServiceModel.Routing.Configuration.FilterType
  isExternal: false
  name: PrefixEndpointAddress
  nameWithType: FilterType.PrefixEndpointAddress
  fullName: System.ServiceModel.Routing.Configuration.FilterType.PrefixEndpointAddress
- uid: System.ServiceModel.Routing.Configuration.FilterType.XPath
  parent: System.ServiceModel.Routing.Configuration.FilterType
  isExternal: false
  name: XPath
  nameWithType: FilterType.XPath
  fullName: System.ServiceModel.Routing.Configuration.FilterType.XPath
