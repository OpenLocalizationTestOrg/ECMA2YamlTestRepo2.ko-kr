### YamlMime:ManagedReference
items:
- uid: System.Xml.Schema.XmlSchemaDatatype
  id: XmlSchemaDatatype
  children:
  - System.Xml.Schema.XmlSchemaDatatype.#ctor
  - System.Xml.Schema.XmlSchemaDatatype.ChangeType(System.Object,System.Type)
  - System.Xml.Schema.XmlSchemaDatatype.ChangeType(System.Object,System.Type,System.Xml.IXmlNamespaceResolver)
  - System.Xml.Schema.XmlSchemaDatatype.IsDerivedFrom(System.Xml.Schema.XmlSchemaDatatype)
  - System.Xml.Schema.XmlSchemaDatatype.ParseValue(System.String,System.Xml.XmlNameTable,System.Xml.IXmlNamespaceResolver)
  - System.Xml.Schema.XmlSchemaDatatype.TokenizedType
  - System.Xml.Schema.XmlSchemaDatatype.TypeCode
  - System.Xml.Schema.XmlSchemaDatatype.ValueType
  - System.Xml.Schema.XmlSchemaDatatype.Variety
  langs:
  - csharp
  name: XmlSchemaDatatype
  nameWithType: XmlSchemaDatatype
  fullName: System.Xml.Schema.XmlSchemaDatatype
  type: Class
  summary: "XmlSchemaDatatype 클래스는 XML 스키마 정의 언어 (XSD) 형식을 공용 언어 런타임 (CLR) 형식에 매핑하기 위한 추상 클래스입니다."
  remarks: ''
  example:
  - "The following example shows use of the XmlSchemaDatatype class.  \n  \n [!code-cpp[Classic Webdata XmlSchemaDatatype Example#1](~/add/codesnippet/cpp/t-system.xml.schema.xmls_39_1.cpp)]\n [!code-cs[Classic Webdata XmlSchemaDatatype Example#1](~/add/codesnippet/csharp/t-system.xml.schema.xmls_39_1.cs)]\n [!code-vb[Classic Webdata XmlSchemaDatatype Example#1](~/add/codesnippet/visualbasic/t-system.xml.schema.xmls_39_1.vb)]  \n  \n The following XML file is used for the preceding code example.  \n  \n [!code-xml[Classic Webdata XmlSchemaDatatype Example#2](~/add/codesnippet/xml/t-system.xml.schema.xmls_39_2.xsd)]"
  syntax:
    content: public abstract class XmlSchemaDatatype
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaDatatype.#ctor
  id: '#ctor'
  parent: System.Xml.Schema.XmlSchemaDatatype
  langs:
  - csharp
  name: XmlSchemaDatatype()
  nameWithType: XmlSchemaDatatype.XmlSchemaDatatype()
  fullName: System.Xml.Schema.XmlSchemaDatatype.XmlSchemaDatatype()
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Xml.Schema.XmlSchemaDatatype&quot;> </xref> 클래스입니다."
  remarks: "이 생성자는이 형식으로 상태를 초기화 하는 파생된 클래스 생성자에서 호출 됩니다."
  syntax:
    content: protected XmlSchemaDatatype ();
    parameters: []
  overload: System.Xml.Schema.XmlSchemaDatatype.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaDatatype.ChangeType(System.Object,System.Type)
  id: ChangeType(System.Object,System.Type)
  parent: System.Xml.Schema.XmlSchemaDatatype
  langs:
  - csharp
  name: ChangeType(Object,Type)
  nameWithType: XmlSchemaDatatype.ChangeType(Object,Type)
  fullName: System.Xml.Schema.XmlSchemaDatatype.ChangeType(Object,Type)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "지정 된 값, 해당 형식을 XML 스키마 형식의 올바른 공용 언어 런타임 (CLR) 표시 중 하나에서 표현으로 변환의 <xref href=&quot;System.Xml.Schema.XmlSchemaDatatype&quot;> </xref>, 지정 된 CLR 형식입니다."
  remarks: "형식에 대 한 자세한 내용은 지원에 <xref:System.Xml?displayProperty=fullName>클래스와 XML 데이터 형식 변환 참조는 [System.Xml 클래스에서 지 원하는 형식](~/add/includes/ajax-current-ext-md.md) 항목.</xref:System.Xml?displayProperty=fullName>"
  syntax:
    content: public virtual object ChangeType (object value, Type targetType);
    parameters:
    - id: value
      type: System.Object
      description: "지정된 된 형식으로 변환할 입력된 값입니다."
    - id: targetType
      type: System.Type
      description: "입력된 값을 변환할 대상 형식입니다."
    return:
      type: System.Object
      description: "변환 된 입력된 값입니다."
  overload: System.Xml.Schema.XmlSchemaDatatype.ChangeType*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<xref:System.Object>또는 <xref:System.Type>매개 변수는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Type> </xref:System.Object>"
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "가 나타내는 형식이 <xref href=&quot;System.Xml.Schema.XmlSchemaDatatype&quot;> </xref> 지정 된 형식과 지정 된 값의 형식에서 변환을 지원 하지 않습니다."
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaDatatype.ChangeType(System.Object,System.Type,System.Xml.IXmlNamespaceResolver)
  id: ChangeType(System.Object,System.Type,System.Xml.IXmlNamespaceResolver)
  parent: System.Xml.Schema.XmlSchemaDatatype
  langs:
  - csharp
  name: ChangeType(Object,Type,IXmlNamespaceResolver)
  nameWithType: XmlSchemaDatatype.ChangeType(Object,Type,IXmlNamespaceResolver)
  fullName: System.Xml.Schema.XmlSchemaDatatype.ChangeType(Object,Type,IXmlNamespaceResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "지정 된 값, 해당 형식을 XML 스키마 형식의 올바른 공용 언어 런타임 (CLR) 표시 중 하나에서 표현으로 변환은 <xref href=&quot;System.Xml.Schema.XmlSchemaDatatype&quot;> </xref>를 사용 하 여 지정 된 CLR 유형에 <xref:System.Xml.IXmlNamespaceResolver>경우는 <xref href=&quot;System.Xml.Schema.XmlSchemaDatatype&quot;> </xref> 합니다.에서 파생 된 xs: qname 형식 또는 형식을 나타내는</xref:System.Xml.IXmlNamespaceResolver>"
  remarks: "형식에 대 한 자세한 내용은 지원에 <xref:System.Xml?displayProperty=fullName>클래스와 XML 데이터 형식 변환 참조는 [System.Xml 클래스에서 지 원하는 형식](~/add/includes/ajax-current-ext-md.md) 항목.</xref:System.Xml?displayProperty=fullName>"
  syntax:
    content: public virtual object ChangeType (object value, Type targetType, System.Xml.IXmlNamespaceResolver namespaceResolver);
    parameters:
    - id: value
      type: System.Object
      description: "지정된 된 형식으로 변환할 입력된 값입니다."
    - id: targetType
      type: System.Type
      description: "입력된 값을 변환할 대상 형식입니다."
    - id: namespaceResolver
      type: System.Xml.IXmlNamespaceResolver
      description: "<xref:System.Xml.IXmlNamespaceResolver>네임 스페이스 접두사를 확인 하는 데 사용 되는.</xref:System.Xml.IXmlNamespaceResolver> 이만 사용 하는 경우는 <xref href=&quot;System.Xml.Schema.XmlSchemaDatatype&quot;> </xref> xs: qname 형식 또는 형식에서 파생 된 나타냅니다."
    return:
      type: System.Object
      description: "변환 된 입력된 값입니다."
  overload: System.Xml.Schema.XmlSchemaDatatype.ChangeType*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<xref:System.Object>또는 <xref:System.Type>매개 변수는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Type> </xref:System.Object>"
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "가 나타내는 형식이 <xref href=&quot;System.Xml.Schema.XmlSchemaDatatype&quot;> </xref> 지정 된 형식과 지정 된 값의 형식에서 변환을 지원 하지 않습니다."
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaDatatype.IsDerivedFrom(System.Xml.Schema.XmlSchemaDatatype)
  id: IsDerivedFrom(System.Xml.Schema.XmlSchemaDatatype)
  parent: System.Xml.Schema.XmlSchemaDatatype
  langs:
  - csharp
  name: IsDerivedFrom(XmlSchemaDatatype)
  nameWithType: XmlSchemaDatatype.IsDerivedFrom(XmlSchemaDatatype)
  fullName: System.Xml.Schema.XmlSchemaDatatype.IsDerivedFrom(XmlSchemaDatatype)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "IsDerivedFrom 메서드는 항상 반환 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  syntax:
    content: public virtual bool IsDerivedFrom (System.Xml.Schema.XmlSchemaDatatype datatype);
    parameters:
    - id: datatype
      type: System.Xml.Schema.XmlSchemaDatatype
      description: "The <xref href=&quot;System.Xml.Schema.XmlSchemaDatatype&quot;></xref>."
    return:
      type: System.Boolean
      description: "항상 반환 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Xml.Schema.XmlSchemaDatatype.IsDerivedFrom*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaDatatype.ParseValue(System.String,System.Xml.XmlNameTable,System.Xml.IXmlNamespaceResolver)
  id: ParseValue(System.String,System.Xml.XmlNameTable,System.Xml.IXmlNamespaceResolver)
  parent: System.Xml.Schema.XmlSchemaDatatype
  langs:
  - csharp
  name: ParseValue(String,XmlNameTable,IXmlNamespaceResolver)
  nameWithType: XmlSchemaDatatype.ParseValue(String,XmlNameTable,IXmlNamespaceResolver)
  fullName: System.Xml.Schema.XmlSchemaDatatype.ParseValue(String,XmlNameTable,IXmlNamespaceResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "파생된 클래스에서 재정의 되 면 유효성을 검사는 <xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;> </xref> 기본 제공 또는 사용자 정의 단순 형식에 대해 지정 합니다."
  remarks: "ParseValue 메서드의 유효성 검사는 `string` 기본 제공 또는 사용자 정의 단순 형식에 대해 지정 합니다. 예를 들어이 <xref:System.Xml.Schema.XmlSchemaDatatype>xs: date 형식 나타냅니다. 인스턴스의 <xref:System.DateTime>반환 됩니다.</xref:System.DateTime> </xref:System.Xml.Schema.XmlSchemaDatatype>       ParseValue 메서드의 유효성 검사 프로세스 중에 수행 하는 단계는 다음과 같습니다.      1.  로 지정 된 값으로 변환 된 `string` 에 해당 런타임 CLR (공용 언어)을 입력 합니다.      2.  값이 단순 형식에 대해 정의 된 패싯에 위반을 확인 합니다.       변환 된 값으로 반환 됩니다는 <xref:System.Object>에서 반환 형식으로 안전 하 게 캐스팅 될 수 있습니다는 <xref:System.Xml.Schema.XmlSchemaDatatype.ValueType%2A>속성.</xref:System.Xml.Schema.XmlSchemaDatatype.ValueType%2A> </xref:System.Object>       경우는 <xref:System.Xml.Schema.XmlSchemaDatatype>개체가 입력 목록 형식을 나타내는지 `string` 값 하나 이상의 개체 목록으로 변환 됩니다.</xref:System.Xml.Schema.XmlSchemaDatatype> 경우는 <xref:System.Xml.Schema.XmlSchemaDatatype>개체가 목록 형식을 나타내는지, 통합 멤버 형식으로 입력된 값을 구문 분석 하려고 시도 합니다.</xref:System.Xml.Schema.XmlSchemaDatatype> 구문 분석이 실패 하면 다음 변환이 시도 되는 공용 구조체의 멤버로 구문 분석이 성공 되거나 구문 분석을 다른 멤버 형식이 없으면 될 때까지 합니다. 구문 분석이 성공 하지 못하면 예외가 throw 됩니다."
  example:
  - "The following example retrieves the `LotteryNumber` simple type from the example.xsd file as an <xref:System.Xml.Schema.XmlSchemaSimpleType> and then validates the `string` value of `5` using the ParseValue method.  \n  \n [!code-cpp[Classic Webdata XmlSchemaDatatype Example#1](~/add/codesnippet/cpp/b4af643f-b5cd-41ee-8b57-_1.cpp)]\n [!code-cs[Classic Webdata XmlSchemaDatatype Example#1](~/add/codesnippet/csharp/b4af643f-b5cd-41ee-8b57-_1.cs)]\n [!code-vb[Classic Webdata XmlSchemaDatatype Example#1](~/add/codesnippet/visualbasic/b4af643f-b5cd-41ee-8b57-_1.vb)]  \n  \n The following XML file is used for the preceding code example.  \n  \n [!code-xml[Classic Webdata XmlSchemaDatatype Example#2](~/add/codesnippet/xml/b4af643f-b5cd-41ee-8b57-_2.xsd)]"
  syntax:
    content: public abstract object ParseValue (string s, System.Xml.XmlNameTable nameTable, System.Xml.IXmlNamespaceResolver nsmgr);
    parameters:
    - id: s
      type: System.String
      description: "<xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;> </xref> 단순 형식에 대해 유효성을 검사 하 합니다."
    - id: nameTable
      type: System.Xml.XmlNameTable
      description: "<xref:System.Xml.XmlNameTable>원자화 구문 분석 중에 사용 하는 <xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;> </xref> 이 <xref href=&quot;System.Xml.Schema.XmlSchemaDatatype&quot;> </xref> 개체 xs: ncname 형식을 나타냅니다.</xref:System.Xml.XmlNameTable>"
    - id: nsmgr
      type: System.Xml.IXmlNamespaceResolver
      description: "<xref:System.Xml.IXmlNamespaceResolver>구문 분석 하는 동안 사용 하는 개체는 <xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;> </xref> 이 <xref href=&quot;System.Xml.Schema.XmlSchemaDatatype&quot;> </xref> 개체 xs: qname 유형을 나타냅니다.</xref:System.Xml.IXmlNamespaceResolver>"
    return:
      type: System.Object
      description: "<xref:System.Object>캐스팅 될 수 있는 안전 하 게에서 반환 형식으로는 <xref:System.Xml.Schema.XmlSchemaDatatype.ValueType*>속성.</xref:System.Xml.Schema.XmlSchemaDatatype.ValueType*> </xref:System.Object>"
  overload: System.Xml.Schema.XmlSchemaDatatype.ParseValue*
  exceptions:
  - type: System.Xml.Schema.XmlSchemaValidationException
    commentId: T:System.Xml.Schema.XmlSchemaValidationException
    description: "입력된 값이 W3C XML 스키마 형식의 올바른 인스턴스가 아닙니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "값은 구문 분석할 수 없습니다 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaDatatype.TokenizedType
  id: TokenizedType
  parent: System.Xml.Schema.XmlSchemaDatatype
  langs:
  - csharp
  name: TokenizedType
  nameWithType: XmlSchemaDatatype.TokenizedType
  fullName: System.Xml.Schema.XmlSchemaDatatype.TokenizedType
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "파생된 클래스에서 재정의 하는 경우에 대 한 형식을 가져옵니다는 <xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;> </xref> 1.0 사양을 World Wide Web Consortium (W3C) XML에 지정 합니다."
  remarks: "허용 된 `string` CDATA 섹션 형식 특정 XML 형식 등으로 읽을 수 있습니다.       다음 표에서 토큰 형식을 보여 줍니다.      | XmlTokenizedType | 설명 |   |----------------------|-----------------|   | `CDATA`| CDATA 형식 |   | `ID`| ID 유형 |   | `IDREF`| IDREF 유형 |   | `IDREFS`| IDREFS 유형 |   | `ENTITY`| 엔터티 형식 |   | `ENTITIES`| 엔터티 형식 |   | `NMTOKEN`| NMTOKEN 형식 |   | `NMTOKENS`| NMTOKENS 유형 |   | `NOTATION`| NOTATION 형식 |   | `ENUMERATION`| 열거형 형식 |   | `QName`| QName 유형 |   | `NCName`| NCName 형식 |   | `None`| 형식이 |"
  syntax:
    content: public abstract System.Xml.XmlTokenizedType TokenizedType { get; }
    return:
      type: System.Xml.XmlTokenizedType
      description: "An <xref href=&quot;System.Xml.XmlTokenizedType&quot;></xref> value for the <xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;></xref>."
  overload: System.Xml.Schema.XmlSchemaDatatype.TokenizedType*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaDatatype.TypeCode
  id: TypeCode
  parent: System.Xml.Schema.XmlSchemaDatatype
  langs:
  - csharp
  name: TypeCode
  nameWithType: XmlSchemaDatatype.TypeCode
  fullName: System.Xml.Schema.XmlSchemaDatatype.TypeCode
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "가져옵니다는 <xref href=&quot;System.Xml.Schema.XmlTypeCode&quot;> </xref> 단순 형식에 대 한 값입니다."
  remarks: "W3C XML 스키마 목록 형식 xs: entities, xs: nmtokens 및 xs:IDREFS 변수로 표현 되지 않는 등의 <xref:System.Xml.Schema.XmlTypeCode>열거형.</xref:System.Xml.Schema.XmlTypeCode> <xref:System.Xml.Schema.XmlTypeCode>xs: nmtoken 및 xs: idref 유형 <xref:System.Xml.Schema.XmlSchemaDatatype.Variety%2A> <xref:System.Xml.Schema.XmlSchemaDatatype> <xref:System.Xml.Schema.XmlSchemaDatatypeVariety>.</xref:System.Xml.Schema.XmlSchemaDatatypeVariety> 설정 개체</xref:System.Xml.Schema.XmlSchemaDatatype> 의 속성</xref:System.Xml.Schema.XmlSchemaDatatype.Variety%2A> 는 xs:ENTITY에 대 한 값으로</xref:System.Xml.Schema.XmlTypeCode> 표시 됩니다는 대신      > [!NOTE] > Xs: anysimpletype 및 xs: anytype 형식으로 표현 되지 않는 <xref:System.Xml.Schema.XmlTypeCode>열거형.</xref:System.Xml.Schema.XmlTypeCode> 에 표시 됩니다는 <xref:System.Xml.Schema.XmlSchemaDatatype>개체는 <xref:System.Xml.Schema.XmlTypeCode>값인 <xref:System.Xml.Schema.XmlTypeCode>xs: anysimpletype에 대 한 또는 <xref:System.Xml.Schema.XmlTypeCode>xs: anytype에 대 한.</xref:System.Xml.Schema.XmlTypeCode> </xref:System.Xml.Schema.XmlTypeCode> </xref:System.Xml.Schema.XmlTypeCode> </xref:System.Xml.Schema.XmlSchemaDatatype>"
  example:
  - For an example of the TypeCode property, see <xref:System.Xml.Schema.XmlSchemaDatatype>.
  syntax:
    content: public virtual System.Xml.Schema.XmlTypeCode TypeCode { get; }
    return:
      type: System.Xml.Schema.XmlTypeCode
      description: "<xref href=&quot;System.Xml.Schema.XmlTypeCode&quot;> </xref> 단순 형식에 대 한 값입니다."
  overload: System.Xml.Schema.XmlSchemaDatatype.TypeCode*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaDatatype.ValueType
  id: ValueType
  parent: System.Xml.Schema.XmlSchemaDatatype
  langs:
  - csharp
  name: ValueType
  nameWithType: XmlSchemaDatatype.ValueType
  fullName: System.Xml.Schema.XmlSchemaDatatype.ValueType
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "파생된 클래스에서 재정의 되 면 항목의 공용 언어 런타임 (CLR) 형식을 가져옵니다."
  remarks: "ValueType 속성에는 항목의 CLR 형식을 가져옵니다. 예를 들어 형식의 요소 `xs:int` 의 ValueType 갖기 <xref:System.Int32>기본적으로.</xref:System.Int32> 그러나 ValueType에 매핑될 수 있는 유효한 유형 중 하나일 수 `xs:int`, <xref:System.Int16>또는 <xref:System.Double>.</xref:System.Double> </xref:System.Int16> 등       형식에 대 한 자세한 내용은 지원에 <xref:System.Xml?displayProperty=fullName>네임 스페이스, 참조 [System.Xml 클래스에서 지 원하는 형식](~/add/includes/ajax-current-ext-md.md).</xref:System.Xml?displayProperty=fullName>"
  example:
  - For an example of the ValueType property, see <xref:System.Xml.Schema.XmlSchemaDatatype>.
  syntax:
    content: public abstract Type ValueType { get; }
    return:
      type: System.Type
      description: "항목의 공용 언어 런타임 (CLR) 형식입니다."
  overload: System.Xml.Schema.XmlSchemaDatatype.ValueType*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaDatatype.Variety
  id: Variety
  parent: System.Xml.Schema.XmlSchemaDatatype
  langs:
  - csharp
  name: Variety
  nameWithType: XmlSchemaDatatype.Variety
  fullName: System.Xml.Schema.XmlSchemaDatatype.Variety
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "가져옵니다는 <xref href=&quot;System.Xml.Schema.XmlSchemaDatatypeVariety&quot;> </xref> 단순 형식에 대 한 값입니다."
  syntax:
    content: public virtual System.Xml.Schema.XmlSchemaDatatypeVariety Variety { get; }
    return:
      type: System.Xml.Schema.XmlSchemaDatatypeVariety
      description: "<xref href=&quot;System.Xml.Schema.XmlSchemaDatatypeVariety&quot;> </xref> 단순 형식에 대 한 값입니다."
  overload: System.Xml.Schema.XmlSchemaDatatype.Variety*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidCastException
  isExternal: true
  name: System.InvalidCastException
- uid: System.Xml.Schema.XmlSchemaValidationException
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaValidationException
  nameWithType: XmlSchemaValidationException
  fullName: System.Xml.Schema.XmlSchemaValidationException
- uid: System.Xml.Schema.XmlSchemaDatatype.#ctor
  parent: System.Xml.Schema.XmlSchemaDatatype
  isExternal: false
  name: XmlSchemaDatatype()
  nameWithType: XmlSchemaDatatype.XmlSchemaDatatype()
  fullName: System.Xml.Schema.XmlSchemaDatatype.XmlSchemaDatatype()
- uid: System.Xml.Schema.XmlSchemaDatatype.ChangeType(System.Object,System.Type)
  parent: System.Xml.Schema.XmlSchemaDatatype
  isExternal: false
  name: ChangeType(Object,Type)
  nameWithType: XmlSchemaDatatype.ChangeType(Object,Type)
  fullName: System.Xml.Schema.XmlSchemaDatatype.ChangeType(Object,Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Xml.Schema.XmlSchemaDatatype.ChangeType(System.Object,System.Type,System.Xml.IXmlNamespaceResolver)
  parent: System.Xml.Schema.XmlSchemaDatatype
  isExternal: false
  name: ChangeType(Object,Type,IXmlNamespaceResolver)
  nameWithType: XmlSchemaDatatype.ChangeType(Object,Type,IXmlNamespaceResolver)
  fullName: System.Xml.Schema.XmlSchemaDatatype.ChangeType(Object,Type,IXmlNamespaceResolver)
- uid: System.Xml.IXmlNamespaceResolver
  parent: System.Xml
  isExternal: true
  name: IXmlNamespaceResolver
  nameWithType: IXmlNamespaceResolver
  fullName: System.Xml.IXmlNamespaceResolver
- uid: System.Xml.Schema.XmlSchemaDatatype.IsDerivedFrom(System.Xml.Schema.XmlSchemaDatatype)
  parent: System.Xml.Schema.XmlSchemaDatatype
  isExternal: false
  name: IsDerivedFrom(XmlSchemaDatatype)
  nameWithType: XmlSchemaDatatype.IsDerivedFrom(XmlSchemaDatatype)
  fullName: System.Xml.Schema.XmlSchemaDatatype.IsDerivedFrom(XmlSchemaDatatype)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.Schema.XmlSchemaDatatype
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaDatatype
  nameWithType: XmlSchemaDatatype
  fullName: System.Xml.Schema.XmlSchemaDatatype
- uid: System.Xml.Schema.XmlSchemaDatatype.ParseValue(System.String,System.Xml.XmlNameTable,System.Xml.IXmlNamespaceResolver)
  parent: System.Xml.Schema.XmlSchemaDatatype
  isExternal: false
  name: ParseValue(String,XmlNameTable,IXmlNamespaceResolver)
  nameWithType: XmlSchemaDatatype.ParseValue(String,XmlNameTable,IXmlNamespaceResolver)
  fullName: System.Xml.Schema.XmlSchemaDatatype.ParseValue(String,XmlNameTable,IXmlNamespaceResolver)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.XmlNameTable
  parent: System.Xml
  isExternal: true
  name: XmlNameTable
  nameWithType: XmlNameTable
  fullName: System.Xml.XmlNameTable
- uid: System.Xml.Schema.XmlSchemaDatatype.TokenizedType
  parent: System.Xml.Schema.XmlSchemaDatatype
  isExternal: false
  name: TokenizedType
  nameWithType: XmlSchemaDatatype.TokenizedType
  fullName: System.Xml.Schema.XmlSchemaDatatype.TokenizedType
- uid: System.Xml.XmlTokenizedType
  parent: System.Xml
  isExternal: false
  name: XmlTokenizedType
  nameWithType: XmlTokenizedType
  fullName: System.Xml.XmlTokenizedType
- uid: System.Xml.Schema.XmlSchemaDatatype.TypeCode
  parent: System.Xml.Schema.XmlSchemaDatatype
  isExternal: false
  name: TypeCode
  nameWithType: XmlSchemaDatatype.TypeCode
  fullName: System.Xml.Schema.XmlSchemaDatatype.TypeCode
- uid: System.Xml.Schema.XmlTypeCode
  parent: System.Xml.Schema
  isExternal: false
  name: XmlTypeCode
  nameWithType: XmlTypeCode
  fullName: System.Xml.Schema.XmlTypeCode
- uid: System.Xml.Schema.XmlSchemaDatatype.ValueType
  parent: System.Xml.Schema.XmlSchemaDatatype
  isExternal: false
  name: ValueType
  nameWithType: XmlSchemaDatatype.ValueType
  fullName: System.Xml.Schema.XmlSchemaDatatype.ValueType
- uid: System.Xml.Schema.XmlSchemaDatatype.Variety
  parent: System.Xml.Schema.XmlSchemaDatatype
  isExternal: false
  name: Variety
  nameWithType: XmlSchemaDatatype.Variety
  fullName: System.Xml.Schema.XmlSchemaDatatype.Variety
- uid: System.Xml.Schema.XmlSchemaDatatypeVariety
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaDatatypeVariety
  nameWithType: XmlSchemaDatatypeVariety
  fullName: System.Xml.Schema.XmlSchemaDatatypeVariety
- uid: System.Xml.Schema.XmlSchemaDatatype.#ctor*
  parent: System.Xml.Schema.XmlSchemaDatatype
  isExternal: false
  name: XmlSchemaDatatype
  nameWithType: XmlSchemaDatatype.XmlSchemaDatatype
- uid: System.Xml.Schema.XmlSchemaDatatype.ChangeType*
  parent: System.Xml.Schema.XmlSchemaDatatype
  isExternal: false
  name: ChangeType
  nameWithType: XmlSchemaDatatype.ChangeType
- uid: System.Xml.Schema.XmlSchemaDatatype.IsDerivedFrom*
  parent: System.Xml.Schema.XmlSchemaDatatype
  isExternal: false
  name: IsDerivedFrom
  nameWithType: XmlSchemaDatatype.IsDerivedFrom
- uid: System.Xml.Schema.XmlSchemaDatatype.ParseValue*
  parent: System.Xml.Schema.XmlSchemaDatatype
  isExternal: false
  name: ParseValue
  nameWithType: XmlSchemaDatatype.ParseValue
- uid: System.Xml.Schema.XmlSchemaDatatype.TokenizedType*
  parent: System.Xml.Schema.XmlSchemaDatatype
  isExternal: false
  name: TokenizedType
  nameWithType: XmlSchemaDatatype.TokenizedType
- uid: System.Xml.Schema.XmlSchemaDatatype.TypeCode*
  parent: System.Xml.Schema.XmlSchemaDatatype
  isExternal: false
  name: TypeCode
  nameWithType: XmlSchemaDatatype.TypeCode
- uid: System.Xml.Schema.XmlSchemaDatatype.ValueType*
  parent: System.Xml.Schema.XmlSchemaDatatype
  isExternal: false
  name: ValueType
  nameWithType: XmlSchemaDatatype.ValueType
- uid: System.Xml.Schema.XmlSchemaDatatype.Variety*
  parent: System.Xml.Schema.XmlSchemaDatatype
  isExternal: false
  name: Variety
  nameWithType: XmlSchemaDatatype.Variety
