### YamlMime:ManagedReference
items:
- uid: System.Data.Odbc.OdbcCommandBuilder
  id: OdbcCommandBuilder
  children:
  - System.Data.Odbc.OdbcCommandBuilder.#ctor
  - System.Data.Odbc.OdbcCommandBuilder.#ctor(System.Data.Odbc.OdbcDataAdapter)
  - System.Data.Odbc.OdbcCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)
  - System.Data.Odbc.OdbcCommandBuilder.DataAdapter
  - System.Data.Odbc.OdbcCommandBuilder.DeriveParameters(System.Data.Odbc.OdbcCommand)
  - System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand
  - System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand(System.Boolean)
  - System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand
  - System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand(System.Boolean)
  - System.Data.Odbc.OdbcCommandBuilder.GetParameterName(System.Int32)
  - System.Data.Odbc.OdbcCommandBuilder.GetParameterName(System.String)
  - System.Data.Odbc.OdbcCommandBuilder.GetParameterPlaceholder(System.Int32)
  - System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand
  - System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand(System.Boolean)
  - System.Data.Odbc.OdbcCommandBuilder.QuoteIdentifier(System.String)
  - System.Data.Odbc.OdbcCommandBuilder.QuoteIdentifier(System.String,System.Data.Odbc.OdbcConnection)
  - System.Data.Odbc.OdbcCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)
  - System.Data.Odbc.OdbcCommandBuilder.UnquoteIdentifier(System.String)
  - System.Data.Odbc.OdbcCommandBuilder.UnquoteIdentifier(System.String,System.Data.Odbc.OdbcConnection)
  langs:
  - csharp
  name: OdbcCommandBuilder
  nameWithType: OdbcCommandBuilder
  fullName: System.Data.Odbc.OdbcCommandBuilder
  type: Class
  summary: "변경 내용을 조정 하는 데 사용 되는 단일 테이블 명령을 자동으로 생성 한 <xref href=&quot;System.Data.DataSet&quot;> </xref> 연결 된 데이터 원본과 합니다. 이 클래스는 상속 될 수 없습니다."
  remarks: "<xref:System.Data.Odbc.OdbcDataAdapter>변경 내용을 조정 하는 데 필요한 SQL 문을 자동으로 생성 되지 않습니다는 <xref:System.Data.DataSet>데이터 원본과 관련 된.</xref:System.Data.DataSet> </xref:System.Data.Odbc.OdbcDataAdapter> 그러나 <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> <xref:System.Data.Odbc.OdbcDataAdapter>.</xref:System.Data.Odbc.OdbcDataAdapter> 의 속성</xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> 을 설정 하 여 단일 테이블 업데이트에 대 한 SQL 문을 생성 하는 OdbcCommandBuilder 개체를 만들 수 있습니다. OdbcCommandBuilder 설정 하지 않는 추가적인 모든 SQL 문을 생성 합니다.       간의 관계는 <xref:System.Data.Odbc.OdbcDataAdapter>되며 해당 해당 OdbcCommandBuilder 일대일 항상.</xref:System.Data.Odbc.OdbcDataAdapter> 이 관계를 만들려면 설정는 <xref:System.Data.Odbc.OdbcDataAdapter>OdbcCommandBuilder 개체의 속성입니다.</xref:System.Data.Odbc.OdbcDataAdapter> 이 인해 OdbcCommandBuilder <xref:System.Data.Odbc.OdbcDataAdapter.RowUpdating> <xref:System.Data.DataSet>.</xref:System.Data.DataSet> 에 영향을 주는 이벤트</xref:System.Data.Odbc.OdbcDataAdapter.RowUpdating> 의 출력을 생성 하는 수신기로 등록       OdbcCommandBuilder 사용 하 여 INSERT, UPDATE 또는 DELETE 문을 생성 하려면는 <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A>필요한 메타 데이터 집합을 검색할 속성.</xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> 값을 변경 하면 <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A>후 메타 데이터를 검색 한 첫 번째 업데이트 이후 호출 해야 하는 등의 <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>메서드 메타 데이터를 업데이트 합니다.</xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> </xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A>      > [!NOTE] >에 할당 된 SELECT 문의 경우는 <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A>속성 별칭이 지정 된 열 이름, 결과 삽입, 업데이트, 사용 및 DELETE 문을 수 정확 하지 않을 수 또는 실패.</xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> 기본 ODBC 드라이버는 열 별칭에 대 한 적절 한 기본 열 이름을 제공할 수 없는 경우 (SQL_DESC_BASE_COLUMN_NAME 값을 사용 하 여 `SQLColAttribute`), 별칭 이름을 생성 된 INSERT, UPDATE 및 DELETE 문에서 사용할 수 없습니다. 예를 들어 Microsoft ODBC Driver for Oracle 기본 열 이름으로 별칭 이름을 반환합니다. 따라서 생성 된 INSERT, UPDATE 및 DELETE 문은 오류가 발생 하 합니다.       OdbcCommandBuilder 또한 사용 하 여는 <xref:System.Data.Odbc.OdbcCommand.Connection%2A>, <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A> <xref:System.Data.Odbc.OdbcCommand.Transaction%2A>에 <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A>.</xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> 참조 되는 속성</xref:System.Data.Odbc.OdbcCommand.Transaction%2A> 및</xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A> </xref:System.Data.Odbc.OdbcCommand.Connection%2A> 호출 해야 합니다 <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>이러한 속성 중 하나 이상이 수정 되는 경우 또는 경우의 값은 <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A>자체 속성이 변경 될.</xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> </xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> 그렇지 않은 경우는 <xref:System.Data.Odbc.OdbcDataAdapter.InsertCommand%2A>, <xref:System.Data.Odbc.OdbcDataAdapter.UpdateCommand%2A>, 및 <xref:System.Data.Odbc.OdbcDataAdapter.DeleteCommand%2A>속성 이전 값을 유지 합니다.</xref:System.Data.Odbc.OdbcDataAdapter.DeleteCommand%2A> </xref:System.Data.Odbc.OdbcDataAdapter.UpdateCommand%2A> </xref:System.Data.Odbc.OdbcDataAdapter.InsertCommand%2A>       호출 하는 경우 <xref:System.ComponentModel.Component.Dispose%2A>는 OdbcCommandBuilder에서 분리는 <xref:System.Data.Odbc.OdbcDataAdapter>, 생성된 된 명령을 더 이상 사용 됩니다.</xref:System.Data.Odbc.OdbcDataAdapter> </xref:System.ComponentModel.Component.Dispose%2A>"
  example:
  - "The following example uses <xref:System.Data.Odbc.OdbcCommand>, together with <xref:System.Data.Odbc.OdbcDataAdapter> and <xref:System.Data.Odbc.OdbcConnection>, to select rows from a data source. The example is passed an initialized <xref:System.Data.DataSet>, a connection string, a query string that is an SQL SELECT statement, and a string that is the name of the data source table. The example then creates an OdbcCommandBuilder.  \n  \n [!code-cs[Classic WebData OdbcCommandBuilder#1](~/add/codesnippet/csharp/t-system.data.odbc.odbcc_1_1.cs)]\n [!code-vb[Classic WebData OdbcCommandBuilder#1](~/add/codesnippet/visualbasic/t-system.data.odbc.odbcc_1_1.vb)]"
  syntax:
    content: 'public sealed class OdbcCommandBuilder : System.Data.Common.DbCommandBuilder'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Data.Common.DbCommandBuilder
  implements: []
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.Data.Common.DbCommandBuilder.CatalogLocation
  - System.Data.Common.DbCommandBuilder.CatalogSeparator
  - System.Data.Common.DbCommandBuilder.ConflictOption
  - System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)
  - System.Data.Common.DbCommandBuilder.GetSchemaTable(System.Data.Common.DbCommand)
  - System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)
  - System.Data.Common.DbCommandBuilder.QuotePrefix
  - System.Data.Common.DbCommandBuilder.QuoteSuffix
  - System.Data.Common.DbCommandBuilder.RefreshSchema
  - System.Data.Common.DbCommandBuilder.RowUpdatingHandler(System.Data.Common.RowUpdatingEventArgs)
  - System.Data.Common.DbCommandBuilder.SchemaSeparator
  - System.Data.Common.DbCommandBuilder.SetAllValues
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommandBuilder.#ctor
  id: '#ctor'
  parent: System.Data.Odbc.OdbcCommandBuilder
  langs:
  - csharp
  name: OdbcCommandBuilder()
  nameWithType: OdbcCommandBuilder.OdbcCommandBuilder()
  fullName: System.Data.Odbc.OdbcCommandBuilder.OdbcCommandBuilder()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Data.Odbc.OdbcCommandBuilder&quot;> </xref> 클래스입니다."
  remarks: "기본 생성자는 모든 필드를를 기본값으로 초기화합니다."
  syntax:
    content: public OdbcCommandBuilder ();
    parameters: []
  overload: System.Data.Odbc.OdbcCommandBuilder.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommandBuilder.#ctor(System.Data.Odbc.OdbcDataAdapter)
  id: '#ctor(System.Data.Odbc.OdbcDataAdapter)'
  parent: System.Data.Odbc.OdbcCommandBuilder
  langs:
  - csharp
  name: OdbcCommandBuilder(OdbcDataAdapter)
  nameWithType: OdbcCommandBuilder.OdbcCommandBuilder(OdbcDataAdapter)
  fullName: System.Data.Odbc.OdbcCommandBuilder.OdbcCommandBuilder(OdbcDataAdapter)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Data.Odbc.OdbcCommandBuilder&quot;> </xref> 클래스와 연결 된 <xref href=&quot;System.Data.Odbc.OdbcDataAdapter&quot;> </xref> 개체입니다."
  remarks: "<xref:System.Data.Odbc.OdbcCommandBuilder>자체에 대 한 수신기로 등록 <xref:System.Data.Odbc.OdbcDataAdapter.RowUpdating>에서 생성 되는 이벤트는 <xref:System.Data.Odbc.OdbcDataAdapter>이 속성에 지정 된.</xref:System.Data.Odbc.OdbcDataAdapter> </xref:System.Data.Odbc.OdbcDataAdapter.RowUpdating> </xref:System.Data.Odbc.OdbcCommandBuilder>       새 인스턴스를 만들 때 <xref:System.Data.Odbc.OdbcCommandBuilder>, 모든 기존 <xref:System.Data.Odbc.OdbcCommandBuilder>이 연관 <xref:System.Data.Odbc.OdbcDataAdapter>해제 됩니다.</xref:System.Data.Odbc.OdbcDataAdapter> </xref:System.Data.Odbc.OdbcCommandBuilder> </xref:System.Data.Odbc.OdbcCommandBuilder>"
  syntax:
    content: public OdbcCommandBuilder (System.Data.Odbc.OdbcDataAdapter adapter);
    parameters:
    - id: adapter
      type: System.Data.Odbc.OdbcDataAdapter
      description: "<xref href=&quot;System.Data.Odbc.OdbcDataAdapter&quot;> </xref> 이 연결할 개체 <xref href=&quot;System.Data.Odbc.OdbcCommandBuilder&quot;> </xref>합니다."
  overload: System.Data.Odbc.OdbcCommandBuilder.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)
  id: ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)
  parent: System.Data.Odbc.OdbcCommandBuilder
  langs:
  - csharp
  name: ApplyParameterInfo(DbParameter,DataRow,StatementType,Boolean)
  nameWithType: OdbcCommandBuilder.ApplyParameterInfo(DbParameter,DataRow,StatementType,Boolean)
  fullName: System.Data.Odbc.OdbcCommandBuilder.ApplyParameterInfo(DbParameter,DataRow,StatementType,Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  syntax:
    content: protected override void ApplyParameterInfo (System.Data.Common.DbParameter parameter, System.Data.DataRow datarow, System.Data.StatementType statementType, bool whereClause);
    parameters:
    - id: parameter
      type: System.Data.Common.DbParameter
      description: "추가할 수 있습니다."
    - id: datarow
      type: System.Data.DataRow
      description: "추가할 수 있습니다."
    - id: statementType
      type: System.Data.StatementType
      description: "추가할 수 있습니다."
    - id: whereClause
      type: System.Boolean
      description: "추가할 수 있습니다."
  overload: System.Data.Odbc.OdbcCommandBuilder.ApplyParameterInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommandBuilder.DataAdapter
  id: DataAdapter
  parent: System.Data.Odbc.OdbcCommandBuilder
  langs:
  - csharp
  name: DataAdapter
  nameWithType: OdbcCommandBuilder.DataAdapter
  fullName: System.Data.Odbc.OdbcCommandBuilder.DataAdapter
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "가져오거나는 <xref href=&quot;System.Data.Odbc.OdbcDataAdapter&quot;> </xref> 이 대 한 개체 <xref href=&quot;System.Data.Odbc.OdbcCommandBuilder&quot;> </xref> 개체는 SQL 문을 생성 합니다."
  remarks: "<xref:System.Data.Odbc.OdbcCommandBuilder>자체에 대 한 수신기로 등록 <xref:System.Data.Odbc.OdbcDataAdapter.RowUpdating>에서 생성 되는 이벤트는 <xref:System.Data.Odbc.OdbcDataAdapter>이 속성에 지정 된.</xref:System.Data.Odbc.OdbcDataAdapter> </xref:System.Data.Odbc.OdbcDataAdapter.RowUpdating> </xref:System.Data.Odbc.OdbcCommandBuilder>       새 인스턴스를 만들 때 <xref:System.Data.Odbc.OdbcCommandBuilder>, 모든 기존 <xref:System.Data.Odbc.OdbcCommandBuilder>이 연관 <xref:System.Data.Odbc.OdbcDataAdapter>해제 됩니다.</xref:System.Data.Odbc.OdbcDataAdapter> </xref:System.Data.Odbc.OdbcCommandBuilder> </xref:System.Data.Odbc.OdbcCommandBuilder>"
  syntax:
    content: public System.Data.Odbc.OdbcDataAdapter DataAdapter { get; set; }
    return:
      type: System.Data.Odbc.OdbcDataAdapter
      description: "<xref href=&quot;System.Data.Odbc.OdbcDataAdapter&quot;> </xref> 과 관련 된 개체 <xref href=&quot;System.Data.Odbc.OdbcCommandBuilder&quot;> </xref>합니다."
  overload: System.Data.Odbc.OdbcCommandBuilder.DataAdapter*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommandBuilder.DeriveParameters(System.Data.Odbc.OdbcCommand)
  id: DeriveParameters(System.Data.Odbc.OdbcCommand)
  parent: System.Data.Odbc.OdbcCommandBuilder
  langs:
  - csharp
  name: DeriveParameters(OdbcCommand)
  nameWithType: OdbcCommandBuilder.DeriveParameters(OdbcCommand)
  fullName: System.Data.Odbc.OdbcCommandBuilder.DeriveParameters(OdbcCommand)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "에 지정 된 저장된 프로시저에서 매개 변수 정보를 검색 된 <xref href=&quot;System.Data.Odbc.OdbcCommand&quot;> </xref> 채웁니다는 <xref:System.Data.Odbc.OdbcCommand.Parameters*>는 지정 된 컬렉션 <xref href=&quot;System.Data.Odbc.OdbcCommand&quot;> </xref> 개체입니다.</xref:System.Data.Odbc.OdbcCommand.Parameters*>"
  remarks: "DeriveParameters <xref:System.Data.Odbc.OdbcCommand>.</xref:System.Data.Odbc.OdbcCommand> 에 대 한 모든 기존 매개 변수 정보를 덮어씁니다.       DeriveParameters에는 정보를 가져오는 데이터 원본에 추가로 호출을 해야 합니다. 매개 변수 정보는 사전에 알고 있는 경우 정보를 명시적으로 설정 하 여 매개 변수 컬렉션을 채우는 데 더 효율적입니다.       저장된 프로시저와 함께 DeriveParameters만 사용할 수 있습니다. DeriveParameters 채우는 데 사용할 수 없습니다는 <xref:System.Data.Odbc.OdbcParameterCollection>임의의 Transact SQL 문, 매개 변수가 있는 SELECT 문 처럼.</xref:System.Data.Odbc.OdbcParameterCollection>"
  syntax:
    content: public static void DeriveParameters (System.Data.Odbc.OdbcCommand command);
    parameters:
    - id: command
      type: System.Data.Odbc.OdbcCommand
      description: "<xref href=&quot;System.Data.Odbc.OdbcCommand&quot;> </xref> 있는 매개 변수 정보 파생 되어야 하는 저장된 프로시저를 참조 합니다. 파생 된 매개 변수를 추가 <xref:System.Data.Odbc.OdbcCommand.Parameters*>의 컬렉션은 <xref href=&quot;System.Data.Odbc.OdbcCommand&quot;> </xref>.</xref:System.Data.Odbc.OdbcCommand.Parameters*>"
  overload: System.Data.Odbc.OdbcCommandBuilder.DeriveParameters*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "기본 ODBC 드라이버는 저장된 프로시저 매개 변수 정보를 반환을 지원 하지 않거나 명령 텍스트는 올바른 저장된 프로시저 이름이 아닙니다. 또는 <xref href=&quot;System.Data.CommandType&quot;> </xref> 없습니다 지정 <xref uid=&quot;langword_csharp_CommandType.StoredProcedure&quot; name=&quot;CommandType.StoredProcedure&quot; href=&quot;&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand
  id: GetDeleteCommand
  parent: System.Data.Odbc.OdbcCommandBuilder
  langs:
  - csharp
  name: GetDeleteCommand()
  nameWithType: OdbcCommandBuilder.GetDeleteCommand()
  fullName: System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "자동으로 생성 된 가져옵니다 <xref href=&quot;System.Data.Odbc.OdbcCommand&quot;> </xref> 데이터 소스에서 삭제를 수행 하는 데 필요한 개체입니다."
  remarks: "반환 하기 때문에 문제 해결 용도로 GetDeleteCommand 메서드를 사용할 수는 <xref:System.Data.Odbc.OdbcCommand>실행할 개체입니다.</xref:System.Data.Odbc.OdbcCommand>       또한 수정 된 명령 기반으로 GetDeleteCommand를 사용할 수 있습니다. GetDeleteCommand를 호출 하 고 수정 <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A>값을 명시적으로 <xref:System.Data.Odbc.OdbcDataAdapter>.</xref:System.Data.Odbc.OdbcDataAdapter> 에 설정할</xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A> 수 예를 들어       명시적으로 호출 해야 SQL 문을 처음 생성 후 <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>문을 어떤 식으로든에서 변경 하는 경우.</xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> 그렇지 않은 경우는 GetDeleteCommand 이전 문의 올바르지 않을 수 있는 정보를에서 사용 합니다. 응용 프로그램 중 하나를 호출 하는 경우에 SQL 문을 생성할 먼저는 <xref:System.Data.Common.DbDataAdapter.Update%2A>또는 GetDeleteCommand.</xref:System.Data.Common.DbDataAdapter.Update%2A>"
  syntax:
    content: public System.Data.Odbc.OdbcCommand GetDeleteCommand ();
    parameters: []
    return:
      type: System.Data.Odbc.OdbcCommand
      description: "자동으로 생성 된 <xref href=&quot;System.Data.Odbc.OdbcCommand&quot;> </xref> 삭제를 수행 하는 데 필요한 개체입니다."
  overload: System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand(System.Boolean)
  id: GetDeleteCommand(System.Boolean)
  parent: System.Data.Odbc.OdbcCommandBuilder
  langs:
  - csharp
  name: GetDeleteCommand(Boolean)
  nameWithType: OdbcCommandBuilder.GetDeleteCommand(Boolean)
  fullName: System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand(Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "자동으로 생성 된 가져옵니다 <xref href=&quot;System.Data.Odbc.OdbcCommand&quot;> </xref> 데이터 소스에서 삭제를 수행 하는 데 필요한 개체입니다."
  remarks: "사용할 수 있습니다는 <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A>반환 하기 때문에 목적으로 하는 문제 해결에 대 한 메서드는 <xref:System.Data.Odbc.OdbcCommand>실행할 개체입니다.</xref:System.Data.Odbc.OdbcCommand> </xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A>       사용할 수도 있습니다 <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A>의 수정 된 명령 기반으로 합니다.</xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> 예를 들어 <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A>수정 <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A>값을 명시적으로 <xref:System.Data.Odbc.OdbcDataAdapter>.</xref:System.Data.Odbc.OdbcDataAdapter> 를 설정</xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A> 하 고</xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> 을 호출할 수 있습니다.       명시적으로 호출 해야 SQL 문을 처음 생성 후 <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>문을 어떤 식으로든에서 변경 하는 경우.</xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> 그렇지 않은 경우는 <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A>이전 문의 올바르지 않을 수 있는 정보를에서 사용 하는.</xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> SQL 문은 처음으로 생성 됩니다는 응용 프로그램 중 하나 <xref:System.Data.Common.DbDataAdapter.Update%2A>나 <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A>.</xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> </xref:System.Data.Common.DbDataAdapter.Update%2A> 호출 하는 경우       매개 변수 이름을 생성할 때의 기본 동작을 사용 하는 @p1, @p2, 다양 한 매개 변수 대. 전달 `true` 에 대 한는 `useColumnsForParameterNames` 매개 변수에 <xref:System.Data.Odbc.OdbcCommandBuilder>대신 열 이름에 따라 매개 변수를 생성 합니다.</xref:System.Data.Odbc.OdbcCommandBuilder> 다음 조건에 해당 하는 경우에이 작업은 성공:- <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>를 지정 하면이 고 길이 생성 된 매개 변수 이름 보다 크거나 같은.</xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>      -생성 된 매개 변수 이름에 지정 된 조건에 부합는 <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>정규식.</xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>      -A <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>지정 됩니다.</xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>"
  syntax:
    content: public System.Data.Odbc.OdbcCommand GetDeleteCommand (bool useColumnsForParameterNames);
    parameters:
    - id: useColumnsForParameterNames
      type: System.Boolean
      description: "경우 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, 가능한 경우 열 이름과 일치 하는 매개 변수 이름을 생성 합니다. 경우 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, 생성 @p1, @p2등입니다."
    return:
      type: System.Data.Odbc.OdbcCommand
      description: "자동으로 생성 된 <xref href=&quot;System.Data.Odbc.OdbcCommand&quot;> </xref> 삭제를 수행 하는 데 필요한 개체입니다."
  overload: System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand
  id: GetInsertCommand
  parent: System.Data.Odbc.OdbcCommandBuilder
  langs:
  - csharp
  name: GetInsertCommand()
  nameWithType: OdbcCommandBuilder.GetInsertCommand()
  fullName: System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "자동으로 생성 된 가져옵니다 <xref href=&quot;System.Data.Odbc.OdbcCommand&quot;> </xref> 개체가 데이터 원본에 삽입 하는 데 필요 합니다."
  remarks: "반환 하기 때문에 문제 해결 용도로 GetInsertCommand 메서드를 사용할 수는 <xref:System.Data.Odbc.OdbcCommand>실행할 개체입니다.</xref:System.Data.Odbc.OdbcCommand>       또한 수정 된 명령 기반으로 GetInsertCommand를 사용할 수 있습니다. GetInsertCommand를 호출 하 고 수정 <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A>값을 명시적으로 <xref:System.Data.Odbc.OdbcDataAdapter>.</xref:System.Data.Odbc.OdbcDataAdapter> 에 설정할</xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A> 수 예를 들어       명시적으로 호출 해야 SQL 문을 처음 생성 후 <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>문을 어떤 식으로든에서 변경 하는 경우.</xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> 그렇지 않은 경우는 GetInsertCommand 여전히 됩니다 정보를에서 사용는 이전 문을 올바르지 않을 수 있습니다. 응용 프로그램 중 하나를 호출 하는 경우에 SQL 문을 생성할 먼저는 <xref:System.Data.Common.DbDataAdapter.Update%2A>또는 GetInsertCommand.</xref:System.Data.Common.DbDataAdapter.Update%2A>"
  syntax:
    content: public System.Data.Odbc.OdbcCommand GetInsertCommand ();
    parameters: []
    return:
      type: System.Data.Odbc.OdbcCommand
      description: "자동으로 생성 된 <xref href=&quot;System.Data.Odbc.OdbcCommand&quot;> </xref> 개체가 삽입 하는 데 필요 합니다."
  overload: System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand(System.Boolean)
  id: GetInsertCommand(System.Boolean)
  parent: System.Data.Odbc.OdbcCommandBuilder
  langs:
  - csharp
  name: GetInsertCommand(Boolean)
  nameWithType: OdbcCommandBuilder.GetInsertCommand(Boolean)
  fullName: System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand(Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "자동으로 생성 된 가져옵니다 <xref href=&quot;System.Data.Odbc.OdbcCommand&quot;> </xref> 개체가 데이터 원본에 삽입 하는 데 필요 합니다."
  remarks: "사용할 수 있습니다는 <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A>반환 하기 때문에 목적으로 하는 문제 해결에 대 한 메서드는 <xref:System.Data.Odbc.OdbcCommand>실행할 개체입니다.</xref:System.Data.Odbc.OdbcCommand> </xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A>       사용할 수도 있습니다 <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A>의 수정 된 명령 기반으로 합니다.</xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> 예를 들어 <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A>수정 <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A>값을 명시적으로 <xref:System.Data.Odbc.OdbcDataAdapter>.</xref:System.Data.Odbc.OdbcDataAdapter> 를 설정</xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A> 하 고</xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> 을 호출할 수 있습니다.       명시적으로 호출 해야 SQL 문을 처음 생성 후 <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>문을 어떤 식으로든에서 변경 하는 경우.</xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> 그렇지 않은 경우는 <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A>이전 문의 올바르지 않을 수 있는 정보를에서 사용 하는.</xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> SQL 문은 처음으로 생성 됩니다는 응용 프로그램 중 하나 <xref:System.Data.Common.DbDataAdapter.Update%2A>나 <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A>.</xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> </xref:System.Data.Common.DbDataAdapter.Update%2A> 호출 하는 경우       매개 변수 이름을 생성할 때의 기본 동작을 사용 하는 @p1, @p2, 다양 한 매개 변수 대. 전달 `true` 에 대 한는 `useColumnsForParameterNames` 매개 변수에 <xref:System.Data.Common.DbCommandBuilder>대신 열 이름에 따라 매개 변수를 생성 합니다.</xref:System.Data.Common.DbCommandBuilder> 다음 조건에 해당 하는 경우에이 작업은 성공:- <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>를 지정 하면이 고 길이 생성 된 매개 변수 이름 보다 크거나 같은.</xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>      -생성 된 매개 변수 이름에 지정 된 조건에 부합는 <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>정규식.</xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>      -A <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>지정 됩니다.</xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>"
  syntax:
    content: public System.Data.Odbc.OdbcCommand GetInsertCommand (bool useColumnsForParameterNames);
    parameters:
    - id: useColumnsForParameterNames
      type: System.Boolean
      description: "경우 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, 가능한 경우 열 이름과 일치 하는 매개 변수 이름을 생성 합니다. 경우 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, 생성 @p1, @p2등입니다."
    return:
      type: System.Data.Odbc.OdbcCommand
      description: "자동으로 생성 된 <xref href=&quot;System.Data.Odbc.OdbcCommand&quot;> </xref> 개체가 삽입 하는 데 필요 합니다."
  overload: System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommandBuilder.GetParameterName(System.Int32)
  id: GetParameterName(System.Int32)
  parent: System.Data.Odbc.OdbcCommandBuilder
  langs:
  - csharp
  name: GetParameterName(Int32)
  nameWithType: OdbcCommandBuilder.GetParameterName(Int32)
  fullName: System.Data.Odbc.OdbcCommandBuilder.GetParameterName(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  syntax:
    content: protected override string GetParameterName (int parameterOrdinal);
    parameters:
    - id: parameterOrdinal
      type: System.Int32
      description: "추가할 수 있습니다."
    return:
      type: System.String
      description: "추가할 수 있습니다."
  overload: System.Data.Odbc.OdbcCommandBuilder.GetParameterName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommandBuilder.GetParameterName(System.String)
  id: GetParameterName(System.String)
  parent: System.Data.Odbc.OdbcCommandBuilder
  langs:
  - csharp
  name: GetParameterName(String)
  nameWithType: OdbcCommandBuilder.GetParameterName(String)
  fullName: System.Data.Odbc.OdbcCommandBuilder.GetParameterName(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  syntax:
    content: protected override string GetParameterName (string parameterName);
    parameters:
    - id: parameterName
      type: System.String
      description: "추가할 수 있습니다."
    return:
      type: System.String
      description: "추가할 수 있습니다."
  overload: System.Data.Odbc.OdbcCommandBuilder.GetParameterName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommandBuilder.GetParameterPlaceholder(System.Int32)
  id: GetParameterPlaceholder(System.Int32)
  parent: System.Data.Odbc.OdbcCommandBuilder
  langs:
  - csharp
  name: GetParameterPlaceholder(Int32)
  nameWithType: OdbcCommandBuilder.GetParameterPlaceholder(Int32)
  fullName: System.Data.Odbc.OdbcCommandBuilder.GetParameterPlaceholder(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  syntax:
    content: protected override string GetParameterPlaceholder (int parameterOrdinal);
    parameters:
    - id: parameterOrdinal
      type: System.Int32
      description: "추가할 수 있습니다."
    return:
      type: System.String
      description: "추가할 수 있습니다."
  overload: System.Data.Odbc.OdbcCommandBuilder.GetParameterPlaceholder*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand
  id: GetUpdateCommand
  parent: System.Data.Odbc.OdbcCommandBuilder
  langs:
  - csharp
  name: GetUpdateCommand()
  nameWithType: OdbcCommandBuilder.GetUpdateCommand()
  fullName: System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "자동으로 생성 된 가져옵니다 <xref href=&quot;System.Data.Odbc.OdbcCommand&quot;> </xref> 데이터 원본에서 업데이트를 수행 하는 데 필요한 개체입니다."
  remarks: "반환 하기 때문에 문제 해결 용도로 GetUpdateCommand 메서드를 사용할 수는 <xref:System.Data.Odbc.OdbcCommand>실행할 개체입니다.</xref:System.Data.Odbc.OdbcCommand>       또한 수정 된 명령 기반으로 GetUpdateCommand를 사용할 수 있습니다. GetUpdateCommand를 호출 하 고 수정 <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A>값을 명시적으로 <xref:System.Data.Odbc.OdbcDataAdapter>.</xref:System.Data.Odbc.OdbcDataAdapter> 에 설정할</xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A> 수 예를 들어       명시적으로 호출 해야 SQL 문을 처음 생성 후 <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>문을 어떤 식으로든에서 변경 하는 경우.</xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> 그렇지 않은 경우는 GetUpdateCommand 여전히 됩니다 정보를에서 사용는 이전 문을 올바르지 않을 수 있습니다. 응용 프로그램 중 하나를 호출 하는 경우에 SQL 문을 생성할 먼저는 <xref:System.Data.Common.DbDataAdapter.Update%2A>또는 GetUpdateCommand.</xref:System.Data.Common.DbDataAdapter.Update%2A>"
  syntax:
    content: public System.Data.Odbc.OdbcCommand GetUpdateCommand ();
    parameters: []
    return:
      type: System.Data.Odbc.OdbcCommand
      description: "자동으로 생성 된 <xref href=&quot;System.Data.Odbc.OdbcCommand&quot;> </xref> 업데이트를 수행 하는 데 필요한 개체입니다."
  overload: System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand(System.Boolean)
  id: GetUpdateCommand(System.Boolean)
  parent: System.Data.Odbc.OdbcCommandBuilder
  langs:
  - csharp
  name: GetUpdateCommand(Boolean)
  nameWithType: OdbcCommandBuilder.GetUpdateCommand(Boolean)
  fullName: System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand(Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "자동으로 생성 된 가져옵니다 <xref href=&quot;System.Data.Odbc.OdbcCommand&quot;> </xref> 데이터 원본에서 업데이트를 수행 하는 데 필요한 개체입니다."
  remarks: "사용할 수 있습니다는 <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A>반환 하기 때문에 목적으로 하는 문제 해결에 대 한 메서드는 <xref:System.Data.Odbc.OdbcCommand>실행할 개체입니다.</xref:System.Data.Odbc.OdbcCommand> </xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A>       사용할 수도 있습니다 <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A>의 수정 된 명령 기반으로 합니다.</xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> 예를 들어 <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A>수정 <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A>값을 명시적으로 <xref:System.Data.Odbc.OdbcDataAdapter>.</xref:System.Data.Odbc.OdbcDataAdapter> 를 설정</xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A> 하 고</xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> 을 호출할 수 있습니다.       명시적으로 호출 해야 SQL 문을 처음 생성 후 <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>문을 어떤 식으로든에서 변경 하는 경우.</xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> 그렇지 않은 경우는 <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A>여전히 됩니다 수 정보를에서 사용 하는 이전 문을 올바르지 않을 수 있습니다.</xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> SQL 문은 처음으로 생성 됩니다는 응용 프로그램 중 하나 <xref:System.Data.Common.DbDataAdapter.Update%2A>나 <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A>.</xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> </xref:System.Data.Common.DbDataAdapter.Update%2A> 호출 하는 경우       매개 변수 이름을 생성할 때의 기본 동작을 사용 하는 @p1, @p2, 다양 한 매개 변수 대. 전달 `true` 에 대 한는 `useColumnsForParameterNames` 매개 변수에 <xref:System.Data.Common.DbCommandBuilder>대신 열 이름에 따라 매개 변수를 생성 합니다.</xref:System.Data.Common.DbCommandBuilder> 다음 조건에 해당 하는 경우에이 작업은 성공:- <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>를 지정 하면이 고 길이 생성 된 매개 변수 이름 보다 크거나 같은.</xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>      -생성 된 매개 변수 이름에 지정 된 조건에 부합는 <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>정규식.</xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>      -A <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>지정 됩니다.</xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>"
  syntax:
    content: public System.Data.Odbc.OdbcCommand GetUpdateCommand (bool useColumnsForParameterNames);
    parameters:
    - id: useColumnsForParameterNames
      type: System.Boolean
      description: "경우 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, 가능한 경우 열 이름과 일치 하는 매개 변수 이름을 생성 합니다. 경우 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, 생성 @p1, @p2등입니다."
    return:
      type: System.Data.Odbc.OdbcCommand
      description: "자동으로 생성 된 <xref href=&quot;System.Data.Odbc.OdbcCommand&quot;> </xref> 업데이트를 수행 하는 데 필요한 개체입니다."
  overload: System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommandBuilder.QuoteIdentifier(System.String)
  id: QuoteIdentifier(System.String)
  parent: System.Data.Odbc.OdbcCommandBuilder
  langs:
  - csharp
  name: QuoteIdentifier(String)
  nameWithType: OdbcCommandBuilder.QuoteIdentifier(String)
  fullName: System.Data.Odbc.OdbcCommandBuilder.QuoteIdentifier(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "제공 되는 올바른 카탈로그에서는 따옴표가 없는 식별자 올바른 반환 형식의 해당 식별자를 따옴표로 묶을 합니다. 여기에 식별자에 포함 된 따옴표를 이스케이프 합니다."
  syntax:
    content: public override string QuoteIdentifier (string unquotedIdentifier);
    parameters:
    - id: unquotedIdentifier
      type: System.String
      description: "원래 따옴표가 없는 식별자입니다."
    return:
      type: System.String
      description: "따옴표 붙은 식별자의 버전입니다. 식별자에 포함 된 따옴표가 이스케이프 올바르게 됩니다."
  overload: System.Data.Odbc.OdbcCommandBuilder.QuoteIdentifier*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommandBuilder.QuoteIdentifier(System.String,System.Data.Odbc.OdbcConnection)
  id: QuoteIdentifier(System.String,System.Data.Odbc.OdbcConnection)
  parent: System.Data.Odbc.OdbcCommandBuilder
  langs:
  - csharp
  name: QuoteIdentifier(String,OdbcConnection)
  nameWithType: OdbcCommandBuilder.QuoteIdentifier(String,OdbcConnection)
  fullName: System.Data.Odbc.OdbcCommandBuilder.QuoteIdentifier(String,OdbcConnection)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "제공 되는 올바른 카탈로그에서는 따옴표가 없는 식별자 올바른 반환 형식의 해당 식별자를 따옴표로 묶을 합니다. 여기에 식별자에 포함 된 따옴표를 이스케이프 합니다."
  syntax:
    content: public string QuoteIdentifier (string unquotedIdentifier, System.Data.Odbc.OdbcConnection connection);
    parameters:
    - id: unquotedIdentifier
      type: System.String
      description: "원래 따옴표가 없는 식별자입니다."
    - id: connection
      type: System.Data.Odbc.OdbcConnection
      description: "한 연결을 전달 하면 사용자가 관리 되는 래퍼 SQLGetInfo(SQL_IDENTIFIER_QUOTE_CHAR) 호출 ODBC 드라이버에서 인용 문자를 가져올 수 합니다. 문자열 값을 사용 하 나와 연결 없음이 전달 되 면 <> </> *> 및 <> </> *> 합니다."
    return:
      type: System.String
      description: "따옴표 붙은 식별자의 버전입니다. 식별자에 포함 된 따옴표가 이스케이프 올바르게 됩니다."
  overload: System.Data.Odbc.OdbcCommandBuilder.QuoteIdentifier*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)
  id: SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)
  parent: System.Data.Odbc.OdbcCommandBuilder
  langs:
  - csharp
  name: SetRowUpdatingHandler(DbDataAdapter)
  nameWithType: OdbcCommandBuilder.SetRowUpdatingHandler(DbDataAdapter)
  fullName: System.Data.Odbc.OdbcCommandBuilder.SetRowUpdatingHandler(DbDataAdapter)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  syntax:
    content: protected override void SetRowUpdatingHandler (System.Data.Common.DbDataAdapter adapter);
    parameters:
    - id: adapter
      type: System.Data.Common.DbDataAdapter
      description: "추가할 수 있습니다."
  overload: System.Data.Odbc.OdbcCommandBuilder.SetRowUpdatingHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommandBuilder.UnquoteIdentifier(System.String)
  id: UnquoteIdentifier(System.String)
  parent: System.Data.Odbc.OdbcCommandBuilder
  langs:
  - csharp
  name: UnquoteIdentifier(String)
  nameWithType: OdbcCommandBuilder.UnquoteIdentifier(String)
  fullName: System.Data.Odbc.OdbcCommandBuilder.UnquoteIdentifier(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "따옴표가 없는 올바른 형식의 올바르게 포함 하 여 해당 식별자에는 식별자에 포함 된 따옴표 이스케이프 취소 반환 따옴표 붙은 식별자를 제공 합니다."
  syntax:
    content: public override string UnquoteIdentifier (string quotedIdentifier);
    parameters:
    - id: quotedIdentifier
      type: System.String
      description: "포함 된 따옴표 제거 하는 식별자입니다."
    return:
      type: System.String
      description: "포함 된 따옴표가 이스케이프 해제 따옴표가 없는 식별자입니다."
  overload: System.Data.Odbc.OdbcCommandBuilder.UnquoteIdentifier*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommandBuilder.UnquoteIdentifier(System.String,System.Data.Odbc.OdbcConnection)
  id: UnquoteIdentifier(System.String,System.Data.Odbc.OdbcConnection)
  parent: System.Data.Odbc.OdbcCommandBuilder
  langs:
  - csharp
  name: UnquoteIdentifier(String,OdbcConnection)
  nameWithType: OdbcCommandBuilder.UnquoteIdentifier(String,OdbcConnection)
  fullName: System.Data.Odbc.OdbcCommandBuilder.UnquoteIdentifier(String,OdbcConnection)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "따옴표가 없는 올바른 형식의 올바르게 포함 하 여 해당 식별자에는 식별자에 포함 된 따옴표 이스케이프 취소 반환 따옴표 붙은 식별자를 제공 합니다."
  syntax:
    content: public string UnquoteIdentifier (string quotedIdentifier, System.Data.Odbc.OdbcConnection connection);
    parameters:
    - id: quotedIdentifier
      type: System.String
      description: "포함 된 따옴표 제거 하는 식별자입니다."
    - id: connection
      type: System.Data.Odbc.OdbcConnection
      description: "The <xref href=&quot;System.Data.Odbc.OdbcConnection&quot;></xref>."
    return:
      type: System.String
      description: "포함 된 따옴표가 이스케이프 해제 따옴표가 없는 식별자입니다."
  overload: System.Data.Odbc.OdbcCommandBuilder.UnquoteIdentifier*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: System.Data.Common.DbCommandBuilder
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Data.Odbc.OdbcCommandBuilder.#ctor
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: OdbcCommandBuilder()
  nameWithType: OdbcCommandBuilder.OdbcCommandBuilder()
  fullName: System.Data.Odbc.OdbcCommandBuilder.OdbcCommandBuilder()
- uid: System.Data.Odbc.OdbcCommandBuilder.#ctor(System.Data.Odbc.OdbcDataAdapter)
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: OdbcCommandBuilder(OdbcDataAdapter)
  nameWithType: OdbcCommandBuilder.OdbcCommandBuilder(OdbcDataAdapter)
  fullName: System.Data.Odbc.OdbcCommandBuilder.OdbcCommandBuilder(OdbcDataAdapter)
- uid: System.Data.Odbc.OdbcDataAdapter
  parent: System.Data.Odbc
  isExternal: false
  name: OdbcDataAdapter
  nameWithType: OdbcDataAdapter
  fullName: System.Data.Odbc.OdbcDataAdapter
- uid: System.Data.Odbc.OdbcCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: ApplyParameterInfo(DbParameter,DataRow,StatementType,Boolean)
  nameWithType: OdbcCommandBuilder.ApplyParameterInfo(DbParameter,DataRow,StatementType,Boolean)
  fullName: System.Data.Odbc.OdbcCommandBuilder.ApplyParameterInfo(DbParameter,DataRow,StatementType,Boolean)
- uid: System.Data.Common.DbParameter
  parent: System.Data.Common
  isExternal: false
  name: DbParameter
  nameWithType: DbParameter
  fullName: System.Data.Common.DbParameter
- uid: System.Data.DataRow
  parent: System.Data
  isExternal: false
  name: DataRow
  nameWithType: DataRow
  fullName: System.Data.DataRow
- uid: System.Data.StatementType
  parent: System.Data
  isExternal: false
  name: StatementType
  nameWithType: StatementType
  fullName: System.Data.StatementType
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Odbc.OdbcCommandBuilder.DataAdapter
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: DataAdapter
  nameWithType: OdbcCommandBuilder.DataAdapter
  fullName: System.Data.Odbc.OdbcCommandBuilder.DataAdapter
- uid: System.Data.Odbc.OdbcCommandBuilder.DeriveParameters(System.Data.Odbc.OdbcCommand)
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: DeriveParameters(OdbcCommand)
  nameWithType: OdbcCommandBuilder.DeriveParameters(OdbcCommand)
  fullName: System.Data.Odbc.OdbcCommandBuilder.DeriveParameters(OdbcCommand)
- uid: System.Data.Odbc.OdbcCommand
  parent: System.Data.Odbc
  isExternal: false
  name: OdbcCommand
  nameWithType: OdbcCommand
  fullName: System.Data.Odbc.OdbcCommand
- uid: System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: GetDeleteCommand()
  nameWithType: OdbcCommandBuilder.GetDeleteCommand()
  fullName: System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand()
- uid: System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand(System.Boolean)
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: GetDeleteCommand(Boolean)
  nameWithType: OdbcCommandBuilder.GetDeleteCommand(Boolean)
  fullName: System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand(Boolean)
- uid: System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: GetInsertCommand()
  nameWithType: OdbcCommandBuilder.GetInsertCommand()
  fullName: System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand()
- uid: System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand(System.Boolean)
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: GetInsertCommand(Boolean)
  nameWithType: OdbcCommandBuilder.GetInsertCommand(Boolean)
  fullName: System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand(Boolean)
- uid: System.Data.Odbc.OdbcCommandBuilder.GetParameterName(System.Int32)
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: GetParameterName(Int32)
  nameWithType: OdbcCommandBuilder.GetParameterName(Int32)
  fullName: System.Data.Odbc.OdbcCommandBuilder.GetParameterName(Int32)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.Odbc.OdbcCommandBuilder.GetParameterName(System.String)
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: GetParameterName(String)
  nameWithType: OdbcCommandBuilder.GetParameterName(String)
  fullName: System.Data.Odbc.OdbcCommandBuilder.GetParameterName(String)
- uid: System.Data.Odbc.OdbcCommandBuilder.GetParameterPlaceholder(System.Int32)
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: GetParameterPlaceholder(Int32)
  nameWithType: OdbcCommandBuilder.GetParameterPlaceholder(Int32)
  fullName: System.Data.Odbc.OdbcCommandBuilder.GetParameterPlaceholder(Int32)
- uid: System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: GetUpdateCommand()
  nameWithType: OdbcCommandBuilder.GetUpdateCommand()
  fullName: System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand()
- uid: System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand(System.Boolean)
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: GetUpdateCommand(Boolean)
  nameWithType: OdbcCommandBuilder.GetUpdateCommand(Boolean)
  fullName: System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand(Boolean)
- uid: System.Data.Odbc.OdbcCommandBuilder.QuoteIdentifier(System.String)
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: QuoteIdentifier(String)
  nameWithType: OdbcCommandBuilder.QuoteIdentifier(String)
  fullName: System.Data.Odbc.OdbcCommandBuilder.QuoteIdentifier(String)
- uid: System.Data.Odbc.OdbcCommandBuilder.QuoteIdentifier(System.String,System.Data.Odbc.OdbcConnection)
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: QuoteIdentifier(String,OdbcConnection)
  nameWithType: OdbcCommandBuilder.QuoteIdentifier(String,OdbcConnection)
  fullName: System.Data.Odbc.OdbcCommandBuilder.QuoteIdentifier(String,OdbcConnection)
- uid: System.Data.Odbc.OdbcConnection
  parent: System.Data.Odbc
  isExternal: false
  name: OdbcConnection
  nameWithType: OdbcConnection
  fullName: System.Data.Odbc.OdbcConnection
- uid: System.Data.Odbc.OdbcCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: SetRowUpdatingHandler(DbDataAdapter)
  nameWithType: OdbcCommandBuilder.SetRowUpdatingHandler(DbDataAdapter)
  fullName: System.Data.Odbc.OdbcCommandBuilder.SetRowUpdatingHandler(DbDataAdapter)
- uid: System.Data.Common.DbDataAdapter
  parent: System.Data.Common
  isExternal: false
  name: DbDataAdapter
  nameWithType: DbDataAdapter
  fullName: System.Data.Common.DbDataAdapter
- uid: System.Data.Odbc.OdbcCommandBuilder.UnquoteIdentifier(System.String)
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: UnquoteIdentifier(String)
  nameWithType: OdbcCommandBuilder.UnquoteIdentifier(String)
  fullName: System.Data.Odbc.OdbcCommandBuilder.UnquoteIdentifier(String)
- uid: System.Data.Odbc.OdbcCommandBuilder.UnquoteIdentifier(System.String,System.Data.Odbc.OdbcConnection)
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: UnquoteIdentifier(String,OdbcConnection)
  nameWithType: OdbcCommandBuilder.UnquoteIdentifier(String,OdbcConnection)
  fullName: System.Data.Odbc.OdbcCommandBuilder.UnquoteIdentifier(String,OdbcConnection)
- uid: System.Data.Odbc.OdbcCommandBuilder.#ctor*
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: OdbcCommandBuilder
  nameWithType: OdbcCommandBuilder.OdbcCommandBuilder
- uid: System.Data.Odbc.OdbcCommandBuilder.ApplyParameterInfo*
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: ApplyParameterInfo
  nameWithType: OdbcCommandBuilder.ApplyParameterInfo
- uid: System.Data.Odbc.OdbcCommandBuilder.DataAdapter*
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: DataAdapter
  nameWithType: OdbcCommandBuilder.DataAdapter
- uid: System.Data.Odbc.OdbcCommandBuilder.DeriveParameters*
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: DeriveParameters
  nameWithType: OdbcCommandBuilder.DeriveParameters
- uid: System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand*
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: GetDeleteCommand
  nameWithType: OdbcCommandBuilder.GetDeleteCommand
- uid: System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand*
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: GetInsertCommand
  nameWithType: OdbcCommandBuilder.GetInsertCommand
- uid: System.Data.Odbc.OdbcCommandBuilder.GetParameterName*
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: GetParameterName
  nameWithType: OdbcCommandBuilder.GetParameterName
- uid: System.Data.Odbc.OdbcCommandBuilder.GetParameterPlaceholder*
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: GetParameterPlaceholder
  nameWithType: OdbcCommandBuilder.GetParameterPlaceholder
- uid: System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand*
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: GetUpdateCommand
  nameWithType: OdbcCommandBuilder.GetUpdateCommand
- uid: System.Data.Odbc.OdbcCommandBuilder.QuoteIdentifier*
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: QuoteIdentifier
  nameWithType: OdbcCommandBuilder.QuoteIdentifier
- uid: System.Data.Odbc.OdbcCommandBuilder.SetRowUpdatingHandler*
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: SetRowUpdatingHandler
  nameWithType: OdbcCommandBuilder.SetRowUpdatingHandler
- uid: System.Data.Odbc.OdbcCommandBuilder.UnquoteIdentifier*
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: UnquoteIdentifier
  nameWithType: OdbcCommandBuilder.UnquoteIdentifier
