### YamlMime:ManagedReference
items:
- uid: System.Security.Policy.ApplicationSecurityManager
  id: ApplicationSecurityManager
  children:
  - System.Security.Policy.ApplicationSecurityManager.ApplicationTrustManager
  - System.Security.Policy.ApplicationSecurityManager.DetermineApplicationTrust(System.ActivationContext,System.Security.Policy.TrustManagerContext)
  - System.Security.Policy.ApplicationSecurityManager.UserApplicationTrusts
  langs:
  - csharp
  name: ApplicationSecurityManager
  nameWithType: ApplicationSecurityManager
  fullName: System.Security.Policy.ApplicationSecurityManager
  type: Class
  summary: "응용 프로그램 매니페스트에 활성화에 대 한 신뢰 결정을 관리 합니다."
  remarks: "ApplicationSecurityManager 클래스 매니페스트 기반 응용 프로그램의 실행에 대 한 중요 한 정보를 제공합니다. <xref:System.Security.Policy.ApplicationSecurityManager.ApplicationTrustManager%2A>속성을 식별 하려면 신뢰 관리자 응용 프로그램은 신뢰할 수 있는지 여부를 결정 합니다.</xref:System.Security.Policy.ApplicationSecurityManager.ApplicationTrustManager%2A> <xref:System.Security.Policy.ApplicationSecurityManager.DetermineApplicationTrust%2A>메서드 호출 응용 프로그램 신뢰 관리자를 신뢰할 수 있는 응용 프로그램 인지 확인 합니다.</xref:System.Security.Policy.ApplicationSecurityManager.DetermineApplicationTrust%2A> <xref:System.Security.Policy.ApplicationSecurityManager.UserApplicationTrusts%2A>속성 사용자에 대 한 캐시 된 신뢰 결정을 포함 합니다.</xref:System.Security.Policy.ApplicationSecurityManager.UserApplicationTrusts%2A>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public static class ApplicationSecurityManager
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Policy.ApplicationSecurityManager.ApplicationTrustManager
  id: ApplicationTrustManager
  parent: System.Security.Policy.ApplicationSecurityManager
  langs:
  - csharp
  name: ApplicationTrustManager
  nameWithType: ApplicationSecurityManager.ApplicationTrustManager
  fullName: System.Security.Policy.ApplicationSecurityManager.ApplicationTrustManager
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "현재 응용 프로그램 신뢰 관리자를 가져옵니다."
  remarks: "현재 릴리스에서 사용자 지정 구현 될 수 있는 하나의 신뢰 관리자의는 <xref:System.Security.Policy.IApplicationTrustManager>인터페이스.</xref:System.Security.Policy.IApplicationTrustManager> 기본 트러스트 관리자 구현 메시지를 응용 프로그램을 설치 하 여 응용 프로그램에 부여 된 권한 상승을 사용 권한에 대해 사용자를 표시 합니다. 다른 신뢰 관리자 구현에서는 사용자 환경이 있을 수 있습니다. 예를 들어는 구현에는 해당 정보에 대 한 사용자에 게 확인 하는 것이 아니라 신뢰할 수 있는 응용 프로그램에 대 한 엔터프라이즈 목록을 확인할 수 있습니다."
  syntax:
    content: public static System.Security.Policy.IApplicationTrustManager ApplicationTrustManager { get; }
    return:
      type: System.Security.Policy.IApplicationTrustManager
      description: "<xref href=&quot;System.Security.Policy.IApplicationTrustManager&quot;> </xref> 현재 신뢰 관리자를 나타내는입니다."
  overload: System.Security.Policy.ApplicationSecurityManager.ApplicationTrustManager*
  exceptions:
  - type: System.Security.Policy.PolicyException
    commentId: T:System.Security.Policy.PolicyException
    description: "이 응용 프로그램에서 정책을 신뢰 관리자를 없습니다."
  platform:
  - net462
- uid: System.Security.Policy.ApplicationSecurityManager.DetermineApplicationTrust(System.ActivationContext,System.Security.Policy.TrustManagerContext)
  id: DetermineApplicationTrust(System.ActivationContext,System.Security.Policy.TrustManagerContext)
  parent: System.Security.Policy.ApplicationSecurityManager
  langs:
  - csharp
  name: DetermineApplicationTrust(ActivationContext,TrustManagerContext)
  nameWithType: ApplicationSecurityManager.DetermineApplicationTrust(ActivationContext,TrustManagerContext)
  fullName: System.Security.Policy.ApplicationSecurityManager.DetermineApplicationTrust(ActivationContext,TrustManagerContext)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "사용자가 요청 된 사용 권한 집합으로 실행 되도록 지정된 된 응용 프로그램을 승인 여부를 결정 합니다."
  remarks: "DetermineApplicationTrust를 사용 하 여 구성 된 <xref:System.Security.Policy.ApplicationSecurityManager.ApplicationTrustManager%2A>권한 요청 된 응용 프로그램 매니페스트에 집합으로 지정된 된 응용 프로그램의 실행을 허용할지 여부를 결정 하는 속성.</xref:System.Security.Policy.ApplicationSecurityManager.ApplicationTrustManager%2A> 트러스트 관리자 동작은 트러스트 관리자 구현에 따라 달라 집니다. 및 전달 된 정보는 `context` 매개 변수입니다. 트러스트 관리자의 기본 동작은 사용자의 승인을 확인 하려면 사용자 인터페이스 (UI) 대화 상자를 설정 하는 것입니다. 그러나 신뢰 관리자는 회사 데이터베이스에서 제공 하는 결정 등의 다른 조건에 따라 응용 프로그램의 신뢰 상태를 결정할 수도 있습니다. 신뢰 결정을 내리도록 지속 가능에 따라는 `context` 매개 변수 속성 및 트러스트 관리자 구현 합니다. 미래에 대 한 호출이 사용자 대화 상자에 따라 결정에 대 한 응용 프로그램에 대 한 트러스트 지속 되 면는 <xref:System.Security.Policy.ApplicationSecurityManager>해당 응용 프로그램에 대 한 모든 요청에 대 한 UI 대화 상자를 표시 하지 것입니다.</xref:System.Security.Policy.ApplicationSecurityManager> DetermineApplicationTrust은 매니페스트에 하지만 로컬 시스템에 응용 프로그램 다운로드 되기 전에 호출 됩니다."
  syntax:
    content: public static bool DetermineApplicationTrust (ActivationContext activationContext, System.Security.Policy.TrustManagerContext context);
    parameters:
    - id: activationContext
      type: System.ActivationContext
      description: "<xref href=&quot;System.ActivationContext&quot;> </xref> 응용 프로그램에 대 한 활성화 컨텍스트를 식별 합니다."
    - id: context
      type: System.Security.Policy.TrustManagerContext
      description: "A <xref href=&quot;System.Security.Policy.TrustManagerContext&quot;> </xref> 응용 프로그램에 대 한 트러스트 관리자 컨텍스트를 식별 합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>지정 된 응용 프로그램을 실행 하려면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Security.Policy.ApplicationSecurityManager.DetermineApplicationTrust*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>activationContext</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Policy.ApplicationSecurityManager.UserApplicationTrusts
  id: UserApplicationTrusts
  parent: System.Security.Policy.ApplicationSecurityManager
  langs:
  - csharp
  name: UserApplicationTrusts
  nameWithType: ApplicationSecurityManager.UserApplicationTrusts
  fullName: System.Security.Policy.ApplicationSecurityManager.UserApplicationTrusts
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "사용자에 대 한 캐시 된 신뢰 결정을 포함 하는 응용 프로그램 신뢰 컬렉션을 가져옵니다."
  remarks: "컬렉션에서 신뢰 결정 같은 컬렉션의 메서드를 사용 하 여 유지 관리 되는 <xref:System.Security.Policy.ApplicationTrustCollection.Add%2A>메서드 또는 <xref:System.Security.Policy.ApplicationTrustCollection.Remove%2A>메서드.</xref:System.Security.Policy.ApplicationTrustCollection.Remove%2A> </xref:System.Security.Policy.ApplicationTrustCollection.Add%2A>"
  syntax:
    content: public static System.Security.Policy.ApplicationTrustCollection UserApplicationTrusts { get; }
    return:
      type: System.Security.Policy.ApplicationTrustCollection
      description: "<xref href=&quot;System.Security.Policy.ApplicationTrustCollection&quot;> </xref> 사용자에 대 한 캐시 된 신뢰 결정이 들어 있는입니다."
  overload: System.Security.Policy.ApplicationSecurityManager.UserApplicationTrusts*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Security.Policy.PolicyException
  parent: System.Security.Policy
  isExternal: false
  name: PolicyException
  nameWithType: PolicyException
  fullName: System.Security.Policy.PolicyException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Policy.ApplicationSecurityManager.ApplicationTrustManager
  parent: System.Security.Policy.ApplicationSecurityManager
  isExternal: false
  name: ApplicationTrustManager
  nameWithType: ApplicationSecurityManager.ApplicationTrustManager
  fullName: System.Security.Policy.ApplicationSecurityManager.ApplicationTrustManager
- uid: System.Security.Policy.IApplicationTrustManager
  parent: System.Security.Policy
  isExternal: false
  name: IApplicationTrustManager
  nameWithType: IApplicationTrustManager
  fullName: System.Security.Policy.IApplicationTrustManager
- uid: System.Security.Policy.ApplicationSecurityManager.DetermineApplicationTrust(System.ActivationContext,System.Security.Policy.TrustManagerContext)
  parent: System.Security.Policy.ApplicationSecurityManager
  isExternal: false
  name: DetermineApplicationTrust(ActivationContext,TrustManagerContext)
  nameWithType: ApplicationSecurityManager.DetermineApplicationTrust(ActivationContext,TrustManagerContext)
  fullName: System.Security.Policy.ApplicationSecurityManager.DetermineApplicationTrust(ActivationContext,TrustManagerContext)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ActivationContext
  parent: System
  isExternal: false
  name: ActivationContext
  nameWithType: ActivationContext
  fullName: System.ActivationContext
- uid: System.Security.Policy.TrustManagerContext
  parent: System.Security.Policy
  isExternal: false
  name: TrustManagerContext
  nameWithType: TrustManagerContext
  fullName: System.Security.Policy.TrustManagerContext
- uid: System.Security.Policy.ApplicationSecurityManager.UserApplicationTrusts
  parent: System.Security.Policy.ApplicationSecurityManager
  isExternal: false
  name: UserApplicationTrusts
  nameWithType: ApplicationSecurityManager.UserApplicationTrusts
  fullName: System.Security.Policy.ApplicationSecurityManager.UserApplicationTrusts
- uid: System.Security.Policy.ApplicationTrustCollection
  parent: System.Security.Policy
  isExternal: false
  name: ApplicationTrustCollection
  nameWithType: ApplicationTrustCollection
  fullName: System.Security.Policy.ApplicationTrustCollection
- uid: System.Security.Policy.ApplicationSecurityManager.ApplicationTrustManager*
  parent: System.Security.Policy.ApplicationSecurityManager
  isExternal: false
  name: ApplicationTrustManager
  nameWithType: ApplicationSecurityManager.ApplicationTrustManager
- uid: System.Security.Policy.ApplicationSecurityManager.DetermineApplicationTrust*
  parent: System.Security.Policy.ApplicationSecurityManager
  isExternal: false
  name: DetermineApplicationTrust
  nameWithType: ApplicationSecurityManager.DetermineApplicationTrust
- uid: System.Security.Policy.ApplicationSecurityManager.UserApplicationTrusts*
  parent: System.Security.Policy.ApplicationSecurityManager
  isExternal: false
  name: UserApplicationTrusts
  nameWithType: ApplicationSecurityManager.UserApplicationTrusts
