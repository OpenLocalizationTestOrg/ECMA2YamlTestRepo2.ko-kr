### YamlMime:ManagedReference
items:
- uid: System.Net.Http.MultipartContent
  id: MultipartContent
  children:
  - System.Net.Http.MultipartContent.#ctor
  - System.Net.Http.MultipartContent.#ctor(System.String)
  - System.Net.Http.MultipartContent.#ctor(System.String,System.String)
  - System.Net.Http.MultipartContent.Add(System.Net.Http.HttpContent)
  - System.Net.Http.MultipartContent.Dispose(System.Boolean)
  - System.Net.Http.MultipartContent.GetEnumerator
  - System.Net.Http.MultipartContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)
  - System.Net.Http.MultipartContent.System#Collections#IEnumerable#GetEnumerator
  - System.Net.Http.MultipartContent.TryComputeLength(System.Int64@)
  langs:
  - csharp
  name: MultipartContent
  nameWithType: MultipartContent
  fullName: System.Net.Http.MultipartContent
  type: Class
  summary: "컬렉션을 제공 <xref href=&quot;System.Net.Http.HttpContent&quot;> </xref> 다중을 사용 하 여 직렬화 되는 개체 / * 콘텐츠 형식 사양을 합니다."
  syntax:
    content: 'public class MultipartContent : System.Net.Http.HttpContent, System.Collections.Generic.IEnumerable<System.Net.Http.HttpContent>'
  inheritance:
  - System.Object
  - System.Net.Http.HttpContent
  implements:
  - System.Collections.Generic.IEnumerable<System.Net.Http.HttpContent>
  inheritedMembers:
  - System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream)
  - System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream,System.Net.TransportContext)
  - System.Net.Http.HttpContent.CreateContentReadStreamAsync
  - System.Net.Http.HttpContent.Dispose
  - System.Net.Http.HttpContent.Headers
  - System.Net.Http.HttpContent.LoadIntoBufferAsync
  - System.Net.Http.HttpContent.LoadIntoBufferAsync(System.Int64)
  - System.Net.Http.HttpContent.ReadAsByteArrayAsync
  - System.Net.Http.HttpContent.ReadAsStreamAsync
  - System.Net.Http.HttpContent.ReadAsStringAsync
  platform:
  - net462
- uid: System.Net.Http.MultipartContent.#ctor
  id: '#ctor'
  parent: System.Net.Http.MultipartContent
  langs:
  - csharp
  name: MultipartContent()
  nameWithType: MultipartContent.MultipartContent()
  fullName: System.Net.Http.MultipartContent.MultipartContent()
  type: Constructor
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "새 인스턴스를 만듭니다는 <xref href=&quot;System.Net.Http.MultipartContent&quot;> </xref> 클래스입니다."
  syntax:
    content: public MultipartContent ();
    parameters: []
  overload: System.Net.Http.MultipartContent.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.MultipartContent.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Net.Http.MultipartContent
  langs:
  - csharp
  name: MultipartContent(String)
  nameWithType: MultipartContent.MultipartContent(String)
  fullName: System.Net.Http.MultipartContent.MultipartContent(String)
  type: Constructor
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "새 인스턴스를 만듭니다는 <xref href=&quot;System.Net.Http.MultipartContent&quot;> </xref> 클래스입니다."
  syntax:
    content: public MultipartContent (string subtype);
    parameters:
    - id: subtype
      type: System.String
      description: "다중 파트 콘텐츠의 하위 형식입니다."
  overload: System.Net.Http.MultipartContent.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> subtype </code> 되었습니다 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 이거나 공백 문자만 포함 합니다."
  platform:
  - net462
- uid: System.Net.Http.MultipartContent.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Net.Http.MultipartContent
  langs:
  - csharp
  name: MultipartContent(String,String)
  nameWithType: MultipartContent.MultipartContent(String,String)
  fullName: System.Net.Http.MultipartContent.MultipartContent(String,String)
  type: Constructor
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "새 인스턴스를 만듭니다는 <xref href=&quot;System.Net.Http.MultipartContent&quot;> </xref> 클래스입니다."
  syntax:
    content: public MultipartContent (string subtype, string boundary);
    parameters:
    - id: subtype
      type: System.String
      description: "다중 파트 콘텐츠의 하위 형식입니다."
    - id: boundary
      type: System.String
      description: "다중 파트 콘텐츠의 경계 문자열입니다."
  overload: System.Net.Http.MultipartContent.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> subtype </code> 되었습니다 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 또는 빈 문자열입니다.       <code> boundary </code> 되었습니다 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 이거나 공백 문자만 포함 합니다.       -또는- <code> boundary </code> 공백 문자로 끝납니다."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "길이 <code> boundary </code> 70 보다 큽니다."
  platform:
  - net462
- uid: System.Net.Http.MultipartContent.Add(System.Net.Http.HttpContent)
  id: Add(System.Net.Http.HttpContent)
  parent: System.Net.Http.MultipartContent
  langs:
  - csharp
  name: Add(HttpContent)
  nameWithType: MultipartContent.Add(HttpContent)
  fullName: System.Net.Http.MultipartContent.Add(HttpContent)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "다중 파트 HTTP 콘텐츠를 컬렉션에 추가 <xref href=&quot;System.Net.Http.HttpContent&quot;> </xref> 다중을 사용 하 여 직렬화 되는 개체 / * 콘텐츠 형식 사양을 합니다."
  syntax:
    content: public virtual void Add (System.Net.Http.HttpContent content);
    parameters:
    - id: content
      type: System.Net.Http.HttpContent
      description: "컬렉션에 추가할 HTTP 콘텐츠입니다."
  overload: System.Net.Http.MultipartContent.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>content</code> was <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Net.Http.MultipartContent.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Net.Http.MultipartContent
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: MultipartContent.Dispose(Boolean)
  fullName: System.Net.Http.MultipartContent.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "사용 하는 관리 되지 않는 리소스를 해제는 <xref href=&quot;System.Net.Http.MultipartContent&quot;> </xref> 관리 되는 리소스를 선택적으로 삭제 하 고 있습니다."
  remarks: "이 메서드는 public `Dispose()` 메서드 및 <xref:System.Object.Finalize%2A>메서드.</xref:System.Object.Finalize%2A> `Dispose()`보호 된 호출 `Dispose(Boolean)` 메서드는 `disposing` 매개 변수 설정 `true`합니다. <xref:System.Object.Finalize%2A>호출 `Dispose` 와 `disposing` 로 설정 `false`합니다. 경우는 `disposing` 매개 변수는 `true`,이 메서드는 관리 개체가 보유 하는 모든 리소스를 해제 합니다.이 <xref:System.Net.Http.MultipartContent>참조.</xref:System.Net.Http.MultipartContent></xref:System.Object.Finalize%2A> 이 메서드 호출에서 `Dispose()` 각 참조 된 개체의 메서드."
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>관리 되는 관리 되지 않는 리소스만 해제 하려면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 관리 되지 않는 리소스를 해제 합니다."
  overload: System.Net.Http.MultipartContent.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.MultipartContent.GetEnumerator
  id: GetEnumerator
  parent: System.Net.Http.MultipartContent
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: MultipartContent.GetEnumerator()
  fullName: System.Net.Http.MultipartContent.GetEnumerator()
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "컬렉션을 반복 하는 열거자를 반환 <xref href=&quot;System.Net.Http.HttpContent&quot;> </xref> 다중을 사용 하 여 직렬화 되는 개체 / * 콘텐츠 형식 사양을..."
  remarks: "C# 언어 (각각에 대해 Visual basic에서)의 열거자의 복잡성을 숨깁니다. 따라서 foreach를 사용 하는 것 보다 열거자를 직접 조작 합니다.       열거자는 컬렉션의에서 데이터를 읽는 데 사용할 수 있지만 기본 컬렉션을 수정 하는 사용할 수 없습니다.       처음에 열거자는 컬렉션의 첫 번째 요소 앞에 배치 됩니다."
  syntax:
    content: public System.Collections.Generic.IEnumerator<System.Net.Http.HttpContent> GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerator{System.Net.Http.HttpContent}
      description: "컬렉션을 반복 하는 데 사용할 수 있는 개체입니다."
  overload: System.Net.Http.MultipartContent.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.MultipartContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)
  id: SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)
  parent: System.Net.Http.MultipartContent
  langs:
  - csharp
  name: SerializeToStreamAsync(Stream,TransportContext)
  nameWithType: MultipartContent.SerializeToStreamAsync(Stream,TransportContext)
  fullName: System.Net.Http.MultipartContent.SerializeToStreamAsync(Stream,TransportContext)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "비동기 작업으로 스트림에 HTTP 콘텐츠 다중 파트를 직렬화 합니다."
  remarks: "이 작업을 차단 하지 않습니다. 반환 된 <xref:System.Threading.Tasks.Task%601>대상 스트림으로 serialize 된 모든 콘텐츠 개체 완성 합니다.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: protected override System.Threading.Tasks.Task SerializeToStreamAsync (System.IO.Stream stream, System.Net.TransportContext context);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "대상 스트림입니다."
    - id: context
      type: System.Net.TransportContext
      description: "(채널 바인딩 토큰 예를 들어) 전송 하는 방법에 대 한 정보입니다. 이 매개 변수 수 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
    return:
      type: System.Threading.Tasks.Task
      description: "비동기 작업을 나타내는 작업 개체입니다."
  overload: System.Net.Http.MultipartContent.SerializeToStreamAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.MultipartContent.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Net.Http.MultipartContent
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: MultipartContent.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Net.Http.MultipartContent.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "명시적 구현이 <xref:System.Net.Http.MultipartContent.GetEnumerator*>메서드.</xref:System.Net.Http.MultipartContent.GetEnumerator*>"
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "컬렉션을 반복 하는 데 사용할 수 있는 개체입니다."
  overload: System.Net.Http.MultipartContent.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.MultipartContent.TryComputeLength(System.Int64@)
  id: TryComputeLength(System.Int64@)
  parent: System.Net.Http.MultipartContent
  langs:
  - csharp
  name: TryComputeLength(Int64)
  nameWithType: MultipartContent.TryComputeLength(Int64)
  fullName: System.Net.Http.MultipartContent.TryComputeLength(Int64)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "HTTP 다중 파트 콘텐츠의 길이 (바이트)에서에 있는지 여부를 결정 합니다."
  remarks: "TryComputeLength 메서드 콘텐츠 길이 계산 하는 HTTP 다중 파트 콘텐츠를 제공 합니다. 쉽게 콘텐츠 길이 계산할 수 있는 콘텐츠 형식에 유용 합니다. 콘텐츠 길이 수 없거나 비용이 많이 드는 (해야 직렬화는 비용이 많이 들 수 하거나 많은 양의 메모리를 할당할 수 있는 전체 콘텐츠를 버퍼링 하는 시스템) 컴퓨팅,이 메서드가 반환할 수 있습니다 `false`합니다. 이 메서드가 반환 하는 경우 `false`,이 청크 분할된 전송 필요 없거나 서버에 전송 되기 전에 콘텐츠 버퍼링 해야 되 의미 합니다."
  syntax:
    content: protected override bool TryComputeLength (out long length);
    parameters:
    - id: length
      type: System.Int64
      description: "HHTP 콘텐츠의 길이 (바이트)에서입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우 <code> length </code> 올바르면, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Net.Http.MultipartContent.TryComputeLength*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Net.Http.HttpContent
  isExternal: false
  name: System.Net.Http.HttpContent
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Net.Http.MultipartContent.#ctor
  parent: System.Net.Http.MultipartContent
  isExternal: false
  name: MultipartContent()
  nameWithType: MultipartContent.MultipartContent()
  fullName: System.Net.Http.MultipartContent.MultipartContent()
- uid: System.Net.Http.MultipartContent.#ctor(System.String)
  parent: System.Net.Http.MultipartContent
  isExternal: false
  name: MultipartContent(String)
  nameWithType: MultipartContent.MultipartContent(String)
  fullName: System.Net.Http.MultipartContent.MultipartContent(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.Http.MultipartContent.#ctor(System.String,System.String)
  parent: System.Net.Http.MultipartContent
  isExternal: false
  name: MultipartContent(String,String)
  nameWithType: MultipartContent.MultipartContent(String,String)
  fullName: System.Net.Http.MultipartContent.MultipartContent(String,String)
- uid: System.Net.Http.MultipartContent.Add(System.Net.Http.HttpContent)
  parent: System.Net.Http.MultipartContent
  isExternal: false
  name: Add(HttpContent)
  nameWithType: MultipartContent.Add(HttpContent)
  fullName: System.Net.Http.MultipartContent.Add(HttpContent)
- uid: System.Net.Http.MultipartContent.Dispose(System.Boolean)
  parent: System.Net.Http.MultipartContent
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: MultipartContent.Dispose(Boolean)
  fullName: System.Net.Http.MultipartContent.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.Http.MultipartContent.GetEnumerator
  parent: System.Net.Http.MultipartContent
  isExternal: false
  name: GetEnumerator()
  nameWithType: MultipartContent.GetEnumerator()
  fullName: System.Net.Http.MultipartContent.GetEnumerator()
- uid: System.Collections.Generic.IEnumerator{System.Net.Http.HttpContent}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerator<HttpContent>
  nameWithType: IEnumerator<HttpContent>
  fullName: System.Collections.Generic.IEnumerator<System.Net.Http.HttpContent>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator<System.Net.Http.HttpContent>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.Http.HttpContent
    name: HttpContent
    nameWithType: HttpContent
    fullName: HttpContent
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.Http.MultipartContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)
  parent: System.Net.Http.MultipartContent
  isExternal: false
  name: SerializeToStreamAsync(Stream,TransportContext)
  nameWithType: MultipartContent.SerializeToStreamAsync(Stream,TransportContext)
  fullName: System.Net.Http.MultipartContent.SerializeToStreamAsync(Stream,TransportContext)
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Net.TransportContext
  parent: System.Net
  isExternal: true
  name: TransportContext
  nameWithType: TransportContext
  fullName: System.Net.TransportContext
- uid: System.Net.Http.MultipartContent.System#Collections#IEnumerable#GetEnumerator
  parent: System.Net.Http.MultipartContent
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: MultipartContent.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Net.Http.MultipartContent.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Net.Http.MultipartContent.TryComputeLength(System.Int64@)
  parent: System.Net.Http.MultipartContent
  isExternal: false
  name: TryComputeLength(Int64)
  nameWithType: MultipartContent.TryComputeLength(Int64)
  fullName: System.Net.Http.MultipartContent.TryComputeLength(Int64)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Net.Http.MultipartContent.#ctor*
  parent: System.Net.Http.MultipartContent
  isExternal: false
  name: MultipartContent
  nameWithType: MultipartContent.MultipartContent
- uid: System.Net.Http.MultipartContent.Add*
  parent: System.Net.Http.MultipartContent
  isExternal: false
  name: Add
  nameWithType: MultipartContent.Add
- uid: System.Net.Http.MultipartContent.Dispose*
  parent: System.Net.Http.MultipartContent
  isExternal: false
  name: Dispose
  nameWithType: MultipartContent.Dispose
- uid: System.Net.Http.MultipartContent.GetEnumerator*
  parent: System.Net.Http.MultipartContent
  isExternal: false
  name: GetEnumerator
  nameWithType: MultipartContent.GetEnumerator
- uid: System.Net.Http.MultipartContent.SerializeToStreamAsync*
  parent: System.Net.Http.MultipartContent
  isExternal: false
  name: SerializeToStreamAsync
  nameWithType: MultipartContent.SerializeToStreamAsync
- uid: System.Net.Http.MultipartContent.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Net.Http.MultipartContent
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: MultipartContent.System.Collections.IEnumerable.GetEnumerator
- uid: System.Net.Http.MultipartContent.TryComputeLength*
  parent: System.Net.Http.MultipartContent
  isExternal: false
  name: TryComputeLength
  nameWithType: MultipartContent.TryComputeLength
