### YamlMime:ManagedReference
items:
- uid: System.Xml.Xsl.XslCompiledTransform
  id: XslCompiledTransform
  children:
  - System.Xml.Xsl.XslCompiledTransform.#ctor
  - System.Xml.Xsl.XslCompiledTransform.#ctor(System.Boolean)
  - System.Xml.Xsl.XslCompiledTransform.CompileToType(System.Xml.XmlReader,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver,System.Boolean,System.Reflection.Emit.TypeBuilder,System.String)
  - System.Xml.Xsl.XslCompiledTransform.Load(System.String)
  - System.Xml.Xsl.XslCompiledTransform.Load(System.Type)
  - System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XmlReader)
  - System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XPath.IXPathNavigable)
  - System.Xml.Xsl.XslCompiledTransform.Load(System.Reflection.MethodInfo,System.Byte[],System.Type[])
  - System.Xml.Xsl.XslCompiledTransform.Load(System.String,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver)
  - System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XmlReader,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver)
  - System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver)
  - System.Xml.Xsl.XslCompiledTransform.OutputSettings
  - System.Xml.Xsl.XslCompiledTransform.TemporaryFiles
  - System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.String)
  - System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)
  - System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.XmlWriter)
  - System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.XmlWriter)
  - System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)
  - System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)
  - System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)
  - System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)
  - System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)
  - System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)
  - System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)
  - System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)
  - System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)
  - System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)
  - System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)
  langs:
  - csharp
  name: XslCompiledTransform
  nameWithType: XslCompiledTransform
  fullName: System.Xml.Xsl.XslCompiledTransform
  type: Class
  summary: "XSLT 스타일 시트를 사용 하 여 XML 데이터를 변환 합니다."
  remarks: "XslCompiledTransform 클래스는 XSLT 1.0 구문을 지 원하는 XSLT 프로세서입니다. 새 구현 되 고 사용 되지 않는 <xref:System.Xml.Xsl.XslTransform>클래스</xref:System.Xml.Xsl.XslTransform> 에 비해 성능 향상 이점을 얻으려면 포함 됩니다. XslCompiledTransform 클래스의 구조는 매우 유사 <xref:System.Xml.Xsl.XslTransform>클래스</xref:System.Xml.Xsl.XslTransform> <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A>메서드 로드 하 고 스타일을 컴파일합니다 시트를 <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>메서드는 XSLT 변환을 실행 합니다.</xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> </xref:System.Xml.Xsl.XslCompiledTransform.Load%2A>       XSLT에 대 한 지원 `document()` 함수 및 포함된 스크립트 블록이 기본적으로 비활성화 됩니다. 만들어서 이러한 기능을 설정할 수는 <xref:System.Xml.Xsl.XsltSettings>개체로 전달 하는 <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A>메서드.</xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> </xref:System.Xml.Xsl.XsltSettings>       자세한 내용은 참조 [XslCompiledTransform 클래스를 사용 하 여](~/add/includes/ajax-current-ext-md.md) 및 [마이그레이션 XslTransform 클래스에서](~/add/includes/ajax-current-ext-md.md)합니다.      ## 다음 항목 및 그 의미에 대해 알고 있어야 보안 고려 사항을 만들 때 XslCompiledTransform 클래스를 사용 하는 응용 프로그램,:-XSLT 스크립트는 기본적으로 해제 합니다. XSLT 스크립트 스크립트 지원이 필요 하거나 완전히 신뢰할 수 있는 환경에서 작업 하는 경우에 활성화 해야 합니다.      -XSLT `document()` 함수는 기본적으로 비활성화 되어 있습니다. 사용 하도록 설정 하면는 `document()` 함수를 전달 하 여 액세스할 수 있는 리소스를 제한 한 <xref:System.Xml.XmlSecureResolver>개체는 <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>메서드.</xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> </xref:System.Xml.XmlSecureResolver>      -확장 개체는 기본적으로 활성화 됩니다. 경우는 <xref:System.Xml.Xsl.XsltArgumentList>확장 개체가 포함 된 개체는 전달 된 <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>메서드를 사용 됩니다.</xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> </xref:System.Xml.Xsl.XsltArgumentList>      -XSLT 스타일 시트는 다른 파일 및 포함 된 스크립트 블록에 대 한 참조를 포함할 수 있습니다. 악의적인 사용자 데이터와 함께 제공 하 여 악용할 수 있습니다 또는 스타일 시트를 실행 하면 시스템 리소스에서 컴퓨터가 느리게 실행 될 때까지 처리 될 수 있습니다.      -혼합된 신뢰 환경에서 실행 되는 응용 프로그램 XSLT 스타일 시트가 스푸핑될 발생할 수 있습니다. 악의적인 사용자는 해로운 스타일 시트가 있는 개체를 로드 하 고 다른 사용자에 게 이후에 호출에 전달할 수 예를 들어는 <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>메서드 고 변형을 실행할.</xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>       스크립트를 사용 하지 않으면 이러한 보안 문제를 완화할 수 있습니다 또는 `document()` 신뢰할 수 있는 소스에서 스타일 시트를 가져온 하 고 개체, XSLT 스타일 시트 또는 XML 소스 신뢰할 수 없는 소스에서 데이터 XslCompiledTransform을 허용 하지 않음으로써 하지 않으면 작동 합니다."
  example:
  - "The following example executes a transform and outputs to a file.  \n  \n [!code-vb[XslCompiledTransform.Transform#1](~/add/codesnippet/visualbasic/t-system.xml.xsl.xslcomp_1.vb)]\n [!code-cs[XslCompiledTransform.Transform#1](~/add/codesnippet/csharp/t-system.xml.xsl.xslcomp_1.cs)]  \n  \n The sample uses the following two input files:  \n  \n `books.xml`  \n  \n [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/add/codesnippet/xml/t-system.xml.xsl.xslcomp_2.xml)]  \n  \n `output.xsl`  \n  \n [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/add/codesnippet/xml/t-system.xml.xsl.xslcomp_3.xsl)]"
  syntax:
    content: public sealed class XslCompiledTransform
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xml.Xsl.XslCompiledTransform.#ctor
  id: '#ctor'
  parent: System.Xml.Xsl.XslCompiledTransform
  langs:
  - csharp
  name: XslCompiledTransform()
  nameWithType: XslCompiledTransform.XslCompiledTransform()
  fullName: System.Xml.Xsl.XslCompiledTransform.XslCompiledTransform()
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Xml.Xsl.XslCompiledTransform&quot;> </xref> 클래스입니다."
  syntax:
    content: public XslCompiledTransform ();
    parameters: []
  overload: System.Xml.Xsl.XslCompiledTransform.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Xsl.XslCompiledTransform.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: System.Xml.Xsl.XslCompiledTransform
  langs:
  - csharp
  name: XslCompiledTransform(Boolean)
  nameWithType: XslCompiledTransform.XslCompiledTransform(Boolean)
  fullName: System.Xml.Xsl.XslCompiledTransform.XslCompiledTransform(Boolean)
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Xml.Xsl.XslCompiledTransform&quot;> </xref> 클래스 지정 된 디버그 설정 사용 합니다."
  remarks: "다음과 같은 코드를 한 단계씩 및 스타일 시트를 디버깅 하려면 충족 해야 합니다:- `enableDebug` 로 설정 된 `true`합니다.      -스타일 시트에 전달 되는 <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A>URI 또는 구현의 메서드는 <xref:System.Xml.XmlReader>구현 하는 클래스는 <xref:System.Xml.IXmlLineInfo>인터페이스.</xref:System.Xml.IXmlLineInfo> </xref:System.Xml.XmlReader> </xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> <xref:System.Xml.IXmlLineInfo>인터페이스 모든 텍스트 구문 분석에서 구현 되는 <xref:System.Xml.XmlReader>개체.</xref:System.Xml.XmlReader> </xref:System.Xml.IXmlLineInfo>           즉, 사용 하 여 스타일 시트를 로드 하는 경우는 <xref:System.Xml.XPath.IXPathNavigable>와 같은 개체는 <xref:System.Xml.XmlDocument>또는 <xref:System.Xml.XPath.XPathDocument>, 또는 <xref:System.Xml.XmlReader>구현 하지 않는 구현을 <xref:System.Xml.IXmlLineInfo>인터페이스를 스타일 시트를 디버깅할 수 없습니다.</xref:System.Xml.IXmlLineInfo> </xref:System.Xml.XmlReader> </xref:System.Xml.XPath.XPathDocument> </xref:System.Xml.XmlDocument> </xref:System.Xml.XPath.IXPathNavigable>      - <xref:System.Xml.XmlResolver>스타일을 로드 하는 데 사용 시트는 파일 기반 <xref:System.Xml.XmlResolver>와 같은 <xref:System.Xml.XmlUrlResolver>(이것이 기본값 <xref:System.Xml.XmlResolver>에서 사용 하는 <xref:System.Xml.Xsl.XslCompiledTransform>클래스).</xref:System.Xml.Xsl.XslCompiledTransform> </xref:System.Xml.XmlResolver> </xref:System.Xml.XmlUrlResolver> </xref:System.Xml.XmlResolver> </xref:System.Xml.XmlResolver>      -스타일 시트는 로컬 컴퓨터 또는 인트라넷에 있습니다."
  example:
  - "The following example shows how to enable XSLT debugging.  \n  \n [!code-vb[XslCompiledTransform.Load#10](~/add/codesnippet/visualbasic/m-system.xml.xsl.xslcomp_1_1.vb)]\n [!code-cs[XslCompiledTransform.Load#10](~/add/codesnippet/csharp/m-system.xml.xsl.xslcomp_1_1.cs)]"
  syntax:
    content: public XslCompiledTransform (bool enableDebug);
    parameters:
    - id: enableDebug
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>디버그 정보를 생성 하려면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 이 값을 설정 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> Microsoft Visual Studio 디버거를 사용 하는 스타일 시트를 디버깅할 수 있도록 합니다."
  overload: System.Xml.Xsl.XslCompiledTransform.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Xsl.XslCompiledTransform.CompileToType(System.Xml.XmlReader,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver,System.Boolean,System.Reflection.Emit.TypeBuilder,System.String)
  id: CompileToType(System.Xml.XmlReader,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver,System.Boolean,System.Reflection.Emit.TypeBuilder,System.String)
  parent: System.Xml.Xsl.XslCompiledTransform
  langs:
  - csharp
  name: CompileToType(XmlReader,XsltSettings,XmlResolver,Boolean,TypeBuilder,String)
  nameWithType: XslCompiledTransform.CompileToType(XmlReader,XsltSettings,XmlResolver,Boolean,TypeBuilder,String)
  fullName: System.Xml.Xsl.XslCompiledTransform.CompileToType(XmlReader,XsltSettings,XmlResolver,Boolean,TypeBuilder,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "지정된 된 형식으로 XSLT 스타일 시트를 컴파일합니다."
  remarks: "`xsltc.exe` 도구는 CompileToType 메서드 주변 래퍼입니다. 와 스타일 시트를 컴파일하고 `xsltc.exe` 컴파일된 스타일 시트를 사용 하는 대부분의 응용 프로그램의 요구 사항을 만족 합니다. 사용자 지정 컴파일 도구를 빌드할 때 CompileToType 메서드 쓰일 수 있습니다."
  syntax:
    content: public static System.CodeDom.Compiler.CompilerErrorCollection CompileToType (System.Xml.XmlReader stylesheet, System.Xml.Xsl.XsltSettings settings, System.Xml.XmlResolver stylesheetResolver, bool debug, System.Reflection.Emit.TypeBuilder typeBuilder, string scriptAssemblyPath);
    parameters:
    - id: stylesheet
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader>스타일 시트를 컴파일할 수의 시작 부분에 배치 됩니다.</xref:System.Xml.XmlReader>"
    - id: settings
      type: System.Xml.Xsl.XsltSettings
      description: "<xref href=&quot;System.Xml.Xsl.XsltSettings&quot;> </xref> 스타일 시트에 적용 될 수 있습니다. 이것이 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, <xref:System.Xml.Xsl.XsltSettings.Default*>적용 됩니다.</xref:System.Xml.Xsl.XsltSettings.Default*>"
    - id: stylesheetResolver
      type: System.Xml.XmlResolver
      description: "<xref href=&quot;System.Xml.XmlResolver&quot;> </xref> 스타일 시트 모듈에서 참조를 해결 하려면 사용 <xref uid=&quot;langword_csharp_xsl:import&quot; name=&quot;xsl:import&quot; href=&quot;&quot;> </xref> 및 <xref uid=&quot;langword_csharp_xsl:include&quot; name=&quot;xsl:include&quot; href=&quot;&quot;> </xref> 요소입니다. 이것이 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, 외부 리소스 확인 되지 것입니다."
    - id: debug
      type: System.Boolean
      description: "이 값을 설정 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> 디버거와 스타일 시트를 디버깅할 수 있습니다."
    - id: typeBuilder
      type: System.Reflection.Emit.TypeBuilder
      description: "<xref:System.Reflection.Emit.TypeBuilder>스타일 시트에 사용 되는.</xref:System.Reflection.Emit.TypeBuilder> 제공 된 TypeBuilder는 결과 형식을 생성 하는 데 사용 됩니다."
    - id: scriptAssemblyPath
      type: System.String
      description: "에 대해 생성 된 어셈블리에 대 한 기본 경로 <xref uid=&quot;langword_csharp_msxsl:script&quot; name=&quot;msxsl:script&quot; href=&quot;&quot;> </xref> 요소입니다. 하나의 스크립트 어셈블리만 생성 되는,이 매개 변수는 해당 어셈블리에 대 한 경로 지정 합니다. 여러 스크립트 어셈블리가 어셈블리 이름의 고유성을 유지 하는 파일 이름에 구분 접미사가 추가 됩니다."
    return:
      type: System.CodeDom.Compiler.CompilerErrorCollection
      description: "A <xref href=&quot;System.CodeDom.Compiler.CompilerErrorCollection&quot;> </xref> 컴파일러 오류 및 경고는 컴파일 결과 나타내는 포함 하는 개체입니다."
  overload: System.Xml.Xsl.XslCompiledTransform.CompileToType*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Xsl.XslCompiledTransform.Load(System.String)
  id: Load(System.String)
  parent: System.Xml.Xsl.XslCompiledTransform
  langs:
  - csharp
  name: Load(String)
  nameWithType: XslCompiledTransform.Load(String)
  fullName: System.Xml.Xsl.XslCompiledTransform.Load(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "로드 하 고 지정된 된 URI에 있는 스타일 시트를 컴파일합니다."
  remarks: "<xref:System.Xml.Xsl.XslCompiledTransform>클래스에는 XSLT 1.0 구문을 지원 합니다.</xref:System.Xml.Xsl.XslCompiledTransform> XSLT 스타일 시트를 사용 해야 합니다는 `http://www.w3.org/1999/XSL/Transform` 네임 스페이스입니다.       이 메서드는 다음과 같은 동작이:- <xref:System.Xml.XmlUrlResolver>자격 증명을 스타일 시트의 URI를 해결 하 고 처리를 사용 하 여 사용자 없음 `xsl:import` 또는 `xsl:include` 요소.</xref:System.Xml.XmlUrlResolver>      -An <xref:System.Xml.XmlReader>기본 설정을 사용 하 여 스타일 시트를 로드 합니다.</xref:System.Xml.XmlReader> DTD 처리 <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader> 비활성화 됩니다. DTD 처리를 필요로 하는 경우 만들는 <xref:System.Xml.XmlReader>이 기능을 사용 하 고에 전달 된 <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A>메서드.</xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> </xref:System.Xml.XmlReader>      - `document()` 기능을 사용할 수 없습니다.      -포함 된 스크립트가 지원 되지 않습니다.       사용할 수는 <xref:System.Xml.Xsl.XslCompiledTransform.Load%28System.String%2CSystem.Xml.Xsl.XsltSettings%2CSystem.Xml.XmlResolver%29>지정 하는 오버 로드는 <xref:System.Xml.XmlResolver>필요한 인증 자격 증명을 사용 하거나 다른 XSLT 설정을 지정할 수 있습니다.</xref:System.Xml.XmlResolver> </xref:System.Xml.Xsl.XslCompiledTransform.Load%28System.String%2CSystem.Xml.Xsl.XsltSettings%2CSystem.Xml.XmlResolver%29>"
  example:
  - "The following example executes a transform and outputs to a file.  \n  \n [!code-vb[XslCompiledTransform.Transform#1](~/add/codesnippet/visualbasic/m-system.xml.xsl.xslcomp_2_1.vb)]\n [!code-cs[XslCompiledTransform.Transform#1](~/add/codesnippet/csharp/m-system.xml.xsl.xslcomp_2_1.cs)]"
  syntax:
    content: public void Load (string stylesheetUri);
    parameters:
    - id: stylesheetUri
      type: System.String
      description: "스타일 시트의 URI입니다."
  overload: System.Xml.Xsl.XslCompiledTransform.Load*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>stylesheetUri</code> value is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Xml.Xsl.XsltException
    commentId: T:System.Xml.Xsl.XsltException
    description: "스타일 시트에 오류가 있습니다."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "스타일 시트를 찾을 수 없습니다."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "<code> stylesheetUri </code> 파일 이름이 나 디렉터리를 찾을 수 없는 값에 포함 됩니다."
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "<code> stylesheetUri </code> 값을 확인할 수 없습니다.       -또는-요청을 처리 하는 동안 오류가 발생 했습니다."
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: "<code>stylesheetUri</code>유효한 URI가 아닙니다."
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "구문 분석 오류를 스타일 시트를 로드 했습니다."
  platform:
  - net462
- uid: System.Xml.Xsl.XslCompiledTransform.Load(System.Type)
  id: Load(System.Type)
  parent: System.Xml.Xsl.XslCompiledTransform
  langs:
  - csharp
  name: Load(Type)
  nameWithType: XslCompiledTransform.Load(Type)
  fullName: System.Xml.Xsl.XslCompiledTransform.Load(Type)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "사용 하 여 만든 컴파일된 스타일 시트를 로드는 [XSLT 컴파일러 (xsltc.exe)](~/add/includes/ajax-current-ext-md.md)합니다."
  remarks: "Xsltc.exe 도구는 스타일 시트를 컴파일 및 스타일 시트에서 어셈블리를 생성 하는 데 사용 됩니다. Load 메서드는 어셈블리에서 컴파일된 스타일 시트를 로드합니다.      > [!NOTE] > 응용 프로그램에서 XSLT 어셈블리를 참조로 포함 해야 합니다."
  example:
  - "The following example shows how to load a compiled style sheet from an XSLT assembly. The example assumes that the xsltc.exe tool was used to create an assembly named bookOrders.dll with a class named bookOrders.  \n  \n> [!NOTE]\n>  You have to reference the XSLT assembly when compiling the code. For example, `csc /r:system.dll;system.xml.dll;bookOrders.dll myCode.cs`.  \n  \n```  \n// Load the type of the class.  \nXslCompiledTransform xslt = new XslCompiledTransform();  \nxslt.Load(typeof(bookOrders));  \n```"
  syntax:
    content: public void Load (Type compiledStylesheet);
    parameters:
    - id: compiledStylesheet
      type: System.Type
      description: "컴파일된 스타일 시트를 포함 하는 클래스의 이름입니다.       일반적으로 스타일 시트의 이름입니다. 별도로 지정 하지 않으면 xsltc.exe 도구는 클래스 및 어셈블리 이름에 대 한 스타일 시트의 이름을 사용 합니다."
  overload: System.Xml.Xsl.XslCompiledTransform.Load*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XmlReader)
  id: Load(System.Xml.XmlReader)
  parent: System.Xml.Xsl.XslCompiledTransform
  langs:
  - csharp
  name: Load(XmlReader)
  nameWithType: XslCompiledTransform.Load(XmlReader)
  fullName: System.Xml.Xsl.XslCompiledTransform.Load(XmlReader)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "<xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader> 에 포함 된 스타일 시트를 컴파일합니다."
  remarks: "<xref:System.Xml.Xsl.XslCompiledTransform>클래스에는 XSLT 1.0 구문을 지원 합니다.</xref:System.Xml.Xsl.XslCompiledTransform> XSLT 스타일 시트를 사용 해야 합니다는 `http://www.w3.org/1999/XSL/Transform` 네임 스페이스입니다.       스타일 시트의 현재 노드로부터 로드는 <xref:System.Xml.XmlReader>모든 자식을 통해.</xref:System.Xml.XmlReader> 그러면 스타일 시트와 문서의 일부를 사용할 수 있습니다. Load 메서드가 완료 된 후의 <xref:System.Xml.XmlReader>스타일 시트의 끝 다음에 다음 노드에 배치 됩니다.</xref:System.Xml.XmlReader> 문서 끝에 도달 하면는 <xref:System.Xml.XmlReader>파일의 끝 (EOF)에 배치 됩니다.</xref:System.Xml.XmlReader>       이 메서드는 다음과 같은 동작이:- <xref:System.Xml.XmlUrlResolver>자격 증명을 처리를 사용 하 여 사용자 없음 `xsl:import` 또는 `xsl:include` 요소.</xref:System.Xml.XmlUrlResolver>      - `document()` 기능을 사용할 수 없습니다.      -포함 된 스크립트가 지원 되지 않습니다.       사용할 수는 <xref:System.Xml.Xsl.XslCompiledTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.Xsl.XsltSettings%2CSystem.Xml.XmlResolver%29>지정 하는 오버 로드는 <xref:System.Xml.XmlResolver>필요한 인증 자격 증명을 사용 하거나 다른 XSLT 설정을 지정할 수 있습니다.</xref:System.Xml.XmlResolver> </xref:System.Xml.Xsl.XslCompiledTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.Xsl.XsltSettings%2CSystem.Xml.XmlResolver%29>"
  example:
  - "The following example loads a style sheet contained in an <xref:System.Xml.XmlReader> object.  \n  \n [!code-vb[XslCompiledTransform.Load#5](~/add/codesnippet/visualbasic/m-system.xml.xsl.xslcomp_4_1.vb)]\n [!code-cs[XslCompiledTransform.Load#5](~/add/codesnippet/csharp/m-system.xml.xsl.xslcomp_4_1.cs)]"
  syntax:
    content: public void Load (System.Xml.XmlReader stylesheet);
    parameters:
    - id: stylesheet
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader>스타일 시트가 포함 된.</xref:System.Xml.XmlReader>"
  overload: System.Xml.Xsl.XslCompiledTransform.Load*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>stylesheet</code> value is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Xml.Xsl.XsltException
    commentId: T:System.Xml.Xsl.XsltException
    description: "스타일 시트에 오류가 있습니다."
  platform:
  - net462
- uid: System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XPath.IXPathNavigable)
  id: Load(System.Xml.XPath.IXPathNavigable)
  parent: System.Xml.Xsl.XslCompiledTransform
  langs:
  - csharp
  name: Load(IXPathNavigable)
  nameWithType: XslCompiledTransform.Load(IXPathNavigable)
  fullName: System.Xml.Xsl.XslCompiledTransform.Load(IXPathNavigable)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "에서는에 포함 된 스타일 시트는 <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> 개체입니다."
  remarks: "<xref:System.Xml.Xsl.XslCompiledTransform>클래스에는 XSLT 1.0 구문을 지원 합니다.</xref:System.Xml.Xsl.XslCompiledTransform> XSLT 스타일 시트를 사용 해야 합니다는 `http://www.w3.org/1999/XSL/Transform` 네임 스페이스입니다.       이 메서드는 다음과 같은 동작이:- <xref:System.Xml.XmlUrlResolver>자격 증명을 처리를 사용 하 여 사용자 없음 `xsl:import` 또는 `xsl:include` 요소.</xref:System.Xml.XmlUrlResolver>      - `document()` 기능을 사용할 수 없습니다.      -포함 된 스크립트가 지원 되지 않습니다.       사용할 수는 <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A>지정 하는 오버 로드는 <xref:System.Xml.XmlResolver>필요한 인증 자격 증명을 사용 하거나 다른 XSLT 설정을 지정할 수 있습니다.</xref:System.Xml.XmlResolver> </xref:System.Xml.Xsl.XslCompiledTransform.Load%2A>"
  example:
  - "The following example loads a style sheet contained in an <xref:System.Xml.XPath.XPathDocument> object.  \n  \n [!code-vb[XslCompiledTransform.Load#1](~/add/codesnippet/visualbasic/m-system.xml.xsl.xslcomp_3_1.vb)]\n [!code-cs[XslCompiledTransform.Load#1](~/add/codesnippet/csharp/m-system.xml.xsl.xslcomp_3_1.cs)]"
  syntax:
    content: public void Load (System.Xml.XPath.IXPathNavigable stylesheet);
    parameters:
    - id: stylesheet
      type: System.Xml.XPath.IXPathNavigable
      description: "구현 하는 개체는 <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> 인터페이스입니다. Microsoft.NET Framework의 일 수 있습니다는 <xref href=&quot;System.Xml.XmlNode&quot;> </xref> (일반적으로 <xref href=&quot;System.Xml.XmlDocument&quot;> </xref>), 또는 <xref href=&quot;System.Xml.XPath.XPathDocument&quot;> </xref> 스타일 시트가 들어 있는입니다."
  overload: System.Xml.Xsl.XslCompiledTransform.Load*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>stylesheet</code> value is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Xml.Xsl.XsltException
    commentId: T:System.Xml.Xsl.XsltException
    description: "스타일 시트에 오류가 있습니다."
  platform:
  - net462
- uid: System.Xml.Xsl.XslCompiledTransform.Load(System.Reflection.MethodInfo,System.Byte[],System.Type[])
  id: Load(System.Reflection.MethodInfo,System.Byte[],System.Type[])
  parent: System.Xml.Xsl.XslCompiledTransform
  langs:
  - csharp
  name: Load(MethodInfo,Byte[],Type[])
  nameWithType: XslCompiledTransform.Load(MethodInfo,Byte[],Type[])
  fullName: System.Xml.Xsl.XslCompiledTransform.Load(MethodInfo,Byte[],Type[])
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "메서드를 사용 하 여 컴파일된 스타일 시트에서 로드 된 <xref uid=&quot;langword_csharp_XSLTC.exe&quot; name=&quot;XSLTC.exe&quot; href=&quot;&quot;> </xref> 유틸리티입니다."
  remarks: "형태로 컴파일된 스타일 시트를 수용 하는이 메서드는 <xref:System.Reflection.MethodInfo>개체, 바이트 배열 및 배열 형식의.</xref:System.Reflection.MethodInfo> <xref:System.Reflection.Emit.DynamicMethod>컴파일된 스타일 시트 메서드 수를 허용 하도록 개체를 사용 될 때 삭제 된 <xref:System.Xml.Xsl.XslCompiledTransform>개체를 회수 합니다.</xref:System.Xml.Xsl.XslCompiledTransform></xref:System.Reflection.Emit.DynamicMethod>"
  example:
  - "The code example below uses the Load to load a compiled style sheet. The transformation reduces the value of the `Price` element by ten percent.  \n  \n [!code-cs[XsltDynamicMethodLoad#1](~/add/codesnippet/csharp/3f995c36-b532-490b-a825-_1.cs)]\n [!code-vb[XsltDynamicMethodLoad#1](~/add/codesnippet/visualbasic/3f995c36-b532-490b-a825-_1.vb)]  \n  \n> [!NOTE]\n>  The \"Transform\" assembly used in this example was built using the xsltc.exe utility. For detailed information on using this command line tool, see [How to: Perform an XSLT Transformation by Using an Assembly](~/add/includes/ajax-current-ext-md.md).  \n  \n The code example above uses the following transformation:  \n  \n```  \n<xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"  \n  xmlns:msxsl=\"urn:schemas-microsoft-com:xslt\"  \n  xmlns:user=\"urn:my-scripts\">  \n  <msxsl:script language=\"C#\" implements-prefix=\"user\">  \n    <![CDATA[  \n  public double modifyPrice(double price){  \n    price*=0.9;  \n    return price;  \n  }  \n  ]]>  \n  </msxsl:script>  \n  <xsl:template match=\"Root\">  \n    <Root xmlns=\"\">  \n      <Price><xsl:value-of select=\"user:modifyPrice(Price)\"/></Price>  \n    </Root>  \n  </xsl:template>  \n</xsl:stylesheet>  \n```"
  syntax:
    content: public void Load (System.Reflection.MethodInfo executeMethod, byte[] queryData, Type[] earlyBoundTypes);
    parameters:
    - id: executeMethod
      type: System.Reflection.MethodInfo
      description: "A <xref:System.Reflection.MethodInfo>나타내는 컴파일러에서 생성 된 개체 `execute` 컴파일된 스타일 시트의 메서드.</xref:System.Reflection.MethodInfo>"
    - id: queryData
      type: System.Byte[]
      description: "Serialize 된 데이터의 바이트 배열을 구조체에 `staticData` 에 의해 생성 되는 컴파일된 스타일 시트의 필드는 <xref:System.Xml.Xsl.XslCompiledTransform.CompileToType*>메서드.</xref:System.Xml.Xsl.XslCompiledTransform.CompileToType*>"
    - id: earlyBoundTypes
      type: System.Type[]
      description: "컴파일러에서 생성 된에 저장 된 형식의 배열을 `ebTypes` 컴파일된 스타일 시트의 필드입니다."
  overload: System.Xml.Xsl.XslCompiledTransform.Load*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Xsl.XslCompiledTransform.Load(System.String,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver)
  id: Load(System.String,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslCompiledTransform
  langs:
  - csharp
  name: Load(String,XsltSettings,XmlResolver)
  nameWithType: XslCompiledTransform.Load(String,XsltSettings,XmlResolver)
  fullName: System.Xml.Xsl.XslCompiledTransform.Load(String,XsltSettings,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "로드 하 고 URI로 지정 된 XSLT 스타일 시트를 컴파일합니다. <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> XSLT 해결 `import` 또는 `include` 요소와 XSLT 설정은 스타일 시트에 대 한 권한을 결정 합니다."
  remarks: "<xref:System.Xml.Xsl.XslCompiledTransform>클래스에는 XSLT 1.0 구문을 지원 합니다.</xref:System.Xml.Xsl.XslCompiledTransform> XSLT 스타일 시트를 사용 해야 합니다는 `http://www.w3.org/1999/XSL/Transform` 네임 스페이스입니다.       <xref:System.Xml.XmlReader>기본 설정을 사용 하 여 스타일 시트를 로드 합니다.</xref:System.Xml.XmlReader> DTD 처리 <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader> 비활성화 됩니다. DTD 처리를 필요로 하는 경우 만들는 <xref:System.Xml.XmlReader>이 기능을 사용 하 고에 전달 된 <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A>메서드.</xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> </xref:System.Xml.XmlReader>"
  example:
  - "The following example loads a style sheet that is stored on a network resource. An <xref:System.Xml.XmlSecureResolver> object specifies the credentials necessary to access the style sheet.  \n  \n [!code-vb[XslCompiledTransform.Load#2](~/add/codesnippet/visualbasic/7ddc7420-1fde-47dd-8fb0-_1.vb)]\n [!code-cs[XslCompiledTransform.Load#2](~/add/codesnippet/csharp/7ddc7420-1fde-47dd-8fb0-_1.cs)]"
  syntax:
    content: public void Load (string stylesheetUri, System.Xml.Xsl.XsltSettings settings, System.Xml.XmlResolver stylesheetResolver);
    parameters:
    - id: stylesheetUri
      type: System.String
      description: "스타일 시트의 URI입니다."
    - id: settings
      type: System.Xml.Xsl.XsltSettings
      description: "<xref href=&quot;System.Xml.Xsl.XsltSettings&quot;> </xref> 스타일 시트에 적용할 수 있습니다. 이것이 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, <xref:System.Xml.Xsl.XsltSettings.Default*>설정이 적용 됩니다.</xref:System.Xml.Xsl.XsltSettings.Default*>"
    - id: stylesheetResolver
      type: System.Xml.XmlResolver
      description: "<xref href=&quot;System.Xml.XmlResolver&quot;> </xref> 스타일 시트 URI 및 XSLT에서 참조 되는 모든 스타일 시트를 확인 하는 데 `import` 및 `include` 요소입니다."
  overload: System.Xml.Xsl.XslCompiledTransform.Load*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>stylesheetUri</code> or <code>stylesheetResolver</code> value is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Xml.Xsl.XsltException
    commentId: T:System.Xml.Xsl.XsltException
    description: "스타일 시트에 오류가 있습니다."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "스타일 시트를 찾을 수 없습니다."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "<code> stylesheetUri </code> 파일 이름이 나 디렉터리를 찾을 수 없는 값에 포함 됩니다."
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "<code> stylesheetUri </code> 값을 확인할 수 없습니다.       -또는-요청을 처리 하는 동안 오류가 발생 했습니다."
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: "<code>stylesheetUri</code>유효한 URI가 아닙니다."
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "구문 분석 오류를 스타일 시트를 로드 했습니다."
  platform:
  - net462
- uid: System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XmlReader,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver)
  id: Load(System.Xml.XmlReader,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslCompiledTransform
  langs:
  - csharp
  name: Load(XmlReader,XsltSettings,XmlResolver)
  nameWithType: XslCompiledTransform.Load(XmlReader,XsltSettings,XmlResolver)
  fullName: System.Xml.Xsl.XslCompiledTransform.Load(XmlReader,XsltSettings,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "<xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader> 에 포함 된 XSLT 스타일 시트를 컴파일합니다. <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> XSLT 해결 `import` 또는 `include` 요소와 XSLT 설정은 스타일 시트에 대 한 권한을 결정 합니다."
  remarks: "<xref:System.Xml.Xsl.XslCompiledTransform>클래스에는 XSLT 1.0 구문을 지원 합니다.</xref:System.Xml.Xsl.XslCompiledTransform> XSLT 스타일 시트를 사용 해야 합니다는 `http://www.w3.org/1999/XSL/Transform` 네임 스페이스입니다.       스타일 시트의 현재 노드로부터 로드는 <xref:System.Xml.XmlReader>모든 자식을 통해.</xref:System.Xml.XmlReader> 그러면 스타일 시트와 문서의 일부를 사용할 수 있습니다. 후의 <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A>메서드가 완료 되 면는 <xref:System.Xml.XmlReader>스타일 시트의 끝 다음에 다음 노드에 배치 됩니다.</xref:System.Xml.XmlReader> </xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> 문서 끝에 도달 하면는 <xref:System.Xml.XmlReader>파일의 끝 (EOF)에 배치 됩니다.</xref:System.Xml.XmlReader>"
  example:
  - "The following example loads a style sheet and enables support for XSLT scripting.  \n  \n [!code-vb[XslCompiledTransform.Load#3](~/add/codesnippet/visualbasic/ec76ab0a-8bf0-415f-87c6-_1.vb)]\n [!code-cs[XslCompiledTransform.Load#3](~/add/codesnippet/csharp/ec76ab0a-8bf0-415f-87c6-_1.cs)]"
  syntax:
    content: public void Load (System.Xml.XmlReader stylesheet, System.Xml.Xsl.XsltSettings settings, System.Xml.XmlResolver stylesheetResolver);
    parameters:
    - id: stylesheet
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader>스타일 시트가 포함 된.</xref:System.Xml.XmlReader>"
    - id: settings
      type: System.Xml.Xsl.XsltSettings
      description: "<xref href=&quot;System.Xml.Xsl.XsltSettings&quot;> </xref> 스타일 시트에 적용할 수 있습니다. 이것이 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, <xref:System.Xml.Xsl.XsltSettings.Default*>설정이 적용 됩니다.</xref:System.Xml.Xsl.XsltSettings.Default*>"
    - id: stylesheetResolver
      type: System.Xml.XmlResolver
      description: "<xref href=&quot;System.Xml.XmlResolver&quot;> </xref> XSLT에서 참조 되는 모든 스타일 시트를 확인 하는 데 `import` 및 `include` 요소입니다. 이것이 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, 외부 리소스가 확인 되지 않습니다."
  overload: System.Xml.Xsl.XslCompiledTransform.Load*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>stylesheet</code> value is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Xml.Xsl.XsltException
    commentId: T:System.Xml.Xsl.XsltException
    description: "스타일 시트에 오류가 있습니다."
  platform:
  - net462
- uid: System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver)
  id: Load(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslCompiledTransform
  langs:
  - csharp
  name: Load(IXPathNavigable,XsltSettings,XmlResolver)
  nameWithType: XslCompiledTransform.Load(IXPathNavigable,XsltSettings,XmlResolver)
  fullName: System.Xml.Xsl.XslCompiledTransform.Load(IXPathNavigable,XsltSettings,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "에 포함 된 XSLT 스타일 시트를 컴파일합니다는 <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref>합니다. <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> XSLT 해결 `import` 또는 `include` 요소와 XSLT 설정은 스타일 시트에 대 한 권한을 결정 합니다."
  remarks: "<xref:System.Xml.Xsl.XslCompiledTransform>클래스에는 XSLT 1.0 구문을 지원 합니다.</xref:System.Xml.Xsl.XslCompiledTransform> XSLT 스타일 시트를 사용 해야 합니다는 `http://www.w3.org/1999/XSL/Transform` 네임 스페이스입니다."
  example:
  - "The following example loads a style sheet. The <xref:System.Xml.XmlSecureResolver> object contains the credentials necessary to access any `import` or `include` elements found in the style sheet.  \n  \n [!code-vb[XslCompiledTransform.Load#4](~/add/codesnippet/visualbasic/8f1118cc-2b51-4727-9f95-_1.vb)]\n [!code-cs[XslCompiledTransform.Load#4](~/add/codesnippet/csharp/8f1118cc-2b51-4727-9f95-_1.cs)]"
  syntax:
    content: public void Load (System.Xml.XPath.IXPathNavigable stylesheet, System.Xml.Xsl.XsltSettings settings, System.Xml.XmlResolver stylesheetResolver);
    parameters:
    - id: stylesheet
      type: System.Xml.XPath.IXPathNavigable
      description: "구현 하는 개체는 <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> 인터페이스입니다. Microsoft.NET Framework의 일 수 있습니다는 <xref href=&quot;System.Xml.XmlNode&quot;> </xref> (일반적으로 <xref href=&quot;System.Xml.XmlDocument&quot;> </xref>), 또는 <xref href=&quot;System.Xml.XPath.XPathDocument&quot;> </xref> 스타일 시트가 들어 있는입니다."
    - id: settings
      type: System.Xml.Xsl.XsltSettings
      description: "<xref href=&quot;System.Xml.Xsl.XsltSettings&quot;> </xref> 스타일 시트에 적용할 수 있습니다. 이것이 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, <xref:System.Xml.Xsl.XsltSettings.Default*>설정이 적용 됩니다.</xref:System.Xml.Xsl.XsltSettings.Default*>"
    - id: stylesheetResolver
      type: System.Xml.XmlResolver
      description: "<xref href=&quot;System.Xml.XmlResolver&quot;> </xref> XSLT에서 참조 되는 모든 스타일 시트를 확인 하는 데 `import` 및 `include` 요소입니다. 이것이 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, 외부 리소스가 확인 되지 않습니다."
  overload: System.Xml.Xsl.XslCompiledTransform.Load*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>stylesheet</code> value is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Xml.Xsl.XsltException
    commentId: T:System.Xml.Xsl.XsltException
    description: "스타일 시트에 오류가 있습니다."
  platform:
  - net462
- uid: System.Xml.Xsl.XslCompiledTransform.OutputSettings
  id: OutputSettings
  parent: System.Xml.Xsl.XslCompiledTransform
  langs:
  - csharp
  name: OutputSettings
  nameWithType: XslCompiledTransform.OutputSettings
  fullName: System.Xml.Xsl.XslCompiledTransform.OutputSettings
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "가져옵니다는 <xref:System.Xml.XmlWriterSettings>에서 파생 된 개체에 출력 정보를 포함 하는 `xsl:output` 스타일 시트의.</xref:System.Xml.XmlWriterSettings>"
  remarks: "이 속성은 성공적으로 호출 하는 <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A>메서드.</xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> 파생 된 정보가 포함 된 `xsl:output` 컴파일된 스타일 시트의 요소입니다. 이 <xref:System.Xml.XmlWriterSettings>개체에 전달 될 수는 <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName>방법을 만들 수는 <xref:System.Xml.XmlWriter>개체를 출력 하려는.</xref:System.Xml.XmlWriter> </xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> </xref:System.Xml.XmlWriterSettings>"
  example:
  - "The following example shows how to use the OutputSettings property to create an <xref:System.Xml.XmlWriter> object that writes text to the console.  \n  \n [!code-vb[XslCompiledTransform.OutputSettings#1](~/add/codesnippet/visualbasic/p-system.xml.xsl.xslcomp_1_1.vb)]\n [!code-cs[XslCompiledTransform.OutputSettings#1](~/add/codesnippet/csharp/p-system.xml.xsl.xslcomp_1_1.cs)]  \n  \n The example uses the `books.xml` and `outputConsole.xsl` files as input.  \n  \n `books.xml`  \n  \n [!code-xml[XslCompiledTransform.OutputSettings#2](~/add/codesnippet/xml/p-system.xml.xsl.xslcomp_1_2.xml)]  \n  \n `outputConsole.xsl`  \n  \n [!code-xml[XslCompiledTransform.OutputSettings#3](~/add/codesnippet/xml/p-system.xml.xsl.xslcomp_1_3.xsl)]"
  syntax:
    content: public System.Xml.XmlWriterSettings OutputSettings { get; }
    return:
      type: System.Xml.XmlWriterSettings
      description: "읽기 전용 <xref:System.Xml.XmlWriterSettings>에서 파생 된 개체에 출력 정보를 포함 하는 `xsl:output` 스타일 시트의.</xref:System.Xml.XmlWriterSettings> 이 값 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Xml.Xsl.XslCompiledTransform.OutputSettings*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Xsl.XslCompiledTransform.TemporaryFiles
  id: TemporaryFiles
  parent: System.Xml.Xsl.XslCompiledTransform
  langs:
  - csharp
  name: TemporaryFiles
  nameWithType: XslCompiledTransform.TemporaryFiles
  fullName: System.Xml.Xsl.XslCompiledTransform.TemporaryFiles
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "가져옵니다는 <xref href=&quot;System.CodeDom.Compiler.TempFileCollection&quot;> </xref> 를 성공적으로 호출 후 디스크에 생성 된 임시 파일을 포함 하는 <xref:System.Xml.Xsl.XslCompiledTransform.Load*>메서드.</xref:System.Xml.Xsl.XslCompiledTransform.Load*>"
  remarks: "XSLT 동안 생성 된 파일을 식별 하는이 속성을 처리 합니다. 파일이 추가 됩니다 (% TEMP % 환경 변수로 지정) Temp 디렉터리에서 삭제할 수 XSLT 처리가 완료 된 후 이러한 파일입니다."
  example:
  - "The following example writes the names of temporary files to the console.  \n  \n> [!NOTE]\n>  Temporary files are created only when loading style sheets with \\<msxsl:script> blocks.  \n  \n [!code-vb[XslCompiledTransform.Transform#8](~/add/codesnippet/visualbasic/p-system.xml.xsl.xslcomp_0_1.vb)]\n [!code-cs[XslCompiledTransform.Transform#8](~/add/codesnippet/csharp/p-system.xml.xsl.xslcomp_0_1.cs)]"
  syntax:
    content: public System.CodeDom.Compiler.TempFileCollection TemporaryFiles { get; }
    return:
      type: System.CodeDom.Compiler.TempFileCollection
      description: "<xref href=&quot;System.CodeDom.Compiler.TempFileCollection&quot;> </xref> 디스크에 생성 된 임시 파일이 포함 된 합니다. 이 값은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 경우는 <xref:System.Xml.Xsl.XslCompiledTransform.Load*>메서드가 성공적으로 호출 되지 않은 디버깅을 사용할 수 있는 경우 또는.</xref:System.Xml.Xsl.XslCompiledTransform.Load*>"
  overload: System.Xml.Xsl.XslCompiledTransform.TemporaryFiles*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.String)
  id: Transform(System.String,System.String)
  parent: System.Xml.Xsl.XslCompiledTransform
  langs:
  - csharp
  name: Transform(String,String)
  nameWithType: XslCompiledTransform.Transform(String,String)
  fullName: System.Xml.Xsl.XslCompiledTransform.Transform(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "URI로 지정 된 입력된 문서를 사용 하 여 변환을 실행 하 고 파일에 대 한 결과 출력 합니다."
  remarks: "이 메서드는 기본 <xref:System.Xml.XmlUrlResolver>입력 및 출력 문서를 해결 하려면 사용자 자격 증명 없이.</xref:System.Xml.XmlUrlResolver> 사용 하는 오버 로드를 사용 하 여 인증을 요구 하는 네트워크 리소스에 이러한 리소스가 있으면는 <xref:System.Xml.XmlResolver>인수 중 하나로 지정 하 고는 <xref:System.Xml.XmlResolver>에 필요한 자격 증명.</xref:System.Xml.XmlResolver> </xref:System.Xml.XmlResolver>       <xref:System.Xml.XmlReader>기본 설정을 사용 하 여 입력된 문서를 로드 합니다.</xref:System.Xml.XmlReader> DTD 처리 <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader> 비활성화 됩니다. DTD 처리를 필요로 하는 경우 만들는 <xref:System.Xml.XmlReader>이 기능을 사용 하 고에 전달 된 <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>메서드.</xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> </xref:System.Xml.XmlReader>"
  example:
  - "The following example executes a transform and outputs to a file.  \n  \n [!code-vb[XslCompiledTransform.Transform#1](~/add/codesnippet/visualbasic/m-system.xml.xsl.xslcomp_0_1.vb)]\n [!code-cs[XslCompiledTransform.Transform#1](~/add/codesnippet/csharp/m-system.xml.xsl.xslcomp_0_1.cs)]  \n  \n The sample uses the following two input files:  \n  \n `books.xml`  \n  \n [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/add/codesnippet/xml/m-system.xml.xsl.xslcomp_0_2.xml)]  \n  \n `output.xsl`  \n  \n [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/add/codesnippet/xml/m-system.xml.xsl.xslcomp_0_3.xsl)]"
  syntax:
    content: public void Transform (string inputUri, string resultsFile);
    parameters:
    - id: inputUri
      type: System.String
      description: "입력 문서의 URI입니다."
    - id: resultsFile
      type: System.String
      description: "출력 파일의 URI입니다."
  overload: System.Xml.Xsl.XslCompiledTransform.Transform*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>inputUri</code> or <code>resultsFile</code> value is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Xml.Xsl.XsltException
    commentId: T:System.Xml.Xsl.XsltException
    description: "XSLT 변환을 실행 하는 동안 오류가 발생 했습니다."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "입력된 문서를 찾을 수 없습니다."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "<code> inputUri </code> 또는 <code> resultsFile </code> 값에는 파일 이름이 포함 됩니다. 또는 디렉터리를 찾을 수 없습니다."
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "<code> inputUri </code> 또는 <code> resultsFile </code> 값을 확인할 수 없습니다.       -또는-요청을 처리 하는 동안 오류가 발생 했습니다."
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: "<code>inputUri</code>또는 <code>resultsFile</code> 유효한 URI가 아닙니다."
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "입력된 문서를 로드 하는 동안는 구문 분석 오류가 발생 했습니다."
  platform:
  - net462
- uid: System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)
  id: Transform(System.String,System.Xml.XmlWriter)
  parent: System.Xml.Xsl.XslCompiledTransform
  langs:
  - csharp
  name: Transform(String,XmlWriter)
  nameWithType: XslCompiledTransform.Transform(String,XmlWriter)
  fullName: System.Xml.Xsl.XslCompiledTransform.Transform(String,XmlWriter)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "URI로 지정 된 입력된 문서를 사용 하 여 변환을 실행 하 고 결과 <xref:System.Xml.XmlWriter>.</xref:System.Xml.XmlWriter> 를 출력 합니다."
  remarks: "이 메서드는 기본 <xref:System.Xml.XmlUrlResolver>입력된 문서와 XSLT의 모든 인스턴스를 해결 하려면 사용자 자격 증명 없이 `document()` 함수 스타일 시트에서 찾을 수 없습니다.</xref:System.Xml.XmlUrlResolver> 사용 하는 오버 로드를 사용 하 여 인증을 요구 하는 네트워크 리소스에 이러한 리소스가 있으면는 <xref:System.Xml.XmlResolver>인수 중 하나로 지정 하 고는 <xref:System.Xml.XmlResolver>에 필요한 자격 증명.</xref:System.Xml.XmlResolver> </xref:System.Xml.XmlResolver>       <xref:System.Xml.XmlReader>기본 설정을 사용 하 여 입력된 문서를 로드 합니다.</xref:System.Xml.XmlReader> DTD 처리 <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader> 비활성화 됩니다. DTD 처리를 필요로 하는 경우 만들는 <xref:System.Xml.XmlReader>이 기능을 사용 하 고에 전달 된 <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>메서드.</xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> </xref:System.Xml.XmlReader>       이 방법은 지원 하지 않습니다는 `xsl:strip-space` 요소입니다. 컴파일된 스타일 시트에 포함 된 경우는 `xsl:strip-space` 사용 해야 요소는 <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>오버 로드를 <xref:System.Xml.XmlReader>입력 인수로.</xref:System.Xml.XmlReader> </xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>"
  example:
  - "The following example executes an XSLT transformation and outputs to an <xref:System.Xml.XmlWriter> object.  \n  \n [!code-vb[XslCompiledTransform.Transform#2](~/add/codesnippet/visualbasic/1a837310-9fde-4a29-a77e-_1.vb)]\n [!code-cs[XslCompiledTransform.Transform#2](~/add/codesnippet/csharp/1a837310-9fde-4a29-a77e-_1.cs)]"
  syntax:
    content: public void Transform (string inputUri, System.Xml.XmlWriter results);
    parameters:
    - id: inputUri
      type: System.String
      description: "입력 문서의 URI입니다."
    - id: results
      type: System.Xml.XmlWriter
      description: "<xref:System.Xml.XmlWriter>출력할 대상.</xref:System.Xml.XmlWriter>       스타일 시트에 포함 된 경우는 `xsl:output` 요소를 만들어야 합니다는 <xref:System.Xml.XmlWriter>를 사용 하는 <xref:System.Xml.XmlWriterSettings>에서 반환 된 개체는 <xref:System.Xml.Xsl.XslCompiledTransform.OutputSettings*>속성.</xref:System.Xml.Xsl.XslCompiledTransform.OutputSettings*> </xref:System.Xml.XmlWriterSettings> </xref:System.Xml.XmlWriter> 이렇게 하면는 <xref:System.Xml.XmlWriter>올바른 출력 설정을 포함 합니다.</xref:System.Xml.XmlWriter>"
  overload: System.Xml.Xsl.XslCompiledTransform.Transform*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>inputUri</code> or <code>results</code> value is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Xml.Xsl.XsltException
    commentId: T:System.Xml.Xsl.XsltException
    description: "XSLT 변환을 실행 하는 동안 오류가 발생 했습니다."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "<code> inputUri </code> 값에는 파일 이름이 포함 됩니다. 또는 디렉터리를 찾을 수 없습니다."
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "<code> inputUri </code> 값을 확인할 수 없습니다.       -또는-요청을 처리 하는 동안 오류가 발생 했습니다."
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: "<code>inputUri</code>유효한 URI가 아닙니다."
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "입력된 문서를 로드 하는 동안는 구문 분석 오류가 발생 했습니다."
  platform:
  - net462
- uid: System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.XmlWriter)
  id: Transform(System.Xml.XmlReader,System.Xml.XmlWriter)
  parent: System.Xml.Xsl.XslCompiledTransform
  langs:
  - csharp
  name: Transform(XmlReader,XmlWriter)
  nameWithType: XslCompiledTransform.Transform(XmlReader,XmlWriter)
  fullName: System.Xml.Xsl.XslCompiledTransform.Transform(XmlReader,XmlWriter)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "<xref:System.Xml.XmlReader>개체 및 <xref:System.Xml.XmlWriter>.</xref:System.Xml.XmlWriter> 에 대 한 결과 출력</xref:System.Xml.XmlReader> 하 여 지정 된 입력된 문서를 사용 하 여 변환을 실행합니다"
  remarks: "하는 경우 XSLT `document()` 함수를 사용 하는 자동적으로 해결 되므로 사용 하는 <xref:System.Xml.XmlUrlResolver>사용자 자격 증명 없이.</xref:System.Xml.XmlUrlResolver> 외부 리소스를 인증이 필요한 네트워크 리소스에 있는 경우는 오버 로드를 사용 하 여는 <xref:System.Xml.XmlResolver>인수 중 하나로 지정 하 고는 <xref:System.Xml.XmlResolver>에 필요한 자격 증명.</xref:System.Xml.XmlResolver> </xref:System.Xml.XmlResolver>"
  example:
  - "The following example transforms the first book in the books.xml file.  \n  \n [!code-vb[XslCompiledTransform.Transform#7](~/add/codesnippet/visualbasic/e9e9dd2b-fa70-4f3f-9037-_1.vb)]\n [!code-cs[XslCompiledTransform.Transform#7](~/add/codesnippet/csharp/e9e9dd2b-fa70-4f3f-9037-_1.cs)]"
  syntax:
    content: public void Transform (System.Xml.XmlReader input, System.Xml.XmlWriter results);
    parameters:
    - id: input
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader>입력된 문서를 포함 합니다.</xref:System.Xml.XmlReader>"
    - id: results
      type: System.Xml.XmlWriter
      description: "<xref:System.Xml.XmlWriter>출력할 대상.</xref:System.Xml.XmlWriter>       스타일 시트에 포함 된 경우는 `xsl:output` 요소를 만들어야 합니다는 <xref:System.Xml.XmlWriter>를 사용 하는 <xref:System.Xml.XmlWriterSettings>에서 반환 된 개체는 <xref:System.Xml.Xsl.XslCompiledTransform.OutputSettings*>속성.</xref:System.Xml.Xsl.XslCompiledTransform.OutputSettings*> </xref:System.Xml.XmlWriterSettings> </xref:System.Xml.XmlWriter> 이렇게 하면는 <xref:System.Xml.XmlWriter>올바른 출력 설정을 포함 합니다.</xref:System.Xml.XmlWriter>"
  overload: System.Xml.Xsl.XslCompiledTransform.Transform*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>input</code> or <code>results</code> value is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Xml.Xsl.XsltException
    commentId: T:System.Xml.Xsl.XsltException
    description: "XSLT 변환을 실행 하는 동안 오류가 발생 했습니다."
  platform:
  - net462
- uid: System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.XmlWriter)
  id: Transform(System.Xml.XPath.IXPathNavigable,System.Xml.XmlWriter)
  parent: System.Xml.Xsl.XslCompiledTransform
  langs:
  - csharp
  name: Transform(IXPathNavigable,XmlWriter)
  nameWithType: XslCompiledTransform.Transform(IXPathNavigable,XmlWriter)
  fullName: System.Xml.Xsl.XslCompiledTransform.Transform(IXPathNavigable,XmlWriter)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "로 지정 된 입력된 문서를 사용 하 여 변환을 실행는 <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> 개체를 결과 <xref:System.Xml.XmlWriter>.</xref:System.Xml.XmlWriter> 를 출력 합니다"
  remarks: "하는 경우 XSLT `document()` 함수를 사용 하는 자동적으로 해결 되므로 사용 하는 <xref:System.Xml.XmlUrlResolver>사용자 자격 증명 없이.</xref:System.Xml.XmlUrlResolver> 외부 리소스를 인증이 필요한 네트워크 리소스에 있는 경우는 오버 로드를 사용 하 여는 <xref:System.Xml.XmlResolver>인수 중 하나로 지정 하 고는 <xref:System.Xml.XmlResolver>에 필요한 자격 증명.</xref:System.Xml.XmlResolver> </xref:System.Xml.XmlResolver>       이 방법은 지원 하지 않습니다는 `xsl:strip-space` 요소입니다. 컴파일된 스타일 시트에 포함 된 경우는 `xsl:strip-space` 사용 해야 요소는 <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>오버 로드를 <xref:System.Xml.XmlReader>입력 인수로.</xref:System.Xml.XmlReader> </xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>       <xref:System.Xml.XPath.IXPathNavigable>인터페이스에서 구현 되는 <xref:System.Xml.XmlNode>및 <xref:System.Xml.XPath.XPathDocument>클래스.</xref:System.Xml.XPath.XPathDocument> </xref:System.Xml.XmlNode> </xref:System.Xml.XPath.IXPathNavigable> 이러한 클래스는 XML 데이터의 메모리에 캐시를 나타냅니다.      - <xref:System.Xml.XmlNode>클래스에는 W3C DOM 문서 개체 모델 ()를 기반으로 하며 편집 기능이.</xref:System.Xml.XmlNode>      - <xref:System.Xml.XPath.XPathDocument>클래스는 XPath 데이터 모델을 기반으로 하는 읽기 전용 데이터 저장소.</xref:System.Xml.XPath.XPathDocument> <xref:System.Xml.XPath.XPathDocument>XSLT에 대 한 권장 되는 클래스를 처리 합니다.</xref:System.Xml.XPath.XPathDocument> <xref:System.Xml.XmlNode>클래스</xref:System.Xml.XmlNode> 에 비해 빠른 성능을 제공합니다       변형은 문서에 전체적으로 적용 됩니다. 즉, 문서 루트 노드 이외의 노드에 전달 해도 변형 프로세스에서 로드 된 문서의 모든 노드에 액세스할 합니다. 노드 조각을 변형 하려면 노드 조각만 포함 하는 개체를 만들고 Transform 메서드를 해당 개체를 전달 합니다. 자세한 내용은 참조 [하는 방법: 노드 조각을 변형](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following example executes an XSLT transformation and outputs to an <xref:System.Xml.XmlWriter> object.  \n  \n [!code-vb[XslCompiledTransform.Transform#5](~/add/codesnippet/visualbasic/58ce38a1-de5d-405a-b8cb-_1.vb)]\n [!code-cs[XslCompiledTransform.Transform#5](~/add/codesnippet/csharp/58ce38a1-de5d-405a-b8cb-_1.cs)]"
  syntax:
    content: public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.XmlWriter results);
    parameters:
    - id: input
      type: System.Xml.XPath.IXPathNavigable
      description: "구현 하는 개체는 <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> 인터페이스입니다. Microsoft.NET Framework의 일 수 있습니다는 <xref href=&quot;System.Xml.XmlNode&quot;> </xref> (일반적으로 <xref href=&quot;System.Xml.XmlDocument&quot;> </xref>), 또는 <xref href=&quot;System.Xml.XPath.XPathDocument&quot;> </xref> 변환 데이터가 들어 있는입니다."
    - id: results
      type: System.Xml.XmlWriter
      description: "<xref:System.Xml.XmlWriter>출력할 대상.</xref:System.Xml.XmlWriter>       스타일 시트에 포함 된 경우는 `xsl:output` 요소를 만들어야 합니다는 <xref:System.Xml.XmlWriter>를 사용 하는 <xref:System.Xml.XmlWriterSettings>에서 반환 된 개체는 <xref:System.Xml.Xsl.XslCompiledTransform.OutputSettings*>속성.</xref:System.Xml.Xsl.XslCompiledTransform.OutputSettings*> </xref:System.Xml.XmlWriterSettings> </xref:System.Xml.XmlWriter> 이렇게 하면는 <xref:System.Xml.XmlWriter>올바른 출력 설정을 포함 합니다.</xref:System.Xml.XmlWriter>"
  overload: System.Xml.Xsl.XslCompiledTransform.Transform*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>input</code> or <code>results</code> value is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Xml.Xsl.XsltException
    commentId: T:System.Xml.Xsl.XsltException
    description: "XSLT 변환을 실행 하는 동안 오류가 발생 했습니다."
  platform:
  - net462
- uid: System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)
  id: Transform(System.String,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)
  parent: System.Xml.Xsl.XslCompiledTransform
  langs:
  - csharp
  name: Transform(String,XsltArgumentList,Stream)
  nameWithType: XslCompiledTransform.Transform(String,XsltArgumentList,Stream)
  fullName: System.Xml.Xsl.XslCompiledTransform.Transform(String,XsltArgumentList,Stream)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "URI로 지정 된 입력된 문서를 사용 하 여 변환을 실행 하 고는 스트림에 결과를 출력 합니다. <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> 추가적인 런타임 인수를 제공 합니다."
  remarks: "이 메서드는 기본 <xref:System.Xml.XmlUrlResolver>입력된 문서와 XSLT의 모든 인스턴스를 해결 하려면 사용자 자격 증명 없이 `document()` 함수 스타일 시트에서 찾을 수 없습니다.</xref:System.Xml.XmlUrlResolver> 사용 하는 오버 로드를 사용 하 여 인증을 요구 하는 네트워크 리소스에 이러한 리소스가 있으면는 <xref:System.Xml.XmlResolver>인수 중 하나로 지정 하 고는 <xref:System.Xml.XmlResolver>에 필요한 자격 증명.</xref:System.Xml.XmlResolver> </xref:System.Xml.XmlResolver>       <xref:System.Xml.XmlReader>기본 설정을 사용 하 여 입력된 문서를 로드 합니다.</xref:System.Xml.XmlReader> DTD 처리 <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader> 비활성화 됩니다. DTD 처리를 필요로 하는 경우 만들는 <xref:System.Xml.XmlReader>이 기능을 사용 하 고에 전달 된 <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>메서드.</xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> </xref:System.Xml.XmlReader>"
  syntax:
    content: public void Transform (string inputUri, System.Xml.Xsl.XsltArgumentList arguments, System.IO.Stream results);
    parameters:
    - id: inputUri
      type: System.String
      description: "입력 문서의 URI입니다."
    - id: arguments
      type: System.Xml.Xsl.XsltArgumentList
      description: "<xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> 변환의 입력으로 사용 되는 네임 스페이스로 한정 인수를 포함 하 합니다. 이 값 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
    - id: results
      type: System.IO.Stream
      description: "출력 스트림입니다."
  overload: System.Xml.Xsl.XslCompiledTransform.Transform*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>inputUri</code> or <code>results</code> value is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Xml.Xsl.XsltException
    commentId: T:System.Xml.Xsl.XsltException
    description: "XSLT 변환을 실행 하는 동안 오류가 발생 했습니다."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "<code> inputUri </code> 값에는 파일 이름이 포함 됩니다. 또는 디렉터리를 찾을 수 없습니다."
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "<code> inputUri </code> 값을 확인할 수 없습니다.       -또는-요청을 처리 하는 동안 오류가 발생 했습니다."
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: "<code>inputUri</code>유효한 URI가 아닙니다."
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "입력된 문서를 로드 하는 동안는 구문 분석 오류가 발생 했습니다."
  platform:
  - net462
- uid: System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)
  id: Transform(System.String,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)
  parent: System.Xml.Xsl.XslCompiledTransform
  langs:
  - csharp
  name: Transform(String,XsltArgumentList,TextWriter)
  nameWithType: XslCompiledTransform.Transform(String,XsltArgumentList,TextWriter)
  fullName: System.Xml.Xsl.XslCompiledTransform.Transform(String,XsltArgumentList,TextWriter)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "URI로 지정 된 입력된 문서를 사용 하 여 변환을 실행 하 고 결과 <xref:System.IO.TextWriter>.</xref:System.IO.TextWriter> 를 출력 합니다."
  remarks: "이 메서드는 기본 <xref:System.Xml.XmlUrlResolver>입력된 문서와 XSLT의 모든 인스턴스를 해결 하려면 사용자 자격 증명 없이 `document()` 함수 스타일 시트에서 찾을 수 없습니다.</xref:System.Xml.XmlUrlResolver> 사용 하는 오버 로드를 사용 하 여 인증을 요구 하는 네트워크 리소스에 이러한 리소스가 있으면는 <xref:System.Xml.XmlResolver>인수 중 하나로 지정 하 고는 <xref:System.Xml.XmlResolver>에 필요한 자격 증명.</xref:System.Xml.XmlResolver> </xref:System.Xml.XmlResolver>       <xref:System.Xml.XmlReader>기본 설정을 사용 하 여 입력된 문서를 로드 합니다.</xref:System.Xml.XmlReader> DTD 처리 <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader> 비활성화 됩니다. DTD 처리를 필요로 하는 경우 만들는 <xref:System.Xml.XmlReader>이 기능을 사용 하 고에 전달 된 <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>메서드.</xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> </xref:System.Xml.XmlReader>"
  example:
  - "The following example executes an XSLT transformation and outputs a string.  \n  \n [!code-vb[XslCompiledTransform.Transform#3](~/add/codesnippet/visualbasic/50b87a05-12d4-4637-9d7e-_1.vb)]\n [!code-cs[XslCompiledTransform.Transform#3](~/add/codesnippet/csharp/50b87a05-12d4-4637-9d7e-_1.cs)]"
  syntax:
    content: public void Transform (string inputUri, System.Xml.Xsl.XsltArgumentList arguments, System.IO.TextWriter results);
    parameters:
    - id: inputUri
      type: System.String
      description: "입력 문서의 URI입니다."
    - id: arguments
      type: System.Xml.Xsl.XsltArgumentList
      description: "<xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> 변환의 입력으로 사용 되는 네임 스페이스로 한정 인수를 포함 하 합니다. 이 값 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
    - id: results
      type: System.IO.TextWriter
      description: "<xref:System.IO.TextWriter>출력할 대상.</xref:System.IO.TextWriter>"
  overload: System.Xml.Xsl.XslCompiledTransform.Transform*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>inputUri</code> or <code>results</code> value is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Xml.Xsl.XsltException
    commentId: T:System.Xml.Xsl.XsltException
    description: "XSLT 변환을 실행 하는 동안 오류가 발생 했습니다."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "<code> inputUri </code> 값에는 파일 이름이 포함 됩니다. 또는 디렉터리를 찾을 수 없습니다."
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "<code> inputUri </code> 값을 확인할 수 없습니다.       -또는-요청을 처리 하는 동안 오류가 발생 했습니다."
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: "<code>inputUri</code>유효한 URI가 아닙니다."
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "입력된 문서를 로드 하는 동안는 구문 분석 오류가 발생 했습니다."
  platform:
  - net462
- uid: System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)
  id: Transform(System.String,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)
  parent: System.Xml.Xsl.XslCompiledTransform
  langs:
  - csharp
  name: Transform(String,XsltArgumentList,XmlWriter)
  nameWithType: XslCompiledTransform.Transform(String,XsltArgumentList,XmlWriter)
  fullName: System.Xml.Xsl.XslCompiledTransform.Transform(String,XsltArgumentList,XmlWriter)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "URI로 지정 된 입력된 문서를 사용 하 여 변환을 실행 하 고 결과 <xref:System.Xml.XmlWriter>.</xref:System.Xml.XmlWriter> 를 출력 합니다. <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> 추가적인 런타임 인수를 제공 합니다."
  remarks: "이 메서드는 기본 <xref:System.Xml.XmlUrlResolver>입력된 문서와 XSLT의 모든 인스턴스를 해결 하려면 사용자 자격 증명 없이 `document()` 함수 스타일 시트에서 찾을 수 없습니다.</xref:System.Xml.XmlUrlResolver> 사용 하는 오버 로드를 사용 하 여 인증을 요구 하는 네트워크 리소스에 이러한 리소스가 있으면는 <xref:System.Xml.XmlResolver>인수 중 하나로 지정 하 고는 <xref:System.Xml.XmlResolver>에 필요한 자격 증명.</xref:System.Xml.XmlResolver> </xref:System.Xml.XmlResolver>       <xref:System.Xml.XmlReader>기본 설정을 사용 하 여 입력된 문서를 로드 합니다.</xref:System.Xml.XmlReader> DTD 처리 <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader> 비활성화 됩니다. DTD 처리를 필요로 하는 경우 만들는 <xref:System.Xml.XmlReader>이 기능을 사용 하 고에 전달 된 <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>메서드.</xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> </xref:System.Xml.XmlReader>"
  example:
  - "The following example uses an <xref:System.Xml.Xsl.XsltArgumentList> object to create a parameter representing the current date and time.  \n  \n [!code-vb[XsltArgumentList.AddParam#1](~/add/codesnippet/visualbasic/614c84d5-4852-4d05-913d-_1.vb)]\n [!code-cs[XsltArgumentList.AddParam#1](~/add/codesnippet/csharp/614c84d5-4852-4d05-913d-_1.cs)]  \n  \n The example uses the following two data files as input.  \n  \n order.xml  \n  \n [!code-xml[XsltArgumentList.AddParam#2](~/add/codesnippet/xml/614c84d5-4852-4d05-913d-_2.xml)]  \n  \n order.xsl  \n  \n [!code-xml[XsltArgumentList.AddParam#3](~/add/codesnippet/xml/614c84d5-4852-4d05-913d-_3.xsl)]"
  syntax:
    content: public void Transform (string inputUri, System.Xml.Xsl.XsltArgumentList arguments, System.Xml.XmlWriter results);
    parameters:
    - id: inputUri
      type: System.String
      description: "입력 문서의 URI입니다."
    - id: arguments
      type: System.Xml.Xsl.XsltArgumentList
      description: "<xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> 변환의 입력으로 사용 되는 네임 스페이스로 한정 인수를 포함 하 합니다. 이 값 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
    - id: results
      type: System.Xml.XmlWriter
      description: "<xref:System.Xml.XmlWriter>출력할 대상.</xref:System.Xml.XmlWriter>       스타일 시트에 포함 된 경우는 `xsl:output` 요소를 만들어야 합니다는 <xref:System.Xml.XmlWriter>를 사용 하는 <xref:System.Xml.XmlWriterSettings>에서 반환 된 개체는 <xref:System.Xml.Xsl.XslCompiledTransform.OutputSettings*>속성.</xref:System.Xml.Xsl.XslCompiledTransform.OutputSettings*> </xref:System.Xml.XmlWriterSettings> </xref:System.Xml.XmlWriter> 이렇게 하면는 <xref:System.Xml.XmlWriter>올바른 출력 설정을 포함 합니다.</xref:System.Xml.XmlWriter>"
  overload: System.Xml.Xsl.XslCompiledTransform.Transform*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>inputUri</code> or <code>results</code> value is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Xml.Xsl.XsltException
    commentId: T:System.Xml.Xsl.XsltException
    description: "XSLT 변환을 실행 하는 동안 오류가 발생 했습니다."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "<code> inputtUri </code> 값에는 파일 이름이 포함 됩니다. 또는 디렉터리를 찾을 수 없습니다."
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "<code> inputUri </code> 값을 확인할 수 없습니다.       -또는-요청을 처리 하는 동안 오류가 발생 했습니다."
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: "<code>inputUri</code>유효한 URI가 아닙니다."
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "입력된 문서를 로드 하는 동안는 구문 분석 오류가 발생 했습니다."
  platform:
  - net462
- uid: System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)
  id: Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)
  parent: System.Xml.Xsl.XslCompiledTransform
  langs:
  - csharp
  name: Transform(XmlReader,XsltArgumentList,Stream)
  nameWithType: XslCompiledTransform.Transform(XmlReader,XsltArgumentList,Stream)
  fullName: System.Xml.Xsl.XslCompiledTransform.Transform(XmlReader,XsltArgumentList,Stream)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "로 지정 된 입력된 문서를 사용 하 여 변환을 실행는 <xref:System.Xml.XmlReader>개체 및 데이터를 문자열로 결과 출력 합니다.</xref:System.Xml.XmlReader> <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> 추가적인 런타임 인수를 제공 합니다."
  remarks: "스타일 시트 XSLT를 포함 하는 경우 `document()` 는 사용 하 여 해결 된 함수는 <xref:System.Xml.XmlUrlResolver>사용자 자격 증명 없이.</xref:System.Xml.XmlUrlResolver> 외부 리소스를 인증이 필요한 네트워크 리소스에 있는 경우는 오버 로드를 사용 하 여는 <xref:System.Xml.XmlResolver>인수 중 하나로 지정 하 고는 <xref:System.Xml.XmlResolver>에 필요한 자격 증명.</xref:System.Xml.XmlResolver> </xref:System.Xml.XmlResolver>"
  syntax:
    content: public void Transform (System.Xml.XmlReader input, System.Xml.Xsl.XsltArgumentList arguments, System.IO.Stream results);
    parameters:
    - id: input
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader>입력된 문서를 포함 합니다.</xref:System.Xml.XmlReader>"
    - id: arguments
      type: System.Xml.Xsl.XsltArgumentList
      description: "<xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> 변환의 입력으로 사용 되는 네임 스페이스로 한정 인수를 포함 하 합니다. 이 값 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
    - id: results
      type: System.IO.Stream
      description: "출력 스트림입니다."
  overload: System.Xml.Xsl.XslCompiledTransform.Transform*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>input</code> or <code>results</code> value is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Xml.Xsl.XsltException
    commentId: T:System.Xml.Xsl.XsltException
    description: "XSLT 변환을 실행 하는 동안 오류가 발생 했습니다."
  platform:
  - net462
- uid: System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)
  id: Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)
  parent: System.Xml.Xsl.XslCompiledTransform
  langs:
  - csharp
  name: Transform(XmlReader,XsltArgumentList,TextWriter)
  nameWithType: XslCompiledTransform.Transform(XmlReader,XsltArgumentList,TextWriter)
  fullName: System.Xml.Xsl.XslCompiledTransform.Transform(XmlReader,XsltArgumentList,TextWriter)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "<xref:System.Xml.XmlReader>개체를 결과 <xref:System.IO.TextWriter>.</xref:System.IO.TextWriter> 를 출력</xref:System.Xml.XmlReader> 하 여 지정 된 입력된 문서를 사용 하 여 변환을 실행합니다 <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> 추가적인 런타임 인수를 제공 합니다."
  remarks: "스타일 시트 XSLT를 포함 하는 경우 `document()` 는 사용 하 여 해결 된 함수는 <xref:System.Xml.XmlUrlResolver>사용자 자격 증명 없이.</xref:System.Xml.XmlUrlResolver> 외부 리소스를 인증이 필요한 네트워크 리소스에 있는 경우는 오버 로드를 사용 하 여는 <xref:System.Xml.XmlResolver>인수 중 하나로 지정 하 고는 <xref:System.Xml.XmlResolver>에 필요한 자격 증명.</xref:System.Xml.XmlResolver> </xref:System.Xml.XmlResolver>"
  syntax:
    content: public void Transform (System.Xml.XmlReader input, System.Xml.Xsl.XsltArgumentList arguments, System.IO.TextWriter results);
    parameters:
    - id: input
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader>입력된 문서를 포함 합니다.</xref:System.Xml.XmlReader>"
    - id: arguments
      type: System.Xml.Xsl.XsltArgumentList
      description: "<xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> 변환의 입력으로 사용 되는 네임 스페이스로 한정 인수를 포함 하 합니다. 이 값 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
    - id: results
      type: System.IO.TextWriter
      description: "<xref:System.IO.TextWriter>출력할 대상.</xref:System.IO.TextWriter>"
  overload: System.Xml.Xsl.XslCompiledTransform.Transform*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>input</code> or <code>results</code> value is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Xml.Xsl.XsltException
    commentId: T:System.Xml.Xsl.XsltException
    description: "XSLT 변환을 실행 하는 동안 오류가 발생 했습니다."
  platform:
  - net462
- uid: System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)
  id: Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)
  parent: System.Xml.Xsl.XslCompiledTransform
  langs:
  - csharp
  name: Transform(XmlReader,XsltArgumentList,XmlWriter)
  nameWithType: XslCompiledTransform.Transform(XmlReader,XsltArgumentList,XmlWriter)
  fullName: System.Xml.Xsl.XslCompiledTransform.Transform(XmlReader,XsltArgumentList,XmlWriter)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "<xref:System.Xml.XmlReader>개체 및 <xref:System.Xml.XmlWriter>.</xref:System.Xml.XmlWriter> 에 대 한 결과 출력</xref:System.Xml.XmlReader> 하 여 지정 된 입력된 문서를 사용 하 여 변환을 실행합니다 <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> 추가적인 런타임 인수를 제공 합니다."
  remarks: "스타일 시트 XSLT를 포함 하는 경우 `document()` 는 사용 하 여 해결 된 함수는 <xref:System.Xml.XmlUrlResolver>사용자 자격 증명 없이.</xref:System.Xml.XmlUrlResolver> 외부 리소스를 인증이 필요한 네트워크 리소스에 있는 경우는 오버 로드를 사용 하 여는 <xref:System.Xml.XmlResolver>인수 중 하나로 지정 하 고는 <xref:System.Xml.XmlResolver>에 필요한 자격 증명.</xref:System.Xml.XmlResolver> </xref:System.Xml.XmlResolver>"
  syntax:
    content: public void Transform (System.Xml.XmlReader input, System.Xml.Xsl.XsltArgumentList arguments, System.Xml.XmlWriter results);
    parameters:
    - id: input
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader>입력된 문서를 포함 합니다.</xref:System.Xml.XmlReader>"
    - id: arguments
      type: System.Xml.Xsl.XsltArgumentList
      description: "<xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> 변환의 입력으로 사용 되는 네임 스페이스로 한정 인수를 포함 하 합니다. 이 값 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
    - id: results
      type: System.Xml.XmlWriter
      description: "<xref:System.Xml.XmlWriter>출력할 대상.</xref:System.Xml.XmlWriter>       스타일 시트에 포함 된 경우는 `xsl:output` 요소를 만들어야 합니다는 <xref:System.Xml.XmlWriter>를 사용 하는 <xref:System.Xml.XmlWriterSettings>에서 반환 된 개체는 <xref:System.Xml.Xsl.XslCompiledTransform.OutputSettings*>속성.</xref:System.Xml.Xsl.XslCompiledTransform.OutputSettings*> </xref:System.Xml.XmlWriterSettings> </xref:System.Xml.XmlWriter> 이렇게 하면는 <xref:System.Xml.XmlWriter>올바른 출력 설정을 포함 합니다.</xref:System.Xml.XmlWriter>"
  overload: System.Xml.Xsl.XslCompiledTransform.Transform*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>input</code> or <code>results</code> value is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Xml.Xsl.XsltException
    commentId: T:System.Xml.Xsl.XsltException
    description: "XSLT 변환을 실행 하는 동안 오류가 발생 했습니다."
  platform:
  - net462
- uid: System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)
  id: Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)
  parent: System.Xml.Xsl.XslCompiledTransform
  langs:
  - csharp
  name: Transform(IXPathNavigable,XsltArgumentList,Stream)
  nameWithType: XslCompiledTransform.Transform(IXPathNavigable,XsltArgumentList,Stream)
  fullName: System.Xml.Xsl.XslCompiledTransform.Transform(IXPathNavigable,XsltArgumentList,Stream)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "로 지정 된 입력된 문서를 사용 하 여 변환을 실행는 <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> 개체 하 고 스트림에 결과 출력 합니다. <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> 추가 런타임 인수를 제공 합니다."
  remarks: "하는 경우 XSLT `document()` 함수를 사용 하는 자동적으로 해결 되므로 사용 하는 <xref:System.Xml.XmlUrlResolver>사용자 자격 증명 없이.</xref:System.Xml.XmlUrlResolver> 외부 리소스를 인증이 필요한 네트워크 리소스에 있는 경우는 오버 로드를 사용 하 여는 <xref:System.Xml.XmlResolver>인수 중 하나로 지정 하 고는 <xref:System.Xml.XmlResolver>에 필요한 자격 증명.</xref:System.Xml.XmlResolver> </xref:System.Xml.XmlResolver>       이 방법은 지원 하지 않습니다는 `xsl:strip-space` 요소입니다. 컴파일된 스타일 시트에 포함 된 경우는 `xsl:strip-space` 사용 해야 요소는 <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>오버 로드를 <xref:System.Xml.XmlReader>입력 인수로.</xref:System.Xml.XmlReader> </xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>       <xref:System.Xml.XPath.IXPathNavigable>인터페이스에서 구현 되는 <xref:System.Xml.XmlNode>및 <xref:System.Xml.XPath.XPathDocument>클래스.</xref:System.Xml.XPath.XPathDocument> </xref:System.Xml.XmlNode> </xref:System.Xml.XPath.IXPathNavigable> 이러한 클래스는 XML 데이터의 메모리에 캐시를 나타냅니다.      - <xref:System.Xml.XmlNode>클래스에는 W3C DOM 문서 개체 모델 ()를 기반으로 하며 편집 기능이.</xref:System.Xml.XmlNode>      - <xref:System.Xml.XPath.XPathDocument>클래스는 XPath 데이터 모델을 기반으로 하는 읽기 전용 데이터 저장소.</xref:System.Xml.XPath.XPathDocument> <xref:System.Xml.XPath.XPathDocument>XSLT에 대 한 권장 되는 클래스를 처리 합니다.</xref:System.Xml.XPath.XPathDocument> <xref:System.Xml.XmlNode>클래스</xref:System.Xml.XmlNode> 에 비해 빠른 성능을 제공합니다       변형은 문서에 전체적으로 적용 됩니다. 즉, 문서 루트 노드 이외의 노드에 전달 해도 변형 프로세스에서 로드 된 문서의 모든 노드에 액세스할 합니다. 노드 조각을 변형 하려면 노드 조각만 포함 하는 개체를 만들고 Transform 메서드를 해당 개체를 전달 합니다. 자세한 내용은 참조 [하는 방법: 노드 조각을 변형](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following example executes an XSLT transformation and outputs to a <xref:System.IO.FileStream>.  \n  \n [!code-vb[XslCompiledTransform.Transform#6](~/add/codesnippet/visualbasic/83a14379-9d60-4f40-a273-_1.vb)]\n [!code-cs[XslCompiledTransform.Transform#6](~/add/codesnippet/csharp/83a14379-9d60-4f40-a273-_1.cs)]"
  syntax:
    content: public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList arguments, System.IO.Stream results);
    parameters:
    - id: input
      type: System.Xml.XPath.IXPathNavigable
      description: "구현 하는 개체는 <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> 인터페이스입니다. Microsoft.NET Framework의 일 수 있습니다는 <xref href=&quot;System.Xml.XmlNode&quot;> </xref> (일반적으로 <xref href=&quot;System.Xml.XmlDocument&quot;> </xref>), 또는 <xref href=&quot;System.Xml.XPath.XPathDocument&quot;> </xref> 변환 데이터가 들어 있는입니다."
    - id: arguments
      type: System.Xml.Xsl.XsltArgumentList
      description: "<xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> 변환의 입력으로 사용 되는 네임 스페이스로 한정 인수를 포함 하 합니다. 이 값 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
    - id: results
      type: System.IO.Stream
      description: "출력 스트림입니다."
  overload: System.Xml.Xsl.XslCompiledTransform.Transform*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>input</code> or <code>results</code> value is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Xml.Xsl.XsltException
    commentId: T:System.Xml.Xsl.XsltException
    description: "XSLT 변환을 실행 하는 동안 오류가 발생 했습니다."
  platform:
  - net462
- uid: System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)
  id: Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)
  parent: System.Xml.Xsl.XslCompiledTransform
  langs:
  - csharp
  name: Transform(IXPathNavigable,XsltArgumentList,TextWriter)
  nameWithType: XslCompiledTransform.Transform(IXPathNavigable,XsltArgumentList,TextWriter)
  fullName: System.Xml.Xsl.XslCompiledTransform.Transform(IXPathNavigable,XsltArgumentList,TextWriter)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "로 지정 된 입력된 문서를 사용 하 여 변환을 실행는 <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> 개체를 결과 <xref:System.IO.TextWriter>.</xref:System.IO.TextWriter> 를 출력 합니다 <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> 추가적인 런타임 인수를 제공 합니다."
  remarks: "하는 경우 XSLT `document()` 함수를 사용 하는 자동적으로 해결 되므로 사용 하는 <xref:System.Xml.XmlUrlResolver>사용자 자격 증명 없이.</xref:System.Xml.XmlUrlResolver> 외부 리소스를 인증이 필요한 네트워크 리소스에 있는 경우는 오버 로드를 사용 하 여는 <xref:System.Xml.XmlResolver>인수 중 하나로 지정 하 고는 <xref:System.Xml.XmlResolver>에 필요한 자격 증명.</xref:System.Xml.XmlResolver> </xref:System.Xml.XmlResolver>       이 방법은 지원 하지 않습니다는 `xsl:strip-space` 요소입니다. 컴파일된 스타일 시트에 포함 된 경우는 `xsl:strip-space` 사용 해야 요소는 <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>오버 로드를 <xref:System.Xml.XmlReader>입력 인수로.</xref:System.Xml.XmlReader> </xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>       <xref:System.Xml.XPath.IXPathNavigable>인터페이스에서 구현 되는 <xref:System.Xml.XmlNode>및 <xref:System.Xml.XPath.XPathDocument>클래스.</xref:System.Xml.XPath.XPathDocument> </xref:System.Xml.XmlNode> </xref:System.Xml.XPath.IXPathNavigable> 이러한 클래스는 XML 데이터의 메모리에 캐시를 나타냅니다.      - <xref:System.Xml.XmlNode>클래스에는 W3C DOM 문서 개체 모델 ()를 기반으로 하며 편집 기능이.</xref:System.Xml.XmlNode>      - <xref:System.Xml.XPath.XPathDocument>클래스는 XPath 데이터 모델을 기반으로 하는 읽기 전용 데이터 저장소.</xref:System.Xml.XPath.XPathDocument> <xref:System.Xml.XPath.XPathDocument>XSLT에 대 한 권장 되는 클래스를 처리 합니다.</xref:System.Xml.XPath.XPathDocument> <xref:System.Xml.XmlNode>클래스</xref:System.Xml.XmlNode> 에 비해 빠른 성능을 제공합니다       변형은 문서에 전체적으로 적용 됩니다. 즉, 문서 루트 노드 이외의 노드에 전달 해도 변형 프로세스에서 로드 된 문서의 모든 노드에 액세스할 합니다. 노드 조각을 변형 하려면 노드 조각만 포함 하는 개체를 만들고 Transform 메서드를 해당 개체를 전달 합니다. 자세한 내용은 참조 [하는 방법: 노드 조각을 변형](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList arguments, System.IO.TextWriter results);
    parameters:
    - id: input
      type: System.Xml.XPath.IXPathNavigable
      description: "구현 하는 개체는 <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> 인터페이스입니다. Microsoft.NET Framework의 일 수 있습니다는 <xref href=&quot;System.Xml.XmlNode&quot;> </xref> (일반적으로 <xref href=&quot;System.Xml.XmlDocument&quot;> </xref>), 또는 <xref href=&quot;System.Xml.XPath.XPathDocument&quot;> </xref> 변환 데이터가 들어 있는입니다."
    - id: arguments
      type: System.Xml.Xsl.XsltArgumentList
      description: "<xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> 변환의 입력으로 사용 되는 네임 스페이스로 한정 인수를 포함 하 합니다. 이 값 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
    - id: results
      type: System.IO.TextWriter
      description: "<xref:System.IO.TextWriter>출력할 대상.</xref:System.IO.TextWriter>"
  overload: System.Xml.Xsl.XslCompiledTransform.Transform*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>input</code> or <code>results</code> value is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Xml.Xsl.XsltException
    commentId: T:System.Xml.Xsl.XsltException
    description: "XSLT 변환을 실행 하는 동안 오류가 발생 했습니다."
  platform:
  - net462
- uid: System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)
  id: Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)
  parent: System.Xml.Xsl.XslCompiledTransform
  langs:
  - csharp
  name: Transform(IXPathNavigable,XsltArgumentList,XmlWriter)
  nameWithType: XslCompiledTransform.Transform(IXPathNavigable,XsltArgumentList,XmlWriter)
  fullName: System.Xml.Xsl.XslCompiledTransform.Transform(IXPathNavigable,XsltArgumentList,XmlWriter)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "로 지정 된 입력된 문서를 사용 하 여 변환을 실행는 <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> 개체를 결과 <xref:System.Xml.XmlWriter>.</xref:System.Xml.XmlWriter> 를 출력 합니다 <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> 추가적인 런타임 인수를 제공 합니다."
  remarks: "하는 경우 XSLT `document()` 함수를 사용 하는 자동적으로 해결 되므로 사용 하는 <xref:System.Xml.XmlUrlResolver>사용자 자격 증명 없이.</xref:System.Xml.XmlUrlResolver> 외부 리소스를 인증이 필요한 네트워크 리소스에 있는 경우는 오버 로드를 사용 하 여는 <xref:System.Xml.XmlResolver>인수 중 하나로 지정 하 고는 <xref:System.Xml.XmlResolver>에 필요한 자격 증명.</xref:System.Xml.XmlResolver> </xref:System.Xml.XmlResolver>       이 방법은 지원 하지 않습니다는 `xsl:strip-space` 요소입니다. 컴파일된 스타일 시트에 포함 된 경우는 `xsl:strip-space` 사용 해야 요소는 <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>오버 로드를 <xref:System.Xml.XmlReader>입력 인수로.</xref:System.Xml.XmlReader> </xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>       <xref:System.Xml.XPath.IXPathNavigable>인터페이스에서 구현 되는 <xref:System.Xml.XmlNode>및 <xref:System.Xml.XPath.XPathDocument>클래스.</xref:System.Xml.XPath.XPathDocument> </xref:System.Xml.XmlNode> </xref:System.Xml.XPath.IXPathNavigable> 이러한 클래스는 XML 데이터의 메모리에 캐시를 나타냅니다.      - <xref:System.Xml.XmlNode>클래스에는 W3C DOM 문서 개체 모델 ()를 기반으로 하며 편집 기능이.</xref:System.Xml.XmlNode>      - <xref:System.Xml.XPath.XPathDocument>클래스는 XPath 데이터 모델을 기반으로 하는 읽기 전용 데이터 저장소.</xref:System.Xml.XPath.XPathDocument> <xref:System.Xml.XPath.XPathDocument>XSLT에 대 한 권장 되는 클래스를 처리 합니다.</xref:System.Xml.XPath.XPathDocument> <xref:System.Xml.XmlNode>클래스</xref:System.Xml.XmlNode> 에 비해 빠른 성능을 제공합니다       변형은 문서에 전체적으로 적용 됩니다. 즉, 문서 루트 노드 이외의 노드에 전달 해도 변형 프로세스에서 로드 된 문서의 모든 노드에 액세스할 합니다. 노드 조각을 변형 하려면 노드 조각만 포함 하는 개체를 만들고 Transform 메서드를 해당 개체를 전달 합니다. 자세한 내용은 참조 [하는 방법: 노드 조각을 변형](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList arguments, System.Xml.XmlWriter results);
    parameters:
    - id: input
      type: System.Xml.XPath.IXPathNavigable
      description: "구현 하는 개체는 <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> 인터페이스입니다. Microsoft.NET Framework의 일 수 있습니다는 <xref href=&quot;System.Xml.XmlNode&quot;> </xref> (일반적으로 <xref href=&quot;System.Xml.XmlDocument&quot;> </xref>), 또는 <xref href=&quot;System.Xml.XPath.XPathDocument&quot;> </xref> 변환 데이터가 들어 있는입니다."
    - id: arguments
      type: System.Xml.Xsl.XsltArgumentList
      description: "<xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> 변환의 입력으로 사용 되는 네임 스페이스로 한정 인수를 포함 하 합니다. 이 값 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
    - id: results
      type: System.Xml.XmlWriter
      description: "<xref:System.Xml.XmlWriter>출력할 대상.</xref:System.Xml.XmlWriter>       스타일 시트에 포함 된 경우는 `xsl:output` 요소를 만들어야 합니다는 <xref:System.Xml.XmlWriter>를 사용 하는 <xref:System.Xml.XmlWriterSettings>에서 반환 된 개체는 <xref:System.Xml.Xsl.XslCompiledTransform.OutputSettings*>속성.</xref:System.Xml.Xsl.XslCompiledTransform.OutputSettings*> </xref:System.Xml.XmlWriterSettings> </xref:System.Xml.XmlWriter> 이렇게 하면는 <xref:System.Xml.XmlWriter>올바른 출력 설정을 포함 합니다.</xref:System.Xml.XmlWriter>"
  overload: System.Xml.Xsl.XslCompiledTransform.Transform*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>input</code> or <code>results</code> value is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Xml.Xsl.XsltException
    commentId: T:System.Xml.Xsl.XsltException
    description: "XSLT 변환을 실행 하는 동안 오류가 발생 했습니다."
  platform:
  - net462
- uid: System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)
  id: Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslCompiledTransform
  langs:
  - csharp
  name: Transform(XmlReader,XsltArgumentList,XmlWriter,XmlResolver)
  nameWithType: XslCompiledTransform.Transform(XmlReader,XsltArgumentList,XmlWriter,XmlResolver)
  fullName: System.Xml.Xsl.XslCompiledTransform.Transform(XmlReader,XsltArgumentList,XmlWriter,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "<xref:System.Xml.XmlReader>개체 및 <xref:System.Xml.XmlWriter>.</xref:System.Xml.XmlWriter> 에 대 한 결과 출력</xref:System.Xml.XmlReader> 하 여 지정 된 입력된 문서를 사용 하 여 변환을 실행합니다 <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> 런타임 인수를 추가 및 XmlResolver 해결 XSLT 제공 `document()` 함수입니다."
  remarks: ''
  example:
  - "The following example uses an <xref:System.Xml.XmlSecureResolver> to resolve the XSLT `document()` function.  \n  \n [!code-vb[XslCompiledTransform.Transform#4](~/add/codesnippet/visualbasic/c36dd9c6-36bd-4274-9e59-_1.vb)]\n [!code-cs[XslCompiledTransform.Transform#4](~/add/codesnippet/csharp/c36dd9c6-36bd-4274-9e59-_1.cs)]"
  syntax:
    content: public void Transform (System.Xml.XmlReader input, System.Xml.Xsl.XsltArgumentList arguments, System.Xml.XmlWriter results, System.Xml.XmlResolver documentResolver);
    parameters:
    - id: input
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader>입력된 문서를 포함 합니다.</xref:System.Xml.XmlReader>"
    - id: arguments
      type: System.Xml.Xsl.XsltArgumentList
      description: "<xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> 변환의 입력으로 사용 되는 네임 스페이스로 한정 인수를 포함 하 합니다. 이 값 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
    - id: results
      type: System.Xml.XmlWriter
      description: "<xref:System.Xml.XmlWriter>출력할 대상.</xref:System.Xml.XmlWriter>       스타일 시트에 포함 된 경우는 `xsl:output` 요소를 만들어야 합니다는 <xref:System.Xml.XmlWriter>를 사용 하는 <xref:System.Xml.XmlWriterSettings>에서 반환 된 개체는 <xref:System.Xml.Xsl.XslCompiledTransform.OutputSettings*>속성.</xref:System.Xml.Xsl.XslCompiledTransform.OutputSettings*> </xref:System.Xml.XmlWriterSettings> </xref:System.Xml.XmlWriter> 이렇게 하면는 <xref:System.Xml.XmlWriter>올바른 출력 설정을 포함 합니다.</xref:System.Xml.XmlWriter>"
    - id: documentResolver
      type: System.Xml.XmlResolver
      description: "<xref href=&quot;System.Xml.XmlResolver&quot;> </xref> XSLT를 확인 하는 데 `document()` 함수입니다. 이것이 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, `document()` 함수가 확인 되지 않습니다."
  overload: System.Xml.Xsl.XslCompiledTransform.Transform*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>input</code> or <code>results</code> value is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Xml.Xsl.XsltException
    commentId: T:System.Xml.Xsl.XsltException
    description: "XSLT 변환을 실행 하는 동안 오류가 발생 했습니다."
  platform:
  - net462
- uid: System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)
  id: Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslCompiledTransform
  langs:
  - csharp
  name: Transform(IXPathNavigable,XsltArgumentList,XmlWriter,XmlResolver)
  nameWithType: XslCompiledTransform.Transform(IXPathNavigable,XsltArgumentList,XmlWriter,XmlResolver)
  fullName: System.Xml.Xsl.XslCompiledTransform.Transform(IXPathNavigable,XsltArgumentList,XmlWriter,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "지정 된 입력된 문서를 사용 하 여 변환을 실행는 <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> 개체를 결과 <xref:System.Xml.XmlWriter>.</xref:System.Xml.XmlWriter> 를 출력 합니다 <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> 추가 런타임 인수를 제공 및 <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> XSLT 해결 <xref uid=&quot;langword_csharp_document()&quot; name=&quot;document()&quot; href=&quot;&quot;> </xref> 함수입니다."
  syntax:
    content: public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList arguments, System.Xml.XmlWriter results, System.Xml.XmlResolver documentResolver);
    parameters:
    - id: input
      type: System.Xml.XPath.IXPathNavigable
      description: "문서를 변환 하 여 지정 된 <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> 개체입니다."
    - id: arguments
      type: System.Xml.Xsl.XsltArgumentList
      description: "인수 목록으로 <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref>합니다."
    - id: results
      type: System.Xml.XmlWriter
      description: "<xref:System.Xml.XmlWriter>출력할 대상.</xref:System.Xml.XmlWriter>       스타일 시트에 포함 된 경우는 <xref uid=&quot;langword_csharp_xsl:output&quot; name=&quot;xsl:output&quot; href=&quot;&quot;> </xref> 요소를 만들어야 합니다는 <xref:System.Xml.XmlWriter>를 사용 하 여는 <xref:System.Xml.XmlWriterSettings>에서 반환 되는 개체는 <xref:System.Xml.Xsl.XslCompiledTransform.OutputSettings*>속성.</xref:System.Xml.Xsl.XslCompiledTransform.OutputSettings*> </xref:System.Xml.XmlWriterSettings> </xref:System.Xml.XmlWriter> 이렇게 하면는 <xref:System.Xml.XmlWriter>올바른 출력 설정을 포함 합니다.</xref:System.Xml.XmlWriter>"
    - id: documentResolver
      type: System.Xml.XmlResolver
      description: "<xref href=&quot;System.Xml.XmlResolver&quot;> </xref> XSLT를 확인 하는 데 <xref uid=&quot;langword_csharp_document()&quot; name=&quot;document()&quot; href=&quot;&quot;> </xref> 함수입니다. 이것이 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_document()&quot; name=&quot;document()&quot; href=&quot;&quot;> </xref> 함수가 확인 되지 않습니다."
  overload: System.Xml.Xsl.XslCompiledTransform.Transform*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Xml.Xsl.XsltException
  parent: System.Xml.Xsl
  isExternal: false
  name: XsltException
  nameWithType: XsltException
  fullName: System.Xml.Xsl.XsltException
- uid: System.IO.FileNotFoundException
  isExternal: true
  name: System.IO.FileNotFoundException
- uid: System.IO.DirectoryNotFoundException
  isExternal: true
  name: System.IO.DirectoryNotFoundException
- uid: System.Net.WebException
  isExternal: true
  name: System.Net.WebException
- uid: System.UriFormatException
  isExternal: true
  name: System.UriFormatException
- uid: System.Xml.XmlException
  isExternal: true
  name: System.Xml.XmlException
- uid: System.Xml.Xsl.XslCompiledTransform.#ctor
  parent: System.Xml.Xsl.XslCompiledTransform
  isExternal: false
  name: XslCompiledTransform()
  nameWithType: XslCompiledTransform.XslCompiledTransform()
  fullName: System.Xml.Xsl.XslCompiledTransform.XslCompiledTransform()
- uid: System.Xml.Xsl.XslCompiledTransform.#ctor(System.Boolean)
  parent: System.Xml.Xsl.XslCompiledTransform
  isExternal: false
  name: XslCompiledTransform(Boolean)
  nameWithType: XslCompiledTransform.XslCompiledTransform(Boolean)
  fullName: System.Xml.Xsl.XslCompiledTransform.XslCompiledTransform(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.Xsl.XslCompiledTransform.CompileToType(System.Xml.XmlReader,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver,System.Boolean,System.Reflection.Emit.TypeBuilder,System.String)
  parent: System.Xml.Xsl.XslCompiledTransform
  isExternal: false
  name: CompileToType(XmlReader,XsltSettings,XmlResolver,Boolean,TypeBuilder,String)
  nameWithType: XslCompiledTransform.CompileToType(XmlReader,XsltSettings,XmlResolver,Boolean,TypeBuilder,String)
  fullName: System.Xml.Xsl.XslCompiledTransform.CompileToType(XmlReader,XsltSettings,XmlResolver,Boolean,TypeBuilder,String)
- uid: System.CodeDom.Compiler.CompilerErrorCollection
  parent: System.CodeDom.Compiler
  isExternal: false
  name: CompilerErrorCollection
  nameWithType: CompilerErrorCollection
  fullName: System.CodeDom.Compiler.CompilerErrorCollection
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Xml.Xsl.XsltSettings
  parent: System.Xml.Xsl
  isExternal: false
  name: XsltSettings
  nameWithType: XsltSettings
  fullName: System.Xml.Xsl.XsltSettings
- uid: System.Xml.XmlResolver
  parent: System.Xml
  isExternal: false
  name: XmlResolver
  nameWithType: XmlResolver
  fullName: System.Xml.XmlResolver
- uid: System.Reflection.Emit.TypeBuilder
  parent: System.Reflection.Emit
  isExternal: true
  name: TypeBuilder
  nameWithType: TypeBuilder
  fullName: System.Reflection.Emit.TypeBuilder
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.Xsl.XslCompiledTransform.Load(System.String)
  parent: System.Xml.Xsl.XslCompiledTransform
  isExternal: false
  name: Load(String)
  nameWithType: XslCompiledTransform.Load(String)
  fullName: System.Xml.Xsl.XslCompiledTransform.Load(String)
- uid: System.Xml.Xsl.XslCompiledTransform.Load(System.Type)
  parent: System.Xml.Xsl.XslCompiledTransform
  isExternal: false
  name: Load(Type)
  nameWithType: XslCompiledTransform.Load(Type)
  fullName: System.Xml.Xsl.XslCompiledTransform.Load(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XmlReader)
  parent: System.Xml.Xsl.XslCompiledTransform
  isExternal: false
  name: Load(XmlReader)
  nameWithType: XslCompiledTransform.Load(XmlReader)
  fullName: System.Xml.Xsl.XslCompiledTransform.Load(XmlReader)
- uid: System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XPath.IXPathNavigable)
  parent: System.Xml.Xsl.XslCompiledTransform
  isExternal: false
  name: Load(IXPathNavigable)
  nameWithType: XslCompiledTransform.Load(IXPathNavigable)
  fullName: System.Xml.Xsl.XslCompiledTransform.Load(IXPathNavigable)
- uid: System.Xml.XPath.IXPathNavigable
  parent: System.Xml.XPath
  isExternal: false
  name: IXPathNavigable
  nameWithType: IXPathNavigable
  fullName: System.Xml.XPath.IXPathNavigable
- uid: System.Xml.Xsl.XslCompiledTransform.Load(System.Reflection.MethodInfo,System.Byte[],System.Type[])
  parent: System.Xml.Xsl.XslCompiledTransform
  isExternal: false
  name: Load(MethodInfo,Byte[],Type[])
  nameWithType: XslCompiledTransform.Load(MethodInfo,Byte[],Type[])
  fullName: System.Xml.Xsl.XslCompiledTransform.Load(MethodInfo,Byte[],Type[])
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: true
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Type[]
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type[]
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Xml.Xsl.XslCompiledTransform.Load(System.String,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslCompiledTransform
  isExternal: false
  name: Load(String,XsltSettings,XmlResolver)
  nameWithType: XslCompiledTransform.Load(String,XsltSettings,XmlResolver)
  fullName: System.Xml.Xsl.XslCompiledTransform.Load(String,XsltSettings,XmlResolver)
- uid: System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XmlReader,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslCompiledTransform
  isExternal: false
  name: Load(XmlReader,XsltSettings,XmlResolver)
  nameWithType: XslCompiledTransform.Load(XmlReader,XsltSettings,XmlResolver)
  fullName: System.Xml.Xsl.XslCompiledTransform.Load(XmlReader,XsltSettings,XmlResolver)
- uid: System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslCompiledTransform
  isExternal: false
  name: Load(IXPathNavigable,XsltSettings,XmlResolver)
  nameWithType: XslCompiledTransform.Load(IXPathNavigable,XsltSettings,XmlResolver)
  fullName: System.Xml.Xsl.XslCompiledTransform.Load(IXPathNavigable,XsltSettings,XmlResolver)
- uid: System.Xml.Xsl.XslCompiledTransform.OutputSettings
  parent: System.Xml.Xsl.XslCompiledTransform
  isExternal: false
  name: OutputSettings
  nameWithType: XslCompiledTransform.OutputSettings
  fullName: System.Xml.Xsl.XslCompiledTransform.OutputSettings
- uid: System.Xml.XmlWriterSettings
  parent: System.Xml
  isExternal: true
  name: XmlWriterSettings
  nameWithType: XmlWriterSettings
  fullName: System.Xml.XmlWriterSettings
- uid: System.Xml.Xsl.XslCompiledTransform.TemporaryFiles
  parent: System.Xml.Xsl.XslCompiledTransform
  isExternal: false
  name: TemporaryFiles
  nameWithType: XslCompiledTransform.TemporaryFiles
  fullName: System.Xml.Xsl.XslCompiledTransform.TemporaryFiles
- uid: System.CodeDom.Compiler.TempFileCollection
  parent: System.CodeDom.Compiler
  isExternal: false
  name: TempFileCollection
  nameWithType: TempFileCollection
  fullName: System.CodeDom.Compiler.TempFileCollection
- uid: System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.String)
  parent: System.Xml.Xsl.XslCompiledTransform
  isExternal: false
  name: Transform(String,String)
  nameWithType: XslCompiledTransform.Transform(String,String)
  fullName: System.Xml.Xsl.XslCompiledTransform.Transform(String,String)
- uid: System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)
  parent: System.Xml.Xsl.XslCompiledTransform
  isExternal: false
  name: Transform(String,XmlWriter)
  nameWithType: XslCompiledTransform.Transform(String,XmlWriter)
  fullName: System.Xml.Xsl.XslCompiledTransform.Transform(String,XmlWriter)
- uid: System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.XmlWriter)
  parent: System.Xml.Xsl.XslCompiledTransform
  isExternal: false
  name: Transform(XmlReader,XmlWriter)
  nameWithType: XslCompiledTransform.Transform(XmlReader,XmlWriter)
  fullName: System.Xml.Xsl.XslCompiledTransform.Transform(XmlReader,XmlWriter)
- uid: System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.XmlWriter)
  parent: System.Xml.Xsl.XslCompiledTransform
  isExternal: false
  name: Transform(IXPathNavigable,XmlWriter)
  nameWithType: XslCompiledTransform.Transform(IXPathNavigable,XmlWriter)
  fullName: System.Xml.Xsl.XslCompiledTransform.Transform(IXPathNavigable,XmlWriter)
- uid: System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)
  parent: System.Xml.Xsl.XslCompiledTransform
  isExternal: false
  name: Transform(String,XsltArgumentList,Stream)
  nameWithType: XslCompiledTransform.Transform(String,XsltArgumentList,Stream)
  fullName: System.Xml.Xsl.XslCompiledTransform.Transform(String,XsltArgumentList,Stream)
- uid: System.Xml.Xsl.XsltArgumentList
  parent: System.Xml.Xsl
  isExternal: false
  name: XsltArgumentList
  nameWithType: XsltArgumentList
  fullName: System.Xml.Xsl.XsltArgumentList
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)
  parent: System.Xml.Xsl.XslCompiledTransform
  isExternal: false
  name: Transform(String,XsltArgumentList,TextWriter)
  nameWithType: XslCompiledTransform.Transform(String,XsltArgumentList,TextWriter)
  fullName: System.Xml.Xsl.XslCompiledTransform.Transform(String,XsltArgumentList,TextWriter)
- uid: System.IO.TextWriter
  parent: System.IO
  isExternal: true
  name: TextWriter
  nameWithType: TextWriter
  fullName: System.IO.TextWriter
- uid: System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)
  parent: System.Xml.Xsl.XslCompiledTransform
  isExternal: false
  name: Transform(String,XsltArgumentList,XmlWriter)
  nameWithType: XslCompiledTransform.Transform(String,XsltArgumentList,XmlWriter)
  fullName: System.Xml.Xsl.XslCompiledTransform.Transform(String,XsltArgumentList,XmlWriter)
- uid: System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)
  parent: System.Xml.Xsl.XslCompiledTransform
  isExternal: false
  name: Transform(XmlReader,XsltArgumentList,Stream)
  nameWithType: XslCompiledTransform.Transform(XmlReader,XsltArgumentList,Stream)
  fullName: System.Xml.Xsl.XslCompiledTransform.Transform(XmlReader,XsltArgumentList,Stream)
- uid: System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)
  parent: System.Xml.Xsl.XslCompiledTransform
  isExternal: false
  name: Transform(XmlReader,XsltArgumentList,TextWriter)
  nameWithType: XslCompiledTransform.Transform(XmlReader,XsltArgumentList,TextWriter)
  fullName: System.Xml.Xsl.XslCompiledTransform.Transform(XmlReader,XsltArgumentList,TextWriter)
- uid: System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)
  parent: System.Xml.Xsl.XslCompiledTransform
  isExternal: false
  name: Transform(XmlReader,XsltArgumentList,XmlWriter)
  nameWithType: XslCompiledTransform.Transform(XmlReader,XsltArgumentList,XmlWriter)
  fullName: System.Xml.Xsl.XslCompiledTransform.Transform(XmlReader,XsltArgumentList,XmlWriter)
- uid: System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)
  parent: System.Xml.Xsl.XslCompiledTransform
  isExternal: false
  name: Transform(IXPathNavigable,XsltArgumentList,Stream)
  nameWithType: XslCompiledTransform.Transform(IXPathNavigable,XsltArgumentList,Stream)
  fullName: System.Xml.Xsl.XslCompiledTransform.Transform(IXPathNavigable,XsltArgumentList,Stream)
- uid: System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)
  parent: System.Xml.Xsl.XslCompiledTransform
  isExternal: false
  name: Transform(IXPathNavigable,XsltArgumentList,TextWriter)
  nameWithType: XslCompiledTransform.Transform(IXPathNavigable,XsltArgumentList,TextWriter)
  fullName: System.Xml.Xsl.XslCompiledTransform.Transform(IXPathNavigable,XsltArgumentList,TextWriter)
- uid: System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)
  parent: System.Xml.Xsl.XslCompiledTransform
  isExternal: false
  name: Transform(IXPathNavigable,XsltArgumentList,XmlWriter)
  nameWithType: XslCompiledTransform.Transform(IXPathNavigable,XsltArgumentList,XmlWriter)
  fullName: System.Xml.Xsl.XslCompiledTransform.Transform(IXPathNavigable,XsltArgumentList,XmlWriter)
- uid: System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslCompiledTransform
  isExternal: false
  name: Transform(XmlReader,XsltArgumentList,XmlWriter,XmlResolver)
  nameWithType: XslCompiledTransform.Transform(XmlReader,XsltArgumentList,XmlWriter,XmlResolver)
  fullName: System.Xml.Xsl.XslCompiledTransform.Transform(XmlReader,XsltArgumentList,XmlWriter,XmlResolver)
- uid: System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslCompiledTransform
  isExternal: false
  name: Transform(IXPathNavigable,XsltArgumentList,XmlWriter,XmlResolver)
  nameWithType: XslCompiledTransform.Transform(IXPathNavigable,XsltArgumentList,XmlWriter,XmlResolver)
  fullName: System.Xml.Xsl.XslCompiledTransform.Transform(IXPathNavigable,XsltArgumentList,XmlWriter,XmlResolver)
- uid: System.Xml.Xsl.XslCompiledTransform.#ctor*
  parent: System.Xml.Xsl.XslCompiledTransform
  isExternal: false
  name: XslCompiledTransform
  nameWithType: XslCompiledTransform.XslCompiledTransform
- uid: System.Xml.Xsl.XslCompiledTransform.CompileToType*
  parent: System.Xml.Xsl.XslCompiledTransform
  isExternal: false
  name: CompileToType
  nameWithType: XslCompiledTransform.CompileToType
- uid: System.Xml.Xsl.XslCompiledTransform.Load*
  parent: System.Xml.Xsl.XslCompiledTransform
  isExternal: false
  name: Load
  nameWithType: XslCompiledTransform.Load
- uid: System.Xml.Xsl.XslCompiledTransform.OutputSettings*
  parent: System.Xml.Xsl.XslCompiledTransform
  isExternal: false
  name: OutputSettings
  nameWithType: XslCompiledTransform.OutputSettings
- uid: System.Xml.Xsl.XslCompiledTransform.TemporaryFiles*
  parent: System.Xml.Xsl.XslCompiledTransform
  isExternal: false
  name: TemporaryFiles
  nameWithType: XslCompiledTransform.TemporaryFiles
- uid: System.Xml.Xsl.XslCompiledTransform.Transform*
  parent: System.Xml.Xsl.XslCompiledTransform
  isExternal: false
  name: Transform
  nameWithType: XslCompiledTransform.Transform
