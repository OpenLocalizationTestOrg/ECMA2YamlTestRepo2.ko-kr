### YamlMime:ManagedReference
items:
- uid: System.Web.Security.RolePrincipal
  id: RolePrincipal
  children:
  - System.Web.Security.RolePrincipal.#ctor(System.Security.Principal.IIdentity)
  - System.Web.Security.RolePrincipal.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Web.Security.RolePrincipal.#ctor(System.Security.Principal.IIdentity,System.String)
  - System.Web.Security.RolePrincipal.#ctor(System.String,System.Security.Principal.IIdentity)
  - System.Web.Security.RolePrincipal.#ctor(System.String,System.Security.Principal.IIdentity,System.String)
  - System.Web.Security.RolePrincipal.CachedListChanged
  - System.Web.Security.RolePrincipal.CookiePath
  - System.Web.Security.RolePrincipal.Expired
  - System.Web.Security.RolePrincipal.ExpireDate
  - System.Web.Security.RolePrincipal.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Web.Security.RolePrincipal.GetRoles
  - System.Web.Security.RolePrincipal.Identity
  - System.Web.Security.RolePrincipal.IsInRole(System.String)
  - System.Web.Security.RolePrincipal.IsRoleListCached
  - System.Web.Security.RolePrincipal.IssueDate
  - System.Web.Security.RolePrincipal.ProviderName
  - System.Web.Security.RolePrincipal.SetDirty
  - System.Web.Security.RolePrincipal.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Web.Security.RolePrincipal.ToEncryptedTicket
  - System.Web.Security.RolePrincipal.Version
  langs:
  - csharp
  name: RolePrincipal
  nameWithType: RolePrincipal
  fullName: System.Web.Security.RolePrincipal
  type: Class
  summary: "역할 멤버 자격을 포함 하 여 현재 HTTP 요청에 대 한 보안 정보를 나타냅니다. 이 클래스는 상속 될 수 없습니다."
  remarks: "RolePrincipal 개체를 구현 하는 <xref:System.Security.Principal.IPrincipal>인터페이스 및 HTTP 요청에 대 한 현재 보안 컨텍스트를 나타냅니다.</xref:System.Security.Principal.IPrincipal>       역할 관리를 사용 하는 경우 (참조 <xref:System.Web.Security.Roles>), <xref:System.Web.Security.RoleManagerModule>RolePrincipal 개체 <xref:System.Web.HttpContext.User%2A> <xref:System.Web.HttpContext.Current%2A><xref:System.Web.HttpContext>.</xref:System.Web.HttpContext></xref:System.Web.HttpContext.Current%2A> 속성</xref:System.Web.HttpContext.User%2A> 에 할당할</xref:System.Web.Security.RoleManagerModule> </xref:System.Web.Security.Roles>       RolePrincipal 클래스 현재 HTTP 요청에 대 한 보안 id를 노출 하 고 역할 멤버 자격에 대 한 검사를 추가로 수행 합니다. 경우 <xref:System.Web.Security.Roles.CacheRolesInCookie%2A>은 `true`다음 RolePrincipal 개체는 캐시 된 역할 목록을 관리 하 고, 역할 멤버 자격에서 캐시 된 현재 사용자를 조회 나열 먼저 다음 <xref:System.Web.Security.Roles.Provider%2A>.</xref:System.Web.Security.Roles.Provider%2A> 역할</xref:System.Web.Security.Roles.CacheRolesInCookie%2A> 경우 <xref:System.Web.Security.Roles.CacheRolesInCookie%2A>은 `false`, RolePrincipal 개체는 항상 역할 공급자를 사용 하 여 역할 멤버 자격을 찾습니다.</xref:System.Web.Security.Roles.CacheRolesInCookie%2A>       RolePrincipal 개체 암호화 하 고 <xref:System.Web.Security.Roles.CookieName%2A>있는 <xref:System.Web.Security.Roles.CookieProtectionValue%2A>.</xref:System.Web.Security.Roles.CookieProtectionValue%2A> 를 기반</xref:System.Web.Security.Roles.CookieName%2A> 으로 식별 된 쿠키에 캐시 된 역할 정보를 해독 합니다."
  syntax:
    content: 'public class RolePrincipal : System.Security.Claims.ClaimsPrincipal, System.Runtime.Serialization.ISerializable'
  inheritance:
  - System.Object
  - System.Security.Claims.ClaimsPrincipal
  implements:
  - System.Runtime.Serialization.ISerializable
  inheritedMembers:
  - System.Security.Claims.ClaimsPrincipal.AddIdentities(System.Collections.Generic.IEnumerable{System.Security.Claims.ClaimsIdentity})
  - System.Security.Claims.ClaimsPrincipal.AddIdentity(System.Security.Claims.ClaimsIdentity)
  - System.Security.Claims.ClaimsPrincipal.Claims
  - System.Security.Claims.ClaimsPrincipal.ClaimsPrincipalSelector
  - System.Security.Claims.ClaimsPrincipal.Clone
  - System.Security.Claims.ClaimsPrincipal.CreateClaimsIdentity(System.IO.BinaryReader)
  - System.Security.Claims.ClaimsPrincipal.Current
  - System.Security.Claims.ClaimsPrincipal.CustomSerializationData
  - System.Security.Claims.ClaimsPrincipal.FindAll(System.Predicate{System.Security.Claims.Claim})
  - System.Security.Claims.ClaimsPrincipal.FindAll(System.String)
  - System.Security.Claims.ClaimsPrincipal.FindFirst(System.Predicate{System.Security.Claims.Claim})
  - System.Security.Claims.ClaimsPrincipal.FindFirst(System.String)
  - System.Security.Claims.ClaimsPrincipal.HasClaim(System.Predicate{System.Security.Claims.Claim})
  - System.Security.Claims.ClaimsPrincipal.HasClaim(System.String,System.String)
  - System.Security.Claims.ClaimsPrincipal.Identities
  - System.Security.Claims.ClaimsPrincipal.PrimaryIdentitySelector
  - System.Security.Claims.ClaimsPrincipal.WriteTo(System.IO.BinaryWriter)
  - System.Security.Claims.ClaimsPrincipal.WriteTo(System.IO.BinaryWriter,System.Byte[])
  platform:
  - net462
- uid: System.Web.Security.RolePrincipal.#ctor(System.Security.Principal.IIdentity)
  id: '#ctor(System.Security.Principal.IIdentity)'
  parent: System.Web.Security.RolePrincipal
  langs:
  - csharp
  name: RolePrincipal(IIdentity)
  nameWithType: RolePrincipal.RolePrincipal(IIdentity)
  fullName: System.Web.Security.RolePrincipal.RolePrincipal(IIdentity)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "인스턴스화하는 <xref href=&quot;System.Web.Security.RolePrincipal&quot;> </xref> 지정 된 개체 <code> identity </code>합니다."
  remarks: "이 RolePrincipal 생성자 오버이 로드에서는 새 <xref:System.Web.Security.RolePrincipal>개체 및 해당 속성 값을 초기화 합니다.</xref:System.Web.Security.RolePrincipal> 으로 식별 된 쿠키에서 캐시 된 역할 정보를 읽지 않습니다는 <xref:System.Web.Security.Roles.CookieName%2A>속성.</xref:System.Web.Security.Roles.CookieName%2A> <xref:System.Web.Security.RolePrincipal.ProviderName%2A>속성이로 설정 되 고 <xref:System.Configuration.Provider.ProviderBase.Name%2A>기본 역할 공급자의.</xref:System.Configuration.Provider.ProviderBase.Name%2A> </xref:System.Web.Security.RolePrincipal.ProviderName%2A>       역할 관리 설정에 대 한 자세한 내용은 <xref:System.Web.Security.Roles>클래스</xref:System.Web.Security.Roles> 를 참조 하십시오."
  example:
  - "The following code example creates a new <xref:System.Web.Security.RolePrincipal> object. If <xref:System.Web.Security.Roles.CacheRolesInCookie%2A> is `true`, the example creates the <xref:System.Web.Security.RolePrincipal> with cookie information from the cookie identified by the <xref:System.Web.Security.Roles.CookieName%2A> property.  \n  \n [!code-cs[System.Web.Security.RolePrincipal#2](~/add/codesnippet/csharp/39332c55-2f33-4fad-9306-_1.aspx)]\n [!code-vb[System.Web.Security.RolePrincipal#2](~/add/codesnippet/visualbasic/39332c55-2f33-4fad-9306-_1.aspx)]"
  syntax:
    content: public RolePrincipal (System.Security.Principal.IIdentity identity);
    parameters:
    - id: identity
      type: System.Security.Principal.IIdentity
      description: "만들 사용자 id는 <xref href=&quot;System.Web.Security.RolePrincipal&quot;> </xref> 에 대 한 합니다."
  overload: System.Web.Security.RolePrincipal.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>identity</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.RolePrincipal.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.Web.Security.RolePrincipal
  langs:
  - csharp
  name: RolePrincipal(SerializationInfo,StreamingContext)
  nameWithType: RolePrincipal.RolePrincipal(SerializationInfo,StreamingContext)
  fullName: System.Web.Security.RolePrincipal.RolePrincipal(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.Security.RolePrincipal&quot;> </xref> 포함 된 정보를 사용 하 여 클래스에 지정 된 <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> 개체와 지정된 된 스트리밍 컨텍스트를 사용 하 여 합니다."
  syntax:
    content: protected RolePrincipal (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> 데이터로 채울 개체입니다."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "이 serialization에 대 한 대상입니다."
  overload: System.Web.Security.RolePrincipal.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.RolePrincipal.#ctor(System.Security.Principal.IIdentity,System.String)
  id: '#ctor(System.Security.Principal.IIdentity,System.String)'
  parent: System.Web.Security.RolePrincipal
  langs:
  - csharp
  name: RolePrincipal(IIdentity,String)
  nameWithType: RolePrincipal.RolePrincipal(IIdentity,String)
  fullName: System.Web.Security.RolePrincipal.RolePrincipal(IIdentity,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "인스턴스화하는 <xref href=&quot;System.Web.Security.RolePrincipal&quot;> </xref> 지정 된 개체 <code> identity </code> 지정 된 위치에서 역할 정보로 <code> encryptedTicket </code>합니다."
  remarks: "이 RolePrincipal 생성자 오버이 로드에서는 새 <xref:System.Web.Security.RolePrincipal>개체 및 해당 속성 값을 초기화 합니다.</xref:System.Web.Security.RolePrincipal> 현재 사용자에 대 한 역할 정보는 읽기 제공 된 `encryptedTicket` 사용 하 여 캐시는 <xref:System.Web.Security.RolePrincipal>개체입니다.</xref:System.Web.Security.RolePrincipal> <xref:System.Web.Security.RolePrincipal.ProviderName%2A>속성이로 설정 되 고 <xref:System.Configuration.Provider.ProviderBase.Name%2A>기본 역할 공급자의.</xref:System.Configuration.Provider.ProviderBase.Name%2A> </xref:System.Web.Security.RolePrincipal.ProviderName%2A>       역할 관리 설정에 대 한 자세한 내용은 <xref:System.Web.Security.Roles>클래스</xref:System.Web.Security.Roles> 를 참조 하십시오."
  example:
  - "The following code example creates a new <xref:System.Web.Security.RolePrincipal> object. If <xref:System.Web.Security.Roles.CacheRolesInCookie%2A> is `true`, the example creates the <xref:System.Web.Security.RolePrincipal> with cookie information from the cookie identified by the <xref:System.Web.Security.Roles.CookieName%2A> property.  \n  \n [!code-cs[System.Web.Security.RolePrincipal#2](~/add/codesnippet/csharp/9eda904c-406a-4e24-aa64-_1.aspx)]\n [!code-vb[System.Web.Security.RolePrincipal#2](~/add/codesnippet/visualbasic/9eda904c-406a-4e24-aa64-_1.aspx)]"
  syntax:
    content: public RolePrincipal (System.Security.Principal.IIdentity identity, string encryptedTicket);
    parameters:
    - id: identity
      type: System.Security.Principal.IIdentity
      description: "만들 사용자 id는 <xref href=&quot;System.Web.Security.RolePrincipal&quot;> </xref> 에 대 한 합니다."
    - id: encryptedTicket
      type: System.String
      description: "암호화 된 역할 정보를 포함 하는 문자열입니다."
  overload: System.Web.Security.RolePrincipal.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>identity</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>encryptedTicket</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.RolePrincipal.#ctor(System.String,System.Security.Principal.IIdentity)
  id: '#ctor(System.String,System.Security.Principal.IIdentity)'
  parent: System.Web.Security.RolePrincipal
  langs:
  - csharp
  name: RolePrincipal(String,IIdentity)
  nameWithType: RolePrincipal.RolePrincipal(String,IIdentity)
  fullName: System.Web.Security.RolePrincipal.RolePrincipal(String,IIdentity)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "인스턴스화하는 <xref href=&quot;System.Web.Security.RolePrincipal&quot;> </xref> 지정 된 개체 <code> identity </code> 사용 하 여 지정 된 <code> providerName </code>합니다."
  remarks: "이 RolePrincipal 생성자 오버이 로드에서는 새 <xref:System.Web.Security.RolePrincipal>개체 및 해당 속성 값을 초기화 합니다.</xref:System.Web.Security.RolePrincipal> <xref:System.Web.Security.RolePrincipal.ProviderName%2A>속성에 지정 된 값으로 설정 되 고 `providerName` 매개 변수.</xref:System.Web.Security.RolePrincipal.ProviderName%2A>       역할 관리 설정에 대 한 자세한 내용은 <xref:System.Web.Security.Roles>클래스</xref:System.Web.Security.Roles> 를 참조 하십시오."
  syntax:
    content: public RolePrincipal (string providerName, System.Security.Principal.IIdentity identity);
    parameters:
    - id: providerName
      type: System.String
      description: "사용자에 대 한 역할 공급자의 이름입니다."
    - id: identity
      type: System.Security.Principal.IIdentity
      description: "만들 사용자 id는 <xref href=&quot;System.Web.Security.RolePrincipal&quot;> </xref> 에 대 한 합니다."
  overload: System.Web.Security.RolePrincipal.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>identity</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>providerName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -또는- <code>providerName</code> 는 응용 프로그램에 대 한 구성에서 존재 하지 않는 역할 공급자를 나타냅니다."
  platform:
  - net462
- uid: System.Web.Security.RolePrincipal.#ctor(System.String,System.Security.Principal.IIdentity,System.String)
  id: '#ctor(System.String,System.Security.Principal.IIdentity,System.String)'
  parent: System.Web.Security.RolePrincipal
  langs:
  - csharp
  name: RolePrincipal(String,IIdentity,String)
  nameWithType: RolePrincipal.RolePrincipal(String,IIdentity,String)
  fullName: System.Web.Security.RolePrincipal.RolePrincipal(String,IIdentity,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "인스턴스화하는 <xref href=&quot;System.Web.Security.RolePrincipal&quot;> </xref> 지정 된 개체 <code> identity </code> 사용 하 여 지정 된 <code> providerName </code> 및 지정 된 위치에서 역할 정보 <code> encryptedTicket </code>합니다."
  remarks: "이 오버 로드는 <xref:System.Web.Security.RolePrincipal.%23ctor%2A>생성자에서는 새 <xref:System.Web.Security.RolePrincipal>개체 및 해당 속성 값을 초기화 합니다.</xref:System.Web.Security.RolePrincipal> </xref:System.Web.Security.RolePrincipal.%23ctor%2A> 현재 사용자에 대 한 역할 정보는 읽기 제공 된 `encryptedTicket` 사용 하 여 캐시는 <xref:System.Web.Security.RolePrincipal>개체입니다.</xref:System.Web.Security.RolePrincipal> <xref:System.Web.Security.RolePrincipal.ProviderName%2A>속성에 지정 된 값으로 설정 되 고 `providerName` 매개 변수.</xref:System.Web.Security.RolePrincipal.ProviderName%2A>       역할 관리 설정에 대 한 자세한 내용은 <xref:System.Web.Security.Roles>클래스</xref:System.Web.Security.Roles> 를 참조 하십시오."
  syntax:
    content: public RolePrincipal (string providerName, System.Security.Principal.IIdentity identity, string encryptedTicket);
    parameters:
    - id: providerName
      type: System.String
      description: "사용자에 대 한 역할 공급자의 이름입니다."
    - id: identity
      type: System.Security.Principal.IIdentity
      description: "만들 사용자 id는 <xref href=&quot;System.Web.Security.RolePrincipal&quot;> </xref> 에 대 한 합니다."
    - id: encryptedTicket
      type: System.String
      description: "암호화 된 역할 정보를 포함 하는 문자열입니다."
  overload: System.Web.Security.RolePrincipal.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>identity</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>encryptedTicket</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>providerName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -또는- <code>providerName</code> 는 응용 프로그램에 대 한 구성에서 존재 하지 않는 역할 공급자를 나타냅니다."
  platform:
  - net462
- uid: System.Web.Security.RolePrincipal.CachedListChanged
  id: CachedListChanged
  parent: System.Web.Security.RolePrincipal
  langs:
  - csharp
  name: CachedListChanged
  nameWithType: RolePrincipal.CachedListChanged
  fullName: System.Web.Security.RolePrincipal.CachedListChanged
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "역할 이름 목록을 함께 캐시 여부를 나타내는 값을 가져옵니다는 <xref href=&quot;System.Web.Security.RolePrincipal&quot;> </xref> 개체를 수정 합니다."
  remarks: "CachedListChanged 속성은 반환 `true` 기본 역할에서 역할 이름을 검색 된 후 <xref:System.Web.Security.Roles.Provider%2A>하 여 캐시에 추가 <xref:System.Web.Security.RolePrincipal.GetRoles%2A>메서드를 경우 또는 <xref:System.Web.Security.RolePrincipal.IsInRole%2A>메서드 호출의 <xref:System.Web.Security.RoleProvider.IsUserInRole%2A>기본 역할 공급자의 다음의 응답을 받을 `true`때문에 전달 된 역할 이름에는 <xref:System.Web.Security.RolePrincipal.IsInRole%2A>캐시에 추가 되 고 메서드.</xref:System.Web.Security.RolePrincipal.IsInRole%2A> </xref:System.Web.Security.RoleProvider.IsUserInRole%2A> </xref:System.Web.Security.RolePrincipal.IsInRole%2A> </xref:System.Web.Security.RolePrincipal.GetRoles%2A> </xref:System.Web.Security.Roles.Provider%2A>       CachedListChanged 속성은도 true를 반환 하는 경우 <xref:System.Web.Security.Roles.CookieSlidingExpiration%2A>로 설정 된 `true` 및 <xref:System.Web.Security.RolePrincipal.ExpireDate%2A>가 지나서 새 <xref:System.Web.Security.RolePrincipal.ExpireDate%2A>설정.</xref:System.Web.Security.RolePrincipal.ExpireDate%2A> </xref:System.Web.Security.RolePrincipal.ExpireDate%2A> </xref:System.Web.Security.Roles.CookieSlidingExpiration%2A>"
  example:
  - "The following example displays role-caching information for the current user if role management is enabled. For information on enabling role management, see the <xref:System.Web.Security.Roles> class.  \n  \n [!code-cs[System.Web.Security.RolePrincipal#1](~/add/codesnippet/csharp/p-system.web.security.ro_6_1.aspx)]\n [!code-vb[System.Web.Security.RolePrincipal#1](~/add/codesnippet/visualbasic/p-system.web.security.ro_6_1.aspx)]"
  syntax:
    content: public bool CachedListChanged { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>역할 이름 목록을 함께 캐시 하는 경우는 <xref href=&quot;System.Web.Security.RolePrincipal&quot;> </xref> 개체에 수정 되지 않았으면, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Security.RolePrincipal.CachedListChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.RolePrincipal.CookiePath
  id: CookiePath
  parent: System.Web.Security.RolePrincipal
  langs:
  - csharp
  name: CookiePath
  nameWithType: RolePrincipal.CookiePath
  fullName: System.Web.Security.RolePrincipal.CookiePath
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "캐시 된 역할 이름 쿠키에 대 한 경로 가져옵니다."
  remarks: "CookiePath 속성의 값을 반환 된 `cookiePath` ASP.NET 응용 프로그램에 대 한 Web.config 파일에서 특성입니다. 쿠키 경로에 대 한 자세한 내용은 <xref:System.Web.HttpCookie.Path%2A>.</xref:System.Web.HttpCookie.Path%2A> 을 참조 하십시오."
  example:
  - "The following example displays role-caching information for the current user if role management is enabled. For information on enabling role management, see the <xref:System.Web.Security.Roles> class.  \n  \n [!code-cs[System.Web.Security.RolePrincipal#1](~/add/codesnippet/csharp/p-system.web.security.ro_8_1.aspx)]\n [!code-vb[System.Web.Security.RolePrincipal#1](~/add/codesnippet/visualbasic/p-system.web.security.ro_8_1.aspx)]"
  syntax:
    content: public string CookiePath { get; }
    return:
      type: System.String
      description: "역할 이름이 캐시 되는 쿠키의 경로입니다. 기본값은 /입니다."
  overload: System.Web.Security.RolePrincipal.CookiePath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.RolePrincipal.Expired
  id: Expired
  parent: System.Web.Security.RolePrincipal
  langs:
  - csharp
  name: Expired
  nameWithType: RolePrincipal.Expired
  fullName: System.Web.Security.RolePrincipal.Expired
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "역할 쿠키가 만료 되었는지 여부를 나타내는 값을 가져옵니다."
  remarks: "만료 됨 속성은 반환 된 `Boolean` 역할 쿠키가 만료 되었는지 여부를 나타내는 값을 기반으로 <xref:System.Web.Security.RolePrincipal.ExpireDate%2A>현재 날짜 및 시간.</xref:System.Web.Security.RolePrincipal.ExpireDate%2A>"
  example:
  - "The following example displays role-caching information for the current user if role management is enabled. For information on enabling role management, see the <xref:System.Web.Security.Roles> class.  \n  \n [!code-cs[System.Web.Security.RolePrincipal#1](~/add/codesnippet/csharp/p-system.web.security.ro_1_1.aspx)]\n [!code-vb[System.Web.Security.RolePrincipal#1](~/add/codesnippet/visualbasic/p-system.web.security.ro_1_1.aspx)]"
  syntax:
    content: public bool Expired { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>역할 쿠키가 만료 되 면 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Security.RolePrincipal.Expired*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.RolePrincipal.ExpireDate
  id: ExpireDate
  parent: System.Web.Security.RolePrincipal
  langs:
  - csharp
  name: ExpireDate
  nameWithType: RolePrincipal.ExpireDate
  fullName: System.Web.Security.RolePrincipal.ExpireDate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "역할 쿠키가 만료 될 시기 시간과 날짜를 가져옵니다."
  remarks: ''
  example:
  - "The following example displays role-caching information for the current user if role management is enabled. For information on enabling role management, see the <xref:System.Web.Security.Roles> class.  \n  \n [!code-cs[System.Web.Security.RolePrincipal#1](~/add/codesnippet/csharp/p-system.web.security.ro_11_1.aspx)]\n [!code-vb[System.Web.Security.RolePrincipal#1](~/add/codesnippet/visualbasic/p-system.web.security.ro_11_1.aspx)]"
  syntax:
    content: public DateTime ExpireDate { get; }
    return:
      type: System.DateTime
      description: "<xref:System.DateTime>역할 쿠키가 만료 될 때 값.</xref:System.DateTime>"
  overload: System.Web.Security.RolePrincipal.ExpireDate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.RolePrincipal.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Web.Security.RolePrincipal
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: RolePrincipal.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Web.Security.RolePrincipal.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "정보를 표시 한 <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> 지정된 된 스트리밍 컨텍스트를 사용 하 여 대상 개체를 직렬화 하는 데 필요한 데이터가 들어 있는 개체입니다."
  remarks: "자세한 내용은 참조는 <xref:System.Runtime.Serialization.ISerializable.GetObjectData%28System.Runtime.Serialization.SerializationInfo%2CSystem.Runtime.Serialization.StreamingContext%29>메서드.</xref:System.Runtime.Serialization.ISerializable.GetObjectData%28System.Runtime.Serialization.SerializationInfo%2CSystem.Runtime.Serialization.StreamingContext%29>"
  syntax:
    content: protected override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> 데이터로 채울 개체입니다."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "이 serialization에 대 한 대상입니다."
  overload: System.Web.Security.RolePrincipal.GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.RolePrincipal.GetRoles
  id: GetRoles
  parent: System.Web.Security.RolePrincipal
  langs:
  - csharp
  name: GetRoles()
  nameWithType: RolePrincipal.GetRoles()
  fullName: System.Web.Security.RolePrincipal.GetRoles()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "역할의 목록을 가져옵니다는 <xref href=&quot;System.Web.Security.RolePrincipal&quot;> </xref> 의 구성원입니다."
  remarks: "경우 <xref:System.Web.Security.Roles.CacheRolesInCookie%2A>은 `true` 나타내는 사용자에 대 한 역할 이름이 캐시 된는 <xref:System.Web.Security.RolePrincipal>, GetRoles 메서드가 캐시에는 사용자가 멤버인 역할 이름 목록을 반환 합니다.</xref:System.Web.Security.RolePrincipal> </xref:System.Web.Security.Roles.CacheRolesInCookie%2A> 역할 이름이 캐시 되지 않은 경우 다음 GetRoles 메서드 목록을 반환 <xref:System.Web.Security.Roles.Provider%2A>.</xref:System.Web.Security.Roles.Provider%2A> 기본 역할에서의 구성원 인 사용자 역할 이름 현재 역할 이름만 <xref:System.Web.Security.Roles.ApplicationName%2A>반환 됩니다.</xref:System.Web.Security.Roles.ApplicationName%2A> 역할 이름에 캐시 되었는지 여부를 확인 하 고 <xref:System.Web.Security.RolePrincipal>개체를 검사는 <xref:System.Web.Security.RolePrincipal.IsRoleListCached%2A>속성.</xref:System.Web.Security.RolePrincipal.IsRoleListCached%2A> </xref:System.Web.Security.RolePrincipal>"
  example:
  - "The following code example displays the roles that the logged-on user is a member of.  \n  \n [!code-cs[System.Web.Security.RolePrincipal#7](~/add/codesnippet/csharp/m-system.web.security.ro_3_1.aspx)]\n [!code-vb[System.Web.Security.RolePrincipal#7](~/add/codesnippet/visualbasic/m-system.web.security.ro_3_1.aspx)]"
  syntax:
    content: public string[] GetRoles ();
    parameters: []
    return:
      type: System.String[]
      description: "역할의 목록을 하는 <xref href=&quot;System.Web.Security.RolePrincipal&quot;> </xref> 의 구성원입니다."
  overload: System.Web.Security.RolePrincipal.GetRoles*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "<xref:System.Web.Security.RolePrincipal.Identity*>속성은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Web.Security.RolePrincipal.Identity*>"
  platform:
  - net462
- uid: System.Web.Security.RolePrincipal.Identity
  id: Identity
  parent: System.Web.Security.RolePrincipal
  langs:
  - csharp
  name: Identity
  nameWithType: RolePrincipal.Identity
  fullName: System.Web.Security.RolePrincipal.Identity
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "현재 HTTP 요청에 대 한 보안 id를 가져옵니다."
  remarks: "Id는 <xref:System.Web.Security.RolePrincipal>개체를 설정 하는 경우는 <xref:System.Web.Security.RolePrincipal>생성자를 호출 합니다.</xref:System.Web.Security.RolePrincipal> </xref:System.Web.Security.RolePrincipal>"
  example:
  - "The following example displays role-caching information for the current user if role management is enabled. For information on enabling role management, see the <xref:System.Web.Security.Roles> class.  \n  \n [!code-cs[System.Web.Security.RolePrincipal#1](~/add/codesnippet/csharp/p-system.web.security.ro_2_1.aspx)]\n [!code-vb[System.Web.Security.RolePrincipal#1](~/add/codesnippet/visualbasic/p-system.web.security.ro_2_1.aspx)]"
  syntax:
    content: public override System.Security.Principal.IIdentity Identity { get; }
    return:
      type: System.Security.Principal.IIdentity
      description: "현재 HTTP 요청에 대 한 보안 id입니다."
  overload: System.Web.Security.RolePrincipal.Identity*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.RolePrincipal.IsInRole(System.String)
  id: IsInRole(System.String)
  parent: System.Web.Security.RolePrincipal
  langs:
  - csharp
  name: IsInRole(String)
  nameWithType: RolePrincipal.IsInRole(String)
  fullName: System.Web.Security.RolePrincipal.IsInRole(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "가 나타내는 사용자가 있는지 여부를 나타내는 값을 가져옵니다는 <xref href=&quot;System.Web.Security.RolePrincipal&quot;> </xref> 가 지정 된 역할입니다."
  remarks: "첫 번째 확인 작업 IsInRole는 <xref:System.Web.Security.RolePrincipal.IsRoleListCached%2A>속성을 캐시 된 현재 사용자에 대 한 역할 이름 목록을 사용할 수 있는지 확인 합니다.</xref:System.Web.Security.RolePrincipal.IsRoleListCached%2A> 경우는 <xref:System.Web.Security.RolePrincipal.IsRoleListCached%2A>속성은 `true`, 하는 지정된 된 역할에 대 한 캐시 된 목록을 확인 합니다.</xref:System.Web.Security.RolePrincipal.IsRoleListCached%2A> 반환 하는 경우 IsInRole 메서드는 캐시 된 목록에서 지정된 된 역할을 찾습니다, `true`합니다.       IsInRole 지정된 된 역할을 찾을 수 없는 경우 호출 하는 <xref:System.Web.Security.RoleProvider.GetRolesForUser%2A>기본 메서드 <xref:System.Web.Security.Roles.Provider%2A>구성 된 데이터 원본에서 역할에 연결 된 사용자 이름 인지 확인 하는 인스턴스 <xref:System.Web.Security.Roles.ApplicationName%2A>값.</xref:System.Web.Security.Roles.ApplicationName%2A> </xref:System.Web.Security.Roles.Provider%2A> </xref:System.Web.Security.RoleProvider.GetRolesForUser%2A>"
  example:
  - "The following code example checks to see whether the logged-on user is in the Administrators role before allowing the user to view user roles.  \n  \n [!code-vb[System.Web.Security.RolePrincipal#8](~/add/codesnippet/visualbasic/m-system.web.security.ro_6_1.aspx)]\n [!code-cs[System.Web.Security.RolePrincipal#8](~/add/codesnippet/csharp/m-system.web.security.ro_6_1.aspx)]"
  syntax:
    content: public override bool IsInRole (string role);
    parameters:
    - id: role
      type: System.String
      description: "검색할 역할입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>으로 표시 되는 사용자는 <xref href=&quot;System.Web.Security.RolePrincipal&quot;> </xref> ; 지정된 된 역할에는 이렇게 하지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Security.RolePrincipal.IsInRole*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "<xref:System.Web.Security.RolePrincipal.Identity*>속성은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Web.Security.RolePrincipal.Identity*>"
  platform:
  - net462
- uid: System.Web.Security.RolePrincipal.IsRoleListCached
  id: IsRoleListCached
  parent: System.Web.Security.RolePrincipal
  langs:
  - csharp
  name: IsRoleListCached
  nameWithType: RolePrincipal.IsRoleListCached
  fullName: System.Web.Security.RolePrincipal.IsRoleListCached
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "사용자에 대 한 역할의 목록을 쿠키에 캐시 되었고 있는지 여부를 나타내는 값을 가져옵니다."
  remarks: "경우는 `cacheRolesInCookie` 응용 프로그램으로 설정 되어 Web.config 파일의 특성 `true`, 현재 사용자에 대 한 역할 이름 목록을 특정 역할에 사용자 구성원 자격을 선택 하는 쿠키에 기록 됨. IsRoleListCached 속성 역할 이름 쿠키에 썼는지 여부를 나타냅니다. 유의 경우에는 `cacheRolesInCookie` 구성 특성 수 있습니다 `true`, IsRoleListCached 속성을 반환 하지 않는 `true` 될 때까지 역할 정보를 쿠키에 기록 된 후입니다. 경우 역할이 검사를 수행 하는 사용자에 대 한, IsRoleListCached 돌아갑니다 `false`합니다."
  example:
  - "The following example displays role-caching information for the current user if role management is enabled. For information on enabling role management, see the <xref:System.Web.Security.Roles> class.  \n  \n [!code-cs[System.Web.Security.RolePrincipal#1](~/add/codesnippet/csharp/p-system.web.security.ro_3_1.aspx)]\n [!code-vb[System.Web.Security.RolePrincipal#1](~/add/codesnippet/visualbasic/p-system.web.security.ro_3_1.aspx)]"
  syntax:
    content: public bool IsRoleListCached { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>역할 이름 쿠키에 캐시 되 면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Security.RolePrincipal.IsRoleListCached*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.RolePrincipal.IssueDate
  id: IssueDate
  parent: System.Web.Security.RolePrincipal
  langs:
  - csharp
  name: IssueDate
  nameWithType: RolePrincipal.IssueDate
  fullName: System.Web.Security.RolePrincipal.IssueDate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "역할 쿠키가 실행 된 시간과 날짜를 가져옵니다."
  remarks: ''
  example:
  - "The following example displays role-caching information for the current user if role management is enabled. For information on enabling role management, see the <xref:System.Web.Security.Roles> class.  \n  \n [!code-cs[System.Web.Security.RolePrincipal#1](~/add/codesnippet/csharp/p-system.web.security.ro_7_1.aspx)]\n [!code-vb[System.Web.Security.RolePrincipal#1](~/add/codesnippet/visualbasic/p-system.web.security.ro_7_1.aspx)]"
  syntax:
    content: public DateTime IssueDate { get; }
    return:
      type: System.DateTime
      description: "<xref:System.DateTime>역할 쿠키가 발행.</xref:System.DateTime>"
  overload: System.Web.Security.RolePrincipal.IssueDate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.RolePrincipal.ProviderName
  id: ProviderName
  parent: System.Web.Security.RolePrincipal
  langs:
  - csharp
  name: ProviderName
  nameWithType: RolePrincipal.ProviderName
  fullName: System.Web.Security.RolePrincipal.ProviderName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "저장 하 고 사용자에 대 한 역할 정보를 검색 하는 역할 공급자의 이름을 가져옵니다."
  remarks: "ProviderName 속성으로 나타내는 사용자에 대 한 역할 정보를 관리 하는 역할 공급자의 이름을 노출는 <xref:System.Web.Security.RolePrincipal>개체입니다.</xref:System.Web.Security.RolePrincipal> 이렇게 하면 사용자에 대 한 특정 역할 공급자 인스턴스를 사용 하 여 액세스할 수 있습니다는 <xref:System.Web.Security.Roles.Providers%2A>의 속성은 <xref:System.Web.Security.Roles>클래스 공급자는 응용 프로그램에 대 한 기본 공급자 인지에 관계 없이.</xref:System.Web.Security.Roles> </xref:System.Web.Security.Roles.Providers%2A> 예를 들어, 사용 하는 메서드를 만들 수 있습니다는 <xref:System.Web.Security.RolePrincipal>입력로 나타낸된 사용자에 대 한 역할의 목록을 반환 합니다.</xref:System.Web.Security.RolePrincipal> 에 대 한 역할의 목록을 반환 하는 적절 한 역할 공급자를 사용을 확인할 수 있습니다는 <xref:System.Web.Security.RolePrincipal>호출 하 여는 <xref:System.Web.Security.RoleProvider.GetRolesForUser%2A>에서 역할 공급자의 메서드는 <xref:System.Web.Security.Roles.Providers%2A>ProviderName 속성 값으로 인덱싱된 컬렉션.</xref:System.Web.Security.Roles.Providers%2A> </xref:System.Web.Security.RoleProvider.GetRolesForUser%2A> </xref:System.Web.Security.RolePrincipal>       채우는 <xref:System.Web.Security.RolePrincipal>개체 각 요청을 사용 해야 합니다는 <xref:System.Web.Security.RoleManagerModule.GetRoles>응용 프로그램의 Global.asax 파일에 정의 된 이벤트 처리기.</xref:System.Web.Security.RoleManagerModule.GetRoles> </xref:System.Web.Security.RolePrincipal>"
  syntax:
    content: public string ProviderName { get; }
    return:
      type: System.String
      description: "저장 하 고 사용자에 대 한 역할 정보를 검색 하는 역할 공급자의 이름입니다."
  overload: System.Web.Security.RolePrincipal.ProviderName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.RolePrincipal.SetDirty
  id: SetDirty
  parent: System.Web.Security.RolePrincipal
  langs:
  - csharp
  name: SetDirty()
  nameWithType: RolePrincipal.SetDirty()
  fullName: System.Web.Security.RolePrincipal.SetDirty()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "캐시 된 역할 목록 변경 된 것으로 표시 합니다."
  remarks: "SetDirty 메서드 표시를 설정 하 여 변경 된 것으로 캐시 된 역할 목록 <xref:System.Web.Security.RolePrincipal.CachedListChanged%2A>를 `true` 및 <xref:System.Web.Security.RolePrincipal.IsRoleListCached%2A>를 `false`.</xref:System.Web.Security.RolePrincipal.IsRoleListCached%2A> </xref:System.Web.Security.RolePrincipal.CachedListChanged%2A>"
  syntax:
    content: public void SetDirty ();
    parameters: []
  overload: System.Web.Security.RolePrincipal.SetDirty*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.RolePrincipal.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  isEii: true
  parent: System.Web.Security.RolePrincipal
  langs:
  - csharp
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: RolePrincipal.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Web.Security.RolePrincipal.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "이 멤버에 대 한 참조 <xref:System.Runtime.Serialization.ISerializationSurrogate.GetObjectData*>.</xref:System.Runtime.Serialization.ISerializationSurrogate.GetObjectData*>"
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Web.Security.RolePrincipal>인스턴스로 캐스팅 되는 <xref:System.Runtime.Serialization.ISerializable>인터페이스.</xref:System.Runtime.Serialization.ISerializable> </xref:System.Web.Security.RolePrincipal>"
  syntax:
    content: void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> 데이터로 채울 합니다."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "이 serialization에 대 한 대상입니다."
  overload: System.Web.Security.RolePrincipal.System#Runtime#Serialization#ISerializable#GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.RolePrincipal.ToEncryptedTicket
  id: ToEncryptedTicket
  parent: System.Web.Security.RolePrincipal
  langs:
  - csharp
  name: ToEncryptedTicket()
  nameWithType: RolePrincipal.ToEncryptedTicket()
  fullName: System.Web.Security.RolePrincipal.ToEncryptedTicket()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "함께 캐시 역할 정보를 반환 된 <xref href=&quot;System.Web.Security.RolePrincipal&quot;> </xref> <xref:System.Web.Security.Roles.CookieProtectionValue*>.</xref:System.Web.Security.Roles.CookieProtectionValue*> 를 기반으로 암호화 된 개체"
  remarks: "ToEncryptedTicket 메서드에 의해 반환 된 값은 역할 쿠키에 저장 됩니다 때 <xref:System.Web.Security.Roles.CacheRolesInCookie%2A>은 `true`.</xref:System.Web.Security.Roles.CacheRolesInCookie%2A>"
  example:
  - "The following code example writes the results of the ToEncryptedTicket method to the roles cookie.  \n  \n [!code-cs[System.Web.Security.RolePrincipal#6](~/add/codesnippet/csharp/m-system.web.security.ro_8_1.aspx)]\n [!code-vb[System.Web.Security.RolePrincipal#6](~/add/codesnippet/visualbasic/m-system.web.security.ro_8_1.aspx)]"
  syntax:
    content: public string ToEncryptedTicket ();
    parameters: []
    return:
      type: System.String
      description: "함께 역할 정보 캐시는 <xref href=&quot;System.Web.Security.RolePrincipal&quot;> </xref> <xref:System.Web.Security.Roles.CookieProtectionValue*>.</xref:System.Web.Security.Roles.CookieProtectionValue*> 를 기반으로 암호화 된 개체"
  overload: System.Web.Security.RolePrincipal.ToEncryptedTicket*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.RolePrincipal.Version
  id: Version
  parent: System.Web.Security.RolePrincipal
  langs:
  - csharp
  name: Version
  nameWithType: RolePrincipal.Version
  fullName: System.Web.Security.RolePrincipal.Version
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "역할 쿠키가의 버전 번호를 가져옵니다."
  remarks: "을 역할 쿠키에 버전 번호를 포함 하 여 ASP.NET의 이후 릴리스에서 역할 쿠키의 형식이 수정 하 고 Version 속성을 사용 하 여 서로 다른 형식 간의 구분할 수 있습니다."
  example:
  - "The following example displays role-caching information for the current user if role management is enabled. For information on enabling role management, see the <xref:System.Web.Security.Roles> class.  \n  \n [!code-cs[System.Web.Security.RolePrincipal#1](~/add/codesnippet/csharp/p-system.web.security.ro_9_1.aspx)]\n [!code-vb[System.Web.Security.RolePrincipal#1](~/add/codesnippet/visualbasic/p-system.web.security.ro_9_1.aspx)]"
  syntax:
    content: public int Version { get; }
    return:
      type: System.Int32
      description: "역할 쿠키가의 버전 번호입니다."
  overload: System.Web.Security.RolePrincipal.Version*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Claims.ClaimsPrincipal
  isExternal: false
  name: System.Security.Claims.ClaimsPrincipal
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Configuration.Provider.ProviderException
  parent: System.Configuration.Provider
  isExternal: false
  name: ProviderException
  nameWithType: ProviderException
  fullName: System.Configuration.Provider.ProviderException
- uid: System.Web.Security.RolePrincipal.#ctor(System.Security.Principal.IIdentity)
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: RolePrincipal(IIdentity)
  nameWithType: RolePrincipal.RolePrincipal(IIdentity)
  fullName: System.Web.Security.RolePrincipal.RolePrincipal(IIdentity)
- uid: System.Security.Principal.IIdentity
  parent: System.Security.Principal
  isExternal: true
  name: IIdentity
  nameWithType: IIdentity
  fullName: System.Security.Principal.IIdentity
- uid: System.Web.Security.RolePrincipal.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: RolePrincipal(SerializationInfo,StreamingContext)
  nameWithType: RolePrincipal.RolePrincipal(SerializationInfo,StreamingContext)
  fullName: System.Web.Security.RolePrincipal.RolePrincipal(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Web.Security.RolePrincipal.#ctor(System.Security.Principal.IIdentity,System.String)
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: RolePrincipal(IIdentity,String)
  nameWithType: RolePrincipal.RolePrincipal(IIdentity,String)
  fullName: System.Web.Security.RolePrincipal.RolePrincipal(IIdentity,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Security.RolePrincipal.#ctor(System.String,System.Security.Principal.IIdentity)
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: RolePrincipal(String,IIdentity)
  nameWithType: RolePrincipal.RolePrincipal(String,IIdentity)
  fullName: System.Web.Security.RolePrincipal.RolePrincipal(String,IIdentity)
- uid: System.Web.Security.RolePrincipal.#ctor(System.String,System.Security.Principal.IIdentity,System.String)
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: RolePrincipal(String,IIdentity,String)
  nameWithType: RolePrincipal.RolePrincipal(String,IIdentity,String)
  fullName: System.Web.Security.RolePrincipal.RolePrincipal(String,IIdentity,String)
- uid: System.Web.Security.RolePrincipal.CachedListChanged
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: CachedListChanged
  nameWithType: RolePrincipal.CachedListChanged
  fullName: System.Web.Security.RolePrincipal.CachedListChanged
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Security.RolePrincipal.CookiePath
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: CookiePath
  nameWithType: RolePrincipal.CookiePath
  fullName: System.Web.Security.RolePrincipal.CookiePath
- uid: System.Web.Security.RolePrincipal.Expired
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: Expired
  nameWithType: RolePrincipal.Expired
  fullName: System.Web.Security.RolePrincipal.Expired
- uid: System.Web.Security.RolePrincipal.ExpireDate
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: ExpireDate
  nameWithType: RolePrincipal.ExpireDate
  fullName: System.Web.Security.RolePrincipal.ExpireDate
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Web.Security.RolePrincipal.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: RolePrincipal.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Web.Security.RolePrincipal.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Web.Security.RolePrincipal.GetRoles
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: GetRoles()
  nameWithType: RolePrincipal.GetRoles()
  fullName: System.Web.Security.RolePrincipal.GetRoles()
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.Security.RolePrincipal.Identity
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: Identity
  nameWithType: RolePrincipal.Identity
  fullName: System.Web.Security.RolePrincipal.Identity
- uid: System.Web.Security.RolePrincipal.IsInRole(System.String)
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: IsInRole(String)
  nameWithType: RolePrincipal.IsInRole(String)
  fullName: System.Web.Security.RolePrincipal.IsInRole(String)
- uid: System.Web.Security.RolePrincipal.IsRoleListCached
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: IsRoleListCached
  nameWithType: RolePrincipal.IsRoleListCached
  fullName: System.Web.Security.RolePrincipal.IsRoleListCached
- uid: System.Web.Security.RolePrincipal.IssueDate
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: IssueDate
  nameWithType: RolePrincipal.IssueDate
  fullName: System.Web.Security.RolePrincipal.IssueDate
- uid: System.Web.Security.RolePrincipal.ProviderName
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: ProviderName
  nameWithType: RolePrincipal.ProviderName
  fullName: System.Web.Security.RolePrincipal.ProviderName
- uid: System.Web.Security.RolePrincipal.SetDirty
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: SetDirty()
  nameWithType: RolePrincipal.SetDirty()
  fullName: System.Web.Security.RolePrincipal.SetDirty()
- uid: System.Web.Security.RolePrincipal.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: RolePrincipal.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Web.Security.RolePrincipal.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Web.Security.RolePrincipal.ToEncryptedTicket
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: ToEncryptedTicket()
  nameWithType: RolePrincipal.ToEncryptedTicket()
  fullName: System.Web.Security.RolePrincipal.ToEncryptedTicket()
- uid: System.Web.Security.RolePrincipal.Version
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: Version
  nameWithType: RolePrincipal.Version
  fullName: System.Web.Security.RolePrincipal.Version
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.Security.RolePrincipal.#ctor*
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: RolePrincipal
  nameWithType: RolePrincipal.RolePrincipal
- uid: System.Web.Security.RolePrincipal.CachedListChanged*
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: CachedListChanged
  nameWithType: RolePrincipal.CachedListChanged
- uid: System.Web.Security.RolePrincipal.CookiePath*
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: CookiePath
  nameWithType: RolePrincipal.CookiePath
- uid: System.Web.Security.RolePrincipal.Expired*
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: Expired
  nameWithType: RolePrincipal.Expired
- uid: System.Web.Security.RolePrincipal.ExpireDate*
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: ExpireDate
  nameWithType: RolePrincipal.ExpireDate
- uid: System.Web.Security.RolePrincipal.GetObjectData*
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: GetObjectData
  nameWithType: RolePrincipal.GetObjectData
- uid: System.Web.Security.RolePrincipal.GetRoles*
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: GetRoles
  nameWithType: RolePrincipal.GetRoles
- uid: System.Web.Security.RolePrincipal.Identity*
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: Identity
  nameWithType: RolePrincipal.Identity
- uid: System.Web.Security.RolePrincipal.IsInRole*
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: IsInRole
  nameWithType: RolePrincipal.IsInRole
- uid: System.Web.Security.RolePrincipal.IsRoleListCached*
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: IsRoleListCached
  nameWithType: RolePrincipal.IsRoleListCached
- uid: System.Web.Security.RolePrincipal.IssueDate*
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: IssueDate
  nameWithType: RolePrincipal.IssueDate
- uid: System.Web.Security.RolePrincipal.ProviderName*
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: ProviderName
  nameWithType: RolePrincipal.ProviderName
- uid: System.Web.Security.RolePrincipal.SetDirty*
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: SetDirty
  nameWithType: RolePrincipal.SetDirty
- uid: System.Web.Security.RolePrincipal.System#Runtime#Serialization#ISerializable#GetObjectData*
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData
  nameWithType: RolePrincipal.System.Runtime.Serialization.ISerializable.GetObjectData
- uid: System.Web.Security.RolePrincipal.ToEncryptedTicket*
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: ToEncryptedTicket
  nameWithType: RolePrincipal.ToEncryptedTicket
- uid: System.Web.Security.RolePrincipal.Version*
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: Version
  nameWithType: RolePrincipal.Version
