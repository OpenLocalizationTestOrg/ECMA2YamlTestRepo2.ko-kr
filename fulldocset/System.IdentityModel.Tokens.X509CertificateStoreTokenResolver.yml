### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver
  id: X509CertificateStoreTokenResolver
  children:
  - System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.#ctor
  - System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.#ctor(System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.StoreLocation)
  - System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.#ctor(System.String,System.Security.Cryptography.X509Certificates.StoreLocation)
  - System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.StoreLocation
  - System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.StoreName
  - System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)
  - System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)
  - System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)
  langs:
  - csharp
  name: X509CertificateStoreTokenResolver
  nameWithType: X509CertificateStoreTokenResolver
  fullName: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver
  type: Class
  summary: "형식의 토큰을 확인할 수 있는 토큰 확인 자가 나타내는 <xref href=&quot;System.IdentityModel.Tokens.X509SecurityToken&quot;> </xref> 지정 된 X.509 인증서 저장소에 대 한 합니다."
  syntax:
    content: 'public class X509CertificateStoreTokenResolver : System.IdentityModel.Selectors.SecurityTokenResolver'
  inheritance:
  - System.Object
  - System.IdentityModel.Selectors.SecurityTokenResolver
  implements: []
  inheritedMembers:
  - System.IdentityModel.Selectors.SecurityTokenResolver.CreateDefaultSecurityTokenResolver(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SecurityToken},System.Boolean)
  - System.IdentityModel.Selectors.SecurityTokenResolver.LoadCustomConfiguration(System.Xml.XmlNodeList)
  - System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  - System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifier)
  - System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  - System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)
  - System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)
  - System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.#ctor
  id: '#ctor'
  parent: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver
  langs:
  - csharp
  name: X509CertificateStoreTokenResolver()
  nameWithType: X509CertificateStoreTokenResolver.X509CertificateStoreTokenResolver()
  fullName: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.X509CertificateStoreTokenResolver()
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.IdentityModel.Tokens.X509CertificateStoreTokenResolver&quot;> </xref> 기본 X.509 인증서 저장소를 사용 하 여 클래스입니다."
  remarks: "기본 저장소 위치는 <xref:System.Security.Cryptography.X509Certificates.StoreLocation>.</xref:System.Security.Cryptography.X509Certificates.StoreLocation> 기본 저장소 이름은 <xref:System.Security.Cryptography.X509Certificates.StoreName>입니다.</xref:System.Security.Cryptography.X509Certificates.StoreName>"
  syntax:
    content: public X509CertificateStoreTokenResolver ();
    parameters: []
  overload: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.#ctor(System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.StoreLocation)
  id: '#ctor(System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.StoreLocation)'
  parent: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver
  langs:
  - csharp
  name: X509CertificateStoreTokenResolver(StoreName,StoreLocation)
  nameWithType: X509CertificateStoreTokenResolver.X509CertificateStoreTokenResolver(StoreName,StoreLocation)
  fullName: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.X509CertificateStoreTokenResolver(StoreName,StoreLocation)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.IdentityModel.Tokens.X509CertificateStoreTokenResolver&quot;> </xref> X.509 인증서를 사용 하는 클래스는 지정된 된 위치와 함께 저장 하 고 토큰을 확인 하려면 이름을 합니다."
  syntax:
    content: public X509CertificateStoreTokenResolver (System.Security.Cryptography.X509Certificates.StoreName storeName, System.Security.Cryptography.X509Certificates.StoreLocation storeLocation);
    parameters:
    - id: storeName
      type: System.Security.Cryptography.X509Certificates.StoreName
      description: "저장소는 X.509 인증서의 이름을 지정 하는 열거형 값 중 하나입니다."
    - id: storeLocation
      type: System.Security.Cryptography.X509Certificates.StoreLocation
      description: "저장소는 X.509 인증서의 위치를 지정 하는 열거형 값 중 하나입니다."
  overload: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.#ctor(System.String,System.Security.Cryptography.X509Certificates.StoreLocation)
  id: '#ctor(System.String,System.Security.Cryptography.X509Certificates.StoreLocation)'
  parent: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver
  langs:
  - csharp
  name: X509CertificateStoreTokenResolver(String,StoreLocation)
  nameWithType: X509CertificateStoreTokenResolver.X509CertificateStoreTokenResolver(String,StoreLocation)
  fullName: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.X509CertificateStoreTokenResolver(String,StoreLocation)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.IdentityModel.Tokens.X509CertificateStoreTokenResolver&quot;> </xref> X.509 인증서를 사용 하는 클래스는 지정된 된 위치와 함께 저장 하 고 토큰을 확인 하려면 이름을 합니다."
  syntax:
    content: public X509CertificateStoreTokenResolver (string storeName, System.Security.Cryptography.X509Certificates.StoreLocation storeLocation);
    parameters:
    - id: storeName
      type: System.String
      description: "X.509 인증서 저장소의 이름입니다."
    - id: storeLocation
      type: System.Security.Cryptography.X509Certificates.StoreLocation
      description: "저장소는 X.509 인증서의 위치를 지정 하는 열거형 값 중 하나입니다."
  overload: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>storeLocation</code><xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 또는 빈 문자열입니다."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.StoreLocation
  id: StoreLocation
  parent: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver
  langs:
  - csharp
  name: StoreLocation
  nameWithType: X509CertificateStoreTokenResolver.StoreLocation
  fullName: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.StoreLocation
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "이 토큰 확인자에 의해 사용 되는 X.509 인증서 저장소의 위치를 가져옵니다."
  syntax:
    content: public System.Security.Cryptography.X509Certificates.StoreLocation StoreLocation { get; }
    return:
      type: System.Security.Cryptography.X509Certificates.StoreLocation
      description: "저장소는 X.509 인증서의 위치를 지정 하는 열거형 값 중 하나입니다."
  overload: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.StoreLocation*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.StoreName
  id: StoreName
  parent: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver
  langs:
  - csharp
  name: StoreName
  nameWithType: X509CertificateStoreTokenResolver.StoreName
  fullName: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.StoreName
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "이 토큰 확인자에 의해 사용 되는 X.509 인증서 저장소의 이름을 가져옵니다."
  syntax:
    content: public string StoreName { get; }
    return:
      type: System.String
      description: "이 토큰 확인자에 의해 사용 되는 X.509 인증서 저장소의 이름입니다."
  overload: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.StoreName*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)
  id: TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)
  parent: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver
  langs:
  - csharp
  name: TryResolveSecurityKeyCore(SecurityKeyIdentifierClause,SecurityKey)
  nameWithType: X509CertificateStoreTokenResolver.TryResolveSecurityKeyCore(SecurityKeyIdentifierClause,SecurityKey)
  fullName: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.TryResolveSecurityKeyCore(SecurityKeyIdentifierClause,SecurityKey)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "보안 키에 지정 된 키 식별자 절을 확인 하려고 합니다."
  syntax:
    content: protected override bool TryResolveSecurityKeyCore (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, out System.IdentityModel.Tokens.SecurityKey key);
    parameters:
    - id: keyIdentifierClause
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: "보안 키를 확인할 수 있는 키 식별자 절."
    - id: key
      type: System.IdentityModel.Tokens.SecurityKey
      description: "이 메서드가 반환 될 때 키 식별자 절에서 해결 된 보안 키를 포함 합니다. 이 매개 변수 처리 되 상태로 있습니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>키 식별자 절이 성공적으로 해결 됩니다. 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.TryResolveSecurityKeyCore*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>keyIdentifierClause</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)
  id: TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)
  parent: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver
  langs:
  - csharp
  name: TryResolveTokenCore(SecurityKeyIdentifier,SecurityToken)
  nameWithType: X509CertificateStoreTokenResolver.TryResolveTokenCore(SecurityKeyIdentifier,SecurityToken)
  fullName: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.TryResolveTokenCore(SecurityKeyIdentifier,SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "보안 토큰을 지정된 된 키 식별자를 확인합니다."
  syntax:
    content: protected override bool TryResolveTokenCore (System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier, out System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: keyIdentifier
      type: System.IdentityModel.Tokens.SecurityKeyIdentifier
      description: "해결 하려면 키 식별자입니다."
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "이 메서드가 반환 될 때 키 식별자를 확인 하는 보안 토큰을 포함 합니다. 이 매개 변수 처리 되 상태로 있습니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>키 식별자가 성공적으로 해결 됩니다. 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.TryResolveTokenCore*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>keyIdentifier</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)
  id: TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)
  parent: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver
  langs:
  - csharp
  name: TryResolveTokenCore(SecurityKeyIdentifierClause,SecurityToken)
  nameWithType: X509CertificateStoreTokenResolver.TryResolveTokenCore(SecurityKeyIdentifierClause,SecurityToken)
  fullName: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.TryResolveTokenCore(SecurityKeyIdentifierClause,SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "보안 토큰을 지정 된 키 식별자 절을 확인합니다."
  syntax:
    content: protected override bool TryResolveTokenCore (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, out System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: keyIdentifierClause
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: "해결 하려면 키 식별자 절입니다."
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "이 메서드가 반환 될 때 키 식별자 절을 확인 하는 보안 토큰을 포함 합니다. 이 매개 변수 처리 되 상태로 있습니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>키 식별자 절이 성공적으로 해결 됩니다. 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.TryResolveTokenCore*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>keyIdentifierClause</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.IdentityModel.Selectors.SecurityTokenResolver
  isExternal: false
  name: System.IdentityModel.Selectors.SecurityTokenResolver
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.#ctor
  parent: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver
  isExternal: false
  name: X509CertificateStoreTokenResolver()
  nameWithType: X509CertificateStoreTokenResolver.X509CertificateStoreTokenResolver()
  fullName: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.X509CertificateStoreTokenResolver()
- uid: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.#ctor(System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.StoreLocation)
  parent: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver
  isExternal: false
  name: X509CertificateStoreTokenResolver(StoreName,StoreLocation)
  nameWithType: X509CertificateStoreTokenResolver.X509CertificateStoreTokenResolver(StoreName,StoreLocation)
  fullName: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.X509CertificateStoreTokenResolver(StoreName,StoreLocation)
- uid: System.Security.Cryptography.X509Certificates.StoreName
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: StoreName
  nameWithType: StoreName
  fullName: System.Security.Cryptography.X509Certificates.StoreName
- uid: System.Security.Cryptography.X509Certificates.StoreLocation
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: StoreLocation
  nameWithType: StoreLocation
  fullName: System.Security.Cryptography.X509Certificates.StoreLocation
- uid: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.#ctor(System.String,System.Security.Cryptography.X509Certificates.StoreLocation)
  parent: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver
  isExternal: false
  name: X509CertificateStoreTokenResolver(String,StoreLocation)
  nameWithType: X509CertificateStoreTokenResolver.X509CertificateStoreTokenResolver(String,StoreLocation)
  fullName: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.X509CertificateStoreTokenResolver(String,StoreLocation)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.StoreLocation
  parent: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver
  isExternal: false
  name: StoreLocation
  nameWithType: X509CertificateStoreTokenResolver.StoreLocation
  fullName: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.StoreLocation
- uid: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.StoreName
  parent: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver
  isExternal: false
  name: StoreName
  nameWithType: X509CertificateStoreTokenResolver.StoreName
  fullName: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.StoreName
- uid: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)
  parent: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver
  isExternal: false
  name: TryResolveSecurityKeyCore(SecurityKeyIdentifierClause,SecurityKey)
  nameWithType: X509CertificateStoreTokenResolver.TryResolveSecurityKeyCore(SecurityKeyIdentifierClause,SecurityKey)
  fullName: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.TryResolveSecurityKeyCore(SecurityKeyIdentifierClause,SecurityKey)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKeyIdentifierClause
  nameWithType: SecurityKeyIdentifierClause
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
- uid: System.IdentityModel.Tokens.SecurityKey
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKey
  nameWithType: SecurityKey
  fullName: System.IdentityModel.Tokens.SecurityKey
- uid: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)
  parent: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver
  isExternal: false
  name: TryResolveTokenCore(SecurityKeyIdentifier,SecurityToken)
  nameWithType: X509CertificateStoreTokenResolver.TryResolveTokenCore(SecurityKeyIdentifier,SecurityToken)
  fullName: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.TryResolveTokenCore(SecurityKeyIdentifier,SecurityToken)
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKeyIdentifier
  nameWithType: SecurityKeyIdentifier
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier
- uid: System.IdentityModel.Tokens.SecurityToken
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityToken
  nameWithType: SecurityToken
  fullName: System.IdentityModel.Tokens.SecurityToken
- uid: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)
  parent: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver
  isExternal: false
  name: TryResolveTokenCore(SecurityKeyIdentifierClause,SecurityToken)
  nameWithType: X509CertificateStoreTokenResolver.TryResolveTokenCore(SecurityKeyIdentifierClause,SecurityToken)
  fullName: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.TryResolveTokenCore(SecurityKeyIdentifierClause,SecurityToken)
- uid: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.#ctor*
  parent: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver
  isExternal: false
  name: X509CertificateStoreTokenResolver
  nameWithType: X509CertificateStoreTokenResolver.X509CertificateStoreTokenResolver
- uid: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.StoreLocation*
  parent: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver
  isExternal: false
  name: StoreLocation
  nameWithType: X509CertificateStoreTokenResolver.StoreLocation
- uid: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.StoreName*
  parent: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver
  isExternal: false
  name: StoreName
  nameWithType: X509CertificateStoreTokenResolver.StoreName
- uid: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.TryResolveSecurityKeyCore*
  parent: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver
  isExternal: false
  name: TryResolveSecurityKeyCore
  nameWithType: X509CertificateStoreTokenResolver.TryResolveSecurityKeyCore
- uid: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.TryResolveTokenCore*
  parent: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver
  isExternal: false
  name: TryResolveTokenCore
  nameWithType: X509CertificateStoreTokenResolver.TryResolveTokenCore
