### YamlMime:ManagedReference
items:
- uid: System.Runtime.Remoting.Contexts.SynchronizationAttribute
  id: SynchronizationAttribute
  children:
  - System.Runtime.Remoting.Contexts.SynchronizationAttribute.#ctor
  - System.Runtime.Remoting.Contexts.SynchronizationAttribute.#ctor(System.Boolean)
  - System.Runtime.Remoting.Contexts.SynchronizationAttribute.#ctor(System.Int32)
  - System.Runtime.Remoting.Contexts.SynchronizationAttribute.#ctor(System.Int32,System.Boolean)
  - System.Runtime.Remoting.Contexts.SynchronizationAttribute.GetClientContextSink(System.Runtime.Remoting.Messaging.IMessageSink)
  - System.Runtime.Remoting.Contexts.SynchronizationAttribute.GetPropertiesForNewContext(System.Runtime.Remoting.Activation.IConstructionCallMessage)
  - System.Runtime.Remoting.Contexts.SynchronizationAttribute.GetServerContextSink(System.Runtime.Remoting.Messaging.IMessageSink)
  - System.Runtime.Remoting.Contexts.SynchronizationAttribute.IsContextOK(System.Runtime.Remoting.Contexts.Context,System.Runtime.Remoting.Activation.IConstructionCallMessage)
  - System.Runtime.Remoting.Contexts.SynchronizationAttribute.IsReEntrant
  - System.Runtime.Remoting.Contexts.SynchronizationAttribute.Locked
  - System.Runtime.Remoting.Contexts.SynchronizationAttribute.NOT_SUPPORTED
  - System.Runtime.Remoting.Contexts.SynchronizationAttribute.REQUIRED
  - System.Runtime.Remoting.Contexts.SynchronizationAttribute.REQUIRES_NEW
  - System.Runtime.Remoting.Contexts.SynchronizationAttribute.SUPPORTED
  langs:
  - csharp
  name: SynchronizationAttribute
  nameWithType: SynchronizationAttribute
  fullName: System.Runtime.Remoting.Contexts.SynchronizationAttribute
  type: Class
  summary: "현재 컨텍스트와 동일한 인스턴스를 공유 하는 모든 컨텍스트에 대 한 동기화 도메인을 적용 합니다."
  remarks: "When this attribute is applied to an object, only one thread can be executing in all contexts that share an instance of this property. This is done by contributing sinks that intercept and serialize incoming calls for the respective contexts. If the property is marked for reentry, then callouts are intercepted too. The callout interception allows other waiting threads to enter the synchronization domain for maximal throughput.  \n  \n> [!NOTE]\n>  There are two classes named `SynchronizationAttribute` : one in the <xref:System.Runtime.Remoting.Contexts> namespace, and the other in the <xref:System.EnterpriseServices> namespace. The <xref:System.EnterpriseServices.SynchronizationAttribute?displayProperty=fullName> class supports only synchronous calls, and can be used only with serviced components. (For more information on serviced components, see [&#91;\\<topic://cpconservicedcomponentoverview>&#93;](http://msdn.microsoft.com/en-us/5133a620-9c8c-47bd-8e36-130e722fe463).) The SynchronizationAttribute supports both synchronous and asynchronous calls, and can be used only with context bound objects. (For more information on context bound objects, see the <xref:System.ContextBoundObject> class.)  \n  \n> [!NOTE]\n>  This class makes a link demand and an inheritance demand at the class level. A <xref:System.Security.SecurityException> is thrown when either the immediate caller or the derived class does not have infrastructure permission. For details about security demands, see [Link Demands](~/add/includes/ajax-current-ext-md.md) and [Inheritance Demands](http://msdn.microsoft.com/en-us/28b9adbb-8f08-4f10-b856-dbf59eb932d9)."
  example:
  - "The following code example demonstrates the use of the SynchronizationAttribute. For the complete example code, see the example for the <xref:System.Runtime.Remoting.Messaging.AsyncResult> class.  \n  \n [!code-cpp[AsyncResult.NewExamples#2](~/add/codesnippet/cpp/t-system.runtime.remotin_11_1.cpp)]\n [!code-vb[AsyncResult.NewExamples#2](~/add/codesnippet/visualbasic/t-system.runtime.remotin_11_1.vb)]\n [!code-cs[AsyncResult.NewExamples#2](~/add/codesnippet/csharp/t-system.runtime.remotin_11_1.cs)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Class)]

      [System.Runtime.InteropServices.ComVisible(true)]

      [System.Security.SecurityCritical]

      public class SynchronizationAttribute : System.Runtime.Remoting.Contexts.ContextAttribute, System.Runtime.Remoting.Contexts.IContributeClientContextSink, System.Runtime.Remoting.Contexts.IContributeServerContextSink
  inheritance:
  - System.Attribute
  - System.Runtime.Remoting.Contexts.ContextAttribute
  implements:
  - System.Runtime.Remoting.Contexts.IContributeClientContextSink
  - System.Runtime.Remoting.Contexts.IContributeServerContextSink
  inheritedMembers:
  - System.Runtime.Remoting.Contexts.ContextAttribute.AttributeName
  - System.Runtime.Remoting.Contexts.ContextAttribute.Equals(System.Object)
  - System.Runtime.Remoting.Contexts.ContextAttribute.Freeze(System.Runtime.Remoting.Contexts.Context)
  - System.Runtime.Remoting.Contexts.ContextAttribute.GetHashCode
  - System.Runtime.Remoting.Contexts.ContextAttribute.IsNewContextOK(System.Runtime.Remoting.Contexts.Context)
  - System.Runtime.Remoting.Contexts.ContextAttribute.Name
  platform:
  - net462
- uid: System.Runtime.Remoting.Contexts.SynchronizationAttribute.#ctor
  id: '#ctor'
  parent: System.Runtime.Remoting.Contexts.SynchronizationAttribute
  langs:
  - csharp
  name: SynchronizationAttribute()
  nameWithType: SynchronizationAttribute.SynchronizationAttribute()
  fullName: System.Runtime.Remoting.Contexts.SynchronizationAttribute.SynchronizationAttribute()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Contexts
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Runtime.Remoting.Contexts.SynchronizationAttribute&quot;> </xref> 클래스 기본값을 사용 합니다."
  syntax:
    content: public SynchronizationAttribute ();
    parameters: []
  overload: System.Runtime.Remoting.Contexts.SynchronizationAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Contexts.SynchronizationAttribute.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: System.Runtime.Remoting.Contexts.SynchronizationAttribute
  langs:
  - csharp
  name: SynchronizationAttribute(Boolean)
  nameWithType: SynchronizationAttribute.SynchronizationAttribute(Boolean)
  fullName: System.Runtime.Remoting.Contexts.SynchronizationAttribute.SynchronizationAttribute(Boolean)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Contexts
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Runtime.Remoting.Contexts.SynchronizationAttribute&quot;> </xref> 클래스 재진입이 필요한 지 여부를 나타내는 부울 값을 사용 합니다."
  remarks: "재진입이, 필요한 경우의 설명선은 <xref:System.Runtime.Remoting.Contexts.Context>를 가로챌 및 직렬화 해야 현재 특성이 적용 되는.</xref:System.Runtime.Remoting.Contexts.Context>"
  syntax:
    content: public SynchronizationAttribute (bool reEntrant);
    parameters:
    - id: reEntrant
      type: System.Boolean
      description: "재진입 필요한 지 여부를 나타내는 부울 값입니다."
  overload: System.Runtime.Remoting.Contexts.SynchronizationAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Contexts.SynchronizationAttribute.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Runtime.Remoting.Contexts.SynchronizationAttribute
  langs:
  - csharp
  name: SynchronizationAttribute(Int32)
  nameWithType: SynchronizationAttribute.SynchronizationAttribute(Int32)
  fullName: System.Runtime.Remoting.Contexts.SynchronizationAttribute.SynchronizationAttribute(Int32)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Contexts
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Runtime.Remoting.Contexts.SynchronizationAttribute&quot;> </xref> 이 특성이 적용 되는 개체의 동작을 나타내는 플래그를 사용 하 여 클래스입니다."
  remarks: "`flag` 매개 변수 중 하나 여야 합니다 <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute.NOT_SUPPORTED>, <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute.SUPPORTED>, <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute.REQUIRED>, 또는 <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute.REQUIRES_NEW>.</xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute.REQUIRES_NEW> </xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute.REQUIRED> </xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute.SUPPORTED> </xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute.NOT_SUPPORTED>"
  syntax:
    content: public SynchronizationAttribute (int flag);
    parameters:
    - id: flag
      type: System.Int32
      description: "이 특성이 적용 되는 개체의 동작을 나타내는 정수 값입니다."
  overload: System.Runtime.Remoting.Contexts.SynchronizationAttribute.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> flag </code> 매개 변수 정의 된 플래그 중 하나 였습니다."
  platform:
  - net462
- uid: System.Runtime.Remoting.Contexts.SynchronizationAttribute.#ctor(System.Int32,System.Boolean)
  id: '#ctor(System.Int32,System.Boolean)'
  parent: System.Runtime.Remoting.Contexts.SynchronizationAttribute
  langs:
  - csharp
  name: SynchronizationAttribute(Int32,Boolean)
  nameWithType: SynchronizationAttribute.SynchronizationAttribute(Int32,Boolean)
  fullName: System.Runtime.Remoting.Contexts.SynchronizationAttribute.SynchronizationAttribute(Int32,Boolean)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Contexts
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Runtime.Remoting.Contexts.SynchronizationAttribute&quot;> </xref> 된,이 특성이 적용 되는 개체의 동작을 나타내는 플래그 및 재진입이 필요한 지 여부를 나타내는 부울 값입니다."
  remarks: "`flag` 매개 변수 중 하나 여야 합니다 <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute.NOT_SUPPORTED>, <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute.SUPPORTED>, <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute.REQUIRED>, 또는 <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute.REQUIRES_NEW>.</xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute.REQUIRES_NEW> </xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute.REQUIRED> </xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute.SUPPORTED> </xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute.NOT_SUPPORTED>"
  syntax:
    content: public SynchronizationAttribute (int flag, bool reEntrant);
    parameters:
    - id: flag
      type: System.Int32
      description: "이 특성이 적용 되는 개체의 동작을 나타내는 정수 값입니다."
    - id: reEntrant
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>재진입이 필요 하며, 설명선 가로챌 및 직렬화; 해야 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Runtime.Remoting.Contexts.SynchronizationAttribute.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> flag </code> 매개 변수 정의 된 플래그 중 하나 였습니다."
  platform:
  - net462
- uid: System.Runtime.Remoting.Contexts.SynchronizationAttribute.GetClientContextSink(System.Runtime.Remoting.Messaging.IMessageSink)
  id: GetClientContextSink(System.Runtime.Remoting.Messaging.IMessageSink)
  parent: System.Runtime.Remoting.Contexts.SynchronizationAttribute
  langs:
  - csharp
  name: GetClientContextSink(IMessageSink)
  nameWithType: SynchronizationAttribute.GetClientContextSink(IMessageSink)
  fullName: System.Runtime.Remoting.Contexts.SynchronizationAttribute.GetClientContextSink(IMessageSink)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Contexts
  summary: "설명선 싱크를 만들고 앞 제공된 된 원격 호출의 클라이언트 쪽에 있는 컨텍스트 경계에 싱크 체인에 연결 합니다."
  remarks: "현재 메서드는 <xref:System.Runtime.Remoting.Contexts.IContributeClientContextSink.GetClientContextSink%2A?displayProperty=fullName>안내 하십시오.</xref:System.Runtime.Remoting.Contexts.IContributeClientContextSink.GetClientContextSink%2A?displayProperty=fullName> 구현"
  syntax:
    content: public virtual System.Runtime.Remoting.Messaging.IMessageSink GetClientContextSink (System.Runtime.Remoting.Messaging.IMessageSink nextSink);
    parameters:
    - id: nextSink
      type: System.Runtime.Remoting.Messaging.IMessageSink
      description: "지금까지 구성 된 싱크 체인입니다."
    return:
      type: System.Runtime.Remoting.Messaging.IMessageSink
      description: "새 설명선 싱크과 복합 싱크 체인입니다."
  overload: System.Runtime.Remoting.Contexts.SynchronizationAttribute.GetClientContextSink*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Contexts.SynchronizationAttribute.GetPropertiesForNewContext(System.Runtime.Remoting.Activation.IConstructionCallMessage)
  id: GetPropertiesForNewContext(System.Runtime.Remoting.Activation.IConstructionCallMessage)
  parent: System.Runtime.Remoting.Contexts.SynchronizationAttribute
  langs:
  - csharp
  name: GetPropertiesForNewContext(IConstructionCallMessage)
  nameWithType: SynchronizationAttribute.GetPropertiesForNewContext(IConstructionCallMessage)
  fullName: System.Runtime.Remoting.Contexts.SynchronizationAttribute.GetPropertiesForNewContext(IConstructionCallMessage)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Contexts
  summary: "추가 <xref uid=&quot;langword_csharp_Synchronized&quot; name=&quot;Synchronized&quot; href=&quot;&quot;> </xref> 컨텍스트 속성을 지정한 <xref href=&quot;System.Runtime.Remoting.Activation.IConstructionCallMessage&quot;> </xref>합니다."
  syntax:
    content: public override void GetPropertiesForNewContext (System.Runtime.Remoting.Activation.IConstructionCallMessage ctorMsg);
    parameters:
    - id: ctorMsg
      type: System.Runtime.Remoting.Activation.IConstructionCallMessage
      description: "<xref href=&quot;System.Runtime.Remoting.Activation.IConstructionCallMessage&quot;> </xref> 속성을 추가할입니다."
  overload: System.Runtime.Remoting.Contexts.SynchronizationAttribute.GetPropertiesForNewContext*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Contexts.SynchronizationAttribute.GetServerContextSink(System.Runtime.Remoting.Messaging.IMessageSink)
  id: GetServerContextSink(System.Runtime.Remoting.Messaging.IMessageSink)
  parent: System.Runtime.Remoting.Contexts.SynchronizationAttribute
  langs:
  - csharp
  name: GetServerContextSink(IMessageSink)
  nameWithType: SynchronizationAttribute.GetServerContextSink(IMessageSink)
  fullName: System.Runtime.Remoting.Contexts.SynchronizationAttribute.GetServerContextSink(IMessageSink)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Contexts
  summary: "동기화 된 디스패치 싱크를 만들고 앞 제공 된 서버 쪽 원격 호출의 컨텍스트 경계에 싱크 체인에 연결 합니다."
  remarks: "현재 메서드는 <xref:System.Runtime.Remoting.Contexts.IContributeServerContextSink.GetServerContextSink%2A?displayProperty=fullName>안내 하십시오.</xref:System.Runtime.Remoting.Contexts.IContributeServerContextSink.GetServerContextSink%2A?displayProperty=fullName> 구현"
  syntax:
    content: public virtual System.Runtime.Remoting.Messaging.IMessageSink GetServerContextSink (System.Runtime.Remoting.Messaging.IMessageSink nextSink);
    parameters:
    - id: nextSink
      type: System.Runtime.Remoting.Messaging.IMessageSink
      description: "지금까지 구성 된 싱크 체인입니다."
    return:
      type: System.Runtime.Remoting.Messaging.IMessageSink
      description: "새 복합 싱크 체인 디스패치 싱크를 동기화 합니다."
  overload: System.Runtime.Remoting.Contexts.SynchronizationAttribute.GetServerContextSink*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Contexts.SynchronizationAttribute.IsContextOK(System.Runtime.Remoting.Contexts.Context,System.Runtime.Remoting.Activation.IConstructionCallMessage)
  id: IsContextOK(System.Runtime.Remoting.Contexts.Context,System.Runtime.Remoting.Activation.IConstructionCallMessage)
  parent: System.Runtime.Remoting.Contexts.SynchronizationAttribute
  langs:
  - csharp
  name: IsContextOK(Context,IConstructionCallMessage)
  nameWithType: SynchronizationAttribute.IsContextOK(Context,IConstructionCallMessage)
  fullName: System.Runtime.Remoting.Contexts.SynchronizationAttribute.IsContextOK(Context,IConstructionCallMessage)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Contexts
  summary: "컨텍스트 매개 변수 컨텍스트 특성의 요구 사항을 충족 하는지 여부를 나타내는 부울 값을 반환 합니다."
  syntax:
    content: public override bool IsContextOK (System.Runtime.Remoting.Contexts.Context ctx, System.Runtime.Remoting.Activation.IConstructionCallMessage msg);
    parameters:
    - id: ctx
      type: System.Runtime.Remoting.Contexts.Context
      description: "확인할 컨텍스트입니다."
    - id: msg
      type: System.Runtime.Remoting.Activation.IConstructionCallMessage
      description: "이 특성이 표시 된 컨텍스트 바인딩된 개체의 생성 시 수집 된 정보입니다. <xref href=&quot;System.Runtime.Remoting.Contexts.SynchronizationAttribute&quot;> </xref> 수 검사, 추가, 및 컨텍스트에 허용 되는 경우를 결정 하는 동안 컨텍스트에서 속성을 제거 합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>전달 된 컨텍스트가 확인 합니다. 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Runtime.Remoting.Contexts.SynchronizationAttribute.IsContextOK*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>ctx</code> or <code>msg</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Runtime.Remoting.Contexts.SynchronizationAttribute.IsReEntrant
  id: IsReEntrant
  parent: System.Runtime.Remoting.Contexts.SynchronizationAttribute
  langs:
  - csharp
  name: IsReEntrant
  nameWithType: SynchronizationAttribute.IsReEntrant
  fullName: System.Runtime.Remoting.Contexts.SynchronizationAttribute.IsReEntrant
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Contexts
  summary: "재진입이 필요한 지 여부를 나타내는 부울 값을 가져오거나 설정 합니다."
  remarks: "재진입이, 필요한 경우의 설명선은 <xref:System.Runtime.Remoting.Contexts.Context>를 가로챌 및 직렬화 해야 현재 특성이 적용 되는.</xref:System.Runtime.Remoting.Contexts.Context>"
  syntax:
    content: public virtual bool IsReEntrant { get; }
    return:
      type: System.Boolean
      description: "재진입 필요한 지 여부를 나타내는 부울 값입니다."
  overload: System.Runtime.Remoting.Contexts.SynchronizationAttribute.IsReEntrant*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Contexts.SynchronizationAttribute.Locked
  id: Locked
  parent: System.Runtime.Remoting.Contexts.SynchronizationAttribute
  langs:
  - csharp
  name: Locked
  nameWithType: SynchronizationAttribute.Locked
  fullName: System.Runtime.Remoting.Contexts.SynchronizationAttribute.Locked
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Contexts
  summary: "나타내는 부울 값을 가져오거나 여부는 <xref href=&quot;System.Runtime.Remoting.Contexts.Context&quot;> </xref> 의이 인스턴스를 구현 <xref href=&quot;System.Runtime.Remoting.Contexts.SynchronizationAttribute&quot;> </xref> 잠겨 있습니다."
  remarks: "<xref:System.Runtime.Remoting.Contexts.Context>가 잠겨 있으면 컨텍스트에서 현재 실행 중인 스레드 개체에 액세스할 수 있는 <xref:System.Runtime.Remoting.Contexts.Context>.</xref:System.Runtime.Remoting.Contexts.Context> 에</xref:System.Runtime.Remoting.Contexts.Context> 동기화 된 경우"
  syntax:
    content: public virtual bool Locked { get; set; }
    return:
      type: System.Boolean
      description: "나타내는 부울 값 여부는 <xref href=&quot;System.Runtime.Remoting.Contexts.Context&quot;> </xref> 의이 인스턴스를 구현 <xref href=&quot;System.Runtime.Remoting.Contexts.SynchronizationAttribute&quot;> </xref> 잠겨 있습니다."
  overload: System.Runtime.Remoting.Contexts.SynchronizationAttribute.Locked*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Contexts.SynchronizationAttribute.NOT_SUPPORTED
  id: NOT_SUPPORTED
  parent: System.Runtime.Remoting.Contexts.SynchronizationAttribute
  langs:
  - csharp
  name: NOT_SUPPORTED
  nameWithType: SynchronizationAttribute.NOT_SUPPORTED
  fullName: System.Runtime.Remoting.Contexts.SynchronizationAttribute.NOT_SUPPORTED
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Contexts
  summary: "동기화가 포함 된 컨텍스트에서이 특성이 적용 되는 클래스를 만들 수 없음을 나타냅니다. 이 필드는 상수입니다."
  syntax:
    content: public const int NOT_SUPPORTED = 1;
    return:
      type: System.Int32
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Contexts.SynchronizationAttribute.REQUIRED
  id: REQUIRED
  parent: System.Runtime.Remoting.Contexts.SynchronizationAttribute
  langs:
  - csharp
  name: REQUIRED
  nameWithType: SynchronizationAttribute.REQUIRED
  fullName: System.Runtime.Remoting.Contexts.SynchronizationAttribute.REQUIRED
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Contexts
  summary: "동기화가 포함 된 컨텍스트에서이 특성이 적용 되는 클래스를 만들어야 함을 나타냅니다. 이 필드는 상수입니다."
  syntax:
    content: public const int REQUIRED = 4;
    return:
      type: System.Int32
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Contexts.SynchronizationAttribute.REQUIRES_NEW
  id: REQUIRES_NEW
  parent: System.Runtime.Remoting.Contexts.SynchronizationAttribute
  langs:
  - csharp
  name: REQUIRES_NEW
  nameWithType: SynchronizationAttribute.REQUIRES_NEW
  fullName: System.Runtime.Remoting.Contexts.SynchronizationAttribute.REQUIRES_NEW
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Contexts
  summary: "이 특성이 적용 되는 클래스 해야 만들 수 있음을 나타냅니다 동기화 속성의 새 인스턴스를 컨텍스트에서 각 시간입니다. 이 필드는 상수입니다."
  syntax:
    content: public const int REQUIRES_NEW = 8;
    return:
      type: System.Int32
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Contexts.SynchronizationAttribute.SUPPORTED
  id: SUPPORTED
  parent: System.Runtime.Remoting.Contexts.SynchronizationAttribute
  langs:
  - csharp
  name: SUPPORTED
  nameWithType: SynchronizationAttribute.SUPPORTED
  fullName: System.Runtime.Remoting.Contexts.SynchronizationAttribute.SUPPORTED
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Contexts
  summary: "이 특성이 적용 되는 클래스는 컨텍스트 동기화에 있는지 여부에 종속 되어 있는지를 나타냅니다. 이 필드는 상수입니다."
  syntax:
    content: public const int SUPPORTED = 2;
    return:
      type: System.Int32
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Runtime.Remoting.Contexts.ContextAttribute
  isExternal: false
  name: System.Runtime.Remoting.Contexts.ContextAttribute
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Runtime.Remoting.Contexts.SynchronizationAttribute.#ctor
  parent: System.Runtime.Remoting.Contexts.SynchronizationAttribute
  isExternal: false
  name: SynchronizationAttribute()
  nameWithType: SynchronizationAttribute.SynchronizationAttribute()
  fullName: System.Runtime.Remoting.Contexts.SynchronizationAttribute.SynchronizationAttribute()
- uid: System.Runtime.Remoting.Contexts.SynchronizationAttribute.#ctor(System.Boolean)
  parent: System.Runtime.Remoting.Contexts.SynchronizationAttribute
  isExternal: false
  name: SynchronizationAttribute(Boolean)
  nameWithType: SynchronizationAttribute.SynchronizationAttribute(Boolean)
  fullName: System.Runtime.Remoting.Contexts.SynchronizationAttribute.SynchronizationAttribute(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Runtime.Remoting.Contexts.SynchronizationAttribute.#ctor(System.Int32)
  parent: System.Runtime.Remoting.Contexts.SynchronizationAttribute
  isExternal: false
  name: SynchronizationAttribute(Int32)
  nameWithType: SynchronizationAttribute.SynchronizationAttribute(Int32)
  fullName: System.Runtime.Remoting.Contexts.SynchronizationAttribute.SynchronizationAttribute(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Runtime.Remoting.Contexts.SynchronizationAttribute.#ctor(System.Int32,System.Boolean)
  parent: System.Runtime.Remoting.Contexts.SynchronizationAttribute
  isExternal: false
  name: SynchronizationAttribute(Int32,Boolean)
  nameWithType: SynchronizationAttribute.SynchronizationAttribute(Int32,Boolean)
  fullName: System.Runtime.Remoting.Contexts.SynchronizationAttribute.SynchronizationAttribute(Int32,Boolean)
- uid: System.Runtime.Remoting.Contexts.SynchronizationAttribute.GetClientContextSink(System.Runtime.Remoting.Messaging.IMessageSink)
  parent: System.Runtime.Remoting.Contexts.SynchronizationAttribute
  isExternal: false
  name: GetClientContextSink(IMessageSink)
  nameWithType: SynchronizationAttribute.GetClientContextSink(IMessageSink)
  fullName: System.Runtime.Remoting.Contexts.SynchronizationAttribute.GetClientContextSink(IMessageSink)
- uid: System.Runtime.Remoting.Messaging.IMessageSink
  parent: System.Runtime.Remoting.Messaging
  isExternal: false
  name: IMessageSink
  nameWithType: IMessageSink
  fullName: System.Runtime.Remoting.Messaging.IMessageSink
- uid: System.Runtime.Remoting.Contexts.SynchronizationAttribute.GetPropertiesForNewContext(System.Runtime.Remoting.Activation.IConstructionCallMessage)
  parent: System.Runtime.Remoting.Contexts.SynchronizationAttribute
  isExternal: false
  name: GetPropertiesForNewContext(IConstructionCallMessage)
  nameWithType: SynchronizationAttribute.GetPropertiesForNewContext(IConstructionCallMessage)
  fullName: System.Runtime.Remoting.Contexts.SynchronizationAttribute.GetPropertiesForNewContext(IConstructionCallMessage)
- uid: System.Runtime.Remoting.Activation.IConstructionCallMessage
  parent: System.Runtime.Remoting.Activation
  isExternal: false
  name: IConstructionCallMessage
  nameWithType: IConstructionCallMessage
  fullName: System.Runtime.Remoting.Activation.IConstructionCallMessage
- uid: System.Runtime.Remoting.Contexts.SynchronizationAttribute.GetServerContextSink(System.Runtime.Remoting.Messaging.IMessageSink)
  parent: System.Runtime.Remoting.Contexts.SynchronizationAttribute
  isExternal: false
  name: GetServerContextSink(IMessageSink)
  nameWithType: SynchronizationAttribute.GetServerContextSink(IMessageSink)
  fullName: System.Runtime.Remoting.Contexts.SynchronizationAttribute.GetServerContextSink(IMessageSink)
- uid: System.Runtime.Remoting.Contexts.SynchronizationAttribute.IsContextOK(System.Runtime.Remoting.Contexts.Context,System.Runtime.Remoting.Activation.IConstructionCallMessage)
  parent: System.Runtime.Remoting.Contexts.SynchronizationAttribute
  isExternal: false
  name: IsContextOK(Context,IConstructionCallMessage)
  nameWithType: SynchronizationAttribute.IsContextOK(Context,IConstructionCallMessage)
  fullName: System.Runtime.Remoting.Contexts.SynchronizationAttribute.IsContextOK(Context,IConstructionCallMessage)
- uid: System.Runtime.Remoting.Contexts.Context
  parent: System.Runtime.Remoting.Contexts
  isExternal: false
  name: Context
  nameWithType: Context
  fullName: System.Runtime.Remoting.Contexts.Context
- uid: System.Runtime.Remoting.Contexts.SynchronizationAttribute.IsReEntrant
  parent: System.Runtime.Remoting.Contexts.SynchronizationAttribute
  isExternal: false
  name: IsReEntrant
  nameWithType: SynchronizationAttribute.IsReEntrant
  fullName: System.Runtime.Remoting.Contexts.SynchronizationAttribute.IsReEntrant
- uid: System.Runtime.Remoting.Contexts.SynchronizationAttribute.Locked
  parent: System.Runtime.Remoting.Contexts.SynchronizationAttribute
  isExternal: false
  name: Locked
  nameWithType: SynchronizationAttribute.Locked
  fullName: System.Runtime.Remoting.Contexts.SynchronizationAttribute.Locked
- uid: System.Runtime.Remoting.Contexts.SynchronizationAttribute.NOT_SUPPORTED
  parent: System.Runtime.Remoting.Contexts.SynchronizationAttribute
  isExternal: false
  name: NOT_SUPPORTED
  nameWithType: SynchronizationAttribute.NOT_SUPPORTED
  fullName: System.Runtime.Remoting.Contexts.SynchronizationAttribute.NOT_SUPPORTED
- uid: System.Runtime.Remoting.Contexts.SynchronizationAttribute.REQUIRED
  parent: System.Runtime.Remoting.Contexts.SynchronizationAttribute
  isExternal: false
  name: REQUIRED
  nameWithType: SynchronizationAttribute.REQUIRED
  fullName: System.Runtime.Remoting.Contexts.SynchronizationAttribute.REQUIRED
- uid: System.Runtime.Remoting.Contexts.SynchronizationAttribute.REQUIRES_NEW
  parent: System.Runtime.Remoting.Contexts.SynchronizationAttribute
  isExternal: false
  name: REQUIRES_NEW
  nameWithType: SynchronizationAttribute.REQUIRES_NEW
  fullName: System.Runtime.Remoting.Contexts.SynchronizationAttribute.REQUIRES_NEW
- uid: System.Runtime.Remoting.Contexts.SynchronizationAttribute.SUPPORTED
  parent: System.Runtime.Remoting.Contexts.SynchronizationAttribute
  isExternal: false
  name: SUPPORTED
  nameWithType: SynchronizationAttribute.SUPPORTED
  fullName: System.Runtime.Remoting.Contexts.SynchronizationAttribute.SUPPORTED
- uid: System.Runtime.Remoting.Contexts.SynchronizationAttribute.#ctor*
  parent: System.Runtime.Remoting.Contexts.SynchronizationAttribute
  isExternal: false
  name: SynchronizationAttribute
  nameWithType: SynchronizationAttribute.SynchronizationAttribute
- uid: System.Runtime.Remoting.Contexts.SynchronizationAttribute.GetClientContextSink*
  parent: System.Runtime.Remoting.Contexts.SynchronizationAttribute
  isExternal: false
  name: GetClientContextSink
  nameWithType: SynchronizationAttribute.GetClientContextSink
- uid: System.Runtime.Remoting.Contexts.SynchronizationAttribute.GetPropertiesForNewContext*
  parent: System.Runtime.Remoting.Contexts.SynchronizationAttribute
  isExternal: false
  name: GetPropertiesForNewContext
  nameWithType: SynchronizationAttribute.GetPropertiesForNewContext
- uid: System.Runtime.Remoting.Contexts.SynchronizationAttribute.GetServerContextSink*
  parent: System.Runtime.Remoting.Contexts.SynchronizationAttribute
  isExternal: false
  name: GetServerContextSink
  nameWithType: SynchronizationAttribute.GetServerContextSink
- uid: System.Runtime.Remoting.Contexts.SynchronizationAttribute.IsContextOK*
  parent: System.Runtime.Remoting.Contexts.SynchronizationAttribute
  isExternal: false
  name: IsContextOK
  nameWithType: SynchronizationAttribute.IsContextOK
- uid: System.Runtime.Remoting.Contexts.SynchronizationAttribute.IsReEntrant*
  parent: System.Runtime.Remoting.Contexts.SynchronizationAttribute
  isExternal: false
  name: IsReEntrant
  nameWithType: SynchronizationAttribute.IsReEntrant
- uid: System.Runtime.Remoting.Contexts.SynchronizationAttribute.Locked*
  parent: System.Runtime.Remoting.Contexts.SynchronizationAttribute
  isExternal: false
  name: Locked
  nameWithType: SynchronizationAttribute.Locked
