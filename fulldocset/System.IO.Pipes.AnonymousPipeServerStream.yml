### YamlMime:ManagedReference
items:
- uid: System.IO.Pipes.AnonymousPipeServerStream
  id: AnonymousPipeServerStream
  children:
  - System.IO.Pipes.AnonymousPipeServerStream.#ctor
  - System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection)
  - System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability)
  - System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle,Microsoft.Win32.SafeHandles.SafePipeHandle)
  - System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32)
  - System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32,System.IO.Pipes.PipeSecurity)
  - System.IO.Pipes.AnonymousPipeServerStream.ClientSafePipeHandle
  - System.IO.Pipes.AnonymousPipeServerStream.Dispose(System.Boolean)
  - System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle
  - System.IO.Pipes.AnonymousPipeServerStream.Finalize
  - System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString
  - System.IO.Pipes.AnonymousPipeServerStream.ReadMode
  - System.IO.Pipes.AnonymousPipeServerStream.TransmissionMode
  langs:
  - csharp
  name: AnonymousPipeServerStream
  nameWithType: AnonymousPipeServerStream
  fullName: System.IO.Pipes.AnonymousPipeServerStream
  type: Class
  summary: "읽기 / 쓰기 작업을 지 원하는 동기 및 비동기 익명 파이프 주위의 스트림을 제공 합니다."
  remarks: "익명 파이프 안전 제공 시키고 프로세스 자식 및 부모 간의 프로세스 간 통신을 보호 합니다. AnonymousPipeServerStream 클래스에는 부모 프로세스를를 보내거나 자식 프로세스에서 정보를 받을 수 있습니다.       익명 파이프는 일반적으로 부모 및 자식 프로세스 간에 데이터를 전송 하는 명명 되지 않은 단방향 파이프 합니다. 익명 파이프는 항상 로컬입니다. 네트워크를 통해 사용할 수 없습니다. A <xref:System.IO.Pipes.PipeDirection>값 <xref:System.IO.Pipes.PipeDirection>익명 파이프 단방향 되도록 정의 하기 때문에 지원 되지 않습니다.</xref:System.IO.Pipes.PipeDirection> </xref:System.IO.Pipes.PipeDirection>       익명 파이프를 지원 하지 않는 <xref:System.IO.Pipes.PipeTransmissionMode>읽기 모드.</xref:System.IO.Pipes.PipeTransmissionMode>       익명 파이프의 클라이언트 쪽을 호출 하 여 서버 쪽에서 제공 하는 파이프 핸들에서 만들어야 합니다는 <xref:System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString%2A>메서드.</xref:System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString%2A> 그런 다음 문자열은 클라이언트 프로세스를 만들 때 매개 변수로 전달 됩니다. 클라이언트 프로세스에서 다음에 전달 된 <xref:System.IO.Pipes.AnonymousPipeClientStream>으로 생성자는 `pipeHandleAsString` 매개 변수.</xref:System.IO.Pipes.AnonymousPipeClientStream>       AnonymousPipeServerStream 개체가 사용 하 여 클라이언트 핸들을 삭제 해야 합니다는 <xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A>메서드는 클라이언트 종료 시 알림을 받을 수 있습니다.</xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A>      > [!NOTE] >에 대 한 [!INCLUDE[winxppro](~/add/includes/winxppro-md.md)] 및 [!INCLUDE[win2kserver](~/add/includes/win2kserver-md.md)], 최대 10 개의 파이프는 네트워크를 통해 동시에 연결할 수 있습니다."
  example:
  - "The following example demonstrates a way to send a string from a parent process to a child process using anonymous pipes. This example creates an AnonymousPipeServerStream object in a parent process with a <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection>. It also creates an <xref:System.IO.Pipes.AnonymousPipeClientStream> object in a child process with a <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection>. The parent process then sends a user-supplied string to the child process. The string is displayed to the console.  \n  \n This example is for the server process, which uses the AnonymousPipeServerStream class. For the entire code example, including the code for both the pipe client and server, see [How to: Use Anonymous Pipes for Local Interprocess Communication](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/add/codesnippet/csharp/t-system.io.pipes.anonym_1_1.cs)]\n [!code-vb[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/add/codesnippet/visualbasic/t-system.io.pipes.anonym_1_1.vb)]\n [!code-cpp[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/add/codesnippet/cpp/t-system.io.pipes.anonym_1_1.cpp)]"
  syntax:
    content: 'public sealed class AnonymousPipeServerStream : System.IO.Pipes.PipeStream'
  inheritance:
  - System.IO.Stream
  - System.IO.Pipes.PipeStream
  implements: []
  inheritedMembers:
  - System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.IO.Pipes.PipeStream.CanRead
  - System.IO.Pipes.PipeStream.CanSeek
  - System.IO.Pipes.PipeStream.CanWrite
  - System.IO.Pipes.PipeStream.CheckPipePropertyOperations
  - System.IO.Pipes.PipeStream.CheckReadOperations
  - System.IO.Pipes.PipeStream.CheckWriteOperations
  - System.IO.Pipes.PipeStream.EndRead(System.IAsyncResult)
  - System.IO.Pipes.PipeStream.EndWrite(System.IAsyncResult)
  - System.IO.Pipes.PipeStream.Flush
  - System.IO.Pipes.PipeStream.GetAccessControl
  - System.IO.Pipes.PipeStream.InBufferSize
  - System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)
  - System.IO.Pipes.PipeStream.IsAsync
  - System.IO.Pipes.PipeStream.IsConnected
  - System.IO.Pipes.PipeStream.IsHandleExposed
  - System.IO.Pipes.PipeStream.IsMessageComplete
  - System.IO.Pipes.PipeStream.Length
  - System.IO.Pipes.PipeStream.OutBufferSize
  - System.IO.Pipes.PipeStream.Position
  - System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)
  - System.IO.Pipes.PipeStream.ReadByte
  - System.IO.Pipes.PipeStream.SafePipeHandle
  - System.IO.Pipes.PipeStream.Seek(System.Int64,System.IO.SeekOrigin)
  - System.IO.Pipes.PipeStream.SetAccessControl(System.IO.Pipes.PipeSecurity)
  - System.IO.Pipes.PipeStream.SetLength(System.Int64)
  - System.IO.Pipes.PipeStream.WaitForPipeDrain
  - System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)
  - System.IO.Pipes.PipeStream.WriteByte(System.Byte)
  platform:
  - net462
- uid: System.IO.Pipes.AnonymousPipeServerStream.#ctor
  id: '#ctor'
  parent: System.IO.Pipes.AnonymousPipeServerStream
  langs:
  - csharp
  name: AnonymousPipeServerStream()
  nameWithType: AnonymousPipeServerStream.AnonymousPipeServerStream()
  fullName: System.IO.Pipes.AnonymousPipeServerStream.AnonymousPipeServerStream()
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.IO.Pipes.AnonymousPipeServerStream&quot;> </xref> 클래스입니다."
  remarks: "<xref:System.IO.Pipes.AnonymousPipeServerStream> <xref:System.IO.Pipes.PipeDirection>기본 방향 매개 변수는 <xref:System.IO.Pipes.PipeDirection>.</xref:System.IO.Pipes.PipeDirection> </xref:System.IO.Pipes.PipeDirection> 없는</xref:System.IO.Pipes.AnonymousPipeServerStream> 생성자 A <xref:System.IO.Pipes.PipeDirection>값 <xref:System.IO.Pipes.PipeDirection>익명 파이프 단방향 되도록 정의 하기 때문에 지원 되지 않습니다.</xref:System.IO.Pipes.PipeDirection> </xref:System.IO.Pipes.PipeDirection>       이 생성자는 <xref:System.IO.Pipes.AnonymousPipeServerStream>기본 버퍼 크기, 파이프 보안 없음 및 <xref:System.IO.HandleInheritability> <xref:System.IO.HandleInheritability>안내 하십시오.</xref:System.IO.HandleInheritability> 값</xref:System.IO.HandleInheritability> 를 갖는 개체</xref:System.IO.Pipes.AnonymousPipeServerStream> 를 만듭니다."
  syntax:
    content: public AnonymousPipeServerStream ();
    parameters: []
  overload: System.IO.Pipes.AnonymousPipeServerStream.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection)
  id: '#ctor(System.IO.Pipes.PipeDirection)'
  parent: System.IO.Pipes.AnonymousPipeServerStream
  langs:
  - csharp
  name: AnonymousPipeServerStream(PipeDirection)
  nameWithType: AnonymousPipeServerStream.AnonymousPipeServerStream(PipeDirection)
  fullName: System.IO.Pipes.AnonymousPipeServerStream.AnonymousPipeServerStream(PipeDirection)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.IO.Pipes.AnonymousPipeServerStream&quot;> </xref> 방향 지정 된 파이프를 사용 하 여 클래스입니다."
  remarks: "A <xref:System.IO.Pipes.PipeDirection>값 <xref:System.IO.Pipes.PipeDirection>익명 파이프 단방향 되도록 정의 하기 때문에 지원 되지 않습니다.</xref:System.IO.Pipes.PipeDirection> </xref:System.IO.Pipes.PipeDirection>       이 생성자는 <xref:System.IO.Pipes.AnonymousPipeServerStream>기본 버퍼 크기, 파이프 보안 없음 및 <xref:System.IO.HandleInheritability> <xref:System.IO.HandleInheritability>안내 하십시오.</xref:System.IO.HandleInheritability> 값</xref:System.IO.HandleInheritability> 를 갖는 개체</xref:System.IO.Pipes.AnonymousPipeServerStream> 를 만듭니다."
  syntax:
    content: public AnonymousPipeServerStream (System.IO.Pipes.PipeDirection direction);
    parameters:
    - id: direction
      type: System.IO.Pipes.PipeDirection
      description: "파이프의 방향을 결정 하는 열거형 값 중 하나입니다.       익명 파이프 될 수 있으며 한 방향으로 하므로 `direction` 로 설정할 수 없습니다 <xref href=&quot;System.IO.Pipes.PipeDirection&quot;> </xref>합니다."
  overload: System.IO.Pipes.AnonymousPipeServerStream.#ctor*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>direction</code>is set to <xref href=&quot;System.IO.Pipes.PipeDirection&quot;></xref>."
  platform:
  - net462
- uid: System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability)
  id: '#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability)'
  parent: System.IO.Pipes.AnonymousPipeServerStream
  langs:
  - csharp
  name: AnonymousPipeServerStream(PipeDirection,HandleInheritability)
  nameWithType: AnonymousPipeServerStream.AnonymousPipeServerStream(PipeDirection,HandleInheritability)
  fullName: System.IO.Pipes.AnonymousPipeServerStream.AnonymousPipeServerStream(PipeDirection,HandleInheritability)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.IO.Pipes.AnonymousPipeServerStream&quot;> </xref> 지정 된 파이프 방향 및 상속 모드를 사용 하 여 클래스입니다."
  remarks: "A <xref:System.IO.Pipes.PipeDirection>값 <xref:System.IO.Pipes.PipeDirection>익명 파이프 단방향 되도록 정의 하기 때문에 지원 되지 않습니다.</xref:System.IO.Pipes.PipeDirection> </xref:System.IO.Pipes.PipeDirection>       이 생성자는 <xref:System.IO.Pipes.AnonymousPipeServerStream>기본 버퍼 크기 및 파이프 보안이 없는 개체.</xref:System.IO.Pipes.AnonymousPipeServerStream>"
  example:
  - "The following example demonstrates a method to send a string from a parent process to a child process using anonymous pipes. In this example, an <xref:System.IO.Pipes.AnonymousPipeServerStream> object is created in a parent process with a <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection>.  \n  \n [!code-cs[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/add/codesnippet/csharp/d22da34b-b931-48af-8c21-_1.cs)]\n [!code-vb[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/add/codesnippet/visualbasic/d22da34b-b931-48af-8c21-_1.vb)]\n [!code-cpp[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/add/codesnippet/cpp/d22da34b-b931-48af-8c21-_1.cpp)]"
  syntax:
    content: public AnonymousPipeServerStream (System.IO.Pipes.PipeDirection direction, System.IO.HandleInheritability inheritability);
    parameters:
    - id: direction
      type: System.IO.Pipes.PipeDirection
      description: "파이프의 방향을 결정 하는 열거형 값 중 하나입니다.       익명 파이프 될 수 있으며 한 방향으로 하므로 `direction` 로 설정할 수 없습니다 <xref href=&quot;System.IO.Pipes.PipeDirection&quot;> </xref>합니다."
    - id: inheritability
      type: System.IO.HandleInheritability
      description: "자식 프로세스에 의해 기본 핸들을 상속할 수 있는지 여부를 결정 하는 열거형 값 중 하나입니다. 중 하나 <xref:System.IO.HandleInheritability>나 <xref:System.IO.HandleInheritability>.</xref:System.IO.HandleInheritability> </xref:System.IO.HandleInheritability> 로 설정 되어야 합니다."
  overload: System.IO.Pipes.AnonymousPipeServerStream.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>inheritability</code>설정 되지 않은 중 하나로 <xref:System.IO.HandleInheritability> 또는 <xref:System.IO.HandleInheritability>합니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>direction</code>is set to <xref href=&quot;System.IO.Pipes.PipeDirection&quot;></xref>."
  platform:
  - net462
- uid: System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle,Microsoft.Win32.SafeHandles.SafePipeHandle)
  id: '#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle,Microsoft.Win32.SafeHandles.SafePipeHandle)'
  parent: System.IO.Pipes.AnonymousPipeServerStream
  langs:
  - csharp
  name: AnonymousPipeServerStream(PipeDirection,SafePipeHandle,SafePipeHandle)
  nameWithType: AnonymousPipeServerStream.AnonymousPipeServerStream(PipeDirection,SafePipeHandle,SafePipeHandle)
  fullName: System.IO.Pipes.AnonymousPipeServerStream.AnonymousPipeServerStream(PipeDirection,SafePipeHandle,SafePipeHandle)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.IO.Pipes.AnonymousPipeServerStream&quot;> </xref> 지정된 된 파이프 핸들에서 클래스입니다."
  remarks: "A <xref:System.IO.Pipes.PipeDirection>값 <xref:System.IO.Pipes.PipeDirection>익명 파이프 단방향 되도록 정의 하기 때문에 지원 되지 않습니다.</xref:System.IO.Pipes.PipeDirection> </xref:System.IO.Pipes.PipeDirection>"
  syntax:
    content: public AnonymousPipeServerStream (System.IO.Pipes.PipeDirection direction, Microsoft.Win32.SafeHandles.SafePipeHandle serverSafePipeHandle, Microsoft.Win32.SafeHandles.SafePipeHandle clientSafePipeHandle);
    parameters:
    - id: direction
      type: System.IO.Pipes.PipeDirection
      description: "파이프의 방향을 결정 하는 열거형 값 중 하나입니다.       익명 파이프 될 수 있으며 한 방향으로 하므로 `direction` 로 설정할 수 없습니다 <xref href=&quot;System.IO.Pipes.PipeDirection&quot;> </xref>합니다."
    - id: serverSafePipeHandle
      type: Microsoft.Win32.SafeHandles.SafePipeHandle
      description: "이 파이프에 대 한 안전 하 게 처리 <xref href=&quot;System.IO.Pipes.AnonymousPipeServerStream&quot;> </xref> 개체가 캡슐화 됩니다."
    - id: clientSafePipeHandle
      type: Microsoft.Win32.SafeHandles.SafePipeHandle
      description: "에 대 한 안전한 핸들은 <xref href=&quot;System.IO.Pipes.AnonymousPipeClientStream&quot;> </xref> 개체입니다."
  overload: System.IO.Pipes.AnonymousPipeServerStream.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>serverSafePipeHandle</code>또는 <code>clientSafePipeHandle</code> 잘못 된 핸들입니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serverSafePipeHandle</code>or <code>clientSafePipeHandle</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>direction</code>is set to <xref href=&quot;System.IO.Pipes.PipeDirection&quot;></xref>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "디스크 오류와 같은 I/O 오류가 발생 했습니다.       -또는-스트림이 닫혔습니다."
  platform:
  - net462
- uid: System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32)
  id: '#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32)'
  parent: System.IO.Pipes.AnonymousPipeServerStream
  langs:
  - csharp
  name: AnonymousPipeServerStream(PipeDirection,HandleInheritability,Int32)
  nameWithType: AnonymousPipeServerStream.AnonymousPipeServerStream(PipeDirection,HandleInheritability,Int32)
  fullName: System.IO.Pipes.AnonymousPipeServerStream.AnonymousPipeServerStream(PipeDirection,HandleInheritability,Int32)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.IO.Pipes.AnonymousPipeServerStream&quot;> </xref> 된 지정 된 파이프 방향, 상속 모드 및 버퍼 크기입니다."
  remarks: "A <xref:System.IO.Pipes.PipeDirection>값 <xref:System.IO.Pipes.PipeDirection>익명 파이프 단방향 되도록 정의 하기 때문에 지원 되지 않습니다.</xref:System.IO.Pipes.PipeDirection> </xref:System.IO.Pipes.PipeDirection>       이 생성자는 <xref:System.IO.Pipes.AnonymousPipeServerStream>파이프 보안이 없는 개체.</xref:System.IO.Pipes.AnonymousPipeServerStream>"
  syntax:
    content: public AnonymousPipeServerStream (System.IO.Pipes.PipeDirection direction, System.IO.HandleInheritability inheritability, int bufferSize);
    parameters:
    - id: direction
      type: System.IO.Pipes.PipeDirection
      description: "파이프의 방향을 결정 하는 열거형 값 중 하나입니다.       익명 파이프 될 수 있으며 한 방향으로 하므로 `direction` 로 설정할 수 없습니다 <xref href=&quot;System.IO.Pipes.PipeDirection&quot;> </xref>합니다."
    - id: inheritability
      type: System.IO.HandleInheritability
      description: "자식 프로세스에 의해 기본 핸들을 상속할 수 있는지 여부를 결정 하는 열거형 값 중 하나입니다. 중 하나 <xref:System.IO.HandleInheritability>나 <xref:System.IO.HandleInheritability>.</xref:System.IO.HandleInheritability> </xref:System.IO.HandleInheritability> 로 설정 되어야 합니다."
    - id: bufferSize
      type: System.Int32
      description: "버퍼의 크기입니다. 이 값은 0 보다 크거나 이어야 합니다."
  overload: System.IO.Pipes.AnonymousPipeServerStream.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>inheritability</code>설정 되지 않은 중 하나로 <xref:System.IO.HandleInheritability> 또는 <xref:System.IO.HandleInheritability>합니다.       -또는- <code>bufferSize</code> 0 보다 작습니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>direction</code>is set to <xref href=&quot;System.IO.Pipes.PipeDirection&quot;></xref>."
  platform:
  - net462
- uid: System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32,System.IO.Pipes.PipeSecurity)
  id: '#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32,System.IO.Pipes.PipeSecurity)'
  parent: System.IO.Pipes.AnonymousPipeServerStream
  langs:
  - csharp
  name: AnonymousPipeServerStream(PipeDirection,HandleInheritability,Int32,PipeSecurity)
  nameWithType: AnonymousPipeServerStream.AnonymousPipeServerStream(PipeDirection,HandleInheritability,Int32,PipeSecurity)
  fullName: System.IO.Pipes.AnonymousPipeServerStream.AnonymousPipeServerStream(PipeDirection,HandleInheritability,Int32,PipeSecurity)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.IO.Pipes.AnonymousPipeServerStream&quot;> </xref> 된 지정 된 파이프 방향, 상속 모드, 버퍼 크기 및 파이프 보안 합니다."
  remarks: "A <xref:System.IO.Pipes.PipeDirection>값 <xref:System.IO.Pipes.PipeDirection>익명 파이프 단방향 되도록 정의 하기 때문에 지원 되지 않습니다.</xref:System.IO.Pipes.PipeDirection> </xref:System.IO.Pipes.PipeDirection>"
  syntax:
    content: public AnonymousPipeServerStream (System.IO.Pipes.PipeDirection direction, System.IO.HandleInheritability inheritability, int bufferSize, System.IO.Pipes.PipeSecurity pipeSecurity);
    parameters:
    - id: direction
      type: System.IO.Pipes.PipeDirection
      description: "파이프의 방향을 결정 하는 열거형 값 중 하나입니다.       익명 파이프 될 수 있으며 한 방향으로 하므로 `direction` 로 설정할 수 없습니다 <xref href=&quot;System.IO.Pipes.PipeDirection&quot;> </xref>합니다."
    - id: inheritability
      type: System.IO.HandleInheritability
      description: "자식 프로세스에 의해 기본 핸들을 상속할 수 있는지 여부를 결정 하는 열거형 값 중 하나입니다."
    - id: bufferSize
      type: System.Int32
      description: "버퍼의 크기입니다. 이 값은 0 보다 크거나 이어야 합니다."
    - id: pipeSecurity
      type: System.IO.Pipes.PipeSecurity
      description: "액세스 제어를 결정 하는 개체 및 감사 보안을 파이프 합니다."
  overload: System.IO.Pipes.AnonymousPipeServerStream.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>inheritability</code>설정 되지 않은 중 하나로 <xref:System.IO.HandleInheritability> 또는 <xref:System.IO.HandleInheritability>합니다.       -또는- <code>bufferSize</code> 0 보다 작습니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>direction</code>is set to <xref href=&quot;System.IO.Pipes.PipeDirection&quot;></xref>."
  platform:
  - net462
- uid: System.IO.Pipes.AnonymousPipeServerStream.ClientSafePipeHandle
  id: ClientSafePipeHandle
  parent: System.IO.Pipes.AnonymousPipeServerStream
  langs:
  - csharp
  name: ClientSafePipeHandle
  nameWithType: AnonymousPipeServerStream.ClientSafePipeHandle
  fullName: System.IO.Pipes.AnonymousPipeServerStream.ClientSafePipeHandle
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "에 대 한 safehandle을 가져옵니다는 <xref href=&quot;System.IO.Pipes.AnonymousPipeClientStream&quot;> </xref> 에 현재 연결 되어 있는 개체는 <xref href=&quot;System.IO.Pipes.AnonymousPipeServerStream&quot;> </xref> 개체입니다."
  remarks: "<xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A>클라이언트 프로세스에 대 한 클라이언트 핸들 경과 된 후 메서드를 호출 해야 합니다.</xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A> 이 메서드를 호출 하지는 <xref:System.IO.Pipes.AnonymousPipeServerStream>개체 통지를 받지 못할 클라이언트를 삭제 하는 경우 해당 <xref:System.IO.Pipes.PipeStream>개체입니다.</xref:System.IO.Pipes.PipeStream> </xref:System.IO.Pipes.AnonymousPipeServerStream>"
  syntax:
    content: public Microsoft.Win32.SafeHandles.SafePipeHandle ClientSafePipeHandle { get; }
    return:
      type: Microsoft.Win32.SafeHandles.SafePipeHandle
      description: "에 대 한 핸들은 <xref href=&quot;System.IO.Pipes.AnonymousPipeClientStream&quot;> </xref> 에 현재 연결 되어 있는 개체는 <xref href=&quot;System.IO.Pipes.AnonymousPipeServerStream&quot;> </xref> 개체입니다."
  overload: System.IO.Pipes.AnonymousPipeServerStream.ClientSafePipeHandle*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.AnonymousPipeServerStream.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.IO.Pipes.AnonymousPipeServerStream
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: AnonymousPipeServerStream.Dispose(Boolean)
  fullName: System.IO.Pipes.AnonymousPipeServerStream.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "추가할 수 있습니다."
  overload: System.IO.Pipes.AnonymousPipeServerStream.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle
  id: DisposeLocalCopyOfClientHandle
  parent: System.IO.Pipes.AnonymousPipeServerStream
  langs:
  - csharp
  name: DisposeLocalCopyOfClientHandle()
  nameWithType: AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle()
  fullName: System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle()
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "로컬 복사본을 닫습니다는 <xref href=&quot;System.IO.Pipes.AnonymousPipeClientStream&quot;> </xref> 개체의 핸들입니다."
  remarks: "클라이언트에 클라이언트 핸들이 경과 된 후 DisposeLocalCopyOfClientHandle 메서드를 호출 해야 합니다. 이 메서드를 호출 하지는 <xref:System.IO.Pipes.AnonymousPipeServerStream>개체 통지를 받지 못할 클라이언트를 삭제 하는 경우 해당 <xref:System.IO.Pipes.PipeStream>개체입니다.</xref:System.IO.Pipes.PipeStream> </xref:System.IO.Pipes.AnonymousPipeServerStream>"
  example:
  - "The following example demonstrates a way to send a string from a parent process to a child process by using anonymous pipes. In this example, an <xref:System.IO.Pipes.AnonymousPipeServerStream> object is created in a parent process with a <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection>.  \n  \n [!code-cs[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/add/codesnippet/csharp/m-system.io.pipes.anonym_1_1.cs)]\n [!code-vb[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/add/codesnippet/visualbasic/m-system.io.pipes.anonym_1_1.vb)]\n [!code-cpp[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/add/codesnippet/cpp/m-system.io.pipes.anonym_1_1.cpp)]"
  syntax:
    content: public void DisposeLocalCopyOfClientHandle ();
    parameters: []
  overload: System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.AnonymousPipeServerStream.Finalize
  id: Finalize
  parent: System.IO.Pipes.AnonymousPipeServerStream
  langs:
  - csharp
  name: Finalize()
  nameWithType: AnonymousPipeServerStream.Finalize()
  fullName: System.IO.Pipes.AnonymousPipeServerStream.Finalize()
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "관리 되지 않는 리소스를 해제 하 고 기타 정리 작업 하기 전에 수행 된 <xref href=&quot;System.IO.Pipes.AnonymousPipeServerStream&quot;> </xref> 인스턴스 가비지 컬렉션이 회수 합니다."
  syntax:
    content: ~AnonymousPipeServerStream ();
    parameters: []
  overload: System.IO.Pipes.AnonymousPipeServerStream.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString
  id: GetClientHandleAsString
  parent: System.IO.Pipes.AnonymousPipeServerStream
  langs:
  - csharp
  name: GetClientHandleAsString()
  nameWithType: AnonymousPipeServerStream.GetClientHandleAsString()
  fullName: System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString()
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "연결 된 가져옵니다 <xref href=&quot;System.IO.Pipes.AnonymousPipeClientStream&quot;> </xref> 문자열 개체의 핸들입니다."
  remarks: "<xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A>클라이언트 프로세스에 대 한 클라이언트 핸들 경과 된 후 메서드를 호출 해야 합니다.</xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A> 이 메서드를 호출 하지는 <xref:System.IO.Pipes.AnonymousPipeServerStream>개체 통지를 받지 못할 클라이언트를 삭제 하는 경우 해당 <xref:System.IO.Pipes.PipeStream>개체입니다.</xref:System.IO.Pipes.PipeStream> </xref:System.IO.Pipes.AnonymousPipeServerStream>"
  example:
  - "The following example demonstrates a way to send a string from a parent process to a child process by using anonymous pipes. In this example, an <xref:System.IO.Pipes.AnonymousPipeServerStream> object is created in a parent process with a <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection>.  \n  \n [!code-cs[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/add/codesnippet/csharp/m-system.io.pipes.anonym_2_1.cs)]\n [!code-vb[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/add/codesnippet/visualbasic/m-system.io.pipes.anonym_2_1.vb)]\n [!code-cpp[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/add/codesnippet/cpp/m-system.io.pipes.anonym_2_1.cpp)]"
  syntax:
    content: public string GetClientHandleAsString ();
    parameters: []
    return:
      type: System.String
      description: "연결 된 나타내는 string <xref href=&quot;System.IO.Pipes.AnonymousPipeClientStream&quot;> </xref> 개체의 핸들입니다."
  overload: System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.AnonymousPipeServerStream.ReadMode
  id: ReadMode
  parent: System.IO.Pipes.AnonymousPipeServerStream
  langs:
  - csharp
  name: ReadMode
  nameWithType: AnonymousPipeServerStream.ReadMode
  fullName: System.IO.Pipes.AnonymousPipeServerStream.ReadMode
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "에 대 한 읽기 모드를 설정의 <xref href=&quot;System.IO.Pipes.AnonymousPipeServerStream&quot;> </xref> 개체입니다. 익명 파이프 전송 모드 해야 <xref href=&quot;System.IO.Pipes.PipeTransmissionMode&quot;> </xref>합니다."
  remarks: "익명 파이프를 지원 하지 않는 <xref:System.IO.Pipes.PipeTransmissionMode>읽기 모드.</xref:System.IO.Pipes.PipeTransmissionMode>"
  example:
  - "The following example demonstrates a way to send a string from a parent process to a child process by using anonymous pipes. In this example, the <xref:System.NotSupportedException> is caught when the ReadMode property is set to <xref:System.IO.Pipes.PipeTransmissionMode>.  \n  \n [!code-cs[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/add/codesnippet/csharp/p-system.io.pipes.anonym_1_1.cs)]\n [!code-vb[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/add/codesnippet/visualbasic/p-system.io.pipes.anonym_1_1.vb)]\n [!code-cpp[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/add/codesnippet/cpp/p-system.io.pipes.anonym_1_1.cpp)]"
  syntax:
    content: public override System.IO.Pipes.PipeTransmissionMode ReadMode { set; }
    return:
      type: System.IO.Pipes.PipeTransmissionMode
      description: "에 대 한 읽기 모드는 <xref href=&quot;System.IO.Pipes.AnonymousPipeServerStream&quot;> </xref> 개체입니다."
  overload: System.IO.Pipes.AnonymousPipeServerStream.ReadMode*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "전송 모드 올바르지 않습니다. 익명 파이프만 <xref href=&quot;System.IO.Pipes.PipeTransmissionMode&quot;> </xref> 지원 됩니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "속성이로 설정 되어 <xref href=&quot;System.IO.Pipes.PipeTransmissionMode&quot;> </xref>, 익명 파이프에 대 한 지원 되지 않습니다."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "연결이 끊어져서 또는 다른 I/O 오류가 발생 합니다."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "파이프가 닫혔습니다."
  platform:
  - net462
- uid: System.IO.Pipes.AnonymousPipeServerStream.TransmissionMode
  id: TransmissionMode
  parent: System.IO.Pipes.AnonymousPipeServerStream
  langs:
  - csharp
  name: TransmissionMode
  nameWithType: AnonymousPipeServerStream.TransmissionMode
  fullName: System.IO.Pipes.AnonymousPipeServerStream.TransmissionMode
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "현재 파이프에서 지 원하는 파이프 전송 모드를 가져옵니다."
  remarks: "익명 파이프를 지원 하지 않는 <xref:System.IO.Pipes.PipeTransmissionMode>읽기 모드.</xref:System.IO.Pipes.PipeTransmissionMode>"
  example:
  - "The following example demonstrates a way to send a string from a parent process to a child process by using anonymous pipes. In this example, an <xref:System.IO.Pipes.AnonymousPipeServerStream> object is created in a parent process and the TransmissionMode property is displayed to the console.  \n  \n [!code-cs[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/add/codesnippet/csharp/p-system.io.pipes.anonym_0_1.cs)]\n [!code-vb[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/add/codesnippet/visualbasic/p-system.io.pipes.anonym_0_1.vb)]\n [!code-cpp[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/add/codesnippet/cpp/p-system.io.pipes.anonym_0_1.cpp)]"
  syntax:
    content: public override System.IO.Pipes.PipeTransmissionMode TransmissionMode { get; }
    return:
      type: System.IO.Pipes.PipeTransmissionMode
      description: "<xref href=&quot;System.IO.Pipes.PipeTransmissionMode&quot;> </xref> 현재 파이프에서 사용할 수 있는 합니다."
  overload: System.IO.Pipes.AnonymousPipeServerStream.TransmissionMode*
  exceptions: []
  platform:
  - net462
references:
- uid: System.IO.Pipes.PipeStream
  isExternal: false
  name: System.IO.Pipes.PipeStream
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.IO.Pipes.AnonymousPipeServerStream.#ctor
  parent: System.IO.Pipes.AnonymousPipeServerStream
  isExternal: false
  name: AnonymousPipeServerStream()
  nameWithType: AnonymousPipeServerStream.AnonymousPipeServerStream()
  fullName: System.IO.Pipes.AnonymousPipeServerStream.AnonymousPipeServerStream()
- uid: System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection)
  parent: System.IO.Pipes.AnonymousPipeServerStream
  isExternal: false
  name: AnonymousPipeServerStream(PipeDirection)
  nameWithType: AnonymousPipeServerStream.AnonymousPipeServerStream(PipeDirection)
  fullName: System.IO.Pipes.AnonymousPipeServerStream.AnonymousPipeServerStream(PipeDirection)
- uid: System.IO.Pipes.PipeDirection
  parent: System.IO.Pipes
  isExternal: false
  name: PipeDirection
  nameWithType: PipeDirection
  fullName: System.IO.Pipes.PipeDirection
- uid: System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability)
  parent: System.IO.Pipes.AnonymousPipeServerStream
  isExternal: false
  name: AnonymousPipeServerStream(PipeDirection,HandleInheritability)
  nameWithType: AnonymousPipeServerStream.AnonymousPipeServerStream(PipeDirection,HandleInheritability)
  fullName: System.IO.Pipes.AnonymousPipeServerStream.AnonymousPipeServerStream(PipeDirection,HandleInheritability)
- uid: System.IO.HandleInheritability
  parent: System.IO
  isExternal: true
  name: HandleInheritability
  nameWithType: HandleInheritability
  fullName: System.IO.HandleInheritability
- uid: System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle,Microsoft.Win32.SafeHandles.SafePipeHandle)
  parent: System.IO.Pipes.AnonymousPipeServerStream
  isExternal: false
  name: AnonymousPipeServerStream(PipeDirection,SafePipeHandle,SafePipeHandle)
  nameWithType: AnonymousPipeServerStream.AnonymousPipeServerStream(PipeDirection,SafePipeHandle,SafePipeHandle)
  fullName: System.IO.Pipes.AnonymousPipeServerStream.AnonymousPipeServerStream(PipeDirection,SafePipeHandle,SafePipeHandle)
- uid: Microsoft.Win32.SafeHandles.SafePipeHandle
  parent: Microsoft.Win32.SafeHandles
  isExternal: false
  name: SafePipeHandle
  nameWithType: SafePipeHandle
  fullName: Microsoft.Win32.SafeHandles.SafePipeHandle
- uid: System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32)
  parent: System.IO.Pipes.AnonymousPipeServerStream
  isExternal: false
  name: AnonymousPipeServerStream(PipeDirection,HandleInheritability,Int32)
  nameWithType: AnonymousPipeServerStream.AnonymousPipeServerStream(PipeDirection,HandleInheritability,Int32)
  fullName: System.IO.Pipes.AnonymousPipeServerStream.AnonymousPipeServerStream(PipeDirection,HandleInheritability,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32,System.IO.Pipes.PipeSecurity)
  parent: System.IO.Pipes.AnonymousPipeServerStream
  isExternal: false
  name: AnonymousPipeServerStream(PipeDirection,HandleInheritability,Int32,PipeSecurity)
  nameWithType: AnonymousPipeServerStream.AnonymousPipeServerStream(PipeDirection,HandleInheritability,Int32,PipeSecurity)
  fullName: System.IO.Pipes.AnonymousPipeServerStream.AnonymousPipeServerStream(PipeDirection,HandleInheritability,Int32,PipeSecurity)
- uid: System.IO.Pipes.PipeSecurity
  parent: System.IO.Pipes
  isExternal: false
  name: PipeSecurity
  nameWithType: PipeSecurity
  fullName: System.IO.Pipes.PipeSecurity
- uid: System.IO.Pipes.AnonymousPipeServerStream.ClientSafePipeHandle
  parent: System.IO.Pipes.AnonymousPipeServerStream
  isExternal: false
  name: ClientSafePipeHandle
  nameWithType: AnonymousPipeServerStream.ClientSafePipeHandle
  fullName: System.IO.Pipes.AnonymousPipeServerStream.ClientSafePipeHandle
- uid: System.IO.Pipes.AnonymousPipeServerStream.Dispose(System.Boolean)
  parent: System.IO.Pipes.AnonymousPipeServerStream
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: AnonymousPipeServerStream.Dispose(Boolean)
  fullName: System.IO.Pipes.AnonymousPipeServerStream.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle
  parent: System.IO.Pipes.AnonymousPipeServerStream
  isExternal: false
  name: DisposeLocalCopyOfClientHandle()
  nameWithType: AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle()
  fullName: System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle()
- uid: System.IO.Pipes.AnonymousPipeServerStream.Finalize
  parent: System.IO.Pipes.AnonymousPipeServerStream
  isExternal: false
  name: Finalize()
  nameWithType: AnonymousPipeServerStream.Finalize()
  fullName: System.IO.Pipes.AnonymousPipeServerStream.Finalize()
- uid: System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString
  parent: System.IO.Pipes.AnonymousPipeServerStream
  isExternal: false
  name: GetClientHandleAsString()
  nameWithType: AnonymousPipeServerStream.GetClientHandleAsString()
  fullName: System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.Pipes.AnonymousPipeServerStream.ReadMode
  parent: System.IO.Pipes.AnonymousPipeServerStream
  isExternal: false
  name: ReadMode
  nameWithType: AnonymousPipeServerStream.ReadMode
  fullName: System.IO.Pipes.AnonymousPipeServerStream.ReadMode
- uid: System.IO.Pipes.PipeTransmissionMode
  parent: System.IO.Pipes
  isExternal: false
  name: PipeTransmissionMode
  nameWithType: PipeTransmissionMode
  fullName: System.IO.Pipes.PipeTransmissionMode
- uid: System.IO.Pipes.AnonymousPipeServerStream.TransmissionMode
  parent: System.IO.Pipes.AnonymousPipeServerStream
  isExternal: false
  name: TransmissionMode
  nameWithType: AnonymousPipeServerStream.TransmissionMode
  fullName: System.IO.Pipes.AnonymousPipeServerStream.TransmissionMode
- uid: System.IO.Pipes.AnonymousPipeServerStream.#ctor*
  parent: System.IO.Pipes.AnonymousPipeServerStream
  isExternal: false
  name: AnonymousPipeServerStream
  nameWithType: AnonymousPipeServerStream.AnonymousPipeServerStream
- uid: System.IO.Pipes.AnonymousPipeServerStream.ClientSafePipeHandle*
  parent: System.IO.Pipes.AnonymousPipeServerStream
  isExternal: false
  name: ClientSafePipeHandle
  nameWithType: AnonymousPipeServerStream.ClientSafePipeHandle
- uid: System.IO.Pipes.AnonymousPipeServerStream.Dispose*
  parent: System.IO.Pipes.AnonymousPipeServerStream
  isExternal: false
  name: Dispose
  nameWithType: AnonymousPipeServerStream.Dispose
- uid: System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle*
  parent: System.IO.Pipes.AnonymousPipeServerStream
  isExternal: false
  name: DisposeLocalCopyOfClientHandle
  nameWithType: AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle
- uid: System.IO.Pipes.AnonymousPipeServerStream.Finalize*
  parent: System.IO.Pipes.AnonymousPipeServerStream
  isExternal: false
  name: Finalize
  nameWithType: AnonymousPipeServerStream.Finalize
- uid: System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString*
  parent: System.IO.Pipes.AnonymousPipeServerStream
  isExternal: false
  name: GetClientHandleAsString
  nameWithType: AnonymousPipeServerStream.GetClientHandleAsString
- uid: System.IO.Pipes.AnonymousPipeServerStream.ReadMode*
  parent: System.IO.Pipes.AnonymousPipeServerStream
  isExternal: false
  name: ReadMode
  nameWithType: AnonymousPipeServerStream.ReadMode
- uid: System.IO.Pipes.AnonymousPipeServerStream.TransmissionMode*
  parent: System.IO.Pipes.AnonymousPipeServerStream
  isExternal: false
  name: TransmissionMode
  nameWithType: AnonymousPipeServerStream.TransmissionMode
