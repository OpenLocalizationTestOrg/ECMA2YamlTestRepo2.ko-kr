### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.Xml.XmlDecryptionTransform
  id: XmlDecryptionTransform
  children:
  - System.Security.Cryptography.Xml.XmlDecryptionTransform.#ctor
  - System.Security.Cryptography.Xml.XmlDecryptionTransform.AddExceptUri(System.String)
  - System.Security.Cryptography.Xml.XmlDecryptionTransform.EncryptedXml
  - System.Security.Cryptography.Xml.XmlDecryptionTransform.GetInnerXml
  - System.Security.Cryptography.Xml.XmlDecryptionTransform.GetOutput
  - System.Security.Cryptography.Xml.XmlDecryptionTransform.GetOutput(System.Type)
  - System.Security.Cryptography.Xml.XmlDecryptionTransform.InputTypes
  - System.Security.Cryptography.Xml.XmlDecryptionTransform.IsTargetElement(System.Xml.XmlElement,System.String)
  - System.Security.Cryptography.Xml.XmlDecryptionTransform.LoadInnerXml(System.Xml.XmlNodeList)
  - System.Security.Cryptography.Xml.XmlDecryptionTransform.LoadInput(System.Object)
  - System.Security.Cryptography.Xml.XmlDecryptionTransform.OutputTypes
  langs:
  - csharp
  name: XmlDecryptionTransform
  nameWithType: XmlDecryptionTransform
  fullName: System.Security.Cryptography.Xml.XmlDecryptionTransform
  type: Class
  summary: "둘 다 동일한 문서에서 수행 되 면 XML 디지털 서명 및 XML 암호화 작업의 순서를 지정 합니다."
  remarks: "XmlDecryptionTransform 클래스에는 둘 다 동일한 문서에서 수행 되 면 XML 디지털 서명 및 XML 암호화 작업의 순서를 결정 하는 변환을 제공 합니다.       XML 암호화를 수행 하 고 동일한 XML 문서에 XML 디지털 서명을 적용 해야 할 경우 XmlDecryptionTransform 클래스를 사용 합니다.       전달 해야 합니다는 <xref:System.Security.Cryptography.Xml.EncryptedXml>개체는 <xref:System.Security.Cryptography.Xml.XmlDecryptionTransform.EncryptedXml%2A>문서를 해독 하는 데 필요한 주요 정보를 포함 하는 속성.</xref:System.Security.Cryptography.Xml.XmlDecryptionTransform.EncryptedXml%2A> </xref:System.Security.Cryptography.Xml.EncryptedXml>"
  syntax:
    content: 'public class XmlDecryptionTransform : System.Security.Cryptography.Xml.Transform'
  inheritance:
  - System.Object
  - System.Security.Cryptography.Xml.Transform
  implements: []
  inheritedMembers:
  - System.Security.Cryptography.Xml.Transform.Algorithm
  - System.Security.Cryptography.Xml.Transform.Context
  - System.Security.Cryptography.Xml.Transform.GetDigestedOutput(System.Security.Cryptography.HashAlgorithm)
  - System.Security.Cryptography.Xml.Transform.GetXml
  - System.Security.Cryptography.Xml.Transform.PropagatedNamespaces
  - System.Security.Cryptography.Xml.Transform.Resolver
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.XmlDecryptionTransform.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.Xml.XmlDecryptionTransform
  langs:
  - csharp
  name: XmlDecryptionTransform()
  nameWithType: XmlDecryptionTransform.XmlDecryptionTransform()
  fullName: System.Security.Cryptography.Xml.XmlDecryptionTransform.XmlDecryptionTransform()
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Security.Cryptography.Xml.XmlDecryptionTransform&quot;> </xref> 클래스입니다."
  syntax:
    content: public XmlDecryptionTransform ();
    parameters: []
  overload: System.Security.Cryptography.Xml.XmlDecryptionTransform.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.XmlDecryptionTransform.AddExceptUri(System.String)
  id: AddExceptUri(System.String)
  parent: System.Security.Cryptography.Xml.XmlDecryptionTransform
  langs:
  - csharp
  name: AddExceptUri(String)
  nameWithType: XmlDecryptionTransform.AddExceptUri(String)
  fullName: System.Security.Cryptography.Xml.XmlDecryptionTransform.AddExceptUri(String)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "식별자 URI (Uniform Resource) 처리에서 제외를 추가 합니다."
  syntax:
    content: public void AddExceptUri (string uri);
    parameters:
    - id: uri
      type: System.String
      description: "식별자 URI (Uniform Resource) 처리에서 제외 하려면"
  overload: System.Security.Cryptography.Xml.XmlDecryptionTransform.AddExceptUri*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>uri</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.XmlDecryptionTransform.EncryptedXml
  id: EncryptedXml
  parent: System.Security.Cryptography.Xml.XmlDecryptionTransform
  langs:
  - csharp
  name: EncryptedXml
  nameWithType: XmlDecryptionTransform.EncryptedXml
  fullName: System.Security.Cryptography.Xml.XmlDecryptionTransform.EncryptedXml
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "가져오거나는 <xref href=&quot;System.Security.Cryptography.Xml.EncryptedXml&quot;> </xref> XML 문서를 해독 하는 데 필요한 키에 대 한 정보를 포함 하는 개체입니다."
  remarks: "전달 해야 합니다는 <xref:System.Security.Cryptography.Xml.EncryptedXml>개체는 문서를 해독 하는 데 필요한 주요 정보를 포함 하는 EncryptedXml 속성입니다.</xref:System.Security.Cryptography.Xml.EncryptedXml>"
  syntax:
    content: public System.Security.Cryptography.Xml.EncryptedXml EncryptedXml { get; set; }
    return:
      type: System.Security.Cryptography.Xml.EncryptedXml
      description: "<xref href=&quot;System.Security.Cryptography.Xml.EncryptedXml&quot;> </xref> XML 문서를 해독 하는 데 필요한 키에 대 한 정보를 포함 하는 개체입니다."
  overload: System.Security.Cryptography.Xml.XmlDecryptionTransform.EncryptedXml*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.XmlDecryptionTransform.GetInnerXml
  id: GetInnerXml
  parent: System.Security.Cryptography.Xml.XmlDecryptionTransform
  langs:
  - csharp
  name: GetInnerXml()
  nameWithType: XmlDecryptionTransform.GetInnerXml()
  fullName: System.Security.Cryptography.Xml.XmlDecryptionTransform.GetInnerXml()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "메서드의 매개 변수 XML 표현을 반환는 <xref href=&quot;System.Security.Cryptography.Xml.XmlDecryptionTransform&quot;> </xref> xmldsig 하위 요소로 포함 하기에 적합 한 개체 <xref uid=&quot;langword_csharp_&lt;Transform&gt;&quot; name=&quot;&lt;Transform&gt;&quot; href=&quot;&quot;> </xref> 요소입니다."
  syntax:
    content: protected override System.Xml.XmlNodeList GetInnerXml ();
    parameters: []
    return:
      type: System.Xml.XmlNodeList
      description: "현재를 설명 하는 데 변환 관련 콘텐츠를 나타내는 XML 노드 목록이 <xref href=&quot;System.Security.Cryptography.Xml.XmlDecryptionTransform&quot;> </xref> XMLDSIG 개체 <xref uid=&quot;langword_csharp_&lt;Transform&gt;&quot; name=&quot;&lt;Transform&gt;&quot; href=&quot;&quot;> </xref> 요소입니다."
  overload: System.Security.Cryptography.Xml.XmlDecryptionTransform.GetInnerXml*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.XmlDecryptionTransform.GetOutput
  id: GetOutput
  parent: System.Security.Cryptography.Xml.XmlDecryptionTransform
  langs:
  - csharp
  name: GetOutput()
  nameWithType: XmlDecryptionTransform.GetOutput()
  fullName: System.Security.Cryptography.Xml.XmlDecryptionTransform.GetOutput()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "현재 출력 반환 <xref href=&quot;System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform&quot;> </xref> 개체입니다."
  syntax:
    content: public override object GetOutput ();
    parameters: []
    return:
      type: System.Object
      description: "현재 출력 <xref href=&quot;System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform&quot;> </xref> 개체입니다."
  overload: System.Security.Cryptography.Xml.XmlDecryptionTransform.GetOutput*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "암호 해독 키를 찾을 수 없습니다."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.XmlDecryptionTransform.GetOutput(System.Type)
  id: GetOutput(System.Type)
  parent: System.Security.Cryptography.Xml.XmlDecryptionTransform
  langs:
  - csharp
  name: GetOutput(Type)
  nameWithType: XmlDecryptionTransform.GetOutput(Type)
  fullName: System.Security.Cryptography.Xml.XmlDecryptionTransform.GetOutput(Type)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "현재 출력 반환 <xref href=&quot;System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform&quot;> </xref> 개체입니다."
  syntax:
    content: public override object GetOutput (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "반환할 출력의 형식입니다. <xref href=&quot;System.Xml.XmlNodeList&quot;></xref>이 매개 변수에 대 한 유효한 형식이입니다."
    return:
      type: System.Object
      description: "현재 출력 <xref href=&quot;System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform&quot;> </xref> 개체입니다."
  overload: System.Security.Cryptography.Xml.XmlDecryptionTransform.GetOutput*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> type </code> 매개 변수가 않습니다는 <xref href=&quot;System.Xml.XmlNodeList&quot;> </xref> 개체입니다."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.XmlDecryptionTransform.InputTypes
  id: InputTypes
  parent: System.Security.Cryptography.Xml.XmlDecryptionTransform
  langs:
  - csharp
  name: InputTypes
  nameWithType: XmlDecryptionTransform.InputTypes
  fullName: System.Security.Cryptography.Xml.XmlDecryptionTransform.InputTypes
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "유효한 입력 하는 형식의 배열을 가져옵니다는 <xref:System.Security.Cryptography.Xml.XmlDecryptionTransform.LoadInput*>현재 메서드 <xref href=&quot;System.Security.Cryptography.Xml.XmlDecryptionTransform&quot;> </xref> 개체입니다.</xref:System.Security.Cryptography.Xml.XmlDecryptionTransform.LoadInput*>"
  remarks: "때문에 InputTypes 속성에서 반환 된 배열에 요소가 하나 이상 포함 되어야 모든 <xref:System.Security.Cryptography.Xml.XmlDecryptionTransform>개체 유효한 입력으로 유형을 하나 이상에 동의 해야 합니다.</xref:System.Security.Cryptography.Xml.XmlDecryptionTransform>       <xref:System.Security.Cryptography.Xml.XmlDecryptionTransform>개체 일반적으로 다음 형식 중 하나 이상을 입력으로 받아들입니다: <xref:System.IO.Stream>, <xref:System.Xml.XmlDocument>, 또는 <xref:System.Xml.XmlNodeList>.</xref:System.Xml.XmlNodeList> </xref:System.Xml.XmlDocument> </xref:System.IO.Stream> </xref:System.Security.Cryptography.Xml.XmlDecryptionTransform>"
  syntax:
    content: public override Type[] InputTypes { get; }
    return:
      type: System.Type[]
      description: "현재 입력된 형식의 배열을 <xref href=&quot;System.Security.Cryptography.Xml.XmlDecryptionTransform&quot;> </xref> ; 개체를 이러한 형식 중 하나를 가진 개체만 전달할 수 있습니다는 <xref:System.Security.Cryptography.Xml.XmlDecryptionTransform.LoadInput*>현재 메서드 <xref href=&quot;System.Security.Cryptography.Xml.XmlDecryptionTransform&quot;> </xref> 개체입니다.</xref:System.Security.Cryptography.Xml.XmlDecryptionTransform.LoadInput*>"
  overload: System.Security.Cryptography.Xml.XmlDecryptionTransform.InputTypes*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.XmlDecryptionTransform.IsTargetElement(System.Xml.XmlElement,System.String)
  id: IsTargetElement(System.Xml.XmlElement,System.String)
  parent: System.Security.Cryptography.Xml.XmlDecryptionTransform
  langs:
  - csharp
  name: IsTargetElement(XmlElement,String)
  nameWithType: XmlDecryptionTransform.IsTargetElement(XmlElement,String)
  fullName: System.Security.Cryptography.Xml.XmlDecryptionTransform.IsTargetElement(XmlElement,String)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "결정 여부의 ID 특성은 <xref href=&quot;System.Xml.XmlElement&quot;> </xref> 개체가 지정된 된 값과 일치 합니다."
  syntax:
    content: protected virtual bool IsTargetElement (System.Xml.XmlElement inputElement, string idValue);
    parameters:
    - id: inputElement
      type: System.Xml.XmlElement
      description: "<xref href=&quot;System.Xml.XmlElement&quot;> </xref> 개체와 비교할 개체 ID 특성을 가진 `idValue`합니다."
    - id: idValue
      type: System.String
      description: "ID 특성과 비교할 값 `inputElement`합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우에 ID 특성이 <code> inputElement </code> 매개 변수와 일치는 <code> idValue </code> 매개 변수, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Security.Cryptography.Xml.XmlDecryptionTransform.IsTargetElement*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.XmlDecryptionTransform.LoadInnerXml(System.Xml.XmlNodeList)
  id: LoadInnerXml(System.Xml.XmlNodeList)
  parent: System.Security.Cryptography.Xml.XmlDecryptionTransform
  langs:
  - csharp
  name: LoadInnerXml(XmlNodeList)
  nameWithType: XmlDecryptionTransform.LoadInnerXml(XmlNodeList)
  fullName: System.Security.Cryptography.Xml.XmlDecryptionTransform.LoadInnerXml(XmlNodeList)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "지정 된 구문 분석 <xref href=&quot;System.Xml.XmlNodeList&quot;> </xref> 개체의 변환 관련 콘텐츠로 <xref uid=&quot;langword_csharp_&lt;Transform&gt;&quot; name=&quot;&lt;Transform&gt;&quot; href=&quot;&quot;> </xref> 요소 현재 내부 상태를 구성 하 고 <xref href=&quot;System.Security.Cryptography.Xml.XmlDecryptionTransform&quot;> </xref> 일치 시킬 개체는 <xref uid=&quot;langword_csharp_&lt;Transform&gt;&quot; name=&quot;&lt;Transform&gt;&quot; href=&quot;&quot;> </xref> 요소입니다."
  remarks: "이 메서드는 하위 요소를 처리 하는 데 사용 되는 `<Transform>` 요소입니다."
  syntax:
    content: public override void LoadInnerXml (System.Xml.XmlNodeList nodeList);
    parameters:
    - id: nodeList
      type: System.Xml.XmlNodeList
      description: "<xref href=&quot;System.Xml.XmlNodeList&quot;> </xref> 현재에 대 한 변환 관련 콘텐츠를 지정 하는 개체 <xref href=&quot;System.Security.Cryptography.Xml.XmlDecryptionTransform&quot;> </xref> 개체입니다."
  overload: System.Security.Cryptography.Xml.XmlDecryptionTransform.LoadInnerXml*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "The <code>nodeList</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -또는-값의 식별자 URI (Uniform Resource)는 <xref href=&quot;System.Xml.XmlNode&quot;> </xref> 개체 <code> nodeList </code> 찾을 수 없습니다.       -또는-의 URI 값의 길이 <xref href=&quot;System.Xml.XmlNode&quot;> </xref> 개체 <code> nodeList </code> 은 0입니다.       -또는-의 URI 값의 첫 번째 문자는 <xref href=&quot;System.Xml.XmlNode&quot;> </xref> 개체 <code> nodeList </code> &quot;#&quot; 않습니다."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.XmlDecryptionTransform.LoadInput(System.Object)
  id: LoadInput(System.Object)
  parent: System.Security.Cryptography.Xml.XmlDecryptionTransform
  langs:
  - csharp
  name: LoadInput(Object)
  nameWithType: XmlDecryptionTransform.LoadInput(Object)
  fullName: System.Security.Cryptography.Xml.XmlDecryptionTransform.LoadInput(Object)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "파생된 클래스에서 재정의 하는 경우 현재에 지정된 된 입력 로드 <xref href=&quot;System.Security.Cryptography.Xml.XmlDecryptionTransform&quot;> </xref> 개체입니다."
  remarks: "입력된 개체의 형식에 형식 중 하나 여야 합니다는 <xref:System.Security.Cryptography.Xml.XmlDecryptionTransform.InputTypes%2A>속성.</xref:System.Security.Cryptography.Xml.XmlDecryptionTransform.InputTypes%2A>"
  syntax:
    content: public override void LoadInput (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "현재 로드에 대 한 입력 <xref href=&quot;System.Security.Cryptography.Xml.XmlDecryptionTransform&quot;> </xref> 개체입니다."
  overload: System.Security.Cryptography.Xml.XmlDecryptionTransform.LoadInput*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>obj</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.XmlDecryptionTransform.OutputTypes
  id: OutputTypes
  parent: System.Security.Cryptography.Xml.XmlDecryptionTransform
  langs:
  - csharp
  name: OutputTypes
  nameWithType: XmlDecryptionTransform.OutputTypes
  fullName: System.Security.Cryptography.Xml.XmlDecryptionTransform.OutputTypes
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "가능한 출력 형식의 배열을 가져옵니다는 <xref:System.Security.Cryptography.Xml.XmlDecryptionTransform.GetOutput*>현재 메서드 <xref href=&quot;System.Security.Cryptography.Xml.XmlDecryptionTransform&quot;> </xref> 개체입니다.</xref:System.Security.Cryptography.Xml.XmlDecryptionTransform.GetOutput*>"
  remarks: "모든 변환 출력으로 유형을 하나 이상 생성 해야 하므로 OutputTypes 속성에서 반환 된 배열에 요소가 하나 이상 포함 되어야 합니다."
  syntax:
    content: public override Type[] OutputTypes { get; }
    return:
      type: System.Type[]
      description: "현재에 대 한 올바른 출력 형식의 배열 <xref href=&quot;System.Security.Cryptography.Xml.XmlDecryptionTransform&quot;> </xref> 개체가; 둘 중의 유일한 개체 형식에서 반환 되는 <xref:System.Security.Cryptography.Xml.XmlDecryptionTransform.GetOutput*>현재 메서드 <xref href=&quot;System.Security.Cryptography.Xml.XmlDecryptionTransform&quot;> </xref> 개체입니다.</xref:System.Security.Cryptography.Xml.XmlDecryptionTransform.GetOutput*>"
  overload: System.Security.Cryptography.Xml.XmlDecryptionTransform.OutputTypes*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: System.Security.Cryptography.Xml.Transform
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Security.Cryptography.Xml.XmlDecryptionTransform.#ctor
  parent: System.Security.Cryptography.Xml.XmlDecryptionTransform
  isExternal: false
  name: XmlDecryptionTransform()
  nameWithType: XmlDecryptionTransform.XmlDecryptionTransform()
  fullName: System.Security.Cryptography.Xml.XmlDecryptionTransform.XmlDecryptionTransform()
- uid: System.Security.Cryptography.Xml.XmlDecryptionTransform.AddExceptUri(System.String)
  parent: System.Security.Cryptography.Xml.XmlDecryptionTransform
  isExternal: false
  name: AddExceptUri(String)
  nameWithType: XmlDecryptionTransform.AddExceptUri(String)
  fullName: System.Security.Cryptography.Xml.XmlDecryptionTransform.AddExceptUri(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.Xml.XmlDecryptionTransform.EncryptedXml
  parent: System.Security.Cryptography.Xml.XmlDecryptionTransform
  isExternal: false
  name: EncryptedXml
  nameWithType: XmlDecryptionTransform.EncryptedXml
  fullName: System.Security.Cryptography.Xml.XmlDecryptionTransform.EncryptedXml
- uid: System.Security.Cryptography.Xml.EncryptedXml
  parent: System.Security.Cryptography.Xml
  isExternal: false
  name: EncryptedXml
  nameWithType: EncryptedXml
  fullName: System.Security.Cryptography.Xml.EncryptedXml
- uid: System.Security.Cryptography.Xml.XmlDecryptionTransform.GetInnerXml
  parent: System.Security.Cryptography.Xml.XmlDecryptionTransform
  isExternal: false
  name: GetInnerXml()
  nameWithType: XmlDecryptionTransform.GetInnerXml()
  fullName: System.Security.Cryptography.Xml.XmlDecryptionTransform.GetInnerXml()
- uid: System.Xml.XmlNodeList
  parent: System.Xml
  isExternal: false
  name: XmlNodeList
  nameWithType: XmlNodeList
  fullName: System.Xml.XmlNodeList
- uid: System.Security.Cryptography.Xml.XmlDecryptionTransform.GetOutput
  parent: System.Security.Cryptography.Xml.XmlDecryptionTransform
  isExternal: false
  name: GetOutput()
  nameWithType: XmlDecryptionTransform.GetOutput()
  fullName: System.Security.Cryptography.Xml.XmlDecryptionTransform.GetOutput()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Security.Cryptography.Xml.XmlDecryptionTransform.GetOutput(System.Type)
  parent: System.Security.Cryptography.Xml.XmlDecryptionTransform
  isExternal: false
  name: GetOutput(Type)
  nameWithType: XmlDecryptionTransform.GetOutput(Type)
  fullName: System.Security.Cryptography.Xml.XmlDecryptionTransform.GetOutput(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Security.Cryptography.Xml.XmlDecryptionTransform.InputTypes
  parent: System.Security.Cryptography.Xml.XmlDecryptionTransform
  isExternal: false
  name: InputTypes
  nameWithType: XmlDecryptionTransform.InputTypes
  fullName: System.Security.Cryptography.Xml.XmlDecryptionTransform.InputTypes
- uid: System.Type[]
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type[]
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.Xml.XmlDecryptionTransform.IsTargetElement(System.Xml.XmlElement,System.String)
  parent: System.Security.Cryptography.Xml.XmlDecryptionTransform
  isExternal: false
  name: IsTargetElement(XmlElement,String)
  nameWithType: XmlDecryptionTransform.IsTargetElement(XmlElement,String)
  fullName: System.Security.Cryptography.Xml.XmlDecryptionTransform.IsTargetElement(XmlElement,String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.XmlElement
  parent: System.Xml
  isExternal: false
  name: XmlElement
  nameWithType: XmlElement
  fullName: System.Xml.XmlElement
- uid: System.Security.Cryptography.Xml.XmlDecryptionTransform.LoadInnerXml(System.Xml.XmlNodeList)
  parent: System.Security.Cryptography.Xml.XmlDecryptionTransform
  isExternal: false
  name: LoadInnerXml(XmlNodeList)
  nameWithType: XmlDecryptionTransform.LoadInnerXml(XmlNodeList)
  fullName: System.Security.Cryptography.Xml.XmlDecryptionTransform.LoadInnerXml(XmlNodeList)
- uid: System.Security.Cryptography.Xml.XmlDecryptionTransform.LoadInput(System.Object)
  parent: System.Security.Cryptography.Xml.XmlDecryptionTransform
  isExternal: false
  name: LoadInput(Object)
  nameWithType: XmlDecryptionTransform.LoadInput(Object)
  fullName: System.Security.Cryptography.Xml.XmlDecryptionTransform.LoadInput(Object)
- uid: System.Security.Cryptography.Xml.XmlDecryptionTransform.OutputTypes
  parent: System.Security.Cryptography.Xml.XmlDecryptionTransform
  isExternal: false
  name: OutputTypes
  nameWithType: XmlDecryptionTransform.OutputTypes
  fullName: System.Security.Cryptography.Xml.XmlDecryptionTransform.OutputTypes
- uid: System.Security.Cryptography.Xml.XmlDecryptionTransform.#ctor*
  parent: System.Security.Cryptography.Xml.XmlDecryptionTransform
  isExternal: false
  name: XmlDecryptionTransform
  nameWithType: XmlDecryptionTransform.XmlDecryptionTransform
- uid: System.Security.Cryptography.Xml.XmlDecryptionTransform.AddExceptUri*
  parent: System.Security.Cryptography.Xml.XmlDecryptionTransform
  isExternal: false
  name: AddExceptUri
  nameWithType: XmlDecryptionTransform.AddExceptUri
- uid: System.Security.Cryptography.Xml.XmlDecryptionTransform.EncryptedXml*
  parent: System.Security.Cryptography.Xml.XmlDecryptionTransform
  isExternal: false
  name: EncryptedXml
  nameWithType: XmlDecryptionTransform.EncryptedXml
- uid: System.Security.Cryptography.Xml.XmlDecryptionTransform.GetInnerXml*
  parent: System.Security.Cryptography.Xml.XmlDecryptionTransform
  isExternal: false
  name: GetInnerXml
  nameWithType: XmlDecryptionTransform.GetInnerXml
- uid: System.Security.Cryptography.Xml.XmlDecryptionTransform.GetOutput*
  parent: System.Security.Cryptography.Xml.XmlDecryptionTransform
  isExternal: false
  name: GetOutput
  nameWithType: XmlDecryptionTransform.GetOutput
- uid: System.Security.Cryptography.Xml.XmlDecryptionTransform.InputTypes*
  parent: System.Security.Cryptography.Xml.XmlDecryptionTransform
  isExternal: false
  name: InputTypes
  nameWithType: XmlDecryptionTransform.InputTypes
- uid: System.Security.Cryptography.Xml.XmlDecryptionTransform.IsTargetElement*
  parent: System.Security.Cryptography.Xml.XmlDecryptionTransform
  isExternal: false
  name: IsTargetElement
  nameWithType: XmlDecryptionTransform.IsTargetElement
- uid: System.Security.Cryptography.Xml.XmlDecryptionTransform.LoadInnerXml*
  parent: System.Security.Cryptography.Xml.XmlDecryptionTransform
  isExternal: false
  name: LoadInnerXml
  nameWithType: XmlDecryptionTransform.LoadInnerXml
- uid: System.Security.Cryptography.Xml.XmlDecryptionTransform.LoadInput*
  parent: System.Security.Cryptography.Xml.XmlDecryptionTransform
  isExternal: false
  name: LoadInput
  nameWithType: XmlDecryptionTransform.LoadInput
- uid: System.Security.Cryptography.Xml.XmlDecryptionTransform.OutputTypes*
  parent: System.Security.Cryptography.Xml.XmlDecryptionTransform
  isExternal: false
  name: OutputTypes
  nameWithType: XmlDecryptionTransform.OutputTypes
