### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.InstanceContextMode
  id: InstanceContextMode
  children:
  - System.ServiceModel.InstanceContextMode.PerCall
  - System.ServiceModel.InstanceContextMode.PerSession
  - System.ServiceModel.InstanceContextMode.Single
  langs:
  - csharp
  name: InstanceContextMode
  nameWithType: InstanceContextMode
  fullName: System.ServiceModel.InstanceContextMode
  type: Enum
  summary: "들어오는 메시지에 포함 된 호출을 처리할 수 있는 서비스 인스턴스 수를 지정 합니다."
  remarks: "<xref:System.ServiceModel.InstanceContext?displayProperty=fullName>채널과 사용자 정의 서비스 개체 간의 연결을 관리 합니다.</xref:System.ServiceModel.InstanceContext?displayProperty=fullName> InstanceContextMode 열거형을 사용 하 여는 <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A?displayProperty=fullName>속성의 수명을 지정 하는 <xref:System.ServiceModel.InstanceContext>개체입니다.</xref:System.ServiceModel.InstanceContext> </xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A?displayProperty=fullName> [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]새를 만들 수 <xref:System.ServiceModel.InstanceContext>지정 또는 모든 호출과 모든 세션에 대 한 개체는 <xref:System.ServiceModel.InstanceContext>개체는 단일 서비스 개체에 바인딩됩니다.</xref:System.ServiceModel.InstanceContext> </xref:System.ServiceModel.InstanceContext> 작업 예제를 참조 하십시오.는 [Instancing](~/add/includes/ajax-current-ext-md.md)합니다.       단일 값을 지정 하는 단일 <xref:System.ServiceModel.InstanceContext>서비스의 수명에 대 한 개체를 사용 해야 합니다.</xref:System.ServiceModel.InstanceContext>      > [!NOTE] > 경우 <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A>값이 결과 서비스 <xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A> <xref:System.ServiceModel.ConcurrencyMode>사이로</xref:System.ServiceModel.ConcurrencyMode> 값</xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A> 을 설정 하지 않으면 한 번에 하나의 메시지만 처리할만 수 Single로 설정</xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A>"
  example:
  - "The following code illustrates how to set the InstanceContextMode for a service class:  \n  \n [!code-cs[S_ReliableSession#1](~/add/codesnippet/csharp/t-system.servicemodel.in_1.cs)]\n [!code-vb[S_ReliableSession#1](~/add/codesnippet/visualbasic/t-system.servicemodel.in_1.vb)]"
  syntax:
    content: public enum InstanceContextMode
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.ServiceModel.InstanceContextMode.PerCall
  id: PerCall
  parent: System.ServiceModel.InstanceContextMode
  langs:
  - csharp
  name: PerCall
  nameWithType: InstanceContextMode.PerCall
  fullName: System.ServiceModel.InstanceContextMode.PerCall
  type: Field
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "새 <xref:System.ServiceModel.InstanceContext>개체가 이전에 생성 되 고 각 호출 후에 재활용.</xref:System.ServiceModel.InstanceContext> 채널에서 세션을 만들지 않는 경우이 값 마치 PerCall 것 처럼 동작 합니다."
  syntax:
    content: PerCall
    return:
      type: System.ServiceModel.InstanceContextMode
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.InstanceContextMode.PerSession
  id: PerSession
  parent: System.ServiceModel.InstanceContextMode
  langs:
  - csharp
  name: PerSession
  nameWithType: InstanceContextMode.PerSession
  fullName: System.ServiceModel.InstanceContextMode.PerSession
  type: Field
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "새 <xref:System.ServiceModel.InstanceContext>각 세션에 대해 개체가 만들어집니다.</xref:System.ServiceModel.InstanceContext>"
  syntax:
    content: PerSession
    return:
      type: System.ServiceModel.InstanceContextMode
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.InstanceContextMode.Single
  id: Single
  parent: System.ServiceModel.InstanceContextMode
  langs:
  - csharp
  name: Single
  nameWithType: InstanceContextMode.Single
  fullName: System.ServiceModel.InstanceContextMode.Single
  type: Field
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "하나의 <xref:System.ServiceModel.InstanceContext>개체는 모든 들어오는 호출에 대해 사용 되며 호출 후에 재활용 되지 않습니다.</xref:System.ServiceModel.InstanceContext> 서비스 개체가 없는 경우 만들어집니다."
  remarks: >-
    > [!NOTE]

    >  For singleton lifetime behavior (for example, if the host application calls the [System.ServiceModel.ServiceHost.#ctor(System.Object,System.Uri\[\])](assetId:///M:System.ServiceModel.ServiceHost.#ctor(System.Object,System.Uri[])?qualifyHint=False&autoUpgrade=True) constructor and passes an object to use as the service), the service class must set <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> to Single, or an exception is thrown when the service host is opened.
  syntax:
    content: Single
    return:
      type: System.ServiceModel.InstanceContextMode
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.ServiceModel.InstanceContextMode.PerCall
  parent: System.ServiceModel.InstanceContextMode
  isExternal: false
  name: PerCall
  nameWithType: InstanceContextMode.PerCall
  fullName: System.ServiceModel.InstanceContextMode.PerCall
- uid: System.ServiceModel.InstanceContextMode
  parent: System.ServiceModel
  isExternal: false
  name: InstanceContextMode
  nameWithType: InstanceContextMode
  fullName: System.ServiceModel.InstanceContextMode
- uid: System.ServiceModel.InstanceContextMode.PerSession
  parent: System.ServiceModel.InstanceContextMode
  isExternal: false
  name: PerSession
  nameWithType: InstanceContextMode.PerSession
  fullName: System.ServiceModel.InstanceContextMode.PerSession
- uid: System.ServiceModel.InstanceContextMode.Single
  parent: System.ServiceModel.InstanceContextMode
  isExternal: false
  name: Single
  nameWithType: InstanceContextMode.Single
  fullName: System.ServiceModel.InstanceContextMode.Single
