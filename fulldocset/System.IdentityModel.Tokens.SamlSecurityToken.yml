### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Tokens.SamlSecurityToken
  id: SamlSecurityToken
  children:
  - System.IdentityModel.Tokens.SamlSecurityToken.#ctor
  - System.IdentityModel.Tokens.SamlSecurityToken.#ctor(System.IdentityModel.Tokens.SamlAssertion)
  - System.IdentityModel.Tokens.SamlSecurityToken.Assertion
  - System.IdentityModel.Tokens.SamlSecurityToken.CanCreateKeyIdentifierClause``1
  - System.IdentityModel.Tokens.SamlSecurityToken.CreateKeyIdentifierClause``1
  - System.IdentityModel.Tokens.SamlSecurityToken.Id
  - System.IdentityModel.Tokens.SamlSecurityToken.Initialize(System.IdentityModel.Tokens.SamlAssertion)
  - System.IdentityModel.Tokens.SamlSecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  - System.IdentityModel.Tokens.SamlSecurityToken.SecurityKeys
  - System.IdentityModel.Tokens.SamlSecurityToken.ValidFrom
  - System.IdentityModel.Tokens.SamlSecurityToken.ValidTo
  langs:
  - csharp
  name: SamlSecurityToken
  nameWithType: SamlSecurityToken
  fullName: System.IdentityModel.Tokens.SamlSecurityToken
  type: Class
  summary: "SAML 어설션을 기반으로 하는 보안 토큰을 나타냅니다."
  remarks: "SamlSecurityToken 보안 토큰에 대 한 클레임에 <xref:System.IdentityModel.Tokens.SamlAssertion>.</xref:System.IdentityModel.Tokens.SamlAssertion> 의 일부로 표현 A <xref:System.IdentityModel.Tokens.SamlAssertion>클레임으로 표현 되는 SAML 설명 이라는 확장 가능한 집합이 <xref:System.IdentityModel.Tokens.SamlAssertion.Statements%2A>속성.</xref:System.IdentityModel.Tokens.SamlAssertion.Statements%2A> </xref:System.IdentityModel.Tokens.SamlAssertion> 에 지정 된 SAML 어설션을 발급 한 SAML 기관에서 <xref:System.IdentityModel.Tokens.SamlAssertion.Issuer%2A>속성.</xref:System.IdentityModel.Tokens.SamlAssertion.Issuer%2A>"
  syntax:
    content: 'public class SamlSecurityToken : System.IdentityModel.Tokens.SecurityToken'
  inheritance:
  - System.Object
  - System.IdentityModel.Tokens.SecurityToken
  implements: []
  inheritedMembers:
  - System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityToken.#ctor
  id: '#ctor'
  parent: System.IdentityModel.Tokens.SamlSecurityToken
  langs:
  - csharp
  name: SamlSecurityToken()
  nameWithType: SamlSecurityToken.SamlSecurityToken()
  fullName: System.IdentityModel.Tokens.SamlSecurityToken.SamlSecurityToken()
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.IdentityModel.Tokens.SamlSecurityToken&quot;> </xref> 클래스입니다."
  syntax:
    content: protected SamlSecurityToken ();
    parameters: []
  overload: System.IdentityModel.Tokens.SamlSecurityToken.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityToken.#ctor(System.IdentityModel.Tokens.SamlAssertion)
  id: '#ctor(System.IdentityModel.Tokens.SamlAssertion)'
  parent: System.IdentityModel.Tokens.SamlSecurityToken
  langs:
  - csharp
  name: SamlSecurityToken(SamlAssertion)
  nameWithType: SamlSecurityToken.SamlSecurityToken(SamlAssertion)
  fullName: System.IdentityModel.Tokens.SamlSecurityToken.SamlSecurityToken(SamlAssertion)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.IdentityModel.Tokens.SamlSecurityToken&quot;> </xref> 클래스 지정된 된 SAML 어설션을 사용 합니다."
  remarks: "이 생성자를 호출 하 여 <xref:System.IdentityModel.Tokens.SamlSecurityToken.Initialize%28System.IdentityModel.Tokens.SamlAssertion%29>파생된 클래스에서 재정의 될 수 있는 메서드를.</xref:System.IdentityModel.Tokens.SamlSecurityToken.Initialize%28System.IdentityModel.Tokens.SamlAssertion%29>       에 대 한 <xref:System.IdentityModel.Tokens.SamlSecurityToken>보안 토큰의 경우 클레임은 SAML 어설션을 사용 하 여 지정 됩니다.</xref:System.IdentityModel.Tokens.SamlSecurityToken>"
  syntax:
    content: public SamlSecurityToken (System.IdentityModel.Tokens.SamlAssertion assertion);
    parameters:
    - id: assertion
      type: System.IdentityModel.Tokens.SamlAssertion
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SamlAssertion&quot;> </xref> 이 보안 토큰의 SAML 어설션을 나타내는입니다."
  overload: System.IdentityModel.Tokens.SamlSecurityToken.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityToken.Assertion
  id: Assertion
  parent: System.IdentityModel.Tokens.SamlSecurityToken
  langs:
  - csharp
  name: Assertion
  nameWithType: SamlSecurityToken.Assertion
  fullName: System.IdentityModel.Tokens.SamlSecurityToken.Assertion
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "이 보안 토큰의 SAML 어설션을 가져옵니다."
  remarks: "에 대 한 <xref:System.IdentityModel.Tokens.SamlSecurityToken>보안 토큰의 경우 클레임은 SAML 어설션을 사용 하 여 지정 됩니다.</xref:System.IdentityModel.Tokens.SamlSecurityToken>       생성자를 사용 하 여 또는 <xref:System.IdentityModel.Tokens.SamlSecurityToken.Initialize%28System.IdentityModel.Tokens.SamlAssertion%29>어설션 속성을 설정 하는 메서드.</xref:System.IdentityModel.Tokens.SamlSecurityToken.Initialize%28System.IdentityModel.Tokens.SamlAssertion%29>"
  syntax:
    content: public System.IdentityModel.Tokens.SamlAssertion Assertion { get; }
    return:
      type: System.IdentityModel.Tokens.SamlAssertion
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SamlAssertion&quot;> </xref> 이 보안 토큰의 SAML 어설션을 나타내는입니다."
  overload: System.IdentityModel.Tokens.SamlSecurityToken.Assertion*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityToken.CanCreateKeyIdentifierClause``1
  id: CanCreateKeyIdentifierClause``1
  parent: System.IdentityModel.Tokens.SamlSecurityToken
  langs:
  - csharp
  name: CanCreateKeyIdentifierClause()
  nameWithType: SamlSecurityToken.CanCreateKeyIdentifierClause()
  fullName: System.IdentityModel.Tokens.SamlSecurityToken.CanCreateKeyIdentifierClause()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  syntax:
    content: 'public override bool CanCreateKeyIdentifierClause<T> () where T : System.IdentityModel.Tokens.SecurityKeyIdentifierClause;'
    parameters: []
    return:
      type: System.Boolean
      description: "추가할 수 있습니다."
  overload: System.IdentityModel.Tokens.SamlSecurityToken.CanCreateKeyIdentifierClause<T>*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityToken.CreateKeyIdentifierClause``1
  id: CreateKeyIdentifierClause``1
  parent: System.IdentityModel.Tokens.SamlSecurityToken
  langs:
  - csharp
  name: CreateKeyIdentifierClause()
  nameWithType: SamlSecurityToken.CreateKeyIdentifierClause()
  fullName: System.IdentityModel.Tokens.SamlSecurityToken.CreateKeyIdentifierClause()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  syntax:
    content: 'public override T CreateKeyIdentifierClause<T> () where T : System.IdentityModel.Tokens.SecurityKeyIdentifierClause;'
    parameters: []
    return:
      type: T
      description: "추가할 수 있습니다."
  overload: System.IdentityModel.Tokens.SamlSecurityToken.CreateKeyIdentifierClause<T>*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityToken.Id
  id: Id
  parent: System.IdentityModel.Tokens.SamlSecurityToken
  langs:
  - csharp
  name: Id
  nameWithType: SamlSecurityToken.Id
  fullName: System.IdentityModel.Tokens.SamlSecurityToken.Id
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "보안 토큰의 고유 식별자를 가져옵니다."
  remarks: "경우는 <xref:System.IdentityModel.Tokens.SamlSecurityToken>보안 토큰이 XML로 serialize 되 고, Id 특성 값 Id 속성의 값으로 설정 됩니다.</xref:System.IdentityModel.Tokens.SamlSecurityToken>"
  syntax:
    content: public override string Id { get; }
    return:
      type: System.String
      description: "보안 토큰의 고유 식별자입니다."
  overload: System.IdentityModel.Tokens.SamlSecurityToken.Id*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityToken.Initialize(System.IdentityModel.Tokens.SamlAssertion)
  id: Initialize(System.IdentityModel.Tokens.SamlAssertion)
  parent: System.IdentityModel.Tokens.SamlSecurityToken
  langs:
  - csharp
  name: Initialize(SamlAssertion)
  nameWithType: SamlSecurityToken.Initialize(SamlAssertion)
  fullName: System.IdentityModel.Tokens.SamlSecurityToken.Initialize(SamlAssertion)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "속성을 초기화는 <xref href=&quot;System.IdentityModel.Tokens.SamlSecurityToken&quot;> </xref> 클래스 지정된 된 SAML 어설션을 사용 합니다."
  remarks: "<xref:System.IdentityModel.Tokens.SamlSecurityToken.%23ctor%28System.IdentityModel.Tokens.SamlAssertion%29>생성자는 파생된 클래스에서 재정의 될 수 있는 Initialize 메서드를 호출 합니다.</xref:System.IdentityModel.Tokens.SamlSecurityToken.%23ctor%28System.IdentityModel.Tokens.SamlAssertion%29>       에 대 한 <xref:System.IdentityModel.Tokens.SamlSecurityToken>보안 토큰의 경우 클레임은 SAML 어설션을 사용 하 여 지정 됩니다.</xref:System.IdentityModel.Tokens.SamlSecurityToken>"
  syntax:
    content: protected void Initialize (System.IdentityModel.Tokens.SamlAssertion assertion);
    parameters:
    - id: assertion
      type: System.IdentityModel.Tokens.SamlAssertion
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SamlAssertion&quot;> </xref> 이 보안 토큰의 SAML 어설션을 나타내는입니다."
  overload: System.IdentityModel.Tokens.SamlSecurityToken.Initialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>assertion</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  id: MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Tokens.SamlSecurityToken
  langs:
  - csharp
  name: MatchesKeyIdentifierClause(SecurityKeyIdentifierClause)
  nameWithType: SamlSecurityToken.MatchesKeyIdentifierClause(SecurityKeyIdentifierClause)
  fullName: System.IdentityModel.Tokens.SamlSecurityToken.MatchesKeyIdentifierClause(SecurityKeyIdentifierClause)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "이 인스턴스의 키 식별자가 지정 된 키 식별자와 같은지 여부를 나타내는 값을 반환 합니다."
  syntax:
    content: public override bool MatchesKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);
    parameters:
    - id: keyIdentifierClause
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifierClause&quot;> </xref> 이 인스턴스와 비교할 합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우 <code> keyIdentifierClause </code> 는 <xref href=&quot;System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause&quot;> </xref> 동일한 고유 식별자를 갖고는 <xref:System.IdentityModel.Tokens.SamlSecurityToken.Id*>속성, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.IdentityModel.Tokens.SamlSecurityToken.Id*>"
  overload: System.IdentityModel.Tokens.SamlSecurityToken.MatchesKeyIdentifierClause*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityToken.SecurityKeys
  id: SecurityKeys
  parent: System.IdentityModel.Tokens.SamlSecurityToken
  langs:
  - csharp
  name: SecurityKeys
  nameWithType: SamlSecurityToken.SecurityKeys
  fullName: System.IdentityModel.Tokens.SamlSecurityToken.SecurityKeys
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "보안 토큰과 연결 된 암호화 키를 가져옵니다."
  remarks: "SecurityKeys 속성을 사용 하 여 SOAP 메시지를 보호 하려면이 보안 토큰에 대 한 암호화 키를 설정 합니다. 키 데 사용할 수, 특히, 디지털 서명 또는 SOAP 메시지를 암호화 합니다."
  syntax:
    content: public override System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Tokens.SecurityKey> SecurityKeys { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SecurityKey}
      description: "A &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; 형식의 <xref href=&quot;System.IdentityModel.Tokens.SecurityKey&quot;> </xref> 보안 토큰과 연결 된 키 집합이 들어 있는입니다."
  overload: System.IdentityModel.Tokens.SamlSecurityToken.SecurityKeys*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityToken.ValidFrom
  id: ValidFrom
  parent: System.IdentityModel.Tokens.SamlSecurityToken
  langs:
  - csharp
  name: ValidFrom
  nameWithType: SamlSecurityToken.ValidFrom
  fullName: System.IdentityModel.Tokens.SamlSecurityToken.ValidFrom
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "첫 번째 시작을이 보안 토큰이 유효한 시간을 가져옵니다."
  remarks: "ValidFrom를 사용 하 여 및 <xref:System.IdentityModel.Tokens.SamlSecurityToken.ValidTo%2A>속성의 기간을 결정 하는 <xref:System.IdentityModel.Tokens.SamlSecurityToken>토큰은 유효 합니다.</xref:System.IdentityModel.Tokens.SamlSecurityToken> </xref:System.IdentityModel.Tokens.SamlSecurityToken.ValidTo%2A> ValidFrom 및 <xref:System.IdentityModel.Tokens.SamlSecurityToken.ValidTo%2A>속성 시간과 첫 번째는 보안 토큰은 각각 유효한 시간 나타냅니다.</xref:System.IdentityModel.Tokens.SamlSecurityToken.ValidTo%2A>       기본적으로는 5 분의 클럭 오차가 발신자와 보안 토큰의 수신자 사이의 허용 됩니다. 따라서 <xref:System.IdentityModel.Tokens.SamlConditions.NotBefore%2A>오후 1시, 다음 오후 12시 55분 속성은 ValidFrom 속성</xref:System.IdentityModel.Tokens.SamlConditions.NotBefore%2A>       ValidFrom 속성으로 설정 되 면 <xref:System.DateTime.MinValue>와 연결 된 SAML 어설션에 <xref:System.IdentityModel.Tokens.SamlSecurityToken>보안 토큰을 설정 하는 모든 조건을 없습니다.</xref:System.IdentityModel.Tokens.SamlSecurityToken> </xref:System.DateTime.MinValue>"
  syntax:
    content: public override DateTime ValidFrom { get; }
    return:
      type: System.DateTime
      description: "A <xref:System.DateTime>첫 번째 시작이 보안 토큰이 유효한 시간을 나타내는입니다.</xref:System.DateTime>"
  overload: System.IdentityModel.Tokens.SamlSecurityToken.ValidFrom*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityToken.ValidTo
  id: ValidTo
  parent: System.IdentityModel.Tokens.SamlSecurityToken
  langs:
  - csharp
  name: ValidTo
  nameWithType: SamlSecurityToken.ValidTo
  fullName: System.IdentityModel.Tokens.SamlSecurityToken.ValidTo
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "이 보안 토큰이 유효한 시간을 마지막을 종료 가져옵니다."
  remarks: "사용 하 여는 <xref:System.IdentityModel.Tokens.SamlSecurityToken.ValidFrom%2A>및 ValidTo 속성은 기간을 결정 하는 <xref:System.IdentityModel.Tokens.SamlSecurityToken>토큰은 유효 합니다.</xref:System.IdentityModel.Tokens.SamlSecurityToken> </xref:System.IdentityModel.Tokens.SamlSecurityToken.ValidFrom%2A> <xref:System.IdentityModel.Tokens.SamlSecurityToken.ValidFrom%2A>ValidTo 속성 보안 토큰의 유효, 각각 시간에 첫 번째 및 마지막 기간의 시작 종료를 나타냅니다.</xref:System.IdentityModel.Tokens.SamlSecurityToken.ValidFrom%2A>       기본적으로는 5 분의 클럭 오차가 발신자와 보안 토큰의 수신자 사이의 허용 됩니다. 따라서 <xref:System.IdentityModel.Tokens.SamlConditions.NotOnOrAfter%2A>오후 1시, 다음의 <xref:System.IdentityModel.Tokens.SamlSecurityToken.ValidFrom%2A>속성이 오후 1시 05분으로 설정 된</xref:System.IdentityModel.Tokens.SamlSecurityToken.ValidFrom%2A> 속성</xref:System.IdentityModel.Tokens.SamlConditions.NotOnOrAfter%2A>       ValidTo 속성으로 설정 되 면 <xref:System.DateTime.MaxValue>와 연결 된 SAML 어설션에 <xref:System.IdentityModel.Tokens.SamlSecurityToken>보안 토큰을 설정 하는 모든 조건을 없습니다.</xref:System.IdentityModel.Tokens.SamlSecurityToken> </xref:System.DateTime.MaxValue>"
  syntax:
    content: public override DateTime ValidTo { get; }
    return:
      type: System.DateTime
      description: "A <xref:System.DateTime>하는 마지막 종료 나타내는이 보안 토큰이 유효한 시간을.</xref:System.DateTime>"
  overload: System.IdentityModel.Tokens.SamlSecurityToken.ValidTo*
  exceptions: []
  platform:
  - net462
references:
- uid: System.IdentityModel.Tokens.SecurityToken
  isExternal: false
  name: System.IdentityModel.Tokens.SecurityToken
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.IdentityModel.Tokens.SamlSecurityToken.#ctor
  parent: System.IdentityModel.Tokens.SamlSecurityToken
  isExternal: false
  name: SamlSecurityToken()
  nameWithType: SamlSecurityToken.SamlSecurityToken()
  fullName: System.IdentityModel.Tokens.SamlSecurityToken.SamlSecurityToken()
- uid: System.IdentityModel.Tokens.SamlSecurityToken.#ctor(System.IdentityModel.Tokens.SamlAssertion)
  parent: System.IdentityModel.Tokens.SamlSecurityToken
  isExternal: false
  name: SamlSecurityToken(SamlAssertion)
  nameWithType: SamlSecurityToken.SamlSecurityToken(SamlAssertion)
  fullName: System.IdentityModel.Tokens.SamlSecurityToken.SamlSecurityToken(SamlAssertion)
- uid: System.IdentityModel.Tokens.SamlAssertion
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SamlAssertion
  nameWithType: SamlAssertion
  fullName: System.IdentityModel.Tokens.SamlAssertion
- uid: System.IdentityModel.Tokens.SamlSecurityToken.Assertion
  parent: System.IdentityModel.Tokens.SamlSecurityToken
  isExternal: false
  name: Assertion
  nameWithType: SamlSecurityToken.Assertion
  fullName: System.IdentityModel.Tokens.SamlSecurityToken.Assertion
- uid: System.IdentityModel.Tokens.SamlSecurityToken.CanCreateKeyIdentifierClause``1
  parent: System.IdentityModel.Tokens.SamlSecurityToken
  isExternal: false
  name: CanCreateKeyIdentifierClause()
  nameWithType: SamlSecurityToken.CanCreateKeyIdentifierClause()
  fullName: System.IdentityModel.Tokens.SamlSecurityToken.CanCreateKeyIdentifierClause()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Tokens.SamlSecurityToken.CreateKeyIdentifierClause``1
  parent: System.IdentityModel.Tokens.SamlSecurityToken
  isExternal: false
  name: CreateKeyIdentifierClause()
  nameWithType: SamlSecurityToken.CreateKeyIdentifierClause()
  fullName: System.IdentityModel.Tokens.SamlSecurityToken.CreateKeyIdentifierClause()
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.IdentityModel.Tokens.SamlSecurityToken.Id
  parent: System.IdentityModel.Tokens.SamlSecurityToken
  isExternal: false
  name: Id
  nameWithType: SamlSecurityToken.Id
  fullName: System.IdentityModel.Tokens.SamlSecurityToken.Id
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IdentityModel.Tokens.SamlSecurityToken.Initialize(System.IdentityModel.Tokens.SamlAssertion)
  parent: System.IdentityModel.Tokens.SamlSecurityToken
  isExternal: false
  name: Initialize(SamlAssertion)
  nameWithType: SamlSecurityToken.Initialize(SamlAssertion)
  fullName: System.IdentityModel.Tokens.SamlSecurityToken.Initialize(SamlAssertion)
- uid: System.IdentityModel.Tokens.SamlSecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Tokens.SamlSecurityToken
  isExternal: false
  name: MatchesKeyIdentifierClause(SecurityKeyIdentifierClause)
  nameWithType: SamlSecurityToken.MatchesKeyIdentifierClause(SecurityKeyIdentifierClause)
  fullName: System.IdentityModel.Tokens.SamlSecurityToken.MatchesKeyIdentifierClause(SecurityKeyIdentifierClause)
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKeyIdentifierClause
  nameWithType: SecurityKeyIdentifierClause
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
- uid: System.IdentityModel.Tokens.SamlSecurityToken.SecurityKeys
  parent: System.IdentityModel.Tokens.SamlSecurityToken
  isExternal: false
  name: SecurityKeys
  nameWithType: SamlSecurityToken.SecurityKeys
  fullName: System.IdentityModel.Tokens.SamlSecurityToken.SecurityKeys
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SecurityKey}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<SecurityKey>
  nameWithType: ReadOnlyCollection<SecurityKey>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Tokens.SecurityKey>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.IdentityModel.Tokens.SecurityKey>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Tokens.SecurityKey
    name: SecurityKey
    nameWithType: SecurityKey
    fullName: SecurityKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Tokens.SamlSecurityToken.ValidFrom
  parent: System.IdentityModel.Tokens.SamlSecurityToken
  isExternal: false
  name: ValidFrom
  nameWithType: SamlSecurityToken.ValidFrom
  fullName: System.IdentityModel.Tokens.SamlSecurityToken.ValidFrom
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.IdentityModel.Tokens.SamlSecurityToken.ValidTo
  parent: System.IdentityModel.Tokens.SamlSecurityToken
  isExternal: false
  name: ValidTo
  nameWithType: SamlSecurityToken.ValidTo
  fullName: System.IdentityModel.Tokens.SamlSecurityToken.ValidTo
- uid: System.IdentityModel.Tokens.SamlSecurityToken.#ctor*
  parent: System.IdentityModel.Tokens.SamlSecurityToken
  isExternal: false
  name: SamlSecurityToken
  nameWithType: SamlSecurityToken.SamlSecurityToken
- uid: System.IdentityModel.Tokens.SamlSecurityToken.Assertion*
  parent: System.IdentityModel.Tokens.SamlSecurityToken
  isExternal: false
  name: Assertion
  nameWithType: SamlSecurityToken.Assertion
- uid: System.IdentityModel.Tokens.SamlSecurityToken.CanCreateKeyIdentifierClause<T>*
  parent: System.IdentityModel.Tokens.SamlSecurityToken
  isExternal: false
  name: CanCreateKeyIdentifierClause<T>
  nameWithType: SamlSecurityToken.CanCreateKeyIdentifierClause<T>
- uid: System.IdentityModel.Tokens.SamlSecurityToken.CreateKeyIdentifierClause<T>*
  parent: System.IdentityModel.Tokens.SamlSecurityToken
  isExternal: false
  name: CreateKeyIdentifierClause<T>
  nameWithType: SamlSecurityToken.CreateKeyIdentifierClause<T>
- uid: System.IdentityModel.Tokens.SamlSecurityToken.Id*
  parent: System.IdentityModel.Tokens.SamlSecurityToken
  isExternal: false
  name: Id
  nameWithType: SamlSecurityToken.Id
- uid: System.IdentityModel.Tokens.SamlSecurityToken.Initialize*
  parent: System.IdentityModel.Tokens.SamlSecurityToken
  isExternal: false
  name: Initialize
  nameWithType: SamlSecurityToken.Initialize
- uid: System.IdentityModel.Tokens.SamlSecurityToken.MatchesKeyIdentifierClause*
  parent: System.IdentityModel.Tokens.SamlSecurityToken
  isExternal: false
  name: MatchesKeyIdentifierClause
  nameWithType: SamlSecurityToken.MatchesKeyIdentifierClause
- uid: System.IdentityModel.Tokens.SamlSecurityToken.SecurityKeys*
  parent: System.IdentityModel.Tokens.SamlSecurityToken
  isExternal: false
  name: SecurityKeys
  nameWithType: SamlSecurityToken.SecurityKeys
- uid: System.IdentityModel.Tokens.SamlSecurityToken.ValidFrom*
  parent: System.IdentityModel.Tokens.SamlSecurityToken
  isExternal: false
  name: ValidFrom
  nameWithType: SamlSecurityToken.ValidFrom
- uid: System.IdentityModel.Tokens.SamlSecurityToken.ValidTo*
  parent: System.IdentityModel.Tokens.SamlSecurityToken
  isExternal: false
  name: ValidTo
  nameWithType: SamlSecurityToken.ValidTo
