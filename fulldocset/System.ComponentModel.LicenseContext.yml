### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.LicenseContext
  id: LicenseContext
  children:
  - System.ComponentModel.LicenseContext.#ctor
  - System.ComponentModel.LicenseContext.GetSavedLicenseKey(System.Type,System.Reflection.Assembly)
  - System.ComponentModel.LicenseContext.GetService(System.Type)
  - System.ComponentModel.LicenseContext.SetSavedLicenseKey(System.Type,System.String)
  - System.ComponentModel.LicenseContext.UsageMode
  langs:
  - csharp
  name: LicenseContext
  nameWithType: LicenseContext
  fullName: System.ComponentModel.LicenseContext
  type: Class
  summary: "사용 허가 받은 개체를 사용할 수 시기를 지정 하는 도메인 내에서 실행 되는 라이선스를 지 원하는 데 필요한 추가 서비스를 얻는 방법을 제공 합니다."
  remarks: "이 클래스는 기본 LicenseContext를 제공합니다. 만 런타임 지원을 구현 하 고 라이선스 키는 저장 하는 지원 하지 않습니다."
  syntax:
    content: 'public class LicenseContext : IServiceProvider'
  inheritance:
  - System.Object
  implements:
  - System.IServiceProvider
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.LicenseContext.#ctor
  id: '#ctor'
  parent: System.ComponentModel.LicenseContext
  langs:
  - csharp
  name: LicenseContext()
  nameWithType: LicenseContext.LicenseContext()
  fullName: System.ComponentModel.LicenseContext.LicenseContext()
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.ComponentModel.LicenseContext&quot;> </xref> 클래스입니다."
  syntax:
    content: public LicenseContext ();
    parameters: []
  overload: System.ComponentModel.LicenseContext.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.LicenseContext.GetSavedLicenseKey(System.Type,System.Reflection.Assembly)
  id: GetSavedLicenseKey(System.Type,System.Reflection.Assembly)
  parent: System.ComponentModel.LicenseContext
  langs:
  - csharp
  name: GetSavedLicenseKey(Type,Assembly)
  nameWithType: LicenseContext.GetSavedLicenseKey(Type,Assembly)
  fullName: System.ComponentModel.LicenseContext.GetSavedLicenseKey(Type,Assembly)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "파생된 클래스에서 재정의 되 면 지정된 된 리소스 어셈블리에서 지정된 된 형식에 대 한 저장 된 라이선스 키를 반환 합니다."
  syntax:
    content: public virtual string GetSavedLicenseKey (Type type, System.Reflection.Assembly resourceAssembly);
    parameters:
    - id: type
      type: System.Type
      description: "A <xref:System.Type>구성 요소의 형식을 나타내는.</xref:System.Type>"
    - id: resourceAssembly
      type: System.Reflection.Assembly
      description: "<xref:System.Reflection.Assembly>라이선스 키를 가진.</xref:System.Reflection.Assembly>"
    return:
      type: System.String
      description: "<xref:System.ComponentModel.License.LicenseKey*>지정된 된 형식에 대 한.</xref:System.ComponentModel.License.LicenseKey*> 이 메서드가 반환 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 재정의 하지 않는 한 합니다."
  overload: System.ComponentModel.LicenseContext.GetSavedLicenseKey*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.LicenseContext.GetService(System.Type)
  id: GetService(System.Type)
  parent: System.ComponentModel.LicenseContext
  langs:
  - csharp
  name: GetService(Type)
  nameWithType: LicenseContext.GetService(Type)
  fullName: System.ComponentModel.LicenseContext.GetService(Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "사용 가능한 경우 요청된 된 서비스를 가져옵니다."
  syntax:
    content: public virtual object GetService (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "검색할 서비스의 형식입니다."
    return:
      type: System.Object
      description: "서비스 인스턴스 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 서비스를 찾을 수 없는 경우."
  overload: System.ComponentModel.LicenseContext.GetService*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.LicenseContext.SetSavedLicenseKey(System.Type,System.String)
  id: SetSavedLicenseKey(System.Type,System.String)
  parent: System.ComponentModel.LicenseContext
  langs:
  - csharp
  name: SetSavedLicenseKey(Type,String)
  nameWithType: LicenseContext.SetSavedLicenseKey(Type,String)
  fullName: System.ComponentModel.LicenseContext.SetSavedLicenseKey(Type,String)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "파생된 클래스에서 재정의 되 면 지정된 된 형식에 대 한 라이선스 키를 설정 합니다."
  remarks: "일반적으로 설정 하는 경우이 메서드를 호출 <xref:System.ComponentModel.LicenseUsageMode>디자인 타임에.</xref:System.ComponentModel.LicenseUsageMode> 재정의 해야 합니다는 <xref:System.ComponentModel.LicenseContext.UsageMode%2A>디자인 타임 라이선스가 지원을 구현 하는 속성.</xref:System.ComponentModel.LicenseContext.UsageMode%2A>"
  syntax:
    content: public virtual void SetSavedLicenseKey (Type type, string key);
    parameters:
    - id: type
      type: System.Type
      description: "A <xref:System.Type>라이선스 키와 관련 된 구성 요소를 나타내는입니다.</xref:System.Type>"
    - id: key
      type: System.String
      description: "<xref:System.ComponentModel.License.LicenseKey*>형식의 구성 요소에 대 한 저장.</xref:System.ComponentModel.License.LicenseKey*>"
  overload: System.ComponentModel.LicenseContext.SetSavedLicenseKey*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.LicenseContext.UsageMode
  id: UsageMode
  parent: System.ComponentModel.LicenseContext
  langs:
  - csharp
  name: UsageMode
  nameWithType: LicenseContext.UsageMode
  fullName: System.ComponentModel.LicenseContext.UsageMode
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "파생된 클래스에서 재정의 되 면 라이선스를 사용할 수 있습니다 시기를 지정 하는 값을 가져옵니다."
  syntax:
    content: public virtual System.ComponentModel.LicenseUsageMode UsageMode { get; }
    return:
      type: System.ComponentModel.LicenseUsageMode
      description: "중 하나는 <xref href=&quot;System.ComponentModel.LicenseUsageMode&quot;> </xref> 라이선스를 사용할 수 있습니다 시기를 지정 하는 값입니다. 기본값은 <xref href=&quot;System.ComponentModel.LicenseUsageMode&quot;> </xref>합니다."
  overload: System.ComponentModel.LicenseContext.UsageMode*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ComponentModel.LicenseContext.#ctor
  parent: System.ComponentModel.LicenseContext
  isExternal: false
  name: LicenseContext()
  nameWithType: LicenseContext.LicenseContext()
  fullName: System.ComponentModel.LicenseContext.LicenseContext()
- uid: System.ComponentModel.LicenseContext.GetSavedLicenseKey(System.Type,System.Reflection.Assembly)
  parent: System.ComponentModel.LicenseContext
  isExternal: false
  name: GetSavedLicenseKey(Type,Assembly)
  nameWithType: LicenseContext.GetSavedLicenseKey(Type,Assembly)
  fullName: System.ComponentModel.LicenseContext.GetSavedLicenseKey(Type,Assembly)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: true
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.ComponentModel.LicenseContext.GetService(System.Type)
  parent: System.ComponentModel.LicenseContext
  isExternal: false
  name: GetService(Type)
  nameWithType: LicenseContext.GetService(Type)
  fullName: System.ComponentModel.LicenseContext.GetService(Type)
- uid: System.ComponentModel.LicenseContext.SetSavedLicenseKey(System.Type,System.String)
  parent: System.ComponentModel.LicenseContext
  isExternal: false
  name: SetSavedLicenseKey(Type,String)
  nameWithType: LicenseContext.SetSavedLicenseKey(Type,String)
  fullName: System.ComponentModel.LicenseContext.SetSavedLicenseKey(Type,String)
- uid: System.ComponentModel.LicenseContext.UsageMode
  parent: System.ComponentModel.LicenseContext
  isExternal: false
  name: UsageMode
  nameWithType: LicenseContext.UsageMode
  fullName: System.ComponentModel.LicenseContext.UsageMode
- uid: System.ComponentModel.LicenseUsageMode
  parent: System.ComponentModel
  isExternal: false
  name: LicenseUsageMode
  nameWithType: LicenseUsageMode
  fullName: System.ComponentModel.LicenseUsageMode
- uid: System.ComponentModel.LicenseContext.#ctor*
  parent: System.ComponentModel.LicenseContext
  isExternal: false
  name: LicenseContext
  nameWithType: LicenseContext.LicenseContext
- uid: System.ComponentModel.LicenseContext.GetSavedLicenseKey*
  parent: System.ComponentModel.LicenseContext
  isExternal: false
  name: GetSavedLicenseKey
  nameWithType: LicenseContext.GetSavedLicenseKey
- uid: System.ComponentModel.LicenseContext.GetService*
  parent: System.ComponentModel.LicenseContext
  isExternal: false
  name: GetService
  nameWithType: LicenseContext.GetService
- uid: System.ComponentModel.LicenseContext.SetSavedLicenseKey*
  parent: System.ComponentModel.LicenseContext
  isExternal: false
  name: SetSavedLicenseKey
  nameWithType: LicenseContext.SetSavedLicenseKey
- uid: System.ComponentModel.LicenseContext.UsageMode*
  parent: System.ComponentModel.LicenseContext
  isExternal: false
  name: UsageMode
  nameWithType: LicenseContext.UsageMode
