### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.NetPeerTcpBinding
  id: NetPeerTcpBinding
  children:
  - System.ServiceModel.NetPeerTcpBinding.#ctor
  - System.ServiceModel.NetPeerTcpBinding.#ctor(System.String)
  - System.ServiceModel.NetPeerTcpBinding.CreateBindingElements
  - System.ServiceModel.NetPeerTcpBinding.EnvelopeVersion
  - System.ServiceModel.NetPeerTcpBinding.IsPnrpAvailable
  - System.ServiceModel.NetPeerTcpBinding.ListenIPAddress
  - System.ServiceModel.NetPeerTcpBinding.MaxBufferPoolSize
  - System.ServiceModel.NetPeerTcpBinding.MaxReceivedMessageSize
  - System.ServiceModel.NetPeerTcpBinding.Port
  - System.ServiceModel.NetPeerTcpBinding.ReaderQuotas
  - System.ServiceModel.NetPeerTcpBinding.Resolver
  - System.ServiceModel.NetPeerTcpBinding.Scheme
  - System.ServiceModel.NetPeerTcpBinding.Security
  - System.ServiceModel.NetPeerTcpBinding.ShouldSerializeReaderQuotas
  - System.ServiceModel.NetPeerTcpBinding.ShouldSerializeSecurity
  - System.ServiceModel.NetPeerTcpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously
  langs:
  - csharp
  name: NetPeerTcpBinding
  nameWithType: NetPeerTcpBinding
  fullName: System.ServiceModel.NetPeerTcpBinding
  type: Class
  summary: "피어-투-피어 네트워크 응용 프로그램을 위한 보안 바인딩을 제공합니다."
  remarks: "Netpeertcpbinding Binding 바인딩 피어 네트워킹 TCP 수준의 피어 투 피어 메시 인프라를 사용 하는 응용 프로그램 만들기에 대 한 지원을 제공 합니다.       각 <xref:System.ServiceModel.PeerNode>인스턴스는이 바인딩 형식으로 정의 된 여러 피어 채널을 호스팅할 수 있습니다.</xref:System.ServiceModel.PeerNode> 이러한 종류의 구성 된 인스턴스가 사용 하 여 생성 한 채널 팩터리는 피어 채널을 생성 데 사용할 수 있습니다. 피어 채널 팩터리는 입력 전용 피어 채널을 생성할 수 있습니다 (구현 <xref:System.ServiceModel.Channels.IInputChannel>), 출력 전용 (구현 <xref:System.ServiceModel.Channels.IOutputChannel>), 및 이중 (구현 <xref:System.ServiceModel.Channels.IDuplexChannel>).</xref:System.ServiceModel.Channels.IDuplexChannel> </xref:System.ServiceModel.Channels.IOutputChannel> </xref:System.ServiceModel.Channels.IInputChannel>       Windows Communication Framework (WCF)에서 제공 하는 표준 바인딩 중 하나입니다. 명령 코드에서 사용 하거나 응용 프로그램에 대 한 해당 XML 구성 파일에 지정 될 수 있습니다. 권장 방법은 구성 값을 사용 하 여 바인딩을 정의 하 고 사용 하지 않는 코드 기반 접근 방식을 제외 하 고 특정 고급 시나리오에서에 서비스가 초기화 될 때 구성 값을 설정 해야 합니다."
  syntax:
    content: >-
      [System.Obsolete("PeerChannel feature is obsolete and will be removed in the future.", false)]

      public class NetPeerTcpBinding : System.ServiceModel.Channels.Binding, System.ServiceModel.Channels.IBindingRuntimePreferences
  inheritance:
  - System.ServiceModel.Channels.Binding
  implements:
  - System.ServiceModel.Channels.IBindingRuntimePreferences
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.NetPeerTcpBinding.#ctor
  id: '#ctor'
  parent: System.ServiceModel.NetPeerTcpBinding
  langs:
  - csharp
  name: NetPeerTcpBinding()
  nameWithType: NetPeerTcpBinding.NetPeerTcpBinding()
  fullName: System.ServiceModel.NetPeerTcpBinding.NetPeerTcpBinding()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "새로운 기본 인스턴스를 초기화는 <xref href=&quot;System.ServiceModel.NetPeerTcpBinding&quot;> </xref> 클래스입니다."
  syntax:
    content: public NetPeerTcpBinding ();
    parameters: []
  overload: System.ServiceModel.NetPeerTcpBinding.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.NetPeerTcpBinding.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.ServiceModel.NetPeerTcpBinding
  langs:
  - csharp
  name: NetPeerTcpBinding(String)
  nameWithType: NetPeerTcpBinding.NetPeerTcpBinding(String)
  fullName: System.ServiceModel.NetPeerTcpBinding.NetPeerTcpBinding(String)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.ServiceModel.NetPeerTcpBinding&quot;> </xref> 클래스 지정 된 구성 이름 사용 합니다."
  remarks: "이 생성자는 새 만듭니다 <xref:System.ServiceModel.NetPeerTcpBinding>입력 한 이름입니다.</xref:System.ServiceModel.NetPeerTcpBinding> 해당 이름의 구성이 이미 있는 경우 해당 이름을 포함 하는 구성 파일에서 설정이 사용 됩니다. 이름이 아직 없는 경우 기본 구성 설정이 사용 됩니다."
  syntax:
    content: public NetPeerTcpBinding (string configurationName);
    parameters:
    - id: configurationName
      type: System.String
      description: "값은 <xref uid=&quot;langword_csharp_configurationName&quot; name=&quot;configurationName&quot; href=&quot;&quot;> </xref> 바인딩을 초기화할 때 해당 설정이 사용 되는 바인딩 요소를 식별 하는 특성입니다."
  overload: System.ServiceModel.NetPeerTcpBinding.#ctor*
  exceptions:
  - type: System.Configuration.ConfigurationException
    commentId: T:System.Configuration.ConfigurationException
    description: "구성이 잘못 되었습니다."
  platform:
  - net462
- uid: System.ServiceModel.NetPeerTcpBinding.CreateBindingElements
  id: CreateBindingElements
  parent: System.ServiceModel.NetPeerTcpBinding
  langs:
  - csharp
  name: CreateBindingElements()
  nameWithType: NetPeerTcpBinding.CreateBindingElements()
  fullName: System.ServiceModel.NetPeerTcpBinding.CreateBindingElements()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "바인딩에 대 한 바인딩 요소 컬렉션을 만듭니다."
  syntax:
    content: public override System.ServiceModel.Channels.BindingElementCollection CreateBindingElements ();
    parameters: []
    return:
      type: System.ServiceModel.Channels.BindingElementCollection
      description: "&lt;xref:System.Collections.Generic.ICollection%601&gt; 형식의 <xref:System.ServiceModel.Channels.BindingElement>바인딩을 만드는입니다.</xref:System.ServiceModel.Channels.BindingElement>"
  overload: System.ServiceModel.NetPeerTcpBinding.CreateBindingElements*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.NetPeerTcpBinding.EnvelopeVersion
  id: EnvelopeVersion
  parent: System.ServiceModel.NetPeerTcpBinding
  langs:
  - csharp
  name: EnvelopeVersion
  nameWithType: NetPeerTcpBinding.EnvelopeVersion
  fullName: System.ServiceModel.NetPeerTcpBinding.EnvelopeVersion
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "이 바인딩과 함께 사용 되는 SOAP 버전을 가져옵니다."
  syntax:
    content: public System.ServiceModel.EnvelopeVersion EnvelopeVersion { get; }
    return:
      type: System.ServiceModel.EnvelopeVersion
      description: "<xref:System.ServiceModel.EnvelopeVersion>이 바인딩과 함께 사용 하는 SOAP의 버전을 지정 하는 합니다.</xref:System.ServiceModel.EnvelopeVersion>"
  overload: System.ServiceModel.NetPeerTcpBinding.EnvelopeVersion*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.NetPeerTcpBinding.IsPnrpAvailable
  id: IsPnrpAvailable
  parent: System.ServiceModel.NetPeerTcpBinding
  langs:
  - csharp
  name: IsPnrpAvailable
  nameWithType: NetPeerTcpBinding.IsPnrpAvailable
  fullName: System.ServiceModel.NetPeerTcpBinding.IsPnrpAvailable
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "PNRP 서비스가 설치 되어 컴퓨터에서 사용할 수 있는지 여부를 가져옵니다."
  syntax:
    content: public static bool IsPnrpAvailable { get; }
    return:
      type: System.Boolean
      description: "PNRP가 설치 및 구성; 있으면 true를 없는 경우 false입니다."
  overload: System.ServiceModel.NetPeerTcpBinding.IsPnrpAvailable*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.NetPeerTcpBinding.ListenIPAddress
  id: ListenIPAddress
  parent: System.ServiceModel.NetPeerTcpBinding
  langs:
  - csharp
  name: ListenIPAddress
  nameWithType: NetPeerTcpBinding.ListenIPAddress
  fullName: System.ServiceModel.NetPeerTcpBinding.ListenIPAddress
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "로컬 피어 노드의 수신 대기에 사용 되는 IP 주소를 가져오거나 설정 합니다."
  remarks: "이 속성을 설정 하지 않으면 또는로 설정 된 경우 `null` 또는 <xref:System.String.Empty>, 연결 된 <xref:System.ServiceModel.PeerNode>모든 전역 주소 (IPv4 및 IPv6 모두) 로컬 컴퓨터에 대 한 구성에서 수신 대기 합니다.</xref:System.ServiceModel.PeerNode> </xref:System.String.Empty>       이 속성을 다음 연결 된 유효한 유니캐스트 IP 주소가 지정 된 경우 <xref:System.ServiceModel.PeerNode>개체는 해당 주소에서 수신 대기 합니다.</xref:System.ServiceModel.PeerNode> IPv4 및 IPv6 와일드 카드 주소를 유효한 간주 됩니다.       아닌`null` 와 함께에서이 속성에 지정 된 IP 주소 문자열 <xref:System.ServiceModel.Channels.PnrpPeerResolverBindingElement>, IP 주소는 가상 인터페이스가 아니라 실제 인터페이스와 연결 해야 합니다.</xref:System.ServiceModel.Channels.PnrpPeerResolverBindingElement>       기본 피어 확인자 (PNRP)를 등록 하려면 ListenIPAddress 애드혹 네트워크에 대 한 설정 되어야 합니다. 이 속성은 함께에서 지정 <xref:System.ServiceModel.Configuration.PnrpPeerResolverElement>(기본 피어 확인자) IP 주소 (예: 터널링 인터페이스)는 가상 인터페이스가 아니라 실제 네트워크 인터페이스에 속해야 합니다.</xref:System.ServiceModel.Configuration.PnrpPeerResolverElement> PNRP만 실제 인터페이스에 해당 하는 PNRP 클라우드 내에서 게시 때문입니다. 이 속성을 null로 설정 하면 모든 전역 주소가 전역 PNRP 클라우드에 게시 됩니다."
  syntax:
    content: public System.Net.IPAddress ListenIPAddress { get; set; }
    return:
      type: System.Net.IPAddress
      description: "A <xref:System.String>는 로컬 피어 노드가 수신 대기 하는 올바른 형식의 IPv4 또는 IPv6 주소를 포함 하는 값입니다.</xref:System.String>"
  overload: System.ServiceModel.NetPeerTcpBinding.ListenIPAddress*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "제공 된 주소가 잘못 되었거나 형식이 잘못 합니다."
  platform:
  - net462
- uid: System.ServiceModel.NetPeerTcpBinding.MaxBufferPoolSize
  id: MaxBufferPoolSize
  parent: System.ServiceModel.NetPeerTcpBinding
  langs:
  - csharp
  name: MaxBufferPoolSize
  nameWithType: NetPeerTcpBinding.MaxBufferPoolSize
  fullName: System.ServiceModel.NetPeerTcpBinding.MaxBufferPoolSize
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "바이트 피어 TCP 버퍼에 사용 되는 메모리 풀의 최대 크기를 가져오거나 설정 합니다."
  remarks: "MaxBufferPoolSize 값 일 수 없습니다 미만 <xref:System.ServiceModel.NetPeerTcpBinding.MaxReceivedMessageSize%2A>기본값은 65536 바이트 (64KB)입니다.</xref:System.ServiceModel.NetPeerTcpBinding.MaxReceivedMessageSize%2A>"
  syntax:
    content: public long MaxBufferPoolSize { get; set; }
    return:
      type: System.Int64
      description: "A <xref:System.Int32>메모리에서 들어오는 메시지를 버퍼링 하는 데 사용 되는 바이트의 최대 수를 지정 하는 값입니다.</xref:System.Int32> 기본값은 65, 536 바이트입니다."
  overload: System.ServiceModel.NetPeerTcpBinding.MaxBufferPoolSize*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.NetPeerTcpBinding.MaxReceivedMessageSize
  id: MaxReceivedMessageSize
  parent: System.ServiceModel.NetPeerTcpBinding
  langs:
  - csharp
  name: MaxReceivedMessageSize
  nameWithType: NetPeerTcpBinding.MaxReceivedMessageSize
  fullName: System.ServiceModel.NetPeerTcpBinding.MaxReceivedMessageSize
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "이 바인딩에서 만든 피어 채널에서 처리 하는 TCP 메시지를 바이트 단위로 최대 크기를 가져오거나 설정 합니다."
  syntax:
    content: public long MaxReceivedMessageSize { get; set; }
    return:
      type: System.Int64
      description: "<xref:System.Int32>이 바인딩에서 만든 피어 채널을 통해 전송 된 TCP 메시지의 바이트의 최대 크기를 들어 있는입니다.</xref:System.Int32> 기본값은 65536 (64KB)입니다."
  overload: System.ServiceModel.NetPeerTcpBinding.MaxReceivedMessageSize*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.NetPeerTcpBinding.Port
  id: Port
  parent: System.ServiceModel.NetPeerTcpBinding
  langs:
  - csharp
  name: Port
  nameWithType: NetPeerTcpBinding.Port
  fullName: System.ServiceModel.NetPeerTcpBinding.Port
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "에 바인딩되는 네트워크 포트를 가져오거나 설정 합니다."
  remarks: "포트 값은 유효 하지 않을 경우 <xref:System.ArgumentException>발생 합니다.</xref:System.ArgumentException> 이 속성에 대 한 기본값은 0 이며, 수신기 포트가 예약 되지 않은 모든 포트에서 임의로 선택 되어 있는지를 나타냅니다."
  syntax:
    content: public int Port { get; set; }
    return:
      type: System.Int32
      description: "A <xref:System.Int32>기반이이 바인딩 인스턴스가 피어별 TCP 메시지를 처리할 네트워크 포트를 나타내는 값입니다.</xref:System.Int32>"
  overload: System.ServiceModel.NetPeerTcpBinding.Port*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.NetPeerTcpBinding.ReaderQuotas
  id: ReaderQuotas
  parent: System.ServiceModel.NetPeerTcpBinding
  langs:
  - csharp
  name: ReaderQuotas
  nameWithType: NetPeerTcpBinding.ReaderQuotas
  fullName: System.ServiceModel.NetPeerTcpBinding.ReaderQuotas
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "가져오거나는 <xref:System.Xml.XmlDictionaryReaderQuotas>이 바인딩에 연결 된.</xref:System.Xml.XmlDictionaryReaderQuotas>"
  syntax:
    content: public System.Xml.XmlDictionaryReaderQuotas ReaderQuotas { get; set; }
    return:
      type: System.Xml.XmlDictionaryReaderQuotas
      description: "<xref:System.Xml.XmlDictionaryReaderQuotas>이 바인딩에 연결 된.</xref:System.Xml.XmlDictionaryReaderQuotas>"
  overload: System.ServiceModel.NetPeerTcpBinding.ReaderQuotas*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "이 속성을 null로 설정 하려고 했습니다. 응용 프로그램입니다."
  platform:
  - net462
- uid: System.ServiceModel.NetPeerTcpBinding.Resolver
  id: Resolver
  parent: System.ServiceModel.NetPeerTcpBinding
  langs:
  - csharp
  name: Resolver
  nameWithType: NetPeerTcpBinding.Resolver
  fullName: System.ServiceModel.NetPeerTcpBinding.Resolver
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "가져옵니다는 <xref href=&quot;System.ServiceModel.PeerResolver&quot;> </xref> 이 바인딩 인스턴스에서 사용 하 여 피어 메시 ID를 피어 메시 내 노드의 끝점 IP 주소로 확인 하도록 합니다."
  syntax:
    content: public System.ServiceModel.PeerResolvers.PeerResolverSettings Resolver { get; }
    return:
      type: System.ServiceModel.PeerResolvers.PeerResolverSettings
      description: "A <xref href=&quot;System.ServiceModel.PeerResolver&quot;> </xref> 집합이를 피어 메시 ID를 확인 하는 데 <xref href=&quot;System.ServiceModel.PeerNodeAddress&quot;> </xref> 메시에 참여 하는 여러 노드를 나타내는 인스턴스."
  overload: System.ServiceModel.NetPeerTcpBinding.Resolver*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.NetPeerTcpBinding.Scheme
  id: Scheme
  parent: System.ServiceModel.NetPeerTcpBinding
  langs:
  - csharp
  name: Scheme
  nameWithType: NetPeerTcpBinding.Scheme
  fullName: System.ServiceModel.NetPeerTcpBinding.Scheme
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "이 바인딩과 연결 된 전송 프로토콜에 사용 되는 URI 체계를 가져옵니다."
  remarks: "이 값은 &quot;net.p2p&quot; 이어야 합니다."
  syntax:
    content: public override string Scheme { get; }
    return:
      type: System.String
      description: "A <xref:System.String>이 바인딩에 사용 되는 특정 전송 프로토콜을 위한 URI 체계를 지정 하는.</xref:System.String>"
  overload: System.ServiceModel.NetPeerTcpBinding.Scheme*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.NetPeerTcpBinding.Security
  id: Security
  parent: System.ServiceModel.NetPeerTcpBinding
  langs:
  - csharp
  name: Security
  nameWithType: NetPeerTcpBinding.Security
  fullName: System.ServiceModel.NetPeerTcpBinding.Security
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "가져오고이 바인딩에서 만든 피어 채널에 설정할 보안을 설정 합니다."
  syntax:
    content: public System.ServiceModel.PeerSecuritySettings Security { get; set; }
    return:
      type: System.ServiceModel.PeerSecuritySettings
      description: "<xref href=&quot;System.ServiceModel.PeerSecuritySettings&quot;></xref>이 바인딩에서 만든 피어 채널에 설정할 보안을 나타내는 열거형 값입니다. 보안은 메시지-또는 전송 별로 고유할 수 있습니다."
  overload: System.ServiceModel.NetPeerTcpBinding.Security*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.NetPeerTcpBinding.ShouldSerializeReaderQuotas
  id: ShouldSerializeReaderQuotas
  parent: System.ServiceModel.NetPeerTcpBinding
  langs:
  - csharp
  name: ShouldSerializeReaderQuotas()
  nameWithType: NetPeerTcpBinding.ShouldSerializeReaderQuotas()
  fullName: System.ServiceModel.NetPeerTcpBinding.ShouldSerializeReaderQuotas()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "바인딩에 대 한 판독기 할당량 데이터를 serialize 해야 하는지 여부를 지정 하는 값을 가져옵니다."
  syntax:
    content: public bool ShouldSerializeReaderQuotas ();
    parameters: []
    return:
      type: System.Boolean
      description: "반환 <xref:System.Boolean>지정 하는 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> 판독기 할당량 데이터를 serialize 해야 하는 경우 및 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 직렬화 하지 않을 경우.</xref:System.Boolean>"
  overload: System.ServiceModel.NetPeerTcpBinding.ShouldSerializeReaderQuotas*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.NetPeerTcpBinding.ShouldSerializeSecurity
  id: ShouldSerializeSecurity
  parent: System.ServiceModel.NetPeerTcpBinding
  langs:
  - csharp
  name: ShouldSerializeSecurity()
  nameWithType: NetPeerTcpBinding.ShouldSerializeSecurity()
  fullName: System.ServiceModel.NetPeerTcpBinding.ShouldSerializeSecurity()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "바인딩에 대 한 보안 정보를 serialize 해야 하는지 여부를 지정 하는 값을 가져옵니다."
  syntax:
    content: public bool ShouldSerializeSecurity ();
    parameters: []
    return:
      type: System.Boolean
      description: "반환 <xref:System.Boolean>지정 하는 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> 바인딩에 대 한 보안 정보를 serialize 해야 하는 경우 및 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 직렬화 하지 않을 경우..</xref:System.Boolean>"
  overload: System.ServiceModel.NetPeerTcpBinding.ShouldSerializeSecurity*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.NetPeerTcpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously
  id: System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously
  isEii: true
  parent: System.ServiceModel.NetPeerTcpBinding
  langs:
  - csharp
  name: System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously
  nameWithType: NetPeerTcpBinding.System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously
  fullName: System.ServiceModel.NetPeerTcpBinding.System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "이 바인딩에서 만든 피어 채널을 통해 들어오는 요청이 동기적 또는 비동기적으로 처리 되는지를 가져옵니다."
  syntax:
    content: bool System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously { get; }
    return:
      type: System.Boolean
      description: "True 이면 들어오는 요청이 동기적으로 처리 되; false 이면 비동기적으로 처리 됩니다. 요청이 비동기적으로 처리는 기본값은 false입니다."
  overload: System.ServiceModel.NetPeerTcpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Channels.Binding
  isExternal: false
  name: System.ServiceModel.Channels.Binding
- uid: System.Configuration.ConfigurationException
  parent: System.Configuration
  isExternal: false
  name: ConfigurationException
  nameWithType: ConfigurationException
  fullName: System.Configuration.ConfigurationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ServiceModel.NetPeerTcpBinding.#ctor
  parent: System.ServiceModel.NetPeerTcpBinding
  isExternal: false
  name: NetPeerTcpBinding()
  nameWithType: NetPeerTcpBinding.NetPeerTcpBinding()
  fullName: System.ServiceModel.NetPeerTcpBinding.NetPeerTcpBinding()
- uid: System.ServiceModel.NetPeerTcpBinding.#ctor(System.String)
  parent: System.ServiceModel.NetPeerTcpBinding
  isExternal: false
  name: NetPeerTcpBinding(String)
  nameWithType: NetPeerTcpBinding.NetPeerTcpBinding(String)
  fullName: System.ServiceModel.NetPeerTcpBinding.NetPeerTcpBinding(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.NetPeerTcpBinding.CreateBindingElements
  parent: System.ServiceModel.NetPeerTcpBinding
  isExternal: false
  name: CreateBindingElements()
  nameWithType: NetPeerTcpBinding.CreateBindingElements()
  fullName: System.ServiceModel.NetPeerTcpBinding.CreateBindingElements()
- uid: System.ServiceModel.Channels.BindingElementCollection
  parent: System.ServiceModel.Channels
  isExternal: true
  name: BindingElementCollection
  nameWithType: BindingElementCollection
  fullName: System.ServiceModel.Channels.BindingElementCollection
- uid: System.ServiceModel.NetPeerTcpBinding.EnvelopeVersion
  parent: System.ServiceModel.NetPeerTcpBinding
  isExternal: false
  name: EnvelopeVersion
  nameWithType: NetPeerTcpBinding.EnvelopeVersion
  fullName: System.ServiceModel.NetPeerTcpBinding.EnvelopeVersion
- uid: System.ServiceModel.EnvelopeVersion
  parent: System.ServiceModel
  isExternal: true
  name: EnvelopeVersion
  nameWithType: EnvelopeVersion
  fullName: System.ServiceModel.EnvelopeVersion
- uid: System.ServiceModel.NetPeerTcpBinding.IsPnrpAvailable
  parent: System.ServiceModel.NetPeerTcpBinding
  isExternal: false
  name: IsPnrpAvailable
  nameWithType: NetPeerTcpBinding.IsPnrpAvailable
  fullName: System.ServiceModel.NetPeerTcpBinding.IsPnrpAvailable
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.NetPeerTcpBinding.ListenIPAddress
  parent: System.ServiceModel.NetPeerTcpBinding
  isExternal: false
  name: ListenIPAddress
  nameWithType: NetPeerTcpBinding.ListenIPAddress
  fullName: System.ServiceModel.NetPeerTcpBinding.ListenIPAddress
- uid: System.Net.IPAddress
  parent: System.Net
  isExternal: true
  name: IPAddress
  nameWithType: IPAddress
  fullName: System.Net.IPAddress
- uid: System.ServiceModel.NetPeerTcpBinding.MaxBufferPoolSize
  parent: System.ServiceModel.NetPeerTcpBinding
  isExternal: false
  name: MaxBufferPoolSize
  nameWithType: NetPeerTcpBinding.MaxBufferPoolSize
  fullName: System.ServiceModel.NetPeerTcpBinding.MaxBufferPoolSize
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.ServiceModel.NetPeerTcpBinding.MaxReceivedMessageSize
  parent: System.ServiceModel.NetPeerTcpBinding
  isExternal: false
  name: MaxReceivedMessageSize
  nameWithType: NetPeerTcpBinding.MaxReceivedMessageSize
  fullName: System.ServiceModel.NetPeerTcpBinding.MaxReceivedMessageSize
- uid: System.ServiceModel.NetPeerTcpBinding.Port
  parent: System.ServiceModel.NetPeerTcpBinding
  isExternal: false
  name: Port
  nameWithType: NetPeerTcpBinding.Port
  fullName: System.ServiceModel.NetPeerTcpBinding.Port
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ServiceModel.NetPeerTcpBinding.ReaderQuotas
  parent: System.ServiceModel.NetPeerTcpBinding
  isExternal: false
  name: ReaderQuotas
  nameWithType: NetPeerTcpBinding.ReaderQuotas
  fullName: System.ServiceModel.NetPeerTcpBinding.ReaderQuotas
- uid: System.Xml.XmlDictionaryReaderQuotas
  parent: System.Xml
  isExternal: true
  name: XmlDictionaryReaderQuotas
  nameWithType: XmlDictionaryReaderQuotas
  fullName: System.Xml.XmlDictionaryReaderQuotas
- uid: System.ServiceModel.NetPeerTcpBinding.Resolver
  parent: System.ServiceModel.NetPeerTcpBinding
  isExternal: false
  name: Resolver
  nameWithType: NetPeerTcpBinding.Resolver
  fullName: System.ServiceModel.NetPeerTcpBinding.Resolver
- uid: System.ServiceModel.PeerResolvers.PeerResolverSettings
  parent: System.ServiceModel.PeerResolvers
  isExternal: false
  name: PeerResolverSettings
  nameWithType: PeerResolverSettings
  fullName: System.ServiceModel.PeerResolvers.PeerResolverSettings
- uid: System.ServiceModel.NetPeerTcpBinding.Scheme
  parent: System.ServiceModel.NetPeerTcpBinding
  isExternal: false
  name: Scheme
  nameWithType: NetPeerTcpBinding.Scheme
  fullName: System.ServiceModel.NetPeerTcpBinding.Scheme
- uid: System.ServiceModel.NetPeerTcpBinding.Security
  parent: System.ServiceModel.NetPeerTcpBinding
  isExternal: false
  name: Security
  nameWithType: NetPeerTcpBinding.Security
  fullName: System.ServiceModel.NetPeerTcpBinding.Security
- uid: System.ServiceModel.PeerSecuritySettings
  parent: System.ServiceModel
  isExternal: false
  name: PeerSecuritySettings
  nameWithType: PeerSecuritySettings
  fullName: System.ServiceModel.PeerSecuritySettings
- uid: System.ServiceModel.NetPeerTcpBinding.ShouldSerializeReaderQuotas
  parent: System.ServiceModel.NetPeerTcpBinding
  isExternal: false
  name: ShouldSerializeReaderQuotas()
  nameWithType: NetPeerTcpBinding.ShouldSerializeReaderQuotas()
  fullName: System.ServiceModel.NetPeerTcpBinding.ShouldSerializeReaderQuotas()
- uid: System.ServiceModel.NetPeerTcpBinding.ShouldSerializeSecurity
  parent: System.ServiceModel.NetPeerTcpBinding
  isExternal: false
  name: ShouldSerializeSecurity()
  nameWithType: NetPeerTcpBinding.ShouldSerializeSecurity()
  fullName: System.ServiceModel.NetPeerTcpBinding.ShouldSerializeSecurity()
- uid: System.ServiceModel.NetPeerTcpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously
  parent: System.ServiceModel.NetPeerTcpBinding
  isExternal: false
  name: System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously
  nameWithType: NetPeerTcpBinding.System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously
  fullName: System.ServiceModel.NetPeerTcpBinding.System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously
- uid: System.ServiceModel.NetPeerTcpBinding.#ctor*
  parent: System.ServiceModel.NetPeerTcpBinding
  isExternal: false
  name: NetPeerTcpBinding
  nameWithType: NetPeerTcpBinding.NetPeerTcpBinding
- uid: System.ServiceModel.NetPeerTcpBinding.CreateBindingElements*
  parent: System.ServiceModel.NetPeerTcpBinding
  isExternal: false
  name: CreateBindingElements
  nameWithType: NetPeerTcpBinding.CreateBindingElements
- uid: System.ServiceModel.NetPeerTcpBinding.EnvelopeVersion*
  parent: System.ServiceModel.NetPeerTcpBinding
  isExternal: false
  name: EnvelopeVersion
  nameWithType: NetPeerTcpBinding.EnvelopeVersion
- uid: System.ServiceModel.NetPeerTcpBinding.IsPnrpAvailable*
  parent: System.ServiceModel.NetPeerTcpBinding
  isExternal: false
  name: IsPnrpAvailable
  nameWithType: NetPeerTcpBinding.IsPnrpAvailable
- uid: System.ServiceModel.NetPeerTcpBinding.ListenIPAddress*
  parent: System.ServiceModel.NetPeerTcpBinding
  isExternal: false
  name: ListenIPAddress
  nameWithType: NetPeerTcpBinding.ListenIPAddress
- uid: System.ServiceModel.NetPeerTcpBinding.MaxBufferPoolSize*
  parent: System.ServiceModel.NetPeerTcpBinding
  isExternal: false
  name: MaxBufferPoolSize
  nameWithType: NetPeerTcpBinding.MaxBufferPoolSize
- uid: System.ServiceModel.NetPeerTcpBinding.MaxReceivedMessageSize*
  parent: System.ServiceModel.NetPeerTcpBinding
  isExternal: false
  name: MaxReceivedMessageSize
  nameWithType: NetPeerTcpBinding.MaxReceivedMessageSize
- uid: System.ServiceModel.NetPeerTcpBinding.Port*
  parent: System.ServiceModel.NetPeerTcpBinding
  isExternal: false
  name: Port
  nameWithType: NetPeerTcpBinding.Port
- uid: System.ServiceModel.NetPeerTcpBinding.ReaderQuotas*
  parent: System.ServiceModel.NetPeerTcpBinding
  isExternal: false
  name: ReaderQuotas
  nameWithType: NetPeerTcpBinding.ReaderQuotas
- uid: System.ServiceModel.NetPeerTcpBinding.Resolver*
  parent: System.ServiceModel.NetPeerTcpBinding
  isExternal: false
  name: Resolver
  nameWithType: NetPeerTcpBinding.Resolver
- uid: System.ServiceModel.NetPeerTcpBinding.Scheme*
  parent: System.ServiceModel.NetPeerTcpBinding
  isExternal: false
  name: Scheme
  nameWithType: NetPeerTcpBinding.Scheme
- uid: System.ServiceModel.NetPeerTcpBinding.Security*
  parent: System.ServiceModel.NetPeerTcpBinding
  isExternal: false
  name: Security
  nameWithType: NetPeerTcpBinding.Security
- uid: System.ServiceModel.NetPeerTcpBinding.ShouldSerializeReaderQuotas*
  parent: System.ServiceModel.NetPeerTcpBinding
  isExternal: false
  name: ShouldSerializeReaderQuotas
  nameWithType: NetPeerTcpBinding.ShouldSerializeReaderQuotas
- uid: System.ServiceModel.NetPeerTcpBinding.ShouldSerializeSecurity*
  parent: System.ServiceModel.NetPeerTcpBinding
  isExternal: false
  name: ShouldSerializeSecurity
  nameWithType: NetPeerTcpBinding.ShouldSerializeSecurity
- uid: System.ServiceModel.NetPeerTcpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously*
  parent: System.ServiceModel.NetPeerTcpBinding
  isExternal: false
  name: System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously
  nameWithType: NetPeerTcpBinding.System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously
