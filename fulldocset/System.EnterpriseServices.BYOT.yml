### YamlMime:ManagedReference
items:
- uid: System.EnterpriseServices.BYOT
  id: BYOT
  children:
  - System.EnterpriseServices.BYOT.CreateWithTipTransaction(System.String,System.Type)
  - System.EnterpriseServices.BYOT.CreateWithTransaction(System.Object,System.Type)
  langs:
  - csharp
  name: BYOT
  nameWithType: BYOT
  fullName: System.EnterpriseServices.BYOT
  type: Class
  summary: "COM + 래핑합니다 <xref uid=&quot;langword_csharp_ByotServerEx&quot; name=&quot;ByotServerEx&quot; href=&quot;&quot;> </xref> 는 COM + DTC 인터페이스와 클래스 <xref uid=&quot;langword_csharp_ICreateWithTransactionEx&quot; name=&quot;ICreateWithTransactionEx&quot; href=&quot;&quot;> </xref> 및 <xref uid=&quot;langword_csharp_ICreateWithTipTransactionEx&quot; name=&quot;ICreateWithTipTransactionEx&quot; href=&quot;&quot;> </xref>합니다. 이 클래스는 상속 될 수 없습니다."
  remarks: "BYOT (Bring Your 자체 트랜잭션을)는 구성 요소를를 만들 수 또는 외부 트랜잭션을 상속할 수 있습니다. 즉, 관련된 트랜잭션이 아직 포함 되지 않은 하는 구성 요소에는 트랜잭션을 얻을 수 있습니다. COM +는 임의의 기존 Distributed Transaction Coordinator (DTC) 또는 트랜잭션 인터넷 프로토콜 (팁) 트랜잭션 새 구성 요소의 컨텍스트의 트랜잭션 속성으로 설정할 수 있습니다. 이렇게 하면 COM + 구성 요소를 해당 수명을 제어 트랜잭션 (TP) 모니터, 개체/작업 선택기 (OTS) 또는 데이터베이스 관리 시스템 (DBMS) 처리 하는 트랜잭션과 연결할 수 있습니다.       BYOT 트랜잭션은 주의 해 서 사용 해야 합니다. 특정 상황에서 여러 동기화 도메인에 걸쳐 있는 트랜잭션은에서 발생할 수 있습니다-트랜잭션은 다른 트랜잭션과 병렬 처리 수준, 즉 수 있도록 합니다.       BYOT 트랜잭션을 보다는 자동 트랜잭션에서 작성자 비즈니스 구성 요소를 위한 기본 프로그래밍 모델."
  syntax:
    content: public sealed class BYOT
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.EnterpriseServices.BYOT.CreateWithTipTransaction(System.String,System.Type)
  id: CreateWithTipTransaction(System.String,System.Type)
  parent: System.EnterpriseServices.BYOT
  langs:
  - csharp
  name: CreateWithTipTransaction(String,Type)
  nameWithType: BYOT.CreateWithTipTransaction(String,Type)
  fullName: System.EnterpriseServices.BYOT.CreateWithTipTransaction(String,Type)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "(TIP (트랜잭션 인터넷 프로토콜)를 사용 하 여 수동 트랜잭션 내에 참여 하는 개체를 만듭니다."
  remarks: "CreateWithTipTransaction 수행 해당 하는 관리 되는 COM + DTC 메서드 `ICreateWithTIPTransaction::CreateInstance`합니다."
  syntax:
    content: public static object CreateWithTipTransaction (string url, Type t);
    parameters:
    - id: url
      type: System.String
      description: "트랜잭션을 지정 하는 팁 URL입니다."
    - id: t
      type: System.Type
      description: "유형"
    return:
      type: System.Object
      description: "요청 된 트랜잭션입니다."
  overload: System.EnterpriseServices.BYOT.CreateWithTipTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.BYOT.CreateWithTransaction(System.Object,System.Type)
  id: CreateWithTransaction(System.Object,System.Type)
  parent: System.EnterpriseServices.BYOT
  langs:
  - csharp
  name: CreateWithTransaction(Object,Type)
  nameWithType: BYOT.CreateWithTransaction(Object,Type)
  fullName: System.EnterpriseServices.BYOT.CreateWithTransaction(Object,Type)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "수동 트랜잭션 내에 참여 하는 개체를 만듭니다."
  remarks: "해당 하는 관리 되는 COM + DTC Distributed Transaction Coordinator () 메서드를 수행 하는 CreateWithTransaction `ICreateWithTransaction::CreateInstance`합니다."
  syntax:
    content: public static object CreateWithTransaction (object transaction, Type t);
    parameters:
    - id: transaction
      type: System.Object
      description: "<xref href=&quot;System.EnterpriseServices.ITransaction&quot;> </xref> 또는 <xref href=&quot;System.Transactions.Transaction&quot;> </xref> 트랜잭션을 지정 하는 개체입니다."
    - id: t
      type: System.Type
      description: "지정 된 형식입니다."
    return:
      type: System.Object
      description: "요청 된 트랜잭션입니다."
  overload: System.EnterpriseServices.BYOT.CreateWithTransaction*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.EnterpriseServices.BYOT.CreateWithTipTransaction(System.String,System.Type)
  parent: System.EnterpriseServices.BYOT
  isExternal: false
  name: CreateWithTipTransaction(String,Type)
  nameWithType: BYOT.CreateWithTipTransaction(String,Type)
  fullName: System.EnterpriseServices.BYOT.CreateWithTipTransaction(String,Type)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.EnterpriseServices.BYOT.CreateWithTransaction(System.Object,System.Type)
  parent: System.EnterpriseServices.BYOT
  isExternal: false
  name: CreateWithTransaction(Object,Type)
  nameWithType: BYOT.CreateWithTransaction(Object,Type)
  fullName: System.EnterpriseServices.BYOT.CreateWithTransaction(Object,Type)
- uid: System.EnterpriseServices.BYOT.CreateWithTipTransaction*
  parent: System.EnterpriseServices.BYOT
  isExternal: false
  name: CreateWithTipTransaction
  nameWithType: BYOT.CreateWithTipTransaction
- uid: System.EnterpriseServices.BYOT.CreateWithTransaction*
  parent: System.EnterpriseServices.BYOT
  isExternal: false
  name: CreateWithTransaction
  nameWithType: BYOT.CreateWithTransaction
