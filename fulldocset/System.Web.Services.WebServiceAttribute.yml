### YamlMime:ManagedReference
items:
- uid: System.Web.Services.WebServiceAttribute
  id: WebServiceAttribute
  children:
  - System.Web.Services.WebServiceAttribute.#ctor
  - System.Web.Services.WebServiceAttribute.DefaultNamespace
  - System.Web.Services.WebServiceAttribute.Description
  - System.Web.Services.WebServiceAttribute.Name
  - System.Web.Services.WebServiceAttribute.Namespace
  langs:
  - csharp
  name: WebServiceAttribute
  nameWithType: WebServiceAttribute
  fullName: System.Web.Services.WebServiceAttribute
  type: Class
  summary: "추가 정보는 XML 웹 서비스 등의 기능을 설명 하는 문자열에 추가 하는 데 사용 합니다."
  remarks: "WebServiceAttribute를 게시 하 고 실행 하는 XML 웹 서비스에 대 한 필요 하지 않습니다. 사용할 수는 `WebServiceAttribute` XML 웹 서비스에 대 한 서비스 설명 및 서비스 도움말 페이지에 사용 되는 공용 언어 런타임 식별자에 대 한 규칙에 의해 제한 되지 않습니다 XML 웹 서비스에 대 한 이름을 지정 합니다.       공개 하기 전에 XML 웹 서비스는 기본 XML 네임 스페이스를 변경 해야 합니다. 각 XML 웹 서비스 클라이언트 응용 프로그램 웹에 있는 다른 서비스에서 구분할 수 있도록 식별 하는 고유한 XML 네임 스페이스를 필요 합니다. http://tempuri.org/는 개발, XML 웹 서비스에 사용할 수 있지만 게시 된 XML 웹 서비스는 영구적인 네임 스페이스를 사용 해야 합니다.       XML 웹 서비스 사용자가 제어 하는 XML 네임 스페이스로 식별 되어야 합니다. 예를 들어 XML 네임 스페이스의 일부분으로 회사의 인터넷 도메인 이름을 사용할 수 있습니다. 많은 XML 웹 서비스 XML 네임 스페이스 Url 같이, 하지만 가리킬 필요는 없습니다는 웹에서 실제 리소스에 있습니다. (XML 웹 서비스에 대 한 XML 네임 스페이스는 URIs입니다.) ASP.NET을 사용 하 여 만든 XML 웹 서비스에 대 한 기본 XML 네임 스페이스 변경할 수 있습니다를 사용 하 여 <xref:System.Web.Services.WebServiceAttribute.Namespace%2A>속성.</xref:System.Web.Services.WebServiceAttribute.Namespace%2A>       특성을 사용 하는 방법에 대 한 자세한 내용은 참조 [특성](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following example sets the <xref:System.Web.Services.WebServiceAttribute.Description%2A> property of the WebServiceAttribute to \" `Common Server Variables` \" and sets the XML namespace to http://www.microsoft.com/.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Interface)]

      public sealed class WebServiceAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Services.WebServiceAttribute.#ctor
  id: '#ctor'
  parent: System.Web.Services.WebServiceAttribute
  langs:
  - csharp
  name: WebServiceAttribute()
  nameWithType: WebServiceAttribute.WebServiceAttribute()
  fullName: System.Web.Services.WebServiceAttribute.WebServiceAttribute()
  type: Constructor
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.Services.WebServiceAttribute&quot;> </xref> 클래스입니다."
  remarks: ''
  example:
  - '[!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]'
  syntax:
    content: public WebServiceAttribute ();
    parameters: []
  overload: System.Web.Services.WebServiceAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.WebServiceAttribute.DefaultNamespace
  id: DefaultNamespace
  parent: System.Web.Services.WebServiceAttribute
  langs:
  - csharp
  name: DefaultNamespace
  nameWithType: WebServiceAttribute.DefaultNamespace
  fullName: System.Web.Services.WebServiceAttribute.DefaultNamespace
  type: Field
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services
  summary: "기본값은 <xref:System.Web.Services.WebServiceAttribute.Namespace*>속성.</xref:System.Web.Services.WebServiceAttribute.Namespace*> 이 필드는 상수입니다."
  syntax:
    content: public const string DefaultNamespace;
    return:
      type: System.String
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.WebServiceAttribute.Description
  id: Description
  parent: System.Web.Services.WebServiceAttribute
  langs:
  - csharp
  name: Description
  nameWithType: WebServiceAttribute.Description
  fullName: System.Web.Services.WebServiceAttribute.Description
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services
  summary: "XML 웹 서비스에 대 한 설명 메시지입니다."
  remarks: "설명 하는 메시지 표시 됩니다는 XML 웹 서비스의 잠재 소비자에 게 XML 웹 서비스에 대 한 설명 문서를 생성할 때 서비스 설명 및 서비스 도움말 페이지 등."
  example:
  - "The following example sets the Description property to \" `Common Server Variables` \".  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public string Description { get; set; }
    return:
      type: System.String
      description: "XML 웹 서비스의 기능을 설명 하는 텍스트입니다."
  overload: System.Web.Services.WebServiceAttribute.Description*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.WebServiceAttribute.Name
  id: Name
  parent: System.Web.Services.WebServiceAttribute
  langs:
  - csharp
  name: Name
  nameWithType: WebServiceAttribute.Name
  fullName: System.Web.Services.WebServiceAttribute.Name
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services
  summary: "XML 웹 서비스의 이름을 가져오거나 설정 합니다."
  remarks: "서비스 설명 생성 되며 사용자는 XML 웹 서비스에 대 한 URL로 이동의 쿼리 문자열을 제공 하는 경우? WSDL 합니다. 서비스 설명에서 Name 속성은 XML 웹 서비스에 대 한 XML 정규화 된 이름의 로컬 부분을 식별합니다. `Name` 속성도 서비스 도움말 페이지에 표시 되는 XML 웹 서비스의 이름에 사용 됩니다. 서비스 도움말 페이지는 잠재 소비자가 XML 웹 서비스 메서드 이름 및 해당 매개 변수를 지정 하지 않고 XML 웹 서비스에 대 한 the.asmx 페이지를 탐색할 때 표시 됩니다.       XML 문서와 동일한 이름 가진 요소를 구분 하는 XML 정규화 된 이름이 사용 됩니다. XML 정규화 된 이름은 콜론으로 구분 된 다음 두 부분으로 이루어져: 네임 스페이스 또는 접두사와 연결 된 네임 스페이스 로컬 부분입니다. 네임 스페이스는 URI 참조의 서비스 설명의 측면에서는 대 한 구성 됩니다의 값이 고 <xref:System.Web.Services.WebServiceAttribute.Namespace%2A>속성.</xref:System.Web.Services.WebServiceAttribute.Namespace%2A> 일반적으로 URI에 대 한 별칭 역할을 하는 접두사는는 네임 스페이스와 연결 되므로 모든 후속 XML 정규화 된 네임 스페이스를 사용 하 여 이름이 단축된 접두사를 사용할 수 있습니다. 로컬 부분은 문자 또는 밑줄 공백을 포함 하지 않고 시작 하는 문자열입니다. 따라서 다음과 같은 형식에서는 서비스 설명에서 XML 웹 서비스를 식별 하는 XML 정규화 된 이름을: <xref:System.Web.Services.WebServiceAttribute.Namespace%2A>: XML에 대 한 자세한 내용은 된 정규화 된 이름에 대 한 이름을 http://www.w3.org/TR/REC-xml-names/를 참조 하십시오.</xref:System.Web.Services.WebServiceAttribute.Namespace%2A>"
  example:
  - "The following example sets Name of the XML Web service to `MyName`.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "XML 웹 서비스에 대 한 이름입니다. 기본값은 XML 웹 서비스를 구현 하는 클래스의 이름입니다."
  overload: System.Web.Services.WebServiceAttribute.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.WebServiceAttribute.Namespace
  id: Namespace
  parent: System.Web.Services.WebServiceAttribute
  langs:
  - csharp
  name: Namespace
  nameWithType: WebServiceAttribute.Namespace
  fullName: System.Web.Services.WebServiceAttribute.Namespace
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services
  summary: "XML 웹 서비스에 사용할 기본 XML 네임 스페이스를 가져오거나 설정 합니다."
  remarks: "XML 네임 스페이스 이름을으로 식별자 URI (Uniform Resource) 식별 되는 XML 문서에서 만들 수 있습니다. XML 네임 스페이스를 사용 하 여의 XML 문서 요소 또는 특성을 고유 하 게 식별할 수 있습니다. XML 웹 서비스에 대 한 서비스 설명은 XML, 특히에 WSDL 웹 서비스 설명 언어 ()에서 정의 됩니다.       XML 웹 서비스에 대 한 서비스 설명을 내 Namespace XML 웹 서비스에 직접 관련 된 XML 요소에 대 한 기본 네임 스페이스로 사용 됩니다. XML 웹 서비스 및 XML 웹 서비스 메서드 이름에 지정 된 네임 스페이스에 관련 되는 예를 들어는 `Namespace` 속성입니다. WSDL에만 적용 되는 요소 http://schemas.xmlsoap.org/wsdl/ 네임 스페이스에 적용 됩니다.       XML 웹 서비스 클라이언트에 SOAP를 사용 하 여 XML 웹 서비스를 호출을 추가할 수도 있습니다는 <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute>또는 <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute>XML 웹 서비스 메서드를 호출할 수 있습니다.</xref:System.Web.Services.Protocols.SoapRpcMethodAttribute> </xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> ASP.NET을 사용 하 여 만든 XML 웹 서비스를 호출 하는 클라이언트는 경우는 <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.RequestNamespace%2A>, <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.ResponseNamespace%2A>및 <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.Action%2A>속성 모두에서 파생 된 Namespace 속성이 기본적으로.</xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.Action%2A> </xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.ResponseNamespace%2A> </xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.RequestNamespace%2A> 예를 들어,의 XML 웹 서비스 메서드 이름이 제공 된 `Time` 및 `Namespace` 속성 `http://www.contoso.com/`, `Action` 속성은 `http://www.contoso.com/Time` 기본적으로 합니다. 에 대 한 기본 설정을 변경 하려면 `RequestNamespace`, `ResponseNamespace`, 및 `Action` XML 웹 서비스 메서드를 추가할 수 있습니다는 <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute>XML 웹 서비스 메서드에.</xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute>      > [!NOTE] > 클래스의 측면에서, 속한 네임 스페이스와에서 다른 XML 네임 스페이스는는 [!INCLUDE[winsdklong](~/add/includes/winsdklong-md.md)]합니다. 클래스에 대 한 네임 스페이스를 지정 하려면 참조 [Namespace 키워드](~/add/includes/ajax-current-ext-md.md) 경우 C#에서 작성 있습니다."
  example:
  - "The following example sets Namespace to `http://www.contoso.com` and overrides that namespace for the <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.Action%2A> property by adding a <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> to the `Time` XML Web service method.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public string Namespace { get; set; }
    return:
      type: System.String
      description: "XML 웹 서비스에 사용할 기본 XML 네임 스페이스입니다. 기본값은에 지정 된 <xref href=&quot;System.Web.Services.WebServiceAttribute.DefaultNamespace&quot;> </xref> 속성입니다."
  overload: System.Web.Services.WebServiceAttribute.Namespace*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.Web.Services.WebServiceAttribute.#ctor
  parent: System.Web.Services.WebServiceAttribute
  isExternal: false
  name: WebServiceAttribute()
  nameWithType: WebServiceAttribute.WebServiceAttribute()
  fullName: System.Web.Services.WebServiceAttribute.WebServiceAttribute()
- uid: System.Web.Services.WebServiceAttribute.DefaultNamespace
  parent: System.Web.Services.WebServiceAttribute
  isExternal: false
  name: DefaultNamespace
  nameWithType: WebServiceAttribute.DefaultNamespace
  fullName: System.Web.Services.WebServiceAttribute.DefaultNamespace
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Services.WebServiceAttribute.Description
  parent: System.Web.Services.WebServiceAttribute
  isExternal: false
  name: Description
  nameWithType: WebServiceAttribute.Description
  fullName: System.Web.Services.WebServiceAttribute.Description
- uid: System.Web.Services.WebServiceAttribute.Name
  parent: System.Web.Services.WebServiceAttribute
  isExternal: false
  name: Name
  nameWithType: WebServiceAttribute.Name
  fullName: System.Web.Services.WebServiceAttribute.Name
- uid: System.Web.Services.WebServiceAttribute.Namespace
  parent: System.Web.Services.WebServiceAttribute
  isExternal: false
  name: Namespace
  nameWithType: WebServiceAttribute.Namespace
  fullName: System.Web.Services.WebServiceAttribute.Namespace
- uid: System.Web.Services.WebServiceAttribute.#ctor*
  parent: System.Web.Services.WebServiceAttribute
  isExternal: false
  name: WebServiceAttribute
  nameWithType: WebServiceAttribute.WebServiceAttribute
- uid: System.Web.Services.WebServiceAttribute.Description*
  parent: System.Web.Services.WebServiceAttribute
  isExternal: false
  name: Description
  nameWithType: WebServiceAttribute.Description
- uid: System.Web.Services.WebServiceAttribute.Name*
  parent: System.Web.Services.WebServiceAttribute
  isExternal: false
  name: Name
  nameWithType: WebServiceAttribute.Name
- uid: System.Web.Services.WebServiceAttribute.Namespace*
  parent: System.Web.Services.WebServiceAttribute
  isExternal: false
  name: Namespace
  nameWithType: WebServiceAttribute.Namespace
