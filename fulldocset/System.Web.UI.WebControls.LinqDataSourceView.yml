### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.LinqDataSourceView
  id: LinqDataSourceView
  children:
  - System.Web.UI.WebControls.LinqDataSourceView.#ctor(System.Web.UI.WebControls.LinqDataSource,System.String,System.Web.HttpContext)
  - System.Web.UI.WebControls.LinqDataSourceView.CanDelete
  - System.Web.UI.WebControls.LinqDataSourceView.CanInsert
  - System.Web.UI.WebControls.LinqDataSourceView.CanPage
  - System.Web.UI.WebControls.LinqDataSourceView.CanRetrieveTotalRowCount
  - System.Web.UI.WebControls.LinqDataSourceView.CanSort
  - System.Web.UI.WebControls.LinqDataSourceView.CanUpdate
  - System.Web.UI.WebControls.LinqDataSourceView.ContextCreated
  - System.Web.UI.WebControls.LinqDataSourceView.ContextCreating
  - System.Web.UI.WebControls.LinqDataSourceView.ContextDisposing
  - System.Web.UI.WebControls.LinqDataSourceView.ContextType
  - System.Web.UI.WebControls.LinqDataSourceView.ContextTypeName
  - System.Web.UI.WebControls.LinqDataSourceView.CreateContext(System.Type)
  - System.Web.UI.WebControls.LinqDataSourceView.CreateContext(System.Web.UI.DataSourceOperation)
  - System.Web.UI.WebControls.LinqDataSourceView.Deleted
  - System.Web.UI.WebControls.LinqDataSourceView.DeleteDataObject(System.Object,System.Object,System.Object)
  - System.Web.UI.WebControls.LinqDataSourceView.DeleteObject(System.Object)
  - System.Web.UI.WebControls.LinqDataSourceView.Deleting
  - System.Web.UI.WebControls.LinqDataSourceView.DisposeContext(System.Object)
  - System.Web.UI.WebControls.LinqDataSourceView.EnableDelete
  - System.Web.UI.WebControls.LinqDataSourceView.EnableInsert
  - System.Web.UI.WebControls.LinqDataSourceView.EnableObjectTracking
  - System.Web.UI.WebControls.LinqDataSourceView.EnableUpdate
  - System.Web.UI.WebControls.LinqDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.WebControls.LinqDataSourceView.ExecuteInsert(System.Collections.IDictionary)
  - System.Web.UI.WebControls.LinqDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)
  - System.Web.UI.WebControls.LinqDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.WebControls.LinqDataSourceView.GetSource(System.Web.UI.WebControls.QueryContext)
  - System.Web.UI.WebControls.LinqDataSourceView.GetTableMemberInfo(System.Type)
  - System.Web.UI.WebControls.LinqDataSourceView.HandleValidationErrors(System.Collections.Generic.IDictionary{System.String,System.Exception},System.Web.UI.DataSourceOperation)
  - System.Web.UI.WebControls.LinqDataSourceView.InsertDataObject(System.Object,System.Object,System.Object)
  - System.Web.UI.WebControls.LinqDataSourceView.Inserted
  - System.Web.UI.WebControls.LinqDataSourceView.Inserting
  - System.Web.UI.WebControls.LinqDataSourceView.InsertObject(System.Object)
  - System.Web.UI.WebControls.LinqDataSourceView.OnContextCreated(System.Web.UI.WebControls.LinqDataSourceStatusEventArgs)
  - System.Web.UI.WebControls.LinqDataSourceView.OnContextCreating(System.Web.UI.WebControls.LinqDataSourceContextEventArgs)
  - System.Web.UI.WebControls.LinqDataSourceView.OnContextDisposing(System.Web.UI.WebControls.LinqDataSourceDisposeEventArgs)
  - System.Web.UI.WebControls.LinqDataSourceView.OnDeleted(System.Web.UI.WebControls.LinqDataSourceStatusEventArgs)
  - System.Web.UI.WebControls.LinqDataSourceView.OnDeleting(System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs)
  - System.Web.UI.WebControls.LinqDataSourceView.OnException(System.Web.DynamicData.DynamicValidatorEventArgs)
  - System.Web.UI.WebControls.LinqDataSourceView.OnInserted(System.Web.UI.WebControls.LinqDataSourceStatusEventArgs)
  - System.Web.UI.WebControls.LinqDataSourceView.OnInserting(System.Web.UI.WebControls.LinqDataSourceInsertEventArgs)
  - System.Web.UI.WebControls.LinqDataSourceView.OnSelected(System.Web.UI.WebControls.LinqDataSourceStatusEventArgs)
  - System.Web.UI.WebControls.LinqDataSourceView.OnSelecting(System.Web.UI.WebControls.LinqDataSourceSelectEventArgs)
  - System.Web.UI.WebControls.LinqDataSourceView.OnUpdated(System.Web.UI.WebControls.LinqDataSourceStatusEventArgs)
  - System.Web.UI.WebControls.LinqDataSourceView.OnUpdating(System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs)
  - System.Web.UI.WebControls.LinqDataSourceView.ResetDataObject(System.Object,System.Object)
  - System.Web.UI.WebControls.LinqDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)
  - System.Web.UI.WebControls.LinqDataSourceView.Selected
  - System.Web.UI.WebControls.LinqDataSourceView.Selecting
  - System.Web.UI.WebControls.LinqDataSourceView.StoreOriginalValues(System.Collections.IList)
  - System.Web.UI.WebControls.LinqDataSourceView.StoreOriginalValuesInViewState
  - System.Web.UI.WebControls.LinqDataSourceView.TableName
  - System.Web.UI.WebControls.LinqDataSourceView.Updated
  - System.Web.UI.WebControls.LinqDataSourceView.UpdateDataObject(System.Object,System.Object,System.Object,System.Object)
  - System.Web.UI.WebControls.LinqDataSourceView.UpdateObject(System.Object,System.Object)
  - System.Web.UI.WebControls.LinqDataSourceView.Updating
  - System.Web.UI.WebControls.LinqDataSourceView.ValidateContextType(System.Type,System.Boolean)
  - System.Web.UI.WebControls.LinqDataSourceView.ValidateDeleteSupported(System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.WebControls.LinqDataSourceView.ValidateEditSupported
  - System.Web.UI.WebControls.LinqDataSourceView.ValidateInsertSupported(System.Collections.IDictionary)
  - System.Web.UI.WebControls.LinqDataSourceView.ValidateTableType(System.Type,System.Boolean)
  - System.Web.UI.WebControls.LinqDataSourceView.ValidateUpdateSupported(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  langs:
  - csharp
  name: LinqDataSourceView
  nameWithType: LinqDataSourceView
  fullName: System.Web.UI.WebControls.LinqDataSourceView
  type: Class
  summary: "지원 된 <xref href=&quot;System.Web.UI.WebControls.LinqDataSource&quot;> </xref> 제어 하 고 LINQ 데이터 작업을 수행할 데이터 바인딩된 컨트롤에 대 한 인터페이스를 제공 합니다."
  remarks: "LinqDataSourceView 클래스는 페이지 코드에서 프로그래밍 가능한 개체 하지 데이터 바인딩된 컨트롤에서 사용할 수 하는 데 주로 사용 됩니다. 페이지 개발자가 일반적으로 사용 하는 <xref:System.Web.UI.WebControls.LinqDataSource>데이터와 상호 작용을 제어 합니다.</xref:System.Web.UI.WebControls.LinqDataSource>       ASP.NET 데이터 소스 컨트롤의 데이터를 데이터 원본 뷰 개체를 나타내는 하나 이상의 목록을 포함 합니다. <xref:System.Web.UI.DataSourceView>클래스</xref:System.Web.UI.DataSourceView> 를 확장 하는 LinqDataSourceView 클래스는 기능을 정의 <xref:System.Web.UI.WebControls.LinqDataSource>제어 된 콘텐츠인지 연결, 및 데이터 소스 제어에 대 한 기본 데이터 기능을 구현 합니다.</xref:System.Web.UI.WebControls.LinqDataSource> LinqDataSourceView 클래스가 구현 하는 <xref:System.Web.UI.WebControls.LinqDataSourceView.Select%2A>, <xref:System.Web.UI.WebControls.LinqDataSourceView.Update%2A>, <xref:System.Web.UI.WebControls.LinqDataSourceView.Insert%2A>, 및 <xref:System.Web.UI.WebControls.LinqDataSourceView.Delete%2A>작업.</xref:System.Web.UI.WebControls.LinqDataSourceView.Delete%2A> </xref:System.Web.UI.WebControls.LinqDataSourceView.Insert%2A> </xref:System.Web.UI.WebControls.LinqDataSourceView.Update%2A> </xref:System.Web.UI.WebControls.LinqDataSourceView.Select%2A> 또한 정렬, 필터링 및 설정 보기에 유지 되는 상태 관리 구현 합니다.       LinqDataSourceView 개체는 페이지 개발자에 게 직접 노출 되지 않지만 다양 한 메서드와 속성을 통해 액세스할 수는 <xref:System.Web.UI.WebControls.LinqDataSource>컨트롤.</xref:System.Web.UI.WebControls.LinqDataSource> LinqDataSourceView 컨트롤 다음 데이터 검색 메서드 및 이벤트를 구현 하 고 페이지 개발자를 통해 연결 된 다른 호출자를 노출 <xref:System.Web.UI.WebControls.LinqDataSource>제어:- <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>속성.</xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> </xref:System.Web.UI.WebControls.LinqDataSource>      - <xref:System.Web.UI.WebControls.LinqDataSource.Selecting>이벤트.</xref:System.Web.UI.WebControls.LinqDataSource.Selecting>      - <xref:System.Web.UI.WebControls.LinqDataSource.Selected>이벤트.</xref:System.Web.UI.WebControls.LinqDataSource.Selected>      - <xref:System.Web.UI.WebControls.LinqDataSource.Update%2A>메서드.</xref:System.Web.UI.WebControls.LinqDataSource.Update%2A>      - <xref:System.Web.UI.WebControls.LinqDataSource.Updating>이벤트.</xref:System.Web.UI.WebControls.LinqDataSource.Updating>      - <xref:System.Web.UI.WebControls.LinqDataSource.Updated>이벤트.</xref:System.Web.UI.WebControls.LinqDataSource.Updated>      - <xref:System.Web.UI.WebControls.LinqDataSource.Insert%2A>메서드.</xref:System.Web.UI.WebControls.LinqDataSource.Insert%2A>      - <xref:System.Web.UI.WebControls.LinqDataSource.Inserting>이벤트.</xref:System.Web.UI.WebControls.LinqDataSource.Inserting>      - <xref:System.Web.UI.WebControls.LinqDataSource.Inserted>이벤트.</xref:System.Web.UI.WebControls.LinqDataSource.Inserted>      - <xref:System.Web.UI.WebControls.LinqDataSource.Delete%2A>메서드.</xref:System.Web.UI.WebControls.LinqDataSource.Delete%2A>      - <xref:System.Web.UI.WebControls.LinqDataSource.Deleting>이벤트.</xref:System.Web.UI.WebControls.LinqDataSource.Deleting>      - <xref:System.Web.UI.WebControls.LinqDataSource.Deleted>이벤트.</xref:System.Web.UI.WebControls.LinqDataSource.Deleted>       검색 하는 데이터를 정렬할 수는 <xref:System.Web.UI.WebControls.LinqDataSource>추가 하 여 제어는 `OrderBy` 절.</xref:System.Web.UI.WebControls.LinqDataSource> LinqDataSourceView 인스턴스에 대 한 정렬 식을 설정 하 여 제공할 수 있습니다는 <xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A>의 속성은 <xref:System.Web.UI.DataSourceSelectArguments>에 전달 되는 개체는 <xref:System.Web.UI.WebControls.LinqDataSourceView.Select%2A>메서드.</xref:System.Web.UI.WebControls.LinqDataSourceView.Select%2A> </xref:System.Web.UI.DataSourceSelectArguments> </xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A> 에 대 한 구문은 <xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A>속성에 대 한 구문과 동일은 <xref:System.Data.DataView.Sort%2A?displayProperty=fullName>속성.</xref:System.Data.DataView.Sort%2A?displayProperty=fullName> </xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A>       LinqDataSourceView 컨트롤에서 구현 하는 <xref:System.Web.UI.IStateManager>인터페이스 및 사용 하 여 뷰 페이지 요청에 대해 해당 상태를 추적 하는 상태.</xref:System.Web.UI.IStateManager> 구현에서 <xref:System.Web.UI.WebControls.LinqDataSourceView.IsTrackingViewState%2A>속성 및 <xref:System.Web.UI.WebControls.LinqDataSourceView.LoadViewState%2A>, <xref:System.Web.UI.WebControls.LinqDataSourceView.SaveViewState%2A>, 및 <xref:System.Web.UI.WebControls.LinqDataSourceView.TrackViewState%2A>컨트롤에 대 한 뷰 상태를 추적할 수 있도록 위한 메서드가 제공 됩니다.</xref:System.Web.UI.WebControls.LinqDataSourceView.TrackViewState%2A> </xref:System.Web.UI.WebControls.LinqDataSourceView.SaveViewState%2A> </xref:System.Web.UI.WebControls.LinqDataSourceView.LoadViewState%2A> </xref:System.Web.UI.WebControls.LinqDataSourceView.IsTrackingViewState%2A> 자세한 내용은 참조 [ASP.NET 상태 관리 개요](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: 'public class LinqDataSourceView : System.Web.UI.WebControls.ContextDataSourceView'
  inheritance:
  - System.Object
  - System.Web.UI.DataSourceView
  - System.Web.UI.WebControls.QueryableDataSourceView
  - System.Web.UI.WebControls.ContextDataSourceView
  implements: []
  inheritedMembers:
  - System.Web.UI.DataSourceView.CanExecute(System.String)
  - System.Web.UI.DataSourceView.DataSourceViewChanged
  - System.Web.UI.DataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  - System.Web.UI.DataSourceView.Events
  - System.Web.UI.DataSourceView.ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.DataSourceView.ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  - System.Web.UI.DataSourceView.Insert(System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  - System.Web.UI.DataSourceView.Name
  - System.Web.UI.DataSourceView.OnDataSourceViewChanged(System.EventArgs)
  - System.Web.UI.DataSourceView.RaiseUnsupportedCapabilityError(System.Web.UI.DataSourceCapabilities)
  - System.Web.UI.DataSourceView.Select(System.Web.UI.DataSourceSelectArguments,System.Web.UI.DataSourceViewSelectCallback)
  - System.Web.UI.DataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  - System.Web.UI.WebControls.ContextDataSourceView.Context
  - System.Web.UI.WebControls.ContextDataSourceView.DisposeContext
  - System.Web.UI.WebControls.ContextDataSourceView.EntitySet
  - System.Web.UI.WebControls.ContextDataSourceView.EntitySetName
  - System.Web.UI.WebControls.ContextDataSourceView.EntitySetType
  - System.Web.UI.WebControls.ContextDataSourceView.EntityType
  - System.Web.UI.WebControls.ContextDataSourceView.EntityTypeName
  - System.Web.UI.WebControls.ContextDataSourceView.EventContextCreated
  - System.Web.UI.WebControls.ContextDataSourceView.EventContextCreating
  - System.Web.UI.WebControls.ContextDataSourceView.EventContextDisposing
  - System.Web.UI.WebControls.ContextDataSourceView.GetDataObjectType(System.Type)
  - System.Web.UI.WebControls.ContextDataSourceView.GetEntitySetType
  - System.Web.UI.WebControls.QueryableDataSourceView.AutoGenerateOrderByClause
  - System.Web.UI.WebControls.QueryableDataSourceView.AutoGenerateWhereClause
  - System.Web.UI.WebControls.QueryableDataSourceView.AutoPage
  - System.Web.UI.WebControls.QueryableDataSourceView.AutoSort
  - System.Web.UI.WebControls.QueryableDataSourceView.BuildDeleteObject(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.Generic.IDictionary{System.String,System.Exception})
  - System.Web.UI.WebControls.QueryableDataSourceView.BuildInsertObject(System.Collections.IDictionary,System.Collections.Generic.IDictionary{System.String,System.Exception})
  - System.Web.UI.WebControls.QueryableDataSourceView.BuildQuery(System.Web.UI.DataSourceSelectArguments)
  - System.Web.UI.WebControls.QueryableDataSourceView.BuildUpdateObjects(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.Generic.IDictionary{System.String,System.Exception})
  - System.Web.UI.WebControls.QueryableDataSourceView.ClearOriginalValues
  - System.Web.UI.WebControls.QueryableDataSourceView.CreateQueryContext(System.Web.UI.DataSourceSelectArguments)
  - System.Web.UI.WebControls.QueryableDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.WebControls.QueryableDataSourceView.DeleteParameters
  - System.Web.UI.WebControls.QueryableDataSourceView.EventSelected
  - System.Web.UI.WebControls.QueryableDataSourceView.EventSelecting
  - System.Web.UI.WebControls.QueryableDataSourceView.ExecutePaging(System.Linq.IQueryable,System.Web.UI.WebControls.QueryContext)
  - System.Web.UI.WebControls.QueryableDataSourceView.ExecuteQuery(System.Linq.IQueryable,System.Web.UI.WebControls.QueryContext)
  - System.Web.UI.WebControls.QueryableDataSourceView.ExecuteQueryExpressions(System.Linq.IQueryable,System.Web.UI.WebControls.QueryContext)
  - System.Web.UI.WebControls.QueryableDataSourceView.ExecuteSorting(System.Linq.IQueryable,System.Web.UI.WebControls.QueryContext)
  - System.Web.UI.WebControls.QueryableDataSourceView.GetOriginalValues(System.Collections.IDictionary)
  - System.Web.UI.WebControls.QueryableDataSourceView.GroupBy
  - System.Web.UI.WebControls.QueryableDataSourceView.GroupByParameters
  - System.Web.UI.WebControls.QueryableDataSourceView.Insert(System.Collections.IDictionary)
  - System.Web.UI.WebControls.QueryableDataSourceView.InsertParameters
  - System.Web.UI.WebControls.QueryableDataSourceView.IsTrackingViewState
  - System.Web.UI.WebControls.QueryableDataSourceView.LoadViewState(System.Object)
  - System.Web.UI.WebControls.QueryableDataSourceView.OnQueryCreated(System.Web.UI.WebControls.QueryCreatedEventArgs)
  - System.Web.UI.WebControls.QueryableDataSourceView.OnQueryParametersChanged(System.Object,System.EventArgs)
  - System.Web.UI.WebControls.QueryableDataSourceView.OrderBy
  - System.Web.UI.WebControls.QueryableDataSourceView.OrderByParameters
  - System.Web.UI.WebControls.QueryableDataSourceView.OrderGroupsBy
  - System.Web.UI.WebControls.QueryableDataSourceView.OrderGroupsByParameters
  - System.Web.UI.WebControls.QueryableDataSourceView.QueryCreated
  - System.Web.UI.WebControls.QueryableDataSourceView.RaiseViewChanged
  - System.Web.UI.WebControls.QueryableDataSourceView.SaveViewState
  - System.Web.UI.WebControls.QueryableDataSourceView.SelectNew
  - System.Web.UI.WebControls.QueryableDataSourceView.SelectNewParameters
  - System.Web.UI.WebControls.QueryableDataSourceView.StoreOriginalValues(System.Collections.IList,System.Func{System.ComponentModel.PropertyDescriptor,System.Boolean})
  - System.Web.UI.WebControls.QueryableDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.WebControls.QueryableDataSourceView.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.WebControls.QueryableDataSourceView.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.WebControls.QueryableDataSourceView.System#Web#UI#IStateManager#TrackViewState
  - System.Web.UI.WebControls.QueryableDataSourceView.TrackViewState
  - System.Web.UI.WebControls.QueryableDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.WebControls.QueryableDataSourceView.UpdateParameters
  - System.Web.UI.WebControls.QueryableDataSourceView.Where
  - System.Web.UI.WebControls.QueryableDataSourceView.WhereParameters
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.#ctor(System.Web.UI.WebControls.LinqDataSource,System.String,System.Web.HttpContext)
  id: '#ctor(System.Web.UI.WebControls.LinqDataSource,System.String,System.Web.HttpContext)'
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: LinqDataSourceView(LinqDataSource,String,HttpContext)
  nameWithType: LinqDataSourceView.LinqDataSourceView(LinqDataSource,String,HttpContext)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.LinqDataSourceView(LinqDataSource,String,HttpContext)
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.UI.WebControls.LinqDataSourceView&quot;> </xref> 클래스를 지정 된 설정 <xref href=&quot;System.Web.UI.WebControls.LinqDataSource&quot;> </xref> 현재 보기의 소유자로 제어 합니다."
  remarks: "LinqDataSourceView 생성자를 호출는 <xref:System.Web.UI.WebControls.LinqDataSource.GetView%2A>지정 된 데이터 원본 뷰의 새 인스턴스를 반환 하는 메서드 `name` 매개 변수.</xref:System.Web.UI.WebControls.LinqDataSource.GetView%2A> 하나의 <xref:System.Web.UI.WebControls.LinqDataSourceView>개체에 연결 된 한 <xref:System.Web.UI.WebControls.LinqDataSource>한 번에 컨트롤.</xref:System.Web.UI.WebControls.LinqDataSource> </xref:System.Web.UI.WebControls.LinqDataSourceView> 이름에서 <xref:System.Web.UI.WebControls.LinqDataSourceView>개체는 항상 `DefaultView`이 명명 언제나 하지만는 <xref:System.Web.UI.WebControls.LinqDataSource>제어 하지 않습니다는 <xref:System.Web.UI.WebControls.LinqDataSourceView>컨트롤.</xref:System.Web.UI.WebControls.LinqDataSourceView> </xref:System.Web.UI.WebControls.LinqDataSource> </xref:System.Web.UI.WebControls.LinqDataSourceView> 재정의할 수 있습니다는 <xref:System.Web.UI.WebControls.LinqDataSource.GetView%2A?displayProperty=fullName>다른 명명 규칙을 사용 하는 뷰를 지원 하기 위해 메서드에.</xref:System.Web.UI.WebControls.LinqDataSource.GetView%2A?displayProperty=fullName>       <xref:System.Web.HttpContext>전달 되는 인스턴스는 `context` 액세스 매개 변수 컬렉션에는 데이터 원본 뷰에서 매개 변수를 사용 합니다.</xref:System.Web.HttpContext>"
  syntax:
    content: public LinqDataSourceView (System.Web.UI.WebControls.LinqDataSource owner, string name, System.Web.HttpContext context);
    parameters:
    - id: owner
      type: System.Web.UI.WebControls.LinqDataSource
      description: "데이터 소스 컨트롤의 <xref href=&quot;System.Web.UI.WebControls.LinqDataSourceView&quot;> </xref> 개체가 연결 되어 있습니다."
    - id: name
      type: System.String
      description: "소유 하는 데이터 소스 컨트롤의 범위 내에서 데이터 원본 뷰에 대 한 고유 이름입니다."
    - id: context
      type: System.Web.HttpContext
      description: "현재 <xref href=&quot;System.Web.HttpContext&quot;> </xref> 인스턴스."
  overload: System.Web.UI.WebControls.LinqDataSourceView.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.CanDelete
  id: CanDelete
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: CanDelete
  nameWithType: LinqDataSourceView.CanDelete
  fullName: System.Web.UI.WebControls.LinqDataSourceView.CanDelete
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "나타내는 값을 가져옵니다 여부는 <xref href=&quot;System.Web.UI.WebControls.LinqDataSourceView&quot;> </xref> 개체와 현재 연결 된 <xref href=&quot;System.Web.UI.WebControls.LinqDataSource&quot;> </xref> 컨트롤 삭제 작업을 지원 합니다."
  remarks: "속성은 CanDelete 반환 `true` 경우는 <xref:System.Web.UI.WebControls.LinqDataSourceView.EnableDelete%2A>속성이로 설정 되어 `true`.</xref:System.Web.UI.WebControls.LinqDataSourceView.EnableDelete%2A> 그러나 연결 된 데이터 속성 설정 되지 않은 또는 올바르게 설정 되지 않은 경우 삭제 작업이 실패할 수 있습니다."
  syntax:
    content: public override bool CanDelete { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>작업을 지원 되 면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.LinqDataSourceView.CanDelete*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.CanInsert
  id: CanInsert
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: CanInsert
  nameWithType: LinqDataSourceView.CanInsert
  fullName: System.Web.UI.WebControls.LinqDataSourceView.CanInsert
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "나타내는 값을 가져옵니다 여부는 <xref href=&quot;System.Web.UI.WebControls.LinqDataSourceView&quot;> </xref> 개체와 현재 연결 된 <xref href=&quot;System.Web.UI.WebControls.LinqDataSource&quot;> </xref> 컨트롤 삽입 작업을 지원 합니다."
  remarks: "속성은 CanInsert 반환 `true` 경우는 <xref:System.Web.UI.WebControls.LinqDataSourceView.EnableInsert%2A>속성이로 설정 되어 `true`.</xref:System.Web.UI.WebControls.LinqDataSourceView.EnableInsert%2A> 그러나 연결 된 데이터 속성 설정 되지 않은 또는 올바르게 설정 되지 않은 경우 삽입 작업이 실패할 수 있습니다."
  syntax:
    content: public override bool CanInsert { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>작업을 지원 되 면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.LinqDataSourceView.CanInsert*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.CanPage
  id: CanPage
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: CanPage
  nameWithType: LinqDataSourceView.CanPage
  fullName: System.Web.UI.WebControls.LinqDataSourceView.CanPage
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "나타내는 값을 가져옵니다 여부는 <xref href=&quot;System.Web.UI.WebControls.LinqDataSourceView&quot;> </xref> 개체와 현재 연결 된 <xref href=&quot;System.Web.UI.WebControls.LinqDataSource&quot;> </xref> 컨트롤에 검색 된 데이터의 페이징을 지원 합니다."
  remarks: "<xref:System.Web.UI.WebControls.LinqDataSourceView>데이터 표시 컨트롤이 페이징을 사용 하지 않는 경우에 항상 개체 페이징을 지원 합니다.</xref:System.Web.UI.WebControls.LinqDataSourceView> 때는 <xref:System.Web.UI.WebControls.LinqDataSourceView.AutoPage%2A>속성이 `false`, 직접에 데이터를 페이징할 수는 <xref:System.Web.UI.WebControls.LinqDataSourceView.Selecting>이벤트.</xref:System.Web.UI.WebControls.LinqDataSourceView.Selecting> </xref:System.Web.UI.WebControls.LinqDataSourceView.AutoPage%2A>"
  syntax:
    content: public override bool CanPage { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.LinqDataSourceView.CanPage*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.CanRetrieveTotalRowCount
  id: CanRetrieveTotalRowCount
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: CanRetrieveTotalRowCount
  nameWithType: LinqDataSourceView.CanRetrieveTotalRowCount
  fullName: System.Web.UI.WebControls.LinqDataSourceView.CanRetrieveTotalRowCount
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "나타내는 값을 가져옵니다 여부는 <xref href=&quot;System.Web.UI.WebControls.LinqDataSourceView&quot;> </xref> 개체와 현재 연결 된 <xref href=&quot;System.Web.UI.WebControls.LinqDataSource&quot;> </xref> 컨트롤 데이터를 검색 하는 것 외에도 데이터 행의 총 수를 검색할 수 있도록 합니다."
  remarks: "데이터 바인딩된 컨트롤 페이징 컨트롤을 렌더링 하는 방법을 결정 하기 위해 페이징할 수 있는 행의 총 수를 사용 합니다. 숫자 페이저 단추의에서 렌더링할 수를 확인 하려면이 값은 사용 하는 예를 들어 한 <xref:System.Web.UI.WebControls.GridView>호출기를 제어 합니다.</xref:System.Web.UI.WebControls.GridView> 경우는 <xref:System.Web.UI.WebControls.LinqDataSourceView.AutoPage%2A>속성이 `false`, 총 행 수를 수동으로 설정 해야는 <xref:System.Web.UI.WebControls.LinqDataSourceView.Selecting>이벤트.</xref:System.Web.UI.WebControls.LinqDataSourceView.Selecting> </xref:System.Web.UI.WebControls.LinqDataSourceView.AutoPage%2A>"
  syntax:
    content: public override bool CanRetrieveTotalRowCount { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.LinqDataSourceView.CanRetrieveTotalRowCount*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.CanSort
  id: CanSort
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: CanSort
  nameWithType: LinqDataSourceView.CanSort
  fullName: System.Web.UI.WebControls.LinqDataSourceView.CanSort
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "나타내는 값을 가져옵니다 여부는 <xref href=&quot;System.Web.UI.WebControls.LinqDataSourceView&quot;> </xref> 개체와 현재 연결 된 <xref href=&quot;System.Web.UI.WebControls.LinqDataSource&quot;> </xref> 컨트롤은 검색된 된 데이터의 정렬된 된 뷰를 지원 합니다."
  remarks: "<xref:System.Web.UI.WebControls.LinqDataSourceView>개체는 항상 데이터 표시 컨트롤이 정렬을 사용 하지 않는 경우에 정렬을 지원 합니다.</xref:System.Web.UI.WebControls.LinqDataSourceView> 경우는 <xref:System.Web.UI.WebControls.LinqDataSourceView.AutoSort%2A>속성이 `false`, 수동으로의 데이터를 정렬할 수 있습니다는 <xref:System.Web.UI.WebControls.LinqDataSourceView.Selecting>이벤트.</xref:System.Web.UI.WebControls.LinqDataSourceView.Selecting> </xref:System.Web.UI.WebControls.LinqDataSourceView.AutoSort%2A>"
  syntax:
    content: public override bool CanSort { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.LinqDataSourceView.CanSort*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.CanUpdate
  id: CanUpdate
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: CanUpdate
  nameWithType: LinqDataSourceView.CanUpdate
  fullName: System.Web.UI.WebControls.LinqDataSourceView.CanUpdate
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "나타내는 값을 가져옵니다 여부는 <xref href=&quot;System.Web.UI.WebControls.LinqDataSourceView&quot;> </xref> 개체와 현재 연결 된 <xref href=&quot;System.Web.UI.WebControls.LinqDataSource&quot;> </xref> 컨트롤 업데이트 작업을 지원 합니다."
  remarks: "CanUpdate 속성의 값을 반환 된 <xref:System.Web.UI.WebControls.LinqDataSourceView.EnableUpdate%2A>속성.</xref:System.Web.UI.WebControls.LinqDataSourceView.EnableUpdate%2A> 그러나 연결 된 데이터 속성 설정 되지 않은 또는 올바르게 설정 되지 않은 경우 업데이트 작업이 실패할 수 있습니다."
  syntax:
    content: public override bool CanUpdate { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>작업을 지원 되 면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.LinqDataSourceView.CanUpdate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.ContextCreated
  id: ContextCreated
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: ContextCreated
  nameWithType: LinqDataSourceView.ContextCreated
  fullName: System.Web.UI.WebControls.LinqDataSourceView.ContextCreated
  type: Event
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "컨텍스트 유형 개체의 인스턴스가 생성 된 후 발생 합니다."
  remarks: "데이터 컨텍스트 개체의 유효성을 검사 하려는 경우 또는 컨텍스트를 만드는 동안 throw 된 예외를 처리 하려는 경우이 이벤트를 처리 합니다. 자세한 내용은 참조는 <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated?displayProperty=fullName>이벤트.</xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated?displayProperty=fullName>"
  syntax:
    content: public event EventHandler<System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> ContextCreated;
    return:
      type: System.EventHandler{System.Web.UI.WebControls.LinqDataSourceStatusEventArgs}
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.ContextCreating
  id: ContextCreating
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: ContextCreating
  nameWithType: LinqDataSourceView.ContextCreating
  fullName: System.Web.UI.WebControls.LinqDataSourceView.ContextCreating
  type: Event
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "컨텍스트 형식 개체의 인스턴스를 만들기 전에 발생 합니다."
  remarks: "수동으로 데이터 컨텍스트 개체를 생성 하려는 경우이 이벤트를 처리 합니다. 자세한 내용은 참조는 <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreating?displayProperty=fullName>이벤트.</xref:System.Web.UI.WebControls.LinqDataSource.ContextCreating?displayProperty=fullName>"
  syntax:
    content: public event EventHandler<System.Web.UI.WebControls.LinqDataSourceContextEventArgs> ContextCreating;
    return:
      type: System.EventHandler{System.Web.UI.WebControls.LinqDataSourceContextEventArgs}
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.ContextDisposing
  id: ContextDisposing
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: ContextDisposing
  nameWithType: LinqDataSourceView.ContextDisposing
  fullName: System.Web.UI.WebControls.LinqDataSourceView.ContextDisposing
  type: Event
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "컨텍스트 형식 개체를 삭제 하기 전에 발생 합니다."
  remarks: "에 컨텍스트를 삭제 하려면 먼저 액세스 하거나 개체를 제거 하기 전에 개체에 지정 된 정리를 수행 하려면이 이벤트를 처리 합니다."
  syntax:
    content: public event EventHandler<System.Web.UI.WebControls.LinqDataSourceDisposeEventArgs> ContextDisposing;
    return:
      type: System.EventHandler{System.Web.UI.WebControls.LinqDataSourceDisposeEventArgs}
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.ContextType
  id: ContextType
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: ContextType
  nameWithType: LinqDataSourceView.ContextType
  fullName: System.Web.UI.WebControls.LinqDataSourceView.ContextType
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "데이터 컨텍스트 클래스의 형식을 가져옵니다."
  syntax:
    content: public override Type ContextType { get; }
    return:
      type: System.Type
      description: "형식에 지정 된 데이터 컨텍스트 클래스와 연결 되는 <xref:System.Web.UI.WebControls.LinqDataSourceView.ContextTypeName*>속성.</xref:System.Web.UI.WebControls.LinqDataSourceView.ContextTypeName*>"
  overload: System.Web.UI.WebControls.LinqDataSourceView.ContextType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.ContextTypeName
  id: ContextTypeName
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: ContextTypeName
  nameWithType: LinqDataSourceView.ContextTypeName
  fullName: System.Web.UI.WebControls.LinqDataSourceView.ContextTypeName
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "필드 또는 속성에 지정 된 포함 된 데이터 컨텍스트 클래스의 이름을 가져오거나 설정 합니다.는 <xref:System.Web.UI.WebControls.LinqDataSourceView.TableName*>속성.</xref:System.Web.UI.WebControls.LinqDataSourceView.TableName*>"
  remarks: "설정 하는 경우는 <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A>의 속성은 <xref:System.Web.UI.WebControls.LinqDataSource>컨트롤의 ContextTypeName 속성에 대 한 값도 설정 되어 있는 <xref:System.Web.UI.WebControls.LinqDataSourceView>컨트롤.</xref:System.Web.UI.WebControls.LinqDataSourceView> </xref:System.Web.UI.WebControls.LinqDataSource> </xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> 자세한 내용은 참조는 <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A?displayProperty=fullName>개체입니다.</xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A?displayProperty=fullName>       하는 동안 쿼리 데이터를 제공 하지 않으면이 속성을 지정 해야 합니다는 <xref:System.Web.UI.WebControls.LinqDataSourceView.Selecting>이벤트 동안 컨텍스트를 수동으로 만들지 않으면 또는 <xref:System.Web.UI.WebControls.LinqDataSourceView.ContextCreating>이벤트.</xref:System.Web.UI.WebControls.LinqDataSourceView.ContextCreating> </xref:System.Web.UI.WebControls.LinqDataSourceView.Selecting>"
  syntax:
    content: public override string ContextTypeName { get; set; }
    return:
      type: System.String
      description: "데이터 컨텍스트 클래스의 이름입니다."
  overload: System.Web.UI.WebControls.LinqDataSourceView.ContextTypeName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.CreateContext(System.Type)
  id: CreateContext(System.Type)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: CreateContext(Type)
  nameWithType: LinqDataSourceView.CreateContext(Type)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.CreateContext(Type)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "데이터 컨텍스트 형식 인스턴스를 만듭니다."
  syntax:
    content: protected virtual object CreateContext (Type contextType);
    parameters:
    - id: contextType
      type: System.Type
      description: "만들려는 데이터 컨텍스트 클래스의 형식입니다."
    return:
      type: System.Object
      description: "데이터 컨텍스트 형식 인스턴스입니다."
  overload: System.Web.UI.WebControls.LinqDataSourceView.CreateContext*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.CreateContext(System.Web.UI.DataSourceOperation)
  id: CreateContext(System.Web.UI.DataSourceOperation)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: CreateContext(DataSourceOperation)
  nameWithType: LinqDataSourceView.CreateContext(DataSourceOperation)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.CreateContext(DataSourceOperation)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "지정 된 데이터 소스 작업을 사용 하 여 데이터 상황에 맞는 형식의 인스턴스를 만듭니다."
  syntax:
    content: protected override System.Web.UI.WebControls.ContextDataSourceContextData CreateContext (System.Web.UI.DataSourceOperation operation);
    parameters:
    - id: operation
      type: System.Web.UI.DataSourceOperation
      description: "데이터 소스 사용 하는 작업입니다."
    return:
      type: System.Web.UI.WebControls.ContextDataSourceContextData
      description: "데이터 컨텍스트 클래스의 인스턴스입니다."
  overload: System.Web.UI.WebControls.LinqDataSourceView.CreateContext*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.Deleted
  id: Deleted
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: Deleted
  nameWithType: LinqDataSourceView.Deleted
  fullName: System.Web.UI.WebControls.LinqDataSourceView.Deleted
  type: Event
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "삭제 작업이 완료 되 면 발생 합니다."
  remarks: "삭제 작업 중에 throw 된 예외를 catch 하거나 삭제 작업이 완료 된 후의 출력 매개 변수 값을 확인 하려면이 이벤트를 처리 합니다. 출력 매개 변수를 검색할 수 있습니다는 <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs>이벤트와 연결 된 개체입니다.</xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs>"
  syntax:
    content: public event EventHandler<System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> Deleted;
    return:
      type: System.EventHandler{System.Web.UI.WebControls.LinqDataSourceStatusEventArgs}
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.DeleteDataObject(System.Object,System.Object,System.Object)
  id: DeleteDataObject(System.Object,System.Object,System.Object)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: DeleteDataObject(Object,Object,Object)
  nameWithType: LinqDataSourceView.DeleteDataObject(Object,Object,Object)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.DeleteDataObject(Object,Object,Object)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "테이블에서 데이터 개체를 삭제합니다."
  syntax:
    content: protected virtual void DeleteDataObject (object dataContext, object table, object oldDataObject);
    parameters:
    - id: dataContext
      type: System.Object
      description: "삭제할 개체의 데이터 컨텍스트입니다."
    - id: table
      type: System.Object
      description: "삭제할 개체를 포함 하는 테이블입니다."
    - id: oldDataObject
      type: System.Object
      description: "삭제 하는 개체입니다."
  overload: System.Web.UI.WebControls.LinqDataSourceView.DeleteDataObject*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.DeleteObject(System.Object)
  id: DeleteObject(System.Object)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: DeleteObject(Object)
  nameWithType: LinqDataSourceView.DeleteObject(Object)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.DeleteObject(Object)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "테이블에서 데이터 개체를 삭제합니다."
  syntax:
    content: protected override int DeleteObject (object oldEntity);
    parameters:
    - id: oldEntity
      type: System.Object
      description: "삭제할 데이터 개체입니다."
    return:
      type: System.Int32
      description: "삭제 된 데이터 개체의 수입니다."
  overload: System.Web.UI.WebControls.LinqDataSourceView.DeleteObject*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.Deleting
  id: Deleting
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: Deleting
  nameWithType: LinqDataSourceView.Deleting
  fullName: System.Web.UI.WebControls.LinqDataSourceView.Deleting
  type: Event
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "삭제 작업이 수행 되기 전에 발생합니다."
  remarks: "유효성을 검사할 개체를 삭제할 삭제 작업을 하기 전에 값을 변경 또는 삭제 작업을 취소 하려면 Deleting 이벤트를 처리 합니다.       자세한 내용은 참조는 <xref:System.Web.UI.WebControls.LinqDataSource.Deleting?displayProperty=fullName>이벤트.</xref:System.Web.UI.WebControls.LinqDataSource.Deleting?displayProperty=fullName>"
  syntax:
    content: public event EventHandler<System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs> Deleting;
    return:
      type: System.EventHandler{System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs}
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.DisposeContext(System.Object)
  id: DisposeContext(System.Object)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: DisposeContext(Object)
  nameWithType: LinqDataSourceView.DisposeContext(Object)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.DisposeContext(Object)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "데이터 컨텍스트를 삭제 합니다."
  syntax:
    content: protected override void DisposeContext (object dataContext);
    parameters:
    - id: dataContext
      type: System.Object
      description: "삭제할 데이터 컨텍스트입니다."
  overload: System.Web.UI.WebControls.LinqDataSourceView.DisposeContext*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.EnableDelete
  id: EnableDelete
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: EnableDelete
  nameWithType: LinqDataSourceView.EnableDelete
  fullName: System.Web.UI.WebControls.LinqDataSourceView.EnableDelete
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "데이터 원본 뷰 행 삭제가 지원 하는지 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "설정 하는 경우는 <xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A>속성은 <xref:System.Web.UI.WebControls.LinqDataSource>제어의 EnableDelete 속성에 대 한 값도 설정 되어 있는 <xref:System.Web.UI.WebControls.LinqDataSourceView>컨트롤.</xref:System.Web.UI.WebControls.LinqDataSourceView> </xref:System.Web.UI.WebControls.LinqDataSource> </xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A>"
  syntax:
    content: public bool EnableDelete { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>데이터 원본 뷰에서 행 삭제가 지원 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.LinqDataSourceView.EnableDelete*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.EnableInsert
  id: EnableInsert
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: EnableInsert
  nameWithType: LinqDataSourceView.EnableInsert
  fullName: System.Web.UI.WebControls.LinqDataSourceView.EnableInsert
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "데이터 원본 뷰에 새 행 추가 지원 하는지 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "설정 하는 경우는 <xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A>속성은 <xref:System.Web.UI.WebControls.LinqDataSource>제어의 EnableInsert 속성에 대 한 값도 설정 되어 있는 <xref:System.Web.UI.WebControls.LinqDataSourceView>컨트롤.</xref:System.Web.UI.WebControls.LinqDataSourceView> </xref:System.Web.UI.WebControls.LinqDataSource> </xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A>"
  syntax:
    content: public bool EnableInsert { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>보기에는 삽입 행; 지원 되 면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.LinqDataSourceView.EnableInsert*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.EnableObjectTracking
  id: EnableObjectTracking
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: EnableObjectTracking
  nameWithType: LinqDataSourceView.EnableObjectTracking
  fullName: System.Web.UI.WebControls.LinqDataSourceView.EnableObjectTracking
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "데이터 컨텍스트 개체의 변경 내용을 추적 되는지 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "자세한 내용은 참조는 <xref:System.Web.UI.WebControls.LinqDataSource.EnableObjectTracking%2A?displayProperty=fullName>속성.</xref:System.Web.UI.WebControls.LinqDataSource.EnableObjectTracking%2A?displayProperty=fullName>"
  syntax:
    content: public bool EnableObjectTracking { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>변경;에 대 한 데이터 컨텍스트 개체를 추적 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.LinqDataSourceView.EnableObjectTracking*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.EnableUpdate
  id: EnableUpdate
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: EnableUpdate
  nameWithType: LinqDataSourceView.EnableUpdate
  fullName: System.Web.UI.WebControls.LinqDataSourceView.EnableUpdate
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "데이터 원본 뷰 업데이트 행을 지원 하는지 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "설정 하는 경우는 <xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A>속성은 <xref:System.Web.UI.WebControls.LinqDataSource>제어의 EnableUpdate 속성에 대 한 값도 설정 되어 있는 <xref:System.Web.UI.WebControls.LinqDataSourceView>컨트롤.</xref:System.Web.UI.WebControls.LinqDataSourceView> </xref:System.Web.UI.WebControls.LinqDataSource> </xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A>"
  syntax:
    content: public bool EnableUpdate { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>뷰에서 행 업데이트가 지원 되 면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.LinqDataSourceView.EnableUpdate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)
  id: ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: ExecuteDelete(IDictionary,IDictionary)
  nameWithType: LinqDataSourceView.ExecuteDelete(IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.ExecuteDelete(IDictionary,IDictionary)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "지정 된 키와 이전 값을 사용 하 여 삭제 작업을 수행 합니다."
  remarks: "<xref:System.Web.UI.WebControls.LinqDataSource> <xref:System.Web.UI.WebControls.LinqDataSource.Delete%28System.Collections.IDictionary%2CSystem.Collections.IDictionary%29> <xref:System.Web.UI.WebControls.LinqDataSource>클래스</xref:System.Web.UI.WebControls.LinqDataSource> 의 메서드</xref:System.Web.UI.WebControls.LinqDataSource.Delete%28System.Collections.IDictionary%2CSystem.Collections.IDictionary%29> 를 참조 하는 컨트롤</xref:System.Web.UI.WebControls.LinqDataSource> 을 통해 데이터를 삭제 하는 방법에 대 한 정보에 대 한"
  syntax:
    content: protected override int ExecuteDelete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues);
    parameters:
    - id: keys
      type: System.Collections.IDictionary
      description: "레코드 삭제에 대 한 행 키 값입니다."
    - id: oldValues
      type: System.Collections.IDictionary
      description: "데이터 충돌을 감지 계산 되는 행 값."
    return:
      type: System.Int32
      description: "개체 또는 데이터 원본에서 삭제 된 행의 수입니다."
  overload: System.Web.UI.WebControls.LinqDataSourceView.ExecuteDelete*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.ExecuteInsert(System.Collections.IDictionary)
  id: ExecuteInsert(System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: ExecuteInsert(IDictionary)
  nameWithType: LinqDataSourceView.ExecuteInsert(IDictionary)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.ExecuteInsert(IDictionary)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "컬렉션에 지정 된 값을 사용 하 여 삽입 작업을 수행 합니다."
  remarks: "<xref:System.Web.UI.WebControls.LinqDataSource> <xref:System.Web.UI.WebControls.LinqDataSource.Insert%28System.Collections.IDictionary%29> <xref:System.Web.UI.WebControls.LinqDataSource>클래스</xref:System.Web.UI.WebControls.LinqDataSource> 의 메서드</xref:System.Web.UI.WebControls.LinqDataSource.Insert%28System.Collections.IDictionary%29> 를 참조 하는 컨트롤</xref:System.Web.UI.WebControls.LinqDataSource> 을 통해 데이터를 삽입 하는 방법에 대 한 정보에 대 한"
  syntax:
    content: protected override int ExecuteInsert (System.Collections.IDictionary values);
    parameters:
    - id: values
      type: System.Collections.IDictionary
      description: "데이터 소스에 삽입 하는 행 값."
    return:
      type: System.Int32
      description: "개체 또는 데이터 원본에 삽입 된 행의 수입니다."
  overload: System.Web.UI.WebControls.LinqDataSourceView.ExecuteInsert*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)
  id: ExecuteSelect(System.Web.UI.DataSourceSelectArguments)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: ExecuteSelect(DataSourceSelectArguments)
  nameWithType: LinqDataSourceView.ExecuteSelect(DataSourceSelectArguments)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.ExecuteSelect(DataSourceSelectArguments)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "데이터 검색 작업을 수행합니다."
  syntax:
    content: protected override System.Collections.IEnumerable ExecuteSelect (System.Web.UI.DataSourceSelectArguments arguments);
    parameters:
    - id: arguments
      type: System.Web.UI.DataSourceSelectArguments
      description: "기본 데이터 검색 범위를 벗어난 데이터에 대 한 작업을 요청 하는 데 사용 되는 개체입니다."
    return:
      type: System.Collections.IEnumerable
      description: "데이터 개체 또는 행의 목록입니다."
  overload: System.Web.UI.WebControls.LinqDataSourceView.ExecuteSelect*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  id: ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: ExecuteUpdate(IDictionary,IDictionary,IDictionary)
  nameWithType: LinqDataSourceView.ExecuteUpdate(IDictionary,IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.ExecuteUpdate(IDictionary,IDictionary,IDictionary)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "업데이트 작업을 수행 합니다."
  remarks: "<xref:System.Web.UI.WebControls.LinqDataSource> <xref:System.Web.UI.WebControls.LinqDataSource.Update%28System.Collections.IDictionary%2CSystem.Collections.IDictionary%2CSystem.Collections.IDictionary%29> <xref:System.Web.UI.WebControls.LinqDataSource>클래스</xref:System.Web.UI.WebControls.LinqDataSource> 의 메서드</xref:System.Web.UI.WebControls.LinqDataSource.Update%28System.Collections.IDictionary%2CSystem.Collections.IDictionary%2CSystem.Collections.IDictionary%29> 를 참조 하는 컨트롤</xref:System.Web.UI.WebControls.LinqDataSource> 을 통해 데이터를 업데이트 하는 방법에 대 한 정보에 대 한"
  syntax:
    content: protected override int ExecuteUpdate (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues);
    parameters:
    - id: keys
      type: System.Collections.IDictionary
      description: "레코드 업데이트에 대 한 행 키 값입니다."
    - id: values
      type: System.Collections.IDictionary
      description: "데이터 소스에서 업데이트할 행 값입니다."
    - id: oldValues
      type: System.Collections.IDictionary
      description: "데이터 충돌을 감지 하기 위해 계산 되는 행 값입니다."
    return:
      type: System.Int32
      description: "데이터 원본에서 업데이트 된 행의 수입니다."
  overload: System.Web.UI.WebControls.LinqDataSourceView.ExecuteUpdate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.GetSource(System.Web.UI.WebControls.QueryContext)
  id: GetSource(System.Web.UI.WebControls.QueryContext)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: GetSource(QueryContext)
  nameWithType: LinqDataSourceView.GetSource(QueryContext)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.GetSource(QueryContext)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "쿼리를 적용 하려면 데이터 원본을 반환 합니다."
  syntax:
    content: protected override object GetSource (System.Web.UI.WebControls.QueryContext context);
    parameters:
    - id: context
      type: System.Web.UI.WebControls.QueryContext
      description: "쿼리를 적용 하려면 데이터 컨텍스트입니다."
    return:
      type: System.Object
      description: "쿼리를 적용 하려면 데이터 원본입니다."
  overload: System.Web.UI.WebControls.LinqDataSourceView.GetSource*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.GetTableMemberInfo(System.Type)
  id: GetTableMemberInfo(System.Type)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: GetTableMemberInfo(Type)
  nameWithType: LinqDataSourceView.GetTableMemberInfo(Type)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.GetTableMemberInfo(Type)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "데이터 컬렉션에 대 한 메타 데이터를 검색합니다."
  syntax:
    content: protected virtual System.Reflection.MemberInfo GetTableMemberInfo (Type contextType);
    parameters:
    - id: contextType
      type: System.Type
      description: "데이터 컨텍스트 클래스를 나타내는 개체입니다."
    return:
      type: System.Reflection.MemberInfo
      description: "데이터 컬렉션에 대 한 형식 메타 데이터를 포함 하는 개체입니다."
  overload: System.Web.UI.WebControls.LinqDataSourceView.GetTableMemberInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.HandleValidationErrors(System.Collections.Generic.IDictionary{System.String,System.Exception},System.Web.UI.DataSourceOperation)
  id: HandleValidationErrors(System.Collections.Generic.IDictionary{System.String,System.Exception},System.Web.UI.DataSourceOperation)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: HandleValidationErrors(IDictionary<String,Exception>,DataSourceOperation)
  nameWithType: LinqDataSourceView.HandleValidationErrors(IDictionary<String,Exception>,DataSourceOperation)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.HandleValidationErrors(IDictionary<String,Exception>,DataSourceOperation)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "데이터 개체를 만드는 동안 데이터 작업이 실패 하면 발생 하는 모든 예외를 처리 합니다."
  syntax:
    content: protected override void HandleValidationErrors (System.Collections.Generic.IDictionary<string,Exception> errors, System.Web.UI.DataSourceOperation operation);
    parameters:
    - id: errors
      type: System.Collections.Generic.IDictionary{System.String,System.Exception}
      description: "시스템에서 생성 된, 필드별 발생 한 예외를 합니다."
    - id: operation
      type: System.Web.UI.DataSourceOperation
      description: "데이터 작업 예외를 발생 시킨입니다."
  overload: System.Web.UI.WebControls.LinqDataSourceView.HandleValidationErrors*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.InsertDataObject(System.Object,System.Object,System.Object)
  id: InsertDataObject(System.Object,System.Object,System.Object)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: InsertDataObject(Object,Object,Object)
  nameWithType: LinqDataSourceView.InsertDataObject(Object,Object,Object)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.InsertDataObject(Object,Object,Object)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "테이블에 데이터 개체를 삽입합니다."
  syntax:
    content: protected virtual void InsertDataObject (object dataContext, object table, object newDataObject);
    parameters:
    - id: dataContext
      type: System.Object
      description: "개체의 데이터 컨텍스트입니다."
    - id: table
      type: System.Object
      description: "데이터가 삽입 될 테이블입니다."
    - id: newDataObject
      type: System.Object
      description: "삽입할 개체입니다."
  overload: System.Web.UI.WebControls.LinqDataSourceView.InsertDataObject*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.Inserted
  id: Inserted
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: Inserted
  nameWithType: LinqDataSourceView.Inserted
  fullName: System.Web.UI.WebControls.LinqDataSourceView.Inserted
  type: Event
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "삽입 작업이 완료 되 면 발생 합니다."
  remarks: "삽입 작업 중에 throw 된 예외를 catch 하거나 삽입 작업이 완료 된 후에 값을 확인 하려면이 이벤트를 처리 합니다. 자세한 내용은 참조는 <xref:System.Web.UI.WebControls.LinqDataSource.Inserted?displayProperty=fullName>이벤트.</xref:System.Web.UI.WebControls.LinqDataSource.Inserted?displayProperty=fullName>"
  syntax:
    content: public event EventHandler<System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> Inserted;
    return:
      type: System.EventHandler{System.Web.UI.WebControls.LinqDataSourceStatusEventArgs}
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.Inserting
  id: Inserting
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: Inserting
  nameWithType: LinqDataSourceView.Inserting
  fullName: System.Web.UI.WebControls.LinqDataSourceView.Inserting
  type: Event
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "삽입 작업이 수행 되기 전에 발생합니다."
  remarks: "유효성을 검사할 개체를 삽입할 삽입 작업이 수행 되기 전에 값을 변경 하려면 또는 삽입 작업을 취소 하려면 삽입 이벤트를 처리 합니다. 자세한 내용은 참조는 <xref:System.Web.UI.WebControls.LinqDataSource.Inserting?displayProperty=fullName>이벤트.</xref:System.Web.UI.WebControls.LinqDataSource.Inserting?displayProperty=fullName>"
  syntax:
    content: public event EventHandler<System.Web.UI.WebControls.LinqDataSourceInsertEventArgs> Inserting;
    return:
      type: System.EventHandler{System.Web.UI.WebControls.LinqDataSourceInsertEventArgs}
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.InsertObject(System.Object)
  id: InsertObject(System.Object)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: InsertObject(Object)
  nameWithType: LinqDataSourceView.InsertObject(Object)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.InsertObject(Object)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "에 데이터 개체를 삽입 한 <xref href=&quot;System.Web.UI.WebControls.LinqDataSourceView&quot;> </xref> 개체입니다."
  syntax:
    content: protected override int InsertObject (object newEntity);
    parameters:
    - id: newEntity
      type: System.Object
      description: "삽입할 데이터 개체입니다."
    return:
      type: System.Int32
      description: "데이터 원본 뷰에 삽입 된 개체의 수입니다."
  overload: System.Web.UI.WebControls.LinqDataSourceView.InsertObject*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.OnContextCreated(System.Web.UI.WebControls.LinqDataSourceStatusEventArgs)
  id: OnContextCreated(System.Web.UI.WebControls.LinqDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: OnContextCreated(LinqDataSourceStatusEventArgs)
  nameWithType: LinqDataSourceView.OnContextCreated(LinqDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.OnContextCreated(LinqDataSourceStatusEventArgs)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "발생 된 <xref href=&quot;System.Web.UI.WebControls.LinqDataSourceView.ContextCreated&quot;> </xref> 이벤트"
  syntax:
    content: protected virtual void OnContextCreated (System.Web.UI.WebControls.LinqDataSourceStatusEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs
      description: "이벤트 데이터입니다."
  overload: System.Web.UI.WebControls.LinqDataSourceView.OnContextCreated*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.OnContextCreating(System.Web.UI.WebControls.LinqDataSourceContextEventArgs)
  id: OnContextCreating(System.Web.UI.WebControls.LinqDataSourceContextEventArgs)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: OnContextCreating(LinqDataSourceContextEventArgs)
  nameWithType: LinqDataSourceView.OnContextCreating(LinqDataSourceContextEventArgs)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.OnContextCreating(LinqDataSourceContextEventArgs)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "발생 된 <xref href=&quot;System.Web.UI.WebControls.LinqDataSourceView.ContextCreating&quot;> </xref> 이벤트입니다."
  syntax:
    content: protected virtual void OnContextCreating (System.Web.UI.WebControls.LinqDataSourceContextEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.LinqDataSourceContextEventArgs
      description: "이벤트 데이터입니다."
  overload: System.Web.UI.WebControls.LinqDataSourceView.OnContextCreating*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.OnContextDisposing(System.Web.UI.WebControls.LinqDataSourceDisposeEventArgs)
  id: OnContextDisposing(System.Web.UI.WebControls.LinqDataSourceDisposeEventArgs)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: OnContextDisposing(LinqDataSourceDisposeEventArgs)
  nameWithType: LinqDataSourceView.OnContextDisposing(LinqDataSourceDisposeEventArgs)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.OnContextDisposing(LinqDataSourceDisposeEventArgs)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "발생 된 <xref href=&quot;System.Web.UI.WebControls.LinqDataSourceView.ContextDisposing&quot;> </xref> 이벤트입니다."
  syntax:
    content: protected virtual void OnContextDisposing (System.Web.UI.WebControls.LinqDataSourceDisposeEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.LinqDataSourceDisposeEventArgs
      description: "이벤트 데이터입니다."
  overload: System.Web.UI.WebControls.LinqDataSourceView.OnContextDisposing*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.OnDeleted(System.Web.UI.WebControls.LinqDataSourceStatusEventArgs)
  id: OnDeleted(System.Web.UI.WebControls.LinqDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: OnDeleted(LinqDataSourceStatusEventArgs)
  nameWithType: LinqDataSourceView.OnDeleted(LinqDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.OnDeleted(LinqDataSourceStatusEventArgs)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "발생 된 <xref href=&quot;System.Web.UI.WebControls.LinqDataSourceView.Deleted&quot;> </xref> 이벤트입니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.       OnDeleted 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할 수 수 있도록 해줍니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnDeleted (System.Web.UI.WebControls.LinqDataSourceStatusEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs
      description: "이벤트 데이터입니다."
  overload: System.Web.UI.WebControls.LinqDataSourceView.OnDeleted*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.OnDeleting(System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs)
  id: OnDeleting(System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: OnDeleting(LinqDataSourceDeleteEventArgs)
  nameWithType: LinqDataSourceView.OnDeleting(LinqDataSourceDeleteEventArgs)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.OnDeleting(LinqDataSourceDeleteEventArgs)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "발생 된 <xref href=&quot;System.Web.UI.WebControls.LinqDataSourceView.Deleting&quot;> </xref> 이벤트입니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.       OnDeleting 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할 수 수 있도록 해줍니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnDeleting (System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs
      description: "이벤트 데이터입니다."
  overload: System.Web.UI.WebControls.LinqDataSourceView.OnDeleting*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.OnException(System.Web.DynamicData.DynamicValidatorEventArgs)
  id: OnException(System.Web.DynamicData.DynamicValidatorEventArgs)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: OnException(DynamicValidatorEventArgs)
  nameWithType: LinqDataSourceView.OnException(DynamicValidatorEventArgs)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.OnException(DynamicValidatorEventArgs)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "발생 된 <xref href=&quot;System.Web.DynamicData.IDynamicDataSource.Exception&quot;> </xref> 데이터 작업이 실패 하면 이벤트입니다."
  remarks: "동적 데이터 프레임 워크 OnException 이벤트 처리기를 사용 하 여 데이터를 업데이트할 때 유효성 검사 예외를 처리할 수 또는 데이터를 삽입 합니다."
  syntax:
    content: protected virtual void OnException (System.Web.DynamicData.DynamicValidatorEventArgs e);
    parameters:
    - id: e
      type: System.Web.DynamicData.DynamicValidatorEventArgs
      description: "이벤트 데이터입니다."
  overload: System.Web.UI.WebControls.LinqDataSourceView.OnException*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.OnInserted(System.Web.UI.WebControls.LinqDataSourceStatusEventArgs)
  id: OnInserted(System.Web.UI.WebControls.LinqDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: OnInserted(LinqDataSourceStatusEventArgs)
  nameWithType: LinqDataSourceView.OnInserted(LinqDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.OnInserted(LinqDataSourceStatusEventArgs)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "발생는 <xref href=&quot;System.Web.UI.WebControls.LinqDataSourceView.Inserted&quot;> </xref> 후 이벤트는 <xref href=&quot;System.Web.UI.WebControls.LinqDataSource&quot;> </xref> 컨트롤이 삽입 작업을 완료 합니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.       OnInserted 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할 수 수 있도록 해줍니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnInserted (System.Web.UI.WebControls.LinqDataSourceStatusEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs
      description: "이벤트 데이터입니다."
  overload: System.Web.UI.WebControls.LinqDataSourceView.OnInserted*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.OnInserting(System.Web.UI.WebControls.LinqDataSourceInsertEventArgs)
  id: OnInserting(System.Web.UI.WebControls.LinqDataSourceInsertEventArgs)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: OnInserting(LinqDataSourceInsertEventArgs)
  nameWithType: LinqDataSourceView.OnInserting(LinqDataSourceInsertEventArgs)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.OnInserting(LinqDataSourceInsertEventArgs)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "발생 된 <xref href=&quot;System.Web.UI.WebControls.LinqDataSourceView.Inserting&quot;> </xref> 이벤트입니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.       OnInserting 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할 수 수 있도록 해줍니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnInserting (System.Web.UI.WebControls.LinqDataSourceInsertEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs
      description: "이벤트 데이터입니다."
  overload: System.Web.UI.WebControls.LinqDataSourceView.OnInserting*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.OnSelected(System.Web.UI.WebControls.LinqDataSourceStatusEventArgs)
  id: OnSelected(System.Web.UI.WebControls.LinqDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: OnSelected(LinqDataSourceStatusEventArgs)
  nameWithType: LinqDataSourceView.OnSelected(LinqDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.OnSelected(LinqDataSourceStatusEventArgs)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "발생는 <xref href=&quot;System.Web.UI.WebControls.LinqDataSourceView.Selected&quot;> </xref> 후 이벤트는 <xref href=&quot;System.Web.UI.WebControls.LinqDataSource&quot;> </xref> 컨트롤이 데이터 검색 작업을 완료 합니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.       OnSelected 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할 수 수 있도록 해줍니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnSelected (System.Web.UI.WebControls.LinqDataSourceStatusEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs
      description: "이벤트 데이터입니다."
  overload: System.Web.UI.WebControls.LinqDataSourceView.OnSelected*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.OnSelecting(System.Web.UI.WebControls.LinqDataSourceSelectEventArgs)
  id: OnSelecting(System.Web.UI.WebControls.LinqDataSourceSelectEventArgs)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: OnSelecting(LinqDataSourceSelectEventArgs)
  nameWithType: LinqDataSourceView.OnSelecting(LinqDataSourceSelectEventArgs)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.OnSelecting(LinqDataSourceSelectEventArgs)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "발생는 <xref href=&quot;System.Web.UI.WebControls.LinqDataSourceView.Selecting&quot;> </xref> 이전 이벤트는 <xref href=&quot;System.Web.UI.WebControls.LinqDataSource&quot;> </xref> 컨트롤이 데이터 검색 작업을 수행 합니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.       OnSelecting 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할 수 수 있도록 해줍니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnSelecting (System.Web.UI.WebControls.LinqDataSourceSelectEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs
      description: "이벤트 데이터입니다."
  overload: System.Web.UI.WebControls.LinqDataSourceView.OnSelecting*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.OnUpdated(System.Web.UI.WebControls.LinqDataSourceStatusEventArgs)
  id: OnUpdated(System.Web.UI.WebControls.LinqDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: OnUpdated(LinqDataSourceStatusEventArgs)
  nameWithType: LinqDataSourceView.OnUpdated(LinqDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.OnUpdated(LinqDataSourceStatusEventArgs)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "발생는 <xref href=&quot;System.Web.UI.WebControls.LinqDataSourceView.Updated&quot;> </xref> 후 이벤트는 <xref href=&quot;System.Web.UI.WebControls.LinqDataSource&quot;> </xref> 컨트롤이 업데이트 작업을 완료 합니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.       OnUpdated 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할 수 수 있도록 해줍니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnUpdated (System.Web.UI.WebControls.LinqDataSourceStatusEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs
      description: "이벤트 데이터입니다."
  overload: System.Web.UI.WebControls.LinqDataSourceView.OnUpdated*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.OnUpdating(System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs)
  id: OnUpdating(System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: OnUpdating(LinqDataSourceUpdateEventArgs)
  nameWithType: LinqDataSourceView.OnUpdating(LinqDataSourceUpdateEventArgs)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.OnUpdating(LinqDataSourceUpdateEventArgs)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "발생는 <xref href=&quot;System.Web.UI.WebControls.LinqDataSourceView.Updating&quot;> </xref> 이전 이벤트는 <xref href=&quot;System.Web.UI.WebControls.LinqDataSource&quot;> </xref> 제어 업데이트 작업을 수행 합니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.       OnUpdating 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할 수 수 있도록 해줍니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnUpdating (System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs
      description: "이벤트 데이터입니다."
  overload: System.Web.UI.WebControls.LinqDataSourceView.OnUpdating*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.ResetDataObject(System.Object,System.Object)
  id: ResetDataObject(System.Object,System.Object)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: ResetDataObject(Object,Object)
  nameWithType: LinqDataSourceView.ResetDataObject(Object,Object)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.ResetDataObject(Object,Object)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "원래 상태로 데이터를 포함 하는 개체를 다시 설정 합니다."
  syntax:
    content: protected virtual void ResetDataObject (object table, object dataObject);
    parameters:
    - id: table
      type: System.Object
      description: "데이터를 포함 하는 테이블입니다."
    - id: dataObject
      type: System.Object
      description: "데이터의 원래 상태를 포함 하는 엔터티."
  overload: System.Web.UI.WebControls.LinqDataSourceView.ResetDataObject*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)
  id: Select(System.Web.UI.DataSourceSelectArguments)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: Select(DataSourceSelectArguments)
  nameWithType: LinqDataSourceView.Select(DataSourceSelectArguments)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.Select(DataSourceSelectArguments)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "데이터 원본에서 데이터를 검색합니다."
  remarks: "Select 메서드 호출의 <xref:System.Web.UI.WebControls.LinqDataSourceView.ExecuteSelect%28System.Web.UI.DataSourceSelectArguments%29>전달 하는 메서드는 `selectArgs` 매개 변수.</xref:System.Web.UI.WebControls.LinqDataSourceView.ExecuteSelect%28System.Web.UI.DataSourceSelectArguments%29>"
  syntax:
    content: public System.Collections.IEnumerable Select (System.Web.UI.DataSourceSelectArguments arguments);
    parameters:
    - id: arguments
      type: System.Web.UI.DataSourceSelectArguments
      description: "기본 데이터 검색 범위를 벗어난 데이터에 대 한 작업을 요청 하는 데 사용 되는 개체입니다."
    return:
      type: System.Collections.IEnumerable
      description: "목록 데이터 행입니다."
  overload: System.Web.UI.WebControls.LinqDataSourceView.Select*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.Selected
  id: Selected
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: Selected
  nameWithType: LinqDataSourceView.Selected
  fullName: System.Web.UI.WebControls.LinqDataSourceView.Selected
  type: Event
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "데이터 검색 작업이 완료 되 면 발생 합니다."
  remarks: "선택 작업 동안 throw 된 예외를 catch 하거나 작업이 완료 된 후에 값을 확인 하려면이 이벤트를 처리 합니다. 값을 검색할 수는 <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs>이벤트와 연결 된 개체입니다.</xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs>"
  syntax:
    content: public event EventHandler<System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> Selected;
    return:
      type: System.EventHandler{System.Web.UI.WebControls.LinqDataSourceStatusEventArgs}
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.Selecting
  id: Selecting
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: Selecting
  nameWithType: LinqDataSourceView.Selecting
  fullName: System.Web.UI.WebControls.LinqDataSourceView.Selecting
  type: Event
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "데이터 검색 작업이 수행 되기 전에 발생합니다."
  remarks: "데이터 검색 작업 중에 사용 되는 값을 변경할 Selecting 이벤트를 처리 합니다. 자세한 내용은 참조는 <xref:System.Web.UI.WebControls.LinqDataSource.Selecting?displayProperty=fullName>이벤트.</xref:System.Web.UI.WebControls.LinqDataSource.Selecting?displayProperty=fullName>"
  syntax:
    content: public event EventHandler<System.Web.UI.WebControls.LinqDataSourceSelectEventArgs> Selecting;
    return:
      type: System.EventHandler{System.Web.UI.WebControls.LinqDataSourceSelectEventArgs}
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.StoreOriginalValues(System.Collections.IList)
  id: StoreOriginalValues(System.Collections.IList)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: StoreOriginalValues(IList)
  nameWithType: LinqDataSourceView.StoreOriginalValues(IList)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.StoreOriginalValues(IList)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "원래 값이 저장 된 <xref uid=&quot;langword_csharp_Select&quot; name=&quot;Select&quot; href=&quot;&quot;> </xref> 컨트롤의 뷰 상태에서 작업 합니다."
  syntax:
    content: protected override void StoreOriginalValues (System.Collections.IList results);
    parameters:
    - id: results
      type: System.Collections.IList
      description: "결과 <xref uid=&quot;langword_csharp_Select&quot; name=&quot;Select&quot; href=&quot;&quot;> </xref> 작업 합니다."
  overload: System.Web.UI.WebControls.LinqDataSourceView.StoreOriginalValues*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.StoreOriginalValuesInViewState
  id: StoreOriginalValuesInViewState
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: StoreOriginalValuesInViewState
  nameWithType: LinqDataSourceView.StoreOriginalValuesInViewState
  fullName: System.Web.UI.WebControls.LinqDataSourceView.StoreOriginalValuesInViewState
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "선택 작업의 원래 값이 뷰 상태에 저장 됩니다 하는 값을 가져오거나 설정 합니다. 삭제 또는 업데이트 작업을 사용 합니다."
  remarks: "설정 하는 경우는 <xref:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState%2A>속성은 <xref:System.Web.UI.WebControls.LinqDataSource>제어의 StoreOriginalValuesInViewState 속성에 대 한 값도 설정 되어 있는 <xref:System.Web.UI.WebControls.LinqDataSourceView>컨트롤.</xref:System.Web.UI.WebControls.LinqDataSourceView> </xref:System.Web.UI.WebControls.LinqDataSource> </xref:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState%2A>"
  syntax:
    content: public bool StoreOriginalValuesInViewState { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>원래 값 보기에 상태 저장 되어 있는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.LinqDataSourceView.StoreOriginalValuesInViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.TableName
  id: TableName
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: TableName
  nameWithType: LinqDataSourceView.TableName
  fullName: System.Web.UI.WebControls.LinqDataSourceView.TableName
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "데이터 컬렉션을 포함 하는 데이터 컨텍스트 클래스의 필드나 속성의 이름을 가져오거나 설정 합니다."
  remarks: "설정 하는 경우는 <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A>의 속성은 <xref:System.Web.UI.WebControls.LinqDataSource>제어의 TableName 속성에 대 한 값도 설정 되어 있는 <xref:System.Web.UI.WebControls.LinqDataSourceView>컨트롤.</xref:System.Web.UI.WebControls.LinqDataSourceView> </xref:System.Web.UI.WebControls.LinqDataSource> </xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A>"
  syntax:
    content: public string TableName { get; set; }
    return:
      type: System.String
      description: "데이터 컬렉션을 나타내는 속성의 이름입니다."
  overload: System.Web.UI.WebControls.LinqDataSourceView.TableName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.Updated
  id: Updated
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: Updated
  nameWithType: LinqDataSourceView.Updated
  fullName: System.Web.UI.WebControls.LinqDataSourceView.Updated
  type: Event
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "업데이트 작업이 완료 되 면 발생 합니다."
  remarks: "업데이트 작업이 완료 된 후의 출력 매개 변수 값 확인 또는 업데이트 작업 중에 throw 된 예외를 catch 하려면 업데이트 된 이벤트를 처리 합니다. 출력 매개 변수는 <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs>이벤트와 연결 된 개체입니다.</xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs>"
  syntax:
    content: public event EventHandler<System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> Updated;
    return:
      type: System.EventHandler{System.Web.UI.WebControls.LinqDataSourceStatusEventArgs}
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.UpdateDataObject(System.Object,System.Object,System.Object,System.Object)
  id: UpdateDataObject(System.Object,System.Object,System.Object,System.Object)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: UpdateDataObject(Object,Object,Object,Object)
  nameWithType: LinqDataSourceView.UpdateDataObject(Object,Object,Object,Object)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.UpdateDataObject(Object,Object,Object,Object)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "데이터 개체를 업데이트합니다."
  syntax:
    content: protected virtual void UpdateDataObject (object dataContext, object table, object oldDataObject, object newDataObject);
    parameters:
    - id: dataContext
      type: System.Object
      description: "데이터 컨텍스트 클래스를 업데이트 합니다."
    - id: table
      type: System.Object
      description: "업데이트할 개체를 포함 하는 데이터 컬렉션입니다."
    - id: oldDataObject
      type: System.Object
      description: "업데이트할 개체입니다."
    - id: newDataObject
      type: System.Object
      description: "업데이트 된 개체입니다."
  overload: System.Web.UI.WebControls.LinqDataSourceView.UpdateDataObject*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.UpdateObject(System.Object,System.Object)
  id: UpdateObject(System.Object,System.Object)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: UpdateObject(Object,Object)
  nameWithType: LinqDataSourceView.UpdateObject(Object,Object)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.UpdateObject(Object,Object)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "데이터 개체를 업데이트합니다."
  syntax:
    content: protected override int UpdateObject (object oldEntity, object newEntity);
    parameters:
    - id: oldEntity
      type: System.Object
      description: "업데이트할 개체입니다."
    - id: newEntity
      type: System.Object
      description: "업데이트에 사용할 새 개체입니다."
    return:
      type: System.Int32
      description: "0 (영) 업데이트가 성공적으로 수행 하는 경우 업데이트가 실패 하는 경우-1입니다."
  overload: System.Web.UI.WebControls.LinqDataSourceView.UpdateObject*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.Updating
  id: Updating
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: Updating
  nameWithType: LinqDataSourceView.Updating
  fullName: System.Web.UI.WebControls.LinqDataSourceView.Updating
  type: Event
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "업데이트 작업이 수행 되기 전에 발생합니다."
  remarks: "업데이트, 업데이트 작업 전의 값을 변경 또는 업데이트 작업을 취소 하는 개체의 유효성을 검사 하려면 업데이트 이벤트를 처리 합니다. 자세한 내용은 참조는 <xref:System.Web.UI.WebControls.LinqDataSource.Updating?displayProperty=fullName>이벤트.</xref:System.Web.UI.WebControls.LinqDataSource.Updating?displayProperty=fullName>"
  syntax:
    content: public event EventHandler<System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs> Updating;
    return:
      type: System.EventHandler{System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs}
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.ValidateContextType(System.Type,System.Boolean)
  id: ValidateContextType(System.Type,System.Boolean)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: ValidateContextType(Type,Boolean)
  nameWithType: LinqDataSourceView.ValidateContextType(Type,Boolean)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.ValidateContextType(Type,Boolean)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "데이터 컨텍스트 클래스에서 파생 되는 여부를 확인 <xref href=&quot;System.Data.Linq.DataContext&quot;> </xref>합니다."
  remarks: "에 지정 된 클래스는 <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A>속성에서 파생 되어야 합니다는 <xref:System.Data.Linq.DataContext>사용 자동 삽입, 업데이트 및 삭제 작업을 순서 대로 클래스.</xref:System.Data.Linq.DataContext> </xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A>"
  syntax:
    content: protected virtual void ValidateContextType (Type contextType, bool selecting);
    parameters:
    - id: contextType
      type: System.Type
      description: "유효성을 검사할 데이터 컨텍스트 클래스의 형식입니다."
    - id: selecting
      type: System.Boolean
      description: "Select 작업이 시작 될 때 메서드 호출 되었는지 여부를 지정 합니다."
  overload: System.Web.UI.WebControls.LinqDataSourceView.ValidateContextType*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "삽입, 업데이트 또는 삭제 작업이 수행 되 고 데이터 컨텍스트 클래스에서 파생 되지 않은 <xref href=&quot;System.Data.Linq.DataContext&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.ValidateDeleteSupported(System.Collections.IDictionary,System.Collections.IDictionary)
  id: ValidateDeleteSupported(System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: ValidateDeleteSupported(IDictionary,IDictionary)
  nameWithType: LinqDataSourceView.ValidateDeleteSupported(IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.ValidateDeleteSupported(IDictionary,IDictionary)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "삭제 작업을 수행 하는 조건이 있는지 확인 합니다."
  remarks: "데이터를 삭제할 수 없으므로 때는 <xref:System.Web.UI.WebControls.LinqDataSourceView.GroupBy%2A>속성 또는 <xref:System.Web.UI.WebControls.LinqDataSourceView.SelectNew%2A>속성 값이 아닌 다른 포함 `null`.</xref:System.Web.UI.WebControls.LinqDataSourceView.SelectNew%2A> </xref:System.Web.UI.WebControls.LinqDataSourceView.GroupBy%2A> 자세한 내용은 참조는 <xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A?displayProperty=fullName>속성.</xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A?displayProperty=fullName>"
  syntax:
    content: protected virtual void ValidateDeleteSupported (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues);
    parameters:
    - id: keys
      type: System.Collections.IDictionary
      description: "삭제할 데이터 레코드에 대 한 키 값의 사전입니다."
    - id: oldValues
      type: System.Collections.IDictionary
      description: "삭제할 행 값을 포함 하는 사전입니다."
  overload: System.Web.UI.WebControls.LinqDataSourceView.ValidateDeleteSupported*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<> </> *> 또는 <> </> *> 속성 값이 포함 됩니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref:System.Web.UI.WebControls.LinqDataSourceView.CanDelete*>is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>.</xref:System.Web.UI.WebControls.LinqDataSourceView.CanDelete*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.ValidateEditSupported
  id: ValidateEditSupported
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: ValidateEditSupported()
  nameWithType: LinqDataSourceView.ValidateEditSupported()
  fullName: System.Web.UI.WebControls.LinqDataSourceView.ValidateEditSupported()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "편집 작업을 수행 하는 조건이 있는지 확인 합니다."
  syntax:
    content: protected virtual void ValidateEditSupported ();
    parameters: []
  overload: System.Web.UI.WebControls.LinqDataSourceView.ValidateEditSupported*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "유효성 검사 실패 했거나 취소 되었습니다."
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.ValidateInsertSupported(System.Collections.IDictionary)
  id: ValidateInsertSupported(System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: ValidateInsertSupported(IDictionary)
  nameWithType: LinqDataSourceView.ValidateInsertSupported(IDictionary)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.ValidateInsertSupported(IDictionary)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "삽입 작업을 수행 하는 조건이 있는지 확인 합니다."
  remarks: "데이터를 삽입할 수 없을 때는 <xref:System.Web.UI.WebControls.LinqDataSourceView.GroupBy%2A>속성 또는 <xref:System.Web.UI.WebControls.LinqDataSourceView.SelectNew%2A>속성 값이 아닌 다른 포함 `null`.</xref:System.Web.UI.WebControls.LinqDataSourceView.SelectNew%2A> </xref:System.Web.UI.WebControls.LinqDataSourceView.GroupBy%2A> 자세한 내용은 참조는 <xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A?displayProperty=fullName>속성.</xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A?displayProperty=fullName>"
  syntax:
    content: protected virtual void ValidateInsertSupported (System.Collections.IDictionary values);
    parameters:
    - id: values
      type: System.Collections.IDictionary
      description: "삽입할 행 값을 포함 하는 사전입니다."
  overload: System.Web.UI.WebControls.LinqDataSourceView.ValidateInsertSupported*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<> </> *> 또는 <> </> *> 속성 값이 포함 또는 <code> values </code> 매개 변수는 항목이 포함 되지 않습니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref:System.Web.UI.WebControls.LinqDataSourceView.CanInsert*>is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>.</xref:System.Web.UI.WebControls.LinqDataSourceView.CanInsert*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.ValidateTableType(System.Type,System.Boolean)
  id: ValidateTableType(System.Type,System.Boolean)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: ValidateTableType(Type,Boolean)
  nameWithType: LinqDataSourceView.ValidateTableType(Type,Boolean)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.ValidateTableType(Type,Boolean)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "데이터 테이블을 나타내는 클래스의 형식을 제네릭 형식 인지 확인 합니다."
  syntax:
    content: protected virtual void ValidateTableType (Type tableType, bool selecting);
    parameters:
    - id: tableType
      type: System.Type
      description: "유효성을 검사할 테이블 형식입니다."
    - id: selecting
      type: System.Boolean
      description: "Select 작업이 시작 될 때 메서드 호출 되었는지 여부를 지정 합니다."
  overload: System.Web.UI.WebControls.LinqDataSourceView.ValidateTableType*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "테이블의 유형에 제네릭이 아닙니다."
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceView.ValidateUpdateSupported(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  id: ValidateUpdateSupported(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  langs:
  - csharp
  name: ValidateUpdateSupported(IDictionary,IDictionary,IDictionary)
  nameWithType: LinqDataSourceView.ValidateUpdateSupported(IDictionary,IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.ValidateUpdateSupported(IDictionary,IDictionary,IDictionary)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "업데이트 작업을 수행 하는 조건이 있는지 확인 합니다."
  remarks: "데이터를 업데이트할 수 없을 때는 <xref:System.Web.UI.WebControls.LinqDataSourceView.GroupBy%2A>속성 또는 <xref:System.Web.UI.WebControls.LinqDataSourceView.SelectNew%2A>속성 값이 아닌 다른 포함 `null`.</xref:System.Web.UI.WebControls.LinqDataSourceView.SelectNew%2A> </xref:System.Web.UI.WebControls.LinqDataSourceView.GroupBy%2A> 자세한 내용은 참조는 <xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A?displayProperty=fullName>속성.</xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A?displayProperty=fullName>"
  syntax:
    content: protected virtual void ValidateUpdateSupported (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues);
    parameters:
    - id: keys
      type: System.Collections.IDictionary
      description: "데이터 레코드 업데이트에 대 한 키 값의 사전입니다."
    - id: values
      type: System.Collections.IDictionary
      description: "업데이트 작업에 대 한 새 행 값을 포함 하는 사전입니다."
    - id: oldValues
      type: System.Collections.IDictionary
      description: "업데이트 작업에 대 한 오래 된 행 값을 포함 하는 사전입니다."
  overload: System.Web.UI.WebControls.LinqDataSourceView.ValidateUpdateSupported*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "업데이트 작업이 지원 되지 않습니다."
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.ContextDataSourceView
  isExternal: false
  name: System.Web.UI.WebControls.ContextDataSourceView
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Web.UI.WebControls.LinqDataSourceView.#ctor(System.Web.UI.WebControls.LinqDataSource,System.String,System.Web.HttpContext)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: LinqDataSourceView(LinqDataSource,String,HttpContext)
  nameWithType: LinqDataSourceView.LinqDataSourceView(LinqDataSource,String,HttpContext)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.LinqDataSourceView(LinqDataSource,String,HttpContext)
- uid: System.Web.UI.WebControls.LinqDataSource
  parent: System.Web.UI.WebControls
  isExternal: false
  name: LinqDataSource
  nameWithType: LinqDataSource
  fullName: System.Web.UI.WebControls.LinqDataSource
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.Web.UI.WebControls.LinqDataSourceView.CanDelete
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: CanDelete
  nameWithType: LinqDataSourceView.CanDelete
  fullName: System.Web.UI.WebControls.LinqDataSourceView.CanDelete
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.LinqDataSourceView.CanInsert
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: CanInsert
  nameWithType: LinqDataSourceView.CanInsert
  fullName: System.Web.UI.WebControls.LinqDataSourceView.CanInsert
- uid: System.Web.UI.WebControls.LinqDataSourceView.CanPage
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: CanPage
  nameWithType: LinqDataSourceView.CanPage
  fullName: System.Web.UI.WebControls.LinqDataSourceView.CanPage
- uid: System.Web.UI.WebControls.LinqDataSourceView.CanRetrieveTotalRowCount
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: CanRetrieveTotalRowCount
  nameWithType: LinqDataSourceView.CanRetrieveTotalRowCount
  fullName: System.Web.UI.WebControls.LinqDataSourceView.CanRetrieveTotalRowCount
- uid: System.Web.UI.WebControls.LinqDataSourceView.CanSort
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: CanSort
  nameWithType: LinqDataSourceView.CanSort
  fullName: System.Web.UI.WebControls.LinqDataSourceView.CanSort
- uid: System.Web.UI.WebControls.LinqDataSourceView.CanUpdate
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: CanUpdate
  nameWithType: LinqDataSourceView.CanUpdate
  fullName: System.Web.UI.WebControls.LinqDataSourceView.CanUpdate
- uid: System.Web.UI.WebControls.LinqDataSourceView.ContextCreated
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: ContextCreated
  nameWithType: LinqDataSourceView.ContextCreated
  fullName: System.Web.UI.WebControls.LinqDataSourceView.ContextCreated
- uid: System.EventHandler{System.Web.UI.WebControls.LinqDataSourceStatusEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<LinqDataSourceStatusEventArgs>
  nameWithType: EventHandler<LinqDataSourceStatusEventArgs>
  fullName: System.EventHandler<System.Web.UI.WebControls.LinqDataSourceStatusEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Web.UI.WebControls.LinqDataSourceStatusEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs
    name: LinqDataSourceStatusEventArgs
    nameWithType: LinqDataSourceStatusEventArgs
    fullName: LinqDataSourceStatusEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.UI.WebControls.LinqDataSourceView.ContextCreating
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: ContextCreating
  nameWithType: LinqDataSourceView.ContextCreating
  fullName: System.Web.UI.WebControls.LinqDataSourceView.ContextCreating
- uid: System.EventHandler{System.Web.UI.WebControls.LinqDataSourceContextEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<LinqDataSourceContextEventArgs>
  nameWithType: EventHandler<LinqDataSourceContextEventArgs>
  fullName: System.EventHandler<System.Web.UI.WebControls.LinqDataSourceContextEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Web.UI.WebControls.LinqDataSourceContextEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.UI.WebControls.LinqDataSourceContextEventArgs
    name: LinqDataSourceContextEventArgs
    nameWithType: LinqDataSourceContextEventArgs
    fullName: LinqDataSourceContextEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.UI.WebControls.LinqDataSourceView.ContextDisposing
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: ContextDisposing
  nameWithType: LinqDataSourceView.ContextDisposing
  fullName: System.Web.UI.WebControls.LinqDataSourceView.ContextDisposing
- uid: System.EventHandler{System.Web.UI.WebControls.LinqDataSourceDisposeEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<LinqDataSourceDisposeEventArgs>
  nameWithType: EventHandler<LinqDataSourceDisposeEventArgs>
  fullName: System.EventHandler<System.Web.UI.WebControls.LinqDataSourceDisposeEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Web.UI.WebControls.LinqDataSourceDisposeEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.UI.WebControls.LinqDataSourceDisposeEventArgs
    name: LinqDataSourceDisposeEventArgs
    nameWithType: LinqDataSourceDisposeEventArgs
    fullName: LinqDataSourceDisposeEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.UI.WebControls.LinqDataSourceView.ContextType
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: ContextType
  nameWithType: LinqDataSourceView.ContextType
  fullName: System.Web.UI.WebControls.LinqDataSourceView.ContextType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.UI.WebControls.LinqDataSourceView.ContextTypeName
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: ContextTypeName
  nameWithType: LinqDataSourceView.ContextTypeName
  fullName: System.Web.UI.WebControls.LinqDataSourceView.ContextTypeName
- uid: System.Web.UI.WebControls.LinqDataSourceView.CreateContext(System.Type)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: CreateContext(Type)
  nameWithType: LinqDataSourceView.CreateContext(Type)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.CreateContext(Type)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.LinqDataSourceView.CreateContext(System.Web.UI.DataSourceOperation)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: CreateContext(DataSourceOperation)
  nameWithType: LinqDataSourceView.CreateContext(DataSourceOperation)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.CreateContext(DataSourceOperation)
- uid: System.Web.UI.WebControls.ContextDataSourceContextData
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ContextDataSourceContextData
  nameWithType: ContextDataSourceContextData
  fullName: System.Web.UI.WebControls.ContextDataSourceContextData
- uid: System.Web.UI.DataSourceOperation
  parent: System.Web.UI
  isExternal: false
  name: DataSourceOperation
  nameWithType: DataSourceOperation
  fullName: System.Web.UI.DataSourceOperation
- uid: System.Web.UI.WebControls.LinqDataSourceView.Deleted
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: Deleted
  nameWithType: LinqDataSourceView.Deleted
  fullName: System.Web.UI.WebControls.LinqDataSourceView.Deleted
- uid: System.Web.UI.WebControls.LinqDataSourceView.DeleteDataObject(System.Object,System.Object,System.Object)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: DeleteDataObject(Object,Object,Object)
  nameWithType: LinqDataSourceView.DeleteDataObject(Object,Object,Object)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.DeleteDataObject(Object,Object,Object)
- uid: System.Web.UI.WebControls.LinqDataSourceView.DeleteObject(System.Object)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: DeleteObject(Object)
  nameWithType: LinqDataSourceView.DeleteObject(Object)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.DeleteObject(Object)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.LinqDataSourceView.Deleting
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: Deleting
  nameWithType: LinqDataSourceView.Deleting
  fullName: System.Web.UI.WebControls.LinqDataSourceView.Deleting
- uid: System.EventHandler{System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<LinqDataSourceDeleteEventArgs>
  nameWithType: EventHandler<LinqDataSourceDeleteEventArgs>
  fullName: System.EventHandler<System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs
    name: LinqDataSourceDeleteEventArgs
    nameWithType: LinqDataSourceDeleteEventArgs
    fullName: LinqDataSourceDeleteEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.UI.WebControls.LinqDataSourceView.DisposeContext(System.Object)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: DisposeContext(Object)
  nameWithType: LinqDataSourceView.DisposeContext(Object)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.DisposeContext(Object)
- uid: System.Web.UI.WebControls.LinqDataSourceView.EnableDelete
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: EnableDelete
  nameWithType: LinqDataSourceView.EnableDelete
  fullName: System.Web.UI.WebControls.LinqDataSourceView.EnableDelete
- uid: System.Web.UI.WebControls.LinqDataSourceView.EnableInsert
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: EnableInsert
  nameWithType: LinqDataSourceView.EnableInsert
  fullName: System.Web.UI.WebControls.LinqDataSourceView.EnableInsert
- uid: System.Web.UI.WebControls.LinqDataSourceView.EnableObjectTracking
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: EnableObjectTracking
  nameWithType: LinqDataSourceView.EnableObjectTracking
  fullName: System.Web.UI.WebControls.LinqDataSourceView.EnableObjectTracking
- uid: System.Web.UI.WebControls.LinqDataSourceView.EnableUpdate
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: EnableUpdate
  nameWithType: LinqDataSourceView.EnableUpdate
  fullName: System.Web.UI.WebControls.LinqDataSourceView.EnableUpdate
- uid: System.Web.UI.WebControls.LinqDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: ExecuteDelete(IDictionary,IDictionary)
  nameWithType: LinqDataSourceView.ExecuteDelete(IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.ExecuteDelete(IDictionary,IDictionary)
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Web.UI.WebControls.LinqDataSourceView.ExecuteInsert(System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: ExecuteInsert(IDictionary)
  nameWithType: LinqDataSourceView.ExecuteInsert(IDictionary)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.ExecuteInsert(IDictionary)
- uid: System.Web.UI.WebControls.LinqDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: ExecuteSelect(DataSourceSelectArguments)
  nameWithType: LinqDataSourceView.ExecuteSelect(DataSourceSelectArguments)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.ExecuteSelect(DataSourceSelectArguments)
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Web.UI.DataSourceSelectArguments
  parent: System.Web.UI
  isExternal: false
  name: DataSourceSelectArguments
  nameWithType: DataSourceSelectArguments
  fullName: System.Web.UI.DataSourceSelectArguments
- uid: System.Web.UI.WebControls.LinqDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: ExecuteUpdate(IDictionary,IDictionary,IDictionary)
  nameWithType: LinqDataSourceView.ExecuteUpdate(IDictionary,IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.ExecuteUpdate(IDictionary,IDictionary,IDictionary)
- uid: System.Web.UI.WebControls.LinqDataSourceView.GetSource(System.Web.UI.WebControls.QueryContext)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: GetSource(QueryContext)
  nameWithType: LinqDataSourceView.GetSource(QueryContext)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.GetSource(QueryContext)
- uid: System.Web.UI.WebControls.QueryContext
  parent: System.Web.UI.WebControls
  isExternal: false
  name: QueryContext
  nameWithType: QueryContext
  fullName: System.Web.UI.WebControls.QueryContext
- uid: System.Web.UI.WebControls.LinqDataSourceView.GetTableMemberInfo(System.Type)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: GetTableMemberInfo(Type)
  nameWithType: LinqDataSourceView.GetTableMemberInfo(Type)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.GetTableMemberInfo(Type)
- uid: System.Reflection.MemberInfo
  parent: System.Reflection
  isExternal: true
  name: MemberInfo
  nameWithType: MemberInfo
  fullName: System.Reflection.MemberInfo
- uid: System.Web.UI.WebControls.LinqDataSourceView.HandleValidationErrors(System.Collections.Generic.IDictionary{System.String,System.Exception},System.Web.UI.DataSourceOperation)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: HandleValidationErrors(IDictionary<String,Exception>,DataSourceOperation)
  nameWithType: LinqDataSourceView.HandleValidationErrors(IDictionary<String,Exception>,DataSourceOperation)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.HandleValidationErrors(IDictionary<String,Exception>,DataSourceOperation)
- uid: System.Collections.Generic.IDictionary{System.String,System.Exception}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,Exception>
  nameWithType: IDictionary<String,Exception>
  fullName: System.Collections.Generic.IDictionary<System.String,System.Exception>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,System.Exception>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: Exception
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.UI.WebControls.LinqDataSourceView.InsertDataObject(System.Object,System.Object,System.Object)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: InsertDataObject(Object,Object,Object)
  nameWithType: LinqDataSourceView.InsertDataObject(Object,Object,Object)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.InsertDataObject(Object,Object,Object)
- uid: System.Web.UI.WebControls.LinqDataSourceView.Inserted
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: Inserted
  nameWithType: LinqDataSourceView.Inserted
  fullName: System.Web.UI.WebControls.LinqDataSourceView.Inserted
- uid: System.Web.UI.WebControls.LinqDataSourceView.Inserting
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: Inserting
  nameWithType: LinqDataSourceView.Inserting
  fullName: System.Web.UI.WebControls.LinqDataSourceView.Inserting
- uid: System.EventHandler{System.Web.UI.WebControls.LinqDataSourceInsertEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<LinqDataSourceInsertEventArgs>
  nameWithType: EventHandler<LinqDataSourceInsertEventArgs>
  fullName: System.EventHandler<System.Web.UI.WebControls.LinqDataSourceInsertEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Web.UI.WebControls.LinqDataSourceInsertEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs
    name: LinqDataSourceInsertEventArgs
    nameWithType: LinqDataSourceInsertEventArgs
    fullName: LinqDataSourceInsertEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.UI.WebControls.LinqDataSourceView.InsertObject(System.Object)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: InsertObject(Object)
  nameWithType: LinqDataSourceView.InsertObject(Object)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.InsertObject(Object)
- uid: System.Web.UI.WebControls.LinqDataSourceView.OnContextCreated(System.Web.UI.WebControls.LinqDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: OnContextCreated(LinqDataSourceStatusEventArgs)
  nameWithType: LinqDataSourceView.OnContextCreated(LinqDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.OnContextCreated(LinqDataSourceStatusEventArgs)
- uid: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: LinqDataSourceStatusEventArgs
  nameWithType: LinqDataSourceStatusEventArgs
  fullName: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs
- uid: System.Web.UI.WebControls.LinqDataSourceView.OnContextCreating(System.Web.UI.WebControls.LinqDataSourceContextEventArgs)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: OnContextCreating(LinqDataSourceContextEventArgs)
  nameWithType: LinqDataSourceView.OnContextCreating(LinqDataSourceContextEventArgs)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.OnContextCreating(LinqDataSourceContextEventArgs)
- uid: System.Web.UI.WebControls.LinqDataSourceContextEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: LinqDataSourceContextEventArgs
  nameWithType: LinqDataSourceContextEventArgs
  fullName: System.Web.UI.WebControls.LinqDataSourceContextEventArgs
- uid: System.Web.UI.WebControls.LinqDataSourceView.OnContextDisposing(System.Web.UI.WebControls.LinqDataSourceDisposeEventArgs)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: OnContextDisposing(LinqDataSourceDisposeEventArgs)
  nameWithType: LinqDataSourceView.OnContextDisposing(LinqDataSourceDisposeEventArgs)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.OnContextDisposing(LinqDataSourceDisposeEventArgs)
- uid: System.Web.UI.WebControls.LinqDataSourceDisposeEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: LinqDataSourceDisposeEventArgs
  nameWithType: LinqDataSourceDisposeEventArgs
  fullName: System.Web.UI.WebControls.LinqDataSourceDisposeEventArgs
- uid: System.Web.UI.WebControls.LinqDataSourceView.OnDeleted(System.Web.UI.WebControls.LinqDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: OnDeleted(LinqDataSourceStatusEventArgs)
  nameWithType: LinqDataSourceView.OnDeleted(LinqDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.OnDeleted(LinqDataSourceStatusEventArgs)
- uid: System.Web.UI.WebControls.LinqDataSourceView.OnDeleting(System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: OnDeleting(LinqDataSourceDeleteEventArgs)
  nameWithType: LinqDataSourceView.OnDeleting(LinqDataSourceDeleteEventArgs)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.OnDeleting(LinqDataSourceDeleteEventArgs)
- uid: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: LinqDataSourceDeleteEventArgs
  nameWithType: LinqDataSourceDeleteEventArgs
  fullName: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs
- uid: System.Web.UI.WebControls.LinqDataSourceView.OnException(System.Web.DynamicData.DynamicValidatorEventArgs)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: OnException(DynamicValidatorEventArgs)
  nameWithType: LinqDataSourceView.OnException(DynamicValidatorEventArgs)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.OnException(DynamicValidatorEventArgs)
- uid: System.Web.DynamicData.DynamicValidatorEventArgs
  parent: System.Web.DynamicData
  isExternal: false
  name: DynamicValidatorEventArgs
  nameWithType: DynamicValidatorEventArgs
  fullName: System.Web.DynamicData.DynamicValidatorEventArgs
- uid: System.Web.UI.WebControls.LinqDataSourceView.OnInserted(System.Web.UI.WebControls.LinqDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: OnInserted(LinqDataSourceStatusEventArgs)
  nameWithType: LinqDataSourceView.OnInserted(LinqDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.OnInserted(LinqDataSourceStatusEventArgs)
- uid: System.Web.UI.WebControls.LinqDataSourceView.OnInserting(System.Web.UI.WebControls.LinqDataSourceInsertEventArgs)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: OnInserting(LinqDataSourceInsertEventArgs)
  nameWithType: LinqDataSourceView.OnInserting(LinqDataSourceInsertEventArgs)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.OnInserting(LinqDataSourceInsertEventArgs)
- uid: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: LinqDataSourceInsertEventArgs
  nameWithType: LinqDataSourceInsertEventArgs
  fullName: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs
- uid: System.Web.UI.WebControls.LinqDataSourceView.OnSelected(System.Web.UI.WebControls.LinqDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: OnSelected(LinqDataSourceStatusEventArgs)
  nameWithType: LinqDataSourceView.OnSelected(LinqDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.OnSelected(LinqDataSourceStatusEventArgs)
- uid: System.Web.UI.WebControls.LinqDataSourceView.OnSelecting(System.Web.UI.WebControls.LinqDataSourceSelectEventArgs)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: OnSelecting(LinqDataSourceSelectEventArgs)
  nameWithType: LinqDataSourceView.OnSelecting(LinqDataSourceSelectEventArgs)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.OnSelecting(LinqDataSourceSelectEventArgs)
- uid: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: LinqDataSourceSelectEventArgs
  nameWithType: LinqDataSourceSelectEventArgs
  fullName: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs
- uid: System.Web.UI.WebControls.LinqDataSourceView.OnUpdated(System.Web.UI.WebControls.LinqDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: OnUpdated(LinqDataSourceStatusEventArgs)
  nameWithType: LinqDataSourceView.OnUpdated(LinqDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.OnUpdated(LinqDataSourceStatusEventArgs)
- uid: System.Web.UI.WebControls.LinqDataSourceView.OnUpdating(System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: OnUpdating(LinqDataSourceUpdateEventArgs)
  nameWithType: LinqDataSourceView.OnUpdating(LinqDataSourceUpdateEventArgs)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.OnUpdating(LinqDataSourceUpdateEventArgs)
- uid: System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: LinqDataSourceUpdateEventArgs
  nameWithType: LinqDataSourceUpdateEventArgs
  fullName: System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs
- uid: System.Web.UI.WebControls.LinqDataSourceView.ResetDataObject(System.Object,System.Object)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: ResetDataObject(Object,Object)
  nameWithType: LinqDataSourceView.ResetDataObject(Object,Object)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.ResetDataObject(Object,Object)
- uid: System.Web.UI.WebControls.LinqDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: Select(DataSourceSelectArguments)
  nameWithType: LinqDataSourceView.Select(DataSourceSelectArguments)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.Select(DataSourceSelectArguments)
- uid: System.Web.UI.WebControls.LinqDataSourceView.Selected
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: Selected
  nameWithType: LinqDataSourceView.Selected
  fullName: System.Web.UI.WebControls.LinqDataSourceView.Selected
- uid: System.Web.UI.WebControls.LinqDataSourceView.Selecting
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: Selecting
  nameWithType: LinqDataSourceView.Selecting
  fullName: System.Web.UI.WebControls.LinqDataSourceView.Selecting
- uid: System.EventHandler{System.Web.UI.WebControls.LinqDataSourceSelectEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<LinqDataSourceSelectEventArgs>
  nameWithType: EventHandler<LinqDataSourceSelectEventArgs>
  fullName: System.EventHandler<System.Web.UI.WebControls.LinqDataSourceSelectEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Web.UI.WebControls.LinqDataSourceSelectEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs
    name: LinqDataSourceSelectEventArgs
    nameWithType: LinqDataSourceSelectEventArgs
    fullName: LinqDataSourceSelectEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.UI.WebControls.LinqDataSourceView.StoreOriginalValues(System.Collections.IList)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: StoreOriginalValues(IList)
  nameWithType: LinqDataSourceView.StoreOriginalValues(IList)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.StoreOriginalValues(IList)
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Web.UI.WebControls.LinqDataSourceView.StoreOriginalValuesInViewState
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: StoreOriginalValuesInViewState
  nameWithType: LinqDataSourceView.StoreOriginalValuesInViewState
  fullName: System.Web.UI.WebControls.LinqDataSourceView.StoreOriginalValuesInViewState
- uid: System.Web.UI.WebControls.LinqDataSourceView.TableName
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: TableName
  nameWithType: LinqDataSourceView.TableName
  fullName: System.Web.UI.WebControls.LinqDataSourceView.TableName
- uid: System.Web.UI.WebControls.LinqDataSourceView.Updated
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: Updated
  nameWithType: LinqDataSourceView.Updated
  fullName: System.Web.UI.WebControls.LinqDataSourceView.Updated
- uid: System.Web.UI.WebControls.LinqDataSourceView.UpdateDataObject(System.Object,System.Object,System.Object,System.Object)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: UpdateDataObject(Object,Object,Object,Object)
  nameWithType: LinqDataSourceView.UpdateDataObject(Object,Object,Object,Object)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.UpdateDataObject(Object,Object,Object,Object)
- uid: System.Web.UI.WebControls.LinqDataSourceView.UpdateObject(System.Object,System.Object)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: UpdateObject(Object,Object)
  nameWithType: LinqDataSourceView.UpdateObject(Object,Object)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.UpdateObject(Object,Object)
- uid: System.Web.UI.WebControls.LinqDataSourceView.Updating
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: Updating
  nameWithType: LinqDataSourceView.Updating
  fullName: System.Web.UI.WebControls.LinqDataSourceView.Updating
- uid: System.EventHandler{System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<LinqDataSourceUpdateEventArgs>
  nameWithType: EventHandler<LinqDataSourceUpdateEventArgs>
  fullName: System.EventHandler<System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs
    name: LinqDataSourceUpdateEventArgs
    nameWithType: LinqDataSourceUpdateEventArgs
    fullName: LinqDataSourceUpdateEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.UI.WebControls.LinqDataSourceView.ValidateContextType(System.Type,System.Boolean)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: ValidateContextType(Type,Boolean)
  nameWithType: LinqDataSourceView.ValidateContextType(Type,Boolean)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.ValidateContextType(Type,Boolean)
- uid: System.Web.UI.WebControls.LinqDataSourceView.ValidateDeleteSupported(System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: ValidateDeleteSupported(IDictionary,IDictionary)
  nameWithType: LinqDataSourceView.ValidateDeleteSupported(IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.ValidateDeleteSupported(IDictionary,IDictionary)
- uid: System.Web.UI.WebControls.LinqDataSourceView.ValidateEditSupported
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: ValidateEditSupported()
  nameWithType: LinqDataSourceView.ValidateEditSupported()
  fullName: System.Web.UI.WebControls.LinqDataSourceView.ValidateEditSupported()
- uid: System.Web.UI.WebControls.LinqDataSourceView.ValidateInsertSupported(System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: ValidateInsertSupported(IDictionary)
  nameWithType: LinqDataSourceView.ValidateInsertSupported(IDictionary)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.ValidateInsertSupported(IDictionary)
- uid: System.Web.UI.WebControls.LinqDataSourceView.ValidateTableType(System.Type,System.Boolean)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: ValidateTableType(Type,Boolean)
  nameWithType: LinqDataSourceView.ValidateTableType(Type,Boolean)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.ValidateTableType(Type,Boolean)
- uid: System.Web.UI.WebControls.LinqDataSourceView.ValidateUpdateSupported(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: ValidateUpdateSupported(IDictionary,IDictionary,IDictionary)
  nameWithType: LinqDataSourceView.ValidateUpdateSupported(IDictionary,IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.LinqDataSourceView.ValidateUpdateSupported(IDictionary,IDictionary,IDictionary)
- uid: System.Web.UI.WebControls.LinqDataSourceView.#ctor*
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: LinqDataSourceView
  nameWithType: LinqDataSourceView.LinqDataSourceView
- uid: System.Web.UI.WebControls.LinqDataSourceView.CanDelete*
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: CanDelete
  nameWithType: LinqDataSourceView.CanDelete
- uid: System.Web.UI.WebControls.LinqDataSourceView.CanInsert*
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: CanInsert
  nameWithType: LinqDataSourceView.CanInsert
- uid: System.Web.UI.WebControls.LinqDataSourceView.CanPage*
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: CanPage
  nameWithType: LinqDataSourceView.CanPage
- uid: System.Web.UI.WebControls.LinqDataSourceView.CanRetrieveTotalRowCount*
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: CanRetrieveTotalRowCount
  nameWithType: LinqDataSourceView.CanRetrieveTotalRowCount
- uid: System.Web.UI.WebControls.LinqDataSourceView.CanSort*
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: CanSort
  nameWithType: LinqDataSourceView.CanSort
- uid: System.Web.UI.WebControls.LinqDataSourceView.CanUpdate*
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: CanUpdate
  nameWithType: LinqDataSourceView.CanUpdate
- uid: System.Web.UI.WebControls.LinqDataSourceView.ContextType*
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: ContextType
  nameWithType: LinqDataSourceView.ContextType
- uid: System.Web.UI.WebControls.LinqDataSourceView.ContextTypeName*
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: ContextTypeName
  nameWithType: LinqDataSourceView.ContextTypeName
- uid: System.Web.UI.WebControls.LinqDataSourceView.CreateContext*
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: CreateContext
  nameWithType: LinqDataSourceView.CreateContext
- uid: System.Web.UI.WebControls.LinqDataSourceView.DeleteDataObject*
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: DeleteDataObject
  nameWithType: LinqDataSourceView.DeleteDataObject
- uid: System.Web.UI.WebControls.LinqDataSourceView.DeleteObject*
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: DeleteObject
  nameWithType: LinqDataSourceView.DeleteObject
- uid: System.Web.UI.WebControls.LinqDataSourceView.DisposeContext*
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: DisposeContext
  nameWithType: LinqDataSourceView.DisposeContext
- uid: System.Web.UI.WebControls.LinqDataSourceView.EnableDelete*
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: EnableDelete
  nameWithType: LinqDataSourceView.EnableDelete
- uid: System.Web.UI.WebControls.LinqDataSourceView.EnableInsert*
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: EnableInsert
  nameWithType: LinqDataSourceView.EnableInsert
- uid: System.Web.UI.WebControls.LinqDataSourceView.EnableObjectTracking*
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: EnableObjectTracking
  nameWithType: LinqDataSourceView.EnableObjectTracking
- uid: System.Web.UI.WebControls.LinqDataSourceView.EnableUpdate*
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: EnableUpdate
  nameWithType: LinqDataSourceView.EnableUpdate
- uid: System.Web.UI.WebControls.LinqDataSourceView.ExecuteDelete*
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: ExecuteDelete
  nameWithType: LinqDataSourceView.ExecuteDelete
- uid: System.Web.UI.WebControls.LinqDataSourceView.ExecuteInsert*
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: ExecuteInsert
  nameWithType: LinqDataSourceView.ExecuteInsert
- uid: System.Web.UI.WebControls.LinqDataSourceView.ExecuteSelect*
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: ExecuteSelect
  nameWithType: LinqDataSourceView.ExecuteSelect
- uid: System.Web.UI.WebControls.LinqDataSourceView.ExecuteUpdate*
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: ExecuteUpdate
  nameWithType: LinqDataSourceView.ExecuteUpdate
- uid: System.Web.UI.WebControls.LinqDataSourceView.GetSource*
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: GetSource
  nameWithType: LinqDataSourceView.GetSource
- uid: System.Web.UI.WebControls.LinqDataSourceView.GetTableMemberInfo*
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: GetTableMemberInfo
  nameWithType: LinqDataSourceView.GetTableMemberInfo
- uid: System.Web.UI.WebControls.LinqDataSourceView.HandleValidationErrors*
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: HandleValidationErrors
  nameWithType: LinqDataSourceView.HandleValidationErrors
- uid: System.Web.UI.WebControls.LinqDataSourceView.InsertDataObject*
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: InsertDataObject
  nameWithType: LinqDataSourceView.InsertDataObject
- uid: System.Web.UI.WebControls.LinqDataSourceView.InsertObject*
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: InsertObject
  nameWithType: LinqDataSourceView.InsertObject
- uid: System.Web.UI.WebControls.LinqDataSourceView.OnContextCreated*
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: OnContextCreated
  nameWithType: LinqDataSourceView.OnContextCreated
- uid: System.Web.UI.WebControls.LinqDataSourceView.OnContextCreating*
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: OnContextCreating
  nameWithType: LinqDataSourceView.OnContextCreating
- uid: System.Web.UI.WebControls.LinqDataSourceView.OnContextDisposing*
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: OnContextDisposing
  nameWithType: LinqDataSourceView.OnContextDisposing
- uid: System.Web.UI.WebControls.LinqDataSourceView.OnDeleted*
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: OnDeleted
  nameWithType: LinqDataSourceView.OnDeleted
- uid: System.Web.UI.WebControls.LinqDataSourceView.OnDeleting*
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: OnDeleting
  nameWithType: LinqDataSourceView.OnDeleting
- uid: System.Web.UI.WebControls.LinqDataSourceView.OnException*
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: OnException
  nameWithType: LinqDataSourceView.OnException
- uid: System.Web.UI.WebControls.LinqDataSourceView.OnInserted*
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: OnInserted
  nameWithType: LinqDataSourceView.OnInserted
- uid: System.Web.UI.WebControls.LinqDataSourceView.OnInserting*
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: OnInserting
  nameWithType: LinqDataSourceView.OnInserting
- uid: System.Web.UI.WebControls.LinqDataSourceView.OnSelected*
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: OnSelected
  nameWithType: LinqDataSourceView.OnSelected
- uid: System.Web.UI.WebControls.LinqDataSourceView.OnSelecting*
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: OnSelecting
  nameWithType: LinqDataSourceView.OnSelecting
- uid: System.Web.UI.WebControls.LinqDataSourceView.OnUpdated*
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: OnUpdated
  nameWithType: LinqDataSourceView.OnUpdated
- uid: System.Web.UI.WebControls.LinqDataSourceView.OnUpdating*
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: OnUpdating
  nameWithType: LinqDataSourceView.OnUpdating
- uid: System.Web.UI.WebControls.LinqDataSourceView.ResetDataObject*
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: ResetDataObject
  nameWithType: LinqDataSourceView.ResetDataObject
- uid: System.Web.UI.WebControls.LinqDataSourceView.Select*
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: Select
  nameWithType: LinqDataSourceView.Select
- uid: System.Web.UI.WebControls.LinqDataSourceView.StoreOriginalValues*
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: StoreOriginalValues
  nameWithType: LinqDataSourceView.StoreOriginalValues
- uid: System.Web.UI.WebControls.LinqDataSourceView.StoreOriginalValuesInViewState*
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: StoreOriginalValuesInViewState
  nameWithType: LinqDataSourceView.StoreOriginalValuesInViewState
- uid: System.Web.UI.WebControls.LinqDataSourceView.TableName*
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: TableName
  nameWithType: LinqDataSourceView.TableName
- uid: System.Web.UI.WebControls.LinqDataSourceView.UpdateDataObject*
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: UpdateDataObject
  nameWithType: LinqDataSourceView.UpdateDataObject
- uid: System.Web.UI.WebControls.LinqDataSourceView.UpdateObject*
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: UpdateObject
  nameWithType: LinqDataSourceView.UpdateObject
- uid: System.Web.UI.WebControls.LinqDataSourceView.ValidateContextType*
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: ValidateContextType
  nameWithType: LinqDataSourceView.ValidateContextType
- uid: System.Web.UI.WebControls.LinqDataSourceView.ValidateDeleteSupported*
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: ValidateDeleteSupported
  nameWithType: LinqDataSourceView.ValidateDeleteSupported
- uid: System.Web.UI.WebControls.LinqDataSourceView.ValidateEditSupported*
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: ValidateEditSupported
  nameWithType: LinqDataSourceView.ValidateEditSupported
- uid: System.Web.UI.WebControls.LinqDataSourceView.ValidateInsertSupported*
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: ValidateInsertSupported
  nameWithType: LinqDataSourceView.ValidateInsertSupported
- uid: System.Web.UI.WebControls.LinqDataSourceView.ValidateTableType*
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: ValidateTableType
  nameWithType: LinqDataSourceView.ValidateTableType
- uid: System.Web.UI.WebControls.LinqDataSourceView.ValidateUpdateSupported*
  parent: System.Web.UI.WebControls.LinqDataSourceView
  isExternal: false
  name: ValidateUpdateSupported
  nameWithType: LinqDataSourceView.ValidateUpdateSupported
