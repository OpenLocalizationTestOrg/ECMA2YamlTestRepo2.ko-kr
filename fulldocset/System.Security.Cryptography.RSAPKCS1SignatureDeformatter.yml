### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.RSAPKCS1SignatureDeformatter
  id: RSAPKCS1SignatureDeformatter
  children:
  - System.Security.Cryptography.RSAPKCS1SignatureDeformatter.#ctor
  - System.Security.Cryptography.RSAPKCS1SignatureDeformatter.#ctor(System.Security.Cryptography.AsymmetricAlgorithm)
  - System.Security.Cryptography.RSAPKCS1SignatureDeformatter.SetHashAlgorithm(System.String)
  - System.Security.Cryptography.RSAPKCS1SignatureDeformatter.SetKey(System.Security.Cryptography.AsymmetricAlgorithm)
  - System.Security.Cryptography.RSAPKCS1SignatureDeformatter.VerifySignature(System.Byte[],System.Byte[])
  langs:
  - csharp
  name: RSAPKCS1SignatureDeformatter
  nameWithType: RSAPKCS1SignatureDeformatter
  fullName: System.Security.Cryptography.RSAPKCS1SignatureDeformatter
  type: Class
  summary: '확인 된 <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref> PKCS #1 버전 1.5 서명을 합니다.'
  remarks: "이 클래스는 사용 하 여 디지털 서명을 확인 하는 데 사용 된 <xref:System.Security.Cryptography.RSA>알고리즘.</xref:System.Security.Cryptography.RSA>       사용 하 여 <xref:System.Security.Cryptography.RSAPKCS1SignatureFormatter>와 디지털 서명을 생성 하는 <xref:System.Security.Cryptography.RSA>알고리즘.</xref:System.Security.Cryptography.RSA> </xref:System.Security.Cryptography.RSAPKCS1SignatureFormatter>"
  example:
  - "The following example demonstrates how to use the <xref:System.Security.Cryptography.RSAPKCS1SignatureDeformatter.VerifySignature%2A> method to verify a signature.  \n  \n [!code-vb[System.Security.Cryptography.RSAPKCS1SignatureDeFormatterExample#1](~/add/codesnippet/visualbasic/t-system.security.crypto_97_1.vb)]\n [!code-cs[System.Security.Cryptography.RSAPKCS1SignatureDeFormatterExample#1](~/add/codesnippet/csharp/t-system.security.crypto_97_1.cs)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class RSAPKCS1SignatureDeformatter : System.Security.Cryptography.AsymmetricSignatureDeformatter
  inheritance:
  - System.Object
  - System.Security.Cryptography.AsymmetricSignatureDeformatter
  implements: []
  inheritedMembers:
  - System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature(System.Security.Cryptography.HashAlgorithm,System.Byte[])
  platform:
  - net462
- uid: System.Security.Cryptography.RSAPKCS1SignatureDeformatter.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.RSAPKCS1SignatureDeformatter
  langs:
  - csharp
  name: RSAPKCS1SignatureDeformatter()
  nameWithType: RSAPKCS1SignatureDeformatter.RSAPKCS1SignatureDeformatter()
  fullName: System.Security.Cryptography.RSAPKCS1SignatureDeformatter.RSAPKCS1SignatureDeformatter()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Security.Cryptography.RSAPKCS1SignatureDeformatter&quot;> </xref> 클래스입니다."
  remarks: "<xref:System.Security.Cryptography.RSAPKCS1SignatureDeformatter.SetKey%2A> <xref:System.Security.Cryptography.RSAPKCS1SignatureDeformatter.SetHashAlgorithm%2A> <xref:System.Security.Cryptography.RSAPKCS1SignatureDeformatter.VerifySignature%2A>.</xref:System.Security.Cryptography.RSAPKCS1SignatureDeformatter.VerifySignature%2A> 를 호출 하기 전에 키 및 해시 알고리즘을 설정 하</xref:System.Security.Cryptography.RSAPKCS1SignatureDeformatter.SetHashAlgorithm%2A> 고</xref:System.Security.Cryptography.RSAPKCS1SignatureDeformatter.SetKey%2A> 사용 하 여"
  syntax:
    content: public RSAPKCS1SignatureDeformatter ();
    parameters: []
  overload: System.Security.Cryptography.RSAPKCS1SignatureDeformatter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RSAPKCS1SignatureDeformatter.#ctor(System.Security.Cryptography.AsymmetricAlgorithm)
  id: '#ctor(System.Security.Cryptography.AsymmetricAlgorithm)'
  parent: System.Security.Cryptography.RSAPKCS1SignatureDeformatter
  langs:
  - csharp
  name: RSAPKCS1SignatureDeformatter(AsymmetricAlgorithm)
  nameWithType: RSAPKCS1SignatureDeformatter.RSAPKCS1SignatureDeformatter(AsymmetricAlgorithm)
  fullName: System.Security.Cryptography.RSAPKCS1SignatureDeformatter.RSAPKCS1SignatureDeformatter(AsymmetricAlgorithm)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Security.Cryptography.RSAPKCS1SignatureDeformatter&quot;> </xref> 지정된 된 키를 사용 하 여 클래스입니다."
  remarks: "<xref:System.Security.Cryptography.RSAPKCS1SignatureDeformatter.SetHashAlgorithm%2A> <xref:System.Security.Cryptography.RSAPKCS1SignatureDeformatter.VerifySignature%2A>.</xref:System.Security.Cryptography.RSAPKCS1SignatureDeformatter.VerifySignature%2A> 를 호출 하기 전에 해시 알고리즘을 설정</xref:System.Security.Cryptography.RSAPKCS1SignatureDeformatter.SetHashAlgorithm%2A> 하는 데"
  syntax:
    content: public RSAPKCS1SignatureDeformatter (System.Security.Cryptography.AsymmetricAlgorithm key);
    parameters:
    - id: key
      type: System.Security.Cryptography.AsymmetricAlgorithm
      description: "인스턴스 <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref> 공개 키를 보유 하는 합니다."
  overload: System.Security.Cryptography.RSAPKCS1SignatureDeformatter.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>key </code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.RSAPKCS1SignatureDeformatter.SetHashAlgorithm(System.String)
  id: SetHashAlgorithm(System.String)
  parent: System.Security.Cryptography.RSAPKCS1SignatureDeformatter
  langs:
  - csharp
  name: SetHashAlgorithm(String)
  nameWithType: RSAPKCS1SignatureDeformatter.SetHashAlgorithm(String)
  fullName: System.Security.Cryptography.RSAPKCS1SignatureDeformatter.SetHashAlgorithm(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "서명을 확인 하는 데 사용할 해시 알고리즘을 설정 합니다."
  remarks: "<xref:System.Security.Cryptography.RSAPKCS1SignatureDeformatter.VerifySignature%2A>.</xref:System.Security.Cryptography.RSAPKCS1SignatureDeformatter.VerifySignature%2A> 를 호출 하기 전에 해시 알고리즘을 설정 해야 합니다."
  syntax:
    content: public override void SetHashAlgorithm (string strName);
    parameters:
    - id: strName
      type: System.String
      description: "서명을 확인 하는 데 사용할 해시 알고리즘의 이름입니다."
  overload: System.Security.Cryptography.RSAPKCS1SignatureDeformatter.SetHashAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RSAPKCS1SignatureDeformatter.SetKey(System.Security.Cryptography.AsymmetricAlgorithm)
  id: SetKey(System.Security.Cryptography.AsymmetricAlgorithm)
  parent: System.Security.Cryptography.RSAPKCS1SignatureDeformatter
  langs:
  - csharp
  name: SetKey(AsymmetricAlgorithm)
  nameWithType: RSAPKCS1SignatureDeformatter.SetKey(AsymmetricAlgorithm)
  fullName: System.Security.Cryptography.RSAPKCS1SignatureDeformatter.SetKey(AsymmetricAlgorithm)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "서명 확인에 사용할 공개 키를 설정 합니다."
  remarks: "<xref:System.Security.Cryptography.RSAPKCS1SignatureDeformatter.VerifySignature%2A>.</xref:System.Security.Cryptography.RSAPKCS1SignatureDeformatter.VerifySignature%2A> 를 호출 하기 전에 키를 설정 해야 합니다."
  syntax:
    content: public override void SetKey (System.Security.Cryptography.AsymmetricAlgorithm key);
    parameters:
    - id: key
      type: System.Security.Cryptography.AsymmetricAlgorithm
      description: "인스턴스 <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref> 공개 키를 보유 하는 합니다."
  overload: System.Security.Cryptography.RSAPKCS1SignatureDeformatter.SetKey*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>key </code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.RSAPKCS1SignatureDeformatter.VerifySignature(System.Byte[],System.Byte[])
  id: VerifySignature(System.Byte[],System.Byte[])
  parent: System.Security.Cryptography.RSAPKCS1SignatureDeformatter
  langs:
  - csharp
  name: VerifySignature(Byte[],Byte[])
  nameWithType: RSAPKCS1SignatureDeformatter.VerifySignature(Byte[],Byte[])
  fullName: System.Security.Cryptography.RSAPKCS1SignatureDeformatter.VerifySignature(Byte[],Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "확인 된 <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref> 지정된 된 데이터에 대 한 PKCS&#1; 서명을 합니다."
  remarks: "이 메서드를 호출 하기 전에 키와 해시 알고리즘을 지정 해야 합니다."
  example:
  - "The following example demonstrates how to use the VerifySignature method to verify a signature.  \n  \n [!code-vb[System.Security.Cryptography.RSAPKCS1SignatureDeFormatterExample#1](~/add/codesnippet/visualbasic/f1fc4b55-7e2f-48a8-96a4-_1.vb)]\n [!code-cs[System.Security.Cryptography.RSAPKCS1SignatureDeFormatterExample#1](~/add/codesnippet/csharp/f1fc4b55-7e2f-48a8-96a4-_1.cs)]"
  syntax:
    content: public override bool VerifySignature (byte[] rgbHash, byte[] rgbSignature);
    parameters:
    - id: rgbHash
      type: System.Byte[]
      description: "로 서명 된 데이터는 `rgbSignature`합니다."
    - id: rgbSignature
      type: System.Byte[]
      description: "서명을 대 한 확인할 `rgbHash`합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우 <code> rgbSignature </code> 에 지정 된 해시 알고리즘 및 키를 사용 하 여 계산 된 서명과 일치 <code> rgbHash </code>, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Security.Cryptography.RSAPKCS1SignatureDeformatter.VerifySignature*
  exceptions:
  - type: System.Security.Cryptography.CryptographicUnexpectedOperationException
    commentId: T:System.Security.Cryptography.CryptographicUnexpectedOperationException
    description: "The key is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -또는-해시 알고리즘은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rgbHash</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       The <code>rgbSignature</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Security.Cryptography.AsymmetricSignatureDeformatter
  isExternal: false
  name: System.Security.Cryptography.AsymmetricSignatureDeformatter
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Cryptography.CryptographicUnexpectedOperationException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicUnexpectedOperationException
  nameWithType: CryptographicUnexpectedOperationException
  fullName: System.Security.Cryptography.CryptographicUnexpectedOperationException
- uid: System.Security.Cryptography.RSAPKCS1SignatureDeformatter.#ctor
  parent: System.Security.Cryptography.RSAPKCS1SignatureDeformatter
  isExternal: false
  name: RSAPKCS1SignatureDeformatter()
  nameWithType: RSAPKCS1SignatureDeformatter.RSAPKCS1SignatureDeformatter()
  fullName: System.Security.Cryptography.RSAPKCS1SignatureDeformatter.RSAPKCS1SignatureDeformatter()
- uid: System.Security.Cryptography.RSAPKCS1SignatureDeformatter.#ctor(System.Security.Cryptography.AsymmetricAlgorithm)
  parent: System.Security.Cryptography.RSAPKCS1SignatureDeformatter
  isExternal: false
  name: RSAPKCS1SignatureDeformatter(AsymmetricAlgorithm)
  nameWithType: RSAPKCS1SignatureDeformatter.RSAPKCS1SignatureDeformatter(AsymmetricAlgorithm)
  fullName: System.Security.Cryptography.RSAPKCS1SignatureDeformatter.RSAPKCS1SignatureDeformatter(AsymmetricAlgorithm)
- uid: System.Security.Cryptography.AsymmetricAlgorithm
  parent: System.Security.Cryptography
  isExternal: false
  name: AsymmetricAlgorithm
  nameWithType: AsymmetricAlgorithm
  fullName: System.Security.Cryptography.AsymmetricAlgorithm
- uid: System.Security.Cryptography.RSAPKCS1SignatureDeformatter.SetHashAlgorithm(System.String)
  parent: System.Security.Cryptography.RSAPKCS1SignatureDeformatter
  isExternal: false
  name: SetHashAlgorithm(String)
  nameWithType: RSAPKCS1SignatureDeformatter.SetHashAlgorithm(String)
  fullName: System.Security.Cryptography.RSAPKCS1SignatureDeformatter.SetHashAlgorithm(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.RSAPKCS1SignatureDeformatter.SetKey(System.Security.Cryptography.AsymmetricAlgorithm)
  parent: System.Security.Cryptography.RSAPKCS1SignatureDeformatter
  isExternal: false
  name: SetKey(AsymmetricAlgorithm)
  nameWithType: RSAPKCS1SignatureDeformatter.SetKey(AsymmetricAlgorithm)
  fullName: System.Security.Cryptography.RSAPKCS1SignatureDeformatter.SetKey(AsymmetricAlgorithm)
- uid: System.Security.Cryptography.RSAPKCS1SignatureDeformatter.VerifySignature(System.Byte[],System.Byte[])
  parent: System.Security.Cryptography.RSAPKCS1SignatureDeformatter
  isExternal: false
  name: VerifySignature(Byte[],Byte[])
  nameWithType: RSAPKCS1SignatureDeformatter.VerifySignature(Byte[],Byte[])
  fullName: System.Security.Cryptography.RSAPKCS1SignatureDeformatter.VerifySignature(Byte[],Byte[])
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.RSAPKCS1SignatureDeformatter.#ctor*
  parent: System.Security.Cryptography.RSAPKCS1SignatureDeformatter
  isExternal: false
  name: RSAPKCS1SignatureDeformatter
  nameWithType: RSAPKCS1SignatureDeformatter.RSAPKCS1SignatureDeformatter
- uid: System.Security.Cryptography.RSAPKCS1SignatureDeformatter.SetHashAlgorithm*
  parent: System.Security.Cryptography.RSAPKCS1SignatureDeformatter
  isExternal: false
  name: SetHashAlgorithm
  nameWithType: RSAPKCS1SignatureDeformatter.SetHashAlgorithm
- uid: System.Security.Cryptography.RSAPKCS1SignatureDeformatter.SetKey*
  parent: System.Security.Cryptography.RSAPKCS1SignatureDeformatter
  isExternal: false
  name: SetKey
  nameWithType: RSAPKCS1SignatureDeformatter.SetKey
- uid: System.Security.Cryptography.RSAPKCS1SignatureDeformatter.VerifySignature*
  parent: System.Security.Cryptography.RSAPKCS1SignatureDeformatter
  isExternal: false
  name: VerifySignature
  nameWithType: RSAPKCS1SignatureDeformatter.VerifySignature
