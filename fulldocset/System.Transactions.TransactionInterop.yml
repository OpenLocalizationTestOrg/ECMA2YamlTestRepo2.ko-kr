### YamlMime:ManagedReference
items:
- uid: System.Transactions.TransactionInterop
  id: TransactionInterop
  children:
  - System.Transactions.TransactionInterop.GetDtcTransaction(System.Transactions.Transaction)
  - System.Transactions.TransactionInterop.GetExportCookie(System.Transactions.Transaction,System.Byte[])
  - System.Transactions.TransactionInterop.GetTransactionFromDtcTransaction(System.Transactions.IDtcTransaction)
  - System.Transactions.TransactionInterop.GetTransactionFromExportCookie(System.Byte[])
  - System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken(System.Byte[])
  - System.Transactions.TransactionInterop.GetTransmitterPropagationToken(System.Transactions.Transaction)
  - System.Transactions.TransactionInterop.GetWhereabouts
  - System.Transactions.TransactionInterop.PromoterTypeDtc
  langs:
  - csharp
  name: TransactionInterop
  nameWithType: TransactionInterop
  fullName: System.Transactions.TransactionInterop
  type: Class
  summary: "간의 상호 작용을 용이 하 게 <xref href=&quot;System.Transactions&quot;> </xref> 및 MSDTC, COM + 상호 작용할 수 이전에 작성 된 구성 요소 또는 <xref href=&quot;System.EnterpriseServices&quot;> </xref>합니다. 이 클래스는 상속 될 수 없습니다."
  remarks: "이 클래스는 트랜잭션 전파에 대 한 메서드를 제공합니다. 이 프로세스의 작동 방식에 대 한 자세한 내용은 참조 하십시오. [트랜잭션 전파](http://msdn.microsoft.com/library/default.asp?url=/library/cossdk/html/b09541e6-4baf-4e37-b879-62884fbb0969.asp)합니다.       이 클래스에서 제공 하는 메서드를 사용 하 여 두 가지 유형의 트랜잭션 전파 내보내기/가져오기 (밀어 넣기 모델) 및 전송기/수신기 (끌어오기 모델)에 참여할 수 있습니다.       내보내기/가져오기 (밀어 넣기 모델) 전파 1 다음이 단계를 포함 됩니다.  원격 컴퓨터에는 &quot;위치&quot; 해당 컴퓨터의 트랜잭션 관리자의 호출 하 여 가져올는 <xref:System.Transactions.TransactionInterop.GetWhereabouts%2A>메서드.</xref:System.Transactions.TransactionInterop.GetWhereabouts%2A> 그런 다음이 부분의 사용 시 클라이언트 컴퓨터에 대 한 정보를 캐시할 수 있습니다.      2.  3 기본 메서드를 사용 하 여 클라이언트 컴퓨터에 위치를 포함 하는 데이터를 보냅니다.  클라이언트 컴퓨터의 whereabouts를 사용 하 여 트랜잭션이 원격 컴퓨터에 &quot;export&quot;를 트랜잭션 &quot;쿠키&quot;를 생성 합니다.  호출 하 여 이렇게 <xref:System.Transactions.TransactionInterop.GetExportCookie%2A>에서 원격 컴퓨터의 위치를 전달 합니다.</xref:System.Transactions.TransactionInterop.GetExportCookie%2A>      4.  5 기본 메서드를 사용 하 여 원격 컴퓨터를 &quot;쿠키&quot; 트랜잭션이 포함 된 데이터를 보냅니다.  원격 컴퓨터를 사용 하 여 트랜잭션 &quot;쿠키&quot;를 호출 하 여 클라이언트 트랜잭션의 복제본 가져옵니다는 <xref:System.Transactions.TransactionInterop.GetTransactionFromExportCookie%2A>메서드.</xref:System.Transactions.TransactionInterop.GetTransactionFromExportCookie%2A>      6.  원격 컴퓨터에는 <xref:System.Transactions.Transaction.EnlistVolatile%2A>의 <xref:System.Transactions.Transaction>클래스</xref:System.Transactions.Transaction> 또는 <xref:System.Transactions.Transaction.EnlistDurable%2A>메서드</xref:System.Transactions.Transaction.EnlistDurable%2A> </xref:System.Transactions.Transaction.EnlistVolatile%2A> 를 사용 하 여 리소스 관리자 참여에서 복제 트랜잭션을 사용합니다       다음 단계를 (끌어오기 모델) 전송기/수신기 전파 <xref:System.Transactions.TransactionInterop.GetTransmitterPropagationToken%2A>를 호출 하 여 해당 &quot;전파 토큰&quot; 생성는 트랜잭션을 사용 하 여 클라이언트 컴퓨터에서-&quot;전파 토큰&quot;을 사용 하 여 &quot;전파 토큰&quot; 트랜잭션의-기본 메서드를 사용 하 여 원격 컴퓨터에서 원격 컴퓨터를 포함 하는 데이터 보내기,-클라이언트의 복제본 가져옵니다 <xref:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken%2A>The 전송기/수신기 모델을 호출 하 여 트랜잭션에 트랜잭션 토큰 원격 컴퓨터에 전송 되는 시나리오에 더 나은 성능을 제공 을 원격 컴퓨터에서 사용할 수 없다는 트랜잭션을 가져올 수 있지만.</xref:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken%2A> </xref:System.Transactions.TransactionInterop.GetTransmitterPropagationToken%2A>  트랜잭션이까지 전파 되지 않으므로 이것이 <xref:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken%2A>호출 됩니다.</xref:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken%2A> 또 다른 이점은 내보내기 쿠키 whereabouts를 제공 하는 컴퓨터에만 사용할 수 있지만 모든 원격 컴퓨터에 전파 토큰을 받을 수 있는지입니다.       그러나 유의 원격 트랜잭션 관리자의 whereabouts 전파 토큰에 캡슐화 된 내보내기/가져오기 모델에서 해당 트랜잭션 쿠키 보다 커집니다.       **하지만 참고** 이 형식을 사용 하 여 <xref:System.Security.Permissions.SecurityAction>신뢰할 수 없는 코드에서 호출 되 고 하지 못하도록; 직접 실행 호출자만 보유 하 고 필요는 `FullTrust` 사용 권한 집합입니다.</xref:System.Security.Permissions.SecurityAction>"
  syntax:
    content: public static class TransactionInterop
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Transactions.TransactionInterop.GetDtcTransaction(System.Transactions.Transaction)
  id: GetDtcTransaction(System.Transactions.Transaction)
  parent: System.Transactions.TransactionInterop
  langs:
  - csharp
  name: GetDtcTransaction(Transaction)
  nameWithType: TransactionInterop.GetDtcTransaction(Transaction)
  fullName: System.Transactions.TransactionInterop.GetDtcTransaction(Transaction)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "가져옵니다는 <xref href=&quot;System.Transactions.IDtcTransaction&quot;> </xref> 나타내는 인스턴스는 <xref href=&quot;System.Transactions.Transaction&quot;> </xref>합니다."
  syntax:
    content: public static System.Transactions.IDtcTransaction GetDtcTransaction (System.Transactions.Transaction transaction);
    parameters:
    - id: transaction
      type: System.Transactions.Transaction
      description: "A <xref href=&quot;System.Transactions.Transaction&quot;> </xref> 인스턴스를 마샬링할 수 있습니다."
    return:
      type: System.Transactions.IDtcTransaction
      description: "<xref href=&quot;System.Transactions.IDtcTransaction&quot;> </xref> 나타내는 인스턴스는 <xref href=&quot;System.Transactions.Transaction&quot;> </xref>합니다.  <xref href=&quot;System.Transactions.IDtcTransaction&quot;> </xref> 인스턴스는 관리 되지 않는 형식으로 호환 [ITransaction](http://msdn.microsoft.com/library/default.asp?url=/library/cossdk/html/d40264be-f9b2-4044-aac6-84b43e5be666.asp) 에 사용 되는 MSDTC의 관리 되는 양식으로 <xref href=&quot;System.EnterpriseServices.ITransaction&quot;> </xref> 에서 사용 하는 <xref href=&quot;System.EnterpriseServices&quot;> </xref>합니다."
  overload: System.Transactions.TransactionInterop.GetDtcTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionInterop.GetExportCookie(System.Transactions.Transaction,System.Byte[])
  id: GetExportCookie(System.Transactions.Transaction,System.Byte[])
  parent: System.Transactions.TransactionInterop
  langs:
  - csharp
  name: GetExportCookie(Transaction,Byte[])
  nameWithType: TransactionInterop.GetExportCookie(Transaction,Byte[])
  fullName: System.Transactions.TransactionInterop.GetExportCookie(Transaction,Byte[])
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "트랜잭션 개체를 내보내기 트랜잭션 쿠키로 변형 합니다."
  remarks: "트랜잭션을 내보내려는 경우이 메서드를 호출 합니다. `transaction` 전달 되는 방향으로 표시는 트랜잭션 쿠키로 마샬링됩니다. 그런 다음 대상 프로세스에 트랜잭션 쿠키를 보낼 수 있습니다. 프로세스 또는 시스템 간에 트랜잭션을 전파할 라고 합니다. 전파는 대상 로컬 트랜잭션이 있는 밀어넣기됩니다 밀어 넣기 모델 것으로 간주 됩니다.  따라서에 포함 된 정보 `whereabouts` 대상 트랜잭션 관리자에 설명 합니다.       다양 한 전파 모델에 대 한 자세한 내용은 <xref:System.Transactions.TransactionInterop>클래스</xref:System.Transactions.TransactionInterop> 의 설명 섹션을 참조 하십시오."
  syntax:
    content: public static byte[] GetExportCookie (System.Transactions.Transaction transaction, byte[] whereabouts);
    parameters:
    - id: transaction
      type: System.Transactions.Transaction
      description: "<xref href=&quot;System.Transactions.Transaction&quot;> </xref> 마샬링해야 하는 개체입니다."
    - id: whereabouts
      type: System.Byte[]
      description: "대상 트랜잭션 관리자의 위치를 설명 하는 주소입니다. 이렇게 하면 두 트랜잭션 관리자 간 통신 및 다른 시스템 간에 트랜잭션을 전파할 수 있습니다."
    return:
      type: System.Byte[]
      description: "지정 된 나타내는 내보내기 트랜잭션 쿠키 <xref href=&quot;System.Transactions.Transaction&quot;> </xref> 개체입니다."
  overload: System.Transactions.TransactionInterop.GetExportCookie*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionInterop.GetTransactionFromDtcTransaction(System.Transactions.IDtcTransaction)
  id: GetTransactionFromDtcTransaction(System.Transactions.IDtcTransaction)
  parent: System.Transactions.TransactionInterop
  langs:
  - csharp
  name: GetTransactionFromDtcTransaction(IDtcTransaction)
  nameWithType: TransactionInterop.GetTransactionFromDtcTransaction(IDtcTransaction)
  fullName: System.Transactions.TransactionInterop.GetTransactionFromDtcTransaction(IDtcTransaction)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "생성 된 <xref href=&quot;System.Transactions.Transaction&quot;> </xref> 지정 된 <xref href=&quot;System.Transactions.IDtcTransaction&quot;> </xref>합니다."
  remarks: "`transactionNative` 관리 되지 않는 형식으로 호환 [ITransaction](http://msdn.microsoft.com/library/default.asp?url=/library/cossdk/html/d40264be-f9b2-4044-aac6-84b43e5be666.asp) <xref:System.EnterpriseServices.ITransaction> <xref:System.EnterpriseServices>.</xref:System.EnterpriseServices> 에서 사용 하는</xref:System.EnterpriseServices.ITransaction> 관리 되는 형태의 MSDTC에 의해 사용"
  syntax:
    content: public static System.Transactions.Transaction GetTransactionFromDtcTransaction (System.Transactions.IDtcTransaction transactionNative);
    parameters:
    - id: transactionNative
      type: System.Transactions.IDtcTransaction
      description: "<xref href=&quot;System.Transactions.IDtcTransaction&quot;> </xref> 마샬링해야 하는 개체입니다."
    return:
      type: System.Transactions.Transaction
      description: "A <xref href=&quot;System.Transactions.Transaction&quot;> </xref> 나타내는 인스턴스는 주어진 <xref href=&quot;System.Transactions.IDtcTransaction&quot;> </xref>합니다."
  overload: System.Transactions.TransactionInterop.GetTransactionFromDtcTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionInterop.GetTransactionFromExportCookie(System.Byte[])
  id: GetTransactionFromExportCookie(System.Byte[])
  parent: System.Transactions.TransactionInterop
  langs:
  - csharp
  name: GetTransactionFromExportCookie(Byte[])
  nameWithType: TransactionInterop.GetTransactionFromExportCookie(Byte[])
  fullName: System.Transactions.TransactionInterop.GetTransactionFromExportCookie(Byte[])
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "생성 한 <xref href=&quot;System.Transactions.Transaction&quot;> </xref> 지정 된 내보내기 쿠키입니다."
  remarks: "다양 한 전파 모델에 대 한 자세한 내용은 <xref:System.Transactions.TransactionInterop>클래스</xref:System.Transactions.TransactionInterop> 의 설명 섹션을 참조 하십시오."
  syntax:
    content: public static System.Transactions.Transaction GetTransactionFromExportCookie (byte[] cookie);
    parameters:
    - id: cookie
      type: System.Byte[]
      description: "마샬링된 형식의 트랜잭션 개체입니다."
    return:
      type: System.Transactions.Transaction
      description: "A <xref href=&quot;System.Transactions.Transaction&quot;> </xref> 지정 된 내보내기 쿠키에서 합니다."
  overload: System.Transactions.TransactionInterop.GetTransactionFromExportCookie*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken(System.Byte[])
  id: GetTransactionFromTransmitterPropagationToken(System.Byte[])
  parent: System.Transactions.TransactionInterop
  langs:
  - csharp
  name: GetTransactionFromTransmitterPropagationToken(Byte[])
  nameWithType: TransactionInterop.GetTransactionFromTransmitterPropagationToken(Byte[])
  fullName: System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken(Byte[])
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "생성 된 <xref href=&quot;System.Transactions.Transaction&quot;> </xref> 지정 된 전송기 전파 토큰에서 인스턴스."
  remarks: "와 함께이 메서드는 <xref:System.Transactions.TransactionInterop.GetTransmitterPropagationToken%2A>메서드는 트랜잭션을 &quot;끌어옵니다&quot; 원격 컴퓨터 로부터 트랜잭션의 역마샬링을 위해이 메서드를 호출할 때 &quot;끌어오기&quot; 전파 기능을 제공 합니다.</xref:System.Transactions.TransactionInterop.GetTransmitterPropagationToken%2A>       다양 한 전파 모델에 대 한 자세한 내용은 <xref:System.Transactions.TransactionInterop>클래스</xref:System.Transactions.TransactionInterop> 의 설명 섹션을 참조 하십시오."
  syntax:
    content: public static System.Transactions.Transaction GetTransactionFromTransmitterPropagationToken (byte[] propagationToken);
    parameters:
    - id: propagationToken
      type: System.Byte[]
      description: "트랜잭션을 나타내는 전파 토큰입니다."
    return:
      type: System.Transactions.Transaction
      description: "A <xref href=&quot;System.Transactions.Transaction&quot;> </xref> 지정 된 전송기 전파 토큰에서 합니다."
  overload: System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken*
  exceptions:
  - type: System.Transactions.TransactionManagerCommunicationException
    commentId: T:System.Transactions.TransactionManagerCommunicationException
    description: "트랜잭션의 deserialization에는 트랜잭션 관리자에 연결할 수 없기 때문에 실패 합니다. 네트워크 방화벽 또는 보안 설정 때문일 수 있습니다."
  platform:
  - net462
- uid: System.Transactions.TransactionInterop.GetTransmitterPropagationToken(System.Transactions.Transaction)
  id: GetTransmitterPropagationToken(System.Transactions.Transaction)
  parent: System.Transactions.TransactionInterop
  langs:
  - csharp
  name: GetTransmitterPropagationToken(Transaction)
  nameWithType: TransactionInterop.GetTransmitterPropagationToken(Transaction)
  fullName: System.Transactions.TransactionInterop.GetTransmitterPropagationToken(Transaction)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "지정 된 항목에 대 한 전파 토큰을 생성 <xref href=&quot;System.Transactions.Transaction&quot;> </xref>합니다."
  syntax:
    content: public static byte[] GetTransmitterPropagationToken (System.Transactions.Transaction transaction);
    parameters:
    - id: transaction
      type: System.Transactions.Transaction
      description: "전파 토큰으로 마샬링할 트랜잭션."
    return:
      type: System.Byte[]
      description: "와 함께이 메서드는 <xref:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken*>메서드는 트랜잭션을 &quot;끌어옵니다&quot; 원격 컴퓨터 로부터 트랜잭션을 역 마샬링을 위해 후 자가 호출 될 때 전송기/수신기 전파 기능을 제공 합니다.</xref:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken*>       다양 한 전파 모델에 대 한 자세한 내용은 설명 부분을 참조 하십시오.는 <xref href=&quot;System.Transactions.TransactionInterop&quot;> </xref> 클래스입니다."
  overload: System.Transactions.TransactionInterop.GetTransmitterPropagationToken*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionInterop.GetWhereabouts
  id: GetWhereabouts
  parent: System.Transactions.TransactionInterop
  langs:
  - csharp
  name: GetWhereabouts()
  nameWithType: TransactionInterop.GetWhereabouts()
  fullName: System.Transactions.TransactionInterop.GetWhereabouts()
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "분산된 트랜잭션 관리자의 Whereabouts를 가져옵니다 <xref href=&quot;System.Transactions&quot;> </xref> 사용 합니다."
  remarks: "Whereabouts는 트랜잭션 관리자의 위치를 설명 하는 주소를 포함 합니다. 이렇게 하면 두 트랜잭션 관리자 간 통신 및 다른 시스템 간에 트랜잭션을 전파할 수 있습니다. 이 메서드에 의해 반환 되는 정보를 푸시 모델 트랜잭션 전파에 대 한 위치 정보를 제공 데 사용할 수는 <xref:System.Transactions.TransactionInterop.GetExportCookie%2A>메서드.</xref:System.Transactions.TransactionInterop.GetExportCookie%2A>       다양 한 전파 모델에 대 한 자세한 내용은 <xref:System.Transactions.TransactionInterop>클래스</xref:System.Transactions.TransactionInterop> 의 설명 섹션을 참조 하십시오."
  syntax:
    content: public static byte[] GetWhereabouts ();
    parameters: []
    return:
      type: System.Byte[]
      description: "분산된 트랜잭션 관리자의 Whereabouts를 <xref href=&quot;System.Transactions&quot;> </xref> 사용 합니다."
  overload: System.Transactions.TransactionInterop.GetWhereabouts*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionInterop.PromoterTypeDtc
  id: PromoterTypeDtc
  parent: System.Transactions.TransactionInterop
  langs:
  - csharp
  name: PromoterTypeDtc
  nameWithType: TransactionInterop.PromoterTypeDtc
  fullName: System.Transactions.TransactionInterop.PromoterTypeDtc
  type: Field
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "분산된 된 트랜잭션 프로세서의 형식입니다."
  remarks: "이 값에 사용 되는 `Transaction.PromoterType` 속성은 트랜잭션이 또는 MSDTC 승격 하는 경우 및 `Transaction.GetPromotedToken` 메서드는 MSDTC 트랜잭션 전파 토큰을 반환 합니다는 `byte[]` 결과입니다."
  syntax:
    content: public static readonly Guid PromoterTypeDtc;
    return:
      type: System.Guid
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Transactions.TransactionManagerCommunicationException
  parent: System.Transactions
  isExternal: false
  name: TransactionManagerCommunicationException
  nameWithType: TransactionManagerCommunicationException
  fullName: System.Transactions.TransactionManagerCommunicationException
- uid: System.Transactions.TransactionInterop.GetDtcTransaction(System.Transactions.Transaction)
  parent: System.Transactions.TransactionInterop
  isExternal: false
  name: GetDtcTransaction(Transaction)
  nameWithType: TransactionInterop.GetDtcTransaction(Transaction)
  fullName: System.Transactions.TransactionInterop.GetDtcTransaction(Transaction)
- uid: System.Transactions.IDtcTransaction
  parent: System.Transactions
  isExternal: false
  name: IDtcTransaction
  nameWithType: IDtcTransaction
  fullName: System.Transactions.IDtcTransaction
- uid: System.Transactions.Transaction
  parent: System.Transactions
  isExternal: false
  name: Transaction
  nameWithType: Transaction
  fullName: System.Transactions.Transaction
- uid: System.Transactions.TransactionInterop.GetExportCookie(System.Transactions.Transaction,System.Byte[])
  parent: System.Transactions.TransactionInterop
  isExternal: false
  name: GetExportCookie(Transaction,Byte[])
  nameWithType: TransactionInterop.GetExportCookie(Transaction,Byte[])
  fullName: System.Transactions.TransactionInterop.GetExportCookie(Transaction,Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Transactions.TransactionInterop.GetTransactionFromDtcTransaction(System.Transactions.IDtcTransaction)
  parent: System.Transactions.TransactionInterop
  isExternal: false
  name: GetTransactionFromDtcTransaction(IDtcTransaction)
  nameWithType: TransactionInterop.GetTransactionFromDtcTransaction(IDtcTransaction)
  fullName: System.Transactions.TransactionInterop.GetTransactionFromDtcTransaction(IDtcTransaction)
- uid: System.Transactions.TransactionInterop.GetTransactionFromExportCookie(System.Byte[])
  parent: System.Transactions.TransactionInterop
  isExternal: false
  name: GetTransactionFromExportCookie(Byte[])
  nameWithType: TransactionInterop.GetTransactionFromExportCookie(Byte[])
  fullName: System.Transactions.TransactionInterop.GetTransactionFromExportCookie(Byte[])
- uid: System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken(System.Byte[])
  parent: System.Transactions.TransactionInterop
  isExternal: false
  name: GetTransactionFromTransmitterPropagationToken(Byte[])
  nameWithType: TransactionInterop.GetTransactionFromTransmitterPropagationToken(Byte[])
  fullName: System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken(Byte[])
- uid: System.Transactions.TransactionInterop.GetTransmitterPropagationToken(System.Transactions.Transaction)
  parent: System.Transactions.TransactionInterop
  isExternal: false
  name: GetTransmitterPropagationToken(Transaction)
  nameWithType: TransactionInterop.GetTransmitterPropagationToken(Transaction)
  fullName: System.Transactions.TransactionInterop.GetTransmitterPropagationToken(Transaction)
- uid: System.Transactions.TransactionInterop.GetWhereabouts
  parent: System.Transactions.TransactionInterop
  isExternal: false
  name: GetWhereabouts()
  nameWithType: TransactionInterop.GetWhereabouts()
  fullName: System.Transactions.TransactionInterop.GetWhereabouts()
- uid: System.Transactions.TransactionInterop.PromoterTypeDtc
  parent: System.Transactions.TransactionInterop
  isExternal: false
  name: PromoterTypeDtc
  nameWithType: TransactionInterop.PromoterTypeDtc
  fullName: System.Transactions.TransactionInterop.PromoterTypeDtc
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Transactions.TransactionInterop.GetDtcTransaction*
  parent: System.Transactions.TransactionInterop
  isExternal: false
  name: GetDtcTransaction
  nameWithType: TransactionInterop.GetDtcTransaction
- uid: System.Transactions.TransactionInterop.GetExportCookie*
  parent: System.Transactions.TransactionInterop
  isExternal: false
  name: GetExportCookie
  nameWithType: TransactionInterop.GetExportCookie
- uid: System.Transactions.TransactionInterop.GetTransactionFromDtcTransaction*
  parent: System.Transactions.TransactionInterop
  isExternal: false
  name: GetTransactionFromDtcTransaction
  nameWithType: TransactionInterop.GetTransactionFromDtcTransaction
- uid: System.Transactions.TransactionInterop.GetTransactionFromExportCookie*
  parent: System.Transactions.TransactionInterop
  isExternal: false
  name: GetTransactionFromExportCookie
  nameWithType: TransactionInterop.GetTransactionFromExportCookie
- uid: System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken*
  parent: System.Transactions.TransactionInterop
  isExternal: false
  name: GetTransactionFromTransmitterPropagationToken
  nameWithType: TransactionInterop.GetTransactionFromTransmitterPropagationToken
- uid: System.Transactions.TransactionInterop.GetTransmitterPropagationToken*
  parent: System.Transactions.TransactionInterop
  isExternal: false
  name: GetTransmitterPropagationToken
  nameWithType: TransactionInterop.GetTransmitterPropagationToken
- uid: System.Transactions.TransactionInterop.GetWhereabouts*
  parent: System.Transactions.TransactionInterop
  isExternal: false
  name: GetWhereabouts
  nameWithType: TransactionInterop.GetWhereabouts
