### YamlMime:ManagedReference
items:
- uid: System.Security.ReadOnlyPermissionSet
  id: ReadOnlyPermissionSet
  children:
  - System.Security.ReadOnlyPermissionSet.#ctor(System.Security.SecurityElement)
  - System.Security.ReadOnlyPermissionSet.AddPermissionImpl(System.Security.IPermission)
  - System.Security.ReadOnlyPermissionSet.Copy
  - System.Security.ReadOnlyPermissionSet.FromXml(System.Security.SecurityElement)
  - System.Security.ReadOnlyPermissionSet.GetEnumeratorImpl
  - System.Security.ReadOnlyPermissionSet.GetPermissionImpl(System.Type)
  - System.Security.ReadOnlyPermissionSet.IsReadOnly
  - System.Security.ReadOnlyPermissionSet.RemovePermissionImpl(System.Type)
  - System.Security.ReadOnlyPermissionSet.SetPermissionImpl(System.Security.IPermission)
  - System.Security.ReadOnlyPermissionSet.ToXml
  langs:
  - csharp
  name: ReadOnlyPermissionSet
  nameWithType: ReadOnlyPermissionSet
  fullName: System.Security.ReadOnlyPermissionSet
  type: Class
  summary: "다양 한 유형의 사용 권한 포함 될 수 있는 읽기 전용 컬렉션을 나타냅니다."
  remarks: "읽기 전용 권한 집합이 명시적 XML에서 생성 되 고 생성 후 수정할 수 없습니다. 원래 생성 되었을 인코딩을 사용 권한 집합은 동일한 XML으로 복원할 수 있는이 제한 사항은 확인 합니다. 추가 하거나 <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> ReadOnlyPermissionSet 결과에서 사용 권한을 제거할 하려고       ReadOnlyPermissionSet에서 가져올 모든 사용 권한을 사용 권한의 복사본에만 인지 확인 합니다. 복사본은 변경할 수 변경 되는 경우는 ReadOnlyPermissionSet에 있는 권한은 변경 되지 않습니다."
  syntax:
    content: 'public sealed class ReadOnlyPermissionSet : System.Security.PermissionSet'
  inheritance:
  - System.Object
  - System.Security.PermissionSet
  implements: []
  inheritedMembers:
  - System.Security.PermissionSet.AddPermission(System.Security.IPermission)
  - System.Security.PermissionSet.Assert
  - System.Security.PermissionSet.ContainsNonCodeAccessPermissions
  - System.Security.PermissionSet.ConvertPermissionSet(System.String,System.Byte[],System.String)
  - System.Security.PermissionSet.CopyTo(System.Array,System.Int32)
  - System.Security.PermissionSet.Count
  - System.Security.PermissionSet.Demand
  - System.Security.PermissionSet.Deny
  - System.Security.PermissionSet.Equals(System.Object)
  - System.Security.PermissionSet.GetEnumerator
  - System.Security.PermissionSet.GetHashCode
  - System.Security.PermissionSet.GetPermission(System.Type)
  - System.Security.PermissionSet.Intersect(System.Security.PermissionSet)
  - System.Security.PermissionSet.IsEmpty
  - System.Security.PermissionSet.IsSubsetOf(System.Security.PermissionSet)
  - System.Security.PermissionSet.IsSynchronized
  - System.Security.PermissionSet.IsUnrestricted
  - System.Security.PermissionSet.PermitOnly
  - System.Security.PermissionSet.RemovePermission(System.Type)
  - System.Security.PermissionSet.RevertAssert
  - System.Security.PermissionSet.SetPermission(System.Security.IPermission)
  - System.Security.PermissionSet.SyncRoot
  - System.Security.PermissionSet.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)
  - System.Security.PermissionSet.ToString
  - System.Security.PermissionSet.Union(System.Security.PermissionSet)
  platform:
  - net462
- uid: System.Security.ReadOnlyPermissionSet.#ctor(System.Security.SecurityElement)
  id: '#ctor(System.Security.SecurityElement)'
  parent: System.Security.ReadOnlyPermissionSet
  langs:
  - csharp
  name: ReadOnlyPermissionSet(SecurityElement)
  nameWithType: ReadOnlyPermissionSet.ReadOnlyPermissionSet(SecurityElement)
  fullName: System.Security.ReadOnlyPermissionSet.ReadOnlyPermissionSet(SecurityElement)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Security.ReadOnlyPermissionSet&quot;> </xref> 클래스입니다."
  syntax:
    content: public ReadOnlyPermissionSet (System.Security.SecurityElement permissionSetXml);
    parameters:
    - id: permissionSetXml
      type: System.Security.SecurityElement
      description: "새 값을 XML 요소 <xref href=&quot;System.Security.ReadOnlyPermissionSet&quot;> </xref>합니다."
  overload: System.Security.ReadOnlyPermissionSet.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>permissionSetXml</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.ReadOnlyPermissionSet.AddPermissionImpl(System.Security.IPermission)
  id: AddPermissionImpl(System.Security.IPermission)
  parent: System.Security.ReadOnlyPermissionSet
  langs:
  - csharp
  name: AddPermissionImpl(IPermission)
  nameWithType: ReadOnlyPermissionSet.AddPermissionImpl(IPermission)
  fullName: System.Security.ReadOnlyPermissionSet.AddPermissionImpl(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  syntax:
    content: protected override System.Security.IPermission AddPermissionImpl (System.Security.IPermission perm);
    parameters:
    - id: perm
      type: System.Security.IPermission
      description: "추가할 수 있습니다."
    return:
      type: System.Security.IPermission
      description: "추가할 수 있습니다."
  overload: System.Security.ReadOnlyPermissionSet.AddPermissionImpl*
  exceptions: []
  platform:
  - net462
- uid: System.Security.ReadOnlyPermissionSet.Copy
  id: Copy
  parent: System.Security.ReadOnlyPermissionSet
  langs:
  - csharp
  name: Copy()
  nameWithType: ReadOnlyPermissionSet.Copy()
  fullName: System.Security.ReadOnlyPermissionSet.Copy()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "복사본을 만듭니다는 <xref href=&quot;System.Security.ReadOnlyPermissionSet&quot;> </xref>합니다."
  syntax:
    content: public override System.Security.PermissionSet Copy ();
    parameters: []
    return:
      type: System.Security.PermissionSet
      description: "읽기 전용 권한이의 복사본을 설정 합니다."
  overload: System.Security.ReadOnlyPermissionSet.Copy*
  exceptions: []
  platform:
  - net462
- uid: System.Security.ReadOnlyPermissionSet.FromXml(System.Security.SecurityElement)
  id: FromXml(System.Security.SecurityElement)
  parent: System.Security.ReadOnlyPermissionSet
  langs:
  - csharp
  name: FromXml(SecurityElement)
  nameWithType: ReadOnlyPermissionSet.FromXml(SecurityElement)
  fullName: System.Security.ReadOnlyPermissionSet.FromXml(SecurityElement)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "포함 된 XML 인코딩에서 지정된 된 상태의 보안 개체를 다시 만듭니다."
  remarks: "이 재정의 <xref:System.Security.PermissionSet.FromXml%2A?displayProperty=fullName>기본 클래스에서 호출 하기 위한 용도가 <xref:System.Security.PermissionSet>사용 권한 집합에 역직렬화 동안은 때.</xref:System.Security.PermissionSet> </xref:System.Security.PermissionSet.FromXml%2A?displayProperty=fullName> FromXml를 직접 호출 하려고 하면 예외가 throw 됩니다. 읽기 전용 권한 FromXml 호출 하 여 집합을 수정할 수 없습니다."
  syntax:
    content: public override void FromXml (System.Security.SecurityElement et);
    parameters:
    - id: et
      type: System.Security.SecurityElement
      description: "XML은 보안 개체를 다시 만드는 데 사용할 인코딩입니다."
  overload: System.Security.ReadOnlyPermissionSet.FromXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>et</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> et </code> 매개 변수가 올바른 권한 요소가 아닙니다.       -또는- <code> et </code> 매개 변수의 버전 번호가 지원 되지 않습니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "개체가 역직렬화 되는; 즉, <xref href=&quot;System.Security.PermissionSet&quot;> </xref> 않았습니다을 호출 FromXml 역직렬화 하는 동안 합니다."
  platform:
  - net462
- uid: System.Security.ReadOnlyPermissionSet.GetEnumeratorImpl
  id: GetEnumeratorImpl
  parent: System.Security.ReadOnlyPermissionSet
  langs:
  - csharp
  name: GetEnumeratorImpl()
  nameWithType: ReadOnlyPermissionSet.GetEnumeratorImpl()
  fullName: System.Security.ReadOnlyPermissionSet.GetEnumeratorImpl()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  syntax:
    content: protected override System.Collections.IEnumerator GetEnumeratorImpl ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "추가할 수 있습니다."
  overload: System.Security.ReadOnlyPermissionSet.GetEnumeratorImpl*
  exceptions: []
  platform:
  - net462
- uid: System.Security.ReadOnlyPermissionSet.GetPermissionImpl(System.Type)
  id: GetPermissionImpl(System.Type)
  parent: System.Security.ReadOnlyPermissionSet
  langs:
  - csharp
  name: GetPermissionImpl(Type)
  nameWithType: ReadOnlyPermissionSet.GetPermissionImpl(Type)
  fullName: System.Security.ReadOnlyPermissionSet.GetPermissionImpl(Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  syntax:
    content: protected override System.Security.IPermission GetPermissionImpl (Type permClass);
    parameters:
    - id: permClass
      type: System.Type
      description: "추가할 수 있습니다."
    return:
      type: System.Security.IPermission
      description: "추가할 수 있습니다."
  overload: System.Security.ReadOnlyPermissionSet.GetPermissionImpl*
  exceptions: []
  platform:
  - net462
- uid: System.Security.ReadOnlyPermissionSet.IsReadOnly
  id: IsReadOnly
  parent: System.Security.ReadOnlyPermissionSet
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: ReadOnlyPermissionSet.IsReadOnly
  fullName: System.Security.ReadOnlyPermissionSet.IsReadOnly
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "컬렉션이 읽기 전용인 지 여부를 나타내는 값을 가져옵니다."
  remarks: "A <xref:System.Security.ReadOnlyPermissionSet>은 항상 읽기 전용 이므로이 값은 항상 같아야 `true`.</xref:System.Security.ReadOnlyPermissionSet>"
  syntax:
    content: public override bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "Always <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Security.ReadOnlyPermissionSet.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Security.ReadOnlyPermissionSet.RemovePermissionImpl(System.Type)
  id: RemovePermissionImpl(System.Type)
  parent: System.Security.ReadOnlyPermissionSet
  langs:
  - csharp
  name: RemovePermissionImpl(Type)
  nameWithType: ReadOnlyPermissionSet.RemovePermissionImpl(Type)
  fullName: System.Security.ReadOnlyPermissionSet.RemovePermissionImpl(Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  syntax:
    content: protected override System.Security.IPermission RemovePermissionImpl (Type permClass);
    parameters:
    - id: permClass
      type: System.Type
      description: "추가할 수 있습니다."
    return:
      type: System.Security.IPermission
      description: "추가할 수 있습니다."
  overload: System.Security.ReadOnlyPermissionSet.RemovePermissionImpl*
  exceptions: []
  platform:
  - net462
- uid: System.Security.ReadOnlyPermissionSet.SetPermissionImpl(System.Security.IPermission)
  id: SetPermissionImpl(System.Security.IPermission)
  parent: System.Security.ReadOnlyPermissionSet
  langs:
  - csharp
  name: SetPermissionImpl(IPermission)
  nameWithType: ReadOnlyPermissionSet.SetPermissionImpl(IPermission)
  fullName: System.Security.ReadOnlyPermissionSet.SetPermissionImpl(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  syntax:
    content: protected override System.Security.IPermission SetPermissionImpl (System.Security.IPermission perm);
    parameters:
    - id: perm
      type: System.Security.IPermission
      description: "추가할 수 있습니다."
    return:
      type: System.Security.IPermission
      description: "추가할 수 있습니다."
  overload: System.Security.ReadOnlyPermissionSet.SetPermissionImpl*
  exceptions: []
  platform:
  - net462
- uid: System.Security.ReadOnlyPermissionSet.ToXml
  id: ToXml
  parent: System.Security.ReadOnlyPermissionSet
  langs:
  - csharp
  name: ToXml()
  nameWithType: ReadOnlyPermissionSet.ToXml()
  fullName: System.Security.ReadOnlyPermissionSet.ToXml()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "보안 개체 및 현재 상태에 대 한 XML 인코딩을 만듭니다."
  syntax:
    content: public override System.Security.SecurityElement ToXml ();
    parameters: []
    return:
      type: System.Security.SecurityElement
      description: "모든 상태 정보를 포함 하는 보안 개체의 XML 인코딩입니다."
  overload: System.Security.ReadOnlyPermissionSet.ToXml*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.PermissionSet
  isExternal: false
  name: System.Security.PermissionSet
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Security.ReadOnlyPermissionSet.#ctor(System.Security.SecurityElement)
  parent: System.Security.ReadOnlyPermissionSet
  isExternal: false
  name: ReadOnlyPermissionSet(SecurityElement)
  nameWithType: ReadOnlyPermissionSet.ReadOnlyPermissionSet(SecurityElement)
  fullName: System.Security.ReadOnlyPermissionSet.ReadOnlyPermissionSet(SecurityElement)
- uid: System.Security.SecurityElement
  parent: System.Security
  isExternal: false
  name: SecurityElement
  nameWithType: SecurityElement
  fullName: System.Security.SecurityElement
- uid: System.Security.ReadOnlyPermissionSet.AddPermissionImpl(System.Security.IPermission)
  parent: System.Security.ReadOnlyPermissionSet
  isExternal: false
  name: AddPermissionImpl(IPermission)
  nameWithType: ReadOnlyPermissionSet.AddPermissionImpl(IPermission)
  fullName: System.Security.ReadOnlyPermissionSet.AddPermissionImpl(IPermission)
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Security.ReadOnlyPermissionSet.Copy
  parent: System.Security.ReadOnlyPermissionSet
  isExternal: false
  name: Copy()
  nameWithType: ReadOnlyPermissionSet.Copy()
  fullName: System.Security.ReadOnlyPermissionSet.Copy()
- uid: System.Security.ReadOnlyPermissionSet.FromXml(System.Security.SecurityElement)
  parent: System.Security.ReadOnlyPermissionSet
  isExternal: false
  name: FromXml(SecurityElement)
  nameWithType: ReadOnlyPermissionSet.FromXml(SecurityElement)
  fullName: System.Security.ReadOnlyPermissionSet.FromXml(SecurityElement)
- uid: System.Security.ReadOnlyPermissionSet.GetEnumeratorImpl
  parent: System.Security.ReadOnlyPermissionSet
  isExternal: false
  name: GetEnumeratorImpl()
  nameWithType: ReadOnlyPermissionSet.GetEnumeratorImpl()
  fullName: System.Security.ReadOnlyPermissionSet.GetEnumeratorImpl()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Security.ReadOnlyPermissionSet.GetPermissionImpl(System.Type)
  parent: System.Security.ReadOnlyPermissionSet
  isExternal: false
  name: GetPermissionImpl(Type)
  nameWithType: ReadOnlyPermissionSet.GetPermissionImpl(Type)
  fullName: System.Security.ReadOnlyPermissionSet.GetPermissionImpl(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Security.ReadOnlyPermissionSet.IsReadOnly
  parent: System.Security.ReadOnlyPermissionSet
  isExternal: false
  name: IsReadOnly
  nameWithType: ReadOnlyPermissionSet.IsReadOnly
  fullName: System.Security.ReadOnlyPermissionSet.IsReadOnly
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.ReadOnlyPermissionSet.RemovePermissionImpl(System.Type)
  parent: System.Security.ReadOnlyPermissionSet
  isExternal: false
  name: RemovePermissionImpl(Type)
  nameWithType: ReadOnlyPermissionSet.RemovePermissionImpl(Type)
  fullName: System.Security.ReadOnlyPermissionSet.RemovePermissionImpl(Type)
- uid: System.Security.ReadOnlyPermissionSet.SetPermissionImpl(System.Security.IPermission)
  parent: System.Security.ReadOnlyPermissionSet
  isExternal: false
  name: SetPermissionImpl(IPermission)
  nameWithType: ReadOnlyPermissionSet.SetPermissionImpl(IPermission)
  fullName: System.Security.ReadOnlyPermissionSet.SetPermissionImpl(IPermission)
- uid: System.Security.ReadOnlyPermissionSet.ToXml
  parent: System.Security.ReadOnlyPermissionSet
  isExternal: false
  name: ToXml()
  nameWithType: ReadOnlyPermissionSet.ToXml()
  fullName: System.Security.ReadOnlyPermissionSet.ToXml()
- uid: System.Security.ReadOnlyPermissionSet.#ctor*
  parent: System.Security.ReadOnlyPermissionSet
  isExternal: false
  name: ReadOnlyPermissionSet
  nameWithType: ReadOnlyPermissionSet.ReadOnlyPermissionSet
- uid: System.Security.ReadOnlyPermissionSet.AddPermissionImpl*
  parent: System.Security.ReadOnlyPermissionSet
  isExternal: false
  name: AddPermissionImpl
  nameWithType: ReadOnlyPermissionSet.AddPermissionImpl
- uid: System.Security.ReadOnlyPermissionSet.Copy*
  parent: System.Security.ReadOnlyPermissionSet
  isExternal: false
  name: Copy
  nameWithType: ReadOnlyPermissionSet.Copy
- uid: System.Security.ReadOnlyPermissionSet.FromXml*
  parent: System.Security.ReadOnlyPermissionSet
  isExternal: false
  name: FromXml
  nameWithType: ReadOnlyPermissionSet.FromXml
- uid: System.Security.ReadOnlyPermissionSet.GetEnumeratorImpl*
  parent: System.Security.ReadOnlyPermissionSet
  isExternal: false
  name: GetEnumeratorImpl
  nameWithType: ReadOnlyPermissionSet.GetEnumeratorImpl
- uid: System.Security.ReadOnlyPermissionSet.GetPermissionImpl*
  parent: System.Security.ReadOnlyPermissionSet
  isExternal: false
  name: GetPermissionImpl
  nameWithType: ReadOnlyPermissionSet.GetPermissionImpl
- uid: System.Security.ReadOnlyPermissionSet.IsReadOnly*
  parent: System.Security.ReadOnlyPermissionSet
  isExternal: false
  name: IsReadOnly
  nameWithType: ReadOnlyPermissionSet.IsReadOnly
- uid: System.Security.ReadOnlyPermissionSet.RemovePermissionImpl*
  parent: System.Security.ReadOnlyPermissionSet
  isExternal: false
  name: RemovePermissionImpl
  nameWithType: ReadOnlyPermissionSet.RemovePermissionImpl
- uid: System.Security.ReadOnlyPermissionSet.SetPermissionImpl*
  parent: System.Security.ReadOnlyPermissionSet
  isExternal: false
  name: SetPermissionImpl
  nameWithType: ReadOnlyPermissionSet.SetPermissionImpl
- uid: System.Security.ReadOnlyPermissionSet.ToXml*
  parent: System.Security.ReadOnlyPermissionSet
  isExternal: false
  name: ToXml
  nameWithType: ReadOnlyPermissionSet.ToXml
