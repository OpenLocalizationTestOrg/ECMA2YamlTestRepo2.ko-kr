### YamlMime:ManagedReference
items:
- uid: System.ApplicationId
  id: ApplicationId
  children:
  - System.ApplicationId.#ctor(System.Byte[],System.String,System.Version,System.String,System.String)
  - System.ApplicationId.Copy
  - System.ApplicationId.Culture
  - System.ApplicationId.Equals(System.Object)
  - System.ApplicationId.GetHashCode
  - System.ApplicationId.Name
  - System.ApplicationId.ProcessorArchitecture
  - System.ApplicationId.PublicKeyToken
  - System.ApplicationId.ToString
  - System.ApplicationId.Version
  langs:
  - csharp
  name: ApplicationId
  nameWithType: ApplicationId
  fullName: System.ApplicationId
  type: Class
  summary: "매니페스트 기반 응용 프로그램을 고유 하 게 식별 하는 데 사용 되는 정보가 들어 있습니다. 이 클래스는 상속 될 수 없습니다."
  remarks: "게시자의 공개 키, 응용 프로그램 이름, 대상 프로세서 아키텍처, 응용 프로그램 문화권 및 응용 프로그램 버전의 응용 프로그램 id 구성 됩니다. 응용 프로그램 id 속성 값은 응용 프로그램 매니페스트에 포함 된 정보에 해당 합니다. 응용 프로그램 매니페스트에 대 한 자세한 내용은 참조 하십시오. [ClickOnce 응용 프로그램 매니페스트](~/add/includes/ajax-current-ext-md.md)합니다.       응용 프로그램 Id에서 사용 되는 <xref:System.Security.Policy.ApplicationSecurityInfo>매니페스트 기반 응용 프로그램을 식별 하는 클래스입니다.</xref:System.Security.Policy.ApplicationSecurityInfo>"
  example:
  - "The following code example displays the ApplicationId properties by obtaining the ApplicationId from an <xref:System.Security.Policy.ApplicationSecurityInfo> instance created using the <xref:System.ActivationContext> for the currently executing manifest-based application.  \n  \n [!code-vb[System.ApplicationIdentity#1](~/add/codesnippet/visualbasic/t-system.applicationid_1.vb)]\n [!code-cs[System.ApplicationIdentity#1](~/add/codesnippet/csharp/t-system.applicationid_1.cs)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class ApplicationId
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ApplicationId.#ctor(System.Byte[],System.String,System.Version,System.String,System.String)
  id: '#ctor(System.Byte[],System.String,System.Version,System.String,System.String)'
  parent: System.ApplicationId
  langs:
  - csharp
  name: ApplicationId(Byte[],String,Version,String,String)
  nameWithType: ApplicationId.ApplicationId(Byte[],String,Version,String,String)
  fullName: System.ApplicationId.ApplicationId(Byte[],String,Version,String,String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.ApplicationId&quot;> </xref> 클래스입니다."
  remarks: "생성자가 초기화 하는 <xref:System.ApplicationId.Culture%2A>, <xref:System.ApplicationId.Name%2A>, <xref:System.ApplicationId.ProcessorArchitecture%2A>, <xref:System.ApplicationId.PublicKeyToken%2A>, 및 <xref:System.ApplicationId.Version%2A> <xref:System.ApplicationId>.</xref:System.ApplicationId> 속성</xref:System.ApplicationId.Version%2A> </xref:System.ApplicationId.PublicKeyToken%2A> </xref:System.ApplicationId.ProcessorArchitecture%2A> </xref:System.ApplicationId.Name%2A> </xref:System.ApplicationId.Culture%2A>"
  syntax:
    content: public ApplicationId (byte[] publicKeyToken, string name, Version version, string processorArchitecture, string culture);
    parameters:
    - id: publicKeyToken
      type: System.Byte[]
      description: "원시 공용 키 데이터를 나타내는 바이트 배열입니다."
    - id: name
      type: System.String
      description: "응용 프로그램의 이름입니다."
    - id: version
      type: System.Version
      description: "A <xref:System.Version>응용 프로그램의 버전을 지정 하는 개체입니다.</xref:System.Version>"
    - id: processorArchitecture
      type: System.String
      description: "응용 프로그램의 프로세서 아키텍처입니다."
    - id: culture
      type: System.String
      description: "응용 프로그램의 culture입니다."
  overload: System.ApplicationId.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name </code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>version </code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>publicKeyToken </code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>name </code>빈 문자열입니다."
  platform:
  - net462
- uid: System.ApplicationId.Copy
  id: Copy
  parent: System.ApplicationId
  langs:
  - csharp
  name: Copy()
  nameWithType: ApplicationId.Copy()
  fullName: System.ApplicationId.Copy()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "만들고 현재 응용 프로그램 id의 동일한 복사본을 반환 합니다."
  remarks: "이 메서드에서 반환 된 복사 하 여 substantiated 같습니다 같은지는 <xref:System.ApplicationId.Equals%2A>메서드.</xref:System.ApplicationId.Equals%2A> 원본과 복사본에 대 한 해시 코드 같습니다."
  syntax:
    content: public ApplicationId Copy ();
    parameters: []
    return:
      type: System.ApplicationId
      description: "<xref href=&quot;System.ApplicationId&quot;> </xref> 원래의 정확한 복사본을 나타내는 개체입니다."
  overload: System.ApplicationId.Copy*
  exceptions: []
  platform:
  - net462
- uid: System.ApplicationId.Culture
  id: Culture
  parent: System.ApplicationId
  langs:
  - csharp
  name: Culture
  nameWithType: ApplicationId.Culture
  fullName: System.ApplicationId.Culture
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "응용 프로그램에 대 한 문화권 정보를 나타내는 문자열을 가져옵니다."
  remarks: "문화권 값 언어 정보, 예를 들어 &quot;EN-US&quot;를 포함할 수 있습니다.       문화권 값에 대 한 내용은 <xref:System.Globalization.CultureInfo>.</xref:System.Globalization.CultureInfo> 을 참조 하십시오."
  example:
  - "The following code example displays the Culture property by obtaining the <xref:System.ApplicationId> from an <xref:System.Security.Policy.ApplicationSecurityInfo> instance created using the <xref:System.ActivationContext> for the currently executing manifest-based application.  This code example is part of a larger example provided for the <xref:System.ApplicationId> class.  \n  \n [!code-vb[System.ApplicationIdentity#8](~/add/codesnippet/visualbasic/p-system.applicationid.c_1.vb)]\n [!code-cs[System.ApplicationIdentity#8](~/add/codesnippet/csharp/p-system.applicationid.c_1.cs)]"
  syntax:
    content: public string Culture { get; }
    return:
      type: System.String
      description: "응용 프로그램에 대 한 문화권 정보입니다."
  overload: System.ApplicationId.Culture*
  exceptions: []
  platform:
  - net462
- uid: System.ApplicationId.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.ApplicationId
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: ApplicationId.Equals(Object)
  fullName: System.ApplicationId.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "확인 여부를 지정 된 <xref href=&quot;System.ApplicationId&quot;> </xref> 개체가 같으면 현재 <xref href=&quot;System.ApplicationId&quot;> </xref>합니다."
  remarks: "이 메서드를 재정의 <xref:System.Object.Equals%28System.Object%29?displayProperty=fullName>메서드.</xref:System.Object.Equals%28System.Object%29?displayProperty=fullName>"
  syntax:
    content: public override bool Equals (object o);
    parameters:
    - id: o
      type: System.Object
      description: "<xref href=&quot;System.ApplicationId&quot;> </xref> 현재 비교할 개체를 <xref href=&quot;System.ApplicationId&quot;> </xref>합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>하는 경우 지정 된 <xref href=&quot;System.ApplicationId&quot;> </xref> 개체가 같으면 현재 <xref href=&quot;System.ApplicationId&quot;> </xref>, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.ApplicationId.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.ApplicationId.GetHashCode
  id: GetHashCode
  parent: System.ApplicationId
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: ApplicationId.GetHashCode()
  fullName: System.ApplicationId.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "현재 응용 프로그램 id에 대 한 해시 코드를 가져옵니다."
  remarks: "에 대 한 값이 같은 두 개체에 대해 동일한 해시 코드를 생성 하는이 메서드는 <xref:System.ApplicationId.Name%2A>및 <xref:System.ApplicationId.Version%2A>속성.</xref:System.ApplicationId.Version%2A> </xref:System.ApplicationId.Name%2A>"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "현재 응용 프로그램 id에 대 한 해시 코드입니다."
  overload: System.ApplicationId.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.ApplicationId.Name
  id: Name
  parent: System.ApplicationId
  langs:
  - csharp
  name: Name
  nameWithType: ApplicationId.Name
  fullName: System.ApplicationId.Name
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "응용 프로그램의 이름을 가져옵니다."
  remarks: "이름은 응용 프로그램의 간단 하 고 암호화 되지 않은 이름이입니다."
  example:
  - "The following code example displays the Name property by obtaining the <xref:System.ApplicationId> from an <xref:System.Security.Policy.ApplicationSecurityInfo> instance created using the <xref:System.ActivationContext> for the currently executing manifest-based application. This code example is part of a larger example provided for the <xref:System.ApplicationId> class.  \n  \n [!code-vb[System.ApplicationIdentity#7](~/add/codesnippet/visualbasic/p-system.applicationid.n_1.vb)]\n [!code-cs[System.ApplicationIdentity#7](~/add/codesnippet/csharp/p-system.applicationid.n_1.cs)]"
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "응용 프로그램의 이름입니다."
  overload: System.ApplicationId.Name*
  exceptions: []
  platform:
  - net462
- uid: System.ApplicationId.ProcessorArchitecture
  id: ProcessorArchitecture
  parent: System.ApplicationId
  langs:
  - csharp
  name: ProcessorArchitecture
  nameWithType: ApplicationId.ProcessorArchitecture
  fullName: System.ApplicationId.ProcessorArchitecture
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "응용 프로그램에 대 한 대상 프로세서 아키텍처를 가져옵니다."
  remarks: "유효한 값은 &quot;msil&quot;, &quot;ia64&quot;, &quot;x86&quot; 및 &quot;amd64&quot;입니다. 기본값은 &quot;msil&quot; 또는 모든 어셈블리는 플랫폼 독립적 이므로, Microsoft intermediate language 및 공용 언어 런타임 응용 프로그램에서 필요할 때을 컴파일하여 됩니다."
  example:
  - "The following code example displays the ProcessorArchitecture property by obtaining the <xref:System.ApplicationId> from an <xref:System.Security.Policy.ApplicationSecurityInfo> instance created using the <xref:System.ActivationContext> for the currently executing manifest-based application.  This code example is part of a larger example provided for the <xref:System.ApplicationId> class.  \n  \n [!code-vb[System.ApplicationIdentity#9](~/add/codesnippet/visualbasic/p-system.applicationid.p_0_1.vb)]\n [!code-cs[System.ApplicationIdentity#9](~/add/codesnippet/csharp/p-system.applicationid.p_0_1.cs)]"
  syntax:
    content: public string ProcessorArchitecture { get; }
    return:
      type: System.String
      description: "응용 프로그램의 프로세서 아키텍처입니다."
  overload: System.ApplicationId.ProcessorArchitecture*
  exceptions: []
  platform:
  - net462
- uid: System.ApplicationId.PublicKeyToken
  id: PublicKeyToken
  parent: System.ApplicationId
  langs:
  - csharp
  name: PublicKeyToken
  nameWithType: ApplicationId.PublicKeyToken
  fullName: System.ApplicationId.PublicKeyToken
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "응용 프로그램에 대 한 공개 키를 토큰을 가져옵니다."
  remarks: "공개 키 토큰은 응용 프로그램 서명에 사용 된 공개 키의 sha-1 해시의 마지막 8 바이트도 표시 됩니다.       자세한 내용은 <xref:System.Reflection.AssemblyName.GetPublicKeyToken%2A?displayProperty=fullName>.</xref:System.Reflection.AssemblyName.GetPublicKeyToken%2A?displayProperty=fullName> 을 참조 하십시오."
  example:
  - "The following code example displays the PublicKeyToken property by obtaining the <xref:System.ApplicationId> from an <xref:System.Security.Policy.ApplicationSecurityInfo> instance created using the <xref:System.ActivationContext> for the currently executing manifest-based application. This code example is part of a larger example provided for the <xref:System.ApplicationId> class.  \n  \n [!code-vb[System.ApplicationIdentity#11](~/add/codesnippet/visualbasic/p-system.applicationid.p_1_1.vb)]\n [!code-cs[System.ApplicationIdentity#11](~/add/codesnippet/csharp/p-system.applicationid.p_1_1.cs)]"
  syntax:
    content: public byte[] PublicKeyToken { get; }
    return:
      type: System.Byte[]
      description: "응용 프로그램에 대 한 공개 키 토큰을 포함 하는 바이트 배열입니다."
  overload: System.ApplicationId.PublicKeyToken*
  exceptions: []
  platform:
  - net462
- uid: System.ApplicationId.ToString
  id: ToString
  parent: System.ApplicationId
  langs:
  - csharp
  name: ToString()
  nameWithType: ApplicationId.ToString()
  fullName: System.ApplicationId.ToString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "만들고 응용 프로그램 id의 문자열 표현을 반환 합니다."
  remarks: "이 메서드를 재정의 <xref:System.Object.ToString%2A?displayProperty=fullName>메서드.</xref:System.Object.ToString%2A?displayProperty=fullName>"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "응용 프로그램 id의 문자열 표현입니다."
  overload: System.ApplicationId.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.ApplicationId.Version
  id: Version
  parent: System.ApplicationId
  langs:
  - csharp
  name: Version
  nameWithType: ApplicationId.Version
  fullName: System.ApplicationId.Version
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "응용 프로그램의 버전을 가져옵니다."
  remarks: "자세한 내용은 <xref:System.Version?displayProperty=fullName>.</xref:System.Version?displayProperty=fullName> 을 참조 하십시오."
  example:
  - "The following code example displays the Version property by obtaining the <xref:System.ApplicationId> from an <xref:System.Security.Policy.ApplicationSecurityInfo> instance created using the <xref:System.ActivationContext> for the currently executing manifest-based application. This code example is part of a larger example provided for the <xref:System.ApplicationId> class.  \n  \n [!code-vb[System.ApplicationIdentity#10](~/add/codesnippet/visualbasic/p-system.applicationid.v_1.vb)]\n [!code-cs[System.ApplicationIdentity#10](~/add/codesnippet/csharp/p-system.applicationid.v_1.cs)]"
  syntax:
    content: public Version Version { get; }
    return:
      type: System.Version
      description: "A <xref:System.Version>응용 프로그램의 버전을 지정 하는.</xref:System.Version>"
  overload: System.ApplicationId.Version*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ApplicationId.#ctor(System.Byte[],System.String,System.Version,System.String,System.String)
  parent: System.ApplicationId
  isExternal: false
  name: ApplicationId(Byte[],String,Version,String,String)
  nameWithType: ApplicationId.ApplicationId(Byte[],String,Version,String,String)
  fullName: System.ApplicationId.ApplicationId(Byte[],String,Version,String,String)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Version
  parent: System
  isExternal: true
  name: Version
  nameWithType: Version
  fullName: System.Version
- uid: System.ApplicationId.Copy
  parent: System.ApplicationId
  isExternal: false
  name: Copy()
  nameWithType: ApplicationId.Copy()
  fullName: System.ApplicationId.Copy()
- uid: System.ApplicationId
  parent: System
  isExternal: false
  name: ApplicationId
  nameWithType: ApplicationId
  fullName: System.ApplicationId
- uid: System.ApplicationId.Culture
  parent: System.ApplicationId
  isExternal: false
  name: Culture
  nameWithType: ApplicationId.Culture
  fullName: System.ApplicationId.Culture
- uid: System.ApplicationId.Equals(System.Object)
  parent: System.ApplicationId
  isExternal: false
  name: Equals(Object)
  nameWithType: ApplicationId.Equals(Object)
  fullName: System.ApplicationId.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ApplicationId.GetHashCode
  parent: System.ApplicationId
  isExternal: false
  name: GetHashCode()
  nameWithType: ApplicationId.GetHashCode()
  fullName: System.ApplicationId.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ApplicationId.Name
  parent: System.ApplicationId
  isExternal: false
  name: Name
  nameWithType: ApplicationId.Name
  fullName: System.ApplicationId.Name
- uid: System.ApplicationId.ProcessorArchitecture
  parent: System.ApplicationId
  isExternal: false
  name: ProcessorArchitecture
  nameWithType: ApplicationId.ProcessorArchitecture
  fullName: System.ApplicationId.ProcessorArchitecture
- uid: System.ApplicationId.PublicKeyToken
  parent: System.ApplicationId
  isExternal: false
  name: PublicKeyToken
  nameWithType: ApplicationId.PublicKeyToken
  fullName: System.ApplicationId.PublicKeyToken
- uid: System.ApplicationId.ToString
  parent: System.ApplicationId
  isExternal: false
  name: ToString()
  nameWithType: ApplicationId.ToString()
  fullName: System.ApplicationId.ToString()
- uid: System.ApplicationId.Version
  parent: System.ApplicationId
  isExternal: false
  name: Version
  nameWithType: ApplicationId.Version
  fullName: System.ApplicationId.Version
- uid: System.ApplicationId.#ctor*
  parent: System.ApplicationId
  isExternal: false
  name: ApplicationId
  nameWithType: ApplicationId.ApplicationId
- uid: System.ApplicationId.Copy*
  parent: System.ApplicationId
  isExternal: false
  name: Copy
  nameWithType: ApplicationId.Copy
- uid: System.ApplicationId.Culture*
  parent: System.ApplicationId
  isExternal: false
  name: Culture
  nameWithType: ApplicationId.Culture
- uid: System.ApplicationId.Equals*
  parent: System.ApplicationId
  isExternal: false
  name: Equals
  nameWithType: ApplicationId.Equals
- uid: System.ApplicationId.GetHashCode*
  parent: System.ApplicationId
  isExternal: false
  name: GetHashCode
  nameWithType: ApplicationId.GetHashCode
- uid: System.ApplicationId.Name*
  parent: System.ApplicationId
  isExternal: false
  name: Name
  nameWithType: ApplicationId.Name
- uid: System.ApplicationId.ProcessorArchitecture*
  parent: System.ApplicationId
  isExternal: false
  name: ProcessorArchitecture
  nameWithType: ApplicationId.ProcessorArchitecture
- uid: System.ApplicationId.PublicKeyToken*
  parent: System.ApplicationId
  isExternal: false
  name: PublicKeyToken
  nameWithType: ApplicationId.PublicKeyToken
- uid: System.ApplicationId.ToString*
  parent: System.ApplicationId
  isExternal: false
  name: ToString
  nameWithType: ApplicationId.ToString
- uid: System.ApplicationId.Version*
  parent: System.ApplicationId
  isExternal: false
  name: Version
  nameWithType: ApplicationId.Version
