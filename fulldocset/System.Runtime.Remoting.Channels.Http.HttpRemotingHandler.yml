### YamlMime:ManagedReference
items:
- uid: System.Runtime.Remoting.Channels.Http.HttpRemotingHandler
  id: HttpRemotingHandler
  children:
  - System.Runtime.Remoting.Channels.Http.HttpRemotingHandler.#ctor
  - System.Runtime.Remoting.Channels.Http.HttpRemotingHandler.#ctor(System.Type,System.Object)
  - System.Runtime.Remoting.Channels.Http.HttpRemotingHandler.IsReusable
  - System.Runtime.Remoting.Channels.Http.HttpRemotingHandler.ProcessRequest(System.Web.HttpContext)
  langs:
  - csharp
  name: HttpRemotingHandler
  nameWithType: HttpRemotingHandler
  fullName: System.Runtime.Remoting.Channels.Http.HttpRemotingHandler
  type: Class
  summary: "요청에서 HTTP remoting 채널을 전달 하는 ASP.NET 처리기를 구현 합니다."
  remarks: "사용자 지정 HTTP 처리기 특정, 미리 정의 된 유형의 HTTP 요청을 처리 합니다. 에 정의 된 실행 코드는 <xref:System.Web.IHttpHandler>이러한 특정 요청에 응답을 기본 ASP 또는 ASP.NET 웹 페이지 보다는 클래스,.</xref:System.Web.IHttpHandler> HTTP 처리기 저수준 요청 및 응답 IIS 웹 서버 서비스와 상호 작용 모드와 비슷한 기능을 제공 하면서 ISAPI 확장과 더 간단한 프로그래밍 모델을 사용 합니다."
  syntax:
    content: 'public class HttpRemotingHandler : System.Web.IHttpHandler'
  inheritance:
  - System.Object
  implements:
  - System.Web.IHttpHandler
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Http.HttpRemotingHandler.#ctor
  id: '#ctor'
  parent: System.Runtime.Remoting.Channels.Http.HttpRemotingHandler
  langs:
  - csharp
  name: HttpRemotingHandler()
  nameWithType: HttpRemotingHandler.HttpRemotingHandler()
  fullName: System.Runtime.Remoting.Channels.Http.HttpRemotingHandler.HttpRemotingHandler()
  type: Constructor
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Http
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Runtime.Remoting.Channels.Http.HttpRemotingHandler&quot;> </xref> 클래스 기본값을 사용 합니다."
  syntax:
    content: public HttpRemotingHandler ();
    parameters: []
  overload: System.Runtime.Remoting.Channels.Http.HttpRemotingHandler.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Http.HttpRemotingHandler.#ctor(System.Type,System.Object)
  id: '#ctor(System.Type,System.Object)'
  parent: System.Runtime.Remoting.Channels.Http.HttpRemotingHandler
  langs:
  - csharp
  name: HttpRemotingHandler(Type,Object)
  nameWithType: HttpRemotingHandler.HttpRemotingHandler(Type,Object)
  fullName: System.Runtime.Remoting.Channels.Http.HttpRemotingHandler.HttpRemotingHandler(Type,Object)
  type: Constructor
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Http
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Runtime.Remoting.Channels.Http.HttpRemotingHandler&quot;> </xref> 클래스 기본값을 사용 합니다."
  remarks: "기본값을 사용 하 여 <xref:System.Runtime.Remoting.Channels.Http.HttpRemotingHandler>생성자 대신.</xref:System.Runtime.Remoting.Channels.Http.HttpRemotingHandler>"
  syntax:
    content: public HttpRemotingHandler (Type type, object srvID);
    parameters:
    - id: type
      type: System.Type
      description: "이 생성자를 무시는 `type` 매개 변수입니다."
    - id: srvID
      type: System.Object
      description: "이 생성자를 무시는 `srvID` 매개 변수입니다."
  overload: System.Runtime.Remoting.Channels.Http.HttpRemotingHandler.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Http.HttpRemotingHandler.IsReusable
  id: IsReusable
  parent: System.Runtime.Remoting.Channels.Http.HttpRemotingHandler
  langs:
  - csharp
  name: IsReusable
  nameWithType: HttpRemotingHandler.IsReusable
  fullName: System.Runtime.Remoting.Channels.Http.HttpRemotingHandler.IsReusable
  type: Property
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Http
  summary: "다른 요청을 사용할 수 있는지 여부를 나타내는 부울 값을 가져옵니다는 <xref href=&quot;System.Runtime.Remoting.Channels.Http.HttpRemotingHandler&quot;> </xref>합니다."
  syntax:
    content: public bool IsReusable { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>모든 인스턴스에 대해 <xref href=&quot;System.Runtime.Remoting.Channels.Http.HttpRemotingHandler&quot;> </xref>합니다."
  overload: System.Runtime.Remoting.Channels.Http.HttpRemotingHandler.IsReusable*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Http.HttpRemotingHandler.ProcessRequest(System.Web.HttpContext)
  id: ProcessRequest(System.Web.HttpContext)
  parent: System.Runtime.Remoting.Channels.Http.HttpRemotingHandler
  langs:
  - csharp
  name: ProcessRequest(HttpContext)
  nameWithType: HttpRemotingHandler.ProcessRequest(HttpContext)
  fullName: System.Runtime.Remoting.Channels.Http.HttpRemotingHandler.ProcessRequest(HttpContext)
  type: Method
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Http
  summary: "현재 인스턴스에 의해 HTTP 웹 요청을 처리할 수 있도록 합니다."
  remarks: "<xref:System.Web.IHttpHandler.ProcessRequest%2A>메서드를 <xref:System.Web.IHttpHandler.ProcessRequest%2A?displayProperty=fullName>.</xref:System.Web.IHttpHandler.ProcessRequest%2A?displayProperty=fullName> 참조</xref:System.Web.IHttpHandler.ProcessRequest%2A> 하는 방법에 대 한 자세한 내용은"
  syntax:
    content: public void ProcessRequest (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "A <xref href=&quot;System.Web.HttpContext&quot;> </xref> 내장 서버 개체에 대 한 참조를 제공 하는 (예를 들어 <xref uid=&quot;langword_csharp_Request&quot; name=&quot;Request&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_Response&quot; name=&quot;Response&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_Session&quot; name=&quot;Session&quot; href=&quot;&quot;> </xref>, 및 <xref uid=&quot;langword_csharp_Server&quot; name=&quot;Server&quot; href=&quot;&quot;> </xref>) HTTP 요청을 처리 하는 데 사용 합니다."
  overload: System.Runtime.Remoting.Channels.Http.HttpRemotingHandler.ProcessRequest*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Runtime.Remoting.Channels.Http.HttpRemotingHandler.#ctor
  parent: System.Runtime.Remoting.Channels.Http.HttpRemotingHandler
  isExternal: false
  name: HttpRemotingHandler()
  nameWithType: HttpRemotingHandler.HttpRemotingHandler()
  fullName: System.Runtime.Remoting.Channels.Http.HttpRemotingHandler.HttpRemotingHandler()
- uid: System.Runtime.Remoting.Channels.Http.HttpRemotingHandler.#ctor(System.Type,System.Object)
  parent: System.Runtime.Remoting.Channels.Http.HttpRemotingHandler
  isExternal: false
  name: HttpRemotingHandler(Type,Object)
  nameWithType: HttpRemotingHandler.HttpRemotingHandler(Type,Object)
  fullName: System.Runtime.Remoting.Channels.Http.HttpRemotingHandler.HttpRemotingHandler(Type,Object)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Runtime.Remoting.Channels.Http.HttpRemotingHandler.IsReusable
  parent: System.Runtime.Remoting.Channels.Http.HttpRemotingHandler
  isExternal: false
  name: IsReusable
  nameWithType: HttpRemotingHandler.IsReusable
  fullName: System.Runtime.Remoting.Channels.Http.HttpRemotingHandler.IsReusable
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Runtime.Remoting.Channels.Http.HttpRemotingHandler.ProcessRequest(System.Web.HttpContext)
  parent: System.Runtime.Remoting.Channels.Http.HttpRemotingHandler
  isExternal: false
  name: ProcessRequest(HttpContext)
  nameWithType: HttpRemotingHandler.ProcessRequest(HttpContext)
  fullName: System.Runtime.Remoting.Channels.Http.HttpRemotingHandler.ProcessRequest(HttpContext)
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.Runtime.Remoting.Channels.Http.HttpRemotingHandler.#ctor*
  parent: System.Runtime.Remoting.Channels.Http.HttpRemotingHandler
  isExternal: false
  name: HttpRemotingHandler
  nameWithType: HttpRemotingHandler.HttpRemotingHandler
- uid: System.Runtime.Remoting.Channels.Http.HttpRemotingHandler.IsReusable*
  parent: System.Runtime.Remoting.Channels.Http.HttpRemotingHandler
  isExternal: false
  name: IsReusable
  nameWithType: HttpRemotingHandler.IsReusable
- uid: System.Runtime.Remoting.Channels.Http.HttpRemotingHandler.ProcessRequest*
  parent: System.Runtime.Remoting.Channels.Http.HttpRemotingHandler
  isExternal: false
  name: ProcessRequest
  nameWithType: HttpRemotingHandler.ProcessRequest
