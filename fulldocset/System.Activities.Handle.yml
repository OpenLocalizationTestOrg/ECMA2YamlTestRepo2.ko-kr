### YamlMime:ManagedReference
items:
- uid: System.Activities.Handle
  id: Handle
  children:
  - System.Activities.Handle.#ctor
  - System.Activities.Handle.ExecutionPropertyName
  - System.Activities.Handle.OnInitialize(System.Activities.HandleInitializationContext)
  - System.Activities.Handle.OnUninitialize(System.Activities.HandleInitializationContext)
  - System.Activities.Handle.Owner
  - System.Activities.Handle.ThrowIfUninitialized
  langs:
  - csharp
  name: Handle
  nameWithType: Handle
  fullName: System.Activities.Handle
  type: Class
  summary: "해당 수명이 워크플로 런타임에 의해 제어 되는 유형을 나타냅니다."
  remarks: "핸들에서 파생 된 형식 워크플로 런타임에 의해 제어의 수명이 연결 합니다. 핸들 형식의 워크플로 변수에 런타임이 필수 기본 생성자를 사용 하 여 형식의 인스턴스를 만드는에 할당 된 <xref:System.Activities.Variable>, 및 호출 <xref:System.Activities.Handle.OnInitialize%2A>환경을 초기화할 때.</xref:System.Activities.Handle.OnInitialize%2A> </xref:System.Activities.Variable> 변수 범위를 벗어나면 <xref:System.Activities.Handle.OnUninitialize%2A>호출 됩니다.</xref:System.Activities.Handle.OnUninitialize%2A>"
  syntax:
    content: >-
      [System.Runtime.Serialization.DataContract]

      public abstract class Handle
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Activities.Handle.#ctor
  id: '#ctor'
  parent: System.Activities.Handle
  langs:
  - csharp
  name: Handle()
  nameWithType: Handle.Handle()
  fullName: System.Activities.Handle.Handle()
  type: Constructor
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Activities.Handle&quot;> </xref> 클래스입니다."
  remarks: "파생 된 클래스 <xref:System.Activities.Handle>기본 생성자를 제공 해야 합니다.</xref:System.Activities.Handle>"
  syntax:
    content: protected Handle ();
    parameters: []
  overload: System.Activities.Handle.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Handle.ExecutionPropertyName
  id: ExecutionPropertyName
  parent: System.Activities.Handle
  langs:
  - csharp
  name: ExecutionPropertyName
  nameWithType: Handle.ExecutionPropertyName
  fullName: System.Activities.Handle.ExecutionPropertyName
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "이 사용 될 이름을 가져옵니다 <xref href=&quot;System.Activities.Handle&quot;> </xref> 활동의 실행 속성에 추가 합니다."
  syntax:
    content: public string ExecutionPropertyName { get; }
    return:
      type: System.String
      description: "<xref:System.Type.FullName*>.</xref:System.Type.FullName*> 제공 된 대로 파생 된 형식 이름"
  overload: System.Activities.Handle.ExecutionPropertyName*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Handle.OnInitialize(System.Activities.HandleInitializationContext)
  id: OnInitialize(System.Activities.HandleInitializationContext)
  parent: System.Activities.Handle
  langs:
  - csharp
  name: OnInitialize(HandleInitializationContext)
  nameWithType: Handle.OnInitialize(HandleInitializationContext)
  fullName: System.Activities.Handle.OnInitialize(HandleInitializationContext)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "포함 하는 환경을 때 워크플로 런타임에 의해 호출 된 <xref href=&quot;System.Activities.Handle&quot;> </xref> 초기화 됩니다."
  syntax:
    content: protected virtual void OnInitialize (System.Activities.HandleInitializationContext context);
    parameters:
    - id: context
      type: System.Activities.HandleInitializationContext
      description: "핸들이 생성 되는 환경입니다."
  overload: System.Activities.Handle.OnInitialize*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Handle.OnUninitialize(System.Activities.HandleInitializationContext)
  id: OnUninitialize(System.Activities.HandleInitializationContext)
  parent: System.Activities.Handle
  langs:
  - csharp
  name: OnUninitialize(HandleInitializationContext)
  nameWithType: Handle.OnUninitialize(HandleInitializationContext)
  fullName: System.Activities.Handle.OnUninitialize(HandleInitializationContext)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "워크플로 런타임에 의해 호출 때는 <xref href=&quot;System.Activities.Variable&quot;> </xref> 에 대 한는 <xref href=&quot;System.Activities.Handle&quot;> </xref> 범위를 벗어나게 합니다."
  syntax:
    content: protected virtual void OnUninitialize (System.Activities.HandleInitializationContext context);
    parameters:
    - id: context
      type: System.Activities.HandleInitializationContext
      description: "핸들이 작성 된 환경입니다."
  overload: System.Activities.Handle.OnUninitialize*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Handle.Owner
  id: Owner
  parent: System.Activities.Handle
  langs:
  - csharp
  name: Owner
  nameWithType: Handle.Owner
  fullName: System.Activities.Handle.Owner
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "가져옵니다는 <xref href=&quot;System.Activities.ActivityInstance&quot;> </xref> 를 포함 하는 <xref href=&quot;System.Activities.Variable&quot;> </xref> 를 포함 하는 <xref href=&quot;System.Activities.Handle&quot;> </xref>합니다."
  syntax:
    content: public System.Activities.ActivityInstance Owner { get; }
    return:
      type: System.Activities.ActivityInstance
      description: "포함 된 활동 인스턴스는 <xref href=&quot;System.Activities.Variable&quot;> </xref> 를 포함 하는 <xref href=&quot;System.Activities.Handle&quot;> </xref>합니다."
  overload: System.Activities.Handle.Owner*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Handle.ThrowIfUninitialized
  id: ThrowIfUninitialized
  parent: System.Activities.Handle
  langs:
  - csharp
  name: ThrowIfUninitialized()
  nameWithType: Handle.ThrowIfUninitialized()
  fullName: System.Activities.Handle.ThrowIfUninitialized()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "throw 한 <xref:System.InvalidOperationException>경우는 <xref href=&quot;System.Activities.Handle&quot;> </xref> 초기화 되지 않았습니다.</xref:System.InvalidOperationException>"
  remarks: "ThrowIfUninitialized 메서드 또는 유효 하지 않은 파생된 클래스의 속성에서 호출 하는 편리한 방법을 사용자 지정 핸들 파생 클래스 작성자에 게 하는 경우는 <xref:System.Activities.Handle>초기화 되지 않았습니다.</xref:System.Activities.Handle>"
  syntax:
    content: protected void ThrowIfUninitialized ();
    parameters: []
  overload: System.Activities.Handle.ThrowIfUninitialized*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Activities.Handle.#ctor
  parent: System.Activities.Handle
  isExternal: false
  name: Handle()
  nameWithType: Handle.Handle()
  fullName: System.Activities.Handle.Handle()
- uid: System.Activities.Handle.ExecutionPropertyName
  parent: System.Activities.Handle
  isExternal: false
  name: ExecutionPropertyName
  nameWithType: Handle.ExecutionPropertyName
  fullName: System.Activities.Handle.ExecutionPropertyName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Activities.Handle.OnInitialize(System.Activities.HandleInitializationContext)
  parent: System.Activities.Handle
  isExternal: false
  name: OnInitialize(HandleInitializationContext)
  nameWithType: Handle.OnInitialize(HandleInitializationContext)
  fullName: System.Activities.Handle.OnInitialize(HandleInitializationContext)
- uid: System.Activities.HandleInitializationContext
  parent: System.Activities
  isExternal: false
  name: HandleInitializationContext
  nameWithType: HandleInitializationContext
  fullName: System.Activities.HandleInitializationContext
- uid: System.Activities.Handle.OnUninitialize(System.Activities.HandleInitializationContext)
  parent: System.Activities.Handle
  isExternal: false
  name: OnUninitialize(HandleInitializationContext)
  nameWithType: Handle.OnUninitialize(HandleInitializationContext)
  fullName: System.Activities.Handle.OnUninitialize(HandleInitializationContext)
- uid: System.Activities.Handle.Owner
  parent: System.Activities.Handle
  isExternal: false
  name: Owner
  nameWithType: Handle.Owner
  fullName: System.Activities.Handle.Owner
- uid: System.Activities.ActivityInstance
  parent: System.Activities
  isExternal: false
  name: ActivityInstance
  nameWithType: ActivityInstance
  fullName: System.Activities.ActivityInstance
- uid: System.Activities.Handle.ThrowIfUninitialized
  parent: System.Activities.Handle
  isExternal: false
  name: ThrowIfUninitialized()
  nameWithType: Handle.ThrowIfUninitialized()
  fullName: System.Activities.Handle.ThrowIfUninitialized()
- uid: System.Activities.Handle.#ctor*
  parent: System.Activities.Handle
  isExternal: false
  name: Handle
  nameWithType: Handle.Handle
- uid: System.Activities.Handle.ExecutionPropertyName*
  parent: System.Activities.Handle
  isExternal: false
  name: ExecutionPropertyName
  nameWithType: Handle.ExecutionPropertyName
- uid: System.Activities.Handle.OnInitialize*
  parent: System.Activities.Handle
  isExternal: false
  name: OnInitialize
  nameWithType: Handle.OnInitialize
- uid: System.Activities.Handle.OnUninitialize*
  parent: System.Activities.Handle
  isExternal: false
  name: OnUninitialize
  nameWithType: Handle.OnUninitialize
- uid: System.Activities.Handle.Owner*
  parent: System.Activities.Handle
  isExternal: false
  name: Owner
  nameWithType: Handle.Owner
- uid: System.Activities.Handle.ThrowIfUninitialized*
  parent: System.Activities.Handle
  isExternal: false
  name: ThrowIfUninitialized
  nameWithType: Handle.ThrowIfUninitialized
