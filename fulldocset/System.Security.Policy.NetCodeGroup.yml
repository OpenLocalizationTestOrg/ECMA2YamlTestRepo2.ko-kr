### YamlMime:ManagedReference
items:
- uid: System.Security.Policy.NetCodeGroup
  id: NetCodeGroup
  children:
  - System.Security.Policy.NetCodeGroup.#ctor(System.Security.Policy.IMembershipCondition)
  - System.Security.Policy.NetCodeGroup.AbsentOriginScheme
  - System.Security.Policy.NetCodeGroup.AddConnectAccess(System.String,System.Security.Policy.CodeConnectAccess)
  - System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme
  - System.Security.Policy.NetCodeGroup.AttributeString
  - System.Security.Policy.NetCodeGroup.Copy
  - System.Security.Policy.NetCodeGroup.CreateXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)
  - System.Security.Policy.NetCodeGroup.Equals(System.Object)
  - System.Security.Policy.NetCodeGroup.GetConnectAccessRules
  - System.Security.Policy.NetCodeGroup.GetHashCode
  - System.Security.Policy.NetCodeGroup.MergeLogic
  - System.Security.Policy.NetCodeGroup.ParseXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)
  - System.Security.Policy.NetCodeGroup.PermissionSetName
  - System.Security.Policy.NetCodeGroup.ResetConnectAccess
  - System.Security.Policy.NetCodeGroup.Resolve(System.Security.Policy.Evidence)
  - System.Security.Policy.NetCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)
  langs:
  - csharp
  name: NetCodeGroup
  nameWithType: NetCodeGroup
  fullName: System.Security.Policy.NetCodeGroup
  type: Class
  summary: "어셈블리 다운로드 사이트에 웹 권한을 부여 합니다. 이 클래스는 상속 될 수 없습니다."
  remarks: "코드 그룹은 코드 액세스 보안 정책의 구성 요소입니다. 각 정책 수준은 하나 이상의 자식 코드 그룹을 가질 수 있는 루트 코드 그룹으로 구성 합니다. 각 자식 코드 그룹에는 고유한 자식 코드 그룹; 가질 수 있습니다. 이 동작은 임의 개수의 트리 형식의 수준까지 확장 됩니다. 각 코드 그룹에 지정 된 어셈블리가 해당 어셈블리에 대 한 증거를 기반으로 하는 그룹에 속하는지 여부를 확인 하는 멤버 조건이 있습니다. 멤버 자격 조건이 일치 자신의 자식 코드 그룹을 함께 지정된 된 어셈블리 코드 그룹에만 코드 액세스 보안 정책을 적용 합니다.       NetCodeGroup의 것과 동일한 병합 의미 체계에 <xref:System.Security.Policy.UnionCodeGroup>;의 합집합 형성는 <xref:System.Security.Policy.PolicyStatement>일치 하는 모든 자식 개체 코드 그룹 및 <xref:System.Security.Policy.PolicyStatement>입력 으로부터 생성 <xref:System.Security.Policy.Url>증거.</xref:System.Security.Policy.Url> </xref:System.Security.Policy.PolicyStatement> </xref:System.Security.Policy.PolicyStatement> </xref:System.Security.Policy.UnionCodeGroup> 그러나 NetCodeGroup 반환 코드를 있는 실행; 사이트에 연결 액세스를 부여 하는 동적으로 계산 된 <xref:System.Net.WebPermission>를 포함 하는 사용 권한 <xref:System.Security.Policy.UnionCodeGroup>정적 사용 권한 집합을 반환 합니다.</xref:System.Security.Policy.UnionCodeGroup> </xref:System.Net.WebPermission>       NetCodeGroup을 만든 다음 표에 표시 된 기본 연결 액세스 규칙이 포함 되어 있습니다.      | URI 체계 | 규칙 |   |----------------|----------|   | 파일 | 연결 원본 서버에 액세스할 수 없습니다. |   | http | 원본 포트를 사용 하 여 HTTP 및 HTTPS 액세스가 허용 됩니다. |   | https | 원본 포트를 사용 하 여 HTTPS 액세스가 허용 됩니다. |       구성표 및 코드에서 전달 하 여 원본 사이트에 다시 연결할 때 사용할 수 있는 포트를 제어할 수는 <xref:System.Security.Policy.CodeConnectAccess>개체는 적절 한 <xref:System.Security.Policy.CodeConnectAccess.Scheme%2A>및 <xref:System.Security.Policy.CodeConnectAccess.Port%2A>속성 값을 <xref:System.Security.Policy.NetCodeGroup.AddConnectAccess%2A>메서드.</xref:System.Security.Policy.NetCodeGroup.AddConnectAccess%2A> </xref:System.Security.Policy.CodeConnectAccess.Port%2A> </xref:System.Security.Policy.CodeConnectAccess.Scheme%2A> </xref:System.Security.Policy.CodeConnectAccess> 원래 체계 증거에 없으면 또는 지정 하 여 인식 되지 않습니다 있을 때 적용 되는 연결 액세스 규칙을 만들 수 있습니다 <xref:System.Security.Policy.NetCodeGroup.AbsentOriginScheme>(&quot;&quot;) 스키마.</xref:System.Security.Policy.NetCodeGroup.AbsentOriginScheme> 지정 하 여 일치 하는 스키마를 가진 연결 액세스 규칙이 없는 있을 때 적용 되는 연결 액세스 규칙을 만들 수도 있습니다 <xref:System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme>(&quot;*&quot;) 스키마.</xref:System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme>      > [!NOTE] > 코드는 증명 정보로 URI 체계를 전송 하지 않은, 하는 경우 액세스가 모든 체계를 사용 하 여 원본 사이트에 다시 허용 됩니다."
  example:
  - "The following code example demonstrates creating a NetCodeGroup and adding <xref:System.Security.Policy.CodeConnectAccess> objects for code downloaded using the HTTP scheme.  \n  \n [!code-cs[NclCodeGroup#3](~/add/codesnippet/csharp/t-system.security.policy_8_1.cs)]\n [!code-cpp[NclCodeGroup#3](~/add/codesnippet/cpp/t-system.security.policy_8_1.cpp)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class NetCodeGroup : System.Security.Policy.CodeGroup
  inheritance:
  - System.Object
  - System.Security.Policy.CodeGroup
  implements: []
  inheritedMembers:
  - System.Security.Policy.CodeGroup.AddChild(System.Security.Policy.CodeGroup)
  - System.Security.Policy.CodeGroup.Children
  - System.Security.Policy.CodeGroup.Description
  - System.Security.Policy.CodeGroup.Equals(System.Security.Policy.CodeGroup,System.Boolean)
  - System.Security.Policy.CodeGroup.FromXml(System.Security.SecurityElement)
  - System.Security.Policy.CodeGroup.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)
  - System.Security.Policy.CodeGroup.MembershipCondition
  - System.Security.Policy.CodeGroup.Name
  - System.Security.Policy.CodeGroup.PolicyStatement
  - System.Security.Policy.CodeGroup.RemoveChild(System.Security.Policy.CodeGroup)
  - System.Security.Policy.CodeGroup.ToXml
  - System.Security.Policy.CodeGroup.ToXml(System.Security.Policy.PolicyLevel)
  platform:
  - net462
- uid: System.Security.Policy.NetCodeGroup.#ctor(System.Security.Policy.IMembershipCondition)
  id: '#ctor(System.Security.Policy.IMembershipCondition)'
  parent: System.Security.Policy.NetCodeGroup
  langs:
  - csharp
  name: NetCodeGroup(IMembershipCondition)
  nameWithType: NetCodeGroup.NetCodeGroup(IMembershipCondition)
  fullName: System.Security.Policy.NetCodeGroup.NetCodeGroup(IMembershipCondition)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Security.Policy.NetCodeGroup&quot;> </xref> 클래스입니다."
  remarks: "경우는 <xref:System.Security.Policy.NetCodeGroup>은 다음 표에 표시 된 기본 연결 액세스 규칙이 포함 만들어지면.</xref:System.Security.Policy.NetCodeGroup>      | 구성표 | 규칙 |   |------------|----------|   | 파일 | 연결 원본 서버에 액세스할 수 없습니다. |   | http | 원본 포트를 사용 하 여 HTTP 및 HTTPS 액세스가 허용 됩니다. |   | https | 원본 포트를 사용 하 여 HTTPS 액세스가 허용 됩니다. |"
  example:
  - "The following code example demonstrates creating a <xref:System.Security.Policy.NetCodeGroup> and adding <xref:System.Security.Policy.CodeConnectAccess> objects for code downloaded using the HTTP scheme.  \n  \n [!code-cs[NclCodeGroup#3](~/add/codesnippet/csharp/e7170b34-662f-4231-84e8-_1.cs)]\n [!code-cpp[NclCodeGroup#3](~/add/codesnippet/cpp/e7170b34-662f-4231-84e8-_1.cpp)]"
  syntax:
    content: public NetCodeGroup (System.Security.Policy.IMembershipCondition membershipCondition);
    parameters:
    - id: membershipCondition
      type: System.Security.Policy.IMembershipCondition
      description: "이 코드 그룹 코드 액세스 보안 정책 적용 여부를 결정 하는 증거를 테스트 하는 멤버 자격 조건입니다."
  overload: System.Security.Policy.NetCodeGroup.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>membershipCondition</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "종류는 <code> membershipCondition </code> 매개 변수가 올바르지 않습니다."
  platform:
  - net462
- uid: System.Security.Policy.NetCodeGroup.AbsentOriginScheme
  id: AbsentOriginScheme
  parent: System.Security.Policy.NetCodeGroup
  langs:
  - csharp
  name: AbsentOriginScheme
  nameWithType: NetCodeGroup.AbsentOriginScheme
  fullName: System.Security.Policy.NetCodeGroup.AbsentOriginScheme
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "알 수 없거나 인식할 수 없는 원본 스키마를 가진 코드에 대 한 연결 액세스를 지정 하는 데 사용 되는 값을 포함 합니다."
  remarks: "호출할 때는 <xref:System.Security.Policy.NetCodeGroup.AddConnectAccess%2A>메서드는 스키마와 연결 된 지정 <xref:System.Security.Policy.CodeConnectAccess>개체입니다.</xref:System.Security.Policy.CodeConnectAccess> </xref:System.Security.Policy.NetCodeGroup.AddConnectAccess%2A> 모든 <xref:System.Security.Policy.CodeConnectAccess>에 추가 하는 개체는 <xref:System.Security.Policy.NetCodeGroup>코드의 원래 체계가, 증명 정보에 나타나지 않습니다. 또는에서 인식 하는 스키마가 아닙니다 때에 적용 됩니다 AbsentOriginScheme를 사용 하 여 원본 스키마의 <xref:System.Security.Policy.NetCodeGroup>개체.</xref:System.Security.Policy.NetCodeGroup> </xref:System.Security.Policy.NetCodeGroup> </xref:System.Security.Policy.CodeConnectAccess>       지정 하는 <xref:System.Security.Policy.CodeConnectAccess>코드의 원래 체계가 맞지 않을 때 현재 추가 된 원래 체계 집합에 포함 된 스키마 중 하나를 사용 하도록 개체 <xref:System.Security.Policy.NetCodeGroup>개체를 가져오려면는 <xref:System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme>값.</xref:System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme> </xref:System.Security.Policy.NetCodeGroup> </xref:System.Security.Policy.CodeConnectAccess>       AbsentOriginScheme 필드의 값은 빈 문자열 (&quot;&quot;)."
  syntax:
    content: public static readonly string AbsentOriginScheme;
    return:
      type: System.String
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.NetCodeGroup.AddConnectAccess(System.String,System.Security.Policy.CodeConnectAccess)
  id: AddConnectAccess(System.String,System.Security.Policy.CodeConnectAccess)
  parent: System.Security.Policy.NetCodeGroup
  langs:
  - csharp
  name: AddConnectAccess(String,CodeConnectAccess)
  nameWithType: NetCodeGroup.AddConnectAccess(String,CodeConnectAccess)
  fullName: System.Security.Policy.NetCodeGroup.AddConnectAccess(String,CodeConnectAccess)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "현재 코드 그룹에 지정된 된 연결 액세스를 추가합니다."
  remarks: "여러 개 추가할 수 <xref:System.Security.Policy.CodeConnectAccess>동일한 컴퓨터에 대해 개체 `origin scheme`.</xref:System.Security.Policy.CodeConnectAccess> 경우는 `origin scheme` 이미 하나 이상의 관련 <xref:System.Security.Policy.CodeConnectAccess>지정 하는 개체로 `null` 에 대 한 `connectAccess` 영향을 주지 않습니다.</xref:System.Security.Policy.CodeConnectAccess> 원래 체계가 연결 되어 있지 않는 경우 <xref:System.Security.Policy.CodeConnectAccess>지정 하는 개체로 `null` 에 대 한 `connectAccess` 일치 하는 원래 체계를 사용 하 여 코드를 방지 `originScheme` 원래 서버에 액세스 하지 못하도록 합니다.</xref:System.Security.Policy.CodeConnectAccess>"
  example:
  - "The following code example demonstrates creating and adding <xref:System.Security.Policy.CodeConnectAccess> objects to a <xref:System.Security.Policy.NetCodeGroup>.  \n  \n [!code-cs[NclCodeGroup#3](~/add/codesnippet/csharp/c09efa70-70d7-4f2a-aa3b-_1.cs)]\n [!code-cpp[NclCodeGroup#3](~/add/codesnippet/cpp/c09efa70-70d7-4f2a-aa3b-_1.cpp)]"
  syntax:
    content: public void AddConnectAccess (string originScheme, System.Security.Policy.CodeConnectAccess connectAccess);
    parameters:
    - id: originScheme
      type: System.String
      description: "A <xref:System.String>체계 코드의 체계에 대해 일치를 포함 합니다.</xref:System.String>"
    - id: connectAccess
      type: System.Security.Policy.CodeConnectAccess
      description: "A <xref href=&quot;System.Security.Policy.CodeConnectAccess&quot;> </xref> 구성표 및 포트 코드 원래 서버에 다시 연결 하는 데 사용할 수를 지정 하는 합니다."
  overload: System.Security.Policy.NetCodeGroup.AddConnectAccess*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>originScheme</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>originScheme</code>구성표에 허용 되지 않는 문자가 들어 있습니다.       -or-       <code>originScheme</code> = <xref href=&quot;System.Security.Policy.NetCodeGroup.AbsentOriginScheme&quot;></xref> and <code>connectAccess</code> specifies <xref href=&quot;System.Security.Policy.CodeConnectAccess.OriginScheme&quot;></xref> as its scheme."
  platform:
  - net462
- uid: System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme
  id: AnyOtherOriginScheme
  parent: System.Security.Policy.NetCodeGroup
  langs:
  - csharp
  name: AnyOtherOriginScheme
  nameWithType: NetCodeGroup.AnyOtherOriginScheme
  fullName: System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "다른 지정 되지 않은 원래 체계를 지정 하는 데 사용 되는 값을 포함 합니다."
  remarks: "호출할 때는 <xref:System.Security.Policy.NetCodeGroup.AddConnectAccess%2A>메서드는 스키마와 연결 된 지정 <xref:System.Security.Policy.CodeConnectAccess>개체입니다.</xref:System.Security.Policy.CodeConnectAccess> </xref:System.Security.Policy.NetCodeGroup.AddConnectAccess%2A> AnyOtherOriginScheme 필드의 값을 사용 하 여 지정 된 <xref:System.Security.Policy.CodeConnectAccess>현재 추가 된 원래 체계 집합에 명시적으로 포함 되지 않은 스키마에 대해 사용 해야 하는 개체 <xref:System.Security.Policy.NetCodeGroup>개체입니다.</xref:System.Security.Policy.NetCodeGroup> </xref:System.Security.Policy.CodeConnectAccess>       <xref:System.Security.Policy.CodeConnectAccess>AnyOtherOriginScheme 필드와 지정 된 개체는 코드의 원래 체계와 일치 하지 않으면 현재 추가 된 원래 체계 집합에 포함 된 스키마 중 하나에 사용 됩니다 <xref:System.Security.Policy.NetCodeGroup>개체입니다.</xref:System.Security.Policy.NetCodeGroup> </xref:System.Security.Policy.CodeConnectAccess>       지정 하는 <xref:System.Security.Policy.CodeConnectAccess>사용 하 여 코드의 원래 체계가 증명 정보에 사용할 수 없거나 형식이 아닌 경우 적용할 개체는 <xref:System.Security.Policy.NetCodeGroup.AbsentOriginScheme>값.</xref:System.Security.Policy.NetCodeGroup.AbsentOriginScheme> </xref:System.Security.Policy.CodeConnectAccess>       AnyOtherOriginScheme 필드의 값은 &quot;*&quot;입니다."
  syntax:
    content: public static readonly string AnyOtherOriginScheme;
    return:
      type: System.String
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.NetCodeGroup.AttributeString
  id: AttributeString
  parent: System.Security.Policy.NetCodeGroup
  langs:
  - csharp
  name: AttributeString
  nameWithType: NetCodeGroup.AttributeString
  fullName: System.Security.Policy.NetCodeGroup.AttributeString
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "코드 그룹에 대 한 정책 설명의 특성의 문자열 표현을 가져옵니다."
  syntax:
    content: public override string AttributeString { get; }
    return:
      type: System.String
      description: "Always <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Security.Policy.NetCodeGroup.AttributeString*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.NetCodeGroup.Copy
  id: Copy
  parent: System.Security.Policy.NetCodeGroup
  langs:
  - csharp
  name: Copy()
  nameWithType: NetCodeGroup.Copy()
  fullName: System.Security.Policy.NetCodeGroup.Copy()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "현재 코드 그룹의 전체 복사본을 만듭니다."
  remarks: "이 메서드는 코드 그룹에 포함 된 모든 개체의 복사본이는 의미 하는 코드 그룹의 전체 복사본을 만듭니다."
  syntax:
    content: public override System.Security.Policy.CodeGroup Copy ();
    parameters: []
    return:
      type: System.Security.Policy.CodeGroup
      description: "해당 멤버 자격 조건 및 자식 코드 그룹을 포함 하 여 현재 코드 그룹의 동일한 복사본입니다."
  overload: System.Security.Policy.NetCodeGroup.Copy*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.NetCodeGroup.CreateXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)
  id: CreateXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)
  parent: System.Security.Policy.NetCodeGroup
  langs:
  - csharp
  name: CreateXml(SecurityElement,PolicyLevel)
  nameWithType: NetCodeGroup.CreateXml(SecurityElement,PolicyLevel)
  fullName: System.Security.Policy.NetCodeGroup.CreateXml(SecurityElement,PolicyLevel)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  syntax:
    content: protected override void CreateXml (System.Security.SecurityElement element, System.Security.Policy.PolicyLevel level);
    parameters:
    - id: element
      type: System.Security.SecurityElement
      description: "추가할 수 있습니다."
    - id: level
      type: System.Security.Policy.PolicyLevel
      description: "추가할 수 있습니다."
  overload: System.Security.Policy.NetCodeGroup.CreateXml*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.NetCodeGroup.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Security.Policy.NetCodeGroup
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: NetCodeGroup.Equals(Object)
  fullName: System.Security.Policy.NetCodeGroup.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "지정된 된 코드 그룹이 현재 코드 그룹에 해당 하는지를 결정 합니다."
  remarks: "다음 데이터는&2;의 동일성을 결정 하는 데 사용 됩니다 <xref:System.Security.Policy.NetCodeGroup>개체:- <xref:System.Security.Policy.CodeGroup.Name%2A>및 <xref:System.Security.Policy.CodeGroup.Description%2A>속성.</xref:System.Security.Policy.CodeGroup.Description%2A> </xref:System.Security.Policy.CodeGroup.Name%2A> </xref:System.Security.Policy.NetCodeGroup>      - <xref:System.Security.Policy.CodeGroup.MembershipCondition%2A>속성.</xref:System.Security.Policy.CodeGroup.MembershipCondition%2A>      원본 스키마 및 연결 된-집합이 <xref:System.Security.Policy.CodeConnectAccess>개체입니다.</xref:System.Security.Policy.CodeConnectAccess>"
  syntax:
    content: public override bool Equals (object o);
    parameters:
    - id: o
      type: System.Object
      description: "<xref href=&quot;System.Security.Policy.NetCodeGroup&quot;> </xref> 현재 코드 그룹와 비교할 개체입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>지정 된 코드 그룹은 현재 코드 그룹에 해당 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Security.Policy.NetCodeGroup.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.NetCodeGroup.GetConnectAccessRules
  id: GetConnectAccessRules
  parent: System.Security.Policy.NetCodeGroup
  langs:
  - csharp
  name: GetConnectAccessRules()
  nameWithType: NetCodeGroup.GetConnectAccessRules()
  fullName: System.Security.Policy.NetCodeGroup.GetConnectAccessRules()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "현재 코드 그룹에 대 한 연결 액세스 정보를 가져옵니다."
  remarks: "각 사전 항목에는 <xref:System.Collections.DictionaryEntry.Key%2A>속성 값은 원래 체계 및 <xref:System.Collections.DictionaryEntry.Value%2A>속성 값이 배열을 관련 <xref:System.Security.Policy.CodeConnectAccess>개체.</xref:System.Security.Policy.CodeConnectAccess> </xref:System.Collections.DictionaryEntry.Value%2A> </xref:System.Collections.DictionaryEntry.Key%2A> 있는 경우 더 연결 <xref:System.Security.Policy.CodeConnectAccess>개체 <xref:System.Collections.DictionaryEntry.Value%2A?displayProperty=fullName>빈 배열을 반환 합니다.</xref:System.Collections.DictionaryEntry.Value%2A?displayProperty=fullName> </xref:System.Security.Policy.CodeConnectAccess>"
  example:
  - "The following code example demonstrates displaying the connection access rules for a <xref:System.Security.Policy.NetCodeGroup> object.  \n  \n [!code-cs[NclCodeGroup#8](~/add/codesnippet/csharp/m-system.security.policy_21_1.cs)]\n [!code-cpp[NclCodeGroup#8](~/add/codesnippet/cpp/m-system.security.policy_21_1.cpp)]"
  syntax:
    content: public System.Collections.DictionaryEntry[] GetConnectAccessRules ();
    parameters: []
    return:
      type: System.Collections.DictionaryEntry[]
      description: "A <xref:System.Collections.DictionaryEntry>연결 액세스 정보를 포함 된 배열.</xref:System.Collections.DictionaryEntry>"
  overload: System.Security.Policy.NetCodeGroup.GetConnectAccessRules*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.NetCodeGroup.GetHashCode
  id: GetHashCode
  parent: System.Security.Policy.NetCodeGroup
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: NetCodeGroup.GetHashCode()
  fullName: System.Security.Policy.NetCodeGroup.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "현재 코드 그룹의 해시 코드를 가져옵니다."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "현재 코드 그룹의 해시 코드입니다."
  overload: System.Security.Policy.NetCodeGroup.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.NetCodeGroup.MergeLogic
  id: MergeLogic
  parent: System.Security.Policy.NetCodeGroup
  langs:
  - csharp
  name: MergeLogic
  nameWithType: NetCodeGroup.MergeLogic
  fullName: System.Security.Policy.NetCodeGroup.MergeLogic
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "그룹 병합에 사용할 논리를를 가져옵니다."
  syntax:
    content: public override string MergeLogic { get; }
    return:
      type: System.String
      description: "&quot;Union&quot; 문자열입니다."
  overload: System.Security.Policy.NetCodeGroup.MergeLogic*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.NetCodeGroup.ParseXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)
  id: ParseXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)
  parent: System.Security.Policy.NetCodeGroup
  langs:
  - csharp
  name: ParseXml(SecurityElement,PolicyLevel)
  nameWithType: NetCodeGroup.ParseXml(SecurityElement,PolicyLevel)
  fullName: System.Security.Policy.NetCodeGroup.ParseXml(SecurityElement,PolicyLevel)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  syntax:
    content: protected override void ParseXml (System.Security.SecurityElement e, System.Security.Policy.PolicyLevel level);
    parameters:
    - id: e
      type: System.Security.SecurityElement
      description: "추가할 수 있습니다."
    - id: level
      type: System.Security.Policy.PolicyLevel
      description: "추가할 수 있습니다."
  overload: System.Security.Policy.NetCodeGroup.ParseXml*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.NetCodeGroup.PermissionSetName
  id: PermissionSetName
  parent: System.Security.Policy.NetCodeGroup
  langs:
  - csharp
  name: PermissionSetName
  nameWithType: NetCodeGroup.PermissionSetName
  fullName: System.Security.Policy.NetCodeGroup.PermissionSetName
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "이름을 가져옵니다는 <xref href=&quot;System.Security.NamedPermissionSet&quot;> </xref> 코드 그룹에 대 한 합니다."
  syntax:
    content: public override string PermissionSetName { get; }
    return:
      type: System.String
      description: "항상 문자열 &quot;같은 사이트 웹.&quot;"
  overload: System.Security.Policy.NetCodeGroup.PermissionSetName*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.NetCodeGroup.ResetConnectAccess
  id: ResetConnectAccess
  parent: System.Security.Policy.NetCodeGroup
  langs:
  - csharp
  name: ResetConnectAccess()
  nameWithType: NetCodeGroup.ResetConnectAccess()
  fullName: System.Security.Policy.NetCodeGroup.ResetConnectAccess()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "현재 코드 그룹에 대 한 연결 액세스 정보를 모두 제거 합니다."
  remarks: "이 메서드를 사용 하 여 시스템 제공 하는 기본 연결 액세스 규칙을 제거 합니다.       기본 규칙은 다음 표에 표시 됩니다.      | 구성표 | 규칙 |   |------------|----------|   | 파일 | 연결 원본 서버에 액세스할 수 없습니다. |   | http | 원본 포트를 사용 하 여 HTTP 및 HTTPS 액세스가 허용 됩니다. |   | https | 원본 포트를 사용 하 여 HTTPS 액세스가 허용 됩니다. |"
  example:
  - "The following code example demonstrates calling this method to remove the default code access connection rules.  \n  \n [!code-cs[NclCodeGroup#3](~/add/codesnippet/csharp/m-system.security.policy_32_1.cs)]\n [!code-cpp[NclCodeGroup#3](~/add/codesnippet/cpp/m-system.security.policy_32_1.cpp)]"
  syntax:
    content: public void ResetConnectAccess ();
    parameters: []
  overload: System.Security.Policy.NetCodeGroup.ResetConnectAccess*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.NetCodeGroup.Resolve(System.Security.Policy.Evidence)
  id: Resolve(System.Security.Policy.Evidence)
  parent: System.Security.Policy.NetCodeGroup
  langs:
  - csharp
  name: Resolve(Evidence)
  nameWithType: NetCodeGroup.Resolve(Evidence)
  fullName: System.Security.Policy.NetCodeGroup.Resolve(Evidence)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "코드 그룹에 대 한 정책 및 증명 정보 집합에 대 한 하위 항목을 해결합니다."
  remarks: "로드할 어셈블리에 대 한 증거를 지정 된 경우이 메서드 첫 번째 지정된 된 증명 정보에 대 한 멤버 자격 조건을 확인 하 여 코드 그룹을 평가 합니다. 일치 하는 경우이 메서드는 자식 코드 그룹의 평가 비롯 하 여 코드 그룹에 대 한 정책 문을 반환 합니다.       이 메서드의 작업은 다음과 같습니다: 멤버 자격 조건 지정한 증거와 일치 하지 않는 경우 반환 `null`, 그렇지 않으면 집합 반환 (P)로 설정 하는 사용 권한 코드 그룹의 정책 설명에 및 계속 합니다. 각 자식 코드 그룹에 대 한 동일한 증거; 코드 그룹을 확인 결과가 없으면 `null`, 해당 정책 설명을 반환 합니다. 일치 하 고 자식 코드 그룹이 없는 경우 P (부모의 정책 문)를 반환 합니다."
  syntax:
    content: public override System.Security.Policy.PolicyStatement Resolve (System.Security.Policy.Evidence evidence);
    parameters:
    - id: evidence
      type: System.Security.Policy.Evidence
      description: "<xref href=&quot;System.Security.Policy.Evidence&quot;> </xref> 어셈블리에 대 한 합니다."
    return:
      type: System.Security.Policy.PolicyStatement
      description: "A <xref href=&quot;System.Security.Policy.PolicyStatement&quot;> </xref> 선택적 특성이 있는 코드 그룹에 의해 부여 된 권한으로 구성 된 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 코드 그룹에 적용 되지 않는 경우 (멤버 자격 조건이 지정된 된 증명 정보를 일치 하지 않습니다)."
  overload: System.Security.Policy.NetCodeGroup.Resolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>evidence</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Policy.PolicyException
    commentId: T:System.Security.Policy.PolicyException
    description: "둘 이상의 코드 그룹 (부모 코드 그룹 및 자식 코드 그룹 포함)으로 표시 <xref href=&quot;System.Security.Policy.PolicyStatementAttribute&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Security.Policy.NetCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)
  id: ResolveMatchingCodeGroups(System.Security.Policy.Evidence)
  parent: System.Security.Policy.NetCodeGroup
  langs:
  - csharp
  name: ResolveMatchingCodeGroups(Evidence)
  nameWithType: NetCodeGroup.ResolveMatchingCodeGroups(Evidence)
  fullName: System.Security.Policy.NetCodeGroup.ResolveMatchingCodeGroups(Evidence)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "일치 하는 코드 그룹을 해결 합니다."
  remarks: "로드할 어셈블리에 대 한 증거를 지정 된 경우이 메서드 첫 번째 지정된 된 증명 정보에 대 한 멤버 자격 조건을 확인 하 여 코드 그룹을 평가 합니다. 일치 하는 경우이 메서드는 루트 코드 그룹을 반환 합니다. 반환 되는 코드 그룹을 차례로 있을 수 있는 자식 코드 그룹이 반환 값으로 제공 된 증명 정보에 의해 검색 된 코드 그룹의 전체 집합을 나타내도록 자식 코드 그룹을 포함할 수 있습니다."
  syntax:
    content: public override System.Security.Policy.CodeGroup ResolveMatchingCodeGroups (System.Security.Policy.Evidence evidence);
    parameters:
    - id: evidence
      type: System.Security.Policy.Evidence
      description: "어셈블리에 대 한 증명 정보입니다."
    return:
      type: System.Security.Policy.CodeGroup
      description: "증명 정보를 통해 검색 된 코드 그룹의 전체 집합입니다."
  overload: System.Security.Policy.NetCodeGroup.ResolveMatchingCodeGroups*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>evidence</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Security.Policy.CodeGroup
  isExternal: false
  name: System.Security.Policy.CodeGroup
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Security.Policy.PolicyException
  parent: System.Security.Policy
  isExternal: false
  name: PolicyException
  nameWithType: PolicyException
  fullName: System.Security.Policy.PolicyException
- uid: System.Security.Policy.NetCodeGroup.#ctor(System.Security.Policy.IMembershipCondition)
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: NetCodeGroup(IMembershipCondition)
  nameWithType: NetCodeGroup.NetCodeGroup(IMembershipCondition)
  fullName: System.Security.Policy.NetCodeGroup.NetCodeGroup(IMembershipCondition)
- uid: System.Security.Policy.IMembershipCondition
  parent: System.Security.Policy
  isExternal: false
  name: IMembershipCondition
  nameWithType: IMembershipCondition
  fullName: System.Security.Policy.IMembershipCondition
- uid: System.Security.Policy.NetCodeGroup.AbsentOriginScheme
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: AbsentOriginScheme
  nameWithType: NetCodeGroup.AbsentOriginScheme
  fullName: System.Security.Policy.NetCodeGroup.AbsentOriginScheme
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Policy.NetCodeGroup.AddConnectAccess(System.String,System.Security.Policy.CodeConnectAccess)
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: AddConnectAccess(String,CodeConnectAccess)
  nameWithType: NetCodeGroup.AddConnectAccess(String,CodeConnectAccess)
  fullName: System.Security.Policy.NetCodeGroup.AddConnectAccess(String,CodeConnectAccess)
- uid: System.Security.Policy.CodeConnectAccess
  parent: System.Security.Policy
  isExternal: false
  name: CodeConnectAccess
  nameWithType: CodeConnectAccess
  fullName: System.Security.Policy.CodeConnectAccess
- uid: System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: AnyOtherOriginScheme
  nameWithType: NetCodeGroup.AnyOtherOriginScheme
  fullName: System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme
- uid: System.Security.Policy.NetCodeGroup.AttributeString
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: AttributeString
  nameWithType: NetCodeGroup.AttributeString
  fullName: System.Security.Policy.NetCodeGroup.AttributeString
- uid: System.Security.Policy.NetCodeGroup.Copy
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: Copy()
  nameWithType: NetCodeGroup.Copy()
  fullName: System.Security.Policy.NetCodeGroup.Copy()
- uid: System.Security.Policy.NetCodeGroup.CreateXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: CreateXml(SecurityElement,PolicyLevel)
  nameWithType: NetCodeGroup.CreateXml(SecurityElement,PolicyLevel)
  fullName: System.Security.Policy.NetCodeGroup.CreateXml(SecurityElement,PolicyLevel)
- uid: System.Security.SecurityElement
  parent: System.Security
  isExternal: false
  name: SecurityElement
  nameWithType: SecurityElement
  fullName: System.Security.SecurityElement
- uid: System.Security.Policy.PolicyLevel
  parent: System.Security.Policy
  isExternal: false
  name: PolicyLevel
  nameWithType: PolicyLevel
  fullName: System.Security.Policy.PolicyLevel
- uid: System.Security.Policy.NetCodeGroup.Equals(System.Object)
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: Equals(Object)
  nameWithType: NetCodeGroup.Equals(Object)
  fullName: System.Security.Policy.NetCodeGroup.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Security.Policy.NetCodeGroup.GetConnectAccessRules
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: GetConnectAccessRules()
  nameWithType: NetCodeGroup.GetConnectAccessRules()
  fullName: System.Security.Policy.NetCodeGroup.GetConnectAccessRules()
- uid: System.Collections.DictionaryEntry[]
  parent: System.Collections
  isExternal: true
  name: DictionaryEntry
  nameWithType: DictionaryEntry
  fullName: System.Collections.DictionaryEntry[]
  spec.csharp:
  - uid: System.Collections.DictionaryEntry
    name: DictionaryEntry
    nameWithType: DictionaryEntry
    fullName: DictionaryEntry[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Policy.NetCodeGroup.GetHashCode
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: GetHashCode()
  nameWithType: NetCodeGroup.GetHashCode()
  fullName: System.Security.Policy.NetCodeGroup.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Policy.NetCodeGroup.MergeLogic
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: MergeLogic
  nameWithType: NetCodeGroup.MergeLogic
  fullName: System.Security.Policy.NetCodeGroup.MergeLogic
- uid: System.Security.Policy.NetCodeGroup.ParseXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: ParseXml(SecurityElement,PolicyLevel)
  nameWithType: NetCodeGroup.ParseXml(SecurityElement,PolicyLevel)
  fullName: System.Security.Policy.NetCodeGroup.ParseXml(SecurityElement,PolicyLevel)
- uid: System.Security.Policy.NetCodeGroup.PermissionSetName
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: PermissionSetName
  nameWithType: NetCodeGroup.PermissionSetName
  fullName: System.Security.Policy.NetCodeGroup.PermissionSetName
- uid: System.Security.Policy.NetCodeGroup.ResetConnectAccess
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: ResetConnectAccess()
  nameWithType: NetCodeGroup.ResetConnectAccess()
  fullName: System.Security.Policy.NetCodeGroup.ResetConnectAccess()
- uid: System.Security.Policy.NetCodeGroup.Resolve(System.Security.Policy.Evidence)
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: Resolve(Evidence)
  nameWithType: NetCodeGroup.Resolve(Evidence)
  fullName: System.Security.Policy.NetCodeGroup.Resolve(Evidence)
- uid: System.Security.Policy.PolicyStatement
  parent: System.Security.Policy
  isExternal: false
  name: PolicyStatement
  nameWithType: PolicyStatement
  fullName: System.Security.Policy.PolicyStatement
- uid: System.Security.Policy.Evidence
  parent: System.Security.Policy
  isExternal: false
  name: Evidence
  nameWithType: Evidence
  fullName: System.Security.Policy.Evidence
- uid: System.Security.Policy.NetCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: ResolveMatchingCodeGroups(Evidence)
  nameWithType: NetCodeGroup.ResolveMatchingCodeGroups(Evidence)
  fullName: System.Security.Policy.NetCodeGroup.ResolveMatchingCodeGroups(Evidence)
- uid: System.Security.Policy.NetCodeGroup.#ctor*
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: NetCodeGroup
  nameWithType: NetCodeGroup.NetCodeGroup
- uid: System.Security.Policy.NetCodeGroup.AddConnectAccess*
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: AddConnectAccess
  nameWithType: NetCodeGroup.AddConnectAccess
- uid: System.Security.Policy.NetCodeGroup.AttributeString*
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: AttributeString
  nameWithType: NetCodeGroup.AttributeString
- uid: System.Security.Policy.NetCodeGroup.Copy*
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: Copy
  nameWithType: NetCodeGroup.Copy
- uid: System.Security.Policy.NetCodeGroup.CreateXml*
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: CreateXml
  nameWithType: NetCodeGroup.CreateXml
- uid: System.Security.Policy.NetCodeGroup.Equals*
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: Equals
  nameWithType: NetCodeGroup.Equals
- uid: System.Security.Policy.NetCodeGroup.GetConnectAccessRules*
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: GetConnectAccessRules
  nameWithType: NetCodeGroup.GetConnectAccessRules
- uid: System.Security.Policy.NetCodeGroup.GetHashCode*
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: GetHashCode
  nameWithType: NetCodeGroup.GetHashCode
- uid: System.Security.Policy.NetCodeGroup.MergeLogic*
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: MergeLogic
  nameWithType: NetCodeGroup.MergeLogic
- uid: System.Security.Policy.NetCodeGroup.ParseXml*
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: ParseXml
  nameWithType: NetCodeGroup.ParseXml
- uid: System.Security.Policy.NetCodeGroup.PermissionSetName*
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: PermissionSetName
  nameWithType: NetCodeGroup.PermissionSetName
- uid: System.Security.Policy.NetCodeGroup.ResetConnectAccess*
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: ResetConnectAccess
  nameWithType: NetCodeGroup.ResetConnectAccess
- uid: System.Security.Policy.NetCodeGroup.Resolve*
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: Resolve
  nameWithType: NetCodeGroup.Resolve
- uid: System.Security.Policy.NetCodeGroup.ResolveMatchingCodeGroups*
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: ResolveMatchingCodeGroups
  nameWithType: NetCodeGroup.ResolveMatchingCodeGroups
