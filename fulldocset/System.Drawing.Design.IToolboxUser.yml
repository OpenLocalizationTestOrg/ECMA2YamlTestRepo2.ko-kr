### YamlMime:ManagedReference
items:
- uid: System.Drawing.Design.IToolboxUser
  id: IToolboxUser
  children:
  - System.Drawing.Design.IToolboxUser.GetToolSupported(System.Drawing.Design.ToolboxItem)
  - System.Drawing.Design.IToolboxUser.ToolPicked(System.Drawing.Design.ToolboxItem)
  langs:
  - csharp
  name: IToolboxUser
  nameWithType: IToolboxUser
  fullName: System.Drawing.Design.IToolboxUser
  type: Interface
  summary: "현재 선택 된 도구 상자 항목을 설정 하 고 디자이너를 특정 도구 상자 항목을 지원 하는지 여부를 나타내는 대 한 인터페이스를 정의 합니다."
  remarks: "이 인터페이스를 디자이너 도구 상자 지원 기능을 제공합니다. <xref:System.Drawing.Design.IToolboxUser.GetToolSupported%2A>메서드가 나타내는 있는지 여부를 지정 된 <xref:System.Drawing.Design.ToolboxItem>현재 디자이너가 활성화 된 경우에 사용할 수 있습니다.</xref:System.Drawing.Design.ToolboxItem> </xref:System.Drawing.Design.IToolboxUser.GetToolSupported%2A> <xref:System.Drawing.Design.IToolboxUser.ToolPicked%2A>메서드는 지정 된 <xref:System.Drawing.Design.ToolboxItem>.</xref:System.Drawing.Design.ToolboxItem> 선택</xref:System.Drawing.Design.IToolboxUser.ToolPicked%2A>"
  example:
  - "The following code example demonstrates an implementation of the IToolboxUser interface that can restrict support for specific types of <xref:System.Drawing.Design.ToolboxItem> objects.  \n  \n [!code-vb[IToolboxUserExample#1](~/add/codesnippet/visualbasic/t-system.drawing.design._6_1.vb)]\n [!code-cs[IToolboxUserExample#1](~/add/codesnippet/csharp/t-system.drawing.design._6_1.cs)]\n [!code-cpp[IToolboxUserExample#1](~/add/codesnippet/cpp/t-system.drawing.design._6_1.cpp)]"
  syntax:
    content: public interface IToolboxUser
  implements: []
  platform:
  - net462
- uid: System.Drawing.Design.IToolboxUser.GetToolSupported(System.Drawing.Design.ToolboxItem)
  id: GetToolSupported(System.Drawing.Design.ToolboxItem)
  parent: System.Drawing.Design.IToolboxUser
  langs:
  - csharp
  name: GetToolSupported(ToolboxItem)
  nameWithType: IToolboxUser.GetToolSupported(ToolboxItem)
  fullName: System.Drawing.Design.IToolboxUser.GetToolSupported(ToolboxItem)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Design
  summary: "현재 디자이너에서 지정된 된 도구를 지원 하는지 여부를 나타내는 값을 가져옵니다."
  remarks: "지정된 된 도구는 디자이너를 구현 하 여 지원 되 면는 <xref:System.Drawing.Design.IToolboxUser>인터페이스를이 디자이너에 포커스가 있을 때 도구 상자에서 도구를 사용 합니다.</xref:System.Drawing.Design.IToolboxUser> 그렇지 않으면 사용 되지 것입니다. 도구 사용으로 표시 되 면 또는 사용할 수 없을 것 수 하지 수 테스트할 동일한 디자이너를 사용 하 여 지원 다시 합니다."
  example:
  - "The following code example demonstrates an implementation of the GetToolSupported method.  \n  \n [!code-vb[IToolboxUserExample#2](~/add/codesnippet/visualbasic/4da8de2f-7353-4e05-b88e-_1.vb)]\n [!code-cs[IToolboxUserExample#2](~/add/codesnippet/csharp/4da8de2f-7353-4e05-b88e-_1.cs)]\n [!code-cpp[IToolboxUserExample#2](~/add/codesnippet/cpp/4da8de2f-7353-4e05-b88e-_1.cpp)]"
  syntax:
    content: public bool GetToolSupported (System.Drawing.Design.ToolboxItem tool);
    parameters:
    - id: tool
      type: System.Drawing.Design.ToolboxItem
      description: "<xref href=&quot;System.Drawing.Design.ToolboxItem&quot;> </xref> 도구 상자 지원에 대 한 테스트 해야 합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>도구가 도구 상자에서 사용할 수를 설정할 수 있습니다. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 문서 디자이너 도구를 사용 하는 방법을 알지 못하는 경우."
  overload: System.Drawing.Design.IToolboxUser.GetToolSupported*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Design.IToolboxUser.ToolPicked(System.Drawing.Design.ToolboxItem)
  id: ToolPicked(System.Drawing.Design.ToolboxItem)
  parent: System.Drawing.Design.IToolboxUser
  langs:
  - csharp
  name: ToolPicked(ToolboxItem)
  nameWithType: IToolboxUser.ToolPicked(ToolboxItem)
  fullName: System.Drawing.Design.IToolboxUser.ToolPicked(ToolboxItem)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Design
  summary: "지정된 된 도구를 선택합니다."
  remarks: "ToolPicked 도구 상자 항목을 클릭할 때 호출 됩니다. 문서 디자이너 지정된 된 도구에 대 한 구성 요소를 만들어야 합니다. Visual Studio 통합된 개발 환경에서 도구 상자에서 사용할 수 있는 도구만 ToolPicked를 호출 합니다."
  syntax:
    content: public void ToolPicked (System.Drawing.Design.ToolboxItem tool);
    parameters:
    - id: tool
      type: System.Drawing.Design.ToolboxItem
      description: "<xref href=&quot;System.Drawing.Design.ToolboxItem&quot;> </xref> 을 선택 합니다."
  overload: System.Drawing.Design.IToolboxUser.ToolPicked*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Drawing.Design.IToolboxUser.GetToolSupported(System.Drawing.Design.ToolboxItem)
  parent: System.Drawing.Design.IToolboxUser
  isExternal: false
  name: GetToolSupported(ToolboxItem)
  nameWithType: IToolboxUser.GetToolSupported(ToolboxItem)
  fullName: System.Drawing.Design.IToolboxUser.GetToolSupported(ToolboxItem)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Drawing.Design.ToolboxItem
  parent: System.Drawing.Design
  isExternal: false
  name: ToolboxItem
  nameWithType: ToolboxItem
  fullName: System.Drawing.Design.ToolboxItem
- uid: System.Drawing.Design.IToolboxUser.ToolPicked(System.Drawing.Design.ToolboxItem)
  parent: System.Drawing.Design.IToolboxUser
  isExternal: false
  name: ToolPicked(ToolboxItem)
  nameWithType: IToolboxUser.ToolPicked(ToolboxItem)
  fullName: System.Drawing.Design.IToolboxUser.ToolPicked(ToolboxItem)
- uid: System.Drawing.Design.IToolboxUser.GetToolSupported*
  parent: System.Drawing.Design.IToolboxUser
  isExternal: false
  name: GetToolSupported
  nameWithType: IToolboxUser.GetToolSupported
- uid: System.Drawing.Design.IToolboxUser.ToolPicked*
  parent: System.Drawing.Design.IToolboxUser
  isExternal: false
  name: ToolPicked
  nameWithType: IToolboxUser.ToolPicked
