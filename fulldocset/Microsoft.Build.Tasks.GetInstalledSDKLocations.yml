### YamlMime:ManagedReference
items:
- uid: Microsoft.Build.Tasks.GetInstalledSDKLocations
  id: GetInstalledSDKLocations
  children:
  - Microsoft.Build.Tasks.GetInstalledSDKLocations.#ctor
  - Microsoft.Build.Tasks.GetInstalledSDKLocations.Execute
  - Microsoft.Build.Tasks.GetInstalledSDKLocations.InstalledSDKs
  - Microsoft.Build.Tasks.GetInstalledSDKLocations.SDKDirectoryRoots
  - Microsoft.Build.Tasks.GetInstalledSDKLocations.SDKRegistryRoot
  - Microsoft.Build.Tasks.GetInstalledSDKLocations.TargetPlatformIdentifier
  - Microsoft.Build.Tasks.GetInstalledSDKLocations.TargetPlatformVersion
  langs:
  - csharp
  name: GetInstalledSDKLocations
  nameWithType: GetInstalledSDKLocations
  fullName: Microsoft.Build.Tasks.GetInstalledSDKLocations
  type: Class
  summary: "Gathers the list of installed SDKS in the registry and on disk and outputs them into the project so they can be used during SDK reference resolution and RAR for single files.  \n  \n GetInstalledSDKLocations doesn't recognize a version folder if “v” appears in its name.  For example, an SDK that's located at C:\\Windows\\Program Files\\Microsoft SDKs\\Windows\\8.0\\SDKFolders\\3rdPartySDK\\2.5\\will be located correctly. However, the same SDK located atC:\\Windows\\Program Files\\Microsoft SDKs\\Windows\\8.0\\SDKFolders\\3rdPartySDK\\v2.5\\won't be located and will be ignored. If an SDK is ignored, the failure won't be recorded in the log, and no error will be thrown.  \n  \n Version folder names need to be formed as major.minor[.build[.revision]]. For more information, see <xref:System.Version.TryParse*>.  \n  \n To find an SDK with a particular version, the version sought must match the version requested. For example, if the SDK has a folder version name 8.0.0 and the customer requested the SDK with version 8.0, there is no match, and the SDK won't be found.  \n  \n For more information on version matching, see <xref:System.Version.CompareTo*>."
  syntax:
    content: 'public class GetInstalledSDKLocations : Microsoft.Build.Tasks.TaskExtension'
  inheritance:
  - System.Object
  - Microsoft.Build.Utilities.Task
  - Microsoft.Build.Tasks.TaskExtension
  implements: []
  inheritedMembers:
  - Microsoft.Build.Tasks.TaskExtension.Log
  - Microsoft.Build.Utilities.Task.BuildEngine
  - Microsoft.Build.Utilities.Task.BuildEngine2
  - Microsoft.Build.Utilities.Task.BuildEngine3
  - Microsoft.Build.Utilities.Task.BuildEngine4
  - Microsoft.Build.Utilities.Task.HelpKeywordPrefix
  - Microsoft.Build.Utilities.Task.HostObject
  - Microsoft.Build.Utilities.Task.TaskResources
  platform:
  - net462
- uid: Microsoft.Build.Tasks.GetInstalledSDKLocations.#ctor
  id: '#ctor'
  parent: Microsoft.Build.Tasks.GetInstalledSDKLocations
  langs:
  - csharp
  name: GetInstalledSDKLocations()
  nameWithType: GetInstalledSDKLocations.GetInstalledSDKLocations()
  fullName: Microsoft.Build.Tasks.GetInstalledSDKLocations.GetInstalledSDKLocations()
  type: Constructor
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "GetInstalledSDKLocations의 새 인스턴스를 만듭니다."
  syntax:
    content: public GetInstalledSDKLocations ();
    parameters: []
  overload: Microsoft.Build.Tasks.GetInstalledSDKLocations.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.GetInstalledSDKLocations.Execute
  id: Execute
  parent: Microsoft.Build.Tasks.GetInstalledSDKLocations
  langs:
  - csharp
  name: Execute()
  nameWithType: GetInstalledSDKLocations.Execute()
  fullName: Microsoft.Build.Tasks.GetInstalledSDKLocations.Execute()
  type: Method
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "Sdk를 가져옵니다."
  syntax:
    content: public override bool Execute ();
    parameters: []
    return:
      type: System.Boolean
      description: "반환 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> 메서드가 성공 하면; 그렇지 않으면 반환 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: Microsoft.Build.Tasks.GetInstalledSDKLocations.Execute*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.GetInstalledSDKLocations.InstalledSDKs
  id: InstalledSDKs
  parent: Microsoft.Build.Tasks.GetInstalledSDKLocations
  langs:
  - csharp
  name: InstalledSDKs
  nameWithType: GetInstalledSDKLocations.InstalledSDKs
  fullName: Microsoft.Build.Tasks.GetInstalledSDKLocations.InstalledSDKs
  type: Property
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "모든 SDKDirectory 및 SDKRegistry 루트에 설치 된 Sdk를 나타내는 항목의 집합을 가져오거나 설정 합니다.       Itemspec는 SDK 설치 위치입니다. SDK의 이름이 포함 되어 SDKName 라는 메타 데이터가 있습니다."
  syntax:
    content: public Microsoft.Build.Framework.ITaskItem[] InstalledSDKs { get; set; }
    return:
      type: Microsoft.Build.Framework.ITaskItem[]
      description: "발견 된 모든 설치 된 Sdk의 집합을 반환 합니다."
  overload: Microsoft.Build.Tasks.GetInstalledSDKLocations.InstalledSDKs*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.GetInstalledSDKLocations.SDKDirectoryRoots
  id: SDKDirectoryRoots
  parent: Microsoft.Build.Tasks.GetInstalledSDKLocations
  langs:
  - csharp
  name: SDKDirectoryRoots
  nameWithType: GetInstalledSDKLocations.SDKDirectoryRoots
  fullName: Microsoft.Build.Tasks.GetInstalledSDKLocations.SDKDirectoryRoots
  type: Property
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "Sdk에 대 한를 디스크에 루트 디렉터리를 가져오거나 설정 합니다."
  syntax:
    content: public string[] SDKDirectoryRoots { get; set; }
    return:
      type: System.String[]
      description: "루트 디렉터리를 반환합니다."
  overload: Microsoft.Build.Tasks.GetInstalledSDKLocations.SDKDirectoryRoots*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.GetInstalledSDKLocations.SDKRegistryRoot
  id: SDKRegistryRoot
  parent: Microsoft.Build.Tasks.GetInstalledSDKLocations
  langs:
  - csharp
  name: SDKRegistryRoot
  nameWithType: GetInstalledSDKLocations.SDKRegistryRoot
  fullName: Microsoft.Build.Tasks.GetInstalledSDKLocations.SDKRegistryRoot
  type: Property
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "Sdk에 대 한를 루트 레지스트리 루트를 가져오거나 설정 합니다."
  syntax:
    content: public string SDKRegistryRoot { get; set; }
    return:
      type: System.String
      description: "레지스트리 루트를 반환합니다."
  overload: Microsoft.Build.Tasks.GetInstalledSDKLocations.SDKRegistryRoot*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.GetInstalledSDKLocations.TargetPlatformIdentifier
  id: TargetPlatformIdentifier
  parent: Microsoft.Build.Tasks.GetInstalledSDKLocations
  langs:
  - csharp
  name: TargetPlatformIdentifier
  nameWithType: GetInstalledSDKLocations.TargetPlatformIdentifier
  fullName: Microsoft.Build.Tasks.GetInstalledSDKLocations.TargetPlatformIdentifier
  type: Property
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "대상으로 플랫폼 식별자를 가져옵니다."
  syntax:
    content: public string TargetPlatformIdentifier { get; set; }
    return:
      type: System.String
      description: "대상 플랫폼 식별자를 반환합니다."
  overload: Microsoft.Build.Tasks.GetInstalledSDKLocations.TargetPlatformIdentifier*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.GetInstalledSDKLocations.TargetPlatformVersion
  id: TargetPlatformVersion
  parent: Microsoft.Build.Tasks.GetInstalledSDKLocations
  langs:
  - csharp
  name: TargetPlatformVersion
  nameWithType: GetInstalledSDKLocations.TargetPlatformVersion
  fullName: Microsoft.Build.Tasks.GetInstalledSDKLocations.TargetPlatformVersion
  type: Property
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "플랫폼 버전을 대상으로 가져옵니다."
  syntax:
    content: public string TargetPlatformVersion { get; set; }
    return:
      type: System.String
      description: "대상 플랫폼 버전을 반환합니다."
  overload: Microsoft.Build.Tasks.GetInstalledSDKLocations.TargetPlatformVersion*
  exceptions: []
  platform:
  - net462
references:
- uid: Microsoft.Build.Tasks.TaskExtension
  isExternal: false
  name: Microsoft.Build.Tasks.TaskExtension
- uid: Microsoft.Build.Tasks.GetInstalledSDKLocations.#ctor
  parent: Microsoft.Build.Tasks.GetInstalledSDKLocations
  isExternal: false
  name: GetInstalledSDKLocations()
  nameWithType: GetInstalledSDKLocations.GetInstalledSDKLocations()
  fullName: Microsoft.Build.Tasks.GetInstalledSDKLocations.GetInstalledSDKLocations()
- uid: Microsoft.Build.Tasks.GetInstalledSDKLocations.Execute
  parent: Microsoft.Build.Tasks.GetInstalledSDKLocations
  isExternal: false
  name: Execute()
  nameWithType: GetInstalledSDKLocations.Execute()
  fullName: Microsoft.Build.Tasks.GetInstalledSDKLocations.Execute()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Build.Tasks.GetInstalledSDKLocations.InstalledSDKs
  parent: Microsoft.Build.Tasks.GetInstalledSDKLocations
  isExternal: false
  name: InstalledSDKs
  nameWithType: GetInstalledSDKLocations.InstalledSDKs
  fullName: Microsoft.Build.Tasks.GetInstalledSDKLocations.InstalledSDKs
- uid: Microsoft.Build.Framework.ITaskItem[]
  parent: Microsoft.Build.Framework
  isExternal: false
  name: ITaskItem
  nameWithType: ITaskItem
  fullName: Microsoft.Build.Framework.ITaskItem[]
  spec.csharp:
  - uid: Microsoft.Build.Framework.ITaskItem
    name: ITaskItem
    nameWithType: ITaskItem
    fullName: ITaskItem[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.Build.Tasks.GetInstalledSDKLocations.SDKDirectoryRoots
  parent: Microsoft.Build.Tasks.GetInstalledSDKLocations
  isExternal: false
  name: SDKDirectoryRoots
  nameWithType: GetInstalledSDKLocations.SDKDirectoryRoots
  fullName: Microsoft.Build.Tasks.GetInstalledSDKLocations.SDKDirectoryRoots
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.Build.Tasks.GetInstalledSDKLocations.SDKRegistryRoot
  parent: Microsoft.Build.Tasks.GetInstalledSDKLocations
  isExternal: false
  name: SDKRegistryRoot
  nameWithType: GetInstalledSDKLocations.SDKRegistryRoot
  fullName: Microsoft.Build.Tasks.GetInstalledSDKLocations.SDKRegistryRoot
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Build.Tasks.GetInstalledSDKLocations.TargetPlatformIdentifier
  parent: Microsoft.Build.Tasks.GetInstalledSDKLocations
  isExternal: false
  name: TargetPlatformIdentifier
  nameWithType: GetInstalledSDKLocations.TargetPlatformIdentifier
  fullName: Microsoft.Build.Tasks.GetInstalledSDKLocations.TargetPlatformIdentifier
- uid: Microsoft.Build.Tasks.GetInstalledSDKLocations.TargetPlatformVersion
  parent: Microsoft.Build.Tasks.GetInstalledSDKLocations
  isExternal: false
  name: TargetPlatformVersion
  nameWithType: GetInstalledSDKLocations.TargetPlatformVersion
  fullName: Microsoft.Build.Tasks.GetInstalledSDKLocations.TargetPlatformVersion
- uid: Microsoft.Build.Tasks.GetInstalledSDKLocations.#ctor*
  parent: Microsoft.Build.Tasks.GetInstalledSDKLocations
  isExternal: false
  name: GetInstalledSDKLocations
  nameWithType: GetInstalledSDKLocations.GetInstalledSDKLocations
- uid: Microsoft.Build.Tasks.GetInstalledSDKLocations.Execute*
  parent: Microsoft.Build.Tasks.GetInstalledSDKLocations
  isExternal: false
  name: Execute
  nameWithType: GetInstalledSDKLocations.Execute
- uid: Microsoft.Build.Tasks.GetInstalledSDKLocations.InstalledSDKs*
  parent: Microsoft.Build.Tasks.GetInstalledSDKLocations
  isExternal: false
  name: InstalledSDKs
  nameWithType: GetInstalledSDKLocations.InstalledSDKs
- uid: Microsoft.Build.Tasks.GetInstalledSDKLocations.SDKDirectoryRoots*
  parent: Microsoft.Build.Tasks.GetInstalledSDKLocations
  isExternal: false
  name: SDKDirectoryRoots
  nameWithType: GetInstalledSDKLocations.SDKDirectoryRoots
- uid: Microsoft.Build.Tasks.GetInstalledSDKLocations.SDKRegistryRoot*
  parent: Microsoft.Build.Tasks.GetInstalledSDKLocations
  isExternal: false
  name: SDKRegistryRoot
  nameWithType: GetInstalledSDKLocations.SDKRegistryRoot
- uid: Microsoft.Build.Tasks.GetInstalledSDKLocations.TargetPlatformIdentifier*
  parent: Microsoft.Build.Tasks.GetInstalledSDKLocations
  isExternal: false
  name: TargetPlatformIdentifier
  nameWithType: GetInstalledSDKLocations.TargetPlatformIdentifier
- uid: Microsoft.Build.Tasks.GetInstalledSDKLocations.TargetPlatformVersion*
  parent: Microsoft.Build.Tasks.GetInstalledSDKLocations
  isExternal: false
  name: TargetPlatformVersion
  nameWithType: GetInstalledSDKLocations.TargetPlatformVersion
