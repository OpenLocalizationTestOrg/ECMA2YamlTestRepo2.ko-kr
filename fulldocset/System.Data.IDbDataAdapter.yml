### YamlMime:ManagedReference
items:
- uid: System.Data.IDbDataAdapter
  id: IDbDataAdapter
  children:
  - System.Data.IDbDataAdapter.DeleteCommand
  - System.Data.IDbDataAdapter.InsertCommand
  - System.Data.IDbDataAdapter.SelectCommand
  - System.Data.IDbDataAdapter.UpdateCommand
  langs:
  - csharp
  name: IDbDataAdapter
  nameWithType: IDbDataAdapter
  fullName: System.Data.IDbDataAdapter
  type: Interface
  summary: "채우는 데 사용 되는 명령 관련 속성의 집합을 나타냅니다는 <xref href=&quot;System.Data.DataSet&quot;> </xref> 및 데이터 원본을 업데이트 하 고 관계형 데이터베이스에 액세스 하는.NET Framework 데이터 공급자에 의해 구현 됩니다."
  remarks: "The IDbDataAdapter interface inherits from the <xref:System.Data.IDataAdapter> interface and allows an object to create a DataAdapter designed for use with a relational database. The IDbDataAdapter interface and, optionally, the utility class, <xref:System.Data.Common.DbDataAdapter>, allow an inheriting class to implement a DataAdapter class, which represents the bridge between a data source and a <xref:System.Data.DataSet>. For more information about DataAdapter classes, see [Populating a DataSet from a DataAdapter](~/add/includes/ajax-current-ext-md.md). For more information about implementing .NET Framework data providers, see [&#91;\\<topic://cpconimplementingnetdataprovider>&#93;](http://msdn.microsoft.com/en-us/a9fa1926-071b-4c6f-997d-a16bac633852).  \n  \n An application does not create an instance of the IDbDataAdapter interface directly, but creates an instance of a class that inherits IDbDataAdapter and <xref:System.Data.Common.DbDataAdapter>.  \n  \n Classes that inherit IDbDataAdapter must implement the inherited members, and typically define additional members to add provider-specific functionality. For example, the IDbDataAdapter interface defines the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property, and the <xref:System.Data.Common.DbDataAdapter> interface defines a <xref:System.Data.IDataAdapter.Fill%2A> method that takes a <xref:System.Data.DataTable> as a parameter. In turn, the <xref:System.Data.OleDb.OleDbDataAdapter> class inherits the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property and the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method, and also defines two additional overloads of the <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> method that take an ADO Recordset object as a parameter."
  example:
  - "The following example uses the derived classes, <xref:System.Data.SqlClient.SqlCommand>, <xref:System.Data.SqlClient.SqlDataAdapter> and <xref:System.Data.SqlClient.SqlConnection>, to select records from a data source. The filled <xref:System.Data.DataSet> is then returned. To accomplish this, the method is passed an initialized <xref:System.Data.DataSet>, a connection string, and a query string that is a Transact-SQL SELECT statement.  \n  \n [!code-vb[Classic WebData SqlDataAdapter Example#1](~/add/codesnippet/visualbasic/t-system.data.idbdataada_1.vb)]\n [!code-cs[Classic WebData SqlDataAdapter Example#1](~/add/codesnippet/csharp/t-system.data.idbdataada_1.cs)]"
  syntax:
    content: 'public interface IDbDataAdapter : System.Data.IDataAdapter'
  implements:
  - System.Data.IDataAdapter
  platform:
  - net462
- uid: System.Data.IDbDataAdapter.DeleteCommand
  id: DeleteCommand
  parent: System.Data.IDbDataAdapter
  langs:
  - csharp
  name: DeleteCommand
  nameWithType: IDbDataAdapter.DeleteCommand
  fullName: System.Data.IDbDataAdapter.DeleteCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "데이터 집합에서 레코드를 삭제 하기 위한 SQL 문을 가져오거나 설정 합니다."
  remarks: "동안 <xref:System.Data.Common.DbDataAdapter.Update%2A>경우이 속성은 설정 되지 않으며 기본 키 정보에 있는지는 <xref:System.Data.DataSet>, DeleteCommand 설정 하는 경우 자동으로 생성할 수 있습니다는 `SelectCommand` .NET Framework 데이터 공급자의 속성입니다.</xref:System.Data.DataSet> </xref:System.Data.Common.DbDataAdapter.Update%2A> 그런 다음 설정 하지 않으면 모든 추가 명령이 CommandBuilder에 의해 생성 됩니다. 이 세대 논리 <xref:System.Data.DataSet>.</xref:System.Data.DataSet> 에 키 열 정보를 적용. 자세한 내용은 참조 [commandbuilder 생성 명령을](~/add/includes/ajax-current-ext-md.md)합니다.       DeleteCommand 할당 된 경우에 이전에 만든 <xref:System.Data.IDbCommand>, <xref:System.Data.IDbCommand>가 복제 되지 않습니다.</xref:System.Data.IDbCommand> </xref:System.Data.IDbCommand> 이전에 만든에 대 한 참조를 유지 관리는 DeleteCommand <xref:System.Data.IDbCommand>개체입니다.</xref:System.Data.IDbCommand>"
  example:
  - "The following example creates an instance of the inherited <xref:System.Data.OleDb.OleDbDataAdapter> class, and sets the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> and <xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A> properties. It assumes you have already created an <xref:System.Data.OleDb.OleDbConnection> object.  \n  \n [!code-cs[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/add/codesnippet/csharp/p-system.data.idbdataada_2_1.cs)]\n [!code-vb[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/add/codesnippet/visualbasic/p-system.data.idbdataada_2_1.vb)]"
  syntax:
    content: public System.Data.IDbCommand DeleteCommand { get; set; }
    return:
      type: System.Data.IDbCommand
      description: "<xref href=&quot;System.Data.IDbCommand&quot;> </xref> 하는 동안 사용 <xref:System.Data.Common.DbDataAdapter.Update*>데이터 집합에서 삭제 된 행에 대 한 데이터 원본에서 레코드를 삭제 합니다.</xref:System.Data.Common.DbDataAdapter.Update*>"
  overload: System.Data.IDbDataAdapter.DeleteCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.IDbDataAdapter.InsertCommand
  id: InsertCommand
  parent: System.Data.IDbDataAdapter
  langs:
  - csharp
  name: InsertCommand
  nameWithType: IDbDataAdapter.InsertCommand
  fullName: System.Data.IDbDataAdapter.InsertCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "데이터 원본에 새 레코드를 삽입 하는 데 사용 되는 SQL 문을 가져오거나 설정 합니다."
  remarks: "동안 <xref:System.Data.Common.DbDataAdapter.Update%2A>경우이 속성은 설정 되지 않으며 기본 키 정보에 있는지는 <xref:System.Data.DataSet>, InsertCommand 설정 하는 경우 자동으로 생성할 수 있습니다는 `SelectCommand` .NET Framework 데이터 공급자의 속성입니다.</xref:System.Data.DataSet> </xref:System.Data.Common.DbDataAdapter.Update%2A> 그런 다음 설정 하지 않으면 모든 추가 명령이 CommandBuilder에 의해 생성 됩니다. 이 세대 논리 <xref:System.Data.DataSet>.</xref:System.Data.DataSet> 에 키 열 정보를 적용. 자세한 내용은 참조 [commandbuilder 생성 명령을](~/add/includes/ajax-current-ext-md.md)합니다.       InsertCommand 할당 된 경우에 이전에 만든 <xref:System.Data.IDbCommand>, <xref:System.Data.IDbCommand>가 복제 되지 않습니다.</xref:System.Data.IDbCommand> </xref:System.Data.IDbCommand> 이전에 만든에 대 한 참조를 유지 관리는 InsertCommand <xref:System.Data.IDbCommand>개체입니다.</xref:System.Data.IDbCommand>      > [!NOTE] > 행을 반환 하는이 명령 실행 하는 경우 이러한 행에 추가할 수 있습니다는 <xref:System.Data.DataSet>어떻게 설정 하느냐에 따라는 <xref:System.Data.IDbCommand.UpdatedRowSource%2A>의 속성은 <xref:System.Data.IDbCommand>개체입니다.</xref:System.Data.IDbCommand> </xref:System.Data.IDbCommand.UpdatedRowSource%2A> </xref:System.Data.DataSet>"
  example:
  - "The following example creates an instance of the inherited <xref:System.Data.OleDb.OleDbDataAdapter> class, and sets the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> and <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> properties. It assumes you have already created an <xref:System.Data.OleDb.OleDbConnection> object.  \n  \n [!code-cs[Classic WebData DbDataAdapter.InsertCommand Example#1](~/add/codesnippet/csharp/p-system.data.idbdataada_3_1.cs)]\n [!code-vb[Classic WebData DbDataAdapter.InsertCommand Example#1](~/add/codesnippet/visualbasic/p-system.data.idbdataada_3_1.vb)]"
  syntax:
    content: public System.Data.IDbCommand InsertCommand { get; set; }
    return:
      type: System.Data.IDbCommand
      description: "<xref href=&quot;System.Data.IDbCommand&quot;> </xref> 하는 동안 사용 <xref:System.Data.Common.DbDataAdapter.Update*>데이터 집합의 새 행에 대 한 데이터 원본에서 레코드를 삽입 합니다.</xref:System.Data.Common.DbDataAdapter.Update*>"
  overload: System.Data.IDbDataAdapter.InsertCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.IDbDataAdapter.SelectCommand
  id: SelectCommand
  parent: System.Data.IDbDataAdapter
  langs:
  - csharp
  name: SelectCommand
  nameWithType: IDbDataAdapter.SelectCommand
  fullName: System.Data.IDbDataAdapter.SelectCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "데이터 원본에서 레코드를 선택 하는 데 사용 되는 SQL 문을 가져오거나 설정 합니다."
  remarks: "SelectCommand 할당 된 경우에 이전에 만든 <xref:System.Data.IDbCommand>, <xref:System.Data.IDbCommand>가 복제 되지 않습니다.</xref:System.Data.IDbCommand> </xref:System.Data.IDbCommand> 이전에 만든에 대 한 참조를 유지 관리 SelectCommand <xref:System.Data.IDbCommand>개체입니다.</xref:System.Data.IDbCommand>       에 테이블이 추가 된 SelectCommand 모든 행을 반환 하지 않는 경우는 <xref:System.Data.DataSet>, 예외가 발생 하지 않습니다.</xref:System.Data.DataSet>"
  example:
  - "The following example creates an instance of the inherited <xref:System.Data.OleDb.OleDbDataAdapter> class, and sets the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> and <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> properties. It assumes you have already created an <xref:System.Data.OleDb.OleDbConnection> object.  \n  \n [!code-cs[Classic WebData DbDataAdapter.SelectCommand Example#1](~/add/codesnippet/csharp/p-system.data.idbdataada_0_1.cs)]\n [!code-vb[Classic WebData DbDataAdapter.SelectCommand Example#1](~/add/codesnippet/visualbasic/p-system.data.idbdataada_0_1.vb)]"
  syntax:
    content: public System.Data.IDbCommand SelectCommand { get; set; }
    return:
      type: System.Data.IDbCommand
      description: "<xref href=&quot;System.Data.IDbCommand&quot;> </xref> 중 사용 되는 <xref:System.Data.Common.DbDataAdapter.Update*>데이터 집합에 배치 하기 위해 데이터 원본에서 레코드를 선택 합니다.</xref:System.Data.Common.DbDataAdapter.Update*>"
  overload: System.Data.IDbDataAdapter.SelectCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.IDbDataAdapter.UpdateCommand
  id: UpdateCommand
  parent: System.Data.IDbDataAdapter
  langs:
  - csharp
  name: UpdateCommand
  nameWithType: IDbDataAdapter.UpdateCommand
  fullName: System.Data.IDbDataAdapter.UpdateCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "데이터 원본에서 레코드를 업데이트 하는 데 사용 되는 SQL 문을 가져오거나 설정 합니다."
  remarks: "동안 <xref:System.Data.Common.DbDataAdapter.Update%2A>경우이 속성은 설정 되지 않으며 기본 키 정보에 있는지는 <xref:System.Data.DataSet>, UpdateCommand 설정 하는 경우 자동으로 생성할 수 있습니다는 `SelectCommand` .NET Framework 데이터 공급자의 속성입니다.</xref:System.Data.DataSet> </xref:System.Data.Common.DbDataAdapter.Update%2A> 그런 다음 설정 하지 않으면 모든 추가 명령이 CommandBuilder에 의해 생성 됩니다. 이 세대 논리 <xref:System.Data.DataSet>.</xref:System.Data.DataSet> 에 키 열 정보를 적용. 자세한 내용은 참조 [commandbuilder 생성 명령을](~/add/includes/ajax-current-ext-md.md)합니다.       UpdateCommand 할당 된 경우에 이전에 만든 <xref:System.Data.IDbCommand>, <xref:System.Data.IDbCommand>가 복제 되지 않습니다.</xref:System.Data.IDbCommand> </xref:System.Data.IDbCommand> 이전에 만든에 대 한 참조를 유지 관리는 UpdateCommand <xref:System.Data.IDbCommand>개체입니다.</xref:System.Data.IDbCommand>      > [!NOTE] > <xref:System.Data.DataSet>.</xref:System.Data.DataSet> 에 이러한 행이 추가 행을 반환 하는이 명령 실행 하는 경우"
  example:
  - "The following example creates an instance of the inherited <xref:System.Data.OleDb.OleDbDataAdapter> class, and sets the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> and <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A> properties. It assumes you have already created an <xref:System.Data.OleDb.OleDbConnection> object.  \n  \n [!code-cs[Classic WebData OleDbDataAdapter.UpdateCommand Example#1](~/add/codesnippet/csharp/p-system.data.idbdataada_1_1.cs)]\n [!code-vb[Classic WebData OleDbDataAdapter.UpdateCommand Example#1](~/add/codesnippet/visualbasic/p-system.data.idbdataada_1_1.vb)]"
  syntax:
    content: public System.Data.IDbCommand UpdateCommand { get; set; }
    return:
      type: System.Data.IDbCommand
      description: "<xref href=&quot;System.Data.IDbCommand&quot;> </xref> 하는 동안 사용 <xref:System.Data.Common.DbDataAdapter.Update*>데이터 집합의 수정 된 행에 대 한 데이터 원본에서 레코드를 업데이트 합니다.</xref:System.Data.Common.DbDataAdapter.Update*>"
  overload: System.Data.IDbDataAdapter.UpdateCommand*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.IDbDataAdapter.DeleteCommand
  parent: System.Data.IDbDataAdapter
  isExternal: false
  name: DeleteCommand
  nameWithType: IDbDataAdapter.DeleteCommand
  fullName: System.Data.IDbDataAdapter.DeleteCommand
- uid: System.Data.IDbCommand
  parent: System.Data
  isExternal: false
  name: IDbCommand
  nameWithType: IDbCommand
  fullName: System.Data.IDbCommand
- uid: System.Data.IDbDataAdapter.InsertCommand
  parent: System.Data.IDbDataAdapter
  isExternal: false
  name: InsertCommand
  nameWithType: IDbDataAdapter.InsertCommand
  fullName: System.Data.IDbDataAdapter.InsertCommand
- uid: System.Data.IDbDataAdapter.SelectCommand
  parent: System.Data.IDbDataAdapter
  isExternal: false
  name: SelectCommand
  nameWithType: IDbDataAdapter.SelectCommand
  fullName: System.Data.IDbDataAdapter.SelectCommand
- uid: System.Data.IDbDataAdapter.UpdateCommand
  parent: System.Data.IDbDataAdapter
  isExternal: false
  name: UpdateCommand
  nameWithType: IDbDataAdapter.UpdateCommand
  fullName: System.Data.IDbDataAdapter.UpdateCommand
- uid: System.Data.IDbDataAdapter.DeleteCommand*
  parent: System.Data.IDbDataAdapter
  isExternal: false
  name: DeleteCommand
  nameWithType: IDbDataAdapter.DeleteCommand
- uid: System.Data.IDbDataAdapter.InsertCommand*
  parent: System.Data.IDbDataAdapter
  isExternal: false
  name: InsertCommand
  nameWithType: IDbDataAdapter.InsertCommand
- uid: System.Data.IDbDataAdapter.SelectCommand*
  parent: System.Data.IDbDataAdapter
  isExternal: false
  name: SelectCommand
  nameWithType: IDbDataAdapter.SelectCommand
- uid: System.Data.IDbDataAdapter.UpdateCommand*
  parent: System.Data.IDbDataAdapter
  isExternal: false
  name: UpdateCommand
  nameWithType: IDbDataAdapter.UpdateCommand
