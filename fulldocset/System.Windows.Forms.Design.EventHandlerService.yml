### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.Design.EventHandlerService
  id: EventHandlerService
  children:
  - System.Windows.Forms.Design.EventHandlerService.#ctor(System.Windows.Forms.Control)
  - System.Windows.Forms.Design.EventHandlerService.EventHandlerChanged
  - System.Windows.Forms.Design.EventHandlerService.FocusWindow
  - System.Windows.Forms.Design.EventHandlerService.GetHandler(System.Type)
  - System.Windows.Forms.Design.EventHandlerService.PopHandler(System.Object)
  - System.Windows.Forms.Design.EventHandlerService.PushHandler(System.Object)
  langs:
  - csharp
  name: EventHandlerService
  nameWithType: EventHandlerService
  fullName: System.Windows.Forms.Design.EventHandlerService
  type: Class
  summary: "현재 문서에 대 한 이벤트 처리기를 관리 하는 체계적인 방법을 제공 합니다."
  remarks: "개발자가 특정 종류의 이벤트를 처리 하는 한 곳에서 코드를 작성할 수 있게 되기를 원하는 수 있습니다.       또한 개발자가 전체적으로 특정 이벤트 또는 유형의 디자이너 구성 요소 간에 분산 될 수 있는 이벤트에 대 한 처리기의 동작을 변경 해야 할 수 있습니다.       일반적인 프로젝트에 대 한 디자이너는 다양 한 개체 목록 및 공통 위치에서 이러한 이벤트에 대 한 참조를 저장 하는 데 유용 될 수 있도록 합니다.       이 서비스는 이벤트 처리기의 현재 집합을 포함 하는 &quot;이벤트 스택을&quot;을 구현 합니다. 스택에 다양 한 종류의 처리기는 스택의 될 수 있습니다.       예를 들어 디자이너 푸시에 또는 키보드 처리기 및 스택으로 마우스 처리기 추가 될 수 있습니다. 디자이너는 이벤트 처리기를 요청 하면 서비스 요청한 클래스와 일치 하는 스택의 맨 위에 있는 처리기를 찾이 됩니다.       이러한 방식으로 서비스는 모든 이벤트 체계로으로 확장할 수 있습니다 및 특정 형식의 이벤트 처리기를 바꿀 수 있습니다. 예를 들어 메뉴 이벤트 처리기 또는 키보드 이벤트 처리기에 영향을 주지 않고 마우스 이벤트 처리기를 바꿀 수 있습니다."
  syntax:
    content: public sealed class EventHandlerService
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Forms.Design.EventHandlerService.#ctor(System.Windows.Forms.Control)
  id: '#ctor(System.Windows.Forms.Control)'
  parent: System.Windows.Forms.Design.EventHandlerService
  langs:
  - csharp
  name: EventHandlerService(Control)
  nameWithType: EventHandlerService.EventHandlerService(Control)
  fullName: System.Windows.Forms.Design.EventHandlerService.EventHandlerService(Control)
  type: Constructor
  assemblies:
  - System.Design
  namespace: System.Windows.Forms.Design
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Windows.Forms.Design.EventHandlerService&quot;> </xref> 클래스입니다."
  syntax:
    content: public EventHandlerService (System.Windows.Forms.Control focusWnd);
    parameters:
    - id: focusWnd
      type: System.Windows.Forms.Control
      description: "<xref href=&quot;System.Windows.Forms.Control&quot;> </xref> 디자인 하는입니다."
  overload: System.Windows.Forms.Design.EventHandlerService.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Design.EventHandlerService.EventHandlerChanged
  id: EventHandlerChanged
  parent: System.Windows.Forms.Design.EventHandlerService
  langs:
  - csharp
  name: EventHandlerChanged
  nameWithType: EventHandlerService.EventHandlerChanged
  fullName: System.Windows.Forms.Design.EventHandlerService.EventHandlerChanged
  type: Event
  assemblies:
  - System.Design
  namespace: System.Windows.Forms.Design
  summary: "OnEventHandlerChanged 이벤트를 발생 시킵니다."
  syntax:
    content: public event EventHandler EventHandlerChanged;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Design.EventHandlerService.FocusWindow
  id: FocusWindow
  parent: System.Windows.Forms.Design.EventHandlerService
  langs:
  - csharp
  name: FocusWindow
  nameWithType: EventHandlerService.FocusWindow
  fullName: System.Windows.Forms.Design.EventHandlerService.FocusWindow
  type: Property
  assemblies:
  - System.Design
  namespace: System.Windows.Forms.Design
  summary: "이벤트 처리기 연결 된 컨트롤을 가져옵니다."
  syntax:
    content: public System.Windows.Forms.Control FocusWindow { get; }
    return:
      type: System.Windows.Forms.Control
      description: "<xref href=&quot;System.Windows.Forms.Control&quot;> </xref> 생성자를 통해 연결 된입니다."
  overload: System.Windows.Forms.Design.EventHandlerService.FocusWindow*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Design.EventHandlerService.GetHandler(System.Type)
  id: GetHandler(System.Type)
  parent: System.Windows.Forms.Design.EventHandlerService
  langs:
  - csharp
  name: GetHandler(Type)
  nameWithType: EventHandlerService.GetHandler(Type)
  fullName: System.Windows.Forms.Design.EventHandlerService.GetHandler(Type)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Windows.Forms.Design
  summary: "지정 된 형식의 현재 활성 이벤트 처리기를 가져옵니다."
  remarks: "다른 구성 요소는 임의로 변경할 수 있으므로이 값을 캐시 하지 않아야 합니다. 하지만이 호출은 매우 빠릅니다 항상 동일한 형식의 처리기가 요청 됩니다 하는 경우에 특히 합니다."
  syntax:
    content: public object GetHandler (Type handlerType);
    parameters:
    - id: handlerType
      type: System.Type
      description: "가져올 처리기의 형식입니다."
    return:
      type: System.Object
      description: "처리기의 인스턴스 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 요청 된 형식의 처리기가 없는 경우."
  overload: System.Windows.Forms.Design.EventHandlerService.GetHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Design.EventHandlerService.PopHandler(System.Object)
  id: PopHandler(System.Object)
  parent: System.Windows.Forms.Design.EventHandlerService
  langs:
  - csharp
  name: PopHandler(Object)
  nameWithType: EventHandlerService.PopHandler(Object)
  fullName: System.Windows.Forms.Design.EventHandlerService.PopHandler(Object)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Windows.Forms.Design
  summary: "지정 된 처리기를 스택에서 팝합니다."
  remarks: "처리기 스택의 맨 위 구성 요소가 없는 경우 모든 최대 처리기 및 포함 하 여 이벤트 처리기를 팝 합니다."
  syntax:
    content: public void PopHandler (object handler);
    parameters:
    - id: handler
      type: System.Object
      description: "스택에서 제거할 처리기입니다."
  overload: System.Windows.Forms.Design.EventHandlerService.PopHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Design.EventHandlerService.PushHandler(System.Object)
  id: PushHandler(System.Object)
  parent: System.Windows.Forms.Design.EventHandlerService
  langs:
  - csharp
  name: PushHandler(Object)
  nameWithType: EventHandlerService.PushHandler(Object)
  fullName: System.Windows.Forms.Design.EventHandlerService.PushHandler(Object)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Windows.Forms.Design
  summary: "새 이벤트 처리기를 스택에 푸시합니다."
  remarks: "이 처리기는 호환 되는 처리기 유형을 요청 하는 모든 구성 요소에서 사용 됩니다. 이 처리기는 요청된 된 형식의 지원 하지 않으면 스택의 다음 처리기 사용 됩니다."
  syntax:
    content: public void PushHandler (object handler);
    parameters:
    - id: handler
      type: System.Object
      description: "스택에 추가할 처리기입니다."
  overload: System.Windows.Forms.Design.EventHandlerService.PushHandler*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Windows.Forms.Design.EventHandlerService.#ctor(System.Windows.Forms.Control)
  parent: System.Windows.Forms.Design.EventHandlerService
  isExternal: false
  name: EventHandlerService(Control)
  nameWithType: EventHandlerService.EventHandlerService(Control)
  fullName: System.Windows.Forms.Design.EventHandlerService.EventHandlerService(Control)
- uid: System.Windows.Forms.Control
  parent: System.Windows.Forms
  isExternal: false
  name: Control
  nameWithType: Control
  fullName: System.Windows.Forms.Control
- uid: System.Windows.Forms.Design.EventHandlerService.EventHandlerChanged
  parent: System.Windows.Forms.Design.EventHandlerService
  isExternal: false
  name: EventHandlerChanged
  nameWithType: EventHandlerService.EventHandlerChanged
  fullName: System.Windows.Forms.Design.EventHandlerService.EventHandlerChanged
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Windows.Forms.Design.EventHandlerService.FocusWindow
  parent: System.Windows.Forms.Design.EventHandlerService
  isExternal: false
  name: FocusWindow
  nameWithType: EventHandlerService.FocusWindow
  fullName: System.Windows.Forms.Design.EventHandlerService.FocusWindow
- uid: System.Windows.Forms.Design.EventHandlerService.GetHandler(System.Type)
  parent: System.Windows.Forms.Design.EventHandlerService
  isExternal: false
  name: GetHandler(Type)
  nameWithType: EventHandlerService.GetHandler(Type)
  fullName: System.Windows.Forms.Design.EventHandlerService.GetHandler(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Windows.Forms.Design.EventHandlerService.PopHandler(System.Object)
  parent: System.Windows.Forms.Design.EventHandlerService
  isExternal: false
  name: PopHandler(Object)
  nameWithType: EventHandlerService.PopHandler(Object)
  fullName: System.Windows.Forms.Design.EventHandlerService.PopHandler(Object)
- uid: System.Windows.Forms.Design.EventHandlerService.PushHandler(System.Object)
  parent: System.Windows.Forms.Design.EventHandlerService
  isExternal: false
  name: PushHandler(Object)
  nameWithType: EventHandlerService.PushHandler(Object)
  fullName: System.Windows.Forms.Design.EventHandlerService.PushHandler(Object)
- uid: System.Windows.Forms.Design.EventHandlerService.#ctor*
  parent: System.Windows.Forms.Design.EventHandlerService
  isExternal: false
  name: EventHandlerService
  nameWithType: EventHandlerService.EventHandlerService
- uid: System.Windows.Forms.Design.EventHandlerService.FocusWindow*
  parent: System.Windows.Forms.Design.EventHandlerService
  isExternal: false
  name: FocusWindow
  nameWithType: EventHandlerService.FocusWindow
- uid: System.Windows.Forms.Design.EventHandlerService.GetHandler*
  parent: System.Windows.Forms.Design.EventHandlerService
  isExternal: false
  name: GetHandler
  nameWithType: EventHandlerService.GetHandler
- uid: System.Windows.Forms.Design.EventHandlerService.PopHandler*
  parent: System.Windows.Forms.Design.EventHandlerService
  isExternal: false
  name: PopHandler
  nameWithType: EventHandlerService.PopHandler
- uid: System.Windows.Forms.Design.EventHandlerService.PushHandler*
  parent: System.Windows.Forms.Design.EventHandlerService
  isExternal: false
  name: PushHandler
  nameWithType: EventHandlerService.PushHandler
