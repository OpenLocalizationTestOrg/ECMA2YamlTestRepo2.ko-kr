### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.Eventing.Reader.EventLogReader
  id: EventLogReader
  children:
  - System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery)
  - System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.String)
  - System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery,System.Diagnostics.Eventing.Reader.EventBookmark)
  - System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType)
  - System.Diagnostics.Eventing.Reader.EventLogReader.BatchSize
  - System.Diagnostics.Eventing.Reader.EventLogReader.CancelReading
  - System.Diagnostics.Eventing.Reader.EventLogReader.Dispose
  - System.Diagnostics.Eventing.Reader.EventLogReader.Dispose(System.Boolean)
  - System.Diagnostics.Eventing.Reader.EventLogReader.LogStatus
  - System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent
  - System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent(System.TimeSpan)
  - System.Diagnostics.Eventing.Reader.EventLogReader.Seek(System.Diagnostics.Eventing.Reader.EventBookmark)
  - System.Diagnostics.Eventing.Reader.EventLogReader.Seek(System.Diagnostics.Eventing.Reader.EventBookmark,System.Int64)
  - System.Diagnostics.Eventing.Reader.EventLogReader.Seek(System.IO.SeekOrigin,System.Int64)
  langs:
  - csharp
  name: EventLogReader
  nameWithType: EventLogReader
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader
  type: Class
  summary: "이벤트 쿼리를 기반으로 하는 이벤트 로그에서 이벤트를 읽을 수 있습니다. 이 개체에서 읽은 이벤트로 반환 되 <xref href=&quot;System.Diagnostics.Eventing.Reader.EventRecord&quot;> </xref> 개체입니다."
  remarks: ''
  example:
  - 'For example code using this class, see [How To: Query for Events](http://msdn.microsoft.com/en-us/5231a436-4cf2-4539-90d2-a04813aba069) or [How To: Access and Read Event Information](http://msdn.microsoft.com/en-us/14db3375-d305-49ae-aa24-aedbe906e76c).'
  syntax:
    content: 'public class EventLogReader : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery)
  id: '#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery)'
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  langs:
  - csharp
  name: EventLogReader(EventLogQuery)
  nameWithType: EventLogReader.EventLogReader(EventLogQuery)
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.EventLogReader(EventLogQuery)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Diagnostics.Eventing.Reader.EventLogReader&quot;> </xref> 이벤트 쿼리를 지정 하 여 클래스입니다."
  remarks: "사용 하 여는 <xref:System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent%2A>이 개체에서 이벤트를 검색 하는 메서드입니다.</xref:System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent%2A>"
  syntax:
    content: public EventLogReader (System.Diagnostics.Eventing.Reader.EventLogQuery eventQuery);
    parameters:
    - id: eventQuery
      type: System.Diagnostics.Eventing.Reader.EventLogQuery
      description: "이벤트를 검색 하는 데 사용 되는 이벤트 쿼리."
  overload: System.Diagnostics.Eventing.Reader.EventLogReader.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  langs:
  - csharp
  name: EventLogReader(String)
  nameWithType: EventLogReader.EventLogReader(String)
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.EventLogReader(String)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Diagnostics.Eventing.Reader.EventLogReader&quot;> </xref> 활성 이벤트 로그에서 이벤트를 검색 하려면를 지정 하 여 클래스입니다."
  remarks: "사용 하 여는 <xref:System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent%2A>이 개체에서 이벤트를 검색 하는 메서드입니다.</xref:System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent%2A>"
  syntax:
    content: public EventLogReader (string path);
    parameters:
    - id: path
      type: System.String
      description: "이벤트를 검색할 이벤트 로그의 이름입니다."
  overload: System.Diagnostics.Eventing.Reader.EventLogReader.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery,System.Diagnostics.Eventing.Reader.EventBookmark)
  id: '#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery,System.Diagnostics.Eventing.Reader.EventBookmark)'
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  langs:
  - csharp
  name: EventLogReader(EventLogQuery,EventBookmark)
  nameWithType: EventLogReader.EventLogReader(EventLogQuery,EventBookmark)
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.EventLogReader(EventLogQuery,EventBookmark)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Diagnostics.Eventing.Reader.EventLogReader&quot;> </xref> 이벤트 쿼리 및 시작 위치로 쿼리에 사용 되는 책갈피를 지정 하 여 클래스입니다."
  remarks: "사용 하 여는 <xref:System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent%2A>이 개체에서 이벤트를 검색 하는 메서드입니다.</xref:System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent%2A>"
  syntax:
    content: public EventLogReader (System.Diagnostics.Eventing.Reader.EventLogQuery eventQuery, System.Diagnostics.Eventing.Reader.EventBookmark bookmark);
    parameters:
    - id: eventQuery
      type: System.Diagnostics.Eventing.Reader.EventLogQuery
      description: "이벤트를 검색 하는 데 사용 되는 이벤트 쿼리."
    - id: bookmark
      type: System.Diagnostics.Eventing.Reader.EventBookmark
      description: "이벤트 로그 또는 이벤트 스트림의 시작 위치로 서 사용 되는 책갈피 (자리 표시자). 이벤트만 기록 책갈피 이벤트 쿼리에 의해 반환 됩니다."
  overload: System.Diagnostics.Eventing.Reader.EventLogReader.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType)
  id: '#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType)'
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  langs:
  - csharp
  name: EventLogReader(String,PathType)
  nameWithType: EventLogReader.EventLogReader(String,PathType)
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.EventLogReader(String,PathType)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Diagnostics.Eventing.Reader.EventLogReader&quot;> </xref> 이벤트를 검색할 이벤트 로그 또는 이벤트를 검색할 로그 파일의 경로를 이름을 지정 하 여 클래스입니다."
  remarks: "사용 하 여는 <xref:System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent%2A>이 개체에서 이벤트를 검색 하는 메서드입니다.</xref:System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent%2A>"
  syntax:
    content: public EventLogReader (string path, System.Diagnostics.Eventing.Reader.PathType pathType);
    parameters:
    - id: path
      type: System.String
      description: "이름, 이벤트를 검색할 이벤트 로그 또는 이벤트를 검색할 이벤트 로그 파일의 경로를입니다."
    - id: pathType
      type: System.Diagnostics.Eventing.Reader.PathType
      description: "Path 매개 변수에 사용 되는 문자열의 이벤트 로그 또는 이벤트 로그 파일의 경로 이름을 지정 하는지 여부를 지정 합니다."
  overload: System.Diagnostics.Eventing.Reader.EventLogReader.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.BatchSize
  id: BatchSize
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  langs:
  - csharp
  name: BatchSize
  nameWithType: EventLogReader.BatchSize
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.BatchSize
  type: Property
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "모든 읽기 작업에서 이벤트 스트림을에서 검색 하는 이벤트 수를 가져오거나 설정 합니다."
  syntax:
    content: public int BatchSize { get; set; }
    return:
      type: System.Int32
      description: "정수 값을 반환 합니다."
  overload: System.Diagnostics.Eventing.Reader.EventLogReader.BatchSize*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.CancelReading
  id: CancelReading
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  langs:
  - csharp
  name: CancelReading()
  nameWithType: EventLogReader.CancelReading()
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.CancelReading()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "현재 쿼리 작업을 취소합니다."
  syntax:
    content: public void CancelReading ();
    parameters: []
  overload: System.Diagnostics.Eventing.Reader.EventLogReader.CancelReading*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.Dispose
  id: Dispose
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  langs:
  - csharp
  name: Dispose()
  nameWithType: EventLogReader.Dispose()
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.Dispose()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "이 개체에서 사용 하는 모든 리소스를 해제 합니다."
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Diagnostics.Eventing.Reader.EventLogReader.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: EventLogReader.Dispose(Boolean)
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "이 개체에서 사용 하는 관리 되지 않는 리소스를 해제 하 고 필요에 따라 관리 되는 리소스를 해제 합니다."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>관리 되는 관리 되지 않는 리소스만 해제 하려면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 만 관리 되지 않는 리소스를 해제 합니다."
  overload: System.Diagnostics.Eventing.Reader.EventLogReader.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.LogStatus
  id: LogStatus
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  langs:
  - csharp
  name: LogStatus
  nameWithType: EventLogReader.LogStatus
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.LogStatus
  type: Property
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "각 이벤트 로그 또는 이벤트에 대 한 쿼리에서이 개체와 관련 된 로그 파일의 상태를 가져옵니다."
  syntax:
    content: public System.Collections.Generic.IList<System.Diagnostics.Eventing.Reader.EventLogStatus> LogStatus { get; }
    return:
      type: System.Collections.Generic.IList{System.Diagnostics.Eventing.Reader.EventLogStatus}
      description: "목록을 반환 <xref href=&quot;System.Diagnostics.Eventing.Reader.EventLogStatus&quot;> </xref> 이 개체에서 이벤트 쿼리와 관련 된 이벤트 로그에 대 한 상태 정보가 포함 된 개체입니다."
  overload: System.Diagnostics.Eventing.Reader.EventLogReader.LogStatus*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent
  id: ReadEvent
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  langs:
  - csharp
  name: ReadEvent()
  nameWithType: EventLogReader.ReadEvent()
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "이 개체에 이벤트 쿼리에서 반환 되는 다음 이벤트를 읽습니다."
  remarks: ''
  example:
  - 'For example code using this class, see [How To: Query for Events](http://msdn.microsoft.com/en-us/5231a436-4cf2-4539-90d2-a04813aba069).'
  syntax:
    content: public System.Diagnostics.Eventing.Reader.EventRecord ReadEvent ();
    parameters: []
    return:
      type: System.Diagnostics.Eventing.Reader.EventRecord
      description: "반환 된 <xref href=&quot;System.Diagnostics.Eventing.Reader.EventRecord&quot;> </xref> 개체입니다."
  overload: System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent(System.TimeSpan)
  id: ReadEvent(System.TimeSpan)
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  langs:
  - csharp
  name: ReadEvent(TimeSpan)
  nameWithType: EventLogReader.ReadEvent(TimeSpan)
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent(TimeSpan)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "이 개체에 이벤트 쿼리에서 반환 되는 다음 이벤트를 읽습니다."
  syntax:
    content: public System.Diagnostics.Eventing.Reader.EventRecord ReadEvent (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "작업을 취소 하기 전에 실행할 읽기 작업을 허용 하는 최대 시간입니다."
    return:
      type: System.Diagnostics.Eventing.Reader.EventRecord
      description: "반환 된 <xref href=&quot;System.Diagnostics.Eventing.Reader.EventRecord&quot;> </xref> 개체입니다."
  overload: System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.Seek(System.Diagnostics.Eventing.Reader.EventBookmark)
  id: Seek(System.Diagnostics.Eventing.Reader.EventBookmark)
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  langs:
  - csharp
  name: Seek(EventBookmark)
  nameWithType: EventLogReader.Seek(EventBookmark)
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.Seek(EventBookmark)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "책갈피 이벤트를 지정 하 여 읽을 수 있는 다음 이벤트에서 가져올 위치 이벤트 스트림 내의 위치를 변경 합니다. 검색 되는 책갈피 이벤트 전에 기록 된 이벤트입니다."
  remarks: "관리자 또는 운영 채널 또는.evtx 로그 파일에서 결과 집합에 대해서만이 함수를 사용할 수 있습니다. 이 함수는 분석에서 지원 되지 않습니다 및 디버그 채널, 또는 ETL 파일입니다."
  syntax:
    content: public void Seek (System.Diagnostics.Eventing.Reader.EventBookmark bookmark);
    parameters:
    - id: bookmark
      type: System.Diagnostics.Eventing.Reader.EventBookmark
      description: "이벤트 로그 또는 이벤트 스트림의 시작 위치로 서 사용 되는 책갈피 (자리 표시자). 이벤트만 기록 된 책갈피 이벤트 쿼리에 의해 반환 됩니다."
  overload: System.Diagnostics.Eventing.Reader.EventLogReader.Seek*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.Seek(System.Diagnostics.Eventing.Reader.EventBookmark,System.Int64)
  id: Seek(System.Diagnostics.Eventing.Reader.EventBookmark,System.Int64)
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  langs:
  - csharp
  name: Seek(EventBookmark,Int64)
  nameWithType: EventLogReader.Seek(EventBookmark,Int64)
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.Seek(EventBookmark,Int64)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "변경 내용을 위치 이벤트 스트림 책갈피 이벤트와 이벤트 책갈피에서의 오프셋된 번호를 지정 하 여 읽을 수 있는 다음 이벤트에서 제공 하는 위치입니다. 이벤트가 기록에 오프셋을 더한 책갈피 검색할 수 없습니다."
  remarks: "관리자 또는 운영 채널 또는.evtx 로그 파일에서 결과 집합에 대해서만이 함수를 사용할 수 있습니다. 이 함수는 분석에서 지원 되지 않습니다 및 디버그 채널, 또는 ETL 파일입니다."
  syntax:
    content: public void Seek (System.Diagnostics.Eventing.Reader.EventBookmark bookmark, long offset);
    parameters:
    - id: bookmark
      type: System.Diagnostics.Eventing.Reader.EventBookmark
      description: "이벤트 로그 또는 이벤트 스트림의 시작 위치로 서 사용 되는 책갈피 (자리 표시자). 이벤트만 기록 된 책갈피 이벤트 쿼리에 의해 반환 됩니다."
    - id: offset
      type: System.Int64
      description: "오프셋된 책갈피의 위치를 변경 하는 이벤트 개수입니다."
  overload: System.Diagnostics.Eventing.Reader.EventLogReader.Seek*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.Seek(System.IO.SeekOrigin,System.Int64)
  id: Seek(System.IO.SeekOrigin,System.Int64)
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  langs:
  - csharp
  name: Seek(SeekOrigin,Int64)
  nameWithType: EventLogReader.Seek(SeekOrigin,Int64)
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.Seek(SeekOrigin,Int64)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "시작 위치와 시작 위치에서 오프셋을 지정 하 여 읽을 수 있는 다음 이벤트에서 가져올 위치 이벤트 스트림 내의 위치를 변경 합니다. 이벤트가 기록 시작 위치 오프셋을 더한 주소를 검색할 수는 없습니다."
  remarks: "관리자 또는 운영 채널 또는.evtx 로그 파일에서 결과 집합에 대해서만이 함수를 사용할 수 있습니다. 이 함수는 분석에서 지원 되지 않습니다 및 디버그 채널, 또는 ETL 파일입니다."
  syntax:
    content: public void Seek (System.IO.SeekOrigin origin, long offset);
    parameters:
    - id: origin
      type: System.IO.SeekOrigin
      description: "값은 <xref:System.IO.SeekOrigin>열거형 이벤트에 대 한 쿼리를 시작 하는 이벤트 스트림의에서 위치를 정의 합니다.</xref:System.IO.SeekOrigin>"
    - id: offset
      type: System.Int64
      description: "오프셋된에 추가 하는 이벤트 개수입니다."
  overload: System.Diagnostics.Eventing.Reader.EventLogReader.Seek*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery)
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  isExternal: false
  name: EventLogReader(EventLogQuery)
  nameWithType: EventLogReader.EventLogReader(EventLogQuery)
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.EventLogReader(EventLogQuery)
- uid: System.Diagnostics.Eventing.Reader.EventLogQuery
  parent: System.Diagnostics.Eventing.Reader
  isExternal: false
  name: EventLogQuery
  nameWithType: EventLogQuery
  fullName: System.Diagnostics.Eventing.Reader.EventLogQuery
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.String)
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  isExternal: false
  name: EventLogReader(String)
  nameWithType: EventLogReader.EventLogReader(String)
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.EventLogReader(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery,System.Diagnostics.Eventing.Reader.EventBookmark)
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  isExternal: false
  name: EventLogReader(EventLogQuery,EventBookmark)
  nameWithType: EventLogReader.EventLogReader(EventLogQuery,EventBookmark)
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.EventLogReader(EventLogQuery,EventBookmark)
- uid: System.Diagnostics.Eventing.Reader.EventBookmark
  parent: System.Diagnostics.Eventing.Reader
  isExternal: false
  name: EventBookmark
  nameWithType: EventBookmark
  fullName: System.Diagnostics.Eventing.Reader.EventBookmark
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType)
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  isExternal: false
  name: EventLogReader(String,PathType)
  nameWithType: EventLogReader.EventLogReader(String,PathType)
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.EventLogReader(String,PathType)
- uid: System.Diagnostics.Eventing.Reader.PathType
  parent: System.Diagnostics.Eventing.Reader
  isExternal: false
  name: PathType
  nameWithType: PathType
  fullName: System.Diagnostics.Eventing.Reader.PathType
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.BatchSize
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  isExternal: false
  name: BatchSize
  nameWithType: EventLogReader.BatchSize
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.BatchSize
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.CancelReading
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  isExternal: false
  name: CancelReading()
  nameWithType: EventLogReader.CancelReading()
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.CancelReading()
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.Dispose
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  isExternal: false
  name: Dispose()
  nameWithType: EventLogReader.Dispose()
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.Dispose()
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.Dispose(System.Boolean)
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: EventLogReader.Dispose(Boolean)
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.LogStatus
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  isExternal: false
  name: LogStatus
  nameWithType: EventLogReader.LogStatus
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.LogStatus
- uid: System.Collections.Generic.IList{System.Diagnostics.Eventing.Reader.EventLogStatus}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<EventLogStatus>
  nameWithType: IList<EventLogStatus>
  fullName: System.Collections.Generic.IList<System.Diagnostics.Eventing.Reader.EventLogStatus>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.Diagnostics.Eventing.Reader.EventLogStatus>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Diagnostics.Eventing.Reader.EventLogStatus
    name: EventLogStatus
    nameWithType: EventLogStatus
    fullName: EventLogStatus
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  isExternal: false
  name: ReadEvent()
  nameWithType: EventLogReader.ReadEvent()
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent()
- uid: System.Diagnostics.Eventing.Reader.EventRecord
  parent: System.Diagnostics.Eventing.Reader
  isExternal: false
  name: EventRecord
  nameWithType: EventRecord
  fullName: System.Diagnostics.Eventing.Reader.EventRecord
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent(System.TimeSpan)
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  isExternal: false
  name: ReadEvent(TimeSpan)
  nameWithType: EventLogReader.ReadEvent(TimeSpan)
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent(TimeSpan)
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.Seek(System.Diagnostics.Eventing.Reader.EventBookmark)
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  isExternal: false
  name: Seek(EventBookmark)
  nameWithType: EventLogReader.Seek(EventBookmark)
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.Seek(EventBookmark)
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.Seek(System.Diagnostics.Eventing.Reader.EventBookmark,System.Int64)
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  isExternal: false
  name: Seek(EventBookmark,Int64)
  nameWithType: EventLogReader.Seek(EventBookmark,Int64)
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.Seek(EventBookmark,Int64)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.Seek(System.IO.SeekOrigin,System.Int64)
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  isExternal: false
  name: Seek(SeekOrigin,Int64)
  nameWithType: EventLogReader.Seek(SeekOrigin,Int64)
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.Seek(SeekOrigin,Int64)
- uid: System.IO.SeekOrigin
  parent: System.IO
  isExternal: true
  name: SeekOrigin
  nameWithType: SeekOrigin
  fullName: System.IO.SeekOrigin
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.#ctor*
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  isExternal: false
  name: EventLogReader
  nameWithType: EventLogReader.EventLogReader
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.BatchSize*
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  isExternal: false
  name: BatchSize
  nameWithType: EventLogReader.BatchSize
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.CancelReading*
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  isExternal: false
  name: CancelReading
  nameWithType: EventLogReader.CancelReading
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.Dispose*
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  isExternal: false
  name: Dispose
  nameWithType: EventLogReader.Dispose
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.LogStatus*
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  isExternal: false
  name: LogStatus
  nameWithType: EventLogReader.LogStatus
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent*
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  isExternal: false
  name: ReadEvent
  nameWithType: EventLogReader.ReadEvent
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.Seek*
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  isExternal: false
  name: Seek
  nameWithType: EventLogReader.Seek
