### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Dispatcher.IOperationInvoker
  id: IOperationInvoker
  children:
  - System.ServiceModel.Dispatcher.IOperationInvoker.AllocateInputs
  - System.ServiceModel.Dispatcher.IOperationInvoker.Invoke(System.Object,System.Object[],System.Object[]@)
  - System.ServiceModel.Dispatcher.IOperationInvoker.InvokeBegin(System.Object,System.Object[],System.AsyncCallback,System.Object)
  - System.ServiceModel.Dispatcher.IOperationInvoker.InvokeEnd(System.Object,System.Object[]@,System.IAsyncResult)
  - System.ServiceModel.Dispatcher.IOperationInvoker.IsSynchronous
  langs:
  - csharp
  name: IOperationInvoker
  nameWithType: IOperationInvoker
  fullName: System.ServiceModel.Dispatcher.IOperationInvoker
  type: Interface
  summary: "메서드는 메시지에서 추출 된 매개 변수 배열과 개체, 해당 매개 변수를 사용 하 여 개체에서 메서드를 호출 하 고 메서드의 반환 값을 반환 하 고 있는 출력 매개 변수를 선언 합니다."
  remarks: "형식화 되지 않은 개체 및 매개 변수 배열에서 해당 개체에 대 한 강력한 형식의 메서드 호출의 변환을 제어 하려면 IOperationInvoker 인터페이스를 구현 합니다. 동기 있기 <xref:System.ServiceModel.Dispatcher.IOperationInvoker.Invoke%2A>메서드 형식 개체의 입력 집합과 인스턴스를 사용 하 고 형식 개체의 출력 집합과 개체를 반환 합니다.</xref:System.ServiceModel.Dispatcher.IOperationInvoker.Invoke%2A> 또한 한 <xref:System.ServiceModel.Dispatcher.IOperationInvoker.InvokeBegin%2A>및 [InvokeEnd (개체, 개체\\[\\], IAsyncResult)](assetId:///M:System.ServiceModel.Dispatcher.IOperationInvoker.InvokeEnd(System.Object,System.Object[]@,System.IAsyncResult)?qualifyHint=False&autoUpgrade=True) variant.</xref:System.ServiceModel.Dispatcher.IOperationInvoker.InvokeBegin%2A>  <xref:System.ServiceModel.Dispatcher.IOperationInvoker.IsSynchronous%2A>속성 동기 또는 비동기 메서드를 사용 해야 하는지 여부를 지정 합니다.</xref:System.ServiceModel.Dispatcher.IOperationInvoker.IsSynchronous%2A>"
  syntax:
    content: public interface IOperationInvoker
  implements: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.IOperationInvoker.AllocateInputs
  id: AllocateInputs
  parent: System.ServiceModel.Dispatcher.IOperationInvoker
  langs:
  - csharp
  name: AllocateInputs()
  nameWithType: IOperationInvoker.AllocateInputs()
  fullName: System.ServiceModel.Dispatcher.IOperationInvoker.AllocateInputs()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "반환 된 &lt;xref:System.Array?displayProperty=fullName&gt; 매개 변수 개체의 합니다."
  remarks: "작업에 대 한 매개 변수 배열을 반환 하려면이 구현 합니다. 이 배열은 포맷터로 채워진 되어 호출자에 게 다시 전달 되는 경우 <xref:System.ServiceModel.Dispatcher.IOperationInvoker.Invoke%2A>호출 됩니다.</xref:System.ServiceModel.Dispatcher.IOperationInvoker.Invoke%2A>"
  syntax:
    content: public object[] AllocateInputs ();
    parameters: []
    return:
      type: System.Object[]
      description: "작업에 대 한 인수로 사용할 수 있는 매개 변수입니다."
  overload: System.ServiceModel.Dispatcher.IOperationInvoker.AllocateInputs*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.IOperationInvoker.Invoke(System.Object,System.Object[],System.Object[]@)
  id: Invoke(System.Object,System.Object[],System.Object[]@)
  parent: System.ServiceModel.Dispatcher.IOperationInvoker
  langs:
  - csharp
  name: Invoke(Object,Object[],Object[])
  nameWithType: IOperationInvoker.Invoke(Object,Object[],Object[])
  fullName: System.ServiceModel.Dispatcher.IOperationInvoker.Invoke(Object,Object[],Object[])
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "입력된 개체의 집합 및 인스턴스로부터 출력 개체 집합과 개체를 반환합니다."
  syntax:
    content: public object Invoke (object instance, object[] inputs, out object[] outputs);
    parameters:
    - id: instance
      type: System.Object
      description: "호출 되는 개체입니다."
    - id: inputs
      type: System.Object[]
      description: "메서드에 대 한 입력입니다."
    - id: outputs
      type: System.Object[]
      description: "메서드의 출력입니다."
    return:
      type: System.Object
      description: "반환 값입니다."
  overload: System.ServiceModel.Dispatcher.IOperationInvoker.Invoke*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.IOperationInvoker.InvokeBegin(System.Object,System.Object[],System.AsyncCallback,System.Object)
  id: InvokeBegin(System.Object,System.Object[],System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Dispatcher.IOperationInvoker
  langs:
  - csharp
  name: InvokeBegin(Object,Object[],AsyncCallback,Object)
  nameWithType: IOperationInvoker.InvokeBegin(Object,Object[],AsyncCallback,Object)
  fullName: System.ServiceModel.Dispatcher.IOperationInvoker.InvokeBegin(Object,Object[],AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "비동기 구현은 <xref:System.ServiceModel.Dispatcher.IOperationInvoker.Invoke*>메서드.</xref:System.ServiceModel.Dispatcher.IOperationInvoker.Invoke*>"
  syntax:
    content: public IAsyncResult InvokeBegin (object instance, object[] inputs, AsyncCallback callback, object state);
    parameters:
    - id: instance
      type: System.Object
      description: "호출 되는 개체입니다."
    - id: inputs
      type: System.Object[]
      description: "메서드에 대 한 입력입니다."
    - id: callback
      type: System.AsyncCallback
      description: "비동기 콜백 개체입니다."
    - id: state
      type: System.Object
      description: "연결 된 상태 데이터입니다."
    return:
      type: System.IAsyncResult
      description: "A &lt;xref:System.IAsyncResult?displayProperty=fullName&gt; 비동기 호출을 완료 하는 데 사용 합니다."
  overload: System.ServiceModel.Dispatcher.IOperationInvoker.InvokeBegin*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.IOperationInvoker.InvokeEnd(System.Object,System.Object[]@,System.IAsyncResult)
  id: InvokeEnd(System.Object,System.Object[]@,System.IAsyncResult)
  parent: System.ServiceModel.Dispatcher.IOperationInvoker
  langs:
  - csharp
  name: InvokeEnd(Object,Object[],IAsyncResult)
  nameWithType: IOperationInvoker.InvokeEnd(Object,Object[],IAsyncResult)
  fullName: System.ServiceModel.Dispatcher.IOperationInvoker.InvokeEnd(Object,Object[],IAsyncResult)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "비동기 end 메서드입니다."
  syntax:
    content: public object InvokeEnd (object instance, out object[] outputs, IAsyncResult result);
    parameters:
    - id: instance
      type: System.Object
      description: "호출 되는 개체입니다."
    - id: outputs
      type: System.Object[]
      description: "메서드의 출력입니다."
    - id: result
      type: System.IAsyncResult
      description: "&lt;xref:System.IAsyncResult?displayProperty=fullName&gt; 개체입니다."
    return:
      type: System.Object
      description: "반환 값입니다."
  overload: System.ServiceModel.Dispatcher.IOperationInvoker.InvokeEnd*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.IOperationInvoker.IsSynchronous
  id: IsSynchronous
  parent: System.ServiceModel.Dispatcher.IOperationInvoker
  langs:
  - csharp
  name: IsSynchronous
  nameWithType: IOperationInvoker.IsSynchronous
  fullName: System.ServiceModel.Dispatcher.IOperationInvoker.IsSynchronous
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "지정 하는 값을 가져옵니다 여부는 <> </> *> 또는 <> </> *> 발송자 메서드를 호출 합니다."
  remarks: "기본 호출자는 기본적으로 동기 작업에 메시지를 디스패치합니다. 이 값은 디스패처에서 캐시 되 고 따라서 <xref:System.ServiceModel.Dispatcher.IOperationInvoker>.</xref:System.ServiceModel.Dispatcher.IOperationInvoker> 를 구현 하는 개체의 수명 동안 변경 하지 않아야"
  syntax:
    content: public bool IsSynchronous { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>디스패처에서 동기 작업에서 호출 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.ServiceModel.Dispatcher.IOperationInvoker.IsSynchronous*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Dispatcher.IOperationInvoker.AllocateInputs
  parent: System.ServiceModel.Dispatcher.IOperationInvoker
  isExternal: false
  name: AllocateInputs()
  nameWithType: IOperationInvoker.AllocateInputs()
  fullName: System.ServiceModel.Dispatcher.IOperationInvoker.AllocateInputs()
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ServiceModel.Dispatcher.IOperationInvoker.Invoke(System.Object,System.Object[],System.Object[]@)
  parent: System.ServiceModel.Dispatcher.IOperationInvoker
  isExternal: false
  name: Invoke(Object,Object[],Object[])
  nameWithType: IOperationInvoker.Invoke(Object,Object[],Object[])
  fullName: System.ServiceModel.Dispatcher.IOperationInvoker.Invoke(Object,Object[],Object[])
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ServiceModel.Dispatcher.IOperationInvoker.InvokeBegin(System.Object,System.Object[],System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Dispatcher.IOperationInvoker
  isExternal: false
  name: InvokeBegin(Object,Object[],AsyncCallback,Object)
  nameWithType: IOperationInvoker.InvokeBegin(Object,Object[],AsyncCallback,Object)
  fullName: System.ServiceModel.Dispatcher.IOperationInvoker.InvokeBegin(Object,Object[],AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.ServiceModel.Dispatcher.IOperationInvoker.InvokeEnd(System.Object,System.Object[]@,System.IAsyncResult)
  parent: System.ServiceModel.Dispatcher.IOperationInvoker
  isExternal: false
  name: InvokeEnd(Object,Object[],IAsyncResult)
  nameWithType: IOperationInvoker.InvokeEnd(Object,Object[],IAsyncResult)
  fullName: System.ServiceModel.Dispatcher.IOperationInvoker.InvokeEnd(Object,Object[],IAsyncResult)
- uid: System.ServiceModel.Dispatcher.IOperationInvoker.IsSynchronous
  parent: System.ServiceModel.Dispatcher.IOperationInvoker
  isExternal: false
  name: IsSynchronous
  nameWithType: IOperationInvoker.IsSynchronous
  fullName: System.ServiceModel.Dispatcher.IOperationInvoker.IsSynchronous
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Dispatcher.IOperationInvoker.AllocateInputs*
  parent: System.ServiceModel.Dispatcher.IOperationInvoker
  isExternal: false
  name: AllocateInputs
  nameWithType: IOperationInvoker.AllocateInputs
- uid: System.ServiceModel.Dispatcher.IOperationInvoker.Invoke*
  parent: System.ServiceModel.Dispatcher.IOperationInvoker
  isExternal: false
  name: Invoke
  nameWithType: IOperationInvoker.Invoke
- uid: System.ServiceModel.Dispatcher.IOperationInvoker.InvokeBegin*
  parent: System.ServiceModel.Dispatcher.IOperationInvoker
  isExternal: false
  name: InvokeBegin
  nameWithType: IOperationInvoker.InvokeBegin
- uid: System.ServiceModel.Dispatcher.IOperationInvoker.InvokeEnd*
  parent: System.ServiceModel.Dispatcher.IOperationInvoker
  isExternal: false
  name: InvokeEnd
  nameWithType: IOperationInvoker.InvokeEnd
- uid: System.ServiceModel.Dispatcher.IOperationInvoker.IsSynchronous*
  parent: System.ServiceModel.Dispatcher.IOperationInvoker
  isExternal: false
  name: IsSynchronous
  nameWithType: IOperationInvoker.IsSynchronous
