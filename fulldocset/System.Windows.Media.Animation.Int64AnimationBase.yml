### YamlMime:ManagedReference
items:
- uid: System.Windows.Media.Animation.Int64AnimationBase
  id: Int64AnimationBase
  children:
  - System.Windows.Media.Animation.Int64AnimationBase.#ctor
  - System.Windows.Media.Animation.Int64AnimationBase.Clone
  - System.Windows.Media.Animation.Int64AnimationBase.GetCurrentValue(System.Int64,System.Int64,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.Media.Animation.Int64AnimationBase.GetCurrentValue(System.Object,System.Object,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.Media.Animation.Int64AnimationBase.GetCurrentValueCore(System.Int64,System.Int64,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.Media.Animation.Int64AnimationBase.TargetPropertyType
  langs:
  - csharp
  name: Int64AnimationBase
  nameWithType: Int64AnimationBase
  fullName: System.Windows.Media.Animation.Int64AnimationBase
  type: Class
  summary: "구현 된 경우는 추상 클래스 애니메이션 효과 적용 한 <xref:System.Int64>값.</xref:System.Int64>"
  remarks: ''
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames> class in [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)], but generically shows how to use other derived classes such as <xref:System.Windows.Media.Animation.Int64AnimationUsingKeyFrames>.  \n  \n [!code-xml[keyframes_ovw_snip#AltDoubleAnimationUsingKeyFramesWholePage](~/add/codesnippet/xaml/t-system.windows.media.a_1_1.xaml)]\n [!code-xml[keyframes_ovw_snip#AltDoubleAnimationUsingKeyFramesWholePage](~/add/codesnippet/xaml/t-system.windows.media.a_1_1.xaml)]"
  syntax:
    content: 'public abstract class Int64AnimationBase : System.Windows.Media.Animation.AnimationTimeline'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  - System.Windows.Freezable
  - System.Windows.Media.Animation.Animatable
  - System.Windows.Media.Animation.Timeline
  - System.Windows.Media.Animation.AnimationTimeline
  implements: []
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Freezable.CanFreeze
  - System.Windows.Freezable.Changed
  - System.Windows.Freezable.CloneCore(System.Windows.Freezable)
  - System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)
  - System.Windows.Freezable.CreateInstance
  - System.Windows.Freezable.CreateInstanceCore
  - System.Windows.Freezable.Freeze
  - System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)
  - System.Windows.Freezable.GetAsFrozen
  - System.Windows.Freezable.GetCurrentValueAsFrozen
  - System.Windows.Freezable.IsFrozen
  - System.Windows.Freezable.OnChanged
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)
  - System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.Freezable.ReadPreamble
  - System.Windows.Freezable.WritePostscript
  - System.Windows.Freezable.WritePreamble
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)
  - System.Windows.Media.Animation.Animatable.HasAnimatedProperties
  - System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)
  - System.Windows.Media.Animation.AnimationTimeline.AllocateClock
  - System.Windows.Media.Animation.AnimationTimeline.CreateClock
  - System.Windows.Media.Animation.AnimationTimeline.GetNaturalDurationCore(System.Windows.Media.Animation.Clock)
  - System.Windows.Media.Animation.AnimationTimeline.IsAdditiveProperty
  - System.Windows.Media.Animation.AnimationTimeline.IsCumulativeProperty
  - System.Windows.Media.Animation.AnimationTimeline.IsDestinationDefault
  - System.Windows.Media.Animation.Timeline.AccelerationRatio
  - System.Windows.Media.Animation.Timeline.AccelerationRatioProperty
  - System.Windows.Media.Animation.Timeline.AutoReverse
  - System.Windows.Media.Animation.Timeline.AutoReverseProperty
  - System.Windows.Media.Animation.Timeline.BeginTime
  - System.Windows.Media.Animation.Timeline.BeginTimeProperty
  - System.Windows.Media.Animation.Timeline.CloneCurrentValue
  - System.Windows.Media.Animation.Timeline.Completed
  - System.Windows.Media.Animation.Timeline.CreateClock(System.Boolean)
  - System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated
  - System.Windows.Media.Animation.Timeline.CurrentStateInvalidated
  - System.Windows.Media.Animation.Timeline.CurrentTimeInvalidated
  - System.Windows.Media.Animation.Timeline.DecelerationRatio
  - System.Windows.Media.Animation.Timeline.DecelerationRatioProperty
  - System.Windows.Media.Animation.Timeline.DesiredFrameRateProperty
  - System.Windows.Media.Animation.Timeline.Duration
  - System.Windows.Media.Animation.Timeline.DurationProperty
  - System.Windows.Media.Animation.Timeline.FillBehavior
  - System.Windows.Media.Animation.Timeline.FillBehaviorProperty
  - System.Windows.Media.Animation.Timeline.FreezeCore(System.Boolean)
  - System.Windows.Media.Animation.Timeline.GetAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Media.Animation.Timeline.GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Media.Animation.Timeline.GetDesiredFrameRate(System.Windows.Media.Animation.Timeline)
  - System.Windows.Media.Animation.Timeline.GetNaturalDuration(System.Windows.Media.Animation.Clock)
  - System.Windows.Media.Animation.Timeline.Name
  - System.Windows.Media.Animation.Timeline.NameProperty
  - System.Windows.Media.Animation.Timeline.RemoveRequested
  - System.Windows.Media.Animation.Timeline.RepeatBehavior
  - System.Windows.Media.Animation.Timeline.RepeatBehaviorProperty
  - System.Windows.Media.Animation.Timeline.SetDesiredFrameRate(System.Windows.Media.Animation.Timeline,System.Nullable{System.Int32})
  - System.Windows.Media.Animation.Timeline.SpeedRatio
  - System.Windows.Media.Animation.Timeline.SpeedRatioProperty
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Media.Animation.Int64AnimationBase.#ctor
  id: '#ctor'
  parent: System.Windows.Media.Animation.Int64AnimationBase
  langs:
  - csharp
  name: Int64AnimationBase()
  nameWithType: Int64AnimationBase.Int64AnimationBase()
  fullName: System.Windows.Media.Animation.Int64AnimationBase.Int64AnimationBase()
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Windows.Media.Animation.Int64AnimationBase&quot;> </xref> 클래스입니다."
  syntax:
    content: protected Int64AnimationBase ();
    parameters: []
  overload: System.Windows.Media.Animation.Int64AnimationBase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Int64AnimationBase.Clone
  id: Clone
  parent: System.Windows.Media.Animation.Int64AnimationBase
  langs:
  - csharp
  name: Clone()
  nameWithType: Int64AnimationBase.Clone()
  fullName: System.Windows.Media.Animation.Int64AnimationBase.Clone()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "수정 가능한 복제본을 만듭니다 <xref href=&quot;System.Windows.Media.Animation.Int64AnimationBase&quot;> </xref>,이 개체 값의 전체 복사본입니다. 종속성 속성을 복사 하는 경우이 메서드는 리소스 참조와 데이터 바인딩을 복사 (하지만 이러한 요소는 더 이상 확인) 나 하지 않습니다 애니메이션의 현재 값입니다."
  remarks: "수정 가능한 복사본을 생성 하기 위해이 메서드는 고정 된 <xref:System.Windows.Freezable>개체 (또는 모든 <xref:System.Windows.Freezable>개체).</xref:System.Windows.Freezable> </xref:System.Windows.Freezable> 편의 위해이 메서드는 강력한 형식의 구현이 포함 된 상속 된 버전을 숨깁니다.       자세한 내용은 <xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>.</xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName> 을 참조 하십시오."
  syntax:
    content: public System.Windows.Media.Animation.Int64AnimationBase Clone ();
    parameters: []
    return:
      type: System.Windows.Media.Animation.Int64AnimationBase
      description: "현재 개체의 수정 가능한 복제본입니다. 복제 된 개체의 <> </> *> 속성은 됩니다 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 경우에 원본의 <> </> *> 속성은<xref uid=&quot;langword_csharp_true.&quot; name=&quot;true.&quot; href=&quot;&quot;></xref>"
  overload: System.Windows.Media.Animation.Int64AnimationBase.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Int64AnimationBase.GetCurrentValue(System.Int64,System.Int64,System.Windows.Media.Animation.AnimationClock)
  id: GetCurrentValue(System.Int64,System.Int64,System.Windows.Media.Animation.AnimationClock)
  parent: System.Windows.Media.Animation.Int64AnimationBase
  langs:
  - csharp
  name: GetCurrentValue(Int64,Int64,AnimationClock)
  nameWithType: Int64AnimationBase.GetCurrentValue(Int64,Int64,AnimationClock)
  fullName: System.Windows.Media.Animation.Int64AnimationBase.GetCurrentValue(Int64,Int64,AnimationClock)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "애니메이션의 현재 값을 가져옵니다."
  remarks: "값은 `defaultOriginValue` 컴퍼지션 체인에서 애니메이션의 위치에 따라 달라 집니다 매개 변수:-애니메이션 컴퍼지션 체인에서 첫 번째 위치에 있고 다른 애니메이션을 대체 하는 경우 `defaultOriginValue` 은 대체 된 시간에 해당 애니메이션의 출력입니다.      -애니메이션을 컴퍼지션 체인의 첫 번째 위치에 사용 되며를 바꾸려면 존재 애니메이션이 없는 경우 `defaultOriginValue` 속성의 기본 값입니다.      -이 애니메이션에 없는 경우 첫 번째 위치는 컴퍼지션 체인 `defaultOriginValue` 는 컴퍼지션 체인에서 이전 애니메이션에 따라 반환 되는 값은 한 <xref:System.Windows.Media.Animation.AnimationClock>없는 <xref:System.Windows.Media.Animation.Clock.Stopped%2A>.</xref:System.Windows.Media.Animation.Clock.Stopped%2A> </xref:System.Windows.Media.Animation.AnimationClock>       값은 `defaultDestinationValue` 매개 변수 인지 여부에 따라 달라 집니다 이전 속성이 <xref:System.Windows.Trigger>컴퍼지션 레이어.</xref:System.Windows.Trigger>      -이전 속성이 있으면 <xref:System.Windows.Trigger>컴퍼지션 레이어 `defaultDestinationValue` 은 해당 계층의 출력.</xref:System.Windows.Trigger>      -있으면 이전 컴퍼지션 계층이 없으면 `defaultDestinationValue` 애니메이션을 적용 하려는 속성의 기본 값입니다.       애니메이션 composition에 대 한 자세한 내용은 참조는 [애니메이션 및 타이밍 시스템 개요](~/add/includes/ajax-current-ext-md.md)합니다. 사용자 지정 애니메이션 형식 만들기에 대 한 자세한 내용은 참조는 [사용자 지정 애니메이션 개요](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public long GetCurrentValue (long defaultOriginValue, long defaultDestinationValue, System.Windows.Media.Animation.AnimationClock animationClock);
    parameters:
    - id: defaultOriginValue
      type: System.Int64
      description: "애니메이션에 고유한 시작 값이 없는 경우 애니메이션에 제공 된 원점 값입니다."
    - id: defaultDestinationValue
      type: System.Int64
      description: "애니메이션에 고유한 대상 값이 없는 경우 애니메이션에 제공 되는 대상 값입니다."
    - id: animationClock
      type: System.Windows.Media.Animation.AnimationClock
      description: "<xref href=&quot;System.Windows.Media.Animation.AnimationClock&quot;> </xref> 생성할 수 있는 <> </> *> 또는 <> </> *> 값을 출력 값을 생성 하는 애니메이션에 따라 사용할 수 있습니다."
    return:
      type: System.Int64
      description: "이 애니메이션에서 가정 하는 값에는 속성에 대 한 현재 값 이어야 합니다."
  overload: System.Windows.Media.Animation.Int64AnimationBase.GetCurrentValue*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Int64AnimationBase.GetCurrentValue(System.Object,System.Object,System.Windows.Media.Animation.AnimationClock)
  id: GetCurrentValue(System.Object,System.Object,System.Windows.Media.Animation.AnimationClock)
  parent: System.Windows.Media.Animation.Int64AnimationBase
  langs:
  - csharp
  name: GetCurrentValue(Object,Object,AnimationClock)
  nameWithType: Int64AnimationBase.GetCurrentValue(Object,Object,AnimationClock)
  fullName: System.Windows.Media.Animation.Int64AnimationBase.GetCurrentValue(Object,Object,AnimationClock)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "애니메이션의 현재 값을 가져옵니다."
  remarks: "값은 `defaultOriginValue` 컴퍼지션 체인에서 애니메이션의 위치에 따라 달라 집니다 매개 변수:-애니메이션 컴퍼지션 체인에서 첫 번째 위치에 있고 다른 애니메이션을 대체 하는 경우 `defaultOriginValue` 은 대체 된 시간에 해당 애니메이션의 출력입니다.      -애니메이션을 컴퍼지션 체인의 첫 번째 위치에 사용 되며를 바꾸려면 존재 애니메이션이 없는 경우 `defaultOriginValue` 속성의 기본 값입니다.      -이 애니메이션에 없는 경우 첫 번째 위치는 컴퍼지션 체인 `defaultOriginValue` 는 컴퍼지션 체인에서 이전 애니메이션에 따라 반환 되는 값은 한 <xref:System.Windows.Media.Animation.AnimationClock>없는 <xref:System.Windows.Media.Animation.Clock.Stopped%2A>.</xref:System.Windows.Media.Animation.Clock.Stopped%2A> </xref:System.Windows.Media.Animation.AnimationClock>       값은 `defaultDestinationValue` 매개 변수 인지 여부에 따라 달라 집니다 이전 속성이 <xref:System.Windows.Trigger>컴퍼지션 레이어.</xref:System.Windows.Trigger>      -이전 속성이 있으면 <xref:System.Windows.Trigger>컴퍼지션 레이어 `defaultDestinationValue` 은 해당 계층의 출력.</xref:System.Windows.Trigger>      -있으면 이전 컴퍼지션 계층이 없으면 `defaultDestinationValue` 애니메이션을 적용 하려는 속성의 기본 값입니다.       애니메이션 composition에 대 한 자세한 내용은 참조는 [애니메이션 및 타이밍 시스템 개요](~/add/includes/ajax-current-ext-md.md)합니다. 사용자 지정 애니메이션 형식 만들기에 대 한 자세한 내용은 참조는 [사용자 지정 애니메이션 개요](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public override sealed object GetCurrentValue (object defaultOriginValue, object defaultDestinationValue, System.Windows.Media.Animation.AnimationClock animationClock);
    parameters:
    - id: defaultOriginValue
      type: System.Object
      description: "애니메이션에 고유한 시작 값이 없는 경우 애니메이션에 제공 된 원점 값입니다."
    - id: defaultDestinationValue
      type: System.Object
      description: "애니메이션에 고유한 대상 값이 없는 경우 애니메이션에 제공 되는 대상 값입니다."
    - id: animationClock
      type: System.Windows.Media.Animation.AnimationClock
      description: "<xref href=&quot;System.Windows.Media.Animation.AnimationClock&quot;> </xref> 생성할 수 있는 <> </> *> 또는 <> </> *> 값을 출력 값을 생성 하는 애니메이션에 따라 사용할 수 있습니다."
    return:
      type: System.Object
      description: "이 애니메이션에서 가정 하는 값에는 속성에 대 한 현재 값 이어야 합니다."
  overload: System.Windows.Media.Animation.Int64AnimationBase.GetCurrentValue*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Int64AnimationBase.GetCurrentValueCore(System.Int64,System.Int64,System.Windows.Media.Animation.AnimationClock)
  id: GetCurrentValueCore(System.Int64,System.Int64,System.Windows.Media.Animation.AnimationClock)
  parent: System.Windows.Media.Animation.Int64AnimationBase
  langs:
  - csharp
  name: GetCurrentValueCore(Int64,Int64,AnimationClock)
  nameWithType: Int64AnimationBase.GetCurrentValueCore(Int64,Int64,AnimationClock)
  fullName: System.Windows.Media.Animation.Int64AnimationBase.GetCurrentValueCore(Int64,Int64,AnimationClock)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "호스트 애니메이션에 따라 결정 된 대로 애니메이션 효과 줄 속성의 현재 값을 나타내는 값을 계산 합니다."
  remarks: "값은 `defaultOriginValue` 컴퍼지션 체인에서 애니메이션의 위치에 따라 달라 집니다 매개 변수:-애니메이션 컴퍼지션 체인에서 첫 번째 위치에 있고 다른 애니메이션을 대체 하는 경우 `defaultOriginValue` 은 대체 된 시간에 해당 애니메이션의 출력입니다.      -애니메이션을 컴퍼지션 체인의 첫 번째 위치에 사용 되며를 바꾸려면 존재 애니메이션이 없는 경우 `defaultOriginValue` 속성의 기본 값입니다.      -이 애니메이션에 없는 경우 첫 번째 위치는 컴퍼지션 체인 `defaultOriginValue` 는 컴퍼지션 체인에서 이전 애니메이션에 따라 반환 되는 값은 한 <xref:System.Windows.Media.Animation.AnimationClock>없는 <xref:System.Windows.Media.Animation.Clock.Stopped%2A>.</xref:System.Windows.Media.Animation.Clock.Stopped%2A> </xref:System.Windows.Media.Animation.AnimationClock>       값은 `defaultDestinationValue` 매개 변수 인지 여부에 따라 달라 집니다 이전 속성이 <xref:System.Windows.Trigger>컴퍼지션 레이어.</xref:System.Windows.Trigger>      -이전 속성이 있으면 <xref:System.Windows.Trigger>컴퍼지션 레이어 `defaultDestinationValue` 은 해당 계층의 출력.</xref:System.Windows.Trigger>      -있으면 이전 컴퍼지션 계층이 없으면 `defaultDestinationValue` 애니메이션을 적용 하려는 속성의 기본 값입니다.       애니메이션 composition에 대 한 자세한 내용은 참조는 [애니메이션 및 타이밍 시스템 개요](~/add/includes/ajax-current-ext-md.md)합니다. 사용자 지정 애니메이션 형식 만들기에 대 한 자세한 내용은 참조는 [사용자 지정 애니메이션 개요](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: protected abstract long GetCurrentValueCore (long defaultOriginValue, long defaultDestinationValue, System.Windows.Media.Animation.AnimationClock animationClock);
    parameters:
    - id: defaultOriginValue
      type: System.Int64
      description: "애니메이션에 명시적으로 설정 된 자체 없는 경우 사용 하는 제안 된 원점 값 시작 값입니다."
    - id: defaultDestinationValue
      type: System.Int64
      description: "애니메이션에 명시적으로 설정 된 자체 없는 경우 사용 하는 제안 된 대상 값 끝 값입니다."
    - id: animationClock
      type: System.Windows.Media.Animation.AnimationClock
      description: "<xref href=&quot;System.Windows.Media.Animation.AnimationClock&quot;> </xref> 생성 하는 <> </> *> 또는 <> </> *> 호스트 애니메이션에 사용 합니다."
    return:
      type: System.Int64
      description: "현재 애니메이션에 따라 결정 된 속성의 계산 된 값입니다."
  overload: System.Windows.Media.Animation.Int64AnimationBase.GetCurrentValueCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Int64AnimationBase.TargetPropertyType
  id: TargetPropertyType
  parent: System.Windows.Media.Animation.Int64AnimationBase
  langs:
  - csharp
  name: TargetPropertyType
  nameWithType: Int64AnimationBase.TargetPropertyType
  fullName: System.Windows.Media.Animation.Int64AnimationBase.TargetPropertyType
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "이 애니메이션이 생성 하는 값의 형식을 가져옵니다."
  syntax:
    content: public override sealed Type TargetPropertyType { get; }
    return:
      type: System.Type
      description: "이 애니메이션이 생성 하는 값의 형식입니다."
  overload: System.Windows.Media.Animation.Int64AnimationBase.TargetPropertyType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Media.Animation.AnimationTimeline
  isExternal: false
  name: System.Windows.Media.Animation.AnimationTimeline
- uid: System.Windows.Media.Animation.Int64AnimationBase.#ctor
  parent: System.Windows.Media.Animation.Int64AnimationBase
  isExternal: false
  name: Int64AnimationBase()
  nameWithType: Int64AnimationBase.Int64AnimationBase()
  fullName: System.Windows.Media.Animation.Int64AnimationBase.Int64AnimationBase()
- uid: System.Windows.Media.Animation.Int64AnimationBase.Clone
  parent: System.Windows.Media.Animation.Int64AnimationBase
  isExternal: false
  name: Clone()
  nameWithType: Int64AnimationBase.Clone()
  fullName: System.Windows.Media.Animation.Int64AnimationBase.Clone()
- uid: System.Windows.Media.Animation.Int64AnimationBase
  parent: System.Windows.Media.Animation
  isExternal: false
  name: Int64AnimationBase
  nameWithType: Int64AnimationBase
  fullName: System.Windows.Media.Animation.Int64AnimationBase
- uid: System.Windows.Media.Animation.Int64AnimationBase.GetCurrentValue(System.Int64,System.Int64,System.Windows.Media.Animation.AnimationClock)
  parent: System.Windows.Media.Animation.Int64AnimationBase
  isExternal: false
  name: GetCurrentValue(Int64,Int64,AnimationClock)
  nameWithType: Int64AnimationBase.GetCurrentValue(Int64,Int64,AnimationClock)
  fullName: System.Windows.Media.Animation.Int64AnimationBase.GetCurrentValue(Int64,Int64,AnimationClock)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Windows.Media.Animation.AnimationClock
  parent: System.Windows.Media.Animation
  isExternal: false
  name: AnimationClock
  nameWithType: AnimationClock
  fullName: System.Windows.Media.Animation.AnimationClock
- uid: System.Windows.Media.Animation.Int64AnimationBase.GetCurrentValue(System.Object,System.Object,System.Windows.Media.Animation.AnimationClock)
  parent: System.Windows.Media.Animation.Int64AnimationBase
  isExternal: false
  name: GetCurrentValue(Object,Object,AnimationClock)
  nameWithType: Int64AnimationBase.GetCurrentValue(Object,Object,AnimationClock)
  fullName: System.Windows.Media.Animation.Int64AnimationBase.GetCurrentValue(Object,Object,AnimationClock)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Media.Animation.Int64AnimationBase.GetCurrentValueCore(System.Int64,System.Int64,System.Windows.Media.Animation.AnimationClock)
  parent: System.Windows.Media.Animation.Int64AnimationBase
  isExternal: false
  name: GetCurrentValueCore(Int64,Int64,AnimationClock)
  nameWithType: Int64AnimationBase.GetCurrentValueCore(Int64,Int64,AnimationClock)
  fullName: System.Windows.Media.Animation.Int64AnimationBase.GetCurrentValueCore(Int64,Int64,AnimationClock)
- uid: System.Windows.Media.Animation.Int64AnimationBase.TargetPropertyType
  parent: System.Windows.Media.Animation.Int64AnimationBase
  isExternal: false
  name: TargetPropertyType
  nameWithType: Int64AnimationBase.TargetPropertyType
  fullName: System.Windows.Media.Animation.Int64AnimationBase.TargetPropertyType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Windows.Media.Animation.Int64AnimationBase.#ctor*
  parent: System.Windows.Media.Animation.Int64AnimationBase
  isExternal: false
  name: Int64AnimationBase
  nameWithType: Int64AnimationBase.Int64AnimationBase
- uid: System.Windows.Media.Animation.Int64AnimationBase.Clone*
  parent: System.Windows.Media.Animation.Int64AnimationBase
  isExternal: false
  name: Clone
  nameWithType: Int64AnimationBase.Clone
- uid: System.Windows.Media.Animation.Int64AnimationBase.GetCurrentValue*
  parent: System.Windows.Media.Animation.Int64AnimationBase
  isExternal: false
  name: GetCurrentValue
  nameWithType: Int64AnimationBase.GetCurrentValue
- uid: System.Windows.Media.Animation.Int64AnimationBase.GetCurrentValueCore*
  parent: System.Windows.Media.Animation.Int64AnimationBase
  isExternal: false
  name: GetCurrentValueCore
  nameWithType: Int64AnimationBase.GetCurrentValueCore
- uid: System.Windows.Media.Animation.Int64AnimationBase.TargetPropertyType*
  parent: System.Windows.Media.Animation.Int64AnimationBase
  isExternal: false
  name: TargetPropertyType
  nameWithType: Int64AnimationBase.TargetPropertyType
