### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  id: SessionSecurityTokenCacheKey
  children:
  - System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.#ctor(System.String,System.Xml.UniqueId,System.Xml.UniqueId)
  - System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.ContextId
  - System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.EndpointId
  - System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.Equals(System.Object)
  - System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.GetHashCode
  - System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.IgnoreKeyGeneration
  - System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration
  - System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.op_Equality(System.IdentityModel.Tokens.SessionSecurityTokenCacheKey,System.IdentityModel.Tokens.SessionSecurityTokenCacheKey)
  - System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.op_Inequality(System.IdentityModel.Tokens.SessionSecurityTokenCacheKey,System.IdentityModel.Tokens.SessionSecurityTokenCacheKey)
  - System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.ToString
  langs:
  - csharp
  name: SessionSecurityTokenCacheKey
  nameWithType: SessionSecurityTokenCacheKey
  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  type: Class
  summary: "에 있는 항목에 대 한 키를 나타내는 <xref href=&quot;System.IdentityModel.Tokens.SessionSecurityTokenCache&quot;> </xref>합니다."
  remarks: "캐시할 때는 <xref:System.IdentityModel.Tokens.SessionSecurityToken>두 개의 인덱스가 필요 합니다.</xref:System.IdentityModel.Tokens.SessionSecurityToken> 하나는 컨텍스트 ID가 나타내는 <xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A?displayProperty=fullName>속성은 모든 세션 토큰에서 고유입니다.</xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A?displayProperty=fullName> 가 나타내는 키 생성, 다른 하나는 <xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A?displayProperty=fullName>속성, 즉 세션 토큰 내에서 고유 합니다.</xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A?displayProperty=fullName> 세션 토큰에서 실행 될 때만 ID가 있습니다. 컨텍스트 세션 토큰 갱신 되 면 키 생성 추가 됩니다. 갱신 후 갱신 된 세션 토큰은 컨텍스트 ID 및 키 생성을 통해 고유 하 게 식별 합니다.       세션 토큰 캐시에 대 한 인덱스가로 SessionSecurityTokenCacheKey 형식의 개체에 사용 됩니다. 인덱스는 유효한은 항상 <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.ContextId%2A>속성이 지정 되지만 <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration%2A>속성 수 `null`토큰 갱신 된 여부에 따라.</xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration%2A> </xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.ContextId%2A> 이기도 선택적 <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.EndpointId%2A>토큰 범위는 끝점을 제공 하는.</xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.EndpointId%2A>"
  syntax:
    content: public class SessionSecurityTokenCacheKey
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.#ctor(System.String,System.Xml.UniqueId,System.Xml.UniqueId)
  id: '#ctor(System.String,System.Xml.UniqueId,System.Xml.UniqueId)'
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  langs:
  - csharp
  name: SessionSecurityTokenCacheKey(String,UniqueId,UniqueId)
  nameWithType: SessionSecurityTokenCacheKey.SessionSecurityTokenCacheKey(String,UniqueId,UniqueId)
  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.SessionSecurityTokenCacheKey(String,UniqueId,UniqueId)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.IdentityModel.Tokens.SessionSecurityTokenCacheKey&quot;> </xref> 클래스입니다."
  syntax:
    content: public SessionSecurityTokenCacheKey (string endpointId, System.Xml.UniqueId contextId, System.Xml.UniqueId keyGeneration);
    parameters:
    - id: endpointId
      type: System.String
      description: "캐시 엔트리가 범위는 끝점 ID입니다. 이의 값 이어야 합니다는 &lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A?displayProperty=fullName&gt; 캐시 된 토큰의 속성입니다."
    - id: contextId
      type: System.Xml.UniqueId
      description: "캐시 항목의 컨텍스트 ID입니다. 이의 값 이어야 합니다는 &lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A?displayProperty=fullName&gt; 캐시 된 토큰의 속성입니다."
    - id: keyGeneration
      type: System.Xml.UniqueId
      description: "캐시 항목의 키 생성 합니다. 이의 값 이어야 합니다는 &lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A?displayProperty=fullName&gt; 캐시 된 토큰의 속성입니다. 토큰이 갱신 될 때이 값은 사용할 수 있습니다. 됩니다 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 새 토큰을 캐시 합니다."
  overload: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.ContextId
  id: ContextId
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  langs:
  - csharp
  name: ContextId
  nameWithType: SessionSecurityTokenCacheKey.ContextId
  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.ContextId
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "캐시 키에 대 한 컨텍스트 ID를 가져옵니다."
  remarks: "이에 해당 하는 <xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A>캐시 된 토큰의 속성입니다.</xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A>"
  syntax:
    content: public System.Xml.UniqueId ContextId { get; }
    return:
      type: System.Xml.UniqueId
      description: "캐시 키에 대 한 컨텍스트 ID입니다."
  overload: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.ContextId*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.EndpointId
  id: EndpointId
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  langs:
  - csharp
  name: EndpointId
  nameWithType: SessionSecurityTokenCacheKey.EndpointId
  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.EndpointId
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "이 캐시 항목 범위는 끝점 ID를 가져옵니다."
  remarks: "이에 해당 하는 <xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A>캐시 된 토큰의 속성입니다.</xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A>"
  syntax:
    content: public string EndpointId { get; }
    return:
      type: System.String
      description: "이 캐시 항목 범위는 끝점 ID입니다."
  overload: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.EndpointId*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: SessionSecurityTokenCacheKey.Equals(Object)
  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.Equals(Object)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "현재 캐시 키로 지정된 된 개체가 같은지 여부를 결정 합니다."
  remarks: "경우는 <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.IgnoreKeyGeneration%2A>은 `true`, <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration%2A>속성이 비교에 사용 되지 않습니다.</xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration%2A> </xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.IgnoreKeyGeneration%2A>"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "현재 캐시 키와 비교할 개체입니다. 할당 가능 해야 <xref href=&quot;System.IdentityModel.Tokens.SessionSecurityTokenCacheKey&quot;> </xref>합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>지정된 된 개체가 현재 캐시 키;와 동일한 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.GetHashCode
  id: GetHashCode
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: SessionSecurityTokenCacheKey.GetHashCode()
  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.GetHashCode()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "현재 캐시 키에 대 한 해시 코드를 반환합니다."
  remarks: "경우는 <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.IgnoreKeyGeneration%2A>은 `true`, <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration%2A>속성 해시 코드를 생성에 사용 되지 않습니다.</xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration%2A> </xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.IgnoreKeyGeneration%2A>"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "현재 캐시 키에 대 한 해시 코드입니다."
  overload: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.IgnoreKeyGeneration
  id: IgnoreKeyGeneration
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  langs:
  - csharp
  name: IgnoreKeyGeneration
  nameWithType: SessionSecurityTokenCacheKey.IgnoreKeyGeneration
  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.IgnoreKeyGeneration
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "인덱스 비교를 수행 하는 경우 키 생성을 무시 될 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: '이 속성에는 방식을 적용는 <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration%2A>속성 다음 메서드 및 연산자에 의해 처리: <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.Equals%2A>, <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.GetHashCode%2A>, <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.op_Equality%2A>, <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.op_Inequality%2A>, 및 <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.ToString%2A>.</xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.ToString%2A> </xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.op_Inequality%2A> </xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.op_Equality%2A> </xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.GetHashCode%2A> </xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.Equals%2A> </xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration%2A>'
  syntax:
    content: public bool IgnoreKeyGeneration { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>키 생성을 무시 하려면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.IgnoreKeyGeneration*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration
  id: KeyGeneration
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  langs:
  - csharp
  name: KeyGeneration
  nameWithType: SessionSecurityTokenCacheKey.KeyGeneration
  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "캐시 키에 대 한 키 생성을 가져옵니다."
  remarks: "이에 해당 하는 <xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A>캐시 된 토큰의 속성입니다.</xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A>"
  syntax:
    content: public System.Xml.UniqueId KeyGeneration { get; }
    return:
      type: System.Xml.UniqueId
      description: "캐시 키에 대 한 키 생성"
  overload: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.op_Equality(System.IdentityModel.Tokens.SessionSecurityTokenCacheKey,System.IdentityModel.Tokens.SessionSecurityTokenCacheKey)
  id: op_Equality(System.IdentityModel.Tokens.SessionSecurityTokenCacheKey,System.IdentityModel.Tokens.SessionSecurityTokenCacheKey)
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  langs:
  - csharp
  name: op_Equality(SessionSecurityTokenCacheKey,SessionSecurityTokenCacheKey)
  nameWithType: SessionSecurityTokenCacheKey.op_Equality(SessionSecurityTokenCacheKey,SessionSecurityTokenCacheKey)
  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.op_Equality(SessionSecurityTokenCacheKey,SessionSecurityTokenCacheKey)
  type: Operator
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "에 대 한 같음 연산자를 구현 하는 <xref href=&quot;System.IdentityModel.Tokens.SessionSecurityTokenCacheKey&quot;> </xref> 클래스입니다."
  remarks: "경우는 <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.IgnoreKeyGeneration%2A>은 `true`, <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration%2A>속성이 비교에 사용 되지 않습니다.</xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration%2A> </xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.IgnoreKeyGeneration%2A>"
  syntax:
    content: public static bool op_Equality (System.IdentityModel.Tokens.SessionSecurityTokenCacheKey first, System.IdentityModel.Tokens.SessionSecurityTokenCacheKey second);
    parameters:
    - id: first
      type: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
      description: "비교할 첫 번째 캐시 키입니다."
    - id: second
      type: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
      description: "비교할 두 번째 캐시 키입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>캐시 키가 같으면; 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.op_Inequality(System.IdentityModel.Tokens.SessionSecurityTokenCacheKey,System.IdentityModel.Tokens.SessionSecurityTokenCacheKey)
  id: op_Inequality(System.IdentityModel.Tokens.SessionSecurityTokenCacheKey,System.IdentityModel.Tokens.SessionSecurityTokenCacheKey)
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  langs:
  - csharp
  name: op_Inequality(SessionSecurityTokenCacheKey,SessionSecurityTokenCacheKey)
  nameWithType: SessionSecurityTokenCacheKey.op_Inequality(SessionSecurityTokenCacheKey,SessionSecurityTokenCacheKey)
  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.op_Inequality(SessionSecurityTokenCacheKey,SessionSecurityTokenCacheKey)
  type: Operator
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "에 대 한 같음 연산자를 구현 하는 <xref href=&quot;System.IdentityModel.Tokens.SessionSecurityTokenCacheKey&quot;> </xref> 클래스입니다."
  remarks: "경우는 <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.IgnoreKeyGeneration%2A>은 `true`, <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration%2A>속성이 비교에 사용 되지 않습니다.</xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration%2A> </xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.IgnoreKeyGeneration%2A>"
  syntax:
    content: public static bool op_Inequality (System.IdentityModel.Tokens.SessionSecurityTokenCacheKey first, System.IdentityModel.Tokens.SessionSecurityTokenCacheKey second);
    parameters:
    - id: first
      type: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
      description: "비교할 첫 번째 캐시 키입니다."
    - id: second
      type: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
      description: "비교할 두 번째 캐시 키입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>캐시 키가 같지 없는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.ToString
  id: ToString
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  langs:
  - csharp
  name: ToString()
  nameWithType: SessionSecurityTokenCacheKey.ToString()
  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.ToString()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "재정의 <xref:System.Object.ToString*>고유 식별자를 제공 합니다.</xref:System.Object.ToString*>"
  remarks: "경우는 <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.IgnoreKeyGeneration%2A>은 `true`, <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration%2A>속성이 사용 되지 않습니다.</xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration%2A> </xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.IgnoreKeyGeneration%2A>"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "문자열 형식으로 키입니다."
  overload: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.#ctor(System.String,System.Xml.UniqueId,System.Xml.UniqueId)
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  isExternal: false
  name: SessionSecurityTokenCacheKey(String,UniqueId,UniqueId)
  nameWithType: SessionSecurityTokenCacheKey.SessionSecurityTokenCacheKey(String,UniqueId,UniqueId)
  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.SessionSecurityTokenCacheKey(String,UniqueId,UniqueId)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.UniqueId
  parent: System.Xml
  isExternal: true
  name: UniqueId
  nameWithType: UniqueId
  fullName: System.Xml.UniqueId
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.ContextId
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  isExternal: false
  name: ContextId
  nameWithType: SessionSecurityTokenCacheKey.ContextId
  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.ContextId
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.EndpointId
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  isExternal: false
  name: EndpointId
  nameWithType: SessionSecurityTokenCacheKey.EndpointId
  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.EndpointId
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.Equals(System.Object)
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  isExternal: false
  name: Equals(Object)
  nameWithType: SessionSecurityTokenCacheKey.Equals(Object)
  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.GetHashCode
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  isExternal: false
  name: GetHashCode()
  nameWithType: SessionSecurityTokenCacheKey.GetHashCode()
  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.IgnoreKeyGeneration
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  isExternal: false
  name: IgnoreKeyGeneration
  nameWithType: SessionSecurityTokenCacheKey.IgnoreKeyGeneration
  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.IgnoreKeyGeneration
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  isExternal: false
  name: KeyGeneration
  nameWithType: SessionSecurityTokenCacheKey.KeyGeneration
  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.op_Equality(System.IdentityModel.Tokens.SessionSecurityTokenCacheKey,System.IdentityModel.Tokens.SessionSecurityTokenCacheKey)
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  isExternal: false
  name: op_Equality(SessionSecurityTokenCacheKey,SessionSecurityTokenCacheKey)
  nameWithType: SessionSecurityTokenCacheKey.op_Equality(SessionSecurityTokenCacheKey,SessionSecurityTokenCacheKey)
  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.op_Equality(SessionSecurityTokenCacheKey,SessionSecurityTokenCacheKey)
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SessionSecurityTokenCacheKey
  nameWithType: SessionSecurityTokenCacheKey
  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.op_Inequality(System.IdentityModel.Tokens.SessionSecurityTokenCacheKey,System.IdentityModel.Tokens.SessionSecurityTokenCacheKey)
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  isExternal: false
  name: op_Inequality(SessionSecurityTokenCacheKey,SessionSecurityTokenCacheKey)
  nameWithType: SessionSecurityTokenCacheKey.op_Inequality(SessionSecurityTokenCacheKey,SessionSecurityTokenCacheKey)
  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.op_Inequality(SessionSecurityTokenCacheKey,SessionSecurityTokenCacheKey)
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.ToString
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  isExternal: false
  name: ToString()
  nameWithType: SessionSecurityTokenCacheKey.ToString()
  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.ToString()
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.#ctor*
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  isExternal: false
  name: SessionSecurityTokenCacheKey
  nameWithType: SessionSecurityTokenCacheKey.SessionSecurityTokenCacheKey
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.ContextId*
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  isExternal: false
  name: ContextId
  nameWithType: SessionSecurityTokenCacheKey.ContextId
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.EndpointId*
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  isExternal: false
  name: EndpointId
  nameWithType: SessionSecurityTokenCacheKey.EndpointId
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.Equals*
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  isExternal: false
  name: Equals
  nameWithType: SessionSecurityTokenCacheKey.Equals
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.GetHashCode*
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  isExternal: false
  name: GetHashCode
  nameWithType: SessionSecurityTokenCacheKey.GetHashCode
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.IgnoreKeyGeneration*
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  isExternal: false
  name: IgnoreKeyGeneration
  nameWithType: SessionSecurityTokenCacheKey.IgnoreKeyGeneration
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration*
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  isExternal: false
  name: KeyGeneration
  nameWithType: SessionSecurityTokenCacheKey.KeyGeneration
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.op_Equality*
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  isExternal: false
  name: op_Equality
  nameWithType: SessionSecurityTokenCacheKey.op_Equality
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.op_Inequality*
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  isExternal: false
  name: op_Inequality
  nameWithType: SessionSecurityTokenCacheKey.op_Inequality
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.ToString*
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  isExternal: false
  name: ToString
  nameWithType: SessionSecurityTokenCacheKey.ToString
