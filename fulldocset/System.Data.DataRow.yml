### YamlMime:ManagedReference
items:
- uid: System.Data.DataRow
  id: DataRow
  children:
  - System.Data.DataRow.#ctor(System.Data.DataRowBuilder)
  - System.Data.DataRow.AcceptChanges
  - System.Data.DataRow.BeginEdit
  - System.Data.DataRow.CancelEdit
  - System.Data.DataRow.ClearErrors
  - System.Data.DataRow.Delete
  - System.Data.DataRow.EndEdit
  - System.Data.DataRow.GetChildRows(System.Data.DataRelation)
  - System.Data.DataRow.GetChildRows(System.String)
  - System.Data.DataRow.GetChildRows(System.Data.DataRelation,System.Data.DataRowVersion)
  - System.Data.DataRow.GetChildRows(System.String,System.Data.DataRowVersion)
  - System.Data.DataRow.GetColumnError(System.Data.DataColumn)
  - System.Data.DataRow.GetColumnError(System.Int32)
  - System.Data.DataRow.GetColumnError(System.String)
  - System.Data.DataRow.GetColumnsInError
  - System.Data.DataRow.GetParentRow(System.Data.DataRelation)
  - System.Data.DataRow.GetParentRow(System.String)
  - System.Data.DataRow.GetParentRow(System.Data.DataRelation,System.Data.DataRowVersion)
  - System.Data.DataRow.GetParentRow(System.String,System.Data.DataRowVersion)
  - System.Data.DataRow.GetParentRows(System.Data.DataRelation)
  - System.Data.DataRow.GetParentRows(System.String)
  - System.Data.DataRow.GetParentRows(System.Data.DataRelation,System.Data.DataRowVersion)
  - System.Data.DataRow.GetParentRows(System.String,System.Data.DataRowVersion)
  - System.Data.DataRow.HasErrors
  - System.Data.DataRow.HasVersion(System.Data.DataRowVersion)
  - System.Data.DataRow.IsNull(System.Data.DataColumn)
  - System.Data.DataRow.IsNull(System.Int32)
  - System.Data.DataRow.IsNull(System.String)
  - System.Data.DataRow.IsNull(System.Data.DataColumn,System.Data.DataRowVersion)
  - System.Data.DataRow.Item(System.Data.DataColumn)
  - System.Data.DataRow.Item(System.Int32)
  - System.Data.DataRow.Item(System.String)
  - System.Data.DataRow.Item(System.Data.DataColumn,System.Data.DataRowVersion)
  - System.Data.DataRow.Item(System.Int32,System.Data.DataRowVersion)
  - System.Data.DataRow.Item(System.String,System.Data.DataRowVersion)
  - System.Data.DataRow.ItemArray
  - System.Data.DataRow.RejectChanges
  - System.Data.DataRow.RowError
  - System.Data.DataRow.RowState
  - System.Data.DataRow.SetAdded
  - System.Data.DataRow.SetColumnError(System.Data.DataColumn,System.String)
  - System.Data.DataRow.SetColumnError(System.Int32,System.String)
  - System.Data.DataRow.SetColumnError(System.String,System.String)
  - System.Data.DataRow.SetModified
  - System.Data.DataRow.SetNull(System.Data.DataColumn)
  - System.Data.DataRow.SetParentRow(System.Data.DataRow)
  - System.Data.DataRow.SetParentRow(System.Data.DataRow,System.Data.DataRelation)
  - System.Data.DataRow.Table
  langs:
  - csharp
  name: DataRow
  nameWithType: DataRow
  fullName: System.Data.DataRow
  type: Class
  summary: "데이터의 행을 나타냅니다는 <xref href=&quot;System.Data.DataTable&quot;> </xref>합니다."
  remarks: "DataRow 및 <xref:System.Data.DataColumn>개체에 <xref:System.Data.DataTable>.</xref:System.Data.DataTable> 의 기본 구성 요소는</xref:System.Data.DataColumn> DataRow 개체 및 해당 속성과 메서드를 사용 하 여 검색 하 고 평가 합니다. 및 삽입, 삭제 및 <xref:System.Data.DataTable>.</xref:System.Data.DataTable> 값 업데이트 <xref:System.Data.DataRowCollection>의 실제 데이터 행 개체를 나타내는 <xref:System.Data.DataTable>, <xref:System.Data.DataColumnCollection> <xref:System.Data.DataColumn> <xref:System.Data.DataTable>.</xref:System.Data.DataTable> 의 스키마를 설명 하는 개체</xref:System.Data.DataColumn> 를 포함</xref:System.Data.DataColumnCollection> 하 고</xref:System.Data.DataTable> </xref:System.Data.DataRowCollection> 오버 로드 된 <xref:System.Data.DataRow.Item%2A>속성을 반환 하거나 <xref:System.Data.DataColumn>.</xref:System.Data.DataColumn> 의 값을 설정할</xref:System.Data.DataRow.Item%2A> 사용       사용 <xref:System.Data.DataRow.HasVersion%2A>및 <xref:System.Data.DataRow.IsNull%2A>특정 행 값 및 <xref:System.Data.DataRow.RowState%2A> <xref:System.Data.DataTable>.</xref:System.Data.DataTable> 부모에 상대적인 행의 상태를 확인 하는 속성</xref:System.Data.DataRow.RowState%2A> 의 상태를 확인 하는 속성</xref:System.Data.DataRow.IsNull%2A> </xref:System.Data.DataRow.HasVersion%2A>       새 DataRow를 만들려면 사용는 <xref:System.Data.DataTable.NewRow%2A>의 메서드는 <xref:System.Data.DataTable>개체입니다.</xref:System.Data.DataTable> </xref:System.Data.DataTable.NewRow%2A> 새 DataRow를 만든 후 <xref:System.Data.DataRowCollection.Add%2A> <xref:System.Data.DataRowCollection>.</xref:System.Data.DataRowCollection> 에 새 데이터 행을 추가 하는 메서드</xref:System.Data.DataRowCollection.Add%2A> 를 사용 합니다. 마지막으로 호출 된 <xref:System.Data.DataRow.AcceptChanges%2A>의 메서드는 <xref:System.Data.DataTable>추가 확인 하는 개체입니다.</xref:System.Data.DataTable> </xref:System.Data.DataRow.AcceptChanges%2A> 데이터를 추가 하는 방법에 대 한 자세한 내용은 <xref:System.Data.DataTable>, 참조 [DataTable에 데이터 추가](~/add/includes/ajax-current-ext-md.md).</xref:System.Data.DataTable>       데이터 행을 삭제할 수 있습니다는 <xref:System.Data.DataRowCollection>호출 하 여는 <xref:System.Data.DataRowCollection.Remove%2A>의 메서드는 <xref:System.Data.DataRowCollection>를 호출 하 여는 <xref:System.Data.DataRow.Delete%2A>DataRow 개체의 메서드.</xref:System.Data.DataRow.Delete%2A> </xref:System.Data.DataRowCollection> </xref:System.Data.DataRowCollection.Remove%2A> </xref:System.Data.DataRowCollection> <xref:System.Data.DataRowCollection.Remove%2A>메서드 컬렉션에서 행을 제거 합니다.</xref:System.Data.DataRowCollection.Remove%2A> 반면, <xref:System.Data.DataRow.Delete%2A>제거에 대 한 데이터 행을 표시 합니다.</xref:System.Data.DataRow.Delete%2A> 호출 하면 행이 실제로 삭제 발생 <xref:System.Data.DataRow.AcceptChanges%2A>메서드.</xref:System.Data.DataRow.AcceptChanges%2A> 호출 하 여 <xref:System.Data.DataRow.Delete%2A>을 실제로 삭제 하기 전에 제거를 위해 표시 된 행을 프로그래밍 방식으로 확인할 수 있습니다.</xref:System.Data.DataRow.Delete%2A> 자세한 내용은 참조 [DataRow 삭제](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following example creates a new DataRow by calling the <xref:System.Data.DataTable.NewRow%2A> method of the <xref:System.Data.DataTable> object.  \n  \n [!code-vb[Classic WebData DataRow Example#1](~/add/codesnippet/visualbasic/t-system.data.datarow_1.vb)]\n [!code-cs[Classic WebData DataRow Example#1](~/add/codesnippet/csharp/t-system.data.datarow_1.cs)]"
  syntax:
    content: public class DataRow
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.DataRow.#ctor(System.Data.DataRowBuilder)
  id: '#ctor(System.Data.DataRowBuilder)'
  parent: System.Data.DataRow
  langs:
  - csharp
  name: DataRow(DataRowBuilder)
  nameWithType: DataRow.DataRow(DataRowBuilder)
  fullName: System.Data.DataRow.DataRow(DataRowBuilder)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "DataRow의 새 인스턴스를 초기화합니다. 작성기에서 행을 생성합니다. 내부 전용입니다."
  syntax:
    content: protected DataRow (System.Data.DataRowBuilder builder);
    parameters:
    - id: builder
      type: System.Data.DataRowBuilder
      description: "작성기"
  overload: System.Data.DataRow.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.AcceptChanges
  id: AcceptChanges
  parent: System.Data.DataRow
  langs:
  - csharp
  name: AcceptChanges()
  nameWithType: DataRow.AcceptChanges()
  fullName: System.Data.DataRow.AcceptChanges()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "AcceptChanges가 호출 된 마지막 시간 이후이 행에 대해 모든 변경 내용을 커밋합니다."
  remarks: "AcceptChanges를 호출 하는 경우는 <xref:System.Data.DataRow.EndEdit%2A>암시적으로 메서드는 편집을 끝냅니다.</xref:System.Data.DataRow.EndEdit%2A> 경우는 <xref:System.Data.DataRow.RowState%2A>Added 또는 Modified 인가 행의는 <xref:System.Data.DataRow.RowState%2A>되 변경 안 됨.</xref:System.Data.DataRow.RowState%2A> </xref:System.Data.DataRow.RowState%2A> 경우는 <xref:System.Data.DataRow.RowState%2A>가 삭제 된 행이 제거 됩니다.</xref:System.Data.DataRow.RowState%2A>       참조는 <xref:System.Data.DataRow.BeginEdit%2A>메서드 자세한 정보에 대 한.</xref:System.Data.DataRow.BeginEdit%2A>       <xref:System.Data.DataTable>클래스에는 <xref:System.Data.DataTable.AcceptChanges%2A>메서드는 전체 테이블의 변경에 영향을 줍니다.</xref:System.Data.DataTable.AcceptChanges%2A> </xref:System.Data.DataTable> 자세한 내용 및 적용 하거나 개별 데이터 행의 변경 내용을 취소 하는 방법을 보여 주는 코드 예제는 참조 [AcceptChanges 및 RejectChanges](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following example first creates a new <xref:System.Data.DataTable> with one column, and then creates a single <xref:System.Data.DataRow>. As the <xref:System.Data.DataRow> is created, added, modified, and deleted, its <xref:System.Data.DataRow.RowState%2A> is printed.  \n  \n [!code-cs[Classic WebData DataRow.AcceptChanges Example#1](~/add/codesnippet/csharp/m-system.data.datarow.ac_1.cs)]\n [!code-vb[Classic WebData DataRow.AcceptChanges Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.ac_1.vb)]"
  syntax:
    content: public void AcceptChanges ();
    parameters: []
  overload: System.Data.DataRow.AcceptChanges*
  exceptions:
  - type: System.Data.RowNotInTableException
    commentId: T:System.Data.RowNotInTableException
    description: "행은 테이블에 속해 있지 않습니다."
  platform:
  - net462
- uid: System.Data.DataRow.BeginEdit
  id: BeginEdit
  parent: System.Data.DataRow
  langs:
  - csharp
  name: BeginEdit()
  nameWithType: DataRow.BeginEdit()
  fullName: System.Data.DataRow.BeginEdit()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "편집 작업을 시작는 <xref href=&quot;System.Data.DataRow&quot;> </xref> 개체입니다."
  remarks: "BeginEdit 메서드를 사용 하 여 배치는 <xref:System.Data.DataRow>편집 모드로.</xref:System.Data.DataRow> 이 모드에서는 이벤트 일시 중단 되어, 유효성 검사 규칙을 트리거하지 않고 둘 이상의 행을 변경할 수 있도록 합니다. 예를 들어 총 금액에 대 한 열 값을 직불에 대 한 값 인지 확인 하 고 행의 열을 신용 해야 하는 경우 사용자는 값을 커밋하고 하려고 할 때까지 행 값의 유효성 검사를 일시 중단 하는 편집 모드에 각 행을 넣을 수 있습니다.       BeginEdit 메서드는 사용자는 데이터 바인딩된 컨트롤의 값을 변경할 때 암시적으로 호출 됩니다. <xref:System.Data.DataRow.EndEdit%2A>메서드는 암시적으로 호출 하는 경우는 <xref:System.Data.DataTable.AcceptChanges%2A>에 대 한 메서드는 <xref:System.Data.DataTable>개체입니다.</xref:System.Data.DataTable> </xref:System.Data.DataTable.AcceptChanges%2A> </xref:System.Data.DataRow.EndEdit%2A> 이 편집 모드에서의 <xref:System.Data.DataRow>제안 된 값을 원래 및 새으로 저장 합니다.</xref:System.Data.DataRow> 따라서으로 <xref:System.Data.DataRow.EndEdit%2A>하나를 전달 하 여 원본 또는 제안 된 버전을 검색할 수 있습니다, 메서드가 호출 되지 않은 `DataRowVersion.Original` 또는 `DataRowVersion.Proposed` 에 대 한는 `version` 의 매개 변수는 <xref:System.Data.DataRow.Item%2A>속성.</xref:System.Data.DataRow.Item%2A> </xref:System.Data.DataRow.EndEdit%2A> 호출 하 여이 시점에서 편집을 취소할 수도 있습니다는 <xref:System.Data.DataRow.CancelEdit%2A>메서드.</xref:System.Data.DataRow.CancelEdit%2A>       행 포함 된 원본 또는 제안 된 값을 보려면 호출는 <xref:System.Data.DataRow.HasVersion%2A>메서드.</xref:System.Data.DataRow.HasVersion%2A>      > [!NOTE] > The BeginEdit 메서드 일시적으로 중단 <xref:System.Data.DataTable.RowChanging>이벤트, 되지만 `delete` 작업 하지 않습니다.</xref:System.Data.DataTable.RowChanging>"
  example:
  - "The example creates a simple <xref:System.Data.DataTable> with one <xref:System.Data.DataColumn> and five <xref:System.Data.DataRow> objects, and a <xref:System.Data.UniqueConstraint>. A <xref:System.Data.DataTable.RowChanged> event handler is also added to monitor when the row's value is changing. After invoking BeginEdit on the existing rows, the constraint and event are temporarily disabled and the original and proposed values are printed. The BeginEdit is again invoked to set two rows to the same value. When <xref:System.Data.DataRow.EndEdit%2A> is called, the <xref:System.Data.UniqueConstraint> is enforced on the identical values.  \n  \n [!code-vb[Classic WebData DataRow.BeginEdit Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.be_1.vb)]\n [!code-cs[Classic WebData DataRow.BeginEdit Example#1](~/add/codesnippet/csharp/m-system.data.datarow.be_1.cs)]"
  syntax:
    content: public void BeginEdit ();
    parameters: []
  overload: System.Data.DataRow.BeginEdit*
  exceptions:
  - type: System.Data.InRowChangingEventException
    commentId: T:System.Data.InRowChangingEventException
    description: "내부 호출 되는 <xref href=&quot;System.Data.DataTable.RowChanging&quot;> </xref> 이벤트입니다."
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "삭제 된 행의 메서드가 호출 되었습니다."
  platform:
  - net462
- uid: System.Data.DataRow.CancelEdit
  id: CancelEdit
  parent: System.Data.DataRow
  langs:
  - csharp
  name: CancelEdit()
  nameWithType: DataRow.CancelEdit()
  fullName: System.Data.DataRow.CancelEdit()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "행의 현재 편집을 취소합니다."
  remarks: "참조는 <xref:System.Data.DataRow.BeginEdit%2A>메서드 자세한 정보에 대 한.</xref:System.Data.DataRow.BeginEdit%2A>"
  example:
  - "The following example edits the value of one column in the last row of a <xref:System.Windows.Forms.DataGrid> control. The example uses the <xref:System.Data.DataRow.BeginEdit%2A>, <xref:System.Data.DataRow.EndEdit%2A>, methods to edit the column's value and commit the change to the row.  \n  \n [!code-vb[Classic WebData DataRow.CancelEdit Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.ca_1.vb)]\n [!code-cs[Classic WebData DataRow.CancelEdit Example#1](~/add/codesnippet/csharp/m-system.data.datarow.ca_1.cs)]"
  syntax:
    content: public void CancelEdit ();
    parameters: []
  overload: System.Data.DataRow.CancelEdit*
  exceptions:
  - type: System.Data.InRowChangingEventException
    commentId: T:System.Data.InRowChangingEventException
    description: "내부 호출 되는 <xref href=&quot;System.Data.DataTable.RowChanging&quot;> </xref> 이벤트입니다."
  platform:
  - net462
- uid: System.Data.DataRow.ClearErrors
  id: ClearErrors
  parent: System.Data.DataRow
  langs:
  - csharp
  name: ClearErrors()
  nameWithType: DataRow.ClearErrors()
  fullName: System.Data.DataRow.ClearErrors()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "행에 대 한 오류를 지웁니다. 여기에 <> </> *>에 <> </> *> 합니다."
  remarks: "사용 하 여 <xref:System.Data.DataRow.SetColumnError%2A>및 <xref:System.Data.DataRow.GetColumnError%2A>설정 하 고 개별 열에 대 한 오류를 반환 합니다.</xref:System.Data.DataRow.GetColumnError%2A> </xref:System.Data.DataRow.SetColumnError%2A>       설정 된 <xref:System.Data.DataRow.RowError%2A>속성을 전체 행에 적용 되는 오류를 설정 합니다.</xref:System.Data.DataRow.RowError%2A>       Columns 컬렉션에 대 한 오류가 있는지 확인 하려면는 <xref:System.Data.DataRow.HasErrors%2A>메서드.</xref:System.Data.DataRow.HasErrors%2A> 따라서 사용할 수는 <xref:System.Data.DataRow.GetColumnsInError%2A>오류가 있는 모든 열을 검색 하는 메서드입니다.</xref:System.Data.DataRow.GetColumnsInError%2A>"
  example:
  - "The following example uses the <xref:System.Data.DataRow.HasErrors%2A> to look for errors. If the row has errors, the <xref:System.Data.DataRow.GetColumnsInError%2A> method returns the array of columns with errors that can then be resolved. The ClearErrors method is then called to clear all errors.  \n  \n [!code-cs[Classic WebData DataRow.ClearErrors Example#1](~/add/codesnippet/csharp/m-system.data.datarow.cl_1.cs)]\n [!code-vb[Classic WebData DataRow.ClearErrors Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.cl_1.vb)]"
  syntax:
    content: public void ClearErrors ();
    parameters: []
  overload: System.Data.DataRow.ClearErrors*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.Delete
  id: Delete
  parent: System.Data.DataRow
  langs:
  - csharp
  name: Delete()
  nameWithType: DataRow.Delete()
  fullName: System.Data.DataRow.Delete()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "삭제는 <xref href=&quot;System.Data.DataRow&quot;> </xref>합니다."
  remarks: "경우는 <xref:System.Data.DataRow.RowState%2A>행의 추가 <xref:System.Data.DataRow.RowState%2A>되 `Detached` <xref:System.Data.DataRow.AcceptChanges%2A>.</xref:System.Data.DataRow.AcceptChanges%2A> 를 호출 하는 경우 테이블에서 행이 제거 되 고</xref:System.Data.DataRow.RowState%2A> </xref:System.Data.DataRow.RowState%2A>       <xref:System.Data.DataRow.RowState%2A>되 `Deleted` Delete 메서드를 사용 하 여 기존 <xref:System.Data.DataRow>.</xref:System.Data.DataRow> 후</xref:System.Data.DataRow.RowState%2A> 그대로 `Deleted` <xref:System.Data.DataRow.AcceptChanges%2A>.</xref:System.Data.DataRow.AcceptChanges%2A> 를 호출할 때까지 이번에 <xref:System.Data.DataRow>테이블에서 제거 됩니다.</xref:System.Data.DataRow>       Delete 호출 하지 않아야 foreach 루프에서 반복 하는 동안는 <xref:System.Data.DataRowCollection>개체입니다.</xref:System.Data.DataRowCollection> 삭제 된 컬렉션의 상태를 수정합니다.       <xref:System.Data.DataRow.RejectChanges%2A>.</xref:System.Data.DataRow.RejectChanges%2A> 를 호출 하 여 삭제 된 행 삭제를 취소 수 있습니다.      > [!NOTE] >는 <xref:System.Data.DataRow.BeginEdit%2A>메서드 일시적으로 중단 <xref:System.Data.DataTable.RowChanging>이벤트, 하지만 삭제 작업은 하지 않습니다.</xref:System.Data.DataTable.RowChanging> </xref:System.Data.DataRow.BeginEdit%2A>"
  example:
  - "The following example creates a simple <xref:System.Data.DataTable> with two columns and ten rows. After deleting several <xref:System.Data.DataRow> items with the Delete method, one of the rows is undeleted by invoking <xref:System.Data.DataRow.RejectChanges%2A>.  \n  \n [!code-vb[Classic WebData DataRow.Delete Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.de_1.vb)]\n [!code-cs[Classic WebData DataRow.Delete Example#1](~/add/codesnippet/csharp/m-system.data.datarow.de_1.cs)]"
  syntax:
    content: public void Delete ();
    parameters: []
  overload: System.Data.DataRow.Delete*
  exceptions:
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "<xref href=&quot;System.Data.DataRow&quot;> </xref> 이미 삭제 되었습니다."
  platform:
  - net462
- uid: System.Data.DataRow.EndEdit
  id: EndEdit
  parent: System.Data.DataRow
  langs:
  - csharp
  name: EndEdit()
  nameWithType: DataRow.EndEdit()
  fullName: System.Data.DataRow.EndEdit()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "행에서 발생 하 고 편집을 끝냅니다."
  remarks: "속성을 설정에서 예외가 발생 하는 경우 예외가 생성 됩니다는 <xref:System.Data.DataTable.RowChanging>이벤트.</xref:System.Data.DataTable.RowChanging>"
  example:
  - "The following example uses the EndEdit method to end the edit of a <xref:System.Data.DataRow> value if the validation function returns true.  \n  \n [!code-vb[Classic WebData DataRow.CancelEdit Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.en_1.vb)]\n [!code-cs[Classic WebData DataRow.CancelEdit Example#1](~/add/codesnippet/csharp/m-system.data.datarow.en_1.cs)]"
  syntax:
    content: public void EndEdit ();
    parameters: []
  overload: System.Data.DataRow.EndEdit*
  exceptions:
  - type: System.Data.InRowChangingEventException
    commentId: T:System.Data.InRowChangingEventException
    description: "내부 호출 되는 <xref href=&quot;System.Data.DataTable.RowChanging&quot;> </xref> 이벤트입니다."
  - type: System.Data.ConstraintException
    commentId: T:System.Data.ConstraintException
    description: "제약 조건을 위반 하는 편집 합니다."
  - type: System.Data.ReadOnlyException
    commentId: T:System.Data.ReadOnlyException
    description: "테이블에 행이 속하는지 및 편집의 읽기 전용 열 값을 변경 하려고 합니다."
  - type: System.Data.NoNullAllowedException
    commentId: T:System.Data.NoNullAllowedException
    description: "편집 열에 null 값을 입력 하려고 합니다. 여기서 <xref:System.Data.DataColumn.AllowDBNull*>가 false.</xref:System.Data.DataColumn.AllowDBNull*>"
  platform:
  - net462
- uid: System.Data.DataRow.GetChildRows(System.Data.DataRelation)
  id: GetChildRows(System.Data.DataRelation)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetChildRows(DataRelation)
  nameWithType: DataRow.GetChildRows(DataRelation)
  fullName: System.Data.DataRow.GetChildRows(DataRelation)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "자식 행이 가져옵니다 <xref href=&quot;System.Data.DataRow&quot;> </xref> 사용 하 여 지정 된 <xref href=&quot;System.Data.DataRelation&quot;> </xref>합니다."
  remarks: "<xref:System.Data.DataTable>의 컬렉션도 포함 <xref:System.Data.DataRelation>에서 반환 되는 개체는 <xref:System.Data.DataTable.ChildRelations%2A>속성.</xref:System.Data.DataTable.ChildRelations%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataTable>"
  example:
  - "The following example uses the <xref:System.Data.DataRow.GetChildRows%2A> to return the child <xref:System.Data.DataRow> objects for every child <xref:System.Data.DataRelation> in a <xref:System.Data.DataTable>. The value of each column in the row is then printed.  \n  \n [!code-cs[Classic WebData DataRow.GetChildRows2 Example#1](~/add/codesnippet/csharp/m-system.data.datarow.ge_8_1.cs)]\n [!code-vb[Classic WebData DataRow.GetChildRows2 Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.ge_8_1.vb)]"
  syntax:
    content: public System.Data.DataRow[] GetChildRows (System.Data.DataRelation relation);
    parameters:
    - id: relation
      type: System.Data.DataRelation
      description: "The <xref href=&quot;System.Data.DataRelation&quot;></xref> to use."
    return:
      type: System.Data.DataRow[]
      description: "배열을 <xref href=&quot;System.Data.DataRow&quot;> </xref> 개체 또는 배열 길이&0;입니다."
  overload: System.Data.DataRow.GetChildRows*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "관계와 행은 동일한 테이블에 속해 있지 않습니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "관계는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  - type: System.Data.RowNotInTableException
    commentId: T:System.Data.RowNotInTableException
    description: "행은 테이블에 속해 있지 않습니다."
  - type: System.Data.VersionNotFoundException
    commentId: T:System.Data.VersionNotFoundException
    description: "행에는이 버전의 데이터 않아도 됩니다."
  platform:
  - net462
- uid: System.Data.DataRow.GetChildRows(System.String)
  id: GetChildRows(System.String)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetChildRows(String)
  nameWithType: DataRow.GetChildRows(String)
  fullName: System.Data.DataRow.GetChildRows(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "행 자식 가져옵니다는 <xref href=&quot;System.Data.DataRow&quot;> </xref> 사용 하 여 지정 된 <xref:System.Data.DataRelation.RelationName*>의 <xref href=&quot;System.Data.DataRelation&quot;> </xref>.</xref:System.Data.DataRelation.RelationName*>"
  remarks: "<xref:System.Data.DataTable>의 컬렉션도 포함 <xref:System.Data.DataRelation>에서 반환 되는 개체는 <xref:System.Data.DataTable.ChildRelations%2A>속성.</xref:System.Data.DataTable.ChildRelations%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataTable>"
  syntax:
    content: public System.Data.DataRow[] GetChildRows (string relationName);
    parameters:
    - id: relationName
      type: System.String
      description: "<xref:System.Data.DataRelation.RelationName*>의 <xref href=&quot;System.Data.DataRelation&quot;> </xref> 사용할.</xref:System.Data.DataRelation.RelationName*>"
    return:
      type: System.Data.DataRow[]
      description: "배열을 <xref href=&quot;System.Data.DataRow&quot;> </xref> 개체 또는 배열 길이&0;입니다."
  overload: System.Data.DataRow.GetChildRows*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "관계와 행은 동일한 테이블에 속해 있지 않습니다."
  - type: System.Data.RowNotInTableException
    commentId: T:System.Data.RowNotInTableException
    description: "행은 테이블에 속해 있지 않습니다."
  platform:
  - net462
- uid: System.Data.DataRow.GetChildRows(System.Data.DataRelation,System.Data.DataRowVersion)
  id: GetChildRows(System.Data.DataRelation,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetChildRows(DataRelation,DataRowVersion)
  nameWithType: DataRow.GetChildRows(DataRelation,DataRowVersion)
  fullName: System.Data.DataRow.GetChildRows(DataRelation,DataRowVersion)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "행 자식 가져옵니다는 <xref href=&quot;System.Data.DataRow&quot;> </xref> 사용 하 여 지정 된 <xref href=&quot;System.Data.DataRelation&quot;> </xref>, 및 <xref href=&quot;System.Data.DataRowVersion&quot;> </xref>합니다."
  remarks: "<xref:System.Data.DataTable>의 컬렉션도 포함 <xref:System.Data.DataRelation>에서 반환 되는 개체는 <xref:System.Data.DataTable.ChildRelations%2A>속성.</xref:System.Data.DataTable.ChildRelations%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataTable>       사용 하 여는 <xref:System.Data.DataRow.HasVersion%2A>속성을 확인 여부는 <xref:System.Data.DataRowVersion>존재 한다고.</xref:System.Data.DataRowVersion> </xref:System.Data.DataRow.HasVersion%2A>       경우 <xref:System.Data.DataRowVersion>사용 되는 버전에 따라 다릅니다. 지정 된 된 <xref:System.Data.DataRow.RowState%2A>되는 행의 `GetChildRows` 가 호출 됩니다.</xref:System.Data.DataRow.RowState%2A> </xref:System.Data.DataRowVersion> 경우 되는 행 `GetChildRows` 호출에 `RowState` 의 `Modified`, `New`, 또는 `Unchanged`, <xref:System.Data.DataRowVersion>행의 버전은 현재 버전의 값이 일치 하는 관련된 자식 행 인출을 사용.</xref:System.Data.DataRowVersion> 경우 되는 행 `GetChildRows` 호출에 `RowState` 의 `Deleted`, <xref:System.Data.DataRowVersion>행의 버전은 원래 버전의 값이 일치 하는 관련된 자식 행 인출을 사용.</xref:System.Data.DataRowVersion>"
  example:
  - "The following example uses the <xref:System.Data.DataRow.GetChildRows%2A> to return the child <xref:System.Data.DataRow> objects for every child <xref:System.Data.DataRelation> in a <xref:System.Data.DataTable>. The value of each column with the specified version in the row is then printed.  \n  \n [!code-vb[Classic WebData DataRow.GetChildRows3 Example#1](~/add/codesnippet/visualbasic/47f0f4a3-cc08-456d-98cc-_1.vb)]\n [!code-cs[Classic WebData DataRow.GetChildRows3 Example#1](~/add/codesnippet/csharp/47f0f4a3-cc08-456d-98cc-_1.cs)]"
  syntax:
    content: public System.Data.DataRow[] GetChildRows (System.Data.DataRelation relation, System.Data.DataRowVersion version);
    parameters:
    - id: relation
      type: System.Data.DataRelation
      description: "The <xref href=&quot;System.Data.DataRelation&quot;></xref> to use."
    - id: version
      type: System.Data.DataRowVersion
      description: "중 하나는 <xref href=&quot;System.Data.DataRowVersion&quot;> </xref> 가져올 데이터의 버전을 지정 하는 값입니다. Possible values are <xref uid=&quot;langword_csharp_Default&quot; name=&quot;Default&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Original&quot; name=&quot;Original&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Current&quot; name=&quot;Current&quot; href=&quot;&quot;></xref>, and <xref uid=&quot;langword_csharp_Proposed&quot; name=&quot;Proposed&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Data.DataRow[]
      description: "배열을 <xref href=&quot;System.Data.DataRow&quot;> </xref> 개체입니다."
  overload: System.Data.DataRow.GetChildRows*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "관계와 행은 동일한 테이블에 속해 있지 않습니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>relation</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Data.RowNotInTableException
    commentId: T:System.Data.RowNotInTableException
    description: "행은 테이블에 속해 있지 않습니다."
  - type: System.Data.VersionNotFoundException
    commentId: T:System.Data.VersionNotFoundException
    description: "행에 요청 된 없는 <xref href=&quot;System.Data.DataRowVersion&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Data.DataRow.GetChildRows(System.String,System.Data.DataRowVersion)
  id: GetChildRows(System.String,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetChildRows(String,DataRowVersion)
  nameWithType: DataRow.GetChildRows(String,DataRowVersion)
  fullName: System.Data.DataRow.GetChildRows(String,DataRowVersion)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "행 자식 가져옵니다는 <xref href=&quot;System.Data.DataRow&quot;> </xref> 사용 하 여 지정 된 <xref:System.Data.DataRelation.RelationName*>의 <xref href=&quot;System.Data.DataRelation&quot;> </xref>, 및 <xref href=&quot;System.Data.DataRowVersion&quot;> </xref>.</xref:System.Data.DataRelation.RelationName*>"
  remarks: "<xref:System.Data.DataTable>의 컬렉션도 포함 <xref:System.Data.DataRelation>에서 반환 되는 개체는 <xref:System.Data.DataTable.ChildRelations%2A>속성.</xref:System.Data.DataTable.ChildRelations%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataTable>       사용 하 여는 <xref:System.Data.DataRow.HasVersion%2A>속성을 확인 여부는 <xref:System.Data.DataRowVersion>존재 한다고.</xref:System.Data.DataRowVersion> </xref:System.Data.DataRow.HasVersion%2A>       경우 <xref:System.Data.DataRowVersion>사용 되는 버전에 따라 다릅니다. 지정 된 된 <xref:System.Data.DataRow.RowState%2A>되는 행의 `GetChildRows` 가 호출 됩니다.</xref:System.Data.DataRow.RowState%2A> </xref:System.Data.DataRowVersion> 경우 되는 행 `GetChildRows` 호출에 `RowState` 의 `Modified`, `New`, 또는 `Unchanged`, <xref:System.Data.DataRowVersion>행의 버전은 현재 버전의 값이 일치 하는 관련된 자식 행 인출을 사용.</xref:System.Data.DataRowVersion> 경우 되는 행 `GetChildRows` 호출에 `RowState` 의 `Deleted`, <xref:System.Data.DataRowVersion>행의 버전은 원래 버전의 값이 일치 하는 관련된 자식 행 인출을 사용.</xref:System.Data.DataRowVersion>"
  syntax:
    content: public System.Data.DataRow[] GetChildRows (string relationName, System.Data.DataRowVersion version);
    parameters:
    - id: relationName
      type: System.String
      description: "<xref:System.Data.DataRelation.RelationName*>의 <xref href=&quot;System.Data.DataRelation&quot;> </xref> 사용할.</xref:System.Data.DataRelation.RelationName*>"
    - id: version
      type: System.Data.DataRowVersion
      description: "중 하나는 <xref href=&quot;System.Data.DataRowVersion&quot;> </xref> 가져올 데이터의 버전을 지정 하는 값입니다. Possible values are <xref uid=&quot;langword_csharp_Default&quot; name=&quot;Default&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Original&quot; name=&quot;Original&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Current&quot; name=&quot;Current&quot; href=&quot;&quot;></xref>, and <xref uid=&quot;langword_csharp_Proposed&quot; name=&quot;Proposed&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Data.DataRow[]
      description: "배열을 <xref href=&quot;System.Data.DataRow&quot;> </xref> 개체 또는 배열 길이&0;입니다."
  overload: System.Data.DataRow.GetChildRows*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "관계와 행은 동일한 테이블에 속해 있지 않습니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>relation</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Data.RowNotInTableException
    commentId: T:System.Data.RowNotInTableException
    description: "행은 테이블에 속해 있지 않습니다."
  - type: System.Data.VersionNotFoundException
    commentId: T:System.Data.VersionNotFoundException
    description: "행에 요청 된 없는 <xref href=&quot;System.Data.DataRowVersion&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Data.DataRow.GetColumnError(System.Data.DataColumn)
  id: GetColumnError(System.Data.DataColumn)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetColumnError(DataColumn)
  nameWithType: DataRow.GetColumnError(DataColumn)
  fullName: System.Data.DataRow.GetColumnError(DataColumn)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "지정 된 오류 설명을 가져옵니다 <xref href=&quot;System.Data.DataColumn&quot;> </xref>합니다."
  remarks: "사용 하 여 <xref:System.Data.DataRow.SetColumnError%2A>열 오류를 설정 하는 방법은.</xref:System.Data.DataRow.SetColumnError%2A>       Columns 컬렉션에 대 한 오류가 있는지 확인 하려면는 <xref:System.Data.DataRow.HasErrors%2A>메서드.</xref:System.Data.DataRow.HasErrors%2A> 따라서 사용할 수는 <xref:System.Data.DataRow.GetColumnsInError%2A>오류가 있는 모든 열을 검색 하는 메서드입니다.</xref:System.Data.DataRow.GetColumnsInError%2A> 또는 <xref:System.Data.DataTable.GetErrors%2A>의 메서드는 <xref:System.Data.DataTable>오류가 있는 모든 행을 반환 합니다.</xref:System.Data.DataTable> </xref:System.Data.DataTable.GetErrors%2A>       사용 하 여 columns 컬렉션에 대 한 모든 오류를 지우려면는 <xref:System.Data.DataRow.ClearErrors%2A>메서드.</xref:System.Data.DataRow.ClearErrors%2A>"
  example:
  - "The following example sets an error description for a specified <xref:System.Data.DataRow>.  \n  \n [!code-cs[Classic WebData DataRow.SetColumnError Example#1](~/add/codesnippet/csharp/m-system.data.datarow.ge_1_1.cs)]\n [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.ge_1_1.vb)]"
  syntax:
    content: public string GetColumnError (System.Data.DataColumn column);
    parameters:
    - id: column
      type: System.Data.DataColumn
      description: "A <xref href=&quot;System.Data.DataColumn&quot;></xref>."
    return:
      type: System.String
      description: "오류 설명의 텍스트입니다."
  overload: System.Data.DataRow.GetColumnError*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.GetColumnError(System.Int32)
  id: GetColumnError(System.Int32)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetColumnError(Int32)
  nameWithType: DataRow.GetColumnError(Int32)
  fullName: System.Data.DataRow.GetColumnError(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "인덱스로 지정 된 열에 대 한 오류 설명을 가져옵니다."
  remarks: "사용 하 여 <xref:System.Data.DataRow.SetColumnError%2A>열 오류를 설정 하는 방법은.</xref:System.Data.DataRow.SetColumnError%2A>       Columns 컬렉션에 대 한 오류가 있는지 확인 하려면는 <xref:System.Data.DataRow.HasErrors%2A>메서드.</xref:System.Data.DataRow.HasErrors%2A> 따라서 사용할 수는 <xref:System.Data.DataRow.GetColumnsInError%2A>오류가 있는 모든 열을 검색 하는 메서드입니다.</xref:System.Data.DataRow.GetColumnsInError%2A>       사용 하 여 columns 컬렉션에 대 한 모든 오류를 지우려면는 <xref:System.Data.DataRow.ClearErrors%2A>메서드.</xref:System.Data.DataRow.ClearErrors%2A>"
  example:
  - "The following example sets an error description for a specified <xref:System.Data.DataRow>.  \n  \n [!code-cs[Classic WebData DataRow.SetColumnError Example#1](~/add/codesnippet/csharp/m-system.data.datarow.ge_6_1.cs)]\n [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.ge_6_1.vb)]"
  syntax:
    content: public string GetColumnError (int columnIndex);
    parameters:
    - id: columnIndex
      type: System.Int32
      description: "열의&0;부터 시작 하는 인덱스입니다."
    return:
      type: System.String
      description: "오류 설명의 텍스트입니다."
  overload: System.Data.DataRow.GetColumnError*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "<code> columnIndex </code> 인수가 범위를 벗어났습니다."
  platform:
  - net462
- uid: System.Data.DataRow.GetColumnError(System.String)
  id: GetColumnError(System.String)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetColumnError(String)
  nameWithType: DataRow.GetColumnError(String)
  fullName: System.Data.DataRow.GetColumnError(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "이름으로 지정 된 열에 대 한 오류 설명을 가져옵니다."
  remarks: "사용 하 여 <xref:System.Data.DataRow.SetColumnError%2A>열 오류를 설정 하는 방법은.</xref:System.Data.DataRow.SetColumnError%2A>       Columns 컬렉션에 대 한 오류가 있는지 확인 하려면는 <xref:System.Data.DataRow.HasErrors%2A>메서드.</xref:System.Data.DataRow.HasErrors%2A> 따라서 사용할 수는 <xref:System.Data.DataRow.GetColumnsInError%2A>오류가 있는 모든 열을 검색 하는 메서드입니다.</xref:System.Data.DataRow.GetColumnsInError%2A>       사용 하 여 columns 컬렉션에 대 한 모든 오류를 지우려면는 <xref:System.Data.DataRow.ClearErrors%2A>메서드.</xref:System.Data.DataRow.ClearErrors%2A>"
  example:
  - "The following example sets an error description for a specified <xref:System.Data.DataRow>.  \n  \n [!code-cs[Classic WebData DataRow.SetColumnError Example#1](~/add/codesnippet/csharp/m-system.data.datarow.ge_0_1.cs)]\n [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.ge_0_1.vb)]"
  syntax:
    content: public string GetColumnError (string columnName);
    parameters:
    - id: columnName
      type: System.String
      description: "열의 이름입니다."
    return:
      type: System.String
      description: "오류 설명의 텍스트입니다."
  overload: System.Data.DataRow.GetColumnError*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.GetColumnsInError
  id: GetColumnsInError
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetColumnsInError()
  nameWithType: DataRow.GetColumnsInError()
  fullName: System.Data.DataRow.GetColumnsInError()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "오류가 있는 열의 배열을 가져옵니다."
  remarks: "수를 줄일 수는 GetColumnsInError 있습니다 <xref:System.Data.DataColumn>오류가 있는 열만 반환 하 여 오류에 대 한 처리 해야 하는 개체입니다.</xref:System.Data.DataColumn> 개별 열에 오류를 설정할 수 있습니다는 <xref:System.Data.DataRow.SetColumnError%2A>메서드.</xref:System.Data.DataRow.SetColumnError%2A> 처리의 수를 더 줄이려면를 검사 한는 <xref:System.Data.DataRow.HasErrors%2A>속성의는 <xref:System.Data.DataRow>을 확인 하려면 클래스 여부는 <xref:System.Data.DataRow>GetColumnsInError 호출 하기 전에 오류가.</xref:System.Data.DataRow> </xref:System.Data.DataRow> </xref:System.Data.DataRow.HasErrors%2A>       사용 된 <xref:System.Data.DataRow.ClearErrors%2A>메서드는 행에 대 한 모든 오류를 지웁니다.</xref:System.Data.DataRow.ClearErrors%2A> 여기에 <xref:System.Data.DataRow.RowError%2A>.</xref:System.Data.DataRow.RowError%2A> 포함 됩니다."
  example:
  - "The following example uses the <xref:System.Data.DataRow.HasErrors%2A> to look for errors. If the row has errors, the GetColumnsInError method returns the array of columns with errors that can then be resolved. The <xref:System.Data.DataRow.ClearErrors%2A> method is then called to clear all errors.  \n  \n [!code-cs[Classic WebData DataRow.ClearErrors Example#1](~/add/codesnippet/csharp/m-system.data.datarow.ge_5_1.cs)]\n [!code-vb[Classic WebData DataRow.ClearErrors Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.ge_5_1.vb)]"
  syntax:
    content: public System.Data.DataColumn[] GetColumnsInError ();
    parameters: []
    return:
      type: System.Data.DataColumn[]
      description: "배열을 <xref href=&quot;System.Data.DataColumn&quot;> </xref> 오류가 있는 개체입니다."
  overload: System.Data.DataRow.GetColumnsInError*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.GetParentRow(System.Data.DataRelation)
  id: GetParentRow(System.Data.DataRelation)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetParentRow(DataRelation)
  nameWithType: DataRow.GetParentRow(DataRelation)
  fullName: System.Data.DataRow.GetParentRow(DataRelation)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "부모 행을 가져옵니다는 <xref href=&quot;System.Data.DataRow&quot;> </xref> 사용 하 여 지정 된 <xref href=&quot;System.Data.DataRelation&quot;> </xref>합니다."
  remarks: "에 <xref:System.Data.DataSet>, 컬렉션의 모든 부모 <xref:System.Data.DataRelation>반환한 데이터 집합에 대 한 개체는 <xref:System.Data.DataRow.GetParentRows%2A>메서드.</xref:System.Data.DataRow.GetParentRows%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataSet>       <xref:System.Data.DataTable>의 컬렉션도 포함 <xref:System.Data.DataRelation>에서 반환 된 개체는 <xref:System.Data.DataTable.ParentRelations%2A>속성.</xref:System.Data.DataTable.ParentRelations%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataTable>"
  example:
  - "The following example uses the <xref:System.Data.DataRow.GetParentRow%2A> to return the child <xref:System.Data.DataRow> objects for every child <xref:System.Data.DataRelation> in a <xref:System.Data.DataTable>. The value of each column in the row is then printed.  \n  \n [!code-cs[Classic WebData DataRow.GetParentRow2 Example#1](~/add/codesnippet/csharp/m-system.data.datarow.ge_3_1.cs)]\n [!code-vb[Classic WebData DataRow.GetParentRow2 Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.ge_3_1.vb)]"
  syntax:
    content: public System.Data.DataRow GetParentRow (System.Data.DataRelation relation);
    parameters:
    - id: relation
      type: System.Data.DataRelation
      description: "The <xref href=&quot;System.Data.DataRelation&quot;></xref> to use."
    return:
      type: System.Data.DataRow
      description: "부모 <xref href=&quot;System.Data.DataRow&quot;> </xref> 현재 행의 합니다."
  overload: System.Data.DataRow.GetParentRow*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> relation </code> 에 속해 있지 않습니다는 <xref href=&quot;System.Data.DataTable&quot;> </xref>합니다.       The row is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Data.DataException
    commentId: T:System.Data.DataException
    description: "자식 행에 부모가 여러 개 있습니다."
  - type: System.Data.InvalidConstraintException
    commentId: T:System.Data.InvalidConstraintException
    description: "이 행의 자식 테이블에 속하지 않은 <xref href=&quot;System.Data.DataRelation&quot;> </xref> 개체입니다."
  - type: System.Data.RowNotInTableException
    commentId: T:System.Data.RowNotInTableException
    description: "행은 테이블에 속해 있지 않습니다."
  platform:
  - net462
- uid: System.Data.DataRow.GetParentRow(System.String)
  id: GetParentRow(System.String)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetParentRow(String)
  nameWithType: DataRow.GetParentRow(String)
  fullName: System.Data.DataRow.GetParentRow(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "부모 행을 가져옵니다는 <xref href=&quot;System.Data.DataRow&quot;> </xref> 사용 하 여 지정 된 <xref:System.Data.DataRelation.RelationName*>의 <xref href=&quot;System.Data.DataRelation&quot;> </xref>.</xref:System.Data.DataRelation.RelationName*>"
  remarks: "에 <xref:System.Data.DataSet>, 컬렉션의 모든 부모 <xref:System.Data.DataRelation>반환한 데이터 집합에 대 한 개체는 <xref:System.Data.DataRow.GetParentRows%2A>메서드.</xref:System.Data.DataRow.GetParentRows%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataSet>       <xref:System.Data.DataTable>의 컬렉션도 포함 <xref:System.Data.DataRelation>에서 반환 된 개체는 <xref:System.Data.DataTable.ParentRelations%2A>속성.</xref:System.Data.DataTable.ParentRelations%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataTable>"
  example:
  - "The following example uses the GetParentRow to print a value from each parent row of each <xref:System.Data.DataRow> in a <xref:System.Data.DataTable>.  \n  \n [!code-cs[Classic WebData DataRow.GetParentRow Example#1](~/add/codesnippet/csharp/m-system.data.datarow.ge_4_1.cs)]\n [!code-vb[Classic WebData DataRow.GetParentRow Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.ge_4_1.vb)]"
  syntax:
    content: public System.Data.DataRow GetParentRow (string relationName);
    parameters:
    - id: relationName
      type: System.String
      description: "The <xref:System.Data.DataRelation.RelationName*> of a <xref href=&quot;System.Data.DataRelation&quot;></xref>.</xref:System.Data.DataRelation.RelationName*>"
    return:
      type: System.Data.DataRow
      description: "부모 <xref href=&quot;System.Data.DataRow&quot;> </xref> 현재 행의 합니다."
  overload: System.Data.DataRow.GetParentRow*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "관계와 행은 동일한 테이블에 속해 있지 않습니다."
  - type: System.Data.DataException
    commentId: T:System.Data.DataException
    description: "자식 행에 부모가 여러 개 있습니다."
  - type: System.Data.RowNotInTableException
    commentId: T:System.Data.RowNotInTableException
    description: "행은 테이블에 속해 있지 않습니다."
  platform:
  - net462
- uid: System.Data.DataRow.GetParentRow(System.Data.DataRelation,System.Data.DataRowVersion)
  id: GetParentRow(System.Data.DataRelation,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetParentRow(DataRelation,DataRowVersion)
  nameWithType: DataRow.GetParentRow(DataRelation,DataRowVersion)
  fullName: System.Data.DataRow.GetParentRow(DataRelation,DataRowVersion)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "부모 행을 가져옵니다는 <xref href=&quot;System.Data.DataRow&quot;> </xref> 사용 하 여 지정 된 <xref href=&quot;System.Data.DataRelation&quot;> </xref>, 및 <xref href=&quot;System.Data.DataRowVersion&quot;> </xref>합니다."
  remarks: "에 <xref:System.Data.DataSet>, 컬렉션의 모든 부모 <xref:System.Data.DataRelation>반환한 데이터 집합에 대 한 개체는 <xref:System.Data.DataRow.GetParentRows%2A>메서드.</xref:System.Data.DataRow.GetParentRows%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataSet>       <xref:System.Data.DataTable>의 컬렉션도 포함 <xref:System.Data.DataRelation>에서 반환 된 개체는 <xref:System.Data.DataTable.ParentRelations%2A>속성.</xref:System.Data.DataTable.ParentRelations%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataTable>       사용 하 여는 <xref:System.Data.DataRow.HasVersion%2A>속성을 확인 여부는 <xref:System.Data.DataRowVersion>존재 한다고.</xref:System.Data.DataRowVersion> </xref:System.Data.DataRow.HasVersion%2A>"
  example:
  - "The following example uses the <xref:System.Data.DataRow.GetParentRow%2A> to return the child <xref:System.Data.DataRow> objects for every child <xref:System.Data.DataRelation> in a <xref:System.Data.DataTable>. The value of each column in the row is then printed.  \n  \n [!code-vb[Classic WebData DataRow.GetParentRow3 Example#1](~/add/codesnippet/visualbasic/a16d1012-4e05-4bd8-9275-_1.vb)]\n [!code-cs[Classic WebData DataRow.GetParentRow3 Example#1](~/add/codesnippet/csharp/a16d1012-4e05-4bd8-9275-_1.cs)]"
  syntax:
    content: public System.Data.DataRow GetParentRow (System.Data.DataRelation relation, System.Data.DataRowVersion version);
    parameters:
    - id: relation
      type: System.Data.DataRelation
      description: "The <xref href=&quot;System.Data.DataRelation&quot;></xref> to use."
    - id: version
      type: System.Data.DataRowVersion
      description: "중 하나는 <xref href=&quot;System.Data.DataRowVersion&quot;> </xref> 가져올 데이터의 버전을 지정 하는 값입니다."
    return:
      type: System.Data.DataRow
      description: "부모 <xref href=&quot;System.Data.DataRow&quot;> </xref> 현재 행의 합니다."
  overload: System.Data.DataRow.GetParentRow*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The row is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       <code> relation </code> 이 테이블의 부모 관계에 속해 있지 않습니다."
  - type: System.Data.DataException
    commentId: T:System.Data.DataException
    description: "자식 행에 부모가 여러 개 있습니다."
  - type: System.Data.InvalidConstraintException
    commentId: T:System.Data.InvalidConstraintException
    description: "관계의 자식 테이블의 행이 속한 테이블이 아닙니다."
  - type: System.Data.RowNotInTableException
    commentId: T:System.Data.RowNotInTableException
    description: "행은 테이블에 속해 있지 않습니다."
  - type: System.Data.VersionNotFoundException
    commentId: T:System.Data.VersionNotFoundException
    description: "행에는이 버전의 데이터 않아도 됩니다."
  platform:
  - net462
- uid: System.Data.DataRow.GetParentRow(System.String,System.Data.DataRowVersion)
  id: GetParentRow(System.String,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetParentRow(String,DataRowVersion)
  nameWithType: DataRow.GetParentRow(String,DataRowVersion)
  fullName: System.Data.DataRow.GetParentRow(String,DataRowVersion)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "부모 행을 가져옵니다는 <xref href=&quot;System.Data.DataRow&quot;> </xref> 사용 하 여 지정 된 <xref:System.Data.DataRelation.RelationName*>의 <xref href=&quot;System.Data.DataRelation&quot;> </xref>, 및 <xref href=&quot;System.Data.DataRowVersion&quot;> </xref>.</xref:System.Data.DataRelation.RelationName*>"
  remarks: "에 <xref:System.Data.DataSet>, 컬렉션의 모든 부모 <xref:System.Data.DataRelation>반환한 데이터 집합에 대 한 개체는 <xref:System.Data.DataRow.GetParentRows%2A>메서드.</xref:System.Data.DataRow.GetParentRows%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataSet>       <xref:System.Data.DataTable>의 컬렉션도 포함 <xref:System.Data.DataRelation>에서 반환 된 개체는 <xref:System.Data.DataTable.ParentRelations%2A>속성.</xref:System.Data.DataTable.ParentRelations%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataTable>       사용 하 여는 <xref:System.Data.DataRow.HasVersion%2A>속성을 확인 여부는 <xref:System.Data.DataRowVersion>존재 한다고.</xref:System.Data.DataRowVersion> </xref:System.Data.DataRow.HasVersion%2A>"
  example:
  - "The following example uses the <xref:System.Data.DataRow.GetParentRow%2A> to print a value from each parent row of each <xref:System.Data.DataRow> in a <xref:System.Data.DataTable>.  \n  \n [!code-vb[Classic WebData DataRow.GetParentRow1 Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.ge_7_1.vb)]\n [!code-cs[Classic WebData DataRow.GetParentRow1 Example#1](~/add/codesnippet/csharp/m-system.data.datarow.ge_7_1.cs)]"
  syntax:
    content: public System.Data.DataRow GetParentRow (string relationName, System.Data.DataRowVersion version);
    parameters:
    - id: relationName
      type: System.String
      description: "The <xref:System.Data.DataRelation.RelationName*> of a <xref href=&quot;System.Data.DataRelation&quot;></xref>.</xref:System.Data.DataRelation.RelationName*>"
    - id: version
      type: System.Data.DataRowVersion
      description: "중 하나는 <xref href=&quot;System.Data.DataRowVersion&quot;> </xref> 값입니다."
    return:
      type: System.Data.DataRow
      description: "부모 <xref href=&quot;System.Data.DataRow&quot;> </xref> 현재 행의 합니다."
  overload: System.Data.DataRow.GetParentRow*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "관계와 행은 동일한 테이블에 속해 있지 않습니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>relation</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Data.DataException
    commentId: T:System.Data.DataException
    description: "자식 행에 부모가 여러 개 있습니다."
  - type: System.Data.RowNotInTableException
    commentId: T:System.Data.RowNotInTableException
    description: "행은 테이블에 속해 있지 않습니다."
  - type: System.Data.VersionNotFoundException
    commentId: T:System.Data.VersionNotFoundException
    description: "행에 요청 된 없는 <xref href=&quot;System.Data.DataRowVersion&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Data.DataRow.GetParentRows(System.Data.DataRelation)
  id: GetParentRows(System.Data.DataRelation)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetParentRows(DataRelation)
  nameWithType: DataRow.GetParentRows(DataRelation)
  fullName: System.Data.DataRow.GetParentRows(DataRelation)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "행의 부모를 가져옵니다는 <xref href=&quot;System.Data.DataRow&quot;> </xref> 사용 하 여 지정 된 <xref href=&quot;System.Data.DataRelation&quot;> </xref>합니다."
  remarks: "에 <xref:System.Data.DataSet>, 컬렉션의 모든 부모 <xref:System.Data.DataRelation>반환한 데이터 집합에 대 한 개체는 <xref:System.Data.DataRow.GetParentRows%2A>메서드.</xref:System.Data.DataRow.GetParentRows%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataSet>       <xref:System.Data.DataTable>의 컬렉션도 포함 <xref:System.Data.DataRelation>에서 반환 된 개체는 <xref:System.Data.DataTable.ParentRelations%2A>속성.</xref:System.Data.DataTable.ParentRelations%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataTable>"
  example:
  - "The following example uses the <xref:System.Data.DataRow.GetParentRows%2A> to return the child <xref:System.Data.DataRow> objects for every child <xref:System.Data.DataRelation> in a <xref:System.Data.DataTable>. The value of each column in the row is then printed.  \n  \n [!code-vb[Classic WebData DataRow.GetParentRows2 Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.ge_2_1.vb)]"
  syntax:
    content: public System.Data.DataRow[] GetParentRows (System.Data.DataRelation relation);
    parameters:
    - id: relation
      type: System.Data.DataRelation
      description: "The <xref href=&quot;System.Data.DataRelation&quot;></xref> to use."
    return:
      type: System.Data.DataRow[]
      description: "배열을 <xref href=&quot;System.Data.DataRow&quot;> </xref> 개체 또는 배열 길이&0;입니다."
  overload: System.Data.DataRow.GetParentRows*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<xref href=&quot;System.Data.DataRelation&quot;> </xref> 이 행에 속하지 않은 <xref href=&quot;System.Data.DataSet&quot;> </xref>합니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The row is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Data.InvalidConstraintException
    commentId: T:System.Data.InvalidConstraintException
    description: "관계의 자식 테이블의 행이 속한 테이블이 아닙니다."
  - type: System.Data.RowNotInTableException
    commentId: T:System.Data.RowNotInTableException
    description: "행에 속하지 않은 <xref href=&quot;System.Data.DataTable&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Data.DataRow.GetParentRows(System.String)
  id: GetParentRows(System.String)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetParentRows(String)
  nameWithType: DataRow.GetParentRows(String)
  fullName: System.Data.DataRow.GetParentRows(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "행의 부모를 가져옵니다는 <xref href=&quot;System.Data.DataRow&quot;> </xref> 사용 하 여 지정 된 <xref:System.Data.DataRelation.RelationName*>의 <xref href=&quot;System.Data.DataRelation&quot;> </xref>.</xref:System.Data.DataRelation.RelationName*>"
  remarks: "에 <xref:System.Data.DataSet>, 컬렉션의 모든 부모 <xref:System.Data.DataRelation>개체는 데이터 집합이 GetParentRows 메서드에 의해 반환 됩니다.</xref:System.Data.DataRelation> </xref:System.Data.DataSet>       <xref:System.Data.DataTable>의 컬렉션도 포함 <xref:System.Data.DataRelation>에서 반환 된 개체는 <xref:System.Data.DataTable.ParentRelations%2A>속성.</xref:System.Data.DataTable.ParentRelations%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataTable>"
  syntax:
    content: public System.Data.DataRow[] GetParentRows (string relationName);
    parameters:
    - id: relationName
      type: System.String
      description: "The <xref:System.Data.DataRelation.RelationName*> of a <xref href=&quot;System.Data.DataRelation&quot;></xref>.</xref:System.Data.DataRelation.RelationName*>"
    return:
      type: System.Data.DataRow[]
      description: "배열을 <xref href=&quot;System.Data.DataRow&quot;> </xref> 개체 또는 배열 길이&0;입니다."
  overload: System.Data.DataRow.GetParentRows*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "관계와 행은 동일한 테이블에 속해 있지 않습니다."
  - type: System.Data.RowNotInTableException
    commentId: T:System.Data.RowNotInTableException
    description: "행은 테이블에 속해 있지 않습니다."
  platform:
  - net462
- uid: System.Data.DataRow.GetParentRows(System.Data.DataRelation,System.Data.DataRowVersion)
  id: GetParentRows(System.Data.DataRelation,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetParentRows(DataRelation,DataRowVersion)
  nameWithType: DataRow.GetParentRows(DataRelation,DataRowVersion)
  fullName: System.Data.DataRow.GetParentRows(DataRelation,DataRowVersion)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "행의 부모를 가져옵니다는 <xref href=&quot;System.Data.DataRow&quot;> </xref> 사용 하 여 지정 된 <xref href=&quot;System.Data.DataRelation&quot;> </xref>, 및 <xref href=&quot;System.Data.DataRowVersion&quot;> </xref>합니다."
  remarks: "에 <xref:System.Data.DataSet>, 컬렉션의 모든 부모 <xref:System.Data.DataRelation>반환한 데이터 집합에 대 한 개체는 <xref:System.Data.DataRow.GetParentRows%2A>메서드.</xref:System.Data.DataRow.GetParentRows%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataSet>       <xref:System.Data.DataTable>의 컬렉션도 포함 <xref:System.Data.DataRelation>에서 반환 된 개체는 <xref:System.Data.DataTable.ParentRelations%2A>속성.</xref:System.Data.DataTable.ParentRelations%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataTable>       사용 하 여는 <xref:System.Data.DataRow.HasVersion%2A>속성을 확인 여부는 <xref:System.Data.DataRowVersion>존재 한다고.</xref:System.Data.DataRowVersion> </xref:System.Data.DataRow.HasVersion%2A>"
  example:
  - "The following example uses the <xref:System.Data.DataRow.GetParentRows%2A> to return the child <xref:System.Data.DataRow> objects for every child <xref:System.Data.DataRelation> in a <xref:System.Data.DataTable>. The value of each column in the row is then printed.  \n  \n [!code-vb[Classic WebData DataRow.GetParentRows3 Example#1](~/add/codesnippet/visualbasic/14f3e3ca-84f4-434d-94fa-_1.vb)]"
  syntax:
    content: public System.Data.DataRow[] GetParentRows (System.Data.DataRelation relation, System.Data.DataRowVersion version);
    parameters:
    - id: relation
      type: System.Data.DataRelation
      description: "The <xref href=&quot;System.Data.DataRelation&quot;></xref> to use."
    - id: version
      type: System.Data.DataRowVersion
      description: "중 하나는 <xref href=&quot;System.Data.DataRowVersion&quot;> </xref> 가져올 데이터의 버전을 지정 하는 값입니다."
    return:
      type: System.Data.DataRow[]
      description: "배열을 <xref href=&quot;System.Data.DataRow&quot;> </xref> 개체 또는 배열 길이&0;입니다."
  overload: System.Data.DataRow.GetParentRows*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<xref href=&quot;System.Data.DataRelation&quot;> </xref> 이 행에 속하지 않은 <xref href=&quot;System.Data.DataSet&quot;> </xref>합니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The row is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Data.InvalidConstraintException
    commentId: T:System.Data.InvalidConstraintException
    description: "관계의 자식 테이블의 행이 속한 테이블이 아닙니다."
  - type: System.Data.RowNotInTableException
    commentId: T:System.Data.RowNotInTableException
    description: "행에 속하지 않은 <xref href=&quot;System.Data.DataTable&quot;> </xref>합니다."
  - type: System.Data.VersionNotFoundException
    commentId: T:System.Data.VersionNotFoundException
    description: "행에 요청 된 없는 <xref href=&quot;System.Data.DataRowVersion&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Data.DataRow.GetParentRows(System.String,System.Data.DataRowVersion)
  id: GetParentRows(System.String,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetParentRows(String,DataRowVersion)
  nameWithType: DataRow.GetParentRows(String,DataRowVersion)
  fullName: System.Data.DataRow.GetParentRows(String,DataRowVersion)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "행의 부모를 가져옵니다는 <xref href=&quot;System.Data.DataRow&quot;> </xref> 사용 하 여 지정 된 <xref:System.Data.DataRelation.RelationName*>의 <xref href=&quot;System.Data.DataRelation&quot;> </xref>, 및 <xref href=&quot;System.Data.DataRowVersion&quot;> </xref>.</xref:System.Data.DataRelation.RelationName*>"
  remarks: "에 <xref:System.Data.DataSet>, 컬렉션의 모든 부모 <xref:System.Data.DataRelation>반환한 데이터 집합에 대 한 개체는 <xref:System.Data.DataRow.GetParentRows%2A>메서드.</xref:System.Data.DataRow.GetParentRows%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataSet>       <xref:System.Data.DataTable>의 컬렉션도 포함 <xref:System.Data.DataRelation>에서 반환 된 개체는 <xref:System.Data.DataTable.ParentRelations%2A>속성.</xref:System.Data.DataTable.ParentRelations%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataTable>       사용 하 여는 <xref:System.Data.DataRow.HasVersion%2A>속성을 확인 여부는 <xref:System.Data.DataRowVersion>존재 한다고.</xref:System.Data.DataRowVersion> </xref:System.Data.DataRow.HasVersion%2A>"
  syntax:
    content: public System.Data.DataRow[] GetParentRows (string relationName, System.Data.DataRowVersion version);
    parameters:
    - id: relationName
      type: System.String
      description: "The <xref:System.Data.DataRelation.RelationName*> of a <xref href=&quot;System.Data.DataRelation&quot;></xref>.</xref:System.Data.DataRelation.RelationName*>"
    - id: version
      type: System.Data.DataRowVersion
      description: "중 하나는 <xref href=&quot;System.Data.DataRowVersion&quot;> </xref> 가져올 데이터의 버전을 지정 하는 값입니다. Possible values are <xref uid=&quot;langword_csharp_Default&quot; name=&quot;Default&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Original&quot; name=&quot;Original&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Current&quot; name=&quot;Current&quot; href=&quot;&quot;></xref>, and <xref uid=&quot;langword_csharp_Proposed&quot; name=&quot;Proposed&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Data.DataRow[]
      description: "배열을 <xref href=&quot;System.Data.DataRow&quot;> </xref> 개체 또는 배열 길이&0;입니다."
  overload: System.Data.DataRow.GetParentRows*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "관계와 행은 동일한 테이블에 속해 있지 않습니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>relation</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Data.RowNotInTableException
    commentId: T:System.Data.RowNotInTableException
    description: "행은 테이블에 속해 있지 않습니다."
  - type: System.Data.VersionNotFoundException
    commentId: T:System.Data.VersionNotFoundException
    description: "행에 요청 된 없는 <xref href=&quot;System.Data.DataRowVersion&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Data.DataRow.HasErrors
  id: HasErrors
  parent: System.Data.DataRow
  langs:
  - csharp
  name: HasErrors
  nameWithType: DataRow.HasErrors
  fullName: System.Data.DataRow.HasErrors
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "행에 오류가 있는지 여부를 나타내는 값을 가져옵니다."
  remarks: "`HasErrors`반환 `true` 있는 경우 <xref:System.Data.DataColumn>행의 개체에 오류가 있으면 또는 경우에는 <xref:System.Data.DataRow.RowError%2A>속성의는 <xref:System.Data.DataRow>은 빈 문자열이 아닙니다.</xref:System.Data.DataRow> </xref:System.Data.DataRow.RowError%2A> </xref:System.Data.DataColumn>       데이터 유효성을 검사할 때 오류가 발생 한 행의 모든 열에 설정할 수 있습니다. 이런 열에 표시 되는 <xref:System.Windows.Forms.DataGrid?displayProperty=fullName>제어 하 고, 열이 오류에는 사용자에 게 알리기 위해 빨간색 느낌표가으로 표시 됩니다.</xref:System.Windows.Forms.DataGrid?displayProperty=fullName>       사용 하 여 <xref:System.Data.DataRow.SetColumnError%2A>오류가 모든 열에 설정할 수 있습니다.</xref:System.Data.DataRow.SetColumnError%2A>       사용 하 여는 <xref:System.Data.DataRow.GetColumnError%2A>및 `GetColumnsInError` 오류가 있는 열을 반환 하는 메서드.</xref:System.Data.DataRow.GetColumnError%2A>       <xref:System.Data.DataRow.ClearErrors%2A>메서드는 행에 대 한 오류를 모두 지웁니다.</xref:System.Data.DataRow.ClearErrors%2A>"
  example:
  - "The following example uses the HasErrors to look for errors. If the row has errors, the <xref:System.Data.DataRow.GetColumnsInError%2A> method returns the array of columns with errors that can then be resolved. The <xref:System.Data.DataRow.ClearErrors%2A> method is then called to clear all errors.  \n  \n [!code-cs[Classic WebData DataRow.HasErrors Example#1](~/add/codesnippet/csharp/p-system.data.datarow.ha_1.cs)]\n [!code-vb[Classic WebData DataRow.HasErrors Example#1](~/add/codesnippet/visualbasic/p-system.data.datarow.ha_1.vb)]"
  syntax:
    content: public bool HasErrors { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>행에 오류가 있습니다. 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Data.DataRow.HasErrors*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.HasVersion(System.Data.DataRowVersion)
  id: HasVersion(System.Data.DataRowVersion)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: HasVersion(DataRowVersion)
  nameWithType: DataRow.HasVersion(DataRowVersion)
  fullName: System.Data.DataRow.HasVersion(DataRowVersion)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "지정된 된 버전에 있는지 여부를 나타내는 값을 가져옵니다."
  remarks: "참조는 <xref:System.Data.DataRow.BeginEdit%2A>메서드 자세한 정보에 대 한.</xref:System.Data.DataRow.BeginEdit%2A>"
  example:
  - "The following example uses the HasVersion method to determine whether the current value of a column and the proposed value are the same. If so, the edit is canceled. Otherwise, the <xref:System.Data.DataRow.AcceptChanges%2A> method is called to end the edit.  \n  \n [!code-vb[Classic WebData DataRow.HasVersion Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.ha_1.vb)]"
  syntax:
    content: public bool HasVersion (System.Data.DataRowVersion version);
    parameters:
    - id: version
      type: System.Data.DataRowVersion
      description: "중 하나는 <xref href=&quot;System.Data.DataRowVersion&quot;> </xref> 행 버전을 지정 하는 값입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>버전이 있으면; 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Data.DataRow.HasVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.IsNull(System.Data.DataColumn)
  id: IsNull(System.Data.DataColumn)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: IsNull(DataColumn)
  nameWithType: DataRow.IsNull(DataColumn)
  fullName: System.Data.DataRow.IsNull(DataColumn)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "나타내는 값을 가져옵니다 있는지 여부를 지정 된 <xref href=&quot;System.Data.DataColumn&quot;> </xref> null 값을 포함 합니다."
  remarks: ''
  example:
  - "The following example prints each column of each row in each table of a <xref:System.Data.DataSet>. If the row is set to a null value, the value is not printed.  \n  \n [!code-vb[Classic WebData DataRow.IsNull2 Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.is_2_1.vb)]"
  syntax:
    content: public bool IsNull (System.Data.DataColumn column);
    parameters:
    - id: column
      type: System.Data.DataColumn
      description: "A <xref href=&quot;System.Data.DataColumn&quot;></xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>열을 null 값을 포함 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Data.DataRow.IsNull*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.IsNull(System.Int32)
  id: IsNull(System.Int32)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: IsNull(Int32)
  nameWithType: DataRow.IsNull(Int32)
  fullName: System.Data.DataRow.IsNull(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "지정된 된 인덱스에 있는 열의 null 값이 있는지 여부를 나타내는 값을 가져옵니다."
  remarks: ''
  example:
  - "The following example changes the value of a column to a null value, and then uses the IsNull method to determine whether the value is null.  \n  \n [!code-vb[Classic WebData DataRow.IsNull Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.is_1_1.vb)]"
  syntax:
    content: public bool IsNull (int columnIndex);
    parameters:
    - id: columnIndex
      type: System.Int32
      description: "열의&0;부터 시작 하는 인덱스입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>열을 null 값을 포함 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Data.DataRow.IsNull*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.IsNull(System.String)
  id: IsNull(System.String)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: IsNull(String)
  nameWithType: DataRow.IsNull(String)
  fullName: System.Data.DataRow.IsNull(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "명명된 된 열에 null 값이 들어 있는지 여부를 나타내는 값을 가져옵니다."
  remarks: ''
  example:
  - "The following example changes the value of a column to a null value, and then uses the <xref:System.Data.DataRow.IsNull%2A> method to determine whether the value is null.  \n  \n [!code-vb[Classic WebData DataRow.IsNull1 Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.is_0_1.vb)]"
  syntax:
    content: public bool IsNull (string columnName);
    parameters:
    - id: columnName
      type: System.String
      description: "열의 이름입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>열을 null 값을 포함 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Data.DataRow.IsNull*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.IsNull(System.Data.DataColumn,System.Data.DataRowVersion)
  id: IsNull(System.Data.DataColumn,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: IsNull(DataColumn,DataRowVersion)
  nameWithType: DataRow.IsNull(DataColumn,DataRowVersion)
  fullName: System.Data.DataRow.IsNull(DataColumn,DataRowVersion)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "나타내는 값을 가져옵니다 있는지 여부를 지정 된 <xref href=&quot;System.Data.DataColumn&quot;> </xref> 및 <xref href=&quot;System.Data.DataRowVersion&quot;> </xref> null 값을 포함 합니다."
  syntax:
    content: public bool IsNull (System.Data.DataColumn column, System.Data.DataRowVersion version);
    parameters:
    - id: column
      type: System.Data.DataColumn
      description: "A <xref href=&quot;System.Data.DataColumn&quot;></xref>."
    - id: version
      type: System.Data.DataRowVersion
      description: "중 하나는 <xref href=&quot;System.Data.DataRowVersion&quot;> </xref> 행 버전을 지정 하는 값입니다. Possible values are <xref uid=&quot;langword_csharp_Default&quot; name=&quot;Default&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Original&quot; name=&quot;Original&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Current&quot; name=&quot;Current&quot; href=&quot;&quot;></xref>, and <xref uid=&quot;langword_csharp_Proposed&quot; name=&quot;Proposed&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>열을 null 값을 포함 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Data.DataRow.IsNull*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.Item(System.Data.DataColumn)
  id: Item(System.Data.DataColumn)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: Item(DataColumn)
  nameWithType: DataRow.Item(DataColumn)
  fullName: System.Data.DataRow.Item(DataColumn)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "지정 된 저장 된 데이터를 가져오거나 설정 합니다. <xref href=&quot;System.Data.DataColumn&quot;> </xref>합니다."
  remarks: "속성을 설정에서 예외가 발생 하는 경우 예외가 생성 됩니다는 <xref:System.Data.DataTable.ColumnChanging>이벤트.</xref:System.Data.DataTable.ColumnChanging>       직접 편집 인 경우 참조 <xref:System.Data.DataRow.EndEdit%2A>생성 될 수 있는 예외에 대 한.</xref:System.Data.DataRow.EndEdit%2A>"
  example:
  - "The following examples demonstrate the use of the <xref:System.Data.DataRow.Item%2A> property to get and set the value of a specific column index. The first example gets the value of the first column in any row that a user clicks in a <xref:System.Windows.Forms.DataGrid> control. The second sets a value passed as an argument to the method.  \n  \n [!code-vb[Classic WebData DataRow.this2 Example#1](~/add/codesnippet/visualbasic/p-system.data.datarow.it_3_1.vb)]"
  syntax:
    content: public object this[System.Data.DataColumn column] { get; set; }
    parameters:
    - id: column
      type: System.Data.DataColumn
      description: "A <xref href=&quot;System.Data.DataColumn&quot;> </xref> 데이터가 들어 있는입니다."
    return:
      type: System.Object
      description: "<xref:System.Object>데이터가 들어 있는.</xref:System.Object>"
  overload: System.Data.DataRow.Item*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "열이이 테이블에 속해 있지 않습니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>column</code> is null."
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "삭제 된 행에 값을 설정 하려고 했습니다."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "값과 열 데이터 형식이 일치 하지 않습니다."
  platform:
  - net462
- uid: System.Data.DataRow.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: DataRow.Item(Int32)
  fullName: System.Data.DataRow.Item(Int32)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "인덱스로 지정 된 열에 저장 된 데이터를 가져오거나 설정 합니다."
  remarks: "속성을 설정에서 예외가 발생 하는 경우 예외가 생성 됩니다는 <xref:System.Data.DataTable.ColumnChanging>이벤트.</xref:System.Data.DataTable.ColumnChanging>       편집 하는 경우 참조 <xref:System.Data.DataRow.EndEdit%2A>생성 될 수 있는 예외에 대 한.</xref:System.Data.DataRow.EndEdit%2A>"
  example:
  - "The following examples demonstrate the use of the Item property to get and set the value of a specific column index. The first example gets the value of the first column in any row that a user clicks in a <xref:System.Windows.Forms.DataGrid> control.  \n  \n [!code-vb[Classic WebData DataRow.this Example#1](~/add/codesnippet/visualbasic/p-system.data.datarow.it_0_1.vb)]\n [!code-cs[Classic WebData DataRow.this Example#1](~/add/codesnippet/csharp/p-system.data.datarow.it_0_1.cs)]"
  syntax:
    content: public object this[int columnIndex] { get; set; }
    parameters:
    - id: columnIndex
      type: System.Int32
      description: "열의&0;부터 시작 하는 인덱스입니다."
    return:
      type: System.Object
      description: "<xref:System.Object>데이터가 들어 있는.</xref:System.Object>"
  overload: System.Data.DataRow.Item*
  exceptions:
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "삭제 된 행에 값을 설정 하려고 할 때 발생 합니다."
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "<code> columnIndex </code> 인수가 범위를 벗어났습니다."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "설정한 값과 새 값의 <xref:System.Type> <xref:System.Data.DataColumn.DataType*>.</xref:System.Data.DataColumn.DataType*> 와 일치 하지 않습니다</xref:System.Type> ."
  platform:
  - net462
- uid: System.Data.DataRow.Item(System.String)
  id: Item(System.String)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: Item(String)
  nameWithType: DataRow.Item(String)
  fullName: System.Data.DataRow.Item(String)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "이름으로 지정 된 열에 저장 된 데이터를 가져오거나 설정 합니다."
  remarks: "속성을 설정에서 예외가 발생 하는 경우 예외가 생성 됩니다는 <xref:System.Data.DataTable.ColumnChanging>이벤트.</xref:System.Data.DataTable.ColumnChanging>       직접 편집 인 경우 참조 <xref:System.Data.DataRow.EndEdit%2A>생성 될 수 있는 예외에 대 한.</xref:System.Data.DataRow.EndEdit%2A>"
  example:
  - "The following examples demonstrate the use of the <xref:System.Data.DataRow.Item%2A> property to get and set the value of a specific column index. The first example gets the value of the first column in any row that a user clicks in a <xref:System.Windows.Forms.DataGrid> control. The second sets a value passed as an argument to the method.  \n  \n [!code-vb[Classic WebData DataRow.this1 Example#1](~/add/codesnippet/visualbasic/p-system.data.datarow.it_2_1.vb)]\n [!code-cs[Classic WebData DataRow.this1 Example#1](~/add/codesnippet/csharp/p-system.data.datarow.it_2_1.cs)]"
  syntax:
    content: public object this[string columnName] { get; set; }
    parameters:
    - id: columnName
      type: System.String
      description: "열의 이름입니다."
    return:
      type: System.Object
      description: "<xref:System.Object>데이터가 들어 있는.</xref:System.Object>"
  overload: System.Data.DataRow.Item*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "지정 된 열의 <code> columnName </code> 찾을 수 없습니다."
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "삭제 된 행에 값을 설정 하려고 할 때 발생 합니다."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "설정한 값과 해당 <xref:System.Type> <xref:System.Data.DataColumn.DataType*>.</xref:System.Data.DataColumn.DataType*> 와 일치 하지 않습니다.</xref:System.Type>"
  - type: System.Data.NoNullAllowedException
    commentId: T:System.Data.NoNullAllowedException
    description: "열에 null 값을 삽입 하려고 할 때 발생 합니다. 여기서 <xref:System.Data.DataColumn.AllowDBNull*>로 설정 된 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Data.DataColumn.AllowDBNull*>"
  platform:
  - net462
- uid: System.Data.DataRow.Item(System.Data.DataColumn,System.Data.DataRowVersion)
  id: Item(System.Data.DataColumn,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: Item(DataColumn,DataRowVersion)
  nameWithType: DataRow.Item(DataColumn,DataRowVersion)
  fullName: System.Data.DataRow.Item(DataColumn,DataRowVersion)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "에 지정 된 저장 된 데이터의 지정 된 버전을 가져옵니다 <xref href=&quot;System.Data.DataColumn&quot;> </xref>합니다."
  remarks: "`version` 와 혼동 해서는 안는 <xref:System.Data.DataRow.RowState%2A>속성.</xref:System.Data.DataRow.RowState%2A> `version` 인수는 열의 원래 값과 비교 하 여 열에 포함 된 데이터의 상태를 설명 합니다.       속성을 설정에서 예외가 발생 하는 경우 예외가 생성 됩니다는 <xref:System.Data.DataTable.ColumnChanging>이벤트.</xref:System.Data.DataTable.ColumnChanging>       직접 편집 인 경우 참조 <xref:System.Data.DataRow.EndEdit%2A>생성 될 수 있는 예외에 대 한.</xref:System.Data.DataRow.EndEdit%2A>"
  example:
  - "The following example gets the current value of a clicked cell in the <xref:System.Windows.Forms.DataGrid> control.  \n  \n [!code-cs[Classic WebData DataRow.this5 Example#1](~/add/codesnippet/csharp/p-system.data.datarow.it_6_1.cs)]\n [!code-vb[Classic WebData DataRow.this5 Example#1](~/add/codesnippet/visualbasic/p-system.data.datarow.it_6_1.vb)]"
  syntax:
    content: public object this[System.Data.DataColumn column, System.Data.DataRowVersion version] { get; }
    parameters:
    - id: column
      type: System.Data.DataColumn
      description: "A <xref href=&quot;System.Data.DataColumn&quot;> </xref> 열에 대 한 정보가 들어 있는입니다."
    - id: version
      type: System.Data.DataRowVersion
      description: "중 하나는 <xref href=&quot;System.Data.DataRowVersion&quot;> </xref> 행 버전을 지정 하는 값입니다. Possible values are <xref uid=&quot;langword_csharp_Default&quot; name=&quot;Default&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Original&quot; name=&quot;Original&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Current&quot; name=&quot;Current&quot; href=&quot;&quot;></xref>, and <xref uid=&quot;langword_csharp_Proposed&quot; name=&quot;Proposed&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Object
      description: "<xref:System.Object>데이터가 들어 있는.</xref:System.Object>"
  overload: System.Data.DataRow.Item*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "열이 테이블에 속하지 않습니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> column </code> 인수는 null을 포함 합니다."
  - type: System.Data.VersionNotFoundException
    commentId: T:System.Data.VersionNotFoundException
    description: "행에는이 버전의 데이터 않아도 됩니다."
  platform:
  - net462
- uid: System.Data.DataRow.Item(System.Int32,System.Data.DataRowVersion)
  id: Item(System.Int32,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: Item(Int32,DataRowVersion)
  nameWithType: DataRow.Item(Int32,DataRowVersion)
  fullName: System.Data.DataRow.Item(Int32,DataRowVersion)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "검색할 데이터의 버전 및 인덱스에서 지정한 열에 저장 된 데이터를 가져옵니다."
  remarks: "수만 만들거나의 <xref:System.Data.DataRow.BeginEdit%2A>방법으로, 마찬가지로,는 <xref:System.Data.DataRow.EndEdit%2A>메서드를 호출 하는 편집을 커밋하지 해야</xref:System.Data.DataRow.EndEdit%2A> </xref:System.Data.DataRow.BeginEdit%2A> 를 호출한 후 행을 업데이트 합니다. 호출한 후의 <xref:System.Data.DataRow.EndEdit%2A>메서드를 호출 하기 전에 및는 <xref:System.Data.DataRow.AcceptChanges%2A>메서드, 원본 및 새 내부 표현 제안 된 값이 저장 됩니다.</xref:System.Data.DataRow.AcceptChanges%2A> </xref:System.Data.DataRow.EndEdit%2A> 따라서 호출 하기 전에 <xref:System.Data.DataRow.AcceptChanges%2A>를 사용할 수 있습니다는 `version` 인수는 열 값의 버전을 해야 하거나 지정할 수는 `DataRowVersion.Original` 또는 `DataRowVersion.Proposed`.</xref:System.Data.DataRow.AcceptChanges%2A> 그러나 가능한 한 즉시 호출 하는 <xref:System.Data.DataRow.AcceptChanges%2A>에 메서드, 열의 버전이 전환 `DataRowVersion.Original`.</xref:System.Data.DataRow.AcceptChanges%2A> 행이 새를 전달할 수도 있습니다 `DataRowVersion.Default` 열의 기본 값을 검색 하는 매개 변수에 대 한 합니다. 전달 하는 경우 `DataRowVersion.Current`, 속성은 현재 반환 값을 해당 버전 무엇이 든 될 수 있습니다.      > [!NOTE] >는 <xref:System.Data.DataRow.BeginEdit%2A>메서드는 데이터 바인딩된 컨트롤의 값을 변경 하거나 때 암시적으로 호출 됩니다는 <xref:System.Data.DataRow>개체에 추가 <xref:System.Data.DataRowCollection>; <xref:System.Data.DataRow.EndEdit%2A>메서드는 다음 메서드를 호출할 때 암시적으로 호출 됩니다:는 <xref:System.Data.DataRow.AcceptChanges%2A>의 메서드는 <xref:System.Data.DataRow>개체는 <xref:System.Data.DataTable.AcceptChanges%2A>의 메서드는 <xref:System.Data.DataTable>개체를 또는 <xref:System.Data.DataRow.CancelEdit%2A>메서드.</xref:System.Data.DataRow.CancelEdit%2A> </xref:System.Data.DataTable> </xref:System.Data.DataTable.AcceptChanges%2A> </xref:System.Data.DataRow> </xref:System.Data.DataRow.AcceptChanges%2A> </xref:System.Data.DataRow.EndEdit%2A> </xref:System.Data.DataRowCollection> </xref:System.Data.DataRow> </xref:System.Data.DataRow.BeginEdit%2A>       반면,는 <xref:System.Data.DataRowVersion>열거형 `Current` 후 데이터의 버전을 반환는 <xref:System.Data.DataRow.EndEdit%2A>메서드가 호출 되었습니다.</xref:System.Data.DataRow.EndEdit%2A> </xref:System.Data.DataRowVersion>       `version` 인수와 일치 하지 않습니다는 <xref:System.Data.DataRow.RowState%2A>속성.</xref:System.Data.DataRow.RowState%2A> `version` 인수는 열의 원래 값과 비교 하 여 열에 포함 된 데이터의 상태를 설명 합니다. <xref:System.Data.DataRow.RowState%2A>속성 <xref:System.Data.DataTable>.</xref:System.Data.DataTable> 부모에 상대적인 전체 행의 상태를 설명 합니다.</xref:System.Data.DataRow.RowState%2A>       속성을 설정에서 예외가 발생 하는 경우 예외가 생성 됩니다는 <xref:System.Data.DataTable.ColumnChanging>이벤트.</xref:System.Data.DataTable.ColumnChanging>       직접 편집 인 경우 참조 <xref:System.Data.DataRow.EndEdit%2A>생성 될 수 있는 예외에 대 한.</xref:System.Data.DataRow.EndEdit%2A>"
  example:
  - "The following example gets the current value of a column through the <xref:System.Data.DataRow.Item%2A> property of the <xref:System.Data.DataRow> object.  \n  \n [!code-vb[Classic WebData DataRow.this3 Example#1](~/add/codesnippet/visualbasic/p-system.data.datarow.it_4_1.vb)]"
  syntax:
    content: public object this[int columnIndex, System.Data.DataRowVersion version] { get; }
    parameters:
    - id: columnIndex
      type: System.Int32
      description: "열의&0;부터 시작 하는 인덱스입니다."
    - id: version
      type: System.Data.DataRowVersion
      description: "중 하나는 <xref href=&quot;System.Data.DataRowVersion&quot;> </xref> 행 버전을 지정 하는 값입니다. Possible values are <xref uid=&quot;langword_csharp_Default&quot; name=&quot;Default&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Original&quot; name=&quot;Original&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Current&quot; name=&quot;Current&quot; href=&quot;&quot;></xref>, and <xref uid=&quot;langword_csharp_Proposed&quot; name=&quot;Proposed&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Object
      description: "<xref:System.Object>데이터가 들어 있는.</xref:System.Object>"
  overload: System.Data.DataRow.Item*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "<code> columnIndex </code> 인수가 범위를 벗어났습니다."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "값과 열 데이터 형식이 일치 하지 않습니다."
  - type: System.Data.VersionNotFoundException
    commentId: T:System.Data.VersionNotFoundException
    description: "행에는이 버전의 데이터 않아도 됩니다."
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "삭제 된 행에 값을 설정 하려고 했습니다."
  platform:
  - net462
- uid: System.Data.DataRow.Item(System.String,System.Data.DataRowVersion)
  id: Item(System.String,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: Item(String,DataRowVersion)
  nameWithType: DataRow.Item(String,DataRowVersion)
  fullName: System.Data.DataRow.Item(String,DataRowVersion)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "명명된 된 열에 저장 된 데이터의 지정된 된 버전을 가져옵니다."
  remarks: "버전와 일치 하지 않습니다는 <xref:System.Data.DataRow.RowState%2A>속성.</xref:System.Data.DataRow.RowState%2A> `version` 인수는 열의 원래 값과 비교 하 여 열에 포함 된 데이터의 상태를 설명 합니다. <xref:System.Data.DataRow.RowState%2A>속성 <xref:System.Data.DataTable>.</xref:System.Data.DataTable> 부모에 상대적인 전체 행의 상태를 설명 합니다.</xref:System.Data.DataRow.RowState%2A>       속성을 설정에서 예외가 발생 하는 경우 예외가 생성 됩니다는 <xref:System.Data.DataTable.ColumnChanging>이벤트.</xref:System.Data.DataTable.ColumnChanging>       직접 편집 인 경우 참조 <xref:System.Data.DataRow.EndEdit%2A>생성 될 수 있는 예외에 대 한.</xref:System.Data.DataRow.EndEdit%2A>"
  example:
  - "The following example gets the current version of data at a clicked cell of a <xref:System.Windows.Forms.DataGrid> control.  \n  \n [!code-vb[Classic WebData DataRow.this4 Example#1](~/add/codesnippet/visualbasic/p-system.data.datarow.it_5_1.vb)]\n [!code-cs[Classic WebData DataRow.this4 Example#1](~/add/codesnippet/csharp/p-system.data.datarow.it_5_1.cs)]"
  syntax:
    content: public object this[string columnName, System.Data.DataRowVersion version] { get; }
    parameters:
    - id: columnName
      type: System.String
      description: "열의 이름입니다."
    - id: version
      type: System.Data.DataRowVersion
      description: "중 하나는 <xref href=&quot;System.Data.DataRowVersion&quot;> </xref> 행 버전을 지정 하는 값입니다. Possible values are <xref uid=&quot;langword_csharp_Default&quot; name=&quot;Default&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Original&quot; name=&quot;Original&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Current&quot; name=&quot;Current&quot; href=&quot;&quot;></xref>, and <xref uid=&quot;langword_csharp_Proposed&quot; name=&quot;Proposed&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Object
      description: "<xref:System.Object>데이터가 들어 있는.</xref:System.Object>"
  overload: System.Data.DataRow.Item*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "지정 된 열의 <code> columnName </code> 찾을 수 없습니다."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "값과 열 데이터 형식이 일치 하지 않습니다."
  - type: System.Data.VersionNotFoundException
    commentId: T:System.Data.VersionNotFoundException
    description: "행에는이 버전의 데이터 않아도 됩니다."
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "행을 삭제 했습니다."
  platform:
  - net462
- uid: System.Data.DataRow.ItemArray
  id: ItemArray
  parent: System.Data.DataRow
  langs:
  - csharp
  name: ItemArray
  nameWithType: DataRow.ItemArray
  fullName: System.Data.DataRow.ItemArray
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "배열을 통해이 행에 대 한 모든 값을 가져오거나 설정 합니다."
  remarks: "이 속성을 설정 하거나 배열을 통해이 행에 대 한 값을 가져오는 사용할 수 있습니다. 값을 설정 하려면이 속성을 사용 하는 경우 배열에 같은 크기와 열 컬렉션에 있는 순서가 있어야 합니다. 전달 `null` 는 ItemArray 나타냅니다 없는 값이 지정 되었습니다.       사용자의 예외를 생성할 수 있습니다는 <xref:System.Data.DataTable.ColumnChanging>이벤트 또는 <xref:System.Data.DataTable.RowChanging>이벤트.</xref:System.Data.DataTable.RowChanging> </xref:System.Data.DataTable.ColumnChanging>"
  example:
  - "The following examples show how to get and set values using the ItemArray property.  \n  \n [!code-vb[Classic WebData DataRow.ItemArray Example#1](~/add/codesnippet/visualbasic/p-system.data.datarow.it_1_1.vb)]\n [!code-cs[Classic WebData DataRow.ItemArray Example#1](~/add/codesnippet/csharp/p-system.data.datarow.it_1_1.cs)]"
  syntax:
    content: public object[] ItemArray { get; set; }
    return:
      type: System.Object[]
      description: "<xref:System.Object>.</xref:System.Object> 형식의 배열"
  overload: System.Data.DataRow.ItemArray*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "배열의는 테이블의 열 개수 보다 큽니다."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "배열의 값이 일치 하지 않는 해당 <xref:System.Data.DataColumn.DataType*>의 <xref href=&quot;System.Data.DataColumn&quot;> </xref>.</xref:System.Data.DataColumn.DataType*>"
  - type: System.Data.ConstraintException
    commentId: T:System.Data.ConstraintException
    description: "제약 조건을 위반 하는 편집 합니다."
  - type: System.Data.ReadOnlyException
    commentId: T:System.Data.ReadOnlyException
    description: "편집 하는 읽기 전용 열 값을 변경 하려고 했습니다."
  - type: System.Data.NoNullAllowedException
    commentId: T:System.Data.NoNullAllowedException
    description: "편집 하는 열에 null 값을 입력 하려고 합니다. 여기서 <xref:System.Data.DataColumn.AllowDBNull*>의 <xref href=&quot;System.Data.DataColumn&quot;> </xref> 개체가 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Data.DataColumn.AllowDBNull*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "해당 행이 삭제 되었습니다."
  platform:
  - net462
- uid: System.Data.DataRow.RejectChanges
  id: RejectChanges
  parent: System.Data.DataRow
  langs:
  - csharp
  name: RejectChanges()
  nameWithType: DataRow.RejectChanges()
  fullName: System.Data.DataRow.RejectChanges()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "이후 행에 대해 모든 변경 내용을 취소 <xref:System.Data.DataRow.AcceptChanges*>마지막으로 호출한.</xref:System.Data.DataRow.AcceptChanges*>"
  remarks: "RejectChanges 메서드를 호출 하는 경우는 <xref:System.Data.DataRow.CancelEdit%2A>암시적으로 메서드는 편집을 취소 합니다.</xref:System.Data.DataRow.CancelEdit%2A> 경우 <xref:System.Data.DataRow.RowState%2A>삭제 하거나 수정 하 고, 행의 이전 값으로 되돌아갑니다 및 <xref:System.Data.DataRow.RowState%2A>변경 됩니다.</xref:System.Data.DataRow.RowState%2A> </xref:System.Data.DataRow.RowState%2A> 경우는 <xref:System.Data.DataRow.RowState%2A>추가 되 면 해당 행은 제거 합니다.</xref:System.Data.DataRow.RowState%2A>"
  example:
  - "The following example creates a simple <xref:System.Data.DataTable> with 2 columns and 10 rows. After several <xref:System.Data.DataRow> items are deleted with the <xref:System.Data.DataRow.Delete%2A> method, one of the rows is undeleted by invoking RejectChanges.  \n  \n [!code-vb[Classic WebData DataRow.Delete Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.re_1.vb)]\n [!code-cs[Classic WebData DataRow.Delete Example#1](~/add/codesnippet/csharp/m-system.data.datarow.re_1.cs)]"
  syntax:
    content: public void RejectChanges ();
    parameters: []
  overload: System.Data.DataRow.RejectChanges*
  exceptions:
  - type: System.Data.RowNotInTableException
    commentId: T:System.Data.RowNotInTableException
    description: "행은 테이블에 속해 있지 않습니다."
  platform:
  - net462
- uid: System.Data.DataRow.RowError
  id: RowError
  parent: System.Data.DataRow
  langs:
  - csharp
  name: RowError
  nameWithType: DataRow.RowError
  fullName: System.Data.DataRow.RowError
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "행에 대 한 사용자 지정 오류 설명을 가져오거나 설정 합니다."
  remarks: "사용 하 여는 <xref:System.Data.DataRow.HasErrors%2A>속성을 먼저 확인 여부는 <xref:System.Data.DataRow>오류가 포함 된.</xref:System.Data.DataRow> </xref:System.Data.DataRow.HasErrors%2A>"
  example:
  - "The following example sets error text for ten rows of a table displayed in a <xref:System.Windows.Forms.DataGrid> control.  \n  \n [!code-cs[Classic WebData DataRow.RowError Example#1](~/add/codesnippet/csharp/p-system.data.datarow.ro_1_1.cs)]\n [!code-vb[Classic WebData DataRow.RowError Example#1](~/add/codesnippet/visualbasic/p-system.data.datarow.ro_1_1.vb)]"
  syntax:
    content: public string RowError { get; set; }
    return:
      type: System.String
      description: "오류를 설명 하는 텍스트입니다."
  overload: System.Data.DataRow.RowError*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.RowState
  id: RowState
  parent: System.Data.DataRow
  langs:
  - csharp
  name: RowState
  nameWithType: DataRow.RowState
  fullName: System.Data.DataRow.RowState
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "관계에 관련 하 여 행의 현재 상태를 가져옵니다는 <xref href=&quot;System.Data.DataRowCollection&quot;> </xref>합니다."
  remarks: 'RowState의 값이 두 가지 요소에 종속: 행에서 수행 된 작업의 종류를 사용할지 여부와 <xref:System.Data.DataRow.AcceptChanges%2A> <xref:System.Data.DataRow>.</xref:System.Data.DataRow> 호출 되었습니다</xref:System.Data.DataRow.AcceptChanges%2A>'
  example:
  - "The following example first creates a new <xref:System.Data.DataTable> with one column, and then creates a single <xref:System.Data.DataRow>. As the <xref:System.Data.DataRow> is created, added, modified, and deleted, its RowState is printed.  \n  \n [!code-vb[Classic WebData DataRow.RowState Example#1](~/add/codesnippet/visualbasic/p-system.data.datarow.ro_0_1.vb)]\n [!code-cs[Classic WebData DataRow.RowState Example#1](~/add/codesnippet/csharp/p-system.data.datarow.ro_0_1.cs)]"
  syntax:
    content: public System.Data.DataRowState RowState { get; }
    return:
      type: System.Data.DataRowState
      description: "중 하나는 <xref href=&quot;System.Data.DataRowState&quot;> </xref> 값입니다."
  overload: System.Data.DataRow.RowState*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.SetAdded
  id: SetAdded
  parent: System.Data.DataRow
  langs:
  - csharp
  name: SetAdded()
  nameWithType: DataRow.SetAdded()
  fullName: System.Data.DataRow.SetAdded()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Changes the <xref:System.Data.DataRow.Rowstate*> of a <xref href=&quot;System.Data.DataRow&quot;></xref> to <xref uid=&quot;langword_csharp_Added&quot; name=&quot;Added&quot; href=&quot;&quot;></xref>.</xref:System.Data.DataRow.Rowstate*>"
  remarks: "변경 된 <xref:System.Data.DataRow.RowState%2A>의 <xref:System.Data.DataRow>를 `Added`.</xref:System.Data.DataRow> </xref:System.Data.DataRow.RowState%2A> 현재 행 중 하나에 없는 경우는 `Unchanged` 또는 `Added` 상태 이면 throw는 <xref:System.InvalidOperationException>메시지와 함께 하 `SetAdded` 에 대해서만 호출할 수는 `DataRow` 인스턴스는 `RowState` 은 `Unchanged`.</xref:System.InvalidOperationException>"
  syntax:
    content: public void SetAdded ();
    parameters: []
  overload: System.Data.DataRow.SetAdded*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.SetColumnError(System.Data.DataColumn,System.String)
  id: SetColumnError(System.Data.DataColumn,System.String)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: SetColumnError(DataColumn,String)
  nameWithType: DataRow.SetColumnError(DataColumn,String)
  fullName: System.Data.DataRow.SetColumnError(DataColumn,String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "로 지정 된 열에 대 한 오류 설명을 설정 하는 <xref href=&quot;System.Data.DataColumn&quot;> </xref>합니다."
  remarks: "사용 하 여 오류 설명을 검사 하는 <xref:System.Data.DataRow.GetColumnError%2A>메서드.</xref:System.Data.DataRow.GetColumnError%2A>       Columns 컬렉션에 대 한 오류가 있는지 확인 하려면는 <xref:System.Data.DataRow.HasErrors%2A>속성.</xref:System.Data.DataRow.HasErrors%2A> 따라서 사용할 수는 <xref:System.Data.DataRow.GetColumnsInError%2A>오류가 있는 모든 열을 검색 하는 메서드입니다.</xref:System.Data.DataRow.GetColumnsInError%2A>       경우 `null` 으로 전달 된 빈 문자열 또는 `error` 매개 변수는 <xref:System.Data.DataRow>오류가 설정 되지 않은 것 처럼 동작 및 <xref:System.Data.DataRow.HasErrors%2A>속성은 false를 반환 합니다.</xref:System.Data.DataRow.HasErrors%2A> </xref:System.Data.DataRow>       전체 행에 대 한 사용자 지정 오류 설명을 설정 하려면는 <xref:System.Data.DataRow.RowError%2A>속성.</xref:System.Data.DataRow.RowError%2A>       Columns 컬렉션에 대 한 오류가 있는지 확인 하려면는 <xref:System.Data.DataRow.HasErrors%2A>메서드.</xref:System.Data.DataRow.HasErrors%2A>       사용 하 여 columns 컬렉션에 대 한 모든 오류를 지우려면는 <xref:System.Data.DataRow.ClearErrors%2A>메서드.</xref:System.Data.DataRow.ClearErrors%2A>"
  example:
  - "The following example sets an error description for a specified <xref:System.Data.DataRow>.  \n  \n [!code-cs[Classic WebData DataRow.SetColumnError Example#1](~/add/codesnippet/csharp/m-system.data.datarow.se_3_1.cs)]\n [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.se_3_1.vb)]"
  syntax:
    content: public void SetColumnError (System.Data.DataColumn column, string error);
    parameters:
    - id: column
      type: System.Data.DataColumn
      description: "<xref href=&quot;System.Data.DataColumn&quot;> </xref> 오류 설명을 설정 합니다."
    - id: error
      type: System.String
      description: "오류 설명입니다."
  overload: System.Data.DataRow.SetColumnError*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.SetColumnError(System.Int32,System.String)
  id: SetColumnError(System.Int32,System.String)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: SetColumnError(Int32,String)
  nameWithType: DataRow.SetColumnError(Int32,String)
  fullName: System.Data.DataRow.SetColumnError(Int32,String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "인덱스로 지정 된 열에 대 한 오류 설명을 설정 합니다."
  remarks: "지정 된 열에 사용자 지정 오류 설명을 설정 하는 메서드를 사용 됩니다. 사용할 수는 <xref:System.Windows.Forms.ErrorProvider>오류의 텍스트를 표시 하는 컨트롤입니다.</xref:System.Windows.Forms.ErrorProvider>       사용 하 여 오류 설명을 검사 하는 <xref:System.Data.DataRow.GetColumnError%2A>메서드.</xref:System.Data.DataRow.GetColumnError%2A>       Columns 컬렉션에 대 한 오류가 있는지 확인 하려면는 <xref:System.Data.DataRow.HasErrors%2A>속성.</xref:System.Data.DataRow.HasErrors%2A> 따라서 사용할 수는 <xref:System.Data.DataRow.GetColumnsInError%2A>오류가 있는 모든 열을 검색 하는 메서드입니다.</xref:System.Data.DataRow.GetColumnsInError%2A>       경우 `null` 으로 전달 된 빈 문자열 또는 `error` 매개 변수는 <xref:System.Data.DataRow>오류가 설정 되지 않은 것 처럼 동작 및 <xref:System.Data.DataRow.HasErrors%2A>속성은 false를 반환 합니다.</xref:System.Data.DataRow.HasErrors%2A> </xref:System.Data.DataRow>       전체 행에 대 한 사용자 지정 오류 설명을 설정 하려면는 <xref:System.Data.DataRow.RowError%2A>속성.</xref:System.Data.DataRow.RowError%2A>       사용 하 여 columns 컬렉션에 대 한 모든 오류를 지우려면는 <xref:System.Data.DataRow.ClearErrors%2A>메서드.</xref:System.Data.DataRow.ClearErrors%2A>       전체 행에 적용 되는 오류 텍스트를 설정 하려면 설정는 <xref:System.Data.DataRow.RowError%2A>속성.</xref:System.Data.DataRow.RowError%2A>"
  example:
  - "The following example sets an error description for a specified <xref:System.Data.DataRow>.  \n  \n [!code-cs[Classic WebData DataRow.SetColumnError Example#1](~/add/codesnippet/csharp/m-system.data.datarow.se_0_1.cs)]\n [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.se_0_1.vb)]"
  syntax:
    content: public void SetColumnError (int columnIndex, string error);
    parameters:
    - id: columnIndex
      type: System.Int32
      description: "열의&0;부터 시작 하는 인덱스입니다."
    - id: error
      type: System.String
      description: "오류 설명입니다."
  overload: System.Data.DataRow.SetColumnError*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "<code> columnIndex </code> 인수가 범위를 벗어났습니다."
  platform:
  - net462
- uid: System.Data.DataRow.SetColumnError(System.String,System.String)
  id: SetColumnError(System.String,System.String)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: SetColumnError(String,String)
  nameWithType: DataRow.SetColumnError(String,String)
  fullName: System.Data.DataRow.SetColumnError(String,String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "이름으로 지정 된 열에 대 한 오류 설명을 설정 합니다."
  remarks: "열 이름은 <xref:System.Data.DataColumn.ColumnName%2A> <xref:System.Data.DataColumn>클래스</xref:System.Data.DataColumn> 의 속성</xref:System.Data.DataColumn.ColumnName%2A> 으로 설정 된       사용 하 여 오류 설명을 검사 하는 <xref:System.Data.DataRow.GetColumnError%2A>메서드.</xref:System.Data.DataRow.GetColumnError%2A>       Columns 컬렉션에 대 한 오류가 있는지 확인 하려면는 <xref:System.Data.DataRow.HasErrors%2A>속성.</xref:System.Data.DataRow.HasErrors%2A> 따라서 사용할 수는 <xref:System.Data.DataRow.GetColumnsInError%2A>오류가 있는 모든 열을 검색 하는 메서드입니다.</xref:System.Data.DataRow.GetColumnsInError%2A>       경우 `null` 으로 전달 된 빈 문자열 또는 `error` 매개 변수는 <xref:System.Data.DataRow>오류가 설정 되지 않은 것 처럼 동작 및 <xref:System.Data.DataRow.HasErrors%2A>속성은 false를 반환 합니다.</xref:System.Data.DataRow.HasErrors%2A> </xref:System.Data.DataRow>       전체 행에 대 한 사용자 지정 오류 설명을 설정 하려면는 <xref:System.Data.DataRow.RowError%2A>속성.</xref:System.Data.DataRow.RowError%2A>       Columns 컬렉션에 대 한 오류가 있는지 확인 하려면는 <xref:System.Data.DataRow.HasErrors%2A>메서드.</xref:System.Data.DataRow.HasErrors%2A>       사용 하 여 columns 컬렉션에 대 한 모든 오류를 지우려면는 <xref:System.Data.DataRow.ClearErrors%2A>메서드.</xref:System.Data.DataRow.ClearErrors%2A>"
  example:
  - "The following example sets an error description for a specified <xref:System.Data.DataRow>.  \n  \n [!code-cs[Classic WebData DataRow.SetColumnError Example#1](~/add/codesnippet/csharp/m-system.data.datarow.se_1_1.cs)]\n [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.se_1_1.vb)]"
  syntax:
    content: public void SetColumnError (string columnName, string error);
    parameters:
    - id: columnName
      type: System.String
      description: "열의 이름입니다."
    - id: error
      type: System.String
      description: "오류 설명입니다."
  overload: System.Data.DataRow.SetColumnError*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.SetModified
  id: SetModified
  parent: System.Data.DataRow
  langs:
  - csharp
  name: SetModified()
  nameWithType: DataRow.SetModified()
  fullName: System.Data.DataRow.SetModified()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Changes the <xref:System.Data.DataRow.Rowstate*> of a <xref href=&quot;System.Data.DataRow&quot;></xref> to <xref uid=&quot;langword_csharp_Modified&quot; name=&quot;Modified&quot; href=&quot;&quot;></xref>.</xref:System.Data.DataRow.Rowstate*>"
  remarks: "변경 된 <xref:System.Data.DataRow.Rowstate%2A>의 <xref:System.Data.DataRow>를 `Modified`.</xref:System.Data.DataRow> </xref:System.Data.DataRow.Rowstate%2A> 현재 행 중 하나에 없는 경우는 `Unchanged` 또는 `Added` 상태 이면 throw는 <xref:System.InvalidOperationException>메시지와 함께 하 `SetModified` 에 대해서만 호출할 수는 `DataRow` 인스턴스는 `RowState` 은 `Unchanged`.</xref:System.InvalidOperationException>"
  syntax:
    content: public void SetModified ();
    parameters: []
  overload: System.Data.DataRow.SetModified*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.SetNull(System.Data.DataColumn)
  id: SetNull(System.Data.DataColumn)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: SetNull(DataColumn)
  nameWithType: DataRow.SetNull(DataColumn)
  fullName: System.Data.DataRow.SetNull(DataColumn)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "지정 된 값을 설정 <xref href=&quot;System.Data.DataColumn&quot;> </xref> 를 null 값입니다."
  remarks: "사용 된 <xref:System.Data.DataRow.IsNull%2A>열에 null 값이 포함 되어 있는지 여부를 결정 하는 메서드.</xref:System.Data.DataRow.IsNull%2A>"
  syntax:
    content: protected void SetNull (System.Data.DataColumn column);
    parameters:
    - id: column
      type: System.Data.DataColumn
      description: "A <xref href=&quot;System.Data.DataColumn&quot;></xref>."
  overload: System.Data.DataRow.SetNull*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.SetParentRow(System.Data.DataRow)
  id: SetParentRow(System.Data.DataRow)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: SetParentRow(DataRow)
  nameWithType: DataRow.SetParentRow(DataRow)
  fullName: System.Data.DataRow.SetParentRow(DataRow)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "부모 행을 설정는 <xref href=&quot;System.Data.DataRow&quot;> </xref> 지정 된 새 부모와 <xref href=&quot;System.Data.DataRow&quot;> </xref>합니다."
  syntax:
    content: public void SetParentRow (System.Data.DataRow parentRow);
    parameters:
    - id: parentRow
      type: System.Data.DataRow
      description: "새 부모 <xref href=&quot;System.Data.DataRow&quot;> </xref>합니다."
  overload: System.Data.DataRow.SetParentRow*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.SetParentRow(System.Data.DataRow,System.Data.DataRelation)
  id: SetParentRow(System.Data.DataRow,System.Data.DataRelation)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: SetParentRow(DataRow,DataRelation)
  nameWithType: DataRow.SetParentRow(DataRow,DataRelation)
  fullName: System.Data.DataRow.SetParentRow(DataRow,DataRelation)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "부모 행을 설정는 <xref href=&quot;System.Data.DataRow&quot;> </xref> 지정 된 새 부모와 <xref href=&quot;System.Data.DataRow&quot;> </xref> 및 <xref href=&quot;System.Data.DataRelation&quot;> </xref>합니다."
  remarks: ''
  example:
  - "The following example sets the parent row of a specific child row.  \n  \n [!code-vb[Classic WebData DataRow.SetParentRow1 Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.se_2_1.vb)]"
  syntax:
    content: public void SetParentRow (System.Data.DataRow parentRow, System.Data.DataRelation relation);
    parameters:
    - id: parentRow
      type: System.Data.DataRow
      description: "새 부모 <xref href=&quot;System.Data.DataRow&quot;> </xref>합니다."
    - id: relation
      type: System.Data.DataRelation
      description: "관계 <xref href=&quot;System.Data.DataRelation&quot;> </xref> 사용 하도록 합니다."
  overload: System.Data.DataRow.SetParentRow*
  exceptions:
  - type: System.Data.RowNotInTableException
    commentId: T:System.Data.RowNotInTableException
    description: "행 중 하나는 테이블에 속하지 않습니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "행 중 하나는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "관계에 속해 있지 않습니다는 <xref href=&quot;System.Data.DataRelationCollection&quot;> </xref> 의 <xref href=&quot;System.Data.DataSet&quot;> </xref> 개체입니다."
  - type: System.Data.InvalidConstraintException
    commentId: T:System.Data.InvalidConstraintException
    description: "관계의 자식 <xref href=&quot;System.Data.DataTable&quot;> </xref> 이 행이 속한 테이블이 아닙니다."
  platform:
  - net462
- uid: System.Data.DataRow.Table
  id: Table
  parent: System.Data.DataRow
  langs:
  - csharp
  name: Table
  nameWithType: DataRow.Table
  fullName: System.Data.DataRow.Table
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "가져옵니다는 <xref href=&quot;System.Data.DataTable&quot;> </xref> 이 행에는 스키마입니다."
  remarks: "A <xref:System.Data.DataRow>반드시 행의 테이블 컬렉션에 속하지 않습니다.</xref:System.Data.DataRow> 이 문제가 발생 하면은 <xref:System.Data.DataRow>생성 되었지만 <xref:System.Data.DataRowCollection>.</xref:System.Data.DataRowCollection> 에 추가 되지 않은</xref:System.Data.DataRow> 경우는 <xref:System.Data.DataRow.RowState%2A>속성에서 반환 `DataRowState.Detached`, 행이 모든 컬렉션에 없습니다.</xref:System.Data.DataRow.RowState%2A>"
  example:
  - "The following example uses the Table property to return a reference to the columns collection of the <xref:System.Data.DataTable>.  \n  \n [!code-cs[Classic WebData DataRow.Table Example#1](~/add/codesnippet/csharp/p-system.data.datarow.ta_1.cs)]\n [!code-vb[Classic WebData DataRow.Table Example#1](~/add/codesnippet/visualbasic/p-system.data.datarow.ta_1.vb)]"
  syntax:
    content: public System.Data.DataTable Table { get; }
    return:
      type: System.Data.DataTable
      description: "<xref href=&quot;System.Data.DataTable&quot;> </xref> 이 행이 속한를 합니다."
  overload: System.Data.DataRow.Table*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Data.RowNotInTableException
  parent: System.Data
  isExternal: false
  name: RowNotInTableException
  nameWithType: RowNotInTableException
  fullName: System.Data.RowNotInTableException
- uid: System.Data.InRowChangingEventException
  parent: System.Data
  isExternal: false
  name: InRowChangingEventException
  nameWithType: InRowChangingEventException
  fullName: System.Data.InRowChangingEventException
- uid: System.Data.DeletedRowInaccessibleException
  parent: System.Data
  isExternal: false
  name: DeletedRowInaccessibleException
  nameWithType: DeletedRowInaccessibleException
  fullName: System.Data.DeletedRowInaccessibleException
- uid: System.Data.ConstraintException
  parent: System.Data
  isExternal: false
  name: ConstraintException
  nameWithType: ConstraintException
  fullName: System.Data.ConstraintException
- uid: System.Data.ReadOnlyException
  parent: System.Data
  isExternal: false
  name: ReadOnlyException
  nameWithType: ReadOnlyException
  fullName: System.Data.ReadOnlyException
- uid: System.Data.NoNullAllowedException
  parent: System.Data
  isExternal: false
  name: NoNullAllowedException
  nameWithType: NoNullAllowedException
  fullName: System.Data.NoNullAllowedException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Data.VersionNotFoundException
  parent: System.Data
  isExternal: false
  name: VersionNotFoundException
  nameWithType: VersionNotFoundException
  fullName: System.Data.VersionNotFoundException
- uid: System.IndexOutOfRangeException
  isExternal: true
  name: System.IndexOutOfRangeException
- uid: System.Data.DataException
  parent: System.Data
  isExternal: false
  name: DataException
  nameWithType: DataException
  fullName: System.Data.DataException
- uid: System.Data.InvalidConstraintException
  parent: System.Data
  isExternal: false
  name: InvalidConstraintException
  nameWithType: InvalidConstraintException
  fullName: System.Data.InvalidConstraintException
- uid: System.InvalidCastException
  isExternal: true
  name: System.InvalidCastException
- uid: System.Data.DataRow.#ctor(System.Data.DataRowBuilder)
  parent: System.Data.DataRow
  isExternal: false
  name: DataRow(DataRowBuilder)
  nameWithType: DataRow.DataRow(DataRowBuilder)
  fullName: System.Data.DataRow.DataRow(DataRowBuilder)
- uid: System.Data.DataRowBuilder
  parent: System.Data
  isExternal: false
  name: DataRowBuilder
  nameWithType: DataRowBuilder
  fullName: System.Data.DataRowBuilder
- uid: System.Data.DataRow.AcceptChanges
  parent: System.Data.DataRow
  isExternal: false
  name: AcceptChanges()
  nameWithType: DataRow.AcceptChanges()
  fullName: System.Data.DataRow.AcceptChanges()
- uid: System.Data.DataRow.BeginEdit
  parent: System.Data.DataRow
  isExternal: false
  name: BeginEdit()
  nameWithType: DataRow.BeginEdit()
  fullName: System.Data.DataRow.BeginEdit()
- uid: System.Data.DataRow.CancelEdit
  parent: System.Data.DataRow
  isExternal: false
  name: CancelEdit()
  nameWithType: DataRow.CancelEdit()
  fullName: System.Data.DataRow.CancelEdit()
- uid: System.Data.DataRow.ClearErrors
  parent: System.Data.DataRow
  isExternal: false
  name: ClearErrors()
  nameWithType: DataRow.ClearErrors()
  fullName: System.Data.DataRow.ClearErrors()
- uid: System.Data.DataRow.Delete
  parent: System.Data.DataRow
  isExternal: false
  name: Delete()
  nameWithType: DataRow.Delete()
  fullName: System.Data.DataRow.Delete()
- uid: System.Data.DataRow.EndEdit
  parent: System.Data.DataRow
  isExternal: false
  name: EndEdit()
  nameWithType: DataRow.EndEdit()
  fullName: System.Data.DataRow.EndEdit()
- uid: System.Data.DataRow.GetChildRows(System.Data.DataRelation)
  parent: System.Data.DataRow
  isExternal: false
  name: GetChildRows(DataRelation)
  nameWithType: DataRow.GetChildRows(DataRelation)
  fullName: System.Data.DataRow.GetChildRows(DataRelation)
- uid: System.Data.DataRow[]
  parent: System.Data
  isExternal: false
  name: DataRow
  nameWithType: DataRow
  fullName: System.Data.DataRow[]
  spec.csharp:
  - uid: System.Data.DataRow
    name: DataRow
    nameWithType: DataRow
    fullName: DataRow[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.DataRelation
  parent: System.Data
  isExternal: false
  name: DataRelation
  nameWithType: DataRelation
  fullName: System.Data.DataRelation
- uid: System.Data.DataRow.GetChildRows(System.String)
  parent: System.Data.DataRow
  isExternal: false
  name: GetChildRows(String)
  nameWithType: DataRow.GetChildRows(String)
  fullName: System.Data.DataRow.GetChildRows(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.DataRow.GetChildRows(System.Data.DataRelation,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  isExternal: false
  name: GetChildRows(DataRelation,DataRowVersion)
  nameWithType: DataRow.GetChildRows(DataRelation,DataRowVersion)
  fullName: System.Data.DataRow.GetChildRows(DataRelation,DataRowVersion)
- uid: System.Data.DataRowVersion
  parent: System.Data
  isExternal: false
  name: DataRowVersion
  nameWithType: DataRowVersion
  fullName: System.Data.DataRowVersion
- uid: System.Data.DataRow.GetChildRows(System.String,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  isExternal: false
  name: GetChildRows(String,DataRowVersion)
  nameWithType: DataRow.GetChildRows(String,DataRowVersion)
  fullName: System.Data.DataRow.GetChildRows(String,DataRowVersion)
- uid: System.Data.DataRow.GetColumnError(System.Data.DataColumn)
  parent: System.Data.DataRow
  isExternal: false
  name: GetColumnError(DataColumn)
  nameWithType: DataRow.GetColumnError(DataColumn)
  fullName: System.Data.DataRow.GetColumnError(DataColumn)
- uid: System.Data.DataColumn
  parent: System.Data
  isExternal: false
  name: DataColumn
  nameWithType: DataColumn
  fullName: System.Data.DataColumn
- uid: System.Data.DataRow.GetColumnError(System.Int32)
  parent: System.Data.DataRow
  isExternal: false
  name: GetColumnError(Int32)
  nameWithType: DataRow.GetColumnError(Int32)
  fullName: System.Data.DataRow.GetColumnError(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.DataRow.GetColumnError(System.String)
  parent: System.Data.DataRow
  isExternal: false
  name: GetColumnError(String)
  nameWithType: DataRow.GetColumnError(String)
  fullName: System.Data.DataRow.GetColumnError(String)
- uid: System.Data.DataRow.GetColumnsInError
  parent: System.Data.DataRow
  isExternal: false
  name: GetColumnsInError()
  nameWithType: DataRow.GetColumnsInError()
  fullName: System.Data.DataRow.GetColumnsInError()
- uid: System.Data.DataColumn[]
  parent: System.Data
  isExternal: false
  name: DataColumn
  nameWithType: DataColumn
  fullName: System.Data.DataColumn[]
  spec.csharp:
  - uid: System.Data.DataColumn
    name: DataColumn
    nameWithType: DataColumn
    fullName: DataColumn[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.DataRow.GetParentRow(System.Data.DataRelation)
  parent: System.Data.DataRow
  isExternal: false
  name: GetParentRow(DataRelation)
  nameWithType: DataRow.GetParentRow(DataRelation)
  fullName: System.Data.DataRow.GetParentRow(DataRelation)
- uid: System.Data.DataRow
  parent: System.Data
  isExternal: false
  name: DataRow
  nameWithType: DataRow
  fullName: System.Data.DataRow
- uid: System.Data.DataRow.GetParentRow(System.String)
  parent: System.Data.DataRow
  isExternal: false
  name: GetParentRow(String)
  nameWithType: DataRow.GetParentRow(String)
  fullName: System.Data.DataRow.GetParentRow(String)
- uid: System.Data.DataRow.GetParentRow(System.Data.DataRelation,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  isExternal: false
  name: GetParentRow(DataRelation,DataRowVersion)
  nameWithType: DataRow.GetParentRow(DataRelation,DataRowVersion)
  fullName: System.Data.DataRow.GetParentRow(DataRelation,DataRowVersion)
- uid: System.Data.DataRow.GetParentRow(System.String,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  isExternal: false
  name: GetParentRow(String,DataRowVersion)
  nameWithType: DataRow.GetParentRow(String,DataRowVersion)
  fullName: System.Data.DataRow.GetParentRow(String,DataRowVersion)
- uid: System.Data.DataRow.GetParentRows(System.Data.DataRelation)
  parent: System.Data.DataRow
  isExternal: false
  name: GetParentRows(DataRelation)
  nameWithType: DataRow.GetParentRows(DataRelation)
  fullName: System.Data.DataRow.GetParentRows(DataRelation)
- uid: System.Data.DataRow.GetParentRows(System.String)
  parent: System.Data.DataRow
  isExternal: false
  name: GetParentRows(String)
  nameWithType: DataRow.GetParentRows(String)
  fullName: System.Data.DataRow.GetParentRows(String)
- uid: System.Data.DataRow.GetParentRows(System.Data.DataRelation,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  isExternal: false
  name: GetParentRows(DataRelation,DataRowVersion)
  nameWithType: DataRow.GetParentRows(DataRelation,DataRowVersion)
  fullName: System.Data.DataRow.GetParentRows(DataRelation,DataRowVersion)
- uid: System.Data.DataRow.GetParentRows(System.String,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  isExternal: false
  name: GetParentRows(String,DataRowVersion)
  nameWithType: DataRow.GetParentRows(String,DataRowVersion)
  fullName: System.Data.DataRow.GetParentRows(String,DataRowVersion)
- uid: System.Data.DataRow.HasErrors
  parent: System.Data.DataRow
  isExternal: false
  name: HasErrors
  nameWithType: DataRow.HasErrors
  fullName: System.Data.DataRow.HasErrors
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.DataRow.HasVersion(System.Data.DataRowVersion)
  parent: System.Data.DataRow
  isExternal: false
  name: HasVersion(DataRowVersion)
  nameWithType: DataRow.HasVersion(DataRowVersion)
  fullName: System.Data.DataRow.HasVersion(DataRowVersion)
- uid: System.Data.DataRow.IsNull(System.Data.DataColumn)
  parent: System.Data.DataRow
  isExternal: false
  name: IsNull(DataColumn)
  nameWithType: DataRow.IsNull(DataColumn)
  fullName: System.Data.DataRow.IsNull(DataColumn)
- uid: System.Data.DataRow.IsNull(System.Int32)
  parent: System.Data.DataRow
  isExternal: false
  name: IsNull(Int32)
  nameWithType: DataRow.IsNull(Int32)
  fullName: System.Data.DataRow.IsNull(Int32)
- uid: System.Data.DataRow.IsNull(System.String)
  parent: System.Data.DataRow
  isExternal: false
  name: IsNull(String)
  nameWithType: DataRow.IsNull(String)
  fullName: System.Data.DataRow.IsNull(String)
- uid: System.Data.DataRow.IsNull(System.Data.DataColumn,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  isExternal: false
  name: IsNull(DataColumn,DataRowVersion)
  nameWithType: DataRow.IsNull(DataColumn,DataRowVersion)
  fullName: System.Data.DataRow.IsNull(DataColumn,DataRowVersion)
- uid: System.Data.DataRow.Item(System.Data.DataColumn)
  parent: System.Data.DataRow
  isExternal: false
  name: Item(DataColumn)
  nameWithType: DataRow.Item(DataColumn)
  fullName: System.Data.DataRow.Item(DataColumn)
- uid: System.Data.DataRow.Item(System.Int32)
  parent: System.Data.DataRow
  isExternal: false
  name: Item(Int32)
  nameWithType: DataRow.Item(Int32)
  fullName: System.Data.DataRow.Item(Int32)
- uid: System.Data.DataRow.Item(System.String)
  parent: System.Data.DataRow
  isExternal: false
  name: Item(String)
  nameWithType: DataRow.Item(String)
  fullName: System.Data.DataRow.Item(String)
- uid: System.Data.DataRow.Item(System.Data.DataColumn,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  isExternal: false
  name: Item(DataColumn,DataRowVersion)
  nameWithType: DataRow.Item(DataColumn,DataRowVersion)
  fullName: System.Data.DataRow.Item(DataColumn,DataRowVersion)
- uid: System.Data.DataRow.Item(System.Int32,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  isExternal: false
  name: Item(Int32,DataRowVersion)
  nameWithType: DataRow.Item(Int32,DataRowVersion)
  fullName: System.Data.DataRow.Item(Int32,DataRowVersion)
- uid: System.Data.DataRow.Item(System.String,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  isExternal: false
  name: Item(String,DataRowVersion)
  nameWithType: DataRow.Item(String,DataRowVersion)
  fullName: System.Data.DataRow.Item(String,DataRowVersion)
- uid: System.Data.DataRow.ItemArray
  parent: System.Data.DataRow
  isExternal: false
  name: ItemArray
  nameWithType: DataRow.ItemArray
  fullName: System.Data.DataRow.ItemArray
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.DataRow.RejectChanges
  parent: System.Data.DataRow
  isExternal: false
  name: RejectChanges()
  nameWithType: DataRow.RejectChanges()
  fullName: System.Data.DataRow.RejectChanges()
- uid: System.Data.DataRow.RowError
  parent: System.Data.DataRow
  isExternal: false
  name: RowError
  nameWithType: DataRow.RowError
  fullName: System.Data.DataRow.RowError
- uid: System.Data.DataRow.RowState
  parent: System.Data.DataRow
  isExternal: false
  name: RowState
  nameWithType: DataRow.RowState
  fullName: System.Data.DataRow.RowState
- uid: System.Data.DataRowState
  parent: System.Data
  isExternal: false
  name: DataRowState
  nameWithType: DataRowState
  fullName: System.Data.DataRowState
- uid: System.Data.DataRow.SetAdded
  parent: System.Data.DataRow
  isExternal: false
  name: SetAdded()
  nameWithType: DataRow.SetAdded()
  fullName: System.Data.DataRow.SetAdded()
- uid: System.Data.DataRow.SetColumnError(System.Data.DataColumn,System.String)
  parent: System.Data.DataRow
  isExternal: false
  name: SetColumnError(DataColumn,String)
  nameWithType: DataRow.SetColumnError(DataColumn,String)
  fullName: System.Data.DataRow.SetColumnError(DataColumn,String)
- uid: System.Data.DataRow.SetColumnError(System.Int32,System.String)
  parent: System.Data.DataRow
  isExternal: false
  name: SetColumnError(Int32,String)
  nameWithType: DataRow.SetColumnError(Int32,String)
  fullName: System.Data.DataRow.SetColumnError(Int32,String)
- uid: System.Data.DataRow.SetColumnError(System.String,System.String)
  parent: System.Data.DataRow
  isExternal: false
  name: SetColumnError(String,String)
  nameWithType: DataRow.SetColumnError(String,String)
  fullName: System.Data.DataRow.SetColumnError(String,String)
- uid: System.Data.DataRow.SetModified
  parent: System.Data.DataRow
  isExternal: false
  name: SetModified()
  nameWithType: DataRow.SetModified()
  fullName: System.Data.DataRow.SetModified()
- uid: System.Data.DataRow.SetNull(System.Data.DataColumn)
  parent: System.Data.DataRow
  isExternal: false
  name: SetNull(DataColumn)
  nameWithType: DataRow.SetNull(DataColumn)
  fullName: System.Data.DataRow.SetNull(DataColumn)
- uid: System.Data.DataRow.SetParentRow(System.Data.DataRow)
  parent: System.Data.DataRow
  isExternal: false
  name: SetParentRow(DataRow)
  nameWithType: DataRow.SetParentRow(DataRow)
  fullName: System.Data.DataRow.SetParentRow(DataRow)
- uid: System.Data.DataRow.SetParentRow(System.Data.DataRow,System.Data.DataRelation)
  parent: System.Data.DataRow
  isExternal: false
  name: SetParentRow(DataRow,DataRelation)
  nameWithType: DataRow.SetParentRow(DataRow,DataRelation)
  fullName: System.Data.DataRow.SetParentRow(DataRow,DataRelation)
- uid: System.Data.DataRow.Table
  parent: System.Data.DataRow
  isExternal: false
  name: Table
  nameWithType: DataRow.Table
  fullName: System.Data.DataRow.Table
- uid: System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Data.DataRow.#ctor*
  parent: System.Data.DataRow
  isExternal: false
  name: DataRow
  nameWithType: DataRow.DataRow
- uid: System.Data.DataRow.AcceptChanges*
  parent: System.Data.DataRow
  isExternal: false
  name: AcceptChanges
  nameWithType: DataRow.AcceptChanges
- uid: System.Data.DataRow.BeginEdit*
  parent: System.Data.DataRow
  isExternal: false
  name: BeginEdit
  nameWithType: DataRow.BeginEdit
- uid: System.Data.DataRow.CancelEdit*
  parent: System.Data.DataRow
  isExternal: false
  name: CancelEdit
  nameWithType: DataRow.CancelEdit
- uid: System.Data.DataRow.ClearErrors*
  parent: System.Data.DataRow
  isExternal: false
  name: ClearErrors
  nameWithType: DataRow.ClearErrors
- uid: System.Data.DataRow.Delete*
  parent: System.Data.DataRow
  isExternal: false
  name: Delete
  nameWithType: DataRow.Delete
- uid: System.Data.DataRow.EndEdit*
  parent: System.Data.DataRow
  isExternal: false
  name: EndEdit
  nameWithType: DataRow.EndEdit
- uid: System.Data.DataRow.GetChildRows*
  parent: System.Data.DataRow
  isExternal: false
  name: GetChildRows
  nameWithType: DataRow.GetChildRows
- uid: System.Data.DataRow.GetColumnError*
  parent: System.Data.DataRow
  isExternal: false
  name: GetColumnError
  nameWithType: DataRow.GetColumnError
- uid: System.Data.DataRow.GetColumnsInError*
  parent: System.Data.DataRow
  isExternal: false
  name: GetColumnsInError
  nameWithType: DataRow.GetColumnsInError
- uid: System.Data.DataRow.GetParentRow*
  parent: System.Data.DataRow
  isExternal: false
  name: GetParentRow
  nameWithType: DataRow.GetParentRow
- uid: System.Data.DataRow.GetParentRows*
  parent: System.Data.DataRow
  isExternal: false
  name: GetParentRows
  nameWithType: DataRow.GetParentRows
- uid: System.Data.DataRow.HasErrors*
  parent: System.Data.DataRow
  isExternal: false
  name: HasErrors
  nameWithType: DataRow.HasErrors
- uid: System.Data.DataRow.HasVersion*
  parent: System.Data.DataRow
  isExternal: false
  name: HasVersion
  nameWithType: DataRow.HasVersion
- uid: System.Data.DataRow.IsNull*
  parent: System.Data.DataRow
  isExternal: false
  name: IsNull
  nameWithType: DataRow.IsNull
- uid: System.Data.DataRow.Item*
  parent: System.Data.DataRow
  isExternal: false
  name: Item
  nameWithType: DataRow.Item
- uid: System.Data.DataRow.ItemArray*
  parent: System.Data.DataRow
  isExternal: false
  name: ItemArray
  nameWithType: DataRow.ItemArray
- uid: System.Data.DataRow.RejectChanges*
  parent: System.Data.DataRow
  isExternal: false
  name: RejectChanges
  nameWithType: DataRow.RejectChanges
- uid: System.Data.DataRow.RowError*
  parent: System.Data.DataRow
  isExternal: false
  name: RowError
  nameWithType: DataRow.RowError
- uid: System.Data.DataRow.RowState*
  parent: System.Data.DataRow
  isExternal: false
  name: RowState
  nameWithType: DataRow.RowState
- uid: System.Data.DataRow.SetAdded*
  parent: System.Data.DataRow
  isExternal: false
  name: SetAdded
  nameWithType: DataRow.SetAdded
- uid: System.Data.DataRow.SetColumnError*
  parent: System.Data.DataRow
  isExternal: false
  name: SetColumnError
  nameWithType: DataRow.SetColumnError
- uid: System.Data.DataRow.SetModified*
  parent: System.Data.DataRow
  isExternal: false
  name: SetModified
  nameWithType: DataRow.SetModified
- uid: System.Data.DataRow.SetNull*
  parent: System.Data.DataRow
  isExternal: false
  name: SetNull
  nameWithType: DataRow.SetNull
- uid: System.Data.DataRow.SetParentRow*
  parent: System.Data.DataRow
  isExternal: false
  name: SetParentRow
  nameWithType: DataRow.SetParentRow
- uid: System.Data.DataRow.Table*
  parent: System.Data.DataRow
  isExternal: false
  name: Table
  nameWithType: DataRow.Table
