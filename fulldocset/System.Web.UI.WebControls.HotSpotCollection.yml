### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.HotSpotCollection
  id: HotSpotCollection
  children:
  - System.Web.UI.WebControls.HotSpotCollection.#ctor
  - System.Web.UI.WebControls.HotSpotCollection.Add(System.Web.UI.WebControls.HotSpot)
  - System.Web.UI.WebControls.HotSpotCollection.CreateKnownType(System.Int32)
  - System.Web.UI.WebControls.HotSpotCollection.GetKnownTypes
  - System.Web.UI.WebControls.HotSpotCollection.Insert(System.Int32,System.Web.UI.WebControls.HotSpot)
  - System.Web.UI.WebControls.HotSpotCollection.Item(System.Int32)
  - System.Web.UI.WebControls.HotSpotCollection.OnValidate(System.Object)
  - System.Web.UI.WebControls.HotSpotCollection.Remove(System.Web.UI.WebControls.HotSpot)
  - System.Web.UI.WebControls.HotSpotCollection.RemoveAt(System.Int32)
  - System.Web.UI.WebControls.HotSpotCollection.SetDirtyObject(System.Object)
  langs:
  - csharp
  name: HotSpotCollection
  nameWithType: HotSpotCollection
  fullName: System.Web.UI.WebControls.HotSpotCollection
  type: Class
  summary: "컬렉션을 나타냅니다 <xref href=&quot;System.Web.UI.WebControls.HotSpot&quot;> </xref> 개체는 <xref href=&quot;System.Web.UI.WebControls.ImageMap&quot;> </xref> 제어 합니다. 이 클래스는 상속 될 수 없습니다."
  remarks: "HotSpotCollection 클래스 수 있도록 하는 컬렉션을 나타냅니다는 <xref:System.Web.UI.WebControls.ImageMap>컨트롤의 목록을 유지 관리 하는 <xref:System.Web.UI.WebControls.HotSpot>포함 된 개체입니다.</xref:System.Web.UI.WebControls.HotSpot> </xref:System.Web.UI.WebControls.ImageMap>       사용 된 <xref:System.Web.UI.WebControls.HotSpotCollection.Add%2A>메서드를 지정 된 추가 <xref:System.Web.UI.WebControls.HotSpot>개체 컬렉션의 서 수 인덱스 배열 끝에.</xref:System.Web.UI.WebControls.HotSpot> </xref:System.Web.UI.WebControls.HotSpotCollection.Add%2A> 사용 하 여는 <xref:System.Web.UI.WebControls.HotSpotCollection.Insert%2A>를 추가 하려면 메서드는 <xref:System.Web.UI.WebControls.HotSpot>개체를 컬렉션에 지정된 된 인덱스 위치입니다.</xref:System.Web.UI.WebControls.HotSpot> </xref:System.Web.UI.WebControls.HotSpotCollection.Insert%2A> 사용 하 여는 <xref:System.Web.UI.WebControls.HotSpotCollection.Item%2A>인덱서를 직접 액세스 한 <xref:System.Web.UI.WebControls.HotSpot>단순 배열 표기법을 사용 하 여 지정된 된 인덱스에 컬렉션에 있는 개체입니다.</xref:System.Web.UI.WebControls.HotSpot> </xref:System.Web.UI.WebControls.HotSpotCollection.Item%2A>       사용 하 여는 <xref:System.Web.UI.WebControls.HotSpotCollection.Remove%2A>제거 하는 메서드는 <xref:System.Web.UI.WebControls.HotSpot>개체 컬렉션의 끝에서.</xref:System.Web.UI.WebControls.HotSpot> </xref:System.Web.UI.WebControls.HotSpotCollection.Remove%2A> 사용 하 여는 <xref:System.Web.UI.WebControls.HotSpotCollection.RemoveAt%2A>제거 하는 메서드는 <xref:System.Web.UI.WebControls.HotSpot>개체에서 지정된 된 인덱스 위치입니다.</xref:System.Web.UI.WebControls.HotSpot> </xref:System.Web.UI.WebControls.HotSpotCollection.RemoveAt%2A>"
  example:
  - "The following code example demonstrates how to programmatically create an <xref:System.Web.UI.WebControls.ImageMap> control and add two <xref:System.Web.UI.WebControls.CircleHotSpot> objects to it. The <xref:System.Web.UI.WebControls.ImageMap.HotSpots%2A> property is used to access the HotSpotCollection collection for the <xref:System.Web.UI.WebControls.ImageMap> control and add the <xref:System.Web.UI.WebControls.CircleHotSpot> objects to it. For this example to work correctly, you must supply your own image for the <xref:System.Web.UI.WebControls.Image.ImageUrl%2A> property and update the path to the image appropriately so that the application can locate it.  \n  \n [!code-vb[ImageMap.Cstr#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_294_1.aspx)]\n [!code-cs[ImageMap.Cstr#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_294_1.aspx)]"
  syntax:
    content: >-
      [System.ComponentModel.Editor("System.Web.UI.Design.WebControls.HotSpotCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]

      public sealed class HotSpotCollection : System.Web.UI.StateManagedCollection
  inheritance:
  - System.Object
  - System.Web.UI.StateManagedCollection
  implements: []
  inheritedMembers:
  - System.Web.UI.StateManagedCollection.Clear
  - System.Web.UI.StateManagedCollection.CopyTo(System.Array,System.Int32)
  - System.Web.UI.StateManagedCollection.Count
  - System.Web.UI.StateManagedCollection.GetEnumerator
  - System.Web.UI.StateManagedCollection.OnClear
  - System.Web.UI.StateManagedCollection.OnClearComplete
  - System.Web.UI.StateManagedCollection.OnInsert(System.Int32,System.Object)
  - System.Web.UI.StateManagedCollection.OnInsertComplete(System.Int32,System.Object)
  - System.Web.UI.StateManagedCollection.OnRemove(System.Int32,System.Object)
  - System.Web.UI.StateManagedCollection.OnRemoveComplete(System.Int32,System.Object)
  - System.Web.UI.StateManagedCollection.SetDirty
  - System.Web.UI.StateManagedCollection.System#Collections#ICollection#Count
  - System.Web.UI.StateManagedCollection.System#Collections#ICollection#IsSynchronized
  - System.Web.UI.StateManagedCollection.System#Collections#ICollection#SyncRoot
  - System.Web.UI.StateManagedCollection.System#Collections#IEnumerable#GetEnumerator
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Add(System.Object)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Clear
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Contains(System.Object)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#IndexOf(System.Object)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#IsFixedSize
  - System.Web.UI.StateManagedCollection.System#Collections#IList#IsReadOnly
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Item(System.Int32)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Remove(System.Object)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#RemoveAt(System.Int32)
  - System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#TrackViewState
  platform:
  - net462
- uid: System.Web.UI.WebControls.HotSpotCollection.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.HotSpotCollection
  langs:
  - csharp
  name: HotSpotCollection()
  nameWithType: HotSpotCollection.HotSpotCollection()
  fullName: System.Web.UI.WebControls.HotSpotCollection.HotSpotCollection()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.UI.WebControls.HotSpotCollection&quot;> </xref> 클래스입니다."
  remarks: "파생된 클래스에서 재정의 되 면이 생성자는 <xref:System.Web.UI.WebControls.HotSpotCollection>클래스</xref:System.Web.UI.WebControls.HotSpotCollection> 의 새 인스턴스를 초기화 합니다."
  example:
  - "The following code example demonstrates how to use the <xref:System.Web.UI.WebControls.CircleHotSpot.%23ctor%2A> constructor to programmatically create two <xref:System.Web.UI.WebControls.CircleHotSpot> objects and add them to an <xref:System.Web.UI.WebControls.ImageMap> control. For this example to work correctly, you must supply your own image for the <xref:System.Web.UI.WebControls.Image.ImageUrl%2A> property and update the path to the image appropriately so that the application can locate it.  \n  \n [!code-vb[ImageMap.Cstr#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_107_1.aspx)]\n [!code-cs[ImageMap.Cstr#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_107_1.aspx)]"
  syntax:
    content: public HotSpotCollection ();
    parameters: []
  overload: System.Web.UI.WebControls.HotSpotCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.HotSpotCollection.Add(System.Web.UI.WebControls.HotSpot)
  id: Add(System.Web.UI.WebControls.HotSpot)
  parent: System.Web.UI.WebControls.HotSpotCollection
  langs:
  - csharp
  name: Add(HotSpot)
  nameWithType: HotSpotCollection.Add(HotSpot)
  fullName: System.Web.UI.WebControls.HotSpotCollection.Add(HotSpot)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "지정 된 추가 <xref href=&quot;System.Web.UI.WebControls.HotSpot&quot;> </xref> 개체의 끝에는 <xref href=&quot;System.Web.UI.WebControls.HotSpotCollection&quot;> </xref> 컬렉션입니다."
  remarks: "Add 메서드를 지정 된 추가 <xref:System.Web.UI.WebControls.HotSpot>개체 컬렉션의 끝입니다.</xref:System.Web.UI.WebControls.HotSpot> 추가 하는 <xref:System.Web.UI.WebControls.HotSpot>개체를 사용 하 여 특정 인덱스 위치의 컬렉션에는 <xref:System.Web.UI.WebControls.HotSpotCollection.Insert%2A>메서드.</xref:System.Web.UI.WebControls.HotSpotCollection.Insert%2A> </xref:System.Web.UI.WebControls.HotSpot>"
  example:
  - "The following code example demonstrates how to programmatically create an <xref:System.Web.UI.WebControls.ImageMap> control and add two <xref:System.Web.UI.WebControls.CircleHotSpot> objects to it. The <xref:System.Web.UI.WebControls.ImageMap.HotSpots%2A> property is used to access the <xref:System.Web.UI.WebControls.HotSpotCollection> collection for the <xref:System.Web.UI.WebControls.ImageMap> control and add the <xref:System.Web.UI.WebControls.CircleHotSpot> objects to it. For this example to work correctly, you must supply your own image for the <xref:System.Web.UI.WebControls.Image.ImageUrl%2A> property and update the path to the image appropriately so that the application can locate it.  \n  \n [!code-vb[ImageMap.Cstr#1](~/add/codesnippet/visualbasic/52b9e3b0-728a-4dc5-99eb-_1.aspx)]\n [!code-cs[ImageMap.Cstr#1](~/add/codesnippet/csharp/52b9e3b0-728a-4dc5-99eb-_1.aspx)]"
  syntax:
    content: public int Add (System.Web.UI.WebControls.HotSpot spot);
    parameters:
    - id: spot
      type: System.Web.UI.WebControls.HotSpot
      description: "<xref href=&quot;System.Web.UI.WebControls.HotSpot&quot;> </xref> 컬렉션에 추가할 개체입니다."
    return:
      type: System.Int32
      description: "컬렉션에 개체가 추가 되었으면 인덱스입니다."
  overload: System.Web.UI.WebControls.HotSpotCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.HotSpotCollection.CreateKnownType(System.Int32)
  id: CreateKnownType(System.Int32)
  parent: System.Web.UI.WebControls.HotSpotCollection
  langs:
  - csharp
  name: CreateKnownType(Int32)
  nameWithType: HotSpotCollection.CreateKnownType(Int32)
  fullName: System.Web.UI.WebControls.HotSpotCollection.CreateKnownType(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  syntax:
    content: protected override object CreateKnownType (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "추가할 수 있습니다."
    return:
      type: System.Object
      description: "추가할 수 있습니다."
  overload: System.Web.UI.WebControls.HotSpotCollection.CreateKnownType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.HotSpotCollection.GetKnownTypes
  id: GetKnownTypes
  parent: System.Web.UI.WebControls.HotSpotCollection
  langs:
  - csharp
  name: GetKnownTypes()
  nameWithType: HotSpotCollection.GetKnownTypes()
  fullName: System.Web.UI.WebControls.HotSpotCollection.GetKnownTypes()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  syntax:
    content: protected override Type[] GetKnownTypes ();
    parameters: []
    return:
      type: System.Type[]
      description: "추가할 수 있습니다."
  overload: System.Web.UI.WebControls.HotSpotCollection.GetKnownTypes*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.HotSpotCollection.Insert(System.Int32,System.Web.UI.WebControls.HotSpot)
  id: Insert(System.Int32,System.Web.UI.WebControls.HotSpot)
  parent: System.Web.UI.WebControls.HotSpotCollection
  langs:
  - csharp
  name: Insert(Int32,HotSpot)
  nameWithType: HotSpotCollection.Insert(Int32,HotSpot)
  fullName: System.Web.UI.WebControls.HotSpotCollection.Insert(Int32,HotSpot)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "지정 된 삽입 <xref href=&quot;System.Web.UI.WebControls.HotSpot&quot;> </xref> 개체는 <xref href=&quot;System.Web.UI.WebControls.HotSpotCollection&quot;> </xref> 컬렉션 내의 지정된 된 인덱스 위치에 있습니다."
  remarks: "Insert 메서드를 지정 된 추가 <xref:System.Web.UI.WebControls.HotSpot>개체 컬렉션의 지정한 인덱스 위치에.</xref:System.Web.UI.WebControls.HotSpot> 추가 하는 <xref:System.Web.UI.WebControls.HotSpot>개체를 사용 하 여 컬렉션의 끝에서 <xref:System.Web.UI.WebControls.HotSpotCollection.Add%2A>메서드.</xref:System.Web.UI.WebControls.HotSpotCollection.Add%2A> </xref:System.Web.UI.WebControls.HotSpot>"
  example:
  - "The following code example demonstrates how to programmatically add two <xref:System.Web.UI.WebControls.CircleHotSpot> objects to an <xref:System.Web.UI.WebControls.ImageMap> control. The <xref:System.Web.UI.WebControls.ImageMap.HotSpots%2A> property is used to access the <xref:System.Web.UI.WebControls.HotSpotCollection> collection. The <xref:System.Web.UI.WebControls.HotSpotCollection.Add%2A> method adds `Circle2` to the collection. The Insert method adds `Circle1` to the collection at the first element, in front of `Circle2`. For this example to work correctly, you must supply your own image for the <xref:System.Web.UI.WebControls.Image.ImageUrl%2A> property and update the path to the image appropriately so that the application can locate it.  \n  \n [!code-vb[HotSpotCollection.Insert#1](~/add/codesnippet/visualbasic/ab7caf40-b2de-4bb2-b23a-_1.aspx)]\n [!code-cs[HotSpotCollection.Insert#1](~/add/codesnippet/csharp/ab7caf40-b2de-4bb2-b23a-_1.aspx)]"
  syntax:
    content: public void Insert (int index, System.Web.UI.WebControls.HotSpot spot);
    parameters:
    - id: index
      type: System.Int32
      description: "추가 하는 배열 인덱스는 <xref href=&quot;System.Web.UI.WebControls.HotSpot&quot;> </xref> 개체입니다."
    - id: spot
      type: System.Web.UI.WebControls.HotSpot
      description: "<xref href=&quot;System.Web.UI.WebControls.HotSpot&quot;> </xref> 컬렉션에 추가할 개체입니다."
  overload: System.Web.UI.WebControls.HotSpotCollection.Insert*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.HotSpotCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Web.UI.WebControls.HotSpotCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: HotSpotCollection.Item(Int32)
  fullName: System.Web.UI.WebControls.HotSpotCollection.Item(Int32)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "에 대 한 참조는 <xref href=&quot;System.Web.UI.WebControls.HotSpot&quot;> </xref> 개체에서 지정 된 인덱스는 <xref href=&quot;System.Web.UI.WebControls.HotSpotCollection&quot;> </xref> 컬렉션입니다."
  remarks: "이 인덱서를 사용 하 여 액세스 하는 <xref:System.Web.UI.WebControls.HotSpot>배열 표기법을 사용 하 여 지정된 된 인덱스에 컬렉션에 있는 개체입니다.</xref:System.Web.UI.WebControls.HotSpot> 인덱서를 사용 하면 수정 하거나 바꿀 수 있습니다는 <xref:System.Web.UI.WebControls.HotSpot>개체 컬렉션에서 직접.</xref:System.Web.UI.WebControls.HotSpot>"
  example:
  - "The following code example demonstrates how to use the Item property to directly access the <xref:System.Web.UI.WebControls.HotSpot> objects contained in the <xref:System.Web.UI.WebControls.ImageMap> control's <xref:System.Web.UI.WebControls.HotSpotCollection> collection and display the value of each object's <xref:System.Web.UI.WebControls.HotSpot.AlternateText%2A> property in a label on the page. For this example to work correctly, you must supply your own image for the <xref:System.Web.UI.WebControls.Image.ImageUrl%2A> property and update the path to the image appropriately so that the application can locate it.  \n  \n [!code-vb[HotSpotCollection.Item#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_688_1.aspx)]\n [!code-cs[HotSpotCollection.Item#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_688_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.HotSpot this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "위치를 지정 하는 서 수 인덱스 값은 <xref href=&quot;System.Web.UI.WebControls.HotSpot&quot;> </xref> 컬렉션의 개체입니다."
    return:
      type: System.Web.UI.WebControls.HotSpot
      description: "<xref href=&quot;System.Web.UI.WebControls.HotSpot&quot;> </xref> 개체에서 지정 된 인덱스는 <xref href=&quot;System.Web.UI.WebControls.HotSpotCollection&quot;> </xref> 컬렉션입니다."
  overload: System.Web.UI.WebControls.HotSpotCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.HotSpotCollection.OnValidate(System.Object)
  id: OnValidate(System.Object)
  parent: System.Web.UI.WebControls.HotSpotCollection
  langs:
  - csharp
  name: OnValidate(Object)
  nameWithType: HotSpotCollection.OnValidate(Object)
  fullName: System.Web.UI.WebControls.HotSpotCollection.OnValidate(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  syntax:
    content: protected override void OnValidate (object o);
    parameters:
    - id: o
      type: System.Object
      description: "추가할 수 있습니다."
  overload: System.Web.UI.WebControls.HotSpotCollection.OnValidate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.HotSpotCollection.Remove(System.Web.UI.WebControls.HotSpot)
  id: Remove(System.Web.UI.WebControls.HotSpot)
  parent: System.Web.UI.WebControls.HotSpotCollection
  langs:
  - csharp
  name: Remove(HotSpot)
  nameWithType: HotSpotCollection.Remove(HotSpot)
  fullName: System.Web.UI.WebControls.HotSpotCollection.Remove(HotSpot)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "지정 된 제거 <xref href=&quot;System.Web.UI.WebControls.HotSpot&quot;> </xref> 에서 개체는 <xref href=&quot;System.Web.UI.WebControls.HotSpotCollection&quot;> </xref> 컬렉션입니다."
  remarks: "Remove 메서드를 지정 된 제거 <xref:System.Web.UI.WebControls.HotSpot>개체를 컬렉션에서.</xref:System.Web.UI.WebControls.HotSpot> 제거 하는 <xref:System.Web.UI.WebControls.HotSpot>지정 된 인덱스 위치를 사용 하 여 컬렉션에서 개체는 <xref:System.Web.UI.WebControls.HotSpotCollection.RemoveAt%2A>메서드.</xref:System.Web.UI.WebControls.HotSpotCollection.RemoveAt%2A> </xref:System.Web.UI.WebControls.HotSpot>       새로 추가 하려면 <xref:System.Web.UI.WebControls.HotSpot>개체를 컬렉션에 사용 된 <xref:System.Web.UI.WebControls.HotSpotCollection.Add%2A>또는 <xref:System.Web.UI.WebControls.HotSpotCollection.Insert%2A>메서드.</xref:System.Web.UI.WebControls.HotSpotCollection.Insert%2A> </xref:System.Web.UI.WebControls.HotSpotCollection.Add%2A> </xref:System.Web.UI.WebControls.HotSpot>"
  example:
  - "The following code example demonstrates how to programmatically add two <xref:System.Web.UI.WebControls.CircleHotSpot> objects to an <xref:System.Web.UI.WebControls.ImageMap> control. After the two <xref:System.Web.UI.WebControls.CircleHotSpot> objects are added to the <xref:System.Web.UI.WebControls.HotSpotCollection> collection, the Remove method is used to delete `Circle1` from the collection. For this example to work correctly, you must supply your own image for the <xref:System.Web.UI.WebControls.Image.ImageUrl%2A> property and update the path to the image appropriately so that the application can locate it.  \n  \n [!code-cs[HotSpotCollection.Remove#1](~/add/codesnippet/csharp/f9b25fff-b2da-4484-9775-_1.aspx)]\n [!code-vb[HotSpotCollection.Remove#1](~/add/codesnippet/visualbasic/f9b25fff-b2da-4484-9775-_1.aspx)]"
  syntax:
    content: public void Remove (System.Web.UI.WebControls.HotSpot spot);
    parameters:
    - id: spot
      type: System.Web.UI.WebControls.HotSpot
      description: "<xref href=&quot;System.Web.UI.WebControls.HotSpot&quot;> </xref> 컬렉션에서 제거할 개체입니다."
  overload: System.Web.UI.WebControls.HotSpotCollection.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.HotSpotCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Web.UI.WebControls.HotSpotCollection
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: HotSpotCollection.RemoveAt(Int32)
  fullName: System.Web.UI.WebControls.HotSpotCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "제거는 <xref href=&quot;System.Web.UI.WebControls.HotSpot&quot;> </xref> 개체 컬렉션에서 지정한 인덱스 위치입니다."
  remarks: "RemoveAt 메서드를 제거는 <xref:System.Web.UI.WebControls.HotSpot>개체 컬렉션에서 지정한 인덱스 위치입니다.</xref:System.Web.UI.WebControls.HotSpot> 특정을 제거 하려면 <xref:System.Web.UI.WebControls.HotSpot>이름순으로 사용 하 여 컬렉션에서 개체는 <xref:System.Web.UI.WebControls.HotSpotCollection.Remove%2A>메서드.</xref:System.Web.UI.WebControls.HotSpotCollection.Remove%2A> </xref:System.Web.UI.WebControls.HotSpot>       새로 추가 하려면 <xref:System.Web.UI.WebControls.HotSpot>개체를 컬렉션에 사용 된 <xref:System.Web.UI.WebControls.HotSpotCollection.Add%2A>또는 <xref:System.Web.UI.WebControls.HotSpotCollection.Insert%2A>메서드.</xref:System.Web.UI.WebControls.HotSpotCollection.Insert%2A> </xref:System.Web.UI.WebControls.HotSpotCollection.Add%2A> </xref:System.Web.UI.WebControls.HotSpot>"
  example:
  - "The following code example demonstrates how to programmatically add two <xref:System.Web.UI.WebControls.CircleHotSpot> objects to an <xref:System.Web.UI.WebControls.ImageMap> control. After the two <xref:System.Web.UI.WebControls.CircleHotSpot> objects are added to the <xref:System.Web.UI.WebControls.HotSpotCollection> collection, the RemoveAt method is used to delete the object located at the first index in the collection. For this example to work correctly, you must supply your own image for the <xref:System.Web.UI.WebControls.Image.ImageUrl%2A> property and update the path to the image appropriately so that the application can locate it.  \n  \n [!code-vb[HotSpotCollection.RemoveAt#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_136_1.aspx)]\n [!code-cs[HotSpotCollection.RemoveAt#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_136_1.aspx)]"
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "제거 하는 배열 인덱스는 <xref href=&quot;System.Web.UI.WebControls.HotSpot&quot;> </xref> 개체입니다."
  overload: System.Web.UI.WebControls.HotSpotCollection.RemoveAt*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.HotSpotCollection.SetDirtyObject(System.Object)
  id: SetDirtyObject(System.Object)
  parent: System.Web.UI.WebControls.HotSpotCollection
  langs:
  - csharp
  name: SetDirtyObject(Object)
  nameWithType: HotSpotCollection.SetDirtyObject(Object)
  fullName: System.Web.UI.WebControls.HotSpotCollection.SetDirtyObject(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  syntax:
    content: protected override void SetDirtyObject (object o);
    parameters:
    - id: o
      type: System.Object
      description: "추가할 수 있습니다."
  overload: System.Web.UI.WebControls.HotSpotCollection.SetDirtyObject*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Web.UI.StateManagedCollection
- uid: System.Web.UI.WebControls.HotSpotCollection.#ctor
  parent: System.Web.UI.WebControls.HotSpotCollection
  isExternal: false
  name: HotSpotCollection()
  nameWithType: HotSpotCollection.HotSpotCollection()
  fullName: System.Web.UI.WebControls.HotSpotCollection.HotSpotCollection()
- uid: System.Web.UI.WebControls.HotSpotCollection.Add(System.Web.UI.WebControls.HotSpot)
  parent: System.Web.UI.WebControls.HotSpotCollection
  isExternal: false
  name: Add(HotSpot)
  nameWithType: HotSpotCollection.Add(HotSpot)
  fullName: System.Web.UI.WebControls.HotSpotCollection.Add(HotSpot)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.HotSpot
  parent: System.Web.UI.WebControls
  isExternal: false
  name: HotSpot
  nameWithType: HotSpot
  fullName: System.Web.UI.WebControls.HotSpot
- uid: System.Web.UI.WebControls.HotSpotCollection.CreateKnownType(System.Int32)
  parent: System.Web.UI.WebControls.HotSpotCollection
  isExternal: false
  name: CreateKnownType(Int32)
  nameWithType: HotSpotCollection.CreateKnownType(Int32)
  fullName: System.Web.UI.WebControls.HotSpotCollection.CreateKnownType(Int32)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.HotSpotCollection.GetKnownTypes
  parent: System.Web.UI.WebControls.HotSpotCollection
  isExternal: false
  name: GetKnownTypes()
  nameWithType: HotSpotCollection.GetKnownTypes()
  fullName: System.Web.UI.WebControls.HotSpotCollection.GetKnownTypes()
- uid: System.Type[]
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type[]
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.UI.WebControls.HotSpotCollection.Insert(System.Int32,System.Web.UI.WebControls.HotSpot)
  parent: System.Web.UI.WebControls.HotSpotCollection
  isExternal: false
  name: Insert(Int32,HotSpot)
  nameWithType: HotSpotCollection.Insert(Int32,HotSpot)
  fullName: System.Web.UI.WebControls.HotSpotCollection.Insert(Int32,HotSpot)
- uid: System.Web.UI.WebControls.HotSpotCollection.Item(System.Int32)
  parent: System.Web.UI.WebControls.HotSpotCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: HotSpotCollection.Item(Int32)
  fullName: System.Web.UI.WebControls.HotSpotCollection.Item(Int32)
- uid: System.Web.UI.WebControls.HotSpotCollection.OnValidate(System.Object)
  parent: System.Web.UI.WebControls.HotSpotCollection
  isExternal: false
  name: OnValidate(Object)
  nameWithType: HotSpotCollection.OnValidate(Object)
  fullName: System.Web.UI.WebControls.HotSpotCollection.OnValidate(Object)
- uid: System.Web.UI.WebControls.HotSpotCollection.Remove(System.Web.UI.WebControls.HotSpot)
  parent: System.Web.UI.WebControls.HotSpotCollection
  isExternal: false
  name: Remove(HotSpot)
  nameWithType: HotSpotCollection.Remove(HotSpot)
  fullName: System.Web.UI.WebControls.HotSpotCollection.Remove(HotSpot)
- uid: System.Web.UI.WebControls.HotSpotCollection.RemoveAt(System.Int32)
  parent: System.Web.UI.WebControls.HotSpotCollection
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: HotSpotCollection.RemoveAt(Int32)
  fullName: System.Web.UI.WebControls.HotSpotCollection.RemoveAt(Int32)
- uid: System.Web.UI.WebControls.HotSpotCollection.SetDirtyObject(System.Object)
  parent: System.Web.UI.WebControls.HotSpotCollection
  isExternal: false
  name: SetDirtyObject(Object)
  nameWithType: HotSpotCollection.SetDirtyObject(Object)
  fullName: System.Web.UI.WebControls.HotSpotCollection.SetDirtyObject(Object)
- uid: System.Web.UI.WebControls.HotSpotCollection.#ctor*
  parent: System.Web.UI.WebControls.HotSpotCollection
  isExternal: false
  name: HotSpotCollection
  nameWithType: HotSpotCollection.HotSpotCollection
- uid: System.Web.UI.WebControls.HotSpotCollection.Add*
  parent: System.Web.UI.WebControls.HotSpotCollection
  isExternal: false
  name: Add
  nameWithType: HotSpotCollection.Add
- uid: System.Web.UI.WebControls.HotSpotCollection.CreateKnownType*
  parent: System.Web.UI.WebControls.HotSpotCollection
  isExternal: false
  name: CreateKnownType
  nameWithType: HotSpotCollection.CreateKnownType
- uid: System.Web.UI.WebControls.HotSpotCollection.GetKnownTypes*
  parent: System.Web.UI.WebControls.HotSpotCollection
  isExternal: false
  name: GetKnownTypes
  nameWithType: HotSpotCollection.GetKnownTypes
- uid: System.Web.UI.WebControls.HotSpotCollection.Insert*
  parent: System.Web.UI.WebControls.HotSpotCollection
  isExternal: false
  name: Insert
  nameWithType: HotSpotCollection.Insert
- uid: System.Web.UI.WebControls.HotSpotCollection.Item*
  parent: System.Web.UI.WebControls.HotSpotCollection
  isExternal: false
  name: Item
  nameWithType: HotSpotCollection.Item
- uid: System.Web.UI.WebControls.HotSpotCollection.OnValidate*
  parent: System.Web.UI.WebControls.HotSpotCollection
  isExternal: false
  name: OnValidate
  nameWithType: HotSpotCollection.OnValidate
- uid: System.Web.UI.WebControls.HotSpotCollection.Remove*
  parent: System.Web.UI.WebControls.HotSpotCollection
  isExternal: false
  name: Remove
  nameWithType: HotSpotCollection.Remove
- uid: System.Web.UI.WebControls.HotSpotCollection.RemoveAt*
  parent: System.Web.UI.WebControls.HotSpotCollection
  isExternal: false
  name: RemoveAt
  nameWithType: HotSpotCollection.RemoveAt
- uid: System.Web.UI.WebControls.HotSpotCollection.SetDirtyObject*
  parent: System.Web.UI.WebControls.HotSpotCollection
  isExternal: false
  name: SetDirtyObject
  nameWithType: HotSpotCollection.SetDirtyObject
