### YamlMime:ManagedReference
items:
- uid: Microsoft.JScript.VsaItem
  id: VsaItem
  children:
  - Microsoft.JScript.VsaItem.flag
  - Microsoft.JScript.VsaItem.GetOption(System.String)
  - Microsoft.JScript.VsaItem.isDirty
  - Microsoft.JScript.VsaItem.IsDirty
  - Microsoft.JScript.VsaItem.ItemType
  - Microsoft.JScript.VsaItem.name
  - Microsoft.JScript.VsaItem.Name
  - Microsoft.JScript.VsaItem.SetOption(System.String,System.Object)
  - Microsoft.JScript.VsaItem.type
  langs:
  - csharp
  name: VsaItem
  nameWithType: VsaItem
  fullName: Microsoft.JScript.VsaItem
  type: Class
  summary: ".NET 스크립트 엔진에 추가 된 항목을 나타냅니다. 여기에 코드 항목과 참조 항목, 전역 항목에 포함 됩니다."
  syntax:
    content: 'public abstract class VsaItem : Microsoft.JScript.Vsa.IJSVsaItem'
  inheritance:
  - System.Object
  implements:
  - Microsoft.JScript.Vsa.IJSVsaItem
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.JScript.VsaItem.flag
  id: flag
  parent: Microsoft.JScript.VsaItem
  langs:
  - csharp
  name: flag
  nameWithType: VsaItem.flag
  fullName: Microsoft.JScript.VsaItem.flag
  type: Field
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "항목의 유형을 지정 <xref:Microsoft.Vsa.VsaItemFlag.Class>, <xref:Microsoft.Vsa.VsaItemFlag.Module>, 또는 <xref:Microsoft.Vsa.VsaItemFlag.None>.</xref:Microsoft.Vsa.VsaItemFlag.None> </xref:Microsoft.Vsa.VsaItemFlag.Module> </xref:Microsoft.Vsa.VsaItemFlag.Class>"
  syntax:
    content: protected Microsoft.JScript.Vsa.JSVsaItemFlag flag;
    return:
      type: Microsoft.JScript.Vsa.JSVsaItemFlag
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.VsaItem.GetOption(System.String)
  id: GetOption(System.String)
  parent: Microsoft.JScript.VsaItem
  langs:
  - csharp
  name: GetOption(String)
  nameWithType: VsaItem.GetOption(String)
  fullName: Microsoft.JScript.VsaItem.GetOption(String)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "가져옵니다는 **코드 베이스** 옵션입니다."
  syntax:
    content: public virtual object GetOption (string name);
    parameters:
    - id: name
      type: System.String
      description: "리터럴 문자열 &quot;코드 베이스&quot;입니다."
    return:
      type: System.Object
      description: "값은 **코드 베이스** 옵션입니다."
  overload: Microsoft.JScript.VsaItem.GetOption*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.VsaItem.isDirty
  id: isDirty
  parent: Microsoft.JScript.VsaItem
  langs:
  - csharp
  name: isDirty
  nameWithType: VsaItem.isDirty
  fullName: Microsoft.JScript.VsaItem.isDirty
  type: Field
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "항목의 현재 메모리 내의 표현이 지속 된 표현과 다른 지 여부를 지정 합니다."
  syntax:
    content: protected bool isDirty;
    return:
      type: System.Boolean
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.VsaItem.IsDirty
  id: IsDirty
  parent: Microsoft.JScript.VsaItem
  langs:
  - csharp
  name: IsDirty
  nameWithType: VsaItem.IsDirty
  fullName: Microsoft.JScript.VsaItem.IsDirty
  type: Property
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "항목의 현재 메모리 내의 표현이 지속 된 표현과 다른 지 여부를 나타내는 값을 가져오거나 설정 합니다."
  syntax:
    content: public virtual bool IsDirty { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>메모리 내의 표현이 지속 된 표현과; 다른 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: Microsoft.JScript.VsaItem.IsDirty*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.VsaItem.ItemType
  id: ItemType
  parent: Microsoft.JScript.VsaItem
  langs:
  - csharp
  name: ItemType
  nameWithType: VsaItem.ItemType
  fullName: Microsoft.JScript.VsaItem.ItemType
  type: Property
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "항목의 형식을 가져옵니다."
  syntax:
    content: public Microsoft.JScript.Vsa.JSVsaItemType ItemType { get; }
    return:
      type: Microsoft.JScript.Vsa.JSVsaItemType
      description: "열거형 값 중 하나입니다. 값 항목의 유형을 나타냅니다."
  overload: Microsoft.JScript.VsaItem.ItemType*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.VsaItem.name
  id: name
  parent: Microsoft.JScript.VsaItem
  langs:
  - csharp
  name: name
  nameWithType: VsaItem.name
  fullName: Microsoft.JScript.VsaItem.name
  type: Field
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "항목의 이름을 지정합니다."
  syntax:
    content: protected string name;
    return:
      type: System.String
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.VsaItem.Name
  id: Name
  parent: Microsoft.JScript.VsaItem
  langs:
  - csharp
  name: Name
  nameWithType: VsaItem.Name
  fullName: Microsoft.JScript.VsaItem.Name
  type: Property
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "항목의 이름을 가져오거나 설정 합니다."
  syntax:
    content: public virtual string Name { get; set; }
    return:
      type: System.String
      description: "항목의 문자열 리터럴 이름입니다."
  overload: Microsoft.JScript.VsaItem.Name*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.VsaItem.SetOption(System.String,System.Object)
  id: SetOption(System.String,System.Object)
  parent: Microsoft.JScript.VsaItem
  langs:
  - csharp
  name: SetOption(String,Object)
  nameWithType: VsaItem.SetOption(String,Object)
  fullName: Microsoft.JScript.VsaItem.SetOption(String,Object)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "설정의 **코드 베이스** 옵션입니다."
  syntax:
    content: public virtual void SetOption (string name, object value);
    parameters:
    - id: name
      type: System.String
      description: "리터럴 문자열 &quot;코드 베이스&quot;입니다."
    - id: value
      type: System.Object
      description: "옵션에 대 한 새 값입니다."
  overload: Microsoft.JScript.VsaItem.SetOption*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.VsaItem.type
  id: type
  parent: Microsoft.JScript.VsaItem
  langs:
  - csharp
  name: type
  nameWithType: VsaItem.type
  fullName: Microsoft.JScript.VsaItem.type
  type: Field
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "항목의 유형을 지정 <xref:Microsoft.Vsa.VsaItemType.Code>, <xref:Microsoft.Vsa.VsaItemType.Reference>, 또는 <xref:Microsoft.Vsa.VsaItemType.AppGlobal>.</xref:Microsoft.Vsa.VsaItemType.AppGlobal> </xref:Microsoft.Vsa.VsaItemType.Reference> </xref:Microsoft.Vsa.VsaItemType.Code>"
  syntax:
    content: protected Microsoft.JScript.Vsa.JSVsaItemType type;
    return:
      type: Microsoft.JScript.Vsa.JSVsaItemType
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: Microsoft.JScript.VsaItem.flag
  parent: Microsoft.JScript.VsaItem
  isExternal: false
  name: flag
  nameWithType: VsaItem.flag
  fullName: Microsoft.JScript.VsaItem.flag
- uid: Microsoft.JScript.Vsa.JSVsaItemFlag
  parent: Microsoft.JScript.Vsa
  isExternal: false
  name: JSVsaItemFlag
  nameWithType: JSVsaItemFlag
  fullName: Microsoft.JScript.Vsa.JSVsaItemFlag
- uid: Microsoft.JScript.VsaItem.GetOption(System.String)
  parent: Microsoft.JScript.VsaItem
  isExternal: false
  name: GetOption(String)
  nameWithType: VsaItem.GetOption(String)
  fullName: Microsoft.JScript.VsaItem.GetOption(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.JScript.VsaItem.isDirty
  parent: Microsoft.JScript.VsaItem
  isExternal: false
  name: isDirty
  nameWithType: VsaItem.isDirty
  fullName: Microsoft.JScript.VsaItem.isDirty
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.JScript.VsaItem.IsDirty
  parent: Microsoft.JScript.VsaItem
  isExternal: false
  name: IsDirty
  nameWithType: VsaItem.IsDirty
  fullName: Microsoft.JScript.VsaItem.IsDirty
- uid: Microsoft.JScript.VsaItem.ItemType
  parent: Microsoft.JScript.VsaItem
  isExternal: false
  name: ItemType
  nameWithType: VsaItem.ItemType
  fullName: Microsoft.JScript.VsaItem.ItemType
- uid: Microsoft.JScript.Vsa.JSVsaItemType
  parent: Microsoft.JScript.Vsa
  isExternal: false
  name: JSVsaItemType
  nameWithType: JSVsaItemType
  fullName: Microsoft.JScript.Vsa.JSVsaItemType
- uid: Microsoft.JScript.VsaItem.name
  parent: Microsoft.JScript.VsaItem
  isExternal: false
  name: name
  nameWithType: VsaItem.name
  fullName: Microsoft.JScript.VsaItem.name
- uid: Microsoft.JScript.VsaItem.Name
  parent: Microsoft.JScript.VsaItem
  isExternal: false
  name: Name
  nameWithType: VsaItem.Name
  fullName: Microsoft.JScript.VsaItem.Name
- uid: Microsoft.JScript.VsaItem.SetOption(System.String,System.Object)
  parent: Microsoft.JScript.VsaItem
  isExternal: false
  name: SetOption(String,Object)
  nameWithType: VsaItem.SetOption(String,Object)
  fullName: Microsoft.JScript.VsaItem.SetOption(String,Object)
- uid: Microsoft.JScript.VsaItem.type
  parent: Microsoft.JScript.VsaItem
  isExternal: false
  name: type
  nameWithType: VsaItem.type
  fullName: Microsoft.JScript.VsaItem.type
- uid: Microsoft.JScript.VsaItem.GetOption*
  parent: Microsoft.JScript.VsaItem
  isExternal: false
  name: GetOption
  nameWithType: VsaItem.GetOption
- uid: Microsoft.JScript.VsaItem.IsDirty*
  parent: Microsoft.JScript.VsaItem
  isExternal: false
  name: IsDirty
  nameWithType: VsaItem.IsDirty
- uid: Microsoft.JScript.VsaItem.ItemType*
  parent: Microsoft.JScript.VsaItem
  isExternal: false
  name: ItemType
  nameWithType: VsaItem.ItemType
- uid: Microsoft.JScript.VsaItem.Name*
  parent: Microsoft.JScript.VsaItem
  isExternal: false
  name: Name
  nameWithType: VsaItem.Name
- uid: Microsoft.JScript.VsaItem.SetOption*
  parent: Microsoft.JScript.VsaItem
  isExternal: false
  name: SetOption
  nameWithType: VsaItem.SetOption
