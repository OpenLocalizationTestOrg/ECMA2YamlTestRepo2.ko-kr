### YamlMime:ManagedReference
items:
- uid: System.Reflection.Emit.EventToken
  id: EventToken
  children:
  - System.Reflection.Emit.EventToken.Empty
  - System.Reflection.Emit.EventToken.Equals(System.Object)
  - System.Reflection.Emit.EventToken.Equals(System.Reflection.Emit.EventToken)
  - System.Reflection.Emit.EventToken.GetHashCode
  - System.Reflection.Emit.EventToken.op_Equality(System.Reflection.Emit.EventToken,System.Reflection.Emit.EventToken)
  - System.Reflection.Emit.EventToken.op_Inequality(System.Reflection.Emit.EventToken,System.Reflection.Emit.EventToken)
  - System.Reflection.Emit.EventToken.Token
  langs:
  - csharp
  name: EventToken
  nameWithType: EventToken
  fullName: System.Reflection.Emit.EventToken
  type: Struct
  summary: "나타냅니다는 <xref uid=&quot;langword_csharp_Token&quot; name=&quot;Token&quot; href=&quot;&quot;> </xref> 이벤트를 나타내는 메타 데이터에 의해 반환 됩니다."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public struct EventToken
  inheritance:
  - System.ValueType
  implements: []
  platform:
  - net462
- uid: System.Reflection.Emit.EventToken.Empty
  id: Empty
  parent: System.Reflection.Emit.EventToken
  langs:
  - csharp
  name: Empty
  nameWithType: EventToken.Empty
  fullName: System.Reflection.Emit.EventToken.Empty
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: "기본 <xref uid=&quot;langword_csharp_EventToken&quot; name=&quot;EventToken&quot; href=&quot;&quot;> </xref> 와 <xref:System.Reflection.Emit.EventToken.Token*>값 0.</xref:System.Reflection.Emit.EventToken.Token*>"
  syntax:
    content: public static readonly System.Reflection.Emit.EventToken Empty;
    return:
      type: System.Reflection.Emit.EventToken
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Reflection.Emit.EventToken.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Reflection.Emit.EventToken
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: EventToken.Equals(Object)
  fullName: System.Reflection.Emit.EventToken.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: "지정된 된 개체의 인스턴스 인지 확인 <xref uid=&quot;langword_csharp_EventToken&quot; name=&quot;EventToken&quot; href=&quot;&quot;> </xref> 과이 인스턴스와 동일 합니다."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "이 인스턴스와 비교할 개체입니다."
    return:
      type: System.Boolean
      description: "반환 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> 경우 <code> obj </code> 의 인스턴스가 <xref uid=&quot;langword_csharp_EventToken&quot; name=&quot;EventToken&quot; href=&quot;&quot;> </xref> 현재 인스턴스와 같으면 하 고, 그러지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Reflection.Emit.EventToken.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Reflection.Emit.EventToken.Equals(System.Reflection.Emit.EventToken)
  id: Equals(System.Reflection.Emit.EventToken)
  parent: System.Reflection.Emit.EventToken
  langs:
  - csharp
  name: Equals(EventToken)
  nameWithType: EventToken.Equals(EventToken)
  fullName: System.Reflection.Emit.EventToken.Equals(EventToken)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: "현재 인스턴스가 같은지 여부를 지정 된 나타냅니다 <xref href=&quot;System.Reflection.Emit.EventToken&quot;> </xref>합니다."
  syntax:
    content: public bool Equals (System.Reflection.Emit.EventToken obj);
    parameters:
    - id: obj
      type: System.Reflection.Emit.EventToken
      description: "<xref href=&quot;System.Reflection.Emit.EventToken&quot;> </xref> 현재 인스턴스와 비교할 합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>하는 경우의 값 <code> obj </code> 현재 인스턴스의 값과 같지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Reflection.Emit.EventToken.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Reflection.Emit.EventToken.GetHashCode
  id: GetHashCode
  parent: System.Reflection.Emit.EventToken
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: EventToken.GetHashCode()
  fullName: System.Reflection.Emit.EventToken.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: "이 이벤트에 대 한 해시 코드를 생성 합니다."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "이 인스턴스에 대 한 해시 코드를 반환합니다."
  overload: System.Reflection.Emit.EventToken.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Reflection.Emit.EventToken.op_Equality(System.Reflection.Emit.EventToken,System.Reflection.Emit.EventToken)
  id: op_Equality(System.Reflection.Emit.EventToken,System.Reflection.Emit.EventToken)
  parent: System.Reflection.Emit.EventToken
  langs:
  - csharp
  name: op_Equality(EventToken,EventToken)
  nameWithType: EventToken.op_Equality(EventToken,EventToken)
  fullName: System.Reflection.Emit.EventToken.op_Equality(EventToken,EventToken)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: "나타냅니다 두 <xref href=&quot;System.Reflection.Emit.EventToken&quot;> </xref> 구조체가 동일 합니다."
  syntax:
    content: public static bool op_Equality (System.Reflection.Emit.EventToken a, System.Reflection.Emit.EventToken b);
    parameters:
    - id: a
      type: System.Reflection.Emit.EventToken
      description: "<xref href=&quot;System.Reflection.Emit.EventToken&quot;> </xref> 비교할 `b`합니다."
    - id: b
      type: System.Reflection.Emit.EventToken
      description: "<xref href=&quot;System.Reflection.Emit.EventToken&quot;> </xref> 비교할 `a`합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>a</code> is equal to <code>b</code>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Reflection.Emit.EventToken.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Reflection.Emit.EventToken.op_Inequality(System.Reflection.Emit.EventToken,System.Reflection.Emit.EventToken)
  id: op_Inequality(System.Reflection.Emit.EventToken,System.Reflection.Emit.EventToken)
  parent: System.Reflection.Emit.EventToken
  langs:
  - csharp
  name: op_Inequality(EventToken,EventToken)
  nameWithType: EventToken.op_Inequality(EventToken,EventToken)
  fullName: System.Reflection.Emit.EventToken.op_Inequality(EventToken,EventToken)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: "나타냅니다 두 <xref href=&quot;System.Reflection.Emit.EventToken&quot;> </xref> 구조체가 동일 합니다."
  syntax:
    content: public static bool op_Inequality (System.Reflection.Emit.EventToken a, System.Reflection.Emit.EventToken b);
    parameters:
    - id: a
      type: System.Reflection.Emit.EventToken
      description: "<xref href=&quot;System.Reflection.Emit.EventToken&quot;> </xref> 비교할 `b`합니다."
    - id: b
      type: System.Reflection.Emit.EventToken
      description: "<xref href=&quot;System.Reflection.Emit.EventToken&quot;> </xref> 비교할 `a`합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>a</code> is not equal to <code>b</code>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Reflection.Emit.EventToken.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Reflection.Emit.EventToken.Token
  id: Token
  parent: System.Reflection.Emit.EventToken
  langs:
  - csharp
  name: Token
  nameWithType: EventToken.Token
  fullName: System.Reflection.Emit.EventToken.Token
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: "이 이벤트에 대 한 메타 데이터 토큰을 검색합니다."
  syntax:
    content: public int Token { get; }
    return:
      type: System.Int32
      description: "읽기 전용입니다. 이 이벤트에 대 한 메타 데이터 토큰을 검색합니다."
  overload: System.Reflection.Emit.EventToken.Token*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Reflection.Emit.EventToken.Empty
  parent: System.Reflection.Emit.EventToken
  isExternal: false
  name: Empty
  nameWithType: EventToken.Empty
  fullName: System.Reflection.Emit.EventToken.Empty
- uid: System.Reflection.Emit.EventToken
  parent: System.Reflection.Emit
  isExternal: false
  name: EventToken
  nameWithType: EventToken
  fullName: System.Reflection.Emit.EventToken
- uid: System.Reflection.Emit.EventToken.Equals(System.Object)
  parent: System.Reflection.Emit.EventToken
  isExternal: false
  name: Equals(Object)
  nameWithType: EventToken.Equals(Object)
  fullName: System.Reflection.Emit.EventToken.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Reflection.Emit.EventToken.Equals(System.Reflection.Emit.EventToken)
  parent: System.Reflection.Emit.EventToken
  isExternal: false
  name: Equals(EventToken)
  nameWithType: EventToken.Equals(EventToken)
  fullName: System.Reflection.Emit.EventToken.Equals(EventToken)
- uid: System.Reflection.Emit.EventToken.GetHashCode
  parent: System.Reflection.Emit.EventToken
  isExternal: false
  name: GetHashCode()
  nameWithType: EventToken.GetHashCode()
  fullName: System.Reflection.Emit.EventToken.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Reflection.Emit.EventToken.op_Equality(System.Reflection.Emit.EventToken,System.Reflection.Emit.EventToken)
  parent: System.Reflection.Emit.EventToken
  isExternal: false
  name: op_Equality(EventToken,EventToken)
  nameWithType: EventToken.op_Equality(EventToken,EventToken)
  fullName: System.Reflection.Emit.EventToken.op_Equality(EventToken,EventToken)
- uid: System.Reflection.Emit.EventToken.op_Inequality(System.Reflection.Emit.EventToken,System.Reflection.Emit.EventToken)
  parent: System.Reflection.Emit.EventToken
  isExternal: false
  name: op_Inequality(EventToken,EventToken)
  nameWithType: EventToken.op_Inequality(EventToken,EventToken)
  fullName: System.Reflection.Emit.EventToken.op_Inequality(EventToken,EventToken)
- uid: System.Reflection.Emit.EventToken.Token
  parent: System.Reflection.Emit.EventToken
  isExternal: false
  name: Token
  nameWithType: EventToken.Token
  fullName: System.Reflection.Emit.EventToken.Token
- uid: System.Reflection.Emit.EventToken.Equals*
  parent: System.Reflection.Emit.EventToken
  isExternal: false
  name: Equals
  nameWithType: EventToken.Equals
- uid: System.Reflection.Emit.EventToken.GetHashCode*
  parent: System.Reflection.Emit.EventToken
  isExternal: false
  name: GetHashCode
  nameWithType: EventToken.GetHashCode
- uid: System.Reflection.Emit.EventToken.op_Equality*
  parent: System.Reflection.Emit.EventToken
  isExternal: false
  name: op_Equality
  nameWithType: EventToken.op_Equality
- uid: System.Reflection.Emit.EventToken.op_Inequality*
  parent: System.Reflection.Emit.EventToken
  isExternal: false
  name: op_Inequality
  nameWithType: EventToken.op_Inequality
- uid: System.Reflection.Emit.EventToken.Token*
  parent: System.Reflection.Emit.EventToken
  isExternal: false
  name: Token
  nameWithType: EventToken.Token
