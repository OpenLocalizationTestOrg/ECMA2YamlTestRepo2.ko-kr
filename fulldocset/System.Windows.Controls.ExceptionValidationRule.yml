### YamlMime:ManagedReference
items:
- uid: System.Windows.Controls.ExceptionValidationRule
  id: ExceptionValidationRule
  children:
  - System.Windows.Controls.ExceptionValidationRule.#ctor
  - System.Windows.Controls.ExceptionValidationRule.Validate(System.Object,System.Globalization.CultureInfo)
  langs:
  - csharp
  name: ExceptionValidationRule
  nameWithType: ExceptionValidationRule
  fullName: System.Windows.Controls.ExceptionValidationRule
  type: Class
  summary: "바인딩 소스 속성을 업데이트 하는 동안 throw 되는 예외를 확인 하는 규칙을 나타냅니다."
  remarks: "[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] 데이터 바인딩 모델을 사용 하면 연결할 수 <xref:System.Windows.Data.Binding.ValidationRules%2A>와 <xref:System.Windows.Data.Binding>개체입니다.</xref:System.Windows.Data.Binding> </xref:System.Windows.Data.Binding.ValidationRules%2A> ExceptionValidationRule 클래스가 바인딩 소스 속성 업데이트 중에 throw 되는 예외를 확인 하는 기본 제공 규칙입니다. 바인딩 엔진에 <xref:System.Windows.Data.UpdateSourceExceptionFilterCallback>.</xref:System.Windows.Data.UpdateSourceExceptionFilterCallback> 를 사용 하 여 이러한 예외를 처리 하는 방법을 지정 하려면 사용자 지정 논리를 제공할 수 있습니다. 자세한 내용은 <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A>.</xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A> 을 참조 하십시오.       설정 하는 것은 ExceptionValidationRule을 명시적으로 설정 하는 대체 구문은 <xref:System.Windows.Data.Binding.ValidatesOnExceptions%2A>속성을 `true` 에 프로그램 <xref:System.Windows.Data.Binding>또는 <xref:System.Windows.Data.MultiBinding>개체입니다.</xref:System.Windows.Data.MultiBinding> </xref:System.Windows.Data.Binding> </xref:System.Windows.Data.Binding.ValidatesOnExceptions%2A>       <xref:System.Windows.Controls.ValidationRule>.</xref:System.Windows.Controls.ValidationRule> 에서 파생 되는 클래스를 만들어 사용자 지정 규칙을 만들 수 있습니다. 자세한 내용 및 데이터 유효성 검사에 대 한 자세한 내용은 참조 [데이터 바인딩 개요](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The <xref:System.Windows.Data.Binding.ValidationRules%2A> property takes a collection of <xref:System.Windows.Controls.ValidationRule> objects. The following example uses <xref:System.Windows.Controls.TextBox.Text%2A?displayProperty=fullName> as the binding target property and `StartPrice` (an integer) as the binding source property. When the user enters a value that cannot be converted to an integer, an exception is thrown, which causes the ExceptionValidationRule to invalidate the target value.  \n  \n [!code-xml[DataBindingLab#DefaultValidation](~/add/codesnippet/xaml/DataBindingLab/AddProductWindow.xaml#defaultvalidation)]  \n  \n By default, when there is a validation error, the <xref:System.Windows.Controls.TextBox> appears with a red border. Optionally, you can write a custom <xref:System.Windows.Controls.Validation.ErrorTemplate%2A> to specify how you want to notify the user when there is a validation error.  \n  \n For more information about data validation, see [Data Binding Overview](../Topic/Data%20Binding%20Overview.md).  \n  \n For the complete sample, see [Data Binding Demo](http://go.microsoft.com/fwlink/?LinkID=163703)."
  syntax:
    content: 'public sealed class ExceptionValidationRule : System.Windows.Controls.ValidationRule'
  inheritance:
  - System.Object
  - System.Windows.Controls.ValidationRule
  implements: []
  inheritedMembers:
  - System.Windows.Controls.ValidationRule.Validate(System.Object,System.Globalization.CultureInfo,System.Windows.Data.BindingExpressionBase)
  - System.Windows.Controls.ValidationRule.Validate(System.Object,System.Globalization.CultureInfo,System.Windows.Data.BindingGroup)
  - System.Windows.Controls.ValidationRule.ValidatesOnTargetUpdated
  - System.Windows.Controls.ValidationRule.ValidationStep
  platform:
  - net462
- uid: System.Windows.Controls.ExceptionValidationRule.#ctor
  id: '#ctor'
  parent: System.Windows.Controls.ExceptionValidationRule
  langs:
  - csharp
  name: ExceptionValidationRule()
  nameWithType: ExceptionValidationRule.ExceptionValidationRule()
  fullName: System.Windows.Controls.ExceptionValidationRule.ExceptionValidationRule()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Windows.Controls.ExceptionValidationRule&quot;> </xref> 클래스입니다."
  syntax:
    content: public ExceptionValidationRule ();
    parameters: []
  overload: System.Windows.Controls.ExceptionValidationRule.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.ExceptionValidationRule.Validate(System.Object,System.Globalization.CultureInfo)
  id: Validate(System.Object,System.Globalization.CultureInfo)
  parent: System.Windows.Controls.ExceptionValidationRule
  langs:
  - csharp
  name: Validate(Object,CultureInfo)
  nameWithType: ExceptionValidationRule.Validate(Object,CultureInfo)
  fullName: System.Windows.Controls.ExceptionValidationRule.Validate(Object,CultureInfo)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "값에 대해 유효성 검사를 수행합니다."
  syntax:
    content: public override System.Windows.Controls.ValidationResult Validate (object value, System.Globalization.CultureInfo cultureInfo);
    parameters:
    - id: value
      type: System.Object
      description: "(바인딩 대상)에서 값을 확인 합니다."
    - id: cultureInfo
      type: System.Globalization.CultureInfo
      description: "이 규칙에 사용할 문화권입니다."
    return:
      type: System.Windows.Controls.ValidationResult
      description: "A <xref href=&quot;System.Windows.Controls.ValidationResult&quot;></xref> object."
  overload: System.Windows.Controls.ExceptionValidationRule.Validate*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Controls.ValidationRule
  isExternal: false
  name: System.Windows.Controls.ValidationRule
- uid: System.Windows.Controls.ExceptionValidationRule.#ctor
  parent: System.Windows.Controls.ExceptionValidationRule
  isExternal: false
  name: ExceptionValidationRule()
  nameWithType: ExceptionValidationRule.ExceptionValidationRule()
  fullName: System.Windows.Controls.ExceptionValidationRule.ExceptionValidationRule()
- uid: System.Windows.Controls.ExceptionValidationRule.Validate(System.Object,System.Globalization.CultureInfo)
  parent: System.Windows.Controls.ExceptionValidationRule
  isExternal: false
  name: Validate(Object,CultureInfo)
  nameWithType: ExceptionValidationRule.Validate(Object,CultureInfo)
  fullName: System.Windows.Controls.ExceptionValidationRule.Validate(Object,CultureInfo)
- uid: System.Windows.Controls.ValidationResult
  parent: System.Windows.Controls
  isExternal: false
  name: ValidationResult
  nameWithType: ValidationResult
  fullName: System.Windows.Controls.ValidationResult
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Windows.Controls.ExceptionValidationRule.#ctor*
  parent: System.Windows.Controls.ExceptionValidationRule
  isExternal: false
  name: ExceptionValidationRule
  nameWithType: ExceptionValidationRule.ExceptionValidationRule
- uid: System.Windows.Controls.ExceptionValidationRule.Validate*
  parent: System.Windows.Controls.ExceptionValidationRule
  isExternal: false
  name: Validate
  nameWithType: ExceptionValidationRule.Validate
