### YamlMime:ManagedReference
items:
- uid: System.CodeDom.Compiler.CompilerParameters
  id: CompilerParameters
  children:
  - System.CodeDom.Compiler.CompilerParameters.#ctor
  - System.CodeDom.Compiler.CompilerParameters.#ctor(System.String[])
  - System.CodeDom.Compiler.CompilerParameters.#ctor(System.String[],System.String)
  - System.CodeDom.Compiler.CompilerParameters.#ctor(System.String[],System.String,System.Boolean)
  - System.CodeDom.Compiler.CompilerParameters.CompilerOptions
  - System.CodeDom.Compiler.CompilerParameters.CoreAssemblyFileName
  - System.CodeDom.Compiler.CompilerParameters.EmbeddedResources
  - System.CodeDom.Compiler.CompilerParameters.Evidence
  - System.CodeDom.Compiler.CompilerParameters.GenerateExecutable
  - System.CodeDom.Compiler.CompilerParameters.GenerateInMemory
  - System.CodeDom.Compiler.CompilerParameters.IncludeDebugInformation
  - System.CodeDom.Compiler.CompilerParameters.LinkedResources
  - System.CodeDom.Compiler.CompilerParameters.MainClass
  - System.CodeDom.Compiler.CompilerParameters.OutputAssembly
  - System.CodeDom.Compiler.CompilerParameters.ReferencedAssemblies
  - System.CodeDom.Compiler.CompilerParameters.TempFiles
  - System.CodeDom.Compiler.CompilerParameters.TreatWarningsAsErrors
  - System.CodeDom.Compiler.CompilerParameters.UserToken
  - System.CodeDom.Compiler.CompilerParameters.WarningLevel
  - System.CodeDom.Compiler.CompilerParameters.Win32Resource
  langs:
  - csharp
  name: CompilerParameters
  nameWithType: CompilerParameters
  fullName: System.CodeDom.Compiler.CompilerParameters
  type: Class
  summary: "컴파일러를 호출 하는 데 사용 하는 매개 변수를 나타냅니다."
  remarks: "CompilerParameters 개체 설정을 나타내는 및에 대 한 옵션는 <xref:System.CodeDom.Compiler.ICodeCompiler>인터페이스.</xref:System.CodeDom.Compiler.ICodeCompiler>       실행 프로그램을 컴파일하는 경우 설정 해야는 <xref:System.CodeDom.Compiler.CompilerParameters.GenerateExecutable%2A>속성을 `true`.</xref:System.CodeDom.Compiler.CompilerParameters.GenerateExecutable%2A> 경우는 <xref:System.CodeDom.Compiler.CompilerParameters.GenerateExecutable%2A>로 설정 된 `false`, 컴파일러는 클래스 라이브러리를 생성 합니다.</xref:System.CodeDom.Compiler.CompilerParameters.GenerateExecutable%2A> 기본적으로 새 CompilerParameters로 초기화는 <xref:System.CodeDom.Compiler.CompilerParameters.GenerateExecutable%2A>속성이로 설정 `false`.</xref:System.CodeDom.Compiler.CompilerParameters.GenerateExecutable%2A> CodeDOM 그래프에서 실행 파일을 컴파일하는 경우는 <xref:System.CodeDom.CodeEntryPointMethod>그래프에 정의 되어야 합니다.</xref:System.CodeDom.CodeEntryPointMethod> 여러 코드 진입점을 클래스의 이름을 설정 하 여 사용 하도록 진입점을 정의 하는 클래스를 지정할 수 있습니다는 <xref:System.CodeDom.Compiler.CompilerParameters.MainClass%2A>속성.</xref:System.CodeDom.Compiler.CompilerParameters.MainClass%2A>       출력 어셈블리에 대 한 파일 이름을 지정할 수 있습니다는 <xref:System.CodeDom.Compiler.CompilerParameters.OutputAssembly%2A>속성.</xref:System.CodeDom.Compiler.CompilerParameters.OutputAssembly%2A> 그렇지 않으면 기본 출력 파일 이름을 사용할 수 있습니다. 생성된 된 어셈블리에 디버그 정보를 포함 하려면 설정는 <xref:System.CodeDom.Compiler.CompilerParameters.IncludeDebugInformation%2A>속성을 `true`.</xref:System.CodeDom.Compiler.CompilerParameters.IncludeDebugInformation%2A> 어셈블리 이름에 항목으로 지정 해야 모든 어셈블리를 프로젝트에서 참조 하는 경우는 <xref:System.Collections.Specialized.StringCollection>로 설정 된 <xref:System.CodeDom.Compiler.CompilerParameters.ReferencedAssemblies%2A>컴파일을 호출할 때 사용 되는 CompilerParameters의 속성.</xref:System.CodeDom.Compiler.CompilerParameters.ReferencedAssemblies%2A> </xref:System.Collections.Specialized.StringCollection>       설정 하 여 디스크를 사용 하지 않고 메모리에 기록 되는 어셈블리를 컴파일할 수는 <xref:System.CodeDom.Compiler.CompilerParameters.GenerateInMemory%2A>속성을 `true`.</xref:System.CodeDom.Compiler.CompilerParameters.GenerateInMemory%2A> 어셈블리는 메모리에 생성 되 면 코드 <xref:System.CodeDom.Compiler.CompilerResults.CompiledAssembly%2A> <xref:System.CodeDom.Compiler.CompilerResults>.</xref:System.CodeDom.Compiler.CompilerResults> 의 속성</xref:System.CodeDom.Compiler.CompilerResults.CompiledAssembly%2A> 에서 생성된 된 어셈블리에 대 한 참조를 가져올 수 있습니다. 어셈블리에 기록 되는 경우 디스크에서에서 얻을 수 있습니다 경로 생성된 된 어셈블리에 <xref:System.CodeDom.Compiler.CompilerResults.PathToAssembly%2A> <xref:System.CodeDom.Compiler.CompilerResults>.</xref:System.CodeDom.Compiler.CompilerResults> 속성</xref:System.CodeDom.Compiler.CompilerResults.PathToAssembly%2A>       중단 되는 경고 수준을 지정 하려면는 <xref:System.CodeDom.Compiler.CompilerParameters.WarningLevel%2A>속성을 중단 되는 경고 수준을 나타내는 정수입니다.</xref:System.CodeDom.Compiler.CompilerParameters.WarningLevel%2A> 컴파일러에 설정 하 여 경고가 발생 한 경우 컴파일을 중단을 구성할 수도 있습니다는 <xref:System.CodeDom.Compiler.CompilerParameters.TreatWarningsAsErrors%2A>속성을 `true`.</xref:System.CodeDom.Compiler.CompilerParameters.TreatWarningsAsErrors%2A>       컴파일 프로세스를 호출할 때 사용할 사용자 지정 명령줄 인수 문자열을 지정 하려면 문자열 설정 된 <xref:System.CodeDom.Compiler.CompilerParameters.CompilerOptions%2A>속성.</xref:System.CodeDom.Compiler.CompilerParameters.CompilerOptions%2A> 토큰을 지정 하는 Win32 보안 토큰을 컴파일 프로세스를 호출 하는 데 필요 하는 경우는 <xref:System.CodeDom.Compiler.CompilerParameters.UserToken%2A>속성.</xref:System.CodeDom.Compiler.CompilerParameters.UserToken%2A> 컴파일된 어셈블리에서.NET Framework 리소스 파일을 포함 시키려면에 리소스 파일의 이름을 추가 <xref:System.CodeDom.Compiler.CompilerParameters.EmbeddedResources%2A>속성.</xref:System.CodeDom.Compiler.CompilerParameters.EmbeddedResources%2A> 다른 어셈블리의.NET Framework 리소스를 참조 하려면에 리소스 파일의 이름을 추가 하는 <xref:System.CodeDom.Compiler.CompilerParameters.LinkedResources%2A>속성.</xref:System.CodeDom.Compiler.CompilerParameters.LinkedResources%2A> 컴파일된 어셈블리에 Win32 리소스 파일을 포함 시키려면에서 Win32 리소스 파일의 이름을 지정는 <xref:System.CodeDom.Compiler.CompilerParameters.Win32Resource%2A>속성.</xref:System.CodeDom.Compiler.CompilerParameters.Win32Resource%2A>      > [!NOTE] >이 클래스는 모든 멤버에 적용 되는 클래스 수준에 상속 요청과 링크 요청을 포함 합니다. A <xref:System.Security.SecurityException>직접 실행 호출자 또는 파생된 클래스 중 하나에 완전 신뢰 권한이 없는 경우에 throw 됩니다.</xref:System.Security.SecurityException> 보안 요청에 대 한 세부 정보를 참조 하십시오. [링크 요청](~/add/includes/ajax-current-ext-md.md) 및 [상속 요청](http://msdn.microsoft.com/en-us/28b9adbb-8f08-4f10-b856-dbf59eb932d9)합니다."
  example:
  - "The following example builds a CodeDOM source graph for a simple Hello World program.  The source is then saved to a file, compiled into an executable, and run. The `CompileCode` method illustrates how to use the CompilerParameters class to specify various compiler settings and options.  \n  \n [!code-cpp[CompilerParametersExample#1](~/add/codesnippet/cpp/t-system.codedom.compile_3_1.cpp)]\n [!code-cs[CompilerParametersExample#1](~/add/codesnippet/csharp/t-system.codedom.compile_3_1.cs)]\n [!code-vb[CompilerParametersExample#1](~/add/codesnippet/visualbasic/t-system.codedom.compile_3_1.vb)]"
  syntax:
    content: public class CompilerParameters
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerParameters.#ctor
  id: '#ctor'
  parent: System.CodeDom.Compiler.CompilerParameters
  langs:
  - csharp
  name: CompilerParameters()
  nameWithType: CompilerParameters.CompilerParameters()
  fullName: System.CodeDom.Compiler.CompilerParameters.CompilerParameters()
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.CodeDom.Compiler.CompilerParameters&quot;> </xref> 클래스입니다."
  remarks: ''
  example:
  - "The following example illustrates using <xref:System.CodeDom.Compiler.CompilerParameters> to specify various compiler settings and options. This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerParameters> class.  \n  \n [!code-cpp[CompilerParametersExample#2](~/add/codesnippet/cpp/m-system.codedom.compile_2_1.cpp)]\n [!code-cs[CompilerParametersExample#2](~/add/codesnippet/csharp/m-system.codedom.compile_2_1.cs)]\n [!code-vb[CompilerParametersExample#2](~/add/codesnippet/visualbasic/m-system.codedom.compile_2_1.vb)]"
  syntax:
    content: public CompilerParameters ();
    parameters: []
  overload: System.CodeDom.Compiler.CompilerParameters.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerParameters.#ctor(System.String[])
  id: '#ctor(System.String[])'
  parent: System.CodeDom.Compiler.CompilerParameters
  langs:
  - csharp
  name: CompilerParameters(String[])
  nameWithType: CompilerParameters.CompilerParameters(String[])
  fullName: System.CodeDom.Compiler.CompilerParameters.CompilerParameters(String[])
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.CodeDom.Compiler.CompilerParameters&quot;> </xref> 클래스 지정 된 어셈블리 이름을 사용 합니다."
  syntax:
    content: public CompilerParameters (string[] assemblyNames);
    parameters:
    - id: assemblyNames
      type: System.String[]
      description: "참조할 어셈블리의 이름입니다."
  overload: System.CodeDom.Compiler.CompilerParameters.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerParameters.#ctor(System.String[],System.String)
  id: '#ctor(System.String[],System.String)'
  parent: System.CodeDom.Compiler.CompilerParameters
  langs:
  - csharp
  name: CompilerParameters(String[],String)
  nameWithType: CompilerParameters.CompilerParameters(String[],String)
  fullName: System.CodeDom.Compiler.CompilerParameters.CompilerParameters(String[],String)
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.CodeDom.Compiler.CompilerParameters&quot;> </xref> 클래스의 지정 된 어셈블리 이름 및 출력 파일 이름을 사용 합니다."
  syntax:
    content: public CompilerParameters (string[] assemblyNames, string outputName);
    parameters:
    - id: assemblyNames
      type: System.String[]
      description: "참조할 어셈블리의 이름입니다."
    - id: outputName
      type: System.String
      description: "출력 파일 이름입니다."
  overload: System.CodeDom.Compiler.CompilerParameters.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerParameters.#ctor(System.String[],System.String,System.Boolean)
  id: '#ctor(System.String[],System.String,System.Boolean)'
  parent: System.CodeDom.Compiler.CompilerParameters
  langs:
  - csharp
  name: CompilerParameters(String[],String,Boolean)
  nameWithType: CompilerParameters.CompilerParameters(String[],String,Boolean)
  fullName: System.CodeDom.Compiler.CompilerParameters.CompilerParameters(String[],String,Boolean)
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.CodeDom.Compiler.CompilerParameters&quot;> </xref> 클래스 지정된 된 어셈블리 이름, 출력 이름 및 디버그 정보를 포함할지 여부를 나타내는 값을 사용 합니다."
  syntax:
    content: public CompilerParameters (string[] assemblyNames, string outputName, bool includeDebugInformation);
    parameters:
    - id: assemblyNames
      type: System.String[]
      description: "참조할 어셈블리의 이름입니다."
    - id: outputName
      type: System.String
      description: "출력 파일 이름입니다."
    - id: includeDebugInformation
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>디버그 정보를 포함 하려면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 디버그 정보를 제외 합니다."
  overload: System.CodeDom.Compiler.CompilerParameters.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerParameters.CompilerOptions
  id: CompilerOptions
  parent: System.CodeDom.Compiler.CompilerParameters
  langs:
  - csharp
  name: CompilerOptions
  nameWithType: CompilerParameters.CompilerOptions
  fullName: System.CodeDom.Compiler.CompilerParameters.CompilerOptions
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "컴파일러를 호출할 때 사용 하는 선택적인 명령줄 인수를 가져오거나 설정 합니다."
  remarks: "<xref:System.CodeDom.Compiler.ICodeCompiler>일반적으로 명령줄 컴파일러를 호출할 때 명령줄에서이 문자열을 포함 합니다.</xref:System.CodeDom.Compiler.ICodeCompiler> 기본적으로이 속성은 빈 문자열을 포함합니다."
  example:
  - "The following example illustrates using <xref:System.CodeDom.Compiler.CompilerParameters> to specify various compiler settings and options. This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerParameters> class.  \n  \n [!code-cpp[CompilerParametersExample#2](~/add/codesnippet/cpp/p-system.codedom.compile_14_1.cpp)]\n [!code-cs[CompilerParametersExample#2](~/add/codesnippet/csharp/p-system.codedom.compile_14_1.cs)]\n [!code-vb[CompilerParametersExample#2](~/add/codesnippet/visualbasic/p-system.codedom.compile_14_1.vb)]"
  syntax:
    content: public string CompilerOptions { get; set; }
    return:
      type: System.String
      description: "컴파일러에 대 한 추가 명령줄 인수입니다."
  overload: System.CodeDom.Compiler.CompilerParameters.CompilerOptions*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerParameters.CoreAssemblyFileName
  id: CoreAssemblyFileName
  parent: System.CodeDom.Compiler.CompilerParameters
  langs:
  - csharp
  name: CoreAssemblyFileName
  nameWithType: CompilerParameters.CoreAssemblyFileName
  fullName: System.CodeDom.Compiler.CompilerParameters.CoreAssemblyFileName
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "코어 또는 표준 어셈블리와 같은 기본 형식을 포함 하는 이름을 가져오거나 설정 합니다. <xref:System.Object>, <xref:System.String>, 또는 <xref:System.Int32>.</xref:System.Int32> </xref:System.String> </xref:System.Object>"
  remarks: "이 속성의 값은 빈 문자열 하는 경우 또는 `null`, 컴파일러는 기본 핵심 어셈블리를 사용 합니다. 컴파일러 버전에 따라 기본 핵심 어셈블리가 mscorlib.dll 또는 System.Runtime.dll 프레임 워크 디렉터리 또는 참조 어셈블리 디렉터리에 수 있습니다. 이 속성의 값에 비어 있지 않으면 코드 문서 개체 모델 (CodeDOM) 명시적으로 지정된 된 어셈블리 참조 및이 컴파일러 옵션을 사용 하면 컴파일하는 동안 모든 어셈블리를 암시적으로 참조 하지 컴파일러가 내보냅니다... 컴파일러에 의해 암시적으로 코어 또는 표준 어셈블리를 참조 하는 기본에 대 한 자체적으로이 속성을 사용할 수 있습니다. 암시적으로 어셈블리를 또한 코어 또는 표준 어셈블리를 참조 하는 컴파일러에 대 한이 옵션을 사용 하 여 필요할 수 있습니다에 추가 항목이 지정 하는 <xref:System.CodeDom.Compiler.CompilerParameters.ReferencedAssemblies%2A?displayProperty=fullName>속성.</xref:System.CodeDom.Compiler.CompilerParameters.ReferencedAssemblies%2A?displayProperty=fullName>      > [!NOTE] >는 <xref:System.CodeDom.Compiler.ICodeCompiler>또는 <xref:System.CodeDom.Compiler.CodeDomProvider>구현에서이 속성을 무시 하도록 선택할 수 있습니다.</xref:System.CodeDom.Compiler.CodeDomProvider> </xref:System.CodeDom.Compiler.ICodeCompiler>"
  syntax:
    content: public string CoreAssemblyFileName { get; set; }
    return:
      type: System.String
      description: "기본 형식을 포함 하는 핵심 어셈블리의 이름입니다."
  overload: System.CodeDom.Compiler.CompilerParameters.CoreAssemblyFileName*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerParameters.EmbeddedResources
  id: EmbeddedResources
  parent: System.CodeDom.Compiler.CompilerParameters
  langs:
  - csharp
  name: EmbeddedResources
  nameWithType: CompilerParameters.EmbeddedResources
  fullName: System.CodeDom.Compiler.CompilerParameters.EmbeddedResources
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "어셈블리 출력을 컴파일하는 경우를 포함 하려면.NET Framework 리소스 파일을 가져옵니다."
  remarks: "포함된 리소스는 생성된 어셈블리 출력 파일에 작성 됩니다. 이 속성을 통해 파일을 포함 하는 비슷합니다는 `/resource` 다양 한.NET Framework 컴파일러에서 지 원하는 명령줄 인수입니다.       일부 컴파일러는.NET Framework 리소스 파일, 지원 <xref:System.CodeDom.Compiler.ICodeGenerator.Supports%2A> <xref:System.CodeDom.Compiler.GeneratorSupport>.</xref:System.CodeDom.Compiler.GeneratorSupport> 플래그로 메서드</xref:System.CodeDom.Compiler.ICodeGenerator.Supports%2A> 를 호출 하 여이 지원에 대 한 테스트 해야 하므로       하나 이상의.NET Framework 리소스 파일 경로를 반환 된 추가 <xref:System.Collections.Specialized.StringCollection>컴파일된 어셈블리에서 파일 리소스를 포함 하려면.</xref:System.Collections.Specialized.StringCollection> 컴파일 오류;에서 중복 또는 잘못 된 파일 경로 결과 추가 각 문자열 유효한.NET Framework 리소스 파일에 고유한 경로 지정 하는지 확인 합니다.       EmbeddedResources; 어셈블리에 대 한 기본값 또는 중립 문화권.NET Framework 리소스를 포함 하는를 사용 하 여 사용 하 여는 <xref:System.CodeDom.Compiler.CompilerParameters.LinkedResources%2A>위성 어셈블리의.NET Framework 리소스를 참조 하는 속성.</xref:System.CodeDom.Compiler.CompilerParameters.LinkedResources%2A>"
  example:
  - "The following example illustrates using <xref:System.CodeDom.Compiler.CompilerParameters> to specify various compiler settings and options. This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerParameters> class.  \n  \n [!code-cpp[CompilerParametersExample#2](~/add/codesnippet/cpp/p-system.codedom.compile_7_1.cpp)]\n [!code-cs[CompilerParametersExample#2](~/add/codesnippet/csharp/p-system.codedom.compile_7_1.cs)]\n [!code-vb[CompilerParametersExample#2](~/add/codesnippet/visualbasic/p-system.codedom.compile_7_1.vb)]"
  syntax:
    content: public System.Collections.Specialized.StringCollection EmbeddedResources { get; }
    return:
      type: System.Collections.Specialized.StringCollection
      description: ".NET Framework에 포함할 리소스를 생성된 된 어셈블리의 파일 경로가 포함 된 컬렉션입니다."
  overload: System.CodeDom.Compiler.CompilerParameters.EmbeddedResources*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerParameters.Evidence
  id: Evidence
  parent: System.CodeDom.Compiler.CompilerParameters
  langs:
  - csharp
  name: Evidence
  nameWithType: CompilerParameters.Evidence
  fullName: System.CodeDom.Compiler.CompilerParameters.Evidence
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "컴파일된 어셈블리를 허용 하는 보안 정책 권한을 나타내는 증거 개체를 지정 합니다."
  syntax:
    content: public System.Security.Policy.Evidence Evidence { get; set; }
    return:
      type: System.Security.Policy.Evidence
      description: "컴파일된 어셈블리를 허용 하는 보안 정책 권한을 나타내는 개체입니다."
  overload: System.CodeDom.Compiler.CompilerParameters.Evidence*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerParameters.GenerateExecutable
  id: GenerateExecutable
  parent: System.CodeDom.Compiler.CompilerParameters
  langs:
  - csharp
  name: GenerateExecutable
  nameWithType: CompilerParameters.GenerateExecutable
  fullName: System.CodeDom.Compiler.CompilerParameters.GenerateExecutable
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "실행 파일의 생성 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "이 속성의 값이 `false`, DLL이 생성 됩니다. 기본적으로이 속성의 값은 `false`합니다."
  example:
  - "The following example illustrates using <xref:System.CodeDom.Compiler.CompilerParameters> to specify various compiler settings and options. This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerParameters> class.  \n  \n [!code-cpp[CompilerParametersExample#2](~/add/codesnippet/cpp/p-system.codedom.compile_8_1.cpp)]\n [!code-cs[CompilerParametersExample#2](~/add/codesnippet/csharp/p-system.codedom.compile_8_1.cs)]\n [!code-vb[CompilerParametersExample#2](~/add/codesnippet/visualbasic/p-system.codedom.compile_8_1.vb)]"
  syntax:
    content: public bool GenerateExecutable { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>실행 파일이 생성 되어야 하면; 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.CodeDom.Compiler.CompilerParameters.GenerateExecutable*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerParameters.GenerateInMemory
  id: GenerateInMemory
  parent: System.CodeDom.Compiler.CompilerParameters
  langs:
  - csharp
  name: GenerateInMemory
  nameWithType: CompilerParameters.GenerateInMemory
  fullName: System.CodeDom.Compiler.CompilerParameters.GenerateInMemory
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "메모리에서 출력 생성 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: ''
  example:
  - "The following example illustrates using <xref:System.CodeDom.Compiler.CompilerParameters> to specify various compiler settings and options. This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerParameters> class.  \n  \n [!code-cpp[CompilerParametersExample#2](~/add/codesnippet/cpp/p-system.codedom.compile_1_1.cpp)]\n [!code-cs[CompilerParametersExample#2](~/add/codesnippet/csharp/p-system.codedom.compile_1_1.cs)]\n [!code-vb[CompilerParametersExample#2](~/add/codesnippet/visualbasic/p-system.codedom.compile_1_1.vb)]"
  syntax:
    content: public bool GenerateInMemory { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>컴파일러는 메모리에 출력을 생성 해야 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.CodeDom.Compiler.CompilerParameters.GenerateInMemory*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerParameters.IncludeDebugInformation
  id: IncludeDebugInformation
  parent: System.CodeDom.Compiler.CompilerParameters
  langs:
  - csharp
  name: IncludeDebugInformation
  nameWithType: CompilerParameters.IncludeDebugInformation
  fullName: System.CodeDom.Compiler.CompilerParameters.IncludeDebugInformation
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "컴파일된 실행 파일에 디버그 정보를 포함할지 여부를 나타내는 값을 가져오거나 설정 합니다."
  syntax:
    content: public bool IncludeDebugInformation { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>디버그 정보 생성 되어야 하면; 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.CodeDom.Compiler.CompilerParameters.IncludeDebugInformation*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerParameters.LinkedResources
  id: LinkedResources
  parent: System.CodeDom.Compiler.CompilerParameters
  langs:
  - csharp
  name: LinkedResources
  nameWithType: CompilerParameters.LinkedResources
  fullName: System.CodeDom.Compiler.CompilerParameters.LinkedResources
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "현재 원본에서 참조 되는.NET Framework 리소스 파일을 가져옵니다."
  remarks: "링크 된 리소스 파일에 어셈블리를 어셈블리의 실제 리소스를 포함 하지 않고.NET Framework 리소스를 참조할 수 있습니다. 이 속성을 통해 파일을 참조 하는 비슷합니다는 `/linkresource` 다양 한.NET Framework 컴파일러에서 지 원하는 명령줄 인수입니다.       일부 컴파일러는.NET Framework 리소스 파일, 지원 <xref:System.CodeDom.Compiler.ICodeGenerator.Supports%2A> <xref:System.CodeDom.Compiler.GeneratorSupport>.</xref:System.CodeDom.Compiler.GeneratorSupport> 플래그로 메서드</xref:System.CodeDom.Compiler.ICodeGenerator.Supports%2A> 를 호출 하 여이 지원에 대 한 테스트 해야 하므로       하나 이상의.NET Framework 리소스 파일 경로를 반환 된 추가 <xref:System.Collections.Specialized.StringCollection>컴파일된 어셈블리에서 리소스에 대 한 링크를.</xref:System.Collections.Specialized.StringCollection> 컴파일 오류;에서 중복 또는 잘못 된 파일 경로 결과 추가 각 문자열 유효한.NET Framework 리소스 파일에 고유한 경로 지정 하는지 확인 합니다.       LinkedResources를 사용 하 여 특정 문화권;에 대 한 지역화 된 위성 어셈블리의.NET Framework 리소스를 참조 합니다. 사용 하 여는 <xref:System.CodeDom.Compiler.CompilerParameters.EmbeddedResources%2A>컴파일된 어셈블리에 리소스를 포함 하는 속성.</xref:System.CodeDom.Compiler.CompilerParameters.EmbeddedResources%2A>"
  example:
  - "The following example illustrates using <xref:System.CodeDom.Compiler.CompilerParameters> to specify various compiler settings and options. This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerParameters> class.  \n  \n [!code-cpp[CompilerParametersExample#2](~/add/codesnippet/cpp/p-system.codedom.compile_2_1.cpp)]\n [!code-cs[CompilerParametersExample#2](~/add/codesnippet/csharp/p-system.codedom.compile_2_1.cs)]\n [!code-vb[CompilerParametersExample#2](~/add/codesnippet/visualbasic/p-system.codedom.compile_2_1.vb)]"
  syntax:
    content: public System.Collections.Specialized.StringCollection LinkedResources { get; }
    return:
      type: System.Collections.Specialized.StringCollection
      description: "원본에 의해 참조 되는.NET Framework 리소스의 파일 경로가 포함 된 컬렉션입니다."
  overload: System.CodeDom.Compiler.CompilerParameters.LinkedResources*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerParameters.MainClass
  id: MainClass
  parent: System.CodeDom.Compiler.CompilerParameters
  langs:
  - csharp
  name: MainClass
  nameWithType: CompilerParameters.MainClass
  fullName: System.CodeDom.Compiler.CompilerParameters.MainClass
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "기본 클래스의 이름을 가져오거나 설정 합니다."
  remarks: "프로그램에 대 한 진입점을 포함 하는 주 클래스입니다."
  example:
  - "The following example illustrates using <xref:System.CodeDom.Compiler.CompilerParameters> to specify various compiler settings and options. This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerParameters> class.  \n  \n [!code-cpp[CompilerParametersExample#2](~/add/codesnippet/cpp/p-system.codedom.compile_13_1.cpp)]\n [!code-cs[CompilerParametersExample#2](~/add/codesnippet/csharp/p-system.codedom.compile_13_1.cs)]\n [!code-vb[CompilerParametersExample#2](~/add/codesnippet/visualbasic/p-system.codedom.compile_13_1.vb)]"
  syntax:
    content: public string MainClass { get; set; }
    return:
      type: System.String
      description: "기본 클래스의 이름입니다."
  overload: System.CodeDom.Compiler.CompilerParameters.MainClass*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerParameters.OutputAssembly
  id: OutputAssembly
  parent: System.CodeDom.Compiler.CompilerParameters
  langs:
  - csharp
  name: OutputAssembly
  nameWithType: CompilerParameters.OutputAssembly
  fullName: System.CodeDom.Compiler.CompilerParameters.OutputAssembly
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "출력 어셈블리의 이름을 가져오거나 설정 합니다."
  remarks: ''
  example:
  - "The following example illustrates using <xref:System.CodeDom.Compiler.CompilerParameters> to specify various compiler settings and options. This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerParameters> class.  \n  \n [!code-cpp[CompilerParametersExample#2](~/add/codesnippet/cpp/p-system.codedom.compile_6_1.cpp)]\n [!code-cs[CompilerParametersExample#2](~/add/codesnippet/csharp/p-system.codedom.compile_6_1.cs)]\n [!code-vb[CompilerParametersExample#2](~/add/codesnippet/visualbasic/p-system.codedom.compile_6_1.vb)]"
  syntax:
    content: public string OutputAssembly { get; set; }
    return:
      type: System.String
      description: "출력 어셈블리의 이름입니다."
  overload: System.CodeDom.Compiler.CompilerParameters.OutputAssembly*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerParameters.ReferencedAssemblies
  id: ReferencedAssemblies
  parent: System.CodeDom.Compiler.CompilerParameters
  langs:
  - csharp
  name: ReferencedAssemblies
  nameWithType: CompilerParameters.ReferencedAssemblies
  fullName: System.CodeDom.Compiler.CompilerParameters.ReferencedAssemblies
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "현재 프로젝트에서 참조 어셈블리를 가져옵니다."
  remarks: "문자열 컬렉션을 구성 하거나 현재 프로젝트에서 참조 어셈블리를 포함 해야 합니다. 반환 된 어셈블리 파일 이름을 추가 <xref:System.Collections.Specialized.StringCollection>를 어셈블리 매니페스트에 가져온 현재 프로젝트에 어셈블리 유형 정보를 참조 합니다.</xref:System.Collections.Specialized.StringCollection>"
  example:
  - "The following example illustrates using <xref:System.CodeDom.Compiler.CompilerParameters> to specify various compiler settings and options. This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerParameters> class.  \n  \n [!code-cpp[CompilerParametersExample#2](~/add/codesnippet/cpp/p-system.codedom.compile_9_1.cpp)]\n [!code-cs[CompilerParametersExample#2](~/add/codesnippet/csharp/p-system.codedom.compile_9_1.cs)]\n [!code-vb[CompilerParametersExample#2](~/add/codesnippet/visualbasic/p-system.codedom.compile_9_1.vb)]"
  syntax:
    content: public System.Collections.Specialized.StringCollection ReferencedAssemblies { get; }
    return:
      type: System.Collections.Specialized.StringCollection
      description: "컴파일할 소스를 참조 하는 어셈블리 이름을 포함 하는 컬렉션입니다."
  overload: System.CodeDom.Compiler.CompilerParameters.ReferencedAssemblies*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerParameters.TempFiles
  id: TempFiles
  parent: System.CodeDom.Compiler.CompilerParameters
  langs:
  - csharp
  name: TempFiles
  nameWithType: CompilerParameters.TempFiles
  fullName: System.CodeDom.Compiler.CompilerParameters.TempFiles
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "임시 파일을 포함 하는 컬렉션을 가져오거나 설정 합니다."
  remarks: "컬렉션에서 임시 파일이 유지 되거나 값에 따라 컴파일 작업이 완료 될 때 삭제는 <xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A>컬렉션에서 속성이.</xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A> <xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A>에서는 컬렉션을 사용 하 여 만든 경우 속성은 설정는 <xref:System.CodeDom.Compiler.TempFileCollection.%23ctor%28System.String%2CSystem.Boolean%29>생성자는 `keepFiles` 매개 변수 설정 `true`.</xref:System.CodeDom.Compiler.TempFileCollection.%23ctor%28System.String%2CSystem.Boolean%29> </xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A>      > [!NOTE] >이 클래스는 모든 멤버에 적용 되는 클래스 수준에 상속 요청과 링크 요청을 포함 합니다. A <xref:System.Security.SecurityException>직접 실행 호출자 또는 파생된 클래스 중 하나에 완전 신뢰 권한이 없는 경우에 throw 됩니다.</xref:System.Security.SecurityException> 보안 요청에 대 한 세부 정보를 참조 하십시오. [링크 요청](~/add/includes/ajax-current-ext-md.md) 및 [상속 요청](http://msdn.microsoft.com/en-us/28b9adbb-8f08-4f10-b856-dbf59eb932d9)합니다."
  example:
  - "The following example illustrates using <xref:System.CodeDom.Compiler.CompilerParameters> to specify various compiler settings and options. This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerParameters> class.  \n  \n [!code-cpp[CompilerParametersExample#2](~/add/codesnippet/cpp/p-system.codedom.compile_4_1.cpp)]\n [!code-cs[CompilerParametersExample#2](~/add/codesnippet/csharp/p-system.codedom.compile_4_1.cs)]\n [!code-vb[CompilerParametersExample#2](~/add/codesnippet/visualbasic/p-system.codedom.compile_4_1.vb)]"
  syntax:
    content: public System.CodeDom.Compiler.TempFileCollection TempFiles { get; set; }
    return:
      type: System.CodeDom.Compiler.TempFileCollection
      description: "임시 파일을 포함 하는 컬렉션입니다."
  overload: System.CodeDom.Compiler.CompilerParameters.TempFiles*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerParameters.TreatWarningsAsErrors
  id: TreatWarningsAsErrors
  parent: System.CodeDom.Compiler.CompilerParameters
  langs:
  - csharp
  name: TreatWarningsAsErrors
  nameWithType: CompilerParameters.TreatWarningsAsErrors
  fullName: System.CodeDom.Compiler.CompilerParameters.TreatWarningsAsErrors
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "경고를 오류로 처리할지 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: ''
  example:
  - "The following example illustrates using <xref:System.CodeDom.Compiler.CompilerParameters> to specify various compiler settings and options. This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerParameters> class.  \n  \n [!code-cpp[CompilerParametersExample#2](~/add/codesnippet/cpp/p-system.codedom.compile_5_1.cpp)]\n [!code-cs[CompilerParametersExample#2](~/add/codesnippet/csharp/p-system.codedom.compile_5_1.cs)]\n [!code-vb[CompilerParametersExample#2](~/add/codesnippet/visualbasic/p-system.codedom.compile_5_1.vb)]"
  syntax:
    content: public bool TreatWarningsAsErrors { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경고를 오류로 처리 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.CodeDom.Compiler.CompilerParameters.TreatWarningsAsErrors*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerParameters.UserToken
  id: UserToken
  parent: System.CodeDom.Compiler.CompilerParameters
  langs:
  - csharp
  name: UserToken
  nameWithType: CompilerParameters.UserToken
  fullName: System.CodeDom.Compiler.CompilerParameters.UserToken
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "컴파일러 프로세스를 만들 때 사용할 사용자 토큰을 가져오거나 설정 합니다."
  syntax:
    content: public IntPtr UserToken { get; set; }
    return:
      type: System.IntPtr
      description: "사용 하도록 사용자 토큰입니다."
  overload: System.CodeDom.Compiler.CompilerParameters.UserToken*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerParameters.WarningLevel
  id: WarningLevel
  parent: System.CodeDom.Compiler.CompilerParameters
  langs:
  - csharp
  name: WarningLevel
  nameWithType: CompilerParameters.WarningLevel
  fullName: System.CodeDom.Compiler.CompilerParameters.WarningLevel
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "컴파일러는 컴파일이 중단 경고 수준을 설정 하거나 가져옵니다."
  remarks: ''
  example:
  - "The following example illustrates using <xref:System.CodeDom.Compiler.CompilerParameters> to specify various compiler settings and options. This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerParameters> class.  \n  \n [!code-cpp[CompilerParametersExample#2](~/add/codesnippet/cpp/p-system.codedom.compile_11_1.cpp)]\n [!code-cs[CompilerParametersExample#2](~/add/codesnippet/csharp/p-system.codedom.compile_11_1.cs)]\n [!code-vb[CompilerParametersExample#2](~/add/codesnippet/visualbasic/p-system.codedom.compile_11_1.vb)]"
  syntax:
    content: public int WarningLevel { get; set; }
    return:
      type: System.Int32
      description: "컴파일러에 컴파일이 중단 되는 경고 수준입니다."
  overload: System.CodeDom.Compiler.CompilerParameters.WarningLevel*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerParameters.Win32Resource
  id: Win32Resource
  parent: System.CodeDom.Compiler.CompilerParameters
  langs:
  - csharp
  name: Win32Resource
  nameWithType: CompilerParameters.Win32Resource
  fullName: System.CodeDom.Compiler.CompilerParameters.Win32Resource
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "컴파일된 어셈블리에 연결 하는 Win32 리소스 파일의 파일 이름을 가져오거나 설정 합니다."
  remarks: "이 속성을 통해 파일에 연결 하는 비슷합니다는 `/winres` 및 `/winresource` 다양 한.NET Framework 컴파일러에서 지 원하는 명령줄 인수입니다.       Win32Resource를 사용 하 여 어셈블리에 Win32 리소스 파일을 컴파일합니다. 사용 하 여 <xref:System.CodeDom.Compiler.CompilerParameters.EmbeddedResources%2A>또는 <xref:System.CodeDom.Compiler.CompilerParameters.LinkedResources%2A>를.NET Framework 리소스 파일을 사용 하 여 컴파일합니다.</xref:System.CodeDom.Compiler.CompilerParameters.LinkedResources%2A> </xref:System.CodeDom.Compiler.CompilerParameters.EmbeddedResources%2A>       일부 컴파일러는 Win32 리소스 파일, 지원 <xref:System.CodeDom.Compiler.ICodeGenerator.Supports%2A> <xref:System.CodeDom.Compiler.GeneratorSupport>.</xref:System.CodeDom.Compiler.GeneratorSupport> 플래그로 메서드</xref:System.CodeDom.Compiler.ICodeGenerator.Supports%2A> 를 호출 하 여 리소스 파일을 연결 하기 전에이 지원에 대 한 코드 생성기를 테스트 해야 하므로"
  syntax:
    content: public string Win32Resource { get; set; }
    return:
      type: System.String
      description: "컴파일된 어셈블리에 연결할 수는 Win32 리소스 파일."
  overload: System.CodeDom.Compiler.CompilerParameters.Win32Resource*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.CodeDom.Compiler.CompilerParameters.#ctor
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: CompilerParameters()
  nameWithType: CompilerParameters.CompilerParameters()
  fullName: System.CodeDom.Compiler.CompilerParameters.CompilerParameters()
- uid: System.CodeDom.Compiler.CompilerParameters.#ctor(System.String[])
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: CompilerParameters(String[])
  nameWithType: CompilerParameters.CompilerParameters(String[])
  fullName: System.CodeDom.Compiler.CompilerParameters.CompilerParameters(String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.CodeDom.Compiler.CompilerParameters.#ctor(System.String[],System.String)
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: CompilerParameters(String[],String)
  nameWithType: CompilerParameters.CompilerParameters(String[],String)
  fullName: System.CodeDom.Compiler.CompilerParameters.CompilerParameters(String[],String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.CodeDom.Compiler.CompilerParameters.#ctor(System.String[],System.String,System.Boolean)
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: CompilerParameters(String[],String,Boolean)
  nameWithType: CompilerParameters.CompilerParameters(String[],String,Boolean)
  fullName: System.CodeDom.Compiler.CompilerParameters.CompilerParameters(String[],String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.CodeDom.Compiler.CompilerParameters.CompilerOptions
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: CompilerOptions
  nameWithType: CompilerParameters.CompilerOptions
  fullName: System.CodeDom.Compiler.CompilerParameters.CompilerOptions
- uid: System.CodeDom.Compiler.CompilerParameters.CoreAssemblyFileName
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: CoreAssemblyFileName
  nameWithType: CompilerParameters.CoreAssemblyFileName
  fullName: System.CodeDom.Compiler.CompilerParameters.CoreAssemblyFileName
- uid: System.CodeDom.Compiler.CompilerParameters.EmbeddedResources
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: EmbeddedResources
  nameWithType: CompilerParameters.EmbeddedResources
  fullName: System.CodeDom.Compiler.CompilerParameters.EmbeddedResources
- uid: System.Collections.Specialized.StringCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: StringCollection
  nameWithType: StringCollection
  fullName: System.Collections.Specialized.StringCollection
- uid: System.CodeDom.Compiler.CompilerParameters.Evidence
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: Evidence
  nameWithType: CompilerParameters.Evidence
  fullName: System.CodeDom.Compiler.CompilerParameters.Evidence
- uid: System.Security.Policy.Evidence
  parent: System.Security.Policy
  isExternal: false
  name: Evidence
  nameWithType: Evidence
  fullName: System.Security.Policy.Evidence
- uid: System.CodeDom.Compiler.CompilerParameters.GenerateExecutable
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: GenerateExecutable
  nameWithType: CompilerParameters.GenerateExecutable
  fullName: System.CodeDom.Compiler.CompilerParameters.GenerateExecutable
- uid: System.CodeDom.Compiler.CompilerParameters.GenerateInMemory
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: GenerateInMemory
  nameWithType: CompilerParameters.GenerateInMemory
  fullName: System.CodeDom.Compiler.CompilerParameters.GenerateInMemory
- uid: System.CodeDom.Compiler.CompilerParameters.IncludeDebugInformation
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: IncludeDebugInformation
  nameWithType: CompilerParameters.IncludeDebugInformation
  fullName: System.CodeDom.Compiler.CompilerParameters.IncludeDebugInformation
- uid: System.CodeDom.Compiler.CompilerParameters.LinkedResources
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: LinkedResources
  nameWithType: CompilerParameters.LinkedResources
  fullName: System.CodeDom.Compiler.CompilerParameters.LinkedResources
- uid: System.CodeDom.Compiler.CompilerParameters.MainClass
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: MainClass
  nameWithType: CompilerParameters.MainClass
  fullName: System.CodeDom.Compiler.CompilerParameters.MainClass
- uid: System.CodeDom.Compiler.CompilerParameters.OutputAssembly
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: OutputAssembly
  nameWithType: CompilerParameters.OutputAssembly
  fullName: System.CodeDom.Compiler.CompilerParameters.OutputAssembly
- uid: System.CodeDom.Compiler.CompilerParameters.ReferencedAssemblies
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: ReferencedAssemblies
  nameWithType: CompilerParameters.ReferencedAssemblies
  fullName: System.CodeDom.Compiler.CompilerParameters.ReferencedAssemblies
- uid: System.CodeDom.Compiler.CompilerParameters.TempFiles
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: TempFiles
  nameWithType: CompilerParameters.TempFiles
  fullName: System.CodeDom.Compiler.CompilerParameters.TempFiles
- uid: System.CodeDom.Compiler.TempFileCollection
  parent: System.CodeDom.Compiler
  isExternal: false
  name: TempFileCollection
  nameWithType: TempFileCollection
  fullName: System.CodeDom.Compiler.TempFileCollection
- uid: System.CodeDom.Compiler.CompilerParameters.TreatWarningsAsErrors
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: TreatWarningsAsErrors
  nameWithType: CompilerParameters.TreatWarningsAsErrors
  fullName: System.CodeDom.Compiler.CompilerParameters.TreatWarningsAsErrors
- uid: System.CodeDom.Compiler.CompilerParameters.UserToken
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: UserToken
  nameWithType: CompilerParameters.UserToken
  fullName: System.CodeDom.Compiler.CompilerParameters.UserToken
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.CodeDom.Compiler.CompilerParameters.WarningLevel
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: WarningLevel
  nameWithType: CompilerParameters.WarningLevel
  fullName: System.CodeDom.Compiler.CompilerParameters.WarningLevel
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.CodeDom.Compiler.CompilerParameters.Win32Resource
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: Win32Resource
  nameWithType: CompilerParameters.Win32Resource
  fullName: System.CodeDom.Compiler.CompilerParameters.Win32Resource
- uid: System.CodeDom.Compiler.CompilerParameters.#ctor*
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: CompilerParameters
  nameWithType: CompilerParameters.CompilerParameters
- uid: System.CodeDom.Compiler.CompilerParameters.CompilerOptions*
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: CompilerOptions
  nameWithType: CompilerParameters.CompilerOptions
- uid: System.CodeDom.Compiler.CompilerParameters.CoreAssemblyFileName*
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: CoreAssemblyFileName
  nameWithType: CompilerParameters.CoreAssemblyFileName
- uid: System.CodeDom.Compiler.CompilerParameters.EmbeddedResources*
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: EmbeddedResources
  nameWithType: CompilerParameters.EmbeddedResources
- uid: System.CodeDom.Compiler.CompilerParameters.Evidence*
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: Evidence
  nameWithType: CompilerParameters.Evidence
- uid: System.CodeDom.Compiler.CompilerParameters.GenerateExecutable*
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: GenerateExecutable
  nameWithType: CompilerParameters.GenerateExecutable
- uid: System.CodeDom.Compiler.CompilerParameters.GenerateInMemory*
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: GenerateInMemory
  nameWithType: CompilerParameters.GenerateInMemory
- uid: System.CodeDom.Compiler.CompilerParameters.IncludeDebugInformation*
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: IncludeDebugInformation
  nameWithType: CompilerParameters.IncludeDebugInformation
- uid: System.CodeDom.Compiler.CompilerParameters.LinkedResources*
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: LinkedResources
  nameWithType: CompilerParameters.LinkedResources
- uid: System.CodeDom.Compiler.CompilerParameters.MainClass*
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: MainClass
  nameWithType: CompilerParameters.MainClass
- uid: System.CodeDom.Compiler.CompilerParameters.OutputAssembly*
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: OutputAssembly
  nameWithType: CompilerParameters.OutputAssembly
- uid: System.CodeDom.Compiler.CompilerParameters.ReferencedAssemblies*
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: ReferencedAssemblies
  nameWithType: CompilerParameters.ReferencedAssemblies
- uid: System.CodeDom.Compiler.CompilerParameters.TempFiles*
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: TempFiles
  nameWithType: CompilerParameters.TempFiles
- uid: System.CodeDom.Compiler.CompilerParameters.TreatWarningsAsErrors*
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: TreatWarningsAsErrors
  nameWithType: CompilerParameters.TreatWarningsAsErrors
- uid: System.CodeDom.Compiler.CompilerParameters.UserToken*
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: UserToken
  nameWithType: CompilerParameters.UserToken
- uid: System.CodeDom.Compiler.CompilerParameters.WarningLevel*
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: WarningLevel
  nameWithType: CompilerParameters.WarningLevel
- uid: System.CodeDom.Compiler.CompilerParameters.Win32Resource*
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: Win32Resource
  nameWithType: CompilerParameters.Win32Resource
