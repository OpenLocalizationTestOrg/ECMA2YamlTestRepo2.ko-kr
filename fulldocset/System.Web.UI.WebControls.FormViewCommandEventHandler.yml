### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.FormViewCommandEventHandler
  id: FormViewCommandEventHandler
  langs:
  - csharp
  name: FormViewCommandEventHandler
  nameWithType: FormViewCommandEventHandler
  fullName: System.Web.UI.WebControls.FormViewCommandEventHandler
  type: Delegate
  summary: "처리 하는 메서드를 나타냅니다는 <xref href=&quot;System.Web.UI.WebControls.FormView.ItemCommand&quot;> </xref> 의 이벤트는 <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> 제어 합니다. 이 클래스는 상속 될 수 없습니다."
  remarks: "<xref:System.Web.UI.WebControls.FormView.ItemCommand>이벤트는에 있는 단추는 <xref:System.Web.UI.WebControls.FormView>컨트롤을 클릭 합니다.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView.ItemCommand> 이 옵션을 사용 하면이 이벤트가 발생할 때마다 사용자 지정 루틴을 수행 하는 이벤트 처리 메서드를 제공할 수 있습니다.       내에서 단추는 <xref:System.Web.UI.WebControls.FormView>컨트롤 컨트롤의 기본 기능 중 일부를 호출할 수도 있습니다.</xref:System.Web.UI.WebControls.FormView> 이러한 작업 중 하나를 수행 하려면 설정는 `CommandName` 다음 표에 있는 값 중 하나에 있는 단추의 속성입니다.      | CommandName 값 | 설명 |   |-----------------------|-----------------|   |&quot; 취소 &quot;| 편집 또는 삽입 작업을 취소 하 고 보냅니다는 <xref:System.Web.UI.WebControls.FormView>컨트롤의 모드 및 지정 된을 <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A>속성.</xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> </xref:System.Web.UI.WebControls.FormView> <xref:System.Web.UI.WebControls.FormView.ModeChanged>발생 및 <xref:System.Web.UI.WebControls.FormView.ModeChanging>이벤트입니다. |   |&quot; 삭제 &quot;| 현재 레코드를 삭제 합니다.</xref:System.Web.UI.WebControls.FormView.ModeChanging> </xref:System.Web.UI.WebControls.FormView.ModeChanged> <xref:System.Web.UI.WebControls.FormView.ItemDeleted>발생 및 <xref:System.Web.UI.WebControls.FormView.ItemDeleting>이벤트입니다. |   |&quot; 편집 &quot;| 배치는 <xref:System.Web.UI.WebControls.FormView>컨트롤을 편집 모드로.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView.ItemDeleting> </xref:System.Web.UI.WebControls.FormView.ItemDeleted> <xref:System.Web.UI.WebControls.FormView.ModeChanged>발생 및 <xref:System.Web.UI.WebControls.FormView.ModeChanging>이벤트입니다. |   |&quot; 삽입 &quot;| 데이터 소스에 현재 레코드를 삽입 합니다.</xref:System.Web.UI.WebControls.FormView.ModeChanging> </xref:System.Web.UI.WebControls.FormView.ModeChanged> <xref:System.Web.UI.WebControls.FormView.ItemInserted>발생 및 <xref:System.Web.UI.WebControls.FormView.ItemInserting>이벤트입니다. |   |&quot; 새 &quot;| 배치는 <xref:System.Web.UI.WebControls.FormView>컨트롤을 삽입 모드로.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView.ItemInserting> </xref:System.Web.UI.WebControls.FormView.ItemInserted> <xref:System.Web.UI.WebControls.FormView.ModeChanged>발생 및 <xref:System.Web.UI.WebControls.FormView.ModeChanging>이벤트입니다. |   |&quot; 페이지 &quot;| 페이징 작업을 수행 합니다.</xref:System.Web.UI.WebControls.FormView.ModeChanging> </xref:System.Web.UI.WebControls.FormView.ModeChanged> 설정의 `CommandArgument` 단추 &quot;First&quot;, &quot;마지막&quot;를, &quot;다음&quot;, &quot;이전&quot; 또는 페이징 작업의 형식을 지정 하는 페이지 번호를 수행 하려면의 속성입니다. <xref:System.Web.UI.WebControls.FormView.PageIndexChanged>발생 및 <xref:System.Web.UI.WebControls.FormView.PageIndexChanging>이벤트입니다. |   |&quot; 업데이트 &quot;| 데이터 소스에서 현재 레코드를 업데이트 합니다.</xref:System.Web.UI.WebControls.FormView.PageIndexChanging> </xref:System.Web.UI.WebControls.FormView.PageIndexChanged> <xref:System.Web.UI.WebControls.FormView.ItemUpdated>발생 및 <xref:System.Web.UI.WebControls.FormView.ItemUpdating>이벤트입니다. |       하지만 <xref:System.Web.UI.WebControls.FormView.ItemCommand>이벤트는 위의 표에 나열 된 단추를 클릭할 때 발생, 작업에 대 한 테이블에 나열 된 이벤트를 처리 하는 것이 좋습니다.</xref:System.Web.UI.WebControls.FormView.ItemCommand> </xref:System.Web.UI.WebControls.FormView.ItemUpdating> </xref:System.Web.UI.WebControls.FormView.ItemUpdated>       FormViewCommandEventHandler 대리자를 만들 때 이벤트를 처리 하는 메서드를 식별 합니다. 이벤트를 이벤트 처리기를 연결 하려면 대리자의 인스턴스 이벤트에 추가 합니다. 대리자를 제거 하지 않으면 이벤트가 발생할 때마다 이벤트 처리기가 호출 됩니다. 이벤트 처리기 대리자에 대 한 자세한 내용은 참조 [NIB: 이벤트 및 대리자](http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115)합니다."
  example:
  - "The following example demonstrates how to programmatically add a FormViewCommandEventHandler delegate to the <xref:System.Web.UI.WebControls.FormView.ItemCommand> event of a <xref:System.Web.UI.WebControls.FormView> control.  \n  \n [!code-vb[FormViewCommandEventHandler#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_347_1.aspx)]\n [!code-cs[FormViewCommandEventHandler#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_347_1.aspx)]  \n  \n The following example demonstrates how to declaratively add a FormViewCommandEventHandler delegate to the <xref:System.Web.UI.WebControls.FormView.ItemCommand> event of a <xref:System.Web.UI.WebControls.FormView> control.  \n  \n [!code-vb[FormViewCommandEventHandlerDeclarative#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_347_2.aspx)]\n [!code-cs[FormViewCommandEventHandlerDeclarative#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_347_2.aspx)]"
  syntax:
    content: public delegate void FormViewCommandEventHandler(object sender, FormViewCommandEventArgs e);
  inheritance:
  - System.Delegate
  platform:
  - net462
references:
- uid: System.Delegate
  isExternal: false
  name: System.Delegate
