### YamlMime:ManagedReference
items:
- uid: System.Web.Script.Serialization.JavaScriptTypeResolver
  id: JavaScriptTypeResolver
  children:
  - System.Web.Script.Serialization.JavaScriptTypeResolver.#ctor
  - System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType(System.String)
  - System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId(System.Type)
  langs:
  - csharp
  name: JavaScriptTypeResolver
  nameWithType: JavaScriptTypeResolver
  fullName: System.Web.Script.Serialization.JavaScriptTypeResolver
  type: Class
  summary: "사용자 지정 형식 확인자를 구현 하기 위한 추상 기본 클래스를 제공 합니다."
  remarks: "JavaScriptTypeResolver 클래스에 대 한 서비스를 제공 합니다.-관리 되는 변환 형식 정보를 통해는 문자열 값으로는 <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId%2A>메서드.</xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId%2A>      -관리 되는 통해 형식을 적절 한 문자열 값을 확인 합니다.는 <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType%2A>메서드.</xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType%2A>       경우는 <xref:System.Web.Script.Serialization.JavaScriptSerializer>것에 포함할 수도 serialize 된 개체 JSON (JavaScript Notation) 문자열 형식 정보를 포함 하는 값, 개체 사용자 지정 형식을 serialize 합니다.</xref:System.Web.Script.Serialization.JavaScriptSerializer> 역직렬화 하는 동안 <xref:System.Web.Script.Serialization.JavaScriptSerializer>JSON 문자열로 변환 될 수 있습니다 다음이 문자열 값을 적절 한 결정을 관리 하는 참조 입력.</xref:System.Web.Script.Serialization.JavaScriptSerializer>       형식 확인자를 제공 하는 경우는 <xref:System.Web.Script.Serialization.JavaScriptSerializer>인스턴스에서, serializer가 사용 하 여는 <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId%2A>및 <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType%2A>메서드 매핑할 관리 되는 형식 및 문자열 값 사이의 serialization 및 deserialization 프로세스 동안 각각.</xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType%2A> </xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId%2A> </xref:System.Web.Script.Serialization.JavaScriptSerializer>       JavaScriptTypeResolver 클래스는에 대 한 기본 클래스는 <xref:System.Web.Script.Serialization.SimpleTypeResolver>클래스의 관리 되는 형식의 어셈블리 정규화 된 이름을 사용 하는 형식 확인자는 구현을 제공 합니다.</xref:System.Web.Script.Serialization.SimpleTypeResolver>"
  example:
  - "The following example demonstrates how to create a custom type resolver.  \n  \n [!code-vb[System.Web.Script.Serialization.TypeResolver#2](~/add/codesnippet/visualbasic/t-system.web.script.seri_0_1.vb)]\n [!code-cs[System.Web.Script.Serialization.TypeResolver#2](~/add/codesnippet/csharp/t-system.web.script.seri_0_1.cs)]"
  syntax:
    content: public abstract class JavaScriptTypeResolver
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Script.Serialization.JavaScriptTypeResolver.#ctor
  id: '#ctor'
  parent: System.Web.Script.Serialization.JavaScriptTypeResolver
  langs:
  - csharp
  name: JavaScriptTypeResolver()
  nameWithType: JavaScriptTypeResolver.JavaScriptTypeResolver()
  fullName: System.Web.Script.Serialization.JavaScriptTypeResolver.JavaScriptTypeResolver()
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Serialization
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.Script.Serialization.JavaScriptTypeResolver&quot;> </xref> 클래스입니다."
  syntax:
    content: protected JavaScriptTypeResolver ();
    parameters: []
  overload: System.Web.Script.Serialization.JavaScriptTypeResolver.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType(System.String)
  id: ResolveType(System.String)
  parent: System.Web.Script.Serialization.JavaScriptTypeResolver
  langs:
  - csharp
  name: ResolveType(String)
  nameWithType: JavaScriptTypeResolver.ResolveType(String)
  fullName: System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType(String)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Serialization
  summary: "파생된 클래스에서 재정의 되는 경우는 <xref:System.Type>지정 된 형식 이름으로 연결 된 개체입니다.</xref:System.Type>"
  remarks: "유형 해결 프로그램은 연결 된 경우는 <xref:System.Web.Script.Serialization.JavaScriptSerializer>인스턴스, serializer ResolveType 메서드에서는 관리 되는 JSON 형식은 변환할 형식 특정을 결정 하는 JSON 문자열을 반복 하는 경우.</xref:System.Web.Script.Serialization.JavaScriptSerializer>"
  syntax:
    content: public abstract Type ResolveType (string id);
    parameters:
    - id: id
      type: System.String
      description: "관리 되는 형식의 이름입니다."
    return:
      type: System.Type
      description: "<xref:System.Type>지정 된 형식 이름으로 연결 된 개체입니다.</xref:System.Type>"
  overload: System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId(System.Type)
  id: ResolveTypeId(System.Type)
  parent: System.Web.Script.Serialization.JavaScriptTypeResolver
  langs:
  - csharp
  name: ResolveTypeId(Type)
  nameWithType: JavaScriptTypeResolver.ResolveTypeId(Type)
  fullName: System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId(Type)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Serialization
  summary: "파생된 클래스에서 재정의 되 면 지정 된 형식 이름을 반환 <xref:System.Type>개체입니다.</xref:System.Type>"
  remarks: "ResolveTypeId 메서드 중 하나를 반환 하는 경우 `null` 또는 <xref:System.String>, 다음 유형 해결 프로그램 유형을 지원 하지 않습니다.</xref:System.String>"
  syntax:
    content: public abstract string ResolveTypeId (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "해결 될 것으로 관리 되는 형식입니다."
    return:
      type: System.String
      description: "지정 된 관리 되는 형식의 이름입니다."
  overload: System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.Script.Serialization.JavaScriptTypeResolver.#ctor
  parent: System.Web.Script.Serialization.JavaScriptTypeResolver
  isExternal: false
  name: JavaScriptTypeResolver()
  nameWithType: JavaScriptTypeResolver.JavaScriptTypeResolver()
  fullName: System.Web.Script.Serialization.JavaScriptTypeResolver.JavaScriptTypeResolver()
- uid: System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType(System.String)
  parent: System.Web.Script.Serialization.JavaScriptTypeResolver
  isExternal: false
  name: ResolveType(String)
  nameWithType: JavaScriptTypeResolver.ResolveType(String)
  fullName: System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType(String)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId(System.Type)
  parent: System.Web.Script.Serialization.JavaScriptTypeResolver
  isExternal: false
  name: ResolveTypeId(Type)
  nameWithType: JavaScriptTypeResolver.ResolveTypeId(Type)
  fullName: System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId(Type)
- uid: System.Web.Script.Serialization.JavaScriptTypeResolver.#ctor*
  parent: System.Web.Script.Serialization.JavaScriptTypeResolver
  isExternal: false
  name: JavaScriptTypeResolver
  nameWithType: JavaScriptTypeResolver.JavaScriptTypeResolver
- uid: System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType*
  parent: System.Web.Script.Serialization.JavaScriptTypeResolver
  isExternal: false
  name: ResolveType
  nameWithType: JavaScriptTypeResolver.ResolveType
- uid: System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId*
  parent: System.Web.Script.Serialization.JavaScriptTypeResolver
  isExternal: false
  name: ResolveTypeId
  nameWithType: JavaScriptTypeResolver.ResolveTypeId
