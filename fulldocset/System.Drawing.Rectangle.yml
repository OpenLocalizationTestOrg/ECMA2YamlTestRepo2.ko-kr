### YamlMime:ManagedReference
items:
- uid: System.Drawing.Rectangle
  id: Rectangle
  children:
  - System.Drawing.Rectangle.#ctor(System.Drawing.Point,System.Drawing.Size)
  - System.Drawing.Rectangle.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Drawing.Rectangle.Bottom
  - System.Drawing.Rectangle.Ceiling(System.Drawing.RectangleF)
  - System.Drawing.Rectangle.Contains(System.Drawing.Point)
  - System.Drawing.Rectangle.Contains(System.Drawing.Rectangle)
  - System.Drawing.Rectangle.Contains(System.Int32,System.Int32)
  - System.Drawing.Rectangle.Empty
  - System.Drawing.Rectangle.Equals(System.Object)
  - System.Drawing.Rectangle.FromLTRB(System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Drawing.Rectangle.GetHashCode
  - System.Drawing.Rectangle.Height
  - System.Drawing.Rectangle.Inflate(System.Drawing.Size)
  - System.Drawing.Rectangle.Inflate(System.Int32,System.Int32)
  - System.Drawing.Rectangle.Inflate(System.Drawing.Rectangle,System.Int32,System.Int32)
  - System.Drawing.Rectangle.Intersect(System.Drawing.Rectangle)
  - System.Drawing.Rectangle.Intersect(System.Drawing.Rectangle,System.Drawing.Rectangle)
  - System.Drawing.Rectangle.IntersectsWith(System.Drawing.Rectangle)
  - System.Drawing.Rectangle.IsEmpty
  - System.Drawing.Rectangle.Left
  - System.Drawing.Rectangle.Location
  - System.Drawing.Rectangle.Offset(System.Drawing.Point)
  - System.Drawing.Rectangle.Offset(System.Int32,System.Int32)
  - System.Drawing.Rectangle.op_Equality(System.Drawing.Rectangle,System.Drawing.Rectangle)
  - System.Drawing.Rectangle.op_Inequality(System.Drawing.Rectangle,System.Drawing.Rectangle)
  - System.Drawing.Rectangle.Right
  - System.Drawing.Rectangle.Round(System.Drawing.RectangleF)
  - System.Drawing.Rectangle.Size
  - System.Drawing.Rectangle.Top
  - System.Drawing.Rectangle.ToString
  - System.Drawing.Rectangle.Truncate(System.Drawing.RectangleF)
  - System.Drawing.Rectangle.Union(System.Drawing.Rectangle,System.Drawing.Rectangle)
  - System.Drawing.Rectangle.Width
  - System.Drawing.Rectangle.X
  - System.Drawing.Rectangle.Y
  langs:
  - csharp
  name: Rectangle
  nameWithType: Rectangle
  fullName: System.Drawing.Rectangle
  type: Struct
  summary: "사각형의 크기와 위치를 나타내는 네 정수의 집합 저장"
  remarks: "사각형으로 정의 된 해당 <xref:System.Drawing.Rectangle.Width%2A>, <xref:System.Drawing.Rectangle.Height%2A>, 및 왼쪽 위 모퉁이 나타내는 <xref:System.Drawing.Rectangle.Location%2A>속성.</xref:System.Drawing.Rectangle.Location%2A> </xref:System.Drawing.Rectangle.Height%2A> </xref:System.Drawing.Rectangle.Width%2A>       사각형 그리기, 하려면는 <xref:System.Drawing.Graphics>개체 및 <xref:System.Drawing.Pen>개체입니다.</xref:System.Drawing.Pen> </xref:System.Drawing.Graphics> <xref:System.Drawing.Graphics>개체를 제공는 <xref:System.Drawing.Graphics.DrawRectangle%2A>메서드, 및 <xref:System.Drawing.Pen>개체 선의 색 및 너비와 같은 기능을 저장 합니다.</xref:System.Drawing.Pen> </xref:System.Drawing.Graphics.DrawRectangle%2A> </xref:System.Drawing.Graphics> 사각형에 그려지는 단위에 의해 결정 됩니다는 <xref:System.Drawing.Graphics.PageUnit%2A>및 <xref:System.Drawing.Graphics.PageScale%2A>그래픽 속성 그리기에 사용 되는 개체입니다.</xref:System.Drawing.Graphics.PageScale%2A> </xref:System.Drawing.Graphics.PageUnit%2A> 기본 단위는 픽셀입니다.       <xref:System.Drawing.Graphics>개체와 <xref:System.Drawing.Brush>같은 <xref:System.Drawing.SolidBrush>나 <xref:System.Drawing.Drawing2D.LinearGradientBrush>.</xref:System.Drawing.Drawing2D.LinearGradientBrush> </xref:System.Drawing.SolidBrush> </xref:System.Drawing.Brush> 에서 파생 된 개체</xref:System.Drawing.Graphics> 해야 색으로 채워진 사각형을 그리려면 <xref:System.Drawing.Graphics>개체 제공는 <xref:System.Drawing.Graphics.FillRectangle%2A>메서드 및 <xref:System.Drawing.Brush>개체 색 및 채우기 정보를 제공 합니다.</xref:System.Drawing.Brush> </xref:System.Drawing.Graphics.FillRectangle%2A> </xref:System.Drawing.Graphics>       더 많은 고급 셰이프를 사용 하 여 한 <xref:System.Drawing.Region>개체입니다.</xref:System.Drawing.Region>"
  example:
  - "The following example draws a rectangle with its upper-left corner at (10, 10). The rectangle has a width of 100 and a height of 50. The second argument passed to the <xref:System.Drawing.Pen.%23ctor%2A> constructor indicates that the pen width is 5 pixels.  \n  \n When the rectangle is drawn, the pen is centered on the rectangle's boundary. Because the pen width is 5, the sides of the rectangle are drawn 5 pixels wide, such that 1 pixel is drawn on the boundary itself, 2 pixels are drawn on the inside, and 2 pixels are drawn on the outside. For more details on pen alignment, see [How to: Set Pen Width and Alignment](~/add/includes/ajax-current-ext-md.md).  \n  \n The following illustration shows the resulting rectangle. The dotted lines show where the rectangle would have been drawn if the pen width had been one pixel. The enlarged view of the upper-left corner of the rectangle shows that the thick black lines are centered on those dotted lines.  \n  \n ![Pens](~/add/media/pens1.gif \"Pens\")  \n  \n The example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.  \n  \n [!code-vb[System.Drawing.UsingAPen#21](~/add/codesnippet/visualbasic/t-system.drawing.rectangle_1.vb)]\n [!code-cs[System.Drawing.UsingAPen#21](~/add/codesnippet/csharp/t-system.drawing.rectangle_1.cs)]"
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter(typeof(System.Drawing.RectangleConverter))]

      [System.Runtime.InteropServices.ComVisible(true)]

      public struct Rectangle
  inheritance:
  - System.ValueType
  implements: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.#ctor(System.Drawing.Point,System.Drawing.Size)
  id: '#ctor(System.Drawing.Point,System.Drawing.Size)'
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Rectangle(Point,Size)
  nameWithType: Rectangle.Rectangle(Point,Size)
  fullName: System.Drawing.Rectangle.Rectangle(Point,Size)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 클래스 지정 된 위치와 크기를 사용 합니다."
  syntax:
    content: public Rectangle (System.Drawing.Point location, System.Drawing.Size size);
    parameters:
    - id: location
      type: System.Drawing.Point
      description: "A <xref href=&quot;System.Drawing.Point&quot;> </xref> 사각형 영역의 왼쪽 위 모퉁이 나타내는입니다."
    - id: size
      type: System.Drawing.Size
      description: "A <xref href=&quot;System.Drawing.Size&quot;> </xref> 사각형 영역의 높이 너비를 나타내는입니다."
  overload: System.Drawing.Rectangle.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32,System.Int32,System.Int32)'
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Rectangle(Int32,Int32,Int32,Int32)
  nameWithType: Rectangle.Rectangle(Int32,Int32,Int32,Int32)
  fullName: System.Drawing.Rectangle.Rectangle(Int32,Int32,Int32,Int32)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 클래스 지정 된 위치와 크기를 사용 합니다."
  remarks: ''
  example:
  - "The following code example demonstrates the Rectangle, <xref:System.Drawing.Rectangle.Intersect%2A>, <xref:System.Drawing.Rectangle.IsEmpty%2A>, and <xref:System.Drawing.Rectangle.IntersectsWith%2A> members. This example should be used with a Windows Form. Paste this code into a form and call this method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.RectanglesAndPoints#2](~/add/codesnippet/csharp/eee26612-4d30-4e2f-a9c7-_1.cs)]\n [!code-cpp[System.Drawing.RectanglesAndPoints#2](~/add/codesnippet/cpp/eee26612-4d30-4e2f-a9c7-_1.cpp)]\n [!code-vb[System.Drawing.RectanglesAndPoints#2](~/add/codesnippet/visualbasic/eee26612-4d30-4e2f-a9c7-_1.vb)]"
  syntax:
    content: public Rectangle (int x, int y, int width, int height);
    parameters:
    - id: x
      type: System.Int32
      description: "사각형의 왼쪽 위 모퉁이의 x 좌표입니다."
    - id: y
      type: System.Int32
      description: "사각형의 왼쪽 위 모퉁이의 y 좌표입니다."
    - id: width
      type: System.Int32
      description: "사각형의 너비입니다."
    - id: height
      type: System.Int32
      description: "사각형의 높이입니다."
  overload: System.Drawing.Rectangle.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.Bottom
  id: Bottom
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Bottom
  nameWithType: Rectangle.Bottom
  fullName: System.Drawing.Rectangle.Bottom
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "합계인 y 좌표를 가져옵니다는 <> </> *> 및 <> </> *> 속성 값이 <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 구조입니다."
  remarks: "아래 속성의 값에 <xref:System.Drawing.Rectangle> <xref:System.Drawing.Rectangle>.</xref:System.Drawing.Rectangle> 에 포함 되지 않은</xref:System.Drawing.Rectangle> 의 아래쪽 가장자리에 첫 번째 요소의 y 좌표를 나타냅니다."
  syntax:
    content: public int Bottom { get; }
    return:
      type: System.Int32
      description: "합을 나타내는 y-좌표 <> </> *> 및 <> </> *>이 <xref href=&quot;System.Drawing.Rectangle&quot;> </xref>합니다."
  overload: System.Drawing.Rectangle.Bottom*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.Ceiling(System.Drawing.RectangleF)
  id: Ceiling(System.Drawing.RectangleF)
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Ceiling(RectangleF)
  nameWithType: Rectangle.Ceiling(RectangleF)
  fullName: System.Drawing.Rectangle.Ceiling(RectangleF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "지정 된 변환 <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> 구조체는 <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 반올림 하 여 구조는 <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> 값을 다음으로 높은 정수 값입니다."
  syntax:
    content: public static System.Drawing.Rectangle Ceiling (System.Drawing.RectangleF value);
    parameters:
    - id: value
      type: System.Drawing.RectangleF
      description: "<xref href=&quot;System.Drawing.RectangleF&quot;> </xref> 구조 변환 될 수 있습니다."
    return:
      type: System.Drawing.Rectangle
      description: "반환 된 <xref href=&quot;System.Drawing.Rectangle&quot;> </xref>합니다."
  overload: System.Drawing.Rectangle.Ceiling*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.Contains(System.Drawing.Point)
  id: Contains(System.Drawing.Point)
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Contains(Point)
  nameWithType: Rectangle.Contains(Point)
  fullName: System.Drawing.Rectangle.Contains(Point)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "지정된 된 점이이 포함 되어 있으면 결정 <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 구조입니다."
  remarks: "정확한 결과 반환 하려면이 메서드를 포함 하는 사각형을 정규화 해야 합니다."
  syntax:
    content: public bool Contains (System.Drawing.Point pt);
    parameters:
    - id: pt
      type: System.Drawing.Point
      description: "<xref href=&quot;System.Drawing.Point&quot;> </xref> 를 테스트 합니다."
    return:
      type: System.Boolean
      description: "이 메서드가 반환 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> 으로 표시 되는 지점 <code> pt </code> 이 내에 포함 된 <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 그렇지 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Drawing.Rectangle.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.Contains(System.Drawing.Rectangle)
  id: Contains(System.Drawing.Rectangle)
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Contains(Rectangle)
  nameWithType: Rectangle.Contains(Rectangle)
  fullName: System.Drawing.Rectangle.Contains(Rectangle)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "으로 표시 된 사각형 영역이 결정 <code> rect </code> 이 안에 완전히 들어 <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 구조입니다."
  remarks: "정확한 결과 반환 하려면이 메서드를 포함 하는 사각형을 정규화 해야 합니다."
  example:
  - "The following code example demonstrates the Contains method and the <xref:System.Drawing.SystemPens> class. This example is designed for use with a Windows Form. Paste this code into a form that contains a button named `Button1`, call `DrawFirstRectangle` from the form's constructor or <xref:System.Windows.Forms.Form.Load> method, and associate the `Button1_Click` method with the button's <xref:System.Windows.Forms.Control.Click> event.  \n  \n [!code-cs[System.Drawing.RectanglesAndPoints#3](~/add/codesnippet/csharp/m-system.drawing.rectang_8_1.cs)]\n [!code-cpp[System.Drawing.RectanglesAndPoints#3](~/add/codesnippet/cpp/m-system.drawing.rectang_8_1.cpp)]\n [!code-vb[System.Drawing.RectanglesAndPoints#3](~/add/codesnippet/visualbasic/m-system.drawing.rectang_8_1.vb)]"
  syntax:
    content: public bool Contains (System.Drawing.Rectangle rect);
    parameters:
    - id: rect
      type: System.Drawing.Rectangle
      description: "<xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 를 테스트 합니다."
    return:
      type: System.Boolean
      description: "이 메서드가 반환 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> 으로 표시 되는 사각형 영역 <code> rect </code> 이 안에 완전히 들어 <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 그렇지 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Drawing.Rectangle.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.Contains(System.Int32,System.Int32)
  id: Contains(System.Int32,System.Int32)
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Contains(Int32,Int32)
  nameWithType: Rectangle.Contains(Int32,Int32)
  fullName: System.Drawing.Rectangle.Contains(Int32,Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "지정된 된 점이이 포함 되어 있으면 결정 <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 구조입니다."
  remarks: "정확한 결과 반환 하려면이 메서드를 포함 하는 사각형을 정규화 해야 합니다."
  syntax:
    content: public bool Contains (int x, int y);
    parameters:
    - id: x
      type: System.Int32
      description: "테스트할 점의 x 좌표입니다."
    - id: y
      type: System.Int32
      description: "테스트할 점의 y 좌표입니다."
    return:
      type: System.Boolean
      description: "이 메서드가 반환 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> 하 여 정의 된 점이 경우 <code> x </code> 및 <code> y </code> 이 내에 포함 된 <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 그렇지 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Drawing.Rectangle.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.Empty
  id: Empty
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Empty
  nameWithType: Rectangle.Empty
  fullName: System.Drawing.Rectangle.Empty
  type: Field
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "나타냅니다는 <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 초기화 되지 않은 속성이 있는 구조입니다."
  remarks: "사각형의 너비, 높이 및 왼쪽 위 모서리에서 정의 됩니다."
  syntax:
    content: public static readonly System.Drawing.Rectangle Empty;
    return:
      type: System.Drawing.Rectangle
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: Rectangle.Equals(Object)
  fullName: System.Drawing.Rectangle.Equals(Object)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "테스트 여부 <code> obj </code> 는 <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 동일한 위치와 크기를 사용 하는 구조 <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 구조입니다."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "<xref:System.Object>테스트할</xref:System.Object>"
    return:
      type: System.Boolean
      description: "이 메서드가 반환 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> 경우 <code> obj </code> 는 <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 구조 및 해당 <> </> *>, <> </> *>, <> </> *>, 및 <> </> *> 속성은이의 해당 속성과 같으면 <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 그렇지 그렇지 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Drawing.Rectangle.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.FromLTRB(System.Int32,System.Int32,System.Int32,System.Int32)
  id: FromLTRB(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: FromLTRB(Int32,Int32,Int32,Int32)
  nameWithType: Rectangle.FromLTRB(Int32,Int32,Int32,Int32)
  fullName: System.Drawing.Rectangle.FromLTRB(Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "만듭니다는 <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 구조와 지정된 된 가장자리 위치입니다."
  remarks: "이 메서드가 만드는 <xref:System.Drawing.Rectangle>지정 된 왼쪽 및 오른쪽 아래 모퉁이가.</xref:System.Drawing.Rectangle>"
  example:
  - "The following code example demonstrates how to create a rectangle using the FromLTRB method. This example is designed to be used with a Windows Form. Paste this code into a form and call the `CreateARectangleFromLTRB` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.RectanglesAndPoints#7](~/add/codesnippet/csharp/b6a82677-d61c-473b-ae93-_1.cs)]\n [!code-cpp[System.Drawing.RectanglesAndPoints#7](~/add/codesnippet/cpp/b6a82677-d61c-473b-ae93-_1.cpp)]\n [!code-vb[System.Drawing.RectanglesAndPoints#7](~/add/codesnippet/visualbasic/b6a82677-d61c-473b-ae93-_1.vb)]"
  syntax:
    content: public static System.Drawing.Rectangle FromLTRB (int left, int top, int right, int bottom);
    parameters:
    - id: left
      type: System.Int32
      description: "이 항목의 왼쪽 위 모퉁이의 x 좌표 <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 구조입니다."
    - id: top
      type: System.Int32
      description: "이 항목의 왼쪽 위 모퉁이의 y 좌표 <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 구조입니다."
    - id: right
      type: System.Int32
      description: "이 항목의 오른쪽 아래 모서리의 x 좌표 <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 구조입니다."
    - id: bottom
      type: System.Int32
      description: "이 항목의 오른쪽 아래 모퉁이의 y 좌표 <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 구조입니다."
    return:
      type: System.Drawing.Rectangle
      description: "새 <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 이 메서드가 만드는 합니다."
  overload: System.Drawing.Rectangle.FromLTRB*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.GetHashCode
  id: GetHashCode
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: Rectangle.GetHashCode()
  fullName: System.Drawing.Rectangle.GetHashCode()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이 대 한 해시 코드를 반환 합니다. <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 구조입니다. 해시 코드를 사용 하는 방법에 대 한 정보, <xref:System.Object.GetHashCode*>.</xref:System.Object.GetHashCode*> 을 참조 하십시오."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "이 사각형에 대 한 해시 코드를 나타내는 정수입니다."
  overload: System.Drawing.Rectangle.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.Height
  id: Height
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Height
  nameWithType: Rectangle.Height
  fullName: System.Drawing.Rectangle.Height
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이 항목의 높이 가져오거나 설정 합니다. <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 구조입니다."
  remarks: "높이 속성을 변경 해도 변경 <xref:System.Drawing.Rectangle.Bottom%2A> <xref:System.Drawing.Rectangle>.</xref:System.Drawing.Rectangle> 속성</xref:System.Drawing.Rectangle.Bottom%2A> 사각형에 그려지는 단위에 의해 결정 됩니다는 <xref:System.Drawing.Graphics.PageUnit%2A>및 <xref:System.Drawing.Graphics.PageScale%2A>그래픽 속성 그리기에 사용 되는 개체입니다.</xref:System.Drawing.Graphics.PageScale%2A> </xref:System.Drawing.Graphics.PageUnit%2A> 기본 단위는 픽셀입니다."
  syntax:
    content: public int Height { get; set; }
    return:
      type: System.Int32
      description: "이 항목의 높이 <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 구조입니다. 기본값은 0입니다."
  overload: System.Drawing.Rectangle.Height*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.Inflate(System.Drawing.Size)
  id: Inflate(System.Drawing.Size)
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Inflate(Size)
  nameWithType: Rectangle.Inflate(Size)
  fullName: System.Drawing.Rectangle.Inflate(Size)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이 확대 <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 지정 된 크기입니다."
  remarks: "이 메서드는 복사본이 아닌이 사각형을 확대합니다. 사각형은 축 따라 양방향에서 확대 됩니다.  예를 들어 50 여 50 사각형 50 x 축에서으로 확대 되 면 결과 사각형 150 단위 됩니다 long (원래 50, 50 빼기 방향에서 및 인 50) 사각형의 기 하 도형 중심을 유지 관리 합니다."
  example:
  - "The following example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code creates a <xref:System.Drawing.Rectangle> and enlarges it by 50 units in both axes. The rectangle is drawn to screen before inflation (black) and after inflation (red).  \n  \n [!code-cs[System.Drawing.ClassicRectangleExamples#2](~/add/codesnippet/csharp/m-system.drawing.rectang_2_1.cs)]\n [!code-cpp[System.Drawing.ClassicRectangleExamples#2](~/add/codesnippet/cpp/m-system.drawing.rectang_2_1.cpp)]\n [!code-vb[System.Drawing.ClassicRectangleExamples#2](~/add/codesnippet/visualbasic/m-system.drawing.rectang_2_1.vb)]"
  syntax:
    content: public void Inflate (System.Drawing.Size size);
    parameters:
    - id: size
      type: System.Drawing.Size
      description: "이 사각형을 확장할 크기입니다."
  overload: System.Drawing.Rectangle.Inflate*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.Inflate(System.Int32,System.Int32)
  id: Inflate(System.Int32,System.Int32)
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Inflate(Int32,Int32)
  nameWithType: Rectangle.Inflate(Int32,Int32)
  fullName: System.Drawing.Rectangle.Inflate(Int32,Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이 확대 <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 지정 된 크기입니다."
  remarks: "이 메서드는 복사본이 아닌이 사각형을 확대합니다. 사각형은 축 따라 양방향에서 확대 됩니다. 예를 들어 50 여 50 사각형 50 x 축에서으로 확대 되 면 결과 사각형 150 단위 됩니다 long (원래 50, 50 빼기 방향에서 및 인 50) 사각형의 기 하 도형 중심을 유지 관리 합니다.       어느 경우 `x` 또는 `y` 가 음수 이면는 <xref:System.Drawing.Rectangle>구조는 해당 방향으로 축소 됩니다.</xref:System.Drawing.Rectangle>"
  example:
  - "The following example creates a <xref:System.Drawing.Rectangle> structure and enlarges it by 100 units in the x-axis direction:  \n  \n [!code-cs[System.Drawing.ClassicRectangleExamples#3](~/add/codesnippet/csharp/m-system.drawing.rectang_7_1.cs)]\n [!code-cpp[System.Drawing.ClassicRectangleExamples#3](~/add/codesnippet/cpp/m-system.drawing.rectang_7_1.cpp)]\n [!code-vb[System.Drawing.ClassicRectangleExamples#3](~/add/codesnippet/visualbasic/m-system.drawing.rectang_7_1.vb)]"
  syntax:
    content: public void Inflate (int width, int height);
    parameters:
    - id: width
      type: System.Int32
      description: "이 확장할 크기입니다 <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 가로로 합니다."
    - id: height
      type: System.Int32
      description: "이 확장할 크기입니다 <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 세로로 합니다."
  overload: System.Drawing.Rectangle.Inflate*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.Inflate(System.Drawing.Rectangle,System.Int32,System.Int32)
  id: Inflate(System.Drawing.Rectangle,System.Int32,System.Int32)
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Inflate(Rectangle,Int32,Int32)
  nameWithType: Rectangle.Inflate(Rectangle,Int32,Int32)
  fullName: System.Drawing.Rectangle.Inflate(Rectangle,Int32,Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "만들고 지정 된의 확대 된 복사본을 반환 <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 구조입니다. 복사본은 지정된 된 크기 만큼 확대 합니다. 원래 <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 구조 수정 되지 않은 상태로 유지 됩니다."
  remarks: "이 메서드는 복사본을 만들어 `rect`, 복사본을 확장 하 고 다음 확장된 된 복사본을 반환 합니다. 사각형은 축 따라 양방향에서 확대 됩니다. 예를 들어 50 여 50 사각형 50 x 축에서으로 확대 되 면 결과 사각형 150 단위 됩니다 long (원래 50, 50 빼기 방향에서 및 인 50) 사각형의 기 하 도형 중심을 유지 관리 합니다."
  example:
  - "The following example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code creates a <xref:System.Drawing.Rectangle> and enlarges it by 50 units in both axes. Notice that the resulting rectangle (red) is 150 units in both axes.  \n  \n [!code-cs[System.Drawing.ClassicRectangleExamples#1](~/add/codesnippet/csharp/29159456-f586-460b-ac33-_1.cs)]\n [!code-cpp[System.Drawing.ClassicRectangleExamples#1](~/add/codesnippet/cpp/29159456-f586-460b-ac33-_1.cpp)]\n [!code-vb[System.Drawing.ClassicRectangleExamples#1](~/add/codesnippet/visualbasic/29159456-f586-460b-ac33-_1.vb)]"
  syntax:
    content: public static System.Drawing.Rectangle Inflate (System.Drawing.Rectangle rect, int x, int y);
    parameters:
    - id: rect
      type: System.Drawing.Rectangle
      description: "<xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 를 시작할 때 사용할 합니다. 이 사각형은 수정 되지 않습니다."
    - id: x
      type: System.Int32
      description: "이 확장할 크기입니다 <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 가로로 합니다."
    - id: y
      type: System.Int32
      description: "이 확장할 크기입니다 <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 세로로 합니다."
    return:
      type: System.Drawing.Rectangle
      description: "확대 된 <xref href=&quot;System.Drawing.Rectangle&quot;> </xref>합니다."
  overload: System.Drawing.Rectangle.Inflate*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.Intersect(System.Drawing.Rectangle)
  id: Intersect(System.Drawing.Rectangle)
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Intersect(Rectangle)
  nameWithType: Rectangle.Intersect(Rectangle)
  fullName: System.Drawing.Rectangle.Intersect(Rectangle)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이 대체 <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 와 지정 된의 교차 부분으로 <xref href=&quot;System.Drawing.Rectangle&quot;> </xref>합니다."
  remarks: ''
  example:
  - "The following code example demonstrates the Intersect, <xref:System.Drawing.Rectangle.IsEmpty%2A> and the <xref:System.Drawing.Rectangle.IntersectsWith%2A> members. This example should be used with a Windows Form. Paste this code into a form and call this method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.RectanglesAndPoints#2](~/add/codesnippet/csharp/m-system.drawing.rectang_1_1.cs)]\n [!code-cpp[System.Drawing.RectanglesAndPoints#2](~/add/codesnippet/cpp/m-system.drawing.rectang_1_1.cpp)]\n [!code-vb[System.Drawing.RectanglesAndPoints#2](~/add/codesnippet/visualbasic/m-system.drawing.rectang_1_1.vb)]"
  syntax:
    content: public void Intersect (System.Drawing.Rectangle rect);
    parameters:
    - id: rect
      type: System.Drawing.Rectangle
      description: "<xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 교차 시킬 합니다."
  overload: System.Drawing.Rectangle.Intersect*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.Intersect(System.Drawing.Rectangle,System.Drawing.Rectangle)
  id: Intersect(System.Drawing.Rectangle,System.Drawing.Rectangle)
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Intersect(Rectangle,Rectangle)
  nameWithType: Rectangle.Intersect(Rectangle,Rectangle)
  fullName: System.Drawing.Rectangle.Intersect(Rectangle,Rectangle)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "세 번째 반환 <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 두 개의 다른의 교차 부분을 나타내는 구조 <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 구조입니다. 교차 부분이 비어 있는 경우 <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 반환 됩니다."
  remarks: ''
  example:
  - "The following code example demonstrates the <xref:System.Drawing.Rectangle.Intersect%2A>, <xref:System.Drawing.Rectangle.IsEmpty%2A> and the <xref:System.Drawing.Rectangle.IntersectsWith%2A> members. This example should be used with a Windows Form. Paste this code into a form and call this method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.RectanglesAndPoints#1](~/add/codesnippet/csharp/220e8ffb-cf8f-48fb-bbcf-_1.cs)]\n [!code-cpp[System.Drawing.RectanglesAndPoints#1](~/add/codesnippet/cpp/220e8ffb-cf8f-48fb-bbcf-_1.cpp)]\n [!code-vb[System.Drawing.RectanglesAndPoints#1](~/add/codesnippet/visualbasic/220e8ffb-cf8f-48fb-bbcf-_1.vb)]"
  syntax:
    content: public static System.Drawing.Rectangle Intersect (System.Drawing.Rectangle a, System.Drawing.Rectangle b);
    parameters:
    - id: a
      type: System.Drawing.Rectangle
      description: "교차할 사각형입니다."
    - id: b
      type: System.Drawing.Rectangle
      description: "교차할 사각형입니다."
    return:
      type: System.Drawing.Rectangle
      description: "A <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 의 교차 부분을 나타내는 <code> a </code> 및 <code> b </code>합니다."
  overload: System.Drawing.Rectangle.Intersect*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.IntersectsWith(System.Drawing.Rectangle)
  id: IntersectsWith(System.Drawing.Rectangle)
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: IntersectsWith(Rectangle)
  nameWithType: Rectangle.IntersectsWith(Rectangle)
  fullName: System.Drawing.Rectangle.IntersectsWith(Rectangle)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이 사각형와 교차 하는 경우 결정 <code> rect </code>합니다."
  remarks: ''
  example:
  - "The following code example demonstrates the <xref:System.Drawing.Rectangle.Intersect%2A>, <xref:System.Drawing.Rectangle.IsEmpty%2A> and the IntersectsWith members. This example should be used with a Windows Form. Paste this code into a form and call this method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.RectanglesAndPoints#2](~/add/codesnippet/csharp/m-system.drawing.rectang_6_1.cs)]\n [!code-cpp[System.Drawing.RectanglesAndPoints#2](~/add/codesnippet/cpp/m-system.drawing.rectang_6_1.cpp)]\n [!code-vb[System.Drawing.RectanglesAndPoints#2](~/add/codesnippet/visualbasic/m-system.drawing.rectang_6_1.vb)]"
  syntax:
    content: public bool IntersectsWith (System.Drawing.Rectangle rect);
    parameters:
    - id: rect
      type: System.Drawing.Rectangle
      description: "테스트할 사각형입니다."
    return:
      type: System.Boolean
      description: "이 메서드가 반환 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> 없으면 교차 부분이, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Drawing.Rectangle.IntersectsWith*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.IsEmpty
  id: IsEmpty
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: IsEmpty
  nameWithType: Rectangle.IsEmpty
  fullName: System.Drawing.Rectangle.IsEmpty
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "테스트 하는지 여부를이의 숫자 속성이 모두 <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 값이&0;입니다."
  remarks: ''
  example:
  - "The following code example demonstrates the <xref:System.Drawing.Rectangle.Intersect%2A>, IsEmpty and the <xref:System.Drawing.Rectangle.IntersectsWith%2A> members. This example should be used with a Windows Form. Paste this code into a form and call this method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.RectanglesAndPoints#2](~/add/codesnippet/csharp/p-system.drawing.rectang_1.cs)]\n [!code-cpp[System.Drawing.RectanglesAndPoints#2](~/add/codesnippet/cpp/p-system.drawing.rectang_1.cpp)]\n [!code-vb[System.Drawing.RectanglesAndPoints#2](~/add/codesnippet/visualbasic/p-system.drawing.rectang_1.vb)]"
  syntax:
    content: public bool IsEmpty { get; }
    return:
      type: System.Boolean
      description: "이 속성은 반환 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> 경우는 <> </> *>, <> </> *>, <> </> *>, 및 <> </> *> 속성이 <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 모두&0; 값을 가지, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Drawing.Rectangle.IsEmpty*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.Left
  id: Left
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Left
  nameWithType: Rectangle.Left
  fullName: System.Drawing.Rectangle.Left
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이 항목의 왼쪽된 가장자리의 x 좌표를 가져옵니다 <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 구조입니다."
  syntax:
    content: public int Left { get; }
    return:
      type: System.Int32
      description: "이 항목의 왼쪽된 가장자리의 x 좌표 <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 구조입니다."
  overload: System.Drawing.Rectangle.Left*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.Location
  id: Location
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Location
  nameWithType: Rectangle.Location
  fullName: System.Drawing.Rectangle.Location
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이 항목의 왼쪽 위 모퉁이의 좌표를 가져오거나 설정 합니다. <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 구조입니다."
  syntax:
    content: public System.Drawing.Point Location { get; set; }
    return:
      type: System.Drawing.Point
      description: "A <xref href=&quot;System.Drawing.Point&quot;> </xref> 이 왼쪽 위 모퉁이 나타내는 <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 구조입니다."
  overload: System.Drawing.Rectangle.Location*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.Offset(System.Drawing.Point)
  id: Offset(System.Drawing.Point)
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Offset(Point)
  nameWithType: Rectangle.Offset(Point)
  fullName: System.Drawing.Rectangle.Offset(Point)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이 사각형의 위치를 지정 된 크기 조정합니다."
  remarks: "이 메서드 및 세로 방향으로 지정 된 지점의 y 좌표 지정 된 지점의 x 좌표에서 가로로의 왼쪽 위 모퉁이 위치를 조정합니다."
  example:
  - "The following code example demonstrates the <xref:System.Drawing.Rectangle.Contains%2A>, and <xref:System.Drawing.Rectangle.Offset%2A> methods and the <xref:System.Drawing.SystemPens> class. This example is designed for use with a Windows Form. Paste this code into a form that contains a button named `Button1`, call `DrawFirstRectangle` from the form's constructor or <xref:System.Windows.Forms.Form.Load> method, and associate the `Button1_Click` method with the button's <xref:System.Windows.Forms.Control.Click> event.  \n  \n [!code-cs[System.Drawing.RectanglesAndPoints#3](~/add/codesnippet/csharp/m-system.drawing.rectang_0_1.cs)]\n [!code-cpp[System.Drawing.RectanglesAndPoints#3](~/add/codesnippet/cpp/m-system.drawing.rectang_0_1.cpp)]\n [!code-vb[System.Drawing.RectanglesAndPoints#3](~/add/codesnippet/visualbasic/m-system.drawing.rectang_0_1.vb)]"
  syntax:
    content: public void Offset (System.Drawing.Point pos);
    parameters:
    - id: pos
      type: System.Drawing.Point
      description: "위치를 오프셋할 양입니다."
  overload: System.Drawing.Rectangle.Offset*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.Offset(System.Int32,System.Int32)
  id: Offset(System.Int32,System.Int32)
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Offset(Int32,Int32)
  nameWithType: Rectangle.Offset(Int32,Int32)
  fullName: System.Drawing.Rectangle.Offset(Int32,Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이 사각형의 위치를 지정 된 크기 조정합니다."
  syntax:
    content: public void Offset (int x, int y);
    parameters:
    - id: x
      type: System.Int32
      description: "가로 오프셋입니다."
    - id: y
      type: System.Int32
      description: "세로 오프셋입니다."
  overload: System.Drawing.Rectangle.Offset*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.op_Equality(System.Drawing.Rectangle,System.Drawing.Rectangle)
  id: op_Equality(System.Drawing.Rectangle,System.Drawing.Rectangle)
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: op_Equality(Rectangle,Rectangle)
  nameWithType: Rectangle.op_Equality(Rectangle,Rectangle)
  fullName: System.Drawing.Rectangle.op_Equality(Rectangle,Rectangle)
  type: Operator
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "두 테스트 <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 구조는 동일한 위치와 크기입니다."
  syntax:
    content: public static bool op_Equality (System.Drawing.Rectangle left, System.Drawing.Rectangle right);
    parameters:
    - id: left
      type: System.Drawing.Rectangle
      description: "<xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 같음 연산자의 왼쪽에는 구조입니다."
    - id: right
      type: System.Drawing.Rectangle
      description: "<xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 같음 연산자의 오른쪽에 있는 구조입니다."
    return:
      type: System.Boolean
      description: "이 연산자는 반환 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> 경우 두 <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 구조는 같은 <> </> *>, <> </> *>, <> </> *>, 및 <> </> *> 속성."
  overload: System.Drawing.Rectangle.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.op_Inequality(System.Drawing.Rectangle,System.Drawing.Rectangle)
  id: op_Inequality(System.Drawing.Rectangle,System.Drawing.Rectangle)
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: op_Inequality(Rectangle,Rectangle)
  nameWithType: Rectangle.op_Inequality(Rectangle,Rectangle)
  fullName: System.Drawing.Rectangle.op_Inequality(Rectangle,Rectangle)
  type: Operator
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "두 테스트 <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 구조체의 위치와 크기가 다른 합니다."
  syntax:
    content: public static bool op_Inequality (System.Drawing.Rectangle left, System.Drawing.Rectangle right);
    parameters:
    - id: left
      type: System.Drawing.Rectangle
      description: "<xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 같지 않음 연산자 왼쪽에는 구조입니다."
    - id: right
      type: System.Drawing.Rectangle
      description: "<xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 같지 않음 연산자의 오른쪽에 있는 구조입니다."
    return:
      type: System.Boolean
      description: "이 연산자는 반환 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> 하나라는 <> </> *>, <> </> *>, <> </> *> 또는 <> </> *>의 두 속성 <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 구조가 같지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Drawing.Rectangle.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.Right
  id: Right
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Right
  nameWithType: Rectangle.Right
  fullName: System.Drawing.Rectangle.Right
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "합을 나타내는 x 좌표를 가져옵니다 <> </> *> 및 <> </> *> 속성 값이 <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 구조입니다."
  remarks: "오른쪽 속성의 값은 사각형에 포함 되지 않은 하는 사각형의 오른쪽 가장자리에 있는 첫 번째 점의 x-좌표를 나타냅니다."
  syntax:
    content: public int Right { get; }
    return:
      type: System.Int32
      description: "합을 나타내는 x-좌표 <> </> *> 및 <> </> *>이 <xref href=&quot;System.Drawing.Rectangle&quot;> </xref>합니다."
  overload: System.Drawing.Rectangle.Right*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.Round(System.Drawing.RectangleF)
  id: Round(System.Drawing.RectangleF)
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Round(RectangleF)
  nameWithType: Rectangle.Round(RectangleF)
  fullName: System.Drawing.Rectangle.Round(RectangleF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "지정 된 변환 <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> 에 <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 반올림 하 여는 <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> 값을 가장 가까운 정수 값입니다."
  remarks: ''
  example:
  - "The following code example demonstrates how to use the Round and <xref:System.Drawing.Rectangle.Truncate%2A> methods. This example is designed for use with a Windows Form.  Paste this code into a form and call the `RoundingAndTruncatingRectangles` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.RectanglesAndPoints#5](~/add/codesnippet/csharp/m-system.drawing.rectang_3_1.cs)]\n [!code-cpp[System.Drawing.RectanglesAndPoints#5](~/add/codesnippet/cpp/m-system.drawing.rectang_3_1.cpp)]\n [!code-vb[System.Drawing.RectanglesAndPoints#5](~/add/codesnippet/visualbasic/m-system.drawing.rectang_3_1.vb)]"
  syntax:
    content: public static System.Drawing.Rectangle Round (System.Drawing.RectangleF value);
    parameters:
    - id: value
      type: System.Drawing.RectangleF
      description: "<xref href=&quot;System.Drawing.RectangleF&quot;> </xref> 변환 될 수 있습니다."
    return:
      type: System.Drawing.Rectangle
      description: "반올림된 한 정수 값은 <xref href=&quot;System.Drawing.Rectangle&quot;> </xref>합니다."
  overload: System.Drawing.Rectangle.Round*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.Size
  id: Size
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Size
  nameWithType: Rectangle.Size
  fullName: System.Drawing.Rectangle.Size
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이 크기를 가져오거나 설정 합니다. <xref href=&quot;System.Drawing.Rectangle&quot;> </xref>합니다."
  syntax:
    content: public System.Drawing.Size Size { get; set; }
    return:
      type: System.Drawing.Size
      description: "A <xref href=&quot;System.Drawing.Size&quot;> </xref> 너비와 높이이 나타내는 <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 구조입니다."
  overload: System.Drawing.Rectangle.Size*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.Top
  id: Top
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Top
  nameWithType: Rectangle.Top
  fullName: System.Drawing.Rectangle.Top
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이 항목의 위쪽 가장자리의 y 좌표를 가져옵니다 <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 구조입니다."
  syntax:
    content: public int Top { get; }
    return:
      type: System.Int32
      description: "이 항목의 위쪽 가장자리의 y 좌표 <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 구조입니다."
  overload: System.Drawing.Rectangle.Top*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.ToString
  id: ToString
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: ToString()
  nameWithType: Rectangle.ToString()
  fullName: System.Drawing.Rectangle.ToString()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이 특성으로 변환 <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 문자열로 사람이 읽을 수 있습니다."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "위치, 너비 및 높이이 포함 하는 문자열 <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 구조체 ¾ 예를 들어 {X =&20;, Y =&20;, 너비 =&100;, 높이 =&50;}"
  overload: System.Drawing.Rectangle.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.Truncate(System.Drawing.RectangleF)
  id: Truncate(System.Drawing.RectangleF)
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Truncate(RectangleF)
  nameWithType: Rectangle.Truncate(RectangleF)
  fullName: System.Drawing.Rectangle.Truncate(RectangleF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "지정 된 변환 <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> 에 <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 잘라는 <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> 값입니다."
  remarks: ''
  example:
  - "The following code example demonstrates how to use the <xref:System.Drawing.Rectangle.Round%2A> and Truncate methods. This example is designed for use with a Windows Form. Paste this code into a form and call the `RoundingAndTruncatingRectangles` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.RectanglesAndPoints#5](~/add/codesnippet/csharp/m-system.drawing.rectang_4_1.cs)]\n [!code-cpp[System.Drawing.RectanglesAndPoints#5](~/add/codesnippet/cpp/m-system.drawing.rectang_4_1.cpp)]\n [!code-vb[System.Drawing.RectanglesAndPoints#5](~/add/codesnippet/visualbasic/m-system.drawing.rectang_4_1.vb)]"
  syntax:
    content: public static System.Drawing.Rectangle Truncate (System.Drawing.RectangleF value);
    parameters:
    - id: value
      type: System.Drawing.RectangleF
      description: "<xref href=&quot;System.Drawing.RectangleF&quot;> </xref> 변환 될 수 있습니다."
    return:
      type: System.Drawing.Rectangle
      description: "잘린된 값은 <xref href=&quot;System.Drawing.Rectangle&quot;> </xref>합니다."
  overload: System.Drawing.Rectangle.Truncate*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.Union(System.Drawing.Rectangle,System.Drawing.Rectangle)
  id: Union(System.Drawing.Rectangle,System.Drawing.Rectangle)
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Union(Rectangle,Rectangle)
  nameWithType: Rectangle.Union(Rectangle,Rectangle)
  fullName: System.Drawing.Rectangle.Union(Rectangle,Rectangle)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "가져옵니다는 <xref href=&quot;System.Drawing.Rectangle&quot;> </xref>&2;의 합집합을 포함 하는 구조 <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 구조입니다."
  remarks: 'Union 메서드 반환 사각형의 시작 지점을 비어 있을 때 두 개의 사각형 중 하나, 즉 모든 값이 0 이면 (0, 0) 비어 있지 않은 사각형의 너비 및 높이입니다. 예를 들어, 두 개의 사각형을 사용 하는 경우: A = (0, 0, 0, 0) 및 B = (1, 1, 2, 2), A의 공용 구조체가 고 B는 (0, 0, 2, 2).'
  example:
  - "The following code example demonstrates how to use the Union method. This example is designed for use with a Windows Form. Paste this code into a form and call the `ShowRectangleUnion` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.RectanglesAndPoints#4](~/add/codesnippet/csharp/dbe79589-a969-4d01-95b2-_1.cs)]\n [!code-cpp[System.Drawing.RectanglesAndPoints#4](~/add/codesnippet/cpp/dbe79589-a969-4d01-95b2-_1.cpp)]\n [!code-vb[System.Drawing.RectanglesAndPoints#4](~/add/codesnippet/visualbasic/dbe79589-a969-4d01-95b2-_1.vb)]"
  syntax:
    content: public static System.Drawing.Rectangle Union (System.Drawing.Rectangle a, System.Drawing.Rectangle b);
    parameters:
    - id: a
      type: System.Drawing.Rectangle
      description: "통합할 사각형입니다."
    - id: b
      type: System.Drawing.Rectangle
      description: "통합할 사각형입니다."
    return:
      type: System.Drawing.Rectangle
      description: "A <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 두 두 구조 <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 구조입니다."
  overload: System.Drawing.Rectangle.Union*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.Width
  id: Width
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Width
  nameWithType: Rectangle.Width
  fullName: System.Drawing.Rectangle.Width
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이 항목의 너비를 가져오거나 설정 합니다. <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 구조입니다."
  remarks: "Width 속성을 변경 해도 변경 <xref:System.Drawing.Rectangle.Right%2A> <xref:System.Drawing.Rectangle>.</xref:System.Drawing.Rectangle> 속성</xref:System.Drawing.Rectangle.Right%2A> 사각형에 그려지는 단위에 의해 결정 됩니다는 <xref:System.Drawing.Graphics.PageUnit%2A>및 <xref:System.Drawing.Graphics.PageScale%2A>그래픽 속성 그리기에 사용 되는 개체입니다.</xref:System.Drawing.Graphics.PageScale%2A> </xref:System.Drawing.Graphics.PageUnit%2A> 기본 단위는 픽셀입니다."
  syntax:
    content: public int Width { get; set; }
    return:
      type: System.Int32
      description: "이 너비 <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 구조입니다. 기본값은 0입니다."
  overload: System.Drawing.Rectangle.Width*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.X
  id: X
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: X
  nameWithType: Rectangle.X
  fullName: System.Drawing.Rectangle.X
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이 항목의 왼쪽 위 모퉁이의 x 좌표를 가져오거나 설정 합니다. <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 구조입니다."
  remarks: "X 속성을 변경 해도 변경 <xref:System.Drawing.Rectangle.Right%2A> <xref:System.Drawing.Rectangle>.</xref:System.Drawing.Rectangle> 속성</xref:System.Drawing.Rectangle.Right%2A>"
  syntax:
    content: public int X { get; set; }
    return:
      type: System.Int32
      description: "이 항목의 왼쪽 위 모퉁이의 x 좌표 <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 구조입니다. 기본값은 0입니다."
  overload: System.Drawing.Rectangle.X*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.Y
  id: Y
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Y
  nameWithType: Rectangle.Y
  fullName: System.Drawing.Rectangle.Y
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이 항목의 왼쪽 위 모퉁이의 y 좌표를 가져오거나 설정 합니다. <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 구조입니다."
  remarks: "Y 속성을 변경 해도 변경 <xref:System.Drawing.Rectangle.Bottom%2A> <xref:System.Drawing.Rectangle>.</xref:System.Drawing.Rectangle> 속성</xref:System.Drawing.Rectangle.Bottom%2A>"
  syntax:
    content: public int Y { get; set; }
    return:
      type: System.Int32
      description: "이 항목의 왼쪽 위 모퉁이의 y 좌표 <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 구조입니다. 기본값은 0입니다."
  overload: System.Drawing.Rectangle.Y*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Drawing.Rectangle.#ctor(System.Drawing.Point,System.Drawing.Size)
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Rectangle(Point,Size)
  nameWithType: Rectangle.Rectangle(Point,Size)
  fullName: System.Drawing.Rectangle.Rectangle(Point,Size)
- uid: System.Drawing.Point
  parent: System.Drawing
  isExternal: false
  name: Point
  nameWithType: Point
  fullName: System.Drawing.Point
- uid: System.Drawing.Size
  parent: System.Drawing
  isExternal: false
  name: Size
  nameWithType: Size
  fullName: System.Drawing.Size
- uid: System.Drawing.Rectangle.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Rectangle(Int32,Int32,Int32,Int32)
  nameWithType: Rectangle.Rectangle(Int32,Int32,Int32,Int32)
  fullName: System.Drawing.Rectangle.Rectangle(Int32,Int32,Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Drawing.Rectangle.Bottom
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Bottom
  nameWithType: Rectangle.Bottom
  fullName: System.Drawing.Rectangle.Bottom
- uid: System.Drawing.Rectangle.Ceiling(System.Drawing.RectangleF)
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Ceiling(RectangleF)
  nameWithType: Rectangle.Ceiling(RectangleF)
  fullName: System.Drawing.Rectangle.Ceiling(RectangleF)
- uid: System.Drawing.Rectangle
  parent: System.Drawing
  isExternal: false
  name: Rectangle
  nameWithType: Rectangle
  fullName: System.Drawing.Rectangle
- uid: System.Drawing.RectangleF
  parent: System.Drawing
  isExternal: false
  name: RectangleF
  nameWithType: RectangleF
  fullName: System.Drawing.RectangleF
- uid: System.Drawing.Rectangle.Contains(System.Drawing.Point)
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Contains(Point)
  nameWithType: Rectangle.Contains(Point)
  fullName: System.Drawing.Rectangle.Contains(Point)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Drawing.Rectangle.Contains(System.Drawing.Rectangle)
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Contains(Rectangle)
  nameWithType: Rectangle.Contains(Rectangle)
  fullName: System.Drawing.Rectangle.Contains(Rectangle)
- uid: System.Drawing.Rectangle.Contains(System.Int32,System.Int32)
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Contains(Int32,Int32)
  nameWithType: Rectangle.Contains(Int32,Int32)
  fullName: System.Drawing.Rectangle.Contains(Int32,Int32)
- uid: System.Drawing.Rectangle.Empty
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Empty
  nameWithType: Rectangle.Empty
  fullName: System.Drawing.Rectangle.Empty
- uid: System.Drawing.Rectangle.Equals(System.Object)
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Equals(Object)
  nameWithType: Rectangle.Equals(Object)
  fullName: System.Drawing.Rectangle.Equals(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Drawing.Rectangle.FromLTRB(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Drawing.Rectangle
  isExternal: false
  name: FromLTRB(Int32,Int32,Int32,Int32)
  nameWithType: Rectangle.FromLTRB(Int32,Int32,Int32,Int32)
  fullName: System.Drawing.Rectangle.FromLTRB(Int32,Int32,Int32,Int32)
- uid: System.Drawing.Rectangle.GetHashCode
  parent: System.Drawing.Rectangle
  isExternal: false
  name: GetHashCode()
  nameWithType: Rectangle.GetHashCode()
  fullName: System.Drawing.Rectangle.GetHashCode()
- uid: System.Drawing.Rectangle.Height
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Height
  nameWithType: Rectangle.Height
  fullName: System.Drawing.Rectangle.Height
- uid: System.Drawing.Rectangle.Inflate(System.Drawing.Size)
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Inflate(Size)
  nameWithType: Rectangle.Inflate(Size)
  fullName: System.Drawing.Rectangle.Inflate(Size)
- uid: System.Drawing.Rectangle.Inflate(System.Int32,System.Int32)
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Inflate(Int32,Int32)
  nameWithType: Rectangle.Inflate(Int32,Int32)
  fullName: System.Drawing.Rectangle.Inflate(Int32,Int32)
- uid: System.Drawing.Rectangle.Inflate(System.Drawing.Rectangle,System.Int32,System.Int32)
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Inflate(Rectangle,Int32,Int32)
  nameWithType: Rectangle.Inflate(Rectangle,Int32,Int32)
  fullName: System.Drawing.Rectangle.Inflate(Rectangle,Int32,Int32)
- uid: System.Drawing.Rectangle.Intersect(System.Drawing.Rectangle)
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Intersect(Rectangle)
  nameWithType: Rectangle.Intersect(Rectangle)
  fullName: System.Drawing.Rectangle.Intersect(Rectangle)
- uid: System.Drawing.Rectangle.Intersect(System.Drawing.Rectangle,System.Drawing.Rectangle)
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Intersect(Rectangle,Rectangle)
  nameWithType: Rectangle.Intersect(Rectangle,Rectangle)
  fullName: System.Drawing.Rectangle.Intersect(Rectangle,Rectangle)
- uid: System.Drawing.Rectangle.IntersectsWith(System.Drawing.Rectangle)
  parent: System.Drawing.Rectangle
  isExternal: false
  name: IntersectsWith(Rectangle)
  nameWithType: Rectangle.IntersectsWith(Rectangle)
  fullName: System.Drawing.Rectangle.IntersectsWith(Rectangle)
- uid: System.Drawing.Rectangle.IsEmpty
  parent: System.Drawing.Rectangle
  isExternal: false
  name: IsEmpty
  nameWithType: Rectangle.IsEmpty
  fullName: System.Drawing.Rectangle.IsEmpty
- uid: System.Drawing.Rectangle.Left
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Left
  nameWithType: Rectangle.Left
  fullName: System.Drawing.Rectangle.Left
- uid: System.Drawing.Rectangle.Location
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Location
  nameWithType: Rectangle.Location
  fullName: System.Drawing.Rectangle.Location
- uid: System.Drawing.Rectangle.Offset(System.Drawing.Point)
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Offset(Point)
  nameWithType: Rectangle.Offset(Point)
  fullName: System.Drawing.Rectangle.Offset(Point)
- uid: System.Drawing.Rectangle.Offset(System.Int32,System.Int32)
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Offset(Int32,Int32)
  nameWithType: Rectangle.Offset(Int32,Int32)
  fullName: System.Drawing.Rectangle.Offset(Int32,Int32)
- uid: System.Drawing.Rectangle.op_Equality(System.Drawing.Rectangle,System.Drawing.Rectangle)
  parent: System.Drawing.Rectangle
  isExternal: false
  name: op_Equality(Rectangle,Rectangle)
  nameWithType: Rectangle.op_Equality(Rectangle,Rectangle)
  fullName: System.Drawing.Rectangle.op_Equality(Rectangle,Rectangle)
- uid: System.Drawing.Rectangle.op_Inequality(System.Drawing.Rectangle,System.Drawing.Rectangle)
  parent: System.Drawing.Rectangle
  isExternal: false
  name: op_Inequality(Rectangle,Rectangle)
  nameWithType: Rectangle.op_Inequality(Rectangle,Rectangle)
  fullName: System.Drawing.Rectangle.op_Inequality(Rectangle,Rectangle)
- uid: System.Drawing.Rectangle.Right
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Right
  nameWithType: Rectangle.Right
  fullName: System.Drawing.Rectangle.Right
- uid: System.Drawing.Rectangle.Round(System.Drawing.RectangleF)
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Round(RectangleF)
  nameWithType: Rectangle.Round(RectangleF)
  fullName: System.Drawing.Rectangle.Round(RectangleF)
- uid: System.Drawing.Rectangle.Size
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Size
  nameWithType: Rectangle.Size
  fullName: System.Drawing.Rectangle.Size
- uid: System.Drawing.Rectangle.Top
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Top
  nameWithType: Rectangle.Top
  fullName: System.Drawing.Rectangle.Top
- uid: System.Drawing.Rectangle.ToString
  parent: System.Drawing.Rectangle
  isExternal: false
  name: ToString()
  nameWithType: Rectangle.ToString()
  fullName: System.Drawing.Rectangle.ToString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Drawing.Rectangle.Truncate(System.Drawing.RectangleF)
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Truncate(RectangleF)
  nameWithType: Rectangle.Truncate(RectangleF)
  fullName: System.Drawing.Rectangle.Truncate(RectangleF)
- uid: System.Drawing.Rectangle.Union(System.Drawing.Rectangle,System.Drawing.Rectangle)
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Union(Rectangle,Rectangle)
  nameWithType: Rectangle.Union(Rectangle,Rectangle)
  fullName: System.Drawing.Rectangle.Union(Rectangle,Rectangle)
- uid: System.Drawing.Rectangle.Width
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Width
  nameWithType: Rectangle.Width
  fullName: System.Drawing.Rectangle.Width
- uid: System.Drawing.Rectangle.X
  parent: System.Drawing.Rectangle
  isExternal: false
  name: X
  nameWithType: Rectangle.X
  fullName: System.Drawing.Rectangle.X
- uid: System.Drawing.Rectangle.Y
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Y
  nameWithType: Rectangle.Y
  fullName: System.Drawing.Rectangle.Y
- uid: System.Drawing.Rectangle.#ctor*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Rectangle
  nameWithType: Rectangle.Rectangle
- uid: System.Drawing.Rectangle.Bottom*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Bottom
  nameWithType: Rectangle.Bottom
- uid: System.Drawing.Rectangle.Ceiling*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Ceiling
  nameWithType: Rectangle.Ceiling
- uid: System.Drawing.Rectangle.Contains*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Contains
  nameWithType: Rectangle.Contains
- uid: System.Drawing.Rectangle.Equals*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Equals
  nameWithType: Rectangle.Equals
- uid: System.Drawing.Rectangle.FromLTRB*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: FromLTRB
  nameWithType: Rectangle.FromLTRB
- uid: System.Drawing.Rectangle.GetHashCode*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: GetHashCode
  nameWithType: Rectangle.GetHashCode
- uid: System.Drawing.Rectangle.Height*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Height
  nameWithType: Rectangle.Height
- uid: System.Drawing.Rectangle.Inflate*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Inflate
  nameWithType: Rectangle.Inflate
- uid: System.Drawing.Rectangle.Intersect*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Intersect
  nameWithType: Rectangle.Intersect
- uid: System.Drawing.Rectangle.IntersectsWith*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: IntersectsWith
  nameWithType: Rectangle.IntersectsWith
- uid: System.Drawing.Rectangle.IsEmpty*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: IsEmpty
  nameWithType: Rectangle.IsEmpty
- uid: System.Drawing.Rectangle.Left*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Left
  nameWithType: Rectangle.Left
- uid: System.Drawing.Rectangle.Location*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Location
  nameWithType: Rectangle.Location
- uid: System.Drawing.Rectangle.Offset*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Offset
  nameWithType: Rectangle.Offset
- uid: System.Drawing.Rectangle.op_Equality*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: op_Equality
  nameWithType: Rectangle.op_Equality
- uid: System.Drawing.Rectangle.op_Inequality*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: op_Inequality
  nameWithType: Rectangle.op_Inequality
- uid: System.Drawing.Rectangle.Right*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Right
  nameWithType: Rectangle.Right
- uid: System.Drawing.Rectangle.Round*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Round
  nameWithType: Rectangle.Round
- uid: System.Drawing.Rectangle.Size*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Size
  nameWithType: Rectangle.Size
- uid: System.Drawing.Rectangle.Top*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Top
  nameWithType: Rectangle.Top
- uid: System.Drawing.Rectangle.ToString*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: ToString
  nameWithType: Rectangle.ToString
- uid: System.Drawing.Rectangle.Truncate*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Truncate
  nameWithType: Rectangle.Truncate
- uid: System.Drawing.Rectangle.Union*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Union
  nameWithType: Rectangle.Union
- uid: System.Drawing.Rectangle.Width*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Width
  nameWithType: Rectangle.Width
- uid: System.Drawing.Rectangle.X*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: X
  nameWithType: Rectangle.X
- uid: System.Drawing.Rectangle.Y*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Y
  nameWithType: Rectangle.Y
