### YamlMime:ManagedReference
items:
- uid: System.Configuration.PropertyInformationCollection
  id: PropertyInformationCollection
  children:
  - System.Configuration.PropertyInformationCollection.CopyTo(System.Configuration.PropertyInformation[],System.Int32)
  - System.Configuration.PropertyInformationCollection.GetEnumerator
  - System.Configuration.PropertyInformationCollection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Configuration.PropertyInformationCollection.Item(System.String)
  langs:
  - csharp
  name: PropertyInformationCollection
  nameWithType: PropertyInformationCollection
  fullName: System.Configuration.PropertyInformationCollection
  type: Class
  summary: "컬렉션을 포함 <xref href=&quot;System.Configuration.PropertyInformation&quot;> </xref> 개체입니다. 이 클래스는 상속 될 수 없습니다."
  remarks: "PropertyInformationCollection 개체의 컬렉션을 포함 <xref:System.Configuration.PropertyInformation>개체입니다.</xref:System.Configuration.PropertyInformation> A <xref:System.Configuration.PropertyInformation>구성 내에서 개별 특성의 세부 정보를 포함 하는 개체입니다.</xref:System.Configuration.PropertyInformation> PropertyInformationCollection 개체가 파생 되는 연결 된에서 <xref:System.Collections.Specialized.NameObjectCollectionBase>개체입니다.</xref:System.Collections.Specialized.NameObjectCollectionBase>"
  example:
  - "The following code example demonstrates how to use the PropertyInformationCollection class.  \n  \n [!code-cs[System.Configuration.PropertyInformation#14](~/add/codesnippet/csharp/t-system.configuration.p_0_1.cs)]\n [!code-vb[System.Configuration.PropertyInformation#14](~/add/codesnippet/visualbasic/t-system.configuration.p_0_1.vb)]"
  syntax:
    content: 'public sealed class PropertyInformationCollection : System.Collections.Specialized.NameObjectCollectionBase'
  inheritance:
  - System.Object
  - System.Collections.Specialized.NameObjectCollectionBase
  implements: []
  inheritedMembers:
  - System.Collections.Specialized.NameObjectCollectionBase.BaseAdd(System.String,System.Object)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseClear
  - System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.Int32)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.String)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys
  - System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues
  - System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues(System.Type)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey(System.Int32)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys
  - System.Collections.Specialized.NameObjectCollectionBase.BaseRemove(System.String)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt(System.Int32)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.Int32,System.Object)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.String,System.Object)
  - System.Collections.Specialized.NameObjectCollectionBase.Count
  - System.Collections.Specialized.NameObjectCollectionBase.IsReadOnly
  - System.Collections.Specialized.NameObjectCollectionBase.Keys
  - System.Collections.Specialized.NameObjectCollectionBase.OnDeserialization(System.Object)
  - System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#IsSynchronized
  - System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#SyncRoot
  platform:
  - net462
- uid: System.Configuration.PropertyInformationCollection.CopyTo(System.Configuration.PropertyInformation[],System.Int32)
  id: CopyTo(System.Configuration.PropertyInformation[],System.Int32)
  parent: System.Configuration.PropertyInformationCollection
  langs:
  - csharp
  name: CopyTo(PropertyInformation[],Int32)
  nameWithType: PropertyInformationCollection.CopyTo(PropertyInformation[],Int32)
  fullName: System.Configuration.PropertyInformationCollection.CopyTo(PropertyInformation[],Int32)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "전체 복사 <xref href=&quot;System.Configuration.PropertyInformationCollection&quot;> </xref> 컬렉션을 호환 되는&1; 차원 <xref:System.Array>대상 배열의 지정된 된 인덱스부터 시작 합니다.</xref:System.Array>"
  syntax:
    content: public void CopyTo (System.Configuration.PropertyInformation[] array, int index);
    parameters:
    - id: array
      type: System.Configuration.PropertyInformation[]
      description: "1 차원 <xref:System.Array>에서 복사한 요소의 대상인은 <xref href=&quot;System.Configuration.PropertyInformationCollection&quot;> </xref> 컬렉션.</xref:System.Array> <xref:System.Array>0부터 시작 하는 인덱스가 있어야 합니다.</xref:System.Array>"
    - id: index
      type: System.Int32
      description: "인덱스는&0;부터 시작 `array` 복사가 시작 되는 합니다."
  overload: System.Configuration.PropertyInformationCollection.CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>array</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The <>*> property of <code>array</code> is less than <>*> + <code>index</code>."
  platform:
  - net462
- uid: System.Configuration.PropertyInformationCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Configuration.PropertyInformationCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: PropertyInformationCollection.GetEnumerator()
  fullName: System.Configuration.PropertyInformationCollection.GetEnumerator()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "가져옵니다는 <xref:System.Collections.IEnumerator>이 통해 반복 하는 데 사용 되는 개체 <xref href=&quot;System.Configuration.PropertyInformationCollection&quot;> </xref> 컬렉션.</xref:System.Collections.IEnumerator>"
  syntax:
    content: public override System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "<xref:System.Collections.IEnumerator>이 통해 반복 하는 데 사용 되는 개체 <xref href=&quot;System.Configuration.PropertyInformationCollection&quot;> </xref>.</xref:System.Collections.IEnumerator>"
  overload: System.Configuration.PropertyInformationCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.PropertyInformationCollection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Configuration.PropertyInformationCollection
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: PropertyInformationCollection.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Configuration.PropertyInformationCollection.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "정보를 표시 한 <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> serialize 하는 데 필요한 데이터로 개체는 <xref href=&quot;System.Configuration.PropertyInformationCollection&quot;> </xref> 인스턴스."
  syntax:
    content: public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "A <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> 개체를 serialize 하는 데 필요한 정보를 포함 하는 <xref href=&quot;System.Configuration.PropertyInformationCollection&quot;> </xref> 인스턴스."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "A <xref:System.Runtime.Serialization.StreamingContext>소스와 연결 된 serialize 된 스트림의 대상이 들어 있는 개체는 <xref href=&quot;System.Configuration.PropertyInformationCollection&quot;> </xref> 인스턴스.</xref:System.Runtime.Serialization.StreamingContext>"
  overload: System.Configuration.PropertyInformationCollection.GetObjectData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>info</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Configuration.PropertyInformationCollection.Item(System.String)
  id: Item(System.String)
  parent: System.Configuration.PropertyInformationCollection
  langs:
  - csharp
  name: Item(String)
  nameWithType: PropertyInformationCollection.Item(String)
  fullName: System.Configuration.PropertyInformationCollection.Item(String)
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "가져옵니다는 <xref href=&quot;System.Configuration.PropertyInformation&quot;> </xref> 지정된 된 속성 이름에 따라 컬렉션의 개체입니다."
  syntax:
    content: public System.Configuration.PropertyInformation this[string propertyName] { get; }
    parameters:
    - id: propertyName
      type: System.String
      description: "에 포함 된 구성 특성의 이름이 고 <xref href=&quot;System.Configuration.PropertyInformationCollection&quot;> </xref> 개체입니다."
    return:
      type: System.Configuration.PropertyInformation
      description: "A <xref href=&quot;System.Configuration.PropertyInformation&quot;></xref> object."
  overload: System.Configuration.PropertyInformationCollection.Item*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: System.Collections.Specialized.NameObjectCollectionBase
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Configuration.PropertyInformationCollection.CopyTo(System.Configuration.PropertyInformation[],System.Int32)
  parent: System.Configuration.PropertyInformationCollection
  isExternal: false
  name: CopyTo(PropertyInformation[],Int32)
  nameWithType: PropertyInformationCollection.CopyTo(PropertyInformation[],Int32)
  fullName: System.Configuration.PropertyInformationCollection.CopyTo(PropertyInformation[],Int32)
- uid: System.Configuration.PropertyInformation[]
  parent: System.Configuration
  isExternal: false
  name: PropertyInformation
  nameWithType: PropertyInformation
  fullName: System.Configuration.PropertyInformation[]
  spec.csharp:
  - uid: System.Configuration.PropertyInformation
    name: PropertyInformation
    nameWithType: PropertyInformation
    fullName: PropertyInformation[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Configuration.PropertyInformationCollection.GetEnumerator
  parent: System.Configuration.PropertyInformationCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: PropertyInformationCollection.GetEnumerator()
  fullName: System.Configuration.PropertyInformationCollection.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Configuration.PropertyInformationCollection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Configuration.PropertyInformationCollection
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: PropertyInformationCollection.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Configuration.PropertyInformationCollection.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Configuration.PropertyInformationCollection.Item(System.String)
  parent: System.Configuration.PropertyInformationCollection
  isExternal: false
  name: Item(String)
  nameWithType: PropertyInformationCollection.Item(String)
  fullName: System.Configuration.PropertyInformationCollection.Item(String)
- uid: System.Configuration.PropertyInformation
  parent: System.Configuration
  isExternal: false
  name: PropertyInformation
  nameWithType: PropertyInformation
  fullName: System.Configuration.PropertyInformation
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Configuration.PropertyInformationCollection.CopyTo*
  parent: System.Configuration.PropertyInformationCollection
  isExternal: false
  name: CopyTo
  nameWithType: PropertyInformationCollection.CopyTo
- uid: System.Configuration.PropertyInformationCollection.GetEnumerator*
  parent: System.Configuration.PropertyInformationCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: PropertyInformationCollection.GetEnumerator
- uid: System.Configuration.PropertyInformationCollection.GetObjectData*
  parent: System.Configuration.PropertyInformationCollection
  isExternal: false
  name: GetObjectData
  nameWithType: PropertyInformationCollection.GetObjectData
- uid: System.Configuration.PropertyInformationCollection.Item*
  parent: System.Configuration.PropertyInformationCollection
  isExternal: false
  name: Item
  nameWithType: PropertyInformationCollection.Item
