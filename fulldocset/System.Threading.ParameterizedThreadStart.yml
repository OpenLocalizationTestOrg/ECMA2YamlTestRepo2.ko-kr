### YamlMime:ManagedReference
items:
- uid: System.Threading.ParameterizedThreadStart
  id: ParameterizedThreadStart
  langs:
  - csharp
  name: ParameterizedThreadStart
  nameWithType: ParameterizedThreadStart
  fullName: System.Threading.ParameterizedThreadStart
  type: Delegate
  summary: "실행 되는 메서드를 나타냅니다는 <xref href=&quot;System.Threading.Thread&quot;> </xref>합니다."
  remarks: "스레드에서 실행 되는 메서드의 관리 되는 스레드를 만들면 나타내는:- <xref:System.Threading.ThreadStart>에 전달 되는 대리자는 <xref:System.Threading.Thread.%23ctor%28System.Threading.ThreadStart%29?displayProperty=fullName>생성자.</xref:System.Threading.Thread.%23ctor%28System.Threading.ThreadStart%29?displayProperty=fullName> </xref:System.Threading.ThreadStart>  매개 변수가 없는 및 반환 하는 모든 메서드에 `void` C# 또는 `Sub` Visual Basic의 프로시저 대리자를 나타낼 수 있습니다.      -ParameterizedThreadStart 대리자에 전달 되는 <xref:System.Threading.Thread.%23ctor%28System.Threading.ParameterizedThreadStart%2CSystem.Int32%29?displayProperty=fullName>생성자.</xref:System.Threading.Thread.%23ctor%28System.Threading.ParameterizedThreadStart%2CSystem.Int32%29?displayProperty=fullName> 형식의 단일 매개 변수를 가진 모든 메서드에 <xref:System.Object>되 고, C#에서 void를 반환 하거나는 Sub 프로시저 Visual Basic에서 대리자를 나타낼 수 있습니다.</xref:System.Object>       스레드가 실행 될 때까지 시작 되지 않습니다는 <xref:System.Threading.Thread.Start%2A?displayProperty=fullName>메서드를 호출 합니다.</xref:System.Threading.Thread.Start%2A?displayProperty=fullName> <xref:System.Threading.ThreadStart>스레드에서 호출 되는 ParameterizedThreadStart 대리자와 대리자가 나타내는 메서드의 첫 번째 줄에서 실행이 시작 또는.</xref:System.Threading.ThreadStart> ParameterizedThreadStart 대리자에 전달 되는 개체의 경우는 <xref:System.Threading.Thread.Start%28System.Object%29>메서드에 대리자에 전달 됩니다.</xref:System.Threading.Thread.Start%28System.Object%29>      > [!NOTE] > Visual Basic 및 C# 사용자가 생략할 수는 <xref:System.Threading.ThreadStart>또는 스레드를 만드는 경우 ParameterizedThreadStart 대리자 생성자.</xref:System.Threading.ThreadStart> Visual Basic에서 사용 하 여는 `AddressOf` 되어 메서드가 전달 하는 경우 연산자는 <xref:System.Threading.Thread.%23ctor%2A>생성자; 예를 들어 `Dim t As New Thread(AddressOf ThreadProc)`.</xref:System.Threading.Thread.%23ctor%2A> C#에서는 스레드 프로시저의 이름을 지정 하면 됩니다. 컴파일러는 올바른 대리자 생성자를 선택 합니다.      > [!NOTE] > 생성자의 첫 번째 매개 변수 인스턴스 변수는 c + +에서 인스턴스 메서드의 ParameterizedThreadStart 대리자를 만들 때. 정적 메서드를 생성자의 첫 번째 매개 변수는&0;입니다. 정적 메서드의 대리자 생성자에 매개 변수가 하나만 필요한: 클래스 이름으로 정규화 된 콜백 메서드의 주소입니다.       ParameterizedThreadStart 대리자와는 <xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=fullName>모든 개체와 <xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=fullName>사이로</xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=fullName> 전달 될 수 있으므로 형식이 안전 하지를 쉽게 스레드 프로시저에 있지만이 방법은 데이터를 전달 하 메서드 오버 로드 확인</xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=fullName> 스레드 프로시저에 데이터를 전달 하는 보다 강력한 방법은 작업자 개체에 데이터 필드와 스레드 프로시저를 넣는 것입니다. 자세한 내용은 참조 [스레드 만들기 및 시작 시 데이터 전달](~/add/includes/ajax-current-ext-md.md)합니다.       ParameterizedThreadStart 대리자에는 하나의 매개 변수만 지원합니다. 다음 중 하나는 해당 매개 변수를 만들어서는 ParameterizedThreadStart에 여러 데이터 항목을 전달할 수 있습니다.-배열입니다.      -컬렉션 형식과 동일한 형식의 모든 데이터 항목의 경우.      -는 튜플 형식 <xref:System.Tuple%602>또는 <xref:System.Tuple%604>.</xref:System.Tuple%604> </xref:System.Tuple%602> 예:"
  example:
  - "The following code example uses a ParameterizedThreadStart delegate with to execute a static method and an instance method. The first ParameterizedThreadStart delegate is represented by the static `DoWork` method and the second is represented by the instance `DoMoreWork` method. Both methods match the ParameterizedThreadStart delegate signature; that is, they have a single parameter of type <xref:System.Object> and don't return a value.  \n  \n> [!NOTE]\n>  The Visual Basic and C# compilers infer the ParameterizedThreadStart delegate from the signatures of the `DoWork` and `DoMoreWork` methods, and call the correct constructor. Thus, there is no explicit constructor call in the code.  \n  \n [!code-cpp[System.Threading.ParameterizedThreadStart#1](~/add/codesnippet/cpp/t-system.threading.param_1.cpp)]\n [!code-vb[System.Threading.ParameterizedThreadStart#1](~/add/codesnippet/visualbasic/t-system.threading.param_1.vb)]\n [!code-cs[System.Threading.ParameterizedThreadStart#1](~/add/codesnippet/csharp/t-system.threading.param_1.cs)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public delegate void ParameterizedThreadStart(object obj);
  inheritance:
  - System.Delegate
  platform:
  - net462
references:
- uid: System.Delegate
  isExternal: false
  name: System.Delegate
