### YamlMime:ManagedReference
items:
- uid: System.Text.RegularExpressions.RegexCompilationInfo
  id: RegexCompilationInfo
  children:
  - System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)
  - System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)
  - System.Text.RegularExpressions.RegexCompilationInfo.IsPublic
  - System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout
  - System.Text.RegularExpressions.RegexCompilationInfo.Name
  - System.Text.RegularExpressions.RegexCompilationInfo.Namespace
  - System.Text.RegularExpressions.RegexCompilationInfo.Options
  - System.Text.RegularExpressions.RegexCompilationInfo.Pattern
  langs:
  - csharp
  name: RegexCompilationInfo
  nameWithType: RegexCompilationInfo
  fullName: System.Text.RegularExpressions.RegexCompilationInfo
  type: Class
  summary: "독립 실행형 어셈블리에 정규식을 컴파일하는 데 사용 되는 정규식에 대 한 정보를 제공 합니다."
  remarks: "RegexCompilationInfo 개체의 배열에 전달 되는 <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A>메서드는 어셈블리에 포함 시킬 각 정규식에 대 한 정보를 제공 합니다.</xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> 어셈블리에 포함 된 각 컴파일된 정규식은 <xref:System.Text.RegularExpressions.Regex>.</xref:System.Text.RegularExpressions.Regex> 에서 파생 된 클래스도 표시 됩니다. RegexCompilationInfo 형식의 속성은 정규식의 클래스 이름, 정규화 된 이름 (즉, 해당 네임 스페이스 및 해당 형식 이름), 정규식 패턴, (예: 여부 정규식은 대/소문자 구분), 추가 옵션 및 정규식 엔진이 일치 항목을 검색 해야 기간을 지정 하는 시간 제한 간격을 정의 합니다.       오버 로드 된 클래스 생성자를 호출 하 여 RegexCompilationInfo 개체를 인스턴스화할 수 있습니다."
  syntax:
    content: public class RegexCompilationInfo
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)
  id: '#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)'
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  langs:
  - csharp
  name: RegexCompilationInfo(String,RegexOptions,String,String,Boolean)
  nameWithType: RegexCompilationInfo.RegexCompilationInfo(String,RegexOptions,String,String,Boolean)
  fullName: System.Text.RegularExpressions.RegexCompilationInfo.RegexCompilationInfo(String,RegexOptions,String,String,Boolean)
  type: Constructor
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Text.RegularExpressions.RegexCompilationInfo&quot;> </xref> 어셈블리에 포함 될 수 있는 정규식에 대 한 정보를 포함 하는 클래스입니다."
  remarks: "<xref:System.Text.RegularExpressions.RegexCompilationInfo>클래스</xref:System.Text.RegularExpressions.RegexCompilationInfo> 의 속성에 직접 해당 하는 RegexCompilationInfo 생성자의 각 매개 변수 모든 속성 읽기/쓰기 이기 때문에 해당 값 직접 할당할 수도 있습니다.       <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A>메서드 컴파일된 정규식을 포함 하는 어셈블리를 생성 합니다.</xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> 지정 하지 않아야 따라서 <xref:System.Text.RegularExpressions.RegexOptions>의 다음 값 중 하나로 `options`.</xref:System.Text.RegularExpressions.RegexOptions>       경우 `ispublic` 은 `true`, 컴파일된 정규식 클래스에 public 액세스 가능성이 지정 됩니다. 즉, 모든 어셈블리에서 실행 되는 코드에서 인스턴스화할 수 있습니다. 경우 `ispublic` 은 `false`의 컴파일된 정규식 제공 `internal` (C#에서) 또는 `Friend` (Visual Basic)에서는 내게 필요한 옵션입니다. 즉, 정규식 클래스와 동일한 어셈블리에서 실행 되는 코드 에서만에서 인스턴스화할 수 있습니다."
  example:
  - "The following example creates and uses a compiled regular expression in two steps.  \n  \n In the first step, compile and execute the following code example. The RegexCompilationInfo constructor in the code example defines a compiled regular expression. The result of executing the code is an assembly named FishRegex.dll that contains a compiled regular expression type named `FishRegex`.  \n  \n [!code-cs[sys.txt.rgxCompInfo#1](~/add/codesnippet/csharp/7e273a6c-e154-4435-ab93-_1.cs)]\n [!code-vb[sys.txt.rgxCompInfo#1](~/add/codesnippet/visualbasic/7e273a6c-e154-4435-ab93-_1.vb)]  \n  \n In the second step, compile the following code example using a reference to FishRegex.dll, and then run the resulting executable file. The executable file matches a target string by using the `FishRegex` type, and displays the match, group, capture group, and index position of the matches in the target string.  \n  \n [!code-vb[sys.txt.rgxCompInfo#2](~/add/codesnippet/visualbasic/7e273a6c-e154-4435-ab93-_2.vb)]\n [!code-cs[sys.txt.rgxCompInfo#2](~/add/codesnippet/csharp/7e273a6c-e154-4435-ab93-_2.cs)]"
  syntax:
    content: public RegexCompilationInfo (string pattern, System.Text.RegularExpressions.RegexOptions options, string name, string fullnamespace, bool ispublic);
    parameters:
    - id: pattern
      type: System.String
      description: "컴파일할 정규식입니다."
    - id: options
      type: System.Text.RegularExpressions.RegexOptions
      description: "정규식을 컴파일할 때 사용할 정규식 옵션입니다."
    - id: name
      type: System.String
      description: "컴파일된 정규식을 나타내는 형식의 이름입니다."
    - id: fullnamespace
      type: System.String
      description: "새 형식을 속해 있는 네임 스페이스입니다."
    - id: ispublic
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>컴파일된 정규식을 공개적으로 표시 하려면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Text.RegularExpressions.RegexCompilationInfo.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>name</code>&lt;xref:System.String?displayProperty=fullName&gt;합니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pattern</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>name</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>fullnamespace</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)
  id: '#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)'
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  langs:
  - csharp
  name: RegexCompilationInfo(String,RegexOptions,String,String,Boolean,TimeSpan)
  nameWithType: RegexCompilationInfo.RegexCompilationInfo(String,RegexOptions,String,String,Boolean,TimeSpan)
  fullName: System.Text.RegularExpressions.RegexCompilationInfo.RegexCompilationInfo(String,RegexOptions,String,String,Boolean,TimeSpan)
  type: Constructor
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Text.RegularExpressions.RegexCompilationInfo&quot;> </xref> 어셈블리에 포함 되도록 지정 된 시간 제한 값이 정규식에 대 한 정보를 포함 하는 클래스입니다."
  remarks: "<xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> <xref:System.Text.RegularExpressions.RegexCompilationInfo>클래스</xref:System.Text.RegularExpressions.RegexCompilationInfo> 의 속성에 해당 하는 생성자를 직접</xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> 의 각 매개 변수 모든 속성 읽기/쓰기 이기 때문에 해당 값 직접 할당할 수도 있습니다.       <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A>메서드 컴파일된 정규식을 포함 하는 어셈블리를 생성 합니다.</xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> 지정 하지 않아야 따라서 <xref:System.Text.RegularExpressions.RegexOptions>의 다음 값 중 하나로 `options`.</xref:System.Text.RegularExpressions.RegexOptions>       경우 `ispublic` 은 `true`, 컴파일된 정규식 클래스에 public 액세스 가능성이 지정 됩니다. 즉, 모든 어셈블리에서 실행 되는 코드에서 인스턴스화할 수 있습니다. 경우 `ispublic` 은 `false`의 컴파일된 정규식 제공 `internal` (C#에서) 또는 `Friend` (Visual Basic)에서는 내게 필요한 옵션입니다. 즉, 정규식 클래스와 동일한 어셈블리에서 실행 되는 코드 에서만에서 인스턴스화할 수 있습니다.       `matchTimeout` 매개 변수는 컴파일된 정규식에 대 한 기본 시간 제한 간격을 정의 합니다. 이 값은 컴파일된 정규식 개체에서 작업 시간이 초과 정규식 엔진은 throw 전에 단일 일치 작업을 실행할 시간의 대략적인 크기를 나타냅니다는 <xref:System.Text.RegularExpressions.RegexMatchTimeoutException>다음 타이밍 검사 중 발생 한 예외.</xref:System.Text.RegularExpressions.RegexMatchTimeoutException> 시간 제한 값에 대 한 자세한 내용은 참조는 <xref:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout%2A>속성.</xref:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout%2A>      > [!IMPORTANT] > 항상 컴파일된 정규식에 대 한 기본 제한 시간 값을 설정 하는 것이 좋습니다. 정규식 라이브러리 소비자에 게 전달 하 여 해당 시간 제한 값을 재정의할 수는 <xref:System.TimeSpan>이 생성자 오버 로드에 새 시간 제한 간격을 나타내는 값입니다.</xref:System.TimeSpan>"
  example:
  - "The following example defines a single compiled regular expression named `DuplicateChars` that identifies two or more occurrences of the same character in an input string. The compiled regular expression has a default time-out of 2 seconds. When you execute the example, it creates a class library named RegexLib.dll that contains the compiled regular expression.  \n  \n [!code-cs[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#1](~/add/codesnippet/csharp/caa070a5-44ee-405f-81e7-_1.cs)]\n [!code-vb[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#1](~/add/codesnippet/visualbasic/caa070a5-44ee-405f-81e7-_1.vb)]  \n  \n The regular expression pattern `(\\w)\\1+` is defined as shown in the following table.  \n  \n|Pattern|Description|  \n|-------------|-----------------|  \n|`(\\w)`|Match any word character and assign it to the first capturing group.|  \n|`\\1+`|Match one or more occurrences of the value of the first captured group.|  \n  \n The following example uses the `DuplicatedChars` regular expression to identify duplicate characters in a string array. When it calls the `DuplicatedChars` constructor, it changes the time-out interval to .5 seconds.  \n  \n [!code-cs[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#2](~/add/codesnippet/csharp/caa070a5-44ee-405f-81e7-_2.cs)]\n [!code-vb[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#2](~/add/codesnippet/visualbasic/caa070a5-44ee-405f-81e7-_2.vb)]"
  syntax:
    content: public RegexCompilationInfo (string pattern, System.Text.RegularExpressions.RegexOptions options, string name, string fullnamespace, bool ispublic, TimeSpan matchTimeout);
    parameters:
    - id: pattern
      type: System.String
      description: "컴파일할 정규식입니다."
    - id: options
      type: System.Text.RegularExpressions.RegexOptions
      description: "정규식을 컴파일할 때 사용할 정규식 옵션입니다."
    - id: name
      type: System.String
      description: "컴파일된 정규식을 나타내는 형식의 이름입니다."
    - id: fullnamespace
      type: System.String
      description: "새 형식을 속해 있는 네임 스페이스입니다."
    - id: ispublic
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>컴파일된 정규식을 공개적으로 표시 하려면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
    - id: matchTimeout
      type: System.TimeSpan
      description: "정규식에 대 한 기본 제한 시간 간격입니다."
  overload: System.Text.RegularExpressions.RegexCompilationInfo.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>name</code>&lt;xref:System.String?displayProperty=fullName&gt;합니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pattern</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>name</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>fullnamespace</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>matchTimeout</code>가 음수, 0, 약 24 일 보다 큽니다."
  platform:
  - net462
- uid: System.Text.RegularExpressions.RegexCompilationInfo.IsPublic
  id: IsPublic
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  langs:
  - csharp
  name: IsPublic
  nameWithType: RegexCompilationInfo.IsPublic
  fullName: System.Text.RegularExpressions.RegexCompilationInfo.IsPublic
  type: Property
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: "컴파일된 정규식을 공개적으로 표시할 수 있는지 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "IsPublic 속성이 `false`, 클래스를 포함 하는 어셈블리에서 실행 되는 코드를 통해서만 현재 인스턴스에 의해 정의 된 정규식 클래스를 인스턴스화할 수 있습니다. 그러나 때문에 <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A?displayProperty=fullName>만 컴파일된 정규식을 포함 하 고 여기에 코드 추가를 허용 하지 않는 한 어셈블리를 생성 하는 메서드,이 속성의 값을 할당할 수 없는 이유는 일반적으로 `false`.</xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsPublic { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>정규식을 공개적으로 표시할; 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Text.RegularExpressions.RegexCompilationInfo.IsPublic*
  exceptions: []
  platform:
  - net462
- uid: System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout
  id: MatchTimeout
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  langs:
  - csharp
  name: MatchTimeout
  nameWithType: RegexCompilationInfo.MatchTimeout
  fullName: System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout
  type: Property
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: "정규식의 기본 시간 제한 간격을 가져오거나 설정 합니다."
  remarks: "MatchTimeout 속성 컴파일된 정규식에 대 한 기본 시간 제한 간격을 정의합니다. 이 값은 컴파일된 정규식을 작업 시간이 초과 하 고 정규식 엔진은 throw 하기 전에 단일 일치 작업을 실행할 수 있는 시간의 대략적인 크기를 나타냅니다는 <xref:System.Text.RegularExpressions.RegexMatchTimeoutException>다음 타이밍 검사 중 발생 한 예외.</xref:System.Text.RegularExpressions.RegexMatchTimeoutException>      > [!IMPORTANT] > 항상 컴파일된 정규식에 대 한 기본 제한 시간 값을 설정 하는 것이 좋습니다. 정규식 라이브러리 소비자에 게 전달 하 여 해당 시간 제한 값을 재정의할 수는 <xref:System.TimeSpan>컴파일된 정규식의 클래스 생성자에 새 시간 제한 간격을 나타내는 값입니다.</xref:System.TimeSpan>       기본 제한 시간 값을 할당할 수 있습니다는 <xref:System.Text.RegularExpressions.RegexCompilationInfo>다음 방법 중 하나에서 개체:-를 호출 하 여는 <xref:System.AppDomain.SetData%2A?displayProperty=fullName>메서드와의 문자열 표현을 제공 하는 <xref:System.TimeSpan>&quot;REGEX_DEFAULT_MATCH_TIMEOUT&quot; 속성에 대 한 값.</xref:System.TimeSpan> </xref:System.AppDomain.SetData%2A?displayProperty=fullName> </xref:System.Text.RegularExpressions.RegexCompilationInfo>      -호출는 <xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.String%2CSystem.String%2CSystem.Boolean%2CSystem.TimeSpan%29>생성자 및에 대 한 값을 제공 하는 `matchTimeout` 매개 변수.</xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.String%2CSystem.String%2CSystem.Boolean%2CSystem.TimeSpan%29>      이 속성의 값을 설정 합니다.       적절 한 시간 제한 간격을 설정 하려면 다음 요소를 고려:-길이 및 복잡 한 정규식 패턴입니다. 길고 복잡 한 정규식 짧고 간단 것 보다 더 많은 시간이 필요합니다.      -예상된 컴퓨터 로드 합니다. 처리는 높은 CPU 및 메모리 사용률 있는 시스템에서 많은 시간이 소요 됩니다."
  example:
  - "The following example defines a single compiled regular expression named `DuplicateChars` that identifies two or more occurrences of the same character in an input string. The compiled regular expression has a default time-out of 2 seconds. When you execute the example, it creates a class library named RegexLib.dll that contains the compiled regular expression.  \n  \n [!code-cs[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#1](~/add/codesnippet/csharp/p-system.text.regularexp_1.cs)]\n [!code-vb[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#1](~/add/codesnippet/visualbasic/p-system.text.regularexp_1.vb)]  \n  \n The regular expression pattern `(\\w)\\1+` is defined as shown in the following table.  \n  \n|Pattern|Description|  \n|-------------|-----------------|  \n|`(\\w)`|Match any word character and assign it to the first capturing group.|  \n|`\\1+`|Match one or more occurrences of the value of the first captured group.|  \n  \n The following example uses the `DuplicatedChars` regular expression to identify duplicate characters in a string array. When it calls the `DuplicatedChars` constructor, it changes the time-out interval to .5 seconds.  \n  \n [!code-cs[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#2](~/add/codesnippet/csharp/p-system.text.regularexp_2.cs)]\n [!code-vb[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#2](~/add/codesnippet/visualbasic/p-system.text.regularexp_2.vb)]"
  syntax:
    content: public TimeSpan MatchTimeout { get; set; }
    return:
      type: System.TimeSpan
      description: "되기 전에 패턴 일치 작업에서 경과 될 수 있는 기본 최대 시간 간격을 <xref:System.Text.RegularExpressions.RegexMatchTimeoutException>throw 되며, 또는 &lt;xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=fullName&gt; 시간 제한이 해제 되어 있는 경우.</xref:System.Text.RegularExpressions.RegexMatchTimeoutException>"
  overload: System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Text.RegularExpressions.RegexCompilationInfo.Name
  id: Name
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  langs:
  - csharp
  name: Name
  nameWithType: RegexCompilationInfo.Name
  fullName: System.Text.RegularExpressions.RegexCompilationInfo.Name
  type: Property
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: "컴파일된 정규식을 나타내는 형식의 이름을 가져오거나 설정 합니다."
  remarks: "<xref:System.Text.RegularExpressions.RegexCompilationInfo>클래스는 컴파일된 정규식을 <xref:System.Text.RegularExpressions.Regex>.</xref:System.Text.RegularExpressions.Regex> 에서 파생 된 클래스로 표현 됨을 정의 하는 데 사용</xref:System.Text.RegularExpressions.RegexCompilationInfo> Name 속성 정의 정규식 종류의 클래스 이름 및 <xref:System.Text.RegularExpressions.RegexCompilationInfo.Namespace%2A>및 이름 속성의 정규화 된 이름을 정의 합니다.</xref:System.Text.RegularExpressions.RegexCompilationInfo.Namespace%2A>"
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "새로운 유형의 이름입니다."
  overload: System.Text.RegularExpressions.RegexCompilationInfo.Name*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "이 속성의 값은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "이 속성의 값은 빈 문자열입니다."
  platform:
  - net462
- uid: System.Text.RegularExpressions.RegexCompilationInfo.Namespace
  id: Namespace
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  langs:
  - csharp
  name: Namespace
  nameWithType: RegexCompilationInfo.Namespace
  fullName: System.Text.RegularExpressions.RegexCompilationInfo.Namespace
  type: Property
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: "새 형식을 속해 있는 네임 스페이스를 가져오거나 설정 합니다."
  remarks: "<xref:System.Text.RegularExpressions.RegexCompilationInfo>클래스는 컴파일된 정규식을 <xref:System.Text.RegularExpressions.Regex>.</xref:System.Text.RegularExpressions.Regex> 에서 파생 된 클래스로 표현 됨을 정의 하는 데 사용</xref:System.Text.RegularExpressions.RegexCompilationInfo> Namespace 속성은 컴파일된 정규식 형식과 Namespace를 포함 하는 네임 스페이스를 정의 하 고 <xref:System.Text.RegularExpressions.RegexCompilationInfo.Name%2A>속성의 정규화 된 이름을 정의 합니다.</xref:System.Text.RegularExpressions.RegexCompilationInfo.Name%2A>"
  syntax:
    content: public string Namespace { get; set; }
    return:
      type: System.String
      description: "새로운 유형의 네임 스페이스입니다."
  overload: System.Text.RegularExpressions.RegexCompilationInfo.Namespace*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "이 속성의 값은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Text.RegularExpressions.RegexCompilationInfo.Options
  id: Options
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  langs:
  - csharp
  name: Options
  nameWithType: RegexCompilationInfo.Options
  fullName: System.Text.RegularExpressions.RegexCompilationInfo.Options
  type: Property
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: "정규식을 컴파일할 때 사용할 옵션을 가져오거나 설정 합니다."
  remarks: "<xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A>메서드 컴파일된 정규식을 포함 하는 어셈블리를 생성 합니다.</xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> 지정할 필요가 없습니다 따라서 <xref:System.Text.RegularExpressions.RegexOptions>이 속성의 값 중 하나로.</xref:System.Text.RegularExpressions.RegexOptions> 가 존재 하는 경우는 <xref:System.Text.RegularExpressions.RegexOptions>옵션은 무시 됩니다.</xref:System.Text.RegularExpressions.RegexOptions>"
  syntax:
    content: public System.Text.RegularExpressions.RegexOptions Options { get; set; }
    return:
      type: System.Text.RegularExpressions.RegexOptions
      description: "열거형 값의 비트 조합입니다."
  overload: System.Text.RegularExpressions.RegexCompilationInfo.Options*
  exceptions: []
  platform:
  - net462
- uid: System.Text.RegularExpressions.RegexCompilationInfo.Pattern
  id: Pattern
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  langs:
  - csharp
  name: Pattern
  nameWithType: RegexCompilationInfo.Pattern
  fullName: System.Text.RegularExpressions.RegexCompilationInfo.Pattern
  type: Property
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: "컴파일할 정규식을 가져오거나 설정 합니다."
  remarks: "패턴 속성에 유효한 모든 정규식 포함 될 수 있습니다. 패턴 속성의 값이 올바른 구문의 정규식 패턴을 <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> <xref:System.ArgumentException>.</xref:System.ArgumentException> 를 throw 하는 메서드</xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> 를 호출 하는 경우"
  syntax:
    content: public string Pattern { get; set; }
    return:
      type: System.String
      description: "컴파일할 정규식입니다."
  overload: System.Text.RegularExpressions.RegexCompilationInfo.Pattern*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "이 속성의 값은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  isExternal: false
  name: RegexCompilationInfo(String,RegexOptions,String,String,Boolean)
  nameWithType: RegexCompilationInfo.RegexCompilationInfo(String,RegexOptions,String,String,Boolean)
  fullName: System.Text.RegularExpressions.RegexCompilationInfo.RegexCompilationInfo(String,RegexOptions,String,String,Boolean)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Text.RegularExpressions.RegexOptions
  parent: System.Text.RegularExpressions
  isExternal: true
  name: RegexOptions
  nameWithType: RegexOptions
  fullName: System.Text.RegularExpressions.RegexOptions
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  isExternal: false
  name: RegexCompilationInfo(String,RegexOptions,String,String,Boolean,TimeSpan)
  nameWithType: RegexCompilationInfo.RegexCompilationInfo(String,RegexOptions,String,String,Boolean,TimeSpan)
  fullName: System.Text.RegularExpressions.RegexCompilationInfo.RegexCompilationInfo(String,RegexOptions,String,String,Boolean,TimeSpan)
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Text.RegularExpressions.RegexCompilationInfo.IsPublic
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  isExternal: false
  name: IsPublic
  nameWithType: RegexCompilationInfo.IsPublic
  fullName: System.Text.RegularExpressions.RegexCompilationInfo.IsPublic
- uid: System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  isExternal: false
  name: MatchTimeout
  nameWithType: RegexCompilationInfo.MatchTimeout
  fullName: System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout
- uid: System.Text.RegularExpressions.RegexCompilationInfo.Name
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  isExternal: false
  name: Name
  nameWithType: RegexCompilationInfo.Name
  fullName: System.Text.RegularExpressions.RegexCompilationInfo.Name
- uid: System.Text.RegularExpressions.RegexCompilationInfo.Namespace
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  isExternal: false
  name: Namespace
  nameWithType: RegexCompilationInfo.Namespace
  fullName: System.Text.RegularExpressions.RegexCompilationInfo.Namespace
- uid: System.Text.RegularExpressions.RegexCompilationInfo.Options
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  isExternal: false
  name: Options
  nameWithType: RegexCompilationInfo.Options
  fullName: System.Text.RegularExpressions.RegexCompilationInfo.Options
- uid: System.Text.RegularExpressions.RegexCompilationInfo.Pattern
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  isExternal: false
  name: Pattern
  nameWithType: RegexCompilationInfo.Pattern
  fullName: System.Text.RegularExpressions.RegexCompilationInfo.Pattern
- uid: System.Text.RegularExpressions.RegexCompilationInfo.#ctor*
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  isExternal: false
  name: RegexCompilationInfo
  nameWithType: RegexCompilationInfo.RegexCompilationInfo
- uid: System.Text.RegularExpressions.RegexCompilationInfo.IsPublic*
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  isExternal: false
  name: IsPublic
  nameWithType: RegexCompilationInfo.IsPublic
- uid: System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout*
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  isExternal: false
  name: MatchTimeout
  nameWithType: RegexCompilationInfo.MatchTimeout
- uid: System.Text.RegularExpressions.RegexCompilationInfo.Name*
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  isExternal: false
  name: Name
  nameWithType: RegexCompilationInfo.Name
- uid: System.Text.RegularExpressions.RegexCompilationInfo.Namespace*
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  isExternal: false
  name: Namespace
  nameWithType: RegexCompilationInfo.Namespace
- uid: System.Text.RegularExpressions.RegexCompilationInfo.Options*
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  isExternal: false
  name: Options
  nameWithType: RegexCompilationInfo.Options
- uid: System.Text.RegularExpressions.RegexCompilationInfo.Pattern*
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  isExternal: false
  name: Pattern
  nameWithType: RegexCompilationInfo.Pattern
