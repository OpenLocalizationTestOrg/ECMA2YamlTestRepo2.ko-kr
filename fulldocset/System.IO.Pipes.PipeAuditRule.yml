### YamlMime:ManagedReference
items:
- uid: System.IO.Pipes.PipeAuditRule
  id: PipeAuditRule
  children:
  - System.IO.Pipes.PipeAuditRule.#ctor(System.Security.Principal.IdentityReference,System.IO.Pipes.PipeAccessRights,System.Security.AccessControl.AuditFlags)
  - System.IO.Pipes.PipeAuditRule.#ctor(System.String,System.IO.Pipes.PipeAccessRights,System.Security.AccessControl.AuditFlags)
  - System.IO.Pipes.PipeAuditRule.PipeAccessRights
  langs:
  - csharp
  name: PipeAuditRule
  nameWithType: PipeAuditRule
  fullName: System.IO.Pipes.PipeAuditRule
  type: Class
  summary: "파이프에 대 한 감사 규칙을 정의 하는 액세스 제어 항목 (ACE)에 대 한 추상화를 나타냅니다."
  remarks: "감사 규칙 시스템 개체에 수행 하는 동작이 기록 된 시기와 방법을 결정 합니다.       PipeAuditRule 클래스를 추상적으로 나타낸은 사용자 계정, (읽기, 쓰기 및 등)를 제공 하려면 액세스 유형을 지정 하는 기본 액세스 제어 항목 (ACE) 및 감사를 수행할지 여부. 이 클래스는 감사 규칙은에서 상속 되며,과 개체에 전파 하는 방법을 지정할 수 있습니다.       Windows NT 또는 이상 운영 체제를 실행 하는 컴퓨터에서 감사 파일을 허용 하려면 액세스 보안 감사 정책을 설정 해야 합니다. 기본적으로이 정책 설정은 **감사 안 함**합니다.       액세스 보안 감사 정책을 사용 하려면 다음 단계를 수행: 1입니다.  클릭는 **시작** 단추 및 가리킨 **모든 프로그램**합니다. 가리킨 **관리 도구** 클릭 하 고 **로컬 보안 정책**합니다.      2.  로컬 보안 설정 창에서 로컬 정책 폴더를 확장 하 고 감사 정책 폴더를 마우스 왼쪽 단추로 클릭 합니다.      3.  두 번 클릭는 **개체 액세스 감사** 항목을 표시 하기 위해 로컬 보안 설정 창 오른쪽 창에는 **감사 개체 액세스 속성** 대화 상자.      4.  선택 된 **성공** 또는 **실패** 상자를 성공 또는 실패를 기록 합니다.       사용자 계정에 대 한 감사 규칙 한다는 동일한 사용자 계정에 대 한 해당 액세스 규칙을 참고 합니다.       새 감사 규칙을 만들려면 PipeAuditRule 클래스를 사용 합니다. <xref:System.IO.Pipes.PipeSecurity>클래스</xref:System.IO.Pipes.PipeSecurity> 를 사용 하 여이 규칙을 유지할 수 있습니다."
  syntax:
    content: 'public sealed class PipeAuditRule : System.Security.AccessControl.AuditRule'
  inheritance:
  - System.Object
  - System.Security.AccessControl.AuthorizationRule
  - System.Security.AccessControl.AuditRule
  implements: []
  inheritedMembers:
  - System.Security.AccessControl.AuditRule.AuditFlags
  - System.Security.AccessControl.AuthorizationRule.AccessMask
  - System.Security.AccessControl.AuthorizationRule.IdentityReference
  - System.Security.AccessControl.AuthorizationRule.InheritanceFlags
  - System.Security.AccessControl.AuthorizationRule.IsInherited
  - System.Security.AccessControl.AuthorizationRule.PropagationFlags
  platform:
  - net462
- uid: System.IO.Pipes.PipeAuditRule.#ctor(System.Security.Principal.IdentityReference,System.IO.Pipes.PipeAccessRights,System.Security.AccessControl.AuditFlags)
  id: '#ctor(System.Security.Principal.IdentityReference,System.IO.Pipes.PipeAccessRights,System.Security.AccessControl.AuditFlags)'
  parent: System.IO.Pipes.PipeAuditRule
  langs:
  - csharp
  name: PipeAuditRule(IdentityReference,PipeAccessRights,AuditFlags)
  nameWithType: PipeAuditRule.PipeAuditRule(IdentityReference,PipeAccessRights,AuditFlags)
  fullName: System.IO.Pipes.PipeAuditRule.PipeAuditRule(IdentityReference,PipeAccessRights,AuditFlags)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.IO.Pipes.PipeAuditRule&quot;> </xref> 에 지정 된 사용자 계정에 대 한 클래스는 <xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref> 개체입니다."
  remarks: "이 생성자를 사용 하 여 <xref:System.IO.Pipes.PipeSecurity>클래스</xref:System.IO.Pipes.PipeSecurity> 를 사용 하 여 지속할 수 있는 감사 규칙을 만들려면 감사 규칙 시스템 개체에 수행 하는 동작이 기록 된 시기와 방법을 결정 합니다."
  syntax:
    content: public PipeAuditRule (System.Security.Principal.IdentityReference identity, System.IO.Pipes.PipeAccessRights rights, System.Security.AccessControl.AuditFlags flags);
    parameters:
    - id: identity
      type: System.Security.Principal.IdentityReference
      description: "<xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref> 사용자 계정에 대 한 참조를 캡슐화 하는 개체입니다."
    - id: rights
      type: System.IO.Pipes.PipeAccessRights
      description: "중 하나는 <xref href=&quot;System.IO.Pipes.PipeAccessRights&quot;> </xref> 액세스 규칙과 관련 된 작업의 유형을 지정 하는 값입니다."
    - id: flags
      type: System.Security.AccessControl.AuditFlags
      description: "중 하나는 <xref href=&quot;System.Security.AccessControl.AuditFlags&quot;> </xref> 감사를 수행할 시기를 지정 하는 값입니다."
  overload: System.IO.Pipes.PipeAuditRule.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeAuditRule.#ctor(System.String,System.IO.Pipes.PipeAccessRights,System.Security.AccessControl.AuditFlags)
  id: '#ctor(System.String,System.IO.Pipes.PipeAccessRights,System.Security.AccessControl.AuditFlags)'
  parent: System.IO.Pipes.PipeAuditRule
  langs:
  - csharp
  name: PipeAuditRule(String,PipeAccessRights,AuditFlags)
  nameWithType: PipeAuditRule.PipeAuditRule(String,PipeAccessRights,AuditFlags)
  fullName: System.IO.Pipes.PipeAuditRule.PipeAuditRule(String,PipeAccessRights,AuditFlags)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.IO.Pipes.PipeAuditRule&quot;> </xref> 명명 된 사용자 계정에 대 한 클래스입니다."
  remarks: "이 생성자를 사용 하 여 <xref:System.IO.Pipes.PipeSecurity>클래스</xref:System.IO.Pipes.PipeSecurity> 를 사용 하 여 지속할 수 있는 감사 규칙을 만들려면 감사 규칙 시스템 개체에 수행 하는 동작이 기록 된 시기와 방법을 결정 합니다."
  syntax:
    content: public PipeAuditRule (string identity, System.IO.Pipes.PipeAccessRights rights, System.Security.AccessControl.AuditFlags flags);
    parameters:
    - id: identity
      type: System.String
      description: "사용자 계정의 이름입니다."
    - id: rights
      type: System.IO.Pipes.PipeAccessRights
      description: "중 하나는 <xref href=&quot;System.IO.Pipes.PipeAccessRights&quot;> </xref> 액세스 규칙과 관련 된 작업의 유형을 지정 하는 값입니다."
    - id: flags
      type: System.Security.AccessControl.AuditFlags
      description: "중 하나는 <xref href=&quot;System.Security.AccessControl.AuditFlags&quot;> </xref> 감사를 수행할 시기를 지정 하는 값입니다."
  overload: System.IO.Pipes.PipeAuditRule.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeAuditRule.PipeAccessRights
  id: PipeAccessRights
  parent: System.IO.Pipes.PipeAuditRule
  langs:
  - csharp
  name: PipeAccessRights
  nameWithType: PipeAuditRule.PipeAccessRights
  fullName: System.IO.Pipes.PipeAuditRule.PipeAccessRights
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "가져옵니다는 <xref href=&quot;System.IO.Pipes.PipeAccessRights&quot;> </xref> 현재와 관련 된 플래그 <xref href=&quot;System.IO.Pipes.PipeAuditRule&quot;> </xref> 개체입니다."
  syntax:
    content: public System.IO.Pipes.PipeAccessRights PipeAccessRights { get; }
    return:
      type: System.IO.Pipes.PipeAccessRights
      description: "비트 조합 된 <xref href=&quot;System.IO.Pipes.PipeAccessRights&quot;> </xref> 값입니다."
  overload: System.IO.Pipes.PipeAuditRule.PipeAccessRights*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.AccessControl.AuditRule
  isExternal: false
  name: System.Security.AccessControl.AuditRule
- uid: System.IO.Pipes.PipeAuditRule.#ctor(System.Security.Principal.IdentityReference,System.IO.Pipes.PipeAccessRights,System.Security.AccessControl.AuditFlags)
  parent: System.IO.Pipes.PipeAuditRule
  isExternal: false
  name: PipeAuditRule(IdentityReference,PipeAccessRights,AuditFlags)
  nameWithType: PipeAuditRule.PipeAuditRule(IdentityReference,PipeAccessRights,AuditFlags)
  fullName: System.IO.Pipes.PipeAuditRule.PipeAuditRule(IdentityReference,PipeAccessRights,AuditFlags)
- uid: System.Security.Principal.IdentityReference
  parent: System.Security.Principal
  isExternal: false
  name: IdentityReference
  nameWithType: IdentityReference
  fullName: System.Security.Principal.IdentityReference
- uid: System.IO.Pipes.PipeAccessRights
  parent: System.IO.Pipes
  isExternal: false
  name: PipeAccessRights
  nameWithType: PipeAccessRights
  fullName: System.IO.Pipes.PipeAccessRights
- uid: System.Security.AccessControl.AuditFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: AuditFlags
  nameWithType: AuditFlags
  fullName: System.Security.AccessControl.AuditFlags
- uid: System.IO.Pipes.PipeAuditRule.#ctor(System.String,System.IO.Pipes.PipeAccessRights,System.Security.AccessControl.AuditFlags)
  parent: System.IO.Pipes.PipeAuditRule
  isExternal: false
  name: PipeAuditRule(String,PipeAccessRights,AuditFlags)
  nameWithType: PipeAuditRule.PipeAuditRule(String,PipeAccessRights,AuditFlags)
  fullName: System.IO.Pipes.PipeAuditRule.PipeAuditRule(String,PipeAccessRights,AuditFlags)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.Pipes.PipeAuditRule.PipeAccessRights
  parent: System.IO.Pipes.PipeAuditRule
  isExternal: false
  name: PipeAccessRights
  nameWithType: PipeAuditRule.PipeAccessRights
  fullName: System.IO.Pipes.PipeAuditRule.PipeAccessRights
- uid: System.IO.Pipes.PipeAuditRule.#ctor*
  parent: System.IO.Pipes.PipeAuditRule
  isExternal: false
  name: PipeAuditRule
  nameWithType: PipeAuditRule.PipeAuditRule
- uid: System.IO.Pipes.PipeAuditRule.PipeAccessRights*
  parent: System.IO.Pipes.PipeAuditRule
  isExternal: false
  name: PipeAccessRights
  nameWithType: PipeAuditRule.PipeAccessRights
