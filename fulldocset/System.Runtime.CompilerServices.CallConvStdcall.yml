### YamlMime:ManagedReference
items:
- uid: System.Runtime.CompilerServices.CallConvStdcall
  id: CallConvStdcall
  children:
  - System.Runtime.CompilerServices.CallConvStdcall.#ctor
  langs:
  - csharp
  name: CallConvStdcall
  nameWithType: CallConvStdcall
  fullName: System.Runtime.CompilerServices.CallConvStdcall
  type: Class
  summary: "메서드 사용 해야 함을 나타냅니다는 <xref uid=&quot;langword_csharp_StdCall&quot; name=&quot;StdCall&quot; href=&quot;&quot;> </xref> 호출 규칙입니다."
  remarks: "호출 수신자가 스택을 정리 합니다. 이 관리 코드에서 관리 되지 않는 함수 호출에 대 한 기본 규칙입니다.       클래스 <xref:System.Runtime.CompilerServices>는 컴파일러 작성자 용도로 사용 됩니다.</xref:System.Runtime.CompilerServices>       컴파일러는 적시에 (JIT) 컴파일러가 기본 동작은 적절 하지 않은 경우 값을 처리 하는 방식을 변경 하려면 메타 데이터 내에서 사용자 지정 한정자를 내보냅니다.  JIT 컴파일러는 사용자 지정 한정자를 발견 하면는 한정자 지정 하는 방식으로 값을 처리 합니다.  컴파일러는 메서드 매개 변수를 사용자 지정 한정자를 적용 하 고 값을 반환할 수 있습니다.  JIT 컴파일러는 필수 한정자에 응답 해야 하지만 선택적 한정자를 무시할 수 있습니다.  C + + 컴파일러는 기본적으로 JIT 컴파일러는 c + +와 호환 되지 않는 방식에서 바이트를 처리 하는 경우에는 바이트에 처리 해야는 방법을 설명 하는 사용자 지정 한정자를 내보낼 수 있습니다.       다음 방법 중 하나를 사용 하는 메타 데이터를 사용자 지정 한정자를 내보낼 수 있습니다:-에서 메서드를 사용 하는 <xref:System.Reflection.Emit.TypeBuilder>같은 <xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineField%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A>, 및 <xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A>.</xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A> </xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A> </xref:System.Reflection.Emit.TypeBuilder.DefineField%2A> </xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A> </xref:System.Reflection.Emit.TypeBuilder>      --호출을 포함 하는 Microsoft MSIL (intermediate language) 명령 파일을 생성 하는 중 `modopt` 및 `modreq`, 하 고 사용 하 여 파일을 어셈블할는 [Ilasm.exe (IL 어셈블러)](~/add/includes/ajax-current-ext-md.md)합니다.      -관리 되지 않는 리플렉션 API를 사용 합니다."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class CallConvStdcall
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.CompilerServices.CallConvStdcall.#ctor
  id: '#ctor'
  parent: System.Runtime.CompilerServices.CallConvStdcall
  langs:
  - csharp
  name: CallConvStdcall()
  nameWithType: CallConvStdcall.CallConvStdcall()
  fullName: System.Runtime.CompilerServices.CallConvStdcall.CallConvStdcall()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.CompilerServices
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Runtime.CompilerServices.CallConvStdcall&quot;> </xref> 클래스입니다."
  remarks: "클래스 <xref:System.Runtime.CompilerServices>는 컴파일러 작성자 용도로 사용 됩니다.</xref:System.Runtime.CompilerServices>"
  syntax:
    content: public CallConvStdcall ();
    parameters: []
  overload: System.Runtime.CompilerServices.CallConvStdcall.#ctor*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Runtime.CompilerServices.CallConvStdcall.#ctor
  parent: System.Runtime.CompilerServices.CallConvStdcall
  isExternal: false
  name: CallConvStdcall()
  nameWithType: CallConvStdcall.CallConvStdcall()
  fullName: System.Runtime.CompilerServices.CallConvStdcall.CallConvStdcall()
- uid: System.Runtime.CompilerServices.CallConvStdcall.#ctor*
  parent: System.Runtime.CompilerServices.CallConvStdcall
  isExternal: false
  name: CallConvStdcall
  nameWithType: CallConvStdcall.CallConvStdcall
