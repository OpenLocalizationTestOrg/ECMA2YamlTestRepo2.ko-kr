### YamlMime:ManagedReference
items:
- uid: System.Text.EncoderExceptionFallbackBuffer
  id: EncoderExceptionFallbackBuffer
  children:
  - System.Text.EncoderExceptionFallbackBuffer.#ctor
  - System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Int32)
  - System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Char,System.Int32)
  - System.Text.EncoderExceptionFallbackBuffer.GetNextChar
  - System.Text.EncoderExceptionFallbackBuffer.MovePrevious
  - System.Text.EncoderExceptionFallbackBuffer.Remaining
  langs:
  - csharp
  name: EncoderExceptionFallbackBuffer
  nameWithType: EncoderExceptionFallbackBuffer
  fullName: System.Text.EncoderExceptionFallbackBuffer
  type: Class
  summary: "Throw <xref:System.Text.EncoderFallbackException>때 입력된 문자로 변환할 수 없습니다 인코딩된 출력 바이트 시퀀스로.</xref:System.Text.EncoderFallbackException> 이 클래스는 상속 될 수 없습니다."
  remarks: "실패 하는 인코딩 또는 디코딩 작업에 대 한 일반적인 이유는 기본 인코딩 클래스는 문자가 고 해당 하는 바이트 시퀀스 간의 매핑을 제공 하지 않습니다. 입력된 문자를 출력 바이트 시퀀스로 변환할 수 없습니다, 경우 인코딩 작업 <xref:System.Text.EncoderExceptionFallbackBuffer.Fallback%2A> <xref:System.Text.EncoderFallbackException>.</xref:System.Text.EncoderFallbackException> throw는 메서드</xref:System.Text.EncoderExceptionFallbackBuffer.Fallback%2A> 를 호출 하는       <xref:System.Text.EncoderFallbackBuffer?displayProperty=fullName>인코딩 작업에서 사용 되는 데이터 버퍼를 나타내는 클래스는 EncoderExceptionFallbackBuffer 클래스에 대 한 기본 클래스는</xref:System.Text.EncoderFallbackBuffer?displayProperty=fullName> 그러나 데이터 버퍼 대신 EncoderExceptionFallbackBuffer 클래스 인코딩 작업이 실패 하면 예외가 throw 되는 여기서 표준 동작을 나타냅니다. 실제 데이터 버퍼가 없습니다 있고, 이러한 버퍼를 처리 하도록 디자인 된 멤버 없는 중요 한 작업을 수행 합니다."
  syntax:
    content: 'public sealed class EncoderExceptionFallbackBuffer : System.Text.EncoderFallbackBuffer'
  inheritance:
  - System.Text.EncoderFallbackBuffer
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Text.EncoderExceptionFallbackBuffer.#ctor
  id: '#ctor'
  parent: System.Text.EncoderExceptionFallbackBuffer
  langs:
  - csharp
  name: EncoderExceptionFallbackBuffer()
  nameWithType: EncoderExceptionFallbackBuffer.EncoderExceptionFallbackBuffer()
  fullName: System.Text.EncoderExceptionFallbackBuffer.EncoderExceptionFallbackBuffer()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Text
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Text.EncoderExceptionFallbackBuffer&quot;> </xref> 클래스입니다."
  syntax:
    content: public EncoderExceptionFallbackBuffer ();
    parameters: []
  overload: System.Text.EncoderExceptionFallbackBuffer.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Int32)
  id: Fallback(System.Char,System.Int32)
  parent: System.Text.EncoderExceptionFallbackBuffer
  langs:
  - csharp
  name: Fallback(Char,Int32)
  nameWithType: EncoderExceptionFallbackBuffer.Fallback(Char,Int32)
  fullName: System.Text.EncoderExceptionFallbackBuffer.Fallback(Char,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Text
  summary: "입력된 문자를 인코딩할 수 없는 예외를 throw 합니다. 매개 변수는 변환할 수 없는 문자 값과 인덱스 위치를 지정 합니다."
  remarks: "<xref:System.Text.Encoding.GetBytes%2A>및 <xref:System.Text.Encoder.Convert%2A>메서드는 입력에 알 수 없는 문자가 발생 한 경우 대체 (fallback)를 호출 합니다.</xref:System.Text.Encoder.Convert%2A> </xref:System.Text.Encoding.GetBytes%2A> 에 대 한 응답 대체 (fallback)는 항상 throw <xref:System.Text.EncoderFallbackException>.</xref:System.Text.EncoderFallbackException>"
  syntax:
    content: public override bool Fallback (char charUnknown, int index);
    parameters:
    - id: charUnknown
      type: System.Char
      description: "입력된 문자입니다."
    - id: index
      type: System.Int32
      description: "입력된 버퍼에 있는 문자의 인덱스 위치입니다."
    return:
      type: System.Boolean
      description: "없음. 대체 방법은 항상 예외를 throw 하기 때문에 아무 값도 반환 합니다."
  overload: System.Text.EncoderExceptionFallbackBuffer.Fallback*
  exceptions:
  - type: System.Text.EncoderFallbackException
    commentId: T:System.Text.EncoderFallbackException
    description: "<code>charUnknown</code>인코딩할 수 없습니다. 이 메서드는 항상의 값을 보고 하는 예외 throw 된 <code>charUnknown</code> 및 <code>index</code> 매개 변수입니다."
  platform:
  - net462
- uid: System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Char,System.Int32)
  id: Fallback(System.Char,System.Char,System.Int32)
  parent: System.Text.EncoderExceptionFallbackBuffer
  langs:
  - csharp
  name: Fallback(Char,Char,Int32)
  nameWithType: EncoderExceptionFallbackBuffer.Fallback(Char,Char,Int32)
  fullName: System.Text.EncoderExceptionFallbackBuffer.Fallback(Char,Char,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Text
  summary: "입력된 문자를 인코딩할 수 없는 예외를 throw 합니다. 매개 변수는 입력에 서로게이트 쌍의 값과 인덱스 위치를 지정 하 고 명목 반환 값은 사용 되지 않습니다."
  remarks: "<xref:System.Text.Encoding.GetBytes%2A>및 <xref:System.Text.Encoder.Convert%2A>메서드는 입력에는 서로게이트 쌍을 발견할 경우 대체 (fallback)를 호출 합니다.</xref:System.Text.Encoder.Convert%2A> </xref:System.Text.Encoding.GetBytes%2A> 에 대 한 응답 대체 (fallback)는 항상 예외를 throw 합니다."
  syntax:
    content: public override bool Fallback (char charUnknownHigh, char charUnknownLow, int index);
    parameters:
    - id: charUnknownHigh
      type: System.Char
      description: "입력된 쌍의 상위 서로게이트입니다."
    - id: charUnknownLow
      type: System.Char
      description: "입력된 쌍의 low surrogate 합니다."
    - id: index
      type: System.Int32
      description: "입력된 버퍼에서 서로게이트 쌍의 인덱스 위치입니다."
    return:
      type: System.Boolean
      description: "없음. 대체 방법은 항상 예외를 throw 하기 때문에 아무 값도 반환 합니다."
  overload: System.Text.EncoderExceptionFallbackBuffer.Fallback*
  exceptions:
  - type: System.Text.EncoderFallbackException
    commentId: T:System.Text.EncoderFallbackException
    description: "문자 <code> charUnknownHigh </code> 및 <code> charUnknownLow </code> 인코딩할 수 없습니다."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Either <code>charUnknownHigh</code> or <code>charUnknownLow</code> is invalid. <code>charUnknownHigh</code>U + d&800;부터 U + DBFF 까지의 사이의 않습니다 또는 <code> charUnknownLow </code> U + DC00 및 U + DFFF (포함) 사이 있지 않습니다."
  platform:
  - net462
- uid: System.Text.EncoderExceptionFallbackBuffer.GetNextChar
  id: GetNextChar
  parent: System.Text.EncoderExceptionFallbackBuffer
  langs:
  - csharp
  name: GetNextChar()
  nameWithType: EncoderExceptionFallbackBuffer.GetNextChar()
  fullName: System.Text.EncoderExceptionFallbackBuffer.GetNextChar()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Text
  summary: "예외 대체 (fallback) 버퍼에서 다음 문자를 검색합니다."
  remarks: "때문에 <xref:System.Text.EncoderExceptionFallbackBuffer>는 실제 예외 데이터 버퍼가 없으므로 GetNextChar 메서드 항상 유니코드 NULL 문자를 반환 합니다.</xref:System.Text.EncoderExceptionFallbackBuffer>"
  syntax:
    content: public override char GetNextChar ();
    parameters: []
    return:
      type: System.Char
      description: "반환 값은 항상 NULL 유니코드 문자 (U +&0000;)입니다.       이 메서드는 추상 메서드를 구현 하기 때문에 변경 되지 않는 있지만 반환 값이 정의 됩니다."
  overload: System.Text.EncoderExceptionFallbackBuffer.GetNextChar*
  exceptions: []
  platform:
  - net462
- uid: System.Text.EncoderExceptionFallbackBuffer.MovePrevious
  id: MovePrevious
  parent: System.Text.EncoderExceptionFallbackBuffer
  langs:
  - csharp
  name: MovePrevious()
  nameWithType: EncoderExceptionFallbackBuffer.MovePrevious()
  fullName: System.Text.EncoderExceptionFallbackBuffer.MovePrevious()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Text
  summary: "다음 호출이 <xref:System.Text.EncoderExceptionFallbackBuffer.GetNextChar*>메서드를 현재 위치 앞 예외 데이터 버퍼 문자 위치에 액세스 합니다.</xref:System.Text.EncoderExceptionFallbackBuffer.GetNextChar*>"
  remarks: "때문에 <xref:System.Text.EncoderExceptionFallbackBuffer>는 실제 예외 데이터 버퍼가 없으므로 MovePrevious 메서드는 항상 반환 `false`.</xref:System.Text.EncoderExceptionFallbackBuffer>"
  syntax:
    content: public override bool MovePrevious ();
    parameters: []
    return:
      type: System.Boolean
      description: "반환 값은 항상 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다.       이 메서드는 추상 메서드를 구현 하기 때문에 변경 되지 않는 있지만 반환 값이 정의 됩니다."
  overload: System.Text.EncoderExceptionFallbackBuffer.MovePrevious*
  exceptions: []
  platform:
  - net462
- uid: System.Text.EncoderExceptionFallbackBuffer.Remaining
  id: Remaining
  parent: System.Text.EncoderExceptionFallbackBuffer
  langs:
  - csharp
  name: Remaining
  nameWithType: EncoderExceptionFallbackBuffer.Remaining
  fullName: System.Text.EncoderExceptionFallbackBuffer.Remaining
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Text
  summary: "현재에서 문자 수를 가져옵니다 <xref href=&quot;System.Text.EncoderExceptionFallbackBuffer&quot;> </xref> 계속 처리 하는 개체입니다."
  remarks: "때문에 <xref:System.Text.EncoderExceptionFallbackBuffer>는 실제 예외 데이터 버퍼가 없으므로 남은 속성은 항상&0;을 반환 합니다.</xref:System.Text.EncoderExceptionFallbackBuffer>"
  syntax:
    content: public override int Remaining { get; }
    return:
      type: System.Int32
      description: "반환 값은 항상&0;입니다.       이 메서드는 추상 메서드를 구현 하기 때문에 변경 되지 않는 있지만 반환 값이 정의 됩니다."
  overload: System.Text.EncoderExceptionFallbackBuffer.Remaining*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Text.EncoderFallbackBuffer
  isExternal: false
  name: System.Text.EncoderFallbackBuffer
- uid: System.Text.EncoderFallbackException
  isExternal: true
  name: System.Text.EncoderFallbackException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Text.EncoderExceptionFallbackBuffer.#ctor
  parent: System.Text.EncoderExceptionFallbackBuffer
  isExternal: false
  name: EncoderExceptionFallbackBuffer()
  nameWithType: EncoderExceptionFallbackBuffer.EncoderExceptionFallbackBuffer()
  fullName: System.Text.EncoderExceptionFallbackBuffer.EncoderExceptionFallbackBuffer()
- uid: System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Int32)
  parent: System.Text.EncoderExceptionFallbackBuffer
  isExternal: false
  name: Fallback(Char,Int32)
  nameWithType: EncoderExceptionFallbackBuffer.Fallback(Char,Int32)
  fullName: System.Text.EncoderExceptionFallbackBuffer.Fallback(Char,Int32)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Char,System.Int32)
  parent: System.Text.EncoderExceptionFallbackBuffer
  isExternal: false
  name: Fallback(Char,Char,Int32)
  nameWithType: EncoderExceptionFallbackBuffer.Fallback(Char,Char,Int32)
  fullName: System.Text.EncoderExceptionFallbackBuffer.Fallback(Char,Char,Int32)
- uid: System.Text.EncoderExceptionFallbackBuffer.GetNextChar
  parent: System.Text.EncoderExceptionFallbackBuffer
  isExternal: false
  name: GetNextChar()
  nameWithType: EncoderExceptionFallbackBuffer.GetNextChar()
  fullName: System.Text.EncoderExceptionFallbackBuffer.GetNextChar()
- uid: System.Text.EncoderExceptionFallbackBuffer.MovePrevious
  parent: System.Text.EncoderExceptionFallbackBuffer
  isExternal: false
  name: MovePrevious()
  nameWithType: EncoderExceptionFallbackBuffer.MovePrevious()
  fullName: System.Text.EncoderExceptionFallbackBuffer.MovePrevious()
- uid: System.Text.EncoderExceptionFallbackBuffer.Remaining
  parent: System.Text.EncoderExceptionFallbackBuffer
  isExternal: false
  name: Remaining
  nameWithType: EncoderExceptionFallbackBuffer.Remaining
  fullName: System.Text.EncoderExceptionFallbackBuffer.Remaining
- uid: System.Text.EncoderExceptionFallbackBuffer.#ctor*
  parent: System.Text.EncoderExceptionFallbackBuffer
  isExternal: false
  name: EncoderExceptionFallbackBuffer
  nameWithType: EncoderExceptionFallbackBuffer.EncoderExceptionFallbackBuffer
- uid: System.Text.EncoderExceptionFallbackBuffer.Fallback*
  parent: System.Text.EncoderExceptionFallbackBuffer
  isExternal: false
  name: Fallback
  nameWithType: EncoderExceptionFallbackBuffer.Fallback
- uid: System.Text.EncoderExceptionFallbackBuffer.GetNextChar*
  parent: System.Text.EncoderExceptionFallbackBuffer
  isExternal: false
  name: GetNextChar
  nameWithType: EncoderExceptionFallbackBuffer.GetNextChar
- uid: System.Text.EncoderExceptionFallbackBuffer.MovePrevious*
  parent: System.Text.EncoderExceptionFallbackBuffer
  isExternal: false
  name: MovePrevious
  nameWithType: EncoderExceptionFallbackBuffer.MovePrevious
- uid: System.Text.EncoderExceptionFallbackBuffer.Remaining*
  parent: System.Text.EncoderExceptionFallbackBuffer
  isExternal: false
  name: Remaining
  nameWithType: EncoderExceptionFallbackBuffer.Remaining
