### YamlMime:ManagedReference
items:
- uid: System.Management.ManagementEventWatcher
  id: ManagementEventWatcher
  children:
  - System.Management.ManagementEventWatcher.#ctor
  - System.Management.ManagementEventWatcher.#ctor(System.Management.EventQuery)
  - System.Management.ManagementEventWatcher.#ctor(System.String)
  - System.Management.ManagementEventWatcher.#ctor(System.Management.ManagementScope,System.Management.EventQuery)
  - System.Management.ManagementEventWatcher.#ctor(System.String,System.String)
  - System.Management.ManagementEventWatcher.#ctor(System.Management.ManagementScope,System.Management.EventQuery,System.Management.EventWatcherOptions)
  - System.Management.ManagementEventWatcher.#ctor(System.String,System.String,System.Management.EventWatcherOptions)
  - System.Management.ManagementEventWatcher.EventArrived
  - System.Management.ManagementEventWatcher.Finalize
  - System.Management.ManagementEventWatcher.Options
  - System.Management.ManagementEventWatcher.Query
  - System.Management.ManagementEventWatcher.Scope
  - System.Management.ManagementEventWatcher.Start
  - System.Management.ManagementEventWatcher.Stop
  - System.Management.ManagementEventWatcher.Stopped
  - System.Management.ManagementEventWatcher.WaitForNextEvent
  langs:
  - csharp
  name: ManagementEventWatcher
  nameWithType: ManagementEventWatcher
  fullName: System.Management.ManagementEventWatcher
  type: Class
  summary: "지정 된에 따라 임시 이벤트 알림을 구독할 *이벤트 쿼리*합니다."
  remarks: ''
  example:
  - "The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**. For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library. The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method. This example can be tested by starting a process, such as Notepad, while the example code is running.  \n  \n [!code-vb[wminet_ManagementEventWatcher#1](~/add/codesnippet/visualbasic/t-system.management.mana_3_1.vb)]\n [!code-cs[wminet_ManagementEventWatcher#1](~/add/codesnippet/csharp/t-system.management.mana_3_1.cs)]"
  syntax:
    content: >-
      [System.ComponentModel.ToolboxItem(false)]

      public class ManagementEventWatcher : System.ComponentModel.Component
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  implements: []
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Dispose(System.Boolean)
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Management.ManagementEventWatcher.#ctor
  id: '#ctor'
  parent: System.Management.ManagementEventWatcher
  langs:
  - csharp
  name: ManagementEventWatcher()
  nameWithType: ManagementEventWatcher.ManagementEventWatcher()
  fullName: System.Management.ManagementEventWatcher.ManagementEventWatcher()
  type: Constructor
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Management.ManagementEventWatcher&quot;> </xref> 클래스입니다. 추가 초기화를 위해 개체에서 속성을 설정 합니다. 기본 생성자입니다."
  remarks: "##직접 실행 호출자에 대 한.NET framework 보안 완전히 신뢰 합니다. 이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다. 자세한 내용은 참조 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**. For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library. The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method. This example can be tested by starting a process, such as Notepad, while the example code is running.  \n  \n [!code-cs[wminet_ManagementEventWatcher()#1](~/add/codesnippet/csharp/m-system.management.mana_12_1.cs)]\n [!code-vb[wminet_ManagementEventWatcher()#1](~/add/codesnippet/visualbasic/m-system.management.mana_12_1.vb)]"
  syntax:
    content: public ManagementEventWatcher ();
    parameters: []
  overload: System.Management.ManagementEventWatcher.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Management.ManagementEventWatcher.#ctor(System.Management.EventQuery)
  id: '#ctor(System.Management.EventQuery)'
  parent: System.Management.ManagementEventWatcher
  langs:
  - csharp
  name: ManagementEventWatcher(EventQuery)
  nameWithType: ManagementEventWatcher.ManagementEventWatcher(EventQuery)
  fullName: System.Management.ManagementEventWatcher.ManagementEventWatcher(EventQuery)
  type: Constructor
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Management.ManagementEventWatcher&quot;> </xref> WMI 지정 되 면 클래스 *이벤트 쿼리*합니다."
  remarks: "이벤트에 대 한 감시자 수신 될 네임 스페이스는 현재 설정 되어 있는 기본 네임 스페이스입니다.      ## 직접 실행 호출자에 대 한.NET framework 보안 완전히 신뢰 합니다. 이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다. 자세한 내용은 참조 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "In this code example, the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**. For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library. The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method. This example can be tested by starting a process, such as Notepad, while the example code is running.  \n  \n [!code-vb[wminet_ManagementEventWatcher(E)#1](~/add/codesnippet/visualbasic/c0e026ca-897f-4f5f-a9bd-_1.vb)]\n [!code-cs[wminet_ManagementEventWatcher(E)#1](~/add/codesnippet/csharp/c0e026ca-897f-4f5f-a9bd-_1.cs)]"
  syntax:
    content: public ManagementEventWatcher (System.Management.EventQuery query);
    parameters:
    - id: query
      type: System.Management.EventQuery
      description: "<xref href=&quot;System.Management.EventQuery&quot;> </xref> 감시자가 수신할 이벤트를 결정 하는 WMI 이벤트 쿼리를 나타내는입니다."
  overload: System.Management.ManagementEventWatcher.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Management.ManagementEventWatcher.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Management.ManagementEventWatcher
  langs:
  - csharp
  name: ManagementEventWatcher(String)
  nameWithType: ManagementEventWatcher.ManagementEventWatcher(String)
  fullName: System.Management.ManagementEventWatcher.ManagementEventWatcher(String)
  type: Constructor
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "새 인스턴스를 초기화 합니다는 <xref href=&quot;System.Management.ManagementEventWatcher&quot;> </xref> WMI 지정 되 면 클래스 *이벤트 쿼리* 문자열의 형식에서입니다."
  remarks: "이벤트에 대 한 감시자 수신 될 네임 스페이스는 현재 설정 되어 있는 기본 네임 스페이스입니다.      ## 직접 실행 호출자에 대 한.NET framework 보안 완전히 신뢰 합니다. 이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다. 자세한 내용은 참조 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**. For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library. The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method. This example can be tested by starting a process, such as Notepad, while the example code is running.  \n  \n [!code-cs[wminet_ManagementEventWatcher(S)#1](~/add/codesnippet/csharp/m-system.management.mana_6_1.cs)]\n [!code-vb[wminet_ManagementEventWatcher(S)#1](~/add/codesnippet/visualbasic/m-system.management.mana_6_1.vb)]"
  syntax:
    content: public ManagementEventWatcher (string query);
    parameters:
    - id: query
      type: System.String
      description: "WMI 이벤트 하는 쿼리를 감시자가 수신할 이벤트를 정의 합니다."
  overload: System.Management.ManagementEventWatcher.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Management.ManagementEventWatcher.#ctor(System.Management.ManagementScope,System.Management.EventQuery)
  id: '#ctor(System.Management.ManagementScope,System.Management.EventQuery)'
  parent: System.Management.ManagementEventWatcher
  langs:
  - csharp
  name: ManagementEventWatcher(ManagementScope,EventQuery)
  nameWithType: ManagementEventWatcher.ManagementEventWatcher(ManagementScope,EventQuery)
  fullName: System.Management.ManagementEventWatcher.ManagementEventWatcher(ManagementScope,EventQuery)
  type: Constructor
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Management.ManagementEventWatcher&quot;> </xref> 주어진된 WMI에 일치 하는 이벤트를 수신 하는 클래스 *이벤트 쿼리*합니다."
  remarks: "##직접 실행 호출자에 대 한.NET framework 보안 완전히 신뢰 합니다. 이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다. 자세한 내용은 참조 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "In this code example, the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**. For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library. The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method. This example can be tested by starting a process, such as Notepad, while the example code is running.  \n  \n [!code-vb[wminet_ManagementEventWatcher(M_E)#1](~/add/codesnippet/visualbasic/b5f1fa53-1f6d-471d-aeed-_1.vb)]\n [!code-cs[wminet_ManagementEventWatcher(M_E)#1](~/add/codesnippet/csharp/b5f1fa53-1f6d-471d-aeed-_1.cs)]"
  syntax:
    content: public ManagementEventWatcher (System.Management.ManagementScope scope, System.Management.EventQuery query);
    parameters:
    - id: scope
      type: System.Management.ManagementScope
      description: "A <xref href=&quot;System.Management.ManagementScope&quot;> </xref> 이벤트에 대 한 감시자 수신할는 범위 (네임 스페이스)를 나타내는입니다."
    - id: query
      type: System.Management.EventQuery
      description: "<xref href=&quot;System.Management.EventQuery&quot;> </xref> 감시자가 수신할 이벤트를 결정 하는 WMI 이벤트 쿼리를 나타내는입니다."
  overload: System.Management.ManagementEventWatcher.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Management.ManagementEventWatcher.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Management.ManagementEventWatcher
  langs:
  - csharp
  name: ManagementEventWatcher(String,String)
  nameWithType: ManagementEventWatcher.ManagementEventWatcher(String,String)
  fullName: System.Management.ManagementEventWatcher.ManagementEventWatcher(String,String)
  type: Constructor
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Management.ManagementEventWatcher&quot;> </xref> 주어진된 WMI에 일치 하는 이벤트를 수신 하는 클래스 *이벤트 쿼리*합니다. 이 변형에 대 한 쿼리 및 범위를 문자열로 지정 됩니다."
  remarks: "##직접 실행 호출자에 대 한.NET framework 보안 완전히 신뢰 합니다. 이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다. 자세한 내용은 참조 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**. For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library. The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method. This example can be tested by starting a process, such as Notepad, while the example code is running.  \n  \n [!code-vb[wminet_ManagementEventWatcher(S_S)#1](~/add/codesnippet/visualbasic/ecd7dbbd-83ad-4ab8-8132-_1.vb)]\n [!code-cs[wminet_ManagementEventWatcher(S_S)#1](~/add/codesnippet/csharp/ecd7dbbd-83ad-4ab8-8132-_1.cs)]"
  syntax:
    content: public ManagementEventWatcher (string scope, string query);
    parameters:
    - id: scope
      type: System.String
      description: "이벤트에 대 한 감시자 수신할 관리 범위 (네임 스페이스)."
    - id: query
      type: System.String
      description: "감시자가 수신할 이벤트를 정의 하는 쿼리."
  overload: System.Management.ManagementEventWatcher.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Management.ManagementEventWatcher.#ctor(System.Management.ManagementScope,System.Management.EventQuery,System.Management.EventWatcherOptions)
  id: '#ctor(System.Management.ManagementScope,System.Management.EventQuery,System.Management.EventWatcherOptions)'
  parent: System.Management.ManagementEventWatcher
  langs:
  - csharp
  name: ManagementEventWatcher(ManagementScope,EventQuery,EventWatcherOptions)
  nameWithType: ManagementEventWatcher.ManagementEventWatcher(ManagementScope,EventQuery,EventWatcherOptions)
  fullName: System.Management.ManagementEventWatcher.ManagementEventWatcher(ManagementScope,EventQuery,EventWatcherOptions)
  type: Constructor
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Management.ManagementEventWatcher&quot;> </xref> 지정된 옵션에 따라 지정 된 WMI 이벤트 쿼리를 일치 하는 이벤트를 수신 하는 클래스입니다. 이 변형에 대 한 쿼리 및 범위는 지정 된 개체입니다. 옵션 개체는 시간 제한 및 컨텍스트 정보와 같은 옵션을 지정할 수 있습니다."
  remarks: "##직접 실행 호출자에 대 한.NET framework 보안 완전히 신뢰 합니다. 이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다. 자세한 내용은 참조 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**. For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library. The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method. This example can be tested by starting a process, such as Notepad, while the example code is running.  \n  \n [!code-vb[wminet_ManagementEventWatcher(M_E_E)#1](~/add/codesnippet/visualbasic/883600df-4ae0-4065-84b0-_1.vb)]\n [!code-cs[wminet_ManagementEventWatcher(M_E_E)#1](~/add/codesnippet/csharp/883600df-4ae0-4065-84b0-_1.cs)]"
  syntax:
    content: public ManagementEventWatcher (System.Management.ManagementScope scope, System.Management.EventQuery query, System.Management.EventWatcherOptions options);
    parameters:
    - id: scope
      type: System.Management.ManagementScope
      description: "A <xref href=&quot;System.Management.ManagementScope&quot;> </xref> 이벤트에 대 한 감시자 수신할는 범위 (네임 스페이스)를 나타내는입니다."
    - id: query
      type: System.Management.EventQuery
      description: "<xref href=&quot;System.Management.EventQuery&quot;> </xref> 감시자가 수신할 이벤트를 결정 하는 WMI 이벤트 쿼리를 나타내는입니다."
    - id: options
      type: System.Management.EventWatcherOptions
      description: "<xref href=&quot;System.Management.EventWatcherOptions&quot;> </xref> 나타내는 이벤트를 조사 하는 데 사용 되는 추가 옵션입니다."
  overload: System.Management.ManagementEventWatcher.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Management.ManagementEventWatcher.#ctor(System.String,System.String,System.Management.EventWatcherOptions)
  id: '#ctor(System.String,System.String,System.Management.EventWatcherOptions)'
  parent: System.Management.ManagementEventWatcher
  langs:
  - csharp
  name: ManagementEventWatcher(String,String,EventWatcherOptions)
  nameWithType: ManagementEventWatcher.ManagementEventWatcher(String,String,EventWatcherOptions)
  fullName: System.Management.ManagementEventWatcher.ManagementEventWatcher(String,String,EventWatcherOptions)
  type: Constructor
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Management.ManagementEventWatcher&quot;> </xref> 주어진된 WMI에 일치 하는 이벤트를 수신 하는 클래스 *이벤트 쿼리*, 지정된 된 옵션에 따라 합니다. 이 변형에 대 한 쿼리 및 범위를 문자열로 지정 됩니다. 옵션 개체는 시간 제한 및 컨텍스트 정보와 같은 옵션을 지정할 수 있습니다."
  remarks: "##직접 실행 호출자에 대 한.NET framework 보안 완전히 신뢰 합니다. 이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다. 자세한 내용은 참조 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**. For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library. The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method. This example can be tested by starting a process, such as Notepad, while the example code is running.  \n  \n [!code-cs[wminet_ManagementEventWatcher(S_S_E)#1](~/add/codesnippet/csharp/d5abf6b1-ec23-4c92-b0e0-_1.cs)]\n [!code-vb[wminet_ManagementEventWatcher(S_S_E)#1](~/add/codesnippet/visualbasic/d5abf6b1-ec23-4c92-b0e0-_1.vb)]"
  syntax:
    content: public ManagementEventWatcher (string scope, string query, System.Management.EventWatcherOptions options);
    parameters:
    - id: scope
      type: System.String
      description: "이벤트에 대 한 감시자 수신할 관리 범위 (네임 스페이스)."
    - id: query
      type: System.String
      description: "감시자가 수신할 이벤트를 정의 하는 쿼리."
    - id: options
      type: System.Management.EventWatcherOptions
      description: "<xref href=&quot;System.Management.EventWatcherOptions&quot;> </xref> 나타내는 이벤트를 조사 하는 데 사용 되는 추가 옵션입니다."
  overload: System.Management.ManagementEventWatcher.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Management.ManagementEventWatcher.EventArrived
  id: EventArrived
  parent: System.Management.ManagementEventWatcher
  langs:
  - csharp
  name: EventArrived
  nameWithType: ManagementEventWatcher.EventArrived
  fullName: System.Management.ManagementEventWatcher.EventArrived
  type: Event
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "새 이벤트가 도착 하면 발생 합니다."
  remarks: "##이벤트 데이터의 이벤트 처리기 형식의 인수를 받습니다. <xref:System.Management.EventArrivedEventArgs>이 이벤트와 관련 된 데이터가 포함 된.</xref:System.Management.EventArrivedEventArgs> 다음 <xref:System.Management.EventArrivedEventArgs>속성이이 이벤트에 관련 정보를 제공 합니다.</xref:System.Management.EventArrivedEventArgs>      | 속성 | 설명 |   |--------------|-----------------|   | <xref:System.Management.ManagementEventArgs.Context%2A>( <xref:System.Management.ManagementEventArgs>에서 상속) | 이벤트를 트리거한 작업에서 다시 표시 되 면 작업 컨텍스트를 가져옵니다. |   | <xref:System.Management.EventArrivedEventArgs.NewEvent%2A>| 제공 되는 WMI 이벤트를 가져옵니다. |      # # 직접 실행 호출자에 대 한.NET framework 보안 완전 신뢰.</xref:System.Management.EventArrivedEventArgs.NewEvent%2A> </xref:System.Management.ManagementEventArgs> </xref:System.Management.ManagementEventArgs.Context%2A> 이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다. 자세한 내용은 참조 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public event System.Management.EventArrivedEventHandler EventArrived;
    return:
      type: System.Management.EventArrivedEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Management.ManagementEventWatcher.Finalize
  id: Finalize
  parent: System.Management.ManagementEventWatcher
  langs:
  - csharp
  name: Finalize()
  nameWithType: ManagementEventWatcher.Finalize()
  fullName: System.Management.ManagementEventWatcher.Finalize()
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "처리 중인 호출을 해제 되도록 합니다. 개체에 대 한 소멸자입니다. C#의 종료자는 소멸자 구문을 사용 하 여 표현 됩니다."
  remarks: "##직접 실행 호출자에 대 한.NET framework 보안 완전히 신뢰 합니다. 이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다. 자세한 내용은 참조 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: ~ManagementEventWatcher ();
    parameters: []
  overload: System.Management.ManagementEventWatcher.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.Management.ManagementEventWatcher.Options
  id: Options
  parent: System.Management.ManagementEventWatcher
  langs:
  - csharp
  name: Options
  nameWithType: ManagementEventWatcher.Options
  fullName: System.Management.ManagementEventWatcher.Options
  type: Property
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "이벤트를 조사 하는 데 사용 하는 옵션을 가져오거나 설정 합니다."
  remarks: "##속성에는 이벤트를 조사 하는 데 사용 하는 옵션 값입니다.      ## 직접 실행 호출자에 대 한.NET framework 보안 완전히 신뢰 합니다. 이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다. 자세한 내용은 참조 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**. For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library. The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method. This example can be tested by starting a process, such as Notepad, while the example code is running.  \n  \n [!code-cs[wminet_ManagementEventWatcher_Options#1](~/add/codesnippet/csharp/p-system.management.mana_15_1.cs)]\n [!code-vb[wminet_ManagementEventWatcher_Options#1](~/add/codesnippet/visualbasic/p-system.management.mana_15_1.vb)]"
  syntax:
    content: public System.Management.EventWatcherOptions Options { get; set; }
    return:
      type: System.Management.EventWatcherOptions
      description: "반환 된 <xref href=&quot;System.Management.EventWatcherOptions&quot;> </xref> 이벤트 옵션이 이벤트를 조사 하는 데 사용 합니다."
  overload: System.Management.ManagementEventWatcher.Options*
  exceptions: []
  platform:
  - net462
- uid: System.Management.ManagementEventWatcher.Query
  id: Query
  parent: System.Management.ManagementEventWatcher
  langs:
  - csharp
  name: Query
  nameWithType: ManagementEventWatcher.Query
  fullName: System.Management.ManagementEventWatcher.Query
  type: Property
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "이벤트에 적용 하는 조건을 가져오거나 설정 합니다."
  remarks: "##속성 값, 이벤트에 적용할 기준을 같습니다는 *이벤트 쿼리*합니다.      ## 직접 실행 호출자에 대 한.NET framework 보안 완전히 신뢰 합니다. 이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다. 자세한 내용은 참조 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**. For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library. The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method. This example can be tested by starting a process, such as Notepad, while the example code is running.  \n  \n [!code-cs[wminet_ManagementEventWatcher_Query#1](~/add/codesnippet/csharp/p-system.management.mana_3_1.cs)]\n [!code-vb[wminet_ManagementEventWatcher_Query#1](~/add/codesnippet/visualbasic/p-system.management.mana_3_1.vb)]"
  syntax:
    content: public System.Management.EventQuery Query { get; set; }
    return:
      type: System.Management.EventQuery
      description: "반환 된 <xref href=&quot;System.Management.EventQuery&quot;> </xref> 이벤트에 적용할 쿼리 포함 합니다."
  overload: System.Management.ManagementEventWatcher.Query*
  exceptions: []
  platform:
  - net462
- uid: System.Management.ManagementEventWatcher.Scope
  id: Scope
  parent: System.Management.ManagementEventWatcher
  langs:
  - csharp
  name: Scope
  nameWithType: ManagementEventWatcher.Scope
  fullName: System.Management.ManagementEventWatcher.Scope
  type: Property
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "범위 (네임 스페이스 또는 범위) 이벤트 감시를 설정 하거나 가져옵니다."
  remarks: "##속성 값 (네임 스페이스 또는 범위) 이벤트 감시 하는 범위입니다.      ## 직접 실행 호출자에 대 한.NET framework 보안 완전히 신뢰 합니다. 이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다. 자세한 내용은 참조 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**. For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library. The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method. This example can be tested by starting a process, such as Notepad, while the example code is running.  \n  \n [!code-vb[wminet_ManagementEventWatcher_Scope#1](~/add/codesnippet/visualbasic/p-system.management.mana_4_1.vb)]\n [!code-cs[wminet_ManagementEventWatcher_Scope#1](~/add/codesnippet/csharp/p-system.management.mana_4_1.cs)]"
  syntax:
    content: public System.Management.ManagementScope Scope { get; set; }
    return:
      type: System.Management.ManagementScope
      description: "반환 된 <xref href=&quot;System.Management.ManagementScope&quot;> </xref> 범위를 포함 하는 이벤트를 조사 하는 합니다."
  overload: System.Management.ManagementEventWatcher.Scope*
  exceptions: []
  platform:
  - net462
- uid: System.Management.ManagementEventWatcher.Start
  id: Start
  parent: System.Management.ManagementEventWatcher
  langs:
  - csharp
  name: Start()
  nameWithType: ManagementEventWatcher.Start()
  fullName: System.Management.ManagementEventWatcher.Start()
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "지정된 된 쿼리를 사용 하 여 이벤트를 구독 하 고, 배달 통해 비동기적으로 <xref href=&quot;System.Management.ManagementEventWatcher.EventArrived&quot;> </xref> 이벤트입니다."
  remarks: "##직접 실행 호출자에 대 한.NET framework 보안 완전히 신뢰 합니다. 이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다. 자세한 내용은 참조 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public void Start ();
    parameters: []
  overload: System.Management.ManagementEventWatcher.Start*
  exceptions: []
  platform:
  - net462
- uid: System.Management.ManagementEventWatcher.Stop
  id: Stop
  parent: System.Management.ManagementEventWatcher
  langs:
  - csharp
  name: Stop()
  nameWithType: ManagementEventWatcher.Stop()
  fullName: System.Management.ManagementEventWatcher.Stop()
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "동기 또는 비동기 인지 등록을 취소 합니다."
  remarks: "##직접 실행 호출자에 대 한.NET framework 보안 완전히 신뢰 합니다. 이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다. 자세한 내용은 참조 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**. For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library. The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method. This example can be tested by starting a process, such as Notepad, while the example code is running.  \n  \n [!code-cs[wminet_ManagementEventWatcher_Stop#1](~/add/codesnippet/csharp/m-system.management.mana_8_1.cs)]\n [!code-vb[wminet_ManagementEventWatcher_Stop#1](~/add/codesnippet/visualbasic/m-system.management.mana_8_1.vb)]"
  syntax:
    content: public void Stop ();
    parameters: []
  overload: System.Management.ManagementEventWatcher.Stop*
  exceptions: []
  platform:
  - net462
- uid: System.Management.ManagementEventWatcher.Stopped
  id: Stopped
  parent: System.Management.ManagementEventWatcher
  langs:
  - csharp
  name: Stopped
  nameWithType: ManagementEventWatcher.Stopped
  fullName: System.Management.ManagementEventWatcher.Stopped
  type: Event
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "구독 취소 될 때 발생 합니다."
  remarks: "##이벤트 데이터의 이벤트 처리기 형식의 인수를 받습니다. <xref:System.Management.StoppedEventArgs>이 이벤트와 관련 된 데이터가 포함 된.</xref:System.Management.StoppedEventArgs> 다음 <xref:System.Management.StoppedEventArgs>속성이이 이벤트에 관련 정보를 제공 합니다.</xref:System.Management.StoppedEventArgs>      | 속성 | 설명 |   |--------------|-----------------|   | <xref:System.Management.ManagementEventArgs.Context%2A>( <xref:System.Management.ManagementEventArgs>에서 상속) | 이벤트를 트리거한 작업에서 다시 표시 되 면 작업 컨텍스트를 가져옵니다. |   | <xref:System.Management.StoppedEventArgs.Status%2A>| 작업의 완료 상태를 가져옵니다. |      # # 직접 실행 호출자에 대 한.NET framework 보안 완전 신뢰.</xref:System.Management.StoppedEventArgs.Status%2A> </xref:System.Management.ManagementEventArgs> </xref:System.Management.ManagementEventArgs.Context%2A> 이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다. 자세한 내용은 참조 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public event System.Management.StoppedEventHandler Stopped;
    return:
      type: System.Management.StoppedEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Management.ManagementEventWatcher.WaitForNextEvent
  id: WaitForNextEvent
  parent: System.Management.ManagementEventWatcher
  langs:
  - csharp
  name: WaitForNextEvent()
  nameWithType: ManagementEventWatcher.WaitForNextEvent()
  fullName: System.Management.ManagementEventWatcher.WaitForNextEvent()
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "대기 도착 하기를 지정 된 쿼리 및 돌아올 일치 하는 다음 이벤트에 대 한 것입니다."
  remarks: "지정된 된 양의 시간;에 대 한 API는 다음 이벤트에 대 한 대기할 이벤트 감시자 개체에 지정된 된 제한 시간 옵션 포함 된 경우 이렇게 하지 않으면 API는 다음 이벤트가 발생할 때까지 차단 됩니다.      ## 직접 실행 호출자에 대 한.NET framework 보안 완전히 신뢰 합니다. 이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다. 자세한 내용은 참조 [부분적으로 신뢰할 수 있는 코드에서 라이브러리를 사용 하 여](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**. For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library. The client receives events synchronously by calling the WaitForNextEvent method. This example can be tested by starting a process, such as Notepad, while the example code is running.  \n  \n [!code-cs[wminet_ManagementEventWatcher_WaitForNextEvent#1](~/add/codesnippet/csharp/m-system.management.mana_11_1.cs)]\n [!code-vb[wminet_ManagementEventWatcher_WaitForNextEvent#1](~/add/codesnippet/visualbasic/m-system.management.mana_11_1.vb)]"
  syntax:
    content: public System.Management.ManagementBaseObject WaitForNextEvent ();
    parameters: []
    return:
      type: System.Management.ManagementBaseObject
      description: "A <xref href=&quot;System.Management.ManagementBaseObject&quot;> </xref> 새로 도착 한 이벤트를 나타내는입니다."
  overload: System.Management.ManagementEventWatcher.WaitForNextEvent*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.Component
  isExternal: false
  name: System.ComponentModel.Component
- uid: System.Management.ManagementEventWatcher.#ctor
  parent: System.Management.ManagementEventWatcher
  isExternal: false
  name: ManagementEventWatcher()
  nameWithType: ManagementEventWatcher.ManagementEventWatcher()
  fullName: System.Management.ManagementEventWatcher.ManagementEventWatcher()
- uid: System.Management.ManagementEventWatcher.#ctor(System.Management.EventQuery)
  parent: System.Management.ManagementEventWatcher
  isExternal: false
  name: ManagementEventWatcher(EventQuery)
  nameWithType: ManagementEventWatcher.ManagementEventWatcher(EventQuery)
  fullName: System.Management.ManagementEventWatcher.ManagementEventWatcher(EventQuery)
- uid: System.Management.EventQuery
  parent: System.Management
  isExternal: false
  name: EventQuery
  nameWithType: EventQuery
  fullName: System.Management.EventQuery
- uid: System.Management.ManagementEventWatcher.#ctor(System.String)
  parent: System.Management.ManagementEventWatcher
  isExternal: false
  name: ManagementEventWatcher(String)
  nameWithType: ManagementEventWatcher.ManagementEventWatcher(String)
  fullName: System.Management.ManagementEventWatcher.ManagementEventWatcher(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Management.ManagementEventWatcher.#ctor(System.Management.ManagementScope,System.Management.EventQuery)
  parent: System.Management.ManagementEventWatcher
  isExternal: false
  name: ManagementEventWatcher(ManagementScope,EventQuery)
  nameWithType: ManagementEventWatcher.ManagementEventWatcher(ManagementScope,EventQuery)
  fullName: System.Management.ManagementEventWatcher.ManagementEventWatcher(ManagementScope,EventQuery)
- uid: System.Management.ManagementScope
  parent: System.Management
  isExternal: false
  name: ManagementScope
  nameWithType: ManagementScope
  fullName: System.Management.ManagementScope
- uid: System.Management.ManagementEventWatcher.#ctor(System.String,System.String)
  parent: System.Management.ManagementEventWatcher
  isExternal: false
  name: ManagementEventWatcher(String,String)
  nameWithType: ManagementEventWatcher.ManagementEventWatcher(String,String)
  fullName: System.Management.ManagementEventWatcher.ManagementEventWatcher(String,String)
- uid: System.Management.ManagementEventWatcher.#ctor(System.Management.ManagementScope,System.Management.EventQuery,System.Management.EventWatcherOptions)
  parent: System.Management.ManagementEventWatcher
  isExternal: false
  name: ManagementEventWatcher(ManagementScope,EventQuery,EventWatcherOptions)
  nameWithType: ManagementEventWatcher.ManagementEventWatcher(ManagementScope,EventQuery,EventWatcherOptions)
  fullName: System.Management.ManagementEventWatcher.ManagementEventWatcher(ManagementScope,EventQuery,EventWatcherOptions)
- uid: System.Management.EventWatcherOptions
  parent: System.Management
  isExternal: false
  name: EventWatcherOptions
  nameWithType: EventWatcherOptions
  fullName: System.Management.EventWatcherOptions
- uid: System.Management.ManagementEventWatcher.#ctor(System.String,System.String,System.Management.EventWatcherOptions)
  parent: System.Management.ManagementEventWatcher
  isExternal: false
  name: ManagementEventWatcher(String,String,EventWatcherOptions)
  nameWithType: ManagementEventWatcher.ManagementEventWatcher(String,String,EventWatcherOptions)
  fullName: System.Management.ManagementEventWatcher.ManagementEventWatcher(String,String,EventWatcherOptions)
- uid: System.Management.ManagementEventWatcher.EventArrived
  parent: System.Management.ManagementEventWatcher
  isExternal: false
  name: EventArrived
  nameWithType: ManagementEventWatcher.EventArrived
  fullName: System.Management.ManagementEventWatcher.EventArrived
- uid: System.Management.EventArrivedEventHandler
  parent: System.Management
  isExternal: false
  name: EventArrivedEventHandler
  nameWithType: EventArrivedEventHandler
  fullName: System.Management.EventArrivedEventHandler
- uid: System.Management.ManagementEventWatcher.Finalize
  parent: System.Management.ManagementEventWatcher
  isExternal: false
  name: Finalize()
  nameWithType: ManagementEventWatcher.Finalize()
  fullName: System.Management.ManagementEventWatcher.Finalize()
- uid: System.Management.ManagementEventWatcher.Options
  parent: System.Management.ManagementEventWatcher
  isExternal: false
  name: Options
  nameWithType: ManagementEventWatcher.Options
  fullName: System.Management.ManagementEventWatcher.Options
- uid: System.Management.ManagementEventWatcher.Query
  parent: System.Management.ManagementEventWatcher
  isExternal: false
  name: Query
  nameWithType: ManagementEventWatcher.Query
  fullName: System.Management.ManagementEventWatcher.Query
- uid: System.Management.ManagementEventWatcher.Scope
  parent: System.Management.ManagementEventWatcher
  isExternal: false
  name: Scope
  nameWithType: ManagementEventWatcher.Scope
  fullName: System.Management.ManagementEventWatcher.Scope
- uid: System.Management.ManagementEventWatcher.Start
  parent: System.Management.ManagementEventWatcher
  isExternal: false
  name: Start()
  nameWithType: ManagementEventWatcher.Start()
  fullName: System.Management.ManagementEventWatcher.Start()
- uid: System.Management.ManagementEventWatcher.Stop
  parent: System.Management.ManagementEventWatcher
  isExternal: false
  name: Stop()
  nameWithType: ManagementEventWatcher.Stop()
  fullName: System.Management.ManagementEventWatcher.Stop()
- uid: System.Management.ManagementEventWatcher.Stopped
  parent: System.Management.ManagementEventWatcher
  isExternal: false
  name: Stopped
  nameWithType: ManagementEventWatcher.Stopped
  fullName: System.Management.ManagementEventWatcher.Stopped
- uid: System.Management.StoppedEventHandler
  parent: System.Management
  isExternal: false
  name: StoppedEventHandler
  nameWithType: StoppedEventHandler
  fullName: System.Management.StoppedEventHandler
- uid: System.Management.ManagementEventWatcher.WaitForNextEvent
  parent: System.Management.ManagementEventWatcher
  isExternal: false
  name: WaitForNextEvent()
  nameWithType: ManagementEventWatcher.WaitForNextEvent()
  fullName: System.Management.ManagementEventWatcher.WaitForNextEvent()
- uid: System.Management.ManagementBaseObject
  parent: System.Management
  isExternal: false
  name: ManagementBaseObject
  nameWithType: ManagementBaseObject
  fullName: System.Management.ManagementBaseObject
- uid: System.Management.ManagementEventWatcher.#ctor*
  parent: System.Management.ManagementEventWatcher
  isExternal: false
  name: ManagementEventWatcher
  nameWithType: ManagementEventWatcher.ManagementEventWatcher
- uid: System.Management.ManagementEventWatcher.Finalize*
  parent: System.Management.ManagementEventWatcher
  isExternal: false
  name: Finalize
  nameWithType: ManagementEventWatcher.Finalize
- uid: System.Management.ManagementEventWatcher.Options*
  parent: System.Management.ManagementEventWatcher
  isExternal: false
  name: Options
  nameWithType: ManagementEventWatcher.Options
- uid: System.Management.ManagementEventWatcher.Query*
  parent: System.Management.ManagementEventWatcher
  isExternal: false
  name: Query
  nameWithType: ManagementEventWatcher.Query
- uid: System.Management.ManagementEventWatcher.Scope*
  parent: System.Management.ManagementEventWatcher
  isExternal: false
  name: Scope
  nameWithType: ManagementEventWatcher.Scope
- uid: System.Management.ManagementEventWatcher.Start*
  parent: System.Management.ManagementEventWatcher
  isExternal: false
  name: Start
  nameWithType: ManagementEventWatcher.Start
- uid: System.Management.ManagementEventWatcher.Stop*
  parent: System.Management.ManagementEventWatcher
  isExternal: false
  name: Stop
  nameWithType: ManagementEventWatcher.Stop
- uid: System.Management.ManagementEventWatcher.WaitForNextEvent*
  parent: System.Management.ManagementEventWatcher
  isExternal: false
  name: WaitForNextEvent
  nameWithType: ManagementEventWatcher.WaitForNextEvent
