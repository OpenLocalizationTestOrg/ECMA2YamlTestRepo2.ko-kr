### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.DataListItemCollection
  id: DataListItemCollection
  children:
  - System.Web.UI.WebControls.DataListItemCollection.#ctor(System.Collections.ArrayList)
  - System.Web.UI.WebControls.DataListItemCollection.CopyTo(System.Array,System.Int32)
  - System.Web.UI.WebControls.DataListItemCollection.Count
  - System.Web.UI.WebControls.DataListItemCollection.GetEnumerator
  - System.Web.UI.WebControls.DataListItemCollection.IsReadOnly
  - System.Web.UI.WebControls.DataListItemCollection.IsSynchronized
  - System.Web.UI.WebControls.DataListItemCollection.Item(System.Int32)
  - System.Web.UI.WebControls.DataListItemCollection.SyncRoot
  langs:
  - csharp
  name: DataListItemCollection
  nameWithType: DataListItemCollection
  fullName: System.Web.UI.WebControls.DataListItemCollection
  type: Class
  summary: "컬렉션을 나타냅니다 <xref href=&quot;System.Web.UI.WebControls.DataListItem&quot;> </xref> 개체에 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref> 제어 합니다. 이 클래스는 상속 될 수 없습니다."
  remarks: "DataListItemCollection 클래스의 컬렉션을 나타냅니다 <xref:System.Web.UI.WebControls.DataListItem>개체를 나타내는 데이터 항목에는 <xref:System.Web.UI.WebControls.DataList>컨트롤.</xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.DataListItem> 프로그래밍 방식으로 검색 하려면 <xref:System.Web.UI.WebControls.DataListItem>에서 개체를 <xref:System.Web.UI.WebControls.DataList>다음 방법 중 하나를 사용 하십시오:-를 단일 인덱서를 사용 하 여 <xref:System.Web.UI.WebControls.DataListItem>배열 표기법을 사용 하 여 컬렉션에서 개체가.</xref:System.Web.UI.WebControls.DataListItem> </xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.DataListItem>      -사용는 <xref:System.Web.UI.WebControls.DataListItemCollection.CopyTo%2A>컬렉션의 내용을 복사 하는 메서드는 <xref:System.Array?displayProperty=fullName>컬렉션에서 항목을 가져올 사용할 수 있는 개체입니다.</xref:System.Array?displayProperty=fullName> </xref:System.Web.UI.WebControls.DataListItemCollection.CopyTo%2A>      -사용는 <xref:System.Web.UI.WebControls.DataListItemCollection.GetEnumerator%2A>만드는 메서드를 한 <xref:System.Collections.IEnumerator?displayProperty=fullName>컬렉션에서 항목을 가져올 사용할 수 있는 인터페이스입니다.</xref:System.Collections.IEnumerator?displayProperty=fullName> </xref:System.Web.UI.WebControls.DataListItemCollection.GetEnumerator%2A>       <xref:System.Web.UI.WebControls.DataListItemCollection.Count%2A>속성 컬렉션에 있는 항목의 총 수를 지정 하 고 일반적으로 컬렉션의 상한을 결정 하는 데 사용 됩니다.</xref:System.Web.UI.WebControls.DataListItemCollection.Count%2A>"
  example:
  - "The following example creates a data source in the form of a <xref:System.Data.DataView> control and binds it to a <xref:System.Web.UI.WebControls.DataList> control declared in markup. It then displays the contents of the underlying DataListItemCollection object on the page.  \n  \n [!code-vb[DataListItemCollection#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_150_1.aspx)]\n [!code-cs[DataListItemCollection#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_150_1.aspx)]"
  syntax:
    content: 'public sealed class DataListItemCollection : System.Collections.ICollection'
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataListItemCollection.#ctor(System.Collections.ArrayList)
  id: '#ctor(System.Collections.ArrayList)'
  parent: System.Web.UI.WebControls.DataListItemCollection
  langs:
  - csharp
  name: DataListItemCollection(ArrayList)
  nameWithType: DataListItemCollection.DataListItemCollection(ArrayList)
  fullName: System.Web.UI.WebControls.DataListItemCollection.DataListItemCollection(ArrayList)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.UI.WebControls.DataListItemCollection&quot;> </xref> 클래스입니다."
  remarks: "이 생성자를 사용 하 여 만들고 <xref:System.Web.UI.WebControls.DataListItemCollection>클래스</xref:System.Web.UI.WebControls.DataListItemCollection> 의 새 인스턴스를 초기화 합니다."
  syntax:
    content: public DataListItemCollection (System.Collections.ArrayList items);
    parameters:
    - id: items
      type: System.Collections.ArrayList
      description: "A <xref href=&quot;System.Collections.ArrayList&quot;> </xref> 컬렉션을 초기화 하는 항목을 포함 하는 개체입니다."
  overload: System.Web.UI.WebControls.DataListItemCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataListItemCollection.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Web.UI.WebControls.DataListItemCollection
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: DataListItemCollection.CopyTo(Array,Int32)
  fullName: System.Web.UI.WebControls.DataListItemCollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "이 모든 항목을 복사 <xref href=&quot;System.Web.UI.WebControls.DataListItemCollection&quot;> </xref> 지정 된 컬렉션 &lt;xref:System.Array?displayProperty=fullName&gt; 의 지정된 된 인덱스에서 시작 하는 개체는 &lt;xref:System.Array?displayProperty=fullName&gt; 개체입니다."
  remarks: "내용을 복사 하려면이 메서드를 사용 하 여는 <xref:System.Web.UI.WebControls.DataListItemCollection>여 지정 된 컬렉션 <xref:System.Array?displayProperty=fullName>지정된 된 인덱스에서 시작 하는 개체입니다.</xref:System.Array?displayProperty=fullName> </xref:System.Web.UI.WebControls.DataListItemCollection>      > [!NOTE] >는 `array` 매개 변수는&0;부터 시작 해야 합니다. <xref:System.Array?displayProperty=fullName>개체입니다.</xref:System.Array?displayProperty=fullName>"
  syntax:
    content: public void CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "0부터 시작 &lt;xref:System.Array?displayProperty=fullName&gt; 개체에서 복사한 항목을 수신 하는 <xref href=&quot;System.Web.UI.WebControls.DataListItemCollection&quot;> </xref> 컬렉션입니다."
    - id: index
      type: System.Int32
      description: "지정 된 첫 번째 위치 &lt;xref:System.Array?displayProperty=fullName&gt; 복사한 내용의 받을 개체입니다."
  overload: System.Web.UI.WebControls.DataListItemCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataListItemCollection.Count
  id: Count
  parent: System.Web.UI.WebControls.DataListItemCollection
  langs:
  - csharp
  name: Count
  nameWithType: DataListItemCollection.Count
  fullName: System.Web.UI.WebControls.DataListItemCollection.Count
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "개수를 가져옵니다 <xref href=&quot;System.Web.UI.WebControls.DataListItem&quot;> </xref> 컬렉션의 개체입니다."
  remarks: "Count 속성을 사용 하 여의 수를 확인 하려면 <xref:System.Web.UI.WebControls.DataListItem>개체에 <xref:System.Web.UI.WebControls.DataListItemCollection>컬렉션.</xref:System.Web.UI.WebControls.DataListItemCollection> </xref:System.Web.UI.WebControls.DataListItem> Count 속성 컬렉션을 반복할 때 컬렉션의 상한을 결정 하 일반적으로 사용 됩니다."
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "수가 <xref href=&quot;System.Web.UI.WebControls.DataListItem&quot;> </xref> 컬렉션의 개체입니다."
  overload: System.Web.UI.WebControls.DataListItemCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataListItemCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Web.UI.WebControls.DataListItemCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: DataListItemCollection.GetEnumerator()
  fullName: System.Web.UI.WebControls.DataListItemCollection.GetEnumerator()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "반환 된 &lt;xref:System.Collections.IEnumerator?displayProperty=fullName&gt; 모두 포함 하는 인터페이스 <xref href=&quot;System.Web.UI.WebControls.DataListItem&quot;> </xref> 개체에 <xref href=&quot;System.Web.UI.WebControls.DataListItemCollection&quot;> </xref>합니다."
  remarks: "이 메서드를 만드는 데는 <xref:System.Collections.IEnumerator?displayProperty=fullName>를 쉽게 반복할 수의 각 항목을 가져올 수는 <xref:System.Web.UI.WebControls.DataListItemCollection>컬렉션.</xref:System.Web.UI.WebControls.DataListItemCollection> </xref:System.Collections.IEnumerator?displayProperty=fullName>       사용 하 여는 <xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName>컬렉션에서 항목을 현재 가져올 속성을 가리키는.</xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName>       사용 하 여는 <xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=fullName>컬렉션의 다음 항목으로 이동 하는 메서드.</xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=fullName>       사용 하 여는 <xref:System.Collections.IEnumerator.Reset%2A?displayProperty=fullName>초기 위치에 열거자를 이동 하는 메서드의 다시.</xref:System.Collections.IEnumerator.Reset%2A?displayProperty=fullName>      > [!NOTE] > 만든 후는 <xref:System.Collections.IEnumerator?displayProperty=fullName>사용 또는 개체는 <xref:System.Collections.IEnumerator.Reset%2A?displayProperty=fullName>열거자는 컬렉션의 첫 번째 항목을 이동 하는 메서드를 호출 해야 합니다는 <xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=fullName>메서드.</xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=fullName> </xref:System.Collections.IEnumerator.Reset%2A?displayProperty=fullName> </xref:System.Collections.IEnumerator?displayProperty=fullName> 그렇지 않은 경우으로 표시 되는 항목의 <xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName>속성이 정의 되지 않습니다.</xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName>"
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "A &lt;xref:System.Collections.IEnumerator?displayProperty=fullName&gt; 모두 포함 하는 인터페이스 <xref href=&quot;System.Web.UI.WebControls.DataListItem&quot;> </xref> 개체에 <xref href=&quot;System.Web.UI.WebControls.DataListItemCollection&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.DataListItemCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataListItemCollection.IsReadOnly
  id: IsReadOnly
  parent: System.Web.UI.WebControls.DataListItemCollection
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: DataListItemCollection.IsReadOnly
  fullName: System.Web.UI.WebControls.DataListItemCollection.IsReadOnly
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "나타내는 값을 가져옵니다 여부는 <xref href=&quot;System.Web.UI.WebControls.DataListItem&quot;> </xref> 개체에 <xref href=&quot;System.Web.UI.WebControls.DataListItemCollection&quot;> </xref> 수정할 수 있습니다."
  remarks: "이 속성은 항상 반환 `false` 임을 나타내는 <xref:System.Web.UI.WebControls.DataListItemCollection>모든 경우에서에 쓸 수 있습니다.</xref:System.Web.UI.WebControls.DataListItemCollection>"
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>모든 경우"
  overload: System.Web.UI.WebControls.DataListItemCollection.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataListItemCollection.IsSynchronized
  id: IsSynchronized
  parent: System.Web.UI.WebControls.DataListItemCollection
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: DataListItemCollection.IsSynchronized
  fullName: System.Web.UI.WebControls.DataListItemCollection.IsSynchronized
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "에 대 한 액세스 여부를 나타내는 값을 가져옵니다는 <xref href=&quot;System.Web.UI.WebControls.DataListItemCollection&quot;> </xref> 동기화 되었는지 (스레드로부터 안전한 지)."
  remarks: "이 속성에서 파생 되는 <xref:System.Collections.ICollection?displayProperty=fullName>클래스 및 항상 반환 하도록 재정의 `false`.</xref:System.Collections.ICollection?displayProperty=fullName>       대 한 자세한 내용은 <xref:System.Web.UI.WebControls.DataGridColumnCollection.IsSynchronized%2A>속성 참조는 <xref:System.Collections.ICollection.IsSynchronized%2A?displayProperty=fullName>의 속성은 <xref:System.Collections.ICollection?displayProperty=fullName>인터페이스.</xref:System.Collections.ICollection?displayProperty=fullName> </xref:System.Collections.ICollection.IsSynchronized%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.DataGridColumnCollection.IsSynchronized%2A>"
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>모든 경우에 대 한"
  overload: System.Web.UI.WebControls.DataListItemCollection.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataListItemCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Web.UI.WebControls.DataListItemCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: DataListItemCollection.Item(Int32)
  fullName: System.Web.UI.WebControls.DataListItemCollection.Item(Int32)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "가져옵니다는 <xref href=&quot;System.Web.UI.WebControls.DataListItem&quot;> </xref> 개체 컬렉션에서 지정 된 인덱스입니다."
  remarks: "이 인덱서를 사용 하 여 한 <xref:System.Web.UI.WebControls.DataListItem>에서 개체는 <xref:System.Web.UI.WebControls.DataListItemCollection>배열 표기법을 사용 하 여 지정된 된 인덱스에.</xref:System.Web.UI.WebControls.DataListItemCollection> </xref:System.Web.UI.WebControls.DataListItem>"
  syntax:
    content: public System.Web.UI.WebControls.DataListItem this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "인덱스는 <xref href=&quot;System.Web.UI.WebControls.DataListItem&quot;> </xref> 에서 검색할 컬렉션입니다."
    return:
      type: System.Web.UI.WebControls.DataListItem
      description: "A <xref href=&quot;System.Web.UI.WebControls.DataListItem&quot;> </xref> 지정된 된 인덱스에 컬렉션에 있는 개체입니다."
  overload: System.Web.UI.WebControls.DataListItemCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataListItemCollection.SyncRoot
  id: SyncRoot
  parent: System.Web.UI.WebControls.DataListItemCollection
  langs:
  - csharp
  name: SyncRoot
  nameWithType: DataListItemCollection.SyncRoot
  fullName: System.Web.UI.WebControls.DataListItemCollection.SyncRoot
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "에 대 한 액세스를 동기화 하는 데 사용할 수 있는 개체를 가져옵니다는 <xref href=&quot;System.Web.UI.WebControls.DataListItemCollection&quot;> </xref> 컬렉션입니다."
  remarks: "이 구현에서 반환 되는 개체는 <xref:System.Web.UI.WebControls.DataListItemCollection>개체 자체입니다.</xref:System.Web.UI.WebControls.DataListItemCollection>       대 한 자세한 내용은 <xref:System.Web.UI.WebControls.DataGridColumnCollection.SyncRoot%2A>속성 참조는 <xref:System.Collections.ICollection.SyncRoot%2A?displayProperty=fullName>의 속성은 <xref:System.Collections.ICollection?displayProperty=fullName>인터페이스.</xref:System.Collections.ICollection?displayProperty=fullName> </xref:System.Collections.ICollection.SyncRoot%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.DataGridColumnCollection.SyncRoot%2A>"
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "A &lt;xref:System.Object?displayProperty=fullName&gt; 컬렉션에 대 한 액세스를 동기화에 사용할 수 있는 합니다."
  overload: System.Web.UI.WebControls.DataListItemCollection.SyncRoot*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.UI.WebControls.DataListItemCollection.#ctor(System.Collections.ArrayList)
  parent: System.Web.UI.WebControls.DataListItemCollection
  isExternal: false
  name: DataListItemCollection(ArrayList)
  nameWithType: DataListItemCollection.DataListItemCollection(ArrayList)
  fullName: System.Web.UI.WebControls.DataListItemCollection.DataListItemCollection(ArrayList)
- uid: System.Collections.ArrayList
  parent: System.Collections
  isExternal: false
  name: ArrayList
  nameWithType: ArrayList
  fullName: System.Collections.ArrayList
- uid: System.Web.UI.WebControls.DataListItemCollection.CopyTo(System.Array,System.Int32)
  parent: System.Web.UI.WebControls.DataListItemCollection
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: DataListItemCollection.CopyTo(Array,Int32)
  fullName: System.Web.UI.WebControls.DataListItemCollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.DataListItemCollection.Count
  parent: System.Web.UI.WebControls.DataListItemCollection
  isExternal: false
  name: Count
  nameWithType: DataListItemCollection.Count
  fullName: System.Web.UI.WebControls.DataListItemCollection.Count
- uid: System.Web.UI.WebControls.DataListItemCollection.GetEnumerator
  parent: System.Web.UI.WebControls.DataListItemCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: DataListItemCollection.GetEnumerator()
  fullName: System.Web.UI.WebControls.DataListItemCollection.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Web.UI.WebControls.DataListItemCollection.IsReadOnly
  parent: System.Web.UI.WebControls.DataListItemCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: DataListItemCollection.IsReadOnly
  fullName: System.Web.UI.WebControls.DataListItemCollection.IsReadOnly
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.DataListItemCollection.IsSynchronized
  parent: System.Web.UI.WebControls.DataListItemCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: DataListItemCollection.IsSynchronized
  fullName: System.Web.UI.WebControls.DataListItemCollection.IsSynchronized
- uid: System.Web.UI.WebControls.DataListItemCollection.Item(System.Int32)
  parent: System.Web.UI.WebControls.DataListItemCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: DataListItemCollection.Item(Int32)
  fullName: System.Web.UI.WebControls.DataListItemCollection.Item(Int32)
- uid: System.Web.UI.WebControls.DataListItem
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataListItem
  nameWithType: DataListItem
  fullName: System.Web.UI.WebControls.DataListItem
- uid: System.Web.UI.WebControls.DataListItemCollection.SyncRoot
  parent: System.Web.UI.WebControls.DataListItemCollection
  isExternal: false
  name: SyncRoot
  nameWithType: DataListItemCollection.SyncRoot
  fullName: System.Web.UI.WebControls.DataListItemCollection.SyncRoot
- uid: System.Web.UI.WebControls.DataListItemCollection.#ctor*
  parent: System.Web.UI.WebControls.DataListItemCollection
  isExternal: false
  name: DataListItemCollection
  nameWithType: DataListItemCollection.DataListItemCollection
- uid: System.Web.UI.WebControls.DataListItemCollection.CopyTo*
  parent: System.Web.UI.WebControls.DataListItemCollection
  isExternal: false
  name: CopyTo
  nameWithType: DataListItemCollection.CopyTo
- uid: System.Web.UI.WebControls.DataListItemCollection.Count*
  parent: System.Web.UI.WebControls.DataListItemCollection
  isExternal: false
  name: Count
  nameWithType: DataListItemCollection.Count
- uid: System.Web.UI.WebControls.DataListItemCollection.GetEnumerator*
  parent: System.Web.UI.WebControls.DataListItemCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: DataListItemCollection.GetEnumerator
- uid: System.Web.UI.WebControls.DataListItemCollection.IsReadOnly*
  parent: System.Web.UI.WebControls.DataListItemCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: DataListItemCollection.IsReadOnly
- uid: System.Web.UI.WebControls.DataListItemCollection.IsSynchronized*
  parent: System.Web.UI.WebControls.DataListItemCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: DataListItemCollection.IsSynchronized
- uid: System.Web.UI.WebControls.DataListItemCollection.Item*
  parent: System.Web.UI.WebControls.DataListItemCollection
  isExternal: false
  name: Item
  nameWithType: DataListItemCollection.Item
- uid: System.Web.UI.WebControls.DataListItemCollection.SyncRoot*
  parent: System.Web.UI.WebControls.DataListItemCollection
  isExternal: false
  name: SyncRoot
  nameWithType: DataListItemCollection.SyncRoot
