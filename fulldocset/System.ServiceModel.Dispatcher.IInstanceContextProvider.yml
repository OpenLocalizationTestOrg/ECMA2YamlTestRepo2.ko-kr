### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Dispatcher.IInstanceContextProvider
  id: IInstanceContextProvider
  children:
  - System.ServiceModel.Dispatcher.IInstanceContextProvider.GetExistingInstanceContext(System.ServiceModel.Channels.Message,System.ServiceModel.IContextChannel)
  - System.ServiceModel.Dispatcher.IInstanceContextProvider.InitializeInstanceContext(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Message,System.ServiceModel.IContextChannel)
  - System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle(System.ServiceModel.InstanceContext)
  - System.ServiceModel.Dispatcher.IInstanceContextProvider.NotifyIdle(System.ServiceModel.Dispatcher.InstanceContextIdleCallback,System.ServiceModel.InstanceContext)
  langs:
  - csharp
  name: IInstanceContextProvider
  nameWithType: IInstanceContextProvider
  fullName: System.ServiceModel.Dispatcher.IInstanceContextProvider
  type: Interface
  summary: "만들거나의 선택에 참여 하려면 구현은 &lt;xref:System.ServiceModel.InstanceContext?displayProperty=fullName&gt; 특히 세션을 사용 하면 공유 개체입니다."
  remarks: "적절 한 수 있도록 IInstanceContextProvider 인터페이스를 구현 <xref:System.ServiceModel.InstanceContext?displayProperty=fullName>시스템 개체입니다.</xref:System.ServiceModel.InstanceContext?displayProperty=fullName> 일반적으로이 인터페이스는 서비스 인스턴스 풀링을 사용을 클라이언트 간에 컨텍스트를 그룹 또는 서비스 인스턴스의 수명을 제어 하거나, 공유 세션을 지원 하려면 구현 합니다.       예를 들어 공유를 구현 하려면와 연결 된 어느 세션 또는 클라이언트에서 호출을 결정 하는 사용자 지정 IInstanceContextProvider 삽입 <xref:System.ServiceModel.InstanceContext>개체입니다.</xref:System.ServiceModel.InstanceContext> 인스턴스 컨텍스트 공유에 보여 주는 예제를 보려면 [InstanceContextSharing](http://msdn.microsoft.com/en-us/4a6a46d7-b7d7-4bb5-a0dd-03ffa3cbc230)합니다.      > [!NOTE] > 때 an IInstanceContextProvider에 삽입 됩니다 [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]의 생성을 제어 하는 일반 속성 <xref:System.ServiceModel.InstanceContext>개체 (의 <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A?displayProperty=fullName>속성)은 더 이상 체크 영향을 주지 않습니다.</xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A?displayProperty=fullName> </xref:System.ServiceModel.InstanceContext>       초기화할 수 있는 보다 일반적인 메커니즘 <xref:System.ServiceModel.InstanceContext>개체를 만들 때 (예: 각 사용자 지정 확장을 연결할 <xref:System.ServiceModel.InstanceContext>)은 <xref:System.ServiceModel.Dispatcher.IInstanceContextInitializer?displayProperty=fullName>.</xref:System.ServiceModel.Dispatcher.IInstanceContextInitializer?displayProperty=fullName> </xref:System.ServiceModel.InstanceContext> </xref:System.ServiceModel.InstanceContext>"
  syntax:
    content: public interface IInstanceContextProvider
  implements: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.IInstanceContextProvider.GetExistingInstanceContext(System.ServiceModel.Channels.Message,System.ServiceModel.IContextChannel)
  id: GetExistingInstanceContext(System.ServiceModel.Channels.Message,System.ServiceModel.IContextChannel)
  parent: System.ServiceModel.Dispatcher.IInstanceContextProvider
  langs:
  - csharp
  name: GetExistingInstanceContext(Message,IContextChannel)
  nameWithType: IInstanceContextProvider.GetExistingInstanceContext(Message,IContextChannel)
  fullName: System.ServiceModel.Dispatcher.IInstanceContextProvider.GetExistingInstanceContext(Message,IContextChannel)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "새 메시지를 받을 때 호출 됩니다."
  remarks: "GetExistingInstanceContext 메서드는 메시지를 받을 때 호출 됩니다. 반환 된 <xref:System.ServiceModel.InstanceContext>메시지를 처리 하려면 개체 또는 `null`.</xref:System.ServiceModel.InstanceContext> 경우 `null`, [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] 새 <xref:System.ServiceModel.InstanceContext>메시지와 다음 호출에 대 한 개체는 <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.InitializeInstanceContext%2A>메서드.</xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.InitializeInstanceContext%2A> </xref:System.ServiceModel.InstanceContext>       반환 하는 경우 `null`, 새 <xref:System.ServiceModel.InstanceContext>개체가 스로틀 시스템을 통해 들어가고 <xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances%2A?displayProperty=fullName>.</xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances%2A?displayProperty=fullName> 의 수를 증가</xref:System.ServiceModel.InstanceContext>"
  syntax:
    content: public System.ServiceModel.InstanceContext GetExistingInstanceContext (System.ServiceModel.Channels.Message message, System.ServiceModel.IContextChannel channel);
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "들어오는 메시지입니다."
    - id: channel
      type: System.ServiceModel.IContextChannel
      description: "메시지를 받은 채널입니다."
    return:
      type: System.ServiceModel.InstanceContext
      description: "&lt;xref:System.ServiceModel.InstanceContext?displayProperty=fullName&gt; 메시지를 처리 하는 데 사용 되는 반환 하는 개체 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 하도록 지시 하려면 [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] 새로 만들려면 <xref:System.ServiceModel.InstanceContext>개체입니다.</xref:System.ServiceModel.InstanceContext>"
  overload: System.ServiceModel.Dispatcher.IInstanceContextProvider.GetExistingInstanceContext*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.IInstanceContextProvider.InitializeInstanceContext(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Message,System.ServiceModel.IContextChannel)
  id: InitializeInstanceContext(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Message,System.ServiceModel.IContextChannel)
  parent: System.ServiceModel.Dispatcher.IInstanceContextProvider
  langs:
  - csharp
  name: InitializeInstanceContext(InstanceContext,Message,IContextChannel)
  nameWithType: IInstanceContextProvider.InitializeInstanceContext(InstanceContext,Message,IContextChannel)
  fullName: System.ServiceModel.Dispatcher.IInstanceContextProvider.InitializeInstanceContext(InstanceContext,Message,IContextChannel)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "될 때 호출 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 에서 반환 되는 <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.GetExistingInstanceContext*>메서드.</xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.GetExistingInstanceContext*>"
  remarks: "InitializeInstanceContext 될 때 호출 됩니다 <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.GetExistingInstanceContext%2A>반환 `null` 와 새 <xref:System.ServiceModel.InstanceContext>개체가 만들어집니다.</xref:System.ServiceModel.InstanceContext> </xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.GetExistingInstanceContext%2A> 알려 주기 위해이 메서드는 호출 하는 새 <xref:System.ServiceModel.InstanceContext>만들어졌습니다.</xref:System.ServiceModel.InstanceContext>"
  syntax:
    content: public void InitializeInstanceContext (System.ServiceModel.InstanceContext instanceContext, System.ServiceModel.Channels.Message message, System.ServiceModel.IContextChannel channel);
    parameters:
    - id: instanceContext
      type: System.ServiceModel.InstanceContext
      description: "새 &lt;xref:System.ServiceModel.InstanceContext?displayProperty=fullName&gt; 개체입니다."
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "들어오는 메시지입니다."
    - id: channel
      type: System.ServiceModel.IContextChannel
      description: "메시지를 받은 채널입니다."
  overload: System.ServiceModel.Dispatcher.IInstanceContextProvider.InitializeInstanceContext*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle(System.ServiceModel.InstanceContext)
  id: IsIdle(System.ServiceModel.InstanceContext)
  parent: System.ServiceModel.Dispatcher.IInstanceContextProvider
  langs:
  - csharp
  name: IsIdle(InstanceContext)
  nameWithType: IInstanceContextProvider.IsIdle(InstanceContext)
  fullName: System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle(InstanceContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "될 때 호출 모든 <xref:System.ServiceModel.InstanceContext>를 방지 하는 데 사용할 수 있도록 작업이 완료 되는 <xref:System.ServiceModel.InstanceContext>재생.</xref:System.ServiceModel.InstanceContext> </xref:System.ServiceModel.InstanceContext>"
  remarks: "IsIdle 될 때 호출 됩니다 [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] 를 닫았다가 재활용할는 유휴 <xref:System.ServiceModel.InstanceContext>개체 런타임 테 작업을 계속할지 여부를 알릴 수 있도록</xref:System.ServiceModel.InstanceContext> 하려고       인스턴스 컨텍스트 공유에 보여 주는 예제를 보려면 [InstanceContextSharing](http://msdn.microsoft.com/en-us/4a6a46d7-b7d7-4bb5-a0dd-03ffa3cbc230)합니다."
  syntax:
    content: public bool IsIdle (System.ServiceModel.InstanceContext instanceContext);
    parameters:
    - id: instanceContext
      type: System.ServiceModel.InstanceContext
      description: "<xref:System.ServiceModel.InstanceContext>유휴 간주 되는 개체입니다.</xref:System.ServiceModel.InstanceContext>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우 [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] 를 닫은 다음 재활용 하는 <xref:System.ServiceModel.InstanceContext>개체 및 값을 조정 &lt;xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances%2A?displayProperty=fullName&gt;, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.ServiceModel.InstanceContext>"
  overload: System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.IInstanceContextProvider.NotifyIdle(System.ServiceModel.Dispatcher.InstanceContextIdleCallback,System.ServiceModel.InstanceContext)
  id: NotifyIdle(System.ServiceModel.Dispatcher.InstanceContextIdleCallback,System.ServiceModel.InstanceContext)
  parent: System.ServiceModel.Dispatcher.IInstanceContextProvider
  langs:
  - csharp
  name: NotifyIdle(InstanceContextIdleCallback,InstanceContext)
  nameWithType: IInstanceContextProvider.NotifyIdle(InstanceContextIdleCallback,InstanceContext)
  fullName: System.ServiceModel.Dispatcher.IInstanceContextProvider.NotifyIdle(InstanceContextIdleCallback,InstanceContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "될 때 호출의 <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle*>메서드가 반환 되 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 를 알리기 위해 콜백을 제공 하는 데 사용할 수 있도록 [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] 때는 <xref:System.ServiceModel.InstanceContext>개체가 완료 합니다.</xref:System.ServiceModel.InstanceContext> </xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle*>"
  remarks: "NotifyIdle 메서드를 호출한 경우는 <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle%2A>메서드가 반환 되 `false` 제공할 수 있도록 [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] 와 <xref:System.ServiceModel.Dispatcher.InstanceContextIdleCallback?displayProperty=fullName>런타임에 알리는 데 사용 하는 개체는 <xref:System.ServiceModel.InstanceContext>해당 작업을 완료 했습니다.</xref:System.ServiceModel.InstanceContext> </xref:System.ServiceModel.Dispatcher.InstanceContextIdleCallback?displayProperty=fullName> </xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle%2A> 경우는 <xref:System.ServiceModel.Dispatcher.InstanceContextIdleCallback?displayProperty=fullName>개체 런타임에 알립니다 하는 <xref:System.ServiceModel.InstanceContext>해당 작업을 완료 했습니다 [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] 호출 <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle%2A>다시 한 번.</xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle%2A> </xref:System.ServiceModel.InstanceContext> </xref:System.ServiceModel.Dispatcher.InstanceContextIdleCallback?displayProperty=fullName> 이 주기까지 계속 <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle%2A>반환 `true` 컨텍스트 닫았다가 재활용할 및.</xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle%2A>"
  syntax:
    content: public void NotifyIdle (System.ServiceModel.Dispatcher.InstanceContextIdleCallback callback, System.ServiceModel.InstanceContext instanceContext);
    parameters:
    - id: callback
      type: System.ServiceModel.Dispatcher.InstanceContextIdleCallback
      description: "<xref href=&quot;System.ServiceModel.Dispatcher.InstanceContextIdleCallback&quot;> </xref> 개체에 게 알려 주는 [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] 때는 <xref:System.ServiceModel.InstanceContext>개체를 닫았다가 재활용할 하.</xref:System.ServiceModel.InstanceContext>"
    - id: instanceContext
      type: System.ServiceModel.InstanceContext
      description: "현재 <xref:System.ServiceModel.InstanceContext>입니다.</xref:System.ServiceModel.InstanceContext>"
  overload: System.ServiceModel.Dispatcher.IInstanceContextProvider.NotifyIdle*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Dispatcher.IInstanceContextProvider.GetExistingInstanceContext(System.ServiceModel.Channels.Message,System.ServiceModel.IContextChannel)
  parent: System.ServiceModel.Dispatcher.IInstanceContextProvider
  isExternal: false
  name: GetExistingInstanceContext(Message,IContextChannel)
  nameWithType: IInstanceContextProvider.GetExistingInstanceContext(Message,IContextChannel)
  fullName: System.ServiceModel.Dispatcher.IInstanceContextProvider.GetExistingInstanceContext(Message,IContextChannel)
- uid: System.ServiceModel.InstanceContext
  parent: System.ServiceModel
  isExternal: true
  name: InstanceContext
  nameWithType: InstanceContext
  fullName: System.ServiceModel.InstanceContext
- uid: System.ServiceModel.Channels.Message
  parent: System.ServiceModel.Channels
  isExternal: true
  name: Message
  nameWithType: Message
  fullName: System.ServiceModel.Channels.Message
- uid: System.ServiceModel.IContextChannel
  parent: System.ServiceModel
  isExternal: true
  name: IContextChannel
  nameWithType: IContextChannel
  fullName: System.ServiceModel.IContextChannel
- uid: System.ServiceModel.Dispatcher.IInstanceContextProvider.InitializeInstanceContext(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Message,System.ServiceModel.IContextChannel)
  parent: System.ServiceModel.Dispatcher.IInstanceContextProvider
  isExternal: false
  name: InitializeInstanceContext(InstanceContext,Message,IContextChannel)
  nameWithType: IInstanceContextProvider.InitializeInstanceContext(InstanceContext,Message,IContextChannel)
  fullName: System.ServiceModel.Dispatcher.IInstanceContextProvider.InitializeInstanceContext(InstanceContext,Message,IContextChannel)
- uid: System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle(System.ServiceModel.InstanceContext)
  parent: System.ServiceModel.Dispatcher.IInstanceContextProvider
  isExternal: false
  name: IsIdle(InstanceContext)
  nameWithType: IInstanceContextProvider.IsIdle(InstanceContext)
  fullName: System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle(InstanceContext)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Dispatcher.IInstanceContextProvider.NotifyIdle(System.ServiceModel.Dispatcher.InstanceContextIdleCallback,System.ServiceModel.InstanceContext)
  parent: System.ServiceModel.Dispatcher.IInstanceContextProvider
  isExternal: false
  name: NotifyIdle(InstanceContextIdleCallback,InstanceContext)
  nameWithType: IInstanceContextProvider.NotifyIdle(InstanceContextIdleCallback,InstanceContext)
  fullName: System.ServiceModel.Dispatcher.IInstanceContextProvider.NotifyIdle(InstanceContextIdleCallback,InstanceContext)
- uid: System.ServiceModel.Dispatcher.InstanceContextIdleCallback
  parent: System.ServiceModel.Dispatcher
  isExternal: false
  name: InstanceContextIdleCallback
  nameWithType: InstanceContextIdleCallback
  fullName: System.ServiceModel.Dispatcher.InstanceContextIdleCallback
- uid: System.ServiceModel.Dispatcher.IInstanceContextProvider.GetExistingInstanceContext*
  parent: System.ServiceModel.Dispatcher.IInstanceContextProvider
  isExternal: false
  name: GetExistingInstanceContext
  nameWithType: IInstanceContextProvider.GetExistingInstanceContext
- uid: System.ServiceModel.Dispatcher.IInstanceContextProvider.InitializeInstanceContext*
  parent: System.ServiceModel.Dispatcher.IInstanceContextProvider
  isExternal: false
  name: InitializeInstanceContext
  nameWithType: IInstanceContextProvider.InitializeInstanceContext
- uid: System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle*
  parent: System.ServiceModel.Dispatcher.IInstanceContextProvider
  isExternal: false
  name: IsIdle
  nameWithType: IInstanceContextProvider.IsIdle
- uid: System.ServiceModel.Dispatcher.IInstanceContextProvider.NotifyIdle*
  parent: System.ServiceModel.Dispatcher.IInstanceContextProvider
  isExternal: false
  name: NotifyIdle
  nameWithType: IInstanceContextProvider.NotifyIdle
