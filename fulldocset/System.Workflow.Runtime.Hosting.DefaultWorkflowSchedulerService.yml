### YamlMime:ManagedReference
items:
- uid: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService
  id: DefaultWorkflowSchedulerService
  children:
  - System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.#ctor
  - System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.#ctor(System.Collections.Specialized.NameValueCollection)
  - System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.#ctor(System.Int32)
  - System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Cancel(System.Guid)
  - System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.MaxSimultaneousWorkflows
  - System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.OnStarted
  - System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid)
  - System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid,System.DateTime,System.Guid)
  - System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Stop
  langs:
  - csharp
  name: DefaultWorkflowSchedulerService
  nameWithType: DefaultWorkflowSchedulerService
  fullName: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService
  type: Class
  summary: "만들고 워크플로 런타임 엔진에서 워크플로 인스턴스를 실행 하는 스레드를 관리 합니다."
  remarks: "> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]DefaultWorkflowSchedulerService는 기본적으로 워크플로 런타임 엔진에 의해 사용 됩니다. 여러 워크플로 인스턴스는 런타임 스레드 풀에 대기에 대 한 기본 지원이 포함 됩니다. 워크플로 실행 하는 일을 담당 하는 스레드를 제어 하려는 경우 사용 <xref:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService>.</xref:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService>"
  syntax:
    content: >-
      [System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]

      public class DefaultWorkflowSchedulerService : System.Workflow.Runtime.Hosting.WorkflowSchedulerService
  inheritance:
  - System.Object
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  - System.Workflow.Runtime.Hosting.WorkflowSchedulerService
  implements: []
  inheritedMembers:
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(System.Exception,System.Guid)
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.#ctor
  id: '#ctor'
  parent: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService
  langs:
  - csharp
  name: DefaultWorkflowSchedulerService()
  nameWithType: DefaultWorkflowSchedulerService.DefaultWorkflowSchedulerService()
  fullName: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.DefaultWorkflowSchedulerService()
  type: Constructor
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService&quot;> </xref> 클래스입니다."
  syntax:
    content: public DefaultWorkflowSchedulerService ();
    parameters: []
  overload: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.#ctor(System.Collections.Specialized.NameValueCollection)
  id: '#ctor(System.Collections.Specialized.NameValueCollection)'
  parent: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService
  langs:
  - csharp
  name: DefaultWorkflowSchedulerService(NameValueCollection)
  nameWithType: DefaultWorkflowSchedulerService.DefaultWorkflowSchedulerService(NameValueCollection)
  fullName: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.DefaultWorkflowSchedulerService(NameValueCollection)
  type: Constructor
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService&quot;> </xref> 클래스입니다."
  remarks: "This constructor is invoked when the workflow runtime engine loads services from an application configuration file. The only valid parameter is `maxSimultaneousWorkflows`, which can specify the number of workflows that can be run at the same time.  \n  \n Setting `maxSimultaneousWorkflows` to a high value might cause the .NET thread pool to starve. This could cause time-outs when a persistence service tries to complete a persistence transaction because <xref:System.Transactions.Transaction> objects also use the .NET thread pool.  \n  \n If not specified in a constructor or configuration file, the default value for `maxSimultaneousWorkflows` is 5 for a single-processor machine, and (int)(5 * Environment.ProcessorCount \\* .8) for a multiple-processor machine. Note that (int)(5 \\* Environment.ProcessorCount \\* .8) is not always the same as (int)(4 \\* Environment.ProcessorCount), because of the rules of integer arithmetic."
  syntax:
    content: public DefaultWorkflowSchedulerService (System.Collections.Specialized.NameValueCollection parameters);
    parameters:
    - id: parameters
      type: System.Collections.Specialized.NameValueCollection
      description: "A <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> 초기화 정보를 포함 하는 합니다."
  overload: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>parameters</code>에 null 참조 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> Visual basic에서)."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "값 키 중 하나는 <code> parameters </code> 컬렉션에 null 참조 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>).       -또는--의 값 키 중 하나는 <code> parameters </code> 컬렉션에 대 한 기본 키와 일치 하지 않는 <xref href=&quot;System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService&quot;> </xref>합니다."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "<xref:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.MaxSimultaneousWorkflows*>.</xref:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.MaxSimultaneousWorkflows*> 일치 하는 두 자리 부동 소수점 숫자로 변환할 수 없는 매개 변수 중 하나"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<xref:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.MaxSimultaneousWorkflows*>가 1 보다 작습니다.</xref:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.MaxSimultaneousWorkflows*>"
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService
  langs:
  - csharp
  name: DefaultWorkflowSchedulerService(Int32)
  nameWithType: DefaultWorkflowSchedulerService.DefaultWorkflowSchedulerService(Int32)
  fullName: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.DefaultWorkflowSchedulerService(Int32)
  type: Constructor
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService&quot;> </xref> 서비스가 동시에 실행할 수 있는 워크플로 인스턴스의 지정 된 최대 수를 사용 하 여 클래스입니다."
  remarks: "Setting `maxSimultaneousWorkflows` to a high value might cause the .NET thread pool to starve. This could cause time-outs when a persistence service tries to complete a persistence transaction because <xref:System.Transactions.Transaction> objects also use the .NET thread pool.  \n  \n If not specified in a constructor or configuration file, the default value for `maxSimultaneousWorkflows` is 5 for a single-processor machine, and (int)(5 * Environment.ProcessorCount \\* .8) for a multiple-processor machine. Note that (int)(5 \\* Environment.ProcessorCount \\* .8) is not always the same as (int)(4 \\* Environment.ProcessorCount), because of the rules of integer arithmetic."
  syntax:
    content: public DefaultWorkflowSchedulerService (int maxSimultaneousWorkflows);
    parameters:
    - id: maxSimultaneousWorkflows
      type: System.Int32
      description: "스레드 풀 큐에 저장할 수 있는 워크플로 인스턴스의 최대 수를 결정 하는 정수입니다."
  overload: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>maxSimultaneousWorkflows</code>가 1 보다 작습니다."
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Cancel(System.Guid)
  id: Cancel(System.Guid)
  parent: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService
  langs:
  - csharp
  name: Cancel(Guid)
  nameWithType: DefaultWorkflowSchedulerService.Cancel(Guid)
  fullName: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Cancel(Guid)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "지정 된 기존 워크플로 인스턴스 작업 항목을 취소합니다."
  syntax:
    content: protected override void Cancel (Guid timerId);
    parameters:
    - id: timerId
      type: System.Guid
      description: "<xref:System.Guid>취소할 기존의 예약 된 작업 항목과 연관.</xref:System.Guid>"
  overload: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Cancel*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>timerId</code>빈 GUID입니다."
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.MaxSimultaneousWorkflows
  id: MaxSimultaneousWorkflows
  parent: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService
  langs:
  - csharp
  name: MaxSimultaneousWorkflows
  nameWithType: DefaultWorkflowSchedulerService.MaxSimultaneousWorkflows
  fullName: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.MaxSimultaneousWorkflows
  type: Property
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "스레드 풀 큐에 저장할 수 있는 워크플로 인스턴스의 최대 수를 가져옵니다."
  remarks: "이 메서드에 대 한 기본값은 단일 프로세서 컴퓨터 및 (int) (5 * Environment.ProcessorCount \\* .8) 다중 프로세서 컴퓨터에 대 한 합니다. (int) (5 \\* Environment.ProcessorCount \\* .8)은 동일 (int) (4 \\* Environment.ProcessorCount), 정수 산술 연산의 규칙 때문입니다."
  syntax:
    content: public int MaxSimultaneousWorkflows { get; }
    return:
      type: System.Int32
      description: "스레드 풀 큐에 저장할 수 있는 워크플로 인스턴스의 최대 수를 나타내는 정수입니다."
  overload: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.MaxSimultaneousWorkflows*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.OnStarted
  id: OnStarted
  parent: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService
  langs:
  - csharp
  name: OnStarted()
  nameWithType: DefaultWorkflowSchedulerService.OnStarted()
  fullName: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.OnStarted()
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "알립니다는 <xref href=&quot;System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService&quot;> </xref> 워크플로 인스턴스 실행을 시작 했음을 합니다."
  remarks: "OnStarted는 워크플로 인스턴스 스레드 풀에 포함 되기를 대기 하는 항목의 목록에서 첫 번째 작업 항목에 대 한 스레드를 만듭니다."
  syntax:
    content: protected override void OnStarted ();
    parameters: []
  overload: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.OnStarted*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid)
  id: Schedule(System.Threading.WaitCallback,System.Guid)
  parent: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService
  langs:
  - csharp
  name: Schedule(WaitCallback,Guid)
  nameWithType: DefaultWorkflowSchedulerService.Schedule(WaitCallback,Guid)
  fullName: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Schedule(WaitCallback,Guid)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "지정된 된 멀티 캐스트 대리자를 사용 하 여 지정 된 워크플로 인스턴스를 사용 하 여 보류 중인 작업 항목 큐에 워크플로 인스턴스를 추가 합니다."
  remarks: "사용 하 여 <xref:System.Threading.WaitCallback>새 스레드에서 실행 될 대리자 메서드를 만드는 데 생성자.</xref:System.Threading.WaitCallback>"
  syntax:
    content: protected override void Schedule (System.Threading.WaitCallback callback, Guid workflowInstanceId);
    parameters:
    - id: callback
      type: System.Threading.WaitCallback
      description: "A <xref href=&quot;System.Threading.WaitCallback&quot;> </xref> 멀티 캐스트 대리자를 실행 하는 메서드를 나타냅니다."
    - id: workflowInstanceId
      type: System.Guid
      description: "A <xref:System.Guid>워크플로 인스턴스를 나타내는입니다.</xref:System.Guid>"
  overload: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Schedule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>callback</code>에 null 참조 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> Visual basic에서)."
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid,System.DateTime,System.Guid)
  id: Schedule(System.Threading.WaitCallback,System.Guid,System.DateTime,System.Guid)
  parent: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService
  langs:
  - csharp
  name: Schedule(WaitCallback,Guid,DateTime,Guid)
  nameWithType: DefaultWorkflowSchedulerService.Schedule(WaitCallback,Guid,DateTime,Guid)
  fullName: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Schedule(WaitCallback,Guid,DateTime,Guid)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "지정된 된 멀티 캐스트 대리자를 사용 하 여 보류 중인 작업 항목 큐에 지정된 된 워크플로 인스턴스를 추가 <xref:System.DateTime>및 Guid.</xref:System.DateTime>"
  remarks: "사용 하 여 <xref:System.Threading.WaitCallback>새 스레드에서 실행 될 대리자 메서드를 만드는 데 생성자.</xref:System.Threading.WaitCallback>"
  syntax:
    content: protected override void Schedule (System.Threading.WaitCallback callback, Guid workflowInstanceId, DateTime whenUtc, Guid timerId);
    parameters:
    - id: callback
      type: System.Threading.WaitCallback
      description: "A <xref href=&quot;System.Threading.WaitCallback&quot;> </xref> 멀티 캐스트 대리자를 실행 하는 메서드를 나타냅니다."
    - id: workflowInstanceId
      type: System.Guid
      description: "A <xref:System.Guid>워크플로 인스턴스를 나타내는입니다.</xref:System.Guid>"
    - id: whenUtc
      type: System.DateTime
      description: "<xref:System.DateTime>스레드 실행을 시작 하려면 시간을 나타냅니다.</xref:System.DateTime>"
    - id: timerId
      type: System.Guid
      description: "A <xref:System.Guid>예약된 된 스레드를 나타내는입니다.</xref:System.Guid>"
  overload: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Schedule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>callback</code>에 null 참조 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> Visual basic에서)."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>workflowInstanceId</code>또는 <code>timerId</code> 빈 GUID가 사용 됩니다."
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Stop
  id: Stop
  parent: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService
  langs:
  - csharp
  name: Stop()
  nameWithType: DefaultWorkflowSchedulerService.Stop()
  fullName: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Stop()
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "워크플로 인스턴스 및 실행 하는 모든 타이머를 현재 실행 중인 스레드를 중지 합니다."
  syntax:
    content: protected override void Stop ();
    parameters: []
  overload: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Stop*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Workflow.Runtime.Hosting.WorkflowSchedulerService
  isExternal: false
  name: System.Workflow.Runtime.Hosting.WorkflowSchedulerService
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.FormatException
  isExternal: true
  name: System.FormatException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.#ctor
  parent: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService
  isExternal: false
  name: DefaultWorkflowSchedulerService()
  nameWithType: DefaultWorkflowSchedulerService.DefaultWorkflowSchedulerService()
  fullName: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.DefaultWorkflowSchedulerService()
- uid: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.#ctor(System.Collections.Specialized.NameValueCollection)
  parent: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService
  isExternal: false
  name: DefaultWorkflowSchedulerService(NameValueCollection)
  nameWithType: DefaultWorkflowSchedulerService.DefaultWorkflowSchedulerService(NameValueCollection)
  fullName: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.DefaultWorkflowSchedulerService(NameValueCollection)
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.#ctor(System.Int32)
  parent: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService
  isExternal: false
  name: DefaultWorkflowSchedulerService(Int32)
  nameWithType: DefaultWorkflowSchedulerService.DefaultWorkflowSchedulerService(Int32)
  fullName: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.DefaultWorkflowSchedulerService(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Cancel(System.Guid)
  parent: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService
  isExternal: false
  name: Cancel(Guid)
  nameWithType: DefaultWorkflowSchedulerService.Cancel(Guid)
  fullName: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Cancel(Guid)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.MaxSimultaneousWorkflows
  parent: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService
  isExternal: false
  name: MaxSimultaneousWorkflows
  nameWithType: DefaultWorkflowSchedulerService.MaxSimultaneousWorkflows
  fullName: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.MaxSimultaneousWorkflows
- uid: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.OnStarted
  parent: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService
  isExternal: false
  name: OnStarted()
  nameWithType: DefaultWorkflowSchedulerService.OnStarted()
  fullName: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.OnStarted()
- uid: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid)
  parent: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService
  isExternal: false
  name: Schedule(WaitCallback,Guid)
  nameWithType: DefaultWorkflowSchedulerService.Schedule(WaitCallback,Guid)
  fullName: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Schedule(WaitCallback,Guid)
- uid: System.Threading.WaitCallback
  parent: System.Threading
  isExternal: false
  name: WaitCallback
  nameWithType: WaitCallback
  fullName: System.Threading.WaitCallback
- uid: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid,System.DateTime,System.Guid)
  parent: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService
  isExternal: false
  name: Schedule(WaitCallback,Guid,DateTime,Guid)
  nameWithType: DefaultWorkflowSchedulerService.Schedule(WaitCallback,Guid,DateTime,Guid)
  fullName: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Schedule(WaitCallback,Guid,DateTime,Guid)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Stop
  parent: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService
  isExternal: false
  name: Stop()
  nameWithType: DefaultWorkflowSchedulerService.Stop()
  fullName: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Stop()
- uid: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.#ctor*
  parent: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService
  isExternal: false
  name: DefaultWorkflowSchedulerService
  nameWithType: DefaultWorkflowSchedulerService.DefaultWorkflowSchedulerService
- uid: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Cancel*
  parent: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService
  isExternal: false
  name: Cancel
  nameWithType: DefaultWorkflowSchedulerService.Cancel
- uid: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.MaxSimultaneousWorkflows*
  parent: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService
  isExternal: false
  name: MaxSimultaneousWorkflows
  nameWithType: DefaultWorkflowSchedulerService.MaxSimultaneousWorkflows
- uid: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.OnStarted*
  parent: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService
  isExternal: false
  name: OnStarted
  nameWithType: DefaultWorkflowSchedulerService.OnStarted
- uid: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Schedule*
  parent: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService
  isExternal: false
  name: Schedule
  nameWithType: DefaultWorkflowSchedulerService.Schedule
- uid: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Stop*
  parent: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService
  isExternal: false
  name: Stop
  nameWithType: DefaultWorkflowSchedulerService.Stop
