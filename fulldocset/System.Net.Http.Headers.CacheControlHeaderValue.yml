### YamlMime:ManagedReference
items:
- uid: System.Net.Http.Headers.CacheControlHeaderValue
  id: CacheControlHeaderValue
  children:
  - System.Net.Http.Headers.CacheControlHeaderValue.#ctor
  - System.Net.Http.Headers.CacheControlHeaderValue.Equals(System.Object)
  - System.Net.Http.Headers.CacheControlHeaderValue.Extensions
  - System.Net.Http.Headers.CacheControlHeaderValue.GetHashCode
  - System.Net.Http.Headers.CacheControlHeaderValue.MaxAge
  - System.Net.Http.Headers.CacheControlHeaderValue.MaxStale
  - System.Net.Http.Headers.CacheControlHeaderValue.MaxStaleLimit
  - System.Net.Http.Headers.CacheControlHeaderValue.MinFresh
  - System.Net.Http.Headers.CacheControlHeaderValue.MustRevalidate
  - System.Net.Http.Headers.CacheControlHeaderValue.NoCache
  - System.Net.Http.Headers.CacheControlHeaderValue.NoCacheHeaders
  - System.Net.Http.Headers.CacheControlHeaderValue.NoStore
  - System.Net.Http.Headers.CacheControlHeaderValue.NoTransform
  - System.Net.Http.Headers.CacheControlHeaderValue.OnlyIfCached
  - System.Net.Http.Headers.CacheControlHeaderValue.Parse(System.String)
  - System.Net.Http.Headers.CacheControlHeaderValue.Private
  - System.Net.Http.Headers.CacheControlHeaderValue.PrivateHeaders
  - System.Net.Http.Headers.CacheControlHeaderValue.ProxyRevalidate
  - System.Net.Http.Headers.CacheControlHeaderValue.Public
  - System.Net.Http.Headers.CacheControlHeaderValue.SharedMaxAge
  - System.Net.Http.Headers.CacheControlHeaderValue.System#ICloneable#Clone
  - System.Net.Http.Headers.CacheControlHeaderValue.ToString
  - System.Net.Http.Headers.CacheControlHeaderValue.TryParse(System.String,System.Net.Http.Headers.CacheControlHeaderValue@)
  langs:
  - csharp
  name: CacheControlHeaderValue
  nameWithType: CacheControlHeaderValue
  fullName: System.Net.Http.Headers.CacheControlHeaderValue
  type: Class
  summary: "Cache-control 헤더의 값을 나타냅니다."
  syntax:
    content: 'public class CacheControlHeaderValue : ICloneable'
  inheritance:
  - System.Object
  implements:
  - System.ICloneable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.#ctor
  id: '#ctor'
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: CacheControlHeaderValue()
  nameWithType: CacheControlHeaderValue.CacheControlHeaderValue()
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.CacheControlHeaderValue()
  type: Constructor
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Net.Http.Headers.CacheControlHeaderValue&quot;> </xref> 클래스입니다."
  syntax:
    content: public CacheControlHeaderValue ();
    parameters: []
  overload: System.Net.Http.Headers.CacheControlHeaderValue.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: CacheControlHeaderValue.Equals(Object)
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.Equals(Object)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "확인 여부를 지정 된 <xref:System.Object>현재 같은지 <xref href=&quot;System.Net.Http.Headers.CacheControlHeaderValue&quot;> </xref> 개체입니다.</xref:System.Object>"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "현재 개체와 비교할 개체입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>하는 경우 지정 된 <xref:System.Object>현재 개체와 같지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Object>"
  overload: System.Net.Http.Headers.CacheControlHeaderValue.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.Extensions
  id: Extensions
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: Extensions
  nameWithType: CacheControlHeaderValue.Extensions
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.Extensions
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "토큰 캐시 확장을 선택적으로 각 할당 값."
  remarks: "이 속성은 HTTP 요청 또는 HTTP 응답에는 캐시 제어 헤더 필드에 &quot;캐시 확장&quot; 지시문을 나타냅니다."
  syntax:
    content: public System.Collections.Generic.ICollection<System.Net.Http.Headers.NameValueHeaderValue> Extensions { get; }
    return:
      type: System.Collections.Generic.ICollection{System.Net.Http.Headers.NameValueHeaderValue}
      description: "각 선택적 할당 된 값을 가진 토큰을 캐시 확장의 컬렉션입니다."
  overload: System.Net.Http.Headers.CacheControlHeaderValue.Extensions*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.GetHashCode
  id: GetHashCode
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: CacheControlHeaderValue.GetHashCode()
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.GetHashCode()
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "에 대 한 해시 함수 역할을 한 <xref href=&quot;System.Net.Http.Headers.CacheControlHeaderValue&quot;> </xref> 개체입니다."
  remarks: "해시 코드에는 같음 테스트 하는 동안 개체를 식별 하는 데 사용 되는 숫자 값입니다. 컬렉션의 개체에 대 한 인덱스도는 사용할 수 있습니다.       GetHashCode 메서드는 해시 알고리즘 및 해시 테이블과 같은 데이터 구조에 사용 하기에 적합 합니다."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "현재 개체에 대 한 해시 코드입니다."
  overload: System.Net.Http.Headers.CacheControlHeaderValue.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.MaxAge
  id: MaxAge
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: MaxAge
  nameWithType: CacheControlHeaderValue.MaxAge
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.MaxAge
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "HTTP 클라이언트 응답을 수락 하는 시간 (초)에 지정 된 최대 기간입니다."
  remarks: "이 속성은 HTTP 요청 또는 HTTP 응답에는 캐시 제어 헤더 필드에서 &quot;최대 처리 기간&quot; 지시문을 나타냅니다.       하지 않는 한는 <xref:System.Net.Http.Headers.CacheControlHeaderValue.MaxStale%2A>에서도 속성이 설정, 클라이언트 유효 하지 않은 응답을 수락 하 려 하지 않음.</xref:System.Net.Http.Headers.CacheControlHeaderValue.MaxStale%2A>"
  syntax:
    content: public Nullable<TimeSpan> MaxAge { get; set; }
    return:
      type: System.Nullable{System.TimeSpan}
      description: "시간 (초)입니다."
  overload: System.Net.Http.Headers.CacheControlHeaderValue.MaxAge*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.MaxStale
  id: MaxStale
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: MaxStale
  nameWithType: CacheControlHeaderValue.MaxStale
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.MaxStale
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "만료 시간 초과 응답을 수락 하는 HTTP 클라이언트 인지 여부입니다."
  remarks: "이 속성은 &quot;최대 부실&quot; 지시문은 HTTP 요청에는 캐시 제어 헤더 필드에 있는 경우를 나타냅니다."
  syntax:
    content: public bool MaxStale { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>HTTP 클라이언트에서 응답을 수락 하려는 경우; 만료 시간을 초과 했습니다입니다. 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Net.Http.Headers.CacheControlHeaderValue.MaxStale*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.MaxStaleLimit
  id: MaxStaleLimit
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: MaxStaleLimit
  nameWithType: CacheControlHeaderValue.MaxStaleLimit
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.MaxStaleLimit
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "최대 시간을 초 단위로 HTTP 클라이언트는 만료 시간 초과 응답을 허용 합니다."
  remarks: "이 속성은 &quot;최대 부실&quot; 지시문에는 HTTP 요청에는 캐시 제어 헤더 필드에 할당 된 값을 나타냅니다.       MaxStaleLimit 속성은&0;이 아닌 값에 할당 한 경우 클라이언트는 지정된 된 수 초 이내로 만료 시간을 초과 했습니다 하는 응답을 허용 합니다. 값&0;은 MaxStaleLimit 속성에 할당 하는 경우 클라이언트는 모든 연령의 유효 하지 않은 응답을 허용 합니다."
  syntax:
    content: public Nullable<TimeSpan> MaxStaleLimit { get; set; }
    return:
      type: System.Nullable{System.TimeSpan}
      description: "시간 (초)입니다."
  overload: System.Net.Http.Headers.CacheControlHeaderValue.MaxStaleLimit*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.MinFresh
  id: MinFresh
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: MinFresh
  nameWithType: CacheControlHeaderValue.MinFresh
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.MinFresh
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "새로 고침 수명 (초)를 응답을 수락 하는 HTTP 클라이언트입니다."
  remarks: "이 속성은 HTTP 요청에 대 한 캐시 컨트롤 헤더 필드에 &quot;min 새로&quot; 지시문을 나타냅니다.       속성은 HTTP 클라이언트 freshness 수명이 더 보다 작은지 freshness 수명은 시간 (초)에 지정 된 크기가 현재 더하기 나이 응답을 수락 하는 것을 나타냅니다. 클라이언트는 응답을 계속 됩니다에 대 한 새로운 적어도 현재 보존 기간 및 새로 고침 수명 하려고 합니다."
  syntax:
    content: public Nullable<TimeSpan> MinFresh { get; set; }
    return:
      type: System.Nullable{System.TimeSpan}
      description: "시간 (초)입니다."
  overload: System.Net.Http.Headers.CacheControlHeaderValue.MinFresh*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.MustRevalidate
  id: MustRevalidate
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: MustRevalidate
  nameWithType: CacheControlHeaderValue.MustRevalidate
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.MustRevalidate
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "여부는 원본 서버 캐시 엔트리의 오래 되었을 때 사용 되는 모든 후속에 캐시 항목의 유효성 재검사가 필요 합니다."
  remarks: "이 속성은 HTTP 응답에는 캐시 제어 헤더 필드에 &quot;반드시 뒤 재검증&quot; 지시문을 나타냅니다."
  syntax:
    content: public bool MustRevalidate { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>항목 오래; 되었을 때 원본 서버에서 사용 되는 모든 후속 캐시 항목의 유효성 재검사를 요구 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Net.Http.Headers.CacheControlHeaderValue.MustRevalidate*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.NoCache
  id: NoCache
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: NoCache
  nameWithType: CacheControlHeaderValue.NoCache
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.NoCache
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "캐시 된 응답을 수락 하는 HTTP 클라이언트 인지 여부입니다."
  remarks: "이 속성은 HTTP 요청 또는 HTTP 응답에는 캐시 제어 헤더 필드에 &quot;캐시&quot; 지시문을 나타냅니다.       NoCache 속성이로 설정 된 경우 `true` 현재 HTTP 요청 메시지에 응용 프로그램 캐시 된 복사본이 요청 항목의 경우에 원본 서버 쪽 요청을 전달 해야 합니다."
  syntax:
    content: public bool NoCache { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>HTTP 클라이언트에서 캐시 된 응답이; 허용 하려는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Net.Http.Headers.CacheControlHeaderValue.NoCache*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.NoCacheHeaders
  id: NoCacheHeaders
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: NoCacheHeaders
  nameWithType: CacheControlHeaderValue.NoCacheHeaders
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.NoCacheHeaders
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "HTTP 응답에는 캐시 제어 헤더 필드에 &quot;캐시&quot; 지시문에는 fieldnames의 컬렉션입니다."
  remarks: "이 속성은 HTTP 응답에는 캐시 제어 헤더 필드에 &quot;캐시&quot; 지시문에는 fieldnames를 나타냅니다."
  syntax:
    content: public System.Collections.Generic.ICollection<string> NoCacheHeaders { get; }
    return:
      type: System.Collections.Generic.ICollection{System.String}
      description: "Fieldnames의 컬렉션입니다."
  overload: System.Net.Http.Headers.CacheControlHeaderValue.NoCacheHeaders*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.NoStore
  id: NoStore
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: NoStore
  nameWithType: CacheControlHeaderValue.NoStore
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.NoStore
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "여부 캐시 중 하나는 HTTP 요청 mressage의 일부 또는 모든 응답을 저장 하지 해야 합니다."
  remarks: "이 속성은 HTTP 요청 또는 HTTP 응답에는 캐시 제어 헤더 필드에서 &quot;store&quot; 지시문을 나타냅니다.       NoStore 속성의 목적은 실수로 릴리스 또는 중요 한 정보는 보존을 방지 하기 위해입니다. 이 속성에는 전체 메시지에 적용 되며 HTTP 요청 또는 응답에 전송 될 수 있습니다."
  syntax:
    content: public bool NoStore { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>캐시 중 하나는 HTTP 요청 mressage의 일부 또는 모든 응답; 저장 하지 않아야 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Net.Http.Headers.CacheControlHeaderValue.NoStore*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.NoTransform
  id: NoTransform
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: NoTransform
  nameWithType: CacheControlHeaderValue.NoTransform
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.NoTransform
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "여부 캐시 또는 프록시 바뀌지 않아야 합니다. 엔터티 본문의 일부입니다."
  remarks: "이 속성은 HTTP 요청 또는 HTTP 응답에는 캐시 제어 헤더 필드에 &quot;변환&quot; 지시문을 나타냅니다.       NoTransform로 설정 되 면 `true`, 중간 캐시 또는 rpoxies 엔터티 본문의 임의의 양상 바뀌지 않아야 합니다. 중간 캐시와 프록시의 구현자를 특정 엔터티 본문의 미디어 유형으로 변환 하는 데 유용 발견 했습니다. 불투명 프록시 수, 예를 들어, 캐시 공간을 절약 하기 위해 또는 느린 연결에서 트래픽의 양을 줄일 수 이미지 형식 간의 변환 됩니다. 그러나 이러한 변환을 엔터티 본문에 적용 되는 경우 의도 한 특정 종류의 응용 프로그램, operational 심각한 문제가 발생 합니다."
  syntax:
    content: public bool NoTransform { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>캐시 또는 프록시 엔터티 본문; 어떤 식으로든 변경 안 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Net.Http.Headers.CacheControlHeaderValue.NoTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.OnlyIfCached
  id: OnlyIfCached
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: OnlyIfCached
  nameWithType: CacheControlHeaderValue.OnlyIfCached
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.OnlyIfCached
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "여부 캐시 HTTP 요청의 다른 제약 조건과 일치 하는 캐시 된 항목을 사용 하 여 응답 하거나 504 (게이트웨이 시간 초과) 상태를 사용 하 여 응답 합니다."
  remarks: "이 속성은 HTTP 요청에 대 한 캐시 컨트롤 헤더 필드에 &quot;만 if-캐시 된&quot; 지시문을 나타냅니다."
  syntax:
    content: public bool OnlyIfCached { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>캐시 HTTP 요청의 다른 제약 조건과 일치 하는 캐시 된 항목을 사용 하 여 응답 하거나; 504 (게이트웨이 시간 초과) 상태로 응답 해야 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Net.Http.Headers.CacheControlHeaderValue.OnlyIfCached*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.Parse(System.String)
  id: Parse(System.String)
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: Parse(String)
  nameWithType: CacheControlHeaderValue.Parse(String)
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.Parse(String)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "문자열을 변환는 <xref href=&quot;System.Net.Http.Headers.CacheControlHeaderValue&quot;> </xref> 인스턴스."
  syntax:
    content: public static System.Net.Http.Headers.CacheControlHeaderValue Parse (string input);
    parameters:
    - id: input
      type: System.String
      description: "캐시 컨트롤 헤더 값 정보를 나타내는 문자열입니다."
    return:
      type: System.Net.Http.Headers.CacheControlHeaderValue
      description: "A <xref href=&quot;System.Net.Http.Headers.CacheControlHeaderValue&quot;> </xref> 인스턴스."
  overload: System.Net.Http.Headers.CacheControlHeaderValue.Parse*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>input</code>이 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 참조 합니다."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "<code>input</code>유효한 캐시 컨트롤 헤더 값 정보가 않습니다."
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.Private
  id: Private
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: Private
  nameWithType: CacheControlHeaderValue.Private
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.Private
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "HTTP 응답 메시지의 전체 또는 일부는 한 명의 사용자를 위한 및 하지 않아야 하는지 여부를 공유 캐시에서 캐시할 수 있습니다."
  remarks: "이 속성은 HTTP 응답에는 캐시 제어 헤더 필드의 &quot;private&quot; 지시문을 나타냅니다."
  syntax:
    content: public bool Private { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>HTTP 응답 메시지는 한 명의 사용자를 위한 공유 캐시;에서 캐시 되지 않아야 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Net.Http.Headers.CacheControlHeaderValue.Private*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.PrivateHeaders
  id: PrivateHeaders
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: PrivateHeaders
  nameWithType: CacheControlHeaderValue.PrivateHeaders
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.PrivateHeaders
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "HTTP 응답에는 캐시 제어 헤더 필드는 &quot;private&quot; 지시문에 컬렉션 fieldnames 합니다."
  remarks: "이 속성은 HTTP 응답에는 캐시 제어 헤더 필드는 &quot;private&quot; 지시문에는 fieldnames를 나타냅니다."
  syntax:
    content: public System.Collections.Generic.ICollection<string> PrivateHeaders { get; }
    return:
      type: System.Collections.Generic.ICollection{System.String}
      description: "Fieldnames의 컬렉션입니다."
  overload: System.Net.Http.Headers.CacheControlHeaderValue.PrivateHeaders*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.ProxyRevalidate
  id: ProxyRevalidate
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: ProxyRevalidate
  nameWithType: CacheControlHeaderValue.ProxyRevalidate
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.ProxyRevalidate
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "여부는 원본 서버 캐시 엔트리의 공유 사용자 에이전트 캐시에 대 한 오래 되었을 때 사용 되는 모든 후속에 캐시 항목의 유효성 재검사가 필요 합니다."
  remarks: "이 속성은 HTTP 응답에는 캐시 제어 헤더 필드에는 &quot;프록시 뒤 재검증&quot; 지시문을 나타냅니다.       이 속성은 공유 되지 않는 사용자 에이전트 캐시에 영향을 주지 않습니다."
  syntax:
    content: public bool ProxyRevalidate { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>항목 공유 사용자 에이전트 캐시;에 대 한 오래 되었을 때 원본 서버에서 사용 되는 모든 후속 캐시 항목의 유효성 재검사를 요구 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Net.Http.Headers.CacheControlHeaderValue.ProxyRevalidate*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.Public
  id: Public
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: Public
  nameWithType: CacheControlHeaderValue.Public
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.Public
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "여부는 일반적으로 것 캐시할 또는 비-공유 캐시 내 에서만 캐시할 수 있는 경우에 HTTP 응답에서 모든 캐시를 캐시할 수 있습니다."
  remarks: "이 속성은 HTTP 응답에는 캐시 제어 헤더 필드에서 &quot;public&quot; 지시문을 나타냅니다."
  syntax:
    content: public bool Public { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>공유 캐시는 일반적으로 것 캐시할 또는 내 에서만 이외에 캐시할 수 있는 경우에 모든 캐시에서 캐시 될 HTTP 응답 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Net.Http.Headers.CacheControlHeaderValue.Public*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.SharedMaxAge
  id: SharedMaxAge
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: SharedMaxAge
  nameWithType: CacheControlHeaderValue.SharedMaxAge
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.SharedMaxAge
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "공유 최대 보존 기간 (초)을 지정 된 HTTP 응답 하는 보다 우선 캐시 컨트롤 헤더 또는 공유 캐시에 대 한 Expires 헤더에서 &quot;최대 처리 기간&quot; 지시문 합니다."
  remarks: "이 속성은 HTTP 응답에는 캐시 제어 헤더 필드에 &quot;s 최대 기간&quot; 지시문을 나타냅니다."
  syntax:
    content: public Nullable<TimeSpan> SharedMaxAge { get; set; }
    return:
      type: System.Nullable{System.TimeSpan}
      description: "시간 (초)입니다."
  overload: System.Net.Http.Headers.CacheControlHeaderValue.SharedMaxAge*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.System#ICloneable#Clone
  id: System#ICloneable#Clone
  isEii: true
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: System.ICloneable.Clone()
  nameWithType: CacheControlHeaderValue.System.ICloneable.Clone()
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.System.ICloneable.Clone()
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "현재 복사본 인 새 개체를 만듭니다. <xref href=&quot;System.Net.Http.Headers.CacheControlHeaderValue&quot;> </xref> 인스턴스."
  syntax:
    content: object ICloneable.Clone ();
    parameters: []
    return:
      type: System.Object
      description: "현재 인스턴스의 복사본입니다."
  overload: System.Net.Http.Headers.CacheControlHeaderValue.System#ICloneable#Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.ToString
  id: ToString
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: ToString()
  nameWithType: CacheControlHeaderValue.ToString()
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.ToString()
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "현재를 나타내는 문자열을 반환 <xref href=&quot;System.Net.Http.Headers.CacheControlHeaderValue&quot;> </xref> 개체입니다."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "현재 개체를 나타내는 문자열입니다."
  overload: System.Net.Http.Headers.CacheControlHeaderValue.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.TryParse(System.String,System.Net.Http.Headers.CacheControlHeaderValue@)
  id: TryParse(System.String,System.Net.Http.Headers.CacheControlHeaderValue@)
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: TryParse(String,CacheControlHeaderValue)
  nameWithType: CacheControlHeaderValue.TryParse(String,CacheControlHeaderValue)
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.TryParse(String,CacheControlHeaderValue)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "문자열이 올바른지 여부를 결정 <xref href=&quot;System.Net.Http.Headers.CacheControlHeaderValue&quot;> </xref> 정보입니다."
  syntax:
    content: public static bool TryParse (string input, out System.Net.Http.Headers.CacheControlHeaderValue parsedValue);
    parameters:
    - id: input
      type: System.String
      description: "유효성을 검사할 문자열입니다."
    - id: parsedValue
      type: System.Net.Http.Headers.CacheControlHeaderValue
      description: "<xref href=&quot;System.Net.Http.Headers.CacheControlHeaderValue&quot;> </xref> 문자열의 버전입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>input</code> is valid <xref href=&quot;System.Net.Http.Headers.CacheControlHeaderValue&quot;></xref> information; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Net.Http.Headers.CacheControlHeaderValue.TryParse*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.FormatException
  isExternal: true
  name: System.FormatException
- uid: System.Net.Http.Headers.CacheControlHeaderValue.#ctor
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: CacheControlHeaderValue()
  nameWithType: CacheControlHeaderValue.CacheControlHeaderValue()
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.CacheControlHeaderValue()
- uid: System.Net.Http.Headers.CacheControlHeaderValue.Equals(System.Object)
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: Equals(Object)
  nameWithType: CacheControlHeaderValue.Equals(Object)
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.Http.Headers.CacheControlHeaderValue.Extensions
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: Extensions
  nameWithType: CacheControlHeaderValue.Extensions
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.Extensions
- uid: System.Collections.Generic.ICollection{System.Net.Http.Headers.NameValueHeaderValue}
  parent: System.Collections.Generic
  isExternal: true
  name: ICollection<NameValueHeaderValue>
  nameWithType: ICollection<NameValueHeaderValue>
  fullName: System.Collections.Generic.ICollection<System.Net.Http.Headers.NameValueHeaderValue>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection<System.Net.Http.Headers.NameValueHeaderValue>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.Http.Headers.NameValueHeaderValue
    name: NameValueHeaderValue
    nameWithType: NameValueHeaderValue
    fullName: NameValueHeaderValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.Http.Headers.CacheControlHeaderValue.GetHashCode
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: GetHashCode()
  nameWithType: CacheControlHeaderValue.GetHashCode()
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.Http.Headers.CacheControlHeaderValue.MaxAge
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: MaxAge
  nameWithType: CacheControlHeaderValue.MaxAge
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.MaxAge
- uid: System.Nullable{System.TimeSpan}
  parent: System
  isExternal: true
  name: Nullable<TimeSpan>
  nameWithType: Nullable<TimeSpan>
  fullName: System.Nullable<System.TimeSpan>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.TimeSpan>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: TimeSpan
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.Http.Headers.CacheControlHeaderValue.MaxStale
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: MaxStale
  nameWithType: CacheControlHeaderValue.MaxStale
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.MaxStale
- uid: System.Net.Http.Headers.CacheControlHeaderValue.MaxStaleLimit
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: MaxStaleLimit
  nameWithType: CacheControlHeaderValue.MaxStaleLimit
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.MaxStaleLimit
- uid: System.Net.Http.Headers.CacheControlHeaderValue.MinFresh
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: MinFresh
  nameWithType: CacheControlHeaderValue.MinFresh
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.MinFresh
- uid: System.Net.Http.Headers.CacheControlHeaderValue.MustRevalidate
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: MustRevalidate
  nameWithType: CacheControlHeaderValue.MustRevalidate
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.MustRevalidate
- uid: System.Net.Http.Headers.CacheControlHeaderValue.NoCache
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: NoCache
  nameWithType: CacheControlHeaderValue.NoCache
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.NoCache
- uid: System.Net.Http.Headers.CacheControlHeaderValue.NoCacheHeaders
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: NoCacheHeaders
  nameWithType: CacheControlHeaderValue.NoCacheHeaders
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.NoCacheHeaders
- uid: System.Collections.Generic.ICollection{System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: ICollection<String>
  nameWithType: ICollection<String>
  fullName: System.Collections.Generic.ICollection<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.Http.Headers.CacheControlHeaderValue.NoStore
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: NoStore
  nameWithType: CacheControlHeaderValue.NoStore
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.NoStore
- uid: System.Net.Http.Headers.CacheControlHeaderValue.NoTransform
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: NoTransform
  nameWithType: CacheControlHeaderValue.NoTransform
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.NoTransform
- uid: System.Net.Http.Headers.CacheControlHeaderValue.OnlyIfCached
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: OnlyIfCached
  nameWithType: CacheControlHeaderValue.OnlyIfCached
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.OnlyIfCached
- uid: System.Net.Http.Headers.CacheControlHeaderValue.Parse(System.String)
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: Parse(String)
  nameWithType: CacheControlHeaderValue.Parse(String)
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.Parse(String)
- uid: System.Net.Http.Headers.CacheControlHeaderValue
  parent: System.Net.Http.Headers
  isExternal: false
  name: CacheControlHeaderValue
  nameWithType: CacheControlHeaderValue
  fullName: System.Net.Http.Headers.CacheControlHeaderValue
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.Http.Headers.CacheControlHeaderValue.Private
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: Private
  nameWithType: CacheControlHeaderValue.Private
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.Private
- uid: System.Net.Http.Headers.CacheControlHeaderValue.PrivateHeaders
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: PrivateHeaders
  nameWithType: CacheControlHeaderValue.PrivateHeaders
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.PrivateHeaders
- uid: System.Net.Http.Headers.CacheControlHeaderValue.ProxyRevalidate
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: ProxyRevalidate
  nameWithType: CacheControlHeaderValue.ProxyRevalidate
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.ProxyRevalidate
- uid: System.Net.Http.Headers.CacheControlHeaderValue.Public
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: Public
  nameWithType: CacheControlHeaderValue.Public
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.Public
- uid: System.Net.Http.Headers.CacheControlHeaderValue.SharedMaxAge
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: SharedMaxAge
  nameWithType: CacheControlHeaderValue.SharedMaxAge
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.SharedMaxAge
- uid: System.Net.Http.Headers.CacheControlHeaderValue.System#ICloneable#Clone
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: System.ICloneable.Clone()
  nameWithType: CacheControlHeaderValue.System.ICloneable.Clone()
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.System.ICloneable.Clone()
- uid: System.Net.Http.Headers.CacheControlHeaderValue.ToString
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: ToString()
  nameWithType: CacheControlHeaderValue.ToString()
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.ToString()
- uid: System.Net.Http.Headers.CacheControlHeaderValue.TryParse(System.String,System.Net.Http.Headers.CacheControlHeaderValue@)
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: TryParse(String,CacheControlHeaderValue)
  nameWithType: CacheControlHeaderValue.TryParse(String,CacheControlHeaderValue)
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.TryParse(String,CacheControlHeaderValue)
- uid: System.Net.Http.Headers.CacheControlHeaderValue.#ctor*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: CacheControlHeaderValue
  nameWithType: CacheControlHeaderValue.CacheControlHeaderValue
- uid: System.Net.Http.Headers.CacheControlHeaderValue.Equals*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: Equals
  nameWithType: CacheControlHeaderValue.Equals
- uid: System.Net.Http.Headers.CacheControlHeaderValue.Extensions*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: Extensions
  nameWithType: CacheControlHeaderValue.Extensions
- uid: System.Net.Http.Headers.CacheControlHeaderValue.GetHashCode*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: GetHashCode
  nameWithType: CacheControlHeaderValue.GetHashCode
- uid: System.Net.Http.Headers.CacheControlHeaderValue.MaxAge*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: MaxAge
  nameWithType: CacheControlHeaderValue.MaxAge
- uid: System.Net.Http.Headers.CacheControlHeaderValue.MaxStale*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: MaxStale
  nameWithType: CacheControlHeaderValue.MaxStale
- uid: System.Net.Http.Headers.CacheControlHeaderValue.MaxStaleLimit*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: MaxStaleLimit
  nameWithType: CacheControlHeaderValue.MaxStaleLimit
- uid: System.Net.Http.Headers.CacheControlHeaderValue.MinFresh*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: MinFresh
  nameWithType: CacheControlHeaderValue.MinFresh
- uid: System.Net.Http.Headers.CacheControlHeaderValue.MustRevalidate*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: MustRevalidate
  nameWithType: CacheControlHeaderValue.MustRevalidate
- uid: System.Net.Http.Headers.CacheControlHeaderValue.NoCache*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: NoCache
  nameWithType: CacheControlHeaderValue.NoCache
- uid: System.Net.Http.Headers.CacheControlHeaderValue.NoCacheHeaders*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: NoCacheHeaders
  nameWithType: CacheControlHeaderValue.NoCacheHeaders
- uid: System.Net.Http.Headers.CacheControlHeaderValue.NoStore*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: NoStore
  nameWithType: CacheControlHeaderValue.NoStore
- uid: System.Net.Http.Headers.CacheControlHeaderValue.NoTransform*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: NoTransform
  nameWithType: CacheControlHeaderValue.NoTransform
- uid: System.Net.Http.Headers.CacheControlHeaderValue.OnlyIfCached*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: OnlyIfCached
  nameWithType: CacheControlHeaderValue.OnlyIfCached
- uid: System.Net.Http.Headers.CacheControlHeaderValue.Parse*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: Parse
  nameWithType: CacheControlHeaderValue.Parse
- uid: System.Net.Http.Headers.CacheControlHeaderValue.Private*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: Private
  nameWithType: CacheControlHeaderValue.Private
- uid: System.Net.Http.Headers.CacheControlHeaderValue.PrivateHeaders*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: PrivateHeaders
  nameWithType: CacheControlHeaderValue.PrivateHeaders
- uid: System.Net.Http.Headers.CacheControlHeaderValue.ProxyRevalidate*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: ProxyRevalidate
  nameWithType: CacheControlHeaderValue.ProxyRevalidate
- uid: System.Net.Http.Headers.CacheControlHeaderValue.Public*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: Public
  nameWithType: CacheControlHeaderValue.Public
- uid: System.Net.Http.Headers.CacheControlHeaderValue.SharedMaxAge*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: SharedMaxAge
  nameWithType: CacheControlHeaderValue.SharedMaxAge
- uid: System.Net.Http.Headers.CacheControlHeaderValue.System#ICloneable#Clone*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: System.ICloneable.Clone
  nameWithType: CacheControlHeaderValue.System.ICloneable.Clone
- uid: System.Net.Http.Headers.CacheControlHeaderValue.ToString*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: ToString
  nameWithType: CacheControlHeaderValue.ToString
- uid: System.Net.Http.Headers.CacheControlHeaderValue.TryParse*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: TryParse
  nameWithType: CacheControlHeaderValue.TryParse
