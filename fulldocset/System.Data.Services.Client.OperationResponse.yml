### YamlMime:ManagedReference
items:
- uid: System.Data.Services.Client.OperationResponse
  id: OperationResponse
  children:
  - System.Data.Services.Client.OperationResponse.Error
  - System.Data.Services.Client.OperationResponse.Headers
  - System.Data.Services.Client.OperationResponse.StatusCode
  langs:
  - csharp
  name: OperationResponse
  nameWithType: OperationResponse
  fullName: System.Data.Services.Client.OperationResponse
  type: Class
  summary: "추상 클래스는 단일 쿼리 응답을 나타내는 또는 만들기, 업데이트 또는 삭제 작업"
  remarks: "`OperationResponse` 클래스는 두 개의 응답 유형 간에 공유 되는 정보를 저장 하는 데 사용 되지만이 클래스는 개발자가 직접 사용할 수 없습니다. 특정이 응답 개체를 캐스팅 하는 대신, <xref:System.Data.Services.Client.QueryResponse>또는 <xref:System.Data.Services.Client.ChangesetResponse>추가 작업별 데이터를 포함 하는 형식입니다.</xref:System.Data.Services.Client.ChangesetResponse> </xref:System.Data.Services.Client.QueryResponse>"
  syntax:
    content: public abstract class OperationResponse
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.Services.Client.OperationResponse.Error
  id: Error
  parent: System.Data.Services.Client.OperationResponse
  langs:
  - csharp
  name: Error
  nameWithType: OperationResponse.Error
  fullName: System.Data.Services.Client.OperationResponse.Error
  type: Property
  assemblies:
  - System.Data.Services.Client
  namespace: System.Data.Services.Client
  summary: "작업에서 throw 된 오류를 가져옵니다."
  remarks: "이 속성은 발견 된 오류가 없는 경우 null입니다."
  syntax:
    content: public Exception Error { get; set; }
    return:
      type: System.Exception
      description: "<xref:System.Exception>오류를 포함 하는 개체입니다.</xref:System.Exception>"
  overload: System.Data.Services.Client.OperationResponse.Error*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.Client.OperationResponse.Headers
  id: Headers
  parent: System.Data.Services.Client.OperationResponse
  langs:
  - csharp
  name: Headers
  nameWithType: OperationResponse.Headers
  fullName: System.Data.Services.Client.OperationResponse.Headers
  type: Property
  assemblies:
  - System.Data.Services.Client
  namespace: System.Data.Services.Client
  summary: "파생된 클래스에서 재정의 되 면 단일 작업에 연결 된 HTTP 응답 헤더를 포함 합니다."
  syntax:
    content: public System.Collections.Generic.IDictionary<string,string> Headers { get; }
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "<xref:System.Collections.IDictionary>헤더 및 값의 이름/값 쌍을 포함 하는 개체입니다.</xref:System.Collections.IDictionary>"
  overload: System.Data.Services.Client.OperationResponse.Headers*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.Client.OperationResponse.StatusCode
  id: StatusCode
  parent: System.Data.Services.Client.OperationResponse
  langs:
  - csharp
  name: StatusCode
  nameWithType: OperationResponse.StatusCode
  fullName: System.Data.Services.Client.OperationResponse.StatusCode
  type: Property
  assemblies:
  - System.Data.Services.Client
  namespace: System.Data.Services.Client
  summary: "파생된 클래스에서 재정의 되 면 단일 작업에 연결 된 HTTP 응답 코드를 설정 하거나 가져옵니다."
  syntax:
    content: public int StatusCode { get; }
    return:
      type: System.Int32
      description: "응답 코드를 포함 하는 정수 값입니다."
  overload: System.Data.Services.Client.OperationResponse.StatusCode*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Data.Services.Client.OperationResponse.Error
  parent: System.Data.Services.Client.OperationResponse
  isExternal: false
  name: Error
  nameWithType: OperationResponse.Error
  fullName: System.Data.Services.Client.OperationResponse.Error
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Data.Services.Client.OperationResponse.Headers
  parent: System.Data.Services.Client.OperationResponse
  isExternal: false
  name: Headers
  nameWithType: OperationResponse.Headers
  fullName: System.Data.Services.Client.OperationResponse.Headers
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,String>
  nameWithType: IDictionary<String,String>
  fullName: System.Collections.Generic.IDictionary<System.String,System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Services.Client.OperationResponse.StatusCode
  parent: System.Data.Services.Client.OperationResponse
  isExternal: false
  name: StatusCode
  nameWithType: OperationResponse.StatusCode
  fullName: System.Data.Services.Client.OperationResponse.StatusCode
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.Services.Client.OperationResponse.Error*
  parent: System.Data.Services.Client.OperationResponse
  isExternal: false
  name: Error
  nameWithType: OperationResponse.Error
- uid: System.Data.Services.Client.OperationResponse.Headers*
  parent: System.Data.Services.Client.OperationResponse
  isExternal: false
  name: Headers
  nameWithType: OperationResponse.Headers
- uid: System.Data.Services.Client.OperationResponse.StatusCode*
  parent: System.Data.Services.Client.OperationResponse
  isExternal: false
  name: StatusCode
  nameWithType: OperationResponse.StatusCode
