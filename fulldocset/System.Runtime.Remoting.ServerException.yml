### YamlMime:ManagedReference
items:
- uid: System.Runtime.Remoting.ServerException
  id: ServerException
  children:
  - System.Runtime.Remoting.ServerException.#ctor
  - System.Runtime.Remoting.ServerException.#ctor(System.String)
  - System.Runtime.Remoting.ServerException.#ctor(System.String,System.Exception)
  langs:
  - csharp
  name: ServerException
  nameWithType: ServerException
  fullName: System.Runtime.Remoting.ServerException
  type: Class
  summary: "오류를 알리기 위해 클라이언트에 예외를 throw 할 수 없는.NET Framework 이외의 응용 프로그램에 클라이언트가 연결할 때 throw 되는 예외입니다."
  remarks: "ServerException은 0x8013150E 값이 있는 HRESULT COR_E_SERVER를 사용 합니다.       기본값을 사용 하 여 ServerException <xref:System.Object.Equals%2A>구현을 참조 일치를 지원 합니다.</xref:System.Object.Equals%2A>       ServerException의 인스턴스에 대 한 초기 속성 값 목록은 ServerException 생성자를 참조 합니다."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class ServerException : SystemException
  inheritance:
  - System.Exception
  - System.SystemException
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.Remoting.ServerException.#ctor
  id: '#ctor'
  parent: System.Runtime.Remoting.ServerException
  langs:
  - csharp
  name: ServerException()
  nameWithType: ServerException.ServerException()
  fullName: System.Runtime.Remoting.ServerException.ServerException()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Runtime.Remoting.ServerException&quot;> </xref> 클래스 기본 속성을 사용 합니다."
  remarks: "<xref:System.Runtime.Remoting.ServerException><xref:System.SystemException>클래스</xref:System.SystemException> 에서 상속</xref:System.Runtime.Remoting.ServerException> 다음 표에서 <xref:System.Runtime.Remoting.ServerException>클래스의 인스턴스에 대 한 초기 속성 값을 보여 줍니다: | 속성 | 값 |   |--------------|-----------|   | <xref:System.Exception.InnerException%2A>| `null`|   | <xref:System.Exception.Message%2A>| 빈 문자열 (&quot;&quot;) |</xref:System.Exception.Message%2A> </xref:System.Exception.InnerException%2A> </xref:System.Runtime.Remoting.ServerException>"
  syntax:
    content: public ServerException ();
    parameters: []
  overload: System.Runtime.Remoting.ServerException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.ServerException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Runtime.Remoting.ServerException
  langs:
  - csharp
  name: ServerException(String)
  nameWithType: ServerException.ServerException(String)
  fullName: System.Runtime.Remoting.ServerException.ServerException(String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Runtime.Remoting.ServerException&quot;> </xref> 지정 된 메시지 클래스입니다."
  remarks: "<xref:System.Runtime.Remoting.ServerException><xref:System.SystemException>클래스</xref:System.SystemException> 에서 상속</xref:System.Runtime.Remoting.ServerException> 다음 표에서 <xref:System.Runtime.Remoting.ServerException>클래스의 인스턴스에 대 한 초기 속성 값을 보여 줍니다: | 속성 형식 | 조건 |   |-------------------|---------------|   | <xref:System.Exception.InnerException%2A>| `null`|   | <xref:System.Exception.Message%2A>| `message` 문자열 |</xref:System.Exception.Message%2A> </xref:System.Exception.InnerException%2A> </xref:System.Runtime.Remoting.ServerException>"
  syntax:
    content: public ServerException (string message);
    parameters:
    - id: message
      type: System.String
      description: "예외를 설명 하는 메시지"
  overload: System.Runtime.Remoting.ServerException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.ServerException.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: System.Runtime.Remoting.ServerException
  langs:
  - csharp
  name: ServerException(String,Exception)
  nameWithType: ServerException.ServerException(String,Exception)
  fullName: System.Runtime.Remoting.ServerException.ServerException(String,Exception)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Runtime.Remoting.ServerException&quot;> </xref> 지정된 된 오류 메시지와 해당 예외의 원인인 내부 예외에 대 한 참조를 사용 하 여 클래스입니다."
  remarks: "이전 예외의 직접적인 결과에 이전 예외에 대 한 참조가 들어 있어야 throw 되는 예외는 <xref:System.Exception.InnerException%2A>속성.</xref:System.Exception.InnerException%2A> <xref:System.Exception.InnerException%2A>속성은 생성자에 전달 되는 동일한 값을 반환 하거나 `null` 경우는 <xref:System.Exception.InnerException%2A>생성자에 내부 예외 값을 제공 하지 않는.</xref:System.Exception.InnerException%2A> </xref:System.Exception.InnerException%2A>       다음 표에서 <xref:System.Runtime.Remoting.ServerException>클래스의 인스턴스에 대 한 초기 속성 값을 보여 줍니다: | 속성 | 값 |   |--------------|-----------|   | <xref:System.Exception.InnerException%2A>| 내부 예외 참조 |   | <xref:System.Exception.Message%2A>| 오류 메시지 문자열 |</xref:System.Exception.Message%2A> </xref:System.Exception.InnerException%2A> </xref:System.Runtime.Remoting.ServerException>"
  syntax:
    content: public ServerException (string message, Exception InnerException);
    parameters:
    - id: message
      type: System.String
      description: "예외에 대 한 이유를 설명 하는 오류 메시지입니다."
    - id: InnerException
      type: System.Exception
      description: "현재 예외의 원인인 예외입니다. 경우는 `InnerException` 매개 변수가 않습니다 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>에서 현재 예외가 발생 한 <xref uid=&quot;langword_csharp_catch&quot; name=&quot;catch&quot; href=&quot;&quot;> </xref> 내부 예외를 처리 하는 블록입니다."
  overload: System.Runtime.Remoting.ServerException.#ctor*
  exceptions: []
  platform:
  - net462
references:
- uid: System.SystemException
  isExternal: false
  name: System.SystemException
- uid: System.Runtime.Remoting.ServerException.#ctor
  parent: System.Runtime.Remoting.ServerException
  isExternal: false
  name: ServerException()
  nameWithType: ServerException.ServerException()
  fullName: System.Runtime.Remoting.ServerException.ServerException()
- uid: System.Runtime.Remoting.ServerException.#ctor(System.String)
  parent: System.Runtime.Remoting.ServerException
  isExternal: false
  name: ServerException(String)
  nameWithType: ServerException.ServerException(String)
  fullName: System.Runtime.Remoting.ServerException.ServerException(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.Remoting.ServerException.#ctor(System.String,System.Exception)
  parent: System.Runtime.Remoting.ServerException
  isExternal: false
  name: ServerException(String,Exception)
  nameWithType: ServerException.ServerException(String,Exception)
  fullName: System.Runtime.Remoting.ServerException.ServerException(String,Exception)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Runtime.Remoting.ServerException.#ctor*
  parent: System.Runtime.Remoting.ServerException
  isExternal: false
  name: ServerException
  nameWithType: ServerException.ServerException
