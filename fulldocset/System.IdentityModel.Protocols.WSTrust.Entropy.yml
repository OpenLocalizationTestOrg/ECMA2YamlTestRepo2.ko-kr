### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Protocols.WSTrust.Entropy
  id: Entropy
  children:
  - System.IdentityModel.Protocols.WSTrust.Entropy.#ctor(System.Byte[])
  - System.IdentityModel.Protocols.WSTrust.Entropy.#ctor(System.IdentityModel.Protocols.WSTrust.ProtectedKey)
  - System.IdentityModel.Protocols.WSTrust.Entropy.#ctor(System.Int32)
  - System.IdentityModel.Protocols.WSTrust.Entropy.#ctor(System.Byte[],System.IdentityModel.Tokens.EncryptingCredentials)
  langs:
  - csharp
  name: Entropy
  nameWithType: Entropy
  fullName: System.IdentityModel.Protocols.WSTrust.Entropy
  type: Class
  summary: "토큰 요청 메시지와 토큰 응답 메시지 모두에 사용 된 엔트로피를 나타냅니다."
  remarks: "WS-트러스트 정의한 wst:Entropy 요소 내용을 나타냅니다."
  syntax:
    content: 'public class Entropy : System.IdentityModel.Protocols.WSTrust.ProtectedKey'
  inheritance:
  - System.Object
  - System.IdentityModel.Protocols.WSTrust.ProtectedKey
  implements: []
  inheritedMembers:
  - System.IdentityModel.Protocols.WSTrust.ProtectedKey.GetKeyBytes
  - System.IdentityModel.Protocols.WSTrust.ProtectedKey.WrappingCredentials
  platform:
  - net462
- uid: System.IdentityModel.Protocols.WSTrust.Entropy.#ctor(System.Byte[])
  id: '#ctor(System.Byte[])'
  parent: System.IdentityModel.Protocols.WSTrust.Entropy
  langs:
  - csharp
  name: Entropy(Byte[])
  nameWithType: Entropy.Entropy(Byte[])
  fullName: System.IdentityModel.Protocols.WSTrust.Entropy.Entropy(Byte[])
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Protocols.WSTrust
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.IdentityModel.Protocols.WSTrust.Entropy&quot;> </xref> 비밀 이진 형식으로 엔트로피를 보내기 위한 클래스입니다."
  syntax:
    content: public Entropy (byte[] secret);
    parameters:
    - id: secret
      type: System.Byte[]
      description: "키 자료를 포함 하는 바이트 배열입니다."
  overload: System.IdentityModel.Protocols.WSTrust.Entropy.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Protocols.WSTrust.Entropy.#ctor(System.IdentityModel.Protocols.WSTrust.ProtectedKey)
  id: '#ctor(System.IdentityModel.Protocols.WSTrust.ProtectedKey)'
  parent: System.IdentityModel.Protocols.WSTrust.Entropy
  langs:
  - csharp
  name: Entropy(ProtectedKey)
  nameWithType: Entropy.Entropy(ProtectedKey)
  fullName: System.IdentityModel.Protocols.WSTrust.Entropy.Entropy(ProtectedKey)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Protocols.WSTrust
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.IdentityModel.Protocols.WSTrust.Entropy&quot;> </xref> 지정된 된 키를 보호 합니다."
  syntax:
    content: public Entropy (System.IdentityModel.Protocols.WSTrust.ProtectedKey protectedKey);
    parameters:
    - id: protectedKey
      type: System.IdentityModel.Protocols.WSTrust.ProtectedKey
      description: "A <xref href=&quot;System.IdentityModel.Protocols.WSTrust.ProtectedKey&quot;> </xref> 이진 암호가 될 수 있는 보호 된 키 또는 암호화 된 키를 나타내는입니다."
  overload: System.IdentityModel.Protocols.WSTrust.Entropy.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Protocols.WSTrust.Entropy.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.IdentityModel.Protocols.WSTrust.Entropy
  langs:
  - csharp
  name: Entropy(Int32)
  nameWithType: Entropy.Entropy(Int32)
  fullName: System.IdentityModel.Protocols.WSTrust.Entropy.Entropy(Int32)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Protocols.WSTrust
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.IdentityModel.Protocols.WSTrust.Entropy&quot;> </xref> 바이트를 임의로 생성 된 클래스입니다."
  syntax:
    content: public Entropy (int entropySizeInBits);
    parameters:
    - id: entropySizeInBits
      type: System.Int32
      description: "Entropy 내 키 자료의 entropySizeInBits 합니다."
  overload: System.IdentityModel.Protocols.WSTrust.Entropy.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Protocols.WSTrust.Entropy.#ctor(System.Byte[],System.IdentityModel.Tokens.EncryptingCredentials)
  id: '#ctor(System.Byte[],System.IdentityModel.Tokens.EncryptingCredentials)'
  parent: System.IdentityModel.Protocols.WSTrust.Entropy
  langs:
  - csharp
  name: Entropy(Byte[],EncryptingCredentials)
  nameWithType: Entropy.Entropy(Byte[],EncryptingCredentials)
  fullName: System.IdentityModel.Protocols.WSTrust.Entropy.Entropy(Byte[],EncryptingCredentials)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Protocols.WSTrust
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.IdentityModel.Protocols.WSTrust.Entropy&quot;> </xref> 키 암호화 된 형태로 표시 엔트로피를 보내기 위한 클래스입니다."
  syntax:
    content: public Entropy (byte[] secret, System.IdentityModel.Tokens.EncryptingCredentials wrappingCredentials);
    parameters:
    - id: secret
      type: System.Byte[]
      description: "키 자료를 포함 하는 바이트 배열입니다."
    - id: wrappingCredentials
      type: System.IdentityModel.Tokens.EncryptingCredentials
      description: "<xref href=&quot;System.IdentityModel.Tokens.EncryptingCredentials&quot;> </xref> 키 자료를 암호화 하는 데 사용 되는 자격 증명을 나타내는입니다."
  overload: System.IdentityModel.Protocols.WSTrust.Entropy.#ctor*
  exceptions: []
  platform:
  - net462
references:
- uid: System.IdentityModel.Protocols.WSTrust.ProtectedKey
  isExternal: false
  name: System.IdentityModel.Protocols.WSTrust.ProtectedKey
- uid: System.IdentityModel.Protocols.WSTrust.Entropy.#ctor(System.Byte[])
  parent: System.IdentityModel.Protocols.WSTrust.Entropy
  isExternal: false
  name: Entropy(Byte[])
  nameWithType: Entropy.Entropy(Byte[])
  fullName: System.IdentityModel.Protocols.WSTrust.Entropy.Entropy(Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.IdentityModel.Protocols.WSTrust.Entropy.#ctor(System.IdentityModel.Protocols.WSTrust.ProtectedKey)
  parent: System.IdentityModel.Protocols.WSTrust.Entropy
  isExternal: false
  name: Entropy(ProtectedKey)
  nameWithType: Entropy.Entropy(ProtectedKey)
  fullName: System.IdentityModel.Protocols.WSTrust.Entropy.Entropy(ProtectedKey)
- uid: System.IdentityModel.Protocols.WSTrust.Entropy.#ctor(System.Int32)
  parent: System.IdentityModel.Protocols.WSTrust.Entropy
  isExternal: false
  name: Entropy(Int32)
  nameWithType: Entropy.Entropy(Int32)
  fullName: System.IdentityModel.Protocols.WSTrust.Entropy.Entropy(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IdentityModel.Protocols.WSTrust.Entropy.#ctor(System.Byte[],System.IdentityModel.Tokens.EncryptingCredentials)
  parent: System.IdentityModel.Protocols.WSTrust.Entropy
  isExternal: false
  name: Entropy(Byte[],EncryptingCredentials)
  nameWithType: Entropy.Entropy(Byte[],EncryptingCredentials)
  fullName: System.IdentityModel.Protocols.WSTrust.Entropy.Entropy(Byte[],EncryptingCredentials)
- uid: System.IdentityModel.Tokens.EncryptingCredentials
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: EncryptingCredentials
  nameWithType: EncryptingCredentials
  fullName: System.IdentityModel.Tokens.EncryptingCredentials
- uid: System.IdentityModel.Protocols.WSTrust.Entropy.#ctor*
  parent: System.IdentityModel.Protocols.WSTrust.Entropy
  isExternal: false
  name: Entropy
  nameWithType: Entropy.Entropy
