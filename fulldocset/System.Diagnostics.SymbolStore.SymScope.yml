### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.SymbolStore.SymScope
  id: SymScope
  children:
  - System.Diagnostics.SymbolStore.SymScope.#ctor(System.Diagnostics.SymbolStore.Private.ISymUnmanagedScope*)
  - System.Diagnostics.SymbolStore.SymScope.Dispose
  - System.Diagnostics.SymbolStore.SymScope.Dispose(System.Boolean)
  - System.Diagnostics.SymbolStore.SymScope.EndOffset
  - System.Diagnostics.SymbolStore.SymScope.Finalize
  - System.Diagnostics.SymbolStore.SymScope.GetChildren
  - System.Diagnostics.SymbolStore.SymScope.GetLocals
  - System.Diagnostics.SymbolStore.SymScope.GetNamespaces
  - System.Diagnostics.SymbolStore.SymScope.Method
  - System.Diagnostics.SymbolStore.SymScope.Parent
  - System.Diagnostics.SymbolStore.SymScope.StartOffset
  langs:
  - csharp
  name: SymScope
  nameWithType: SymScope
  fullName: System.Diagnostics.SymbolStore.SymScope
  type: Class
  summary: "내에서 어휘 범위를 나타냅니다 <xref href=&quot;System.Diagnostics.SymbolStore.SymMethod&quot;> </xref>시작에 대 한 액세스 및 오프셋으로 범위를 해당 부모 및 자식 범위를 종료 합니다."
  remarks: "또한 SymScope 클래스는 현재 범위 내에 정의 된 모든 로컬에 대 한 액세스를 제공 합니다."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class SymScope : System.Diagnostics.SymbolStore.SymScopeBase, IDisposable, System.Diagnostics.SymbolStore.ISymbolScope
  inheritance:
  - System.Object
  - System.Diagnostics.SymbolStore.SymScopeBase
  implements:
  - System.Diagnostics.SymbolStore.ISymbolScope
  - System.IDisposable
  inheritedMembers:
  - System.Diagnostics.SymbolStore.SymScopeBase.{dtor}
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymScope.#ctor(System.Diagnostics.SymbolStore.Private.ISymUnmanagedScope*)
  id: '#ctor(System.Diagnostics.SymbolStore.Private.ISymUnmanagedScope*)'
  parent: System.Diagnostics.SymbolStore.SymScope
  langs:
  - csharp
  name: SymScope(ISymUnmanagedScope*)
  nameWithType: SymScope.SymScope(ISymUnmanagedScope*)
  fullName: System.Diagnostics.SymbolStore.SymScope.SymScope(ISymUnmanagedScope*)
  type: Constructor
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  syntax:
    content: public SymScope (System.Diagnostics.SymbolStore.Private.ISymUnmanagedScope* pScope);
    parameters:
    - id: pScope
      type: System.Diagnostics.SymbolStore.Private.ISymUnmanagedScope*
      description: "추가할 수 있습니다."
  overload: System.Diagnostics.SymbolStore.SymScope.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymScope.Dispose
  id: Dispose
  parent: System.Diagnostics.SymbolStore.SymScope
  langs:
  - csharp
  name: Dispose()
  nameWithType: SymScope.Dispose()
  fullName: System.Diagnostics.SymbolStore.SymScope.Dispose()
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "현재 인스턴스에서 사용 하는 리소스를 해제는 <xref href=&quot;System.Diagnostics.SymbolStore.SymScope&quot;> </xref> 클래스입니다."
  syntax:
    content: public override sealed void Dispose ();
    parameters: []
  overload: System.Diagnostics.SymbolStore.SymScope.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymScope.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Diagnostics.SymbolStore.SymScope
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: SymScope.Dispose(Boolean)
  fullName: System.Diagnostics.SymbolStore.SymScope.Dispose(Boolean)
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "에 의해 호출 된 <> </> *> 및 <> </> *>의 현재 인스턴스에서 사용 되는 스레드와 관리 되지 않는 리소스를 해제 하는 메서드는 <xref href=&quot;System.Diagnostics.SymbolStore.SymScope&quot;> </xref> 클래스입니다."
  remarks: "공개적으로만이 메서드는 <xref:System.Diagnostics.SymbolStore.SymScope.Dispose%2A>및 <xref:System.Diagnostics.SymbolStore.SymScope.Finalize%2A>방식의이 메서드를 직접 호출 하지 않습니다.</xref:System.Diagnostics.SymbolStore.SymScope.Finalize%2A> </xref:System.Diagnostics.SymbolStore.SymScope.Dispose%2A>"
  syntax:
    content: protected virtual void Dispose (bool A_0);
    parameters:
    - id: A_0
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>관리 되는 관리 되지 않는 리소스만 해제 하려면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 만 관리 되지 않는 리소스를 해제 합니다."
  overload: System.Diagnostics.SymbolStore.SymScope.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymScope.EndOffset
  id: EndOffset
  parent: System.Diagnostics.SymbolStore.SymScope
  langs:
  - csharp
  name: EndOffset
  nameWithType: SymScope.EndOffset
  fullName: System.Diagnostics.SymbolStore.SymScope.EndOffset
  type: Property
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "현재 어휘 범위의 종료 오프셋을 가져옵니다."
  syntax:
    content: public virtual int EndOffset { get; }
    return:
      type: System.Int32
      description: "끝 Microsoft MSIL (intermediate language) 오프셋입니다. 현재 어휘 범위의 메서드 시작 부분부터 오프셋이입니다."
  overload: System.Diagnostics.SymbolStore.SymScope.EndOffset*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymScope.Finalize
  id: Finalize
  parent: System.Diagnostics.SymbolStore.SymScope
  langs:
  - csharp
  name: Finalize()
  nameWithType: SymScope.Finalize()
  fullName: System.Diagnostics.SymbolStore.SymScope.Finalize()
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "관리 되지 않는 리소스를 해제 하 고 기타 정리 작업 하기 전에 수행 된 <xref href=&quot;System.Diagnostics.SymbolStore.SymScope&quot;> </xref> 가비지 수집에서 회수 합니다."
  remarks: "이 메서드를 재정의 <xref:System.Object.Finalize%2A>.</xref:System.Object.Finalize%2A> 응용 프로그램 코드,이 메서드를 호출 하지 않아야 개체의 `Finalize` 메서드를 호출 하 여 가비지 수집기의 종료를 사용 하지 않도록 설정 된 경우가 아니면 자동으로 가비지 수집 중 호출 됩니다는 <xref:System.GC.SuppressFinalize%2A>메서드.</xref:System.GC.SuppressFinalize%2A>"
  syntax:
    content: ~SymScope ();
    parameters: []
  overload: System.Diagnostics.SymbolStore.SymScope.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymScope.GetChildren
  id: GetChildren
  parent: System.Diagnostics.SymbolStore.SymScope
  langs:
  - csharp
  name: GetChildren()
  nameWithType: SymScope.GetChildren()
  fullName: System.Diagnostics.SymbolStore.SymScope.GetChildren()
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "자식 현재 어휘 범위의 어휘 범위를 가져옵니다."
  syntax:
    content: public virtual System.Diagnostics.SymbolStore.ISymbolScope[] GetChildren ();
    parameters: []
    return:
      type: System.Diagnostics.SymbolStore.ISymbolScope[]
      description: "현재 어휘 범위에 포함 되는 어휘 범위입니다."
  overload: System.Diagnostics.SymbolStore.SymScope.GetChildren*
  exceptions:
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "메모리가 부족 하 여 요청을 충족할 수 있습니다."
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymScope.GetLocals
  id: GetLocals
  parent: System.Diagnostics.SymbolStore.SymScope
  langs:
  - csharp
  name: GetLocals()
  nameWithType: SymScope.GetLocals()
  fullName: System.Diagnostics.SymbolStore.SymScope.GetLocals()
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "현재 어휘 범위의 지역 변수를 가져옵니다."
  remarks: "지역 변수는 임의의 순서로 반환 됩니다. 지역 변수는 현재 범위 내 주소 변경 되 면 해당 변수가 포함 된 여러 번 각각 오프셋된 범위가 다른"
  syntax:
    content: public virtual System.Diagnostics.SymbolStore.ISymbolVariable[] GetLocals ();
    parameters: []
    return:
      type: System.Diagnostics.SymbolStore.ISymbolVariable[]
      description: "현재 어휘 범위의 지역 변수입니다."
  overload: System.Diagnostics.SymbolStore.SymScope.GetLocals*
  exceptions:
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "메모리가 부족 하 여 요청을 충족할 수 있습니다."
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymScope.GetNamespaces
  id: GetNamespaces
  parent: System.Diagnostics.SymbolStore.SymScope
  langs:
  - csharp
  name: GetNamespaces()
  nameWithType: SymScope.GetNamespaces()
  fullName: System.Diagnostics.SymbolStore.SymScope.GetNamespaces()
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "throw 한 <xref:System.NotSupportedException>모든 경우에에서.</xref:System.NotSupportedException>"
  syntax:
    content: public virtual System.Diagnostics.SymbolStore.ISymbolNamespace[] GetNamespaces ();
    parameters: []
    return:
      type: System.Diagnostics.SymbolStore.ISymbolNamespace[]
      description: "throw 한 <xref:System.NotSupportedException>모든 경우에에서.</xref:System.NotSupportedException>"
  overload: System.Diagnostics.SymbolStore.SymScope.GetNamespaces*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymScope.Method
  id: Method
  parent: System.Diagnostics.SymbolStore.SymScope
  langs:
  - csharp
  name: Method
  nameWithType: SymScope.Method
  fullName: System.Diagnostics.SymbolStore.SymScope.Method
  type: Property
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "현재 어휘 범위를 포함 하는 메서드를 가져옵니다."
  syntax:
    content: public virtual System.Diagnostics.SymbolStore.ISymbolMethod Method { get; }
    return:
      type: System.Diagnostics.SymbolStore.ISymbolMethod
      description: "현재 어휘 범위를 포함 하는 메서드."
  overload: System.Diagnostics.SymbolStore.SymScope.Method*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymScope.Parent
  id: Parent
  parent: System.Diagnostics.SymbolStore.SymScope
  langs:
  - csharp
  name: Parent
  nameWithType: SymScope.Parent
  fullName: System.Diagnostics.SymbolStore.SymScope.Parent
  type: Property
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "부모를 가져옵니다는 어휘 범위는 현재 범위입니다."
  syntax:
    content: public virtual System.Diagnostics.SymbolStore.ISymbolScope Parent { get; }
    return:
      type: System.Diagnostics.SymbolStore.ISymbolScope
      description: "현재 범위의 포함 어휘 범위입니다."
  overload: System.Diagnostics.SymbolStore.SymScope.Parent*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymScope.StartOffset
  id: StartOffset
  parent: System.Diagnostics.SymbolStore.SymScope
  langs:
  - csharp
  name: StartOffset
  nameWithType: SymScope.StartOffset
  fullName: System.Diagnostics.SymbolStore.SymScope.StartOffset
  type: Property
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "현재 어휘 범위의 시작 오프셋을 가져옵니다."
  syntax:
    content: public virtual int StartOffset { get; }
    return:
      type: System.Int32
      description: "시작 Microsoft MSIL (intermediate language) 오프셋입니다. 현재 어휘 범위의 메서드 시작 부분부터 오프셋이입니다."
  overload: System.Diagnostics.SymbolStore.SymScope.StartOffset*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Diagnostics.SymbolStore.SymScopeBase
  isExternal: false
  name: System.Diagnostics.SymbolStore.SymScopeBase
- uid: System.OutOfMemoryException
  isExternal: true
  name: System.OutOfMemoryException
- uid: System.Diagnostics.SymbolStore.SymScope.#ctor(System.Diagnostics.SymbolStore.Private.ISymUnmanagedScope*)
  parent: System.Diagnostics.SymbolStore.SymScope
  isExternal: false
  name: SymScope(ISymUnmanagedScope*)
  nameWithType: SymScope.SymScope(ISymUnmanagedScope*)
  fullName: System.Diagnostics.SymbolStore.SymScope.SymScope(ISymUnmanagedScope*)
- uid: System.Diagnostics.SymbolStore.SymScope.Dispose
  parent: System.Diagnostics.SymbolStore.SymScope
  isExternal: false
  name: Dispose()
  nameWithType: SymScope.Dispose()
  fullName: System.Diagnostics.SymbolStore.SymScope.Dispose()
- uid: System.Diagnostics.SymbolStore.SymScope.Dispose(System.Boolean)
  parent: System.Diagnostics.SymbolStore.SymScope
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: SymScope.Dispose(Boolean)
  fullName: System.Diagnostics.SymbolStore.SymScope.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.SymbolStore.SymScope.EndOffset
  parent: System.Diagnostics.SymbolStore.SymScope
  isExternal: false
  name: EndOffset
  nameWithType: SymScope.EndOffset
  fullName: System.Diagnostics.SymbolStore.SymScope.EndOffset
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Diagnostics.SymbolStore.SymScope.Finalize
  parent: System.Diagnostics.SymbolStore.SymScope
  isExternal: false
  name: Finalize()
  nameWithType: SymScope.Finalize()
  fullName: System.Diagnostics.SymbolStore.SymScope.Finalize()
- uid: System.Diagnostics.SymbolStore.SymScope.GetChildren
  parent: System.Diagnostics.SymbolStore.SymScope
  isExternal: false
  name: GetChildren()
  nameWithType: SymScope.GetChildren()
  fullName: System.Diagnostics.SymbolStore.SymScope.GetChildren()
- uid: System.Diagnostics.SymbolStore.ISymbolScope[]
  parent: System.Diagnostics.SymbolStore
  isExternal: false
  name: ISymbolScope
  nameWithType: ISymbolScope
  fullName: System.Diagnostics.SymbolStore.ISymbolScope[]
  spec.csharp:
  - uid: System.Diagnostics.SymbolStore.ISymbolScope
    name: ISymbolScope
    nameWithType: ISymbolScope
    fullName: ISymbolScope[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Diagnostics.SymbolStore.SymScope.GetLocals
  parent: System.Diagnostics.SymbolStore.SymScope
  isExternal: false
  name: GetLocals()
  nameWithType: SymScope.GetLocals()
  fullName: System.Diagnostics.SymbolStore.SymScope.GetLocals()
- uid: System.Diagnostics.SymbolStore.ISymbolVariable[]
  parent: System.Diagnostics.SymbolStore
  isExternal: false
  name: ISymbolVariable
  nameWithType: ISymbolVariable
  fullName: System.Diagnostics.SymbolStore.ISymbolVariable[]
  spec.csharp:
  - uid: System.Diagnostics.SymbolStore.ISymbolVariable
    name: ISymbolVariable
    nameWithType: ISymbolVariable
    fullName: ISymbolVariable[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Diagnostics.SymbolStore.SymScope.GetNamespaces
  parent: System.Diagnostics.SymbolStore.SymScope
  isExternal: false
  name: GetNamespaces()
  nameWithType: SymScope.GetNamespaces()
  fullName: System.Diagnostics.SymbolStore.SymScope.GetNamespaces()
- uid: System.Diagnostics.SymbolStore.ISymbolNamespace[]
  parent: System.Diagnostics.SymbolStore
  isExternal: false
  name: ISymbolNamespace
  nameWithType: ISymbolNamespace
  fullName: System.Diagnostics.SymbolStore.ISymbolNamespace[]
  spec.csharp:
  - uid: System.Diagnostics.SymbolStore.ISymbolNamespace
    name: ISymbolNamespace
    nameWithType: ISymbolNamespace
    fullName: ISymbolNamespace[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Diagnostics.SymbolStore.SymScope.Method
  parent: System.Diagnostics.SymbolStore.SymScope
  isExternal: false
  name: Method
  nameWithType: SymScope.Method
  fullName: System.Diagnostics.SymbolStore.SymScope.Method
- uid: System.Diagnostics.SymbolStore.ISymbolMethod
  parent: System.Diagnostics.SymbolStore
  isExternal: false
  name: ISymbolMethod
  nameWithType: ISymbolMethod
  fullName: System.Diagnostics.SymbolStore.ISymbolMethod
- uid: System.Diagnostics.SymbolStore.SymScope.Parent
  parent: System.Diagnostics.SymbolStore.SymScope
  isExternal: false
  name: Parent
  nameWithType: SymScope.Parent
  fullName: System.Diagnostics.SymbolStore.SymScope.Parent
- uid: System.Diagnostics.SymbolStore.ISymbolScope
  parent: System.Diagnostics.SymbolStore
  isExternal: false
  name: ISymbolScope
  nameWithType: ISymbolScope
  fullName: System.Diagnostics.SymbolStore.ISymbolScope
- uid: System.Diagnostics.SymbolStore.SymScope.StartOffset
  parent: System.Diagnostics.SymbolStore.SymScope
  isExternal: false
  name: StartOffset
  nameWithType: SymScope.StartOffset
  fullName: System.Diagnostics.SymbolStore.SymScope.StartOffset
- uid: System.Diagnostics.SymbolStore.SymScope.#ctor*
  parent: System.Diagnostics.SymbolStore.SymScope
  isExternal: false
  name: SymScope
  nameWithType: SymScope.SymScope
- uid: System.Diagnostics.SymbolStore.SymScope.Dispose*
  parent: System.Diagnostics.SymbolStore.SymScope
  isExternal: false
  name: Dispose
  nameWithType: SymScope.Dispose
- uid: System.Diagnostics.SymbolStore.SymScope.EndOffset*
  parent: System.Diagnostics.SymbolStore.SymScope
  isExternal: false
  name: EndOffset
  nameWithType: SymScope.EndOffset
- uid: System.Diagnostics.SymbolStore.SymScope.Finalize*
  parent: System.Diagnostics.SymbolStore.SymScope
  isExternal: false
  name: Finalize
  nameWithType: SymScope.Finalize
- uid: System.Diagnostics.SymbolStore.SymScope.GetChildren*
  parent: System.Diagnostics.SymbolStore.SymScope
  isExternal: false
  name: GetChildren
  nameWithType: SymScope.GetChildren
- uid: System.Diagnostics.SymbolStore.SymScope.GetLocals*
  parent: System.Diagnostics.SymbolStore.SymScope
  isExternal: false
  name: GetLocals
  nameWithType: SymScope.GetLocals
- uid: System.Diagnostics.SymbolStore.SymScope.GetNamespaces*
  parent: System.Diagnostics.SymbolStore.SymScope
  isExternal: false
  name: GetNamespaces
  nameWithType: SymScope.GetNamespaces
- uid: System.Diagnostics.SymbolStore.SymScope.Method*
  parent: System.Diagnostics.SymbolStore.SymScope
  isExternal: false
  name: Method
  nameWithType: SymScope.Method
- uid: System.Diagnostics.SymbolStore.SymScope.Parent*
  parent: System.Diagnostics.SymbolStore.SymScope
  isExternal: false
  name: Parent
  nameWithType: SymScope.Parent
- uid: System.Diagnostics.SymbolStore.SymScope.StartOffset*
  parent: System.Diagnostics.SymbolStore.SymScope
  isExternal: false
  name: StartOffset
  nameWithType: SymScope.StartOffset
