### YamlMime:ManagedReference
items:
- uid: System.Windows.Media.Animation.DoubleAnimation
  id: DoubleAnimation
  children:
  - System.Windows.Media.Animation.DoubleAnimation.#ctor
  - System.Windows.Media.Animation.DoubleAnimation.#ctor(System.Double,System.Windows.Duration)
  - System.Windows.Media.Animation.DoubleAnimation.#ctor(System.Double,System.Double,System.Windows.Duration)
  - System.Windows.Media.Animation.DoubleAnimation.#ctor(System.Double,System.Windows.Duration,System.Windows.Media.Animation.FillBehavior)
  - System.Windows.Media.Animation.DoubleAnimation.#ctor(System.Double,System.Double,System.Windows.Duration,System.Windows.Media.Animation.FillBehavior)
  - System.Windows.Media.Animation.DoubleAnimation.By
  - System.Windows.Media.Animation.DoubleAnimation.ByProperty
  - System.Windows.Media.Animation.DoubleAnimation.Clone
  - System.Windows.Media.Animation.DoubleAnimation.CreateInstanceCore
  - System.Windows.Media.Animation.DoubleAnimation.EasingFunction
  - System.Windows.Media.Animation.DoubleAnimation.EasingFunctionProperty
  - System.Windows.Media.Animation.DoubleAnimation.From
  - System.Windows.Media.Animation.DoubleAnimation.FromProperty
  - System.Windows.Media.Animation.DoubleAnimation.GetCurrentValueCore(System.Double,System.Double,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.Media.Animation.DoubleAnimation.IsAdditive
  - System.Windows.Media.Animation.DoubleAnimation.IsCumulative
  - System.Windows.Media.Animation.DoubleAnimation.To
  - System.Windows.Media.Animation.DoubleAnimation.ToProperty
  langs:
  - csharp
  name: DoubleAnimation
  nameWithType: DoubleAnimation
  fullName: System.Windows.Media.Animation.DoubleAnimation
  type: Class
  summary: "<xref:System.Double>지정 된 <xref:System.Windows.Media.Animation.Timeline.Duration*>.</xref:System.Windows.Media.Animation.Timeline.Duration*> 통해 선형 보간을 사용 하 여 두 대상 값 사이의 속성</xref:System.Double> 값에 애니메이션을 적용합니다"
  remarks: "애니메이션 시간 동안 속성의 값을 업데이트합니다.  애니메이션 효과 이동 하는 등 미묘한 수는 <xref:System.Windows.Shapes.Shape>왼쪽 및 오른쪽 또는 개체 200 배로 원래 크기를 확대 하는 것을 회전 하 고 색을 변경 하는 동안 픽셀 몇.</xref:System.Windows.Shapes.Shape> 애니메이션을 만드는 [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)], 개체의 속성 값을 가진 애니메이션을 연결 합니다.      ## 대상 값은 DoubleAnimation 클래스에는 두 대상 값 사이의 전환을 만듭니다. 대상 값을 설정 하려면 해당 <xref:System.Windows.Media.Animation.DoubleAnimation.From%2A>, <xref:System.Windows.Media.Animation.DoubleAnimation.To%2A>, 및 <xref:System.Windows.Media.Animation.DoubleAnimation.By%2A>속성.</xref:System.Windows.Media.Animation.DoubleAnimation.By%2A> </xref:System.Windows.Media.Animation.DoubleAnimation.To%2A> </xref:System.Windows.Media.Animation.DoubleAnimation.From%2A>  다음 표에서 요약 방법을 <xref:System.Windows.Media.Animation.DoubleAnimation.From%2A>, <xref:System.Windows.Media.Animation.DoubleAnimation.To%2A>, 및 <xref:System.Windows.Media.Animation.DoubleAnimation.By%2A>속성을 함께 사용할 수 있습니다. 또는 개별적으로 애니메이션의 대상 값을 확인 하.</xref:System.Windows.Media.Animation.DoubleAnimation.By%2A> </xref:System.Windows.Media.Animation.DoubleAnimation.To%2A> </xref:System.Windows.Media.Animation.DoubleAnimation.From%2A>      | 지정 된 속성 | 결과 동작 |   |--------------------------|------------------------|   | <xref:System.Windows.Media.Animation.DoubleAnimation.From%2A>| 애니메이션이 적용 되는 속성의 기준 값 또는 이전 애니메이션 <xref:System.Windows.Media.Animation.DoubleAnimation.From%2A>속성에 지정 된 값의 구성 방식에 따라 값을 출력 합니다. |   | <xref:System.Windows.Media.Animation.DoubleAnimation.From%2A>및 <xref:System.Windows.Media.Animation.DoubleAnimation.To%2A>| <xref:System.Windows.Media.Animation.DoubleAnimation.From%2A>속성을 <xref:System.Windows.Media.Animation.DoubleAnimation.To%2A>속성에 지정 된 값에 지정 된 값은 애니메이션이 적용 합니다. |   | <xref:System.Windows.Media.Animation.DoubleAnimation.From%2A>및 <xref:System.Windows.Media.Animation.DoubleAnimation.By%2A>| <xref:System.Windows.Media.Animation.DoubleAnimation.From%2A>에 의해 지정 된 값으로 <xref:System.Windows.Media.Animation.DoubleAnimation.From%2A>속성 및 <xref:System.Windows.Media.Animation.DoubleAnimation.By%2A>속성에 지정 된 값은 애니메이션이 적용 합니다. |   | <xref:System.Windows.Media.Animation.DoubleAnimation.To%2A>| 애니메이션 적용 속성의 기준 값 이나 이전 애니메이션의 출력 값을 <xref:System.Windows.Media.Animation.DoubleAnimation.To%2A>속성에 지정 된 값입니다. |   | <xref:System.Windows.Media.Animation.DoubleAnimation.By%2A>| 애니메이션 효과 줄 속성의 기본값은 애니메이션이 적용 또는 이전 애니메이션의 출력 <xref:System.Windows.Media.Animation.DoubleAnimation.By%2A>속성에 지정 된 값과 값의 합계를 구할 값입니다. |      > [!NOTE] > 둘 다 설정 하는 경우는 <xref:System.Windows.Media.Animation.DoubleAnimation.To%2A>및 <xref:System.Windows.Media.Animation.DoubleAnimation.By%2A>속성은 <xref:System.Windows.Media.Animation.DoubleAnimation.To%2A>속성이 우선 및 <xref:System.Windows.Media.Animation.DoubleAnimation.By%2A>속성은 무시 됩니다.</xref:System.Windows.Media.Animation.DoubleAnimation.By%2A> </xref:System.Windows.Media.Animation.DoubleAnimation.To%2A> </xref:System.Windows.Media.Animation.DoubleAnimation.By%2A> </xref:System.Windows.Media.Animation.DoubleAnimation.To%2A> </xref:System.Windows.Media.Animation.DoubleAnimation.By%2A> </xref:System.Windows.Media.Animation.DoubleAnimation.By%2A> </xref:System.Windows.Media.Animation.DoubleAnimation.To%2A> </xref:System.Windows.Media.Animation.DoubleAnimation.To%2A> </xref:System.Windows.Media.Animation.DoubleAnimation.By%2A>  </xref:System.Windows.Media.Animation.DoubleAnimation.From%2A></xref:System.Windows.Media.Animation.DoubleAnimation.From%2A> </xref:System.Windows.Media.Animation.DoubleAnimation.By%2A> </xref:System.Windows.Media.Animation.DoubleAnimation.From%2A> </xref:System.Windows.Media.Animation.DoubleAnimation.To%2A> </xref:System.Windows.Media.Animation.DoubleAnimation.From%2A> </xref:System.Windows.Media.Animation.DoubleAnimation.To%2A> </xref:System.Windows.Media.Animation.DoubleAnimation.From%2A> </xref:System.Windows.Media.Animation.DoubleAnimation.From%2A> </xref:System.Windows.Media.Animation.DoubleAnimation.From%2A>       를 다른 보간 메서드를 사용 하거나 두 개 이상의 대상 값 사이 애니메이션을 적용 한 <xref:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames>개체입니다.</xref:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames>      ## Freezable 기능 때문에 DoubleAnimation 클래스에서 상속 <xref:System.Windows.Freezable>, 다음을 포함 하는 몇 가지 특수 기능을 사용 하는 DoubleAnimation 개체: 여러 개체 간에 공유로 선언, 성능 향상을 위해 읽기 전용, 복제, 고 수 가집니다.</xref:System.Windows.Freezable> 제공 하는 다른 기능에 대 한 자세한 내용은 <xref:System.Windows.Freezable>개체 참조는 [Freezable 개체 개요](~/add/includes/ajax-current-ext-md.md).</xref:System.Windows.Freezable>"
  syntax:
    content: 'public class DoubleAnimation : System.Windows.Media.Animation.DoubleAnimationBase'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  - System.Windows.Freezable
  - System.Windows.Media.Animation.Animatable
  - System.Windows.Media.Animation.Timeline
  - System.Windows.Media.Animation.AnimationTimeline
  - System.Windows.Media.Animation.DoubleAnimationBase
  implements: []
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Freezable.CanFreeze
  - System.Windows.Freezable.Changed
  - System.Windows.Freezable.CloneCore(System.Windows.Freezable)
  - System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)
  - System.Windows.Freezable.CreateInstance
  - System.Windows.Freezable.Freeze
  - System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)
  - System.Windows.Freezable.GetAsFrozen
  - System.Windows.Freezable.GetCurrentValueAsFrozen
  - System.Windows.Freezable.IsFrozen
  - System.Windows.Freezable.OnChanged
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)
  - System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.Freezable.ReadPreamble
  - System.Windows.Freezable.WritePostscript
  - System.Windows.Freezable.WritePreamble
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)
  - System.Windows.Media.Animation.Animatable.HasAnimatedProperties
  - System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)
  - System.Windows.Media.Animation.AnimationTimeline.AllocateClock
  - System.Windows.Media.Animation.AnimationTimeline.CreateClock
  - System.Windows.Media.Animation.AnimationTimeline.GetNaturalDurationCore(System.Windows.Media.Animation.Clock)
  - System.Windows.Media.Animation.AnimationTimeline.IsAdditiveProperty
  - System.Windows.Media.Animation.AnimationTimeline.IsCumulativeProperty
  - System.Windows.Media.Animation.AnimationTimeline.IsDestinationDefault
  - System.Windows.Media.Animation.DoubleAnimationBase.GetCurrentValue(System.Double,System.Double,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.Media.Animation.DoubleAnimationBase.GetCurrentValue(System.Object,System.Object,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.Media.Animation.DoubleAnimationBase.TargetPropertyType
  - System.Windows.Media.Animation.Timeline.AccelerationRatio
  - System.Windows.Media.Animation.Timeline.AccelerationRatioProperty
  - System.Windows.Media.Animation.Timeline.AutoReverse
  - System.Windows.Media.Animation.Timeline.AutoReverseProperty
  - System.Windows.Media.Animation.Timeline.BeginTime
  - System.Windows.Media.Animation.Timeline.BeginTimeProperty
  - System.Windows.Media.Animation.Timeline.CloneCurrentValue
  - System.Windows.Media.Animation.Timeline.Completed
  - System.Windows.Media.Animation.Timeline.CreateClock(System.Boolean)
  - System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated
  - System.Windows.Media.Animation.Timeline.CurrentStateInvalidated
  - System.Windows.Media.Animation.Timeline.CurrentTimeInvalidated
  - System.Windows.Media.Animation.Timeline.DecelerationRatio
  - System.Windows.Media.Animation.Timeline.DecelerationRatioProperty
  - System.Windows.Media.Animation.Timeline.DesiredFrameRateProperty
  - System.Windows.Media.Animation.Timeline.Duration
  - System.Windows.Media.Animation.Timeline.DurationProperty
  - System.Windows.Media.Animation.Timeline.FillBehavior
  - System.Windows.Media.Animation.Timeline.FillBehaviorProperty
  - System.Windows.Media.Animation.Timeline.FreezeCore(System.Boolean)
  - System.Windows.Media.Animation.Timeline.GetAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Media.Animation.Timeline.GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Media.Animation.Timeline.GetDesiredFrameRate(System.Windows.Media.Animation.Timeline)
  - System.Windows.Media.Animation.Timeline.GetNaturalDuration(System.Windows.Media.Animation.Clock)
  - System.Windows.Media.Animation.Timeline.Name
  - System.Windows.Media.Animation.Timeline.NameProperty
  - System.Windows.Media.Animation.Timeline.RemoveRequested
  - System.Windows.Media.Animation.Timeline.RepeatBehavior
  - System.Windows.Media.Animation.Timeline.RepeatBehaviorProperty
  - System.Windows.Media.Animation.Timeline.SetDesiredFrameRate(System.Windows.Media.Animation.Timeline,System.Nullable{System.Int32})
  - System.Windows.Media.Animation.Timeline.SpeedRatio
  - System.Windows.Media.Animation.Timeline.SpeedRatioProperty
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Media.Animation.DoubleAnimation.#ctor
  id: '#ctor'
  parent: System.Windows.Media.Animation.DoubleAnimation
  langs:
  - csharp
  name: DoubleAnimation()
  nameWithType: DoubleAnimation.DoubleAnimation()
  fullName: System.Windows.Media.Animation.DoubleAnimation.DoubleAnimation()
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Windows.Media.Animation.DoubleAnimation&quot;> </xref> 클래스입니다."
  syntax:
    content: public DoubleAnimation ();
    parameters: []
  overload: System.Windows.Media.Animation.DoubleAnimation.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.DoubleAnimation.#ctor(System.Double,System.Windows.Duration)
  id: '#ctor(System.Double,System.Windows.Duration)'
  parent: System.Windows.Media.Animation.DoubleAnimation
  langs:
  - csharp
  name: DoubleAnimation(Double,Duration)
  nameWithType: DoubleAnimation.DoubleAnimation(Double,Duration)
  fullName: System.Windows.Media.Animation.DoubleAnimation.DoubleAnimation(Double,Duration)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Windows.Media.Animation.DoubleAnimation&quot;> </xref> 지정 된 기간 동안 지정된 된 값에 애니메이션을 적용 합니다. 애니메이션에 대 한 시작 값은 애니메이션 효과 줄 속성의 기준 값 또는 다른 애니메이션의 출력입니다."
  syntax:
    content: public DoubleAnimation (double toValue, System.Windows.Duration duration);
    parameters:
    - id: toValue
      type: System.Double
      description: "애니메이션의 대상 값입니다."
    - id: duration
      type: System.Windows.Duration
      description: "애니메이션을 시작부터 완료까지 한번 재생 하는 데 걸리는 시간입니다. 참조는 <xref:System.Windows.Media.Animation.Timeline.Duration*>속성에 대 한 자세한 내용은.</xref:System.Windows.Media.Animation.Timeline.Duration*>"
  overload: System.Windows.Media.Animation.DoubleAnimation.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.DoubleAnimation.#ctor(System.Double,System.Double,System.Windows.Duration)
  id: '#ctor(System.Double,System.Double,System.Windows.Duration)'
  parent: System.Windows.Media.Animation.DoubleAnimation
  langs:
  - csharp
  name: DoubleAnimation(Double,Double,Duration)
  nameWithType: DoubleAnimation.DoubleAnimation(Double,Double,Duration)
  fullName: System.Windows.Media.Animation.DoubleAnimation.DoubleAnimation(Double,Double,Duration)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Windows.Media.Animation.DoubleAnimation&quot;> </xref> 지정된 된 시작 값에서 지정된 된 대상 값 지정 된 기간 동안 애니메이션을 적용 합니다."
  syntax:
    content: public DoubleAnimation (double fromValue, double toValue, System.Windows.Duration duration);
    parameters:
    - id: fromValue
      type: System.Double
      description: "애니메이션의 시작 값입니다."
    - id: toValue
      type: System.Double
      description: "애니메이션의 대상 값입니다."
    - id: duration
      type: System.Windows.Duration
      description: "애니메이션을 시작부터 완료까지 한번 재생 하는 데 걸리는 시간입니다. 참조는 <xref:System.Windows.Media.Animation.Timeline.Duration*>속성에 대 한 자세한 내용은.</xref:System.Windows.Media.Animation.Timeline.Duration*>"
  overload: System.Windows.Media.Animation.DoubleAnimation.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.DoubleAnimation.#ctor(System.Double,System.Windows.Duration,System.Windows.Media.Animation.FillBehavior)
  id: '#ctor(System.Double,System.Windows.Duration,System.Windows.Media.Animation.FillBehavior)'
  parent: System.Windows.Media.Animation.DoubleAnimation
  langs:
  - csharp
  name: DoubleAnimation(Double,Duration,FillBehavior)
  nameWithType: DoubleAnimation.DoubleAnimation(Double,Duration,FillBehavior)
  fullName: System.Windows.Media.Animation.DoubleAnimation.DoubleAnimation(Double,Duration,FillBehavior)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Windows.Media.Animation.DoubleAnimation&quot;> </xref> 지정 된 기간 동안 지정된 된 값에 애니메이션을 적용 하며 지정된 된 채우기 동작을 포함 합니다. 애니메이션에 대 한 시작 값은 애니메이션 효과 줄 속성의 기준 값 또는 다른 애니메이션의 출력입니다."
  syntax:
    content: public DoubleAnimation (double toValue, System.Windows.Duration duration, System.Windows.Media.Animation.FillBehavior fillBehavior);
    parameters:
    - id: toValue
      type: System.Double
      description: "애니메이션의 대상 값입니다."
    - id: duration
      type: System.Windows.Duration
      description: "애니메이션을 시작부터 완료까지 한번 재생 하는 데 걸리는 시간입니다. 참조는 <xref:System.Windows.Media.Animation.Timeline.Duration*>속성에 대 한 자세한 내용은.</xref:System.Windows.Media.Animation.Timeline.Duration*>"
    - id: fillBehavior
      type: System.Windows.Media.Animation.FillBehavior
      description: "비활성 상태일 때 애니메이션의 동작을 지정 합니다."
  overload: System.Windows.Media.Animation.DoubleAnimation.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.DoubleAnimation.#ctor(System.Double,System.Double,System.Windows.Duration,System.Windows.Media.Animation.FillBehavior)
  id: '#ctor(System.Double,System.Double,System.Windows.Duration,System.Windows.Media.Animation.FillBehavior)'
  parent: System.Windows.Media.Animation.DoubleAnimation
  langs:
  - csharp
  name: DoubleAnimation(Double,Double,Duration,FillBehavior)
  nameWithType: DoubleAnimation.DoubleAnimation(Double,Double,Duration,FillBehavior)
  fullName: System.Windows.Media.Animation.DoubleAnimation.DoubleAnimation(Double,Double,Duration,FillBehavior)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Windows.Media.Animation.DoubleAnimation&quot;> </xref> 지정 된 기간 동안 지정된 된 대상 값에 지정된 된 시작 값에서 애니메이션을 적용 하며 지정된 된 채우기 동작을 포함 합니다."
  syntax:
    content: public DoubleAnimation (double fromValue, double toValue, System.Windows.Duration duration, System.Windows.Media.Animation.FillBehavior fillBehavior);
    parameters:
    - id: fromValue
      type: System.Double
      description: "애니메이션의 시작 값입니다."
    - id: toValue
      type: System.Double
      description: "애니메이션의 대상 값입니다."
    - id: duration
      type: System.Windows.Duration
      description: "애니메이션을 시작부터 완료까지 한번 재생 하는 데 걸리는 시간입니다. 참조는 <xref:System.Windows.Media.Animation.Timeline.Duration*>속성에 대 한 자세한 내용은.</xref:System.Windows.Media.Animation.Timeline.Duration*>"
    - id: fillBehavior
      type: System.Windows.Media.Animation.FillBehavior
      description: "비활성 상태일 때 애니메이션의 동작을 지정 합니다."
  overload: System.Windows.Media.Animation.DoubleAnimation.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.DoubleAnimation.By
  id: By
  parent: System.Windows.Media.Animation.DoubleAnimation
  langs:
  - csharp
  name: By
  nameWithType: DoubleAnimation.By
  fullName: System.Windows.Media.Animation.DoubleAnimation.By
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "애니메이션이 시작 값을 변경 하는 총 크기를 가져오거나 설정 합니다."
  remarks: "Use the By property when you want to animate a value \"by\" a certain amount, rather than specifying a starting or ending value. You may also use the By property with the <xref:System.Windows.Media.Animation.DoubleAnimation.From%2A> property.  \n  \n The following table summarizes how the <xref:System.Windows.Media.Animation.DoubleAnimation.From%2A>, <xref:System.Windows.Media.Animation.DoubleAnimation.To%2A>, and By properties may be used together or separately to determine an animation's target values.  \n  \n|Properties specified|Resulting behavior|  \n|--------------------------|------------------------|  \n|<xref:System.Windows.Media.Animation.DoubleAnimation.From%2A>|The animation progresses from the value specified by the <xref:System.Windows.Media.Animation.DoubleAnimation.From%2A> property to the base value of the property being animated or to a previous animation's output value, depending on how the previous animation is configured.|  \n|<xref:System.Windows.Media.Animation.DoubleAnimation.From%2A> and <xref:System.Windows.Media.Animation.DoubleAnimation.To%2A>|The animation progresses from the value specified by the <xref:System.Windows.Media.Animation.DoubleAnimation.From%2A> property to the value specified by the <xref:System.Windows.Media.Animation.DoubleAnimation.To%2A> property.|  \n|<xref:System.Windows.Media.Animation.DoubleAnimation.From%2A> and By|The animation progresses from the value specified by the <xref:System.Windows.Media.Animation.DoubleAnimation.From%2A> property to the value specified by the sum of the <xref:System.Windows.Media.Animation.DoubleAnimation.From%2A> and By properties.|  \n|<xref:System.Windows.Media.Animation.DoubleAnimation.To%2A>|The animation progresses from the animated property's base value or a previous animation's output value to the value specified by the <xref:System.Windows.Media.Animation.DoubleAnimation.To%2A> property.|  \n|By|The animation progresses from the base value of the property being animated or a previous animation's output value to the sum of that value and the value specified by the By property.|  \n  \n> [!NOTE]\n>  If you set both the <xref:System.Windows.Media.Animation.DoubleAnimation.To%2A> and By properties, the <xref:System.Windows.Media.Animation.DoubleAnimation.To%2A> property takes precedence and the By property is ignored.  \n  \n To use other interpolation methods or animate between more than two target values, use a <xref:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames> object.  \n  \n<a name=\"xamlAttributeUsage_By\"></a>   \n## XAML Attribute Usage  \n <*object* `By`=\"<xref:System.Double>\"/>  \n  \n \\- or -  \n  \n <*object* `By`=\"{}\"/>  \n  \n<a name=\"dependencyPropertyInfo_By\"></a>   \n## Dependency Property Information  \n  \n|||  \n|-|-|  \n|Identifier field|<xref:System.Windows.Media.Animation.DoubleAnimation.ByProperty>|  \n|Metadata properties set to `true`|None|"
  syntax:
    content: public Nullable<double> By { get; set; }
    return:
      type: System.Nullable{System.Double}
      description: "애니메이션이 시작 값을 변경 하는 총 양입니다.     기본값은 null입니다."
  overload: System.Windows.Media.Animation.DoubleAnimation.By*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.DoubleAnimation.ByProperty
  id: ByProperty
  parent: System.Windows.Media.Animation.DoubleAnimation
  langs:
  - csharp
  name: ByProperty
  nameWithType: DoubleAnimation.ByProperty
  fullName: System.Windows.Media.Animation.DoubleAnimation.ByProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "식별 된 <xref:System.Windows.Media.Animation.DoubleAnimation.By*>종속성 속성입니다.</xref:System.Windows.Media.Animation.DoubleAnimation.By*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty ByProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.DoubleAnimation.Clone
  id: Clone
  parent: System.Windows.Media.Animation.DoubleAnimation
  langs:
  - csharp
  name: Clone()
  nameWithType: DoubleAnimation.Clone()
  fullName: System.Windows.Media.Animation.DoubleAnimation.Clone()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "수정 가능한 복제본을 만듭니다 <xref href=&quot;System.Windows.Media.Animation.DoubleAnimation&quot;> </xref>,이 개체 값의 전체 복사본입니다. 종속성 속성을 복사 하는 경우이 메서드는 리소스 참조와 데이터 바인딩을 복사 (하지만 이러한 요소는 더 이상 확인) 나 하지 않습니다 애니메이션의 현재 값입니다."
  remarks: "수정 가능한 복사본을 생성 하기 위해이 메서드는 고정 된 <xref:System.Windows.Freezable>개체 (또는 모든 <xref:System.Windows.Freezable>개체).</xref:System.Windows.Freezable> </xref:System.Windows.Freezable> 편의 위해이 메서드는 강력한 형식의 구현이 포함 된 상속 된 버전을 숨깁니다.       자세한 내용은 <xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>.</xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName> 을 참조 하십시오."
  syntax:
    content: public System.Windows.Media.Animation.DoubleAnimation Clone ();
    parameters: []
    return:
      type: System.Windows.Media.Animation.DoubleAnimation
      description: "현재 개체의 수정 가능한 복제본입니다. 복제 된 개체의 <> </> *> 속성은 됩니다 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 경우에 원본의 <> </> *> 속성은<xref uid=&quot;langword_csharp_true.&quot; name=&quot;true.&quot; href=&quot;&quot;></xref>"
  overload: System.Windows.Media.Animation.DoubleAnimation.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.DoubleAnimation.CreateInstanceCore
  id: CreateInstanceCore
  parent: System.Windows.Media.Animation.DoubleAnimation
  langs:
  - csharp
  name: CreateInstanceCore()
  nameWithType: DoubleAnimation.CreateInstanceCore()
  fullName: System.Windows.Media.Animation.DoubleAnimation.CreateInstanceCore()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "새 인스턴스를 만듭니다는 <xref href=&quot;System.Windows.Media.Animation.DoubleAnimation&quot;> </xref>합니다."
  syntax:
    content: protected override System.Windows.Freezable CreateInstanceCore ();
    parameters: []
    return:
      type: System.Windows.Freezable
      description: "새 인스턴스입니다."
  overload: System.Windows.Media.Animation.DoubleAnimation.CreateInstanceCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.DoubleAnimation.EasingFunction
  id: EasingFunction
  parent: System.Windows.Media.Animation.DoubleAnimation
  langs:
  - csharp
  name: EasingFunction
  nameWithType: DoubleAnimation.EasingFunction
  fullName: System.Windows.Media.Animation.DoubleAnimation.EasingFunction
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "이 애니메이션에 적용 되는 감속/가속 함수를 가져오거나 설정 합니다."
  remarks: "감속/가속 함수를 사용 하 여 스프링 진동 및 다양 한 크기 가속 및 감속 애니메이션, 다양 한 반송 포함 하 여 특수 애니메이션 효과 만들 수 있습니다."
  syntax:
    content: public System.Windows.Media.Animation.IEasingFunction EasingFunction { get; set; }
    return:
      type: System.Windows.Media.Animation.IEasingFunction
      description: "이 애니메이션에 적용 되는 감속/가속 함수입니다."
  overload: System.Windows.Media.Animation.DoubleAnimation.EasingFunction*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.DoubleAnimation.EasingFunctionProperty
  id: EasingFunctionProperty
  parent: System.Windows.Media.Animation.DoubleAnimation
  langs:
  - csharp
  name: EasingFunctionProperty
  nameWithType: DoubleAnimation.EasingFunctionProperty
  fullName: System.Windows.Media.Animation.DoubleAnimation.EasingFunctionProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "식별 된 <xref:System.Windows.Media.Animation.DoubleAnimation.EasingFunction*>종속성 속성입니다.</xref:System.Windows.Media.Animation.DoubleAnimation.EasingFunction*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty EasingFunctionProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.DoubleAnimation.From
  id: From
  parent: System.Windows.Media.Animation.DoubleAnimation
  langs:
  - csharp
  name: From
  nameWithType: DoubleAnimation.From
  fullName: System.Windows.Media.Animation.DoubleAnimation.From
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "애니메이션의 시작 값을 가져오거나 설정 합니다."
  remarks: "The following table summarizes how the From, <xref:System.Windows.Media.Animation.DoubleAnimation.To%2A>, and <xref:System.Windows.Media.Animation.DoubleAnimation.By%2A> properties may be used together or separately to determine an animation's target values.  \n  \n|Properties specified|Resulting behavior|  \n|--------------------------|------------------------|  \n|From|The animation progresses from the value specified by the From property to the base value of the property being animated or to a previous animation's output value, depending on how the previous animation is configured.|  \n|From and <xref:System.Windows.Media.Animation.DoubleAnimation.To%2A>|The animation progresses from the value specified by the From property to the value specified by the <xref:System.Windows.Media.Animation.DoubleAnimation.To%2A> property.|  \n|From and <xref:System.Windows.Media.Animation.DoubleAnimation.By%2A>|The animation progresses from the value specified by the From property to the value specified by the sum of the From and <xref:System.Windows.Media.Animation.DoubleAnimation.By%2A> properties.|  \n|<xref:System.Windows.Media.Animation.DoubleAnimation.To%2A>|The animation progresses from the animated property's base value or a previous animation's output value to the value specified by the <xref:System.Windows.Media.Animation.DoubleAnimation.To%2A> property.|  \n|<xref:System.Windows.Media.Animation.DoubleAnimation.By%2A>|The animation progresses from the base value of the property being animated or a previous animation's output value to the sum of that value and the value specified by the <xref:System.Windows.Media.Animation.DoubleAnimation.By%2A> property.|  \n  \n> [!NOTE]\n>  If you set both the <xref:System.Windows.Media.Animation.DoubleAnimation.To%2A> and <xref:System.Windows.Media.Animation.DoubleAnimation.By%2A> properties, the <xref:System.Windows.Media.Animation.DoubleAnimation.To%2A> property takes precedence and the <xref:System.Windows.Media.Animation.DoubleAnimation.By%2A> property is ignored.  \n  \n To use other interpolation methods or animate between more than two target values, use a <xref:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames> object.  \n  \n<a name=\"xamlAttributeUsage_From\"></a>   \n## XAML Attribute Usage  \n <*object* `From`=\"<xref:System.Double>\"/>  \n  \n \\- or -  \n  \n <*object* `From`=\"{[x:Null Markup Extension](~/add/includes/ajax-current-ext-md.md)}\"/>  \n  \n<a name=\"dependencyPropertyInfo_From\"></a>   \n## Dependency Property Information  \n  \n|||  \n|-|-|  \n|Identifier field|<xref:System.Windows.Media.Animation.DoubleAnimation.FromProperty>|  \n|Metadata properties set to `true`|None|"
  syntax:
    content: public Nullable<double> From { get; set; }
    return:
      type: System.Nullable{System.Double}
      description: "애니메이션의 시작 값입니다. 기본값은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Media.Animation.DoubleAnimation.From*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.DoubleAnimation.FromProperty
  id: FromProperty
  parent: System.Windows.Media.Animation.DoubleAnimation
  langs:
  - csharp
  name: FromProperty
  nameWithType: DoubleAnimation.FromProperty
  fullName: System.Windows.Media.Animation.DoubleAnimation.FromProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "식별 된 <xref:System.Windows.Media.Animation.DoubleAnimation.From*>종속성 속성입니다.</xref:System.Windows.Media.Animation.DoubleAnimation.From*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty FromProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.DoubleAnimation.GetCurrentValueCore(System.Double,System.Double,System.Windows.Media.Animation.AnimationClock)
  id: GetCurrentValueCore(System.Double,System.Double,System.Windows.Media.Animation.AnimationClock)
  parent: System.Windows.Media.Animation.DoubleAnimation
  langs:
  - csharp
  name: GetCurrentValueCore(Double,Double,AnimationClock)
  nameWithType: DoubleAnimation.GetCurrentValueCore(Double,Double,AnimationClock)
  fullName: System.Windows.Media.Animation.DoubleAnimation.GetCurrentValueCore(Double,Double,AnimationClock)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "결정 된 대로 애니메이션 효과 줄 속성의 현재 값을 나타내는 값을 계산는 <xref href=&quot;System.Windows.Media.Animation.DoubleAnimation&quot;> </xref>합니다."
  remarks: "경우는 `defaultOriginValue` 은 첫 번째 컴퍼지션 체인에서이 값이 됩니다 (있는 경우) 스냅숏 값 또는 기본 속성 값; 그렇지 않으면이 값을 이전 애니메이션 체인에서 반환한 값은 <xref:System.Windows.Media.Animation.AnimationClock>없는 <xref:System.Windows.Media.Animation.Clock.Stopped%2A>.</xref:System.Windows.Media.Animation.Clock.Stopped%2A> </xref:System.Windows.Media.Animation.AnimationClock>       `defaultDestinationValue` 경우 기준 값은 애니메이션 속성의 첫 번째 컴퍼지션 계층 이며 그렇지 않은 경우이 값은 이전 컴퍼지션 계층 속성에 대 한 애니메이션의 출력 값입니다."
  syntax:
    content: protected override double GetCurrentValueCore (double defaultOriginValue, double defaultDestinationValue, System.Windows.Media.Animation.AnimationClock animationClock);
    parameters:
    - id: defaultOriginValue
      type: System.Double
      description: "애니메이션에 명시적으로 설정 된 자체 없는 경우 사용 하는 제안 된 원점 값 시작 값입니다."
    - id: defaultDestinationValue
      type: System.Double
      description: "애니메이션에 명시적으로 설정 된 자체 없는 경우 사용 하는 제안 된 대상 값 끝 값입니다."
    - id: animationClock
      type: System.Windows.Media.Animation.AnimationClock
      description: "<xref href=&quot;System.Windows.Media.Animation.AnimationClock&quot;> </xref> 생성 하는 <> </> *> 또는 <> </> *> 애니메이션에 사용 합니다."
    return:
      type: System.Double
      description: "현재 애니메이션에 따라 결정 된 속성의 계산 된 값입니다."
  overload: System.Windows.Media.Animation.DoubleAnimation.GetCurrentValueCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.DoubleAnimation.IsAdditive
  id: IsAdditive
  parent: System.Windows.Media.Animation.DoubleAnimation
  langs:
  - csharp
  name: IsAdditive
  nameWithType: DoubleAnimation.IsAdditive
  fullName: System.Windows.Media.Animation.DoubleAnimation.IsAdditive
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "대상 속성의 현재 값을이 애니메이션의 시작 값에 추가할지 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "애니메이션 중 하나만 있으면 해당 <xref:System.Windows.Media.Animation.DoubleAnimation.From%2A>, <xref:System.Windows.Media.Animation.DoubleAnimation.To%2A>, 또는 <xref:System.Windows.Media.Animation.DoubleAnimation.By%2A>속성 집합을이 속성 설정에 영향을 주지 않습니다.</xref:System.Windows.Media.Animation.DoubleAnimation.By%2A> </xref:System.Windows.Media.Animation.DoubleAnimation.To%2A> </xref:System.Windows.Media.Animation.DoubleAnimation.From%2A>      <a name=&quot;dependencyPropertyInfo_IsAdditive&quot;></a># # 종속성 속성 정보 | | |   |-|-|   | 식별자 필드 | <xref:System.Windows.Media.Animation.AnimationTimeline.IsAdditiveProperty>|   | 메타 데이터 속성이 `true`| None |      > [!NOTE] >이 종속성 속성은에서 식별자 필드를 제공 한다는 점에서 <xref:System.Windows.Media.Animation.AnimationTimeline>, 다양 한 파생된 클래스에서 공유 됩니다.</xref:System.Windows.Media.Animation.AnimationTimeline> </xref:System.Windows.Media.Animation.AnimationTimeline.IsAdditiveProperty>"
  syntax:
    content: public bool IsAdditive { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>대상 속성의 현재 값을이 애니메이션의 시작 값;에 추가 해야 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Media.Animation.DoubleAnimation.IsAdditive*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.DoubleAnimation.IsCumulative
  id: IsCumulative
  parent: System.Windows.Media.Animation.DoubleAnimation
  langs:
  - csharp
  name: IsCumulative
  nameWithType: DoubleAnimation.IsCumulative
  fullName: System.Windows.Media.Animation.DoubleAnimation.IsCumulative
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "반복 될 때 애니메이션 값을 누적 되는지 여부를 지정 하는 값을 가져오거나 설정 합니다."
  remarks: "이 속성이로 설정 된 경우 **true**, 출력 될 때이 값만 누적 애니메이션의 <xref:System.Windows.Media.Animation.Timeline.RepeatBehavior%2A>속성으로 인해 단순 지속 시간 동안 반복 될.</xref:System.Windows.Media.Animation.Timeline.RepeatBehavior%2A> 부모 항목이 반복 다시 시작할 때 또는에서 해당 clock이 때문에 해당 값이 누적 되지 않습니다는 <xref:System.Windows.Media.Animation.ClockController.Begin%2A>호출.</xref:System.Windows.Media.Animation.ClockController.Begin%2A>      <a name=&quot;dependencyPropertyInfo_Cumulative&quot;></a># # 종속성 속성 정보 | | |   |-|-|   | 식별자 필드 | <xref:System.Windows.Media.Animation.AnimationTimeline.IsCumulativeProperty>|   | 메타 데이터 속성이 `true`| None |      > [!NOTE] >이 종속성 속성은에서 식별자 필드를 제공 한다는 점에서 <xref:System.Windows.Media.Animation.AnimationTimeline>, 다양 한 파생된 클래스에서 공유 됩니다.</xref:System.Windows.Media.Animation.AnimationTimeline> </xref:System.Windows.Media.Animation.AnimationTimeline.IsCumulativeProperty>"
  syntax:
    content: public bool IsCumulative { get; set; }
    return:
      type: System.Boolean
      description: '**true 이면** 애니메이션이 해당 값을 누적 하면 때 해당 <> </> *> 속성으로 인해 반복의 단순 지속 시간. 그렇지 않으면 * *false**합니다. 기본값은 * *false** 합니다.'
  overload: System.Windows.Media.Animation.DoubleAnimation.IsCumulative*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.DoubleAnimation.To
  id: To
  parent: System.Windows.Media.Animation.DoubleAnimation
  langs:
  - csharp
  name: To
  nameWithType: DoubleAnimation.To
  fullName: System.Windows.Media.Animation.DoubleAnimation.To
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "애니메이션의 끝 값을 가져오거나 설정 합니다."
  remarks: "The following table summarizes how the <xref:System.Windows.Media.Animation.DoubleAnimation.From%2A>, To, and <xref:System.Windows.Media.Animation.DoubleAnimation.By%2A> properties may be used together or separately to determine an animation's target values.  \n  \n|Properties specified|Resulting behavior|  \n|--------------------------|------------------------|  \n|<xref:System.Windows.Media.Animation.DoubleAnimation.From%2A>|The animation progresses from the value specified by the <xref:System.Windows.Media.Animation.DoubleAnimation.From%2A> property to the base value of the property being animated or to a previous animation's output value, depending on how the previous animation is configured.|  \n|<xref:System.Windows.Media.Animation.DoubleAnimation.From%2A> and To|The animation progresses from the value specified by the <xref:System.Windows.Media.Animation.DoubleAnimation.From%2A> property to the value specified by the To property.|  \n|<xref:System.Windows.Media.Animation.DoubleAnimation.From%2A> and <xref:System.Windows.Media.Animation.DoubleAnimation.By%2A>|The animation progresses from the value specified by the <xref:System.Windows.Media.Animation.DoubleAnimation.From%2A> property to the value specified by the sum of the <xref:System.Windows.Media.Animation.DoubleAnimation.From%2A> and <xref:System.Windows.Media.Animation.DoubleAnimation.By%2A> properties.|  \n|To|The animation progresses from the animated property's base value or a previous animation's output value to the value specified by the To property.|  \n|<xref:System.Windows.Media.Animation.DoubleAnimation.By%2A>|The animation progresses from the base value of the property being animated or a previous animation's output value to the sum of that value and the value specified by the <xref:System.Windows.Media.Animation.DoubleAnimation.By%2A> property.|  \n  \n> [!NOTE]\n>  If you set both the To and <xref:System.Windows.Media.Animation.DoubleAnimation.By%2A> properties, the To property takes precedence and the <xref:System.Windows.Media.Animation.DoubleAnimation.By%2A> property is ignored.  \n  \n To use other interpolation methods or animate between more than two target values, use a <xref:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames> object.  \n  \n<a name=\"xamlAttributeUsage_To\"></a>   \n## XAML Attribute Usage  \n <*object* `To`=\"<xref:System.Double>\"/>  \n  \n \\- or -  \n  \n <*object* `To`=\"{[x:Null Markup Extension](~/add/includes/ajax-current-ext-md.md)}\"/>  \n  \n<a name=\"dependencyPropertyInfo_To\"></a>   \n## Dependency Property Information  \n  \n|||  \n|-|-|  \n|Identifier field|<xref:System.Windows.Media.Animation.DoubleAnimation.ToProperty>|  \n|Metadata properties set to `true`|None|"
  syntax:
    content: public Nullable<double> To { get; set; }
    return:
      type: System.Nullable{System.Double}
      description: "애니메이션의 끝 값입니다. 기본값은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Media.Animation.DoubleAnimation.To*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.DoubleAnimation.ToProperty
  id: ToProperty
  parent: System.Windows.Media.Animation.DoubleAnimation
  langs:
  - csharp
  name: ToProperty
  nameWithType: DoubleAnimation.ToProperty
  fullName: System.Windows.Media.Animation.DoubleAnimation.ToProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "식별 된 <xref:System.Windows.Media.Animation.DoubleAnimation.To*>종속성 속성입니다.</xref:System.Windows.Media.Animation.DoubleAnimation.To*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty ToProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Media.Animation.DoubleAnimationBase
  isExternal: false
  name: System.Windows.Media.Animation.DoubleAnimationBase
- uid: System.Windows.Media.Animation.DoubleAnimation.#ctor
  parent: System.Windows.Media.Animation.DoubleAnimation
  isExternal: false
  name: DoubleAnimation()
  nameWithType: DoubleAnimation.DoubleAnimation()
  fullName: System.Windows.Media.Animation.DoubleAnimation.DoubleAnimation()
- uid: System.Windows.Media.Animation.DoubleAnimation.#ctor(System.Double,System.Windows.Duration)
  parent: System.Windows.Media.Animation.DoubleAnimation
  isExternal: false
  name: DoubleAnimation(Double,Duration)
  nameWithType: DoubleAnimation.DoubleAnimation(Double,Duration)
  fullName: System.Windows.Media.Animation.DoubleAnimation.DoubleAnimation(Double,Duration)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.Duration
  parent: System.Windows
  isExternal: false
  name: Duration
  nameWithType: Duration
  fullName: System.Windows.Duration
- uid: System.Windows.Media.Animation.DoubleAnimation.#ctor(System.Double,System.Double,System.Windows.Duration)
  parent: System.Windows.Media.Animation.DoubleAnimation
  isExternal: false
  name: DoubleAnimation(Double,Double,Duration)
  nameWithType: DoubleAnimation.DoubleAnimation(Double,Double,Duration)
  fullName: System.Windows.Media.Animation.DoubleAnimation.DoubleAnimation(Double,Double,Duration)
- uid: System.Windows.Media.Animation.DoubleAnimation.#ctor(System.Double,System.Windows.Duration,System.Windows.Media.Animation.FillBehavior)
  parent: System.Windows.Media.Animation.DoubleAnimation
  isExternal: false
  name: DoubleAnimation(Double,Duration,FillBehavior)
  nameWithType: DoubleAnimation.DoubleAnimation(Double,Duration,FillBehavior)
  fullName: System.Windows.Media.Animation.DoubleAnimation.DoubleAnimation(Double,Duration,FillBehavior)
- uid: System.Windows.Media.Animation.FillBehavior
  parent: System.Windows.Media.Animation
  isExternal: false
  name: FillBehavior
  nameWithType: FillBehavior
  fullName: System.Windows.Media.Animation.FillBehavior
- uid: System.Windows.Media.Animation.DoubleAnimation.#ctor(System.Double,System.Double,System.Windows.Duration,System.Windows.Media.Animation.FillBehavior)
  parent: System.Windows.Media.Animation.DoubleAnimation
  isExternal: false
  name: DoubleAnimation(Double,Double,Duration,FillBehavior)
  nameWithType: DoubleAnimation.DoubleAnimation(Double,Double,Duration,FillBehavior)
  fullName: System.Windows.Media.Animation.DoubleAnimation.DoubleAnimation(Double,Double,Duration,FillBehavior)
- uid: System.Windows.Media.Animation.DoubleAnimation.By
  parent: System.Windows.Media.Animation.DoubleAnimation
  isExternal: false
  name: By
  nameWithType: DoubleAnimation.By
  fullName: System.Windows.Media.Animation.DoubleAnimation.By
- uid: System.Nullable{System.Double}
  parent: System
  isExternal: true
  name: Nullable<Double>
  nameWithType: Nullable<Double>
  fullName: System.Nullable<System.Double>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.Double>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: Double
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Media.Animation.DoubleAnimation.ByProperty
  parent: System.Windows.Media.Animation.DoubleAnimation
  isExternal: false
  name: ByProperty
  nameWithType: DoubleAnimation.ByProperty
  fullName: System.Windows.Media.Animation.DoubleAnimation.ByProperty
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.Media.Animation.DoubleAnimation.Clone
  parent: System.Windows.Media.Animation.DoubleAnimation
  isExternal: false
  name: Clone()
  nameWithType: DoubleAnimation.Clone()
  fullName: System.Windows.Media.Animation.DoubleAnimation.Clone()
- uid: System.Windows.Media.Animation.DoubleAnimation
  parent: System.Windows.Media.Animation
  isExternal: false
  name: DoubleAnimation
  nameWithType: DoubleAnimation
  fullName: System.Windows.Media.Animation.DoubleAnimation
- uid: System.Windows.Media.Animation.DoubleAnimation.CreateInstanceCore
  parent: System.Windows.Media.Animation.DoubleAnimation
  isExternal: false
  name: CreateInstanceCore()
  nameWithType: DoubleAnimation.CreateInstanceCore()
  fullName: System.Windows.Media.Animation.DoubleAnimation.CreateInstanceCore()
- uid: System.Windows.Freezable
  parent: System.Windows
  isExternal: false
  name: Freezable
  nameWithType: Freezable
  fullName: System.Windows.Freezable
- uid: System.Windows.Media.Animation.DoubleAnimation.EasingFunction
  parent: System.Windows.Media.Animation.DoubleAnimation
  isExternal: false
  name: EasingFunction
  nameWithType: DoubleAnimation.EasingFunction
  fullName: System.Windows.Media.Animation.DoubleAnimation.EasingFunction
- uid: System.Windows.Media.Animation.IEasingFunction
  parent: System.Windows.Media.Animation
  isExternal: false
  name: IEasingFunction
  nameWithType: IEasingFunction
  fullName: System.Windows.Media.Animation.IEasingFunction
- uid: System.Windows.Media.Animation.DoubleAnimation.EasingFunctionProperty
  parent: System.Windows.Media.Animation.DoubleAnimation
  isExternal: false
  name: EasingFunctionProperty
  nameWithType: DoubleAnimation.EasingFunctionProperty
  fullName: System.Windows.Media.Animation.DoubleAnimation.EasingFunctionProperty
- uid: System.Windows.Media.Animation.DoubleAnimation.From
  parent: System.Windows.Media.Animation.DoubleAnimation
  isExternal: false
  name: From
  nameWithType: DoubleAnimation.From
  fullName: System.Windows.Media.Animation.DoubleAnimation.From
- uid: System.Windows.Media.Animation.DoubleAnimation.FromProperty
  parent: System.Windows.Media.Animation.DoubleAnimation
  isExternal: false
  name: FromProperty
  nameWithType: DoubleAnimation.FromProperty
  fullName: System.Windows.Media.Animation.DoubleAnimation.FromProperty
- uid: System.Windows.Media.Animation.DoubleAnimation.GetCurrentValueCore(System.Double,System.Double,System.Windows.Media.Animation.AnimationClock)
  parent: System.Windows.Media.Animation.DoubleAnimation
  isExternal: false
  name: GetCurrentValueCore(Double,Double,AnimationClock)
  nameWithType: DoubleAnimation.GetCurrentValueCore(Double,Double,AnimationClock)
  fullName: System.Windows.Media.Animation.DoubleAnimation.GetCurrentValueCore(Double,Double,AnimationClock)
- uid: System.Windows.Media.Animation.AnimationClock
  parent: System.Windows.Media.Animation
  isExternal: false
  name: AnimationClock
  nameWithType: AnimationClock
  fullName: System.Windows.Media.Animation.AnimationClock
- uid: System.Windows.Media.Animation.DoubleAnimation.IsAdditive
  parent: System.Windows.Media.Animation.DoubleAnimation
  isExternal: false
  name: IsAdditive
  nameWithType: DoubleAnimation.IsAdditive
  fullName: System.Windows.Media.Animation.DoubleAnimation.IsAdditive
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Media.Animation.DoubleAnimation.IsCumulative
  parent: System.Windows.Media.Animation.DoubleAnimation
  isExternal: false
  name: IsCumulative
  nameWithType: DoubleAnimation.IsCumulative
  fullName: System.Windows.Media.Animation.DoubleAnimation.IsCumulative
- uid: System.Windows.Media.Animation.DoubleAnimation.To
  parent: System.Windows.Media.Animation.DoubleAnimation
  isExternal: false
  name: To
  nameWithType: DoubleAnimation.To
  fullName: System.Windows.Media.Animation.DoubleAnimation.To
- uid: System.Windows.Media.Animation.DoubleAnimation.ToProperty
  parent: System.Windows.Media.Animation.DoubleAnimation
  isExternal: false
  name: ToProperty
  nameWithType: DoubleAnimation.ToProperty
  fullName: System.Windows.Media.Animation.DoubleAnimation.ToProperty
- uid: System.Windows.Media.Animation.DoubleAnimation.#ctor*
  parent: System.Windows.Media.Animation.DoubleAnimation
  isExternal: false
  name: DoubleAnimation
  nameWithType: DoubleAnimation.DoubleAnimation
- uid: System.Windows.Media.Animation.DoubleAnimation.By*
  parent: System.Windows.Media.Animation.DoubleAnimation
  isExternal: false
  name: By
  nameWithType: DoubleAnimation.By
- uid: System.Windows.Media.Animation.DoubleAnimation.Clone*
  parent: System.Windows.Media.Animation.DoubleAnimation
  isExternal: false
  name: Clone
  nameWithType: DoubleAnimation.Clone
- uid: System.Windows.Media.Animation.DoubleAnimation.CreateInstanceCore*
  parent: System.Windows.Media.Animation.DoubleAnimation
  isExternal: false
  name: CreateInstanceCore
  nameWithType: DoubleAnimation.CreateInstanceCore
- uid: System.Windows.Media.Animation.DoubleAnimation.EasingFunction*
  parent: System.Windows.Media.Animation.DoubleAnimation
  isExternal: false
  name: EasingFunction
  nameWithType: DoubleAnimation.EasingFunction
- uid: System.Windows.Media.Animation.DoubleAnimation.From*
  parent: System.Windows.Media.Animation.DoubleAnimation
  isExternal: false
  name: From
  nameWithType: DoubleAnimation.From
- uid: System.Windows.Media.Animation.DoubleAnimation.GetCurrentValueCore*
  parent: System.Windows.Media.Animation.DoubleAnimation
  isExternal: false
  name: GetCurrentValueCore
  nameWithType: DoubleAnimation.GetCurrentValueCore
- uid: System.Windows.Media.Animation.DoubleAnimation.IsAdditive*
  parent: System.Windows.Media.Animation.DoubleAnimation
  isExternal: false
  name: IsAdditive
  nameWithType: DoubleAnimation.IsAdditive
- uid: System.Windows.Media.Animation.DoubleAnimation.IsCumulative*
  parent: System.Windows.Media.Animation.DoubleAnimation
  isExternal: false
  name: IsCumulative
  nameWithType: DoubleAnimation.IsCumulative
- uid: System.Windows.Media.Animation.DoubleAnimation.To*
  parent: System.Windows.Media.Animation.DoubleAnimation
  isExternal: false
  name: To
  nameWithType: DoubleAnimation.To
