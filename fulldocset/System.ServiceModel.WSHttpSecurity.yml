### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.WSHttpSecurity
  id: WSHttpSecurity
  children:
  - System.ServiceModel.WSHttpSecurity.#ctor
  - System.ServiceModel.WSHttpSecurity.Message
  - System.ServiceModel.WSHttpSecurity.Mode
  - System.ServiceModel.WSHttpSecurity.ShouldSerializeMessage
  - System.ServiceModel.WSHttpSecurity.ShouldSerializeMode
  - System.ServiceModel.WSHttpSecurity.ShouldSerializeTransport
  - System.ServiceModel.WSHttpSecurity.Transport
  langs:
  - csharp
  name: WSHttpSecurity
  nameWithType: WSHttpSecurity
  fullName: System.ServiceModel.WSHttpSecurity
  type: Class
  summary: "에 대 한 보안 설정을 나타냅니다는 <xref href=&quot;System.ServiceModel.WSHttpBinding&quot;> </xref>합니다."
  remarks: "<xref:System.ServiceModel.WSHttpBinding>클래스는 WS-구현 하는 서비스와 상호 운용 하도록 설계 되었습니다 * 사양.</xref:System.ServiceModel.WSHttpBinding> 이 바인딩의 전송 보안은 HTTP 또는 HTTPS over Secure Sockets Layer (SSL)."
  syntax:
    content: public sealed class WSHttpSecurity
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.WSHttpSecurity.#ctor
  id: '#ctor'
  parent: System.ServiceModel.WSHttpSecurity
  langs:
  - csharp
  name: WSHttpSecurity()
  nameWithType: WSHttpSecurity.WSHttpSecurity()
  fullName: System.ServiceModel.WSHttpSecurity.WSHttpSecurity()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.ServiceModel.WSHttpSecurity&quot;> </xref> 클래스입니다."
  syntax:
    content: public WSHttpSecurity ();
    parameters: []
  overload: System.ServiceModel.WSHttpSecurity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WSHttpSecurity.Message
  id: Message
  parent: System.ServiceModel.WSHttpSecurity
  langs:
  - csharp
  name: Message
  nameWithType: WSHttpSecurity.Message
  fullName: System.ServiceModel.WSHttpSecurity.Message
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "이 바인딩의 메시지 수준 보안 설정을 가져옵니다."
  remarks: ''
  example:
  - "The following code illustrates use of this property.  \n  \n [!code-cs[c_CreateSecureSession#4](~/add/codesnippet/csharp/p-system.servicemodel.ws_20_1.cs)]"
  syntax:
    content: public System.ServiceModel.NonDualMessageSecurityOverHttp Message { get; set; }
    return:
      type: System.ServiceModel.NonDualMessageSecurityOverHttp
      description: "A <xref href=&quot;System.ServiceModel.NonDualMessageSecurityOverHttp&quot;> </xref> 인스턴스.       The default value includes: <>*> with default set to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, <>*> is <xref:System.ServiceModel.MessageCredentialType>, <>*> is <>*>, and <xref:System.ServiceModel.MessageSecurityOverHttp.NegotiateServiceCredential*> is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>.</xref:System.ServiceModel.MessageSecurityOverHttp.NegotiateServiceCredential*></xref:System.ServiceModel.MessageCredentialType>"
  overload: System.ServiceModel.WSHttpSecurity.Message*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WSHttpSecurity.Mode
  id: Mode
  parent: System.ServiceModel.WSHttpSecurity
  langs:
  - csharp
  name: Mode
  nameWithType: WSHttpSecurity.Mode
  fullName: System.ServiceModel.WSHttpSecurity.Mode
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "메시지를 지정 <xref:System.ServiceModel.SecurityMode>이 바인딩에 대 한.</xref:System.ServiceModel.SecurityMode>"
  remarks: "이 속성은 결정 여부 설정이 <xref:System.ServiceModel.WSHttpSecurity.Transport%2A>및/또는 <xref:System.ServiceModel.WSHttpSecurity.Message%2A>속성 버킷 수도 적용 될 수 있습니다.</xref:System.ServiceModel.WSHttpSecurity.Message%2A> </xref:System.ServiceModel.WSHttpSecurity.Transport%2A>"
  example:
  - "The following code sets this property.  \n  \n [!code-cs[c_CreateSecureSession#3](~/add/codesnippet/csharp/p-system.servicemodel.ws_11_1.cs)]"
  syntax:
    content: public System.ServiceModel.SecurityMode Mode { get; set; }
    return:
      type: System.ServiceModel.SecurityMode
      description: "<xref:System.ServiceModel.SecurityMode>이 바인딩에 대 한.</xref:System.ServiceModel.SecurityMode> 기본값은 <xref:System.ServiceModel.SecurityMode>.</xref:System.ServiceModel.SecurityMode>"
  overload: System.ServiceModel.WSHttpSecurity.Mode*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "모드 집합의 값이 정의 되지 않았습니다."
  platform:
  - net462
- uid: System.ServiceModel.WSHttpSecurity.ShouldSerializeMessage
  id: ShouldSerializeMessage
  parent: System.ServiceModel.WSHttpSecurity
  langs:
  - csharp
  name: ShouldSerializeMessage()
  nameWithType: WSHttpSecurity.ShouldSerializeMessage()
  fullName: System.ServiceModel.WSHttpSecurity.ShouldSerializeMessage()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "나타내는 값을 반환 여부는 <xref:System.ServiceModel.WSHttpSecurity.Message*>속성 값이 기본값에서 변경 되었으며 serialize 해야 합니다.</xref:System.ServiceModel.WSHttpSecurity.Message*> 이 특성을 사용 [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] XAML 통합에 대 한 합니다."
  syntax:
    content: public bool ShouldSerializeMessage ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우는 <xref:System.ServiceModel.WSHttpSecurity.Message*>고, 그렇지 않으면 직렬화 된 속성 값은 여야 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.ServiceModel.WSHttpSecurity.Message*>"
  overload: System.ServiceModel.WSHttpSecurity.ShouldSerializeMessage*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WSHttpSecurity.ShouldSerializeMode
  id: ShouldSerializeMode
  parent: System.ServiceModel.WSHttpSecurity
  langs:
  - csharp
  name: ShouldSerializeMode()
  nameWithType: WSHttpSecurity.ShouldSerializeMode()
  fullName: System.ServiceModel.WSHttpSecurity.ShouldSerializeMode()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "나타내는 값을 반환 여부는 <xref:System.ServiceModel.WSHttpSecurity.Mode*>속성 값이 기본값에서 변경 되었으며 serialize 해야 합니다.</xref:System.ServiceModel.WSHttpSecurity.Mode*> 이 특성을 사용 [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] XAML 통합에 대 한 합니다."
  syntax:
    content: public bool ShouldSerializeMode ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우는 <xref:System.ServiceModel.WSHttpSecurity.Mode*>고, 그렇지 않으면 직렬화 된 속성 값은 여야 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.ServiceModel.WSHttpSecurity.Mode*>"
  overload: System.ServiceModel.WSHttpSecurity.ShouldSerializeMode*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WSHttpSecurity.ShouldSerializeTransport
  id: ShouldSerializeTransport
  parent: System.ServiceModel.WSHttpSecurity
  langs:
  - csharp
  name: ShouldSerializeTransport()
  nameWithType: WSHttpSecurity.ShouldSerializeTransport()
  fullName: System.ServiceModel.WSHttpSecurity.ShouldSerializeTransport()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "나타내는 값을 반환 여부는 <xref:System.ServiceModel.WSHttpSecurity.Transport*>속성 값이 기본값에서 변경 되었으며 serialize 해야 합니다.</xref:System.ServiceModel.WSHttpSecurity.Transport*>"
  syntax:
    content: public bool ShouldSerializeTransport ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우는 <xref:System.ServiceModel.WSHttpSecurity.Transport*>고, 그렇지 않으면 직렬화 된 속성 값은 여야 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.ServiceModel.WSHttpSecurity.Transport*>"
  overload: System.ServiceModel.WSHttpSecurity.ShouldSerializeTransport*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WSHttpSecurity.Transport
  id: Transport
  parent: System.ServiceModel.WSHttpSecurity
  langs:
  - csharp
  name: Transport
  nameWithType: WSHttpSecurity.Transport
  fullName: System.ServiceModel.WSHttpSecurity.Transport
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "이 바인딩의 전송 수준 보안 설정을 포함 하는 개체를 가져옵니다."
  remarks: "바인딩에 대 한 전송 보안 설정을 지정 하려면이 속성에서 반환 되는 개체를 사용할 수 있습니다."
  example:
  - "The following code sets the client credential type to Windows.  \n  \n```c#  \n// The code uses a shortcut to specify the security mode to Transport.  \nWSHttpBinding b = new WSHttpBinding(SecurityMode.Transport);  \nb.Security.Transport.ClientCredentialType = HttpClientCredentialType.Windows;  \n```  \n  \n```vb#  \n' The code uses a shortcut to specify the security mode to Transport.  \nDim b As WSHttpBinding = new WSHttpBinding(SecurityMode.Transport)  \nb.Security.Transport.ClientCredentialType = HttpClientCredentialType.Windows  \n```"
  syntax:
    content: public System.ServiceModel.HttpTransportSecurity Transport { get; set; }
    return:
      type: System.ServiceModel.HttpTransportSecurity
      description: "<xref:System.ServiceModel.HttpTransportSecurity>이 바인딩에 대 한.</xref:System.ServiceModel.HttpTransportSecurity>       기본값을 포함 한 <> </> *>의 <xref:System.ServiceModel.HttpClientCredentialType>및 <> </> *>의 <xref href=&quot;System.ServiceModel.HttpProxyCredentialType&quot;> </xref>.</xref:System.ServiceModel.HttpClientCredentialType>"
  overload: System.ServiceModel.WSHttpSecurity.Transport*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ServiceModel.WSHttpSecurity.#ctor
  parent: System.ServiceModel.WSHttpSecurity
  isExternal: false
  name: WSHttpSecurity()
  nameWithType: WSHttpSecurity.WSHttpSecurity()
  fullName: System.ServiceModel.WSHttpSecurity.WSHttpSecurity()
- uid: System.ServiceModel.WSHttpSecurity.Message
  parent: System.ServiceModel.WSHttpSecurity
  isExternal: false
  name: Message
  nameWithType: WSHttpSecurity.Message
  fullName: System.ServiceModel.WSHttpSecurity.Message
- uid: System.ServiceModel.NonDualMessageSecurityOverHttp
  parent: System.ServiceModel
  isExternal: false
  name: NonDualMessageSecurityOverHttp
  nameWithType: NonDualMessageSecurityOverHttp
  fullName: System.ServiceModel.NonDualMessageSecurityOverHttp
- uid: System.ServiceModel.WSHttpSecurity.Mode
  parent: System.ServiceModel.WSHttpSecurity
  isExternal: false
  name: Mode
  nameWithType: WSHttpSecurity.Mode
  fullName: System.ServiceModel.WSHttpSecurity.Mode
- uid: System.ServiceModel.SecurityMode
  parent: System.ServiceModel
  isExternal: true
  name: SecurityMode
  nameWithType: SecurityMode
  fullName: System.ServiceModel.SecurityMode
- uid: System.ServiceModel.WSHttpSecurity.ShouldSerializeMessage
  parent: System.ServiceModel.WSHttpSecurity
  isExternal: false
  name: ShouldSerializeMessage()
  nameWithType: WSHttpSecurity.ShouldSerializeMessage()
  fullName: System.ServiceModel.WSHttpSecurity.ShouldSerializeMessage()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.WSHttpSecurity.ShouldSerializeMode
  parent: System.ServiceModel.WSHttpSecurity
  isExternal: false
  name: ShouldSerializeMode()
  nameWithType: WSHttpSecurity.ShouldSerializeMode()
  fullName: System.ServiceModel.WSHttpSecurity.ShouldSerializeMode()
- uid: System.ServiceModel.WSHttpSecurity.ShouldSerializeTransport
  parent: System.ServiceModel.WSHttpSecurity
  isExternal: false
  name: ShouldSerializeTransport()
  nameWithType: WSHttpSecurity.ShouldSerializeTransport()
  fullName: System.ServiceModel.WSHttpSecurity.ShouldSerializeTransport()
- uid: System.ServiceModel.WSHttpSecurity.Transport
  parent: System.ServiceModel.WSHttpSecurity
  isExternal: false
  name: Transport
  nameWithType: WSHttpSecurity.Transport
  fullName: System.ServiceModel.WSHttpSecurity.Transport
- uid: System.ServiceModel.HttpTransportSecurity
  parent: System.ServiceModel
  isExternal: true
  name: HttpTransportSecurity
  nameWithType: HttpTransportSecurity
  fullName: System.ServiceModel.HttpTransportSecurity
- uid: System.ServiceModel.WSHttpSecurity.#ctor*
  parent: System.ServiceModel.WSHttpSecurity
  isExternal: false
  name: WSHttpSecurity
  nameWithType: WSHttpSecurity.WSHttpSecurity
- uid: System.ServiceModel.WSHttpSecurity.Message*
  parent: System.ServiceModel.WSHttpSecurity
  isExternal: false
  name: Message
  nameWithType: WSHttpSecurity.Message
- uid: System.ServiceModel.WSHttpSecurity.Mode*
  parent: System.ServiceModel.WSHttpSecurity
  isExternal: false
  name: Mode
  nameWithType: WSHttpSecurity.Mode
- uid: System.ServiceModel.WSHttpSecurity.ShouldSerializeMessage*
  parent: System.ServiceModel.WSHttpSecurity
  isExternal: false
  name: ShouldSerializeMessage
  nameWithType: WSHttpSecurity.ShouldSerializeMessage
- uid: System.ServiceModel.WSHttpSecurity.ShouldSerializeMode*
  parent: System.ServiceModel.WSHttpSecurity
  isExternal: false
  name: ShouldSerializeMode
  nameWithType: WSHttpSecurity.ShouldSerializeMode
- uid: System.ServiceModel.WSHttpSecurity.ShouldSerializeTransport*
  parent: System.ServiceModel.WSHttpSecurity
  isExternal: false
  name: ShouldSerializeTransport
  nameWithType: WSHttpSecurity.ShouldSerializeTransport
- uid: System.ServiceModel.WSHttpSecurity.Transport*
  parent: System.ServiceModel.WSHttpSecurity
  isExternal: false
  name: Transport
  nameWithType: WSHttpSecurity.Transport
