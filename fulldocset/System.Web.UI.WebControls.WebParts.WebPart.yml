### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.WebParts.WebPart
  id: WebPart
  children:
  - System.Web.UI.WebControls.WebParts.WebPart.#ctor
  - System.Web.UI.WebControls.WebParts.WebPart.AllowClose
  - System.Web.UI.WebControls.WebParts.WebPart.AllowConnect
  - System.Web.UI.WebControls.WebParts.WebPart.AllowEdit
  - System.Web.UI.WebControls.WebParts.WebPart.AllowHide
  - System.Web.UI.WebControls.WebParts.WebPart.AllowMinimize
  - System.Web.UI.WebControls.WebParts.WebPart.AllowZoneChange
  - System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter
  - System.Web.UI.WebControls.WebParts.WebPart.CatalogIconImageUrl
  - System.Web.UI.WebControls.WebParts.WebPart.ChromeState
  - System.Web.UI.WebControls.WebParts.WebPart.ChromeType
  - System.Web.UI.WebControls.WebParts.WebPart.ConnectErrorMessage
  - System.Web.UI.WebControls.WebParts.WebPart.CreateEditorParts
  - System.Web.UI.WebControls.WebParts.WebPart.Description
  - System.Web.UI.WebControls.WebParts.WebPart.Direction
  - System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle
  - System.Web.UI.WebControls.WebParts.WebPart.ExportMode
  - System.Web.UI.WebControls.WebParts.WebPart.HasSharedData
  - System.Web.UI.WebControls.WebParts.WebPart.HasUserData
  - System.Web.UI.WebControls.WebParts.WebPart.Height
  - System.Web.UI.WebControls.WebParts.WebPart.HelpMode
  - System.Web.UI.WebControls.WebParts.WebPart.HelpUrl
  - System.Web.UI.WebControls.WebParts.WebPart.Hidden
  - System.Web.UI.WebControls.WebParts.WebPart.ImportErrorMessage
  - System.Web.UI.WebControls.WebParts.WebPart.IsClosed
  - System.Web.UI.WebControls.WebParts.WebPart.IsShared
  - System.Web.UI.WebControls.WebParts.WebPart.IsStandalone
  - System.Web.UI.WebControls.WebParts.WebPart.IsStatic
  - System.Web.UI.WebControls.WebParts.WebPart.OnClosing(System.EventArgs)
  - System.Web.UI.WebControls.WebParts.WebPart.OnConnectModeChanged(System.EventArgs)
  - System.Web.UI.WebControls.WebParts.WebPart.OnDeleting(System.EventArgs)
  - System.Web.UI.WebControls.WebParts.WebPart.OnEditModeChanged(System.EventArgs)
  - System.Web.UI.WebControls.WebParts.WebPart.SetPersonalizationDirty
  - System.Web.UI.WebControls.WebParts.WebPart.SetPersonalizationDirty(System.Web.UI.Control)
  - System.Web.UI.WebControls.WebParts.WebPart.Subtitle
  - System.Web.UI.WebControls.WebParts.WebPart.Title
  - System.Web.UI.WebControls.WebParts.WebPart.TitleIconImageUrl
  - System.Web.UI.WebControls.WebParts.WebPart.TitleUrl
  - System.Web.UI.WebControls.WebParts.WebPart.TrackViewState
  - System.Web.UI.WebControls.WebParts.WebPart.Verbs
  - System.Web.UI.WebControls.WebParts.WebPart.WebBrowsableObject
  - System.Web.UI.WebControls.WebParts.WebPart.WebPartManager
  - System.Web.UI.WebControls.WebParts.WebPart.Width
  - System.Web.UI.WebControls.WebParts.WebPart.Zone
  - System.Web.UI.WebControls.WebParts.WebPart.ZoneIndex
  langs:
  - csharp
  name: WebPart
  nameWithType: WebPart
  fullName: System.Web.UI.WebControls.WebParts.WebPart
  type: Class
  summary: "기준에 추가 하는 사용자 지정 ASP.NET 웹 파트 컨트롤에 대 한 기본 클래스 역할을 <xref href=&quot;System.Web.UI.WebControls.WebParts.Part&quot;> </xref> 클래스 기능에 몇 가지 추가 사용자 인터페이스 (UI) 속성 연결 및 개인 설정 동작을 만들 수 있습니다."
  remarks: "웹 파트 기능이 있는 컨트롤을 만들 때 두 가지 기본 옵션이 있습니다. WebPart 클래스에서 파생 되는 사용자 지정 컨트롤을 만들 수 있습니다 또는 만들거나 다른 서버 컨트롤을 사용할 수 있습니다. 기존 ASP.NET 컨트롤, 사용자 지정 서버 컨트롤 및 사용자 정의 컨트롤 수 모든 주어 완전 한 웹 파트 기능 내에서 선언 하 여 (또는 프로그래밍 방식으로 추가한)는 <xref:System.Web.UI.WebControls.WebParts.WebPartZone>영역으로 래핑 결과 함께 컨트롤 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>true 웹 파트 컨트롤에 개체 시간 및 처리 실행.</xref:System.Web.UI.WebControls.WebParts.GenericWebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartZone> 자세한 내용은 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>클래스</xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 에 대 한 설명서를 참조 하십시오. 개발 속도 향상 및 최대 코드 재사용에 대 한 기존 서버 컨트롤을 사용 하 여 좋을 수 있습니다. 최대 프로그래밍 방식으로 제어 동작 및 컨트롤의 기능을 웹 파트, 웹 파트 클래스에서 상속 되는 사용자 지정 컨트롤을 만드는 가장 적합 한 옵션.       기본에서 상속 된 추상 WebPart 클래스 <xref:System.Web.UI.WebControls.WebParts.Part>제어 하 고 모든 웹 파트 컨트롤에 대 한 기본 요소를 제공 합니다.</xref:System.Web.UI.WebControls.WebParts.Part> 클래스는 UI의 모양에 영향을 주는 속성 집합이 포함 되어 있습니다. <xref:System.Web.UI.WebControls.WebParts.WebPart.AllowClose%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPart.AllowConnect%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPart.AllowEdit%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPart.AllowHide%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPart.AllowMinimize%2A>, 및 <xref:System.Web.UI.WebControls.WebParts.WebPart.AllowZoneChange%2A>속성에는 각 웹 응용 프로그램의 사용자가 파트 컨트롤에 지정된 된 속성 이름을 나타내는 방식으로 상호 작용할 수 있는지 여부를 지정 합니다.</xref:System.Web.UI.WebControls.WebParts.WebPart.AllowZoneChange%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart.AllowMinimize%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart.AllowHide%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart.AllowEdit%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart.AllowConnect%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart.AllowClose%2A> <xref:System.Web.UI.WebControls.WebParts.WebPart.CatalogIconImageUrl%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPart.ChromeState%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPart.ChromeType%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPart.Description%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPart.Height%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPart.HelpUrl%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPart.Hidden%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPart.Title%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPart.TitleIconImageUrl%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPart.TitleUrl%2A>, 및 <xref:System.Web.UI.WebControls.WebParts.WebPart.Width%2A>속성 크기, 표시 유형, 모양 및 웹 파트 컨트롤에 대 한 지원 콘텐츠 (예: 제목 및 설명)를 결정 합니다.</xref:System.Web.UI.WebControls.WebParts.WebPart.Width%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart.TitleUrl%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart.TitleIconImageUrl%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart.Title%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart.Hidden%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart.HelpUrl%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart.Height%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart.Description%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart.ChromeType%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart.ChromeState%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart.CatalogIconImageUrl%2A>       웹 파트와 같은 속성에 의해 결정은 컨트롤 집합 내에서 해당 컨텍스트를 웹 파트 컨트롤의 관계 <xref:System.Web.UI.WebControls.WebParts.WebPart.WebPartManager%2A>, 연결 된 컨트롤에 대 한 참조를 보유 하 <xref:System.Web.UI.WebControls.WebParts.WebPartManager>개체 및 <xref:System.Web.UI.WebControls.WebParts.WebPart.Zone%2A>, 참조 하는 <xref:System.Web.UI.WebControls.WebParts.WebZone>컨트롤을 포함 하.</xref:System.Web.UI.WebControls.WebParts.WebZone> </xref:System.Web.UI.WebControls.WebParts.WebPart.Zone%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPart.WebPartManager%2A> 하나만 있을 수 있습니다 <xref:System.Web.UI.WebControls.WebParts.WebPartManager>컨트롤은 페이지 및 컨트롤 내 하나만 있을 수는 웹 파트의 인스턴스마다 각 <xref:System.Web.UI.WebControls.WebParts.WebZone>한 번에.</xref:System.Web.UI.WebControls.WebParts.WebZone> </xref:System.Web.UI.WebControls.WebParts.WebPartManager>      > [!NOTE] > 웹 페이지의 영역 밖에 A 웹 파트 컨트롤을 배치할 수 있지만 경우에 일반 서버 컨트롤로 함수 거의 모든 웹 파트 기능이 손실 됩니다.       여러 다른 중요 한 속성이 웹 파트 컨트롤의 고유 기능을 영향을 줍니다. <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>속성을 사용 하면 개발자가 사용할 수 있는 필터로 런타임 시 컨트롤은 페이지에 추가 되는지 여부를 결정 하는 임의의 문자열을 설정할 수 있습니다.</xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> 역할 관리 등의 기능과 함께 사용 되는 <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>속성 정의 된 사용자 역할을 기반으로 하는 뷰를 만드는 데 유용한 메커니즘을 제공 합니다.</xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> <xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A>속성 표시 여부는 내보내기 중 컨트롤에서 모든 사용 가능한 속성 데이터를 내보낸는 중요 하지 않은 데이터만.</xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A> 개발자를 민감한 데이터는 및가 아니면 보안을 위해 데이터를 구별할 수 있습니다. <xref:System.Web.UI.WebControls.WebParts.WebPart.WebBrowsableObject%2A>속성 웹 파트 컨트롤의 인스턴스에 대 한 참조를 반환 하는 <xref:System.Web.UI.WebControls.WebParts.EditorPart>컨트롤 편집할 수 페이지가 편집 모드에 있을 때.</xref:System.Web.UI.WebControls.WebParts.EditorPart> </xref:System.Web.UI.WebControls.WebParts.WebPart.WebBrowsableObject%2A> 마지막으로, 여러 가지 속성 페이지의 나머지를 기준으로 컨트롤의 상태를 나타내는입니다. <xref:System.Web.UI.WebControls.WebParts.WebPart.IsClosed%2A>속성 컨트롤 닫혀 있는지 여부를 나타냅니다 (에 따라서 추가 <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>개체),이 열려 있고 해당 페이지에서 제공 하는 경우 또는.</xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> </xref:System.Web.UI.WebControls.WebParts.WebPart.IsClosed%2A> <xref:System.Web.UI.WebControls.WebParts.WebPart.IsShared%2A>속성 컨트롤이 웹 페이지의 모든 사용자에 게 표시 되었는지 (또는 사용자 고유의 컨트롤의 경우) 공유 컨트롤 인지를 나타냅니다.</xref:System.Web.UI.WebControls.WebParts.WebPart.IsShared%2A> <xref:System.Web.UI.WebControls.WebParts.WebPart.IsStandalone%2A>속성 컨트롤에 현재 포함 되어 있는지 여부를 나타냅니다는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>-파생 된 영역 (예: <xref:System.Web.UI.WebControls.WebParts.WebPartZone>).</xref:System.Web.UI.WebControls.WebParts.WebPartZone> </xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> </xref:System.Web.UI.WebControls.WebParts.WebPart.IsStandalone%2A> 값이 `false` 컨트롤 영역 내에 있으므로 한 전체 웹 파트 기능이 나타냅니다. <xref:System.Web.UI.WebControls.WebParts.WebPart.IsStatic%2A>속성은 정적 또는 동적 컨트롤을 나타냅니다.</xref:System.Web.UI.WebControls.WebParts.WebPart.IsStatic%2A> 정적 컨트롤 동적 컨트롤은 프로그래밍 방식으로 추가 하는 반면, 웹 페이지의 태그에 선언 됩니다.       웹 파트 클래스에는 또한 컨트롤의 수명 주기에서 다양 한 포인트에서 수행 되는 여러 가지 방법을 제공 합니다. 예를 들어는 <xref:System.Web.UI.WebControls.WebParts.WebPart.OnConnectModeChanged%2A>및 <xref:System.Web.UI.WebControls.WebParts.WebPart.OnEditModeChanged%2A>메서드 모두 재정의할 수 있습니다 각 방법의 이름에 해당 하는 이벤트 중 렌더링을 컨트롤의 내용 프로그래밍 방식으로 제어할 수 있도록 파생된 클래스에서.</xref:System.Web.UI.WebControls.WebParts.WebPart.OnEditModeChanged%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart.OnConnectModeChanged%2A>       웹 파트에서 파생 된 클래스를 추가할 수 <xref:System.Web.UI.WebControls.WebParts.WebPartVerb>개체는 <xref:System.Web.UI.WebControls.WebParts.WebPart.Verbs%2A>컬렉션.</xref:System.Web.UI.WebControls.WebParts.WebPart.Verbs%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartVerb> 웹 파트 컨트롤의 제목 표시줄에 표시 되는 동사 메뉴에 동사 렌더링 됩니다. <xref:System.Web.UI.WebControls.WebParts.WebPartVerb>개체를 숨기 거 나 컨트롤을 최소화 하거나 도움말 표시와 같은 일반 사용자 동작에 대 한 간단한 UI 요소를 제공 합니다.</xref:System.Web.UI.WebControls.WebParts.WebPartVerb>       <xref:System.Web.UI.WebControls.WebParts.WebPart.CreateEditorParts%2A>메서드는 사용자 지정의 컬렉션을 만들고 <xref:System.Web.UI.WebControls.WebParts.EditorPart>웹 파트 컨트롤에 연결 된 컨트롤.</xref:System.Web.UI.WebControls.WebParts.EditorPart> </xref:System.Web.UI.WebControls.WebParts.WebPart.CreateEditorParts%2A> 개발자가 해당 웹 파트 컨트롤을 편집 하도록 특별히 설계 된 사용자 지정 컨트롤을 만들 수 있도록이 메서드를 재정의할 수입니다. 메서드는 웹 파트 컨트롤에 편집 동사를 클릭할 때 호출 됩니다."
  example:
  - "The following code example demonstrates how to create a WebPart control and reference it in a Web page.  \n  \n The first part of the example contains the code for a custom WebPart control named `TextDisplayWebPart`. This control demonstrates how to create a simple custom WebPart control that gives you access to the features of the Web Parts control set. For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This code example assumes that you compile the source code into an assembly, place it in a Bin subfolder of your Web application, and reference the assembly with a `Register` directive in your Web page. For a walkthrough that demonstrates both methods of compiling, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[WebParts_General_TextDisplayPart#2](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_102_1.vb)]\n [!code-cs[WebParts_General_TextDisplayPart#2](~/add/codesnippet/csharp/t-system.web.ui.webcontr_102_1.cs)]  \n  \n The second part of the example shows how to reference the `TextDisplayWebPart` control in an ASP.NET Web page. Notice that many of the various WebPart properties can be assigned declaratively to the custom control.  \n  \n [!code-cs[WebParts_General_TextDisplayPart#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_102_2.aspx)]\n [!code-vb[WebParts_General_TextDisplayPart#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_102_2.aspx)]"
  syntax:
    content: >-
      [System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.WebPartDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      public abstract class WebPart : System.Web.UI.WebControls.WebParts.Part, System.Web.UI.WebControls.WebParts.IWebActionable, System.Web.UI.WebControls.WebParts.IWebEditable, System.Web.UI.WebControls.WebParts.IWebPart
  inheritance:
  - System.Object
  - System.Web.UI.Control
  - System.Web.UI.WebControls.WebControl
  - System.Web.UI.WebControls.Panel
  - System.Web.UI.WebControls.WebParts.Part
  implements:
  - System.Web.UI.WebControls.WebParts.IWebActionable
  - System.Web.UI.WebControls.WebParts.IWebEditable
  - System.Web.UI.WebControls.WebParts.IWebPart
  inheritedMembers:
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.AddParsedSubObject(System.Object)
  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientID
  - System.Web.UI.Control.ClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Context
  - System.Web.UI.Control.CreateChildControls
  - System.Web.UI.Control.CreateControlCollection
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EnableViewState
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String)
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.Focus
  - System.Web.UI.Control.GetDesignModeState
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasControls
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.ID
  - System.Web.UI.Control.IdSeparator
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadControlState(System.Object)
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.OnDataBinding(System.EventArgs)
  - System.Web.UI.Control.OnInit(System.EventArgs)
  - System.Web.UI.Control.OnLoad(System.EventArgs)
  - System.Web.UI.Control.OnPreRender(System.EventArgs)
  - System.Web.UI.Control.OnUnload(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SaveControlState
  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ValidateRequestMode
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  - System.Web.UI.Control.Visible
  - System.Web.UI.WebControls.Panel.AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.Panel.BackImageUrl
  - System.Web.UI.WebControls.Panel.CreateControlStyle
  - System.Web.UI.WebControls.Panel.DefaultButton
  - System.Web.UI.WebControls.Panel.GroupingText
  - System.Web.UI.WebControls.Panel.HorizontalAlign
  - System.Web.UI.WebControls.Panel.RenderBeginTag(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.Panel.RenderEndTag(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.Panel.ScrollBars
  - System.Web.UI.WebControls.Panel.SupportsDisabledAttribute
  - System.Web.UI.WebControls.Panel.Wrap
  - System.Web.UI.WebControls.WebControl.AccessKey
  - System.Web.UI.WebControls.WebControl.ApplyStyle(System.Web.UI.WebControls.Style)
  - System.Web.UI.WebControls.WebControl.Attributes
  - System.Web.UI.WebControls.WebControl.BackColor
  - System.Web.UI.WebControls.WebControl.BorderColor
  - System.Web.UI.WebControls.WebControl.BorderStyle
  - System.Web.UI.WebControls.WebControl.BorderWidth
  - System.Web.UI.WebControls.WebControl.ControlStyle
  - System.Web.UI.WebControls.WebControl.ControlStyleCreated
  - System.Web.UI.WebControls.WebControl.CopyBaseAttributes(System.Web.UI.WebControls.WebControl)
  - System.Web.UI.WebControls.WebControl.CssClass
  - System.Web.UI.WebControls.WebControl.DisabledCssClass
  - System.Web.UI.WebControls.WebControl.Enabled
  - System.Web.UI.WebControls.WebControl.EnableTheming
  - System.Web.UI.WebControls.WebControl.Font
  - System.Web.UI.WebControls.WebControl.ForeColor
  - System.Web.UI.WebControls.WebControl.HasAttributes
  - System.Web.UI.WebControls.WebControl.IsEnabled
  - System.Web.UI.WebControls.WebControl.LoadViewState(System.Object)
  - System.Web.UI.WebControls.WebControl.MergeStyle(System.Web.UI.WebControls.Style)
  - System.Web.UI.WebControls.WebControl.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.RenderContents(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.SaveViewState
  - System.Web.UI.WebControls.WebControl.SkinID
  - System.Web.UI.WebControls.WebControl.Style
  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)
  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)
  - System.Web.UI.WebControls.WebControl.TabIndex
  - System.Web.UI.WebControls.WebControl.TagKey
  - System.Web.UI.WebControls.WebControl.TagName
  - System.Web.UI.WebControls.WebControl.ToolTip
  - System.Web.UI.WebControls.WebParts.Part.Controls
  - System.Web.UI.WebControls.WebParts.Part.DataBind
  - System.Web.UI.WebControls.WebParts.Part.System#Web#UI#WebControls#ICompositeControlDesignerAccessor#RecreateChildControls
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: WebPart()
  nameWithType: WebPart.WebPart()
  fullName: System.Web.UI.WebControls.WebParts.WebPart.WebPart()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "상속된 된 클래스 인스턴스에 사용할 수 있도록 클래스를 초기화합니다. 이 생성자는 상속 된 클래스 에서만 호출 될 수 있습니다."
  remarks: "웹 파트 생성자를 비롯 한 다양 한 여러 UI 기반 속성에 대 한 기본값을 초기화 `Allow` 컨트롤의 기능을 결정 하는 속성입니다. 그런 다음 이러한 속성은 상속된 된 클래스 인스턴스에 통합 됩니다."
  example:
  - "The following code example demonstrates how a control that derives from the <xref:System.Web.UI.WebControls.WebParts.WebPart> class inherits the default property values set in the base WebPart constructor, but then changes the value of one property in the constructor of the derived control.  \n  \n The first part of this example contains the code for a custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control named `TextDisplayWebPart`. This control demonstrates how to create a simple custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control that gives you access to the features of the Web Parts control set. Note that in the constructor of the custom control, the `TextDisplayWebPart.AllowClose` property is set to `false`, which has the effect of preventing users from closing the control on a Web page. For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This code example assumes that you compile the source code into an assembly, place it in a Bin subfolder of your Web application, and reference the assembly with a `Register` directive in your Web page. For a walkthrough that demonstrates both methods of compiling, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[WebParts_General_TextDisplayPart#2](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_40_1.vb)]\n [!code-cs[WebParts_General_TextDisplayPart#2](~/add/codesnippet/csharp/m-system.web.ui.webcontr_40_1.cs)]  \n  \n The second part of the example shows how to reference the `TextDisplayWebPart` control in an ASP.NET Web page. After you load the page in a browser, if you click the verbs menu in the title bar of the custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control, the close verb is now disabled, which prevents users from closing the control.  \n  \n [!code-cs[WebParts_General_TextDisplayPart#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_40_2.aspx)]\n [!code-vb[WebParts_General_TextDisplayPart#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_40_2.aspx)]"
  syntax:
    content: protected WebPart ();
    parameters: []
  overload: System.Web.UI.WebControls.WebParts.WebPart.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.AllowClose
  id: AllowClose
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: AllowClose
  nameWithType: WebPart.AllowClose
  fullName: System.Web.UI.WebControls.WebParts.WebPart.AllowClose
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "최종 사용자를 닫을 수 있는지 여부를 나타내는 값을 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> 웹 페이지에 컨트롤입니다."
  remarks: "사용자를 닫은 후는 <xref:System.Web.UI.WebControls.WebParts.WebPart>컨트롤이 웹 페이지에 컨트롤을 더 이상 표시 되거나 해당 페이지에서 제공 합니다.</xref:System.Web.UI.WebControls.WebParts.WebPart> 닫힌된 컨트롤은 컨트롤에 대 한 참조를 저장 하는 웹 파트 엔터티 페이지 카탈로그에 추가 됩니다. 개발자가 추가 하는 경우는 <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>컨트롤 내에서 페이지는 <xref:System.Web.UI.WebControls.WebParts.CatalogZone>컨트롤, 사용자가 페이지 카탈로그 디스플레이 모드를 전환 닫힌된 컨트롤 페이지 카탈로그에서 선택한 페이지에 다시 추가할 수 있습니다.</xref:System.Web.UI.WebControls.WebParts.CatalogZone> </xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>      > [!NOTE] > 닫힌 <xref:System.Web.UI.WebControls.WebParts.WebPart>프로그래밍 방식으로 또는 사용자가 카탈로그에 페이지가 있을 때 페이지 카탈로그에서 닫힌된 컨트롤을 선택 하 여 표시 되거나 모드 페이지로 다시 컨트롤을 추가할 수 있습니다.</xref:System.Web.UI.WebControls.WebParts.WebPart>       <xref:System.Web.UI.WebControls.WebParts.WebPart>컨트롤 사람을 삭제 간에 차이가 있는</xref:System.Web.UI.WebControls.WebParts.WebPart> 닫기 삭제 된 컨트롤은 영구적으로 제거 하는 동안 닫힌된 컨트롤을 페이지에 다시 추가할 수 있습니다. 컨트롤 삭제에 대 한 자세한 내용은 참조는 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart%2A>메서드.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart%2A> 컨트롤을 닫는 숨길 수와 다른 이기도 합니다. 숨겨져 있는 컨트롤 인데 페이지에서 여전히 여전히 포함 페이지 수명 주기 이벤트에 참여 하 고 사용자의 보기에서 숨겨진만 닫힌된 컨트롤이 페이지에도 렌더링 되지 않습니다.       정적 및 동적 <xref:System.Web.UI.WebControls.WebParts.WebPart>(정적 컨트롤 동적 컨트롤의 프로그래밍 방식으로 추가 되는 동안 페이지의 태그에 선언 된) 컨트롤을 닫을 수 있습니다.</xref:System.Web.UI.WebControls.WebParts.WebPart>       개발자 AllowClose 속성을 설정 하는 경우 `false`, 닫기 동사는 컨트롤에 표시 되지 않으며 사용자가 컨트롤을 닫을 수 없습니다.       테마 또는 스타일 시트 테마가이 속성을 설정할 수 없습니다. 자세한 내용은 참조 <xref:System.Web.UI.ThemeableAttribute>및 [ASP.NET 테마와 스킨](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.ThemeableAttribute>       이 속성의 개인 설정 범위를 설정한 <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope>인증 된 사용자만 수정할 수 있습니다.</xref:System.Web.UI.WebControls.WebParts.PersonalizationScope> 자세한 내용은 참조 <xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>및 [웹 파트 개인 설정 개요](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>"
  example:
  - "The following code example demonstrates how to change the default setting of the AllowClose property for a custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control, so that it cannot be closed.  \n  \n The first part of this example contains the code for a custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control named `TextDisplayWebPart`. Note that in the constructor of the custom control, the `TextDisplayWebPart.AllowClose` property is set to `false`, which has the effect of preventing users from closing the control on a Web page. This means that the close verb on the verbs menu of the control will be disabled for users. For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This code example assumes that you compile the source code into an assembly, place it in a Bin subfolder of your Web application, and reference the assembly with a `Register` directive in your Web page. For a walkthrough that demonstrates both methods of compiling, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[WebParts_General_TextDisplayPart#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_362_1.vb)]\n [!code-cs[WebParts_General_TextDisplayPart#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_362_1.cs)]  \n  \n The second part of the example shows how to reference the `TextDisplayWebPart` control in an ASP.NET Web page. Note that in the `<aspSample:TextDisplayWebPart>` element that references the control, you could also change the value of the property set by the control's constructor. To allow the control to be closed, simply add an `AllowClose=\"true\"` attribute to the element in the declarative markup.  \n  \n [!code-cs[WebParts_General_TextDisplayPart#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_362_2.aspx)]\n [!code-vb[WebParts_General_TextDisplayPart#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_362_2.aspx)]"
  syntax:
    content: public virtual bool AllowClose { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>웹 페이지;에서 컨트롤을 닫을 수 있는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.WebParts.WebPart.AllowClose*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.AllowConnect
  id: AllowConnect
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: AllowConnect
  nameWithType: WebPart.AllowConnect
  fullName: System.Web.UI.WebControls.WebParts.WebPart.AllowConnect
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "표시 하는 값을 가져오거나 설정 합니다. 여부는 <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> 컨트롤을 사용 하면 연결 된 다른 컨트롤입니다."
  remarks: "페이지 태그에서 또는 프로그래밍 방식으로 속성 값을 선언적으로 설정할 수 있습니다.       테마 또는 스타일 시트 테마가이 속성을 설정할 수 없습니다. 자세한 내용은 참조 <xref:System.Web.UI.ThemeableAttribute>및 [ASP.NET 테마와 스킨](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.ThemeableAttribute>       이 속성의 개인 설정 범위를 설정한 <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope>인증 된 사용자만 수정할 수 있습니다.</xref:System.Web.UI.WebControls.WebParts.PersonalizationScope> 자세한 내용은 참조 <xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>및 [웹 파트 개인 설정 개요](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>"
  syntax:
    content: public virtual bool AllowConnect { get; set; }
    return:
      type: System.Boolean
      description: "컨트롤과 연결을 구성할 수 있는지 여부를 나타내는 부울 값입니다. 기본값은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.WebParts.WebPart.AllowConnect*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.AllowEdit
  id: AllowEdit
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: AllowEdit
  nameWithType: WebPart.AllowEdit
  fullName: System.Web.UI.WebControls.WebParts.WebPart.AllowEdit
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "최종 사용자는 수정할 수 있는지 여부를 나타내는 값을 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> 하나 이상에서 제공 하는 사용자 인터페이스 (UI)를 통해 컨트롤 <xref href=&quot;System.Web.UI.WebControls.WebParts.EditorPart&quot;> </xref> 컨트롤입니다."
  remarks: "최종 사용자가 편집할 수 있도록는 <xref:System.Web.UI.WebControls.WebParts.WebPart>컨트롤 AllowEdit 속성으로 설정 되어 있어야 `true` (기본값), 페이지의 디스플레이 모드 편집 모드에 있어야 합니다.</xref:System.Web.UI.WebControls.WebParts.WebPart> 디스플레이 모드의 필드로 표현 되는 <xref:System.Web.UI.WebControls.WebParts.WebPartManager>컨트롤.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> 이 경우의 모드는 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode>.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode> 페이지에 대 한 세부 정보 표시 모드 및 변경 하는 방법에 대 한 참조는 <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>클래스 개요.</xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>       AllowEdit 속성이로 설정 된 경우 `false` 선언적으로 또는 프로그래밍 방식으로 편집 옵션이 제한 됩니다. 편집 가능한 작업 페이지의 레이아웃에 대 한 변경만 사용 하는 <xref:System.Web.UI.WebControls.WebParts.LayoutEditorPart>컨트롤 또는 사용자 지정을 통해 사용 하도록 설정 하는 다른 기본 작업 <xref:System.Web.UI.WebControls.WebParts.EditorPart>컨트롤.</xref:System.Web.UI.WebControls.WebParts.EditorPart> </xref:System.Web.UI.WebControls.WebParts.LayoutEditorPart>       사용 하는 예제에 대 한 <xref:System.Web.UI.WebControls.WebParts.EditorPart>제어 설정 및 사용자 지정 웹 파트 컨트롤의 편집 기능을 사용 하는 방법을 보여 줍니다. 웹 파트에서 컨트롤 참조 [연습: 웹 파트 페이지 만들기](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.WebControls.WebParts.EditorPart>      > [!IMPORTANT] > AllowEdit 속성에 컨트롤의 동작에 미치는 영향을 주지도 웹 페이지의 현재 개인 설정 범위에 의해 영향을 하 고 해당 페이지에서 개별 웹 파트를 제어 합니다. 자세한 내용은 참조 [웹 파트 개인 설정 개요](~/add/includes/ajax-current-ext-md.md)합니다.       테마 또는 스타일 시트 테마가이 속성을 설정할 수 없습니다. 자세한 내용은 참조 <xref:System.Web.UI.ThemeableAttribute>및 [ASP.NET 테마와 스킨](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.ThemeableAttribute>       이 속성의 개인 설정 범위를 설정한 <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope>인증 된 사용자만 수정할 수 있습니다.</xref:System.Web.UI.WebControls.WebParts.PersonalizationScope> 자세한 내용은 참조 <xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>및 [웹 파트 개인 설정 개요](../Topic/Web%20Parts%20Personalization%20Overview.md).</xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>"
  example:
  - "The following code example demonstrates how to change the default setting of the AllowEdit property for a Web Parts control, so that the control cannot be edited. This example assumes the use of a <xref:System.Web.UI.WebControls.WebParts.WebPart> control, `TextDisplayWebPart`, which is found in the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPart> class overview.  \n  \n The code example also uses a custom user control that enables users to change display modes on a Web Parts page. The user control is referenced by means of a `Register` directive near the top of the Web page that hosts the user control. For a detailed description of how to create this user control and work with display modes, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_WebPart_AllowEdit#5](~/add/codesnippet/csharp/p-system.web.ui.webcontr_337_1.ascx)]\n [!code-vb[WebParts_WebPart_AllowEdit#5](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_337_1.ascx)]  \n  \n In the declarative markup for the Web page, on the `<aspSample:TextDisplayWebPart>` element that references the control, note the `AllowEdit=\"false\"` attribute. Although `true` is the default, the attribute has been set to `false` for the purposes of this example. Load the page in a browser and use the **Display Modes** drop-down list control to change the display mode to edit mode. Next, click the verbs menu in the title bar of the <xref:System.Web.UI.WebControls.WebParts.WebPart> control, and note that the edit verb is missing, because you disabled editing on the control.  \n  \n [!code-vb[WebParts_WebPart_AllowEdit#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_337_2.aspx)]\n [!code-cs[WebParts_WebPart_AllowEdit#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_337_2.aspx)]"
  syntax:
    content: public virtual bool AllowEdit { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우는 <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> 컨트롤 수 수정 없으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.WebParts.WebPart.AllowEdit*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.AllowHide
  id: AllowHide
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: AllowHide
  nameWithType: WebPart.AllowHide
  fullName: System.Web.UI.WebControls.WebParts.WebPart.AllowHide
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "최종 사용자가을 숨기려면 허용 되는지 여부를 나타내는 값을 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> 제어 합니다."
  remarks: "AllowHide 속성은 사용자가 수정할 수 있는지 여부가 결정는 <xref:System.Web.UI.WebControls.WebParts.WebPart.Hidden%2A>속성.</xref:System.Web.UI.WebControls.WebParts.WebPart.Hidden%2A> 속성 값이 경우에 기본 환경에서 `true`, 사용자가 컨트롤을 편집할 때 값을 변경할 수 있습니다. 기본적으로 컨트롤은 숨겨지지 및 해당 <xref:System.Web.UI.WebControls.WebParts.WebPart.Hidden%2A>속성 값은 `false`.</xref:System.Web.UI.WebControls.WebParts.WebPart.Hidden%2A> 경우는 <xref:System.Web.UI.WebControls.WebParts.WebPart>컨트롤 사용자가을 숨기기 확인란을 선택 하는 경우 편집 중인 (로 설정 하는 <xref:System.Web.UI.WebControls.WebParts.WebPart.Hidden%2A>속성을 `true`), 페이지에서 찾아보기 모드로 돌아갈 때 컨트롤은 더 이상 표시 되지.</xref:System.Web.UI.WebControls.WebParts.WebPart.Hidden%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart>       숨겨진된 컨트롤은 때문에 종료 하는 컨트롤에서 distinct는 <xref:System.Web.UI.WebControls.WebParts.WebPart.Hidden%2A>속성에는 웹 파트 컨트롤 집합 내에서 의미가 달라 집니다.</xref:System.Web.UI.WebControls.WebParts.WebPart.Hidden%2A> 닫힌된 컨트롤은 페이지에도 렌더링 되지 않으며 페이지 수명 주기 이벤트에 참여 하지 않습니다. 이와 달리 숨겨진에서 <xref:System.Web.UI.WebControls.WebParts.WebPart>컨트롤 사용자에 게 표시 되지 않습니다., 웹 페이지에 렌더링은 영역에 포함 되며 및 다른 연결을 유지할 수 있습니다 <xref:System.Web.UI.WebControls.WebParts.WebPart>웹 파트 응용 프로그램의 일부로 컨트롤.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPart>       테마 또는 스타일 시트 테마가이 속성을 설정할 수 없습니다. 자세한 내용은 참조 <xref:System.Web.UI.ThemeableAttribute>및 [ASP.NET 테마와 스킨](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.ThemeableAttribute>       이 속성의 개인 설정 범위를 설정한 <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope>인증 된 사용자만 수정할 수 있습니다.</xref:System.Web.UI.WebControls.WebParts.PersonalizationScope> 자세한 내용은 참조 <xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>및 [웹 파트 개인 설정 개요](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>"
  example:
  - "The following code example demonstrates how to change the default setting of the AllowHide property for a custom Web Parts control, so that the custom control cannot be hidden by a user. This example assumes the use of a custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control, `TextDisplayWebPart`, which is found in the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPart> class overview.  \n  \n The code example also uses a custom user control that enables users to change display modes on a Web Parts page. The user control is referenced by means of a `Register` directive near the top of the Web page that hosts the user control. For a detailed description of how to create this user control and work with display modes, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_WebPart_AllowHide#5](~/add/codesnippet/csharp/p-system.web.ui.webcontr_823_1.ascx)]\n [!code-vb[WebParts_WebPart_AllowHide#5](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_823_1.ascx)]  \n  \n In the declarative markup for the Web page, on the `<aspSample:TextDisplayWebPart>` element that references the control, note the `AllowHide=\"false\"` attribute, which prevents a user who is editing the control from being able to hide it. Load the page in a browser and use the **Display Mode** drop-down list control to change the display mode to edit mode. Next, click the verbs menu in the title bar of the <xref:System.Web.UI.WebControls.WebParts.WebPart> control and click the edit verb. As the edit user interface (UI) is displayed, you can see that the UI to edit the <xref:System.Web.UI.WebControls.WebParts.WebPart.Hidden%2A> property is now disabled, which occurred because you set the AllowHide property value to `false`.  \n  \n [!code-cs[WebParts_WebPart_AllowHide#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_823_2.aspx)]\n [!code-vb[WebParts_WebPart_AllowHide#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_823_2.aspx)]"
  syntax:
    content: public virtual bool AllowHide { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우는 <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> 컨트롤 수 숨겨진 없으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.WebParts.WebPart.AllowHide*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.AllowMinimize
  id: AllowMinimize
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: AllowMinimize
  nameWithType: WebPart.AllowMinimize
  fullName: System.Web.UI.WebControls.WebParts.WebPart.AllowMinimize
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "최종 사용자가 최소화할 수 있는지 여부를 나타내는 값을 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> 제어 합니다."
  remarks: "AllowMinimize 속성 경우로 설정 `false`, 최종 사용자가 컨트롤을 최소화 컨트롤의 제목 표시줄에 표시 되지 않는 컨트롤 및 사용자 인터페이스 (UI)를 최소화할 수 없게 되지 않도록 합니다. 웹 파트 용어로 AllowMinimize 속성이로 설정 되어 `false`, 최소화 동사 컨트롤의 동사 메뉴에 표시 되지 않습니다.       사용자 컨트롤을 최소화 하는 경우 컨트롤의 제목 표시줄 및 제목 부분만 표시 하는 최소 영역 컨트롤의 크기가 줄어듭니다.       테마 또는 스타일 시트 테마가이 속성을 설정할 수 없습니다. 자세한 내용은 참조 <xref:System.Web.UI.ThemeableAttribute>및 [ASP.NET 테마와 스킨](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.ThemeableAttribute>       이 속성의 개인 설정 범위를 설정한 <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope>인증 된 사용자만 수정할 수 있습니다.</xref:System.Web.UI.WebControls.WebParts.PersonalizationScope> 자세한 내용은 참조 <xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>및 [웹 파트 개인 설정 개요](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>"
  example:
  - "The following code example demonstrates how to change the default setting of the AllowMinimize property for a custom Web Parts control, so that the control cannot be minimized by a user. This example assumes the use of a custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control, `TextDisplayWebPart`, which is found in the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPart> class overview.  \n  \n In the declarative markup for the Web page, on the `<aspSample:TextDisplayWebPart>` element that references the control, note the `AllowMinimize=\"false\"` attribute, which hides the minimize verb in the <xref:System.Web.UI.WebControls.WebParts.WebPart> control's verbs menu, and prevents a user from being able to minimize the control. Load the page in a browser, and click the verbs menu on the <xref:System.Web.UI.WebControls.WebParts.WebPart> control. The minimize verb, which would normally be present on the verbs menu, is hidden because you disabled it in the declarative markup for the control.  \n  \n [!code-cs[WebParts_WebPart_AllowMinimize#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_409_1.aspx)]\n [!code-vb[WebParts_WebPart_AllowMinimize#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_409_1.aspx)]"
  syntax:
    content: public virtual bool AllowMinimize { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우는 <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> 컨트롤 수 최소화 없으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.WebParts.WebPart.AllowMinimize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.AllowZoneChange
  id: AllowZoneChange
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: AllowZoneChange
  nameWithType: WebPart.AllowZoneChange
  fullName: System.Web.UI.WebControls.WebParts.WebPart.AllowZoneChange
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "사용자 이동할 수 있는지 여부를 나타내는 값을 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> 간의 제어 <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> 영역입니다."
  remarks: "AllowZoneChange 속성이 `true`, 웹 페이지 (예: 편집 또는 디자인 모드) 레이아웃을 변경할 수 있는 디스플레이 모드에는, 사용자는 다른 컨트롤을 이동 하 여 페이지 레이아웃을 변경할 수 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>페이지의 영역에서.</xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 속성이로 설정 된 경우 `false`, 컨트롤 영역 간에 이동할 수 없습니다 되지만 현재 영역 내에서 이동할 수 있습니다.       테마 또는 스타일 시트 테마가이 속성을 설정할 수 없습니다. 자세한 내용은 참조 <xref:System.Web.UI.ThemeableAttribute>및 [ASP.NET 테마와 스킨](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.ThemeableAttribute>       이 속성의 개인 설정 범위를 설정한 <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope>인증 된 사용자만 수정할 수 있습니다.</xref:System.Web.UI.WebControls.WebParts.PersonalizationScope> 자세한 내용은 참조 <xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>및 [웹 파트 개인 설정 개요](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>"
  example:
  - "The following code example demonstrates how to change the default setting of the AllowZoneChange property for a custom Web Parts control, so that an end user cannot move the control to a different zone. This example assumes the use of a custom control, `TextDisplayWebPart`, which is found in the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPart> class overview.  \n  \n The code example also uses a custom user control that enables users to change display modes on a Web Parts page. The user control is referenced by means of a `Register` directive near the top of the Web page that hosts the user control. For a detailed description of how to create this user control and work with display modes, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[WebParts_WebPart_AllowZoneChange#5](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_159_1.ascx)]\n [!code-cs[WebParts_WebPart_AllowZoneChange#5](~/add/codesnippet/csharp/p-system.web.ui.webcontr_159_1.ascx)]  \n  \n In the declarative markup for the Web Page, on the second `<aspSample:TextDisplayWebPart>` element, note the `AllowZoneChange=\"false\"` attribute. At run time, an end user could drag the first control into **WebPartZone2**, but could not do the same with the second control. Load the page in a browser and use the **Display Mode** drop-down list control to change the display mode to design mode. Try to drag each of the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls into another zone, and note the different behavior based on the values of their AllowZoneChange properties.  \n  \n [!code-cs[WebParts_WebPart_AllowZoneChange#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_159_2.aspx)]\n [!code-vb[WebParts_WebPart_AllowZoneChange#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_159_2.aspx)]"
  syntax:
    content: public virtual bool AllowZoneChange { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우는 <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> 컨트롤 영역; 간에 이동할 수, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.WebParts.WebPart.AllowZoneChange*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter
  id: AuthorizationFilter
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: AuthorizationFilter
  nameWithType: WebPart.AuthorizationFilter
  fullName: System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "임의의 문자열을 가져오거나 설정 합니다. 여부는 <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> 페이지에 추가할 수 있는 컨트롤 인지 합니다."
  remarks: "웹 파트 컨트롤 집합 AuthorizationFilter 속성에 대 한 모든 기본 동작을 구현 하지 않습니다. 하지만이 속성은 사용자 지정을 임의의 문자열 값을 할당할 수 있도록 제공 <xref:System.Web.UI.WebControls.WebParts.WebPart>; 속성으로 확인할 수 있습니다는 <xref:System.Web.UI.WebControls.WebParts.WebPartManager>제어 하는 동안 해당 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart>페이지에는 컨트롤을 추가할 수 있는지 여부를 결정 하기 위해 이벤트.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPart>       일부 경우 특정 역할에 사용자가을 AuthorizationFilter 속성의 문자열 값은 개발자가 설정한 특정 조건을 충족 하는 경우 다음의 컨트롤을 추가할 수 있도록 AuthorizationFilter 속성을 ASP.NET 역할 관리자 기능을 사용할 수 있습니다. 이 방법을 통해 개발자는 역할 및 지정 하는 다른 권한 부여 조건을 조합에 따라 페이지의 사용자 지정 뷰를 만들 수 있습니다.       테마 또는 스타일 시트 테마가이 속성을 설정할 수 없습니다. 자세한 내용은 참조 <xref:System.Web.UI.ThemeableAttribute>및 [ASP.NET 테마와 스킨](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.ThemeableAttribute>       이 속성의 개인 설정 범위를 설정한 <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope>인증 된 사용자만 수정할 수 있습니다.</xref:System.Web.UI.WebControls.WebParts.PersonalizationScope> 자세한 내용은 참조 <xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>및 [웹 파트 개인 설정 개요](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>"
  example:
  - "The following code example demonstrates the use of the AuthorizationFilter property. It shows how to set a custom method handler for the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> event, so that the handler can provide custom filtering code for the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart%2A> method. This example would be a typical way for a page developer to provide a filtering scenario and authorization of <xref:System.Web.UI.WebControls.WebParts.WebPart> controls to be added to a page.  \n  \n In the Web page code, notice that the `<asp:webpartmanager>` element has the `OnAuthorizeWebPart` attribute with the name of the event handler assigned to it. This method checks whether the controls on the page have their AuthorizationFilter property value set to `admin`, and if so, returns `true`, which means that they will be authorized and added to the page.  \n  \n> [!NOTE]\n>  Note that controls that do not have any value assigned to the AuthorizationFilter property are added as well, because they are assumed not to be part of a filtering scenario. This would be a common approach in a filtering scenario: some controls would be filtered, and others would not be, because they are presumed to be available for all users.  \n  \n [!code-vb[WebParts_WebPartManager_AuthorizeWebPart#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_588_1.aspx)]\n [!code-cs[WebParts_WebPartManager_AuthorizeWebPart#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_588_1.aspx)]  \n  \n Because setting up users in roles is beyond the scope of this topic, this code example does not check user roles in the filtering. However, the scenario of filtering controls according to user roles is likely to be one of the most common uses of this filtering feature. If you have roles on your site, and you want to check user roles in this method to filter controls, the method would resemble the following code block (versus the simpler approach in the preceding code example that does not use roles).  \n  \n```  \nprotected void mgr1_AuthorizeWebPart(object sender,   \n  WebPartAuthorizationEventArgs e)  \n{  \n  if (!String.IsNullOrEmpty(e.AuthorizationFilter))  \n  {  \n    if(Roles.IsUserInRole(Page.User.Identity.Name, e.authorizationFilter))  \n      e.IsAuthorized = true;  \n    else  \n      e.IsAuthorized = false;  \n  }  \n}  \n```"
  syntax:
    content: public virtual string AuthorizationFilter { get; set; }
    return:
      type: System.String
      description: "컨트롤을 웹 페이지에 추가할 수 있는 권한을 부여 하는 문자열입니다. 기본값은 빈 문자열 (&quot;&quot;)."
  overload: System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.CatalogIconImageUrl
  id: CatalogIconImageUrl
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: CatalogIconImageUrl
  nameWithType: WebPart.CatalogIconImageUrl
  fullName: System.Web.UI.WebControls.WebParts.WebPart.CatalogIconImageUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "컨트롤의 카탈로그에서 웹 파트 컨트롤을 표시 하는 이미지에 대 한 URL을 가져오거나 설정 합니다."
  remarks: "이 속성의 개인 설정 범위를 설정한 <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope>인증 된 사용자만 수정할 수 있습니다.</xref:System.Web.UI.WebControls.WebParts.PersonalizationScope> 자세한 내용은 참조 <xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>및 [웹 파트 개인 설정 개요](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>"
  example:
  - "The following code example demonstrates how to set the CatalogIconImageUrl property for a <xref:System.Web.UI.WebControls.WebParts.WebPart> control, so that an image appears with the control in a catalog of controls. This example assumes the use of a custom control, `TextDisplayWebPart`, created in the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPart> class overview.  \n  \n The code example also uses a custom user control that enables users to change display modes on a Web Parts page. The user control is referenced by means of a `Register` directive near the top of the Web page that hosts the user control. For a detailed description of how to create this user control and work with display modes, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_WebPart_CatalogIconImageUrl#5](~/add/codesnippet/csharp/p-system.web.ui.webcontr_395_1.ascx)]\n [!code-vb[WebParts_WebPart_CatalogIconImageUrl#5](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_395_1.ascx)]  \n  \n In the declarative markup of the Web page, note the `<asp:CatalogZone>` element. Nested within it are several elements, including an `<aspSample:TextDisplayWebPart>` element. This set of elements enables the custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control to appear in a catalog. In the markup for the `<aspSample:TextDisplayWebPart>` element, notice that the `CatalogIconImageUrl` attribute is assigned a string that contains the URL to an image file. Load the page in a browser and use the **Display Mode** drop-down list control to change the display mode to catalog mode. Then use the catalog user interface (UI) to add the custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control to the page.  \n  \n [!code-vb[WebParts_WebPart_CatalogIconImageUrl#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_395_2.aspx)]\n [!code-cs[WebParts_WebPart_CatalogIconImageUrl#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_395_2.aspx)]"
  syntax:
    content: public virtual string CatalogIconImageUrl { get; set; }
    return:
      type: System.String
      description: "카탈로그에 컨트롤을 나타내는 데 사용 되는 이미지 URL을 나타내는 문자열입니다. 기본값은 빈 문자열 (&quot;&quot;)."
  overload: System.Web.UI.WebControls.WebParts.WebPart.CatalogIconImageUrl*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "내부 유효성 검사 시스템 URL 스크립트 공격 포함 될 수 있음을 확인 했습니다."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.ChromeState
  id: ChromeState
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: ChromeState
  nameWithType: WebPart.ChromeState
  fullName: System.Web.UI.WebControls.WebParts.WebPart.ChromeState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "일부 컨트롤은 최소화 또는 정상 상태에 있는지 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "파트 컨트롤의 ChromeState 속성 값 정상 또는 최소화 될 수 있습니다. <xref:System.Web.UI.WebControls.WebParts.WebPart>최종 사용자가 합니다. 개인 설정할 수 있도록 클래스 기본 속성을 재정의</xref:System.Web.UI.WebControls.WebParts.WebPart>       이 속성을 사용 하는 코드 예제를 보려면 기본 <xref:System.Web.UI.WebControls.WebParts.Part.ChromeState%2A>속성.</xref:System.Web.UI.WebControls.WebParts.Part.ChromeState%2A>"
  syntax:
    content: public override System.Web.UI.WebControls.WebParts.PartChromeState ChromeState { get; set; }
    return:
      type: System.Web.UI.WebControls.WebParts.PartChromeState
      description: "중 하나는 <xref href=&quot;System.Web.UI.WebControls.WebParts.PartChromeState&quot;> </xref> 값입니다. 기본값은 <xref href=&quot;System.Web.UI.WebControls.WebParts.PartChromeState&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.WebParts.WebPart.ChromeState*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "지정한 값이 중 하나는 <xref href=&quot;System.Web.UI.WebControls.WebParts.PartChromeState&quot;> </xref> 값입니다."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.ChromeType
  id: ChromeType
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: ChromeType
  nameWithType: WebPart.ChromeType
  fullName: System.Web.UI.WebControls.WebParts.WebPart.ChromeType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "웹 파트 컨트롤 프레임 테두리 유형을 가져오거나 설정 합니다."
  remarks: "일부 컨트롤의 <xref:System.Web.UI.WebControls.WebParts.WebPart.WebPartManager%2A>속성 컨트롤을 둘러싸는 테두리의 종류를 결정 합니다.</xref:System.Web.UI.WebControls.WebParts.WebPart.WebPartManager%2A> 옵션에도, 제목만만 테두리, 제목 및 테두리를 보여 주는 포함 하거나 단순히 값을 사용 하는 기본 옵션을는 <xref:System.Web.UI.WebControls.WebParts.WebZone.PartChromeType%2A>속성.</xref:System.Web.UI.WebControls.WebParts.WebZone.PartChromeType%2A>       <xref:System.Web.UI.WebControls.WebParts.WebPart>최종 사용자가 합니다. 개인 설정할 수 있도록 클래스 기본 속성을 재정의</xref:System.Web.UI.WebControls.WebParts.WebPart>       이 속성을 사용 하는 코드 예제를 보려면 기본 <xref:System.Web.UI.WebControls.WebParts.Part.ChromeType%2A>속성.</xref:System.Web.UI.WebControls.WebParts.Part.ChromeType%2A>"
  syntax:
    content: public override System.Web.UI.WebControls.WebParts.PartChromeType ChromeType { get; set; }
    return:
      type: System.Web.UI.WebControls.WebParts.PartChromeType
      description: "중 하나는 <xref href=&quot;System.Web.UI.WebControls.WebParts.PartChromeType&quot;> </xref> 값입니다. 기본값은 <xref href=&quot;System.Web.UI.WebControls.WebParts.PartChromeType&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.WebParts.WebPart.ChromeType*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "값 중 하나이 고 <xref href=&quot;System.Web.UI.WebControls.WebParts.PartChromeType&quot;> </xref> 값입니다."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.ConnectErrorMessage
  id: ConnectErrorMessage
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: ConnectErrorMessage
  nameWithType: WebPart.ConnectErrorMessage
  fullName: System.Web.UI.WebControls.WebParts.WebPart.ConnectErrorMessage
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "연결 하는 동안 오류가 발생 한 경우 사용자에 게 표시 하는 오류 메시지를 가져옵니다."
  remarks: "ConnectErrorMessage 속성의 콘텐츠는 웹 파트 컨트롤 집합에서 내부적으로 제공 됩니다."
  syntax:
    content: public string ConnectErrorMessage { get; }
    return:
      type: System.String
      description: "오류 메시지를 포함 하는 문자열입니다."
  overload: System.Web.UI.WebControls.WebParts.WebPart.ConnectErrorMessage*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.CreateEditorParts
  id: CreateEditorParts
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: CreateEditorParts()
  nameWithType: WebPart.CreateEditorParts()
  fullName: System.Web.UI.WebControls.WebParts.WebPart.CreateEditorParts()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "사용자 지정의 컬렉션을 반환 <xref href=&quot;System.Web.UI.WebControls.WebParts.EditorPart&quot;> </xref> 편집 하는 데 사용할 수 있는 컨트롤을 <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> 때 편집 모드에서 제어 합니다."
  remarks: "개발자가이 메서드를 사용 하 여 사용자 지정의 인스턴스를 만들 수 있습니다 <xref:System.Web.UI.WebControls.WebParts.EditorPart>연결 하고자 하는 컨트롤을 <xref:System.Web.UI.WebControls.WebParts.WebPart>컨트롤.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.EditorPart> 사용자가 클릭 하면 편집 동사 메서드가 호출 되는 <xref:System.Web.UI.WebControls.WebParts.WebPart>컨트롤.</xref:System.Web.UI.WebControls.WebParts.WebPart>      > [!NOTE] >의 새 인스턴스는 <xref:System.Web.UI.WebControls.WebParts.EditorPart>이 메서드에서 생성 된 컨트롤을를 추가 하려면 먼저 해당 ID 속성에 할당 된 값이 있어야 합니다.는 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts%2A>컬렉션.</xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts%2A> </xref:System.Web.UI.WebControls.WebParts.EditorPart>       CreateEditorParts 메서드를 사용 하는 코드 예제를 참조 하십시오.는 <xref:System.Web.UI.WebControls.WebParts.EditorPart>클래스 개요.</xref:System.Web.UI.WebControls.WebParts.EditorPart>"
  syntax:
    content: public virtual System.Web.UI.WebControls.WebParts.EditorPartCollection CreateEditorParts ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.WebParts.EditorPartCollection
      description: "<xref href=&quot;System.Web.UI.WebControls.WebParts.EditorPartCollection&quot;> </xref> 사용자 지정을 포함 하는 <xref href=&quot;System.Web.UI.WebControls.WebParts.EditorPart&quot;> </xref> 와 연관 된 컨트롤을 <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> 제어 합니다."
  overload: System.Web.UI.WebControls.WebParts.WebPart.CreateEditorParts*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.Description
  id: Description
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: Description
  nameWithType: WebPart.Description
  fullName: System.Web.UI.WebControls.WebParts.WebPart.Description
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "도구 설명 및 일부 컨트롤의 카탈로그에서 사용 하기 위해 일부 컨트롤의 용도 요약 하는 간단한 구문을 가져오거나 설정 합니다."
  remarks: "Description 속성은 일반적으로 고 파트 컨트롤의 제목 표시줄에 도구 설명 컨트롤에 다양 한 목록을 제공 하는 카탈로그에 사용 되는 문자열입니다. Description 속성의 내용을 파트 컨트롤의 제목 표시줄의 제목 텍스트 위에 마우스 포인터를 놓으면 도구 설명에 나타납니다. 도구 설명 텍스트의 값에서 생성 됩니다는 <xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A>속성, 하이픈, Description 속성 값을 옵니다.</xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A>       이 속성을 사용 하는 코드 예제를 보려면 기본 <xref:System.Web.UI.WebControls.WebParts.Part.Description%2A>속성.</xref:System.Web.UI.WebControls.WebParts.Part.Description%2A>       이 속성의 개인 설정 범위를 설정한 <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope>인증 된 사용자만 수정할 수 있습니다.</xref:System.Web.UI.WebControls.WebParts.PersonalizationScope> 자세한 내용은 참조 <xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>및 [웹 파트 개인 설정 개요](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>"
  syntax:
    content: public override string Description { get; set; }
    return:
      type: System.String
      description: "문자열 일부 컨트롤의 기능을는 간략히 요약 되어 있습니다. 기본값은 빈 문자열 (&quot;&quot;)."
  overload: System.Web.UI.WebControls.WebParts.WebPart.Description*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.Direction
  id: Direction
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: Direction
  nameWithType: WebPart.Direction
  fullName: System.Web.UI.WebControls.WebParts.WebPart.Direction
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "컨트롤 내에서 내용의 가로 방향을 가져오거나 설정 합니다."
  remarks: "<xref:System.Web.UI.WebControls.WebParts.WebPart>최종 사용자가 속성을 개인 설정할 수 있도록 클래스 기본 속성 값을 재정의 합니다.</xref:System.Web.UI.WebControls.WebParts.WebPart>"
  syntax:
    content: public override System.Web.UI.WebControls.ContentDirection Direction { get; set; }
    return:
      type: System.Web.UI.WebControls.ContentDirection
      description: "A <xref href=&quot;System.Web.UI.WebControls.ContentDirection&quot;> </xref> 내용의 가로 방향 흐름을 나타내는입니다."
  overload: System.Web.UI.WebControls.WebParts.WebPart.Direction*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle
  id: DisplayTitle
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: DisplayTitle
  nameWithType: WebPart.DisplayTitle
  fullName: System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "실제로의 제목 표시줄에 표시 되는 전체 제목 텍스트를 포함 하는 문자열을 가져옵니다는 <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> 컨트롤 인스턴스."
  remarks: "DisplayTitle 속성의 현재 값을 반환 된 <xref:System.Web.UI.WebControls.WebParts.Part.Title%2A>속성 또는 컨트롤에는 계산 된 값 제목이 없는 경우.</xref:System.Web.UI.WebControls.WebParts.Part.Title%2A> 영역 내에서 컨트롤의 인덱스에 따라 숫자 (있는 경우 영역 내에서 여러 개의 컨트롤)과 계산 된 값 제목 없는 컨트롤에 대 한 리소스를 지역화할 수 있는 문자열으로 구성 됩니다.       사용자 지정에 대 한 <xref:System.Web.UI.WebControls.WebParts.WebPart>컨트롤의 경우는 <xref:System.Web.UI.WebControls.WebParts.WebPart.Subtitle%2A>부제목으로 사용 하는 문자열 값을 반환할 속성은 재정의 DisplayTitle 속성 완전 제목이 되려면 부제목과 연결 됩니다.</xref:System.Web.UI.WebControls.WebParts.WebPart.Subtitle%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart>       사용자 컨트롤의 제목 표시줄 위로 마우스 포인터를 놓을 때 나타나는 도구 설명의 일부로 DisplayTitle 속성 값도 사용 됩니다. 전체 도구 설명 컨트롤의 값에 의해 뒤에 하이픈 DisplayTitle 값 이루어져 <xref:System.Web.UI.WebControls.WebParts.WebPart.Description%2A>속성.</xref:System.Web.UI.WebControls.WebParts.WebPart.Description%2A>"
  syntax:
    content: public string DisplayTitle { get; }
    return:
      type: System.String
      description: "컨트롤의 제목을 표시 하는 완료를 나타내는 문자열입니다. 기본값은 빈 문자열 (&quot;&quot;)."
  overload: System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.ExportMode
  id: ExportMode
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: ExportMode
  nameWithType: WebPart.ExportMode
  fullName: System.Web.UI.WebControls.WebParts.WebPart.ExportMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "가져오거나 여부 모두 중 일부 또는 <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> 컨트롤의 속성을 내보낼 수 있습니다."
  remarks: "기본적으로는 <xref:System.Web.UI.WebControls.WebParts.WebPart>컨트롤을 내보낼 수 없습니다 및 그 ExportMode 속성이 <xref:System.Web.UI.WebControls.WebParts.WebPartExportMode>.</xref:System.Web.UI.WebControls.WebParts.WebPartExportMode> 로 설정 되어</xref:System.Web.UI.WebControls.WebParts.WebPart> 내보내기는 컨트롤에 대 한 모든 속성을 사용 하도록 설정 하려면 <xref:System.Web.UI.WebControls.WebParts.WebPartExportMode>.</xref:System.Web.UI.WebControls.WebParts.WebPartExportMode> ExportMode 값 설정 <xref:System.Web.UI.WebControls.WebParts.WebPartExportMode>.</xref:System.Web.UI.WebControls.WebParts.WebPartExportMode> 속성 값을 설정 하면 특정 속성에 대해서만 중요 한 데이터를 포함 하는 속성은 내보내지 않고를 내보내려면       에 대 한 값 설명 속성을 내보내려면는 <xref:System.Web.UI.WebControls.WebParts.WebPart>컨트롤 속성 또한으로 표시 되어야 합니다는 `Personalizable` 속성의 소스 코드에 대 한 메타 데이터에 대 한 특성.</xref:System.Web.UI.WebControls.WebParts.WebPart> 자세한 내용은 참조 <xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>.</xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>      > [!NOTE] > 응용 프로그램에 대 한 Web.config 파일에서 웹 파트 컨트롤을 포함 하는 웹 응용 프로그램에 대 한 내보내기 기능을 사용 하려면 특성을 추가 해야는 `<webParts>` 내의 요소는 `<system.web>` 섹션에 다음 태그와 같이 합니다.   >> `<webParts  enableExport=&quot;true&quot;>` >> `</webParts>` 테마 또는 스타일 시트 테마가이 속성을 설정할 수 없습니다. 자세한 내용은 참조 <xref:System.Web.UI.ThemeableAttribute>및 [ASP.NET 테마와 스킨](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.ThemeableAttribute>       이 속성의 개인 설정 범위를 설정한 <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope>인증 된 사용자만 수정할 수 있습니다.</xref:System.Web.UI.WebControls.WebParts.PersonalizationScope> 자세한 내용은 참조 <xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>및 [웹 파트 개인 설정 개요](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>"
  example:
  - "The following code example demonstrates the use of the ExportMode property. Note that for the export code example to work, you must also update your Web.config file by adding the attribute `enableExport=\"true\"` to the `<webParts>` element, as indicated in the Remarks section.  \n  \n The first part of this example contains the code for a control named `TextDisplayWebPart`. This control is the same as the custom control that is found in the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPart> class overview, except that it adds a `Personalizable` attribute to the `TextDisplayWebPart.ContentText` property so the property can be exported. Note that the attribute declaration includes a value of `true` for the `isSensitive` parameter, meaning that the property is marked as sensitive data for export purposes. For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This code example assumes that you compile the source code into an assembly, place it in a Bin subfolder of your Web application, and reference the assembly with a `Register` directive in your Web page. For a walkthrough that demonstrates both methods of compiling, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[WebParts_WebPart_ExportMode#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_815_1.vb)]\n [!code-cs[WebParts_WebPart_ExportMode#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_815_1.cs)]  \n  \n The second part of the example shows how to reference the `TextDisplayWebPart` control in an ASP.NET Web page. Note that in the declarative markup, the ExportMode property value is set to <xref:System.Web.UI.WebControls.WebParts.WebPartExportMode>, meaning that even properties with sensitive values will be exported.  \n  \n [!code-cs[WebParts_WebPart_ExportMode#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_815_2.aspx)]\n [!code-vb[WebParts_WebPart_ExportMode#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_815_2.aspx)]  \n  \n Load the Web page in a browser, and on the verbs menu of the <xref:System.Web.UI.WebControls.WebParts.WebPart> control, click the export verb and follow the instructions to export a description file containing the control's state and property data."
  syntax:
    content: public virtual System.Web.UI.WebControls.WebParts.WebPartExportMode ExportMode { get; set; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartExportMode
      description: "중 하나는 <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartExportMode&quot;> </xref> 값입니다. 기본값은 <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartExportMode&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.WebParts.WebPart.ExportMode*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "지정한 값이 중 하나는 <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartExportMode&quot;> </xref> 값입니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "컨트롤이 이미 로드 하 고 컨트롤의 개인 설정 범위로 설정 되어는 <xref href=&quot;System.Web.UI.WebControls.WebParts.PersonalizationScope&quot;> </xref> 범위입니다."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.HasSharedData
  id: HasSharedData
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: HasSharedData
  nameWithType: WebPart.HasSharedData
  fullName: System.Web.UI.WebControls.WebParts.WebPart.HasSharedData
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "나타내는 값을 가져옵니다 여부는 <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> 컨트롤에 연결 된 공유 개인 설정 데이터가 있습니다."
  remarks: "이 속성에 설정 된 컨트롤 공유 범위에서 모든 사용자에 게 표시 하는 개인 설정 데이터를 의미 합니다. 개인 설정 데이터를 나타냅니다."
  syntax:
    content: public bool HasSharedData { get; }
    return:
      type: System.Boolean
      description: "컨트롤에 개인 설정 데이터를 공유 하는지 여부를 나타내는 부울 값입니다."
  overload: System.Web.UI.WebControls.WebParts.WebPart.HasSharedData*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.HasUserData
  id: HasUserData
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: HasUserData
  nameWithType: WebPart.HasUserData
  fullName: System.Web.UI.WebControls.WebParts.WebPart.HasUserData
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "나타내는 값을 가져옵니다 여부는 <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> 컨트롤에 연결 된 사용자 개인 설정 데이터가 있습니다."
  remarks: "이 속성, 컨트롤에 사용자가 해당 사용자 에게만 표시 되는 특정 설정을 즉, 사용자를 사용자 지정 개인 설정 데이터를 나타냅니다."
  syntax:
    content: public bool HasUserData { get; }
    return:
      type: System.Boolean
      description: "컨트롤에 사용자 개인 설정 데이터가 있는지 여부를 나타내는 부울 값입니다."
  overload: System.Web.UI.WebControls.WebParts.WebPart.HasUserData*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.Height
  id: Height
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: Height
  nameWithType: WebPart.Height
  fullName: System.Web.UI.WebControls.WebParts.WebPart.Height
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "영역의 높이 가져오거나 설정 합니다."
  remarks: "Internet Explorer 렌더링 모드를 <xref:System.Web.UI.WebControls.WebParts.WebPart>포함 하는 영역의 높이 컨트롤의</xref:System.Web.UI.WebControls.WebParts.WebPart> 높이 영향을 줄 수 있습니다. 호환 모드 (이전 버전의 브라우저와 호환) 또는 표준 모드에서 Internet Explorer에서 웹 페이지를 렌더링 (의 존재에 의해 결정 된 `DOCTYPE` 페이지에 선언이). 이러한 모드에 대 한 내용은 DHTML 참조 [compatMode](http://go.microsoft.com/fwlink/?LinkId=57175) 속성입니다.       Internet Explorer 표준 모드에서 페이지 렌더링 되 면 상황에 따라 것 수 크기를 조정 하지, 표 셀에에서 셀의 HTML 태그입니다. 경우에 `<td height=&quot;100%&quot;>`합니다. 결과적으로, <xref:System.Web.UI.WebControls.WebParts.WebPart>영역의 전체 높이 컨트롤 늘어나지 않도록 있도록 컨트롤 포함 하는 영역이 렌더링 됩니다.</xref:System.Web.UI.WebControls.WebParts.WebPart>       다음과 같은 경우에는 전체 높이 늘어나 컨트롤 렌더링 되지 않는 Internet Explorer 표준 모드에 있으면: 영역의- <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.LayoutOrientation%2A>속성이 <xref:System.Web.UI.WebControls.Orientation>영역 높이 명시적으로 설정 합니다.</xref:System.Web.UI.WebControls.Orientation> </xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.LayoutOrientation%2A> 영역의 전체 높이를 채우도록 컨트롤을 사용 하려면 가로 방향의 영역의 높이 지정 하지 마십시오.      -때 영역의 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.LayoutOrientation%2A>속성이 <xref:System.Web.UI.WebControls.Orientation>영역 또는 포함 된 컨트롤의 높이 명시적으로 설정 하지 마십시오.</xref:System.Web.UI.WebControls.Orientation> </xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.LayoutOrientation%2A> 영역의 전체 높이를 채우도록 컨트롤을 사용 하도록 설정 하려면 세로 방향된 영역에서 영역 또는 컨트롤의 높이 설정 합니다."
  example:
  - "The following code example demonstrates the rendering issue that affects the height of <xref:System.Web.UI.WebControls.WebParts.WebPart> controls in a <xref:System.Web.UI.WebControls.WebParts.WebPartZone>.  To demonstrate this issue, you must run the page in Internet Explorer.  \n  \n Note that the zone's orientation is set to horizontal, and that the height of the zone and the controls within it is not set explicitly.  The result is that in the <xref:System.Web.UI.WebControls.WebParts.WebPartZone>, the shorter <xref:System.Web.UI.WebControls.WebParts.WebPart> control does not stretch to the height of the zone upon rendering.  However, if you remove the `DOCTYPE` declaration from the page and run the page again, the issue does not occur, because now the browser will not render the page in standards mode.  \n  \n [!code-vb[WebParts_WebPart_Height#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_579_1.aspx)]\n [!code-cs[WebParts_WebPart_Height#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_579_1.aspx)]  \n  \n To see how the workaround (described in the Remarks section) works, try adding a `height` attribute to the `<asp:webpartzone>` element, while keeping the `DOCTYPE` declaration in the page.  You can use the following code to add the attribute to the tag:  \n  \n `Height=\"200px\"`  \n  \n Run the page, and now both <xref:System.Web.UI.WebControls.WebParts.WebPart> controls stretch to fill the explicitly declared height of the zone.  \n  \n You can also experiment with this code example to observe the height-related rendering issue in the other scenario, which occurs when the zone's <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.LayoutOrientation%2A> is set to <xref:System.Web.UI.WebControls.Orientation>.  Remove the existing `LayoutOrientation` attribute and its value from the `<asp:webpartzone>` element, which will cause the zone's orientation to revert to the default vertical orientation.  Set the height attribute on the `<asp:webpartzone>` element to 200 pixels, as you did above, and run the page.  The zone's height looks too large, and the controls are not sized proportionately to the zone's height.  Now remove the height attribute and run the page again.  The controls now render relative to the height of the zone."
  syntax:
    content: public override System.Web.UI.WebControls.Unit Height { get; set; }
    return:
      type: System.Web.UI.WebControls.Unit
      description: "A <xref href=&quot;System.Web.UI.WebControls.Unit&quot;> </xref> 의 높이 나타내는 개체는 <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZone&quot;> </xref>합니다. 기본 형식의 한 <xref href=&quot;System.Web.UI.WebControls.Unit&quot;> </xref> 는 픽셀에 표시 된 대로 <xref:System.Web.UI.WebControls.Unit.Type*>속성.</xref:System.Web.UI.WebControls.Unit.Type*>"
  overload: System.Web.UI.WebControls.WebParts.WebPart.Height*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.HelpMode
  id: HelpMode
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: HelpMode
  nameWithType: WebPart.HelpMode
  fullName: System.Web.UI.WebControls.WebParts.WebPart.HelpMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "사용자 인터페이스 (UI)에 대 한 도움말 콘텐츠를 표시 하는 데 사용의 형식을 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> 제어 합니다."
  remarks: "브라우저 컨트롤에 대 한 도움말 콘텐츠를 표시 되는 방법을 알아보려면 HelpMode 속성을 사용 합니다. 다음 표에서 브라우저에 대 한 다양 한 도움말 모드의 효과 보여 줍니다. 때 도움말에 대 한 콘텐츠는 <xref:System.Web.UI.WebControls.WebParts.WebPart>컨트롤이 표시 됩니다.</xref:System.Web.UI.WebControls.WebParts.WebPart>      | 도움말 모드 | 브라우저 동작 |   |---------------|----------------------|   | <xref:System.Web.UI.WebControls.WebParts.WebPartHelpMode>| 브라우저에이 기능이 있는 경우 별도 브라우저 창을 엽니다.</xref:System.Web.UI.WebControls.WebParts.WebPartHelpMode> 사용자는 웹 파트 페이지를 반환 하기 전에 창을 닫아야 합니다. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartHelpMode>| 브라우저에이 기능이 있는 경우 별도 브라우저 창을 엽니다.</xref:System.Web.UI.WebControls.WebParts.WebPartHelpMode> 사용자는 웹 페이지로 돌아가기 전에 창을 닫으려면 필요가 없습니다. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartHelpMode>| 브라우저 창에서 웹 파트 페이지를 대체 합니다. |       테마 또는 스타일 시트 테마가이 속성을 설정할 수 없습니다.</xref:System.Web.UI.WebControls.WebParts.WebPartHelpMode> 자세한 내용은 참조 <xref:System.Web.UI.ThemeableAttribute>및 [ASP.NET 테마와 스킨](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.ThemeableAttribute>       이 속성의 개인 설정 범위를 설정한 <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope>인증 된 사용자만 수정할 수 있습니다.</xref:System.Web.UI.WebControls.WebParts.PersonalizationScope> 자세한 내용은 참조 <xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>및 [웹 파트 개인 설정 개요](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>"
  example:
  - "The following code example demonstrates the use of the HelpMode property to display Help for a control in the same browser window. The first part of this example assumes the use of a custom control, `TextDisplayWebPart`, which is found in the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPart> class overview.  \n  \n The code example also includes an HTML page that contains fictitious Help content for the `TextDisplayWebPart` control. For this example to work, you must save the following code in a file named Textwebparthelp.htm and place it in the same directory of your site as the .aspx page.  \n  \n```  \n<html>  \n<head runat=\"server\">  \n    <title>Text Content WebPart Help</title>  \n</head>  \n<body>  \n  <div>  \n  <h1>Text Content WebPart Help</h1>  \n  To make the WebPart control work...  \n  </div>  \n</body>  \n</html>  \n```  \n  \n The final part of the example is a Web page that shows how to reference the `TextDisplayWebPart` control. Note that in the declarative markup, the HelpMode property value is set to <xref:System.Web.UI.WebControls.WebParts.WebPartHelpMode>, and the code also sets the value of the <xref:System.Web.UI.WebControls.WebParts.WebPart.HelpUrl%2A> property to the name of the HTML file that contains the Help content. Load the page into a browser, and click the help verb on the verbs menu of the <xref:System.Web.UI.WebControls.WebParts.WebPart> control.  \n  \n [!code-cs[WebParts_WebPart_HelpMode#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1121_1.aspx)]\n [!code-vb[WebParts_WebPart_HelpMode#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1121_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.WebParts.WebPartHelpMode HelpMode { get; set; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartHelpMode
      description: "중 하나는 <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartHelpMode&quot;> </xref> 값입니다. 기본값은 <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartHelpMode&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.WebParts.WebPart.HelpMode*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "지정한 값이 중 하나는 <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartHelpMode&quot;> </xref> 값입니다."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.HelpUrl
  id: HelpUrl
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: HelpUrl
  nameWithType: WebPart.HelpUrl
  fullName: System.Web.UI.WebControls.WebParts.WebPart.HelpUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "에 대 한 도움말 파일에 URL을 가져오거나는 <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> 제어 합니다."
  remarks: "동사 메뉴에서 도움말 동사 동사 메뉴를 사용 하도록 설정 하려면 한 <xref:System.Web.UI.WebControls.WebParts.WebPart>컨트롤 HelpUrl 속성에 대 한 값을 제공 해야 합니다.</xref:System.Web.UI.WebControls.WebParts.WebPart> 도움말 콘텐츠가 브라우저에 표시 되는 방식으로의 값에 의해 결정 되는 <xref:System.Web.UI.WebControls.WebParts.WebPart.HelpMode%2A>속성.</xref:System.Web.UI.WebControls.WebParts.WebPart.HelpMode%2A>       테마 또는 스타일 시트 테마가이 속성을 설정할 수 없습니다. 자세한 내용은 참조 <xref:System.Web.UI.ThemeableAttribute>및 [ASP.NET 테마와 스킨](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.ThemeableAttribute>       이 속성의 개인 설정 범위를 설정한 <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope>인증 된 사용자만 수정할 수 있습니다.</xref:System.Web.UI.WebControls.WebParts.PersonalizationScope> 자세한 내용은 참조 <xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>및 [웹 파트 개인 설정 개요](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>"
  example:
  - "The following code example demonstrates the use of the HelpUrl property. This example assumes the use of a custom control, `TextDisplayWebPart`, which is found in the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPart> class overview.  \n  \n The code example also includes an HTML page that contains fictitious Help content for the `TextDisplayWebPart` control. For this example to work, you must save the following code in a file named Textwebparthelp.htm and place it in the same directory of your site as the .aspx page.  \n  \n```  \n<html>  \n<head runat=\"server\">  \n    <title>Text Content WebPart Help</title>  \n</head>  \n<body>  \n  <div>  \n  <h1>Text Content WebPart Help</h1>  \n  To make the WebPart control work...  \n  </div>  \n</body>  \n</html>  \n```  \n  \n The final part of the example is a Web page that shows how to reference the `TextDisplayWebPart` control. Note that in the declarative markup, the <xref:System.Web.UI.WebControls.WebParts.WebPart.HelpMode%2A> property value is set to <xref:System.Web.UI.WebControls.WebParts.WebPartHelpMode>, and the code also sets the value of the HelpUrl property to the name of the HTML file that contains the Help content. Load the page into a browser, and click the help verb on the verbs menu of the <xref:System.Web.UI.WebControls.WebParts.WebPart> control.  \n  \n [!code-cs[WebParts_WebPart_HelpMode#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1034_1.aspx)]\n [!code-vb[WebParts_WebPart_HelpMode#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1034_1.aspx)]"
  syntax:
    content: public virtual string HelpUrl { get; set; }
    return:
      type: System.String
      description: "도움말 파일에 대 한 URL를 나타내는 문자열입니다. 기본값은 빈 문자열 (&quot;&quot;)."
  overload: System.Web.UI.WebControls.WebParts.WebPart.HelpUrl*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "내부 유효성 검사 시스템 URL 스크립트 공격 포함 될 수 있음을 확인 했습니다."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.Hidden
  id: Hidden
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: Hidden
  nameWithType: WebPart.Hidden
  fullName: System.Web.UI.WebControls.WebParts.WebPart.Hidden
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "나타내는 값을 가져오거나 여부는 <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> 컨트롤이 웹 페이지에 표시 됩니다."
  remarks: "A <xref:System.Web.UI.WebControls.WebParts.WebPart>해당 영역에 숨겨진된 여전히에 있는 컨트롤과 해당 페이지에서 실제로 렌더링 되 고에 참여 페이지 수명 주기 단계와 같은 `PreRender` 브라우저에 표시 되지 않는 경우에 단계.</xref:System.Web.UI.WebControls.WebParts.WebPart> 이 다릅니다 <xref:System.Web.UI.WebControls.WebParts.WebPart>닫힌 컨트롤은, 닫힌된 컨트롤 렌더링 되기 때문에 하지도 페이지에 숨겨진된 컨트롤은 렌더링 및 웹 파트 응용 프로그램에서 활성 상태인 경우에 사용자에 게 표시 되지 않습니다.</xref:System.Web.UI.WebControls.WebParts.WebPart> 웹 파트 컨트롤 집합 숨기는 <xref:System.Web.UI.WebControls.WebParts.WebPart>스타일 시트 (CSS) 계단식의 값으로 설정 하 여 컨트롤 `display:none`.</xref:System.Web.UI.WebControls.WebParts.WebPart>       컨트롤에 대 한 Hidden 속성 설정한 경우에 `true`, 컨트롤이 페이지에 현재 표시 모드 숨겨진된 컨트롤이 표시 될 수를 허용 하는 경우 계속 표시 됩니다. 예를 들어 편집 모드 편집할 수 있도록 숨겨진된 컨트롤이 표시 될 수 있습니다. 숨겨진된 컨트롤을 특정 디스플레이 모드에 표시 하는 경우 컨트롤의 제목을 컨트롤이 숨겨진된 상태에 있는지를 나타내는 문자열을 표시 합니다.       경우에 숨김 속성은 <xref:System.Web.UI.WebControls.WebParts.WebPart>로 설정 되어 `false`, 기본값, 컨트롤이 페이지에 표시 됩니다.</xref:System.Web.UI.WebControls.WebParts.WebPart> 되는 경우는 <xref:System.Web.UI.WebControls.WebParts.WebPart.AllowHide%2A>속성이 `false`, 최종 사용자는 Hidden 속성 값을 편집할 수 없습니다.</xref:System.Web.UI.WebControls.WebParts.WebPart.AllowHide%2A>       테마 또는 스타일 시트 테마가이 속성을 설정할 수 없습니다. 자세한 내용은 참조 <xref:System.Web.UI.ThemeableAttribute>및 [ASP.NET 테마와 스킨](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.ThemeableAttribute>"
  example:
  - "The following code example demonstrates the use of the Hidden property for a custom Web Parts control. This example assumes the use of a custom control, `TextDisplayWebPart`, which is found in the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPart> class overview.  \n  \n Notice that in the Web page, in the declarative markup for the `<aspSample:TextDisplayWebPart>` element, the `Hidden` attribute value is set to `true`. The `TextDisplayWebPart` control will not appear if the page is loaded in a browser. However, the control is still present on the page and in its zone, and it still could participate in connections with other <xref:System.Web.UI.WebControls.WebParts.WebPart> controls if you created those connections.  \n  \n [!code-cs[WebParts_WebPart_Hidden#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_207_1.aspx)]\n [!code-vb[WebParts_WebPart_Hidden#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_207_1.aspx)]"
  syntax:
    content: public virtual bool Hidden { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>경우는 <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> 컨트롤은 웹 페이지에 표시 되 고, 그렇지 않으면 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.WebParts.WebPart.Hidden*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.ImportErrorMessage
  id: ImportErrorMessage
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: ImportErrorMessage
  nameWithType: WebPart.ImportErrorMessage
  fullName: System.Web.UI.WebControls.WebParts.WebPart.ImportErrorMessage
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "오류가 발생 한 경우에 사용 되는 오류 메시지를 가져오거나 설정 합니다. 때는 <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> 컨트롤을 가져올 합니다."
  remarks: "ImportErrorMessage 속성을 사용 하면 사용자가 웹 파트 컨트롤의 카탈로그를 카탈로그로 파트 컨트롤의 설명 파일을 가져올 때 오류가 발생 하는 경우 표시 되는 사용자 지정 오류 메시지를 설정할 수 있습니다. 선언적으로 속성을 설정할 수 있습니다는 <xref:System.Web.UI.WebControls.WebParts.WebPart>컨트롤을 추가 `ImportErrorMessage` 후 오류 메시지 문자열을 할당 및 컨트롤의 여는 태그 내에서 특성</xref:System.Web.UI.WebControls.WebParts.WebPart> 속성 값을 프로그래밍 방식으로 설정할 수도 있습니다.       내보내기 및 가져오기 모두 보여 주는 전체 코드 예제입니다. <xref:System.Web.UI.WebControls.WebParts.WebPart>ImportErrorMessage 속성의 사용을 포함 하는 컨트롤을 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>클래스</xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> 참조</xref:System.Web.UI.WebControls.WebParts.WebPart> 에 대 한 웹 파트 설명 파일       이 속성의 값으로 설정 하면 디자이너 도구를 사용 하 여 리소스 파일에 자동으로 저장 될 수 있습니다. 자세한 내용은 참조 <xref:System.ComponentModel.LocalizableAttribute>및 [전역화 및 지역화](~/add/includes/ajax-current-ext-md.md).</xref:System.ComponentModel.LocalizableAttribute>       이 속성의 개인 설정 범위를 설정한 <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope>인증 된 사용자만 수정할 수 있습니다.</xref:System.Web.UI.WebControls.WebParts.PersonalizationScope> 자세한 내용은 참조 <xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>및 [웹 파트 개인 설정 개요](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>"
  syntax:
    content: public virtual string ImportErrorMessage { get; set; }
    return:
      type: System.String
      description: "오류 메시지를 포함 하는 문자열입니다. 기본값은 웹 파트 컨트롤 집합에서 제공 하는 표준 오류 메시지입니다."
  overload: System.Web.UI.WebControls.WebParts.WebPart.ImportErrorMessage*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.IsClosed
  id: IsClosed
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: IsClosed
  nameWithType: WebPart.IsClosed
  fullName: System.Web.UI.WebControls.WebParts.WebPart.IsClosed
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "나타내는 값을 가져옵니다 여부는 <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> 컨트롤이 웹 파트 페이지에서 현재 닫혀 있습니다."
  remarks: "A <xref:System.Web.UI.WebControls.WebParts.WebPart>닫힌 제어는 페이지에서 렌더링 되지 않으며 페이지 이벤트에 참여 하지 않습니다.</xref:System.Web.UI.WebControls.WebParts.WebPart> 그러나 페이지 카탈로그는 웹 파트 응용 프로그램에 의해 유지 관리 하 고 적절 한 사용자 인터페이스 (UI) 제공 된 경우 사용자가을 페이지에 다시 추가할 수 있습니다. 자세한 내용은 <xref:System.Web.UI.WebControls.WebParts.WebPart.AllowClose%2A>.</xref:System.Web.UI.WebControls.WebParts.WebPart.AllowClose%2A> 을 참조 하십시오."
  syntax:
    content: public bool IsClosed { get; }
    return:
      type: System.Boolean
      description: "컨트롤 닫혀 있는지 여부를 나타내는 부울 값입니다."
  overload: System.Web.UI.WebControls.WebParts.WebPart.IsClosed*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.IsShared
  id: IsShared
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: IsShared
  nameWithType: WebPart.IsShared
  fullName: System.Web.UI.WebControls.WebParts.WebPart.IsShared
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "나타내는 값을 가져옵니다 여부는 <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> 컨트롤은 공유이 웹 파트 페이지의 모든 사용자에 게 표시 되도록 즉 합니다."
  remarks: "공유 웹 파트 컨트롤을 웹 페이지의 모든 사용자에 게 표시 됩니다. 사용자 컨트롤을 제어 하는 페이지에 추가한 사용자 에게만 표시 되 고 사용자 고유의는 공유 컨트롤 반대로 합니다.       사용자가 공유 개인 설정 범위에서 페이지를 보고 하는 동안 동적 컨트롤 추가 되 면 컨트롤 공유 됩니다. 사용자가 사용자 개인 설정 범위에 있는 동안에 컨트롤이 추가 되 면 IsShared 속성 값에서 해당 컨트롤에 대 한 됩니다 `false`합니다.       에 대 한 자세한 내용은 공유 및 사용자 컨트롤 참조 [웹 파트 개인 설정 개요](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example demonstrates the use of the IsShared property for a custom Web Parts control. This example assumes the use of a custom control, `TextDisplayWebPart`, created in the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPart> class overview.  \n  \n When you load the Web page in a browser and click the **Check Sharing** button, the code checks the IsShared property on the `TextDisplayWebPart` control, and the value of the property is `true`, because the control is referenced as a static control in the declarative markup of the page.  \n  \n [!code-cs[WebParts_WebPart_IsShared#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_940_1.aspx)]\n [!code-vb[WebParts_WebPart_IsShared#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_940_1.aspx)]"
  syntax:
    content: public bool IsShared { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우는 <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> 컨트롤에 사용자 표시 유형을; 웹 페이지에 공유 그렇지 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.WebParts.WebPart.IsShared*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.IsStandalone
  id: IsStandalone
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: IsStandalone
  nameWithType: WebPart.IsStandalone
  fullName: System.Web.UI.WebControls.WebParts.WebPart.IsStandalone
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "나타내는 값을 가져옵니다 여부는 <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> 컨트롤 내에서 포함 되지 않음을 의미 하는 독립 실행형은는 <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> 영역입니다."
  syntax:
    content: public bool IsStandalone { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우는 <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> 컨트롤에 포함 되지 않은 한 <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> 입니다. 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.WebParts.WebPart.IsStandalone*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.IsStatic
  id: IsStatic
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: IsStatic
  nameWithType: WebPart.IsStatic
  fullName: System.Web.UI.WebControls.WebParts.WebPart.IsStatic
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "나타내는 값을 가져옵니다 여부는 <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> 컨트롤은 컨트롤 웹 파트 페이지의 태그에 선언 되며 프로그래밍 방식으로 페이지에 추가 되지 것을 의미 하는 정적 컨트롤을 합니다."
  remarks: "정적 <xref:System.Web.UI.WebControls.WebParts.WebPart>컨트롤은 웹 파트 페이지의 태그에 선언입니다.</xref:System.Web.UI.WebControls.WebParts.WebPart> 이와 달리 동적 <xref:System.Web.UI.WebControls.WebParts.WebPart>제어 하거나 프로그래밍 방식으로 추가 되므로 사용자가 컨트롤을 선택 하는 컨트롤의 카탈로그에서 실행 시 또는.</xref:System.Web.UI.WebControls.WebParts.WebPart>"
  syntax:
    content: public bool IsStatic { get; }
    return:
      type: System.Boolean
      description: "컨트롤이 정적 인지 여부를 나타내는 부울 값입니다."
  overload: System.Web.UI.WebControls.WebParts.WebPart.IsStatic*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.OnClosing(System.EventArgs)
  id: OnClosing(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: OnClosing(EventArgs)
  nameWithType: WebPart.OnClosing(EventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPart.OnClosing(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "사용자 지정 될 때 처리를 제공 하는 클래스를 파생 하는 설정 된 <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> 컨트롤이 웹 파트 페이지에서 닫혀 있습니다."
  remarks: "메서드는 <xref:System.Web.UI.WebControls.WebParts.WebPart>기본 클래스 구현이 포함 되어 있습니다.</xref:System.Web.UI.WebControls.WebParts.WebPart> 파생 된 <xref:System.Web.UI.WebControls.WebParts.WebPart>컨트롤 사용자 지정 컨트롤을 닫을 때 처리 방법을 제공 하는 데 필요한 경우 메서드를 재정의할 수 있습니다.</xref:System.Web.UI.WebControls.WebParts.WebPart> <xref:System.Web.UI.WebControls.WebParts.WebPartManager>파생된 클래스에서 구현을 제공 하는 경우 OnClosing 메서드를 자동으로 호출 하는 컨트롤</xref:System.Web.UI.WebControls.WebParts.WebPartManager>"
  syntax:
    content: protected virtual void OnClosing (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.WebParts.WebPart.OnClosing*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.OnConnectModeChanged(System.EventArgs)
  id: OnConnectModeChanged(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: OnConnectModeChanged(EventArgs)
  nameWithType: WebPart.OnConnectModeChanged(EventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPart.OnConnectModeChanged(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "사용자 지정 될 때 처리를 제공 하는 클래스를 파생 하는 설정 된 <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> 시작 하거나 다른 컨트롤에 연결 하는 프로세스를 종료 합니다."
  remarks: "메서드는 <xref:System.Web.UI.WebControls.WebParts.WebPart>기본 클래스 구현이 포함 되어 있습니다.</xref:System.Web.UI.WebControls.WebParts.WebPart>"
  syntax:
    content: protected virtual void OnConnectModeChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.WebParts.WebPart.OnConnectModeChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.OnDeleting(System.EventArgs)
  id: OnDeleting(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: OnDeleting(EventArgs)
  nameWithType: WebPart.OnDeleting(EventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPart.OnDeleting(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "사용자 지정 될 때 처리를 제공 하는 클래스를 파생 하는 설정 된 <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> 컨트롤이 웹 파트 페이지에서 영구적으로 제거 됩니다."
  remarks: "메서드는 <xref:System.Web.UI.WebControls.WebParts.WebPart>기본 클래스 구현이 포함 되어 있습니다.</xref:System.Web.UI.WebControls.WebParts.WebPart>"
  syntax:
    content: protected virtual void OnDeleting (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.WebParts.WebPart.OnDeleting*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.OnEditModeChanged(System.EventArgs)
  id: OnEditModeChanged(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: OnEditModeChanged(EventArgs)
  nameWithType: WebPart.OnEditModeChanged(EventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPart.OnEditModeChanged(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "사용자 지정 될 때 처리를 제공 하는 클래스를 파생 하는 설정 된 <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> 컨트롤이 입력 또는 편집 모드에서 벗어납니다."
  remarks: "메서드는 <xref:System.Web.UI.WebControls.WebParts.WebPart>기본 클래스 구현이 포함 되어 있습니다.</xref:System.Web.UI.WebControls.WebParts.WebPart>"
  syntax:
    content: protected virtual void OnEditModeChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.WebParts.WebPart.OnEditModeChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.SetPersonalizationDirty
  id: SetPersonalizationDirty
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: SetPersonalizationDirty()
  nameWithType: WebPart.SetPersonalizationDirty()
  fullName: System.Web.UI.WebControls.WebParts.WebPart.SetPersonalizationDirty()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "현재에 대 한 개인 설정 데이터가 변경 되었음을 나타내는 플래그를 설정 <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> 컨트롤 인스턴스."
  remarks: "SetPersonalizationDirty 메서드 컨트롤 상태 데이터가 변경 된 것 (개인)를 나타내는 플래그를 설정는 <xref:System.Web.UI.WebControls.WebParts.WebPart>컨트롤과 하는 <xref:System.Web.UI.WebControls.WebParts.WebPartManager>제어 따라서 장기 저장소에 개인 설정 데이터를 유지 해야 합니다.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPart>       일반적으로 <xref:System.Web.UI.WebControls.WebParts.WebPartManager>에 개인 설정 변경 내용을 계속 되 면 <xref:System.Web.UI.WebControls.WebParts.WebPart>SetPersonalizationDirty 메서드를 호출 하는 개발자를 위한 필요 없이 컨트롤.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> 하지만 두 가지 경우에는 개발자가 필요가이 메서드를 호출 합니다. 첫 번째 경우는 컨트롤 상태 데이터는 HTTP 동안 변경 된 경우 `GET` 페이지를 요청 합니다. 기본적으로 변경 하는 동안 컨트롤 상태 데이터는 `GET` 요청 (보안을 위해) 유지 되지 않습니다. SetPersonalizationDirty 메서드에 적절 한 개인 설정 변경 내용을 유지 하는 방법을 제공 하지만 <xref:System.Web.UI.WebControls.WebParts.WebPart>이 경우를 제어 합니다.</xref:System.Web.UI.WebControls.WebParts.WebPart>       HTTP 중 SetPersonalizationDirty 메서드를 호출 하는 것에 대 한 두 번째 경우에 발생 `POST` 페이지를 요청 합니다. 경우는 <xref:System.Web.UI.WebControls.WebParts.WebPart>컨트롤에 복잡 한 개인 설정 가능한 속성 (포함 된 속성과 같이 <xref:System.Collections.ArrayList>개체), 이러한 속성의 컨트롤 상태 데이터 중 개인 설정 되 고는 `POST` 요청, 개발자는 변경 내용이 유지 됩니다 되도록 SetPersonalizationDirty 메서드를 호출 해야 합니다.</xref:System.Collections.ArrayList> </xref:System.Web.UI.WebControls.WebParts.WebPart>"
  syntax:
    content: protected void SetPersonalizationDirty ();
    parameters: []
  overload: System.Web.UI.WebControls.WebParts.WebPart.SetPersonalizationDirty*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.Web.UI.WebControls.WebParts.WebPart.WebPartManager*>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.</xref:System.Web.UI.WebControls.WebParts.WebPart.WebPartManager*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.SetPersonalizationDirty(System.Web.UI.Control)
  id: SetPersonalizationDirty(System.Web.UI.Control)
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: SetPersonalizationDirty(Control)
  nameWithType: WebPart.SetPersonalizationDirty(Control)
  fullName: System.Web.UI.WebControls.WebParts.WebPart.SetPersonalizationDirty(Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "에 있는 지정 된 서버 컨트롤에 대 한 개인 설정 데이터가 변경 되었음을 나타내는 플래그를 설정 하는 <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> 영역입니다."
  remarks: "SetPersonalizationDirty 메서드에 동일한 목적으로는 <xref:System.Web.UI.WebControls.WebParts.WebPart.SetPersonalizationDirty?displayProperty=fullName>컨트롤 상태 데이터는 변경 되었음을 나타내는 (개인) 서버 컨트롤에는 HTTP 중 플래그를 설정 하는 메서드를 `GET` 요청.</xref:System.Web.UI.WebControls.WebParts.WebPart.SetPersonalizationDirty?displayProperty=fullName> 이러한 방법 간의 차이점은 SetPersonalizationDirty 메서드에서 상속 되지 않는 서버 컨트롤에 사용 되는 <xref:System.Web.UI.WebControls.WebParts.WebPart>클래스 내에 배치 됩니다 같지만 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>웹 파트 응용 프로그램에 참여 합니다.</xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> </xref:System.Web.UI.WebControls.WebParts.WebPart>"
  syntax:
    content: public static void SetPersonalizationDirty (System.Web.UI.Control control);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "<xref href=&quot;System.Web.UI.Control&quot;> </xref> 를 개인 설정 데이터가 변경 되었습니다."
  overload: System.Web.UI.WebControls.WebParts.WebPart.SetPersonalizationDirty*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "개체는 <code> control </code> 매개 변수는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "컨트롤에서 파생 <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref>합니다. 파생 된 컨트롤 <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> 보호 된 사용할지 <xref:System.Web.UI.WebControls.WebParts.WebPart.SetPersonalizationDirty*>메서드 대신.</xref:System.Web.UI.WebControls.WebParts.WebPart.SetPersonalizationDirty*>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "컨트롤과 연결 된 페이지에는 <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.Subtitle
  id: Subtitle
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: Subtitle
  nameWithType: WebPart.Subtitle
  fullName: System.Web.UI.WebControls.WebParts.WebPart.Subtitle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "연결 된 문자열을 가져옵니다는 <xref:System.Web.UI.WebControls.WebParts.WebPart.Title*>속성 값에 대 한 완전 제목을 구성 하기는 <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> 컨트롤.</xref:System.Web.UI.WebControls.WebParts.WebPart.Title*>"
  remarks: "필요에 따라 부제목 속성을 사용 하 여 사용자 지정에는 표준 부제목 문자열을 반환할 <xref:System.Web.UI.WebControls.WebParts.WebPart>컨트롤을 컨트롤의 제목에 추가 됩니다.</xref:System.Web.UI.WebControls.WebParts.WebPart>       사용자 지정에서 부제목 속성에 대 한 값을 제공 하는 경우 <xref:System.Web.UI.WebControls.WebParts.WebPart>컨트롤을 자동으로 설정 하는 컨트롤의 값에 항목을 추가 하 여 웹 파트는 <xref:System.Web.UI.WebControls.WebParts.WebPart.Title%2A>속성을 컨트롤에 대 한 완전 제목을 만들.</xref:System.Web.UI.WebControls.WebParts.WebPart.Title%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart>       이 속성의 값으로 설정 하면 디자이너 도구를 사용 하 여 리소스 파일에 자동으로 저장 될 수 있습니다. 자세한 내용은 참조 <xref:System.ComponentModel.LocalizableAttribute>및 [전역화 및 지역화](~/add/includes/ajax-current-ext-md.md).</xref:System.ComponentModel.LocalizableAttribute>"
  example:
  - "The following code example demonstrates how to provide a subtitle for instances of a custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control.  \n  \n The first part of this example contains the code for a custom control named `TextDisplayWebPart`. This control is the same as the custom control which is found in the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPart> class overview, except that it also overrides the Subtitle property to provide a standard subtitle containing a fictitious company name for instances of the custom control. For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This code example assumes that you compile the source code into an assembly, place it in a Bin subfolder of your Web application, and reference the assembly with a `Register` directive in your Web page. For a walkthrough that demonstrates both methods of compiling, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_WebPart_Subtitle#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_430_1.cs)]\n [!code-vb[WebParts_WebPart_Subtitle#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_430_1.vb)]  \n  \n The second part of the example is a Web page that shows how to reference the `TextDisplayWebPart` control in an ASP.NET Web page. After you load the page in a browser, the control's title bar text includes the title assigned to the control in the declarative markup, a hyphen separator, and the value of the custom subtitle from the `TextDisplayWebPart` control.  \n  \n [!code-vb[WebParts_WebPart_Subtitle#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_430_2.aspx)]\n [!code-cs[WebParts_WebPart_Subtitle#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_430_2.aspx)]"
  syntax:
    content: public virtual string Subtitle { get; }
    return:
      type: System.String
      description: "컨트롤에 대 한 부제목으로 사용 되는 문자열입니다. 기본값은 빈 문자열 (&quot;&quot;)."
  overload: System.Web.UI.WebControls.WebParts.WebPart.Subtitle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.Title
  id: Title
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: Title
  nameWithType: WebPart.Title
  fullName: System.Web.UI.WebControls.WebParts.WebPart.Title
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "일부 컨트롤의 제목을 가져오거나 설정 합니다."
  remarks: "Title 속성에 값을 할당 하는 개발자 다음 모든 값을 결정 하는 경우 (또는의 일부) 컨트롤의 제목 표시줄의 텍스트입니다. 제목 텍스트 도구 설명 텍스트의 일부분으로의 제목 표시줄 위로 마우스 포인터를 놓으면도 표시는 <xref:System.Web.UI.WebControls.WebParts.WebPart>컨트롤 또는 다른 서버 컨트롤에 표시 되는 <xref:System.Web.UI.WebControls.WebParts.WebPartZone>영역.</xref:System.Web.UI.WebControls.WebParts.WebPartZone> </xref:System.Web.UI.WebControls.WebParts.WebPart>       컨트롤의 제목 표시줄에 표시 되는 전체 텍스트에 따라서도 <xref:System.Web.UI.WebControls.WebParts.WebPart.Subtitle%2A>속성.</xref:System.Web.UI.WebControls.WebParts.WebPart.Subtitle%2A> 해당 속성에 할당 된 값이 있으면 값 제목에 연결 됩니다. 값이 없는 Title 속성에 할당 된 경우에 계산 된 제목이 표시 됩니다. 언제 든 지 개발자가 표시 되는 실제, 전체 텍스트를 검색할 수는 <xref:System.Web.UI.WebControls.WebParts.WebPart>컨트롤의 제목 표시줄의 값을 가져와서는 <xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A>속성.</xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart>       제목 텍스트의 스타일에 따라 결정 됩니다는 <xref:System.Web.UI.WebControls.WebParts.WebZone.PartTitleStyle%2A>파트 컨트롤을 포함 하는 영역의 속성.</xref:System.Web.UI.WebControls.WebParts.WebZone.PartTitleStyle%2A>       기본 속성의 사용을 보여 주는 코드 예제를 참조 하십시오.는 <xref:System.Web.UI.WebControls.WebParts.Part.Title%2A>속성.</xref:System.Web.UI.WebControls.WebParts.Part.Title%2A>"
  syntax:
    content: public override string Title { get; set; }
    return:
      type: System.String
      description: "일부 컨트롤의 제목을 나타내는 문자열입니다. 기본값은 빈 문자열 (&quot;&quot;)."
  overload: System.Web.UI.WebControls.WebParts.WebPart.Title*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.TitleIconImageUrl
  id: TitleIconImageUrl
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: TitleIconImageUrl
  nameWithType: WebPart.TitleIconImageUrl
  fullName: System.Web.UI.WebControls.WebParts.WebPart.TitleIconImageUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "컨트롤의 제목 표시줄에 웹 파트 컨트롤을 나타내는 데 사용 되는 이미지의 URL을 가져오거나 설정 합니다."
  remarks: "이 속성의 개인 설정 범위를 설정한 <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope>인증 된 사용자만 수정할 수 있습니다.</xref:System.Web.UI.WebControls.WebParts.PersonalizationScope> 자세한 내용은 참조 <xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>및 [웹 파트 개인 설정 개요](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>"
  example:
  - "The following code example demonstrates how to set the TitleIconImageUrl property for a custom Web Parts control, so that the control appears with an image in a catalog of controls. This example assumes the use of a custom control, `TextDisplayWebPart`, created in the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPart> class overview.  \n  \n In the declarative markup of the Web page, note the `<aspSample:TextDisplayWebPart>` element. Its `TitleIconImageUrl` attribute is assigned a string that contains the URL to an image file. Load the page in a browser, and if you provided a legitimate URL to an image, the image appears in the title bar of the <xref:System.Web.UI.WebControls.WebParts.WebPart> control.  \n  \n [!code-cs[WebParts_WebPart_TitleIconImageUrl#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_186_1.aspx)]\n [!code-vb[WebParts_WebPart_TitleIconImageUrl#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_186_1.aspx)]"
  syntax:
    content: public virtual string TitleIconImageUrl { get; set; }
    return:
      type: System.String
      description: "제목 표시줄에 컨트롤을 나타내는 데 사용 되는 이미지 URL을 나타내는 문자열입니다. 기본값은 빈 문자열 (&quot;&quot;)."
  overload: System.Web.UI.WebControls.WebParts.WebPart.TitleIconImageUrl*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "내부 유효성 검사 시스템 URL 스크립트 공격 포함 될 수 있음을 확인 했습니다."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.TitleUrl
  id: TitleUrl
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: TitleUrl
  nameWithType: WebPart.TitleUrl
  fullName: System.Web.UI.WebControls.WebParts.WebPart.TitleUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "에 대 한 추가 정보에 대 한 URL을 가져오거나는 <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> 제어 합니다."
  remarks: "TitleUrl 속성에 URL을 할당 하는 경우 컨트롤의 제목을 컨트롤에 대 한 추가 정보를 링크로 사용 됩니다. 페이지가 디자인, 편집 또는 카탈로그 모드와 같은 컨트롤을 놓을 수 있습니다는 디스플레이 모드에 있을 때 URL 렌더링 되지 않습니다.       테마 또는 스타일 시트 테마가이 속성을 설정할 수 없습니다. 자세한 내용은 참조 <xref:System.Web.UI.ThemeableAttribute>및 [ASP.NET 테마와 스킨](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.ThemeableAttribute>       이 속성의 개인 설정 범위를 설정한 <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope>인증 된 사용자만 수정할 수 있습니다.</xref:System.Web.UI.WebControls.WebParts.PersonalizationScope> 자세한 내용은 참조 <xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>및 [웹 파트 개인 설정 개요](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>"
  example:
  - "The following code example demonstrates how to set the TitleUrl property for a custom Web Parts control. This example assumes the use of a custom control, `TextDisplayWebPart`, which is found in the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPart> class overview.  \n  \n Notice that the `<aspSample:TextDisplayWebPart>` element contains the `TitleUrl` attribute with a fictitious URL. If you load the page in a browser, the title of the <xref:System.Web.UI.WebControls.WebParts.WebPart> control is now a link to the resource pointed to by the TitleUrl property.  \n  \n [!code-cs[WebParts_WebPart_TitleUrl#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_574_1.aspx)]\n [!code-vb[WebParts_WebPart_TitleUrl#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_574_1.aspx)]"
  syntax:
    content: public virtual string TitleUrl { get; set; }
    return:
      type: System.String
      description: "추가 정보에 대 한 URL을 나타내는 문자열의 <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> 제어 합니다. 기본값은 빈 문자열 (&quot;&quot;)."
  overload: System.Web.UI.WebControls.WebParts.WebPart.TitleUrl*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "내부 유효성 검사 시스템 URL 스크립트 공격 포함 될 수 있음을 확인 했습니다."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.TrackViewState
  id: TrackViewState
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: TrackViewState()
  nameWithType: WebPart.TrackViewState()
  fullName: System.Web.UI.WebControls.WebParts.WebPart.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "개체에 저장할 수 있도록 해당 뷰 상태의 변경 내용을 추적 하 고 컨트롤 <xref:System.Web.UI.Control.ViewState*>속성.</xref:System.Web.UI.Control.ViewState*>"
  syntax:
    content: protected override void TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.WebParts.WebPart.TrackViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.Verbs
  id: Verbs
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: Verbs
  nameWithType: WebPart.Verbs
  fullName: System.Web.UI.WebControls.WebParts.WebPart.Verbs
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "와 연결 된 사용자 지정 동사 컬렉션을 가져옵니다는 <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> 제어 합니다."
  remarks: "파생 되는 동사는 <xref:System.Web.UI.WebControls.WebParts.WebPartVerb>클래스 및 인터페이스 (UI) 작업에서 사용자가 수행할 수 있는 사용자 제공는 <xref:System.Web.UI.WebControls.WebParts.WebPart>컨트롤.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartVerb> 일반적으로 동사 단추, 링크 또는 메뉴 항목으로 UI에 표시 됩니다. 기본적으로 공용 웹 파트 동사 각 <xref:System.Web.UI.WebControls.WebParts.WebPart>컨트롤의 제목 표시줄</xref:System.Web.UI.WebControls.WebParts.WebPart> 에 있는 드롭 다운 동사 메뉴에 표시 열기, 닫기, 편집 및 컨트롤과 해당 컨트롤에 대 한 정의 내보내기 또는 도움말 파일을 로드 다른 동사를 최소화 하기 위한 표준 동사가 있습니다. 파생된 클래스에서이 속성을 재정의 하 여 반환 하는 사용자 지정 동사 포함 되므로 이러한 동사 동사 컬렉션에 포함 되지 않습니다.       사용자 지정 동사를 만들고 동사 컬렉션에 추가할 때 액세스할 수 있습니다에서 프로그래밍 방식으로 동사는 <xref:System.Web.UI.WebControls.WebParts.WebPart>컨트롤.</xref:System.Web.UI.WebControls.WebParts.WebPart>"
  example:
  - "The following code example demonstrates how to access the Verbs property for a custom Web Parts control. This example assumes the use of a custom control, `TextDisplayWebPart`, created in the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPart> class overview.  \n  \n Note that for the code example to work, you must add a setting in the Web.config file to enable exporting Web Parts description files. Ensure that you have a Web.config file in the same directory as the Web page for this code example. Within the `<system.web>` section, make sure there is a `<webParts>` element with an `enableExport` attribute set to `true`, as in the following markup.  \n  \n `<webParts enableExport=\"true\">`  \n  \n `...`  \n  \n `</webParts>`  \n  \n Load the Web page in a browser. When you click the **Display Verb Count** button, it accesses the Verbs property to get the count of custom verbs for the `TextDisplayWebPart` control, and displays the count in a label. Because no custom verbs have been added to the control in this case, the count is zero.  \n  \n [!code-cs[WebParts_WebPart_Verbs#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_673_1.aspx)]\n [!code-vb[WebParts_WebPart_Verbs#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_673_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.WebParts.WebPartVerbCollection Verbs { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartVerbCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartVerbCollection&quot;> </xref> 사용자 지정을 포함 하는 <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartVerb&quot;> </xref> 와 연결 된 개체는 <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> 제어 합니다. 기본값은 <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartVerbCollection.Empty&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.WebParts.WebPart.Verbs*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.WebBrowsableObject
  id: WebBrowsableObject
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: WebBrowsableObject
  nameWithType: WebPart.WebBrowsableObject
  fullName: System.Web.UI.WebControls.WebParts.WebPart.WebBrowsableObject
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "에 대 한 참조는 <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> 사용자 지정 하 여 편집할 수 있도록 컨트롤을 <xref href=&quot;System.Web.UI.WebControls.WebParts.EditorPart&quot;> </xref> 컨트롤입니다."
  remarks: "사용자 지정을 만드는 경우 <xref:System.Web.UI.WebControls.WebParts.WebPart>컨트롤과 관련 된 사용자 지정을 만들 수도 <xref:System.Web.UI.WebControls.WebParts.EditorPart>런타임에 사용자가 컨트롤을 편집할 수 있도록 하는 컨트롤을 구현 해야 합니다는 <xref:System.Web.UI.WebControls.WebParts.IWebEditable>WebBrowsableObject 속성을 포함 하는 인터페이스입니다.</xref:System.Web.UI.WebControls.WebParts.IWebEditable> </xref:System.Web.UI.WebControls.WebParts.EditorPart> </xref:System.Web.UI.WebControls.WebParts.WebPart>       경우는 <xref:System.Web.UI.WebControls.WebParts.WebPart>컨트롤이 편집 모드로 전환, WebBrowsableObject 속성으로 <xref:System.Web.UI.WebControls.WebParts.EditorZone>제어 되는 <xref:System.Web.UI.WebControls.WebParts.WebPart>제어 하 고 사용자 지정 <xref:System.Web.UI.WebControls.WebParts.EditorPart>컨트롤을 편집 합니다.</xref:System.Web.UI.WebControls.WebParts.EditorPart> 사용 하도록 설정</xref:System.Web.UI.WebControls.WebParts.WebPart> 에 대 한 참조를 얻으려고</xref:System.Web.UI.WebControls.WebParts.EditorZone> 라고 합니다.</xref:System.Web.UI.WebControls.WebParts.WebPart>"
  syntax:
    content: public virtual object WebBrowsableObject { get; }
    return:
      type: System.Object
      description: "A &lt;xref:System.Object?displayProperty=fullName&gt; 의 자식 컨트롤을 구성 하는 <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> 제어 합니다."
  overload: System.Web.UI.WebControls.WebParts.WebPart.WebBrowsableObject*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.WebPartManager
  id: WebPartManager
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: WebPartManager
  nameWithType: WebPart.WebPartManager
  fullName: System.Web.UI.WebControls.WebParts.WebPart.WebPartManager
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "에 대 한 참조는 <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> 와 연결 된 컨트롤을 <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> 컨트롤 인스턴스."
  remarks: "웹 파트 페이지에는 항상 단일 인스턴스의는 <xref:System.Web.UI.WebControls.WebParts.WebPartManager>컨트롤.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> <xref:System.Web.UI.WebControls.WebParts.WebPartManager>추적 하 고는 기본 <xref:System.Web.UI.WebControls.WebParts.WebZone>클래스 및 기본 <xref:System.Web.UI.WebControls.WebParts.Part>클래스</xref:System.Web.UI.WebControls.WebParts.Part> 에서 파생 되는 모든 파트 컨트롤에서</xref:System.Web.UI.WebControls.WebParts.WebZone> 파생 되는 모든 영역을 포함 하는 페이지의 모든 다른 웹 파트 컨트롤을 관리 하는 컨트롤</xref:System.Web.UI.WebControls.WebParts.WebPartManager>       WebPartManager 속성이 존재 하도록 모든 <xref:System.Web.UI.WebControls.WebParts.WebPart>컨트롤에 연결할 수 있는 해당 <xref:System.Web.UI.WebControls.WebParts.WebPartManager>컨트롤.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPart> <xref:System.Web.UI.WebControls.WebParts.WebPartManager>컨트롤에서 유지 관리의 모든 컬렉션은 <xref:System.Web.UI.WebControls.WebParts.WebPart>컨트롤에 있는 페이지에 해당 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A>컬렉션.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager>"
  syntax:
    content: protected System.Web.UI.WebControls.WebParts.WebPartManager WebPartManager { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartManager
      description: "<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> 연관 된 한 <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> 제어 합니다."
  overload: System.Web.UI.WebControls.WebParts.WebPart.WebPartManager*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.Width
  id: Width
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: Width
  nameWithType: WebPart.Width
  fullName: System.Web.UI.WebControls.WebParts.WebPart.Width
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "웹 서버 컨트롤의 너비를 가져오거나 설정 합니다."
  syntax:
    content: public override System.Web.UI.WebControls.Unit Width { get; set; }
    return:
      type: System.Web.UI.WebControls.Unit
      description: "A <xref href=&quot;System.Web.UI.WebControls.Unit&quot;> </xref> 컨트롤의 너비를 나타내는입니다. 기본값은 <xref href=&quot;System.Web.UI.WebControls.Unit&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.WebParts.WebPart.Width*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.Zone
  id: Zone
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: Zone
  nameWithType: WebPart.Zone
  fullName: System.Web.UI.WebControls.WebParts.WebPart.Zone
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "가져옵니다는 <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> 현재 포함 된 영역을 <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> 제어 합니다."
  remarks: "웹 파트 컨트롤 집합의 아키텍처에서는 내부에 작동 하는 경우에 컨트롤 웹 파트 기능이 있을 수 있습니다 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>영역.</xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 표준 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>영역이 웹 페이지를 사용 하는 <xref:System.Web.UI.WebControls.WebParts.WebPartZone>컨트롤.</xref:System.Web.UI.WebControls.WebParts.WebPartZone> </xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 최종 사용자가 웹 파트 컨트롤 웹 페이지의 다른 영역으로 이동 수 있지만 한 번에 하나의 영역 컨트롤의 지정 된 인스턴스에 있을 수 있습니다. 웹 파트 컨트롤 및 관련 <xref:System.Web.UI.WebControls.WebParts.WebPartManager>을 추적 하기 위해 현재 컨트롤 영역 영역 속성이 있는 컨트롤, 사용 및 웹 파트 컨트롤에 포함 된 모든 적용 될 영역의 일반적인 레이아웃 및 스타일 특성.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>"
  example:
  - "The following code example demonstrates how to access the Zone and <xref:System.Web.UI.WebControls.WebParts.WebPart.ZoneIndex%2A> properties for a custom Web Parts control. This example assumes the use of a custom control, `TextDisplayWebPart`, created in the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPart> class overview.  \n  \n The code example includes a custom user control that enables users to change display modes on a Web Parts page. The user control is referenced by means of a `Register` directive near the top of the Web page that hosts the user control. For a detailed description of how to create this user control and work with display modes, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_WebPart_Zone#5](~/add/codesnippet/csharp/p-system.web.ui.webcontr_20_1.ascx)]\n [!code-vb[WebParts_WebPart_Zone#5](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_20_1.ascx)]  \n  \n The second part of the code example is the Web page. There are two `<asp:webpartzone>` elements on the page, each representing a Web Parts zone. The first zone contains a standard <xref:System.Web.UI.WebControls.Calendar> control, which acts like a <xref:System.Web.UI.WebControls.WebParts.WebPart> control at run time because it is in a zone. The second zone contains the `TextDisplayWebPart` control. When a user clicks the **Zone Information** button, the `Label1` control displays the values of the <xref:System.Web.UI.WebControls.WebParts.WebPart.ZoneIndex%2A> property for the control, and the <xref:System.Web.UI.Control.ID%2A> property of the zone that currently contains the control.  \n  \n [!code-vb[WebParts_WebPart_Zone#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_20_2.aspx)]\n [!code-cs[WebParts_WebPart_Zone#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_20_2.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.WebParts.WebPartZoneBase Zone { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartZoneBase
      description: "<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> 현재 웹 페이지에 웹 파트 컨트롤을 포함 하는 합니다. 현재 페이지에 웹 파트 컨트롤 닫혀, 반환 값은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.WebParts.WebPart.Zone*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPart.ZoneIndex
  id: ZoneIndex
  parent: System.Web.UI.WebControls.WebParts.WebPart
  langs:
  - csharp
  name: ZoneIndex
  nameWithType: WebPart.ZoneIndex
  fullName: System.Web.UI.WebControls.WebParts.WebPart.ZoneIndex
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "인덱스 위치를 가져옵니다는 <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> 영역 내에서 제어 합니다."
  remarks: "ZoneIndex 속성 영역에서 다른 컨트롤을 기준으로 해당 영역 내에서 웹 파트 컨트롤의 순서 (또는 서 수 위치)를 나타냅니다. <xref:System.Web.UI.WebControls.WebParts.WebPartManager>컨트롤에서이 속성을 사용 하 여 추적 하 고 웹 페이지에 웹 파트 컨트롤의 컬렉션을 관리 합니다.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>      > [!IMPORTANT] > 컨트롤에 대 한 ZoneIndex 속성의 값은 내에서 동일한 컨트롤에 대 한 인덱스 값을 같습니다 가정할 수는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.WebParts%2A>컬렉션 컨트롤의 영역입니다.</xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.WebParts%2A> 컨트롤의 상대 종종 (해당 ZoneIndex 값), 해당 영역 내에서 해당 항목이 있는 인덱스의 위치는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.WebParts%2A>컨트롤에 추가 되 고 영역에서 제거 컬렉션 해당 영역을 다른 값이 됩니다.</xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.WebParts%2A>"
  example:
  - "The following code example demonstrates how to access the <xref:System.Web.UI.WebControls.WebParts.WebPart.Zone%2A> and ZoneIndex properties for a custom Web Parts control. This example assumes the use of a custom control, `TextDisplayWebPart`, created in the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPart> class overview.  \n  \n The code example includes a custom user control that enables users to change display modes on a Web Parts page. The user control is referenced by means of a `Register` directive near the top of the Web page that hosts the user control. For a detailed description of how to create this user control and work with display modes, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_WebPart_Zone#5](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1043_1.ascx)]\n [!code-vb[WebParts_WebPart_Zone#5](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1043_1.ascx)]  \n  \n The second part of the code example is the Web page. There are two `<asp:webpartzone>` elements on the page, each representing a Web Parts zone. The first zone contains a standard <xref:System.Web.UI.WebControls.Calendar> control, which acts like a <xref:System.Web.UI.WebControls.WebParts.WebPart> control at run time because it is in a zone. The second zone contains the `TextDisplayWebPart` control. When a user clicks the **Zone Information** button, the `Label1` control displays the values of the ZoneIndex property for the control, and the <xref:System.Web.UI.Control.ID%2A> property of the zone that currently contains the control.  \n  \n [!code-vb[WebParts_WebPart_Zone#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1043_2.aspx)]\n [!code-cs[WebParts_WebPart_Zone#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1043_2.aspx)]"
  syntax:
    content: public int ZoneIndex { get; }
    return:
      type: System.Int32
      description: "영역 내에서 컨트롤의 숫자 순서입니다. 영역에 첫 번째 컨트롤에는 인덱스 값이&0;에 있습니다."
  overload: System.Web.UI.WebControls.WebParts.WebPart.ZoneIndex*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.WebParts.Part
  isExternal: false
  name: System.Web.UI.WebControls.WebParts.Part
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.UI.WebControls.WebParts.WebPart.#ctor
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: WebPart()
  nameWithType: WebPart.WebPart()
  fullName: System.Web.UI.WebControls.WebParts.WebPart.WebPart()
- uid: System.Web.UI.WebControls.WebParts.WebPart.AllowClose
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: AllowClose
  nameWithType: WebPart.AllowClose
  fullName: System.Web.UI.WebControls.WebParts.WebPart.AllowClose
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.WebParts.WebPart.AllowConnect
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: AllowConnect
  nameWithType: WebPart.AllowConnect
  fullName: System.Web.UI.WebControls.WebParts.WebPart.AllowConnect
- uid: System.Web.UI.WebControls.WebParts.WebPart.AllowEdit
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: AllowEdit
  nameWithType: WebPart.AllowEdit
  fullName: System.Web.UI.WebControls.WebParts.WebPart.AllowEdit
- uid: System.Web.UI.WebControls.WebParts.WebPart.AllowHide
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: AllowHide
  nameWithType: WebPart.AllowHide
  fullName: System.Web.UI.WebControls.WebParts.WebPart.AllowHide
- uid: System.Web.UI.WebControls.WebParts.WebPart.AllowMinimize
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: AllowMinimize
  nameWithType: WebPart.AllowMinimize
  fullName: System.Web.UI.WebControls.WebParts.WebPart.AllowMinimize
- uid: System.Web.UI.WebControls.WebParts.WebPart.AllowZoneChange
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: AllowZoneChange
  nameWithType: WebPart.AllowZoneChange
  fullName: System.Web.UI.WebControls.WebParts.WebPart.AllowZoneChange
- uid: System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: AuthorizationFilter
  nameWithType: WebPart.AuthorizationFilter
  fullName: System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.WebParts.WebPart.CatalogIconImageUrl
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: CatalogIconImageUrl
  nameWithType: WebPart.CatalogIconImageUrl
  fullName: System.Web.UI.WebControls.WebParts.WebPart.CatalogIconImageUrl
- uid: System.Web.UI.WebControls.WebParts.WebPart.ChromeState
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: ChromeState
  nameWithType: WebPart.ChromeState
  fullName: System.Web.UI.WebControls.WebParts.WebPart.ChromeState
- uid: System.Web.UI.WebControls.WebParts.PartChromeState
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: PartChromeState
  nameWithType: PartChromeState
  fullName: System.Web.UI.WebControls.WebParts.PartChromeState
- uid: System.Web.UI.WebControls.WebParts.WebPart.ChromeType
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: ChromeType
  nameWithType: WebPart.ChromeType
  fullName: System.Web.UI.WebControls.WebParts.WebPart.ChromeType
- uid: System.Web.UI.WebControls.WebParts.PartChromeType
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: PartChromeType
  nameWithType: PartChromeType
  fullName: System.Web.UI.WebControls.WebParts.PartChromeType
- uid: System.Web.UI.WebControls.WebParts.WebPart.ConnectErrorMessage
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: ConnectErrorMessage
  nameWithType: WebPart.ConnectErrorMessage
  fullName: System.Web.UI.WebControls.WebParts.WebPart.ConnectErrorMessage
- uid: System.Web.UI.WebControls.WebParts.WebPart.CreateEditorParts
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: CreateEditorParts()
  nameWithType: WebPart.CreateEditorParts()
  fullName: System.Web.UI.WebControls.WebParts.WebPart.CreateEditorParts()
- uid: System.Web.UI.WebControls.WebParts.EditorPartCollection
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: EditorPartCollection
  nameWithType: EditorPartCollection
  fullName: System.Web.UI.WebControls.WebParts.EditorPartCollection
- uid: System.Web.UI.WebControls.WebParts.WebPart.Description
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: Description
  nameWithType: WebPart.Description
  fullName: System.Web.UI.WebControls.WebParts.WebPart.Description
- uid: System.Web.UI.WebControls.WebParts.WebPart.Direction
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: Direction
  nameWithType: WebPart.Direction
  fullName: System.Web.UI.WebControls.WebParts.WebPart.Direction
- uid: System.Web.UI.WebControls.ContentDirection
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ContentDirection
  nameWithType: ContentDirection
  fullName: System.Web.UI.WebControls.ContentDirection
- uid: System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: DisplayTitle
  nameWithType: WebPart.DisplayTitle
  fullName: System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle
- uid: System.Web.UI.WebControls.WebParts.WebPart.ExportMode
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: ExportMode
  nameWithType: WebPart.ExportMode
  fullName: System.Web.UI.WebControls.WebParts.WebPart.ExportMode
- uid: System.Web.UI.WebControls.WebParts.WebPartExportMode
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartExportMode
  nameWithType: WebPartExportMode
  fullName: System.Web.UI.WebControls.WebParts.WebPartExportMode
- uid: System.Web.UI.WebControls.WebParts.WebPart.HasSharedData
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: HasSharedData
  nameWithType: WebPart.HasSharedData
  fullName: System.Web.UI.WebControls.WebParts.WebPart.HasSharedData
- uid: System.Web.UI.WebControls.WebParts.WebPart.HasUserData
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: HasUserData
  nameWithType: WebPart.HasUserData
  fullName: System.Web.UI.WebControls.WebParts.WebPart.HasUserData
- uid: System.Web.UI.WebControls.WebParts.WebPart.Height
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: Height
  nameWithType: WebPart.Height
  fullName: System.Web.UI.WebControls.WebParts.WebPart.Height
- uid: System.Web.UI.WebControls.Unit
  parent: System.Web.UI.WebControls
  isExternal: false
  name: Unit
  nameWithType: Unit
  fullName: System.Web.UI.WebControls.Unit
- uid: System.Web.UI.WebControls.WebParts.WebPart.HelpMode
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: HelpMode
  nameWithType: WebPart.HelpMode
  fullName: System.Web.UI.WebControls.WebParts.WebPart.HelpMode
- uid: System.Web.UI.WebControls.WebParts.WebPartHelpMode
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartHelpMode
  nameWithType: WebPartHelpMode
  fullName: System.Web.UI.WebControls.WebParts.WebPartHelpMode
- uid: System.Web.UI.WebControls.WebParts.WebPart.HelpUrl
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: HelpUrl
  nameWithType: WebPart.HelpUrl
  fullName: System.Web.UI.WebControls.WebParts.WebPart.HelpUrl
- uid: System.Web.UI.WebControls.WebParts.WebPart.Hidden
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: Hidden
  nameWithType: WebPart.Hidden
  fullName: System.Web.UI.WebControls.WebParts.WebPart.Hidden
- uid: System.Web.UI.WebControls.WebParts.WebPart.ImportErrorMessage
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: ImportErrorMessage
  nameWithType: WebPart.ImportErrorMessage
  fullName: System.Web.UI.WebControls.WebParts.WebPart.ImportErrorMessage
- uid: System.Web.UI.WebControls.WebParts.WebPart.IsClosed
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: IsClosed
  nameWithType: WebPart.IsClosed
  fullName: System.Web.UI.WebControls.WebParts.WebPart.IsClosed
- uid: System.Web.UI.WebControls.WebParts.WebPart.IsShared
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: IsShared
  nameWithType: WebPart.IsShared
  fullName: System.Web.UI.WebControls.WebParts.WebPart.IsShared
- uid: System.Web.UI.WebControls.WebParts.WebPart.IsStandalone
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: IsStandalone
  nameWithType: WebPart.IsStandalone
  fullName: System.Web.UI.WebControls.WebParts.WebPart.IsStandalone
- uid: System.Web.UI.WebControls.WebParts.WebPart.IsStatic
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: IsStatic
  nameWithType: WebPart.IsStatic
  fullName: System.Web.UI.WebControls.WebParts.WebPart.IsStatic
- uid: System.Web.UI.WebControls.WebParts.WebPart.OnClosing(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: OnClosing(EventArgs)
  nameWithType: WebPart.OnClosing(EventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPart.OnClosing(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.WebControls.WebParts.WebPart.OnConnectModeChanged(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: OnConnectModeChanged(EventArgs)
  nameWithType: WebPart.OnConnectModeChanged(EventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPart.OnConnectModeChanged(EventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPart.OnDeleting(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: OnDeleting(EventArgs)
  nameWithType: WebPart.OnDeleting(EventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPart.OnDeleting(EventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPart.OnEditModeChanged(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: OnEditModeChanged(EventArgs)
  nameWithType: WebPart.OnEditModeChanged(EventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPart.OnEditModeChanged(EventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPart.SetPersonalizationDirty
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: SetPersonalizationDirty()
  nameWithType: WebPart.SetPersonalizationDirty()
  fullName: System.Web.UI.WebControls.WebParts.WebPart.SetPersonalizationDirty()
- uid: System.Web.UI.WebControls.WebParts.WebPart.SetPersonalizationDirty(System.Web.UI.Control)
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: SetPersonalizationDirty(Control)
  nameWithType: WebPart.SetPersonalizationDirty(Control)
  fullName: System.Web.UI.WebControls.WebParts.WebPart.SetPersonalizationDirty(Control)
- uid: System.Web.UI.Control
  parent: System.Web.UI
  isExternal: false
  name: Control
  nameWithType: Control
  fullName: System.Web.UI.Control
- uid: System.Web.UI.WebControls.WebParts.WebPart.Subtitle
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: Subtitle
  nameWithType: WebPart.Subtitle
  fullName: System.Web.UI.WebControls.WebParts.WebPart.Subtitle
- uid: System.Web.UI.WebControls.WebParts.WebPart.Title
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: Title
  nameWithType: WebPart.Title
  fullName: System.Web.UI.WebControls.WebParts.WebPart.Title
- uid: System.Web.UI.WebControls.WebParts.WebPart.TitleIconImageUrl
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: TitleIconImageUrl
  nameWithType: WebPart.TitleIconImageUrl
  fullName: System.Web.UI.WebControls.WebParts.WebPart.TitleIconImageUrl
- uid: System.Web.UI.WebControls.WebParts.WebPart.TitleUrl
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: TitleUrl
  nameWithType: WebPart.TitleUrl
  fullName: System.Web.UI.WebControls.WebParts.WebPart.TitleUrl
- uid: System.Web.UI.WebControls.WebParts.WebPart.TrackViewState
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: TrackViewState()
  nameWithType: WebPart.TrackViewState()
  fullName: System.Web.UI.WebControls.WebParts.WebPart.TrackViewState()
- uid: System.Web.UI.WebControls.WebParts.WebPart.Verbs
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: Verbs
  nameWithType: WebPart.Verbs
  fullName: System.Web.UI.WebControls.WebParts.WebPart.Verbs
- uid: System.Web.UI.WebControls.WebParts.WebPartVerbCollection
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartVerbCollection
  nameWithType: WebPartVerbCollection
  fullName: System.Web.UI.WebControls.WebParts.WebPartVerbCollection
- uid: System.Web.UI.WebControls.WebParts.WebPart.WebBrowsableObject
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: WebBrowsableObject
  nameWithType: WebPart.WebBrowsableObject
  fullName: System.Web.UI.WebControls.WebParts.WebPart.WebBrowsableObject
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.WebParts.WebPart.WebPartManager
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: WebPartManager
  nameWithType: WebPart.WebPartManager
  fullName: System.Web.UI.WebControls.WebParts.WebPart.WebPartManager
- uid: System.Web.UI.WebControls.WebParts.WebPartManager
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartManager
  nameWithType: WebPartManager
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager
- uid: System.Web.UI.WebControls.WebParts.WebPart.Width
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: Width
  nameWithType: WebPart.Width
  fullName: System.Web.UI.WebControls.WebParts.WebPart.Width
- uid: System.Web.UI.WebControls.WebParts.WebPart.Zone
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: Zone
  nameWithType: WebPart.Zone
  fullName: System.Web.UI.WebControls.WebParts.WebPart.Zone
- uid: System.Web.UI.WebControls.WebParts.WebPartZoneBase
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartZoneBase
  nameWithType: WebPartZoneBase
  fullName: System.Web.UI.WebControls.WebParts.WebPartZoneBase
- uid: System.Web.UI.WebControls.WebParts.WebPart.ZoneIndex
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: ZoneIndex
  nameWithType: WebPart.ZoneIndex
  fullName: System.Web.UI.WebControls.WebParts.WebPart.ZoneIndex
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.WebParts.WebPart.#ctor*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: WebPart
  nameWithType: WebPart.WebPart
- uid: System.Web.UI.WebControls.WebParts.WebPart.AllowClose*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: AllowClose
  nameWithType: WebPart.AllowClose
- uid: System.Web.UI.WebControls.WebParts.WebPart.AllowConnect*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: AllowConnect
  nameWithType: WebPart.AllowConnect
- uid: System.Web.UI.WebControls.WebParts.WebPart.AllowEdit*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: AllowEdit
  nameWithType: WebPart.AllowEdit
- uid: System.Web.UI.WebControls.WebParts.WebPart.AllowHide*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: AllowHide
  nameWithType: WebPart.AllowHide
- uid: System.Web.UI.WebControls.WebParts.WebPart.AllowMinimize*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: AllowMinimize
  nameWithType: WebPart.AllowMinimize
- uid: System.Web.UI.WebControls.WebParts.WebPart.AllowZoneChange*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: AllowZoneChange
  nameWithType: WebPart.AllowZoneChange
- uid: System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: AuthorizationFilter
  nameWithType: WebPart.AuthorizationFilter
- uid: System.Web.UI.WebControls.WebParts.WebPart.CatalogIconImageUrl*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: CatalogIconImageUrl
  nameWithType: WebPart.CatalogIconImageUrl
- uid: System.Web.UI.WebControls.WebParts.WebPart.ChromeState*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: ChromeState
  nameWithType: WebPart.ChromeState
- uid: System.Web.UI.WebControls.WebParts.WebPart.ChromeType*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: ChromeType
  nameWithType: WebPart.ChromeType
- uid: System.Web.UI.WebControls.WebParts.WebPart.ConnectErrorMessage*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: ConnectErrorMessage
  nameWithType: WebPart.ConnectErrorMessage
- uid: System.Web.UI.WebControls.WebParts.WebPart.CreateEditorParts*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: CreateEditorParts
  nameWithType: WebPart.CreateEditorParts
- uid: System.Web.UI.WebControls.WebParts.WebPart.Description*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: Description
  nameWithType: WebPart.Description
- uid: System.Web.UI.WebControls.WebParts.WebPart.Direction*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: Direction
  nameWithType: WebPart.Direction
- uid: System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: DisplayTitle
  nameWithType: WebPart.DisplayTitle
- uid: System.Web.UI.WebControls.WebParts.WebPart.ExportMode*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: ExportMode
  nameWithType: WebPart.ExportMode
- uid: System.Web.UI.WebControls.WebParts.WebPart.HasSharedData*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: HasSharedData
  nameWithType: WebPart.HasSharedData
- uid: System.Web.UI.WebControls.WebParts.WebPart.HasUserData*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: HasUserData
  nameWithType: WebPart.HasUserData
- uid: System.Web.UI.WebControls.WebParts.WebPart.Height*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: Height
  nameWithType: WebPart.Height
- uid: System.Web.UI.WebControls.WebParts.WebPart.HelpMode*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: HelpMode
  nameWithType: WebPart.HelpMode
- uid: System.Web.UI.WebControls.WebParts.WebPart.HelpUrl*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: HelpUrl
  nameWithType: WebPart.HelpUrl
- uid: System.Web.UI.WebControls.WebParts.WebPart.Hidden*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: Hidden
  nameWithType: WebPart.Hidden
- uid: System.Web.UI.WebControls.WebParts.WebPart.ImportErrorMessage*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: ImportErrorMessage
  nameWithType: WebPart.ImportErrorMessage
- uid: System.Web.UI.WebControls.WebParts.WebPart.IsClosed*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: IsClosed
  nameWithType: WebPart.IsClosed
- uid: System.Web.UI.WebControls.WebParts.WebPart.IsShared*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: IsShared
  nameWithType: WebPart.IsShared
- uid: System.Web.UI.WebControls.WebParts.WebPart.IsStandalone*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: IsStandalone
  nameWithType: WebPart.IsStandalone
- uid: System.Web.UI.WebControls.WebParts.WebPart.IsStatic*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: IsStatic
  nameWithType: WebPart.IsStatic
- uid: System.Web.UI.WebControls.WebParts.WebPart.OnClosing*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: OnClosing
  nameWithType: WebPart.OnClosing
- uid: System.Web.UI.WebControls.WebParts.WebPart.OnConnectModeChanged*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: OnConnectModeChanged
  nameWithType: WebPart.OnConnectModeChanged
- uid: System.Web.UI.WebControls.WebParts.WebPart.OnDeleting*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: OnDeleting
  nameWithType: WebPart.OnDeleting
- uid: System.Web.UI.WebControls.WebParts.WebPart.OnEditModeChanged*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: OnEditModeChanged
  nameWithType: WebPart.OnEditModeChanged
- uid: System.Web.UI.WebControls.WebParts.WebPart.SetPersonalizationDirty*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: SetPersonalizationDirty
  nameWithType: WebPart.SetPersonalizationDirty
- uid: System.Web.UI.WebControls.WebParts.WebPart.Subtitle*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: Subtitle
  nameWithType: WebPart.Subtitle
- uid: System.Web.UI.WebControls.WebParts.WebPart.Title*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: Title
  nameWithType: WebPart.Title
- uid: System.Web.UI.WebControls.WebParts.WebPart.TitleIconImageUrl*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: TitleIconImageUrl
  nameWithType: WebPart.TitleIconImageUrl
- uid: System.Web.UI.WebControls.WebParts.WebPart.TitleUrl*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: TitleUrl
  nameWithType: WebPart.TitleUrl
- uid: System.Web.UI.WebControls.WebParts.WebPart.TrackViewState*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: TrackViewState
  nameWithType: WebPart.TrackViewState
- uid: System.Web.UI.WebControls.WebParts.WebPart.Verbs*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: Verbs
  nameWithType: WebPart.Verbs
- uid: System.Web.UI.WebControls.WebParts.WebPart.WebBrowsableObject*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: WebBrowsableObject
  nameWithType: WebPart.WebBrowsableObject
- uid: System.Web.UI.WebControls.WebParts.WebPart.WebPartManager*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: WebPartManager
  nameWithType: WebPart.WebPartManager
- uid: System.Web.UI.WebControls.WebParts.WebPart.Width*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: Width
  nameWithType: WebPart.Width
- uid: System.Web.UI.WebControls.WebParts.WebPart.Zone*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: Zone
  nameWithType: WebPart.Zone
- uid: System.Web.UI.WebControls.WebParts.WebPart.ZoneIndex*
  parent: System.Web.UI.WebControls.WebParts.WebPart
  isExternal: false
  name: ZoneIndex
  nameWithType: WebPart.ZoneIndex
