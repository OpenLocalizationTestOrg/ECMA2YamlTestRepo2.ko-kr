### YamlMime:ManagedReference
items:
- uid: System.IO.File
  id: File
  children:
  - System.IO.File.AppendAllLines(System.String,System.Collections.Generic.IEnumerable{System.String})
  - System.IO.File.AppendAllLines(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)
  - System.IO.File.AppendAllText(System.String,System.String)
  - System.IO.File.AppendAllText(System.String,System.String,System.Text.Encoding)
  - System.IO.File.AppendText(System.String)
  - System.IO.File.Copy(System.String,System.String)
  - System.IO.File.Copy(System.String,System.String,System.Boolean)
  - System.IO.File.Create(System.String)
  - System.IO.File.Create(System.String,System.Int32)
  - System.IO.File.Create(System.String,System.Int32,System.IO.FileOptions)
  - System.IO.File.Create(System.String,System.Int32,System.IO.FileOptions,System.Security.AccessControl.FileSecurity)
  - System.IO.File.CreateText(System.String)
  - System.IO.File.Decrypt(System.String)
  - System.IO.File.Delete(System.String)
  - System.IO.File.Encrypt(System.String)
  - System.IO.File.Exists(System.String)
  - System.IO.File.GetAccessControl(System.String)
  - System.IO.File.GetAccessControl(System.String,System.Security.AccessControl.AccessControlSections)
  - System.IO.File.GetAttributes(System.String)
  - System.IO.File.GetCreationTime(System.String)
  - System.IO.File.GetCreationTimeUtc(System.String)
  - System.IO.File.GetLastAccessTime(System.String)
  - System.IO.File.GetLastAccessTimeUtc(System.String)
  - System.IO.File.GetLastWriteTime(System.String)
  - System.IO.File.GetLastWriteTimeUtc(System.String)
  - System.IO.File.Move(System.String,System.String)
  - System.IO.File.Open(System.String,System.IO.FileMode)
  - System.IO.File.Open(System.String,System.IO.FileMode,System.IO.FileAccess)
  - System.IO.File.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)
  - System.IO.File.OpenRead(System.String)
  - System.IO.File.OpenText(System.String)
  - System.IO.File.OpenWrite(System.String)
  - System.IO.File.ReadAllBytes(System.String)
  - System.IO.File.ReadAllLines(System.String)
  - System.IO.File.ReadAllLines(System.String,System.Text.Encoding)
  - System.IO.File.ReadAllText(System.String)
  - System.IO.File.ReadAllText(System.String,System.Text.Encoding)
  - System.IO.File.ReadLines(System.String)
  - System.IO.File.ReadLines(System.String,System.Text.Encoding)
  - System.IO.File.Replace(System.String,System.String,System.String)
  - System.IO.File.Replace(System.String,System.String,System.String,System.Boolean)
  - System.IO.File.SetAccessControl(System.String,System.Security.AccessControl.FileSecurity)
  - System.IO.File.SetAttributes(System.String,System.IO.FileAttributes)
  - System.IO.File.SetCreationTime(System.String,System.DateTime)
  - System.IO.File.SetCreationTimeUtc(System.String,System.DateTime)
  - System.IO.File.SetLastAccessTime(System.String,System.DateTime)
  - System.IO.File.SetLastAccessTimeUtc(System.String,System.DateTime)
  - System.IO.File.SetLastWriteTime(System.String,System.DateTime)
  - System.IO.File.SetLastWriteTimeUtc(System.String,System.DateTime)
  - System.IO.File.WriteAllBytes(System.String,System.Byte[])
  - System.IO.File.WriteAllLines(System.String,System.Collections.Generic.IEnumerable{System.String})
  - System.IO.File.WriteAllLines(System.String,System.String[])
  - System.IO.File.WriteAllLines(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)
  - System.IO.File.WriteAllLines(System.String,System.String[],System.Text.Encoding)
  - System.IO.File.WriteAllText(System.String,System.String)
  - System.IO.File.WriteAllText(System.String,System.String,System.Text.Encoding)
  langs:
  - csharp
  name: File
  nameWithType: File
  fullName: System.IO.File
  type: Class
  summary: "만들기, 복사, 삭제, 이동 및 단일 파일의 열기 위한 정적 메서드를 제공 하 고 만들기 지원 <xref href=&quot;System.IO.FileStream&quot;> </xref> 개체입니다.       이 형식에 대 한.NET Framework 소스 코드를 찾아보려면 참조는 [참조 소스](http://referencesource.microsoft.com/#mscorlib/system/io/file.cs#1c7421e464f67b7e)합니다."
  remarks: "> [!NOTE]\n>  To view the .NET Framework source code for this type, see the [Reference Source](http://referencesource.microsoft.com/#mscorlib/system/io/file.cs#1c7421e464f67b7e). You can browse through the source code online, download the reference for offline viewing, and step through the sources (including patches and updates) during debugging; see [instructions](http://referencesource.microsoft.com/).  \n  \n Use the File class for typical operations such as copying, moving, renaming, creating, opening, deleting, and appending to a single file at a time. You can also use the File class to get and set file attributes or <xref:System.DateTime> information related to the creation, access, and writing of a file. If you want to perform operations on multiple files, see <xref:System.IO.Directory.GetFiles%2A?displayProperty=fullName> or <xref:System.IO.DirectoryInfo.GetFiles%2A?displayProperty=fullName>.  \n  \n Many of the File methods return other I/O types when you create or open files. You can use these other types to further manipulate a file. For more information, see specific File members such as <xref:System.IO.File.OpenText%2A>, <xref:System.IO.File.CreateText%2A>, or <xref:System.IO.File.Create%2A>.  \n  \n Because all File methods are static, it might be more efficient to use a File method rather than a corresponding <xref:System.IO.FileInfo> instance method if you want to perform only one action. All File methods require the path to the file that you are manipulating.  \n  \n The static methods of the File class perform security checks on all methods. If you are going to reuse an object several times, consider using the corresponding instance method of <xref:System.IO.FileInfo> instead, because the security check will not always be necessary.  \n  \n By default, full read/write access to new files is granted to all users.  \n  \n The following table describes the enumerations that are used to customize the behavior of various File methods.  \n  \n|Enumeration|Description|  \n|-----------------|-----------------|  \n|<xref:System.IO.FileAccess>|Specifies read and write access to a file.|  \n|<xref:System.IO.FileShare>|Specifies the level of access permitted for a file that is already in use.|  \n|<xref:System.IO.FileMode>|Specifies whether the contents of an existing file are preserved or overwritten, and whether requests to create an existing file cause an exception.|  \n  \n> [!NOTE]\n>  In members that accept a path as an input string, that path must be well-formed or an exception is raised. For example, if a path is fully qualified but begins with a space, the path is not trimmed in methods of the class. Therefore, the path is malformed and an exception is raised. Similarly, a path or a combination of paths cannot be fully qualified twice. For example, \"c:\\temp c:\\windows\" also raises an exception in most cases. Ensure that your paths are well-formed when using methods that accept a path string.  \n  \n In members that accept a path, the path can refer to a file or just a directory. The specified path can also refer to a relative path or a Universal Naming Convention (UNC) path for a server and share name. For example, all the following are acceptable paths:  \n  \n-   \"c:\\\\\\MyDir\\\\\\MyFile.txt\" in C#, or \"c:\\MyDir\\MyFile.txt\" in Visual Basic.  \n  \n-   \"c:\\\\\\MyDir\" in C#, or \"c:\\MyDir\" in Visual Basic.  \n  \n-   \"MyDir\\\\\\MySubdir\" in C#, or \"MyDir\\MySubDir\" in Visual Basic.  \n  \n-   \"\\\\\\\\\\\\\\MyServer\\\\\\MyShare\" in C#, or \"\\\\\\MyServer\\MyShare\" in Visual Basic.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example demonstrates how to use the File class to check whether a file exists, and depending on the result, either create a new file and write to it, or open the existing file and read from it. Before running the code, create a `c:\\temp` folder.  \n  \n [!code-cpp[File Class Example#1](~/add/codesnippet/cpp/t-system.io.file_1.cpp)]\n [!code-cs[File Class Example#1](~/add/codesnippet/csharp/t-system.io.file_1.cs)]\n [!code-vb[File Class Example#1](~/add/codesnippet/visualbasic/t-system.io.file_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public static class File
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IO.File.AppendAllLines(System.String,System.Collections.Generic.IEnumerable{System.String})
  id: AppendAllLines(System.String,System.Collections.Generic.IEnumerable{System.String})
  parent: System.IO.File
  langs:
  - csharp
  name: AppendAllLines(String,IEnumerable<String>)
  nameWithType: File.AppendAllLines(String,IEnumerable<String>)
  fullName: System.IO.File.AppendAllLines(String,IEnumerable<String>)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "파일에 줄을 추가한 다음 파일을 닫습니다. 지정된 된 파일이 없는 경우이 메서드는 파일을 파일에 지정 된 줄을 씁니다 만들고 파일을 닫습니다."
  remarks: "메서드는 존재 하지 않는 하지만 새 디렉터리를 만들지는 않습니다 경우 파일을 만듭니다. 따라서의 값은 `path` 매개 변수는 기존 디렉터리를 포함 해야 합니다."
  example:
  - "The following example writes selected lines from a sample data file to a file, and then appends more lines. The directory named `temp` on drive C must exist for the example to complete successfully.  \n  \n [!code-cs[System.IO.File.WriteAllAppendAll#1](~/add/codesnippet/csharp/d3653703-4b0a-4cbe-b582-_1.cs)]\n [!code-vb[System.IO.File.WriteAllAppendAll#1](~/add/codesnippet/visualbasic/d3653703-4b0a-4cbe-b582-_1.vb)]"
  syntax:
    content: public static void AppendAllLines (string path, System.Collections.Generic.IEnumerable<string> contents);
    parameters:
    - id: path
      type: System.String
      description: "줄을 추가할 파일입니다. 파일이 존재 하지 않는 경우 만들어집니다."
    - id: contents
      type: System.Collections.Generic.IEnumerable{System.String}
      description: "파일에 추가할 줄입니다."
  overload: System.IO.File.AppendAllLines*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>빈 문자열, 공백만 포함 또는에 정의 된 하나 이상의 잘못 된 문자가 포함 된 <xref:System.IO.Path.GetInvalidPathChars*> 메서드."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Either<code> path </code>or <code>contents</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "<code>path</code>잘못 되었습니다 (예를 들어, 디렉터리 존재 하지 않거나 매핑되지 않은 드라이브에 있음)."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "지정한 파일 <code> path </code> 찾을 수 없습니다."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "파일을 여는 동안 I/O 오류가 발생 했습니다."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "<code>path</code>시스템에서 정의한 최대 길이 초과합니다. 예를 들어 Windows 기반 플랫폼에서 경로 248 자 미만 이어야 하 고 파일 이름은 260 자 미만 이어야 합니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>잘못 된 형식입니다."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "호출자에 게 파일에 쓸 수 있는 권한이 없습니다."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>읽기 전용 파일을 지정 합니다.       -또는-이 작업은 현재 플랫폼에서 지원 되지 않습니다.       -또는- <code>path</code> 디렉터리입니다."
  platform:
  - net462
- uid: System.IO.File.AppendAllLines(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)
  id: AppendAllLines(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)
  parent: System.IO.File
  langs:
  - csharp
  name: AppendAllLines(String,IEnumerable<String>,Encoding)
  nameWithType: File.AppendAllLines(String,IEnumerable<String>,Encoding)
  fullName: System.IO.File.AppendAllLines(String,IEnumerable<String>,Encoding)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "지정 된 인코딩을 사용 하 여 파일에 줄을 추가한 다음 파일을 닫습니다. 지정된 된 파일이 없는 경우이 메서드는 파일을 파일에 지정 된 줄을 씁니다 만들고 파일을 닫습니다."
  remarks: "메서드는 존재 하지 않는 하지만 새 디렉터리를 만들지는 않습니다 경우 파일을 만듭니다. 따라서의 값은 `path` 매개 변수는 기존 디렉터리를 포함 해야 합니다.       이 메서드를 사용 하 여 다음을 포함 하는 파일을 만드는:-의 결과 [LINQ to Objects](~/add/includes/ajax-current-ext-md.md) 는 파일의 줄에서 쿼리를 사용 하 여 얻어지는 <xref:System.IO.File.ReadLines%2A>메서드.</xref:System.IO.File.ReadLines%2A>      -구현 하는 컬렉션의 내용을 <xref:System.Collections.Generic.IEnumerable%601>문자열.</xref:System.Collections.Generic.IEnumerable%601>"
  syntax:
    content: public static void AppendAllLines (string path, System.Collections.Generic.IEnumerable<string> contents, System.Text.Encoding encoding);
    parameters:
    - id: path
      type: System.String
      description: "줄을 추가할 파일입니다. 파일이 존재 하지 않는 경우 만들어집니다."
    - id: contents
      type: System.Collections.Generic.IEnumerable{System.String}
      description: "파일에 추가할 줄입니다."
    - id: encoding
      type: System.Text.Encoding
      description: "사용할 문자 인코딩입니다."
  overload: System.IO.File.AppendAllLines*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>빈 문자열, 공백만 포함 또는에 정의 된 하나 이상의 잘못 된 문자가 포함 된 <xref:System.IO.Path.GetInvalidPathChars*> 메서드."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Either<code> path</code>, <code>contents</code>, or <code>encoding</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "<code>path</code>잘못 되었습니다 (예를 들어, 디렉터리 존재 하지 않거나 매핑되지 않은 드라이브에 있음)."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "지정한 파일 <code> path </code> 찾을 수 없습니다."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "파일을 여는 동안 I/O 오류가 발생 했습니다."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "<code>path</code>시스템에서 정의한 최대 길이 초과합니다. 예를 들어 Windows 기반 플랫폼에서 경로 248 자 미만 이어야 하 고 파일 이름은 260 자 미만 이어야 합니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>잘못 된 형식입니다."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "호출자에 게 필요한 권한이 없습니다."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>읽기 전용 파일을 지정 합니다.       -또는-이 작업은 현재 플랫폼에서 지원 되지 않습니다.       -또는- <code>path</code> 디렉터리입니다.       -또는-호출자에 게는 필요한 사용 권한이 없습니다."
  platform:
  - net462
- uid: System.IO.File.AppendAllText(System.String,System.String)
  id: AppendAllText(System.String,System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: AppendAllText(String,String)
  nameWithType: File.AppendAllText(String,String)
  fullName: System.IO.File.AppendAllText(String,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "파일을 열고 파일에 지정 된 문자열을 추가한 다음 파일을 닫습니다. 파일이 없으면이 메서드는 파일을 만듭니다 하 지정된 된 문자열을 파일에 쓴 다음 파일을 닫습니다."
  remarks: "문자열로 파일 경로 매개 변수로 받아이 지정된 된 파일 열고, 문자열 파일의 끝에 추가 메서드와 다음 파일을 닫습니다. 파일 핸들은 예외가 발생 하는 경우에이 메서드에 의해 닫혀야 보장 됩니다.       메서드는 존재 하지 않는 하지만 새 디렉터리를 만들지는 않습니다 경우 파일을 만듭니다. 따라서의 값은 `path` 매개 변수는 기존 디렉터리를 포함 해야 합니다."
  example:
  - "The following code example demonstrates the use of the AppendAllText method to add extra text to the end of a file. In this example, a file is created if it doesn't already exist, and text is added to it. However, the directory named `temp` on drive C must exist for the example to complete successfully.  \n  \n [!code-vb[System.IO.File.AllText#00](~/add/codesnippet/visualbasic/m-system.io.file.appenda_0_1.vb)]\n [!code-cs[System.IO.File.AllText#00](~/add/codesnippet/csharp/m-system.io.file.appenda_0_1.cs)]"
  syntax:
    content: public static void AppendAllText (string path, string contents);
    parameters:
    - id: path
      type: System.String
      description: "지정 된 문자열을 추가할 파일입니다."
    - id: contents
      type: System.String
      description: "파일에 추가할 문자열입니다."
  overload: System.IO.File.AppendAllText*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>길이가&0; 인 문자열인, 공백만 포함 또는에 정의 된 대로 하나 이상의 잘못 된 문자가 들어 <xref:System.IO.Path.InvalidPathChars>합니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "지정된 된 경로, 파일 이름 또는 둘 다에 시스템 정의 최대 길이 초과 합니다. 예를 들어 Windows 기반 플랫폼에서 경로 248 자 미만, 이어야 하 고 파일 이름은 260 자 미만 이어야 합니다."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "지정 된 경로가 잘못 되었습니다 (예를 들어, 디렉터리 존재 하지 않거나 매핑되지 않은 드라이브에 있음)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "파일을 여는 동안 I/O 오류가 발생 했습니다."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>파일을 지정한 경우 읽기 전용입니다.       -또는-이 작업은 현재 플랫폼에서 지원 되지 않습니다.       -또는- <code>path</code> 가 디렉터리를 지정 합니다.       -또는-호출자에 게는 필요한 사용 권한이 없습니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>잘못 된 형식입니다."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "호출자에 게 필요한 권한이 없습니다."
  platform:
  - net462
- uid: System.IO.File.AppendAllText(System.String,System.String,System.Text.Encoding)
  id: AppendAllText(System.String,System.String,System.Text.Encoding)
  parent: System.IO.File
  langs:
  - csharp
  name: AppendAllText(String,String,Encoding)
  nameWithType: File.AppendAllText(String,String,Encoding)
  fullName: System.IO.File.AppendAllText(String,String,Encoding)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "아직 없는 경우 파일을 만드는 파일에 지정된 된 문자열을 추가 합니다."
  remarks: "문자열로 파일 경로 매개 변수로 받아이 지정된 된 파일 열고, 지정 된 인코딩을 사용 하 여 파일의 끝에는 문자열을 추가 메서드와 다음 파일을 닫습니다. 파일 핸들은 예외가 발생 하는 경우에이 메서드에 의해 닫혀야 보장 됩니다.       메서드는 존재 하지 않는 하지만 새 디렉터리를 만들지는 않습니다 경우 파일을 만듭니다. 따라서의 값은 `path` 매개 변수는 기존 디렉터리를 포함 해야 합니다."
  example:
  - "The following code example demonstrates the use of the AppendAllText method to add extra text to the end of a file. In this example, a file is created if it doesn't already exist, and text is added to it. However, the directory named `temp` on drive C must exist for the example to complete successfully.  \n  \n [!code-cs[System.IO.File.AllText_Encoding#00](~/add/codesnippet/csharp/m-system.io.file.appenda_1_1.cs)]\n [!code-vb[System.IO.File.AllText_Encoding#00](~/add/codesnippet/visualbasic/m-system.io.file.appenda_1_1.vb)]"
  syntax:
    content: public static void AppendAllText (string path, string contents, System.Text.Encoding encoding);
    parameters:
    - id: path
      type: System.String
      description: "지정 된 문자열을 추가할 파일입니다."
    - id: contents
      type: System.String
      description: "파일에 추가할 문자열입니다."
    - id: encoding
      type: System.Text.Encoding
      description: "사용할 문자 인코딩입니다."
  overload: System.IO.File.AppendAllText*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>길이가&0; 인 문자열인, 공백만 포함 또는에 정의 된 대로 하나 이상의 잘못 된 문자가 들어 <xref:System.IO.Path.InvalidPathChars>합니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "지정된 된 경로, 파일 이름 또는 둘 다에 시스템 정의 최대 길이 초과 합니다. 예를 들어 Windows 기반 플랫폼에서 경로 248 자 미만, 이어야 하 고 파일 이름은 260 자 미만 이어야 합니다."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "지정 된 경로가 잘못 되었습니다 (예를 들어, 디렉터리 존재 하지 않거나 매핑되지 않은 드라이브에 있음)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "파일을 여는 동안 I/O 오류가 발생 했습니다."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>파일을 지정한 경우 읽기 전용입니다.       -또는-이 작업은 현재 플랫폼에서 지원 되지 않습니다.       -또는- <code>path</code> 가 디렉터리를 지정 합니다.       -또는-호출자에 게는 필요한 사용 권한이 없습니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>잘못 된 형식입니다."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "호출자에 게 필요한 권한이 없습니다."
  platform:
  - net462
- uid: System.IO.File.AppendText(System.String)
  id: AppendText(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: AppendText(String)
  nameWithType: File.AppendText(String)
  fullName: System.IO.File.AppendText(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "만듭니다는 <xref:System.IO.StreamWriter>u t F-8로 인코딩된 텍스트 또는를 추가 하는 기존 파일을 새 파일에 지정 된 파일이 존재 하지 않는 경우.</xref:System.IO.StreamWriter>"
  remarks: "이 메서드는 해당 하는 <xref:System.IO.StreamWriter.%23ctor%28System.String%2CSystem.Boolean%29>생성자 오버 로드.</xref:System.IO.StreamWriter.%23ctor%28System.String%2CSystem.Boolean%29> 으로 지정한 파일이 있으면 `path` 존재 하지 않는 생성 됩니다. 파일이 있으면 쓰기 작업을는 <xref:System.IO.StreamWriter>파일에 텍스트를 추가 합니다.</xref:System.IO.StreamWriter> 추가 스레드는 열려 있는 동안 파일을 읽을 수 있습니다.       `path` 상대 또는 절대 경로 정보를 지정 하기 위해 매개 변수는 허용 합니다. 상대 경로 정보는 현재 작업 디렉터리에 상대적으로 해석 됩니다. 현재 작업 디렉터리를 가져오려면 <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A> 를 참조 하세요.       `path` 매개 변수는 대/소문자 구분 하지 않습니다.       공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following example appends text to a file. The method creates a new file if the file doesn’t exist. However, the directory named `temp` on drive C must exist for the example to complete successfully.  \n  \n [!code-cpp[File_AppendText#1](~/add/codesnippet/cpp/m-system.io.file.appendt_1.cpp)]\n [!code-cs[File_AppendText#1](~/add/codesnippet/csharp/m-system.io.file.appendt_1.cs)]\n [!code-vb[File_AppendText#1](~/add/codesnippet/visualbasic/m-system.io.file.appendt_1.vb)]"
  syntax:
    content: public static System.IO.StreamWriter AppendText (string path);
    parameters:
    - id: path
      type: System.String
      description: "경로를 추가할 파일입니다."
    return:
      type: System.IO.StreamWriter
      description: "U t F-8을 추가 하는 스트림 작성기 인코딩된 텍스트를 지정 된 파일 또는 새 파일입니다."
  overload: System.IO.File.AppendText*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "호출자에 게 필요한 권한이 없습니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>길이가&0; 인 문자열인, 공백만 포함 또는에 정의 된 대로 하나 이상의 잘못 된 문자가 들어 <xref:System.IO.Path.InvalidPathChars>합니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "지정된 된 경로, 파일 이름 또는 둘 다에 시스템 정의 최대 길이 초과 합니다. 예를 들어 Windows 기반 플랫폼에서 경로 248 자 미만, 이어야 하 고 파일 이름은 260 자 미만 이어야 합니다."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "지정 된 경로가 잘못 되었습니다 (예를 들어, 디렉터리 존재 하지 않거나 매핑되지 않은 드라이브에 있음)."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>잘못 된 형식입니다."
  platform:
  - net462
- uid: System.IO.File.Copy(System.String,System.String)
  id: Copy(System.String,System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: Copy(String,String)
  nameWithType: File.Copy(String,String)
  fullName: System.IO.File.Copy(String,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "새 파일에 기존 파일을 복사 합니다. 같은 이름의 파일을 덮어쓸 수는 없습니다."
  remarks: "이 메서드는 해당 하는 <xref:System.IO.File.Copy%28System.String%2CSystem.String%2CSystem.Boolean%29>메서드 오버 로드와는 `overwrite` 매개 변수 설정 `false`.</xref:System.IO.File.Copy%28System.String%2CSystem.String%2CSystem.Boolean%29>       `sourceFileName` 및 `destFileName` 매개 변수는 상대 또는 절대 경로 정보를 지정할 수 있습니다. 상대 경로 정보는 현재 작업 디렉터리에 상대적으로 해석 됩니다. 현재 작업 디렉터리를 가져오려면 참조는 <xref:System.IO.Directory.GetCurrentDirectory%2A?displayProperty=fullName>메서드.</xref:System.IO.Directory.GetCurrentDirectory%2A?displayProperty=fullName> 이 메서드는 매개 변수에서 와일드 카드 문자를 지원 하지 않습니다.       원본 파일의 특성 복사 된 파일에 유지 됩니다."
  example:
  - "The following example copies files to the C:\\archives\\2008 backup folder. It uses the two overloads of the <xref:System.IO.File.Copy%2A> method as follows:  \n  \n-   It first uses the Copymethod overload to copy text (.txt) files. The code demonstrates that this overload does not allow overwriting files that were already copied.  \n  \n-   It then uses the <xref:System.IO.File.Copy%28System.String%2CSystem.String%2CSystem.Boolean%29?displayProperty=fullName> method overload to copy pictures (.jpg files). The code demonstrates that this overload does allow overwriting files that were already copied.  \n  \n [!code-cs[FileCopyDelete#1](~/add/codesnippet/csharp/m-system.io.file.copy-sy_0_1.cs)]\n [!code-vb[FileCopyDelete#1](~/add/codesnippet/visualbasic/m-system.io.file.copy-sy_0_1.vb)]"
  syntax:
    content: public static void Copy (string sourceFileName, string destFileName);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "복사할 파일입니다."
    - id: destFileName
      type: System.String
      description: "대상 파일의 이름입니다. 이 이름은 디렉터리나 기존 파일 수 없습니다."
  overload: System.IO.File.Copy*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "호출자에 게 필요한 권한이 없습니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>sourceFileName</code>또는 <code>destFileName</code> 은 길이가&0; 인 문자열, 공백만 포함 또는에 정의 된 대로 하나 이상의 잘못 된 문자가 들어 <xref:System.IO.Path.InvalidPathChars>합니다.       -또는- <code>sourceFileName</code> 또는 <code>destFileName</code> 디렉터리를 지정 합니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>sourceFileName</code>or <code>destFileName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "지정된 된 경로, 파일 이름 또는 둘 다에 시스템 정의 최대 길이 초과 합니다. 예를 들어 Windows 기반 플랫폼에서 경로 248 자 미만, 이어야 하 고 파일 이름은 260 자 미만 이어야 합니다."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "에 지정 된 경로 <code> sourceFileName </code> 또는 <code> destFileName </code> 올바르지 않습니다 (예를 들어이 매핑되지 않은 드라이브에 있음)."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "<code>sourceFileName</code>찾을 수 없습니다."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>destFileName</code>있습니다.       -또는-한 I/O 오류가 발생 했습니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>sourceFileName</code>또는 <code>destFileName</code> 잘못 형식입니다."
  platform:
  - net462
- uid: System.IO.File.Copy(System.String,System.String,System.Boolean)
  id: Copy(System.String,System.String,System.Boolean)
  parent: System.IO.File
  langs:
  - csharp
  name: Copy(String,String,Boolean)
  nameWithType: File.Copy(String,String,Boolean)
  fullName: System.IO.File.Copy(String,String,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "새 파일에 기존 파일을 복사 합니다. 같은 이름의 파일을 덮어쓸 수 있습니다."
  remarks: "`sourceFileName` 및 `destFileName` 매개 변수는 상대 또는 절대 경로 정보를 지정할 수 있습니다. 상대 경로 정보는 현재 작업 디렉터리에 상대적으로 해석 됩니다. 이 메서드는 매개 변수에서 와일드 카드 문자를 지원 하지 않습니다.       원본 파일의 특성 복사 된 파일에 유지 됩니다.       공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following example copies files to the C:\\archives\\2008 backup folder. It uses the two overloads of the <xref:System.IO.File.Copy%2A> method as follows:  \n  \n-   It first uses the <xref:System.IO.File.Copy%28System.String%2CSystem.String%29?displayProperty=fullName> method overload to copy text (.txt) files. The code demonstrates that this overload does not allow overwriting files that were already copied.  \n  \n It then uses the Copy method overload to copy pictures (.jpg files). The code demonstrates that this overload does allow overwriting files that were already copied.  \n  \n [!code-cs[FileCopyDelete#1](~/add/codesnippet/csharp/m-system.io.file.copy-sy_1_1.cs)]\n [!code-vb[FileCopyDelete#1](~/add/codesnippet/visualbasic/m-system.io.file.copy-sy_1_1.vb)]"
  syntax:
    content: public static void Copy (string sourceFileName, string destFileName, bool overwrite);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "복사할 파일입니다."
    - id: destFileName
      type: System.String
      description: "대상 파일의 이름입니다. 이 이름은 디렉터리가 될 수 없습니다."
    - id: overwrite
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>대상 파일을 덮어쓸 수 있는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.IO.File.Copy*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "호출자에 게 필요한 권한이 없습니다.       -or-       <code>destFileName</code> is read-only."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>sourceFileName</code>또는 <code>destFileName</code> 은 길이가&0; 인 문자열, 공백만 포함 또는에 정의 된 대로 하나 이상의 잘못 된 문자가 들어 <xref:System.IO.Path.InvalidPathChars>합니다.       -또는- <code>sourceFileName</code> 또는 <code>destFileName</code> 디렉터리를 지정 합니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>sourceFileName</code>or <code>destFileName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "지정된 된 경로, 파일 이름 또는 둘 다에 시스템 정의 최대 길이 초과 합니다. 예를 들어 Windows 기반 플랫폼에서 경로 248 자 미만, 이어야 하 고 파일 이름은 260 자 미만 이어야 합니다."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "에 지정 된 경로 <code> sourceFileName </code> 또는 <code> destFileName </code> 올바르지 않습니다 (예를 들어이 매핑되지 않은 드라이브에 있음)."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "<code>sourceFileName</code>찾을 수 없습니다."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>destFileName</code>exists and <code>overwrite</code> is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>.       -또는-한 I/O 오류가 발생 했습니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>sourceFileName</code>또는 <code>destFileName</code> 잘못 형식입니다."
  platform:
  - net462
- uid: System.IO.File.Create(System.String)
  id: Create(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: Create(String)
  nameWithType: File.Create(String)
  fullName: System.IO.File.Create(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "만들거나 지정된 된 경로에 파일을 덮어씁니다."
  remarks: "<xref:System.IO.FileStream>이 메서드에서 만든 개체에는 기본 <xref:System.IO.FileShare>값 <xref:System.IO.FileShare>; 다른 프로세스 또는 코드 원본 파일 핸들이 닫힐 때까지 파일에 액세스할 수 있습니다.</xref:System.IO.FileShare> </xref:System.IO.FileShare> </xref:System.IO.FileStream>       이 메서드는 해당 하는 <xref:System.IO.File.Create%28System.String%2CSystem.Int32%29>기본 버퍼 크기를 사용 하 여 메서드 오버 로드.</xref:System.IO.File.Create%28System.String%2CSystem.Int32%29>       `path` 상대 또는 절대 경로 정보를 지정 하기 위해 매개 변수는 허용 합니다. 상대 경로 정보는 현재 작업 디렉터리에 상대적으로 해석 됩니다. 현재 작업 디렉터리를 가져오려면 <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A> 를 참조 하세요.       지정된 된 파일이 없는 경우 자동으로 만들어집니다. 파일이 읽기 전용으로 설정 되지 않은 경우, 내용은 덮어씁니다.       새 파일에 대 한 모든 읽기/쓰기 액세스는 기본적으로 모든 사용자에 게 부여 됩니다. 파일 읽기/쓰기 권한으로 열리고 닫아야 다른 응용 프로그램에서 열 수 있습니다.       공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following example creates a file in the specified path, writes some information to the file, and reads from the file.  \n  \n [!code-cs[File Create1#1](~/add/codesnippet/csharp/m-system.io.file.create-_0_1.cs)]\n [!code-cpp[File Create1#1](~/add/codesnippet/cpp/m-system.io.file.create-_0_1.cpp)]\n [!code-vb[File Create1#1](~/add/codesnippet/visualbasic/m-system.io.file.create-_0_1.vb)]"
  syntax:
    content: public static System.IO.FileStream Create (string path);
    parameters:
    - id: path
      type: System.String
      description: "경로 만들 파일의 이름입니다."
    return:
      type: System.IO.FileStream
      description: "A <xref href=&quot;System.IO.FileStream&quot;> </xref> 에 지정 된 파일에 대 한 읽기/쓰기 액세스를 제공 하는 <code> path </code>합니다."
  overload: System.IO.File.Create*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "호출자에 게 필요한 권한이 없습니다.       -또는- <code> path </code> 읽기 전용 파일을 지정 합니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>길이가&0; 인 문자열인, 공백만 포함 또는에 정의 된 대로 하나 이상의 잘못 된 문자가 들어 <xref:System.IO.Path.InvalidPathChars>합니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "지정된 된 경로, 파일 이름 또는 둘 다에 시스템 정의 최대 길이 초과 합니다. 예를 들어 Windows 기반 플랫폼에서 경로 248 자 미만, 이어야 하 고 파일 이름은 260 자 미만 이어야 합니다."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "지정 된 경로가 잘못 되었습니다 (예를 들어이 매핑되지 않은 드라이브에 있음)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "파일을 만드는 동안 I/O 오류가 발생 했습니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>잘못 된 형식입니다."
  platform:
  - net462
- uid: System.IO.File.Create(System.String,System.Int32)
  id: Create(System.String,System.Int32)
  parent: System.IO.File
  langs:
  - csharp
  name: Create(String,Int32)
  nameWithType: File.Create(String,Int32)
  fullName: System.IO.File.Create(String,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "만들거나 지정된 된 파일을 덮어씁니다."
  remarks: "<xref:System.IO.FileStream>이 메서드에서 만든 개체에는 기본 <xref:System.IO.FileShare>값 <xref:System.IO.FileShare>; 다른 프로세스 또는 코드 원본 파일 핸들이 닫힐 때까지 파일에 액세스할 수 있습니다.</xref:System.IO.FileShare> </xref:System.IO.FileShare> </xref:System.IO.FileStream>       `path` 상대 또는 절대 경로 정보를 지정 하기 위해 매개 변수는 허용 합니다. 상대 경로 정보는 현재 작업 디렉터리에 상대적으로 해석 됩니다. 현재 작업 디렉터리를 가져오려면 <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A> 를 참조 하세요.       이 메서드는 해당 하는 <xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.Int32%29>생성자 오버 로드.</xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.Int32%29> 지정된 된 파일이 없는 경우 자동으로 만들어집니다. 파일이 읽기 전용으로 설정 되지 않은 경우, 내용은 덮어씁니다.       새 파일에 대 한 모든 읽기/쓰기 액세스는 기본적으로 모든 사용자에 게 부여 됩니다. 파일 읽기/쓰기 권한으로 열리고 닫아야 다른 응용 프로그램에서 열 수 있습니다.       공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following example creates a file with the specified buffer size.  \n  \n [!code-cs[File Create2#1](~/add/codesnippet/csharp/m-system.io.file.create-_1_1.cs)]\n [!code-vb[File Create2#1](~/add/codesnippet/visualbasic/m-system.io.file.create-_1_1.vb)]\n [!code-cpp[File Create2#1](~/add/codesnippet/cpp/m-system.io.file.create-_1_1.cpp)]"
  syntax:
    content: public static System.IO.FileStream Create (string path, int bufferSize);
    parameters:
    - id: path
      type: System.String
      description: "파일의 이름입니다."
    - id: bufferSize
      type: System.Int32
      description: "위해 버퍼링 할 바이트 수를 읽고 파일에 기록 합니다."
    return:
      type: System.IO.FileStream
      description: "A <xref href=&quot;System.IO.FileStream&quot;> </xref> 에 지정 된 파일에 대 한 읽기/쓰기 액세스를 제공 하는 지정 된 버퍼 크기와 <code> path </code>합니다."
  overload: System.IO.File.Create*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "호출자에 게 필요한 권한이 없습니다.       -또는- <code> path </code> 읽기 전용 파일을 지정 합니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>길이가&0; 인 문자열인, 공백만 포함 또는에 정의 된 대로 하나 이상의 잘못 된 문자가 들어 <xref:System.IO.Path.InvalidPathChars>합니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "지정된 된 경로, 파일 이름 또는 둘 다에 시스템 정의 최대 길이 초과 합니다. 예를 들어 Windows 기반 플랫폼에서 경로 248 자 미만, 이어야 하 고 파일 이름은 260 자 미만 이어야 합니다."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "지정 된 경로가 잘못 되었습니다 (예를 들어이 매핑되지 않은 드라이브에 있음)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "파일을 만드는 동안 I/O 오류가 발생 했습니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>잘못 된 형식입니다."
  platform:
  - net462
- uid: System.IO.File.Create(System.String,System.Int32,System.IO.FileOptions)
  id: Create(System.String,System.Int32,System.IO.FileOptions)
  parent: System.IO.File
  langs:
  - csharp
  name: Create(String,Int32,FileOptions)
  nameWithType: File.Create(String,Int32,FileOptions)
  fullName: System.IO.File.Create(String,Int32,FileOptions)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "만들거나 버퍼 크기를 지정 하는 지정 된 파일을 덮어씁니다와 <xref href=&quot;System.IO.FileOptions&quot;> </xref> 을 만들거나 파일을 덮어쓸 방식을 설명 하는 값입니다."
  remarks: "`path` 상대 또는 절대 경로 정보를 지정 하기 위해 매개 변수는 허용 합니다. 상대 경로 정보는 현재 작업 디렉터리에 상대적으로 해석 됩니다. 현재 작업 디렉터리를 가져오려면 <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A> 를 참조 하세요.       이 메서드는 해당 하는 <xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.Int32%29>생성자 오버 로드.</xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.Int32%29> 지정된 된 파일이 없는 경우 자동으로 만들어집니다. 파일이 읽기 전용으로 설정 되지 않은 경우, 내용은 덮어씁니다.       새 파일에 대 한 모든 읽기/쓰기 액세스는 기본적으로 모든 사용자에 게 부여 됩니다. 파일 읽기/쓰기 권한으로 열리고 닫아야 다른 응용 프로그램에서 열 수 있습니다.       공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public static System.IO.FileStream Create (string path, int bufferSize, System.IO.FileOptions options);
    parameters:
    - id: path
      type: System.String
      description: "파일의 이름입니다."
    - id: bufferSize
      type: System.Int32
      description: "위해 버퍼링 할 바이트 수를 읽고 파일에 기록 합니다."
    - id: options
      type: System.IO.FileOptions
      description: "중 하나는 <xref href=&quot;System.IO.FileOptions&quot;> </xref> 만들거나 파일을 덮어쓸 하는 방법을 설명 하는 값입니다."
    return:
      type: System.IO.FileStream
      description: "지정 된 버퍼 크기는 새 파일입니다."
  overload: System.IO.File.Create*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "호출자에 게 필요한 권한이 없습니다.       -또는- <code> path </code> 읽기 전용 파일을 지정 합니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>길이가&0; 인 문자열인, 공백만 포함 또는에 정의 된 대로 하나 이상의 잘못 된 문자가 들어 <xref:System.IO.Path.InvalidPathChars>합니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "지정된 된 경로, 파일 이름 또는 둘 다에 시스템 정의 최대 길이 초과 합니다. 예를 들어 Windows 기반 플랫폼에서 경로 248 자 미만, 이어야 하 고 파일 이름은 260 자 미만 이어야 합니다."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "지정 된 경로가 잘못 되었습니다 (예를 들어 것은 매핑되지 않은 드라이브에 있습니다."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "파일을 만드는 동안 I/O 오류가 발생 했습니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>잘못 된 형식입니다."
  platform:
  - net462
- uid: System.IO.File.Create(System.String,System.Int32,System.IO.FileOptions,System.Security.AccessControl.FileSecurity)
  id: Create(System.String,System.Int32,System.IO.FileOptions,System.Security.AccessControl.FileSecurity)
  parent: System.IO.File
  langs:
  - csharp
  name: Create(String,Int32,FileOptions,FileSecurity)
  nameWithType: File.Create(String,Int32,FileOptions,FileSecurity)
  fullName: System.IO.File.Create(String,Int32,FileOptions,FileSecurity)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "만들거나 지정 된 버퍼 크기, 파일 옵션 및 파일 보안으로 지정된 된 파일을 덮어씁니다."
  remarks: "`path` 상대 또는 절대 경로 정보를 지정 하기 위해 매개 변수는 허용 합니다. 상대 경로 정보는 현재 작업 디렉터리에 상대적으로 해석 됩니다. 현재 작업 디렉터리를 가져오려면 <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A> 를 참조 하세요.       이 메서드는 해당 하는 <xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.Int32%29>생성자 오버 로드.</xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.Int32%29> 지정된 된 파일이 없는 경우 자동으로 만들어집니다. 파일이 읽기 전용으로 설정 되지 않은 경우, 내용은 덮어씁니다.       새 파일에 대 한 모든 읽기/쓰기 액세스는 기본적으로 모든 사용자에 게 부여 됩니다. 파일 읽기/쓰기 권한으로 열리고 닫아야 다른 응용 프로그램에서 열 수 있습니다.       공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public static System.IO.FileStream Create (string path, int bufferSize, System.IO.FileOptions options, System.Security.AccessControl.FileSecurity fileSecurity);
    parameters:
    - id: path
      type: System.String
      description: "파일의 이름입니다."
    - id: bufferSize
      type: System.Int32
      description: "위해 버퍼링 할 바이트 수를 읽고 파일에 기록 합니다."
    - id: options
      type: System.IO.FileOptions
      description: "중 하나는 <xref href=&quot;System.IO.FileOptions&quot;> </xref> 만들거나 파일을 덮어쓸 하는 방법을 설명 하는 값입니다."
    - id: fileSecurity
      type: System.Security.AccessControl.FileSecurity
      description: "중 하나는 <xref href=&quot;System.Security.AccessControl.FileSecurity&quot;> </xref> 액세스 제어를 결정 하는 값 및 파일에 대 한 보안 감사 합니다."
    return:
      type: System.IO.FileStream
      description: "지정 된 버퍼 크기, 파일 옵션 및 파일 보안을 사용 하 여 새 파일입니다."
  overload: System.IO.File.Create*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "호출자에 게 필요한 권한이 없습니다.       -또는- <code> path </code> 읽기 전용 파일을 지정 합니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>길이가&0; 인 문자열인, 공백만 포함 또는에 정의 된 대로 하나 이상의 잘못 된 문자가 들어 <xref:System.IO.Path.InvalidPathChars>합니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "지정된 된 경로, 파일 이름 또는 둘 다에 시스템 정의 최대 길이 초과 합니다. 예를 들어 Windows 기반 플랫폼에서 경로 248 자 미만, 이어야 하 고 파일 이름은 260 자 미만 이어야 합니다."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "지정 된 경로가 잘못 되었습니다 (예를 들어이 매핑되지 않은 드라이브에 있음)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "파일을 만드는 동안 I/O 오류가 발생 했습니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>잘못 된 형식입니다."
  platform:
  - net462
- uid: System.IO.File.CreateText(System.String)
  id: CreateText(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: CreateText(String)
  nameWithType: File.CreateText(String)
  fullName: System.IO.File.CreateText(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "만들거나 u t F-8로 인코딩된 텍스트를 쓰기 위해 파일을 엽니다."
  remarks: "이 메서드는 해당 하는 <xref:System.IO.StreamWriter.%23ctor%28System.String%2CSystem.Boolean%29>생성자 오버 로드와는 `append` 매개 변수 설정 `false`.</xref:System.IO.StreamWriter.%23ctor%28System.String%2CSystem.Boolean%29> 으로 지정한 파일이 있으면 `path` 존재 하지 않는 생성 됩니다. 파일이 없으면 해당 내용은 덮어씁니다. 추가 스레드는 열려 있는 동안 파일을 읽을 수 있습니다.       `path` 상대 또는 절대 경로 정보를 지정 하기 위해 매개 변수는 허용 합니다. 상대 경로 정보는 현재 작업 디렉터리에 상대적으로 해석 됩니다. 현재 작업 디렉터리를 가져오려면 <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A> 를 참조 하세요.       공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following example creates a file for text writing and reading.  \n  \n [!code-cs[File CreateText#1](~/add/codesnippet/csharp/m-system.io.file.createt_1.cs)]\n [!code-vb[File CreateText#1](~/add/codesnippet/visualbasic/m-system.io.file.createt_1.vb)]\n [!code-cpp[File CreateText#1](~/add/codesnippet/cpp/m-system.io.file.createt_1.cpp)]"
  syntax:
    content: public static System.IO.StreamWriter CreateText (string path);
    parameters:
    - id: path
      type: System.String
      description: "파일 쓰기 위해 열 수입니다."
    return:
      type: System.IO.StreamWriter
      description: "A <xref:System.IO.StreamWriter>utf-8 인코딩을 사용 하 여 지정된 된 파일에 쓰는.</xref:System.IO.StreamWriter>"
  overload: System.IO.File.CreateText*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "호출자에 게 필요한 권한이 없습니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>길이가&0; 인 문자열인, 공백만 포함 또는에 정의 된 대로 하나 이상의 잘못 된 문자가 들어 <xref:System.IO.Path.InvalidPathChars>합니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "지정된 된 경로, 파일 이름 또는 둘 다에 시스템 정의 최대 길이 초과 합니다. 예를 들어 Windows 기반 플랫폼에서 경로 248 자 미만, 이어야 하 고 파일 이름은 260 자 미만 이어야 합니다."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "지정 된 경로가 잘못 되었습니다 (예를 들어이 매핑되지 않은 드라이브에 있음)."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>잘못 된 형식입니다."
  platform:
  - net462
- uid: System.IO.File.Decrypt(System.String)
  id: Decrypt(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: Decrypt(String)
  nameWithType: File.Decrypt(String)
  fullName: System.IO.File.Decrypt(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "현재 계정 사용 하 여 암호화 된 파일을 암호 해독 된 <xref:System.IO.File.Encrypt*>메서드.</xref:System.IO.File.Encrypt*>"
  remarks: "암호 해독 메서드를 사용 하 여 암호화 된 파일을 암호 해독할 수 있습니다는 <xref:System.IO.File.Encrypt%2A>메서드.</xref:System.IO.File.Encrypt%2A>  암호 해독 메서드는 현재 사용자 계정을 사용 하 여 암호화 된 파일에만 해독할 수 있습니다.       암호 해독 메서드 해독 파일을 단독으로 사용 해야 하며 다른 프로세스에서 파일을 사용 하는 경우 예외가 발생 합니다. 파일이 암호화 되지 않은 경우 암호 해독 성공 했음을 나타내는&0;이 아닌 값을 반환 됩니다.       둘 다는 <xref:System.IO.File.Encrypt%2A>메서드 및 암호 해독 메서드를 사용 하는 컴퓨터와 메서드를 호출 하는 프로세스의 파일 암호화 키에 설치 된 암호화 서비스 공급자 (CSP)를 사용 합니다.</xref:System.IO.File.Encrypt%2A>       현재 파일 시스템 NTFS 및 현재 운영 체제가 Windows NT 이루어야 서식이 지정 되거나 이상 이어야 합니다."
  example:
  - "The following code example uses the <xref:System.IO.File.Encrypt%2A> method and the Decrypt method to encrypt and then decrypt a file. The file must exist for the example to work.  \n  \n [!code-cs[IO.File.Encrypt-Decrypt#1](~/add/codesnippet/csharp/m-system.io.file.decrypt_1.cs)]\n [!code-cpp[IO.File.Encrypt-Decrypt#1](~/add/codesnippet/cpp/m-system.io.file.decrypt_1.cpp)]\n [!code-vb[IO.File.Encrypt-Decrypt#1](~/add/codesnippet/visualbasic/m-system.io.file.decrypt_1.vb)]"
  syntax:
    content: public static void Decrypt (string path);
    parameters:
    - id: path
      type: System.String
      description: "해독할 파일을 나타내는 경로입니다."
  overload: System.IO.File.Decrypt*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> path </code> 매개 변수는 길이가&0; 인 문자열 또는 공백만 포함 <xref:System.IO.Path.InvalidPathChars>.</xref:System.IO.Path.InvalidPathChars> 에 정의 된 대로 하나 이상의 잘못 된 문자를 포함"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>path</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.DriveNotFoundException
    commentId: T:System.IO.DriveNotFoundException
    description: "잘못 된 드라이브를 지정 했습니다."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "설명 된 파일의 <code> path </code> 매개 변수를 찾을 수 없습니다."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "파일을 여는 동안 I/O 오류가 발생 했습니다. 예를 들어 암호화 된 파일이 이미 열려 있습니다.       -또는-이 작업은 현재 플랫폼에서 지원 되지 않습니다."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "지정된 된 경로, 파일 이름 또는 둘 다에 시스템 정의 최대 길이 초과 합니다. 예를 들어 Windows 기반 플랫폼에서 경로 248 자 미만, 이어야 하 고 파일 이름은 260 자 미만 이어야 합니다."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "현재 운영 체제가 지원 되지 않은 Windows NT 이상입니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "파일 시스템이 NTFS가 아닙니다."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code> path </code> 매개 변수 파일을 지정한 경우 읽기 전용입니다.       -또는-이 작업은 현재 플랫폼에서 지원 되지 않습니다.       -또는- <code> path </code> 매개 변수는 디렉터리를 지정 합니다.       -또는-호출자에 게는 필요한 사용 권한이 없습니다."
  platform:
  - net462
- uid: System.IO.File.Delete(System.String)
  id: Delete(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: Delete(String)
  nameWithType: File.Delete(String)
  fullName: System.IO.File.Delete(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "지정된 된 파일을 삭제합니다."
  remarks: "파일 이름에 대 한 모든 상대 또는 절대 경로 사용 하 여 지정 된 `path` 매개 변수입니다. 와일드 카드 문자를 포함할 수 없습니다. 상대 경로 정보는 현재 작업 디렉터리에 상대적으로 해석 됩니다. 현재 작업 디렉터리를 가져오려면 <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A> 를 참조 하세요.       파일을 삭제할 수 없으면 예외가 발생 하지 않습니다.       공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following example copies groups of files to the C:\\archives\\2008 backup folder and then deletes them from the source folder.  \n  \n [!code-cs[FileCopyDelete#1](~/add/codesnippet/csharp/m-system.io.file.delete-_1.cs)]\n [!code-vb[FileCopyDelete#1](~/add/codesnippet/visualbasic/m-system.io.file.delete-_1.vb)]"
  syntax:
    content: public static void Delete (string path);
    parameters:
    - id: path
      type: System.String
      description: "삭제할 파일의 이름입니다. 와일드 카드 문자가 지원 되지 않습니다."
  overload: System.IO.File.Delete*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>길이가&0; 인 문자열인, 공백만 포함 또는에 정의 된 대로 하나 이상의 잘못 된 문자가 들어 <xref:System.IO.Path.InvalidPathChars>합니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "지정 된 경로가 잘못 되었습니다 (예를 들어이 매핑되지 않은 드라이브에 있음)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "지정된 된 파일 사용 중인 경우       -또는-파일에 대해 열린 핸들이 있고 운영 체제가 Windows XP 또는 이전 버전입니다. 이 열린 핸들은 디렉터리 및 파일을 열거 하면 발생할 수 있습니다. 자세한 내용은 참조 [하는 방법: 디렉터리 및 파일 열거](~/add/includes/ajax-current-ext-md.md)합니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>잘못 된 형식입니다."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "지정된 된 경로, 파일 이름 또는 둘 다에 시스템 정의 최대 길이 초과 합니다. 예를 들어 Windows 기반 플랫폼에서 경로 248 자 미만, 이어야 하 고 파일 이름은 260 자 미만 이어야 합니다."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "호출자에 게 필요한 권한이 없습니다.       -또는-파일이 사용 중인 실행 파일입니다.       -또는- <code> path </code> 디렉터리입니다.       -또는- <code> path </code> 읽기 전용 파일을 지정 합니다."
  platform:
  - net462
- uid: System.IO.File.Encrypt(System.String)
  id: Encrypt(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: Encrypt(String)
  nameWithType: File.Encrypt(String)
  fullName: System.IO.File.Encrypt(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "파일을 암호화 하는 데 사용 하는 계정 으로만 해독할 수 있도록 파일을 암호화 합니다."
  remarks: "암호화 메서드를 사용 하면이 메서드를 호출 하는 데 사용 하는 계정 으로만 해독할 수 있도록 파일을 암호화할 수 있습니다. 사용 하 여는 <xref:System.IO.File.Decrypt%2A>암호화 방법으로 암호화 된 파일의 암호를 해독 하는 메서드.</xref:System.IO.File.Decrypt%2A>       암호화 메서드 되 고 암호화 한 파일을 단독으로 사용 해야 하며 다른 프로세스에서 파일을 사용 하는 경우 실패 합니다.       암호화 메서드 및 <xref:System.IO.File.Decrypt%2A>메서드에서 컴퓨터와 메서드를 호출 하는 프로세스의 파일 암호화 키에 설치 된 암호화 서비스 공급자 (CSP)을 사용 합니다.</xref:System.IO.File.Decrypt%2A>       이 메서드는 모든 버전의 Windows에서 사용할 수 없습니다. 예를 들어 Home edition에서 사용할 수는 없습니다.       현재 파일 시스템을 NTFS로 포맷 되어야 합니다."
  example:
  - "The following code example uses the Encrypt method and the <xref:System.IO.File.Decrypt%2A> method to encrypt and then decrypt a file. The file must exist for the example to work.  \n  \n [!code-cs[IO.File.Encrypt-Decrypt#1](~/add/codesnippet/csharp/m-system.io.file.encrypt_1.cs)]\n [!code-cpp[IO.File.Encrypt-Decrypt#1](~/add/codesnippet/cpp/m-system.io.file.encrypt_1.cpp)]\n [!code-vb[IO.File.Encrypt-Decrypt#1](~/add/codesnippet/visualbasic/m-system.io.file.encrypt_1.vb)]"
  syntax:
    content: public static void Encrypt (string path);
    parameters:
    - id: path
      type: System.String
      description: "암호화할 파일을 나타내는 경로입니다."
  overload: System.IO.File.Encrypt*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> path </code> 매개 변수는 길이가&0; 인 문자열 또는 공백만 포함 <xref:System.IO.Path.InvalidPathChars>.</xref:System.IO.Path.InvalidPathChars> 에 정의 된 대로 하나 이상의 잘못 된 문자를 포함"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>path</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.DriveNotFoundException
    commentId: T:System.IO.DriveNotFoundException
    description: "잘못 된 드라이브를 지정 했습니다."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "설명 된 파일의 <code> path </code> 매개 변수를 찾을 수 없습니다."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "파일을 여는 동안 I/O 오류가 발생 했습니다.       -또는-이 작업은 현재 플랫폼에서 지원 되지 않습니다."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "지정된 된 경로, 파일 이름 또는 둘 다에 시스템 정의 최대 길이 초과 합니다. 예를 들어 Windows 기반 플랫폼에서 경로 248 자 미만, 이어야 하 고 파일 이름은 260 자 미만 이어야 합니다."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "현재 운영 체제가 지원 되지 않은 Windows NT 이상입니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "파일 시스템이 NTFS가 아닙니다."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code> path </code> 매개 변수 파일을 지정한 경우 읽기 전용입니다.       -또는-이 작업은 현재 플랫폼에서 지원 되지 않습니다.       -또는- <code> path </code> 매개 변수는 디렉터리를 지정 합니다.       -또는-호출자에 게는 필요한 사용 권한이 없습니다."
  platform:
  - net462
- uid: System.IO.File.Exists(System.String)
  id: Exists(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: Exists(String)
  nameWithType: File.Exists(String)
  fullName: System.IO.File.Exists(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "지정 된 파일의 존재 여부를 결정 합니다."
  remarks: "Exists 메서드 경로 유효성 검사에 사용할 수 없습니다, 검사 파일에 지정 된 경우 `path` 존재 합니다. Exists에 잘못 된 경로 전달 반환 `false`합니다. 경로 잘못 된 문자가 포함 된 여부를 확인 하려면 호출할 수 있습니다는 <xref:System.IO.Path.GetInvalidPathChars%2A>파일 시스템에 대 한 유효 하지 않은 문자를 검색 하는 메서드입니다.</xref:System.IO.Path.GetInvalidPathChars%2A> 여부를 테스트 하는 정규식을 만들 수도 있습니다 경로가 사용자 환경에 대 한 유효 합니다. 허용 가능한 경로의 예 <xref:System.IO.File>.</xref:System.IO.File> 참조       참조 <xref:System.IO.Directory.Exists%2A?displayProperty=fullName>.</xref:System.IO.Directory.Exists%2A?displayProperty=fullName> 디렉터리가 존재 하는 경우를 확인 하려면       수는 다른 프로세스 조치할 수 있는 잠재적으로 가져와서 파일로 인식 Exists 메서드를 호출할 <xref:System.IO.File.Delete%2A>.</xref:System.IO.File.Delete%2A> 같은 파일에서 다른 작업 수행       `path` 상대 또는 절대 경로 정보를 지정 하기 위해 매개 변수는 허용 합니다. 상대 경로 정보는 현재 작업 디렉터리에 상대적으로 해석 됩니다. 현재 작업 디렉터리를 가져오려면 <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A> 를 참조 하세요.       경우 `path` 이 메서드가 반환 디렉터리를 나타내면 `false`합니다. 후행 공백을 제거는 `path` 파일이 있는 경우를 결정 하기 전에 매개 변수입니다.       Exists 메서드 반환 `false` 지정한 파일이 있는지 확인 하는 동안 오류가 발생 하는 경우. 이 파일 이름에 잘못 된 문자 또는 실패 나 누락 된 디스크에 문자가 너무 많습니다. 전달할 때 예외를 발생 시키는 상황에서 발생할 수 있습니다 또는 호출자에 게 파일을 읽을 수 있는 사용 권한이 없습니다."
  example:
  - "The following example determines if a file exists.  \n  \n [!code-vb[File Exists#1](~/add/codesnippet/visualbasic/m-system.io.file.exists-_1.vb)]\n [!code-cs[File Exists#1](~/add/codesnippet/csharp/m-system.io.file.exists-_1.cs)]"
  syntax:
    content: public static bool Exists (string path);
    parameters:
    - id: path
      type: System.String
      description: "확인할 파일입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>호출자에 게 필요한 사용 권한이 및 <code> path </code> 기존 파일의 이름이 고, 그렇지 않으면, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 에 반환 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 경우 <code> path </code> 은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, 잘못 된 경로 이거나 길이가&0; 인 문자열입니다. 호출자에 지정한 파일을 읽을 수 있는 권한이 없는 경우 예외가 throw 되지 않습니다 및 메서드 반환 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 의 존재 여부에 관계 없이 <code> path </code>합니다."
  overload: System.IO.File.Exists*
  exceptions: []
  platform:
  - net462
- uid: System.IO.File.GetAccessControl(System.String)
  id: GetAccessControl(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: GetAccessControl(String)
  nameWithType: File.GetAccessControl(String)
  fullName: System.IO.File.GetAccessControl(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "가져옵니다는 <xref href=&quot;System.Security.AccessControl.FileSecurity&quot;> </xref> 지정된 된 파일에 대 한 액세스 제어 목록 (ACL) 항목을 캡슐화 하는 개체입니다."
  remarks: "파일에 대 한 액세스 제어 목록 (ACL) 항목을 검색 하려면 두 개의 새로운 메서드 메서드를 사용 합니다.       개인 및/또는 나 갖지 않고에 지정된 된 파일에서 특정 작업을 수행할 권한을 그룹이 ACL에 설명 합니다. 자세한 내용은 참조 [하는 방법: 액세스 제어 목록 항목 추가 또는 제거](~/add/includes/ajax-current-ext-md.md)합니다.       NTFS 환경에서 <xref:System.Security.AccessControl.FileSystemRights>및 <xref:System.Security.AccessControl.FileSystemRights>사용자에 게 하는 경우 사용자에 게 권한이 부여 됩니다 <xref:System.Security.AccessControl.FileSystemRights>부모 폴더에 대 한.</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights> 거부 하려면 <xref:System.Security.AccessControl.FileSystemRights>및 <xref:System.Security.AccessControl.FileSystemRights>, 거부 <xref:System.Security.AccessControl.FileSystemRights>부모 디렉터리에 있습니다.</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights>"
  example:
  - "The following code example uses the <xref:System.IO.File.GetAccessControl%2A> and the <xref:System.IO.File.SetAccessControl%2A> methods to add and then remove an access control list (ACL) entry from a file.  You must supply a valid user or group account to run this example.  \n  \n [!code-cs[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/csharp/m-system.io.file.getacce_1.cs)]\n [!code-vb[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/visualbasic/m-system.io.file.getacce_1.vb)]\n [!code-cpp[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/cpp/m-system.io.file.getacce_1.cpp)]"
  syntax:
    content: public static System.Security.AccessControl.FileSecurity GetAccessControl (string path);
    parameters:
    - id: path
      type: System.String
      description: "포함 된 파일에 대 한 경로 <xref href=&quot;System.Security.AccessControl.FileSecurity&quot;> </xref> 파일의 액세스 제어 목록 (ACL) 정보를 설명 하는 개체입니다."
    return:
      type: System.Security.AccessControl.FileSecurity
      description: "A <xref href=&quot;System.Security.AccessControl.FileSecurity&quot;> </xref> 규칙에서 설명 하는 파일에 대 한 액세스 제어를 캡슐화 하는 <code> path </code> 매개 변수입니다."
  overload: System.IO.File.GetAccessControl*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "파일을 여는 동안 I/O 오류가 발생 했습니다."
  - type: System.Runtime.InteropServices.SEHException
    commentId: T:System.Runtime.InteropServices.SEHException
    description: "The <code>path</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.SystemException
    commentId: T:System.SystemException
    description: "파일을 찾을 수 없습니다."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code> path </code> 매개 변수 파일을 지정한 경우 읽기 전용입니다.       -또는-이 작업은 현재 플랫폼에서 지원 되지 않습니다.       -또는- <code> path </code> 매개 변수는 디렉터리를 지정 합니다.       -또는-호출자에 게는 필요한 사용 권한이 없습니다."
  platform:
  - net462
- uid: System.IO.File.GetAccessControl(System.String,System.Security.AccessControl.AccessControlSections)
  id: GetAccessControl(System.String,System.Security.AccessControl.AccessControlSections)
  parent: System.IO.File
  langs:
  - csharp
  name: GetAccessControl(String,AccessControlSections)
  nameWithType: File.GetAccessControl(String,AccessControlSections)
  fullName: System.IO.File.GetAccessControl(String,AccessControlSections)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "가져옵니다는 <xref href=&quot;System.Security.AccessControl.FileSecurity&quot;> </xref> 지정 된 형식의 특정 파일에 대 한 액세스 제어 목록 (ACL) 항목을 캡슐화 하는 개체입니다."
  remarks: "파일에 대 한 액세스 제어 목록 (ACL) 항목을 검색 하려면 두 개의 새로운 메서드 메서드를 사용 합니다.       개인 및/또는 나 갖지 않고에 지정된 된 파일에서 특정 작업을 수행할 권한을 그룹이 ACL에 설명 합니다. 자세한 내용은 참조 [하는 방법: 액세스 제어 목록 항목 추가 또는 제거](~/add/includes/ajax-current-ext-md.md)합니다.       NTFS 환경에서 <xref:System.Security.AccessControl.FileSystemRights>및 <xref:System.Security.AccessControl.FileSystemRights>사용자에 게 하는 경우 사용자에 게 권한이 부여 됩니다 <xref:System.Security.AccessControl.FileSystemRights>부모 폴더에 대 한.</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights> 거부 하려면 <xref:System.Security.AccessControl.FileSystemRights>및 <xref:System.Security.AccessControl.FileSystemRights>, 거부 <xref:System.Security.AccessControl.FileSystemRights>부모 디렉터리에 있습니다.</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights>"
  syntax:
    content: public static System.Security.AccessControl.FileSecurity GetAccessControl (string path, System.Security.AccessControl.AccessControlSections includeSections);
    parameters:
    - id: path
      type: System.String
      description: "포함 된 파일에 대 한 경로 <xref href=&quot;System.Security.AccessControl.FileSecurity&quot;> </xref> 파일의 액세스 제어 목록 (ACL) 정보를 설명 하는 개체입니다."
    - id: includeSections
      type: System.Security.AccessControl.AccessControlSections
      description: "중 하나는 <xref href=&quot;System.Security.AccessControl.AccessControlSections&quot;> </xref> 액세스 유형을 지정 하는 값 목록 (ACL) 정보를 받을 수를 제어 합니다."
    return:
      type: System.Security.AccessControl.FileSecurity
      description: "A <xref href=&quot;System.Security.AccessControl.FileSecurity&quot;> </xref> 규칙에서 설명 하는 파일에 대 한 액세스 제어를 캡슐화 하는 <code> path </code> 매개 변수입니다."
  overload: System.IO.File.GetAccessControl*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "파일을 여는 동안 I/O 오류가 발생 했습니다."
  - type: System.Runtime.InteropServices.SEHException
    commentId: T:System.Runtime.InteropServices.SEHException
    description: "The <code>path</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.SystemException
    commentId: T:System.SystemException
    description: "파일을 찾을 수 없습니다."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code> path </code> 매개 변수 파일을 지정한 경우 읽기 전용입니다.       -또는-이 작업은 현재 플랫폼에서 지원 되지 않습니다.       -또는- <code> path </code> 매개 변수는 디렉터리를 지정 합니다.       -또는-호출자에 게는 필요한 사용 권한이 없습니다."
  platform:
  - net462
- uid: System.IO.File.GetAttributes(System.String)
  id: GetAttributes(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: GetAttributes(String)
  nameWithType: File.GetAttributes(String)
  fullName: System.IO.File.GetAttributes(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "가져옵니다는 <xref href=&quot;System.IO.FileAttributes&quot;> </xref> 경로에 있는 파일의 합니다."
  remarks: "`path` 상대 또는 절대 경로 정보를 지정 하기 위해 매개 변수는 허용 합니다. 상대 경로 정보는 현재 작업 디렉터리에 상대적으로 해석 됩니다. 현재 작업 디렉터리를 가져오려면 <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A> 를 참조 하세요.       공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following example demonstrates the `GetAttributes` and `SetAttributes` methods by applying the `Archive` and `Hidden` attributes to a file.  \n  \n [!code-cs[File GetAttributes#1](~/add/codesnippet/csharp/m-system.io.file.getattr_1.cs)]\n [!code-cpp[File GetAttributes#1](~/add/codesnippet/cpp/m-system.io.file.getattr_1.cpp)]\n [!code-vb[File GetAttributes#1](~/add/codesnippet/visualbasic/m-system.io.file.getattr_1.vb)]"
  syntax:
    content: public static System.IO.FileAttributes GetAttributes (string path);
    parameters:
    - id: path
      type: System.String
      description: "파일 경로입니다."
    return:
      type: System.IO.FileAttributes
      description: "<xref href=&quot;System.IO.FileAttributes&quot;> </xref> 경로에 있는 파일의 합니다."
  overload: System.IO.File.GetAttributes*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>비어, 공백만 포함 또는 잘못 된 문자가 있습니다."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "지정된 된 경로, 파일 이름 또는 둘 다에 시스템 정의 최대 길이 초과 합니다. 예를 들어 Windows 기반 플랫폼에서 경로 248 자 미만, 이어야 하 고 파일 이름은 260 자 미만 이어야 합니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>잘못 된 형식입니다."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "<code>path</code>파일을 나타내고 유효 하지 않을 경우 예: 매핑되지 않은 드라이브 또는 파일에 찾을 수 없습니다."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "<code>path</code>디렉터리를 나타내고 유효 하지 않을 경우 예: 매핑되지 않은 드라이브 또는 디렉터리에 있는 것을 찾을 수 없습니다."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "이 파일은 다른 프로세스에서 사용 중입니다."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "호출자에 게 필요한 권한이 없습니다."
  platform:
  - net462
- uid: System.IO.File.GetCreationTime(System.String)
  id: GetCreationTime(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: GetCreationTime(String)
  nameWithType: File.GetCreationTime(String)
  fullName: System.IO.File.GetCreationTime(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "만든 날짜와 시간을 지정 된 파일 또는 디렉터리를 반환합니다."
  remarks: "> [!NOTE]>이 메서드는 운영 체제에 의해 값을 가진 지속적으로 업데이트 되지 않을 수 있습니다는 네이티브 함수를 사용 하기 때문에 정확 하지 않은 값을 반환할 수 있습니다.       `path` 상대 또는 절대 경로 정보를 지정 하기 위해 매개 변수는 허용 합니다. 상대 경로 정보는 현재 작업 디렉터리에 상대적으로 해석 됩니다. 현재 작업 디렉터리를 가져오려면 <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A> 를 참조 하세요.       파일에서 설명 하는 경우는 `path` 매개 변수가 없는,이 메서드가 반환 서 기 1601 년 1 월 1 일 자정 12 시 (협정 세계시) Utc (협정 세계시)를 현지 시간으로 조정 합니다.       NTFS로 포맷 된 드라이브는 파일을 만든 시간, 짧은 시간 동안 등의 파일에 대 한 정보를 캐시할 수 있습니다. 결과적으로, 덮어쓰기 또는 기존 파일을 대체 하는 경우 파일의 생성 시간을 명시적으로 설정 해야 할 수도 있습니다.       공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following example demonstrates `GetCreationTime`.  \n  \n [!code-vb[System.IO.File.GetCreationTime#1](~/add/codesnippet/visualbasic/m-system.io.file.getcrea_0_1.vb)]"
  syntax:
    content: public static DateTime GetCreationTime (string path);
    parameters:
    - id: path
      type: System.String
      description: "파일 또는 디렉터리를 만든 날짜와 시간 정보를 가져올입니다."
    return:
      type: System.DateTime
      description: "A <xref:System.DateTime>만든 날짜와 지정 된 파일 또는 디렉터리에 대 한 시간으로 설정 합니다.</xref:System.DateTime> 이 값은 현지 시간으로 표현 됩니다."
  overload: System.IO.File.GetCreationTime*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "호출자에 게 필요한 권한이 없습니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>길이가&0; 인 문자열인, 공백만 포함 또는에 정의 된 대로 하나 이상의 잘못 된 문자가 들어 <xref:System.IO.Path.InvalidPathChars>합니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "지정된 된 경로, 파일 이름 또는 둘 다에 시스템 정의 최대 길이 초과 합니다. 예를 들어 Windows 기반 플랫폼에서 경로 248 자 미만, 이어야 하 고 파일 이름은 260 자 미만 이어야 합니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>잘못 된 형식입니다."
  platform:
  - net462
- uid: System.IO.File.GetCreationTimeUtc(System.String)
  id: GetCreationTimeUtc(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: GetCreationTimeUtc(String)
  nameWithType: File.GetCreationTimeUtc(String)
  fullName: System.IO.File.GetCreationTimeUtc(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "지정 된 파일 또는 디렉터리의 만든 날짜와 시간 (UTC) 협정 세계 표준시에서를 반환합니다."
  remarks: "> [!NOTE]>이 메서드는 운영 체제에 의해 값을 가진 지속적으로 업데이트 되지 않을 수 있습니다는 네이티브 함수를 사용 하기 때문에 정확 하지 않은 값을 반환할 수 있습니다.       파일에서 설명 하는 경우는 `path` 매개 변수가 없는,이 메서드가 반환 서 기 1601 년 1 월 1 일 자정 12 시 (협정 세계시) Utc (협정 세계시)입니다.       NTFS로 포맷 된 드라이브는 파일을 만든 시간, 짧은 시간 동안 등의 파일에 대 한 정보를 캐시할 수 있습니다. 결과적으로, 덮어쓰기 또는 기존 파일을 대체 하는 경우 파일의 생성 시간을 명시적으로 설정 해야 할 수도 있습니다.       공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following example demonstrates the GetCreationTimeUtc method.  \n  \n [!code-vb[System.IO.File.GetCreationTime#2](~/add/codesnippet/visualbasic/m-system.io.file.getcrea_1_1.vb)]"
  syntax:
    content: public static DateTime GetCreationTimeUtc (string path);
    parameters:
    - id: path
      type: System.String
      description: "파일 또는 디렉터리를 만든 날짜와 시간 정보를 가져올입니다."
    return:
      type: System.DateTime
      description: "A <xref:System.DateTime>만든 날짜와 지정 된 파일 또는 디렉터리에 대 한 시간으로 설정 합니다.</xref:System.DateTime> 이 값은 UTC 시간으로 표현 됩니다."
  overload: System.IO.File.GetCreationTimeUtc*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "호출자에 게 필요한 권한이 없습니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>길이가&0; 인 문자열인, 공백만 포함 또는에 정의 된 대로 하나 이상의 잘못 된 문자가 들어 <xref:System.IO.Path.InvalidPathChars>합니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "지정된 된 경로, 파일 이름 또는 둘 다에 시스템 정의 최대 길이 초과 합니다. 예를 들어 Windows 기반 플랫폼에서 경로 248 자 미만, 이어야 하 고 파일 이름은 260 자 미만 이어야 합니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>잘못 된 형식입니다."
  platform:
  - net462
- uid: System.IO.File.GetLastAccessTime(System.String)
  id: GetLastAccessTime(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: GetLastAccessTime(String)
  nameWithType: File.GetLastAccessTime(String)
  fullName: System.IO.File.GetLastAccessTime(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "지정 된 날짜와 시간을 반환 파일 또는 디렉터리를 마지막으로 액세스 합니다."
  remarks: "> [!NOTE]>이 메서드는 운영 체제에 의해 값을 가진 지속적으로 업데이트 되지 않을 수 있습니다는 네이티브 함수를 사용 하기 때문에 정확 하지 않은 값을 반환할 수 있습니다.       파일에서 설명 하는 경우는 `path` 매개 변수가 없는,이 메서드가 반환 서 기 1601 년 1 월 1 일 자정 12 시 (협정 세계시) Utc (협정 세계시)를 현지 시간으로 조정 합니다.       `path` 상대 또는 절대 경로 정보를 지정 하기 위해 매개 변수는 허용 합니다. 상대 경로 정보는 현재 작업 디렉터리에 상대적으로 해석 됩니다. 현재 작업 디렉터리를 가져오려면 <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A> 를 참조 하세요.       공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following example demonstrates `GetLastAccessTime`.  \n  \n [!code-vb[File GetLastAccess#1](~/add/codesnippet/visualbasic/m-system.io.file.getlast_1_1.vb)]\n [!code-cs[File GetLastAccess#1](~/add/codesnippet/csharp/m-system.io.file.getlast_1_1.cs)]\n [!code-cpp[File GetLastAccess#1](~/add/codesnippet/cpp/m-system.io.file.getlast_1_1.cpp)]"
  syntax:
    content: public static DateTime GetLastAccessTime (string path);
    parameters:
    - id: path
      type: System.String
      description: "파일 또는 디렉터리 액세스 날짜와 시간 정보를 가져올입니다."
    return:
      type: System.DateTime
      description: "A <xref:System.DateTime>된 지정 된 파일 또는 디렉터리를 마지막으로 액세스 시간와 날짜를 설정 합니다.</xref:System.DateTime> 이 값은 현지 시간으로 표현 됩니다."
  overload: System.IO.File.GetLastAccessTime*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "호출자에 게 필요한 권한이 없습니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>길이가&0; 인 문자열인, 공백만 포함 또는에 정의 된 대로 하나 이상의 잘못 된 문자가 들어 <xref:System.IO.Path.InvalidPathChars>합니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "지정된 된 경로, 파일 이름 또는 둘 다에 시스템 정의 최대 길이 초과 합니다. 예를 들어 Windows 기반 플랫폼에서 경로 248 자 미만, 이어야 하 고 파일 이름은 260 자 미만 이어야 합니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>잘못 된 형식입니다."
  platform:
  - net462
- uid: System.IO.File.GetLastAccessTimeUtc(System.String)
  id: GetLastAccessTimeUtc(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: GetLastAccessTimeUtc(String)
  nameWithType: File.GetLastAccessTimeUtc(String)
  fullName: System.IO.File.GetLastAccessTimeUtc(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "세계시 (UTC) 된 지정 된 파일 또는 디렉터리를 마지막으로 액세스 날짜와 시간을 반환 합니다."
  remarks: "> [!NOTE]>이 메서드는 운영 체제에 의해 값을 가진 지속적으로 업데이트 되지 않을 수 있습니다는 네이티브 함수를 사용 하기 때문에 정확 하지 않은 값을 반환할 수 있습니다.       파일에서 설명 하는 경우는 `path` 매개 변수가 없는,이 메서드가 반환 서 기 1601 년 1 월 1 일 자정 12 시 (협정 세계시) Utc (협정 세계시)입니다.       `path` 상대 또는 절대 경로 정보를 지정 하기 위해 매개 변수는 허용 합니다. 상대 경로 정보는 현재 작업 디렉터리에 상대적으로 해석 됩니다. 현재 작업 디렉터리를 가져오려면 <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A> 를 참조 하세요.       공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public static DateTime GetLastAccessTimeUtc (string path);
    parameters:
    - id: path
      type: System.String
      description: "파일 또는 디렉터리 액세스 날짜와 시간 정보를 가져올입니다."
    return:
      type: System.DateTime
      description: "A <xref:System.DateTime>된 지정 된 파일 또는 디렉터리를 마지막으로 액세스 시간와 날짜를 설정 합니다.</xref:System.DateTime> 이 값은 UTC 시간으로 표현 됩니다."
  overload: System.IO.File.GetLastAccessTimeUtc*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "호출자에 게 필요한 권한이 없습니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>길이가&0; 인 문자열인, 공백만 포함 또는에 정의 된 대로 하나 이상의 잘못 된 문자가 들어 <xref:System.IO.Path.InvalidPathChars>합니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "지정된 된 경로, 파일 이름 또는 둘 다에 시스템 정의 최대 길이 초과 합니다. 예를 들어 Windows 기반 플랫폼에서 경로 248 자 미만, 이어야 하 고 파일 이름은 260 자 미만 이어야 합니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>잘못 된 형식입니다."
  platform:
  - net462
- uid: System.IO.File.GetLastWriteTime(System.String)
  id: GetLastWriteTime(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: GetLastWriteTime(String)
  nameWithType: File.GetLastWriteTime(String)
  fullName: System.IO.File.GetLastWriteTime(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "지정 된 날짜와 시간을 반환 파일 또는 디렉터리에 마지막으로 쓴 합니다."
  remarks: "> [!NOTE]>이 메서드는 운영 체제에 의해 값을 가진 지속적으로 업데이트 되지 않을 수 있습니다는 네이티브 함수를 사용 하기 때문에 정확 하지 않은 값을 반환할 수 있습니다. 각 운영 체제 자체 규칙에 따라 마지막으로 쓴 시간을 관리합니다. 성능 향상을 위해 운영 체제 마지막 쓰기 작업이의 정확한 시간에 마지막 쓰기 시간 값을 설정할 수 있습니다 있지만 수로 설정할 근사치 대신 합니다.       파일에서 설명 하는 경우는 `path` 매개 변수가 없는,이 메서드가 반환 서 기 1601 년 1 월 1 일 자정 12 시 (협정 세계시) Utc (협정 세계시)를 현지 시간으로 조정 합니다.       `path` 상대 또는 절대 경로 정보를 지정 하기 위해 매개 변수는 허용 합니다. 상대 경로 정보는 현재 작업 디렉터리에 상대적으로 해석 됩니다. 현재 작업 디렉터리를 가져오려면 <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A> 를 참조 하세요.       공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following example demonstrates `GetLastWriteTime`.  \n  \n [!code-cpp[File GetLastWrite#1](~/add/codesnippet/cpp/m-system.io.file.getlast_0_1.cpp)]\n [!code-vb[File GetLastWrite#1](~/add/codesnippet/visualbasic/m-system.io.file.getlast_0_1.vb)]\n [!code-cs[File GetLastWrite#1](~/add/codesnippet/csharp/m-system.io.file.getlast_0_1.cs)]"
  syntax:
    content: public static DateTime GetLastWriteTime (string path);
    parameters:
    - id: path
      type: System.String
      description: "파일 또는 디렉터리 쓴 날짜와 시간 정보를 가져올입니다."
    return:
      type: System.DateTime
      description: "A <xref:System.DateTime>날짜와 지정 된 파일 또는 디렉터리에 마지막으로 쓴 시간으로 설정 합니다.</xref:System.DateTime> 이 값은 현지 시간으로 표현 됩니다."
  overload: System.IO.File.GetLastWriteTime*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "호출자에 게 필요한 권한이 없습니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>길이가&0; 인 문자열인, 공백만 포함 또는에 정의 된 대로 하나 이상의 잘못 된 문자가 들어 <xref:System.IO.Path.InvalidPathChars>합니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "지정된 된 경로, 파일 이름 또는 둘 다에 시스템 정의 최대 길이 초과 합니다. 예를 들어 Windows 기반 플랫폼에서 경로 248 자 미만, 이어야 하 고 파일 이름은 260 자 미만 이어야 합니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>잘못 된 형식입니다."
  platform:
  - net462
- uid: System.IO.File.GetLastWriteTimeUtc(System.String)
  id: GetLastWriteTimeUtc(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: GetLastWriteTimeUtc(String)
  nameWithType: File.GetLastWriteTimeUtc(String)
  fullName: System.IO.File.GetLastWriteTimeUtc(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "세계시 (UTC)는 지정 된 파일 또는 디렉터리에 마지막으로 쓴 날짜와 시간을 반환 합니다."
  remarks: "> [!NOTE]>이 메서드는 운영 체제에 의해 값을 가진 지속적으로 업데이트 되지 않을 수 있습니다는 네이티브 함수를 사용 하기 때문에 정확 하지 않은 값을 반환할 수 있습니다. 각 운영 체제 자체 규칙에 따라 마지막으로 쓴 시간을 관리합니다. 성능 향상을 위해 운영 체제 마지막 쓰기 작업이의 정확한 시간에 마지막 쓰기 시간 값을 설정할 수 있습니다 있지만 수로 설정할 근사치 대신 합니다.       파일에서 설명 하는 경우는 `path` 매개 변수가 없는,이 메서드가 반환 서 기 1601 년 1 월 1 일 자정 12 시 (협정 세계시) Utc (협정 세계시)입니다.       `path` 상대 또는 절대 경로 정보를 지정 하기 위해 매개 변수는 허용 합니다. 상대 경로 정보는 현재 작업 디렉터리에 상대적으로 해석 됩니다. 현재 작업 디렉터리를 가져오려면 <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A> 를 참조 하세요.       공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public static DateTime GetLastWriteTimeUtc (string path);
    parameters:
    - id: path
      type: System.String
      description: "파일 또는 디렉터리 쓴 날짜와 시간 정보를 가져올입니다."
    return:
      type: System.DateTime
      description: "A <xref:System.DateTime>날짜와 지정 된 파일 또는 디렉터리에 마지막으로 쓴 시간으로 설정 합니다.</xref:System.DateTime> 이 값은 UTC 시간으로 표현 됩니다."
  overload: System.IO.File.GetLastWriteTimeUtc*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "호출자에 게 필요한 권한이 없습니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>길이가&0; 인 문자열인, 공백만 포함 또는에 정의 된 대로 하나 이상의 잘못 된 문자가 들어 <xref:System.IO.Path.InvalidPathChars>합니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "지정된 된 경로, 파일 이름 또는 둘 다에 시스템 정의 최대 길이 초과 합니다. 예를 들어 Windows 기반 플랫폼에서 경로 248 자 미만, 이어야 하 고 파일 이름은 260 자 미만 이어야 합니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>잘못 된 형식입니다."
  platform:
  - net462
- uid: System.IO.File.Move(System.String,System.String)
  id: Move(System.String,System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: Move(String,String)
  nameWithType: File.Move(String,String)
  fullName: System.IO.File.Move(String,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "지정된 된 파일을 새 파일 이름을 지정 하는 옵션을 제공 하는 새 위치로 이동 합니다."
  remarks: "디스크 볼륨에 걸쳐 사용할 수 있는이 방법 및 소스와 대상이 동일한 경우 예외를 throw 하지 않습니다. 동일한 이름의 파일이 해당 디렉터리로 이동 하 여 파일을 대체 하려고 하면 해 서 <xref:System.IO.IOException>.</xref:System.IO.IOException> 참고 기존 파일을 덮어쓸지 Move 메서드를 사용할 수 없습니다.       `sourceFileName` 및 `destFileName` 인수는 상대 또는 절대 경로 정보를 포함할 수 있습니다. 상대 경로 정보는 현재 작업 디렉터리에 상대적으로 해석 됩니다. 현재 작업 디렉터리를 가져오려면 <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A> 를 참조 하세요.       여러 디스크 볼륨에서 파일을 이동 하려고 하면 해당 파일을 사용 하는 경우 파일의 위치에 복사 하지만 소스에서 삭제 되지 않습니다.       공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following example moves a file.  \n  \n [!code-cpp[File Move#1](~/add/codesnippet/cpp/m-system.io.file.move-sy_1.cpp)]\n [!code-cs[File Move#1](~/add/codesnippet/csharp/m-system.io.file.move-sy_1.cs)]\n [!code-vb[File Move#1](~/add/codesnippet/visualbasic/m-system.io.file.move-sy_1.vb)]"
  syntax:
    content: public static void Move (string sourceFileName, string destFileName);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "이동할 파일의 이름입니다. 상대 또는 절대 경로 포함할 수 있습니다."
    - id: destFileName
      type: System.String
      description: "새 경로 및 파일 이름입니다."
  overload: System.IO.File.Move*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "대상 파일이 이미 있습니다.       -or-       <code>sourceFileName</code> was not found."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>sourceFileName</code>or <code>destFileName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>sourceFileName</code>또는 <code>destFileName</code> 은 길이가&0; 인 문자열, 공백만 포함 또는에 정의 된 대로 잘못 된 문자가 <xref:System.IO.Path.InvalidPathChars>합니다."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "호출자에 게 필요한 권한이 없습니다."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "지정된 된 경로, 파일 이름 또는 둘 다에 시스템 정의 최대 길이 초과 합니다. 예를 들어 Windows 기반 플랫폼에서 경로 248 자 미만, 이어야 하 고 파일 이름은 260 자 미만 이어야 합니다."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "에 지정 된 경로 <code> sourceFileName </code> 또는 <code> destFileName </code> 유효 하지 않을 경우 (예를 들어이 매핑되지 않은 드라이브에 있음)."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>sourceFileName</code>또는 <code>destFileName</code> 잘못 형식입니다."
  platform:
  - net462
- uid: System.IO.File.Open(System.String,System.IO.FileMode)
  id: Open(System.String,System.IO.FileMode)
  parent: System.IO.File
  langs:
  - csharp
  name: Open(String,FileMode)
  nameWithType: File.Open(String,FileMode)
  fullName: System.IO.File.Open(String,FileMode)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "열립니다는 <xref href=&quot;System.IO.FileStream&quot;> </xref> 읽기/쓰기 권한으로 지정된 된 경로에 있습니다."
  remarks: "`path` 상대 또는 절대 경로 정보를 지정 하기 위해 매개 변수는 허용 합니다. 상대 경로 정보는 현재 작업 디렉터리에 상대적으로 해석 됩니다. 현재 작업 디렉터리를 가져오려면 <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A> 를 참조 하세요.       공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example creates a temporary file and writes some text to it. The example then opens the file, using T:System.IO.FileMode.Open; that is, if the file did not already exist, it would not be created.  \n  \n [!code-cpp[File Open1#1](~/add/codesnippet/cpp/m-system.io.file.open-sy_0_1.cpp)]\n [!code-cs[File Open1#1](~/add/codesnippet/csharp/m-system.io.file.open-sy_0_1.cs)]\n [!code-vb[File Open1#1](~/add/codesnippet/visualbasic/m-system.io.file.open-sy_0_1.vb)]"
  syntax:
    content: public static System.IO.FileStream Open (string path, System.IO.FileMode mode);
    parameters:
    - id: path
      type: System.String
      description: "열 파일입니다."
    - id: mode
      type: System.IO.FileMode
      description: "A <xref href=&quot;System.IO.FileMode&quot;> </xref> 경우 파일을 만들 있는지 여부를 지정 하는 값 존재 하지 않는 하 고 있는지 여부를 기존 파일 내용을 덮어쓸 것인지를 결정 합니다."
    return:
      type: System.IO.FileStream
      description: "A <xref href=&quot;System.IO.FileStream&quot;> </xref> 및 지정 된 모드와 읽기/쓰기 권한으로 경로에서 열린 공유 되지 않습니다."
  overload: System.IO.File.Open*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>길이가&0; 인 문자열인, 공백만 포함 또는에 정의 된 대로 하나 이상의 잘못 된 문자가 들어 <xref:System.IO.Path.InvalidPathChars>합니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "지정된 된 경로, 파일 이름 또는 둘 다에 시스템 정의 최대 길이 초과 합니다. 예를 들어 Windows 기반 플랫폼에서 경로 248 자 미만, 이어야 하 고 파일 이름은 260 자 미만 이어야 합니다."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "지정 된 경로가 유효 하지 않거나, (예를 들어이 매핑되지 않은 드라이브에 있음)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "파일을 여는 동안 I/O 오류가 발생 했습니다."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>파일을 지정한 경우 읽기 전용입니다.       -또는-이 작업은 현재 플랫폼에서 지원 되지 않습니다.       -또는- <code>path</code> 가 디렉터리를 지정 합니다.       -또는-호출자에 게는 필요한 사용 권한이 없습니다.       -또는- <code>mode</code> 은 <xref href=&quot;System.IO.FileMode&quot;> </xref> 고 지정 된 파일이 숨겨진된 파일입니다."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>mode</code>잘못 된 값을 지정 합니다."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "에 지정 된 파일 <code> path </code> 찾을 수 없습니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>잘못 된 형식입니다."
  platform:
  - net462
- uid: System.IO.File.Open(System.String,System.IO.FileMode,System.IO.FileAccess)
  id: Open(System.String,System.IO.FileMode,System.IO.FileAccess)
  parent: System.IO.File
  langs:
  - csharp
  name: Open(String,FileMode,FileAccess)
  nameWithType: File.Open(String,FileMode,FileAccess)
  fullName: System.IO.File.Open(String,FileMode,FileAccess)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "열립니다는 <xref href=&quot;System.IO.FileStream&quot;> </xref> 지정 된 모드와 액세스와 지정된 된 경로에 있습니다."
  remarks: "`path` 상대 또는 절대 경로 정보를 지정 하기 위해 매개 변수는 허용 합니다. 상대 경로 정보는 현재 작업 디렉터리에 상대적으로 해석 됩니다. 현재 작업 디렉터리를 가져오려면 <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A> 를 참조 하세요."
  example:
  - "The following example opens a file with read-only access.  \n  \n [!code-cs[file open2#1](~/add/codesnippet/csharp/m-system.io.file.open-sy_1_1.cs)]\n [!code-cpp[file open2#1](~/add/codesnippet/cpp/m-system.io.file.open-sy_1_1.cpp)]\n [!code-vb[file open2#1](~/add/codesnippet/visualbasic/m-system.io.file.open-sy_1_1.vb)]"
  syntax:
    content: public static System.IO.FileStream Open (string path, System.IO.FileMode mode, System.IO.FileAccess access);
    parameters:
    - id: path
      type: System.String
      description: "열 파일입니다."
    - id: mode
      type: System.IO.FileMode
      description: "A <xref href=&quot;System.IO.FileMode&quot;> </xref> 경우 파일을 만들 있는지 여부를 지정 하는 값 존재 하지 않는 하 고 있는지 여부를 기존 파일 내용을 덮어쓸 것인지를 결정 합니다."
    - id: access
      type: System.IO.FileAccess
      description: "A <xref href=&quot;System.IO.FileAccess&quot;> </xref> 파일에 수행할 수 있는 작업을 지정 하는 값입니다."
    return:
      type: System.IO.FileStream
      description: "공유 되지 않은 <xref href=&quot;System.IO.FileStream&quot;> </xref> 지정 된 모드와 액세스와 지정된 된 파일에 대 한 액세스를 제공 하는 합니다."
  overload: System.IO.File.Open*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>길이가&0; 인 문자열인, 공백만 포함 또는에 정의 된 대로 하나 이상의 잘못 된 문자가 들어 <xref:System.IO.Path.InvalidPathChars>합니다.       -or-       <code>access</code> specified <xref uid=&quot;langword_csharp_Read&quot; name=&quot;Read&quot; href=&quot;&quot;></xref> and <code>mode</code> specified <xref uid=&quot;langword_csharp_Create&quot; name=&quot;Create&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_CreateNew&quot; name=&quot;CreateNew&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Truncate&quot; name=&quot;Truncate&quot; href=&quot;&quot;></xref>, or <xref uid=&quot;langword_csharp_Append&quot; name=&quot;Append&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "지정된 된 경로, 파일 이름 또는 둘 다에 시스템 정의 최대 길이 초과 합니다. 예를 들어 Windows 기반 플랫폼에서 경로 248 자 미만, 이어야 하 고 파일 이름은 260 자 미만 이어야 합니다."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "지정 된 경로가 유효 하지 않거나, (예를 들어이 매핑되지 않은 드라이브에 있음)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "파일을 여는 동안 I/O 오류가 발생 했습니다."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>파일은 읽기 전용을 지정한 경우 및 <code>access</code> 않습니다 <xref uid=&quot;langword_csharp_Read&quot; name=&quot;Read&quot; href=&quot;&quot;> </xref>합니다.       -또는- <code>path</code> 가 디렉터리를 지정 합니다.       -또는-호출자에 게는 필요한 사용 권한이 없습니다.       -또는- <code>mode</code> 은 <xref href=&quot;System.IO.FileMode&quot;> </xref> 고 지정 된 파일이 숨겨진된 파일입니다."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>mode</code>또는 <code>access</code> 잘못 된 값을 지정 합니다."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "에 지정 된 파일 <code> path </code> 찾을 수 없습니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>잘못 된 형식입니다."
  platform:
  - net462
- uid: System.IO.File.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)
  id: Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)
  parent: System.IO.File
  langs:
  - csharp
  name: Open(String,FileMode,FileAccess,FileShare)
  nameWithType: File.Open(String,FileMode,FileAccess,FileShare)
  fullName: System.IO.File.Open(String,FileMode,FileAccess,FileShare)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "열립니다는 <xref href=&quot;System.IO.FileStream&quot;> </xref> 읽기, 지정 된 모드를 갖는 지정 된 경로, 쓰기 또는 읽기/쓰기 권한과 지정 된 공유 옵션입니다."
  remarks: "`path` 상대 또는 절대 경로 정보를 지정 하기 위해 매개 변수는 허용 합니다. 상대 경로 정보는 현재 작업 디렉터리에 상대적으로 해석 됩니다. 현재 작업 디렉터리를 가져오려면 <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A> 를 참조 하세요.       공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following example opens a file with read-only access and with file sharing disallowed.  \n  \n [!code-cs[file open3#1](~/add/codesnippet/csharp/da5a0cfa-1b45-4d75-942d-_1.cs)]\n [!code-cpp[file open3#1](~/add/codesnippet/cpp/da5a0cfa-1b45-4d75-942d-_1.cpp)]\n [!code-vb[file open3#1](~/add/codesnippet/visualbasic/da5a0cfa-1b45-4d75-942d-_1.vb)]"
  syntax:
    content: public static System.IO.FileStream Open (string path, System.IO.FileMode mode, System.IO.FileAccess access, System.IO.FileShare share);
    parameters:
    - id: path
      type: System.String
      description: "열 파일입니다."
    - id: mode
      type: System.IO.FileMode
      description: "A <xref href=&quot;System.IO.FileMode&quot;> </xref> 경우 파일을 만들 있는지 여부를 지정 하는 값 존재 하지 않는 하 고 있는지 여부를 기존 파일 내용을 덮어쓸 것인지를 결정 합니다."
    - id: access
      type: System.IO.FileAccess
      description: "A <xref href=&quot;System.IO.FileAccess&quot;> </xref> 파일에 수행할 수 있는 작업을 지정 하는 값입니다."
    - id: share
      type: System.IO.FileShare
      description: "A <xref href=&quot;System.IO.FileShare&quot;> </xref> 다른 스레드가 파일에 가지는 액세스 형식을 지정 하는 값입니다."
    return:
      type: System.IO.FileStream
      description: "A <xref href=&quot;System.IO.FileStream&quot;> </xref> 읽기, 지정 된 모드를 갖는 지정 된 경로, 쓰기 또는 읽기/쓰기 권한과 지정 된 공유 옵션입니다."
  overload: System.IO.File.Open*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>길이가&0; 인 문자열인, 공백만 포함 또는에 정의 된 대로 하나 이상의 잘못 된 문자가 들어 <xref:System.IO.Path.InvalidPathChars>합니다.       -or-       <code>access</code> specified <xref uid=&quot;langword_csharp_Read&quot; name=&quot;Read&quot; href=&quot;&quot;></xref> and <code>mode</code> specified <xref uid=&quot;langword_csharp_Create&quot; name=&quot;Create&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_CreateNew&quot; name=&quot;CreateNew&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Truncate&quot; name=&quot;Truncate&quot; href=&quot;&quot;></xref>, or <xref uid=&quot;langword_csharp_Append&quot; name=&quot;Append&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "지정된 된 경로, 파일 이름 또는 둘 다에 시스템 정의 최대 길이 초과 합니다. 예를 들어 Windows 기반 플랫폼에서 경로 248 자 미만, 이어야 하 고 파일 이름은 260 자 미만 이어야 합니다."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "지정 된 경로가 유효 하지 않거나, (예를 들어이 매핑되지 않은 드라이브에 있음)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "파일을 여는 동안 I/O 오류가 발생 했습니다."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>파일은 읽기 전용을 지정한 경우 및 <code>access</code> 않습니다 <xref uid=&quot;langword_csharp_Read&quot; name=&quot;Read&quot; href=&quot;&quot;> </xref>합니다.       -또는- <code>path</code> 가 디렉터리를 지정 합니다.       -또는-호출자에 게는 필요한 사용 권한이 없습니다.       -또는- <code>mode</code> 은 <xref href=&quot;System.IO.FileMode&quot;> </xref> 고 지정 된 파일이 숨겨진된 파일입니다."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>mode</code><code>access</code>, 또는 <code>share</code> 잘못 된 값을 지정 합니다."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "에 지정 된 파일 <code> path </code> 찾을 수 없습니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>잘못 된 형식입니다."
  platform:
  - net462
- uid: System.IO.File.OpenRead(System.String)
  id: OpenRead(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: OpenRead(String)
  nameWithType: File.OpenRead(String)
  fullName: System.IO.File.OpenRead(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "읽기 위해 기존 파일을 엽니다."
  remarks: "이 메서드는 <xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%29> <xref:System.IO.FileMode>값 <xref:System.IO.FileMode>, <xref:System.IO.FileAccess>값 및 <xref:System.IO.FileAccess> <xref:System.IO.FileShare> <xref:System.IO.FileShare>.</xref:System.IO.FileShare> 의 값</xref:System.IO.FileShare> </xref:System.IO.FileAccess> </xref:System.IO.FileAccess> </xref:System.IO.FileMode> </xref:System.IO.FileMode> 으로 오버 로드 생성자</xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%29>       `path` 상대 또는 절대 경로 정보를 지정 하기 위해 매개 변수는 허용 합니다. 상대 경로 정보는 현재 작업 디렉터리에 상대적으로 해석 됩니다. 현재 작업 디렉터리를 가져오려면 <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A> 를 참조 하세요.       공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following example opens a file for reading.  \n  \n [!code-cs[file openread#1](~/add/codesnippet/csharp/m-system.io.file.openrea_1.cs)]\n [!code-vb[file openread#1](~/add/codesnippet/visualbasic/m-system.io.file.openrea_1.vb)]\n [!code-cpp[file openread#1](~/add/codesnippet/cpp/m-system.io.file.openrea_1.cpp)]"
  syntax:
    content: public static System.IO.FileStream OpenRead (string path);
    parameters:
    - id: path
      type: System.String
      description: "읽기용으로 열 파일입니다."
    return:
      type: System.IO.FileStream
      description: "읽기 전용 <xref href=&quot;System.IO.FileStream&quot;> </xref> 지정된 된 경로에 있습니다."
  overload: System.IO.File.OpenRead*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>길이가&0; 인 문자열인, 공백만 포함 또는에 정의 된 대로 하나 이상의 잘못 된 문자가 들어 <xref:System.IO.Path.InvalidPathChars>합니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "지정된 된 경로, 파일 이름 또는 둘 다에 시스템 정의 최대 길이 초과 합니다. 예를 들어 Windows 기반 플랫폼에서 경로 248 자 미만, 이어야 하 고 파일 이름은 260 자 미만 이어야 합니다."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "지정 된 경로가 유효 하지 않거나, (예를 들어이 매핑되지 않은 드라이브에 있음)."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>가 디렉터리를 지정 합니다.       -또는-호출자에 게는 필요한 사용 권한이 없습니다."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "에 지정 된 파일 <code> path </code> 찾을 수 없습니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>잘못 된 형식입니다."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "파일을 여는 동안 I/O 오류가 발생 했습니다."
  platform:
  - net462
- uid: System.IO.File.OpenText(System.String)
  id: OpenText(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: OpenText(String)
  nameWithType: File.OpenText(String)
  fullName: System.IO.File.OpenText(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "읽기 위해 기존 u t F-8로 인코딩된 텍스트 파일을 엽니다."
  remarks: "이 메서드는 해당 하는 <xref:System.IO.StreamReader.%23ctor%28System.String%29>생성자 오버 로드.</xref:System.IO.StreamReader.%23ctor%28System.String%29>       `path` 상대 또는 절대 경로 정보를 지정 하기 위해 매개 변수는 허용 합니다. 상대 경로 정보는 현재 작업 디렉터리에 상대적으로 해석 됩니다. 현재 작업 디렉터리를 가져오려면 <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A> 를 참조 하세요.       공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following example opens a text file for reading.  \n  \n [!code-vb[file opentext#1](~/add/codesnippet/visualbasic/m-system.io.file.opentex_1.vb)]\n [!code-cs[file opentext#1](~/add/codesnippet/csharp/m-system.io.file.opentex_1.cs)]\n [!code-cpp[file opentext#1](~/add/codesnippet/cpp/m-system.io.file.opentex_1.cpp)]"
  syntax:
    content: public static System.IO.StreamReader OpenText (string path);
    parameters:
    - id: path
      type: System.String
      description: "읽기용으로 열 파일입니다."
    return:
      type: System.IO.StreamReader
      description: "한 <xref:System.IO.StreamReader>지정된 된 경로에</xref:System.IO.StreamReader>"
  overload: System.IO.File.OpenText*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "호출자에 게 필요한 권한이 없습니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>길이가&0; 인 문자열인, 공백만 포함 또는에 정의 된 대로 하나 이상의 잘못 된 문자가 들어 <xref:System.IO.Path.InvalidPathChars>합니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "지정된 된 경로, 파일 이름 또는 둘 다에 시스템 정의 최대 길이 초과 합니다. 예를 들어 Windows 기반 플랫폼에서 경로 248 자 미만, 이어야 하 고 파일 이름은 260 자 미만 이어야 합니다."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "지정 된 경로가 유효 하지 않거나, (예를 들어이 매핑되지 않은 드라이브에 있음)."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "에 지정 된 파일 <code> path </code> 찾을 수 없습니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>잘못 된 형식입니다."
  platform:
  - net462
- uid: System.IO.File.OpenWrite(System.String)
  id: OpenWrite(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: OpenWrite(String)
  nameWithType: File.OpenWrite(String)
  fullName: System.IO.File.OpenWrite(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "기존 파일을 열거나 쓰기용 새 파일을 만듭니다."
  remarks: "이 메서드는 해당 하는 <xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%29>생성자 오버 로드로 설정 하는 파일 모드와 <xref:System.IO.FileMode>로 설정 하는 액세스 <xref:System.IO.FileAccess>, 및 공유 모드를 <xref:System.IO.FileShare>.</xref:System.IO.FileShare> </xref:System.IO.FileAccess> </xref:System.IO.FileMode> </xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%29>       OpenWrite 메서드 하나 이미 파일 경로 대 한 존재 하거나 존재 하지 않는 경우 새 파일을 만듭니다는 파일을 엽니다. 기존 파일에 대 한 추가 하지 않습니다 새 텍스트를 기존 텍스트입니다. 대신, 새 문자를 사용한 기존 문자를 덮어씁니다. 파일 문자열을 혼합 하 여 포함 됩니다을 덮어쓴 경우 긴 문자열 (예: &quot;있는 그대로&quot;이 OpenWrite 메서드의 테스트) (예: &quot;두 번째 실행&quot;) 짧은 문자열 (&quot;OpenWrite 메서드의 두 번째 runtest&quot;).       `path` 매개 변수는 상대 또는 절대 경로 정보를 지정할 수 있습니다. 상대 경로 정보는 현재 작업 디렉터리에 상대적으로 해석 됩니다. 현재 작업 디렉터리를 가져오려면는 <xref:System.IO.Directory.GetCurrentDirectory%2A>메서드.</xref:System.IO.Directory.GetCurrentDirectory%2A>       공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following example opens a file for reading and writing.  \n  \n [!code-cpp[file openwrite#1](~/add/codesnippet/cpp/m-system.io.file.openwri_1.cpp)]\n [!code-cs[file openwrite#1](~/add/codesnippet/csharp/m-system.io.file.openwri_1.cs)]\n [!code-vb[file openwrite#1](~/add/codesnippet/visualbasic/m-system.io.file.openwri_1.vb)]"
  syntax:
    content: public static System.IO.FileStream OpenWrite (string path);
    parameters:
    - id: path
      type: System.String
      description: "파일 쓰기 위해 열 수입니다."
    return:
      type: System.IO.FileStream
      description: "공유 되지 않은 <xref href=&quot;System.IO.FileStream&quot;> </xref> 개체와 지정된 된 경로에 <xref href=&quot;System.IO.FileAccess&quot;> </xref> 액세스 합니다."
  overload: System.IO.File.OpenWrite*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "호출자에 게 필요한 권한이 없습니다.       -또는- <code> path </code> 읽기 전용 파일이 나 디렉터리를 지정 합니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>길이가&0; 인 문자열인, 공백만 포함 또는에 정의 된 대로 하나 이상의 잘못 된 문자가 들어 <xref:System.IO.Path.InvalidPathChars>합니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "지정된 된 경로, 파일 이름 또는 둘 다에 시스템 정의 최대 길이 초과 합니다. 예를 들어 Windows 기반 플랫폼에서 경로 248 자 미만, 이어야 하 고 파일 이름은 260 자 미만 이어야 합니다."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "지정 된 경로가 유효 하지 않거나, (예를 들어이 매핑되지 않은 드라이브에 있음)."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>잘못 된 형식입니다."
  platform:
  - net462
- uid: System.IO.File.ReadAllBytes(System.String)
  id: ReadAllBytes(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: ReadAllBytes(String)
  nameWithType: File.ReadAllBytes(String)
  fullName: System.IO.File.ReadAllBytes(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "이진 파일을 열고 파일의 내용을 바이트 배열로 읽은 다음 파일을 닫습니다."
  remarks: "이 메서드는 파일 경로 지정 된 파일을 열고 파일의 내용을 바이트 배열로 읽고 파일을 닫습니다."
  syntax:
    content: public static byte[] ReadAllBytes (string path);
    parameters:
    - id: path
      type: System.String
      description: "읽기 위해 열 파일입니다."
    return:
      type: System.Byte[]
      description: "파일의 내용을 포함 하는 바이트 배열입니다."
  overload: System.IO.File.ReadAllBytes*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>길이가&0; 인 문자열인, 공백만 포함 또는에 정의 된 대로 하나 이상의 잘못 된 문자가 들어 <xref:System.IO.Path.InvalidPathChars>합니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "지정된 된 경로, 파일 이름 또는 둘 다에 시스템 정의 최대 길이 초과 합니다. 예를 들어 Windows 기반 플랫폼에서 경로 248 자 미만, 이어야 하 고 파일 이름은 260 자 미만 이어야 합니다."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "지정 된 경로가 잘못 되었습니다 (예를 들어이 매핑되지 않은 드라이브에 있음)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "파일을 여는 동안 I/O 오류가 발생 했습니다."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "이 작업은 현재 플랫폼에서 지원 되지 않습니다.       -또는- <code> path </code> 가 디렉터리를 지정 합니다.       -또는-호출자에 게는 필요한 사용 권한이 없습니다."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "에 지정 된 파일 <code> path </code> 찾을 수 없습니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>잘못 된 형식입니다."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "호출자에 게 필요한 권한이 없습니다."
  platform:
  - net462
- uid: System.IO.File.ReadAllLines(System.String)
  id: ReadAllLines(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: ReadAllLines(String)
  nameWithType: File.ReadAllLines(String)
  fullName: System.IO.File.ReadAllLines(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "텍스트 파일을 열고 파일의 모든 줄을 읽은 다음 파일을 닫습니다."
  remarks: "This method opens a file, reads each line of the file, then adds each line as an element of a string array. It then closes the file. A line is defined as a sequence of characters followed by a carriage return ('\\r'), a line feed ('\\n'), or a carriage return immediately followed by a line feed. The resulting string does not contain the terminating carriage return and/or line feed.  \n  \n This method attempts to automatically detect the encoding of a file based on the presence of byte order marks. Encoding formats UTF-8 and UTF-32 (both big-endian and little-endian) can be detected."
  example:
  - "The following code example demonstrates the use of the ReadAllLines method to display the contents of a file. In this example a file is created, if it doesn't already exist, and text is added to it.  \n  \n [!code-vb[System.IO.File.AllLines#00](~/add/codesnippet/visualbasic/m-system.io.file.readall_1_1.vb)]\n [!code-cs[System.IO.File.AllLines#00](~/add/codesnippet/csharp/m-system.io.file.readall_1_1.cs)]"
  syntax:
    content: public static string[] ReadAllLines (string path);
    parameters:
    - id: path
      type: System.String
      description: "읽기 위해 열 파일입니다."
    return:
      type: System.String[]
      description: "파일의 모든 줄을 포함 하는 문자열 배열입니다."
  overload: System.IO.File.ReadAllLines*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>길이가&0; 인 문자열인, 공백만 포함 또는에 정의 된 대로 하나 이상의 잘못 된 문자가 들어 <xref:System.IO.Path.InvalidPathChars>합니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "지정된 된 경로, 파일 이름 또는 둘 다에 시스템 정의 최대 길이 초과 합니다. 예를 들어 Windows 기반 플랫폼에서 경로 248 자 미만, 이어야 하 고 파일 이름은 260 자 미만 이어야 합니다."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "지정 된 경로가 잘못 되었습니다 (예를 들어이 매핑되지 않은 드라이브에 있음)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "파일을 여는 동안 I/O 오류가 발생 했습니다."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>파일을 지정한 경우 읽기 전용입니다.       -또는-이 작업은 현재 플랫폼에서 지원 되지 않습니다.       -또는- <code>path</code> 가 디렉터리를 지정 합니다.       -또는-호출자에 게는 필요한 사용 권한이 없습니다."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "에 지정 된 파일 <code> path </code> 찾을 수 없습니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>잘못 된 형식입니다."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "호출자에 게 필요한 권한이 없습니다."
  platform:
  - net462
- uid: System.IO.File.ReadAllLines(System.String,System.Text.Encoding)
  id: ReadAllLines(System.String,System.Text.Encoding)
  parent: System.IO.File
  langs:
  - csharp
  name: ReadAllLines(String,Encoding)
  nameWithType: File.ReadAllLines(String,Encoding)
  fullName: System.IO.File.ReadAllLines(String,Encoding)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "파일을 열고 지정 된 인코딩 사용 하 여 파일의 모든 줄을 읽은 다음 파일을 닫습니다."
  remarks: "This method opens a file, reads each line of the file, and then adds each line as an element of a string array. It then closes the file. A line is defined as a sequence of characters followed by a carriage return ('\\r'), a line feed ('\\n'), or a carriage return immediately followed by a line feed. The resulting string does not contain the terminating carriage return and/or line feed.  \n  \n This method attempts to automatically detect the encoding of a file based on the presence of byte order marks. Encoding formats UTF-8 and UTF-32 (both big-endian and little-endian) can be detected."
  example:
  - "The following code example demonstrates the use of the ReadAllLines method to display the contents of a file. In this example a file is created, if it doesn't already exist, and text is added to it.  \n  \n [!code-vb[System.IO.File.AllLines_Encoding#00](~/add/codesnippet/visualbasic/m-system.io.file.readall_0_1.vb)]\n [!code-cs[System.IO.File.AllLines_Encoding#00](~/add/codesnippet/csharp/m-system.io.file.readall_0_1.cs)]"
  syntax:
    content: public static string[] ReadAllLines (string path, System.Text.Encoding encoding);
    parameters:
    - id: path
      type: System.String
      description: "읽기 위해 열 파일입니다."
    - id: encoding
      type: System.Text.Encoding
      description: "파일의 내용에 적용 되는 인코딩입니다."
    return:
      type: System.String[]
      description: "파일의 모든 줄을 포함 하는 문자열 배열입니다."
  overload: System.IO.File.ReadAllLines*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>길이가&0; 인 문자열인, 공백만 포함 또는에 정의 된 대로 하나 이상의 잘못 된 문자가 들어 <xref:System.IO.Path.InvalidPathChars>합니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "지정된 된 경로, 파일 이름 또는 둘 다에 시스템 정의 최대 길이 초과 합니다. 예를 들어 Windows 기반 플랫폼에서 경로 248 자 미만, 이어야 하 고 파일 이름은 260 자 미만 이어야 합니다."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "지정 된 경로가 잘못 되었습니다 (예를 들어이 매핑되지 않은 드라이브에 있음)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "파일을 여는 동안 I/O 오류가 발생 했습니다."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>파일을 지정한 경우 읽기 전용입니다.       -또는-이 작업은 현재 플랫폼에서 지원 되지 않습니다.       -또는- <code>path</code> 가 디렉터리를 지정 합니다.       -또는-호출자에 게는 필요한 사용 권한이 없습니다."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "에 지정 된 파일 <code> path </code> 찾을 수 없습니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>잘못 된 형식입니다."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "호출자에 게 필요한 권한이 없습니다."
  platform:
  - net462
- uid: System.IO.File.ReadAllText(System.String)
  id: ReadAllText(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: ReadAllText(String)
  nameWithType: File.ReadAllText(String)
  fullName: System.IO.File.ReadAllText(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "텍스트 파일을 열고 파일의 모든 줄을 읽은 다음 파일을 닫습니다."
  remarks: "This method opens a file, reads each line of the file, and then adds each line as an element of a string. It then closes the file. A line is defined as a sequence of characters followed by a carriage return ('\\r'), a line feed ('\\n'), or a carriage return immediately followed by a line feed. The resulting string does not contain the terminating carriage return and/or line feed.  \n  \n This method attempts to automatically detect the encoding of a file based on the presence of byte order marks. Encoding formats UTF-8 and UTF-32 (both big-endian and little-endian) can be detected.  \n  \n Use the <xref:System.IO.File.ReadAllText%28System.String%2CSystem.Text.Encoding%29> method overload when reading files that might contain imported text, because unrecognized characters may not be read correctly.  \n  \n The file handle is guaranteed to be closed by this method, even if exceptions are raised."
  example:
  - "The following code example demonstrates the use of the ReadAllText method to display the contents of a file. In this example a file is created, if it doesn't already exist, and text is added to it.  \n  \n [!code-vb[System.IO.File.AllText#00](~/add/codesnippet/visualbasic/m-system.io.file.readall_3_1.vb)]\n [!code-cs[System.IO.File.AllText#00](~/add/codesnippet/csharp/m-system.io.file.readall_3_1.cs)]"
  syntax:
    content: public static string ReadAllText (string path);
    parameters:
    - id: path
      type: System.String
      description: "읽기 위해 열 파일입니다."
    return:
      type: System.String
      description: "파일의 모든 줄을 포함 하는 문자열입니다."
  overload: System.IO.File.ReadAllText*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>길이가&0; 인 문자열인, 공백만 포함 또는에 정의 된 대로 하나 이상의 잘못 된 문자가 들어 <xref:System.IO.Path.InvalidPathChars>합니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "지정된 된 경로, 파일 이름 또는 둘 다에 시스템 정의 최대 길이 초과 합니다. 예를 들어 Windows 기반 플랫폼에서 경로 248 자 미만, 이어야 하 고 파일 이름은 260 자 미만 이어야 합니다."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "지정 된 경로가 잘못 되었습니다 (예를 들어이 매핑되지 않은 드라이브에 있음)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "파일을 여는 동안 I/O 오류가 발생 했습니다."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>파일을 지정한 경우 읽기 전용입니다.       -또는-이 작업은 현재 플랫폼에서 지원 되지 않습니다.       -또는- <code>path</code> 가 디렉터리를 지정 합니다.       -또는-호출자에 게는 필요한 사용 권한이 없습니다."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "에 지정 된 파일 <code> path </code> 찾을 수 없습니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>잘못 된 형식입니다."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "호출자에 게 필요한 권한이 없습니다."
  platform:
  - net462
- uid: System.IO.File.ReadAllText(System.String,System.Text.Encoding)
  id: ReadAllText(System.String,System.Text.Encoding)
  parent: System.IO.File
  langs:
  - csharp
  name: ReadAllText(String,Encoding)
  nameWithType: File.ReadAllText(String,Encoding)
  fullName: System.IO.File.ReadAllText(String,Encoding)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "파일을 열고 지정 된 인코딩 사용 하 여 파일의 모든 줄을 읽은 다음 파일을 닫습니다."
  remarks: "This method opens a file, reads each line of the file, and then adds each line as an element of a string. It then closes the file. A line is defined as a sequence of characters followed by a carriage return ('\\r'), a line feed ('\\n'), or a carriage return immediately followed by a line feed. The resulting string does not contain the terminating carriage return and/or line feed.  \n  \n This method attempts to automatically detect the encoding of a file based on the presence of byte order marks. Encoding formats UTF-8 and UTF-32 (both big-endian and little-endian) can be detected.  \n  \n The file handle is guaranteed to be closed by this method, even if exceptions are raised.  \n  \n To use the encoding settings as configured for your operating system, specify the <xref:System.Text.Encoding.Default%2A?displayProperty=fullName> property for the `encoding` parameter."
  example:
  - "The following code example demonstrates the use of the ReadAllText method to display the contents of a file. In this example a file is created, if it doesn't already exist, and text is added to it.  \n  \n [!code-cs[System.IO.File.AllText_Encoding#00](~/add/codesnippet/csharp/m-system.io.file.readall_2_1.cs)]\n [!code-vb[System.IO.File.AllText_Encoding#00](~/add/codesnippet/visualbasic/m-system.io.file.readall_2_1.vb)]"
  syntax:
    content: public static string ReadAllText (string path, System.Text.Encoding encoding);
    parameters:
    - id: path
      type: System.String
      description: "읽기 위해 열 파일입니다."
    - id: encoding
      type: System.Text.Encoding
      description: "파일의 내용에 적용 되는 인코딩입니다."
    return:
      type: System.String
      description: "파일의 모든 줄을 포함 하는 문자열입니다."
  overload: System.IO.File.ReadAllText*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>길이가&0; 인 문자열인, 공백만 포함 또는에 정의 된 대로 하나 이상의 잘못 된 문자가 들어 <xref:System.IO.Path.InvalidPathChars>합니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "지정된 된 경로, 파일 이름 또는 둘 다에 시스템 정의 최대 길이 초과 합니다. 예를 들어 Windows 기반 플랫폼에서 경로 248 자 미만, 이어야 하 고 파일 이름은 260 자 미만 이어야 합니다."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "지정 된 경로가 잘못 되었습니다 (예를 들어이 매핑되지 않은 드라이브에 있음)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "파일을 여는 동안 I/O 오류가 발생 했습니다."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>파일을 지정한 경우 읽기 전용입니다.       -또는-이 작업은 현재 플랫폼에서 지원 되지 않습니다.       -또는- <code>path</code> 가 디렉터리를 지정 합니다.       -또는-호출자에 게는 필요한 사용 권한이 없습니다."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "에 지정 된 파일 <code> path </code> 찾을 수 없습니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>잘못 된 형식입니다."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "호출자에 게 필요한 권한이 없습니다."
  platform:
  - net462
- uid: System.IO.File.ReadLines(System.String)
  id: ReadLines(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: ReadLines(String)
  nameWithType: File.ReadLines(String)
  fullName: System.IO.File.ReadLines(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "파일의 줄을 읽습니다."
  remarks: "ReadLines 및 <xref:System.IO.File.ReadAllLines%2A>방법은 다음과 같이 달라: ReadLines를 사용 하면 문자열의 컬렉션을 열거 하 고, 전체 컬렉션을 반환 하기 전에 시작할 수 있습니다; 사용 하는 경우 <xref:System.IO.File.ReadAllLines%2A>, 배열에 액세스 하기 전에 문자열의 전체 배열이 반환에 대해 기다려야 합니다.</xref:System.IO.File.ReadAllLines%2A> </xref:System.IO.File.ReadAllLines%2A> 따라서 매우 큰 파일을 사용 하는 경우 ReadLines 더 효율적일 수 있습니다.       ReadLines 메서드를 사용 하 여 다음을 수행할:-수행 [LINQ to Objects](~/add/includes/ajax-current-ext-md.md) 라인 필터링 된 집합을 가져와서 파일에 대 한 쿼리 합니다.      -사용 하 여 파일의 줄에 반환된 된 컬렉션을 작성 합니다.는 <xref:System.IO.File.WriteAllLines%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%29?displayProperty=fullName>메서드를 가진 기존 파일에 추가 <xref:System.IO.File.AppendAllLines%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%29?displayProperty=fullName>메서드.</xref:System.IO.File.AppendAllLines%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%29?displayProperty=fullName> </xref:System.IO.File.WriteAllLines%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%29?displayProperty=fullName>      --즉시 채워진된 인스턴스의 <xref:System.Collections.Generic.IEnumerable%601>같은 <xref:System.Collections.Generic.IList%601>나 <xref:System.Collections.Generic.Queue%601>.</xref:System.Collections.Generic.Queue%601> </xref:System.Collections.Generic.IList%601> 해당 생성자에 대 한 문자열의 컬렉션</xref:System.Collections.Generic.IEnumerable%601> 을 사용 하는 컬렉션을 생성 하는 중       이 방법은 사용 하 여 <xref:System.Text.Encoding.UTF8%2A>인코딩 값에 대 한.</xref:System.Text.Encoding.UTF8%2A>"
  example:
  - "The following example reads the lines of a file to find lines that contain specified strings.  \n  \n [!code-vb[System.IO.File.ReadLines#1](~/add/codesnippet/visualbasic/m-system.io.file.readlin_1.vb)]\n [!code-cs[System.IO.File.ReadLines#1](~/add/codesnippet/csharp/m-system.io.file.readlin_1.cs)]  \n  \n The following example uses the ReadLines method in a LINQ query that enumerates all directories for files that have a .txt extension, reads each line of the file, and displays the line if it contains the string \"Microsoft\".  \n  \n [!code-cs[System.IO.Directory.EnumerateFiles#1](~/add/codesnippet/csharp/m-system.io.file.readlin_2.cs)]\n [!code-vb[System.IO.Directory.EnumerateFiles#1](~/add/codesnippet/visualbasic/m-system.io.file.readlin_2.vb)]"
  syntax:
    content: public static System.Collections.Generic.IEnumerable<string> ReadLines (string path);
    parameters:
    - id: path
      type: System.String
      description: "읽을 파일입니다."
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
      description: "파일의 모든 줄 또는 쿼리의 결과 줄입니다."
  overload: System.IO.File.ReadLines*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>길이가&0; 인 문자열인, 공백만 포함 또는에 정의 된 하나 이상의 잘못 된 문자가 포함 되어는 <xref:System.IO.Path.GetInvalidPathChars*> 메서드."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "<code>path</code>잘못 되었습니다 (예를 들어이 매핑되지 않은 드라이브에 있음)."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "지정한 파일 <code> path </code> 찾을 수 없습니다."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "파일을 여는 동안 I/O 오류가 발생 했습니다."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "<code>path</code>시스템에서 정의한 최대 길이 초과합니다. 예를 들어 Windows 기반 플랫폼에서 경로 248 자 미만 이어야 하 고 파일 이름은 260 자 미만 이어야 합니다."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "호출자에 게 필요한 권한이 없습니다."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>읽기 전용 파일을 지정 합니다.       -또는-이 작업은 현재 플랫폼에서 지원 되지 않습니다.       -또는- <code>path</code> 디렉터리입니다.       -또는-호출자에 게는 필요한 사용 권한이 없습니다."
  platform:
  - net462
- uid: System.IO.File.ReadLines(System.String,System.Text.Encoding)
  id: ReadLines(System.String,System.Text.Encoding)
  parent: System.IO.File
  langs:
  - csharp
  name: ReadLines(String,Encoding)
  nameWithType: File.ReadLines(String,Encoding)
  fullName: System.IO.File.ReadLines(String,Encoding)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "지정 된 인코딩을 가진 파일의 줄을 읽습니다."
  remarks: "이 메서드를 사용 하 여 파일을 읽을 인코딩을 사용 하 여 지정할 수 있습니다.       ReadLines 및 <xref:System.IO.File.ReadAllLines%2A>방법은 다음과 같이 달라 집니다: ReadLines를 사용 하면 문자열의 컬렉션을 열거 하 고, 전체 컬렉션을 반환 하기 전에 시작할 수 있습니다.</xref:System.IO.File.ReadAllLines%2A> 사용 하는 경우 <xref:System.IO.File.ReadAllLines%2A>, 배열에 액세스 하기 전에 문자열의 전체 배열이 반환에 대해 기다려야 합니다.</xref:System.IO.File.ReadAllLines%2A> 따라서 매우 큰 파일을 사용 하는 경우 ReadLines 더 효율적일 수 있습니다.       ReadLines 메서드를 사용 하 여 다음을 수행할:-수행 [LINQ to Objects](~/add/includes/ajax-current-ext-md.md) 라인 필터링 된 집합을 가져와서 파일에 대 한 쿼리 합니다.      -사용 하 여 파일의 줄에 반환된 된 컬렉션을 작성 합니다.는 <xref:System.IO.File.WriteAllLines%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.Text.Encoding%29?displayProperty=fullName>메서드를 가진 기존 파일에 추가 <xref:System.IO.File.AppendAllLines%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.Text.Encoding%29?displayProperty=fullName>메서드.</xref:System.IO.File.AppendAllLines%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.Text.Encoding%29?displayProperty=fullName> </xref:System.IO.File.WriteAllLines%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.Text.Encoding%29?displayProperty=fullName>      --즉시 채워진된 인스턴스의 <xref:System.Collections.Generic.IEnumerable%601>같은 <xref:System.Collections.Generic.IList%601>나 <xref:System.Collections.Generic.Queue%601>.</xref:System.Collections.Generic.Queue%601> </xref:System.Collections.Generic.IList%601> 해당 생성자에 대 한 문자열의 컬렉션</xref:System.Collections.Generic.IEnumerable%601> 을 사용 하는 컬렉션을 생성 하는 중"
  syntax:
    content: public static System.Collections.Generic.IEnumerable<string> ReadLines (string path, System.Text.Encoding encoding);
    parameters:
    - id: path
      type: System.String
      description: "읽을 파일입니다."
    - id: encoding
      type: System.Text.Encoding
      description: "파일의 내용에 적용 하는 인코딩입니다."
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
      description: "파일의 모든 줄 또는 쿼리의 결과 줄입니다."
  overload: System.IO.File.ReadLines*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>길이가&0; 인 문자열, 공백만 포함 또는에 정의 된 대로 하나 이상의 잘못 된 문자가 포함 된 <xref:System.IO.Path.GetInvalidPathChars*> 메서드."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "<code>path</code>잘못 되었습니다 (예를 들어이 매핑되지 않은 드라이브에 있음)."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "지정한 파일 <code> path </code> 찾을 수 없습니다."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "파일을 여는 동안 I/O 오류가 발생 했습니다."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "<code>path</code>시스템에서 정의한 최대 길이 초과합니다. 예를 들어 Windows 기반 플랫폼에서 경로 248 자 미만 이어야 하 고 파일 이름은 260 자 미만 이어야 합니다."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "호출자에 게 필요한 권한이 없습니다."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>읽기 전용 파일을 지정 합니다.       -또는-이 작업은 현재 플랫폼에서 지원 되지 않습니다.       -또는- <code>path</code> 디렉터리입니다.       -또는-호출자에 게는 필요한 사용 권한이 없습니다."
  platform:
  - net462
- uid: System.IO.File.Replace(System.String,System.String,System.String)
  id: Replace(System.String,System.String,System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: Replace(String,String,String)
  nameWithType: File.Replace(String,String,String)
  fullName: System.IO.File.Replace(String,String,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "지정된 된 파일의 내용을 원본 파일을 삭제 하 고 대체 된 파일의 백업이 만들어지며 다른 파일의 내용으로 대체 합니다."
  remarks: "Replace 메서드는 지정된 된 파일의 내용을 다른 파일의 내용으로 바꿉니다.  또한 대체 된 파일의 백업을 만듭니다.       경우는 `sourceFileName` 및 `destinationFileName` 는 서로 다른 볼륨에이 메서드는 예외를 발생 시킵니다. 경우는 `destinationBackupFileName` 는 원본 파일에서 다른 볼륨에 백업 파일이 삭제 됩니다.       전달 `null` 에 `destinationBackupFileName` 교체 중인 파일의 백업을 만드는 하지 않을 경우 매개 변수입니다."
  example:
  - "The following code example uses the <xref:System.IO.File.Replace%2A> method to replace a file with another file and create a backup of the replaced file.  \n  \n [!code-vb[IO.File.Replace#1](~/add/codesnippet/visualbasic/m-system.io.file.replace_1.vb)]\n [!code-cs[IO.File.Replace#1](~/add/codesnippet/csharp/m-system.io.file.replace_1.cs)]\n [!code-cpp[IO.File.Replace#1](~/add/codesnippet/cpp/m-system.io.file.replace_1.cpp)]"
  syntax:
    content: public static void Replace (string sourceFileName, string destinationFileName, string destinationBackupFileName);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "로 지정 된 파일을 대체할 파일의 이름 `destinationFileName`합니다."
    - id: destinationFileName
      type: System.String
      description: "대체 되 고 파일의 이름입니다."
    - id: destinationBackupFileName
      type: System.String
      description: "백업 파일의 이름입니다."
  overload: System.IO.File.Replace*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "설명 하는 경로 <code> destinationFileName </code> 매개 변수가 올바른 형식이 없습니다.       -또는-에서 설명 하는 경로 <code> destinationBackupFileName </code> 매개 변수가 올바른 형식이 없습니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>destinationFileName</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.DriveNotFoundException
    commentId: T:System.IO.DriveNotFoundException
    description: "잘못 된 드라이브를 지정 했습니다."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "현재 설명 하는 파일 <xref href=&quot;System.IO.FileInfo&quot;> </xref> 개체를 찾을 수 없습니다.       -또는-기술 된 파일의 <code> destinationBackupFileName </code> 매개 변수를 찾을 수 없습니다."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "An I/O error occurred while opening the file.  \n  \n \\- or -  \n  \n The <code>sourceFileName</code> and <code>destinationFileName</code> parameters specify the same file."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "지정된 된 경로, 파일 이름 또는 둘 다에 시스템 정의 최대 길이 초과 합니다. 예를 들어 Windows 기반 플랫폼에서 경로 248 자 미만, 이어야 하 고 파일 이름은 260 자 미만 이어야 합니다."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "운영 체제를 Windows 98 Second Edition 또는 이전 버전 및 파일 시스템이 NTFS가 아닙니다."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code> sourceFileName </code> 또는 <code> destinationFileName </code> 매개 변수는 읽기 전용 파일을 지정 합니다.       -또는-이 작업은 현재 플랫폼에서 지원 되지 않습니다.       -또는-소스 또는 대상 매개 변수가 파일 대신 디렉터리를 지정 합니다.       -또는-호출자에 게는 필요한 사용 권한이 없습니다."
  platform:
  - net462
- uid: System.IO.File.Replace(System.String,System.String,System.String,System.Boolean)
  id: Replace(System.String,System.String,System.String,System.Boolean)
  parent: System.IO.File
  langs:
  - csharp
  name: Replace(String,String,String,Boolean)
  nameWithType: File.Replace(String,String,String,Boolean)
  fullName: System.IO.File.Replace(String,String,String,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "지정된 된 파일의 내용을 다른 파일을 원본 파일을 삭제 하 고 대체 된 파일의 백업을 만드는의 내용으로 대체 하 고 선택적으로 병합 오류를 무시 합니다."
  remarks: "Replace 메서드는 지정된 된 파일의 내용을 다른 파일의 내용으로 바꿉니다.  또한 대체 된 파일의 백업을 만듭니다.       경우는 `sourceFileName` 및 `destinationFileName` 는 서로 다른 볼륨에이 메서드는 예외를 발생 시킵니다. 경우는 `destinationBackupFileName` 는 원본 파일에서 다른 볼륨에 백업 파일이 삭제 됩니다.       전달 `null` 에 `destinationBackupFileName` 교체 중인 파일의 백업을 만드는 하지 않을 경우 매개 변수입니다."
  example:
  - "The following code example uses the Replace method to replace a file with another file and create a backup of the replaced file.  \n  \n [!code-vb[IO.File.Replace#1](~/add/codesnippet/visualbasic/be01e0a6-2a02-46ff-8d10-_1.vb)]\n [!code-cs[IO.File.Replace#1](~/add/codesnippet/csharp/be01e0a6-2a02-46ff-8d10-_1.cs)]\n [!code-cpp[IO.File.Replace#1](~/add/codesnippet/cpp/be01e0a6-2a02-46ff-8d10-_1.cpp)]"
  syntax:
    content: public static void Replace (string sourceFileName, string destinationFileName, string destinationBackupFileName, bool ignoreMetadataErrors);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "로 지정 된 파일을 대체할 파일의 이름 `destinationFileName`합니다."
    - id: destinationFileName
      type: System.String
      description: "대체 되 고 파일의 이름입니다."
    - id: destinationBackupFileName
      type: System.String
      description: "백업 파일의 이름입니다."
    - id: ignoreMetadataErrors
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>대체 파일의 특성 및 액세스 제어 목록 (Acl)) (같은 병합 오류를 무시 하려면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.IO.File.Replace*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "설명 하는 경로 <code> destinationFileName </code> 매개 변수가 올바른 형식이 없습니다.       -또는-에서 설명 하는 경로 <code> destinationBackupFileName </code> 매개 변수가 올바른 형식이 없습니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>destinationFileName</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.DriveNotFoundException
    commentId: T:System.IO.DriveNotFoundException
    description: "잘못 된 드라이브를 지정 했습니다."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "현재 설명 하는 파일 <xref href=&quot;System.IO.FileInfo&quot;> </xref> 개체를 찾을 수 없습니다.       -또는-기술 된 파일의 <code> destinationBackupFileName </code> 매개 변수를 찾을 수 없습니다."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "An I/O error occurred while opening the file.  \n  \n \\- or -  \n  \n The <code>sourceFileName</code> and <code>destinationFileName</code> parameters specify the same file."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "지정된 된 경로, 파일 이름 또는 둘 다에 시스템 정의 최대 길이 초과 합니다. 예를 들어 Windows 기반 플랫폼에서 경로 248 자 미만, 이어야 하 고 파일 이름은 260 자 미만 이어야 합니다."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "운영 체제를 Windows 98 Second Edition 또는 이전 버전 및 파일 시스템이 NTFS가 아닙니다."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code> sourceFileName </code> 또는 <code> destinationFileName </code> 매개 변수는 읽기 전용 파일을 지정 합니다.       -또는-이 작업은 현재 플랫폼에서 지원 되지 않습니다.       -또는-소스 또는 대상 매개 변수가 파일 대신 디렉터리를 지정 합니다.       -또는-호출자에 게는 필요한 사용 권한이 없습니다."
  platform:
  - net462
- uid: System.IO.File.SetAccessControl(System.String,System.Security.AccessControl.FileSecurity)
  id: SetAccessControl(System.String,System.Security.AccessControl.FileSecurity)
  parent: System.IO.File
  langs:
  - csharp
  name: SetAccessControl(String,FileSecurity)
  nameWithType: File.SetAccessControl(String,FileSecurity)
  fullName: System.IO.File.SetAccessControl(String,FileSecurity)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "설명 하는 액세스 제어 목록 (ACL) 항목을 적용 한 <xref href=&quot;System.Security.AccessControl.FileSecurity&quot;> </xref> 지정된 된 파일에는 개체입니다."
  remarks: "가집니다 메서드는 상속 되지 않은 ACL 목록을 표시 하는 파일에 액세스 제어 목록 (ACL) 항목을 적용 됩니다.      > [!CAUTION] > The ACL에 지정 된 된 `fileSecurity` 매개 변수는 파일에 대 한 기존 ACL을 대체 합니다. 새 사용자에 대 한 권한을 추가 하려면 사용 된 <xref:System.IO.File.GetAccessControl%2A>메서드를 추가 하려면 수정 하 고 다음 가집니다를 사용 하 여 적용 하는 파일에 다시.</xref:System.IO.File.GetAccessControl%2A>       개인 및/또는 나 갖지 않고에 지정된 된 파일에서 특정 작업을 수행할 권한을 그룹이 ACL에 설명 합니다. 자세한 내용은 참조 [하는 방법: 액세스 제어 목록 항목 추가 또는 제거](~/add/includes/ajax-current-ext-md.md)합니다.       가집니다 메서드만 계속 되 면 <xref:System.Security.AccessControl.FileSecurity>개체를 만든 후 수정 된 개체입니다.</xref:System.Security.AccessControl.FileSecurity>  경우는 <xref:System.Security.AccessControl.FileSecurity>개체가 수정 되지 않은, 파일에 유지 되지 것입니다.</xref:System.Security.AccessControl.FileSecurity>  검색할 수 없으면 따라서는 <xref:System.Security.AccessControl.FileSecurity>한 파일에서 개체를 다른 파일에 동일한 개체를 다시 적용 합니다.</xref:System.Security.AccessControl.FileSecurity>       한 파일에서 ACL 정보 복사: 1입니다.  사용 하 여는 <xref:System.IO.File.GetAccessControl%2A>를 검색할 메서드는 <xref:System.Security.AccessControl.FileSecurity>개체 소스 파일에서.</xref:System.Security.AccessControl.FileSecurity> </xref:System.IO.File.GetAccessControl%2A>      2.  새 <xref:System.Security.AccessControl.FileSecurity>대상 파일에 대 한 개체입니다.</xref:System.Security.AccessControl.FileSecurity>      3.  사용 하 여는 <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm%2A>또는 <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A>소스의 메서드 <xref:System.Security.AccessControl.FileSecurity>ACL 정보를 검색 하는 개체입니다.</xref:System.Security.AccessControl.FileSecurity> </xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A> </xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm%2A>      4.  사용 된 <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm%2A>또는 <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A>대상에 3 단계에서 검색 메서드 정보를 복사 하려면 <xref:System.Security.AccessControl.FileSecurity>개체입니다.</xref:System.Security.AccessControl.FileSecurity> </xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A> </xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm%2A>      5.  대상을 설정 <xref:System.Security.AccessControl.FileSecurity>가집니다 메서드를 사용 하 여 대상 파일에는 개체입니다.</xref:System.Security.AccessControl.FileSecurity>       NTFS 환경에서 <xref:System.Security.AccessControl.FileSystemRights>및 <xref:System.Security.AccessControl.FileSystemRights>사용자에 게 하는 경우 사용자에 게 권한이 부여 됩니다 <xref:System.Security.AccessControl.FileSystemRights>부모 폴더에 대 한.</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights> 거부 하려면 <xref:System.Security.AccessControl.FileSystemRights>및 <xref:System.Security.AccessControl.FileSystemRights>, 거부 <xref:System.Security.AccessControl.FileSystemRights>부모 디렉터리에 있습니다.</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights>"
  example:
  - "The following code example uses the <xref:System.IO.File.GetAccessControl%2A> and SetAccessControl methods to add and then remove an access control list (ACL) entry from a file.  You must supply a valid user or group account to run this example.  \n  \n [!code-cs[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/csharp/4f792c56-f52f-4b2d-89e4-_1.cs)]\n [!code-vb[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/visualbasic/4f792c56-f52f-4b2d-89e4-_1.vb)]\n [!code-cpp[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/cpp/4f792c56-f52f-4b2d-89e4-_1.cpp)]"
  syntax:
    content: public static void SetAccessControl (string path, System.Security.AccessControl.FileSecurity fileSecurity);
    parameters:
    - id: path
      type: System.String
      description: "파일을 추가 하거나 액세스 제어 목록 (ACL) 항목을 제거 합니다."
    - id: fileSecurity
      type: System.Security.AccessControl.FileSecurity
      description: "A <xref href=&quot;System.Security.AccessControl.FileSecurity&quot;> </xref> 설명 된 파일에 적용할 ACL 항목을 설명 하는 개체는 `path` 매개 변수입니다."
  overload: System.IO.File.SetAccessControl*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "파일을 여는 동안 I/O 오류가 발생 했습니다."
  - type: System.Runtime.InteropServices.SEHException
    commentId: T:System.Runtime.InteropServices.SEHException
    description: "The <code>path</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.SystemException
    commentId: T:System.SystemException
    description: "파일을 찾을 수 없습니다."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code> path </code> 매개 변수 파일을 지정한 경우 읽기 전용입니다.       -또는-이 작업은 현재 플랫폼에서 지원 되지 않습니다.       -또는- <code> path </code> 매개 변수는 디렉터리를 지정 합니다.       -또는-호출자에 게는 필요한 사용 권한이 없습니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>fileSecurity</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IO.File.SetAttributes(System.String,System.IO.FileAttributes)
  id: SetAttributes(System.String,System.IO.FileAttributes)
  parent: System.IO.File
  langs:
  - csharp
  name: SetAttributes(String,FileAttributes)
  nameWithType: File.SetAttributes(String,FileAttributes)
  fullName: System.IO.File.SetAttributes(String,FileAttributes)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "지정 된 <xref href=&quot;System.IO.FileAttributes&quot;> </xref> 지정된 된 경로에 있는 파일의 합니다."
  remarks: "`path` 상대 또는 절대 경로 정보를 지정 하기 위해 매개 변수는 허용 합니다. 상대 경로 정보는 현재 작업 디렉터리에 상대적으로 해석 됩니다. 현재 작업 디렉터리를 가져오려면 <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A> 를 참조 하세요.       와 같은 특정 파일 특성 <xref:System.IO.FileAttributes>및 <xref:System.IO.FileAttributes>를 결합할 수 있습니다.</xref:System.IO.FileAttributes> </xref:System.IO.FileAttributes> 와 같은 다른 특성 <xref:System.IO.FileAttributes>를 단독으로 사용 해야 합니다.</xref:System.IO.FileAttributes>       압축 상태를 변경 불가능 한 <xref:System.IO.File>SetAttributes 메서드를 사용 하 여.</xref:System.IO.File>       공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following example demonstrates the `GetAttributes` and `SetAttributes` methods by applying the `Archive` and `Hidden` attributes to a file.  \n  \n [!code-cs[File GetAttributes#1](~/add/codesnippet/csharp/m-system.io.file.setattr_1.cs)]\n [!code-cpp[File GetAttributes#1](~/add/codesnippet/cpp/m-system.io.file.setattr_1.cpp)]\n [!code-vb[File GetAttributes#1](~/add/codesnippet/visualbasic/m-system.io.file.setattr_1.vb)]"
  syntax:
    content: public static void SetAttributes (string path, System.IO.FileAttributes fileAttributes);
    parameters:
    - id: path
      type: System.String
      description: "파일 경로입니다."
    - id: fileAttributes
      type: System.IO.FileAttributes
      description: "열거형 값의 비트 조합입니다."
  overload: System.IO.File.SetAttributes*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>비어, 공백만 포함, 잘못 된 문자가 들어 또는 파일 특성이 잘못 되었습니다."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "지정된 된 경로, 파일 이름 또는 둘 다에 시스템 정의 최대 길이 초과 합니다. 예를 들어 Windows 기반 플랫폼에서 경로 248 자 미만, 이어야 하 고 파일 이름은 260 자 미만 이어야 합니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>잘못 된 형식입니다."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "지정 된 경로가 유효 하지 않거나, (예를 들어이 매핑되지 않은 드라이브에 있음)."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "파일을 찾을 수 없습니다."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>파일을 지정한 경우 읽기 전용입니다.       -또는-이 작업은 현재 플랫폼에서 지원 되지 않습니다.       -또는- <code>path</code> 가 디렉터리를 지정 합니다.       -또는-호출자에 게는 필요한 사용 권한이 없습니다."
  platform:
  - net462
- uid: System.IO.File.SetCreationTime(System.String,System.DateTime)
  id: SetCreationTime(System.String,System.DateTime)
  parent: System.IO.File
  langs:
  - csharp
  name: SetCreationTime(String,DateTime)
  nameWithType: File.SetCreationTime(String,DateTime)
  fullName: System.IO.File.SetCreationTime(String,DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "파일을 만든 시간과 날짜를 설정 합니다."
  remarks: "`path` 상대 또는 절대 경로 정보를 지정 하기 위해 매개 변수는 허용 합니다. 상대 경로 정보는 현재 작업 디렉터리에 상대적으로 해석 됩니다. 현재 작업 디렉터리를 가져오려면 <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A> 를 참조 하세요.       NTFS로 포맷 된 드라이브에 파일 메타 정보, 같은 파일을 만든 시간, 짧은 시간 동안 캐시할 수 있습니다. 결과적으로, 덮어쓰기 또는 기존 파일을 대체 하는 경우 파일의 생성 시간을 명시적으로 설정 해야 할 수도 있습니다.       공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public static void SetCreationTime (string path, DateTime creationTime);
    parameters:
    - id: path
      type: System.String
      description: "만든 날짜와 시간 정보를 설정할 파일입니다."
    - id: creationTime
      type: System.DateTime
      description: "A <xref:System.DateTime>의 만든 날짜와 시간을 설정할 값이 포함 된 `path`.</xref:System.DateTime> 이 값은 현지 시간으로 표현 됩니다."
  overload: System.IO.File.SetCreationTime*
  exceptions:
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "지정된 된 경로 찾을 수 없습니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>길이가&0; 인 문자열인, 공백만 포함 또는에 정의 된 대로 하나 이상의 잘못 된 문자가 들어 <xref:System.IO.Path.InvalidPathChars>합니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "지정된 된 경로, 파일 이름 또는 둘 다에 시스템 정의 최대 길이 초과 합니다. 예를 들어 Windows 기반 플랫폼에서 경로 248 자 미만, 이어야 하 고 파일 이름은 260 자 미만 이어야 합니다."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "작업을 수행 하는 동안 I/O 오류가 발생 했습니다."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>creationTime</code>날짜, 시간, 또는이 작업에 허용 된 둘 다의 범위를 벗어난 값을 지정 합니다."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "호출자에 게 필요한 권한이 없습니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>잘못 된 형식입니다."
  platform:
  - net462
- uid: System.IO.File.SetCreationTimeUtc(System.String,System.DateTime)
  id: SetCreationTimeUtc(System.String,System.DateTime)
  parent: System.IO.File
  langs:
  - csharp
  name: SetCreationTimeUtc(String,DateTime)
  nameWithType: File.SetCreationTimeUtc(String,DateTime)
  fullName: System.IO.File.SetCreationTimeUtc(String,DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "세계시 (UTC) 파일을 만든 날짜와 시간을 설정 합니다."
  remarks: "`path` 상대 또는 절대 경로 정보를 지정 하기 위해 매개 변수는 허용 합니다. 상대 경로 정보는 현재 작업 디렉터리에 상대적으로 해석 됩니다. 현재 작업 디렉터리를 가져오려면 <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A> 를 참조 하세요.       NTFS로 포맷 된 드라이브에 파일 메타 정보, 같은 파일을 만든 시간, 짧은 시간 동안 캐시할 수 있습니다. 결과적으로, 덮어쓰기 또는 기존 파일을 대체 하는 경우 파일의 생성 시간을 명시적으로 설정 해야 할 수도 있습니다.       공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public static void SetCreationTimeUtc (string path, DateTime creationTimeUtc);
    parameters:
    - id: path
      type: System.String
      description: "만든 날짜와 시간 정보를 설정할 파일입니다."
    - id: creationTimeUtc
      type: System.DateTime
      description: "A <xref:System.DateTime>의 만든 날짜와 시간을 설정할 값이 포함 된 `path`.</xref:System.DateTime> 이 값은 UTC 시간으로 표현 됩니다."
  overload: System.IO.File.SetCreationTimeUtc*
  exceptions:
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "지정된 된 경로 찾을 수 없습니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>길이가&0; 인 문자열인, 공백만 포함 또는에 정의 된 대로 하나 이상의 잘못 된 문자가 들어 <xref:System.IO.Path.InvalidPathChars>합니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "지정된 된 경로, 파일 이름 또는 둘 다에 시스템 정의 최대 길이 초과 합니다. 예를 들어 Windows 기반 플랫폼에서 경로 248 자 미만, 이어야 하 고 파일 이름은 260 자 미만 이어야 합니다."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "작업을 수행 하는 동안 I/O 오류가 발생 했습니다."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>creationTime</code>날짜, 시간, 또는이 작업에 허용 된 둘 다의 범위를 벗어난 값을 지정 합니다."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "호출자에 게 필요한 권한이 없습니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>잘못 된 형식입니다."
  platform:
  - net462
- uid: System.IO.File.SetLastAccessTime(System.String,System.DateTime)
  id: SetLastAccessTime(System.String,System.DateTime)
  parent: System.IO.File
  langs:
  - csharp
  name: SetLastAccessTime(String,DateTime)
  nameWithType: File.SetLastAccessTime(String,DateTime)
  fullName: System.IO.File.SetLastAccessTime(String,DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "날짜 및 시간을 지정된 된 파일에 마지막으로 액세스를 설정 합니다."
  remarks: "`path` 상대 또는 절대 경로 정보를 지정 하기 위해 매개 변수는 허용 합니다. 상대 경로 정보는 현재 작업 디렉터리에 상대적으로 해석 됩니다. 현재 작업 디렉터리를 가져오려면 <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A> 를 참조 하세요.       공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following example checks the file system for the specified file, creating it if necessary, and then sets and gets the last access time.  \n  \n [!code-cpp[file setlastaccess#1](~/add/codesnippet/cpp/m-system.io.file.setlast_0_1.cpp)]\n [!code-vb[file setlastaccess#1](~/add/codesnippet/visualbasic/m-system.io.file.setlast_0_1.vb)]\n [!code-cs[file setlastaccess#1](~/add/codesnippet/csharp/m-system.io.file.setlast_0_1.cs)]"
  syntax:
    content: public static void SetLastAccessTime (string path, DateTime lastAccessTime);
    parameters:
    - id: path
      type: System.String
      description: "액세스 날짜와 시간 정보를 설정할 파일입니다."
    - id: lastAccessTime
      type: System.DateTime
      description: "A <xref:System.DateTime>의 마지막 액세스 날짜와 시간을 설정할 값이 포함 된 `path`.</xref:System.DateTime> 이 값은 현지 시간으로 표현 됩니다."
  overload: System.IO.File.SetLastAccessTime*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>길이가&0; 인 문자열인, 공백만 포함 또는에 정의 된 대로 하나 이상의 잘못 된 문자가 들어 <xref:System.IO.Path.InvalidPathChars>합니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "지정된 된 경로, 파일 이름 또는 둘 다에 시스템 정의 최대 길이 초과 합니다. 예를 들어 Windows 기반 플랫폼에서 경로 248 자 미만, 이어야 하 고 파일 이름은 260 자 미만 이어야 합니다."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "지정된 된 경로 찾을 수 없습니다."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "호출자에 게 필요한 권한이 없습니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>잘못 된 형식입니다."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>lastAccessTime</code>날짜 또는이 작업에 허용 된 시간 범위를 벗어난 값을 지정 합니다."
  platform:
  - net462
- uid: System.IO.File.SetLastAccessTimeUtc(System.String,System.DateTime)
  id: SetLastAccessTimeUtc(System.String,System.DateTime)
  parent: System.IO.File
  langs:
  - csharp
  name: SetLastAccessTimeUtc(String,DateTime)
  nameWithType: File.SetLastAccessTimeUtc(String,DateTime)
  fullName: System.IO.File.SetLastAccessTimeUtc(String,DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "세계시 (UTC) 된 지정 된 파일을 마지막 액세스 날짜와 시간을 설정 합니다."
  remarks: "`path` 상대 또는 절대 경로 정보를 지정 하기 위해 매개 변수는 허용 합니다. 상대 경로 정보는 현재 작업 디렉터리에 상대적으로 해석 됩니다. 현재 작업 디렉터리를 가져오려면 <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A> 를 참조 하세요.       공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public static void SetLastAccessTimeUtc (string path, DateTime lastAccessTimeUtc);
    parameters:
    - id: path
      type: System.String
      description: "액세스 날짜와 시간 정보를 설정할 파일입니다."
    - id: lastAccessTimeUtc
      type: System.DateTime
      description: "A <xref:System.DateTime>의 마지막 액세스 날짜와 시간을 설정할 값이 포함 된 `path`.</xref:System.DateTime> 이 값은 UTC 시간으로 표현 됩니다."
  overload: System.IO.File.SetLastAccessTimeUtc*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>길이가&0; 인 문자열인, 공백만 포함 또는에 정의 된 대로 하나 이상의 잘못 된 문자가 들어 <xref:System.IO.Path.InvalidPathChars>합니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "지정된 된 경로, 파일 이름 또는 둘 다에 시스템 정의 최대 길이 초과 합니다. 예를 들어 Windows 기반 플랫폼에서 경로 248 자 미만, 이어야 하 고 파일 이름은 260 자 미만 이어야 합니다."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "지정된 된 경로 찾을 수 없습니다."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "호출자에 게 필요한 권한이 없습니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>잘못 된 형식입니다."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>lastAccessTimeUtc</code>날짜 또는이 작업에 허용 된 시간 범위를 벗어난 값을 지정 합니다."
  platform:
  - net462
- uid: System.IO.File.SetLastWriteTime(System.String,System.DateTime)
  id: SetLastWriteTime(System.String,System.DateTime)
  parent: System.IO.File
  langs:
  - csharp
  name: SetLastWriteTime(String,DateTime)
  nameWithType: File.SetLastWriteTime(String,DateTime)
  fullName: System.IO.File.SetLastWriteTime(String,DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "날짜 및 지정된 된 파일에 마지막으로 쓴 시간을 설정 합니다."
  remarks: "`path` 상대 또는 절대 경로 정보를 지정 하기 위해 매개 변수는 허용 합니다. 상대 경로 정보는 현재 작업 디렉터리에 상대적으로 해석 됩니다. 현재 작업 디렉터리를 가져오려면 <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A> 를 참조 하세요.       공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following example checks the file system for the specified file, creating the file if necessary, and then sets and gets the last write time of the file.  \n  \n [!code-cs[file setlastwrite#1](~/add/codesnippet/csharp/m-system.io.file.setlast_1_1.cs)]\n [!code-vb[file setlastwrite#1](~/add/codesnippet/visualbasic/m-system.io.file.setlast_1_1.vb)]\n [!code-cpp[file setlastwrite#1](~/add/codesnippet/cpp/m-system.io.file.setlast_1_1.cpp)]"
  syntax:
    content: public static void SetLastWriteTime (string path, DateTime lastWriteTime);
    parameters:
    - id: path
      type: System.String
      description: "날짜 및 시간 정보를 설정할 파일."
    - id: lastWriteTime
      type: System.DateTime
      description: "A <xref:System.DateTime>마지막으로 쓴 날짜와 시간에 대 한 설정 값이 포함 된 `path`.</xref:System.DateTime> 이 값은 현지 시간으로 표현 됩니다."
  overload: System.IO.File.SetLastWriteTime*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>길이가&0; 인 문자열인, 공백만 포함 또는에 정의 된 대로 하나 이상의 잘못 된 문자가 들어 <xref:System.IO.Path.InvalidPathChars>합니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "지정된 된 경로, 파일 이름 또는 둘 다에 시스템 정의 최대 길이 초과 합니다. 예를 들어 Windows 기반 플랫폼에서 경로 248 자 미만, 이어야 하 고 파일 이름은 260 자 미만 이어야 합니다."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "지정된 된 경로 찾을 수 없습니다."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "호출자에 게 필요한 권한이 없습니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>잘못 된 형식입니다."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>lastWriteTime</code>날짜 또는이 작업에 허용 된 시간 범위를 벗어난 값을 지정 합니다."
  platform:
  - net462
- uid: System.IO.File.SetLastWriteTimeUtc(System.String,System.DateTime)
  id: SetLastWriteTimeUtc(System.String,System.DateTime)
  parent: System.IO.File
  langs:
  - csharp
  name: SetLastWriteTimeUtc(String,DateTime)
  nameWithType: File.SetLastWriteTimeUtc(String,DateTime)
  fullName: System.IO.File.SetLastWriteTimeUtc(String,DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "세계시 (UTC)는 지정된 된 파일에 마지막으로 쓴 날짜와 시간을 설정 합니다."
  remarks: "`path` 상대 또는 절대 경로 정보를 지정 하기 위해 매개 변수는 허용 합니다. 상대 경로 정보는 현재 작업 디렉터리에 상대적으로 해석 됩니다. 현재 작업 디렉터리를 가져오려면 <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A> 를 참조 하세요.       공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public static void SetLastWriteTimeUtc (string path, DateTime lastWriteTimeUtc);
    parameters:
    - id: path
      type: System.String
      description: "날짜 및 시간 정보를 설정할 파일."
    - id: lastWriteTimeUtc
      type: System.DateTime
      description: "A <xref:System.DateTime>마지막으로 쓴 날짜와 시간에 대 한 설정 값이 포함 된 `path`.</xref:System.DateTime> 이 값은 UTC 시간으로 표현 됩니다."
  overload: System.IO.File.SetLastWriteTimeUtc*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>길이가&0; 인 문자열인, 공백만 포함 또는에 정의 된 대로 하나 이상의 잘못 된 문자가 들어 <xref:System.IO.Path.InvalidPathChars>합니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "지정된 된 경로, 파일 이름 또는 둘 다에 시스템 정의 최대 길이 초과 합니다. 예를 들어 Windows 기반 플랫폼에서 경로 248 자 미만, 이어야 하 고 파일 이름은 260 자 미만 이어야 합니다."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "지정된 된 경로 찾을 수 없습니다."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "호출자에 게 필요한 권한이 없습니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>잘못 된 형식입니다."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>lastWriteTimeUtc</code>날짜 또는이 작업에 허용 된 시간 범위를 벗어난 값을 지정 합니다."
  platform:
  - net462
- uid: System.IO.File.WriteAllBytes(System.String,System.Byte[])
  id: WriteAllBytes(System.String,System.Byte[])
  parent: System.IO.File
  langs:
  - csharp
  name: WriteAllBytes(String,Byte[])
  nameWithType: File.WriteAllBytes(String,Byte[])
  fullName: System.IO.File.WriteAllBytes(String,Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "새 파일을 만들고 파일에 지정된 된 바이트 배열을 씁니다 다음 파일을 닫습니다. 대상 파일이 이미 있으면 덮어씁니다."
  remarks: "바이트 배열 및 파일 경로 지정이 지정된 된 파일 열고, 파일에 바이트 배열의 내용을 씁니다 메서드와 다음 파일을 닫습니다."
  syntax:
    content: public static void WriteAllBytes (string path, byte[] bytes);
    parameters:
    - id: path
      type: System.String
      description: "쓸 파일입니다."
    - id: bytes
      type: System.Byte[]
      description: "파일에 쓸 바이트입니다."
  overload: System.IO.File.WriteAllBytes*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>길이가&0; 인 문자열인, 공백만 포함 또는에 정의 된 대로 하나 이상의 잘못 된 문자가 들어 <xref:System.IO.Path.InvalidPathChars>합니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code><xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 또는 바이트 배열이 비어 있는 것입니다."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "지정된 된 경로, 파일 이름 또는 둘 다에 시스템 정의 최대 길이 초과 합니다. 예를 들어 Windows 기반 플랫폼에서 경로 248 자 미만, 이어야 하 고 파일 이름은 260 자 미만 이어야 합니다."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "지정 된 경로가 잘못 되었습니다 (예를 들어이 매핑되지 않은 드라이브에 있음)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "파일을 여는 동안 I/O 오류가 발생 했습니다."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>파일을 지정한 경우 읽기 전용입니다.       -또는-이 작업은 현재 플랫폼에서 지원 되지 않습니다.       -또는- <code>path</code> 가 디렉터리를 지정 합니다.       -또는-호출자에 게는 필요한 사용 권한이 없습니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>잘못 된 형식입니다."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "호출자에 게 필요한 권한이 없습니다."
  platform:
  - net462
- uid: System.IO.File.WriteAllLines(System.String,System.Collections.Generic.IEnumerable{System.String})
  id: WriteAllLines(System.String,System.Collections.Generic.IEnumerable{System.String})
  parent: System.IO.File
  langs:
  - csharp
  name: WriteAllLines(String,IEnumerable<String>)
  nameWithType: File.WriteAllLines(String,IEnumerable<String>)
  fullName: System.IO.File.WriteAllLines(String,IEnumerable<String>)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "새 파일을 만들고 문자열의 컬렉션을 파일에 기록 다음 파일을 닫습니다."
  remarks: "WriteAllLines 메서드의 기본 동작은 u t F-8 바이트 순서 표시가 (BOM) 인코딩을 사용 하 여 데이터를 작성 하는 것입니다. 같은 파일의 시작 부분에서 바이트 순서 표시를 u t F-8 식별자를 포함 하는 데 필요한 경우 사용 하 여는 <xref:System.IO.File.WriteAllLines%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.Text.Encoding%29>메서드 오버 로드와 <xref:System.Text.Encoding.UTF8%2A>인코딩.</xref:System.Text.Encoding.UTF8%2A> </xref:System.IO.File.WriteAllLines%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.Text.Encoding%29>       대상 파일이 이미 있으면 덮어씁니다.       이 메서드를 사용 하 여 사용 되는 컬렉션 클래스에 대 한 콘텐츠를 만들 수는 <xref:System.Collections.Generic.IEnumerable%601>생성자에서와 같은 한 <xref:System.Collections.Generic.List%601.%23ctor%2A>, <xref:System.Collections.Generic.HashSet%601.%23ctor%2A>, <xref:System.Collections.Generic.SortedSet%601.%23ctor%2A>클래스</xref:System.Collections.Generic.SortedSet%601.%23ctor%2A> 또는</xref:System.Collections.Generic.HashSet%601.%23ctor%2A> </xref:System.Collections.Generic.List%601.%23ctor%2A> </xref:System.Collections.Generic.IEnumerable%601>"
  example:
  - "The following example writes selected lines from a sample data file to a file.  \n  \n [!code-cs[System.IO.File.WriteAllAppendAll#1](~/add/codesnippet/csharp/f09e9593-445c-47ad-bb1b-_1.cs)]\n [!code-vb[System.IO.File.WriteAllAppendAll#1](~/add/codesnippet/visualbasic/f09e9593-445c-47ad-bb1b-_1.vb)]"
  syntax:
    content: public static void WriteAllLines (string path, System.Collections.Generic.IEnumerable<string> contents);
    parameters:
    - id: path
      type: System.String
      description: "쓸 파일입니다."
    - id: contents
      type: System.Collections.Generic.IEnumerable{System.String}
      description: "파일에 쓸 줄입니다."
  overload: System.IO.File.WriteAllLines*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>길이가&0; 인 문자열인, 공백만 포함 또는에 정의 된 하나 이상의 잘못 된 문자가 포함 되어는 <xref:System.IO.Path.GetInvalidPathChars*> 메서드."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Either<code> path </code>or <code>contents</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "<code>path</code>잘못 되었습니다 (예를 들어이 매핑되지 않은 드라이브에 있음)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "파일을 여는 동안 I/O 오류가 발생 했습니다."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "<code>path</code>시스템에서 정의한 최대 길이 초과합니다. 예를 들어 Windows 기반 플랫폼에서 경로 248 자 미만 이어야 하 고 파일 이름은 260 자 미만 이어야 합니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>잘못 된 형식입니다."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "호출자에 게 필요한 권한이 없습니다."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>읽기 전용 파일을 지정 합니다.       -또는-이 작업은 현재 플랫폼에서 지원 되지 않습니다.       -또는- <code>path</code> 디렉터리입니다.       -또는-호출자에 게는 필요한 사용 권한이 없습니다."
  platform:
  - net462
- uid: System.IO.File.WriteAllLines(System.String,System.String[])
  id: WriteAllLines(System.String,System.String[])
  parent: System.IO.File
  langs:
  - csharp
  name: WriteAllLines(String,String[])
  nameWithType: File.WriteAllLines(String,String[])
  fullName: System.IO.File.WriteAllLines(String,String[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "새 파일을 만들고 지정된 된 문자열 배열을 파일에 쓰기를 다음 파일을 닫습니다."
  remarks: "If the target file already exists, it is overwritten.  \n  \n The default behavior of the WriteAllLines method is to write out data using UTF-8 encoding without a byte order mark (BOM). If it is necessary to include a UTF-8 identifier, such as a byte order mark, at the beginning of a file, use the [WriteAllLines(String, String\\[\\], Encoding)](assetId:///M:System.IO.File.WriteAllLines(System.String,System.String[],System.Text.Encoding)?qualifyHint=False&autoUpgrade=False) method overload with <xref:System.Text.Encoding.UTF8%2A> encoding.  \n  \n Given a string array and a file path, this method opens the specified file, writes the string array to the file, and then closes the file."
  example:
  - "The following code example demonstrates the use of the WriteAllLines method to write text to a file. In this example a file is created, if it doesn't already exist, and text is added to it.  \n  \n [!code-vb[System.IO.File.AllLines#00](~/add/codesnippet/visualbasic/m-system.io.file.writeal_1_1.vb)]\n [!code-cs[System.IO.File.AllLines#00](~/add/codesnippet/csharp/m-system.io.file.writeal_1_1.cs)]"
  syntax:
    content: public static void WriteAllLines (string path, string[] contents);
    parameters:
    - id: path
      type: System.String
      description: "쓸 파일입니다."
    - id: contents
      type: System.String[]
      description: "파일에 쓸 문자열 배열입니다."
  overload: System.IO.File.WriteAllLines*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>길이가&0; 인 문자열인, 공백만 포함 또는에 정의 된 대로 하나 이상의 잘못 된 문자가 들어 <xref:System.IO.Path.InvalidPathChars>합니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Either <code>path</code> or <code>contents</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "지정된 된 경로, 파일 이름 또는 둘 다에 시스템 정의 최대 길이 초과 합니다. 예를 들어 Windows 기반 플랫폼에서 경로 248 자 미만, 이어야 하 고 파일 이름은 260 자 미만 이어야 합니다."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "지정 된 경로가 잘못 되었습니다 (예를 들어이 매핑되지 않은 드라이브에 있음)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "파일을 여는 동안 I/O 오류가 발생 했습니다."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>파일을 지정한 경우 읽기 전용입니다.       -또는-이 작업은 현재 플랫폼에서 지원 되지 않습니다.       -또는- <code>path</code> 가 디렉터리를 지정 합니다.       -또는-호출자에 게는 필요한 사용 권한이 없습니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>잘못 된 형식입니다."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "호출자에 게 필요한 권한이 없습니다."
  platform:
  - net462
- uid: System.IO.File.WriteAllLines(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)
  id: WriteAllLines(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)
  parent: System.IO.File
  langs:
  - csharp
  name: WriteAllLines(String,IEnumerable<String>,Encoding)
  nameWithType: File.WriteAllLines(String,IEnumerable<String>,Encoding)
  fullName: System.IO.File.WriteAllLines(String,IEnumerable<String>,Encoding)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "지정 된 인코딩을 사용 하 여 새 파일을 만들고 문자열의 컬렉션을 파일에 씁니다 다음 파일을 닫습니다."
  remarks: "대상 파일이 이미 있으면 덮어씁니다.       이 메서드를 사용 하 여 다음을 포함 하는 파일을 만드는:-의 결과 [LINQ to Objects](~/add/includes/ajax-current-ext-md.md) 는 파일의 줄에서 쿼리를 사용 하 여 얻어지는 <xref:System.IO.File.ReadLines%2A>메서드.</xref:System.IO.File.ReadLines%2A>      -구현 하는 컬렉션의 내용을 <xref:System.Collections.Generic.IEnumerable%601>문자열.</xref:System.Collections.Generic.IEnumerable%601>"
  syntax:
    content: public static void WriteAllLines (string path, System.Collections.Generic.IEnumerable<string> contents, System.Text.Encoding encoding);
    parameters:
    - id: path
      type: System.String
      description: "쓸 파일입니다."
    - id: contents
      type: System.Collections.Generic.IEnumerable{System.String}
      description: "파일에 쓸 줄입니다."
    - id: encoding
      type: System.Text.Encoding
      description: "사용할 문자 인코딩입니다."
  overload: System.IO.File.WriteAllLines*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>길이가&0; 인 문자열인, 공백만 포함 또는에 정의 된 하나 이상의 잘못 된 문자가 포함 되어는 <xref:System.IO.Path.GetInvalidPathChars*> 메서드."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Either<code> path</code>,<code> contents</code>, or <code>encoding</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "<code>path</code>잘못 되었습니다 (예를 들어이 매핑되지 않은 드라이브에 있음)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "파일을 여는 동안 I/O 오류가 발생 했습니다."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "<code>path</code>시스템에서 정의한 최대 길이 초과합니다. 예를 들어 Windows 기반 플랫폼에서 경로 248 자 미만 이어야 하 고 파일 이름은 260 자 미만 이어야 합니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>잘못 된 형식입니다."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "호출자에 게 필요한 권한이 없습니다."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>읽기 전용 파일을 지정 합니다.       -또는-이 작업은 현재 플랫폼에서 지원 되지 않습니다.       -또는- <code>path</code> 디렉터리입니다.       -또는-호출자에 게는 필요한 사용 권한이 없습니다."
  platform:
  - net462
- uid: System.IO.File.WriteAllLines(System.String,System.String[],System.Text.Encoding)
  id: WriteAllLines(System.String,System.String[],System.Text.Encoding)
  parent: System.IO.File
  langs:
  - csharp
  name: WriteAllLines(String,String[],Encoding)
  nameWithType: File.WriteAllLines(String,String[],Encoding)
  fullName: System.IO.File.WriteAllLines(String,String[],Encoding)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "새 파일을 만들고 지정 된 인코딩을 사용 하 여 지정 된 문자열 배열을 파일에 쓴 다음 파일을 닫습니다."
  remarks: "대상 파일이 이미 있으면 덮어씁니다.       문자열 배열을 파일 경로 매개 변수로 받아이 지정된 된 파일 열고, 문자열 배열을 지정 된 인코딩을 사용 하 여 파일에 쓴 메서드와 다음 파일을 닫습니다."
  example:
  - "The following code example demonstrates the use of the WriteAllLines method to write text to a file. In this example a file is created, if it doesn't already exist, and text is added to it.  \n  \n [!code-vb[System.IO.File.AllLines_Encoding#00](~/add/codesnippet/visualbasic/3d8070ff-3246-4c2d-a728-_1.vb)]\n [!code-cs[System.IO.File.AllLines_Encoding#00](~/add/codesnippet/csharp/3d8070ff-3246-4c2d-a728-_1.cs)]"
  syntax:
    content: public static void WriteAllLines (string path, string[] contents, System.Text.Encoding encoding);
    parameters:
    - id: path
      type: System.String
      description: "쓸 파일입니다."
    - id: contents
      type: System.String[]
      description: "파일에 쓸 문자열 배열입니다."
    - id: encoding
      type: System.Text.Encoding
      description: "<xref:System.Text.Encoding>문자열 배열에 적용 되는 문자 인코딩을 나타내는 개체입니다.</xref:System.Text.Encoding>"
  overload: System.IO.File.WriteAllLines*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>길이가&0; 인 문자열인, 공백만 포함 또는에 정의 된 대로 하나 이상의 잘못 된 문자가 들어 <xref:System.IO.Path.InvalidPathChars>합니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Either <code>path</code> or <code>contents</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "지정된 된 경로, 파일 이름 또는 둘 다에 시스템 정의 최대 길이 초과 합니다. 예를 들어 Windows 기반 플랫폼에서 경로 248 자 미만, 이어야 하 고 파일 이름은 260 자 미만 이어야 합니다."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "지정 된 경로가 잘못 되었습니다 (예를 들어이 매핑되지 않은 드라이브에 있음)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "파일을 여는 동안 I/O 오류가 발생 했습니다."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>파일을 지정한 경우 읽기 전용입니다.       -또는-이 작업은 현재 플랫폼에서 지원 되지 않습니다.       -또는- <code>path</code> 가 디렉터리를 지정 합니다.       -또는-호출자에 게는 필요한 사용 권한이 없습니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>잘못 된 형식입니다."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "호출자에 게 필요한 권한이 없습니다."
  platform:
  - net462
- uid: System.IO.File.WriteAllText(System.String,System.String)
  id: WriteAllText(System.String,System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: WriteAllText(String,String)
  nameWithType: File.WriteAllText(String,String)
  fullName: System.IO.File.WriteAllText(String,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "새 파일을 만들고 지정된 된 문자열을 파일에 쓴 다음 파일을 닫습니다. 대상 파일이 이미 있으면 덮어씁니다."
  remarks: "바이트 순서 표시 (BOM) 없이 인코딩를 사용 하 여 u t F-8을 사용 하 여이 메서드는 <xref:System.Text.Encoding.GetPreamble%2A>메서드는 빈 바이트 배열을 반환 합니다.</xref:System.Text.Encoding.GetPreamble%2A> 같은 파일의 시작 부분에서 바이트 순서 표시를 u t F-8 식별자를 포함 하는 데 필요한 경우 사용 하 여는 <xref:System.IO.File.WriteAllText%28System.String%2CSystem.String%2CSystem.Text.Encoding%29>메서드 오버 로드와 <xref:System.Text.Encoding.UTF8%2A>인코딩.</xref:System.Text.Encoding.UTF8%2A> </xref:System.IO.File.WriteAllText%28System.String%2CSystem.String%2CSystem.Text.Encoding%29>       문자열로 파일 경로 매개 변수로 받아이 지정된 된 파일 열고, 문자열을 파일에 쓴 메서드와 다음 파일을 닫습니다."
  example:
  - "The following code example demonstrates the use of the WriteAllText method to write text to a file. In this example a file is created, if it doesn't already exist, and text is added to it.  \n  \n [!code-vb[System.IO.File.AllText#00](~/add/codesnippet/visualbasic/m-system.io.file.writeal_0_1.vb)]\n [!code-cs[System.IO.File.AllText#00](~/add/codesnippet/csharp/m-system.io.file.writeal_0_1.cs)]"
  syntax:
    content: public static void WriteAllText (string path, string contents);
    parameters:
    - id: path
      type: System.String
      description: "쓸 파일입니다."
    - id: contents
      type: System.String
      description: "파일에 쓸 문자열입니다."
  overload: System.IO.File.WriteAllText*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>길이가&0; 인 문자열인, 공백만 포함 또는에 정의 된 대로 하나 이상의 잘못 된 문자가 들어 <xref:System.IO.Path.InvalidPathChars>합니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> or <code>contents</code> is empty."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "지정된 된 경로, 파일 이름 또는 둘 다에 시스템 정의 최대 길이 초과 합니다. 예를 들어 Windows 기반 플랫폼에서 경로 248 자 미만, 이어야 하 고 파일 이름은 260 자 미만 이어야 합니다."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "지정 된 경로가 잘못 되었습니다 (예를 들어이 매핑되지 않은 드라이브에 있음)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "파일을 여는 동안 I/O 오류가 발생 했습니다."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>파일을 지정한 경우 읽기 전용입니다.       -또는-이 작업은 현재 플랫폼에서 지원 되지 않습니다.       -또는- <code>path</code> 가 디렉터리를 지정 합니다.       -또는-호출자에 게는 필요한 사용 권한이 없습니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>잘못 된 형식입니다."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "호출자에 게 필요한 권한이 없습니다."
  platform:
  - net462
- uid: System.IO.File.WriteAllText(System.String,System.String,System.Text.Encoding)
  id: WriteAllText(System.String,System.String,System.Text.Encoding)
  parent: System.IO.File
  langs:
  - csharp
  name: WriteAllText(String,String,Encoding)
  nameWithType: File.WriteAllText(String,String,Encoding)
  fullName: System.IO.File.WriteAllText(String,String,Encoding)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "새 파일을 만들고 지정 된 인코딩을 사용 하 여 파일에 지정된 된 문자열을 씁니다 다음 파일을 닫습니다. 대상 파일이 이미 있으면 덮어씁니다."
  remarks: "문자열로 파일 경로 매개 변수로 받아이 지정된 된 파일 열고, 문자열을 지정 된 인코딩을 사용 하 여 파일에 쓴 메서드와 다음 파일을 닫습니다. 파일 핸들은 예외가 발생 하는 경우에이 메서드에 의해 닫혀야 보장 됩니다."
  example:
  - "The following code example demonstrates the use of the WriteAllText method to write text to a file. In this example a file is created, if it doesn't already exist, and text is added to it.  \n  \n [!code-cs[System.IO.File.AllText_Encoding#00](~/add/codesnippet/csharp/m-system.io.file.writeal_2_1.cs)]\n [!code-vb[System.IO.File.AllText_Encoding#00](~/add/codesnippet/visualbasic/m-system.io.file.writeal_2_1.vb)]"
  syntax:
    content: public static void WriteAllText (string path, string contents, System.Text.Encoding encoding);
    parameters:
    - id: path
      type: System.String
      description: "쓸 파일입니다."
    - id: contents
      type: System.String
      description: "파일에 쓸 문자열입니다."
    - id: encoding
      type: System.Text.Encoding
      description: "문자열에 적용할 인코딩입니다."
  overload: System.IO.File.WriteAllText*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>길이가&0; 인 문자열인, 공백만 포함 또는에 정의 된 대로 하나 이상의 잘못 된 문자가 들어 <xref:System.IO.Path.InvalidPathChars>합니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> or <code>contents</code> is empty."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "지정된 된 경로, 파일 이름 또는 둘 다에 시스템 정의 최대 길이 초과 합니다. 예를 들어 Windows 기반 플랫폼에서 경로 248 자 미만, 이어야 하 고 파일 이름은 260 자 미만 이어야 합니다."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "지정 된 경로가 잘못 되었습니다 (예를 들어이 매핑되지 않은 드라이브에 있음)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "파일을 여는 동안 I/O 오류가 발생 했습니다."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>파일을 지정한 경우 읽기 전용입니다.       -또는-이 작업은 현재 플랫폼에서 지원 되지 않습니다.       -또는- <code>path</code> 가 디렉터리를 지정 합니다.       -또는-호출자에 게는 필요한 사용 권한이 없습니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>잘못 된 형식입니다."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "호출자에 게 필요한 권한이 없습니다."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.IO.DirectoryNotFoundException
  isExternal: true
  name: System.IO.DirectoryNotFoundException
- uid: System.IO.FileNotFoundException
  isExternal: true
  name: System.IO.FileNotFoundException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.IO.PathTooLongException
  isExternal: true
  name: System.IO.PathTooLongException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.UnauthorizedAccessException
  isExternal: true
  name: System.UnauthorizedAccessException
- uid: System.IO.DriveNotFoundException
  parent: System.IO
  isExternal: false
  name: DriveNotFoundException
  nameWithType: DriveNotFoundException
  fullName: System.IO.DriveNotFoundException
- uid: System.PlatformNotSupportedException
  isExternal: true
  name: System.PlatformNotSupportedException
- uid: System.Runtime.InteropServices.SEHException
  isExternal: true
  name: System.Runtime.InteropServices.SEHException
- uid: System.SystemException
  parent: System
  isExternal: false
  name: SystemException
  nameWithType: SystemException
  fullName: System.SystemException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.IO.File.AppendAllLines(System.String,System.Collections.Generic.IEnumerable{System.String})
  parent: System.IO.File
  isExternal: false
  name: AppendAllLines(String,IEnumerable<String>)
  nameWithType: File.AppendAllLines(String,IEnumerable<String>)
  fullName: System.IO.File.AppendAllLines(String,IEnumerable<String>)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IO.File.AppendAllLines(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)
  parent: System.IO.File
  isExternal: false
  name: AppendAllLines(String,IEnumerable<String>,Encoding)
  nameWithType: File.AppendAllLines(String,IEnumerable<String>,Encoding)
  fullName: System.IO.File.AppendAllLines(String,IEnumerable<String>,Encoding)
- uid: System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: System.IO.File.AppendAllText(System.String,System.String)
  parent: System.IO.File
  isExternal: false
  name: AppendAllText(String,String)
  nameWithType: File.AppendAllText(String,String)
  fullName: System.IO.File.AppendAllText(String,String)
- uid: System.IO.File.AppendAllText(System.String,System.String,System.Text.Encoding)
  parent: System.IO.File
  isExternal: false
  name: AppendAllText(String,String,Encoding)
  nameWithType: File.AppendAllText(String,String,Encoding)
  fullName: System.IO.File.AppendAllText(String,String,Encoding)
- uid: System.IO.File.AppendText(System.String)
  parent: System.IO.File
  isExternal: false
  name: AppendText(String)
  nameWithType: File.AppendText(String)
  fullName: System.IO.File.AppendText(String)
- uid: System.IO.StreamWriter
  parent: System.IO
  isExternal: true
  name: StreamWriter
  nameWithType: StreamWriter
  fullName: System.IO.StreamWriter
- uid: System.IO.File.Copy(System.String,System.String)
  parent: System.IO.File
  isExternal: false
  name: Copy(String,String)
  nameWithType: File.Copy(String,String)
  fullName: System.IO.File.Copy(String,String)
- uid: System.IO.File.Copy(System.String,System.String,System.Boolean)
  parent: System.IO.File
  isExternal: false
  name: Copy(String,String,Boolean)
  nameWithType: File.Copy(String,String,Boolean)
  fullName: System.IO.File.Copy(String,String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IO.File.Create(System.String)
  parent: System.IO.File
  isExternal: false
  name: Create(String)
  nameWithType: File.Create(String)
  fullName: System.IO.File.Create(String)
- uid: System.IO.FileStream
  parent: System.IO
  isExternal: false
  name: FileStream
  nameWithType: FileStream
  fullName: System.IO.FileStream
- uid: System.IO.File.Create(System.String,System.Int32)
  parent: System.IO.File
  isExternal: false
  name: Create(String,Int32)
  nameWithType: File.Create(String,Int32)
  fullName: System.IO.File.Create(String,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IO.File.Create(System.String,System.Int32,System.IO.FileOptions)
  parent: System.IO.File
  isExternal: false
  name: Create(String,Int32,FileOptions)
  nameWithType: File.Create(String,Int32,FileOptions)
  fullName: System.IO.File.Create(String,Int32,FileOptions)
- uid: System.IO.FileOptions
  parent: System.IO
  isExternal: false
  name: FileOptions
  nameWithType: FileOptions
  fullName: System.IO.FileOptions
- uid: System.IO.File.Create(System.String,System.Int32,System.IO.FileOptions,System.Security.AccessControl.FileSecurity)
  parent: System.IO.File
  isExternal: false
  name: Create(String,Int32,FileOptions,FileSecurity)
  nameWithType: File.Create(String,Int32,FileOptions,FileSecurity)
  fullName: System.IO.File.Create(String,Int32,FileOptions,FileSecurity)
- uid: System.Security.AccessControl.FileSecurity
  parent: System.Security.AccessControl
  isExternal: false
  name: FileSecurity
  nameWithType: FileSecurity
  fullName: System.Security.AccessControl.FileSecurity
- uid: System.IO.File.CreateText(System.String)
  parent: System.IO.File
  isExternal: false
  name: CreateText(String)
  nameWithType: File.CreateText(String)
  fullName: System.IO.File.CreateText(String)
- uid: System.IO.File.Decrypt(System.String)
  parent: System.IO.File
  isExternal: false
  name: Decrypt(String)
  nameWithType: File.Decrypt(String)
  fullName: System.IO.File.Decrypt(String)
- uid: System.IO.File.Delete(System.String)
  parent: System.IO.File
  isExternal: false
  name: Delete(String)
  nameWithType: File.Delete(String)
  fullName: System.IO.File.Delete(String)
- uid: System.IO.File.Encrypt(System.String)
  parent: System.IO.File
  isExternal: false
  name: Encrypt(String)
  nameWithType: File.Encrypt(String)
  fullName: System.IO.File.Encrypt(String)
- uid: System.IO.File.Exists(System.String)
  parent: System.IO.File
  isExternal: false
  name: Exists(String)
  nameWithType: File.Exists(String)
  fullName: System.IO.File.Exists(String)
- uid: System.IO.File.GetAccessControl(System.String)
  parent: System.IO.File
  isExternal: false
  name: GetAccessControl(String)
  nameWithType: File.GetAccessControl(String)
  fullName: System.IO.File.GetAccessControl(String)
- uid: System.IO.File.GetAccessControl(System.String,System.Security.AccessControl.AccessControlSections)
  parent: System.IO.File
  isExternal: false
  name: GetAccessControl(String,AccessControlSections)
  nameWithType: File.GetAccessControl(String,AccessControlSections)
  fullName: System.IO.File.GetAccessControl(String,AccessControlSections)
- uid: System.Security.AccessControl.AccessControlSections
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessControlSections
  nameWithType: AccessControlSections
  fullName: System.Security.AccessControl.AccessControlSections
- uid: System.IO.File.GetAttributes(System.String)
  parent: System.IO.File
  isExternal: false
  name: GetAttributes(String)
  nameWithType: File.GetAttributes(String)
  fullName: System.IO.File.GetAttributes(String)
- uid: System.IO.FileAttributes
  parent: System.IO
  isExternal: false
  name: FileAttributes
  nameWithType: FileAttributes
  fullName: System.IO.FileAttributes
- uid: System.IO.File.GetCreationTime(System.String)
  parent: System.IO.File
  isExternal: false
  name: GetCreationTime(String)
  nameWithType: File.GetCreationTime(String)
  fullName: System.IO.File.GetCreationTime(String)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.IO.File.GetCreationTimeUtc(System.String)
  parent: System.IO.File
  isExternal: false
  name: GetCreationTimeUtc(String)
  nameWithType: File.GetCreationTimeUtc(String)
  fullName: System.IO.File.GetCreationTimeUtc(String)
- uid: System.IO.File.GetLastAccessTime(System.String)
  parent: System.IO.File
  isExternal: false
  name: GetLastAccessTime(String)
  nameWithType: File.GetLastAccessTime(String)
  fullName: System.IO.File.GetLastAccessTime(String)
- uid: System.IO.File.GetLastAccessTimeUtc(System.String)
  parent: System.IO.File
  isExternal: false
  name: GetLastAccessTimeUtc(String)
  nameWithType: File.GetLastAccessTimeUtc(String)
  fullName: System.IO.File.GetLastAccessTimeUtc(String)
- uid: System.IO.File.GetLastWriteTime(System.String)
  parent: System.IO.File
  isExternal: false
  name: GetLastWriteTime(String)
  nameWithType: File.GetLastWriteTime(String)
  fullName: System.IO.File.GetLastWriteTime(String)
- uid: System.IO.File.GetLastWriteTimeUtc(System.String)
  parent: System.IO.File
  isExternal: false
  name: GetLastWriteTimeUtc(String)
  nameWithType: File.GetLastWriteTimeUtc(String)
  fullName: System.IO.File.GetLastWriteTimeUtc(String)
- uid: System.IO.File.Move(System.String,System.String)
  parent: System.IO.File
  isExternal: false
  name: Move(String,String)
  nameWithType: File.Move(String,String)
  fullName: System.IO.File.Move(String,String)
- uid: System.IO.File.Open(System.String,System.IO.FileMode)
  parent: System.IO.File
  isExternal: false
  name: Open(String,FileMode)
  nameWithType: File.Open(String,FileMode)
  fullName: System.IO.File.Open(String,FileMode)
- uid: System.IO.FileMode
  parent: System.IO
  isExternal: false
  name: FileMode
  nameWithType: FileMode
  fullName: System.IO.FileMode
- uid: System.IO.File.Open(System.String,System.IO.FileMode,System.IO.FileAccess)
  parent: System.IO.File
  isExternal: false
  name: Open(String,FileMode,FileAccess)
  nameWithType: File.Open(String,FileMode,FileAccess)
  fullName: System.IO.File.Open(String,FileMode,FileAccess)
- uid: System.IO.FileAccess
  parent: System.IO
  isExternal: false
  name: FileAccess
  nameWithType: FileAccess
  fullName: System.IO.FileAccess
- uid: System.IO.File.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)
  parent: System.IO.File
  isExternal: false
  name: Open(String,FileMode,FileAccess,FileShare)
  nameWithType: File.Open(String,FileMode,FileAccess,FileShare)
  fullName: System.IO.File.Open(String,FileMode,FileAccess,FileShare)
- uid: System.IO.FileShare
  parent: System.IO
  isExternal: false
  name: FileShare
  nameWithType: FileShare
  fullName: System.IO.FileShare
- uid: System.IO.File.OpenRead(System.String)
  parent: System.IO.File
  isExternal: false
  name: OpenRead(String)
  nameWithType: File.OpenRead(String)
  fullName: System.IO.File.OpenRead(String)
- uid: System.IO.File.OpenText(System.String)
  parent: System.IO.File
  isExternal: false
  name: OpenText(String)
  nameWithType: File.OpenText(String)
  fullName: System.IO.File.OpenText(String)
- uid: System.IO.StreamReader
  parent: System.IO
  isExternal: true
  name: StreamReader
  nameWithType: StreamReader
  fullName: System.IO.StreamReader
- uid: System.IO.File.OpenWrite(System.String)
  parent: System.IO.File
  isExternal: false
  name: OpenWrite(String)
  nameWithType: File.OpenWrite(String)
  fullName: System.IO.File.OpenWrite(String)
- uid: System.IO.File.ReadAllBytes(System.String)
  parent: System.IO.File
  isExternal: false
  name: ReadAllBytes(String)
  nameWithType: File.ReadAllBytes(String)
  fullName: System.IO.File.ReadAllBytes(String)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.IO.File.ReadAllLines(System.String)
  parent: System.IO.File
  isExternal: false
  name: ReadAllLines(String)
  nameWithType: File.ReadAllLines(String)
  fullName: System.IO.File.ReadAllLines(String)
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.IO.File.ReadAllLines(System.String,System.Text.Encoding)
  parent: System.IO.File
  isExternal: false
  name: ReadAllLines(String,Encoding)
  nameWithType: File.ReadAllLines(String,Encoding)
  fullName: System.IO.File.ReadAllLines(String,Encoding)
- uid: System.IO.File.ReadAllText(System.String)
  parent: System.IO.File
  isExternal: false
  name: ReadAllText(String)
  nameWithType: File.ReadAllText(String)
  fullName: System.IO.File.ReadAllText(String)
- uid: System.IO.File.ReadAllText(System.String,System.Text.Encoding)
  parent: System.IO.File
  isExternal: false
  name: ReadAllText(String,Encoding)
  nameWithType: File.ReadAllText(String,Encoding)
  fullName: System.IO.File.ReadAllText(String,Encoding)
- uid: System.IO.File.ReadLines(System.String)
  parent: System.IO.File
  isExternal: false
  name: ReadLines(String)
  nameWithType: File.ReadLines(String)
  fullName: System.IO.File.ReadLines(String)
- uid: System.IO.File.ReadLines(System.String,System.Text.Encoding)
  parent: System.IO.File
  isExternal: false
  name: ReadLines(String,Encoding)
  nameWithType: File.ReadLines(String,Encoding)
  fullName: System.IO.File.ReadLines(String,Encoding)
- uid: System.IO.File.Replace(System.String,System.String,System.String)
  parent: System.IO.File
  isExternal: false
  name: Replace(String,String,String)
  nameWithType: File.Replace(String,String,String)
  fullName: System.IO.File.Replace(String,String,String)
- uid: System.IO.File.Replace(System.String,System.String,System.String,System.Boolean)
  parent: System.IO.File
  isExternal: false
  name: Replace(String,String,String,Boolean)
  nameWithType: File.Replace(String,String,String,Boolean)
  fullName: System.IO.File.Replace(String,String,String,Boolean)
- uid: System.IO.File.SetAccessControl(System.String,System.Security.AccessControl.FileSecurity)
  parent: System.IO.File
  isExternal: false
  name: SetAccessControl(String,FileSecurity)
  nameWithType: File.SetAccessControl(String,FileSecurity)
  fullName: System.IO.File.SetAccessControl(String,FileSecurity)
- uid: System.IO.File.SetAttributes(System.String,System.IO.FileAttributes)
  parent: System.IO.File
  isExternal: false
  name: SetAttributes(String,FileAttributes)
  nameWithType: File.SetAttributes(String,FileAttributes)
  fullName: System.IO.File.SetAttributes(String,FileAttributes)
- uid: System.IO.File.SetCreationTime(System.String,System.DateTime)
  parent: System.IO.File
  isExternal: false
  name: SetCreationTime(String,DateTime)
  nameWithType: File.SetCreationTime(String,DateTime)
  fullName: System.IO.File.SetCreationTime(String,DateTime)
- uid: System.IO.File.SetCreationTimeUtc(System.String,System.DateTime)
  parent: System.IO.File
  isExternal: false
  name: SetCreationTimeUtc(String,DateTime)
  nameWithType: File.SetCreationTimeUtc(String,DateTime)
  fullName: System.IO.File.SetCreationTimeUtc(String,DateTime)
- uid: System.IO.File.SetLastAccessTime(System.String,System.DateTime)
  parent: System.IO.File
  isExternal: false
  name: SetLastAccessTime(String,DateTime)
  nameWithType: File.SetLastAccessTime(String,DateTime)
  fullName: System.IO.File.SetLastAccessTime(String,DateTime)
- uid: System.IO.File.SetLastAccessTimeUtc(System.String,System.DateTime)
  parent: System.IO.File
  isExternal: false
  name: SetLastAccessTimeUtc(String,DateTime)
  nameWithType: File.SetLastAccessTimeUtc(String,DateTime)
  fullName: System.IO.File.SetLastAccessTimeUtc(String,DateTime)
- uid: System.IO.File.SetLastWriteTime(System.String,System.DateTime)
  parent: System.IO.File
  isExternal: false
  name: SetLastWriteTime(String,DateTime)
  nameWithType: File.SetLastWriteTime(String,DateTime)
  fullName: System.IO.File.SetLastWriteTime(String,DateTime)
- uid: System.IO.File.SetLastWriteTimeUtc(System.String,System.DateTime)
  parent: System.IO.File
  isExternal: false
  name: SetLastWriteTimeUtc(String,DateTime)
  nameWithType: File.SetLastWriteTimeUtc(String,DateTime)
  fullName: System.IO.File.SetLastWriteTimeUtc(String,DateTime)
- uid: System.IO.File.WriteAllBytes(System.String,System.Byte[])
  parent: System.IO.File
  isExternal: false
  name: WriteAllBytes(String,Byte[])
  nameWithType: File.WriteAllBytes(String,Byte[])
  fullName: System.IO.File.WriteAllBytes(String,Byte[])
- uid: System.IO.File.WriteAllLines(System.String,System.Collections.Generic.IEnumerable{System.String})
  parent: System.IO.File
  isExternal: false
  name: WriteAllLines(String,IEnumerable<String>)
  nameWithType: File.WriteAllLines(String,IEnumerable<String>)
  fullName: System.IO.File.WriteAllLines(String,IEnumerable<String>)
- uid: System.IO.File.WriteAllLines(System.String,System.String[])
  parent: System.IO.File
  isExternal: false
  name: WriteAllLines(String,String[])
  nameWithType: File.WriteAllLines(String,String[])
  fullName: System.IO.File.WriteAllLines(String,String[])
- uid: System.IO.File.WriteAllLines(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)
  parent: System.IO.File
  isExternal: false
  name: WriteAllLines(String,IEnumerable<String>,Encoding)
  nameWithType: File.WriteAllLines(String,IEnumerable<String>,Encoding)
  fullName: System.IO.File.WriteAllLines(String,IEnumerable<String>,Encoding)
- uid: System.IO.File.WriteAllLines(System.String,System.String[],System.Text.Encoding)
  parent: System.IO.File
  isExternal: false
  name: WriteAllLines(String,String[],Encoding)
  nameWithType: File.WriteAllLines(String,String[],Encoding)
  fullName: System.IO.File.WriteAllLines(String,String[],Encoding)
- uid: System.IO.File.WriteAllText(System.String,System.String)
  parent: System.IO.File
  isExternal: false
  name: WriteAllText(String,String)
  nameWithType: File.WriteAllText(String,String)
  fullName: System.IO.File.WriteAllText(String,String)
- uid: System.IO.File.WriteAllText(System.String,System.String,System.Text.Encoding)
  parent: System.IO.File
  isExternal: false
  name: WriteAllText(String,String,Encoding)
  nameWithType: File.WriteAllText(String,String,Encoding)
  fullName: System.IO.File.WriteAllText(String,String,Encoding)
- uid: System.IO.File.AppendAllLines*
  parent: System.IO.File
  isExternal: false
  name: AppendAllLines
  nameWithType: File.AppendAllLines
- uid: System.IO.File.AppendAllText*
  parent: System.IO.File
  isExternal: false
  name: AppendAllText
  nameWithType: File.AppendAllText
- uid: System.IO.File.AppendText*
  parent: System.IO.File
  isExternal: false
  name: AppendText
  nameWithType: File.AppendText
- uid: System.IO.File.Copy*
  parent: System.IO.File
  isExternal: false
  name: Copy
  nameWithType: File.Copy
- uid: System.IO.File.Create*
  parent: System.IO.File
  isExternal: false
  name: Create
  nameWithType: File.Create
- uid: System.IO.File.CreateText*
  parent: System.IO.File
  isExternal: false
  name: CreateText
  nameWithType: File.CreateText
- uid: System.IO.File.Decrypt*
  parent: System.IO.File
  isExternal: false
  name: Decrypt
  nameWithType: File.Decrypt
- uid: System.IO.File.Delete*
  parent: System.IO.File
  isExternal: false
  name: Delete
  nameWithType: File.Delete
- uid: System.IO.File.Encrypt*
  parent: System.IO.File
  isExternal: false
  name: Encrypt
  nameWithType: File.Encrypt
- uid: System.IO.File.Exists*
  parent: System.IO.File
  isExternal: false
  name: Exists
  nameWithType: File.Exists
- uid: System.IO.File.GetAccessControl*
  parent: System.IO.File
  isExternal: false
  name: GetAccessControl
  nameWithType: File.GetAccessControl
- uid: System.IO.File.GetAttributes*
  parent: System.IO.File
  isExternal: false
  name: GetAttributes
  nameWithType: File.GetAttributes
- uid: System.IO.File.GetCreationTime*
  parent: System.IO.File
  isExternal: false
  name: GetCreationTime
  nameWithType: File.GetCreationTime
- uid: System.IO.File.GetCreationTimeUtc*
  parent: System.IO.File
  isExternal: false
  name: GetCreationTimeUtc
  nameWithType: File.GetCreationTimeUtc
- uid: System.IO.File.GetLastAccessTime*
  parent: System.IO.File
  isExternal: false
  name: GetLastAccessTime
  nameWithType: File.GetLastAccessTime
- uid: System.IO.File.GetLastAccessTimeUtc*
  parent: System.IO.File
  isExternal: false
  name: GetLastAccessTimeUtc
  nameWithType: File.GetLastAccessTimeUtc
- uid: System.IO.File.GetLastWriteTime*
  parent: System.IO.File
  isExternal: false
  name: GetLastWriteTime
  nameWithType: File.GetLastWriteTime
- uid: System.IO.File.GetLastWriteTimeUtc*
  parent: System.IO.File
  isExternal: false
  name: GetLastWriteTimeUtc
  nameWithType: File.GetLastWriteTimeUtc
- uid: System.IO.File.Move*
  parent: System.IO.File
  isExternal: false
  name: Move
  nameWithType: File.Move
- uid: System.IO.File.Open*
  parent: System.IO.File
  isExternal: false
  name: Open
  nameWithType: File.Open
- uid: System.IO.File.OpenRead*
  parent: System.IO.File
  isExternal: false
  name: OpenRead
  nameWithType: File.OpenRead
- uid: System.IO.File.OpenText*
  parent: System.IO.File
  isExternal: false
  name: OpenText
  nameWithType: File.OpenText
- uid: System.IO.File.OpenWrite*
  parent: System.IO.File
  isExternal: false
  name: OpenWrite
  nameWithType: File.OpenWrite
- uid: System.IO.File.ReadAllBytes*
  parent: System.IO.File
  isExternal: false
  name: ReadAllBytes
  nameWithType: File.ReadAllBytes
- uid: System.IO.File.ReadAllLines*
  parent: System.IO.File
  isExternal: false
  name: ReadAllLines
  nameWithType: File.ReadAllLines
- uid: System.IO.File.ReadAllText*
  parent: System.IO.File
  isExternal: false
  name: ReadAllText
  nameWithType: File.ReadAllText
- uid: System.IO.File.ReadLines*
  parent: System.IO.File
  isExternal: false
  name: ReadLines
  nameWithType: File.ReadLines
- uid: System.IO.File.Replace*
  parent: System.IO.File
  isExternal: false
  name: Replace
  nameWithType: File.Replace
- uid: System.IO.File.SetAccessControl*
  parent: System.IO.File
  isExternal: false
  name: SetAccessControl
  nameWithType: File.SetAccessControl
- uid: System.IO.File.SetAttributes*
  parent: System.IO.File
  isExternal: false
  name: SetAttributes
  nameWithType: File.SetAttributes
- uid: System.IO.File.SetCreationTime*
  parent: System.IO.File
  isExternal: false
  name: SetCreationTime
  nameWithType: File.SetCreationTime
- uid: System.IO.File.SetCreationTimeUtc*
  parent: System.IO.File
  isExternal: false
  name: SetCreationTimeUtc
  nameWithType: File.SetCreationTimeUtc
- uid: System.IO.File.SetLastAccessTime*
  parent: System.IO.File
  isExternal: false
  name: SetLastAccessTime
  nameWithType: File.SetLastAccessTime
- uid: System.IO.File.SetLastAccessTimeUtc*
  parent: System.IO.File
  isExternal: false
  name: SetLastAccessTimeUtc
  nameWithType: File.SetLastAccessTimeUtc
- uid: System.IO.File.SetLastWriteTime*
  parent: System.IO.File
  isExternal: false
  name: SetLastWriteTime
  nameWithType: File.SetLastWriteTime
- uid: System.IO.File.SetLastWriteTimeUtc*
  parent: System.IO.File
  isExternal: false
  name: SetLastWriteTimeUtc
  nameWithType: File.SetLastWriteTimeUtc
- uid: System.IO.File.WriteAllBytes*
  parent: System.IO.File
  isExternal: false
  name: WriteAllBytes
  nameWithType: File.WriteAllBytes
- uid: System.IO.File.WriteAllLines*
  parent: System.IO.File
  isExternal: false
  name: WriteAllLines
  nameWithType: File.WriteAllLines
- uid: System.IO.File.WriteAllText*
  parent: System.IO.File
  isExternal: false
  name: WriteAllText
  nameWithType: File.WriteAllText
