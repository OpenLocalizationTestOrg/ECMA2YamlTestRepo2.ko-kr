### YamlMime:ManagedReference
items:
- uid: System.Configuration.SettingsProvider
  id: SettingsProvider
  children:
  - System.Configuration.SettingsProvider.#ctor
  - System.Configuration.SettingsProvider.ApplicationName
  - System.Configuration.SettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)
  - System.Configuration.SettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)
  langs:
  - csharp
  name: SettingsProvider
  nameWithType: SettingsProvider
  fullName: System.Configuration.SettingsProvider
  type: Class
  summary: "응용 프로그램 설정 아키텍처에서 사용자 지정 설정 공급자를 파생 하기 위한 기본 클래스 역할을 합니다."
  remarks: "설정 공급자 응용 프로그램 설정 아키텍처에서 사용 되는 구성 데이터를 저장 하기 위한 메커니즘을 정의 합니다. 단일 기본 설정 공급자를 포함 하는.NET Framework <xref:System.Configuration.LocalFileSettingsProvider>, 로컬 파일 시스템에 구성 데이터를 저장 하는.</xref:System.Configuration.LocalFileSettingsProvider> 그러나 추상 SettingsProvider 클래스에서에서 파생 하 여 대체 저장소 메커니즘을 만들 수 있습니다. 래퍼 클래스를 사용 하는 공급자 <xref:System.Configuration.SettingsProviderAttribute>.</xref:System.Configuration.SettingsProviderAttribute> 래퍼 클래스에 의해 결정 됩니다. 이 특성을 제공 하지 않으면 기본값인 경우 <xref:System.Configuration.LocalFileSettingsProvider>, 사용 됩니다.</xref:System.Configuration.LocalFileSettingsProvider>       최소한 사용자 지정 설정 공급자를 만들 때이 클래스의 세 가지 방법에 대 한 구현을 제공 해야: <xref:System.Configuration.SettingsProvider.GetPropertyValues%2A> <xref:System.Configuration.SettingsProvider.SetPropertyValues%2A> <xref:System.Configuration.SettingsProvider.ApplicationName%2A>.</xref:System.Configuration.SettingsProvider.ApplicationName%2A> 하 고</xref:System.Configuration.SettingsProvider.SetPropertyValues%2A> ,</xref:System.Configuration.SettingsProvider.GetPropertyValues%2A>       클라이언트 응용 프로그램에 추가할 수 있습니다 더 표준화 된 기능 사용자 지정 공급자를 구현 하 여는 <xref:System.Configuration.IApplicationSettingsProvider>인터페이스.</xref:System.Configuration.IApplicationSettingsProvider> 이 인터페이스 메서드를에 반영 된 <xref:System.Configuration.ApplicationSettingsBase>클래스를 주로 지원 버전 관리를 통해.</xref:System.Configuration.ApplicationSettingsBase>       일반적으로 단일 인스턴스가 저장소 리소스 경합 방지 하려면 되도록 설정 공급자를 디자인 해야 합니다. 공급자는 단일 응용 프로그램 도메인의 여러 래퍼 인스턴스에 또는 서로 다른 도메인에 여러 응용 프로그램에서 동시에 호출할 수 있습니다 때문에 스레드로부터 안전 이어야 합니다.       설정 공급자에 최소한 특성을 인식 해야-<xref:System.Configuration.ApplicationScopedSettingAttribute>, <xref:System.Configuration.UserScopedSettingAttribute>, 및 <xref:System.Configuration.DefaultSettingValueAttribute>.</xref:System.Configuration.DefaultSettingValueAttribute> </xref:System.Configuration.UserScopedSettingAttribute> </xref:System.Configuration.ApplicationScopedSettingAttribute> 응용 프로그램 설정에 적용할 수 있는 특성의 전체 목록을 보려면 [응용 프로그램 설정 특성](~/add/includes/ajax-current-ext-md.md)합니다. 사용자 지정 설정 공급자는 다음과 같이 설정 속성에 적용 된 특성을 확인 합니다: 1입니다.  공급자는 특성 사용 권한에 포함 된 요청을 수행할 수, 하는 경우 분명을 수행 해야 합니다.      2.  공급자는 요청을 수행할 수 없습니다, 자동으로 무시 해야 것입니다.      3.  둘 이상의 속성 충돌; 하는 경우 예를 들어 두 <xref:System.Configuration.ApplicationScopedSettingAttribute> <xref:System.Configuration.UserScopedSettingAttribute>공급자에 <xref:System.Configuration.ConfigurationException>.</xref:System.Configuration.ConfigurationException> throw 해야</xref:System.Configuration.UserScopedSettingAttribute> ;</xref:System.Configuration.ApplicationScopedSettingAttribute> 로 데코레이팅 되 고 속성"
  syntax:
    content: 'public abstract class SettingsProvider : System.Configuration.Provider.ProviderBase'
  inheritance:
  - System.Object
  - System.Configuration.Provider.ProviderBase
  implements: []
  inheritedMembers:
  - System.Configuration.Provider.ProviderBase.Description
  - System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  - System.Configuration.Provider.ProviderBase.Name
  platform:
  - net462
- uid: System.Configuration.SettingsProvider.#ctor
  id: '#ctor'
  parent: System.Configuration.SettingsProvider
  langs:
  - csharp
  name: SettingsProvider()
  nameWithType: SettingsProvider.SettingsProvider()
  fullName: System.Configuration.SettingsProvider.SettingsProvider()
  type: Constructor
  assemblies:
  - System
  namespace: System.Configuration
  summary: "인스턴스를 초기화는 <xref href=&quot;System.Configuration.SettingsProvider&quot;> </xref> 클래스입니다."
  remarks: "이 추상 클래스에 대 한이 기본 보호 된 생성자입니다. 파생 된 사용자 지정 설정 공급자 때문에 명시적 생성자를 제공 하지 않아도 됩니다는 <xref:System.Configuration.Provider.ProviderBase.Initialize%2A>메서드는 일반적으로 모든 초기화 수행 합니다.</xref:System.Configuration.Provider.ProviderBase.Initialize%2A>       클라이언트 코드 일반적으로 직접 인스턴스화하지 않습니다 설정 공급자입니다. 대신, 다음 절차는 특정 설정 속성에 대 한 설정 공급자를 찾을 수 사용: 1입니다.  <xref:System.ComponentModel.Component.GetService%2A>현재 <xref:System.ComponentModel.Component>또는 <xref:System.ComponentModel.ISite>현재 <xref:System.Configuration.ISettingsProviderService>.</xref:System.Configuration.ISettingsProviderService> 에 대 한 참조를 반환 하</xref:System.ComponentModel.ISite> </xref:System.ComponentModel.Component> 는 메서드</xref:System.ComponentModel.Component.GetService%2A> 호출      2.  호출 된 <xref:System.Configuration.ISettingsProviderService.GetSettingsProvider%2A>의 메서드는 <xref:System.Configuration.ISettingsProviderService>설정 공급자를 반환할 첫 번째 단계에서 검색 합니다.</xref:System.Configuration.ISettingsProviderService> </xref:System.Configuration.ISettingsProviderService.GetSettingsProvider%2A>"
  syntax:
    content: protected SettingsProvider ();
    parameters: []
  overload: System.Configuration.SettingsProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SettingsProvider.ApplicationName
  id: ApplicationName
  parent: System.Configuration.SettingsProvider
  langs:
  - csharp
  name: ApplicationName
  nameWithType: SettingsProvider.ApplicationName
  fullName: System.Configuration.SettingsProvider.ApplicationName
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "현재 실행 중인 응용 프로그램의 이름을 가져오거나 설정 합니다."
  remarks: "응용 프로그램 이름 및 <xref:System.Configuration.Provider.ProviderBase.Name%2A>속성 마찬가지로 서로 다른 응용 프로그램에서 속성을 명명 된 설정 명확히 구분 하는 데 도움이 됩니다.</xref:System.Configuration.Provider.ProviderBase.Name%2A>"
  syntax:
    content: public abstract string ApplicationName { get; set; }
    return:
      type: System.String
      description: "A <xref:System.String>포함 하지 않는 전체 경로 또는 확장, 예를 들어, 응용 프로그램의 약식된 이름이 포함 된 `SimpleAppSettings`.</xref:System.String>"
  overload: System.Configuration.SettingsProvider.ApplicationName*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)
  id: GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)
  parent: System.Configuration.SettingsProvider
  langs:
  - csharp
  name: GetPropertyValues(SettingsContext,SettingsPropertyCollection)
  nameWithType: SettingsProvider.GetPropertyValues(SettingsContext,SettingsPropertyCollection)
  fullName: System.Configuration.SettingsProvider.GetPropertyValues(SettingsContext,SettingsPropertyCollection)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "지정 된 응용 프로그램 인스턴스 및 설정 속성 그룹에 대 한 속성 값 설정의 컬렉션을 반환합니다."
  remarks: "특수 설정을 처리 하기 GetPropertyValues 메서드를 구현 되어야 합니다, 표시 된 <xref:System.Configuration.SpecialSettingAttribute>뿐만 아니라 응용 프로그램 및 사용자 설정 조정 합니다.</xref:System.Configuration.SpecialSettingAttribute>"
  syntax:
    content: public abstract System.Configuration.SettingsPropertyValueCollection GetPropertyValues (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyCollection collection);
    parameters:
    - id: context
      type: System.Configuration.SettingsContext
      description: "A <xref href=&quot;System.Configuration.SettingsContext&quot;> </xref> 현재 응용 프로그램 사용을 설명 합니다."
    - id: collection
      type: System.Configuration.SettingsPropertyCollection
      description: "A <xref href=&quot;System.Configuration.SettingsPropertyCollection&quot;> </xref> 를 검색할 수 있는 값은 설정 속성 그룹을 포함 하 합니다."
    return:
      type: System.Configuration.SettingsPropertyValueCollection
      description: "A <xref href=&quot;System.Configuration.SettingsPropertyValueCollection&quot;> </xref> 지정 된 설정 속성 그룹에 대 한 값이 들어 있는입니다."
  overload: System.Configuration.SettingsProvider.GetPropertyValues*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)
  id: SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)
  parent: System.Configuration.SettingsProvider
  langs:
  - csharp
  name: SetPropertyValues(SettingsContext,SettingsPropertyValueCollection)
  nameWithType: SettingsProvider.SetPropertyValues(SettingsContext,SettingsPropertyValueCollection)
  fullName: System.Configuration.SettingsProvider.SetPropertyValues(SettingsContext,SettingsPropertyValueCollection)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "속성 설정의 지정된 된 그룹의 값을 설정합니다."
  remarks: "<xref:System.Configuration.ApplicationSettingsBase>포함 된 <xref:System.Configuration.ApplicationSettingsBase.Save%2A>메서드 설정 속성의 모든 값을 유지 하기 위해 호출 됩니다.</xref:System.Configuration.ApplicationSettingsBase.Save%2A></xref:System.Configuration.ApplicationSettingsBase> 이 메서드는 모든 설정 공급자 설정 속성, 연관 및 SetPropertyValues 메서드 각각에 대 한 호출을 통해 열거 <xref:System.Configuration.SettingsProvider>실제 serialization 작업을 수행할 수 있습니다.</xref:System.Configuration.SettingsProvider>       보안을 염두 SetPropertyValues 메서드를 구현 해야 합니다: 코드를 응용 프로그램 설정을 업데이트할 수 있어야 완전히 신뢰할 수 있는-합니다. 부분적으로 신뢰할 수 있는 코드가 사용자 응용 프로그램 설정에만 업데이트 되도록 허용 되어야 합니다. 신뢰할 수 없는 코드는 일반적으로 응용 프로그램 설정을 업데이트할 수 없습니다.      -사용 할당량을 부분적으로 신뢰할 수 있는 응용 프로그램에서 리소스 공격 으로부터 보호 하기 위해 고려해 야 합니다."
  syntax:
    content: public abstract void SetPropertyValues (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyValueCollection collection);
    parameters:
    - id: context
      type: System.Configuration.SettingsContext
      description: "A <xref href=&quot;System.Configuration.SettingsContext&quot;> </xref> 현재 응용 프로그램 사용을 설명 합니다."
    - id: collection
      type: System.Configuration.SettingsPropertyValueCollection
      description: "A <xref href=&quot;System.Configuration.SettingsPropertyValueCollection&quot;> </xref> 설정할 속성 설정의 그룹을 표시 합니다."
  overload: System.Configuration.SettingsProvider.SetPropertyValues*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.Provider.ProviderBase
  isExternal: false
  name: System.Configuration.Provider.ProviderBase
- uid: System.Configuration.SettingsProvider.#ctor
  parent: System.Configuration.SettingsProvider
  isExternal: false
  name: SettingsProvider()
  nameWithType: SettingsProvider.SettingsProvider()
  fullName: System.Configuration.SettingsProvider.SettingsProvider()
- uid: System.Configuration.SettingsProvider.ApplicationName
  parent: System.Configuration.SettingsProvider
  isExternal: false
  name: ApplicationName
  nameWithType: SettingsProvider.ApplicationName
  fullName: System.Configuration.SettingsProvider.ApplicationName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Configuration.SettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)
  parent: System.Configuration.SettingsProvider
  isExternal: false
  name: GetPropertyValues(SettingsContext,SettingsPropertyCollection)
  nameWithType: SettingsProvider.GetPropertyValues(SettingsContext,SettingsPropertyCollection)
  fullName: System.Configuration.SettingsProvider.GetPropertyValues(SettingsContext,SettingsPropertyCollection)
- uid: System.Configuration.SettingsPropertyValueCollection
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyValueCollection
  nameWithType: SettingsPropertyValueCollection
  fullName: System.Configuration.SettingsPropertyValueCollection
- uid: System.Configuration.SettingsContext
  parent: System.Configuration
  isExternal: false
  name: SettingsContext
  nameWithType: SettingsContext
  fullName: System.Configuration.SettingsContext
- uid: System.Configuration.SettingsPropertyCollection
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyCollection
  nameWithType: SettingsPropertyCollection
  fullName: System.Configuration.SettingsPropertyCollection
- uid: System.Configuration.SettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)
  parent: System.Configuration.SettingsProvider
  isExternal: false
  name: SetPropertyValues(SettingsContext,SettingsPropertyValueCollection)
  nameWithType: SettingsProvider.SetPropertyValues(SettingsContext,SettingsPropertyValueCollection)
  fullName: System.Configuration.SettingsProvider.SetPropertyValues(SettingsContext,SettingsPropertyValueCollection)
- uid: System.Configuration.SettingsProvider.#ctor*
  parent: System.Configuration.SettingsProvider
  isExternal: false
  name: SettingsProvider
  nameWithType: SettingsProvider.SettingsProvider
- uid: System.Configuration.SettingsProvider.ApplicationName*
  parent: System.Configuration.SettingsProvider
  isExternal: false
  name: ApplicationName
  nameWithType: SettingsProvider.ApplicationName
- uid: System.Configuration.SettingsProvider.GetPropertyValues*
  parent: System.Configuration.SettingsProvider
  isExternal: false
  name: GetPropertyValues
  nameWithType: SettingsProvider.GetPropertyValues
- uid: System.Configuration.SettingsProvider.SetPropertyValues*
  parent: System.Configuration.SettingsProvider
  isExternal: false
  name: SetPropertyValues
  nameWithType: SettingsProvider.SetPropertyValues
