### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.SiteMapPath
  id: SiteMapPath
  children:
  - System.Web.UI.WebControls.SiteMapPath.#ctor
  - System.Web.UI.WebControls.SiteMapPath.CreateChildControls
  - System.Web.UI.WebControls.SiteMapPath.CreateControlHierarchy
  - System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle
  - System.Web.UI.WebControls.SiteMapPath.CurrentNodeTemplate
  - System.Web.UI.WebControls.SiteMapPath.DataBind
  - System.Web.UI.WebControls.SiteMapPath.InitializeItem(System.Web.UI.WebControls.SiteMapNodeItem)
  - System.Web.UI.WebControls.SiteMapPath.ItemCreated
  - System.Web.UI.WebControls.SiteMapPath.ItemDataBound
  - System.Web.UI.WebControls.SiteMapPath.LoadViewState(System.Object)
  - System.Web.UI.WebControls.SiteMapPath.NodeStyle
  - System.Web.UI.WebControls.SiteMapPath.NodeTemplate
  - System.Web.UI.WebControls.SiteMapPath.OnDataBinding(System.EventArgs)
  - System.Web.UI.WebControls.SiteMapPath.OnItemCreated(System.Web.UI.WebControls.SiteMapNodeItemEventArgs)
  - System.Web.UI.WebControls.SiteMapPath.OnItemDataBound(System.Web.UI.WebControls.SiteMapNodeItemEventArgs)
  - System.Web.UI.WebControls.SiteMapPath.ParentLevelsDisplayed
  - System.Web.UI.WebControls.SiteMapPath.PathDirection
  - System.Web.UI.WebControls.SiteMapPath.PathSeparator
  - System.Web.UI.WebControls.SiteMapPath.PathSeparatorStyle
  - System.Web.UI.WebControls.SiteMapPath.PathSeparatorTemplate
  - System.Web.UI.WebControls.SiteMapPath.Provider
  - System.Web.UI.WebControls.SiteMapPath.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.SiteMapPath.RenderContents(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.SiteMapPath.RenderCurrentNodeAsLink
  - System.Web.UI.WebControls.SiteMapPath.RootNodeStyle
  - System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate
  - System.Web.UI.WebControls.SiteMapPath.SaveViewState
  - System.Web.UI.WebControls.SiteMapPath.ShowToolTips
  - System.Web.UI.WebControls.SiteMapPath.SiteMapProvider
  - System.Web.UI.WebControls.SiteMapPath.SkipLinkText
  - System.Web.UI.WebControls.SiteMapPath.TrackViewState
  langs:
  - csharp
  name: SiteMapPath
  nameWithType: SiteMapPath
  fullName: System.Web.UI.WebControls.SiteMapPath
  type: Class
  summary: "사용자가 보다 쉽게 페이지 공간을 적게 차지 하는 동안 웹 사이트를 탐색할 수 있도록 하는 텍스트 또는 이미지 하이퍼링크 집합이 표시 됩니다."
  remarks: "이 항목의:- [소개](#introduction)      -   [노드](#nodes)      -   [노드 모양](#node_appearance)      -   [이벤트](#events)      -   [SiteMapPath 컨트롤 사용자 지정](#customizing_the_sitemappath_control)      -   [내게 필요한 옵션](#accessibility)      -   [선언적 구문](#declarative_syntax) <a name=&quot;introduction&quot;> </a> # # 소개 The SiteMapPath 컨트롤에서 제공 하는 데이터를 반영 하는 사이트 탐색 컨트롤은는 <xref:System.Web.SiteMap>개체입니다.</xref:System.Web.SiteMap>       사이트를 쉽게 탐색할 수 있는 공간 절약 방법을 제공 하 고 현재 표시 된 인 사이트 내에 대 한 참조 지점 역할을 합니다. 이 종류의 컨트롤은 현재 위치에서 페이지의 계층 구조를 이스케이프를 제공 하는 하이퍼링크 페이지 이름의 계층적 경로 표시 하기 때문에 일반적 breadcrumb 또는 사람의 의도 라고 합니다. <xref:System.Web.UI.WebControls.SiteMapDataSource>.</xref:System.Web.UI.WebControls.SiteMapDataSource> 있 깊은 계층 페이지 구조는 사이트는 SiteMapPath 유용는 <xref:System.Web.UI.WebControls.TreeView>또는 <xref:System.Web.UI.WebControls.Menu>페이지에 너무 많은 공간이 필요할 수 있습니다.</xref:System.Web.UI.WebControls.Menu> </xref:System.Web.UI.WebControls.TreeView>       SiteMapPath 컨트롤 웹 사이트의 사이트 맵 데이터와 직접 작동합니다. 표시 되지 않는 페이지에서 사이트 맵에서을 사용할 경우 표시 되지 않습니다. 사이트 맵에 대 한 자세한 내용은 참조 [ASP.NET 사이트 탐색](~/add/includes/ajax-current-ext-md.md)합니다.      <a name=&quot;nodes&quot;></a># # 노드의 노드는 SiteMapPath 이루어집니다. 경로 있는 각 요소 노드 라고 하며으로 표시 됩니다는 <xref:System.Web.UI.WebControls.SiteMapNodeItem>개체입니다.</xref:System.Web.UI.WebControls.SiteMapNodeItem> 경로 고정 하는 기본 계층 구조 트리를 나타내는 노드 루트 노드라고 합니다. 현재 표시 된 페이지를 나타내는 노드는 현재 노드입니다. 현재 노드와 루트 노드 사이 있는 다른 모든 노드는 부모 노드입니다. 다음 표에서 세 개의 다른 노드 형식에 설명 합니다.      | 노드 형식 | 설명 |   |---------------|-----------------|   | 루트 | 노드 집합을 계층적 고정 하는 노드입니다. |   | 부모 | 하나 이상의 자식 노드가 노드 받지 않는 현재 노드. |   | 현재 | 현재 표시 된 페이지를 나타내는 노드입니다. |      <a name=&quot;node_appearance&quot;> </a> # # 노드 모양 각 노드는 SiteMapPath 여 표시 되는 한 <xref:System.Web.UI.WebControls.HyperLink>또는 <xref:System.Web.UI.WebControls.Literal>컨트롤 템플릿을 적용 하거나 스타일을 수 있습니다.</xref:System.Web.UI.WebControls.Literal> </xref:System.Web.UI.WebControls.HyperLink> 템플릿 및 스타일 노드에 두 개의 우선 순위 규칙에 따라 적용 됩니다.-노드에 대해 정의 된 스타일에 우선 템플릿을 노드에 대해 정의 된 경우.      -템플릿과 스타일 노드 유형에 관련 된 일반 서식 파일 및 모든 노드에 대해 정의 된 스타일을 재정의 합니다.       <xref:System.Web.UI.WebControls.SiteMapPath.NodeStyle%2A>및 <xref:System.Web.UI.WebControls.SiteMapPath.NodeTemplate%2A>속성 노드 형식에 관계 없이 모든 노드에 적용 됩니다.</xref:System.Web.UI.WebControls.SiteMapPath.NodeTemplate%2A> </xref:System.Web.UI.WebControls.SiteMapPath.NodeStyle%2A> 이러한 두 속성을 정의한 경우 속성이 <xref:System.Web.UI.WebControls.SiteMapPath.NodeTemplate%2A>우선적으로 적용 합니다.</xref:System.Web.UI.WebControls.SiteMapPath.NodeTemplate%2A>       <xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeTemplate%2A>및 <xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A>속성이 현재 표시 된 페이지를 나타내는 노드에 적용 됩니다.</xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A> </xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeTemplate%2A> 경우는 <xref:System.Web.UI.WebControls.SiteMapPath.NodeTemplate%2A>외에 정의 <xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeTemplate%2A>, 무시 됩니다.</xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeTemplate%2A> </xref:System.Web.UI.WebControls.SiteMapPath.NodeTemplate%2A> 경우는 <xref:System.Web.UI.WebControls.SiteMapPath.NodeStyle%2A>외에 정의 <xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A>과 병합 되어는 <xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A>병합 된 스타일을 만들려면.</xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A> </xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A> </xref:System.Web.UI.WebControls.SiteMapPath.NodeStyle%2A> 모든 요소를 사용 하는이 스타일은 <xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A>의 <xref:System.Web.UI.WebControls.SiteMapPath.NodeStyle%2A> <xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A>.</xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A> 와 충돌 하지 않는</xref:System.Web.UI.WebControls.SiteMapPath.NodeStyle%2A> 추가 요소</xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A>       <xref:System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate%2A>및 <xref:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle%2A>속성이 사이트 탐색 계층의 루트를 나타내는 노드에 적용 됩니다.</xref:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle%2A> </xref:System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate%2A> 경우는 <xref:System.Web.UI.WebControls.SiteMapPath.NodeTemplate%2A>외에 정의 <xref:System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate%2A>, 무시 됩니다.</xref:System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate%2A> </xref:System.Web.UI.WebControls.SiteMapPath.NodeTemplate%2A> 경우는 <xref:System.Web.UI.WebControls.SiteMapPath.NodeStyle%2A>외에 정의 <xref:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle%2A>과 병합 되어는 <xref:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle%2A>병합 된 스타일을 만들려면.</xref:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle%2A> </xref:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle%2A> </xref:System.Web.UI.WebControls.SiteMapPath.NodeStyle%2A> 이 스타일의 모든 요소를 사용 하 여 <xref:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle%2A>의 <xref:System.Web.UI.WebControls.SiteMapPath.NodeStyle%2A> <xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A>.</xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A> 충돌 하지 않는</xref:System.Web.UI.WebControls.SiteMapPath.NodeStyle%2A> 추가 요소</xref:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle%2A> 마지막으로, 현재 표시 된 페이지는 <xref:System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate%2A> <xref:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle%2A>대신 <xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeTemplate%2A>또는 <xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A>.</xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A> </xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeTemplate%2A> 사용 되</xref:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle%2A> 고</xref:System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate%2A> 사이트의 루트 페이지인 경우       SiteMapPath 컨트롤이로 식별 되는 사이트 맵 공급자를 사용 하는 <xref:System.Web.UI.WebControls.SiteMapPath.SiteMapProvider%2A>사이트 탐색 정보에 대 한 데이터 소스로 속성.</xref:System.Web.UI.WebControls.SiteMapPath.SiteMapProvider%2A> 기본 공급자에서 식별 된 사이트에 대 한 사용 없는 공급자를 지정 하는 경우는 <xref:System.Web.SiteMap.Provider%2A?displayProperty=fullName>속성.</xref:System.Web.SiteMap.Provider%2A?displayProperty=fullName> 일반적으로이 asp.net, <xref:System.Web.XmlSiteMapProvider>.</xref:System.Web.XmlSiteMapProvider> 기본 사이트 맵 공급자의 인스턴스 Throw SiteMapPath 컨트롤이 사이트 내에서 사용 하는 경우 없는 사이트 맵 공급자가 구성 된 <xref:System.Web.HttpException>예외.</xref:System.Web.HttpException>      <a name=&quot;events&quot;></a># # 이벤트 SiteMapPath 컨트롤 프로그래밍할 수 있는 이벤트도 제공 합니다. 그러면 이벤트가 발생할 때마다 사용자 지정 루틴을 실행할 수 있습니다. 다음 표에서 SiteMapPath 컨트롤에서 지 원하는 이벤트를 나열 합니다.      | 이벤트 | 설명 |   |-----------|-----------------|   | <xref:System.Web.UI.WebControls.SiteMapPath.ItemCreated>| SiteMapPath 컨트롤 먼저는 <xref:System.Web.UI.WebControls.SiteMapNodeItem>만들고는 <xref:System.Web.SiteMapNode>와 연결 하는 경우에 발생 합니다. |   | <xref:System.Web.UI.WebControls.SiteMapPath.ItemDataBound>| <xref:System.Web.UI.WebControls.SiteMapNodeItem>는 <xref:System.Web.SiteMapNode>에 포함 된 사이트 맵 데이터에 바인딩되어 있을 때 발생 합니다. |      <a name=&quot;customizing_the_sitemappath_control&quot;> </a> # # SiteMapPath 재정의에서 파생 되는 SiteMapPath 컨트롤 클래스를 사용자 지정할는 <xref:System.Web.UI.WebControls.SiteMapPath.InitializeItem%2A>사용자 지정 하는 메서드는 <xref:System.Web.UI.WebControls.SiteMapNodeItem>탐색 컨트롤에 포함 된 컨트롤.</xref:System.Web.UI.WebControls.SiteMapNodeItem> </xref:System.Web.UI.WebControls.SiteMapPath.InitializeItem%2A> </xref:System.Web.SiteMapNode> </xref:System.Web.UI.WebControls.SiteMapNodeItem> </xref:System.Web.UI.WebControls.SiteMapPath.ItemDataBound> </xref:System.Web.SiteMapNode> </xref:System.Web.UI.WebControls.SiteMapNodeItem> </xref:System.Web.UI.WebControls.SiteMapPath.ItemCreated> 한 방식으로 제어 <xref:System.Web.UI.WebControls.SiteMapNodeItem>개체가 생성 되 고 파생된 클래스 재정의 SiteMapPath에 추가 된 <xref:System.Web.UI.WebControls.SiteMapPath.CreateControlHierarchy%2A>메서드.</xref:System.Web.UI.WebControls.SiteMapPath.CreateControlHierarchy%2A> </xref:System.Web.UI.WebControls.SiteMapNodeItem>      <a name=&quot;accessibility&quot;></a># # 내게 필요한 옵션 표준을 준수 하는 태그를 생성 되도록이 컨트롤을 구성 하는 방법에 대 한 정보에 대 한 내게 필요한 옵션 참고 [Visual Studio 및 ASP.NET의 내게 필요한 옵션](~/add/includes/ajax-current-ext-md.md) 및 [ASP.NET 컨트롤 및 내게 필요한 옵션](~/add/includes/ajax-current-ext-md.md)합니다.      <a name=&quot;declarative_syntax&quot;></a># # 선언적 구문```   <asp:SiteMapPath       AccessKey=&quot;string&quot;       BackColor=&quot;color name|#dddddd&quot;       BorderColor=&quot;color name|#dddddd&quot;       BorderStyle=&quot;NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|           Inset|Outset&quot;       BorderWidth=&quot;size&quot;       CssClass=&quot;string&quot;       Enabled=&quot;True|False&quot;       EnableTheming=&quot;True|False&quot;       EnableViewState=&quot;True|False&quot;       Font-Bold=&quot;True|False&quot;       Font-Italic=&quot;True|False&quot;       Font-Names=&quot;string&quot;       Font-Overline=&quot;True|False&quot;       Font-Size=&quot;string|Smaller|Larger|XX-Small|X-Small|Small|Medium|           Large|X-Large|XX-Large&quot;       Font-Strikeout=&quot;True|False&quot;       Font-Underline=&quot;True|False&quot;       ForeColor=&quot;color name|#dddddd&quot;       Height=&quot;size&quot;       ID=&quot;string&quot;       OnDataBinding=&quot;DataBinding event handler&quot;       OnDisposed=&quot;Disposed event handler&quot;       OnInit=&quot;Init event handler&quot;       OnItemCreated=&quot;ItemCreated event handler&quot;       OnItemDataBound=&quot;ItemDataBound event handler&quot;       OnLoad=&quot;Load event handler&quot;       OnPreRender=&quot;PreRender event handler&quot;       OnUnload=&quot;Unload event handler&quot;       ParentLevelsDisplayed=&quot;integer&quot;       PathDirection=&quot;RootToCurrent|CurrentToRoot&quot;       PathSeparator=&quot;string&quot;       RenderCurrentNodeAsLink=&quot;True|False&quot;       runat=&quot;server&quot;       ShowToolTips=&quot;True|False&quot;       SiteMapProvider=&quot;string&quot;       SkinID=&quot;string&quot;       SkipLinkText=&quot;string&quot;       Style=&quot;string&quot;       TabIndex=&quot;integer&quot;       ToolTip=&quot;string&quot;       Visible=&quot;True|False&quot;       Width=&quot;size&quot;   >           <CurrentNodeStyle />           <CurrentNodeTemplate>               <!-- child controls -->           </CurrentNodeTemplate>           <NodeStyle />           <NodeTemplate>               <!-- child controls -->           </NodeTemplate>           <PathSeparatorStyle />           <PathSeparatorTemplate>               <!-- child controls -->           </PathSeparatorTemplate>           <RootNodeStyle />           <RootNodeTemplate>               <!-- child controls -->           </RootNodeTemplate>   </asp:SiteMapPath>   ```"
  example:
  - "The following code example uses a SiteMapPath control declaratively in a Web Forms page. This example demonstrates some of the rules of precedence that govern the order with which templates and styles are applied to SiteMapPath nodes.  \n  \n [!code-vb[System.Web.UI.WebControls.NavigationPath_decl_5#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_394_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.NavigationPath_decl_5#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_394_1.aspx)]  \n  \n The previous example uses the default site map provider and a Web.sitemap file with the following structure.  \n  \n```  \n<siteMap>  \n  <siteMapNode title=\"WebForm1\" description=\"WebForm1\" url=\"WebForm1.aspx\" >  \n    <siteMapNode title=\"WebForm2\" description=\"WebForm2\" url=\"WebForm2.aspx\"/>  \n  </siteMapNode>  \n</siteMap>  \n```  \n  \n The following code example demonstrates extends the SiteMapPath control and adds new functionality to it by overriding the <xref:System.Web.UI.WebControls.SiteMapPath.InitializeItem%2A> method. The `DropDownSiteMapPath` control adds a <xref:System.Web.UI.WebControls.DropDownList> after the current node, to enable easy navigation to pages that are child nodes of the current page. This example demonstrates how to work with <xref:System.Web.UI.WebControls.SiteMapNodeItem> objects, including checking their <xref:System.Web.UI.WebControls.SiteMapNodeItemType> and calling the <xref:System.Web.UI.WebControls.SiteMapPath.OnItemCreated%2A> method after the items are created.  \n  \n [!code-vb[Urtue.Samples.Alexkr.DropDownNavigationPath_1#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_394_2.vb)]\n [!code-cs[Urtue.Samples.Alexkr.DropDownNavigationPath_1#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_394_2.cs)]"
  syntax:
    content: >-
      [System.ComponentModel.Designer("System.Web.UI.Design.WebControls.SiteMapPathDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      public class SiteMapPath : System.Web.UI.WebControls.CompositeControl
  inheritance:
  - System.Object
  - System.Web.UI.Control
  - System.Web.UI.WebControls.WebControl
  - System.Web.UI.WebControls.CompositeControl
  implements: []
  inheritedMembers:
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.AddParsedSubObject(System.Object)
  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientID
  - System.Web.UI.Control.ClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Context
  - System.Web.UI.Control.CreateControlCollection
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EnableViewState
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String)
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.Focus
  - System.Web.UI.Control.GetDesignModeState
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasControls
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.ID
  - System.Web.UI.Control.IdSeparator
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadControlState(System.Object)
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.OnInit(System.EventArgs)
  - System.Web.UI.Control.OnLoad(System.EventArgs)
  - System.Web.UI.Control.OnPreRender(System.EventArgs)
  - System.Web.UI.Control.OnUnload(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SaveControlState
  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ValidateRequestMode
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  - System.Web.UI.Control.Visible
  - System.Web.UI.WebControls.CompositeControl.Controls
  - System.Web.UI.WebControls.CompositeControl.RecreateChildControls
  - System.Web.UI.WebControls.CompositeControl.SupportsDisabledAttribute
  - System.Web.UI.WebControls.CompositeControl.System#Web#UI#WebControls#ICompositeControlDesignerAccessor#RecreateChildControls
  - System.Web.UI.WebControls.WebControl.AccessKey
  - System.Web.UI.WebControls.WebControl.AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.ApplyStyle(System.Web.UI.WebControls.Style)
  - System.Web.UI.WebControls.WebControl.Attributes
  - System.Web.UI.WebControls.WebControl.BackColor
  - System.Web.UI.WebControls.WebControl.BorderColor
  - System.Web.UI.WebControls.WebControl.BorderStyle
  - System.Web.UI.WebControls.WebControl.BorderWidth
  - System.Web.UI.WebControls.WebControl.ControlStyle
  - System.Web.UI.WebControls.WebControl.ControlStyleCreated
  - System.Web.UI.WebControls.WebControl.CopyBaseAttributes(System.Web.UI.WebControls.WebControl)
  - System.Web.UI.WebControls.WebControl.CreateControlStyle
  - System.Web.UI.WebControls.WebControl.CssClass
  - System.Web.UI.WebControls.WebControl.DisabledCssClass
  - System.Web.UI.WebControls.WebControl.Enabled
  - System.Web.UI.WebControls.WebControl.EnableTheming
  - System.Web.UI.WebControls.WebControl.Font
  - System.Web.UI.WebControls.WebControl.ForeColor
  - System.Web.UI.WebControls.WebControl.HasAttributes
  - System.Web.UI.WebControls.WebControl.Height
  - System.Web.UI.WebControls.WebControl.IsEnabled
  - System.Web.UI.WebControls.WebControl.MergeStyle(System.Web.UI.WebControls.Style)
  - System.Web.UI.WebControls.WebControl.RenderBeginTag(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.RenderEndTag(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.SkinID
  - System.Web.UI.WebControls.WebControl.Style
  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)
  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)
  - System.Web.UI.WebControls.WebControl.TabIndex
  - System.Web.UI.WebControls.WebControl.TagKey
  - System.Web.UI.WebControls.WebControl.TagName
  - System.Web.UI.WebControls.WebControl.ToolTip
  - System.Web.UI.WebControls.WebControl.Width
  platform:
  - net462
- uid: System.Web.UI.WebControls.SiteMapPath.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.SiteMapPath
  langs:
  - csharp
  name: SiteMapPath()
  nameWithType: SiteMapPath.SiteMapPath()
  fullName: System.Web.UI.WebControls.SiteMapPath.SiteMapPath()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.UI.WebControls.SiteMapPath&quot;> </xref> 클래스입니다."
  remarks: "이 생성자를 사용 하 여 만들고 <xref:System.Web.UI.WebControls.SiteMapPath>클래스</xref:System.Web.UI.WebControls.SiteMapPath> 의 새 인스턴스를 초기화 합니다. 동적으로 추가 <xref:System.Web.UI.WebControls.SiteMapPath>페이지에 컨트롤을 만드는 새 <xref:System.Web.UI.WebControls.SiteMapPath>개체 속성을 설정 하 고 다음 <xref:System.Web.UI.Control.Controls%2A?displayProperty=fullName> <xref:System.Web.UI.WebControls.PlaceHolder>.</xref:System.Web.UI.WebControls.PlaceHolder> 와 같은 컨테이너 컨트롤의 컬렉션</xref:System.Web.UI.Control.Controls%2A?displayProperty=fullName> 에 추가</xref:System.Web.UI.WebControls.SiteMapPath> </xref:System.Web.UI.WebControls.SiteMapPath> 하려면"
  example:
  - "The following code example demonstrates how to use the SiteMapPath constructor to add a <xref:System.Web.UI.WebControls.SiteMapPath> control to a page. For the example to work, you need to add an image to your root directory and change the image name in the example code from \"myimage.jpg\" to the name of your image file.  \n  \n [!code-vb[System.Web.UI.WebControls.NavigationPath_decl_3#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_223_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.NavigationPath_decl_3#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_223_1.aspx)]"
  syntax:
    content: public SiteMapPath ();
    parameters: []
  overload: System.Web.UI.WebControls.SiteMapPath.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SiteMapPath.CreateChildControls
  id: CreateChildControls
  parent: System.Web.UI.WebControls.SiteMapPath
  langs:
  - csharp
  name: CreateChildControls()
  nameWithType: SiteMapPath.CreateChildControls()
  fullName: System.Web.UI.WebControls.SiteMapPath.CreateChildControls()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "현재 자식 컨트롤 컬렉션을 지우고 호출 하 여 다시 작성은 <xref:System.Web.UI.WebControls.SiteMapPath.CreateControlHierarchy*>메서드.</xref:System.Web.UI.WebControls.SiteMapPath.CreateControlHierarchy*>"
  remarks: "이 메서드는 ASP.NET 인프라에서 파생 된 컨트롤을 포함 하 여 컴퍼지션 기반 구현을 사용 하는 모든 컨트롤에 알리기 위해 <xref:System.Web.UI.WebControls.CompositeDataBoundControl>및 <xref:System.Web.UI.WebControls.CompositeControl>포함 하는 컨트롤의 모든 자식 다시 게시 또는 렌더링에 대 한 준비를 만들 수 있습니다.</xref:System.Web.UI.WebControls.CompositeControl> </xref:System.Web.UI.WebControls.CompositeDataBoundControl>"
  syntax:
    content: protected override void CreateChildControls ();
    parameters: []
  overload: System.Web.UI.WebControls.SiteMapPath.CreateChildControls*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SiteMapPath.CreateControlHierarchy
  id: CreateControlHierarchy
  parent: System.Web.UI.WebControls.SiteMapPath
  langs:
  - csharp
  name: CreateControlHierarchy()
  nameWithType: SiteMapPath.CreateControlHierarchy()
  fullName: System.Web.UI.WebControls.SiteMapPath.CreateControlHierarchy()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "제공 하는 사이트 맵 구조를 검사 하는 <xref:System.Web.UI.WebControls.SiteMapPath.SiteMapProvider*>기능 노드에 대해 정의 된 템플릿과 controls 컬렉션의 스타일에 따라 자식을 빌드합니다.</xref:System.Web.UI.WebControls.SiteMapPath.SiteMapProvider*>"
  remarks: "CreateControlHierarchy 메서드가 만드는 <xref:System.Web.UI.WebControls.SiteMapNodeItem>제어, 해당 연결 <xref:System.Web.SiteMapNode>에 노드 추가 하는 현재 사이트 맵 공급자에서 개체는 <xref:System.Web.UI.Control.Controls%2A>컬렉션.</xref:System.Web.UI.Control.Controls%2A> </xref:System.Web.SiteMapNode> </xref:System.Web.UI.WebControls.SiteMapNodeItem>       메서드가 먼저 찾은 <xref:System.Web.SiteMap.CurrentNode%2A?displayProperty=fullName>, 한 다음의 계층적 트리를 <xref:System.Web.SiteMapNode>개체 만들기는 <xref:System.Web.UI.WebControls.SiteMapNodeItem>각각에 대 한까지는 <xref:System.Web.SiteMap.RootNode%2A>에 도달 하면.</xref:System.Web.SiteMap.RootNode%2A> </xref:System.Web.UI.WebControls.SiteMapNodeItem> </xref:System.Web.SiteMapNode> </xref:System.Web.SiteMap.CurrentNode%2A?displayProperty=fullName> 각 <xref:System.Web.UI.WebControls.SiteMapNodeItem>만들어지면 해당 바인딩된 전에 <xref:System.Web.SiteMapNode>, <xref:System.Web.UI.WebControls.SiteMapPath.InitializeItem%2A>메서드를 호출 합니다.</xref:System.Web.UI.WebControls.SiteMapPath.InitializeItem%2A> </xref:System.Web.SiteMapNode> </xref:System.Web.UI.WebControls.SiteMapNodeItem> <xref:System.Web.UI.WebControls.SiteMapPath.InitializeItem%2A>메서드 템플릿이나 특정 노드 형식에 대해 정의 된 스타일을 적용 하 고 만들고 초기화 하는 자식 컨트롤의 <xref:System.Web.UI.WebControls.SiteMapNodeItem>포함.</xref:System.Web.UI.WebControls.SiteMapNodeItem> </xref:System.Web.UI.WebControls.SiteMapPath.InitializeItem%2A> 마지막으로 <xref:System.Web.UI.WebControls.SiteMapPath.InitializeItem%2A>의 자식 컨트롤을 추가 하는 메서드는 <xref:System.Web.UI.WebControls.SiteMapNodeItem>에 <xref:System.Web.UI.Control.Controls%2A>컬렉션.</xref:System.Web.UI.Control.Controls%2A> </xref:System.Web.UI.WebControls.SiteMapNodeItem> </xref:System.Web.UI.WebControls.SiteMapPath.InitializeItem%2A>       각 <xref:System.Web.UI.WebControls.SiteMapNodeItem>초기화 되는 <xref:System.Web.UI.WebControls.SiteMapPath.OnItemCreated%2A>메서드를 호출 합니다.</xref:System.Web.UI.WebControls.SiteMapPath.OnItemCreated%2A> </xref:System.Web.UI.WebControls.SiteMapNodeItem> 그런 다음 <xref:System.Web.UI.WebControls.SiteMapNodeItem>하면 해당에 바인딩된 <xref:System.Web.SiteMapNode>, 및 <xref:System.Web.UI.WebControls.BaseDataBoundControl.OnDataBound%2A>호출 됩니다.</xref:System.Web.UI.WebControls.BaseDataBoundControl.OnDataBound%2A> </xref:System.Web.SiteMapNode> </xref:System.Web.UI.WebControls.SiteMapNodeItem>       CreateControlHierarchy 메서드가 호출 되는 <xref:System.Web.UI.WebControls.SiteMapPath.CreateChildControls%2A>메서드.</xref:System.Web.UI.WebControls.SiteMapPath.CreateChildControls%2A>       확장 하는 클래스는 <xref:System.Web.UI.WebControls.SiteMapPath>변경할 CreateControlHierarchy 메서드를 재정의 하는 제어 방법을 <xref:System.Web.UI.WebControls.SiteMapNodeItem>컨트롤 만들어지거나에 추가 되는 <xref:System.Web.UI.WebControls.SiteMapPath>컨트롤.</xref:System.Web.UI.WebControls.SiteMapPath> </xref:System.Web.UI.WebControls.SiteMapNodeItem> </xref:System.Web.UI.WebControls.SiteMapPath> 개별 노드 항목의 조작 수행 되는 <xref:System.Web.UI.WebControls.SiteMapPath.InitializeItem%2A>메서드 및 확장 하는 대부분의 클래스 <xref:System.Web.UI.WebControls.SiteMapPath>만 해당 메서드를 재정의 합니다.</xref:System.Web.UI.WebControls.SiteMapPath> </xref:System.Web.UI.WebControls.SiteMapPath.InitializeItem%2A>"
  syntax:
    content: protected virtual void CreateControlHierarchy ();
    parameters: []
  overload: System.Web.UI.WebControls.SiteMapPath.CreateControlHierarchy*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "더 <xref:System.Web.UI.WebControls.SiteMapPath.SiteMapProvider*>를 사용할 수는 <xref href=&quot;System.Web.UI.WebControls.SiteMapPath&quot;> </xref> 컨트롤.</xref:System.Web.UI.WebControls.SiteMapPath.SiteMapProvider*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle
  id: CurrentNodeStyle
  parent: System.Web.UI.WebControls.SiteMapPath
  langs:
  - csharp
  name: CurrentNodeStyle
  nameWithType: SiteMapPath.CurrentNodeStyle
  fullName: System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "현재 노드에 대 한 표시 텍스트에 사용 되는 스타일을 가져옵니다."
  remarks: "CurrentNodeStyle 속성을 사용 하 여 현재 표시 된 페이지를 나타내는 탐색 경로 노드에 대 한 표시 텍스트의 모양을 제어 합니다. 기본적으로 표시 텍스트에 지정 되는 <xref:System.Web.SiteMapNode.Title%2A>속성은 <xref:System.Web.SiteMapNode>페이지를 나타내는.</xref:System.Web.SiteMapNode> </xref:System.Web.SiteMapNode.Title%2A> 일반 스타일 설정 사용자 지정 배경색, 전경색, 글꼴 속성 및 노드 간격을 포함 합니다.       에 대 한 <xref:System.Web.UI.WebControls.SiteMapPath>노드, 스타일 속성은 다음과 같은 순서로 단일 스타일에 병합: 1.</xref:System.Web.UI.WebControls.SiteMapPath>  <xref:System.Web.UI.WebControls.SiteMapPath.NodeStyle%2A>2입니다.</xref:System.Web.UI.WebControls.SiteMapPath.NodeStyle%2A>  CurrentNodeStyle 또는 현재 표시 된 루트 노드를 <xref:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle%2A>.</xref:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle%2A> 없는 경우      > [!NOTE] > 노드의 기본 밑줄 스타일으로 명시적으로 설정 된 경우가 아니면 표시 되지 않습니다 취소선 또는 윗줄 스타일을 노드 글꼴 스타일을 설정 하면 `true`합니다.       경우는 <xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeTemplate%2A>속성이 정의 된, CurrentNodeStyle 속성은 무시 됩니다.</xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeTemplate%2A>"
  example:
  - "The following code example demonstrates how to declaratively set the CurrentNodeStyle of a <xref:System.Web.UI.WebControls.SiteMapPath> control in a Web Forms page.  \n  \n [!code-cs[System.Web.UI.WebControls.NavigationPath_decl_1#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_328_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.NavigationPath_decl_1#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_328_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.Style CurrentNodeStyle { get; }
    return:
      type: System.Web.UI.WebControls.Style
      description: "<xref href=&quot;System.Web.UI.WebControls.Style&quot;> </xref> 의 현재 노드에 대 한 표시 텍스트에 대 한 스타일 설정을 포함 하는 <xref href=&quot;System.Web.UI.WebControls.SiteMapPath&quot;> </xref> 제어 합니다."
  overload: System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SiteMapPath.CurrentNodeTemplate
  id: CurrentNodeTemplate
  parent: System.Web.UI.WebControls.SiteMapPath
  langs:
  - csharp
  name: CurrentNodeTemplate
  nameWithType: SiteMapPath.CurrentNodeTemplate
  fullName: System.Web.UI.WebControls.SiteMapPath.CurrentNodeTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "현재 표시 된 페이지를 나타내는 사이트 탐색 경로 노드에 사용할 컨트롤 템플릿을 가져오거나 설정 합니다."
  remarks: "CurrentNodeTemplate 설정는 <xref:System.Web.UI.ITemplate>사용 하는 개체는 <xref:System.Web.UI.WebControls.Image>컨트롤 또는 다른 컨트롤을 <xref:System.Web.UI.WebControls.Label>, 문자열 대신 현재 노드의 사용자 인터페이스 요소로.</xref:System.Web.UI.WebControls.Label> </xref:System.Web.UI.WebControls.Image> </xref:System.Web.UI.ITemplate>       서식 파일 CurrentNodeTemplate 속성을 설정 하는 경우 표시 되는 현재 탐색 노드 텍스트와 모든 <xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A>적용</xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A> 재정의 그러나 현재 표시 된 루트 노드에 해당 하는 경우는 <xref:System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate%2A>또는 <xref:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle%2A>사용 됩니다.</xref:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle%2A> </xref:System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate%2A>       모든 웹 서버 컨트롤에 선언적으로 CurrentNodeTemplate 속성을 설정할 수 있습니다 및으로 웹 서버 컨트롤을 래핑하는 데 필요한 단계를 수행 하는 ASP.NET 인프라는 <xref:System.Web.UI.ITemplate>개체입니다.</xref:System.Web.UI.ITemplate> 그러나 웹 서버 컨트롤 구현 하지 않습니다는 <xref:System.Web.UI.ITemplate>인터페이스 이므로, 작업할 때의 <xref:System.Web.UI.ITemplate>속성을 프로그래밍 방식으로 작성 해야 합니다는 <xref:System.Web.UI.ITemplate>모든 템플릿 코드에 대 한 래퍼입니다.</xref:System.Web.UI.ITemplate> </xref:System.Web.UI.ITemplate> </xref:System.Web.UI.ITemplate> 그런 다음 CurrentNodeTemplate 속성이 설정 된 인스턴스에 <xref:System.Web.UI.ITemplate>래퍼.</xref:System.Web.UI.ITemplate>"
  example:
  - "The following code example declaratively defines a CurrentNodeTemplate and overrides a defined <xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A>.  \n  \n [!code-vb[System.Web.UI.WebControls.NavigationPath_decl_5#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_538_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.NavigationPath_decl_5#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_538_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate CurrentNodeTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "<xref href=&quot;System.Web.UI.ITemplate&quot;> </xref> 구현 하는 개체는 <xref:System.Web.UI.ITemplate.InstantiateIn*>메서드를 나타내는 현재 표시 된 탐색 경로 노드에 대 한 사용자 지정 콘텐츠를 렌더링 합니다.</xref:System.Web.UI.ITemplate.InstantiateIn*>"
  overload: System.Web.UI.WebControls.SiteMapPath.CurrentNodeTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SiteMapPath.DataBind
  id: DataBind
  parent: System.Web.UI.WebControls.SiteMapPath
  langs:
  - csharp
  name: DataBind()
  nameWithType: SiteMapPath.DataBind()
  fullName: System.Web.UI.WebControls.SiteMapPath.DataBind()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "데이터 소스를 바인딩합니다는 <xref href=&quot;System.Web.UI.WebControls.SiteMapPath&quot;> </xref> 컨트롤과 해당 자식 컨트롤입니다."
  remarks: "<xref:System.Web.UI.WebControls.SiteMapPath>사이트 맵 공급자에서 직접 사용 하 여 데이터를 검색 하도록 디자인 된는 <xref:System.Web.UI.WebControls.SiteMapPath.Provider%2A>속성.</xref:System.Web.UI.WebControls.SiteMapPath.Provider%2A> </xref:System.Web.UI.WebControls.SiteMapPath> 사용 하지 않는 <xref:System.Web.UI.WebControls.SiteMapPath>ASP.NET 데이터 소스 컨트롤에 바인딩할 제어 하 고 DataBind 메서드를 명시적으로 호출 하지 마십시오.</xref:System.Web.UI.WebControls.SiteMapPath>"
  syntax:
    content: public override void DataBind ();
    parameters: []
  overload: System.Web.UI.WebControls.SiteMapPath.DataBind*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SiteMapPath.InitializeItem(System.Web.UI.WebControls.SiteMapNodeItem)
  id: InitializeItem(System.Web.UI.WebControls.SiteMapNodeItem)
  parent: System.Web.UI.WebControls.SiteMapPath
  langs:
  - csharp
  name: InitializeItem(SiteMapNodeItem)
  nameWithType: SiteMapPath.InitializeItem(SiteMapNodeItem)
  fullName: System.Web.UI.WebControls.SiteMapPath.InitializeItem(SiteMapNodeItem)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "채웁니다는 <xref href=&quot;System.Web.UI.WebControls.SiteMapNodeItem&quot;> </xref>, 웹 서버 컨트롤을 나타내는 되는 <xref href=&quot;System.Web.SiteMapNode&quot;> </xref>, 노드의 기능 및 지정 된 템플릿, 노드에 대 한 스타일에 따라 자식 컨트롤의 집합입니다."
  remarks: "InitializeItem 메서드를 확인 하 여 항목을 나타내는 노드의 기능 유형을 결정는 <xref:System.Web.UI.WebControls.SiteMapNodeItemType>, 모든 템플릿 또는 이러한 종류의 노드에 정의 된 스타일을 적용 합니다.</xref:System.Web.UI.WebControls.SiteMapNodeItemType>       경우는 <xref:System.Web.UI.WebControls.SiteMapNodeItem>에 <xref:System.Web.UI.WebControls.SiteMapNodeItemType>항목 형식이 한 <xref:System.Web.UI.WebControls.HyperLink>자식 컨트롤을 만들 및 <xref:System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate%2A>및 <xref:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle%2A>적용 될 수 있습니다.</xref:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle%2A> </xref:System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate%2A> </xref:System.Web.UI.WebControls.HyperLink> </xref:System.Web.UI.WebControls.SiteMapNodeItemType> </xref:System.Web.UI.WebControls.SiteMapNodeItem> 경우는 <xref:System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate%2A>설정 되 면 해당 <xref:System.Web.UI.ITemplate>노드에 적용 됩니다.</xref:System.Web.UI.ITemplate> </xref:System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate%2A> 대신는 <xref:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle%2A>가 정의 된과 병합 되어 설정 <xref:System.Web.UI.WebControls.SiteMapPath.NodeStyle%2A>및 적용.</xref:System.Web.UI.WebControls.SiteMapPath.NodeStyle%2A> </xref:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle%2A> 마지막으로 스타일 없음이나 서식 파일을 정의한 경우, 기본 <xref:System.Web.UI.WebControls.HyperLink>컨트롤이 만들어지고 노드 값을 사용 하 여 초기화 합니다.</xref:System.Web.UI.WebControls.HyperLink>       경우 <xref:System.Web.UI.WebControls.SiteMapNodeItem>에는 <xref:System.Web.UI.WebControls.SiteMapNodeItemType>항목 유형, 중 하나는 <xref:System.Web.UI.WebControls.Literal> <xref:System.Web.UI.WebControls.HyperLink> <xref:System.Web.UI.WebControls.SiteMapPath.RenderCurrentNodeAsLink%2A>.</xref:System.Web.UI.WebControls.SiteMapPath.RenderCurrentNodeAsLink%2A> 의 반환 값에 따라 자식 컨트롤을 만들</xref:System.Web.UI.WebControls.HyperLink> 또는</xref:System.Web.UI.WebControls.Literal> </xref:System.Web.UI.WebControls.SiteMapNodeItemType> </xref:System.Web.UI.WebControls.SiteMapNodeItem> 다음 중 하나는 <xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeTemplate%2A>또는 <xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A>적용 될 수 있습니다.</xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A> </xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeTemplate%2A> 경우는 <xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeTemplate%2A>설정 되 면 해당 <xref:System.Web.UI.ITemplate>노드에 적용 됩니다.</xref:System.Web.UI.ITemplate> </xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeTemplate%2A> 그렇지 않고는 <xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A>가 정의 된과 병합 되어 설정 <xref:System.Web.UI.WebControls.SiteMapPath.NodeStyle%2A>및 적용.</xref:System.Web.UI.WebControls.SiteMapPath.NodeStyle%2A> </xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A>       경우는 <xref:System.Web.UI.WebControls.SiteMapNodeItem>에 <xref:System.Web.UI.WebControls.SiteMapNodeItemType>항목 형식이 한 <xref:System.Web.UI.WebControls.HyperLink>자식 컨트롤을 만들 및 <xref:System.Web.UI.WebControls.SiteMapPath.NodeTemplate%2A>및 <xref:System.Web.UI.WebControls.SiteMapPath.NodeStyle%2A>적용 될 수 있습니다.</xref:System.Web.UI.WebControls.SiteMapPath.NodeStyle%2A> </xref:System.Web.UI.WebControls.SiteMapPath.NodeTemplate%2A> </xref:System.Web.UI.WebControls.HyperLink> </xref:System.Web.UI.WebControls.SiteMapNodeItemType> </xref:System.Web.UI.WebControls.SiteMapNodeItem> 경우는 <xref:System.Web.UI.WebControls.SiteMapPath.NodeTemplate%2A>설정 되 면 해당 <xref:System.Web.UI.ITemplate>노드에 적용 됩니다.</xref:System.Web.UI.ITemplate> </xref:System.Web.UI.WebControls.SiteMapPath.NodeTemplate%2A> 그렇지 않고는 <xref:System.Web.UI.WebControls.SiteMapPath.NodeStyle%2A>적용을 설정 합니다.</xref:System.Web.UI.WebControls.SiteMapPath.NodeStyle%2A>       마지막으로, 하는 경우는 <xref:System.Web.UI.WebControls.SiteMapNodeItem>에 <xref:System.Web.UI.WebControls.SiteMapNodeItemType>항목 형식이 한 <xref:System.Web.UI.WebControls.Literal>자식 컨트롤을 만들 및 <xref:System.Web.UI.WebControls.SiteMapPath.PathSeparatorTemplate%2A>및 <xref:System.Web.UI.WebControls.SiteMapPath.PathSeparatorStyle%2A>에 대해 정의 된 동일한 일반 규칙에 따라 적용 됩니다는 <xref:System.Web.UI.WebControls.SiteMapNodeItemType>노드 유형.</xref:System.Web.UI.WebControls.SiteMapNodeItemType> </xref:System.Web.UI.WebControls.SiteMapPath.PathSeparatorStyle%2A> </xref:System.Web.UI.WebControls.SiteMapPath.PathSeparatorTemplate%2A> </xref:System.Web.UI.WebControls.Literal> </xref:System.Web.UI.WebControls.SiteMapNodeItemType> </xref:System.Web.UI.WebControls.SiteMapNodeItem>       개별 조작 InitializeItem 메서드를 재정의 <xref:System.Web.UI.WebControls.SiteMapNodeItem>개체입니다.</xref:System.Web.UI.WebControls.SiteMapNodeItem> 클래스의 디자인 방법을 대 한 보다 광범위 한 제어에 필요한 경우 <xref:System.Web.UI.WebControls.SiteMapNodeItem>개체가 만들어져에 추가 <xref:System.Web.UI.WebControls.SiteMapPath>제어, 재정의 <xref:System.Web.UI.WebControls.SiteMapPath.CreateControlHierarchy%2A>메서드.</xref:System.Web.UI.WebControls.SiteMapPath.CreateControlHierarchy%2A> </xref:System.Web.UI.WebControls.SiteMapPath> </xref:System.Web.UI.WebControls.SiteMapNodeItem>"
  example:
  - "The following code example demonstrates how to override the InitializeItem method to add functionality to a control that derives from <xref:System.Web.UI.WebControls.SiteMapPath>. This code example is part of a larger example provided for the <xref:System.Web.UI.WebControls.SiteMapPath> class.  \n  \n [!code-vb[Urtue.Samples.Alexkr.DropDownNavigationPath_1#2](~/add/codesnippet/visualbasic/707d474c-b96f-4b62-8a92-_1.vb)]\n [!code-cs[Urtue.Samples.Alexkr.DropDownNavigationPath_1#2](~/add/codesnippet/csharp/707d474c-b96f-4b62-8a92-_1.cs)]"
  syntax:
    content: protected virtual void InitializeItem (System.Web.UI.WebControls.SiteMapNodeItem item);
    parameters:
    - id: item
      type: System.Web.UI.WebControls.SiteMapNodeItem
      description: "<xref href=&quot;System.Web.UI.WebControls.SiteMapNodeItem&quot;> </xref> 를 초기화 합니다."
  overload: System.Web.UI.WebControls.SiteMapPath.InitializeItem*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SiteMapPath.ItemCreated
  id: ItemCreated
  parent: System.Web.UI.WebControls.SiteMapPath
  langs:
  - csharp
  name: ItemCreated
  nameWithType: SiteMapPath.ItemCreated
  fullName: System.Web.UI.WebControls.SiteMapPath.ItemCreated
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "발생 경우는 <xref href=&quot;System.Web.UI.WebControls.SiteMapNodeItem&quot;> </xref> 만들어집니다는 <xref href=&quot;System.Web.UI.WebControls.SiteMapPath&quot;> </xref> 고 연결 된 해당 <xref href=&quot;System.Web.SiteMapNode&quot;> </xref>합니다. 이 이벤트는 <xref:System.Web.UI.WebControls.SiteMapPath.OnItemCreated*>메서드.</xref:System.Web.UI.WebControls.SiteMapPath.OnItemCreated*>"
  remarks: "이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public event System.Web.UI.WebControls.SiteMapNodeItemEventHandler ItemCreated;
    return:
      type: System.Web.UI.WebControls.SiteMapNodeItemEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SiteMapPath.ItemDataBound
  id: ItemDataBound
  parent: System.Web.UI.WebControls.SiteMapPath
  langs:
  - csharp
  name: ItemDataBound
  nameWithType: SiteMapPath.ItemDataBound
  fullName: System.Web.UI.WebControls.SiteMapPath.ItemDataBound
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "다음에 발생 한 <xref href=&quot;System.Web.UI.WebControls.SiteMapNodeItem&quot;> </xref> 의 내부에 바인딩된 <xref href=&quot;System.Web.SiteMapNode&quot;> </xref> 기준으로 데이터는 <xref href=&quot;System.Web.UI.WebControls.SiteMapPath&quot;> </xref>합니다. 이 이벤트는 <xref:System.Web.UI.WebControls.SiteMapPath.OnItemDataBound*>메서드.</xref:System.Web.UI.WebControls.SiteMapPath.OnItemDataBound*>"
  remarks: "이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public event System.Web.UI.WebControls.SiteMapNodeItemEventHandler ItemDataBound;
    return:
      type: System.Web.UI.WebControls.SiteMapNodeItemEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SiteMapPath.LoadViewState(System.Object)
  id: LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.SiteMapPath
  langs:
  - csharp
  name: LoadViewState(Object)
  nameWithType: SiteMapPath.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.SiteMapPath.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "저장 한 이전 요청에서 뷰 상태 정보가 복원 되는 <xref:System.Web.UI.WebControls.SiteMapPath.SaveViewState*>메서드.</xref:System.Web.UI.WebControls.SiteMapPath.SaveViewState*>"
  remarks: "이 메서드는.NET Framework 인프라에서 주로 사용 하 고 사용자 코드에서 직접 사용할 수 없습니다. 그러나 컨트롤 개발자가 사용자 지정 서버 컨트롤에서 해당 뷰 상태를 복원 하는 방법을 지정 하려면이 메서드를 재정의할 수 있습니다. 자세한 내용은 참조 [ASP.NET 상태 관리 개요](~/add/includes/ajax-current-ext-md.md)합니다.       <xref:System.Web.UI.WebControls.Login.LoadViewState%2A>메서드는 이전 요청 중에 저장 된 뷰 상태 정보를 복원 합니다.</xref:System.Web.UI.WebControls.Login.LoadViewState%2A>"
  syntax:
    content: protected override void LoadViewState (object savedState);
    parameters:
    - id: savedState
      type: System.Object
      description: "<xref:System.Object>복원할 컨트롤 상태를 나타내는입니다.</xref:System.Object>"
  overload: System.Web.UI.WebControls.SiteMapPath.LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SiteMapPath.NodeStyle
  id: NodeStyle
  parent: System.Web.UI.WebControls.SiteMapPath
  langs:
  - csharp
  name: NodeStyle
  nameWithType: SiteMapPath.NodeStyle
  fullName: System.Web.UI.WebControls.SiteMapPath.NodeStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "사이트 탐색 경로에 모든 노드에 대 한 표시 텍스트에 사용 되는 스타일을 가져옵니다."
  remarks: "NodeStyle 속성을 사용 하 여 컨트롤에서 렌더링 하는 모든 탐색 경로 노드에 대 한 표시 텍스트의 모양을 제어 합니다. 기본적으로 표시 텍스트에 지정 되는 <xref:System.Web.SiteMapNode.Title%2A>속성은 <xref:System.Web.SiteMapNode>페이지를 나타내는.</xref:System.Web.SiteMapNode> </xref:System.Web.SiteMapNode.Title%2A> 일반 스타일 설정 사용자 지정 배경색, 전경색, 글꼴 속성 및 노드 간격을 포함 합니다.       에 대 한 <xref:System.Web.UI.WebControls.SiteMapPath>노드, 스타일 속성은 다음과 같은 순서로 단일 스타일에 병합: 1.</xref:System.Web.UI.WebControls.SiteMapPath>  NodeStyle 2입니다.  <xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A>또는 <xref:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle%2A>노드 형식에 따라.</xref:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle%2A></xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A>      > [!NOTE] > 노드의 기본 밑줄 스타일으로 명시적으로 설정 된 경우가 아니면 표시 되지 않습니다 취소선 또는 윗줄 스타일을 노드 글꼴 스타일을 설정 하면 `true`합니다.       NodeStyle 정의 된 경우 처음을 각 노드에 적용 합니다. 현재 노드 또는 루트 노드가 같은 노드를 특정 유형에 대 한 추가 스타일을 정의 하는 경우이 스타일 NodeStyle 속성에 지정 된 일반 스타일에 우선 합니다. 서식 파일에 특정 유형의 노드에 대해 정의 하는 경우 해당 노드에 대해 정의 된 모든 스타일 보다 우선 합니다."
  example:
  - "The following code example demonstrates how to define a NodeStyle that is merged with a <xref:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle%2A> to demonstrate the order of style precedence for the <xref:System.Web.UI.WebControls.SiteMapPath> nodes.  \n  \n [!code-vb[System.Web.UI.WebControls.NavigationPath_decl_5#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_510_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.NavigationPath_decl_5#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_510_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.Style NodeStyle { get; }
    return:
      type: System.Web.UI.WebControls.Style
      description: "<xref href=&quot;System.Web.UI.WebControls.Style&quot;> </xref> 의 표시 텍스트의 스타일 설정을 포함 하는 <xref href=&quot;System.Web.UI.WebControls.SiteMapPath&quot;> </xref> 제어 합니다."
  overload: System.Web.UI.WebControls.SiteMapPath.NodeStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SiteMapPath.NodeTemplate
  id: NodeTemplate
  parent: System.Web.UI.WebControls.SiteMapPath
  langs:
  - csharp
  name: NodeTemplate
  nameWithType: SiteMapPath.NodeTemplate
  fullName: System.Web.UI.WebControls.SiteMapPath.NodeTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "사이트 탐색 경로의 모든 기능 노드에 사용할 컨트롤 템플릿을 가져오거나 설정 합니다."
  remarks: "NodeTemplate로 설정 된 <xref:System.Web.UI.ITemplate>사용 하는 개체는 <xref:System.Web.UI.WebControls.Image>또는 다른 컨트롤을 <xref:System.Web.UI.WebControls.Label>, 모든 탐색 경로 노드에 대 한 사용자 인터페이스 요소로.</xref:System.Web.UI.WebControls.Label> </xref:System.Web.UI.WebControls.Image> </xref:System.Web.UI.ITemplate>       NodeTemplate 속성을 설정 하는 경우 서식 파일 재정의 탐색 노드 텍스트 표시 및 <xref:System.Web.UI.WebControls.SiteMapPath.NodeStyle%2A>적용</xref:System.Web.UI.WebControls.SiteMapPath.NodeStyle%2A> 현재 루트 노드의 경우 및는 <xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeTemplate%2A>또는 <xref:System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate%2A>NodeTemplate를 재정의 하는 이러한 서식 파일을 설정 합니다.</xref:System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate%2A> </xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeTemplate%2A>       모든 웹 서버 컨트롤에 선언적으로 NodeTemplate 속성을 설정할 수 있습니다 및으로 웹 서버 컨트롤을 래핑하는 데 필요한 단계를 수행 하는 ASP.NET 인프라는 <xref:System.Web.UI.ITemplate>개체입니다.</xref:System.Web.UI.ITemplate> 그러나 웹 서버 컨트롤 구현 하지 않습니다는 <xref:System.Web.UI.ITemplate>인터페이스 이므로, 작업할 때의 <xref:System.Web.UI.ITemplate>속성을 프로그래밍 방식으로 작성 해야 합니다는 <xref:System.Web.UI.ITemplate>모든 템플릿 코드에 대 한 래퍼입니다.</xref:System.Web.UI.ITemplate> </xref:System.Web.UI.ITemplate> </xref:System.Web.UI.ITemplate> 그런 다음 <xref:System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate%2A>인스턴스의 속성는 <xref:System.Web.UI.ITemplate>래퍼.</xref:System.Web.UI.ITemplate> </xref:System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate%2A>"
  example:
  - "The following code example demonstrates how a NodeTemplate, when one is specified, overrides styles defined for all nodes, including special styles for the root node and current node.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.UI.WebControls.NavigationPath_decl_6#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_615_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.NavigationPath_decl_6#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_615_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate NodeTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "<xref href=&quot;System.Web.UI.ITemplate&quot;> </xref> <xref:System.Web.UI.ITemplate.InstantiateIn*>탐색 경로의 각 노드에 대 한 사용자 지정 콘텐츠를 렌더링 하지 메서드</xref:System.Web.UI.ITemplate.InstantiateIn*> 를 구현 하는 개체"
  overload: System.Web.UI.WebControls.SiteMapPath.NodeTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SiteMapPath.OnDataBinding(System.EventArgs)
  id: OnDataBinding(System.EventArgs)
  parent: System.Web.UI.WebControls.SiteMapPath
  langs:
  - csharp
  name: OnDataBinding(EventArgs)
  nameWithType: SiteMapPath.OnDataBinding(EventArgs)
  fullName: System.Web.UI.WebControls.SiteMapPath.OnDataBinding(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "재정의 <xref:System.Web.UI.Control.OnDataBinding*>의 메서드는 <xref href=&quot;System.Web.UI.WebControls.CompositeControl&quot;> </xref> 클래스와 발생은 <xref href=&quot;System.Web.UI.Control.DataBinding&quot;> </xref> 이벤트.</xref:System.Web.UI.Control.OnDataBinding*>"
  syntax:
    content: protected override void OnDataBinding (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.SiteMapPath.OnDataBinding*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SiteMapPath.OnItemCreated(System.Web.UI.WebControls.SiteMapNodeItemEventArgs)
  id: OnItemCreated(System.Web.UI.WebControls.SiteMapNodeItemEventArgs)
  parent: System.Web.UI.WebControls.SiteMapPath
  langs:
  - csharp
  name: OnItemCreated(SiteMapNodeItemEventArgs)
  nameWithType: SiteMapPath.OnItemCreated(SiteMapNodeItemEventArgs)
  fullName: System.Web.UI.WebControls.SiteMapPath.OnItemCreated(SiteMapNodeItemEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "발생는 <xref href=&quot;System.Web.UI.WebControls.SiteMapPath.ItemCreated&quot;> </xref> 의 이벤트는 <xref href=&quot;System.Web.UI.WebControls.SiteMapPath&quot;> </xref> 제어 합니다."
  remarks: "<xref:System.Web.UI.WebControls.SiteMapPath.ItemCreated>후에 이벤트가 발생는 <xref:System.Web.UI.WebControls.SiteMapPath>컨트롤을 만듭니다는 <xref:System.Web.UI.WebControls.SiteMapNodeItem>, 웹 서버 컨트롤을 나타내는 되는 <xref:System.Web.SiteMapNode>, <xref:System.Web.SiteMapNode>.</xref:System.Web.SiteMapNode> 연결</xref:System.Web.SiteMapNode> </xref:System.Web.UI.WebControls.SiteMapNodeItem> </xref:System.Web.UI.WebControls.SiteMapPath> </xref:System.Web.UI.WebControls.SiteMapPath.ItemCreated> 만든된 노드 항목을 해당 데이터에 바인딩하기 전에 OnItemCreated 메서드가 호출 됩니다. 사용자 정의 루틴을 수행 하는 이벤트 처리 메서드를 제공할 수 있습니다 때마다는 <xref:System.Web.UI.WebControls.SiteMapNodeItem>만들어집니다.</xref:System.Web.UI.WebControls.SiteMapNodeItem>       이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [NIB: 이벤트를 발생 시키는](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)합니다.       OnItemCreated 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  example:
  - "The following code example demonstrates how to call the OnItemCreated method after creating a <xref:System.Web.UI.WebControls.SiteMapNodeItem> within the <xref:System.Web.UI.WebControls.SiteMapPath.InitializeItem%2A> method. This code example is part of a larger example provided for the <xref:System.Web.UI.WebControls.SiteMapPath> class.  \n  \n [!code-vb[Urtue.Samples.Alexkr.DropDownNavigationPath_1#3](~/add/codesnippet/visualbasic/75986b20-78b2-4533-871b-_1.vb)]\n [!code-cs[Urtue.Samples.Alexkr.DropDownNavigationPath_1#3](~/add/codesnippet/csharp/75986b20-78b2-4533-871b-_1.cs)]"
  syntax:
    content: protected virtual void OnItemCreated (System.Web.UI.WebControls.SiteMapNodeItemEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.SiteMapNodeItemEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.SiteMapNodeItemEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Web.UI.WebControls.SiteMapPath.OnItemCreated*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SiteMapPath.OnItemDataBound(System.Web.UI.WebControls.SiteMapNodeItemEventArgs)
  id: OnItemDataBound(System.Web.UI.WebControls.SiteMapNodeItemEventArgs)
  parent: System.Web.UI.WebControls.SiteMapPath
  langs:
  - csharp
  name: OnItemDataBound(SiteMapNodeItemEventArgs)
  nameWithType: SiteMapPath.OnItemDataBound(SiteMapNodeItemEventArgs)
  fullName: System.Web.UI.WebControls.SiteMapPath.OnItemDataBound(SiteMapNodeItemEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "발생는 <xref href=&quot;System.Web.UI.WebControls.SiteMapPath.ItemDataBound&quot;> </xref> 의 이벤트는 <xref href=&quot;System.Web.UI.WebControls.SiteMapPath&quot;> </xref> 제어 합니다."
  remarks: "<xref:System.Web.UI.WebControls.SiteMapPath.ItemDataBound>이벤트가 발생할 때 <xref:System.Web.UI.WebControls.SiteMapPath>제어 해당 <xref:System.Web.UI.WebControls.SiteMapPath.SiteMapProvider%2A>.</xref:System.Web.UI.WebControls.SiteMapPath.SiteMapProvider%2A> 에서 제공 하는 데이터에 바인딩할</xref:System.Web.UI.WebControls.SiteMapPath> </xref:System.Web.UI.WebControls.SiteMapPath.ItemDataBound> 이 옵션을 사용 하면이 이벤트가 발생할 때마다 데이터베이스 또는 표시 된 콘텐츠를 업데이트 하는 등의 사용자 정의 루틴을 수행 하는 이벤트 처리 메서드를 제공할 수 있습니다.       이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [NIB: 이벤트를 발생 시키는](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)합니다.       OnItemDataBound 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnItemDataBound (System.Web.UI.WebControls.SiteMapNodeItemEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.SiteMapNodeItemEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.SiteMapNodeItemEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Web.UI.WebControls.SiteMapPath.OnItemDataBound*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SiteMapPath.ParentLevelsDisplayed
  id: ParentLevelsDisplayed
  parent: System.Web.UI.WebControls.SiteMapPath
  langs:
  - csharp
  name: ParentLevelsDisplayed
  nameWithType: SiteMapPath.ParentLevelsDisplayed
  fullName: System.Web.UI.WebControls.SiteMapPath.ParentLevelsDisplayed
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "부모 노드는 현재 표시 된 노드에 상대적인 컨트롤은 표시의 수준 수를 가져오거나 설정 합니다."
  remarks: "ParentLevelsDisplayed 속성은 부모 노드의 수준에서 표시를 제어는 <xref:System.Web.UI.WebControls.SiteMapPath>현재 컨텍스트 노드에 위 컨트롤.</xref:System.Web.UI.WebControls.SiteMapPath> 기본적으로 모든 부모 및 상위 노드 위에 현재 컨텍스트 노드에 표시 됩니다.       이 속성의 값은 뷰 상태에 저장 됩니다.       테마 또는 스타일 시트 테마가이 속성을 설정할 수 없습니다. 자세한 내용은 참조 <xref:System.Web.UI.ThemeableAttribute>및 [ASP.NET 테마와 스킨](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.ThemeableAttribute>"
  syntax:
    content: public virtual int ParentLevelsDisplayed { get; set; }
    return:
      type: System.Int32
      description: "부모 노드는 현재 컨텍스트 노드에 상대적인 표시의 수준 수를 지정 하는 정수입니다. 기본값은-1 컨트롤이 표시 하는 상위 수준의 수에 제한이 없음을 나타냅니다."
  overload: System.Web.UI.WebControls.SiteMapPath.ParentLevelsDisplayed*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "ParentLevelsDisplayed에 대 한 값은-1 보다 작습니다."
  platform:
  - net462
- uid: System.Web.UI.WebControls.SiteMapPath.PathDirection
  id: PathDirection
  parent: System.Web.UI.WebControls.SiteMapPath
  langs:
  - csharp
  name: PathDirection
  nameWithType: SiteMapPath.PathDirection
  fullName: System.Web.UI.WebControls.SiteMapPath.PathDirection
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "탐색 경로 노드 렌더링 되는 순서를 가져오거나 설정 합니다."
  remarks: "PathDirection 설정 <xref:System.Web.UI.WebControls.PathDirection>오른쪽으로 왼쪽의 탐색 경로 표시 하려면 탐색 경로 표시 이동 하는 왼쪽에서 사이트 맵 노드의 오른쪽.</xref:System.Web.UI.WebControls.PathDirection> 즉, 루트 노드 맨 왼쪽에 후속 각 노드 오른쪽에는 다음 위치에는 및 현재 노드는 맨 오른쪽에 합니다.       PathDirection 설정 <xref:System.Web.UI.WebControls.PathDirection>오른쪽에서 왼쪽으로 탐색 경로 표시 하려는 경우.</xref:System.Web.UI.WebControls.PathDirection> 즉, 루트 노드 맨 오른쪽에 표시 하 고 현재 노드가 맨 왼쪽에 표시 되도록 노드 순서가 반대로 되어 있습니다. 드물지만,이 순서 지정에 사용할 수 지역화 Web Forms 페이지 및 <xref:System.Web.UI.WebControls.SiteMapPath>오른쪽에서 왼쪽으로 읽는 언어에 대 한 제어 합니다.</xref:System.Web.UI.WebControls.SiteMapPath>       이 속성의 값은 뷰 상태에 저장 됩니다."
  example:
  - "The following code example demonstrates how to declaratively set the PathDirection property of a <xref:System.Web.UI.WebControls.SiteMapPath> in a Web Forms page.  \n  \n [!code-vb[System.Web.UI.WebControls.NavigationPath_decl_4#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_37_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.NavigationPath_decl_4#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_37_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.PathDirection PathDirection { get; set; }
    return:
      type: System.Web.UI.WebControls.PathDirection
      description: "A <xref href=&quot;System.Web.UI.WebControls.PathDirection&quot;> </xref> 탐색 노드가에서 렌더링 되는 계층적 순서를 나타내는입니다. 기본값은 <xref href=&quot;System.Web.UI.WebControls.PathDirection&quot;> </xref>, 왼쪽에서 오른쪽으로 나타냅니다에서 노드를 현재 노드에 최상위 노드를 계층적 순서로 렌더링 됩니다."
  overload: System.Web.UI.WebControls.SiteMapPath.PathDirection*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "PathDirection에 대 한 값 중 하나가 아닙니다 기본 <xref href=&quot;System.Web.UI.WebControls.PathDirection&quot;> </xref> 열거형입니다."
  platform:
  - net462
- uid: System.Web.UI.WebControls.SiteMapPath.PathSeparator
  id: PathSeparator
  parent: System.Web.UI.WebControls.SiteMapPath
  langs:
  - csharp
  name: PathSeparator
  nameWithType: SiteMapPath.PathSeparator
  fullName: System.Web.UI.WebControls.SiteMapPath.PathSeparator
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "구분 하는 문자열을 가져오거나 설정 합니다. <xref href=&quot;System.Web.UI.WebControls.SiteMapPath&quot;> </xref> 렌더링 된 탐색 경로에서 노드."
  remarks: "경우는 <xref:System.Web.UI.WebControls.SiteMapPath.PathSeparatorStyle%2A>은 PathSeparator 속성에 적용 되를 정의 합니다.</xref:System.Web.UI.WebControls.SiteMapPath.PathSeparatorStyle%2A> 그러나 경우는 <xref:System.Web.UI.WebControls.SiteMapPath.PathSeparatorTemplate%2A>속성이 정의 된 두는 PathSeparator 및 <xref:System.Web.UI.WebControls.SiteMapPath.PathSeparatorStyle%2A>속성은 무시 됩니다.</xref:System.Web.UI.WebControls.SiteMapPath.PathSeparatorStyle%2A> </xref:System.Web.UI.WebControls.SiteMapPath.PathSeparatorTemplate%2A>       이 속성의 값은 뷰 상태에 저장 됩니다.       이 속성의 값으로 설정 하면 디자이너 도구를 사용 하 여 리소스 파일에 자동으로 저장 될 수 있습니다. 자세한 내용은 참조 <xref:System.ComponentModel.LocalizableAttribute>및 [전역화 및 지역화](~/add/includes/ajax-current-ext-md.md).</xref:System.ComponentModel.LocalizableAttribute>"
  example:
  - "The following example demonstrates how to set the PathSeparator property of a <xref:System.Web.UI.WebControls.SiteMapPath> to a string other than the default.  \n  \n [!code-vb[System.Web.UI.WebControls.NavigationPath_decl_3#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_604_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.NavigationPath_decl_3#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_604_1.aspx)]"
  syntax:
    content: public virtual string PathSeparator { get; set; }
    return:
      type: System.String
      description: "탐색 경로에서 노드에 대 한 구분 기호를 나타내는 문자열입니다. 기본값은 &quot; &gt; &quot;, 기본값에 해당 하며 왼쪽에서 오른쪽으로 가리키는 문자 <xref href=&quot;System.Web.UI.WebControls.PathDirection&quot;> </xref>, 없도록 설정 <xref href=&quot;System.Web.UI.WebControls.PathDirection&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.SiteMapPath.PathSeparator*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SiteMapPath.PathSeparatorStyle
  id: PathSeparatorStyle
  parent: System.Web.UI.WebControls.SiteMapPath
  langs:
  - csharp
  name: PathSeparatorStyle
  nameWithType: SiteMapPath.PathSeparatorStyle
  fullName: System.Web.UI.WebControls.SiteMapPath.PathSeparatorStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "에 사용 되는 스타일을 가져옵니다는 <xref:System.Web.UI.WebControls.SiteMapPath.PathSeparator*>문자열.</xref:System.Web.UI.WebControls.SiteMapPath.PathSeparator*>"
  remarks: "PathSeparatorStyle 속성을 사용 하 여 탐색 경로 노드 사이 표시 되는 경로 구분 기호의 모양을 제어 합니다. 일반 스타일 설정에는 글꼴 속성 및 사용 하는 글꼴에 대 한 전경색은 <xref:System.Web.UI.WebControls.SiteMapPath.PathSeparator%2A>속성.</xref:System.Web.UI.WebControls.SiteMapPath.PathSeparator%2A>       경우는 <xref:System.Web.UI.WebControls.SiteMapPath.PathSeparatorTemplate%2A>속성이 정의 된 두는 <xref:System.Web.UI.WebControls.SiteMapPath.PathSeparator%2A>및 PathSeparatorStyle 속성은 무시 됩니다.</xref:System.Web.UI.WebControls.SiteMapPath.PathSeparator%2A> </xref:System.Web.UI.WebControls.SiteMapPath.PathSeparatorTemplate%2A>"
  syntax:
    content: public System.Web.UI.WebControls.Style PathSeparatorStyle { get; }
    return:
      type: System.Web.UI.WebControls.Style
      description: "<xref href=&quot;System.Web.UI.WebControls.Style&quot;> </xref> 의 스타일 설정을 포함 하는 <xref href=&quot;System.Web.UI.WebControls.SiteMapPath&quot;> </xref> 컨트롤의 <xref:System.Web.UI.WebControls.SiteMapPath.PathSeparator*>텍스트.</xref:System.Web.UI.WebControls.SiteMapPath.PathSeparator*>"
  overload: System.Web.UI.WebControls.SiteMapPath.PathSeparatorStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SiteMapPath.PathSeparatorTemplate
  id: PathSeparatorTemplate
  parent: System.Web.UI.WebControls.SiteMapPath
  langs:
  - csharp
  name: PathSeparatorTemplate
  nameWithType: SiteMapPath.PathSeparatorTemplate
  fullName: System.Web.UI.WebControls.SiteMapPath.PathSeparatorTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "사이트 탐색 경로의 경로 구분 기호에 사용할 컨트롤 템플릿을 가져오거나 설정 합니다."
  remarks: "PathSeparatorTemplate로 설정 된 <xref:System.Web.UI.ITemplate>사용 하는 개체는 <xref:System.Web.UI.WebControls.Image>또는 다른 컨트롤을 <xref:System.Web.UI.WebControls.Label>, 대신 탐색 노드 사이의 경로 구분 기호로 <xref:System.Web.UI.WebControls.SiteMapPath.PathSeparator%2A>문자열.</xref:System.Web.UI.WebControls.SiteMapPath.PathSeparator%2A> </xref:System.Web.UI.WebControls.Label> </xref:System.Web.UI.WebControls.Image> </xref:System.Web.UI.ITemplate>       PathSeparatorTemplate 속성을 설정 하는 경우 서식 파일 모두 재정의 <xref:System.Web.UI.WebControls.SiteMapPath.PathSeparator%2A>텍스트 표시 및 <xref:System.Web.UI.WebControls.SiteMapPath.PathSeparatorStyle%2A>적용</xref:System.Web.UI.WebControls.SiteMapPath.PathSeparatorStyle%2A> </xref:System.Web.UI.WebControls.SiteMapPath.PathSeparator%2A>       모든 웹 서버 컨트롤에 선언적으로 PathSeparatorTemplate 속성을 설정할 수 있습니다 및 ASP.NET 인프라 <xref:System.Web.UI.ITemplate>.</xref:System.Web.UI.ITemplate> 웹 서버 컨트롤을 래핑하는 데 필요한 단계를 수행 합니다. 그러나 웹 서버 컨트롤 구현 하지 않습니다는 <xref:System.Web.UI.ITemplate>인터페이스 이므로, 작업할 때의 <xref:System.Web.UI.ITemplate>속성을 프로그래밍 방식으로 작성 해야 합니다는 <xref:System.Web.UI.ITemplate>모든 템플릿 코드에 대 한 래퍼입니다.</xref:System.Web.UI.ITemplate> </xref:System.Web.UI.ITemplate> </xref:System.Web.UI.ITemplate> 그런 다음 PathSeparatorTemplate 속성이 설정 된 인스턴스에 <xref:System.Web.UI.ITemplate>래퍼.</xref:System.Web.UI.ITemplate>"
  example:
  - "The following code example demonstrates how to define an <xref:System.Web.UI.WebControls.Image> as a PathSeparatorTemplate declaratively in a Web Form.  \n  \n [!code-cs[System.Web.UI.WebControls.NavigationPath_decl_2#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_835_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.NavigationPath_decl_2#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_835_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate PathSeparatorTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "<xref href=&quot;System.Web.UI.ITemplate&quot;> </xref> <xref:System.Web.UI.ITemplate.InstantiateIn*>탐색 경로의 경로 구분 기호에 대 한 사용자 지정 콘텐츠를 렌더링 하지 메서드</xref:System.Web.UI.ITemplate.InstantiateIn*> 를 구현 하는 개체"
  overload: System.Web.UI.WebControls.SiteMapPath.PathSeparatorTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SiteMapPath.Provider
  id: Provider
  parent: System.Web.UI.WebControls.SiteMapPath
  langs:
  - csharp
  name: Provider
  nameWithType: SiteMapPath.Provider
  fullName: System.Web.UI.WebControls.SiteMapPath.Provider
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "가져오거나는 <xref href=&quot;System.Web.SiteMapProvider&quot;> </xref> 웹 서버 컨트롤에 연결 되어 있습니다."
  remarks: "공급자 속성을 컨트롤을 사용 하면 사이트 맵 공급자의 인스턴스를 지정 합니다. 이 공급자로 식별 되는 공급자와에서 다를 수 있습니다는 <xref:System.Web.UI.WebControls.SiteMapPath.SiteMapProvider%2A>속성인 경우 설정 합니다.</xref:System.Web.UI.WebControls.SiteMapPath.SiteMapProvider%2A>"
  syntax:
    content: public System.Web.SiteMapProvider Provider { get; set; }
    return:
      type: System.Web.SiteMapProvider
      description: "A <xref href=&quot;System.Web.SiteMapProvider&quot;> </xref> 컨트롤에 연결된 된 인스턴스입니다. 공급자가 없습니다 명시적으로 설정 된 경우에 기본 사이트 맵 공급자 사용 됩니다."
  overload: System.Web.UI.WebControls.SiteMapPath.Provider*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "The provider named by the <xref:System.Web.UI.WebControls.SiteMapDataSource.SiteMapProvider*> property is not available.  \n  \n \\- or -  \n  \n There is no default provider configured for the site."
  platform:
  - net462
- uid: System.Web.UI.WebControls.SiteMapPath.Render(System.Web.UI.HtmlTextWriter)
  id: Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.SiteMapPath
  langs:
  - csharp
  name: Render(HtmlTextWriter)
  nameWithType: SiteMapPath.Render(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.SiteMapPath.Render(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "기록의 <xref href=&quot;System.Web.UI.WebControls.CompositeControl&quot;> </xref> 내용을 지정 된 <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> 개체에 대 한 클라이언트에 표시 합니다."
  syntax:
    content: protected override void Render (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> 렌더링된 된 출력을 받는입니다."
  overload: System.Web.UI.WebControls.SiteMapPath.Render*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SiteMapPath.RenderContents(System.Web.UI.HtmlTextWriter)
  id: RenderContents(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.SiteMapPath
  langs:
  - csharp
  name: RenderContents(HtmlTextWriter)
  nameWithType: SiteMapPath.RenderContents(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.SiteMapPath.RenderContents(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "노드는 <xref href=&quot;System.Web.UI.WebControls.SiteMapPath&quot;> </xref> 제어 합니다."
  remarks: "<xref:System.Web.UI.WebControls.SiteMapPath>경우 해당 액세스 가능성 렌더링을 수행 하려면 RenderContents 메서드를 재정의 하는 컨트롤 <xref:System.Web.UI.WebControls.SiteMapPath.SkipLinkText%2A> <xref:System.String.Empty?displayProperty=fullName>.</xref:System.String.Empty?displayProperty=fullName> 속성이 설정 되지 않은</xref:System.Web.UI.WebControls.SiteMapPath.SkipLinkText%2A> </xref:System.Web.UI.WebControls.SiteMapPath>"
  syntax:
    content: protected override void RenderContents (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> 웹 페이지에 콘텐츠를 작성 하는 데 사용 하는 출력 스트림을 나타내는입니다."
  overload: System.Web.UI.WebControls.SiteMapPath.RenderContents*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SiteMapPath.RenderCurrentNodeAsLink
  id: RenderCurrentNodeAsLink
  parent: System.Web.UI.WebControls.SiteMapPath
  langs:
  - csharp
  name: RenderCurrentNodeAsLink
  nameWithType: SiteMapPath.RenderCurrentNodeAsLink
  fullName: System.Web.UI.WebControls.SiteMapPath.RenderCurrentNodeAsLink
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "현재 표시 된 페이지를 나타내는 사이트 탐색 노드 하이퍼링크로 렌더링 되는지 여부를 나타냅니다."
  remarks: "현재 표시 된 페이지를 나타내는 노드는 <xref:System.Web.SiteMap.CurrentNode%2A?displayProperty=fullName>.</xref:System.Web.SiteMap.CurrentNode%2A?displayProperty=fullName> 해당 <xref:System.Web.SiteMapNode.Title%2A>현재 노드에 대 한 표시 텍스트를 지정 하는 속성 및 해당 <xref:System.Web.SiteMapNode.Url%2A>속성 하이퍼링크를 만드는 데 사용 됩니다.</xref:System.Web.SiteMapNode.Url%2A> </xref:System.Web.SiteMapNode.Title%2A> 기본적으로 잘못 된 폼 게시를 방지 하기 위해 현재 페이지에 대 한 하이퍼링크가 렌더링 됩니다.       이 속성의 값은 뷰 상태에 저장 됩니다."
  example:
  - "The following code example demonstrates how to set the RenderCurrentNodeAsLink property to `true` to make the current node a hyperlink when the <xref:System.Web.UI.WebControls.SiteMapPath> control renders its content.  \n  \n [!code-vb[System.Web.UI.WebControls.NavigationPath_decl_4#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_212_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.NavigationPath_decl_4#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_212_1.aspx)]"
  syntax:
    content: public virtual bool RenderCurrentNodeAsLink { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>현재 페이지를 나타내는 노드; 하이퍼링크로 렌더링 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.SiteMapPath.RenderCurrentNodeAsLink*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SiteMapPath.RootNodeStyle
  id: RootNodeStyle
  parent: System.Web.UI.WebControls.SiteMapPath
  langs:
  - csharp
  name: RootNodeStyle
  nameWithType: SiteMapPath.RootNodeStyle
  fullName: System.Web.UI.WebControls.SiteMapPath.RootNodeStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "루트 노드 표시 텍스트에 대 한 스타일을 가져옵니다."
  remarks: "RootNodeStyle 속성을 사용 하 여 탐색 경로의 루트 노드에 대 한 표시 텍스트의 모양을 제어 합니다. 기본적으로 표시 텍스트에 지정 되는 <xref:System.Web.SiteMapNode.Title%2A>속성은 <xref:System.Web.SiteMapNode>페이지를 나타내는.</xref:System.Web.SiteMapNode> </xref:System.Web.SiteMapNode.Title%2A> 일반 스타일 설정 사용자 지정 배경색, 전경색, 글꼴 속성 및 노드 간격을 포함 합니다.       에 대 한 <xref:System.Web.UI.WebControls.SiteMapPath>노드, 스타일 속성은 다음과 같은 순서로 단일 스타일에 병합: 1.</xref:System.Web.UI.WebControls.SiteMapPath>  <xref:System.Web.UI.WebControls.SiteMapPath.NodeStyle%2A>2입니다.</xref:System.Web.UI.WebControls.SiteMapPath.NodeStyle%2A>  <xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A>또는 노드 유형에 따라 RootNodeStyle 합니다.</xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A>      > [!NOTE] > 노드의 기본 밑줄 스타일으로 명시적으로 설정 된 경우가 아니면 표시 되지 않습니다 취소선 또는 윗줄 스타일을 노드 글꼴 스타일을 설정 하면 `true`합니다.       경우는 <xref:System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate%2A>속성이 정의 된, RootNodeStyle 속성은 무시 됩니다.</xref:System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate%2A>"
  example:
  - "The following code example demonstrates how to declaratively set the RootNodeStyle attributes on a <xref:System.Web.UI.WebControls.SiteMapPath> control.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.UI.WebControls.NavigationPath_decl_1#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_696_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.NavigationPath_decl_1#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_696_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.Style RootNodeStyle { get; }
    return:
      type: System.Web.UI.WebControls.Style
      description: "<xref href=&quot;System.Web.UI.WebControls.Style&quot;> </xref> 에 대 한 스타일 설정을 포함 하는 <xref href=&quot;System.Web.UI.WebControls.SiteMapPath&quot;> </xref> 루트 노드 표시 텍스트를 제어 합니다."
  overload: System.Web.UI.WebControls.SiteMapPath.RootNodeStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate
  id: RootNodeTemplate
  parent: System.Web.UI.WebControls.SiteMapPath
  langs:
  - csharp
  name: RootNodeTemplate
  nameWithType: SiteMapPath.RootNodeTemplate
  fullName: System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "사이트 탐색 경로의 루트 노드에 대해 사용 하도록 컨트롤 템플릿을 가져오거나 설정 합니다."
  remarks: "RootNodeTemplate 설정는 <xref:System.Web.UI.ITemplate>사용 하는 개체는 <xref:System.Web.UI.WebControls.Image>컨트롤 또는 다른 컨트롤을 <xref:System.Web.UI.WebControls.Label>문자열 대신 루트 노드 사용자 인터페이스 요소로.</xref:System.Web.UI.WebControls.Label> </xref:System.Web.UI.WebControls.Image> </xref:System.Web.UI.ITemplate>       RootNodeTemplate 속성을 설정 하는 경우 서식 파일 재정의 루트 탐색 노드 텍스트를 표시 및 <xref:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle%2A>적용</xref:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle%2A> 재정의 <xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeTemplate%2A>및 <xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A>루트 페이지는 현재 표시 된 경우 속성.</xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A> </xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeTemplate%2A>       모든 웹 서버 컨트롤에 선언적으로 RootNodeTemplate 속성을 설정할 수 있습니다 및 ASP.NET 인프라 <xref:System.Web.UI.ITemplate>.</xref:System.Web.UI.ITemplate> 웹 서버 컨트롤을 래핑하는 데 필요한 단계를 수행 합니다. 그러나 웹 서버 컨트롤 구현 하지 않습니다는 <xref:System.Web.UI.ITemplate>인터페이스 이므로, 작업할 때의 <xref:System.Web.UI.ITemplate>속성을 프로그래밍 방식으로 작성 해야 합니다는 <xref:System.Web.UI.ITemplate>모든 템플릿 코드에 대 한 래퍼입니다.</xref:System.Web.UI.ITemplate> </xref:System.Web.UI.ITemplate> </xref:System.Web.UI.ITemplate> 그런 다음 RootNodeTemplate 속성이 설정 된 인스턴스에 <xref:System.Web.UI.ITemplate>래퍼.</xref:System.Web.UI.ITemplate>"
  example:
  - "The following code example demonstrates how to programmatically define a class that implements the <xref:System.Web.UI.ITemplate> interface to wrap an <xref:System.Web.UI.WebControls.Image> control. Then, the RootNodeTemplate property is set to an instance of the class.  \n  \n [!code-vb[System.Web.UI.WebControls.NavigationPath_decl_3#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_178_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.NavigationPath_decl_3#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_178_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate RootNodeTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "<xref href=&quot;System.Web.UI.ITemplate&quot;> </xref> <xref:System.Web.UI.ITemplate.InstantiateIn*>탐색 경로의 루트 노드에 대 한 사용자 지정 콘텐츠를 렌더링 하지 메서드</xref:System.Web.UI.ITemplate.InstantiateIn*> 를 구현 하는 개체"
  overload: System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SiteMapPath.SaveViewState
  id: SaveViewState
  parent: System.Web.UI.WebControls.SiteMapPath
  langs:
  - csharp
  name: SaveViewState()
  nameWithType: SiteMapPath.SaveViewState()
  fullName: System.Web.UI.WebControls.SiteMapPath.SaveViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "뷰 상태에 대 한 변경 내용을 저장 하는 <xref href=&quot;System.Web.UI.WebControls.SiteMapPath&quot;> </xref> 제어 합니다."
  remarks: "뷰 상태는 서버 컨트롤의 속성 값의 누적 합니다. 이러한 값이 서버 컨트롤의 <xref:System.Web.UI.Control.ViewState%2A>속성을 <xref:System.Web.UI.StateBag>클래스</xref:System.Web.UI.StateBag> 의 인스턴스인</xref:System.Web.UI.Control.ViewState%2A> 에 자동으로 포함 됩니다. 그런 다음이 속성의 값은 저장 상태 서버 컨트롤 수명 주기 단계 후 문자열 개체에 유지 됩니다.       이 문자열 개체에 저장 된 변수도 클라이언트에 반환 됩니다 뷰 상태가 저장 되는 `Hidden` HTML 요소입니다. 사용자 지정 서버 컨트롤을 만들 때이 메서드를 재정의 하 고 서버 컨트롤의 수정 하 여 효율성을 개선 <xref:System.Web.UI.Control.ViewState%2A>속성.</xref:System.Web.UI.Control.ViewState%2A>"
  syntax:
    content: protected override object SaveViewState ();
    parameters: []
    return:
      type: System.Object
      description: "서버 컨트롤 현재 뷰 상태를 반환합니다. 컨트롤과 연결 된 뷰 상태가 없으면이 메서드가 반환 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.SiteMapPath.SaveViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SiteMapPath.ShowToolTips
  id: ShowToolTips
  parent: System.Web.UI.WebControls.SiteMapPath
  langs:
  - csharp
  name: ShowToolTips
  nameWithType: SiteMapPath.ShowToolTips
  fullName: System.Web.UI.WebControls.SiteMapPath.ShowToolTips
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "나타내는 값을 가져오거나 여부는 <xref href=&quot;System.Web.UI.WebControls.SiteMapPath&quot;> </xref> 컨트롤에 대 한 하이퍼링크로 연결 된 탐색 노드 추가 하이퍼링크 특성을 작성 합니다. 클라이언트 지원 여부에 따라 설정 하는 추가 특성이 있는 하이퍼링크를 마우스로 도구 설명이 표시 됩니다."
  remarks: "가장 일반적인 시나리오는 `Title` HTML 특성이 있는 HTML에 대 한 `A Href` 하이퍼링크입니다. 예를 들어 Microsoft Internet Explorer 4.0 이상 및 Netscape 6.0 및 이후 구현에서 `Title` Opera 3.0과 이상 구현 하는 동안 가리키기 도구 설명으로 특성은 `Title` 도구 설명 및 Opera의 도구 모음 영역의 캡션으로 특성입니다. 일부 클라이언트 추가 하이퍼링크 특성에 대 한 도구 설명을 표시 합니다.       이 속성의 값은 뷰 상태에 저장 됩니다.       테마 또는 스타일 시트 테마가이 속성을 설정할 수 없습니다. 자세한 내용은 참조 <xref:System.Web.UI.ThemeableAttribute>및 [ASP.NET 테마와 스킨](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.ThemeableAttribute>"
  example:
  - "The following code example demonstrates how to declaratively set the ShowToolTips property to `false` in a Web Forms page.  \n  \n [!code-vb[System.Web.UI.WebControls.NavigationPath_decl_4#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_861_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.NavigationPath_decl_4#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_861_1.aspx)]"
  syntax:
    content: public virtual bool ShowToolTips { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>하이퍼링크로 연결 된 탐색 노드;에 대 한 대체 텍스트를 작성 해야 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.SiteMapPath.ShowToolTips*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SiteMapPath.SiteMapProvider
  id: SiteMapProvider
  parent: System.Web.UI.WebControls.SiteMapPath
  langs:
  - csharp
  name: SiteMapProvider
  nameWithType: SiteMapPath.SiteMapProvider
  fullName: System.Web.UI.WebControls.SiteMapPath.SiteMapProvider
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "이름을 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.SiteMapProvider&quot;> </xref> 사이트 탐색 컨트롤을 렌더링 하는 데 사용 합니다."
  remarks: "<xref:System.Web.UI.WebControls.SiteMapPath>컨트롤이 사용 하는 <xref:System.Web.SiteMapProvider>렌더링 사이트 맵 데이터에 대 한 소스로.</xref:System.Web.SiteMapProvider> </xref:System.Web.UI.WebControls.SiteMapPath> SiteMapProvider 속성이 설정 되지 않은 경우, <xref:System.Web.UI.WebControls.SiteMapPath> <xref:System.Web.SiteMap.Provider%2A?displayProperty=fullName>즉, <xref:System.Web.SiteMapProvider>일반적으로 <xref:System.Web.XmlSiteMapProvider>.</xref:System.Web.XmlSiteMapProvider> 구성 계층 구조의 사이트에 대해 정의 된</xref:System.Web.SiteMapProvider> 기본 속성</xref:System.Web.SiteMap.Provider%2A?displayProperty=fullName> 으로 식별 된 공급자를 사용 하는 컨트롤</xref:System.Web.UI.WebControls.SiteMapPath> 속성 지시 하는 SiteMapProvider 설정는 <xref:System.Web.UI.WebControls.SiteMapPath>공급자를 정의 하는 사이트 맵 데이터를 렌더링 합니다.</xref:System.Web.UI.WebControls.SiteMapPath>       <xref:System.Web.UI.WebControls.SiteMapPath>컨트롤이와 직접 작동 하는 <xref:System.Web.SiteMapProvider>및 해당 <xref:System.Web.SiteMapNode>사이트 맵 정보를 표시 하는 개체입니다.</xref:System.Web.SiteMapNode> </xref:System.Web.SiteMapProvider> </xref:System.Web.UI.WebControls.SiteMapPath> 와 같은 다른 컨트롤 <xref:System.Web.UI.WebControls.Menu>및 <xref:System.Web.UI.WebControls.TreeView>에서 제공 하는 데이터 추상화 필요는 <xref:System.Web.UI.WebControls.SiteMapDataSource>클래스 동일한 사이트 탐색 정보를 표시 합니다.</xref:System.Web.UI.WebControls.SiteMapDataSource> </xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.Menu>       이 속성의 값은 뷰 상태에 저장 됩니다.       테마 또는 스타일 시트 테마가이 속성을 설정할 수 없습니다. 자세한 내용은 참조 <xref:System.Web.UI.ThemeableAttribute>및 [ASP.NET 테마와 스킨](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.ThemeableAttribute>"
  syntax:
    content: public virtual string SiteMapProvider { get; set; }
    return:
      type: System.String
      description: "이름은 <xref href=&quot;System.Web.SiteMapProvider&quot;> </xref> 탐색 구조를 정의 하는 <xref href=&quot;System.Web.UI.WebControls.SiteMapPath&quot;> </xref> 표시 합니다. 에 포함 된 모든 사용 가능한 공급자는 &lt;xref:System.Web.SiteMap.Providers%2A?displayProperty=fullName&gt; 컬렉션, 열거 및 이름을 사용 하 여 검색할 수는 <xref:System.Web.SiteMapProviderCollection.Item*>속성.</xref:System.Web.SiteMapProviderCollection.Item*>"
  overload: System.Web.UI.WebControls.SiteMapPath.SiteMapProvider*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SiteMapPath.SkipLinkText
  id: SkipLinkText
  parent: System.Web.UI.WebControls.SiteMapPath
  langs:
  - csharp
  name: SkipLinkText
  nameWithType: SiteMapPath.SkipLinkText
  fullName: System.Web.UI.WebControls.SiteMapPath.SkipLinkText
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "컨트롤의 내용을 건너뛸 하기 위해 화면 판독기에 대 한 대체 텍스트를 렌더링 하는 데 사용 되는 값을 가져오거나 설정 합니다."
  remarks: "SkipLinkText은 웹 페이지에 차이가 화면 판독기의 사용자에 게 액세스할 수 있도록 설정할 수 있는 속성입니다. 사이트 맵 데이터를 표시 하는 컨트롤 등의 여러 페이지에서 반복 되는 콘텐츠를 포함 하는 웹 사이트는 화면 판독기가 반복 된 콘텐츠를 소리내어 읽어주는 되지 않도록 건너뛸 수 있는 메커니즘을 제공할 수 있습니다.       <xref:System.Web.UI.WebControls.SiteMapPath>전체 컨트롤을 화면 판독기가 건너뛸 수에 대 한 방법으로는 SkipLinkText 속성을 제공 합니다.</xref:System.Web.UI.WebControls.SiteMapPath>  SkipLinkText 속성을 설정 하는 경우 사용자에 게 콘텐츠 끝으로 이동 하는 옵션 제공 대체 텍스트를 사용 하 여 보이지 않는 이미지 렌더링 됩니다. 화면 판독기 대체 텍스트를 소리내어 읽어주는 있지만 이미지 페이지의 시각적 흐름을 방해 하지 않습니다. 속성은 화면 판독기가 컨트롤을 건너뛰지 기본적으로 &quot;탐색 건너뛰기 링크&quot;로 설정 됩니다. 이 동작을 사용 하지 않도록 설정 하려는 경우 <xref:System.String.Empty?displayProperty=fullName>.</xref:System.String.Empty?displayProperty=fullName> 속성을 설정 합니다.       이 속성의 값은 뷰 상태에 저장 됩니다.       이 속성의 값으로 설정 하면 디자이너 도구를 사용 하 여 리소스 파일에 자동으로 저장 될 수 있습니다. 자세한 내용은 참조 <xref:System.ComponentModel.LocalizableAttribute>및 [전역화 및 지역화](~/add/includes/ajax-current-ext-md.md).</xref:System.ComponentModel.LocalizableAttribute>"
  syntax:
    content: public virtual string SkipLinkText { get; set; }
    return:
      type: System.String
      description: "하는 문자열은 <xref href=&quot;System.Web.UI.WebControls.SiteMapPath&quot;> </xref> 컨트롤 화면 판독기에 대 한 힌트를 보이지 않는 이미지로 대체 텍스트로 렌더링 합니다. 기본값은 &quot;탐색 건너뛰기 링크&quot;입니다."
  overload: System.Web.UI.WebControls.SiteMapPath.SkipLinkText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SiteMapPath.TrackViewState
  id: TrackViewState
  parent: System.Web.UI.WebControls.SiteMapPath
  langs:
  - csharp
  name: TrackViewState()
  nameWithType: SiteMapPath.TrackViewState()
  fullName: System.Web.UI.WebControls.SiteMapPath.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "변경 내용을 추적은 <xref href=&quot;System.Web.UI.WebControls.SiteMapPath&quot;> </xref> 컨트롤의 뷰 상태입니다."
  syntax:
    content: protected override void TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.SiteMapPath.TrackViewState*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.CompositeControl
  isExternal: false
  name: System.Web.UI.WebControls.CompositeControl
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Web.UI.WebControls.SiteMapPath.#ctor
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: SiteMapPath()
  nameWithType: SiteMapPath.SiteMapPath()
  fullName: System.Web.UI.WebControls.SiteMapPath.SiteMapPath()
- uid: System.Web.UI.WebControls.SiteMapPath.CreateChildControls
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: CreateChildControls()
  nameWithType: SiteMapPath.CreateChildControls()
  fullName: System.Web.UI.WebControls.SiteMapPath.CreateChildControls()
- uid: System.Web.UI.WebControls.SiteMapPath.CreateControlHierarchy
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: CreateControlHierarchy()
  nameWithType: SiteMapPath.CreateControlHierarchy()
  fullName: System.Web.UI.WebControls.SiteMapPath.CreateControlHierarchy()
- uid: System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: CurrentNodeStyle
  nameWithType: SiteMapPath.CurrentNodeStyle
  fullName: System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle
- uid: System.Web.UI.WebControls.Style
  parent: System.Web.UI.WebControls
  isExternal: false
  name: Style
  nameWithType: Style
  fullName: System.Web.UI.WebControls.Style
- uid: System.Web.UI.WebControls.SiteMapPath.CurrentNodeTemplate
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: CurrentNodeTemplate
  nameWithType: SiteMapPath.CurrentNodeTemplate
  fullName: System.Web.UI.WebControls.SiteMapPath.CurrentNodeTemplate
- uid: System.Web.UI.ITemplate
  parent: System.Web.UI
  isExternal: false
  name: ITemplate
  nameWithType: ITemplate
  fullName: System.Web.UI.ITemplate
- uid: System.Web.UI.WebControls.SiteMapPath.DataBind
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: DataBind()
  nameWithType: SiteMapPath.DataBind()
  fullName: System.Web.UI.WebControls.SiteMapPath.DataBind()
- uid: System.Web.UI.WebControls.SiteMapPath.InitializeItem(System.Web.UI.WebControls.SiteMapNodeItem)
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: InitializeItem(SiteMapNodeItem)
  nameWithType: SiteMapPath.InitializeItem(SiteMapNodeItem)
  fullName: System.Web.UI.WebControls.SiteMapPath.InitializeItem(SiteMapNodeItem)
- uid: System.Web.UI.WebControls.SiteMapNodeItem
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SiteMapNodeItem
  nameWithType: SiteMapNodeItem
  fullName: System.Web.UI.WebControls.SiteMapNodeItem
- uid: System.Web.UI.WebControls.SiteMapPath.ItemCreated
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: ItemCreated
  nameWithType: SiteMapPath.ItemCreated
  fullName: System.Web.UI.WebControls.SiteMapPath.ItemCreated
- uid: System.Web.UI.WebControls.SiteMapNodeItemEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SiteMapNodeItemEventHandler
  nameWithType: SiteMapNodeItemEventHandler
  fullName: System.Web.UI.WebControls.SiteMapNodeItemEventHandler
- uid: System.Web.UI.WebControls.SiteMapPath.ItemDataBound
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: ItemDataBound
  nameWithType: SiteMapPath.ItemDataBound
  fullName: System.Web.UI.WebControls.SiteMapPath.ItemDataBound
- uid: System.Web.UI.WebControls.SiteMapPath.LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: LoadViewState(Object)
  nameWithType: SiteMapPath.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.SiteMapPath.LoadViewState(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.SiteMapPath.NodeStyle
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: NodeStyle
  nameWithType: SiteMapPath.NodeStyle
  fullName: System.Web.UI.WebControls.SiteMapPath.NodeStyle
- uid: System.Web.UI.WebControls.SiteMapPath.NodeTemplate
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: NodeTemplate
  nameWithType: SiteMapPath.NodeTemplate
  fullName: System.Web.UI.WebControls.SiteMapPath.NodeTemplate
- uid: System.Web.UI.WebControls.SiteMapPath.OnDataBinding(System.EventArgs)
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: OnDataBinding(EventArgs)
  nameWithType: SiteMapPath.OnDataBinding(EventArgs)
  fullName: System.Web.UI.WebControls.SiteMapPath.OnDataBinding(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.WebControls.SiteMapPath.OnItemCreated(System.Web.UI.WebControls.SiteMapNodeItemEventArgs)
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: OnItemCreated(SiteMapNodeItemEventArgs)
  nameWithType: SiteMapPath.OnItemCreated(SiteMapNodeItemEventArgs)
  fullName: System.Web.UI.WebControls.SiteMapPath.OnItemCreated(SiteMapNodeItemEventArgs)
- uid: System.Web.UI.WebControls.SiteMapNodeItemEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SiteMapNodeItemEventArgs
  nameWithType: SiteMapNodeItemEventArgs
  fullName: System.Web.UI.WebControls.SiteMapNodeItemEventArgs
- uid: System.Web.UI.WebControls.SiteMapPath.OnItemDataBound(System.Web.UI.WebControls.SiteMapNodeItemEventArgs)
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: OnItemDataBound(SiteMapNodeItemEventArgs)
  nameWithType: SiteMapPath.OnItemDataBound(SiteMapNodeItemEventArgs)
  fullName: System.Web.UI.WebControls.SiteMapPath.OnItemDataBound(SiteMapNodeItemEventArgs)
- uid: System.Web.UI.WebControls.SiteMapPath.ParentLevelsDisplayed
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: ParentLevelsDisplayed
  nameWithType: SiteMapPath.ParentLevelsDisplayed
  fullName: System.Web.UI.WebControls.SiteMapPath.ParentLevelsDisplayed
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.SiteMapPath.PathDirection
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: PathDirection
  nameWithType: SiteMapPath.PathDirection
  fullName: System.Web.UI.WebControls.SiteMapPath.PathDirection
- uid: System.Web.UI.WebControls.PathDirection
  parent: System.Web.UI.WebControls
  isExternal: false
  name: PathDirection
  nameWithType: PathDirection
  fullName: System.Web.UI.WebControls.PathDirection
- uid: System.Web.UI.WebControls.SiteMapPath.PathSeparator
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: PathSeparator
  nameWithType: SiteMapPath.PathSeparator
  fullName: System.Web.UI.WebControls.SiteMapPath.PathSeparator
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.SiteMapPath.PathSeparatorStyle
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: PathSeparatorStyle
  nameWithType: SiteMapPath.PathSeparatorStyle
  fullName: System.Web.UI.WebControls.SiteMapPath.PathSeparatorStyle
- uid: System.Web.UI.WebControls.SiteMapPath.PathSeparatorTemplate
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: PathSeparatorTemplate
  nameWithType: SiteMapPath.PathSeparatorTemplate
  fullName: System.Web.UI.WebControls.SiteMapPath.PathSeparatorTemplate
- uid: System.Web.UI.WebControls.SiteMapPath.Provider
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: Provider
  nameWithType: SiteMapPath.Provider
  fullName: System.Web.UI.WebControls.SiteMapPath.Provider
- uid: System.Web.SiteMapProvider
  parent: System.Web
  isExternal: false
  name: SiteMapProvider
  nameWithType: SiteMapProvider
  fullName: System.Web.SiteMapProvider
- uid: System.Web.UI.WebControls.SiteMapPath.Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: Render(HtmlTextWriter)
  nameWithType: SiteMapPath.Render(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.SiteMapPath.Render(HtmlTextWriter)
- uid: System.Web.UI.HtmlTextWriter
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HtmlTextWriter
  fullName: System.Web.UI.HtmlTextWriter
- uid: System.Web.UI.WebControls.SiteMapPath.RenderContents(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: RenderContents(HtmlTextWriter)
  nameWithType: SiteMapPath.RenderContents(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.SiteMapPath.RenderContents(HtmlTextWriter)
- uid: System.Web.UI.WebControls.SiteMapPath.RenderCurrentNodeAsLink
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: RenderCurrentNodeAsLink
  nameWithType: SiteMapPath.RenderCurrentNodeAsLink
  fullName: System.Web.UI.WebControls.SiteMapPath.RenderCurrentNodeAsLink
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.SiteMapPath.RootNodeStyle
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: RootNodeStyle
  nameWithType: SiteMapPath.RootNodeStyle
  fullName: System.Web.UI.WebControls.SiteMapPath.RootNodeStyle
- uid: System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: RootNodeTemplate
  nameWithType: SiteMapPath.RootNodeTemplate
  fullName: System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate
- uid: System.Web.UI.WebControls.SiteMapPath.SaveViewState
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: SaveViewState()
  nameWithType: SiteMapPath.SaveViewState()
  fullName: System.Web.UI.WebControls.SiteMapPath.SaveViewState()
- uid: System.Web.UI.WebControls.SiteMapPath.ShowToolTips
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: ShowToolTips
  nameWithType: SiteMapPath.ShowToolTips
  fullName: System.Web.UI.WebControls.SiteMapPath.ShowToolTips
- uid: System.Web.UI.WebControls.SiteMapPath.SiteMapProvider
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: SiteMapProvider
  nameWithType: SiteMapPath.SiteMapProvider
  fullName: System.Web.UI.WebControls.SiteMapPath.SiteMapProvider
- uid: System.Web.UI.WebControls.SiteMapPath.SkipLinkText
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: SkipLinkText
  nameWithType: SiteMapPath.SkipLinkText
  fullName: System.Web.UI.WebControls.SiteMapPath.SkipLinkText
- uid: System.Web.UI.WebControls.SiteMapPath.TrackViewState
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: TrackViewState()
  nameWithType: SiteMapPath.TrackViewState()
  fullName: System.Web.UI.WebControls.SiteMapPath.TrackViewState()
- uid: System.Web.UI.WebControls.SiteMapPath.#ctor*
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: SiteMapPath
  nameWithType: SiteMapPath.SiteMapPath
- uid: System.Web.UI.WebControls.SiteMapPath.CreateChildControls*
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: CreateChildControls
  nameWithType: SiteMapPath.CreateChildControls
- uid: System.Web.UI.WebControls.SiteMapPath.CreateControlHierarchy*
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: CreateControlHierarchy
  nameWithType: SiteMapPath.CreateControlHierarchy
- uid: System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle*
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: CurrentNodeStyle
  nameWithType: SiteMapPath.CurrentNodeStyle
- uid: System.Web.UI.WebControls.SiteMapPath.CurrentNodeTemplate*
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: CurrentNodeTemplate
  nameWithType: SiteMapPath.CurrentNodeTemplate
- uid: System.Web.UI.WebControls.SiteMapPath.DataBind*
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: DataBind
  nameWithType: SiteMapPath.DataBind
- uid: System.Web.UI.WebControls.SiteMapPath.InitializeItem*
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: InitializeItem
  nameWithType: SiteMapPath.InitializeItem
- uid: System.Web.UI.WebControls.SiteMapPath.LoadViewState*
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: LoadViewState
  nameWithType: SiteMapPath.LoadViewState
- uid: System.Web.UI.WebControls.SiteMapPath.NodeStyle*
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: NodeStyle
  nameWithType: SiteMapPath.NodeStyle
- uid: System.Web.UI.WebControls.SiteMapPath.NodeTemplate*
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: NodeTemplate
  nameWithType: SiteMapPath.NodeTemplate
- uid: System.Web.UI.WebControls.SiteMapPath.OnDataBinding*
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: OnDataBinding
  nameWithType: SiteMapPath.OnDataBinding
- uid: System.Web.UI.WebControls.SiteMapPath.OnItemCreated*
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: OnItemCreated
  nameWithType: SiteMapPath.OnItemCreated
- uid: System.Web.UI.WebControls.SiteMapPath.OnItemDataBound*
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: OnItemDataBound
  nameWithType: SiteMapPath.OnItemDataBound
- uid: System.Web.UI.WebControls.SiteMapPath.ParentLevelsDisplayed*
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: ParentLevelsDisplayed
  nameWithType: SiteMapPath.ParentLevelsDisplayed
- uid: System.Web.UI.WebControls.SiteMapPath.PathDirection*
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: PathDirection
  nameWithType: SiteMapPath.PathDirection
- uid: System.Web.UI.WebControls.SiteMapPath.PathSeparator*
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: PathSeparator
  nameWithType: SiteMapPath.PathSeparator
- uid: System.Web.UI.WebControls.SiteMapPath.PathSeparatorStyle*
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: PathSeparatorStyle
  nameWithType: SiteMapPath.PathSeparatorStyle
- uid: System.Web.UI.WebControls.SiteMapPath.PathSeparatorTemplate*
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: PathSeparatorTemplate
  nameWithType: SiteMapPath.PathSeparatorTemplate
- uid: System.Web.UI.WebControls.SiteMapPath.Provider*
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: Provider
  nameWithType: SiteMapPath.Provider
- uid: System.Web.UI.WebControls.SiteMapPath.Render*
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: Render
  nameWithType: SiteMapPath.Render
- uid: System.Web.UI.WebControls.SiteMapPath.RenderContents*
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: RenderContents
  nameWithType: SiteMapPath.RenderContents
- uid: System.Web.UI.WebControls.SiteMapPath.RenderCurrentNodeAsLink*
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: RenderCurrentNodeAsLink
  nameWithType: SiteMapPath.RenderCurrentNodeAsLink
- uid: System.Web.UI.WebControls.SiteMapPath.RootNodeStyle*
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: RootNodeStyle
  nameWithType: SiteMapPath.RootNodeStyle
- uid: System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate*
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: RootNodeTemplate
  nameWithType: SiteMapPath.RootNodeTemplate
- uid: System.Web.UI.WebControls.SiteMapPath.SaveViewState*
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: SaveViewState
  nameWithType: SiteMapPath.SaveViewState
- uid: System.Web.UI.WebControls.SiteMapPath.ShowToolTips*
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: ShowToolTips
  nameWithType: SiteMapPath.ShowToolTips
- uid: System.Web.UI.WebControls.SiteMapPath.SiteMapProvider*
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: SiteMapProvider
  nameWithType: SiteMapPath.SiteMapProvider
- uid: System.Web.UI.WebControls.SiteMapPath.SkipLinkText*
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: SkipLinkText
  nameWithType: SiteMapPath.SkipLinkText
- uid: System.Web.UI.WebControls.SiteMapPath.TrackViewState*
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: TrackViewState
  nameWithType: SiteMapPath.TrackViewState
