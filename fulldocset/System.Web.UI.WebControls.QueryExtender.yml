### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.QueryExtender
  id: QueryExtender
  children:
  - System.Web.UI.WebControls.QueryExtender.#ctor
  - System.Web.UI.WebControls.QueryExtender.DataSource
  - System.Web.UI.WebControls.QueryExtender.Expressions
  - System.Web.UI.WebControls.QueryExtender.LoadViewState(System.Object)
  - System.Web.UI.WebControls.QueryExtender.OnInit(System.EventArgs)
  - System.Web.UI.WebControls.QueryExtender.SaveViewState
  - System.Web.UI.WebControls.QueryExtender.TargetControlID
  - System.Web.UI.WebControls.QueryExtender.TrackViewState
  langs:
  - csharp
  name: QueryExtender
  nameWithType: QueryExtender
  fullName: System.Web.UI.WebControls.QueryExtender
  type: Class
  summary: "명시적 없이 필터링 해야 하는 데이터 원본에서 데이터를 <xref uid=&quot;langword_csharp_Where&quot; name=&quot;Where&quot; href=&quot;&quot;> </xref> 데이터 원본의 절."
  remarks: "이 항목의:- [소개](#Introduction)      -   [배경](#background)      -   [필터 옵션](#filter_options)      -   [작업](#Tasks)      -   [선언적 구문](#declarative_syntax) <a name=&quot;Introduction&quot;> </a> # # 소개 The QueryExtender 컨트롤에 대 한 명시적 사용 하지 않고 데이터 원본에서 검색 된 데이터에 필터를 만드는 데 사용 됩니다 `Where` 데이터 원본의 절.       선언적 구문을 사용 하 여 필터링을 지정 하 QueryExtender 제어를 사용할 수 있습니다.      <a name=&quot;background&quot;></a># # 지정 된 조건을 충족 하는 레코드만 표시 하 여 데이터 원본에서 데이터를 제외 하는 배경 필터링 합니다. 데이터 집합의 데이터에 영향을 주지 않고 데이터 집합에 있는 데이터의 서로 다른 뷰를 제공할 수 있습니다.       일반적으로 필터링 하려면 만들어야는 `Where` 절을 데이터 소스를 쿼리 하는 명령에 적용 합니다. 그러나는 `Where` 데이터 소스 제어의 속성은 사용할 수 있는 모든 기능을 노출 하지 않을 수 있습니다. 예를 들어 QueryExtender 컨트롤을 사용 하면 시작 되 면 문자열 종료를 검색 하거나 아무 곳 이나.data 필드에 테이블을 쿼리할 수 있습니다.       LINQ에서 제공 되는 전체 기능을 노출 하 고 데이터 필터링을 쉽게 [!INCLUDE[vstecasp](~/add/includes/vstecasp-md.md)] QueryExtender 제어를 제공 합니다. QueryExtender 컨트롤에는 다음과 같은 이점을:-쓰는 것 보다 더 풍부한 필터링 환경을 제공는 `Where` 절. 예를 들어, 사용 하 여 부울 값에 대 한 Products 테이블을 검색할 수 있습니다는 <xref:System.Web.UI.WebControls.Expressions.PropertyExpression>필터는 쿼리를 작성 하지 않고도.</xref:System.Web.UI.WebControls.Expressions.PropertyExpression>      에 대 한 동일한 구문을 사용 하 여 필터를 지정할 수 있습니다-는 <xref:System.Web.UI.WebControls.LinqDataSource>및 <xref:System.Web.UI.WebControls.EntityDataSource>컨트롤 및 사용할 수 있는 다른 모든 데이터 소스 컨트롤에 대해.</xref:System.Web.UI.WebControls.EntityDataSource> </xref:System.Web.UI.WebControls.LinqDataSource>      -사용할 수 있는 <xref:System.Web.UI.WebControls.LinqDataSource>컨트롤와는 <xref:System.Web.UI.WebControls.EntityDataSource>컨트롤 또는 타사 데이터 원본.</xref:System.Web.UI.WebControls.EntityDataSource> </xref:System.Web.UI.WebControls.LinqDataSource>      <a name=&quot;filter_options&quot;></a># # 필터 옵션 QueryExtender 컨트롤은 다양 한 데이터를 필터링 하는 데 사용할 수 있는 옵션을 지원 합니다. 컨트롤 검색 문자열을 지정된 된 범위에 숫자 값을 검색 하 고 지정된 된 값으로 테이블의 속성 값을 비교할 수 있습니다. 또한 컨트롤 데이터를 정렬 하 고 사용자 지정 쿼리를 제공할 수 있습니다.       이러한 옵션은 QueryExtender 컨트롤에서 LINQ 식으로 제공 됩니다. QueryExtender도 지원 관련 된 식은 [!INCLUDE[vstecasp](~/add/includes/vstecasp-md.md)] 동적 데이터 응용 프로그램입니다.       다음 표에서 QueryExtender 컨트롤의 데이터를 필터링 하는 데 사용할 수 있는 옵션을 나열 합니다.      | 식 | 설명 |   |----------------|-----------------|   | <xref:System.Web.DynamicData.ControlFilterExpression>| (동적 데이터에만 해당) 원본 데이터 바인딩된 컨트롤에서 선택한 데이터 키를 사용 하 여 데이터베이스 쿼리를 만듭니다.</xref:System.Web.DynamicData.ControlFilterExpression><br /><br /> 이 필터 옵션을 사용 하는 방법에 대 한 정보를 참조 하십시오. [하는 방법: 동적 데이터에는 부모 테이블에서 필터 테이블 행을 사용 하 여 값](http://msdn.microsoft.com/en-us/a5566986-7c30-4e71-b4a4-81cd16095749). |   | <xref:System.Web.UI.WebControls.Expressions.CustomExpression>| 데이터 원본에 대 한 사용자 지정 식을 지정 합니다.</xref:System.Web.UI.WebControls.Expressions.CustomExpression> 사용자 지정 LINQ 식을 이벤트 처리기에서 호출할 수 있습니다. |   | <xref:System.Web.DynamicData.DynamicFilterExpression>| (동적 데이터에만 해당) 지정 된 사용 하 여 데이터베이스 쿼리를 작성 <xref:System.Web.DynamicData.DynamicFilter>컨트롤.</xref:System.Web.DynamicData.DynamicFilter> </xref:System.Web.DynamicData.DynamicFilterExpression><br /><br /> 이 필터 옵션을 사용 하는 방법에 대 한 정보를 참조 하십시오. [하는 방법: 필터 테이블 행을 사용 하 여 외래 키에서 동적 데이터](http://msdn.microsoft.com/en-us/b774e56a-a5b9-41b7-b114-699313ef2056). |   | <xref:System.Web.UI.WebControls.Expressions.MethodExpression>| 데이터 원본에 대 한 사용자 지정 LINQ 식을 지정 합니다.</xref:System.Web.UI.WebControls.Expressions.MethodExpression> 식은 메서드에서 호출 됩니다. |   | <xref:System.Web.UI.WebControls.Expressions.OrderByExpression>| 정렬 식을 적용 한 <xref:System.Linq.IQueryable>데이터 원본 개체입니다.</xref:System.Linq.IQueryable> </xref:System.Web.UI.WebControls.Expressions.OrderByExpression> <xref:System.Web.UI.WebControls.Expressions.OrderByExpression>값을 적용 한 후 <xref:System.Web.UI.WebControls.Expressions.OrderByExpression.ThenByExpressions%2A>값을 지정 하 여 추가 정렬 작업을 적용할 수 있습니다. |   | <xref:System.Web.UI.WebControls.Expressions.PropertyExpression>| 속성 <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A>컬렉션에 지정 된 데이터 필드 및 속성 값을 비교 합니다. |   | <xref:System.Web.UI.WebControls.Expressions.RangeExpression>| 값 보다 큰지 또는 지정된 된 값 보다 작은지 인지 또는 값이 두 값 사이 있는지 여부를 결정 합니다. |   | <xref:System.Web.UI.WebControls.Expressions.SearchExpression>| 지정된 된 문자열 값을 필드에서 값을 비교 합니다. |       이러한 QueryExtender 옵션을 개별적으로 사용 하거나 웹 페이지에 복잡 한 필터링을 제공 하도록 비즈니스 프로세스를 결합할 수 있습니다.</xref:System.Web.UI.WebControls.Expressions.SearchExpression> </xref:System.Web.UI.WebControls.Expressions.RangeExpression> </xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> </xref:System.Web.UI.WebControls.Expressions.PropertyExpression> </xref:System.Web.UI.WebControls.Expressions.OrderByExpression.ThenByExpressions%2A> </xref:System.Web.UI.WebControls.Expressions.OrderByExpression> 자세한 내용은 참조 [QueryExtender 웹 서버 컨트롤 개요](~/add/includes/ajax-current-ext-md.md)합니다. [연습: 웹 페이지를 사용 하 여 선언적 구문으로 데이터를 필터링](http://msdn.microsoft.com/en-us/b305ae31-1a1b-4d07-a678-51457c17614f) <a name=&quot;Tasks&quot;> </a> # # 작업 데이터를 필터링 QueryExtender 컨트롤을 사용 하는 방법을 보여 주는 다음 테이블 목록 작업입니다.            | 문서 | 작업 |   |--------------|----------|   | [연습: 선언적 구문을 사용 하 여 웹 페이지에서 데이터 필터링](http://msdn.microsoft.com/en-us/b305ae31-1a1b-4d07-a678-51457c17614f)| QueryExtender 컨트롤이 제공 하는 필터 옵션을 사용 하는 방법을 보여 줍니다. |      <a name=&quot;declarative_syntax&quot;> </a> # # 선언적 구문```   <asp:QueryExtender        EnableViewState=&quot;True|False&quot;       ID=&quot;string&quot;       OnDataBinding=&quot;DataBiding event handler&quot;       OnDisposed=&quot;Disposed event handler&quot;       OnInit=&quot;Init event handler       OnLoad=&quot;Load event handler&quot;       OnPreRender=&quot;PreRender event handler&quot;       OnUnload=&quot;UnLoad event hadler&quot;       Runat=&quot;server&quot;       TargetControlID=&quot;string&quot;       Visible=&quot;True|False&quot;   >           <asp:ControlFilterExpression                ControlD=&quot;string&quot;               Column=&quot;string&quot;>            </asp:ControlFilterExpression>           <asp:DynamicFilterExpression               ControlD=&quot;string&quot;           </asp:DynamicFilterExpression>           <asp:CustomExpression=&quot;string&quot;               OnQuerying=&quot;OnQerying event handler&quot;>           </asp:CustomExpression>           <asp:OrderByExpression=&quot;string&quot;               DataField=&quot;string&quot;               Direction=&quot;string&quot;>               <asp:ThenByExpression                    DataField=&quot;string&quot;                    Direction=&quot;string&quot;               </asp:ThenBy>           </asp:OrderByExpression>           <asp:PropertyExpression=&quot;string&quot;>                   <!-- child controls -->           </asp:PropertyExpression           >           <asp:RangeExpression=&quot;integer&quot;               Datafield=&quot;string&quot;               MaxType=&quot;Exclusive|Inclusive|None&quot;               MinType=&quot;Exclusive|Inclusive|None&quot;>                   <!--child controls-->           </asp:RangeExpression>           <asp:SearchExpression=&quot;string&quot;               ComparisonType=&quot;CurrentCulture|CurrentCultureIgnoreCase|                   InavariantCulture|InvariantCultureIgnoreCase|                   Ordinal|OrdinalIgnoreCase&quot;               DataField=&quot;string&quot;               SearchType=&quot;Contains|EndsWith|StartsWith&quot;>                   <!--child controls-->           </asp:SearchExpression>   </asp:QueryExtender>   ```"
  example:
  - "The following example shows how to use the QueryExtender control to provide a search function in a Web page. The QueryExtender control uses the text that is entered in the `TextBoxSearch` control to search for contents in the ProductName and Supplier.CompanyName columns of a Products table in the data that is returned from the <xref:System.Web.UI.WebControls.LinqDataSource> control. The <xref:System.Web.UI.WebControls.Expressions.SearchExpression> object is used to perform the search. The <xref:System.Web.UI.WebControls.Expressions.SearchExpression.DataFields%2A> property specifies the data fields to search. The <xref:System.Web.UI.WebControls.Expressions.SearchExpression.SearchType%2A> property specifies the type of search to perform. The <xref:System.Web.UI.WebControls.ControlParameter> element specifies the control that contains the text to use for the search. This code example is part of a larger example that is provided in [Walkthrough: Filtering Data in a Web Page Using Declarative Syntax](http://msdn.microsoft.com/en-us/b305ae31-1a1b-4d07-a678-51457c17614f).  \n  \n```  \n<asp:LinqDataSource ID=\"dataSource\" runat=\"server\"   \n    TableName=\"Products\">  \n</asp:LinqDataSource>  \n<asp:QueryExtender TargetControlID=\"dataSource\" runat=\"server\">  \n  <asp:SearchExpression DataFields=\"ProductName, Supplier.CompanyName\"   \n        SearchType=\"StartsWith\">  \n    <asp:ControlParameter ControlID=\"TextBoxSearch\" />  \n  </asp:SearchExpression>  \n</asp:QueryExtender>  \n```  \n  \n The following example shows how to use the QueryExtender control to search a Web page for values in a specified range. The QueryExtender control uses the values that are entered in the `TextBoxFrom` and `TextBoxTo` controls to search for values in the ProductName and Supplier.CompanyName columns of a Products table in the data that is returned from the <xref:System.Web.UI.WebControls.LinqDataSource> control. The <xref:System.Web.UI.WebControls.ControlParameter> element specifies the text box controls that contain the minimum and maximum values to use for searching the range. The <xref:System.Web.UI.WebControls.Expressions.RangeExpression.MinType%2A> and <xref:System.Web.UI.WebControls.Expressions.RangeExpression.MaxType%2A> properties specify that the minimum and maximum values must be included in the data that is returned. This code example is part of a larger example provided in [Walkthrough: Filtering Data in a Web Page Using Declarative Syntax](http://msdn.microsoft.com/en-us/b305ae31-1a1b-4d07-a678-51457c17614f).  \n  \n```  \n<asp:LinqDataSource ID=\"dataSource\" runat=\"server\"   \n    TableName=\"Products\">  \n</asp:LinqDataSource>  \n<asp:QueryExtender TargetControlID=\"dataSource\" runat=\"server\">  \n  <asp:RangeExpression DataField=\"UnitPrice\" MinType=\"Inclusive\"   \n        MaxType=\"Inclusive\">  \n    <asp:ControlParameter ControlID=\"TextBoxFrom\" />  \n    <asp:ControlParameter ControlID=\"TexBoxTo\" />  \n  </asp:RangeExpression>  \n</asp:QueryExtender>  \n```"
  syntax:
    content: >-
      [System.ComponentModel.DefaultProperty("TargetControlID")]

      [System.ComponentModel.Designer("System.Web.UI.Design.QueryExtenderDesigner, System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")]

      [System.Drawing.ToolboxBitmap(typeof(System.Web.UI.WebControls.QueryExtender), "QueryExtender.bmp")]

      [System.Web.UI.NonVisualControl]

      [System.Web.UI.ParseChildren(true, "Expressions")]

      [System.Web.UI.PersistChildren(false)]

      [System.Web.UI.TargetControlType(typeof(System.Web.UI.WebControls.IQueryableDataSource))]

      public class QueryExtender : System.Web.UI.Control
  inheritance:
  - System.Object
  - System.Web.UI.Control
  implements: []
  inheritedMembers:
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.AddParsedSubObject(System.Object)
  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientID
  - System.Web.UI.Control.ClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Context
  - System.Web.UI.Control.Controls
  - System.Web.UI.Control.CreateChildControls
  - System.Web.UI.Control.CreateControlCollection
  - System.Web.UI.Control.DataBind
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EnableTheming
  - System.Web.UI.Control.EnableViewState
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String)
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.Focus
  - System.Web.UI.Control.GetDesignModeState
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasControls
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.ID
  - System.Web.UI.Control.IdSeparator
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadControlState(System.Object)
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.OnDataBinding(System.EventArgs)
  - System.Web.UI.Control.OnLoad(System.EventArgs)
  - System.Web.UI.Control.OnPreRender(System.EventArgs)
  - System.Web.UI.Control.OnUnload(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SaveControlState
  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.SkinID
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ValidateRequestMode
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  - System.Web.UI.Control.Visible
  platform:
  - net462
- uid: System.Web.UI.WebControls.QueryExtender.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.QueryExtender
  langs:
  - csharp
  name: QueryExtender()
  nameWithType: QueryExtender.QueryExtender()
  fullName: System.Web.UI.WebControls.QueryExtender.QueryExtender()
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.UI.WebControls.QueryExtender&quot;> </xref> 클래스입니다."
  syntax:
    content: public QueryExtender ();
    parameters: []
  overload: System.Web.UI.WebControls.QueryExtender.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.QueryExtender.DataSource
  id: DataSource
  parent: System.Web.UI.WebControls.QueryExtender
  langs:
  - csharp
  name: DataSource
  nameWithType: QueryExtender.DataSource
  fullName: System.Web.UI.WebControls.QueryExtender.DataSource
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "데이터 소스 컨트롤을 가져옵니다 (<xref href=&quot;System.Web.UI.IDataSource&quot;> </xref> 개체)는 쿼리에 사용할 합니다."
  remarks: "<xref:System.Web.UI.WebControls.QueryExtender>지원는 <xref:System.Web.UI.WebControls.LinqDataSource>및 <xref:System.Web.UI.WebControls.EntityDataSource>컨트롤.</xref:System.Web.UI.WebControls.EntityDataSource> </xref:System.Web.UI.WebControls.LinqDataSource> </xref:System.Web.UI.WebControls.QueryExtender>"
  syntax:
    content: public virtual System.Web.UI.WebControls.IQueryableDataSource DataSource { get; }
    return:
      type: System.Web.UI.WebControls.IQueryableDataSource
      description: "쿼리에 사용할 데이터 소스 제어 합니다."
  overload: System.Web.UI.WebControls.QueryExtender.DataSource*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "DataSource 속성은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Web.UI.WebControls.QueryExtender.Expressions
  id: Expressions
  parent: System.Web.UI.WebControls.QueryExtender
  langs:
  - csharp
  name: Expressions
  nameWithType: QueryExtender.Expressions
  fullName: System.Web.UI.WebControls.QueryExtender.Expressions
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "에 적용 되는 식의 컬렉션을 가져옵니다는 <xref href=&quot;System.Web.UI.IDataSource&quot;> </xref> 제어 합니다."
  syntax:
    content: public System.Web.UI.WebControls.Expressions.DataSourceExpressionCollection Expressions { get; }
    return:
      type: System.Web.UI.WebControls.Expressions.DataSourceExpressionCollection
      description: "데이터 소스 컨트롤에 적용 되는 식의 컬렉션입니다."
  overload: System.Web.UI.WebControls.QueryExtender.Expressions*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.QueryExtender.LoadViewState(System.Object)
  id: LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.QueryExtender
  langs:
  - csharp
  name: LoadViewState(Object)
  nameWithType: QueryExtender.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.QueryExtender.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "에 있는 값의 상태를 로드는 <xref href=&quot;System.Web.UI.WebControls.QueryExtender&quot;> </xref> 유지 해야 하는 컨트롤입니다."
  syntax:
    content: protected override void LoadViewState (object savedState);
    parameters:
    - id: savedState
      type: System.Object
      description: "상태를 나타내는 개체는 <xref href=&quot;System.Web.UI.WebControls.QueryExtender&quot;> </xref> 제어 합니다."
  overload: System.Web.UI.WebControls.QueryExtender.LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.QueryExtender.OnInit(System.EventArgs)
  id: OnInit(System.EventArgs)
  parent: System.Web.UI.WebControls.QueryExtender
  langs:
  - csharp
  name: OnInit(EventArgs)
  nameWithType: QueryExtender.OnInit(EventArgs)
  fullName: System.Web.UI.WebControls.QueryExtender.OnInit(EventArgs)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "새 인스턴스가 발생는 <xref href=&quot;System.Web.UI.WebControls.QueryExtender&quot;> </xref> 클래스를 초기화 합니다."
  syntax:
    content: protected override void OnInit (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "이벤트 데이터입니다."
  overload: System.Web.UI.WebControls.QueryExtender.OnInit*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.QueryExtender.SaveViewState
  id: SaveViewState
  parent: System.Web.UI.WebControls.QueryExtender
  langs:
  - csharp
  name: SaveViewState()
  nameWithType: QueryExtender.SaveViewState()
  fullName: System.Web.UI.WebControls.QueryExtender.SaveViewState()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "현재 뷰 상태를 저장 된 <xref href=&quot;System.Web.UI.WebControls.QueryExtender&quot;> </xref> 제어 합니다."
  syntax:
    content: protected override object SaveViewState ();
    parameters: []
    return:
      type: System.Object
      description: "저장된 된 상태를 포함 하는 개체는 <xref href=&quot;System.Web.UI.WebControls.QueryExtender&quot;> </xref> 제어 합니다."
  overload: System.Web.UI.WebControls.QueryExtender.SaveViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.QueryExtender.TargetControlID
  id: TargetControlID
  parent: System.Web.UI.WebControls.QueryExtender
  langs:
  - csharp
  name: TargetControlID
  nameWithType: QueryExtender.TargetControlID
  fullName: System.Web.UI.WebControls.QueryExtender.TargetControlID
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "ID를 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.IDataSource&quot;> </xref> 쿼리에 사용할 컨트롤입니다."
  syntax:
    content: public virtual string TargetControlID { get; set; }
    return:
      type: System.String
      description: "ID 데이터의 소스는 쿼리에 사용할 제어 합니다."
  overload: System.Web.UI.WebControls.QueryExtender.TargetControlID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.QueryExtender.TrackViewState
  id: TrackViewState
  parent: System.Web.UI.WebControls.QueryExtender
  langs:
  - csharp
  name: TrackViewState()
  nameWithType: QueryExtender.TrackViewState()
  fullName: System.Web.UI.WebControls.QueryExtender.TrackViewState()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "뷰 상태 변경 내용을 추적 하는 <xref href=&quot;System.Web.UI.WebControls.QueryExtender&quot;> </xref> 에 변경 내용을 저장할 수 있도록 컨트롤의 <xref href=&quot;System.Web.UI.StateBag&quot;> </xref> 컨트롤에 대 한 개체입니다."
  syntax:
    content: protected override void TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.QueryExtender.TrackViewState*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.Control
  isExternal: false
  name: System.Web.UI.Control
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Web.UI.WebControls.QueryExtender.#ctor
  parent: System.Web.UI.WebControls.QueryExtender
  isExternal: false
  name: QueryExtender()
  nameWithType: QueryExtender.QueryExtender()
  fullName: System.Web.UI.WebControls.QueryExtender.QueryExtender()
- uid: System.Web.UI.WebControls.QueryExtender.DataSource
  parent: System.Web.UI.WebControls.QueryExtender
  isExternal: false
  name: DataSource
  nameWithType: QueryExtender.DataSource
  fullName: System.Web.UI.WebControls.QueryExtender.DataSource
- uid: System.Web.UI.WebControls.IQueryableDataSource
  parent: System.Web.UI.WebControls
  isExternal: false
  name: IQueryableDataSource
  nameWithType: IQueryableDataSource
  fullName: System.Web.UI.WebControls.IQueryableDataSource
- uid: System.Web.UI.WebControls.QueryExtender.Expressions
  parent: System.Web.UI.WebControls.QueryExtender
  isExternal: false
  name: Expressions
  nameWithType: QueryExtender.Expressions
  fullName: System.Web.UI.WebControls.QueryExtender.Expressions
- uid: System.Web.UI.WebControls.Expressions.DataSourceExpressionCollection
  parent: System.Web.UI.WebControls.Expressions
  isExternal: false
  name: DataSourceExpressionCollection
  nameWithType: DataSourceExpressionCollection
  fullName: System.Web.UI.WebControls.Expressions.DataSourceExpressionCollection
- uid: System.Web.UI.WebControls.QueryExtender.LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.QueryExtender
  isExternal: false
  name: LoadViewState(Object)
  nameWithType: QueryExtender.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.QueryExtender.LoadViewState(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.QueryExtender.OnInit(System.EventArgs)
  parent: System.Web.UI.WebControls.QueryExtender
  isExternal: false
  name: OnInit(EventArgs)
  nameWithType: QueryExtender.OnInit(EventArgs)
  fullName: System.Web.UI.WebControls.QueryExtender.OnInit(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.WebControls.QueryExtender.SaveViewState
  parent: System.Web.UI.WebControls.QueryExtender
  isExternal: false
  name: SaveViewState()
  nameWithType: QueryExtender.SaveViewState()
  fullName: System.Web.UI.WebControls.QueryExtender.SaveViewState()
- uid: System.Web.UI.WebControls.QueryExtender.TargetControlID
  parent: System.Web.UI.WebControls.QueryExtender
  isExternal: false
  name: TargetControlID
  nameWithType: QueryExtender.TargetControlID
  fullName: System.Web.UI.WebControls.QueryExtender.TargetControlID
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.QueryExtender.TrackViewState
  parent: System.Web.UI.WebControls.QueryExtender
  isExternal: false
  name: TrackViewState()
  nameWithType: QueryExtender.TrackViewState()
  fullName: System.Web.UI.WebControls.QueryExtender.TrackViewState()
- uid: System.Web.UI.WebControls.QueryExtender.#ctor*
  parent: System.Web.UI.WebControls.QueryExtender
  isExternal: false
  name: QueryExtender
  nameWithType: QueryExtender.QueryExtender
- uid: System.Web.UI.WebControls.QueryExtender.DataSource*
  parent: System.Web.UI.WebControls.QueryExtender
  isExternal: false
  name: DataSource
  nameWithType: QueryExtender.DataSource
- uid: System.Web.UI.WebControls.QueryExtender.Expressions*
  parent: System.Web.UI.WebControls.QueryExtender
  isExternal: false
  name: Expressions
  nameWithType: QueryExtender.Expressions
- uid: System.Web.UI.WebControls.QueryExtender.LoadViewState*
  parent: System.Web.UI.WebControls.QueryExtender
  isExternal: false
  name: LoadViewState
  nameWithType: QueryExtender.LoadViewState
- uid: System.Web.UI.WebControls.QueryExtender.OnInit*
  parent: System.Web.UI.WebControls.QueryExtender
  isExternal: false
  name: OnInit
  nameWithType: QueryExtender.OnInit
- uid: System.Web.UI.WebControls.QueryExtender.SaveViewState*
  parent: System.Web.UI.WebControls.QueryExtender
  isExternal: false
  name: SaveViewState
  nameWithType: QueryExtender.SaveViewState
- uid: System.Web.UI.WebControls.QueryExtender.TargetControlID*
  parent: System.Web.UI.WebControls.QueryExtender
  isExternal: false
  name: TargetControlID
  nameWithType: QueryExtender.TargetControlID
- uid: System.Web.UI.WebControls.QueryExtender.TrackViewState*
  parent: System.Web.UI.WebControls.QueryExtender
  isExternal: false
  name: TrackViewState
  nameWithType: QueryExtender.TrackViewState
