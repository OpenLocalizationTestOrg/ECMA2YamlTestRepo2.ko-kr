### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.TreeNodeCollection
  id: TreeNodeCollection
  children:
  - System.Web.UI.WebControls.TreeNodeCollection.#ctor
  - System.Web.UI.WebControls.TreeNodeCollection.#ctor(System.Web.UI.WebControls.TreeNode)
  - System.Web.UI.WebControls.TreeNodeCollection.Add(System.Web.UI.WebControls.TreeNode)
  - System.Web.UI.WebControls.TreeNodeCollection.AddAt(System.Int32,System.Web.UI.WebControls.TreeNode)
  - System.Web.UI.WebControls.TreeNodeCollection.Clear
  - System.Web.UI.WebControls.TreeNodeCollection.Contains(System.Web.UI.WebControls.TreeNode)
  - System.Web.UI.WebControls.TreeNodeCollection.CopyTo(System.Web.UI.WebControls.TreeNode[],System.Int32)
  - System.Web.UI.WebControls.TreeNodeCollection.Count
  - System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator
  - System.Web.UI.WebControls.TreeNodeCollection.IndexOf(System.Web.UI.WebControls.TreeNode)
  - System.Web.UI.WebControls.TreeNodeCollection.IsSynchronized
  - System.Web.UI.WebControls.TreeNodeCollection.Item(System.Int32)
  - System.Web.UI.WebControls.TreeNodeCollection.Remove(System.Web.UI.WebControls.TreeNode)
  - System.Web.UI.WebControls.TreeNodeCollection.RemoveAt(System.Int32)
  - System.Web.UI.WebControls.TreeNodeCollection.SyncRoot
  - System.Web.UI.WebControls.TreeNodeCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#TrackViewState
  langs:
  - csharp
  name: TreeNodeCollection
  nameWithType: TreeNodeCollection
  fullName: System.Web.UI.WebControls.TreeNodeCollection
  type: Class
  summary: "컬렉션을 나타냅니다 <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> 개체에 <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> 제어 합니다. 이 클래스는 상속 될 수 없습니다."
  remarks: "TreeNodeCollection 클래스는 저장 하 고 컬렉션을 관리 하는 데 사용 <xref:System.Web.UI.WebControls.TreeNode>개체에 <xref:System.Web.UI.WebControls.TreeView>컨트롤.</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.TreeNode> <xref:System.Web.UI.WebControls.TreeView>컨트롤 TreeNodeCollection 클래스를 사용 하 여 두 가지 속성에.</xref:System.Web.UI.WebControls.TreeView> 루트 노드에 저장 된 <xref:System.Web.UI.WebControls.TreeView.Nodes%2A>속성과에서 선택 된 노드는 <xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A>속성.</xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A> </xref:System.Web.UI.WebControls.TreeView.Nodes%2A> TreeNodeCollection 컬렉션에도 사용 되는 <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>(있는 경우) 자식 노드를 저장 하는 속성.</xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>       TreeNodeCollection 클래스를 사용 하는 컬렉션의 항목에 액세스 하는 여러 방법을 지원:-사용 된 <xref:System.Web.UI.WebControls.TreeNodeCollection.Item%2A>검색할 인덱서의 <xref:System.Web.UI.WebControls.TreeNode>특정 인덱스에서 직접 개체.</xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNodeCollection.Item%2A>      -사용 된 <xref:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator%2A>메서드는 컬렉션을 반복 하는 데 사용할 수 있는 열거자를 만드는.</xref:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator%2A>      -사용 `foreach` (C#) 또는 `For Each` (Visual Basic)는 컬렉션을 반복 합니다.      -사용 된 <xref:System.Web.UI.WebControls.TreeNodeCollection.CopyTo%2A>에 컬렉션의 내용을 복사 하는 메서드는 <xref:System.Array>개체입니다.</xref:System.Array> </xref:System.Web.UI.WebControls.TreeNodeCollection.CopyTo%2A>       TreeNodeCollection 추가 및 제거 하 여 프로그래밍 방식으로 관리할 수 있습니다 <xref:System.Web.UI.WebControls.TreeNode>개체입니다.</xref:System.Web.UI.WebControls.TreeNode> 컬렉션에 노드를 추가 하려면 사용 하 여는 <xref:System.Web.UI.WebControls.TreeNodeCollection.Add%2A>또는 <xref:System.Web.UI.WebControls.TreeNodeCollection.AddAt%2A>메서드.</xref:System.Web.UI.WebControls.TreeNodeCollection.AddAt%2A> </xref:System.Web.UI.WebControls.TreeNodeCollection.Add%2A> 컬렉션에서 노드를 제거 하려면 사용 하 여는 <xref:System.Web.UI.WebControls.TreeNodeCollection.Remove%2A>, <xref:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt%2A>, 또는 <xref:System.Web.UI.WebControls.TreeNodeCollection.Clear%2A>메서드.</xref:System.Web.UI.WebControls.TreeNodeCollection.Clear%2A> </xref:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt%2A> </xref:System.Web.UI.WebControls.TreeNodeCollection.Remove%2A>      > [!NOTE] > 때는 <xref:System.Web.UI.WebControls.TreeView>컨트롤이 데이터 원본에 바인딩되는 <xref:System.Web.UI.WebControls.TreeView.Nodes%2A>및 <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>컬렉션 바인딩이 수행 될 때마다 자동으로 채워집니다.</xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> </xref:System.Web.UI.WebControls.TreeView.Nodes%2A> </xref:System.Web.UI.WebControls.TreeView> 바인딩 간의 컬렉션 변경 내용이 손실 됩니다. 이러한 변경 내용을 유지 하려면 데이터 원본을 업데이트 하거나 바인딩할 때마다 컬렉션을 수동으로 다시 작성 합니다.       TreeNodeCollection은 컬렉션 자체에 대 한 정보를 검색할 수 있도록 하는 메서드와 속성을 포함 합니다. 컬렉션에 있는 항목 수를 확인 하려면 사용 하 여는 <xref:System.Web.UI.WebControls.TreeNodeCollection.Count%2A>속성.</xref:System.Web.UI.WebControls.TreeNodeCollection.Count%2A> 특정 컬렉션에 있는지 확인 하려는 경우 <xref:System.Web.UI.WebControls.TreeNode>개체를 가져오려면는 <xref:System.Web.UI.WebControls.TreeNodeCollection.Contains%2A>메서드.</xref:System.Web.UI.WebControls.TreeNodeCollection.Contains%2A> </xref:System.Web.UI.WebControls.TreeNode> 인덱스를 가져옵니다는 <xref:System.Web.UI.WebControls.TreeNode>사용 하 여 컬렉션의 개체는 <xref:System.Web.UI.WebControls.TreeNodeCollection.IndexOf%2A>메서드.</xref:System.Web.UI.WebControls.TreeNodeCollection.IndexOf%2A> </xref:System.Web.UI.WebControls.TreeNode>"
  example:
  - "The following example demonstrates how to programmatically add nodes to and remove them from a TreeNodeCollection. Notice that the <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> and <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> properties return a TreeNodeCollection object.  \n  \n [!code-cs[TreeNodeCollectionAdd#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_136_1.aspx)]\n [!code-vb[TreeNodeCollectionAdd#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_136_1.aspx)]"
  syntax:
    content: 'public sealed class TreeNodeCollection : System.Collections.ICollection, System.Web.UI.IStateManager'
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  - System.Web.UI.IStateManager
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeCollection.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.TreeNodeCollection
  langs:
  - csharp
  name: TreeNodeCollection()
  nameWithType: TreeNodeCollection.TreeNodeCollection()
  fullName: System.Web.UI.WebControls.TreeNodeCollection.TreeNodeCollection()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref> 클래스는 기본값을 사용 합니다."
  remarks: "새 인스턴스를 초기화 하려면이 생성자를 사용 하는 <xref:System.Web.UI.WebControls.TreeNodeCollection>클래스는 기본값을 사용 합니다.</xref:System.Web.UI.WebControls.TreeNodeCollection> 이 생성자는 일반적으로 부모 노드 (또는 소유자)가 필요 하지 루트 노드의 컬렉션을 만들 때 사용 됩니다.      > [!NOTE] > 루트가 아닌 노드 컬렉션을 만들 때 사용 하는 오버 로드 된 생성자를 사용 해야는 `owner` 부모 노드를 지정 하려면이 생성자 대신 매개 변수입니다.       이 생성자는 주로 컨트롤 개발자가 사용 됩니다."
  syntax:
    content: public TreeNodeCollection ();
    parameters: []
  overload: System.Web.UI.WebControls.TreeNodeCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeCollection.#ctor(System.Web.UI.WebControls.TreeNode)
  id: '#ctor(System.Web.UI.WebControls.TreeNode)'
  parent: System.Web.UI.WebControls.TreeNodeCollection
  langs:
  - csharp
  name: TreeNodeCollection(TreeNode)
  nameWithType: TreeNodeCollection.TreeNodeCollection(TreeNode)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.TreeNodeCollection(TreeNode)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref> 클래스 지정 된 부모 노드 (또는 소유자)를 사용 합니다."
  remarks: "새 인스턴스를 초기화 하려면이 생성자를 사용 하는 <xref:System.Web.UI.WebControls.TreeNodeCollection>클래스 지정 된 부모 노드 (또는 소유자)를 사용 합니다.</xref:System.Web.UI.WebControls.TreeNodeCollection> 이 생성자는 일반적으로 부모 노드를 지정 해야 하는 비 루트 노드의 컬렉션을 만들 때 사용 됩니다.      > [!NOTE] > 루트 노드의 컬렉션을 만들 때 루트 노드가 부모 노드와 없기 때문에 기본 생성자를 사용 하 여 고려해 야 합니다.       이 생성자는 주로 컨트롤 개발자가 사용 됩니다."
  syntax:
    content: public TreeNodeCollection (System.Web.UI.WebControls.TreeNode owner);
    parameters:
    - id: owner
      type: System.Web.UI.WebControls.TreeNode
      description: "<xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> 컬렉션의 부모 노드를 나타내는 개체입니다."
  overload: System.Web.UI.WebControls.TreeNodeCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeCollection.Add(System.Web.UI.WebControls.TreeNode)
  id: Add(System.Web.UI.WebControls.TreeNode)
  parent: System.Web.UI.WebControls.TreeNodeCollection
  langs:
  - csharp
  name: Add(TreeNode)
  nameWithType: TreeNodeCollection.Add(TreeNode)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.Add(TreeNode)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "지정 된 추가 <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> 개체의 끝에는 <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref> 개체입니다."
  remarks: "Add 메서드를 사용 하 여 지정된 된 <xref:System.Web.UI.WebControls.TreeNode>개체 <xref:System.Web.UI.WebControls.TreeNodeCollection>.</xref:System.Web.UI.WebControls.TreeNodeCollection> 의 끝에</xref:System.Web.UI.WebControls.TreeNode> 추가 하려면      > [!NOTE] >는 <xref:System.Web.UI.WebControls.TreeNodeCollection>추가할 수 있도록 null 참조 (Visual Basic)에서는 Nothing 중복 뿐만 아니라 <xref:System.Web.UI.WebControls.TreeNode>개체.</xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNodeCollection>       삽입할 수 있습니다는 <xref:System.Web.UI.WebControls.TreeNode>개체는 <xref:System.Web.UI.WebControls.TreeNodeCollection>를 사용 하 여 특정 인덱스에는 <xref:System.Web.UI.WebControls.TreeNodeCollection.AddAt%2A>메서드.</xref:System.Web.UI.WebControls.TreeNodeCollection.AddAt%2A> </xref:System.Web.UI.WebControls.TreeNodeCollection> </xref:System.Web.UI.WebControls.TreeNode>"
  example:
  - "The following example demonstrates how to use the Add method to programmatically add a node to the <xref:System.Web.UI.WebControls.TreeNodeCollection>. Notice that the <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> and <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> properties each return a <xref:System.Web.UI.WebControls.TreeNodeCollection> object.  \n  \n [!code-cs[TreeNodeCollectionAdd#1](~/add/codesnippet/csharp/370e49fd-05e7-49aa-a3d5-_1.aspx)]\n [!code-vb[TreeNodeCollectionAdd#1](~/add/codesnippet/visualbasic/370e49fd-05e7-49aa-a3d5-_1.aspx)]"
  syntax:
    content: public void Add (System.Web.UI.WebControls.TreeNode child);
    parameters:
    - id: child
      type: System.Web.UI.WebControls.TreeNode
      description: "<xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> 추가할 개체입니다."
  overload: System.Web.UI.WebControls.TreeNodeCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeCollection.AddAt(System.Int32,System.Web.UI.WebControls.TreeNode)
  id: AddAt(System.Int32,System.Web.UI.WebControls.TreeNode)
  parent: System.Web.UI.WebControls.TreeNodeCollection
  langs:
  - csharp
  name: AddAt(Int32,TreeNode)
  nameWithType: TreeNodeCollection.AddAt(Int32,TreeNode)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.AddAt(Int32,TreeNode)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "지정 된 삽입 <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> 개체는 <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref> 개체에서 지정 된 인덱스 위치에 있습니다."
  remarks: "AddAt 메서드를 사용 하 여 지정 된 삽입 <xref:System.Web.UI.WebControls.TreeNode>개체는 <xref:System.Web.UI.WebControls.TreeNodeCollection>지정 된 인덱스입니다.</xref:System.Web.UI.WebControls.TreeNodeCollection> </xref:System.Web.UI.WebControls.TreeNode>      > [!NOTE] >는 <xref:System.Web.UI.WebControls.TreeNodeCollection>삽입할 수 있도록 null 참조 (Visual Basic)에서는 Nothing 중복 뿐만 아니라 <xref:System.Web.UI.WebControls.TreeNode>개체.</xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNodeCollection>       추가할 수 있습니다는 <xref:System.Web.UI.WebControls.TreeNode>개체의 끝에는 <xref:System.Web.UI.WebControls.TreeNodeCollection>를 사용 하 여는 <xref:System.Web.UI.WebControls.TreeNodeCollection.Add%2A>메서드.</xref:System.Web.UI.WebControls.TreeNodeCollection.Add%2A> </xref:System.Web.UI.WebControls.TreeNodeCollection> </xref:System.Web.UI.WebControls.TreeNode>"
  example:
  - "The following example demonstrates how to use the AddAt method to programmatically add a node to the <xref:System.Web.UI.WebControls.TreeNodeCollection>. Notice that the <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> and <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> properties each return a <xref:System.Web.UI.WebControls.TreeNodeCollection> object.  \n  \n [!code-cs[TreeNodeCollectionAdd#1](~/add/codesnippet/csharp/646d7369-5544-4d90-8475-_1.aspx)]\n [!code-vb[TreeNodeCollectionAdd#1](~/add/codesnippet/visualbasic/646d7369-5544-4d90-8475-_1.aspx)]"
  syntax:
    content: public void AddAt (int index, System.Web.UI.WebControls.TreeNode child);
    parameters:
    - id: index
      type: System.Int32
      description: "삽입할&0;부터 시작 인덱스 위치는 <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> 개체입니다."
    - id: child
      type: System.Web.UI.WebControls.TreeNode
      description: "<xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> 추가할 개체입니다."
  overload: System.Web.UI.WebControls.TreeNodeCollection.AddAt*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>child</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeCollection.Clear
  id: Clear
  parent: System.Web.UI.WebControls.TreeNodeCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: TreeNodeCollection.Clear()
  fullName: System.Web.UI.WebControls.TreeNodeCollection.Clear()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "비웁니다는 <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref> 개체입니다."
  remarks: "Clear 메서드를 사용 하 여 모든 <xref:System.Web.UI.WebControls.TreeNode> <xref:System.Web.UI.WebControls.TreeNodeCollection>.</xref:System.Web.UI.WebControls.TreeNodeCollection> 에서 개체</xref:System.Web.UI.WebControls.TreeNode> 를 제거 하려면      > [!NOTE] > 컬렉션에서 개별 노드를 제거 하려면 사용 하 여는 <xref:System.Web.UI.WebControls.TreeNodeCollection.Remove%2A>또는 <xref:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt%2A>메서드.</xref:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt%2A> </xref:System.Web.UI.WebControls.TreeNodeCollection.Remove%2A>"
  example:
  - "The following example demonstrates how to use the Clear method to programmatically empty a <xref:System.Web.UI.WebControls.TreeNodeCollection>. Notice that the <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> and <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> properties return a <xref:System.Web.UI.WebControls.TreeNodeCollection> object.  \n  \n [!code-cs[TreeNodeCollectionAdd#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_111_1.aspx)]\n [!code-vb[TreeNodeCollectionAdd#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_111_1.aspx)]"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Web.UI.WebControls.TreeNodeCollection.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeCollection.Contains(System.Web.UI.WebControls.TreeNode)
  id: Contains(System.Web.UI.WebControls.TreeNode)
  parent: System.Web.UI.WebControls.TreeNodeCollection
  langs:
  - csharp
  name: Contains(TreeNode)
  nameWithType: TreeNodeCollection.Contains(TreeNode)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.Contains(TreeNode)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "결정 하는지 여부를 지정 된 <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> 개체 컬렉션에에서 포함 되어 있습니다."
  remarks: "Contains 메서드를 사용 하 여 <xref:System.Web.UI.WebControls.TreeNode>개체가 <xref:System.Web.UI.WebControls.TreeNodeCollection>.</xref:System.Web.UI.WebControls.TreeNodeCollection> 에 포함 되어</xref:System.Web.UI.WebControls.TreeNode> 있는지 여부를 확인 하려면 이 메서드는의 존재 여부를 테스트 하는 데 주로 사용 된 <xref:System.Web.UI.WebControls.TreeNode>추가 하거나 컬렉션에서 노드를 제거 하는 등의 작업을 수행 하기 전에 개체입니다.</xref:System.Web.UI.WebControls.TreeNode>"
  example:
  - "The following example demonstrates how to use the Contains method to determine whether the selected node is in the <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> collection. Notice that the <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> property returns a <xref:System.Web.UI.WebControls.TreeNodeCollection> object.  \n  \n [!code-vb[TreeNodeCollectionIndexOf#1](~/add/codesnippet/visualbasic/8b0f37ed-79bf-4881-ba56-_1.aspx)]\n [!code-cs[TreeNodeCollectionIndexOf#1](~/add/codesnippet/csharp/8b0f37ed-79bf-4881-ba56-_1.aspx)]"
  syntax:
    content: public bool Contains (System.Web.UI.WebControls.TreeNode c);
    parameters:
    - id: c
      type: System.Web.UI.WebControls.TreeNode
      description: "<xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> 찾을 개체입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>하는 경우 지정 된 <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> 개체 컬렉션에 포함 되지 않았으면, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.TreeNodeCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeCollection.CopyTo(System.Web.UI.WebControls.TreeNode[],System.Int32)
  id: CopyTo(System.Web.UI.WebControls.TreeNode[],System.Int32)
  parent: System.Web.UI.WebControls.TreeNodeCollection
  langs:
  - csharp
  name: CopyTo(TreeNode[],Int32)
  nameWithType: TreeNodeCollection.CopyTo(TreeNode[],Int32)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.CopyTo(TreeNode[],Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "모든 항목을 복사는 <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref> 호환 가능한&1; 차원 배열에 개체 <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> 대상 배열의 지정된 된 인덱스부터 시작 합니다."
  remarks: "CopyTo 메서드를 사용 하 여의 내용을 복사 하 여 <xref:System.Web.UI.WebControls.TreeNodeCollection>여 지정 된&0;부터 시작 <xref:System.Array?displayProperty=fullName>개체입니다.</xref:System.Array?displayProperty=fullName> </xref:System.Web.UI.WebControls.TreeNodeCollection> 항목 대상 배열의 지정 된 인덱스부터 복사 됩니다. <xref:System.Array?displayProperty=fullName>개체를 배열 <xref:System.Web.UI.WebControls.TreeNodeCollection>.</xref:System.Web.UI.WebControls.TreeNodeCollection> 의 항목에 액세스 하는 구문을 사용할 수</xref:System.Array?displayProperty=fullName> 있는       대신 사용할 수도 있습니다는 <xref:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator%2A>컬렉션의 항목에 액세스를 사용할 수 있는 열거자를 만드는 방법.</xref:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator%2A>"
  example:
  - "The following example demonstrates how to use the CopyTo method to copy the values of a <xref:System.Web.UI.WebControls.TreeNodeCollection> into an array. Notice that the <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> property returns a <xref:System.Web.UI.WebControls.TreeNodeCollection> object.  \n  \n [!code-cs[TreeNodeCollectionCopyTo#1](~/add/codesnippet/csharp/a62bb2b9-1097-48cf-a7f1-_1.aspx)]\n [!code-vb[TreeNodeCollectionCopyTo#1](~/add/codesnippet/visualbasic/a62bb2b9-1097-48cf-a7f1-_1.aspx)]"
  syntax:
    content: public void CopyTo (System.Web.UI.WebControls.TreeNode[] nodeArray, int index);
    parameters:
    - id: nodeArray
      type: System.Web.UI.WebControls.TreeNode[]
      description: "0부터 시작 배열 <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> 개체에서 복사한 항목을 수신 하는 <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref>합니다."
    - id: index
      type: System.Int32
      description: "대상 배열에서 복사 된 내용을 받기 시작 하는 위치입니다."
  overload: System.Web.UI.WebControls.TreeNodeCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeCollection.Count
  id: Count
  parent: System.Web.UI.WebControls.TreeNodeCollection
  langs:
  - csharp
  name: Count
  nameWithType: TreeNodeCollection.Count
  fullName: System.Web.UI.WebControls.TreeNodeCollection.Count
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "에 있는 항목의 수를 가져옵니다는 <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref> 개체입니다."
  remarks: "Count 속성을 사용 하 여 <xref:System.Web.UI.WebControls.TreeNodeCollection>.</xref:System.Web.UI.WebControls.TreeNodeCollection> 에 있는 항목의 수를 확인 하려면 이 속성은 일반적으로 컬렉션의 상한을 결정 하는 컬렉션을 반복할 때 사용 됩니다. Count 속성 컬렉션이 비어 있는지 여부를 확인 하려면 일반적으로 사용 됩니다."
  example:
  - "The following example demonstrates how to use the Count property to determine the number of items in the <xref:System.Web.UI.WebControls.TreeNodeCollection>. It then performs a preorder traversal of the <xref:System.Web.UI.WebControls.TreeView> control to display the text of each node.  \n  \n [!code-cs[TreeNodeCollectionCount#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_146_1.aspx)]\n [!code-vb[TreeNodeCollectionCount#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_146_1.aspx)]"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "항목 수는 <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.TreeNodeCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Web.UI.WebControls.TreeNodeCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: TreeNodeCollection.GetEnumerator()
  fullName: System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "반복 하는 데 사용할 수 있는 열거자를 반환 된 <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref> 개체입니다."
  remarks: "GetEnumerator 메서드를 사용 하 여 쉽게 반복할 수 있는 <xref:System.Web.UI.WebControls.TreeNodeCollection>.</xref:System.Web.UI.WebControls.TreeNodeCollection> 의 각 항목을 가져올 수 있는 열거자를 만들려면 열거자에서 현재 가리키는 항목을 사용는 <xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName>속성.</xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName> 사용 된 <xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=fullName>메서드를 다음 항목으로 이동 합니다.</xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=fullName> 사용 하 여 열거자를 컬렉션의 시작 부분으로 다시 이동 해야 할 경우는 <xref:System.Collections.IEnumerator.Reset%2A?displayProperty=fullName>메서드.</xref:System.Collections.IEnumerator.Reset%2A?displayProperty=fullName>      > [!NOTE] > 후에 열거자를 만들거나 사용 하 여는 <xref:System.Collections.IEnumerator.Reset%2A?displayProperty=fullName>호출 해야 합니다는 <xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=fullName>메서드.</xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=fullName> </xref:System.Collections.IEnumerator.Reset%2A?displayProperty=fullName> 그렇지 않은 경우으로 표시 되는 항목의 <xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName>속성이 정의 되지 않습니다.</xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName>       대신 사용할 수도 있습니다는 <xref:System.Web.UI.WebControls.TreeNodeCollection.CopyTo%2A>만드는 메서드를 한 <xref:System.Array?displayProperty=fullName>컬렉션의 항목에 액세스 하는 데 사용할 수 있습니다.</xref:System.Array?displayProperty=fullName> </xref:System.Web.UI.WebControls.TreeNodeCollection.CopyTo%2A> 또 다른 방법은 사용 하는 것을 `foreach` 또는 `For Each` 구조는 컬렉션을 반복 합니다."
  example:
  - "The following example demonstrates how to use the GetEnumerator method to create an enumerator that contains root nodes of the <xref:System.Web.UI.WebControls.TreeView> control.  \n  \n [!code-cs[TreeNodeCollectionGetEnumerator#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_193_1.aspx)]\n [!code-vb[TreeNodeCollectionGetEnumerator#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_193_1.aspx)]"
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "반복 하는 데 사용할 수 있는 열거자는 <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeCollection.IndexOf(System.Web.UI.WebControls.TreeNode)
  id: IndexOf(System.Web.UI.WebControls.TreeNode)
  parent: System.Web.UI.WebControls.TreeNodeCollection
  langs:
  - csharp
  name: IndexOf(TreeNode)
  nameWithType: TreeNodeCollection.IndexOf(TreeNode)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.IndexOf(TreeNode)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "지정 된 인덱스를 결정 <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> 개체입니다."
  remarks: "IndexOf 메서드를 사용 하 여 지정 된&0;부터 시작 하는 인덱스를 확인 하려면 <xref:System.Web.UI.WebControls.TreeNode>개체는 <xref:System.Web.UI.WebControls.TreeNodeCollection>개체입니다.</xref:System.Web.UI.WebControls.TreeNodeCollection> </xref:System.Web.UI.WebControls.TreeNode> 노드 컬렉션에 없는 경우-1이 반환 됩니다.      > [!NOTE] > 컬렉션에 여러 번 표시 하는 지정된 된 노드를 처음 나오는 항목의 인덱스가 반환 됩니다."
  example:
  - "The following example demonstrates how to use the IndexOf method to determine the index of a root node. Notice that the <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> property returns a <xref:System.Web.UI.WebControls.TreeNodeCollection> object.  \n  \n [!code-vb[TreeNodeCollectionIndexOf#1](~/add/codesnippet/visualbasic/be69754f-ce4e-4152-80b4-_1.aspx)]\n [!code-cs[TreeNodeCollectionIndexOf#1](~/add/codesnippet/csharp/be69754f-ce4e-4152-80b4-_1.aspx)]"
  syntax:
    content: public int IndexOf (System.Web.UI.WebControls.TreeNode value);
    parameters:
    - id: value
      type: System.Web.UI.WebControls.TreeNode
      description: "<xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> 찾을 개체입니다."
    return:
      type: System.Int32
      description: "첫 번째로 나타나는 항목의&0;부터 시작 하는 인덱스 <code> value </code> 내에서 <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref>이거나, 없는 경우, 그렇지 않으면-1입니다."
  overload: System.Web.UI.WebControls.TreeNodeCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeCollection.IsSynchronized
  id: IsSynchronized
  parent: System.Web.UI.WebControls.TreeNodeCollection
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: TreeNodeCollection.IsSynchronized
  fullName: System.Web.UI.WebControls.TreeNodeCollection.IsSynchronized
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "에 대 한 액세스 여부를 나타내는 값을 가져옵니다는 <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref> 이 동기화 되었으면 (스레드로부터 안전 하 게 보호)."
  remarks: "나타내려면 IsSynchronized 속성은 사용에 액세스할 수 있는지 여부는 <xref:System.Web.UI.WebControls.TreeNodeCollection>은 동기화 되었으면 (스레드로부터 안전 하 게 보호).</xref:System.Web.UI.WebControls.TreeNodeCollection> 이 속성에서 파생 되는 <xref:System.Collections.ICollection?displayProperty=fullName>클래스 및 항상 반환 하도록 재정의 `false`.</xref:System.Collections.ICollection?displayProperty=fullName>       IsSynchronized 속성에 대 한 자세한 내용은 참조는 <xref:System.Collections.ICollection.IsSynchronized%2A?displayProperty=fullName>의 속성은 <xref:System.Collections.ICollection?displayProperty=fullName>인터페이스.</xref:System.Collections.ICollection?displayProperty=fullName> </xref:System.Collections.ICollection.IsSynchronized%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.TreeNodeCollection.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Web.UI.WebControls.TreeNodeCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: TreeNodeCollection.Item(Int32)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.Item(Int32)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "가져옵니다는 <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> 개체에서 지정 된 인덱스는 <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref> 개체입니다."
  remarks: "이 인덱서를 사용 하 여 액세스 하는 <xref:System.Web.UI.WebControls.TreeNode>에서 개체는 <xref:System.Web.UI.WebControls.TreeNodeCollection>배열 표기법을 사용 하 여 지정된 된 인덱스에.</xref:System.Web.UI.WebControls.TreeNodeCollection> </xref:System.Web.UI.WebControls.TreeNode> 인덱서를 사용 하면 수정 하거나 바꿀 수 있습니다는 <xref:System.Web.UI.WebControls.TreeNode>개체 컬렉션에서 직접.</xref:System.Web.UI.WebControls.TreeNode> 컬렉션은&0;부터 시작 합니다."
  example:
  - "The following example demonstrates how to use the indexer to access an element in the <xref:System.Web.UI.WebControls.TreeNodeCollection>. Notice that the <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> and <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> properties return a <xref:System.Web.UI.WebControls.TreeNodeCollection> object.  \n  \n [!code-cs[TreeNodeCollectionAdd#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1077_1.aspx)]\n [!code-vb[TreeNodeCollectionAdd#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1077_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TreeNode this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "0부터 시작 인덱스는 <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> 검색할 개체입니다."
    return:
      type: System.Web.UI.WebControls.TreeNode
      description: "<xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> 개체에서 지정 된 인덱스는 <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.TreeNodeCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeCollection.Remove(System.Web.UI.WebControls.TreeNode)
  id: Remove(System.Web.UI.WebControls.TreeNode)
  parent: System.Web.UI.WebControls.TreeNodeCollection
  langs:
  - csharp
  name: Remove(TreeNode)
  nameWithType: TreeNodeCollection.Remove(TreeNode)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.Remove(TreeNode)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "지정 된 제거 <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> 에서 개체는 <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref> 개체입니다."
  remarks: "Remove 메서드를 사용 하 여 컬렉션에서 지정 된 노드를 제거 합니다. 해당 노드 아래에 있는 모든 항목은 다음 위로 이동 하 빈 자리를 채웁니다. 이동된 된 항목의 인덱스도 업데이트 됩니다.      > [!NOTE] >는 <xref:System.Web.UI.WebControls.TreeNodeCollection>수 null 참조 (Visual Basic에서는 Nothing)를 포함할 뿐만 아니라 복제 <xref:System.Web.UI.WebControls.TreeNode>개체.</xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNodeCollection>       사용 하 여 특정 인덱스에 있는 노드를 제거할 수 있습니다는 <xref:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt%2A>메서드.</xref:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt%2A> 사용 하 여 컬렉션의 모든 노드를 제거할 수도 있습니다는 <xref:System.Web.UI.WebControls.TreeNodeCollection.Clear%2A>메서드.</xref:System.Web.UI.WebControls.TreeNodeCollection.Clear%2A>"
  example:
  - "The following example demonstrates how to use the Remove method to programmatically remove a node from the <xref:System.Web.UI.WebControls.TreeNodeCollection>. Notice that the <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> and <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> properties each return a <xref:System.Web.UI.WebControls.TreeNodeCollection> object.  \n  \n [!code-cs[TreeNodeCollectionAdd#1](~/add/codesnippet/csharp/f8fda58d-8ad1-430c-83d7-_1.aspx)]\n [!code-vb[TreeNodeCollectionAdd#1](~/add/codesnippet/visualbasic/f8fda58d-8ad1-430c-83d7-_1.aspx)]"
  syntax:
    content: public void Remove (System.Web.UI.WebControls.TreeNode value);
    parameters:
    - id: value
      type: System.Web.UI.WebControls.TreeNode
      description: "<xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> 제거할 개체입니다."
  overload: System.Web.UI.WebControls.TreeNodeCollection.Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>value</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Web.UI.WebControls.TreeNodeCollection
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: TreeNodeCollection.RemoveAt(Int32)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "제거는 <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> 개체에서 지정 된 인덱스 위치는 <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref> 개체입니다."
  remarks: "RemoveAt 메서드를 사용 하 여 <xref:System.Web.UI.WebControls.TreeNode> <xref:System.Web.UI.WebControls.TreeNodeCollection>.</xref:System.Web.UI.WebControls.TreeNodeCollection> 지정 된 인덱스 위치에서 개체</xref:System.Web.UI.WebControls.TreeNode> 를 제거 하려면 해당 노드 아래에 있는 모든 항목은 다음 위로 이동 하 빈 자리를 채웁니다. 이동된 된 항목의 인덱스도 업데이트 됩니다.      > [!NOTE] >는 <xref:System.Web.UI.WebControls.TreeNodeCollection>수 null 참조 (Visual Basic에서는 Nothing)를 포함할 뿐만 아니라 복제 <xref:System.Web.UI.WebControls.TreeNode>개체.</xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNodeCollection>       대신 특정을 제거할 수 있습니다 <xref:System.Web.UI.WebControls.TreeNode>사용 하 여 개체는 <xref:System.Web.UI.WebControls.TreeNodeCollection.Remove%2A>메서드.</xref:System.Web.UI.WebControls.TreeNodeCollection.Remove%2A> </xref:System.Web.UI.WebControls.TreeNode> 사용 하 여 컬렉션의 모든 노드를 제거할 수도 있습니다는 <xref:System.Web.UI.WebControls.TreeNodeCollection.Clear%2A>메서드.</xref:System.Web.UI.WebControls.TreeNodeCollection.Clear%2A>"
  example:
  - "The following example demonstrates how to use the RemoveAt method to programmatically remove a node from the <xref:System.Web.UI.WebControls.TreeNodeCollection>. Notice that the <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> and <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> properties each return a <xref:System.Web.UI.WebControls.TreeNodeCollection> object.  \n  \n [!code-cs[TreeNodeCollectionAdd#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_37_1.aspx)]\n [!code-vb[TreeNodeCollectionAdd#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_37_1.aspx)]"
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "제거할 노드의의&0;부터 시작 인덱스 위치입니다."
  overload: System.Web.UI.WebControls.TreeNodeCollection.RemoveAt*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeCollection.SyncRoot
  id: SyncRoot
  parent: System.Web.UI.WebControls.TreeNodeCollection
  langs:
  - csharp
  name: SyncRoot
  nameWithType: TreeNodeCollection.SyncRoot
  fullName: System.Web.UI.WebControls.TreeNodeCollection.SyncRoot
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "에 대 한 액세스를 동기화 하는 데 사용할 수 있는 개체를 가져옵니다는 <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref> 개체입니다."
  remarks: "SyncRoot 속성의 동기화 된 버전 제공는 <xref:System.Web.UI.WebControls.TreeNodeCollection>동기화 (스레드) 코드에 사용할 수 있는.</xref:System.Web.UI.WebControls.TreeNodeCollection>      > [!CAUTION] >는 <xref:System.Web.UI.WebControls.TreeNodeCollection.IsSynchronized%2A>속성이이 클래스는 항상 반환 `false`, 않는다는 의미는 <xref:System.Web.UI.WebControls.TreeNodeCollection>클래스 (스레드로부터 안전 하지) 동기화 되지 않습니다.</xref:System.Web.UI.WebControls.TreeNodeCollection> </xref:System.Web.UI.WebControls.TreeNodeCollection.IsSynchronized%2A>       동기화 코드의 SyncRoot 개체에 대 한 작업을 수행 해야 합니다는 <xref:System.Web.UI.WebControls.TreeNodeCollection>에서 직접는 <xref:System.Web.UI.WebControls.TreeNodeCollection>자체.</xref:System.Web.UI.WebControls.TreeNodeCollection> </xref:System.Web.UI.WebControls.TreeNodeCollection> 이렇게 하면 다른 개체에서 파생 된 컬렉션의 적절 한 작업입니다. 특히, 동시에 수정할 수 있는 다른 스레드와 적절 한 동기화를 유지 관리는 <xref:System.Web.UI.WebControls.TreeNodeCollection>개체입니다.</xref:System.Web.UI.WebControls.TreeNodeCollection>      > [!NOTE] >이 구현에서 반환 되는 개체는 <xref:System.Collections.ArrayList?displayProperty=fullName>저장 하는 데 사용 되는 개체는 <xref:System.Web.UI.WebControls.TreeNode>컬렉션의 개체입니다.</xref:System.Web.UI.WebControls.TreeNode> </xref:System.Collections.ArrayList?displayProperty=fullName>       컬렉션을 열거 본질적으로 스레드로부터 안전한 프로시저가 아닙니다. 컬렉션이 동기화 되어 있을 때 다른 스레드에서 수 수정할 열거자에서 예외가 발생 하는 컬렉션입니다. 열거 동안 스레드 보안을 보장 하려면 전체 열거 동안 컬렉션을 잠글 하거나 다른 스레드에서 변경 된 내용으로 인해 발생 한 예외를 catch 합니다.       대 한 자세한 내용은 <xref:System.Web.UI.WebControls.DataGridColumnCollection.SyncRoot%2A>속성 참조는 <xref:System.Collections.ICollection.SyncRoot%2A?displayProperty=fullName>의 속성은 <xref:System.Collections.ICollection?displayProperty=fullName>인터페이스.</xref:System.Collections.ICollection?displayProperty=fullName> </xref:System.Collections.ICollection.SyncRoot%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.DataGridColumnCollection.SyncRoot%2A>"
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "A &lt;xref:System.Object?displayProperty=fullName&gt; 에 대 한 액세스를 동기화 하는 데 사용 하 여 <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.TreeNodeCollection.SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: System.Web.UI.WebControls.TreeNodeCollection
  langs:
  - csharp
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: TreeNodeCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "모든 항목을 복사는 <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref> 호환 되는&1; 차원 개체 &lt;xref:System.Array?displayProperty=fullName&gt;대상 배열의 지정된 된 인덱스부터 시작 합니다."
  remarks: "사용 하 여는 <xref:System.Web.UI.WebControls.TreeNodeCollection.CopyTo%2A>의 내용을 복사 하는 메서드는 <xref:System.Web.UI.WebControls.TreeNodeCollection>여 지정 된&0;부터 시작 <xref:System.Array?displayProperty=fullName>개체입니다.</xref:System.Array?displayProperty=fullName> </xref:System.Web.UI.WebControls.TreeNodeCollection> </xref:System.Web.UI.WebControls.TreeNodeCollection.CopyTo%2A> 항목 대상 배열의 지정 된 인덱스부터 복사 됩니다. <xref:System.Array?displayProperty=fullName>개체를 배열 <xref:System.Web.UI.WebControls.TreeNodeCollection>.</xref:System.Web.UI.WebControls.TreeNodeCollection> 의 항목에 액세스 하는 구문을 사용할 수</xref:System.Array?displayProperty=fullName> 있는       대신 사용할 수도 있습니다는 <xref:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator%2A>컬렉션의 항목에 액세스를 사용할 수 있는 열거자를 만드는 방법.</xref:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator%2A>"
  example:
  - "The following example demonstrates how to use the <xref:System.Web.UI.WebControls.TreeNodeCollection.CopyTo%2A> method to copy the values of a <xref:System.Web.UI.WebControls.TreeNodeCollection> into an array. Notice that the <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> property returns a <xref:System.Web.UI.WebControls.TreeNodeCollection> object.  \n  \n [!code-cs[TreeNodeCollectionCopyTo#1](~/add/codesnippet/csharp/58422549-a31a-41f3-a6a6-_1.aspx)]\n [!code-vb[TreeNodeCollectionCopyTo#1](~/add/codesnippet/visualbasic/58422549-a31a-41f3-a6a6-_1.aspx)]"
  syntax:
    content: void ICollection.CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "0부터 시작 &lt;xref:System.Array?displayProperty=fullName&gt; 개체에서 복사한 항목을 수신 하는 <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref>합니다."
    - id: index
      type: System.Int32
      description: "대상 배열에서 복사 된 내용을 받기 시작 하는 위치입니다."
  overload: System.Web.UI.WebControls.TreeNodeCollection.System#Collections#ICollection#CopyTo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>array</code>배열이 <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> 개체입니다."
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#IsTrackingViewState
  id: System#Web#UI#IStateManager#IsTrackingViewState
  isEii: true
  parent: System.Web.UI.WebControls.TreeNodeCollection
  langs:
  - csharp
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: TreeNodeCollection.System.Web.UI.IStateManager.IsTrackingViewState
  fullName: System.Web.UI.WebControls.TreeNodeCollection.System.Web.UI.IStateManager.IsTrackingViewState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "나타내는 값을 가져옵니다 여부는 <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref> 개체가 해당 뷰 상태의 변경 내용을 저장 합니다."
  syntax:
    content: bool System.Web.UI.IStateManager.IsTrackingViewState { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>컨트롤의 상태를 저장 하도록 표시 된 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#IsTrackingViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#LoadViewState(System.Object)
  id: System#Web#UI#IStateManager#LoadViewState(System.Object)
  isEii: true
  parent: System.Web.UI.WebControls.TreeNodeCollection
  langs:
  - csharp
  name: System.Web.UI.IStateManager.LoadViewState(Object)
  nameWithType: TreeNodeCollection.System.Web.UI.IStateManager.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.System.Web.UI.IStateManager.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "로드는 <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref> 개체의 뷰 상태를 이전에 저장 합니다."
  syntax:
    content: void IStateManager.LoadViewState (object state);
    parameters:
    - id: state
      type: System.Object
      description: "A &lt;xref:System.Object?displayProperty=fullName&gt; 저장 된 뷰 상태 값이 들어 있는입니다."
  overload: System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#SaveViewState
  id: System#Web#UI#IStateManager#SaveViewState
  isEii: true
  parent: System.Web.UI.WebControls.TreeNodeCollection
  langs:
  - csharp
  name: System.Web.UI.IStateManager.SaveViewState()
  nameWithType: TreeNodeCollection.System.Web.UI.IStateManager.SaveViewState()
  fullName: System.Web.UI.WebControls.TreeNodeCollection.System.Web.UI.IStateManager.SaveViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "뷰 상태를 변경 내용을 저장 한 &lt;xref:System.Object?displayProperty=fullName&gt;합니다."
  syntax:
    content: object IStateManager.SaveViewState ();
    parameters: []
    return:
      type: System.Object
      description: "&lt;xref:System.Object?displayProperty=fullName&gt; 뷰 상태 변경 내용이 들어 있는입니다."
  overload: System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#SaveViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#TrackViewState
  id: System#Web#UI#IStateManager#TrackViewState
  isEii: true
  parent: System.Web.UI.WebControls.TreeNodeCollection
  langs:
  - csharp
  name: System.Web.UI.IStateManager.TrackViewState()
  nameWithType: TreeNodeCollection.System.Web.UI.IStateManager.TrackViewState()
  fullName: System.Web.UI.WebControls.TreeNodeCollection.System.Web.UI.IStateManager.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "지시는 <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref> 해당 뷰 상태의 변경 내용을 추적 하도록 합니다."
  remarks: "이 메서드가 호출 된 후에 서버 컨트롤에는 <xref:System.Web.UI.Control.IsTrackingViewState%2A>속성은 반환 `true`.</xref:System.Web.UI.Control.IsTrackingViewState%2A>"
  syntax:
    content: void IStateManager.TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#TrackViewState*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Web.UI.WebControls.TreeNodeCollection.#ctor
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: TreeNodeCollection()
  nameWithType: TreeNodeCollection.TreeNodeCollection()
  fullName: System.Web.UI.WebControls.TreeNodeCollection.TreeNodeCollection()
- uid: System.Web.UI.WebControls.TreeNodeCollection.#ctor(System.Web.UI.WebControls.TreeNode)
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: TreeNodeCollection(TreeNode)
  nameWithType: TreeNodeCollection.TreeNodeCollection(TreeNode)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.TreeNodeCollection(TreeNode)
- uid: System.Web.UI.WebControls.TreeNode
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TreeNode
  nameWithType: TreeNode
  fullName: System.Web.UI.WebControls.TreeNode
- uid: System.Web.UI.WebControls.TreeNodeCollection.Add(System.Web.UI.WebControls.TreeNode)
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: Add(TreeNode)
  nameWithType: TreeNodeCollection.Add(TreeNode)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.Add(TreeNode)
- uid: System.Web.UI.WebControls.TreeNodeCollection.AddAt(System.Int32,System.Web.UI.WebControls.TreeNode)
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: AddAt(Int32,TreeNode)
  nameWithType: TreeNodeCollection.AddAt(Int32,TreeNode)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.AddAt(Int32,TreeNode)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.TreeNodeCollection.Clear
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: Clear()
  nameWithType: TreeNodeCollection.Clear()
  fullName: System.Web.UI.WebControls.TreeNodeCollection.Clear()
- uid: System.Web.UI.WebControls.TreeNodeCollection.Contains(System.Web.UI.WebControls.TreeNode)
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: Contains(TreeNode)
  nameWithType: TreeNodeCollection.Contains(TreeNode)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.Contains(TreeNode)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.TreeNodeCollection.CopyTo(System.Web.UI.WebControls.TreeNode[],System.Int32)
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: CopyTo(TreeNode[],Int32)
  nameWithType: TreeNodeCollection.CopyTo(TreeNode[],Int32)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.CopyTo(TreeNode[],Int32)
- uid: System.Web.UI.WebControls.TreeNode[]
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TreeNode
  nameWithType: TreeNode
  fullName: System.Web.UI.WebControls.TreeNode[]
  spec.csharp:
  - uid: System.Web.UI.WebControls.TreeNode
    name: TreeNode
    nameWithType: TreeNode
    fullName: TreeNode[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.UI.WebControls.TreeNodeCollection.Count
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: Count
  nameWithType: TreeNodeCollection.Count
  fullName: System.Web.UI.WebControls.TreeNodeCollection.Count
- uid: System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: TreeNodeCollection.GetEnumerator()
  fullName: System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Web.UI.WebControls.TreeNodeCollection.IndexOf(System.Web.UI.WebControls.TreeNode)
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: IndexOf(TreeNode)
  nameWithType: TreeNodeCollection.IndexOf(TreeNode)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.IndexOf(TreeNode)
- uid: System.Web.UI.WebControls.TreeNodeCollection.IsSynchronized
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: TreeNodeCollection.IsSynchronized
  fullName: System.Web.UI.WebControls.TreeNodeCollection.IsSynchronized
- uid: System.Web.UI.WebControls.TreeNodeCollection.Item(System.Int32)
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: TreeNodeCollection.Item(Int32)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.Item(Int32)
- uid: System.Web.UI.WebControls.TreeNodeCollection.Remove(System.Web.UI.WebControls.TreeNode)
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: Remove(TreeNode)
  nameWithType: TreeNodeCollection.Remove(TreeNode)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.Remove(TreeNode)
- uid: System.Web.UI.WebControls.TreeNodeCollection.RemoveAt(System.Int32)
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: TreeNodeCollection.RemoveAt(Int32)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.RemoveAt(Int32)
- uid: System.Web.UI.WebControls.TreeNodeCollection.SyncRoot
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: SyncRoot
  nameWithType: TreeNodeCollection.SyncRoot
  fullName: System.Web.UI.WebControls.TreeNodeCollection.SyncRoot
- uid: System.Web.UI.WebControls.TreeNodeCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: TreeNodeCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.System.Collections.ICollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#IsTrackingViewState
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: TreeNodeCollection.System.Web.UI.IStateManager.IsTrackingViewState
  fullName: System.Web.UI.WebControls.TreeNodeCollection.System.Web.UI.IStateManager.IsTrackingViewState
- uid: System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: System.Web.UI.IStateManager.LoadViewState(Object)
  nameWithType: TreeNodeCollection.System.Web.UI.IStateManager.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.System.Web.UI.IStateManager.LoadViewState(Object)
- uid: System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#SaveViewState
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: System.Web.UI.IStateManager.SaveViewState()
  nameWithType: TreeNodeCollection.System.Web.UI.IStateManager.SaveViewState()
  fullName: System.Web.UI.WebControls.TreeNodeCollection.System.Web.UI.IStateManager.SaveViewState()
- uid: System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#TrackViewState
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: System.Web.UI.IStateManager.TrackViewState()
  nameWithType: TreeNodeCollection.System.Web.UI.IStateManager.TrackViewState()
  fullName: System.Web.UI.WebControls.TreeNodeCollection.System.Web.UI.IStateManager.TrackViewState()
- uid: System.Web.UI.WebControls.TreeNodeCollection.#ctor*
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: TreeNodeCollection
  nameWithType: TreeNodeCollection.TreeNodeCollection
- uid: System.Web.UI.WebControls.TreeNodeCollection.Add*
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: Add
  nameWithType: TreeNodeCollection.Add
- uid: System.Web.UI.WebControls.TreeNodeCollection.AddAt*
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: AddAt
  nameWithType: TreeNodeCollection.AddAt
- uid: System.Web.UI.WebControls.TreeNodeCollection.Clear*
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: Clear
  nameWithType: TreeNodeCollection.Clear
- uid: System.Web.UI.WebControls.TreeNodeCollection.Contains*
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: Contains
  nameWithType: TreeNodeCollection.Contains
- uid: System.Web.UI.WebControls.TreeNodeCollection.CopyTo*
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: CopyTo
  nameWithType: TreeNodeCollection.CopyTo
- uid: System.Web.UI.WebControls.TreeNodeCollection.Count*
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: Count
  nameWithType: TreeNodeCollection.Count
- uid: System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator*
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: TreeNodeCollection.GetEnumerator
- uid: System.Web.UI.WebControls.TreeNodeCollection.IndexOf*
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: IndexOf
  nameWithType: TreeNodeCollection.IndexOf
- uid: System.Web.UI.WebControls.TreeNodeCollection.IsSynchronized*
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: TreeNodeCollection.IsSynchronized
- uid: System.Web.UI.WebControls.TreeNodeCollection.Item*
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: Item
  nameWithType: TreeNodeCollection.Item
- uid: System.Web.UI.WebControls.TreeNodeCollection.Remove*
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: Remove
  nameWithType: TreeNodeCollection.Remove
- uid: System.Web.UI.WebControls.TreeNodeCollection.RemoveAt*
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: RemoveAt
  nameWithType: TreeNodeCollection.RemoveAt
- uid: System.Web.UI.WebControls.TreeNodeCollection.SyncRoot*
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: SyncRoot
  nameWithType: TreeNodeCollection.SyncRoot
- uid: System.Web.UI.WebControls.TreeNodeCollection.System#Collections#ICollection#CopyTo*
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo
  nameWithType: TreeNodeCollection.System.Collections.ICollection.CopyTo
- uid: System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#IsTrackingViewState*
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: TreeNodeCollection.System.Web.UI.IStateManager.IsTrackingViewState
- uid: System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#LoadViewState*
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: System.Web.UI.IStateManager.LoadViewState
  nameWithType: TreeNodeCollection.System.Web.UI.IStateManager.LoadViewState
- uid: System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#SaveViewState*
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: System.Web.UI.IStateManager.SaveViewState
  nameWithType: TreeNodeCollection.System.Web.UI.IStateManager.SaveViewState
- uid: System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#TrackViewState*
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: System.Web.UI.IStateManager.TrackViewState
  nameWithType: TreeNodeCollection.System.Web.UI.IStateManager.TrackViewState
