### YamlMime:ManagedReference
items:
- uid: System.Data.Common.DBDataPermission
  id: DBDataPermission
  children:
  - System.Data.Common.DBDataPermission.#ctor
  - System.Data.Common.DBDataPermission.#ctor(System.Data.Common.DBDataPermission)
  - System.Data.Common.DBDataPermission.#ctor(System.Data.Common.DBDataPermissionAttribute)
  - System.Data.Common.DBDataPermission.#ctor(System.Security.Permissions.PermissionState)
  - System.Data.Common.DBDataPermission.#ctor(System.Security.Permissions.PermissionState,System.Boolean)
  - System.Data.Common.DBDataPermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)
  - System.Data.Common.DBDataPermission.AllowBlankPassword
  - System.Data.Common.DBDataPermission.Clear
  - System.Data.Common.DBDataPermission.Copy
  - System.Data.Common.DBDataPermission.CreateInstance
  - System.Data.Common.DBDataPermission.FromXml(System.Security.SecurityElement)
  - System.Data.Common.DBDataPermission.Intersect(System.Security.IPermission)
  - System.Data.Common.DBDataPermission.IsSubsetOf(System.Security.IPermission)
  - System.Data.Common.DBDataPermission.IsUnrestricted
  - System.Data.Common.DBDataPermission.ToXml
  - System.Data.Common.DBDataPermission.Union(System.Security.IPermission)
  langs:
  - csharp
  name: DBDataPermission
  nameWithType: DBDataPermission
  fullName: System.Data.Common.DBDataPermission
  type: Class
  summary: ".NET Framework 데이터 공급자를 사용자는 데이터에 액세스 하기 위해 적합 한 보안 수준을 보장할 수 있습니다."
  syntax:
    content: 'public abstract class DBDataPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission'
  inheritance:
  - System.Object
  - System.Security.CodeAccessPermission
  implements:
  - System.Security.Permissions.IUnrestrictedPermission
  inheritedMembers:
  - System.Security.CodeAccessPermission.Assert
  - System.Security.CodeAccessPermission.Demand
  - System.Security.CodeAccessPermission.Deny
  - System.Security.CodeAccessPermission.Equals(System.Object)
  - System.Security.CodeAccessPermission.GetHashCode
  - System.Security.CodeAccessPermission.PermitOnly
  - System.Security.CodeAccessPermission.RevertAll
  - System.Security.CodeAccessPermission.RevertAssert
  - System.Security.CodeAccessPermission.RevertDeny
  - System.Security.CodeAccessPermission.RevertPermitOnly
  - System.Security.CodeAccessPermission.ToString
  platform:
  - net462
- uid: System.Data.Common.DBDataPermission.#ctor
  id: '#ctor'
  parent: System.Data.Common.DBDataPermission
  langs:
  - csharp
  name: DBDataPermission()
  nameWithType: DBDataPermission.DBDataPermission()
  fullName: System.Data.Common.DBDataPermission.DBDataPermission()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "새 인스턴스를 초기화 한 <xref uid=&quot;langword_csharp_DBDataPermission&quot; name=&quot;DBDataPermission&quot; href=&quot;&quot;> </xref> 클래스입니다."
  syntax:
    content: protected DBDataPermission ();
    parameters: []
  overload: System.Data.Common.DBDataPermission.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DBDataPermission.#ctor(System.Data.Common.DBDataPermission)
  id: '#ctor(System.Data.Common.DBDataPermission)'
  parent: System.Data.Common.DBDataPermission
  langs:
  - csharp
  name: DBDataPermission(DBDataPermission)
  nameWithType: DBDataPermission.DBDataPermission(DBDataPermission)
  fullName: System.Data.Common.DBDataPermission.DBDataPermission(DBDataPermission)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "새 인스턴스를 초기화 한 <xref uid=&quot;langword_csharp_DBDataPermission&quot; name=&quot;DBDataPermission&quot; href=&quot;&quot;> </xref> 클래스는 기존 사용 <xref uid=&quot;langword_csharp_DBDataPermission&quot; name=&quot;DBDataPermission&quot; href=&quot;&quot;> </xref>합니다."
  syntax:
    content: protected DBDataPermission (System.Data.Common.DBDataPermission permission);
    parameters:
    - id: permission
      type: System.Data.Common.DBDataPermission
      description: "기존 <xref uid=&quot;langword_csharp_DBDataPermission&quot; name=&quot;DBDataPermission&quot; href=&quot;&quot;> </xref> 새 만드는 데 <xref uid=&quot;langword_csharp_DBDataPermission&quot; name=&quot;DBDataPermission&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Data.Common.DBDataPermission.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DBDataPermission.#ctor(System.Data.Common.DBDataPermissionAttribute)
  id: '#ctor(System.Data.Common.DBDataPermissionAttribute)'
  parent: System.Data.Common.DBDataPermission
  langs:
  - csharp
  name: DBDataPermission(DBDataPermissionAttribute)
  nameWithType: DBDataPermission.DBDataPermission(DBDataPermissionAttribute)
  fullName: System.Data.Common.DBDataPermission.DBDataPermission(DBDataPermissionAttribute)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "새 인스턴스를 초기화 한 <xref uid=&quot;langword_csharp_DBDataPermission&quot; name=&quot;DBDataPermission&quot; href=&quot;&quot;> </xref> 지정된 된 <xref uid=&quot;langword_csharp_DBDataPermissionAttribute&quot; name=&quot;DBDataPermissionAttribute&quot; href=&quot;&quot;> </xref>합니다."
  syntax:
    content: protected DBDataPermission (System.Data.Common.DBDataPermissionAttribute permissionAttribute);
    parameters:
    - id: permissionAttribute
      type: System.Data.Common.DBDataPermissionAttribute
      description: "사용자 지정 보안 특성에 연결 된 보안 동작입니다."
  overload: System.Data.Common.DBDataPermission.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DBDataPermission.#ctor(System.Security.Permissions.PermissionState)
  id: '#ctor(System.Security.Permissions.PermissionState)'
  parent: System.Data.Common.DBDataPermission
  langs:
  - csharp
  name: DBDataPermission(PermissionState)
  nameWithType: DBDataPermission.DBDataPermission(PermissionState)
  fullName: System.Data.Common.DBDataPermission.DBDataPermission(PermissionState)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "새 인스턴스를 초기화 한 <xref uid=&quot;langword_csharp_DBDataPermission&quot; name=&quot;DBDataPermission&quot; href=&quot;&quot;> </xref> 지정된 된 <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref> 값입니다."
  syntax:
    content: protected DBDataPermission (System.Security.Permissions.PermissionState state);
    parameters:
    - id: state
      type: System.Security.Permissions.PermissionState
      description: "중 하나는 <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref> 값입니다."
  overload: System.Data.Common.DBDataPermission.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DBDataPermission.#ctor(System.Security.Permissions.PermissionState,System.Boolean)
  id: '#ctor(System.Security.Permissions.PermissionState,System.Boolean)'
  parent: System.Data.Common.DBDataPermission
  langs:
  - csharp
  name: DBDataPermission(PermissionState,Boolean)
  nameWithType: DBDataPermission.DBDataPermission(PermissionState,Boolean)
  fullName: System.Data.Common.DBDataPermission.DBDataPermission(PermissionState,Boolean)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "새 인스턴스를 초기화 한 <xref uid=&quot;langword_csharp_DBDataPermission&quot; name=&quot;DBDataPermission&quot; href=&quot;&quot;> </xref> 지정된 된 <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref> 값 및 빈 암호를 사용할 수 있는지 여부를 나타내는 값입니다."
  remarks: "<xref:System.Security.Permissions.PermissionState>열거형 우선는 <xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A>속성.</xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A> </xref:System.Security.Permissions.PermissionState> 따라서 설정 하면 <xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A>를 `false`를 설정 해야 <xref:System.Security.Permissions.PermissionState>를 `None` 사용자 빈 암호를 사용 하는 연결 하지 못하도록 하려면.</xref:System.Security.Permissions.PermissionState> </xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A>"
  syntax:
    content: protected DBDataPermission (System.Security.Permissions.PermissionState state, bool allowBlankPassword);
    parameters:
    - id: state
      type: System.Security.Permissions.PermissionState
      description: "중 하나는 <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref> 값입니다."
    - id: allowBlankPassword
      type: System.Boolean
      description: "빈 암호를 사용할 수 있는지 여부를 나타냅니다."
  overload: System.Data.Common.DBDataPermission.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DBDataPermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)
  id: Add(System.String,System.String,System.Data.KeyRestrictionBehavior)
  parent: System.Data.Common.DBDataPermission
  langs:
  - csharp
  name: Add(String,String,KeyRestrictionBehavior)
  nameWithType: DBDataPermission.Add(String,String,KeyRestrictionBehavior)
  fullName: System.Data.Common.DBDataPermission.Add(String,String,KeyRestrictionBehavior)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "지정된 된 연결 문자열에 대 한 액세스 기존 상태에 추가 된 <xref uid=&quot;langword_csharp_DBDataPermission&quot; name=&quot;DBDataPermission&quot; href=&quot;&quot;> </xref>합니다."
  remarks: "이 메서드를 구현할 때 유용할 수 있습니다.-A.NET framework 데이터 공급자입니다.      -데이터 액세스 권한을 부여 받아야 하는 API입니다.      -관리 도구 또는 설치 프로그램을 보안 정책을 수정 해야 합니다.      -하나 이상의 규칙을 지정 하는 경우 더 제한적인 규칙 선택 되어 있습니다."
  syntax:
    content: public virtual void Add (string connectionString, string restrictions, System.Data.KeyRestrictionBehavior behavior);
    parameters:
    - id: connectionString
      type: System.String
      description: "허용 되는 연결 문자열입니다."
    - id: restrictions
      type: System.String
      description: "허용 되거나 허용 되지 않는 연결 문자열 매개 변수를 식별 하는 문자열입니다."
    - id: behavior
      type: System.Data.KeyRestrictionBehavior
      description: "중 하나는 <xref href=&quot;System.Data.KeyRestrictionBehavior&quot;> </xref> 속성입니다."
  overload: System.Data.Common.DBDataPermission.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DBDataPermission.AllowBlankPassword
  id: AllowBlankPassword
  parent: System.Data.Common.DBDataPermission
  langs:
  - csharp
  name: AllowBlankPassword
  nameWithType: DBDataPermission.AllowBlankPassword
  fullName: System.Data.Common.DBDataPermission.AllowBlankPassword
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "빈 암호를 사용할 수 있는지 여부를 나타내는 값을 가져옵니다."
  remarks: "<xref:System.Security.Permissions.PermissionState>열거형 AllowBlankPassword 속성 보다 우선 합니다.</xref:System.Security.Permissions.PermissionState> 따라서 AllowBlankPassword을 설정 하면 `false`를 설정 해야 <xref:System.Security.Permissions.PermissionState>를 `None` 사용자 빈 암호를 사용 하는 연결 하지 못하도록 하려면.</xref:System.Security.Permissions.PermissionState>"
  syntax:
    content: public bool AllowBlankPassword { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>그렇지 않으면 빈 암호가 허용 된 경우 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Data.Common.DBDataPermission.AllowBlankPassword*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DBDataPermission.Clear
  id: Clear
  parent: System.Data.Common.DBDataPermission
  langs:
  - csharp
  name: Clear()
  nameWithType: DBDataPermission.Clear()
  fullName: System.Data.Common.DBDataPermission.Clear()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "이전 사용 하 여 추가 된 모든 사용 권한을 제거는 <xref:System.Data.Common.DBDataPermission.Add*>메서드.</xref:System.Data.Common.DBDataPermission.Add*>"
  syntax:
    content: protected void Clear ();
    parameters: []
  overload: System.Data.Common.DBDataPermission.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DBDataPermission.Copy
  id: Copy
  parent: System.Data.Common.DBDataPermission
  langs:
  - csharp
  name: Copy()
  nameWithType: DBDataPermission.Copy()
  fullName: System.Data.Common.DBDataPermission.Copy()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "만들고 현재 권한 개체의 동일한 복사본을 반환 합니다."
  remarks: "사용 권한 개체의 복사본을 원래 권한 개체 리소스에 동일한 액세스를 권한을 나타냅니다."
  syntax:
    content: public override System.Security.IPermission Copy ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "현재 권한 개체의 복사본입니다."
  overload: System.Data.Common.DBDataPermission.Copy*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DBDataPermission.CreateInstance
  id: CreateInstance
  parent: System.Data.Common.DBDataPermission
  langs:
  - csharp
  name: CreateInstance()
  nameWithType: DBDataPermission.CreateInstance()
  fullName: System.Data.Common.DBDataPermission.CreateInstance()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "새 인스턴스를 만듭니다는 <xref uid=&quot;langword_csharp_DBDataPermission&quot; name=&quot;DBDataPermission&quot; href=&quot;&quot;> </xref> 클래스입니다."
  syntax:
    content: protected virtual System.Data.Common.DBDataPermission CreateInstance ();
    parameters: []
    return:
      type: System.Data.Common.DBDataPermission
      description: "새 <xref uid=&quot;langword_csharp_DBDataPermission&quot; name=&quot;DBDataPermission&quot; href=&quot;&quot;> </xref> 개체입니다."
  overload: System.Data.Common.DBDataPermission.CreateInstance*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DBDataPermission.FromXml(System.Security.SecurityElement)
  id: FromXml(System.Security.SecurityElement)
  parent: System.Data.Common.DBDataPermission
  langs:
  - csharp
  name: FromXml(SecurityElement)
  nameWithType: DBDataPermission.FromXml(SecurityElement)
  fullName: System.Data.Common.DBDataPermission.FromXml(SecurityElement)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "포함 된 XML 인코딩에서 지정된 된 상태의 보안 개체를 다시 만듭니다."
  remarks: "보안 개체를 확장 하는 사용자 지정 코드를 구현 해야는 `ToXml` 및 `FromXml` 개체 보안 인코딩할 수 있도록 하는 메서드."
  syntax:
    content: public override void FromXml (System.Security.SecurityElement securityElement);
    parameters:
    - id: securityElement
      type: System.Security.SecurityElement
      description: "XML은 보안 개체를 다시 만드는 데 사용할 인코딩입니다."
  overload: System.Data.Common.DBDataPermission.FromXml*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DBDataPermission.Intersect(System.Security.IPermission)
  id: Intersect(System.Security.IPermission)
  parent: System.Data.Common.DBDataPermission
  langs:
  - csharp
  name: Intersect(IPermission)
  nameWithType: DBDataPermission.Intersect(IPermission)
  fullName: System.Data.Common.DBDataPermission.Intersect(IPermission)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "현재 권한 개체와 지정된 된 권한 개체의 교집합을 나타내는 새 사용 권한 개체를 반환 합니다."
  remarks: "두 사용 권한의 공통 사항에는 모두 설명 하는 작업 집합을 설명 하는 권한입니다. 원래 사용 권한을 모두 전달 하는 요구만 교집합에 전달 합니다."
  syntax:
    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "현재 권한 개체 집합과 교차 하는 사용 권한 개체입니다. 현재 사용 권한과 동일한 형식 이어야 합니다."
    return:
      type: System.Security.IPermission
      description: "현재 권한 개체와 지정된 된 권한 개체의 교차 부분을 나타내는 새 사용 권한 개체입니다. 이 새 사용 권한 개체는 null 참조 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> Visual basic에서) 교집합이 비어 있는 경우."
  overload: System.Data.Common.DBDataPermission.Intersect*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> target </code> 매개 변수가 null 참조 하지 않습니다 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> Visual basic에서) 및 현재 권한 개체와 같은 클래스의 인스턴스가 아닙니다."
  platform:
  - net462
- uid: System.Data.Common.DBDataPermission.IsSubsetOf(System.Security.IPermission)
  id: IsSubsetOf(System.Security.IPermission)
  parent: System.Data.Common.DBDataPermission
  langs:
  - csharp
  name: IsSubsetOf(IPermission)
  nameWithType: DBDataPermission.IsSubsetOf(IPermission)
  fullName: System.Data.Common.DBDataPermission.IsSubsetOf(IPermission)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "현재 사용 권한 개체가 지정한 사용 권한 개체의 하위 집합 인지를 나타내는 값을 반환 합니다."
  remarks: "현재 권한 개체는 현재 사용 권한 개체가 지정한 사용 권한 개체가 완전히 포함 된 작업 집합이 지정 하는 경우 지정된 된 권한 개체의 하위 집합입니다. 예를 들어 c:\\example.txt 있는 사용 권한을의 하위 집합인 c: \\에 대 한 액세스를 나타내는 사용 권한의\\\\합니다. 이 메서드가 반환 하는 경우 `true`, 현재 사용 권한과 액세스 나타냅니다 보호 된 리소스에 보다 지정된 된 권한 개체입니다."
  syntax:
    content: public override bool IsSubsetOf (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "사용 권한 개체 하위 집합 관계에 대해 테스트 하는 것입니다. 이 개체는 현재 사용 권한과 동일한 형식 이어야 합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>현재 사용 권한 개체가 지정한 사용 권한 개체의 하위 집합 라인인 경우 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Data.Common.DBDataPermission.IsSubsetOf*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> target </code> 매개 변수는 현재 사용 권한과 동일한 형식이 없는 개체입니다."
  platform:
  - net462
- uid: System.Data.Common.DBDataPermission.IsUnrestricted
  id: IsUnrestricted
  parent: System.Data.Common.DBDataPermission
  langs:
  - csharp
  name: IsUnrestricted()
  nameWithType: DBDataPermission.IsUnrestricted()
  fullName: System.Data.Common.DBDataPermission.IsUnrestricted()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "사용 권한 구문에 대 한 지식 없이 무제한 권한으로 표현 될 수 있는지 여부를 나타내는 값을 반환 합니다."
  syntax:
    content: public bool IsUnrestricted ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>무제한 권한으로 나타낼 수 있으면입니다."
  overload: System.Data.Common.DBDataPermission.IsUnrestricted*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DBDataPermission.ToXml
  id: ToXml
  parent: System.Data.Common.DBDataPermission
  langs:
  - csharp
  name: ToXml()
  nameWithType: DBDataPermission.ToXml()
  fullName: System.Data.Common.DBDataPermission.ToXml()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "보안 개체 및 현재 상태에 대 한 XML 인코딩을 만듭니다."
  remarks: "보안 개체를 확장 하는 사용자 지정 코드는 ToXml를 구현 해야 하 고 <xref:System.Data.Common.DBDataPermission.FromXml%2A>개체 보안 인코딩할 수 있도록 하는 메서드.</xref:System.Data.Common.DBDataPermission.FromXml%2A>"
  syntax:
    content: public override System.Security.SecurityElement ToXml ();
    parameters: []
    return:
      type: System.Security.SecurityElement
      description: "모든 상태 정보를 포함 하는 보안 개체의 XML 인코딩입니다."
  overload: System.Data.Common.DBDataPermission.ToXml*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DBDataPermission.Union(System.Security.IPermission)
  id: Union(System.Security.IPermission)
  parent: System.Data.Common.DBDataPermission
  langs:
  - csharp
  name: Union(IPermission)
  nameWithType: DBDataPermission.Union(IPermission)
  fullName: System.Data.Common.DBDataPermission.Union(IPermission)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "현재 인스턴스와 지정 된 사용 권한 개체의 권한을 합한 새 사용 권한 개체를 반환 합니다."
  remarks: "Union에 대 한 호출의 결과 현재 사용 권한 개체와 지정한 사용 권한 개체를 모두에서 허용 하는 모든 작업을 나타내는 권한입니다. 사용 권한 중 하나를 전달 하는 모든 요청의 합집합을 통과 합니다."
  syntax:
    content: public override System.Security.IPermission Union (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "현재 사용 권한과 결합할 사용 권한 개체입니다. 현재 사용 권한과 동일한 형식 이어야 합니다."
    return:
      type: System.Security.IPermission
      description: "현재 권한 개체와 지정된 된 권한 개체의 합집합을 나타내는 새 사용 권한 개체입니다."
  overload: System.Data.Common.DBDataPermission.Union*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> target </code> 개체가 현재 권한 개체와 동일한 형식이 아닙니다."
  platform:
  - net462
references:
- uid: System.Security.CodeAccessPermission
  isExternal: false
  name: System.Security.CodeAccessPermission
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Data.Common.DBDataPermission.#ctor
  parent: System.Data.Common.DBDataPermission
  isExternal: false
  name: DBDataPermission()
  nameWithType: DBDataPermission.DBDataPermission()
  fullName: System.Data.Common.DBDataPermission.DBDataPermission()
- uid: System.Data.Common.DBDataPermission.#ctor(System.Data.Common.DBDataPermission)
  parent: System.Data.Common.DBDataPermission
  isExternal: false
  name: DBDataPermission(DBDataPermission)
  nameWithType: DBDataPermission.DBDataPermission(DBDataPermission)
  fullName: System.Data.Common.DBDataPermission.DBDataPermission(DBDataPermission)
- uid: System.Data.Common.DBDataPermission
  parent: System.Data.Common
  isExternal: false
  name: DBDataPermission
  nameWithType: DBDataPermission
  fullName: System.Data.Common.DBDataPermission
- uid: System.Data.Common.DBDataPermission.#ctor(System.Data.Common.DBDataPermissionAttribute)
  parent: System.Data.Common.DBDataPermission
  isExternal: false
  name: DBDataPermission(DBDataPermissionAttribute)
  nameWithType: DBDataPermission.DBDataPermission(DBDataPermissionAttribute)
  fullName: System.Data.Common.DBDataPermission.DBDataPermission(DBDataPermissionAttribute)
- uid: System.Data.Common.DBDataPermissionAttribute
  parent: System.Data.Common
  isExternal: false
  name: DBDataPermissionAttribute
  nameWithType: DBDataPermissionAttribute
  fullName: System.Data.Common.DBDataPermissionAttribute
- uid: System.Data.Common.DBDataPermission.#ctor(System.Security.Permissions.PermissionState)
  parent: System.Data.Common.DBDataPermission
  isExternal: false
  name: DBDataPermission(PermissionState)
  nameWithType: DBDataPermission.DBDataPermission(PermissionState)
  fullName: System.Data.Common.DBDataPermission.DBDataPermission(PermissionState)
- uid: System.Security.Permissions.PermissionState
  parent: System.Security.Permissions
  isExternal: false
  name: PermissionState
  nameWithType: PermissionState
  fullName: System.Security.Permissions.PermissionState
- uid: System.Data.Common.DBDataPermission.#ctor(System.Security.Permissions.PermissionState,System.Boolean)
  parent: System.Data.Common.DBDataPermission
  isExternal: false
  name: DBDataPermission(PermissionState,Boolean)
  nameWithType: DBDataPermission.DBDataPermission(PermissionState,Boolean)
  fullName: System.Data.Common.DBDataPermission.DBDataPermission(PermissionState,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Common.DBDataPermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)
  parent: System.Data.Common.DBDataPermission
  isExternal: false
  name: Add(String,String,KeyRestrictionBehavior)
  nameWithType: DBDataPermission.Add(String,String,KeyRestrictionBehavior)
  fullName: System.Data.Common.DBDataPermission.Add(String,String,KeyRestrictionBehavior)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.KeyRestrictionBehavior
  parent: System.Data
  isExternal: false
  name: KeyRestrictionBehavior
  nameWithType: KeyRestrictionBehavior
  fullName: System.Data.KeyRestrictionBehavior
- uid: System.Data.Common.DBDataPermission.AllowBlankPassword
  parent: System.Data.Common.DBDataPermission
  isExternal: false
  name: AllowBlankPassword
  nameWithType: DBDataPermission.AllowBlankPassword
  fullName: System.Data.Common.DBDataPermission.AllowBlankPassword
- uid: System.Data.Common.DBDataPermission.Clear
  parent: System.Data.Common.DBDataPermission
  isExternal: false
  name: Clear()
  nameWithType: DBDataPermission.Clear()
  fullName: System.Data.Common.DBDataPermission.Clear()
- uid: System.Data.Common.DBDataPermission.Copy
  parent: System.Data.Common.DBDataPermission
  isExternal: false
  name: Copy()
  nameWithType: DBDataPermission.Copy()
  fullName: System.Data.Common.DBDataPermission.Copy()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Data.Common.DBDataPermission.CreateInstance
  parent: System.Data.Common.DBDataPermission
  isExternal: false
  name: CreateInstance()
  nameWithType: DBDataPermission.CreateInstance()
  fullName: System.Data.Common.DBDataPermission.CreateInstance()
- uid: System.Data.Common.DBDataPermission.FromXml(System.Security.SecurityElement)
  parent: System.Data.Common.DBDataPermission
  isExternal: false
  name: FromXml(SecurityElement)
  nameWithType: DBDataPermission.FromXml(SecurityElement)
  fullName: System.Data.Common.DBDataPermission.FromXml(SecurityElement)
- uid: System.Security.SecurityElement
  parent: System.Security
  isExternal: false
  name: SecurityElement
  nameWithType: SecurityElement
  fullName: System.Security.SecurityElement
- uid: System.Data.Common.DBDataPermission.Intersect(System.Security.IPermission)
  parent: System.Data.Common.DBDataPermission
  isExternal: false
  name: Intersect(IPermission)
  nameWithType: DBDataPermission.Intersect(IPermission)
  fullName: System.Data.Common.DBDataPermission.Intersect(IPermission)
- uid: System.Data.Common.DBDataPermission.IsSubsetOf(System.Security.IPermission)
  parent: System.Data.Common.DBDataPermission
  isExternal: false
  name: IsSubsetOf(IPermission)
  nameWithType: DBDataPermission.IsSubsetOf(IPermission)
  fullName: System.Data.Common.DBDataPermission.IsSubsetOf(IPermission)
- uid: System.Data.Common.DBDataPermission.IsUnrestricted
  parent: System.Data.Common.DBDataPermission
  isExternal: false
  name: IsUnrestricted()
  nameWithType: DBDataPermission.IsUnrestricted()
  fullName: System.Data.Common.DBDataPermission.IsUnrestricted()
- uid: System.Data.Common.DBDataPermission.ToXml
  parent: System.Data.Common.DBDataPermission
  isExternal: false
  name: ToXml()
  nameWithType: DBDataPermission.ToXml()
  fullName: System.Data.Common.DBDataPermission.ToXml()
- uid: System.Data.Common.DBDataPermission.Union(System.Security.IPermission)
  parent: System.Data.Common.DBDataPermission
  isExternal: false
  name: Union(IPermission)
  nameWithType: DBDataPermission.Union(IPermission)
  fullName: System.Data.Common.DBDataPermission.Union(IPermission)
- uid: System.Data.Common.DBDataPermission.#ctor*
  parent: System.Data.Common.DBDataPermission
  isExternal: false
  name: DBDataPermission
  nameWithType: DBDataPermission.DBDataPermission
- uid: System.Data.Common.DBDataPermission.Add*
  parent: System.Data.Common.DBDataPermission
  isExternal: false
  name: Add
  nameWithType: DBDataPermission.Add
- uid: System.Data.Common.DBDataPermission.AllowBlankPassword*
  parent: System.Data.Common.DBDataPermission
  isExternal: false
  name: AllowBlankPassword
  nameWithType: DBDataPermission.AllowBlankPassword
- uid: System.Data.Common.DBDataPermission.Clear*
  parent: System.Data.Common.DBDataPermission
  isExternal: false
  name: Clear
  nameWithType: DBDataPermission.Clear
- uid: System.Data.Common.DBDataPermission.Copy*
  parent: System.Data.Common.DBDataPermission
  isExternal: false
  name: Copy
  nameWithType: DBDataPermission.Copy
- uid: System.Data.Common.DBDataPermission.CreateInstance*
  parent: System.Data.Common.DBDataPermission
  isExternal: false
  name: CreateInstance
  nameWithType: DBDataPermission.CreateInstance
- uid: System.Data.Common.DBDataPermission.FromXml*
  parent: System.Data.Common.DBDataPermission
  isExternal: false
  name: FromXml
  nameWithType: DBDataPermission.FromXml
- uid: System.Data.Common.DBDataPermission.Intersect*
  parent: System.Data.Common.DBDataPermission
  isExternal: false
  name: Intersect
  nameWithType: DBDataPermission.Intersect
- uid: System.Data.Common.DBDataPermission.IsSubsetOf*
  parent: System.Data.Common.DBDataPermission
  isExternal: false
  name: IsSubsetOf
  nameWithType: DBDataPermission.IsSubsetOf
- uid: System.Data.Common.DBDataPermission.IsUnrestricted*
  parent: System.Data.Common.DBDataPermission
  isExternal: false
  name: IsUnrestricted
  nameWithType: DBDataPermission.IsUnrestricted
- uid: System.Data.Common.DBDataPermission.ToXml*
  parent: System.Data.Common.DBDataPermission
  isExternal: false
  name: ToXml
  nameWithType: DBDataPermission.ToXml
- uid: System.Data.Common.DBDataPermission.Union*
  parent: System.Data.Common.DBDataPermission
  isExternal: false
  name: Union
  nameWithType: DBDataPermission.Union
