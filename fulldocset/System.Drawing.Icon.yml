### YamlMime:ManagedReference
items:
- uid: System.Drawing.Icon
  id: Icon
  children:
  - System.Drawing.Icon.#ctor(System.IO.Stream)
  - System.Drawing.Icon.#ctor(System.String)
  - System.Drawing.Icon.#ctor(System.Drawing.Icon,System.Drawing.Size)
  - System.Drawing.Icon.#ctor(System.IO.Stream,System.Drawing.Size)
  - System.Drawing.Icon.#ctor(System.String,System.Drawing.Size)
  - System.Drawing.Icon.#ctor(System.Type,System.String)
  - System.Drawing.Icon.#ctor(System.Drawing.Icon,System.Int32,System.Int32)
  - System.Drawing.Icon.#ctor(System.IO.Stream,System.Int32,System.Int32)
  - System.Drawing.Icon.#ctor(System.String,System.Int32,System.Int32)
  - System.Drawing.Icon.Clone
  - System.Drawing.Icon.Dispose
  - System.Drawing.Icon.ExtractAssociatedIcon(System.String)
  - System.Drawing.Icon.Finalize
  - System.Drawing.Icon.FromHandle(System.IntPtr)
  - System.Drawing.Icon.Handle
  - System.Drawing.Icon.Height
  - System.Drawing.Icon.Save(System.IO.Stream)
  - System.Drawing.Icon.Size
  - System.Drawing.Icon.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Drawing.Icon.ToBitmap
  - System.Drawing.Icon.ToString
  - System.Drawing.Icon.Width
  langs:
  - csharp
  name: Icon
  nameWithType: Icon
  fullName: System.Drawing.Icon
  type: Class
  summary: "개체를 나타내는 데 사용 되는 작은 비트맵 이미지인 Windows 아이콘을 나타냅니다. 크기가 시스템에 의해 결정 되지만 아이콘 투명 한 비트맵으로 생각할 수 있습니다."
  remarks: "파일, 스트림 또는 포함 된 리소스에서 아이콘 개체를 생성할 수 있습니다. 생성자의 목록을 <xref:System.Drawing.Icon.%23ctor%2A>.</xref:System.Drawing.Icon.%23ctor%2A> 을 참조 하십시오. 사용 하 여 비트맵 아이콘 변환할 수도 있습니다는 <xref:System.Drawing.Icon.ToBitmap%2A>메서드.</xref:System.Drawing.Icon.ToBitmap%2A>       아이콘 리소스 아이콘 이미지가 여러 개 포함할 수 있습니다. 하나의 아이콘 파일이 다양 한 크기 및 색 농도 이미지를 포함할 수 있습니다. 응용 프로그램에서 사용 되는 이미지는 운영 체제 및 설정에 따라 달라 집니다. 다음 목록에는 일반적인 크기는 아이콘에 대 한 세부 정보:-16 픽셀 x 16 픽셀-32 픽셀 x 32 픽셀-48 픽셀 x 48 픽셀"
  example:
  - "The following code example demonstrates how to use the <xref:System.Drawing.Icon.ToBitmap%2A> method. This example is designed to be used with Windows Forms. Create a form and paste the following code into it. Call the `IconToBitmap` method in the form's <xref:System.Windows.Forms.Control.Paint> event handler, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.MiscExamples#9](~/add/codesnippet/csharp/t-system.drawing.icon_1.cs)]\n [!code-cpp[System.Drawing.MiscExamples#9](~/add/codesnippet/cpp/t-system.drawing.icon_1.cpp)]\n [!code-vb[System.Drawing.MiscExamples#9](~/add/codesnippet/visualbasic/t-system.drawing.icon_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.Editor("System.Drawing.Design.IconEditor, System.Drawing.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]

      [System.ComponentModel.TypeConverter(typeof(System.Drawing.IconConverter))]

      public sealed class Icon : MarshalByRefObject, ICloneable, IDisposable, System.Runtime.Serialization.ISerializable
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  implements:
  - System.ICloneable
  - System.IDisposable
  - System.Runtime.Serialization.ISerializable
  inheritedMembers:
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Drawing.Icon.#ctor(System.IO.Stream)
  id: '#ctor(System.IO.Stream)'
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: Icon(Stream)
  nameWithType: Icon.Icon(Stream)
  fullName: System.Drawing.Icon.Icon(Stream)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Drawing.Icon&quot;> </xref> 에서 지정된 된 데이터 스트림 클래스입니다."
  remarks: "아이콘 리소스 아이콘 이미지가 여러 개 포함할 수 있습니다. 하나의 아이콘 파일이 다양 한 크기 및 색 농도 이미지를 포함할 수 있습니다. 응용 프로그램에서 사용 되는 이미지는 운영 체제 및 설정에 따라 달라 집니다. 다음 목록에는 일반적인 크기는 아이콘에 대 한 세부 정보:-16 픽셀 x 16 픽셀-32 픽셀 x 32 픽셀-48 x 48 픽셀이이 생성자에 지정된 된 스트림에 포함 된 가장 작은 이미지 반환 합니다."
  syntax:
    content: public Icon (System.IO.Stream stream);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "로드할 데이터 스트림을 <xref href=&quot;System.Drawing.Icon&quot;> </xref>합니다."
  overload: System.Drawing.Icon.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>stream</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Icon.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: Icon(String)
  nameWithType: Icon.Icon(String)
  fullName: System.Drawing.Icon.Icon(String)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Drawing.Icon&quot;> </xref> 클래스에서 지정된 된 파일 이름입니다."
  remarks: "아이콘 리소스 아이콘 이미지가 여러 개 포함할 수 있습니다. 하나의 아이콘 파일이 다양 한 크기 및 색 농도 이미지를 포함할 수 있습니다. 응용 프로그램에서 사용 되는 이미지는 운영 체제 및 설정에 따라 달라 집니다. 다음 목록에는 일반적인 크기는 아이콘에 대 한 세부 정보:-16 픽셀 x 16 픽셀-32 픽셀 x 32 픽셀-48 x 48 픽셀이이 생성자는 지정된 된 파일에 포함 된 가장 작은 이미지를 반환 합니다."
  syntax:
    content: public Icon (string fileName);
    parameters:
    - id: fileName
      type: System.String
      description: "로드할 파일의 <xref href=&quot;System.Drawing.Icon&quot;> </xref> 에서 합니다."
  overload: System.Drawing.Icon.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Icon.#ctor(System.Drawing.Icon,System.Drawing.Size)
  id: '#ctor(System.Drawing.Icon,System.Drawing.Size)'
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: Icon(Icon,Size)
  nameWithType: Icon.Icon(Icon,Size)
  fullName: System.Drawing.Icon.Icon(Icon,Size)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Drawing.Icon&quot;> </xref> 클래스와 요청 된 크기와 일치 하는 아이콘의 버전을 찾으려고 합니다."
  remarks: "버전을 찾을 수 없으면 크기를 정확 하 게 일치 하는 경우 가장 가까운 사용 됩니다. 경우는 `original` 매개 변수는 한 <xref:System.Drawing.Icon>단일 크기,이 메서드는만 복제 아이콘을 만듭니다.</xref:System.Drawing.Icon> 확장 기능을 사용 하는 <xref:System.Drawing.Graphics.DrawImage%2A>아이콘 크기를 조정 하려면 메서드.</xref:System.Drawing.Graphics.DrawImage%2A>"
  syntax:
    content: public Icon (System.Drawing.Icon original, System.Drawing.Size size);
    parameters:
    - id: original
      type: System.Drawing.Icon
      description: "<xref href=&quot;System.Drawing.Icon&quot;> </xref> 크기가 새로 조정된 된 아이콘을 로드할입니다."
    - id: size
      type: System.Drawing.Size
      description: "A <xref href=&quot;System.Drawing.Size&quot;> </xref> 새 너비와 높이 지정 하는 구조 <xref href=&quot;System.Drawing.Icon&quot;> </xref>합니다."
  overload: System.Drawing.Icon.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>original</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Icon.#ctor(System.IO.Stream,System.Drawing.Size)
  id: '#ctor(System.IO.Stream,System.Drawing.Size)'
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: Icon(Stream,Size)
  nameWithType: Icon.Icon(Stream,Size)
  fullName: System.Drawing.Icon.Icon(Stream,Size)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Drawing.Icon&quot;> </xref> 지정 된 스트림에서 지정된 된 크기의 클래스."
  syntax:
    content: public Icon (System.IO.Stream stream, System.Drawing.Size size);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "아이콘 데이터가 들어 있는 스트림."
    - id: size
      type: System.Drawing.Size
      description: "원하는 크기의 아이콘입니다."
  overload: System.Drawing.Icon.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> stream </code> 은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 또는 이미지 데이터를 포함 하지 않음."
  platform:
  - net462
- uid: System.Drawing.Icon.#ctor(System.String,System.Drawing.Size)
  id: '#ctor(System.String,System.Drawing.Size)'
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: Icon(String,Size)
  nameWithType: Icon.Icon(String,Size)
  fullName: System.Drawing.Icon.Icon(String,Size)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Drawing.Icon&quot;> </xref> 지정된 된 파일에서 지정된 된 크기의 클래스입니다."
  remarks: "지정된 된 파일에 원하는 크기와 일치 하는 이미지가 없으면 가장 가까운 크기를 가진 아이콘이 반환 됩니다.       `fileName` 현재 응용 프로그램 디렉터리에 없는 경우에 전체 경로 포함 해야 합니다."
  syntax:
    content: public Icon (string fileName, System.Drawing.Size size);
    parameters:
    - id: fileName
      type: System.String
      description: "아이콘 데이터가 들어 있는 파일에 대 한 경로 이름입니다."
    - id: size
      type: System.Drawing.Size
      description: "원하는 크기의 아이콘입니다."
  overload: System.Drawing.Icon.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> string </code> 은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 또는 이미지 데이터를 포함 하지 않음."
  platform:
  - net462
- uid: System.Drawing.Icon.#ctor(System.Type,System.String)
  id: '#ctor(System.Type,System.String)'
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: Icon(Type,String)
  nameWithType: Icon.Icon(Type,String)
  fullName: System.Drawing.Icon.Icon(Type,String)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Drawing.Icon&quot;> </xref> 에서 지정된 된 어셈블리에 리소스 클래스입니다."
  remarks: "이 생성자를 만듭니다는 <xref:System.Drawing.Icon>로 지정 된 이름 가진 리소스에서는 `resource` 로 지정 된 형식이 포함 된 어셈블리에 대 한 매개 변수는 `type` 매개 변수.</xref:System.Drawing.Icon>       이 생성자는 리소스의 문자열 이름 함께 지정 된 형식의 네임 스페이스를 결합 하 고 어셈블리 매니페스트에 대 한 일치 항목을 찾습니다. 예를 들어에 전달할 수 있습니다는 <xref:System.Windows.Forms.Control>유형 및 `Error.ico` 이 생성자를 찾습니다 명명 된 리소스에 대 한 `System.Windows.Forms.Error.ico`.</xref:System.Windows.Forms.Control>"
  example:
  - "The following code example demonstrates how to use the Icon constructor. To run this example, paste the code into a Windows Form and handle the form's <xref:System.Windows.Forms.Control.Paint> event. Call the `ConstructAnIconFromAType` method from the <xref:System.Windows.Forms.Control.Paint> event handler, passing `e` as <xref:System.EventArgs>.  \n  \n [!code-vb[System.Drawing.Misc3#3](~/add/codesnippet/visualbasic/m-system.drawing.icon.sh_0_1.vb)]\n [!code-cs[System.Drawing.Misc3#3](~/add/codesnippet/csharp/m-system.drawing.icon.sh_0_1.cs)]"
  syntax:
    content: public Icon (Type type, string resource);
    parameters:
    - id: type
      type: System.Type
      description: "A <xref:System.Type>를 리소스에 대 한 어셈블리를 지정 하는.</xref:System.Type>"
    - id: resource
      type: System.String
      description: "로드할 리소스 이름입니다."
  overload: System.Drawing.Icon.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "지정한 아이콘 <code> resource </code> 지정 된 포함 된 어셈블리에서 찾을 수 없습니다 <code> type </code>합니다."
  platform:
  - net462
- uid: System.Drawing.Icon.#ctor(System.Drawing.Icon,System.Int32,System.Int32)
  id: '#ctor(System.Drawing.Icon,System.Int32,System.Int32)'
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: Icon(Icon,Int32,Int32)
  nameWithType: Icon.Icon(Icon,Int32,Int32)
  fullName: System.Drawing.Icon.Icon(Icon,Int32,Int32)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Drawing.Icon&quot;> </xref> 클래스와 요청 된 크기와 일치 하는 아이콘의 버전을 찾으려고 합니다."
  remarks: "버전을 찾을 수 없으면 크기를 정확 하 게 일치 하는 경우 가장 가까운 사용 됩니다. 경우는 `original` 매개 변수는 한 <xref:System.Drawing.Icon>단일 크기,이 메서드는만 복제 아이콘을 만듭니다.</xref:System.Drawing.Icon> 확장 기능을 사용 하는 <xref:System.Drawing.Graphics.DrawImage%2A>아이콘 크기를 조정 하려면 메서드.</xref:System.Drawing.Graphics.DrawImage%2A>"
  example:
  - "The following code example demonstrates how to use the <xref:System.Drawing.Icon.ToBitmap%2A> method. This example is designed to be used with Windows Forms. Create a form and paste the following code into it. Call the `IconToBitmap` method in the form's <xref:System.Windows.Forms.Control.Paint> event handler, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.MiscExamples#9](~/add/codesnippet/csharp/m-system.drawing.icon.sh_1_1.cs)]\n [!code-cpp[System.Drawing.MiscExamples#9](~/add/codesnippet/cpp/m-system.drawing.icon.sh_1_1.cpp)]\n [!code-vb[System.Drawing.MiscExamples#9](~/add/codesnippet/visualbasic/m-system.drawing.icon.sh_1_1.vb)]"
  syntax:
    content: public Icon (System.Drawing.Icon original, int width, int height);
    parameters:
    - id: original
      type: System.Drawing.Icon
      description: "다른 크기를 로드할 아이콘입니다."
    - id: width
      type: System.Int32
      description: "새 아이콘의 너비입니다."
    - id: height
      type: System.Int32
      description: "새 아이콘의 높이입니다."
  overload: System.Drawing.Icon.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>original</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Icon.#ctor(System.IO.Stream,System.Int32,System.Int32)
  id: '#ctor(System.IO.Stream,System.Int32,System.Int32)'
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: Icon(Stream,Int32,Int32)
  nameWithType: Icon.Icon(Stream,Int32,Int32)
  fullName: System.Drawing.Icon.Icon(Stream,Int32,Int32)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Drawing.Icon&quot;> </xref> 클래스에서 지정된 된 데이터 스트림 및 지정 된 너비와 높이입니다."
  syntax:
    content: public Icon (System.IO.Stream stream, int width, int height);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "아이콘을 로드할 데이터 스트림."
    - id: width
      type: System.Int32
      description: "픽셀 아이콘의 너비입니다."
    - id: height
      type: System.Int32
      description: "픽셀 아이콘의 높이입니다."
  overload: System.Drawing.Icon.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>stream</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Icon.#ctor(System.String,System.Int32,System.Int32)
  id: '#ctor(System.String,System.Int32,System.Int32)'
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: Icon(String,Int32,Int32)
  nameWithType: Icon.Icon(String,Int32,Int32)
  fullName: System.Drawing.Icon.Icon(String,Int32,Int32)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Drawing.Icon&quot;> </xref> 지정 된 너비와 높이 지정된 된 파일에서 클래스입니다."
  remarks: "지정된 된 파일의 원하는 높이 너비를 일치 하는 이미지가 없으면 가장 가까운 크기를 가진 아이콘이 반환 됩니다.       `fileName` 현재 응용 프로그램 디렉터리에 없는 경우에 전체 경로 포함 해야 합니다."
  syntax:
    content: public Icon (string fileName, int width, int height);
    parameters:
    - id: fileName
      type: System.String
      description: "이름 및 경로를 포함 하는 파일의 <xref href=&quot;System.Drawing.Icon&quot;> </xref> 데이터입니다."
    - id: width
      type: System.Int32
      description: "원하는 너비는 <xref href=&quot;System.Drawing.Icon&quot;> </xref>합니다."
    - id: height
      type: System.Int32
      description: "원하는 높이 <xref href=&quot;System.Drawing.Icon&quot;> </xref>합니다."
  overload: System.Drawing.Icon.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> string </code> 은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 또는 이미지 데이터를 포함 하지 않음."
  platform:
  - net462
- uid: System.Drawing.Icon.Clone
  id: Clone
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: Clone()
  nameWithType: Icon.Clone()
  fullName: System.Drawing.Icon.Clone()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "복제는 <xref href=&quot;System.Drawing.Icon&quot;> </xref>, 중복 이미지를 만듭니다."
  syntax:
    content: public object Clone ();
    parameters: []
    return:
      type: System.Object
      description: "으로 캐스팅 될 수 있는 개체는 <xref href=&quot;System.Drawing.Icon&quot;> </xref>합니다."
  overload: System.Drawing.Icon.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Icon.Dispose
  id: Dispose
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: Dispose()
  nameWithType: Icon.Dispose()
  fullName: System.Drawing.Icon.Dispose()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "사용 하는 모든 리소스를 해제 <xref href=&quot;System.Drawing.Icon&quot;> </xref>합니다."
  remarks: "호출 `Dispose` 하면이 사용 되는 리소스 <xref:System.Drawing.Icon>다른 용도에 다시 할당 됩니다.</xref:System.Drawing.Icon>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Drawing.Icon.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Icon.ExtractAssociatedIcon(System.String)
  id: ExtractAssociatedIcon(System.String)
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: ExtractAssociatedIcon(String)
  nameWithType: Icon.ExtractAssociatedIcon(String)
  fullName: System.Drawing.Icon.ExtractAssociatedIcon(String)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "지정된 된 파일에 포함 된 이미지의 아이콘 표현을 반환 합니다."
  remarks: "상대 경로 현재 작업 디렉터리에 상대적인 것으로 간주 됩니다.       ExtractAssociatedIcon 비트맵을 사용 하는 경우 응용 프로그램을 실행 중인 시스템에 비트맵 파일 축소판 그림으로 표시 되어야 하는 레지스트리 설정 된 경우 미리 보기 이미지 아이콘 대신 반환할 수 있습니다."
  example:
  - "The following code example demonstrates how to use the ExtractAssociatedIcon method. To run this example, paste the code into a Windows Form and call `ExtractAssociatedIconEx` from the form's constructor or <xref:System.Windows.Forms.Form.Load> event handler.  \n  \n [!code-vb[System.Drawing.Misc3#2](~/add/codesnippet/visualbasic/m-system.drawing.icon.ex_1.vb)]\n [!code-cs[System.Drawing.Misc3#2](~/add/codesnippet/csharp/m-system.drawing.icon.ex_1.cs)]"
  syntax:
    content: public static System.Drawing.Icon ExtractAssociatedIcon (string filePath);
    parameters:
    - id: filePath
      type: System.String
      description: "이미지가 포함 된 파일 경로입니다."
    return:
      type: System.Drawing.Icon
      description: "<xref href=&quot;System.Drawing.Icon&quot;> </xref> 지정된 된 파일에 포함 된 이미지의 표현입니다."
  overload: System.Drawing.Icon.ExtractAssociatedIcon*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> filePath </code> 올바른 파일을 나타내지 않습니다.       -또는- <code> filePath </code> 범용 명명 규칙 (UNC) 경로 나타냅니다."
  platform:
  - net462
- uid: System.Drawing.Icon.Finalize
  id: Finalize
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: Finalize()
  nameWithType: Icon.Finalize()
  fullName: System.Drawing.Icon.Finalize()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "개체가를 리소스를 해제 하 고 가비지 수집에서 회수 하기 전에 다른 정리 작업을 수행할 수 있습니다."
  syntax:
    content: ~Icon ();
    parameters: []
  overload: System.Drawing.Icon.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Icon.FromHandle(System.IntPtr)
  id: FromHandle(System.IntPtr)
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: FromHandle(IntPtr)
  nameWithType: Icon.FromHandle(IntPtr)
  fullName: System.Drawing.Icon.FromHandle(IntPtr)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "GDI + 만듭니다 <xref href=&quot;System.Drawing.Icon&quot;> </xref> 아이콘에 지정된 된 창 핸들에서 (<xref uid=&quot;langword_csharp_HICON&quot; name=&quot;HICON&quot; href=&quot;&quot;></xref>)."
  remarks: "이 방법을 사용 하는 경우 삭제 해야 원래 아이콘 사용 하 여는 `DestroyIcon` 리소스 해제 되도록 하는 Win32 API에서 메서드."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a <xref:System.Drawing.Bitmap>.  \n  \n-   Draws that object to the screen.  \n  \n-   Gets an icon handle for the <xref:System.Drawing.Bitmap>.  \n  \n-   Sets the <xref:System.Windows.Forms.Form.Icon%2A?displayProperty=fullName> attribute of the form to an icon created from the handle.  \n  \n-   Calls the Win32 API function `DestroyIcon` to release resources.  \n  \n [!code-cpp[System.Drawing.ClassicBitmapExamples#6](~/add/codesnippet/cpp/m-system.drawing.icon.fr_1.cpp)]\n [!code-cs[System.Drawing.ClassicBitmapExamples#6](~/add/codesnippet/csharp/m-system.drawing.icon.fr_1.cs)]\n [!code-vb[System.Drawing.ClassicBitmapExamples#6](~/add/codesnippet/visualbasic/m-system.drawing.icon.fr_1.vb)]"
  syntax:
    content: public static System.Drawing.Icon FromHandle (IntPtr handle);
    parameters:
    - id: handle
      type: System.IntPtr
      description: "아이콘에 대 한 창 핸들입니다."
    return:
      type: System.Drawing.Icon
      description: "<xref href=&quot;System.Drawing.Icon&quot;> </xref> 이 메서드를 만듭니다."
  overload: System.Drawing.Icon.FromHandle*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Icon.Handle
  id: Handle
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: Handle
  nameWithType: Icon.Handle
  fullName: System.Drawing.Icon.Handle
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이 대 한 창 핸들을 가져옵니다 <xref href=&quot;System.Drawing.Icon&quot;> </xref>합니다. 핸들의 복사본이 아닙니다. 해제 하지 마세요."
  remarks: ''
  example:
  - "The following code example demonstrates how to load a bitmap from an <xref:System.Drawing.Icon> handle using the <xref:System.Drawing.GraphicsUnit> enumeration and how to use the <xref:System.Drawing.Rectangle.Round%2A> method to draw the rectangle bounds of a bitmap.  \n  \n This example is designed to be used with Windows Forms. Create a form that contains a button named `Button2`. Paste the code into the form and associate this method with the button's <xref:System.Windows.Forms.Control.Click> event.  \n  \n [!code-cs[System.Drawing.BitmapMembers#1](~/add/codesnippet/csharp/p-system.drawing.icon.ha_1.cs)]\n [!code-vb[System.Drawing.BitmapMembers#1](~/add/codesnippet/visualbasic/p-system.drawing.icon.ha_1.vb)]\n [!code-cpp[System.Drawing.BitmapMembers#1](~/add/codesnippet/cpp/p-system.drawing.icon.ha_1.cpp)]"
  syntax:
    content: public IntPtr Handle { get; }
    return:
      type: System.IntPtr
      description: "아이콘에 대 한 Windows 핸들입니다."
  overload: System.Drawing.Icon.Handle*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Icon.Height
  id: Height
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: Height
  nameWithType: Icon.Height
  fullName: System.Drawing.Icon.Height
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이 항목의 높이 가져옵니다 <xref href=&quot;System.Drawing.Icon&quot;> </xref>합니다."
  syntax:
    content: public int Height { get; }
    return:
      type: System.Int32
      description: "이 항목의 높이 <xref href=&quot;System.Drawing.Icon&quot;> </xref>합니다."
  overload: System.Drawing.Icon.Height*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Icon.Save(System.IO.Stream)
  id: Save(System.IO.Stream)
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: Save(Stream)
  nameWithType: Icon.Save(Stream)
  fullName: System.Drawing.Icon.Save(Stream)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이 저장 <xref href=&quot;System.Drawing.Icon&quot;> </xref> <xref:System.IO.Stream>.</xref:System.IO.Stream> 지정 된 출력을"
  syntax:
    content: public void Save (System.IO.Stream outputStream);
    parameters:
    - id: outputStream
      type: System.IO.Stream
      description: "<xref:System.IO.Stream>에 저장할 수 있습니다.</xref:System.IO.Stream>"
  overload: System.Drawing.Icon.Save*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Icon.Size
  id: Size
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: Size
  nameWithType: Icon.Size
  fullName: System.Drawing.Icon.Size
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이 크기를 가져옵니다 <xref href=&quot;System.Drawing.Icon&quot;> </xref>합니다."
  syntax:
    content: public System.Drawing.Size Size { get; }
    return:
      type: System.Drawing.Size
      description: "A <xref href=&quot;System.Drawing.Size&quot;> </xref> 이의 높이 너비를 지정 하는 구조 <xref href=&quot;System.Drawing.Icon&quot;> </xref>합니다."
  overload: System.Drawing.Icon.Size*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Icon.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  isEii: true
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: Icon.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Drawing.Icon.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "정보를 표시 한 <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> 대상 개체를 직렬화 하는 데 필요한 데이터를 사용 합니다."
  syntax:
    content: void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo si, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: si
      type: System.Runtime.Serialization.SerializationInfo
      description: "<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> 데이터로 채울 합니다."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "대상 (참조 <xref:System.Runtime.Serialization.StreamingContext>)이이 serialization에 대 한.</xref:System.Runtime.Serialization.StreamingContext>"
  overload: System.Drawing.Icon.System#Runtime#Serialization#ISerializable#GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Icon.ToBitmap
  id: ToBitmap
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: ToBitmap()
  nameWithType: Icon.ToBitmap()
  fullName: System.Drawing.Icon.ToBitmap()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이 변환 <xref href=&quot;System.Drawing.Icon&quot;> </xref> GDI + <xref href=&quot;System.Drawing.Bitmap&quot;> </xref>합니다."
  remarks: "비트맵으로 변환 하 고 결과 비트맵 이미지의 투명 한 색으로 설정 됩니다는 아이콘의 투명 영역 손실 됩니다. `RGB(13,11,12)`합니다. 반환 된 비트맵은 원래 아이콘과 같은 높이 너비에 있습니다.      > [!NOTE] > 프레임 워크 버전 4.6 지원으로 시작 하는.ico 파일의 PNG 프레임에 대 한 추가 되었습니다. 이전 버전의 framework 대상으로 하지만 4.6 비트에서 실행 되는 응용 프로그램에 다음 줄을 추가 하 여 새 동작을에 선택할 수는 `<runtime>` app.config 파일의 섹션:`<AppContextSwitchOverrides value=&quot;Switch.System.Drawing.DontSupportPngFramesInIcons=false&quot; />`"
  example:
  - "The following code example demonstrates how to use the ToBitmap method. This example is designed to be used with Windows Forms. Create a form and paste the following code into it. Call the `IconToBitmap` method in the form's .<xref:System.Windows.Forms.Control.Paint> event handler, passing `e` as <xref:System.Windows.Forms.PaintEventArgs> .  \n  \n [!code-cs[System.Drawing.MiscExamples#9](~/add/codesnippet/csharp/m-system.drawing.icon.to_1.cs)]\n [!code-cpp[System.Drawing.MiscExamples#9](~/add/codesnippet/cpp/m-system.drawing.icon.to_1.cpp)]\n [!code-vb[System.Drawing.MiscExamples#9](~/add/codesnippet/visualbasic/m-system.drawing.icon.to_1.vb)]"
  syntax:
    content: public System.Drawing.Bitmap ToBitmap ();
    parameters: []
    return:
      type: System.Drawing.Bitmap
      description: "A <xref href=&quot;System.Drawing.Bitmap&quot;> </xref> 변환 된 나타내는 <xref href=&quot;System.Drawing.Icon&quot;> </xref>합니다."
  overload: System.Drawing.Icon.ToBitmap*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Icon.ToString
  id: ToString
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: ToString()
  nameWithType: Icon.ToString()
  fullName: System.Drawing.Icon.ToString()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "설명 하는 사람이 읽을 수 있는 문자열을 가져옵니다는 <xref href=&quot;System.Drawing.Icon&quot;> </xref>합니다."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "설명 하는 문자열은 <xref href=&quot;System.Drawing.Icon&quot;> </xref>합니다."
  overload: System.Drawing.Icon.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Icon.Width
  id: Width
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: Width
  nameWithType: Icon.Width
  fullName: System.Drawing.Icon.Width
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이 항목의 너비를 가져옵니다 <xref href=&quot;System.Drawing.Icon&quot;> </xref>합니다."
  syntax:
    content: public int Width { get; }
    return:
      type: System.Int32
      description: "이 너비 <xref href=&quot;System.Drawing.Icon&quot;> </xref>합니다."
  overload: System.Drawing.Icon.Width*
  exceptions: []
  platform:
  - net462
references:
- uid: System.MarshalByRefObject
  isExternal: false
  name: System.MarshalByRefObject
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Drawing.Icon.#ctor(System.IO.Stream)
  parent: System.Drawing.Icon
  isExternal: false
  name: Icon(Stream)
  nameWithType: Icon.Icon(Stream)
  fullName: System.Drawing.Icon.Icon(Stream)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Drawing.Icon.#ctor(System.String)
  parent: System.Drawing.Icon
  isExternal: false
  name: Icon(String)
  nameWithType: Icon.Icon(String)
  fullName: System.Drawing.Icon.Icon(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Drawing.Icon.#ctor(System.Drawing.Icon,System.Drawing.Size)
  parent: System.Drawing.Icon
  isExternal: false
  name: Icon(Icon,Size)
  nameWithType: Icon.Icon(Icon,Size)
  fullName: System.Drawing.Icon.Icon(Icon,Size)
- uid: System.Drawing.Icon
  parent: System.Drawing
  isExternal: false
  name: Icon
  nameWithType: Icon
  fullName: System.Drawing.Icon
- uid: System.Drawing.Size
  parent: System.Drawing
  isExternal: false
  name: Size
  nameWithType: Size
  fullName: System.Drawing.Size
- uid: System.Drawing.Icon.#ctor(System.IO.Stream,System.Drawing.Size)
  parent: System.Drawing.Icon
  isExternal: false
  name: Icon(Stream,Size)
  nameWithType: Icon.Icon(Stream,Size)
  fullName: System.Drawing.Icon.Icon(Stream,Size)
- uid: System.Drawing.Icon.#ctor(System.String,System.Drawing.Size)
  parent: System.Drawing.Icon
  isExternal: false
  name: Icon(String,Size)
  nameWithType: Icon.Icon(String,Size)
  fullName: System.Drawing.Icon.Icon(String,Size)
- uid: System.Drawing.Icon.#ctor(System.Type,System.String)
  parent: System.Drawing.Icon
  isExternal: false
  name: Icon(Type,String)
  nameWithType: Icon.Icon(Type,String)
  fullName: System.Drawing.Icon.Icon(Type,String)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Drawing.Icon.#ctor(System.Drawing.Icon,System.Int32,System.Int32)
  parent: System.Drawing.Icon
  isExternal: false
  name: Icon(Icon,Int32,Int32)
  nameWithType: Icon.Icon(Icon,Int32,Int32)
  fullName: System.Drawing.Icon.Icon(Icon,Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Drawing.Icon.#ctor(System.IO.Stream,System.Int32,System.Int32)
  parent: System.Drawing.Icon
  isExternal: false
  name: Icon(Stream,Int32,Int32)
  nameWithType: Icon.Icon(Stream,Int32,Int32)
  fullName: System.Drawing.Icon.Icon(Stream,Int32,Int32)
- uid: System.Drawing.Icon.#ctor(System.String,System.Int32,System.Int32)
  parent: System.Drawing.Icon
  isExternal: false
  name: Icon(String,Int32,Int32)
  nameWithType: Icon.Icon(String,Int32,Int32)
  fullName: System.Drawing.Icon.Icon(String,Int32,Int32)
- uid: System.Drawing.Icon.Clone
  parent: System.Drawing.Icon
  isExternal: false
  name: Clone()
  nameWithType: Icon.Clone()
  fullName: System.Drawing.Icon.Clone()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Drawing.Icon.Dispose
  parent: System.Drawing.Icon
  isExternal: false
  name: Dispose()
  nameWithType: Icon.Dispose()
  fullName: System.Drawing.Icon.Dispose()
- uid: System.Drawing.Icon.ExtractAssociatedIcon(System.String)
  parent: System.Drawing.Icon
  isExternal: false
  name: ExtractAssociatedIcon(String)
  nameWithType: Icon.ExtractAssociatedIcon(String)
  fullName: System.Drawing.Icon.ExtractAssociatedIcon(String)
- uid: System.Drawing.Icon.Finalize
  parent: System.Drawing.Icon
  isExternal: false
  name: Finalize()
  nameWithType: Icon.Finalize()
  fullName: System.Drawing.Icon.Finalize()
- uid: System.Drawing.Icon.FromHandle(System.IntPtr)
  parent: System.Drawing.Icon
  isExternal: false
  name: FromHandle(IntPtr)
  nameWithType: Icon.FromHandle(IntPtr)
  fullName: System.Drawing.Icon.FromHandle(IntPtr)
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Drawing.Icon.Handle
  parent: System.Drawing.Icon
  isExternal: false
  name: Handle
  nameWithType: Icon.Handle
  fullName: System.Drawing.Icon.Handle
- uid: System.Drawing.Icon.Height
  parent: System.Drawing.Icon
  isExternal: false
  name: Height
  nameWithType: Icon.Height
  fullName: System.Drawing.Icon.Height
- uid: System.Drawing.Icon.Save(System.IO.Stream)
  parent: System.Drawing.Icon
  isExternal: false
  name: Save(Stream)
  nameWithType: Icon.Save(Stream)
  fullName: System.Drawing.Icon.Save(Stream)
- uid: System.Drawing.Icon.Size
  parent: System.Drawing.Icon
  isExternal: false
  name: Size
  nameWithType: Icon.Size
  fullName: System.Drawing.Icon.Size
- uid: System.Drawing.Icon.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Drawing.Icon
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: Icon.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Drawing.Icon.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Drawing.Icon.ToBitmap
  parent: System.Drawing.Icon
  isExternal: false
  name: ToBitmap()
  nameWithType: Icon.ToBitmap()
  fullName: System.Drawing.Icon.ToBitmap()
- uid: System.Drawing.Bitmap
  parent: System.Drawing
  isExternal: false
  name: Bitmap
  nameWithType: Bitmap
  fullName: System.Drawing.Bitmap
- uid: System.Drawing.Icon.ToString
  parent: System.Drawing.Icon
  isExternal: false
  name: ToString()
  nameWithType: Icon.ToString()
  fullName: System.Drawing.Icon.ToString()
- uid: System.Drawing.Icon.Width
  parent: System.Drawing.Icon
  isExternal: false
  name: Width
  nameWithType: Icon.Width
  fullName: System.Drawing.Icon.Width
- uid: System.Drawing.Icon.#ctor*
  parent: System.Drawing.Icon
  isExternal: false
  name: Icon
  nameWithType: Icon.Icon
- uid: System.Drawing.Icon.Clone*
  parent: System.Drawing.Icon
  isExternal: false
  name: Clone
  nameWithType: Icon.Clone
- uid: System.Drawing.Icon.Dispose*
  parent: System.Drawing.Icon
  isExternal: false
  name: Dispose
  nameWithType: Icon.Dispose
- uid: System.Drawing.Icon.ExtractAssociatedIcon*
  parent: System.Drawing.Icon
  isExternal: false
  name: ExtractAssociatedIcon
  nameWithType: Icon.ExtractAssociatedIcon
- uid: System.Drawing.Icon.Finalize*
  parent: System.Drawing.Icon
  isExternal: false
  name: Finalize
  nameWithType: Icon.Finalize
- uid: System.Drawing.Icon.FromHandle*
  parent: System.Drawing.Icon
  isExternal: false
  name: FromHandle
  nameWithType: Icon.FromHandle
- uid: System.Drawing.Icon.Handle*
  parent: System.Drawing.Icon
  isExternal: false
  name: Handle
  nameWithType: Icon.Handle
- uid: System.Drawing.Icon.Height*
  parent: System.Drawing.Icon
  isExternal: false
  name: Height
  nameWithType: Icon.Height
- uid: System.Drawing.Icon.Save*
  parent: System.Drawing.Icon
  isExternal: false
  name: Save
  nameWithType: Icon.Save
- uid: System.Drawing.Icon.Size*
  parent: System.Drawing.Icon
  isExternal: false
  name: Size
  nameWithType: Icon.Size
- uid: System.Drawing.Icon.System#Runtime#Serialization#ISerializable#GetObjectData*
  parent: System.Drawing.Icon
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData
  nameWithType: Icon.System.Runtime.Serialization.ISerializable.GetObjectData
- uid: System.Drawing.Icon.ToBitmap*
  parent: System.Drawing.Icon
  isExternal: false
  name: ToBitmap
  nameWithType: Icon.ToBitmap
- uid: System.Drawing.Icon.ToString*
  parent: System.Drawing.Icon
  isExternal: false
  name: ToString
  nameWithType: Icon.ToString
- uid: System.Drawing.Icon.Width*
  parent: System.Drawing.Icon
  isExternal: false
  name: Width
  nameWithType: Icon.Width
