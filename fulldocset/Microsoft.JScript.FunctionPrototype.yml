### YamlMime:ManagedReference
items:
- uid: Microsoft.JScript.FunctionPrototype
  id: FunctionPrototype
  children:
  - Microsoft.JScript.FunctionPrototype.apply(System.Object,System.Object,System.Object)
  - Microsoft.JScript.FunctionPrototype.call(System.Object,System.Object,System.Object[])
  - Microsoft.JScript.FunctionPrototype.constructor
  - Microsoft.JScript.FunctionPrototype.toString(System.Object)
  langs:
  - csharp
  name: FunctionPrototype
  nameWithType: FunctionPrototype
  fullName: Microsoft.JScript.FunctionPrototype
  type: Class
  summary: "정적 메서드 및 속성을 제공 <xref href=&quot;Microsoft.JScript.FunctionObject&quot;> </xref> 개체입니다. 이 클래스의 모든 메서드는 메서드에 대 한 액세스를 요청 하는 개체에 대 한 참조를 전달 하 여 호출 됩니다. 이 클래스는 기본 제공 개체 모델 범주에 속합니다."
  syntax:
    content: 'public class FunctionPrototype : Microsoft.JScript.ScriptFunction'
  inheritance:
  - System.Object
  - Microsoft.JScript.ScriptObject
  - Microsoft.JScript.JSObject
  - Microsoft.JScript.ScriptFunction
  implements: []
  inheritedMembers:
  - Microsoft.JScript.JSObject.AddField(System.String)
  - Microsoft.JScript.JSObject.field_table
  - Microsoft.JScript.JSObject.GetMember(System.String,System.Reflection.BindingFlags)
  - Microsoft.JScript.JSObject.GetMembers(System.Reflection.BindingFlags)
  - Microsoft.JScript.JSObject.SetMemberValue2(System.String,System.Object)
  - Microsoft.JScript.JSObject.System#Collections#IEnumerable#GetEnumerator
  - Microsoft.JScript.JSObject.System#Runtime#InteropServices#Expando#IExpando#AddMethod(System.String,System.Delegate)
  - Microsoft.JScript.JSObject.System#Runtime#InteropServices#Expando#IExpando#AddProperty(System.String)
  - Microsoft.JScript.JSObject.System#Runtime#InteropServices#Expando#IExpando#RemoveMember(System.Reflection.MemberInfo)
  - Microsoft.JScript.ScriptFunction.CreateInstance(System.Object[])
  - Microsoft.JScript.ScriptFunction.GetPrototypeForConstructedObject
  - Microsoft.JScript.ScriptFunction.ilength
  - Microsoft.JScript.ScriptFunction.Invoke(System.Object,System.Object[])
  - Microsoft.JScript.ScriptFunction.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])
  - Microsoft.JScript.ScriptFunction.length
  - Microsoft.JScript.ScriptFunction.prototype
  - Microsoft.JScript.ScriptFunction.ToString
  - Microsoft.JScript.ScriptObject.engine
  - Microsoft.JScript.ScriptObject.GetField(System.String,System.Reflection.BindingFlags)
  - Microsoft.JScript.ScriptObject.GetFields(System.Reflection.BindingFlags)
  - Microsoft.JScript.ScriptObject.GetMethod(System.String,System.Reflection.BindingFlags)
  - Microsoft.JScript.ScriptObject.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])
  - Microsoft.JScript.ScriptObject.GetMethods(System.Reflection.BindingFlags)
  - Microsoft.JScript.ScriptObject.GetParent
  - Microsoft.JScript.ScriptObject.GetProperties(System.Reflection.BindingFlags)
  - Microsoft.JScript.ScriptObject.GetProperty(System.String,System.Reflection.BindingFlags)
  - Microsoft.JScript.ScriptObject.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  - Microsoft.JScript.ScriptObject.Item(System.Double)
  - Microsoft.JScript.ScriptObject.Item(System.Int32)
  - Microsoft.JScript.ScriptObject.Item(System.Object[])
  - Microsoft.JScript.ScriptObject.Item(System.String)
  - Microsoft.JScript.ScriptObject.parent
  - Microsoft.JScript.ScriptObject.UnderlyingSystemType
  - Microsoft.JScript.ScriptObject.WrapMembers(System.Reflection.MemberInfo,System.Object)
  - Microsoft.JScript.ScriptObject.WrapMembers(System.Reflection.MemberInfo[],System.Object)
  - Microsoft.JScript.ScriptObject.WrapMembers(System.Reflection.MemberInfo[],System.Object,Microsoft.JScript.SimpleHashtable)
  platform:
  - net462
- uid: Microsoft.JScript.FunctionPrototype.apply(System.Object,System.Object,System.Object)
  id: apply(System.Object,System.Object,System.Object)
  parent: Microsoft.JScript.FunctionPrototype
  langs:
  - csharp
  name: apply(Object,Object,Object)
  nameWithType: FunctionPrototype.apply(Object,Object,Object)
  fullName: Microsoft.JScript.FunctionPrototype.apply(Object,Object,Object)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "이 개체가 나타내는 해야 하는 경우 인수 배열에 지정 된 인수 개체를 변환 하는 함수를 호출 합니다."
  syntax:
    content: public static object apply (object thisob, object thisarg, object argArray);
    parameters:
    - id: thisob
      type: System.Object
      description: "이 메서드가 수행 되는 개체입니다."
    - id: thisarg
      type: System.Object
      description: "현재 기본 범위입니다. 포함 된 개체는 <xref uid=&quot;langword_csharp_with&quot; name=&quot;with&quot; href=&quot;&quot;> </xref> 문 범위 또는 전역 범위입니다."
    - id: argArray
      type: System.Object
      description: "인수를 함수에 전달 하는 <xref href=&quot;Microsoft.JScript.ArgumentsObject&quot;> </xref> 또는 <xref href=&quot;Microsoft.JScript.ArrayObject&quot;> </xref>합니다."
    return:
      type: System.Object
      description: "반환 값이이 개체가 나타내는 함수에 대 한 호출입니다."
  overload: Microsoft.JScript.FunctionPrototype.apply*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.FunctionPrototype.call(System.Object,System.Object,System.Object[])
  id: call(System.Object,System.Object,System.Object[])
  parent: Microsoft.JScript.FunctionPrototype
  langs:
  - csharp
  name: call(Object,Object,Object[])
  nameWithType: FunctionPrototype.call(Object,Object,Object[])
  fullName: Microsoft.JScript.FunctionPrototype.call(Object,Object,Object[])
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "이 개체가 나타내는 함수를 호출 합니다."
  syntax:
    content: public static object call (object thisob, object thisarg, object[] args);
    parameters:
    - id: thisob
      type: System.Object
      description: "이 메서드가 수행 되는 개체입니다."
    - id: thisarg
      type: System.Object
      description: "현재 기본 범위입니다. 포함 된 개체는 <xref uid=&quot;langword_csharp_with&quot; name=&quot;with&quot; href=&quot;&quot;> </xref> 문 범위 또는 전역 범위입니다."
    - id: args
      type: System.Object[]
      description: "배열 함수에 전달할 인수입니다."
    return:
      type: System.Object
      description: "반환 값이이 개체가 나타내는 함수에 대 한 호출입니다."
  overload: Microsoft.JScript.FunctionPrototype.call*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.FunctionPrototype.constructor
  id: constructor
  parent: Microsoft.JScript.FunctionPrototype
  langs:
  - csharp
  name: constructor
  nameWithType: FunctionPrototype.constructor
  fullName: Microsoft.JScript.FunctionPrototype.constructor
  type: Property
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "이 프로토타입을 사용 하는 프로토타입 기반 개체에 대 한 참조를 가져옵니다."
  syntax:
    content: public static Microsoft.JScript.FunctionConstructor constructor { get; }
    return:
      type: Microsoft.JScript.FunctionConstructor
      description: "프로토타입 기반 개체에 대 한 참조입니다."
  overload: Microsoft.JScript.FunctionPrototype.constructor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.FunctionPrototype.toString(System.Object)
  id: toString(System.Object)
  parent: Microsoft.JScript.FunctionPrototype
  langs:
  - csharp
  name: toString(Object)
  nameWithType: FunctionPrototype.toString(Object)
  fullName: Microsoft.JScript.FunctionPrototype.toString(Object)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "지정된 된 개체의 문자열 표현을 만듭니다."
  syntax:
    content: public static string toString (object thisob);
    parameters:
    - id: thisob
      type: System.Object
      description: "이 메서드가 수행 되는 개체입니다."
    return:
      type: System.String
      description: "문자열 표현을 <code> thisob </code> 함수 이름이 들어 있는입니다."
  overload: Microsoft.JScript.FunctionPrototype.toString*
  exceptions: []
  platform:
  - net462
references:
- uid: Microsoft.JScript.ScriptFunction
  isExternal: false
  name: Microsoft.JScript.ScriptFunction
- uid: Microsoft.JScript.FunctionPrototype.apply(System.Object,System.Object,System.Object)
  parent: Microsoft.JScript.FunctionPrototype
  isExternal: false
  name: apply(Object,Object,Object)
  nameWithType: FunctionPrototype.apply(Object,Object,Object)
  fullName: Microsoft.JScript.FunctionPrototype.apply(Object,Object,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.JScript.FunctionPrototype.call(System.Object,System.Object,System.Object[])
  parent: Microsoft.JScript.FunctionPrototype
  isExternal: false
  name: call(Object,Object,Object[])
  nameWithType: FunctionPrototype.call(Object,Object,Object[])
  fullName: Microsoft.JScript.FunctionPrototype.call(Object,Object,Object[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.JScript.FunctionPrototype.constructor
  parent: Microsoft.JScript.FunctionPrototype
  isExternal: false
  name: constructor
  nameWithType: FunctionPrototype.constructor
  fullName: Microsoft.JScript.FunctionPrototype.constructor
- uid: Microsoft.JScript.FunctionConstructor
  parent: Microsoft.JScript
  isExternal: false
  name: FunctionConstructor
  nameWithType: FunctionConstructor
  fullName: Microsoft.JScript.FunctionConstructor
- uid: Microsoft.JScript.FunctionPrototype.toString(System.Object)
  parent: Microsoft.JScript.FunctionPrototype
  isExternal: false
  name: toString(Object)
  nameWithType: FunctionPrototype.toString(Object)
  fullName: Microsoft.JScript.FunctionPrototype.toString(Object)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.JScript.FunctionPrototype.apply*
  parent: Microsoft.JScript.FunctionPrototype
  isExternal: false
  name: apply
  nameWithType: FunctionPrototype.apply
- uid: Microsoft.JScript.FunctionPrototype.call*
  parent: Microsoft.JScript.FunctionPrototype
  isExternal: false
  name: call
  nameWithType: FunctionPrototype.call
- uid: Microsoft.JScript.FunctionPrototype.constructor*
  parent: Microsoft.JScript.FunctionPrototype
  isExternal: false
  name: constructor
  nameWithType: FunctionPrototype.constructor
- uid: Microsoft.JScript.FunctionPrototype.toString*
  parent: Microsoft.JScript.FunctionPrototype
  isExternal: false
  name: toString
  nameWithType: FunctionPrototype.toString
