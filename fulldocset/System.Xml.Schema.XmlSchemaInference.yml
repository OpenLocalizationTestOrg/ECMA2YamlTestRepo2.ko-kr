### YamlMime:ManagedReference
items:
- uid: System.Xml.Schema.XmlSchemaInference
  id: XmlSchemaInference
  children:
  - System.Xml.Schema.XmlSchemaInference.#ctor
  - System.Xml.Schema.XmlSchemaInference.InferSchema(System.Xml.XmlReader)
  - System.Xml.Schema.XmlSchemaInference.InferSchema(System.Xml.XmlReader,System.Xml.Schema.XmlSchemaSet)
  - System.Xml.Schema.XmlSchemaInference.Occurrence
  - System.Xml.Schema.XmlSchemaInference.TypeInference
  langs:
  - csharp
  name: XmlSchemaInference
  nameWithType: XmlSchemaInference
  fullName: System.Xml.Schema.XmlSchemaInference
  type: Class
  summary: "XML 문서에서 XML 스키마 정의 언어 (XSD) 스키마를 유추 합니다. XmlSchemaInference 클래스는 상속 될 수 없습니다."
  remarks: "> [!IMPORTANT]>-위치 또는 알 수 없거나 신뢰할 수 없는 원본에서 스키마를 사용 하지 마십시오. 이렇게 하면 코드의 보안을 손상 됩니다.   >-(인라인 스키마 포함)는 XML 스키마는 기본적으로 서비스 거부 공격;에 취약 신뢰할 수 없는 경우에는 사용 하지 않습니다.   >-스키마 유효성 검사 오류 메시지와 예외에는 정적 콘텐츠 모델이 나 스키마 파일에 대 한 URI 경로 대 한 중요 한 정보가 노출 될 수 있습니다. 신뢰할 수 없는 호출자에 게이 정보를 노출 하지 않도록 주의 하십시오.       XmlSchemaInference 클래스는 <xref:System.Xml.Schema?displayProperty=fullName>네임 스페이스를 사용 하면 XML 문서 구조에서는 XML 스키마 정의 언어 (XSD) 스키마를 유추할 수 있습니다.</xref:System.Xml.Schema?displayProperty=fullName> XmlSchemaInference 클래스는 XML 문서의 유효성을 검사할 수 있는 XML 스키마를 출력 합니다.       XmlSchemaInference 클래스는 W3C XML 및 XML 스키마 표준을 지원합니다. 새 스키마를 유추 하거나 기존 스키마를 구체화를 사용할 수 있습니다."
  example:
  - "This example takes an XML file as input, and generates a schema that can validate the example XML.  \n  \n [!code-cs[XmlSchemaInferenceExamples#1](~/add/codesnippet/csharp/t-system.xml.schema.xmls_24_1.cs)]\n [!code-cpp[XmlSchemaInferenceExamples#1](~/add/codesnippet/cpp/t-system.xml.schema.xmls_24_1.cpp)]\n [!code-vb[XmlSchemaInferenceExamples#1](~/add/codesnippet/visualbasic/t-system.xml.schema.xmls_24_1.vb)]  \n  \n The following is the input XML file.  \n  \n [!code-xml[XmlSchemaInferenceExamples#5](~/add/codesnippet/xml/t-system.xml.schema.xmls_24_2.xml)]  \n  \n The following is the schema inferred from the XML document.  \n  \n [!code-xml[XmlSchemaInferenceExamples#6](~/add/codesnippet/xml/t-system.xml.schema.xmls_24_3.xsd)]"
  syntax:
    content: public sealed class XmlSchemaInference
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaInference.#ctor
  id: '#ctor'
  parent: System.Xml.Schema.XmlSchemaInference
  langs:
  - csharp
  name: XmlSchemaInference()
  nameWithType: XmlSchemaInference.XmlSchemaInference()
  fullName: System.Xml.Schema.XmlSchemaInference.XmlSchemaInference()
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Xml.Schema.XmlSchemaInference&quot;> </xref> 클래스입니다."
  syntax:
    content: public XmlSchemaInference ();
    parameters: []
  overload: System.Xml.Schema.XmlSchemaInference.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaInference.InferSchema(System.Xml.XmlReader)
  id: InferSchema(System.Xml.XmlReader)
  parent: System.Xml.Schema.XmlSchemaInference
  langs:
  - csharp
  name: InferSchema(XmlReader)
  nameWithType: XmlSchemaInference.InferSchema(XmlReader)
  fullName: System.Xml.Schema.XmlSchemaInference.InferSchema(XmlReader)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "에 포함 된 XML 문서에서 XML 스키마 정의 언어 (XSD) 스키마를 유추는 <xref:System.Xml.XmlReader>지정 된 개체입니다.</xref:System.Xml.XmlReader>"
  remarks: "XML에서 더 많은 W3C XML 스키마 정의 언어 (XSD) 스키마에 포함 된 문서 인스턴스 또는 InferSchema 메서드 유추는 <xref:System.Xml.XmlReader>지정 된 개체입니다.</xref:System.Xml.XmlReader> 여러 스키마에서 생성 된 경우 여러 네임 스페이스의 요소와 특성을 포함 하는 XML 문서: 문서에 사용 되는 각 네임 스페이스에 대 한 합니다. 기본 스키마는 전체 XML 문서를 확인할 수 있는 스키마 및 해당 대상 네임 스페이스는 XML 문서의 문서 요소의 네임 스페이스와 동일 합니다.       다음은 InferSchema 메서드를 사용할 때 고려해 야 할 중요 한 참고 사항입니다.      -InferSchema 메서드 무시 `xsi:type`, `xsi:schemaLocation`, 또는 `xsi:noNamespaceSchemaLocation` XML 문서에는 특성입니다.      If는 <xref:System.Xml.XmlReader>개체는 입력, 포함 된 형식 정보는 무시 됩니다.</xref:System.Xml.XmlReader>      If는 <xref:System.Xml.XmlReader>개체가 XML 문서의 루트 요소가 있는 요소를 위치, 스키마만 해당 요소의 유추 됩니다.</xref:System.Xml.XmlReader> 경우는 <xref:System.Xml.XmlReader>개체는 요소에 배치 되지 않은 <xref:System.Xml.XmlReader.Read%2A>메서드가 호출 되는 <xref:System.Xml.XmlReader>요소가 발견 될 때까지 매개 변수 (경우에 예를 들어 <xref:System.Xml.XmlReader.NodeType%2A>은 <xref:System.Xml.XmlNodeType>).</xref:System.Xml.XmlNodeType> </xref:System.Xml.XmlReader.NodeType%2A> </xref:System.Xml.XmlReader> </xref:System.Xml.XmlReader.Read%2A> </xref:System.Xml.XmlReader> 이 시점에서 위 유추 과정에서 해당 요소에서 시작합니다. 요소가 없는 문서를 끝날 때까지 발생 한 <xref:System.ArgumentException>throw 됩니다.</xref:System.ArgumentException>"
  example:
  - "This example takes an XML file as input, and generates a schema that can validate the example XML.  \n  \n [!code-cs[XmlSchemaInferenceExamples#1](~/add/codesnippet/csharp/m-system.xml.schema.xmls_6_1.cs)]\n [!code-cpp[XmlSchemaInferenceExamples#1](~/add/codesnippet/cpp/m-system.xml.schema.xmls_6_1.cpp)]\n [!code-vb[XmlSchemaInferenceExamples#1](~/add/codesnippet/visualbasic/m-system.xml.schema.xmls_6_1.vb)]  \n  \n The following is the input XML file.  \n  \n [!code-xml[XmlSchemaInferenceExamples#5](~/add/codesnippet/xml/m-system.xml.schema.xmls_6_2.xml)]  \n  \n The following is the schema inferred from the XML document.  \n  \n [!code-xml[XmlSchemaInferenceExamples#6](~/add/codesnippet/xml/m-system.xml.schema.xmls_6_3.xsd)]"
  syntax:
    content: public System.Xml.Schema.XmlSchemaSet InferSchema (System.Xml.XmlReader instanceDocument);
    parameters:
    - id: instanceDocument
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader>개체 문서 포함 하는 XML 스키마를 유추 하.</xref:System.Xml.XmlReader>"
    return:
      type: System.Xml.Schema.XmlSchemaSet
      description: "<xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> 유추 된 스키마를 포함 하는 개체입니다."
  overload: System.Xml.Schema.XmlSchemaInference.InferSchema*
  exceptions:
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "XML 문서가 올바른 형식을 갖추도록입니다."
  - type: System.Xml.Schema.XmlSchemaInferenceException
    commentId: T:System.Xml.Schema.XmlSchemaInferenceException
    description: "<xref:System.Xml.XmlReader>루트 노드 또는 요소가 개체 놓입니다.</xref:System.Xml.XmlReader> 스키마를 유추 하는 동안 오류가 발생합니다."
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaInference.InferSchema(System.Xml.XmlReader,System.Xml.Schema.XmlSchemaSet)
  id: InferSchema(System.Xml.XmlReader,System.Xml.Schema.XmlSchemaSet)
  parent: System.Xml.Schema.XmlSchemaInference
  langs:
  - csharp
  name: InferSchema(XmlReader,XmlSchemaSet)
  nameWithType: XmlSchemaInference.InferSchema(XmlReader,XmlSchemaSet)
  fullName: System.Xml.Schema.XmlSchemaInference.InferSchema(XmlReader,XmlSchemaSet)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "에 포함 된 XML 문서에서 XML 스키마 정의 언어 (XSD) 스키마를 유추는 <xref:System.Xml.XmlReader>개체를 지정 하 고 스키마에 있는 기존 스키마를 사용 하 여는 <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> 동일한 대상 네임 스페이스를 가진 지정 된 개체입니다.</xref:System.Xml.XmlReader>"
  remarks: "XML에서 더 많은 W3C XML 스키마 정의 언어 (XSD) 스키마에 포함 된 문서 인스턴스 또는 InferSchema 메서드 유추는 <xref:System.Xml.XmlReader>지정 된 개체입니다.</xref:System.Xml.XmlReader> 여러 네임 스페이스의 요소와 특성을 포함 하는 XML 문서를 하는 경우 여러 스키마가 생성 됩니다: 문서에 사용 되는 각 네임 스페이스에 대 한 합니다. 기본 스키마는 전체 XML 문서를 확인할 수 있는 스키마 및 해당 대상 네임 스페이스는 XML 문서의 문서 요소의 네임 스페이스와 동일 합니다.       다음은 InferSchema 메서드를 사용할 때 고려해 야 할 중요 한 참고 사항입니다.      -InferSchema 메서드 무시 `xsi:type`, `xsi:schemaLocation`, 또는 `xsi:noNamespaceSchemaLocation` XML 문서에는 특성입니다.      If는 <xref:System.Xml.XmlReader>개체는 입력, 포함 된 형식 정보는 무시 됩니다.</xref:System.Xml.XmlReader>      If는 <xref:System.Xml.XmlReader>개체가 XML 문서의 루트 요소가 있는 요소를 위치, 스키마만 해당 요소의 유추 됩니다.</xref:System.Xml.XmlReader> 경우는 <xref:System.Xml.XmlReader>개체는 요소에 배치 되지 않은 <xref:System.Xml.XmlReader.Read%2A>메서드가 호출 되는 <xref:System.Xml.XmlReader>요소가 발견 될 때까지 매개 변수 (경우에 예를 들어 <xref:System.Xml.XmlReader.NodeType%2A>은 <xref:System.Xml.XmlNodeType>).</xref:System.Xml.XmlNodeType> </xref:System.Xml.XmlReader.NodeType%2A> </xref:System.Xml.XmlReader> </xref:System.Xml.XmlReader.Read%2A> </xref:System.Xml.XmlReader> 이 시점에서 위 유추 과정에서 해당 요소에서 시작합니다. 요소가 없는 문서를 끝날 때까지 발생 한 <xref:System.ArgumentException>throw 됩니다.</xref:System.ArgumentException>      -If는 <xref:System.Xml.Schema.XmlSchemaSet>는 요소와 매개 변수로 전달 하는 <xref:System.Xml.XmlReader>개체가 위치에 있는 스키마 중 하나에 정의 된는 <xref:System.Xml.Schema.XmlSchemaSet>, 유추 된 스키마는에서 기존 스키마를 구체화 하는 데 사용 되는 <xref:System.Xml.Schema.XmlSchemaSet>동일한 대상 네임 스페이스; 매개 변수 네임 스페이스에 대 한 새 스키마 그렇지 유추 됩니다.</xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.XmlReader> </xref:System.Xml.Schema.XmlSchemaSet>"
  example:
  - "The following example code takes XML document 1 as an input and generates a schema that can validate XML document 1. The example code then takes XML document 2 and refines the schema generated from XML document 1, based on the changes found in XML document 2.  \n  \n The following is XML document 1.  \n  \n [!code-xml[XmlSchemaInferenceExamples#13](~/add/codesnippet/xml/0c36415c-5ade-4e0e-8494-_1.xml)]  \n  \n The following is XML document 2.  \n  \n [!code-xml[XmlSchemaInferenceExamples#14](~/add/codesnippet/xml/0c36415c-5ade-4e0e-8494-_2.xml)]  \n  \n The following example code infers a schema from the first XML document contained in `reader`, and then refines the inferred schema with the changes found in the second XML document contained in `reader1`. The example code uses the first overloaded <xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A> method to infer the schema, and the second overloaded InferSchema method to refine the existing schema in the <xref:System.Xml.Schema.XmlSchemaSet> object.  \n  \n [!code-cs[XmlSchemaInferenceExamples#4](~/add/codesnippet/csharp/0c36415c-5ade-4e0e-8494-_3.cs)]\n [!code-cpp[XmlSchemaInferenceExamples#4](~/add/codesnippet/cpp/0c36415c-5ade-4e0e-8494-_3.cpp)]\n [!code-vb[XmlSchemaInferenceExamples#4](~/add/codesnippet/visualbasic/0c36415c-5ade-4e0e-8494-_3.vb)]  \n  \n The following schema is the schema inferred from XML document 1.  \n  \n [!code-xml[XmlSchemaInferenceExamples#15](~/add/codesnippet/xml/0c36415c-5ade-4e0e-8494-_4.xml)]  \n  \n The following schema is the refined version of the schema above, based on XML document 2.  \n  \n [!code-xml[XmlSchemaInferenceExamples#16](~/add/codesnippet/xml/0c36415c-5ade-4e0e-8494-_5.xml)]"
  syntax:
    content: public System.Xml.Schema.XmlSchemaSet InferSchema (System.Xml.XmlReader instanceDocument, System.Xml.Schema.XmlSchemaSet schemas);
    parameters:
    - id: instanceDocument
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader>개체 문서 포함 하는 XML 스키마를 유추 하.</xref:System.Xml.XmlReader>"
    - id: schemas
      type: System.Xml.Schema.XmlSchemaSet
      description: "<xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> 유추 된 스키마를 구체화 하는 데 사용 하는 기존 스키마를 포함 하는 개체입니다."
    return:
      type: System.Xml.Schema.XmlSchemaSet
      description: "<xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> 유추 된 스키마를 포함 하는 개체입니다."
  overload: System.Xml.Schema.XmlSchemaInference.InferSchema*
  exceptions:
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "XML 문서가 올바른 형식을 갖추도록입니다."
  - type: System.Xml.Schema.XmlSchemaInferenceException
    commentId: T:System.Xml.Schema.XmlSchemaInferenceException
    description: "<xref:System.Xml.XmlReader>루트 노드 또는 요소가 개체 놓입니다.</xref:System.Xml.XmlReader> 스키마를 유추 하는 동안 오류가 발생합니다."
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaInference.Occurrence
  id: Occurrence
  parent: System.Xml.Schema.XmlSchemaInference
  langs:
  - csharp
  name: Occurrence
  nameWithType: XmlSchemaInference.Occurrence
  fullName: System.Xml.Schema.XmlSchemaInference.Occurrence
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "가져오거나는 <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>XML 문서에서 유추 된 스키마 번째 선언에 영향을 주는 값.</xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>"
  remarks: "항목 속성을로 설정 하는 경우 <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>, XML 문서에 요소가 처음 발생, 스키마 선언으로 유추 됩니다 `minOccurs=&quot;1&quot;`.</xref:System.Xml.Schema.XmlSchemaInference.InferenceOption> 스키마 선언으로 유추 됩니다 특성이 발견 되 면 `use=&quot;required&quot;`합니다.       항목 속성을로 설정 하는 경우 <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>, 요소 스키마 선언을로 유추 됩니다 `minOccurs=&quot;0&quot;`, 특성 스키마 선언으로 유추 되 고 `use=&quot;optional&quot;`.</xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>       번째 속성의 기본값은 <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>.</xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>"
  example:
  - "This example illustrates how occurrence is affected by the Occurrence property. The example code infers occurrence from an XML file in two different ways: relaxed and restricted. The following is the example XML file.  \n  \n [!code-xml[XmlSchemaInferenceExamples#7](~/add/codesnippet/xml/p-system.xml.schema.xmls_3_1.xml)]  \n  \n The following example code instructs the <xref:System.Xml.Schema.XmlSchemaInference> class to infer occurrence of elements and attributes in a relaxed way.  \n  \n [!code-cs[XmlSchemaInferenceExamples#2](~/add/codesnippet/csharp/p-system.xml.schema.xmls_3_2.cs)]\n [!code-cpp[XmlSchemaInferenceExamples#2](~/add/codesnippet/cpp/p-system.xml.schema.xmls_3_2.cpp)]\n [!code-vb[XmlSchemaInferenceExamples#2](~/add/codesnippet/visualbasic/p-system.xml.schema.xmls_3_2.vb)]  \n  \n Because the Occurrence property was set to <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>, the following schema was generated.  \n  \n [!code-xml[XmlSchemaInferenceExamples#8](~/add/codesnippet/xml/p-system.xml.schema.xmls_3_3.xml)]  \n  \n In the example code above, if the Occurrence property was not set to <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>, the <xref:System.Xml.Schema.XmlSchemaInference> class would have defaulted to <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption> and generated the following schema.  \n  \n [!code-xml[XmlSchemaInferenceExamples#9](~/add/codesnippet/xml/p-system.xml.schema.xmls_3_4.xml)]"
  syntax:
    content: public System.Xml.Schema.XmlSchemaInference.InferenceOption Occurrence { get; set; }
    return:
      type: System.Xml.Schema.XmlSchemaInference.InferenceOption
      description: "<xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>개체입니다.</xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>"
  overload: System.Xml.Schema.XmlSchemaInference.Occurrence*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaInference.TypeInference
  id: TypeInference
  parent: System.Xml.Schema.XmlSchemaInference
  langs:
  - csharp
  name: TypeInference
  nameWithType: XmlSchemaInference.TypeInference
  fullName: System.Xml.Schema.XmlSchemaInference.TypeInference
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "가져오거나는 <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>XML 문서에서 유추 되는 형식에 영향을 주는 값.</xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>"
  remarks: "TypeInference 속성이로 설정 된 경우 <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>, 단순 콘텐츠 포함 XML 문서에 요소 및 특성의 유추 된 유형은 항상 `xs:string`.</xref:System.Xml.Schema.XmlSchemaInference.InferenceOption> TypeInference 속성이로 설정 된 경우 <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>와 같은 보다 구체적인 형식이 유추 됩니다 `xs:date`, `xs:decimal`, `xs:unsignedByte`등.</xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>       TypeInference 속성의 기본값은 <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>.</xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>"
  example:
  - "This example illustrates how type inference is affected by the TypeInference property. The example code infers types from an XML file in two different ways: relaxed and restricted. The following is the example XML file.  \n  \n [!code-xml[XmlSchemaInferenceExamples#10](~/add/codesnippet/xml/p-system.xml.schema.xmls_0_1.xml)]  \n  \n The following example code instructs the <xref:System.Xml.Schema.XmlSchemaInference> class to infer `xs:string` for elements and attributes with simple content.  \n  \n [!code-cs[XmlSchemaInferenceExamples#3](~/add/codesnippet/csharp/p-system.xml.schema.xmls_0_2.cs)]\n [!code-cpp[XmlSchemaInferenceExamples#3](~/add/codesnippet/cpp/p-system.xml.schema.xmls_0_2.cpp)]\n [!code-vb[XmlSchemaInferenceExamples#3](~/add/codesnippet/visualbasic/p-system.xml.schema.xmls_0_2.vb)]  \n  \n Because the TypeInference property was set to <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>, the following schema was generated.  \n  \n [!code-xml[XmlSchemaInferenceExamples#11](~/add/codesnippet/xml/p-system.xml.schema.xmls_0_3.xml)]  \n  \n In the example code above, if the TypeInference property was not set to <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>, the <xref:System.Xml.Schema.XmlSchemaInference> class would have defaulted to <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption> and generated the following schema.  \n  \n [!code-xml[XmlSchemaInferenceExamples#12](~/add/codesnippet/xml/p-system.xml.schema.xmls_0_4.xml)]"
  syntax:
    content: public System.Xml.Schema.XmlSchemaInference.InferenceOption TypeInference { get; set; }
    return:
      type: System.Xml.Schema.XmlSchemaInference.InferenceOption
      description: "<xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>개체입니다.</xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>"
  overload: System.Xml.Schema.XmlSchemaInference.TypeInference*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Xml.XmlException
  isExternal: true
  name: System.Xml.XmlException
- uid: System.Xml.Schema.XmlSchemaInferenceException
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaInferenceException
  nameWithType: XmlSchemaInferenceException
  fullName: System.Xml.Schema.XmlSchemaInferenceException
- uid: System.Xml.Schema.XmlSchemaInference.#ctor
  parent: System.Xml.Schema.XmlSchemaInference
  isExternal: false
  name: XmlSchemaInference()
  nameWithType: XmlSchemaInference.XmlSchemaInference()
  fullName: System.Xml.Schema.XmlSchemaInference.XmlSchemaInference()
- uid: System.Xml.Schema.XmlSchemaInference.InferSchema(System.Xml.XmlReader)
  parent: System.Xml.Schema.XmlSchemaInference
  isExternal: false
  name: InferSchema(XmlReader)
  nameWithType: XmlSchemaInference.InferSchema(XmlReader)
  fullName: System.Xml.Schema.XmlSchemaInference.InferSchema(XmlReader)
- uid: System.Xml.Schema.XmlSchemaSet
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaSet
  nameWithType: XmlSchemaSet
  fullName: System.Xml.Schema.XmlSchemaSet
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Xml.Schema.XmlSchemaInference.InferSchema(System.Xml.XmlReader,System.Xml.Schema.XmlSchemaSet)
  parent: System.Xml.Schema.XmlSchemaInference
  isExternal: false
  name: InferSchema(XmlReader,XmlSchemaSet)
  nameWithType: XmlSchemaInference.InferSchema(XmlReader,XmlSchemaSet)
  fullName: System.Xml.Schema.XmlSchemaInference.InferSchema(XmlReader,XmlSchemaSet)
- uid: System.Xml.Schema.XmlSchemaInference.Occurrence
  parent: System.Xml.Schema.XmlSchemaInference
  isExternal: false
  name: Occurrence
  nameWithType: XmlSchemaInference.Occurrence
  fullName: System.Xml.Schema.XmlSchemaInference.Occurrence
- uid: System.Xml.Schema.XmlSchemaInference.InferenceOption
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaInference+InferenceOption
  nameWithType: XmlSchemaInference+InferenceOption
  fullName: System.Xml.Schema.XmlSchemaInference+InferenceOption
- uid: System.Xml.Schema.XmlSchemaInference.TypeInference
  parent: System.Xml.Schema.XmlSchemaInference
  isExternal: false
  name: TypeInference
  nameWithType: XmlSchemaInference.TypeInference
  fullName: System.Xml.Schema.XmlSchemaInference.TypeInference
- uid: System.Xml.Schema.XmlSchemaInference.#ctor*
  parent: System.Xml.Schema.XmlSchemaInference
  isExternal: false
  name: XmlSchemaInference
  nameWithType: XmlSchemaInference.XmlSchemaInference
- uid: System.Xml.Schema.XmlSchemaInference.InferSchema*
  parent: System.Xml.Schema.XmlSchemaInference
  isExternal: false
  name: InferSchema
  nameWithType: XmlSchemaInference.InferSchema
- uid: System.Xml.Schema.XmlSchemaInference.Occurrence*
  parent: System.Xml.Schema.XmlSchemaInference
  isExternal: false
  name: Occurrence
  nameWithType: XmlSchemaInference.Occurrence
- uid: System.Xml.Schema.XmlSchemaInference.TypeInference*
  parent: System.Xml.Schema.XmlSchemaInference
  isExternal: false
  name: TypeInference
  nameWithType: XmlSchemaInference.TypeInference
