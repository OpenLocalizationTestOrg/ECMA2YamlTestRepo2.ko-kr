### YamlMime:ManagedReference
items:
- uid: System.Drawing.Graphics
  id: Graphics
  children:
  - System.Drawing.Graphics.AddMetafileComment(System.Byte[])
  - System.Drawing.Graphics.BeginContainer
  - System.Drawing.Graphics.BeginContainer(System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)
  - System.Drawing.Graphics.BeginContainer(System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)
  - System.Drawing.Graphics.Clear(System.Drawing.Color)
  - System.Drawing.Graphics.Clip
  - System.Drawing.Graphics.ClipBounds
  - System.Drawing.Graphics.CompositingMode
  - System.Drawing.Graphics.CompositingQuality
  - System.Drawing.Graphics.CopyFromScreen(System.Drawing.Point,System.Drawing.Point,System.Drawing.Size)
  - System.Drawing.Graphics.CopyFromScreen(System.Drawing.Point,System.Drawing.Point,System.Drawing.Size,System.Drawing.CopyPixelOperation)
  - System.Drawing.Graphics.CopyFromScreen(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Size)
  - System.Drawing.Graphics.CopyFromScreen(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Size,System.Drawing.CopyPixelOperation)
  - System.Drawing.Graphics.Dispose
  - System.Drawing.Graphics.DpiX
  - System.Drawing.Graphics.DpiY
  - System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Drawing.Rectangle,System.Single,System.Single)
  - System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Drawing.RectangleF,System.Single,System.Single)
  - System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  - System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)
  - System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)
  - System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  - System.Drawing.Graphics.DrawBeziers(System.Drawing.Pen,System.Drawing.Point[])
  - System.Drawing.Graphics.DrawBeziers(System.Drawing.Pen,System.Drawing.PointF[])
  - System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.Point[])
  - System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.PointF[])
  - System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.Point[],System.Single,System.Drawing.Drawing2D.FillMode)
  - System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Single,System.Drawing.Drawing2D.FillMode)
  - System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[])
  - System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[])
  - System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Single)
  - System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Single)
  - System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32)
  - System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Int32,System.Int32,System.Single)
  - System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32,System.Single)
  - System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Drawing.Rectangle)
  - System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Drawing.RectangleF)
  - System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)
  - System.Drawing.Graphics.DrawIcon(System.Drawing.Icon,System.Drawing.Rectangle)
  - System.Drawing.Graphics.DrawIcon(System.Drawing.Icon,System.Int32,System.Int32)
  - System.Drawing.Graphics.DrawIconUnstretched(System.Drawing.Icon,System.Drawing.Rectangle)
  - System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point)
  - System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[])
  - System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF)
  - System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[])
  - System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle)
  - System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.RectangleF)
  - System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32)
  - System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single)
  - System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit)
  - System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit)
  - System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)
  - System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)
  - System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)
  - System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)
  - System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)
  - System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)
  - System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single,System.Single,System.Single)
  - System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)
  - System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)
  - System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)
  - System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)
  - System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit)
  - System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit)
  - System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)
  - System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)
  - System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)
  - System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)
  - System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)
  - System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)
  - System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Drawing.Point)
  - System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Drawing.Rectangle)
  - System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Int32,System.Int32)
  - System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Drawing.Graphics.DrawImageUnscaledAndClipped(System.Drawing.Image,System.Drawing.Rectangle)
  - System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Drawing.Point,System.Drawing.Point)
  - System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Drawing.PointF,System.Drawing.PointF)
  - System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)
  - System.Drawing.Graphics.DrawLines(System.Drawing.Pen,System.Drawing.Point[])
  - System.Drawing.Graphics.DrawLines(System.Drawing.Pen,System.Drawing.PointF[])
  - System.Drawing.Graphics.DrawPath(System.Drawing.Pen,System.Drawing.Drawing2D.GraphicsPath)
  - System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Drawing.Rectangle,System.Single,System.Single)
  - System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Drawing.RectangleF,System.Single,System.Single)
  - System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  - System.Drawing.Graphics.DrawPolygon(System.Drawing.Pen,System.Drawing.Point[])
  - System.Drawing.Graphics.DrawPolygon(System.Drawing.Pen,System.Drawing.PointF[])
  - System.Drawing.Graphics.DrawRectangle(System.Drawing.Pen,System.Drawing.Rectangle)
  - System.Drawing.Graphics.DrawRectangle(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Drawing.Graphics.DrawRectangle(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)
  - System.Drawing.Graphics.DrawRectangles(System.Drawing.Pen,System.Drawing.Rectangle[])
  - System.Drawing.Graphics.DrawRectangles(System.Drawing.Pen,System.Drawing.RectangleF[])
  - System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF)
  - System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF)
  - System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF,System.Drawing.StringFormat)
  - System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF,System.Drawing.StringFormat)
  - System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Single,System.Single)
  - System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Single,System.Single,System.Drawing.StringFormat)
  - System.Drawing.Graphics.EndContainer(System.Drawing.Drawing2D.GraphicsContainer)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Graphics.EnumerateMetafileProc)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  - System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  - System.Drawing.Graphics.ExcludeClip(System.Drawing.Rectangle)
  - System.Drawing.Graphics.ExcludeClip(System.Drawing.Region)
  - System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[])
  - System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[])
  - System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode)
  - System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode)
  - System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode,System.Single)
  - System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode,System.Single)
  - System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Drawing.Rectangle)
  - System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Drawing.RectangleF)
  - System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single)
  - System.Drawing.Graphics.FillPath(System.Drawing.Brush,System.Drawing.Drawing2D.GraphicsPath)
  - System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Drawing.Rectangle,System.Single,System.Single)
  - System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  - System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.Point[])
  - System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.PointF[])
  - System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode)
  - System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode)
  - System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Drawing.Rectangle)
  - System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Drawing.RectangleF)
  - System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single)
  - System.Drawing.Graphics.FillRectangles(System.Drawing.Brush,System.Drawing.Rectangle[])
  - System.Drawing.Graphics.FillRectangles(System.Drawing.Brush,System.Drawing.RectangleF[])
  - System.Drawing.Graphics.FillRegion(System.Drawing.Brush,System.Drawing.Region)
  - System.Drawing.Graphics.Finalize
  - System.Drawing.Graphics.Flush
  - System.Drawing.Graphics.Flush(System.Drawing.Drawing2D.FlushIntention)
  - System.Drawing.Graphics.FromHdc(System.IntPtr)
  - System.Drawing.Graphics.FromHdc(System.IntPtr,System.IntPtr)
  - System.Drawing.Graphics.FromHdcInternal(System.IntPtr)
  - System.Drawing.Graphics.FromHwnd(System.IntPtr)
  - System.Drawing.Graphics.FromHwndInternal(System.IntPtr)
  - System.Drawing.Graphics.FromImage(System.Drawing.Image)
  - System.Drawing.Graphics.GetContextInfo
  - System.Drawing.Graphics.GetHalftonePalette
  - System.Drawing.Graphics.GetHdc
  - System.Drawing.Graphics.GetNearestColor(System.Drawing.Color)
  - System.Drawing.Graphics.InterpolationMode
  - System.Drawing.Graphics.IntersectClip(System.Drawing.Rectangle)
  - System.Drawing.Graphics.IntersectClip(System.Drawing.RectangleF)
  - System.Drawing.Graphics.IntersectClip(System.Drawing.Region)
  - System.Drawing.Graphics.IsClipEmpty
  - System.Drawing.Graphics.IsVisible(System.Drawing.Point)
  - System.Drawing.Graphics.IsVisible(System.Drawing.PointF)
  - System.Drawing.Graphics.IsVisible(System.Drawing.Rectangle)
  - System.Drawing.Graphics.IsVisible(System.Drawing.RectangleF)
  - System.Drawing.Graphics.IsVisible(System.Int32,System.Int32)
  - System.Drawing.Graphics.IsVisible(System.Single,System.Single)
  - System.Drawing.Graphics.IsVisible(System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Drawing.Graphics.IsVisible(System.Single,System.Single,System.Single,System.Single)
  - System.Drawing.Graphics.IsVisibleClipEmpty
  - System.Drawing.Graphics.MeasureCharacterRanges(System.String,System.Drawing.Font,System.Drawing.RectangleF,System.Drawing.StringFormat)
  - System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font)
  - System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF)
  - System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Int32)
  - System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.PointF,System.Drawing.StringFormat)
  - System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat)
  - System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Int32,System.Drawing.StringFormat)
  - System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat,System.Int32@,System.Int32@)
  - System.Drawing.Graphics.MultiplyTransform(System.Drawing.Drawing2D.Matrix)
  - System.Drawing.Graphics.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)
  - System.Drawing.Graphics.PageScale
  - System.Drawing.Graphics.PageUnit
  - System.Drawing.Graphics.PixelOffsetMode
  - System.Drawing.Graphics.ReleaseHdc
  - System.Drawing.Graphics.ReleaseHdc(System.IntPtr)
  - System.Drawing.Graphics.ReleaseHdcInternal(System.IntPtr)
  - System.Drawing.Graphics.RenderingOrigin
  - System.Drawing.Graphics.ResetClip
  - System.Drawing.Graphics.ResetTransform
  - System.Drawing.Graphics.Restore(System.Drawing.Drawing2D.GraphicsState)
  - System.Drawing.Graphics.RotateTransform(System.Single)
  - System.Drawing.Graphics.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)
  - System.Drawing.Graphics.Save
  - System.Drawing.Graphics.ScaleTransform(System.Single,System.Single)
  - System.Drawing.Graphics.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  - System.Drawing.Graphics.SetClip(System.Drawing.Drawing2D.GraphicsPath)
  - System.Drawing.Graphics.SetClip(System.Drawing.Graphics)
  - System.Drawing.Graphics.SetClip(System.Drawing.Rectangle)
  - System.Drawing.Graphics.SetClip(System.Drawing.RectangleF)
  - System.Drawing.Graphics.SetClip(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.CombineMode)
  - System.Drawing.Graphics.SetClip(System.Drawing.Graphics,System.Drawing.Drawing2D.CombineMode)
  - System.Drawing.Graphics.SetClip(System.Drawing.Rectangle,System.Drawing.Drawing2D.CombineMode)
  - System.Drawing.Graphics.SetClip(System.Drawing.RectangleF,System.Drawing.Drawing2D.CombineMode)
  - System.Drawing.Graphics.SetClip(System.Drawing.Region,System.Drawing.Drawing2D.CombineMode)
  - System.Drawing.Graphics.SmoothingMode
  - System.Drawing.Graphics.TextContrast
  - System.Drawing.Graphics.TextRenderingHint
  - System.Drawing.Graphics.Transform
  - System.Drawing.Graphics.TransformPoints(System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Point[])
  - System.Drawing.Graphics.TransformPoints(System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.PointF[])
  - System.Drawing.Graphics.TranslateClip(System.Int32,System.Int32)
  - System.Drawing.Graphics.TranslateClip(System.Single,System.Single)
  - System.Drawing.Graphics.TranslateTransform(System.Single,System.Single)
  - System.Drawing.Graphics.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  - System.Drawing.Graphics.VisibleClipBounds
  langs:
  - csharp
  name: Graphics
  nameWithType: Graphics
  fullName: System.Drawing.Graphics
  type: Class
  summary: "캡슐화 된 [!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)] 그리기 화면입니다. 이 클래스는 상속 될 수 없습니다."
  remarks: "Graphics 클래스는 표시 장치에 개체를 그리기 위한 메서드를 제공 합니다. 그래픽은 특정 장치 컨텍스트와 연결 합니다.       호출 하 여 그래픽 개체를 가져올 수는 <xref:System.Windows.Forms.Control.CreateGraphics%2A?displayProperty=fullName>에서 상속 되는 개체에서 메서드 <xref:System.Windows.Forms.Control?displayProperty=fullName>, 또는 처리는 컨트롤의 <xref:System.Windows.Forms.Control.Paint?displayProperty=fullName>이벤트 및 <xref:System.Windows.Forms.PaintEventArgs.Graphics%2A> <xref:System.Windows.Forms.PaintEventArgs?displayProperty=fullName>클래스</xref:System.Windows.Forms.PaintEventArgs?displayProperty=fullName> 의 속성</xref:System.Windows.Forms.PaintEventArgs.Graphics%2A> 에 액세스</xref:System.Windows.Forms.Control.Paint?displayProperty=fullName> 하 여</xref:System.Windows.Forms.Control?displayProperty=fullName> </xref:System.Windows.Forms.Control.CreateGraphics%2A?displayProperty=fullName> 사용 하 여 이미지에서 그래픽 개체를 만들 수도 있습니다는 <xref:System.Drawing.Graphics.FromImage%2A>메서드.</xref:System.Drawing.Graphics.FromImage%2A> 그래픽 개체를 만드는 방법에 대 한 자세한 내용은 참조 [하는 방법: 그리기에 대 한 그래픽 개체 만들기](~/add/includes/ajax-current-ext-md.md)합니다.       그래픽 개체를 사용 하 여 다양 한 도형과 선을 그릴 수 있습니다. 특정 참조 선과 도형 그리기 하는 방법에 대 한 자세한 내용은 `Draw` *그리려는* 나 그릴 모양에 대해 메서드. 이러한 방법 포함 <xref:System.Drawing.Graphics.DrawLine%2A>, <xref:System.Drawing.Graphics.DrawArc%2A>, <xref:System.Drawing.Graphics.DrawClosedCurve%2A>, <xref:System.Drawing.Graphics.DrawPolygon%2A>, 및 <xref:System.Drawing.Graphics.DrawRectangle%2A>.</xref:System.Drawing.Graphics.DrawRectangle%2A> </xref:System.Drawing.Graphics.DrawPolygon%2A> </xref:System.Drawing.Graphics.DrawClosedCurve%2A> </xref:System.Drawing.Graphics.DrawArc%2A> </xref:System.Drawing.Graphics.DrawLine%2A> 선 및 모양 그리기 하는 방법에 대 한 자세한 내용은 참조 [에 그릴 선 및 모양](~/add/includes/ajax-current-ext-md.md) 및 [채우기 셰이프에 브러시를 사용 하 여](~/add/includes/ajax-current-ext-md.md)합니다.       사용 하 여 이미지와 아이콘을 그릴 수도 있습니다는 <xref:System.Drawing.Graphics.DrawImage%2A>및 <xref:System.Drawing.Graphics.DrawIcon%2A>메서드를 각각.</xref:System.Drawing.Graphics.DrawIcon%2A> </xref:System.Drawing.Graphics.DrawImage%2A> 참조 <xref:System.Drawing.Graphics.CopyFromScreen%2A>.</xref:System.Drawing.Graphics.CopyFromScreen%2A> 색 데이터 비트 블록 전송을 화면에서 Graphics 개체의 그리기 화면을 수행 하려면 그래픽 개체를 사용 하 여 이미지를 그릴 하는 방법에 대 한 자세한 내용은 참조 [이미지, 비트맵, 아이콘 및 메타 파일 사용](~/add/includes/ajax-current-ext-md.md)합니다.       또한 Graphics 개체에서 사용 하는 좌표계를 조작할 수 있습니다. 좌표계 및 조작 하는 방법에 대 한 자세한 내용은 참조 하십시오. [좌표계 및 변형](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example is designed for use with Windows Forms and requires a <xref:System.Windows.Forms.PaintEventArgs> object. The <xref:System.Windows.Forms.PaintEventArgs> object is named `e` and is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates an image from a JPEG file. The file is named SampImag.jpg and is located in the folder of the example.  \n  \n-   Creates a point at which to draw the upper-left corner of the image.  \n  \n-   Draws the unscaled image to the screen by using a Graphics object.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#40](~/add/codesnippet/cpp/t-system.drawing.graphics_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#40](~/add/codesnippet/csharp/t-system.drawing.graphics_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#40](~/add/codesnippet/visualbasic/t-system.drawing.graphics_1.vb)]"
  syntax:
    content: 'public sealed class Graphics : MarshalByRefObject, IDisposable, System.Drawing.IDeviceContext'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  implements:
  - System.Drawing.IDeviceContext
  - System.IDisposable
  inheritedMembers:
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Drawing.Graphics.AddMetafileComment(System.Byte[])
  id: AddMetafileComment(System.Byte[])
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: AddMetafileComment(Byte[])
  nameWithType: Graphics.AddMetafileComment(Byte[])
  fullName: System.Drawing.Graphics.AddMetafileComment(Byte[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "현재에 주석을 추가 <xref href=&quot;System.Drawing.Imaging.Metafile&quot;> </xref>합니다."
  remarks: "이 메서드는이 경우에 유효 <xref:System.Drawing.Graphics> <xref:System.Drawing.Imaging.Metafile>.</xref:System.Drawing.Imaging.Metafile> 연결</xref:System.Drawing.Graphics>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler, as well as `thisForm`, the <xref:System.Windows.Forms.Form> for the example. The code performs the following actions:  \n  \n-   Creates a temporary <xref:System.Drawing.Graphics> for creating the metafile and gets an `hdc`, a handle to its device context.  \n  \n-   Creates a new metafile using the `hdc`.  \n  \n-   Creates a <xref:System.Drawing.Graphics> for display of the metafile from the <xref:System.Drawing.Imaging.Metafile>.  \n  \n-   Draws a rectangle to the metafile.  \n  \n-   Adds a comment to the metafile.  \n  \n-   Disposes the <xref:System.Drawing.Graphics> for the metafile-which closes the metafile.  \n  \n-   Disposes the metafile.  \n  \n-   Releases the temporary `hdc`.  \n  \n-   Disposes the temporary <xref:System.Drawing.Graphics>.  \n  \n-   Creates a second metafile from the previously created file.  \n  \n-   Draws the metafile to the screen.  \n  \n-   Disposes the metafile.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#1](~/add/codesnippet/cpp/m-system.drawing.graphic_35_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#1](~/add/codesnippet/csharp/m-system.drawing.graphic_35_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#1](~/add/codesnippet/visualbasic/m-system.drawing.graphic_35_1.vb)]"
  syntax:
    content: public void AddMetafileComment (byte[] data);
    parameters:
    - id: data
      type: System.Byte[]
      description: "주석을 포함 하는 바이트 배열입니다."
  overload: System.Drawing.Graphics.AddMetafileComment*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.BeginContainer
  id: BeginContainer
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: BeginContainer()
  nameWithType: Graphics.BeginContainer()
  fullName: System.Drawing.Graphics.BeginContainer()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "그래픽 컨테이너의 현재 상태와 <xref href=&quot;System.Drawing.Graphics&quot;> </xref> 고 열어 새 그래픽 컨테이너를 사용 합니다."
  remarks: "이 메서드를 사용 하 여는 <xref:System.Drawing.Graphics.EndContainer%2A>중첩 된 graphics 컨테이너를 만드는 메서드를.</xref:System.Drawing.Graphics.EndContainer%2A> 그래픽 컨테이너 변환, 클리핑 영역 렌더링 속성과 같은 그래픽 상태를 유지합니다.       BeginContainer 메서드를 호출 하는 경우는 <xref:System.Drawing.Graphics>의 상태를 유지 하는 정보 블록이 <xref:System.Drawing.Graphics>스택에 배치 됩니다.</xref:System.Drawing.Graphics> </xref:System.Drawing.Graphics> BeginContainer 메서드는 반환 된 <xref:System.Drawing.Drawing2D.GraphicsContainer>해당 정보 블록을 식별 하는.</xref:System.Drawing.Drawing2D.GraphicsContainer> 식별 하는 개체를 전달 하는 경우는 <xref:System.Drawing.Graphics.EndContainer%2A>메서드가, 정보 블록이 스택에서 제거 되 고 복원 하는 데 사용 되는 <xref:System.Drawing.Graphics>상태로 시점의 BeginContainer 메서드 호출의 시간.</xref:System.Drawing.Graphics> </xref:System.Drawing.Graphics.EndContainer%2A>       컨테이너는 중첩 될 수 있습니다. 즉, 있습니다 메서드를 호출할 수 BeginContainer 여러 번 호출 하기 전에 <xref:System.Drawing.Graphics.EndContainer%2A>메서드.</xref:System.Drawing.Graphics.EndContainer%2A> BeginContainer 메서드를 호출할 때마다 정보 블록이 스택에 배치 되 고 나타나면는 <xref:System.Drawing.Drawing2D.GraphicsContainer>정보 블록에 대 한.</xref:System.Drawing.Drawing2D.GraphicsContainer> 개체의 <xref:System.Drawing.Graphics.EndContainer%2A>메서드를 <xref:System.Drawing.Graphics>해당 특정 <xref:System.Drawing.Drawing2D.GraphicsContainer>.</xref:System.Drawing.Drawing2D.GraphicsContainer> 를 반환 하는 것가 BeginContainer 메서드 시 호출 상태로 돌아갑니다</xref:System.Drawing.Graphics> </xref:System.Drawing.Graphics.EndContainer%2A> 를 전달 하는 경우 그 중 하나 정보 블록이 배치 하 여 스택에 BeginContainer 메서드 호출 스택에서 제거 되 고 BeginContainer 메서드 호출 또한 제거 된 후 해당 스택에 배치 되는 모든 정보 블록.       에 대 한 호출이 <xref:System.Drawing.Graphics.Save%2A>동일한 스택에 BeginContainer 메서드에 대 한 호출으로 메서드 내부 정보 블록.</xref:System.Drawing.Graphics.Save%2A> 과 마찬가지로 <xref:System.Drawing.Graphics.EndContainer%2A>BeginContainer 메서드 호출에서 메서드 호출 쌍을 이룹니다는 <xref:System.Drawing.Graphics.Restore%2A>은 메서드 호출을 이룹니다는 <xref:System.Drawing.Graphics.Save%2A>메서드를 호출 합니다.</xref:System.Drawing.Graphics.Save%2A> </xref:System.Drawing.Graphics.Restore%2A> </xref:System.Drawing.Graphics.EndContainer%2A>       호출 하는 경우는 <xref:System.Drawing.Graphics.EndContainer%2A>메서드를 스택에 배치 된 모든 정보 블록 (여는 <xref:System.Drawing.Graphics.Save%2A>메서드 또는 BeginContainer 메서드에 의해) BeginContainer 메서드가 해당 호출 스택에서 제거 됩니다.</xref:System.Drawing.Graphics.Save%2A> </xref:System.Drawing.Graphics.EndContainer%2A> 마찬가지로, 호출 하는 경우는 <xref:System.Drawing.Graphics.Restore%2A>메서드를 스택에 배치 된 모든 정보 블록 (여는 <xref:System.Drawing.Graphics.Save%2A>메서드 또는 BeginContainer 메서드에서)를 호출 후는 <xref:System.Drawing.Graphics.Save%2A>메서드 스택에서 제거 됩니다.</xref:System.Drawing.Graphics.Save%2A> </xref:System.Drawing.Graphics.Save%2A> </xref:System.Drawing.Graphics.Restore%2A>       기본 그래픽 상태;의 렌더링 품질을 포함 하는 BeginContainer 메서드에 의해 설정 된 그래픽 상태 메서드가 호출 될 때 기존의 모든 렌더링 품질 상태 변경은을 기본값으로 다시 설정 됩니다."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Opens a new graphics container and saves the old container.  \n  \n-   Translates the world coordinates in the container.  \n  \n-   Fills a red rectangle in the (translated coordinates of the) new container.  \n  \n-   Closes the new container and restores the saved container.  \n  \n-   Fills a green rectangle (to the untranslated coordinates) of the saved container.  \n  \n The result is a green rectangle that overlies a red rectangle of the same size.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#2](~/add/codesnippet/cpp/m-system.drawing.graphic_7_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#2](~/add/codesnippet/csharp/m-system.drawing.graphic_7_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#2](~/add/codesnippet/visualbasic/m-system.drawing.graphic_7_1.vb)]"
  syntax:
    content: public System.Drawing.Drawing2D.GraphicsContainer BeginContainer ();
    parameters: []
    return:
      type: System.Drawing.Drawing2D.GraphicsContainer
      description: "이 메서드는 반환 된 <xref href=&quot;System.Drawing.Drawing2D.GraphicsContainer&quot;> </xref> 이 상태를 나타내는 <xref href=&quot;System.Drawing.Graphics&quot;> </xref> 메서드 호출의 시간에 합니다."
  overload: System.Drawing.Graphics.BeginContainer*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.BeginContainer(System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)
  id: BeginContainer(System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: BeginContainer(Rectangle,Rectangle,GraphicsUnit)
  nameWithType: Graphics.BeginContainer(Rectangle,Rectangle,GraphicsUnit)
  fullName: System.Drawing.Graphics.BeginContainer(Rectangle,Rectangle,GraphicsUnit)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "그래픽 컨테이너의 현재 상태와 <xref href=&quot;System.Drawing.Graphics&quot;> </xref> 고 열어 지정 된 크기 조정 변형으로 새 그래픽 컨테이너를 사용 합니다."
  remarks: "이 메서드를 사용 하 여는 <xref:System.Drawing.Graphics.EndContainer%2A>중첩 된 graphics 컨테이너를 만드는 메서드를.</xref:System.Drawing.Graphics.EndContainer%2A> 그래픽 컨테이너 변환, 클리핑 영역 렌더링 속성과 같은 그래픽 상태를 유지합니다.       호출 하는 경우는 <xref:System.Drawing.Graphics.BeginContainer%2A>의 메서드는 <xref:System.Drawing.Graphics>의 상태를 유지 하는 정보 블록이 <xref:System.Drawing.Graphics>스택에 배치 됩니다.</xref:System.Drawing.Graphics> </xref:System.Drawing.Graphics> </xref:System.Drawing.Graphics.BeginContainer%2A> <xref:System.Drawing.Graphics.BeginContainer%2A>메서드가 반환 되는 <xref:System.Drawing.Drawing2D.GraphicsContainer>해당 정보 블록을 식별 하는.</xref:System.Drawing.Drawing2D.GraphicsContainer> </xref:System.Drawing.Graphics.BeginContainer%2A> 식별 하는 개체를 전달 하는 경우는 <xref:System.Drawing.Graphics.EndContainer%2A>메서드가, 정보 블록이 스택에서 제거 되 고 복원 하는 데 사용 되는 <xref:System.Drawing.Graphics>시의 상태로에 <xref:System.Drawing.Graphics.BeginContainer%2A>메서드를 호출 합니다.</xref:System.Drawing.Graphics.BeginContainer%2A> </xref:System.Drawing.Graphics> </xref:System.Drawing.Graphics.EndContainer%2A>       컨테이너는 중첩 될 수 있습니다. 즉, 호출 수는 <xref:System.Drawing.Graphics.BeginContainer%2A>여러 번 호출 하기 전에 <xref:System.Drawing.Graphics.EndContainer%2A>메서드.</xref:System.Drawing.Graphics.EndContainer%2A> </xref:System.Drawing.Graphics.BeginContainer%2A> 호출할 때마다는 <xref:System.Drawing.Graphics.BeginContainer%2A>스택에 정보 블록이 놓입니다 메서드와 나타나면는 <xref:System.Drawing.Drawing2D.GraphicsContainer>정보 블록에 대 한.</xref:System.Drawing.Drawing2D.GraphicsContainer> </xref:System.Drawing.Graphics.BeginContainer%2A> 개체의 <xref:System.Drawing.Graphics.EndContainer%2A>메서드 <xref:System.Drawing.Graphics>는 <xref:System.Drawing.Graphics.BeginContainer%2A>메서드를 호출 하는 해당 특정 <xref:System.Drawing.Drawing2D.GraphicsContainer>.</xref:System.Drawing.Drawing2D.GraphicsContainer> 반환</xref:System.Drawing.Graphics.BeginContainer%2A> 시의 상태로 되돌아갑니다</xref:System.Drawing.Graphics> </xref:System.Drawing.Graphics.EndContainer%2A> 를 전달 하는 경우 그 중 하나 하 여 스택에 정보 블록이 배치 <xref:System.Drawing.Graphics.BeginContainer%2A>메서드 호출 스택에서 제거 되 고 그 후 해당 스택에 배치 하는 모든 정보 블록 <xref:System.Drawing.Graphics.BeginContainer%2A>메서드 호출 또한 제거 됩니다.</xref:System.Drawing.Graphics.BeginContainer%2A> </xref:System.Drawing.Graphics.BeginContainer%2A>       에 대 한 호출이 <xref:System.Drawing.Graphics.Save%2A>메서드 위치 정보 블록 수에 대 한 호출으로 동일한 스택에 <xref:System.Drawing.Graphics.BeginContainer%2A>메서드.</xref:System.Drawing.Graphics.BeginContainer%2A> </xref:System.Drawing.Graphics.Save%2A> 과 마찬가지로 <xref:System.Drawing.Graphics.EndContainer%2A>은 메서드 호출을 이룹니다는 <xref:System.Drawing.Graphics.BeginContainer%2A>메서드 호출에서는 <xref:System.Drawing.Graphics.Restore%2A>은 메서드 호출을 이룹니다는 <xref:System.Drawing.Graphics.Save%2A>메서드를 호출 합니다.</xref:System.Drawing.Graphics.Save%2A> </xref:System.Drawing.Graphics.Restore%2A> </xref:System.Drawing.Graphics.BeginContainer%2A> </xref:System.Drawing.Graphics.EndContainer%2A>       호출 하는 경우는 <xref:System.Drawing.Graphics.EndContainer%2A>메서드를 스택에 배치 된 모든 정보 블록 (여는 <xref:System.Drawing.Graphics.Save%2A>메서드 또는 <xref:System.Drawing.Graphics.BeginContainer%2A>메서드)를 호출 후는 <xref:System.Drawing.Graphics.BeginContainer%2A>메서드 스택에서 제거 됩니다.</xref:System.Drawing.Graphics.BeginContainer%2A> </xref:System.Drawing.Graphics.BeginContainer%2A> </xref:System.Drawing.Graphics.Save%2A> </xref:System.Drawing.Graphics.EndContainer%2A> 마찬가지로, 호출 하는 경우는 <xref:System.Drawing.Graphics.Restore%2A>메서드를 스택에 배치 된 모든 정보 블록 (여는 <xref:System.Drawing.Graphics.Save%2A>메서드 또는 <xref:System.Drawing.Graphics.BeginContainer%2A>메서드)를 호출 후는 <xref:System.Drawing.Graphics.Save%2A>메서드 스택에서 제거 됩니다.</xref:System.Drawing.Graphics.Save%2A> </xref:System.Drawing.Graphics.BeginContainer%2A> </xref:System.Drawing.Graphics.Save%2A> </xref:System.Drawing.Graphics.Restore%2A>       이 메서드는 새 그래픽 컨테이너에 대 한 크기 조정 변형을 지정 된 `dstrect` 및 `srcrect` 매개 변수입니다. 눈금 변환와 같은지를 적용할 때 `srcrect`,으로 인해 `dstrect`합니다.       설정 된 그래픽 상태는 <xref:System.Drawing.Graphics.BeginContainer%2A>메서드에 포함 된 기본 그래픽 상태의 렌더링 품질; 메서드를 호출할 때 기존의 모든 렌더링 품질 상태 변경은을 기본값으로 다시 설정 됩니다.</xref:System.Drawing.Graphics.BeginContainer%2A>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates two rectangles to specify a scale transformation for the new container.  \n  \n-   Opens the new graphics container and saves the old container.  \n  \n-   Fills a red rectangle in the (scaled coordinates of the) new container.  \n  \n-   Closes the new container and restores the saved container.  \n  \n-   Fills a green rectangle (to the unscaled coordinates) of the saved container.  \n  \n The result is a green rectangle that overlies a smaller red rectangle.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#3](~/add/codesnippet/cpp/87d94b02-87d7-4889-aab2-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#3](~/add/codesnippet/csharp/87d94b02-87d7-4889-aab2-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#3](~/add/codesnippet/visualbasic/87d94b02-87d7-4889-aab2-_1.vb)]"
  syntax:
    content: public System.Drawing.Drawing2D.GraphicsContainer BeginContainer (System.Drawing.Rectangle dstrect, System.Drawing.Rectangle srcrect, System.Drawing.GraphicsUnit unit);
    parameters:
    - id: dstrect
      type: System.Drawing.Rectangle
      description: "<xref href=&quot;System.Drawing.Rectangle&quot;></xref>와 함께 구조체입니다는 `srcrect` 매개 변수를 컨테이너에 대 한 크기 조정 변형을 지정 합니다."
    - id: srcrect
      type: System.Drawing.Rectangle
      description: "<xref href=&quot;System.Drawing.Rectangle&quot;></xref>와 함께 구조체입니다는 `dstrect` 매개 변수를 컨테이너에 대 한 크기 조정 변형을 지정 합니다."
    - id: unit
      type: System.Drawing.GraphicsUnit
      description: "멤버는 <xref href=&quot;System.Drawing.GraphicsUnit&quot;> </xref> 컨테이너에 대 한 측정 단위를 지정 하는 열거형입니다."
    return:
      type: System.Drawing.Drawing2D.GraphicsContainer
      description: "이 메서드는 반환 된 <xref href=&quot;System.Drawing.Drawing2D.GraphicsContainer&quot;> </xref> 이 상태를 나타내는 <xref href=&quot;System.Drawing.Graphics&quot;> </xref> 메서드 호출의 시간에 합니다."
  overload: System.Drawing.Graphics.BeginContainer*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.BeginContainer(System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)
  id: BeginContainer(System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: BeginContainer(RectangleF,RectangleF,GraphicsUnit)
  nameWithType: Graphics.BeginContainer(RectangleF,RectangleF,GraphicsUnit)
  fullName: System.Drawing.Graphics.BeginContainer(RectangleF,RectangleF,GraphicsUnit)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "그래픽 컨테이너의 현재 상태와 <xref href=&quot;System.Drawing.Graphics&quot;> </xref> 고 열어 지정 된 크기 조정 변형으로 새 그래픽 컨테이너를 사용 합니다."
  remarks: "이 메서드를 사용 하 여는 <xref:System.Drawing.Graphics.EndContainer%2A>중첩 된 graphics 컨테이너를 만드는 메서드를.</xref:System.Drawing.Graphics.EndContainer%2A> 그래픽 컨테이너 변환, 클리핑 영역 렌더링 속성과 같은 그래픽 상태를 유지합니다.       호출 하는 경우는 <xref:System.Drawing.Graphics.BeginContainer%2A>의 메서드는 <xref:System.Drawing.Graphics>의 상태를 유지 하는 정보 블록이 <xref:System.Drawing.Graphics>스택에 배치 됩니다.</xref:System.Drawing.Graphics> </xref:System.Drawing.Graphics> </xref:System.Drawing.Graphics.BeginContainer%2A> <xref:System.Drawing.Graphics.BeginContainer%2A>메서드가 반환 되는 <xref:System.Drawing.Drawing2D.GraphicsContainer>해당 정보 블록을 식별 하는.</xref:System.Drawing.Drawing2D.GraphicsContainer> </xref:System.Drawing.Graphics.BeginContainer%2A> 식별 하는 개체를 전달 하는 경우는 <xref:System.Drawing.Graphics.EndContainer%2A>메서드가, 정보 블록이 스택에서 제거 되 고 복원 하는 데 사용 되는 <xref:System.Drawing.Graphics>시의 상태로에 <xref:System.Drawing.Graphics.BeginContainer%2A>메서드를 호출 합니다.</xref:System.Drawing.Graphics.BeginContainer%2A> </xref:System.Drawing.Graphics> </xref:System.Drawing.Graphics.EndContainer%2A>       컨테이너는 중첩 될 수 있습니다. 즉, 호출 수는 <xref:System.Drawing.Graphics.BeginContainer%2A>여러 번 호출 하기 전에 <xref:System.Drawing.Graphics.EndContainer%2A>메서드.</xref:System.Drawing.Graphics.EndContainer%2A> </xref:System.Drawing.Graphics.BeginContainer%2A> 호출할 때마다는 <xref:System.Drawing.Graphics.BeginContainer%2A>스택에 정보 블록이 놓입니다 메서드와 나타나면는 <xref:System.Drawing.Drawing2D.GraphicsContainer>정보 블록에 대 한.</xref:System.Drawing.Drawing2D.GraphicsContainer> </xref:System.Drawing.Graphics.BeginContainer%2A> 개체의 <xref:System.Drawing.Graphics.EndContainer%2A>메서드 <xref:System.Drawing.Graphics>는 <xref:System.Drawing.Graphics.BeginContainer%2A>메서드를 호출 하는 해당 특정 <xref:System.Drawing.Drawing2D.GraphicsContainer>.</xref:System.Drawing.Drawing2D.GraphicsContainer> 반환</xref:System.Drawing.Graphics.BeginContainer%2A> 시의 상태로 되돌아갑니다</xref:System.Drawing.Graphics> </xref:System.Drawing.Graphics.EndContainer%2A> 를 전달 하는 경우 그 중 하나 하 여 스택에 정보 블록이 배치 <xref:System.Drawing.Graphics.BeginContainer%2A>메서드 호출 스택에서 제거 되 고 그 후 해당 스택에 배치 하는 모든 정보 블록 <xref:System.Drawing.Graphics.BeginContainer%2A>메서드 호출 또한 제거 됩니다.</xref:System.Drawing.Graphics.BeginContainer%2A> </xref:System.Drawing.Graphics.BeginContainer%2A>       에 대 한 호출이 <xref:System.Drawing.Graphics.Save%2A>메서드 위치 정보 블록 수에 대 한 호출으로 동일한 스택에 <xref:System.Drawing.Graphics.BeginContainer%2A>메서드.</xref:System.Drawing.Graphics.BeginContainer%2A> </xref:System.Drawing.Graphics.Save%2A> 과 마찬가지로 <xref:System.Drawing.Graphics.EndContainer%2A>은 메서드 호출을 이룹니다는 <xref:System.Drawing.Graphics.BeginContainer%2A>메서드 호출에서는 <xref:System.Drawing.Graphics.Restore%2A>은 메서드 호출을 이룹니다는 <xref:System.Drawing.Graphics.Save%2A>메서드를 호출 합니다.</xref:System.Drawing.Graphics.Save%2A> </xref:System.Drawing.Graphics.Restore%2A> </xref:System.Drawing.Graphics.BeginContainer%2A> </xref:System.Drawing.Graphics.EndContainer%2A>       호출 하는 경우는 <xref:System.Drawing.Graphics.EndContainer%2A>메서드를 스택에 배치 된 모든 정보 블록 (여는 `Save` 메서드 또는 <xref:System.Drawing.Graphics.BeginContainer%2A>메서드)를 호출 후는 <xref:System.Drawing.Graphics.BeginContainer%2A>메서드 스택에서 제거 됩니다.</xref:System.Drawing.Graphics.BeginContainer%2A> </xref:System.Drawing.Graphics.BeginContainer%2A> </xref:System.Drawing.Graphics.EndContainer%2A> 마찬가지로, 호출 하는 경우는 <xref:System.Drawing.Graphics.Restore%2A>메서드를 스택에 배치 된 모든 정보 블록 (여는 <xref:System.Drawing.Graphics.Save%2A>메서드 또는 <xref:System.Drawing.Graphics.BeginContainer%2A>메서드)를 호출 후는 <xref:System.Drawing.Graphics.Save%2A>메서드 스택에서 제거 됩니다.</xref:System.Drawing.Graphics.Save%2A> </xref:System.Drawing.Graphics.BeginContainer%2A> </xref:System.Drawing.Graphics.Save%2A> </xref:System.Drawing.Graphics.Restore%2A>       이 메서드는 새 그래픽 컨테이너에 대 한 크기 조정 변형을 지정 된 `dstrect` 및 `srcrect` 매개 변수입니다. 눈금 변환와 같은지를 적용할 때 `srcrect`,으로 인해 `dstrect`합니다.       설정 된 그래픽 상태는 <xref:System.Drawing.Graphics.BeginContainer%2A>메서드에 포함 된 기본 그래픽 상태의 렌더링 품질; 메서드를 호출할 때 기존의 모든 렌더링 품질 상태 변경은을 기본값으로 다시 설정 됩니다.</xref:System.Drawing.Graphics.BeginContainer%2A>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates two rectangles to specify a scale transformation for the new container.  \n  \n-   Opens the new graphics container and saves the old container.  \n  \n-   Fills a red rectangle in the (scaled coordinates of the) new container.  \n  \n-   Closes the new container and restores the saved container.  \n  \n-   Fills a green rectangle (to the unscaled coordinates) of the saved container.  \n  \n The result is a green rectangle that overlies a smaller red rectangle.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#4](~/add/codesnippet/cpp/5890f59d-213c-41f2-9949-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#4](~/add/codesnippet/csharp/5890f59d-213c-41f2-9949-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#4](~/add/codesnippet/visualbasic/5890f59d-213c-41f2-9949-_1.vb)]"
  syntax:
    content: public System.Drawing.Drawing2D.GraphicsContainer BeginContainer (System.Drawing.RectangleF dstrect, System.Drawing.RectangleF srcrect, System.Drawing.GraphicsUnit unit);
    parameters:
    - id: dstrect
      type: System.Drawing.RectangleF
      description: "<xref href=&quot;System.Drawing.RectangleF&quot;></xref>와 함께 구조체입니다는 `srcrect` 매개 변수를 새 그래픽 컨테이너의 크기 조정 변형을 지정 합니다."
    - id: srcrect
      type: System.Drawing.RectangleF
      description: "<xref href=&quot;System.Drawing.RectangleF&quot;></xref>와 함께 구조체입니다는 `dstrect` 매개 변수를 새 그래픽 컨테이너의 크기 조정 변형을 지정 합니다."
    - id: unit
      type: System.Drawing.GraphicsUnit
      description: "멤버는 <xref href=&quot;System.Drawing.GraphicsUnit&quot;> </xref> 컨테이너에 대 한 측정 단위를 지정 하는 열거형입니다."
    return:
      type: System.Drawing.Drawing2D.GraphicsContainer
      description: "이 메서드는 반환 된 <xref href=&quot;System.Drawing.Drawing2D.GraphicsContainer&quot;> </xref> 이 상태를 나타내는 <xref href=&quot;System.Drawing.Graphics&quot;> </xref> 메서드 호출의 시간에 합니다."
  overload: System.Drawing.Graphics.BeginContainer*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.Clear(System.Drawing.Color)
  id: Clear(System.Drawing.Color)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: Clear(Color)
  nameWithType: Graphics.Clear(Color)
  fullName: System.Drawing.Graphics.Clear(Color)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "전체 그리기 화면을 지우고 지정 된 배경색으로 채웁니다."
  remarks: "Clear 메서드 그래픽 개체의 상태를 지우고 graphics 개체를 업데이트할 수 없을 때 호출 하지 않아야 합니다. 예를 들어, 보안 데스크톱에서 Clear 메서드를 호출 하는 터미널 서버 세션에는 <xref:System.Runtime.InteropServices.ExternalException>그대로 두고 발생할 수 있습니다는 <xref:System.Drawing.Graphics>일관성이 없는 상태에는 개체입니다.</xref:System.Drawing.Graphics> </xref:System.Runtime.InteropServices.ExternalException>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code clears the drawing surface of the <xref:System.Drawing.Graphics> and sets the background color to the system-defined teal color.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#5](~/add/codesnippet/cpp/m-system.drawing.graphic_11_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#5](~/add/codesnippet/csharp/m-system.drawing.graphic_11_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#5](~/add/codesnippet/visualbasic/m-system.drawing.graphic_11_1.vb)]"
  syntax:
    content: public void Clear (System.Drawing.Color color);
    parameters:
    - id: color
      type: System.Drawing.Color
      description: "<xref href=&quot;System.Drawing.Color&quot;></xref>그리기 화면의 배경색을 나타내는 구조입니다."
  overload: System.Drawing.Graphics.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.Clip
  id: Clip
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: Clip
  nameWithType: Graphics.Clip
  fullName: System.Drawing.Graphics.Clip
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "가져오거나는 <xref href=&quot;System.Drawing.Region&quot;> </xref> 이 그리기 영역을 제한 하는 <xref href=&quot;System.Drawing.Graphics&quot;> </xref>합니다."
  remarks: "수정 된 <xref:System.Drawing.Region>Clip 속성에서 반환 된 개체에 사용 하 여 후속 그리기 영향을 주지 않습니다는 <xref:System.Drawing.Graphics>개체입니다.</xref:System.Drawing.Graphics> </xref:System.Drawing.Region> 새 클립 영역을 변경 하려면 클립 속성 값을 대체 <xref:System.Drawing.Region>개체입니다.</xref:System.Drawing.Region> Clip 속성 및 호출 검색 클립 영역 유한 인지를 확인 하려면 해당 <xref:System.Drawing.Region.IsInfinite%2A>메서드.</xref:System.Drawing.Region.IsInfinite%2A>"
  example:
  - "The following code example demonstrates the use of the Clip property. This example is designed to be used with Windows Forms. Paste the code into a form and call the `SetAndFillClip` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cpp[System.Drawing.GraphicsProperties#4](~/add/codesnippet/cpp/p-system.drawing.graphic_6_1.cpp)]\n [!code-vb[System.Drawing.GraphicsProperties#4](~/add/codesnippet/visualbasic/p-system.drawing.graphic_6_1.vb)]\n [!code-cs[System.Drawing.GraphicsProperties#4](~/add/codesnippet/csharp/p-system.drawing.graphic_6_1.cs)]"
  syntax:
    content: public System.Drawing.Region Clip { get; set; }
    return:
      type: System.Drawing.Region
      description: "A <xref href=&quot;System.Drawing.Region&quot;> </xref> 의이 부분을 제한 하는 <xref href=&quot;System.Drawing.Graphics&quot;> </xref> 현재 그리기에 사용할 수 있습니다."
  overload: System.Drawing.Graphics.Clip*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.ClipBounds
  id: ClipBounds
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: ClipBounds
  nameWithType: Graphics.ClipBounds
  fullName: System.Drawing.Graphics.ClipBounds
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "가져옵니다는 <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> 이의 클립 영역 경계를 지정 하는 구조 <xref href=&quot;System.Drawing.Graphics&quot;> </xref>합니다."
  remarks: "단위 결과 사각형에 의해 지정 되는 <xref:System.Drawing.Graphics.PageUnit%2A>속성.</xref:System.Drawing.Graphics.PageUnit%2A> 기본 단위는 픽셀입니다. A <xref:System.Drawing.Graphics>일반적으로 컨트롤과 연결 된 해당 컨트롤의 클라이언트 영역에 상대적인 사각형의 시작 됩니다.</xref:System.Drawing.Graphics>       클립 영역을 무한 없으면 ClipBounds 속성 의미 없는 큰 사각형을 반환 합니다. 클립 영역 유한 인지를 확인 하려면 검색 된 <xref:System.Drawing.Graphics.Clip%2A>속성과 호출 해당 <xref:System.Drawing.Region.IsInfinite%2A>메서드.</xref:System.Drawing.Region.IsInfinite%2A> </xref:System.Drawing.Graphics.Clip%2A>"
  syntax:
    content: public System.Drawing.RectangleF ClipBounds { get; }
    return:
      type: System.Drawing.RectangleF
      description: "A <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> 이의 클립 영역에 대 한 경계 사각형을 나타내는 <xref href=&quot;System.Drawing.Graphics&quot;> </xref>합니다."
  overload: System.Drawing.Graphics.ClipBounds*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.CompositingMode
  id: CompositingMode
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: CompositingMode
  nameWithType: Graphics.CompositingMode
  fullName: System.Drawing.Graphics.CompositingMode
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이 방법을 합성 이미지를 지정 하는 값을 가져옵니다 그려집니다 <xref href=&quot;System.Drawing.Graphics&quot;> </xref>합니다."
  remarks: "합성 모드에서 원본 이미지 픽셀 덮어쓰기 배경 픽셀과 결합 되는지 결정 됩니다.      > [!NOTE] >의 CompositingMode 속성 값을 사용 하지 않아야 <xref:System.Drawing.Drawing2D.CompositingMode>때 <xref:System.Drawing.Graphics.TextRenderingHint%2A> <xref:System.Drawing.Text.TextRenderingHint>.</xref:System.Drawing.Text.TextRenderingHint> 속성이</xref:System.Drawing.Graphics.TextRenderingHint%2A> </xref:System.Drawing.Drawing2D.CompositingMode> 예외가 발생할 수 있습니다 또는 이미지가 제대로 렌더링 되지 않을 수 있습니다."
  syntax:
    content: public System.Drawing.Drawing2D.CompositingMode CompositingMode { get; set; }
    return:
      type: System.Drawing.Drawing2D.CompositingMode
      description: "이 속성의 멤버를 지정 된 <xref href=&quot;System.Drawing.Drawing2D.CompositingMode&quot;> </xref> 열거 합니다. 기본값은 <xref href=&quot;System.Drawing.Drawing2D.CompositingMode&quot;> </xref>합니다."
  overload: System.Drawing.Graphics.CompositingMode*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.CompositingQuality
  id: CompositingQuality
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: CompositingQuality
  nameWithType: Graphics.CompositingQuality
  fullName: System.Drawing.Graphics.CompositingQuality
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이에 그려진 합성 이미지의 렌더링 품질을 가져오거나 설정 합니다. <xref href=&quot;System.Drawing.Graphics&quot;> </xref>합니다."
  remarks: "합성 품질 합성 이미지의 렌더링 품질 수준을 결정합니다."
  syntax:
    content: public System.Drawing.Drawing2D.CompositingQuality CompositingQuality { get; set; }
    return:
      type: System.Drawing.Drawing2D.CompositingQuality
      description: "이 속성의 멤버를 지정 된 <xref href=&quot;System.Drawing.Drawing2D.CompositingQuality&quot;> </xref> 열거 합니다. 기본값은 <xref href=&quot;System.Drawing.Drawing2D.CompositingQuality&quot;> </xref>합니다."
  overload: System.Drawing.Graphics.CompositingQuality*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.CopyFromScreen(System.Drawing.Point,System.Drawing.Point,System.Drawing.Size)
  id: CopyFromScreen(System.Drawing.Point,System.Drawing.Point,System.Drawing.Size)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: CopyFromScreen(Point,Point,Size)
  nameWithType: Graphics.CopyFromScreen(Point,Point,Size)
  fullName: System.Drawing.Graphics.CopyFromScreen(Point,Point,Size)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "그리기 화면으로 화면에서 픽셀의 사각형에 해당 색 데이터 비트 블록 전송을 수행 된 <xref href=&quot;System.Drawing.Graphics&quot;> </xref>합니다."
  remarks: "CopyFromScreen 메서드는 다른 위의 쌓기 한 이미지가 데 유용 합니다. 소스 및 대상 색 혼합 되는 방법을 지정 하려면 중 하나를 사용는 <xref:System.Drawing.Graphics.CopyFromScreen%2A>를 사용 하는 메서드는 <xref:System.Drawing.CopyPixelOperation>매개 변수.</xref:System.Drawing.CopyPixelOperation> </xref:System.Drawing.Graphics.CopyFromScreen%2A>"
  example:
  - "The following example demonstrates how to use the CopyFromScreen method. To run this example, paste it into a Windows Form. Handle the form’s <xref:System.Windows.Forms.Control.Paint> event and call the `CopyPixels1` method from the <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-vb[System.Drawing.MiscWhidbeySnippets#4](~/add/codesnippet/visualbasic/f034ccae-68c0-49a1-b18f-_1.vb)]\n [!code-cs[System.Drawing.MiscWhidbeySnippets#4](~/add/codesnippet/csharp/f034ccae-68c0-49a1-b18f-_1.cs)]"
  syntax:
    content: public void CopyFromScreen (System.Drawing.Point upperLeftSource, System.Drawing.Point upperLeftDestination, System.Drawing.Size blockRegionSize);
    parameters:
    - id: upperLeftSource
      type: System.Drawing.Point
      description: "소스 사각형의 왼쪽 위 모서리에 있는 점입니다."
    - id: upperLeftDestination
      type: System.Drawing.Point
      description: "대상 사각형의 왼쪽 위 모서리에 있는 점입니다."
    - id: blockRegionSize
      type: System.Drawing.Size
      description: "전송할 영역의 크기입니다."
  overload: System.Drawing.Graphics.CopyFromScreen*
  exceptions:
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "작업에 실패 했습니다."
  platform:
  - net462
- uid: System.Drawing.Graphics.CopyFromScreen(System.Drawing.Point,System.Drawing.Point,System.Drawing.Size,System.Drawing.CopyPixelOperation)
  id: CopyFromScreen(System.Drawing.Point,System.Drawing.Point,System.Drawing.Size,System.Drawing.CopyPixelOperation)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: CopyFromScreen(Point,Point,Size,CopyPixelOperation)
  nameWithType: Graphics.CopyFromScreen(Point,Point,Size,CopyPixelOperation)
  fullName: System.Drawing.Graphics.CopyFromScreen(Point,Point,Size,CopyPixelOperation)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "그리기 화면으로 화면에서 픽셀의 사각형에 해당 색 데이터 비트 블록 전송을 수행 된 <xref href=&quot;System.Drawing.Graphics&quot;> </xref>합니다."
  remarks: "<xref:System.Drawing.Graphics.CopyFromScreen%2A>메서드는 다른 위의 쌓기 한 이미지가 데 유용 합니다.</xref:System.Drawing.Graphics.CopyFromScreen%2A> `copyPixelOperation` 매개 변수를 지정할 수 있습니다 및 소스 색을 대상 영역에 색과 혼합 해야 하는 방법을 사용 합니다."
  example:
  - "The following example demonstrates how to use the CopyFromScreen method. To run this example, paste it into a Windows Form. Handle the form’s <xref:System.Windows.Forms.Control.Paint> event and call the `CopyPixels2` method from the <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-vb[System.Drawing.MiscWhidbeySnippets#5](~/add/codesnippet/visualbasic/4f8cba74-e878-4407-b71b-_1.vb)]\n [!code-cs[System.Drawing.MiscWhidbeySnippets#5](~/add/codesnippet/csharp/4f8cba74-e878-4407-b71b-_1.cs)]"
  syntax:
    content: public void CopyFromScreen (System.Drawing.Point upperLeftSource, System.Drawing.Point upperLeftDestination, System.Drawing.Size blockRegionSize, System.Drawing.CopyPixelOperation copyPixelOperation);
    parameters:
    - id: upperLeftSource
      type: System.Drawing.Point
      description: "소스 사각형의 왼쪽 위 모서리에 있는 점입니다."
    - id: upperLeftDestination
      type: System.Drawing.Point
      description: "대상 사각형의 왼쪽 위 모서리에 있는 점입니다."
    - id: blockRegionSize
      type: System.Drawing.Size
      description: "전송할 영역의 크기입니다."
    - id: copyPixelOperation
      type: System.Drawing.CopyPixelOperation
      description: "중 하나는 <xref href=&quot;System.Drawing.CopyPixelOperation&quot;> </xref> 값입니다."
  overload: System.Drawing.Graphics.CopyFromScreen*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "<code>copyPixelOperation</code>구성원이 아니므로 <xref href=&quot;System.Drawing.CopyPixelOperation&quot;> </xref>합니다."
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "작업에 실패 했습니다."
  platform:
  - net462
- uid: System.Drawing.Graphics.CopyFromScreen(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Size)
  id: CopyFromScreen(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Size)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: CopyFromScreen(Int32,Int32,Int32,Int32,Size)
  nameWithType: Graphics.CopyFromScreen(Int32,Int32,Int32,Int32,Size)
  fullName: System.Drawing.Graphics.CopyFromScreen(Int32,Int32,Int32,Int32,Size)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "그리기 화면으로 화면에서 픽셀의 사각형에 해당 색 데이터 비트 블록 전송을 수행 된 <xref href=&quot;System.Drawing.Graphics&quot;> </xref>합니다."
  remarks: "<xref:System.Drawing.Graphics.CopyFromScreen%2A>메서드는 다른 위의 쌓기 한 이미지가 데 유용 합니다.</xref:System.Drawing.Graphics.CopyFromScreen%2A> 소스 및 대상 색 혼합 되는 방법을 지정 하려면 받아들이는 CopyFromScreen 방법 중 하나를 사용는 <xref:System.Drawing.CopyPixelOperation>매개 변수.</xref:System.Drawing.CopyPixelOperation>"
  example:
  - "The following code example demonstrates how to use the <xref:System.Drawing.Graphics.CopyFromScreen%2A> for printing a copy of the current form.  \n  \n [!code-cs[System.Drawing.Graphics.CopyFromScreen#1](~/add/codesnippet/csharp/374af905-18c0-4d48-aa6c-_1.cs)]\n [!code-vb[System.Drawing.Graphics.CopyFromScreen#1](~/add/codesnippet/visualbasic/374af905-18c0-4d48-aa6c-_1.vb)]"
  syntax:
    content: public void CopyFromScreen (int sourceX, int sourceY, int destinationX, int destinationY, System.Drawing.Size blockRegionSize);
    parameters:
    - id: sourceX
      type: System.Int32
      description: "소스 사각형의 왼쪽 위 모서리에 있는 점의 x 좌표입니다."
    - id: sourceY
      type: System.Int32
      description: "소스 사각형의 왼쪽 위 모서리에 있는 점의 y 좌표입니다."
    - id: destinationX
      type: System.Int32
      description: "대상 사각형의 왼쪽 위 모서리에 있는 점의 x 좌표입니다."
    - id: destinationY
      type: System.Int32
      description: "대상 사각형의 왼쪽 위 모서리에 있는 점의 y 좌표입니다."
    - id: blockRegionSize
      type: System.Drawing.Size
      description: "전송할 영역의 크기입니다."
  overload: System.Drawing.Graphics.CopyFromScreen*
  exceptions:
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "작업에 실패 했습니다."
  platform:
  - net462
- uid: System.Drawing.Graphics.CopyFromScreen(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Size,System.Drawing.CopyPixelOperation)
  id: CopyFromScreen(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Size,System.Drawing.CopyPixelOperation)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: CopyFromScreen(Int32,Int32,Int32,Int32,Size,CopyPixelOperation)
  nameWithType: Graphics.CopyFromScreen(Int32,Int32,Int32,Int32,Size,CopyPixelOperation)
  fullName: System.Drawing.Graphics.CopyFromScreen(Int32,Int32,Int32,Int32,Size,CopyPixelOperation)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "그리기 화면으로 화면에서 픽셀의 사각형에 해당 색 데이터 비트 블록 전송을 수행 된 <xref href=&quot;System.Drawing.Graphics&quot;> </xref>합니다."
  remarks: "<xref:System.Drawing.Graphics.CopyFromScreen%2A>메서드는 다른 위의 쌓기 한 이미지가 데 유용 합니다.</xref:System.Drawing.Graphics.CopyFromScreen%2A> `copyPixelOperation` 매개 변수를 지정할 수 있습니다 및 소스 색을 대상 영역에 색과 혼합 해야 하는 방법을 사용 합니다."
  example:
  - "The following example demonstrates how to use the CopyFromScreen method. To run this example, paste it into a Windows Form. Handle the form’s <xref:System.Windows.Forms.Control.Paint> event and call the `CopyPixels4` method from the <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-vb[System.Drawing.MiscWhidbeySnippets#7](~/add/codesnippet/visualbasic/f1d5c2c4-f05b-4fb9-a6ef-_1.vb)]\n [!code-cs[System.Drawing.MiscWhidbeySnippets#7](~/add/codesnippet/csharp/f1d5c2c4-f05b-4fb9-a6ef-_1.cs)]"
  syntax:
    content: public void CopyFromScreen (int sourceX, int sourceY, int destinationX, int destinationY, System.Drawing.Size blockRegionSize, System.Drawing.CopyPixelOperation copyPixelOperation);
    parameters:
    - id: sourceX
      type: System.Int32
      description: "소스 사각형의 왼쪽 위 모서리에 있는 점의 x 좌표입니다."
    - id: sourceY
      type: System.Int32
      description: "소스 사각형의 왼쪽 위 모서리에 있는 점의 y-좌표"
    - id: destinationX
      type: System.Int32
      description: "대상 사각형의 왼쪽 위 모서리에 있는 점의 x 좌표입니다."
    - id: destinationY
      type: System.Int32
      description: "대상 사각형의 왼쪽 위 모서리에 있는 점의 y 좌표입니다."
    - id: blockRegionSize
      type: System.Drawing.Size
      description: "전송할 영역의 크기입니다."
    - id: copyPixelOperation
      type: System.Drawing.CopyPixelOperation
      description: "중 하나는 <xref href=&quot;System.Drawing.CopyPixelOperation&quot;> </xref> 값입니다."
  overload: System.Drawing.Graphics.CopyFromScreen*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "<code>copyPixelOperation</code>구성원이 아니므로 <xref href=&quot;System.Drawing.CopyPixelOperation&quot;> </xref>합니다."
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "작업에 실패 했습니다."
  platform:
  - net462
- uid: System.Drawing.Graphics.Dispose
  id: Dispose
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: Dispose()
  nameWithType: Graphics.Dispose()
  fullName: System.Drawing.Graphics.Dispose()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "사용 하는 모든 리소스를 해제 <xref href=&quot;System.Drawing.Graphics&quot;> </xref>합니다."
  remarks: "이 사용 하는 리소스를 사용 하면 Dispose를 호출 <xref:System.Drawing.Graphics>다른 용도에 다시 할당 됩니다.</xref:System.Drawing.Graphics>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates an <xref:System.Drawing.Image> from a graphics file SampImag.jpg in the example directory.  \n  \n-   Creates a <xref:System.Drawing.Graphics> from the <xref:System.Drawing.Image>.  \n  \n-   Alters the image by filling a rectangle within it.  \n  \n-   Draws the <xref:System.Drawing.Image> to the screen.  \n  \n-   Releases the created <xref:System.Drawing.Graphics>.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#6](~/add/codesnippet/cpp/m-system.drawing.graphic_23_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#6](~/add/codesnippet/csharp/m-system.drawing.graphic_23_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#6](~/add/codesnippet/visualbasic/m-system.drawing.graphic_23_1.vb)]"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Drawing.Graphics.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.DpiX
  id: DpiX
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DpiX
  nameWithType: Graphics.DpiX
  fullName: System.Drawing.Graphics.DpiX
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이의 수평 해상도 가져옵니다 <xref href=&quot;System.Drawing.Graphics&quot;> </xref>합니다."
  remarks: "고해상도 응용 프로그램을 만드는 방법에 대 한 자세한 내용은 참조 [높은 DPI](http://go.microsoft.com/fwlink/?LinkId=159804)합니다."
  example:
  - "The following method shows the use of the DpiX and <xref:System.Drawing.Graphics.DpiY%2A> properties. This example is designed for use with a Windows Form. To run this example, paste it into a form that contains a <xref:System.Windows.Forms.ListBox> named listBox1 and call this method from the form's constructor.  \n  \n [!code-cs[System.Drawing.MiscExamples#4](~/add/codesnippet/csharp/p-system.drawing.graphic_5_1.cs)]\n [!code-cpp[System.Drawing.MiscExamples#4](~/add/codesnippet/cpp/p-system.drawing.graphic_5_1.cpp)]\n [!code-vb[System.Drawing.MiscExamples#4](~/add/codesnippet/visualbasic/p-system.drawing.graphic_5_1.vb)]"
  syntax:
    content: public float DpiX { get; }
    return:
      type: System.Single
      description: "값이에서 지 원하는 수평 해상도 인치당 도트 <xref href=&quot;System.Drawing.Graphics&quot;> </xref>합니다."
  overload: System.Drawing.Graphics.DpiX*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.DpiY
  id: DpiY
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DpiY
  nameWithType: Graphics.DpiY
  fullName: System.Drawing.Graphics.DpiY
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이 수직 해상도 가져옵니다 <xref href=&quot;System.Drawing.Graphics&quot;> </xref>합니다."
  remarks: "고해상도 응용 프로그램을 만드는 방법에 대 한 자세한 내용은 참조 [높은 DPI](http://go.microsoft.com/fwlink/?LinkId=159804)합니다."
  example:
  - "The following method shows the use of the <xref:System.Drawing.Graphics.DpiX%2A> and DpiY properties. This example is designed for use with a Windows Form. To run this example, paste it into a form that contains a <xref:System.Windows.Forms.ListBox> named listBox1 and call this method from the form's constructor.  \n  \n [!code-cs[System.Drawing.MiscExamples#4](~/add/codesnippet/csharp/p-system.drawing.graphic_0_1.cs)]\n [!code-cpp[System.Drawing.MiscExamples#4](~/add/codesnippet/cpp/p-system.drawing.graphic_0_1.cpp)]\n [!code-vb[System.Drawing.MiscExamples#4](~/add/codesnippet/visualbasic/p-system.drawing.graphic_0_1.vb)]"
  syntax:
    content: public float DpiY { get; }
    return:
      type: System.Single
      description: "값이에서 지 원하는 수직 해상도 인치당 도트 <xref href=&quot;System.Drawing.Graphics&quot;> </xref>합니다."
  overload: System.Drawing.Graphics.DpiY*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Drawing.Rectangle,System.Single,System.Single)
  id: DrawArc(System.Drawing.Pen,System.Drawing.Rectangle,System.Single,System.Single)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawArc(Pen,Rectangle,Single,Single)
  nameWithType: Graphics.DrawArc(Pen,Rectangle,Single,Single)
  fullName: System.Drawing.Graphics.DrawArc(Pen,Rectangle,Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "지정한 타원의 부분을 나타내는 호를 그립니다는 <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 구조입니다."
  remarks: "이 메서드는 타원의 경계의 일부를 호를 그립니다. 타원은 사각형의 경계에 의해 정의 됩니다. 호는 타원의 경계 부분의 `startAngle` 매개 변수 및 `startAngle`  +  `sweepAngle` 매개 변수입니다."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a black pen.  \n  \n-   Creates a rectangle to bound an ellipse.  \n  \n-   Defines the start (45 degrees) and sweep (270 degrees) angles.  \n  \n-   Draws the elliptical arc to the screen.  \n  \n The result is a partial ellipse missing a segment between + and - 45 degrees of the x axis.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#7](~/add/codesnippet/cpp/6b29678d-50bf-4f47-b318-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#7](~/add/codesnippet/csharp/6b29678d-50bf-4f47-b318-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#7](~/add/codesnippet/visualbasic/6b29678d-50bf-4f47-b318-_1.vb)]"
  syntax:
    content: public void DrawArc (System.Drawing.Pen pen, System.Drawing.Rectangle rect, float startAngle, float sweepAngle);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>색, 너비 및 스타일을 결정 하입니다."
    - id: rect
      type: System.Drawing.Rectangle
      description: "<xref href=&quot;System.Drawing.RectangleF&quot;></xref>타원의 경계를 정의 하는 구조입니다."
    - id: startAngle
      type: System.Single
      description: "각도 원호의 시작점에 x 축에서 시계 방향으로 측정 합니다."
    - id: sweepAngle
      type: System.Single
      description: "시계 방향으로 측정 한 각도 `startAngle` 호의 끝점 매개 변수입니다."
  overload: System.Drawing.Graphics.DrawArc*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Drawing.RectangleF,System.Single,System.Single)
  id: DrawArc(System.Drawing.Pen,System.Drawing.RectangleF,System.Single,System.Single)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawArc(Pen,RectangleF,Single,Single)
  nameWithType: Graphics.DrawArc(Pen,RectangleF,Single,Single)
  fullName: System.Drawing.Graphics.DrawArc(Pen,RectangleF,Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "지정한 타원의 부분을 나타내는 호를 그립니다는 <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> 구조입니다."
  remarks: "이 메서드는 타원의 경계의 일부를 호를 그립니다. 타원은 사각형의 경계에 의해 정의 됩니다. 호는 타원의 경계 부분의 `startAngle` 매개 변수 및 `startAngle`  +  `sweepAngle` 매개 변수입니다."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a black pen.  \n  \n-   Creates a rectangle to bound an ellipse.  \n  \n-   Defines the start (45 degrees) and sweep (270 degrees) angles.  \n  \n-   Draws the elliptical arc to the screen.  \n  \n The result is a partial ellipse missing a segment between + and - 45 degrees of the x axis.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#8](~/add/codesnippet/cpp/f55c55b1-d88f-4896-ae59-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#8](~/add/codesnippet/csharp/f55c55b1-d88f-4896-ae59-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#8](~/add/codesnippet/visualbasic/f55c55b1-d88f-4896-ae59-_1.vb)]"
  syntax:
    content: public void DrawArc (System.Drawing.Pen pen, System.Drawing.RectangleF rect, float startAngle, float sweepAngle);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>색, 너비 및 스타일을 결정 하입니다."
    - id: rect
      type: System.Drawing.RectangleF
      description: "<xref href=&quot;System.Drawing.RectangleF&quot;></xref>타원의 경계를 정의 하는 구조입니다."
    - id: startAngle
      type: System.Single
      description: "각도 원호의 시작점에 x 축에서 시계 방향으로 측정 합니다."
    - id: sweepAngle
      type: System.Single
      description: "시계 방향으로 측정 한 각도 `startAngle` 호의 끝점 매개 변수입니다."
  overload: System.Drawing.Graphics.DrawArc*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>은<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>"
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: DrawArc(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawArc(Pen,Int32,Int32,Int32,Int32,Int32,Int32)
  nameWithType: Graphics.DrawArc(Pen,Int32,Int32,Int32,Int32,Int32,Int32)
  fullName: System.Drawing.Graphics.DrawArc(Pen,Int32,Int32,Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "좌표, 너비, 높이의 쌍으로 지정 된 타원의 부분을 나타내는 호를 그립니다."
  remarks: "이 메서드는 타원의 경계의 일부를 호를 그립니다. 타원은 사각형의 경계에 의해 정의 됩니다. 호는 타원의 경계 부분의 `startAngle` 매개 변수 및 `startAngle`  +  `sweepAngle` 매개 변수입니다."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a black pen.  \n  \n-   Creates the position and size of a rectangle to bound an ellipse.  \n  \n-   Defines the start (45 degrees) and sweep (270 degrees) angles.  \n  \n-   Draws the elliptical arc to the screen.  \n  \n The result is a partial ellipse missing a segment between + and - 45 degrees of the x axis.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#9](~/add/codesnippet/cpp/3589ea58-fd85-4ba4-9361-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#9](~/add/codesnippet/csharp/3589ea58-fd85-4ba4-9361-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#9](~/add/codesnippet/visualbasic/3589ea58-fd85-4ba4-9361-_1.vb)]"
  syntax:
    content: public void DrawArc (System.Drawing.Pen pen, int x, int y, int width, int height, int startAngle, int sweepAngle);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>색, 너비 및 스타일을 결정 하입니다."
    - id: x
      type: System.Int32
      description: "타원을 정의 하는 사각형의 왼쪽 위 모퉁이의 x 좌표입니다."
    - id: y
      type: System.Int32
      description: "타원을 정의 하는 사각형의 왼쪽 위 모퉁이의 y 좌표입니다."
    - id: width
      type: System.Int32
      description: "타원을 정의 하는 사각형의 너비입니다."
    - id: height
      type: System.Int32
      description: "타원을 정의 하는 사각형의 높이입니다."
    - id: startAngle
      type: System.Int32
      description: "각도 원호의 시작점에 x 축에서 시계 방향으로 측정 합니다."
    - id: sweepAngle
      type: System.Int32
      description: "시계 방향으로 측정 한 각도 `startAngle` 호의 끝점 매개 변수입니다."
  overload: System.Drawing.Graphics.DrawArc*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>rects</code>길이가&0; 인 배열이입니다."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  id: DrawArc(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawArc(Pen,Single,Single,Single,Single,Single,Single)
  nameWithType: Graphics.DrawArc(Pen,Single,Single,Single,Single,Single,Single)
  fullName: System.Drawing.Graphics.DrawArc(Pen,Single,Single,Single,Single,Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "좌표, 너비, 높이의 쌍으로 지정 된 타원의 부분을 나타내는 호를 그립니다."
  remarks: "이 메서드는 타원의 경계의 일부를 호를 그립니다. 타원은 사각형의 경계에 의해 정의 됩니다. 호는 타원의 경계 부분의 `startAngle` 매개 변수 및 `startAngle`  +  `sweepAngle` 매개 변수입니다."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a black pen.  \n  \n-   Creates the position and size of a rectangle to bound an ellipse.  \n  \n-   Defines the start (45 degrees) and sweep (270 degrees) angles.  \n  \n-   Draws the elliptical arc to the screen.  \n  \n The result is a partial ellipse missing a segment between + and - 45 degrees of the x axis.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#10](~/add/codesnippet/cpp/066bd569-1a5d-4fa1-9898-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#10](~/add/codesnippet/csharp/066bd569-1a5d-4fa1-9898-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#10](~/add/codesnippet/visualbasic/066bd569-1a5d-4fa1-9898-_1.vb)]"
  syntax:
    content: public void DrawArc (System.Drawing.Pen pen, float x, float y, float width, float height, float startAngle, float sweepAngle);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>색, 너비 및 스타일을 결정 하입니다."
    - id: x
      type: System.Single
      description: "타원을 정의 하는 사각형의 왼쪽 위 모퉁이의 x 좌표입니다."
    - id: y
      type: System.Single
      description: "타원을 정의 하는 사각형의 왼쪽 위 모퉁이의 y 좌표입니다."
    - id: width
      type: System.Single
      description: "타원을 정의 하는 사각형의 너비입니다."
    - id: height
      type: System.Single
      description: "타원을 정의 하는 사각형의 높이입니다."
    - id: startAngle
      type: System.Single
      description: "각도 원호의 시작점에 x 축에서 시계 방향으로 측정 합니다."
    - id: sweepAngle
      type: System.Single
      description: "시계 방향으로 측정 한 각도 `startAngle` 호의 끝점 매개 변수입니다."
  overload: System.Drawing.Graphics.DrawArc*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)
  id: DrawBezier(System.Drawing.Pen,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawBezier(Pen,Point,Point,Point,Point)
  nameWithType: Graphics.DrawBezier(Pen,Point,Point,Point,Point)
  fullName: System.Drawing.Graphics.DrawBezier(Pen,Point,Point,Point,Point)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "네 개의 정의 되는 베 지 어 스플라인을 그립니다 <xref href=&quot;System.Drawing.Point&quot;> </xref> 구조입니다."
  remarks: "베 지 어 곡선의 첫 번째 요소에서 네 번째 지점에 그려집니다. 두 번째 및 세 번째 요소는 곡선의 모양을 결정 하는 컨트롤 요소입니다."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a black pen.  \n  \n-   Creates the start, end, and two control points for the curve.  \n  \n-   Draws the Bézier curve to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#11](~/add/codesnippet/cpp/64d14328-9929-49d1-880b-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#11](~/add/codesnippet/csharp/64d14328-9929-49d1-880b-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#11](~/add/codesnippet/visualbasic/64d14328-9929-49d1-880b-_1.vb)]"
  syntax:
    content: public void DrawBezier (System.Drawing.Pen pen, System.Drawing.Point pt1, System.Drawing.Point pt2, System.Drawing.Point pt3, System.Drawing.Point pt4);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>색, 너비 및 곡선의 스타일을 결정 하는 구조입니다."
    - id: pt1
      type: System.Drawing.Point
      description: "<xref href=&quot;System.Drawing.Point&quot;></xref>곡선의 시작점을 나타내는 구조입니다."
    - id: pt2
      type: System.Drawing.Point
      description: "<xref href=&quot;System.Drawing.Point&quot;></xref>곡선의 첫 번째 제어점을 나타내는 구조입니다."
    - id: pt3
      type: System.Drawing.Point
      description: "<xref href=&quot;System.Drawing.Point&quot;></xref>곡선의 둘째 제어점을 나타내는 구조입니다."
    - id: pt4
      type: System.Drawing.Point
      description: "<xref href=&quot;System.Drawing.Point&quot;></xref>곡선의 끝 지점을 나타내는 구조입니다."
  overload: System.Drawing.Graphics.DrawBezier*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)
  id: DrawBezier(System.Drawing.Pen,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawBezier(Pen,PointF,PointF,PointF,PointF)
  nameWithType: Graphics.DrawBezier(Pen,PointF,PointF,PointF,PointF)
  fullName: System.Drawing.Graphics.DrawBezier(Pen,PointF,PointF,PointF,PointF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "네 개의 정의 되는 베 지 어 스플라인을 그립니다 <xref href=&quot;System.Drawing.PointF&quot;> </xref> 구조입니다."
  remarks: "베 지 어 스플라인은 첫 번째 요소에서 네 번째 지점에 그려집니다. 두 번째 및 세 번째 요소는 곡선의 모양을 결정 하는 컨트롤 요소입니다."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a black pen.  \n  \n-   Creates the start, end, and two control points for the curve.  \n  \n-   Draws the Bézier curve to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#12](~/add/codesnippet/cpp/f50f06d6-012a-49b5-bdea-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#12](~/add/codesnippet/csharp/f50f06d6-012a-49b5-bdea-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#12](~/add/codesnippet/visualbasic/f50f06d6-012a-49b5-bdea-_1.vb)]"
  syntax:
    content: public void DrawBezier (System.Drawing.Pen pen, System.Drawing.PointF pt1, System.Drawing.PointF pt2, System.Drawing.PointF pt3, System.Drawing.PointF pt4);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>색, 너비 및 곡선의 스타일을 결정 하입니다."
    - id: pt1
      type: System.Drawing.PointF
      description: "<xref href=&quot;System.Drawing.PointF&quot;></xref>곡선의 시작점을 나타내는 구조입니다."
    - id: pt2
      type: System.Drawing.PointF
      description: "<xref href=&quot;System.Drawing.PointF&quot;></xref>곡선의 첫 번째 제어점을 나타내는 구조입니다."
    - id: pt3
      type: System.Drawing.PointF
      description: "<xref href=&quot;System.Drawing.PointF&quot;></xref>곡선의 둘째 제어점을 나타내는 구조입니다."
    - id: pt4
      type: System.Drawing.PointF
      description: "<xref href=&quot;System.Drawing.PointF&quot;></xref>곡선의 끝 지점을 나타내는 구조입니다."
  overload: System.Drawing.Graphics.DrawBezier*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  id: DrawBezier(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawBezier(Pen,Single,Single,Single,Single,Single,Single,Single,Single)
  nameWithType: Graphics.DrawBezier(Pen,Single,Single,Single,Single,Single,Single,Single,Single)
  fullName: System.Drawing.Graphics.DrawBezier(Pen,Single,Single,Single,Single,Single,Single,Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "포인트를 나타내는 좌표&4; 개의 정렬 된 쌍에 의해 정의 되는 베 지 어 스플라인을 그립니다."
  remarks: "베 지 어 스플라인은 첫 번째 요소에서 네 번째 지점에 그려집니다. 두 번째 및 세 번째 요소는 곡선의 모양을 결정 하는 컨트롤 요소입니다."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a black pen.  \n  \n-   Creates the coordinates of the start, end, and two control points for the curve.  \n  \n-   Draws the Bézier curve to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#13](~/add/codesnippet/cpp/baa8b588-7355-4d59-ad6c-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#13](~/add/codesnippet/csharp/baa8b588-7355-4d59-ad6c-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#13](~/add/codesnippet/visualbasic/baa8b588-7355-4d59-ad6c-_1.vb)]"
  syntax:
    content: public void DrawBezier (System.Drawing.Pen pen, float x1, float y1, float x2, float y2, float x3, float y3, float x4, float y4);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>색, 너비 및 곡선의 스타일을 결정 하입니다."
    - id: x1
      type: System.Single
      description: "곡선의 시작점의 x 좌표입니다."
    - id: y1
      type: System.Single
      description: "곡선의 시작점의 y 좌표입니다."
    - id: x2
      type: System.Single
      description: "곡선의 첫째 제어점의 x 좌표입니다."
    - id: y2
      type: System.Single
      description: "곡선의 첫째 제어점의 y 좌표입니다."
    - id: x3
      type: System.Single
      description: "곡선의 둘째 제어점의 x 좌표입니다."
    - id: y3
      type: System.Single
      description: "곡선의 둘째 제어점의 y 좌표입니다."
    - id: x4
      type: System.Single
      description: "곡선의 끝점에 대 한 x 좌표입니다."
    - id: y4
      type: System.Single
      description: "곡선의 끝점의 y 좌표입니다."
  overload: System.Drawing.Graphics.DrawBezier*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawBeziers(System.Drawing.Pen,System.Drawing.Point[])
  id: DrawBeziers(System.Drawing.Pen,System.Drawing.Point[])
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawBeziers(Pen,Point[])
  nameWithType: Graphics.DrawBeziers(Pen,Point[])
  fullName: System.Drawing.Graphics.DrawBeziers(Pen,Point[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "배열에서 일련의 베 지 어 스플라인 그립니다 <xref href=&quot;System.Drawing.Point&quot;> </xref> 구조입니다."
  remarks: '배열에 있는 점의 개수 첫 번째 스플라인 4 개 필요 하 고 다른 스플라인 각각 3 점이 필요 하기 때문에 1을 더한 3의 배수 여야 합니다. 첫 번째 베 지 어 스플라인은 첫 번째 요소에서 점 배열의 네 번째 지점에 그려집니다. 두 번째 및 세 번째 요소는 곡선의 모양을 결정 하는 컨트롤 요소입니다. 각 후속 곡선 필요한 정확히 세 개 이상의 점: 두 개 지점 및 끝 지점을 제어 합니다. 이전 곡선의 끝점은 각 추가 곡선의 시작 지점으로 사용 됩니다.'
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a black pen.  \n  \n-   Creates the start, end, and two control points for a first curve and endpoint and two control points for a second curve.  \n  \n-   Draws the successive Bézier curves to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#14](~/add/codesnippet/cpp/m-system.drawing.graphic_46_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#14](~/add/codesnippet/csharp/m-system.drawing.graphic_46_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#14](~/add/codesnippet/visualbasic/m-system.drawing.graphic_46_1.vb)]"
  syntax:
    content: public void DrawBeziers (System.Drawing.Pen pen, System.Drawing.Point[] points);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>색, 너비 및 곡선의 스타일을 결정 하입니다."
    - id: points
      type: System.Drawing.Point[]
      description: "배열 <xref href=&quot;System.Drawing.Point&quot;> </xref> 곡선을 결정 하는 점을 나타내는입니다. 배열에 있는 점의 개수 3 1, 4, 7, 10 등의 배수 여야 합니다."
  overload: System.Drawing.Graphics.DrawBeziers*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>points</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawBeziers(System.Drawing.Pen,System.Drawing.PointF[])
  id: DrawBeziers(System.Drawing.Pen,System.Drawing.PointF[])
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawBeziers(Pen,PointF[])
  nameWithType: Graphics.DrawBeziers(Pen,PointF[])
  fullName: System.Drawing.Graphics.DrawBeziers(Pen,PointF[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "배열에서 일련의 베 지 어 스플라인 그립니다 <xref href=&quot;System.Drawing.PointF&quot;> </xref> 구조입니다."
  remarks: '배열에 있는 점의 개수 첫 번째 스플라인 4 개 필요 하 고 다른 스플라인 각각 3 점이 필요 하기 때문에 1을 더한 3의 배수 여야 합니다. 첫 번째 베 지 어 곡선 첫 번째 요소에서 점 배열의 네 번째 지점에 그려집니다. 두 번째 및 세 번째 요소는 곡선의 모양을 결정 하는 컨트롤 요소입니다. 각 후속 곡선 필요한 정확히 세 개 이상의 점: 두 개 지점 및 끝 지점을 제어 합니다. 이전 곡선의 끝점은 각 추가 곡선의 시작 지점으로 사용 됩니다.'
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a black pen.  \n  \n-   Creates the start, end, and two control points for a first curve and endpoint and two control points for a second curve.  \n  \n-   Draws the successive Bézier curves to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#15](~/add/codesnippet/cpp/6d8590a5-9b64-4d74-acab-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#15](~/add/codesnippet/csharp/6d8590a5-9b64-4d74-acab-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#15](~/add/codesnippet/visualbasic/6d8590a5-9b64-4d74-acab-_1.vb)]"
  syntax:
    content: public void DrawBeziers (System.Drawing.Pen pen, System.Drawing.PointF[] points);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>색, 너비 및 곡선의 스타일을 결정 하입니다."
    - id: points
      type: System.Drawing.PointF[]
      description: "배열 <xref href=&quot;System.Drawing.PointF&quot;> </xref> 곡선을 결정 하는 점을 나타내는입니다. 배열에 있는 점의 개수 3 1, 4, 7, 10 등의 배수 여야 합니다."
  overload: System.Drawing.Graphics.DrawBeziers*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>points</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.Point[])
  id: DrawClosedCurve(System.Drawing.Pen,System.Drawing.Point[])
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawClosedCurve(Pen,Point[])
  nameWithType: Graphics.DrawClosedCurve(Pen,Point[])
  fullName: System.Drawing.Graphics.DrawClosedCurve(Pen,Point[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "배열에 의해 정의 된 폐쇄형된 카디널 스플라인을 그립니다 <xref href=&quot;System.Drawing.Point&quot;> </xref> 구조입니다."
  remarks: "이 메서드는 배열의 각 요소에 전달 하는 폐쇄형된 카디널 스플라인을 그립니다. 마지막 지점 첫 번째 요소와 일치 하지 않는 경우 추가 곡선 세그먼트 하 고 첫 번째 그림을 닫으면 마지막 지점에서 추가 됩니다.       점의 배열에&4; 개 이상 포함 되어야 <xref:System.Drawing.Point>구조.</xref:System.Drawing.Point>       이 메서드는 0.5의 기본 장력을 사용 합니다."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates red and green pens.  \n  \n-   Creates seven points to define a curve.  \n  \n-   Draws seven red straight lines between the seven points to form a closed polygon.  \n  \n-   Draws a green closed curve through the seven points.  \n  \n The method uses a default tension of 0.5.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#16](~/add/codesnippet/cpp/fec8cc4c-2307-4c6d-92d0-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#16](~/add/codesnippet/csharp/fec8cc4c-2307-4c6d-92d0-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#16](~/add/codesnippet/visualbasic/fec8cc4c-2307-4c6d-92d0-_1.vb)]"
  syntax:
    content: public void DrawClosedCurve (System.Drawing.Pen pen, System.Drawing.Point[] points);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>색, 너비 및 곡선의 높이 결정 하는."
    - id: points
      type: System.Drawing.Point[]
      description: "배열 <xref href=&quot;System.Drawing.Point&quot;> </xref> 스플라인을 정의 하는 구조입니다."
  overload: System.Drawing.Graphics.DrawClosedCurve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>points</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.PointF[])
  id: DrawClosedCurve(System.Drawing.Pen,System.Drawing.PointF[])
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawClosedCurve(Pen,PointF[])
  nameWithType: Graphics.DrawClosedCurve(Pen,PointF[])
  fullName: System.Drawing.Graphics.DrawClosedCurve(Pen,PointF[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "배열에 의해 정의 된 폐쇄형된 카디널 스플라인을 그립니다 <xref href=&quot;System.Drawing.PointF&quot;> </xref> 구조입니다."
  remarks: "이 메서드는 배열의 각 요소에 전달 하는 폐쇄형된 카디널 스플라인을 그립니다. 마지막 지점 첫 번째 요소와 일치 하지 않는 경우 추가 곡선 세그먼트 하 고 첫 번째을 닫으려면 마지막 지점에서 추가 됩니다.       점의 배열에&4; 개 이상 포함 되어야 <xref:System.Drawing.PointF>구조.</xref:System.Drawing.PointF>       이 메서드는 0.5의 기본 장력을 사용 합니다."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates red and green pens.  \n  \n-   Creates seven points to define a curve.  \n  \n-   Draws seven red straight lines between the seven points to form a closed polygon.  \n  \n-   Draws a green closed curve through the seven points.  \n  \n The method uses a default tension of 0.5.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#18](~/add/codesnippet/cpp/67309f1b-9d1b-4f3b-a3af-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#18](~/add/codesnippet/csharp/67309f1b-9d1b-4f3b-a3af-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#18](~/add/codesnippet/visualbasic/67309f1b-9d1b-4f3b-a3af-_1.vb)]"
  syntax:
    content: public void DrawClosedCurve (System.Drawing.Pen pen, System.Drawing.PointF[] points);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>색, 너비 및 곡선의 높이 결정 하는."
    - id: points
      type: System.Drawing.PointF[]
      description: "배열 <xref href=&quot;System.Drawing.PointF&quot;> </xref> 스플라인을 정의 하는 구조입니다."
  overload: System.Drawing.Graphics.DrawClosedCurve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>points</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.Point[],System.Single,System.Drawing.Drawing2D.FillMode)
  id: DrawClosedCurve(System.Drawing.Pen,System.Drawing.Point[],System.Single,System.Drawing.Drawing2D.FillMode)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawClosedCurve(Pen,Point[],Single,FillMode)
  nameWithType: Graphics.DrawClosedCurve(Pen,Point[],Single,FillMode)
  fullName: System.Drawing.Graphics.DrawClosedCurve(Pen,Point[],Single,FillMode)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "배열에 의해 정의 된 폐쇄형된 카디널 스플라인을 그립니다 <xref href=&quot;System.Drawing.Point&quot;> </xref> 지정된 된 장력을 사용 하 여 구조입니다."
  remarks: "이 메서드는 배열의 각 요소에 전달 하는 폐쇄형된 카디널 스플라인을 그립니다. 마지막 지점 첫 번째 요소와 일치 하지 않는 경우 추가 곡선 세그먼트 하 고 첫 번째을 닫으려면 마지막 지점에서 추가 됩니다.       점의 배열에&4; 개 이상 포함 되어야 <xref:System.Drawing.Point>구조.</xref:System.Drawing.Point>       `tension` 매개 변수는 스플라인의 모양을 결정 합니다. 하는 경우의 값은 `tension` 매개 변수는 0.0 f,이 메서드는 요소를 연결 하는 직선 세그먼트를 그립니다. 일반적으로 `tension` 매개 변수는 1.0 f 보다 작습니다. 1.0 f에 따른 값 이상한 결과 생성 합니다."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates red and green pens.  \n  \n-   Creates seven points to define the curve.  \n  \n-   Draws seven red straight lines between the seven points to form a polygon.  \n  \n-   Creates tension and fill mode settings.  \n  \n-   Draws a green closed curve through the seven points.  \n  \n The method uses a tension of 1.0 and sets the fill mode to `FillMode.Alternate`.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#17](~/add/codesnippet/cpp/cc1f225a-0c69-45b9-a725-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#17](~/add/codesnippet/csharp/cc1f225a-0c69-45b9-a725-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#17](~/add/codesnippet/visualbasic/cc1f225a-0c69-45b9-a725-_1.vb)]"
  syntax:
    content: public void DrawClosedCurve (System.Drawing.Pen pen, System.Drawing.Point[] points, float tension, System.Drawing.Drawing2D.FillMode fillmode);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>색, 너비 및 곡선의 높이 결정 하는."
    - id: points
      type: System.Drawing.Point[]
      description: "배열 <xref href=&quot;System.Drawing.Point&quot;> </xref> 스플라인을 정의 하는 구조입니다."
    - id: tension
      type: System.Single
      description: "곡선의 장력을 지정 하는 0.0 f 보다 크거나 값입니다."
    - id: fillmode
      type: System.Drawing.Drawing2D.FillMode
      description: "멤버는 <xref href=&quot;System.Drawing.Drawing2D.FillMode&quot;> </xref> 곡선이 채워지는 방법을 결정 하는 열거형입니다. 이 매개 변수는 필수 이지만 무시 됩니다."
  overload: System.Drawing.Graphics.DrawClosedCurve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>points</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Single,System.Drawing.Drawing2D.FillMode)
  id: DrawClosedCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Single,System.Drawing.Drawing2D.FillMode)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawClosedCurve(Pen,PointF[],Single,FillMode)
  nameWithType: Graphics.DrawClosedCurve(Pen,PointF[],Single,FillMode)
  fullName: System.Drawing.Graphics.DrawClosedCurve(Pen,PointF[],Single,FillMode)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "배열에 의해 정의 된 폐쇄형된 카디널 스플라인을 그립니다 <xref href=&quot;System.Drawing.PointF&quot;> </xref> 지정된 된 장력을 사용 하 여 구조입니다."
  remarks: "이 메서드는 배열의 각 요소에 전달 하는 폐쇄형된 카디널 스플라인을 그립니다. 마지막 지점 첫 번째 요소와 일치 하지 않는 경우 추가 곡선 세그먼트 하 고 첫 번째을 닫으려면 마지막 지점에서 추가 됩니다.       점의 배열에&4; 개 이상 포함 되어야 <xref:System.Drawing.PointF>구조.</xref:System.Drawing.PointF>       `tension` 매개 변수는 스플라인의 모양을 결정 합니다. 하는 경우의 값은 `tension` 매개 변수는 0.0 f,이 메서드는 요소를 연결 하는 직선 세그먼트를 그립니다. 일반적으로 `tension` 매개 변수는 1.0 f 보다 작습니다. 1.0 f에 따른 값 이상한 결과 생성 합니다."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates red and green pens.  \n  \n-   Creates seven points to define the curve.  \n  \n-   Draws seven red straight lines between the seven points to form a polygon.  \n  \n-   Creates tension and fill mode settings.  \n  \n-   Draws a green closed curve through the seven points.  \n  \n The method uses a tension of 1.0 and sets the fill mode to `FillMode.Alternate`.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#19](~/add/codesnippet/cpp/0472ed0c-ecfc-4bdd-b3f2-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#19](~/add/codesnippet/csharp/0472ed0c-ecfc-4bdd-b3f2-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#19](~/add/codesnippet/visualbasic/0472ed0c-ecfc-4bdd-b3f2-_1.vb)]"
  syntax:
    content: public void DrawClosedCurve (System.Drawing.Pen pen, System.Drawing.PointF[] points, float tension, System.Drawing.Drawing2D.FillMode fillmode);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>색, 너비 및 곡선의 높이 결정 하는."
    - id: points
      type: System.Drawing.PointF[]
      description: "배열 <xref href=&quot;System.Drawing.PointF&quot;> </xref> 스플라인을 정의 하는 구조입니다."
    - id: tension
      type: System.Single
      description: "곡선의 장력을 지정 하는 0.0 f 보다 크거나 값입니다."
    - id: fillmode
      type: System.Drawing.Drawing2D.FillMode
      description: "멤버는 <xref href=&quot;System.Drawing.Drawing2D.FillMode&quot;> </xref> 곡선이 채워지는 방법을 결정 하는 열거형입니다. 이 매개 변수가 필요 하지만 무시 됩니다."
  overload: System.Drawing.Graphics.DrawClosedCurve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>points</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[])
  id: DrawCurve(System.Drawing.Pen,System.Drawing.Point[])
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawCurve(Pen,Point[])
  nameWithType: Graphics.DrawCurve(Pen,Point[])
  fullName: System.Drawing.Graphics.DrawCurve(Pen,Point[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "지정된 된 배열 따라 카디널 스플라인을 그립니다 <xref href=&quot;System.Drawing.Point&quot;> </xref> 구조입니다."
  remarks: "이 메서드는 배열의 각 요소를 통해 전달 되는 카디널 스플라인을 그립니다.       점 배열에는 세 가지 이상을 포함 해야 <xref:System.Drawing.Point>는 곡선을 그릴 수 있도록 합니다.</xref:System.Drawing.Point>       이 메서드는 0.5의 기본 장력을 사용 합니다."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates red and green pens.  \n  \n-   Creates seven points to define a curve.  \n  \n-   Draws six red straight lines between the seven points to form an incomplete polygon.  \n  \n-   Draws an open green curve through the seven points.  \n  \n The method uses a default tension of 0.5.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#20](~/add/codesnippet/cpp/m-system.drawing.graphic_47_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#20](~/add/codesnippet/csharp/m-system.drawing.graphic_47_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#20](~/add/codesnippet/visualbasic/m-system.drawing.graphic_47_1.vb)]"
  syntax:
    content: public void DrawCurve (System.Drawing.Pen pen, System.Drawing.Point[] points);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>색, 너비 및 곡선의 높이 결정 하는."
    - id: points
      type: System.Drawing.Point[]
      description: "배열 <xref href=&quot;System.Drawing.Point&quot;> </xref> 스플라인을 정의 하는 구조입니다."
  overload: System.Drawing.Graphics.DrawCurve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>points</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[])
  id: DrawCurve(System.Drawing.Pen,System.Drawing.PointF[])
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawCurve(Pen,PointF[])
  nameWithType: Graphics.DrawCurve(Pen,PointF[])
  fullName: System.Drawing.Graphics.DrawCurve(Pen,PointF[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "지정된 된 배열 따라 카디널 스플라인을 그립니다 <xref href=&quot;System.Drawing.PointF&quot;> </xref> 구조입니다."
  remarks: "이 메서드는 배열의 각 요소를 통해 전달 되는 카디널 스플라인을 그립니다.       점 배열에는 세 가지 이상을 포함 해야 <xref:System.Drawing.PointF>는 곡선을 그릴 수 있도록 합니다.</xref:System.Drawing.PointF>       이 메서드는 0.5의 기본 장력을 사용 합니다."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates red and green pens.  \n  \n-   Creates seven points to define a curve.  \n  \n-   Draws six red straight lines between the seven points to form an incomplete polygon.  \n  \n-   Draws an open green curve through the seven points.  \n  \n The method uses a default tension of 0.5.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#23](~/add/codesnippet/cpp/m-system.drawing.graphic_20_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#23](~/add/codesnippet/csharp/m-system.drawing.graphic_20_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#23](~/add/codesnippet/visualbasic/m-system.drawing.graphic_20_1.vb)]"
  syntax:
    content: public void DrawCurve (System.Drawing.Pen pen, System.Drawing.PointF[] points);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>색, 너비 및 곡선의 스타일을 결정 하입니다."
    - id: points
      type: System.Drawing.PointF[]
      description: "배열 <xref href=&quot;System.Drawing.PointF&quot;> </xref> 스플라인을 정의 하는 구조입니다."
  overload: System.Drawing.Graphics.DrawCurve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>points</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Single)
  id: DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Single)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawCurve(Pen,Point[],Single)
  nameWithType: Graphics.DrawCurve(Pen,Point[],Single)
  fullName: System.Drawing.Graphics.DrawCurve(Pen,Point[],Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "지정된 된 배열 따라 카디널 스플라인을 그립니다 <xref href=&quot;System.Drawing.Point&quot;> </xref> 지정된 된 장력을 사용 하 여 구조입니다."
  remarks: "이 메서드는 배열의 각 요소를 통해 전달 되는 카디널 스플라인을 그립니다.       점 배열에는 세 가지 이상을 포함 해야 <xref:System.Drawing.Point>는 곡선을 그릴 수 있도록 합니다.</xref:System.Drawing.Point>       `tension` 매개 변수는 스플라인의 모양을 결정 합니다. 하는 경우의 값은 `tension` 매개 변수는 0.0 f,이 메서드는 요소를 연결 하는 직선 세그먼트를 그립니다. 일반적으로 `tension` 매개 변수는 1.0 f 보다 작습니다. 1.0 f에 따른 값 이상한 결과 생성 합니다."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates red and green pens.  \n  \n-   Creates seven points to define the curve.  \n  \n-   Draws six red straight lines between the seven points to form an incomplete polygon.  \n  \n-   Creates a tension setting.  \n  \n-   Draws an open green closed curve through the seven points.  \n  \n The method uses a tension of 1.0.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#22](~/add/codesnippet/cpp/6180a257-cc1e-4474-b752-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#22](~/add/codesnippet/csharp/6180a257-cc1e-4474-b752-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#22](~/add/codesnippet/visualbasic/6180a257-cc1e-4474-b752-_1.vb)]"
  syntax:
    content: public void DrawCurve (System.Drawing.Pen pen, System.Drawing.Point[] points, float tension);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>색, 너비 및 곡선의 스타일을 결정 하입니다."
    - id: points
      type: System.Drawing.Point[]
      description: "배열 <xref href=&quot;System.Drawing.Point&quot;> </xref> 스플라인을 정의 하는 구조입니다."
    - id: tension
      type: System.Single
      description: "곡선의 장력을 지정 하는 0.0 f 보다 크거나 값입니다."
  overload: System.Drawing.Graphics.DrawCurve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>points</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Single)
  id: DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Single)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawCurve(Pen,PointF[],Single)
  nameWithType: Graphics.DrawCurve(Pen,PointF[],Single)
  fullName: System.Drawing.Graphics.DrawCurve(Pen,PointF[],Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "지정된 된 배열 따라 카디널 스플라인을 그립니다 <xref href=&quot;System.Drawing.PointF&quot;> </xref> 지정된 된 장력을 사용 하 여 구조입니다."
  remarks: "이 메서드는 배열의 각 요소를 통해 전달 되는 카디널 스플라인을 그립니다.       점 배열에는 세 가지 이상을 포함 해야 <xref:System.Drawing.PointF>는 곡선을 그릴 수 있도록 합니다.</xref:System.Drawing.PointF>       `tension` 매개 변수는 스플라인의 모양을 결정 합니다. 하는 경우의 값은 `tension` 매개 변수는 0.0 f,이 메서드는 요소를 연결 하는 직선 세그먼트를 그립니다. 일반적으로 `tension` 매개 변수는 1.0 f 보다 작습니다. 1.0 f에 따른 값 이상한 결과 생성 합니다."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates red and green pens.  \n  \n-   Creates seven points to define the curve.  \n  \n-   Draws six red straight lines between the seven points to form an incomplete polygon.  \n  \n-   Creates a tension setting.  \n  \n-   Draws an open green closed curve through the seven points.  \n  \n The method uses a tension of 1.0.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#26](~/add/codesnippet/cpp/dfe0ec8e-90de-4e02-8192-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#26](~/add/codesnippet/csharp/dfe0ec8e-90de-4e02-8192-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#26](~/add/codesnippet/visualbasic/dfe0ec8e-90de-4e02-8192-_1.vb)]"
  syntax:
    content: public void DrawCurve (System.Drawing.Pen pen, System.Drawing.PointF[] points, float tension);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>색, 너비 및 곡선의 스타일을 결정 하입니다."
    - id: points
      type: System.Drawing.PointF[]
      description: "배열 <xref href=&quot;System.Drawing.PointF&quot;> </xref> 곡선을 정의 하는 점을 나타내는입니다."
    - id: tension
      type: System.Single
      description: "곡선의 장력을 지정 하는 0.0 f 보다 크거나 값입니다."
  overload: System.Drawing.Graphics.DrawCurve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>points</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32)
  id: DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawCurve(Pen,PointF[],Int32,Int32)
  nameWithType: Graphics.DrawCurve(Pen,PointF[],Int32,Int32)
  fullName: System.Drawing.Graphics.DrawCurve(Pen,PointF[],Int32,Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "지정된 된 배열 따라 카디널 스플라인을 그립니다 <xref href=&quot;System.Drawing.PointF&quot;> </xref> 구조입니다. 그리기는 배열의 시작에서 오프셋을 시작 합니다."
  remarks: "이 메서드는 배열의 각 요소를 통해 전달 되는 카디널 스플라인을 그립니다.       점 배열에는 세 가지 이상을 포함 해야 <xref:System.Drawing.PointF>는 곡선을 그릴 수 있도록 합니다.</xref:System.Drawing.PointF>       값은 `offset` 매개 변수 배열에서 건너뛸 요소 수를 지정 합니다. 생략된 된 요소 다음의 첫 번째 요소의 곡선의 시작점을 나타냅니다.       값은 `numberOfSegments` 매개 변수를 그리는 곡선의 시작점 후 세그먼트의 수를 지정 합니다. 값은 `numberOfSegments` 매개 변수는 1 이상 이어야 합니다. 값은 `offset` 매개 변수 값의 합는 `numberOfSegments` 매개 변수 배열에 있는 요소의 수보다 작을 이어야 합니다는 `points` 매개 변수입니다.       이 메서드는 0.5의 기본 장력을 사용 합니다."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates red and green pens.  \n  \n-   Creates seven points to define a curve.  \n  \n-   Draws six red straight lines between the seven points to form an incomplete polygon.  \n  \n-   Defines the starting point offset and number of segments.  \n  \n-   Draws an open green curve (starting at the third point) through the last five points.  \n  \n The method uses a default tension of 0.5.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#24](~/add/codesnippet/cpp/f4f8f79d-25e2-48b4-ba79-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#24](~/add/codesnippet/csharp/f4f8f79d-25e2-48b4-ba79-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#24](~/add/codesnippet/visualbasic/f4f8f79d-25e2-48b4-ba79-_1.vb)]"
  syntax:
    content: public void DrawCurve (System.Drawing.Pen pen, System.Drawing.PointF[] points, int offset, int numberOfSegments);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>색, 너비 및 곡선의 스타일을 결정 하입니다."
    - id: points
      type: System.Drawing.PointF[]
      description: "배열 <xref href=&quot;System.Drawing.PointF&quot;> </xref> 스플라인을 정의 하는 구조입니다."
    - id: offset
      type: System.Int32
      description: "배열의 첫 번째 요소에서&5; 만큼 오프셋 된 `points` 곡선의 시작점에 대 한 매개 변수입니다."
    - id: numberOfSegments
      type: System.Int32
      description: "곡선에 포함 하는 시작 지점 세그먼트의 수입니다."
  overload: System.Drawing.Graphics.DrawCurve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>points</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Int32,System.Int32,System.Single)
  id: DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Int32,System.Int32,System.Single)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawCurve(Pen,Point[],Int32,Int32,Single)
  nameWithType: Graphics.DrawCurve(Pen,Point[],Int32,Int32,Single)
  fullName: System.Drawing.Graphics.DrawCurve(Pen,Point[],Int32,Int32,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "지정된 된 배열 따라 카디널 스플라인을 그립니다 <xref href=&quot;System.Drawing.Point&quot;> </xref> 지정된 된 장력을 사용 하 여 구조입니다."
  remarks: "이 메서드는 배열의 각 요소를 통해 전달 되는 카디널 스플라인을 그립니다.       점 배열에는 세 가지 이상을 포함 해야 <xref:System.Drawing.Point>는 곡선을 그릴 수 있도록 합니다.</xref:System.Drawing.Point>       값은 `offset` 매개 변수 배열에서 건너뛸 요소 수를 지정 합니다. 생략된 된 요소 다음의 첫 번째 요소의 곡선의 시작점을 나타냅니다.       값은 `numberOfSegments` 매개 변수를 그리는 곡선의 시작점 후 세그먼트의 수를 지정 합니다. 값은 `numberOfSegments` 매개 변수는 1 이상 이어야 합니다. 값은 `offset` 매개 변수 값의 합는 `numberOfSegments` 매개 변수 배열에 있는 요소의 수보다 작을 이어야 합니다는 `points` 매개 변수입니다.       `tension` 매개 변수는 스플라인의 모양을 결정 합니다. 하는 경우의 값은 `tension` 매개 변수는 0.0 f,이 메서드는 요소를 연결 하는 직선 세그먼트를 그립니다. 일반적으로 `tension` 매개 변수는 1.0 f 보다 작습니다. 1.0 f에 따른 값 이상한 결과 생성 합니다."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates red and green pens.  \n  \n-   Creates seven points to define a curve.  \n  \n-   Draws six red straight lines between the seven points to form an incomplete polygon.  \n  \n-   Defines the starting point offset and number of segments.  \n  \n-   Defines the tension.  \n  \n-   Draws an open green curve (starting at the third point) through the last five points.  \n  \n The method sets the tension to 1.0.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#21](~/add/codesnippet/cpp/ed232e1e-25c0-4d3a-a280-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#21](~/add/codesnippet/csharp/ed232e1e-25c0-4d3a-a280-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#21](~/add/codesnippet/visualbasic/ed232e1e-25c0-4d3a-a280-_1.vb)]"
  syntax:
    content: public void DrawCurve (System.Drawing.Pen pen, System.Drawing.Point[] points, int offset, int numberOfSegments, float tension);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>색, 너비 및 곡선의 스타일을 결정 하입니다."
    - id: points
      type: System.Drawing.Point[]
      description: "배열 <xref href=&quot;System.Drawing.Point&quot;> </xref> 스플라인을 정의 하는 구조입니다."
    - id: offset
      type: System.Int32
      description: "배열의 첫 번째 요소에서&5; 만큼 오프셋 된 `points` 곡선의 시작점에 대 한 매개 변수입니다."
    - id: numberOfSegments
      type: System.Int32
      description: "곡선에 포함 하는 시작 지점 세그먼트의 수입니다."
    - id: tension
      type: System.Single
      description: "곡선의 장력을 지정 하는 0.0 f 보다 크거나 값입니다."
  overload: System.Drawing.Graphics.DrawCurve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>points</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32,System.Single)
  id: DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32,System.Single)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawCurve(Pen,PointF[],Int32,Int32,Single)
  nameWithType: Graphics.DrawCurve(Pen,PointF[],Int32,Int32,Single)
  fullName: System.Drawing.Graphics.DrawCurve(Pen,PointF[],Int32,Int32,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "지정된 된 배열 따라 카디널 스플라인을 그립니다 <xref href=&quot;System.Drawing.PointF&quot;> </xref> 지정된 된 장력을 사용 하 여 구조입니다. 그리기는 배열의 시작에서 오프셋을 시작 합니다."
  remarks: "이 메서드는 배열의 각 요소를 통해 전달 되는 카디널 스플라인을 그립니다.       점 배열에는 세 가지 이상을 포함 해야 <xref:System.Drawing.PointF>곡선을 그릴 수 있도록 합니다.</xref:System.Drawing.PointF>       값은 `offset` 매개 변수 배열에서 건너뛸 요소 수를 지정 합니다. 생략된 된 요소 다음의 첫 번째 요소의 곡선의 시작점을 나타냅니다.       값은 `numberOfSegments` 매개 변수를 그리는 곡선의 시작점 후 세그먼트의 수를 지정 합니다. 값은 `numberOfSegments` 매개 변수는 1 이상 이어야 합니다. 값은 `offset` 매개 변수 값의 합는 `numberOfSegments` 매개 변수 배열에 있는 요소의 수보다 작을 이어야 합니다는 `points` 매개 변수입니다.       `tension` 매개 변수는 스플라인의 모양을 결정 합니다. 하는 경우의 값은 `tension` 매개 변수는 0.0 f,이 메서드는 요소를 연결 하는 직선 세그먼트를 그립니다. 일반적으로 `tension` 매개 변수는 1.0 f 보다 작습니다. 1.0 f에 따른 값 이상한 결과 생성 합니다."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates red and green pens.  \n  \n-   Creates seven points to define a curve.  \n  \n-   Draws six red straight lines between the seven points to form an incomplete polygon.  \n  \n-   Defines the starting point offset and number of segments.  \n  \n-   Defines the tension.  \n  \n-   Draws an open green curve (starting at the third point) through the last five points.  \n  \n The method sets the tension to 1.0.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#25](~/add/codesnippet/cpp/e4652aea-fc05-4bd2-9300-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#25](~/add/codesnippet/csharp/e4652aea-fc05-4bd2-9300-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#25](~/add/codesnippet/visualbasic/e4652aea-fc05-4bd2-9300-_1.vb)]"
  syntax:
    content: public void DrawCurve (System.Drawing.Pen pen, System.Drawing.PointF[] points, int offset, int numberOfSegments, float tension);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>색, 너비 및 곡선의 스타일을 결정 하입니다."
    - id: points
      type: System.Drawing.PointF[]
      description: "배열 <xref href=&quot;System.Drawing.PointF&quot;> </xref> 스플라인을 정의 하는 구조입니다."
    - id: offset
      type: System.Int32
      description: "배열의 첫 번째 요소에서&5; 만큼 오프셋 된 `points` 곡선의 시작점에 대 한 매개 변수입니다."
    - id: numberOfSegments
      type: System.Int32
      description: "곡선에 포함 하는 시작 지점 세그먼트의 수입니다."
    - id: tension
      type: System.Single
      description: "곡선의 장력을 지정 하는 0.0 f 보다 크거나 값입니다."
  overload: System.Drawing.Graphics.DrawCurve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>points</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Drawing.Rectangle)
  id: DrawEllipse(System.Drawing.Pen,System.Drawing.Rectangle)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawEllipse(Pen,Rectangle)
  nameWithType: Graphics.DrawEllipse(Pen,Rectangle)
  fullName: System.Drawing.Graphics.DrawEllipse(Pen,Rectangle)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "경계 지정 된 타원을 그립니다 <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 구조입니다."
  remarks: "이 메서드는 지정 된 경계 사각형에 의해 정의 된 타원을 그립니다는 `rect` 매개 변수입니다."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a black pen.  \n  \n-   Creates a rectangle to bound an ellipse.  \n  \n-   Draws the ellipse to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#27](~/add/codesnippet/cpp/4155a034-950c-4182-bd85-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#27](~/add/codesnippet/csharp/4155a034-950c-4182-bd85-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#27](~/add/codesnippet/visualbasic/4155a034-950c-4182-bd85-_1.vb)]"
  syntax:
    content: public void DrawEllipse (System.Drawing.Pen pen, System.Drawing.Rectangle rect);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>색, 너비 및 타원의 스타일을 결정 하입니다."
    - id: rect
      type: System.Drawing.Rectangle
      description: "<xref href=&quot;System.Drawing.Rectangle&quot;></xref>타원의 경계를 정의 하는 구조입니다."
  overload: System.Drawing.Graphics.DrawEllipse*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Drawing.RectangleF)
  id: DrawEllipse(System.Drawing.Pen,System.Drawing.RectangleF)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawEllipse(Pen,RectangleF)
  nameWithType: Graphics.DrawEllipse(Pen,RectangleF)
  fullName: System.Drawing.Graphics.DrawEllipse(Pen,RectangleF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "경계에 정의 된 타원을 그립니다 <xref href=&quot;System.Drawing.RectangleF&quot;> </xref>합니다."
  remarks: "이 메서드는 지정 된 경계 사각형에 의해 정의 된 타원을 그립니다는 `rect` 매개 변수입니다."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a black pen.  \n  \n-   Creates a rectangle to bound an ellipse.  \n  \n-   Draws the ellipse to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#28](~/add/codesnippet/cpp/c36ab4a5-56d0-4c3b-ab8b-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#28](~/add/codesnippet/csharp/c36ab4a5-56d0-4c3b-ab8b-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#28](~/add/codesnippet/visualbasic/c36ab4a5-56d0-4c3b-ab8b-_1.vb)]"
  syntax:
    content: public void DrawEllipse (System.Drawing.Pen pen, System.Drawing.RectangleF rect);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>색, 너비 및 타원의 스타일을 결정 하입니다."
    - id: rect
      type: System.Drawing.RectangleF
      description: "<xref href=&quot;System.Drawing.RectangleF&quot;></xref>타원의 경계를 정의 하는 구조입니다."
  overload: System.Drawing.Graphics.DrawEllipse*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)
  id: DrawEllipse(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawEllipse(Pen,Int32,Int32,Int32,Int32)
  nameWithType: Graphics.DrawEllipse(Pen,Int32,Int32,Int32,Int32)
  fullName: System.Drawing.Graphics.DrawEllipse(Pen,Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "사각형, 높이, 너비의 왼쪽 위 모퉁이 대 한 좌표로 지정 된 경계 사각형에 의해 정의 되는 타원을 그립니다."
  remarks: "이 메서드는에 설명 된 경계 사각형에 의해 정의 되는 타원을 그립니다는 `x`, `y`, `width`, 및 `height` 매개 변수입니다."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a black pen.  \n  \n-   Creates the position and size of a rectangle to bound an ellipse.  \n  \n-   Draws the ellipse to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#29](~/add/codesnippet/cpp/72dbe1e1-2974-4511-8ef1-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#29](~/add/codesnippet/csharp/72dbe1e1-2974-4511-8ef1-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#29](~/add/codesnippet/visualbasic/72dbe1e1-2974-4511-8ef1-_1.vb)]"
  syntax:
    content: public void DrawEllipse (System.Drawing.Pen pen, int x, int y, int width, int height);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>색, 너비 및 타원의 스타일을 결정 하입니다."
    - id: x
      type: System.Int32
      description: "타원을 정의 하는 경계 사각형의 왼쪽 위 모퉁이의 x 좌표입니다."
    - id: y
      type: System.Int32
      description: "타원을 정의 하는 경계 사각형의 왼쪽 위 모퉁이의 y 좌표입니다."
    - id: width
      type: System.Int32
      description: "타원을 정의 하는 경계 사각형의 너비입니다."
    - id: height
      type: System.Int32
      description: "타원을 정의 하는 경계 사각형의 높이입니다."
  overload: System.Drawing.Graphics.DrawEllipse*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)
  id: DrawEllipse(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawEllipse(Pen,Single,Single,Single,Single)
  nameWithType: Graphics.DrawEllipse(Pen,Single,Single,Single,Single)
  fullName: System.Drawing.Graphics.DrawEllipse(Pen,Single,Single,Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "좌표, 높이, 너비의 쌍으로 지정 된 경계 사각형에 의해 정의 되는 타원을 그립니다."
  remarks: "이 메서드는에 설명 된 경계 사각형에 의해 정의 되는 타원을 그립니다는 `x`, `y`, `width`, 및 `height` 매개 변수입니다."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a black pen.  \n  \n-   Creates the position and size of a rectangle to bound an ellipse.  \n  \n-   Draws the ellipse to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#30](~/add/codesnippet/cpp/b63a980e-47de-4888-8a36-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#30](~/add/codesnippet/csharp/b63a980e-47de-4888-8a36-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#30](~/add/codesnippet/visualbasic/b63a980e-47de-4888-8a36-_1.vb)]"
  syntax:
    content: public void DrawEllipse (System.Drawing.Pen pen, float x, float y, float width, float height);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>색, 너비 및 타원의 스타일을 결정 하입니다."
    - id: x
      type: System.Single
      description: "타원을 정의 하는 경계 사각형의 왼쪽 위 모퉁이의 x 좌표입니다."
    - id: y
      type: System.Single
      description: "타원을 정의 하는 경계 사각형의 왼쪽 위 모퉁이의 y 좌표입니다."
    - id: width
      type: System.Single
      description: "타원을 정의 하는 경계 사각형의 너비입니다."
    - id: height
      type: System.Single
      description: "타원을 정의 하는 경계 사각형의 높이입니다."
  overload: System.Drawing.Graphics.DrawEllipse*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawIcon(System.Drawing.Icon,System.Drawing.Rectangle)
  id: DrawIcon(System.Drawing.Icon,System.Drawing.Rectangle)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawIcon(Icon,Rectangle)
  nameWithType: Graphics.DrawIcon(Icon,Rectangle)
  fullName: System.Drawing.Graphics.DrawIcon(Icon,Rectangle)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "지정 된 이미지를 그립니다 <xref href=&quot;System.Drawing.Icon&quot;> </xref> 으로 지정 된 영역 내에서 한 <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 구조입니다."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates an icon from a standard Windows icon file SampIcon.ico in the example folder.  \n  \n-   Creates a rectangle in which to draw the icon.  \n  \n-   Draws the icon to the screen.  \n  \n The position of the rectangle locates the icon on the screen, and the size of the rectangle determines the scaling of the drawn icon.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#31](~/add/codesnippet/cpp/m-system.drawing.graphic_44_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#31](~/add/codesnippet/csharp/m-system.drawing.graphic_44_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#31](~/add/codesnippet/visualbasic/m-system.drawing.graphic_44_1.vb)]"
  syntax:
    content: public void DrawIcon (System.Drawing.Icon icon, System.Drawing.Rectangle targetRect);
    parameters:
    - id: icon
      type: System.Drawing.Icon
      description: "<xref href=&quot;System.Drawing.Icon&quot;></xref>그립니다."
    - id: targetRect
      type: System.Drawing.Rectangle
      description: "<xref href=&quot;System.Drawing.Rectangle&quot;></xref>표시 화면에 결과로 나타날 이미지의 크기와 위치를 지정 하는 구조입니다. 에 포함 된 이미지는 `icon` 매개 변수는이 사각형 영역의 크기에 맞춰집니다."
  overload: System.Drawing.Graphics.DrawIcon*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>icon</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawIcon(System.Drawing.Icon,System.Int32,System.Int32)
  id: DrawIcon(System.Drawing.Icon,System.Int32,System.Int32)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawIcon(Icon,Int32,Int32)
  nameWithType: Graphics.DrawIcon(Icon,Int32,Int32)
  fullName: System.Drawing.Graphics.DrawIcon(Icon,Int32,Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "지정 된 이미지를 그립니다 <xref href=&quot;System.Drawing.Icon&quot;> </xref> 지정된 된 좌표에 있습니다."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates an icon from a standard Windows icon file SampIcon.ico in the example folder.  \n  \n-   Creates the coordinates of the upper-left corner at which to draw the icon.  \n  \n-   Draws the icon to the screen.  \n  \n The drawn icon is unscaled.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#32](~/add/codesnippet/cpp/eacdb009-057e-4fdc-abff-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#32](~/add/codesnippet/csharp/eacdb009-057e-4fdc-abff-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#32](~/add/codesnippet/visualbasic/eacdb009-057e-4fdc-abff-_1.vb)]"
  syntax:
    content: public void DrawIcon (System.Drawing.Icon icon, int x, int y);
    parameters:
    - id: icon
      type: System.Drawing.Icon
      description: "<xref href=&quot;System.Drawing.Icon&quot;></xref>그립니다."
    - id: x
      type: System.Int32
      description: "그려지는 이미지의 왼쪽 위 모퉁이의 x 좌표입니다."
    - id: y
      type: System.Int32
      description: "그려지는 이미지의 왼쪽 위 모퉁이의 y 좌표입니다."
  overload: System.Drawing.Graphics.DrawIcon*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>icon</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawIconUnstretched(System.Drawing.Icon,System.Drawing.Rectangle)
  id: DrawIconUnstretched(System.Drawing.Icon,System.Drawing.Rectangle)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawIconUnstretched(Icon,Rectangle)
  nameWithType: Graphics.DrawIconUnstretched(Icon,Rectangle)
  fullName: System.Drawing.Graphics.DrawIconUnstretched(Icon,Rectangle)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "지정 된 이미지를 그립니다 <xref href=&quot;System.Drawing.Icon&quot;> </xref> 이미지 크기 조정 없이 합니다."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates an icon from a standard Windows icon file SampIcon.ico in the example folder.  \n  \n-   Creates a rectangle in which to draw the icon.  \n  \n-   Draws the icon to the screen.  \n  \n The position of the rectangle locates the icon on the screen, and the drawn icon is unscaled and unclipped.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#33](~/add/codesnippet/cpp/3bd2037f-76e5-4588-a42d-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#33](~/add/codesnippet/csharp/3bd2037f-76e5-4588-a42d-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#33](~/add/codesnippet/visualbasic/3bd2037f-76e5-4588-a42d-_1.vb)]"
  syntax:
    content: public void DrawIconUnstretched (System.Drawing.Icon icon, System.Drawing.Rectangle targetRect);
    parameters:
    - id: icon
      type: System.Drawing.Icon
      description: "<xref href=&quot;System.Drawing.Icon&quot;></xref>그립니다."
    - id: targetRect
      type: System.Drawing.Rectangle
      description: "<xref href=&quot;System.Drawing.Rectangle&quot;></xref>결과 이미지의 크기와 위치를 지정 하는 구조입니다. 이미지는이 사각형에 맞게 크기가 조정 되지 됩니다 하지만 원래 크기를 유지 합니다. 이미지가 사각형 보다 크면 안에 맞추기 위해 잘립니다."
  overload: System.Drawing.Graphics.DrawIconUnstretched*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>icon</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point)
  id: DrawImage(System.Drawing.Image,System.Drawing.Point)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawImage(Image,Point)
  nameWithType: Graphics.DrawImage(Image,Point)
  fullName: System.Drawing.Graphics.DrawImage(Image,Point)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "지정 된 그립니다 <xref href=&quot;System.Drawing.Image&quot;> </xref>, 지정된 된 위치에 원래의 크기를 사용 하 여 합니다."
  remarks: "<xref:System.Drawing.Image>픽셀 너비에 대 한 값 및 가로 해상도 (인치당 도트 수)에 대 한 값을 저장 합니다.</xref:System.Drawing.Image> 이미지의 인치 단위로 측정 실제 너비를 픽셀 너비 수평 해상도로 나눈 값입니다. 예를 들어 216 픽셀 너비와 1 인치는 72 점의 수평 해상도 사용 하 여 이미지 3 인치의 실제 너비를 있습니다. 이와 유사 픽셀 높이 물리적 높이에 적용 됩니다.       이 메서드는 실제 크기를 사용 하 여 이미지를 디스플레이 장치의 해상도 (인치당 도트 수)에 관계 없이 인치 단위로 정확한 크기를 가집니다 이미지를 그립니다. 예를 들어 216 픽셀 너비와 72 인치당 도트 수의 수평 해상도 이미지에 있다고 가정 합니다. 렌더링된 된 이미지의 픽셀 너비 (216/72) 됩니다 96dpi 해상도 장치에서 해당 이미지를 그리도록이 메서드를 호출 하는 경우 * 96 = 288 합니다."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates an image from a JPEG file SampImag.jpg in the folder of the example.  \n  \n-   Creates a point at which to draw the upper-left corner of the image.  \n  \n-   Draws the unscaled image to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#34](~/add/codesnippet/cpp/m-system.drawing.graphic_18_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#34](~/add/codesnippet/csharp/m-system.drawing.graphic_18_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#34](~/add/codesnippet/visualbasic/m-system.drawing.graphic_18_1.vb)]"
  syntax:
    content: public void DrawImage (System.Drawing.Image image, System.Drawing.Point point);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;></xref>그립니다."
    - id: point
      type: System.Drawing.Point
      description: "<xref href=&quot;System.Drawing.Point&quot;></xref>그려지는 이미지의 왼쪽 위 모서리의 위치를 나타내는 구조입니다."
  overload: System.Drawing.Graphics.DrawImage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>image</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[])
  id: DrawImage(System.Drawing.Image,System.Drawing.Point[])
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawImage(Image,Point[])
  nameWithType: Graphics.DrawImage(Image,Point[])
  fullName: System.Drawing.Graphics.DrawImage(Image,Point[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "지정 된 그립니다 <xref href=&quot;System.Drawing.Image&quot;> </xref> 지정 된 모양과 크기와 지정된 된 위치에 있습니다."
  remarks: "`destPoints` 매개 변수 사변형의 세 점을 지정 합니다. 세 개의 <xref:System.Drawing.Point>구조 평행 사변형의 왼쪽 위, 오른쪽 위 및 왼쪽 아래 모퉁이 나타냅니다.</xref:System.Drawing.Point> 네 번째 지점 평행 사변형을 구성 하기 위해 처음&3; 개에서 점으로 추정 합니다.       에 의해 나타나는 이미지는 `image` 매개 변수 크기가 조정 되 고 지정 된 평행 사변형의 모양에 맞추기 위해는 `destPoints` 매개 변수입니다."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates an image from a JPEG file SampImag.jpg in the folder of the example.  \n  \n-   Creates points that define a parallelogram in which to draw the image.  \n  \n-   Draws the image to the screen.  \n  \n The position of the parallelogram locates the image on the screen, and the size of the original image and the size and shape of the parallelogram determines the scaling and shearing of the drawn image.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#35](~/add/codesnippet/cpp/m-system.drawing.graphic_42_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#35](~/add/codesnippet/csharp/m-system.drawing.graphic_42_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#35](~/add/codesnippet/visualbasic/m-system.drawing.graphic_42_1.vb)]"
  syntax:
    content: public void DrawImage (System.Drawing.Image image, System.Drawing.Point[] destPoints);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;></xref>그립니다."
    - id: destPoints
      type: System.Drawing.Point[]
      description: "세 개인 배열 <xref href=&quot;System.Drawing.Point&quot;> </xref> 평행 사변형을 정의 하는 구조입니다."
  overload: System.Drawing.Graphics.DrawImage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>image</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF)
  id: DrawImage(System.Drawing.Image,System.Drawing.PointF)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawImage(Image,PointF)
  nameWithType: Graphics.DrawImage(Image,PointF)
  fullName: System.Drawing.Graphics.DrawImage(Image,PointF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "지정 된 그립니다 <xref href=&quot;System.Drawing.Image&quot;> </xref>, 지정된 된 위치에 원래의 크기를 사용 하 여 합니다."
  remarks: "<xref:System.Drawing.Image>픽셀 너비에 대 한 값 및 가로 해상도 (인치당 도트 수)에 대 한 값을 저장 합니다.</xref:System.Drawing.Image> 이미지의 인치 단위로 측정 실제 너비를 픽셀 너비 수평 해상도로 나눈 값입니다. 예를 들어 216 픽셀 너비와 1 인치는 72 점의 수평 해상도 사용 하 여 이미지 3 인치의 실제 너비를 있습니다. 이와 유사 픽셀 높이 물리적 높이에 적용 됩니다.       이 메서드는 실제 크기를 사용 하 여 이미지를 디스플레이 장치의 해상도 (인치당 도트 수)에 관계 없이 인치 단위로 정확한 크기를 가집니다 이미지를 그립니다. 예를 들어 216 픽셀 너비와 72 인치당 도트 수의 수평 해상도 이미지에 있다고 가정 합니다. 렌더링된 된 이미지의 픽셀 너비 (216/72) 됩니다 96dpi 해상도 장치에서 해당 이미지를 그리도록이 메서드를 호출 하는 경우 * 96 = 288 합니다."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates an image from a JPEG file SampImag.jpg in the folder of the example.  \n  \n-   Creates a point at which to draw the upper-left corner of the image.  \n  \n-   Draws the unscaled image to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#40](~/add/codesnippet/cpp/m-system.drawing.graphic_19_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#40](~/add/codesnippet/csharp/m-system.drawing.graphic_19_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#40](~/add/codesnippet/visualbasic/m-system.drawing.graphic_19_1.vb)]"
  syntax:
    content: public void DrawImage (System.Drawing.Image image, System.Drawing.PointF point);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;></xref>그립니다."
    - id: point
      type: System.Drawing.PointF
      description: "<xref href=&quot;System.Drawing.PointF&quot;></xref>그려지는 이미지의 왼쪽 위 모퉁이 나타내는 구조입니다."
  overload: System.Drawing.Graphics.DrawImage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>image</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[])
  id: DrawImage(System.Drawing.Image,System.Drawing.PointF[])
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawImage(Image,PointF[])
  nameWithType: Graphics.DrawImage(Image,PointF[])
  fullName: System.Drawing.Graphics.DrawImage(Image,PointF[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "지정 된 그립니다 <xref href=&quot;System.Drawing.Image&quot;> </xref> 지정 된 모양과 크기와 지정된 된 위치에 있습니다."
  remarks: "`destPoints` 매개 변수 사변형의 세 점을 지정 합니다. 세 개의 <xref:System.Drawing.PointF>구조 평행 사변형의 왼쪽 위, 오른쪽 위 및 왼쪽 아래 모퉁이 나타냅니다.</xref:System.Drawing.PointF> 네 번째 지점 평행 사변형을 구성 하기 위해 처음&3; 개에서 점으로 추정 합니다.       에 의해 나타나는 이미지는 `image` 개체 크기가 조정 되 고 지정 된 평행 사변형의 모양에 맞추기 위해는 `destPoints` 매개 변수입니다."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates an image from a JPEG file SampImag.jpg in the folder of the example.  \n  \n-   Creates points that define a parallelogram in which to draw the image.  \n  \n-   Draws the image to the screen.  \n  \n The position of the parallelogram locates the image on the screen, and the size of the original image and the size and shape of the parallelogram determines the scaling and shearing of the drawn image.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#41](~/add/codesnippet/cpp/d1011ba3-7a66-459f-8c2e-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#41](~/add/codesnippet/csharp/d1011ba3-7a66-459f-8c2e-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#41](~/add/codesnippet/visualbasic/d1011ba3-7a66-459f-8c2e-_1.vb)]"
  syntax:
    content: public void DrawImage (System.Drawing.Image image, System.Drawing.PointF[] destPoints);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;></xref>그립니다."
    - id: destPoints
      type: System.Drawing.PointF[]
      description: "세 개인 배열 <xref href=&quot;System.Drawing.PointF&quot;> </xref> 평행 사변형을 정의 하는 구조입니다."
  overload: System.Drawing.Graphics.DrawImage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>image</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle)
  id: DrawImage(System.Drawing.Image,System.Drawing.Rectangle)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawImage(Image,Rectangle)
  nameWithType: Graphics.DrawImage(Image,Rectangle)
  fullName: System.Drawing.Graphics.DrawImage(Image,Rectangle)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "지정 된 그립니다 <xref href=&quot;System.Drawing.Image&quot;> </xref> 지정된 된 크기와 지정된 된 위치에 있습니다."
  remarks: "에 의해 나타나는 이미지는 `image` 개체의 차원과 크기가 조정 되는 `rect` 사각형입니다."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates an image from a JPEG file SampImag.jpg in the folder of the example.  \n  \n-   Creates a rectangle in which to draw the image.  \n  \n-   Draws the image to the screen.  \n  \n The position of the rectangle locates the image on the screen, and the size of the original image and the size of the rectangle determines the scaling of the drawn image.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#46](~/add/codesnippet/cpp/b2a72c58-befd-40af-b6a8-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#46](~/add/codesnippet/csharp/b2a72c58-befd-40af-b6a8-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#46](~/add/codesnippet/visualbasic/b2a72c58-befd-40af-b6a8-_1.vb)]"
  syntax:
    content: public void DrawImage (System.Drawing.Image image, System.Drawing.Rectangle rect);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;></xref>그립니다."
    - id: rect
      type: System.Drawing.Rectangle
      description: "<xref href=&quot;System.Drawing.Rectangle&quot;></xref>그려지는 이미지의 크기와 위치를 지정 하는 구조입니다."
  overload: System.Drawing.Graphics.DrawImage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>image</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.RectangleF)
  id: DrawImage(System.Drawing.Image,System.Drawing.RectangleF)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawImage(Image,RectangleF)
  nameWithType: Graphics.DrawImage(Image,RectangleF)
  fullName: System.Drawing.Graphics.DrawImage(Image,RectangleF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "지정 된 그립니다 <xref href=&quot;System.Drawing.Image&quot;> </xref> 지정된 된 크기와 지정된 된 위치에 있습니다."
  remarks: "에 의해 나타나는 이미지는 `image` 개체의 차원과 크기가 조정 되는 `rect` 사각형입니다."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates an image from a JPEG file SampImag.jpg in the folder of the example.  \n  \n-   Creates a rectangle in which to draw the image.  \n  \n-   Draws the image to the screen.  \n  \n The position of the rectangle locates the image on the screen, and the original size of the image and the size of the rectangle determines the scaling of the drawn image.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#56](~/add/codesnippet/cpp/6f0c41d2-6855-4f5b-b775-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#56](~/add/codesnippet/csharp/6f0c41d2-6855-4f5b-b775-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#56](~/add/codesnippet/visualbasic/6f0c41d2-6855-4f5b-b775-_1.vb)]"
  syntax:
    content: public void DrawImage (System.Drawing.Image image, System.Drawing.RectangleF rect);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;></xref>그립니다."
    - id: rect
      type: System.Drawing.RectangleF
      description: "<xref href=&quot;System.Drawing.RectangleF&quot;></xref>그려지는 이미지의 크기와 위치를 지정 하는 구조입니다."
  overload: System.Drawing.Graphics.DrawImage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>image</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32)
  id: DrawImage(System.Drawing.Image,System.Int32,System.Int32)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawImage(Image,Int32,Int32)
  nameWithType: Graphics.DrawImage(Image,Int32,Int32)
  fullName: System.Drawing.Graphics.DrawImage(Image,Int32,Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "좌표 쌍으로 지정 된 위치에 원래의 크기를 사용 하 여 지정된 된 이미지를 그립니다."
  remarks: "<xref:System.Drawing.Image>픽셀 너비에 대 한 값 및 가로 해상도 (인치당 도트 수)에 대 한 값을 저장 합니다.</xref:System.Drawing.Image> 이미지의 인치 단위로 측정 실제 너비를 픽셀 너비 수평 해상도로 나눈 값입니다. 예를 들어 216 픽셀 너비와 1 인치는 72 점의 수평 해상도 사용 하 여 이미지 3 인치의 실제 너비를 있습니다. 이와 유사 픽셀 높이 물리적 높이에 적용 됩니다.       DrawImage 메서드 이미지 해상도 (인치당 도트 수) 디스플레이 장치에 관계 없이 인치 정확한 크기를 가집니다는 실제 크기를 사용 하 여 이미지를 그립니다. 예를 들어 216 픽셀 너비와 72 인치당 도트 수의 수평 해상도 이미지에 있다고 가정 합니다. 렌더링된 된 이미지의 픽셀 너비 (216/72) 됩니다 DrawImage 96dpi 해상도 장치에 해당 이미지를 그리기를 호출 하는 경우 * 96 = 288 합니다."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates an image from a JPEG file SampImag.jpg in the folder of the example SampImag.jpg in the folder of the example.  \n  \n-   Creates the coordinates of a point at which to draw the upper-left corner of the image.  \n  \n-   Draws the unscaled image.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#58](~/add/codesnippet/cpp/ab9189bb-a438-4f96-9c99-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#58](~/add/codesnippet/csharp/ab9189bb-a438-4f96-9c99-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#58](~/add/codesnippet/visualbasic/ab9189bb-a438-4f96-9c99-_1.vb)]"
  syntax:
    content: public void DrawImage (System.Drawing.Image image, int x, int y);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;></xref>그립니다."
    - id: x
      type: System.Int32
      description: "그려지는 이미지의 왼쪽 위 모퉁이의 x 좌표입니다."
    - id: y
      type: System.Int32
      description: "그려지는 이미지의 왼쪽 위 모퉁이의 y 좌표입니다."
  overload: System.Drawing.Graphics.DrawImage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>image</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single)
  id: DrawImage(System.Drawing.Image,System.Single,System.Single)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawImage(Image,Single,Single)
  nameWithType: Graphics.DrawImage(Image,Single,Single)
  fullName: System.Drawing.Graphics.DrawImage(Image,Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "지정 된 그립니다 <xref href=&quot;System.Drawing.Image&quot;> </xref>, 지정된 된 위치에 원래의 크기를 사용 하 여 합니다."
  remarks: "<xref:System.Drawing.Image>픽셀 너비에 대 한 값 및 가로 해상도 (인치당 도트 수)에 대 한 값을 저장 합니다.</xref:System.Drawing.Image> 이미지의 인치 단위로 측정 실제 너비를 픽셀 너비 수평 해상도로 나눈 값입니다. 예를 들어 216 픽셀 너비와 1 인치는 72 점의 수평 해상도 사용 하 여 이미지 3 인치의 실제 너비를 있습니다. 이와 유사 픽셀 높이 물리적 높이에 적용 됩니다.       이 메서드는 실제 크기를 사용 하 여 이미지를 디스플레이 장치의 해상도 (인치당 도트 수)에 관계 없이 인치 단위로 정확한 크기를 가집니다 이미지를 그립니다. 예를 들어 216 픽셀 너비와 72 인치당 도트 수의 수평 해상도 이미지에 있다고 가정 합니다. 렌더링된 된 이미지의 픽셀 너비 (216/72) 됩니다 96dpi 해상도 장치에서 해당 이미지를 그리도록이 메서드를 호출 하는 경우 * 96 = 288 합니다."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates an image from a JPEG file SampImag.jpg in the folder of the example.  \n  \n-   Creates the coordinates of a point at which to draw the upper-left corner of the image.  \n  \n-   Draws the unscaled image to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#61](~/add/codesnippet/cpp/84c935d5-87a0-43c2-8402-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#61](~/add/codesnippet/csharp/84c935d5-87a0-43c2-8402-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#61](~/add/codesnippet/visualbasic/84c935d5-87a0-43c2-8402-_1.vb)]"
  syntax:
    content: public void DrawImage (System.Drawing.Image image, float x, float y);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;></xref>그립니다."
    - id: x
      type: System.Single
      description: "그려지는 이미지의 왼쪽 위 모퉁이의 x 좌표입니다."
    - id: y
      type: System.Single
      description: "그려지는 이미지의 왼쪽 위 모퉁이의 y 좌표입니다."
  overload: System.Drawing.Graphics.DrawImage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>image</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit)
  id: DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawImage(Image,Point[],Rectangle,GraphicsUnit)
  nameWithType: Graphics.DrawImage(Image,Point[],Rectangle,GraphicsUnit)
  fullName: System.Drawing.Graphics.DrawImage(Image,Point[],Rectangle,GraphicsUnit)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "지정 된을의 지정된 된 부분을 그립니다 <xref href=&quot;System.Drawing.Image&quot;> </xref> 지정된 된 크기와 지정된 된 위치에 있습니다."
  remarks: "`destPoints` 매개 변수 사변형의 세 점을 지정 합니다. 세 개의 <xref:System.Drawing.Point>구조 평행 사변형의 왼쪽 위, 오른쪽 위 및 왼쪽 아래 모퉁이 나타냅니다.</xref:System.Drawing.Point> 네 번째 지점 평행 사변형을 구성 하기 위해 처음&3; 개에서 점으로 추정 합니다.       `srcRect` 의 사각형 부분을 지정 하는 매개 변수는 `image` 그릴 개체입니다. 이 부분은 크기가 조정 되 고 지정 된 평행 사변형 안에 맞추기 위해는 `destPoints` 매개 변수입니다."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates an image from a JPEG file SampImag.jpg in the folder of the example.  \n  \n-   Creates points that define a parallelogram in which to draw the image.  \n  \n-   Creates a rectangle to select the portion of the image to draw.  \n  \n-   Sets the graphics drawing unit to pixel.  \n  \n-   Draws the image to the screen.  \n  \n The position of the parallelogram locates the image on the screen, and the size of the rectangle and the size and shape of the parallelogram determines the scaling and shearing of the drawn image.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#36](~/add/codesnippet/cpp/6dd53b7b-1b38-4016-b9e0-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#36](~/add/codesnippet/csharp/6dd53b7b-1b38-4016-b9e0-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#36](~/add/codesnippet/visualbasic/6dd53b7b-1b38-4016-b9e0-_1.vb)]"
  syntax:
    content: public void DrawImage (System.Drawing.Image image, System.Drawing.Point[] destPoints, System.Drawing.Rectangle srcRect, System.Drawing.GraphicsUnit srcUnit);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;></xref>그립니다."
    - id: destPoints
      type: System.Drawing.Point[]
      description: "세 개인 배열 <xref href=&quot;System.Drawing.Point&quot;> </xref> 평행 사변형을 정의 하는 구조입니다."
    - id: srcRect
      type: System.Drawing.Rectangle
      description: "<xref href=&quot;System.Drawing.Rectangle&quot;></xref>부분을 지정 하는 구조는 `image` 그릴 개체입니다."
    - id: srcUnit
      type: System.Drawing.GraphicsUnit
      description: "멤버는 <xref href=&quot;System.Drawing.GraphicsUnit&quot;> </xref> 사용 되는 측정 단위를 지정 하는 열거형은 `srcRect` 매개 변수입니다."
  overload: System.Drawing.Graphics.DrawImage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>image</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit)
  id: DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawImage(Image,PointF[],RectangleF,GraphicsUnit)
  nameWithType: Graphics.DrawImage(Image,PointF[],RectangleF,GraphicsUnit)
  fullName: System.Drawing.Graphics.DrawImage(Image,PointF[],RectangleF,GraphicsUnit)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "지정 된을의 지정된 된 부분을 그립니다 <xref href=&quot;System.Drawing.Image&quot;> </xref> 지정된 된 크기와 지정된 된 위치에 있습니다."
  remarks: "`destPoints` 매개 변수 사변형의 세 점을 지정 합니다. 세 개의 <xref:System.Drawing.PointF>구조 평행 사변형의 왼쪽 위, 오른쪽 위 및 왼쪽 아래 모퉁이 나타냅니다.</xref:System.Drawing.PointF> 네 번째 지점 평행 사변형을 구성 하기 위해 처음&3; 개에서 점으로 추정 합니다.       `srcRect` 의 사각형 부분을 지정 하는 매개 변수는 `image` 그릴 개체입니다. 이 부분은 크기가 조정 되 고 지정 된 평행 사변형 안에 맞추기 위해는 `destPoints` 매개 변수입니다."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates an image from a JPEG file SampImag.jpg in the folder of the example.  \n  \n-   Creates points that define a destination parallelogram in which to draw the image.  \n  \n-   Creates a source rectangle from which to extract a portion of the image.  \n  \n-   Sets the unit of measure of the source rectangle to pixels.  \n  \n-   Draws the image to the screen.  \n  \n The position of the destination parallelogram locates the image on the screen, the size of the source rectangle and the size and shape of the destination parallelogram determines the scaling and shearing of the drawn image, and the size of the rectangle determines what portion of the original image is drawn to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#42](~/add/codesnippet/cpp/bc8f7cbd-f1b7-4dce-b971-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#42](~/add/codesnippet/csharp/bc8f7cbd-f1b7-4dce-b971-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#42](~/add/codesnippet/visualbasic/bc8f7cbd-f1b7-4dce-b971-_1.vb)]"
  syntax:
    content: public void DrawImage (System.Drawing.Image image, System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect, System.Drawing.GraphicsUnit srcUnit);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;></xref>그립니다."
    - id: destPoints
      type: System.Drawing.PointF[]
      description: "세 개인 배열 <xref href=&quot;System.Drawing.PointF&quot;> </xref> 평행 사변형을 정의 하는 구조입니다."
    - id: srcRect
      type: System.Drawing.RectangleF
      description: "<xref href=&quot;System.Drawing.RectangleF&quot;></xref>부분을 지정 하는 구조는 `image` 그릴 개체입니다."
    - id: srcUnit
      type: System.Drawing.GraphicsUnit
      description: "멤버는 <xref href=&quot;System.Drawing.GraphicsUnit&quot;> </xref> 사용 되는 측정 단위를 지정 하는 열거형은 `srcRect` 매개 변수입니다."
  overload: System.Drawing.Graphics.DrawImage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>image</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)
  id: DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawImage(Image,Rectangle,Rectangle,GraphicsUnit)
  nameWithType: Graphics.DrawImage(Image,Rectangle,Rectangle,GraphicsUnit)
  fullName: System.Drawing.Graphics.DrawImage(Image,Rectangle,Rectangle,GraphicsUnit)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "지정 된을의 지정된 된 부분을 그립니다 <xref href=&quot;System.Drawing.Image&quot;> </xref> 지정된 된 크기와 지정된 된 위치에 있습니다."
  remarks: "`srcRect` 의 사각형 부분을 지정 하는 매개 변수는 `image` 그릴 개체입니다. 이 부분으로 지정 된 사각형 내에 맞게 크기가 조정 되는 `destRect` 매개 변수입니다."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates an image from a JPEG file SampImag.jpg in the folder of the example.  \n  \n-   Creates a destination rectangle in which to draw the image.  \n  \n-   Creates a source rectangle from which to extract a portion of the image.  \n  \n-   Sets the unit of measure of the source rectangle to pixels.  \n  \n-   Draws the image to the screen.  \n  \n The position of the destination rectangle locates the image on the screen, the sizes of the source and destination rectangles determine the scaling of the drawn image, and the size of the source rectangle determines what portion of the original image is drawn to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#47](~/add/codesnippet/cpp/c5d7b66c-1518-48ae-83a4-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#47](~/add/codesnippet/csharp/c5d7b66c-1518-48ae-83a4-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#47](~/add/codesnippet/visualbasic/c5d7b66c-1518-48ae-83a4-_1.vb)]"
  syntax:
    content: public void DrawImage (System.Drawing.Image image, System.Drawing.Rectangle destRect, System.Drawing.Rectangle srcRect, System.Drawing.GraphicsUnit srcUnit);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;></xref>그립니다."
    - id: destRect
      type: System.Drawing.Rectangle
      description: "<xref href=&quot;System.Drawing.Rectangle&quot;></xref>그려지는 이미지의 크기와 위치를 지정 하는 구조입니다. 이미지는 사각형에 맞게 크기가 조정 됩니다."
    - id: srcRect
      type: System.Drawing.Rectangle
      description: "<xref href=&quot;System.Drawing.Rectangle&quot;></xref>부분을 지정 하는 구조는 `image` 그릴 개체입니다."
    - id: srcUnit
      type: System.Drawing.GraphicsUnit
      description: "멤버는 <xref href=&quot;System.Drawing.GraphicsUnit&quot;> </xref> 사용 되는 측정 단위를 지정 하는 열거형은 `srcRect` 매개 변수입니다."
  overload: System.Drawing.Graphics.DrawImage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>image</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)
  id: DrawImage(System.Drawing.Image,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawImage(Image,RectangleF,RectangleF,GraphicsUnit)
  nameWithType: Graphics.DrawImage(Image,RectangleF,RectangleF,GraphicsUnit)
  fullName: System.Drawing.Graphics.DrawImage(Image,RectangleF,RectangleF,GraphicsUnit)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "지정 된을의 지정된 된 부분을 그립니다 <xref href=&quot;System.Drawing.Image&quot;> </xref> 지정된 된 크기와 지정된 된 위치에 있습니다."
  remarks: "`srcRect` 의 사각형 부분을 지정 하는 매개 변수는 `image` 그릴 개체입니다. 이 부분으로 지정 된 사각형 내에 맞게 크기가 조정 되는 `destRect` 매개 변수입니다."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates an image from a JPEG file SampImag.jpg in the folder of the example.  \n  \n-   Creates a destination rectangle in which to draw the image.  \n  \n-   Creates a source rectangle from which to extract a portion of the image.  \n  \n-   Sets the unit of measure of the source rectangle to pixels.  \n  \n-   Draws the image to the screen.  \n  \n The position of the destination rectangle locates the image on the screen, the sizes of the source and destination rectangles determine the scaling of the drawn image, and the size of the source rectangle determines what portion of the original image is drawn to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#57](~/add/codesnippet/cpp/d16e9371-9711-4277-9719-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#57](~/add/codesnippet/csharp/d16e9371-9711-4277-9719-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#57](~/add/codesnippet/visualbasic/d16e9371-9711-4277-9719-_1.vb)]"
  syntax:
    content: public void DrawImage (System.Drawing.Image image, System.Drawing.RectangleF destRect, System.Drawing.RectangleF srcRect, System.Drawing.GraphicsUnit srcUnit);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;></xref>그립니다."
    - id: destRect
      type: System.Drawing.RectangleF
      description: "<xref href=&quot;System.Drawing.RectangleF&quot;></xref>그려지는 이미지의 크기와 위치를 지정 하는 구조입니다. 이미지는 사각형에 맞게 크기가 조정 됩니다."
    - id: srcRect
      type: System.Drawing.RectangleF
      description: "<xref href=&quot;System.Drawing.RectangleF&quot;></xref>부분을 지정 하는 구조는 `image` 그릴 개체입니다."
    - id: srcUnit
      type: System.Drawing.GraphicsUnit
      description: "멤버는 <xref href=&quot;System.Drawing.GraphicsUnit&quot;> </xref> 사용 되는 측정 단위를 지정 하는 열거형은 `srcRect` 매개 변수입니다."
  overload: System.Drawing.Graphics.DrawImage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>image</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)
  id: DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawImage(Image,Point[],Rectangle,GraphicsUnit,ImageAttributes)
  nameWithType: Graphics.DrawImage(Image,Point[],Rectangle,GraphicsUnit,ImageAttributes)
  fullName: System.Drawing.Graphics.DrawImage(Image,Point[],Rectangle,GraphicsUnit,ImageAttributes)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "지정 된을의 지정된 된 부분을 그립니다 <xref href=&quot;System.Drawing.Image&quot;> </xref> 지정된 된 위치에 있습니다."
  remarks: "`destPoints` 매개 변수 사변형의 세 점을 지정 합니다. 세 개의 <xref:System.Drawing.Point>구조 평행 사변형의 왼쪽 위, 오른쪽 위 및 왼쪽 아래 모퉁이 나타냅니다.</xref:System.Drawing.Point> 네 번째 지점 평행 사변형을 구성 하기 위해 처음&3; 개에서 점으로 추정 합니다.       `srcRect` 의 사각형 부분을 지정 하는 매개 변수는`image` 그릴 개체입니다. 이 부분은 크기가 조정 되 고 지정 된 평행 사변형 안에 맞추기 위해는 `destPoints` 매개 변수입니다."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates an image from a JPEG file SampImag.jpg in the folder of the example.  \n  \n-   Creates points that define a parallelogram in which to draw the image.  \n  \n-   Creates a rectangle to select the portion of the image to draw.  \n  \n-   Sets the graphics drawing unit to pixel.  \n  \n-   Draws the original image to the screen.  \n  \n-   Creates an additional parallelogram in which to draw an adjusted image.  \n  \n-   Creates and sets the attributes of the adjusted image to have a larger-than-usual gamma value.  \n  \n-   Draws the adjusted image to the screen.  \n  \n For the original, unadjusted parallelogram, the position locates the image on the screen, and the size of the rectangle and the size and shape of the parallelogram determines the scaling and shearing of the drawn image.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#37](~/add/codesnippet/cpp/fd322d76-6837-44d1-9e35-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#37](~/add/codesnippet/csharp/fd322d76-6837-44d1-9e35-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#37](~/add/codesnippet/visualbasic/fd322d76-6837-44d1-9e35-_1.vb)]"
  syntax:
    content: public void DrawImage (System.Drawing.Image image, System.Drawing.Point[] destPoints, System.Drawing.Rectangle srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Imaging.ImageAttributes imageAttr);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;></xref>그립니다."
    - id: destPoints
      type: System.Drawing.Point[]
      description: "세 개인 배열 <xref href=&quot;System.Drawing.Point&quot;> </xref> 평행 사변형을 정의 하는 구조입니다."
    - id: srcRect
      type: System.Drawing.Rectangle
      description: "<xref href=&quot;System.Drawing.Rectangle&quot;></xref>부분을 지정 하는 구조는 `image` 그릴 개체입니다."
    - id: srcUnit
      type: System.Drawing.GraphicsUnit
      description: "멤버는 <xref href=&quot;System.Drawing.GraphicsUnit&quot;> </xref> 사용 되는 측정 단위를 지정 하는 열거형은 `srcRect` 매개 변수입니다."
    - id: imageAttr
      type: System.Drawing.Imaging.ImageAttributes
      description: "<xref href=&quot;System.Drawing.Imaging.ImageAttributes&quot;></xref>에 대 한 다시 칠하기와 감마 정보를 지정 하는 `image` 개체입니다."
  overload: System.Drawing.Graphics.DrawImage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>image</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)
  id: DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawImage(Image,PointF[],RectangleF,GraphicsUnit,ImageAttributes)
  nameWithType: Graphics.DrawImage(Image,PointF[],RectangleF,GraphicsUnit,ImageAttributes)
  fullName: System.Drawing.Graphics.DrawImage(Image,PointF[],RectangleF,GraphicsUnit,ImageAttributes)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "지정 된을의 지정된 된 부분을 그립니다 <xref href=&quot;System.Drawing.Image&quot;> </xref> 지정된 된 크기와 지정된 된 위치에 있습니다."
  remarks: "`destPoints` 매개 변수 사변형의 세 점을 지정 합니다. 세 개의 <xref:System.Drawing.PointF>구조 평행 사변형의 왼쪽 위, 오른쪽 위 및 왼쪽 아래 모퉁이 나타냅니다.</xref:System.Drawing.PointF> 네 번째 지점 평행 사변형을 구성 하기 위해 처음&3; 개에서 점으로 추정 합니다.       `srcRect` 의 사각형 부분을 지정 하는 매개 변수는 `image` 그릴 개체입니다. 이 부분은 크기가 조정 되 고 지정 된 평행 사변형 안에 맞추기 위해는 `destPoints` 매개 변수입니다."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates an image from a JPEG file SampImag.jpg in the folder of the example.  \n  \n-   Creates points that define a destination parallelogram in which to draw the image.  \n  \n-   Creates a source rectangle from which to extract a portion of the image.  \n  \n-   Sets the unit of measure of the source rectangle to pixels.  \n  \n-   Draws the original image to the screen.  \n  \n-   Creates an additional parallelogram in which to draw an adjusted image.  \n  \n-   Creates and sets the attributes of the adjusted image to have a larger-than-usual gamma value.  \n  \n-   Draws the adjusted image to the screen.  \n  \n For the original, unadjusted destination parallelogram, the position locates the image on the screen, the size of the source rectangle and the size and shape of the destination parallelogram determines the scaling and shearing of the drawn image, and the size of the rectangle determines what portion of the original image is drawn to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#43](~/add/codesnippet/cpp/6b0afdfb-af32-486b-87bf-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#43](~/add/codesnippet/csharp/6b0afdfb-af32-486b-87bf-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#43](~/add/codesnippet/visualbasic/6b0afdfb-af32-486b-87bf-_1.vb)]"
  syntax:
    content: public void DrawImage (System.Drawing.Image image, System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Imaging.ImageAttributes imageAttr);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;></xref>그립니다."
    - id: destPoints
      type: System.Drawing.PointF[]
      description: "세 개인 배열 <xref href=&quot;System.Drawing.PointF&quot;> </xref> 평행 사변형을 정의 하는 구조입니다."
    - id: srcRect
      type: System.Drawing.RectangleF
      description: "<xref href=&quot;System.Drawing.RectangleF&quot;></xref>부분을 지정 하는 구조는 `image` 그릴 개체입니다."
    - id: srcUnit
      type: System.Drawing.GraphicsUnit
      description: "멤버는 <xref href=&quot;System.Drawing.GraphicsUnit&quot;> </xref> 사용 되는 측정 단위를 지정 하는 열거형은 `srcRect` 매개 변수입니다."
    - id: imageAttr
      type: System.Drawing.Imaging.ImageAttributes
      description: "<xref href=&quot;System.Drawing.Imaging.ImageAttributes&quot;></xref>에 대 한 다시 칠하기와 감마 정보를 지정 하는 `image` 개체입니다."
  overload: System.Drawing.Graphics.DrawImage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>image</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)
  id: DrawImage(System.Drawing.Image,System.Int32,System.Int32,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawImage(Image,Int32,Int32,Rectangle,GraphicsUnit)
  nameWithType: Graphics.DrawImage(Image,Int32,Int32,Rectangle,GraphicsUnit)
  fullName: System.Drawing.Graphics.DrawImage(Image,Int32,Int32,Rectangle,GraphicsUnit)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "지정된 된 위치에서 이미지의 부분을 그립니다."
  remarks: "<xref:System.Drawing.Image>픽셀 너비에 대 한 값 및 가로 해상도 (인치당 도트 수)에 대 한 값을 저장 합니다.</xref:System.Drawing.Image> 이미지의 인치 단위로 측정 실제 너비를 픽셀 너비 수평 해상도로 나눈 값입니다. 예를 들어 360 픽셀 너비와 1 인치는 72 점의 수평 해상도 사용 하 여 이미지가 실제 너비는 5 인치입니다. 이와 유사 픽셀 높이 물리적 높이에 적용 됩니다.       이 메서드는 실제 크기를 사용 하 여 이미지 부분 디스플레이 장치의 해상도 (인치당 도트 수)에 관계 없이 인치 정확한 크기를 가집니다 이미지의 부분을 그립니다. 예를 들어 이미지 부분에 216 픽셀 너비와 1 인치는 72 점의 수평 해상도입니다. 픽셀 너비는 렌더링 된 이미지 부분의 (216/72) 부분을 그릴 이미지 96dpi 해상도 장치에서이 메서드를 호출 하는 경우 됩니다 * 96 = 288 합니다."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates an image from a JPEG file SampImag.jpg in the folder of the example.  \n  \n-   Creates the coordinates at which to draw the upper-left corner of the image.  \n  \n-   Creates a source rectangle from which to extract a portion of the image.  \n  \n-   Sets the unit of measure of the source rectangle to pixels.  \n  \n-   Draws the image to the screen.  \n  \n The size of the source rectangle determines what portion of the unscaled original image is drawn to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#59](~/add/codesnippet/cpp/f904b742-3271-432e-b54b-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#59](~/add/codesnippet/csharp/f904b742-3271-432e-b54b-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#59](~/add/codesnippet/visualbasic/f904b742-3271-432e-b54b-_1.vb)]"
  syntax:
    content: public void DrawImage (System.Drawing.Image image, int x, int y, System.Drawing.Rectangle srcRect, System.Drawing.GraphicsUnit srcUnit);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;></xref>그립니다."
    - id: x
      type: System.Int32
      description: "그려지는 이미지의 왼쪽 위 모퉁이의 x 좌표입니다."
    - id: y
      type: System.Int32
      description: "그려지는 이미지의 왼쪽 위 모퉁이의 y 좌표입니다."
    - id: srcRect
      type: System.Drawing.Rectangle
      description: "<xref href=&quot;System.Drawing.Rectangle&quot;></xref>부분을 지정 하는 구조는 `image` 그릴 개체입니다."
    - id: srcUnit
      type: System.Drawing.GraphicsUnit
      description: "멤버는 <xref href=&quot;System.Drawing.GraphicsUnit&quot;> </xref> 사용 되는 측정 단위를 지정 하는 열거형은 `srcRect` 매개 변수입니다."
  overload: System.Drawing.Graphics.DrawImage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>image</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Int32)
  id: DrawImage(System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawImage(Image,Int32,Int32,Int32,Int32)
  nameWithType: Graphics.DrawImage(Image,Int32,Int32,Int32,Int32)
  fullName: System.Drawing.Graphics.DrawImage(Image,Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "지정 된 그립니다 <xref href=&quot;System.Drawing.Image&quot;> </xref> 지정된 된 크기와 지정된 된 위치에 있습니다."
  remarks: "정의 된 사각형의 `x`, `y`, `width`, 및 `height` 그려지는 이미지의 크기와 위치 매개 변수를 결정 합니다."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates an image from a JPEG file SampImag.jpg in the folder of the example.  \n  \n-   Creates the position and size of a rectangle in which to draw the image.  \n  \n-   Draws the image to the screen.  \n  \n The position of the rectangle locates the image on the screen, and the size of the original image and the size of the rectangle determines the scaling of the drawn image.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#60](~/add/codesnippet/cpp/dc519bdd-d8f5-446f-a257-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#60](~/add/codesnippet/csharp/dc519bdd-d8f5-446f-a257-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#60](~/add/codesnippet/visualbasic/dc519bdd-d8f5-446f-a257-_1.vb)]"
  syntax:
    content: public void DrawImage (System.Drawing.Image image, int x, int y, int width, int height);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;></xref>그립니다."
    - id: x
      type: System.Int32
      description: "그려지는 이미지의 왼쪽 위 모퉁이의 x 좌표입니다."
    - id: y
      type: System.Int32
      description: "그려지는 이미지의 왼쪽 위 모퉁이의 y 좌표입니다."
    - id: width
      type: System.Int32
      description: "그려지는 이미지의 너비입니다."
    - id: height
      type: System.Int32
      description: "그려지는 이미지의 높이입니다."
  overload: System.Drawing.Graphics.DrawImage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>image</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)
  id: DrawImage(System.Drawing.Image,System.Single,System.Single,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawImage(Image,Single,Single,RectangleF,GraphicsUnit)
  nameWithType: Graphics.DrawImage(Image,Single,Single,RectangleF,GraphicsUnit)
  fullName: System.Drawing.Graphics.DrawImage(Image,Single,Single,RectangleF,GraphicsUnit)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "지정된 된 위치에서 이미지의 부분을 그립니다."
  remarks: "<xref:System.Drawing.Image>픽셀 너비에 대 한 값 및 가로 해상도 (인치당 도트 수)에 대 한 값을 저장 합니다.</xref:System.Drawing.Image> 이미지의 인치 단위로 측정 실제 너비를 픽셀 너비 수평 해상도로 나눈 값입니다. 예를 들어 360 픽셀 너비와 1 인치는 72 점의 수평 해상도 사용 하 여 이미지가 실제 너비는 5 인치입니다. 이와 유사 픽셀 높이 물리적 높이에 적용 됩니다.       이 메서드는 실제 크기를 사용 하 여 이미지 부분 디스플레이 장치의 해상도 (인치당 도트 수)에 관계 없이 인치 정확한 크기를 가집니다 이미지의 부분을 그립니다. 예를 들어 이미지 부분에 216 픽셀 너비와 1 인치는 72 점의 수평 해상도입니다. 픽셀 너비는 렌더링 된 이미지 부분의 (216/72) 부분을 그릴 이미지 96dpi 해상도 장치에서이 메서드를 호출 하는 경우 됩니다 * 96 = 288 합니다."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates an image from a JPEG file SampImag.jpg in the folder of the example.  \n  \n-   Creates the coordinates at which to draw the upper-left corner of the image.  \n  \n-   Creates a source rectangle from which to extract a portion of the image.  \n  \n-   Sets the unit of measure of the source rectangle to pixels.  \n  \n-   Draws the image to the screen.  \n  \n The size of the source rectangle determines what portion of the unscaled original image is drawn to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#62](~/add/codesnippet/cpp/9a0fe4d8-ea0f-4f65-9ec1-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#62](~/add/codesnippet/csharp/9a0fe4d8-ea0f-4f65-9ec1-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#62](~/add/codesnippet/visualbasic/9a0fe4d8-ea0f-4f65-9ec1-_1.vb)]"
  syntax:
    content: public void DrawImage (System.Drawing.Image image, float x, float y, System.Drawing.RectangleF srcRect, System.Drawing.GraphicsUnit srcUnit);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;></xref>그립니다."
    - id: x
      type: System.Single
      description: "그려지는 이미지의 왼쪽 위 모퉁이의 x 좌표입니다."
    - id: y
      type: System.Single
      description: "그려지는 이미지의 왼쪽 위 모퉁이의 y 좌표입니다."
    - id: srcRect
      type: System.Drawing.RectangleF
      description: "<xref href=&quot;System.Drawing.RectangleF&quot;></xref>부분을 지정 하는 구조는 <xref href=&quot;System.Drawing.Image&quot;> </xref> 그릴 합니다."
    - id: srcUnit
      type: System.Drawing.GraphicsUnit
      description: "멤버는 <xref href=&quot;System.Drawing.GraphicsUnit&quot;> </xref> 사용 되는 측정 단위를 지정 하는 열거형은 `srcRect` 매개 변수입니다."
  overload: System.Drawing.Graphics.DrawImage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>image</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single,System.Single,System.Single)
  id: DrawImage(System.Drawing.Image,System.Single,System.Single,System.Single,System.Single)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawImage(Image,Single,Single,Single,Single)
  nameWithType: Graphics.DrawImage(Image,Single,Single,Single,Single)
  fullName: System.Drawing.Graphics.DrawImage(Image,Single,Single,Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "지정 된 그립니다 <xref href=&quot;System.Drawing.Image&quot;> </xref> 지정된 된 크기와 지정된 된 위치에 있습니다."
  remarks: "정의 된 사각형의 `x`, `y`, `width`, 및 `height` 그려지는 이미지의 크기와 위치 매개 변수를 결정 합니다."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates an image from a JPEG file SampImag.jpg in the folder of the example.  \n  \n-   Creates the position and size of a rectangle in which to draw the image.  \n  \n-   Draws the image to the screen.  \n  \n The position of the rectangle locates the image on the screen, and the size of the original image and the size of the rectangle determines the scaling of the drawn image.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#63](~/add/codesnippet/cpp/c499f938-82a0-46ba-ab2e-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#63](~/add/codesnippet/csharp/c499f938-82a0-46ba-ab2e-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#63](~/add/codesnippet/visualbasic/c499f938-82a0-46ba-ab2e-_1.vb)]"
  syntax:
    content: public void DrawImage (System.Drawing.Image image, float x, float y, float width, float height);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;></xref>그립니다."
    - id: x
      type: System.Single
      description: "그려지는 이미지의 왼쪽 위 모퉁이의 x 좌표입니다."
    - id: y
      type: System.Single
      description: "그려지는 이미지의 왼쪽 위 모퉁이의 y 좌표입니다."
    - id: width
      type: System.Single
      description: "그려지는 이미지의 너비입니다."
    - id: height
      type: System.Single
      description: "그려지는 이미지의 높이입니다."
  overload: System.Drawing.Graphics.DrawImage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>image</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)
  id: DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawImage(Image,Point[],Rectangle,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort)
  nameWithType: Graphics.DrawImage(Image,Point[],Rectangle,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort)
  fullName: System.Drawing.Graphics.DrawImage(Image,Point[],Rectangle,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void DrawImage (System.Drawing.Image image, System.Drawing.Point[] destPoints, System.Drawing.Rectangle srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Imaging.ImageAttributes imageAttr, System.Drawing.Graphics.DrawImageAbort callback);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "추가할 수 있습니다."
    - id: destPoints
      type: System.Drawing.Point[]
      description: "추가할 수 있습니다."
    - id: srcRect
      type: System.Drawing.Rectangle
      description: "추가할 수 있습니다."
    - id: srcUnit
      type: System.Drawing.GraphicsUnit
      description: "추가할 수 있습니다."
    - id: imageAttr
      type: System.Drawing.Imaging.ImageAttributes
      description: "추가할 수 있습니다."
    - id: callback
      type: System.Drawing.Graphics.DrawImageAbort
      description: "추가할 수 있습니다."
  overload: System.Drawing.Graphics.DrawImage*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)
  id: DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawImage(Image,PointF[],RectangleF,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort)
  nameWithType: Graphics.DrawImage(Image,PointF[],RectangleF,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort)
  fullName: System.Drawing.Graphics.DrawImage(Image,PointF[],RectangleF,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void DrawImage (System.Drawing.Image image, System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Imaging.ImageAttributes imageAttr, System.Drawing.Graphics.DrawImageAbort callback);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "추가할 수 있습니다."
    - id: destPoints
      type: System.Drawing.PointF[]
      description: "추가할 수 있습니다."
    - id: srcRect
      type: System.Drawing.RectangleF
      description: "추가할 수 있습니다."
    - id: srcUnit
      type: System.Drawing.GraphicsUnit
      description: "추가할 수 있습니다."
    - id: imageAttr
      type: System.Drawing.Imaging.ImageAttributes
      description: "추가할 수 있습니다."
    - id: callback
      type: System.Drawing.Graphics.DrawImageAbort
      description: "추가할 수 있습니다."
  overload: System.Drawing.Graphics.DrawImage*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)
  id: DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawImage(Image,Point[],Rectangle,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort,Int32)
  nameWithType: Graphics.DrawImage(Image,Point[],Rectangle,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort,Int32)
  fullName: System.Drawing.Graphics.DrawImage(Image,Point[],Rectangle,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort,Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void DrawImage (System.Drawing.Image image, System.Drawing.Point[] destPoints, System.Drawing.Rectangle srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Imaging.ImageAttributes imageAttr, System.Drawing.Graphics.DrawImageAbort callback, int callbackData);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "추가할 수 있습니다."
    - id: destPoints
      type: System.Drawing.Point[]
      description: "추가할 수 있습니다."
    - id: srcRect
      type: System.Drawing.Rectangle
      description: "추가할 수 있습니다."
    - id: srcUnit
      type: System.Drawing.GraphicsUnit
      description: "추가할 수 있습니다."
    - id: imageAttr
      type: System.Drawing.Imaging.ImageAttributes
      description: "추가할 수 있습니다."
    - id: callback
      type: System.Drawing.Graphics.DrawImageAbort
      description: "추가할 수 있습니다."
    - id: callbackData
      type: System.Int32
      description: "추가할 수 있습니다."
  overload: System.Drawing.Graphics.DrawImage*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)
  id: DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawImage(Image,PointF[],RectangleF,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort,Int32)
  nameWithType: Graphics.DrawImage(Image,PointF[],RectangleF,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort,Int32)
  fullName: System.Drawing.Graphics.DrawImage(Image,PointF[],RectangleF,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort,Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void DrawImage (System.Drawing.Image image, System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Imaging.ImageAttributes imageAttr, System.Drawing.Graphics.DrawImageAbort callback, int callbackData);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "추가할 수 있습니다."
    - id: destPoints
      type: System.Drawing.PointF[]
      description: "추가할 수 있습니다."
    - id: srcRect
      type: System.Drawing.RectangleF
      description: "추가할 수 있습니다."
    - id: srcUnit
      type: System.Drawing.GraphicsUnit
      description: "추가할 수 있습니다."
    - id: imageAttr
      type: System.Drawing.Imaging.ImageAttributes
      description: "추가할 수 있습니다."
    - id: callback
      type: System.Drawing.Graphics.DrawImageAbort
      description: "추가할 수 있습니다."
    - id: callbackData
      type: System.Int32
      description: "추가할 수 있습니다."
  overload: System.Drawing.Graphics.DrawImage*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit)
  id: DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawImage(Image,Rectangle,Int32,Int32,Int32,Int32,GraphicsUnit)
  nameWithType: Graphics.DrawImage(Image,Rectangle,Int32,Int32,Int32,Int32,GraphicsUnit)
  fullName: System.Drawing.Graphics.DrawImage(Image,Rectangle,Int32,Int32,Int32,Int32,GraphicsUnit)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "지정 된을의 지정된 된 부분을 그립니다 <xref href=&quot;System.Drawing.Image&quot;> </xref> 지정된 된 크기와 지정된 된 위치에 있습니다."
  remarks: "`srcX`, `srcY`, `srcWidth`, 및 `srcHeight` 의 사각형 부분을 지정 하는 매개 변수는 `image` 그릴 개체입니다. 사각형은 원본 이미지의 왼쪽 위 모퉁이 기준으로 합니다. 이 부분으로 지정 된 사각형 내에 맞게 크기가 조정 되는 `destRect` 매개 변수입니다."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates an image from a JPEG file SampImag.jpg in the folder of the example.  \n  \n-   Creates a destination rectangle in which to draw the image.  \n  \n-   Creates the coordinates of a source rectangle from which to extract a portion of the image.  \n  \n-   Sets the unit of measure of the source rectangle to pixels.  \n  \n-   Draws the image to the screen.  \n  \n The position of the destination rectangle locates the image on the screen, and the sizes of the source and destination rectangles determine the scaling of the drawn image, and the size of the source rectangle determines what portion of the original image is drawn to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#48](~/add/codesnippet/cpp/223fb7be-dae4-4ad9-b0a7-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#48](~/add/codesnippet/csharp/223fb7be-dae4-4ad9-b0a7-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#48](~/add/codesnippet/visualbasic/223fb7be-dae4-4ad9-b0a7-_1.vb)]"
  syntax:
    content: public void DrawImage (System.Drawing.Image image, System.Drawing.Rectangle destRect, int srcX, int srcY, int srcWidth, int srcHeight, System.Drawing.GraphicsUnit srcUnit);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;></xref>그립니다."
    - id: destRect
      type: System.Drawing.Rectangle
      description: "<xref href=&quot;System.Drawing.Rectangle&quot;></xref>그려지는 이미지의 크기와 위치를 지정 하는 구조입니다. 이미지는 사각형에 맞게 크기가 조정 됩니다."
    - id: srcX
      type: System.Int32
      description: "그릴 원본 이미지 부분의 왼쪽 위 모퉁이의 x 좌표입니다."
    - id: srcY
      type: System.Int32
      description: "그릴 원본 이미지 부분의 왼쪽 위 모퉁이의 y 좌표입니다."
    - id: srcWidth
      type: System.Int32
      description: "그릴 원본 이미지의 부분의 너비입니다."
    - id: srcHeight
      type: System.Int32
      description: "그릴 원본 이미지의 부분의 높이입니다."
    - id: srcUnit
      type: System.Drawing.GraphicsUnit
      description: "멤버는 <xref href=&quot;System.Drawing.GraphicsUnit&quot;> </xref> 소스 사각형을 결정 하는 데 사용 되는 측정 단위를 지정 하는 열거형입니다."
  overload: System.Drawing.Graphics.DrawImage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>image</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit)
  id: DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawImage(Image,Rectangle,Single,Single,Single,Single,GraphicsUnit)
  nameWithType: Graphics.DrawImage(Image,Rectangle,Single,Single,Single,Single,GraphicsUnit)
  fullName: System.Drawing.Graphics.DrawImage(Image,Rectangle,Single,Single,Single,Single,GraphicsUnit)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "지정 된을의 지정된 된 부분을 그립니다 <xref href=&quot;System.Drawing.Image&quot;> </xref> 지정된 된 크기와 지정된 된 위치에 있습니다."
  remarks: "`srcX`, `srcY`, `srcWidth`, 및 `srcHeight` 의 사각형 부분을 지정 하는 매개 변수는 `image` 그릴 개체입니다. 사각형은 원본 이미지의 왼쪽 위 모퉁이 기준으로 합니다. 이 부분으로 지정 된 사각형 내에 맞게 크기가 조정 되는 `destRect` 매개 변수입니다."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates an image from a JPEG file SampImag.jpg in the folder of the example.  \n  \n-   Creates the coordinates of a destination rectangle in which to draw the image.  \n  \n-   Creates a source rectangle from which to extract a portion of the image.  \n  \n-   Sets the unit of measure of the source rectangle to pixels.  \n  \n-   Draws the image to the screen.  \n  \n The position of the destination rectangle locates the image on the screen, the sizes of the source and destination rectangles determine the scaling of the drawn image, and the size of the source rectangle determines what portion of the original image is drawn to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#52](~/add/codesnippet/cpp/6a64b030-f9b9-4136-9958-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#52](~/add/codesnippet/csharp/6a64b030-f9b9-4136-9958-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#52](~/add/codesnippet/visualbasic/6a64b030-f9b9-4136-9958-_1.vb)]"
  syntax:
    content: public void DrawImage (System.Drawing.Image image, System.Drawing.Rectangle destRect, float srcX, float srcY, float srcWidth, float srcHeight, System.Drawing.GraphicsUnit srcUnit);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;></xref>그립니다."
    - id: destRect
      type: System.Drawing.Rectangle
      description: "<xref href=&quot;System.Drawing.Rectangle&quot;></xref>그려지는 이미지의 크기와 위치를 지정 하는 구조입니다. 이미지는 사각형에 맞게 크기가 조정 됩니다."
    - id: srcX
      type: System.Single
      description: "그릴 원본 이미지 부분의 왼쪽 위 모퉁이의 x 좌표입니다."
    - id: srcY
      type: System.Single
      description: "그릴 원본 이미지 부분의 왼쪽 위 모퉁이의 y 좌표입니다."
    - id: srcWidth
      type: System.Single
      description: "그릴 원본 이미지의 부분의 너비입니다."
    - id: srcHeight
      type: System.Single
      description: "그릴 원본 이미지의 부분의 높이입니다."
    - id: srcUnit
      type: System.Drawing.GraphicsUnit
      description: "멤버는 <xref href=&quot;System.Drawing.GraphicsUnit&quot;> </xref> 소스 사각형을 결정 하는 데 사용 되는 측정 단위를 지정 하는 열거형입니다."
  overload: System.Drawing.Graphics.DrawImage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>image</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)
  id: DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawImage(Image,Rectangle,Int32,Int32,Int32,Int32,GraphicsUnit,ImageAttributes)
  nameWithType: Graphics.DrawImage(Image,Rectangle,Int32,Int32,Int32,Int32,GraphicsUnit,ImageAttributes)
  fullName: System.Drawing.Graphics.DrawImage(Image,Rectangle,Int32,Int32,Int32,Int32,GraphicsUnit,ImageAttributes)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "지정 된을의 지정된 된 부분을 그립니다 <xref href=&quot;System.Drawing.Image&quot;> </xref> 지정된 된 크기와 지정된 된 위치에 있습니다."
  remarks: "`srcX`, `srcY`, `srcWidth`, 및 `srcHeight` 의 사각형 부분을 지정 하는 매개 변수는 `image` 그릴 개체입니다. 사각형은 원본 이미지의 왼쪽 위 모퉁이 기준으로 합니다. 이 부분으로 지정 된 사각형 내에 맞게 크기가 조정 되는 `destRect` 매개 변수입니다."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates an image from a JPEG file SampImag.jpg in the folder of the example.  \n  \n-   Creates a destination rectangle in which to draw the image.  \n  \n-   Creates the coordinates of a source rectangle from which to extract a portion of the image.  \n  \n-   Sets the unit of measure of the source rectangle to pixels.  \n  \n-   Draws the original image to the screen.  \n  \n-   Creates an additional rectangle in which to draw an adjusted image.  \n  \n-   Creates and sets the attributes of the adjusted image to have a larger-than-usual gamma value.  \n  \n-   Draws the adjusted image to the screen.  \n  \n For the original, unadjusted destination rectangle, the position locates the image on the screen, and the sizes of the source and destination rectangles determine the scaling of the drawn image, and the size of the source rectangle determines what portion of the original image is drawn to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#49](~/add/codesnippet/cpp/e2928ae3-f4ea-4e28-84d2-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#49](~/add/codesnippet/csharp/e2928ae3-f4ea-4e28-84d2-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#49](~/add/codesnippet/visualbasic/e2928ae3-f4ea-4e28-84d2-_1.vb)]"
  syntax:
    content: public void DrawImage (System.Drawing.Image image, System.Drawing.Rectangle destRect, int srcX, int srcY, int srcWidth, int srcHeight, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Imaging.ImageAttributes imageAttr);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;></xref>그립니다."
    - id: destRect
      type: System.Drawing.Rectangle
      description: "<xref href=&quot;System.Drawing.Rectangle&quot;></xref>그려지는 이미지의 크기와 위치를 지정 하는 구조입니다. 이미지는 사각형에 맞게 크기가 조정 됩니다."
    - id: srcX
      type: System.Int32
      description: "그릴 원본 이미지 부분의 왼쪽 위 모퉁이의 x 좌표입니다."
    - id: srcY
      type: System.Int32
      description: "그릴 원본 이미지 부분의 왼쪽 위 모퉁이의 y 좌표입니다."
    - id: srcWidth
      type: System.Int32
      description: "그릴 원본 이미지의 부분의 너비입니다."
    - id: srcHeight
      type: System.Int32
      description: "그릴 원본 이미지의 부분의 높이입니다."
    - id: srcUnit
      type: System.Drawing.GraphicsUnit
      description: "멤버는 <xref href=&quot;System.Drawing.GraphicsUnit&quot;> </xref> 소스 사각형을 결정 하는 데 사용 되는 측정 단위를 지정 하는 열거형입니다."
    - id: imageAttr
      type: System.Drawing.Imaging.ImageAttributes
      description: "<xref href=&quot;System.Drawing.Imaging.ImageAttributes&quot;></xref>에 대 한 다시 칠하기와 감마 정보를 지정 하는 `image` 개체입니다."
  overload: System.Drawing.Graphics.DrawImage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>image</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)
  id: DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawImage(Image,Rectangle,Single,Single,Single,Single,GraphicsUnit,ImageAttributes)
  nameWithType: Graphics.DrawImage(Image,Rectangle,Single,Single,Single,Single,GraphicsUnit,ImageAttributes)
  fullName: System.Drawing.Graphics.DrawImage(Image,Rectangle,Single,Single,Single,Single,GraphicsUnit,ImageAttributes)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "지정 된을의 지정된 된 부분을 그립니다 <xref href=&quot;System.Drawing.Image&quot;> </xref> 지정된 된 크기와 지정된 된 위치에 있습니다."
  remarks: "`srcX`, `srcY`, `srcWidth`, 및 `srcHeight` 의 사각형 부분을 지정 하는 매개 변수는 `image` 그릴 개체입니다. 사각형은 원본 이미지의 왼쪽 위 모퉁이 기준으로 합니다. 이 부분으로 지정 된 사각형 내에 맞게 크기가 조정 되는 `destRect` 매개 변수입니다."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates an image from a JPEG file SampImag.jpg in the folder of the example.  \n  \n-   Creates a destination rectangle in which to draw the image.  \n  \n-   Creates the coordinates of a source rectangle from which to extract a portion of the image.  \n  \n-   Sets the unit of measure of the source rectangle to pixels.  \n  \n-   Draws the original image to the screen.  \n  \n-   Creates an additional rectangle in which to draw an adjusted image.  \n  \n-   Creates and sets the attributes of the adjusted image to have a larger-than-usual gamma value.  \n  \n-   Draws the adjusted image to the screen.  \n  \n For the original, unadjusted destination rectangle, the position locates the image on the screen, and the sizes of the source and destination rectangles determine the scaling of the drawn image, and the size of the source rectangle determines what portion of the original image is drawn to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#53](~/add/codesnippet/cpp/8cbc1478-f554-4214-b657-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples#53](~/add/codesnippet/csharp/8cbc1478-f554-4214-b657-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#53](~/add/codesnippet/visualbasic/8cbc1478-f554-4214-b657-_1.vb)]"
  syntax:
    content: public void DrawImage (System.Drawing.Image image, System.Drawing.Rectangle destRect, float srcX, float srcY, float srcWidth, float srcHeight, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Imaging.ImageAttributes imageAttrs);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;></xref>그립니다."
    - id: destRect
      type: System.Drawing.Rectangle
      description: "<xref href=&quot;System.Drawing.Rectangle&quot;></xref>그려지는 이미지의 크기와 위치를 지정 하는 구조입니다. 이미지는 사각형에 맞게 크기가 조정 됩니다."
    - id: srcX
      type: System.Single
      description: "그릴 원본 이미지 부분의 왼쪽 위 모퉁이의 x 좌표입니다."
    - id: srcY
      type: System.Single
      description: "그릴 원본 이미지 부분의 왼쪽 위 모퉁이의 y 좌표입니다."
    - id: srcWidth
      type: System.Single
      description: "그릴 원본 이미지의 부분의 너비입니다."
    - id: srcHeight
      type: System.Single
      description: "그릴 원본 이미지의 부분의 높이입니다."
    - id: srcUnit
      type: System.Drawing.GraphicsUnit
      description: "멤버는 <xref href=&quot;System.Drawing.GraphicsUnit&quot;> </xref> 소스 사각형을 결정 하는 데 사용 되는 측정 단위를 지정 하는 열거형입니다."
    - id: imageAttrs
      type: System.Drawing.Imaging.ImageAttributes
      description: "<xref href=&quot;System.Drawing.Imaging.ImageAttributes&quot;></xref>에 대 한 다시 칠하기와 감마 정보를 지정 하는 `image` 개체입니다."
  overload: System.Drawing.Graphics.DrawImage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>image</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)
  id: DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawImage(Image,Rectangle,Int32,Int32,Int32,Int32,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort)
  nameWithType: Graphics.DrawImage(Image,Rectangle,Int32,Int32,Int32,Int32,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort)
  fullName: System.Drawing.Graphics.DrawImage(Image,Rectangle,Int32,Int32,Int32,Int32,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void DrawImage (System.Drawing.Image image, System.Drawing.Rectangle destRect, int srcX, int srcY, int srcWidth, int srcHeight, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Imaging.ImageAttributes imageAttr, System.Drawing.Graphics.DrawImageAbort callback);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "추가할 수 있습니다."
    - id: destRect
      type: System.Drawing.Rectangle
      description: "추가할 수 있습니다."
    - id: srcX
      type: System.Int32
      description: "추가할 수 있습니다."
    - id: srcY
      type: System.Int32
      description: "추가할 수 있습니다."
    - id: srcWidth
      type: System.Int32
      description: "추가할 수 있습니다."
    - id: srcHeight
      type: System.Int32
      description: "추가할 수 있습니다."
    - id: srcUnit
      type: System.Drawing.GraphicsUnit
      description: "추가할 수 있습니다."
    - id: imageAttr
      type: System.Drawing.Imaging.ImageAttributes
      description: "추가할 수 있습니다."
    - id: callback
      type: System.Drawing.Graphics.DrawImageAbort
      description: "추가할 수 있습니다."
  overload: System.Drawing.Graphics.DrawImage*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)
  id: DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawImage(Image,Rectangle,Single,Single,Single,Single,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort)
  nameWithType: Graphics.DrawImage(Image,Rectangle,Single,Single,Single,Single,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort)
  fullName: System.Drawing.Graphics.DrawImage(Image,Rectangle,Single,Single,Single,Single,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void DrawImage (System.Drawing.Image image, System.Drawing.Rectangle destRect, float srcX, float srcY, float srcWidth, float srcHeight, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Imaging.ImageAttributes imageAttrs, System.Drawing.Graphics.DrawImageAbort callback);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "추가할 수 있습니다."
    - id: destRect
      type: System.Drawing.Rectangle
      description: "추가할 수 있습니다."
    - id: srcX
      type: System.Single
      description: "추가할 수 있습니다."
    - id: srcY
      type: System.Single
      description: "추가할 수 있습니다."
    - id: srcWidth
      type: System.Single
      description: "추가할 수 있습니다."
    - id: srcHeight
      type: System.Single
      description: "추가할 수 있습니다."
    - id: srcUnit
      type: System.Drawing.GraphicsUnit
      description: "추가할 수 있습니다."
    - id: imageAttrs
      type: System.Drawing.Imaging.ImageAttributes
      description: "추가할 수 있습니다."
    - id: callback
      type: System.Drawing.Graphics.DrawImageAbort
      description: "추가할 수 있습니다."
  overload: System.Drawing.Graphics.DrawImage*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)
  id: DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawImage(Image,Rectangle,Int32,Int32,Int32,Int32,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort,IntPtr)
  nameWithType: Graphics.DrawImage(Image,Rectangle,Int32,Int32,Int32,Int32,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort,IntPtr)
  fullName: System.Drawing.Graphics.DrawImage(Image,Rectangle,Int32,Int32,Int32,Int32,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort,IntPtr)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void DrawImage (System.Drawing.Image image, System.Drawing.Rectangle destRect, int srcX, int srcY, int srcWidth, int srcHeight, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Imaging.ImageAttributes imageAttrs, System.Drawing.Graphics.DrawImageAbort callback, IntPtr callbackData);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "추가할 수 있습니다."
    - id: destRect
      type: System.Drawing.Rectangle
      description: "추가할 수 있습니다."
    - id: srcX
      type: System.Int32
      description: "추가할 수 있습니다."
    - id: srcY
      type: System.Int32
      description: "추가할 수 있습니다."
    - id: srcWidth
      type: System.Int32
      description: "추가할 수 있습니다."
    - id: srcHeight
      type: System.Int32
      description: "추가할 수 있습니다."
    - id: srcUnit
      type: System.Drawing.GraphicsUnit
      description: "추가할 수 있습니다."
    - id: imageAttrs
      type: System.Drawing.Imaging.ImageAttributes
      description: "추가할 수 있습니다."
    - id: callback
      type: System.Drawing.Graphics.DrawImageAbort
      description: "추가할 수 있습니다."
    - id: callbackData
      type: System.IntPtr
      description: "추가할 수 있습니다."
  overload: System.Drawing.Graphics.DrawImage*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)
  id: DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawImage(Image,Rectangle,Single,Single,Single,Single,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort,IntPtr)
  nameWithType: Graphics.DrawImage(Image,Rectangle,Single,Single,Single,Single,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort,IntPtr)
  fullName: System.Drawing.Graphics.DrawImage(Image,Rectangle,Single,Single,Single,Single,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort,IntPtr)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void DrawImage (System.Drawing.Image image, System.Drawing.Rectangle destRect, float srcX, float srcY, float srcWidth, float srcHeight, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Imaging.ImageAttributes imageAttrs, System.Drawing.Graphics.DrawImageAbort callback, IntPtr callbackData);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "추가할 수 있습니다."
    - id: destRect
      type: System.Drawing.Rectangle
      description: "추가할 수 있습니다."
    - id: srcX
      type: System.Single
      description: "추가할 수 있습니다."
    - id: srcY
      type: System.Single
      description: "추가할 수 있습니다."
    - id: srcWidth
      type: System.Single
      description: "추가할 수 있습니다."
    - id: srcHeight
      type: System.Single
      description: "추가할 수 있습니다."
    - id: srcUnit
      type: System.Drawing.GraphicsUnit
      description: "추가할 수 있습니다."
    - id: imageAttrs
      type: System.Drawing.Imaging.ImageAttributes
      description: "추가할 수 있습니다."
    - id: callback
      type: System.Drawing.Graphics.DrawImageAbort
      description: "추가할 수 있습니다."
    - id: callbackData
      type: System.IntPtr
      description: "추가할 수 있습니다."
  overload: System.Drawing.Graphics.DrawImage*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Drawing.Point)
  id: DrawImageUnscaled(System.Drawing.Image,System.Drawing.Point)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawImageUnscaled(Image,Point)
  nameWithType: Graphics.DrawImageUnscaled(Image,Point)
  fullName: System.Drawing.Graphics.DrawImageUnscaled(Image,Point)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "지정된 된 위치에 원래의 크기를 사용 하 여 지정된 된 이미지를 그립니다."
  remarks: "<xref:System.Drawing.Image>픽셀 너비에 대 한 값 및 가로 해상도 (인치당 도트 수)에 대 한 값을 저장 합니다.</xref:System.Drawing.Image> 이미지의 인치 단위로 측정 실제 너비를 픽셀 너비 수평 해상도로 나눈 값입니다. 예를 들어 216 픽셀 너비와 1 인치는 72 점의 수평 해상도 사용 하 여 이미지 3 인치의 실제 너비를 있습니다. 이와 유사 픽셀 높이 물리적 높이에 적용 됩니다.       DrawImageUnscaled 메서드 이미지 해상도 (인치당 도트 수) 디스플레이 장치에 관계 없이 인치 정확한 크기를 가집니다는 실제 크기를 사용 하 여 이미지를 그립니다. 예를 들어 216 픽셀 너비와 72 인치당 도트 수의 수평 해상도 이미지에 있다고 가정 합니다. 렌더링된 된 이미지의 픽셀 너비 (216/72) 됩니다 DrawImageUnscaled 96dpi 해상도 장치에 해당 이미지를 그리기를 호출 하는 경우 * 96 = 288 합니다."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates an image from a JPEG file SampImag.jpg in the folder of the example.  \n  \n-   Creates a point at which to draw the upper-left corner of the image.  \n  \n-   Draws the entire image using its physical size.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#64](~/add/codesnippet/cpp/e51ffdca-5554-49de-bd37-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#64](~/add/codesnippet/csharp/e51ffdca-5554-49de-bd37-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#64](~/add/codesnippet/visualbasic/e51ffdca-5554-49de-bd37-_1.vb)]"
  syntax:
    content: public void DrawImageUnscaled (System.Drawing.Image image, System.Drawing.Point point);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;></xref>그립니다."
    - id: point
      type: System.Drawing.Point
      description: "<xref href=&quot;System.Drawing.Point&quot;></xref>그려지는 이미지의 왼쪽 위 모퉁이 지정 하는 구조입니다."
  overload: System.Drawing.Graphics.DrawImageUnscaled*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>image</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Drawing.Rectangle)
  id: DrawImageUnscaled(System.Drawing.Image,System.Drawing.Rectangle)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawImageUnscaled(Image,Rectangle)
  nameWithType: Graphics.DrawImageUnscaled(Image,Rectangle)
  fullName: System.Drawing.Graphics.DrawImageUnscaled(Image,Rectangle)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "지정된 된 위치에 원래의 크기를 사용 하 여 지정된 된 이미지를 그립니다."
  remarks: "<xref:System.Drawing.Image>픽셀 너비에 대 한 값 및 가로 해상도 (인치당 도트 수)에 대 한 값을 저장 합니다.</xref:System.Drawing.Image> 이미지의 인치 단위로 측정 실제 너비를 픽셀 너비 수평 해상도로 나눈 값입니다. 예를 들어 216 픽셀 너비와 1 인치는 72 점의 수평 해상도 사용 하 여 이미지 3 인치의 실제 너비를 있습니다. 이와 유사 픽셀 높이 물리적 높이에 적용 됩니다.       DrawImageUnscaled 메서드 이미지 해상도 (인치당 도트 수) 디스플레이 장치에 관계 없이 인치 정확한 크기를 가집니다는 실제 크기를 사용 하 여 이미지를 그립니다. 예를 들어 216 픽셀 너비와 72 인치당 도트 수의 수평 해상도 이미지에 있다고 가정 합니다. 렌더링된 된 이미지의 픽셀 너비 (216/72) 됩니다 DrawImageUnscaled 96dpi 해상도 장치에 해당 이미지를 그리기를 호출 하는 경우 * 96 = 288 합니다."
  syntax:
    content: public void DrawImageUnscaled (System.Drawing.Image image, System.Drawing.Rectangle rect);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;></xref>그립니다."
    - id: rect
      type: System.Drawing.Rectangle
      description: "<xref href=&quot;System.Drawing.Rectangle&quot;></xref>그려지는 이미지의 왼쪽 위 모퉁이 지정 하는 합니다. 사각형의 X 및 Y 속성 왼쪽 위 모퉁이 지정합니다. Width 및 Height 속성은 무시 됩니다."
  overload: System.Drawing.Graphics.DrawImageUnscaled*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>image</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Int32,System.Int32)
  id: DrawImageUnscaled(System.Drawing.Image,System.Int32,System.Int32)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawImageUnscaled(Image,Int32,Int32)
  nameWithType: Graphics.DrawImageUnscaled(Image,Int32,Int32)
  fullName: System.Drawing.Graphics.DrawImageUnscaled(Image,Int32,Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "좌표 쌍으로 지정 된 위치에 원래의 크기를 사용 하 여 지정된 된 이미지를 그립니다."
  remarks: "<xref:System.Drawing.Image>픽셀 너비에 대 한 값 및 가로 해상도 (인치당 도트 수)에 대 한 값을 저장 합니다.</xref:System.Drawing.Image> 이미지의 인치 단위로 측정 실제 너비를 픽셀 너비 수평 해상도로 나눈 값입니다. 예를 들어 216 픽셀 너비와 1 인치는 72 점의 수평 해상도 사용 하 여 이미지 3 인치의 실제 너비를 있습니다. 이와 유사 픽셀 높이 물리적 높이에 적용 됩니다.       DrawImageUnscaled 메서드 이미지 해상도 (인치당 도트 수) 디스플레이 장치에 관계 없이 인치 정확한 크기를 가집니다는 실제 크기를 사용 하 여 이미지를 그립니다. 예를 들어 216 픽셀 너비와 72 인치당 도트 수의 수평 해상도 이미지에 있다고 가정 합니다. 렌더링된 된 이미지의 픽셀 너비 (216/72) 됩니다 DrawImageUnscaled 96dpi 해상도 장치에 해당 이미지를 그리기를 호출 하는 경우 * 96 = 288 합니다."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates an image from a JPEG file, SampImag.jpg, in the folder of the example.  \n  \n-   Creates a point at which to draw the upper-left corner of the image.  \n  \n-   Draws the entire image using its physical size.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#65](~/add/codesnippet/cpp/979e5b64-1221-4b16-aa62-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#65](~/add/codesnippet/csharp/979e5b64-1221-4b16-aa62-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#65](~/add/codesnippet/visualbasic/979e5b64-1221-4b16-aa62-_1.vb)]"
  syntax:
    content: public void DrawImageUnscaled (System.Drawing.Image image, int x, int y);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;></xref>그립니다."
    - id: x
      type: System.Int32
      description: "그려지는 이미지의 왼쪽 위 모퉁이의 x 좌표입니다."
    - id: y
      type: System.Int32
      description: "그려지는 이미지의 왼쪽 위 모퉁이의 y 좌표입니다."
  overload: System.Drawing.Graphics.DrawImageUnscaled*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>image</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Int32)
  id: DrawImageUnscaled(System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawImageUnscaled(Image,Int32,Int32,Int32,Int32)
  nameWithType: Graphics.DrawImageUnscaled(Image,Int32,Int32,Int32,Int32)
  fullName: System.Drawing.Graphics.DrawImageUnscaled(Image,Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "지정된 된 위치에 원래의 크기를 사용 하 여 지정된 된 이미지를 그립니다."
  remarks: "<xref:System.Drawing.Image>픽셀 너비에 대 한 값 및 가로 해상도 (인치당 도트 수)에 대 한 값을 저장 합니다.</xref:System.Drawing.Image> 이미지의 인치 단위로 측정 실제 너비를 픽셀 너비 수평 해상도로 나눈 값입니다. 예를 들어 216 픽셀 너비와 1 인치는 72 점의 수평 해상도 사용 하 여 이미지 3 인치의 실제 너비를 있습니다. 이와 유사 픽셀 높이 물리적 높이에 적용 됩니다.       DrawImageUnscaled 메서드 이미지 해상도 (인치당 도트 수) 디스플레이 장치에 관계 없이 인치 정확한 크기를 가집니다는 실제 크기를 사용 하 여 이미지를 그립니다. 예를 들어 216 픽셀 너비와 72 인치당 도트 수의 수평 해상도 이미지에 있다고 가정 합니다. 렌더링된 된 이미지의 픽셀 너비 (216/72) 됩니다 DrawImageUnscaled 96dpi 해상도 장치에 해당 이미지를 그리기를 호출 하는 경우 * 96 = 288 합니다."
  syntax:
    content: public void DrawImageUnscaled (System.Drawing.Image image, int x, int y, int width, int height);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;></xref>그립니다."
    - id: x
      type: System.Int32
      description: "그려지는 이미지의 왼쪽 위 모퉁이의 x 좌표입니다."
    - id: y
      type: System.Int32
      description: "그려지는 이미지의 왼쪽 위 모퉁이의 y 좌표입니다."
    - id: width
      type: System.Int32
      description: "사용되지 않습니다."
    - id: height
      type: System.Int32
      description: "사용되지 않습니다."
  overload: System.Drawing.Graphics.DrawImageUnscaled*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>image</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawImageUnscaledAndClipped(System.Drawing.Image,System.Drawing.Rectangle)
  id: DrawImageUnscaledAndClipped(System.Drawing.Image,System.Drawing.Rectangle)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawImageUnscaledAndClipped(Image,Rectangle)
  nameWithType: Graphics.DrawImageUnscaledAndClipped(Image,Rectangle)
  fullName: System.Drawing.Graphics.DrawImageUnscaledAndClipped(Image,Rectangle)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "크기 조정 없이 지정된 된 이미지를 그립니다 조정 하는 지정 된 사각형에 맞게 필요한 경우."
  remarks: ''
  example:
  - "The following example demonstrates how to use the DrawImageUnscaledAndClipped method. To run this example, paste it into a Windows Form. Handle the form’s <xref:System.Windows.Forms.Control.Paint> event and call the `DrawImageUnscaled` method from the <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-vb[System.Drawing.MiscWhidbeySnippets#8](~/add/codesnippet/visualbasic/8e586d21-d392-4457-b1a8-_1.vb)]\n [!code-cs[System.Drawing.MiscWhidbeySnippets#8](~/add/codesnippet/csharp/8e586d21-d392-4457-b1a8-_1.cs)]"
  syntax:
    content: public void DrawImageUnscaledAndClipped (System.Drawing.Image image, System.Drawing.Rectangle rect);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;> </xref> 그릴 합니다."
    - id: rect
      type: System.Drawing.Rectangle
      description: "<xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 를 이미지를 그릴 합니다."
  overload: System.Drawing.Graphics.DrawImageUnscaledAndClipped*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>image</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Drawing.Point,System.Drawing.Point)
  id: DrawLine(System.Drawing.Pen,System.Drawing.Point,System.Drawing.Point)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawLine(Pen,Point,Point)
  nameWithType: Graphics.DrawLine(Pen,Point,Point)
  fullName: System.Drawing.Graphics.DrawLine(Pen,Point,Point)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "두 개의 연결 하는 선을 그립니다 <xref href=&quot;System.Drawing.Point&quot;> </xref> 구조입니다."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a black pen.  \n  \n-   Creates points for the endpoints of the line.  \n  \n-   Draws the line to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#66](~/add/codesnippet/cpp/7a5f2393-b88a-42cd-943c-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#66](~/add/codesnippet/csharp/7a5f2393-b88a-42cd-943c-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#66](~/add/codesnippet/visualbasic/7a5f2393-b88a-42cd-943c-_1.vb)]"
  syntax:
    content: public void DrawLine (System.Drawing.Pen pen, System.Drawing.Point pt1, System.Drawing.Point pt2);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>색, 너비 및 선의 스타일을 결정 하입니다."
    - id: pt1
      type: System.Drawing.Point
      description: "<xref href=&quot;System.Drawing.Point&quot;></xref>연결할 첫째 점을 나타내는 구조입니다."
    - id: pt2
      type: System.Drawing.Point
      description: "<xref href=&quot;System.Drawing.Point&quot;></xref>연결할 둘째 점을 나타내는 구조입니다."
  overload: System.Drawing.Graphics.DrawLine*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Drawing.PointF,System.Drawing.PointF)
  id: DrawLine(System.Drawing.Pen,System.Drawing.PointF,System.Drawing.PointF)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawLine(Pen,PointF,PointF)
  nameWithType: Graphics.DrawLine(Pen,PointF,PointF)
  fullName: System.Drawing.Graphics.DrawLine(Pen,PointF,PointF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "두 개의 연결 하는 선을 그립니다 <xref href=&quot;System.Drawing.PointF&quot;> </xref> 구조입니다."
  remarks: "이 메서드는 지정 된 두 개의 점을 연결 하는 선을 그립니다는 `pt1` 및 p`2` 매개 변수입니다."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a black pen.  \n  \n-   Creates points for the endpoints of the line.  \n  \n-   Draws the line to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#67](~/add/codesnippet/cpp/eafdb748-e1a5-46b1-a524-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#67](~/add/codesnippet/csharp/eafdb748-e1a5-46b1-a524-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#67](~/add/codesnippet/visualbasic/eafdb748-e1a5-46b1-a524-_1.vb)]"
  syntax:
    content: public void DrawLine (System.Drawing.Pen pen, System.Drawing.PointF pt1, System.Drawing.PointF pt2);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>색, 너비 및 선의 스타일을 결정 하입니다."
    - id: pt1
      type: System.Drawing.PointF
      description: "<xref href=&quot;System.Drawing.PointF&quot;></xref>연결할 첫째 점을 나타내는 구조입니다."
    - id: pt2
      type: System.Drawing.PointF
      description: "<xref href=&quot;System.Drawing.PointF&quot;></xref>연결할 둘째 점을 나타내는 구조입니다."
  overload: System.Drawing.Graphics.DrawLine*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)
  id: DrawLine(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawLine(Pen,Int32,Int32,Int32,Int32)
  nameWithType: Graphics.DrawLine(Pen,Int32,Int32,Int32,Int32)
  fullName: System.Drawing.Graphics.DrawLine(Pen,Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "좌표 쌍에 의해 지정 된 두 개의 점을 연결 하는 선을 그립니다."
  remarks: "이 메서드는 지정 된 두 개의 점을 연결 하는 선을 그립니다는 `x1`, `y1`, `x2`, 및 `y2` 매개 변수입니다."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a black pen.  \n  \n-   Creates the coordinates of the endpoints of the line.  \n  \n-   Draws the line to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#68](~/add/codesnippet/cpp/0cb21819-9d21-4c0c-b7b3-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#68](~/add/codesnippet/csharp/0cb21819-9d21-4c0c-b7b3-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#68](~/add/codesnippet/visualbasic/0cb21819-9d21-4c0c-b7b3-_1.vb)]"
  syntax:
    content: public void DrawLine (System.Drawing.Pen pen, int x1, int y1, int x2, int y2);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>색, 너비 및 선의 스타일을 결정 하입니다."
    - id: x1
      type: System.Int32
      description: "첫째 점의 x 좌표입니다."
    - id: y1
      type: System.Int32
      description: "첫 번째 요소의 y 좌표입니다."
    - id: x2
      type: System.Int32
      description: "두 번째 점의 x 좌표입니다."
    - id: y2
      type: System.Int32
      description: "두 번째 점의 y 좌표입니다."
  overload: System.Drawing.Graphics.DrawLine*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)
  id: DrawLine(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawLine(Pen,Single,Single,Single,Single)
  nameWithType: Graphics.DrawLine(Pen,Single,Single,Single,Single)
  fullName: System.Drawing.Graphics.DrawLine(Pen,Single,Single,Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "좌표 쌍에 의해 지정 된 두 개의 점을 연결 하는 선을 그립니다."
  remarks: "이 메서드는 지정 된 두 개의 점을 연결 하는 선을 그립니다는 `x1`, `y1`, `x2`, 및 `y2` 매개 변수입니다."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a black pen.  \n  \n-   Creates the coordinates of the endpoints of the line.  \n  \n-   Draws the line to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#69](~/add/codesnippet/cpp/cd23e492-13d6-4787-a27b-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#69](~/add/codesnippet/csharp/cd23e492-13d6-4787-a27b-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#69](~/add/codesnippet/visualbasic/cd23e492-13d6-4787-a27b-_1.vb)]"
  syntax:
    content: public void DrawLine (System.Drawing.Pen pen, float x1, float y1, float x2, float y2);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>색, 너비 및 선의 스타일을 결정 하입니다."
    - id: x1
      type: System.Single
      description: "첫째 점의 x 좌표입니다."
    - id: y1
      type: System.Single
      description: "첫 번째 요소의 y 좌표입니다."
    - id: x2
      type: System.Single
      description: "두 번째 점의 x 좌표입니다."
    - id: y2
      type: System.Single
      description: "두 번째 점의 y 좌표입니다."
  overload: System.Drawing.Graphics.DrawLine*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawLines(System.Drawing.Pen,System.Drawing.Point[])
  id: DrawLines(System.Drawing.Pen,System.Drawing.Point[])
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawLines(Pen,Point[])
  nameWithType: Graphics.DrawLines(Pen,Point[])
  fullName: System.Drawing.Graphics.DrawLines(Pen,Point[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "일련의 배열을 연결 하는 선 세그먼트의 <xref href=&quot;System.Drawing.Point&quot;> </xref> 구조입니다."
  remarks: "이 메서드는 일련의 끝점의 배열을 연결 하는 선 그립니다. 배열에서 처음 두 점은 첫 번째 줄을 지정합니다. 각 추가 지점 이전 선 세그먼트의 끝 지점을 인 선 세그먼트의 끝을 지정 합니다."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a black pen.  \n  \n-   Creates an array of points of segments of the line.  \n  \n-   Draws the connected line segments to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#70](~/add/codesnippet/cpp/m-system.drawing.graphic_5_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#70](~/add/codesnippet/csharp/m-system.drawing.graphic_5_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#70](~/add/codesnippet/visualbasic/m-system.drawing.graphic_5_1.vb)]"
  syntax:
    content: public void DrawLines (System.Drawing.Pen pen, System.Drawing.Point[] points);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>색, 너비 및 선 세그먼트의 스타일을 결정 하입니다."
    - id: points
      type: System.Drawing.Point[]
      description: "배열 <xref href=&quot;System.Drawing.Point&quot;> </xref> 연결할 점을 나타내는 합니다."
  overload: System.Drawing.Graphics.DrawLines*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>points</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawLines(System.Drawing.Pen,System.Drawing.PointF[])
  id: DrawLines(System.Drawing.Pen,System.Drawing.PointF[])
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawLines(Pen,PointF[])
  nameWithType: Graphics.DrawLines(Pen,PointF[])
  fullName: System.Drawing.Graphics.DrawLines(Pen,PointF[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "일련의 배열을 연결 하는 선 세그먼트의 <xref href=&quot;System.Drawing.PointF&quot;> </xref> 구조입니다."
  remarks: "이 메서드는 일련의 끝점의 배열을 연결 하는 선 그립니다. 배열에서 처음 두 점은 첫 번째 줄을 지정합니다. 각 추가 지점 이전 선 세그먼트의 끝 지점을 인 선 세그먼트의 끝을 지정 합니다."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Code creates a black pen.  \n  \n-   Creates an array of points of segments of the line.  \n  \n-   Draws the connected line segments to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#71](~/add/codesnippet/cpp/m-system.drawing.graphic_27_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#71](~/add/codesnippet/csharp/m-system.drawing.graphic_27_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#71](~/add/codesnippet/visualbasic/m-system.drawing.graphic_27_1.vb)]"
  syntax:
    content: public void DrawLines (System.Drawing.Pen pen, System.Drawing.PointF[] points);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>색, 너비 및 선 세그먼트의 스타일을 결정 하입니다."
    - id: points
      type: System.Drawing.PointF[]
      description: "배열 <xref href=&quot;System.Drawing.PointF&quot;> </xref> 연결할 점을 나타내는 합니다."
  overload: System.Drawing.Graphics.DrawLines*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>points</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawPath(System.Drawing.Pen,System.Drawing.Drawing2D.GraphicsPath)
  id: DrawPath(System.Drawing.Pen,System.Drawing.Drawing2D.GraphicsPath)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawPath(Pen,GraphicsPath)
  nameWithType: Graphics.DrawPath(Pen,GraphicsPath)
  fullName: System.Drawing.Graphics.DrawPath(Pen,GraphicsPath)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Draws a <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;></xref>."
  remarks: "그래픽 컨텍스트에 현재 변환에 적용 되는 <xref:System.Drawing.Drawing2D.GraphicsPath>을 그리기 전에.</xref:System.Drawing.Drawing2D.GraphicsPath>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a graphics path object and adds an ellipse to it.  \n  \n-   Creates a black pen.  \n  \n-   Draws the graphics path to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#72](~/add/codesnippet/cpp/a718a784-9a44-4465-a94a-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#72](~/add/codesnippet/csharp/a718a784-9a44-4465-a94a-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#72](~/add/codesnippet/visualbasic/a718a784-9a44-4465-a94a-_1.vb)]"
  syntax:
    content: public void DrawPath (System.Drawing.Pen pen, System.Drawing.Drawing2D.GraphicsPath path);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>색, 너비 및 경로의 스타일을 결정 하입니다."
    - id: path
      type: System.Drawing.Drawing2D.GraphicsPath
      description: "<xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;></xref>그립니다."
  overload: System.Drawing.Graphics.DrawPath*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>path</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Drawing.Rectangle,System.Single,System.Single)
  id: DrawPie(System.Drawing.Pen,System.Drawing.Rectangle,System.Single,System.Single)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawPie(Pen,Rectangle,Single,Single)
  nameWithType: Graphics.DrawPie(Pen,Rectangle,Single,Single)
  fullName: System.Drawing.Graphics.DrawPie(Pen,Rectangle,Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "로 지정 된 타원으로 정의 되는 원형 도형을 그립니다는 <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 구조와 두 개의 방사형 선에 합니다."
  remarks: "이 메서드는 호의 끝점와 교차 하는 두 개의 방사형 선에 타원의 호에서 정의 되는 원형 도형을 그립니다. 타원 경계 사각형에 의해 정의 됩니다. 원형 도형이 구성에 정의 된 두 개의 방사형 선에 `startAngle` 및 `sweepAngle` 매개 변수 및 타원 방사형 선 들의 교차 사이의 호입니다.       경우는 `sweepAngle` 매개 변수가-360도 미만 360도 보다 크면, 360도 또는-360도 각각 처럼 처리 됩니다."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a black pen.  \n  \n-   Creates a rectangle that bounds a complete ellipse.  \n  \n-   Defines the angles at which to start drawing (relative to the x axis) and through which to draw (both in a clockwise direction).  \n  \n-   Draws the pie segment to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#73](~/add/codesnippet/cpp/1a04a061-dceb-4fd4-b376-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#73](~/add/codesnippet/csharp/1a04a061-dceb-4fd4-b376-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#73](~/add/codesnippet/visualbasic/1a04a061-dceb-4fd4-b376-_1.vb)]"
  syntax:
    content: public void DrawPie (System.Drawing.Pen pen, System.Drawing.Rectangle rect, float startAngle, float sweepAngle);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>색, 너비 및 원형 도형의 스타일을 결정 하입니다."
    - id: rect
      type: System.Drawing.Rectangle
      description: "<xref href=&quot;System.Drawing.Rectangle&quot;></xref>올 원형 도형이 발생 된 타원을 정의 하는 경계 사각형을 나타내는 구조입니다."
    - id: startAngle
      type: System.Single
      description: "각도 원형 도형의 첫째 면까지 x 축에서 시계 방향으로 단위로 지정 합니다."
    - id: sweepAngle
      type: System.Single
      description: "시계 방향으로 측정 한 각도 `startAngle` 원형 도형의 둘째 면까지 매개 변수입니다."
  overload: System.Drawing.Graphics.DrawPie*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Drawing.RectangleF,System.Single,System.Single)
  id: DrawPie(System.Drawing.Pen,System.Drawing.RectangleF,System.Single,System.Single)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawPie(Pen,RectangleF,Single,Single)
  nameWithType: Graphics.DrawPie(Pen,RectangleF,Single,Single)
  fullName: System.Drawing.Graphics.DrawPie(Pen,RectangleF,Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "로 지정 된 타원으로 정의 되는 원형 도형을 그립니다는 <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> 구조와 두 개의 방사형 선에 합니다."
  remarks: "이 메서드는 호의 끝점와 교차 하는 두 개의 방사형 선에 타원의 호에서 정의 되는 원형 도형을 그립니다. 타원 경계 사각형에 의해 정의 됩니다. 원형 도형이 구성에 정의 된 두 개의 방사형 선에 `startAngle` 및 `sweepAngle` 매개 변수 및 타원 방사형 선 들의 교차 사이의 호입니다.       경우는 `sweepAngle` 매개 변수가-360도 미만 360도 보다 크면, 360도 또는-360도 각각 처럼 처리 됩니다."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a black pen.  \n  \n-   Creates a rectangle that bounds a complete ellipse.  \n  \n-   Defines the angles at which to start drawing (relative to the x axis) and through which to draw (both in a clockwise direction).  \n  \n-   Draws the pie segment to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#74](~/add/codesnippet/cpp/2cc07759-8996-434e-ab19-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#74](~/add/codesnippet/csharp/2cc07759-8996-434e-ab19-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#74](~/add/codesnippet/visualbasic/2cc07759-8996-434e-ab19-_1.vb)]"
  syntax:
    content: public void DrawPie (System.Drawing.Pen pen, System.Drawing.RectangleF rect, float startAngle, float sweepAngle);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>색, 너비 및 원형 도형의 스타일을 결정 하입니다."
    - id: rect
      type: System.Drawing.RectangleF
      description: "<xref href=&quot;System.Drawing.RectangleF&quot;></xref>올 원형 도형이 발생 된 타원을 정의 하는 경계 사각형을 나타내는 구조입니다."
    - id: startAngle
      type: System.Single
      description: "각도 원형 도형의 첫째 면까지 x 축에서 시계 방향으로 단위로 지정 합니다."
    - id: sweepAngle
      type: System.Single
      description: "시계 방향으로 측정 한 각도 `startAngle` 원형 도형의 둘째 면까지 매개 변수입니다."
  overload: System.Drawing.Graphics.DrawPie*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: DrawPie(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawPie(Pen,Int32,Int32,Int32,Int32,Int32,Int32)
  nameWithType: Graphics.DrawPie(Pen,Int32,Int32,Int32,Int32,Int32,Int32)
  fullName: System.Drawing.Graphics.DrawPie(Pen,Int32,Int32,Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "좌표 쌍, 너비, 높이 및 두 개의 방사형 선에 의해 지정 된 타원으로 정의 되는 원형 도형을 그립니다."
  remarks: "이 메서드는 호의 끝점와 교차 하는 두 개의 방사형 선에 타원의 호에서 정의 되는 원형 도형을 그립니다. 타원에 설명 된 경계 사각형에 의해 정의 되는 `x`, `y`, `width`, 및 `height` 매개 변수입니다. 원형 도형이 구성에 정의 된 두 개의 방사형 선에 `startAngle` 및 `sweepAngle` 매개 변수 및 타원 방사형 선 들의 교차 사이의 호입니다.       경우는 `sweepAngle` 매개 변수가-360도 미만 360도 보다 크면, 360도 또는-360도 각각 처럼 처리 됩니다."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a black pen.  \n  \n-   Creates the position and size of a rectangle that bounds a complete ellipse.  \n  \n-   Defines the angles at which to start drawing (relative to the x axis) and through which to draw (both in a clockwise direction).  \n  \n-   Draws the pie shape to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#75](~/add/codesnippet/cpp/efda9570-fb8e-43e9-9bc9-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#75](~/add/codesnippet/csharp/efda9570-fb8e-43e9-9bc9-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#75](~/add/codesnippet/visualbasic/efda9570-fb8e-43e9-9bc9-_1.vb)]"
  syntax:
    content: public void DrawPie (System.Drawing.Pen pen, int x, int y, int width, int height, int startAngle, int sweepAngle);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>색, 너비 및 원형 도형의 스타일을 결정 하입니다."
    - id: x
      type: System.Int32
      description: "올 원형 도형이 발생 된 타원을 정의 하는 경계 사각형의 왼쪽 위 모퉁이의 x 좌표입니다."
    - id: y
      type: System.Int32
      description: "올 원형 도형이 발생 된 타원을 정의 하는 경계 사각형의 왼쪽 위 모퉁이의 y 좌표입니다."
    - id: width
      type: System.Int32
      description: "올 원형 도형이 발생 된 타원을 정의 하는 경계 사각형의 너비입니다."
    - id: height
      type: System.Int32
      description: "올 원형 도형이 발생 된 타원을 정의 하는 경계 사각형의 높이입니다."
    - id: startAngle
      type: System.Int32
      description: "각도 원형 도형의 첫째 면까지 x 축에서 시계 방향으로 단위로 지정 합니다."
    - id: sweepAngle
      type: System.Int32
      description: "시계 방향으로 측정 한 각도 `startAngle` 원형 도형의 둘째 면까지 매개 변수입니다."
  overload: System.Drawing.Graphics.DrawPie*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  id: DrawPie(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawPie(Pen,Single,Single,Single,Single,Single,Single)
  nameWithType: Graphics.DrawPie(Pen,Single,Single,Single,Single,Single,Single)
  fullName: System.Drawing.Graphics.DrawPie(Pen,Single,Single,Single,Single,Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "좌표 쌍, 너비, 높이 및 두 개의 방사형 선에 의해 지정 된 타원으로 정의 되는 원형 도형을 그립니다."
  remarks: "이 메서드는 호의 끝점와 교차 하는 두 개의 방사형 선에 타원의 호에서 정의 되는 원형 도형을 그립니다. 타원에 설명 된 경계 사각형에 의해 정의 되는 `x`, `y`, `width`, 및 `height` 매개 변수입니다. 원형 도형이 구성에 정의 된 두 개의 방사형 선에 `startAngle` 및 `sweepAngle` 매개 변수 및 타원 방사형 선 들의 교차 사이의 호입니다.       경우는 `sweepAngle` 매개 변수가-360도 미만 360도 보다 크면, 360도 또는-360도 각각 처럼 처리 됩니다."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a black pen.  \n  \n-   Creates the position and size of a rectangle that bounds a complete ellipse.  \n  \n-   Defines the angles at which to start drawing (relative to the x axis) and through which to draw (both in a clockwise direction).  \n  \n-   Draws the pie segment to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#76](~/add/codesnippet/cpp/91960442-0c73-4809-a8b7-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#76](~/add/codesnippet/csharp/91960442-0c73-4809-a8b7-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#76](~/add/codesnippet/visualbasic/91960442-0c73-4809-a8b7-_1.vb)]"
  syntax:
    content: public void DrawPie (System.Drawing.Pen pen, float x, float y, float width, float height, float startAngle, float sweepAngle);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>색, 너비 및 원형 도형의 스타일을 결정 하입니다."
    - id: x
      type: System.Single
      description: "올 원형 도형이 발생 된 타원을 정의 하는 경계 사각형의 왼쪽 위 모퉁이의 x 좌표입니다."
    - id: y
      type: System.Single
      description: "올 원형 도형이 발생 된 타원을 정의 하는 경계 사각형의 왼쪽 위 모퉁이의 y 좌표입니다."
    - id: width
      type: System.Single
      description: "올 원형 도형이 발생 된 타원을 정의 하는 경계 사각형의 너비입니다."
    - id: height
      type: System.Single
      description: "올 원형 도형이 발생 된 타원을 정의 하는 경계 사각형의 높이입니다."
    - id: startAngle
      type: System.Single
      description: "각도 원형 도형의 첫째 면까지 x 축에서 시계 방향으로 단위로 지정 합니다."
    - id: sweepAngle
      type: System.Single
      description: "시계 방향으로 측정 한 각도 `startAngle` 원형 도형의 둘째 면까지 매개 변수입니다."
  overload: System.Drawing.Graphics.DrawPie*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawPolygon(System.Drawing.Pen,System.Drawing.Point[])
  id: DrawPolygon(System.Drawing.Pen,System.Drawing.Point[])
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawPolygon(Pen,Point[])
  nameWithType: Graphics.DrawPolygon(Pen,Point[])
  fullName: System.Drawing.Graphics.DrawPolygon(Pen,Point[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "배열에 의해 정의 된 다각형을 그립니다 <xref href=&quot;System.Drawing.Point&quot;> </xref> 구조입니다."
  remarks: "모든 쌍 배열에 두 개의 연속 된 지점에는 다각형의 한 쪽을 지정합니다. 또한 마지막 점과 배열의 첫 번째 점이 교차 하지 않을 경우 다각형의 마지막 쪽을 지정 합니다."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a black pen.  \n  \n-   Creates an array of seven points for the vertices of the polygon.  \n  \n-   Draws the polygon to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#78](~/add/codesnippet/cpp/m-system.drawing.graphic_24_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#78](~/add/codesnippet/csharp/m-system.drawing.graphic_24_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#78](~/add/codesnippet/visualbasic/m-system.drawing.graphic_24_1.vb)]"
  syntax:
    content: public void DrawPolygon (System.Drawing.Pen pen, System.Drawing.Point[] points);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>색, 너비 및 다각형의 스타일을 결정 하입니다."
    - id: points
      type: System.Drawing.Point[]
      description: "배열 <xref href=&quot;System.Drawing.Point&quot;> </xref> 다각형의 꼭 짓 점을 나타내는 구조입니다."
  overload: System.Drawing.Graphics.DrawPolygon*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawPolygon(System.Drawing.Pen,System.Drawing.PointF[])
  id: DrawPolygon(System.Drawing.Pen,System.Drawing.PointF[])
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawPolygon(Pen,PointF[])
  nameWithType: Graphics.DrawPolygon(Pen,PointF[])
  fullName: System.Drawing.Graphics.DrawPolygon(Pen,PointF[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "배열에 의해 정의 된 다각형을 그립니다 <xref href=&quot;System.Drawing.PointF&quot;> </xref> 구조입니다."
  remarks: "모든 쌍 배열에 두 개의 연속 된 지점에는 다각형의 한 쪽을 지정합니다. 또한 마지막 점과 배열 포인트의 첫 번째 일치 하지 않는 경우 다각형의 마지막 쪽을 지정 합니다."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a black pen.  \n  \n-   Creates an array of seven points for the vertices of the polygon.  \n  \n-   Draws the polygon to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#77](~/add/codesnippet/cpp/16b9f60c-1099-497e-96b6-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#77](~/add/codesnippet/csharp/16b9f60c-1099-497e-96b6-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#77](~/add/codesnippet/visualbasic/16b9f60c-1099-497e-96b6-_1.vb)]"
  syntax:
    content: public void DrawPolygon (System.Drawing.Pen pen, System.Drawing.PointF[] points);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>색, 너비 및 다각형의 스타일을 결정 하입니다."
    - id: points
      type: System.Drawing.PointF[]
      description: "배열 <xref href=&quot;System.Drawing.PointF&quot;> </xref> 다각형의 꼭 짓 점을 나타내는 구조입니다."
  overload: System.Drawing.Graphics.DrawPolygon*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>points</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawRectangle(System.Drawing.Pen,System.Drawing.Rectangle)
  id: DrawRectangle(System.Drawing.Pen,System.Drawing.Rectangle)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawRectangle(Pen,Rectangle)
  nameWithType: Graphics.DrawRectangle(Pen,Rectangle)
  fullName: System.Drawing.Graphics.DrawRectangle(Pen,Rectangle)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "지정 된 사각형을 그립니다는 <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 구조입니다."
  remarks: "그리는 방법에 대 한 내용은 <xref:System.Drawing.RectangleF>, 참조[DrawRectangles (펜, RectangleF\\[\\])](assetId:///M:System.Drawing.Graphics.DrawRectangles(System.Drawing.Pen,System.Drawing.RectangleF[])?qualifyHint=False&autoUpgrade=False).</xref:System.Drawing.RectangleF>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a black pen.  \n  \n-   Creates a rectangle.  \n  \n-   Draws the rectangle to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#79](~/add/codesnippet/cpp/7220a29d-c2cf-4eb5-a772-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#79](~/add/codesnippet/csharp/7220a29d-c2cf-4eb5-a772-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#79](~/add/codesnippet/visualbasic/7220a29d-c2cf-4eb5-a772-_1.vb)]"
  syntax:
    content: public void DrawRectangle (System.Drawing.Pen pen, System.Drawing.Rectangle rect);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "A <xref href=&quot;System.Drawing.Pen&quot;> </xref> 색, 너비 및 사각형의 스타일을 결정 하는 합니다."
    - id: rect
      type: System.Drawing.Rectangle
      description: "A <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 그릴 사각형을 나타내는 구조입니다."
  overload: System.Drawing.Graphics.DrawRectangle*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawRectangle(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)
  id: DrawRectangle(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawRectangle(Pen,Int32,Int32,Int32,Int32)
  nameWithType: Graphics.DrawRectangle(Pen,Int32,Int32,Int32,Int32)
  fullName: System.Drawing.Graphics.DrawRectangle(Pen,Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "좌표 쌍, 너비 및 높이로 지정 된 사각형을 그립니다."
  remarks: "그리는 방법에 대 한 내용은 <xref:System.Drawing.RectangleF>, 참조 [DrawRectangles (펜, RectangleF\\[\\])](assetId:///M:System.Drawing.Graphics.DrawRectangles(System.Drawing.Pen,System.Drawing.RectangleF[])?qualifyHint=False&autoUpgrade=False).</xref:System.Drawing.RectangleF>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a black pen.  \n  \n-   Creates the position and size of a rectangle.  \n  \n-   Draws the rectangle to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#80](~/add/codesnippet/cpp/7deab914-35e6-41bb-8525-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#80](~/add/codesnippet/csharp/7deab914-35e6-41bb-8525-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#80](~/add/codesnippet/visualbasic/7deab914-35e6-41bb-8525-_1.vb)]"
  syntax:
    content: public void DrawRectangle (System.Drawing.Pen pen, int x, int y, int width, int height);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>색, 너비 및 사각형의 스타일을 결정 하입니다."
    - id: x
      type: System.Int32
      description: "그릴 사각형의 왼쪽 위 모퉁이의 x 좌표입니다."
    - id: y
      type: System.Int32
      description: "그릴 사각형의 왼쪽 위 모퉁이의 y 좌표입니다."
    - id: width
      type: System.Int32
      description: "그릴 사각형의 너비입니다."
    - id: height
      type: System.Int32
      description: "그릴 사각형의 높이입니다."
  overload: System.Drawing.Graphics.DrawRectangle*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawRectangle(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)
  id: DrawRectangle(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawRectangle(Pen,Single,Single,Single,Single)
  nameWithType: Graphics.DrawRectangle(Pen,Single,Single,Single,Single)
  fullName: System.Drawing.Graphics.DrawRectangle(Pen,Single,Single,Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "좌표 쌍, 너비 및 높이로 지정 된 사각형을 그립니다."
  remarks: "그리는 방법에 대 한 내용은 <xref:System.Drawing.RectangleF>, 참조 [DrawRectangles (펜, RectangleF\\[\\])](assetId:///M:System.Drawing.Graphics.DrawRectangles(System.Drawing.Pen,System.Drawing.RectangleF[])?qualifyHint=False&autoUpgrade=False).</xref:System.Drawing.RectangleF>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a black pen.  \n  \n-   Creates the position and size of a rectangle.  \n  \n-   Draws the rectangle to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#81](~/add/codesnippet/cpp/02312e17-0d5f-4ea1-a1de-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#81](~/add/codesnippet/csharp/02312e17-0d5f-4ea1-a1de-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#81](~/add/codesnippet/visualbasic/02312e17-0d5f-4ea1-a1de-_1.vb)]"
  syntax:
    content: public void DrawRectangle (System.Drawing.Pen pen, float x, float y, float width, float height);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "A <xref href=&quot;System.Drawing.Pen&quot;> </xref> 색, 너비 및 사각형의 스타일을 결정 하는 합니다."
    - id: x
      type: System.Single
      description: "그릴 사각형의 왼쪽 위 모퉁이의 x 좌표입니다."
    - id: y
      type: System.Single
      description: "그릴 사각형의 왼쪽 위 모퉁이의 y 좌표입니다."
    - id: width
      type: System.Single
      description: "그릴 사각형의 너비입니다."
    - id: height
      type: System.Single
      description: "그릴 사각형의 높이입니다."
  overload: System.Drawing.Graphics.DrawRectangle*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawRectangles(System.Drawing.Pen,System.Drawing.Rectangle[])
  id: DrawRectangles(System.Drawing.Pen,System.Drawing.Rectangle[])
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawRectangles(Pen,Rectangle[])
  nameWithType: Graphics.DrawRectangles(Pen,Rectangle[])
  fullName: System.Drawing.Graphics.DrawRectangles(Pen,Rectangle[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "일련의 지정 된 사각형을 그립니다 <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 구조입니다."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a black pen.  \n  \n-   Creates an array of three rectangles.  \n  \n-   Draws the rectangles to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#82](~/add/codesnippet/cpp/fbc2bd3d-0796-4b81-9906-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#82](~/add/codesnippet/csharp/fbc2bd3d-0796-4b81-9906-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#82](~/add/codesnippet/visualbasic/fbc2bd3d-0796-4b81-9906-_1.vb)]"
  syntax:
    content: public void DrawRectangles (System.Drawing.Pen pen, System.Drawing.Rectangle[] rects);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>색, 너비 및 사각형 윤곽선의 스타일을 결정 하입니다."
    - id: rects
      type: System.Drawing.Rectangle[]
      description: "배열 <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 그릴 사각형을 나타내는입니다."
  overload: System.Drawing.Graphics.DrawRectangles*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>rects</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>rects</code>길이가&0; 인 배열이입니다."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawRectangles(System.Drawing.Pen,System.Drawing.RectangleF[])
  id: DrawRectangles(System.Drawing.Pen,System.Drawing.RectangleF[])
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawRectangles(Pen,RectangleF[])
  nameWithType: Graphics.DrawRectangles(Pen,RectangleF[])
  fullName: System.Drawing.Graphics.DrawRectangles(Pen,RectangleF[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "일련의 지정 된 사각형을 그립니다 <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> 구조입니다."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a black pen.  \n  \n-   Creates an array of three rectangles.  \n  \n-   Draws the rectangles to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#83](~/add/codesnippet/cpp/6724fe05-90a2-4c2b-9273-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#83](~/add/codesnippet/csharp/6724fe05-90a2-4c2b-9273-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#83](~/add/codesnippet/visualbasic/6724fe05-90a2-4c2b-9273-_1.vb)]"
  syntax:
    content: public void DrawRectangles (System.Drawing.Pen pen, System.Drawing.RectangleF[] rects);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "<xref href=&quot;System.Drawing.Pen&quot;></xref>색, 너비 및 사각형 윤곽선의 스타일을 결정 하입니다."
    - id: rects
      type: System.Drawing.RectangleF[]
      description: "배열 <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> 그릴 사각형을 나타내는입니다."
  overload: System.Drawing.Graphics.DrawRectangles*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pen</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>rects</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>rects</code>길이가&0; 인 배열이입니다."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF)
  id: DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawString(String,Font,Brush,PointF)
  nameWithType: Graphics.DrawString(String,Font,Brush,PointF)
  fullName: System.Drawing.Graphics.DrawString(String,Font,Brush,PointF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "지정 된 지정된 된 위치에 지정된 된 텍스트 문자열을 그립니다 <xref href=&quot;System.Drawing.Brush&quot;> </xref> 및 <xref href=&quot;System.Drawing.Font&quot;> </xref> 개체입니다."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a text string to draw.  \n  \n-   Defines the font as Arial (16pt).  \n  \n-   Creates a solid, black brush to draw with.  \n  \n-   Creates a point for the upper-left corner at which to draw the text.  \n  \n-   Draws the string to the screen using the font, brush, and destination point.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#84](~/add/codesnippet/cpp/e8b9f7ba-fcb1-40c1-b944-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#84](~/add/codesnippet/csharp/e8b9f7ba-fcb1-40c1-b944-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#84](~/add/codesnippet/visualbasic/e8b9f7ba-fcb1-40c1-b944-_1.vb)]"
  syntax:
    content: public void DrawString (string s, System.Drawing.Font font, System.Drawing.Brush brush, System.Drawing.PointF point);
    parameters:
    - id: s
      type: System.String
      description: "그릴 문자열입니다."
    - id: font
      type: System.Drawing.Font
      description: "<xref href=&quot;System.Drawing.Font&quot;></xref>문자열의 텍스트 서식을 정의합니다."
    - id: brush
      type: System.Drawing.Brush
      description: "<xref href=&quot;System.Drawing.Brush&quot;></xref>색과 그려지는 텍스트의 질감을 결정 하입니다."
    - id: point
      type: System.Drawing.PointF
      description: "<xref href=&quot;System.Drawing.PointF&quot;></xref>그려지는 텍스트의 왼쪽 위 모퉁이 지정 하는 구조입니다."
  overload: System.Drawing.Graphics.DrawString*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>brush</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>s</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF)
  id: DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawString(String,Font,Brush,RectangleF)
  nameWithType: Graphics.DrawString(String,Font,Brush,RectangleF)
  fullName: System.Drawing.Graphics.DrawString(String,Font,Brush,RectangleF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "지정 된 지정된 된 사각형에 지정된 된 텍스트 문자열을 그립니다 <xref href=&quot;System.Drawing.Brush&quot;> </xref> 및 <xref href=&quot;System.Drawing.Font&quot;> </xref> 개체입니다."
  remarks: "나타내는 텍스트는 `s` 매개 변수를 나타내는 사각형 안에 그리기는 `layoutRectangle` 매개 변수입니다. 텍스트 사각형에 맞지 않으면 가장 가까운 단어에서 잘립니다. 추가 문자열을 사각형 안에 그려지는 방법을 조작 하기 위한 <xref:System.Drawing.Graphics.DrawString%2A>오버 로드에 <xref:System.Drawing.StringFormat>.</xref:System.Drawing.StringFormat> 생긴다는</xref:System.Drawing.Graphics.DrawString%2A>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a text string to draw.  \n  \n-   Defines the font as Arial (16pt).  \n  \n-   Creates a solid, black brush to draw with.  \n  \n-   Creates a rectangle in which to draw the text.  \n  \n-   Draws the rectangle to the screen.  \n  \n-   Draws the string to the screen using the font, brush, and destination rectangle.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#86](~/add/codesnippet/cpp/88dcbdf3-31ac-495d-b92e-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#86](~/add/codesnippet/csharp/88dcbdf3-31ac-495d-b92e-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#86](~/add/codesnippet/visualbasic/88dcbdf3-31ac-495d-b92e-_1.vb)]"
  syntax:
    content: public void DrawString (string s, System.Drawing.Font font, System.Drawing.Brush brush, System.Drawing.RectangleF layoutRectangle);
    parameters:
    - id: s
      type: System.String
      description: "그릴 문자열입니다."
    - id: font
      type: System.Drawing.Font
      description: "<xref href=&quot;System.Drawing.Font&quot;></xref>문자열의 텍스트 서식을 정의합니다."
    - id: brush
      type: System.Drawing.Brush
      description: "<xref href=&quot;System.Drawing.Brush&quot;></xref>색과 그려지는 텍스트의 질감을 결정 하입니다."
    - id: layoutRectangle
      type: System.Drawing.RectangleF
      description: "<xref href=&quot;System.Drawing.RectangleF&quot;></xref>그려지는 텍스트의 위치를 지정 하는 구조입니다."
  overload: System.Drawing.Graphics.DrawString*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>brush</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>s</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF,System.Drawing.StringFormat)
  id: DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF,System.Drawing.StringFormat)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawString(String,Font,Brush,PointF,StringFormat)
  nameWithType: Graphics.DrawString(String,Font,Brush,PointF,StringFormat)
  fullName: System.Drawing.Graphics.DrawString(String,Font,Brush,PointF,StringFormat)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "지정 된 지정된 된 위치에 지정된 된 텍스트 문자열을 그립니다 <xref href=&quot;System.Drawing.Brush&quot;> </xref> 및 <xref href=&quot;System.Drawing.Font&quot;> </xref> 개체의 서식 특성을 사용 하 여 <xref href=&quot;System.Drawing.StringFormat&quot;> </xref>합니다."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a text string to draw.  \n  \n-   Defines the font as Arial (16pt).  \n  \n-   Creates a solid, black brush to draw with.  \n  \n-   Creates a point for the upper-left corner at which to draw the text.  \n  \n-   Sets the format of the string to draw vertically.  \n  \n-   Draws the string to the screen using the font, brush, destination point, and format.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#85](~/add/codesnippet/cpp/9695d0f1-6916-4c96-a710-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#85](~/add/codesnippet/csharp/9695d0f1-6916-4c96-a710-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#85](~/add/codesnippet/visualbasic/9695d0f1-6916-4c96-a710-_1.vb)]"
  syntax:
    content: public void DrawString (string s, System.Drawing.Font font, System.Drawing.Brush brush, System.Drawing.PointF point, System.Drawing.StringFormat format);
    parameters:
    - id: s
      type: System.String
      description: "그릴 문자열입니다."
    - id: font
      type: System.Drawing.Font
      description: "<xref href=&quot;System.Drawing.Font&quot;></xref>문자열의 텍스트 서식을 정의합니다."
    - id: brush
      type: System.Drawing.Brush
      description: "<xref href=&quot;System.Drawing.Brush&quot;></xref>색과 그려지는 텍스트의 질감을 결정 하입니다."
    - id: point
      type: System.Drawing.PointF
      description: "<xref href=&quot;System.Drawing.PointF&quot;></xref>그려지는 텍스트의 왼쪽 위 모퉁이 지정 하는 구조입니다."
    - id: format
      type: System.Drawing.StringFormat
      description: "<xref href=&quot;System.Drawing.StringFormat&quot;></xref>그려지는 텍스트에 적용 되는 줄 간격 및 맞춤과 같은 서식 특성을 지정 하는 합니다."
  overload: System.Drawing.Graphics.DrawString*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>brush</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>s</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF,System.Drawing.StringFormat)
  id: DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF,System.Drawing.StringFormat)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawString(String,Font,Brush,RectangleF,StringFormat)
  nameWithType: Graphics.DrawString(String,Font,Brush,RectangleF,StringFormat)
  fullName: System.Drawing.Graphics.DrawString(String,Font,Brush,RectangleF,StringFormat)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "지정 된 지정된 된 사각형에 지정된 된 텍스트 문자열을 그립니다 <xref href=&quot;System.Drawing.Brush&quot;> </xref> 및 <xref href=&quot;System.Drawing.Font&quot;> </xref> 개체의 서식 특성을 사용 하 여 <xref href=&quot;System.Drawing.StringFormat&quot;> </xref>합니다."
  remarks: "나타내는 텍스트는 `s` 매개 변수를 나타내는 사각형 안에 그리기는 `layoutRectangle` 매개 변수입니다. 텍스트 사각형에 맞지 않으면 잘립니다 가장 가까운 단어에서 지정 하지 않으면는 `format` 매개 변수입니다."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a text string to draw.  \n  \n-   Defines the font as Arial (16pt).  \n  \n-   Creates a solid, black brush to draw with.  \n  \n-   Creates a rectangle in which to draw the text.  \n  \n-   Draws the rectangle to the screen.  \n  \n-   Sets the format of the string to center it within the rectangle.  \n  \n-   Draws the string to the screen using the font, brush, and destination rectangle.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#87](~/add/codesnippet/cpp/711c2875-30db-41dc-b400-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#87](~/add/codesnippet/csharp/711c2875-30db-41dc-b400-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#87](~/add/codesnippet/visualbasic/711c2875-30db-41dc-b400-_1.vb)]"
  syntax:
    content: public void DrawString (string s, System.Drawing.Font font, System.Drawing.Brush brush, System.Drawing.RectangleF layoutRectangle, System.Drawing.StringFormat format);
    parameters:
    - id: s
      type: System.String
      description: "그릴 문자열입니다."
    - id: font
      type: System.Drawing.Font
      description: "<xref href=&quot;System.Drawing.Font&quot;></xref>문자열의 텍스트 서식을 정의합니다."
    - id: brush
      type: System.Drawing.Brush
      description: "<xref href=&quot;System.Drawing.Brush&quot;></xref>색과 그려지는 텍스트의 질감을 결정 하입니다."
    - id: layoutRectangle
      type: System.Drawing.RectangleF
      description: "<xref href=&quot;System.Drawing.RectangleF&quot;></xref>그려지는 텍스트의 위치를 지정 하는 구조입니다."
    - id: format
      type: System.Drawing.StringFormat
      description: "<xref href=&quot;System.Drawing.StringFormat&quot;></xref>그려지는 텍스트에 적용 되는 줄 간격 및 맞춤과 같은 서식 특성을 지정 하는 합니다."
  overload: System.Drawing.Graphics.DrawString*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>brush</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>s</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Single,System.Single)
  id: DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Single,System.Single)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawString(String,Font,Brush,Single,Single)
  nameWithType: Graphics.DrawString(String,Font,Brush,Single,Single)
  fullName: System.Drawing.Graphics.DrawString(String,Font,Brush,Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "지정 된 지정된 된 위치에 지정된 된 텍스트 문자열을 그립니다 <xref href=&quot;System.Drawing.Brush&quot;> </xref> 및 <xref href=&quot;System.Drawing.Font&quot;> </xref> 개체입니다."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a text string to draw.  \n  \n-   Defines the font as Arial (16pt).  \n  \n-   Creates a solid black brush to draw with.  \n  \n-   Creates a point for the upper-left corner at which to draw the text.  \n  \n-   Draws the string to the screen using the font, brush, and destination point.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#88](~/add/codesnippet/cpp/770eeee0-f64d-405f-a03c-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#88](~/add/codesnippet/csharp/770eeee0-f64d-405f-a03c-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#88](~/add/codesnippet/visualbasic/770eeee0-f64d-405f-a03c-_1.vb)]"
  syntax:
    content: public void DrawString (string s, System.Drawing.Font font, System.Drawing.Brush brush, float x, float y);
    parameters:
    - id: s
      type: System.String
      description: "그릴 문자열입니다."
    - id: font
      type: System.Drawing.Font
      description: "<xref href=&quot;System.Drawing.Font&quot;></xref>문자열의 텍스트 서식을 정의합니다."
    - id: brush
      type: System.Drawing.Brush
      description: "<xref href=&quot;System.Drawing.Brush&quot;></xref>색과 그려지는 텍스트의 질감을 결정 하입니다."
    - id: x
      type: System.Single
      description: "그려지는 텍스트의 왼쪽 위 모퉁이의 x 좌표입니다."
    - id: y
      type: System.Single
      description: "그려지는 텍스트의 왼쪽 위 모퉁이의 y 좌표입니다."
  overload: System.Drawing.Graphics.DrawString*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>brush</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>s</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Single,System.Single,System.Drawing.StringFormat)
  id: DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Single,System.Single,System.Drawing.StringFormat)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: DrawString(String,Font,Brush,Single,Single,StringFormat)
  nameWithType: Graphics.DrawString(String,Font,Brush,Single,Single,StringFormat)
  fullName: System.Drawing.Graphics.DrawString(String,Font,Brush,Single,Single,StringFormat)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "지정 된 지정된 된 위치에 지정된 된 텍스트 문자열을 그립니다 <xref href=&quot;System.Drawing.Brush&quot;> </xref> 및 <xref href=&quot;System.Drawing.Font&quot;> </xref> 개체의 서식 특성을 사용 하 여 <xref href=&quot;System.Drawing.StringFormat&quot;> </xref>합니다."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a text string to draw.  \n  \n-   Defines the font as Arial (16pt).  \n  \n-   Creates a solid, black brush to draw with.  \n  \n-   Creates the coordinates of a point for the upper-left corner at which to draw the text.  \n  \n-   Sets the format of the string to draw vertically  \n  \n-   Draws the string to the screen using the font, brush, destination point, and format.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#89](~/add/codesnippet/cpp/d180666f-5277-4a3e-9c46-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#89](~/add/codesnippet/csharp/d180666f-5277-4a3e-9c46-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#89](~/add/codesnippet/visualbasic/d180666f-5277-4a3e-9c46-_1.vb)]"
  syntax:
    content: public void DrawString (string s, System.Drawing.Font font, System.Drawing.Brush brush, float x, float y, System.Drawing.StringFormat format);
    parameters:
    - id: s
      type: System.String
      description: "그릴 문자열입니다."
    - id: font
      type: System.Drawing.Font
      description: "<xref href=&quot;System.Drawing.Font&quot;></xref>문자열의 텍스트 서식을 정의합니다."
    - id: brush
      type: System.Drawing.Brush
      description: "<xref href=&quot;System.Drawing.Brush&quot;></xref>색과 그려지는 텍스트의 질감을 결정 하입니다."
    - id: x
      type: System.Single
      description: "그려지는 텍스트의 왼쪽 위 모퉁이의 x 좌표입니다."
    - id: y
      type: System.Single
      description: "그려지는 텍스트의 왼쪽 위 모퉁이의 y 좌표입니다."
    - id: format
      type: System.Drawing.StringFormat
      description: "<xref href=&quot;System.Drawing.StringFormat&quot;></xref>그려지는 텍스트에 적용 되는 줄 간격 및 맞춤과 같은 서식 특성을 지정 하는 합니다."
  overload: System.Drawing.Graphics.DrawString*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>brush</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>s</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.EndContainer(System.Drawing.Drawing2D.GraphicsContainer)
  id: EndContainer(System.Drawing.Drawing2D.GraphicsContainer)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EndContainer(GraphicsContainer)
  nameWithType: Graphics.EndContainer(GraphicsContainer)
  fullName: System.Drawing.Graphics.EndContainer(GraphicsContainer)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "현재 그래픽 컨테이너를 닫고이 항목의 상태를 복원 <xref href=&quot;System.Drawing.Graphics&quot;> </xref> 를 호출 하 여 저장 된 상태로 <xref:System.Drawing.Graphics.BeginContainer*>메서드.</xref:System.Drawing.Graphics.BeginContainer*>"
  remarks: "이 메서드를 사용 하 여는 <xref:System.Drawing.Graphics.BeginContainer%2A>중첩 된 graphics 컨테이너를 만드는 메서드를.</xref:System.Drawing.Graphics.BeginContainer%2A> 그래픽 컨테이너 변환, 클리핑 영역 렌더링 속성과 같은 그래픽 상태를 유지합니다.       호출 하는 경우는 <xref:System.Drawing.Graphics.BeginContainer%2A>의 메서드는 <xref:System.Drawing.Graphics>의 상태를 유지 하는 정보 블록이 <xref:System.Drawing.Graphics>스택에 배치 됩니다.</xref:System.Drawing.Graphics> </xref:System.Drawing.Graphics> </xref:System.Drawing.Graphics.BeginContainer%2A> <xref:System.Drawing.Graphics.BeginContainer%2A>메서드가 반환 되는 <xref:System.Drawing.Drawing2D.GraphicsContainer>해당 정보 블록을 식별 하는.</xref:System.Drawing.Drawing2D.GraphicsContainer> </xref:System.Drawing.Graphics.BeginContainer%2A> 정보 블록이 EndContainer 메서드를 식별 하는 개체를 전달 하는 경우 스택에서 제거 하 고 복원 하는 데 사용 되는 <xref:System.Drawing.Graphics>시의 상태로에 <xref:System.Drawing.Graphics.BeginContainer%2A>메서드를 호출 합니다.</xref:System.Drawing.Graphics.BeginContainer%2A> </xref:System.Drawing.Graphics>       컨테이너는 중첩 될 수 있습니다. 즉, 호출 수는 <xref:System.Drawing.Graphics.BeginContainer%2A>EndContainer 메서드를 호출 하기 전에 여러 번.</xref:System.Drawing.Graphics.BeginContainer%2A> 호출할 때마다는 <xref:System.Drawing.Graphics.BeginContainer%2A>스택에 정보 블록이 놓입니다 메서드와 나타나면는 <xref:System.Drawing.Drawing2D.GraphicsContainer>정보 블록에 대 한.</xref:System.Drawing.Drawing2D.GraphicsContainer> </xref:System.Drawing.Graphics.BeginContainer%2A> 이 중에서 개체 <xref:System.Drawing.Graphics>는 <xref:System.Drawing.Graphics.BeginContainer%2A>메서드를 호출 하는 해당 특정 <xref:System.Drawing.Drawing2D.GraphicsContainer>.</xref:System.Drawing.Drawing2D.GraphicsContainer> 반환</xref:System.Drawing.Graphics.BeginContainer%2A> 시의 상태로 되돌아갑니다</xref:System.Drawing.Graphics> EndContainer 메서드를 전달 하는 경우 하 여 스택에 정보 블록이 배치 <xref:System.Drawing.Graphics.BeginContainer%2A>메서드 호출 스택에서 제거 되 고 그 후 해당 스택에 배치 하는 모든 정보 블록 <xref:System.Drawing.Graphics.BeginContainer%2A>메서드 호출 또한 제거 됩니다.</xref:System.Drawing.Graphics.BeginContainer%2A> </xref:System.Drawing.Graphics.BeginContainer%2A>       에 대 한 호출이 <xref:System.Drawing.Graphics.Save%2A>메서드 위치 정보 블록 수에 대 한 호출으로 동일한 스택에 <xref:System.Drawing.Graphics.BeginContainer%2A>메서드.</xref:System.Drawing.Graphics.BeginContainer%2A> </xref:System.Drawing.Graphics.Save%2A> EndContainer 처럼 메서드 호출 쌍을 이룹니다는 <xref:System.Drawing.Graphics.BeginContainer%2A>메서드 호출에서는 <xref:System.Drawing.Graphics.Restore%2A>은 메서드 호출을 이룹니다는 <xref:System.Drawing.Graphics.Save%2A>메서드를 호출 합니다.</xref:System.Drawing.Graphics.Save%2A> </xref:System.Drawing.Graphics.Restore%2A> </xref:System.Drawing.Graphics.BeginContainer%2A>       스택에 배치 EndContainer 메서드를 호출할 때 모든 정보 블록 (여는 <xref:System.Drawing.Graphics.Save%2A>메서드 또는 <xref:System.Drawing.Graphics.BeginContainer%2A>메서드)를 호출 후는 <xref:System.Drawing.Graphics.BeginContainer%2A>메서드 스택에서 제거 됩니다.</xref:System.Drawing.Graphics.BeginContainer%2A> </xref:System.Drawing.Graphics.BeginContainer%2A> </xref:System.Drawing.Graphics.Save%2A> 마찬가지로, 호출 하는 경우는 <xref:System.Drawing.Graphics.Restore%2A>메서드를 스택에 배치 된 모든 정보 블록 (여는 <xref:System.Drawing.Graphics.Save%2A>메서드 또는 <xref:System.Drawing.Graphics.BeginContainer%2A>메서드)를 호출 후는 <xref:System.Drawing.Graphics.Save%2A>메서드 스택에서 제거 됩니다.</xref:System.Drawing.Graphics.Save%2A> </xref:System.Drawing.Graphics.BeginContainer%2A> </xref:System.Drawing.Graphics.Save%2A> </xref:System.Drawing.Graphics.Restore%2A>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Opens a new graphics container and saves the old container.  \n  \n-   Translates the world coordinates in the container.  \n  \n-   Fills a red rectangle in the (translated coordinates of the) new container.  \n  \n-   Closes the new container and restores the saved container.  \n  \n-   Fills a green rectangle (to the untranslated coordinates) of the saved container.  \n  \n The result is a green rectangle that overlies a red rectangle of the same size.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#90](~/add/codesnippet/cpp/e4c99678-fc56-4e9c-af9b-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#90](~/add/codesnippet/csharp/e4c99678-fc56-4e9c-af9b-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#90](~/add/codesnippet/visualbasic/e4c99678-fc56-4e9c-af9b-_1.vb)]"
  syntax:
    content: public void EndContainer (System.Drawing.Drawing2D.GraphicsContainer container);
    parameters:
    - id: container
      type: System.Drawing.Drawing2D.GraphicsContainer
      description: "<xref href=&quot;System.Drawing.Drawing2D.GraphicsContainer&quot;></xref>이 메서드를 복원 하는 컨테이너를 나타내는입니다."
  overload: System.Drawing.Graphics.EndContainer*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,Point,Graphics+EnumerateMetafileProc)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Point,Graphics+EnumerateMetafileProc)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Point,Graphics+EnumerateMetafileProc)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Point destPoint, System.Drawing.Graphics.EnumerateMetafileProc callback);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "추가할 수 있습니다."
    - id: destPoint
      type: System.Drawing.Point
      description: "추가할 수 있습니다."
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "추가할 수 있습니다."
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,Point[],Graphics+EnumerateMetafileProc)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Point[],Graphics+EnumerateMetafileProc)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Point[],Graphics+EnumerateMetafileProc)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Point[] destPoints, System.Drawing.Graphics.EnumerateMetafileProc callback);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "추가할 수 있습니다."
    - id: destPoints
      type: System.Drawing.Point[]
      description: "추가할 수 있습니다."
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "추가할 수 있습니다."
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,PointF,Graphics+EnumerateMetafileProc)
  nameWithType: Graphics.EnumerateMetafile(Metafile,PointF,Graphics+EnumerateMetafileProc)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,PointF,Graphics+EnumerateMetafileProc)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.PointF destPoint, System.Drawing.Graphics.EnumerateMetafileProc callback);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "추가할 수 있습니다."
    - id: destPoint
      type: System.Drawing.PointF
      description: "추가할 수 있습니다."
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "추가할 수 있습니다."
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,PointF[],Graphics+EnumerateMetafileProc)
  nameWithType: Graphics.EnumerateMetafile(Metafile,PointF[],Graphics+EnumerateMetafileProc)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,PointF[],Graphics+EnumerateMetafileProc)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.PointF[] destPoints, System.Drawing.Graphics.EnumerateMetafileProc callback);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "추가할 수 있습니다."
    - id: destPoints
      type: System.Drawing.PointF[]
      description: "추가할 수 있습니다."
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "추가할 수 있습니다."
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Graphics.EnumerateMetafileProc)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Graphics.EnumerateMetafileProc)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,Rectangle,Graphics+EnumerateMetafileProc)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Rectangle,Graphics+EnumerateMetafileProc)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Rectangle,Graphics+EnumerateMetafileProc)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Rectangle destRect, System.Drawing.Graphics.EnumerateMetafileProc callback);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "추가할 수 있습니다."
    - id: destRect
      type: System.Drawing.Rectangle
      description: "추가할 수 있습니다."
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "추가할 수 있습니다."
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,RectangleF,Graphics+EnumerateMetafileProc)
  nameWithType: Graphics.EnumerateMetafile(Metafile,RectangleF,Graphics+EnumerateMetafileProc)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,RectangleF,Graphics+EnumerateMetafileProc)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.RectangleF destRect, System.Drawing.Graphics.EnumerateMetafileProc callback);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "추가할 수 있습니다."
    - id: destRect
      type: System.Drawing.RectangleF
      description: "추가할 수 있습니다."
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "추가할 수 있습니다."
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,Point,Graphics+EnumerateMetafileProc,IntPtr)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Point,Graphics+EnumerateMetafileProc,IntPtr)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Point,Graphics+EnumerateMetafileProc,IntPtr)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Point destPoint, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "추가할 수 있습니다."
    - id: destPoint
      type: System.Drawing.Point
      description: "추가할 수 있습니다."
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "추가할 수 있습니다."
    - id: callbackData
      type: System.IntPtr
      description: "추가할 수 있습니다."
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,Point[],Graphics+EnumerateMetafileProc,IntPtr)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Point[],Graphics+EnumerateMetafileProc,IntPtr)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Point[],Graphics+EnumerateMetafileProc,IntPtr)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Point[] destPoints, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "추가할 수 있습니다."
    - id: destPoints
      type: System.Drawing.Point[]
      description: "추가할 수 있습니다."
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "추가할 수 있습니다."
    - id: callbackData
      type: System.IntPtr
      description: "추가할 수 있습니다."
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,PointF,Graphics+EnumerateMetafileProc,IntPtr)
  nameWithType: Graphics.EnumerateMetafile(Metafile,PointF,Graphics+EnumerateMetafileProc,IntPtr)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,PointF,Graphics+EnumerateMetafileProc,IntPtr)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.PointF destPoint, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "추가할 수 있습니다."
    - id: destPoint
      type: System.Drawing.PointF
      description: "추가할 수 있습니다."
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "추가할 수 있습니다."
    - id: callbackData
      type: System.IntPtr
      description: "추가할 수 있습니다."
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,PointF[],Graphics+EnumerateMetafileProc,IntPtr)
  nameWithType: Graphics.EnumerateMetafile(Metafile,PointF[],Graphics+EnumerateMetafileProc,IntPtr)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,PointF[],Graphics+EnumerateMetafileProc,IntPtr)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.PointF[] destPoints, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "추가할 수 있습니다."
    - id: destPoints
      type: System.Drawing.PointF[]
      description: "추가할 수 있습니다."
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "추가할 수 있습니다."
    - id: callbackData
      type: System.IntPtr
      description: "추가할 수 있습니다."
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,Rectangle,Graphics+EnumerateMetafileProc,IntPtr)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Rectangle,Graphics+EnumerateMetafileProc,IntPtr)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Rectangle,Graphics+EnumerateMetafileProc,IntPtr)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Rectangle destRect, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "추가할 수 있습니다."
    - id: destRect
      type: System.Drawing.Rectangle
      description: "추가할 수 있습니다."
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "추가할 수 있습니다."
    - id: callbackData
      type: System.IntPtr
      description: "추가할 수 있습니다."
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,RectangleF,Graphics+EnumerateMetafileProc,IntPtr)
  nameWithType: Graphics.EnumerateMetafile(Metafile,RectangleF,Graphics+EnumerateMetafileProc,IntPtr)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,RectangleF,Graphics+EnumerateMetafileProc,IntPtr)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.RectangleF destRect, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "추가할 수 있습니다."
    - id: destRect
      type: System.Drawing.RectangleF
      description: "추가할 수 있습니다."
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "추가할 수 있습니다."
    - id: callbackData
      type: System.IntPtr
      description: "추가할 수 있습니다."
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,Point,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Point,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Point,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Point destPoint, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData, System.Drawing.Imaging.ImageAttributes imageAttr);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "추가할 수 있습니다."
    - id: destPoint
      type: System.Drawing.Point
      description: "추가할 수 있습니다."
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "추가할 수 있습니다."
    - id: callbackData
      type: System.IntPtr
      description: "추가할 수 있습니다."
    - id: imageAttr
      type: System.Drawing.Imaging.ImageAttributes
      description: "추가할 수 있습니다."
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,Point,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Point,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Point,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Point destPoint, System.Drawing.Rectangle srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Graphics.EnumerateMetafileProc callback);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "추가할 수 있습니다."
    - id: destPoint
      type: System.Drawing.Point
      description: "추가할 수 있습니다."
    - id: srcRect
      type: System.Drawing.Rectangle
      description: "추가할 수 있습니다."
    - id: srcUnit
      type: System.Drawing.GraphicsUnit
      description: "추가할 수 있습니다."
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "추가할 수 있습니다."
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,Point[],Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Point[],Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Point[],Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Point[] destPoints, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData, System.Drawing.Imaging.ImageAttributes imageAttr);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "추가할 수 있습니다."
    - id: destPoints
      type: System.Drawing.Point[]
      description: "추가할 수 있습니다."
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "추가할 수 있습니다."
    - id: callbackData
      type: System.IntPtr
      description: "추가할 수 있습니다."
    - id: imageAttr
      type: System.Drawing.Imaging.ImageAttributes
      description: "추가할 수 있습니다."
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,Point[],Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Point[],Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Point[],Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Point[] destPoints, System.Drawing.Rectangle srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Graphics.EnumerateMetafileProc callback);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "추가할 수 있습니다."
    - id: destPoints
      type: System.Drawing.Point[]
      description: "추가할 수 있습니다."
    - id: srcRect
      type: System.Drawing.Rectangle
      description: "추가할 수 있습니다."
    - id: srcUnit
      type: System.Drawing.GraphicsUnit
      description: "추가할 수 있습니다."
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "추가할 수 있습니다."
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,PointF,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  nameWithType: Graphics.EnumerateMetafile(Metafile,PointF,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,PointF,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.PointF destPoint, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData, System.Drawing.Imaging.ImageAttributes imageAttr);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "추가할 수 있습니다."
    - id: destPoint
      type: System.Drawing.PointF
      description: "추가할 수 있습니다."
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "추가할 수 있습니다."
    - id: callbackData
      type: System.IntPtr
      description: "추가할 수 있습니다."
    - id: imageAttr
      type: System.Drawing.Imaging.ImageAttributes
      description: "추가할 수 있습니다."
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,PointF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc)
  nameWithType: Graphics.EnumerateMetafile(Metafile,PointF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,PointF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.PointF destPoint, System.Drawing.RectangleF srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Graphics.EnumerateMetafileProc callback);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "추가할 수 있습니다."
    - id: destPoint
      type: System.Drawing.PointF
      description: "추가할 수 있습니다."
    - id: srcRect
      type: System.Drawing.RectangleF
      description: "추가할 수 있습니다."
    - id: srcUnit
      type: System.Drawing.GraphicsUnit
      description: "추가할 수 있습니다."
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "추가할 수 있습니다."
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,PointF[],Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  nameWithType: Graphics.EnumerateMetafile(Metafile,PointF[],Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,PointF[],Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.PointF[] destPoints, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData, System.Drawing.Imaging.ImageAttributes imageAttr);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "추가할 수 있습니다."
    - id: destPoints
      type: System.Drawing.PointF[]
      description: "추가할 수 있습니다."
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "추가할 수 있습니다."
    - id: callbackData
      type: System.IntPtr
      description: "추가할 수 있습니다."
    - id: imageAttr
      type: System.Drawing.Imaging.ImageAttributes
      description: "추가할 수 있습니다."
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,PointF[],RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc)
  nameWithType: Graphics.EnumerateMetafile(Metafile,PointF[],RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,PointF[],RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Graphics.EnumerateMetafileProc callback);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "추가할 수 있습니다."
    - id: destPoints
      type: System.Drawing.PointF[]
      description: "추가할 수 있습니다."
    - id: srcRect
      type: System.Drawing.RectangleF
      description: "추가할 수 있습니다."
    - id: srcUnit
      type: System.Drawing.GraphicsUnit
      description: "추가할 수 있습니다."
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "추가할 수 있습니다."
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,Rectangle,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Rectangle,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Rectangle,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Rectangle destRect, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData, System.Drawing.Imaging.ImageAttributes imageAttr);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "추가할 수 있습니다."
    - id: destRect
      type: System.Drawing.Rectangle
      description: "추가할 수 있습니다."
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "추가할 수 있습니다."
    - id: callbackData
      type: System.IntPtr
      description: "추가할 수 있습니다."
    - id: imageAttr
      type: System.Drawing.Imaging.ImageAttributes
      description: "추가할 수 있습니다."
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,Rectangle,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Rectangle,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Rectangle,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Rectangle destRect, System.Drawing.Rectangle srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Graphics.EnumerateMetafileProc callback);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "추가할 수 있습니다."
    - id: destRect
      type: System.Drawing.Rectangle
      description: "추가할 수 있습니다."
    - id: srcRect
      type: System.Drawing.Rectangle
      description: "추가할 수 있습니다."
    - id: srcUnit
      type: System.Drawing.GraphicsUnit
      description: "추가할 수 있습니다."
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "추가할 수 있습니다."
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,RectangleF,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  nameWithType: Graphics.EnumerateMetafile(Metafile,RectangleF,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,RectangleF,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.RectangleF destRect, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData, System.Drawing.Imaging.ImageAttributes imageAttr);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "추가할 수 있습니다."
    - id: destRect
      type: System.Drawing.RectangleF
      description: "추가할 수 있습니다."
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "추가할 수 있습니다."
    - id: callbackData
      type: System.IntPtr
      description: "추가할 수 있습니다."
    - id: imageAttr
      type: System.Drawing.Imaging.ImageAttributes
      description: "추가할 수 있습니다."
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,RectangleF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc)
  nameWithType: Graphics.EnumerateMetafile(Metafile,RectangleF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,RectangleF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.RectangleF destRect, System.Drawing.RectangleF srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Graphics.EnumerateMetafileProc callback);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "추가할 수 있습니다."
    - id: destRect
      type: System.Drawing.RectangleF
      description: "추가할 수 있습니다."
    - id: srcRect
      type: System.Drawing.RectangleF
      description: "추가할 수 있습니다."
    - id: srcUnit
      type: System.Drawing.GraphicsUnit
      description: "추가할 수 있습니다."
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "추가할 수 있습니다."
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,Point,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Point,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Point,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Point destPoint, System.Drawing.Rectangle srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "추가할 수 있습니다."
    - id: destPoint
      type: System.Drawing.Point
      description: "추가할 수 있습니다."
    - id: srcRect
      type: System.Drawing.Rectangle
      description: "추가할 수 있습니다."
    - id: srcUnit
      type: System.Drawing.GraphicsUnit
      description: "추가할 수 있습니다."
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "추가할 수 있습니다."
    - id: callbackData
      type: System.IntPtr
      description: "추가할 수 있습니다."
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,Point[],Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Point[],Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Point[],Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Point[] destPoints, System.Drawing.Rectangle srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "추가할 수 있습니다."
    - id: destPoints
      type: System.Drawing.Point[]
      description: "추가할 수 있습니다."
    - id: srcRect
      type: System.Drawing.Rectangle
      description: "추가할 수 있습니다."
    - id: srcUnit
      type: System.Drawing.GraphicsUnit
      description: "추가할 수 있습니다."
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "추가할 수 있습니다."
    - id: callbackData
      type: System.IntPtr
      description: "추가할 수 있습니다."
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,PointF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
  nameWithType: Graphics.EnumerateMetafile(Metafile,PointF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,PointF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.PointF destPoint, System.Drawing.RectangleF srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "추가할 수 있습니다."
    - id: destPoint
      type: System.Drawing.PointF
      description: "추가할 수 있습니다."
    - id: srcRect
      type: System.Drawing.RectangleF
      description: "추가할 수 있습니다."
    - id: srcUnit
      type: System.Drawing.GraphicsUnit
      description: "추가할 수 있습니다."
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "추가할 수 있습니다."
    - id: callbackData
      type: System.IntPtr
      description: "추가할 수 있습니다."
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,PointF[],RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
  nameWithType: Graphics.EnumerateMetafile(Metafile,PointF[],RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,PointF[],RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "추가할 수 있습니다."
    - id: destPoints
      type: System.Drawing.PointF[]
      description: "추가할 수 있습니다."
    - id: srcRect
      type: System.Drawing.RectangleF
      description: "추가할 수 있습니다."
    - id: srcUnit
      type: System.Drawing.GraphicsUnit
      description: "추가할 수 있습니다."
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "추가할 수 있습니다."
    - id: callbackData
      type: System.IntPtr
      description: "추가할 수 있습니다."
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,Rectangle,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Rectangle,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Rectangle,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Rectangle destRect, System.Drawing.Rectangle srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "추가할 수 있습니다."
    - id: destRect
      type: System.Drawing.Rectangle
      description: "추가할 수 있습니다."
    - id: srcRect
      type: System.Drawing.Rectangle
      description: "추가할 수 있습니다."
    - id: srcUnit
      type: System.Drawing.GraphicsUnit
      description: "추가할 수 있습니다."
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "추가할 수 있습니다."
    - id: callbackData
      type: System.IntPtr
      description: "추가할 수 있습니다."
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,RectangleF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
  nameWithType: Graphics.EnumerateMetafile(Metafile,RectangleF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,RectangleF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.RectangleF destRect, System.Drawing.RectangleF srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "추가할 수 있습니다."
    - id: destRect
      type: System.Drawing.RectangleF
      description: "추가할 수 있습니다."
    - id: srcRect
      type: System.Drawing.RectangleF
      description: "추가할 수 있습니다."
    - id: srcUnit
      type: System.Drawing.GraphicsUnit
      description: "추가할 수 있습니다."
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "추가할 수 있습니다."
    - id: callbackData
      type: System.IntPtr
      description: "추가할 수 있습니다."
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,Point,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Point,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Point,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Point destPoint, System.Drawing.Rectangle srcRect, System.Drawing.GraphicsUnit unit, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData, System.Drawing.Imaging.ImageAttributes imageAttr);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "추가할 수 있습니다."
    - id: destPoint
      type: System.Drawing.Point
      description: "추가할 수 있습니다."
    - id: srcRect
      type: System.Drawing.Rectangle
      description: "추가할 수 있습니다."
    - id: unit
      type: System.Drawing.GraphicsUnit
      description: "추가할 수 있습니다."
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "추가할 수 있습니다."
    - id: callbackData
      type: System.IntPtr
      description: "추가할 수 있습니다."
    - id: imageAttr
      type: System.Drawing.Imaging.ImageAttributes
      description: "추가할 수 있습니다."
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,Point[],Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Point[],Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Point[],Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Point[] destPoints, System.Drawing.Rectangle srcRect, System.Drawing.GraphicsUnit unit, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData, System.Drawing.Imaging.ImageAttributes imageAttr);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "추가할 수 있습니다."
    - id: destPoints
      type: System.Drawing.Point[]
      description: "추가할 수 있습니다."
    - id: srcRect
      type: System.Drawing.Rectangle
      description: "추가할 수 있습니다."
    - id: unit
      type: System.Drawing.GraphicsUnit
      description: "추가할 수 있습니다."
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "추가할 수 있습니다."
    - id: callbackData
      type: System.IntPtr
      description: "추가할 수 있습니다."
    - id: imageAttr
      type: System.Drawing.Imaging.ImageAttributes
      description: "추가할 수 있습니다."
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,PointF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  nameWithType: Graphics.EnumerateMetafile(Metafile,PointF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,PointF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.PointF destPoint, System.Drawing.RectangleF srcRect, System.Drawing.GraphicsUnit unit, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData, System.Drawing.Imaging.ImageAttributes imageAttr);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "추가할 수 있습니다."
    - id: destPoint
      type: System.Drawing.PointF
      description: "추가할 수 있습니다."
    - id: srcRect
      type: System.Drawing.RectangleF
      description: "추가할 수 있습니다."
    - id: unit
      type: System.Drawing.GraphicsUnit
      description: "추가할 수 있습니다."
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "추가할 수 있습니다."
    - id: callbackData
      type: System.IntPtr
      description: "추가할 수 있습니다."
    - id: imageAttr
      type: System.Drawing.Imaging.ImageAttributes
      description: "추가할 수 있습니다."
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,PointF[],RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  nameWithType: Graphics.EnumerateMetafile(Metafile,PointF[],RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,PointF[],RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect, System.Drawing.GraphicsUnit unit, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData, System.Drawing.Imaging.ImageAttributes imageAttr);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "추가할 수 있습니다."
    - id: destPoints
      type: System.Drawing.PointF[]
      description: "추가할 수 있습니다."
    - id: srcRect
      type: System.Drawing.RectangleF
      description: "추가할 수 있습니다."
    - id: unit
      type: System.Drawing.GraphicsUnit
      description: "추가할 수 있습니다."
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "추가할 수 있습니다."
    - id: callbackData
      type: System.IntPtr
      description: "추가할 수 있습니다."
    - id: imageAttr
      type: System.Drawing.Imaging.ImageAttributes
      description: "추가할 수 있습니다."
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,Rectangle,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Rectangle,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Rectangle,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Rectangle destRect, System.Drawing.Rectangle srcRect, System.Drawing.GraphicsUnit unit, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData, System.Drawing.Imaging.ImageAttributes imageAttr);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "추가할 수 있습니다."
    - id: destRect
      type: System.Drawing.Rectangle
      description: "추가할 수 있습니다."
    - id: srcRect
      type: System.Drawing.Rectangle
      description: "추가할 수 있습니다."
    - id: unit
      type: System.Drawing.GraphicsUnit
      description: "추가할 수 있습니다."
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "추가할 수 있습니다."
    - id: callbackData
      type: System.IntPtr
      description: "추가할 수 있습니다."
    - id: imageAttr
      type: System.Drawing.Imaging.ImageAttributes
      description: "추가할 수 있습니다."
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  id: EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: EnumerateMetafile(Metafile,RectangleF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  nameWithType: Graphics.EnumerateMetafile(Metafile,RectangleF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,RectangleF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.RectangleF destRect, System.Drawing.RectangleF srcRect, System.Drawing.GraphicsUnit unit, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData, System.Drawing.Imaging.ImageAttributes imageAttr);
    parameters:
    - id: metafile
      type: System.Drawing.Imaging.Metafile
      description: "추가할 수 있습니다."
    - id: destRect
      type: System.Drawing.RectangleF
      description: "추가할 수 있습니다."
    - id: srcRect
      type: System.Drawing.RectangleF
      description: "추가할 수 있습니다."
    - id: unit
      type: System.Drawing.GraphicsUnit
      description: "추가할 수 있습니다."
    - id: callback
      type: System.Drawing.Graphics.EnumerateMetafileProc
      description: "추가할 수 있습니다."
    - id: callbackData
      type: System.IntPtr
      description: "추가할 수 있습니다."
    - id: imageAttr
      type: System.Drawing.Imaging.ImageAttributes
      description: "추가할 수 있습니다."
  overload: System.Drawing.Graphics.EnumerateMetafile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.ExcludeClip(System.Drawing.Rectangle)
  id: ExcludeClip(System.Drawing.Rectangle)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: ExcludeClip(Rectangle)
  nameWithType: Graphics.ExcludeClip(Rectangle)
  fullName: System.Drawing.Graphics.ExcludeClip(Rectangle)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이의 클립 영역을 업데이트 <xref href=&quot;System.Drawing.Graphics&quot;> </xref> 로 지정 된 영역을 제외는 <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 구조입니다."
  remarks: "이 메서드는 지정 된 영역을 제외는 `rect` 현재 클립 영역에서 매개 변수 및 결과 영역 <xref:System.Drawing.Graphics.Clip%2A> <xref:System.Drawing.Graphics>.</xref:System.Drawing.Graphics> 속성</xref:System.Drawing.Graphics.Clip%2A> 에 할당"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a 100 pixel by 100 pixel rectangle whose upper-left corner is at the coordinate (100, 100).  \n  \n-   Creates a region defined by the rectangle.  \n  \n-   Sets the clipping region to exclude the rectangular region.  \n  \n-   Fills a 300 pixel by 300 pixel rectangle whose upper-left corner is at the coordinate (0, 0) with a solid blue brush.  \n  \n The result is a blue rectangle with a square region toward its lower-right corner missing.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#92](~/add/codesnippet/cpp/m-system.drawing.graphic_0_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#92](~/add/codesnippet/csharp/m-system.drawing.graphic_0_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#92](~/add/codesnippet/visualbasic/m-system.drawing.graphic_0_1.vb)]"
  syntax:
    content: public void ExcludeClip (System.Drawing.Rectangle rect);
    parameters:
    - id: rect
      type: System.Drawing.Rectangle
      description: "<xref href=&quot;System.Drawing.Rectangle&quot;></xref>사각형이 클립 영역에서 제외 되도록 지정 하는 구조입니다."
  overload: System.Drawing.Graphics.ExcludeClip*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.ExcludeClip(System.Drawing.Region)
  id: ExcludeClip(System.Drawing.Region)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: ExcludeClip(Region)
  nameWithType: Graphics.ExcludeClip(Region)
  fullName: System.Drawing.Graphics.ExcludeClip(Region)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이의 클립 영역을 업데이트 <xref href=&quot;System.Drawing.Graphics&quot;> </xref> 로 지정 된 영역을 제외는 <xref href=&quot;System.Drawing.Region&quot;> </xref>합니다."
  remarks: "이 메서드는 지정 된 영역을 제외는 `region` 현재 클립 영역에서 매개 변수 및 결과 영역 <xref:System.Drawing.Graphics.Clip%2A> <xref:System.Drawing.Graphics>.</xref:System.Drawing.Graphics> 속성</xref:System.Drawing.Graphics.Clip%2A> 에 할당"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a 100 pixel by 100 pixel rectangle whose upper-left corner is at the coordinate (100, 100).  \n  \n-   Sets the clipping region to exclude the rectangle.  \n  \n-   Fills a 300 pixel by 300 pixel rectangle whose upper-left corner is at the coordinate (0, 0) with a solid blue brush.  \n  \n The result is a blue rectangle with a square area toward its lower-right corner missing.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#91](~/add/codesnippet/cpp/m-system.drawing.graphic_3_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#91](~/add/codesnippet/csharp/m-system.drawing.graphic_3_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#91](~/add/codesnippet/visualbasic/m-system.drawing.graphic_3_1.vb)]"
  syntax:
    content: public void ExcludeClip (System.Drawing.Region region);
    parameters:
    - id: region
      type: System.Drawing.Region
      description: "<xref href=&quot;System.Drawing.Region&quot;></xref>클립 영역에서 제외 되도록을 지정 합니다."
  overload: System.Drawing.Graphics.ExcludeClip*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[])
  id: FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[])
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: FillClosedCurve(Brush,Point[])
  nameWithType: Graphics.FillClosedCurve(Brush,Point[])
  fullName: System.Drawing.Graphics.FillClosedCurve(Brush,Point[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "배열에 의해 정의 되는 폐쇄형된 카디널 스플라인 곡선의 내부를 채웁니다 <xref href=&quot;System.Drawing.Point&quot;> </xref> 구조입니다."
  remarks: "이 메서드는 배열의 각 요소를 통해 전달 되는 폐쇄형된 카디널 스플라인의 내부를 채웁니다. 마지막 지점 첫 번째 요소와 일치 하지 않는 경우 추가 곡선 세그먼트 하 고 첫 번째을 닫으려면 마지막 지점에서 추가 됩니다.       점의 배열에&4; 개 이상 포함 되어야 <xref:System.Drawing.Point>구조.</xref:System.Drawing.Point>       이 메서드는 0.5의 기본 장력을 사용 합니다."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a solid red brush.  \n  \n-   Creates an array of four points to define a spline.  \n  \n-   Fills the curve on the screen.  \n  \n The curve has a default tension of 0.5.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#93](~/add/codesnippet/cpp/c7de0d70-1d4a-415d-8e0a-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#93](~/add/codesnippet/csharp/c7de0d70-1d4a-415d-8e0a-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#93](~/add/codesnippet/visualbasic/c7de0d70-1d4a-415d-8e0a-_1.vb)]"
  syntax:
    content: public void FillClosedCurve (System.Drawing.Brush brush, System.Drawing.Point[] points);
    parameters:
    - id: brush
      type: System.Drawing.Brush
      description: "<xref href=&quot;System.Drawing.Brush&quot;></xref>채우기의 특징을 결정 하 합니다."
    - id: points
      type: System.Drawing.Point[]
      description: "배열 <xref href=&quot;System.Drawing.Point&quot;> </xref> 스플라인을 정의 하는 구조입니다."
  overload: System.Drawing.Graphics.FillClosedCurve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>brush</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>points</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[])
  id: FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[])
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: FillClosedCurve(Brush,PointF[])
  nameWithType: Graphics.FillClosedCurve(Brush,PointF[])
  fullName: System.Drawing.Graphics.FillClosedCurve(Brush,PointF[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "배열에 의해 정의 되는 폐쇄형된 카디널 스플라인 곡선의 내부를 채웁니다 <xref href=&quot;System.Drawing.PointF&quot;> </xref> 구조입니다."
  remarks: "이 메서드는 배열의 각 요소를 통해 전달 되는 폐쇄형된 카디널 스플라인의 내부를 채웁니다. 마지막 지점 첫 번째 요소와 일치 하지 않는 경우 추가 곡선 세그먼트 하 고 첫 번째을 닫으려면 마지막 지점에서 추가 됩니다.       점의 배열에&4; 개 이상 포함 되어야 <xref:System.Drawing.PointF>구조.</xref:System.Drawing.PointF>       이 메서드는 0.5의 기본 장력을 사용 합니다."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a solid red brush.  \n  \n-   Creates an array of four points to define a spline.  \n  \n-   Fills the curve on the screen.  \n  \n The curve has a default tension of 0.5.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#96](~/add/codesnippet/cpp/27ae27b1-8fc7-46da-97c2-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#96](~/add/codesnippet/csharp/27ae27b1-8fc7-46da-97c2-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#96](~/add/codesnippet/visualbasic/27ae27b1-8fc7-46da-97c2-_1.vb)]"
  syntax:
    content: public void FillClosedCurve (System.Drawing.Brush brush, System.Drawing.PointF[] points);
    parameters:
    - id: brush
      type: System.Drawing.Brush
      description: "<xref href=&quot;System.Drawing.Brush&quot;></xref>채우기의 특징을 결정 하 합니다."
    - id: points
      type: System.Drawing.PointF[]
      description: "배열 <xref href=&quot;System.Drawing.PointF&quot;> </xref> 스플라인을 정의 하는 구조입니다."
  overload: System.Drawing.Graphics.FillClosedCurve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>brush</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>points</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode)
  id: FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: FillClosedCurve(Brush,Point[],FillMode)
  nameWithType: Graphics.FillClosedCurve(Brush,Point[],FillMode)
  fullName: System.Drawing.Graphics.FillClosedCurve(Brush,Point[],FillMode)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "배열에 의해 정의 되는 폐쇄형된 카디널 스플라인 곡선의 내부를 채웁니다 <xref href=&quot;System.Drawing.Point&quot;> </xref> 지정된 된 채우기 모드를 사용 하 여 구조입니다."
  remarks: "이 메서드는 배열의 각 요소를 통해 전달 되는 폐쇄형된 카디널 스플라인의 내부를 채웁니다. 마지막 지점 첫 번째 요소와 일치 하지 않는 경우 추가 곡선 세그먼트 하 고 첫 번째을 닫으려면 마지막 지점에서 추가 됩니다.       점의 배열에&4; 개 이상 포함 되어야 <xref:System.Drawing.Point>구조.</xref:System.Drawing.Point>       이 메서드는 0.5의 기본 장력을 사용 합니다."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a solid red brush.  \n  \n-   Creates an array of four points to define a spline.  \n  \n-   Sets the fill mode to <xref:System.Drawing.Drawing2D.FillMode>.  \n  \n-   Fills the curve on the screen.  \n  \n The curve has a default tension of 0.5.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#94](~/add/codesnippet/cpp/d8cdaeb5-d9cb-4113-8859-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#94](~/add/codesnippet/csharp/d8cdaeb5-d9cb-4113-8859-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#94](~/add/codesnippet/visualbasic/d8cdaeb5-d9cb-4113-8859-_1.vb)]"
  syntax:
    content: public void FillClosedCurve (System.Drawing.Brush brush, System.Drawing.Point[] points, System.Drawing.Drawing2D.FillMode fillmode);
    parameters:
    - id: brush
      type: System.Drawing.Brush
      description: "<xref href=&quot;System.Drawing.Brush&quot;></xref>채우기의 특징을 결정 하 합니다."
    - id: points
      type: System.Drawing.Point[]
      description: "배열 <xref href=&quot;System.Drawing.Point&quot;> </xref> 스플라인을 정의 하는 구조입니다."
    - id: fillmode
      type: System.Drawing.Drawing2D.FillMode
      description: "멤버는 <xref href=&quot;System.Drawing.Drawing2D.FillMode&quot;> </xref> 곡선이 채워지는 방법을 결정 하는 열거형입니다."
  overload: System.Drawing.Graphics.FillClosedCurve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>brush</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>points</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode)
  id: FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: FillClosedCurve(Brush,PointF[],FillMode)
  nameWithType: Graphics.FillClosedCurve(Brush,PointF[],FillMode)
  fullName: System.Drawing.Graphics.FillClosedCurve(Brush,PointF[],FillMode)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "배열에 의해 정의 되는 폐쇄형된 카디널 스플라인 곡선의 내부를 채웁니다 <xref href=&quot;System.Drawing.PointF&quot;> </xref> 지정된 된 채우기 모드를 사용 하 여 구조입니다."
  remarks: "이 메서드는 배열의 각 요소를 통해 전달 되는 폐쇄형된 카디널 스플라인의 내부를 채웁니다. 마지막 지점 첫 번째 요소와 일치 하지 않는 경우 추가 곡선 세그먼트 하 고 첫 번째을 닫으려면 마지막 지점에서 추가 됩니다.       점의 배열에&4; 개 이상 포함 되어야 <xref:System.Drawing.Point>구조.</xref:System.Drawing.Point>       이 메서드는 0.5의 기본 장력을 사용 합니다."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a solid red brush.  \n  \n-   Creates an array of four points to define a spline.  \n  \n-   Sets the fill mode to <xref:System.Drawing.Drawing2D.FillMode>.  \n  \n-   Fills the curve on the screen.  \n  \n The curve has a default tension of 0.5.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#97](~/add/codesnippet/cpp/eba35974-b853-45cc-982b-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#97](~/add/codesnippet/csharp/eba35974-b853-45cc-982b-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#97](~/add/codesnippet/visualbasic/eba35974-b853-45cc-982b-_1.vb)]"
  syntax:
    content: public void FillClosedCurve (System.Drawing.Brush brush, System.Drawing.PointF[] points, System.Drawing.Drawing2D.FillMode fillmode);
    parameters:
    - id: brush
      type: System.Drawing.Brush
      description: "<xref href=&quot;System.Drawing.Brush&quot;></xref>채우기의 특징을 결정 하 합니다."
    - id: points
      type: System.Drawing.PointF[]
      description: "배열 <xref href=&quot;System.Drawing.PointF&quot;> </xref> 스플라인을 정의 하는 구조입니다."
    - id: fillmode
      type: System.Drawing.Drawing2D.FillMode
      description: "멤버는 <xref href=&quot;System.Drawing.Drawing2D.FillMode&quot;> </xref> 곡선이 채워지는 방법을 결정 하는 열거형입니다."
  overload: System.Drawing.Graphics.FillClosedCurve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>brush</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>points</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode,System.Single)
  id: FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode,System.Single)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: FillClosedCurve(Brush,Point[],FillMode,Single)
  nameWithType: Graphics.FillClosedCurve(Brush,Point[],FillMode,Single)
  fullName: System.Drawing.Graphics.FillClosedCurve(Brush,Point[],FillMode,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "배열에 의해 정의 되는 폐쇄형된 카디널 스플라인 곡선의 내부를 채웁니다 <xref href=&quot;System.Drawing.Point&quot;> </xref> 지정 된 채우기 모드와 장력을 사용 하 여 구조입니다."
  remarks: "이 메서드는 배열의 각 요소를 통해 전달 되는 폐쇄형된 카디널 스플라인의 내부를 채웁니다. 마지막 지점 첫 번째 요소와 일치 하지 않는 경우 추가 곡선 세그먼트 하 고 첫 번째을 닫으려면 마지막 지점에서 추가 됩니다.       점의 배열에&4; 개 이상 포함 되어야 <xref:System.Drawing.Point>구조.</xref:System.Drawing.Point>       `tension` 매개 변수는 스플라인의 모양을 결정 합니다. 하는 경우의 값은 `tension` 매개 변수는 0.0 f,이 메서드는 요소를 연결 하는 직선 세그먼트를 그립니다. 일반적으로 `tension` 매개 변수는 1.0 f 보다 작습니다. 1.0 f에 따른 값 이상한 결과 생성 합니다."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a solid red brush.  \n  \n-   Creates an array of four points to define a spline.  \n  \n-   Sets the fill mode to <xref:System.Drawing.Drawing2D.FillMode>.  \n  \n-   Sets the tension to 1.0.  \n  \n-   Fills the curve on the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#95](~/add/codesnippet/cpp/a2a6c4a4-a444-44ec-86d2-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#95](~/add/codesnippet/csharp/a2a6c4a4-a444-44ec-86d2-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#95](~/add/codesnippet/visualbasic/a2a6c4a4-a444-44ec-86d2-_1.vb)]"
  syntax:
    content: public void FillClosedCurve (System.Drawing.Brush brush, System.Drawing.Point[] points, System.Drawing.Drawing2D.FillMode fillmode, float tension);
    parameters:
    - id: brush
      type: System.Drawing.Brush
      description: "<xref href=&quot;System.Drawing.Brush&quot;></xref>채우기의 특징을 결정 하 합니다."
    - id: points
      type: System.Drawing.Point[]
      description: "배열 <xref href=&quot;System.Drawing.Point&quot;> </xref> 스플라인을 정의 하는 구조입니다."
    - id: fillmode
      type: System.Drawing.Drawing2D.FillMode
      description: "멤버는 <xref href=&quot;System.Drawing.Drawing2D.FillMode&quot;> </xref> 곡선이 채워지는 방법을 결정 하는 열거형입니다."
    - id: tension
      type: System.Single
      description: "곡선의 장력을 지정 하는 0.0 f 보다 크거나 값입니다."
  overload: System.Drawing.Graphics.FillClosedCurve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>brush</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>points</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode,System.Single)
  id: FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode,System.Single)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: FillClosedCurve(Brush,PointF[],FillMode,Single)
  nameWithType: Graphics.FillClosedCurve(Brush,PointF[],FillMode,Single)
  fullName: System.Drawing.Graphics.FillClosedCurve(Brush,PointF[],FillMode,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "배열에 의해 정의 되는 폐쇄형된 카디널 스플라인 곡선의 내부를 채웁니다 <xref href=&quot;System.Drawing.PointF&quot;> </xref> 지정 된 채우기 모드와 장력을 사용 하 여 구조입니다."
  remarks: "이 메서드는 배열의 각 요소를 통해 전달 되는 폐쇄형된 카디널 스플라인의 내부를 채웁니다. 마지막 지점 첫 번째 요소와 일치 하지 않는 경우 추가 곡선 세그먼트 하 고 첫 번째을 닫으려면 마지막 지점에서 추가 됩니다.       점의 배열에&4; 개 이상 포함 되어야 <xref:System.Drawing.Point>구조.</xref:System.Drawing.Point>       `tension` 매개 변수는 스플라인의 모양을 결정 합니다. 하는 경우의 값은 `tension` 매개 변수는 0.0 f,이 메서드는 요소를 연결 하는 직선 세그먼트를 그립니다. 일반적으로 `tension` 매개 변수는 1.0 f 보다 작습니다. 1.0 f에 따른 값 이상한 결과 생성 합니다."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a solid red brush.  \n  \n-   Creates an array of four points to define a spline.  \n  \n-   Sets the fill mode to <xref:System.Drawing.Drawing2D.FillMode>.  \n  \n-   Sets the tension to 1.0.  \n  \n-   Fills the curve on the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#98](~/add/codesnippet/cpp/0df0de76-385f-475b-bd9e-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#98](~/add/codesnippet/csharp/0df0de76-385f-475b-bd9e-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#98](~/add/codesnippet/visualbasic/0df0de76-385f-475b-bd9e-_1.vb)]"
  syntax:
    content: public void FillClosedCurve (System.Drawing.Brush brush, System.Drawing.PointF[] points, System.Drawing.Drawing2D.FillMode fillmode, float tension);
    parameters:
    - id: brush
      type: System.Drawing.Brush
      description: "A <xref href=&quot;System.Drawing.Brush&quot;> </xref> 채우기의 특징을 결정 하는 합니다."
    - id: points
      type: System.Drawing.PointF[]
      description: "배열 <xref href=&quot;System.Drawing.PointF&quot;> </xref> 스플라인을 정의 하는 구조입니다."
    - id: fillmode
      type: System.Drawing.Drawing2D.FillMode
      description: "멤버는 <xref href=&quot;System.Drawing.Drawing2D.FillMode&quot;> </xref> 곡선이 채워지는 방법을 결정 하는 열거형입니다."
    - id: tension
      type: System.Single
      description: "곡선의 장력을 지정 하는 0.0 f 보다 크거나 값입니다."
  overload: System.Drawing.Graphics.FillClosedCurve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>brush</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>points</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Drawing.Rectangle)
  id: FillEllipse(System.Drawing.Brush,System.Drawing.Rectangle)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: FillEllipse(Brush,Rectangle)
  nameWithType: Graphics.FillEllipse(Brush,Rectangle)
  fullName: System.Drawing.Graphics.FillEllipse(Brush,Rectangle)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "로 지정 된 경계 사각형에 의해 정의 되는 타원의 내부를 채웁니다는 <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 구조입니다."
  remarks: "이 메서드에 <xref:System.Drawing.Brush>.</xref:System.Drawing.Brush> 되는 타원의 내부를 채웁니다. 타원이 나타내는 경계 사각형에 의해 정의 되는 `rect` 매개 변수입니다."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a solid red brush.  \n  \n-   Creates a rectangle that bounds an ellipse.  \n  \n-   Fills the ellipse on the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#99](~/add/codesnippet/cpp/1db3c93b-c561-45c2-82d1-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#99](~/add/codesnippet/csharp/1db3c93b-c561-45c2-82d1-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#99](~/add/codesnippet/visualbasic/1db3c93b-c561-45c2-82d1-_1.vb)]"
  syntax:
    content: public void FillEllipse (System.Drawing.Brush brush, System.Drawing.Rectangle rect);
    parameters:
    - id: brush
      type: System.Drawing.Brush
      description: "<xref href=&quot;System.Drawing.Brush&quot;></xref>채우기의 특징을 결정 하 합니다."
    - id: rect
      type: System.Drawing.Rectangle
      description: "<xref href=&quot;System.Drawing.Rectangle&quot;></xref>타원을 정의 하는 경계 사각형을 나타내는 구조입니다."
  overload: System.Drawing.Graphics.FillEllipse*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>brush</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Drawing.RectangleF)
  id: FillEllipse(System.Drawing.Brush,System.Drawing.RectangleF)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: FillEllipse(Brush,RectangleF)
  nameWithType: Graphics.FillEllipse(Brush,RectangleF)
  fullName: System.Drawing.Graphics.FillEllipse(Brush,RectangleF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "로 지정 된 경계 사각형에 의해 정의 되는 타원의 내부를 채웁니다는 <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> 구조입니다."
  remarks: "이 메서드에 <xref:System.Drawing.Brush>.</xref:System.Drawing.Brush> 되는 타원의 내부를 채웁니다. 타원이 나타내는 경계 사각형에 의해 정의 되는 `rect` 매개 변수입니다."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a solid red brush.  \n  \n-   Creates a rectangle that bounds an ellipse.  \n  \n-   Fills the ellipse on the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#100](~/add/codesnippet/cpp/beddd307-c00b-4344-8ad5-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#100](~/add/codesnippet/csharp/beddd307-c00b-4344-8ad5-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#100](~/add/codesnippet/visualbasic/beddd307-c00b-4344-8ad5-_1.vb)]"
  syntax:
    content: public void FillEllipse (System.Drawing.Brush brush, System.Drawing.RectangleF rect);
    parameters:
    - id: brush
      type: System.Drawing.Brush
      description: "<xref href=&quot;System.Drawing.Brush&quot;></xref>채우기의 특징을 결정 하 합니다."
    - id: rect
      type: System.Drawing.RectangleF
      description: "<xref href=&quot;System.Drawing.RectangleF&quot;></xref>타원을 정의 하는 경계 사각형을 나타내는 구조입니다."
  overload: System.Drawing.Graphics.FillEllipse*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>brush</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32)
  id: FillEllipse(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: FillEllipse(Brush,Int32,Int32,Int32,Int32)
  nameWithType: Graphics.FillEllipse(Brush,Int32,Int32,Int32,Int32)
  fullName: System.Drawing.Graphics.FillEllipse(Brush,Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "좌표, 너비, 높이의 쌍으로 지정 된 경계 사각형에 의해 정의 되는 타원의 내부를 채웁니다."
  remarks: "이 메서드에 <xref:System.Drawing.Brush>.</xref:System.Drawing.Brush> 되는 타원의 내부를 채웁니다. 타원으로 표시 하는 경계 사각형에 의해 정의 됩니다는 `x`, `y`, `width`, 및 `height` 매개 변수입니다."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a solid red brush.  \n  \n-   Creates the location and size of a rectangle that bounds an ellipse.  \n  \n-   Fills the ellipse on the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#101](~/add/codesnippet/cpp/0631ab9a-0826-4ecd-a349-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#101](~/add/codesnippet/csharp/0631ab9a-0826-4ecd-a349-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#101](~/add/codesnippet/visualbasic/0631ab9a-0826-4ecd-a349-_1.vb)]"
  syntax:
    content: public void FillEllipse (System.Drawing.Brush brush, int x, int y, int width, int height);
    parameters:
    - id: brush
      type: System.Drawing.Brush
      description: "<xref href=&quot;System.Drawing.Brush&quot;></xref>채우기의 특징을 결정 하 합니다."
    - id: x
      type: System.Int32
      description: "타원을 정의 하는 경계 사각형의 왼쪽 위 모퉁이의 x 좌표입니다."
    - id: y
      type: System.Int32
      description: "타원을 정의 하는 경계 사각형의 왼쪽 위 모퉁이의 y 좌표입니다."
    - id: width
      type: System.Int32
      description: "타원을 정의 하는 경계 사각형의 너비입니다."
    - id: height
      type: System.Int32
      description: "타원을 정의 하는 경계 사각형의 높이입니다."
  overload: System.Drawing.Graphics.FillEllipse*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>brush</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single)
  id: FillEllipse(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: FillEllipse(Brush,Single,Single,Single,Single)
  nameWithType: Graphics.FillEllipse(Brush,Single,Single,Single,Single)
  fullName: System.Drawing.Graphics.FillEllipse(Brush,Single,Single,Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "좌표, 너비, 높이의 쌍으로 지정 된 경계 사각형에 의해 정의 되는 타원의 내부를 채웁니다."
  remarks: "이 메서드에 <xref:System.Drawing.Brush>.</xref:System.Drawing.Brush> 되는 타원의 내부를 채웁니다. 타원으로 표시 하는 경계 사각형에 의해 정의 됩니다는 `x`, `y`, `width`, 및 `height` 매개 변수입니다."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a solid red brush.  \n  \n-   Creates the location and size of a rectangle that bounds an ellipse.  \n  \n-   Fills the ellipse on the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#102](~/add/codesnippet/cpp/a7ad2be7-2424-4c4e-be93-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#102](~/add/codesnippet/csharp/a7ad2be7-2424-4c4e-be93-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#102](~/add/codesnippet/visualbasic/a7ad2be7-2424-4c4e-be93-_1.vb)]"
  syntax:
    content: public void FillEllipse (System.Drawing.Brush brush, float x, float y, float width, float height);
    parameters:
    - id: brush
      type: System.Drawing.Brush
      description: "<xref href=&quot;System.Drawing.Brush&quot;></xref>채우기의 특징을 결정 하 합니다."
    - id: x
      type: System.Single
      description: "타원을 정의 하는 경계 사각형의 왼쪽 위 모퉁이의 x 좌표입니다."
    - id: y
      type: System.Single
      description: "타원을 정의 하는 경계 사각형의 왼쪽 위 모퉁이의 y 좌표입니다."
    - id: width
      type: System.Single
      description: "타원을 정의 하는 경계 사각형의 너비입니다."
    - id: height
      type: System.Single
      description: "타원을 정의 하는 경계 사각형의 높이입니다."
  overload: System.Drawing.Graphics.FillEllipse*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>brush</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.FillPath(System.Drawing.Brush,System.Drawing.Drawing2D.GraphicsPath)
  id: FillPath(System.Drawing.Brush,System.Drawing.Drawing2D.GraphicsPath)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: FillPath(Brush,GraphicsPath)
  nameWithType: Graphics.FillPath(Brush,GraphicsPath)
  fullName: System.Drawing.Graphics.FillPath(Brush,GraphicsPath)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "내부를 채웁니다는 <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref>합니다."
  remarks: "A <xref:System.Drawing.Drawing2D.GraphicsPath>선과 곡선 세그먼트로 구성 됩니다.</xref:System.Drawing.Drawing2D.GraphicsPath> 으로 표시 되는 경로 `path` 매개 변수 닫혀 있지 않으면 추가 세그먼트가 추가 됩니다 마지막 점에서 하 고 첫 번째 경로를 닫습니다."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a solid red brush.  \n  \n-   Creates a graphics path object.  \n  \n-   Adds an ellipse to the graphics path.  \n  \n-   Fills the path on the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#103](~/add/codesnippet/cpp/bd82f623-b5ed-4a80-9aac-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#103](~/add/codesnippet/csharp/bd82f623-b5ed-4a80-9aac-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#103](~/add/codesnippet/visualbasic/bd82f623-b5ed-4a80-9aac-_1.vb)]"
  syntax:
    content: public void FillPath (System.Drawing.Brush brush, System.Drawing.Drawing2D.GraphicsPath path);
    parameters:
    - id: brush
      type: System.Drawing.Brush
      description: "<xref href=&quot;System.Drawing.Brush&quot;></xref>채우기의 특징을 결정 하 합니다."
    - id: path
      type: System.Drawing.Drawing2D.GraphicsPath
      description: "<xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;></xref>채울 경로를 나타내는입니다."
  overload: System.Drawing.Graphics.FillPath*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>brush</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>path</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Drawing.Rectangle,System.Single,System.Single)
  id: FillPie(System.Drawing.Brush,System.Drawing.Rectangle,System.Single,System.Single)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: FillPie(Brush,Rectangle,Single,Single)
  nameWithType: Graphics.FillPie(Brush,Rectangle,Single,Single)
  fullName: System.Drawing.Graphics.FillPie(Brush,Rectangle,Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "로 지정 된 타원으로 정의 되는 원형 섹션의 내부를 채웁니다는 <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> 구조와 두 개의 방사형 선에 합니다."
  remarks: "이 메서드는 호의 끝점와 교차 하는 두 개의 방사형 선에 타원의 호에서 정의 되는 원형 섹션의 내부를 채웁니다. 타원 경계 사각형에 의해 정의 됩니다. 원형 섹션에 정의 된 두 개의 방사형 선에 이루어져는 `startAngle` 및 `sweepAngle` 매개 변수 및 타원 방사형 선 들의 교차 사이의 호입니다.       경우는 `sweepAngle` 매개 변수가-360도 미만 360도 보다 크면, 360도 또는-360도 각각 처럼 처리 됩니다."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a solid red brush.  \n  \n-   Creates a rectangle that bounds an ellipse.  \n  \n-   Defines the start angle (relative to the x axis) and the sweep angle (both in a clockwise direction).  \n  \n-   Fills the pie-shaped area of the ellipse on the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#104](~/add/codesnippet/cpp/35752974-fb8e-4190-89b3-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#104](~/add/codesnippet/csharp/35752974-fb8e-4190-89b3-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#104](~/add/codesnippet/visualbasic/35752974-fb8e-4190-89b3-_1.vb)]"
  syntax:
    content: public void FillPie (System.Drawing.Brush brush, System.Drawing.Rectangle rect, float startAngle, float sweepAngle);
    parameters:
    - id: brush
      type: System.Drawing.Brush
      description: "<xref href=&quot;System.Drawing.Brush&quot;></xref>채우기의 특징을 결정 하 합니다."
    - id: rect
      type: System.Drawing.Rectangle
      description: "<xref href=&quot;System.Drawing.Rectangle&quot;></xref>올 원형 섹션이 발생 된 타원을 정의 하는 경계 사각형을 나타내는 구조입니다."
    - id: startAngle
      type: System.Single
      description: "각도 원형 섹션의 첫 번째 옆에 x 축에서 시계 방향으로 측정 합니다."
    - id: sweepAngle
      type: System.Single
      description: "시계 방향으로 측정 한 각도 `startAngle` 원형 섹션의 둘째 면까지 매개 변수입니다."
  overload: System.Drawing.Graphics.FillPie*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>brush</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: FillPie(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: FillPie(Brush,Int32,Int32,Int32,Int32,Int32,Int32)
  nameWithType: Graphics.FillPie(Brush,Int32,Int32,Int32,Int32,Int32,Int32)
  fullName: System.Drawing.Graphics.FillPie(Brush,Int32,Int32,Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "한 쌍의 좌표, 너비, 높이 및 두 개의 방사형 선에 의해 지정 된 타원으로 정의 되는 원형 섹션의 내부를 채웁니다."
  remarks: "이 메서드는 호의 끝점와 교차 하는 두 개의 방사형 선에 타원의 호에서 정의 되는 원형 섹션의 내부를 채웁니다. 타원 경계 사각형에 의해 정의 됩니다. 원형 섹션에 정의 된 두 개의 방사형 선에 이루어져는 `startAngle` 및 `sweepAngle` 매개 변수 및 타원 방사형 선 들의 교차 사이의 호입니다.       경우는 `sweepAngle` 매개 변수가-360도 미만 360도 보다 크면, 360도 또는-360도 각각 처럼 처리 됩니다."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a solid red brush.  \n  \n-   Creates the location and size of a rectangle that bounds an ellipse.  \n  \n-   Defines the start angle (relative to the x axis) and the sweep angle (both in a clockwise direction).  \n  \n-   Fills the pie-shaped area of the ellipse on the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#105](~/add/codesnippet/cpp/cd01f2a4-bda4-4661-8de0-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#105](~/add/codesnippet/csharp/cd01f2a4-bda4-4661-8de0-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#105](~/add/codesnippet/visualbasic/cd01f2a4-bda4-4661-8de0-_1.vb)]"
  syntax:
    content: public void FillPie (System.Drawing.Brush brush, int x, int y, int width, int height, int startAngle, int sweepAngle);
    parameters:
    - id: brush
      type: System.Drawing.Brush
      description: "<xref href=&quot;System.Drawing.Brush&quot;></xref>채우기의 특징을 결정 하 합니다."
    - id: x
      type: System.Int32
      description: "올 원형 섹션이 발생 된 타원을 정의 하는 경계 사각형의 왼쪽 위 모퉁이의 x 좌표입니다."
    - id: y
      type: System.Int32
      description: "올 원형 섹션이 발생 된 타원을 정의 하는 경계 사각형의 왼쪽 위 모퉁이의 y 좌표입니다."
    - id: width
      type: System.Int32
      description: "올 원형 섹션이 발생 된 타원을 정의 하는 경계 사각형의 너비입니다."
    - id: height
      type: System.Int32
      description: "올 원형 섹션이 발생 된 타원을 정의 하는 경계 사각형의 높이입니다."
    - id: startAngle
      type: System.Int32
      description: "각도 원형 섹션의 첫 번째 옆에 x 축에서 시계 방향으로 측정 합니다."
    - id: sweepAngle
      type: System.Int32
      description: "시계 방향으로 측정 한 각도 `startAngle` 원형 섹션의 둘째 면까지 매개 변수입니다."
  overload: System.Drawing.Graphics.FillPie*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>brush</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  id: FillPie(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: FillPie(Brush,Single,Single,Single,Single,Single,Single)
  nameWithType: Graphics.FillPie(Brush,Single,Single,Single,Single,Single,Single)
  fullName: System.Drawing.Graphics.FillPie(Brush,Single,Single,Single,Single,Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "한 쌍의 좌표, 너비, 높이 및 두 개의 방사형 선에 의해 지정 된 타원으로 정의 되는 원형 섹션의 내부를 채웁니다."
  remarks: "이 메서드는 호의 끝점와 교차 하는 두 개의 방사형 선에 타원의 호에서 정의 되는 원형 섹션의 내부를 채웁니다. 타원 경계 사각형에 의해 정의 됩니다. 원형 섹션에 정의 된 두 개의 방사형 선에 이루어져는 `startAngle` 및 `sweepAngle` 매개 변수 및 타원 방사형 선 들의 교차 사이의 호입니다.       경우는 `sweepAngle` 매개 변수가-360도 미만 360도 보다 크면, 360도 또는-360도 각각 처럼 처리 됩니다."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a solid red brush.  \n  \n-   Creates the location and size of a rectangle that bounds an ellipse.  \n  \n-   Defines the start angle (relative to the x axis) and the sweep angle (both in a clockwise direction).  \n  \n-   Fills the pie-shaped area of the ellipse on the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#106](~/add/codesnippet/cpp/696347c5-468c-4f10-8ec4-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#106](~/add/codesnippet/csharp/696347c5-468c-4f10-8ec4-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#106](~/add/codesnippet/visualbasic/696347c5-468c-4f10-8ec4-_1.vb)]"
  syntax:
    content: public void FillPie (System.Drawing.Brush brush, float x, float y, float width, float height, float startAngle, float sweepAngle);
    parameters:
    - id: brush
      type: System.Drawing.Brush
      description: "<xref href=&quot;System.Drawing.Brush&quot;></xref>채우기의 특징을 결정 하 합니다."
    - id: x
      type: System.Single
      description: "올 원형 섹션이 발생 된 타원을 정의 하는 경계 사각형의 왼쪽 위 모퉁이의 x 좌표입니다."
    - id: y
      type: System.Single
      description: "올 원형 섹션이 발생 된 타원을 정의 하는 경계 사각형의 왼쪽 위 모퉁이의 y 좌표입니다."
    - id: width
      type: System.Single
      description: "올 원형 섹션이 발생 된 타원을 정의 하는 경계 사각형의 너비입니다."
    - id: height
      type: System.Single
      description: "올 원형 섹션이 발생 된 타원을 정의 하는 경계 사각형의 높이입니다."
    - id: startAngle
      type: System.Single
      description: "각도 원형 섹션의 첫 번째 옆에 x 축에서 시계 방향으로 측정 합니다."
    - id: sweepAngle
      type: System.Single
      description: "시계 방향으로 측정 한 각도 `startAngle` 원형 섹션의 둘째 면까지 매개 변수입니다."
  overload: System.Drawing.Graphics.FillPie*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>brush</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.Point[])
  id: FillPolygon(System.Drawing.Brush,System.Drawing.Point[])
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: FillPolygon(Brush,Point[])
  nameWithType: Graphics.FillPolygon(Brush,Point[])
  fullName: System.Drawing.Graphics.FillPolygon(Brush,Point[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "로 지정 된 점의 배열에 의해 정의 되는 다각형의 내부를 채웁니다 <xref href=&quot;System.Drawing.Point&quot;> </xref> 구조입니다."
  remarks: "배열에 있는 두 개의 연속 점 모든 다각형의 한 쪽을 지정합니다. 또한 첫 번째 지점과 마지막 지점이 교차 하지 않을 경우 다각형의 닫는 쪽을 지정 합니다."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a solid blue brush.  \n  \n-   Creates an array of seven points to define a polygon.  \n  \n-   Fills the polygonal area on the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#107](~/add/codesnippet/cpp/8c42bd4c-a5b4-4787-a3af-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#107](~/add/codesnippet/csharp/8c42bd4c-a5b4-4787-a3af-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#107](~/add/codesnippet/visualbasic/8c42bd4c-a5b4-4787-a3af-_1.vb)]"
  syntax:
    content: public void FillPolygon (System.Drawing.Brush brush, System.Drawing.Point[] points);
    parameters:
    - id: brush
      type: System.Drawing.Brush
      description: "<xref href=&quot;System.Drawing.Brush&quot;></xref>채우기의 특징을 결정 하 합니다."
    - id: points
      type: System.Drawing.Point[]
      description: "배열 <xref href=&quot;System.Drawing.Point&quot;> </xref> 채울 다각형의 꼭 짓 점을 나타내는 구조입니다."
  overload: System.Drawing.Graphics.FillPolygon*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>brush</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>points</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.PointF[])
  id: FillPolygon(System.Drawing.Brush,System.Drawing.PointF[])
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: FillPolygon(Brush,PointF[])
  nameWithType: Graphics.FillPolygon(Brush,PointF[])
  fullName: System.Drawing.Graphics.FillPolygon(Brush,PointF[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "로 지정 된 점의 배열에 의해 정의 되는 다각형의 내부를 채웁니다 <xref href=&quot;System.Drawing.PointF&quot;> </xref> 구조입니다."
  remarks: "배열에 있는 두 개의 연속 점 모든 다각형의 한 쪽을 지정합니다. 또한 첫 번째 지점과 마지막 지점이 교차 하지 않을 경우 다각형의 닫는 쪽을 지정 합니다."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a solid blue brush.  \n  \n-   Creates an array of seven points to define a polygon.  \n  \n-   Fills the polygonal area on the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#109](~/add/codesnippet/cpp/ed54e036-19c0-4e81-8255-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#109](~/add/codesnippet/csharp/ed54e036-19c0-4e81-8255-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#109](~/add/codesnippet/visualbasic/ed54e036-19c0-4e81-8255-_1.vb)]"
  syntax:
    content: public void FillPolygon (System.Drawing.Brush brush, System.Drawing.PointF[] points);
    parameters:
    - id: brush
      type: System.Drawing.Brush
      description: "<xref href=&quot;System.Drawing.Brush&quot;></xref>채우기의 특징을 결정 하 합니다."
    - id: points
      type: System.Drawing.PointF[]
      description: "배열 <xref href=&quot;System.Drawing.PointF&quot;> </xref> 채울 다각형의 꼭 짓 점을 나타내는 구조입니다."
  overload: System.Drawing.Graphics.FillPolygon*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>brush</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>points</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode)
  id: FillPolygon(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: FillPolygon(Brush,Point[],FillMode)
  nameWithType: Graphics.FillPolygon(Brush,Point[],FillMode)
  fullName: System.Drawing.Graphics.FillPolygon(Brush,Point[],FillMode)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "로 지정 된 점의 배열에 의해 정의 되는 다각형의 내부를 채웁니다 <xref href=&quot;System.Drawing.Point&quot;> </xref> 지정된 된 채우기 모드를 사용 하 여 구조입니다."
  remarks: "배열에 있는 두 개의 연속 점 모든 다각형의 한 쪽을 지정합니다. 또한 첫 번째 지점과 마지막 지점이 교차 하지 않을 경우 다각형의 닫는 쪽을 지정 합니다."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a solid blue brush.  \n  \n-   Creates an array of seven points to define a polygon.  \n  \n-   Sets the fill mode to <xref:System.Drawing.Drawing2D.FillMode>.  \n  \n-   Fills the polygonal area on the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#108](~/add/codesnippet/cpp/ad884b76-3209-4ec3-b1c6-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#108](~/add/codesnippet/csharp/ad884b76-3209-4ec3-b1c6-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#108](~/add/codesnippet/visualbasic/ad884b76-3209-4ec3-b1c6-_1.vb)]"
  syntax:
    content: public void FillPolygon (System.Drawing.Brush brush, System.Drawing.Point[] points, System.Drawing.Drawing2D.FillMode fillMode);
    parameters:
    - id: brush
      type: System.Drawing.Brush
      description: "<xref href=&quot;System.Drawing.Brush&quot;></xref>채우기의 특징을 결정 하 합니다."
    - id: points
      type: System.Drawing.Point[]
      description: "배열 <xref href=&quot;System.Drawing.Point&quot;> </xref> 채울 다각형의 꼭 짓 점을 나타내는 구조입니다."
    - id: fillMode
      type: System.Drawing.Drawing2D.FillMode
      description: "멤버는 <xref href=&quot;System.Drawing.Drawing2D.FillMode&quot;> </xref> 채우기의 스타일을 결정 하는 열거형입니다."
  overload: System.Drawing.Graphics.FillPolygon*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>brush</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>points</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode)
  id: FillPolygon(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: FillPolygon(Brush,PointF[],FillMode)
  nameWithType: Graphics.FillPolygon(Brush,PointF[],FillMode)
  fullName: System.Drawing.Graphics.FillPolygon(Brush,PointF[],FillMode)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "로 지정 된 점의 배열에 의해 정의 되는 다각형의 내부를 채웁니다 <xref href=&quot;System.Drawing.PointF&quot;> </xref> 지정된 된 채우기 모드를 사용 하 여 구조입니다."
  remarks: "배열에 있는 두 개의 연속 점 모든 다각형의 한 쪽을 지정합니다. 또한 첫 번째 지점과 마지막 지점이 교차 하지 않을 경우 다각형의 닫는 쪽을 지정 합니다."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following action:  \n  \n-   Creates a solid blue brush.  \n  \n-   Creates an array of seven points to define a polygon.  \n  \n-   Sets the fill mode to <xref:System.Drawing.Drawing2D.FillMode>.  \n  \n-   Fills the polygonal area on the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples2#110](~/add/codesnippet/cpp/62d0b4ff-f244-4431-9034-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples2#110](~/add/codesnippet/csharp/62d0b4ff-f244-4431-9034-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples2#110](~/add/codesnippet/visualbasic/62d0b4ff-f244-4431-9034-_1.vb)]"
  syntax:
    content: public void FillPolygon (System.Drawing.Brush brush, System.Drawing.PointF[] points, System.Drawing.Drawing2D.FillMode fillMode);
    parameters:
    - id: brush
      type: System.Drawing.Brush
      description: "<xref href=&quot;System.Drawing.Brush&quot;></xref>채우기의 특징을 결정 하 합니다."
    - id: points
      type: System.Drawing.PointF[]
      description: "배열 <xref href=&quot;System.Drawing.PointF&quot;> </xref> 채울 다각형의 꼭 짓 점을 나타내는 구조입니다."
    - id: fillMode
      type: System.Drawing.Drawing2D.FillMode
      description: "멤버는 <xref href=&quot;System.Drawing.Drawing2D.FillMode&quot;> </xref> 채우기의 스타일을 결정 하는 열거형입니다."
  overload: System.Drawing.Graphics.FillPolygon*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>brush</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>points</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Drawing.Rectangle)
  id: FillRectangle(System.Drawing.Brush,System.Drawing.Rectangle)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: FillRectangle(Brush,Rectangle)
  nameWithType: Graphics.FillRectangle(Brush,Rectangle)
  fullName: System.Drawing.Graphics.FillRectangle(Brush,Rectangle)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "지정 된 사각형의 내부를 채웁니다는 <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 구조입니다."
  remarks: "이 메서드는 정의 된 사각형의 내부를 채웁니다는 `rect` 매개 변수를 지정 된 왼쪽을 포함 하 여 모퉁이 및 계산 된 최대 하단 및 아래쪽 가장자리입니다."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following action:  \n  \n-   Creates a solid blue brush.  \n  \n-   Creates a rectangle.  \n  \n-   Fills the rectangular area on the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#111](~/add/codesnippet/cpp/6be38582-3c2a-4e5e-b5a0-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#111](~/add/codesnippet/csharp/6be38582-3c2a-4e5e-b5a0-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#111](~/add/codesnippet/visualbasic/6be38582-3c2a-4e5e-b5a0-_1.vb)]"
  syntax:
    content: public void FillRectangle (System.Drawing.Brush brush, System.Drawing.Rectangle rect);
    parameters:
    - id: brush
      type: System.Drawing.Brush
      description: "<xref href=&quot;System.Drawing.Brush&quot;></xref>채우기의 특징을 결정 하 합니다."
    - id: rect
      type: System.Drawing.Rectangle
      description: "<xref href=&quot;System.Drawing.Rectangle&quot;></xref>채울 사각형을 나타내는 구조입니다."
  overload: System.Drawing.Graphics.FillRectangle*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>brush</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Drawing.RectangleF)
  id: FillRectangle(System.Drawing.Brush,System.Drawing.RectangleF)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: FillRectangle(Brush,RectangleF)
  nameWithType: Graphics.FillRectangle(Brush,RectangleF)
  fullName: System.Drawing.Graphics.FillRectangle(Brush,RectangleF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "지정 된 사각형의 내부를 채웁니다는 <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> 구조입니다."
  remarks: "이 메서드는 정의 된 사각형의 내부를 채웁니다는 `rect` 매개 변수를 지정 된 왼쪽을 포함 하 여 모퉁이 및 계산 된 최대 하단 및 아래쪽 가장자리입니다."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following action:  \n  \n-   Creates a solid blue brush.  \n  \n-   Creates a rectangle.  \n  \n-   Fills the rectangular area on the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#112](~/add/codesnippet/cpp/e5a08c2a-7ade-4531-a080-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#112](~/add/codesnippet/csharp/e5a08c2a-7ade-4531-a080-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#112](~/add/codesnippet/visualbasic/e5a08c2a-7ade-4531-a080-_1.vb)]"
  syntax:
    content: public void FillRectangle (System.Drawing.Brush brush, System.Drawing.RectangleF rect);
    parameters:
    - id: brush
      type: System.Drawing.Brush
      description: "<xref href=&quot;System.Drawing.Brush&quot;></xref>채우기의 특징을 결정 하 합니다."
    - id: rect
      type: System.Drawing.RectangleF
      description: "<xref href=&quot;System.Drawing.RectangleF&quot;></xref>채울 사각형을 나타내는 구조입니다."
  overload: System.Drawing.Graphics.FillRectangle*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>brush</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32)
  id: FillRectangle(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: FillRectangle(Brush,Int32,Int32,Int32,Int32)
  nameWithType: Graphics.FillRectangle(Brush,Int32,Int32,Int32,Int32)
  fullName: System.Drawing.Graphics.FillRectangle(Brush,Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "좌표, 너비, 높이의 쌍으로 지정 된 사각형의 내부를 채웁니다."
  remarks: "이 메서드는 정의 된 사각형의 내부를 채웁니다는`x`, `y`, `width`, 및 `height` 매개 변수를 지정 된 왼쪽을 포함 하 여 모퉁이 및 계산 된 최대 하단 및 아래쪽 가장자리입니다."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following action:  \n  \n-   Creates a solid blue brush.  \n  \n-   Creates the location and size of a rectangle.  \n  \n-   Fills the rectangular area on the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#113](~/add/codesnippet/cpp/146a0316-72ff-4e5e-9cbc-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#113](~/add/codesnippet/csharp/146a0316-72ff-4e5e-9cbc-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#113](~/add/codesnippet/visualbasic/146a0316-72ff-4e5e-9cbc-_1.vb)]"
  syntax:
    content: public void FillRectangle (System.Drawing.Brush brush, int x, int y, int width, int height);
    parameters:
    - id: brush
      type: System.Drawing.Brush
      description: "<xref href=&quot;System.Drawing.Brush&quot;></xref>채우기의 특징을 결정 하 합니다."
    - id: x
      type: System.Int32
      description: "채울 사각형의 왼쪽 위 모퉁이의 x 좌표입니다."
    - id: y
      type: System.Int32
      description: "채울 사각형의 왼쪽 위 모퉁이의 y 좌표입니다."
    - id: width
      type: System.Int32
      description: "채울 사각형의 너비입니다."
    - id: height
      type: System.Int32
      description: "채울 사각형의 높이입니다."
  overload: System.Drawing.Graphics.FillRectangle*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>brush</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single)
  id: FillRectangle(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: FillRectangle(Brush,Single,Single,Single,Single)
  nameWithType: Graphics.FillRectangle(Brush,Single,Single,Single,Single)
  fullName: System.Drawing.Graphics.FillRectangle(Brush,Single,Single,Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "좌표, 너비, 높이의 쌍으로 지정 된 사각형의 내부를 채웁니다."
  remarks: "이 메서드는 정의 된 사각형의 내부를 채웁니다는 `x`, `y`, `width`, 및 `height` 매개 변수를 지정 된 왼쪽을 포함 하 여 모퉁이 및 계산 된 최대 하단 및 아래쪽 가장자리입니다."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following action:  \n  \n-   Creates a solid blue brush.  \n  \n-   Creates the location and size of a rectangle.  \n  \n-   Fills the rectangular area on the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#114](~/add/codesnippet/cpp/135842c8-bb57-4e26-91ec-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#114](~/add/codesnippet/csharp/135842c8-bb57-4e26-91ec-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#114](~/add/codesnippet/visualbasic/135842c8-bb57-4e26-91ec-_1.vb)]"
  syntax:
    content: public void FillRectangle (System.Drawing.Brush brush, float x, float y, float width, float height);
    parameters:
    - id: brush
      type: System.Drawing.Brush
      description: "<xref href=&quot;System.Drawing.Brush&quot;></xref>채우기의 특징을 결정 하 합니다."
    - id: x
      type: System.Single
      description: "채울 사각형의 왼쪽 위 모퉁이의 x 좌표입니다."
    - id: y
      type: System.Single
      description: "채울 사각형의 왼쪽 위 모퉁이의 y 좌표입니다."
    - id: width
      type: System.Single
      description: "채울 사각형의 너비입니다."
    - id: height
      type: System.Single
      description: "채울 사각형의 높이입니다."
  overload: System.Drawing.Graphics.FillRectangle*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>brush</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.FillRectangles(System.Drawing.Brush,System.Drawing.Rectangle[])
  id: FillRectangles(System.Drawing.Brush,System.Drawing.Rectangle[])
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: FillRectangles(Brush,Rectangle[])
  nameWithType: Graphics.FillRectangles(Brush,Rectangle[])
  fullName: System.Drawing.Graphics.FillRectangles(Brush,Rectangle[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "일련의 지정 된 사각형의 내부를 채웁니다 <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 구조입니다."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following action:  \n  \n-   Creates a solid blue brush.  \n  \n-   Creates an array of three rectangles.  \n  \n-   Fills the three rectangular areas on the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#115](~/add/codesnippet/cpp/4d10e835-c952-4b03-ba4f-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#115](~/add/codesnippet/csharp/4d10e835-c952-4b03-ba4f-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#115](~/add/codesnippet/visualbasic/4d10e835-c952-4b03-ba4f-_1.vb)]"
  syntax:
    content: public void FillRectangles (System.Drawing.Brush brush, System.Drawing.Rectangle[] rects);
    parameters:
    - id: brush
      type: System.Drawing.Brush
      description: "<xref href=&quot;System.Drawing.Brush&quot;></xref>채우기의 특징을 결정 하 합니다."
    - id: rects
      type: System.Drawing.Rectangle[]
      description: "배열 <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 채울 사각형을 나타내는입니다."
  overload: System.Drawing.Graphics.FillRectangles*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>brush</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>rects</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>rects</code>길이가&0; 인 배열이입니다."
  platform:
  - net462
- uid: System.Drawing.Graphics.FillRectangles(System.Drawing.Brush,System.Drawing.RectangleF[])
  id: FillRectangles(System.Drawing.Brush,System.Drawing.RectangleF[])
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: FillRectangles(Brush,RectangleF[])
  nameWithType: Graphics.FillRectangles(Brush,RectangleF[])
  fullName: System.Drawing.Graphics.FillRectangles(Brush,RectangleF[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "일련의 지정 된 사각형의 내부를 채웁니다 <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> 구조입니다."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following action:  \n  \n-   Creates a solid blue brush.  \n  \n-   Creates an array of three rectangles.  \n  \n-   Fills the three rectangular areas on the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#116](~/add/codesnippet/cpp/8405bee3-4e81-48b5-91a1-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#116](~/add/codesnippet/csharp/8405bee3-4e81-48b5-91a1-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#116](~/add/codesnippet/visualbasic/8405bee3-4e81-48b5-91a1-_1.vb)]"
  syntax:
    content: public void FillRectangles (System.Drawing.Brush brush, System.Drawing.RectangleF[] rects);
    parameters:
    - id: brush
      type: System.Drawing.Brush
      description: "<xref href=&quot;System.Drawing.Brush&quot;></xref>채우기의 특징을 결정 하 합니다."
    - id: rects
      type: System.Drawing.RectangleF[]
      description: "배열 <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> 채울 사각형을 나타내는입니다."
  overload: System.Drawing.Graphics.FillRectangles*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>brush</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>rects</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Rects</code>길이가&0; 인 배열이입니다."
  platform:
  - net462
- uid: System.Drawing.Graphics.FillRegion(System.Drawing.Brush,System.Drawing.Region)
  id: FillRegion(System.Drawing.Brush,System.Drawing.Region)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: FillRegion(Brush,Region)
  nameWithType: Graphics.FillRegion(Brush,Region)
  fullName: System.Drawing.Graphics.FillRegion(Brush,Region)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "내부를 채웁니다는 <xref href=&quot;System.Drawing.Region&quot;> </xref>합니다."
  remarks: "A <xref:System.Drawing.Region>사각형과 경로로 구성 됩니다.</xref:System.Drawing.Region> 지역 닫히지 않은 경우 추가 세그먼트가 하 고 첫 번째을 닫으려면 마지막 지점에서 추가 됩니다."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following action:  \n  \n-   Creates a solid blue brush.  \n  \n-   Creates a rectangle.  \n  \n-   Creates a rectangular region.  \n  \n-   Fills the rectangular region on the screen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#117](~/add/codesnippet/cpp/m-system.drawing.graphic_13_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#117](~/add/codesnippet/csharp/m-system.drawing.graphic_13_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#117](~/add/codesnippet/visualbasic/m-system.drawing.graphic_13_1.vb)]"
  syntax:
    content: public void FillRegion (System.Drawing.Brush brush, System.Drawing.Region region);
    parameters:
    - id: brush
      type: System.Drawing.Brush
      description: "<xref href=&quot;System.Drawing.Brush&quot;></xref>채우기의 특징을 결정 하 합니다."
    - id: region
      type: System.Drawing.Region
      description: "<xref href=&quot;System.Drawing.Region&quot;></xref>채울 영역을 나타내는입니다."
  overload: System.Drawing.Graphics.FillRegion*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>brush</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>region</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.Finalize
  id: Finalize
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: Finalize()
  nameWithType: Graphics.Finalize()
  fullName: System.Drawing.Graphics.Finalize()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "개체가를 리소스를 해제 하 고 가비지 수집에서 회수 하기 전에 다른 정리 작업을 수행할 수 있습니다."
  syntax:
    content: ~Graphics ();
    parameters: []
  overload: System.Drawing.Graphics.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.Flush
  id: Flush
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: Flush()
  nameWithType: Graphics.Flush()
  fullName: System.Drawing.Graphics.Flush()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "강제로 모든 보류 중인 그래픽 작업 실행 하 여 작업 마치기를 기다리지 않고 즉시 반환 합니다."
  remarks: "이 메서드는 플러시를 시작 하 고 완료 하는 데 현재 실행 중인 그래픽 작업을 기다리지 않고 즉시 반환 합니다."
  syntax:
    content: public void Flush ();
    parameters: []
  overload: System.Drawing.Graphics.Flush*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.Flush(System.Drawing.Drawing2D.FlushIntention)
  id: Flush(System.Drawing.Drawing2D.FlushIntention)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: Flush(FlushIntention)
  nameWithType: Graphics.Flush(FlushIntention)
  fullName: System.Drawing.Graphics.Flush(FlushIntention)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "메서드가 대기 중이거나 대기 중,으로 강제 모든 보류 중인 그래픽 작업 실행에 지정 된 대로, 여 작업을 마치기 전에 반환 합니다."
  remarks: "값이 <xref:System.Drawing.Drawing2D.FlushIntention>에 대 한는 `intention` 매개 변수는 메서드가 반환 값이 플러시 시작 된 후 즉시 지정 <xref:System.Drawing.Drawing2D.FlushIntention>메서드가 반환 하기 전에 모든 기존 작업 완료 될 때까지 대기을 지정 합니다.</xref:System.Drawing.Drawing2D.FlushIntention> </xref:System.Drawing.Drawing2D.FlushIntention>"
  syntax:
    content: public void Flush (System.Drawing.Drawing2D.FlushIntention intention);
    parameters:
    - id: intention
      type: System.Drawing.Drawing2D.FlushIntention
      description: "멤버는 <xref href=&quot;System.Drawing.Drawing2D.FlushIntention&quot;> </xref> 메서드가 즉시 반환 하거나 모든 기존 작업을 마칠 때까지 대기 하는지 여부를 지정 하는 열거형입니다."
  overload: System.Drawing.Graphics.Flush*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.FromHdc(System.IntPtr)
  id: FromHdc(System.IntPtr)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: FromHdc(IntPtr)
  nameWithType: Graphics.FromHdc(IntPtr)
  fullName: System.Drawing.Graphics.FromHdc(IntPtr)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "새 <xref href=&quot;System.Drawing.Graphics&quot;> </xref> 장치 컨텍스트를 지정 된 핸들에서입니다."
  remarks: "항상 호출 해야는 <xref:System.Drawing.Graphics.Dispose%2A>를 해제 하는 메서드는 <xref:System.Drawing.Graphics>및 FromHdc 메서드에 의해 생성 된 리소스를 관련.</xref:System.Drawing.Graphics> </xref:System.Drawing.Graphics.Dispose%2A>       디스플레이 장치에 연결된 된 ICM 색 프로필 하는 경우에 [!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)] 기본적으로 해당 프로필을 사용 하지 것입니다. 에 대 한 ICM를 사용 하도록 설정 하려면 한 <xref:System.Drawing.Graphics>, 생성는 <xref:System.Drawing.Graphics>HDC (및 ICM_ON)를 전달한 후에 HDC에서는 `SetICMMode` 함수.</xref:System.Drawing.Graphics> </xref:System.Drawing.Graphics> 수행한 그린는 <xref:System.Drawing.Graphics>디스플레이 장치와 관련 된 ICM 프로필에 따라 조정 됩니다.</xref:System.Drawing.Graphics> ICM을 사용 하면 성능이 저하 됩니다.       FromHdc 호출 시 디바이스 컨텍스트 (예: 매핑 모드, 논리 단위 및 like)의 상태 렌더링에 <xref:System.Drawing.Graphics>.</xref:System.Drawing.Graphics> 작업에 영향을 줄 수 있습니다."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following action:  \n  \n-   Creates an internal pointer type variable `hdc` and sets it to the handle to the device context of the graphics object of the form.  \n  \n-   Creates a new graphics object using `hdc`.  \n  \n-   Draws a rectangle with the new graphics object (on the screen).  \n  \n-   Releases the new graphics object using `hdc`.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#118](~/add/codesnippet/cpp/m-system.drawing.graphic_31_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#118](~/add/codesnippet/csharp/m-system.drawing.graphic_31_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#118](~/add/codesnippet/visualbasic/m-system.drawing.graphic_31_1.vb)]"
  syntax:
    content: public static System.Drawing.Graphics FromHdc (IntPtr hdc);
    parameters:
    - id: hdc
      type: System.IntPtr
      description: "장치 컨텍스트에 대 한 핸들입니다."
    return:
      type: System.Drawing.Graphics
      description: "이 메서드가 반환 새 <xref href=&quot;System.Drawing.Graphics&quot;> </xref> 지정 된 장치 컨텍스트에 대 한 합니다."
  overload: System.Drawing.Graphics.FromHdc*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.FromHdc(System.IntPtr,System.IntPtr)
  id: FromHdc(System.IntPtr,System.IntPtr)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: FromHdc(IntPtr,IntPtr)
  nameWithType: Graphics.FromHdc(IntPtr,IntPtr)
  fullName: System.Drawing.Graphics.FromHdc(IntPtr,IntPtr)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "새 <xref href=&quot;System.Drawing.Graphics&quot;> </xref> 장치 컨텍스트와 장치에 대 한 핸들을 지정 된 핸들에서입니다."
  remarks: "항상 호출 해야는 <xref:System.Drawing.Graphics.Dispose%2A>를 해제 하는 메서드는 <xref:System.Drawing.Graphics>및 FromHdc 메서드에 의해 생성 된 리소스를 관련.</xref:System.Drawing.Graphics> </xref:System.Drawing.Graphics.Dispose%2A>       디스플레이 장치에 연결된 된 ICM 색 프로필 하는 경우에 [!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)] 기본적으로 해당 프로필을 사용 하지 것입니다. 에 대 한 ICM를 사용 하도록 설정 하려면 한 <xref:System.Drawing.Graphics>, 생성는 <xref:System.Drawing.Graphics>HDC (및 ICM_ON)를 전달한 후에 HDC에서는 `SetICMMode` 함수.</xref:System.Drawing.Graphics> </xref:System.Drawing.Graphics> 수행한 그린는 <xref:System.Drawing.Graphics>디스플레이 장치와 관련 된 ICM 프로필에 따라 조정 됩니다.</xref:System.Drawing.Graphics> ICM을 사용 하면 성능이 저하 됩니다.       FromHdc 호출 시 디바이스 컨텍스트 (예: 매핑 모드, 논리 단위 및 like)의 상태 렌더링에 <xref:System.Drawing.Graphics>.</xref:System.Drawing.Graphics> 작업에 영향을 줄 수 있습니다.       장치 핸들 쿼리 특정 프린터 기능을 일반적으로 사용 됩니다."
  syntax:
    content: public static System.Drawing.Graphics FromHdc (IntPtr hdc, IntPtr hdevice);
    parameters:
    - id: hdc
      type: System.IntPtr
      description: "장치 컨텍스트에 대 한 핸들입니다."
    - id: hdevice
      type: System.IntPtr
      description: "장치에 대 한 핸들입니다."
    return:
      type: System.Drawing.Graphics
      description: "이 메서드가 반환 새 <xref href=&quot;System.Drawing.Graphics&quot;> </xref> 지정 된 장치 컨텍스트와 장치에 대 한 합니다."
  overload: System.Drawing.Graphics.FromHdc*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.FromHdcInternal(System.IntPtr)
  id: FromHdcInternal(System.IntPtr)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: FromHdcInternal(IntPtr)
  nameWithType: Graphics.FromHdcInternal(IntPtr)
  fullName: System.Drawing.Graphics.FromHdcInternal(IntPtr)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "반환 된 <xref href=&quot;System.Drawing.Graphics&quot;> </xref> 지정 된 장치 컨텍스트에 대 한 합니다."
  remarks: "이 메서드는 사용할 수 없습니다."
  syntax:
    content: public static System.Drawing.Graphics FromHdcInternal (IntPtr hdc);
    parameters:
    - id: hdc
      type: System.IntPtr
      description: "장치 컨텍스트에 대 한 핸들입니다."
    return:
      type: System.Drawing.Graphics
      description: "A <xref href=&quot;System.Drawing.Graphics&quot;> </xref> 지정 된 장치 컨텍스트에 대 한 합니다."
  overload: System.Drawing.Graphics.FromHdcInternal*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.FromHwnd(System.IntPtr)
  id: FromHwnd(System.IntPtr)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: FromHwnd(IntPtr)
  nameWithType: Graphics.FromHwnd(IntPtr)
  fullName: System.Drawing.Graphics.FromHwnd(IntPtr)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "새 <xref href=&quot;System.Drawing.Graphics&quot;> </xref> 창에 지정 된 핸들에서입니다."
  remarks: "항상 호출 해야는<xref:System.Drawing.Graphics.Dispose%2A> 를 해제 하는 메서드는 <xref:System.Drawing.Graphics>및 FromHwnd 메서드에 의해 생성 된 리소스를 관련.</xref:System.Drawing.Graphics> </xref:System.Drawing.Graphics.Dispose%2A>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler, as well as `thisForm`, the <xref:System.Windows.Forms.Form> for the example. The code performs the following actions:  \n  \n-   Creates a new internal pointer variable `hwnd` and sets it to the handle of the example's form.  \n  \n-   Creates a new <xref:System.Drawing.Graphics> from the handle.  \n  \n-   Draws a rectangle to the new <xref:System.Drawing.Graphics> using a red pen.  \n  \n-   Disposes the new <xref:System.Drawing.Graphics>.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#119](~/add/codesnippet/cpp/m-system.drawing.graphic_17_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#119](~/add/codesnippet/csharp/m-system.drawing.graphic_17_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#119](~/add/codesnippet/visualbasic/m-system.drawing.graphic_17_1.vb)]"
  syntax:
    content: public static System.Drawing.Graphics FromHwnd (IntPtr hwnd);
    parameters:
    - id: hwnd
      type: System.IntPtr
      description: "창 핸들입니다."
    return:
      type: System.Drawing.Graphics
      description: "이 메서드가 반환 새 <xref href=&quot;System.Drawing.Graphics&quot;> </xref> 지정된 된 창 핸들에 대 한 합니다."
  overload: System.Drawing.Graphics.FromHwnd*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.FromHwndInternal(System.IntPtr)
  id: FromHwndInternal(System.IntPtr)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: FromHwndInternal(IntPtr)
  nameWithType: Graphics.FromHwndInternal(IntPtr)
  fullName: System.Drawing.Graphics.FromHwndInternal(IntPtr)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "새 <xref href=&quot;System.Drawing.Graphics&quot;> </xref> 지정된 된 창 핸들에 대 한 합니다."
  remarks: "이 메서드는 사용할 수 없습니다."
  syntax:
    content: public static System.Drawing.Graphics FromHwndInternal (IntPtr hwnd);
    parameters:
    - id: hwnd
      type: System.IntPtr
      description: "창 핸들입니다."
    return:
      type: System.Drawing.Graphics
      description: "A <xref href=&quot;System.Drawing.Graphics&quot;> </xref> 지정된 된 창 핸들에 대 한 합니다."
  overload: System.Drawing.Graphics.FromHwndInternal*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.FromImage(System.Drawing.Image)
  id: FromImage(System.Drawing.Image)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: FromImage(Image)
  nameWithType: Graphics.FromImage(Image)
  fullName: System.Drawing.Graphics.FromImage(Image)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "새 <xref href=&quot;System.Drawing.Graphics&quot;> </xref> 지정 된 위치에서 <xref href=&quot;System.Drawing.Image&quot;> </xref>합니다."
  remarks: "이미지 인덱싱된 픽셀 형식이 있으면이 메서드는 메시지와 함께 예외를 throw, &quot;인덱싱된 픽셀 형식이 들어 있는 이미지로에서 Graphics 개체를 만들 수 없습니다.&quot; 인덱싱된 픽셀 형식의 다음 목록에 표시 됩니다.      - <xref:System.Drawing.Imaging.PixelFormat>- <xref:System.Drawing.Imaging.PixelFormat>- <xref:System.Drawing.Imaging.PixelFormat>인덱싱된 이미지를 사용 하 여 다른 형식으로 저장할 수 있습니다는 <xref:System.Drawing.Image.Save%28System.String%2CSystem.Drawing.Imaging.ImageFormat%29>메서드 및 다음 검색 하 고는 <xref:System.Drawing.Graphics>새 이미지에 대 한 개체입니다.</xref:System.Drawing.Graphics> </xref:System.Drawing.Image.Save%28System.String%2CSystem.Drawing.Imaging.ImageFormat%29> </xref:System.Drawing.Imaging.PixelFormat> </xref:System.Drawing.Imaging.PixelFormat> </xref:System.Drawing.Imaging.PixelFormat>       이 메서드는 또한 이미지 픽셀 형식 중 하나에 있는 경우 예외를 throw 합니다.      - <xref:System.Drawing.Imaging.PixelFormat>- <xref:System.Drawing.Imaging.PixelFormat>- <xref:System.Drawing.Imaging.PixelFormat>- <xref:System.Drawing.Imaging.PixelFormat>항상 호출 해야는 <xref:System.Drawing.Graphics.Dispose%2A>를 해제 하는 메서드는 <xref:System.Drawing.Graphics>및 FromImage 메서드에 의해 생성 된 리소스를 관련.</xref:System.Drawing.Graphics> </xref:System.Drawing.Graphics.Dispose%2A> </xref:System.Drawing.Imaging.PixelFormat> </xref:System.Drawing.Imaging.PixelFormat> </xref:System.Drawing.Imaging.PixelFormat> </xref:System.Drawing.Imaging.PixelFormat>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following action:  \n  \n-   Creates an <xref:System.Drawing.Image> from a graphics file SampImag.jpg in the example folder.  \n  \n-   Creates a <xref:System.Drawing.Graphics> from the <xref:System.Drawing.Image>.  \n  \n-   Alters the image by filling a rectangle within it.  \n  \n-   Draws the <xref:System.Drawing.Image> to the screen.  \n  \n-   Releases the created <xref:System.Drawing.Graphics>.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#120](~/add/codesnippet/cpp/m-system.drawing.graphic_8_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#120](~/add/codesnippet/csharp/m-system.drawing.graphic_8_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#120](~/add/codesnippet/visualbasic/m-system.drawing.graphic_8_1.vb)]"
  syntax:
    content: public static System.Drawing.Graphics FromImage (System.Drawing.Image image);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "<xref href=&quot;System.Drawing.Image&quot;></xref>만들 새 <xref href=&quot;System.Drawing.Graphics&quot;> </xref>합니다."
    return:
      type: System.Drawing.Graphics
      description: "이 메서드가 반환 새 <xref href=&quot;System.Drawing.Graphics&quot;> </xref> 지정 된 <xref href=&quot;System.Drawing.Image&quot;> </xref>합니다."
  overload: System.Drawing.Graphics.FromImage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>image</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Exception
    commentId: T:System.Exception
    description: "<code>image</code>인덱싱된 픽셀 형식이 또는 형식이 정의 되어 있습니다."
  platform:
  - net462
- uid: System.Drawing.Graphics.GetContextInfo
  id: GetContextInfo
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: GetContextInfo()
  nameWithType: Graphics.GetContextInfo()
  fullName: System.Drawing.Graphics.GetContextInfo()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "누적 그래픽 컨텍스트를 가져옵니다."
  remarks: "반환 값은 여기서 첫 번째 요소 누적 클립 영역을 포함 하 고 두 번째 요소는 누적 변환 행렬을 포함 하는 개체 배열입니다."
  syntax:
    content: public object GetContextInfo ();
    parameters: []
    return:
      type: System.Object
      description: "<xref:System.Object>누적 그래픽 컨텍스트를 나타내는.</xref:System.Object>"
  overload: System.Drawing.Graphics.GetContextInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.GetHalftonePalette
  id: GetHalftonePalette
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: GetHalftonePalette()
  nameWithType: Graphics.GetHalftonePalette()
  fullName: System.Drawing.Graphics.GetHalftonePalette()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "현재 Windows 하프톤 팔레트에 대 한 핸들을 가져옵니다."
  remarks: "GetHalftonePalette 메서드는가 수 있도록 [!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)] 표시 픽셀 당 8 비트를 사용 하는 경우 더 나은 품질 하프톤을 생성 합니다. 하프톤 팔레트를 사용 하 여 이미지를 표시 하려면 다음 절차를 수행 합니다."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Defines interoperability <xref:System.Runtime.InteropServices.DllImportAttribute> attributes for the Windows DLL file gdi32.dll, which contains the necessary [!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)] functions.  \n  \n-   Defines the `SelectPalette` and `RealizePalette` functions in that DLL as external.  \n  \n-   Creates an image from an existing image file SampImag.jpg (which must be in the same folder as the example code file) and draws the image to the screen.  \n  \n-   Creates internal pointer type variables and sets their values to the handle to the graphics object and to the current Windows halftone palette, respectively.  \n  \n-   Selects and realizes the halftone palette.  \n  \n-   Creates a new graphics object using the `hdc` parameter.  \n  \n-   Draws the image again.  \n  \n-   Releases the handle to the device context.  \n  \n The result is two renderings of the sample image: one with the 16-bit palette and one with the 8-bit palette.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#121](~/add/codesnippet/cpp/m-system.drawing.graphic_40_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#121](~/add/codesnippet/csharp/m-system.drawing.graphic_40_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#121](~/add/codesnippet/visualbasic/m-system.drawing.graphic_40_1.vb)]"
  syntax:
    content: public static IntPtr GetHalftonePalette ();
    parameters: []
    return:
      type: System.IntPtr
      description: "색상표에 대 한 핸들을 지정 하는 내부 포인터입니다."
  overload: System.Drawing.Graphics.GetHalftonePalette*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.GetHdc
  id: GetHdc
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: GetHdc()
  nameWithType: Graphics.GetHdc()
  fullName: System.Drawing.Graphics.GetHdc()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이 연결 된 장치 컨텍스트에 대 한 핸들을 가져옵니다 <xref href=&quot;System.Drawing.Graphics&quot;> </xref>합니다."
  remarks: "장치 컨텍스트는 기반의 Windows 구조 [!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)] 그래픽 개체 및 해당 관련된 특성으로 출력에 영향을 주는 그래픽 모드의 집합을 정의 하 합니다. 이 메서드는 글꼴을 제외 하 고 장치 컨텍스트를 반환합니다. 글꼴을 선택 하지 않으면 하기 때문에 호출 하는 <xref:System.Drawing.Font.FromHdc%2A>GetHdc 메서드에서 반환 된 핸들을 사용 하는 메서드를 사용할 수 있습니다.</xref:System.Drawing.Font.FromHdc%2A>       GetHdc에 대 한 호출 및 <xref:System.Drawing.Graphics.ReleaseHdc%2A>메서드 쌍에 나타나야 합니다.</xref:System.Drawing.Graphics.ReleaseHdc%2A> GetHdc의 범위에 있는 동안 및 <xref:System.Drawing.Graphics.ReleaseHdc%2A>메서드 쌍을 일반적으로 호출할 수 있습니다만 [!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)] 함수.</xref:System.Drawing.Graphics.ReleaseHdc%2A> 범위 하려고 한다는 점에서 호출 [!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)] 의 메서드는 <xref:System.Drawing.Graphics>생성 되는 `hdc` 실패 하 고 매개 변수는 `ObjectBusy` 오류.</xref:System.Drawing.Graphics> 또한 [!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)] 상태 변경 내용이 무시는 <xref:System.Drawing.Graphics>의 `hdc` 후속 작업에서 매개 변수.</xref:System.Drawing.Graphics>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The example illustrates calling a Windows [!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)] function to perform the same task as a [!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)] <xref:System.Drawing.Graphics> method. The code performs the following actions:  \n  \n-   Defines the interoperability <xref:System.Runtime.InteropServices.DllImportAttribute> attribute for the Windows DLL file gdi32.dll. This DLL contains the desired [!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)] function.  \n  \n-   Defines the <xref:System.Drawing.Rectangle> function in that DLL as external.  \n  \n-   Creates a red pen.  \n  \n-   With the pen, draws a rectangle to the screen using the [!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)] <xref:System.Drawing.Graphics.DrawRectangle%2A> method.  \n  \n-   Defines an internal pointer type variable `hdc` and sets its value to the handle to the device context of the form.  \n  \n-   Draws a rectangle to the screen using the [!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)] <xref:System.Drawing.Rectangle> function.  \n  \n-   Releases the device context represented by the `hdc` parameter.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#122](~/add/codesnippet/cpp/m-system.drawing.graphic_12_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#122](~/add/codesnippet/csharp/m-system.drawing.graphic_12_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#122](~/add/codesnippet/visualbasic/m-system.drawing.graphic_12_1.vb)]"
  syntax:
    content: public IntPtr GetHdc ();
    parameters: []
    return:
      type: System.IntPtr
      description: "이 연결 된 장치 컨텍스트에 대 한 핸들 <xref href=&quot;System.Drawing.Graphics&quot;> </xref>합니다."
  overload: System.Drawing.Graphics.GetHdc*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.GetNearestColor(System.Drawing.Color)
  id: GetNearestColor(System.Drawing.Color)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: GetNearestColor(Color)
  nameWithType: Graphics.GetNearestColor(Color)
  fullName: System.Drawing.Graphics.GetNearestColor(Color)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "지정 된 가장 가까운 색을 가져옵니다. <xref href=&quot;System.Drawing.Color&quot;> </xref> 구조입니다."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates an arbitrary color with ARGB coordinates (255, 165, 63, 136).  \n  \n-   Creates a solid brush and sets its color to the specified color.  \n  \n-   Fills an ellipse using the arbitrary color.  \n  \n-   Creates a second color and sets its value to the nearest system ARGB color.  \n  \n-   Fills a second ellipse with this color.  \n  \n The result is two ellipses: the first drawn with the arbitrary specified color and the second drawn with the system color nearest the specified color.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#123](~/add/codesnippet/cpp/m-system.drawing.graphic_43_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#123](~/add/codesnippet/csharp/m-system.drawing.graphic_43_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#123](~/add/codesnippet/visualbasic/m-system.drawing.graphic_43_1.vb)]"
  syntax:
    content: public System.Drawing.Color GetNearestColor (System.Drawing.Color color);
    parameters:
    - id: color
      type: System.Drawing.Color
      description: "<xref href=&quot;System.Drawing.Color&quot;></xref>구조체 일치 하는 것입니다."
    return:
      type: System.Drawing.Color
      description: "A <xref href=&quot;System.Drawing.Color&quot;> </xref> 와 지정 된 가장 가까운 색을 나타내는 구조는 <code> color </code> 매개 변수입니다."
  overload: System.Drawing.Graphics.GetNearestColor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.InterpolationMode
  id: InterpolationMode
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: InterpolationMode
  nameWithType: Graphics.InterpolationMode
  fullName: System.Drawing.Graphics.InterpolationMode
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이 관련 된 보간 모드를 가져오거나 설정 합니다. <xref href=&quot;System.Drawing.Graphics&quot;> </xref>합니다."
  remarks: "보간 모드를 두 개의 사이의 중간 값 하는 방법을 결정 끝점을 계산 합니다."
  syntax:
    content: public System.Drawing.Drawing2D.InterpolationMode InterpolationMode { get; set; }
    return:
      type: System.Drawing.Drawing2D.InterpolationMode
      description: "중 하나는 <xref href=&quot;System.Drawing.Drawing2D.InterpolationMode&quot;> </xref> 값입니다."
  overload: System.Drawing.Graphics.InterpolationMode*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.IntersectClip(System.Drawing.Rectangle)
  id: IntersectClip(System.Drawing.Rectangle)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: IntersectClip(Rectangle)
  nameWithType: Graphics.IntersectClip(Rectangle)
  fullName: System.Drawing.Graphics.IntersectClip(Rectangle)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이의 클립 영역을 업데이트 <xref href=&quot;System.Drawing.Graphics&quot;> </xref> 현재 클립 영역과 지정 된의 교차점으로 <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 구조입니다."
  remarks: "이 메서드를 할당 된 <xref:System.Drawing.Graphics.Clip%2A>속성 <xref:System.Drawing.Graphics>현재 클립 영역과 지정 된 사각형의 교차에 의해 표시 되는 영역은 `rect` 매개 변수.</xref:System.Drawing.Graphics> </xref:System.Drawing.Graphics.Clip%2A>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a rectangle with upper-left corner at (0, 0) and sets the clipping region to this rectangle.  \n  \n-   Creates a second rectangle with upper-left corner at (100, 100) and sets the clipping region to the intersection of this rectangle and the current clipping region (the first rectangle).  \n  \n-   Fills a large rectangle that includes both previous rectangles with a solid blue brush.  \n  \n-   Resets the clipping region to infinite.  \n  \n-   Draws rectangles around the two clipping regions. It uses a black pen for the first clipping rectangle and a red pen for the second clipping region.  \n  \n The result is that only the intersection of the two rectangles is filled with blue.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#124](~/add/codesnippet/cpp/m-system.drawing.graphic_32_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#124](~/add/codesnippet/csharp/m-system.drawing.graphic_32_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#124](~/add/codesnippet/visualbasic/m-system.drawing.graphic_32_1.vb)]"
  syntax:
    content: public void IntersectClip (System.Drawing.Rectangle rect);
    parameters:
    - id: rect
      type: System.Drawing.Rectangle
      description: "<xref href=&quot;System.Drawing.Rectangle&quot;></xref>현재 클립 영역과 교차 하는 구조입니다."
  overload: System.Drawing.Graphics.IntersectClip*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.IntersectClip(System.Drawing.RectangleF)
  id: IntersectClip(System.Drawing.RectangleF)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: IntersectClip(RectangleF)
  nameWithType: Graphics.IntersectClip(RectangleF)
  fullName: System.Drawing.Graphics.IntersectClip(RectangleF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이의 클립 영역을 업데이트 <xref href=&quot;System.Drawing.Graphics&quot;> </xref> 현재 클립 영역과 지정 된의 교차점으로 <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> 구조입니다."
  remarks: "이 메서드를 할당 된 <xref:System.Drawing.Graphics.Clip%2A>속성 <xref:System.Drawing.Graphics>현재 클립 영역과 지정 된 사각형의 교차에 의해 표시 되는 영역은 `rect` 매개 변수.</xref:System.Drawing.Graphics> </xref:System.Drawing.Graphics.Clip%2A>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a rectangle with upper-left corner at (0, 0) and sets the clipping region to this rectangle.  \n  \n-   Creates a second rectangle with upper-left corner at (100, 100) and sets the clipping region to the intersection of this rectangle and the current clipping region (the first rectangle).  \n  \n-   Fills a large rectangle that includes both previous rectangles with a solid blue brush.  \n  \n-   Resets the clipping region to infinite.  \n  \n-   Draws rectangles around the two clipping regions. It uses a black pen for the first clipping rectangle and a red pen for the second clipping region.  \n  \n The result is that only the intersection of the two rectangles is filled with blue.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#125](~/add/codesnippet/cpp/m-system.drawing.graphic_36_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#125](~/add/codesnippet/csharp/m-system.drawing.graphic_36_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#125](~/add/codesnippet/visualbasic/m-system.drawing.graphic_36_1.vb)]"
  syntax:
    content: public void IntersectClip (System.Drawing.RectangleF rect);
    parameters:
    - id: rect
      type: System.Drawing.RectangleF
      description: "<xref href=&quot;System.Drawing.RectangleF&quot;></xref>현재 클립 영역과 교차 하는 구조입니다."
  overload: System.Drawing.Graphics.IntersectClip*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.IntersectClip(System.Drawing.Region)
  id: IntersectClip(System.Drawing.Region)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: IntersectClip(Region)
  nameWithType: Graphics.IntersectClip(Region)
  fullName: System.Drawing.Graphics.IntersectClip(Region)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이의 클립 영역을 업데이트 <xref href=&quot;System.Drawing.Graphics&quot;> </xref> 현재 클립 영역과 지정 된의 교차점으로 <xref href=&quot;System.Drawing.Region&quot;> </xref>합니다."
  remarks: "이 메서드를 할당 된 <xref:System.Drawing.Graphics.Clip%2A>속성 <xref:System.Drawing.Graphics>현재 클립 영역과 지정 된 지역의 교차에 의해 표시 되는 영역은 `region` 매개 변수.</xref:System.Drawing.Graphics> </xref:System.Drawing.Graphics.Clip%2A>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a rectangle with upper-left corner at (0, 0).  \n  \n-   Creates a region and sets it to the rectangle, and sets the clipping region to this region.  \n  \n-   Creates a second rectangle with upper-left corner at (100, 100).  \n  \n-   Creates a region and sets it to the second rectangle, and sets the clipping region to the intersection of this region and the current clipping region (the first rectangle) using a combine mode of <xref:System.Drawing.Drawing2D.CombineMode>.  \n  \n-   Fills a large rectangle that includes both previous regions with a solid blue brush.  \n  \n-   Resets the clipping region to infinite.  \n  \n-   Draws rectangles around the two clipping regions. It uses a black pen for the first clipping region and a red pen for the second clipping region.  \n  \n The result is that only the intersection of the two regions is filled with blue.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#126](~/add/codesnippet/cpp/m-system.drawing.graphic_9_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#126](~/add/codesnippet/csharp/m-system.drawing.graphic_9_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#126](~/add/codesnippet/visualbasic/m-system.drawing.graphic_9_1.vb)]"
  syntax:
    content: public void IntersectClip (System.Drawing.Region region);
    parameters:
    - id: region
      type: System.Drawing.Region
      description: "<xref href=&quot;System.Drawing.Region&quot;></xref>현재 영역과 교차 합니다."
  overload: System.Drawing.Graphics.IntersectClip*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.IsClipEmpty
  id: IsClipEmpty
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: IsClipEmpty
  nameWithType: Graphics.IsClipEmpty
  fullName: System.Drawing.Graphics.IsClipEmpty
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "나타내는 값을 가져옵니다 여부이의 클립 영역 <xref href=&quot;System.Drawing.Graphics&quot;> </xref> 비어 있습니다."
  syntax:
    content: public bool IsClipEmpty { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우이의 클립 영역 <xref href=&quot;System.Drawing.Graphics&quot;> </xref> 고, 그러지 않으면 빈 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Drawing.Graphics.IsClipEmpty*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.IsVisible(System.Drawing.Point)
  id: IsVisible(System.Drawing.Point)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: IsVisible(Point)
  nameWithType: Graphics.IsVisible(Point)
  fullName: System.Drawing.Graphics.IsVisible(Point)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "나타냅니다 있는지 여부를 지정 된 <xref href=&quot;System.Drawing.Point&quot;> </xref> 구조가 표시 된 클립 영역 안에 포함 되었는지 <xref href=&quot;System.Drawing.Graphics&quot;> </xref>합니다."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a rectangular clipping region and sets it as the clipping region for the graphics object of the form using <xref:System.Drawing.Drawing2D.CombineMode>.  \n  \n-   Creates two points, one inside the clipping region and one outside.  \n  \n-   Tests each of the points for visibility and draws only the visible one.  \n  \n The result is one small red circle, which is within the clip region.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#127](~/add/codesnippet/cpp/m-system.drawing.graphic_6_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#127](~/add/codesnippet/csharp/m-system.drawing.graphic_6_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#127](~/add/codesnippet/visualbasic/m-system.drawing.graphic_6_1.vb)]"
  syntax:
    content: public bool IsVisible (System.Drawing.Point point);
    parameters:
    - id: point
      type: System.Drawing.Point
      description: "<xref href=&quot;System.Drawing.Point&quot;></xref>표시 여부를 테스트할 구조체입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>지정 된 점이 있는 경우는 <code> point </code> 매개 변수가 표시 된 클립 영역 안에 포함 되었는지 <xref href=&quot;System.Drawing.Graphics&quot;> </xref>, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Drawing.Graphics.IsVisible*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.IsVisible(System.Drawing.PointF)
  id: IsVisible(System.Drawing.PointF)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: IsVisible(PointF)
  nameWithType: Graphics.IsVisible(PointF)
  fullName: System.Drawing.Graphics.IsVisible(PointF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "나타냅니다 있는지 여부를 지정 된 <xref href=&quot;System.Drawing.PointF&quot;> </xref> 구조가 표시 된 클립 영역 안에 포함 되었는지 <xref href=&quot;System.Drawing.Graphics&quot;> </xref>합니다."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a rectangular clipping region and sets it as the clipping region for the graphics of the form using <xref:System.Drawing.Drawing2D.CombineMode>.  \n  \n-   Creates two points, one inside the clipping region and one outside.  \n  \n-   Tests each of the points for visibility and draws only the visible one.  \n  \n The result is one small red circle, which is within the clip region.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#128](~/add/codesnippet/cpp/m-system.drawing.graphic_39_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#128](~/add/codesnippet/csharp/m-system.drawing.graphic_39_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#128](~/add/codesnippet/visualbasic/m-system.drawing.graphic_39_1.vb)]"
  syntax:
    content: public bool IsVisible (System.Drawing.PointF point);
    parameters:
    - id: point
      type: System.Drawing.PointF
      description: "<xref href=&quot;System.Drawing.PointF&quot;></xref>표시 여부를 테스트할 구조체입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>지정 된 점이 있는 경우는 <code> point </code> 매개 변수가 표시 된 클립 영역 안에 포함 되었는지 <xref href=&quot;System.Drawing.Graphics&quot;> </xref>, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Drawing.Graphics.IsVisible*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.IsVisible(System.Drawing.Rectangle)
  id: IsVisible(System.Drawing.Rectangle)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: IsVisible(Rectangle)
  nameWithType: Graphics.IsVisible(Rectangle)
  fullName: System.Drawing.Graphics.IsVisible(Rectangle)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "가 사각형을 지정 하는지 여부를 나타냅니다.는 <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 구조가 표시 된 클립 영역 안에 포함 되었는지 <xref href=&quot;System.Drawing.Graphics&quot;> </xref>합니다."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a rectangular clipping region and sets it as the clipping region for the graphics object of the form using<xref:System.Drawing.Drawing2D.CombineMode>.  \n  \n-   Creates the location and size of two rectangles, one inside the clipping region and one outside.  \n  \n-   Tests each of the rectangles for visibility and draws only the visible one.  \n  \n The result is one small red rectangle, which is within the clip region.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#129](~/add/codesnippet/cpp/m-system.drawing.graphic_28_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#129](~/add/codesnippet/csharp/m-system.drawing.graphic_28_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#129](~/add/codesnippet/visualbasic/m-system.drawing.graphic_28_1.vb)]"
  syntax:
    content: public bool IsVisible (System.Drawing.Rectangle rect);
    parameters:
    - id: rect
      type: System.Drawing.Rectangle
      description: "<xref href=&quot;System.Drawing.Rectangle&quot;></xref>표시 여부를 테스트할 구조체입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>변수로 지정 된 사각형의 <code> rect </code> 매개 변수가 표시 된 클립 영역 안에 포함 되었는지 <xref href=&quot;System.Drawing.Graphics&quot;> </xref>, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Drawing.Graphics.IsVisible*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.IsVisible(System.Drawing.RectangleF)
  id: IsVisible(System.Drawing.RectangleF)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: IsVisible(RectangleF)
  nameWithType: Graphics.IsVisible(RectangleF)
  fullName: System.Drawing.Graphics.IsVisible(RectangleF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "가 사각형을 지정 하는지 여부를 나타냅니다.는 <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> 구조가 표시 된 클립 영역 안에 포함 되었는지 <xref href=&quot;System.Drawing.Graphics&quot;> </xref>합니다."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a rectangular clipping region and sets it as the clipping region for the graphics object of the form using <xref:System.Drawing.Drawing2D.CombineMode>.  \n  \n-   Creates two rectangles, one inside the clipping region and one outside.  \n  \n-   Tests each of the rectangles for visibility and draws only the visible one.  \n  \n The result is one small red rectangle, which is within the clip region.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#130](~/add/codesnippet/cpp/m-system.drawing.graphic_21_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#130](~/add/codesnippet/csharp/m-system.drawing.graphic_21_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#130](~/add/codesnippet/visualbasic/m-system.drawing.graphic_21_1.vb)]"
  syntax:
    content: public bool IsVisible (System.Drawing.RectangleF rect);
    parameters:
    - id: rect
      type: System.Drawing.RectangleF
      description: "<xref href=&quot;System.Drawing.RectangleF&quot;></xref>표시 여부를 테스트할 구조체입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>변수로 지정 된 사각형의 <code> rect </code> 매개 변수가 표시 된 클립 영역 안에 포함 되었는지 <xref href=&quot;System.Drawing.Graphics&quot;> </xref>, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Drawing.Graphics.IsVisible*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.IsVisible(System.Int32,System.Int32)
  id: IsVisible(System.Int32,System.Int32)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: IsVisible(Int32,Int32)
  nameWithType: Graphics.IsVisible(Int32,Int32)
  fullName: System.Drawing.Graphics.IsVisible(Int32,Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "좌표 쌍에 의해 지정 된 점이이 표시 된 클립 영역 안에 포함 되어 있는지 나타냅니다 <xref href=&quot;System.Drawing.Graphics&quot;> </xref>합니다."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a rectangular clipping region and sets it as the clipping region for the graphics object of the form using <xref:System.Drawing.Drawing2D.CombineMode>.  \n  \n-   Creates two points, one inside the clipping region and one outside.  \n  \n-   Tests each of the points for visibility and draws only the visible one.  \n  \n The result is one small red circle, which is within the clip region.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#131](~/add/codesnippet/cpp/m-system.drawing.graphic_15_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#131](~/add/codesnippet/csharp/m-system.drawing.graphic_15_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#131](~/add/codesnippet/visualbasic/m-system.drawing.graphic_15_1.vb)]"
  syntax:
    content: public bool IsVisible (int x, int y);
    parameters:
    - id: x
      type: System.Int32
      description: "표시 여부를 테스트할 점의 x 좌표입니다."
    - id: y
      type: System.Int32
      description: "표시 여부를 테스트할 점의 y 좌표입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>정의 된 점이 있는 경우는 <code> x </code> 및 <code> y </code> 매개 변수가 표시 된 클립 영역 안에 포함 되었는지 <xref href=&quot;System.Drawing.Graphics&quot;> </xref>, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Drawing.Graphics.IsVisible*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.IsVisible(System.Single,System.Single)
  id: IsVisible(System.Single,System.Single)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: IsVisible(Single,Single)
  nameWithType: Graphics.IsVisible(Single,Single)
  fullName: System.Drawing.Graphics.IsVisible(Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "좌표 쌍에 의해 지정 된 점이이 표시 된 클립 영역 안에 포함 되어 있는지 나타냅니다 <xref href=&quot;System.Drawing.Graphics&quot;> </xref>합니다."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a rectangular clipping region and sets it as the clipping region for the graphics object of the form using <xref:System.Drawing.Drawing2D.CombineMode>.  \n  \n-   Creates two points, one inside the clipping region and one outside.  \n  \n-   Tests each of the points for visibility and draws only the visible one.  \n  \n The result is one small red circle, which is within the clip region.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#133](~/add/codesnippet/cpp/m-system.drawing.graphic_16_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#133](~/add/codesnippet/csharp/m-system.drawing.graphic_16_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#133](~/add/codesnippet/visualbasic/m-system.drawing.graphic_16_1.vb)]"
  syntax:
    content: public bool IsVisible (float x, float y);
    parameters:
    - id: x
      type: System.Single
      description: "표시 여부를 테스트할 점의 x 좌표입니다."
    - id: y
      type: System.Single
      description: "표시 여부를 테스트할 점의 y 좌표입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>정의 된 점이 있는 경우는 <code> x </code> 및 <code> y </code> 매개 변수가 표시 된 클립 영역 안에 포함 되었는지 <xref href=&quot;System.Drawing.Graphics&quot;> </xref>, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Drawing.Graphics.IsVisible*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.IsVisible(System.Int32,System.Int32,System.Int32,System.Int32)
  id: IsVisible(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: IsVisible(Int32,Int32,Int32,Int32)
  nameWithType: Graphics.IsVisible(Int32,Int32,Int32,Int32)
  fullName: System.Drawing.Graphics.IsVisible(Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "좌표, 너비, 높이의 쌍으로 지정 된 사각형이이 표시 된 클립 영역 안에 포함 되어 있는지 나타냅니다 <xref href=&quot;System.Drawing.Graphics&quot;> </xref>합니다."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a rectangular clipping region and sets it as the clipping region for the graphics object of the form using <xref:System.Drawing.Drawing2D.CombineMode>.  \n  \n-   Creates the location and size of two rectangles, one inside the clipping region and one outside.  \n  \n-   Tests each of the rectangles for visibility and draws only the visible one.  \n  \n The result is one small red rectangle, which is within the clip region.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#132](~/add/codesnippet/cpp/83916884-8aa7-484f-8684-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#132](~/add/codesnippet/csharp/83916884-8aa7-484f-8684-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#132](~/add/codesnippet/visualbasic/83916884-8aa7-484f-8684-_1.vb)]"
  syntax:
    content: public bool IsVisible (int x, int y, int width, int height);
    parameters:
    - id: x
      type: System.Int32
      description: "표시 여부를 테스트할 사각형의 왼쪽 위 모퉁이의 x 좌표입니다."
    - id: y
      type: System.Int32
      description: "표시 여부를 테스트할 사각형의 왼쪽 위 모퉁이의 y 좌표입니다."
    - id: width
      type: System.Int32
      description: "표시 여부를 테스트할 사각형의 너비입니다."
    - id: height
      type: System.Int32
      description: "표시 여부를 테스트할 사각형의 높이입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>사각형에 정의 된 경우는 <code> x </code>, <code> y </code>, <code> width </code>, 및 <code> height </code> 매개 변수가 표시 된 클립 영역 안에 포함 되었는지 <xref href=&quot;System.Drawing.Graphics&quot;> </xref>, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Drawing.Graphics.IsVisible*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.IsVisible(System.Single,System.Single,System.Single,System.Single)
  id: IsVisible(System.Single,System.Single,System.Single,System.Single)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: IsVisible(Single,Single,Single,Single)
  nameWithType: Graphics.IsVisible(Single,Single,Single,Single)
  fullName: System.Drawing.Graphics.IsVisible(Single,Single,Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "좌표, 너비, 높이의 쌍으로 지정 된 사각형이이 표시 된 클립 영역 안에 포함 되어 있는지 나타냅니다 <xref href=&quot;System.Drawing.Graphics&quot;> </xref>합니다."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a rectangular clipping region and sets it as the clipping region for the graphics object of the form using <xref:System.Drawing.Drawing2D.CombineMode>.  \n  \n-   Creates the location and size of two rectangles, one inside the clipping region and one outside.  \n  \n-   Tests each of the rectangles for visibility and draws only the visible one.  \n  \n The result is one small red rectangle, which is within the clip region.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#134](~/add/codesnippet/cpp/26cd12b3-b0de-4137-a2c1-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#134](~/add/codesnippet/csharp/26cd12b3-b0de-4137-a2c1-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#134](~/add/codesnippet/visualbasic/26cd12b3-b0de-4137-a2c1-_1.vb)]"
  syntax:
    content: public bool IsVisible (float x, float y, float width, float height);
    parameters:
    - id: x
      type: System.Single
      description: "표시 여부를 테스트할 사각형의 왼쪽 위 모퉁이의 x 좌표입니다."
    - id: y
      type: System.Single
      description: "표시 여부를 테스트할 사각형의 왼쪽 위 모퉁이의 y 좌표입니다."
    - id: width
      type: System.Single
      description: "표시 여부를 테스트할 사각형의 너비입니다."
    - id: height
      type: System.Single
      description: "표시 여부를 테스트할 사각형의 높이입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>사각형에 정의 된 경우는 <code> x </code>, <code> y </code>, <code> width </code>, 및 <code> height </code> 매개 변수가 표시 된 클립 영역 안에 포함 되었는지 <xref href=&quot;System.Drawing.Graphics&quot;> </xref>, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Drawing.Graphics.IsVisible*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.IsVisibleClipEmpty
  id: IsVisibleClipEmpty
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: IsVisibleClipEmpty
  nameWithType: Graphics.IsVisibleClipEmpty
  fullName: System.Drawing.Graphics.IsVisibleClipEmpty
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "나타내는 값을 가져옵니다 있는지 여부를 표시 된 클립 영역이이 <xref href=&quot;System.Drawing.Graphics&quot;> </xref> 비어 있습니다."
  remarks: "표시 된 클립 영역이이의 클립 영역에 공통 된 `Graphics` 및 창의 클립 영역입니다."
  syntax:
    content: public bool IsVisibleClipEmpty { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우이 클립 영역의 표시 된 부분이 <xref href=&quot;System.Drawing.Graphics&quot;> </xref> 고, 그러지 않으면 빈 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Drawing.Graphics.IsVisibleClipEmpty*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.MeasureCharacterRanges(System.String,System.Drawing.Font,System.Drawing.RectangleF,System.Drawing.StringFormat)
  id: MeasureCharacterRanges(System.String,System.Drawing.Font,System.Drawing.RectangleF,System.Drawing.StringFormat)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: MeasureCharacterRanges(String,Font,RectangleF,StringFormat)
  nameWithType: Graphics.MeasureCharacterRanges(String,Font,RectangleF,StringFormat)
  fullName: System.Drawing.Graphics.MeasureCharacterRanges(String,Font,RectangleF,StringFormat)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "배열을 가져옵니다 <xref href=&quot;System.Drawing.Region&quot;> </xref> 개체, 지정된 된 문자열 내에서 문자 위치 범위의 경계를 지정 하며 각 합니다."
  remarks: "이 메서드에서 반환 된 지역이 해상도 기반의 문자열 한 해상도로 메타 파일에 기록 되며 나중에 다른 해상도로 다시 재생 하는 경우는 약간의 정밀도 손실이 수 있도록 합니다."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Sets a string \"First and Second ranges\" and a font for display of the string (\"Times New Roman\", 16 point).  \n  \n-   Sets two character ranges within the string (which correspond to the words \"First\" and \"Second\").  \n  \n-   Creates a rectangle in which to display the string.  \n  \n-   Sets the formatting of the string ¾ including the two character ranges.  \n  \n-   Draws the string to the screen.  \n  \n-   Measures the character ranges, determines rectangles that bound the two specified ranges.  \n  \n-   Draws the two rectangles to the screen.  \n  \n The result is the displayed string with the first range (\"First\") bounded by a red rectangle and the second range (\"Second\") bounded by a blue rectangle.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#135](~/add/codesnippet/cpp/edc4cf5e-df25-4e32-9c4e-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#135](~/add/codesnippet/csharp/edc4cf5e-df25-4e32-9c4e-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#135](~/add/codesnippet/visualbasic/edc4cf5e-df25-4e32-9c4e-_1.vb)]"
  syntax:
    content: public System.Drawing.Region[] MeasureCharacterRanges (string text, System.Drawing.Font font, System.Drawing.RectangleF layoutRect, System.Drawing.StringFormat stringFormat);
    parameters:
    - id: text
      type: System.String
      description: "측정할 문자열입니다."
    - id: font
      type: System.Drawing.Font
      description: "<xref href=&quot;System.Drawing.Font&quot;></xref>문자열의 텍스트 서식을 정의합니다."
    - id: layoutRect
      type: System.Drawing.RectangleF
      description: "<xref href=&quot;System.Drawing.RectangleF&quot;></xref>문자열에 대 한 레이아웃 사각형을 지정 하는 구조입니다."
    - id: stringFormat
      type: System.Drawing.StringFormat
      description: "<xref href=&quot;System.Drawing.StringFormat&quot;></xref>문자열에 대 한 줄 간격과 같은 서식 지정 정보를 나타내는입니다."
    return:
      type: System.Drawing.Region[]
      description: "이 메서드는 배열을 반환 <xref href=&quot;System.Drawing.Region&quot;> </xref> 개체, 지정된 된 문자열 내에서 문자 위치 범위의 경계를 지정 하며 각 합니다."
  overload: System.Drawing.Graphics.MeasureCharacterRanges*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font)
  id: MeasureString(System.String,System.Drawing.Font)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: MeasureString(String,Font)
  nameWithType: Graphics.MeasureString(String,Font)
  fullName: System.Drawing.Graphics.MeasureString(String,Font)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "지정 된 경우 지정 된 문자열을 측정 <xref href=&quot;System.Drawing.Font&quot;> </xref>합니다."
  remarks: "<xref:System.Drawing.Graphics.MeasureString%2A>반환 개별와 함께 사용할 문자열 및 문자 모양 있어 걸친 수 있도록 문자열 앞뒤 적은 양의 추가 공간이 포함 됩니다.</xref:System.Drawing.Graphics.MeasureString%2A> 또한의 <xref:System.Drawing.Graphics.DrawString%2A>메서드는 디스플레이 품질을 최적화 하기 위해 문자 모양 포인트를 조정 하 고 <xref:System.Drawing.Graphics.MeasureString%2A>.</xref:System.Drawing.Graphics.MeasureString%2A> 보고 하는 것 보다 좁은 문자열로 표시 될 수 있습니다</xref:System.Drawing.Graphics.DrawString%2A> 메트릭 (예: 서식 있는 텍스트를 구현 하는 경우) 레이아웃에서 인접 문자열에 대 한 적합 한을 가져오려면는 <xref:System.Drawing.Graphics.MeasureCharacterRanges%2A>메서드 또는 중 하나는 <xref:System.Drawing.Graphics.MeasureString%2A>를 사용 하는 메서드는 <xref:System.Drawing.StringFormat>, <xref:System.Drawing.StringFormat.GenericTypographic%2A>.</xref:System.Drawing.StringFormat.GenericTypographic%2A> 전달</xref:System.Drawing.StringFormat> </xref:System.Drawing.Graphics.MeasureString%2A> </xref:System.Drawing.Graphics.MeasureCharacterRanges%2A> 또한 <xref:System.Drawing.Graphics.TextRenderingHint%2A> <xref:System.Drawing.Graphics>은 <xref:System.Drawing.Text.TextRenderingHint>.</xref:System.Drawing.Text.TextRenderingHint> </xref:System.Drawing.Graphics> 대 한</xref:System.Drawing.Graphics.TextRenderingHint%2A> 확인"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a string to measure.  \n  \n-   Creates a font object and sets it to Arial (16 point).  \n  \n-   Creates a size object and uses it and the font object to measure the size of the string.  \n  \n-   Draws a red rectangle using the measured size of the string.  \n  \n-   Draws the string within the drawn rectangle.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#136](~/add/codesnippet/cpp/m-system.drawing.graphic_34_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#136](~/add/codesnippet/csharp/m-system.drawing.graphic_34_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#136](~/add/codesnippet/visualbasic/m-system.drawing.graphic_34_1.vb)]"
  syntax:
    content: public System.Drawing.SizeF MeasureString (string text, System.Drawing.Font font);
    parameters:
    - id: text
      type: System.String
      description: "측정할 문자열입니다."
    - id: font
      type: System.Drawing.Font
      description: "<xref href=&quot;System.Drawing.Font&quot;></xref>문자열의 텍스트 서식을 정의합니다."
    return:
      type: System.Drawing.SizeF
      description: "이 메서드는 반환는 <xref href=&quot;System.Drawing.SizeF&quot;> </xref> 하 여 지정 된 단위로 크기를 나타내는 구조는 <xref:System.Drawing.Graphics.PageUnit*>속성으로 지정 된 문자열의는 <code> text </code> 사용 하 여 그린 대로 매개 변수는 <code> font </code> 매개 변수.</xref:System.Drawing.Graphics.PageUnit*>"
  overload: System.Drawing.Graphics.MeasureString*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>font</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF)
  id: MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: MeasureString(String,Font,SizeF)
  nameWithType: Graphics.MeasureString(String,Font,SizeF)
  fullName: System.Drawing.Graphics.MeasureString(String,Font,SizeF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "지정 된 경우 지정 된 문자열을 측정 <xref href=&quot;System.Drawing.Font&quot;> </xref> 지정된 된 레이아웃 영역 내에서."
  remarks: "<xref:System.Drawing.Graphics.MeasureString%2A>반환 개별와 함께 사용할 문자열 및 문자 모양 있어 걸친 수 있도록 문자열 앞뒤 적은 양의 추가 공간이 포함 됩니다.</xref:System.Drawing.Graphics.MeasureString%2A> 또한의 <xref:System.Drawing.Graphics.DrawString%2A>메서드는 디스플레이 품질을 최적화 하기 위해 문자 모양 포인트를 조정 하 고 <xref:System.Drawing.Graphics.MeasureString%2A>.</xref:System.Drawing.Graphics.MeasureString%2A> 보고 하는 것 보다 좁은 문자열로 표시 될 수 있습니다</xref:System.Drawing.Graphics.DrawString%2A> 메트릭 (예: 서식 있는 텍스트를 구현 하는 경우) 레이아웃에서 인접 문자열에 대 한 적합 한을 가져오려면는 <xref:System.Drawing.Graphics.MeasureCharacterRanges%2A>메서드 또는 중 하나는 <xref:System.Drawing.Graphics.MeasureString%2A>를 사용 하는 메서드는 <xref:System.Drawing.StringFormat>, <xref:System.Drawing.StringFormat.GenericTypographic%2A>.</xref:System.Drawing.StringFormat.GenericTypographic%2A> 전달</xref:System.Drawing.StringFormat> </xref:System.Drawing.Graphics.MeasureString%2A> </xref:System.Drawing.Graphics.MeasureCharacterRanges%2A> 또한 <xref:System.Drawing.Graphics.TextRenderingHint%2A> <xref:System.Drawing.Graphics>은 <xref:System.Drawing.Text.TextRenderingHint>.</xref:System.Drawing.Text.TextRenderingHint> </xref:System.Drawing.Graphics> 대 한</xref:System.Drawing.Graphics.TextRenderingHint%2A> 확인"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a string to measure and a font object set to Arial (16 point).  \n  \n-   Sets the maximum layout size of the string.  \n  \n-   Creates a size object and uses it, the font object, and the maximum layout size to measure the size of the string.  \n  \n-   Draws a red rectangle using the measured size of the string.  \n  \n-   Draws the string within the drawn rectangle.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#138](~/add/codesnippet/cpp/50dd89a3-bb2e-48a0-9927-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#138](~/add/codesnippet/csharp/50dd89a3-bb2e-48a0-9927-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#138](~/add/codesnippet/visualbasic/50dd89a3-bb2e-48a0-9927-_1.vb)]"
  syntax:
    content: public System.Drawing.SizeF MeasureString (string text, System.Drawing.Font font, System.Drawing.SizeF layoutArea);
    parameters:
    - id: text
      type: System.String
      description: "측정할 문자열입니다."
    - id: font
      type: System.Drawing.Font
      description: "<xref href=&quot;System.Drawing.Font&quot;></xref>문자열의 텍스트 서식을 정의합니다."
    - id: layoutArea
      type: System.Drawing.SizeF
      description: "<xref href=&quot;System.Drawing.SizeF&quot;></xref>텍스트에 대 한 최대 레이아웃 영역을 지정 하는 구조입니다."
    return:
      type: System.Drawing.SizeF
      description: "이 메서드는 반환는 <xref href=&quot;System.Drawing.SizeF&quot;> </xref> 하 여 지정 된 단위로 크기를 나타내는 구조는 <xref:System.Drawing.Graphics.PageUnit*>속성으로 지정 된 문자열의는 <code> text </code> 사용 하 여 그린 대로 매개 변수는 <code> font </code> 매개 변수.</xref:System.Drawing.Graphics.PageUnit*>"
  overload: System.Drawing.Graphics.MeasureString*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>font</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Int32)
  id: MeasureString(System.String,System.Drawing.Font,System.Int32)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: MeasureString(String,Font,Int32)
  nameWithType: Graphics.MeasureString(String,Font,Int32)
  fullName: System.Drawing.Graphics.MeasureString(String,Font,Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "지정 된 경우 지정 된 문자열을 측정 <xref href=&quot;System.Drawing.Font&quot;> </xref>합니다."
  remarks: "`width` 매개 변수는 반환 된의 너비 구성의 최대값 지정 <xref:System.Drawing.SizeF>구조 (<xref:System.Drawing.SizeF.Width%2A>).</xref:System.Drawing.SizeF.Width%2A> </xref:System.Drawing.SizeF> 경우는 `width` 매개 변수를 사용 하는 반환 된 문자열의 실제 너비 보다 작으면 <xref:System.Drawing.SizeF.Width%2A>구성 요소는 지정된 된 너비 내에 맞는 문자의 최대 수를 나타내는 값으로 잘립니다.</xref:System.Drawing.SizeF.Width%2A> 반환 된 전체 문자열을 수용 하기 위해 <xref:System.Drawing.SizeF.Height%2A>구성 요소는 줄 바꿈 문자를 사용 하 여 문자열을 표시할 수 있는 값으로 조정 됩니다.</xref:System.Drawing.SizeF.Height%2A>       <xref:System.Drawing.Graphics.MeasureString%2A>반환 개별와 함께 사용할 문자열 및 문자 모양 있어 걸친 수 있도록 문자열 앞뒤 적은 양의 추가 공간이 포함 됩니다.</xref:System.Drawing.Graphics.MeasureString%2A> 또한의 <xref:System.Drawing.Graphics.DrawString%2A>메서드는 디스플레이 품질을 최적화 하기 위해 문자 모양 포인트를 조정 하 고 <xref:System.Drawing.Graphics.MeasureString%2A>.</xref:System.Drawing.Graphics.MeasureString%2A> 보고 하는 것 보다 좁은 문자열로 표시 될 수 있습니다</xref:System.Drawing.Graphics.DrawString%2A> 메트릭 (예: 서식 있는 텍스트를 구현 하는 경우) 레이아웃에서 인접 문자열에 대 한 적합 한을 가져오려면는 <xref:System.Drawing.Graphics.MeasureCharacterRanges%2A>메서드 또는 중 하나는 <xref:System.Drawing.Graphics.MeasureString%2A>를 사용 하는 메서드는 <xref:System.Drawing.StringFormat>, <xref:System.Drawing.StringFormat.GenericTypographic%2A>.</xref:System.Drawing.StringFormat.GenericTypographic%2A> 전달</xref:System.Drawing.StringFormat> </xref:System.Drawing.Graphics.MeasureString%2A> </xref:System.Drawing.Graphics.MeasureCharacterRanges%2A> 또한 <xref:System.Drawing.Graphics.TextRenderingHint%2A> <xref:System.Drawing.Graphics>은 <xref:System.Drawing.Text.TextRenderingHint>.</xref:System.Drawing.Text.TextRenderingHint> </xref:System.Drawing.Graphics> 대 한</xref:System.Drawing.Graphics.TextRenderingHint%2A> 확인"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a string to measure and a font object set to Arial (16 point).  \n  \n-   Sets the maximum width of the string.  \n  \n-   Creates a size object and uses it, the font object, and the maximum string width to measure the size of the string.  \n  \n-   Draws a red rectangle using the measured size of the string.  \n  \n-   Draws the string within the drawn rectangle.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#141](~/add/codesnippet/cpp/ff03a9b3-c4b1-47e3-8c4c-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#141](~/add/codesnippet/csharp/ff03a9b3-c4b1-47e3-8c4c-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#141](~/add/codesnippet/visualbasic/ff03a9b3-c4b1-47e3-8c4c-_1.vb)]"
  syntax:
    content: public System.Drawing.SizeF MeasureString (string text, System.Drawing.Font font, int width);
    parameters:
    - id: text
      type: System.String
      description: "측정할 문자열입니다."
    - id: font
      type: System.Drawing.Font
      description: "<xref href=&quot;System.Drawing.Font&quot;></xref>문자열의 형식을 정의합니다."
    - id: width
      type: System.Int32
      description: "픽셀 단위로 문자열의 최대 너비입니다."
    return:
      type: System.Drawing.SizeF
      description: "이 메서드는 반환는 <xref href=&quot;System.Drawing.SizeF&quot;> </xref> 하 여 지정 된 단위로 크기를 나타내는 구조는 <xref:System.Drawing.Graphics.PageUnit*>속성에 지정 된 문자열의는 <code> text </code> 사용 하 여 그린 대로 매개 변수는 <code> font </code> 매개 변수.</xref:System.Drawing.Graphics.PageUnit*>"
  overload: System.Drawing.Graphics.MeasureString*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>font</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.PointF,System.Drawing.StringFormat)
  id: MeasureString(System.String,System.Drawing.Font,System.Drawing.PointF,System.Drawing.StringFormat)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: MeasureString(String,Font,PointF,StringFormat)
  nameWithType: Graphics.MeasureString(String,Font,PointF,StringFormat)
  fullName: System.Drawing.Graphics.MeasureString(String,Font,PointF,StringFormat)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "지정 된 경우 지정 된 문자열을 측정 <xref href=&quot;System.Drawing.Font&quot;> </xref> 지정 된 형식이 지정 된 <xref href=&quot;System.Drawing.StringFormat&quot;> </xref>합니다."
  remarks: "<xref:System.Drawing.Graphics.MeasureString%2A>반환 개별와 함께 사용할 문자열 및 문자 모양 있어 걸친 수 있도록 문자열 앞뒤 적은 양의 추가 공간이 포함 됩니다.</xref:System.Drawing.Graphics.MeasureString%2A> 또한의 <xref:System.Drawing.Graphics.DrawString%2A>메서드는 디스플레이 품질을 최적화 하기 위해 문자 모양 포인트를 조정 하 고 <xref:System.Drawing.Graphics.MeasureString%2A>.</xref:System.Drawing.Graphics.MeasureString%2A> 보고 하는 것 보다 좁은 문자열로 표시 될 수 있습니다</xref:System.Drawing.Graphics.DrawString%2A> 메트릭 (예: 서식 있는 텍스트를 구현 하는 경우) 레이아웃에서 인접 문자열에 대 한 적합 한을 가져오려면는 <xref:System.Drawing.Graphics.MeasureCharacterRanges%2A>메서드 또는 사용 하는 전체 페이지 메서드 중 하나는 <xref:System.Drawing.StringFormat>, <xref:System.Drawing.StringFormat.GenericTypographic%2A>.</xref:System.Drawing.StringFormat.GenericTypographic%2A> 전달</xref:System.Drawing.StringFormat> </xref:System.Drawing.Graphics.MeasureCharacterRanges%2A> 또한 <xref:System.Drawing.Graphics.TextRenderingHint%2A> <xref:System.Drawing.Graphics>은 <xref:System.Drawing.Text.TextRenderingHint>.</xref:System.Drawing.Text.TextRenderingHint> </xref:System.Drawing.Graphics> 대 한</xref:System.Drawing.Graphics.TextRenderingHint%2A> 확인"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a string to measure and a font object set to Arial (16 point)  \n  \n-   Creates a point to locate the upper-left corner of the string.  \n  \n-   Creates a string format object and sets its format flags to <xref:System.Drawing.StringFormatFlags>.  \n  \n-   Creates a size object to measure the string.  \n  \n-   Measures the size of the string, using the string, the font object, the locating point, and the string format.  \n  \n-   Draws a red rectangle using the locating point and the measured size of the string.  \n  \n-   Draws the string within the drawn rectangle.  \n  \n The result is a vertical rectangle enclosing a vertical string.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#137](~/add/codesnippet/cpp/bf732ea7-b026-45c6-903e-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#137](~/add/codesnippet/csharp/bf732ea7-b026-45c6-903e-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#137](~/add/codesnippet/visualbasic/bf732ea7-b026-45c6-903e-_1.vb)]"
  syntax:
    content: public System.Drawing.SizeF MeasureString (string text, System.Drawing.Font font, System.Drawing.PointF origin, System.Drawing.StringFormat stringFormat);
    parameters:
    - id: text
      type: System.String
      description: "측정할 문자열입니다."
    - id: font
      type: System.Drawing.Font
      description: "<xref href=&quot;System.Drawing.Font&quot;></xref>문자열의 텍스트 서식을 정의합니다."
    - id: origin
      type: System.Drawing.PointF
      description: "<xref href=&quot;System.Drawing.PointF&quot;></xref>문자열의 왼쪽 위 모퉁이 나타내는 구조입니다."
    - id: stringFormat
      type: System.Drawing.StringFormat
      description: "<xref href=&quot;System.Drawing.StringFormat&quot;></xref>문자열에 대 한 줄 간격과 같은 서식 지정 정보를 나타내는입니다."
    return:
      type: System.Drawing.SizeF
      description: "이 메서드는 반환는 <xref href=&quot;System.Drawing.SizeF&quot;> </xref> 하 여 지정 된 단위로 크기를 나타내는 구조는 <xref:System.Drawing.Graphics.PageUnit*>속성으로 지정 된 문자열의는 <code> text </code> 사용 하 여 그린 대로 매개 변수는 <code> font </code> 매개 변수 및 <code> stringFormat </code> 매개 변수.</xref:System.Drawing.Graphics.PageUnit*>"
  overload: System.Drawing.Graphics.MeasureString*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>font</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat)
  id: MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: MeasureString(String,Font,SizeF,StringFormat)
  nameWithType: Graphics.MeasureString(String,Font,SizeF,StringFormat)
  fullName: System.Drawing.Graphics.MeasureString(String,Font,SizeF,StringFormat)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "지정 된 경우 지정 된 문자열을 측정 <xref href=&quot;System.Drawing.Font&quot;> </xref> 지정 된 형식이 지정 된 <xref href=&quot;System.Drawing.StringFormat&quot;> </xref>합니다."
  remarks: "<xref:System.Drawing.Graphics.MeasureString%2A>반환 개별와 함께 사용할 문자열 및 문자 모양 있어 걸친 수 있도록 문자열 앞뒤 적은 양의 추가 공간이 포함 됩니다.</xref:System.Drawing.Graphics.MeasureString%2A> 또한의 <xref:System.Drawing.Graphics.DrawString%2A>메서드는 디스플레이 품질을 최적화 하기 위해 문자 모양 포인트를 조정 하 고 <xref:System.Drawing.Graphics.MeasureString%2A>.</xref:System.Drawing.Graphics.MeasureString%2A> 보고 하는 것 보다 좁은 문자열로 표시 될 수 있습니다</xref:System.Drawing.Graphics.DrawString%2A> 메트릭 (예: 서식 있는 텍스트를 구현 하는 경우) 레이아웃에서 인접 문자열에 대 한 적합 한을 가져오려면는 <xref:System.Drawing.Graphics.MeasureCharacterRanges%2A>메서드 또는 중 하나는 <xref:System.Drawing.Graphics.MeasureString%2A>를 사용 하는 메서드는 <xref:System.Drawing.StringFormat>, <xref:System.Drawing.StringFormat.GenericTypographic%2A>.</xref:System.Drawing.StringFormat.GenericTypographic%2A> 전달</xref:System.Drawing.StringFormat> </xref:System.Drawing.Graphics.MeasureString%2A> </xref:System.Drawing.Graphics.MeasureCharacterRanges%2A> 또한 <xref:System.Drawing.Graphics.TextRenderingHint%2A> <xref:System.Drawing.Graphics>은 <xref:System.Drawing.Text.TextRenderingHint>.</xref:System.Drawing.Text.TextRenderingHint> </xref:System.Drawing.Graphics> 대 한</xref:System.Drawing.Graphics.TextRenderingHint%2A> 확인"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a string to measure and a font object set to Arial (16 point).  \n  \n-   Sets the maximum layout size of the string, creating a size object to measure the string.  \n  \n-   Creates a string format object and sets its format flags to <xref:System.Drawing.StringFormatFlags>.  \n  \n-   Measures the size of the string, using the string, the font object, the maximum layout size, and the string format.  \n  \n-   Draws a red rectangle using the measured size of the string.  \n  \n-   Draws the string within the drawn rectangle.  \n  \n The result is a vertical rectangle enclosing a vertical string.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#139](~/add/codesnippet/cpp/c825d94b-4b0b-4b74-8f63-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#139](~/add/codesnippet/csharp/c825d94b-4b0b-4b74-8f63-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#139](~/add/codesnippet/visualbasic/c825d94b-4b0b-4b74-8f63-_1.vb)]"
  syntax:
    content: public System.Drawing.SizeF MeasureString (string text, System.Drawing.Font font, System.Drawing.SizeF layoutArea, System.Drawing.StringFormat stringFormat);
    parameters:
    - id: text
      type: System.String
      description: "측정할 문자열입니다."
    - id: font
      type: System.Drawing.Font
      description: "<xref href=&quot;System.Drawing.Font&quot;></xref>문자열의 텍스트 서식을 정의합니다."
    - id: layoutArea
      type: System.Drawing.SizeF
      description: "<xref href=&quot;System.Drawing.SizeF&quot;></xref>텍스트에 대 한 최대 레이아웃 영역을 지정 하는 구조입니다."
    - id: stringFormat
      type: System.Drawing.StringFormat
      description: "<xref href=&quot;System.Drawing.StringFormat&quot;></xref>문자열에 대 한 줄 간격과 같은 서식 지정 정보를 나타내는입니다."
    return:
      type: System.Drawing.SizeF
      description: "이 메서드는 반환는 <xref href=&quot;System.Drawing.SizeF&quot;> </xref> 하 여 지정 된 단위로 크기를 나타내는 구조는 <xref:System.Drawing.Graphics.PageUnit*>속성에 지정 된 문자열의는 <code> text </code> 사용 하 여 그린 대로 매개 변수는 <code> font </code> 매개 변수 및 <code> stringFormat </code> 매개 변수.</xref:System.Drawing.Graphics.PageUnit*>"
  overload: System.Drawing.Graphics.MeasureString*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>font</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Int32,System.Drawing.StringFormat)
  id: MeasureString(System.String,System.Drawing.Font,System.Int32,System.Drawing.StringFormat)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: MeasureString(String,Font,Int32,StringFormat)
  nameWithType: Graphics.MeasureString(String,Font,Int32,StringFormat)
  fullName: System.Drawing.Graphics.MeasureString(String,Font,Int32,StringFormat)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "지정 된 경우 지정 된 문자열을 측정 <xref href=&quot;System.Drawing.Font&quot;> </xref> 지정 된 형식이 지정 된 <xref href=&quot;System.Drawing.StringFormat&quot;> </xref>합니다."
  remarks: "<xref:System.Drawing.Graphics.MeasureString%2A>반환 개별와 함께 사용할 문자열 및 문자 모양 있어 걸친 수 있도록 문자열 앞뒤 적은 양의 추가 공간이 포함 됩니다.</xref:System.Drawing.Graphics.MeasureString%2A> 또한의 <xref:System.Drawing.Graphics.DrawString%2A>메서드는 디스플레이 품질을 최적화 하기 위해 문자 모양 포인트를 조정 하 고 <xref:System.Drawing.Graphics.MeasureString%2A>.</xref:System.Drawing.Graphics.MeasureString%2A> 보고 하는 것 보다 좁은 문자열로 표시 될 수 있습니다</xref:System.Drawing.Graphics.DrawString%2A> 메트릭 (예: 서식 있는 텍스트를 구현 하는 경우) 레이아웃에서 인접 문자열에 대 한 적합 한을 가져오려면는 <xref:System.Drawing.Graphics.MeasureCharacterRanges%2A>메서드 또는 중 하나는 <xref:System.Drawing.Graphics.MeasureString%2A>를 사용 하는 메서드는 <xref:System.Drawing.StringFormat>, <xref:System.Drawing.StringFormat.GenericTypographic%2A>.</xref:System.Drawing.StringFormat.GenericTypographic%2A> 전달</xref:System.Drawing.StringFormat> </xref:System.Drawing.Graphics.MeasureString%2A> </xref:System.Drawing.Graphics.MeasureCharacterRanges%2A> 또한 <xref:System.Drawing.Graphics.TextRenderingHint%2A> <xref:System.Drawing.Graphics>은 <xref:System.Drawing.Text.TextRenderingHint>.</xref:System.Drawing.Text.TextRenderingHint> </xref:System.Drawing.Graphics> 대 한</xref:System.Drawing.Graphics.TextRenderingHint%2A> 확인"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a string to measure and a font object set it to Arial (16 point).  \n  \n-   Sets the maximum width of the string.  \n  \n-   Creates a string format object and sets its format flags to<xref:System.Drawing.StringFormatFlags>.  \n  \n-   Creates a size object to measure the string.  \n  \n-   Measures the size of the string, using the string, the font object, the maximum width, and the string format.  \n  \n-   Draws a red rectangle using the measured size of the string.  \n  \n-   Draws the string within the drawn rectangle.  \n  \n The result is a vertical rectangle enclosing a vertical string.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#142](~/add/codesnippet/cpp/75feefaf-ae55-4db8-a351-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#142](~/add/codesnippet/csharp/75feefaf-ae55-4db8-a351-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#142](~/add/codesnippet/visualbasic/75feefaf-ae55-4db8-a351-_1.vb)]"
  syntax:
    content: public System.Drawing.SizeF MeasureString (string text, System.Drawing.Font font, int width, System.Drawing.StringFormat format);
    parameters:
    - id: text
      type: System.String
      description: "측정할 문자열입니다."
    - id: font
      type: System.Drawing.Font
      description: "<xref href=&quot;System.Drawing.Font&quot;></xref>문자열의 텍스트 서식을 정의합니다."
    - id: width
      type: System.Int32
      description: "문자열의 최대 너비입니다."
    - id: format
      type: System.Drawing.StringFormat
      description: "<xref href=&quot;System.Drawing.StringFormat&quot;></xref>문자열에 대 한 줄 간격과 같은 서식 지정 정보를 나타내는입니다."
    return:
      type: System.Drawing.SizeF
      description: "이 메서드는 반환는 <xref href=&quot;System.Drawing.SizeF&quot;> </xref> 하 여 지정 된 단위로 크기를 나타내는 구조는 <xref:System.Drawing.Graphics.PageUnit*>속성에 지정 된 문자열의는 <code> text </code> 사용 하 여 그린 대로 매개 변수는 <code> font </code> 매개 변수 및 <code> stringFormat </code> 매개 변수.</xref:System.Drawing.Graphics.PageUnit*>"
  overload: System.Drawing.Graphics.MeasureString*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>font</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat,System.Int32@,System.Int32@)
  id: MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat,System.Int32@,System.Int32@)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: MeasureString(String,Font,SizeF,StringFormat,Int32,Int32)
  nameWithType: Graphics.MeasureString(String,Font,SizeF,StringFormat,Int32,Int32)
  fullName: System.Drawing.Graphics.MeasureString(String,Font,SizeF,StringFormat,Int32,Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "지정 된 경우 지정 된 문자열을 측정 <xref href=&quot;System.Drawing.Font&quot;> </xref> 지정 된 형식이 지정 된 <xref href=&quot;System.Drawing.StringFormat&quot;> </xref>합니다."
  remarks: "<xref:System.Drawing.Graphics.MeasureString%2A>반환 개별와 함께 사용할 문자열 및 문자 모양 있어 걸친 수 있도록 문자열 앞뒤 적은 양의 추가 공간이 포함 됩니다.</xref:System.Drawing.Graphics.MeasureString%2A> 또한의 <xref:System.Drawing.Graphics.DrawString%2A>메서드는 디스플레이 품질을 최적화 하기 위해 문자 모양 포인트를 조정 하 고 <xref:System.Drawing.Graphics.MeasureString%2A>.</xref:System.Drawing.Graphics.MeasureString%2A> 보고 하는 것 보다 좁은 문자열로 표시 될 수 있습니다</xref:System.Drawing.Graphics.DrawString%2A> 메트릭 (예: 서식 있는 텍스트를 구현 하는 경우) 레이아웃에서 인접 문자열에 대 한 적합 한을 가져오려면 사용 <xref:System.Drawing.Graphics.MeasureCharacterRanges%2A>메서드나 <xref:System.Drawing.Graphics.MeasureString%2A>하에서는 <xref:System.Drawing.StringFormat> <xref:System.Drawing.StringFormat.GenericTypographic%2A>.</xref:System.Drawing.StringFormat.GenericTypographic%2A> 전달</xref:System.Drawing.StringFormat> 하는 메서드</xref:System.Drawing.Graphics.MeasureString%2A> 중 하나</xref:System.Drawing.Graphics.MeasureCharacterRanges%2A> 또한 <xref:System.Drawing.Graphics.TextRenderingHint%2A> <xref:System.Drawing.Graphics>은 <xref:System.Drawing.Text.TextRenderingHint>.</xref:System.Drawing.Text.TextRenderingHint> </xref:System.Drawing.Graphics> 대 한</xref:System.Drawing.Graphics.TextRenderingHint%2A> 확인"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a string to measure and a font object set to Arial (16 point)  \n  \n-   Sets the maximum layout size of the string.  \n  \n-   Creates a string format object and sets its format flags to <xref:System.Drawing.StringFormatFlags>.  \n  \n-   Creates the integer variables `charactersFitted` and `linesFilled` and a size object to measure the string.  \n  \n-   Measures the size of the string and determines the number of characters fitted and lines filled, using the string, the font object, the maximum layout size, and the string format.  \n  \n-   Draws a red rectangle using the measured size of the string.  \n  \n-   Draws the string within the drawn rectangle.  \n  \n-   Draws the values of the number of characters fitted and lines filled.  \n  \n The result is a vertical rectangle enclosing a vertical string.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#140](~/add/codesnippet/cpp/bb658a94-1822-409c-9d7b-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#140](~/add/codesnippet/csharp/bb658a94-1822-409c-9d7b-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#140](~/add/codesnippet/visualbasic/bb658a94-1822-409c-9d7b-_1.vb)]"
  syntax:
    content: public System.Drawing.SizeF MeasureString (string text, System.Drawing.Font font, System.Drawing.SizeF layoutArea, System.Drawing.StringFormat stringFormat, out int charactersFitted, out int linesFilled);
    parameters:
    - id: text
      type: System.String
      description: "측정할 문자열입니다."
    - id: font
      type: System.Drawing.Font
      description: "<xref href=&quot;System.Drawing.Font&quot;></xref>문자열의 텍스트 서식을 정의합니다."
    - id: layoutArea
      type: System.Drawing.SizeF
      description: "<xref href=&quot;System.Drawing.SizeF&quot;></xref>텍스트에 대 한 최대 레이아웃 영역을 지정 하는 구조입니다."
    - id: stringFormat
      type: System.Drawing.StringFormat
      description: "<xref href=&quot;System.Drawing.StringFormat&quot;></xref>문자열에 대 한 줄 간격과 같은 서식 지정 정보를 나타내는입니다."
    - id: charactersFitted
      type: System.Int32
      description: "문자열의 문자 수입니다."
    - id: linesFilled
      type: System.Int32
      description: "문자열에서 텍스트 줄의 수입니다."
    return:
      type: System.Drawing.SizeF
      description: "이 메서드는 반환는 <xref href=&quot;System.Drawing.SizeF&quot;> </xref> 하 여 지정 된 단위에서 문자열의 크기를 나타내는 구조는 <xref:System.Drawing.Graphics.PageUnit*>속성의는 <code> text </code> 사용 하 여 그린 대로 매개 변수는 <code> font </code> 매개 변수 및 <code> stringFormat </code> 매개 변수.</xref:System.Drawing.Graphics.PageUnit*>"
  overload: System.Drawing.Graphics.MeasureString*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>font</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Graphics.MultiplyTransform(System.Drawing.Drawing2D.Matrix)
  id: MultiplyTransform(System.Drawing.Drawing2D.Matrix)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: MultiplyTransform(Matrix)
  nameWithType: Graphics.MultiplyTransform(Matrix)
  fullName: System.Drawing.Graphics.MultiplyTransform(Matrix)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이 월드 변형을 곱하는 <xref href=&quot;System.Drawing.Graphics&quot;> </xref> 지정는 <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref>합니다."
  remarks: "이 메서드에 의해 지정 된 매트릭스 앞에 추가 `matrix` 매개 변수, 결과 있도록 `matrix` 월드 변환을 x."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a `transformMatrix` matrix (a two by two identity matrix plus a zero-translation vector).  \n  \n-   Translates the transform matrix by a vector (200, 100).  \n  \n-   Rotates the world transformation matrix of the Windows Form by 30 degrees, prepends the rotation matrix for 30 degrees to the form's transformation matrix.  \n  \n-   Multiplies the rotated world transformation matrix by the translated `transformMatrix`, and prepends the `transformMatrix` to the world transformation matrix.  \n  \n-   Draws a rotated, translated ellipse.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#143](~/add/codesnippet/cpp/m-system.drawing.graphic_10_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#143](~/add/codesnippet/csharp/m-system.drawing.graphic_10_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#143](~/add/codesnippet/visualbasic/m-system.drawing.graphic_10_1.vb)]"
  syntax:
    content: public void MultiplyTransform (System.Drawing.Drawing2D.Matrix matrix);
    parameters:
    - id: matrix
      type: System.Drawing.Drawing2D.Matrix
      description: "4 x&4; <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> 월드 변형을 곱하는입니다."
  overload: System.Drawing.Graphics.MultiplyTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)
  id: MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: MultiplyTransform(Matrix,MatrixOrder)
  nameWithType: Graphics.MultiplyTransform(Matrix,MatrixOrder)
  fullName: System.Drawing.Graphics.MultiplyTransform(Matrix,MatrixOrder)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이 월드 변형을 곱하는 <xref href=&quot;System.Drawing.Graphics&quot;> </xref> 지정는 <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> 지정 된 순서로 합니다."
  remarks: "값이<xref:System.Drawing.Drawing2D.MatrixOrder> 에 대 한는 `order` 곱하기의 순서는 매개 변수 지정 `matrix` 월드 변환을 x.</xref:System.Drawing.Drawing2D.MatrixOrder> 값이 <xref:System.Drawing.Drawing2D.MatrixOrder>에 대 한 `order` 곱하기의 순서 월드 변형을 x 임을 지정 `matrix`.</xref:System.Drawing.Drawing2D.MatrixOrder>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a `transformMatrix` matrix (a two by two identity matrix plus a zero-translation vector).  \n  \n-   Translates the transform matrix by a vector (200, 100).  \n  \n-   Rotates the world transformation matrix of the Windows Form by 30 degrees, prepending the rotation matrix for 30 degrees to the form's transformation matrix.  \n  \n-   Multiplies the rotated world transformation matrix by the translated `transformMatrix`, appending the `transformMatrix` to the world transformation matrix.  \n  \n-   Draws a rotated, translated ellipse.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#144](~/add/codesnippet/cpp/cc5350a1-ed7f-4ad4-a876-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#144](~/add/codesnippet/csharp/cc5350a1-ed7f-4ad4-a876-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#144](~/add/codesnippet/visualbasic/cc5350a1-ed7f-4ad4-a876-_1.vb)]"
  syntax:
    content: public void MultiplyTransform (System.Drawing.Drawing2D.Matrix matrix, System.Drawing.Drawing2D.MatrixOrder order);
    parameters:
    - id: matrix
      type: System.Drawing.Drawing2D.Matrix
      description: "4 x&4; <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> 월드 변형을 곱하는입니다."
    - id: order
      type: System.Drawing.Drawing2D.MatrixOrder
      description: "멤버는 <xref href=&quot;System.Drawing.Drawing2D.MatrixOrder&quot;> </xref> 곱하기의 순서를 결정 하는 열거형입니다."
  overload: System.Drawing.Graphics.MultiplyTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.PageScale
  id: PageScale
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: PageScale
  nameWithType: Graphics.PageScale
  fullName: System.Drawing.Graphics.PageScale
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "전체 단위와이 대 한 페이지 단위 사이의 크기 조정을 가져오거나 <xref href=&quot;System.Drawing.Graphics&quot;> </xref>합니다."
  remarks: ''
  example:
  - "The following code example demonstrates how to use the PageScale and <xref:System.Drawing.Graphics.TranslateTransform%2A> members to change the scale and origin when you draw a rectangle.  \n  \n This example is designed to be used with Windows Forms. Paste the code into a form and call the `ChangePageScaleAndTranslateTransform` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cpp[System.Drawing.GraphicsProperties#2](~/add/codesnippet/cpp/p-system.drawing.graphic_1_1.cpp)]\n [!code-vb[System.Drawing.GraphicsProperties#2](~/add/codesnippet/visualbasic/p-system.drawing.graphic_1_1.vb)]\n [!code-cs[System.Drawing.GraphicsProperties#2](~/add/codesnippet/csharp/p-system.drawing.graphic_1_1.cs)]"
  syntax:
    content: public float PageScale { get; set; }
    return:
      type: System.Single
      description: "이 속성에는 전체 단위와이 대 한 페이지 단위 사이의 크기 조정에 대 한 값 지정 <xref href=&quot;System.Drawing.Graphics&quot;> </xref>합니다."
  overload: System.Drawing.Graphics.PageScale*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.PageUnit
  id: PageUnit
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: PageUnit
  nameWithType: Graphics.PageUnit
  fullName: System.Drawing.Graphics.PageUnit
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이 페이지 좌표에 사용 되는 측정 단위를 가져오거나 설정 합니다. <xref href=&quot;System.Drawing.Graphics&quot;> </xref>합니다."
  remarks: "그래픽 장치는이 <xref:System.Drawing.Graphics>.</xref:System.Drawing.Graphics> 의 페이지 좌표에 사용 되는 측정 단위"
  example:
  - "The following code example demonstrates the effect of changing the PageUnit property.  \n  \n This example is designed to be used with Windows Forms. Paste the code into a form and call the `ChangePageUnit` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cpp[System.Drawing.GraphicsProperties#3](~/add/codesnippet/cpp/p-system.drawing.graphic_3_1.cpp)]\n [!code-vb[System.Drawing.GraphicsProperties#3](~/add/codesnippet/visualbasic/p-system.drawing.graphic_3_1.vb)]\n [!code-cs[System.Drawing.GraphicsProperties#3](~/add/codesnippet/csharp/p-system.drawing.graphic_3_1.cs)]"
  syntax:
    content: public System.Drawing.GraphicsUnit PageUnit { get; set; }
    return:
      type: System.Drawing.GraphicsUnit
      description: "중 하나는 <xref href=&quot;System.Drawing.GraphicsUnit&quot;> </xref> 이외의 값 <xref href=&quot;System.Drawing.GraphicsUnit&quot;> </xref>합니다."
  overload: System.Drawing.Graphics.PageUnit*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "PageUnit로 설정 된 <xref href=&quot;System.Drawing.GraphicsUnit&quot;> </xref>, 물리적 단위 않습니다."
  platform:
  - net462
- uid: System.Drawing.Graphics.PixelOffsetMode
  id: PixelOffsetMode
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: PixelOffsetMode
  nameWithType: Graphics.PixelOffsetMode
  fullName: System.Drawing.Graphics.PixelOffsetMode
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이 렌더링 하는 동안 픽셀을 오프셋 하는 방법을 지정 하는 값을 설정 하거나 가져옵니다 <xref href=&quot;System.Drawing.Graphics&quot;> </xref>합니다."
  remarks: "이 속성을 사용 하거나 더 높은 품질, 느린 렌더링 또는 낮은 품질로 렌더링 속도 높여이 내용의 지정할<xref:System.Drawing.Graphics>개체입니다.</xref:System.Drawing.Graphics>"
  syntax:
    content: public System.Drawing.Drawing2D.PixelOffsetMode PixelOffsetMode { get; set; }
    return:
      type: System.Drawing.Drawing2D.PixelOffsetMode
      description: "이 속성의 멤버를 지정 된 <xref href=&quot;System.Drawing.Drawing2D.PixelOffsetMode&quot;> </xref> 열거형"
  overload: System.Drawing.Graphics.PixelOffsetMode*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.ReleaseHdc
  id: ReleaseHdc
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: ReleaseHdc()
  nameWithType: Graphics.ReleaseHdc()
  fullName: System.Drawing.Graphics.ReleaseHdc()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "에 대 한 이전 호출에서 얻은 장치 컨텍스트 핸들을 해제는 <xref:System.Drawing.Graphics.GetHdc*>이 방식의 <xref href=&quot;System.Drawing.Graphics&quot;> </xref>.</xref:System.Drawing.Graphics.GetHdc*>"
  remarks: "<xref:System.Drawing.Graphics.GetHdc%2A>및 <xref:System.Drawing.Graphics.ReleaseHdc%2A>가져오고 Windows 장치에 대 한 핸들을 해제할 수 있도록 하는 두 가지가 있습니다.</xref:System.Drawing.Graphics.ReleaseHdc%2A></xref:System.Drawing.Graphics.GetHdc%2A> 에 대 한 호출을 항상 따라야 <xref:System.Drawing.Graphics.GetHdc%2A>을 호출 하 여 <xref:System.Drawing.Graphics.ReleaseHdc%2A>창 핸들 작업을 마친 후.</xref:System.Drawing.Graphics.ReleaseHdc%2A> </xref:System.Drawing.Graphics.GetHdc%2A>"
  syntax:
    content: public void ReleaseHdc ();
    parameters: []
  overload: System.Drawing.Graphics.ReleaseHdc*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.ReleaseHdc(System.IntPtr)
  id: ReleaseHdc(System.IntPtr)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: ReleaseHdc(IntPtr)
  nameWithType: Graphics.ReleaseHdc(IntPtr)
  fullName: System.Drawing.Graphics.ReleaseHdc(IntPtr)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "에 대 한 이전 호출에서 얻은 장치 컨텍스트 핸들을 해제는 <xref:System.Drawing.Graphics.GetHdc*>이 방식의 <xref href=&quot;System.Drawing.Graphics&quot;> </xref>.</xref:System.Drawing.Graphics.GetHdc*>"
  remarks: "장치 컨텍스트는 기반의 Windows 구조 [!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)] 그래픽 개체 및 해당 관련된 특성으로 출력에 영향을 주는 그래픽 모드의 집합을 정의 하 합니다.       에 대 한 호출이 <xref:System.Drawing.Graphics.GetHdc%2A>이며 ReleaseHdc 메서드 쌍으로 표시 되어야 합니다.</xref:System.Drawing.Graphics.GetHdc%2A> 범위에 있는 동안는 <xref:System.Drawing.Graphics.GetHdc%2A>ReleaseHdc 메서드 쌍을 일반적으로 하면 이러한 호출에만 [!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)] 함수.</xref:System.Drawing.Graphics.GetHdc%2A> 범위 하려고 한다는 점에서 호출 [!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)] 의 메서드는 <xref:System.Drawing.Graphics>생성 되는 `hdc` 실패 하 고 매개 변수는 `ObjectBusy` 오류.</xref:System.Drawing.Graphics> 또한 [!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)] 상태 변경 내용이 무시는 <xref:System.Drawing.Graphics>의 `hdc` 후속 작업에서 매개 변수.</xref:System.Drawing.Graphics>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The example illustrates calling a Windows [!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)] function to perform the same task as a [!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)] <xref:System.Drawing.Graphics> method. The code performs the following actions:  \n  \n-   Defines the interoperability <xref:System.Runtime.InteropServices.DllImportAttribute> attribute for the Windows DLL file gdi32.dll. This DLL contains the desired [!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)] function, and it defines the <xref:System.Drawing.Rectangle> function in that DLL as external.  \n  \n-   Creates a red pen.  \n  \n-   With the pen, draws a rectangle to the screen using the [!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)] <xref:System.Drawing.Graphics.DrawRectangle%2A> method.  \n  \n-   Defines an internal pointer type variable `hdc` and sets its value to the handle to the device context of the form.  \n  \n-   Draws a rectangle to the screen using the [!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)] <xref:System.Drawing.Rectangle> function.  \n  \n-   Releases the device context represented by the `hdc` parameter.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#145](~/add/codesnippet/cpp/m-system.drawing.graphic_14_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#145](~/add/codesnippet/csharp/m-system.drawing.graphic_14_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#145](~/add/codesnippet/visualbasic/m-system.drawing.graphic_14_1.vb)]"
  syntax:
    content: public void ReleaseHdc (IntPtr hdc);
    parameters:
    - id: hdc
      type: System.IntPtr
      description: "에 대 한 이전 호출에서 얻은 장치 컨텍스트에 대 한 핸들은 <xref:System.Drawing.Graphics.GetHdc*>이 방식의 <xref href=&quot;System.Drawing.Graphics&quot;> </xref>.</xref:System.Drawing.Graphics.GetHdc*>"
  overload: System.Drawing.Graphics.ReleaseHdc*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.ReleaseHdcInternal(System.IntPtr)
  id: ReleaseHdcInternal(System.IntPtr)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: ReleaseHdcInternal(IntPtr)
  nameWithType: Graphics.ReleaseHdcInternal(IntPtr)
  fullName: System.Drawing.Graphics.ReleaseHdcInternal(IntPtr)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "장치 컨텍스트에 대 한 핸들을 해제합니다."
  syntax:
    content: public void ReleaseHdcInternal (IntPtr hdc);
    parameters:
    - id: hdc
      type: System.IntPtr
      description: "장치 컨텍스트에 대 한 핸들입니다."
  overload: System.Drawing.Graphics.ReleaseHdcInternal*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.RenderingOrigin
  id: RenderingOrigin
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: RenderingOrigin
  nameWithType: Graphics.RenderingOrigin
  fullName: System.Drawing.Graphics.RenderingOrigin
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이 항목의 렌더링 원점을 가져오거나 설정 합니다. <xref href=&quot;System.Drawing.Graphics&quot;> </xref> 디더링 및 빗금 브러시입니다."
  syntax:
    content: public System.Drawing.Point RenderingOrigin { get; set; }
    return:
      type: System.Drawing.Point
      description: "A <xref href=&quot;System.Drawing.Point&quot;> </xref> 구조 픽셀 당 8 비트 및 픽셀 당 16 비트 디더링의 디더링 원점을 나타내고 빗금 브러시의 원점을 설정 하는 데도 사용입니다."
  overload: System.Drawing.Graphics.RenderingOrigin*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.ResetClip
  id: ResetClip
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: ResetClip()
  nameWithType: Graphics.ResetClip()
  fullName: System.Drawing.Graphics.ResetClip()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이의 클립 영역을 다시 설정 <xref href=&quot;System.Drawing.Graphics&quot;> </xref> 을 무한 영역입니다."
  remarks: "때의 클립 영역을 <xref:System.Drawing.Graphics>무한,이 항목 <xref:System.Drawing.Graphics>그리기는 클리핑되지 않습니다.</xref:System.Drawing.Graphics> </xref:System.Drawing.Graphics>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a rectangle with upper-left corner at (0, 0) and sets the clipping region to this rectangle.  \n  \n-   Creates a second rectangle with upper-left corner at (100, 100) and sets the clipping region to the intersection of this rectangle and the current clipping region (the first rectangle).  \n  \n-   Fills a large rectangle that includes both previous rectangles with a solid blue brush.  \n  \n-   Resets the clipping region to infinite.  \n  \n-   Draws rectangles around the two clipping regions; it uses a black pen for the first clipping rectangle and a red pen for the second clipping region.  \n  \n The result is that only the intersection of the two rectangles is filled with blue.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#146](~/add/codesnippet/cpp/m-system.drawing.graphic_29_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#146](~/add/codesnippet/csharp/m-system.drawing.graphic_29_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#146](~/add/codesnippet/visualbasic/m-system.drawing.graphic_29_1.vb)]"
  syntax:
    content: public void ResetClip ();
    parameters: []
  overload: System.Drawing.Graphics.ResetClip*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.ResetTransform
  id: ResetTransform
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: ResetTransform()
  nameWithType: Graphics.ResetTransform()
  fullName: System.Drawing.Graphics.ResetTransform()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이의 월드 변형 매트릭스를 다시 설정 <xref href=&quot;System.Drawing.Graphics&quot;> </xref> 를 항등 매트릭스로 합니다."
  remarks: "항등 매트릭스는 변환을 크기가, 회전 또는 변환으로 나타냅니다. 이의 월드 변형과 재설정 <xref:System.Drawing.Graphics>의미를 항등 매트릭스로의 월드 변형과 변형 된 항목의 기 하 도형을 변경 되지 않습니다.</xref:System.Drawing.Graphics>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Translates the world transform of the Windows Form by a vector (100, 0).  \n  \n-   Saves the graphics state of the form.  \n  \n-   Resets the world transform of the form to an identity and fills a rectangle with a solid red brush.  \n  \n-   Restores the translated graphics state and fills a rectangle with a solid blue brush.  \n  \n The result is an untranslated red-filled rectangle and a translated blue-filled rectangle.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#147](~/add/codesnippet/cpp/m-system.drawing.graphic_4_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#147](~/add/codesnippet/csharp/m-system.drawing.graphic_4_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#147](~/add/codesnippet/visualbasic/m-system.drawing.graphic_4_1.vb)]"
  syntax:
    content: public void ResetTransform ();
    parameters: []
  overload: System.Drawing.Graphics.ResetTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.Restore(System.Drawing.Drawing2D.GraphicsState)
  id: Restore(System.Drawing.Drawing2D.GraphicsState)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: Restore(GraphicsState)
  nameWithType: Graphics.Restore(GraphicsState)
  fullName: System.Drawing.Graphics.Restore(GraphicsState)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이 항목의 상태를 복원 <xref href=&quot;System.Drawing.Graphics&quot;> </xref> 가 나타내는 상태로 <xref href=&quot;System.Drawing.Drawing2D.GraphicsState&quot;> </xref>합니다."
  remarks: "호출 하는 경우는 <xref:System.Drawing.Graphics.Save%2A>의 메서드는 <xref:System.Drawing.Graphics>의 상태를 유지 하는 정보 블록이 <xref:System.Drawing.Graphics>스택에 배치 됩니다.</xref:System.Drawing.Graphics> </xref:System.Drawing.Graphics> </xref:System.Drawing.Graphics.Save%2A> <xref:System.Drawing.Graphics.Save%2A>메서드가 반환 되는 <xref:System.Drawing.Drawing2D.GraphicsState>해당 정보 블록을 식별 하는.</xref:System.Drawing.Drawing2D.GraphicsState> </xref:System.Drawing.Graphics.Save%2A> 전달 하는 경우 식별 하는 <xref:System.Drawing.Drawing2D.GraphicsState>theRestore 메서드에 정보 블록이 스택에서 제거 되 고 복원 하는 데 사용 되는 <xref:System.Drawing.Graphics>시의 상태로에 <xref:System.Drawing.Graphics.Save%2A>메서드를 호출 합니다.</xref:System.Drawing.Graphics.Save%2A> </xref:System.Drawing.Graphics> </xref:System.Drawing.Drawing2D.GraphicsState> <xref:System.Drawing.Drawing2D.GraphicsState>에 지정된 된 호출에서 반환 되는 <xref:System.Drawing.Graphics.Save%2A>에 메서드를 한 번만 전달 될 수는 `Restore` 메서드.</xref:System.Drawing.Graphics.Save%2A> </xref:System.Drawing.Drawing2D.GraphicsState>       에 대 한 호출이 <xref:System.Drawing.Graphics.Save%2A>메서드는 중첩 될 수 있습니다; 즉, 호출할 수 있습니다는 <xref:System.Drawing.Graphics.Save%2A>Restore 메서드를 호출 하기 전에 여러 번.</xref:System.Drawing.Graphics.Save%2A> </xref:System.Drawing.Graphics.Save%2A> 호출할 때마다는 <xref:System.Drawing.Graphics.Save%2A>스택에 정보 블록이 놓입니다 메서드와 나타나면는 <xref:System.Drawing.Drawing2D.GraphicsState>정보 블록에 대 한.</xref:System.Drawing.Drawing2D.GraphicsState> </xref:System.Drawing.Graphics.Save%2A> 이 중에서 개체 <xref:System.Drawing.Graphics>는 <xref:System.Drawing.Graphics.Save%2A>메서드를 호출 하는 해당 특정 <xref:System.Drawing.Drawing2D.GraphicsState>.</xref:System.Drawing.Drawing2D.GraphicsState> 반환</xref:System.Drawing.Graphics.Save%2A> 시의 상태로 되돌아갑니다</xref:System.Drawing.Graphics> Restore 메서드를 전달 하는 경우 하 여 스택에 정보 블록이 배치 <xref:System.Drawing.Graphics.Save%2A>메서드 호출 스택에서 제거 되 고 그 후 해당 스택에 배치 하는 모든 정보 블록 <xref:System.Drawing.Graphics.Save%2A>메서드 호출 또한 제거 됩니다.</xref:System.Drawing.Graphics.Save%2A> </xref:System.Drawing.Graphics.Save%2A>       에 대 한 호출이 <xref:System.Drawing.Graphics.BeginContainer%2A>메서드 위치 정보 블록 수에 대 한 호출으로 동일한 스택에 <xref:System.Drawing.Graphics.Save%2A>메서드.</xref:System.Drawing.Graphics.Save%2A> </xref:System.Drawing.Graphics.BeginContainer%2A> 복원 하는 것 처럼 호출와 쌍을 이루는 <xref:System.Drawing.Graphics.Save%2A>호출는 <xref:System.Drawing.Graphics.EndContainer%2A>은 메서드 호출을 이룹니다는 <xref:System.Drawing.Graphics.BeginContainer%2A>메서드를 호출 합니다.</xref:System.Drawing.Graphics.BeginContainer%2A> </xref:System.Drawing.Graphics.EndContainer%2A> </xref:System.Drawing.Graphics.Save%2A>       스택에 배치 Restore 메서드를 호출할 때 모든 정보 블록 (여는 <xref:System.Drawing.Graphics.Save%2A>메서드 또는 <xref:System.Drawing.Graphics.BeginContainer%2A>메서드)를 호출 후는 <xref:System.Drawing.Graphics.Save%2A>메서드 스택에서 제거 됩니다.</xref:System.Drawing.Graphics.Save%2A> </xref:System.Drawing.Graphics.BeginContainer%2A> </xref:System.Drawing.Graphics.Save%2A> 마찬가지로, 호출 하는 경우는 <xref:System.Drawing.Graphics.EndContainer%2A>메서드를 스택에 배치 된 모든 정보 블록 (여는 <xref:System.Drawing.Graphics.Save%2A>메서드 또는 <xref:System.Drawing.Graphics.BeginContainer%2A>메서드)를 호출 후는 <xref:System.Drawing.Graphics.BeginContainer%2A>메서드 스택에서 제거 됩니다.</xref:System.Drawing.Graphics.BeginContainer%2A> </xref:System.Drawing.Graphics.BeginContainer%2A> </xref:System.Drawing.Graphics.Save%2A> </xref:System.Drawing.Graphics.EndContainer%2A>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Translates the world transform of the Windows Form by a vector (100, 0).  \n  \n-   Saves the graphics state of the form.  \n  \n-   Resets the world transform of the form to an identity and fills a rectangle with a solid red brush.  \n  \n-   Restores the translated graphics state and fills a second rectangle with a solid blue brush.  \n  \n The result is an untranslated red-filled rectangle and a translated blue-filled rectangle.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#148](~/add/codesnippet/cpp/m-system.drawing.graphic_22_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#148](~/add/codesnippet/csharp/m-system.drawing.graphic_22_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#148](~/add/codesnippet/visualbasic/m-system.drawing.graphic_22_1.vb)]"
  syntax:
    content: public void Restore (System.Drawing.Drawing2D.GraphicsState gstate);
    parameters:
    - id: gstate
      type: System.Drawing.Drawing2D.GraphicsState
      description: "<xref href=&quot;System.Drawing.Drawing2D.GraphicsState&quot;></xref>이 복원 하는 데에 상태를 나타내는 <xref href=&quot;System.Drawing.Graphics&quot;> </xref>합니다."
  overload: System.Drawing.Graphics.Restore*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.RotateTransform(System.Single)
  id: RotateTransform(System.Single)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: RotateTransform(Single)
  nameWithType: Graphics.RotateTransform(Single)
  fullName: System.Drawing.Graphics.RotateTransform(Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "변환 매트릭스에 지정 된 회전을 적용 <xref href=&quot;System.Drawing.Graphics&quot;> </xref>합니다."
  remarks: "해당 요소에서 파생 되는 행렬의 변환 매트릭스의 회전 작업으로 구성 됩니다는 `angle` 매개 변수입니다. 이 메서드는 변형 매트릭스 앞에 추가 하 여 회전을 적용 합니다."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Translates the world transformation matrix of the Windows Form by the vector (100, 0).  \n  \n-   Rotates the world transformation by an angle of 30 degrees, prepending the rotation matrix to the world transformation matrix.  \n  \n-   Draws a rotated, translated ellipse with a blue pen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#149](~/add/codesnippet/cpp/m-system.drawing.graphic_37_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#149](~/add/codesnippet/csharp/m-system.drawing.graphic_37_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#149](~/add/codesnippet/visualbasic/m-system.drawing.graphic_37_1.vb)]"
  syntax:
    content: public void RotateTransform (float angle);
    parameters:
    - id: angle
      type: System.Single
      description: "회전 각도로 각도입니다."
  overload: System.Drawing.Graphics.RotateTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)
  id: RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: RotateTransform(Single,MatrixOrder)
  nameWithType: Graphics.RotateTransform(Single,MatrixOrder)
  fullName: System.Drawing.Graphics.RotateTransform(Single,MatrixOrder)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "변환 매트릭스에 지정 된 회전을 적용 <xref href=&quot;System.Drawing.Graphics&quot;> </xref> 지정 된 순서로 합니다."
  remarks: "해당 요소에서 파생 되는 행렬의 변환 매트릭스의 회전 작업으로 구성 됩니다는 `angle` 매개 변수입니다. 이 메서드는 앞에 추가 하거나 추가의 변형 매트릭스는 <xref:System.Drawing.Graphics>따라 회전 매트릭스는 `order` 매개 변수.</xref:System.Drawing.Graphics>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Translates the world transformation matrix of the Windows Form by the vector (100, 0).  \n  \n-   Rotates the world transform by an angle of 30 degrees, appending the rotation matrix to the world transformation matrix with <xref:System.Drawing.Drawing2D.MatrixOrder>.  \n  \n-   Draws a translated, rotated ellipse with a blue pen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#150](~/add/codesnippet/cpp/7da2dce8-ff40-4659-a74e-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#150](~/add/codesnippet/csharp/7da2dce8-ff40-4659-a74e-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#150](~/add/codesnippet/visualbasic/7da2dce8-ff40-4659-a74e-_1.vb)]"
  syntax:
    content: public void RotateTransform (float angle, System.Drawing.Drawing2D.MatrixOrder order);
    parameters:
    - id: angle
      type: System.Single
      description: "회전 각도로 각도입니다."
    - id: order
      type: System.Drawing.Drawing2D.MatrixOrder
      description: "멤버는 <xref href=&quot;System.Drawing.Drawing2D.MatrixOrder&quot;> </xref> 회전이 매트릭스 변환에 같고 추가 여부를 지정 하는 열거형입니다."
  overload: System.Drawing.Graphics.RotateTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.Save
  id: Save
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: Save()
  nameWithType: Graphics.Save()
  fullName: System.Drawing.Graphics.Save()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이 항목의 현재 상태를 저장 <xref href=&quot;System.Drawing.Graphics&quot;> </xref> 로 저장된 된 상태를 식별 하 고는 <xref href=&quot;System.Drawing.Drawing2D.GraphicsState&quot;> </xref>합니다."
  remarks: "Save 메서드를 호출 하는 경우는 <xref:System.Drawing.Graphics>의 상태를 유지 하는 정보 블록이 <xref:System.Drawing.Graphics>스택에 배치 됩니다.</xref:System.Drawing.Graphics> </xref:System.Drawing.Graphics> Save 메서드 반환는 <xref:System.Drawing.Drawing2D.GraphicsState>해당 정보 블록을 식별 하는.</xref:System.Drawing.Drawing2D.GraphicsState> 전달 하는 경우 식별 하는 <xref:System.Drawing.Drawing2D.GraphicsState>에 <xref:System.Drawing.Graphics.Restore%2A>메서드가, 정보 블록이 스택에서 제거 되 고 복원 하는 데 사용 되는 <xref:System.Drawing.Graphics>상태로 시점의 Save 메서드 호출의 시간.</xref:System.Drawing.Graphics> </xref:System.Drawing.Graphics.Restore%2A> </xref:System.Drawing.Drawing2D.GraphicsState> <xref:System.Drawing.Drawing2D.GraphicsState>에 메서드를 한 번만 전달 하 고 저장을 지정된 된 호출에서 반환 되는 <xref:System.Drawing.Graphics.Restore%2A>메서드.</xref:System.Drawing.Graphics.Restore%2A> </xref:System.Drawing.Drawing2D.GraphicsState>       Save 메서드를 호출 하는 중첩 될 수 있습니다. 즉, 호출할 수 있습니다 Save 메서드 여러 번 호출 하기 전에 <xref:System.Drawing.Graphics.Restore%2A>메서드.</xref:System.Drawing.Graphics.Restore%2A> Save 메서드를 호출할 때마다 정보 블록이 스택에 배치 되 고 나타나면는<xref:System.Drawing.Drawing2D.GraphicsState> 정보 블록에 대 한.</xref:System.Drawing.Drawing2D.GraphicsState> 개체의 <xref:System.Drawing.Graphics.Restore%2A>메서드 <xref:System.Drawing.Graphics>는 해당 특정 <xref:System.Drawing.Drawing2D.GraphicsState>.</xref:System.Drawing.Drawing2D.GraphicsState> 를 반환 하는 저장 메서드 호출 시의 상태로 되돌아갑니다</xref:System.Drawing.Graphics> </xref:System.Drawing.Graphics.Restore%2A> 를 전달 하는 경우 그 중 하나 정보 블록이 있는지 Save 메서드를 호출 스택에서 제거 되 고 모든 정보 블록을 Save 메서드 호출 또한 제거 후 해당 스택에 배치 하 여 스택에 배치 합니다.       에 대 한 호출이 <xref:System.Drawing.Graphics.BeginContainer%2A>Save 메서드 호출으로 동일한 스택에 메서드 내부 정보 블록.</xref:System.Drawing.Graphics.BeginContainer%2A> 과 마찬가지로 <xref:System.Drawing.Graphics.Restore%2A>호출 쌍으로 저장 호출으로는 <xref:System.Drawing.Graphics.EndContainer%2A>은 메서드 호출을 이룹니다는 <xref:System.Drawing.Graphics.BeginContainer%2A>메서드 호출.</xref:System.Drawing.Graphics.BeginContainer%2A> </xref:System.Drawing.Graphics.EndContainer%2A> </xref:System.Drawing.Graphics.Restore%2A>       호출 하는 경우는 <xref:System.Drawing.Graphics.Restore%2A>메서드를 스택에 배치 된 모든 정보 블록 (Save 메서드 또는 <xref:System.Drawing.Graphics.BeginContainer%2A>메서드) 해당 Save 메서드 호출 스택에서 제거 됩니다.</xref:System.Drawing.Graphics.BeginContainer%2A> </xref:System.Drawing.Graphics.Restore%2A> 마찬가지로, 호출 하는 경우는 <xref:System.Drawing.Graphics.EndContainer%2A>메서드를 스택에 배치 된 모든 정보 블록 (Save 메서드 또는 <xref:System.Drawing.Graphics.BeginContainer%2A>메서드)를 호출 후의 <xref:System.Drawing.Graphics.BeginContainer%2A>메서드 스택에서 제거 됩니다.</xref:System.Drawing.Graphics.BeginContainer%2A> </xref:System.Drawing.Graphics.BeginContainer%2A> </xref:System.Drawing.Graphics.EndContainer%2A>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Translates the world transform of the Windows Form by a vector (100, 0).  \n  \n-   Saves the graphics state of the form.  \n  \n-   Resets the world transform of the form to an identity (2x2 identity matrix plus a zero-vector translation) and fills a rectangle with a solid red brush.  \n  \n-   Restores the translated graphics state and fills a rectangle with a solid blue brush.  \n  \n The result is an untranslated red-filled rectangle on the left and a translated blue-filled rectangle on the right of the form.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#151](~/add/codesnippet/cpp/m-system.drawing.graphic_26_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#151](~/add/codesnippet/csharp/m-system.drawing.graphic_26_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#151](~/add/codesnippet/visualbasic/m-system.drawing.graphic_26_1.vb)]"
  syntax:
    content: public System.Drawing.Drawing2D.GraphicsState Save ();
    parameters: []
    return:
      type: System.Drawing.Drawing2D.GraphicsState
      description: "이 메서드는 반환 된 <xref href=&quot;System.Drawing.Drawing2D.GraphicsState&quot;> </xref> 이 저장된 된 상태를 나타내는 <xref href=&quot;System.Drawing.Graphics&quot;> </xref>합니다."
  overload: System.Drawing.Graphics.Save*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.ScaleTransform(System.Single,System.Single)
  id: ScaleTransform(System.Single,System.Single)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: ScaleTransform(Single,Single)
  nameWithType: Graphics.ScaleTransform(Single,Single)
  fullName: System.Drawing.Graphics.ScaleTransform(Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이 변형 매트릭스에 지정된 된 크기 조정 작업을 적용 <xref href=&quot;System.Drawing.Graphics&quot;> </xref> 개체의 변형 매트릭스를 앞에 추가 하 여 합니다."
  remarks: "요소가 대각선 행렬으로 변환 매트릭스 크기 조정 작업으로 구성 됩니다 (`sx`, `sy`, 1). 이 메서드의 변형 매트릭스 앞에 추가 된 <xref:System.Drawing.Graphics>에 크기 조정 매트릭스입니다.</xref:System.Drawing.Graphics>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Rotates the world transformation matrix of the Windows Form by 30 degrees.  \n  \n-   Scales that matrix by a factor of 3 in the x direction and a factor of 1 in the y direction by prepending the scaling transformation.  \n  \n-   Draws a scaled, rotated rectangle with a blue pen.  \n  \n The result is still a rectangle.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#152](~/add/codesnippet/cpp/m-system.drawing.graphic_38_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#152](~/add/codesnippet/csharp/m-system.drawing.graphic_38_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#152](~/add/codesnippet/visualbasic/m-system.drawing.graphic_38_1.vb)]"
  syntax:
    content: public void ScaleTransform (float sx, float sy);
    parameters:
    - id: sx
      type: System.Single
      description: "X 방향의 배율입니다."
    - id: sy
      type: System.Single
      description: "Y 방향의 배율입니다."
  overload: System.Drawing.Graphics.ScaleTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  id: ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: ScaleTransform(Single,Single,MatrixOrder)
  nameWithType: Graphics.ScaleTransform(Single,Single,MatrixOrder)
  fullName: System.Drawing.Graphics.ScaleTransform(Single,Single,MatrixOrder)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이 변형 매트릭스에 지정된 된 크기 조정 작업을 적용 <xref href=&quot;System.Drawing.Graphics&quot;> </xref> 지정 된 순서로 합니다."
  remarks: "요소가 대각선 행렬으로 변환 매트릭스 크기 조정 작업으로 구성 됩니다 (`sx`, `sy`, 1). 이 메서드는 앞에 추가 하거나 추가의 변형 매트릭스는 <xref:System.Drawing.Graphics>에 따라 크기 조정 매트릭스는 `order` 매개 변수.</xref:System.Drawing.Graphics>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Rotates the world transformation matrix of the Windows Form by 30 degrees.  \n  \n-   Scales that matrix by a factor of 3 in the x direction and a factor of 1 in the y direction by appending the scaling transformation with the <xref:System.Drawing.Drawing2D.MatrixOrder> member.  \n  \n-   Draws a rotated, scaled rectangle with a blue pen.  \n  \n The result is a parallelogram.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#153](~/add/codesnippet/cpp/cafee882-3251-403e-970d-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#153](~/add/codesnippet/csharp/cafee882-3251-403e-970d-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#153](~/add/codesnippet/visualbasic/cafee882-3251-403e-970d-_1.vb)]"
  syntax:
    content: public void ScaleTransform (float sx, float sy, System.Drawing.Drawing2D.MatrixOrder order);
    parameters:
    - id: sx
      type: System.Single
      description: "X 방향의 배율입니다."
    - id: sy
      type: System.Single
      description: "Y 방향의 배율입니다."
    - id: order
      type: System.Drawing.Drawing2D.MatrixOrder
      description: "멤버는 <xref href=&quot;System.Drawing.Drawing2D.MatrixOrder&quot;> </xref> 크기 조정 작업이 변형 매트릭스에 추가 되거나 앞에 추가 하는지 여부를 지정 하는 열거형입니다."
  overload: System.Drawing.Graphics.ScaleTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.SetClip(System.Drawing.Drawing2D.GraphicsPath)
  id: SetClip(System.Drawing.Drawing2D.GraphicsPath)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: SetClip(GraphicsPath)
  nameWithType: Graphics.SetClip(GraphicsPath)
  fullName: System.Drawing.Graphics.SetClip(GraphicsPath)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이의 클립 영역을 설정 <xref href=&quot;System.Drawing.Graphics&quot;> </xref> 지정 된 <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref>합니다."
  remarks: "으로 표시 되는 그래픽 경로 `path` 매개 변수 닫혀 있지 않으면 추가 세그먼트가 추가 됩니다 마지막 점에서 하 고 첫 번째 경로를 닫습니다."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a graphics path and adds an ellipse to the path.  \n  \n-   Sets the clipping region to the elliptical path.  \n  \n-   Fills a large rectangle with a solid black brush.  \n  \n The result is a filled, black ellipse.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#154](~/add/codesnippet/cpp/m-system.drawing.graphic_2_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#154](~/add/codesnippet/csharp/m-system.drawing.graphic_2_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#154](~/add/codesnippet/visualbasic/m-system.drawing.graphic_2_1.vb)]"
  syntax:
    content: public void SetClip (System.Drawing.Drawing2D.GraphicsPath path);
    parameters:
    - id: path
      type: System.Drawing.Drawing2D.GraphicsPath
      description: "<xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;></xref>새 클립 영역을 나타내는입니다."
  overload: System.Drawing.Graphics.SetClip*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.SetClip(System.Drawing.Graphics)
  id: SetClip(System.Drawing.Graphics)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: SetClip(Graphics)
  nameWithType: Graphics.SetClip(Graphics)
  fullName: System.Drawing.Graphics.SetClip(Graphics)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이의 클립 영역을 설정 <xref href=&quot;System.Drawing.Graphics&quot;> </xref> 에 <xref uid=&quot;langword_csharp_Clip&quot; name=&quot;Clip&quot; href=&quot;&quot;> </xref> 는 지정 된 속성 <xref href=&quot;System.Drawing.Graphics&quot;> </xref>합니다."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler, as well as `thisForm`, the <xref:System.Windows.Forms.Form> for the example. The code performs the following actions:  \n  \n-   Creates a temporary <xref:System.Drawing.Graphics> from the `thisForm`<xref:System.Windows.Forms.Form> of the example.  \n  \n-   Sets the clipping region of the temporary <xref:System.Drawing.Graphics> to a small square.  \n  \n-   Updates the clipping region of the form's graphic object to that of the temporary <xref:System.Drawing.Graphics>.  \n  \n-   Fills a large rectangle with a solid black brush.  \n  \n The result is a small, filled, black square.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#156](~/add/codesnippet/cpp/m-system.drawing.graphic_41_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#156](~/add/codesnippet/csharp/m-system.drawing.graphic_41_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#156](~/add/codesnippet/visualbasic/m-system.drawing.graphic_41_1.vb)]"
  syntax:
    content: public void SetClip (System.Drawing.Graphics g);
    parameters:
    - id: g
      type: System.Drawing.Graphics
      description: "<xref href=&quot;System.Drawing.Graphics&quot;></xref>새 클립 영역을 되려면입니다."
  overload: System.Drawing.Graphics.SetClip*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.SetClip(System.Drawing.Rectangle)
  id: SetClip(System.Drawing.Rectangle)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: SetClip(Rectangle)
  nameWithType: Graphics.SetClip(Rectangle)
  fullName: System.Drawing.Graphics.SetClip(Rectangle)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이의 클립 영역을 설정 <xref href=&quot;System.Drawing.Graphics&quot;> </xref> 으로 지정 된 사각형에는 <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 구조입니다."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a small rectangle for the clipping region.  \n  \n-   Sets the clipping region to the rectangle.  \n  \n-   Fills a large rectangle with a solid black brush.  \n  \n The result is a small, filled, black rectangle.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#158](~/add/codesnippet/cpp/m-system.drawing.graphic_25_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#158](~/add/codesnippet/csharp/m-system.drawing.graphic_25_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#158](~/add/codesnippet/visualbasic/m-system.drawing.graphic_25_1.vb)]"
  syntax:
    content: public void SetClip (System.Drawing.Rectangle rect);
    parameters:
    - id: rect
      type: System.Drawing.Rectangle
      description: "<xref href=&quot;System.Drawing.Rectangle&quot;></xref>새 클립 영역을 나타내는 구조입니다."
  overload: System.Drawing.Graphics.SetClip*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.SetClip(System.Drawing.RectangleF)
  id: SetClip(System.Drawing.RectangleF)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: SetClip(RectangleF)
  nameWithType: Graphics.SetClip(RectangleF)
  fullName: System.Drawing.Graphics.SetClip(RectangleF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이의 클립 영역을 설정 <xref href=&quot;System.Drawing.Graphics&quot;> </xref> 으로 지정 된 사각형에는 <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> 구조입니다."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a small rectangle for the clipping region.  \n  \n-   Sets the clipping region to the rectangle.  \n  \n-   Fills a large rectangle with a solid black brush.  \n  \n The result is a small, filled, black rectangle.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#160](~/add/codesnippet/cpp/m-system.drawing.graphic_1_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#160](~/add/codesnippet/csharp/m-system.drawing.graphic_1_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#160](~/add/codesnippet/visualbasic/m-system.drawing.graphic_1_1.vb)]"
  syntax:
    content: public void SetClip (System.Drawing.RectangleF rect);
    parameters:
    - id: rect
      type: System.Drawing.RectangleF
      description: "<xref href=&quot;System.Drawing.RectangleF&quot;></xref>새 클립 영역을 나타내는 구조입니다."
  overload: System.Drawing.Graphics.SetClip*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.SetClip(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.CombineMode)
  id: SetClip(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.CombineMode)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: SetClip(GraphicsPath,CombineMode)
  nameWithType: Graphics.SetClip(GraphicsPath,CombineMode)
  fullName: System.Drawing.Graphics.SetClip(GraphicsPath,CombineMode)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이의 클립 영역을 설정 <xref href=&quot;System.Drawing.Graphics&quot;> </xref> 현재 클립 영역과 지정 된 결합 하는 지정 된 작업의 결과로 <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref>합니다."
  remarks: "으로 표시 되는 그래픽 경로 `path` 매개 변수 닫혀 있지 않으면 추가 세그먼트가 추가 됩니다 마지막 점에서 하 고 첫 번째 경로를 닫습니다."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a graphics path and adds an ellipse to the path.  \n  \n-   Sets the clipping region to the elliptical path with the <xref:System.Drawing.Drawing2D.CombineMode> member.  \n  \n-   Fills a large rectangle with a solid black brush.  \n  \n The result is a filled, black ellipse.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#155](~/add/codesnippet/cpp/13cc8f76-0e6b-45ee-a0ec-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#155](~/add/codesnippet/csharp/13cc8f76-0e6b-45ee-a0ec-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#155](~/add/codesnippet/visualbasic/13cc8f76-0e6b-45ee-a0ec-_1.vb)]"
  syntax:
    content: public void SetClip (System.Drawing.Drawing2D.GraphicsPath path, System.Drawing.Drawing2D.CombineMode combineMode);
    parameters:
    - id: path
      type: System.Drawing.Drawing2D.GraphicsPath
      description: "<xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;></xref>결합 합니다."
    - id: combineMode
      type: System.Drawing.Drawing2D.CombineMode
      description: "멤버는 <xref href=&quot;System.Drawing.Drawing2D.CombineMode&quot;> </xref> 결합 작업을 사용 하 여 지정 하는 열거형입니다."
  overload: System.Drawing.Graphics.SetClip*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.SetClip(System.Drawing.Graphics,System.Drawing.Drawing2D.CombineMode)
  id: SetClip(System.Drawing.Graphics,System.Drawing.Drawing2D.CombineMode)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: SetClip(Graphics,CombineMode)
  nameWithType: Graphics.SetClip(Graphics,CombineMode)
  fullName: System.Drawing.Graphics.SetClip(Graphics,CombineMode)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이의 클립 영역을 설정 <xref href=&quot;System.Drawing.Graphics&quot;> </xref> 는 지정 된 결과를 결합 현재 클립 영역과 작업 및 <xref:System.Drawing.Graphics.Clip*>는 지정 된 속성 <xref href=&quot;System.Drawing.Graphics&quot;> </xref>.</xref:System.Drawing.Graphics.Clip*>"
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler, as well as `thisForm`, the <xref:System.Windows.Forms.Form> for the example. The code performs the following actions:  \n  \n-   Creates a temporary <xref:System.Drawing.Graphics> from the `thisForm`<xref:System.Windows.Forms.Form> of the example.  \n  \n-   Sets the clipping region of the temporary <xref:System.Drawing.Graphics> to a small square.  \n  \n-   Updates the clipping region of the form's graphic object to that of the new <xref:System.Drawing.Graphics> with the <xref:System.Drawing.Drawing2D.CombineMode> member.  \n  \n-   Fills a large rectangle with a solid black brush.  \n  \n The result is a small, filled, black square.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#157](~/add/codesnippet/cpp/8bb7563e-771b-4cba-9f13-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#157](~/add/codesnippet/csharp/8bb7563e-771b-4cba-9f13-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#157](~/add/codesnippet/visualbasic/8bb7563e-771b-4cba-9f13-_1.vb)]"
  syntax:
    content: public void SetClip (System.Drawing.Graphics g, System.Drawing.Drawing2D.CombineMode combineMode);
    parameters:
    - id: g
      type: System.Drawing.Graphics
      description: "<xref href=&quot;System.Drawing.Graphics&quot;></xref>결합할 클립 영역을 지정 하는."
    - id: combineMode
      type: System.Drawing.Drawing2D.CombineMode
      description: "멤버는 <xref href=&quot;System.Drawing.Drawing2D.CombineMode&quot;> </xref> 결합 작업을 사용 하 여 지정 하는 열거형입니다."
  overload: System.Drawing.Graphics.SetClip*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.SetClip(System.Drawing.Rectangle,System.Drawing.Drawing2D.CombineMode)
  id: SetClip(System.Drawing.Rectangle,System.Drawing.Drawing2D.CombineMode)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: SetClip(Rectangle,CombineMode)
  nameWithType: Graphics.SetClip(Rectangle,CombineMode)
  fullName: System.Drawing.Graphics.SetClip(Rectangle,CombineMode)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이의 클립 영역을 설정 <xref href=&quot;System.Drawing.Graphics&quot;> </xref> 현재 클립 영역과 지정 된 사각형을 결합 하는 지정 된 작업의 결과에 <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 구조입니다."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a small rectangle for the clipping region.  \n  \n-   Sets the clipping region to the rectangle with the <xref:System.Drawing.Drawing2D.CombineMode> member.  \n  \n-   Fills a large rectangle with a solid black brush.  \n  \n The result is a small, filled, black rectangle.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#159](~/add/codesnippet/cpp/f07a12db-73e5-41d7-82f8-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#159](~/add/codesnippet/csharp/f07a12db-73e5-41d7-82f8-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#159](~/add/codesnippet/visualbasic/f07a12db-73e5-41d7-82f8-_1.vb)]"
  syntax:
    content: public void SetClip (System.Drawing.Rectangle rect, System.Drawing.Drawing2D.CombineMode combineMode);
    parameters:
    - id: rect
      type: System.Drawing.Rectangle
      description: "<xref href=&quot;System.Drawing.Rectangle&quot;></xref>결합 하는 구조입니다."
    - id: combineMode
      type: System.Drawing.Drawing2D.CombineMode
      description: "멤버는 <xref href=&quot;System.Drawing.Drawing2D.CombineMode&quot;> </xref> 결합 작업을 사용 하 여 지정 하는 열거형입니다."
  overload: System.Drawing.Graphics.SetClip*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.SetClip(System.Drawing.RectangleF,System.Drawing.Drawing2D.CombineMode)
  id: SetClip(System.Drawing.RectangleF,System.Drawing.Drawing2D.CombineMode)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: SetClip(RectangleF,CombineMode)
  nameWithType: Graphics.SetClip(RectangleF,CombineMode)
  fullName: System.Drawing.Graphics.SetClip(RectangleF,CombineMode)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이의 클립 영역을 설정 <xref href=&quot;System.Drawing.Graphics&quot;> </xref> 현재 클립 영역과 지정 된 사각형을 결합 하는 지정 된 작업의 결과에 <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> 구조입니다."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a small rectangle for the clipping region.  \n  \n-   Sets the clipping region to the rectangle with the <xref:System.Drawing.Drawing2D.CombineMode> member.  \n  \n-   Fills a large rectangle with a solid black brush.  \n  \n The result is a small, filled, black rectangle.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#161](~/add/codesnippet/cpp/f4e1c983-a6f4-4609-8adb-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#161](~/add/codesnippet/csharp/f4e1c983-a6f4-4609-8adb-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#161](~/add/codesnippet/visualbasic/f4e1c983-a6f4-4609-8adb-_1.vb)]"
  syntax:
    content: public void SetClip (System.Drawing.RectangleF rect, System.Drawing.Drawing2D.CombineMode combineMode);
    parameters:
    - id: rect
      type: System.Drawing.RectangleF
      description: "<xref href=&quot;System.Drawing.RectangleF&quot;></xref>결합 하는 구조입니다."
    - id: combineMode
      type: System.Drawing.Drawing2D.CombineMode
      description: "멤버는 <xref href=&quot;System.Drawing.Drawing2D.CombineMode&quot;> </xref> 결합 작업을 사용 하 여 지정 하는 열거형입니다."
  overload: System.Drawing.Graphics.SetClip*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.SetClip(System.Drawing.Region,System.Drawing.Drawing2D.CombineMode)
  id: SetClip(System.Drawing.Region,System.Drawing.Drawing2D.CombineMode)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: SetClip(Region,CombineMode)
  nameWithType: Graphics.SetClip(Region,CombineMode)
  fullName: System.Drawing.Graphics.SetClip(Region,CombineMode)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이의 클립 영역을 설정 <xref href=&quot;System.Drawing.Graphics&quot;> </xref> 현재 클립 영역과 지정 된 결합 하는 지정 된 작업의 결과로 <xref href=&quot;System.Drawing.Region&quot;> </xref>합니다."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a small rectangle for the clipping region.  \n  \n-   Sets the clipping region to the rectangle with the <xref:System.Drawing.Drawing2D.CombineMode> member.  \n  \n-   Fills a large rectangle with a solid black brush.  \n  \n The result is a small, filled, black rectangle.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#162](~/add/codesnippet/cpp/2a66fa51-570c-4e4a-8879-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#162](~/add/codesnippet/csharp/2a66fa51-570c-4e4a-8879-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#162](~/add/codesnippet/visualbasic/2a66fa51-570c-4e4a-8879-_1.vb)]"
  syntax:
    content: public void SetClip (System.Drawing.Region region, System.Drawing.Drawing2D.CombineMode combineMode);
    parameters:
    - id: region
      type: System.Drawing.Region
      description: "<xref href=&quot;System.Drawing.Region&quot;></xref>결합 합니다."
    - id: combineMode
      type: System.Drawing.Drawing2D.CombineMode
      description: "멤버는 <xref href=&quot;System.Drawing.Drawing2D.CombineMode&quot;> </xref> 결합 작업을 사용 하 여 지정 하는 열거형입니다."
  overload: System.Drawing.Graphics.SetClip*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.SmoothingMode
  id: SmoothingMode
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: SmoothingMode
  nameWithType: Graphics.SmoothingMode
  fullName: System.Drawing.Graphics.SmoothingMode
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이 대 한 렌더링 품질을 가져오거나 <xref href=&quot;System.Drawing.Graphics&quot;> </xref>합니다."
  remarks: "다듬기 모드 선, 곡선 및 채워진 영역의 가장자리 사용 다듬기 (앤티앨리어싱) 여부를 지정 합니다. 한 가지 예외는 경로 그라데이션 브러시 다듬기 모드를 준수 하지 않습니다. 사용 하 여 채워진 영역은 <xref:System.Drawing.Drawing2D.PathGradientBrush>SmoothingMode 속성에 관계 없이 동일한 방식으로 (별칭) 렌더링 됩니다.</xref:System.Drawing.Drawing2D.PathGradientBrush>"
  example:
  - "The following method demonstrates the effects of setting the <xref:System.Drawing.Pen.DashCap%2A>, <xref:System.Drawing.Pen.DashPattern%2A>, and SmoothingMode properties. The output of the example is shown in the following illustration.  \n  \n ![Lines with and without smoothing applied.](~/add/media/gdi-smoothingmode.png \"Lines with and without smoothing applied.\")  \n  \n This example is designed to be used with Windows Forms. Paste the code into a form and call the `ShowPensAndSmoothingMode` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.PensExample#3](~/add/codesnippet/csharp/p-system.drawing.graphic_4_1.cs)]\n [!code-vb[System.Drawing.PensExample#3](~/add/codesnippet/visualbasic/p-system.drawing.graphic_4_1.vb)]\n [!code-cpp[System.Drawing.PensExample#3](~/add/codesnippet/cpp/p-system.drawing.graphic_4_1.cpp)]"
  syntax:
    content: public System.Drawing.Drawing2D.SmoothingMode SmoothingMode { get; set; }
    return:
      type: System.Drawing.Drawing2D.SmoothingMode
      description: "중 하나는 <xref href=&quot;System.Drawing.Drawing2D.SmoothingMode&quot;> </xref> 값입니다."
  overload: System.Drawing.Graphics.SmoothingMode*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.TextContrast
  id: TextContrast
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: TextContrast
  nameWithType: Graphics.TextContrast
  fullName: System.Drawing.Graphics.TextContrast
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "텍스트 렌더링에 대 한 감마 보정 값을 가져오거나 설정 합니다."
  remarks: "감마 보정 값은 0에서 12 사이 여야 합니다. 기본값은 4입니다."
  example:
  - "The following code example demonstrates the use of the <xref:System.Drawing.Graphics.TextRenderingHint%2A> and TextContrast properties.  \n  \n This example is designed to be used with Windows Forms. Paste the code into a form and call the `ChangeTextRenderingHintAndTextContrast` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cpp[System.Drawing.GraphicsProperties#5](~/add/codesnippet/cpp/p-system.drawing.graphic_2_1.cpp)]\n [!code-vb[System.Drawing.GraphicsProperties#5](~/add/codesnippet/visualbasic/p-system.drawing.graphic_2_1.vb)]\n [!code-cs[System.Drawing.GraphicsProperties#5](~/add/codesnippet/csharp/p-system.drawing.graphic_2_1.cs)]"
  syntax:
    content: public int TextContrast { get; set; }
    return:
      type: System.Int32
      description: "렌더링 앤티 앨리어싱된 ClearType 텍스트에 사용 되는 감마 보정 값입니다."
  overload: System.Drawing.Graphics.TextContrast*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.TextRenderingHint
  id: TextRenderingHint
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: TextRenderingHint
  nameWithType: Graphics.TextRenderingHint
  fullName: System.Drawing.Graphics.TextRenderingHint
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이 연결 된 텍스트의 렌더링 모드를 가져오거나 설정 합니다. <xref href=&quot;System.Drawing.Graphics&quot;> </xref>합니다."
  remarks: "텍스트 렌더링 힌트 텍스트 앤티앨리어싱과 함께 렌더링할지 여부를 지정 합니다.      > [!NOTE] > <xref:System.Drawing.Graphics.CompositingMode%2A> <xref:System.Drawing.Drawing2D.CompositingMode> <xref:System.Drawing.Text.TextRenderingHint>.</xref:System.Drawing.Text.TextRenderingHint> TextRenderingHint 속성이 설정 된 경우</xref:System.Drawing.Drawing2D.CompositingMode> 의 속성 값</xref:System.Drawing.Graphics.CompositingMode%2A> 을 사용 하지 않아야 예외가 발생할 수 있습니다 또는 이미지가 제대로 렌더링 되지 않을 수 있습니다."
  example:
  - "The following code example demonstrates the use of the TextRenderingHint and <xref:System.Drawing.Graphics.TextContrast%2A> properties.  \n  \n This example is designed to be used with Windows Forms. Paste the code into a form and call the `ChangeTextRenderingHintAndTextContrast` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cpp[System.Drawing.GraphicsProperties#5](~/add/codesnippet/cpp/p-system.drawing.graphic_7_1.cpp)]\n [!code-vb[System.Drawing.GraphicsProperties#5](~/add/codesnippet/visualbasic/p-system.drawing.graphic_7_1.vb)]\n [!code-cs[System.Drawing.GraphicsProperties#5](~/add/codesnippet/csharp/p-system.drawing.graphic_7_1.cs)]"
  syntax:
    content: public System.Drawing.Text.TextRenderingHint TextRenderingHint { get; set; }
    return:
      type: System.Drawing.Text.TextRenderingHint
      description: "중 하나는 <xref href=&quot;System.Drawing.Text.TextRenderingHint&quot;> </xref> 값입니다."
  overload: System.Drawing.Graphics.TextRenderingHint*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.Transform
  id: Transform
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: Transform
  nameWithType: Graphics.Transform
  fullName: System.Drawing.Graphics.Transform
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이 대 한 기하학적 월드 변형의 복사본을 가져오거나 설정 합니다. <xref href=&quot;System.Drawing.Graphics&quot;> </xref>합니다."
  remarks: "GDI +-세 좌표 공간을 사용 하는 중: 세계, 페이지 및 장치입니다. 세계 좌표 모델링할 특정 그래픽 영역을 사용 하는 좌표 및 좌표를.NET Framework의 메서드에 전달 합니다. 페이지 좌표 폼 또는 컨트롤 등의 그리기 화면에서 사용 하는 좌표계를 가리킵니다. 장치 좌표는 화면 또는 프린터와 같은 항목이 그려지는 물리적 장치에서 사용 하는 좌표입니다. Transform 속성 세계 좌표 페이지 좌표를 매핑하는 전역 변환을 나타냅니다.       때문에 반환 하는 매트릭스 변형으로 속성은 기하학적 변환의 복사본을 삭제 해야 행렬의 더 이상 필요 합니다."
  syntax:
    content: public System.Drawing.Drawing2D.Matrix Transform { get; set; }
    return:
      type: System.Drawing.Drawing2D.Matrix
      description: "복사본은 <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> 이 대 한 기하학적 월드 변형을 나타내는 <xref href=&quot;System.Drawing.Graphics&quot;> </xref>합니다."
  overload: System.Drawing.Graphics.Transform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.TransformPoints(System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Point[])
  id: TransformPoints(System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Point[])
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: TransformPoints(CoordinateSpace,CoordinateSpace,Point[])
  nameWithType: Graphics.TransformPoints(CoordinateSpace,CoordinateSpace,Point[])
  fullName: System.Drawing.Graphics.TransformPoints(CoordinateSpace,CoordinateSpace,Point[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "변형 한 좌표 공간에서 현재 월드 및 페이지 변형을 사용 하 여 점의 배열을 <xref href=&quot;System.Drawing.Graphics&quot;> </xref>합니다."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates two points and draws a blue line between them.  \n  \n-   Sets the world transform to translate by amounts 40 in the x direction and 30 in the y direction.  \n  \n-   Transforms the points from world coordinates (<xref:System.Drawing.Drawing2D.CoordinateSpace>) to page coordinates (<xref:System.Drawing.Drawing2D.CoordinateSpace>).  \n  \n-   Resets the world transformation to the identity.  \n  \n-   Draws a red line between the transformed points.  \n  \n The result is a blue line and a translated red line below it.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#163](~/add/codesnippet/cpp/7346647a-cbf8-4ed4-9d18-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#163](~/add/codesnippet/csharp/7346647a-cbf8-4ed4-9d18-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#163](~/add/codesnippet/visualbasic/7346647a-cbf8-4ed4-9d18-_1.vb)]"
  syntax:
    content: public void TransformPoints (System.Drawing.Drawing2D.CoordinateSpace destSpace, System.Drawing.Drawing2D.CoordinateSpace srcSpace, System.Drawing.Point[] pts);
    parameters:
    - id: destSpace
      type: System.Drawing.Drawing2D.CoordinateSpace
      description: "멤버는 <xref href=&quot;System.Drawing.Drawing2D.CoordinateSpace&quot;> </xref> 대상 좌표 공간을 지정 하는 열거형입니다."
    - id: srcSpace
      type: System.Drawing.Drawing2D.CoordinateSpace
      description: "멤버는 <xref href=&quot;System.Drawing.Drawing2D.CoordinateSpace&quot;> </xref> 원본 좌표 공간을 지정 하는 열거형입니다."
    - id: pts
      type: System.Drawing.Point[]
      description: "배열 <xref href=&quot;System.Drawing.Point&quot;> </xref> 변환할 점을 나타내는 구조입니다."
  overload: System.Drawing.Graphics.TransformPoints*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.TransformPoints(System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.PointF[])
  id: TransformPoints(System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.PointF[])
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: TransformPoints(CoordinateSpace,CoordinateSpace,PointF[])
  nameWithType: Graphics.TransformPoints(CoordinateSpace,CoordinateSpace,PointF[])
  fullName: System.Drawing.Graphics.TransformPoints(CoordinateSpace,CoordinateSpace,PointF[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "변형 한 좌표 공간에서 현재 월드 및 페이지 변형을 사용 하 여 점의 배열을 <xref href=&quot;System.Drawing.Graphics&quot;> </xref>합니다."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates two points and draws a blue line between them.  \n  \n-   Sets the world transform to translate by amounts 40 in the x direction and 30 in the y direction.  \n  \n-   Transforms the points from world coordinates (<xref:System.Drawing.Drawing2D.CoordinateSpace>) to page coordinates (<xref:System.Drawing.Drawing2D.CoordinateSpace>).  \n  \n-   Resets the world transformation to the identity and draws a red line between the transformed points.  \n  \n The result is a blue line and a translated red line below it.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#164](~/add/codesnippet/cpp/9caccfd4-27c9-4ec4-8e81-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#164](~/add/codesnippet/csharp/9caccfd4-27c9-4ec4-8e81-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#164](~/add/codesnippet/visualbasic/9caccfd4-27c9-4ec4-8e81-_1.vb)]"
  syntax:
    content: public void TransformPoints (System.Drawing.Drawing2D.CoordinateSpace destSpace, System.Drawing.Drawing2D.CoordinateSpace srcSpace, System.Drawing.PointF[] pts);
    parameters:
    - id: destSpace
      type: System.Drawing.Drawing2D.CoordinateSpace
      description: "멤버는 <xref href=&quot;System.Drawing.Drawing2D.CoordinateSpace&quot;> </xref> 대상 좌표 공간을 지정 하는 열거형입니다."
    - id: srcSpace
      type: System.Drawing.Drawing2D.CoordinateSpace
      description: "멤버는 <xref href=&quot;System.Drawing.Drawing2D.CoordinateSpace&quot;> </xref> 원본 좌표 공간을 지정 하는 열거형입니다."
    - id: pts
      type: System.Drawing.PointF[]
      description: "배열 <xref href=&quot;System.Drawing.PointF&quot;> </xref> 변형할 점을 나타내는입니다."
  overload: System.Drawing.Graphics.TransformPoints*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.TranslateClip(System.Int32,System.Int32)
  id: TranslateClip(System.Int32,System.Int32)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: TranslateClip(Int32,Int32)
  nameWithType: Graphics.TranslateClip(Int32,Int32)
  fullName: System.Drawing.Graphics.TranslateClip(Int32,Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이의 클립 영역을 변환 <xref href=&quot;System.Drawing.Graphics&quot;> </xref> 가로 및 세로 방향으로 지정 된 크기입니다."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a rectangle for the clipping region.  \n  \n-   Sets the clipping region to the rectangle.  \n  \n-   Translates the clipping region by a vector (50, 50).  \n  \n-   Fills a large rectangle with a solid black brush.  \n  \n The result is a translated, small, black rectangle.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#165](~/add/codesnippet/cpp/m-system.drawing.graphic_33_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#165](~/add/codesnippet/csharp/m-system.drawing.graphic_33_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#165](~/add/codesnippet/visualbasic/m-system.drawing.graphic_33_1.vb)]"
  syntax:
    content: public void TranslateClip (int dx, int dy);
    parameters:
    - id: dx
      type: System.Int32
      description: "번역의 x 좌표입니다."
    - id: dy
      type: System.Int32
      description: "이동의 y 좌표입니다."
  overload: System.Drawing.Graphics.TranslateClip*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.TranslateClip(System.Single,System.Single)
  id: TranslateClip(System.Single,System.Single)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: TranslateClip(Single,Single)
  nameWithType: Graphics.TranslateClip(Single,Single)
  fullName: System.Drawing.Graphics.TranslateClip(Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이의 클립 영역을 변환 <xref href=&quot;System.Drawing.Graphics&quot;> </xref> 가로 및 세로 방향으로 지정 된 크기입니다."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a rectangle for the clipping region.  \n  \n-   Sets the clipping region to the rectangle.  \n  \n-   Translates the clipping region by a vector (50.0F, 50.0F).  \n  \n-   Fills a large rectangle with a solid black brush.  \n  \n The result is a translated, small, black rectangle.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#166](~/add/codesnippet/cpp/m-system.drawing.graphic_45_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#166](~/add/codesnippet/csharp/m-system.drawing.graphic_45_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#166](~/add/codesnippet/visualbasic/m-system.drawing.graphic_45_1.vb)]"
  syntax:
    content: public void TranslateClip (float dx, float dy);
    parameters:
    - id: dx
      type: System.Single
      description: "번역의 x 좌표입니다."
    - id: dy
      type: System.Single
      description: "이동의 y 좌표입니다."
  overload: System.Drawing.Graphics.TranslateClip*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.TranslateTransform(System.Single,System.Single)
  id: TranslateTransform(System.Single,System.Single)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: TranslateTransform(Single,Single)
  nameWithType: Graphics.TranslateTransform(Single,Single)
  fullName: System.Drawing.Graphics.TranslateTransform(Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이 지정 된 이동을 변환 매트릭스 앞에 추가 하 여 좌표계의 원점을 변경 <xref href=&quot;System.Drawing.Graphics&quot;> </xref>합니다."
  remarks: "원점은 그리기 화면의 왼쪽 위 모서리 일반적으로 있습니다.  변환 작업으로 이동 하는 행렬의 변환 매트릭스 이루어져는 `dx` 및 `dy` 매개 변수입니다. 이 메서드는 변환 매트릭스를 변형 매트릭스 앞에 추가 하 여 번역을 적용 합니다."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Rotates the world transformation matrix of the Windows Form by 30.0F degrees.  \n  \n-   Moves the origin of the graphics object by calling TranslateTransform, prepending the translation to the transformation matrix.  \n  \n-   Draws a translated, rotated ellipse with a blue pen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#167](~/add/codesnippet/cpp/m-system.drawing.graphic_30_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#167](~/add/codesnippet/csharp/m-system.drawing.graphic_30_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#167](~/add/codesnippet/visualbasic/m-system.drawing.graphic_30_1.vb)]  \n  \n The following illustration shows the output of running the previous code example.  \n  \n ![Translated and transformed ellipse](~/add/media/ndp-tranlatetransform.png \"Translated and transformed ellipse\")"
  syntax:
    content: public void TranslateTransform (float dx, float dy);
    parameters:
    - id: dx
      type: System.Single
      description: "번역의 x 좌표입니다."
    - id: dy
      type: System.Single
      description: "이동의 y 좌표입니다."
  overload: System.Drawing.Graphics.TranslateTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  id: TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: TranslateTransform(Single,Single,MatrixOrder)
  nameWithType: Graphics.TranslateTransform(Single,Single,MatrixOrder)
  fullName: System.Drawing.Graphics.TranslateTransform(Single,Single,MatrixOrder)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이 변형 매트릭스에 지정된 된 이동을 적용 하 여 좌표계의 원점을 변경 <xref href=&quot;System.Drawing.Graphics&quot;> </xref> 지정 된 순서로 합니다."
  remarks: "변환 작업으로 이동 하는 행렬의 변환 매트릭스 이루어져는 `dx` 및 `dy` 매개 변수입니다. 이 메서드는 앞에 추가 하거나 추가의 변형 매트릭스는 <xref:System.Drawing.Graphics>에 따라 변환 매트릭스는 `order` 매개 변수.</xref:System.Drawing.Graphics>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Rotates the world transformation matrix of the Windows Form by 30.0F degrees.  \n  \n-   Moves the graphics object's origin by calling TranslateTransform, appending the translation to the world transformation matrix.  \n  \n-   Draws a rotated, translated ellipse with a blue pen.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples3#168](~/add/codesnippet/cpp/3a1adcd8-df73-46ba-bf3e-_1.cpp)]\n [!code-cs[System.Drawing.ClassicGraphicsExamples3#168](~/add/codesnippet/csharp/3a1adcd8-df73-46ba-bf3e-_1.cs)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples3#168](~/add/codesnippet/visualbasic/3a1adcd8-df73-46ba-bf3e-_1.vb)]"
  syntax:
    content: public void TranslateTransform (float dx, float dy, System.Drawing.Drawing2D.MatrixOrder order);
    parameters:
    - id: dx
      type: System.Single
      description: "번역의 x 좌표입니다."
    - id: dy
      type: System.Single
      description: "이동의 y 좌표입니다."
    - id: order
      type: System.Drawing.Drawing2D.MatrixOrder
      description: "멤버는 <xref href=&quot;System.Drawing.Drawing2D.MatrixOrder&quot;> </xref> 번역 변형 매트릭스에 추가 되거나 미리 추가 하는지 여부를 지정 하는 열거형입니다."
  overload: System.Drawing.Graphics.TranslateTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Graphics.VisibleClipBounds
  id: VisibleClipBounds
  parent: System.Drawing.Graphics
  langs:
  - csharp
  name: VisibleClipBounds
  nameWithType: Graphics.VisibleClipBounds
  fullName: System.Drawing.Graphics.VisibleClipBounds
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이 표시 되는 클립 영역 경계 사각형을 가져옵니다 <xref href=&quot;System.Drawing.Graphics&quot;> </xref>합니다."
  remarks: "단위 결과 사각형에 의해 지정 되는 <xref:System.Drawing.Graphics.PageUnit%2A>속성.</xref:System.Drawing.Graphics.PageUnit%2A> 기본 단위는 픽셀입니다. A <xref:System.Drawing.Graphics>일반적으로 컨트롤과 연결 된 해당 컨트롤의 클라이언트 영역에 상대적인 사각형의 시작 됩니다.</xref:System.Drawing.Graphics>       표시 된 클립 영역이이의 클립 영역에 공통 된 <xref:System.Drawing.Graphics>및 창의 클립 영역.</xref:System.Drawing.Graphics>"
  syntax:
    content: public System.Drawing.RectangleF VisibleClipBounds { get; }
    return:
      type: System.Drawing.RectangleF
      description: "A <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> 이 표시 되는 클립 영역에 대 한 경계 사각형을 나타내는 <xref href=&quot;System.Drawing.Graphics&quot;> </xref>합니다."
  overload: System.Drawing.Graphics.VisibleClipBounds*
  exceptions: []
  platform:
  - net462
references:
- uid: System.MarshalByRefObject
  isExternal: false
  name: System.MarshalByRefObject
- uid: System.ComponentModel.Win32Exception
  parent: System.ComponentModel
  isExternal: false
  name: Win32Exception
  nameWithType: Win32Exception
  fullName: System.ComponentModel.Win32Exception
- uid: System.ComponentModel.InvalidEnumArgumentException
  parent: System.ComponentModel
  isExternal: false
  name: InvalidEnumArgumentException
  nameWithType: InvalidEnumArgumentException
  fullName: System.ComponentModel.InvalidEnumArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Exception
  isExternal: true
  name: System.Exception
- uid: System.Drawing.Graphics.AddMetafileComment(System.Byte[])
  parent: System.Drawing.Graphics
  isExternal: false
  name: AddMetafileComment(Byte[])
  nameWithType: Graphics.AddMetafileComment(Byte[])
  fullName: System.Drawing.Graphics.AddMetafileComment(Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Drawing.Graphics.BeginContainer
  parent: System.Drawing.Graphics
  isExternal: false
  name: BeginContainer()
  nameWithType: Graphics.BeginContainer()
  fullName: System.Drawing.Graphics.BeginContainer()
- uid: System.Drawing.Drawing2D.GraphicsContainer
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: GraphicsContainer
  nameWithType: GraphicsContainer
  fullName: System.Drawing.Drawing2D.GraphicsContainer
- uid: System.Drawing.Graphics.BeginContainer(System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)
  parent: System.Drawing.Graphics
  isExternal: false
  name: BeginContainer(Rectangle,Rectangle,GraphicsUnit)
  nameWithType: Graphics.BeginContainer(Rectangle,Rectangle,GraphicsUnit)
  fullName: System.Drawing.Graphics.BeginContainer(Rectangle,Rectangle,GraphicsUnit)
- uid: System.Drawing.Rectangle
  parent: System.Drawing
  isExternal: false
  name: Rectangle
  nameWithType: Rectangle
  fullName: System.Drawing.Rectangle
- uid: System.Drawing.GraphicsUnit
  parent: System.Drawing
  isExternal: false
  name: GraphicsUnit
  nameWithType: GraphicsUnit
  fullName: System.Drawing.GraphicsUnit
- uid: System.Drawing.Graphics.BeginContainer(System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)
  parent: System.Drawing.Graphics
  isExternal: false
  name: BeginContainer(RectangleF,RectangleF,GraphicsUnit)
  nameWithType: Graphics.BeginContainer(RectangleF,RectangleF,GraphicsUnit)
  fullName: System.Drawing.Graphics.BeginContainer(RectangleF,RectangleF,GraphicsUnit)
- uid: System.Drawing.RectangleF
  parent: System.Drawing
  isExternal: false
  name: RectangleF
  nameWithType: RectangleF
  fullName: System.Drawing.RectangleF
- uid: System.Drawing.Graphics.Clear(System.Drawing.Color)
  parent: System.Drawing.Graphics
  isExternal: false
  name: Clear(Color)
  nameWithType: Graphics.Clear(Color)
  fullName: System.Drawing.Graphics.Clear(Color)
- uid: System.Drawing.Color
  parent: System.Drawing
  isExternal: false
  name: Color
  nameWithType: Color
  fullName: System.Drawing.Color
- uid: System.Drawing.Graphics.Clip
  parent: System.Drawing.Graphics
  isExternal: false
  name: Clip
  nameWithType: Graphics.Clip
  fullName: System.Drawing.Graphics.Clip
- uid: System.Drawing.Region
  parent: System.Drawing
  isExternal: false
  name: Region
  nameWithType: Region
  fullName: System.Drawing.Region
- uid: System.Drawing.Graphics.ClipBounds
  parent: System.Drawing.Graphics
  isExternal: false
  name: ClipBounds
  nameWithType: Graphics.ClipBounds
  fullName: System.Drawing.Graphics.ClipBounds
- uid: System.Drawing.Graphics.CompositingMode
  parent: System.Drawing.Graphics
  isExternal: false
  name: CompositingMode
  nameWithType: Graphics.CompositingMode
  fullName: System.Drawing.Graphics.CompositingMode
- uid: System.Drawing.Drawing2D.CompositingMode
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: CompositingMode
  nameWithType: CompositingMode
  fullName: System.Drawing.Drawing2D.CompositingMode
- uid: System.Drawing.Graphics.CompositingQuality
  parent: System.Drawing.Graphics
  isExternal: false
  name: CompositingQuality
  nameWithType: Graphics.CompositingQuality
  fullName: System.Drawing.Graphics.CompositingQuality
- uid: System.Drawing.Drawing2D.CompositingQuality
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: CompositingQuality
  nameWithType: CompositingQuality
  fullName: System.Drawing.Drawing2D.CompositingQuality
- uid: System.Drawing.Graphics.CopyFromScreen(System.Drawing.Point,System.Drawing.Point,System.Drawing.Size)
  parent: System.Drawing.Graphics
  isExternal: false
  name: CopyFromScreen(Point,Point,Size)
  nameWithType: Graphics.CopyFromScreen(Point,Point,Size)
  fullName: System.Drawing.Graphics.CopyFromScreen(Point,Point,Size)
- uid: System.Drawing.Point
  parent: System.Drawing
  isExternal: false
  name: Point
  nameWithType: Point
  fullName: System.Drawing.Point
- uid: System.Drawing.Size
  parent: System.Drawing
  isExternal: false
  name: Size
  nameWithType: Size
  fullName: System.Drawing.Size
- uid: System.Drawing.Graphics.CopyFromScreen(System.Drawing.Point,System.Drawing.Point,System.Drawing.Size,System.Drawing.CopyPixelOperation)
  parent: System.Drawing.Graphics
  isExternal: false
  name: CopyFromScreen(Point,Point,Size,CopyPixelOperation)
  nameWithType: Graphics.CopyFromScreen(Point,Point,Size,CopyPixelOperation)
  fullName: System.Drawing.Graphics.CopyFromScreen(Point,Point,Size,CopyPixelOperation)
- uid: System.Drawing.CopyPixelOperation
  parent: System.Drawing
  isExternal: false
  name: CopyPixelOperation
  nameWithType: CopyPixelOperation
  fullName: System.Drawing.CopyPixelOperation
- uid: System.Drawing.Graphics.CopyFromScreen(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Size)
  parent: System.Drawing.Graphics
  isExternal: false
  name: CopyFromScreen(Int32,Int32,Int32,Int32,Size)
  nameWithType: Graphics.CopyFromScreen(Int32,Int32,Int32,Int32,Size)
  fullName: System.Drawing.Graphics.CopyFromScreen(Int32,Int32,Int32,Int32,Size)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Drawing.Graphics.CopyFromScreen(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Size,System.Drawing.CopyPixelOperation)
  parent: System.Drawing.Graphics
  isExternal: false
  name: CopyFromScreen(Int32,Int32,Int32,Int32,Size,CopyPixelOperation)
  nameWithType: Graphics.CopyFromScreen(Int32,Int32,Int32,Int32,Size,CopyPixelOperation)
  fullName: System.Drawing.Graphics.CopyFromScreen(Int32,Int32,Int32,Int32,Size,CopyPixelOperation)
- uid: System.Drawing.Graphics.Dispose
  parent: System.Drawing.Graphics
  isExternal: false
  name: Dispose()
  nameWithType: Graphics.Dispose()
  fullName: System.Drawing.Graphics.Dispose()
- uid: System.Drawing.Graphics.DpiX
  parent: System.Drawing.Graphics
  isExternal: false
  name: DpiX
  nameWithType: Graphics.DpiX
  fullName: System.Drawing.Graphics.DpiX
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Drawing.Graphics.DpiY
  parent: System.Drawing.Graphics
  isExternal: false
  name: DpiY
  nameWithType: Graphics.DpiY
  fullName: System.Drawing.Graphics.DpiY
- uid: System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Drawing.Rectangle,System.Single,System.Single)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawArc(Pen,Rectangle,Single,Single)
  nameWithType: Graphics.DrawArc(Pen,Rectangle,Single,Single)
  fullName: System.Drawing.Graphics.DrawArc(Pen,Rectangle,Single,Single)
- uid: System.Drawing.Pen
  parent: System.Drawing
  isExternal: false
  name: Pen
  nameWithType: Pen
  fullName: System.Drawing.Pen
- uid: System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Drawing.RectangleF,System.Single,System.Single)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawArc(Pen,RectangleF,Single,Single)
  nameWithType: Graphics.DrawArc(Pen,RectangleF,Single,Single)
  fullName: System.Drawing.Graphics.DrawArc(Pen,RectangleF,Single,Single)
- uid: System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawArc(Pen,Int32,Int32,Int32,Int32,Int32,Int32)
  nameWithType: Graphics.DrawArc(Pen,Int32,Int32,Int32,Int32,Int32,Int32)
  fullName: System.Drawing.Graphics.DrawArc(Pen,Int32,Int32,Int32,Int32,Int32,Int32)
- uid: System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawArc(Pen,Single,Single,Single,Single,Single,Single)
  nameWithType: Graphics.DrawArc(Pen,Single,Single,Single,Single,Single,Single)
  fullName: System.Drawing.Graphics.DrawArc(Pen,Single,Single,Single,Single,Single,Single)
- uid: System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawBezier(Pen,Point,Point,Point,Point)
  nameWithType: Graphics.DrawBezier(Pen,Point,Point,Point,Point)
  fullName: System.Drawing.Graphics.DrawBezier(Pen,Point,Point,Point,Point)
- uid: System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawBezier(Pen,PointF,PointF,PointF,PointF)
  nameWithType: Graphics.DrawBezier(Pen,PointF,PointF,PointF,PointF)
  fullName: System.Drawing.Graphics.DrawBezier(Pen,PointF,PointF,PointF,PointF)
- uid: System.Drawing.PointF
  parent: System.Drawing
  isExternal: false
  name: PointF
  nameWithType: PointF
  fullName: System.Drawing.PointF
- uid: System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawBezier(Pen,Single,Single,Single,Single,Single,Single,Single,Single)
  nameWithType: Graphics.DrawBezier(Pen,Single,Single,Single,Single,Single,Single,Single,Single)
  fullName: System.Drawing.Graphics.DrawBezier(Pen,Single,Single,Single,Single,Single,Single,Single,Single)
- uid: System.Drawing.Graphics.DrawBeziers(System.Drawing.Pen,System.Drawing.Point[])
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawBeziers(Pen,Point[])
  nameWithType: Graphics.DrawBeziers(Pen,Point[])
  fullName: System.Drawing.Graphics.DrawBeziers(Pen,Point[])
- uid: System.Drawing.Point[]
  parent: System.Drawing
  isExternal: false
  name: Point
  nameWithType: Point
  fullName: System.Drawing.Point[]
  spec.csharp:
  - uid: System.Drawing.Point
    name: Point
    nameWithType: Point
    fullName: Point[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Drawing.Graphics.DrawBeziers(System.Drawing.Pen,System.Drawing.PointF[])
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawBeziers(Pen,PointF[])
  nameWithType: Graphics.DrawBeziers(Pen,PointF[])
  fullName: System.Drawing.Graphics.DrawBeziers(Pen,PointF[])
- uid: System.Drawing.PointF[]
  parent: System.Drawing
  isExternal: false
  name: PointF
  nameWithType: PointF
  fullName: System.Drawing.PointF[]
  spec.csharp:
  - uid: System.Drawing.PointF
    name: PointF
    nameWithType: PointF
    fullName: PointF[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.Point[])
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawClosedCurve(Pen,Point[])
  nameWithType: Graphics.DrawClosedCurve(Pen,Point[])
  fullName: System.Drawing.Graphics.DrawClosedCurve(Pen,Point[])
- uid: System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.PointF[])
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawClosedCurve(Pen,PointF[])
  nameWithType: Graphics.DrawClosedCurve(Pen,PointF[])
  fullName: System.Drawing.Graphics.DrawClosedCurve(Pen,PointF[])
- uid: System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.Point[],System.Single,System.Drawing.Drawing2D.FillMode)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawClosedCurve(Pen,Point[],Single,FillMode)
  nameWithType: Graphics.DrawClosedCurve(Pen,Point[],Single,FillMode)
  fullName: System.Drawing.Graphics.DrawClosedCurve(Pen,Point[],Single,FillMode)
- uid: System.Drawing.Drawing2D.FillMode
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: FillMode
  nameWithType: FillMode
  fullName: System.Drawing.Drawing2D.FillMode
- uid: System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Single,System.Drawing.Drawing2D.FillMode)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawClosedCurve(Pen,PointF[],Single,FillMode)
  nameWithType: Graphics.DrawClosedCurve(Pen,PointF[],Single,FillMode)
  fullName: System.Drawing.Graphics.DrawClosedCurve(Pen,PointF[],Single,FillMode)
- uid: System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[])
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawCurve(Pen,Point[])
  nameWithType: Graphics.DrawCurve(Pen,Point[])
  fullName: System.Drawing.Graphics.DrawCurve(Pen,Point[])
- uid: System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[])
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawCurve(Pen,PointF[])
  nameWithType: Graphics.DrawCurve(Pen,PointF[])
  fullName: System.Drawing.Graphics.DrawCurve(Pen,PointF[])
- uid: System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Single)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawCurve(Pen,Point[],Single)
  nameWithType: Graphics.DrawCurve(Pen,Point[],Single)
  fullName: System.Drawing.Graphics.DrawCurve(Pen,Point[],Single)
- uid: System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Single)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawCurve(Pen,PointF[],Single)
  nameWithType: Graphics.DrawCurve(Pen,PointF[],Single)
  fullName: System.Drawing.Graphics.DrawCurve(Pen,PointF[],Single)
- uid: System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawCurve(Pen,PointF[],Int32,Int32)
  nameWithType: Graphics.DrawCurve(Pen,PointF[],Int32,Int32)
  fullName: System.Drawing.Graphics.DrawCurve(Pen,PointF[],Int32,Int32)
- uid: System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Int32,System.Int32,System.Single)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawCurve(Pen,Point[],Int32,Int32,Single)
  nameWithType: Graphics.DrawCurve(Pen,Point[],Int32,Int32,Single)
  fullName: System.Drawing.Graphics.DrawCurve(Pen,Point[],Int32,Int32,Single)
- uid: System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32,System.Single)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawCurve(Pen,PointF[],Int32,Int32,Single)
  nameWithType: Graphics.DrawCurve(Pen,PointF[],Int32,Int32,Single)
  fullName: System.Drawing.Graphics.DrawCurve(Pen,PointF[],Int32,Int32,Single)
- uid: System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Drawing.Rectangle)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawEllipse(Pen,Rectangle)
  nameWithType: Graphics.DrawEllipse(Pen,Rectangle)
  fullName: System.Drawing.Graphics.DrawEllipse(Pen,Rectangle)
- uid: System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Drawing.RectangleF)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawEllipse(Pen,RectangleF)
  nameWithType: Graphics.DrawEllipse(Pen,RectangleF)
  fullName: System.Drawing.Graphics.DrawEllipse(Pen,RectangleF)
- uid: System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawEllipse(Pen,Int32,Int32,Int32,Int32)
  nameWithType: Graphics.DrawEllipse(Pen,Int32,Int32,Int32,Int32)
  fullName: System.Drawing.Graphics.DrawEllipse(Pen,Int32,Int32,Int32,Int32)
- uid: System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawEllipse(Pen,Single,Single,Single,Single)
  nameWithType: Graphics.DrawEllipse(Pen,Single,Single,Single,Single)
  fullName: System.Drawing.Graphics.DrawEllipse(Pen,Single,Single,Single,Single)
- uid: System.Drawing.Graphics.DrawIcon(System.Drawing.Icon,System.Drawing.Rectangle)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawIcon(Icon,Rectangle)
  nameWithType: Graphics.DrawIcon(Icon,Rectangle)
  fullName: System.Drawing.Graphics.DrawIcon(Icon,Rectangle)
- uid: System.Drawing.Icon
  parent: System.Drawing
  isExternal: false
  name: Icon
  nameWithType: Icon
  fullName: System.Drawing.Icon
- uid: System.Drawing.Graphics.DrawIcon(System.Drawing.Icon,System.Int32,System.Int32)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawIcon(Icon,Int32,Int32)
  nameWithType: Graphics.DrawIcon(Icon,Int32,Int32)
  fullName: System.Drawing.Graphics.DrawIcon(Icon,Int32,Int32)
- uid: System.Drawing.Graphics.DrawIconUnstretched(System.Drawing.Icon,System.Drawing.Rectangle)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawIconUnstretched(Icon,Rectangle)
  nameWithType: Graphics.DrawIconUnstretched(Icon,Rectangle)
  fullName: System.Drawing.Graphics.DrawIconUnstretched(Icon,Rectangle)
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImage(Image,Point)
  nameWithType: Graphics.DrawImage(Image,Point)
  fullName: System.Drawing.Graphics.DrawImage(Image,Point)
- uid: System.Drawing.Image
  parent: System.Drawing
  isExternal: false
  name: Image
  nameWithType: Image
  fullName: System.Drawing.Image
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[])
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImage(Image,Point[])
  nameWithType: Graphics.DrawImage(Image,Point[])
  fullName: System.Drawing.Graphics.DrawImage(Image,Point[])
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImage(Image,PointF)
  nameWithType: Graphics.DrawImage(Image,PointF)
  fullName: System.Drawing.Graphics.DrawImage(Image,PointF)
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[])
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImage(Image,PointF[])
  nameWithType: Graphics.DrawImage(Image,PointF[])
  fullName: System.Drawing.Graphics.DrawImage(Image,PointF[])
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImage(Image,Rectangle)
  nameWithType: Graphics.DrawImage(Image,Rectangle)
  fullName: System.Drawing.Graphics.DrawImage(Image,Rectangle)
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.RectangleF)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImage(Image,RectangleF)
  nameWithType: Graphics.DrawImage(Image,RectangleF)
  fullName: System.Drawing.Graphics.DrawImage(Image,RectangleF)
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImage(Image,Int32,Int32)
  nameWithType: Graphics.DrawImage(Image,Int32,Int32)
  fullName: System.Drawing.Graphics.DrawImage(Image,Int32,Int32)
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImage(Image,Single,Single)
  nameWithType: Graphics.DrawImage(Image,Single,Single)
  fullName: System.Drawing.Graphics.DrawImage(Image,Single,Single)
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImage(Image,Point[],Rectangle,GraphicsUnit)
  nameWithType: Graphics.DrawImage(Image,Point[],Rectangle,GraphicsUnit)
  fullName: System.Drawing.Graphics.DrawImage(Image,Point[],Rectangle,GraphicsUnit)
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImage(Image,PointF[],RectangleF,GraphicsUnit)
  nameWithType: Graphics.DrawImage(Image,PointF[],RectangleF,GraphicsUnit)
  fullName: System.Drawing.Graphics.DrawImage(Image,PointF[],RectangleF,GraphicsUnit)
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImage(Image,Rectangle,Rectangle,GraphicsUnit)
  nameWithType: Graphics.DrawImage(Image,Rectangle,Rectangle,GraphicsUnit)
  fullName: System.Drawing.Graphics.DrawImage(Image,Rectangle,Rectangle,GraphicsUnit)
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImage(Image,RectangleF,RectangleF,GraphicsUnit)
  nameWithType: Graphics.DrawImage(Image,RectangleF,RectangleF,GraphicsUnit)
  fullName: System.Drawing.Graphics.DrawImage(Image,RectangleF,RectangleF,GraphicsUnit)
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImage(Image,Point[],Rectangle,GraphicsUnit,ImageAttributes)
  nameWithType: Graphics.DrawImage(Image,Point[],Rectangle,GraphicsUnit,ImageAttributes)
  fullName: System.Drawing.Graphics.DrawImage(Image,Point[],Rectangle,GraphicsUnit,ImageAttributes)
- uid: System.Drawing.Imaging.ImageAttributes
  parent: System.Drawing.Imaging
  isExternal: false
  name: ImageAttributes
  nameWithType: ImageAttributes
  fullName: System.Drawing.Imaging.ImageAttributes
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImage(Image,PointF[],RectangleF,GraphicsUnit,ImageAttributes)
  nameWithType: Graphics.DrawImage(Image,PointF[],RectangleF,GraphicsUnit,ImageAttributes)
  fullName: System.Drawing.Graphics.DrawImage(Image,PointF[],RectangleF,GraphicsUnit,ImageAttributes)
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImage(Image,Int32,Int32,Rectangle,GraphicsUnit)
  nameWithType: Graphics.DrawImage(Image,Int32,Int32,Rectangle,GraphicsUnit)
  fullName: System.Drawing.Graphics.DrawImage(Image,Int32,Int32,Rectangle,GraphicsUnit)
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImage(Image,Int32,Int32,Int32,Int32)
  nameWithType: Graphics.DrawImage(Image,Int32,Int32,Int32,Int32)
  fullName: System.Drawing.Graphics.DrawImage(Image,Int32,Int32,Int32,Int32)
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImage(Image,Single,Single,RectangleF,GraphicsUnit)
  nameWithType: Graphics.DrawImage(Image,Single,Single,RectangleF,GraphicsUnit)
  fullName: System.Drawing.Graphics.DrawImage(Image,Single,Single,RectangleF,GraphicsUnit)
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single,System.Single,System.Single)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImage(Image,Single,Single,Single,Single)
  nameWithType: Graphics.DrawImage(Image,Single,Single,Single,Single)
  fullName: System.Drawing.Graphics.DrawImage(Image,Single,Single,Single,Single)
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImage(Image,Point[],Rectangle,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort)
  nameWithType: Graphics.DrawImage(Image,Point[],Rectangle,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort)
  fullName: System.Drawing.Graphics.DrawImage(Image,Point[],Rectangle,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort)
- uid: System.Drawing.Graphics.DrawImageAbort
  parent: System.Drawing
  isExternal: false
  name: Graphics+DrawImageAbort
  nameWithType: Graphics+DrawImageAbort
  fullName: System.Drawing.Graphics+DrawImageAbort
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImage(Image,PointF[],RectangleF,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort)
  nameWithType: Graphics.DrawImage(Image,PointF[],RectangleF,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort)
  fullName: System.Drawing.Graphics.DrawImage(Image,PointF[],RectangleF,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort)
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImage(Image,Point[],Rectangle,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort,Int32)
  nameWithType: Graphics.DrawImage(Image,Point[],Rectangle,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort,Int32)
  fullName: System.Drawing.Graphics.DrawImage(Image,Point[],Rectangle,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort,Int32)
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImage(Image,PointF[],RectangleF,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort,Int32)
  nameWithType: Graphics.DrawImage(Image,PointF[],RectangleF,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort,Int32)
  fullName: System.Drawing.Graphics.DrawImage(Image,PointF[],RectangleF,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort,Int32)
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImage(Image,Rectangle,Int32,Int32,Int32,Int32,GraphicsUnit)
  nameWithType: Graphics.DrawImage(Image,Rectangle,Int32,Int32,Int32,Int32,GraphicsUnit)
  fullName: System.Drawing.Graphics.DrawImage(Image,Rectangle,Int32,Int32,Int32,Int32,GraphicsUnit)
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImage(Image,Rectangle,Single,Single,Single,Single,GraphicsUnit)
  nameWithType: Graphics.DrawImage(Image,Rectangle,Single,Single,Single,Single,GraphicsUnit)
  fullName: System.Drawing.Graphics.DrawImage(Image,Rectangle,Single,Single,Single,Single,GraphicsUnit)
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImage(Image,Rectangle,Int32,Int32,Int32,Int32,GraphicsUnit,ImageAttributes)
  nameWithType: Graphics.DrawImage(Image,Rectangle,Int32,Int32,Int32,Int32,GraphicsUnit,ImageAttributes)
  fullName: System.Drawing.Graphics.DrawImage(Image,Rectangle,Int32,Int32,Int32,Int32,GraphicsUnit,ImageAttributes)
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImage(Image,Rectangle,Single,Single,Single,Single,GraphicsUnit,ImageAttributes)
  nameWithType: Graphics.DrawImage(Image,Rectangle,Single,Single,Single,Single,GraphicsUnit,ImageAttributes)
  fullName: System.Drawing.Graphics.DrawImage(Image,Rectangle,Single,Single,Single,Single,GraphicsUnit,ImageAttributes)
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImage(Image,Rectangle,Int32,Int32,Int32,Int32,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort)
  nameWithType: Graphics.DrawImage(Image,Rectangle,Int32,Int32,Int32,Int32,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort)
  fullName: System.Drawing.Graphics.DrawImage(Image,Rectangle,Int32,Int32,Int32,Int32,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort)
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImage(Image,Rectangle,Single,Single,Single,Single,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort)
  nameWithType: Graphics.DrawImage(Image,Rectangle,Single,Single,Single,Single,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort)
  fullName: System.Drawing.Graphics.DrawImage(Image,Rectangle,Single,Single,Single,Single,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort)
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImage(Image,Rectangle,Int32,Int32,Int32,Int32,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort,IntPtr)
  nameWithType: Graphics.DrawImage(Image,Rectangle,Int32,Int32,Int32,Int32,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort,IntPtr)
  fullName: System.Drawing.Graphics.DrawImage(Image,Rectangle,Int32,Int32,Int32,Int32,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort,IntPtr)
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImage(Image,Rectangle,Single,Single,Single,Single,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort,IntPtr)
  nameWithType: Graphics.DrawImage(Image,Rectangle,Single,Single,Single,Single,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort,IntPtr)
  fullName: System.Drawing.Graphics.DrawImage(Image,Rectangle,Single,Single,Single,Single,GraphicsUnit,ImageAttributes,Graphics+DrawImageAbort,IntPtr)
- uid: System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Drawing.Point)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImageUnscaled(Image,Point)
  nameWithType: Graphics.DrawImageUnscaled(Image,Point)
  fullName: System.Drawing.Graphics.DrawImageUnscaled(Image,Point)
- uid: System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Drawing.Rectangle)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImageUnscaled(Image,Rectangle)
  nameWithType: Graphics.DrawImageUnscaled(Image,Rectangle)
  fullName: System.Drawing.Graphics.DrawImageUnscaled(Image,Rectangle)
- uid: System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Int32,System.Int32)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImageUnscaled(Image,Int32,Int32)
  nameWithType: Graphics.DrawImageUnscaled(Image,Int32,Int32)
  fullName: System.Drawing.Graphics.DrawImageUnscaled(Image,Int32,Int32)
- uid: System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImageUnscaled(Image,Int32,Int32,Int32,Int32)
  nameWithType: Graphics.DrawImageUnscaled(Image,Int32,Int32,Int32,Int32)
  fullName: System.Drawing.Graphics.DrawImageUnscaled(Image,Int32,Int32,Int32,Int32)
- uid: System.Drawing.Graphics.DrawImageUnscaledAndClipped(System.Drawing.Image,System.Drawing.Rectangle)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImageUnscaledAndClipped(Image,Rectangle)
  nameWithType: Graphics.DrawImageUnscaledAndClipped(Image,Rectangle)
  fullName: System.Drawing.Graphics.DrawImageUnscaledAndClipped(Image,Rectangle)
- uid: System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Drawing.Point,System.Drawing.Point)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawLine(Pen,Point,Point)
  nameWithType: Graphics.DrawLine(Pen,Point,Point)
  fullName: System.Drawing.Graphics.DrawLine(Pen,Point,Point)
- uid: System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Drawing.PointF,System.Drawing.PointF)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawLine(Pen,PointF,PointF)
  nameWithType: Graphics.DrawLine(Pen,PointF,PointF)
  fullName: System.Drawing.Graphics.DrawLine(Pen,PointF,PointF)
- uid: System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawLine(Pen,Int32,Int32,Int32,Int32)
  nameWithType: Graphics.DrawLine(Pen,Int32,Int32,Int32,Int32)
  fullName: System.Drawing.Graphics.DrawLine(Pen,Int32,Int32,Int32,Int32)
- uid: System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawLine(Pen,Single,Single,Single,Single)
  nameWithType: Graphics.DrawLine(Pen,Single,Single,Single,Single)
  fullName: System.Drawing.Graphics.DrawLine(Pen,Single,Single,Single,Single)
- uid: System.Drawing.Graphics.DrawLines(System.Drawing.Pen,System.Drawing.Point[])
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawLines(Pen,Point[])
  nameWithType: Graphics.DrawLines(Pen,Point[])
  fullName: System.Drawing.Graphics.DrawLines(Pen,Point[])
- uid: System.Drawing.Graphics.DrawLines(System.Drawing.Pen,System.Drawing.PointF[])
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawLines(Pen,PointF[])
  nameWithType: Graphics.DrawLines(Pen,PointF[])
  fullName: System.Drawing.Graphics.DrawLines(Pen,PointF[])
- uid: System.Drawing.Graphics.DrawPath(System.Drawing.Pen,System.Drawing.Drawing2D.GraphicsPath)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawPath(Pen,GraphicsPath)
  nameWithType: Graphics.DrawPath(Pen,GraphicsPath)
  fullName: System.Drawing.Graphics.DrawPath(Pen,GraphicsPath)
- uid: System.Drawing.Drawing2D.GraphicsPath
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: GraphicsPath
  nameWithType: GraphicsPath
  fullName: System.Drawing.Drawing2D.GraphicsPath
- uid: System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Drawing.Rectangle,System.Single,System.Single)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawPie(Pen,Rectangle,Single,Single)
  nameWithType: Graphics.DrawPie(Pen,Rectangle,Single,Single)
  fullName: System.Drawing.Graphics.DrawPie(Pen,Rectangle,Single,Single)
- uid: System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Drawing.RectangleF,System.Single,System.Single)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawPie(Pen,RectangleF,Single,Single)
  nameWithType: Graphics.DrawPie(Pen,RectangleF,Single,Single)
  fullName: System.Drawing.Graphics.DrawPie(Pen,RectangleF,Single,Single)
- uid: System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawPie(Pen,Int32,Int32,Int32,Int32,Int32,Int32)
  nameWithType: Graphics.DrawPie(Pen,Int32,Int32,Int32,Int32,Int32,Int32)
  fullName: System.Drawing.Graphics.DrawPie(Pen,Int32,Int32,Int32,Int32,Int32,Int32)
- uid: System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawPie(Pen,Single,Single,Single,Single,Single,Single)
  nameWithType: Graphics.DrawPie(Pen,Single,Single,Single,Single,Single,Single)
  fullName: System.Drawing.Graphics.DrawPie(Pen,Single,Single,Single,Single,Single,Single)
- uid: System.Drawing.Graphics.DrawPolygon(System.Drawing.Pen,System.Drawing.Point[])
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawPolygon(Pen,Point[])
  nameWithType: Graphics.DrawPolygon(Pen,Point[])
  fullName: System.Drawing.Graphics.DrawPolygon(Pen,Point[])
- uid: System.Drawing.Graphics.DrawPolygon(System.Drawing.Pen,System.Drawing.PointF[])
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawPolygon(Pen,PointF[])
  nameWithType: Graphics.DrawPolygon(Pen,PointF[])
  fullName: System.Drawing.Graphics.DrawPolygon(Pen,PointF[])
- uid: System.Drawing.Graphics.DrawRectangle(System.Drawing.Pen,System.Drawing.Rectangle)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawRectangle(Pen,Rectangle)
  nameWithType: Graphics.DrawRectangle(Pen,Rectangle)
  fullName: System.Drawing.Graphics.DrawRectangle(Pen,Rectangle)
- uid: System.Drawing.Graphics.DrawRectangle(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawRectangle(Pen,Int32,Int32,Int32,Int32)
  nameWithType: Graphics.DrawRectangle(Pen,Int32,Int32,Int32,Int32)
  fullName: System.Drawing.Graphics.DrawRectangle(Pen,Int32,Int32,Int32,Int32)
- uid: System.Drawing.Graphics.DrawRectangle(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawRectangle(Pen,Single,Single,Single,Single)
  nameWithType: Graphics.DrawRectangle(Pen,Single,Single,Single,Single)
  fullName: System.Drawing.Graphics.DrawRectangle(Pen,Single,Single,Single,Single)
- uid: System.Drawing.Graphics.DrawRectangles(System.Drawing.Pen,System.Drawing.Rectangle[])
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawRectangles(Pen,Rectangle[])
  nameWithType: Graphics.DrawRectangles(Pen,Rectangle[])
  fullName: System.Drawing.Graphics.DrawRectangles(Pen,Rectangle[])
- uid: System.Drawing.Rectangle[]
  parent: System.Drawing
  isExternal: false
  name: Rectangle
  nameWithType: Rectangle
  fullName: System.Drawing.Rectangle[]
  spec.csharp:
  - uid: System.Drawing.Rectangle
    name: Rectangle
    nameWithType: Rectangle
    fullName: Rectangle[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Drawing.Graphics.DrawRectangles(System.Drawing.Pen,System.Drawing.RectangleF[])
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawRectangles(Pen,RectangleF[])
  nameWithType: Graphics.DrawRectangles(Pen,RectangleF[])
  fullName: System.Drawing.Graphics.DrawRectangles(Pen,RectangleF[])
- uid: System.Drawing.RectangleF[]
  parent: System.Drawing
  isExternal: false
  name: RectangleF
  nameWithType: RectangleF
  fullName: System.Drawing.RectangleF[]
  spec.csharp:
  - uid: System.Drawing.RectangleF
    name: RectangleF
    nameWithType: RectangleF
    fullName: RectangleF[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawString(String,Font,Brush,PointF)
  nameWithType: Graphics.DrawString(String,Font,Brush,PointF)
  fullName: System.Drawing.Graphics.DrawString(String,Font,Brush,PointF)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Drawing.Font
  parent: System.Drawing
  isExternal: false
  name: Font
  nameWithType: Font
  fullName: System.Drawing.Font
- uid: System.Drawing.Brush
  parent: System.Drawing
  isExternal: false
  name: Brush
  nameWithType: Brush
  fullName: System.Drawing.Brush
- uid: System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawString(String,Font,Brush,RectangleF)
  nameWithType: Graphics.DrawString(String,Font,Brush,RectangleF)
  fullName: System.Drawing.Graphics.DrawString(String,Font,Brush,RectangleF)
- uid: System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF,System.Drawing.StringFormat)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawString(String,Font,Brush,PointF,StringFormat)
  nameWithType: Graphics.DrawString(String,Font,Brush,PointF,StringFormat)
  fullName: System.Drawing.Graphics.DrawString(String,Font,Brush,PointF,StringFormat)
- uid: System.Drawing.StringFormat
  parent: System.Drawing
  isExternal: false
  name: StringFormat
  nameWithType: StringFormat
  fullName: System.Drawing.StringFormat
- uid: System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF,System.Drawing.StringFormat)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawString(String,Font,Brush,RectangleF,StringFormat)
  nameWithType: Graphics.DrawString(String,Font,Brush,RectangleF,StringFormat)
  fullName: System.Drawing.Graphics.DrawString(String,Font,Brush,RectangleF,StringFormat)
- uid: System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Single,System.Single)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawString(String,Font,Brush,Single,Single)
  nameWithType: Graphics.DrawString(String,Font,Brush,Single,Single)
  fullName: System.Drawing.Graphics.DrawString(String,Font,Brush,Single,Single)
- uid: System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Single,System.Single,System.Drawing.StringFormat)
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawString(String,Font,Brush,Single,Single,StringFormat)
  nameWithType: Graphics.DrawString(String,Font,Brush,Single,Single,StringFormat)
  fullName: System.Drawing.Graphics.DrawString(String,Font,Brush,Single,Single,StringFormat)
- uid: System.Drawing.Graphics.EndContainer(System.Drawing.Drawing2D.GraphicsContainer)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EndContainer(GraphicsContainer)
  nameWithType: Graphics.EndContainer(GraphicsContainer)
  fullName: System.Drawing.Graphics.EndContainer(GraphicsContainer)
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,Point,Graphics+EnumerateMetafileProc)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Point,Graphics+EnumerateMetafileProc)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Point,Graphics+EnumerateMetafileProc)
- uid: System.Drawing.Imaging.Metafile
  parent: System.Drawing.Imaging
  isExternal: false
  name: Metafile
  nameWithType: Metafile
  fullName: System.Drawing.Imaging.Metafile
- uid: System.Drawing.Graphics.EnumerateMetafileProc
  parent: System.Drawing
  isExternal: false
  name: Graphics+EnumerateMetafileProc
  nameWithType: Graphics+EnumerateMetafileProc
  fullName: System.Drawing.Graphics+EnumerateMetafileProc
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,Point[],Graphics+EnumerateMetafileProc)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Point[],Graphics+EnumerateMetafileProc)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Point[],Graphics+EnumerateMetafileProc)
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,PointF,Graphics+EnumerateMetafileProc)
  nameWithType: Graphics.EnumerateMetafile(Metafile,PointF,Graphics+EnumerateMetafileProc)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,PointF,Graphics+EnumerateMetafileProc)
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,PointF[],Graphics+EnumerateMetafileProc)
  nameWithType: Graphics.EnumerateMetafile(Metafile,PointF[],Graphics+EnumerateMetafileProc)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,PointF[],Graphics+EnumerateMetafileProc)
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Graphics.EnumerateMetafileProc)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,Rectangle,Graphics+EnumerateMetafileProc)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Rectangle,Graphics+EnumerateMetafileProc)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Rectangle,Graphics+EnumerateMetafileProc)
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,RectangleF,Graphics+EnumerateMetafileProc)
  nameWithType: Graphics.EnumerateMetafile(Metafile,RectangleF,Graphics+EnumerateMetafileProc)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,RectangleF,Graphics+EnumerateMetafileProc)
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,Point,Graphics+EnumerateMetafileProc,IntPtr)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Point,Graphics+EnumerateMetafileProc,IntPtr)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Point,Graphics+EnumerateMetafileProc,IntPtr)
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,Point[],Graphics+EnumerateMetafileProc,IntPtr)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Point[],Graphics+EnumerateMetafileProc,IntPtr)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Point[],Graphics+EnumerateMetafileProc,IntPtr)
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,PointF,Graphics+EnumerateMetafileProc,IntPtr)
  nameWithType: Graphics.EnumerateMetafile(Metafile,PointF,Graphics+EnumerateMetafileProc,IntPtr)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,PointF,Graphics+EnumerateMetafileProc,IntPtr)
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,PointF[],Graphics+EnumerateMetafileProc,IntPtr)
  nameWithType: Graphics.EnumerateMetafile(Metafile,PointF[],Graphics+EnumerateMetafileProc,IntPtr)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,PointF[],Graphics+EnumerateMetafileProc,IntPtr)
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,Rectangle,Graphics+EnumerateMetafileProc,IntPtr)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Rectangle,Graphics+EnumerateMetafileProc,IntPtr)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Rectangle,Graphics+EnumerateMetafileProc,IntPtr)
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,RectangleF,Graphics+EnumerateMetafileProc,IntPtr)
  nameWithType: Graphics.EnumerateMetafile(Metafile,RectangleF,Graphics+EnumerateMetafileProc,IntPtr)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,RectangleF,Graphics+EnumerateMetafileProc,IntPtr)
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,Point,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Point,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Point,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,Point,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Point,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Point,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc)
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,Point[],Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Point[],Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Point[],Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,Point[],Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Point[],Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Point[],Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc)
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,PointF,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  nameWithType: Graphics.EnumerateMetafile(Metafile,PointF,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,PointF,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,PointF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc)
  nameWithType: Graphics.EnumerateMetafile(Metafile,PointF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,PointF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc)
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,PointF[],Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  nameWithType: Graphics.EnumerateMetafile(Metafile,PointF[],Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,PointF[],Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,PointF[],RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc)
  nameWithType: Graphics.EnumerateMetafile(Metafile,PointF[],RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,PointF[],RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc)
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,Rectangle,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Rectangle,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Rectangle,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,Rectangle,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Rectangle,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Rectangle,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc)
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,RectangleF,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  nameWithType: Graphics.EnumerateMetafile(Metafile,RectangleF,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,RectangleF,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,RectangleF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc)
  nameWithType: Graphics.EnumerateMetafile(Metafile,RectangleF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,RectangleF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc)
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,Point,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Point,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Point,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,Point[],Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Point[],Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Point[],Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,PointF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
  nameWithType: Graphics.EnumerateMetafile(Metafile,PointF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,PointF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,PointF[],RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
  nameWithType: Graphics.EnumerateMetafile(Metafile,PointF[],RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,PointF[],RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,Rectangle,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Rectangle,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Rectangle,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,RectangleF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
  nameWithType: Graphics.EnumerateMetafile(Metafile,RectangleF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,RectangleF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr)
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,Point,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Point,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Point,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,Point[],Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Point[],Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Point[],Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,PointF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  nameWithType: Graphics.EnumerateMetafile(Metafile,PointF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,PointF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,PointF[],RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  nameWithType: Graphics.EnumerateMetafile(Metafile,PointF[],RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,PointF[],RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,Rectangle,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  nameWithType: Graphics.EnumerateMetafile(Metafile,Rectangle,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,Rectangle,Rectangle,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
- uid: System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile(Metafile,RectangleF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  nameWithType: Graphics.EnumerateMetafile(Metafile,RectangleF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
  fullName: System.Drawing.Graphics.EnumerateMetafile(Metafile,RectangleF,RectangleF,GraphicsUnit,Graphics+EnumerateMetafileProc,IntPtr,ImageAttributes)
- uid: System.Drawing.Graphics.ExcludeClip(System.Drawing.Rectangle)
  parent: System.Drawing.Graphics
  isExternal: false
  name: ExcludeClip(Rectangle)
  nameWithType: Graphics.ExcludeClip(Rectangle)
  fullName: System.Drawing.Graphics.ExcludeClip(Rectangle)
- uid: System.Drawing.Graphics.ExcludeClip(System.Drawing.Region)
  parent: System.Drawing.Graphics
  isExternal: false
  name: ExcludeClip(Region)
  nameWithType: Graphics.ExcludeClip(Region)
  fullName: System.Drawing.Graphics.ExcludeClip(Region)
- uid: System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[])
  parent: System.Drawing.Graphics
  isExternal: false
  name: FillClosedCurve(Brush,Point[])
  nameWithType: Graphics.FillClosedCurve(Brush,Point[])
  fullName: System.Drawing.Graphics.FillClosedCurve(Brush,Point[])
- uid: System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[])
  parent: System.Drawing.Graphics
  isExternal: false
  name: FillClosedCurve(Brush,PointF[])
  nameWithType: Graphics.FillClosedCurve(Brush,PointF[])
  fullName: System.Drawing.Graphics.FillClosedCurve(Brush,PointF[])
- uid: System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode)
  parent: System.Drawing.Graphics
  isExternal: false
  name: FillClosedCurve(Brush,Point[],FillMode)
  nameWithType: Graphics.FillClosedCurve(Brush,Point[],FillMode)
  fullName: System.Drawing.Graphics.FillClosedCurve(Brush,Point[],FillMode)
- uid: System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode)
  parent: System.Drawing.Graphics
  isExternal: false
  name: FillClosedCurve(Brush,PointF[],FillMode)
  nameWithType: Graphics.FillClosedCurve(Brush,PointF[],FillMode)
  fullName: System.Drawing.Graphics.FillClosedCurve(Brush,PointF[],FillMode)
- uid: System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode,System.Single)
  parent: System.Drawing.Graphics
  isExternal: false
  name: FillClosedCurve(Brush,Point[],FillMode,Single)
  nameWithType: Graphics.FillClosedCurve(Brush,Point[],FillMode,Single)
  fullName: System.Drawing.Graphics.FillClosedCurve(Brush,Point[],FillMode,Single)
- uid: System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode,System.Single)
  parent: System.Drawing.Graphics
  isExternal: false
  name: FillClosedCurve(Brush,PointF[],FillMode,Single)
  nameWithType: Graphics.FillClosedCurve(Brush,PointF[],FillMode,Single)
  fullName: System.Drawing.Graphics.FillClosedCurve(Brush,PointF[],FillMode,Single)
- uid: System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Drawing.Rectangle)
  parent: System.Drawing.Graphics
  isExternal: false
  name: FillEllipse(Brush,Rectangle)
  nameWithType: Graphics.FillEllipse(Brush,Rectangle)
  fullName: System.Drawing.Graphics.FillEllipse(Brush,Rectangle)
- uid: System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Drawing.RectangleF)
  parent: System.Drawing.Graphics
  isExternal: false
  name: FillEllipse(Brush,RectangleF)
  nameWithType: Graphics.FillEllipse(Brush,RectangleF)
  fullName: System.Drawing.Graphics.FillEllipse(Brush,RectangleF)
- uid: System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Drawing.Graphics
  isExternal: false
  name: FillEllipse(Brush,Int32,Int32,Int32,Int32)
  nameWithType: Graphics.FillEllipse(Brush,Int32,Int32,Int32,Int32)
  fullName: System.Drawing.Graphics.FillEllipse(Brush,Int32,Int32,Int32,Int32)
- uid: System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single)
  parent: System.Drawing.Graphics
  isExternal: false
  name: FillEllipse(Brush,Single,Single,Single,Single)
  nameWithType: Graphics.FillEllipse(Brush,Single,Single,Single,Single)
  fullName: System.Drawing.Graphics.FillEllipse(Brush,Single,Single,Single,Single)
- uid: System.Drawing.Graphics.FillPath(System.Drawing.Brush,System.Drawing.Drawing2D.GraphicsPath)
  parent: System.Drawing.Graphics
  isExternal: false
  name: FillPath(Brush,GraphicsPath)
  nameWithType: Graphics.FillPath(Brush,GraphicsPath)
  fullName: System.Drawing.Graphics.FillPath(Brush,GraphicsPath)
- uid: System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Drawing.Rectangle,System.Single,System.Single)
  parent: System.Drawing.Graphics
  isExternal: false
  name: FillPie(Brush,Rectangle,Single,Single)
  nameWithType: Graphics.FillPie(Brush,Rectangle,Single,Single)
  fullName: System.Drawing.Graphics.FillPie(Brush,Rectangle,Single,Single)
- uid: System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Drawing.Graphics
  isExternal: false
  name: FillPie(Brush,Int32,Int32,Int32,Int32,Int32,Int32)
  nameWithType: Graphics.FillPie(Brush,Int32,Int32,Int32,Int32,Int32,Int32)
  fullName: System.Drawing.Graphics.FillPie(Brush,Int32,Int32,Int32,Int32,Int32,Int32)
- uid: System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  parent: System.Drawing.Graphics
  isExternal: false
  name: FillPie(Brush,Single,Single,Single,Single,Single,Single)
  nameWithType: Graphics.FillPie(Brush,Single,Single,Single,Single,Single,Single)
  fullName: System.Drawing.Graphics.FillPie(Brush,Single,Single,Single,Single,Single,Single)
- uid: System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.Point[])
  parent: System.Drawing.Graphics
  isExternal: false
  name: FillPolygon(Brush,Point[])
  nameWithType: Graphics.FillPolygon(Brush,Point[])
  fullName: System.Drawing.Graphics.FillPolygon(Brush,Point[])
- uid: System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.PointF[])
  parent: System.Drawing.Graphics
  isExternal: false
  name: FillPolygon(Brush,PointF[])
  nameWithType: Graphics.FillPolygon(Brush,PointF[])
  fullName: System.Drawing.Graphics.FillPolygon(Brush,PointF[])
- uid: System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode)
  parent: System.Drawing.Graphics
  isExternal: false
  name: FillPolygon(Brush,Point[],FillMode)
  nameWithType: Graphics.FillPolygon(Brush,Point[],FillMode)
  fullName: System.Drawing.Graphics.FillPolygon(Brush,Point[],FillMode)
- uid: System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode)
  parent: System.Drawing.Graphics
  isExternal: false
  name: FillPolygon(Brush,PointF[],FillMode)
  nameWithType: Graphics.FillPolygon(Brush,PointF[],FillMode)
  fullName: System.Drawing.Graphics.FillPolygon(Brush,PointF[],FillMode)
- uid: System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Drawing.Rectangle)
  parent: System.Drawing.Graphics
  isExternal: false
  name: FillRectangle(Brush,Rectangle)
  nameWithType: Graphics.FillRectangle(Brush,Rectangle)
  fullName: System.Drawing.Graphics.FillRectangle(Brush,Rectangle)
- uid: System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Drawing.RectangleF)
  parent: System.Drawing.Graphics
  isExternal: false
  name: FillRectangle(Brush,RectangleF)
  nameWithType: Graphics.FillRectangle(Brush,RectangleF)
  fullName: System.Drawing.Graphics.FillRectangle(Brush,RectangleF)
- uid: System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Drawing.Graphics
  isExternal: false
  name: FillRectangle(Brush,Int32,Int32,Int32,Int32)
  nameWithType: Graphics.FillRectangle(Brush,Int32,Int32,Int32,Int32)
  fullName: System.Drawing.Graphics.FillRectangle(Brush,Int32,Int32,Int32,Int32)
- uid: System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single)
  parent: System.Drawing.Graphics
  isExternal: false
  name: FillRectangle(Brush,Single,Single,Single,Single)
  nameWithType: Graphics.FillRectangle(Brush,Single,Single,Single,Single)
  fullName: System.Drawing.Graphics.FillRectangle(Brush,Single,Single,Single,Single)
- uid: System.Drawing.Graphics.FillRectangles(System.Drawing.Brush,System.Drawing.Rectangle[])
  parent: System.Drawing.Graphics
  isExternal: false
  name: FillRectangles(Brush,Rectangle[])
  nameWithType: Graphics.FillRectangles(Brush,Rectangle[])
  fullName: System.Drawing.Graphics.FillRectangles(Brush,Rectangle[])
- uid: System.Drawing.Graphics.FillRectangles(System.Drawing.Brush,System.Drawing.RectangleF[])
  parent: System.Drawing.Graphics
  isExternal: false
  name: FillRectangles(Brush,RectangleF[])
  nameWithType: Graphics.FillRectangles(Brush,RectangleF[])
  fullName: System.Drawing.Graphics.FillRectangles(Brush,RectangleF[])
- uid: System.Drawing.Graphics.FillRegion(System.Drawing.Brush,System.Drawing.Region)
  parent: System.Drawing.Graphics
  isExternal: false
  name: FillRegion(Brush,Region)
  nameWithType: Graphics.FillRegion(Brush,Region)
  fullName: System.Drawing.Graphics.FillRegion(Brush,Region)
- uid: System.Drawing.Graphics.Finalize
  parent: System.Drawing.Graphics
  isExternal: false
  name: Finalize()
  nameWithType: Graphics.Finalize()
  fullName: System.Drawing.Graphics.Finalize()
- uid: System.Drawing.Graphics.Flush
  parent: System.Drawing.Graphics
  isExternal: false
  name: Flush()
  nameWithType: Graphics.Flush()
  fullName: System.Drawing.Graphics.Flush()
- uid: System.Drawing.Graphics.Flush(System.Drawing.Drawing2D.FlushIntention)
  parent: System.Drawing.Graphics
  isExternal: false
  name: Flush(FlushIntention)
  nameWithType: Graphics.Flush(FlushIntention)
  fullName: System.Drawing.Graphics.Flush(FlushIntention)
- uid: System.Drawing.Drawing2D.FlushIntention
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: FlushIntention
  nameWithType: FlushIntention
  fullName: System.Drawing.Drawing2D.FlushIntention
- uid: System.Drawing.Graphics.FromHdc(System.IntPtr)
  parent: System.Drawing.Graphics
  isExternal: false
  name: FromHdc(IntPtr)
  nameWithType: Graphics.FromHdc(IntPtr)
  fullName: System.Drawing.Graphics.FromHdc(IntPtr)
- uid: System.Drawing.Graphics
  parent: System.Drawing
  isExternal: false
  name: Graphics
  nameWithType: Graphics
  fullName: System.Drawing.Graphics
- uid: System.Drawing.Graphics.FromHdc(System.IntPtr,System.IntPtr)
  parent: System.Drawing.Graphics
  isExternal: false
  name: FromHdc(IntPtr,IntPtr)
  nameWithType: Graphics.FromHdc(IntPtr,IntPtr)
  fullName: System.Drawing.Graphics.FromHdc(IntPtr,IntPtr)
- uid: System.Drawing.Graphics.FromHdcInternal(System.IntPtr)
  parent: System.Drawing.Graphics
  isExternal: false
  name: FromHdcInternal(IntPtr)
  nameWithType: Graphics.FromHdcInternal(IntPtr)
  fullName: System.Drawing.Graphics.FromHdcInternal(IntPtr)
- uid: System.Drawing.Graphics.FromHwnd(System.IntPtr)
  parent: System.Drawing.Graphics
  isExternal: false
  name: FromHwnd(IntPtr)
  nameWithType: Graphics.FromHwnd(IntPtr)
  fullName: System.Drawing.Graphics.FromHwnd(IntPtr)
- uid: System.Drawing.Graphics.FromHwndInternal(System.IntPtr)
  parent: System.Drawing.Graphics
  isExternal: false
  name: FromHwndInternal(IntPtr)
  nameWithType: Graphics.FromHwndInternal(IntPtr)
  fullName: System.Drawing.Graphics.FromHwndInternal(IntPtr)
- uid: System.Drawing.Graphics.FromImage(System.Drawing.Image)
  parent: System.Drawing.Graphics
  isExternal: false
  name: FromImage(Image)
  nameWithType: Graphics.FromImage(Image)
  fullName: System.Drawing.Graphics.FromImage(Image)
- uid: System.Drawing.Graphics.GetContextInfo
  parent: System.Drawing.Graphics
  isExternal: false
  name: GetContextInfo()
  nameWithType: Graphics.GetContextInfo()
  fullName: System.Drawing.Graphics.GetContextInfo()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Drawing.Graphics.GetHalftonePalette
  parent: System.Drawing.Graphics
  isExternal: false
  name: GetHalftonePalette()
  nameWithType: Graphics.GetHalftonePalette()
  fullName: System.Drawing.Graphics.GetHalftonePalette()
- uid: System.Drawing.Graphics.GetHdc
  parent: System.Drawing.Graphics
  isExternal: false
  name: GetHdc()
  nameWithType: Graphics.GetHdc()
  fullName: System.Drawing.Graphics.GetHdc()
- uid: System.Drawing.Graphics.GetNearestColor(System.Drawing.Color)
  parent: System.Drawing.Graphics
  isExternal: false
  name: GetNearestColor(Color)
  nameWithType: Graphics.GetNearestColor(Color)
  fullName: System.Drawing.Graphics.GetNearestColor(Color)
- uid: System.Drawing.Graphics.InterpolationMode
  parent: System.Drawing.Graphics
  isExternal: false
  name: InterpolationMode
  nameWithType: Graphics.InterpolationMode
  fullName: System.Drawing.Graphics.InterpolationMode
- uid: System.Drawing.Drawing2D.InterpolationMode
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: InterpolationMode
  nameWithType: InterpolationMode
  fullName: System.Drawing.Drawing2D.InterpolationMode
- uid: System.Drawing.Graphics.IntersectClip(System.Drawing.Rectangle)
  parent: System.Drawing.Graphics
  isExternal: false
  name: IntersectClip(Rectangle)
  nameWithType: Graphics.IntersectClip(Rectangle)
  fullName: System.Drawing.Graphics.IntersectClip(Rectangle)
- uid: System.Drawing.Graphics.IntersectClip(System.Drawing.RectangleF)
  parent: System.Drawing.Graphics
  isExternal: false
  name: IntersectClip(RectangleF)
  nameWithType: Graphics.IntersectClip(RectangleF)
  fullName: System.Drawing.Graphics.IntersectClip(RectangleF)
- uid: System.Drawing.Graphics.IntersectClip(System.Drawing.Region)
  parent: System.Drawing.Graphics
  isExternal: false
  name: IntersectClip(Region)
  nameWithType: Graphics.IntersectClip(Region)
  fullName: System.Drawing.Graphics.IntersectClip(Region)
- uid: System.Drawing.Graphics.IsClipEmpty
  parent: System.Drawing.Graphics
  isExternal: false
  name: IsClipEmpty
  nameWithType: Graphics.IsClipEmpty
  fullName: System.Drawing.Graphics.IsClipEmpty
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Drawing.Graphics.IsVisible(System.Drawing.Point)
  parent: System.Drawing.Graphics
  isExternal: false
  name: IsVisible(Point)
  nameWithType: Graphics.IsVisible(Point)
  fullName: System.Drawing.Graphics.IsVisible(Point)
- uid: System.Drawing.Graphics.IsVisible(System.Drawing.PointF)
  parent: System.Drawing.Graphics
  isExternal: false
  name: IsVisible(PointF)
  nameWithType: Graphics.IsVisible(PointF)
  fullName: System.Drawing.Graphics.IsVisible(PointF)
- uid: System.Drawing.Graphics.IsVisible(System.Drawing.Rectangle)
  parent: System.Drawing.Graphics
  isExternal: false
  name: IsVisible(Rectangle)
  nameWithType: Graphics.IsVisible(Rectangle)
  fullName: System.Drawing.Graphics.IsVisible(Rectangle)
- uid: System.Drawing.Graphics.IsVisible(System.Drawing.RectangleF)
  parent: System.Drawing.Graphics
  isExternal: false
  name: IsVisible(RectangleF)
  nameWithType: Graphics.IsVisible(RectangleF)
  fullName: System.Drawing.Graphics.IsVisible(RectangleF)
- uid: System.Drawing.Graphics.IsVisible(System.Int32,System.Int32)
  parent: System.Drawing.Graphics
  isExternal: false
  name: IsVisible(Int32,Int32)
  nameWithType: Graphics.IsVisible(Int32,Int32)
  fullName: System.Drawing.Graphics.IsVisible(Int32,Int32)
- uid: System.Drawing.Graphics.IsVisible(System.Single,System.Single)
  parent: System.Drawing.Graphics
  isExternal: false
  name: IsVisible(Single,Single)
  nameWithType: Graphics.IsVisible(Single,Single)
  fullName: System.Drawing.Graphics.IsVisible(Single,Single)
- uid: System.Drawing.Graphics.IsVisible(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Drawing.Graphics
  isExternal: false
  name: IsVisible(Int32,Int32,Int32,Int32)
  nameWithType: Graphics.IsVisible(Int32,Int32,Int32,Int32)
  fullName: System.Drawing.Graphics.IsVisible(Int32,Int32,Int32,Int32)
- uid: System.Drawing.Graphics.IsVisible(System.Single,System.Single,System.Single,System.Single)
  parent: System.Drawing.Graphics
  isExternal: false
  name: IsVisible(Single,Single,Single,Single)
  nameWithType: Graphics.IsVisible(Single,Single,Single,Single)
  fullName: System.Drawing.Graphics.IsVisible(Single,Single,Single,Single)
- uid: System.Drawing.Graphics.IsVisibleClipEmpty
  parent: System.Drawing.Graphics
  isExternal: false
  name: IsVisibleClipEmpty
  nameWithType: Graphics.IsVisibleClipEmpty
  fullName: System.Drawing.Graphics.IsVisibleClipEmpty
- uid: System.Drawing.Graphics.MeasureCharacterRanges(System.String,System.Drawing.Font,System.Drawing.RectangleF,System.Drawing.StringFormat)
  parent: System.Drawing.Graphics
  isExternal: false
  name: MeasureCharacterRanges(String,Font,RectangleF,StringFormat)
  nameWithType: Graphics.MeasureCharacterRanges(String,Font,RectangleF,StringFormat)
  fullName: System.Drawing.Graphics.MeasureCharacterRanges(String,Font,RectangleF,StringFormat)
- uid: System.Drawing.Region[]
  parent: System.Drawing
  isExternal: false
  name: Region
  nameWithType: Region
  fullName: System.Drawing.Region[]
  spec.csharp:
  - uid: System.Drawing.Region
    name: Region
    nameWithType: Region
    fullName: Region[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font)
  parent: System.Drawing.Graphics
  isExternal: false
  name: MeasureString(String,Font)
  nameWithType: Graphics.MeasureString(String,Font)
  fullName: System.Drawing.Graphics.MeasureString(String,Font)
- uid: System.Drawing.SizeF
  parent: System.Drawing
  isExternal: false
  name: SizeF
  nameWithType: SizeF
  fullName: System.Drawing.SizeF
- uid: System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF)
  parent: System.Drawing.Graphics
  isExternal: false
  name: MeasureString(String,Font,SizeF)
  nameWithType: Graphics.MeasureString(String,Font,SizeF)
  fullName: System.Drawing.Graphics.MeasureString(String,Font,SizeF)
- uid: System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Int32)
  parent: System.Drawing.Graphics
  isExternal: false
  name: MeasureString(String,Font,Int32)
  nameWithType: Graphics.MeasureString(String,Font,Int32)
  fullName: System.Drawing.Graphics.MeasureString(String,Font,Int32)
- uid: System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.PointF,System.Drawing.StringFormat)
  parent: System.Drawing.Graphics
  isExternal: false
  name: MeasureString(String,Font,PointF,StringFormat)
  nameWithType: Graphics.MeasureString(String,Font,PointF,StringFormat)
  fullName: System.Drawing.Graphics.MeasureString(String,Font,PointF,StringFormat)
- uid: System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat)
  parent: System.Drawing.Graphics
  isExternal: false
  name: MeasureString(String,Font,SizeF,StringFormat)
  nameWithType: Graphics.MeasureString(String,Font,SizeF,StringFormat)
  fullName: System.Drawing.Graphics.MeasureString(String,Font,SizeF,StringFormat)
- uid: System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Int32,System.Drawing.StringFormat)
  parent: System.Drawing.Graphics
  isExternal: false
  name: MeasureString(String,Font,Int32,StringFormat)
  nameWithType: Graphics.MeasureString(String,Font,Int32,StringFormat)
  fullName: System.Drawing.Graphics.MeasureString(String,Font,Int32,StringFormat)
- uid: System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat,System.Int32@,System.Int32@)
  parent: System.Drawing.Graphics
  isExternal: false
  name: MeasureString(String,Font,SizeF,StringFormat,Int32,Int32)
  nameWithType: Graphics.MeasureString(String,Font,SizeF,StringFormat,Int32,Int32)
  fullName: System.Drawing.Graphics.MeasureString(String,Font,SizeF,StringFormat,Int32,Int32)
- uid: System.Drawing.Graphics.MultiplyTransform(System.Drawing.Drawing2D.Matrix)
  parent: System.Drawing.Graphics
  isExternal: false
  name: MultiplyTransform(Matrix)
  nameWithType: Graphics.MultiplyTransform(Matrix)
  fullName: System.Drawing.Graphics.MultiplyTransform(Matrix)
- uid: System.Drawing.Drawing2D.Matrix
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: Matrix
  nameWithType: Matrix
  fullName: System.Drawing.Drawing2D.Matrix
- uid: System.Drawing.Graphics.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Graphics
  isExternal: false
  name: MultiplyTransform(Matrix,MatrixOrder)
  nameWithType: Graphics.MultiplyTransform(Matrix,MatrixOrder)
  fullName: System.Drawing.Graphics.MultiplyTransform(Matrix,MatrixOrder)
- uid: System.Drawing.Drawing2D.MatrixOrder
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: MatrixOrder
  nameWithType: MatrixOrder
  fullName: System.Drawing.Drawing2D.MatrixOrder
- uid: System.Drawing.Graphics.PageScale
  parent: System.Drawing.Graphics
  isExternal: false
  name: PageScale
  nameWithType: Graphics.PageScale
  fullName: System.Drawing.Graphics.PageScale
- uid: System.Drawing.Graphics.PageUnit
  parent: System.Drawing.Graphics
  isExternal: false
  name: PageUnit
  nameWithType: Graphics.PageUnit
  fullName: System.Drawing.Graphics.PageUnit
- uid: System.Drawing.Graphics.PixelOffsetMode
  parent: System.Drawing.Graphics
  isExternal: false
  name: PixelOffsetMode
  nameWithType: Graphics.PixelOffsetMode
  fullName: System.Drawing.Graphics.PixelOffsetMode
- uid: System.Drawing.Drawing2D.PixelOffsetMode
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: PixelOffsetMode
  nameWithType: PixelOffsetMode
  fullName: System.Drawing.Drawing2D.PixelOffsetMode
- uid: System.Drawing.Graphics.ReleaseHdc
  parent: System.Drawing.Graphics
  isExternal: false
  name: ReleaseHdc()
  nameWithType: Graphics.ReleaseHdc()
  fullName: System.Drawing.Graphics.ReleaseHdc()
- uid: System.Drawing.Graphics.ReleaseHdc(System.IntPtr)
  parent: System.Drawing.Graphics
  isExternal: false
  name: ReleaseHdc(IntPtr)
  nameWithType: Graphics.ReleaseHdc(IntPtr)
  fullName: System.Drawing.Graphics.ReleaseHdc(IntPtr)
- uid: System.Drawing.Graphics.ReleaseHdcInternal(System.IntPtr)
  parent: System.Drawing.Graphics
  isExternal: false
  name: ReleaseHdcInternal(IntPtr)
  nameWithType: Graphics.ReleaseHdcInternal(IntPtr)
  fullName: System.Drawing.Graphics.ReleaseHdcInternal(IntPtr)
- uid: System.Drawing.Graphics.RenderingOrigin
  parent: System.Drawing.Graphics
  isExternal: false
  name: RenderingOrigin
  nameWithType: Graphics.RenderingOrigin
  fullName: System.Drawing.Graphics.RenderingOrigin
- uid: System.Drawing.Graphics.ResetClip
  parent: System.Drawing.Graphics
  isExternal: false
  name: ResetClip()
  nameWithType: Graphics.ResetClip()
  fullName: System.Drawing.Graphics.ResetClip()
- uid: System.Drawing.Graphics.ResetTransform
  parent: System.Drawing.Graphics
  isExternal: false
  name: ResetTransform()
  nameWithType: Graphics.ResetTransform()
  fullName: System.Drawing.Graphics.ResetTransform()
- uid: System.Drawing.Graphics.Restore(System.Drawing.Drawing2D.GraphicsState)
  parent: System.Drawing.Graphics
  isExternal: false
  name: Restore(GraphicsState)
  nameWithType: Graphics.Restore(GraphicsState)
  fullName: System.Drawing.Graphics.Restore(GraphicsState)
- uid: System.Drawing.Drawing2D.GraphicsState
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: GraphicsState
  nameWithType: GraphicsState
  fullName: System.Drawing.Drawing2D.GraphicsState
- uid: System.Drawing.Graphics.RotateTransform(System.Single)
  parent: System.Drawing.Graphics
  isExternal: false
  name: RotateTransform(Single)
  nameWithType: Graphics.RotateTransform(Single)
  fullName: System.Drawing.Graphics.RotateTransform(Single)
- uid: System.Drawing.Graphics.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Graphics
  isExternal: false
  name: RotateTransform(Single,MatrixOrder)
  nameWithType: Graphics.RotateTransform(Single,MatrixOrder)
  fullName: System.Drawing.Graphics.RotateTransform(Single,MatrixOrder)
- uid: System.Drawing.Graphics.Save
  parent: System.Drawing.Graphics
  isExternal: false
  name: Save()
  nameWithType: Graphics.Save()
  fullName: System.Drawing.Graphics.Save()
- uid: System.Drawing.Graphics.ScaleTransform(System.Single,System.Single)
  parent: System.Drawing.Graphics
  isExternal: false
  name: ScaleTransform(Single,Single)
  nameWithType: Graphics.ScaleTransform(Single,Single)
  fullName: System.Drawing.Graphics.ScaleTransform(Single,Single)
- uid: System.Drawing.Graphics.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Graphics
  isExternal: false
  name: ScaleTransform(Single,Single,MatrixOrder)
  nameWithType: Graphics.ScaleTransform(Single,Single,MatrixOrder)
  fullName: System.Drawing.Graphics.ScaleTransform(Single,Single,MatrixOrder)
- uid: System.Drawing.Graphics.SetClip(System.Drawing.Drawing2D.GraphicsPath)
  parent: System.Drawing.Graphics
  isExternal: false
  name: SetClip(GraphicsPath)
  nameWithType: Graphics.SetClip(GraphicsPath)
  fullName: System.Drawing.Graphics.SetClip(GraphicsPath)
- uid: System.Drawing.Graphics.SetClip(System.Drawing.Graphics)
  parent: System.Drawing.Graphics
  isExternal: false
  name: SetClip(Graphics)
  nameWithType: Graphics.SetClip(Graphics)
  fullName: System.Drawing.Graphics.SetClip(Graphics)
- uid: System.Drawing.Graphics.SetClip(System.Drawing.Rectangle)
  parent: System.Drawing.Graphics
  isExternal: false
  name: SetClip(Rectangle)
  nameWithType: Graphics.SetClip(Rectangle)
  fullName: System.Drawing.Graphics.SetClip(Rectangle)
- uid: System.Drawing.Graphics.SetClip(System.Drawing.RectangleF)
  parent: System.Drawing.Graphics
  isExternal: false
  name: SetClip(RectangleF)
  nameWithType: Graphics.SetClip(RectangleF)
  fullName: System.Drawing.Graphics.SetClip(RectangleF)
- uid: System.Drawing.Graphics.SetClip(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.CombineMode)
  parent: System.Drawing.Graphics
  isExternal: false
  name: SetClip(GraphicsPath,CombineMode)
  nameWithType: Graphics.SetClip(GraphicsPath,CombineMode)
  fullName: System.Drawing.Graphics.SetClip(GraphicsPath,CombineMode)
- uid: System.Drawing.Drawing2D.CombineMode
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: CombineMode
  nameWithType: CombineMode
  fullName: System.Drawing.Drawing2D.CombineMode
- uid: System.Drawing.Graphics.SetClip(System.Drawing.Graphics,System.Drawing.Drawing2D.CombineMode)
  parent: System.Drawing.Graphics
  isExternal: false
  name: SetClip(Graphics,CombineMode)
  nameWithType: Graphics.SetClip(Graphics,CombineMode)
  fullName: System.Drawing.Graphics.SetClip(Graphics,CombineMode)
- uid: System.Drawing.Graphics.SetClip(System.Drawing.Rectangle,System.Drawing.Drawing2D.CombineMode)
  parent: System.Drawing.Graphics
  isExternal: false
  name: SetClip(Rectangle,CombineMode)
  nameWithType: Graphics.SetClip(Rectangle,CombineMode)
  fullName: System.Drawing.Graphics.SetClip(Rectangle,CombineMode)
- uid: System.Drawing.Graphics.SetClip(System.Drawing.RectangleF,System.Drawing.Drawing2D.CombineMode)
  parent: System.Drawing.Graphics
  isExternal: false
  name: SetClip(RectangleF,CombineMode)
  nameWithType: Graphics.SetClip(RectangleF,CombineMode)
  fullName: System.Drawing.Graphics.SetClip(RectangleF,CombineMode)
- uid: System.Drawing.Graphics.SetClip(System.Drawing.Region,System.Drawing.Drawing2D.CombineMode)
  parent: System.Drawing.Graphics
  isExternal: false
  name: SetClip(Region,CombineMode)
  nameWithType: Graphics.SetClip(Region,CombineMode)
  fullName: System.Drawing.Graphics.SetClip(Region,CombineMode)
- uid: System.Drawing.Graphics.SmoothingMode
  parent: System.Drawing.Graphics
  isExternal: false
  name: SmoothingMode
  nameWithType: Graphics.SmoothingMode
  fullName: System.Drawing.Graphics.SmoothingMode
- uid: System.Drawing.Drawing2D.SmoothingMode
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: SmoothingMode
  nameWithType: SmoothingMode
  fullName: System.Drawing.Drawing2D.SmoothingMode
- uid: System.Drawing.Graphics.TextContrast
  parent: System.Drawing.Graphics
  isExternal: false
  name: TextContrast
  nameWithType: Graphics.TextContrast
  fullName: System.Drawing.Graphics.TextContrast
- uid: System.Drawing.Graphics.TextRenderingHint
  parent: System.Drawing.Graphics
  isExternal: false
  name: TextRenderingHint
  nameWithType: Graphics.TextRenderingHint
  fullName: System.Drawing.Graphics.TextRenderingHint
- uid: System.Drawing.Text.TextRenderingHint
  parent: System.Drawing.Text
  isExternal: false
  name: TextRenderingHint
  nameWithType: TextRenderingHint
  fullName: System.Drawing.Text.TextRenderingHint
- uid: System.Drawing.Graphics.Transform
  parent: System.Drawing.Graphics
  isExternal: false
  name: Transform
  nameWithType: Graphics.Transform
  fullName: System.Drawing.Graphics.Transform
- uid: System.Drawing.Graphics.TransformPoints(System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Point[])
  parent: System.Drawing.Graphics
  isExternal: false
  name: TransformPoints(CoordinateSpace,CoordinateSpace,Point[])
  nameWithType: Graphics.TransformPoints(CoordinateSpace,CoordinateSpace,Point[])
  fullName: System.Drawing.Graphics.TransformPoints(CoordinateSpace,CoordinateSpace,Point[])
- uid: System.Drawing.Drawing2D.CoordinateSpace
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: CoordinateSpace
  nameWithType: CoordinateSpace
  fullName: System.Drawing.Drawing2D.CoordinateSpace
- uid: System.Drawing.Graphics.TransformPoints(System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.PointF[])
  parent: System.Drawing.Graphics
  isExternal: false
  name: TransformPoints(CoordinateSpace,CoordinateSpace,PointF[])
  nameWithType: Graphics.TransformPoints(CoordinateSpace,CoordinateSpace,PointF[])
  fullName: System.Drawing.Graphics.TransformPoints(CoordinateSpace,CoordinateSpace,PointF[])
- uid: System.Drawing.Graphics.TranslateClip(System.Int32,System.Int32)
  parent: System.Drawing.Graphics
  isExternal: false
  name: TranslateClip(Int32,Int32)
  nameWithType: Graphics.TranslateClip(Int32,Int32)
  fullName: System.Drawing.Graphics.TranslateClip(Int32,Int32)
- uid: System.Drawing.Graphics.TranslateClip(System.Single,System.Single)
  parent: System.Drawing.Graphics
  isExternal: false
  name: TranslateClip(Single,Single)
  nameWithType: Graphics.TranslateClip(Single,Single)
  fullName: System.Drawing.Graphics.TranslateClip(Single,Single)
- uid: System.Drawing.Graphics.TranslateTransform(System.Single,System.Single)
  parent: System.Drawing.Graphics
  isExternal: false
  name: TranslateTransform(Single,Single)
  nameWithType: Graphics.TranslateTransform(Single,Single)
  fullName: System.Drawing.Graphics.TranslateTransform(Single,Single)
- uid: System.Drawing.Graphics.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Graphics
  isExternal: false
  name: TranslateTransform(Single,Single,MatrixOrder)
  nameWithType: Graphics.TranslateTransform(Single,Single,MatrixOrder)
  fullName: System.Drawing.Graphics.TranslateTransform(Single,Single,MatrixOrder)
- uid: System.Drawing.Graphics.VisibleClipBounds
  parent: System.Drawing.Graphics
  isExternal: false
  name: VisibleClipBounds
  nameWithType: Graphics.VisibleClipBounds
  fullName: System.Drawing.Graphics.VisibleClipBounds
- uid: System.Drawing.Graphics.AddMetafileComment*
  parent: System.Drawing.Graphics
  isExternal: false
  name: AddMetafileComment
  nameWithType: Graphics.AddMetafileComment
- uid: System.Drawing.Graphics.BeginContainer*
  parent: System.Drawing.Graphics
  isExternal: false
  name: BeginContainer
  nameWithType: Graphics.BeginContainer
- uid: System.Drawing.Graphics.Clear*
  parent: System.Drawing.Graphics
  isExternal: false
  name: Clear
  nameWithType: Graphics.Clear
- uid: System.Drawing.Graphics.Clip*
  parent: System.Drawing.Graphics
  isExternal: false
  name: Clip
  nameWithType: Graphics.Clip
- uid: System.Drawing.Graphics.ClipBounds*
  parent: System.Drawing.Graphics
  isExternal: false
  name: ClipBounds
  nameWithType: Graphics.ClipBounds
- uid: System.Drawing.Graphics.CompositingMode*
  parent: System.Drawing.Graphics
  isExternal: false
  name: CompositingMode
  nameWithType: Graphics.CompositingMode
- uid: System.Drawing.Graphics.CompositingQuality*
  parent: System.Drawing.Graphics
  isExternal: false
  name: CompositingQuality
  nameWithType: Graphics.CompositingQuality
- uid: System.Drawing.Graphics.CopyFromScreen*
  parent: System.Drawing.Graphics
  isExternal: false
  name: CopyFromScreen
  nameWithType: Graphics.CopyFromScreen
- uid: System.Drawing.Graphics.Dispose*
  parent: System.Drawing.Graphics
  isExternal: false
  name: Dispose
  nameWithType: Graphics.Dispose
- uid: System.Drawing.Graphics.DpiX*
  parent: System.Drawing.Graphics
  isExternal: false
  name: DpiX
  nameWithType: Graphics.DpiX
- uid: System.Drawing.Graphics.DpiY*
  parent: System.Drawing.Graphics
  isExternal: false
  name: DpiY
  nameWithType: Graphics.DpiY
- uid: System.Drawing.Graphics.DrawArc*
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawArc
  nameWithType: Graphics.DrawArc
- uid: System.Drawing.Graphics.DrawBezier*
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawBezier
  nameWithType: Graphics.DrawBezier
- uid: System.Drawing.Graphics.DrawBeziers*
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawBeziers
  nameWithType: Graphics.DrawBeziers
- uid: System.Drawing.Graphics.DrawClosedCurve*
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawClosedCurve
  nameWithType: Graphics.DrawClosedCurve
- uid: System.Drawing.Graphics.DrawCurve*
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawCurve
  nameWithType: Graphics.DrawCurve
- uid: System.Drawing.Graphics.DrawEllipse*
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawEllipse
  nameWithType: Graphics.DrawEllipse
- uid: System.Drawing.Graphics.DrawIcon*
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawIcon
  nameWithType: Graphics.DrawIcon
- uid: System.Drawing.Graphics.DrawIconUnstretched*
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawIconUnstretched
  nameWithType: Graphics.DrawIconUnstretched
- uid: System.Drawing.Graphics.DrawImage*
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImage
  nameWithType: Graphics.DrawImage
- uid: System.Drawing.Graphics.DrawImageUnscaled*
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImageUnscaled
  nameWithType: Graphics.DrawImageUnscaled
- uid: System.Drawing.Graphics.DrawImageUnscaledAndClipped*
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawImageUnscaledAndClipped
  nameWithType: Graphics.DrawImageUnscaledAndClipped
- uid: System.Drawing.Graphics.DrawLine*
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawLine
  nameWithType: Graphics.DrawLine
- uid: System.Drawing.Graphics.DrawLines*
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawLines
  nameWithType: Graphics.DrawLines
- uid: System.Drawing.Graphics.DrawPath*
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawPath
  nameWithType: Graphics.DrawPath
- uid: System.Drawing.Graphics.DrawPie*
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawPie
  nameWithType: Graphics.DrawPie
- uid: System.Drawing.Graphics.DrawPolygon*
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawPolygon
  nameWithType: Graphics.DrawPolygon
- uid: System.Drawing.Graphics.DrawRectangle*
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawRectangle
  nameWithType: Graphics.DrawRectangle
- uid: System.Drawing.Graphics.DrawRectangles*
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawRectangles
  nameWithType: Graphics.DrawRectangles
- uid: System.Drawing.Graphics.DrawString*
  parent: System.Drawing.Graphics
  isExternal: false
  name: DrawString
  nameWithType: Graphics.DrawString
- uid: System.Drawing.Graphics.EndContainer*
  parent: System.Drawing.Graphics
  isExternal: false
  name: EndContainer
  nameWithType: Graphics.EndContainer
- uid: System.Drawing.Graphics.EnumerateMetafile*
  parent: System.Drawing.Graphics
  isExternal: false
  name: EnumerateMetafile
  nameWithType: Graphics.EnumerateMetafile
- uid: System.Drawing.Graphics.ExcludeClip*
  parent: System.Drawing.Graphics
  isExternal: false
  name: ExcludeClip
  nameWithType: Graphics.ExcludeClip
- uid: System.Drawing.Graphics.FillClosedCurve*
  parent: System.Drawing.Graphics
  isExternal: false
  name: FillClosedCurve
  nameWithType: Graphics.FillClosedCurve
- uid: System.Drawing.Graphics.FillEllipse*
  parent: System.Drawing.Graphics
  isExternal: false
  name: FillEllipse
  nameWithType: Graphics.FillEllipse
- uid: System.Drawing.Graphics.FillPath*
  parent: System.Drawing.Graphics
  isExternal: false
  name: FillPath
  nameWithType: Graphics.FillPath
- uid: System.Drawing.Graphics.FillPie*
  parent: System.Drawing.Graphics
  isExternal: false
  name: FillPie
  nameWithType: Graphics.FillPie
- uid: System.Drawing.Graphics.FillPolygon*
  parent: System.Drawing.Graphics
  isExternal: false
  name: FillPolygon
  nameWithType: Graphics.FillPolygon
- uid: System.Drawing.Graphics.FillRectangle*
  parent: System.Drawing.Graphics
  isExternal: false
  name: FillRectangle
  nameWithType: Graphics.FillRectangle
- uid: System.Drawing.Graphics.FillRectangles*
  parent: System.Drawing.Graphics
  isExternal: false
  name: FillRectangles
  nameWithType: Graphics.FillRectangles
- uid: System.Drawing.Graphics.FillRegion*
  parent: System.Drawing.Graphics
  isExternal: false
  name: FillRegion
  nameWithType: Graphics.FillRegion
- uid: System.Drawing.Graphics.Finalize*
  parent: System.Drawing.Graphics
  isExternal: false
  name: Finalize
  nameWithType: Graphics.Finalize
- uid: System.Drawing.Graphics.Flush*
  parent: System.Drawing.Graphics
  isExternal: false
  name: Flush
  nameWithType: Graphics.Flush
- uid: System.Drawing.Graphics.FromHdc*
  parent: System.Drawing.Graphics
  isExternal: false
  name: FromHdc
  nameWithType: Graphics.FromHdc
- uid: System.Drawing.Graphics.FromHdcInternal*
  parent: System.Drawing.Graphics
  isExternal: false
  name: FromHdcInternal
  nameWithType: Graphics.FromHdcInternal
- uid: System.Drawing.Graphics.FromHwnd*
  parent: System.Drawing.Graphics
  isExternal: false
  name: FromHwnd
  nameWithType: Graphics.FromHwnd
- uid: System.Drawing.Graphics.FromHwndInternal*
  parent: System.Drawing.Graphics
  isExternal: false
  name: FromHwndInternal
  nameWithType: Graphics.FromHwndInternal
- uid: System.Drawing.Graphics.FromImage*
  parent: System.Drawing.Graphics
  isExternal: false
  name: FromImage
  nameWithType: Graphics.FromImage
- uid: System.Drawing.Graphics.GetContextInfo*
  parent: System.Drawing.Graphics
  isExternal: false
  name: GetContextInfo
  nameWithType: Graphics.GetContextInfo
- uid: System.Drawing.Graphics.GetHalftonePalette*
  parent: System.Drawing.Graphics
  isExternal: false
  name: GetHalftonePalette
  nameWithType: Graphics.GetHalftonePalette
- uid: System.Drawing.Graphics.GetHdc*
  parent: System.Drawing.Graphics
  isExternal: false
  name: GetHdc
  nameWithType: Graphics.GetHdc
- uid: System.Drawing.Graphics.GetNearestColor*
  parent: System.Drawing.Graphics
  isExternal: false
  name: GetNearestColor
  nameWithType: Graphics.GetNearestColor
- uid: System.Drawing.Graphics.InterpolationMode*
  parent: System.Drawing.Graphics
  isExternal: false
  name: InterpolationMode
  nameWithType: Graphics.InterpolationMode
- uid: System.Drawing.Graphics.IntersectClip*
  parent: System.Drawing.Graphics
  isExternal: false
  name: IntersectClip
  nameWithType: Graphics.IntersectClip
- uid: System.Drawing.Graphics.IsClipEmpty*
  parent: System.Drawing.Graphics
  isExternal: false
  name: IsClipEmpty
  nameWithType: Graphics.IsClipEmpty
- uid: System.Drawing.Graphics.IsVisible*
  parent: System.Drawing.Graphics
  isExternal: false
  name: IsVisible
  nameWithType: Graphics.IsVisible
- uid: System.Drawing.Graphics.IsVisibleClipEmpty*
  parent: System.Drawing.Graphics
  isExternal: false
  name: IsVisibleClipEmpty
  nameWithType: Graphics.IsVisibleClipEmpty
- uid: System.Drawing.Graphics.MeasureCharacterRanges*
  parent: System.Drawing.Graphics
  isExternal: false
  name: MeasureCharacterRanges
  nameWithType: Graphics.MeasureCharacterRanges
- uid: System.Drawing.Graphics.MeasureString*
  parent: System.Drawing.Graphics
  isExternal: false
  name: MeasureString
  nameWithType: Graphics.MeasureString
- uid: System.Drawing.Graphics.MultiplyTransform*
  parent: System.Drawing.Graphics
  isExternal: false
  name: MultiplyTransform
  nameWithType: Graphics.MultiplyTransform
- uid: System.Drawing.Graphics.PageScale*
  parent: System.Drawing.Graphics
  isExternal: false
  name: PageScale
  nameWithType: Graphics.PageScale
- uid: System.Drawing.Graphics.PageUnit*
  parent: System.Drawing.Graphics
  isExternal: false
  name: PageUnit
  nameWithType: Graphics.PageUnit
- uid: System.Drawing.Graphics.PixelOffsetMode*
  parent: System.Drawing.Graphics
  isExternal: false
  name: PixelOffsetMode
  nameWithType: Graphics.PixelOffsetMode
- uid: System.Drawing.Graphics.ReleaseHdc*
  parent: System.Drawing.Graphics
  isExternal: false
  name: ReleaseHdc
  nameWithType: Graphics.ReleaseHdc
- uid: System.Drawing.Graphics.ReleaseHdcInternal*
  parent: System.Drawing.Graphics
  isExternal: false
  name: ReleaseHdcInternal
  nameWithType: Graphics.ReleaseHdcInternal
- uid: System.Drawing.Graphics.RenderingOrigin*
  parent: System.Drawing.Graphics
  isExternal: false
  name: RenderingOrigin
  nameWithType: Graphics.RenderingOrigin
- uid: System.Drawing.Graphics.ResetClip*
  parent: System.Drawing.Graphics
  isExternal: false
  name: ResetClip
  nameWithType: Graphics.ResetClip
- uid: System.Drawing.Graphics.ResetTransform*
  parent: System.Drawing.Graphics
  isExternal: false
  name: ResetTransform
  nameWithType: Graphics.ResetTransform
- uid: System.Drawing.Graphics.Restore*
  parent: System.Drawing.Graphics
  isExternal: false
  name: Restore
  nameWithType: Graphics.Restore
- uid: System.Drawing.Graphics.RotateTransform*
  parent: System.Drawing.Graphics
  isExternal: false
  name: RotateTransform
  nameWithType: Graphics.RotateTransform
- uid: System.Drawing.Graphics.Save*
  parent: System.Drawing.Graphics
  isExternal: false
  name: Save
  nameWithType: Graphics.Save
- uid: System.Drawing.Graphics.ScaleTransform*
  parent: System.Drawing.Graphics
  isExternal: false
  name: ScaleTransform
  nameWithType: Graphics.ScaleTransform
- uid: System.Drawing.Graphics.SetClip*
  parent: System.Drawing.Graphics
  isExternal: false
  name: SetClip
  nameWithType: Graphics.SetClip
- uid: System.Drawing.Graphics.SmoothingMode*
  parent: System.Drawing.Graphics
  isExternal: false
  name: SmoothingMode
  nameWithType: Graphics.SmoothingMode
- uid: System.Drawing.Graphics.TextContrast*
  parent: System.Drawing.Graphics
  isExternal: false
  name: TextContrast
  nameWithType: Graphics.TextContrast
- uid: System.Drawing.Graphics.TextRenderingHint*
  parent: System.Drawing.Graphics
  isExternal: false
  name: TextRenderingHint
  nameWithType: Graphics.TextRenderingHint
- uid: System.Drawing.Graphics.Transform*
  parent: System.Drawing.Graphics
  isExternal: false
  name: Transform
  nameWithType: Graphics.Transform
- uid: System.Drawing.Graphics.TransformPoints*
  parent: System.Drawing.Graphics
  isExternal: false
  name: TransformPoints
  nameWithType: Graphics.TransformPoints
- uid: System.Drawing.Graphics.TranslateClip*
  parent: System.Drawing.Graphics
  isExternal: false
  name: TranslateClip
  nameWithType: Graphics.TranslateClip
- uid: System.Drawing.Graphics.TranslateTransform*
  parent: System.Drawing.Graphics
  isExternal: false
  name: TranslateTransform
  nameWithType: Graphics.TranslateTransform
- uid: System.Drawing.Graphics.VisibleClipBounds*
  parent: System.Drawing.Graphics
  isExternal: false
  name: VisibleClipBounds
  nameWithType: Graphics.VisibleClipBounds
