### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.WebHttpBinding
  id: WebHttpBinding
  children:
  - System.ServiceModel.WebHttpBinding.#ctor
  - System.ServiceModel.WebHttpBinding.#ctor(System.ServiceModel.WebHttpSecurityMode)
  - System.ServiceModel.WebHttpBinding.#ctor(System.String)
  - System.ServiceModel.WebHttpBinding.AllowCookies
  - System.ServiceModel.WebHttpBinding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)
  - System.ServiceModel.WebHttpBinding.BypassProxyOnLocal
  - System.ServiceModel.WebHttpBinding.ContentTypeMapper
  - System.ServiceModel.WebHttpBinding.CreateBindingElements
  - System.ServiceModel.WebHttpBinding.CrossDomainScriptAccessEnabled
  - System.ServiceModel.WebHttpBinding.EnvelopeVersion
  - System.ServiceModel.WebHttpBinding.HostNameComparisonMode
  - System.ServiceModel.WebHttpBinding.MaxBufferPoolSize
  - System.ServiceModel.WebHttpBinding.MaxBufferSize
  - System.ServiceModel.WebHttpBinding.MaxReceivedMessageSize
  - System.ServiceModel.WebHttpBinding.ProxyAddress
  - System.ServiceModel.WebHttpBinding.ReaderQuotas
  - System.ServiceModel.WebHttpBinding.Scheme
  - System.ServiceModel.WebHttpBinding.Security
  - System.ServiceModel.WebHttpBinding.ShouldSerializeReaderQuotas
  - System.ServiceModel.WebHttpBinding.ShouldSerializeSecurity
  - System.ServiceModel.WebHttpBinding.ShouldSerializeWriteEncoding
  - System.ServiceModel.WebHttpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously
  - System.ServiceModel.WebHttpBinding.TransferMode
  - System.ServiceModel.WebHttpBinding.UseDefaultWebProxy
  - System.ServiceModel.WebHttpBinding.WriteEncoding
  langs:
  - csharp
  name: WebHttpBinding
  nameWithType: WebHttpBinding
  fullName: System.ServiceModel.WebHttpBinding
  type: Class
  summary: "에 대 한 끝점을 구성 하는 데 사용 되는 바인딩을 [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] SOAP 메시지 대신 HTTP 요청을 통해 노출 하는 웹 서비스입니다."
  remarks: "[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] 웹 프로그래밍 모델을 노출 하는 개발자를 수 있습니다. [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] 웹 서비스 &quot;plain old XML&quot;을 사용 하는 HTTP 요청을 통해 SOAP 기반 메시징 대신 메시징 (POX) 스타일입니다. HTTP 요청을 사용 하 여 서비스와 통신 하는 클라이언트에 대 한 서비스의 끝점이 <xref:System.ServiceModel.Description.WebHttpBehavior>연결 되어</xref:System.ServiceModel.Description.WebHttpBehavior> 있는 WebHttpBinding와 구성 해야 합니다. WCF 웹 프로그래밍 모델에서는 개별 서비스 작업 주석으로 첨부 됩니다 필요는 <xref:System.ServiceModel.Web.WebGetAttribute>또는 <xref:System.ServiceModel.Web.WebInvokeAttribute>특성.</xref:System.ServiceModel.Web.WebInvokeAttribute> </xref:System.ServiceModel.Web.WebGetAttribute> 이 작업을 호출 하 고 결과 반환 하는 데 사용 하는 메시지의 형식을 뿐만 아니라 서비스 작업에는 URI 및 HTTP 메서드에서 매핑을 정의 합니다. 지원 [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] ASP 및 배포에 대 한 합니다. AJAX 통합 둘 다 WCF 웹 프로그래밍 모델 위에 구축 됩니다."
  syntax:
    content: 'public class WebHttpBinding : System.ServiceModel.Channels.Binding, System.ServiceModel.Channels.IBindingRuntimePreferences'
  inheritance:
  - System.ServiceModel.Channels.Binding
  implements:
  - System.ServiceModel.Channels.IBindingRuntimePreferences
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.WebHttpBinding.#ctor
  id: '#ctor'
  parent: System.ServiceModel.WebHttpBinding
  langs:
  - csharp
  name: WebHttpBinding()
  nameWithType: WebHttpBinding.WebHttpBinding()
  fullName: System.ServiceModel.WebHttpBinding.WebHttpBinding()
  type: Constructor
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.ServiceModel.WebHttpBinding&quot;> </xref> 클래스입니다."
  remarks: "기본 보안 모드는 <xref:System.ServiceModel.WebHttpSecurityMode>, 보안이 사용 되도록 지정 합니다.</xref:System.ServiceModel.WebHttpSecurityMode>       이 바인딩으로 구성 된 끝점에 대 한 전송 수준 보안을 사용 하는 <xref:System.ServiceModel.WebHttpSecurityMode>값 매개 변수로 지정 되어야 합니다는 <xref:System.ServiceModel.WebHttpBinding.%23ctor%28System.ServiceModel.WebHttpSecurityMode%29>생성자.</xref:System.ServiceModel.WebHttpBinding.%23ctor%28System.ServiceModel.WebHttpSecurityMode%29> </xref:System.ServiceModel.WebHttpSecurityMode>       HTTPS 없이 HTTP 인증을 사용 하는 <xref:System.ServiceModel.WebHttpSecurityMode>값 매개 변수로 지정 되어야 합니다는 <xref:System.ServiceModel.WebHttpBinding.%23ctor%28System.ServiceModel.WebHttpSecurityMode%29>생성자.</xref:System.ServiceModel.WebHttpBinding.%23ctor%28System.ServiceModel.WebHttpSecurityMode%29> </xref:System.ServiceModel.WebHttpSecurityMode>       값 <xref:System.ServiceModel.WebHttpSecurityMode>바인딩 인스턴스가 만들어진 후 다시 설정할 수 없습니다.</xref:System.ServiceModel.WebHttpSecurityMode>"
  syntax:
    content: public WebHttpBinding ();
    parameters: []
  overload: System.ServiceModel.WebHttpBinding.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WebHttpBinding.#ctor(System.ServiceModel.WebHttpSecurityMode)
  id: '#ctor(System.ServiceModel.WebHttpSecurityMode)'
  parent: System.ServiceModel.WebHttpBinding
  langs:
  - csharp
  name: WebHttpBinding(WebHttpSecurityMode)
  nameWithType: WebHttpBinding.WebHttpBinding(WebHttpSecurityMode)
  fullName: System.ServiceModel.WebHttpBinding.WebHttpBinding(WebHttpSecurityMode)
  type: Constructor
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.ServiceModel.WebHttpBinding&quot;> </xref> 명시적으로 지정 된 바인딩에서 사용 되는 보안 형식 사용 합니다."
  remarks: "이 바인딩으로 구성 된 끝점에 대 한 전송 수준 보안을 사용 하 여 <xref:System.ServiceModel.WebHttpSecurityMode>WebHttpBinding 생성자의 매개 변수로 값을 지정 해야 합니다.</xref:System.ServiceModel.WebHttpSecurityMode>       HTTPS 없이 HTTP 인증을 사용 하 여 <xref:System.ServiceModel.WebHttpSecurityMode>WebHttpBinding 생성자의 매개 변수로 값을 지정 해야 합니다.</xref:System.ServiceModel.WebHttpSecurityMode>       값 <xref:System.ServiceModel.WebHttpSecurityMode>바인딩 인스턴스가 만들어진 후 다시 설정할 수 없습니다.</xref:System.ServiceModel.WebHttpSecurityMode>"
  syntax:
    content: public WebHttpBinding (System.ServiceModel.WebHttpSecurityMode securityMode);
    parameters:
    - id: securityMode
      type: System.ServiceModel.WebHttpSecurityMode
      description: "값 <xref href=&quot;System.ServiceModel.WebHttpSecurityMode&quot;> </xref> HTTP 요청을 수신 하도록 서비스 끝점을 구성 하는 데 사용 되는 보안 형식을 지정 하 합니다."
  overload: System.ServiceModel.WebHttpBinding.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> securityMode </code> 지정 된 파일은 올바른 <xref href=&quot;System.ServiceModel.WebHttpSecurityMode&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.ServiceModel.WebHttpBinding.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.ServiceModel.WebHttpBinding
  langs:
  - csharp
  name: WebHttpBinding(String)
  nameWithType: WebHttpBinding.WebHttpBinding(String)
  fullName: System.ServiceModel.WebHttpBinding.WebHttpBinding(String)
  type: Constructor
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.ServiceModel.WebHttpBinding&quot;> </xref> 구성 이름으로 지정 된 바인딩 사용 하 여 클래스입니다."
  syntax:
    content: public WebHttpBinding (string configurationName);
    parameters:
    - id: configurationName
      type: System.String
      description: "에 대 한 바인딩 구성 이름은 <xref href=&quot;System.ServiceModel.Configuration.WebHttpBindingElement&quot;> </xref>합니다."
  overload: System.ServiceModel.WebHttpBinding.#ctor*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "이름으로 바인딩 요소 <code> configurationName </code> 찾을 수 없습니다."
  platform:
  - net462
- uid: System.ServiceModel.WebHttpBinding.AllowCookies
  id: AllowCookies
  parent: System.ServiceModel.WebHttpBinding
  langs:
  - csharp
  name: AllowCookies
  nameWithType: WebHttpBinding.AllowCookies
  fullName: System.ServiceModel.WebHttpBinding.AllowCookies
  type: Property
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel
  summary: "클라이언트가 쿠키를 수락 하 고이 이후 요청에서 전파할지 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "이 속성은 HTTP 헤더에 포함 된 쿠키를 사용 하기 위한 편의 위해 제공 됩니다. 클라이언트에서이 속성을 설정 하 여 쿠키를 허용할 하는 경우 `true`, 서버에서 반환 된 쿠키가 해당 서비스에 모든 이후의 클라이언트 요청에 자동으로 복사 됩니다."
  syntax:
    content: public bool AllowCookies { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>쿠키 허용 되는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.ServiceModel.WebHttpBinding.AllowCookies*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WebHttpBinding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)
  id: BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)
  parent: System.ServiceModel.WebHttpBinding
  langs:
  - csharp
  name: BuildChannelFactory(BindingParameterCollection)
  nameWithType: WebHttpBinding.BuildChannelFactory(BindingParameterCollection)
  fullName: System.ServiceModel.WebHttpBinding.BuildChannelFactory(BindingParameterCollection)
  type: Method
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel
  syntax:
    content: public override System.ServiceModel.Channels.IChannelFactory<TChannel> BuildChannelFactory<TChannel> (System.ServiceModel.Channels.BindingParameterCollection parameters);
    parameters:
    - id: parameters
      type: System.ServiceModel.Channels.BindingParameterCollection
      description: "추가할 수 있습니다."
    return:
      type: System.ServiceModel.Channels.IChannelFactory{TChannel}
      description: "추가할 수 있습니다."
  overload: System.ServiceModel.WebHttpBinding.BuildChannelFactory<TChannel>*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WebHttpBinding.BypassProxyOnLocal
  id: BypassProxyOnLocal
  parent: System.ServiceModel.WebHttpBinding
  langs:
  - csharp
  name: BypassProxyOnLocal
  nameWithType: WebHttpBinding.BypassProxyOnLocal
  fullName: System.ServiceModel.WebHttpBinding.BypassProxyOnLocal
  type: Property
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel
  summary: "로컬 주소에 프록시 서버를 무시할지 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "인터넷 리소스는 로컬 주소가 로컬 리소스입니다. 로컬 주소는 동일한 컴퓨터, 로컬 LAN 또는 인트라넷에 있고으로 식별 됩니다, Uri &quot;http://webserver/&quot; 및 &quot;http://localhost/&quot;와 같이 마침표 (.) 부족입니다.       BypassProxyOnLocal 설정 속성 결정으로 구성 된 끝점이 여부는 <xref:System.ServiceModel.WebHttpBinding>로컬 리소스에 액세스할 때 프록시 서버를 사용 합니다.</xref:System.ServiceModel.WebHttpBinding>       BypassProxyOnLocal 이면 `true`, 로컬 인터넷 리소스에는 요청이 프록시 서버를 사용 하지 않습니다. BypassProxyOnLocal 다음과 같은 경우 `false`, 모든 인터넷 요청이 프록시 서버를 통해 이루어집니다."
  syntax:
    content: public bool BypassProxyOnLocal { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>로컬 주소;에 대해 프록시 서버를 무시 하려면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.ServiceModel.WebHttpBinding.BypassProxyOnLocal*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WebHttpBinding.ContentTypeMapper
  id: ContentTypeMapper
  parent: System.ServiceModel.WebHttpBinding
  langs:
  - csharp
  name: ContentTypeMapper
  nameWithType: WebHttpBinding.ContentTypeMapper
  fullName: System.ServiceModel.WebHttpBinding.ContentTypeMapper
  type: Property
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel
  summary: "콘텐츠 형식 매퍼를 가져오거나 설정 합니다."
  syntax:
    content: public System.ServiceModel.Channels.WebContentTypeMapper ContentTypeMapper { get; set; }
    return:
      type: System.ServiceModel.Channels.WebContentTypeMapper
      description: "콘텐츠 형식 매퍼입니다."
  overload: System.ServiceModel.WebHttpBinding.ContentTypeMapper*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WebHttpBinding.CreateBindingElements
  id: CreateBindingElements
  parent: System.ServiceModel.WebHttpBinding
  langs:
  - csharp
  name: CreateBindingElements()
  nameWithType: WebHttpBinding.CreateBindingElements()
  fullName: System.ServiceModel.WebHttpBinding.CreateBindingElements()
  type: Method
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel
  summary: "현재 바인딩에 포함 된 요소를 바인딩의 정렬된 된 컬렉션을 반환 합니다."
  remarks: "바인딩 요소의 순서가 중요 합니다. 프로토콜 및 전송 채널이 생성 되 고 스택 순서를 반영 합니다."
  syntax:
    content: public override System.ServiceModel.Channels.BindingElementCollection CreateBindingElements ();
    parameters: []
    return:
      type: System.ServiceModel.Channels.BindingElementCollection
      description: "A <xref:System.ServiceModel.Channels.BindingElementCollection>를 포함 하는 <xref:System.ServiceModel.Channels.BindingElement>바인딩에 대 한 개체입니다.</xref:System.ServiceModel.Channels.BindingElement> </xref:System.ServiceModel.Channels.BindingElementCollection>"
  overload: System.ServiceModel.WebHttpBinding.CreateBindingElements*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WebHttpBinding.CrossDomainScriptAccessEnabled
  id: CrossDomainScriptAccessEnabled
  parent: System.ServiceModel.WebHttpBinding
  langs:
  - csharp
  name: CrossDomainScriptAccessEnabled
  nameWithType: WebHttpBinding.CrossDomainScriptAccessEnabled
  fullName: System.ServiceModel.WebHttpBinding.CrossDomainScriptAccessEnabled
  type: Property
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel
  summary: "도메인 간 스크립트 액세스를 사용 하는지를 결정 하는 값을 가져오거나 설정 합니다."
  syntax:
    content: public bool CrossDomainScriptAccessEnabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>도메인 간 스크립팅은 사용할 수 있습니다. 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.ServiceModel.WebHttpBinding.CrossDomainScriptAccessEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WebHttpBinding.EnvelopeVersion
  id: EnvelopeVersion
  parent: System.ServiceModel.WebHttpBinding
  langs:
  - csharp
  name: EnvelopeVersion
  nameWithType: WebHttpBinding.EnvelopeVersion
  fullName: System.ServiceModel.WebHttpBinding.EnvelopeVersion
  type: Property
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel
  summary: "HTTP 요청을 수신 하도록이 바인딩에서 구성한 끝점에서 사용 되는 봉투 버전을 가져옵니다."
  syntax:
    content: public System.ServiceModel.EnvelopeVersion EnvelopeVersion { get; }
    return:
      type: System.ServiceModel.EnvelopeVersion
      description: "<xref:System.ServiceModel.EnvelopeVersion>와 <xref:System.ServiceModel.EnvelopeVersion.None*>HTTP 요청 수신을 위해이 바인딩으로 구성 된 끝점 사용 되는 속성.</xref:System.ServiceModel.EnvelopeVersion.None*> </xref:System.ServiceModel.EnvelopeVersion>"
  overload: System.ServiceModel.WebHttpBinding.EnvelopeVersion*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WebHttpBinding.HostNameComparisonMode
  id: HostNameComparisonMode
  parent: System.ServiceModel.WebHttpBinding
  langs:
  - csharp
  name: HostNameComparisonMode
  nameWithType: WebHttpBinding.HostNameComparisonMode
  fullName: System.ServiceModel.WebHttpBinding.HostNameComparisonMode
  type: Property
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel
  summary: "URI 비교 시 서비스에 연결할 호스트 이름이 사용 되는지 여부를 나타내는 값을 가져오거나 설정 합니다."
  syntax:
    content: public System.ServiceModel.HostNameComparisonMode HostNameComparisonMode { get; set; }
    return:
      type: System.ServiceModel.HostNameComparisonMode
      description: "<xref:System.ServiceModel.Configuration.WSDualHttpBindingElement.HostNameComparisonMode*>URI 비교 시 서비스에 연결할 호스트 이름이 사용 되는지 여부를 나타내는 값입니다.</xref:System.ServiceModel.Configuration.WSDualHttpBindingElement.HostNameComparisonMode*> 기본값은 <xref href=&quot;System.ServiceModel.HostNameComparisonMode&quot;> </xref>, 시 호스트 이름 무시 하는 합니다."
  overload: System.ServiceModel.WebHttpBinding.HostNameComparisonMode*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "값 집합이 유효 하지 않거나 <xref:System.ServiceModel.Configuration.WSDualHttpBindingElement.HostNameComparisonMode*>값.</xref:System.ServiceModel.Configuration.WSDualHttpBindingElement.HostNameComparisonMode*>"
  platform:
  - net462
- uid: System.ServiceModel.WebHttpBinding.MaxBufferPoolSize
  id: MaxBufferPoolSize
  parent: System.ServiceModel.WebHttpBinding
  langs:
  - csharp
  name: MaxBufferPoolSize
  nameWithType: WebHttpBinding.MaxBufferPoolSize
  fullName: System.ServiceModel.WebHttpBinding.MaxBufferPoolSize
  type: Property
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel
  summary: "할당 된 바이트 단위로이 바인딩을 사용 하는 끝점에 필요한 버퍼를 관리 하는 버퍼 관리자에 대 한 메모리의 최대 크기를 가져오거나 설정 합니다."
  remarks: "<xref:System.ServiceModel.Channels.BufferManager>버퍼 풀으로 버퍼 사용 비용을 최소화 하려고 시도 합니다.</xref:System.ServiceModel.Channels.BufferManager> 버퍼는 메시지가 채널에서 나올 때 서비스에서 메시지를 처리 해야 합니다. 버퍼 풀 메시지 로드를 처리 하기에 충분 한 메모리가 없는 경우는 <xref:System.ServiceModel.Channels.BufferManager>가비지 컬렉션 오버 헤드가 증가 하는 CLR 힙으로부터 추가 메모리를 할당 해야 합니다.</xref:System.ServiceModel.Channels.BufferManager> CLR 가비지 힙으로부터 다량 할당이 이루어지는 버퍼 풀 크기가 너무 작습니다. 있고 성능이 MaxBufferPoolSize 제한을 늘려 더 크게 할당 향상 될 수 있는지를 나타냅니다."
  syntax:
    content: public long MaxBufferPoolSize { get; set; }
    return:
      type: System.Int64
      description: "이 바인딩으로 구성 된 끝점에서 사용 되는 버퍼 풀에 대 한 바이트의 최대 크기입니다. 기본값은 65, 536 바이트입니다."
  overload: System.ServiceModel.WebHttpBinding.MaxBufferPoolSize*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WebHttpBinding.MaxBufferSize
  id: MaxBufferSize
  parent: System.ServiceModel.WebHttpBinding
  langs:
  - csharp
  name: MaxBufferSize
  nameWithType: WebHttpBinding.MaxBufferSize
  fullName: System.ServiceModel.WebHttpBinding.MaxBufferSize
  type: Property
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel
  summary: "메모리의 최대 크기를 사용 하기 위해 채널에서 메시지를 받는 메시지 버퍼 관리자가 할당 되는 바이트 단위로 설정 하거나 가져옵니다."
  remarks: "<xref:System.ServiceModel.Channels.BufferManager>버퍼 풀을 사용 하 여 버퍼 사용 비용을 최소화 합니다.</xref:System.ServiceModel.Channels.BufferManager> 버퍼는 메시지가 채널에서 나올 때 서비스에서 메시지를 처리 해야 합니다. 버퍼 풀 메시지 로드를 처리 하기에 충분 한 메모리가 없는 경우는 <xref:System.ServiceModel.Channels.BufferManager>가비지 컬렉션 오버 헤드가 증가 하는 CLR 힙으로부터 추가 메모리를 할당 해야 합니다.</xref:System.ServiceModel.Channels.BufferManager> CLR 가비지 힙으로부터 광범위 한 할당은 버퍼 풀 크기가 너무 작으면 및를 늘려 더 크게 할당 성능을 향상 시킬 수 있는지 표시는 <xref:System.ServiceModel.BasicHttpBinding.MaxBufferPoolSize%2A>제한.</xref:System.ServiceModel.BasicHttpBinding.MaxBufferPoolSize%2A>"
  syntax:
    content: public int MaxBufferSize { get; set; }
    return:
      type: System.Int32
      description: "메시지 버퍼 관리자가 사용 하기 위해 사용할 수 있는 바이트 메모리의 최대 양입니다. 기본값은 524288 (0x80000) 바이트입니다."
  overload: System.ServiceModel.WebHttpBinding.MaxBufferSize*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "설정 값이&0; 보다 작은 경우"
  platform:
  - net462
- uid: System.ServiceModel.WebHttpBinding.MaxReceivedMessageSize
  id: MaxReceivedMessageSize
  parent: System.ServiceModel.WebHttpBinding
  langs:
  - csharp
  name: MaxReceivedMessageSize
  nameWithType: WebHttpBinding.MaxReceivedMessageSize
  fullName: System.ServiceModel.WebHttpBinding.MaxReceivedMessageSize
  type: Property
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel
  summary: "바인딩에서 처리할 수 있는 메시지를 바이트 단위로 최대 크기를 가져오거나 설정 합니다."
  remarks: "사용 하 여 서비스 통신 중에 받을 수 있는 메시지의 크기는 <xref:System.ServiceModel.WebHttpBinding>각 메시지에 대해 할당 된 메모리의 양에 의해 제한 됩니다.</xref:System.ServiceModel.WebHttpBinding> 이 메시지 크기는 서비스 거부 (dos) 공격에 대 한 노출을 제한 하는 데 사용 됩니다."
  syntax:
    content: public long MaxReceivedMessageSize { get; set; }
    return:
      type: System.Int64
      description: "바인딩에서 처리 하는 메시지를 바이트 단위로 최대 크기입니다. 기본값은 65, 536 바이트입니다."
  overload: System.ServiceModel.WebHttpBinding.MaxReceivedMessageSize*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "값이&0; 보다 작습니다."
  - type: System.ServiceModel.QuotaExceededException
    commentId: T:System.ServiceModel.QuotaExceededException
    description: "메시지 할당 된 최대 크기를 초과 합니다."
  platform:
  - net462
- uid: System.ServiceModel.WebHttpBinding.ProxyAddress
  id: ProxyAddress
  parent: System.ServiceModel.WebHttpBinding
  langs:
  - csharp
  name: ProxyAddress
  nameWithType: WebHttpBinding.ProxyAddress
  fullName: System.ServiceModel.WebHttpBinding.ProxyAddress
  type: Property
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel
  summary: "HTTP 프록시의 URI 주소를 가져오거나 설정 합니다."
  remarks: "경우는 <xref:System.ServiceModel.WebHttpBinding.UseDefaultWebProxy%2A>로 설정 된 `true`, / / ProxyAddress 값은 무시 됩니다.</xref:System.ServiceModel.WebHttpBinding.UseDefaultWebProxy%2A>"
  syntax:
    content: public Uri ProxyAddress { get; set; }
    return:
      type: System.Uri
      description: "A <xref:System.Uri>HTTP 프록시의 주소로 사용 하는.</xref:System.Uri> 기본값은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.ServiceModel.WebHttpBinding.ProxyAddress*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WebHttpBinding.ReaderQuotas
  id: ReaderQuotas
  parent: System.ServiceModel.WebHttpBinding
  langs:
  - csharp
  name: ReaderQuotas
  nameWithType: WebHttpBinding.ReaderQuotas
  fullName: System.ServiceModel.WebHttpBinding.ReaderQuotas
  type: Property
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel
  summary: "이 바인딩으로 구성 된 끝점에서 처리할 수 있는 SOAP 메시지의 복잡성에 대 한 제약 조건을 가져오거나 설정 합니다."
  remarks: "복잡성 제약 조건 서비스 거부 메시지 복잡성을 사용 하 여 끝점 처리 리소스를 독점 하는 DOS (서비스) 공격을 방지할 수 있습니다. 이러한 제약 조건과 해당 기본값 (바이트)는 속성은 다음과 같습니다.- <xref:System.Xml.XmlDictionaryReaderQuotas.MaxDepth%2A>32- <xref:System.Xml.XmlDictionaryReaderQuotas.MaxStringContentLength%2A>= 8192- <xref:System.Xml.XmlDictionaryReaderQuotas.MaxArrayLength%2A>16384- <xref:System.Xml.XmlDictionaryReaderQuotas.MaxBytesPerRead%2A>4096에서 <xref:System.Xml.XmlDictionaryReaderQuotas.MaxNameTableCharCount%2A>16384 =</xref:System.Xml.XmlDictionaryReaderQuotas.MaxNameTableCharCount%2A> </xref:System.Xml.XmlDictionaryReaderQuotas.MaxBytesPerRead%2A> =</xref:System.Xml.XmlDictionaryReaderQuotas.MaxArrayLength%2A> </xref:System.Xml.XmlDictionaryReaderQuotas.MaxStringContentLength%2A> =</xref:System.Xml.XmlDictionaryReaderQuotas.MaxDepth%2A>"
  syntax:
    content: public System.Xml.XmlDictionaryReaderQuotas ReaderQuotas { get; set; }
    return:
      type: System.Xml.XmlDictionaryReaderQuotas
      description: "<xref:System.Xml.XmlDictionaryReaderQuotas>복잡성 제약 조건을 지정 하는.</xref:System.Xml.XmlDictionaryReaderQuotas>"
  overload: System.ServiceModel.WebHttpBinding.ReaderQuotas*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "값 집합이 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "할당량 값 <xref:System.Xml.XmlDictionaryReaderQuotas>읽기 전용입니다.</xref:System.Xml.XmlDictionaryReaderQuotas>"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "설정 된 할당량이 양수 여야 합니다."
  platform:
  - net462
- uid: System.ServiceModel.WebHttpBinding.Scheme
  id: Scheme
  parent: System.ServiceModel.WebHttpBinding
  langs:
  - csharp
  name: Scheme
  nameWithType: WebHttpBinding.Scheme
  fullName: System.ServiceModel.WebHttpBinding.Scheme
  type: Property
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel
  summary: "이 바인딩으로 구성 된 수신기 및 채널의 URI 전송 체계를 가져옵니다."
  syntax:
    content: public override string Scheme { get; }
    return:
      type: System.String
      description: "&quot;https&quot;로 설정 되 고 <xref:System.ServiceModel.WebHttpBinding.Security*> <xref href=&quot;System.ServiceModel.WebHttpSecurityMode&quot;> </xref>; &quot;http&quot;로 설정 되어 있으면 <xref href=&quot;System.ServiceModel.WebHttpSecurityMode&quot;> </xref>.</xref:System.ServiceModel.WebHttpBinding.Security*>"
  overload: System.ServiceModel.WebHttpBinding.Scheme*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WebHttpBinding.Security
  id: Security
  parent: System.ServiceModel.WebHttpBinding
  langs:
  - csharp
  name: Security
  nameWithType: WebHttpBinding.Security
  fullName: System.ServiceModel.WebHttpBinding.Security
  type: Property
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel
  summary: "이 바인딩과 함께 사용 되는 보안 설정을 가져옵니다."
  remarks: "기본이 아닌 유형의 보안을 사용 하려면 사용 된 <xref:System.ServiceModel.WebHttpBinding.%23ctor%28System.ServiceModel.WebHttpSecurityMode%29>생성자.</xref:System.ServiceModel.WebHttpBinding.%23ctor%28System.ServiceModel.WebHttpSecurityMode%29>      > [!NOTE] >이 속성을 설정 하는 경우 <xref:System.ServiceModel.WebHttpSecurityMode>HTTP를 사용 하는 자격 증명을 일반 텍스트로 네트워크를 통해 전송 됩니다에 유의 하세요.</xref:System.ServiceModel.WebHttpSecurityMode>"
  syntax:
    content: public System.ServiceModel.WebHttpSecurity Security { get; set; }
    return:
      type: System.ServiceModel.WebHttpSecurity
      description: "<xref href=&quot;System.ServiceModel.WebHttpSecurity&quot;> </xref> 이 바인딩과 함께 사용 되는 합니다. 기본값은 <xref href=&quot;System.ServiceModel.WebHttpSecurityMode&quot;> </xref>합니다."
  overload: System.ServiceModel.WebHttpBinding.Security*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WebHttpBinding.ShouldSerializeReaderQuotas
  id: ShouldSerializeReaderQuotas
  parent: System.ServiceModel.WebHttpBinding
  langs:
  - csharp
  name: ShouldSerializeReaderQuotas()
  nameWithType: WebHttpBinding.ShouldSerializeReaderQuotas()
  fullName: System.ServiceModel.WebHttpBinding.ShouldSerializeReaderQuotas()
  type: Method
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel
  summary: "판독기 할당량을 serialize 해야 하는지 결정 합니다."
  syntax:
    content: public bool ShouldSerializeReaderQuotas ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>판독기 할당량을 serialize 해야 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.ServiceModel.WebHttpBinding.ShouldSerializeReaderQuotas*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WebHttpBinding.ShouldSerializeSecurity
  id: ShouldSerializeSecurity
  parent: System.ServiceModel.WebHttpBinding
  langs:
  - csharp
  name: ShouldSerializeSecurity()
  nameWithType: WebHttpBinding.ShouldSerializeSecurity()
  fullName: System.ServiceModel.WebHttpBinding.ShouldSerializeSecurity()
  type: Method
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel
  summary: "보안 설정을 serialize 해야 하는지 결정 합니다."
  syntax:
    content: public bool ShouldSerializeSecurity ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>보안 설정을 serialize 해야 합니다. 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.ServiceModel.WebHttpBinding.ShouldSerializeSecurity*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WebHttpBinding.ShouldSerializeWriteEncoding
  id: ShouldSerializeWriteEncoding
  parent: System.ServiceModel.WebHttpBinding
  langs:
  - csharp
  name: ShouldSerializeWriteEncoding()
  nameWithType: WebHttpBinding.ShouldSerializeWriteEncoding()
  fullName: System.ServiceModel.WebHttpBinding.ShouldSerializeWriteEncoding()
  type: Method
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel
  summary: "직렬화에 사용 되는 인코딩을 serialize 해야 하는지 결정 합니다."
  syntax:
    content: public bool ShouldSerializeWriteEncoding ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>인코딩을 serialize 해야 합니다. 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.ServiceModel.WebHttpBinding.ShouldSerializeWriteEncoding*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WebHttpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously
  id: System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously
  isEii: true
  parent: System.ServiceModel.WebHttpBinding
  langs:
  - csharp
  name: System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously
  nameWithType: WebHttpBinding.System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously
  fullName: System.ServiceModel.WebHttpBinding.System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously
  type: Property
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel
  summary: "들어오는 요청이 동기적 또는 비동기적으로 처리할지 여부를 나타내는 값을 가져옵니다."
  remarks: "이루어지는 메시지 수신 위한이 런타임 동작은 서비스 또는 클라이언트 응용 프로그램 사용 하 여 변경할 수 있습니다는 [ \\&lt; synchronousReceive\\&gt;](../Topic/%3CsynchronousReceive%3E%20element.md)합니다."
  syntax:
    content: bool System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>들어오는 요청이 동기적으로; 처리 되는 경우 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 들어오는 요청이 비동기적으로 처리 됩니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.ServiceModel.WebHttpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WebHttpBinding.TransferMode
  id: TransferMode
  parent: System.ServiceModel.WebHttpBinding
  langs:
  - csharp
  name: TransferMode
  nameWithType: WebHttpBinding.TransferMode
  fullName: System.ServiceModel.WebHttpBinding.TransferMode
  type: Property
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel
  summary: "가져옵니다 스트리밍 바인딩으로 구성 된 서비스가 사용 하는지 여부를 나타내는 값을 가져오거나 설정 버퍼링 (또는 둘 다)의 메시지 전송 모드입니다."
  syntax:
    content: public System.ServiceModel.TransferMode TransferMode { get; set; }
    return:
      type: System.ServiceModel.TransferMode
      description: "<xref:System.ServiceModel.TransferMode>서비스가 구성 버퍼링 또는 스트리밍 바인딩 사용할지 여부를 나타내는 값 (또는 둘 다)의 메시지 전송 모드.</xref:System.ServiceModel.TransferMode> 기본값은 <xref:System.ServiceModel.TransferMode>.</xref:System.ServiceModel.TransferMode>"
  overload: System.ServiceModel.WebHttpBinding.TransferMode*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "값 집합이 유효 하지 않거나 <xref:System.ServiceModel.TransferMode>값.</xref:System.ServiceModel.TransferMode>"
  platform:
  - net462
- uid: System.ServiceModel.WebHttpBinding.UseDefaultWebProxy
  id: UseDefaultWebProxy
  parent: System.ServiceModel.WebHttpBinding
  langs:
  - csharp
  name: UseDefaultWebProxy
  nameWithType: WebHttpBinding.UseDefaultWebProxy
  fullName: System.ServiceModel.WebHttpBinding.UseDefaultWebProxy
  type: Property
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel
  summary: "사용 가능한 경우 시스템의 자동 구성 된 HTTP 프록시를 사용할지 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "이 수에 대 한 오류인 `true` 및 <xref:System.ServiceModel.WebHttpBinding.ProxyAddress%2A>가`null`.</xref:System.ServiceModel.WebHttpBinding.ProxyAddress%2A>"
  syntax:
    content: public bool UseDefaultWebProxy { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>시스템의 자동 구성 된 HTTP 프록시를 사용 하면, 사용 가능한 경우. 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.ServiceModel.WebHttpBinding.UseDefaultWebProxy*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WebHttpBinding.WriteEncoding
  id: WriteEncoding
  parent: System.ServiceModel.WebHttpBinding
  langs:
  - csharp
  name: WriteEncoding
  nameWithType: WebHttpBinding.WriteEncoding
  fullName: System.ServiceModel.WebHttpBinding.WriteEncoding
  type: Property
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel
  summary: "메시지 텍스트에 사용 되는 문자 인코딩을 가져오거나 설정 합니다."
  syntax:
    content: public System.Text.Encoding WriteEncoding { get; set; }
    return:
      type: System.Text.Encoding
      description: "<xref:System.Text.Encoding>사용 되는 문자 인코딩을 나타내는.</xref:System.Text.Encoding> 기본값은 <xref:System.Text.UTF8Encoding>.</xref:System.Text.UTF8Encoding>"
  overload: System.ServiceModel.WebHttpBinding.WriteEncoding*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "값 집합이 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  platform:
  - net462
references:
- uid: System.ServiceModel.Channels.Binding
  isExternal: false
  name: System.ServiceModel.Channels.Binding
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Configuration.ConfigurationErrorsException
  parent: System.Configuration
  isExternal: false
  name: ConfigurationErrorsException
  nameWithType: ConfigurationErrorsException
  fullName: System.Configuration.ConfigurationErrorsException
- uid: System.ComponentModel.InvalidEnumArgumentException
  parent: System.ComponentModel
  isExternal: false
  name: InvalidEnumArgumentException
  nameWithType: InvalidEnumArgumentException
  fullName: System.ComponentModel.InvalidEnumArgumentException
- uid: System.ServiceModel.QuotaExceededException
  isExternal: true
  name: System.ServiceModel.QuotaExceededException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ServiceModel.WebHttpBinding.#ctor
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: WebHttpBinding()
  nameWithType: WebHttpBinding.WebHttpBinding()
  fullName: System.ServiceModel.WebHttpBinding.WebHttpBinding()
- uid: System.ServiceModel.WebHttpBinding.#ctor(System.ServiceModel.WebHttpSecurityMode)
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: WebHttpBinding(WebHttpSecurityMode)
  nameWithType: WebHttpBinding.WebHttpBinding(WebHttpSecurityMode)
  fullName: System.ServiceModel.WebHttpBinding.WebHttpBinding(WebHttpSecurityMode)
- uid: System.ServiceModel.WebHttpSecurityMode
  parent: System.ServiceModel
  isExternal: false
  name: WebHttpSecurityMode
  nameWithType: WebHttpSecurityMode
  fullName: System.ServiceModel.WebHttpSecurityMode
- uid: System.ServiceModel.WebHttpBinding.#ctor(System.String)
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: WebHttpBinding(String)
  nameWithType: WebHttpBinding.WebHttpBinding(String)
  fullName: System.ServiceModel.WebHttpBinding.WebHttpBinding(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.WebHttpBinding.AllowCookies
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: AllowCookies
  nameWithType: WebHttpBinding.AllowCookies
  fullName: System.ServiceModel.WebHttpBinding.AllowCookies
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.WebHttpBinding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: BuildChannelFactory(BindingParameterCollection)
  nameWithType: WebHttpBinding.BuildChannelFactory(BindingParameterCollection)
  fullName: System.ServiceModel.WebHttpBinding.BuildChannelFactory(BindingParameterCollection)
- uid: System.ServiceModel.Channels.IChannelFactory{TChannel}
  parent: System.ServiceModel.Channels
  isExternal: true
  name: IChannelFactory<TChannel>
  nameWithType: IChannelFactory<TChannel>
  fullName: System.ServiceModel.Channels.IChannelFactory<TChannel>
  spec.csharp:
  - uid: System.ServiceModel.Channels.IChannelFactory`1
    name: IChannelFactory
    nameWithType: IChannelFactory
    fullName: IChannelFactory<TChannel>
  - name: <
    nameWithType: <
    fullName: <
  - uid: TChannel
    name: TChannel
    nameWithType: TChannel
    fullName: TChannel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Channels.BindingParameterCollection
  parent: System.ServiceModel.Channels
  isExternal: true
  name: BindingParameterCollection
  nameWithType: BindingParameterCollection
  fullName: System.ServiceModel.Channels.BindingParameterCollection
- uid: System.ServiceModel.WebHttpBinding.BypassProxyOnLocal
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: BypassProxyOnLocal
  nameWithType: WebHttpBinding.BypassProxyOnLocal
  fullName: System.ServiceModel.WebHttpBinding.BypassProxyOnLocal
- uid: System.ServiceModel.WebHttpBinding.ContentTypeMapper
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: ContentTypeMapper
  nameWithType: WebHttpBinding.ContentTypeMapper
  fullName: System.ServiceModel.WebHttpBinding.ContentTypeMapper
- uid: System.ServiceModel.Channels.WebContentTypeMapper
  parent: System.ServiceModel.Channels
  isExternal: false
  name: WebContentTypeMapper
  nameWithType: WebContentTypeMapper
  fullName: System.ServiceModel.Channels.WebContentTypeMapper
- uid: System.ServiceModel.WebHttpBinding.CreateBindingElements
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: CreateBindingElements()
  nameWithType: WebHttpBinding.CreateBindingElements()
  fullName: System.ServiceModel.WebHttpBinding.CreateBindingElements()
- uid: System.ServiceModel.Channels.BindingElementCollection
  parent: System.ServiceModel.Channels
  isExternal: true
  name: BindingElementCollection
  nameWithType: BindingElementCollection
  fullName: System.ServiceModel.Channels.BindingElementCollection
- uid: System.ServiceModel.WebHttpBinding.CrossDomainScriptAccessEnabled
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: CrossDomainScriptAccessEnabled
  nameWithType: WebHttpBinding.CrossDomainScriptAccessEnabled
  fullName: System.ServiceModel.WebHttpBinding.CrossDomainScriptAccessEnabled
- uid: System.ServiceModel.WebHttpBinding.EnvelopeVersion
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: EnvelopeVersion
  nameWithType: WebHttpBinding.EnvelopeVersion
  fullName: System.ServiceModel.WebHttpBinding.EnvelopeVersion
- uid: System.ServiceModel.EnvelopeVersion
  parent: System.ServiceModel
  isExternal: true
  name: EnvelopeVersion
  nameWithType: EnvelopeVersion
  fullName: System.ServiceModel.EnvelopeVersion
- uid: System.ServiceModel.WebHttpBinding.HostNameComparisonMode
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: HostNameComparisonMode
  nameWithType: WebHttpBinding.HostNameComparisonMode
  fullName: System.ServiceModel.WebHttpBinding.HostNameComparisonMode
- uid: System.ServiceModel.HostNameComparisonMode
  parent: System.ServiceModel
  isExternal: false
  name: HostNameComparisonMode
  nameWithType: HostNameComparisonMode
  fullName: System.ServiceModel.HostNameComparisonMode
- uid: System.ServiceModel.WebHttpBinding.MaxBufferPoolSize
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: MaxBufferPoolSize
  nameWithType: WebHttpBinding.MaxBufferPoolSize
  fullName: System.ServiceModel.WebHttpBinding.MaxBufferPoolSize
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.ServiceModel.WebHttpBinding.MaxBufferSize
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: MaxBufferSize
  nameWithType: WebHttpBinding.MaxBufferSize
  fullName: System.ServiceModel.WebHttpBinding.MaxBufferSize
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ServiceModel.WebHttpBinding.MaxReceivedMessageSize
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: MaxReceivedMessageSize
  nameWithType: WebHttpBinding.MaxReceivedMessageSize
  fullName: System.ServiceModel.WebHttpBinding.MaxReceivedMessageSize
- uid: System.ServiceModel.WebHttpBinding.ProxyAddress
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: ProxyAddress
  nameWithType: WebHttpBinding.ProxyAddress
  fullName: System.ServiceModel.WebHttpBinding.ProxyAddress
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.ServiceModel.WebHttpBinding.ReaderQuotas
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: ReaderQuotas
  nameWithType: WebHttpBinding.ReaderQuotas
  fullName: System.ServiceModel.WebHttpBinding.ReaderQuotas
- uid: System.Xml.XmlDictionaryReaderQuotas
  parent: System.Xml
  isExternal: true
  name: XmlDictionaryReaderQuotas
  nameWithType: XmlDictionaryReaderQuotas
  fullName: System.Xml.XmlDictionaryReaderQuotas
- uid: System.ServiceModel.WebHttpBinding.Scheme
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: Scheme
  nameWithType: WebHttpBinding.Scheme
  fullName: System.ServiceModel.WebHttpBinding.Scheme
- uid: System.ServiceModel.WebHttpBinding.Security
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: Security
  nameWithType: WebHttpBinding.Security
  fullName: System.ServiceModel.WebHttpBinding.Security
- uid: System.ServiceModel.WebHttpSecurity
  parent: System.ServiceModel
  isExternal: false
  name: WebHttpSecurity
  nameWithType: WebHttpSecurity
  fullName: System.ServiceModel.WebHttpSecurity
- uid: System.ServiceModel.WebHttpBinding.ShouldSerializeReaderQuotas
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: ShouldSerializeReaderQuotas()
  nameWithType: WebHttpBinding.ShouldSerializeReaderQuotas()
  fullName: System.ServiceModel.WebHttpBinding.ShouldSerializeReaderQuotas()
- uid: System.ServiceModel.WebHttpBinding.ShouldSerializeSecurity
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: ShouldSerializeSecurity()
  nameWithType: WebHttpBinding.ShouldSerializeSecurity()
  fullName: System.ServiceModel.WebHttpBinding.ShouldSerializeSecurity()
- uid: System.ServiceModel.WebHttpBinding.ShouldSerializeWriteEncoding
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: ShouldSerializeWriteEncoding()
  nameWithType: WebHttpBinding.ShouldSerializeWriteEncoding()
  fullName: System.ServiceModel.WebHttpBinding.ShouldSerializeWriteEncoding()
- uid: System.ServiceModel.WebHttpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously
  nameWithType: WebHttpBinding.System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously
  fullName: System.ServiceModel.WebHttpBinding.System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously
- uid: System.ServiceModel.WebHttpBinding.TransferMode
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: TransferMode
  nameWithType: WebHttpBinding.TransferMode
  fullName: System.ServiceModel.WebHttpBinding.TransferMode
- uid: System.ServiceModel.TransferMode
  parent: System.ServiceModel
  isExternal: true
  name: TransferMode
  nameWithType: TransferMode
  fullName: System.ServiceModel.TransferMode
- uid: System.ServiceModel.WebHttpBinding.UseDefaultWebProxy
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: UseDefaultWebProxy
  nameWithType: WebHttpBinding.UseDefaultWebProxy
  fullName: System.ServiceModel.WebHttpBinding.UseDefaultWebProxy
- uid: System.ServiceModel.WebHttpBinding.WriteEncoding
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: WriteEncoding
  nameWithType: WebHttpBinding.WriteEncoding
  fullName: System.ServiceModel.WebHttpBinding.WriteEncoding
- uid: System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: System.ServiceModel.WebHttpBinding.#ctor*
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: WebHttpBinding
  nameWithType: WebHttpBinding.WebHttpBinding
- uid: System.ServiceModel.WebHttpBinding.AllowCookies*
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: AllowCookies
  nameWithType: WebHttpBinding.AllowCookies
- uid: System.ServiceModel.WebHttpBinding.BuildChannelFactory<TChannel>*
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: BuildChannelFactory<TChannel>
  nameWithType: WebHttpBinding.BuildChannelFactory<TChannel>
- uid: System.ServiceModel.WebHttpBinding.BypassProxyOnLocal*
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: BypassProxyOnLocal
  nameWithType: WebHttpBinding.BypassProxyOnLocal
- uid: System.ServiceModel.WebHttpBinding.ContentTypeMapper*
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: ContentTypeMapper
  nameWithType: WebHttpBinding.ContentTypeMapper
- uid: System.ServiceModel.WebHttpBinding.CreateBindingElements*
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: CreateBindingElements
  nameWithType: WebHttpBinding.CreateBindingElements
- uid: System.ServiceModel.WebHttpBinding.CrossDomainScriptAccessEnabled*
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: CrossDomainScriptAccessEnabled
  nameWithType: WebHttpBinding.CrossDomainScriptAccessEnabled
- uid: System.ServiceModel.WebHttpBinding.EnvelopeVersion*
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: EnvelopeVersion
  nameWithType: WebHttpBinding.EnvelopeVersion
- uid: System.ServiceModel.WebHttpBinding.HostNameComparisonMode*
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: HostNameComparisonMode
  nameWithType: WebHttpBinding.HostNameComparisonMode
- uid: System.ServiceModel.WebHttpBinding.MaxBufferPoolSize*
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: MaxBufferPoolSize
  nameWithType: WebHttpBinding.MaxBufferPoolSize
- uid: System.ServiceModel.WebHttpBinding.MaxBufferSize*
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: MaxBufferSize
  nameWithType: WebHttpBinding.MaxBufferSize
- uid: System.ServiceModel.WebHttpBinding.MaxReceivedMessageSize*
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: MaxReceivedMessageSize
  nameWithType: WebHttpBinding.MaxReceivedMessageSize
- uid: System.ServiceModel.WebHttpBinding.ProxyAddress*
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: ProxyAddress
  nameWithType: WebHttpBinding.ProxyAddress
- uid: System.ServiceModel.WebHttpBinding.ReaderQuotas*
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: ReaderQuotas
  nameWithType: WebHttpBinding.ReaderQuotas
- uid: System.ServiceModel.WebHttpBinding.Scheme*
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: Scheme
  nameWithType: WebHttpBinding.Scheme
- uid: System.ServiceModel.WebHttpBinding.Security*
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: Security
  nameWithType: WebHttpBinding.Security
- uid: System.ServiceModel.WebHttpBinding.ShouldSerializeReaderQuotas*
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: ShouldSerializeReaderQuotas
  nameWithType: WebHttpBinding.ShouldSerializeReaderQuotas
- uid: System.ServiceModel.WebHttpBinding.ShouldSerializeSecurity*
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: ShouldSerializeSecurity
  nameWithType: WebHttpBinding.ShouldSerializeSecurity
- uid: System.ServiceModel.WebHttpBinding.ShouldSerializeWriteEncoding*
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: ShouldSerializeWriteEncoding
  nameWithType: WebHttpBinding.ShouldSerializeWriteEncoding
- uid: System.ServiceModel.WebHttpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously*
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously
  nameWithType: WebHttpBinding.System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously
- uid: System.ServiceModel.WebHttpBinding.TransferMode*
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: TransferMode
  nameWithType: WebHttpBinding.TransferMode
- uid: System.ServiceModel.WebHttpBinding.UseDefaultWebProxy*
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: UseDefaultWebProxy
  nameWithType: WebHttpBinding.UseDefaultWebProxy
- uid: System.ServiceModel.WebHttpBinding.WriteEncoding*
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: WriteEncoding
  nameWithType: WebHttpBinding.WriteEncoding
