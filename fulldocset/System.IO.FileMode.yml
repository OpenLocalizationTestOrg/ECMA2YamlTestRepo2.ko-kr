### YamlMime:ManagedReference
items:
- uid: System.IO.FileMode
  id: FileMode
  children:
  - System.IO.FileMode.Append
  - System.IO.FileMode.Create
  - System.IO.FileMode.CreateNew
  - System.IO.FileMode.Open
  - System.IO.FileMode.OpenOrCreate
  - System.IO.FileMode.Truncate
  langs:
  - csharp
  name: FileMode
  nameWithType: FileMode
  fullName: System.IO.FileMode
  type: Enum
  summary: "운영 체제 파일을 여는 방법을 지정 합니다."
  remarks: "파일을 파일에 텍스트 쓰기의 예제를 보려면 [하는 방법: 파일에 텍스트 쓰기](~/add/includes/ajax-current-ext-md.md)합니다. 파일에서 읽는 텍스트의 예를 들어 참조 [하는 방법: 파일에서 텍스트 읽기](~/add/includes/ajax-current-ext-md.md)합니다. 읽기 및 쓰기 이진 파일의 예제를 보려면 [하는 방법: 읽기 및 새로 만든 데이터 파일에 쓰기](~/add/includes/ajax-current-ext-md.md)합니다.       A `FileMode` 대부분에 대 한 생성자의 매개 변수를 지정 하는 <xref:System.IO.FileStream>, <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream>, 및는 `Open` 의 메서드 <xref:System.IO.File>및 <xref:System.IO.FileInfo>파일을 열 하는 방법을 제어할 수 있습니다.</xref:System.IO.FileInfo> </xref:System.IO.File> </xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> </xref:System.IO.FileStream>       `FileMode`매개 변수 컨트롤을 만든 파일을 덮어쓰면 열려 있는지를 조합 합니다. 사용 하 여 `Open` 기존 파일을 엽니다. 파일에 추가 하려면 사용 `Append`합니다. 를 자르거나 파일이 하거나 존재 하지 않는 경우 파일을 만들 `Create`합니다."
  example:
  - "The following `FileStream` constructor opens an existing file (`FileMode.Open`).  \n  \n [!code-vb[Classic FileAccess Example#1](~/add/codesnippet/visualbasic/t-system.io.filemode_1.vb)]\n [!code-cpp[Classic FileAccess Example#1](~/add/codesnippet/cpp/t-system.io.filemode_1.cpp)]\n [!code-cs[Classic FileAccess Example#1](~/add/codesnippet/csharp/t-system.io.filemode_1.cs)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public enum FileMode
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.IO.FileMode.Append
  id: Append
  parent: System.IO.FileMode
  langs:
  - csharp
  name: Append
  nameWithType: FileMode.Append
  fullName: System.IO.FileMode.Append
  type: Field
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "존재 하 고 파일의 끝까지 검색 하거나 새 파일을 만듭니다. 경우에 파일을 엽니다. 이 위해서는 &lt;xref:System.Security.Permissions.FileIOPermissionAccess.Append?displayProperty=fullName&gt; 권한. <xref uid=&quot;langword_csharp_FileMode.Append&quot; name=&quot;FileMode.Append&quot; href=&quot;&quot;></xref>와 함께 에서만에서 사용할 수 <xref uid=&quot;langword_csharp_FileAccess.Write&quot; name=&quot;FileAccess.Write&quot; href=&quot;&quot;> </xref>합니다. 파일 throw 끝나기 전에 위치를 찾을 하려고 한 <xref:System.IO.IOException>예외 및 읽기 작업이 실패 하 고 throw 하려는 모든 시도 <xref:System.NotSupportedException>예외.</xref:System.NotSupportedException> </xref:System.IO.IOException>"
  syntax:
    content: Append
    return:
      type: System.IO.FileMode
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.IO.FileMode.Create
  id: Create
  parent: System.IO.FileMode
  langs:
  - csharp
  name: Create
  nameWithType: FileMode.Create
  fullName: System.IO.FileMode.Create
  type: Field
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "운영 체제를 새 파일을 만들도록 지정 합니다. 파일이 이미 있으면 덮어씁니다. 이 위해서는 &lt;xref:System.Security.Permissions.FileIOPermissionAccess.Write?displayProperty=fullName&gt; 권한. <xref uid=&quot;langword_csharp_FileMode.Create&quot; name=&quot;FileMode.Create&quot; href=&quot;&quot;></xref>가 사용 하는 파일이 없으면 CreateNew; 요청 같음 Truncate 사용 하십시오. 파일이 이미 있지만 숨겨진된 파일을 하는 경우는 <xref:System.UnauthorizedAccessException>예외가 throw 됩니다.</xref:System.UnauthorizedAccessException>"
  syntax:
    content: Create
    return:
      type: System.IO.FileMode
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.IO.FileMode.CreateNew
  id: CreateNew
  parent: System.IO.FileMode
  langs:
  - csharp
  name: CreateNew
  nameWithType: FileMode.CreateNew
  fullName: System.IO.FileMode.CreateNew
  type: Field
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "운영 체제를 새 파일을 만들도록 지정 합니다. 이 위해서는 &lt;xref:System.Security.Permissions.FileIOPermissionAccess.Write?displayProperty=fullName&gt; 권한. 파일이 이미 있는 경우는 <xref:System.IO.IOException>예외가 throw 됩니다.</xref:System.IO.IOException>"
  syntax:
    content: CreateNew
    return:
      type: System.IO.FileMode
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.IO.FileMode.Open
  id: Open
  parent: System.IO.FileMode
  langs:
  - csharp
  name: Open
  nameWithType: FileMode.Open
  fullName: System.IO.FileMode.Open
  type: Field
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "운영 체제를 기존 파일을 지정 합니다. 파일을 열 수 있는 기능은 지정 된 값에 종속 된 <xref href=&quot;System.IO.FileAccess&quot;> </xref> 열거 합니다. A &lt;xref:System.IO.FileNotFoundException?displayProperty=fullName&gt; 파일이 존재 하지 않는 경우 예외가 throw 됩니다."
  syntax:
    content: Open
    return:
      type: System.IO.FileMode
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.IO.FileMode.OpenOrCreate
  id: OpenOrCreate
  parent: System.IO.FileMode
  langs:
  - csharp
  name: OpenOrCreate
  nameWithType: FileMode.OpenOrCreate
  fullName: System.IO.FileMode.OpenOrCreate
  type: Field
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "운영 체제 파일을 지정 된 않으면 그렇지 않으면 새 파일을 만들어야 합니다. 와 파일을 열 경우 <xref uid=&quot;langword_csharp_FileAccess.Read&quot; name=&quot;FileAccess.Read&quot; href=&quot;&quot;> </xref>, &lt;xref:System.Security.Permissions.FileIOPermissionAccess.Read?displayProperty=fullName&gt; 권한이 필요 합니다. 파일 액세스가 <xref uid=&quot;langword_csharp_FileAccess.Write&quot; name=&quot;FileAccess.Write&quot; href=&quot;&quot;> </xref>, &lt;xref:System.Security.Permissions.FileIOPermissionAccess.Write?displayProperty=fullName&gt; 권한이 필요 합니다. 와 파일을 열 경우 <xref uid=&quot;langword_csharp_FileAccess.ReadWrite&quot; name=&quot;FileAccess.ReadWrite&quot; href=&quot;&quot;> </xref>모두 &lt;xref:System.Security.Permissions.FileIOPermissionAccess.Read?displayProperty=fullName&gt; 및 &lt;xref:System.Security.Permissions.FileIOPermissionAccess.Write?displayProperty=fullName&gt; 권한은 필요 합니다."
  syntax:
    content: OpenOrCreate
    return:
      type: System.IO.FileMode
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.IO.FileMode.Truncate
  id: Truncate
  parent: System.IO.FileMode
  langs:
  - csharp
  name: Truncate
  nameWithType: FileMode.Truncate
  fullName: System.IO.FileMode.Truncate
  type: Field
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "운영 체제를 기존 파일을 지정 합니다. 파일을 열 때의 크기는&0; 바이트를 잘라내야 합니다. 이 위해서는 &lt;xref:System.Security.Permissions.FileIOPermissionAccess.Write?displayProperty=fullName&gt; 권한. 파일에서 읽기를 사용 하 여 열린 <xref uid=&quot;langword_csharp_FileMode.Truncate&quot; name=&quot;FileMode.Truncate&quot; href=&quot;&quot;> </xref> 발생 한 <xref:System.ArgumentException>예외.</xref:System.ArgumentException>"
  syntax:
    content: Truncate
    return:
      type: System.IO.FileMode
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.IO.FileMode.Append
  parent: System.IO.FileMode
  isExternal: false
  name: Append
  nameWithType: FileMode.Append
  fullName: System.IO.FileMode.Append
- uid: System.IO.FileMode
  parent: System.IO
  isExternal: false
  name: FileMode
  nameWithType: FileMode
  fullName: System.IO.FileMode
- uid: System.IO.FileMode.Create
  parent: System.IO.FileMode
  isExternal: false
  name: Create
  nameWithType: FileMode.Create
  fullName: System.IO.FileMode.Create
- uid: System.IO.FileMode.CreateNew
  parent: System.IO.FileMode
  isExternal: false
  name: CreateNew
  nameWithType: FileMode.CreateNew
  fullName: System.IO.FileMode.CreateNew
- uid: System.IO.FileMode.Open
  parent: System.IO.FileMode
  isExternal: false
  name: Open
  nameWithType: FileMode.Open
  fullName: System.IO.FileMode.Open
- uid: System.IO.FileMode.OpenOrCreate
  parent: System.IO.FileMode
  isExternal: false
  name: OpenOrCreate
  nameWithType: FileMode.OpenOrCreate
  fullName: System.IO.FileMode.OpenOrCreate
- uid: System.IO.FileMode.Truncate
  parent: System.IO.FileMode
  isExternal: false
  name: Truncate
  nameWithType: FileMode.Truncate
  fullName: System.IO.FileMode.Truncate
