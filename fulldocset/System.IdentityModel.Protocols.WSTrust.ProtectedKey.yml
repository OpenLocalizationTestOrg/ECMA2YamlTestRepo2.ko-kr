### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Protocols.WSTrust.ProtectedKey
  id: ProtectedKey
  children:
  - System.IdentityModel.Protocols.WSTrust.ProtectedKey.#ctor(System.Byte[])
  - System.IdentityModel.Protocols.WSTrust.ProtectedKey.#ctor(System.Byte[],System.IdentityModel.Tokens.EncryptingCredentials)
  - System.IdentityModel.Protocols.WSTrust.ProtectedKey.GetKeyBytes
  - System.IdentityModel.Protocols.WSTrust.ProtectedKey.WrappingCredentials
  langs:
  - csharp
  name: ProtectedKey
  nameWithType: ProtectedKey
  fullName: System.IdentityModel.Protocols.WSTrust.ProtectedKey
  type: Class
  summary: "wst:Entropy 나 RequestSecurityToken 및 RequestSecurityTokenResponse 내부 wst:RequestedProofToken 요소 내용을 나타냅니다."
  remarks: "wst:Entropy 또는 wst:RequestedProofToken 요소는 wst: requestsecuritytoken 내의 내용을 나타냅니다 (<xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken>) 및 wst:RequestSecurityTokenResponse (<xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse>) 메시지.</xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse> </xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken>       이 클래스가 나타내는 요소에 대 한 자세한 내용은 해당 시나리오에 적용 되는 WS-트러스트 사양의 버전을 참조 하십시오."
  syntax:
    content: public class ProtectedKey
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IdentityModel.Protocols.WSTrust.ProtectedKey.#ctor(System.Byte[])
  id: '#ctor(System.Byte[])'
  parent: System.IdentityModel.Protocols.WSTrust.ProtectedKey
  langs:
  - csharp
  name: ProtectedKey(Byte[])
  nameWithType: ProtectedKey.ProtectedKey(Byte[])
  fullName: System.IdentityModel.Protocols.WSTrust.ProtectedKey.ProtectedKey(Byte[])
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Protocols.WSTrust
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.IdentityModel.Protocols.WSTrust.ProtectedKey&quot;> </xref> 암호화 하지 않고 클래스입니다."
  remarks: "이 생성자를 사용 하 여 키 자료 일반 텍스트로 보냅니다. <xref:System.IdentityModel.Protocols.WSTrust.ProtectedKey.WrappingCredentials%2A>속성이 `null` 새 <xref:System.IdentityModel.Protocols.WSTrust.ProtectedKey>인스턴스.</xref:System.IdentityModel.Protocols.WSTrust.ProtectedKey> </xref:System.IdentityModel.Protocols.WSTrust.ProtectedKey.WrappingCredentials%2A>"
  syntax:
    content: public ProtectedKey (byte[] secret);
    parameters:
    - id: secret
      type: System.Byte[]
      description: "배열을 <xref:System.Byte>보호 되어야 하는 키 자료를 포함 하는.</xref:System.Byte>"
  overload: System.IdentityModel.Protocols.WSTrust.ProtectedKey.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Protocols.WSTrust.ProtectedKey.#ctor(System.Byte[],System.IdentityModel.Tokens.EncryptingCredentials)
  id: '#ctor(System.Byte[],System.IdentityModel.Tokens.EncryptingCredentials)'
  parent: System.IdentityModel.Protocols.WSTrust.ProtectedKey
  langs:
  - csharp
  name: ProtectedKey(Byte[],EncryptingCredentials)
  nameWithType: ProtectedKey.ProtectedKey(Byte[],EncryptingCredentials)
  fullName: System.IdentityModel.Protocols.WSTrust.ProtectedKey.ProtectedKey(Byte[],EncryptingCredentials)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Protocols.WSTrust
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.IdentityModel.Protocols.WSTrust.ProtectedKey&quot;> </xref> 클래스 지정된 된 암호화 자격 증명을 사용 합니다."
  remarks: "이 생성자를 사용 하 여 암호화 된 키 자료를 보내려고 합니다."
  syntax:
    content: public ProtectedKey (byte[] secret, System.IdentityModel.Tokens.EncryptingCredentials wrappingCredentials);
    parameters:
    - id: secret
      type: System.Byte[]
      description: "배열을 <xref:System.Byte>보호 되어야 하는 키 자료를 포함 하는.</xref:System.Byte>"
    - id: wrappingCredentials
      type: System.IdentityModel.Tokens.EncryptingCredentials
      description: "<xref href=&quot;System.IdentityModel.Tokens.EncryptingCredentials&quot;> </xref> 키 자료를 암호화 하는 데 자격 증명을 포함 하는 합니다."
  overload: System.IdentityModel.Protocols.WSTrust.ProtectedKey.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Protocols.WSTrust.ProtectedKey.GetKeyBytes
  id: GetKeyBytes
  parent: System.IdentityModel.Protocols.WSTrust.ProtectedKey
  langs:
  - csharp
  name: GetKeyBytes()
  nameWithType: ProtectedKey.GetKeyBytes()
  fullName: System.IdentityModel.Protocols.WSTrust.ProtectedKey.GetKeyBytes()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Protocols.WSTrust
  summary: "키 자료를 가져옵니다."
  syntax:
    content: public byte[] GetKeyBytes ();
    parameters: []
    return:
      type: System.Byte[]
      description: "배열을 <xref:System.Byte>키 자료를 포함 하는.</xref:System.Byte>"
  overload: System.IdentityModel.Protocols.WSTrust.ProtectedKey.GetKeyBytes*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Protocols.WSTrust.ProtectedKey.WrappingCredentials
  id: WrappingCredentials
  parent: System.IdentityModel.Protocols.WSTrust.ProtectedKey
  langs:
  - csharp
  name: WrappingCredentials
  nameWithType: ProtectedKey.WrappingCredentials
  fullName: System.IdentityModel.Protocols.WSTrust.ProtectedKey.WrappingCredentials
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Protocols.WSTrust
  summary: "키에 대 한 암호화 자격 증명을 가져옵니다."
  syntax:
    content: public System.IdentityModel.Tokens.EncryptingCredentials WrappingCredentials { get; }
    return:
      type: System.IdentityModel.Tokens.EncryptingCredentials
      description: "A <xref:System.IdentityModel.SecurityTokenService.EncryptingCredentials>키를 암호화 하는 데 사용 되는 자격 증명을 나타내는입니다.</xref:System.IdentityModel.SecurityTokenService.EncryptingCredentials> <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>키 암호화 되지 않습니다 나타냅니다."
  overload: System.IdentityModel.Protocols.WSTrust.ProtectedKey.WrappingCredentials*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.IdentityModel.Protocols.WSTrust.ProtectedKey.#ctor(System.Byte[])
  parent: System.IdentityModel.Protocols.WSTrust.ProtectedKey
  isExternal: false
  name: ProtectedKey(Byte[])
  nameWithType: ProtectedKey.ProtectedKey(Byte[])
  fullName: System.IdentityModel.Protocols.WSTrust.ProtectedKey.ProtectedKey(Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.IdentityModel.Protocols.WSTrust.ProtectedKey.#ctor(System.Byte[],System.IdentityModel.Tokens.EncryptingCredentials)
  parent: System.IdentityModel.Protocols.WSTrust.ProtectedKey
  isExternal: false
  name: ProtectedKey(Byte[],EncryptingCredentials)
  nameWithType: ProtectedKey.ProtectedKey(Byte[],EncryptingCredentials)
  fullName: System.IdentityModel.Protocols.WSTrust.ProtectedKey.ProtectedKey(Byte[],EncryptingCredentials)
- uid: System.IdentityModel.Tokens.EncryptingCredentials
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: EncryptingCredentials
  nameWithType: EncryptingCredentials
  fullName: System.IdentityModel.Tokens.EncryptingCredentials
- uid: System.IdentityModel.Protocols.WSTrust.ProtectedKey.GetKeyBytes
  parent: System.IdentityModel.Protocols.WSTrust.ProtectedKey
  isExternal: false
  name: GetKeyBytes()
  nameWithType: ProtectedKey.GetKeyBytes()
  fullName: System.IdentityModel.Protocols.WSTrust.ProtectedKey.GetKeyBytes()
- uid: System.IdentityModel.Protocols.WSTrust.ProtectedKey.WrappingCredentials
  parent: System.IdentityModel.Protocols.WSTrust.ProtectedKey
  isExternal: false
  name: WrappingCredentials
  nameWithType: ProtectedKey.WrappingCredentials
  fullName: System.IdentityModel.Protocols.WSTrust.ProtectedKey.WrappingCredentials
- uid: System.IdentityModel.Protocols.WSTrust.ProtectedKey.#ctor*
  parent: System.IdentityModel.Protocols.WSTrust.ProtectedKey
  isExternal: false
  name: ProtectedKey
  nameWithType: ProtectedKey.ProtectedKey
- uid: System.IdentityModel.Protocols.WSTrust.ProtectedKey.GetKeyBytes*
  parent: System.IdentityModel.Protocols.WSTrust.ProtectedKey
  isExternal: false
  name: GetKeyBytes
  nameWithType: ProtectedKey.GetKeyBytes
- uid: System.IdentityModel.Protocols.WSTrust.ProtectedKey.WrappingCredentials*
  parent: System.IdentityModel.Protocols.WSTrust.ProtectedKey
  isExternal: false
  name: WrappingCredentials
  nameWithType: ProtectedKey.WrappingCredentials
