### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.RSAParameters
  id: RSAParameters
  children:
  - System.Security.Cryptography.RSAParameters.D
  - System.Security.Cryptography.RSAParameters.DP
  - System.Security.Cryptography.RSAParameters.DQ
  - System.Security.Cryptography.RSAParameters.Exponent
  - System.Security.Cryptography.RSAParameters.InverseQ
  - System.Security.Cryptography.RSAParameters.Modulus
  - System.Security.Cryptography.RSAParameters.P
  - System.Security.Cryptography.RSAParameters.Q
  langs:
  - csharp
  name: RSAParameters
  nameWithType: RSAParameters
  fullName: System.Security.Cryptography.RSAParameters
  type: Struct
  summary: "에 대 한 표준 매개 변수를 나타냅니다는 <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref> 알고리즘입니다."
  remarks: "<xref:System.Security.Cryptography.RSA>클래스가 노출 한 <xref:System.Security.Cryptography.RSA.ExportParameters%2A>RSAParameters 구조 형태로 원시 RSA 키를 검색할 수 있도록 하는 메서드입니다.</xref:System.Security.Cryptography.RSA.ExportParameters%2A> </xref:System.Security.Cryptography.RSA> 이 구조체의 내용을 이해 하는 것 필요 방식에 대해 알아야 <xref:System.Security.Cryptography.RSA>알고리즘의 작동 합니다.</xref:System.Security.Cryptography.RSA> 다음 섹션에서는 알고리즘을 간단 하 게 설명합니다.      ## RSA 알고리즘에 키 쌍을 생성, p 및 q 라는 두 개의 큰 소수를 만들어 시작 합니다. 이러한 번호 곱하고 결과 n 라고 합니다. 때문에 p 및 q 모두 소수 n은 1, p, q, n의 유일한 요소입니다.       N 보다 작은 숫자만 생각 하는 경우 즉, n, 있는 숫자의 개수 없는 요소 야 공통 n, equals (p-1)(q-1) 합니다.       이제 비교적 프라임 계산한 값에는 숫자 e를 선택 합니다. 공개 키 이제 {e, n을 (를)으로 표시 됩니다.       개인 키를 만들려면 d 숫자를 계산 해야 되도록 (위해 mod (p-1)(q-1) = 1입니다. 유 클 리 디안 알고리즘에 따라 개인 키가 이제 {d, n을 (를).       C로 정의 된 암호 텍스트 c m 일반 텍스트의 암호화 = (m ^ e) mod n입니다. 암호 해독 한 다음 m으로 정의할 수 = (c ^ d) mod n입니다.      ## 필드 섹션 A.1.2 요약는 [PKCS #1: RSA 암호화 표준](http://go.microsoft.com/fwlink/?LinkId=113155) RSA Laboratories 웹 사이트를 RSA 개인 키에 대 한 형식을 정의 합니다.       다음 표에서 RSAParameters 구조체의 필드를 요약 합니다. 세 번째 열은 제공 A.1.2 섹션의 해당 필드의 [PKCS #1: RSA 암호화 표준](http://go.microsoft.com/fwlink/?LinkId=113155)합니다.      | RSAParameters 필드 | 포함 | 해당 되는 PKCS #1 필드 |   |---------------------------------------------------------------------------------------------------------------------------------------------------------------|--------------|----------------------------------|   | <xref:System.Security.Cryptography.RSAParameters.D>| d, 개인 지 수 | privateExponent |   | <xref:System.Security.Cryptography.RSAParameters.DP>| d mod (p-1) | exponent1 |   | <xref:System.Security.Cryptography.RSAParameters.DQ>| d mod (q-1) | exponent2 |   | <xref:System.Security.Cryptography.RSAParameters.Exponent>| e, 공개 지수가 | publicExponent |   | <xref:System.Security.Cryptography.RSAParameters.InverseQ>| (InverseQ) (q) = 1 mod p | 계수 |   | <xref:System.Security.Cryptography.RSAParameters.Modulus>| n | 모듈러스 |   | <xref:System.Security.Cryptography.RSAParameters.P>| p | prime1 |   | <xref:System.Security.Cryptography.RSAParameters.Q>| q | prime2 |       RSA 보안이, {e, n을 (를) 공개 키가 지정 된, 아닌지 직접적으로 또는 p 및 q:로 예상 되는 n d를 계산 하는 것이 불가능 사실에서</xref:System.Security.Cryptography.RSAParameters.Q> </xref:System.Security.Cryptography.RSAParameters.P> </xref:System.Security.Cryptography.RSAParameters.Modulus> </xref:System.Security.Cryptography.RSAParameters.InverseQ> </xref:System.Security.Cryptography.RSAParameters.Exponent> </xref:System.Security.Cryptography.RSAParameters.DQ> </xref:System.Security.Cryptography.RSAParameters.DP> </xref:System.Security.Cryptography.RSAParameters.D> 따라서 d, p, 또는 q 관련 키의 일부 비밀로 유지 되어야 합니다. <xref:System.Security.Cryptography.RSACryptoServiceProvider.ExportParameters%2A>이 때문에 <xref:System.Security.Cryptography.RSAParameters.Exponent>및 <xref:System.Security.Cryptography.RSAParameters.Modulus>.</xref:System.Security.Cryptography.RSAParameters.Modulus> </xref:System.Security.Cryptography.RSAParameters.Exponent> 받게 됩니다만 공개 키 정보를 요청 및</xref:System.Security.Cryptography.RSACryptoServiceProvider.ExportParameters%2A> 를 호출 하는 경우 다른 필드는 사용자가 요청 하 고 개인 키에 액세스할 수 있는 경우에 사용할 수 있습니다.       개인 키 정보를 사용할 경우 주의 해야 하므로 RSAParameters 어떤 방식으로 암호화 되지 않습니다. 사실, 개인 키 정보를 포함 하는 필드 serialize 할 수 있습니다. RSAParameters 구조는 remoting 통화 또는 serializer 중 하나를 사용 하 여 serialize 하려는 경우 공개 키 정보만을 받습니다. 개인 키 정보를 전달 하려는 경우에 해당 데이터를 수동으로 전송 해야 합니다. 모든 경우에는 매개 변수 파생 되는 키 전송 하는 됩니다 사용할 수 없습니다."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public struct RSAParameters
  inheritance:
  - System.ValueType
  implements: []
  platform:
  - net462
- uid: System.Security.Cryptography.RSAParameters.D
  id: D
  parent: System.Security.Cryptography.RSAParameters
  langs:
  - csharp
  name: D
  nameWithType: RSAParameters.D
  fullName: System.Security.Cryptography.RSAParameters.D
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "나타냅니다는 <xref uid=&quot;langword_csharp_D&quot; name=&quot;D&quot; href=&quot;&quot;> </xref> 에 대 한 매개 변수는 <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref> 알고리즘입니다."
  syntax:
    content: public byte[] D;
    return:
      type: System.Byte[]
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RSAParameters.DP
  id: DP
  parent: System.Security.Cryptography.RSAParameters
  langs:
  - csharp
  name: DP
  nameWithType: RSAParameters.DP
  fullName: System.Security.Cryptography.RSAParameters.DP
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "나타냅니다는 <xref uid=&quot;langword_csharp_DP&quot; name=&quot;DP&quot; href=&quot;&quot;> </xref> 에 대 한 매개 변수는 <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref> 알고리즘입니다."
  syntax:
    content: public byte[] DP;
    return:
      type: System.Byte[]
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RSAParameters.DQ
  id: DQ
  parent: System.Security.Cryptography.RSAParameters
  langs:
  - csharp
  name: DQ
  nameWithType: RSAParameters.DQ
  fullName: System.Security.Cryptography.RSAParameters.DQ
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "나타냅니다는 <xref uid=&quot;langword_csharp_DQ&quot; name=&quot;DQ&quot; href=&quot;&quot;> </xref> 에 대 한 매개 변수는 <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref> 알고리즘입니다."
  syntax:
    content: public byte[] DQ;
    return:
      type: System.Byte[]
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RSAParameters.Exponent
  id: Exponent
  parent: System.Security.Cryptography.RSAParameters
  langs:
  - csharp
  name: Exponent
  nameWithType: RSAParameters.Exponent
  fullName: System.Security.Cryptography.RSAParameters.Exponent
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "나타냅니다는 <xref uid=&quot;langword_csharp_Exponent&quot; name=&quot;Exponent&quot; href=&quot;&quot;> </xref> 에 대 한 매개 변수는 <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref> 알고리즘입니다."
  syntax:
    content: public byte[] Exponent;
    return:
      type: System.Byte[]
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RSAParameters.InverseQ
  id: InverseQ
  parent: System.Security.Cryptography.RSAParameters
  langs:
  - csharp
  name: InverseQ
  nameWithType: RSAParameters.InverseQ
  fullName: System.Security.Cryptography.RSAParameters.InverseQ
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "나타냅니다는 <xref uid=&quot;langword_csharp_InverseQ&quot; name=&quot;InverseQ&quot; href=&quot;&quot;> </xref> 에 대 한 매개 변수는 <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref> 알고리즘입니다."
  syntax:
    content: public byte[] InverseQ;
    return:
      type: System.Byte[]
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RSAParameters.Modulus
  id: Modulus
  parent: System.Security.Cryptography.RSAParameters
  langs:
  - csharp
  name: Modulus
  nameWithType: RSAParameters.Modulus
  fullName: System.Security.Cryptography.RSAParameters.Modulus
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "나타냅니다는 <xref uid=&quot;langword_csharp_Modulus&quot; name=&quot;Modulus&quot; href=&quot;&quot;> </xref> 에 대 한 매개 변수는 <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref> 알고리즘입니다."
  syntax:
    content: public byte[] Modulus;
    return:
      type: System.Byte[]
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RSAParameters.P
  id: P
  parent: System.Security.Cryptography.RSAParameters
  langs:
  - csharp
  name: P
  nameWithType: RSAParameters.P
  fullName: System.Security.Cryptography.RSAParameters.P
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "나타냅니다는 <xref uid=&quot;langword_csharp_P&quot; name=&quot;P&quot; href=&quot;&quot;> </xref> 에 대 한 매개 변수는 <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref> 알고리즘입니다."
  syntax:
    content: public byte[] P;
    return:
      type: System.Byte[]
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RSAParameters.Q
  id: Q
  parent: System.Security.Cryptography.RSAParameters
  langs:
  - csharp
  name: Q
  nameWithType: RSAParameters.Q
  fullName: System.Security.Cryptography.RSAParameters.Q
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "나타냅니다는 <xref uid=&quot;langword_csharp_Q&quot; name=&quot;Q&quot; href=&quot;&quot;> </xref> 에 대 한 매개 변수는 <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref> 알고리즘입니다."
  syntax:
    content: public byte[] Q;
    return:
      type: System.Byte[]
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Security.Cryptography.RSAParameters.D
  parent: System.Security.Cryptography.RSAParameters
  isExternal: false
  name: D
  nameWithType: RSAParameters.D
  fullName: System.Security.Cryptography.RSAParameters.D
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.RSAParameters.DP
  parent: System.Security.Cryptography.RSAParameters
  isExternal: false
  name: DP
  nameWithType: RSAParameters.DP
  fullName: System.Security.Cryptography.RSAParameters.DP
- uid: System.Security.Cryptography.RSAParameters.DQ
  parent: System.Security.Cryptography.RSAParameters
  isExternal: false
  name: DQ
  nameWithType: RSAParameters.DQ
  fullName: System.Security.Cryptography.RSAParameters.DQ
- uid: System.Security.Cryptography.RSAParameters.Exponent
  parent: System.Security.Cryptography.RSAParameters
  isExternal: false
  name: Exponent
  nameWithType: RSAParameters.Exponent
  fullName: System.Security.Cryptography.RSAParameters.Exponent
- uid: System.Security.Cryptography.RSAParameters.InverseQ
  parent: System.Security.Cryptography.RSAParameters
  isExternal: false
  name: InverseQ
  nameWithType: RSAParameters.InverseQ
  fullName: System.Security.Cryptography.RSAParameters.InverseQ
- uid: System.Security.Cryptography.RSAParameters.Modulus
  parent: System.Security.Cryptography.RSAParameters
  isExternal: false
  name: Modulus
  nameWithType: RSAParameters.Modulus
  fullName: System.Security.Cryptography.RSAParameters.Modulus
- uid: System.Security.Cryptography.RSAParameters.P
  parent: System.Security.Cryptography.RSAParameters
  isExternal: false
  name: P
  nameWithType: RSAParameters.P
  fullName: System.Security.Cryptography.RSAParameters.P
- uid: System.Security.Cryptography.RSAParameters.Q
  parent: System.Security.Cryptography.RSAParameters
  isExternal: false
  name: Q
  nameWithType: RSAParameters.Q
  fullName: System.Security.Cryptography.RSAParameters.Q
