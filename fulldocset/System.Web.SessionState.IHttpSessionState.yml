### YamlMime:ManagedReference
items:
- uid: System.Web.SessionState.IHttpSessionState
  id: IHttpSessionState
  children:
  - System.Web.SessionState.IHttpSessionState.Abandon
  - System.Web.SessionState.IHttpSessionState.Add(System.String,System.Object)
  - System.Web.SessionState.IHttpSessionState.Clear
  - System.Web.SessionState.IHttpSessionState.CodePage
  - System.Web.SessionState.IHttpSessionState.CookieMode
  - System.Web.SessionState.IHttpSessionState.CopyTo(System.Array,System.Int32)
  - System.Web.SessionState.IHttpSessionState.Count
  - System.Web.SessionState.IHttpSessionState.GetEnumerator
  - System.Web.SessionState.IHttpSessionState.IsCookieless
  - System.Web.SessionState.IHttpSessionState.IsNewSession
  - System.Web.SessionState.IHttpSessionState.IsReadOnly
  - System.Web.SessionState.IHttpSessionState.IsSynchronized
  - System.Web.SessionState.IHttpSessionState.Item(System.Int32)
  - System.Web.SessionState.IHttpSessionState.Item(System.String)
  - System.Web.SessionState.IHttpSessionState.Keys
  - System.Web.SessionState.IHttpSessionState.LCID
  - System.Web.SessionState.IHttpSessionState.Mode
  - System.Web.SessionState.IHttpSessionState.Remove(System.String)
  - System.Web.SessionState.IHttpSessionState.RemoveAll
  - System.Web.SessionState.IHttpSessionState.RemoveAt(System.Int32)
  - System.Web.SessionState.IHttpSessionState.SessionID
  - System.Web.SessionState.IHttpSessionState.StaticObjects
  - System.Web.SessionState.IHttpSessionState.SyncRoot
  - System.Web.SessionState.IHttpSessionState.Timeout
  langs:
  - csharp
  name: IHttpSessionState
  nameWithType: IHttpSessionState
  fullName: System.Web.SessionState.IHttpSessionState
  type: Interface
  summary: "사용자 지정 세션 상태 컨테이너를 구현 하기 위한 계약을 정의 합니다."
  remarks: "세션 상태 컨테이너 세션 상태 값 및 현재 세션에 대 한 관련된 정보에 대 한 액세스를 제공합니다. 세션 상태 컨테이너에 포함 된 세션 정보를 통해 응용 프로그램 코드에 노출 되는 <xref:System.Web.SessionState.HttpSessionState>클래스 사용의 <xref:System.Web.HttpContext.Session%2A>속성.</xref:System.Web.HttpContext.Session%2A> </xref:System.Web.SessionState.HttpSessionState> <xref:System.Web.SessionState.HttpSessionState>클래스는 세션 상태 컨테이너에 대 한 래퍼 클래스입니다.</xref:System.Web.SessionState.HttpSessionState>       세션 상태 컨테이너의 ASP.NET 구현에는 <xref:System.Web.SessionState.HttpSessionStateContainer>클래스</xref:System.Web.SessionState.HttpSessionStateContainer> 입니다. <xref:System.Web.HttpApplication.AcquireRequestState>이벤트에는 <xref:System.Web.SessionState.SessionStateModule>만들고 채우는는 <xref:System.Web.SessionState.HttpSessionStateContainer>개체와 현재 <xref:System.Web.HttpContext>.</xref:System.Web.HttpContext> 에 할당</xref:System.Web.SessionState.HttpSessionStateContainer> </xref:System.Web.SessionState.SessionStateModule> </xref:System.Web.HttpApplication.AcquireRequestState> 하는 동안 요청을 맨 앞에 끝에 요청 하는 동안는 <xref:System.Web.HttpApplication.ReleaseRequestState>이벤트에는 <xref:System.Web.SessionState.SessionStateModule>검색는 <xref:System.Web.SessionState.HttpSessionStateContainer>개체는 현재에서 <xref:System.Web.HttpContext>세션 저장소에 세션 값을 쓰거나 세션 중단 것과 같은 필요한 세션 작업을 수행 하 고.</xref:System.Web.HttpContext> </xref:System.Web.SessionState.HttpSessionStateContainer> </xref:System.Web.SessionState.SessionStateModule> </xref:System.Web.HttpApplication.ReleaseRequestState> 요청이 갑자기 종료 되 면 같은 한 리디렉션을 통해 하는 경우는 <xref:System.Web.SessionState.SessionStateModule>호출 하 여 동일한 정리를 수행 합니다.는 <xref:System.Web.SessionState.SessionStateStoreProviderBase.EndRequest%2A>메서드.</xref:System.Web.SessionState.SessionStateStoreProviderBase.EndRequest%2A> </xref:System.Web.SessionState.SessionStateModule>       사용자 지정 세션 상태 컨테이너를 만들려면 IHttpSessionState 인터페이스를 구현 하는 클래스를 만듭니다. 사용자 고유의 사용자 지정 세션 상태 컨테이너를 만드는 경우 바꾸는 작업도 수행 해야는 <xref:System.Web.SessionState.SessionStateModule>사용자 고유의 사용자 지정 모듈로.</xref:System.Web.SessionState.SessionStateModule> 사용자 지정 모듈을 사용자 지정 세션 상태 컨테이너의 인스턴스를 만들어 현재 추가 <xref:System.Web.HttpContext>를 사용 하 여 <xref:System.Web.SessionState.SessionStateUtility.AddHttpSessionStateToContext%2A>메서드.</xref:System.Web.SessionState.SessionStateUtility.AddHttpSessionStateToContext%2A> </xref:System.Web.HttpContext> 사용자 지정 세션 상태 모듈의 예제에 포함 되어는 <xref:System.Web.SessionState.SessionStateUtility>클래스 개요.</xref:System.Web.SessionState.SessionStateUtility>"
  example:
  - "The following code example implements the IHttpSessionState interface to create a new session-state container class named `MySessionState`.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#1](~/add/codesnippet/csharp/t-system.web.sessionstat_4_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#1](~/add/codesnippet/visualbasic/t-system.web.sessionstat_4_1.vb)]"
  syntax:
    content: public interface IHttpSessionState
  implements: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.Abandon
  id: Abandon
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: Abandon()
  nameWithType: IHttpSessionState.Abandon()
  fullName: System.Web.SessionState.IHttpSessionState.Abandon()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "현재 세션이 종료 됩니다."
  remarks: "세션 데이터를 지울 및 발생을 중단 메서드를 사용 하는 **Session_OnEnd** ASP.NET 응용 프로그램의 Global.asax 파일에 정의 된 이벤트입니다."
  example:
  - "The following code example implements the Abandon method of the <xref:System.Web.SessionState.IHttpSessionState> interface. The code example duplicates the behavior of the <xref:System.Web.SessionState.HttpSessionStateContainer> class in that it adds an <xref:System.Web.SessionState.HttpSessionStateContainer.IsAbandoned%2A> property that is set to `true` when the Abandon method is called. The <xref:System.Web.SessionState.HttpSessionStateContainer.IsAbandoned%2A> property is checked by the session-state module during the <xref:System.Web.HttpApplication.ReleaseRequestState> event to determine whether the session has been abandoned, and the session-state module clears out session data and executes the **Session_OnEnd** event.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#8](~/add/codesnippet/csharp/m-system.web.sessionstat_12_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#8](~/add/codesnippet/visualbasic/m-system.web.sessionstat_12_1.vb)]"
  syntax:
    content: public void Abandon ();
    parameters: []
  overload: System.Web.SessionState.IHttpSessionState.Abandon*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.Add(System.String,System.Object)
  id: Add(System.String,System.Object)
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: Add(String,Object)
  nameWithType: IHttpSessionState.Add(String,Object)
  fullName: System.Web.SessionState.IHttpSessionState.Add(String,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "세션 상태 컬렉션에 새 항목을 추가합니다."
  remarks: ''
  example:
  - "The following code example implements the Add method of the <xref:System.Web.SessionState.IHttpSessionState> interface to add a new item value to the internal session-state item collection.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#15](~/add/codesnippet/csharp/m-system.web.sessionstat_8_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#15](~/add/codesnippet/visualbasic/m-system.web.sessionstat_8_1.vb)]"
  syntax:
    content: public void Add (string name, object value);
    parameters:
    - id: name
      type: System.String
      description: "세션 상태 컬렉션에 추가할 항목의 이름입니다."
    - id: value
      type: System.Object
      description: "세션 상태 컬렉션에 추가할 항목의 값입니다."
  overload: System.Web.SessionState.IHttpSessionState.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.Clear
  id: Clear
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: Clear()
  nameWithType: IHttpSessionState.Clear()
  fullName: System.Web.SessionState.IHttpSessionState.Clear()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "세션 상태 항목 컬렉션에서 모든 값을 지웁니다."
  remarks: "Clear <xref:System.Web.SessionState.IHttpSessionState.RemoveAll%2A>.</xref:System.Web.SessionState.IHttpSessionState.RemoveAll%2A> 와 동일한 기능을 수행"
  example:
  - "The following code example implements the Clear method of the <xref:System.Web.SessionState.IHttpSessionState> interface to delete all items from an internal session-state item collection.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#18](~/add/codesnippet/csharp/m-system.web.sessionstat_13_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#18](~/add/codesnippet/visualbasic/m-system.web.sessionstat_13_1.vb)]"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Web.SessionState.IHttpSessionState.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.CodePage
  id: CodePage
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: CodePage
  nameWithType: IHttpSessionState.CodePage
  fullName: System.Web.SessionState.IHttpSessionState.CodePage
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "현재 세션에 대 한 코드 페이지 식별자를 가져오거나 설정 합니다."
  remarks: "문자 집합 (코드 페이지)는 문자 값을 결정 하는 멀티 바이트 문자 데이터를 해석 하 고 정렬 순서에 사용 됩니다. 코드 페이지 설정이 멀티 바이트 문자가 아닌 데이터를 유니코드 문자 데이터에만 적용 됩니다.       이 코드 페이지 속성은 이전 버전 ASP와의 호환성을 위해 제공 됩니다. ASP 페이지와 이전 버전과 호환성을 유지 해야 하는 경우 사용 하 여는 <xref:System.Text.Encoding.CodePage%2A>의 속성은 <xref:System.Web.HttpResponse.ContentEncoding%2A>속성 대신.</xref:System.Web.HttpResponse.ContentEncoding%2A> </xref:System.Text.Encoding.CodePage%2A>"
  example:
  - "The following code example implements the CodePage property of the <xref:System.Web.SessionState.IHttpSessionState> interface to get and set the encoding for the current response.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#10](~/add/codesnippet/csharp/p-system.web.sessionstat_22_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#10](~/add/codesnippet/visualbasic/p-system.web.sessionstat_22_1.vb)]"
  syntax:
    content: public int CodePage { get; set; }
    return:
      type: System.Int32
      description: "현재 세션에 대 한 코드 페이지 식별자입니다."
  overload: System.Web.SessionState.IHttpSessionState.CodePage*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.CookieMode
  id: CookieMode
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: CookieMode
  nameWithType: IHttpSessionState.CookieMode
  fullName: System.Web.SessionState.IHttpSessionState.CookieMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "응용 프로그램 쿠키 없는 세션을 사용 하도록 구성 되어 있는지 여부를 나타내는 값을 가져옵니다."
  remarks: "CookieMode 속성은 반환은 <xref:System.Web.HttpCookieMode>열거형 값의 값을 기반으로 하는 `cookieless` 특성에는 <xref:System.Web.Configuration.SystemWebSectionGroup.SessionState%2A>구성 요소.</xref:System.Web.Configuration.SystemWebSectionGroup.SessionState%2A> </xref:System.Web.HttpCookieMode> 경우는 `cookieless` 특성이로 설정 된 `true`, 다음 <xref:System.Web.HttpCookieMode>CookieMode 속성 반환 <xref:System.Web.HttpCookieMode>.</xref:System.Web.HttpCookieMode> </xref:System.Web.HttpCookieMode> CookieMode 속성 반환"
  example:
  - "The following code example sets the `cookieless` attribute of the [sessionState Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/bda6fb8c-0076-43e3-9ce2-8cf1f8bdaa7d) element to `true` in the Web.config file to change the CookieMode property. For this sample application configuration, the CookieMode property would return <xref:System.Web.HttpCookieMode>.  \n  \n```  \n<configuration>  \n  <system.web>  \n    <sessionState  \n      mode=\"InProc\"  \n      cookieless=\"true\"  \n      timeout=\"30\" />  \n  </system.web>  \n</configuration>  \n```"
  syntax:
    content: public System.Web.HttpCookieMode CookieMode { get; }
    return:
      type: System.Web.HttpCookieMode
      description: "중 하나는 <xref href=&quot;System.Web.HttpCookieMode&quot;> </xref> 쿠키 없는 세션에 대 한 응용 프로그램을 구성할 지 여부를 나타내는 값입니다. 기본값은 <xref href=&quot;System.Web.HttpCookieMode&quot;> </xref>합니다."
  overload: System.Web.SessionState.IHttpSessionState.CookieMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: IHttpSessionState.CopyTo(Array,Int32)
  fullName: System.Web.SessionState.IHttpSessionState.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "배열의 지정한 인덱스에서 시작 하는&1; 차원 배열에 세션 상태 항목 값의 컬렉션을 복사 합니다."
  remarks: ''
  example:
  - "The following code example implements the CopyTo method of the <xref:System.Web.SessionState.IHttpSessionState> interface to copy session-state item values to an array.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#22](~/add/codesnippet/csharp/m-system.web.sessionstat_11_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#22](~/add/codesnippet/visualbasic/m-system.web.sessionstat_11_1.vb)]"
  syntax:
    content: public void CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "<xref:System.Array>세션 값을 받는.</xref:System.Array>"
    - id: index
      type: System.Int32
      description: "인덱스 `array` 복사를 시작할 위치입니다."
  overload: System.Web.SessionState.IHttpSessionState.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.Count
  id: Count
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: Count
  nameWithType: IHttpSessionState.Count
  fullName: System.Web.SessionState.IHttpSessionState.Count
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "세션 상태 항목 컬렉션의 항목 수를 가져옵니다."
  remarks: ''
  example:
  - "The following code example implements the Count property of the <xref:System.Web.SessionState.IHttpSessionState> interface to return the number of items in the internal session-state item collection.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#19](~/add/codesnippet/csharp/p-system.web.sessionstat_11_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#19](~/add/codesnippet/visualbasic/p-system.web.sessionstat_11_1.vb)]"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "세션 상태 항목 컬렉션의 항목 수입니다."
  overload: System.Web.SessionState.IHttpSessionState.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.GetEnumerator
  id: GetEnumerator
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: IHttpSessionState.GetEnumerator()
  fullName: System.Web.SessionState.IHttpSessionState.GetEnumerator()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "현재 세션의 모든 세션 상태 항목 값을 읽는 데 사용할 수 있는 열거자를 반환 합니다."
  remarks: ''
  example:
  - "The following code example implements the GetEnumerator method of the <xref:System.Web.SessionState.IHttpSessionState> interface to return an enumerator for the internal session-state item collection.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#21](~/add/codesnippet/csharp/m-system.web.sessionstat_17_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#21](~/add/codesnippet/visualbasic/m-system.web.sessionstat_17_1.vb)]"
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "<xref:System.Collections.IEnumerator>세션 상태 항목 컬렉션의 값을 반복할 수 있는.</xref:System.Collections.IEnumerator>"
  overload: System.Web.SessionState.IHttpSessionState.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.IsCookieless
  id: IsCookieless
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: IsCookieless
  nameWithType: IHttpSessionState.IsCookieless
  fullName: System.Web.SessionState.IHttpSessionState.IsCookieless
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "세션 ID에 HTTP 쿠키에 저장 된 URL에 포함 여부를 나타내는 값을 가져옵니다."
  remarks: "쿠키 없는 세션에 대 한 자세한 내용은 참조 하십시오. [세션 식별자](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example implements the IsCookieless property of the <xref:System.Web.SessionState.IHttpSessionState> interface.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#6](~/add/codesnippet/csharp/p-system.web.sessionstat_7_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#6](~/add/codesnippet/visualbasic/p-system.web.sessionstat_7_1.vb)]"
  syntax:
    content: public bool IsCookieless { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>세션은 URL에 포함 되어 있는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.SessionState.IHttpSessionState.IsCookieless*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.IsNewSession
  id: IsNewSession
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: IsNewSession
  nameWithType: IHttpSessionState.IsNewSession
  fullName: System.Web.SessionState.IHttpSessionState.IsNewSession
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "현재 요청으로 세션이 만들어졌는지 여부를 나타내는 값을 가져옵니다."
  remarks: ''
  example:
  - "The following code example implements the IsNewSession property of the <xref:System.Web.SessionState.IHttpSessionState> interface.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#4](~/add/codesnippet/csharp/p-system.web.sessionstat_19_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#4](~/add/codesnippet/visualbasic/p-system.web.sessionstat_19_1.vb)]"
  syntax:
    content: public bool IsNewSession { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>현재 요청; 사용 세션을 만든 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.SessionState.IHttpSessionState.IsNewSession*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.IsReadOnly
  id: IsReadOnly
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: IHttpSessionState.IsReadOnly
  fullName: System.Web.SessionState.IHttpSessionState.IsReadOnly
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "세션이 읽기 전용인 지 여부를 나타내는 값을 가져옵니다."
  remarks: "세션 상태에 읽기 전용으로 설정 하 여 설정 되 고 <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>페이지 특성을 `ReadOnly`.</xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>"
  example:
  - "The following code example implements the IsReadOnly property of the <xref:System.Web.SessionState.IHttpSessionState> interface to return the value of an internal variable that was set in the constructor.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#24](~/add/codesnippet/csharp/p-system.web.sessionstat_4_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#24](~/add/codesnippet/visualbasic/p-system.web.sessionstat_4_1.vb)]"
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>읽기 전용 이면 인 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.SessionState.IHttpSessionState.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.IsSynchronized
  id: IsSynchronized
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: IHttpSessionState.IsSynchronized
  fullName: System.Web.SessionState.IHttpSessionState.IsSynchronized
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "세션 상태 값의 컬렉션에 대 한 액세스가 동기화 되어 있는지 여부를 나타내는 값을 (스레드로부터 안전함)을 가져옵니다."
  remarks: ''
  example:
  - "The following code example implements the IsSynchronized property of the <xref:System.Web.SessionState.IHttpSessionState> interface.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#25](~/add/codesnippet/csharp/p-system.web.sessionstat_1_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#25](~/add/codesnippet/visualbasic/p-system.web.sessionstat_1_1.vb)]"
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>컬렉션에 대 한 액세스가 경우 동기화 (스레드로부터 안전함). 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.SessionState.IHttpSessionState.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: IHttpSessionState.Item(Int32)
  fullName: System.Web.SessionState.IHttpSessionState.Item(Int32)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "숫자 인덱스로 세션 상태 항목 값을 가져오거나 설정 합니다."
  remarks: ''
  example:
  - "The following code example implements the <xref:System.Web.SessionState.IHttpSessionState.Item%2A> property of the <xref:System.Web.SessionState.IHttpSessionState> interface to store and return an internal dictionary session-state item value by numeric index.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#14](~/add/codesnippet/csharp/p-system.web.sessionstat_23_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#14](~/add/codesnippet/visualbasic/p-system.web.sessionstat_23_1.vb)]"
  syntax:
    content: public object this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "세션 상태 항목 값의 숫자 인덱스입니다."
    return:
      type: System.Object
      description: "에 지정 된 세션 상태 항목 값에서 <code> index </code> 매개 변수입니다."
  overload: System.Web.SessionState.IHttpSessionState.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.Item(System.String)
  id: Item(System.String)
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: Item(String)
  nameWithType: IHttpSessionState.Item(String)
  fullName: System.Web.SessionState.IHttpSessionState.Item(String)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "이름으로 세션 상태 항목 값을 가져오거나 설정 합니다."
  remarks: ''
  example:
  - "The following code example implements the Item property of the <xref:System.Web.SessionState.IHttpSessionState> interface to store and return an internal dictionary session-state item value by its key name.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#13](~/add/codesnippet/csharp/p-system.web.sessionstat_16_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#13](~/add/codesnippet/visualbasic/p-system.web.sessionstat_16_1.vb)]"
  syntax:
    content: public object this[string name] { get; set; }
    parameters:
    - id: name
      type: System.String
      description: "세션 상태 항목 값의 키 이름입니다."
    return:
      type: System.Object
      description: "에 지정 된 세션 상태 항목 값에서 <code> name </code> 매개 변수입니다."
  overload: System.Web.SessionState.IHttpSessionState.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.Keys
  id: Keys
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: Keys
  nameWithType: IHttpSessionState.Keys
  fullName: System.Web.SessionState.IHttpSessionState.Keys
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "세션 상태 항목 컬렉션에 저장 된 모든 값에 대 한 키의 컬렉션을 가져옵니다."
  remarks: ''
  example:
  - "The following code example implements the Keys property of the <xref:System.Web.SessionState.IHttpSessionState> interface to return a collection of session-state item key names from the internal session-state item collection.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#20](~/add/codesnippet/csharp/p-system.web.sessionstat_15_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#20](~/add/codesnippet/visualbasic/p-system.web.sessionstat_15_1.vb)]"
  syntax:
    content: public System.Collections.Specialized.NameObjectCollectionBase.KeysCollection Keys { get; }
    return:
      type: System.Collections.Specialized.NameObjectCollectionBase.KeysCollection
      description: "<xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection>모든 세션 항목 키가 들어 있는.</xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection>"
  overload: System.Web.SessionState.IHttpSessionState.Keys*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.LCID
  id: LCID
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: LCID
  nameWithType: IHttpSessionState.LCID
  fullName: System.Web.SessionState.IHttpSessionState.LCID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "현재 세션의 로캘 식별자 (LCID)를 가져오거나 설정 합니다."
  remarks: "이 `LCID` 속성은 이전 버전 ASP와의 호환성을 위해 제공 됩니다. ASP 페이지와 이전 버전과 호환성을 유지 해야 하는 경우 사용 하 여는 <xref:System.Globalization.CultureInfo.LCID%2A>속성 대신.</xref:System.Globalization.CultureInfo.LCID%2A>       ASP.NET 세션 상태에서 로캘 식별자를 저장 하지 않습니다. LCID 속성 호출의 <xref:System.Globalization.CultureInfo.LCID%2A>식별자를 설정 하 고 가져오는.</xref:System.Globalization.CultureInfo.LCID%2A>"
  example:
  - "The following code example implements the LCID property of the <xref:System.Web.SessionState.IHttpSessionState> interface to get and set the locale identifier for the current page.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#9](~/add/codesnippet/csharp/p-system.web.sessionstat_12_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#9](~/add/codesnippet/visualbasic/p-system.web.sessionstat_12_1.vb)]"
  syntax:
    content: public int LCID { get; set; }
    return:
      type: System.Int32
      description: "A <xref:System.Globalization.CultureInfo>현재 세션의 culture를 지정 하는 인스턴스가.</xref:System.Globalization.CultureInfo>"
  overload: System.Web.SessionState.IHttpSessionState.LCID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.Mode
  id: Mode
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: Mode
  nameWithType: IHttpSessionState.Mode
  fullName: System.Web.SessionState.IHttpSessionState.Mode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "현재 세션 상태 모드를 가져옵니다."
  remarks: "다른 세션 상태 모드에 대 한 자세한 내용은 참조 [세션 상태 모드](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example implements the Mode property of the <xref:System.Web.SessionState.IHttpSessionState> interface.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#5](~/add/codesnippet/csharp/p-system.web.sessionstat_13_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#5](~/add/codesnippet/visualbasic/p-system.web.sessionstat_13_1.vb)]"
  syntax:
    content: public System.Web.SessionState.SessionStateMode Mode { get; }
    return:
      type: System.Web.SessionState.SessionStateMode
      description: "중 하나는 <xref href=&quot;System.Web.SessionState.SessionStateMode&quot;> </xref> 값입니다."
  overload: System.Web.SessionState.IHttpSessionState.Mode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.Remove(System.String)
  id: Remove(System.String)
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: Remove(String)
  nameWithType: IHttpSessionState.Remove(String)
  fullName: System.Web.SessionState.IHttpSessionState.Remove(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "세션 상태 항목 컬렉션에서 항목을 삭제 합니다."
  remarks: ''
  example:
  - "The following code example implements the Remove method of the <xref:System.Web.SessionState.IHttpSessionState> interface to delete a session-state item from the session-state item collection by key name.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#16](~/add/codesnippet/csharp/m-system.web.sessionstat_18_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#16](~/add/codesnippet/visualbasic/m-system.web.sessionstat_18_1.vb)]"
  syntax:
    content: public void Remove (string name);
    parameters:
    - id: name
      type: System.String
      description: "세션 상태 항목 컬렉션에서 삭제할 항목의 이름입니다."
  overload: System.Web.SessionState.IHttpSessionState.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.RemoveAll
  id: RemoveAll
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: RemoveAll()
  nameWithType: IHttpSessionState.RemoveAll()
  fullName: System.Web.SessionState.IHttpSessionState.RemoveAll()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "세션 상태 항목 컬렉션에서 모든 값을 지웁니다."
  remarks: "RemoveAll <xref:System.Web.SessionState.IHttpSessionState.Clear%2A>.</xref:System.Web.SessionState.IHttpSessionState.Clear%2A> 동일한 기능을 수행합니다."
  example:
  - "The following code example implements the RemoveAll method of the <xref:System.Web.SessionState.IHttpSessionState> interface to delete all items from an internal session-state item collection.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#18](~/add/codesnippet/csharp/m-system.web.sessionstat_1_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#18](~/add/codesnippet/visualbasic/m-system.web.sessionstat_1_1.vb)]"
  syntax:
    content: public void RemoveAll ();
    parameters: []
  overload: System.Web.SessionState.IHttpSessionState.RemoveAll*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: IHttpSessionState.RemoveAt(Int32)
  fullName: System.Web.SessionState.IHttpSessionState.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "세션 상태 항목 컬렉션에서 지정된 된 인덱스에 항목을 삭제 합니다."
  remarks: ''
  example:
  - "The following code example implements the RemoveAt method of the <xref:System.Web.SessionState.IHttpSessionState> interface to delete a session-state item from the internal session-state item collection by numerical index.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#17](~/add/codesnippet/csharp/m-system.web.sessionstat_15_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#17](~/add/codesnippet/visualbasic/m-system.web.sessionstat_15_1.vb)]"
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "세션 상태 컬렉션에서 제거할 항목의 인덱스입니다."
  overload: System.Web.SessionState.IHttpSessionState.RemoveAt*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.SessionID
  id: SessionID
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: SessionID
  nameWithType: IHttpSessionState.SessionID
  fullName: System.Web.SessionState.IHttpSessionState.SessionID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "세션에 대 한 고유 세션 식별자를 가져옵니다."
  remarks: ''
  example:
  - "The following code example implements the SessionID property of the <xref:System.Web.SessionState.IHttpSessionState> interface.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#3](~/add/codesnippet/csharp/p-system.web.sessionstat_20_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#3](~/add/codesnippet/visualbasic/p-system.web.sessionstat_20_1.vb)]"
  syntax:
    content: public string SessionID { get; }
    return:
      type: System.String
      description: "세션 id입니다."
  overload: System.Web.SessionState.IHttpSessionState.SessionID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.StaticObjects
  id: StaticObjects
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: StaticObjects
  nameWithType: IHttpSessionState.StaticObjects
  fullName: System.Web.SessionState.IHttpSessionState.StaticObjects
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "으로 선언 된 개체의 컬렉션을 가져옵니다 <xref uid=&quot;langword_csharp_&lt;object Runat=&quot;Server&quot; Scope=&quot;Session&quot;/&gt;&quot; name=&quot;&lt;object Runat=&quot;Server&quot; Scope=&quot;Session&quot;/&gt;&quot; href=&quot;&quot;> </xref> Global.asax는 ASP.NET 응용 프로그램 파일 내에 태그입니다."
  remarks: '`StaticObjects`이전 버전 ASP와의 호환성을 위해 제공 됩니다.'
  example:
  - "The following code example implements the StaticObjects property of the <xref:System.Web.SessionState.IHttpSessionState> interface.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#12](~/add/codesnippet/csharp/p-system.web.sessionstat_17_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#12](~/add/codesnippet/visualbasic/p-system.web.sessionstat_17_1.vb)]"
  syntax:
    content: public System.Web.HttpStaticObjectsCollection StaticObjects { get; }
    return:
      type: System.Web.HttpStaticObjectsCollection
      description: "<xref href=&quot;System.Web.HttpStaticObjectsCollection&quot;> </xref> Global.asax 파일에 선언 된 개체가 들어 있는입니다."
  overload: System.Web.SessionState.IHttpSessionState.StaticObjects*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.SyncRoot
  id: SyncRoot
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: SyncRoot
  nameWithType: IHttpSessionState.SyncRoot
  fullName: System.Web.SessionState.IHttpSessionState.SyncRoot
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "세션 상태 값의 컬렉션에 대 한 액세스를 동기화 하는 데 사용할 수 있는 개체를 가져옵니다."
  remarks: ''
  example:
  - "The following code example implements the SyncRoot property to return a copy of the current object that implements the <xref:System.Web.SessionState.IHttpSessionState> interface.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#23](~/add/codesnippet/csharp/p-system.web.sessionstat_2_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#23](~/add/codesnippet/visualbasic/p-system.web.sessionstat_2_1.vb)]"
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "컬렉션에 대 한 액세스를 동기화 하는 데 사용할 수 있는 개체입니다."
  overload: System.Web.SessionState.IHttpSessionState.SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.Timeout
  id: Timeout
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: Timeout
  nameWithType: IHttpSessionState.Timeout
  fullName: System.Web.SessionState.IHttpSessionState.Timeout
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "가져오고 설정 하는 시간 제한 (분) 세션 상태 공급자가 세션을 종료 하기 전까지 요청 간에 허용 합니다."
  remarks: ''
  example:
  - "The following code example implements the Timeout property of the <xref:System.Web.SessionState.IHttpSessionState> interface to get and set the session timeout value that is stored in an internal variable created in the class constructor.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#2](~/add/codesnippet/csharp/p-system.web.sessionstat_6_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#2](~/add/codesnippet/visualbasic/p-system.web.sessionstat_6_1.vb)]"
  syntax:
    content: public int Timeout { get; set; }
    return:
      type: System.Int32
      description: "제한 시간 (분)에서입니다."
  overload: System.Web.SessionState.IHttpSessionState.Timeout*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.SessionState.IHttpSessionState.Abandon
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: Abandon()
  nameWithType: IHttpSessionState.Abandon()
  fullName: System.Web.SessionState.IHttpSessionState.Abandon()
- uid: System.Web.SessionState.IHttpSessionState.Add(System.String,System.Object)
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: Add(String,Object)
  nameWithType: IHttpSessionState.Add(String,Object)
  fullName: System.Web.SessionState.IHttpSessionState.Add(String,Object)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.SessionState.IHttpSessionState.Clear
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: Clear()
  nameWithType: IHttpSessionState.Clear()
  fullName: System.Web.SessionState.IHttpSessionState.Clear()
- uid: System.Web.SessionState.IHttpSessionState.CodePage
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: CodePage
  nameWithType: IHttpSessionState.CodePage
  fullName: System.Web.SessionState.IHttpSessionState.CodePage
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.SessionState.IHttpSessionState.CookieMode
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: CookieMode
  nameWithType: IHttpSessionState.CookieMode
  fullName: System.Web.SessionState.IHttpSessionState.CookieMode
- uid: System.Web.HttpCookieMode
  parent: System.Web
  isExternal: false
  name: HttpCookieMode
  nameWithType: HttpCookieMode
  fullName: System.Web.HttpCookieMode
- uid: System.Web.SessionState.IHttpSessionState.CopyTo(System.Array,System.Int32)
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: IHttpSessionState.CopyTo(Array,Int32)
  fullName: System.Web.SessionState.IHttpSessionState.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Web.SessionState.IHttpSessionState.Count
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: Count
  nameWithType: IHttpSessionState.Count
  fullName: System.Web.SessionState.IHttpSessionState.Count
- uid: System.Web.SessionState.IHttpSessionState.GetEnumerator
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: GetEnumerator()
  nameWithType: IHttpSessionState.GetEnumerator()
  fullName: System.Web.SessionState.IHttpSessionState.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Web.SessionState.IHttpSessionState.IsCookieless
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: IsCookieless
  nameWithType: IHttpSessionState.IsCookieless
  fullName: System.Web.SessionState.IHttpSessionState.IsCookieless
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.SessionState.IHttpSessionState.IsNewSession
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: IsNewSession
  nameWithType: IHttpSessionState.IsNewSession
  fullName: System.Web.SessionState.IHttpSessionState.IsNewSession
- uid: System.Web.SessionState.IHttpSessionState.IsReadOnly
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: IsReadOnly
  nameWithType: IHttpSessionState.IsReadOnly
  fullName: System.Web.SessionState.IHttpSessionState.IsReadOnly
- uid: System.Web.SessionState.IHttpSessionState.IsSynchronized
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: IsSynchronized
  nameWithType: IHttpSessionState.IsSynchronized
  fullName: System.Web.SessionState.IHttpSessionState.IsSynchronized
- uid: System.Web.SessionState.IHttpSessionState.Item(System.Int32)
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: Item(Int32)
  nameWithType: IHttpSessionState.Item(Int32)
  fullName: System.Web.SessionState.IHttpSessionState.Item(Int32)
- uid: System.Web.SessionState.IHttpSessionState.Item(System.String)
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: Item(String)
  nameWithType: IHttpSessionState.Item(String)
  fullName: System.Web.SessionState.IHttpSessionState.Item(String)
- uid: System.Web.SessionState.IHttpSessionState.Keys
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: Keys
  nameWithType: IHttpSessionState.Keys
  fullName: System.Web.SessionState.IHttpSessionState.Keys
- uid: System.Collections.Specialized.NameObjectCollectionBase.KeysCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameObjectCollectionBase+KeysCollection
  nameWithType: NameObjectCollectionBase+KeysCollection
  fullName: System.Collections.Specialized.NameObjectCollectionBase+KeysCollection
- uid: System.Web.SessionState.IHttpSessionState.LCID
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: LCID
  nameWithType: IHttpSessionState.LCID
  fullName: System.Web.SessionState.IHttpSessionState.LCID
- uid: System.Web.SessionState.IHttpSessionState.Mode
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: Mode
  nameWithType: IHttpSessionState.Mode
  fullName: System.Web.SessionState.IHttpSessionState.Mode
- uid: System.Web.SessionState.SessionStateMode
  parent: System.Web.SessionState
  isExternal: false
  name: SessionStateMode
  nameWithType: SessionStateMode
  fullName: System.Web.SessionState.SessionStateMode
- uid: System.Web.SessionState.IHttpSessionState.Remove(System.String)
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: Remove(String)
  nameWithType: IHttpSessionState.Remove(String)
  fullName: System.Web.SessionState.IHttpSessionState.Remove(String)
- uid: System.Web.SessionState.IHttpSessionState.RemoveAll
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: RemoveAll()
  nameWithType: IHttpSessionState.RemoveAll()
  fullName: System.Web.SessionState.IHttpSessionState.RemoveAll()
- uid: System.Web.SessionState.IHttpSessionState.RemoveAt(System.Int32)
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: IHttpSessionState.RemoveAt(Int32)
  fullName: System.Web.SessionState.IHttpSessionState.RemoveAt(Int32)
- uid: System.Web.SessionState.IHttpSessionState.SessionID
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: SessionID
  nameWithType: IHttpSessionState.SessionID
  fullName: System.Web.SessionState.IHttpSessionState.SessionID
- uid: System.Web.SessionState.IHttpSessionState.StaticObjects
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: StaticObjects
  nameWithType: IHttpSessionState.StaticObjects
  fullName: System.Web.SessionState.IHttpSessionState.StaticObjects
- uid: System.Web.HttpStaticObjectsCollection
  parent: System.Web
  isExternal: false
  name: HttpStaticObjectsCollection
  nameWithType: HttpStaticObjectsCollection
  fullName: System.Web.HttpStaticObjectsCollection
- uid: System.Web.SessionState.IHttpSessionState.SyncRoot
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: SyncRoot
  nameWithType: IHttpSessionState.SyncRoot
  fullName: System.Web.SessionState.IHttpSessionState.SyncRoot
- uid: System.Web.SessionState.IHttpSessionState.Timeout
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: Timeout
  nameWithType: IHttpSessionState.Timeout
  fullName: System.Web.SessionState.IHttpSessionState.Timeout
- uid: System.Web.SessionState.IHttpSessionState.Abandon*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: Abandon
  nameWithType: IHttpSessionState.Abandon
- uid: System.Web.SessionState.IHttpSessionState.Add*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: Add
  nameWithType: IHttpSessionState.Add
- uid: System.Web.SessionState.IHttpSessionState.Clear*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: Clear
  nameWithType: IHttpSessionState.Clear
- uid: System.Web.SessionState.IHttpSessionState.CodePage*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: CodePage
  nameWithType: IHttpSessionState.CodePage
- uid: System.Web.SessionState.IHttpSessionState.CookieMode*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: CookieMode
  nameWithType: IHttpSessionState.CookieMode
- uid: System.Web.SessionState.IHttpSessionState.CopyTo*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: CopyTo
  nameWithType: IHttpSessionState.CopyTo
- uid: System.Web.SessionState.IHttpSessionState.Count*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: Count
  nameWithType: IHttpSessionState.Count
- uid: System.Web.SessionState.IHttpSessionState.GetEnumerator*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: GetEnumerator
  nameWithType: IHttpSessionState.GetEnumerator
- uid: System.Web.SessionState.IHttpSessionState.IsCookieless*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: IsCookieless
  nameWithType: IHttpSessionState.IsCookieless
- uid: System.Web.SessionState.IHttpSessionState.IsNewSession*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: IsNewSession
  nameWithType: IHttpSessionState.IsNewSession
- uid: System.Web.SessionState.IHttpSessionState.IsReadOnly*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: IsReadOnly
  nameWithType: IHttpSessionState.IsReadOnly
- uid: System.Web.SessionState.IHttpSessionState.IsSynchronized*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: IsSynchronized
  nameWithType: IHttpSessionState.IsSynchronized
- uid: System.Web.SessionState.IHttpSessionState.Item*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: Item
  nameWithType: IHttpSessionState.Item
- uid: System.Web.SessionState.IHttpSessionState.Keys*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: Keys
  nameWithType: IHttpSessionState.Keys
- uid: System.Web.SessionState.IHttpSessionState.LCID*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: LCID
  nameWithType: IHttpSessionState.LCID
- uid: System.Web.SessionState.IHttpSessionState.Mode*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: Mode
  nameWithType: IHttpSessionState.Mode
- uid: System.Web.SessionState.IHttpSessionState.Remove*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: Remove
  nameWithType: IHttpSessionState.Remove
- uid: System.Web.SessionState.IHttpSessionState.RemoveAll*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: RemoveAll
  nameWithType: IHttpSessionState.RemoveAll
- uid: System.Web.SessionState.IHttpSessionState.RemoveAt*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: RemoveAt
  nameWithType: IHttpSessionState.RemoveAt
- uid: System.Web.SessionState.IHttpSessionState.SessionID*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: SessionID
  nameWithType: IHttpSessionState.SessionID
- uid: System.Web.SessionState.IHttpSessionState.StaticObjects*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: StaticObjects
  nameWithType: IHttpSessionState.StaticObjects
- uid: System.Web.SessionState.IHttpSessionState.SyncRoot*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: SyncRoot
  nameWithType: IHttpSessionState.SyncRoot
- uid: System.Web.SessionState.IHttpSessionState.Timeout*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: Timeout
  nameWithType: IHttpSessionState.Timeout
