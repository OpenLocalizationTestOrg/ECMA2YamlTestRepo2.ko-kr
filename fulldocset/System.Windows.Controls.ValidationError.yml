### YamlMime:ManagedReference
items:
- uid: System.Windows.Controls.ValidationError
  id: ValidationError
  children:
  - System.Windows.Controls.ValidationError.#ctor(System.Windows.Controls.ValidationRule,System.Object)
  - System.Windows.Controls.ValidationError.#ctor(System.Windows.Controls.ValidationRule,System.Object,System.Object,System.Exception)
  - System.Windows.Controls.ValidationError.BindingInError
  - System.Windows.Controls.ValidationError.ErrorContent
  - System.Windows.Controls.ValidationError.Exception
  - System.Windows.Controls.ValidationError.RuleInError
  langs:
  - csharp
  name: ValidationError
  nameWithType: ValidationError
  fullName: System.Windows.Controls.ValidationError
  type: Class
  summary: "때 나타냅니다 바인딩에서으로 생성 된 유효성 검사 오류가 엔진는 <xref href=&quot;System.Windows.Controls.ValidationRule&quot;> </xref> 유효성 검사 오류를 보고 또는 <xref:System.Windows.Controls.Validation.MarkInvalid*>메서드 명시적으로.</xref:System.Windows.Controls.Validation.MarkInvalid*>"
  remarks: "[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] 데이터 바인딩 모델을 사용 하면 유효성 검사 규칙을 연결할 수 있습니다 프로그램 <xref:System.Windows.Data.Binding>개체입니다.</xref:System.Windows.Data.Binding> 변환기가 호출 되기 전에 유효성 검사 대상 소스 값을 전송 하는 동안 발생 합니다. 다음 유효성 검사 프로세스에 설명 합니다.      1.  데이터 바인딩 엔진에 추가 된 모든 ValidationError 대상 속성 source 속성 값이 전송 되 고 하는 경우 먼저 제거는 <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName>연결 된 바인딩된 요소의 속성입니다.</xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> 그런 다음 사용자 지정 유효성 검사 규칙에 대 한 해당 <xref:System.Windows.Data.Binding> <xref:System.Windows.Controls.ValidationRule.Validate%2A>각 <xref:System.Windows.Controls.ValidationRule>그 중 하나가 실패할 때까지 하거나 모두 통과 하</xref:System.Windows.Controls.ValidationRule> 는 메서드</xref:System.Windows.Controls.ValidationRule.Validate%2A> 호출 하는 경우,</xref:System.Windows.Data.Binding> 정의 되어 있는지 확인      2.  통과 하지 않는 사용자 지정 규칙을 바인딩 엔진 ValidationError 개체를 만들고에 추가 된 <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName>바인딩된 요소의 컬렉션입니다.</xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> 때 <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName>비어 있지 않으면는 <xref:System.Windows.Controls.Validation.HasError%2A?displayProperty=fullName>요소의 연결된 속성이로 설정 되어 `true`.</xref:System.Windows.Controls.Validation.HasError%2A?displayProperty=fullName> </xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> 또한 경우는 <xref:System.Windows.Data.Binding.NotifyOnValidationError%2A>속성의는 <xref:System.Windows.Data.Binding>로 설정 되어 `true`, 바인딩 엔진에서 발생 한 후의 <xref:System.Windows.Controls.Validation.Error?displayProperty=fullName>요소에서 연결 된 이벤트입니다.</xref:System.Windows.Controls.Validation.Error?displayProperty=fullName> </xref:System.Windows.Data.Binding> </xref:System.Windows.Data.Binding.NotifyOnValidationError%2A>      3.  모든 규칙이 통과 하는 경우 있을 경우 바인딩 엔진이 다음 변환기를 호출 합니다.      4.  변환기가 통과 하는 경우 바인딩 엔진이 소스 속성의 setter를 호출 합니다.      5.  바인딩에 다음과 같은 경우는 <xref:System.Windows.Controls.ExceptionValidationRule>연관 <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A>.</xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A> 가 있는지 확인 단계 3 또는 4 중 예외가 발생 바인딩 엔진</xref:System.Windows.Controls.ExceptionValidationRule> 사용할 수는 <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A>예외를 처리 하기 위한 사용자 지정 처리기를 제공 하는 콜백.</xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A> 경우는 <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A>에 지정 되어 있지는 <xref:System.Windows.Data.Binding>, 바인딩 엔진을 ValidationError 예외를 사용 하 여 만들고에 추가 된 <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName>바인딩된 요소의 컬렉션입니다.</xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> </xref:System.Windows.Data.Binding> </xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A>       유효한 값을 전송 (원본이 나 대상에는 원본 또는 대상) 어느 방향으로든에서 지워집니다는 <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName>연결 된 속성입니다.</xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName>"
  example:
  - "The following example shows a style trigger that creates a <xref:System.Windows.Controls.ToolTip> that reports a validation error message. The <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> attached property returns a collection of ValidationError objects on the bound element.  \n  \n [!code-xml[DataBindingLab#14](~/add/codesnippet/xaml/DataBindingLab/DataBindingLabApp.xaml#14)]"
  syntax:
    content: public class ValidationError
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Controls.ValidationError.#ctor(System.Windows.Controls.ValidationRule,System.Object)
  id: '#ctor(System.Windows.Controls.ValidationRule,System.Object)'
  parent: System.Windows.Controls.ValidationError
  langs:
  - csharp
  name: ValidationError(ValidationRule,Object)
  nameWithType: ValidationError.ValidationError(ValidationRule,Object)
  fullName: System.Windows.Controls.ValidationError.ValidationError(ValidationRule,Object)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Windows.Controls.ValidationError&quot;> </xref> 지정된 된 매개 변수를 사용 하 여 클래스입니다."
  syntax:
    content: public ValidationError (System.Windows.Controls.ValidationRule ruleInError, object bindingInError);
    parameters:
    - id: ruleInError
      type: System.Windows.Controls.ValidationRule
      description: "유효성 검사 오류를 검색 하는 규칙입니다."
    - id: bindingInError
      type: System.Object
      description: "<xref href=&quot;System.Windows.Data.BindingExpression&quot;> </xref> 또는 <xref href=&quot;System.Windows.Data.MultiBindingExpression&quot;> </xref> 유효성 검사 오류가 있는 개체가 있습니다."
  overload: System.Windows.Controls.ValidationError.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.ValidationError.#ctor(System.Windows.Controls.ValidationRule,System.Object,System.Object,System.Exception)
  id: '#ctor(System.Windows.Controls.ValidationRule,System.Object,System.Object,System.Exception)'
  parent: System.Windows.Controls.ValidationError
  langs:
  - csharp
  name: ValidationError(ValidationRule,Object,Object,Exception)
  nameWithType: ValidationError.ValidationError(ValidationRule,Object,Object,Exception)
  fullName: System.Windows.Controls.ValidationError.ValidationError(ValidationRule,Object,Object,Exception)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Windows.Controls.ValidationError&quot;> </xref> 지정된 된 매개 변수를 사용 하 여 클래스입니다."
  syntax:
    content: public ValidationError (System.Windows.Controls.ValidationRule ruleInError, object bindingInError, object errorContent, Exception exception);
    parameters:
    - id: ruleInError
      type: System.Windows.Controls.ValidationRule
      description: "유효성 검사 오류를 검색 하는 규칙입니다."
    - id: bindingInError
      type: System.Object
      description: "<xref href=&quot;System.Windows.Data.BindingExpression&quot;> </xref> 또는 <xref href=&quot;System.Windows.Data.MultiBindingExpression&quot;> </xref> 유효성 검사 오류가 있는 개체가 있습니다."
    - id: errorContent
      type: System.Object
      description: "오류에 대 한 정보입니다."
    - id: exception
      type: System.Exception
      description: "유효성 검사 오류를 발생 시킨 예외입니다. 이 매개 변수는 선택 사항이 며로 설정할 수 있습니다 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Controls.ValidationError.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.ValidationError.BindingInError
  id: BindingInError
  parent: System.Windows.Controls.ValidationError
  langs:
  - csharp
  name: BindingInError
  nameWithType: ValidationError.BindingInError
  fullName: System.Windows.Controls.ValidationError.BindingInError
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Gets the <xref href=&quot;System.Windows.Data.BindingExpression&quot;></xref> or <xref href=&quot;System.Windows.Data.MultiBindingExpression&quot;></xref> object of this <xref href=&quot;System.Windows.Controls.ValidationError&quot;></xref>. 개체가 잘못 표시 된 명시적으로 되었거나 실패 한 유효성 검사 규칙이 합니다."
  syntax:
    content: public object BindingInError { get; }
    return:
      type: System.Object
      description: "The <xref href=&quot;System.Windows.Data.BindingExpression&quot;></xref> or <xref href=&quot;System.Windows.Data.MultiBindingExpression&quot;></xref> object of this <xref href=&quot;System.Windows.Controls.ValidationError&quot;></xref>."
  overload: System.Windows.Controls.ValidationError.BindingInError*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.ValidationError.ErrorContent
  id: ErrorContent
  parent: System.Windows.Controls.ValidationError
  langs:
  - csharp
  name: ErrorContent
  nameWithType: ValidationError.ErrorContent
  fullName: System.Windows.Controls.ValidationError.ErrorContent
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "이 대 한 추가 컨텍스트를 제공 하는 개체를 가져오거나 설정 합니다. <xref href=&quot;System.Windows.Controls.ValidationError&quot;> </xref>, 예: 오류를 설명 하는 문자열입니다."
  remarks: "<a name=&quot;xamlTextUsage_ErrorContent&quot;></a># # 예를 보려면 예제 부분 XAML 텍스트 참조 나와 있습니다."
  example:
  - "The following example shows a style trigger that creates a <xref:System.Windows.Controls.ToolTip> that reports a validation error message. The <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> attached property returns a collection of <xref:System.Windows.Controls.ValidationError> objects on the bound element.  \n  \n [!code-xml[DataBindingLab#14](~/add/codesnippet/xaml/DataBindingLab/DataBindingLabApp.xaml#14)]"
  syntax:
    content: public object ErrorContent { get; set; }
    return:
      type: System.Object
      description: "이 대 한 추가 컨텍스트를 제공 하는 개체 <xref href=&quot;System.Windows.Controls.ValidationError&quot;> </xref>합니다."
  overload: System.Windows.Controls.ValidationError.ErrorContent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.ValidationError.Exception
  id: Exception
  parent: System.Windows.Controls.ValidationError
  langs:
  - csharp
  name: Exception
  nameWithType: ValidationError.Exception
  fullName: System.Windows.Controls.ValidationError.Exception
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "가져오거나는 <xref:System.Exception>이의 원인이 된 개체 <xref href=&quot;System.Windows.Controls.ValidationError&quot;> </xref>의 오류는 예외가 발생 하는 경우.</xref:System.Exception>"
  syntax:
    content: public Exception Exception { get; set; }
    return:
      type: System.Exception
      description: "<xref:System.Exception>의 오류는 예외가 발생 하는 경우.</xref:System.Exception>"
  overload: System.Windows.Controls.ValidationError.Exception*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.ValidationError.RuleInError
  id: RuleInError
  parent: System.Windows.Controls.ValidationError
  langs:
  - csharp
  name: RuleInError
  nameWithType: ValidationError.RuleInError
  fullName: System.Windows.Controls.ValidationError.RuleInError
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "가져오거나는 <xref href=&quot;System.Windows.Controls.ValidationRule&quot;> </xref> 이의 원인이 된 개체 <xref href=&quot;System.Windows.Controls.ValidationError&quot;> </xref>경우 오류는 유효성 검사 규칙의 결과입니다."
  syntax:
    content: public System.Windows.Controls.ValidationRule RuleInError { get; set; }
    return:
      type: System.Windows.Controls.ValidationRule
      description: "<xref href=&quot;System.Windows.Controls.ValidationRule&quot;> </xref> 개체가 있으면 오류가 유효성 검사 규칙의 결과입니다."
  overload: System.Windows.Controls.ValidationError.RuleInError*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Windows.Controls.ValidationError.#ctor(System.Windows.Controls.ValidationRule,System.Object)
  parent: System.Windows.Controls.ValidationError
  isExternal: false
  name: ValidationError(ValidationRule,Object)
  nameWithType: ValidationError.ValidationError(ValidationRule,Object)
  fullName: System.Windows.Controls.ValidationError.ValidationError(ValidationRule,Object)
- uid: System.Windows.Controls.ValidationRule
  parent: System.Windows.Controls
  isExternal: false
  name: ValidationRule
  nameWithType: ValidationRule
  fullName: System.Windows.Controls.ValidationRule
- uid: System.Windows.Controls.ValidationError.#ctor(System.Windows.Controls.ValidationRule,System.Object,System.Object,System.Exception)
  parent: System.Windows.Controls.ValidationError
  isExternal: false
  name: ValidationError(ValidationRule,Object,Object,Exception)
  nameWithType: ValidationError.ValidationError(ValidationRule,Object,Object,Exception)
  fullName: System.Windows.Controls.ValidationError.ValidationError(ValidationRule,Object,Object,Exception)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Windows.Controls.ValidationError.BindingInError
  parent: System.Windows.Controls.ValidationError
  isExternal: false
  name: BindingInError
  nameWithType: ValidationError.BindingInError
  fullName: System.Windows.Controls.ValidationError.BindingInError
- uid: System.Windows.Controls.ValidationError.ErrorContent
  parent: System.Windows.Controls.ValidationError
  isExternal: false
  name: ErrorContent
  nameWithType: ValidationError.ErrorContent
  fullName: System.Windows.Controls.ValidationError.ErrorContent
- uid: System.Windows.Controls.ValidationError.Exception
  parent: System.Windows.Controls.ValidationError
  isExternal: false
  name: Exception
  nameWithType: ValidationError.Exception
  fullName: System.Windows.Controls.ValidationError.Exception
- uid: System.Windows.Controls.ValidationError.RuleInError
  parent: System.Windows.Controls.ValidationError
  isExternal: false
  name: RuleInError
  nameWithType: ValidationError.RuleInError
  fullName: System.Windows.Controls.ValidationError.RuleInError
- uid: System.Windows.Controls.ValidationError.#ctor*
  parent: System.Windows.Controls.ValidationError
  isExternal: false
  name: ValidationError
  nameWithType: ValidationError.ValidationError
- uid: System.Windows.Controls.ValidationError.BindingInError*
  parent: System.Windows.Controls.ValidationError
  isExternal: false
  name: BindingInError
  nameWithType: ValidationError.BindingInError
- uid: System.Windows.Controls.ValidationError.ErrorContent*
  parent: System.Windows.Controls.ValidationError
  isExternal: false
  name: ErrorContent
  nameWithType: ValidationError.ErrorContent
- uid: System.Windows.Controls.ValidationError.Exception*
  parent: System.Windows.Controls.ValidationError
  isExternal: false
  name: Exception
  nameWithType: ValidationError.Exception
- uid: System.Windows.Controls.ValidationError.RuleInError*
  parent: System.Windows.Controls.ValidationError
  isExternal: false
  name: RuleInError
  nameWithType: ValidationError.RuleInError
