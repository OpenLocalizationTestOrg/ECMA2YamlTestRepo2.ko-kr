### YamlMime:ManagedReference
items:
- uid: System.Security.AccessControl.NativeObjectSecurity
  id: NativeObjectSecurity
  children:
  - System.Security.AccessControl.NativeObjectSecurity.#ctor(System.Boolean,System.Security.AccessControl.ResourceType)
  - System.Security.AccessControl.NativeObjectSecurity.#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.NativeObjectSecurity.#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode,System.Object)
  - System.Security.AccessControl.NativeObjectSecurity.#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.String,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.NativeObjectSecurity.#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections,System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode,System.Object)
  - System.Security.AccessControl.NativeObjectSecurity.#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.String,System.Security.AccessControl.AccessControlSections,System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode,System.Object)
  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections,System.Object)
  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections,System.Object)
  langs:
  - csharp
  name: NativeObjectSecurity
  nameWithType: NativeObjectSecurity
  fullName: System.Security.AccessControl.NativeObjectSecurity
  type: Class
  summary: "액세스 제어 목록 (Acl)을 직접 조작 하지 않고 네이티브 개체에 대 한 액세스를 제어 하는 기능을 제공 합니다. 네이티브 개체 유형이 정의한는 <xref href=&quot;System.Security.AccessControl.ResourceType&quot;> </xref> 열거 합니다."
  syntax:
    content: 'public abstract class NativeObjectSecurity : System.Security.AccessControl.CommonObjectSecurity'
  inheritance:
  - System.Object
  - System.Security.AccessControl.ObjectSecurity
  - System.Security.AccessControl.CommonObjectSecurity
  implements: []
  inheritedMembers:
  - System.Security.AccessControl.CommonObjectSecurity.AddAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.AddAuditRule(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)
  - System.Security.AccessControl.CommonObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)
  - System.Security.AccessControl.CommonObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  - System.Security.AccessControl.CommonObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.SetAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.SetAuditRule(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.ObjectSecurity.AccessRightType
  - System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  - System.Security.AccessControl.ObjectSecurity.AccessRulesModified
  - System.Security.AccessControl.ObjectSecurity.AccessRuleType
  - System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical
  - System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected
  - System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical
  - System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected
  - System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  - System.Security.AccessControl.ObjectSecurity.AuditRulesModified
  - System.Security.AccessControl.ObjectSecurity.AuditRuleType
  - System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)
  - System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)
  - System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm
  - System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.GroupModified
  - System.Security.AccessControl.ObjectSecurity.IsContainer
  - System.Security.AccessControl.ObjectSecurity.IsDS
  - System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported
  - System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  - System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  - System.Security.AccessControl.ObjectSecurity.OwnerModified
  - System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.ReadLock
  - System.Security.AccessControl.ObjectSecurity.ReadUnlock
  - System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)
  - System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)
  - System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.WriteLock
  - System.Security.AccessControl.ObjectSecurity.WriteUnlock
  platform:
  - net462
- uid: System.Security.AccessControl.NativeObjectSecurity.#ctor(System.Boolean,System.Security.AccessControl.ResourceType)
  id: '#ctor(System.Boolean,System.Security.AccessControl.ResourceType)'
  parent: System.Security.AccessControl.NativeObjectSecurity
  langs:
  - csharp
  name: NativeObjectSecurity(Boolean,ResourceType)
  nameWithType: NativeObjectSecurity.NativeObjectSecurity(Boolean,ResourceType)
  fullName: System.Security.AccessControl.NativeObjectSecurity.NativeObjectSecurity(Boolean,ResourceType)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Security.AccessControl.NativeObjectSecurity&quot;> </xref> 지정된 된 값을 사용 하 여 클래스입니다."
  syntax:
    content: protected NativeObjectSecurity (bool isContainer, System.Security.AccessControl.ResourceType resourceType);
    parameters:
    - id: isContainer
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>하는 경우 새 <xref href=&quot;System.Security.AccessControl.NativeObjectSecurity&quot;> </xref> 개체 컨테이너 개체입니다."
    - id: resourceType
      type: System.Security.AccessControl.ResourceType
      description: "보안 가능 개체 유형의 새 <xref href=&quot;System.Security.AccessControl.NativeObjectSecurity&quot;> </xref> 개체가 연결 되어 있습니다."
  overload: System.Security.AccessControl.NativeObjectSecurity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.NativeObjectSecurity.#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)
  id: '#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)'
  parent: System.Security.AccessControl.NativeObjectSecurity
  langs:
  - csharp
  name: NativeObjectSecurity(Boolean,ResourceType,SafeHandle,AccessControlSections)
  nameWithType: NativeObjectSecurity.NativeObjectSecurity(Boolean,ResourceType,SafeHandle,AccessControlSections)
  fullName: System.Security.AccessControl.NativeObjectSecurity.NativeObjectSecurity(Boolean,ResourceType,SafeHandle,AccessControlSections)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Security.AccessControl.NativeObjectSecurity&quot;> </xref> 지정된 된 값을 사용 하 여 클래스입니다. 값 좋습니다는 <code> includeSections </code> 매개 변수는 생성자에 전달 하 고 유지 메서드 동일할 합니다. 자세한 내용은 설명 부분을 참조 합니다."
  remarks: "지속할 때는 <xref:System.Security.AccessControl.NativeObjectSecurity>경우 개체의 값은 `includeSections` 에 전달 된 매개 변수는 <xref:System.Security.AccessControl.NativeObjectSecurity.Persist%2A>방법은의 값과 동일한 지는 `includeSections` 매개 변수를 만드는 데 생성자에 전달 <xref:System.Security.AccessControl.NativeObjectSecurity>개체의 유지 되는 섹션 <xref:System.Security.AccessControl.NativeObjectSecurity>개체 예측할 수 없는 값을 포함할 수 있습니다.</xref:System.Security.AccessControl.NativeObjectSecurity> </xref:System.Security.AccessControl.NativeObjectSecurity> </xref:System.Security.AccessControl.NativeObjectSecurity.Persist%2A> </xref:System.Security.AccessControl.NativeObjectSecurity> 예를 들어, 생성자로 호출 되 면는 `includeSections` 값 <xref:System.Security.AccessControl.AccessControlSections>, 이상는 <xref:System.Security.AccessControl.NativeObjectSecurity.Persist%2A>메서드가 사용 하 여 개체에서 호출 되는 `includeSections` 값 <xref:System.Security.AccessControl.AccessControlSections>, 유지 되는 <xref:System.Security.AccessControl.NativeObjectSecurity>개체는 감사 규칙, 그룹 및 소유자에 대 한 예기치 않은 값이 포함 됩니다.</xref:System.Security.AccessControl.NativeObjectSecurity> </xref:System.Security.AccessControl.AccessControlSections> </xref:System.Security.AccessControl.NativeObjectSecurity.Persist%2A> </xref:System.Security.AccessControl.AccessControlSections>"
  syntax:
    content: protected NativeObjectSecurity (bool isContainer, System.Security.AccessControl.ResourceType resourceType, System.Runtime.InteropServices.SafeHandle handle, System.Security.AccessControl.AccessControlSections includeSections);
    parameters:
    - id: isContainer
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>하는 경우 새 <xref href=&quot;System.Security.AccessControl.NativeObjectSecurity&quot;> </xref> 개체 컨테이너 개체입니다."
    - id: resourceType
      type: System.Security.AccessControl.ResourceType
      description: "보안 가능 개체 유형의 새 <xref href=&quot;System.Security.AccessControl.NativeObjectSecurity&quot;> </xref> 개체가 연결 되어 있습니다."
    - id: handle
      type: System.Runtime.InteropServices.SafeHandle
      description: "보안 개체의 핸들 새 <xref href=&quot;System.Security.AccessControl.NativeObjectSecurity&quot;> </xref> 개체가 연결 되어 있습니다."
    - id: includeSections
      type: System.Security.AccessControl.AccessControlSections
      description: "중 하나는 <xref href=&quot;System.Security.AccessControl.AccessControlSections&quot;> </xref> 이에 포함 하려면 보안 개체의 보안 설명자 (액세스 규칙, 감사 규칙, 소유자, 주 그룹) 섹션을 지정 하는 열거형 값 <xref href=&quot;System.Security.AccessControl.NativeObjectSecurity&quot;> </xref> 개체입니다."
  overload: System.Security.AccessControl.NativeObjectSecurity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.NativeObjectSecurity.#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode,System.Object)
  id: '#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode,System.Object)'
  parent: System.Security.AccessControl.NativeObjectSecurity
  langs:
  - csharp
  name: NativeObjectSecurity(Boolean,ResourceType,NativeObjectSecurity+ExceptionFromErrorCode,Object)
  nameWithType: NativeObjectSecurity.NativeObjectSecurity(Boolean,ResourceType,NativeObjectSecurity+ExceptionFromErrorCode,Object)
  fullName: System.Security.AccessControl.NativeObjectSecurity.NativeObjectSecurity(Boolean,ResourceType,NativeObjectSecurity+ExceptionFromErrorCode,Object)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  syntax:
    content: protected NativeObjectSecurity (bool isContainer, System.Security.AccessControl.ResourceType resourceType, System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode exceptionFromErrorCode, object exceptionContext);
    parameters:
    - id: isContainer
      type: System.Boolean
      description: "추가할 수 있습니다."
    - id: resourceType
      type: System.Security.AccessControl.ResourceType
      description: "추가할 수 있습니다."
    - id: exceptionFromErrorCode
      type: System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode
      description: "추가할 수 있습니다."
    - id: exceptionContext
      type: System.Object
      description: "추가할 수 있습니다."
  overload: System.Security.AccessControl.NativeObjectSecurity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.NativeObjectSecurity.#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.String,System.Security.AccessControl.AccessControlSections)
  id: '#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.String,System.Security.AccessControl.AccessControlSections)'
  parent: System.Security.AccessControl.NativeObjectSecurity
  langs:
  - csharp
  name: NativeObjectSecurity(Boolean,ResourceType,String,AccessControlSections)
  nameWithType: NativeObjectSecurity.NativeObjectSecurity(Boolean,ResourceType,String,AccessControlSections)
  fullName: System.Security.AccessControl.NativeObjectSecurity.NativeObjectSecurity(Boolean,ResourceType,String,AccessControlSections)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Security.AccessControl.NativeObjectSecurity&quot;> </xref> 지정된 된 값을 사용 하 여 클래스입니다. 값 좋습니다는 <code> includeSections </code> 매개 변수는 생성자에 전달 하 고 유지 메서드 동일할 합니다. 자세한 내용은 설명 부분을 참조 합니다."
  remarks: "지속할 때는 <xref:System.Security.AccessControl.NativeObjectSecurity>경우 개체의 값은 `includeSections` 에 전달 된 매개 변수는 <xref:System.Security.AccessControl.NativeObjectSecurity.Persist%2A>방법은의 값과 동일한 지는 `includeSections` 매개 변수를 만드는 데 생성자에 전달 <xref:System.Security.AccessControl.NativeObjectSecurity>개체의 유지 되는 섹션 <xref:System.Security.AccessControl.NativeObjectSecurity>개체 예측할 수 없는 값을 포함할 수 있습니다.</xref:System.Security.AccessControl.NativeObjectSecurity> </xref:System.Security.AccessControl.NativeObjectSecurity> </xref:System.Security.AccessControl.NativeObjectSecurity.Persist%2A> </xref:System.Security.AccessControl.NativeObjectSecurity> 예를 들어, 생성자로 호출 되 면는 `includeSections` 값 <xref:System.Security.AccessControl.AccessControlSections>, 이상는 <xref:System.Security.AccessControl.NativeObjectSecurity.Persist%2A>메서드가 사용 하 여 개체에서 호출 되는 `includeSections` 값 <xref:System.Security.AccessControl.AccessControlSections>, 유지 되는 <xref:System.Security.AccessControl.NativeObjectSecurity>개체는 감사 규칙, 그룹 및 소유자에 대 한 예기치 않은 값이 포함 됩니다.</xref:System.Security.AccessControl.NativeObjectSecurity> </xref:System.Security.AccessControl.AccessControlSections> </xref:System.Security.AccessControl.NativeObjectSecurity.Persist%2A> </xref:System.Security.AccessControl.AccessControlSections>"
  syntax:
    content: protected NativeObjectSecurity (bool isContainer, System.Security.AccessControl.ResourceType resourceType, string name, System.Security.AccessControl.AccessControlSections includeSections);
    parameters:
    - id: isContainer
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>하는 경우 새 <xref href=&quot;System.Security.AccessControl.NativeObjectSecurity&quot;> </xref> 개체 컨테이너 개체입니다."
    - id: resourceType
      type: System.Security.AccessControl.ResourceType
      description: "보안 가능 개체 유형의 새 <xref href=&quot;System.Security.AccessControl.NativeObjectSecurity&quot;> </xref> 개체가 연결 되어 있습니다."
    - id: name
      type: System.String
      description: "있는 보안 가능한 개체의 이름을 새 <xref href=&quot;System.Security.AccessControl.NativeObjectSecurity&quot;> </xref> 개체가 연결 되어 있습니다."
    - id: includeSections
      type: System.Security.AccessControl.AccessControlSections
      description: "중 하나는 <xref href=&quot;System.Security.AccessControl.AccessControlSections&quot;> </xref> 이에 포함 하려면 보안 개체의 보안 설명자 (액세스 규칙, 감사 규칙, 소유자, 주 그룹) 섹션을 지정 하는 열거형 값 <xref href=&quot;System.Security.AccessControl.NativeObjectSecurity&quot;> </xref> 개체입니다."
  overload: System.Security.AccessControl.NativeObjectSecurity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.NativeObjectSecurity.#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections,System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode,System.Object)
  id: '#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections,System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode,System.Object)'
  parent: System.Security.AccessControl.NativeObjectSecurity
  langs:
  - csharp
  name: NativeObjectSecurity(Boolean,ResourceType,SafeHandle,AccessControlSections,NativeObjectSecurity+ExceptionFromErrorCode,Object)
  nameWithType: NativeObjectSecurity.NativeObjectSecurity(Boolean,ResourceType,SafeHandle,AccessControlSections,NativeObjectSecurity+ExceptionFromErrorCode,Object)
  fullName: System.Security.AccessControl.NativeObjectSecurity.NativeObjectSecurity(Boolean,ResourceType,SafeHandle,AccessControlSections,NativeObjectSecurity+ExceptionFromErrorCode,Object)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  syntax:
    content: protected NativeObjectSecurity (bool isContainer, System.Security.AccessControl.ResourceType resourceType, System.Runtime.InteropServices.SafeHandle handle, System.Security.AccessControl.AccessControlSections includeSections, System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode exceptionFromErrorCode, object exceptionContext);
    parameters:
    - id: isContainer
      type: System.Boolean
      description: "추가할 수 있습니다."
    - id: resourceType
      type: System.Security.AccessControl.ResourceType
      description: "추가할 수 있습니다."
    - id: handle
      type: System.Runtime.InteropServices.SafeHandle
      description: "추가할 수 있습니다."
    - id: includeSections
      type: System.Security.AccessControl.AccessControlSections
      description: "추가할 수 있습니다."
    - id: exceptionFromErrorCode
      type: System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode
      description: "추가할 수 있습니다."
    - id: exceptionContext
      type: System.Object
      description: "추가할 수 있습니다."
  overload: System.Security.AccessControl.NativeObjectSecurity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.NativeObjectSecurity.#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.String,System.Security.AccessControl.AccessControlSections,System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode,System.Object)
  id: '#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.String,System.Security.AccessControl.AccessControlSections,System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode,System.Object)'
  parent: System.Security.AccessControl.NativeObjectSecurity
  langs:
  - csharp
  name: NativeObjectSecurity(Boolean,ResourceType,String,AccessControlSections,NativeObjectSecurity+ExceptionFromErrorCode,Object)
  nameWithType: NativeObjectSecurity.NativeObjectSecurity(Boolean,ResourceType,String,AccessControlSections,NativeObjectSecurity+ExceptionFromErrorCode,Object)
  fullName: System.Security.AccessControl.NativeObjectSecurity.NativeObjectSecurity(Boolean,ResourceType,String,AccessControlSections,NativeObjectSecurity+ExceptionFromErrorCode,Object)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  syntax:
    content: protected NativeObjectSecurity (bool isContainer, System.Security.AccessControl.ResourceType resourceType, string name, System.Security.AccessControl.AccessControlSections includeSections, System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode exceptionFromErrorCode, object exceptionContext);
    parameters:
    - id: isContainer
      type: System.Boolean
      description: "추가할 수 있습니다."
    - id: resourceType
      type: System.Security.AccessControl.ResourceType
      description: "추가할 수 있습니다."
    - id: name
      type: System.String
      description: "추가할 수 있습니다."
    - id: includeSections
      type: System.Security.AccessControl.AccessControlSections
      description: "추가할 수 있습니다."
    - id: exceptionFromErrorCode
      type: System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode
      description: "추가할 수 있습니다."
    - id: exceptionContext
      type: System.Object
      description: "추가할 수 있습니다."
  overload: System.Security.AccessControl.NativeObjectSecurity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)
  id: Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)
  parent: System.Security.AccessControl.NativeObjectSecurity
  langs:
  - csharp
  name: Persist(SafeHandle,AccessControlSections)
  nameWithType: NativeObjectSecurity.Persist(SafeHandle,AccessControlSections)
  fullName: System.Security.AccessControl.NativeObjectSecurity.Persist(SafeHandle,AccessControlSections)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "이 연결 된 보안 설명자의 지정된 된 섹션 저장 <xref href=&quot;System.Security.AccessControl.NativeObjectSecurity&quot;> </xref> 영구 저장소에는 개체입니다. 것이 좋습니다 하의 값은 <code> includeSections </code> 매개 변수는 생성자에 전달 하 고 유지 메서드 동일할 합니다. 자세한 내용은 설명 부분을 참조 합니다."
  remarks: "지속할 때는 <xref:System.Security.AccessControl.NativeObjectSecurity>경우 개체의 값은 `includeSections` 에 전달 된 매개 변수는 <xref:System.Security.AccessControl.NativeObjectSecurity.Persist%2A>방법은의 값과 동일한 지는 `includeSections` 매개 변수를 만드는 데 생성자에 전달 <xref:System.Security.AccessControl.NativeObjectSecurity>개체의 유지 되는 섹션 <xref:System.Security.AccessControl.NativeObjectSecurity>개체 예측할 수 없는 값을 포함할 수 있습니다.</xref:System.Security.AccessControl.NativeObjectSecurity> </xref:System.Security.AccessControl.NativeObjectSecurity> </xref:System.Security.AccessControl.NativeObjectSecurity.Persist%2A> </xref:System.Security.AccessControl.NativeObjectSecurity> 예를 들어, 생성자로 호출 되 면는 `includeSections` 값 <xref:System.Security.AccessControl.AccessControlSections>, 이상는 <xref:System.Security.AccessControl.NativeObjectSecurity.Persist%2A>메서드가 사용 하 여 개체에서 호출 되는 `includeSections` 값 <xref:System.Security.AccessControl.AccessControlSections>, 유지 되는 <xref:System.Security.AccessControl.NativeObjectSecurity>개체는 감사 규칙, 그룹 및 소유자에 대 한 예기치 않은 값이 포함 됩니다.</xref:System.Security.AccessControl.NativeObjectSecurity> </xref:System.Security.AccessControl.AccessControlSections> </xref:System.Security.AccessControl.NativeObjectSecurity.Persist%2A> </xref:System.Security.AccessControl.AccessControlSections>"
  syntax:
    content: protected override sealed void Persist (System.Runtime.InteropServices.SafeHandle handle, System.Security.AccessControl.AccessControlSections includeSections);
    parameters:
    - id: handle
      type: System.Runtime.InteropServices.SafeHandle
      description: "이 보안 개체의 핸들 <xref href=&quot;System.Security.AccessControl.NativeObjectSecurity&quot;> </xref> 개체가 연결 되어 있습니다."
    - id: includeSections
      type: System.Security.AccessControl.AccessControlSections
      description: "중 하나는 <xref href=&quot;System.Security.AccessControl.AccessControlSections&quot;> </xref> 저장할 보안 개체의 보안 설명자 (액세스 규칙, 감사 규칙, 소유자, 주 그룹) 섹션을 지정 하는 열거형 값입니다."
  overload: System.Security.AccessControl.NativeObjectSecurity.Persist*
  exceptions:
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "이 보안 개체 <xref href=&quot;System.Security.AccessControl.NativeObjectSecurity&quot;> </xref> 개체가 연결 된 디렉터리 또는 파일을 이며 해당 디렉터리 또는 파일을 찾을 수 없습니다."
  platform:
  - net462
- uid: System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)
  id: Persist(System.String,System.Security.AccessControl.AccessControlSections)
  parent: System.Security.AccessControl.NativeObjectSecurity
  langs:
  - csharp
  name: Persist(String,AccessControlSections)
  nameWithType: NativeObjectSecurity.Persist(String,AccessControlSections)
  fullName: System.Security.AccessControl.NativeObjectSecurity.Persist(String,AccessControlSections)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "이 연결 된 보안 설명자의 지정된 된 섹션 저장 <xref href=&quot;System.Security.AccessControl.NativeObjectSecurity&quot;> </xref> 영구 저장소에는 개체입니다. 값 좋습니다는 <code> includeSections </code> 매개 변수는 생성자에 전달 하 고 유지 메서드 동일할 합니다. 자세한 내용은 설명 부분을 참조 합니다."
  remarks: "지속할 때는 <xref:System.Security.AccessControl.NativeObjectSecurity>경우 개체의 값은 `includeSections` Persist 메서드에 전달 된 매개 변수 값과 같지 않으면는 `includeSections` 매개 변수를 만드는 데 생성자에 전달 <xref:System.Security.AccessControl.NativeObjectSecurity>개체의 유지 되는 섹션 <xref:System.Security.AccessControl.NativeObjectSecurity>개체 예측할 수 없는 값을 포함할 수 있습니다.</xref:System.Security.AccessControl.NativeObjectSecurity> </xref:System.Security.AccessControl.NativeObjectSecurity> </xref:System.Security.AccessControl.NativeObjectSecurity> 예를 들어, 생성자로 호출 되 면는 `includeSections` 값 <xref:System.Security.AccessControl.AccessControlSections>, 사용 하 여 개체에서 비지 속성 메서드를 호출 하는 나중에 `includeSections` 값 <xref:System.Security.AccessControl.AccessControlSections>, 유지 되는 <xref:System.Security.AccessControl.NativeObjectSecurity>개체는 감사 규칙, 그룹 및 소유자에 대 한 예기치 않은 값이 포함 됩니다.</xref:System.Security.AccessControl.NativeObjectSecurity> </xref:System.Security.AccessControl.AccessControlSections> </xref:System.Security.AccessControl.AccessControlSections>"
  syntax:
    content: protected override sealed void Persist (string name, System.Security.AccessControl.AccessControlSections includeSections);
    parameters:
    - id: name
      type: System.String
      description: "이 보안 개체의 이름 <xref href=&quot;System.Security.AccessControl.NativeObjectSecurity&quot;> </xref> 개체가 연결 되어 있습니다."
    - id: includeSections
      type: System.Security.AccessControl.AccessControlSections
      description: "중 하나는 <xref href=&quot;System.Security.AccessControl.AccessControlSections&quot;> </xref> 저장할 보안 개체의 보안 설명자 (액세스 규칙, 감사 규칙, 소유자, 주 그룹) 섹션을 지정 하는 열거형 값입니다."
  overload: System.Security.AccessControl.NativeObjectSecurity.Persist*
  exceptions:
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "이 보안 개체 <xref href=&quot;System.Security.AccessControl.NativeObjectSecurity&quot;> </xref> 개체가 연결 된 디렉터리 또는 파일을 이며 해당 디렉터리 또는 파일을 찾을 수 없습니다."
  platform:
  - net462
- uid: System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections,System.Object)
  id: Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections,System.Object)
  parent: System.Security.AccessControl.NativeObjectSecurity
  langs:
  - csharp
  name: Persist(SafeHandle,AccessControlSections,Object)
  nameWithType: NativeObjectSecurity.Persist(SafeHandle,AccessControlSections,Object)
  fullName: System.Security.AccessControl.NativeObjectSecurity.Persist(SafeHandle,AccessControlSections,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "이 연결 된 보안 설명자의 지정된 된 섹션 저장 <xref href=&quot;System.Security.AccessControl.NativeObjectSecurity&quot;> </xref> 영구 저장소에는 개체입니다. 값 좋습니다는 <code> includeSections </code> 매개 변수는 생성자에 전달 하 고 유지 메서드 동일할 합니다. 자세한 내용은 설명 부분을 참조 합니다."
  remarks: "지속할 때는 <xref:System.Security.AccessControl.NativeObjectSecurity>경우 개체의 값은 `includeSections` Persist 메서드에 전달 된 매개 변수 값과 같지 않으면는 `includeSections` 매개 변수를 만드는 데 생성자에 전달 <xref:System.Security.AccessControl.NativeObjectSecurity>개체의 유지 되는 섹션 <xref:System.Security.AccessControl.NativeObjectSecurity>개체 예측할 수 없는 값을 포함할 수 있습니다.</xref:System.Security.AccessControl.NativeObjectSecurity> </xref:System.Security.AccessControl.NativeObjectSecurity> </xref:System.Security.AccessControl.NativeObjectSecurity> 예를 들어, 생성자로 호출 되 면는 `includeSections` 값 <xref:System.Security.AccessControl.AccessControlSections>, 사용 하 여 개체에서 비지 속성 메서드를 호출 하는 나중에 `includeSections` 값 <xref:System.Security.AccessControl.AccessControlSections>, 유지 되는 <xref:System.Security.AccessControl.NativeObjectSecurity>개체는 감사 규칙, 그룹 및 소유자에 대 한 예기치 않은 값이 포함 됩니다.</xref:System.Security.AccessControl.NativeObjectSecurity> </xref:System.Security.AccessControl.AccessControlSections> </xref:System.Security.AccessControl.AccessControlSections>"
  syntax:
    content: protected void Persist (System.Runtime.InteropServices.SafeHandle handle, System.Security.AccessControl.AccessControlSections includeSections, object exceptionContext);
    parameters:
    - id: handle
      type: System.Runtime.InteropServices.SafeHandle
      description: "이 보안 개체의 핸들 <xref href=&quot;System.Security.AccessControl.NativeObjectSecurity&quot;> </xref> 개체가 연결 되어 있습니다."
    - id: includeSections
      type: System.Security.AccessControl.AccessControlSections
      description: "중 하나는 <xref href=&quot;System.Security.AccessControl.AccessControlSections&quot;> </xref> 저장할 보안 개체의 보안 설명자 (액세스 규칙, 감사 규칙, 소유자, 주 그룹) 섹션을 지정 하는 열거형 값입니다."
    - id: exceptionContext
      type: System.Object
      description: "소스 또는 대상 예외에 대 한 컨텍스트 정보를 포함 하는 개체입니다."
  overload: System.Security.AccessControl.NativeObjectSecurity.Persist*
  exceptions:
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "이 보안 개체 <xref href=&quot;System.Security.AccessControl.NativeObjectSecurity&quot;> </xref> 개체가 연결 된 디렉터리 또는 파일을 이며 해당 디렉터리 또는 파일을 찾을 수 없습니다."
  platform:
  - net462
- uid: System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections,System.Object)
  id: Persist(System.String,System.Security.AccessControl.AccessControlSections,System.Object)
  parent: System.Security.AccessControl.NativeObjectSecurity
  langs:
  - csharp
  name: Persist(String,AccessControlSections,Object)
  nameWithType: NativeObjectSecurity.Persist(String,AccessControlSections,Object)
  fullName: System.Security.AccessControl.NativeObjectSecurity.Persist(String,AccessControlSections,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "이 연결 된 보안 설명자의 지정된 된 섹션 저장 <xref href=&quot;System.Security.AccessControl.NativeObjectSecurity&quot;> </xref> 영구 저장소에는 개체입니다. 값 좋습니다는 <code> includeSections </code> 매개 변수는 생성자에 전달 하 고 유지 메서드 동일할 합니다. 자세한 내용은 설명 부분을 참조 합니다."
  remarks: "지속할 때는 <xref:System.Security.AccessControl.NativeObjectSecurity>경우 개체의 값은 `includeSections` 에 전달 된 매개 변수는 <xref:System.Security.AccessControl.NativeObjectSecurity.Persist%2A>방법은의 값과 동일한 지는 `includeSections` 매개 변수를 만드는 데 생성자에 전달 <xref:System.Security.AccessControl.NativeObjectSecurity>개체의 유지 되는 섹션 <xref:System.Security.AccessControl.NativeObjectSecurity>개체 예측할 수 없는 값을 포함할 수 있습니다.</xref:System.Security.AccessControl.NativeObjectSecurity> </xref:System.Security.AccessControl.NativeObjectSecurity> </xref:System.Security.AccessControl.NativeObjectSecurity.Persist%2A> </xref:System.Security.AccessControl.NativeObjectSecurity> 예를 들어, 생성자로 호출 되 면는 `includeSections` 값 <xref:System.Security.AccessControl.AccessControlSections>, 이상는 <xref:System.Security.AccessControl.NativeObjectSecurity.Persist%2A>메서드가 사용 하 여 개체에서 호출 되는 `includeSections` 값 <xref:System.Security.AccessControl.AccessControlSections>, 유지 되는 <xref:System.Security.AccessControl.NativeObjectSecurity>개체는 감사 규칙, 그룹 및 소유자에 대 한 예기치 않은 값이 포함 됩니다.</xref:System.Security.AccessControl.NativeObjectSecurity> </xref:System.Security.AccessControl.AccessControlSections> </xref:System.Security.AccessControl.NativeObjectSecurity.Persist%2A> </xref:System.Security.AccessControl.AccessControlSections>"
  syntax:
    content: protected void Persist (string name, System.Security.AccessControl.AccessControlSections includeSections, object exceptionContext);
    parameters:
    - id: name
      type: System.String
      description: "이 보안 개체의 이름 <xref href=&quot;System.Security.AccessControl.NativeObjectSecurity&quot;> </xref> 개체가 연결 되어 있습니다."
    - id: includeSections
      type: System.Security.AccessControl.AccessControlSections
      description: "중 하나는 <xref href=&quot;System.Security.AccessControl.AccessControlSections&quot;> </xref> 저장할 보안 개체의 보안 설명자 (액세스 규칙, 감사 규칙, 소유자, 주 그룹) 섹션을 지정 하는 열거형 값입니다."
    - id: exceptionContext
      type: System.Object
      description: "소스 또는 대상 예외에 대 한 컨텍스트 정보를 포함 하는 개체입니다."
  overload: System.Security.AccessControl.NativeObjectSecurity.Persist*
  exceptions:
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "이 보안 개체 <xref href=&quot;System.Security.AccessControl.NativeObjectSecurity&quot;> </xref> 개체가 연결 된 디렉터리 또는 파일을 이며 해당 디렉터리 또는 파일을 찾을 수 없습니다."
  platform:
  - net462
references:
- uid: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: System.Security.AccessControl.CommonObjectSecurity
- uid: System.IO.FileNotFoundException
  isExternal: true
  name: System.IO.FileNotFoundException
- uid: System.Security.AccessControl.NativeObjectSecurity.#ctor(System.Boolean,System.Security.AccessControl.ResourceType)
  parent: System.Security.AccessControl.NativeObjectSecurity
  isExternal: false
  name: NativeObjectSecurity(Boolean,ResourceType)
  nameWithType: NativeObjectSecurity.NativeObjectSecurity(Boolean,ResourceType)
  fullName: System.Security.AccessControl.NativeObjectSecurity.NativeObjectSecurity(Boolean,ResourceType)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.AccessControl.ResourceType
  parent: System.Security.AccessControl
  isExternal: false
  name: ResourceType
  nameWithType: ResourceType
  fullName: System.Security.AccessControl.ResourceType
- uid: System.Security.AccessControl.NativeObjectSecurity.#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)
  parent: System.Security.AccessControl.NativeObjectSecurity
  isExternal: false
  name: NativeObjectSecurity(Boolean,ResourceType,SafeHandle,AccessControlSections)
  nameWithType: NativeObjectSecurity.NativeObjectSecurity(Boolean,ResourceType,SafeHandle,AccessControlSections)
  fullName: System.Security.AccessControl.NativeObjectSecurity.NativeObjectSecurity(Boolean,ResourceType,SafeHandle,AccessControlSections)
- uid: System.Runtime.InteropServices.SafeHandle
  parent: System.Runtime.InteropServices
  isExternal: true
  name: SafeHandle
  nameWithType: SafeHandle
  fullName: System.Runtime.InteropServices.SafeHandle
- uid: System.Security.AccessControl.AccessControlSections
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessControlSections
  nameWithType: AccessControlSections
  fullName: System.Security.AccessControl.AccessControlSections
- uid: System.Security.AccessControl.NativeObjectSecurity.#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode,System.Object)
  parent: System.Security.AccessControl.NativeObjectSecurity
  isExternal: false
  name: NativeObjectSecurity(Boolean,ResourceType,NativeObjectSecurity+ExceptionFromErrorCode,Object)
  nameWithType: NativeObjectSecurity.NativeObjectSecurity(Boolean,ResourceType,NativeObjectSecurity+ExceptionFromErrorCode,Object)
  fullName: System.Security.AccessControl.NativeObjectSecurity.NativeObjectSecurity(Boolean,ResourceType,NativeObjectSecurity+ExceptionFromErrorCode,Object)
- uid: System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode
  parent: System.Security.AccessControl
  isExternal: false
  name: NativeObjectSecurity+ExceptionFromErrorCode
  nameWithType: NativeObjectSecurity+ExceptionFromErrorCode
  fullName: System.Security.AccessControl.NativeObjectSecurity+ExceptionFromErrorCode
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Security.AccessControl.NativeObjectSecurity.#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.String,System.Security.AccessControl.AccessControlSections)
  parent: System.Security.AccessControl.NativeObjectSecurity
  isExternal: false
  name: NativeObjectSecurity(Boolean,ResourceType,String,AccessControlSections)
  nameWithType: NativeObjectSecurity.NativeObjectSecurity(Boolean,ResourceType,String,AccessControlSections)
  fullName: System.Security.AccessControl.NativeObjectSecurity.NativeObjectSecurity(Boolean,ResourceType,String,AccessControlSections)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.AccessControl.NativeObjectSecurity.#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections,System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode,System.Object)
  parent: System.Security.AccessControl.NativeObjectSecurity
  isExternal: false
  name: NativeObjectSecurity(Boolean,ResourceType,SafeHandle,AccessControlSections,NativeObjectSecurity+ExceptionFromErrorCode,Object)
  nameWithType: NativeObjectSecurity.NativeObjectSecurity(Boolean,ResourceType,SafeHandle,AccessControlSections,NativeObjectSecurity+ExceptionFromErrorCode,Object)
  fullName: System.Security.AccessControl.NativeObjectSecurity.NativeObjectSecurity(Boolean,ResourceType,SafeHandle,AccessControlSections,NativeObjectSecurity+ExceptionFromErrorCode,Object)
- uid: System.Security.AccessControl.NativeObjectSecurity.#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.String,System.Security.AccessControl.AccessControlSections,System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode,System.Object)
  parent: System.Security.AccessControl.NativeObjectSecurity
  isExternal: false
  name: NativeObjectSecurity(Boolean,ResourceType,String,AccessControlSections,NativeObjectSecurity+ExceptionFromErrorCode,Object)
  nameWithType: NativeObjectSecurity.NativeObjectSecurity(Boolean,ResourceType,String,AccessControlSections,NativeObjectSecurity+ExceptionFromErrorCode,Object)
  fullName: System.Security.AccessControl.NativeObjectSecurity.NativeObjectSecurity(Boolean,ResourceType,String,AccessControlSections,NativeObjectSecurity+ExceptionFromErrorCode,Object)
- uid: System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)
  parent: System.Security.AccessControl.NativeObjectSecurity
  isExternal: false
  name: Persist(SafeHandle,AccessControlSections)
  nameWithType: NativeObjectSecurity.Persist(SafeHandle,AccessControlSections)
  fullName: System.Security.AccessControl.NativeObjectSecurity.Persist(SafeHandle,AccessControlSections)
- uid: System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)
  parent: System.Security.AccessControl.NativeObjectSecurity
  isExternal: false
  name: Persist(String,AccessControlSections)
  nameWithType: NativeObjectSecurity.Persist(String,AccessControlSections)
  fullName: System.Security.AccessControl.NativeObjectSecurity.Persist(String,AccessControlSections)
- uid: System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections,System.Object)
  parent: System.Security.AccessControl.NativeObjectSecurity
  isExternal: false
  name: Persist(SafeHandle,AccessControlSections,Object)
  nameWithType: NativeObjectSecurity.Persist(SafeHandle,AccessControlSections,Object)
  fullName: System.Security.AccessControl.NativeObjectSecurity.Persist(SafeHandle,AccessControlSections,Object)
- uid: System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections,System.Object)
  parent: System.Security.AccessControl.NativeObjectSecurity
  isExternal: false
  name: Persist(String,AccessControlSections,Object)
  nameWithType: NativeObjectSecurity.Persist(String,AccessControlSections,Object)
  fullName: System.Security.AccessControl.NativeObjectSecurity.Persist(String,AccessControlSections,Object)
- uid: System.Security.AccessControl.NativeObjectSecurity.#ctor*
  parent: System.Security.AccessControl.NativeObjectSecurity
  isExternal: false
  name: NativeObjectSecurity
  nameWithType: NativeObjectSecurity.NativeObjectSecurity
- uid: System.Security.AccessControl.NativeObjectSecurity.Persist*
  parent: System.Security.AccessControl.NativeObjectSecurity
  isExternal: false
  name: Persist
  nameWithType: NativeObjectSecurity.Persist
