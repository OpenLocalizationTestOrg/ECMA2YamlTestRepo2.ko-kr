### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.ButtonColumn
  id: ButtonColumn
  children:
  - System.Web.UI.WebControls.ButtonColumn.#ctor
  - System.Web.UI.WebControls.ButtonColumn.ButtonType
  - System.Web.UI.WebControls.ButtonColumn.CausesValidation
  - System.Web.UI.WebControls.ButtonColumn.CommandName
  - System.Web.UI.WebControls.ButtonColumn.DataTextField
  - System.Web.UI.WebControls.ButtonColumn.DataTextFormatString
  - System.Web.UI.WebControls.ButtonColumn.FormatDataTextValue(System.Object)
  - System.Web.UI.WebControls.ButtonColumn.Initialize
  - System.Web.UI.WebControls.ButtonColumn.InitializeCell(System.Web.UI.WebControls.TableCell,System.Int32,System.Web.UI.WebControls.ListItemType)
  - System.Web.UI.WebControls.ButtonColumn.Text
  - System.Web.UI.WebControls.ButtonColumn.ValidationGroup
  langs:
  - csharp
  name: ButtonColumn
  nameWithType: ButtonColumn
  fullName: System.Web.UI.WebControls.ButtonColumn
  type: Class
  summary: "에 대 한 열 유형을 <xref href=&quot;System.Web.UI.WebControls.DataGrid&quot;> </xref> 사용자 지정 단추가 포함 된 제어 합니다."
  remarks: "ButtonColumn 클래스에서 사용 하 여 한 <xref:System.Web.UI.WebControls.DataGrid>의 각 행과 해당 하는 단추를 만들 수는 <xref:System.Web.UI.WebControls.DataGrid>컨트롤.</xref:System.Web.UI.WebControls.DataGrid> </xref:System.Web.UI.WebControls.DataGrid> 설정 하 여 단추에 표시 되는 캡션을 지정는 <xref:System.Web.UI.WebControls.ButtonColumn.Text%2A>속성.</xref:System.Web.UI.WebControls.ButtonColumn.Text%2A> 설정 하는 경우는 <xref:System.Web.UI.WebControls.ButtonColumn.Text%2A>속성, 동일한 캡션 ButtonColumn 개체 공유의 모든 단추.</xref:System.Web.UI.WebControls.ButtonColumn.Text%2A> 또는 ButtonColumn 단추 필드는 데이터 원본에 바인딩할 수 있습니다. 이 옵션을 사용 하면 각 단추에 대 한 서로 다른 캡션을 표시할 수 있습니다. 지정된 된 필드의 값은 텍스트 캡션을에 사용 됩니다. 설정의 <xref:System.Web.UI.WebControls.ButtonColumn.DataTextField%2A>는 ButtonColumn 데이터 원본의 필드에에서 바인딩할 속성.</xref:System.Web.UI.WebControls.ButtonColumn.DataTextField%2A>       캡션을 설정 하 여 단추에 표시 되는 서식을 지정할 수 있습니다는 <xref:System.Web.UI.WebControls.ButtonColumn.DataTextField%2A>는 서식 문자열을 사용 하 여 속성.</xref:System.Web.UI.WebControls.ButtonColumn.DataTextField%2A>       ButtonColumn의 단추를 클릭 하면 발생는 <xref:System.Web.UI.WebControls.DataGrid.ItemCommand>이벤트.</xref:System.Web.UI.WebControls.DataGrid.ItemCommand> 에 대 한 이벤트 처리기를 제공 하 여 단추를 클릭할 때 수행 되는 작업을 프로그래밍 방식으로 제어할 수 있습니다는 <xref:System.Web.UI.WebControls.DataGrid.ItemCommand>이벤트.</xref:System.Web.UI.WebControls.DataGrid.ItemCommand>       기본적으로는 ButtonColumn에서 단추를 클릭 하면 페이지 유효성 검사가 수행 되지 않습니다. 페이지 유효성 검사를 모두 유효성 검사 컨트롤에 의해 지정 된 유효성 검사 규칙을 통과 하는 페이지에서 유효성 검사와 연결 된 입력된 컨트롤을 제어 하는지 여부를 결정 합니다. 단추를 클릭할 때 페이지의 유효성 검사를 수행 하려면 설정는 <xref:System.Web.UI.WebControls.ButtonColumn.CausesValidation%2A>속성을 `true`.</xref:System.Web.UI.WebControls.ButtonColumn.CausesValidation%2A>"
  example:
  - "The following code example demonstrates how to use ButtonColumn class in a <xref:System.Web.UI.WebControls.DataGrid> control to create **Add** buttons.  \n  \n [!code-cs[ButtonColumnButtonType#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_178_1.cs)]\n [!code-vb[ButtonColumnButtonType#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_178_1.vb)]"
  syntax:
    content: 'public class ButtonColumn : System.Web.UI.WebControls.DataGridColumn'
  inheritance:
  - System.Object
  - System.Web.UI.WebControls.DataGridColumn
  implements: []
  inheritedMembers:
  - System.Web.UI.WebControls.DataGridColumn.DesignMode
  - System.Web.UI.WebControls.DataGridColumn.FooterStyle
  - System.Web.UI.WebControls.DataGridColumn.FooterText
  - System.Web.UI.WebControls.DataGridColumn.HeaderImageUrl
  - System.Web.UI.WebControls.DataGridColumn.HeaderStyle
  - System.Web.UI.WebControls.DataGridColumn.HeaderText
  - System.Web.UI.WebControls.DataGridColumn.IsTrackingViewState
  - System.Web.UI.WebControls.DataGridColumn.ItemStyle
  - System.Web.UI.WebControls.DataGridColumn.LoadViewState(System.Object)
  - System.Web.UI.WebControls.DataGridColumn.OnColumnChanged
  - System.Web.UI.WebControls.DataGridColumn.Owner
  - System.Web.UI.WebControls.DataGridColumn.SaveViewState
  - System.Web.UI.WebControls.DataGridColumn.SortExpression
  - System.Web.UI.WebControls.DataGridColumn.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.WebControls.DataGridColumn.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.WebControls.DataGridColumn.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.WebControls.DataGridColumn.System#Web#UI#IStateManager#TrackViewState
  - System.Web.UI.WebControls.DataGridColumn.ToString
  - System.Web.UI.WebControls.DataGridColumn.TrackViewState
  - System.Web.UI.WebControls.DataGridColumn.ViewState
  - System.Web.UI.WebControls.DataGridColumn.Visible
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonColumn.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.ButtonColumn
  langs:
  - csharp
  name: ButtonColumn()
  nameWithType: ButtonColumn.ButtonColumn()
  fullName: System.Web.UI.WebControls.ButtonColumn.ButtonColumn()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.UI.WebControls.ButtonColumn&quot;> </xref> 클래스입니다."
  remarks: "ButtonColumn 생성자를 사용 하 여 만들고 <xref:System.Web.UI.WebControls.ButtonColumn>클래스</xref:System.Web.UI.WebControls.ButtonColumn> 의 새 인스턴스를 초기화 합니다."
  example:
  - "The following code example demonstrates how to create and initialize a new instance of the <xref:System.Web.UI.WebControls.ButtonColumn> class and add it to the <xref:System.Web.UI.WebControls.DataGrid.Columns%2A> collection.  \n  \n [!code-cs[ButtonColumnButtonType#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_167_1.cs)]\n [!code-vb[ButtonColumnButtonType#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_167_1.vb)]"
  syntax:
    content: public ButtonColumn ();
    parameters: []
  overload: System.Web.UI.WebControls.ButtonColumn.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonColumn.ButtonType
  id: ButtonType
  parent: System.Web.UI.WebControls.ButtonColumn
  langs:
  - csharp
  name: ButtonType
  nameWithType: ButtonColumn.ButtonType
  fullName: System.Web.UI.WebControls.ButtonColumn.ButtonType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "에 표시할 단추 종류를 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.WebControls.ButtonColumn&quot;> </xref> 개체입니다."
  remarks: "ButtonType 속성을 사용 하 여 지정할 수 있는지 여부를에 있는 단추는 <xref:System.Web.UI.WebControls.ButtonColumn>개체 링크 또는 누름 단추도 표시 됩니다.</xref:System.Web.UI.WebControls.ButtonColumn> 다음 표에서 가능한 설정을 나열합니다.      | 단추 유형을 | 디스플레이 |   |-----------------|-------------|   | <xref:System.Web.UI.WebControls.ButtonColumnType>| 한 링크입니다. |   | <xref:System.Web.UI.WebControls.ButtonColumnType>| 단추 컨트롤입니다. |       단추를 클릭 하 고 <xref:System.Web.UI.WebControls.ButtonColumn>발생는 <xref:System.Web.UI.WebControls.DataGrid.ItemCommand>이벤트.</xref:System.Web.UI.WebControls.DataGrid.ItemCommand> </xref:System.Web.UI.WebControls.ButtonColumn> </xref:System.Web.UI.WebControls.ButtonColumnType> </xref:System.Web.UI.WebControls.ButtonColumnType> 에 대 한 이벤트 처리기를 제공 하 여 단추를 클릭할 때 수행 되는 작업을 프로그래밍 방식으로 제어할 수 있습니다는 <xref:System.Web.UI.WebControls.DataGrid.ItemCommand>이벤트.</xref:System.Web.UI.WebControls.DataGrid.ItemCommand>       이 속성의 값은 뷰 상태에 저장 됩니다."
  example:
  - "The following code example demonstrates how use the ButtonType property to specify that the buttons in the <xref:System.Web.UI.WebControls.ButtonColumn> object are displayed as push buttons.  \n  \n [!code-cs[ButtonColumnButtonType#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_119_1.cs)]\n [!code-vb[ButtonColumnButtonType#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_119_1.vb)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.ButtonColumnType ButtonType { get; set; }
    return:
      type: System.Web.UI.WebControls.ButtonColumnType
      description: "중 하나는 <xref href=&quot;System.Web.UI.WebControls.ButtonColumnType&quot;> </xref> 값입니다. 기본값은 <xref uid=&quot;langword_csharp_LinkButton&quot; name=&quot;LinkButton&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.ButtonColumn.ButtonType*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "지정 된 열 형식이 중 하나는 <xref href=&quot;System.Web.UI.WebControls.ButtonColumnType&quot;> </xref> 값입니다."
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonColumn.CausesValidation
  id: CausesValidation
  parent: System.Web.UI.WebControls.ButtonColumn
  langs:
  - csharp
  name: CausesValidation
  nameWithType: ButtonColumn.CausesValidation
  fullName: System.Web.UI.WebControls.ButtonColumn.CausesValidation
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "에 있는 단추 유효성 검사를 수행할지 여부를 나타내는 값을 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.WebControls.ButtonColumn&quot;> </xref> 개체를 클릭 합니다."
  remarks: "기본적으로 페이지 유효성 검사가 수행 되지 않습니다에 있는 단추는 <xref:System.Web.UI.WebControls.ButtonColumn>개체를 클릭 합니다.</xref:System.Web.UI.WebControls.ButtonColumn> 페이지 유효성 검사를 모두 유효성 검사 컨트롤에 의해 지정 된 유효성 검사 규칙을 통과 하는 페이지에서 유효성 검사와 연결 된 입력된 컨트롤을 제어 하는지 여부를 결정 합니다. 에 있는 단추 페이지 유효성 검사를 수행 하는 <xref:System.Web.UI.WebControls.ButtonColumn>는 CausesValidation 속성을 설정를 클릭 하면 `true`.</xref:System.Web.UI.WebControls.ButtonColumn>       CausesValidation 속성의 값이 `true`를 사용할 수도 있습니다는 <xref:System.Web.UI.WebControls.ButtonColumn.ValidationGroup%2A>속성을 유효성 검사 그룹의 이름을 지정 하는 <xref:System.Web.UI.WebControls.ButtonColumn>유효성 검사가.</xref:System.Web.UI.WebControls.ButtonColumn> </xref:System.Web.UI.WebControls.ButtonColumn.ValidationGroup%2A>       이 속성의 값은 뷰 상태에 저장 됩니다."
  syntax:
    content: public virtual bool CausesValidation { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>에 있는 단추 유효성 검사가 수행 되는 <xref href=&quot;System.Web.UI.WebControls.ButtonColumn&quot;> </xref> 고, 그러지 않으면 클릭 한 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.ButtonColumn.CausesValidation*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonColumn.CommandName
  id: CommandName
  parent: System.Web.UI.WebControls.ButtonColumn
  langs:
  - csharp
  name: CommandName
  nameWithType: ButtonColumn.CommandName
  fullName: System.Web.UI.WebControls.ButtonColumn.CommandName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "에 있는 단추를 수행 하기 위한 명령을 나타내는 문자열을 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.WebControls.ButtonColumn&quot;> </xref> 개체를 클릭 합니다."
  remarks: "CommandName 속성을 사용 하 여 명령 이름의와 같은 연결할 `Add` 또는 `Remove`, 단추를 포함 합니다. CommandName 속성에 있는 단추 수행할 동작을 식별 하는 모든 문자열을 설정할 수 있습니다는 <xref:System.Web.UI.WebControls.ButtonColumn?displayProperty=fullName>개체를 클릭 합니다.</xref:System.Web.UI.WebControls.ButtonColumn?displayProperty=fullName> 그런 다음 이름을 확인할 수 있습니다 프로그래밍 방식으로 명령에 대 한 이벤트 처리기에는 <xref:System.Web.UI.WebControls.DataGrid.ItemCommand>이벤트 하 고 적절 한 조치를 수행 합니다.</xref:System.Web.UI.WebControls.DataGrid.ItemCommand>       이 속성의 값은 뷰 상태에 저장 됩니다."
  example:
  - "The following code example demonstrates how to use the CommandName property to associate a command name with a button. Then, the command name of the clicked button is determined programmatically in the event handler for the <xref:System.Web.UI.WebControls.DataGrid.ItemCommand> event and the appropriate action is performed.  \n  \n [!code-cs[ButtonColumnCommandName#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_753_1.aspx)]\n [!code-vb[ButtonColumnCommandName#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_753_1.aspx)]"
  syntax:
    content: public virtual string CommandName { get; set; }
    return:
      type: System.String
      description: "수행할 때에 단추 명령을 나타내는 string는 <xref href=&quot;System.Web.UI.WebControls.ButtonColumn&quot;> </xref> 를 클릭 합니다. 기본값은 빈 문자열 (&quot;&quot;)."
  overload: System.Web.UI.WebControls.ButtonColumn.CommandName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonColumn.DataTextField
  id: DataTextField
  parent: System.Web.UI.WebControls.ButtonColumn
  langs:
  - csharp
  name: DataTextField
  nameWithType: ButtonColumn.DataTextField
  fullName: System.Web.UI.WebControls.ButtonColumn.DataTextField
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "필드 이름에 바인딩할 데이터 소스에서 가져오거나는 <xref href=&quot;System.Web.UI.WebControls.ButtonColumn&quot;> </xref> 개체입니다."
  remarks: "DataTextField 속성을 사용 하 여 바인딩할 데이터 소스에서 필드 이름을 지정 하는 <xref:System.Web.UI.WebControls.ButtonColumn.Text%2A>속성에 있는 단추의 <xref:System.Web.UI.WebControls.ButtonColumn>개체입니다.</xref:System.Web.UI.WebControls.ButtonColumn> </xref:System.Web.UI.WebControls.ButtonColumn.Text%2A>       열을 직접 설정 하는 대신 필드에 바인딩는 <xref:System.Web.UI.WebControls.ButtonColumn.Text%2A>속성 단추에 대 한 서로 다른 캡션을 표시할 수 있습니다는 <xref:System.Web.UI.WebControls.ButtonColumn>지정된 된 필드에 값을 사용 하 여.</xref:System.Web.UI.WebControls.ButtonColumn> </xref:System.Web.UI.WebControls.ButtonColumn.Text%2A>       이 속성의 값은 뷰 상태에 저장 됩니다."
  example:
  - "The following code example demonstrates how to use the DataTextField property to bind the <xref:System.Web.UI.WebControls.ButtonColumn> object to a field in a data source.  \n  \n [!code-vb[ButtonColumnDataTextField#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_814_1.aspx)]\n [!code-cs[ButtonColumnDataTextField#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_814_1.aspx)]"
  syntax:
    content: public virtual string DataTextField { get; set; }
    return:
      type: System.String
      description: "필드 이름에 바인딩할는 <xref href=&quot;System.Web.UI.WebControls.ButtonColumn&quot;> </xref>합니다. 기본값은 빈 문자열 (&quot;&quot;)."
  overload: System.Web.UI.WebControls.ButtonColumn.DataTextField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonColumn.DataTextFormatString
  id: DataTextFormatString
  parent: System.Web.UI.WebControls.ButtonColumn
  langs:
  - csharp
  name: DataTextFormatString
  nameWithType: ButtonColumn.DataTextFormatString
  fullName: System.Web.UI.WebControls.ButtonColumn.DataTextFormatString
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "각 단추에 캡션에 대 한 표시 형식을 지정 하는 문자열을 가져오거나 설정 합니다."
  remarks: "DataTextFormatString 속성을 사용 하 여에 있는 단추의 캡션에 대 한 사용자 지정 표시 형식을 제공 하는 <xref:System.Web.UI.WebControls.ButtonColumn>개체입니다.</xref:System.Web.UI.WebControls.ButtonColumn>       데이터 형식 문자열 형태로 콜론으로 구분 하는 두 부분으로 이루어져 `{A:Bxx}`합니다. 예를 들어 형식 문자열 `{0:F2}` 고정된 소수점 소수 자릿수가 두 자리인 숫자를 표시 하도록 셀의 서식을 지정 합니다.      > [!NOTE] > 전체 문자열을 형식 문자열 및 리터럴 문자열이 아니라 임을 나타내기 위해 중괄호로 묶어야 합니다. 중괄호 밖에 모든 텍스트는 리터럴 텍스트로 표시 됩니다.       값의 콜론 앞 (`A` 예:에서)는&0;부터 시작 하는 매개 변수 목록의 매개 변수 인덱스를 지정 합니다.      > [!NOTE] > 각 셀에 값을 하나만 있기 때문에이 값 0에만 설정할 수 있습니다.       콜론 문자 (`B` 예:에서)에 값 표시 형식을 지정 합니다. 다음 표에서 일반 형식을 나열합니다.      | 형식 문자와 | 숫자 값에 표시 됩니다. |   |----------------------|--------------------------------|   | `C`| 통화 형식입니다. |   | `D`|&10; 진수 형식입니다. |   | `E`| Scientific (지 수) 형식입니다. |   | `F`| 고정된 형식입니다. |   | `G`| 일반 형식입니다. |   | `N`| 숫자 형식입니다. |   | `X`|&16; 진수 형식입니다. |      > [!NOTE] > 형식 문자를 제외 하 고 대/소문자를. `X`, 지정 된 경우에서&16; 진수 문자를 표시 하는 합니다.       형식 문자 다음 값 (`xx` 예:에서) 유효 자릿수 또는 소수 자릿수의 수를 지정 합니다.       이 속성의 값은 뷰 상태에 저장 됩니다.       문자열 형식 지정에 대 한 자세한 내용은 참조 하십시오. [형식 지정](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example demonstrates how to use the DataTextFormatString property to display the caption of each button in the <xref:System.Web.UI.WebControls.ButtonColumn> object in currency format.  \n  \n [!code-vb[ButtonColumnDataTextField#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1201_1.aspx)]\n [!code-cs[ButtonColumnDataTextField#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1201_1.aspx)]"
  syntax:
    content: public virtual string DataTextFormatString { get; set; }
    return:
      type: System.String
      description: "각 단추에 캡션에 대 한 표시 형식을 지정 하는 문자열입니다. 기본값은 빈 문자열 (&quot;&quot;)."
  overload: System.Web.UI.WebControls.ButtonColumn.DataTextFormatString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonColumn.FormatDataTextValue(System.Object)
  id: FormatDataTextValue(System.Object)
  parent: System.Web.UI.WebControls.ButtonColumn
  langs:
  - csharp
  name: FormatDataTextValue(Object)
  nameWithType: ButtonColumn.FormatDataTextValue(Object)
  fullName: System.Web.UI.WebControls.ButtonColumn.FormatDataTextValue(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "지정된 된 값으로 표시 되는 형식으로 변환 된 <xref:System.Web.UI.WebControls.ButtonColumn.DataTextFormatString*>속성.</xref:System.Web.UI.WebControls.ButtonColumn.DataTextFormatString*>"
  remarks: "FormatDataTextValue 메서드를 사용 하 여 지정 된 값으로 표시 되는 형식으로 변환 된 <xref:System.Web.UI.WebControls.ButtonColumn.DataTextFormatString%2A>속성.</xref:System.Web.UI.WebControls.ButtonColumn.DataTextFormatString%2A>      > [!NOTE] > The FormatDataTextValue 메서드 문자열을 반환 값의 해당 하는 경우는 <xref:System.Web.UI.WebControls.ButtonColumn.DataTextFormatString%2A>속성이 설정 되지 않았습니다.</xref:System.Web.UI.WebControls.ButtonColumn.DataTextFormatString%2A>"
  syntax:
    content: protected virtual string FormatDataTextValue (object dataTextValue);
    parameters:
    - id: dataTextValue
      type: System.Object
      description: "값 형식입니다."
    return:
      type: System.String
      description: "<code> dataTextValue </code> 에 <xref:System.Web.UI.WebControls.ButtonColumn.DataTextFormatString*>.</xref:System.Web.UI.WebControls.ButtonColumn.DataTextFormatString*> 된 형식으로 변환"
  overload: System.Web.UI.WebControls.ButtonColumn.FormatDataTextValue*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonColumn.Initialize
  id: Initialize
  parent: System.Web.UI.WebControls.ButtonColumn
  langs:
  - csharp
  name: Initialize()
  nameWithType: ButtonColumn.Initialize()
  fullName: System.Web.UI.WebControls.ButtonColumn.Initialize()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "다시 설정 된 <xref href=&quot;System.Web.UI.WebControls.ButtonColumn&quot;> </xref> 를 초기 상태로 개체입니다."
  remarks: "Initialize 메서드를 사용 하 여 다시 설정 하는 <xref:System.Web.UI.WebControls.ButtonColumn>개체를 초기 상태로.</xref:System.Web.UI.WebControls.ButtonColumn>"
  syntax:
    content: public override void Initialize ();
    parameters: []
  overload: System.Web.UI.WebControls.ButtonColumn.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonColumn.InitializeCell(System.Web.UI.WebControls.TableCell,System.Int32,System.Web.UI.WebControls.ListItemType)
  id: InitializeCell(System.Web.UI.WebControls.TableCell,System.Int32,System.Web.UI.WebControls.ListItemType)
  parent: System.Web.UI.WebControls.ButtonColumn
  langs:
  - csharp
  name: InitializeCell(TableCell,Int32,ListItemType)
  nameWithType: ButtonColumn.InitializeCell(TableCell,Int32,ListItemType)
  fullName: System.Web.UI.WebControls.ButtonColumn.InitializeCell(TableCell,Int32,ListItemType)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "셀을 다시 설정 된 <xref href=&quot;System.Web.UI.WebControls.ButtonColumn&quot;> </xref> 를 초기 상태로 개체입니다."
  remarks: "지정된 된 셀을 기본값으로 다시 설정 InitializeCell 메서드는 <xref:System.Web.UI.WebControls.ButtonColumn>개체를 초기 상태로.</xref:System.Web.UI.WebControls.ButtonColumn>"
  syntax:
    content: public override void InitializeCell (System.Web.UI.WebControls.TableCell cell, int columnIndex, System.Web.UI.WebControls.ListItemType itemType);
    parameters:
    - id: cell
      type: System.Web.UI.WebControls.TableCell
      description: "A <xref href=&quot;System.Web.UI.WebControls.TableCell&quot;> </xref> 다시 설정 하는 셀을 나타내는입니다."
    - id: columnIndex
      type: System.Int32
      description: "셀이 있는 열 번호입니다."
    - id: itemType
      type: System.Web.UI.WebControls.ListItemType
      description: "중 하나는 <xref href=&quot;System.Web.UI.WebControls.ListItemType&quot;> </xref> 값입니다."
  overload: System.Web.UI.WebControls.ButtonColumn.InitializeCell*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonColumn.Text
  id: Text
  parent: System.Web.UI.WebControls.ButtonColumn
  langs:
  - csharp
  name: Text
  nameWithType: ButtonColumn.Text
  fullName: System.Web.UI.WebControls.ButtonColumn.Text
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "단추에 표시 되는 캡션을 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.WebControls.ButtonColumn&quot;> </xref> 개체입니다."
  remarks: "텍스트 속성을 사용 하 여 지정 하거나의 단추에 표시 되는 캡션을 결정 하는 <xref:System.Web.UI.WebControls.ButtonColumn>개체입니다.</xref:System.Web.UI.WebControls.ButtonColumn>      > [!NOTE] > 텍스트 속성을 설정 하면 모든 단추에 <xref:System.Web.UI.WebControls.ButtonColumn>같은 캡션이.</xref:System.Web.UI.WebControls.ButtonColumn>       바인딩할 수 있습니다는 <xref:System.Web.UI.WebControls.ButtonColumn>필드는 데이터 원본에.</xref:System.Web.UI.WebControls.ButtonColumn> 이 옵션을 사용 하면 지정된 된 필드에 값을 사용 하는 열에 있는 단추에 대 한 서로 다른 캡션을 표시할 수 있습니다. 설정의 <xref:System.Web.UI.WebControls.ButtonColumn.DataTextField%2A>바인딩할 속성은 <xref:System.Web.UI.WebControls.ButtonColumn>필드는 데이터 원본에.</xref:System.Web.UI.WebControls.ButtonColumn> </xref:System.Web.UI.WebControls.ButtonColumn.DataTextField%2A>       이 속성의 값은 뷰 상태에 저장 됩니다.       이 속성의 값으로 설정 하면 디자이너 도구를 사용 하 여 리소스 파일에 자동으로 저장 될 수 있습니다. 자세한 내용은 참조 <xref:System.ComponentModel.LocalizableAttribute>및 [전역화 및 지역화](~/add/includes/ajax-current-ext-md.md).</xref:System.ComponentModel.LocalizableAttribute>"
  example:
  - "The following code example demonstrates how to use the Text property to specify the caption for the buttons in the <xref:System.Web.UI.WebControls.ButtonColumn> object.  \n  \n [!code-vb[Classic ButtonColumn.ButtonType Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_349_1.aspx)]\n [!code-cs[Classic ButtonColumn.ButtonType Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_349_1.aspx)]"
  syntax:
    content: public virtual string Text { get; set; }
    return:
      type: System.String
      description: "단추에 표시 되는 캡션을 <xref href=&quot;System.Web.UI.WebControls.ButtonColumn&quot;> </xref>합니다. 기본값은 빈 문자열 (&quot;&quot;)."
  overload: System.Web.UI.WebControls.ButtonColumn.Text*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonColumn.ValidationGroup
  id: ValidationGroup
  parent: System.Web.UI.WebControls.ButtonColumn
  langs:
  - csharp
  name: ValidationGroup
  nameWithType: ButtonColumn.ValidationGroup
  fullName: System.Web.UI.WebControls.ButtonColumn.ValidationGroup
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "유효성 검사 컨트롤의 그룹을 가져오거나는 <xref href=&quot;System.Web.UI.WebControls.ButtonColumn&quot;> </xref> 개체는 서버에 다시 게시 될 때 유효성 검사가 수행 됩니다."
  remarks: "유효성 검사 그룹을 사용 하는 페이지에 유효성 검사 컨트롤 특정 범주에 할당할 수 있습니다. 각 유효성 검사 그룹 페이지에서 다른 유효성 검사 그룹 별개로 검사할 수 있습니다. ValidationGroup 속성을 사용 하 여 유효성 검사 그룹의 이름을 지정 하는 <xref:System.Web.UI.WebControls.ButtonColumn>개체는 서버에 다시 게시 될 때 유효성 검사가 수행 됩니다.</xref:System.Web.UI.WebControls.ButtonColumn>       ValidationGroup 속성은 적용 경우에만의 값은 <xref:System.Web.UI.WebControls.ButtonColumn.CausesValidation%2A>속성이 `true`.</xref:System.Web.UI.WebControls.ButtonColumn.CausesValidation%2A> 지정된 된 그룹의 일부인 경우 값을 지정 하면 ValidationGroup 속성에 대 한 유효성 검사 컨트롤에 때 유효성이 검사 되는 <xref:System.Web.UI.WebControls.ButtonColumn>서버에 다시 게시 합니다.</xref:System.Web.UI.WebControls.ButtonColumn> ValidationGroup 속성의 값을 지정 하지 않으면 및 <xref:System.Web.UI.WebControls.ButtonColumn.CausesValidation%2A>속성이로 설정 되어 `true`, 페이지에서 유효성 검사 그룹에 할당 되지 않은 모든 유효성 검사 컨트롤에 유효성을 검사할 때는 <xref:System.Web.UI.WebControls.ButtonColumn>서버에 다시 게시 합니다.</xref:System.Web.UI.WebControls.ButtonColumn> </xref:System.Web.UI.WebControls.ButtonColumn.CausesValidation%2A>       이 속성의 값은 뷰 상태에 저장 됩니다."
  syntax:
    content: public virtual string ValidationGroup { get; set; }
    return:
      type: System.String
      description: "유효성 검사 그룹을 제어는 <xref href=&quot;System.Web.UI.WebControls.ButtonColumn&quot;> </xref> 개체는 서버에 다시 게시 될 때 유효성 검사가 수행 됩니다. 기본값은 빈 문자열 (&quot;&quot;)."
  overload: System.Web.UI.WebControls.ButtonColumn.ValidationGroup*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.DataGridColumn
  isExternal: false
  name: System.Web.UI.WebControls.DataGridColumn
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Web.UI.WebControls.ButtonColumn.#ctor
  parent: System.Web.UI.WebControls.ButtonColumn
  isExternal: false
  name: ButtonColumn()
  nameWithType: ButtonColumn.ButtonColumn()
  fullName: System.Web.UI.WebControls.ButtonColumn.ButtonColumn()
- uid: System.Web.UI.WebControls.ButtonColumn.ButtonType
  parent: System.Web.UI.WebControls.ButtonColumn
  isExternal: false
  name: ButtonType
  nameWithType: ButtonColumn.ButtonType
  fullName: System.Web.UI.WebControls.ButtonColumn.ButtonType
- uid: System.Web.UI.WebControls.ButtonColumnType
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ButtonColumnType
  nameWithType: ButtonColumnType
  fullName: System.Web.UI.WebControls.ButtonColumnType
- uid: System.Web.UI.WebControls.ButtonColumn.CausesValidation
  parent: System.Web.UI.WebControls.ButtonColumn
  isExternal: false
  name: CausesValidation
  nameWithType: ButtonColumn.CausesValidation
  fullName: System.Web.UI.WebControls.ButtonColumn.CausesValidation
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.ButtonColumn.CommandName
  parent: System.Web.UI.WebControls.ButtonColumn
  isExternal: false
  name: CommandName
  nameWithType: ButtonColumn.CommandName
  fullName: System.Web.UI.WebControls.ButtonColumn.CommandName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.ButtonColumn.DataTextField
  parent: System.Web.UI.WebControls.ButtonColumn
  isExternal: false
  name: DataTextField
  nameWithType: ButtonColumn.DataTextField
  fullName: System.Web.UI.WebControls.ButtonColumn.DataTextField
- uid: System.Web.UI.WebControls.ButtonColumn.DataTextFormatString
  parent: System.Web.UI.WebControls.ButtonColumn
  isExternal: false
  name: DataTextFormatString
  nameWithType: ButtonColumn.DataTextFormatString
  fullName: System.Web.UI.WebControls.ButtonColumn.DataTextFormatString
- uid: System.Web.UI.WebControls.ButtonColumn.FormatDataTextValue(System.Object)
  parent: System.Web.UI.WebControls.ButtonColumn
  isExternal: false
  name: FormatDataTextValue(Object)
  nameWithType: ButtonColumn.FormatDataTextValue(Object)
  fullName: System.Web.UI.WebControls.ButtonColumn.FormatDataTextValue(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.ButtonColumn.Initialize
  parent: System.Web.UI.WebControls.ButtonColumn
  isExternal: false
  name: Initialize()
  nameWithType: ButtonColumn.Initialize()
  fullName: System.Web.UI.WebControls.ButtonColumn.Initialize()
- uid: System.Web.UI.WebControls.ButtonColumn.InitializeCell(System.Web.UI.WebControls.TableCell,System.Int32,System.Web.UI.WebControls.ListItemType)
  parent: System.Web.UI.WebControls.ButtonColumn
  isExternal: false
  name: InitializeCell(TableCell,Int32,ListItemType)
  nameWithType: ButtonColumn.InitializeCell(TableCell,Int32,ListItemType)
  fullName: System.Web.UI.WebControls.ButtonColumn.InitializeCell(TableCell,Int32,ListItemType)
- uid: System.Web.UI.WebControls.TableCell
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TableCell
  nameWithType: TableCell
  fullName: System.Web.UI.WebControls.TableCell
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.ListItemType
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ListItemType
  nameWithType: ListItemType
  fullName: System.Web.UI.WebControls.ListItemType
- uid: System.Web.UI.WebControls.ButtonColumn.Text
  parent: System.Web.UI.WebControls.ButtonColumn
  isExternal: false
  name: Text
  nameWithType: ButtonColumn.Text
  fullName: System.Web.UI.WebControls.ButtonColumn.Text
- uid: System.Web.UI.WebControls.ButtonColumn.ValidationGroup
  parent: System.Web.UI.WebControls.ButtonColumn
  isExternal: false
  name: ValidationGroup
  nameWithType: ButtonColumn.ValidationGroup
  fullName: System.Web.UI.WebControls.ButtonColumn.ValidationGroup
- uid: System.Web.UI.WebControls.ButtonColumn.#ctor*
  parent: System.Web.UI.WebControls.ButtonColumn
  isExternal: false
  name: ButtonColumn
  nameWithType: ButtonColumn.ButtonColumn
- uid: System.Web.UI.WebControls.ButtonColumn.ButtonType*
  parent: System.Web.UI.WebControls.ButtonColumn
  isExternal: false
  name: ButtonType
  nameWithType: ButtonColumn.ButtonType
- uid: System.Web.UI.WebControls.ButtonColumn.CausesValidation*
  parent: System.Web.UI.WebControls.ButtonColumn
  isExternal: false
  name: CausesValidation
  nameWithType: ButtonColumn.CausesValidation
- uid: System.Web.UI.WebControls.ButtonColumn.CommandName*
  parent: System.Web.UI.WebControls.ButtonColumn
  isExternal: false
  name: CommandName
  nameWithType: ButtonColumn.CommandName
- uid: System.Web.UI.WebControls.ButtonColumn.DataTextField*
  parent: System.Web.UI.WebControls.ButtonColumn
  isExternal: false
  name: DataTextField
  nameWithType: ButtonColumn.DataTextField
- uid: System.Web.UI.WebControls.ButtonColumn.DataTextFormatString*
  parent: System.Web.UI.WebControls.ButtonColumn
  isExternal: false
  name: DataTextFormatString
  nameWithType: ButtonColumn.DataTextFormatString
- uid: System.Web.UI.WebControls.ButtonColumn.FormatDataTextValue*
  parent: System.Web.UI.WebControls.ButtonColumn
  isExternal: false
  name: FormatDataTextValue
  nameWithType: ButtonColumn.FormatDataTextValue
- uid: System.Web.UI.WebControls.ButtonColumn.Initialize*
  parent: System.Web.UI.WebControls.ButtonColumn
  isExternal: false
  name: Initialize
  nameWithType: ButtonColumn.Initialize
- uid: System.Web.UI.WebControls.ButtonColumn.InitializeCell*
  parent: System.Web.UI.WebControls.ButtonColumn
  isExternal: false
  name: InitializeCell
  nameWithType: ButtonColumn.InitializeCell
- uid: System.Web.UI.WebControls.ButtonColumn.Text*
  parent: System.Web.UI.WebControls.ButtonColumn
  isExternal: false
  name: Text
  nameWithType: ButtonColumn.Text
- uid: System.Web.UI.WebControls.ButtonColumn.ValidationGroup*
  parent: System.Web.UI.WebControls.ButtonColumn
  isExternal: false
  name: ValidationGroup
  nameWithType: ButtonColumn.ValidationGroup
