### YamlMime:ManagedReference
items:
- uid: System.Collections.Specialized.StringDictionary
  id: StringDictionary
  children:
  - System.Collections.Specialized.StringDictionary.#ctor
  - System.Collections.Specialized.StringDictionary.Add(System.String,System.String)
  - System.Collections.Specialized.StringDictionary.Clear
  - System.Collections.Specialized.StringDictionary.ContainsKey(System.String)
  - System.Collections.Specialized.StringDictionary.ContainsValue(System.String)
  - System.Collections.Specialized.StringDictionary.CopyTo(System.Array,System.Int32)
  - System.Collections.Specialized.StringDictionary.Count
  - System.Collections.Specialized.StringDictionary.GetEnumerator
  - System.Collections.Specialized.StringDictionary.IsSynchronized
  - System.Collections.Specialized.StringDictionary.Item(System.String)
  - System.Collections.Specialized.StringDictionary.Keys
  - System.Collections.Specialized.StringDictionary.Remove(System.String)
  - System.Collections.Specialized.StringDictionary.SyncRoot
  - System.Collections.Specialized.StringDictionary.Values
  langs:
  - csharp
  name: StringDictionary
  nameWithType: StringDictionary
  fullName: System.Collections.Specialized.StringDictionary
  type: Class
  summary: "구현 하는 해시 테이블의 키와 값을 가진 개체가 아니라 문자열을 강력한 형식입니다."
  remarks: "키 일 수 없습니다 `null`, 값과는 수입니다.       키를 처리 하는 대/소문자 구분 방식 문자열 사전을 사용 하 여 사용 하기 전에 소문자로 변환 됩니다.       .NET Framework 버전 1.0에서이 클래스는 문화권 구분 문자열 비교를 사용합니다. .NET Framework 1.1 이상 버전에서는이 클래스가 사용 하는 반면 <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=fullName>문자열을 비교할 때.</xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=fullName> 문화권 비교 및 정렬에 미치는 영향에 대 한 자세한 내용은 참조 [문화권을 구분 하지 않는 문자열 작업 수행](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example demonstrates several of the properties and methods of StringDictionary.  \n  \n [!code-cpp[System.Collection.Specialized.StringDictionary#1](~/add/codesnippet/cpp/t-system.collections.spe_4_1.cpp)]\n [!code-cs[System.Collection.Specialized.StringDictionary#1](~/add/codesnippet/csharp/t-system.collections.spe_4_1.cs)]\n [!code-vb[System.Collection.Specialized.StringDictionary#1](~/add/codesnippet/visualbasic/t-system.collections.spe_4_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.Design.Serialization.DesignerSerializer("System.Diagnostics.Design.StringDictionaryCodeDomSerializer, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.ComponentModel.Design.Serialization.CodeDomSerializer, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      public class StringDictionary : System.Collections.IEnumerable
  inheritance:
  - System.Object
  implements:
  - System.Collections.IEnumerable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Collections.Specialized.StringDictionary.#ctor
  id: '#ctor'
  parent: System.Collections.Specialized.StringDictionary
  langs:
  - csharp
  name: StringDictionary()
  nameWithType: StringDictionary.StringDictionary()
  fullName: System.Collections.Specialized.StringDictionary.StringDictionary()
  type: Constructor
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Collections.Specialized.StringDictionary&quot;> </xref> 클래스입니다."
  remarks: "이 생성자는 o (1) 연산입니다."
  example:
  - "The following code example demonstrates several of the properties and methods of <xref:System.Collections.Specialized.StringDictionary>.  \n  \n [!code-cpp[System.Collection.Specialized.StringDictionary#1](~/add/codesnippet/cpp/m-system.collections.spe_11_1.cpp)]\n [!code-cs[System.Collection.Specialized.StringDictionary#1](~/add/codesnippet/csharp/m-system.collections.spe_11_1.cs)]\n [!code-vb[System.Collection.Specialized.StringDictionary#1](~/add/codesnippet/visualbasic/m-system.collections.spe_11_1.vb)]"
  syntax:
    content: public StringDictionary ();
    parameters: []
  overload: System.Collections.Specialized.StringDictionary.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.StringDictionary.Add(System.String,System.String)
  id: Add(System.String,System.String)
  parent: System.Collections.Specialized.StringDictionary
  langs:
  - csharp
  name: Add(String,String)
  nameWithType: StringDictionary.Add(String,String)
  fullName: System.Collections.Specialized.StringDictionary.Add(String,String)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "지정 된 키와 값에 항목을 추가 하는 <xref href=&quot;System.Collections.Specialized.StringDictionary&quot;> </xref>합니다."
  remarks: "키를 처리 하는 대/소문자 구분 방식 문자열 사전에 추가 하기 전에 소문자로 변환 됩니다.       이 메서드는 o (1) 작업."
  example:
  - "The following code example demonstrates how to add and remove elements from a <xref:System.Collections.Specialized.StringDictionary>.  \n  \n [!code-cpp[System.Collection.Specialized.StringDictionary_AddRemove#1](~/add/codesnippet/cpp/24bf4a19-6a1d-4d4c-ba1b-_1.cpp)]\n [!code-cs[System.Collection.Specialized.StringDictionary_AddRemove#1](~/add/codesnippet/csharp/24bf4a19-6a1d-4d4c-ba1b-_1.cs)]\n [!code-vb[System.Collection.Specialized.StringDictionary_AddRemove#1](~/add/codesnippet/visualbasic/24bf4a19-6a1d-4d4c-ba1b-_1.vb)]"
  syntax:
    content: public virtual void Add (string key, string value);
    parameters:
    - id: key
      type: System.String
      description: "추가할 항목의 키입니다."
    - id: value
      type: System.String
      description: "추가할 항목의 값입니다. 값일 수 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Collections.Specialized.StringDictionary.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>key</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "같은 키를 가진 항목에 이미 있습니다.는 <xref href=&quot;System.Collections.Specialized.StringDictionary&quot;> </xref>합니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref href=&quot;System.Collections.Specialized.StringDictionary&quot;> </xref> 읽기 전용입니다."
  platform:
  - net462
- uid: System.Collections.Specialized.StringDictionary.Clear
  id: Clear
  parent: System.Collections.Specialized.StringDictionary
  langs:
  - csharp
  name: Clear()
  nameWithType: StringDictionary.Clear()
  fullName: System.Collections.Specialized.StringDictionary.Clear()
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "항목을 모두 제거 된 <xref href=&quot;System.Collections.Specialized.StringDictionary&quot;> </xref>합니다."
  remarks: "이 메서드는 O는 (`n`) 작업, 여기서 `n` 은 <xref:System.Collections.Specialized.StringDictionary.Count%2A>.</xref:System.Collections.Specialized.StringDictionary.Count%2A>"
  example:
  - "The following code example demonstrates how to add and remove elements from a <xref:System.Collections.Specialized.StringDictionary>.  \n  \n [!code-cpp[System.Collection.Specialized.StringDictionary_AddRemove#1](~/add/codesnippet/cpp/m-system.collections.spe_10_1.cpp)]\n [!code-cs[System.Collection.Specialized.StringDictionary_AddRemove#1](~/add/codesnippet/csharp/m-system.collections.spe_10_1.cs)]\n [!code-vb[System.Collection.Specialized.StringDictionary_AddRemove#1](~/add/codesnippet/visualbasic/m-system.collections.spe_10_1.vb)]"
  syntax:
    content: public virtual void Clear ();
    parameters: []
  overload: System.Collections.Specialized.StringDictionary.Clear*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref href=&quot;System.Collections.Specialized.StringDictionary&quot;> </xref> 읽기 전용입니다."
  platform:
  - net462
- uid: System.Collections.Specialized.StringDictionary.ContainsKey(System.String)
  id: ContainsKey(System.String)
  parent: System.Collections.Specialized.StringDictionary
  langs:
  - csharp
  name: ContainsKey(String)
  nameWithType: StringDictionary.ContainsKey(String)
  fullName: System.Collections.Specialized.StringDictionary.ContainsKey(String)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "있는지 여부를 확인는 <xref href=&quot;System.Collections.Specialized.StringDictionary&quot;> </xref> 특정 키가 들어 있습니다."
  remarks: "키를 처리 하는 대/소문자 구분 방식 사용 하기 전에 소문자로 변환 됩니다.       이 메서드는 o (1) 작업.       컬렉션의 개체를 사용 하 여이 메서드는.NET Framework 2.0 부터는 <xref:System.Object.Equals%2A>및 <xref:System.IComparable.CompareTo%2A>에 대 한 메서드 `item` 확인 하려면 여부 `item` 존재 합니다.</xref:System.IComparable.CompareTo%2A> </xref:System.Object.Equals%2A> .NET Framework의 이전 버전에서는이 확인 작업을 수행를 사용 하 여는 <xref:System.Object.Equals%2A>및 <xref:System.IComparable.CompareTo%2A>의 메서드는 `item` 컬렉션의 개체에 대 한 매개 변수.</xref:System.IComparable.CompareTo%2A> </xref:System.Object.Equals%2A>"
  example:
  - "The following code example searches for an element in a <xref:System.Collections.Specialized.StringDictionary>.  \n  \n [!code-cpp[System.Collection.Specialized.StringDictionary_Contains#1](~/add/codesnippet/cpp/m-system.collections.spe_27_1.cpp)]\n [!code-cs[System.Collection.Specialized.StringDictionary_Contains#1](~/add/codesnippet/csharp/m-system.collections.spe_27_1.cs)]\n [!code-vb[System.Collection.Specialized.StringDictionary_Contains#1](~/add/codesnippet/visualbasic/m-system.collections.spe_27_1.vb)]"
  syntax:
    content: public virtual bool ContainsKey (string key);
    parameters:
    - id: key
      type: System.String
      description: "찾을 수 있는 키의 <xref href=&quot;System.Collections.Specialized.StringDictionary&quot;> </xref>합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우는 <xref href=&quot;System.Collections.Specialized.StringDictionary&quot;> </xref> 지정 된 항목이 고, 그렇지 않으면 키 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Collections.Specialized.StringDictionary.ContainsKey*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The key is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Collections.Specialized.StringDictionary.ContainsValue(System.String)
  id: ContainsValue(System.String)
  parent: System.Collections.Specialized.StringDictionary
  langs:
  - csharp
  name: ContainsValue(String)
  nameWithType: StringDictionary.ContainsValue(String)
  fullName: System.Collections.Specialized.StringDictionary.ContainsValue(String)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "있는지 여부를 확인는 <xref href=&quot;System.Collections.Specialized.StringDictionary&quot;> </xref> 특정 값을 포함 합니다."
  remarks: "사용 하 여 지정 된 값에는 StringDictionary 요소 값이 비교 되는 <xref:System.Object.Equals%2A?displayProperty=fullName>메서드.</xref:System.Object.Equals%2A?displayProperty=fullName>       이 메서드는 선형 검색; 수행 따라서 평균 실행 시간은 <xref:System.Collections.Specialized.StringDictionary.Count%2A>.</xref:System.Collections.Specialized.StringDictionary.Count%2A> 비례 즉,이 메서드는는 O (`n`) 작업, 여기서 `n` 은 <xref:System.Collections.Specialized.StringDictionary.Count%2A>.</xref:System.Collections.Specialized.StringDictionary.Count%2A>       컬렉션의 개체를 사용 하 여이 메서드는.NET Framework 2.0 부터는 <xref:System.Object.Equals%2A>및 <xref:System.IComparable.CompareTo%2A>에 대 한 메서드 `item` 확인 하려면 여부 `item` 존재 합니다.</xref:System.IComparable.CompareTo%2A> </xref:System.Object.Equals%2A> .NET Framework의 이전 버전에서는이 확인 작업을 수행를 사용 하 여는 <xref:System.Object.Equals%2A>및 <xref:System.IComparable.CompareTo%2A>의 메서드는 `item` 컬렉션의 개체에 대 한 매개 변수.</xref:System.IComparable.CompareTo%2A> </xref:System.Object.Equals%2A>"
  example:
  - "The following code example searches for an element in a <xref:System.Collections.Specialized.StringDictionary>.  \n  \n [!code-cpp[System.Collection.Specialized.StringDictionary_Contains#1](~/add/codesnippet/cpp/m-system.collections.spe_40_1.cpp)]\n [!code-cs[System.Collection.Specialized.StringDictionary_Contains#1](~/add/codesnippet/csharp/m-system.collections.spe_40_1.cs)]\n [!code-vb[System.Collection.Specialized.StringDictionary_Contains#1](~/add/codesnippet/visualbasic/m-system.collections.spe_40_1.vb)]"
  syntax:
    content: public virtual bool ContainsValue (string value);
    parameters:
    - id: value
      type: System.String
      description: "찾을 값은 <xref href=&quot;System.Collections.Specialized.StringDictionary&quot;> </xref>합니다. 값일 수 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우는 <xref href=&quot;System.Collections.Specialized.StringDictionary&quot;> </xref> 지정된 된 값을 가진 요소가 들어 있으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Collections.Specialized.StringDictionary.ContainsValue*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.StringDictionary.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Collections.Specialized.StringDictionary
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: StringDictionary.CopyTo(Array,Int32)
  fullName: System.Collections.Specialized.StringDictionary.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "1 차원 문자열 사전 값을 복사 <xref:System.Array>지정된 된 인덱스에 있는 인스턴스에.</xref:System.Array>"
  remarks: "CopyTo <xref:System.Collections.DictionaryEntry?displayProperty=fullName>.</xref:System.Collections.DictionaryEntry?displayProperty=fullName> 형식 캐스트할 수 있는 개체 복사 <xref:System.Collections.DictionaryEntry>키와 값을 포함합니다.</xref:System.Collections.DictionaryEntry>       <xref:System.Array>열거자 <xref:System.Collections.Specialized.StringDictionary>.</xref:System.Collections.Specialized.StringDictionary> 을 반복 하는 순서 대로 정렬 되는</xref:System.Array> 복사 된 요소       이 메서드는 O는 (`n`) 작업, 여기서 `n` 은 <xref:System.Collections.Specialized.StringDictionary.Count%2A>.</xref:System.Collections.Specialized.StringDictionary.Count%2A>"
  example:
  - "The following code example shows how a StringDictionary can be copied to an array.  \n  \n [!code-cpp[System.Collections.Specialized.StringDictionary.CopyTo#1](~/add/codesnippet/cpp/9e0b7952-2449-4de8-9ce1-_1.cpp)]\n [!code-cs[System.Collections.Specialized.StringDictionary.CopyTo#1](~/add/codesnippet/csharp/9e0b7952-2449-4de8-9ce1-_1.cs)]\n [!code-vb[System.Collections.Specialized.StringDictionary.CopyTo#1](~/add/codesnippet/visualbasic/9e0b7952-2449-4de8-9ce1-_1.vb)]"
  syntax:
    content: public virtual void CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "1 차원 <xref:System.Array>에서 복사 된 값의 대상인은 <xref href=&quot;System.Collections.Specialized.StringDictionary&quot;> </xref>.</xref:System.Array>"
    - id: index
      type: System.Int32
      description: "복사를 시작할 배열의 인덱스입니다."
  overload: System.Collections.Specialized.StringDictionary.CopyTo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>array</code>가 다차원 배열인 경우       -또는-에 있는 요소의 수는 <xref href=&quot;System.Collections.Specialized.StringDictionary&quot;> </xref> 에서 사용 가능한 공간 보다 큰 <code>index</code> 의 끝에 <code>array</code>합니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>array</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>하한값 보다 작습니다 <code>array</code>합니다."
  platform:
  - net462
- uid: System.Collections.Specialized.StringDictionary.Count
  id: Count
  parent: System.Collections.Specialized.StringDictionary
  langs:
  - csharp
  name: Count
  nameWithType: StringDictionary.Count
  fullName: System.Collections.Specialized.StringDictionary.Count
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "에 있는 키/값 쌍의 수를 가져옵니다는 <xref href=&quot;System.Collections.Specialized.StringDictionary&quot;> </xref>합니다."
  remarks: ''
  example:
  - "The following code example enumerates the elements of a <xref:System.Collections.Specialized.StringDictionary>.  \n  \n [!code-cpp[System.Collection.Specialized.StringDictionary_Enumeration#1](~/add/codesnippet/cpp/p-system.collections.spe_0_1.cpp)]\n [!code-cs[System.Collection.Specialized.StringDictionary_Enumeration#1](~/add/codesnippet/csharp/p-system.collections.spe_0_1.cs)]\n [!code-vb[System.Collection.Specialized.StringDictionary_Enumeration#1](~/add/codesnippet/visualbasic/p-system.collections.spe_0_1.vb)]"
  syntax:
    content: public virtual int Count { get; }
    return:
      type: System.Int32
      description: "키/값 쌍의 수에는 <xref href=&quot;System.Collections.Specialized.StringDictionary&quot;> </xref>합니다.       이 속성의 값을 검색 하는 것은 o (1) 작업입니다."
  overload: System.Collections.Specialized.StringDictionary.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.StringDictionary.GetEnumerator
  id: GetEnumerator
  parent: System.Collections.Specialized.StringDictionary
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: StringDictionary.GetEnumerator()
  fullName: System.Collections.Specialized.StringDictionary.GetEnumerator()
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "문자열 사전에서 반복 하는 열거자를 반환 합니다."
  remarks: "`foreach` C# 언어의 (`for each` Visual basic에서)은 열거자의 복잡성을 숨깁니다.  따라서 사용 하 여 `foreach` 열거자를 직접 조작 하는 대신이 좋습니다.       열거자는 컬렉션의에서 데이터를 읽는 데 사용할 수 있지만 기본 컬렉션을 수정 하는 사용할 수 없습니다.       처음에 열거자는 컬렉션의 첫 번째 요소 앞에 배치 됩니다. <xref:System.Collections.IEnumerator.Reset%2A>또한이 위치로 복원 열거자를 가져옵니다.</xref:System.Collections.IEnumerator.Reset%2A>  이 위치에서 <xref:System.Collections.IEnumerator.Current%2A>정의 되지 않습니다.</xref:System.Collections.IEnumerator.Current%2A> 따라서 <xref:System.Collections.IEnumerator.MoveNext%2A> <xref:System.Collections.IEnumerator.Current%2A>.</xref:System.Collections.IEnumerator.Current%2A> 의 값을 읽기 전에 컬렉션의 첫 번째 요소로 열거자를</xref:System.Collections.IEnumerator.MoveNext%2A> 호출 해야 합니다.       <xref:System.Collections.IEnumerator.Current%2A>될 때까지 동일한 개체를 반환 <xref:System.Collections.IEnumerator.MoveNext%2A>또는 <xref:System.Collections.IEnumerator.Reset%2A>호출 됩니다.</xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.MoveNext%2A></xref:System.Collections.IEnumerator.Current%2A> <xref:System.Collections.IEnumerator.MoveNext%2A>설정 <xref:System.Collections.IEnumerator.Current%2A>를 다음 요소로.</xref:System.Collections.IEnumerator.Current%2A></xref:System.Collections.IEnumerator.MoveNext%2A>       경우 <xref:System.Collections.IEnumerator.MoveNext%2A>전달 컬렉션의 마지막 요소 뒤에 열거자는 컬렉션의 끝에 배치 되 고 <xref:System.Collections.IEnumerator.MoveNext%2A>반환 `false`.</xref:System.Collections.IEnumerator.MoveNext%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> 열거자가 있는 경우이 위치에 대 한 후속 호출에서 <xref:System.Collections.IEnumerator.MoveNext%2A>반환할 수도 `false`.</xref:System.Collections.IEnumerator.MoveNext%2A> 마지막으로 호출 하는 경우 <xref:System.Collections.IEnumerator.MoveNext%2A>반환 `false`, <xref:System.Collections.IEnumerator.Current%2A>정의 되지 않습니다.</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> <xref:System.Collections.IEnumerator.Current%2A>다시, 컬렉션의 첫 번째 요소를 호출할 수 있습니다 <xref:System.Collections.IEnumerator.Reset%2A>그 뒤 <xref:System.Collections.IEnumerator.MoveNext%2A>.</xref:System.Collections.IEnumerator.MoveNext%2A> </xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.Current%2A> 설정 하려면       열거자는 컬렉션이 변경 되지으로 유효한 상태를 유지 합니다. 컬렉션 변경 되 면 추가, 수정 또는 요소를 삭제와 같은 열거자는 무효화 하 고 해당 동작은 정의 되지 않습니다.       열거자는 컬렉션에 배타적으로 액세스가 없습니다. 따라서 컬렉션을 열거 것은 본질적으로 스레드로부터 안전한 프로시저가 아닙니다.  을 열거 하는 동안 스레드로부터 안전을 보장 하려면 전체 열거 동안 컬렉션을 잠글 수 있습니다.  컬렉션에 여러 스레드에서 읽기 및 쓰기에 대 한 액세스를 허용 하려면 사용자 지정 동기화를 구현 해야 합니다.       이 메서드는 o (1) 작업."
  example:
  - "The following code example enumerates the elements of a <xref:System.Collections.Specialized.StringDictionary>.  \n  \n [!code-cpp[System.Collection.Specialized.StringDictionary_Enumeration#1](~/add/codesnippet/cpp/m-system.collections.spe_35_1.cpp)]\n [!code-cs[System.Collection.Specialized.StringDictionary_Enumeration#1](~/add/codesnippet/csharp/m-system.collections.spe_35_1.cs)]\n [!code-vb[System.Collection.Specialized.StringDictionary_Enumeration#1](~/add/codesnippet/visualbasic/m-system.collections.spe_35_1.vb)]"
  syntax:
    content: public virtual System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "<xref:System.Collections.IEnumerator>반복 하는 문자열 사전.</xref:System.Collections.IEnumerator>"
  overload: System.Collections.Specialized.StringDictionary.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.StringDictionary.IsSynchronized
  id: IsSynchronized
  parent: System.Collections.Specialized.StringDictionary
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: StringDictionary.IsSynchronized
  fullName: System.Collections.Specialized.StringDictionary.IsSynchronized
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "에 대 한 액세스 여부를 나타내는 값을 가져옵니다는 <xref href=&quot;System.Collections.Specialized.StringDictionary&quot;> </xref> 이 동기화 되었으면 (스레드로부터 안전 하 게 보호)."
  remarks: "A <xref:System.Collections.Specialized.StringDictionary>인스턴스 동기화 되지 않았습니다.</xref:System.Collections.Specialized.StringDictionary> 파생된 클래스의 동기화 된 버전을 제공할 수 있습니다는 <xref:System.Collections.Specialized.StringDictionary>를 사용 하 여 <xref:System.Collections.Specialized.StringDictionary.SyncRoot%2A>속성.</xref:System.Collections.Specialized.StringDictionary.SyncRoot%2A> </xref:System.Collections.Specialized.StringDictionary>       컬렉션을 열거 본질적으로 스레드로부터 안전한 프로시저가 아닙니다. 컬렉션이 동기화 되어 있을 때 다른 스레드에서 수 수정할 열거자에서 예외가 발생 하는 컬렉션입니다. 열거 동안 스레드 보안을 보장 하려면 전체 열거 동안 컬렉션을 잠글 하거나 다른 스레드에서 변경 된 내용으로 인해 발생 한 예외를 catch 합니다."
  example:
  - "The following code example shows how to lock the collection using the <xref:System.Collections.Specialized.StringDictionary.SyncRoot%2A> during the entire enumeration.  \n  \n [!code-cpp[System.Collection.Specialized.StringDictionary#2](~/add/codesnippet/cpp/p-system.collections.spe_13_1.cpp)]\n [!code-cs[System.Collection.Specialized.StringDictionary#2](~/add/codesnippet/csharp/p-system.collections.spe_13_1.cs)]\n [!code-vb[System.Collection.Specialized.StringDictionary#2](~/add/codesnippet/visualbasic/p-system.collections.spe_13_1.vb)]  \n  \n Retrieving the value of this property is an O(1) operation."
  syntax:
    content: public virtual bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우에 대 한 액세스는 <xref href=&quot;System.Collections.Specialized.StringDictionary&quot;> </xref> 은 동기화 (스레드로부터 안전함); 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Collections.Specialized.StringDictionary.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.StringDictionary.Item(System.String)
  id: Item(System.String)
  parent: System.Collections.Specialized.StringDictionary
  langs:
  - csharp
  name: Item(String)
  nameWithType: StringDictionary.Item(String)
  fullName: System.Collections.Specialized.StringDictionary.Item(String)
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "지정된 된 키와 연결 된 값을 가져오거나 설정 합니다."
  remarks: "키를 처리 하는 대/소문자 구분 방식 사용 하기 전에 소문자로 변환 됩니다.       키 일 수 없습니다 `null`, 값과는 수입니다. 구분 하기 위해 `null` 지정된 된 키를 찾을 수 없으므로 반환 되는 및 `null` 지정된 된 키의 값은 반환 되는 `null`를 사용 하 여는 <xref:System.Collections.Specialized.StringDictionary.ContainsKey%2A>목록에 키가 있는지 확인 하는 메서드.</xref:System.Collections.Specialized.StringDictionary.ContainsKey%2A>       C# 언어는 키워드를 사용 하 여 항목 속성을 구현 하는 대신 인덱서를 정의 합니다. Visual Basic에서는 동일한 인덱싱 기능을 기본 속성으로 항목을 구현 합니다.       이 속성의 값을 검색 하 하는 것은 o (1) 연산입니다. o (1) 작업 이기도 속성을 설정 합니다."
  example:
  - "The following code example enumerates the elements of a <xref:System.Collections.Specialized.StringDictionary>.  \n  \n [!code-cpp[System.Collection.Specialized.StringDictionary_Enumeration#1](~/add/codesnippet/cpp/p-system.collections.spe_17_1.cpp)]\n [!code-cs[System.Collection.Specialized.StringDictionary_Enumeration#1](~/add/codesnippet/csharp/p-system.collections.spe_17_1.cs)]\n [!code-vb[System.Collection.Specialized.StringDictionary_Enumeration#1](~/add/codesnippet/visualbasic/p-system.collections.spe_17_1.vb)]"
  syntax:
    content: public virtual string this[string key] { get; set; }
    parameters:
    - id: key
      type: System.String
      description: "키 값을 가져오거나 설정 합니다."
    return:
      type: System.String
      description: "지정된 된 키와 연결 된 값입니다. 지정된 된 키가 없으면 Get 반환 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, 집합 지정된 된 키와 새 항목을 만듭니다."
  overload: System.Collections.Specialized.StringDictionary.Item*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>key</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Collections.Specialized.StringDictionary.Keys
  id: Keys
  parent: System.Collections.Specialized.StringDictionary
  langs:
  - csharp
  name: Keys
  nameWithType: StringDictionary.Keys
  fullName: System.Collections.Specialized.StringDictionary.Keys
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "에 있는 키의 컬렉션을 가져옵니다는 <xref href=&quot;System.Collections.Specialized.StringDictionary&quot;> </xref>합니다."
  remarks: "에 있는 키의 순서는 <xref:System.Collections.ICollection>지정 되어 있지에 연결 된 값과 순서가 동일 하지만 <xref:System.Collections.ICollection>에서 반환 되는 <xref:System.Collections.Specialized.StringDictionary.Values%2A>메서드.</xref:System.Collections.Specialized.StringDictionary.Values%2A> </xref:System.Collections.ICollection> </xref:System.Collections.ICollection>       반환 된 <xref:System.Collections.ICollection>정적 복사 하지 않습니다; 대신 <xref:System.Collections.ICollection>원래 <xref:System.Collections.Specialized.StringDictionary>.</xref:System.Collections.Specialized.StringDictionary> 의 키를 다시 참조할</xref:System.Collections.ICollection> </xref:System.Collections.ICollection> 따라서 <xref:System.Collections.Specialized.StringDictionary>계속 <xref:System.Collections.ICollection>.</xref:System.Collections.ICollection> 반영</xref:System.Collections.Specialized.StringDictionary> 변경       이 속성의 값을 검색 하는 것은 o (1) 작업입니다."
  example:
  - "The following code example enumerates the elements of a <xref:System.Collections.Specialized.StringDictionary>.  \n  \n [!code-cpp[System.Collection.Specialized.StringDictionary_Enumeration#1](~/add/codesnippet/cpp/p-system.collections.spe_4_1.cpp)]\n [!code-cs[System.Collection.Specialized.StringDictionary_Enumeration#1](~/add/codesnippet/csharp/p-system.collections.spe_4_1.cs)]\n [!code-vb[System.Collection.Specialized.StringDictionary_Enumeration#1](~/add/codesnippet/visualbasic/p-system.collections.spe_4_1.vb)]"
  syntax:
    content: public virtual System.Collections.ICollection Keys { get; }
    return:
      type: System.Collections.ICollection
      description: "<xref:System.Collections.ICollection>의 키를 제공 하는 <xref href=&quot;System.Collections.Specialized.StringDictionary&quot;> </xref>.</xref:System.Collections.ICollection>"
  overload: System.Collections.Specialized.StringDictionary.Keys*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.StringDictionary.Remove(System.String)
  id: Remove(System.String)
  parent: System.Collections.Specialized.StringDictionary
  langs:
  - csharp
  name: Remove(String)
  nameWithType: StringDictionary.Remove(String)
  fullName: System.Collections.Specialized.StringDictionary.Remove(String)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "문자열 사전에서 지정된 된 키와 항목을 제거합니다."
  remarks: "경우는 <xref:System.Collections.Specialized.StringDictionary>지정된 키를 가진 요소가 포함 되지 않습니다는 <xref:System.Collections.Specialized.StringDictionary>변경 되지 않습니다.</xref:System.Collections.Specialized.StringDictionary> </xref:System.Collections.Specialized.StringDictionary> 예외가 throw 되지 않습니다.       키를 처리 하는 대/소문자 구분 방식 문자열 사전에서 제거할 항목을 찾을 사용 하기 전에 소문자로 변환 됩니다.       이 메서드는 o (1) 작업."
  example:
  - "The following code example demonstrates how to add and remove elements from a <xref:System.Collections.Specialized.StringDictionary>.  \n  \n [!code-cpp[System.Collection.Specialized.StringDictionary_AddRemove#1](~/add/codesnippet/cpp/m-system.collections.spe_25_1.cpp)]\n [!code-cs[System.Collection.Specialized.StringDictionary_AddRemove#1](~/add/codesnippet/csharp/m-system.collections.spe_25_1.cs)]\n [!code-vb[System.Collection.Specialized.StringDictionary_AddRemove#1](~/add/codesnippet/visualbasic/m-system.collections.spe_25_1.vb)]"
  syntax:
    content: public virtual void Remove (string key);
    parameters:
    - id: key
      type: System.String
      description: "제거할 엔트리의 키입니다."
  overload: System.Collections.Specialized.StringDictionary.Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The key is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref href=&quot;System.Collections.Specialized.StringDictionary&quot;> </xref> 읽기 전용입니다."
  platform:
  - net462
- uid: System.Collections.Specialized.StringDictionary.SyncRoot
  id: SyncRoot
  parent: System.Collections.Specialized.StringDictionary
  langs:
  - csharp
  name: SyncRoot
  nameWithType: StringDictionary.SyncRoot
  fullName: System.Collections.Specialized.StringDictionary.SyncRoot
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "에 대 한 액세스를 동기화 하는 데 사용할 수 있는 개체를 가져옵니다는 <xref href=&quot;System.Collections.Specialized.StringDictionary&quot;> </xref>합니다."
  remarks: "파생된 클래스의 동기화 된 버전을 제공할 수 있습니다는 <xref:System.Collections.Specialized.StringDictionary>SyncRoot 속성을 사용 하 여.</xref:System.Collections.Specialized.StringDictionary> 동기화 하는 코드의 SyncRoot에 대 한 작업을 수행 해야는 <xref:System.Collections.Specialized.StringDictionary>, <xref:System.Collections.Specialized.StringDictionary>.</xref:System.Collections.Specialized.StringDictionary> 으로 만들어지므로</xref:System.Collections.Specialized.StringDictionary> 이렇게 하면 다른 개체에서 파생 된 컬렉션의 적절 한 작업입니다. 특히, 동시에 수정할 수 있는 다른 스레드와 적절 한 동기화를 유지 관리는 <xref:System.Collections.Specialized.StringDictionary>개체입니다.</xref:System.Collections.Specialized.StringDictionary>       컬렉션을 열거 본질적으로 스레드로부터 안전한 프로시저가 아닙니다. 컬렉션이 동기화 되어 있을 때 다른 스레드에서 수 수정할 열거자에서 예외가 발생 하는 컬렉션입니다. 열거 동안 스레드 보안을 보장 하려면 전체 열거 동안 컬렉션을 잠글 하거나 다른 스레드에서 변경 된 내용으로 인해 발생 한 예외를 catch 합니다."
  example:
  - "The following code example shows how to lock the collection using the SyncRoot during the entire enumeration.  \n  \n [!code-cpp[System.Collection.Specialized.StringDictionary#2](~/add/codesnippet/cpp/p-system.collections.spe_16_1.cpp)]\n [!code-cs[System.Collection.Specialized.StringDictionary#2](~/add/codesnippet/csharp/p-system.collections.spe_16_1.cs)]\n [!code-vb[System.Collection.Specialized.StringDictionary#2](~/add/codesnippet/visualbasic/p-system.collections.spe_16_1.vb)]  \n  \n Retrieving the value of this property is an O(1) operation."
  syntax:
    content: public virtual object SyncRoot { get; }
    return:
      type: System.Object
      description: "<xref:System.Object>에 대 한 액세스를 동기화 하는 데 사용 하 여 <xref href=&quot;System.Collections.Specialized.StringDictionary&quot;> </xref>.</xref:System.Object>"
  overload: System.Collections.Specialized.StringDictionary.SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.StringDictionary.Values
  id: Values
  parent: System.Collections.Specialized.StringDictionary
  langs:
  - csharp
  name: Values
  nameWithType: StringDictionary.Values
  fullName: System.Collections.Specialized.StringDictionary.Values
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "에 있는 값의 컬렉션을 가져옵니다는 <xref href=&quot;System.Collections.Specialized.StringDictionary&quot;> </xref>합니다."
  remarks: "에 있는 값의 순서는 <xref:System.Collections.ICollection>지정 되어 있지는 연결 된 키와 순서가 동일 하지만 <xref:System.Collections.ICollection>에서 반환 되는 <xref:System.Collections.Specialized.StringDictionary.Keys%2A>메서드.</xref:System.Collections.Specialized.StringDictionary.Keys%2A> </xref:System.Collections.ICollection> </xref:System.Collections.ICollection>       반환 된 <xref:System.Collections.ICollection>정적 복사 하지 않습니다; 대신 <xref:System.Collections.ICollection> <xref:System.Collections.Specialized.StringDictionary>.</xref:System.Collections.Specialized.StringDictionary> 원래에서 값을 다시 참조</xref:System.Collections.ICollection> </xref:System.Collections.ICollection> 따라서 <xref:System.Collections.Specialized.StringDictionary>계속 <xref:System.Collections.ICollection>.</xref:System.Collections.ICollection> 반영</xref:System.Collections.Specialized.StringDictionary> 변경       이 속성의 값을 검색 하는 것은 o (1) 작업입니다."
  example:
  - "The following code example enumerates the elements of a <xref:System.Collections.Specialized.StringDictionary>.  \n  \n [!code-vb[System.Collection.Specialized.StringDictionary_Enumeration#2](~/add/codesnippet/visualbasic/p-system.collections.spe_18_1.vb)]\n [!code-cpp[System.Collection.Specialized.StringDictionary_Enumeration#2](~/add/codesnippet/cpp/p-system.collections.spe_18_1.cpp)]\n [!code-cs[System.Collection.Specialized.StringDictionary_Enumeration#2](~/add/codesnippet/csharp/p-system.collections.spe_18_1.cs)]"
  syntax:
    content: public virtual System.Collections.ICollection Values { get; }
    return:
      type: System.Collections.ICollection
      description: "<xref:System.Collections.ICollection>에 값을 제공 하는 <xref href=&quot;System.Collections.Specialized.StringDictionary&quot;> </xref>.</xref:System.Collections.ICollection>"
  overload: System.Collections.Specialized.StringDictionary.Values*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Collections.Specialized.StringDictionary.#ctor
  parent: System.Collections.Specialized.StringDictionary
  isExternal: false
  name: StringDictionary()
  nameWithType: StringDictionary.StringDictionary()
  fullName: System.Collections.Specialized.StringDictionary.StringDictionary()
- uid: System.Collections.Specialized.StringDictionary.Add(System.String,System.String)
  parent: System.Collections.Specialized.StringDictionary
  isExternal: false
  name: Add(String,String)
  nameWithType: StringDictionary.Add(String,String)
  fullName: System.Collections.Specialized.StringDictionary.Add(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Specialized.StringDictionary.Clear
  parent: System.Collections.Specialized.StringDictionary
  isExternal: false
  name: Clear()
  nameWithType: StringDictionary.Clear()
  fullName: System.Collections.Specialized.StringDictionary.Clear()
- uid: System.Collections.Specialized.StringDictionary.ContainsKey(System.String)
  parent: System.Collections.Specialized.StringDictionary
  isExternal: false
  name: ContainsKey(String)
  nameWithType: StringDictionary.ContainsKey(String)
  fullName: System.Collections.Specialized.StringDictionary.ContainsKey(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Specialized.StringDictionary.ContainsValue(System.String)
  parent: System.Collections.Specialized.StringDictionary
  isExternal: false
  name: ContainsValue(String)
  nameWithType: StringDictionary.ContainsValue(String)
  fullName: System.Collections.Specialized.StringDictionary.ContainsValue(String)
- uid: System.Collections.Specialized.StringDictionary.CopyTo(System.Array,System.Int32)
  parent: System.Collections.Specialized.StringDictionary
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: StringDictionary.CopyTo(Array,Int32)
  fullName: System.Collections.Specialized.StringDictionary.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Specialized.StringDictionary.Count
  parent: System.Collections.Specialized.StringDictionary
  isExternal: false
  name: Count
  nameWithType: StringDictionary.Count
  fullName: System.Collections.Specialized.StringDictionary.Count
- uid: System.Collections.Specialized.StringDictionary.GetEnumerator
  parent: System.Collections.Specialized.StringDictionary
  isExternal: false
  name: GetEnumerator()
  nameWithType: StringDictionary.GetEnumerator()
  fullName: System.Collections.Specialized.StringDictionary.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Collections.Specialized.StringDictionary.IsSynchronized
  parent: System.Collections.Specialized.StringDictionary
  isExternal: false
  name: IsSynchronized
  nameWithType: StringDictionary.IsSynchronized
  fullName: System.Collections.Specialized.StringDictionary.IsSynchronized
- uid: System.Collections.Specialized.StringDictionary.Item(System.String)
  parent: System.Collections.Specialized.StringDictionary
  isExternal: false
  name: Item(String)
  nameWithType: StringDictionary.Item(String)
  fullName: System.Collections.Specialized.StringDictionary.Item(String)
- uid: System.Collections.Specialized.StringDictionary.Keys
  parent: System.Collections.Specialized.StringDictionary
  isExternal: false
  name: Keys
  nameWithType: StringDictionary.Keys
  fullName: System.Collections.Specialized.StringDictionary.Keys
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Collections.Specialized.StringDictionary.Remove(System.String)
  parent: System.Collections.Specialized.StringDictionary
  isExternal: false
  name: Remove(String)
  nameWithType: StringDictionary.Remove(String)
  fullName: System.Collections.Specialized.StringDictionary.Remove(String)
- uid: System.Collections.Specialized.StringDictionary.SyncRoot
  parent: System.Collections.Specialized.StringDictionary
  isExternal: false
  name: SyncRoot
  nameWithType: StringDictionary.SyncRoot
  fullName: System.Collections.Specialized.StringDictionary.SyncRoot
- uid: System.Collections.Specialized.StringDictionary.Values
  parent: System.Collections.Specialized.StringDictionary
  isExternal: false
  name: Values
  nameWithType: StringDictionary.Values
  fullName: System.Collections.Specialized.StringDictionary.Values
- uid: System.Collections.Specialized.StringDictionary.#ctor*
  parent: System.Collections.Specialized.StringDictionary
  isExternal: false
  name: StringDictionary
  nameWithType: StringDictionary.StringDictionary
- uid: System.Collections.Specialized.StringDictionary.Add*
  parent: System.Collections.Specialized.StringDictionary
  isExternal: false
  name: Add
  nameWithType: StringDictionary.Add
- uid: System.Collections.Specialized.StringDictionary.Clear*
  parent: System.Collections.Specialized.StringDictionary
  isExternal: false
  name: Clear
  nameWithType: StringDictionary.Clear
- uid: System.Collections.Specialized.StringDictionary.ContainsKey*
  parent: System.Collections.Specialized.StringDictionary
  isExternal: false
  name: ContainsKey
  nameWithType: StringDictionary.ContainsKey
- uid: System.Collections.Specialized.StringDictionary.ContainsValue*
  parent: System.Collections.Specialized.StringDictionary
  isExternal: false
  name: ContainsValue
  nameWithType: StringDictionary.ContainsValue
- uid: System.Collections.Specialized.StringDictionary.CopyTo*
  parent: System.Collections.Specialized.StringDictionary
  isExternal: false
  name: CopyTo
  nameWithType: StringDictionary.CopyTo
- uid: System.Collections.Specialized.StringDictionary.Count*
  parent: System.Collections.Specialized.StringDictionary
  isExternal: false
  name: Count
  nameWithType: StringDictionary.Count
- uid: System.Collections.Specialized.StringDictionary.GetEnumerator*
  parent: System.Collections.Specialized.StringDictionary
  isExternal: false
  name: GetEnumerator
  nameWithType: StringDictionary.GetEnumerator
- uid: System.Collections.Specialized.StringDictionary.IsSynchronized*
  parent: System.Collections.Specialized.StringDictionary
  isExternal: false
  name: IsSynchronized
  nameWithType: StringDictionary.IsSynchronized
- uid: System.Collections.Specialized.StringDictionary.Item*
  parent: System.Collections.Specialized.StringDictionary
  isExternal: false
  name: Item
  nameWithType: StringDictionary.Item
- uid: System.Collections.Specialized.StringDictionary.Keys*
  parent: System.Collections.Specialized.StringDictionary
  isExternal: false
  name: Keys
  nameWithType: StringDictionary.Keys
- uid: System.Collections.Specialized.StringDictionary.Remove*
  parent: System.Collections.Specialized.StringDictionary
  isExternal: false
  name: Remove
  nameWithType: StringDictionary.Remove
- uid: System.Collections.Specialized.StringDictionary.SyncRoot*
  parent: System.Collections.Specialized.StringDictionary
  isExternal: false
  name: SyncRoot
  nameWithType: StringDictionary.SyncRoot
- uid: System.Collections.Specialized.StringDictionary.Values*
  parent: System.Collections.Specialized.StringDictionary
  isExternal: false
  name: Values
  nameWithType: StringDictionary.Values
