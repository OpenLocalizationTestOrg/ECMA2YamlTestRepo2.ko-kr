### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.ObjectDataSourceEventArgs
  id: ObjectDataSourceEventArgs
  children:
  - System.Web.UI.WebControls.ObjectDataSourceEventArgs.#ctor(System.Object)
  - System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance
  langs:
  - csharp
  name: ObjectDataSourceEventArgs
  nameWithType: ObjectDataSourceEventArgs
  fullName: System.Web.UI.WebControls.ObjectDataSourceEventArgs
  type: Class
  summary: "에 대 한 데이터를 제공는 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource.ObjectCreating&quot;> </xref> 및 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource.ObjectCreated&quot;> </xref> 의 이벤트는 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> 제어 합니다."
  remarks: "ObjectDataSourceEventArgs 클래스에서 사용 되는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating%2A>및 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated%2A>방법을 사용 하는 데이터 작업 하기 전에 비즈니스 개체 인스턴스에 대 한 액세스를 제공 하는 <xref:System.Web.UI.WebControls.ObjectDataSource>제어 및 비즈니스 개체 이루어집니다.</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating%2A> 비즈니스 개체 설정 되 고 사용 하 여 액세스는 <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A>속성.</xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A> 처리 하는 이벤트 처리기 대리자를 추가 하 여는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating>이벤트를 대신 사용자 지정 코드에서 비즈니스 개체의 인스턴스를 만들 수는 <xref:System.Web.UI.WebControls.ObjectDataSource>인스턴스화를 수행 합니다.</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating> 이 기능은; 인스턴스를 만드는 기본이 아닌 생성자를 호출 하려면 또는 비즈니스 개체의 기본이 아닌 인스턴스를 원하는 경우 유용 <xref:System.Web.UI.WebControls.ObjectDataSource>항상와 함께 작동 하는 비즈니스 개체의 인스턴스를 만드는 기본 생성자를 호출 합니다.</xref:System.Web.UI.WebControls.ObjectDataSource> 처리 하는 이벤트 처리기 대리자를 추가할 수도 있습니다는 <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>공개적으로 액세스할 수 있는 이벤트 추가 초기화 또는 작업을 수행 하는 비즈니스 개체의 멤버를 노출 합니다.</xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>       <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating%2A>및 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated%2A>메서드에 의해 호출 되지 않습니다는 <xref:System.Web.UI.WebControls.ObjectDataSource>컨트롤이 데이터 작업을 수행 하는 비즈니스 개체 메서드는 경우 `static`.</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating%2A>       <xref:System.Web.UI.WebControls.ObjectDataSource>컨트롤은 해당 수명 주기 전체에서 다양 한 시간에는 기본 비즈니스 개체와 작동 하도록 처리할 수 있는 많은 이벤트를 노출 합니다.</xref:System.Web.UI.WebControls.ObjectDataSource> 다음 표에서 이벤트와 연결 된 <xref:System.EventArgs>클래스와 이벤트 처리기 대리자.</xref:System.EventArgs>      | 이벤트 | EventArgs | 이벤트 처리기 |   |-----------|---------------|------------------|   | <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>.</xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating><br /><br /> 비즈니스 개체의 인스턴스가 생성 되는 바로 전에 발생 합니다. | ObjectDataSourceEventArgs | <xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler>|   | <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>.</xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated></xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler><br /><br /> 비즈니스 개체의 인스턴스를 만든 직후에 발생 합니다. | ObjectDataSourceEventArgs | <xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler>|   | <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting>.</xref:System.Web.UI.WebControls.ObjectDataSource.Selecting></xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler><br /><br /> 데이터를 검색 하기 전에 발생 합니다. | <xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs>| <xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler>|   | <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting>, <xref:System.Web.UI.WebControls.ObjectDataSource.Updating>, and <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting>.</xref:System.Web.UI.WebControls.ObjectDataSource.Deleting></xref:System.Web.UI.WebControls.ObjectDataSource.Updating></xref:System.Web.UI.WebControls.ObjectDataSource.Inserting></xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler></xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs><br /><br /> 업데이트 또는 삭제 작업이 수행 되는 삽입 하기 전에 발생 합니다. | <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs>| <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler>|   | <xref:System.Web.UI.WebControls.ObjectDataSource.Selected>.</xref:System.Web.UI.WebControls.ObjectDataSource.Selected></xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler></xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs><br /><br /> 데이터를 검색 한 후에 발생 합니다. | <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>| <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler>|   | <xref:System.Web.UI.WebControls.ObjectDataSource.Inserted>, <xref:System.Web.UI.WebControls.ObjectDataSource.Updated>, <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted>.</xref:System.Web.UI.WebControls.ObjectDataSource.Deleted></xref:System.Web.UI.WebControls.ObjectDataSource.Updated></xref:System.Web.UI.WebControls.ObjectDataSource.Inserted></xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler></xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs><br /><br /> 업데이트 또는 삭제 작업이 완료 되는 삽입 이후의 발생 합니다. | <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>| <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler>|   | <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing>.</xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing></xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler></xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs><br /><br /> 비즈니스 개체를 제거 하기 전에 발생 합니다. | <xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs>| <xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler>|</xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler></xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs>"
  example:
  - "This section contains two code examples. The first code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.GridView> control to retrieve and display information. The second code example provides the example basic business object that the first code example uses.  \n  \n The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.GridView> control to retrieve and display information. In this example, as in many real-world scenarios, it might not be possible nor appropriate to use a default instance of the business object with the <xref:System.Web.UI.WebControls.ObjectDataSource> control. In this example, the <xref:System.Web.UI.WebControls.ObjectDataSource> cannot successfully call the default constructor because it will throw an exception. In some cases, the default constructor might be protected and in others it might not initialize the business object to a desired state. Whatever the reason, you can create an instance of the business object yourself and set the instance to the <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A> property of the ObjectDataSourceEventArgs object that is passed to the handler. This is the business object instance that the <xref:System.Web.UI.WebControls.ObjectDataSource> will use to perform its work.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_15#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_139_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_15#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_139_1.aspx)]  \n  \n The following code example demonstrates the example basic business object that the preceding code example uses.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_15#2](~/add/codesnippet/csharp/t-system.web.ui.webcontr_139_2.cs)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_15#2](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_139_2.vb)]"
  syntax:
    content: 'public class ObjectDataSourceEventArgs : EventArgs'
  inheritance:
  - System.EventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceEventArgs.#ctor(System.Object)
  id: '#ctor(System.Object)'
  parent: System.Web.UI.WebControls.ObjectDataSourceEventArgs
  langs:
  - csharp
  name: ObjectDataSourceEventArgs(Object)
  nameWithType: ObjectDataSourceEventArgs.ObjectDataSourceEventArgs(Object)
  fullName: System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectDataSourceEventArgs(Object)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceEventArgs&quot;> </xref> 클래스 지정된 된 개체를 사용 합니다."
  syntax:
    content: public ObjectDataSourceEventArgs (object objectInstance);
    parameters:
    - id: objectInstance
      type: System.Object
      description: "비즈니스 개체와 개체는 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> 데이터 작업을 수행할 상호 작용 합니다."
  overload: System.Web.UI.WebControls.ObjectDataSourceEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance
  id: ObjectInstance
  parent: System.Web.UI.WebControls.ObjectDataSourceEventArgs
  langs:
  - csharp
  name: ObjectInstance
  nameWithType: ObjectDataSourceEventArgs.ObjectInstance
  fullName: System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "비즈니스 개체와 개체를 나타내는 개체를 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> 제어 데이터 작업을 수행 합니다."
  remarks: ''
  example:
  - "This section contains two code examples. The first code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.GridView> control to retrieve and display information. The second code example provides the example basic business object that the first code example uses.  \n  \n The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.GridView> control to retrieve and display information. In this example, as in many real-world scenarios, it might not be possible nor appropriate to use a default instance of the business object with the <xref:System.Web.UI.WebControls.ObjectDataSource> control. In this example, the <xref:System.Web.UI.WebControls.ObjectDataSource> cannot successfully call the default constructor because it will throw an exception. In some cases, the default constructor might be protected and in others it might not initialize the business object to a desired state. Whatever the reason, you can create an instance of the business object yourself and set the instance to the ObjectInstance property of the <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs> object that is passed to the handler. This is the business object instance that the <xref:System.Web.UI.WebControls.ObjectDataSource> will use to perform its work.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_15#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1184_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_15#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1184_1.aspx)]  \n  \n The following code example demonstrates the example basic business object that the preceding code example uses.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_15#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1184_2.cs)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_15#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1184_2.vb)]"
  syntax:
    content: public object ObjectInstance { get; set; }
    return:
      type: System.Object
      description: "비즈니스 개체는 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> 사용 하 여 데이터 작업을 수행 합니다. 그렇지 않으면 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>경우 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 에 전달 되는 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceEventArgs&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance*
  exceptions: []
  platform:
  - net462
references:
- uid: System.EventArgs
  isExternal: false
  name: System.EventArgs
- uid: System.Web.UI.WebControls.ObjectDataSourceEventArgs.#ctor(System.Object)
  parent: System.Web.UI.WebControls.ObjectDataSourceEventArgs
  isExternal: false
  name: ObjectDataSourceEventArgs(Object)
  nameWithType: ObjectDataSourceEventArgs.ObjectDataSourceEventArgs(Object)
  fullName: System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectDataSourceEventArgs(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance
  parent: System.Web.UI.WebControls.ObjectDataSourceEventArgs
  isExternal: false
  name: ObjectInstance
  nameWithType: ObjectDataSourceEventArgs.ObjectInstance
  fullName: System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance
- uid: System.Web.UI.WebControls.ObjectDataSourceEventArgs.#ctor*
  parent: System.Web.UI.WebControls.ObjectDataSourceEventArgs
  isExternal: false
  name: ObjectDataSourceEventArgs
  nameWithType: ObjectDataSourceEventArgs.ObjectDataSourceEventArgs
- uid: System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance*
  parent: System.Web.UI.WebControls.ObjectDataSourceEventArgs
  isExternal: false
  name: ObjectInstance
  nameWithType: ObjectDataSourceEventArgs.ObjectInstance
