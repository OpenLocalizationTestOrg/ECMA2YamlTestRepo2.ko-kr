### YamlMime:ManagedReference
items:
- uid: System.Windows.Automation.CacheRequest
  id: CacheRequest
  children:
  - System.Windows.Automation.CacheRequest.#ctor
  - System.Windows.Automation.CacheRequest.Activate
  - System.Windows.Automation.CacheRequest.Add(System.Windows.Automation.AutomationPattern)
  - System.Windows.Automation.CacheRequest.Add(System.Windows.Automation.AutomationProperty)
  - System.Windows.Automation.CacheRequest.AutomationElementMode
  - System.Windows.Automation.CacheRequest.Clone
  - System.Windows.Automation.CacheRequest.Current
  - System.Windows.Automation.CacheRequest.Pop
  - System.Windows.Automation.CacheRequest.Push
  - System.Windows.Automation.CacheRequest.TreeFilter
  - System.Windows.Automation.CacheRequest.TreeScope
  langs:
  - csharp
  name: CacheRequest
  nameWithType: CacheRequest
  fullName: System.Windows.Automation.CacheRequest
  type: Class
  summary: "속성을 지정 하는 패턴 및는 [!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)] 때 프레임 워크에서 캐시는 <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref> 가져옵니다."
  remarks: "속성 및 패턴을 통해 검색 [!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)] 성능이 느려질 수 있다는 크로스 프로세스 호출 해야 합니다. 속성 값 및 일괄 처리 작업의 패턴을 캐시 하 여 응용 프로그램의 성능을 향상 시킬 수 있습니다.       클래스 생성자를 호출 하 여 새 캐시 요청을 만듭니다. 요청 호출을 반복된 하 여 채워집니다는 <xref:System.Windows.Automation.CacheRequest.Add%2A>메서드.</xref:System.Windows.Automation.CacheRequest.Add%2A>       단일 CacheRequest만 활성화할 수 있습니다. 요청을 활성화 하는 방법은 두 가지가:-호출 <xref:System.Windows.Automation.CacheRequest.Activate%2A>요청에.</xref:System.Windows.Automation.CacheRequest.Activate%2A> 요청 하 여 스택에 푸시하고 개체가 삭제 될 때 요청이 팝 됩니다. 개체를 삭제 하려면 예외가 발생 하는 경우에, 반환 값을 사용 하 여 <xref:System.Windows.Automation.CacheRequest.Activate%2A>내에서 한 `using` 블록 (`Using` 에 [!INCLUDE[TLA#tla_visualbnet](~/add/includes/tlasharptla-visualbnet-md.md)]).</xref:System.Windows.Automation.CacheRequest.Activate%2A>      -요청 저장 내부 스택으로 <xref:System.Windows.Automation.CacheRequest.Push%2A>.</xref:System.Windows.Automation.CacheRequest.Push%2A> 를 호출 하 여 스택의 맨 위의 요청만 활성 상태 이며 다음 순서의 <xref:System.Windows.Automation.CacheRequest.Pop%2A>.</xref:System.Windows.Automation.CacheRequest.Pop%2A> 스택에서 제거 있어야 요청 팝 비활성화 됩니다.       [!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]요청이 활성 상태인 동안 가져온 요소는 속성 및 지정 된 패턴에 대 한 값 캐싱되어 있습니다."
  example:
  - "The following example shows how to use <xref:System.Windows.Automation.CacheRequest.Activate%2A> to cache patterns and properties.  \n  \n [!code-vb[UIAClient_snip#107](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#107)]\n [!code-cs[UIAClient_snip#107](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#107)]  \n  \n The following example shows how to use <xref:System.Windows.Automation.CacheRequest.Push%2A> and <xref:System.Windows.Automation.CacheRequest.Pop%2A> to cache patterns and properties.  \n  \n [!code-vb[UIAClient_snip#108](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#108)]\n [!code-cs[UIAClient_snip#108](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#108)]"
  syntax:
    content: public sealed class CacheRequest
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Automation.CacheRequest.#ctor
  id: '#ctor'
  parent: System.Windows.Automation.CacheRequest
  langs:
  - csharp
  name: CacheRequest()
  nameWithType: CacheRequest.CacheRequest()
  fullName: System.Windows.Automation.CacheRequest.CacheRequest()
  type: Constructor
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Windows.Automation.CacheRequest&quot;> </xref> 클래스입니다."
  remarks: "경우는 <xref:System.Windows.Automation.CacheRequest>만들어지면는 <xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty>식별자는 기본 속성으로 캐시에 추가 됩니다.</xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty> </xref:System.Windows.Automation.CacheRequest>"
  syntax:
    content: public CacheRequest ();
    parameters: []
  overload: System.Windows.Automation.CacheRequest.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.CacheRequest.Activate
  id: Activate
  parent: System.Windows.Automation.CacheRequest
  langs:
  - csharp
  name: Activate()
  nameWithType: CacheRequest.Activate()
  fullName: System.Windows.Automation.CacheRequest.Activate()
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "가이 설정 <xref href=&quot;System.Windows.Automation.CacheRequest&quot;> </xref> 때 반환 되는 항목에 대 한 현재 설정으로는 <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref> 동일한 스레드에 대해 요청 합니다."
  remarks: "이 메서드를 사용 하 <xref:System.Windows.Automation.CacheRequest.Push%2A>고 <xref:System.Windows.Automation.CacheRequest.Pop%2A> <xref:System.Windows.Automation.CacheRequest>.</xref:System.Windows.Automation.CacheRequest> 를 활성화 하는 방법으로</xref:System.Windows.Automation.CacheRequest.Pop%2A> </xref:System.Windows.Automation.CacheRequest.Push%2A> 사용 하는 것이 좋습니다. 개체는 활성화를 호출 하 고 삭제 될 때 팝 됩니다 때 스택으로 푸시됩니다. 개체를 삭제 하려면 내에서 반환 값을 배치는 `using` 블록 (`Using` 에 [!INCLUDE[TLA#tla_visualbnet](~/add/includes/tlasharptla-visualbnet-md.md)])."
  example:
  - "The following example shows how to use Activate to cache patterns and properties.  \n  \n [!code-vb[UIAClient_snip#107](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#107)]\n [!code-cs[UIAClient_snip#107](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#107)]"
  syntax:
    content: public IDisposable Activate ();
    parameters: []
    return:
      type: System.IDisposable
      description: "삭제 하는 데 사용할 수 있는 개체는 <xref href=&quot;System.Windows.Automation.CacheRequest&quot;> </xref>합니다."
  overload: System.Windows.Automation.CacheRequest.Activate*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.CacheRequest.Add(System.Windows.Automation.AutomationPattern)
  id: Add(System.Windows.Automation.AutomationPattern)
  parent: System.Windows.Automation.CacheRequest
  langs:
  - csharp
  name: Add(AutomationPattern)
  nameWithType: CacheRequest.Add(AutomationPattern)
  fullName: System.Windows.Automation.CacheRequest.Add(AutomationPattern)
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "지정 된 추가 <xref href=&quot;System.Windows.Automation.AutomationPattern&quot;> </xref> 식별자를이 <xref href=&quot;System.Windows.Automation.CacheRequest&quot;> </xref>합니다."
  remarks: "캐시 요청에 이미 있는 패턴을 추가 해도 아무 효과가 없습니다."
  example:
  - "The following example shows how to construct a <xref:System.Windows.Automation.CacheRequest> and add a pattern to be cached.  \n  \n [!code-vb[UIAClient_snip#202](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#202)]\n [!code-cs[UIAClient_snip#202](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#202)]"
  syntax:
    content: public void Add (System.Windows.Automation.AutomationPattern pattern);
    parameters:
    - id: pattern
      type: System.Windows.Automation.AutomationPattern
      description: "캐시할 패턴을 지정 하는 식별자입니다."
  overload: System.Windows.Automation.CacheRequest.Add*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.Windows.Automation.CacheRequest&quot;> </xref> 활성화 되어 있습니다."
  platform:
  - net462
- uid: System.Windows.Automation.CacheRequest.Add(System.Windows.Automation.AutomationProperty)
  id: Add(System.Windows.Automation.AutomationProperty)
  parent: System.Windows.Automation.CacheRequest
  langs:
  - csharp
  name: Add(AutomationProperty)
  nameWithType: CacheRequest.Add(AutomationProperty)
  fullName: System.Windows.Automation.CacheRequest.Add(AutomationProperty)
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "지정 된 추가 <xref href=&quot;System.Windows.Automation.AutomationProperty&quot;> </xref> 식별자를이 <xref href=&quot;System.Windows.Automation.CacheRequest&quot;> </xref>합니다."
  remarks: "경우는 <xref:System.Windows.Automation.CacheRequest>만들어지면는 <xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty>식별자는 기본 속성으로 캐시에 추가 됩니다.</xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty> </xref:System.Windows.Automation.CacheRequest>       캐시 요청에 이미 있는 속성에 추가 하는 효과가 없습니다."
  example:
  - "The following example shows how to construct a <xref:System.Windows.Automation.CacheRequest> and add a property to be cached.  \n  \n [!code-vb[UIAClient_snip#202](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#202)]\n [!code-cs[UIAClient_snip#202](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#202)]"
  syntax:
    content: public void Add (System.Windows.Automation.AutomationProperty property);
    parameters:
    - id: property
      type: System.Windows.Automation.AutomationProperty
      description: "캐시 속성 값을 지정 하는 식별자입니다."
  overload: System.Windows.Automation.CacheRequest.Add*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.Windows.Automation.CacheRequest&quot;> </xref> 활성화 되어 있습니다."
  platform:
  - net462
- uid: System.Windows.Automation.CacheRequest.AutomationElementMode
  id: AutomationElementMode
  parent: System.Windows.Automation.CacheRequest
  langs:
  - csharp
  name: AutomationElementMode
  nameWithType: CacheRequest.AutomationElementMode
  fullName: System.Windows.Automation.CacheRequest.AutomationElementMode
  type: Property
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "반환 되는 요소 내부에 대 한 전체 참조를 포함할지 여부를 지정 하는 값을 가져오거나 설정 합니다. [!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)], 아니면 캐시 된 정보입니다."
  remarks: "<xref:System.Windows.Automation.AutomationElementMode>반환 되는 요소 내부에 대 한 전체 참조를 포함 하도록 지정 하 고 값은 기본값 [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]합니다.</xref:System.Windows.Automation.AutomationElementMode> <xref:System.Windows.Automation.AutomationElementMode>반환 되는 요소 내부에 대 한 참조를 갖도록 지정 [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)], 캐시 된 정보만 포함 하 고 있습니다.</xref:System.Windows.Automation.AutomationElementMode>       포함 하 여 요소에서 특정 작업 <xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A>, <xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A>, 및 <xref:System.Windows.Automation.AutomationElement.SetFocus%2A>, 전체 참조를 사용 해야 하는 이러한에서 수행 하는 <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> none가 있는 요소가 결과</xref:System.Windows.Automation.AutomationElement.SetFocus%2A> </xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A> </xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A>       사용 하 여 <xref:System.Windows.Automation.AutomationElementMode>것 처럼 속성에만 필요할 경우 더 효과적일 수 있습니다 전체 참조를 설정 합니다.</xref:System.Windows.Automation.AutomationElementMode>"
  example:
  - "In the following example, AutomationElementMode is set to <xref:System.Windows.Automation.AutomationElementMode>, with the result that only cached properties and patterns are available for the retrieved object.  \n  \n [!code-vb[UIAClient_snip#108](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#108)]\n [!code-cs[UIAClient_snip#108](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#108)]"
  syntax:
    content: public System.Windows.Automation.AutomationElementMode AutomationElementMode { get; set; }
    return:
      type: System.Windows.Automation.AutomationElementMode
      description: "<xref href=&quot;System.Windows.Automation.AutomationElementMode&quot;></xref>반환 되는 요소 내부에 대 한 전체 참조 있으면 [!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]고, 그렇지 않으면 <xref href=&quot;System.Windows.Automation.AutomationElementMode&quot;> </xref>합니다."
  overload: System.Windows.Automation.CacheRequest.AutomationElementMode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.CacheRequest.Clone
  id: Clone
  parent: System.Windows.Automation.CacheRequest
  langs:
  - csharp
  name: Clone()
  nameWithType: CacheRequest.Clone()
  fullName: System.Windows.Automation.CacheRequest.Clone()
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "이 파일의 복사본을 만듭니다 <xref href=&quot;System.Windows.Automation.CacheRequest&quot;> </xref>합니다."
  syntax:
    content: public System.Windows.Automation.CacheRequest Clone ();
    parameters: []
    return:
      type: System.Windows.Automation.CacheRequest
      description: "현재 개체의 수정 가능한 복사본입니다."
  overload: System.Windows.Automation.CacheRequest.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.CacheRequest.Current
  id: Current
  parent: System.Windows.Automation.CacheRequest
  langs:
  - csharp
  name: Current
  nameWithType: CacheRequest.Current
  fullName: System.Windows.Automation.CacheRequest.Current
  type: Property
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "가져옵니다는 <xref href=&quot;System.Windows.Automation.CacheRequest&quot;> </xref> 현재 스레드에서 활성화 된에 있습니다."
  syntax:
    content: public static System.Windows.Automation.CacheRequest Current { get; }
    return:
      type: System.Windows.Automation.CacheRequest
      description: "활성 <xref href=&quot;System.Windows.Automation.CacheRequest&quot;> </xref>합니다."
  overload: System.Windows.Automation.CacheRequest.Current*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.CacheRequest.Pop
  id: Pop
  parent: System.Windows.Automation.CacheRequest
  langs:
  - csharp
  name: Pop()
  nameWithType: CacheRequest.Pop()
  fullName: System.Windows.Automation.CacheRequest.Pop()
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "활성 제거 <xref href=&quot;System.Windows.Automation.CacheRequest&quot;> </xref> 현재 스레드에 대 한 내부 스택에서 합니다."
  remarks: "Pop 메서드를 사용 하 여 현재 활성 상태인 요청이 제거할 수 있습니다. 현재 하나의 결과 예외가 되지 않은 요청을 제거 하려고 합니다.       캐시 요청을 중첩 하지 않는 한이 사용 하도록 좋습니다 <xref:System.Windows.Automation.CacheRequest.Activate%2A>스택에 요청이 배치 하려면.</xref:System.Windows.Automation.CacheRequest.Activate%2A> 사용할 수 있는 이유는 <xref:System.Windows.Automation.CacheRequest.Activate%2A>내에서 한 `using` 블록 (`Using` 에 [!INCLUDE[TLA#tla_visualbnet](~/add/includes/tlasharptla-visualbnet-md.md)]), 예외가 발생 하는 경우에 요청이 스택에서 팝 됩니다.</xref:System.Windows.Automation.CacheRequest.Activate%2A>"
  example:
  - "The following example shows how to deactivate a <xref:System.Windows.Automation.CacheRequest> by using Pop.  \n  \n [!code-vb[UIAClient_snip#108](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#108)]\n [!code-cs[UIAClient_snip#108](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#108)]"
  syntax:
    content: public void Pop ();
    parameters: []
  overload: System.Windows.Automation.CacheRequest.Pop*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "스택에 밀어 넣은 마지막 트랜잭션이 되지 않은 캐시 요청을 제거 하려고 했습니다."
  platform:
  - net462
- uid: System.Windows.Automation.CacheRequest.Push
  id: Push
  parent: System.Windows.Automation.CacheRequest
  langs:
  - csharp
  name: Push()
  nameWithType: CacheRequest.Push()
  fullName: System.Windows.Automation.CacheRequest.Push()
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "위치는 <xref href=&quot;System.Windows.Automation.CacheRequest&quot;> </xref> 내부 상태 스택에 있어서 현재 스레드의 활성 요청 합니다."
  remarks: "여러 <xref:System.Windows.Automation.CacheRequest>상태 스택으로 개체를 배치할 수 있습니다.</xref:System.Windows.Automation.CacheRequest> 캐시 요청은 푸시된; 순서로 스택에서 제거 해야 합니다. 그렇지 않은 경우는 <xref:System.InvalidOperationException>예외가 발생 합니다.</xref:System.InvalidOperationException>       캐시 요청을 중첩 하지 않는 한이 사용 하도록 좋습니다 <xref:System.Windows.Automation.CacheRequest.Activate%2A>스택에 요청이 배치 하려면.</xref:System.Windows.Automation.CacheRequest.Activate%2A> 사용할 수 있는 이유는 <xref:System.Windows.Automation.CacheRequest.Activate%2A>내에서 한 `using` 블록 (`Using` 에 [!INCLUDE[TLA#tla_visualbnet](~/add/includes/tlasharptla-visualbnet-md.md)]), 예외가 발생 하는 경우에 요청이 스택에서 팝 됩니다.</xref:System.Windows.Automation.CacheRequest.Activate%2A>"
  example:
  - "The following example shows how to activate a <xref:System.Windows.Automation.CacheRequest> by using Push.  \n  \n [!code-vb[UIAClient_snip#108](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#108)]\n [!code-cs[UIAClient_snip#108](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#108)]"
  syntax:
    content: public void Push ();
    parameters: []
  overload: System.Windows.Automation.CacheRequest.Push*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.CacheRequest.TreeFilter
  id: TreeFilter
  parent: System.Windows.Automation.CacheRequest
  langs:
  - csharp
  name: TreeFilter
  nameWithType: CacheRequest.TreeFilter
  fullName: System.Windows.Automation.CacheRequest.TreeFilter
  type: Property
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "뷰를 지정 하는 값을 가져오거나 설정 합니다.는 [!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)] 요소 트리를 캐시할 때 사용 하도록 합니다."
  remarks: "뷰에 대 한 자세한 내용은 [!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)] 요소 트리 참조 [UI 자동화 트리 개요](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "In the following example, TreeFilter is set to <xref:System.Windows.Automation.Automation.RawViewCondition> so that caching is done for all elements, regardless of whether they are part of the content view or the control view.  \n  \n [!code-vb[UIAClient_snip#108](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#108)]\n [!code-cs[UIAClient_snip#108](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#108)]"
  syntax:
    content: public System.Windows.Automation.Condition TreeFilter { get; set; }
    return:
      type: System.Windows.Automation.Condition
      description: "보기는 [!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)] 요소 트리 합니다. 기본 보기는 <xref href=&quot;System.Windows.Automation.Automation.ControlViewCondition&quot;> </xref>합니다."
  overload: System.Windows.Automation.CacheRequest.TreeFilter*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.CacheRequest.TreeScope
  id: TreeScope
  parent: System.Windows.Automation.CacheRequest
  langs:
  - csharp
  name: TreeScope
  nameWithType: CacheRequest.TreeScope
  fullName: System.Windows.Automation.CacheRequest.TreeScope
  type: Property
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "하위 트리의 루트에 대해서만 또는 해당 자식 또는 하위 항목에 대 한 캐싱을 수행 여부를 지정 하는 값을 가져오거나 설정 합니다."
  remarks: "캐시 범위는 개체를 기준으로 페치 대상 개체와 관계 없이 <xref:System.Windows.Automation.AutomationElement.FindFirst%2A>또는 <xref:System.Windows.Automation.AutomationElement.FindAll%2A>호출 됩니다.</xref:System.Windows.Automation.AutomationElement.FindAll%2A> </xref:System.Windows.Automation.AutomationElement.FindFirst%2A> 예제를 참조 하십시오."
  example:
  - "In the following example, a list box element is obtained from the parent window element while a <xref:System.Windows.Automation.CacheRequest> is active and TreeScope is <xref:System.Windows.Automation.TreeScope>. The specified properties of the child elements (that is, the list items) are stored in the cache and can be retrieved from the <xref:System.Windows.Automation.AutomationElement.CachedChildren%2A> of the list box.  \n  \n [!code-vb[UIAClient_snip#119](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#119)]\n [!code-cs[UIAClient_snip#119](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#119)]"
  syntax:
    content: public System.Windows.Automation.TreeScope TreeScope { get; set; }
    return:
      type: System.Windows.Automation.TreeScope
      description: "One or more of <xref href=&quot;System.Windows.Automation.TreeScope&quot;></xref>, <xref href=&quot;System.Windows.Automation.TreeScope&quot;></xref>, <xref href=&quot;System.Windows.Automation.TreeScope&quot;></xref>, or <xref href=&quot;System.Windows.Automation.TreeScope&quot;></xref>. 기본값은 <xref href=&quot;System.Windows.Automation.TreeScope&quot;> </xref>합니다."
  overload: System.Windows.Automation.CacheRequest.TreeScope*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "속성을 설정 하려고 했습니다 <xref href=&quot;System.Windows.Automation.TreeScope&quot;> </xref> 또는 <xref href=&quot;System.Windows.Automation.TreeScope&quot;> </xref>합니다."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Windows.Automation.CacheRequest.#ctor
  parent: System.Windows.Automation.CacheRequest
  isExternal: false
  name: CacheRequest()
  nameWithType: CacheRequest.CacheRequest()
  fullName: System.Windows.Automation.CacheRequest.CacheRequest()
- uid: System.Windows.Automation.CacheRequest.Activate
  parent: System.Windows.Automation.CacheRequest
  isExternal: false
  name: Activate()
  nameWithType: CacheRequest.Activate()
  fullName: System.Windows.Automation.CacheRequest.Activate()
- uid: System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Windows.Automation.CacheRequest.Add(System.Windows.Automation.AutomationPattern)
  parent: System.Windows.Automation.CacheRequest
  isExternal: false
  name: Add(AutomationPattern)
  nameWithType: CacheRequest.Add(AutomationPattern)
  fullName: System.Windows.Automation.CacheRequest.Add(AutomationPattern)
- uid: System.Windows.Automation.AutomationPattern
  parent: System.Windows.Automation
  isExternal: false
  name: AutomationPattern
  nameWithType: AutomationPattern
  fullName: System.Windows.Automation.AutomationPattern
- uid: System.Windows.Automation.CacheRequest.Add(System.Windows.Automation.AutomationProperty)
  parent: System.Windows.Automation.CacheRequest
  isExternal: false
  name: Add(AutomationProperty)
  nameWithType: CacheRequest.Add(AutomationProperty)
  fullName: System.Windows.Automation.CacheRequest.Add(AutomationProperty)
- uid: System.Windows.Automation.AutomationProperty
  parent: System.Windows.Automation
  isExternal: false
  name: AutomationProperty
  nameWithType: AutomationProperty
  fullName: System.Windows.Automation.AutomationProperty
- uid: System.Windows.Automation.CacheRequest.AutomationElementMode
  parent: System.Windows.Automation.CacheRequest
  isExternal: false
  name: AutomationElementMode
  nameWithType: CacheRequest.AutomationElementMode
  fullName: System.Windows.Automation.CacheRequest.AutomationElementMode
- uid: System.Windows.Automation.AutomationElementMode
  parent: System.Windows.Automation
  isExternal: false
  name: AutomationElementMode
  nameWithType: AutomationElementMode
  fullName: System.Windows.Automation.AutomationElementMode
- uid: System.Windows.Automation.CacheRequest.Clone
  parent: System.Windows.Automation.CacheRequest
  isExternal: false
  name: Clone()
  nameWithType: CacheRequest.Clone()
  fullName: System.Windows.Automation.CacheRequest.Clone()
- uid: System.Windows.Automation.CacheRequest
  parent: System.Windows.Automation
  isExternal: false
  name: CacheRequest
  nameWithType: CacheRequest
  fullName: System.Windows.Automation.CacheRequest
- uid: System.Windows.Automation.CacheRequest.Current
  parent: System.Windows.Automation.CacheRequest
  isExternal: false
  name: Current
  nameWithType: CacheRequest.Current
  fullName: System.Windows.Automation.CacheRequest.Current
- uid: System.Windows.Automation.CacheRequest.Pop
  parent: System.Windows.Automation.CacheRequest
  isExternal: false
  name: Pop()
  nameWithType: CacheRequest.Pop()
  fullName: System.Windows.Automation.CacheRequest.Pop()
- uid: System.Windows.Automation.CacheRequest.Push
  parent: System.Windows.Automation.CacheRequest
  isExternal: false
  name: Push()
  nameWithType: CacheRequest.Push()
  fullName: System.Windows.Automation.CacheRequest.Push()
- uid: System.Windows.Automation.CacheRequest.TreeFilter
  parent: System.Windows.Automation.CacheRequest
  isExternal: false
  name: TreeFilter
  nameWithType: CacheRequest.TreeFilter
  fullName: System.Windows.Automation.CacheRequest.TreeFilter
- uid: System.Windows.Automation.Condition
  parent: System.Windows.Automation
  isExternal: false
  name: Condition
  nameWithType: Condition
  fullName: System.Windows.Automation.Condition
- uid: System.Windows.Automation.CacheRequest.TreeScope
  parent: System.Windows.Automation.CacheRequest
  isExternal: false
  name: TreeScope
  nameWithType: CacheRequest.TreeScope
  fullName: System.Windows.Automation.CacheRequest.TreeScope
- uid: System.Windows.Automation.TreeScope
  parent: System.Windows.Automation
  isExternal: false
  name: TreeScope
  nameWithType: TreeScope
  fullName: System.Windows.Automation.TreeScope
- uid: System.Windows.Automation.CacheRequest.#ctor*
  parent: System.Windows.Automation.CacheRequest
  isExternal: false
  name: CacheRequest
  nameWithType: CacheRequest.CacheRequest
- uid: System.Windows.Automation.CacheRequest.Activate*
  parent: System.Windows.Automation.CacheRequest
  isExternal: false
  name: Activate
  nameWithType: CacheRequest.Activate
- uid: System.Windows.Automation.CacheRequest.Add*
  parent: System.Windows.Automation.CacheRequest
  isExternal: false
  name: Add
  nameWithType: CacheRequest.Add
- uid: System.Windows.Automation.CacheRequest.AutomationElementMode*
  parent: System.Windows.Automation.CacheRequest
  isExternal: false
  name: AutomationElementMode
  nameWithType: CacheRequest.AutomationElementMode
- uid: System.Windows.Automation.CacheRequest.Clone*
  parent: System.Windows.Automation.CacheRequest
  isExternal: false
  name: Clone
  nameWithType: CacheRequest.Clone
- uid: System.Windows.Automation.CacheRequest.Current*
  parent: System.Windows.Automation.CacheRequest
  isExternal: false
  name: Current
  nameWithType: CacheRequest.Current
- uid: System.Windows.Automation.CacheRequest.Pop*
  parent: System.Windows.Automation.CacheRequest
  isExternal: false
  name: Pop
  nameWithType: CacheRequest.Pop
- uid: System.Windows.Automation.CacheRequest.Push*
  parent: System.Windows.Automation.CacheRequest
  isExternal: false
  name: Push
  nameWithType: CacheRequest.Push
- uid: System.Windows.Automation.CacheRequest.TreeFilter*
  parent: System.Windows.Automation.CacheRequest
  isExternal: false
  name: TreeFilter
  nameWithType: CacheRequest.TreeFilter
- uid: System.Windows.Automation.CacheRequest.TreeScope*
  parent: System.Windows.Automation.CacheRequest
  isExternal: false
  name: TreeScope
  nameWithType: CacheRequest.TreeScope
