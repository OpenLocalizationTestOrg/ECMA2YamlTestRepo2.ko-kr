### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.X509Certificates.X509Certificate
  id: X509Certificate
  children:
  - System.Security.Cryptography.X509Certificates.X509Certificate.#ctor
  - System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[])
  - System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.IntPtr)
  - System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)
  - System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String)
  - System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[],System.Security.SecureString)
  - System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[],System.String)
  - System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String,System.Security.SecureString)
  - System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String,System.String)
  - System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  - System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  - System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  - System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  - System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromCertFile(System.String)
  - System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromSignedFile(System.String)
  - System.Security.Cryptography.X509Certificates.X509Certificate.Dispose
  - System.Security.Cryptography.X509Certificates.X509Certificate.Dispose(System.Boolean)
  - System.Security.Cryptography.X509Certificates.X509Certificate.Equals(System.Object)
  - System.Security.Cryptography.X509Certificates.X509Certificate.Equals(System.Security.Cryptography.X509Certificates.X509Certificate)
  - System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType)
  - System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.Security.SecureString)
  - System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.String)
  - System.Security.Cryptography.X509Certificates.X509Certificate.FormatDate(System.DateTime)
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHash
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHashString
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetEffectiveDateString
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetExpirationDateString
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetFormat
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetHashCode
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetIssuerName
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithm
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParameters
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParametersString
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetName
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKey
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKeyString
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertData
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertDataString
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumber
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumberString
  - System.Security.Cryptography.X509Certificates.X509Certificate.Handle
  - System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.Byte[])
  - System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.String)
  - System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  - System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  - System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  - System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  - System.Security.Cryptography.X509Certificates.X509Certificate.Issuer
  - System.Security.Cryptography.X509Certificates.X509Certificate.Reset
  - System.Security.Cryptography.X509Certificates.X509Certificate.Subject
  - System.Security.Cryptography.X509Certificates.X509Certificate.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)
  - System.Security.Cryptography.X509Certificates.X509Certificate.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Security.Cryptography.X509Certificates.X509Certificate.ToString
  - System.Security.Cryptography.X509Certificates.X509Certificate.ToString(System.Boolean)
  langs:
  - csharp
  name: X509Certificate
  nameWithType: X509Certificate
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate
  type: Class
  summary: "X.509 v.3 인증서를 사용할 수 있는 메서드를 제공 합니다."
  remarks: "ASN.1 DER에는이 클래스에서 지 원하는 유일한 인증서 형식입니다.       대부분의 시나리오에 대 한 사용할지는 <xref:System.Security.Cryptography.X509Certificates.X509Certificate2>클래스를 대신 합니다.</xref:System.Security.Cryptography.X509Certificates.X509Certificate2>      > [!IMPORTANT] >로 시작는 [!INCLUDE[net_v46](~/add/includes/net-v46-md.md)]이 구현 입력는 <xref:System.IDisposable>인터페이스.</xref:System.IDisposable> 형식을 사용 하 여 마쳤으면는 삭제 해야의 직접 또는 간접적으로 합니다. 직접 형식의 삭제 하려면 해당 <xref:System.IDisposable.Dispose%2A>에서 메서드는 `try` / `catch` 블록.</xref:System.IDisposable.Dispose%2A> 작업을 삭제할 하지 직접,를 사용 하 여 언어 구문와 같은 `using` (C#에서) 또는 `Using` (Visual Basic)에서는 합니다. 자세한 내용은의 &quot;를 사용 하는 개체는 구현 IDisposable&quot; 섹션을 참조 하십시오.는 <xref:System.IDisposable>인터페이스 항목.</xref:System.IDisposable>   >> 대상으로 하는 앱에 대 한는 [!INCLUDE[net_v452](~/add/includes/net-v452-md.md)] 이전 버전에서는 X509Certificate 클래스 구현 하지 않으므로 <xref:System.IDisposable>인터페이스와는 `Dispose` 메서드.</xref:System.IDisposable>"
  example:
  - "The following example loads an X.509 certificate from a file, calls the <xref:System.Security.Cryptography.X509Certificates.X509Certificate.ToString%2A> method, and displays the results to the console.  \n  \n [!code-cpp[Cryptography.X509Certificates.X509Certificate#1](~/add/codesnippet/cpp/t-system.security.crypto_76_1.cpp)]\n [!code-cs[Cryptography.X509Certificates.X509Certificate#1](~/add/codesnippet/csharp/t-system.security.crypto_76_1.cs)]\n [!code-vb[Cryptography.X509Certificates.X509Certificate#1](~/add/codesnippet/visualbasic/t-system.security.crypto_76_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class X509Certificate : IDisposable, System.Runtime.Serialization.IDeserializationCallback, System.Runtime.Serialization.ISerializable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  - System.Runtime.Serialization.IDeserializationCallback
  - System.Runtime.Serialization.ISerializable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: X509Certificate()
  nameWithType: X509Certificate.X509Certificate()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> 클래스입니다."
  remarks: "ASN.1 DER에는이 클래스에서 지 원하는 유일한 인증서 형식입니다."
  syntax:
    content: public X509Certificate ();
    parameters: []
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[])
  id: '#ctor(System.Byte[])'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: X509Certificate(Byte[])
  nameWithType: X509Certificate.X509Certificate(Byte[])
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(Byte[])
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> 에서 X.509v3 인증서를 나타내는 바이트 시퀀스를 정의 합니다."
  remarks: "ASN.1 DER에는이 클래스에서 지 원하는 유일한 인증서 형식입니다.       만드는 경우는 <xref:System.Security.Cryptography.X509Certificates.X509Certificate>PKCS7 서명된 파일의 저장소를 지정 하 여 인증서 `data`, <xref:System.Security.Cryptography.X509Certificates.X509Certificate>아닌에 대해 저장소를 서명한 인증서는 인증서 저장소 내에 만들어집니다.</xref:System.Security.Cryptography.X509Certificates.X509Certificate> </xref:System.Security.Cryptography.X509Certificates.X509Certificate>"
  example:
  - "The following example loads an X.509 certificate file into an <xref:System.Security.Cryptography.X509Certificates.X509Certificate> object, exports the certificate as a byte array, and then imports the byte array into another <xref:System.Security.Cryptography.X509Certificates.X509Certificate> object.  \n  \n [!code-cs[Cryptography.X509Certificates.X509Certificate.Import-Export#1](~/add/codesnippet/csharp/b1e21656-448f-470a-baa1-_1.cs)]\n [!code-vb[Cryptography.X509Certificates.X509Certificate.Import-Export#1](~/add/codesnippet/visualbasic/b1e21656-448f-470a-baa1-_1.vb)]\n [!code-cpp[Cryptography.X509Certificates.X509Certificate.Import-Export#1](~/add/codesnippet/cpp/b1e21656-448f-470a-baa1-_1.cpp)]"
  syntax:
    content: public X509Certificate (byte[] data);
    parameters:
    - id: data
      type: System.Byte[]
      description: "X.509 인증서에서 데이터를 포함 하는 바이트 배열입니다."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "인증서 관련 오류가 발생합니다. 예:-인증서 파일이 없습니다.      -인증서가 올바르지 않습니다.      -인증서의 암호가 올바르지 않습니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>rawData</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -또는-의 길이 <code> rawData </code> 매개 변수는 0입니다."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.IntPtr)
  id: '#ctor(System.IntPtr)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: X509Certificate(IntPtr)
  nameWithType: X509Certificate.X509Certificate(IntPtr)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(IntPtr)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> 관리 되지 않는에 대 한 핸들을 사용 하 여 클래스 <xref uid=&quot;langword_csharp_PCCERT_CONTEXT&quot; name=&quot;PCCERT_CONTEXT&quot; href=&quot;&quot;> </xref> 구조입니다."
  remarks: "이 생성자는 새 만듭니다 <xref:System.Security.Cryptography.X509Certificates.X509Certificate>개체 핸들을 사용 하 여 Microsoft Cryptographic API 인증서 컨텍스트에 대 한 `PCCERT_CONTEXT`.</xref:System.Security.Cryptography.X509Certificates.X509Certificate>      > [!IMPORTANT] >이 생성자는 인증서 컨텍스트의 복사본을 만듭니다. 생성자에 전달 된 컨텍스트 구조 청소가 가정 하지 않습니다 릴리스 되었습니다. 현재 복사본을 얻을 수 `PCCERT_CONTEXT` 에서 구조체는 <xref:System.Security.Cryptography.X509Certificates.X509Certificate.Handle%2A>속성 않은 유효한의 수명 중에는 <xref:System.Security.Cryptography.X509Certificates.X509Certificate>개체입니다.</xref:System.Security.Cryptography.X509Certificates.X509Certificate> </xref:System.Security.Cryptography.X509Certificates.X509Certificate.Handle%2A>"
  syntax:
    content: public X509Certificate (IntPtr handle);
    parameters:
    - id: handle
      type: System.IntPtr
      description: "관리 되지 않는에 대 한 핸들 <xref uid=&quot;langword_csharp_PCCERT_CONTEXT&quot; name=&quot;PCCERT_CONTEXT&quot; href=&quot;&quot;> </xref> 구조입니다."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "인증서 관련 오류가 발생합니다. 예:-인증서 파일이 없습니다.      -인증서가 올바르지 않습니다.      -인증서의 암호가 올바르지 않습니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "핸들 매개 변수가 유효한 나타내지 않을 <xref uid=&quot;langword_csharp_PCCERT_CONTEXT&quot; name=&quot;PCCERT_CONTEXT&quot; href=&quot;&quot;> </xref> 구조입니다."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)
  id: '#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: X509Certificate(X509Certificate)
  nameWithType: X509Certificate.X509Certificate(X509Certificate)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(X509Certificate)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> 다른를 사용 하 여 클래스 <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> 클래스입니다."
  remarks: "ASN.1 DER에는이 클래스에서 지 원하는 유일한 인증서 형식입니다."
  syntax:
    content: public X509Certificate (System.Security.Cryptography.X509Certificates.X509Certificate cert);
    parameters:
    - id: cert
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "A <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> 에서이 클래스를 초기화 하는 클래스입니다."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "인증서 관련 오류가 발생합니다. 예:-인증서 파일이 없습니다.      -인증서가 올바르지 않습니다.      -인증서의 암호가 올바르지 않습니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "값은 <code> cert </code> 매개 변수는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: X509Certificate(String)
  nameWithType: X509Certificate.X509Certificate(String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> PKCS7의 이름을 사용 하 여 클래스 파일을 서명 합니다."
  remarks: "ASN.1 DER에는이 클래스에서 지 원하는 유일한 인증서 형식입니다.       만드는 경우는 <xref:System.Security.Cryptography.X509Certificates.X509Certificate>PKCS7 서명된 파일의 저장소를 지정 하 여 인증서 `fileName`, <xref:System.Security.Cryptography.X509Certificates.X509Certificate>아닌에 대해 저장소를 서명한 인증서는 인증서 저장소 내에 만들어집니다.</xref:System.Security.Cryptography.X509Certificates.X509Certificate> </xref:System.Security.Cryptography.X509Certificates.X509Certificate>"
  example:
  - "The following example loads an X.509 certificate from a file, calls the <xref:System.Security.Cryptography.X509Certificates.X509Certificate.ToString%2A> method, and displays the results to the console.  \n  \n [!code-cpp[Cryptography.X509Certificates.X509Certificate#1](~/add/codesnippet/cpp/8a4791ef-477c-432d-b12d-_1.cpp)]\n [!code-cs[Cryptography.X509Certificates.X509Certificate#1](~/add/codesnippet/csharp/8a4791ef-477c-432d-b12d-_1.cs)]\n [!code-vb[Cryptography.X509Certificates.X509Certificate#1](~/add/codesnippet/visualbasic/8a4791ef-477c-432d-b12d-_1.vb)]"
  syntax:
    content: public X509Certificate (string fileName);
    parameters:
    - id: fileName
      type: System.String
      description: "PKCS7 서명된 파일의 이름입니다."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "인증서 관련 오류가 발생합니다. 예:-인증서 파일이 없습니다.      -인증서가 올바르지 않습니다.      -인증서의 암호가 올바르지 않습니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>fileName</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[],System.Security.SecureString)
  id: '#ctor(System.Byte[],System.Security.SecureString)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: X509Certificate(Byte[],SecureString)
  nameWithType: X509Certificate.X509Certificate(Byte[],SecureString)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(Byte[],SecureString)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> 클래스 바이트 배열 및 암호를 사용 합니다."
  remarks: "ASN.1 DER에는이 클래스에서 지 원하는 유일한 인증서 형식입니다.      > [!IMPORTANT] > 하드 코딩 하지 마십시오 소스 코드 내에서 암호입니다.  사용 하 여 어셈블리에서 하드 코드 된 암호를 검색할 수는 [Ildasm.exe (IL 디스어셈블러)](~/add/includes/ajax-current-ext-md.md),&16; 진수 편집기 또는 단순히 Notepad.exe와 같은 텍스트 편집기에서 어셈블리를 열어 합니다.       만드는 경우는 <xref:System.Security.Cryptography.X509Certificates.X509Certificate>PKCS7 서명된 파일의 저장소를 지정 하 여 인증서 `rawData`, <xref:System.Security.Cryptography.X509Certificates.X509Certificate>아닌에 대해 저장소를 서명한 인증서는 인증서 저장소 내에 만들어집니다.</xref:System.Security.Cryptography.X509Certificates.X509Certificate> </xref:System.Security.Cryptography.X509Certificates.X509Certificate>"
  syntax:
    content: public X509Certificate (byte[] rawData, System.Security.SecureString password);
    parameters:
    - id: rawData
      type: System.Byte[]
      description: "X.509 인증서의 데이터가 들어 있는 바이트 배열입니다."
    - id: password
      type: System.Security.SecureString
      description: "X.509 인증서 데이터에 액세스 하는 데 필요한 암호입니다."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "인증서 관련 오류가 발생합니다. 예:-인증서 파일이 없습니다.      -인증서가 올바르지 않습니다.      -인증서의 암호가 올바르지 않습니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>rawData</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -또는-의 길이 <code> rawData </code> 매개 변수는 0입니다."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[],System.String)
  id: '#ctor(System.Byte[],System.String)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: X509Certificate(Byte[],String)
  nameWithType: X509Certificate.X509Certificate(Byte[],String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(Byte[],String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> 클래스 바이트 배열 및 암호를 사용 합니다."
  remarks: "ASN.1 DER에는이 클래스에서 지 원하는 유일한 인증서 형식입니다.      > [!IMPORTANT] > 하드 코딩 하지 마십시오 소스 코드 내에서 암호입니다.  사용 하 여 어셈블리에서 하드 코드 된 암호를 검색할 수는 [Ildasm.exe (IL 디스어셈블러)](~/add/includes/ajax-current-ext-md.md),&16; 진수 편집기 또는 단순히 Notepad.exe와 같은 텍스트 편집기에서 어셈블리를 열어 합니다.       만드는 경우는 <xref:System.Security.Cryptography.X509Certificates.X509Certificate>PKCS7 서명된 파일의 저장소를 지정 하 여 인증서 `rawData`, <xref:System.Security.Cryptography.X509Certificates.X509Certificate>아닌에 대해 저장소를 서명한 인증서는 인증서 저장소 내에 만들어집니다.</xref:System.Security.Cryptography.X509Certificates.X509Certificate> </xref:System.Security.Cryptography.X509Certificates.X509Certificate>"
  syntax:
    content: public X509Certificate (byte[] rawData, string password);
    parameters:
    - id: rawData
      type: System.Byte[]
      description: "X.509 인증서에서 데이터를 포함 하는 바이트 배열입니다."
    - id: password
      type: System.String
      description: "X.509 인증서 데이터에 액세스 하는 데 필요한 암호입니다."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "인증서 관련 오류가 발생합니다. 예:-인증서 파일이 없습니다.      -인증서가 올바르지 않습니다.      -인증서의 암호가 올바르지 않습니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>rawData</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -또는-의 길이 <code> rawData </code> 매개 변수는 0입니다."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: X509Certificate(SerializationInfo,StreamingContext)
  nameWithType: X509Certificate.X509Certificate(SerializationInfo,StreamingContext)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> 클래스 사용을 <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> 개체 및 <xref:System.Runtime.Serialization.StreamingContext>구조.</xref:System.Runtime.Serialization.StreamingContext>"
  syntax:
    content: public X509Certificate (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "A <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> serialization 정보를 설명 하는 개체입니다."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "A <xref:System.Runtime.Serialization.StreamingContext>serialization 수행 되는 방식을 설명 하는 구조체.</xref:System.Runtime.Serialization.StreamingContext>"
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "인증서 관련 오류가 발생합니다. 예:-인증서 파일이 없습니다.      -인증서가 올바르지 않습니다.      -인증서의 암호가 올바르지 않습니다."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String,System.Security.SecureString)
  id: '#ctor(System.String,System.Security.SecureString)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: X509Certificate(String,SecureString)
  nameWithType: X509Certificate.X509Certificate(String,SecureString)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(String,SecureString)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> 클래스 인증서 파일 이름 및 암호를 사용 합니다."
  remarks: "ASN.1 DER에는이 클래스에서 지 원하는 유일한 인증서 형식입니다.  올바른 암호를이 생성자를 호출 하는 개인 키를 해독 하 고 키 컨테이너에 저장 합니다.      > [!IMPORTANT] > 하드 코딩 하지 마십시오 소스 코드 내에서 암호입니다.  사용 하 여 어셈블리에서 하드 코드 된 암호를 검색할 수는 [Ildasm.exe (IL 디스어셈블러)](~/add/includes/ajax-current-ext-md.md),&16; 진수 편집기 또는 단순히 Notepad.exe와 같은 텍스트 편집기에서 어셈블리를 열어 합니다.       만드는 경우는 <xref:System.Security.Cryptography.X509Certificates.X509Certificate>PKCS7 서명된 파일의 저장소를 지정 하 여 인증서 `fileName`, <xref:System.Security.Cryptography.X509Certificates.X509Certificate>아닌에 대해 저장소를 서명한 인증서는 인증서 저장소 내에 만들어집니다.</xref:System.Security.Cryptography.X509Certificates.X509Certificate> </xref:System.Security.Cryptography.X509Certificates.X509Certificate>"
  syntax:
    content: public X509Certificate (string fileName, System.Security.SecureString password);
    parameters:
    - id: fileName
      type: System.String
      description: "인증서 파일의 이름입니다."
    - id: password
      type: System.Security.SecureString
      description: "X.509 인증서 데이터에 액세스 하는 데 필요한 암호입니다."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "인증서 관련 오류가 발생합니다. 예:-인증서 파일이 없습니다.      -인증서가 올바르지 않습니다.      -인증서의 암호가 올바르지 않습니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>fileName</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: X509Certificate(String,String)
  nameWithType: X509Certificate.X509Certificate(String,String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(String,String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> 클래스 PKCS7 이름을 사용 하 여 서명 된 파일 및 인증서에 액세스 하려면 암호입니다."
  remarks: "ASN.1 DER에는이 클래스에서 지 원하는 유일한 인증서 형식입니다.  올바른 암호를이 생성자를 호출 하는 개인 키를 해독 하 고 키 컨테이너에 저장 합니다.       만드는 경우는 <xref:System.Security.Cryptography.X509Certificates.X509Certificate>PKCS7 서명된 파일의 저장소를 지정 하 여 인증서 `fileName`, <xref:System.Security.Cryptography.X509Certificates.X509Certificate>아닌에 대해 저장소를 서명한 인증서는 인증서 저장소 내에 만들어집니다.</xref:System.Security.Cryptography.X509Certificates.X509Certificate> </xref:System.Security.Cryptography.X509Certificates.X509Certificate>"
  syntax:
    content: public X509Certificate (string fileName, string password);
    parameters:
    - id: fileName
      type: System.String
      description: "PKCS7 서명된 파일의 이름입니다."
    - id: password
      type: System.String
      description: "X.509 인증서 데이터에 액세스 하는 데 필요한 암호입니다."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "인증서 관련 오류가 발생합니다. 예:-인증서 파일이 없습니다.      -인증서가 올바르지 않습니다.      -인증서의 암호가 올바르지 않습니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>fileName</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  id: '#ctor(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: X509Certificate(Byte[],SecureString,X509KeyStorageFlags)
  nameWithType: X509Certificate.X509Certificate(Byte[],SecureString,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(Byte[],SecureString,X509KeyStorageFlags)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> 클래스는 바이트 배열, 암호 및 키 저장소 플래그를 사용 합니다."
  remarks: "올바른 암호를이 생성자를 호출 하는 개인 키의 암호를 해독 하 고에 Microsoft 암호화 API 공급자 CSP (암호화 서비스)를 저장 합니다.       ASN.1 DER에는이 클래스에서 지 원하는 유일한 인증서 형식입니다.      > [!IMPORTANT] > 하드 코딩 하지 마십시오 소스 코드 내에서 암호입니다.  사용 하 여 어셈블리에서 하드 코드 된 암호를 검색할 수는 [Ildasm.exe (IL 디스어셈블러)](~/add/includes/ajax-current-ext-md.md),&16; 진수 편집기 또는 단순히 Notepad.exe와 같은 텍스트 편집기에서 어셈블리를 열어 합니다.       만드는 경우는 <xref:System.Security.Cryptography.X509Certificates.X509Certificate>PKCS7 서명된 파일의 저장소를 지정 하 여 인증서 `rawData`, <xref:System.Security.Cryptography.X509Certificates.X509Certificate>아닌에 대해 저장소를 서명한 인증서는 인증서 저장소 내에 만들어집니다.</xref:System.Security.Cryptography.X509Certificates.X509Certificate> </xref:System.Security.Cryptography.X509Certificates.X509Certificate>"
  syntax:
    content: public X509Certificate (byte[] rawData, System.Security.SecureString password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);
    parameters:
    - id: rawData
      type: System.Byte[]
      description: "X.509 인증서의 데이터가 들어 있는 바이트 배열입니다."
    - id: password
      type: System.Security.SecureString
      description: "X.509 인증서 데이터에 액세스 하는 데 필요한 암호입니다."
    - id: keyStorageFlags
      type: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
      description: "열거형의 비트 조합 값이 위치와 방법을 제어 하는 인증서를 가져오려면 합니다."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "인증서 관련 오류가 발생합니다. 예:-인증서 파일이 없습니다.      -인증서가 올바르지 않습니다.      -인증서의 암호가 올바르지 않습니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>rawData</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -또는-의 길이 <code> rawData </code> 매개 변수는 0입니다."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  id: '#ctor(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: X509Certificate(Byte[],String,X509KeyStorageFlags)
  nameWithType: X509Certificate.X509Certificate(Byte[],String,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(Byte[],String,X509KeyStorageFlags)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> 클래스는 바이트 배열, 암호 및 키 저장소 플래그를 사용 합니다."
  remarks: "이 생성자는 새 만듭니다 <xref:System.Security.Cryptography.X509Certificates.X509Certificate>바이트를 사용 하 여 개체 배열 인증서 데이터와 키 저장소 플래그에 액세스 하는 데 필요한 암호입니다.</xref:System.Security.Cryptography.X509Certificates.X509Certificate>  올바른 암호를이 생성자를 호출 하는 개인 키의 암호를 해독 하 고에 Microsoft 암호화 API 공급자 CSP (암호화 서비스)를 저장 합니다.       <xref:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags>개인 키를 가져올 위치와 방법을 제어 하려면 값을 사용할 수 있습니다.</xref:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags>       ASN.1 DER에는이 클래스에서 지 원하는 유일한 인증서 형식입니다.      > [!IMPORTANT] > 하드 코딩 하지 마십시오 소스 코드 내에서 암호입니다.  사용 하 여 어셈블리에서 하드 코드 된 암호를 검색할 수는 [Ildasm.exe (IL 디스어셈블러)](~/add/includes/ajax-current-ext-md.md),&16; 진수 편집기 또는 단순히 Notepad.exe와 같은 텍스트 편집기에서 어셈블리를 열어 합니다.       만드는 경우는 <xref:System.Security.Cryptography.X509Certificates.X509Certificate>PKCS7 서명된 파일의 저장소를 지정 하 여 인증서 `rawData`, <xref:System.Security.Cryptography.X509Certificates.X509Certificate>아닌에 대해 저장소를 서명한 인증서는 인증서 저장소 내에 만들어집니다.</xref:System.Security.Cryptography.X509Certificates.X509Certificate> </xref:System.Security.Cryptography.X509Certificates.X509Certificate>"
  syntax:
    content: public X509Certificate (byte[] rawData, string password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);
    parameters:
    - id: rawData
      type: System.Byte[]
      description: "X.509 인증서에서 데이터를 포함 하는 바이트 배열입니다."
    - id: password
      type: System.String
      description: "X.509 인증서 데이터에 액세스 하는 데 필요한 암호입니다."
    - id: keyStorageFlags
      type: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
      description: "열거형의 비트 조합 값이 위치와 방법을 제어 하는 인증서를 가져오려면 합니다."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "인증서 관련 오류가 발생합니다. 예:-인증서 파일이 없습니다.      -인증서가 올바르지 않습니다.      -인증서의 암호가 올바르지 않습니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>rawData</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -또는-의 길이 <code> rawData </code> 매개 변수는 0입니다."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  id: '#ctor(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: X509Certificate(String,SecureString,X509KeyStorageFlags)
  nameWithType: X509Certificate.X509Certificate(String,SecureString,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(String,SecureString,X509KeyStorageFlags)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> 클래스 인증서 파일 이름, 암호 및 키 저장소 플래그를 사용 합니다."
  remarks: "만드는 경우는 <xref:System.Security.Cryptography.X509Certificates.X509Certificate>PKCS7 서명된 파일의 저장소를 지정 하 여 인증서 `fileName`, <xref:System.Security.Cryptography.X509Certificates.X509Certificate>아닌에 대해 저장소를 서명한 인증서는 인증서 저장소 내에 만들어집니다.</xref:System.Security.Cryptography.X509Certificates.X509Certificate> </xref:System.Security.Cryptography.X509Certificates.X509Certificate>"
  syntax:
    content: public X509Certificate (string fileName, System.Security.SecureString password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);
    parameters:
    - id: fileName
      type: System.String
      description: "인증서 파일의 이름입니다."
    - id: password
      type: System.Security.SecureString
      description: "X.509 인증서 데이터에 액세스 하는 데 필요한 암호입니다."
    - id: keyStorageFlags
      type: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
      description: "열거형의 비트 조합 값이 위치와 방법을 제어 하는 인증서를 가져오려면 합니다."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "인증서 관련 오류가 발생합니다. 예:-인증서 파일이 없습니다.      -인증서가 올바르지 않습니다.      -인증서의 암호가 올바르지 않습니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>fileName</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  id: '#ctor(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: X509Certificate(String,String,X509KeyStorageFlags)
  nameWithType: X509Certificate.X509Certificate(String,String,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(String,String,X509KeyStorageFlags)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> 는 인증서와 키 저장소 플래그에 액세스 하려면 암호 파일을 사용 하 여 클래스 서명 PKCS7의 이름입니다."
  remarks: "만드는 경우는 <xref:System.Security.Cryptography.X509Certificates.X509Certificate>PKCS7 서명된 파일의 저장소를 지정 하 여 인증서 `fileName`, <xref:System.Security.Cryptography.X509Certificates.X509Certificate>아닌에 대해 저장소를 서명한 인증서는 인증서 저장소 내에 만들어집니다.</xref:System.Security.Cryptography.X509Certificates.X509Certificate> </xref:System.Security.Cryptography.X509Certificates.X509Certificate>"
  syntax:
    content: public X509Certificate (string fileName, string password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);
    parameters:
    - id: fileName
      type: System.String
      description: "PKCS7 서명된 파일의 이름입니다."
    - id: password
      type: System.String
      description: "X.509 인증서 데이터에 액세스 하는 데 필요한 암호입니다."
    - id: keyStorageFlags
      type: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
      description: "열거형의 비트 조합 값이 위치와 방법을 제어 하는 인증서를 가져오려면 합니다."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "인증서 관련 오류가 발생합니다. 예:-인증서 파일이 없습니다.      -인증서가 올바르지 않습니다.      -인증서의 암호가 올바르지 않습니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>fileName</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromCertFile(System.String)
  id: CreateFromCertFile(System.String)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: CreateFromCertFile(String)
  nameWithType: X509Certificate.CreateFromCertFile(String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromCertFile(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "지정된 된 PKCS7 서명된 파일에서 X.509v3 인증서를 만듭니다."
  remarks: "ASN.1 DER에는이 클래스에서 지 원하는 유일한 인증서 형식입니다.      > [!NOTE] > 인증서 파일.cerfiles 제한 되지 않습니다. 모든 PKCS7 서명된 파일을 사용할 수 있습니다, 서명 Authenticode를 포함 하 여.pfx 파일입니다."
  example:
  - "The following example creates an <xref:System.Security.Cryptography.X509Certificates.X509Certificate> from a specified certification file.  \n  \n [!code-cs[X509Certificate.ToString Method#1](~/add/codesnippet/csharp/676668f7-2ee9-45c0-8357-_1.cs)]\n [!code-cpp[X509Certificate.ToString Method#1](~/add/codesnippet/cpp/676668f7-2ee9-45c0-8357-_1.cpp)]\n [!code-vb[X509Certificate.ToString Method#1](~/add/codesnippet/visualbasic/676668f7-2ee9-45c0-8357-_1.vb)]"
  syntax:
    content: public static System.Security.Cryptography.X509Certificates.X509Certificate CreateFromCertFile (string filename);
    parameters:
    - id: filename
      type: System.String
      description: "PKCS7 경로 서명 X.509 인증서를 만드는 데 사용할 파일입니다."
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "새로 만든된 X.509 인증서입니다."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromCertFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>filename</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromSignedFile(System.String)
  id: CreateFromSignedFile(System.String)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: CreateFromSignedFile(String)
  nameWithType: X509Certificate.CreateFromSignedFile(String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromSignedFile(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "지정된 된 서명된 파일에서 X.509v3 인증서를 만듭니다."
  remarks: "ASN.1 DER에는이 클래스에서 지 원하는 유일한 인증서 형식입니다."
  syntax:
    content: public static System.Security.Cryptography.X509Certificates.X509Certificate CreateFromSignedFile (string filename);
    parameters:
    - id: filename
      type: System.String
      description: "X.509 인증서를 만드는 데 사용할 서명된 된 파일의 경로입니다."
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "새로 만든된 X.509 인증서입니다."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromSignedFile*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Dispose
  id: Dispose
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: Dispose()
  nameWithType: X509Certificate.Dispose()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Dispose()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "현재 사용 되는 모든 리소스를 해제 <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> 개체입니다."
  remarks: >-
    > [!NOTE]

    >  <xref:System.Security.Cryptography.X509Certificates.X509Certificate> implements the <xref:System.IDisposable> interface starting with the [!INCLUDE[net_v46](~/add/includes/net-v46-md.md)]; in previous versions of the .NET Framework, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> class does not implement this interface, and therefore the `Dispose` method does not exist.
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: X509Certificate.Dispose(Boolean)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Dispose(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "사용 하는 관리 되지 않는 리소스를 모두 해제 <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> 관리 되는 리소스를 선택적으로 해제 합니다."
  remarks: >-
    > [!NOTE]

    >  <xref:System.Security.Cryptography.X509Certificates.X509Certificate> implements the <xref:System.IDisposable> interface starting with the [!INCLUDE[net_v46](~/add/includes/net-v46-md.md)]; in previous versions of the .NET Framework, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> class does not implement this interface, and therefore the `Dispose` method does not exist.
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>관리 되는 관리 되지 않는 리소스만 해제 하려면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 만 관리 되지 않는 리소스를 해제 합니다."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: X509Certificate.Equals(Object)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "두 <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> 같음에 대 한 개체입니다."
  remarks: "두 개체가 동일한 경우 같은 개체로 간주 되는지 <xref:System.Security.Cryptography.X509Certificates.X509Certificate>개체가 고는 동일한 발급자와 일련 번호입니다.</xref:System.Security.Cryptography.X509Certificates.X509Certificate>"
  example:
  - "The following example compares two certificates for equality.  \n  \n [!code-cs[X509Certificate.Equals Method#1](~/add/codesnippet/csharp/f47485e7-2fcd-4cb5-8c02-_1.cs)]\n [!code-cpp[X509Certificate.Equals Method#1](~/add/codesnippet/cpp/f47485e7-2fcd-4cb5-8c02-_1.cpp)]\n [!code-vb[X509Certificate.Equals Method#1](~/add/codesnippet/visualbasic/f47485e7-2fcd-4cb5-8c02-_1.vb)]"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "<xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> 현재 개체와 비교할 개체입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>하는 경우 현재 <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> 개체가 지정한 개체와 같은지는 <code> other </code> 매개 변수, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Equals(System.Security.Cryptography.X509Certificates.X509Certificate)
  id: Equals(System.Security.Cryptography.X509Certificates.X509Certificate)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: Equals(X509Certificate)
  nameWithType: X509Certificate.Equals(X509Certificate)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Equals(X509Certificate)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "두 <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> 같음에 대 한 개체입니다."
  remarks: "두 개의 <xref:System.Security.Cryptography.X509Certificates.X509Certificate>개체 경우 같은 발급자와 일련 번호가 같은 것으로 간주 됩니다.</xref:System.Security.Cryptography.X509Certificates.X509Certificate>"
  example:
  - "The following example compares two certificates for equality.  \n  \n [!code-cs[X509Certificate.Equals Method#1](~/add/codesnippet/csharp/a7eacb37-7527-4d28-91b5-_1.cs)]\n [!code-cpp[X509Certificate.Equals Method#1](~/add/codesnippet/cpp/a7eacb37-7527-4d28-91b5-_1.cpp)]\n [!code-vb[X509Certificate.Equals Method#1](~/add/codesnippet/visualbasic/a7eacb37-7527-4d28-91b5-_1.vb)]"
  syntax:
    content: public virtual bool Equals (System.Security.Cryptography.X509Certificates.X509Certificate other);
    parameters:
    - id: other
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "<xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> 현재 개체와 비교할 개체입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>하는 경우 현재 <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> 개체가 지정한 개체와 같은지는 <code> other </code> 매개 변수, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType)
  id: Export(System.Security.Cryptography.X509Certificates.X509ContentType)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: Export(X509ContentType)
  nameWithType: X509Certificate.Export(X509ContentType)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Export(X509ContentType)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "현재 내보냅니다 <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> 개체 중 하나에 의해 설명 되는 형식에서 바이트 배열로 <xref href=&quot;System.Security.Cryptography.X509Certificates.X509ContentType&quot;> </xref> 값입니다."
  remarks: '`contentType` 의 다음 값만을 허용 하는 매개 변수는 <xref:System.Security.Cryptography.X509Certificates.X509ContentType>열거형: <xref:System.Security.Cryptography.X509Certificates.X509ContentType>, <xref:System.Security.Cryptography.X509Certificates.X509ContentType>, 및 <xref:System.Security.Cryptography.X509Certificates.X509ContentType>.</xref:System.Security.Cryptography.X509Certificates.X509ContentType> </xref:System.Security.Cryptography.X509Certificates.X509ContentType> </xref:System.Security.Cryptography.X509Certificates.X509ContentType> </xref:System.Security.Cryptography.X509Certificates.X509ContentType>  원인을 값 다른 전달는 <xref:System.Security.Cryptography.CryptographicException>throw 됩니다.</xref:System.Security.Cryptography.CryptographicException>'
  example:
  - "The following example loads an X.509 certificate file into an <xref:System.Security.Cryptography.X509Certificates.X509Certificate> object, exports the certificate as a byte array, and then imports the byte array into another <xref:System.Security.Cryptography.X509Certificates.X509Certificate> object.  \n  \n [!code-cs[Cryptography.X509Certificates.X509Certificate.Import-Export#1](~/add/codesnippet/csharp/7086c90a-cfa4-4cab-9c75-_1.cs)]\n [!code-vb[Cryptography.X509Certificates.X509Certificate.Import-Export#1](~/add/codesnippet/visualbasic/7086c90a-cfa4-4cab-9c75-_1.vb)]\n [!code-cpp[Cryptography.X509Certificates.X509Certificate.Import-Export#1](~/add/codesnippet/cpp/7086c90a-cfa4-4cab-9c75-_1.cpp)]"
  syntax:
    content: public virtual byte[] Export (System.Security.Cryptography.X509Certificates.X509ContentType contentType);
    parameters:
    - id: contentType
      type: System.Security.Cryptography.X509Certificates.X509ContentType
      description: "중 하나는 <xref href=&quot;System.Security.Cryptography.X509Certificates.X509ContentType&quot;> </xref> 출력 데이터 형식을 지정 하는 방법을 설명 하는 값입니다."
    return:
      type: System.Byte[]
      description: "현재 나타내는 바이트 배열을 <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> 개체입니다."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Export*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "이외의 값 <xref href=&quot;System.Security.Cryptography.X509Certificates.X509ContentType&quot;> </xref>, <xref href=&quot;System.Security.Cryptography.X509Certificates.X509ContentType&quot;> </xref>, 또는 <xref href=&quot;System.Security.Cryptography.X509Certificates.X509ContentType&quot;> </xref> 에 전달 된는 <code> contentType </code> 매개 변수입니다.       -또는-인증서를 내보낼 수 없습니다."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.Security.SecureString)
  id: Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.Security.SecureString)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: Export(X509ContentType,SecureString)
  nameWithType: X509Certificate.Export(X509ContentType,SecureString)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Export(X509ContentType,SecureString)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "현재 내보냅니다 <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> 개체 지정된 된 형식 및 암호를 사용 하 여 바이트 배열입니다."
  remarks: "`contentType` 의 다음 값만을 허용 하는 매개 변수는 <xref:System.Security.Cryptography.X509Certificates.X509ContentType>열거형: <xref:System.Security.Cryptography.X509Certificates.X509ContentType>, <xref:System.Security.Cryptography.X509Certificates.X509ContentType>, 및 <xref:System.Security.Cryptography.X509Certificates.X509ContentType>.</xref:System.Security.Cryptography.X509Certificates.X509ContentType> </xref:System.Security.Cryptography.X509Certificates.X509ContentType> </xref:System.Security.Cryptography.X509Certificates.X509ContentType> </xref:System.Security.Cryptography.X509Certificates.X509ContentType>  원인을 값 다른 전달는 <xref:System.Security.Cryptography.CryptographicException>throw 됩니다.</xref:System.Security.Cryptography.CryptographicException>      > [!IMPORTANT] > 하드 코딩 하지 마십시오 소스 코드 내에서 암호입니다.  사용 하 여 어셈블리에서 하드 코드 된 암호를 검색할 수는 [Ildasm.exe (IL 디스어셈블러)](~/add/includes/ajax-current-ext-md.md),&16; 진수 편집기 또는 단순히 Notepad.exe와 같은 텍스트 편집기에서 어셈블리를 열어 합니다."
  syntax:
    content: public virtual byte[] Export (System.Security.Cryptography.X509Certificates.X509ContentType contentType, System.Security.SecureString password);
    parameters:
    - id: contentType
      type: System.Security.Cryptography.X509Certificates.X509ContentType
      description: "중 하나는 <xref href=&quot;System.Security.Cryptography.X509Certificates.X509ContentType&quot;> </xref> 출력 데이터 형식을 지정 하는 방법을 설명 하는 값입니다."
    - id: password
      type: System.Security.SecureString
      description: "X.509 인증서 데이터에 액세스 하는 데 필요한 암호입니다."
    return:
      type: System.Byte[]
      description: "현재를 나타내는 바이트 배열을 <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> 개체입니다."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Export*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "이외의 값 <xref href=&quot;System.Security.Cryptography.X509Certificates.X509ContentType&quot;> </xref>, <xref href=&quot;System.Security.Cryptography.X509Certificates.X509ContentType&quot;> </xref>, 또는 <xref href=&quot;System.Security.Cryptography.X509Certificates.X509ContentType&quot;> </xref> 에 전달 된는 <code> contentType </code> 매개 변수입니다.       -또는-인증서를 내보낼 수 없습니다."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.String)
  id: Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.String)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: Export(X509ContentType,String)
  nameWithType: X509Certificate.Export(X509ContentType,String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Export(X509ContentType,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "현재 내보냅니다 <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> 개체 중 하나에 의해 설명 되는 형식에서 바이트 배열로 <xref href=&quot;System.Security.Cryptography.X509Certificates.X509ContentType&quot;> </xref> 값 및 지정된 된 암호를 사용 하 여 합니다."
  remarks: "`contentType` 의 다음 값만을 허용 하는 매개 변수는 <xref:System.Security.Cryptography.X509Certificates.X509ContentType>열거형: <xref:System.Security.Cryptography.X509Certificates.X509ContentType>, <xref:System.Security.Cryptography.X509Certificates.X509ContentType>, 및 <xref:System.Security.Cryptography.X509Certificates.X509ContentType>.</xref:System.Security.Cryptography.X509Certificates.X509ContentType> </xref:System.Security.Cryptography.X509Certificates.X509ContentType> </xref:System.Security.Cryptography.X509Certificates.X509ContentType> </xref:System.Security.Cryptography.X509Certificates.X509ContentType>  원인을 값 다른 전달는 <xref:System.Security.Cryptography.CryptographicException>throw 됩니다.</xref:System.Security.Cryptography.CryptographicException>      > [!IMPORTANT] > 하드 코딩 하지 마십시오 소스 코드 내에서 암호입니다.  사용 하 여 어셈블리에서 하드 코드 된 암호를 검색할 수는 [Ildasm.exe (IL 디스어셈블러)](~/add/includes/ajax-current-ext-md.md),&16; 진수 편집기 또는 단순히 Notepad.exe와 같은 텍스트 편집기에서 어셈블리를 열어 합니다."
  syntax:
    content: public virtual byte[] Export (System.Security.Cryptography.X509Certificates.X509ContentType contentType, string password);
    parameters:
    - id: contentType
      type: System.Security.Cryptography.X509Certificates.X509ContentType
      description: "중 하나는 <xref href=&quot;System.Security.Cryptography.X509Certificates.X509ContentType&quot;> </xref> 출력 데이터 형식을 지정 하는 방법을 설명 하는 값입니다."
    - id: password
      type: System.String
      description: "X.509 인증서 데이터에 액세스 하는 데 필요한 암호입니다."
    return:
      type: System.Byte[]
      description: "현재 나타내는 바이트 배열을 <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> 개체입니다."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Export*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "이외의 값 <xref href=&quot;System.Security.Cryptography.X509Certificates.X509ContentType&quot;> </xref>, <xref href=&quot;System.Security.Cryptography.X509Certificates.X509ContentType&quot;> </xref>, 또는 <xref href=&quot;System.Security.Cryptography.X509Certificates.X509ContentType&quot;> </xref> 에 전달 된는 <code> contentType </code> 매개 변수입니다.       -또는-인증서를 내보낼 수 없습니다."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.FormatDate(System.DateTime)
  id: FormatDate(System.DateTime)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: FormatDate(DateTime)
  nameWithType: X509Certificate.FormatDate(DateTime)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.FormatDate(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "지정 된 날짜와 시간을 문자열로 변환합니다."
  remarks: "일부 문화권은 미래 날짜를 문자열로 변환할 수 없습니다. X.509 인증서의 만료 날짜 문화권의 범위를 벗어나는 경우 FormatDate 날짜를 표현할 수 있는 일정을 변경 합니다. 경우 <xref:System.Globalization.CultureInfo.Calendar%2A> <xref:System.Globalization.UmAlQuraCalendar>면 달력은는 <xref:System.Globalization.HijriCalendar>클래스, <xref:System.Globalization.CultureInfo.InvariantCulture%2A>.</xref:System.Globalization.CultureInfo.InvariantCulture%2A> 변경 되 고, 그러지 않으면</xref:System.Globalization.HijriCalendar> </xref:System.Globalization.UmAlQuraCalendar> 값은</xref:System.Globalization.CultureInfo.Calendar%2A>"
  syntax:
    content: protected static string FormatDate (DateTime date);
    parameters:
    - id: date
      type: System.DateTime
      description: "변환할 날짜 및 시간입니다."
    return:
      type: System.String
      description: "값의 문자열 표현을 <xref:System.DateTime>개체입니다.</xref:System.DateTime>"
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.FormatDate*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHash
  id: GetCertHash
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: GetCertHash()
  nameWithType: X509Certificate.GetCertHash()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHash()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "X.509v3 인증서에 대 한 해시 값으로 바이트 배열을 반환합니다."
  remarks: ''
  example:
  - "The following example uses the GetCertHash method to fill an array of bytes with the hash value for an X.509 certificate.  \n  \n [!code-cs[X509Certificate.GetCertHash Method#1](~/add/codesnippet/csharp/m-system.security.crypto_52_1.cs)]\n [!code-vb[X509Certificate.GetCertHash Method#1](~/add/codesnippet/visualbasic/m-system.security.crypto_52_1.vb)]\n [!code-cpp[X509Certificate.GetCertHash Method#1](~/add/codesnippet/cpp/m-system.security.crypto_52_1.cpp)]"
  syntax:
    content: public virtual byte[] GetCertHash ();
    parameters: []
    return:
      type: System.Byte[]
      description: "X.509 인증서에 대 한 해시 값입니다."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHash*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHashString
  id: GetCertHashString
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: GetCertHashString()
  nameWithType: X509Certificate.GetCertHashString()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHashString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "16 진수 문자열로 X.509v3 인증서에 대 한 SHA1 해시 값을 반환합니다."
  remarks: ''
  example:
  - "The following example uses the GetCertHashString method to get an X.509 certificate hash value, convert it to a string, and display it to the console.  \n  \n [!code-cpp[X509Certificate.GetCertHashString Method#1](~/add/codesnippet/cpp/91428cb0-40b3-45b2-8ef3-_1.cpp)]\n [!code-cs[X509Certificate.GetCertHashString Method#1](~/add/codesnippet/csharp/91428cb0-40b3-45b2-8ef3-_1.cs)]\n [!code-vb[X509Certificate.GetCertHashString Method#1](~/add/codesnippet/visualbasic/91428cb0-40b3-45b2-8ef3-_1.vb)]"
  syntax:
    content: public virtual string GetCertHashString ();
    parameters: []
    return:
      type: System.String
      description: "X.509 인증서 해시 값의&16; 진수 문자열 표현입니다."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHashString*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetEffectiveDateString
  id: GetEffectiveDateString
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: GetEffectiveDateString()
  nameWithType: X509Certificate.GetEffectiveDateString()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetEffectiveDateString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "이 X.509v3 인증서의 개시 날짜를 반환합니다."
  remarks: "개시 날짜는 날짜는 X.509 인증서가 유효한 것으로 간주 합니다.       GetEffectiveDateString 메서드 날짜를 표시 하는 문자열 형식의 짧은 날짜 패턴과 긴 시간 패턴으로 서식이 지정 된 시간을 반환 합니다.  날짜 및 시간이 현재 문화권 및 표준 시간대를 사용 하 여 형식이 지정 됩니다."
  example:
  - "The following example uses the GetEffectiveDateString method to get the effective date of a certificate and displays it to the console.  \n  \n [!code-vb[X509Certificate.GetEffectiveDateString Method#1](~/add/codesnippet/visualbasic/5a69884a-4857-43c9-9b1e-_1.vb)]\n [!code-cpp[X509Certificate.GetEffectiveDateString Method#1](~/add/codesnippet/cpp/5a69884a-4857-43c9-9b1e-_1.cpp)]\n [!code-cs[X509Certificate.GetEffectiveDateString Method#1](~/add/codesnippet/csharp/5a69884a-4857-43c9-9b1e-_1.cs)]"
  syntax:
    content: public virtual string GetEffectiveDateString ();
    parameters: []
    return:
      type: System.String
      description: "이 X.509 인증서에 대 한 유효 날짜입니다."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.GetEffectiveDateString*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetExpirationDateString
  id: GetExpirationDateString
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: GetExpirationDateString()
  nameWithType: X509Certificate.GetExpirationDateString()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetExpirationDateString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "이 X.509v3 인증서의 만료 날짜를 반환합니다."
  remarks: "만료 날짜는 날짜는 X.509 인증서는 더 이상 유효한 것으로 간주 합니다.       GetExpirationDateString 메서드 날짜를 표시 하는 문자열 형식의 짧은 날짜 패턴과 긴 시간 패턴으로 서식이 지정 된 시간을 반환 합니다.  날짜 및 시간이 현재 문화권 및 표준 시간대를 사용 하 여 형식이 지정 됩니다.      > [!NOTE] >이 반환 될 수 있으며 다른 문자열 형식 Macintosh 컴퓨터에 있지만 기본 <xref:System.DateTime>개체는 같은 값을 표시 합니다.</xref:System.DateTime>"
  example:
  - "The following example uses the GetExpirationDateString method to get the expiration date of a certificate and displays it to the console.  \n  \n [!code-vb[X509Certificate.GetExpirationDateString Method#1](~/add/codesnippet/visualbasic/76048adf-be4c-432a-8c57-_1.vb)]\n [!code-cpp[X509Certificate.GetExpirationDateString Method#1](~/add/codesnippet/cpp/76048adf-be4c-432a-8c57-_1.cpp)]\n [!code-cs[X509Certificate.GetExpirationDateString Method#1](~/add/codesnippet/csharp/76048adf-be4c-432a-8c57-_1.cs)]"
  syntax:
    content: public virtual string GetExpirationDateString ();
    parameters: []
    return:
      type: System.String
      description: "이 X.509 인증서에 대 한 만료 날짜입니다."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.GetExpirationDateString*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetFormat
  id: GetFormat
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: GetFormat()
  nameWithType: X509Certificate.GetFormat()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetFormat()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "이 X.509v3 인증서의 형식 이름을 반환합니다."
  remarks: "형식은 X.509 항상이 구현에서 반환 됩니다."
  example:
  - "The following example uses the GetFormat method to get the format of a certificate and displays it to the console.  \n  \n [!code-cpp[X509Certificate.GetFormat Method#1](~/add/codesnippet/cpp/m-system.security.crypto_96_1.cpp)]\n [!code-cs[X509Certificate.GetFormat Method#1](~/add/codesnippet/csharp/m-system.security.crypto_96_1.cs)]\n [!code-vb[X509Certificate.GetFormat Method#1](~/add/codesnippet/visualbasic/m-system.security.crypto_96_1.vb)]"
  syntax:
    content: public virtual string GetFormat ();
    parameters: []
    return:
      type: System.String
      description: "이 X.509 인증서의 형식입니다."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.GetFormat*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetHashCode
  id: GetHashCode
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: X509Certificate.GetHashCode()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "X.509v3 인증서에 대 한 해시 코드를 정수로 반환합니다."
  remarks: "X.509 인증서 해시 이상 4 바이트 배열인 경우이 정수 표현에는 네 번째 바이트가 오는 바이트 표시 되지 않습니다."
  example:
  - "The following example uses the GetHashCode method to return an integer representation of a certificate's hash code and displays it to the console.  \n  \n [!code-cs[X509Certificate.GetHashCode Method#1](~/add/codesnippet/csharp/m-system.security.crypto_37_1.cs)]\n [!code-cpp[X509Certificate.GetHashCode Method#1](~/add/codesnippet/cpp/m-system.security.crypto_37_1.cpp)]\n [!code-vb[X509Certificate.GetHashCode Method#1](~/add/codesnippet/visualbasic/m-system.security.crypto_37_1.vb)]"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "정수는 X.509 인증서에 대 한 해시 코드입니다."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetIssuerName
  id: GetIssuerName
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: GetIssuerName()
  nameWithType: X509Certificate.GetIssuerName()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetIssuerName()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "X.509v3 인증서를 발급 한 인증 기관의 이름을 반환 합니다."
  remarks: ''
  example:
  - "The following example uses the GetIssuerName method to return the certificate issuer's name and displays it to the console.  \n  \n [!code-cpp[X509Certificate.GetIssuerName Method#1](~/add/codesnippet/cpp/m-system.security.crypto_90_1.cpp)]\n [!code-vb[X509Certificate.GetIssuerName Method#1](~/add/codesnippet/visualbasic/m-system.security.crypto_90_1.vb)]\n [!code-cs[X509Certificate.GetIssuerName Method#1](~/add/codesnippet/csharp/m-system.security.crypto_90_1.cs)]"
  syntax:
    content: public virtual string GetIssuerName ();
    parameters: []
    return:
      type: System.String
      description: "X.509 인증서를 발급한 인증 기관의 이름입니다."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.GetIssuerName*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "인증서 관련 오류가 발생합니다. 예:-인증서 파일이 없습니다.      -인증서가 올바르지 않습니다.      -인증서의 암호가 올바르지 않습니다."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithm
  id: GetKeyAlgorithm
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: GetKeyAlgorithm()
  nameWithType: X509Certificate.GetKeyAlgorithm()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithm()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "이 X.509v3 인증서에 대 한 키 알고리즘 정보를 문자열로 반환합니다."
  remarks: ''
  example:
  - "The following example uses the GetKeyAlgorithm method to get a certificate's key algorithm in string format and displays it to the console.  \n  \n [!code-cpp[X509Certificate.GetKeyAlgorithm Method#1](~/add/codesnippet/cpp/m-system.security.crypto_21_1.cpp)]\n [!code-cs[X509Certificate.GetKeyAlgorithm Method#1](~/add/codesnippet/csharp/m-system.security.crypto_21_1.cs)]\n [!code-vb[X509Certificate.GetKeyAlgorithm Method#1](~/add/codesnippet/visualbasic/m-system.security.crypto_21_1.vb)]"
  syntax:
    content: public virtual string GetKeyAlgorithm ();
    parameters: []
    return:
      type: System.String
      description: "문자열로 서이 X.509 인증서에 대 한 키 알고리즘 정보입니다."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithm*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "인증서 컨텍스트가 올바르지 않습니다."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParameters
  id: GetKeyAlgorithmParameters
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: GetKeyAlgorithmParameters()
  nameWithType: X509Certificate.GetKeyAlgorithmParameters()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParameters()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "바이트의 배열로 X.509v3 인증서에 대 한 키 알고리즘 매개 변수를 반환합니다."
  remarks: ''
  example:
  - "The following example uses the GetKeyAlgorithmParameters method to return a certificate's key algorithm parameters as an array of bytes and displays it to the console.  \n  \n [!code-cpp[X509Certificate.GetKeyAlgorithmParameters Method#1](~/add/codesnippet/cpp/50ee38f2-6fab-4f27-b38b-_1.cpp)]\n [!code-cs[X509Certificate.GetKeyAlgorithmParameters Method#1](~/add/codesnippet/csharp/50ee38f2-6fab-4f27-b38b-_1.cs)]\n [!code-vb[X509Certificate.GetKeyAlgorithmParameters Method#1](~/add/codesnippet/visualbasic/50ee38f2-6fab-4f27-b38b-_1.vb)]"
  syntax:
    content: public virtual byte[] GetKeyAlgorithmParameters ();
    parameters: []
    return:
      type: System.Byte[]
      description: "바이트의 배열로 X.509 인증서에 대 한 키 알고리즘 매개 변수입니다."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParameters*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "인증서 컨텍스트가 올바르지 않습니다."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParametersString
  id: GetKeyAlgorithmParametersString
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: GetKeyAlgorithmParametersString()
  nameWithType: X509Certificate.GetKeyAlgorithmParametersString()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParametersString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "X.509v3 인증서에 대 한 키 알고리즘 매개 변수를&16; 진수 문자열로 반환합니다."
  remarks: ''
  example:
  - "The following example uses the GetKeyAlgorithmParametersString method to return a certificate's key algorithm parameters in string format and displays it to the console.  \n  \n [!code-cs[X509Certificate.GetKeyAlgorithmParametersString#1](~/add/codesnippet/csharp/a22806f0-c945-45f8-bbd4-_1.cs)]\n [!code-cpp[X509Certificate.GetKeyAlgorithmParametersString#1](~/add/codesnippet/cpp/a22806f0-c945-45f8-bbd4-_1.cpp)]\n [!code-vb[X509Certificate.GetKeyAlgorithmParametersString#1](~/add/codesnippet/visualbasic/a22806f0-c945-45f8-bbd4-_1.vb)]"
  syntax:
    content: public virtual string GetKeyAlgorithmParametersString ();
    parameters: []
    return:
      type: System.String
      description: "16 진수 문자열로 X.509 인증서에 대 한 키 알고리즘 매개 변수입니다."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParametersString*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "인증서 컨텍스트가 올바르지 않습니다."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetName
  id: GetName
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: GetName()
  nameWithType: X509Certificate.GetName()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetName()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "인증서가 발급 된 보안 주체의 이름을 반환 합니다."
  remarks: ''
  example:
  - "The following example uses the GetName method to return the name of a certificate's principal and displays it to the console.  \n  \n [!code-cs[X509Certificate.GetName Method#1](~/add/codesnippet/csharp/m-system.security.crypto_133_1.cs)]\n [!code-cpp[X509Certificate.GetName Method#1](~/add/codesnippet/cpp/m-system.security.crypto_133_1.cpp)]\n [!code-vb[X509Certificate.GetName Method#1](~/add/codesnippet/visualbasic/m-system.security.crypto_133_1.vb)]"
  syntax:
    content: public virtual string GetName ();
    parameters: []
    return:
      type: System.String
      description: "인증서가 발급 된 보안 주체의 이름입니다."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.GetName*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "인증서 컨텍스트가 올바르지 않습니다."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKey
  id: GetPublicKey
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: GetPublicKey()
  nameWithType: X509Certificate.GetPublicKey()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKey()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "바이트의 배열로 X.509v3 인증서에 대 한 공개 키를 반환합니다."
  remarks: ''
  example:
  - "The following example uses the GetPublicKey method to return a certificate's public key as an array of bytes and displays it to the console.  \n  \n [!code-cpp[X509Certificate.GetPublicKey Method#1](~/add/codesnippet/cpp/m-system.security.crypto_13_1.cpp)]\n [!code-cs[X509Certificate.GetPublicKey Method#1](~/add/codesnippet/csharp/m-system.security.crypto_13_1.cs)]\n [!code-vb[X509Certificate.GetPublicKey Method#1](~/add/codesnippet/visualbasic/m-system.security.crypto_13_1.vb)]"
  syntax:
    content: public virtual byte[] GetPublicKey ();
    parameters: []
    return:
      type: System.Byte[]
      description: "바이트의 배열로 X.509 인증서에 대 한 공개 키입니다."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKey*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "인증서 컨텍스트가 올바르지 않습니다."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKeyString
  id: GetPublicKeyString
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: GetPublicKeyString()
  nameWithType: X509Certificate.GetPublicKeyString()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKeyString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "16 진수 문자열로 X.509v3 인증서에 대 한 공개 키를 반환합니다."
  remarks: ''
  example:
  - "The following example uses the GetPublicKeyString method to return a certificate's public key as a string and displays it to the console.  \n  \n [!code-cpp[X509Certificate.GetPublicKeyString Method#1](~/add/codesnippet/cpp/32662298-b286-4db7-b0c3-_1.cpp)]\n [!code-cs[X509Certificate.GetPublicKeyString Method#1](~/add/codesnippet/csharp/32662298-b286-4db7-b0c3-_1.cs)]\n [!code-vb[X509Certificate.GetPublicKeyString Method#1](~/add/codesnippet/visualbasic/32662298-b286-4db7-b0c3-_1.vb)]"
  syntax:
    content: public virtual string GetPublicKeyString ();
    parameters: []
    return:
      type: System.String
      description: "16 진수 문자열로 X.509 인증서에 대 한 공개 키입니다."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKeyString*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertData
  id: GetRawCertData
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: GetRawCertData()
  nameWithType: X509Certificate.GetRawCertData()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertData()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "전체 X.509v3 인증서에 대 한 원시 데이터 바이트의 배열로 반환합니다."
  remarks: ''
  example:
  - "The following example uses the GetRawCertData method to return a certificate's raw data as an array of bytes and displays it to the console.  \n  \n [!code-cs[X509Certificate.GetRawCertData Method#1](~/add/codesnippet/csharp/m-system.security.crypto_8_1.cs)]\n [!code-vb[X509Certificate.GetRawCertData Method#1](~/add/codesnippet/visualbasic/m-system.security.crypto_8_1.vb)]\n [!code-cpp[X509Certificate.GetRawCertData Method#1](~/add/codesnippet/cpp/m-system.security.crypto_8_1.cpp)]"
  syntax:
    content: public virtual byte[] GetRawCertData ();
    parameters: []
    return:
      type: System.Byte[]
      description: "X.509 인증서 데이터를 포함 하는 바이트 배열입니다."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertData*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertDataString
  id: GetRawCertDataString
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: GetRawCertDataString()
  nameWithType: X509Certificate.GetRawCertDataString()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertDataString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "전체 X.509v3 인증서에 대 한 원시 데이터를&16; 진수 문자열로 반환합니다."
  remarks: ''
  example:
  - "The following example uses the GetRawCertDataString method to return a certificate's raw data as a string and displays it to the console.  \n  \n [!code-cs[X509Certificate.GetRawCertDataString Method#1](~/add/codesnippet/csharp/7093e757-0c91-4543-9e38-_1.cs)]\n [!code-cpp[X509Certificate.GetRawCertDataString Method#1](~/add/codesnippet/cpp/7093e757-0c91-4543-9e38-_1.cpp)]\n [!code-vb[X509Certificate.GetRawCertDataString Method#1](~/add/codesnippet/visualbasic/7093e757-0c91-4543-9e38-_1.vb)]"
  syntax:
    content: public virtual string GetRawCertDataString ();
    parameters: []
    return:
      type: System.String
      description: "16 진수 문자열로 X.509 인증서 데이터입니다."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertDataString*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumber
  id: GetSerialNumber
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: GetSerialNumber()
  nameWithType: X509Certificate.GetSerialNumber()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumber()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "바이트의 배열로 X.509v3 인증서의 일련 번호를 반환합니다."
  remarks: ''
  example:
  - "The following example uses the GetSerialNumber method to return a certificate's serial number as an array of bytes and displays it to the console.  \n  \n [!code-cs[X509Certificate.GetSerialNumber Method#1](~/add/codesnippet/csharp/m-system.security.crypto_4_1.cs)]\n [!code-cpp[X509Certificate.GetSerialNumber Method#1](~/add/codesnippet/cpp/m-system.security.crypto_4_1.cpp)]\n [!code-vb[X509Certificate.GetSerialNumber Method#1](~/add/codesnippet/visualbasic/m-system.security.crypto_4_1.vb)]"
  syntax:
    content: public virtual byte[] GetSerialNumber ();
    parameters: []
    return:
      type: System.Byte[]
      description: "바이트의 배열로 X.509 인증서의 일련 번호입니다."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumber*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "인증서 컨텍스트가 올바르지 않습니다."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumberString
  id: GetSerialNumberString
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: GetSerialNumberString()
  nameWithType: X509Certificate.GetSerialNumberString()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumberString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "16 진수 문자열로 X.509v3 인증서의 일련 번호를 반환합니다."
  remarks: ''
  example:
  - "The following example uses the GetSerialNumberString method to return a certificate's serial number as a string and displays it to the console.  \n  \n [!code-cs[X509Certificate.GetSerialNumberString Method#1](~/add/codesnippet/csharp/68e809e1-8785-4578-8a1f-_1.cs)]\n [!code-cpp[X509Certificate.GetSerialNumberString Method#1](~/add/codesnippet/cpp/68e809e1-8785-4578-8a1f-_1.cpp)]\n [!code-vb[X509Certificate.GetSerialNumberString Method#1](~/add/codesnippet/visualbasic/68e809e1-8785-4578-8a1f-_1.vb)]"
  syntax:
    content: public virtual string GetSerialNumberString ();
    parameters: []
    return:
      type: System.String
      description: "16 진수 문자열로 X.509 인증서의 일련 번호입니다."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumberString*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Handle
  id: Handle
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: Handle
  nameWithType: X509Certificate.Handle
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Handle
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "관리 되지 않는에서 설명 하는 Microsoft Cryptographic API 인증서 컨텍스트에 대 한 핸들을 가져옵니다 <xref uid=&quot;langword_csharp_PCCERT_CONTEXT&quot; name=&quot;PCCERT_CONTEXT&quot; href=&quot;&quot;> </xref> 구조입니다."
  remarks: "수명에 대 한 핸들이 유효는 <xref:System.Security.Cryptography.X509Certificates.X509Certificate>개체입니다.</xref:System.Security.Cryptography.X509Certificates.X509Certificate>"
  syntax:
    content: public IntPtr Handle { get; }
    return:
      type: System.IntPtr
      description: "<xref:System.IntPtr>나타내는 관리 되지 않는 구조 <xref uid=&quot;langword_csharp_PCCERT_CONTEXT&quot; name=&quot;PCCERT_CONTEXT&quot; href=&quot;&quot;> </xref> 구조.</xref:System.IntPtr>"
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Handle*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.Byte[])
  id: Import(System.Byte[])
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: Import(Byte[])
  nameWithType: X509Certificate.Import(Byte[])
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Import(Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "채웁니다는 <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> 바이트 배열의 데이터를에서 가진 개체입니다."
  remarks: "이 메서드는 X.509 인증서의 원시 바이트 배열을를 사용할 수는 <xref:System.Security.Cryptography.X509Certificates.X509Certificate>관련된 값을 가진 개체입니다.</xref:System.Security.Cryptography.X509Certificates.X509Certificate>"
  syntax:
    content: public virtual void Import (byte[] rawData);
    parameters:
    - id: rawData
      type: System.Byte[]
      description: "X.509 인증서에서 데이터를 포함 하는 바이트 배열입니다."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Import*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>rawData</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -또는-의 길이 <code> rawData </code> 매개 변수는 0입니다."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.String)
  id: Import(System.String)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: Import(String)
  nameWithType: X509Certificate.Import(String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Import(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "채웁니다는 <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> 인증서 파일의 정보입니다."
  remarks: "X.509 인증서를 나타내는 정보를 표시 하는 인증서 파일 (예: 확장명이.cer 파일)을 사용 하 여이 메서드는 <xref:System.Security.Cryptography.X509Certificates.X509Certificate>파일에 포함 된 인증서로.</xref:System.Security.Cryptography.X509Certificates.X509Certificate>"
  example:
  - "The following example loads an X.509 certificate from a file, calls the <xref:System.Security.Cryptography.X509Certificates.X509Certificate.ToString%2A> method, and displays the results to the console.  \n  \n [!code-cs[Cryptography.X509Certificates.X509Certificate.Import#1](~/add/codesnippet/csharp/9f89a581-a9e3-4157-bfa5-_1.cs)]\n [!code-cpp[Cryptography.X509Certificates.X509Certificate.Import#1](~/add/codesnippet/cpp/9f89a581-a9e3-4157-bfa5-_1.cpp)]\n [!code-vb[Cryptography.X509Certificates.X509Certificate.Import#1](~/add/codesnippet/visualbasic/9f89a581-a9e3-4157-bfa5-_1.vb)]"
  syntax:
    content: public virtual void Import (string fileName);
    parameters:
    - id: fileName
      type: System.String
      description: "문자열로 표현 된 인증서 파일의 이름입니다."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Import*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>fileName</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  id: Import(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: Import(Byte[],SecureString,X509KeyStorageFlags)
  nameWithType: X509Certificate.Import(Byte[],SecureString,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Import(Byte[],SecureString,X509KeyStorageFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "정보를 표시 한 <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> 개체 데이터를 바이트 배열, 암호 및 키 저장소 플래그를 사용 하 여 합니다."
  remarks: >-
    > [!IMPORTANT]

    >  Never hard code a password within your source code.  Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/add/includes/ajax-current-ext-md.md), a hex editor, or by simply opening the assembly in a text editor such as Notepad.exe.
  syntax:
    content: public virtual void Import (byte[] rawData, System.Security.SecureString password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);
    parameters:
    - id: rawData
      type: System.Byte[]
      description: "X.509 인증서의 데이터가 들어 있는 바이트 배열입니다."
    - id: password
      type: System.Security.SecureString
      description: "X.509 인증서 데이터에 액세스 하는 데 필요한 암호입니다."
    - id: keyStorageFlags
      type: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
      description: "열거형의 비트 조합 값이 위치와 방법을 제어 하는 인증서를 가져오려면 합니다."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Import*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>rawData</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -또는-의 길이 <code> rawData </code> 매개 변수는 0입니다."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  id: Import(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: Import(Byte[],String,X509KeyStorageFlags)
  nameWithType: X509Certificate.Import(Byte[],String,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Import(Byte[],String,X509KeyStorageFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "채웁니다는 <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> 바이트 배열, 암호 및 플래그의 데이터를 사용 하 여 개인 키를 가져오는 방법을 결정 하기 위한 개체입니다."
  remarks: "이 메서드를 채우는 데 사용할 수는 <xref:System.Security.Cryptography.X509Certificates.X509Certificate>개체 바이트 배열에 의해 표시 되는 인증서에 대 한 암호를 사용 하 여.</xref:System.Security.Cryptography.X509Certificates.X509Certificate> <xref:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags>개인 키를 가져올 위치와 방법을 제어 하려면 값을 사용할 수 있습니다.</xref:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags>"
  syntax:
    content: public virtual void Import (byte[] rawData, string password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);
    parameters:
    - id: rawData
      type: System.Byte[]
      description: "X.509 인증서에서 데이터를 포함 하는 바이트 배열입니다."
    - id: password
      type: System.String
      description: "X.509 인증서 데이터에 액세스 하는 데 필요한 암호입니다."
    - id: keyStorageFlags
      type: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
      description: "열거형의 비트 조합 값이 위치와 방법을 제어 하는 인증서를 가져오려면 합니다."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Import*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>rawData</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -또는-의 길이 <code> rawData </code> 매개 변수는 0입니다."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  id: Import(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: Import(String,SecureString,X509KeyStorageFlags)
  nameWithType: X509Certificate.Import(String,SecureString,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Import(String,SecureString,X509KeyStorageFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "정보를 표시 한 <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> 인증서 파일을, 암호 및 키 저장소 플래그의 정보입니다."
  remarks: >-
    > [!IMPORTANT]

    >  Never hard code a password within your source code.  Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/add/includes/ajax-current-ext-md.md), a hex editor, or by simply opening the assembly in a text editor such as Notepad.exe.
  syntax:
    content: public virtual void Import (string fileName, System.Security.SecureString password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);
    parameters:
    - id: fileName
      type: System.String
      description: "인증서 파일의 이름입니다."
    - id: password
      type: System.Security.SecureString
      description: "X.509 인증서 데이터에 액세스 하는 데 필요한 암호입니다."
    - id: keyStorageFlags
      type: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
      description: "열거형의 비트 조합 값이 위치와 방법을 제어 하는 인증서를 가져오려면 합니다."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Import*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>fileName</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  id: Import(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: Import(String,String,X509KeyStorageFlags)
  nameWithType: X509Certificate.Import(String,String,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Import(String,String,X509KeyStorageFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "채웁니다는 <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> 암호, 인증서 파일의 정보 및 <xref href=&quot;System.Security.Cryptography.X509Certificates.X509KeyStorageFlags&quot;> </xref> 값입니다."
  remarks: >-
    > [!IMPORTANT]

    >  Never hard-code a password within your source code.  Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/add/includes/ajax-current-ext-md.md), a hex editor, or by simply opening the assembly in a text editor such as Notepad.exe.
  syntax:
    content: public virtual void Import (string fileName, string password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);
    parameters:
    - id: fileName
      type: System.String
      description: "문자열로 표현 된 인증서 파일의 이름입니다."
    - id: password
      type: System.String
      description: "X.509 인증서 데이터에 액세스 하는 데 필요한 암호입니다."
    - id: keyStorageFlags
      type: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
      description: "열거형의 비트 조합 값이 위치와 방법을 제어 하는 인증서를 가져오려면 합니다."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Import*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>fileName</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Issuer
  id: Issuer
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: Issuer
  nameWithType: X509Certificate.Issuer
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Issuer
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "X.509v3 인증서를 발급 한 인증 기관의 이름을 가져옵니다."
  syntax:
    content: public string Issuer { get; }
    return:
      type: System.String
      description: "X.509v3 인증서를 발급 한 인증 기관의 이름입니다."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Issuer*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "인증서 핸들이 잘못 되었습니다."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Reset
  id: Reset
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: Reset()
  nameWithType: X509Certificate.Reset()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Reset()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "상태는 <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> 개체입니다."
  remarks: "Reset 메서드를 사용 하 여 인증서의 상태를 다시 설정 합니다. 이 메서드는 또한 인증서와 관련 된 모든 리소스를 해제 합니다."
  syntax:
    content: public virtual void Reset ();
    parameters: []
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Reset*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Subject
  id: Subject
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: Subject
  nameWithType: X509Certificate.Subject
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Subject
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "인증서에서 구별 된 주체 이름을 가져옵니다."
  syntax:
    content: public string Subject { get; }
    return:
      type: System.String
      description: "인증서에서 주체 고유 이름입니다."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Subject*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "인증서 핸들이 잘못 되었습니다."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)
  id: System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)
  isEii: true
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(Object)
  nameWithType: X509Certificate.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(Object)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "구현 된 <xref href=&quot;System.Runtime.Serialization.ISerializable&quot;> </xref> 인터페이스와 deserialization이 완료 되 면 deserialization 이벤트에 의해 콜백 됩니다."
  syntax:
    content: void IDeserializationCallback.OnDeserialization (object sender);
    parameters:
    - id: sender
      type: System.Object
      description: "Deserialization 이벤트의 소스입니다."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  isEii: true
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: X509Certificate.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "현재 인스턴스를 다시 만드는 데 필요한 모든 데이터와 serialization 정보를 가져옵니다 <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> 개체입니다."
  syntax:
    content: void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "Serialization 정보로 채울 개체입니다."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "Serialization의 대상 컨텍스트입니다."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.System#Runtime#Serialization#ISerializable#GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.ToString
  id: ToString
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: ToString()
  nameWithType: X509Certificate.ToString()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.ToString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "현재 문자열 표현을 반환 <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> 개체입니다."
  remarks: ''
  example:
  - "The following example uses the ToString method to display the value of a certificate to the console.  \n  \n [!code-cs[X509Certificate.ToString Method#1](~/add/codesnippet/csharp/m-system.security.crypto_128_1.cs)]\n [!code-cpp[X509Certificate.ToString Method#1](~/add/codesnippet/cpp/m-system.security.crypto_128_1.cpp)]\n [!code-vb[X509Certificate.ToString Method#1](~/add/codesnippet/visualbasic/m-system.security.crypto_128_1.vb)]"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "현재의 문자열 표현을 <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> 개체입니다."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.ToString(System.Boolean)
  id: ToString(System.Boolean)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  langs:
  - csharp
  name: ToString(Boolean)
  nameWithType: X509Certificate.ToString(Boolean)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.ToString(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography.X509Certificates
  summary: "현재 문자열 표현을 반환 <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> 개체를 추가 정보와 함께 지정 합니다."
  remarks: ''
  example:
  - "The following example uses the <xref:System.Security.Cryptography.X509Certificates.X509Certificate.ToString%2A> method to display the value of a certificate to the console.  \n  \n [!code-cs[X509Certificate.ToString Method#1](~/add/codesnippet/csharp/7bb8ae2b-24f8-4b21-80b2-_1.cs)]\n [!code-cpp[X509Certificate.ToString Method#1](~/add/codesnippet/cpp/7bb8ae2b-24f8-4b21-80b2-_1.cpp)]\n [!code-vb[X509Certificate.ToString Method#1](~/add/codesnippet/visualbasic/7bb8ae2b-24f8-4b21-80b2-_1.vb)]"
  syntax:
    content: public virtual string ToString (bool fVerbose);
    parameters:
    - id: fVerbose
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>문자열 표현의 상세한를 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
    return:
      type: System.String
      description: "현재의 문자열 표현을 <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> 개체입니다."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: X509Certificate()
  nameWithType: X509Certificate.X509Certificate()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[])
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: X509Certificate(Byte[])
  nameWithType: X509Certificate.X509Certificate(Byte[])
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.IntPtr)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: X509Certificate(IntPtr)
  nameWithType: X509Certificate.X509Certificate(IntPtr)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(IntPtr)
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: X509Certificate(X509Certificate)
  nameWithType: X509Certificate.X509Certificate(X509Certificate)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(X509Certificate)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509Certificate
  nameWithType: X509Certificate
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: X509Certificate(String)
  nameWithType: X509Certificate.X509Certificate(String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[],System.Security.SecureString)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: X509Certificate(Byte[],SecureString)
  nameWithType: X509Certificate.X509Certificate(Byte[],SecureString)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(Byte[],SecureString)
- uid: System.Security.SecureString
  parent: System.Security
  isExternal: false
  name: SecureString
  nameWithType: SecureString
  fullName: System.Security.SecureString
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[],System.String)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: X509Certificate(Byte[],String)
  nameWithType: X509Certificate.X509Certificate(Byte[],String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(Byte[],String)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: X509Certificate(SerializationInfo,StreamingContext)
  nameWithType: X509Certificate.X509Certificate(SerializationInfo,StreamingContext)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String,System.Security.SecureString)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: X509Certificate(String,SecureString)
  nameWithType: X509Certificate.X509Certificate(String,SecureString)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(String,SecureString)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String,System.String)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: X509Certificate(String,String)
  nameWithType: X509Certificate.X509Certificate(String,String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(String,String)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: X509Certificate(Byte[],SecureString,X509KeyStorageFlags)
  nameWithType: X509Certificate.X509Certificate(Byte[],SecureString,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(Byte[],SecureString,X509KeyStorageFlags)
- uid: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509KeyStorageFlags
  nameWithType: X509KeyStorageFlags
  fullName: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: X509Certificate(Byte[],String,X509KeyStorageFlags)
  nameWithType: X509Certificate.X509Certificate(Byte[],String,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(Byte[],String,X509KeyStorageFlags)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: X509Certificate(String,SecureString,X509KeyStorageFlags)
  nameWithType: X509Certificate.X509Certificate(String,SecureString,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(String,SecureString,X509KeyStorageFlags)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: X509Certificate(String,String,X509KeyStorageFlags)
  nameWithType: X509Certificate.X509Certificate(String,String,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(String,String,X509KeyStorageFlags)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromCertFile(System.String)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: CreateFromCertFile(String)
  nameWithType: X509Certificate.CreateFromCertFile(String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromCertFile(String)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromSignedFile(System.String)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: CreateFromSignedFile(String)
  nameWithType: X509Certificate.CreateFromSignedFile(String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromSignedFile(String)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Dispose
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Dispose()
  nameWithType: X509Certificate.Dispose()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Dispose()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Dispose(System.Boolean)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: X509Certificate.Dispose(Boolean)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Equals(System.Object)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Equals(Object)
  nameWithType: X509Certificate.Equals(Object)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Equals(Object)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Equals(System.Security.Cryptography.X509Certificates.X509Certificate)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Equals(X509Certificate)
  nameWithType: X509Certificate.Equals(X509Certificate)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Equals(X509Certificate)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Export(X509ContentType)
  nameWithType: X509Certificate.Export(X509ContentType)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Export(X509ContentType)
- uid: System.Security.Cryptography.X509Certificates.X509ContentType
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509ContentType
  nameWithType: X509ContentType
  fullName: System.Security.Cryptography.X509Certificates.X509ContentType
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.Security.SecureString)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Export(X509ContentType,SecureString)
  nameWithType: X509Certificate.Export(X509ContentType,SecureString)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Export(X509ContentType,SecureString)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.String)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Export(X509ContentType,String)
  nameWithType: X509Certificate.Export(X509ContentType,String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Export(X509ContentType,String)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.FormatDate(System.DateTime)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: FormatDate(DateTime)
  nameWithType: X509Certificate.FormatDate(DateTime)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.FormatDate(DateTime)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHash
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetCertHash()
  nameWithType: X509Certificate.GetCertHash()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHash()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHashString
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetCertHashString()
  nameWithType: X509Certificate.GetCertHashString()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHashString()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetEffectiveDateString
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetEffectiveDateString()
  nameWithType: X509Certificate.GetEffectiveDateString()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetEffectiveDateString()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetExpirationDateString
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetExpirationDateString()
  nameWithType: X509Certificate.GetExpirationDateString()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetExpirationDateString()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetFormat
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetFormat()
  nameWithType: X509Certificate.GetFormat()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetFormat()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetHashCode
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetHashCode()
  nameWithType: X509Certificate.GetHashCode()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetIssuerName
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetIssuerName()
  nameWithType: X509Certificate.GetIssuerName()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetIssuerName()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithm
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetKeyAlgorithm()
  nameWithType: X509Certificate.GetKeyAlgorithm()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithm()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParameters
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetKeyAlgorithmParameters()
  nameWithType: X509Certificate.GetKeyAlgorithmParameters()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParameters()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParametersString
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetKeyAlgorithmParametersString()
  nameWithType: X509Certificate.GetKeyAlgorithmParametersString()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParametersString()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetName
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetName()
  nameWithType: X509Certificate.GetName()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetName()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKey
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetPublicKey()
  nameWithType: X509Certificate.GetPublicKey()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKey()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKeyString
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetPublicKeyString()
  nameWithType: X509Certificate.GetPublicKeyString()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKeyString()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertData
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetRawCertData()
  nameWithType: X509Certificate.GetRawCertData()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertData()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertDataString
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetRawCertDataString()
  nameWithType: X509Certificate.GetRawCertDataString()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertDataString()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumber
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetSerialNumber()
  nameWithType: X509Certificate.GetSerialNumber()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumber()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumberString
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetSerialNumberString()
  nameWithType: X509Certificate.GetSerialNumberString()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumberString()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Handle
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Handle
  nameWithType: X509Certificate.Handle
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Handle
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.Byte[])
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Import(Byte[])
  nameWithType: X509Certificate.Import(Byte[])
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Import(Byte[])
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.String)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Import(String)
  nameWithType: X509Certificate.Import(String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Import(String)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Import(Byte[],SecureString,X509KeyStorageFlags)
  nameWithType: X509Certificate.Import(Byte[],SecureString,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Import(Byte[],SecureString,X509KeyStorageFlags)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Import(Byte[],String,X509KeyStorageFlags)
  nameWithType: X509Certificate.Import(Byte[],String,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Import(Byte[],String,X509KeyStorageFlags)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Import(String,SecureString,X509KeyStorageFlags)
  nameWithType: X509Certificate.Import(String,SecureString,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Import(String,SecureString,X509KeyStorageFlags)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Import(String,String,X509KeyStorageFlags)
  nameWithType: X509Certificate.Import(String,String,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Import(String,String,X509KeyStorageFlags)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Issuer
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Issuer
  nameWithType: X509Certificate.Issuer
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Issuer
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Reset
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Reset()
  nameWithType: X509Certificate.Reset()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Reset()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Subject
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Subject
  nameWithType: X509Certificate.Subject
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Subject
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(Object)
  nameWithType: X509Certificate.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(Object)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(Object)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: X509Certificate.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.ToString
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: ToString()
  nameWithType: X509Certificate.ToString()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.ToString()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.ToString(System.Boolean)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: ToString(Boolean)
  nameWithType: X509Certificate.ToString(Boolean)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.ToString(Boolean)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: X509Certificate
  nameWithType: X509Certificate.X509Certificate
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromCertFile*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: CreateFromCertFile
  nameWithType: X509Certificate.CreateFromCertFile
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromSignedFile*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: CreateFromSignedFile
  nameWithType: X509Certificate.CreateFromSignedFile
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Dispose*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Dispose
  nameWithType: X509Certificate.Dispose
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Equals*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Equals
  nameWithType: X509Certificate.Equals
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Export*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Export
  nameWithType: X509Certificate.Export
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.FormatDate*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: FormatDate
  nameWithType: X509Certificate.FormatDate
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHash*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetCertHash
  nameWithType: X509Certificate.GetCertHash
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHashString*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetCertHashString
  nameWithType: X509Certificate.GetCertHashString
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetEffectiveDateString*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetEffectiveDateString
  nameWithType: X509Certificate.GetEffectiveDateString
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetExpirationDateString*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetExpirationDateString
  nameWithType: X509Certificate.GetExpirationDateString
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetFormat*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetFormat
  nameWithType: X509Certificate.GetFormat
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetHashCode*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetHashCode
  nameWithType: X509Certificate.GetHashCode
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetIssuerName*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetIssuerName
  nameWithType: X509Certificate.GetIssuerName
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithm*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetKeyAlgorithm
  nameWithType: X509Certificate.GetKeyAlgorithm
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParameters*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetKeyAlgorithmParameters
  nameWithType: X509Certificate.GetKeyAlgorithmParameters
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParametersString*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetKeyAlgorithmParametersString
  nameWithType: X509Certificate.GetKeyAlgorithmParametersString
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetName*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetName
  nameWithType: X509Certificate.GetName
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKey*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetPublicKey
  nameWithType: X509Certificate.GetPublicKey
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKeyString*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetPublicKeyString
  nameWithType: X509Certificate.GetPublicKeyString
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertData*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetRawCertData
  nameWithType: X509Certificate.GetRawCertData
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertDataString*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetRawCertDataString
  nameWithType: X509Certificate.GetRawCertDataString
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumber*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetSerialNumber
  nameWithType: X509Certificate.GetSerialNumber
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumberString*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetSerialNumberString
  nameWithType: X509Certificate.GetSerialNumberString
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Handle*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Handle
  nameWithType: X509Certificate.Handle
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Import*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Import
  nameWithType: X509Certificate.Import
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Issuer*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Issuer
  nameWithType: X509Certificate.Issuer
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Reset*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Reset
  nameWithType: X509Certificate.Reset
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Subject*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Subject
  nameWithType: X509Certificate.Subject
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: System.Runtime.Serialization.IDeserializationCallback.OnDeserialization
  nameWithType: X509Certificate.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.System#Runtime#Serialization#ISerializable#GetObjectData*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData
  nameWithType: X509Certificate.System.Runtime.Serialization.ISerializable.GetObjectData
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.ToString*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: ToString
  nameWithType: X509Certificate.ToString
