### YamlMime:ManagedReference
items:
- uid: System.Configuration.ConfigurationLockCollection
  id: ConfigurationLockCollection
  children:
  - System.Configuration.ConfigurationLockCollection.Add(System.String)
  - System.Configuration.ConfigurationLockCollection.AttributeList
  - System.Configuration.ConfigurationLockCollection.Clear
  - System.Configuration.ConfigurationLockCollection.Contains(System.String)
  - System.Configuration.ConfigurationLockCollection.CopyTo(System.String[],System.Int32)
  - System.Configuration.ConfigurationLockCollection.Count
  - System.Configuration.ConfigurationLockCollection.GetEnumerator
  - System.Configuration.ConfigurationLockCollection.HasParentElements
  - System.Configuration.ConfigurationLockCollection.IsModified
  - System.Configuration.ConfigurationLockCollection.IsReadOnly(System.String)
  - System.Configuration.ConfigurationLockCollection.IsSynchronized
  - System.Configuration.ConfigurationLockCollection.Remove(System.String)
  - System.Configuration.ConfigurationLockCollection.SetFromList(System.String)
  - System.Configuration.ConfigurationLockCollection.SyncRoot
  - System.Configuration.ConfigurationLockCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  langs:
  - csharp
  name: ConfigurationLockCollection
  nameWithType: ConfigurationLockCollection
  fullName: System.Configuration.ConfigurationLockCollection
  type: Class
  summary: "잠긴된 구성 개체의 컬렉션을 포함 합니다. 이 클래스는 상속 될 수 없습니다."
  remarks: "구성 파일에서 구성 섹션에는 특성 및 요소를 모두 포함 되어 있습니다. 구성 섹션의 잠긴된 특성에 대 한 고 <xref:System.Configuration.ConfigurationElement.LockAttributes%2A> <xref:System.Configuration.ConfigurationElement>클래스</xref:System.Configuration.ConfigurationElement> 의 속성</xref:System.Configuration.ConfigurationElement.LockAttributes%2A> 을 통해 액세스 ConfigurationLockCollection 컬렉션 다른 ConfigurationLockCollection 컬렉션은 구성 섹션의 잠긴된 요소에 대 한 한 <xref:System.Configuration.ConfigurationElement.LockElements%2A> <xref:System.Configuration.ConfigurationElement>클래스</xref:System.Configuration.ConfigurationElement> 의 속성</xref:System.Configuration.ConfigurationElement.LockElements%2A> 을 통해 액세스"
  example:
  - "The following code example demonstrates how to use the ConfigurationLockCollection type.  \n  \n [!code-vb[System.Configuration.ConfigurationLockCollection#1](~/add/codesnippet/visualbasic/t-system.configuration.c_5_1.vb)]\n [!code-cs[System.Configuration.ConfigurationLockCollection#1](~/add/codesnippet/csharp/t-system.configuration.c_5_1.cs)]"
  syntax:
    content: 'public sealed class ConfigurationLockCollection : System.Collections.ICollection'
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  inheritedMembers: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationLockCollection.Add(System.String)
  id: Add(System.String)
  parent: System.Configuration.ConfigurationLockCollection
  langs:
  - csharp
  name: Add(String)
  nameWithType: ConfigurationLockCollection.Add(String)
  fullName: System.Configuration.ConfigurationLockCollection.Add(String)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "컬렉션에 추가 하 여 구성 개체를 잠급니다."
  remarks: "구성 개체를 추가 <xref:System.Configuration.ConfigurationLockCollection>컬렉션 지정 구성 개체는 잠겨 있으며 컬렉션에서 제거할 때까지를 수정할 수 없습니다.</xref:System.Configuration.ConfigurationLockCollection>"
  example:
  - "The following code example demonstrates how to use the Add method. This code example is part of a larger example provided for the <xref:System.Configuration.ConfigurationLockCollection> class.  \n  \n [!code-vb[System.Configuration.ConfigurationLockCollection#3](~/add/codesnippet/visualbasic/m-system.configuration.c_1_1.vb)]\n [!code-cs[System.Configuration.ConfigurationLockCollection#3](~/add/codesnippet/csharp/m-system.configuration.c_1_1.cs)]"
  syntax:
    content: public void Add (string name);
    parameters:
    - id: name
      type: System.String
      description: "구성 개체의 이름입니다."
  overload: System.Configuration.ConfigurationLockCollection.Add*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "발생 경우는 <code> name </code> 컬렉션 내에서 기존 구성 개체와 일치 하지 않습니다."
  platform:
  - net462
- uid: System.Configuration.ConfigurationLockCollection.AttributeList
  id: AttributeList
  parent: System.Configuration.ConfigurationLockCollection
  langs:
  - csharp
  name: AttributeList
  nameWithType: ConfigurationLockCollection.AttributeList
  fullName: System.Configuration.ConfigurationLockCollection.AttributeList
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "컬렉션에 포함 된 구성 개체의 목록을 가져옵니다."
  remarks: ''
  example:
  - "The following code example demonstrates how to use the AttributeList property. This code example is part of a larger example provided for the <xref:System.Configuration.ConfigurationLockCollection> class.  \n  \n [!code-vb[System.Configuration.ConfigurationLockCollection#5](~/add/codesnippet/visualbasic/p-system.configuration.c_16_1.vb)]\n [!code-cs[System.Configuration.ConfigurationLockCollection#5](~/add/codesnippet/csharp/p-system.configuration.c_16_1.cs)]"
  syntax:
    content: public string AttributeList { get; }
    return:
      type: System.String
      description: "컬렉션에 있는 잠금 구성 개체를 나열 하는 쉼표로 구분 된 문자열입니다."
  overload: System.Configuration.ConfigurationLockCollection.AttributeList*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationLockCollection.Clear
  id: Clear
  parent: System.Configuration.ConfigurationLockCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: ConfigurationLockCollection.Clear()
  fullName: System.Configuration.ConfigurationLockCollection.Clear()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "컬렉션에서 모든 구성 개체를 지웁니다."
  remarks: ''
  example:
  - "The following code example demonstrates how to use the Clear method. This code example is part of a larger example provided for the <xref:System.Configuration.ConfigurationLockCollection> class.  \n  \n [!code-vb[System.Configuration.ConfigurationLockCollection#11](~/add/codesnippet/visualbasic/m-system.configuration.c_39_1.vb)]\n [!code-cs[System.Configuration.ConfigurationLockCollection#11](~/add/codesnippet/csharp/m-system.configuration.c_39_1.cs)]"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Configuration.ConfigurationLockCollection.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationLockCollection.Contains(System.String)
  id: Contains(System.String)
  parent: System.Configuration.ConfigurationLockCollection
  langs:
  - csharp
  name: Contains(String)
  nameWithType: ConfigurationLockCollection.Contains(String)
  fullName: System.Configuration.ConfigurationLockCollection.Contains(String)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "특정 구성 개체가 잠겨 있는지 여부를 확인 합니다."
  syntax:
    content: public bool Contains (string name);
    parameters:
    - id: name
      type: System.String
      description: "확인할 구성 개체의 이름입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우는 <xref href=&quot;System.Configuration.ConfigurationLockCollection&quot;> </xref> 지정 된 구성 개체를 포함 합니다. 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Configuration.ConfigurationLockCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationLockCollection.CopyTo(System.String[],System.Int32)
  id: CopyTo(System.String[],System.Int32)
  parent: System.Configuration.ConfigurationLockCollection
  langs:
  - csharp
  name: CopyTo(String[],Int32)
  nameWithType: ConfigurationLockCollection.CopyTo(String[],Int32)
  fullName: System.Configuration.ConfigurationLockCollection.CopyTo(String[],Int32)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "전체 복사 <xref href=&quot;System.Configuration.ConfigurationLockCollection&quot;> </xref> 컬렉션을 호환 되는&1; 차원 <xref:System.Array>대상 배열의 지정된 된 인덱스부터 시작 합니다.</xref:System.Array>"
  syntax:
    content: public void CopyTo (string[] array, int index);
    parameters:
    - id: array
      type: System.String[]
      description: "1 차원 <xref:System.Array>에서 복사한 요소의 대상인은 <xref href=&quot;System.Configuration.ConfigurationLockCollection&quot;> </xref>.</xref:System.Array> <xref:System.Array>0부터 시작 하는 인덱스가 있어야 합니다.</xref:System.Array>"
    - id: index
      type: System.Int32
      description: "인덱스는&0;부터 시작 `array` 복사가 시작 되는 합니다."
  overload: System.Configuration.ConfigurationLockCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationLockCollection.Count
  id: Count
  parent: System.Configuration.ConfigurationLockCollection
  langs:
  - csharp
  name: Count
  nameWithType: ConfigurationLockCollection.Count
  fullName: System.Configuration.ConfigurationLockCollection.Count
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "컬렉션에 포함 하는 잠긴된 구성 개체의 수를 가져옵니다."
  remarks: ''
  example:
  - "The following code example demonstrates how to use the Count property. This code example is part of a larger example provided for the <xref:System.Configuration.ConfigurationLockCollection> class.  \n  \n [!code-vb[System.Configuration.ConfigurationLockCollection#4](~/add/codesnippet/visualbasic/p-system.configuration.c_12_1.vb)]\n [!code-cs[System.Configuration.ConfigurationLockCollection#4](~/add/codesnippet/csharp/p-system.configuration.c_12_1.cs)]"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "컬렉션에 포함 하는 잠긴된 구성 개체의 수입니다."
  overload: System.Configuration.ConfigurationLockCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationLockCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Configuration.ConfigurationLockCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: ConfigurationLockCollection.GetEnumerator()
  fullName: System.Configuration.ConfigurationLockCollection.GetEnumerator()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "가져옵니다는 <xref:System.Collections.IEnumerator>이 통해 반복 하는 데 사용 되는 개체 <xref href=&quot;System.Configuration.ConfigurationLockCollection&quot;> </xref> 컬렉션.</xref:System.Collections.IEnumerator>"
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "<xref:System.Collections.IEnumerator>개체입니다.</xref:System.Collections.IEnumerator>"
  overload: System.Configuration.ConfigurationLockCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationLockCollection.HasParentElements
  id: HasParentElements
  parent: System.Configuration.ConfigurationLockCollection
  langs:
  - csharp
  name: HasParentElements
  nameWithType: ConfigurationLockCollection.HasParentElements
  fullName: System.Configuration.ConfigurationLockCollection.HasParentElements
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "잠긴된 개체의 컬렉션을 부모 요소에 있는지 여부를 지정 하는 값을 가져옵니다."
  remarks: ''
  example:
  - "The following code example demonstrates how to use the HasParentElements property. This code example is part of a larger example provided for the <xref:System.Configuration.ConfigurationLockCollection> class.  \n  \n [!code-vb[System.Configuration.ConfigurationLockCollection#7](~/add/codesnippet/visualbasic/p-system.configuration.c_28_1.vb)]\n [!code-cs[System.Configuration.ConfigurationLockCollection#7](~/add/codesnippet/csharp/p-system.configuration.c_28_1.cs)]"
  syntax:
    content: public bool HasParentElements { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우는 <xref href=&quot;System.Configuration.ConfigurationLockCollection&quot;> </xref> 컬렉션의 부모 요소, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Configuration.ConfigurationLockCollection.HasParentElements*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationLockCollection.IsModified
  id: IsModified
  parent: System.Configuration.ConfigurationLockCollection
  langs:
  - csharp
  name: IsModified
  nameWithType: ConfigurationLockCollection.IsModified
  fullName: System.Configuration.ConfigurationLockCollection.IsModified
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "컬렉션 수정 되었는지 여부를 지정 하는 값을 가져옵니다."
  remarks: ''
  example:
  - "The following code example demonstrates how to use the IsModified property. This code example is part of a larger example provided for the <xref:System.Configuration.ConfigurationLockCollection> class.  \n  \n [!code-vb[System.Configuration.ConfigurationLockCollection#8](~/add/codesnippet/visualbasic/p-system.configuration.c_10_1.vb)]\n [!code-cs[System.Configuration.ConfigurationLockCollection#8](~/add/codesnippet/csharp/p-system.configuration.c_10_1.cs)]"
  syntax:
    content: public bool IsModified { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우는 <xref href=&quot;System.Configuration.ConfigurationLockCollection&quot;> </xref> 컬렉션에 수정 되지 않았으면, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Configuration.ConfigurationLockCollection.IsModified*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationLockCollection.IsReadOnly(System.String)
  id: IsReadOnly(System.String)
  parent: System.Configuration.ConfigurationLockCollection
  langs:
  - csharp
  name: IsReadOnly(String)
  nameWithType: ConfigurationLockCollection.IsReadOnly(String)
  fullName: System.Configuration.ConfigurationLockCollection.IsReadOnly(String)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "특정 구성 개체가 읽기 전용인 지 여부를 확인 합니다."
  remarks: ''
  example:
  - "The following code example demonstrates how to use the IsReadOnly method. This code example is part of a larger example provided for the <xref:System.Configuration.ConfigurationLockCollection> class.  \n  \n [!code-vb[System.Configuration.ConfigurationLockCollection#9](~/add/codesnippet/visualbasic/m-system.configuration.c_8_1.vb)]\n [!code-cs[System.Configuration.ConfigurationLockCollection#9](~/add/codesnippet/csharp/m-system.configuration.c_8_1.cs)]"
  syntax:
    content: public bool IsReadOnly (string name);
    parameters:
    - id: name
      type: System.String
      description: "확인할 구성 개체의 이름입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>지정 된 구성 개체의 경우는 <xref href=&quot;System.Configuration.ConfigurationLockCollection&quot;> </xref> 컬렉션은 읽기 전용이 아니면, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Configuration.ConfigurationLockCollection.IsReadOnly*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "지정 된 구성 개체를 컬렉션에 없습니다."
  platform:
  - net462
- uid: System.Configuration.ConfigurationLockCollection.IsSynchronized
  id: IsSynchronized
  parent: System.Configuration.ConfigurationLockCollection
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: ConfigurationLockCollection.IsSynchronized
  fullName: System.Configuration.ConfigurationLockCollection.IsSynchronized
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "컬렉션이 동기화 되었는지 여부를 지정 하는 값을 가져옵니다."
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우는 <xref href=&quot;System.Configuration.ConfigurationLockCollection&quot;> </xref> 컬렉션이 고, 그렇지 않으면 동기화 된 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Configuration.ConfigurationLockCollection.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationLockCollection.Remove(System.String)
  id: Remove(System.String)
  parent: System.Configuration.ConfigurationLockCollection
  langs:
  - csharp
  name: Remove(String)
  nameWithType: ConfigurationLockCollection.Remove(String)
  fullName: System.Configuration.ConfigurationLockCollection.Remove(String)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "구성 개체를 컬렉션에서 제거합니다."
  remarks: ''
  example:
  - "The following code example demonstrates how to use the Remove method. This code example is part of a larger example provided for the <xref:System.Configuration.ConfigurationLockCollection> class.  \n  \n [!code-vb[System.Configuration.ConfigurationLockCollection#10](~/add/codesnippet/visualbasic/m-system.configuration.c_11_1.vb)]\n [!code-cs[System.Configuration.ConfigurationLockCollection#10](~/add/codesnippet/csharp/m-system.configuration.c_11_1.cs)]"
  syntax:
    content: public void Remove (string name);
    parameters:
    - id: name
      type: System.String
      description: "구성 개체의 이름입니다."
  overload: System.Configuration.ConfigurationLockCollection.Remove*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "발생 경우는 <code> name </code> 컬렉션 내에서 기존 구성 개체와 일치 하지 않습니다."
  platform:
  - net462
- uid: System.Configuration.ConfigurationLockCollection.SetFromList(System.String)
  id: SetFromList(System.String)
  parent: System.Configuration.ConfigurationLockCollection
  langs:
  - csharp
  name: SetFromList(String)
  nameWithType: ConfigurationLockCollection.SetFromList(String)
  fullName: System.Configuration.ConfigurationLockCollection.SetFromList(String)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "제공 된 목록을 기반으로 하는 구성 개체의 집합을 잠급니다."
  remarks: ''
  example:
  - "The following code example demonstrates how to use the SetFromList method. This code example is part of a larger example provided for the <xref:System.Configuration.ConfigurationLockCollection> class.  \n  \n [!code-vb[System.Configuration.ConfigurationLockCollection#12](~/add/codesnippet/visualbasic/m-system.configuration.c_4_1.vb)]\n [!code-cs[System.Configuration.ConfigurationLockCollection#12](~/add/codesnippet/csharp/m-system.configuration.c_4_1.cs)]"
  syntax:
    content: public void SetFromList (string attributeList);
    parameters:
    - id: attributeList
      type: System.String
      description: "쉼표로 구분 된 문자열입니다."
  overload: System.Configuration.ConfigurationLockCollection.SetFromList*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "에 항목이 <code> attributeList </code> 매개 변수는 잠글 수 있는 올바른 구성 특성이 아닙니다."
  platform:
  - net462
- uid: System.Configuration.ConfigurationLockCollection.SyncRoot
  id: SyncRoot
  parent: System.Configuration.ConfigurationLockCollection
  langs:
  - csharp
  name: SyncRoot
  nameWithType: ConfigurationLockCollection.SyncRoot
  fullName: System.Configuration.ConfigurationLockCollection.SyncRoot
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "이에 대 한 액세스를 동기화 하는 데 사용 되는 개체를 가져옵니다 <xref href=&quot;System.Configuration.ConfigurationLockCollection&quot;> </xref> 컬렉션입니다."
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "이에 대 한 액세스를 동기화 하는 데 개체 <xref href=&quot;System.Configuration.ConfigurationLockCollection&quot;> </xref> 컬렉션입니다."
  overload: System.Configuration.ConfigurationLockCollection.SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationLockCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: System.Configuration.ConfigurationLockCollection
  langs:
  - csharp
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: ConfigurationLockCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Configuration.ConfigurationLockCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "전체 복사 <xref href=&quot;System.Configuration.ConfigurationLockCollection&quot;> </xref> 컬렉션을 호환 되는&1; 차원 <xref:System.Array>대상 배열의 지정된 된 인덱스부터 시작 합니다.</xref:System.Array>"
  syntax:
    content: void ICollection.CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "1 차원 <xref:System.Array>에서 복사한 요소의 대상인은 <xref href=&quot;System.Configuration.ConfigurationLockCollection&quot;> </xref> 컬렉션.</xref:System.Array> <xref:System.Array>0부터 시작 하는 인덱스가 있어야 합니다.</xref:System.Array>"
    - id: index
      type: System.Int32
      description: "인덱스는&0;부터 시작 `array` 복사가 시작 되는 합니다."
  overload: System.Configuration.ConfigurationLockCollection.System#Collections#ICollection#CopyTo*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Configuration.ConfigurationErrorsException
  parent: System.Configuration
  isExternal: false
  name: ConfigurationErrorsException
  nameWithType: ConfigurationErrorsException
  fullName: System.Configuration.ConfigurationErrorsException
- uid: System.Configuration.ConfigurationLockCollection.Add(System.String)
  parent: System.Configuration.ConfigurationLockCollection
  isExternal: false
  name: Add(String)
  nameWithType: ConfigurationLockCollection.Add(String)
  fullName: System.Configuration.ConfigurationLockCollection.Add(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Configuration.ConfigurationLockCollection.AttributeList
  parent: System.Configuration.ConfigurationLockCollection
  isExternal: false
  name: AttributeList
  nameWithType: ConfigurationLockCollection.AttributeList
  fullName: System.Configuration.ConfigurationLockCollection.AttributeList
- uid: System.Configuration.ConfigurationLockCollection.Clear
  parent: System.Configuration.ConfigurationLockCollection
  isExternal: false
  name: Clear()
  nameWithType: ConfigurationLockCollection.Clear()
  fullName: System.Configuration.ConfigurationLockCollection.Clear()
- uid: System.Configuration.ConfigurationLockCollection.Contains(System.String)
  parent: System.Configuration.ConfigurationLockCollection
  isExternal: false
  name: Contains(String)
  nameWithType: ConfigurationLockCollection.Contains(String)
  fullName: System.Configuration.ConfigurationLockCollection.Contains(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Configuration.ConfigurationLockCollection.CopyTo(System.String[],System.Int32)
  parent: System.Configuration.ConfigurationLockCollection
  isExternal: false
  name: CopyTo(String[],Int32)
  nameWithType: ConfigurationLockCollection.CopyTo(String[],Int32)
  fullName: System.Configuration.ConfigurationLockCollection.CopyTo(String[],Int32)
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Configuration.ConfigurationLockCollection.Count
  parent: System.Configuration.ConfigurationLockCollection
  isExternal: false
  name: Count
  nameWithType: ConfigurationLockCollection.Count
  fullName: System.Configuration.ConfigurationLockCollection.Count
- uid: System.Configuration.ConfigurationLockCollection.GetEnumerator
  parent: System.Configuration.ConfigurationLockCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: ConfigurationLockCollection.GetEnumerator()
  fullName: System.Configuration.ConfigurationLockCollection.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Configuration.ConfigurationLockCollection.HasParentElements
  parent: System.Configuration.ConfigurationLockCollection
  isExternal: false
  name: HasParentElements
  nameWithType: ConfigurationLockCollection.HasParentElements
  fullName: System.Configuration.ConfigurationLockCollection.HasParentElements
- uid: System.Configuration.ConfigurationLockCollection.IsModified
  parent: System.Configuration.ConfigurationLockCollection
  isExternal: false
  name: IsModified
  nameWithType: ConfigurationLockCollection.IsModified
  fullName: System.Configuration.ConfigurationLockCollection.IsModified
- uid: System.Configuration.ConfigurationLockCollection.IsReadOnly(System.String)
  parent: System.Configuration.ConfigurationLockCollection
  isExternal: false
  name: IsReadOnly(String)
  nameWithType: ConfigurationLockCollection.IsReadOnly(String)
  fullName: System.Configuration.ConfigurationLockCollection.IsReadOnly(String)
- uid: System.Configuration.ConfigurationLockCollection.IsSynchronized
  parent: System.Configuration.ConfigurationLockCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: ConfigurationLockCollection.IsSynchronized
  fullName: System.Configuration.ConfigurationLockCollection.IsSynchronized
- uid: System.Configuration.ConfigurationLockCollection.Remove(System.String)
  parent: System.Configuration.ConfigurationLockCollection
  isExternal: false
  name: Remove(String)
  nameWithType: ConfigurationLockCollection.Remove(String)
  fullName: System.Configuration.ConfigurationLockCollection.Remove(String)
- uid: System.Configuration.ConfigurationLockCollection.SetFromList(System.String)
  parent: System.Configuration.ConfigurationLockCollection
  isExternal: false
  name: SetFromList(String)
  nameWithType: ConfigurationLockCollection.SetFromList(String)
  fullName: System.Configuration.ConfigurationLockCollection.SetFromList(String)
- uid: System.Configuration.ConfigurationLockCollection.SyncRoot
  parent: System.Configuration.ConfigurationLockCollection
  isExternal: false
  name: SyncRoot
  nameWithType: ConfigurationLockCollection.SyncRoot
  fullName: System.Configuration.ConfigurationLockCollection.SyncRoot
- uid: System.Configuration.ConfigurationLockCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Configuration.ConfigurationLockCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: ConfigurationLockCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Configuration.ConfigurationLockCollection.System.Collections.ICollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Configuration.ConfigurationLockCollection.Add*
  parent: System.Configuration.ConfigurationLockCollection
  isExternal: false
  name: Add
  nameWithType: ConfigurationLockCollection.Add
- uid: System.Configuration.ConfigurationLockCollection.AttributeList*
  parent: System.Configuration.ConfigurationLockCollection
  isExternal: false
  name: AttributeList
  nameWithType: ConfigurationLockCollection.AttributeList
- uid: System.Configuration.ConfigurationLockCollection.Clear*
  parent: System.Configuration.ConfigurationLockCollection
  isExternal: false
  name: Clear
  nameWithType: ConfigurationLockCollection.Clear
- uid: System.Configuration.ConfigurationLockCollection.Contains*
  parent: System.Configuration.ConfigurationLockCollection
  isExternal: false
  name: Contains
  nameWithType: ConfigurationLockCollection.Contains
- uid: System.Configuration.ConfigurationLockCollection.CopyTo*
  parent: System.Configuration.ConfigurationLockCollection
  isExternal: false
  name: CopyTo
  nameWithType: ConfigurationLockCollection.CopyTo
- uid: System.Configuration.ConfigurationLockCollection.Count*
  parent: System.Configuration.ConfigurationLockCollection
  isExternal: false
  name: Count
  nameWithType: ConfigurationLockCollection.Count
- uid: System.Configuration.ConfigurationLockCollection.GetEnumerator*
  parent: System.Configuration.ConfigurationLockCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: ConfigurationLockCollection.GetEnumerator
- uid: System.Configuration.ConfigurationLockCollection.HasParentElements*
  parent: System.Configuration.ConfigurationLockCollection
  isExternal: false
  name: HasParentElements
  nameWithType: ConfigurationLockCollection.HasParentElements
- uid: System.Configuration.ConfigurationLockCollection.IsModified*
  parent: System.Configuration.ConfigurationLockCollection
  isExternal: false
  name: IsModified
  nameWithType: ConfigurationLockCollection.IsModified
- uid: System.Configuration.ConfigurationLockCollection.IsReadOnly*
  parent: System.Configuration.ConfigurationLockCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: ConfigurationLockCollection.IsReadOnly
- uid: System.Configuration.ConfigurationLockCollection.IsSynchronized*
  parent: System.Configuration.ConfigurationLockCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: ConfigurationLockCollection.IsSynchronized
- uid: System.Configuration.ConfigurationLockCollection.Remove*
  parent: System.Configuration.ConfigurationLockCollection
  isExternal: false
  name: Remove
  nameWithType: ConfigurationLockCollection.Remove
- uid: System.Configuration.ConfigurationLockCollection.SetFromList*
  parent: System.Configuration.ConfigurationLockCollection
  isExternal: false
  name: SetFromList
  nameWithType: ConfigurationLockCollection.SetFromList
- uid: System.Configuration.ConfigurationLockCollection.SyncRoot*
  parent: System.Configuration.ConfigurationLockCollection
  isExternal: false
  name: SyncRoot
  nameWithType: ConfigurationLockCollection.SyncRoot
- uid: System.Configuration.ConfigurationLockCollection.System#Collections#ICollection#CopyTo*
  parent: System.Configuration.ConfigurationLockCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo
  nameWithType: ConfigurationLockCollection.System.Collections.ICollection.CopyTo
