### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute
  id: ClaimsPrincipalPermissionAttribute
  children:
  - System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)
  - System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.CreatePermission
  - System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.Operation
  - System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.Resource
  langs:
  - csharp
  name: ClaimsPrincipalPermissionAttribute
  nameWithType: ClaimsPrincipalPermissionAttribute
  fullName: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute
  type: Class
  summary: "제공 하는 논리를 기반으로 하는 액세스 검사를 선언적으로 할당 하는 데 사용 되는 보안 특성을 나타냅니다는 <xref href=&quot;System.Security.Claims.ClaimsAuthorizationManager&quot;> </xref> 현재 응용 프로그램 컨텍스트에서 인스턴스. 이 클래스는 상속 될 수 없습니다."
  remarks: "The ClaimsPrincipalPermissionAttribute is used to declaratively request an access check using the configured <xref:System.Security.Claims.ClaimsAuthorizationManager>.  \n  \n You must specify one of the <xref:System.Security.Permissions.SecurityAction> values, a `Resource` and an `Operation` in your ClaimsPrincipalPermissionAttribute declaration. The `Resource` and `Operation` properties specify the resource and action for which the current principal (<xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName>) must be authorized for execution to proceed. If the current principal is not authorized to perform the specified action (operation) on the specified resource, a <xref:System.Security.SecurityException> is thrown.  \n  \n> [!IMPORTANT]\n>  The ClaimsPrincipalPermissionAttribute class uses the claims authorization manager configured by the <xref:System.IdentityModel.Configuration.IdentityConfiguration> that is set under the <xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfiguration%2A?displayProperty=fullName> property. This is true in all cases, even in scenarios where WS-Federation is not used; for example, active (WCF) Web applications and Console applications. You can specify the claims authorization manager either in configuration or programmatically. To specify the claims authorization manager in a configuration file, set the [\\&lt;claimsAuthorizationManager\\&gt;](../Topic/%3CclaimsAuthorizationManager%3E.md) element under an [\\&lt;identityConfiguration\\&gt;](../Topic/%3CidentityConfiguration%3E.md) element and ensure that this identity configuration is referenced by the [\\&lt;federationConfiguration\\&gt;](../Topic/%3CfederationConfiguration%3E.md) element that is loaded by the runtime (for example, by setting the `identityConfigurationName` attribute). To set the claims authorization manager programmatically, provide a handler for the <xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfigurationCreated?displayProperty=fullName> event."
  example:
  - "The following example shows how to protect a method by decorating it with the ClaimsPrincipalPermissionAttribute attribute. The attribute will evaluate whether access should be granted to the current principal by leveraging the logic provided by the <xref:System.Security.Claims.ClaimsAuthorizationManager> instance in the application context. If the current principal is not authorized for the specified action on the specified resource, a <xref:System.Security.SecurityException> is thrown; otherwise, execution proceeds.  \n  \n [!code-cs[WifCppWithCam#4](~/add/codesnippet/csharp/wifcppwithcam/program.cs#4)]  \n  \n The following XML shows the minimum configuration required to use a custom claims authorization manager with the ClaimsPrincipalPermissionAttribute class. You must, at a minimum, declare both the `system.identityModel` and the `system.identityModel.services` sections in the `<configSection>` element and then specify your authorization manager in a [\\&lt;claimsAuthorizationManager\\&gt;](../Topic/%3CclaimsAuthorizationManager%3E.md) element under the default identity configuration. This will ensure that your authorization manager is referenced from the default federation configuration. Alternatively, you can specify the name of the identity configuration under which your authorization manager is specified in the `identityConfigurationName` attribute of the [\\&lt;federationConfiguration\\&gt;](../Topic/%3CfederationConfiguration%3E.md) element.  \n  \n```xml  \n<?xml version=\"1.0\" encoding=\"utf-8\" ?>  \n<configuration>  \n  <configSections>  \n    <!-- WIF configuration sections -->  \n    <section name=\"system.identityModel\" type=\"System.IdentityModel.Configuration.SystemIdentityModelSection, System.IdentityModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089\"/>  \n    <section name=\"system.identityModel.services\" type=\"System.IdentityModel.Services.Configuration.SystemIdentityModelServicesSection, System.IdentityModel.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089\"/>  \n  </configSections>  \n  \n  <startup>  \n    <supportedRuntime version=\"v4.0\" sku=\".NETFramework,Version=v4.5\" />  \n  </startup>  \n  \n  <system.identityModel>  \n    <identityConfiguration>  \n      <claimsAuthorizationManager type =\"MyClaimsAuthorizationManager.MyClaimsAuthorizationManager, MyClaimsAuthorizationManager\"/>  \n    </identityConfiguration>  \n  </system.identityModel>  \n  \n</configuration>  \n```"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Method | System.AttributeTargets.Property, AllowMultiple=true)]

      public sealed class ClaimsPrincipalPermissionAttribute : System.Security.Permissions.CodeAccessSecurityAttribute
  inheritance:
  - System.Attribute
  - System.Security.Permissions.SecurityAttribute
  - System.Security.Permissions.CodeAccessSecurityAttribute
  implements: []
  inheritedMembers:
  - System.Security.Permissions.SecurityAttribute.Action
  - System.Security.Permissions.SecurityAttribute.Unrestricted
  platform:
  - net462
- uid: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)
  id: '#ctor(System.Security.Permissions.SecurityAction)'
  parent: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute
  langs:
  - csharp
  name: ClaimsPrincipalPermissionAttribute(SecurityAction)
  nameWithType: ClaimsPrincipalPermissionAttribute.ClaimsPrincipalPermissionAttribute(SecurityAction)
  fullName: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.ClaimsPrincipalPermissionAttribute(SecurityAction)
  type: Constructor
  assemblies:
  - System.IdentityModel.Services
  namespace: System.IdentityModel.Services
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute&quot;> </xref> 클래스입니다."
  remarks: "도 지정 해야는 `Operation` 및 `Resource` 속성에 프로그램 <xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute>선언 또는 예외가 throw 됩니다는 <xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.CreatePermission%2A>권한을 만드는 데 메서드가 호출 됩니다.</xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.CreatePermission%2A> </xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute>"
  syntax:
    content: public ClaimsPrincipalPermissionAttribute (System.Security.Permissions.SecurityAction action);
    parameters:
    - id: action
      type: System.Security.Permissions.SecurityAction
      description: "선언적 보안을 사용 하는 경우 수행할 수 있는 보안 동작을 지정 하는 값 중 하나입니다."
  overload: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.CreatePermission
  id: CreatePermission
  parent: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute
  langs:
  - csharp
  name: CreatePermission()
  nameWithType: ClaimsPrincipalPermissionAttribute.CreatePermission()
  fullName: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.CreatePermission()
  type: Method
  assemblies:
  - System.IdentityModel.Services
  namespace: System.IdentityModel.Services
  summary: "새 인스턴스를 만듭니다는 <xref href=&quot;System.IdentityModel.Services.ClaimsPrincipalPermission&quot;> </xref> 현재 인스턴스를 기반으로 하는 클래스입니다."
  remarks: "<xref:System.IdentityModel.Services.ClaimsPrincipalPermission>개체의 값을 사용 하 여 만들어집니다는 <xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.Operation%2A>속성 및 <xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.Resource%2A>속성.</xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.Resource%2A> </xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.Operation%2A> </xref:System.IdentityModel.Services.ClaimsPrincipalPermission> 지정 해야 합니다는 `Operation` 및 `Resource` 속성에 프로그램 <xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute>선언 또는 예외가 throw 됩니다는 권한을 만드는 CreatePermission 메서드가 호출 되 면.</xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute>"
  syntax:
    content: public override System.Security.IPermission CreatePermission ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "A <xref href=&quot;System.IdentityModel.Services.ClaimsPrincipalPermission&quot;> </xref> 운영 및이 인스턴스와 연결 된 리소스입니다."
  overload: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.CreatePermission*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.Operation
  id: Operation
  parent: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute
  langs:
  - csharp
  name: Operation
  nameWithType: ClaimsPrincipalPermissionAttribute.Operation
  fullName: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.Operation
  type: Property
  assemblies:
  - System.IdentityModel.Services
  namespace: System.IdentityModel.Services
  summary: "지정된 된 리소스에 대 한 현재 보안 주체는 권한을 부여할 작업을 가져오거나 설정 합니다."
  remarks: "작업이 지정된 된 리소스에서 현재 보안 주체를 인증 하는 동작입니다. 설정 해야 합니다는 `Operation` 속성에 프로그램 <xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute>선언 또는 예외가 throw 됩니다는 <xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.CreatePermission%2A>메서드를 호출 하는 권한을 만들.</xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.CreatePermission%2A> </xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute>"
  syntax:
    content: public string Operation { get; set; }
    return:
      type: System.String
      description: "현재 보안 주체는 권한을 부여할 동작입니다."
  overload: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.Operation*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.Resource
  id: Resource
  parent: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute
  langs:
  - csharp
  name: Resource
  nameWithType: ClaimsPrincipalPermissionAttribute.Resource
  fullName: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.Resource
  type: Property
  assemblies:
  - System.IdentityModel.Services
  namespace: System.IdentityModel.Services
  summary: "에 지정된 된 작업 (작업)를 수행 하려면 주 서버를 허가 리소스를 가져오거나 설정 합니다."
  remarks: "에 현재 보안 주체가 지정 된 작업을 수행할 권한이 해야 하는 리소스입니다. 설정 해야 합니다는 `Resource` 속성에 프로그램 <xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute>선언 또는 예외가 throw 됩니다는 <xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.CreatePermission%2A>메서드를 호출 하는 권한을 만들.</xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.CreatePermission%2A> </xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute>"
  syntax:
    content: public string Resource { get; set; }
    return:
      type: System.String
      description: "현재 보안 주체를 인증 될 리소스입니다."
  overload: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.Resource*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Permissions.CodeAccessSecurityAttribute
  isExternal: false
  name: System.Security.Permissions.CodeAccessSecurityAttribute
- uid: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)
  parent: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute
  isExternal: false
  name: ClaimsPrincipalPermissionAttribute(SecurityAction)
  nameWithType: ClaimsPrincipalPermissionAttribute.ClaimsPrincipalPermissionAttribute(SecurityAction)
  fullName: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.ClaimsPrincipalPermissionAttribute(SecurityAction)
- uid: System.Security.Permissions.SecurityAction
  parent: System.Security.Permissions
  isExternal: false
  name: SecurityAction
  nameWithType: SecurityAction
  fullName: System.Security.Permissions.SecurityAction
- uid: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.CreatePermission
  parent: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute
  isExternal: false
  name: CreatePermission()
  nameWithType: ClaimsPrincipalPermissionAttribute.CreatePermission()
  fullName: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.CreatePermission()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.Operation
  parent: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute
  isExternal: false
  name: Operation
  nameWithType: ClaimsPrincipalPermissionAttribute.Operation
  fullName: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.Operation
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.Resource
  parent: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute
  isExternal: false
  name: Resource
  nameWithType: ClaimsPrincipalPermissionAttribute.Resource
  fullName: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.Resource
- uid: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.#ctor*
  parent: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute
  isExternal: false
  name: ClaimsPrincipalPermissionAttribute
  nameWithType: ClaimsPrincipalPermissionAttribute.ClaimsPrincipalPermissionAttribute
- uid: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.CreatePermission*
  parent: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute
  isExternal: false
  name: CreatePermission
  nameWithType: ClaimsPrincipalPermissionAttribute.CreatePermission
- uid: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.Operation*
  parent: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute
  isExternal: false
  name: Operation
  nameWithType: ClaimsPrincipalPermissionAttribute.Operation
- uid: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.Resource*
  parent: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute
  isExternal: false
  name: Resource
  nameWithType: ClaimsPrincipalPermissionAttribute.Resource
