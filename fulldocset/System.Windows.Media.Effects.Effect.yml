### YamlMime:ManagedReference
items:
- uid: System.Windows.Media.Effects.Effect
  id: Effect
  children:
  - System.Windows.Media.Effects.Effect.#ctor
  - System.Windows.Media.Effects.Effect.Clone
  - System.Windows.Media.Effects.Effect.CloneCurrentValue
  - System.Windows.Media.Effects.Effect.EffectMapping
  - System.Windows.Media.Effects.Effect.ImplicitInput
  langs:
  - csharp
  name: Effect
  nameWithType: Effect
  fullName: System.Windows.Media.Effects.Effect
  type: Class
  summary: "사용자 지정 비트맵 효과 제공합니다."
  remarks: "사용자 지정 비트맵 효과 구현 하는 효과 클래스에서 파생 됩니다. 대부분의 경우에서 <xref:System.Windows.Media.Effects.ShaderEffect>.</xref:System.Windows.Media.Effects.ShaderEffect> 에서 파생 합니다."
  syntax:
    content: 'public abstract class Effect : System.Windows.Media.Animation.Animatable'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  - System.Windows.Freezable
  - System.Windows.Media.Animation.Animatable
  implements: []
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Freezable.CanFreeze
  - System.Windows.Freezable.Changed
  - System.Windows.Freezable.CloneCore(System.Windows.Freezable)
  - System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)
  - System.Windows.Freezable.CreateInstance
  - System.Windows.Freezable.CreateInstanceCore
  - System.Windows.Freezable.Freeze
  - System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)
  - System.Windows.Freezable.GetAsFrozen
  - System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Freezable.GetCurrentValueAsFrozen
  - System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Freezable.IsFrozen
  - System.Windows.Freezable.OnChanged
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)
  - System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.Freezable.ReadPreamble
  - System.Windows.Freezable.WritePostscript
  - System.Windows.Freezable.WritePreamble
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)
  - System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)
  - System.Windows.Media.Animation.Animatable.HasAnimatedProperties
  - System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Media.Effects.Effect.#ctor
  id: '#ctor'
  parent: System.Windows.Media.Effects.Effect
  langs:
  - csharp
  name: Effect()
  nameWithType: Effect.Effect()
  fullName: System.Windows.Media.Effects.Effect.Effect()
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Windows.Media.Effects.Effect&quot;> </xref> 클래스입니다."
  syntax:
    content: protected Effect ();
    parameters: []
  overload: System.Windows.Media.Effects.Effect.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.Effect.Clone
  id: Clone
  parent: System.Windows.Media.Effects.Effect
  langs:
  - csharp
  name: Clone()
  nameWithType: Effect.Clone()
  fullName: System.Windows.Media.Effects.Effect.Clone()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "수정 가능한 복제본을 만듭니다 <xref href=&quot;System.Windows.Media.Effects.Effect&quot;> </xref> 개체를이 개체 값의 전체 복사본입니다. 이 개체의 종속성 속성을 복사 하는 경우이 메서드는 리소스 참조와 데이터 바인딩이 없습니다 더 이상 확인 있는 하지만 애니메이션 말거나의 현재 값은 복사 합니다."
  remarks: "Clone 메서드를 사용 하 여의 수정 가능한 복사본을 만드는 수 고정 <xref:System.Windows.Freezable>개체입니다.</xref:System.Windows.Freezable> 편의 위해이 메서드는 상속 된 숨깁니다 <xref:System.Windows.Freezable.Clone%2A>메서드는 강력한 형식의 구현을 제공 합니다.</xref:System.Windows.Freezable.Clone%2A>"
  syntax:
    content: public System.Windows.Media.Effects.Effect Clone ();
    parameters: []
    return:
      type: System.Windows.Media.Effects.Effect
      description: "이 인스턴스의 수정 가능한 복제본입니다. 반환 되는 복제본은 사실상 현재 개체의 전체 복사본입니다. 복제본의 <xref:System.Windows.Freezable.IsFrozen*>속성은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Windows.Freezable.IsFrozen*>"
  overload: System.Windows.Media.Effects.Effect.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.Effect.CloneCurrentValue
  id: CloneCurrentValue
  parent: System.Windows.Media.Effects.Effect
  langs:
  - csharp
  name: CloneCurrentValue()
  nameWithType: Effect.CloneCurrentValue()
  fullName: System.Windows.Media.Effects.Effect.CloneCurrentValue()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "수정 가능한 복제본을 만듭니다 <xref href=&quot;System.Windows.Media.Effects.Effect&quot;> </xref> 개체를이 개체의 현재 값의 전체 복사본입니다. 리소스 참조, 데이터 바인딩 및 애니메이션은 복사 되지 않지만 이러한 요소의 현재 값은 복사 합니다."
  remarks: "수정 가능한 복사본을 생성 하기 위해이 메서드는 고정 된 <xref:System.Windows.Freezable>개체 (또는 모든 <xref:System.Windows.Freezable>개체).</xref:System.Windows.Freezable> </xref:System.Windows.Freezable> 편의 위해이 메서드는 강력한 형식의 구현이 포함 된 상속 된 버전을 숨깁니다.       자세한 내용은 <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>.</xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName> 을 참조 하십시오."
  syntax:
    content: public System.Windows.Media.Effects.Effect CloneCurrentValue ();
    parameters: []
    return:
      type: System.Windows.Media.Effects.Effect
      description: "현재 개체의 수정 가능한 복제본입니다. 복제 된 개체의 <> </> *> 속성은 됩니다 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 경우에 원본의 <> </> *> 속성은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Media.Effects.Effect.CloneCurrentValue*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.Effect.EffectMapping
  id: EffectMapping
  parent: System.Windows.Media.Effects.Effect
  langs:
  - csharp
  name: EffectMapping
  nameWithType: Effect.EffectMapping
  fullName: System.Windows.Media.Effects.Effect.EffectMapping
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "파생된 클래스에서 재정의 되 면 마우스 입력 및 효과 통해 좌표계를 변환 합니다."
  remarks: "기본 id 변환 다른 변환을 할당할 EffectMapping 속성을 재정의 합니다.       입력이이 변환의 역 변환을 통해 변환 됩니다. <xref:System.Windows.Media.Visual.TransformToAncestor%2A>및 <xref:System.Windows.Media.Visual.TransformToDescendant%2A>메서드에도 적용 된 EffectMapping 변환.</xref:System.Windows.Media.Visual.TransformToDescendant%2A> </xref:System.Windows.Media.Visual.TransformToAncestor%2A>       들어오는 지점 이어야 합니다 [0-1] 범위 및 보내는 점은에 매핑되어야 [0-1] 범위입니다. <xref:System.Windows.Media.GeneralTransform.Inverse%2A>속성 반환 해야 합니다는 <xref:System.Windows.Media.GeneralTransform>은 역 매핑을 계산 하는.</xref:System.Windows.Media.GeneralTransform> </xref:System.Windows.Media.GeneralTransform.Inverse%2A>       역 변환에서 제공 하는 지점을 효과 적용 한 후 지점을에서 매핑합니다 효과 하기 전에. 역이 아닌 효과 이전 시점에서 효과 적용 한 후에 적용 되는 지도 변환 합니다.       변환에 사용 되는 실제 픽셀 크기에 대 한 정보를 포함 되지 않습니다 기록한 단위 범위에서 작동 합니다."
  syntax:
    content: protected virtual System.Windows.Media.GeneralTransform EffectMapping { get; }
    return:
      type: System.Windows.Media.GeneralTransform
      description: "변환을 적용할 수 있습니다. 기본값은 id 변환 합니다."
  overload: System.Windows.Media.Effects.Effect.EffectMapping*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.Effect.ImplicitInput
  id: ImplicitInput
  parent: System.Windows.Media.Effects.Effect
  langs:
  - csharp
  name: ImplicitInput
  nameWithType: Effect.ImplicitInput
  fullName: System.Windows.Media.Effects.Effect.ImplicitInput
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "가져옵니다는 <xref href=&quot;System.Windows.Media.Brush&quot;> </xref> 는 대 한 입력으로 사용 하는 경우는 <xref href=&quot;System.Windows.Media.Effects.Effect&quot;> </xref>의 비트맵이 <xref href=&quot;System.Windows.UIElement&quot;> </xref> 하는 <xref href=&quot;System.Windows.Media.Effects.Effect&quot;> </xref> 해당 입력 수에 적용 됩니다."
  remarks: "<xref:System.Windows.Media.Effects.ShaderEffect>.</xref:System.Windows.Media.Effects.ShaderEffect> 브러시 값 입력 값으로 ImplicitInput 속성을 사용 하 여       ImplicitInput 속성의 렌더링에서 가져온 셰이더 입력을 나타냅니다는 <xref:System.Windows.UIElement>하는 <xref:System.Windows.Media.Effects.Effect>에 적용 됩니다.</xref:System.Windows.Media.Effects.Effect> </xref:System.Windows.UIElement>      > [!NOTE] > ImplicitInput 다른 WPF 클래스에는 브러시 속성으로 사용 될 경우에 동작이 정의 되지 않습니다."
  syntax:
    content: public static System.Windows.Media.Brush ImplicitInput { get; }
    return:
      type: System.Windows.Media.Brush
      description: "<xref href=&quot;System.Windows.Media.Brush&quot;> </xref> 하는 입력으로 사용 합니다."
  overload: System.Windows.Media.Effects.Effect.ImplicitInput*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Media.Animation.Animatable
  isExternal: false
  name: System.Windows.Media.Animation.Animatable
- uid: System.Windows.Media.Effects.Effect.#ctor
  parent: System.Windows.Media.Effects.Effect
  isExternal: false
  name: Effect()
  nameWithType: Effect.Effect()
  fullName: System.Windows.Media.Effects.Effect.Effect()
- uid: System.Windows.Media.Effects.Effect.Clone
  parent: System.Windows.Media.Effects.Effect
  isExternal: false
  name: Clone()
  nameWithType: Effect.Clone()
  fullName: System.Windows.Media.Effects.Effect.Clone()
- uid: System.Windows.Media.Effects.Effect
  parent: System.Windows.Media.Effects
  isExternal: false
  name: Effect
  nameWithType: Effect
  fullName: System.Windows.Media.Effects.Effect
- uid: System.Windows.Media.Effects.Effect.CloneCurrentValue
  parent: System.Windows.Media.Effects.Effect
  isExternal: false
  name: CloneCurrentValue()
  nameWithType: Effect.CloneCurrentValue()
  fullName: System.Windows.Media.Effects.Effect.CloneCurrentValue()
- uid: System.Windows.Media.Effects.Effect.EffectMapping
  parent: System.Windows.Media.Effects.Effect
  isExternal: false
  name: EffectMapping
  nameWithType: Effect.EffectMapping
  fullName: System.Windows.Media.Effects.Effect.EffectMapping
- uid: System.Windows.Media.GeneralTransform
  parent: System.Windows.Media
  isExternal: false
  name: GeneralTransform
  nameWithType: GeneralTransform
  fullName: System.Windows.Media.GeneralTransform
- uid: System.Windows.Media.Effects.Effect.ImplicitInput
  parent: System.Windows.Media.Effects.Effect
  isExternal: false
  name: ImplicitInput
  nameWithType: Effect.ImplicitInput
  fullName: System.Windows.Media.Effects.Effect.ImplicitInput
- uid: System.Windows.Media.Brush
  parent: System.Windows.Media
  isExternal: false
  name: Brush
  nameWithType: Brush
  fullName: System.Windows.Media.Brush
- uid: System.Windows.Media.Effects.Effect.#ctor*
  parent: System.Windows.Media.Effects.Effect
  isExternal: false
  name: Effect
  nameWithType: Effect.Effect
- uid: System.Windows.Media.Effects.Effect.Clone*
  parent: System.Windows.Media.Effects.Effect
  isExternal: false
  name: Clone
  nameWithType: Effect.Clone
- uid: System.Windows.Media.Effects.Effect.CloneCurrentValue*
  parent: System.Windows.Media.Effects.Effect
  isExternal: false
  name: CloneCurrentValue
  nameWithType: Effect.CloneCurrentValue
- uid: System.Windows.Media.Effects.Effect.EffectMapping*
  parent: System.Windows.Media.Effects.Effect
  isExternal: false
  name: EffectMapping
  nameWithType: Effect.EffectMapping
- uid: System.Windows.Media.Effects.Effect.ImplicitInput*
  parent: System.Windows.Media.Effects.Effect
  isExternal: false
  name: ImplicitInput
  nameWithType: Effect.ImplicitInput
