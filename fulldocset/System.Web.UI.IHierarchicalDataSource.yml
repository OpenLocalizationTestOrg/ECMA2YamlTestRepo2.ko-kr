### YamlMime:ManagedReference
items:
- uid: System.Web.UI.IHierarchicalDataSource
  id: IHierarchicalDataSource
  children:
  - System.Web.UI.IHierarchicalDataSource.DataSourceChanged
  - System.Web.UI.IHierarchicalDataSource.GetHierarchicalView(System.String)
  langs:
  - csharp
  name: IHierarchicalDataSource
  nameWithType: IHierarchicalDataSource
  fullName: System.Web.UI.IHierarchicalDataSource
  type: Interface
  summary: "와 같은 계층적 데이터 소스는 계층적 데이터 바인딩된 컨트롤을 나타내는 <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> 바인딩할 수 있습니다."
  remarks: "ASP.NET은 데이터에 바인딩하고 일관성 있게에서 제공 하는 웹 서버 컨트롤 수 있도록 하는 컨트롤 데이터 바인딩 아키텍처를 지원 합니다. 데이터에 바인딩되는 웹 서버 컨트롤은 데이터 바인딩된 컨트롤을 이라고 하 고 해당 바인딩은 클래스 데이터 소스 컨트롤 이라고 합니다. 합니다. 데이터 소스 제어에서 모든 데이터 소스를 나타낼 수 있습니다: 파일, 스트림, 관계형 데이터베이스, 비즈니스 개체 및 등입니다. 데이터 원본 소스 나 기본 데이터의 형식에 관계 없이 데이터 바인딩된 컨트롤에 일관 된 방식으로의 데이터 표시를 제어합니다.       계층적 데이터를 나타내는 데이터 소스 컨트롤에서 파생 되는 <xref:System.Web.UI.HierarchicalDataSourceControl>클래스는 IHierarchicalDataSource 인터페이스의 기본 ASP.NET 구현입니다.</xref:System.Web.UI.HierarchicalDataSourceControl> IHierarchicalDataSource 인터페이스는 계층적 데이터를 노출 하는 데이터 소스 컨트롤을 정의 하는 데 사용 하지 않고 테이블 형식 또는 목록 스타일 데이터를 웹 서버 컨트롤에서 파생 되는 <xref:System.Web.UI.WebControls.HierarchicalDataBoundControl>클래스 같은 <xref:System.Web.UI.WebControls.TreeView>컨트롤.</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.HierarchicalDataBoundControl> 단일 메서드를 정의 하는 인터페이스 <xref:System.Web.UI.IHierarchicalDataSource.GetHierarchicalView%2A>를 검색 하는 강력한 형식의 <xref:System.Web.UI.HierarchicalDataSourceView>개체입니다.</xref:System.Web.UI.HierarchicalDataSourceView> </xref:System.Web.UI.IHierarchicalDataSource.GetHierarchicalView%2A> 이 인터페이스를 구현 하는 데이터 소스 컨트롤 이들이 나타내는 데이터의 각 계층 수준에 대 한 계층 뷰를 지원 합니다. 데이터 원본 뷰 이름이 지정 되지 않은, like <xref:System.Web.UI.DataSourceView>개체, 하지만 자신의 고유한 계층적 경로로 식별 됩니다는 `viewPath` 에 전달 된 매개 변수는 <xref:System.Web.UI.IHierarchicalDataSource.GetHierarchicalView%2A>메서드.</xref:System.Web.UI.IHierarchicalDataSource.GetHierarchicalView%2A> </xref:System.Web.UI.DataSourceView>       데이터 소스 제어 IHierarchicalDataSource 개체와 연결된 된 뷰의 기본 데이터의 조합으로 생각할 수 있습니다. 연결 된 각 <xref:System.Web.UI.HierarchicalDataSourceView>개체 표시, 계층 구조로 된 수준에 대 한 데이터 소스 컨트롤의 기능을 정의 하 고, 모든 개체와 마찬가지로 ASP.NET 데이터 원본 뷰, insert, update, delete 및 정렬 등의 작업을 수행 합니다.</xref:System.Web.UI.HierarchicalDataSourceView>       데이터 소스 <xref:System.Web.UI.WebControls.SiteMapDataSource> <xref:System.Web.UI.HierarchicalDataSourceControl>클래스</xref:System.Web.UI.HierarchicalDataSourceControl> 에서 파생 된,</xref:System.Web.UI.WebControls.SiteMapDataSource> 같은 계층적 데이터만 노출 하는 컨트롤 다른 데이터 소스와 같은 계층적 데이터와 테이블 형식 데이터를 모두로 데이터를 노출 하는 컨트롤 <xref:System.Web.UI.WebControls.XmlDataSource>에서 파생 된 <xref:System.Web.UI.HierarchicalDataSourceControl>하지만 구현에서 <xref:System.Web.UI.IDataSource>및 <xref:System.ComponentModel.IListSource>인터페이스.</xref:System.ComponentModel.IListSource> </xref:System.Web.UI.IDataSource> </xref:System.Web.UI.HierarchicalDataSourceControl> </xref:System.Web.UI.WebControls.XmlDataSource>"
  example:
  - "The following code example demonstrates how to extend the abstract <xref:System.Web.UI.HierarchicalDataSourceControl> class, which implements the IHierarchicalDataSource interface, to create a data source control that displays file system information. The `FileSystemDataSource` class provides an implementation of the <xref:System.Web.UI.IHierarchicalDataSource.GetHierarchicalView%2A> method, which retrieves a strongly typed view object for a specified file system path. This code example is part of a larger example provided for the <xref:System.Web.UI.HierarchicalDataSourceControl> class.  \n  \n [!code-cs[Urtue.Samples.Alexkr.FileSystemDataSource_1#1](~/add/codesnippet/csharp/t-system.web.ui.ihierarc_1_1.cs)]\n [!code-vb[Urtue.Samples.Alexkr.FileSystemDataSource_1#1](~/add/codesnippet/visualbasic/t-system.web.ui.ihierarc_1_1.vb)]"
  syntax:
    content: public interface IHierarchicalDataSource
  implements: []
  platform:
  - net462
- uid: System.Web.UI.IHierarchicalDataSource.DataSourceChanged
  id: DataSourceChanged
  parent: System.Web.UI.IHierarchicalDataSource
  langs:
  - csharp
  name: DataSourceChanged
  nameWithType: IHierarchicalDataSource.DataSourceChanged
  fullName: System.Web.UI.IHierarchicalDataSource.DataSourceChanged
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "발생 경우 데이터 저장소는는 <xref href=&quot;System.Web.UI.IHierarchicalDataSource&quot;> </xref> 인터페이스가 나타내는 변경 되었습니다."
  remarks: "변경 하는 등의 데이터 소스 컨트롤의 속성이 변경 될 때 DataSourceChanged 이벤트 발생는 <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A>속성의는 <xref:System.Web.UI.WebControls.XmlDataSource>수행한 편집 작업에서 XML 노드를 변경할 때 발생 하는 기본 데이터 저장소에서 데이터를 변경 또는 <xref:System.Web.UI.WebControls.XmlDataSource>컨트롤.</xref:System.Web.UI.WebControls.XmlDataSource> </xref:System.Web.UI.WebControls.XmlDataSource> </xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A>"
  syntax:
    content: public event EventHandler DataSourceChanged;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.IHierarchicalDataSource.GetHierarchicalView(System.String)
  id: GetHierarchicalView(System.String)
  parent: System.Web.UI.IHierarchicalDataSource
  langs:
  - csharp
  name: GetHierarchicalView(String)
  nameWithType: IHierarchicalDataSource.GetHierarchicalView(String)
  fullName: System.Web.UI.IHierarchicalDataSource.GetHierarchicalView(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "에 대 한 보기 도우미 개체를 가져옵니다는 <xref href=&quot;System.Web.UI.IHierarchicalDataSource&quot;> </xref> 지정된 된 경로 대 한 인터페이스입니다."
  remarks: "<xref:System.Web.UI.IHierarchicalDataSource>인터페이스, like는 <xref:System.Web.UI.IDataSource>인터페이스를 계층적 데이터 소스 컨트롤 사용 하 여 데이터 원본 뷰를 검색 하는 메서드를 정의 합니다.</xref:System.Web.UI.IDataSource> </xref:System.Web.UI.IHierarchicalDataSource> 모든 <xref:System.Web.UI.DataSourceView>데이터 소스 컨트롤과 연결 된 도우미 개체는 <xref:System.Web.UI.HierarchicalDataSourceView>개체 데이터 소스는 원본 데이터와 수행할 수 있는 작업을 정의 합니다.</xref:System.Web.UI.HierarchicalDataSourceView> </xref:System.Web.UI.DataSourceView> 그러나 일반적으로 테이블 형식 데이터를 나타내는 데이터 소스 컨트롤은 하나의 명명 된 뷰 비슷하더라도 계층적 데이터 소스 컨트롤 데이터 소스 컨트롤을 나타내는 계층적 데이터의 각 수준에 대 한 보기를 지원 합니다. 계층적 데이터의 수준을 변수로 전달 된 고유한 계층 경로으로 식별 되는 `viewPath` 매개 변수입니다."
  example:
  - "The following code example demonstrates how to override the GetHierarchicalView method in a class that extends the <xref:System.Web.UI.HierarchicalDataSourceControl> class to retrieve a strongly typed <xref:System.Web.UI.HierarchicalDataSourceView> object for a unique hierarchical path. The `FileSystemDataSource` class's implementation of GetHierarchicalView retrieves a `FileSystemDataSourceView` object for a specified file system path. This code example is part of a larger example provided for the <xref:System.Web.UI.HierarchicalDataSourceControl> class.  \n  \n [!code-cs[Urtue.Samples.Alexkr.FileSystemDataSource_1#1](~/add/codesnippet/csharp/m-system.web.ui.ihierarc_2_1.cs)]\n [!code-vb[Urtue.Samples.Alexkr.FileSystemDataSource_1#1](~/add/codesnippet/visualbasic/m-system.web.ui.ihierarc_2_1.vb)]"
  syntax:
    content: public System.Web.UI.HierarchicalDataSourceView GetHierarchicalView (string viewPath);
    parameters:
    - id: viewPath
      type: System.String
      description: "검색할 보기의 계층 경로입니다."
    return:
      type: System.Web.UI.HierarchicalDataSourceView
      description: "반환 된 <xref href=&quot;System.Web.UI.HierarchicalDataSourceView&quot;> </xref> 로 식별 되는 계층 구조 수준 데이터의 단일 뷰를 나타내는 <code> viewPath </code> 매개 변수입니다."
  overload: System.Web.UI.IHierarchicalDataSource.GetHierarchicalView*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.IHierarchicalDataSource.DataSourceChanged
  parent: System.Web.UI.IHierarchicalDataSource
  isExternal: false
  name: DataSourceChanged
  nameWithType: IHierarchicalDataSource.DataSourceChanged
  fullName: System.Web.UI.IHierarchicalDataSource.DataSourceChanged
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Web.UI.IHierarchicalDataSource.GetHierarchicalView(System.String)
  parent: System.Web.UI.IHierarchicalDataSource
  isExternal: false
  name: GetHierarchicalView(String)
  nameWithType: IHierarchicalDataSource.GetHierarchicalView(String)
  fullName: System.Web.UI.IHierarchicalDataSource.GetHierarchicalView(String)
- uid: System.Web.UI.HierarchicalDataSourceView
  parent: System.Web.UI
  isExternal: false
  name: HierarchicalDataSourceView
  nameWithType: HierarchicalDataSourceView
  fullName: System.Web.UI.HierarchicalDataSourceView
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.IHierarchicalDataSource.GetHierarchicalView*
  parent: System.Web.UI.IHierarchicalDataSource
  isExternal: false
  name: GetHierarchicalView
  nameWithType: IHierarchicalDataSource.GetHierarchicalView
