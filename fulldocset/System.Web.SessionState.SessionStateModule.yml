### YamlMime:ManagedReference
items:
- uid: System.Web.SessionState.SessionStateModule
  id: SessionStateModule
  children:
  - System.Web.SessionState.SessionStateModule.#ctor
  - System.Web.SessionState.SessionStateModule.Dispose
  - System.Web.SessionState.SessionStateModule.End
  - System.Web.SessionState.SessionStateModule.Init(System.Web.HttpApplication)
  - System.Web.SessionState.SessionStateModule.ReleaseSessionState(System.Web.HttpContext)
  - System.Web.SessionState.SessionStateModule.ReleaseSessionStateAsync(System.Web.HttpContext)
  - System.Web.SessionState.SessionStateModule.Start
  langs:
  - csharp
  name: SessionStateModule
  nameWithType: SessionStateModule
  fullName: System.Web.SessionState.SessionStateModule
  type: Class
  summary: "응용 프로그램에 대 한 세션 상태 서비스를 제공합니다. 이 클래스는 상속 될 수 없습니다."
  remarks: "SessionStateModule ASP입니다. NET의 기본 세션 상태 처리기입니다. 세션 데이터를 기록 하 고 세션 상태 저장소와 발생에서 검색 된 **Session_OnStart** 및 **Session_OnEnd** 이벤트입니다. ASP.NET 세션 상태를 사용 하 여 저장 하 고 사용자 세션에 대 한 값을 검색 하는 방법에 대 한 세부 정보를 참조 하십시오. [ASP.NET 세션 상태 개요](~/add/includes/ajax-current-ext-md.md)합니다.       사용자 지정 구현으로는 SessionStateModule를 바꿀 수는 <xref:System.Web.IHttpModule>세션 상태를 관리 하는 인터페이스입니다.</xref:System.Web.IHttpModule> 예를 보려면 사용자 지정 세션 상태 모듈 참조는 <xref:System.Web.SessionState.SessionStateUtility>클래스 개요.</xref:System.Web.SessionState.SessionStateUtility>"
  syntax:
    content: 'public sealed class SessionStateModule : System.Web.SessionState.ISessionStateModule'
  inheritance:
  - System.Object
  implements:
  - System.Web.SessionState.ISessionStateModule
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateModule.#ctor
  id: '#ctor'
  parent: System.Web.SessionState.SessionStateModule
  langs:
  - csharp
  name: SessionStateModule()
  nameWithType: SessionStateModule.SessionStateModule()
  fullName: System.Web.SessionState.SessionStateModule.SessionStateModule()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.SessionState.SessionStateModule&quot;> </xref> 클래스입니다."
  remarks: "이 생성자는 응용 프로그램 코드에서 호출할 수 없습니다.       <xref:System.Web.HttpApplication>개체는 ASP.NET 응용 프로그램이 시작 될 때 생성 됩니다.</xref:System.Web.HttpApplication> <xref:System.Web.HttpApplication>호출 개체는 <xref:System.Web.SessionState.SessionStateModule>를 만드는 생성자는 <xref:System.Web.SessionState.SessionStateModule>응용 프로그램에 대 한 개체입니다.</xref:System.Web.SessionState.SessionStateModule> </xref:System.Web.SessionState.SessionStateModule> </xref:System.Web.HttpApplication> <xref:System.Web.SessionState.SessionStateModule>응용 프로그램에 대 한 구성에 지정 되어 있습니다.</xref:System.Web.SessionState.SessionStateModule>"
  syntax:
    content: public SessionStateModule ();
    parameters: []
  overload: System.Web.SessionState.SessionStateModule.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateModule.Dispose
  id: Dispose
  parent: System.Web.SessionState.SessionStateModule
  langs:
  - csharp
  name: Dispose()
  nameWithType: SessionStateModule.Dispose()
  fullName: System.Web.SessionState.SessionStateModule.Dispose()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "하기 전에 최종 정리 코드 실행의 <xref href=&quot;System.Web.SessionState.SessionStateModule&quot;> </xref> 메모리에서 개체를 해제 합니다."
  remarks: "이 메서드는 응용 프로그램 코드에서 호출할 수 없습니다.       <xref:System.Web.HttpApplication>개체는 ASP.NET 응용 프로그램이 시작 될 때 생성 됩니다.</xref:System.Web.HttpApplication> <xref:System.Web.HttpApplication>개체를 만들고 초기화는 <xref:System.Web.SessionState.SessionStateModule>응용 프로그램에 대 한 개체는 개체가 해제 될 때 Dispose 메서드를 호출 하 고.</xref:System.Web.SessionState.SessionStateModule> </xref:System.Web.HttpApplication> <xref:System.Web.SessionState.SessionStateModule>응용 프로그램에 대 한 구성에 지정 되어 있습니다.</xref:System.Web.SessionState.SessionStateModule>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Web.SessionState.SessionStateModule.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateModule.End
  id: End
  parent: System.Web.SessionState.SessionStateModule
  langs:
  - csharp
  name: End
  nameWithType: SessionStateModule.End
  fullName: System.Web.SessionState.SessionStateModule.End
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "세션이 끝날 때 발생 합니다."
  remarks: "종료 이벤트는 요청이 끝날 때 발생 때는 <xref:System.Web.SessionState.HttpSessionState.Abandon%2A>메서드 호출 또는 경우 세션이 만료 되었습니다.</xref:System.Web.SessionState.HttpSessionState.Abandon%2A> 세션이 만료 시간 (분)에 의해 지정 되는 <xref:System.Web.SessionState.HttpSessionState.Timeout%2A>세션에 대해 수행 되는 요청 하지 않고 속성을 전달 합니다.</xref:System.Web.SessionState.HttpSessionState.Timeout%2A>       **Session_OnEnd** 이벤트 세션에서 사용 하는 리소스 해제와 같은 세션에 대 한 정리 작업을 수행 하는 데 사용 됩니다.       라는 공용 서브루틴을 추가 하 여 종료 이벤트에 대 한 처리기를 지정할 수 있습니다 **Session_OnEnd** Global.asax 파일에 있습니다.      > [!NOTE] >는 **Session_OnEnd** 이벤트는만 실행할 수는 세션 상태 <xref:System.Web.SessionState.HttpSessionState.Mode%2A?displayProperty=fullName>속성 값은 <xref:System.Web.SessionState.SessionStateMode>, 기본값.</xref:System.Web.SessionState.SessionStateMode> </xref:System.Web.SessionState.HttpSessionState.Mode%2A?displayProperty=fullName> 경우 세션 상태 <xref:System.Web.SessionState.HttpSessionState.Mode%2A>로 설정 되어 <xref:System.Web.SessionState.SessionStateMode>또는 <xref:System.Web.SessionState.SessionStateMode>, 하면 **Session_OnEnd** Global.asax 파일에이 이벤트는 무시 됩니다.</xref:System.Web.SessionState.SessionStateMode> </xref:System.Web.SessionState.SessionStateMode> </xref:System.Web.SessionState.HttpSessionState.Mode%2A> 경우 세션 상태 <xref:System.Web.SessionState.HttpSessionState.Mode%2A>속성 값은 <xref:System.Web.SessionState.SessionStateMode>, 다음에 대 한 지원의 **Session_OnEnd** 이벤트는 사용자 지정 세션 상태 저장소 공급자에 의해 결정 됩니다.</xref:System.Web.SessionState.SessionStateMode> </xref:System.Web.SessionState.HttpSessionState.Mode%2A>       종료 이벤트는 public, Global.asax 파일에 이벤트 처리기를 추가 하 여만 처리할 수 있습니다. 이러한 제한 때문에 구현 되어 <xref:System.Web.HttpApplication>인스턴스 성능에 다시 사용 됩니다.</xref:System.Web.HttpApplication> 세션이 만료 되 면,만 **Session_OnEnd** 코드와 연결 된 종료 이벤트 처리기를 호출 하지 않도록 하려면 이벤트 Global.asax 파일에 지정 된 실행 되는 <xref:System.Web.HttpApplication>현재 사용 중인 인스턴스.</xref:System.Web.HttpApplication>       Global.asax 파일에 대 한 자세한 내용은 참조 [Global.asax 구문](http://msdn.microsoft.com/en-us/9ade9d4d-4d52-4e88-af52-53a9ffa26582)합니다."
  example:
  - "The following code example shows the contents of a Global.asax file with the **Session_OnStart** and **Session_OnEnd** events defined.  \n  \n```vb#  \n<script language=\"VB\" runat=\"server\">  \nPublic Sub Session_OnStart()  \n  \nEnd Sub  \n  \nPublic Sub Session_OnEnd()  \n  \nEnd Sub  \n</script>  \n```  \n  \n```c#  \n<script language=\"C#\" runat=\"server\">  \npublic void Session_OnStart()  \n{  \n  \n}  \n  \npublic void Session_OnEnd()  \n{  \n  \n}  \n</script>  \n```"
  syntax:
    content: public event EventHandler End;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateModule.Init(System.Web.HttpApplication)
  id: Init(System.Web.HttpApplication)
  parent: System.Web.SessionState.SessionStateModule
  langs:
  - csharp
  name: Init(HttpApplication)
  nameWithType: SessionStateModule.Init(HttpApplication)
  fullName: System.Web.SessionState.SessionStateModule.Init(HttpApplication)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "초기화를 호출할 때 코드는 <xref href=&quot;System.Web.SessionState.SessionStateModule&quot;> </xref> 개체가 만들어집니다."
  remarks: "이 메서드는 응용 프로그램 코드에서 호출할 수 없습니다.       <xref:System.Web.HttpApplication>ASP.NET 응용 프로그램이 시작 될 때 만들어집니다.</xref:System.Web.HttpApplication> <xref:System.Web.HttpApplication>개체를 만들 때 Init 메서드를 호출는 <xref:System.Web.SessionState.SessionStateModule>응용 프로그램에 대 한 개체입니다.</xref:System.Web.SessionState.SessionStateModule> </xref:System.Web.HttpApplication> <xref:System.Web.SessionState.SessionStateModule>응용 프로그램에 대 한 구성에서 클래스를 지정 합니다.</xref:System.Web.SessionState.SessionStateModule>"
  syntax:
    content: public void Init (System.Web.HttpApplication app);
    parameters:
    - id: app
      type: System.Web.HttpApplication
      description: "현재 응용 프로그램입니다."
  overload: System.Web.SessionState.SessionStateModule.Init*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<xref uid=&quot;langword_csharp_mode&quot; name=&quot;mode&quot; href=&quot;&quot;> </xref> 특성에 [sessionState 요소 (ASP.NET 설정 스키마)](http://msdn.microsoft.com/en-us/bda6fb8c-0076-43e3-9ce2-8cf1f8bdaa7d) 로 설정 된 구성 <xref href=&quot;System.Web.SessionState.SessionStateMode&quot;> </xref> 또는 <xref href=&quot;System.Web.SessionState.SessionStateMode&quot;> </xref>, ASP.NET 응용 프로그램에 보다 작은 <xref href=&quot;System.Web.AspNetHostingPermissionLevel&quot;> </xref> 신뢰 합니다."
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "<xref uid=&quot;langword_csharp_mode&quot; name=&quot;mode&quot; href=&quot;&quot;> </xref> 특성에 [sessionState 요소 (ASP.NET 설정 스키마)](http://msdn.microsoft.com/en-us/bda6fb8c-0076-43e3-9ce2-8cf1f8bdaa7d) 로 설정 된 구성 <xref href=&quot;System.Web.SessionState.SessionStateMode&quot;> </xref> 및 <xref uid=&quot;langword_csharp_customProvider&quot; name=&quot;customProvider&quot; href=&quot;&quot;> </xref> 특성은 비어 있거나 존재 하지 않습니다.       -또는- <xref uid=&quot;langword_csharp_mode&quot; name=&quot;mode&quot; href=&quot;&quot;> </xref> 특성에 [sessionState 요소 (ASP.NET 설정 스키마)](http://msdn.microsoft.com/en-us/bda6fb8c-0076-43e3-9ce2-8cf1f8bdaa7d) 로 설정 된 구성 <xref href=&quot;System.Web.SessionState.SessionStateMode&quot;> </xref> 에서 이름으로 식별 된 공급자는 <xref uid=&quot;langword_csharp_customProvider&quot; name=&quot;customProvider&quot; href=&quot;&quot;> </xref> 특성에 추가 되지 않은 [sessionState (ASP.NET 설정 스키마)에 대 한 공급자 요소](http://msdn.microsoft.com/en-us/219d6778-9fb8-48ac-810d-bec68cf7d6aa) 하위 요소."
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateModule.ReleaseSessionState(System.Web.HttpContext)
  id: ReleaseSessionState(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionStateModule
  langs:
  - csharp
  name: ReleaseSessionState(HttpContext)
  nameWithType: SessionStateModule.ReleaseSessionState(HttpContext)
  fullName: System.Web.SessionState.SessionStateModule.ReleaseSessionState(HttpContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "지정 된 세션 상태를 해제 <xref href=&quot;System.Web.HttpContext&quot;> </xref>합니다."
  syntax:
    content: public void ReleaseSessionState (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "<xref href=&quot;System.Web.HttpContext&quot;> </xref> 하려는 세션 상태를 해제 합니다."
  overload: System.Web.SessionState.SessionStateModule.ReleaseSessionState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateModule.ReleaseSessionStateAsync(System.Web.HttpContext)
  id: ReleaseSessionStateAsync(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionStateModule
  langs:
  - csharp
  name: ReleaseSessionStateAsync(HttpContext)
  nameWithType: SessionStateModule.ReleaseSessionStateAsync(HttpContext)
  fullName: System.Web.SessionState.SessionStateModule.ReleaseSessionStateAsync(HttpContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "지정 된 세션 상태를 비동기적으로 해제 <xref href=&quot;System.Web.HttpContext&quot;> </xref>합니다."
  syntax:
    content: public System.Threading.Tasks.Task ReleaseSessionStateAsync (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "<xref href=&quot;System.Web.HttpContext&quot;> </xref> 하려는 세션 상태를 해제 합니다."
    return:
      type: System.Threading.Tasks.Task
      description: "A <xref:System.Threading.Tasks.Task>비동기 작업에 대 한.</xref:System.Threading.Tasks.Task>"
  overload: System.Web.SessionState.SessionStateModule.ReleaseSessionStateAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateModule.Start
  id: Start
  parent: System.Web.SessionState.SessionStateModule
  langs:
  - csharp
  name: Start
  nameWithType: SessionStateModule.Start
  fullName: System.Web.SessionState.SessionStateModule.Start
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "세션을 만들 때 발생 하는 이벤트입니다."
  remarks: "새 세션이 시작할 때 시작 이벤트는 요청의 시작 부분에서 발생 합니다. 세션 식별자를 포함 하지 않는 대 한 요청이, 세션 식별자가 유효 하지 않거나 세션 id와 연결 된 세션이 만료 하는 경우 새 세션이 시작 됩니다.       **Session_OnStart** 이벤트 세션 변수에 대 한 기본 값을 설정 하는 등 세션에 대 한 초기화 작업을 수행 하는 데 사용 됩니다.       라는 공용 서브루틴을 추가 하 여 시작 이벤트에 대 한 처리기를 지정할 수 있습니다 **Session_OnStart** Global.asax 파일에 있습니다.       Global.asax 파일에 대 한 자세한 내용은 참조 [Global.asax 구문](http://msdn.microsoft.com/en-us/9ade9d4d-4d52-4e88-af52-53a9ffa26582)합니다."
  example:
  - "The following code example shows the contents of a Global.asax file with the **Session_OnStart** and **Session_OnEnd** events defined.  \n  \n```vb#  \n<script language=\"VB\" runat=\"server\">  \nPublic Sub Session_OnStart()  \n  \nEnd Sub  \n  \nPublic Sub Session_OnEnd()  \n  \nEnd Sub  \n</script>  \n```  \n  \n```c#  \n<script language=\"C#\" runat=\"server\">  \npublic void Session_OnStart()  \n{  \n  \n}  \n  \npublic void Session_OnEnd()  \n{  \n  \n}  \n</script>  \n```"
  syntax:
    content: public event EventHandler Start;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Configuration.ConfigurationErrorsException
  parent: System.Configuration
  isExternal: false
  name: ConfigurationErrorsException
  nameWithType: ConfigurationErrorsException
  fullName: System.Configuration.ConfigurationErrorsException
- uid: System.Web.SessionState.SessionStateModule.#ctor
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: SessionStateModule()
  nameWithType: SessionStateModule.SessionStateModule()
  fullName: System.Web.SessionState.SessionStateModule.SessionStateModule()
- uid: System.Web.SessionState.SessionStateModule.Dispose
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: Dispose()
  nameWithType: SessionStateModule.Dispose()
  fullName: System.Web.SessionState.SessionStateModule.Dispose()
- uid: System.Web.SessionState.SessionStateModule.End
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: End
  nameWithType: SessionStateModule.End
  fullName: System.Web.SessionState.SessionStateModule.End
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Web.SessionState.SessionStateModule.Init(System.Web.HttpApplication)
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: Init(HttpApplication)
  nameWithType: SessionStateModule.Init(HttpApplication)
  fullName: System.Web.SessionState.SessionStateModule.Init(HttpApplication)
- uid: System.Web.HttpApplication
  parent: System.Web
  isExternal: false
  name: HttpApplication
  nameWithType: HttpApplication
  fullName: System.Web.HttpApplication
- uid: System.Web.SessionState.SessionStateModule.ReleaseSessionState(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: ReleaseSessionState(HttpContext)
  nameWithType: SessionStateModule.ReleaseSessionState(HttpContext)
  fullName: System.Web.SessionState.SessionStateModule.ReleaseSessionState(HttpContext)
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.Web.SessionState.SessionStateModule.ReleaseSessionStateAsync(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: ReleaseSessionStateAsync(HttpContext)
  nameWithType: SessionStateModule.ReleaseSessionStateAsync(HttpContext)
  fullName: System.Web.SessionState.SessionStateModule.ReleaseSessionStateAsync(HttpContext)
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Web.SessionState.SessionStateModule.Start
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: Start
  nameWithType: SessionStateModule.Start
  fullName: System.Web.SessionState.SessionStateModule.Start
- uid: System.Web.SessionState.SessionStateModule.#ctor*
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: SessionStateModule
  nameWithType: SessionStateModule.SessionStateModule
- uid: System.Web.SessionState.SessionStateModule.Dispose*
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: Dispose
  nameWithType: SessionStateModule.Dispose
- uid: System.Web.SessionState.SessionStateModule.Init*
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: Init
  nameWithType: SessionStateModule.Init
- uid: System.Web.SessionState.SessionStateModule.ReleaseSessionState*
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: ReleaseSessionState
  nameWithType: SessionStateModule.ReleaseSessionState
- uid: System.Web.SessionState.SessionStateModule.ReleaseSessionStateAsync*
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: ReleaseSessionStateAsync
  nameWithType: SessionStateModule.ReleaseSessionStateAsync
