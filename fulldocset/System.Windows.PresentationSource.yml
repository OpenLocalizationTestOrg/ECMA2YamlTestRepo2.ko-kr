### YamlMime:ManagedReference
items:
- uid: System.Windows.PresentationSource
  id: PresentationSource
  children:
  - System.Windows.PresentationSource.#ctor
  - System.Windows.PresentationSource.AddSource
  - System.Windows.PresentationSource.AddSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)
  - System.Windows.PresentationSource.ClearContentRenderedListeners
  - System.Windows.PresentationSource.CompositionTarget
  - System.Windows.PresentationSource.ContentRendered
  - System.Windows.PresentationSource.CurrentSources
  - System.Windows.PresentationSource.FromDependencyObject(System.Windows.DependencyObject)
  - System.Windows.PresentationSource.FromVisual(System.Windows.Media.Visual)
  - System.Windows.PresentationSource.GetCompositionTargetCore
  - System.Windows.PresentationSource.IsDisposed
  - System.Windows.PresentationSource.RemoveSource
  - System.Windows.PresentationSource.RemoveSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)
  - System.Windows.PresentationSource.RootChanged(System.Windows.Media.Visual,System.Windows.Media.Visual)
  - System.Windows.PresentationSource.RootVisual
  langs:
  - csharp
  name: PresentationSource
  nameWithType: PresentationSource
  fullName: System.Windows.PresentationSource
  type: Class
  summary: "상호 운용 시나리오의 일부로 다른 기술의 콘텐츠를에서 표시 하는 클래스는 추상 기본를 제공 합니다. 또한이 클래스는 기본 시각적 계층 표시 아키텍처 뿐만 아니라 이러한 소스를 사용 하기 위한 정적 메서드를 제공 합니다."
  syntax:
    content: 'public abstract class PresentationSource : System.Windows.Threading.DispatcherObject'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  implements: []
  inheritedMembers:
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.PresentationSource.#ctor
  id: '#ctor'
  parent: System.Windows.PresentationSource
  langs:
  - csharp
  name: PresentationSource()
  nameWithType: PresentationSource.PresentationSource()
  fullName: System.Windows.PresentationSource.PresentationSource()
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "파생된 클래스의 생성자에서 호출 될 때 기본 클래스 값의 초기화를 제공 합니다."
  syntax:
    content: protected PresentationSource ();
    parameters: []
  overload: System.Windows.PresentationSource.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.PresentationSource.AddSource
  id: AddSource
  parent: System.Windows.PresentationSource
  langs:
  - csharp
  name: AddSource()
  nameWithType: PresentationSource.AddSource()
  fullName: System.Windows.PresentationSource.AddSource()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "추가 <xref href=&quot;System.Windows.PresentationSource&quot;> </xref> 알려진된 표시 소스 목록에 클래스 인스턴스를 파생 합니다."
  remarks: "이 메서드를 나타내는 추적 해야 하는 파생된 클래스에서 호출 되어야 합니다."
  syntax:
    content: protected void AddSource ();
    parameters: []
  overload: System.Windows.PresentationSource.AddSource*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.PresentationSource.AddSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)
  id: AddSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)
  parent: System.Windows.PresentationSource
  langs:
  - csharp
  name: AddSourceChangedHandler(IInputElement,SourceChangedEventHandler)
  nameWithType: PresentationSource.AddSourceChangedHandler(IInputElement,SourceChangedEventHandler)
  fullName: System.Windows.PresentationSource.AddSourceChangedHandler(IInputElement,SourceChangedEventHandler)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "에 대 한 처리기는 <xref uid=&quot;langword_csharp_SourceChanged&quot; name=&quot;SourceChanged&quot; href=&quot;&quot;> </xref> 지정된 된 요소에는 이벤트입니다."
  remarks: "이 이벤트에 대 한 구문 블록의 상태, 불구 하 고는 허용 되지 않습니다 [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)] 연결 된 속성의 사용 합니다. 에 대 한 처리기를 추가 하려고 해서는 안 [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)], 처리기 코드에만 역할을 표시 하는 데 호스트 하는 개체에 배치 해야 하 고 (<xref:System.Windows.PresentationSource> ) 콘텐츠.</xref:System.Windows.PresentationSource> 이러한 처리기 개체를 초기화 하는 동안에 연결 해야 하 고 Dispose 메서드 또는 해당 개체를 정리에서 명시적으로 제거 해야 합니다.       라우트된 이벤트 인 경우에 다른 것을 염려이 이벤트를 처리 하는 일반적인 응용 프로그램 시나리오에서 요소의 상대적으로 적은 수로 인해 일반 라우트된 이벤트 동작을이 이벤트에 특별 한 제한 사항이 있습니다.      -사용할 수 없습니다는 <xref:System.Windows.UIElement>또는 <xref:System.Windows.ContentElement> <xref:System.Windows.UIElement.AddHandler%2A>처리기를 추가 하는 방법.</xref:System.Windows.UIElement.AddHandler%2A> </xref:System.Windows.ContentElement> </xref:System.Windows.UIElement> AddSourceChangedHandler 사용 해야 합니다.      - [!INCLUDE[TLA#tla_cshrp](~/add/includes/tlasharptla-cshrp-md.md)] `+=` 및 `-=` 이벤트 처리기 구문과 관련된 특정 처리기 구문은 지원 되지 않으며, 이벤트 자체 public로 노출 되지 않으므로 합니다. 만 <xref:System.Windows.PresentationSource>유틸리티 메서드를 직접 추가 및 제거는 처리기 지원 됩니다.</xref:System.Windows.PresentationSource>      클래스 처리기 허용 되지 않습니다. 특히, 호출할 수 없습니다 <xref:System.Windows.EventManager.RegisterClassHandler%2A>클래스 생성자에서이 이벤트에 대 한 식별자가 공용 식별자 필드에 SourceChanged 대 한 존재 하지만 하므로.</xref:System.Windows.EventManager.RegisterClassHandler%2A>      -모든 등록 된 처리기 처리기 중 하나는 처리 된 것으로 인수를 표시 하려고 하는 경우에 SourceChanged 이벤트를 받게 됩니다."
  syntax:
    content: public static void AddSourceChangedHandler (System.Windows.IInputElement element, System.Windows.SourceChangedEventHandler handler);
    parameters:
    - id: element
      type: System.Windows.IInputElement
      description: "처리기를 추가할 요소입니다."
    - id: handler
      type: System.Windows.SourceChangedEventHandler
      description: "추가할 처리기 구현입니다."
  overload: System.Windows.PresentationSource.AddSourceChangedHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.PresentationSource.ClearContentRenderedListeners
  id: ClearContentRenderedListeners
  parent: System.Windows.PresentationSource
  langs:
  - csharp
  name: ClearContentRenderedListeners()
  nameWithType: PresentationSource.ClearContentRenderedListeners()
  fullName: System.Windows.PresentationSource.ClearContentRenderedListeners()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "에 대 한 수신기 목록을 설정 하는 <xref href=&quot;System.Windows.PresentationSource.ContentRendered&quot;> </xref> 이벤트를 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  syntax:
    content: protected void ClearContentRenderedListeners ();
    parameters: []
  overload: System.Windows.PresentationSource.ClearContentRenderedListeners*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.PresentationSource.CompositionTarget
  id: CompositionTarget
  parent: System.Windows.PresentationSource
  langs:
  - csharp
  name: CompositionTarget
  nameWithType: PresentationSource.CompositionTarget
  fullName: System.Windows.PresentationSource.CompositionTarget
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "원본에서 제공 되는 표시에 대 한 시각적 대상을 가져옵니다."
  remarks: "이 속성의 반환 <xref:System.Windows.PresentationSource.GetCompositionTargetCore%2A>.</xref:System.Windows.PresentationSource.GetCompositionTargetCore%2A> 의 구현이 필요로"
  syntax:
    content: public System.Windows.Media.CompositionTarget CompositionTarget { get; }
    return:
      type: System.Windows.Media.CompositionTarget
      description: "시각적 대상 (의 인스턴스는 <xref href=&quot;System.Windows.Media.CompositionTarget&quot;> </xref> 파생 클래스)."
  overload: System.Windows.PresentationSource.CompositionTarget*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.PresentationSource.ContentRendered
  id: ContentRendered
  parent: System.Windows.PresentationSource
  langs:
  - csharp
  name: ContentRendered
  nameWithType: PresentationSource.ContentRendered
  fullName: System.Windows.PresentationSource.ContentRendered
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "콘텐츠가 렌더링 되 고 상호 작용할 준비가 때 발생 합니다."
  syntax:
    content: public event EventHandler ContentRendered;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.PresentationSource.CurrentSources
  id: CurrentSources
  parent: System.Windows.PresentationSource
  langs:
  - csharp
  name: CurrentSources
  nameWithType: PresentationSource.CurrentSources
  fullName: System.Windows.PresentationSource.CurrentSources
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "소스의 목록을 반환합니다."
  remarks: "<xref:System.Windows.PresentationSource.AddSource%2A>.</xref:System.Windows.PresentationSource.AddSource%2A> 와 함께 추가 된 원본 목록의 읽기 전용, 스레드로부터 안전한 복사본을 통해 열거자를 반환된 된 목록 지원       열거자는 목록에는 작동 하지 않는 약한 참조를 건너뜁니다."
  syntax:
    content: public static System.Collections.IEnumerable CurrentSources { get; }
    return:
      type: System.Collections.IEnumerable
      description: "약한 참조의 목록입니다."
  overload: System.Windows.PresentationSource.CurrentSources*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.PresentationSource.FromDependencyObject(System.Windows.DependencyObject)
  id: FromDependencyObject(System.Windows.DependencyObject)
  parent: System.Windows.PresentationSource
  langs:
  - csharp
  name: FromDependencyObject(DependencyObject)
  nameWithType: PresentationSource.FromDependencyObject(DependencyObject)
  fullName: System.Windows.PresentationSource.FromDependencyObject(DependencyObject)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "소스를 반환 합니다. 제공 된 <xref href=&quot;System.Windows.DependencyObject&quot;> </xref> 표시 됩니다."
  syntax:
    content: public static System.Windows.PresentationSource FromDependencyObject (System.Windows.DependencyObject dependencyObject);
    parameters:
    - id: dependencyObject
      type: System.Windows.DependencyObject
      description: "<xref href=&quot;System.Windows.DependencyObject&quot;> </xref> 에 대 한 원본을 찾을 수 있도록 합니다."
    return:
      type: System.Windows.PresentationSource
      description: "<xref href=&quot;System.Windows.PresentationSource&quot;> </xref> 종속성 개체가 제공 되는 합니다."
  overload: System.Windows.PresentationSource.FromDependencyObject*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.PresentationSource.FromVisual(System.Windows.Media.Visual)
  id: FromVisual(System.Windows.Media.Visual)
  parent: System.Windows.PresentationSource
  langs:
  - csharp
  name: FromVisual(Visual)
  nameWithType: PresentationSource.FromVisual(Visual)
  fullName: System.Windows.PresentationSource.FromVisual(Visual)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "소스를 반환 합니다. 제공 된 <xref href=&quot;System.Windows.Media.Visual&quot;> </xref> 표시 됩니다."
  syntax:
    content: public static System.Windows.PresentationSource FromVisual (System.Windows.Media.Visual visual);
    parameters:
    - id: visual
      type: System.Windows.Media.Visual
      description: "<xref href=&quot;System.Windows.Media.Visual&quot;> </xref> 에 대 한 원본을 찾을 수 있도록 합니다."
    return:
      type: System.Windows.PresentationSource
      description: "<xref href=&quot;System.Windows.PresentationSource&quot;> </xref> 시각적 개체는 제공 되는, 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 경우 <code> visual </code> 삭제 됩니다."
  overload: System.Windows.PresentationSource.FromVisual*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>visual</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.PresentationSource.GetCompositionTargetCore
  id: GetCompositionTargetCore
  parent: System.Windows.PresentationSource
  langs:
  - csharp
  name: GetCompositionTargetCore()
  nameWithType: PresentationSource.GetCompositionTargetCore()
  fullName: System.Windows.PresentationSource.GetCompositionTargetCore()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "파생된 클래스에서 재정의 되 면 지정 된 소스에 대 한 표시 대상을 반환 합니다."
  syntax:
    content: protected abstract System.Windows.Media.CompositionTarget GetCompositionTargetCore ();
    parameters: []
    return:
      type: System.Windows.Media.CompositionTarget
      description: "반환 된 <xref href=&quot;System.Windows.Media.CompositionTarget&quot;> </xref> 표시를 렌더링 하는 것에 대 한 대상입니다."
  overload: System.Windows.PresentationSource.GetCompositionTargetCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.PresentationSource.IsDisposed
  id: IsDisposed
  parent: System.Windows.PresentationSource
  langs:
  - csharp
  name: IsDisposed
  nameWithType: PresentationSource.IsDisposed
  fullName: System.Windows.PresentationSource.IsDisposed
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "파생된 클래스에서 재정의 되 면 개체가 삭제 되는지 여부를 선언 하는 값을 가져옵니다."
  syntax:
    content: public abstract bool IsDisposed { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>개체가 삭제 됩니다. 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.PresentationSource.IsDisposed*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.PresentationSource.RemoveSource
  id: RemoveSource
  parent: System.Windows.PresentationSource
  langs:
  - csharp
  name: RemoveSource()
  nameWithType: PresentationSource.RemoveSource()
  fullName: System.Windows.PresentationSource.RemoveSource()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "제거는 <xref href=&quot;System.Windows.PresentationSource&quot;> </xref> 알려진된 표시 원본 목록에서 파생 되는 클래스 인스턴스."
  syntax:
    content: protected void RemoveSource ();
    parameters: []
  overload: System.Windows.PresentationSource.RemoveSource*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.PresentationSource.RemoveSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)
  id: RemoveSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)
  parent: System.Windows.PresentationSource
  langs:
  - csharp
  name: RemoveSourceChangedHandler(IInputElement,SourceChangedEventHandler)
  nameWithType: PresentationSource.RemoveSourceChangedHandler(IInputElement,SourceChangedEventHandler)
  fullName: System.Windows.PresentationSource.RemoveSourceChangedHandler(IInputElement,SourceChangedEventHandler)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "에 대 한 처리기를 제거는 <xref uid=&quot;langword_csharp_SourceChanged&quot; name=&quot;SourceChanged&quot; href=&quot;&quot;> </xref> 제공된 된 요소에서 이벤트입니다."
  remarks: "라우트된 이벤트 인 경우에 다른 것을 염려이 이벤트를 처리 하는 일반적인 응용 프로그램 시나리오에서 요소의 상대적으로 적은 수로 인해 일반 라우트된 이벤트 동작을이 이벤트에 특별 한 제한 사항이 있습니다.      -사용할 수 없습니다는 <xref:System.Windows.UIElement>또는 <xref:System.Windows.ContentElement> <xref:System.Windows.UIElement.RemoveHandler%2A>처리기를 제거 하는 메서드.</xref:System.Windows.UIElement.RemoveHandler%2A> </xref:System.Windows.ContentElement> </xref:System.Windows.UIElement> RemoveSourceChangedHandler 사용 해야 합니다.      - [!INCLUDE[TLA#tla_cshrp](~/add/includes/tlasharptla-cshrp-md.md)] `+=` 및 `-=` 이벤트 처리기 구문과 다른 특정 처리기 구문은 지원 되지 않으며, 이벤트 자체 public로 노출 되지 않으므로 합니다. 만 <xref:System.Windows.PresentationSource>유틸리티 메서드를 직접 추가 및 제거는 처리기 지원 됩니다.</xref:System.Windows.PresentationSource>"
  syntax:
    content: public static void RemoveSourceChangedHandler (System.Windows.IInputElement e, System.Windows.SourceChangedEventHandler handler);
    parameters:
    - id: e
      type: System.Windows.IInputElement
      description: "처리기를 제거 하는 요소입니다."
    - id: handler
      type: System.Windows.SourceChangedEventHandler
      description: "제거할 처리기 구현입니다."
  overload: System.Windows.PresentationSource.RemoveSourceChangedHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.PresentationSource.RootChanged(System.Windows.Media.Visual,System.Windows.Media.Visual)
  id: RootChanged(System.Windows.Media.Visual,System.Windows.Media.Visual)
  parent: System.Windows.PresentationSource
  langs:
  - csharp
  name: RootChanged(Visual,Visual)
  nameWithType: PresentationSource.RootChanged(Visual,Visual)
  fullName: System.Windows.PresentationSource.RootChanged(Visual,Visual)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "알림을 제공 하는 루트 <xref href=&quot;System.Windows.Media.Visual&quot;> </xref> 변경 되었습니다."
  remarks: "파생된 클래스 나타내기 위해이 메서드는 루트를 호출 해야 <xref:System.Windows.Media.Visual>변경 되었습니다.</xref:System.Windows.Media.Visual>       지정한 루트 시각적 개체에서 발생 하는 두 개의 개체 수명 이벤트를 이러한 루트 표시는 하는 경우에이 메서드를 호출 하면 <xref:System.Windows.FrameworkElement>파생 클래스입니다.</xref:System.Windows.FrameworkElement>      -이전 루트 visual를 발생 시킵니다는 <xref:System.Windows.FrameworkElement.Unloaded>이벤트 및 해당 요소 트리를 아래쪽으로 각 자식 요소에이 이벤트를 처리 합니다.</xref:System.Windows.FrameworkElement.Unloaded>      -새 루트 표시를 발생 시킵니다는 <xref:System.Windows.FrameworkElement.Loaded>이벤트 및 해당 요소 트리를 아래쪽으로 각 자식 요소에이 이벤트를 처리 합니다.</xref:System.Windows.FrameworkElement.Loaded>"
  syntax:
    content: protected void RootChanged (System.Windows.Media.Visual oldRoot, System.Windows.Media.Visual newRoot);
    parameters:
    - id: oldRoot
      type: System.Windows.Media.Visual
      description: "이전 루트 <xref href=&quot;System.Windows.Media.Visual&quot;> </xref>합니다."
    - id: newRoot
      type: System.Windows.Media.Visual
      description: "새 루트 <xref href=&quot;System.Windows.Media.Visual&quot;> </xref>합니다."
  overload: System.Windows.PresentationSource.RootChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.PresentationSource.RootVisual
  id: RootVisual
  parent: System.Windows.PresentationSource
  langs:
  - csharp
  name: RootVisual
  nameWithType: PresentationSource.RootVisual
  fullName: System.Windows.PresentationSource.RootVisual
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "파생된 클래스에서 재정의 되 면 루트 소스에 제공 되 고 visual을 설정 하거나 가져옵니다."
  syntax:
    content: public abstract System.Windows.Media.Visual RootVisual { get; set; }
    return:
      type: System.Windows.Media.Visual
      description: "루트 표시 합니다."
  overload: System.Windows.PresentationSource.RootVisual*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Threading.DispatcherObject
  isExternal: false
  name: System.Windows.Threading.DispatcherObject
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Windows.PresentationSource.#ctor
  parent: System.Windows.PresentationSource
  isExternal: false
  name: PresentationSource()
  nameWithType: PresentationSource.PresentationSource()
  fullName: System.Windows.PresentationSource.PresentationSource()
- uid: System.Windows.PresentationSource.AddSource
  parent: System.Windows.PresentationSource
  isExternal: false
  name: AddSource()
  nameWithType: PresentationSource.AddSource()
  fullName: System.Windows.PresentationSource.AddSource()
- uid: System.Windows.PresentationSource.AddSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)
  parent: System.Windows.PresentationSource
  isExternal: false
  name: AddSourceChangedHandler(IInputElement,SourceChangedEventHandler)
  nameWithType: PresentationSource.AddSourceChangedHandler(IInputElement,SourceChangedEventHandler)
  fullName: System.Windows.PresentationSource.AddSourceChangedHandler(IInputElement,SourceChangedEventHandler)
- uid: System.Windows.IInputElement
  parent: System.Windows
  isExternal: false
  name: IInputElement
  nameWithType: IInputElement
  fullName: System.Windows.IInputElement
- uid: System.Windows.SourceChangedEventHandler
  parent: System.Windows
  isExternal: false
  name: SourceChangedEventHandler
  nameWithType: SourceChangedEventHandler
  fullName: System.Windows.SourceChangedEventHandler
- uid: System.Windows.PresentationSource.ClearContentRenderedListeners
  parent: System.Windows.PresentationSource
  isExternal: false
  name: ClearContentRenderedListeners()
  nameWithType: PresentationSource.ClearContentRenderedListeners()
  fullName: System.Windows.PresentationSource.ClearContentRenderedListeners()
- uid: System.Windows.PresentationSource.CompositionTarget
  parent: System.Windows.PresentationSource
  isExternal: false
  name: CompositionTarget
  nameWithType: PresentationSource.CompositionTarget
  fullName: System.Windows.PresentationSource.CompositionTarget
- uid: System.Windows.Media.CompositionTarget
  parent: System.Windows.Media
  isExternal: false
  name: CompositionTarget
  nameWithType: CompositionTarget
  fullName: System.Windows.Media.CompositionTarget
- uid: System.Windows.PresentationSource.ContentRendered
  parent: System.Windows.PresentationSource
  isExternal: false
  name: ContentRendered
  nameWithType: PresentationSource.ContentRendered
  fullName: System.Windows.PresentationSource.ContentRendered
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Windows.PresentationSource.CurrentSources
  parent: System.Windows.PresentationSource
  isExternal: false
  name: CurrentSources
  nameWithType: PresentationSource.CurrentSources
  fullName: System.Windows.PresentationSource.CurrentSources
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Windows.PresentationSource.FromDependencyObject(System.Windows.DependencyObject)
  parent: System.Windows.PresentationSource
  isExternal: false
  name: FromDependencyObject(DependencyObject)
  nameWithType: PresentationSource.FromDependencyObject(DependencyObject)
  fullName: System.Windows.PresentationSource.FromDependencyObject(DependencyObject)
- uid: System.Windows.PresentationSource
  parent: System.Windows
  isExternal: false
  name: PresentationSource
  nameWithType: PresentationSource
  fullName: System.Windows.PresentationSource
- uid: System.Windows.DependencyObject
  parent: System.Windows
  isExternal: false
  name: DependencyObject
  nameWithType: DependencyObject
  fullName: System.Windows.DependencyObject
- uid: System.Windows.PresentationSource.FromVisual(System.Windows.Media.Visual)
  parent: System.Windows.PresentationSource
  isExternal: false
  name: FromVisual(Visual)
  nameWithType: PresentationSource.FromVisual(Visual)
  fullName: System.Windows.PresentationSource.FromVisual(Visual)
- uid: System.Windows.Media.Visual
  parent: System.Windows.Media
  isExternal: false
  name: Visual
  nameWithType: Visual
  fullName: System.Windows.Media.Visual
- uid: System.Windows.PresentationSource.GetCompositionTargetCore
  parent: System.Windows.PresentationSource
  isExternal: false
  name: GetCompositionTargetCore()
  nameWithType: PresentationSource.GetCompositionTargetCore()
  fullName: System.Windows.PresentationSource.GetCompositionTargetCore()
- uid: System.Windows.PresentationSource.IsDisposed
  parent: System.Windows.PresentationSource
  isExternal: false
  name: IsDisposed
  nameWithType: PresentationSource.IsDisposed
  fullName: System.Windows.PresentationSource.IsDisposed
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.PresentationSource.RemoveSource
  parent: System.Windows.PresentationSource
  isExternal: false
  name: RemoveSource()
  nameWithType: PresentationSource.RemoveSource()
  fullName: System.Windows.PresentationSource.RemoveSource()
- uid: System.Windows.PresentationSource.RemoveSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)
  parent: System.Windows.PresentationSource
  isExternal: false
  name: RemoveSourceChangedHandler(IInputElement,SourceChangedEventHandler)
  nameWithType: PresentationSource.RemoveSourceChangedHandler(IInputElement,SourceChangedEventHandler)
  fullName: System.Windows.PresentationSource.RemoveSourceChangedHandler(IInputElement,SourceChangedEventHandler)
- uid: System.Windows.PresentationSource.RootChanged(System.Windows.Media.Visual,System.Windows.Media.Visual)
  parent: System.Windows.PresentationSource
  isExternal: false
  name: RootChanged(Visual,Visual)
  nameWithType: PresentationSource.RootChanged(Visual,Visual)
  fullName: System.Windows.PresentationSource.RootChanged(Visual,Visual)
- uid: System.Windows.PresentationSource.RootVisual
  parent: System.Windows.PresentationSource
  isExternal: false
  name: RootVisual
  nameWithType: PresentationSource.RootVisual
  fullName: System.Windows.PresentationSource.RootVisual
- uid: System.Windows.PresentationSource.#ctor*
  parent: System.Windows.PresentationSource
  isExternal: false
  name: PresentationSource
  nameWithType: PresentationSource.PresentationSource
- uid: System.Windows.PresentationSource.AddSource*
  parent: System.Windows.PresentationSource
  isExternal: false
  name: AddSource
  nameWithType: PresentationSource.AddSource
- uid: System.Windows.PresentationSource.AddSourceChangedHandler*
  parent: System.Windows.PresentationSource
  isExternal: false
  name: AddSourceChangedHandler
  nameWithType: PresentationSource.AddSourceChangedHandler
- uid: System.Windows.PresentationSource.ClearContentRenderedListeners*
  parent: System.Windows.PresentationSource
  isExternal: false
  name: ClearContentRenderedListeners
  nameWithType: PresentationSource.ClearContentRenderedListeners
- uid: System.Windows.PresentationSource.CompositionTarget*
  parent: System.Windows.PresentationSource
  isExternal: false
  name: CompositionTarget
  nameWithType: PresentationSource.CompositionTarget
- uid: System.Windows.PresentationSource.CurrentSources*
  parent: System.Windows.PresentationSource
  isExternal: false
  name: CurrentSources
  nameWithType: PresentationSource.CurrentSources
- uid: System.Windows.PresentationSource.FromDependencyObject*
  parent: System.Windows.PresentationSource
  isExternal: false
  name: FromDependencyObject
  nameWithType: PresentationSource.FromDependencyObject
- uid: System.Windows.PresentationSource.FromVisual*
  parent: System.Windows.PresentationSource
  isExternal: false
  name: FromVisual
  nameWithType: PresentationSource.FromVisual
- uid: System.Windows.PresentationSource.GetCompositionTargetCore*
  parent: System.Windows.PresentationSource
  isExternal: false
  name: GetCompositionTargetCore
  nameWithType: PresentationSource.GetCompositionTargetCore
- uid: System.Windows.PresentationSource.IsDisposed*
  parent: System.Windows.PresentationSource
  isExternal: false
  name: IsDisposed
  nameWithType: PresentationSource.IsDisposed
- uid: System.Windows.PresentationSource.RemoveSource*
  parent: System.Windows.PresentationSource
  isExternal: false
  name: RemoveSource
  nameWithType: PresentationSource.RemoveSource
- uid: System.Windows.PresentationSource.RemoveSourceChangedHandler*
  parent: System.Windows.PresentationSource
  isExternal: false
  name: RemoveSourceChangedHandler
  nameWithType: PresentationSource.RemoveSourceChangedHandler
- uid: System.Windows.PresentationSource.RootChanged*
  parent: System.Windows.PresentationSource
  isExternal: false
  name: RootChanged
  nameWithType: PresentationSource.RootChanged
- uid: System.Windows.PresentationSource.RootVisual*
  parent: System.Windows.PresentationSource
  isExternal: false
  name: RootVisual
  nameWithType: PresentationSource.RootVisual
