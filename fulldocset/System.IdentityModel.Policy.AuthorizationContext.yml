### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Policy.AuthorizationContext
  id: AuthorizationContext
  children:
  - System.IdentityModel.Policy.AuthorizationContext.#ctor
  - System.IdentityModel.Policy.AuthorizationContext.ClaimSets
  - System.IdentityModel.Policy.AuthorizationContext.CreateDefaultAuthorizationContext(System.Collections.Generic.IList{System.IdentityModel.Policy.IAuthorizationPolicy})
  - System.IdentityModel.Policy.AuthorizationContext.ExpirationTime
  - System.IdentityModel.Policy.AuthorizationContext.Id
  - System.IdentityModel.Policy.AuthorizationContext.Properties
  langs:
  - csharp
  name: AuthorizationContext
  nameWithType: AuthorizationContext
  fullName: System.IdentityModel.Policy.AuthorizationContext
  type: Class
  summary: "호출 하 여 보낸된 메시지에는 토큰에서 사용할 수 있는 모든 권한 부여 정책 평가의 결과 <xref:System.ServiceModel.ServiceAuthorizationManager.GetAuthorizationPolicies*>메서드.</xref:System.ServiceModel.ServiceAuthorizationManager.GetAuthorizationPolicies*>"
  remarks: "모든 권한 부여 관리자에서 권한 부여 정책 평가의 집합이 생성 <xref:System.IdentityModel.Claims.ClaimSet>개체입니다.</xref:System.IdentityModel.Claims.ClaimSet> 이러한 개체는 권한 부여 컨텍스트를 구성 합니다.       권한 부여 컨텍스트에 클레임 집합 개체는 권한 부여 컨텍스트가 올바른지, 시간 범위를 지정 하는 만료 시간 및 고유 식별자의 집합을 포함 합니다.       현재 작업에 대 한 AuthorizationContext를 통해 액세스할 수는 <xref:System.ServiceModel.ServiceSecurityContext.AuthorizationContext%2A>속성.</xref:System.ServiceModel.ServiceSecurityContext.AuthorizationContext%2A>"
  example:
  - >-
    [!code-cs[C_IAuthorizationPolicy#4](~/add/codesnippet/csharp/t-system.identitymodel.p_2_1.cs)]
     [!code-vb[C_IAuthorizationPolicy#4](~/add/codesnippet/visualbasic/t-system.identitymodel.p_2_1.vb)]
  syntax:
    content: 'public abstract class AuthorizationContext : System.IdentityModel.Policy.IAuthorizationComponent'
  inheritance:
  - System.Object
  implements:
  - System.IdentityModel.Policy.IAuthorizationComponent
  inheritedMembers: []
  platform:
  - net462
- uid: System.IdentityModel.Policy.AuthorizationContext.#ctor
  id: '#ctor'
  parent: System.IdentityModel.Policy.AuthorizationContext
  langs:
  - csharp
  name: AuthorizationContext()
  nameWithType: AuthorizationContext.AuthorizationContext()
  fullName: System.IdentityModel.Policy.AuthorizationContext.AuthorizationContext()
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Policy
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.IdentityModel.Policy.AuthorizationContext&quot;> </xref> 클래스입니다."
  remarks: "기본 생성자는 아무 작업도 수행 합니다."
  syntax:
    content: protected AuthorizationContext ();
    parameters: []
  overload: System.IdentityModel.Policy.AuthorizationContext.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Policy.AuthorizationContext.ClaimSets
  id: ClaimSets
  parent: System.IdentityModel.Policy.AuthorizationContext
  langs:
  - csharp
  name: ClaimSets
  nameWithType: AuthorizationContext.ClaimSets
  fullName: System.IdentityModel.Policy.AuthorizationContext.ClaimSets
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Policy
  summary: "권한 부여 정책과 연결 된 클레임 집합을 가져옵니다."
  remarks: "Claimset 속성을 사용 하 여 권한 부여 정책에 의해 추가 된 클레임 집합을 가져오도록 합니다. 파생 된 클래스 <xref:System.ServiceModel.ServiceAuthorizationManager>권한 부여 결정을 내리는 클레임을 사용할 수 있습니다.</xref:System.ServiceModel.ServiceAuthorizationManager>"
  example:
  - >-
    [!code-cs[C_IAuthorizationPolicy#5](~/add/codesnippet/csharp/p-system.identitymodel.p_1.cs)]
     [!code-vb[C_IAuthorizationPolicy#5](~/add/codesnippet/visualbasic/p-system.identitymodel.p_1.vb)]
  syntax:
    content: public abstract System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Claims.ClaimSet> ClaimSets { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Claims.ClaimSet}
      description: "A &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; 형식의 <xref href=&quot;System.IdentityModel.Claims.ClaimSet&quot;> </xref> 클레임 집합이 들어 있는입니다."
  overload: System.IdentityModel.Policy.AuthorizationContext.ClaimSets*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Policy.AuthorizationContext.CreateDefaultAuthorizationContext(System.Collections.Generic.IList{System.IdentityModel.Policy.IAuthorizationPolicy})
  id: CreateDefaultAuthorizationContext(System.Collections.Generic.IList{System.IdentityModel.Policy.IAuthorizationPolicy})
  parent: System.IdentityModel.Policy.AuthorizationContext
  langs:
  - csharp
  name: CreateDefaultAuthorizationContext(IList<IAuthorizationPolicy>)
  nameWithType: AuthorizationContext.CreateDefaultAuthorizationContext(IList<IAuthorizationPolicy>)
  fullName: System.IdentityModel.Policy.AuthorizationContext.CreateDefaultAuthorizationContext(IList<IAuthorizationPolicy>)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Policy
  summary: "모든 지정 된 권한 부여 정책을 평가 하 고 만들기는 <xref href=&quot;System.IdentityModel.Policy.AuthorizationContext&quot;> </xref>합니다."
  remarks: "일반적으로 CreateDefaultAuthorizationContext 메서드는 인프라에서만 사용 됩니다."
  syntax:
    content: public static System.IdentityModel.Policy.AuthorizationContext CreateDefaultAuthorizationContext (System.Collections.Generic.IList<System.IdentityModel.Policy.IAuthorizationPolicy> authorizationPolicies);
    parameters:
    - id: authorizationPolicies
      type: System.Collections.Generic.IList{System.IdentityModel.Policy.IAuthorizationPolicy}
      description: "&lt;xref:System.Collections.Generic.IList%601&gt; 의 <xref href=&quot;System.IdentityModel.Policy.IAuthorizationPolicy&quot;> </xref> 권한 부여 정책의 집합이 들어 있는입니다."
    return:
      type: System.IdentityModel.Policy.AuthorizationContext
      description: "<xref href=&quot;System.IdentityModel.Policy.AuthorizationContext&quot;> </xref> 모든 지정 된 권한 부여 정책 평가의 결과 포함 하는 합니다."
  overload: System.IdentityModel.Policy.AuthorizationContext.CreateDefaultAuthorizationContext*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Policy.AuthorizationContext.ExpirationTime
  id: ExpirationTime
  parent: System.IdentityModel.Policy.AuthorizationContext
  langs:
  - csharp
  name: ExpirationTime
  nameWithType: AuthorizationContext.ExpirationTime
  fullName: System.IdentityModel.Policy.AuthorizationContext.ExpirationTime
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Policy
  summary: "에이 날짜와 시간을 가져옵니다 <xref href=&quot;System.IdentityModel.Policy.AuthorizationContext&quot;> </xref> 개체는 더 이상 유효 합니다."
  remarks: "ExpirationTime 속성이 utc (협정 세계시)입니다.      > [!NOTE] >의 서비스 모델 [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] ExpirationTime 속성의 값을 확인 하지 않습니다. 이 속성은 [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] 를 사용 하는 <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A>권한 부여 컨텍스트의 기반이 되는 보안 토큰의 속성입니다.</xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A>속성을 확인 [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]그러나.</xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> 권한 부여 컨텍스트의 만료 시간은 만료 시에 특정 작업을 수행 해야 하는 권한 부여 정책 등의 시나리오에 대 한 것입니다."
  syntax:
    content: public abstract DateTime ExpirationTime { get; }
    return:
      type: System.DateTime
      description: "A <xref:System.DateTime>나타내는 날짜와 시간을 하는 값이 <xref href=&quot;System.IdentityModel.Policy.AuthorizationContext&quot;> </xref> 개체는 더 이상 유효 합니다.</xref:System.DateTime>"
  overload: System.IdentityModel.Policy.AuthorizationContext.ExpirationTime*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Policy.AuthorizationContext.Id
  id: Id
  parent: System.IdentityModel.Policy.AuthorizationContext
  langs:
  - csharp
  name: Id
  nameWithType: AuthorizationContext.Id
  fullName: System.IdentityModel.Policy.AuthorizationContext.Id
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Policy
  summary: "이 대 한 고유 식별자를 가져옵니다 <xref href=&quot;System.IdentityModel.Policy.AuthorizationContext&quot;> </xref> 개체입니다."
  remarks: "일반적으로 Id 속성은 GUID입니다."
  syntax:
    content: public abstract string Id { get; }
    return:
      type: System.String
      description: "A <xref href=&quot;System.IdentityModel.Policy.AuthorizationContext&quot;></xref> object."
  overload: System.IdentityModel.Policy.AuthorizationContext.Id*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Policy.AuthorizationContext.Properties
  id: Properties
  parent: System.IdentityModel.Policy.AuthorizationContext
  langs:
  - csharp
  name: Properties
  nameWithType: AuthorizationContext.Properties
  fullName: System.IdentityModel.Policy.AuthorizationContext.Properties
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Policy
  summary: "이 연결 된 비 클레임 속성의 컬렉션을 가져옵니다 <xref href=&quot;System.IdentityModel.Policy.AuthorizationContext&quot;> </xref> 개체입니다."
  remarks: '[!INCLUDE[vsindigo](~/add/includes/vsindigo-md.md)]두 개의 속성 예약: `Identities` 및 `Principal`합니다. `Identities` <xref:System.IdentityModel.Policy.IAuthorizationPolicy>는 <xref:System.Collections.Generic.IList%601> <xref:System.IdentityModel.Policy.AuthorizationContext>.</xref:System.IdentityModel.Policy.AuthorizationContext> 와 관련 된 하나 이상의 id</xref:System.Collections.Generic.IList%601> 를 지정 하</xref:System.IdentityModel.Policy.IAuthorizationPolicy> 여 속성은 사용 `Principal` 속성은 사용 <xref:System.IdentityModel.Policy.IAuthorizationPolicy> <xref:System.Security.Principal.IPrincipal> <xref:System.IdentityModel.Policy.AuthorizationContext>.</xref:System.IdentityModel.Policy.AuthorizationContext> 와 연결 된</xref:System.Security.Principal.IPrincipal> 지정 하려면</xref:System.IdentityModel.Policy.IAuthorizationPolicy>'
  syntax:
    content: public abstract System.Collections.Generic.IDictionary<string,object> Properties { get; }
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
      description: "A &lt;xref:System.Collections.Generic.Dictionary%602&gt; 비 클레임 속성의 컬렉션을 지정 하는 합니다."
  overload: System.IdentityModel.Policy.AuthorizationContext.Properties*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.IdentityModel.Policy.AuthorizationContext.#ctor
  parent: System.IdentityModel.Policy.AuthorizationContext
  isExternal: false
  name: AuthorizationContext()
  nameWithType: AuthorizationContext.AuthorizationContext()
  fullName: System.IdentityModel.Policy.AuthorizationContext.AuthorizationContext()
- uid: System.IdentityModel.Policy.AuthorizationContext.ClaimSets
  parent: System.IdentityModel.Policy.AuthorizationContext
  isExternal: false
  name: ClaimSets
  nameWithType: AuthorizationContext.ClaimSets
  fullName: System.IdentityModel.Policy.AuthorizationContext.ClaimSets
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Claims.ClaimSet}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<ClaimSet>
  nameWithType: ReadOnlyCollection<ClaimSet>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Claims.ClaimSet>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.IdentityModel.Claims.ClaimSet>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Claims.ClaimSet
    name: ClaimSet
    nameWithType: ClaimSet
    fullName: ClaimSet
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Policy.AuthorizationContext.CreateDefaultAuthorizationContext(System.Collections.Generic.IList{System.IdentityModel.Policy.IAuthorizationPolicy})
  parent: System.IdentityModel.Policy.AuthorizationContext
  isExternal: false
  name: CreateDefaultAuthorizationContext(IList<IAuthorizationPolicy>)
  nameWithType: AuthorizationContext.CreateDefaultAuthorizationContext(IList<IAuthorizationPolicy>)
  fullName: System.IdentityModel.Policy.AuthorizationContext.CreateDefaultAuthorizationContext(IList<IAuthorizationPolicy>)
- uid: System.IdentityModel.Policy.AuthorizationContext
  parent: System.IdentityModel.Policy
  isExternal: false
  name: AuthorizationContext
  nameWithType: AuthorizationContext
  fullName: System.IdentityModel.Policy.AuthorizationContext
- uid: System.Collections.Generic.IList{System.IdentityModel.Policy.IAuthorizationPolicy}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<IAuthorizationPolicy>
  nameWithType: IList<IAuthorizationPolicy>
  fullName: System.Collections.Generic.IList<System.IdentityModel.Policy.IAuthorizationPolicy>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.IdentityModel.Policy.IAuthorizationPolicy>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Policy.IAuthorizationPolicy
    name: IAuthorizationPolicy
    nameWithType: IAuthorizationPolicy
    fullName: IAuthorizationPolicy
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Policy.AuthorizationContext.ExpirationTime
  parent: System.IdentityModel.Policy.AuthorizationContext
  isExternal: false
  name: ExpirationTime
  nameWithType: AuthorizationContext.ExpirationTime
  fullName: System.IdentityModel.Policy.AuthorizationContext.ExpirationTime
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.IdentityModel.Policy.AuthorizationContext.Id
  parent: System.IdentityModel.Policy.AuthorizationContext
  isExternal: false
  name: Id
  nameWithType: AuthorizationContext.Id
  fullName: System.IdentityModel.Policy.AuthorizationContext.Id
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IdentityModel.Policy.AuthorizationContext.Properties
  parent: System.IdentityModel.Policy.AuthorizationContext
  isExternal: false
  name: Properties
  nameWithType: AuthorizationContext.Properties
  fullName: System.IdentityModel.Policy.AuthorizationContext.Properties
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,Object>
  nameWithType: IDictionary<String,Object>
  fullName: System.Collections.Generic.IDictionary<System.String,System.Object>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Policy.AuthorizationContext.#ctor*
  parent: System.IdentityModel.Policy.AuthorizationContext
  isExternal: false
  name: AuthorizationContext
  nameWithType: AuthorizationContext.AuthorizationContext
- uid: System.IdentityModel.Policy.AuthorizationContext.ClaimSets*
  parent: System.IdentityModel.Policy.AuthorizationContext
  isExternal: false
  name: ClaimSets
  nameWithType: AuthorizationContext.ClaimSets
- uid: System.IdentityModel.Policy.AuthorizationContext.CreateDefaultAuthorizationContext*
  parent: System.IdentityModel.Policy.AuthorizationContext
  isExternal: false
  name: CreateDefaultAuthorizationContext
  nameWithType: AuthorizationContext.CreateDefaultAuthorizationContext
- uid: System.IdentityModel.Policy.AuthorizationContext.ExpirationTime*
  parent: System.IdentityModel.Policy.AuthorizationContext
  isExternal: false
  name: ExpirationTime
  nameWithType: AuthorizationContext.ExpirationTime
- uid: System.IdentityModel.Policy.AuthorizationContext.Id*
  parent: System.IdentityModel.Policy.AuthorizationContext
  isExternal: false
  name: Id
  nameWithType: AuthorizationContext.Id
- uid: System.IdentityModel.Policy.AuthorizationContext.Properties*
  parent: System.IdentityModel.Policy.AuthorizationContext
  isExternal: false
  name: Properties
  nameWithType: AuthorizationContext.Properties
