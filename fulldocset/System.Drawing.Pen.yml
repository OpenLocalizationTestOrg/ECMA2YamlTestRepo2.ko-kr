### YamlMime:ManagedReference
items:
- uid: System.Drawing.Pen
  id: Pen
  children:
  - System.Drawing.Pen.#ctor(System.Drawing.Brush)
  - System.Drawing.Pen.#ctor(System.Drawing.Color)
  - System.Drawing.Pen.#ctor(System.Drawing.Brush,System.Single)
  - System.Drawing.Pen.#ctor(System.Drawing.Color,System.Single)
  - System.Drawing.Pen.Alignment
  - System.Drawing.Pen.Brush
  - System.Drawing.Pen.Clone
  - System.Drawing.Pen.Color
  - System.Drawing.Pen.CompoundArray
  - System.Drawing.Pen.CustomEndCap
  - System.Drawing.Pen.CustomStartCap
  - System.Drawing.Pen.DashCap
  - System.Drawing.Pen.DashOffset
  - System.Drawing.Pen.DashPattern
  - System.Drawing.Pen.DashStyle
  - System.Drawing.Pen.Dispose
  - System.Drawing.Pen.EndCap
  - System.Drawing.Pen.Finalize
  - System.Drawing.Pen.LineJoin
  - System.Drawing.Pen.MiterLimit
  - System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix)
  - System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)
  - System.Drawing.Pen.PenType
  - System.Drawing.Pen.ResetTransform
  - System.Drawing.Pen.RotateTransform(System.Single)
  - System.Drawing.Pen.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)
  - System.Drawing.Pen.ScaleTransform(System.Single,System.Single)
  - System.Drawing.Pen.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  - System.Drawing.Pen.SetLineCap(System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.DashCap)
  - System.Drawing.Pen.StartCap
  - System.Drawing.Pen.Transform
  - System.Drawing.Pen.TranslateTransform(System.Single,System.Single)
  - System.Drawing.Pen.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  - System.Drawing.Pen.Width
  langs:
  - csharp
  name: Pen
  nameWithType: Pen
  fullName: System.Drawing.Pen
  type: Class
  summary: "선 및 곡선을 그리는 데 사용 되는 개체를 정의 합니다. 이 클래스는 상속 될 수 없습니다."
  remarks: "펜에 지정 된 너비 및 스타일 선을 그립니다. 사용 하 여는 <xref:System.Drawing.Drawing2D.DashStyle>속성을 몇 가지 종류의 파선 그리기.</xref:System.Drawing.Drawing2D.DashStyle> 펜 그려진 선은 단색, 질감을 포함 하 여 채우기 스타일의 다양 한에 채울 수 있습니다. 채우기 스타일은 채우기 개체로 사용 되는 브러시 또는 질감에 따라 달라 집니다."
  example:
  - "The following code example demonstrates constructing a Pen with a <xref:System.Drawing.Pen.Brush%2A> and the effects of setting the <xref:System.Drawing.Pen.LineJoin%2A> property on a Pen.  \n  \n This example is designed to be used with Windows Forms. Paste the code into a form and call the `ShowLineJoin` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.PensExample#1](~/add/codesnippet/csharp/t-system.drawing.pen_1.cs)]\n [!code-vb[System.Drawing.PensExample#1](~/add/codesnippet/visualbasic/t-system.drawing.pen_1.vb)]\n [!code-cpp[System.Drawing.PensExample#1](~/add/codesnippet/cpp/t-system.drawing.pen_1.cpp)]"
  syntax:
    content: 'public sealed class Pen : MarshalByRefObject, ICloneable, IDisposable'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  implements:
  - System.ICloneable
  - System.IDisposable
  inheritedMembers:
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Drawing.Pen.#ctor(System.Drawing.Brush)
  id: '#ctor(System.Drawing.Brush)'
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: Pen(Brush)
  nameWithType: Pen.Pen(Brush)
  fullName: System.Drawing.Pen.Pen(Brush)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Drawing.Pen&quot;> </xref> 지정된 된 <xref href=&quot;System.Drawing.Brush&quot;> </xref>합니다."
  remarks: "<xref:System.Drawing.Pen.Brush%2A>속성 결정 방법을 <xref:System.Drawing.Pen>선을 그립니다.</xref:System.Drawing.Pen> </xref:System.Drawing.Pen.Brush%2A> 지정 된 <xref:System.Drawing.Brush>.</xref:System.Drawing.Brush> 특징을 가진 채워진 사각형과 마치 선이 그려 졌       <xref:System.Drawing.Pen.Width%2A>새 속성 <xref:System.Drawing.Pen>1 (기본값)로 설정 됩니다.</xref:System.Drawing.Pen> </xref:System.Drawing.Pen.Width%2A>"
  example:
  - "The following code example demonstrates constructing a <xref:System.Drawing.Pen> with a <xref:System.Drawing.Pen.Brush%2A> and the effects of setting the <xref:System.Drawing.Pen.LineJoin%2A> property on a <xref:System.Drawing.Pen>.  \n  \n This example is designed to be used with Windows Forms. Paste the code into a form and call the `ShowLineJoin` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.PensExample#1](~/add/codesnippet/csharp/m-system.drawing.pen.sha_2_1.cs)]\n [!code-vb[System.Drawing.PensExample#1](~/add/codesnippet/visualbasic/m-system.drawing.pen.sha_2_1.vb)]\n [!code-cpp[System.Drawing.PensExample#1](~/add/codesnippet/cpp/m-system.drawing.pen.sha_2_1.cpp)]"
  syntax:
    content: public Pen (System.Drawing.Brush brush);
    parameters:
    - id: brush
      type: System.Drawing.Brush
      description: "A <xref href=&quot;System.Drawing.Brush&quot;> </xref> 의 채우기 속성을 결정 하는 <xref href=&quot;System.Drawing.Pen&quot;> </xref>합니다."
  overload: System.Drawing.Pen.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>brush</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Pen.#ctor(System.Drawing.Color)
  id: '#ctor(System.Drawing.Color)'
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: Pen(Color)
  nameWithType: Pen.Pen(Color)
  fullName: System.Drawing.Pen.Pen(Color)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Drawing.Pen&quot;> </xref> 지정 된 색을 사용 하 여 클래스입니다."
  remarks: "<xref:System.Drawing.Color>속성으로 지정 된 색으로 설정 되 고 `color` 매개 변수.</xref:System.Drawing.Color> <xref:System.Drawing.Pen.Width%2A>속성이 1 (기본값)로 설정 됩니다.</xref:System.Drawing.Pen.Width%2A>"
  syntax:
    content: public Pen (System.Drawing.Color color);
    parameters:
    - id: color
      type: System.Drawing.Color
      description: "A <xref href=&quot;System.Drawing.Color&quot;> </xref> 의 색을 나타내는 구조 <xref href=&quot;System.Drawing.Pen&quot;> </xref>합니다."
  overload: System.Drawing.Pen.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Pen.#ctor(System.Drawing.Brush,System.Single)
  id: '#ctor(System.Drawing.Brush,System.Single)'
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: Pen(Brush,Single)
  nameWithType: Pen.Pen(Brush,Single)
  fullName: System.Drawing.Pen.Pen(Brush,Single)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Drawing.Pen&quot;> </xref> 지정된 된 <xref href=&quot;System.Drawing.Brush&quot;> </xref> 및 <xref:System.Drawing.Pen.Width*>.</xref:System.Drawing.Pen.Width*>"
  remarks: "<xref:System.Drawing.Brush>에 지정 된 색으로 설정는 `brush` 매개 변수는 <xref:System.Drawing.Pen.Width%2A>속성에 지정 된 값으로 설정 되는 `width` 매개 변수 및 단위 <xref:System.Drawing.GraphicsUnit>.</xref:System.Drawing.GraphicsUnit> 로 설정 되어</xref:System.Drawing.Pen.Width%2A> </xref:System.Drawing.Brush>       `brush` 매개 변수는 또한 <xref:System.Drawing.Color> <xref:System.Drawing.Pen>.</xref:System.Drawing.Pen> 속성</xref:System.Drawing.Color> 지정       A `width` 0 됩니다는 <xref:System.Drawing.Pen>너비가 1 인 것 처럼 그릴.</xref:System.Drawing.Pen>"
  example:
  - "The following code example creates a <xref:System.Drawing.Pen> and demonstrates the effects of setting the <xref:System.Drawing.Pen.StartCap%2A> and <xref:System.Drawing.Pen.EndCap%2A> properties on a <xref:System.Drawing.Pen>.  \n  \n This example is designed to be used with Windows Forms. Paste the code into a form and call the `ShowStartAndEndCaps` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.ImageExample#3](~/add/codesnippet/csharp/m-system.drawing.pen.sha_0_1.cs)]\n [!code-cpp[System.Drawing.ImageExample#3](~/add/codesnippet/cpp/m-system.drawing.pen.sha_0_1.cpp)]\n [!code-vb[System.Drawing.ImageExample#3](~/add/codesnippet/visualbasic/m-system.drawing.pen.sha_0_1.vb)]"
  syntax:
    content: public Pen (System.Drawing.Brush brush, float width);
    parameters:
    - id: brush
      type: System.Drawing.Brush
      description: "A <xref href=&quot;System.Drawing.Brush&quot;> </xref> 이 특성을 결정 하는 <xref href=&quot;System.Drawing.Pen&quot;> </xref>합니다."
    - id: width
      type: System.Single
      description: "새 너비 <xref href=&quot;System.Drawing.Pen&quot;> </xref>합니다."
  overload: System.Drawing.Pen.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>brush</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Pen.#ctor(System.Drawing.Color,System.Single)
  id: '#ctor(System.Drawing.Color,System.Single)'
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: Pen(Color,Single)
  nameWithType: Pen.Pen(Color,Single)
  fullName: System.Drawing.Pen.Pen(Color,Single)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Drawing.Pen&quot;> </xref> 지정된 된 <xref href=&quot;System.Drawing.Color&quot;> </xref> 및 <xref:System.Drawing.Pen.Width*>속성.</xref:System.Drawing.Pen.Width*>"
  remarks: "<xref:System.Drawing.Color>속성으로 지정 된 색으로 설정 되 고 `color` 매개 변수.</xref:System.Drawing.Color> <xref:System.Drawing.Pen.Width%2A>속성에 지정 된 값으로 설정 되 고 `width` 매개 변수.</xref:System.Drawing.Pen.Width%2A> A `width` 0 됩니다는 <xref:System.Drawing.Pen>너비가 1 인 것 처럼 그릴.</xref:System.Drawing.Pen>"
  example:
  - "The following code example demonstrates creating a <xref:System.Drawing.Pen> and the effects of setting the <xref:System.Drawing.Pen.DashCap%2A>, <xref:System.Drawing.Pen.DashPattern%2A>, and <xref:System.Drawing.Graphics.SmoothingMode%2A> properties.  \n  \n This example is designed to be used with Windows Forms. Paste the code into a form and call the `ShowPensAndSmoothingMode` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing e as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.PensExample#3](~/add/codesnippet/csharp/m-system.drawing.pen.sha_1_1.cs)]\n [!code-vb[System.Drawing.PensExample#3](~/add/codesnippet/visualbasic/m-system.drawing.pen.sha_1_1.vb)]\n [!code-cpp[System.Drawing.PensExample#3](~/add/codesnippet/cpp/m-system.drawing.pen.sha_1_1.cpp)]"
  syntax:
    content: public Pen (System.Drawing.Color color, float width);
    parameters:
    - id: color
      type: System.Drawing.Color
      description: "A <xref href=&quot;System.Drawing.Color&quot;> </xref> 의 색을 나타내는 구조 <xref href=&quot;System.Drawing.Pen&quot;> </xref>합니다."
    - id: width
      type: System.Single
      description: "이 항목의 너비를 나타내는 값을 <xref href=&quot;System.Drawing.Pen&quot;> </xref>합니다."
  overload: System.Drawing.Pen.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Pen.Alignment
  id: Alignment
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: Alignment
  nameWithType: Pen.Alignment
  fullName: System.Drawing.Pen.Alignment
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이 대 한 맞춤을 가져오거나 설정 합니다. <xref href=&quot;System.Drawing.Pen&quot;> </xref>합니다."
  remarks: "이 속성은 결정 방법을 <xref:System.Drawing.Pen>폐곡선 및 다각형을 그립니다.</xref:System.Drawing.Pen> 하지만 <xref:System.Drawing.Drawing2D.PenAlignment>열거형&5; 개 값을 지정 합니다. 즉 두 개의 값-<xref:System.Drawing.Drawing2D.PenAlignment> 및 <xref:System.Drawing.Drawing2D.PenAlignment>-그려진된 선은의 모양을 변경 됩니다.</xref:System.Drawing.Drawing2D.PenAlignment> </xref:System.Drawing.Drawing2D.PenAlignment> </xref:System.Drawing.Drawing2D.PenAlignment> <xref:System.Drawing.Drawing2D.PenAlignment>이 속성에 대 한 기본 값 이며 펜의 너비는 가운데 곡선 또는 다각형의 개요에는 지정 합니다.</xref:System.Drawing.Drawing2D.PenAlignment> 값이 <xref:System.Drawing.Drawing2D.PenAlignment>이 속성의 펜 너비 곡선 또는 다각형의 개요 내 임을 지정에 대 한.</xref:System.Drawing.Drawing2D.PenAlignment> 다른 세 가지 값, <xref:System.Drawing.Drawing2D.PenAlignment>, <xref:System.Drawing.Drawing2D.PenAlignment>, 및 <xref:System.Drawing.Drawing2D.PenAlignment>, 가운데 표시 되는 펜을 발생 합니다.</xref:System.Drawing.Drawing2D.PenAlignment> </xref:System.Drawing.Drawing2D.PenAlignment> </xref:System.Drawing.Drawing2D.PenAlignment>       A <xref:System.Drawing.Pen>로 설정 맞춤이 <xref:System.Drawing.Drawing2D.PenAlignment>경우에 따라 삽입 된 위치 및 경우도 고 가운데 위치에 그리기, 신뢰할 수 없는 결과 생성 합니다.</xref:System.Drawing.Drawing2D.PenAlignment> </xref:System.Drawing.Pen> 또한 삽입 펜 복합 선을 그리는 데 사용할 수 없습니다. 하며 <xref:System.Drawing.Drawing2D.DashCap>대시 대문자로</xref:System.Drawing.Drawing2D.DashCap> 파선된 선 그리기 수 없습니다."
  syntax:
    content: public System.Drawing.Drawing2D.PenAlignment Alignment { get; set; }
    return:
      type: System.Drawing.Drawing2D.PenAlignment
      description: "A <xref href=&quot;System.Drawing.Drawing2D.PenAlignment&quot;> </xref> 맞춤을 나타내는 <xref href=&quot;System.Drawing.Pen&quot;> </xref>합니다."
  overload: System.Drawing.Pen.Alignment*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "지정된 된 값의 구성원이 아닙니다. <xref href=&quot;System.Drawing.Drawing2D.PenAlignment&quot;> </xref>합니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "맞춤 속성은 변경할 수 없는에 설정 <xref href=&quot;System.Drawing.Pen&quot;> </xref>, 반환한는 <xref href=&quot;System.Drawing.Pens&quot;> </xref> 클래스입니다."
  platform:
  - net462
- uid: System.Drawing.Pen.Brush
  id: Brush
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: Brush
  nameWithType: Pen.Brush
  fullName: System.Drawing.Pen.Brush
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "가져오거나는 <xref href=&quot;System.Drawing.Brush&quot;> </xref> 의 특성을 결정 하는 <xref href=&quot;System.Drawing.Pen&quot;> </xref>합니다."
  remarks: "이 속성을 할당 하면를 채워진 선과 곡선을 그리는 펜입니다. <xref:System.Drawing.Color> <xref:System.Drawing.Pen>.</xref:System.Drawing.Pen> 의 속성</xref:System.Drawing.Color> 을 재정의합니다"
  syntax:
    content: public System.Drawing.Brush Brush { get; set; }
    return:
      type: System.Drawing.Brush
      description: "A <xref href=&quot;System.Drawing.Brush&quot;> </xref> 의 특성을 결정 하는 <xref href=&quot;System.Drawing.Pen&quot;> </xref>합니다."
  overload: System.Drawing.Pen.Brush*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "브러시 속성은 변경할 수 없는에 설정 <xref href=&quot;System.Drawing.Pen&quot;> </xref>, 반환한는 <xref href=&quot;System.Drawing.Pens&quot;> </xref> 클래스입니다."
  platform:
  - net462
- uid: System.Drawing.Pen.Clone
  id: Clone
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: Clone()
  nameWithType: Pen.Clone()
  fullName: System.Drawing.Pen.Clone()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이 항목의 정확한 복사본을 만듭니다 <xref href=&quot;System.Drawing.Pen&quot;> </xref>합니다."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a <xref:System.Drawing.Pen>.  \n  \n-   Creates a copy of that pen.  \n  \n-   Draws a line to the screen, using the copy of the pen.  \n  \n [!code-cpp[System.Drawing.ClassicPenExamples#1](~/add/codesnippet/cpp/m-system.drawing.pen.clone_1.cpp)]\n [!code-cs[System.Drawing.ClassicPenExamples#1](~/add/codesnippet/csharp/m-system.drawing.pen.clone_1.cs)]\n [!code-vb[System.Drawing.ClassicPenExamples#1](~/add/codesnippet/visualbasic/m-system.drawing.pen.clone_1.vb)]"
  syntax:
    content: public object Clone ();
    parameters: []
    return:
      type: System.Object
      description: "<xref:System.Object>으로 캐스팅 될 수는 <xref href=&quot;System.Drawing.Pen&quot;> </xref>.</xref:System.Object>"
  overload: System.Drawing.Pen.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Pen.Color
  id: Color
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: Color
  nameWithType: Pen.Color
  fullName: System.Drawing.Pen.Color
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "색을 가져오거나 설정 합니다. <xref href=&quot;System.Drawing.Pen&quot;> </xref>합니다."
  syntax:
    content: public System.Drawing.Color Color { get; set; }
    return:
      type: System.Drawing.Color
      description: "A <xref href=&quot;System.Drawing.Color&quot;> </xref> 의 색을 나타내는 구조 <xref href=&quot;System.Drawing.Pen&quot;> </xref>합니다."
  overload: System.Drawing.Pen.Color*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "색 속성에 변경할 수 없는 <xref href=&quot;System.Drawing.Pen&quot;> </xref>, 반환한는 <xref href=&quot;System.Drawing.Pens&quot;> </xref> 클래스입니다."
  platform:
  - net462
- uid: System.Drawing.Pen.CompoundArray
  id: CompoundArray
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: CompoundArray
  nameWithType: Pen.CompoundArray
  fullName: System.Drawing.Pen.CompoundArray
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "복합 펜을 지정 하는 값의 배열을 가져오거나 설정 합니다. 복합 펜은 평행선과 공백으로 이루어진 복합 선을 그립니다."
  remarks: "복합 선은의 평행선과 공백으로 너비가 다양 한 대체 구성 됩니다. 배열의 값 펜의 너비를 기준으로 복합 줄의 각 구성 요소 시작 지점을 지정합니다. 펜의 너비에 가로로 첫 번째 구성 요소 (행) 거리의 부분으로 시작 하는 위치를 지정 하는 배열의 첫 번째 값입니다. 배열에서 두 번째 값의 펜 너비에 가로로 거리의 부분으로 다음 구성 요소 (공백)의 시작 부분을 지정합니다. 배열의 마지막 값 마지막 구성 요소 끝나는 위치를 지정 합니다.       두 줄을 구분 하는 간격 너비는 펜의 50%의 첫 번째 줄은 너비 펜의 너비의 20% 인 두 개의 병렬 선을 그리는 펜 한다고 가정 &quot; s 너비 및 두 번째 줄은 너비는 30%의 펜의 너비입니다. 만들어 시작는 <xref:System.Drawing.Pen>및 실수의 배열입니다.</xref:System.Drawing.Pen> 이 속성에 값이 0.0, 0.2, 0.7과 1.0을 사용 하 여 배열을 전달 하 여 복합 배열을 설정 합니다.       경우이 속성을 설정 하지 않으면 <xref:System.Drawing.Pen>해당 <xref:System.Drawing.Pen.Alignment%2A>속성이 <xref:System.Drawing.Drawing2D.PenAlignment>.</xref:System.Drawing.Drawing2D.PenAlignment> 로 설정</xref:System.Drawing.Pen.Alignment%2A> </xref:System.Drawing.Pen>"
  syntax:
    content: public float[] CompoundArray { get; set; }
    return:
      type: System.Single[]
      description: "복합 배열을 지정 하는 실수의 배열입니다. 배열의 요소 순서를 0 보다 작거나, 1 보다 크지 않아야 하며 오름차순 이어야 합니다."
  overload: System.Drawing.Pen.CompoundArray*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "변경 불가능 CompoundArray 속성이 설정 되어 <xref href=&quot;System.Drawing.Pen&quot;> </xref>, 반환한는 <xref href=&quot;System.Drawing.Pens&quot;> </xref> 클래스입니다."
  platform:
  - net462
- uid: System.Drawing.Pen.CustomEndCap
  id: CustomEndCap
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: CustomEndCap
  nameWithType: Pen.CustomEndCap
  fullName: System.Drawing.Pen.CustomEndCap
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이 사용 하 여 그리는 선의 끝에 사용 하도록 사용자 지정 단면을 가져오거나 설정 합니다. <xref href=&quot;System.Drawing.Pen&quot;> </xref>합니다."
  syntax:
    content: public System.Drawing.Drawing2D.CustomLineCap CustomEndCap { get; set; }
    return:
      type: System.Drawing.Drawing2D.CustomLineCap
      description: "A <xref href=&quot;System.Drawing.Drawing2D.CustomLineCap&quot;> </xref> 을 사용 하 여 그리는 선의 끝에 사용 되는 단면을 나타내는 <xref href=&quot;System.Drawing.Pen&quot;> </xref>합니다."
  overload: System.Drawing.Pen.CustomEndCap*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "변경 불가능 CustomEndCap 속성이 설정 되어 <xref href=&quot;System.Drawing.Pen&quot;> </xref>, 반환한는 <xref href=&quot;System.Drawing.Pens&quot;> </xref> 클래스입니다."
  platform:
  - net462
- uid: System.Drawing.Pen.CustomStartCap
  id: CustomStartCap
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: CustomStartCap
  nameWithType: Pen.CustomStartCap
  fullName: System.Drawing.Pen.CustomStartCap
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이 사용 하 여 그리는 선의 시작에서 사용 하는 사용자 지정 단면을 가져오거나 설정 합니다. <xref href=&quot;System.Drawing.Pen&quot;> </xref>합니다."
  syntax:
    content: public System.Drawing.Drawing2D.CustomLineCap CustomStartCap { get; set; }
    return:
      type: System.Drawing.Drawing2D.CustomLineCap
      description: "A <xref href=&quot;System.Drawing.Drawing2D.CustomLineCap&quot;> </xref> 을 사용 하 여 그리는 선의 시작에 사용 되는 단면을 나타내는 <xref href=&quot;System.Drawing.Pen&quot;> </xref>합니다."
  overload: System.Drawing.Pen.CustomStartCap*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "변경 불가능 CustomStartCap 속성이 설정 되어 <xref href=&quot;System.Drawing.Pen&quot;> </xref>, 반환한는 <xref href=&quot;System.Drawing.Pens&quot;> </xref> 클래스입니다."
  platform:
  - net462
- uid: System.Drawing.Pen.DashCap
  id: DashCap
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: DashCap
  nameWithType: Pen.DashCap
  fullName: System.Drawing.Pen.DashCap
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이 사용 하 여 그리는 파선을 구성 하는 대시의 끝에 사용 되는 단면 스타일을 가져오거나 설정 합니다. <xref href=&quot;System.Drawing.Pen&quot;> </xref>합니다."
  remarks: "이 속성을 설정 하지 마십시오 <xref:System.Drawing.Drawing2D.DashCap>경우 <xref:System.Drawing.Pen>해당 <xref:System.Drawing.Pen.Alignment%2A>속성이 설정 <xref:System.Drawing.Drawing2D.PenAlignment>.</xref:System.Drawing.Drawing2D.PenAlignment> </xref:System.Drawing.Pen.Alignment%2A> </xref:System.Drawing.Pen> </xref:System.Drawing.Drawing2D.DashCap>"
  example:
  - "The following code example demonstrates creating a <xref:System.Drawing.Pen> and the effects of setting the DashCap, <xref:System.Drawing.Pen.DashPattern%2A>, and <xref:System.Drawing.Graphics.SmoothingMode%2A> properties.  \n  \n This example is designed to be used with Windows Forms. Paste the code into a form and call the `ShowPensAndSmoothingMode` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.PensExample#3](~/add/codesnippet/csharp/p-system.drawing.pen.das_0_1.cs)]\n [!code-vb[System.Drawing.PensExample#3](~/add/codesnippet/visualbasic/p-system.drawing.pen.das_0_1.vb)]\n [!code-cpp[System.Drawing.PensExample#3](~/add/codesnippet/cpp/p-system.drawing.pen.das_0_1.cpp)]"
  syntax:
    content: public System.Drawing.Drawing2D.DashCap DashCap { get; set; }
    return:
      type: System.Drawing.Drawing2D.DashCap
      description: "중 하나는 <xref href=&quot;System.Drawing.Drawing2D.DashCap&quot;> </xref> 값을 사용 하 여 그리는 파선을 구성 하는 대시의 시작과 끝에 사용 되는 단면 스타일을 나타내는 <xref href=&quot;System.Drawing.Pen&quot;> </xref>합니다."
  overload: System.Drawing.Pen.DashCap*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "지정된 된 값의 구성원이 아닙니다. <xref href=&quot;System.Drawing.Drawing2D.DashCap&quot;> </xref>합니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "변경 불가능 DashCap 속성이 설정 되어 <xref href=&quot;System.Drawing.Pen&quot;> </xref>, 반환한는 <xref href=&quot;System.Drawing.Pens&quot;> </xref> 클래스입니다."
  platform:
  - net462
- uid: System.Drawing.Pen.DashOffset
  id: DashOffset
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: DashOffset
  nameWithType: Pen.DashOffset
  fullName: System.Drawing.Pen.DashOffset
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "선의 시작에서 대시 패턴의 시작 부분에는 거리를 가져오거나 설정 합니다."
  syntax:
    content: public float DashOffset { get; set; }
    return:
      type: System.Single
      description: "선의 시작에서 대시 패턴의 시작 부분에 거리입니다."
  overload: System.Drawing.Pen.DashOffset*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "변경 불가능 DashOffset 속성이 설정 되어 <xref href=&quot;System.Drawing.Pen&quot;> </xref>, 반환한는 <xref href=&quot;System.Drawing.Pens&quot;> </xref> 클래스입니다."
  platform:
  - net462
- uid: System.Drawing.Pen.DashPattern
  id: DashPattern
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: DashPattern
  nameWithType: Pen.DashPattern
  fullName: System.Drawing.Pen.DashPattern
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "사용자 지정 대시와 공백의 배열을 가져오거나 설정 합니다."
  remarks: "이외의 다른 값을 할당 `null` 이 속성에 <xref:System.Drawing.Drawing2D.DashStyle> <xref:System.Drawing.Pen> <xref:System.Drawing.Drawing2D.DashStyle>.</xref:System.Drawing.Drawing2D.DashStyle> </xref:System.Drawing.Pen> 에 대 한 속성</xref:System.Drawing.Drawing2D.DashStyle> 을 설정 합니다       요소는 `dashArray` 배열 대시 패턴에서 각 대시와의 길이 설정 합니다. 대시의 길이 설정 하는 첫 번째 요소, 두 번째 요소는 공간의 길이 설정, 대시 및 등의 길이 설정 하는 세 번째 요소. 따라서 각 요소는&0;이 아닌 양수 여야 합니다.       각 대시와 대시 패턴에서의 길이가 배열의 요소 값의 곱을 <xref:System.Drawing.Pen>.</xref:System.Drawing.Pen> 너비"
  example:
  - "The following code example demonstrates the effects of setting the <xref:System.Drawing.Pen.DashCap%2A>, DashPattern, and <xref:System.Drawing.Graphics.SmoothingMode%2A> properties.  \n  \n This example is designed to be used with Windows Forms. Paste the code into a form and call the `ShowPensAndSmoothingMode` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.PensExample#3](~/add/codesnippet/csharp/p-system.drawing.pen.das_1_1.cs)]\n [!code-vb[System.Drawing.PensExample#3](~/add/codesnippet/visualbasic/p-system.drawing.pen.das_1_1.vb)]\n [!code-cpp[System.Drawing.PensExample#3](~/add/codesnippet/cpp/p-system.drawing.pen.das_1_1.cpp)]"
  syntax:
    content: public float[] DashPattern { get; set; }
    return:
      type: System.Single[]
      description: "대시와 공백의 파선에서 교대로 반복 되는 길이 지정 하는 실수의 배열입니다."
  overload: System.Drawing.Pen.DashPattern*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "DashPattern 속성은 변경할 수 없는에 설정 <xref href=&quot;System.Drawing.Pen&quot;> </xref>, 반환한는 <xref href=&quot;System.Drawing.Pens&quot;> </xref> 클래스입니다."
  platform:
  - net462
- uid: System.Drawing.Pen.DashStyle
  id: DashStyle
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: DashStyle
  nameWithType: Pen.DashStyle
  fullName: System.Drawing.Pen.DashStyle
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이 사용 하 여 그리는 파선에 사용 되는 스타일을 가져오거나 설정 합니다. <xref href=&quot;System.Drawing.Pen&quot;> </xref>합니다."
  remarks: "<xref:System.Drawing.Drawing2D.DashStyle>이 속성에 대 한 지정 대시와 공백의 사용자 지정 패턴에서 <xref:System.Drawing.Pen.DashPattern%2A>이 <xref:System.Drawing.Pen>.</xref:System.Drawing.Pen> 여 그리는 선의 모여&1; 속성을</xref:System.Drawing.Pen.DashPattern%2A> 정의 하는</xref:System.Drawing.Drawing2D.DashStyle> 값 이 속성의 값이 <xref:System.Drawing.Drawing2D.DashStyle>의 값과는 <xref:System.Drawing.Pen.DashPattern%2A>속성은 `null`, 펜이.</xref:System.Drawing.Pen.DashPattern%2A> </xref:System.Drawing.Drawing2D.DashStyle>"
  syntax:
    content: public System.Drawing.Drawing2D.DashStyle DashStyle { get; set; }
    return:
      type: System.Drawing.Drawing2D.DashStyle
      description: "A <xref href=&quot;System.Drawing.Drawing2D.DashStyle&quot;> </xref> 사용 하 여 그리는 파선에 사용 되는 스타일을 나타내는 <xref href=&quot;System.Drawing.Pen&quot;> </xref>합니다."
  overload: System.Drawing.Pen.DashStyle*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "변경 불가능 DashStyle 속성이 설정 되어 <xref href=&quot;System.Drawing.Pen&quot;> </xref>, 반환한는 <xref href=&quot;System.Drawing.Pens&quot;> </xref> 클래스입니다."
  platform:
  - net462
- uid: System.Drawing.Pen.Dispose
  id: Dispose
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: Dispose()
  nameWithType: Pen.Dispose()
  fullName: System.Drawing.Pen.Dispose()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "사용 하는 모든 리소스를 해제 <xref href=&quot;System.Drawing.Pen&quot;> </xref>합니다."
  remarks: "이 사용 하는 리소스를 사용 하면 Dispose를 호출 <xref:System.Drawing.Brush>다른 용도에 다시 할당 됩니다.</xref:System.Drawing.Brush>       <xref:System.Drawing.Pen>.</xref:System.Drawing.Pen> 를 사용 하 여 작업을 마쳤으면 Dispose를 호출 합니다. Dispose 메서드는 <xref:System.Drawing.Pen>불안정 한 상태가.</xref:System.Drawing.Pen> Dispose를 호출한 후에 대 한 모든 참조를 해제 해야는 <xref:System.Drawing.Pen>가비지 수집기는 메모리를 회수할 수 있도록 하는 <xref:System.Drawing.Pen>차지한.</xref:System.Drawing.Pen> </xref:System.Drawing.Pen> 자세한 내용은 참조 [관리 되지 않는 리소스 정리](~/add/includes/ajax-current-ext-md.md) 및 [Dispose 메서드를 구현](~/add/includes/ajax-current-ext-md.md)합니다.      > [!NOTE] > <xref:System.Drawing.Pen>.</xref:System.Drawing.Pen> 에 대 한 마지막 참조를 해제 하기 전에 항상 호출 삭제 사용 중인 리소스가 가비지 수집기 호출할 때까지 해제 되지 것입니다 그렇지 않은 경우는 <xref:System.Drawing.Pen>개체의 `Finalize` 메서드.</xref:System.Drawing.Pen>"
  example:
  - "The following code example demonstrates the effects of setting the <xref:System.Drawing.Pen.Width%2A> and <xref:System.Drawing.Pen.LineJoin%2A> properties, and shows how to call the Dispose method for a <xref:System.Drawing.Pen>.  \n  \n This example is designed to be used with Windows Forms. Paste the code into a form and call the `ShowLineJoin` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.PensExample#1](~/add/codesnippet/csharp/m-system.drawing.pen.dis_1.cs)]\n [!code-vb[System.Drawing.PensExample#1](~/add/codesnippet/visualbasic/m-system.drawing.pen.dis_1.vb)]\n [!code-cpp[System.Drawing.PensExample#1](~/add/codesnippet/cpp/m-system.drawing.pen.dis_1.cpp)]"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Drawing.Pen.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Pen.EndCap
  id: EndCap
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: EndCap
  nameWithType: Pen.EndCap
  fullName: System.Drawing.Pen.EndCap
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이 사용 하 여 그리는 선의 끝에 사용 되는 단면 스타일을 가져오거나 설정 합니다. <xref href=&quot;System.Drawing.Pen&quot;> </xref>합니다."
  remarks: ''
  example:
  - "The following code example demonstrates the effects of setting the <xref:System.Drawing.Pen.StartCap%2A> and EndCap properties on a <xref:System.Drawing.Pen>.  \n  \n This example is designed to be used with Windows Forms. Paste the code into a form and call the `ShowStartAndEndCaps` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.PensExample#2](~/add/codesnippet/csharp/p-system.drawing.pen.end_1.cs)]\n [!code-vb[System.Drawing.PensExample#2](~/add/codesnippet/visualbasic/p-system.drawing.pen.end_1.vb)]\n [!code-cpp[System.Drawing.PensExample#2](~/add/codesnippet/cpp/p-system.drawing.pen.end_1.cpp)]"
  syntax:
    content: public System.Drawing.Drawing2D.LineCap EndCap { get; set; }
    return:
      type: System.Drawing.Drawing2D.LineCap
      description: "중 하나는 <xref href=&quot;System.Drawing.Drawing2D.LineCap&quot;> </xref> 사용 하 여 그리는 선의 끝에 사용 되는 단면 스타일을 나타내는 값 <xref href=&quot;System.Drawing.Pen&quot;> </xref>합니다."
  overload: System.Drawing.Pen.EndCap*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "지정된 된 값의 구성원이 아닙니다. <xref href=&quot;System.Drawing.Drawing2D.LineCap&quot;> </xref>합니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "변경 불가능 엔드캡을 속성이 설정 되어 <xref href=&quot;System.Drawing.Pen&quot;> </xref>, 반환한는 <xref href=&quot;System.Drawing.Pens&quot;> </xref> 클래스입니다."
  platform:
  - net462
- uid: System.Drawing.Pen.Finalize
  id: Finalize
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: Finalize()
  nameWithType: Pen.Finalize()
  fullName: System.Drawing.Pen.Finalize()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "개체가를 리소스를 해제 하 고 가비지 수집에서 회수 하기 전에 다른 정리 작업을 수행할 수 있습니다."
  syntax:
    content: ~Pen ();
    parameters: []
  overload: System.Drawing.Pen.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Pen.LineJoin
  id: LineJoin
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: LineJoin
  nameWithType: Pen.LineJoin
  fullName: System.Drawing.Pen.LineJoin
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "두 개의 연속선 사용 하 여 그리는 음 스타일을 가져오거나 설정 합니다. <xref href=&quot;System.Drawing.Pen&quot;> </xref>합니다."
  remarks: "선 조인은 두 줄 끝 부분이 만나거나 겹칠으로 구성 되는 일반 영역입니다. 선 조인 스타일 세 가지: 마이터, 빗면 및 반올림 합니다.  선 조인 스타일 <xref:System.Drawing.Pen>개체를 해당 펜을 사용 하 여 그릴 <xref:System.Drawing.Drawing2D.GraphicsPath>개체에 연결 된 모든 행에는 음 스타일 적용 됨을 지정 하면 됩니다. 다음 그림에서는 빗면된 선 조인 예제 결과 보여 줍니다.</xref:System.Drawing.Drawing2D.GraphicsPath> </xref:System.Drawing.Pen>       ![펜](~/add/media/pens5.gif &quot;펜&quot;)"
  example:
  - "The following code example demonstrates the effects of setting the <xref:System.Drawing.Pen.Width%2A> and LineJoin properties on a <xref:System.Drawing.Pen>.  \n  \n This example is designed to be used with Windows Forms. Paste the code into a form and call the `ShowLineJoin` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs> .  \n  \n [!code-cs[System.Drawing.PensExample#1](~/add/codesnippet/csharp/p-system.drawing.pen.lin_1.cs)]\n [!code-vb[System.Drawing.PensExample#1](~/add/codesnippet/visualbasic/p-system.drawing.pen.lin_1.vb)]\n [!code-cpp[System.Drawing.PensExample#1](~/add/codesnippet/cpp/p-system.drawing.pen.lin_1.cpp)]"
  syntax:
    content: public System.Drawing.Drawing2D.LineJoin LineJoin { get; set; }
    return:
      type: System.Drawing.Drawing2D.LineJoin
      description: "A <xref href=&quot;System.Drawing.Drawing2D.LineJoin&quot;> </xref> 두 개의 연속선 사용 하 여 그리는 음 스타일을 나타내는 <xref href=&quot;System.Drawing.Pen&quot;> </xref>합니다."
  overload: System.Drawing.Pen.LineJoin*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "변경 불가능 LineJoin 속성이 설정 되어 <xref href=&quot;System.Drawing.Pen&quot;> </xref>, 반환한는 <xref href=&quot;System.Drawing.Pens&quot;> </xref> 클래스입니다."
  platform:
  - net462
- uid: System.Drawing.Pen.MiterLimit
  id: MiterLimit
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: MiterLimit
  nameWithType: Pen.MiterLimit
  fullName: System.Drawing.Pen.MiterLimit
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이 음 모퉁이 이름 두께 제한을 가져오거나 설정 합니다."
  remarks: "이음이 길이는 조인 밖에의 교차점으로 조인의 내부에 줄 벽의 교집합에서 거리입니다. 두 줄 사이의 각도 작을 때 이음이 길이 클 수 있습니다. 이음이 제한은 스트로크 너비에 대 한 이음이 길이의 허용 된 최대 비율입니다. 기본값은 10.0 f.       교차 조인 이음이 길이 부분의 한계를 초과 하면 조인 교차 조인 제한 내에서 유지 하 입체 됩니다."
  syntax:
    content: public float MiterLimit { get; set; }
    return:
      type: System.Single
      description: "제한의 이름에이 음된 모퉁이 두께입니다."
  overload: System.Drawing.Pen.MiterLimit*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "MiterLimit 속성은 변경할 수 없는에 설정 <xref href=&quot;System.Drawing.Pen&quot;> </xref>, 반환한는 <xref href=&quot;System.Drawing.Pens&quot;> </xref> 클래스입니다."
  platform:
  - net462
- uid: System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix)
  id: MultiplyTransform(System.Drawing.Drawing2D.Matrix)
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: MultiplyTransform(Matrix)
  nameWithType: Pen.MultiplyTransform(Matrix)
  fullName: System.Drawing.Pen.MultiplyTransform(Matrix)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이 대 한 변형 매트릭스를 곱하는 <xref href=&quot;System.Drawing.Pen&quot;> </xref> 지정한 <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref>합니다."
  remarks: "이 메서드에 지정 된 곱하기 매트릭스 앞에 추가 `matrix` 곱하기 작업에 대 한 변형 매트릭스에 매개 변수입니다."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a <xref:System.Drawing.Pen>.  \n  \n-   Draws a line to the screen.  \n  \n-   Multiplies the transformation matrix of the pen by the specified matrix.  \n  \n-   Draws a line with the transformed pen.  \n  \n [!code-cpp[System.Drawing.ClassicPenExamples#2](~/add/codesnippet/cpp/m-system.drawing.pen.mul_1.cpp)]\n [!code-cs[System.Drawing.ClassicPenExamples#2](~/add/codesnippet/csharp/m-system.drawing.pen.mul_1.cs)]\n [!code-vb[System.Drawing.ClassicPenExamples#2](~/add/codesnippet/visualbasic/m-system.drawing.pen.mul_1.vb)]"
  syntax:
    content: public void MultiplyTransform (System.Drawing.Drawing2D.Matrix matrix);
    parameters:
    - id: matrix
      type: System.Drawing.Drawing2D.Matrix
      description: "<xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> 변환 매트릭스에 사용 되는 개체입니다."
  overload: System.Drawing.Pen.MultiplyTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)
  id: MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: MultiplyTransform(Matrix,MatrixOrder)
  nameWithType: Pen.MultiplyTransform(Matrix,MatrixOrder)
  fullName: System.Drawing.Pen.MultiplyTransform(Matrix,MatrixOrder)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이 대 한 변형 매트릭스를 곱하는 <xref href=&quot;System.Drawing.Pen&quot;> </xref> 지정한 <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> 지정 된 순서로 합니다."
  remarks: "이 메서드는 사용 된 <xref:System.Drawing.Drawing2D.MatrixOrder>열거형 요소 (앞에 추가 또는 추가)에 지정 된는 `order` 곱하기 연산을 수행 하는 매개 변수.</xref:System.Drawing.Drawing2D.MatrixOrder>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a <xref:System.Drawing.Pen>.  \n  \n-   Draws a line to the screen.  \n  \n-   Multiplies the transformation matrix of the pen by the specified matrix.  \n  \n-   Draws a line with the transformed pen.  \n  \n [!code-cpp[System.Drawing.ClassicPenExamples#3](~/add/codesnippet/cpp/b3caf9f4-4a37-409d-bccb-_1.cpp)]\n [!code-cs[System.Drawing.ClassicPenExamples#3](~/add/codesnippet/csharp/b3caf9f4-4a37-409d-bccb-_1.cs)]\n [!code-vb[System.Drawing.ClassicPenExamples#3](~/add/codesnippet/visualbasic/b3caf9f4-4a37-409d-bccb-_1.vb)]"
  syntax:
    content: public void MultiplyTransform (System.Drawing.Drawing2D.Matrix matrix, System.Drawing.Drawing2D.MatrixOrder order);
    parameters:
    - id: matrix
      type: System.Drawing.Drawing2D.Matrix
      description: "<xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> 변형 매트릭스를 곱하는 합니다."
    - id: order
      type: System.Drawing.Drawing2D.MatrixOrder
      description: "곱하기 연산을 수행 하는 순서입니다."
  overload: System.Drawing.Pen.MultiplyTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Pen.PenType
  id: PenType
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: PenType
  nameWithType: Pen.PenType
  fullName: System.Drawing.Pen.PenType
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이 사용 하 여 그리는 선의 스타일을 가져옵니다 <xref href=&quot;System.Drawing.Pen&quot;> </xref>합니다."
  remarks: "A <xref:System.Drawing.Pen>실선, 채워진된 선 또는의 멤버에 의해 지정 된 스타일에 따라 질감된 줄을 그릴 수는 <xref:System.Drawing.Drawing2D.PenType>열거형.</xref:System.Drawing.Drawing2D.PenType> </xref:System.Drawing.Pen>"
  syntax:
    content: public System.Drawing.Drawing2D.PenType PenType { get; }
    return:
      type: System.Drawing.Drawing2D.PenType
      description: "A <xref href=&quot;System.Drawing.Drawing2D.PenType&quot;> </xref> 사용 하 여 그리는 선의 스타일을 지정 하는 열거형 <xref href=&quot;System.Drawing.Pen&quot;> </xref>합니다."
  overload: System.Drawing.Pen.PenType*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Pen.ResetTransform
  id: ResetTransform
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: ResetTransform()
  nameWithType: Pen.ResetTransform()
  fullName: System.Drawing.Pen.ResetTransform()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이 대 한 기하학적 변환 매트릭스를 다시 설정 <xref href=&quot;System.Drawing.Pen&quot;> </xref> id입니다."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a <xref:System.Drawing.Pen>.  \n  \n-   Sets the transformation matrix of the pen to scale 2 times in the x-axis direction.  \n  \n-   Draws a line to the screen.  \n  \n-   Resets the transformation matrix to identity.  \n  \n-   Draws a second line to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicPenExamples#4](~/add/codesnippet/cpp/m-system.drawing.pen.res_1.cpp)]\n [!code-cs[System.Drawing.ClassicPenExamples#4](~/add/codesnippet/csharp/m-system.drawing.pen.res_1.cs)]\n [!code-vb[System.Drawing.ClassicPenExamples#4](~/add/codesnippet/visualbasic/m-system.drawing.pen.res_1.vb)]"
  syntax:
    content: public void ResetTransform ();
    parameters: []
  overload: System.Drawing.Pen.ResetTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Pen.RotateTransform(System.Single)
  id: RotateTransform(System.Single)
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: RotateTransform(Single)
  nameWithType: Pen.RotateTransform(Single)
  fullName: System.Drawing.Pen.RotateTransform(Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "로컬 기하학적 변환을 지정 된 각도 만큼 회전합니다. 이 메서드는 회전을 변형 앞에 추가 합니다."
  remarks: "펜의 모양이 순환 이기 때문에 회전 않아도 시각적인 변화 펜 x 또는 y 축 방향으로 조정 된 경우가 아니면 됩니다."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a <xref:System.Drawing.Pen>.  \n  \n-   Draws a rectangle using the pen.  \n  \n-   Scales the pen by 2 times in the x-axis direction.  \n  \n-   Rotates the pen 90 degrees clockwise.  \n  \n-   Draws a second rectangle to demonstrate the difference.  \n  \n [!code-cpp[System.Drawing.ClassicPenExamples#5](~/add/codesnippet/cpp/m-system.drawing.pen.rot_1.cpp)]\n [!code-cs[System.Drawing.ClassicPenExamples#5](~/add/codesnippet/csharp/m-system.drawing.pen.rot_1.cs)]\n [!code-vb[System.Drawing.ClassicPenExamples#5](~/add/codesnippet/visualbasic/m-system.drawing.pen.rot_1.vb)]"
  syntax:
    content: public void RotateTransform (float angle);
    parameters:
    - id: angle
      type: System.Single
      description: "회전 각도입니다."
  overload: System.Drawing.Pen.RotateTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Pen.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)
  id: RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: RotateTransform(Single,MatrixOrder)
  nameWithType: Pen.RotateTransform(Single,MatrixOrder)
  fullName: System.Drawing.Pen.RotateTransform(Single,MatrixOrder)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "로컬 기하학적 변환을 지정 된 순서로 지정 된 각도 만큼 회전합니다."
  remarks: "펜의 모양이 순환 이기 때문에 회전 않아도 시각적인 변화 펜 x 또는 y 축 방향으로 조정 된 경우가 아니면 됩니다."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a <xref:System.Drawing.Pen>.  \n  \n-   Scales the pen by 2 times in the x-axis direction.  \n  \n-   Draws a rectangle using the pen.  \n  \n-   Rotates the pen 90 degrees clockwise.  \n  \n-   Draws a second rectangle to demonstrate the difference.  \n  \n [!code-cpp[System.Drawing.ClassicPenExamples#6](~/add/codesnippet/cpp/35c127d1-4f45-4168-8641-_1.cpp)]\n [!code-cs[System.Drawing.ClassicPenExamples#6](~/add/codesnippet/csharp/35c127d1-4f45-4168-8641-_1.cs)]\n [!code-vb[System.Drawing.ClassicPenExamples#6](~/add/codesnippet/visualbasic/35c127d1-4f45-4168-8641-_1.vb)]"
  syntax:
    content: public void RotateTransform (float angle, System.Drawing.Drawing2D.MatrixOrder order);
    parameters:
    - id: angle
      type: System.Single
      description: "회전 각도입니다."
    - id: order
      type: System.Drawing.Drawing2D.MatrixOrder
      description: "A <xref href=&quot;System.Drawing.Drawing2D.MatrixOrder&quot;> </xref> 하거나 회전 행렬을 추가 여부를 지정 하 합니다."
  overload: System.Drawing.Pen.RotateTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Pen.ScaleTransform(System.Single,System.Single)
  id: ScaleTransform(System.Single,System.Single)
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: ScaleTransform(Single,Single)
  nameWithType: Pen.ScaleTransform(Single,Single)
  fullName: System.Drawing.Pen.ScaleTransform(Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "로컬 기하학적 변형을 지정 된 요소에 따라 확장할 수 있습니다. 이 메서드는 크기 조정 매트릭스를 변형 앞에 추가 합니다."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n Creates a <xref:System.Drawing.Pen>.  \n  \n Draws a rectangle using the pen.  \n  \n Scales the pen by 2 times in the x-axis direction.  \n  \n Draws a second rectangle to demonstrate the difference.  \n  \n [!code-cpp[System.Drawing.ClassicPenExamples#7](~/add/codesnippet/cpp/m-system.drawing.pen.sca_1.cpp)]\n [!code-cs[System.Drawing.ClassicPenExamples#7](~/add/codesnippet/csharp/m-system.drawing.pen.sca_1.cs)]\n [!code-vb[System.Drawing.ClassicPenExamples#7](~/add/codesnippet/visualbasic/m-system.drawing.pen.sca_1.vb)]"
  syntax:
    content: public void ScaleTransform (float sx, float sy);
    parameters:
    - id: sx
      type: System.Single
      description: "X-축 방향으로 변형의 크기를 조정에 사용 되는 인수."
    - id: sy
      type: System.Single
      description: "Y 축 방향으로 변형의 크기를 조정에 사용 되는 인수."
  overload: System.Drawing.Pen.ScaleTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Pen.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  id: ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: ScaleTransform(Single,Single,MatrixOrder)
  nameWithType: Pen.ScaleTransform(Single,Single,MatrixOrder)
  fullName: System.Drawing.Pen.ScaleTransform(Single,Single,MatrixOrder)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "로컬 기하학적 변형을 지정 된 순서로 지정 된 요소에 따라 확장할 수 있습니다."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a <xref:System.Drawing.Pen>.  \n  \n-   Draws a rectangle using the pen.  \n  \n-   Scales the pen by 2 times in the x-axis direction.  \n  \n-   Draws a second rectangle to demonstrate the difference.  \n  \n [!code-cpp[System.Drawing.ClassicPenExamples#8](~/add/codesnippet/cpp/f408f2ab-3827-481d-becb-_1.cpp)]\n [!code-cs[System.Drawing.ClassicPenExamples#8](~/add/codesnippet/csharp/f408f2ab-3827-481d-becb-_1.cs)]\n [!code-vb[System.Drawing.ClassicPenExamples#8](~/add/codesnippet/visualbasic/f408f2ab-3827-481d-becb-_1.vb)]"
  syntax:
    content: public void ScaleTransform (float sx, float sy, System.Drawing.Drawing2D.MatrixOrder order);
    parameters:
    - id: sx
      type: System.Single
      description: "X-축 방향으로 변형의 크기를 조정에 사용 되는 인수."
    - id: sy
      type: System.Single
      description: "Y 축 방향으로 변형의 크기를 조정에 사용 되는 인수."
    - id: order
      type: System.Drawing.Drawing2D.MatrixOrder
      description: "A <xref href=&quot;System.Drawing.Drawing2D.MatrixOrder&quot;> </xref> 하거나 크기 조정 행렬을 추가 여부를 지정 하 합니다."
  overload: System.Drawing.Pen.ScaleTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Pen.SetLineCap(System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.DashCap)
  id: SetLineCap(System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.DashCap)
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: SetLineCap(LineCap,LineCap,DashCap)
  nameWithType: Pen.SetLineCap(LineCap,LineCap,DashCap)
  fullName: System.Drawing.Pen.SetLineCap(LineCap,LineCap,DashCap)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이 그리는 선을 끝내 하는 데 사용 되는 단면 스타일을 결정 하는 값을 설정 <xref href=&quot;System.Drawing.Pen&quot;> </xref>합니다."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code creates a <xref:System.Drawing.Pen> and sets it to draw arrow anchor caps at the beginning of lines:  \n  \n [!code-cpp[System.Drawing.ClassicPenExamples#9](~/add/codesnippet/cpp/40b79849-2bf1-4135-844f-_1.cpp)]\n [!code-cs[System.Drawing.ClassicPenExamples#9](~/add/codesnippet/csharp/40b79849-2bf1-4135-844f-_1.cs)]\n [!code-vb[System.Drawing.ClassicPenExamples#9](~/add/codesnippet/visualbasic/40b79849-2bf1-4135-844f-_1.vb)]"
  syntax:
    content: public void SetLineCap (System.Drawing.Drawing2D.LineCap startCap, System.Drawing.Drawing2D.LineCap endCap, System.Drawing.Drawing2D.DashCap dashCap);
    parameters:
    - id: startCap
      type: System.Drawing.Drawing2D.LineCap
      description: "A <xref href=&quot;System.Drawing.Drawing2D.LineCap&quot;> </xref> 단면 스타일을 사용 하 여 그리는 선의 시작에 사용할 나타내는 <xref href=&quot;System.Drawing.Pen&quot;> </xref>합니다."
    - id: endCap
      type: System.Drawing.Drawing2D.LineCap
      description: "A <xref href=&quot;System.Drawing.Drawing2D.LineCap&quot;> </xref> 사용 하 여 그리는 선의 끝에 사용할 단면 스타일을 나타내는 <xref href=&quot;System.Drawing.Pen&quot;> </xref>합니다."
    - id: dashCap
      type: System.Drawing.Drawing2D.DashCap
      description: "A <xref href=&quot;System.Drawing.Drawing2D.LineCap&quot;> </xref> 부분이 나이 사용 하 여 그리는 파선의 끝 부분에 사용할 단면 스타일을 나타내는 <xref href=&quot;System.Drawing.Pen&quot;> </xref>합니다."
  overload: System.Drawing.Pen.SetLineCap*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Pen.StartCap
  id: StartCap
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: StartCap
  nameWithType: Pen.StartCap
  fullName: System.Drawing.Pen.StartCap
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이 사용 하 여 그리는 선의 시작에 사용 되는 단면 스타일을 가져오거나 설정 합니다. <xref href=&quot;System.Drawing.Pen&quot;> </xref>합니다."
  remarks: ''
  example:
  - "The following code example demonstrates the effects of setting the StartCap and <xref:System.Drawing.Pen.EndCap%2A> properties on a <xref:System.Drawing.Pen>.  \n  \n This example is designed to be used with Windows Forms. Paste the code into a form and call the `ShowStartAndEndCaps` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.PensExample#2](~/add/codesnippet/csharp/p-system.drawing.pen.sta_1.cs)]\n [!code-vb[System.Drawing.PensExample#2](~/add/codesnippet/visualbasic/p-system.drawing.pen.sta_1.vb)]\n [!code-cpp[System.Drawing.PensExample#2](~/add/codesnippet/cpp/p-system.drawing.pen.sta_1.cpp)]"
  syntax:
    content: public System.Drawing.Drawing2D.LineCap StartCap { get; set; }
    return:
      type: System.Drawing.Drawing2D.LineCap
      description: "중 하나는 <xref href=&quot;System.Drawing.Drawing2D.LineCap&quot;> </xref> 값을 사용 하 여 그리는 선의 시작에 사용 되는 단면 스타일을 나타내는 <xref href=&quot;System.Drawing.Pen&quot;> </xref>합니다."
  overload: System.Drawing.Pen.StartCap*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "지정된 된 값의 구성원이 아닙니다. <xref href=&quot;System.Drawing.Drawing2D.LineCap&quot;> </xref>합니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "변경 불가능 StartCap 속성이 설정 되어 <xref href=&quot;System.Drawing.Pen&quot;> </xref>, 반환한는 <xref href=&quot;System.Drawing.Pens&quot;> </xref> 클래스입니다."
  platform:
  - net462
- uid: System.Drawing.Pen.Transform
  id: Transform
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: Transform
  nameWithType: Pen.Transform
  fullName: System.Drawing.Pen.Transform
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이 대 한 기하학적 변형의 복사본을 가져오거나 설정 합니다. <xref href=&quot;System.Drawing.Pen&quot;> </xref>합니다."
  remarks: "이 속성은 펜 팁에 대 한 타원 모양을 정의 합니다. 변형 매트릭스에 적용 하 여이 타원 기본 원 모양에서 가져옵니다. 참고 행렬의 변환 부분은 무시 됩니다. 이기 때문에 반환 하는 매트릭스 변환에 의해 속성 펜의 기하학적 변환의 복사본을 삭제 해야 행렬의 더 이상 필요 합니다."
  syntax:
    content: public System.Drawing.Drawing2D.Matrix Transform { get; set; }
    return:
      type: System.Drawing.Drawing2D.Matrix
      description: "복사본은 <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> 이 대 한 기하학적 변형을 나타내는 <xref href=&quot;System.Drawing.Pen&quot;> </xref>합니다."
  overload: System.Drawing.Pen.Transform*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Transform 속성은 변경할 수 없는에 설정 <xref href=&quot;System.Drawing.Pen&quot;> </xref>, 반환한는 <xref href=&quot;System.Drawing.Pens&quot;> </xref> 클래스입니다."
  platform:
  - net462
- uid: System.Drawing.Pen.TranslateTransform(System.Single,System.Single)
  id: TranslateTransform(System.Single,System.Single)
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: TranslateTransform(Single,Single)
  nameWithType: Pen.TranslateTransform(Single,Single)
  fullName: System.Drawing.Pen.TranslateTransform(Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "로컬 기하학적 변형이 지정된 된 크기 만큼 이동합니다. 이 메서드는 이동을 변환 합니다."
  syntax:
    content: public void TranslateTransform (float dx, float dy);
    parameters:
    - id: dx
      type: System.Single
      description: "x에서 이동 값입니다."
    - id: dy
      type: System.Single
      description: "y에서 이동 값입니다."
  overload: System.Drawing.Pen.TranslateTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Pen.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  id: TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: TranslateTransform(Single,Single,MatrixOrder)
  nameWithType: Pen.TranslateTransform(Single,Single,MatrixOrder)
  fullName: System.Drawing.Pen.TranslateTransform(Single,Single,MatrixOrder)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "로컬 기하학적 변형을 지정 된 순서로 지정된 된 크기 만큼 이동합니다."
  syntax:
    content: public void TranslateTransform (float dx, float dy, System.Drawing.Drawing2D.MatrixOrder order);
    parameters:
    - id: dx
      type: System.Single
      description: "x에서 이동 값입니다."
    - id: dy
      type: System.Single
      description: "y에서 이동 값입니다."
    - id: order
      type: System.Drawing.Drawing2D.MatrixOrder
      description: "순서 (앞에 추가 또는 추가) 변환을 적용 하는 합니다."
  overload: System.Drawing.Pen.TranslateTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Pen.Width
  id: Width
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: Width
  nameWithType: Pen.Width
  fullName: System.Drawing.Pen.Width
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "이 항목의 너비를 가져오거나 설정 합니다. <xref href=&quot;System.Drawing.Pen&quot;> </xref>의 단위는 <xref href=&quot;System.Drawing.Graphics&quot;> </xref> 그리기에 사용 되는 개체입니다."
  remarks: "측정 단위에 액세스할 수 있습니다는 <xref:System.Drawing.Graphics>개체 사용 하 여 해당 <xref:System.Drawing.Graphics.PageUnit%2A>속성.</xref:System.Drawing.Graphics.PageUnit%2A> </xref:System.Drawing.Graphics> 측정 단위는 일반적으로 픽셀입니다. 너비가 0 됩니다는 <xref:System.Drawing.Pen>너비가 1 인 것 처럼 그릴.</xref:System.Drawing.Pen>"
  example:
  - "The following code example demonstrates the effects of setting the Width and <xref:System.Drawing.Pen.LineJoin%2A> properties on a <xref:System.Drawing.Pen>.  \n  \n This example is designed to be used with Windows Forms. Paste the code into a form and call the `ShowLineJoin` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.PensExample#1](~/add/codesnippet/csharp/p-system.drawing.pen.width_1.cs)]\n [!code-vb[System.Drawing.PensExample#1](~/add/codesnippet/visualbasic/p-system.drawing.pen.width_1.vb)]\n [!code-cpp[System.Drawing.PensExample#1](~/add/codesnippet/cpp/p-system.drawing.pen.width_1.cpp)]"
  syntax:
    content: public float Width { get; set; }
    return:
      type: System.Single
      description: "이 너비 <xref href=&quot;System.Drawing.Pen&quot;> </xref>합니다."
  overload: System.Drawing.Pen.Width*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "변경 불가능 Width 속성이 설정 되어 <xref href=&quot;System.Drawing.Pen&quot;> </xref>, 반환한는 <xref href=&quot;System.Drawing.Pens&quot;> </xref> 클래스입니다."
  platform:
  - net462
references:
- uid: System.MarshalByRefObject
  isExternal: false
  name: System.MarshalByRefObject
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ComponentModel.InvalidEnumArgumentException
  parent: System.ComponentModel
  isExternal: false
  name: InvalidEnumArgumentException
  nameWithType: InvalidEnumArgumentException
  fullName: System.ComponentModel.InvalidEnumArgumentException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Drawing.Pen.#ctor(System.Drawing.Brush)
  parent: System.Drawing.Pen
  isExternal: false
  name: Pen(Brush)
  nameWithType: Pen.Pen(Brush)
  fullName: System.Drawing.Pen.Pen(Brush)
- uid: System.Drawing.Brush
  parent: System.Drawing
  isExternal: false
  name: Brush
  nameWithType: Brush
  fullName: System.Drawing.Brush
- uid: System.Drawing.Pen.#ctor(System.Drawing.Color)
  parent: System.Drawing.Pen
  isExternal: false
  name: Pen(Color)
  nameWithType: Pen.Pen(Color)
  fullName: System.Drawing.Pen.Pen(Color)
- uid: System.Drawing.Color
  parent: System.Drawing
  isExternal: false
  name: Color
  nameWithType: Color
  fullName: System.Drawing.Color
- uid: System.Drawing.Pen.#ctor(System.Drawing.Brush,System.Single)
  parent: System.Drawing.Pen
  isExternal: false
  name: Pen(Brush,Single)
  nameWithType: Pen.Pen(Brush,Single)
  fullName: System.Drawing.Pen.Pen(Brush,Single)
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Drawing.Pen.#ctor(System.Drawing.Color,System.Single)
  parent: System.Drawing.Pen
  isExternal: false
  name: Pen(Color,Single)
  nameWithType: Pen.Pen(Color,Single)
  fullName: System.Drawing.Pen.Pen(Color,Single)
- uid: System.Drawing.Pen.Alignment
  parent: System.Drawing.Pen
  isExternal: false
  name: Alignment
  nameWithType: Pen.Alignment
  fullName: System.Drawing.Pen.Alignment
- uid: System.Drawing.Drawing2D.PenAlignment
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: PenAlignment
  nameWithType: PenAlignment
  fullName: System.Drawing.Drawing2D.PenAlignment
- uid: System.Drawing.Pen.Brush
  parent: System.Drawing.Pen
  isExternal: false
  name: Brush
  nameWithType: Pen.Brush
  fullName: System.Drawing.Pen.Brush
- uid: System.Drawing.Pen.Clone
  parent: System.Drawing.Pen
  isExternal: false
  name: Clone()
  nameWithType: Pen.Clone()
  fullName: System.Drawing.Pen.Clone()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Drawing.Pen.Color
  parent: System.Drawing.Pen
  isExternal: false
  name: Color
  nameWithType: Pen.Color
  fullName: System.Drawing.Pen.Color
- uid: System.Drawing.Pen.CompoundArray
  parent: System.Drawing.Pen
  isExternal: false
  name: CompoundArray
  nameWithType: Pen.CompoundArray
  fullName: System.Drawing.Pen.CompoundArray
- uid: System.Single[]
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single[]
  spec.csharp:
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: Single[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Drawing.Pen.CustomEndCap
  parent: System.Drawing.Pen
  isExternal: false
  name: CustomEndCap
  nameWithType: Pen.CustomEndCap
  fullName: System.Drawing.Pen.CustomEndCap
- uid: System.Drawing.Drawing2D.CustomLineCap
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: CustomLineCap
  nameWithType: CustomLineCap
  fullName: System.Drawing.Drawing2D.CustomLineCap
- uid: System.Drawing.Pen.CustomStartCap
  parent: System.Drawing.Pen
  isExternal: false
  name: CustomStartCap
  nameWithType: Pen.CustomStartCap
  fullName: System.Drawing.Pen.CustomStartCap
- uid: System.Drawing.Pen.DashCap
  parent: System.Drawing.Pen
  isExternal: false
  name: DashCap
  nameWithType: Pen.DashCap
  fullName: System.Drawing.Pen.DashCap
- uid: System.Drawing.Drawing2D.DashCap
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: DashCap
  nameWithType: DashCap
  fullName: System.Drawing.Drawing2D.DashCap
- uid: System.Drawing.Pen.DashOffset
  parent: System.Drawing.Pen
  isExternal: false
  name: DashOffset
  nameWithType: Pen.DashOffset
  fullName: System.Drawing.Pen.DashOffset
- uid: System.Drawing.Pen.DashPattern
  parent: System.Drawing.Pen
  isExternal: false
  name: DashPattern
  nameWithType: Pen.DashPattern
  fullName: System.Drawing.Pen.DashPattern
- uid: System.Drawing.Pen.DashStyle
  parent: System.Drawing.Pen
  isExternal: false
  name: DashStyle
  nameWithType: Pen.DashStyle
  fullName: System.Drawing.Pen.DashStyle
- uid: System.Drawing.Drawing2D.DashStyle
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: DashStyle
  nameWithType: DashStyle
  fullName: System.Drawing.Drawing2D.DashStyle
- uid: System.Drawing.Pen.Dispose
  parent: System.Drawing.Pen
  isExternal: false
  name: Dispose()
  nameWithType: Pen.Dispose()
  fullName: System.Drawing.Pen.Dispose()
- uid: System.Drawing.Pen.EndCap
  parent: System.Drawing.Pen
  isExternal: false
  name: EndCap
  nameWithType: Pen.EndCap
  fullName: System.Drawing.Pen.EndCap
- uid: System.Drawing.Drawing2D.LineCap
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: LineCap
  nameWithType: LineCap
  fullName: System.Drawing.Drawing2D.LineCap
- uid: System.Drawing.Pen.Finalize
  parent: System.Drawing.Pen
  isExternal: false
  name: Finalize()
  nameWithType: Pen.Finalize()
  fullName: System.Drawing.Pen.Finalize()
- uid: System.Drawing.Pen.LineJoin
  parent: System.Drawing.Pen
  isExternal: false
  name: LineJoin
  nameWithType: Pen.LineJoin
  fullName: System.Drawing.Pen.LineJoin
- uid: System.Drawing.Drawing2D.LineJoin
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: LineJoin
  nameWithType: LineJoin
  fullName: System.Drawing.Drawing2D.LineJoin
- uid: System.Drawing.Pen.MiterLimit
  parent: System.Drawing.Pen
  isExternal: false
  name: MiterLimit
  nameWithType: Pen.MiterLimit
  fullName: System.Drawing.Pen.MiterLimit
- uid: System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix)
  parent: System.Drawing.Pen
  isExternal: false
  name: MultiplyTransform(Matrix)
  nameWithType: Pen.MultiplyTransform(Matrix)
  fullName: System.Drawing.Pen.MultiplyTransform(Matrix)
- uid: System.Drawing.Drawing2D.Matrix
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: Matrix
  nameWithType: Matrix
  fullName: System.Drawing.Drawing2D.Matrix
- uid: System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Pen
  isExternal: false
  name: MultiplyTransform(Matrix,MatrixOrder)
  nameWithType: Pen.MultiplyTransform(Matrix,MatrixOrder)
  fullName: System.Drawing.Pen.MultiplyTransform(Matrix,MatrixOrder)
- uid: System.Drawing.Drawing2D.MatrixOrder
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: MatrixOrder
  nameWithType: MatrixOrder
  fullName: System.Drawing.Drawing2D.MatrixOrder
- uid: System.Drawing.Pen.PenType
  parent: System.Drawing.Pen
  isExternal: false
  name: PenType
  nameWithType: Pen.PenType
  fullName: System.Drawing.Pen.PenType
- uid: System.Drawing.Drawing2D.PenType
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: PenType
  nameWithType: PenType
  fullName: System.Drawing.Drawing2D.PenType
- uid: System.Drawing.Pen.ResetTransform
  parent: System.Drawing.Pen
  isExternal: false
  name: ResetTransform()
  nameWithType: Pen.ResetTransform()
  fullName: System.Drawing.Pen.ResetTransform()
- uid: System.Drawing.Pen.RotateTransform(System.Single)
  parent: System.Drawing.Pen
  isExternal: false
  name: RotateTransform(Single)
  nameWithType: Pen.RotateTransform(Single)
  fullName: System.Drawing.Pen.RotateTransform(Single)
- uid: System.Drawing.Pen.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Pen
  isExternal: false
  name: RotateTransform(Single,MatrixOrder)
  nameWithType: Pen.RotateTransform(Single,MatrixOrder)
  fullName: System.Drawing.Pen.RotateTransform(Single,MatrixOrder)
- uid: System.Drawing.Pen.ScaleTransform(System.Single,System.Single)
  parent: System.Drawing.Pen
  isExternal: false
  name: ScaleTransform(Single,Single)
  nameWithType: Pen.ScaleTransform(Single,Single)
  fullName: System.Drawing.Pen.ScaleTransform(Single,Single)
- uid: System.Drawing.Pen.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Pen
  isExternal: false
  name: ScaleTransform(Single,Single,MatrixOrder)
  nameWithType: Pen.ScaleTransform(Single,Single,MatrixOrder)
  fullName: System.Drawing.Pen.ScaleTransform(Single,Single,MatrixOrder)
- uid: System.Drawing.Pen.SetLineCap(System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.DashCap)
  parent: System.Drawing.Pen
  isExternal: false
  name: SetLineCap(LineCap,LineCap,DashCap)
  nameWithType: Pen.SetLineCap(LineCap,LineCap,DashCap)
  fullName: System.Drawing.Pen.SetLineCap(LineCap,LineCap,DashCap)
- uid: System.Drawing.Pen.StartCap
  parent: System.Drawing.Pen
  isExternal: false
  name: StartCap
  nameWithType: Pen.StartCap
  fullName: System.Drawing.Pen.StartCap
- uid: System.Drawing.Pen.Transform
  parent: System.Drawing.Pen
  isExternal: false
  name: Transform
  nameWithType: Pen.Transform
  fullName: System.Drawing.Pen.Transform
- uid: System.Drawing.Pen.TranslateTransform(System.Single,System.Single)
  parent: System.Drawing.Pen
  isExternal: false
  name: TranslateTransform(Single,Single)
  nameWithType: Pen.TranslateTransform(Single,Single)
  fullName: System.Drawing.Pen.TranslateTransform(Single,Single)
- uid: System.Drawing.Pen.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Pen
  isExternal: false
  name: TranslateTransform(Single,Single,MatrixOrder)
  nameWithType: Pen.TranslateTransform(Single,Single,MatrixOrder)
  fullName: System.Drawing.Pen.TranslateTransform(Single,Single,MatrixOrder)
- uid: System.Drawing.Pen.Width
  parent: System.Drawing.Pen
  isExternal: false
  name: Width
  nameWithType: Pen.Width
  fullName: System.Drawing.Pen.Width
- uid: System.Drawing.Pen.#ctor*
  parent: System.Drawing.Pen
  isExternal: false
  name: Pen
  nameWithType: Pen.Pen
- uid: System.Drawing.Pen.Alignment*
  parent: System.Drawing.Pen
  isExternal: false
  name: Alignment
  nameWithType: Pen.Alignment
- uid: System.Drawing.Pen.Brush*
  parent: System.Drawing.Pen
  isExternal: false
  name: Brush
  nameWithType: Pen.Brush
- uid: System.Drawing.Pen.Clone*
  parent: System.Drawing.Pen
  isExternal: false
  name: Clone
  nameWithType: Pen.Clone
- uid: System.Drawing.Pen.Color*
  parent: System.Drawing.Pen
  isExternal: false
  name: Color
  nameWithType: Pen.Color
- uid: System.Drawing.Pen.CompoundArray*
  parent: System.Drawing.Pen
  isExternal: false
  name: CompoundArray
  nameWithType: Pen.CompoundArray
- uid: System.Drawing.Pen.CustomEndCap*
  parent: System.Drawing.Pen
  isExternal: false
  name: CustomEndCap
  nameWithType: Pen.CustomEndCap
- uid: System.Drawing.Pen.CustomStartCap*
  parent: System.Drawing.Pen
  isExternal: false
  name: CustomStartCap
  nameWithType: Pen.CustomStartCap
- uid: System.Drawing.Pen.DashCap*
  parent: System.Drawing.Pen
  isExternal: false
  name: DashCap
  nameWithType: Pen.DashCap
- uid: System.Drawing.Pen.DashOffset*
  parent: System.Drawing.Pen
  isExternal: false
  name: DashOffset
  nameWithType: Pen.DashOffset
- uid: System.Drawing.Pen.DashPattern*
  parent: System.Drawing.Pen
  isExternal: false
  name: DashPattern
  nameWithType: Pen.DashPattern
- uid: System.Drawing.Pen.DashStyle*
  parent: System.Drawing.Pen
  isExternal: false
  name: DashStyle
  nameWithType: Pen.DashStyle
- uid: System.Drawing.Pen.Dispose*
  parent: System.Drawing.Pen
  isExternal: false
  name: Dispose
  nameWithType: Pen.Dispose
- uid: System.Drawing.Pen.EndCap*
  parent: System.Drawing.Pen
  isExternal: false
  name: EndCap
  nameWithType: Pen.EndCap
- uid: System.Drawing.Pen.Finalize*
  parent: System.Drawing.Pen
  isExternal: false
  name: Finalize
  nameWithType: Pen.Finalize
- uid: System.Drawing.Pen.LineJoin*
  parent: System.Drawing.Pen
  isExternal: false
  name: LineJoin
  nameWithType: Pen.LineJoin
- uid: System.Drawing.Pen.MiterLimit*
  parent: System.Drawing.Pen
  isExternal: false
  name: MiterLimit
  nameWithType: Pen.MiterLimit
- uid: System.Drawing.Pen.MultiplyTransform*
  parent: System.Drawing.Pen
  isExternal: false
  name: MultiplyTransform
  nameWithType: Pen.MultiplyTransform
- uid: System.Drawing.Pen.PenType*
  parent: System.Drawing.Pen
  isExternal: false
  name: PenType
  nameWithType: Pen.PenType
- uid: System.Drawing.Pen.ResetTransform*
  parent: System.Drawing.Pen
  isExternal: false
  name: ResetTransform
  nameWithType: Pen.ResetTransform
- uid: System.Drawing.Pen.RotateTransform*
  parent: System.Drawing.Pen
  isExternal: false
  name: RotateTransform
  nameWithType: Pen.RotateTransform
- uid: System.Drawing.Pen.ScaleTransform*
  parent: System.Drawing.Pen
  isExternal: false
  name: ScaleTransform
  nameWithType: Pen.ScaleTransform
- uid: System.Drawing.Pen.SetLineCap*
  parent: System.Drawing.Pen
  isExternal: false
  name: SetLineCap
  nameWithType: Pen.SetLineCap
- uid: System.Drawing.Pen.StartCap*
  parent: System.Drawing.Pen
  isExternal: false
  name: StartCap
  nameWithType: Pen.StartCap
- uid: System.Drawing.Pen.Transform*
  parent: System.Drawing.Pen
  isExternal: false
  name: Transform
  nameWithType: Pen.Transform
- uid: System.Drawing.Pen.TranslateTransform*
  parent: System.Drawing.Pen
  isExternal: false
  name: TranslateTransform
  nameWithType: Pen.TranslateTransform
- uid: System.Drawing.Pen.Width*
  parent: System.Drawing.Pen
  isExternal: false
  name: Width
  nameWithType: Pen.Width
