### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.Xml.EncryptedReference
  id: EncryptedReference
  children:
  - System.Security.Cryptography.Xml.EncryptedReference.#ctor
  - System.Security.Cryptography.Xml.EncryptedReference.#ctor(System.String)
  - System.Security.Cryptography.Xml.EncryptedReference.#ctor(System.String,System.Security.Cryptography.Xml.TransformChain)
  - System.Security.Cryptography.Xml.EncryptedReference.AddTransform(System.Security.Cryptography.Xml.Transform)
  - System.Security.Cryptography.Xml.EncryptedReference.CacheValid
  - System.Security.Cryptography.Xml.EncryptedReference.GetXml
  - System.Security.Cryptography.Xml.EncryptedReference.LoadXml(System.Xml.XmlElement)
  - System.Security.Cryptography.Xml.EncryptedReference.ReferenceType
  - System.Security.Cryptography.Xml.EncryptedReference.TransformChain
  - System.Security.Cryptography.Xml.EncryptedReference.Uri
  langs:
  - csharp
  name: EncryptedReference
  nameWithType: EncryptedReference
  fullName: System.Security.Cryptography.Xml.EncryptedReference
  type: Class
  summary: "있는 XML 암호화에 사용 되는 추상 기본 클래스를 나타냅니다는 <xref href=&quot;System.Security.Cryptography.Xml.CipherReference&quot;> </xref>, <xref href=&quot;System.Security.Cryptography.Xml.KeyReference&quot;> </xref>, 및 <xref href=&quot;System.Security.Cryptography.Xml.DataReference&quot;> </xref> 클래스를 파생 합니다."
  remarks: "XML 암호화 표준에 대 한 자세한 내용은 http://www.w3.org/TR/xml-encryption-req 참조 합니다."
  example:
  - "The following example uses the <xref:System.Security.Cryptography.Xml.CipherReference.GetXml%2A> method in the <xref:System.Security.Cryptography.Xml.CipherReference> class to write the XML values to the console.  \n  \n [!code-vb[CipherReference2#1](~/add/codesnippet/visualbasic/t-system.security.crypto_18_1.vb)]\n [!code-cpp[CipherReference2#1](~/add/codesnippet/cpp/t-system.security.crypto_18_1.cpp)]\n [!code-cs[CipherReference2#1](~/add/codesnippet/csharp/t-system.security.crypto_18_1.cs)]"
  syntax:
    content: public abstract class EncryptedReference
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedReference.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.Xml.EncryptedReference
  langs:
  - csharp
  name: EncryptedReference()
  nameWithType: EncryptedReference.EncryptedReference()
  fullName: System.Security.Cryptography.Xml.EncryptedReference.EncryptedReference()
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Security.Cryptography.Xml.EncryptedReference&quot;> </xref> 클래스입니다."
  remarks: "이 생성자가 있는 XML 암호화에 사용 되는 추상 기본 클래스는 클래스는 <xref:System.Security.Cryptography.Xml.CipherReference>, <xref:System.Security.Cryptography.Xml.KeyReference>, 및 <xref:System.Security.Cryptography.Xml.DataReference>클래스 파생.</xref:System.Security.Cryptography.Xml.DataReference> </xref:System.Security.Cryptography.Xml.KeyReference> </xref:System.Security.Cryptography.Xml.CipherReference> XML에서 사용자 지정 참조 섹션을 만들려는 필요한 시나리오 없다면 상속 된 클래스 중 하나를 사용 합니다.       XML 암호화 표준에 대 한 자세한 내용은 http://www.w3.org/TR/xml-encryption-req 참조 합니다."
  syntax:
    content: protected EncryptedReference ();
    parameters: []
  overload: System.Security.Cryptography.Xml.EncryptedReference.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedReference.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Security.Cryptography.Xml.EncryptedReference
  langs:
  - csharp
  name: EncryptedReference(String)
  nameWithType: EncryptedReference.EncryptedReference(String)
  fullName: System.Security.Cryptography.Xml.EncryptedReference.EncryptedReference(String)
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Security.Cryptography.Xml.EncryptedReference&quot;> </xref> 클래스는 지정 된 식별자 URI (Uniform Resource)을 사용 합니다."
  remarks: "`uri` 매개 변수를 암호화 하는 데이터의 위치에 대 한 정보를 제공 합니다.       이 생성자가 있는 XML 암호화에 사용 되는 추상 기본 클래스는 클래스는 <xref:System.Security.Cryptography.Xml.CipherReference>, <xref:System.Security.Cryptography.Xml.KeyReference>, 및 <xref:System.Security.Cryptography.Xml.DataReference>클래스 파생.</xref:System.Security.Cryptography.Xml.DataReference> </xref:System.Security.Cryptography.Xml.KeyReference> </xref:System.Security.Cryptography.Xml.CipherReference> XML에서 사용자 지정 참조 섹션을 만들려는 필요한 시나리오 없다면 상속 된 클래스 중 하나를 사용 합니다.       XML 암호화 표준에 대 한 자세한 내용은 http://www.w3.org/TR/xml-encryption-req 참조 합니다."
  syntax:
    content: protected EncryptedReference (string uri);
    parameters:
    - id: uri
      type: System.String
      description: "식별자 URI (Uniform Resource)를 암호화 하는 데이터를 가리키는 합니다."
  overload: System.Security.Cryptography.Xml.EncryptedReference.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>uri</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedReference.#ctor(System.String,System.Security.Cryptography.Xml.TransformChain)
  id: '#ctor(System.String,System.Security.Cryptography.Xml.TransformChain)'
  parent: System.Security.Cryptography.Xml.EncryptedReference
  langs:
  - csharp
  name: EncryptedReference(String,TransformChain)
  nameWithType: EncryptedReference.EncryptedReference(String,TransformChain)
  fullName: System.Security.Cryptography.Xml.EncryptedReference.EncryptedReference(String,TransformChain)
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Security.Cryptography.Xml.EncryptedReference&quot;> </xref> 클래스 지정 된 식별자 URI (Uniform Resource) 및 변환 체인을 사용 합니다."
  remarks: "이 클래스는 추상 기본 클래스를 XML 암호화에 사용 되는 <xref:System.Security.Cryptography.Xml.CipherReference>, <xref:System.Security.Cryptography.Xml.KeyReference>, 및 <xref:System.Security.Cryptography.Xml.DataReference>클래스 파생.</xref:System.Security.Cryptography.Xml.DataReference> </xref:System.Security.Cryptography.Xml.KeyReference> </xref:System.Security.Cryptography.Xml.CipherReference> XML에서 사용자 지정 참조 섹션을 만들려는 필요한 시나리오 없다면 상속 된 클래스 중 하나를 사용 합니다.       XML 암호화 표준에 대 한 자세한 내용은 http://www.w3.org/TR/xml-encryption-req 참조 합니다."
  syntax:
    content: protected EncryptedReference (string uri, System.Security.Cryptography.Xml.TransformChain transformChain);
    parameters:
    - id: uri
      type: System.String
      description: "식별자 URI (Uniform Resource)를 암호화 하는 데이터를 가리키는 합니다."
    - id: transformChain
      type: System.Security.Cryptography.Xml.TransformChain
      description: "A <xref href=&quot;System.Security.Cryptography.Xml.TransformChain&quot;> </xref> 를 암호화 하는 데이터에서 수행할 변환을 설명 하는 개체입니다."
  overload: System.Security.Cryptography.Xml.EncryptedReference.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>uri</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedReference.AddTransform(System.Security.Cryptography.Xml.Transform)
  id: AddTransform(System.Security.Cryptography.Xml.Transform)
  parent: System.Security.Cryptography.Xml.EncryptedReference
  langs:
  - csharp
  name: AddTransform(Transform)
  nameWithType: EncryptedReference.AddTransform(Transform)
  fullName: System.Security.Cryptography.Xml.EncryptedReference.AddTransform(Transform)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "추가 <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;> </xref> 개체의 현재 변환 체인에는 <xref href=&quot;System.Security.Cryptography.Xml.EncryptedReference&quot;> </xref> 개체입니다."
  syntax:
    content: public void AddTransform (System.Security.Cryptography.Xml.Transform transform);
    parameters:
    - id: transform
      type: System.Security.Cryptography.Xml.Transform
      description: "A <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;> </xref> 변환 체인에 추가할 개체입니다."
  overload: System.Security.Cryptography.Xml.EncryptedReference.AddTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedReference.CacheValid
  id: CacheValid
  parent: System.Security.Cryptography.Xml.EncryptedReference
  langs:
  - csharp
  name: CacheValid
  nameWithType: EncryptedReference.CacheValid
  fullName: System.Security.Cryptography.Xml.EncryptedReference.CacheValid
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "캐시 올바른지 여부를 나타내는 값을 가져옵니다."
  remarks: "캐시는 암호화 된 데이터를 유지 관리 하는 데 사용 됩니다."
  syntax:
    content: protected bool CacheValid { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>캐시 올바른지 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Security.Cryptography.Xml.EncryptedReference.CacheValid*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedReference.GetXml
  id: GetXml
  parent: System.Security.Cryptography.Xml.EncryptedReference
  langs:
  - csharp
  name: GetXml()
  nameWithType: EncryptedReference.GetXml()
  fullName: System.Security.Cryptography.Xml.EncryptedReference.GetXml()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "XML 표현을 반환는 <xref href=&quot;System.Security.Cryptography.Xml.EncryptedReference&quot;> </xref> 개체입니다."
  remarks: "이 메서드를 사용 하 여에 포함 된 XML 정보를 출력 하는 <xref:System.Security.Cryptography.Xml.EncryptedReference>개체입니다.</xref:System.Security.Cryptography.Xml.EncryptedReference>"
  example:
  - "The following example uses the <xref:System.Security.Cryptography.Xml.CipherReference.GetXml%2A> method in the <xref:System.Security.Cryptography.Xml.CipherReference> class to write the XML values to the console.  \n  \n [!code-vb[CipherReference2#1](~/add/codesnippet/visualbasic/m-system.security.crypto_53_1.vb)]\n [!code-cpp[CipherReference2#1](~/add/codesnippet/cpp/m-system.security.crypto_53_1.cpp)]\n [!code-cs[CipherReference2#1](~/add/codesnippet/csharp/m-system.security.crypto_53_1.cs)]"
  syntax:
    content: public virtual System.Xml.XmlElement GetXml ();
    parameters: []
    return:
      type: System.Xml.XmlElement
      description: "<xref href=&quot;System.Xml.XmlElement&quot;> </xref> 의 값을 나타내는 개체는 <xref uid=&quot;langword_csharp_&lt;EncryptedReference&gt;&quot; name=&quot;&lt;EncryptedReference&gt;&quot; href=&quot;&quot;> </xref> XML 암호화에는 요소입니다."
  overload: System.Security.Cryptography.Xml.EncryptedReference.GetXml*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "<xref:System.Security.Cryptography.Xml.EncryptedReference.ReferenceType*>속성은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Security.Cryptography.Xml.EncryptedReference.ReferenceType*>"
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedReference.LoadXml(System.Xml.XmlElement)
  id: LoadXml(System.Xml.XmlElement)
  parent: System.Security.Cryptography.Xml.EncryptedReference
  langs:
  - csharp
  name: LoadXml(XmlElement)
  nameWithType: EncryptedReference.LoadXml(XmlElement)
  fullName: System.Security.Cryptography.Xml.EncryptedReference.LoadXml(XmlElement)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "XML 요소를 로드 한 <xref href=&quot;System.Security.Cryptography.Xml.EncryptedReference&quot;> </xref> 개체입니다."
  syntax:
    content: public virtual void LoadXml (System.Xml.XmlElement value);
    parameters:
    - id: value
      type: System.Xml.XmlElement
      description: "<xref href=&quot;System.Xml.XmlElement&quot;> </xref> XML 요소를 나타내는 개체입니다."
  overload: System.Security.Cryptography.Xml.EncryptedReference.LoadXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>value</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedReference.ReferenceType
  id: ReferenceType
  parent: System.Security.Cryptography.Xml.EncryptedReference
  langs:
  - csharp
  name: ReferenceType
  nameWithType: EncryptedReference.ReferenceType
  fullName: System.Security.Cryptography.Xml.EncryptedReference.ReferenceType
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "참조 형식을 가져오거나 설정 합니다."
  remarks: "이 속성을 사용 하는 경우 설정의 <xref:System.Security.Cryptography.Xml.CipherReference>, <xref:System.Security.Cryptography.Xml.KeyReference>, 및 <xref:System.Security.Cryptography.Xml.DataReference>파생 클래스.</xref:System.Security.Cryptography.Xml.DataReference> </xref:System.Security.Cryptography.Xml.KeyReference> </xref:System.Security.Cryptography.Xml.CipherReference> 예를 들어 한 <xref:System.Security.Cryptography.Xml.CipherReference> <xref:System.Security.Cryptography.Xml.CipherReference>.</xref:System.Security.Cryptography.Xml.CipherReference> 이 속성 값을 설정 하는 개체</xref:System.Security.Cryptography.Xml.CipherReference>"
  syntax:
    content: protected string ReferenceType { get; set; }
    return:
      type: System.String
      description: "암호화 된 데이터의 참조 형식입니다."
  overload: System.Security.Cryptography.Xml.EncryptedReference.ReferenceType*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedReference.TransformChain
  id: TransformChain
  parent: System.Security.Cryptography.Xml.EncryptedReference
  langs:
  - csharp
  name: TransformChain
  nameWithType: EncryptedReference.TransformChain
  fullName: System.Security.Cryptography.Xml.EncryptedReference.TransformChain
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "변환 체인을 가져오거나 설정 합니다.는 <xref href=&quot;System.Security.Cryptography.Xml.EncryptedReference&quot;> </xref> 개체입니다."
  syntax:
    content: public System.Security.Cryptography.Xml.TransformChain TransformChain { get; set; }
    return:
      type: System.Security.Cryptography.Xml.TransformChain
      description: "A <xref href=&quot;System.Security.Cryptography.Xml.TransformChain&quot;> </xref> 암호화 된 데이터에 사용 되는 변환에 설명 하는 개체입니다."
  overload: System.Security.Cryptography.Xml.EncryptedReference.TransformChain*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedReference.Uri
  id: Uri
  parent: System.Security.Cryptography.Xml.EncryptedReference
  langs:
  - csharp
  name: Uri
  nameWithType: EncryptedReference.Uri
  fullName: System.Security.Cryptography.Xml.EncryptedReference.Uri
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "식별자 URI (Uniform Resource)을 가져오거나 설정 합니다.는 <xref href=&quot;System.Security.Cryptography.Xml.EncryptedReference&quot;> </xref> 개체입니다."
  remarks: "이 속성을 사용 하 여 암호화 된 데이터의 위치를 나타냅니다."
  syntax:
    content: public string Uri { get; set; }
    return:
      type: System.String
      description: "식별자 URI (Uniform Resource)의 <xref href=&quot;System.Security.Cryptography.Xml.EncryptedReference&quot;> </xref> 개체입니다."
  overload: System.Security.Cryptography.Xml.EncryptedReference.Uri*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Uri 속성이로 설정 된 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.Security.Cryptography.Xml.EncryptedReference.#ctor
  parent: System.Security.Cryptography.Xml.EncryptedReference
  isExternal: false
  name: EncryptedReference()
  nameWithType: EncryptedReference.EncryptedReference()
  fullName: System.Security.Cryptography.Xml.EncryptedReference.EncryptedReference()
- uid: System.Security.Cryptography.Xml.EncryptedReference.#ctor(System.String)
  parent: System.Security.Cryptography.Xml.EncryptedReference
  isExternal: false
  name: EncryptedReference(String)
  nameWithType: EncryptedReference.EncryptedReference(String)
  fullName: System.Security.Cryptography.Xml.EncryptedReference.EncryptedReference(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.Xml.EncryptedReference.#ctor(System.String,System.Security.Cryptography.Xml.TransformChain)
  parent: System.Security.Cryptography.Xml.EncryptedReference
  isExternal: false
  name: EncryptedReference(String,TransformChain)
  nameWithType: EncryptedReference.EncryptedReference(String,TransformChain)
  fullName: System.Security.Cryptography.Xml.EncryptedReference.EncryptedReference(String,TransformChain)
- uid: System.Security.Cryptography.Xml.TransformChain
  parent: System.Security.Cryptography.Xml
  isExternal: false
  name: TransformChain
  nameWithType: TransformChain
  fullName: System.Security.Cryptography.Xml.TransformChain
- uid: System.Security.Cryptography.Xml.EncryptedReference.AddTransform(System.Security.Cryptography.Xml.Transform)
  parent: System.Security.Cryptography.Xml.EncryptedReference
  isExternal: false
  name: AddTransform(Transform)
  nameWithType: EncryptedReference.AddTransform(Transform)
  fullName: System.Security.Cryptography.Xml.EncryptedReference.AddTransform(Transform)
- uid: System.Security.Cryptography.Xml.Transform
  parent: System.Security.Cryptography.Xml
  isExternal: false
  name: Transform
  nameWithType: Transform
  fullName: System.Security.Cryptography.Xml.Transform
- uid: System.Security.Cryptography.Xml.EncryptedReference.CacheValid
  parent: System.Security.Cryptography.Xml.EncryptedReference
  isExternal: false
  name: CacheValid
  nameWithType: EncryptedReference.CacheValid
  fullName: System.Security.Cryptography.Xml.EncryptedReference.CacheValid
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.Xml.EncryptedReference.GetXml
  parent: System.Security.Cryptography.Xml.EncryptedReference
  isExternal: false
  name: GetXml()
  nameWithType: EncryptedReference.GetXml()
  fullName: System.Security.Cryptography.Xml.EncryptedReference.GetXml()
- uid: System.Xml.XmlElement
  parent: System.Xml
  isExternal: false
  name: XmlElement
  nameWithType: XmlElement
  fullName: System.Xml.XmlElement
- uid: System.Security.Cryptography.Xml.EncryptedReference.LoadXml(System.Xml.XmlElement)
  parent: System.Security.Cryptography.Xml.EncryptedReference
  isExternal: false
  name: LoadXml(XmlElement)
  nameWithType: EncryptedReference.LoadXml(XmlElement)
  fullName: System.Security.Cryptography.Xml.EncryptedReference.LoadXml(XmlElement)
- uid: System.Security.Cryptography.Xml.EncryptedReference.ReferenceType
  parent: System.Security.Cryptography.Xml.EncryptedReference
  isExternal: false
  name: ReferenceType
  nameWithType: EncryptedReference.ReferenceType
  fullName: System.Security.Cryptography.Xml.EncryptedReference.ReferenceType
- uid: System.Security.Cryptography.Xml.EncryptedReference.TransformChain
  parent: System.Security.Cryptography.Xml.EncryptedReference
  isExternal: false
  name: TransformChain
  nameWithType: EncryptedReference.TransformChain
  fullName: System.Security.Cryptography.Xml.EncryptedReference.TransformChain
- uid: System.Security.Cryptography.Xml.EncryptedReference.Uri
  parent: System.Security.Cryptography.Xml.EncryptedReference
  isExternal: false
  name: Uri
  nameWithType: EncryptedReference.Uri
  fullName: System.Security.Cryptography.Xml.EncryptedReference.Uri
- uid: System.Security.Cryptography.Xml.EncryptedReference.#ctor*
  parent: System.Security.Cryptography.Xml.EncryptedReference
  isExternal: false
  name: EncryptedReference
  nameWithType: EncryptedReference.EncryptedReference
- uid: System.Security.Cryptography.Xml.EncryptedReference.AddTransform*
  parent: System.Security.Cryptography.Xml.EncryptedReference
  isExternal: false
  name: AddTransform
  nameWithType: EncryptedReference.AddTransform
- uid: System.Security.Cryptography.Xml.EncryptedReference.CacheValid*
  parent: System.Security.Cryptography.Xml.EncryptedReference
  isExternal: false
  name: CacheValid
  nameWithType: EncryptedReference.CacheValid
- uid: System.Security.Cryptography.Xml.EncryptedReference.GetXml*
  parent: System.Security.Cryptography.Xml.EncryptedReference
  isExternal: false
  name: GetXml
  nameWithType: EncryptedReference.GetXml
- uid: System.Security.Cryptography.Xml.EncryptedReference.LoadXml*
  parent: System.Security.Cryptography.Xml.EncryptedReference
  isExternal: false
  name: LoadXml
  nameWithType: EncryptedReference.LoadXml
- uid: System.Security.Cryptography.Xml.EncryptedReference.ReferenceType*
  parent: System.Security.Cryptography.Xml.EncryptedReference
  isExternal: false
  name: ReferenceType
  nameWithType: EncryptedReference.ReferenceType
- uid: System.Security.Cryptography.Xml.EncryptedReference.TransformChain*
  parent: System.Security.Cryptography.Xml.EncryptedReference
  isExternal: false
  name: TransformChain
  nameWithType: EncryptedReference.TransformChain
- uid: System.Security.Cryptography.Xml.EncryptedReference.Uri*
  parent: System.Security.Cryptography.Xml.EncryptedReference
  isExternal: false
  name: Uri
  nameWithType: EncryptedReference.Uri
