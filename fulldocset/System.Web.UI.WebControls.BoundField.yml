### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.BoundField
  id: BoundField
  children:
  - System.Web.UI.WebControls.BoundField.#ctor
  - System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode
  - System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull
  - System.Web.UI.WebControls.BoundField.CopyProperties(System.Web.UI.WebControls.DataControlField)
  - System.Web.UI.WebControls.BoundField.CreateField
  - System.Web.UI.WebControls.BoundField.DataField
  - System.Web.UI.WebControls.BoundField.DataFormatString
  - System.Web.UI.WebControls.BoundField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)
  - System.Web.UI.WebControls.BoundField.FormatDataValue(System.Object,System.Boolean)
  - System.Web.UI.WebControls.BoundField.GetDesignTimeValue
  - System.Web.UI.WebControls.BoundField.GetValue(System.Web.UI.Control)
  - System.Web.UI.WebControls.BoundField.HeaderText
  - System.Web.UI.WebControls.BoundField.HtmlEncode
  - System.Web.UI.WebControls.BoundField.HtmlEncodeFormatString
  - System.Web.UI.WebControls.BoundField.Initialize(System.Boolean,System.Web.UI.Control)
  - System.Web.UI.WebControls.BoundField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  - System.Web.UI.WebControls.BoundField.InitializeDataCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState)
  - System.Web.UI.WebControls.BoundField.LoadViewState(System.Object)
  - System.Web.UI.WebControls.BoundField.NullDisplayText
  - System.Web.UI.WebControls.BoundField.OnDataBindField(System.Object,System.EventArgs)
  - System.Web.UI.WebControls.BoundField.ReadOnly
  - System.Web.UI.WebControls.BoundField.SupportsHtmlEncode
  - System.Web.UI.WebControls.BoundField.ThisExpression
  - System.Web.UI.WebControls.BoundField.ValidateRequestMode
  - System.Web.UI.WebControls.BoundField.ValidateSupportsCallback
  langs:
  - csharp
  name: BoundField
  nameWithType: BoundField
  fullName: System.Web.UI.WebControls.BoundField
  type: Class
  summary: "데이터 바인딩된 컨트롤에 텍스트로 표시 되는 필드를 나타냅니다."
  remarks: "BoundField 클래스는 데이터 바인딩된 컨트롤에서 사용 됩니다 (같은 <xref:System.Web.UI.WebControls.GridView>및 <xref:System.Web.UI.WebControls.DetailsView>) 텍스트로 필드의 값을 표시 하려면.</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> BoundField 개체는 사용 되는 데이터 바인딩된 컨트롤에 따라 다르게 표시 됩니다. 예를 들어는 <xref:System.Web.UI.WebControls.GridView>컨트롤에 열으로 BoundField 개체를 표시 하는 동안는 <xref:System.Web.UI.WebControls.DetailsView>컨트롤 행으로 표시 합니다.</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView>       BoundField 개체에 표시할 필드를 지정 하려면 설정는 <xref:System.Web.UI.WebControls.BoundField.DataField%2A>속성 필드의 이름입니다.</xref:System.Web.UI.WebControls.BoundField.DataField%2A> 필드의 값 수 HTML로 인코딩된 설정 하 여 표시 되기 전에 <xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A>속성을 `true`.</xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A> 설정 하 여 사용자 지정 형식 문자열 필드의 값에 적용할 수 있습니다는 <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A>속성.</xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> 경우는 <xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A>속성은 `true`, 인코딩된 문자열 값 필드의 사용자 지정 형식 문자열에 사용 됩니다.</xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A> 기본적으로 데이터 바인딩된 컨트롤이 읽기 전용 모드에 있을 때만 서식 문자열이 필드 값에 적용 됩니다. 형식 문자열에 데이터 바인딩된 컨트롤이 편집 모드일 때 표시 되는 값을 적용 하려면 설정는 <xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A>속성을 `true`.</xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A> 필드의 값이 null을 설정 하 여 사용자 지정 캡션을 표시할 수 있습니다는 <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A>속성.</xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> BoundField 개체에는 빈 문자열도 자동 변환할 수 있습니다 (&quot;&quot;)을 설정 하 여 값을 null 값을 필드는 <xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A>속성을 `true`.</xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A>       데이터 바인딩된 컨트롤에서 BoundField 개체를 설정 하 여 숨길 수 있습니다는 <xref:System.Web.UI.WebControls.DataControlField.Visible%2A>속성을 `false`.</xref:System.Web.UI.WebControls.DataControlField.Visible%2A> 편집 모드에서 수정할 필드의 값을 방지 하려면 설정는 <xref:System.Web.UI.WebControls.BoundField.ReadOnly%2A>속성을 `true`.</xref:System.Web.UI.WebControls.BoundField.ReadOnly%2A> 데이터 바인딩된 컨트롤에서 레코드를 삽입을 지 원하는 (같은 <xref:System.Web.UI.WebControls.DetailsView>컨트롤), BoundField 개체를 설정 하 여 숨길 수 있습니다는 <xref:System.Web.UI.WebControls.DataControlField.InsertVisible%2A>속성을 `false`.</xref:System.Web.UI.WebControls.DataControlField.InsertVisible%2A> </xref:System.Web.UI.WebControls.DetailsView> 이 삽입 모드에는 자동으로 생성 된 키 필드를 숨길 때에 일반적으로 수행 됩니다.       BoundField 개체의 머리글 및 바닥글 섹션을 사용자 지정할 수 있습니다. 머리글 또는 바닥글 섹션의 캡션을 표시 하려면 설정는 <xref:System.Web.UI.WebControls.DataControlField.HeaderText%2A>또는 <xref:System.Web.UI.WebControls.DataControlField.FooterText%2A>속성을 각각.</xref:System.Web.UI.WebControls.DataControlField.FooterText%2A> </xref:System.Web.UI.WebControls.DataControlField.HeaderText%2A> 헤더 섹션의 텍스트를 표시 하는 대신 설정 하 여 이미지를 표시할 수는 <xref:System.Web.UI.WebControls.DataControlField.HeaderImageUrl%2A>속성.</xref:System.Web.UI.WebControls.DataControlField.HeaderImageUrl%2A> 헤더 섹션 BoundField 개체에 설정 하 여 숨길 수는 <xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A>속성을 `false`.</xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A>      > [!NOTE] > 일부 데이터 바인딩된 컨트롤 (예:는 <xref:System.Web.UI.WebControls.GridView>컨트롤) 표시 하거나 컨트롤의 전체 헤더 섹션을 숨길 수.</xref:System.Web.UI.WebControls.GridView> 이러한 데이터 바인딩된 컨트롤을 지원 하지 않습니다는 <xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A>바인딩된 개별 필드에 대 한 속성.</xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A> 표시 하거나 (가능한 경우)는 데이터 바인딩된 컨트롤의 전체 헤더 섹션을 숨길 컨트롤의를 사용 하 여 `ShowHeader` 속성입니다.       또한 사용자 지정할 수 있습니다 (글꼴 색, 배경색, 및 등) BoundField 개체의 모양을 필드의 다른 부분에 대 한 스타일 속성을 설정 합니다. 다음 표에서 다른 스타일 속성을 나열합니다.      | Style 속성 | 설명 |   |--------------------|-----------------|   | <xref:System.Web.UI.WebControls.DataControlField.ControlStyle%2A>| BoundField 개체의 자식 웹 서버 컨트롤에 대 한 스타일 설정 합니다. |   | <xref:System.Web.UI.WebControls.DataControlField.FooterStyle%2A>| BoundField 개체의 바닥글 섹션에 대 한 스타일 설정 합니다. |   | <xref:System.Web.UI.WebControls.DataControlField.HeaderStyle%2A>| BoundField 개체의 헤더 섹션에 대 한 스타일 설정 합니다. |   | <xref:System.Web.UI.WebControls.DataControlField.ItemStyle%2A>| BoundField 개체의 데이터 항목에 대 한 스타일 설정 합니다. |</xref:System.Web.UI.WebControls.DataControlField.ItemStyle%2A> </xref:System.Web.UI.WebControls.DataControlField.HeaderStyle%2A> </xref:System.Web.UI.WebControls.DataControlField.FooterStyle%2A> </xref:System.Web.UI.WebControls.DataControlField.ControlStyle%2A>"
  example:
  - "The following code example demonstrates how to use a BoundField object to display the values of a field in a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-vb[BoundField#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_236_1.aspx)]\n [!code-cs[BoundField#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_236_1.aspx)]"
  syntax:
    content: 'public class BoundField : System.Web.UI.WebControls.DataControlField'
  inheritance:
  - System.Object
  - System.Web.UI.WebControls.DataControlField
  implements: []
  inheritedMembers:
  - System.Web.UI.WebControls.DataControlField.AccessibleHeaderText
  - System.Web.UI.WebControls.DataControlField.CloneField
  - System.Web.UI.WebControls.DataControlField.Control
  - System.Web.UI.WebControls.DataControlField.ControlStyle
  - System.Web.UI.WebControls.DataControlField.DesignMode
  - System.Web.UI.WebControls.DataControlField.FooterStyle
  - System.Web.UI.WebControls.DataControlField.FooterText
  - System.Web.UI.WebControls.DataControlField.HeaderImageUrl
  - System.Web.UI.WebControls.DataControlField.HeaderStyle
  - System.Web.UI.WebControls.DataControlField.InsertVisible
  - System.Web.UI.WebControls.DataControlField.IsTrackingViewState
  - System.Web.UI.WebControls.DataControlField.ItemStyle
  - System.Web.UI.WebControls.DataControlField.OnFieldChanged
  - System.Web.UI.WebControls.DataControlField.SaveViewState
  - System.Web.UI.WebControls.DataControlField.ShowHeader
  - System.Web.UI.WebControls.DataControlField.SortExpression
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IDataSourceViewSchemaAccessor#DataSourceViewSchema
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#TrackViewState
  - System.Web.UI.WebControls.DataControlField.ToString
  - System.Web.UI.WebControls.DataControlField.TrackViewState
  - System.Web.UI.WebControls.DataControlField.ViewState
  - System.Web.UI.WebControls.DataControlField.Visible
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: BoundField()
  nameWithType: BoundField.BoundField()
  fullName: System.Web.UI.WebControls.BoundField.BoundField()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref> 클래스입니다."
  remarks: "<xref:System.Web.UI.WebControls.BoundField>클래스</xref:System.Web.UI.WebControls.BoundField> 의 새 인스턴스를 초기화 하려면이 생성자를 사용 합니다. 이 생성자는 동적으로 만든된 데이터 바인딩된 컨트롤에 필드를 추가 하는 경우 일반적으로 사용 됩니다.       동적으로 추가 하는 <xref:System.Web.UI.WebControls.BoundField>데이터 바인딩된 컨트롤에 개체를 새 <xref:System.Web.UI.WebControls.BoundField>개체 속성을 설정 하 고 데이터 바인딩된 컨트롤의 필드 컬렉션에 추가 합니다.</xref:System.Web.UI.WebControls.BoundField> </xref:System.Web.UI.WebControls.BoundField> 예를 들어, 사용 하는 경우는 <xref:System.Web.UI.WebControls.GridView>컨트롤에 추가 합니다는 <xref:System.Web.UI.WebControls.BoundField>개체는 <xref:System.Web.UI.WebControls.GridView.Columns%2A>컬렉션.</xref:System.Web.UI.WebControls.GridView.Columns%2A> </xref:System.Web.UI.WebControls.BoundField> </xref:System.Web.UI.WebControls.GridView>      > [!NOTE] > 필드는 데이터 바인딩된 컨트롤에 동적으로 추가할 수 있지만 가장 좋습니다는 필드 정적으로 선언 하 고 다음 표시 하거나 숨길 수를 적절 하 게 합니다. 부모 데이터 바인딩된 컨트롤에 대 한 뷰 상태의 크기를 줄이는 모든 필드를 정적으로 선언 합니다."
  example:
  - "The following code example demonstrates how to use the constructor to dynamically add a <xref:System.Web.UI.WebControls.BoundField> object to a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[BoundFieldCtor#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_150_1.aspx)]\n [!code-vb[BoundFieldCtor#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_150_1.aspx)]"
  syntax:
    content: public BoundField ();
    parameters: []
  overload: System.Web.UI.WebControls.BoundField.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode
  id: ApplyFormatInEditMode
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: ApplyFormatInEditMode
  nameWithType: BoundField.ApplyFormatInEditMode
  fullName: System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "형식 문자열에서 지정 하는지 여부를 나타내는 값을 가져오거나 설정 합니다.는 <xref:System.Web.UI.WebControls.BoundField.DataFormatString*>속성을 포함 하는 데이터 바인딩된 컨트롤 때 필드 값에 적용 된 <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref> 개체가 편집 모드에 있기.</xref:System.Web.UI.WebControls.BoundField.DataFormatString*>"
  remarks: "데이터 바인딩된 컨트롤 (예: <xref:System.Web.UI.WebControls.DetailsView>, <xref:System.Web.UI.WebControls.FormView>, 및 <xref:System.Web.UI.WebControls.GridView>) 읽기, 편집 또는 레코드를 삽입 하는 데 사용할 수 있는 다른 디스플레이 모드를 포함할.</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.DetailsView> 지정한 서식 문자열이 기본적으로는 <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A>데이터 바인딩된 컨트롤이 읽기 전용 모드에 있을 때만 속성 필드 값에 적용 됩니다.</xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> 형식 문자열에 데이터 바인딩된 컨트롤이 편집 모드일 때 표시 되는 값을 적용 하려면 ApplyFormatInEditMode 속성을 설정 `true`합니다.      > [!NOTE] > A <xref:System.Web.UI.WebControls.BoundField>개체 서식 지정 필드는 데이터 원본에서 업데이트 될 때 자동으로 제거 되지 않습니다.</xref:System.Web.UI.WebControls.BoundField> 저장 된 값의 일부분으로 서식 지정 하지 않도록를 프로그래밍 방식으로 서식을 제거 해야 합니다."
  example:
  - "The following code example demonstrates how to use the ApplyFormatInEditMode property to apply the formatting string to field values while a <xref:System.Web.UI.WebControls.GridView> control is in edit mode. The formatting is then programmatically removed before the value is updated in the data source.  \n  \n [!code-vb[BoundFieldApplyFormatInEditMode#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1333_1.aspx)]\n [!code-cs[BoundFieldApplyFormatInEditMode#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1333_1.aspx)]"
  syntax:
    content: public virtual bool ApplyFormatInEditMode { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>편집 모드에서 필드 값에 형식 문자열을 적용 하려면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull
  id: ConvertEmptyStringToNull
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: ConvertEmptyStringToNull
  nameWithType: BoundField.ConvertEmptyStringToNull
  fullName: System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "나타내는 값을 가져오거나 여부 빈 문자열 값 (&quot;&quot;) 데이터 원본에서 데이터 필드가 업데이트 되는 경우 null 값으로 자동 변환 됩니다."
  remarks: "경우에 따라는 사용자를 업데이트 하거나 레코드를 삽입할 때 필드 값에 대 한 빈 문자열을 입력할 수 있습니다. ConvertEmptyStringToNull 속성을 사용 하 여 데이터 원본에서 데이터 필드가 업데이트 되는 경우 빈 문자열 값을 null로 변환할지 자동으로 하는지 여부를 지정할 수 있습니다.      > [!NOTE] > 기본적으로는 <xref:System.Web.UI.WebControls.BoundField>개체는 null 값을 빈 문자열로 표시 됩니다.</xref:System.Web.UI.WebControls.BoundField> 표시 하려면 다른 값으로 설정 된 <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A>속성.</xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A>"
  example:
  - "The following code example demonstrates how to use the ConvertEmptyStringToNull property to specify that an empty string (\"\") field value should automatically be converted to null.  \n  \n [!code-vb[BoundFieldConvertEmptyStringToNull#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1108_1.aspx)]\n [!code-cs[BoundFieldConvertEmptyStringToNull#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1108_1.aspx)]"
  syntax:
    content: public virtual bool ConvertEmptyStringToNull { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>자동으로 null 값으로 빈 문자열 값을 변환 하려면 그렇지 않은 경우는 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.CopyProperties(System.Web.UI.WebControls.DataControlField)
  id: CopyProperties(System.Web.UI.WebControls.DataControlField)
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: CopyProperties(DataControlField)
  nameWithType: BoundField.CopyProperties(DataControlField)
  fullName: System.Web.UI.WebControls.BoundField.CopyProperties(DataControlField)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "현재의 속성을 복사 <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref> 를 지정한 <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> 개체입니다."
  remarks: "CopyProperties 메서드는에서 사용 하는 도우미 메서드입니다는 <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=fullName>현재 속성 복사 하려면 <xref:System.Web.UI.WebControls.BoundField>개체는 <xref:System.Web.UI.WebControls.DataControlField>메서드에서 만든 개체입니다.</xref:System.Web.UI.WebControls.DataControlField> </xref:System.Web.UI.WebControls.BoundField> </xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=fullName>"
  syntax:
    content: protected override void CopyProperties (System.Web.UI.WebControls.DataControlField newField);
    parameters:
    - id: newField
      type: System.Web.UI.WebControls.DataControlField
      description: "<xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> 현재 속성을 복사 하도록 <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref> 하 합니다."
  overload: System.Web.UI.WebControls.BoundField.CopyProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.CreateField
  id: CreateField
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: CreateField()
  nameWithType: BoundField.CreateField()
  fullName: System.Web.UI.WebControls.BoundField.CreateField()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "빈 만듭니다 <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref> 개체입니다."
  remarks: "CreateField 메서드는에서 사용 하는 도우미 메서드입니다는 <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=fullName>빈 만드는 메서드를 <xref:System.Web.UI.WebControls.BoundField>개체의 현재 속성을 복사 하도록 <xref:System.Web.UI.WebControls.BoundField>개체를.</xref:System.Web.UI.WebControls.BoundField> </xref:System.Web.UI.WebControls.BoundField> </xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=fullName>"
  syntax:
    content: protected override System.Web.UI.WebControls.DataControlField CreateField ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.DataControlField
      description: "An empty <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;></xref>."
  overload: System.Web.UI.WebControls.BoundField.CreateField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.DataField
  id: DataField
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: DataField
  nameWithType: BoundField.DataField
  fullName: System.Web.UI.WebControls.BoundField.DataField
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "바인딩할 데이터 필드의 이름을 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref> 개체입니다."
  remarks: "DataField 속성을 사용 하 여 바인딩할 데이터 필드의 이름을 지정 하는 <xref:System.Web.UI.WebControls.BoundField>개체입니다.</xref:System.Web.UI.WebControls.BoundField> 지정된 된 필드의 값에 표시 됩니다는 <xref:System.Web.UI.WebControls.BoundField>개체를 텍스트로.</xref:System.Web.UI.WebControls.BoundField> 설정 하 여 필요에 따라 표시 되는 텍스트 서식을 지정할 수 있습니다는 <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A>속성.</xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A>      > [!NOTE] > 필드의 값이 null 이면 빈 문자열 (&quot;&quot;) 값에 대해 기본적으로 표시 됩니다. 대체 캡션을 지정 하려면는 <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A>속성.</xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A>"
  example:
  - "The following code example demonstrates how to use the DataField property to specify which field to display in a <xref:System.Web.UI.WebControls.BoundField> field column of a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-vb[BoundField#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_680_1.aspx)]\n [!code-cs[BoundField#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_680_1.aspx)]"
  syntax:
    content: public virtual string DataField { get; set; }
    return:
      type: System.String
      description: "바인딩할 데이터 필드의 이름에서 <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref>합니다. 기본값은 빈 문자열 (&quot;&quot;),이 속성이 설정 되어 있지 않음을 나타냅니다."
  overload: System.Web.UI.WebControls.BoundField.DataField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.DataFormatString
  id: DataFormatString
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: DataFormatString
  nameWithType: BoundField.DataFormatString
  fullName: System.Web.UI.WebControls.BoundField.DataFormatString
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "필드의 값에 대 한 표시 형식을 지정 하는 문자열을 가져오거나 설정 합니다."
  remarks: "DataFormatString 속성을 사용 하 여에 표시 되는 값에 대 한 사용자 지정 표시 형식을 지정 하는 <xref:System.Web.UI.WebControls.BoundField>개체입니다.</xref:System.Web.UI.WebControls.BoundField> DataFormatString 속성을 설정 하지 않으면 필드의 값이 특정 형식 없이 표시 됩니다.      > [!NOTE] > 3.5 이전 버전의 ASP.NET에서 설정 해야 합니다는 <xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A>속성을 `false` 서식을 지정 하기 위해 필드를 하지 문자열 데이터 형식.</xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A> 그렇지 않으면 필드 값은 문자열로 변환 기본 변환 메서드에서 DataFormatString 속성에 저장 된 형식 문자열 적용 되기 전에 합니다.       기본적으로 형식 문자열은 필드 값에 경우에 적용 포함 하는 데이터 바인딩된 컨트롤에서 <xref:System.Web.UI.WebControls.BoundField>개체가 읽기 전용 모드 인지.</xref:System.Web.UI.WebControls.BoundField> 편집 모드에서 필드 값에 형식 문자열을 적용 하려면 설정는 <xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A>속성을 `true`.</xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A>       형식 문자열은 모든 리터럴 문자열이 될 수 있으며 일반적으로 필드의 값에 대 한 자리 표시자를 포함 합니다. 서식 문자열의 예를 들어 `Item Value: {0}`, 문자열에 표시 될 때 필드의 값이 자리 표시자에 대 한 대체 되는 <xref:System.Web.UI.WebControls.BoundField>개체입니다.</xref:System.Web.UI.WebControls.BoundField> 형식 문자열의 나머지 리터럴 텍스트로 표시 됩니다.       형식 문자열에 자리 표시 자가 포함 되어 있지 않으면, 서식 지정 문자열 자체 (데이터 원본에서 필드의 값이 포함 되지 않습니다.) 최종 표시 텍스트에 포함 됩니다. 자리 표시자 앞의 예제와 같이 중괄호로 묶인 0 (영) 이면 기본 방법으로 필드 값을 문자열로 변환 됩니다. 필드 값을 포맷 해야 하는 방법을 지정 하는 문자열에서&0;으로 추가할 수 있습니다. 예를 들어, 자리 표시자 `{0:C}` 숫자 필드 하도록 값 필드의 통화 형식으로 변환 되어야 함을 지정 합니다.       서식을 사용 하 여 적용 되는 <xref:System.String.Format%2A>메서드.</xref:System.String.Format%2A> 다음 왼쪽된 중괄호의 숫자는 해당 메서드에서 사용 되는 구문의 일부 이며 일련의 값 중 어느 자리 표시자를 사용 하도록 나타냅니다. 각 셀에서 필드 값을 하나만 있기 때문에 다음 왼쪽된 중괄호의 숫자는 0으로 설정할 수만 있습니다.       다음 표에서 숫자 필드에 대 한 표준 형식 문자를 나열합니다. 이러한 형식 문자를 제외 하 고 구분 하지 않으며, `X`, 지정 된 경우에서&16; 진수 문자를 표시 하는 합니다. 숫자를 표시 하려는 개수 유효 자릿수 또는 소수 자릿수를 지정 하기 위해 대부분의 형식 문자를 추가할 수 있습니다.      > [!NOTE] > 대부분의 경우에서 서식 지정에 따라 달라 집니다 서버의 culture 설정입니다. 문화권 설정에 대 한 예는 `en-US`합니다.      | 형식 문자와 | 설명 | 예 |   |----------------------|-----------------|-------------|   | `C` or `c`| 통화 형식으로 숫자 값을 표시 합니다. 소수 자릿수를 지정할 수 있습니다. | 형식:`{0:C}`<br /><br /> 123.456 -> $123.46<br /><br /> 형식:`{0:C3}`<br /><br /> 123.456-> $123.456 |   | `D` or `d`|&10; 진수 형식의 정수 값을 표시합니다. 자릿수를 지정할 수 있습니다. (유형 &quot;십진수&quot; 라고, 하지만 숫자는 정수로 서식이 지정 합니다.) | 형식:`{0:D}`<br /><br /> 1234 -> 1234<br /><br /> 형식:`{0:D6}`<br /><br /> 1234-> 001234 |   | `E` or `e`| Scientific (지 수)의 숫자 값을 표시합니다. 소수 자릿수를 지정할 수 있습니다. | 형식:`{0:E}`<br /><br /> 1.052033E + 003-> 1052.0329112756<br /><br /> 형식:`{0:E2}`<br /><br /> -1052.0329112756&1;.05e +&003;-> |   | `F` or `f`| 고정된 형식으로 숫자 값을 표시 합니다. 소수 자릿수를 지정할 수 있습니다. | 형식:`{0:F}`<br /><br /> 1234.567 -> 1234.57<br /><br /> 형식:`{0:F3}`<br /><br /> 1234.567-> 1234.567 |   | `G` or `g`| 일반 형식 (가장 간단한 형태의 고정 소수점 또는 과학적 표기법)의 숫자 값을 표시 합니다. 유효 자릿수를 지정할 수 있습니다. | 형식:`{0:G}`<br /><br /> -123.456 -> -123.456<br /><br /> 형식:`{0:G2}`<br /><br /> -120->-123.456 |   | `N` or `n`| 숫자 형식 (그룹 구분 기호 및 선택적 음수 기호 포함)의 숫자 값을 표시 합니다. 소수 자릿수를 지정할 수 있습니다. | 형식:`{0:N}`<br /><br /> 1234.567 -> 1,234.57<br /><br /> 형식:`{0:N4}`<br /><br /> 1234.567-> 1,234.5670 |   | `P` or `p`| 백분율 형식에서 숫자 값을 표시 합니다. 소수 자릿수를 지정할 수 있습니다. | 형식:`{0:P}`<br /><br /> 1 -> 100.00%<br /><br /> 형식:`{0:P1}`<br /><br /> 50.0%->.5 | | `R` or `r`| 표시 <xref:System.Single>, <xref:System.Double>, 또는 `BigInteger` 왕복 형식의 값입니다. | Format: `{0:R}`</xref:System.Double></xref:System.Single><br /><br /> 123456789.12345678-> 123456789.12345678 |   | `X` or `x`| 16 진수 형식의 정수 값을 표시합니다. 자릿수를 지정할 수 있습니다. | 형식:`{0:X}`<br /><br /> FF->&255;<br /><br /> 형식:`{0:x4}`<br /><br /> 00ff-> 255 |       자세한 내용은 및 다른 문화권 값에 대 한 서식을 보여 주는 예제를 참조 [표준 숫자 형식 문자열](~/add/includes/ajax-current-ext-md.md)합니다. 또한 사용자 지정 숫자 형식 문자열을 만들 수 있습니다. 자세한 내용은 참조 [사용자 지정 숫자 형식 문자열](~/add/includes/ajax-current-ext-md.md)합니다.       다음 표에서 형식 문자를 나열 <xref:System.DateTime>필드.</xref:System.DateTime> 서식 사양 이들 중 대부분 문화권 설정에 따라 서로 다른 출력에 발생 합니다. 에 대 한 예는 한 <xref:System.DateTime>6/15/2009의 값 1시 45분: 30 PM의 culture 설정 사용 하 여 `en-US`.</xref:System.DateTime>      | 형식 문자와 | 설명 | 예 |   |----------------------|-----------------|-------------|   | `d`| 간단한 날짜 패턴입니다. | 형식:`{0:d}`<br /><br /> 6/15/2009 1시 45분: 30 PM-> 6/15/2009 |   | `D`| 자세한 날짜 패턴입니다. | 형식:`{0:D}`<br /><br /> 6/15/2009 1시 45분: 30 PM-> 2009 년 6 월 15 일 월요일 |   | `f`| 전체 날짜/시간 패턴 (간단한 시간). | 형식:`{0:f}`<br /><br /> 6/15/2009 오후 1시 45분: 30 2009 년 6 월 15 일 월요일 오후 1 시 45 분-> |   | `F`| 전체 날짜/시간 패턴 (자세한 시간). | 형식:`{0:F}`<br /><br /> 6/15/2009 오후 1시 45분: 30 2009 년 6 월 15 일 월요일 오후 1시 45분: 30-> |   | `g`| 일반 날짜/시간 패턴 (간단한 시간). | 형식:`{0:g}`<br /><br /> 6/15/2009 1시 45분: 30 PM-> 6/15/2009 오후 1 시 45 분 |   | `G`| 일반 날짜/시간 패턴 (자세한 시간). | 형식:`{0:G}`<br /><br /> 6/15/2009 1시 45분: 30 PM-> 6/15/2009 오후 1시 45분: 30 |   | `M` or `m`| 월/일 패턴입니다. | 형식:`{0:M}`<br /><br /> 6/15/2009 년 6 월 15 오후 1시 45분: 30-> |   | `O` or `o`| 라운드트립 날짜/시간 패턴입니다. | 형식:`{0:o}`<br /><br /> 6/15/2009 1시 45분: 30 PM-> 2009-06-15T13:45:30.0900000 |   | `R` or `r`| RFC1123 패턴 (내용은 <xref:System.Globalization.DateTimeFormatInfo.RFC1123Pattern%2A?displayProperty=fullName>참조). | 형식: `{0:R}` </xref:System.Globalization.DateTimeFormatInfo.RFC1123Pattern%2A?displayProperty=fullName><br /><br /> 6/15/2009 1시 45분: 30 PM-> 2009 년 6 월 15 일 월요일 GMT 20시 45분: 30 |   | `s`| 정렬 가능한 유니버설 날짜/시간 패턴입니다. | 형식:`{0:s}`<br /><br /> 6/15/2009 1시 45분: 30 PM-> 2009-06-15T13:45:30 |   | `t`| 간단한 시간 패턴입니다. | 형식:`{0:t}`<br /><br /> 6/15/2009 오후 1시 45분: 30 오후 1 시 45 분-> |   | `T`| 자세한 시간 패턴입니다. | 형식:`{0:T}`<br /><br /> 6/15/2009 오후 1시 45분: 30 오후 1시 45분: 30-> |   | `u`| 정렬 가능한 유니버설 날짜/시간 패턴입니다. | 형식:`{0:u}`<br /><br /> 6/15/2009 1시 45분: 30 PM-> 2009-06-15 20:45:30Z |   | `U`| 유니버설 전체 날짜/시간 패턴입니다. | 형식:`{0:U}`<br /><br /> 6/15/2009 오후 1시 45분: 30 2009 년 6 월 15 일 월요일 오후 8시 45분: 30-> |   | `Y` or `y`| 연도 월 패턴입니다. | 형식:`{0:Y}`<br /><br /> 6/15/2009 1시 45분: 30 PM->, 2009 년 6 월 |       자세한 내용은 및 다른 문화권 값에 대 한 서식을 보여 주는 예제를 참조 [표준 날짜 및 시간 형식 문자열](~/add/includes/ajax-current-ext-md.md)합니다. 사용자 지정 날짜 및 시간 형식 문자열을 만들 수도 있습니다. 자세한 내용은 참조 [사용자 지정 날짜 및 시간 형식 문자열](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "A Visual Studio Web site project with source code is available to accompany this topic: [Download](http://go.microsoft.com/fwlink/?LinkId=191889).  \n  \n The following example shows how to use the DataFormatString property to specify a custom display format for the values of a field.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  \n  \n The following example shows one row of the output that is produced by this example.  \n  \n|ProductID|Name|ProductNumber|ListPrice|Weight|ModifiedDate|  \n|---------------|----------|-------------------|---------------|------------|------------------|  \n|`000680`|`HL Road Frame - Black, 58`|`#FR-R92B-58`|`$1,431.50`|`1016.040`|`3/11/2004`|"
  syntax:
    content: public virtual string DataFormatString { get; set; }
    return:
      type: System.String
      description: "필드의 값에 대 한 표시 형식을 지정 하는 서식 문자열입니다. 기본값은 빈 문자열 (&quot;&quot;), 필드 값에 특정 형식이 적용 않음을 나타냅니다."
  overload: System.Web.UI.WebControls.BoundField.DataFormatString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)
  id: ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  nameWithType: BoundField.ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  fullName: System.Web.UI.WebControls.BoundField.ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "지정 된 채웁니다 &lt;xref:System.Collections.IDictionary?displayProperty=fullName&gt; 개체에서 지정 된 값으로 <xref href=&quot;System.Web.UI.WebControls.TableCell&quot;> </xref> 개체입니다."
  remarks: "ExtractValuesFromCell 메서드는 지정 된 위치에서 필드의 값을 검색 하는 편리한 방법으로 제공 됩니다 <xref:System.Web.UI.WebControls.TableCell>개체는 <xref:System.Web.UI.WebControls.BoundField>개체입니다.</xref:System.Web.UI.WebControls.BoundField> </xref:System.Web.UI.WebControls.TableCell>      > [!NOTE] >이 메서드는 주로 컨트롤 개발자가 사용 됩니다.       이 메서드는 반환 값이 없는 합니다. 통해 참조로 필드 값이 반환 하는 대신,는 <xref:System.Collections.IDictionary?displayProperty=fullName>에 전달 된 개체는 `dictionary` 매개 변수.</xref:System.Collections.IDictionary?displayProperty=fullName> 반복 하는 메서드가 호출 된 후의 <xref:System.Collections.IDictionary?displayProperty=fullName>필드 값에 액세스 하는 개체입니다.</xref:System.Collections.IDictionary?displayProperty=fullName>      > [!NOTE] > 경우는 <xref:System.Web.UI.WebControls.TableCell>읽기 전용 필드 값을 포함 하는 개체를 전달 해야 `true` 에 대 한는 `includeReadOnly` 매개 변수가 해당 값을 포함 합니다.</xref:System.Web.UI.WebControls.TableCell>"
  syntax:
    content: public override void ExtractValuesFromCell (System.Collections.Specialized.IOrderedDictionary dictionary, System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlRowState rowState, bool includeReadOnly);
    parameters:
    - id: dictionary
      type: System.Collections.Specialized.IOrderedDictionary
      description: "A &lt;xref:System.Collections.IDictionary?displayProperty=fullName&gt; 지정된 된 셀의 값을 저장 하는 데 사용 합니다."
    - id: cell
      type: System.Web.UI.WebControls.DataControlFieldCell
      description: "<xref href=&quot;System.Web.UI.WebControls.TableCell&quot;> </xref> 검색 하는 값이 들어 있습니다."
    - id: rowState
      type: System.Web.UI.WebControls.DataControlRowState
      description: "중 하나는 <xref href=&quot;System.Web.UI.WebControls.DataControlRowState&quot;> </xref> 값입니다."
    - id: includeReadOnly
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>읽기 전용 필드의 값을 포함 하려면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.BoundField.ExtractValuesFromCell*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.FormatDataValue(System.Object,System.Boolean)
  id: FormatDataValue(System.Object,System.Boolean)
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: FormatDataValue(Object,Boolean)
  nameWithType: BoundField.FormatDataValue(Object,Boolean)
  fullName: System.Web.UI.WebControls.BoundField.FormatDataValue(Object,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "셀에 대 한 지정 된 필드 값의 서식을 <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref> 개체입니다."
  remarks: "FormatDataValue 메서드는 지정 된 형식에 필드 값을 변환 하는 데 사용 하는 도우미 메서드는 <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A>속성.</xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> 필드 값이 null이 고, 값은 <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A>속성이 반환 됩니다.</xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A>      > [!NOTE] >이 메서드는 주로 컨트롤 개발자가 사용 됩니다."
  syntax:
    content: protected virtual string FormatDataValue (object dataValue, bool encode);
    parameters:
    - id: dataValue
      type: System.Object
      description: "서식을 지정 하려면 필드 값입니다."
    - id: encode
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>인코딩하는 값입니다. 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
    return:
      type: System.String
      description: "<xref:System.Web.UI.WebControls.BoundField.DataFormatString*>.</xref:System.Web.UI.WebControls.BoundField.DataFormatString*> 지정 된 형식으로 변환 하는 필드 값"
  overload: System.Web.UI.WebControls.BoundField.FormatDataValue*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.GetDesignTimeValue
  id: GetDesignTimeValue
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: GetDesignTimeValue()
  nameWithType: BoundField.GetDesignTimeValue()
  fullName: System.Web.UI.WebControls.BoundField.GetDesignTimeValue()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "렌더링할 때 필드의 값에 사용 되는 값을 검색 하는 <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref> 디자이너에서 개체입니다."
  remarks: "GetDesignTimeValue 메서드는 렌더링할 때 필드에 대해 표시할 값을 결정 하는 데 사용 하는 도우미 메서드는 <xref:System.Web.UI.WebControls.BoundField>디자이너에서 개체입니다.</xref:System.Web.UI.WebControls.BoundField> 디자인 타임에 데이터 원본의 실제 데이터를 검색할 수 없으면,이 메서드에 의해 반환 되는 값 대신 표시 됩니다.      > [!NOTE] >이 메서드는 주로 컨트롤 개발자가 사용 됩니다."
  syntax:
    content: protected virtual object GetDesignTimeValue ();
    parameters: []
    return:
      type: System.Object
      description: "필드의 값으로 디자이너에 표시할 값입니다."
  overload: System.Web.UI.WebControls.BoundField.GetDesignTimeValue*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.GetValue(System.Web.UI.Control)
  id: GetValue(System.Web.UI.Control)
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: GetValue(Control)
  nameWithType: BoundField.GetValue(Control)
  fullName: System.Web.UI.WebControls.BoundField.GetValue(Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "에 연결 된 필드의 값을 검색 하는 <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref> 개체입니다."
  remarks: "GetValue 메서드는 필드의 값을 결정 하는 데 사용 하는 도우미 메서드입니다. 경우는 <xref:System.Web.UI.WebControls.BoundField>값에서 반환 된 개체는 디자이너에 표시 되는 디자인 타임에 확인할 수 없는 필드 값을는 <xref:System.Web.UI.WebControls.BoundField.GetDesignTimeValue%2A>메서드는 실제 필드 값 대신 반환 됩니다.</xref:System.Web.UI.WebControls.BoundField.GetDesignTimeValue%2A> </xref:System.Web.UI.WebControls.BoundField>      > [!NOTE] >이 메서드는 주로 컨트롤 개발자가 사용 됩니다."
  syntax:
    content: protected virtual object GetValue (System.Web.UI.Control controlContainer);
    parameters:
    - id: controlContainer
      type: System.Web.UI.Control
      description: "필드 값에 대 한 컨테이너입니다."
    return:
      type: System.Object
      description: "필드의 값이 연결에서 <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.BoundField.GetValue*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "The container specified by the <code>controlContainer</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n The container specified by the <code>controlContainer</code> parameter does not have a data item.  \n  \n \\- or -  \n  \n The data field was not found."
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.HeaderText
  id: HeaderText
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: HeaderText
  nameWithType: BoundField.HeaderText
  fullName: System.Web.UI.WebControls.BoundField.HeaderText
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "데이터 컨트롤의 머리글에 표시 되는 텍스트를 가져오거나 설정 합니다."
  remarks: "HeaderText 속성 데이터 컨트롤의에서 필드 이름으로 식별을 사용 합니다. HeaderText 속성의 가장 일반적인 응용 프로그램은 데이터 바인딩 필드에 의미 있는 열 이름을 지정 하는 <xref:System.Web.UI.WebControls.GridView>또는 <xref:System.Web.UI.WebControls.DetailsView>컨트롤.</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView>"
  syntax:
    content: public override string HeaderText { get; set; }
    return:
      type: System.String
      description: "데이터 컨트롤의 헤더에 표시할 텍스트입니다. 기본값은 빈 문자열 (&quot;&quot;)."
  overload: System.Web.UI.WebControls.BoundField.HeaderText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.HtmlEncode
  id: HtmlEncode
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: HtmlEncode
  nameWithType: BoundField.HtmlEncode
  fullName: System.Web.UI.WebControls.BoundField.HtmlEncode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "필드 값에 표시 되기 전에 HTML로 인코딩 되는지 여부를 나타내는 값을 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref> 개체입니다."
  remarks: "Use the HtmlEncode property to specify whether field values are HTML-encoded to their respective string representations before they are displayed in a <xref:System.Web.UI.WebControls.BoundField> object. For example, if this property is `true`, a string value of \"\\<script>\" would be rendered as \"&lt;script&gt;\". If this property is `false`, the string would be rendered unchanged.  \n  \n> [!NOTE]\n>  HTML-encoding field values helps to prevent cross-site scripting attacks and malicious content from being displayed. This property should be enabled whenever possible."
  example:
  - "The following code example demonstrates how to use the HtmlEncode property to prevent field values from being HTML-encoded before being displayed in a <xref:System.Web.UI.WebControls.BoundField> object.  \n  \n [!code-cs[BoundFieldHtmlEncode#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_606_1.aspx)]\n [!code-vb[BoundFieldHtmlEncode#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_606_1.aspx)]"
  syntax:
    content: public virtual bool HtmlEncode { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>필드 값에 표시 되기 전에 HTML로 인코딩 되는지 경우는 <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref> 개체; 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.BoundField.HtmlEncode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.HtmlEncodeFormatString
  id: HtmlEncodeFormatString
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: HtmlEncodeFormatString
  nameWithType: BoundField.HtmlEncodeFormatString
  fullName: System.Web.UI.WebControls.BoundField.HtmlEncodeFormatString
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "여부 텍스트를 나타내는 값을 가져오거나 설정 합니다. 적용 하 여 만든는 <xref:System.Web.UI.WebControls.BoundField.DataFormatString*>속성을는 <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref> 값에 표시 되 면 인코딩된 HTML 이어야 합니다.</xref:System.Web.UI.WebControls.BoundField.DataFormatString*>"
  remarks: "HTML-encoding values can help prevent cross-site scripting attacks and malicious content from being displayed. HTML encoding is also useful when you want to display HTML code in the browser, such as displaying the string \"\\<br/>\" instead of inserting a line break (`<br/>` element) in the page.  \n  \n> [!NOTE]\n>  This property is new in ASP.NET 3.5. Setting this property to `false` restores the default behavior of the <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> property in versions of ASP.NET earlier than 3.5. For more information, see the <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> property."
  syntax:
    content: public virtual bool HtmlEncodeFormatString { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>텍스트를 HTML로 인코딩된; 하면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.BoundField.HtmlEncodeFormatString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.Initialize(System.Boolean,System.Web.UI.Control)
  id: Initialize(System.Boolean,System.Web.UI.Control)
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: Initialize(Boolean,Control)
  nameWithType: BoundField.Initialize(Boolean,Control)
  fullName: System.Web.UI.WebControls.BoundField.Initialize(Boolean,Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "초기화는 <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref> 개체입니다."
  remarks: "Initialize 메서드는 데이터 컨트롤에서 호출 됩니다는 <xref:System.Web.UI.WebControls.BoundField>개체에 대 한 기본 개체 초기화를 수행 하려면 연결 된 필드 행 컬렉션에 추가 되기 전에 해당 필드의 인스턴스.</xref:System.Web.UI.WebControls.BoundField> 데이터와 같은 컨트롤 <xref:System.Web.UI.WebControls.DetailsView>및 <xref:System.Web.UI.WebControls.GridView>호출는 <xref:System.Web.UI.WebControls.DataControlField.Initialize%2A>메서드에서 자신의 `CreateChildControls` 와 같은 다른 메서드보다 먼저 메서드 `CreateRow` 데이터로 특정 행을 만들기 위해 호출 됩니다.</xref:System.Web.UI.WebControls.DataControlField.Initialize%2A> </xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.DetailsView>       사용 하는 컨트롤을 데이터 바인딩된 사용자 지정을 작성 하는 경우이 메서드는 호출 하 여 <xref:System.Web.UI.WebControls.TableCell>에 대 한 기본 초기화를 수행 하는 개체는 <xref:System.Web.UI.WebControls.BoundField>개체입니다.</xref:System.Web.UI.WebControls.BoundField> </xref:System.Web.UI.WebControls.TableCell> 이 메서드를 구현 프로그램 <xref:System.Web.UI.WebControls.BoundField>-파생 된 형식 전에 개체를 초기화 해야 <xref:System.Web.UI.WebControls.TableCell>개체를 데이터 나 컨트롤에 <xref:System.Web.UI.WebControls.BoundField.InitializeCell%2A>메서드.</xref:System.Web.UI.WebControls.BoundField.InitializeCell%2A> </xref:System.Web.UI.WebControls.TableCell> </xref:System.Web.UI.WebControls.BoundField>"
  syntax:
    content: public override bool Initialize (bool enableSorting, System.Web.UI.Control control);
    parameters:
    - id: enableSorting
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>정렬이 지원 되는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
    - id: control
      type: System.Web.UI.Control
      description: "소유 하는 데이터 컨트롤은 <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref>합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>모든 경우"
  overload: System.Web.UI.WebControls.BoundField.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  id: InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  nameWithType: BoundField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  fullName: System.Web.UI.WebControls.BoundField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "지정 된 초기화 <xref href=&quot;System.Web.UI.WebControls.TableCell&quot;> </xref> 지정한 행 상태의 개체입니다."
  remarks: "InitializeCell 메서드를 구현 하 여 <xref:System.Web.UI.WebControls.BoundField>-파생 된 형식에 텍스트와 컨트롤을 추가 하는 <xref:System.Web.UI.WebControls.TableCell>개체 테이블을 사용 하 여 사용자 인터페이스 (UI)를 표시 하는 데이터 컨트롤의.</xref:System.Web.UI.WebControls.TableCell> </xref:System.Web.UI.WebControls.BoundField> 이러한 데이터 컨트롤은 완전 한 테이블 구조에서 행을 만들 때 컨트롤의 `CreateChildControls` 메서드를 호출 합니다. InitializeCell 메서드에 의해 호출 됩니다는 `InitializeRow` 등 <xref:System.Web.UI.WebControls.DetailsView> <xref:System.Web.UI.WebControls.GridView>.</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.DetailsView> 데이터 컨트롤의 메서드       사용 하는 컨트롤을 데이터 바인딩된 사용자 지정을 작성 하는 경우이 메서드는 호출 하 여 <xref:System.Web.UI.WebControls.TableCell>개체는 테이블 구조 데이터 나 컨트롤의 셀을 초기화 합니다.</xref:System.Web.UI.WebControls.TableCell> 작성 하는 경우이 메서드를 구현는 <xref:System.Web.UI.WebControls.BoundField>-파생 클래스</xref:System.Web.UI.WebControls.BoundField>"
  syntax:
    content: public override void InitializeCell (System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlCellType cellType, System.Web.UI.WebControls.DataControlRowState rowState, int rowIndex);
    parameters:
    - id: cell
      type: System.Web.UI.WebControls.DataControlFieldCell
      description: "<xref href=&quot;System.Web.UI.WebControls.TableCell&quot;> </xref> 를 초기화 합니다."
    - id: cellType
      type: System.Web.UI.WebControls.DataControlCellType
      description: "중 하나는 <xref href=&quot;System.Web.UI.WebControls.DataControlCellType&quot;> </xref> 값입니다."
    - id: rowState
      type: System.Web.UI.WebControls.DataControlRowState
      description: "중 하나는 <xref href=&quot;System.Web.UI.WebControls.DataControlRowState&quot;> </xref> 값입니다."
    - id: rowIndex
      type: System.Int32
      description: "행의 인덱스&0;부터 시작 합니다."
  overload: System.Web.UI.WebControls.BoundField.InitializeCell*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.InitializeDataCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState)
  id: InitializeDataCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState)
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: InitializeDataCell(DataControlFieldCell,DataControlRowState)
  nameWithType: BoundField.InitializeDataCell(DataControlFieldCell,DataControlRowState)
  fullName: System.Web.UI.WebControls.BoundField.InitializeDataCell(DataControlFieldCell,DataControlRowState)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "지정 된 초기화 <xref href=&quot;System.Web.UI.WebControls.TableCell&quot;> </xref> 지정한 행 상태의 개체입니다."
  remarks: "InitializeDataCell 방법은의 셀을 초기화 하는 데 사용 하는 도우미 메서드는 <xref:System.Web.UI.WebControls.BoundField>개체입니다.</xref:System.Web.UI.WebControls.BoundField>"
  syntax:
    content: protected virtual void InitializeDataCell (System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlRowState rowState);
    parameters:
    - id: cell
      type: System.Web.UI.WebControls.DataControlFieldCell
      description: "<xref href=&quot;System.Web.UI.WebControls.TableCell&quot;> </xref> 를 초기화 합니다."
    - id: rowState
      type: System.Web.UI.WebControls.DataControlRowState
      description: "중 하나는 <xref href=&quot;System.Web.UI.WebControls.DataControlRowState&quot;> </xref> 값입니다."
  overload: System.Web.UI.WebControls.BoundField.InitializeDataCell*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.LoadViewState(System.Object)
  id: LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: LoadViewState(Object)
  nameWithType: BoundField.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.BoundField.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "이 필드에 대 한 이전에 저장 된 뷰 상태 정보를 복원합니다."
  syntax:
    content: protected override void LoadViewState (object state);
    parameters:
    - id: state
      type: System.Object
      description: "복원할 컨트롤 상태를 나타냅니다."
  overload: System.Web.UI.WebControls.BoundField.LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.NullDisplayText
  id: NullDisplayText
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: NullDisplayText
  nameWithType: BoundField.NullDisplayText
  fullName: System.Web.UI.WebControls.BoundField.NullDisplayText
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "필드의 값이 null 인 필드에 대해 표시 되는 캡션을 가져오거나 설정 합니다."
  remarks: "경우에 따라 필드의 값을 null로 데이터 원본에 저장 합니다. 사용자 지정 필드 NullDisplayText 속성을 설정 하 여 null 값이 있는 대해 표시할 캡션을 지정할 수 있습니다. Null 필드 값에 빈 문자열로 표시 되는이 속성을 설정 하지 않으면 (&quot;&quot;). 레코드 업데이트 또는 사용자가 값을 입력 하는 경우 데이터 바인딩된 컨트롤에 삽입 될이 속성으로 지정 됩니다이 빈 문자열) (제외 데이터 바인딩된 컨트롤의에서 필드에 대 한 데이터 원본에 값이 null로 자동으로 변환 합니다.      > [!NOTE] > 빈 문자열 필드 값을 null 값을 변환 하려면 설정는 <xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A>속성을 `true`.</xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A>"
  example:
  - "The following code example demonstrates how to use the NullDisplayText property to specify a custom caption to display for null field values.  \n  \n [!code-vb[BoundFieldNullDisplayText#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1327_1.aspx)]\n [!code-cs[BoundFieldNullDisplayText#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1327_1.aspx)]"
  syntax:
    content: public virtual string NullDisplayText { get; set; }
    return:
      type: System.String
      description: "필드의 값이 null 인 필드에 대해 표시 되는 캡션. 기본값은 빈 문자열 (&quot;&quot;),이 속성이 설정 되어 있지 않음을 나타냅니다."
  overload: System.Web.UI.WebControls.BoundField.NullDisplayText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.OnDataBindField(System.Object,System.EventArgs)
  id: OnDataBindField(System.Object,System.EventArgs)
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: OnDataBindField(Object,EventArgs)
  nameWithType: BoundField.OnDataBindField(Object,EventArgs)
  fullName: System.Web.UI.WebControls.BoundField.OnDataBindField(Object,EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "필드의 값을 바인딩하는 <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref> 개체입니다."
  remarks: "<xref:System.Web.UI.WebControls.CheckBoxField.OnDataBindField%2A>메서드는 해당 셀에 데이터 원본에 있는 필드의 값을 바인딩하는 데 사용 하는 도우미 메서드는 <xref:System.Web.UI.WebControls.BoundField>개체입니다.</xref:System.Web.UI.WebControls.BoundField> </xref:System.Web.UI.WebControls.CheckBoxField.OnDataBindField%2A>"
  syntax:
    content: protected virtual void OnDataBindField (object sender, EventArgs e);
    parameters:
    - id: sender
      type: System.Object
      description: "이벤트의 소스입니다."
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.BoundField.OnDataBindField*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "필드 값이 바인딩된 컨트롤이 비활성화 되는 <xref href=&quot;System.Web.UI.WebControls.TextBox&quot;> </xref> 또는 <xref href=&quot;System.Web.UI.WebControls.TableCell&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.ReadOnly
  id: ReadOnly
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: ReadOnly
  nameWithType: BoundField.ReadOnly
  fullName: System.Web.UI.WebControls.BoundField.ReadOnly
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "편집 모드에는 필드의 값을 수정할 수 있는지 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "에 표시 된 값을 방지 하기 위해 읽기 전용 속성을 사용 하 여 한 <xref:System.Web.UI.WebControls.BoundField>개체가 수정 되지 않도록 합니다.</xref:System.Web.UI.WebControls.BoundField> 데이터 바인딩된 컨트롤이 편집 모드일 때 읽기 전용 필드는 편집 컨트롤 없이 일반 텍스트로 표시 됩니다.      > [!NOTE] >는 ReadOnly 속성은 편집 모드에만 적용 됩니다. 필드 삽입 모드에 표시 되지 않도록 하려면 사용 된 <xref:System.Web.UI.WebControls.DataControlField.InsertVisible%2A>속성.</xref:System.Web.UI.WebControls.DataControlField.InsertVisible%2A>"
  example:
  - "The following code example demonstrates how to use the ReadOnly property to prevent the values of the key field displayed in a <xref:System.Web.UI.WebControls.BoundField> object from being modified in edit mode.  \n  \n [!code-vb[BoundField#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_208_1.aspx)]\n [!code-cs[BoundField#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_208_1.aspx)]"
  syntax:
    content: public virtual bool ReadOnly { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>필드의 값을 편집 모드에서 수정 하지 못하도록 방지 하기 위해 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.BoundField.ReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.SupportsHtmlEncode
  id: SupportsHtmlEncode
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: SupportsHtmlEncode
  nameWithType: BoundField.SupportsHtmlEncode
  fullName: System.Web.UI.WebControls.BoundField.SupportsHtmlEncode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "HTML 인코딩을 지원 되는지 여부를 나타내는 값을 가져옵니다는 <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref> 개체입니다."
  remarks: "SupportsHtmlEncode 속성은의 <xref:System.Web.UI.WebControls.BoundField>클래스와 클래스에 HTML 인코딩을 지원 되는지 확인 하려면 파생된 클래스에서</xref:System.Web.UI.WebControls.BoundField> 사용 하는 도우미 속성"
  syntax:
    content: protected virtual bool SupportsHtmlEncode { get; }
    return:
      type: System.Boolean
      description: "항상 반환 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> HTML 인코딩을 지원 됨을 나타내기 위해는 <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.BoundField.SupportsHtmlEncode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.ThisExpression
  id: ThisExpression
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: ThisExpression
  nameWithType: BoundField.ThisExpression
  fullName: System.Web.UI.WebControls.BoundField.ThisExpression
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "&quot;This&quot;이 식을 나타냅니다."
  remarks: "이 필드를 나타내는 데 사용 됩니다는 <xref:System.Web.UI.WebControls.BoundField>자체 보다는 데이터 원본의 필드 데이터 원본에 대해 개체 바인딩해야 합니다.</xref:System.Web.UI.WebControls.BoundField> 이 경우 개체의 `ToString` 값 필드에 표시 됩니다.       이 필드는 주로 컨트롤 개발자가 사용 됩니다."
  syntax:
    content: public static readonly string ThisExpression;
    return:
      type: System.String
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.ValidateRequestMode
  id: ValidateRequestMode
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: ValidateRequestMode
  nameWithType: BoundField.ValidateRequestMode
  fullName: System.Web.UI.WebControls.BoundField.ValidateRequestMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "여부 클라이언트 입력을 확인 하 컨트롤 인지 여부를 결정 하는 값을 가져오거나 설정 합니다."
  syntax:
    content: public System.Web.UI.ValidateRequestMode ValidateRequestMode { get; set; }
    return:
      type: System.Web.UI.ValidateRequestMode
      description: "여부 클라이언트 입력을 확인 하 컨트롤 인지 여부를 결정 하는 값입니다. 기본값은 <xref href=&quot;System.Web.UI.ValidateRequestMode&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.BoundField.ValidateRequestMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.ValidateSupportsCallback
  id: ValidateSupportsCallback
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: ValidateSupportsCallback()
  nameWithType: BoundField.ValidateSupportsCallback()
  fullName: System.Web.UI.WebControls.BoundField.ValidateSupportsCallback()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "컨트롤에 포함 되는지 확인 한 <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref> 개체 콜백이 지원 합니다."
  remarks: "ValidateSupportsCallback 메서드는 컨트롤에 있는지 여부를 확인 하는 데 사용 하는 도우미 메서드는 <xref:System.Web.UI.WebControls.BoundField>콜백이 지원 개체입니다.</xref:System.Web.UI.WebControls.BoundField> 이 메서드는 콜백을 지원 되는 표시를 빈 메서드 (모든 코드를 포함 하지 않는 메서드)로 구현 되었습니다.      > [!NOTE] >이 메서드는 주로 컨트롤 개발자가 사용 됩니다."
  syntax:
    content: public override void ValidateSupportsCallback ();
    parameters: []
  overload: System.Web.UI.WebControls.BoundField.ValidateSupportsCallback*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: System.Web.UI.WebControls.DataControlField
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Web.UI.WebControls.BoundField.#ctor
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: BoundField()
  nameWithType: BoundField.BoundField()
  fullName: System.Web.UI.WebControls.BoundField.BoundField()
- uid: System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: ApplyFormatInEditMode
  nameWithType: BoundField.ApplyFormatInEditMode
  fullName: System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: ConvertEmptyStringToNull
  nameWithType: BoundField.ConvertEmptyStringToNull
  fullName: System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull
- uid: System.Web.UI.WebControls.BoundField.CopyProperties(System.Web.UI.WebControls.DataControlField)
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: CopyProperties(DataControlField)
  nameWithType: BoundField.CopyProperties(DataControlField)
  fullName: System.Web.UI.WebControls.BoundField.CopyProperties(DataControlField)
- uid: System.Web.UI.WebControls.BoundField.CreateField
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: CreateField()
  nameWithType: BoundField.CreateField()
  fullName: System.Web.UI.WebControls.BoundField.CreateField()
- uid: System.Web.UI.WebControls.BoundField.DataField
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: DataField
  nameWithType: BoundField.DataField
  fullName: System.Web.UI.WebControls.BoundField.DataField
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.BoundField.DataFormatString
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: DataFormatString
  nameWithType: BoundField.DataFormatString
  fullName: System.Web.UI.WebControls.BoundField.DataFormatString
- uid: System.Web.UI.WebControls.BoundField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  nameWithType: BoundField.ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  fullName: System.Web.UI.WebControls.BoundField.ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
- uid: System.Collections.Specialized.IOrderedDictionary
  parent: System.Collections.Specialized
  isExternal: false
  name: IOrderedDictionary
  nameWithType: IOrderedDictionary
  fullName: System.Collections.Specialized.IOrderedDictionary
- uid: System.Web.UI.WebControls.DataControlFieldCell
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlFieldCell
  nameWithType: DataControlFieldCell
  fullName: System.Web.UI.WebControls.DataControlFieldCell
- uid: System.Web.UI.WebControls.DataControlRowState
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlRowState
  nameWithType: DataControlRowState
  fullName: System.Web.UI.WebControls.DataControlRowState
- uid: System.Web.UI.WebControls.BoundField.FormatDataValue(System.Object,System.Boolean)
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: FormatDataValue(Object,Boolean)
  nameWithType: BoundField.FormatDataValue(Object,Boolean)
  fullName: System.Web.UI.WebControls.BoundField.FormatDataValue(Object,Boolean)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.BoundField.GetDesignTimeValue
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: GetDesignTimeValue()
  nameWithType: BoundField.GetDesignTimeValue()
  fullName: System.Web.UI.WebControls.BoundField.GetDesignTimeValue()
- uid: System.Web.UI.WebControls.BoundField.GetValue(System.Web.UI.Control)
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: GetValue(Control)
  nameWithType: BoundField.GetValue(Control)
  fullName: System.Web.UI.WebControls.BoundField.GetValue(Control)
- uid: System.Web.UI.Control
  parent: System.Web.UI
  isExternal: false
  name: Control
  nameWithType: Control
  fullName: System.Web.UI.Control
- uid: System.Web.UI.WebControls.BoundField.HeaderText
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: HeaderText
  nameWithType: BoundField.HeaderText
  fullName: System.Web.UI.WebControls.BoundField.HeaderText
- uid: System.Web.UI.WebControls.BoundField.HtmlEncode
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: HtmlEncode
  nameWithType: BoundField.HtmlEncode
  fullName: System.Web.UI.WebControls.BoundField.HtmlEncode
- uid: System.Web.UI.WebControls.BoundField.HtmlEncodeFormatString
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: HtmlEncodeFormatString
  nameWithType: BoundField.HtmlEncodeFormatString
  fullName: System.Web.UI.WebControls.BoundField.HtmlEncodeFormatString
- uid: System.Web.UI.WebControls.BoundField.Initialize(System.Boolean,System.Web.UI.Control)
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: Initialize(Boolean,Control)
  nameWithType: BoundField.Initialize(Boolean,Control)
  fullName: System.Web.UI.WebControls.BoundField.Initialize(Boolean,Control)
- uid: System.Web.UI.WebControls.BoundField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  nameWithType: BoundField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  fullName: System.Web.UI.WebControls.BoundField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
- uid: System.Web.UI.WebControls.DataControlCellType
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlCellType
  nameWithType: DataControlCellType
  fullName: System.Web.UI.WebControls.DataControlCellType
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.BoundField.InitializeDataCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState)
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: InitializeDataCell(DataControlFieldCell,DataControlRowState)
  nameWithType: BoundField.InitializeDataCell(DataControlFieldCell,DataControlRowState)
  fullName: System.Web.UI.WebControls.BoundField.InitializeDataCell(DataControlFieldCell,DataControlRowState)
- uid: System.Web.UI.WebControls.BoundField.LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: LoadViewState(Object)
  nameWithType: BoundField.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.BoundField.LoadViewState(Object)
- uid: System.Web.UI.WebControls.BoundField.NullDisplayText
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: NullDisplayText
  nameWithType: BoundField.NullDisplayText
  fullName: System.Web.UI.WebControls.BoundField.NullDisplayText
- uid: System.Web.UI.WebControls.BoundField.OnDataBindField(System.Object,System.EventArgs)
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: OnDataBindField(Object,EventArgs)
  nameWithType: BoundField.OnDataBindField(Object,EventArgs)
  fullName: System.Web.UI.WebControls.BoundField.OnDataBindField(Object,EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.WebControls.BoundField.ReadOnly
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: ReadOnly
  nameWithType: BoundField.ReadOnly
  fullName: System.Web.UI.WebControls.BoundField.ReadOnly
- uid: System.Web.UI.WebControls.BoundField.SupportsHtmlEncode
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: SupportsHtmlEncode
  nameWithType: BoundField.SupportsHtmlEncode
  fullName: System.Web.UI.WebControls.BoundField.SupportsHtmlEncode
- uid: System.Web.UI.WebControls.BoundField.ThisExpression
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: ThisExpression
  nameWithType: BoundField.ThisExpression
  fullName: System.Web.UI.WebControls.BoundField.ThisExpression
- uid: System.Web.UI.WebControls.BoundField.ValidateRequestMode
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: ValidateRequestMode
  nameWithType: BoundField.ValidateRequestMode
  fullName: System.Web.UI.WebControls.BoundField.ValidateRequestMode
- uid: System.Web.UI.ValidateRequestMode
  parent: System.Web.UI
  isExternal: false
  name: ValidateRequestMode
  nameWithType: ValidateRequestMode
  fullName: System.Web.UI.ValidateRequestMode
- uid: System.Web.UI.WebControls.BoundField.ValidateSupportsCallback
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: ValidateSupportsCallback()
  nameWithType: BoundField.ValidateSupportsCallback()
  fullName: System.Web.UI.WebControls.BoundField.ValidateSupportsCallback()
- uid: System.Web.UI.WebControls.BoundField.#ctor*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: BoundField
  nameWithType: BoundField.BoundField
- uid: System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: ApplyFormatInEditMode
  nameWithType: BoundField.ApplyFormatInEditMode
- uid: System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: ConvertEmptyStringToNull
  nameWithType: BoundField.ConvertEmptyStringToNull
- uid: System.Web.UI.WebControls.BoundField.CopyProperties*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: CopyProperties
  nameWithType: BoundField.CopyProperties
- uid: System.Web.UI.WebControls.BoundField.CreateField*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: CreateField
  nameWithType: BoundField.CreateField
- uid: System.Web.UI.WebControls.BoundField.DataField*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: DataField
  nameWithType: BoundField.DataField
- uid: System.Web.UI.WebControls.BoundField.DataFormatString*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: DataFormatString
  nameWithType: BoundField.DataFormatString
- uid: System.Web.UI.WebControls.BoundField.ExtractValuesFromCell*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: ExtractValuesFromCell
  nameWithType: BoundField.ExtractValuesFromCell
- uid: System.Web.UI.WebControls.BoundField.FormatDataValue*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: FormatDataValue
  nameWithType: BoundField.FormatDataValue
- uid: System.Web.UI.WebControls.BoundField.GetDesignTimeValue*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: GetDesignTimeValue
  nameWithType: BoundField.GetDesignTimeValue
- uid: System.Web.UI.WebControls.BoundField.GetValue*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: GetValue
  nameWithType: BoundField.GetValue
- uid: System.Web.UI.WebControls.BoundField.HeaderText*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: HeaderText
  nameWithType: BoundField.HeaderText
- uid: System.Web.UI.WebControls.BoundField.HtmlEncode*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: HtmlEncode
  nameWithType: BoundField.HtmlEncode
- uid: System.Web.UI.WebControls.BoundField.HtmlEncodeFormatString*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: HtmlEncodeFormatString
  nameWithType: BoundField.HtmlEncodeFormatString
- uid: System.Web.UI.WebControls.BoundField.Initialize*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: Initialize
  nameWithType: BoundField.Initialize
- uid: System.Web.UI.WebControls.BoundField.InitializeCell*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: InitializeCell
  nameWithType: BoundField.InitializeCell
- uid: System.Web.UI.WebControls.BoundField.InitializeDataCell*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: InitializeDataCell
  nameWithType: BoundField.InitializeDataCell
- uid: System.Web.UI.WebControls.BoundField.LoadViewState*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: LoadViewState
  nameWithType: BoundField.LoadViewState
- uid: System.Web.UI.WebControls.BoundField.NullDisplayText*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: NullDisplayText
  nameWithType: BoundField.NullDisplayText
- uid: System.Web.UI.WebControls.BoundField.OnDataBindField*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: OnDataBindField
  nameWithType: BoundField.OnDataBindField
- uid: System.Web.UI.WebControls.BoundField.ReadOnly*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: ReadOnly
  nameWithType: BoundField.ReadOnly
- uid: System.Web.UI.WebControls.BoundField.SupportsHtmlEncode*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: SupportsHtmlEncode
  nameWithType: BoundField.SupportsHtmlEncode
- uid: System.Web.UI.WebControls.BoundField.ValidateRequestMode*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: ValidateRequestMode
  nameWithType: BoundField.ValidateRequestMode
- uid: System.Web.UI.WebControls.BoundField.ValidateSupportsCallback*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: ValidateSupportsCallback
  nameWithType: BoundField.ValidateSupportsCallback
