### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
  id: IDesignerSerializationManager
  children:
  - System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)
  - System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context
  - System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)
  - System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System.String)
  - System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName(System.Object)
  - System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer(System.Type,System.Type)
  - System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetType(System.String)
  - System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties
  - System.ComponentModel.Design.Serialization.IDesignerSerializationManager.RemoveSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)
  - System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError(System.Object)
  - System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName
  - System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete
  - System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName(System.Object,System.String)
  langs:
  - csharp
  name: IDesignerSerializationManager
  nameWithType: IDesignerSerializationManager
  fullName: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
  type: Interface
  summary: "디자인 타임 serialization을 관리할 수 있는 인터페이스를 제공 합니다."
  remarks: "디자이너는 디자인 타임 serialization 프로세스 관리에 유용한 서비스를 IDesignerSerializationManager을 활용할 수 있습니다. 예를 들어 디자이너 serialization 관리자를 구현 하는 클래스 개체를 만들, 형식을 조회 하 고, 개체를 식별 하 고 특정 형식의 serialization을 사용자 지정 하려면이 인터페이스를 사용할 수 있습니다."
  example:
  - "The following example illustrates how to use IDesignerSerializationManager to serialize and deserialize Code DOM statements.  \n  \n [!code-cs[IDesignerSerializationManagerSample#1](~/add/codesnippet/csharp/t-system.componentmodel._71_1.cs)]\n [!code-cpp[IDesignerSerializationManagerSample#1](~/add/codesnippet/cpp/t-system.componentmodel._71_1.cpp)]\n [!code-vb[IDesignerSerializationManagerSample#1](~/add/codesnippet/visualbasic/t-system.componentmodel._71_1.vb)]"
  syntax:
    content: 'public interface IDesignerSerializationManager : IServiceProvider'
  implements:
  - System.IServiceProvider
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)
  id: AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)
  parent: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
  langs:
  - csharp
  name: AddSerializationProvider(IDesignerSerializationProvider)
  nameWithType: IDesignerSerializationManager.AddSerializationProvider(IDesignerSerializationProvider)
  fullName: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider(IDesignerSerializationProvider)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Serialization 관리자에 지정된 된 serialization 공급자를 추가합니다."
  remarks: "이 메서드를 serialization 관리자는 사용자 지정 serialization 공급자를 추가합니다. Serialization 공급자는 특정 유형의 개체 또는 개체의 형식 집합에 대 한 사용자 지정 serializer를 제공할 수 있습니다. 직렬화 중에 각 사용자 지정 serialization 공급자는 하나를 제공할 수 있으면 특정 데이터 형식에 대 한 serializer를 반환 하도록 쿼리 됩니다. Serialization 관리자는 특정 형식에 대 한 기본 serializer를 사용 하기 전에이 메서드에서 제공 하는 사용자 지정 serializer를 사용 합니다."
  syntax:
    content: public void AddSerializationProvider (System.ComponentModel.Design.Serialization.IDesignerSerializationProvider provider);
    parameters:
    - id: provider
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationProvider
      description: "추가할 serialization 공급자입니다."
  overload: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context
  id: Context
  parent: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
  langs:
  - csharp
  name: Context
  nameWithType: IDesignerSerializationManager.Context
  fullName: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Serializer 간의 통신에 유용한 스택 기반의 사용자 정의 저장소 영역을 가져옵니다."
  remarks: "이 저장소 영역 serializer를 통신 개체 컨텍스트 정보를 제공합니다. Serialize 되 고 개체에 대 한 컨텍스트 정보를 저장 하 고이 <xref:System.ComponentModel.Design.Serialization.ContextStack>.</xref:System.ComponentModel.Design.Serialization.ContextStack> 를 통해 액세스할 수 있습니다."
  syntax:
    content: public System.ComponentModel.Design.Serialization.ContextStack Context { get; }
    return:
      type: System.ComponentModel.Design.Serialization.ContextStack
      description: "A <xref href=&quot;System.ComponentModel.Design.Serialization.ContextStack&quot;> </xref> 데이터를 저장 하는 합니다."
  overload: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)
  id: CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)
  parent: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
  langs:
  - csharp
  name: CreateInstance(Type,ICollection,String,Boolean)
  nameWithType: IDesignerSerializationManager.CreateInstance(Type,ICollection,String,Boolean)
  fullName: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(Type,ICollection,String,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "지정 된 형식의 인스턴스를 만들어 명명 된 인스턴스의 컬렉션에 추가 합니다."
  remarks: "구현 하는 개체 <xref:System.ComponentModel.IComponent>경우 디자인 타임 컨테이너에 추가 되는 `addToContainer` 매개 변수는 `true`.</xref:System.ComponentModel.IComponent>"
  syntax:
    content: public object CreateInstance (Type type, System.Collections.ICollection arguments, string name, bool addToContainer);
    parameters:
    - id: type
      type: System.Type
      description: "만들려는 데이터 형식입니다."
    - id: arguments
      type: System.Collections.ICollection
      description: "이 형식에 대 한 생성자에 전달할 인수입니다."
    - id: name
      type: System.String
      description: "개체의 이름입니다. 이 이름은 <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance*>.</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance*> 통해 나중에 개체 액세스 데 사용할 수 있습니다. 경우 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 은 전달 된 개체는 계속 만들어지지만 이름으로 액세스할 수 없습니다."
    - id: addToContainer
      type: System.Boolean
      description: "경우 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>,이 개체를 디자인 컨테이너에 추가 됩니다. 개체를 구현 해야 <xref href=&quot;System.ComponentModel.IComponent&quot;> </xref> 이 영향을 줄 수에 대 한 합니다."
    return:
      type: System.Object
      description: "새로 만든된 개체 인스턴스입니다."
  overload: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System.String)
  id: GetInstance(System.String)
  parent: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
  langs:
  - csharp
  name: GetInstance(String)
  nameWithType: IDesignerSerializationManager.GetInstance(String)
  fullName: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(String)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "지정된 된 이름 가진 생성된 된 개체의 인스턴스를 가져옵니다 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 해당 개체가 존재 하지 않는 경우."
  remarks: "검색할 개체의 이름 <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A>.</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A> 를 이전에 호출을 통해 설정 해야 합니다."
  syntax:
    content: public object GetInstance (string name);
    parameters:
    - id: name
      type: System.String
      description: "검색할 개체의 이름입니다."
    return:
      type: System.Object
      description: "지정 된 이름의 개체의 인스턴스 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 경우 해당 이름의 개체를 찾을 수 있습니다."
  overload: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName(System.Object)
  id: GetName(System.Object)
  parent: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
  langs:
  - csharp
  name: GetName(Object)
  nameWithType: IDesignerSerializationManager.GetName(Object)
  fullName: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "지정된 된 개체의 이름을 가져옵니다 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 개체에 이름이 없는 경우."
  syntax:
    content: public string GetName (object value);
    parameters:
    - id: value
      type: System.Object
      description: "에 대 한 이름을 검색 하는 개체입니다."
    return:
      type: System.String
      description: "개체의 이름 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 개체 이름이 없으면 합니다."
  overload: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer(System.Type,System.Type)
  id: GetSerializer(System.Type,System.Type)
  parent: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
  langs:
  - csharp
  name: GetSerializer(Type,Type)
  nameWithType: IDesignerSerializationManager.GetSerializer(Type,Type)
  fullName: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer(Type,Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "지정된 된 개체 형식에 대 한 요청 된 형식의 serializer를 가져옵니다."
  syntax:
    content: public object GetSerializer (Type objectType, Type serializerType);
    parameters:
    - id: objectType
      type: System.Type
      description: "에 대 한 직렬 변환기를 가져올 개체의 형식입니다."
    - id: serializerType
      type: System.Type
      description: "검색할 serializer의 형식입니다."
    return:
      type: System.Object
      description: "요청 된 serializer의 인스턴스 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 적절 한 serializer가 찾을 수 없으면입니다."
  overload: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetType(System.String)
  id: GetType(System.String)
  parent: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
  langs:
  - csharp
  name: GetType(String)
  nameWithType: IDesignerSerializationManager.GetType(String)
  fullName: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetType(String)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "지정 된 이름의 형식을 가져옵니다."
  syntax:
    content: public Type GetType (string typeName);
    parameters:
    - id: typeName
      type: System.String
      description: "로드 하는 유형의 정규화 된 이름입니다."
    return:
      type: System.Type
      description: "형식의 인스턴스 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 형식을 로드할 수 없는 경우."
  overload: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetType*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties
  id: Properties
  parent: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
  langs:
  - csharp
  name: Properties
  nameWithType: IDesignerSerializationManager.Properties
  fullName: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "사용 가능한 serializer로 직렬화 될 수 있는 사용자 지정 속성을 나타냅니다."
  remarks: "이 속성은 빈 컬렉션을 포함할 수 있습니다. Serializer 해야 이러한 속성이 존재 하는 것이 아닙니다. 파생된 클래스 또는 구현의 <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager>여기에 노출 되는 속성의 집합을 정의 합니다.</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager>"
  syntax:
    content: public System.ComponentModel.PropertyDescriptorCollection Properties { get; }
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "A <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref> 직렬화 할 속성을 포함 하 합니다."
  overload: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.RemoveSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)
  id: RemoveSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)
  parent: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
  langs:
  - csharp
  name: RemoveSerializationProvider(IDesignerSerializationProvider)
  nameWithType: IDesignerSerializationManager.RemoveSerializationProvider(IDesignerSerializationProvider)
  fullName: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.RemoveSerializationProvider(IDesignerSerializationProvider)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Serialization 관리자에서 사용자 지정 serialization 공급자를 제거합니다."
  syntax:
    content: public void RemoveSerializationProvider (System.ComponentModel.Design.Serialization.IDesignerSerializationProvider provider);
    parameters:
    - id: provider
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationProvider
      description: "제거할 공급자입니다. 이 개체 추가 되어 <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider*>.</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider*> 를 사용 하 여"
  overload: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.RemoveSerializationProvider*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError(System.Object)
  id: ReportError(System.Object)
  parent: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
  langs:
  - csharp
  name: ReportError(Object)
  nameWithType: IDesignerSerializationManager.ReportError(Object)
  fullName: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Serialization의에서 오류를 보고합니다."
  remarks: "Serialization 관리자 ReportError 구현에서 여러 개의 오류를 로깅을 지 원하는 경우 발생 한 모든 오류를 한 번에 표시 될 수 있는 향후 보고서에 대 한 오류 정보 개체를 저장할 수 저장할 합니다. 이 메서드는 여러 오류를 저장, serialization이이 메서드를 호출한 후 계속 합니다. 이 방법은 여러 개의 오류를 기록 하는 것을 지원 하지 않습니다, 하는 경우이 메서드는 serialization을 중단 하는 예외를 throw 해야 합니다.      > [!NOTE] > Serialization 관리자는 직렬화 하는 동안 발생 한 오류에 대 한 예외를 throw 하지 해야 합니다. 만 역직렬화 하는 동안 예외가 throw 해야 합니다. 그렇지 않으면 사용자가 문서를 저장 하기 때문에 혼란 스 러 워 실패 하지 합니다."
  syntax:
    content: public void ReportError (object errorInformation);
    parameters:
    - id: errorInformation
      type: System.Object
      description: "보고서에 대 한 오류가 발생 했습니다. 이 정보 개체는 모든 개체 유형일 수 있습니다. 예외 이면 예외 메시지 추출 하 고 사용자에 게 보고 됩니다. 다른 형식인 경우 <xref:System.Object.ToString*>사용자에 게 정보를 표시 하기 위해 호출 됩니다.</xref:System.Object.ToString*>"
  overload: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName
  id: ResolveName
  parent: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
  langs:
  - csharp
  name: ResolveName
  nameWithType: IDesignerSerializationManager.ResolveName
  fullName: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName
  type: Event
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "발생 경우 <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName*>지정된 된 이름을 serialization 관리자의 이름 테이블에서 찾을 수 없습니다.</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName*>"
  remarks: "이 이벤트 종속성에 의해 serializer가 개체 생성을 명령에 보유 하지 않는 serializer 필요에 따라 개체를 만들 수 있는 방법을 제공 합니다. 이 이벤트에 대 한 대리자는 serialization 후 즉시 제거 됩니다 또는 deserialization이 완료 합니다."
  syntax:
    content: public event System.ComponentModel.Design.Serialization.ResolveNameEventHandler ResolveName;
    return:
      type: System.ComponentModel.Design.Serialization.ResolveNameEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete
  id: SerializationComplete
  parent: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
  langs:
  - csharp
  name: SerializationComplete
  nameWithType: IDesignerSerializationManager.SerializationComplete
  fullName: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete
  type: Event
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Serialization이 완료 되었을 때 발생 합니다."
  remarks: "이 이벤트는 serialization 또는 deserialization이 완료 하는 경우에 발생 합니다.       일반적으로 serialization 코드를 serialization 데이터를 내보낼 쓰고 상태 관련 확인 및 처리가 일반적으로 필요 하지 않습니다. Serialization 동안 상태 데이터를 유지 해야 하는 데이터를 설정 하거나 SerializationComplete 이벤트를 수신 하 고 serialization 후 데이터를 지울 수 있는 serializer에서 액세스할 수 있습니다. 직렬화 중에 직렬 변환기를 다시 사용할 수 있습니다 하 고 나머지 상태 데이터 나 열려 있는 스트림이 올바르지 않을 수 있으므로 serialization 중요할 수 있습니다 후 적절 한 상태를 복원 합니다.       예를 들어 serializer 리소스 파일 등의 다른 파일에 쓸 수 있어야 하는 경우 이기 완료 되 면 파일을 닫고 serializer를 디자인 합니다. 일반적으로 개체 그래프를 직렬화 하는 중 몇 가지 serializer 필요 합니다. 리소스 파일을 열고 여러 번을 닫을 수는 있습니다. 대신, 리소스 파일 SerializationComplete 이벤트 수신 대기 하는 개체로 직렬화의 끝에 닫을 수 있습니다."
  syntax:
    content: public event EventHandler SerializationComplete;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName(System.Object,System.String)
  id: SetName(System.Object,System.String)
  parent: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
  langs:
  - csharp
  name: SetName(Object,String)
  nameWithType: IDesignerSerializationManager.SetName(Object,String)
  fullName: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName(Object,String)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "지정된 된 기존 개체의 이름을 설정합니다."
  remarks: "만들고 다음 <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A>.</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A> 사용 하지 않고 개체의 인스턴스 이름을 지정 해야 하는 경우이 메서드가 유용 합니다. 기존 개체의 이름을 변경 하려는 경우 또는 새 개체에 이미 사용 되는 이름을 지정 하려고 하면 예외가 throw 됩니다."
  syntax:
    content: public void SetName (object instance, string name);
    parameters:
    - id: instance
      type: System.Object
      description: "이름에는 개체 인스턴스."
    - id: name
      type: System.String
      description: "인스턴스에 지정할 이름입니다."
  overload: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)
  parent: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
  isExternal: false
  name: AddSerializationProvider(IDesignerSerializationProvider)
  nameWithType: IDesignerSerializationManager.AddSerializationProvider(IDesignerSerializationProvider)
  fullName: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider(IDesignerSerializationProvider)
- uid: System.ComponentModel.Design.Serialization.IDesignerSerializationProvider
  parent: System.ComponentModel.Design.Serialization
  isExternal: false
  name: IDesignerSerializationProvider
  nameWithType: IDesignerSerializationProvider
  fullName: System.ComponentModel.Design.Serialization.IDesignerSerializationProvider
- uid: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context
  parent: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
  isExternal: false
  name: Context
  nameWithType: IDesignerSerializationManager.Context
  fullName: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context
- uid: System.ComponentModel.Design.Serialization.ContextStack
  parent: System.ComponentModel.Design.Serialization
  isExternal: false
  name: ContextStack
  nameWithType: ContextStack
  fullName: System.ComponentModel.Design.Serialization.ContextStack
- uid: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)
  parent: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
  isExternal: false
  name: CreateInstance(Type,ICollection,String,Boolean)
  nameWithType: IDesignerSerializationManager.CreateInstance(Type,ICollection,String,Boolean)
  fullName: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(Type,ICollection,String,Boolean)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System.String)
  parent: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
  isExternal: false
  name: GetInstance(String)
  nameWithType: IDesignerSerializationManager.GetInstance(String)
  fullName: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(String)
- uid: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName(System.Object)
  parent: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
  isExternal: false
  name: GetName(Object)
  nameWithType: IDesignerSerializationManager.GetName(Object)
  fullName: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName(Object)
- uid: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer(System.Type,System.Type)
  parent: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
  isExternal: false
  name: GetSerializer(Type,Type)
  nameWithType: IDesignerSerializationManager.GetSerializer(Type,Type)
  fullName: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer(Type,Type)
- uid: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetType(System.String)
  parent: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
  isExternal: false
  name: GetType(String)
  nameWithType: IDesignerSerializationManager.GetType(String)
  fullName: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetType(String)
- uid: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties
  parent: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
  isExternal: false
  name: Properties
  nameWithType: IDesignerSerializationManager.Properties
  fullName: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties
- uid: System.ComponentModel.PropertyDescriptorCollection
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptorCollection
  nameWithType: PropertyDescriptorCollection
  fullName: System.ComponentModel.PropertyDescriptorCollection
- uid: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.RemoveSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)
  parent: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
  isExternal: false
  name: RemoveSerializationProvider(IDesignerSerializationProvider)
  nameWithType: IDesignerSerializationManager.RemoveSerializationProvider(IDesignerSerializationProvider)
  fullName: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.RemoveSerializationProvider(IDesignerSerializationProvider)
- uid: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError(System.Object)
  parent: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
  isExternal: false
  name: ReportError(Object)
  nameWithType: IDesignerSerializationManager.ReportError(Object)
  fullName: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError(Object)
- uid: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName
  parent: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
  isExternal: false
  name: ResolveName
  nameWithType: IDesignerSerializationManager.ResolveName
  fullName: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName
- uid: System.ComponentModel.Design.Serialization.ResolveNameEventHandler
  parent: System.ComponentModel.Design.Serialization
  isExternal: false
  name: ResolveNameEventHandler
  nameWithType: ResolveNameEventHandler
  fullName: System.ComponentModel.Design.Serialization.ResolveNameEventHandler
- uid: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete
  parent: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
  isExternal: false
  name: SerializationComplete
  nameWithType: IDesignerSerializationManager.SerializationComplete
  fullName: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName(System.Object,System.String)
  parent: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
  isExternal: false
  name: SetName(Object,String)
  nameWithType: IDesignerSerializationManager.SetName(Object,String)
  fullName: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName(Object,String)
- uid: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider*
  parent: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
  isExternal: false
  name: AddSerializationProvider
  nameWithType: IDesignerSerializationManager.AddSerializationProvider
- uid: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context*
  parent: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
  isExternal: false
  name: Context
  nameWithType: IDesignerSerializationManager.Context
- uid: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance*
  parent: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
  isExternal: false
  name: CreateInstance
  nameWithType: IDesignerSerializationManager.CreateInstance
- uid: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance*
  parent: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
  isExternal: false
  name: GetInstance
  nameWithType: IDesignerSerializationManager.GetInstance
- uid: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName*
  parent: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
  isExternal: false
  name: GetName
  nameWithType: IDesignerSerializationManager.GetName
- uid: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer*
  parent: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
  isExternal: false
  name: GetSerializer
  nameWithType: IDesignerSerializationManager.GetSerializer
- uid: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetType*
  parent: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
  isExternal: false
  name: GetType
  nameWithType: IDesignerSerializationManager.GetType
- uid: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties*
  parent: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
  isExternal: false
  name: Properties
  nameWithType: IDesignerSerializationManager.Properties
- uid: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.RemoveSerializationProvider*
  parent: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
  isExternal: false
  name: RemoveSerializationProvider
  nameWithType: IDesignerSerializationManager.RemoveSerializationProvider
- uid: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError*
  parent: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
  isExternal: false
  name: ReportError
  nameWithType: IDesignerSerializationManager.ReportError
- uid: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName*
  parent: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
  isExternal: false
  name: SetName
  nameWithType: IDesignerSerializationManager.SetName
