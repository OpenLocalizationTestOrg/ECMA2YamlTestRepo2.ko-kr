### YamlMime:ManagedReference
items:
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition
  id: RuleExpressionCondition
  children:
  - System.Workflow.Activities.Rules.RuleExpressionCondition.#ctor
  - System.Workflow.Activities.Rules.RuleExpressionCondition.#ctor(System.CodeDom.CodeExpression)
  - System.Workflow.Activities.Rules.RuleExpressionCondition.#ctor(System.String)
  - System.Workflow.Activities.Rules.RuleExpressionCondition.#ctor(System.String,System.CodeDom.CodeExpression)
  - System.Workflow.Activities.Rules.RuleExpressionCondition.Clone
  - System.Workflow.Activities.Rules.RuleExpressionCondition.Equals(System.Object)
  - System.Workflow.Activities.Rules.RuleExpressionCondition.Evaluate(System.Workflow.Activities.Rules.RuleExecution)
  - System.Workflow.Activities.Rules.RuleExpressionCondition.Expression
  - System.Workflow.Activities.Rules.RuleExpressionCondition.GetDependencies(System.Workflow.Activities.Rules.RuleValidation)
  - System.Workflow.Activities.Rules.RuleExpressionCondition.GetHashCode
  - System.Workflow.Activities.Rules.RuleExpressionCondition.Name
  - System.Workflow.Activities.Rules.RuleExpressionCondition.OnRuntimeInitialized
  - System.Workflow.Activities.Rules.RuleExpressionCondition.ToString
  - System.Workflow.Activities.Rules.RuleExpressionCondition.Validate(System.Workflow.Activities.Rules.RuleValidation)
  langs:
  - csharp
  name: RuleExpressionCondition
  nameWithType: RuleExpressionCondition
  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition
  type: Class
  summary: "뒤의 조건 정의 정의 된 <xref href=&quot;System.Workflow.Activities.Rules.RuleConditionReference&quot;> </xref>합니다. 이 클래스는 상속 될 수 없습니다."
  remarks: "RuleExpressionCondition 클래스 정의 기본 조건을 평가 하는 경우는 <xref:System.Workflow.Activities.Rules.RuleSet>실행 됩니다.</xref:System.Workflow.Activities.Rules.RuleSet>       이 조건 형식은 CodeDom 형식으로 모델링 됩니다. CodeDom 형식에 대 한 자세한 내용은 참조 [CodeDOM Windows Workflow Foundation에서 유형을 지 원하는](http://msdn.microsoft.com/en-us/0381740f-0a29-43ae-96e2-17e14e832083)합니다."
  syntax:
    content: 'public sealed class RuleExpressionCondition : System.Workflow.Activities.Rules.RuleCondition'
  inheritance:
  - System.Object
  - System.Workflow.Activities.Rules.RuleCondition
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.#ctor
  id: '#ctor'
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  langs:
  - csharp
  name: RuleExpressionCondition()
  nameWithType: RuleExpressionCondition.RuleExpressionCondition()
  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.RuleExpressionCondition()
  type: Constructor
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities.Rules
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Workflow.Activities.Rules.RuleExpressionCondition&quot;> </xref> 클래스입니다."
  syntax:
    content: public RuleExpressionCondition ();
    parameters: []
  overload: System.Workflow.Activities.Rules.RuleExpressionCondition.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.#ctor(System.CodeDom.CodeExpression)
  id: '#ctor(System.CodeDom.CodeExpression)'
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  langs:
  - csharp
  name: RuleExpressionCondition(CodeExpression)
  nameWithType: RuleExpressionCondition.RuleExpressionCondition(CodeExpression)
  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.RuleExpressionCondition(CodeExpression)
  type: Constructor
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities.Rules
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Workflow.Activities.Rules.RuleExpressionCondition&quot;> </xref> 지정된 된 코드 식을 사용 하 여 클래스입니다."
  syntax:
    content: public RuleExpressionCondition (System.CodeDom.CodeExpression expression);
    parameters:
    - id: expression
      type: System.CodeDom.CodeExpression
      description: "<xref href=&quot;System.CodeDom.CodeExpression&quot;> </xref> 초기화 하는 <xref href=&quot;System.Workflow.Activities.Rules.RuleExpressionCondition&quot;> </xref> 사용 합니다."
  overload: System.Workflow.Activities.Rules.RuleExpressionCondition.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  langs:
  - csharp
  name: RuleExpressionCondition(String)
  nameWithType: RuleExpressionCondition.RuleExpressionCondition(String)
  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.RuleExpressionCondition(String)
  type: Constructor
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities.Rules
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Workflow.Activities.Rules.RuleExpressionCondition&quot;> </xref> 지정된 된 이름을 사용 하 여 클래스입니다."
  syntax:
    content: public RuleExpressionCondition (string conditionName);
    parameters:
    - id: conditionName
      type: System.String
      description: "확인할 조건의 이름입니다."
  overload: System.Workflow.Activities.Rules.RuleExpressionCondition.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>conditionName</code>가 null 참조 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> Visual basic에서)."
  platform:
  - net462
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.#ctor(System.String,System.CodeDom.CodeExpression)
  id: '#ctor(System.String,System.CodeDom.CodeExpression)'
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  langs:
  - csharp
  name: RuleExpressionCondition(String,CodeExpression)
  nameWithType: RuleExpressionCondition.RuleExpressionCondition(String,CodeExpression)
  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.RuleExpressionCondition(String,CodeExpression)
  type: Constructor
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities.Rules
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Workflow.Activities.Rules.RuleExpressionCondition&quot;> </xref> 지정한 이름 및 코드 식을 사용 하 여 클래스입니다."
  syntax:
    content: public RuleExpressionCondition (string conditionName, System.CodeDom.CodeExpression expression);
    parameters:
    - id: conditionName
      type: System.String
      description: "확인할 조건의 이름입니다."
    - id: expression
      type: System.CodeDom.CodeExpression
      description: "<xref href=&quot;System.CodeDom.CodeExpression&quot;> </xref> 초기화 하는 <xref href=&quot;System.Workflow.Activities.Rules.RuleExpressionCondition&quot;> </xref> 사용 합니다."
  overload: System.Workflow.Activities.Rules.RuleExpressionCondition.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.Clone
  id: Clone
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  langs:
  - csharp
  name: Clone()
  nameWithType: RuleExpressionCondition.Clone()
  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.Clone()
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities.Rules
  summary: "현재의 전체 복사본을 만들고 <xref href=&quot;System.Workflow.Activities.Rules.RuleExpressionCondition&quot;> </xref>합니다."
  syntax:
    content: public override System.Workflow.Activities.Rules.RuleCondition Clone ();
    parameters: []
    return:
      type: System.Workflow.Activities.Rules.RuleCondition
      description: "A <xref href=&quot;System.Workflow.Activities.Rules.RuleExpressionCondition&quot;> </xref> 하는이 인스턴스와 동일 합니다."
  overload: System.Workflow.Activities.Rules.RuleExpressionCondition.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: RuleExpressionCondition.Equals(Object)
  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.Equals(Object)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities.Rules
  summary: "두 개체 인스턴스가 같은지 여부를 결정 합니다."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "<xref:System.Object>현재 개체와 비교할 개체입니다.</xref:System.Object>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>개체 인스턴스가 동일 하면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Workflow.Activities.Rules.RuleExpressionCondition.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.Evaluate(System.Workflow.Activities.Rules.RuleExecution)
  id: Evaluate(System.Workflow.Activities.Rules.RuleExecution)
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  langs:
  - csharp
  name: Evaluate(RuleExecution)
  nameWithType: RuleExpressionCondition.Evaluate(RuleExecution)
  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.Evaluate(RuleExecution)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities.Rules
  summary: "식을 계산 합니다."
  syntax:
    content: public override bool Evaluate (System.Workflow.Activities.Rules.RuleExecution execution);
    parameters:
    - id: execution
      type: System.Workflow.Activities.Rules.RuleExecution
      description: "런타임 컨텍스트의 인스턴스는 <xref href=&quot;System.Workflow.Activities.Rules.RuleExpressionCondition&quot;> </xref> 에서 실행 되 고 있습니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>식이 true로 계산 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Workflow.Activities.Rules.RuleExpressionCondition.Evaluate*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.Expression
  id: Expression
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  langs:
  - csharp
  name: Expression
  nameWithType: RuleExpressionCondition.Expression
  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.Expression
  type: Property
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities.Rules
  summary: "확인할 식 조건을 가져오거나 설정 합니다."
  syntax:
    content: public System.CodeDom.CodeExpression Expression { get; set; }
    return:
      type: System.CodeDom.CodeExpression
      description: "식 평가할 조건입니다."
  overload: System.Workflow.Activities.Rules.RuleExpressionCondition.Expression*
  exceptions:
  - type: System.Data.ReadOnlyException
    commentId: T:System.Data.ReadOnlyException
    description: "실행 중인 활동의 <xref href=&quot;System.Workflow.Activities.Rules.RuleSet&quot;> </xref> 런타임 초기화 됩니다."
  platform:
  - net462
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.GetDependencies(System.Workflow.Activities.Rules.RuleValidation)
  id: GetDependencies(System.Workflow.Activities.Rules.RuleValidation)
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  langs:
  - csharp
  name: GetDependencies(RuleValidation)
  nameWithType: RuleExpressionCondition.GetDependencies(RuleValidation)
  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.GetDependencies(RuleValidation)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities.Rules
  summary: "에 대 한 종속성을 가져옵니다는 <xref href=&quot;System.Workflow.Activities.Rules.RuleExpressionCondition&quot;> </xref>합니다."
  syntax:
    content: public override System.Collections.Generic.ICollection<string> GetDependencies (System.Workflow.Activities.Rules.RuleValidation validation);
    parameters:
    - id: validation
      type: System.Workflow.Activities.Rules.RuleValidation
      description: "<xref href=&quot;System.Workflow.Activities.Rules.RuleValidation&quot;> </xref> 유효성 검사 프로세스를 관리 합니다."
    return:
      type: System.Collections.Generic.ICollection{System.String}
      description: "종속성 목록입니다."
  overload: System.Workflow.Activities.Rules.RuleExpressionCondition.GetDependencies*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.GetHashCode
  id: GetHashCode
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: RuleExpressionCondition.GetHashCode()
  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.GetHashCode()
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities.Rules
  summary: "이 인스턴스에 대 한 해시 코드를 반환합니다."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "이 인스턴스에 대 한 해시 코드입니다."
  overload: System.Workflow.Activities.Rules.RuleExpressionCondition.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.Name
  id: Name
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  langs:
  - csharp
  name: Name
  nameWithType: RuleExpressionCondition.Name
  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.Name
  type: Property
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities.Rules
  summary: "확인할 조건의 이름을 가져오거나 설정 합니다."
  syntax:
    content: public override string Name { get; set; }
    return:
      type: System.String
      description: "확인할 조건의 이름입니다."
  overload: System.Workflow.Activities.Rules.RuleExpressionCondition.Name*
  exceptions:
  - type: System.Data.ReadOnlyException
    commentId: T:System.Data.ReadOnlyException
    description: "실행 중인 활동의 <xref href=&quot;System.Workflow.Activities.Rules.RuleSet&quot;> </xref> 런타임 초기화 됩니다."
  platform:
  - net462
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.OnRuntimeInitialized
  id: OnRuntimeInitialized
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  langs:
  - csharp
  name: OnRuntimeInitialized()
  nameWithType: RuleExpressionCondition.OnRuntimeInitialized()
  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.OnRuntimeInitialized()
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities.Rules
  summary: "모든 속성 값이 지정 된 경우 호출 됩니다."
  remarks: "이 호출 후에 속성이 없습니다. 수정할 수 있습니다."
  syntax:
    content: public override void OnRuntimeInitialized ();
    parameters: []
  overload: System.Workflow.Activities.Rules.RuleExpressionCondition.OnRuntimeInitialized*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.ToString
  id: ToString
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  langs:
  - csharp
  name: ToString()
  nameWithType: RuleExpressionCondition.ToString()
  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.ToString()
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities.Rules
  summary: "식 조건의 문자열 값을 반환합니다."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "식 조건의 문자열 값입니다. 식 조건이 이면 빈 문자열 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Workflow.Activities.Rules.RuleExpressionCondition.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.Validate(System.Workflow.Activities.Rules.RuleValidation)
  id: Validate(System.Workflow.Activities.Rules.RuleValidation)
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  langs:
  - csharp
  name: Validate(RuleValidation)
  nameWithType: RuleExpressionCondition.Validate(RuleValidation)
  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.Validate(RuleValidation)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities.Rules
  summary: "식이 제대로 구성 되 고 오류가 없는지 확인 합니다."
  remarks: "경우는 <xref:System.Workflow.Activities.Rules.RuleExpressionCondition>오류가 포함 되어 (의 `Validate` 메서드 반환 `false`), 다음 <xref:System.Workflow.Activities.Rules.RuleValidation.Errors%2A?displayProperty=fullName>발생 한 오류 목록이 포함 됩니다.</xref:System.Workflow.Activities.Rules.RuleValidation.Errors%2A?displayProperty=fullName> </xref:System.Workflow.Activities.Rules.RuleExpressionCondition>"
  syntax:
    content: public override bool Validate (System.Workflow.Activities.Rules.RuleValidation validation);
    parameters:
    - id: validation
      type: System.Workflow.Activities.Rules.RuleValidation
      description: "<xref href=&quot;System.Workflow.Activities.Rules.RuleValidation&quot;> </xref> 유효성 검사 프로세스를 관리 합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>식에 오류가 없으면; 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Workflow.Activities.Rules.RuleExpressionCondition.Validate*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>validator</code>가 null 참조 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> Visual basic에서)."
  platform:
  - net462
references:
- uid: System.Workflow.Activities.Rules.RuleCondition
  isExternal: false
  name: System.Workflow.Activities.Rules.RuleCondition
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Data.ReadOnlyException
  parent: System.Data
  isExternal: false
  name: ReadOnlyException
  nameWithType: ReadOnlyException
  fullName: System.Data.ReadOnlyException
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.#ctor
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  isExternal: false
  name: RuleExpressionCondition()
  nameWithType: RuleExpressionCondition.RuleExpressionCondition()
  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.RuleExpressionCondition()
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.#ctor(System.CodeDom.CodeExpression)
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  isExternal: false
  name: RuleExpressionCondition(CodeExpression)
  nameWithType: RuleExpressionCondition.RuleExpressionCondition(CodeExpression)
  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.RuleExpressionCondition(CodeExpression)
- uid: System.CodeDom.CodeExpression
  parent: System.CodeDom
  isExternal: false
  name: CodeExpression
  nameWithType: CodeExpression
  fullName: System.CodeDom.CodeExpression
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.#ctor(System.String)
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  isExternal: false
  name: RuleExpressionCondition(String)
  nameWithType: RuleExpressionCondition.RuleExpressionCondition(String)
  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.RuleExpressionCondition(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.#ctor(System.String,System.CodeDom.CodeExpression)
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  isExternal: false
  name: RuleExpressionCondition(String,CodeExpression)
  nameWithType: RuleExpressionCondition.RuleExpressionCondition(String,CodeExpression)
  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.RuleExpressionCondition(String,CodeExpression)
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.Clone
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  isExternal: false
  name: Clone()
  nameWithType: RuleExpressionCondition.Clone()
  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.Clone()
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.Equals(System.Object)
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  isExternal: false
  name: Equals(Object)
  nameWithType: RuleExpressionCondition.Equals(Object)
  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.Evaluate(System.Workflow.Activities.Rules.RuleExecution)
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  isExternal: false
  name: Evaluate(RuleExecution)
  nameWithType: RuleExpressionCondition.Evaluate(RuleExecution)
  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.Evaluate(RuleExecution)
- uid: System.Workflow.Activities.Rules.RuleExecution
  parent: System.Workflow.Activities.Rules
  isExternal: false
  name: RuleExecution
  nameWithType: RuleExecution
  fullName: System.Workflow.Activities.Rules.RuleExecution
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.Expression
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  isExternal: false
  name: Expression
  nameWithType: RuleExpressionCondition.Expression
  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.Expression
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.GetDependencies(System.Workflow.Activities.Rules.RuleValidation)
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  isExternal: false
  name: GetDependencies(RuleValidation)
  nameWithType: RuleExpressionCondition.GetDependencies(RuleValidation)
  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.GetDependencies(RuleValidation)
- uid: System.Collections.Generic.ICollection{System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: ICollection<String>
  nameWithType: ICollection<String>
  fullName: System.Collections.Generic.ICollection<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.Activities.Rules.RuleValidation
  parent: System.Workflow.Activities.Rules
  isExternal: false
  name: RuleValidation
  nameWithType: RuleValidation
  fullName: System.Workflow.Activities.Rules.RuleValidation
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.GetHashCode
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  isExternal: false
  name: GetHashCode()
  nameWithType: RuleExpressionCondition.GetHashCode()
  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.Name
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  isExternal: false
  name: Name
  nameWithType: RuleExpressionCondition.Name
  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.Name
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.OnRuntimeInitialized
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  isExternal: false
  name: OnRuntimeInitialized()
  nameWithType: RuleExpressionCondition.OnRuntimeInitialized()
  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.OnRuntimeInitialized()
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.ToString
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  isExternal: false
  name: ToString()
  nameWithType: RuleExpressionCondition.ToString()
  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.ToString()
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.Validate(System.Workflow.Activities.Rules.RuleValidation)
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  isExternal: false
  name: Validate(RuleValidation)
  nameWithType: RuleExpressionCondition.Validate(RuleValidation)
  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.Validate(RuleValidation)
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.#ctor*
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  isExternal: false
  name: RuleExpressionCondition
  nameWithType: RuleExpressionCondition.RuleExpressionCondition
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.Clone*
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  isExternal: false
  name: Clone
  nameWithType: RuleExpressionCondition.Clone
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.Equals*
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  isExternal: false
  name: Equals
  nameWithType: RuleExpressionCondition.Equals
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.Evaluate*
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  isExternal: false
  name: Evaluate
  nameWithType: RuleExpressionCondition.Evaluate
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.Expression*
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  isExternal: false
  name: Expression
  nameWithType: RuleExpressionCondition.Expression
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.GetDependencies*
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  isExternal: false
  name: GetDependencies
  nameWithType: RuleExpressionCondition.GetDependencies
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.GetHashCode*
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  isExternal: false
  name: GetHashCode
  nameWithType: RuleExpressionCondition.GetHashCode
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.Name*
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  isExternal: false
  name: Name
  nameWithType: RuleExpressionCondition.Name
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.OnRuntimeInitialized*
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  isExternal: false
  name: OnRuntimeInitialized
  nameWithType: RuleExpressionCondition.OnRuntimeInitialized
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.ToString*
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  isExternal: false
  name: ToString
  nameWithType: RuleExpressionCondition.ToString
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.Validate*
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  isExternal: false
  name: Validate
  nameWithType: RuleExpressionCondition.Validate
