### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential
  id: X509CertificateInitiatorServiceCredential
  children:
  - System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.Authentication
  - System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.Certificate
  - System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.SetCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)
  - System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.SetCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)
  langs:
  - csharp
  name: X509CertificateInitiatorServiceCredential
  nameWithType: X509CertificateInitiatorServiceCredential
  fullName: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential
  type: Class
  summary: "클라이언트에서 제공 하는 인증서의 유효성을 검사 하는 서비스에서 사용 하는 설정을 나타냅니다. 클라이언트에 대 한 응답 또는 콜백을 암호화에 사용할 서비스에 대 한 인증서도 포함 때 <xref uid=&quot;langword_csharp_MutualCertificateDuplex&quot; name=&quot;MutualCertificateDuplex&quot; href=&quot;&quot;> </xref> 메시지 보안 인증 모드가 사용 됩니다."
  remarks: "이 클래스에 설정 된 인증서로 구성 된 바인딩에 대해서만 클라이언트에 메시지를 암호화 하는 `MutualCertificateDuplex` 메시지 보안 인증 모드입니다."
  syntax:
    content: public sealed class X509CertificateInitiatorServiceCredential
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.Authentication
  id: Authentication
  parent: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential
  langs:
  - csharp
  name: Authentication
  nameWithType: X509CertificateInitiatorServiceCredential.Authentication
  fullName: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.Authentication
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "인증 하는 동안 클라이언트에서 제공 하는 인증서의 유효성을 검사 하는 데 사용 되는 설정을 가져옵니다."
  remarks: ''
  example:
  - "The following code shows how to use this property to set the certificate authentication properties.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public System.ServiceModel.Security.X509ClientCertificateAuthentication Authentication { get; }
    return:
      type: System.ServiceModel.Security.X509ClientCertificateAuthentication
      description: "인증 하는 동안 클라이언트에서 제공 하는 인증서의 유효성을 검사 하는 데 사용 되는 설정입니다."
  overload: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.Authentication*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.Certificate
  id: Certificate
  parent: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential
  langs:
  - csharp
  name: Certificate
  nameWithType: X509CertificateInitiatorServiceCredential.Certificate
  fullName: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.Certificate
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "사용할 인증서를 가져오거나 설정 합니다. <xref uid=&quot;langword_csharp_MutualCertificateDuplex&quot; name=&quot;MutualCertificateDuplex&quot; href=&quot;&quot;> </xref> 메시지 보안 인증 모드입니다."
  remarks: "이 속성은 메시지 보안 모드로 구성 된 바인딩을 사용 하면 `MutualCertificateDuplex` 메시지 보안 인증 모드가 사용 됩니다."
  example:
  - "The following code shows how to use this property to get the certificate.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public System.Security.Cryptography.X509Certificates.X509Certificate2 Certificate { get; set; }
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
      description: "<xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> 관계가 없는 이중 전송 경우의 서비스에서 클라이언트에 보내는 메시지를 암호화 하는 데는 <xref uid=&quot;langword_csharp_MutualCertificateDuplex&quot; name=&quot;MutualCertificateDuplex&quot; href=&quot;&quot;> </xref> 메시지 보안 인증 모드가 사용 됩니다."
  overload: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.Certificate*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "읽기 전용 자격 증명을 설정 하려고 했습니다."
  platform:
  - net462
- uid: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.SetCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)
  id: SetCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)
  parent: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential
  langs:
  - csharp
  name: SetCertificate(String,StoreLocation,StoreName)
  nameWithType: X509CertificateInitiatorServiceCredential.SetCertificate(String,StoreLocation,StoreName)
  fullName: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.SetCertificate(String,StoreLocation,StoreName)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "주체 고유 이름을 지정 하 여 클라이언트에 대 한 메시지를 암호화 하는 데 사용할 인증서를 지정할 수 있습니다. 이 설정은 구성 되는 바인딩에 의해서만 사용 됩니다는 <xref uid=&quot;langword_csharp_MutualCertificateDuplex&quot; name=&quot;MutualCertificateDuplex&quot; href=&quot;&quot;> </xref> 메시지 보안 인증 모드입니다."
  remarks: "[!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]`subjectName` 매개 변수를 <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.SubjectName%2A>.</xref:System.Security.Cryptography.X509Certificates.X509Certificate2.SubjectName%2A> 를 참조 하세요.       에 대 한 값 `storeLocation` 에 포함 된 <xref:System.Security.Cryptography.X509Certificates.StoreLocation>열거형:- <xref:System.Security.Cryptography.X509Certificates.StoreLocation>: (기본값) 로컬 컴퓨터에 할당 된 인증서 저장소.</xref:System.Security.Cryptography.X509Certificates.StoreLocation> </xref:System.Security.Cryptography.X509Certificates.StoreLocation>      - <xref:System.Security.Cryptography.X509Certificates.StoreLocation>: 현재 사용자가 사용 되는 인증서 저장소.</xref:System.Security.Cryptography.X509Certificates.StoreLocation>       클라이언트 응용 프로그램 시스템 계정으로 실행 하는 경우 해당 인증서는 일반적으로 <xref:System.Security.Cryptography.X509Certificates.StoreLocation>.</xref:System.Security.Cryptography.X509Certificates.StoreLocation> 클라이언트 응용 프로그램 사용자 계정으로 실행 하는 경우 해당 인증서는 일반적으로 <xref:System.Security.Cryptography.X509Certificates.StoreLocation>.</xref:System.Security.Cryptography.X509Certificates.StoreLocation>       에 대 한 값 `storeName` 에 포함 된 <xref:System.Security.Cryptography.X509Certificates.StoreName>열거형.</xref:System.Security.Cryptography.X509Certificates.StoreName>"
  example:
  - "The following code shows how to use this method to set the certificate.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public void SetCertificate (string subjectName, System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, System.Security.Cryptography.X509Certificates.StoreName storeName);
    parameters:
    - id: subjectName
      type: System.String
      description: "주체 고유 이름입니다."
    - id: storeLocation
      type: System.Security.Cryptography.X509Certificates.StoreLocation
      description: "서비스 인증서를 가져오기 위해 사용 하는 인증서 저장소의 위치입니다."
    - id: storeName
      type: System.Security.Cryptography.X509Certificates.StoreName
      description: "열려는 X.509 인증서의 이름을 저장 합니다."
  overload: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.SetCertificate*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.SetCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)
  id: SetCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)
  parent: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential
  langs:
  - csharp
  name: SetCertificate(StoreLocation,StoreName,X509FindType,Object)
  nameWithType: X509CertificateInitiatorServiceCredential.SetCertificate(StoreLocation,StoreName,X509FindType,Object)
  fullName: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.SetCertificate(StoreLocation,StoreName,X509FindType,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "클라이언트에 대 한 메시지를 암호화 하는 데 사용할 인증서를 지정 합니다. 이 설정은 구성 되는 바인딩에 의해서만 사용 됩니다는 <xref uid=&quot;langword_csharp_MutualCertificateDuplex&quot; name=&quot;MutualCertificateDuplex&quot; href=&quot;&quot;> </xref> 메시지 보안 인증 모드입니다."
  remarks: "에 대 한 값 `storeLocation` 에 포함 된 <xref:System.Security.Cryptography.X509Certificates.StoreLocation>열거형:- <xref:System.Security.Cryptography.X509Certificates.StoreLocation>: (기본값) 로컬 컴퓨터에 할당 된 인증서 저장소.</xref:System.Security.Cryptography.X509Certificates.StoreLocation> </xref:System.Security.Cryptography.X509Certificates.StoreLocation>      - <xref:System.Security.Cryptography.X509Certificates.StoreLocation>: 현재 사용자가 사용 되는 인증서 저장소.</xref:System.Security.Cryptography.X509Certificates.StoreLocation>       응용 프로그램 시스템 계정으로 실행 하는 경우 해당 인증서는 일반적으로 <xref:System.Security.Cryptography.X509Certificates.StoreLocation>.</xref:System.Security.Cryptography.X509Certificates.StoreLocation> 응용 프로그램 사용자 계정으로 실행 하는 경우 해당 인증서는 일반적으로 <xref:System.Security.Cryptography.X509Certificates.StoreLocation>.</xref:System.Security.Cryptography.X509Certificates.StoreLocation>       에 대 한 값 `storeName` 에 포함 된 <xref:System.Security.Cryptography.X509Certificates.StoreName>열거형.</xref:System.Security.Cryptography.X509Certificates.StoreName>       에 대 한 값 `findType` 에 포함 된 <xref:System.Security.Cryptography.X509Certificates.X509FindType>열거형.</xref:System.Security.Cryptography.X509Certificates.X509FindType>       가장 일반적으로 사용 되는 열거형은 <xref:System.Security.Cryptography.X509Certificates.X509FindType>, 지정된 된 저장소에서 인증서의 주체 이름에서 대/소문자 구분 검색을 수행 하는.</xref:System.Security.Cryptography.X509Certificates.X509FindType> 이 검색이 정확 하지을 수 있습니다. 인증서는 조건과 일치 하는 여러 인증서가 없거나 하는 경우는 <xref:System.InvalidOperationException>throw 됩니다.</xref:System.InvalidOperationException>"
  example:
  - "The following code shows how to use this method to set the certificate.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public void SetCertificate (System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, System.Security.Cryptography.X509Certificates.StoreName storeName, System.Security.Cryptography.X509Certificates.X509FindType findType, object findValue);
    parameters:
    - id: storeLocation
      type: System.Security.Cryptography.X509Certificates.StoreLocation
      description: "서비스 인증서를 가져오기 위해 사용 하는 인증서 저장소의 위치입니다."
    - id: storeName
      type: System.Security.Cryptography.X509Certificates.StoreName
      description: "열려는 X.509 인증서의 이름을 저장 합니다."
    - id: findType
      type: System.Security.Cryptography.X509Certificates.X509FindType
      description: "실행할 X.509 검색의 형식입니다."
    - id: findValue
      type: System.Object
      description: "X.509 인증서 저장소에서 검색할 값입니다."
  overload: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.SetCertificate*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.Authentication
  parent: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential
  isExternal: false
  name: Authentication
  nameWithType: X509CertificateInitiatorServiceCredential.Authentication
  fullName: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.Authentication
- uid: System.ServiceModel.Security.X509ClientCertificateAuthentication
  parent: System.ServiceModel.Security
  isExternal: false
  name: X509ClientCertificateAuthentication
  nameWithType: X509ClientCertificateAuthentication
  fullName: System.ServiceModel.Security.X509ClientCertificateAuthentication
- uid: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.Certificate
  parent: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential
  isExternal: false
  name: Certificate
  nameWithType: X509CertificateInitiatorServiceCredential.Certificate
  fullName: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.Certificate
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509Certificate2
  nameWithType: X509Certificate2
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2
- uid: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.SetCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)
  parent: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential
  isExternal: false
  name: SetCertificate(String,StoreLocation,StoreName)
  nameWithType: X509CertificateInitiatorServiceCredential.SetCertificate(String,StoreLocation,StoreName)
  fullName: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.SetCertificate(String,StoreLocation,StoreName)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.X509Certificates.StoreLocation
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: StoreLocation
  nameWithType: StoreLocation
  fullName: System.Security.Cryptography.X509Certificates.StoreLocation
- uid: System.Security.Cryptography.X509Certificates.StoreName
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: StoreName
  nameWithType: StoreName
  fullName: System.Security.Cryptography.X509Certificates.StoreName
- uid: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.SetCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)
  parent: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential
  isExternal: false
  name: SetCertificate(StoreLocation,StoreName,X509FindType,Object)
  nameWithType: X509CertificateInitiatorServiceCredential.SetCertificate(StoreLocation,StoreName,X509FindType,Object)
  fullName: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.SetCertificate(StoreLocation,StoreName,X509FindType,Object)
- uid: System.Security.Cryptography.X509Certificates.X509FindType
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509FindType
  nameWithType: X509FindType
  fullName: System.Security.Cryptography.X509Certificates.X509FindType
- uid: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.Authentication*
  parent: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential
  isExternal: false
  name: Authentication
  nameWithType: X509CertificateInitiatorServiceCredential.Authentication
- uid: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.Certificate*
  parent: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential
  isExternal: false
  name: Certificate
  nameWithType: X509CertificateInitiatorServiceCredential.Certificate
- uid: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.SetCertificate*
  parent: System.ServiceModel.Security.X509CertificateInitiatorServiceCredential
  isExternal: false
  name: SetCertificate
  nameWithType: X509CertificateInitiatorServiceCredential.SetCertificate
