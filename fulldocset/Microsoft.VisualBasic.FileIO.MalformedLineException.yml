### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.FileIO.MalformedLineException
  id: MalformedLineException
  children:
  - Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor
  - Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String)
  - Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String,System.Exception)
  - Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String,System.Int64)
  - Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String,System.Int64,System.Exception)
  - Microsoft.VisualBasic.FileIO.MalformedLineException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - Microsoft.VisualBasic.FileIO.MalformedLineException.LineNumber
  - Microsoft.VisualBasic.FileIO.MalformedLineException.ToString
  langs:
  - csharp
  name: MalformedLineException
  nameWithType: MalformedLineException
  fullName: Microsoft.VisualBasic.FileIO.MalformedLineException
  type: Class
  summary: "경우에 throw 되는 예외는 <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields*>메서드는 지정 된 형식을 사용 하 여 행을 구문 분석할 수 없습니다.</xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields*>"
  remarks: "확인 하는 `TextFieldType` 및 `Delimiter` 매개 변수가 제대로 정의 됩니다.       경우는 <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields%2A>메서드는 지정 된 형식을 사용 하 여 행을 구문 분석할 수 없습니다, MalformedLineException 예외가 throw 됩니다.</xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields%2A> 예외는 잘못 된 줄의 줄 번호를 포함합니다."
  syntax:
    content: 'public class MalformedLineException : Exception'
  inheritance:
  - System.Exception
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor
  id: '#ctor'
  parent: Microsoft.VisualBasic.FileIO.MalformedLineException
  langs:
  - csharp
  name: MalformedLineException()
  nameWithType: MalformedLineException.MalformedLineException()
  fullName: Microsoft.VisualBasic.FileIO.MalformedLineException.MalformedLineException()
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "새 인스턴스를 초기화는 <xref href=&quot;Microsoft.VisualBasic.FileIO.MalformedLineException&quot;> </xref> 클래스입니다."
  remarks: "예외 나타냅니다는 <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields%2A>메서드는 지정 된 형식을 사용 하 여 행을 구문 분석할 수 없습니다.</xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields%2A>       다음 표에서 <xref:Microsoft.VisualBasic.FileIO.MalformedLineException>안내 하십시오.</xref:Microsoft.VisualBasic.FileIO.MalformedLineException> 인스턴스에 대 한 초기 속성 값을 보여 줍니다.      |||   |-|-|   | 속성 | 값 |   | <xref:System.Exception.InnerException%2A>| Null 참조 (`Nothing` Visual basic에서). |   | <xref:System.Exception.Message%2A>| 지역화 된 오류 메시지 문자열입니다. |</xref:System.Exception.Message%2A> </xref:System.Exception.InnerException%2A>"
  syntax:
    content: public MalformedLineException ();
    parameters: []
  overload: Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.VisualBasic.FileIO.MalformedLineException
  langs:
  - csharp
  name: MalformedLineException(String)
  nameWithType: MalformedLineException.MalformedLineException(String)
  fullName: Microsoft.VisualBasic.FileIO.MalformedLineException.MalformedLineException(String)
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "새 인스턴스를 초기화는 <xref href=&quot;Microsoft.VisualBasic.FileIO.MalformedLineException&quot;> </xref> 지정된 된 오류 메시지를 사용 하 여 클래스입니다."
  remarks: "콘텐츠는 `message` 매개 변수는 이해를 돕기 위한 것입니다. 이 생성자의 호출자는이 문자열이 현재 시스템 문화권에 맞게 지역화 되었는지 확인 해야 합니다.       <xref:Microsoft.VisualBasic.FileIO.MalformedLineException><xref:System.Exception>클래스</xref:System.Exception> 에서 상속</xref:Microsoft.VisualBasic.FileIO.MalformedLineException> 속성을 설정 하는이 생성자는 <xref:System.Exception>개체는 다음 표에 나와 있는 것 처럼.</xref:System.Exception>      |||   |-|-|   | 속성 | 값 |   | <xref:System.Exception.InnerException%2A>| Null 참조 (`Nothing` Visual basic에서) |   | <xref:System.Exception.Message%2A>| `message` 문자열. |</xref:System.Exception.Message%2A> </xref:System.Exception.InnerException%2A>"
  syntax:
    content: public MalformedLineException (string message);
    parameters:
    - id: message
      type: System.String
      description: "오류를 설명 하는 메시지입니다."
  overload: Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: Microsoft.VisualBasic.FileIO.MalformedLineException
  langs:
  - csharp
  name: MalformedLineException(SerializationInfo,StreamingContext)
  nameWithType: MalformedLineException.MalformedLineException(SerializationInfo,StreamingContext)
  fullName: Microsoft.VisualBasic.FileIO.MalformedLineException.MalformedLineException(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "새 인스턴스를 초기화는 <xref href=&quot;Microsoft.VisualBasic.FileIO.MalformedLineException&quot;> </xref> serialize 된 데이터 클래스입니다."
  remarks: "이 생성자는 스트림을 통해 전송 된 예외 개체를 다시 구성 하기 위해 역직렬화 하는 동안 호출 됩니다."
  syntax:
    content: protected MalformedLineException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> throw 되는 예외에 대 한 직렬화 된 개체 데이터를 보유 하는 개체입니다."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "<xref:System.Runtime.Serialization.StreamingContext>소스 또는 대상에 대 한 컨텍스트 정보를 포함 하는 구조체.</xref:System.Runtime.Serialization.StreamingContext>"
  overload: Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: Microsoft.VisualBasic.FileIO.MalformedLineException
  langs:
  - csharp
  name: MalformedLineException(String,Exception)
  nameWithType: MalformedLineException.MalformedLineException(String,Exception)
  fullName: Microsoft.VisualBasic.FileIO.MalformedLineException.MalformedLineException(String,Exception)
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "새 인스턴스를 초기화는 <xref href=&quot;Microsoft.VisualBasic.FileIO.MalformedLineException&quot;> </xref> 지정된 된 오류 메시지와 해당 예외의 원인인 내부 예외에 대 한 참조를 사용 하 여 클래스입니다."
  remarks: "콘텐츠는 `message` 매개 변수는 이해를 돕기 위한 것입니다. 이 생성자의 호출자는이 문자열이 현재 시스템 문화권에 맞게 지역화 되었는지 확인 해야 합니다.       이전 예외의 직접적인 결과에 이전 예외에 대 한 참조가 들어 있어야 throw 되는 예외는 <xref:System.Exception.InnerException%2A>속성.</xref:System.Exception.InnerException%2A> <xref:System.Exception.InnerException%2A>경우 null 참조 또는 생성자에 전달 되는 동일한 값을 반환 하는 속성의 <xref:System.Exception.InnerException%2A>속성이 생성자에 내부 예외 값을 제공 하지 않습니다.</xref:System.Exception.InnerException%2A> </xref:System.Exception.InnerException%2A>       다음 표에서 <xref:System.ApplicationException>안내 하십시오.</xref:System.ApplicationException> 인스턴스에 대 한 초기 속성 값을 보여 줍니다.      |||   |-|-|   | 속성 | 값 |   | <xref:System.Exception.InnerException%2A>| `innerException` 참조 합니다. |   | <xref:System.Exception.Message%2A>| `message` 문자열. |</xref:System.Exception.Message%2A> </xref:System.Exception.InnerException%2A>"
  syntax:
    content: public MalformedLineException (string message, Exception innerException);
    parameters:
    - id: message
      type: System.String
      description: "A <xref:System.String>오류를 설명 하는.</xref:System.String>"
    - id: innerException
      type: System.Exception
      description: "<xref:System.Exception>현재 예외의 원인이 되는 개체입니다.</xref:System.Exception> 경우는 <xref:System.Exception.InnerException*>매개 변수가 null 참조 하지 않습니다 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> Visual basic에서), 현재 예외는 내부 예외를 처리 하는 catch 블록에서 발생 합니다.</xref:System.Exception.InnerException*>"
  overload: Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String,System.Int64)
  id: '#ctor(System.String,System.Int64)'
  parent: Microsoft.VisualBasic.FileIO.MalformedLineException
  langs:
  - csharp
  name: MalformedLineException(String,Int64)
  nameWithType: MalformedLineException.MalformedLineException(String,Int64)
  fullName: Microsoft.VisualBasic.FileIO.MalformedLineException.MalformedLineException(String,Int64)
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "새 인스턴스를 초기화는 <xref href=&quot;Microsoft.VisualBasic.FileIO.MalformedLineException&quot;> </xref> 된 지정된 된 오류 메시지 및 줄 번호입니다."
  remarks: "콘텐츠는 `message` 매개 변수는 이해를 돕기 위한 것입니다. 이 생성자의 호출자는이 문자열이 현재 시스템 문화권에 맞게 지역화 되었는지 확인 해야 합니다. `lineNumber` 매개 변수를 초기화는 <xref:Microsoft.VisualBasic.FileIO.MalformedLineException.LineNumber%2A>속성.</xref:Microsoft.VisualBasic.FileIO.MalformedLineException.LineNumber%2A>       <xref:Microsoft.VisualBasic.FileIO.MalformedLineException><xref:System.Exception>.</xref:System.Exception> 에서 상속</xref:Microsoft.VisualBasic.FileIO.MalformedLineException> 속성을 설정 하는이 생성자는 <xref:System.Exception>개체는 다음 표에 나와 있는 것 처럼.</xref:System.Exception>      |||   |-|-|   | 속성 | 값 |   | <xref:System.Exception.InnerException%2A>| Null 참조 (`Nothing` Visual basic에서) |   | <xref:System.Exception.Message%2A>| `message` 문자열. |</xref:System.Exception.Message%2A> </xref:System.Exception.InnerException%2A>"
  syntax:
    content: public MalformedLineException (string message, long lineNumber);
    parameters:
    - id: message
      type: System.String
      description: "예외에 대 한 메시지입니다."
    - id: lineNumber
      type: System.Int64
      description: "잘못 된 줄의 줄 번호입니다."
  overload: Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String,System.Int64,System.Exception)
  id: '#ctor(System.String,System.Int64,System.Exception)'
  parent: Microsoft.VisualBasic.FileIO.MalformedLineException
  langs:
  - csharp
  name: MalformedLineException(String,Int64,Exception)
  nameWithType: MalformedLineException.MalformedLineException(String,Int64,Exception)
  fullName: Microsoft.VisualBasic.FileIO.MalformedLineException.MalformedLineException(String,Int64,Exception)
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "새 인스턴스를 초기화는 <xref href=&quot;Microsoft.VisualBasic.FileIO.MalformedLineException&quot;> </xref> 된 지정된 된 오류 메시지, 줄 번호 및이 예외의 원인인 내부 예외에 대 한 참조입니다."
  remarks: "콘텐츠는 `message` 매개 변수는 이해를 돕기 위한 것입니다. 이 생성자의 호출자는이 문자열이 현재 시스템 문화권에 맞게 지역화 되었는지 확인 해야 합니다. `lineNumber` 매개 변수를 초기화는 <xref:Microsoft.VisualBasic.FileIO.MalformedLineException.LineNumber%2A>속성.</xref:Microsoft.VisualBasic.FileIO.MalformedLineException.LineNumber%2A>       이전 예외의 직접적인 결과에 이전 예외에 대 한 참조가 들어 있어야 throw 되는 예외는 <xref:System.Exception.InnerException%2A>속성.</xref:System.Exception.InnerException%2A> <xref:System.Exception.InnerException%2A>경우 null 참조 또는 생성자에 전달 되는 동일한 값을 반환 하는 속성의 <xref:System.Exception.InnerException%2A>속성이 생성자에 내부 예외 값을 제공 하지 않습니다.</xref:System.Exception.InnerException%2A> </xref:System.Exception.InnerException%2A>       다음 표에서 <xref:System.ApplicationException>안내 하십시오.</xref:System.ApplicationException> 인스턴스에 대 한 초기 속성 값을 보여 줍니다.      |||   |-|-|   | 속성 | 값 |   | <xref:System.Exception.InnerException%2A>| `innerException` 참조 합니다. |   | <xref:System.Exception.Message%2A>| `message` 문자열. |</xref:System.Exception.Message%2A> </xref:System.Exception.InnerException%2A>"
  syntax:
    content: public MalformedLineException (string message, long lineNumber, Exception innerException);
    parameters:
    - id: message
      type: System.String
      description: "예외에 대 한 메시지입니다."
    - id: lineNumber
      type: System.Int64
      description: "잘못 된 줄의 줄 번호입니다."
    - id: innerException
      type: System.Exception
      description: "<xref:System.Exception>현재 예외의 원인인.</xref:System.Exception> 경우는 <xref:System.Exception.InnerException*>매개 변수가 null 참조 하지 않습니다 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> Visual basic에서), 현재 예외는 내부 예외를 처리 하는 catch 블록에서 발생 합니다.</xref:System.Exception.InnerException*>"
  overload: Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.MalformedLineException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: Microsoft.VisualBasic.FileIO.MalformedLineException
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: MalformedLineException.GetObjectData(SerializationInfo,StreamingContext)
  fullName: Microsoft.VisualBasic.FileIO.MalformedLineException.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "설정의 <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> 예외에 대 한 정보가 포함 된 개체입니다."
  remarks: "이 메서드는 <xref:System.Runtime.Serialization.SerializationInfo>serialization 대상인 모든 예외 개체 데이터가 개체.</xref:System.Runtime.Serialization.SerializationInfo> deserialization을 수행 하는 동안 예외가 재구성 됩니다는 <xref:System.Runtime.Serialization.SerializationInfo>스트림을 통해 전송 된.</xref:System.Runtime.Serialization.SerializationInfo>"
  syntax:
    content: public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> throw 되는 예외에 대 한 직렬화 된 개체 데이터를 보유 하는 개체입니다."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "<xref:System.Runtime.Serialization.StreamingContext>소스 또는 대상에 대 한 컨텍스트 정보를 포함 하는 구조체.</xref:System.Runtime.Serialization.StreamingContext>"
  overload: Microsoft.VisualBasic.FileIO.MalformedLineException.GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.MalformedLineException.LineNumber
  id: LineNumber
  parent: Microsoft.VisualBasic.FileIO.MalformedLineException
  langs:
  - csharp
  name: LineNumber
  nameWithType: MalformedLineException.LineNumber
  fullName: Microsoft.VisualBasic.FileIO.MalformedLineException.LineNumber
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "잘못 된 줄의 줄 번호를 가져옵니다."
  remarks: "경우는 <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields%2A>메서드에 지정된 된 형식으로 사용 하 여 행을 구문 분석할 수 없습니다는 <xref:Microsoft.VisualBasic.FileIO.MalformedLineException>예외가 throw 됩니다.</xref:Microsoft.VisualBasic.FileIO.MalformedLineException> </xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields%2A> 예외는 잘못 된 줄의 줄 번호를 포함합니다."
  syntax:
    content: public long LineNumber { get; set; }
    return:
      type: System.Int64
      description: "잘못 된 줄의 줄 번호입니다."
  overload: Microsoft.VisualBasic.FileIO.MalformedLineException.LineNumber*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.MalformedLineException.ToString
  id: ToString
  parent: Microsoft.VisualBasic.FileIO.MalformedLineException
  langs:
  - csharp
  name: ToString()
  nameWithType: MalformedLineException.ToString()
  fullName: Microsoft.VisualBasic.FileIO.MalformedLineException.ToString()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "페이지를 만들고 현재 예외의 문자열 표현을 반환 합니다."
  remarks: "ToString를 사람이 이해할 수 있도록 하는 현재 예외에 대 한 표현을 반환 합니다. 문화권 구분 데이터를 포함 하는 예외, 여기서 ToString에서 반환 된 문자열 표현을 현재 시스템 문화권을 고려 하는 데 필요 합니다. 반환 된 문자열의 형식에 대 한 정확한 요구에는 없지만 사용자가 인식으로 개체의 값을 반영 하도록 않아야 합니다.       ToString의 기본 구현에서는 현재 예외, 메시지, 내부 예외를 호출한 결과에서 ToString을 호출의 결과 발생 시킨 클래스의 이름을 가져옵니다 <xref:System.Environment.StackTrace%2A>, 이러한 멤버 중 하나라도 null 참조 형식이 잘못 된 줄의 줄 번호 및 (`Nothing` Visual basic에서), 값은 반환된 된 문자열에 포함 되지 않습니다.</xref:System.Environment.StackTrace%2A>       오류 메시지가 없는 경우 또는 빈 문자열 (&quot;&quot;), 아니면 오류 메시지가 반환 됩니다. 내부 예외 및 스택 추적의 이름을 null 참조 하는 경우에 반환 됩니다 (`Nothing` Visual basic에서).       이 메서드를 재정의 <xref:System.Exception.ToString%2A?displayProperty=fullName>.</xref:System.Exception.ToString%2A?displayProperty=fullName>"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "현재 예외의 문자열 표현입니다."
  overload: Microsoft.VisualBasic.FileIO.MalformedLineException.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Exception
  isExternal: false
  name: System.Exception
- uid: Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor
  parent: Microsoft.VisualBasic.FileIO.MalformedLineException
  isExternal: false
  name: MalformedLineException()
  nameWithType: MalformedLineException.MalformedLineException()
  fullName: Microsoft.VisualBasic.FileIO.MalformedLineException.MalformedLineException()
- uid: Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String)
  parent: Microsoft.VisualBasic.FileIO.MalformedLineException
  isExternal: false
  name: MalformedLineException(String)
  nameWithType: MalformedLineException.MalformedLineException(String)
  fullName: Microsoft.VisualBasic.FileIO.MalformedLineException.MalformedLineException(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: Microsoft.VisualBasic.FileIO.MalformedLineException
  isExternal: false
  name: MalformedLineException(SerializationInfo,StreamingContext)
  nameWithType: MalformedLineException.MalformedLineException(SerializationInfo,StreamingContext)
  fullName: Microsoft.VisualBasic.FileIO.MalformedLineException.MalformedLineException(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String,System.Exception)
  parent: Microsoft.VisualBasic.FileIO.MalformedLineException
  isExternal: false
  name: MalformedLineException(String,Exception)
  nameWithType: MalformedLineException.MalformedLineException(String,Exception)
  fullName: Microsoft.VisualBasic.FileIO.MalformedLineException.MalformedLineException(String,Exception)
- uid: Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String,System.Int64)
  parent: Microsoft.VisualBasic.FileIO.MalformedLineException
  isExternal: false
  name: MalformedLineException(String,Int64)
  nameWithType: MalformedLineException.MalformedLineException(String,Int64)
  fullName: Microsoft.VisualBasic.FileIO.MalformedLineException.MalformedLineException(String,Int64)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String,System.Int64,System.Exception)
  parent: Microsoft.VisualBasic.FileIO.MalformedLineException
  isExternal: false
  name: MalformedLineException(String,Int64,Exception)
  nameWithType: MalformedLineException.MalformedLineException(String,Int64,Exception)
  fullName: Microsoft.VisualBasic.FileIO.MalformedLineException.MalformedLineException(String,Int64,Exception)
- uid: Microsoft.VisualBasic.FileIO.MalformedLineException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: Microsoft.VisualBasic.FileIO.MalformedLineException
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: MalformedLineException.GetObjectData(SerializationInfo,StreamingContext)
  fullName: Microsoft.VisualBasic.FileIO.MalformedLineException.GetObjectData(SerializationInfo,StreamingContext)
- uid: Microsoft.VisualBasic.FileIO.MalformedLineException.LineNumber
  parent: Microsoft.VisualBasic.FileIO.MalformedLineException
  isExternal: false
  name: LineNumber
  nameWithType: MalformedLineException.LineNumber
  fullName: Microsoft.VisualBasic.FileIO.MalformedLineException.LineNumber
- uid: Microsoft.VisualBasic.FileIO.MalformedLineException.ToString
  parent: Microsoft.VisualBasic.FileIO.MalformedLineException
  isExternal: false
  name: ToString()
  nameWithType: MalformedLineException.ToString()
  fullName: Microsoft.VisualBasic.FileIO.MalformedLineException.ToString()
- uid: Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor*
  parent: Microsoft.VisualBasic.FileIO.MalformedLineException
  isExternal: false
  name: MalformedLineException
  nameWithType: MalformedLineException.MalformedLineException
- uid: Microsoft.VisualBasic.FileIO.MalformedLineException.GetObjectData*
  parent: Microsoft.VisualBasic.FileIO.MalformedLineException
  isExternal: false
  name: GetObjectData
  nameWithType: MalformedLineException.GetObjectData
- uid: Microsoft.VisualBasic.FileIO.MalformedLineException.LineNumber*
  parent: Microsoft.VisualBasic.FileIO.MalformedLineException
  isExternal: false
  name: LineNumber
  nameWithType: MalformedLineException.LineNumber
- uid: Microsoft.VisualBasic.FileIO.MalformedLineException.ToString*
  parent: Microsoft.VisualBasic.FileIO.MalformedLineException
  isExternal: false
  name: ToString
  nameWithType: MalformedLineException.ToString
