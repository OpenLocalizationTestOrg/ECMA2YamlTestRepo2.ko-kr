### YamlMime:ManagedReference
items:
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient
  id: UdpSingleSourceMulticastClient
  children:
  - System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)
  - System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)
  - System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose
  - System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup(System.IAsyncResult)
  - System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource(System.IAsyncResult,System.Int32@)
  - System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource(System.IAsyncResult)
  - System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize
  - System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize
  langs:
  - csharp
  name: UdpSingleSourceMulticastClient
  nameWithType: UdpSingleSourceMulticastClient
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient
  type: Class
  summary: "단일 원본으로 알려진 소스 특정 멀티 캐스트 (SSM)에서 멀티 캐스트 트래픽을 클라이언트 수신기입니다."
  remarks: "멀티 캐스트 그룹 주소 및 보낸 소스 주소를 알 수 있어야 합니다.       특정 사용자가 보낸에서 멀티 캐스트 데이터 받기, 외에도 UdpSingleSourceMulticastClient 클라이언트에서 보낸 사람에 게 유니캐스트 데이터 보낼 수도 있습니다.       여러 원본에서 또는 소스 미리 알 수 없는 멀티 캐스트 수신, UdpSingleSourceMulticastClient 클래스를 대신 사용 합니다."
  syntax:
    content: >-
      [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]

      [System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)]

      public class UdpSingleSourceMulticastClient : IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)
  id: '#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)'
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  langs:
  - csharp
  name: UdpSingleSourceMulticastClient(IPAddress,IPAddress,Int32)
  nameWithType: UdpSingleSourceMulticastClient.UdpSingleSourceMulticastClient(IPAddress,IPAddress,Int32)
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.UdpSingleSourceMulticastClient(IPAddress,IPAddress,Int32)
  type: Constructor
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "새 <xref href=&quot;System.Net.Sockets.UdpSingleSourceMulticastClient&quot;> </xref> 그룹 주소를 구독 하 고 단일 원본에서 데이터 그램을 받을 수 있는 UDP 클라이언트입니다."
  remarks: "UdpSingleSourceMulticastClient 생성자 그룹 주소와 포트를 UDP 멀티 캐스트 소켓에 연결 하지만 바인딩할 않거나 그렇지 않은 경우 소켓을 사용 합니다.       `groupAddress` 매개 변수는 IPv4 또는 IPv6 멀티 캐스트 일 수 주소입니다. 그러나의 주소 패밀리는 `sourceAddress` 및 `groupAddress` 매개 변수는 동일 해야 합니다.       `localPort` 매개 변수 1024 미만의 포트를 지정 해서는 안 됩니다."
  syntax:
    content: public UdpSingleSourceMulticastClient (System.Net.IPAddress sourceAddress, System.Net.IPAddress groupAddress, int localPort);
    parameters:
    - id: sourceAddress
      type: System.Net.IPAddress
      description: "구독할이 수신자에 대 한 발신자 원본 주소입니다."
    - id: groupAddress
      type: System.Net.IPAddress
      description: "구독할이 수신자에 대 한 멀티 캐스트 그룹 주소입니다."
    - id: localPort
      type: System.Int32
      description: "바인딩할이 수신자에 대 한 로컬 포트입니다."
  overload: System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>sourceAddress</code>및 <code>groupAddress</code> 동일한 주소 계열이 이어야 합니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>sourceAddress</code>null 참조 (Visual Basic에서는 Nothing)입니다.       -또는- <code>groupAddress</code> 가 null 참조 (Visual Basic의 경우 Nothing)."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>localPort</code>가 0 보다 작은-또는- <code>localPort</code> 65, 535 보다 큽니다."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>localPort</code>1024 미만"
  platform:
  - net462
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)
  id: BeginJoinGroup(System.AsyncCallback,System.Object)
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  langs:
  - csharp
  name: BeginJoinGroup(AsyncCallback,Object)
  nameWithType: UdpSingleSourceMulticastClient.BeginJoinGroup(AsyncCallback,Object)
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup(AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "소켓을 바인딩하고 단일 원본 주소에서 수신 되도록 데이터 그램을 허용 하기 위해 멀티 캐스트 그룹에 조인 작업을 시작 합니다."
  remarks: "BeginJoinGroup 메서드는 UDP 멀티 캐스트 소켓 로컬 포트에 바인딩하고 데이터 그램 단일 원본 주소에서 받을 수 있도록 멀티 캐스트 그룹에 조인 합니다. 에 지정 된 멀티 캐스트 그룹 주소, 단일 원본 주소 및 로컬 포트에 바인딩하는 <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A>생성자.</xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A>       에 지정 된 메서드는 `callback` 멀티 캐스트 그룹에 가입 작업이 완료 되 면 매개 변수를 호출 합니다.       런타임에서 필요한 경우 BeginJoinGroup 메서드는 또한 클라이언트에 멀티 캐스트 그룹이 액세스할 수 있는지 확인 하는 정책 검사를 수행 합니다. 클라이언트 액세스를 <xref:System.Net.Sockets.SocketException> <xref:System.Net.Sockets.SocketError>.</xref:System.Net.Sockets.SocketError> throw 되</xref:System.Net.Sockets.SocketException> 는 허용 되지 않는 경우"
  syntax:
    content: public IAsyncResult BeginJoinGroup (AsyncCallback callback, object state);
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: "작업이 완료 될 때 호출할 콜백 메서드."
    - id: state
      type: System.Object
      description: "에 전달할 선택적 상태 정보는 `callback` 이 작업에 대 한 메서드."
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>입니다.</xref:System.IAsyncResult> 반환       <xref:System.IAsyncResult>이 작업을 참조 하는.</xref:System.IAsyncResult>"
  overload: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "멀티 캐스트 그룹이 이미 조인 또는 조인 작업이 현재 진행 중입니다."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.Sockets.UdpSingleSourceMulticastClient&quot;> </xref> 삭제 되었습니다."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "소켓에 액세스 하려고 할 때 오류가 있습니다. 자세한 내용은 설명 섹션을 참조 합니다."
  platform:
  - net462
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  id: BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  langs:
  - csharp
  name: BeginReceiveFromSource(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: UdpSingleSourceMulticastClient.BeginReceiveFromSource(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(Byte[],Int32,Int32,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "조인된 된 멀티 캐스트 그룹에서 패킷을 받는 작업을 시작 하 고 지정 된 보낸에서 패킷이 그룹에 도착할 때 지정 된 호출을 호출 합니다."
  remarks: "BeginReceiveFromSource 메서드 단일 발신자에서 조인된 된 멀티 캐스트 그룹에서 UDP 패킷을 수신한 다음의 작업을 시작 합니다. 에 지정 된 로컬 포트, 멀티 캐스트 그룹 및 발신자 원본 주소에서 <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A>생성자.</xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A> 멀티 캐스트 클라이언트를 멀티 캐스트 그룹에 조인도 완료 해야 합니다.       에 지정 된 메서드는 `callback` 패킷을 받으면 매개 변수를 호출 합니다.       Udp 일반적이 지는 않지만 수신 작업이 동기적으로, 실패 하면 소켓 오류가 있을 수는. 소켓 오류가 발생 하는 경우는 <xref:System.Net.Sockets.SocketException>throw 됩니다.</xref:System.Net.Sockets.SocketException> 오류가 발생 했는가의 구성원으로 지정 된 <xref:System.Net.Sockets.SocketError>열거형.</xref:System.Net.Sockets.SocketError>"
  syntax:
    content: public IAsyncResult BeginReceiveFromSource (byte[] buffer, int offset, int count, AsyncCallback callback, object state);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "받은 데이터를 저장할 버퍼입니다."
    - id: offset
      type: System.Int32
      description: "오프셋의 시작 부분에서 바이트는 `buffer` 데이터가 저장 될 위치입니다."
    - id: count
      type: System.Int32
      description: "받고 저장할 바이트의 최대 수는 `buffer`합니다."
    - id: callback
      type: System.AsyncCallback
      description: "작업이 완료 될 때 호출할 콜백 메서드."
    - id: state
      type: System.Object
      description: "에 전달할 선택적 상태 정보는 `callback` 이 작업에 대 한 메서드."
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>입니다.</xref:System.IAsyncResult> 반환       <xref:System.IAsyncResult>이 작업을 참조 하는.</xref:System.IAsyncResult>"
  overload: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>null 참조 (Visual Basic에서는 Nothing)입니다."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>가 0 보다 작은-또는- <code>offset</code> 의 길이 보다 크면는 <code>buffer</code>합니다.       -또는- <code>count</code> 가 0 보다 작은-또는- <code>offset</code> count가의 길이 보다 크면 더한는 <code>buffer</code>합니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "멀티 캐스트 그룹이 아직 조인 되지 않았습니다."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.Sockets.UdpSingleSourceMulticastClient&quot;> </xref> 삭제 되었습니다."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "받기 위해 소켓에 액세스 하려고 하는 오류가 발생 했습니다. 자세한 내용은 설명 섹션을 참조 합니다."
  platform:
  - net462
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)
  id: BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  langs:
  - csharp
  name: BeginSendToSource(Byte[],Int32,Int32,Int32,AsyncCallback,Object)
  nameWithType: UdpSingleSourceMulticastClient.BeginSendToSource(Byte[],Int32,Int32,Int32,AsyncCallback,Object)
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(Byte[],Int32,Int32,Int32,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "이전에 지정 된 소스에 유니캐스트 패킷을 보내는 작업을 시작 합니다."
  remarks: "BeginSendToSource 메서드 이전에 지정 된 원본 UDP 패킷을 보내는 작업을 시작 합니다.       일부 프로토콜 흐름 제어, 서비스 통계 또는 복구 메시지의 품질을 전달 하려면이 정보를 사용 합니다.       에 지정 된 메서드는 `callback` 보내면 패킷을 매개 변수를 호출 합니다.       클라이언트를 멀티 캐스트 그룹에 조인을 완료 해야 합니다.       대상 포트에 지정 된 경우는 `remotePort` 매개 변수 보다 작거나 1, 024, <xref:System.Net.Sockets.SocketException> <xref:System.Net.Sockets.SocketError>.</xref:System.Net.Sockets.SocketError> throw 되</xref:System.Net.Sockets.SocketException> 는       Udp 일반적이 지는 않지만 송신 작업이 동기적으로, 실패 하면 소켓 오류가 있을 수는. 소켓 오류가 발생 하는 경우는 <xref:System.Net.Sockets.SocketException>throw 됩니다.</xref:System.Net.Sockets.SocketException> 오류가 발생 했는가의 구성원으로 지정 된 <xref:System.Net.Sockets.SocketError>열거형.</xref:System.Net.Sockets.SocketError>"
  syntax:
    content: public IAsyncResult BeginSendToSource (byte[] buffer, int offset, int count, int remotePort, AsyncCallback callback, object state);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "보낼 데이터를 포함 하는 버퍼입니다."
    - id: offset
      type: System.Int32
      description: "오프셋의 시작 부분에서 바이트는 `buffer` 보낼 데이터를 읽을 수 있습니다."
    - id: count
      type: System.Int32
      description: "보낼 바이트 수는 `buffer`합니다."
    - id: remotePort
      type: System.Int32
      description: "패킷이 보내야 하는 원격 포트입니다. 원격 주소를 지정 된 &lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A&gt; 생성자입니다."
    - id: callback
      type: System.AsyncCallback
      description: "작업이 완료 될 때 호출할 콜백 메서드."
    - id: state
      type: System.Object
      description: "에 전달할 선택적 상태 정보는 `callback` 이 작업에 대 한 메서드."
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>입니다.</xref:System.IAsyncResult> 반환       <xref:System.IAsyncResult>이 작업을 참조 하는.</xref:System.IAsyncResult>"
  overload: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>null 참조 (Visual Basic에서는 Nothing)입니다."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>가 0 보다 작은-또는- <code>offset</code> 의 길이 보다 크면는 <code>buffer</code>합니다.       -또는- <code>count</code> 가 0 보다 작은-또는- <code>offset</code> count가의 길이 보다 크면 더한는 <code>buffer</code>합니다.       -또는- <code>remotePort</code> 가 0 보다 작거나 65, 535 보다 큰 합니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "멀티 캐스트 그룹이 아직 조인 되지 않았습니다."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.Sockets.UdpSingleSourceMulticastClient&quot;> </xref> 삭제 되었습니다."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "소켓에 액세스 하려고 할 때 오류가 있습니다. 자세한 내용은 설명 섹션을 참조 합니다."
  platform:
  - net462
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose
  id: Dispose
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  langs:
  - csharp
  name: Dispose()
  nameWithType: UdpSingleSourceMulticastClient.Dispose()
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose()
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "멀티 캐스트 그룹을 탈퇴 하 고의 현재 인스턴스에서 사용 하는 모든 리소스를 해제는 <xref href=&quot;System.Net.Sockets.UdpSingleSourceMulticastClient&quot;> </xref> 클래스 및 기본 <xref:System.Net.Sockets.Socket>.</xref:System.Net.Sockets.Socket>"
  remarks: "<xref:System.Net.Sockets.UdpSingleSourceMulticastClient>.</xref:System.Net.Sockets.UdpSingleSourceMulticastClient> 를 사용 하 여 작업을 마쳤으면 Dispose를 호출 합니다. Dispose 메서드는 <xref:System.Net.Sockets.UdpSingleSourceMulticastClient>불안정 한 상태가.</xref:System.Net.Sockets.UdpSingleSourceMulticastClient> Dispose를 호출한 후에 대 한 모든 참조를 해제 해야는 <xref:System.Net.Sockets.UdpSingleSourceMulticastClient>가비지 수집기는 메모리를 회수할 수 있도록 하는 <xref:System.Net.Sockets.UdpSingleSourceMulticastClient>차지한.</xref:System.Net.Sockets.UdpSingleSourceMulticastClient> </xref:System.Net.Sockets.UdpSingleSourceMulticastClient>       <xref:System.Net.Sockets.UdpSingleSourceMulticastClient>.</xref:System.Net.Sockets.UdpSingleSourceMulticastClient> 에 대 한 마지막 참조를 해제 하기 전에 항상 Dispose를 호출 사용 중인 리소스가 가비지 수집기 호출할 때까지 해제 되지 것입니다 그렇지 않은 경우는 <xref:System.Net.Sockets.UdpSingleSourceMulticastClient>개체의 <xref:System.Object.Finalize%2A>메서드.</xref:System.Object.Finalize%2A> </xref:System.Net.Sockets.UdpSingleSourceMulticastClient>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup(System.IAsyncResult)
  id: EndJoinGroup(System.IAsyncResult)
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  langs:
  - csharp
  name: EndJoinGroup(IAsyncResult)
  nameWithType: UdpSingleSourceMulticastClient.EndJoinGroup(IAsyncResult)
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup(IAsyncResult)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "멀티 캐스트 그룹을 비동기 조인 그룹 작업을 완료합니다."
  remarks: "EndJoinGroup 메서드는 비동기 바인딩할 멀티 캐스트 그룹에 대 한 소켓 및 조인 작업을 완료합니다.       런타임에서 필요한 경우 EndJoinGroup 메서드는 또한 클라이언트에 멀티 캐스트 그룹이 액세스할 수 있는지 확인 하는 정책 검사를 수행 합니다. 클라이언트 액세스를 <xref:System.Net.Sockets.SocketException> <xref:System.Net.Sockets.SocketError>.</xref:System.Net.Sockets.SocketError> throw 되</xref:System.Net.Sockets.SocketException> 는 허용 되지 않는 경우       조인 그룹 작업을 수행 하는 동안 소켓 오류가 발생할 경우 한 <xref:System.Net.Sockets.SocketException>throw 됩니다.</xref:System.Net.Sockets.SocketException> 오류가 발생 했는가의 구성원으로 지정 된 <xref:System.Net.Sockets.SocketError>열거형.</xref:System.Net.Sockets.SocketError>"
  syntax:
    content: public void EndJoinGroup (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "비동기 조인 작업의 결과입니다."
  overload: System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>result</code>null 참조 (Visual Basic에서는 Nothing)입니다."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.Sockets.UdpSingleSourceMulticastClient&quot;> </xref> 삭제 되었습니다."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "소켓에 액세스 하려고 할 때 오류가 있습니다. 자세한 내용은 설명 섹션을 참조 합니다."
  platform:
  - net462
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource(System.IAsyncResult,System.Int32@)
  id: EndReceiveFromSource(System.IAsyncResult,System.Int32@)
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  langs:
  - csharp
  name: EndReceiveFromSource(IAsyncResult,Int32)
  nameWithType: UdpSingleSourceMulticastClient.EndReceiveFromSource(IAsyncResult,Int32)
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource(IAsyncResult,Int32)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "조인된 된 멀티 캐스트 그룹에서 패킷을 받는 비동기 작업을 완료 하 고 받은 정보를 제공 합니다."
  remarks: "EndReceiveFromSource 메서드는 멀티 캐스트 그룹에서 단일 소스에서 패킷을 수신 하기 위해 비동기 작업을 완료 합니다.       수신 작업을 수행 하는 동안 소켓 오류가 발생할 경우 한 <xref:System.Net.Sockets.SocketException>throw 됩니다.</xref:System.Net.Sockets.SocketException> 오류가 발생 했는가의 구성원으로 지정 된 <xref:System.Net.Sockets.SocketError>열거형.</xref:System.Net.Sockets.SocketError>"
  syntax:
    content: public int EndReceiveFromSource (IAsyncResult result, out int sourcePort);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "결과의 비동기 수신 작업 합니다."
    - id: sourcePort
      type: System.Int32
      description: "원본 끝점에서 패킷을 받는 위치입니다."
    return:
      type: System.Int32
      description: "<xref:System.Int32>입니다.</xref:System.Int32> 반환       에 저장 된 메시지의 길이 (바이트)는 <code> buffer </code> 에 전달 된 매개 변수는 <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource*>메서드.</xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource*>"
  overload: System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>result</code>null 참조 (Visual Basic에서는 Nothing)입니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "멀티 캐스트 그룹이 아직 조인 되지 않았습니다."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.Sockets.UdpSingleSourceMulticastClient&quot;> </xref> 삭제 되었습니다."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "소켓에 액세스 하려고 할 때 오류가 있습니다. 자세한 내용은 설명 섹션을 참조 합니다."
  platform:
  - net462
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource(System.IAsyncResult)
  id: EndSendToSource(System.IAsyncResult)
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  langs:
  - csharp
  name: EndSendToSource(IAsyncResult)
  nameWithType: UdpSingleSourceMulticastClient.EndSendToSource(IAsyncResult)
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource(IAsyncResult)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "단일 소스에 유니캐스트 패킷을 보내는 작업을 완료 합니다."
  remarks: "EndSendToSource 메서드는 이전에 지정 된 단일 소스로 패킷을 보내야 하는 비동기 작업을 완료 합니다.       수신 작업을 수행 하는 동안 소켓 오류가 발생할 경우 한 <xref:System.Net.Sockets.SocketException>throw 됩니다.</xref:System.Net.Sockets.SocketException> 오류가 발생 했는가의 구성원으로 지정 된 <xref:System.Net.Sockets.SocketError>열거형.</xref:System.Net.Sockets.SocketError>"
  syntax:
    content: public void EndSendToSource (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "비동기 보내기 작업의 결과입니다."
  overload: System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>result</code>null 참조 (Visual Basic에서는 Nothing)입니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "멀티 캐스트 그룹이 아직 조인 되지 않았습니다."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.Sockets.UdpSingleSourceMulticastClient&quot;> </xref> 삭제 되었습니다."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "소켓에 액세스 하려고 할 때 오류가 있습니다. 자세한 내용은 설명 섹션을 참조 합니다."
  platform:
  - net462
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize
  id: ReceiveBufferSize
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  langs:
  - csharp
  name: ReceiveBufferSize
  nameWithType: UdpSingleSourceMulticastClient.ReceiveBufferSize
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "수신 버퍼를 바이트 단위로 크기를 가져오거나는 <xref:System.Net.Sockets.Socket>이 멀티 캐스트 수신 작업에 사용 되는 <xref href=&quot;System.Net.Sockets.UdpSingleSourceMulticastClient&quot;> </xref> 인스턴스.</xref:System.Net.Sockets.Socket>"
  remarks: "`ReceiveBufferSize` 속성은 기본 수신 버퍼를 바이트 단위로 크기를 설정 하거나 가져옵니다 <xref:System.Net.Sockets.Socket>이 멀티 캐스트 수신 작업에 사용 되는 <xref:System.Net.Sockets.UdpSingleSourceMulticastClient>인스턴스.</xref:System.Net.Sockets.UdpSingleSourceMulticastClient> </xref:System.Net.Sockets.Socket> 특히,는 `ReceiveBufferSize` 패킷이 도착 하면 응용 프로그램이 아직 호출 하지 않은 경우 스택에서 사용 되는 버퍼의 크기를 제어 하는 속성은 <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A>메서드.</xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A> 이 버퍼 채워지면 고 패킷을 계속 나타나는 경우 응용 프로그램 호출 하기 전에 <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A>및 <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource%2A>메서드, 이전 패킷을 삭제 됩니다.</xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource%2A> </xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A> 응용 프로그램 이전 패킷을 받을 수 없습니다 및 최신 패킷을 호출할 때 대신 표시 됩니다는 <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A>메서드.</xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A>       Windows의 수신 버퍼의 기본 크기는 8, 192입니다."
  syntax:
    content: public int ReceiveBufferSize { get; set; }
    return:
      type: System.Int32
      description: "<xref:System.Int32>입니다.</xref:System.Int32> 반환       수신 버퍼의 바이트 크기입니다."
  overload: System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "지정 된 버퍼 크기가 0 보다 작은 경우"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "멀티 캐스트 그룹이 아직 조인 되지 않았습니다."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.Sockets.UdpSingleSourceMulticastClient&quot;> </xref> 삭제 되었습니다."
  platform:
  - net462
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize
  id: SendBufferSize
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  langs:
  - csharp
  name: SendBufferSize
  nameWithType: UdpSingleSourceMulticastClient.SendBufferSize
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "보내기 버퍼를 바이트 단위로 크기를 가져오거나는 <xref:System.Net.Sockets.Socket>이 멀티 캐스트 전송 작업에 사용 되는 <xref href=&quot;System.Net.Sockets.UdpSingleSourceMulticastClient&quot;> </xref> 인스턴스.</xref:System.Net.Sockets.Socket>"
  remarks: "SendBufferSize 속성은 기본 송신 버퍼를 바이트 단위로 크기를 설정 하거나 가져옵니다 <xref:System.Net.Sockets.Socket>이 멀티 캐스트 전송 작업에 사용 되는 <xref:System.Net.Sockets.UdpSingleSourceMulticastClient>인스턴스.</xref:System.Net.Sockets.UdpSingleSourceMulticastClient> </xref:System.Net.Sockets.Socket>       Mac OS X, SendBufferSize 속성 제어 바이트 수에 대 한 추가 호출 하기 전에 네트워크 스택에서 전송 대기 중인 버퍼에 있을 수 있습니다는 <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A>메서드 실패 하기 시작 합니다.</xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A> Mac OS X에서 응용 프로그램 짧은 시간 내에 많은 수의 UDP 패킷 보내는 경우이 속성을 고려해 야 할 수 있습니다.       Windows에서 호출 하는 <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A>메서드 송신 버퍼가 가득 찬 SendBufferSize 속성의 값에 따라 콜백 호출 하는 데 더 많은 시간이 걸립니다.</xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A> SendBufferSize 속성 보내기 완료 될 때까지 실제 메모리에 사용자의 버퍼가 계속 잠겨 있는지 여부를 제어 합니다.       Windows에서 송신 버퍼의 기본 크기는 8, 192입니다."
  syntax:
    content: public int SendBufferSize { get; set; }
    return:
      type: System.Int32
      description: "<xref:System.Int32>입니다.</xref:System.Int32> 반환       송신 버퍼의 바이트 크기입니다."
  overload: System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "지정 된 버퍼 크기가 0 보다 작은 경우"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "멀티 캐스트 그룹이 아직 조인 되지 않았습니다."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.Sockets.UdpSingleSourceMulticastClient&quot;> </xref> 삭제 되었습니다."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Net.Sockets.SocketException
  isExternal: true
  name: System.Net.Sockets.SocketException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: UdpSingleSourceMulticastClient(IPAddress,IPAddress,Int32)
  nameWithType: UdpSingleSourceMulticastClient.UdpSingleSourceMulticastClient(IPAddress,IPAddress,Int32)
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.UdpSingleSourceMulticastClient(IPAddress,IPAddress,Int32)
- uid: System.Net.IPAddress
  parent: System.Net
  isExternal: true
  name: IPAddress
  nameWithType: IPAddress
  fullName: System.Net.IPAddress
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: BeginJoinGroup(AsyncCallback,Object)
  nameWithType: UdpSingleSourceMulticastClient.BeginJoinGroup(AsyncCallback,Object)
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup(AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: BeginReceiveFromSource(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: UdpSingleSourceMulticastClient.BeginReceiveFromSource(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(Byte[],Int32,Int32,AsyncCallback,Object)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: BeginSendToSource(Byte[],Int32,Int32,Int32,AsyncCallback,Object)
  nameWithType: UdpSingleSourceMulticastClient.BeginSendToSource(Byte[],Int32,Int32,Int32,AsyncCallback,Object)
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(Byte[],Int32,Int32,Int32,AsyncCallback,Object)
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: Dispose()
  nameWithType: UdpSingleSourceMulticastClient.Dispose()
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose()
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup(System.IAsyncResult)
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: EndJoinGroup(IAsyncResult)
  nameWithType: UdpSingleSourceMulticastClient.EndJoinGroup(IAsyncResult)
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup(IAsyncResult)
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource(System.IAsyncResult,System.Int32@)
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: EndReceiveFromSource(IAsyncResult,Int32)
  nameWithType: UdpSingleSourceMulticastClient.EndReceiveFromSource(IAsyncResult,Int32)
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource(IAsyncResult,Int32)
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource(System.IAsyncResult)
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: EndSendToSource(IAsyncResult)
  nameWithType: UdpSingleSourceMulticastClient.EndSendToSource(IAsyncResult)
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource(IAsyncResult)
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: ReceiveBufferSize
  nameWithType: UdpSingleSourceMulticastClient.ReceiveBufferSize
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: SendBufferSize
  nameWithType: UdpSingleSourceMulticastClient.SendBufferSize
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor*
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: UdpSingleSourceMulticastClient
  nameWithType: UdpSingleSourceMulticastClient.UdpSingleSourceMulticastClient
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup*
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: BeginJoinGroup
  nameWithType: UdpSingleSourceMulticastClient.BeginJoinGroup
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource*
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: BeginReceiveFromSource
  nameWithType: UdpSingleSourceMulticastClient.BeginReceiveFromSource
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource*
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: BeginSendToSource
  nameWithType: UdpSingleSourceMulticastClient.BeginSendToSource
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose*
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: Dispose
  nameWithType: UdpSingleSourceMulticastClient.Dispose
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup*
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: EndJoinGroup
  nameWithType: UdpSingleSourceMulticastClient.EndJoinGroup
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource*
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: EndReceiveFromSource
  nameWithType: UdpSingleSourceMulticastClient.EndReceiveFromSource
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource*
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: EndSendToSource
  nameWithType: UdpSingleSourceMulticastClient.EndSendToSource
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize*
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: ReceiveBufferSize
  nameWithType: UdpSingleSourceMulticastClient.ReceiveBufferSize
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize*
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: SendBufferSize
  nameWithType: UdpSingleSourceMulticastClient.SendBufferSize
