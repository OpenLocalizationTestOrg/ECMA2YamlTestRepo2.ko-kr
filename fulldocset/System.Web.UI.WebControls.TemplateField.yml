### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.TemplateField
  id: TemplateField
  children:
  - System.Web.UI.WebControls.TemplateField.#ctor
  - System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate
  - System.Web.UI.WebControls.TemplateField.ConvertEmptyStringToNull
  - System.Web.UI.WebControls.TemplateField.CopyProperties(System.Web.UI.WebControls.DataControlField)
  - System.Web.UI.WebControls.TemplateField.CreateField
  - System.Web.UI.WebControls.TemplateField.EditItemTemplate
  - System.Web.UI.WebControls.TemplateField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)
  - System.Web.UI.WebControls.TemplateField.FooterTemplate
  - System.Web.UI.WebControls.TemplateField.HeaderTemplate
  - System.Web.UI.WebControls.TemplateField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  - System.Web.UI.WebControls.TemplateField.InsertItemTemplate
  - System.Web.UI.WebControls.TemplateField.ItemTemplate
  - System.Web.UI.WebControls.TemplateField.ValidateRequestMode
  - System.Web.UI.WebControls.TemplateField.ValidateSupportsCallback
  langs:
  - csharp
  name: TemplateField
  nameWithType: TemplateField
  fullName: System.Web.UI.WebControls.TemplateField
  type: Class
  summary: "데이터 바인딩된 컨트롤에서 사용자 지정 콘텐츠를 표시 하는 필드를 나타냅니다."
  remarks: "TemplateField 클래스는 데이터 바인딩된 컨트롤에서 사용 됩니다 (등 <xref:System.Web.UI.WebControls.GridView>및 <xref:System.Web.UI.WebControls.DetailsView>) 표시 된 각 레코드에 대 한 사용자 지정 콘텐츠를 표시 합니다.</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> 제공 하지 않는 미리 정의 된 데이터 중 하나에 의해 제어 필드는 데이터 바인딩된 컨트롤의 내용을 표시 하려면 해야 하는 경우 (예: <xref:System.Web.UI.WebControls.BoundField>), TemplateField 클래스를 사용 하 여 사용자 지정 사용자 인터페이스 (UI)를 만들.</xref:System.Web.UI.WebControls.BoundField> TemplateField 개체는 사용 되는 데이터 바인딩된 컨트롤에 따라 다르게 표시 됩니다. 예를 들어는 <xref:System.Web.UI.WebControls.GridView>컨트롤에 열으로 TemplateField 개체를 표시 및 <xref:System.Web.UI.WebControls.DetailsView>컨트롤 행으로 표시 합니다.</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView>       다음 표에 나열 된 템플릿을 사용 하 여 TemplateField 개체의 다른 부분에 대 한 사용자 지정 템플릿을 정의할 수 있습니다.      | 서식 파일 | 설명 |   |--------------|-----------------|   | <xref:System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate%2A>| 콘텐츠를 TemplateField 개체에는 대체 항목에 대 한 표시를 지정 합니다. |   | <xref:System.Web.UI.WebControls.TemplateField.EditItemTemplate%2A>| 콘텐츠를 TemplateField 개체에 대 한 편집 모드에 있는 항목에 대 한 표시를 지정 합니다. |   | <xref:System.Web.UI.WebControls.TemplateField.FooterTemplate%2A>| 콘텐츠 TemplateField 개체의 바닥글 섹션에 대 한 표시를 지정 합니다. |   | <xref:System.Web.UI.WebControls.TemplateField.HeaderTemplate%2A>| 콘텐츠 TemplateField 개체의 헤더 섹션에 대 한 표시를 지정 합니다. |   | <xref:System.Web.UI.WebControls.TemplateField.InsertItemTemplate%2A>| 콘텐츠를 TemplateField 개체에 삽입 모드에 있는 항목에 대 한 표시를 지정 합니다.</xref:System.Web.UI.WebControls.TemplateField.InsertItemTemplate%2A> </xref:System.Web.UI.WebControls.TemplateField.HeaderTemplate%2A> </xref:System.Web.UI.WebControls.TemplateField.FooterTemplate%2A> </xref:System.Web.UI.WebControls.TemplateField.EditItemTemplate%2A> </xref:System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate%2A> 이 템플릿은 <xref:System.Web.UI.WebControls.DetailsView>컨트롤 에서만 지원 됩니다. |   | <xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A>| 콘텐츠 TemplateField 개체의 항목에 대 한 표시를 지정 합니다. |       데이터 바인딩된 컨트롤에서 TemplateField 개체를 설정 하 여 숨길 수 있습니다는 <xref:System.Web.UI.WebControls.DataControlField.Visible%2A>속성을 `false`.</xref:System.Web.UI.WebControls.DataControlField.Visible%2A> </xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A> </xref:System.Web.UI.WebControls.DetailsView>       사용자 지정을 정의 하는 대신 <xref:System.Web.UI.WebControls.TemplateField.HeaderTemplate%2A>또는 <xref:System.Web.UI.WebControls.TemplateField.FooterTemplate%2A>서식 파일을 사용자 지정할 수 있습니다 TemplateField 개체의 머리글 및 바닥글 섹션이 TemplateField 개체의 다른 속성을 설정 하 여.</xref:System.Web.UI.WebControls.TemplateField.FooterTemplate%2A> </xref:System.Web.UI.WebControls.TemplateField.HeaderTemplate%2A> 머리글 또는 바닥글 섹션의 캡션을 표시 하려면 설정는 <xref:System.Web.UI.WebControls.DataControlField.HeaderText%2A>또는 <xref:System.Web.UI.WebControls.DataControlField.FooterText%2A>속성을 각각.</xref:System.Web.UI.WebControls.DataControlField.FooterText%2A> </xref:System.Web.UI.WebControls.DataControlField.HeaderText%2A> 헤더 섹션의 텍스트를 표시 하는 대신 설정 하 여 이미지를 표시할 수는 <xref:System.Web.UI.WebControls.DataControlField.HeaderImageUrl%2A>속성.</xref:System.Web.UI.WebControls.DataControlField.HeaderImageUrl%2A> 헤더 섹션 TemplateField 개체에 설정 하 여 숨길 수는 <xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A>속성을 `false`.</xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A>      > [!NOTE] > 일부 데이터 바인딩된 컨트롤 (예:는 <xref:System.Web.UI.WebControls.GridView>컨트롤) 표시 하거나 컨트롤의 전체 헤더 섹션을 숨길 수.</xref:System.Web.UI.WebControls.GridView> 이러한 데이터 바인딩된 컨트롤을 지원 하지 않습니다는 <xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A>바인딩된 개별 필드에 대 한 속성.</xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A> 컨트롤의 사용을 표시 하거나 숨기는 데이터 바인딩된 컨트롤의 전체 헤더 섹션 하 여 `ShowHeader` 속성 (있는 경우).       또한 사용자 지정할 수 있습니다 (글꼴 색, 배경색, 및 등) TemplateField 개체의 모양을 필드의 다른 부분에 대 한 스타일 속성을 설정 합니다. 다음 표에서 다른 스타일 속성을 나열합니다.      | Style 속성 | 설명 |   |--------------------|-----------------|   | <xref:System.Web.UI.WebControls.DataControlField.ControlStyle%2A>| TemplateField 개체의 자식 웹 서버 컨트롤에 대 한 스타일 설정 합니다. |   | <xref:System.Web.UI.WebControls.DataControlField.FooterStyle%2A>| TemplateField 개체의 바닥글 섹션에 대 한 스타일 설정 합니다. |   | <xref:System.Web.UI.WebControls.DataControlField.HeaderStyle%2A>| TemplateField 개체의 헤더 섹션에 대 한 스타일 설정 합니다. |   | <xref:System.Web.UI.WebControls.DataControlField.ItemStyle%2A>| TemplateField 개체의 데이터 항목에 대 한 스타일 설정 합니다. |</xref:System.Web.UI.WebControls.DataControlField.ItemStyle%2A> </xref:System.Web.UI.WebControls.DataControlField.HeaderStyle%2A> </xref:System.Web.UI.WebControls.DataControlField.FooterStyle%2A> </xref:System.Web.UI.WebControls.DataControlField.ControlStyle%2A>"
  example:
  - "The following code example demonstrates how to create a custom TemplateField object that displays two fields in the same cell. The first name and last name fields are combined into the same TemplateField object.  \n  \n [!code-cs[TemplateField#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_104_1.aspx)]\n [!code-vb[TemplateField#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_104_1.aspx)]"
  syntax:
    content: 'public class TemplateField : System.Web.UI.WebControls.DataControlField'
  inheritance:
  - System.Object
  - System.Web.UI.WebControls.DataControlField
  implements: []
  inheritedMembers:
  - System.Web.UI.WebControls.DataControlField.AccessibleHeaderText
  - System.Web.UI.WebControls.DataControlField.CloneField
  - System.Web.UI.WebControls.DataControlField.Control
  - System.Web.UI.WebControls.DataControlField.ControlStyle
  - System.Web.UI.WebControls.DataControlField.DesignMode
  - System.Web.UI.WebControls.DataControlField.FooterStyle
  - System.Web.UI.WebControls.DataControlField.FooterText
  - System.Web.UI.WebControls.DataControlField.HeaderImageUrl
  - System.Web.UI.WebControls.DataControlField.HeaderStyle
  - System.Web.UI.WebControls.DataControlField.HeaderText
  - System.Web.UI.WebControls.DataControlField.Initialize(System.Boolean,System.Web.UI.Control)
  - System.Web.UI.WebControls.DataControlField.InsertVisible
  - System.Web.UI.WebControls.DataControlField.IsTrackingViewState
  - System.Web.UI.WebControls.DataControlField.ItemStyle
  - System.Web.UI.WebControls.DataControlField.LoadViewState(System.Object)
  - System.Web.UI.WebControls.DataControlField.OnFieldChanged
  - System.Web.UI.WebControls.DataControlField.SaveViewState
  - System.Web.UI.WebControls.DataControlField.ShowHeader
  - System.Web.UI.WebControls.DataControlField.SortExpression
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IDataSourceViewSchemaAccessor#DataSourceViewSchema
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#TrackViewState
  - System.Web.UI.WebControls.DataControlField.ToString
  - System.Web.UI.WebControls.DataControlField.TrackViewState
  - System.Web.UI.WebControls.DataControlField.ViewState
  - System.Web.UI.WebControls.DataControlField.Visible
  platform:
  - net462
- uid: System.Web.UI.WebControls.TemplateField.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.TemplateField
  langs:
  - csharp
  name: TemplateField()
  nameWithType: TemplateField.TemplateField()
  fullName: System.Web.UI.WebControls.TemplateField.TemplateField()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref> 클래스입니다."
  remarks: "<xref:System.Web.UI.WebControls.TemplateField>클래스</xref:System.Web.UI.WebControls.TemplateField> 의 새 인스턴스를 초기화 하려면이 생성자를 사용 합니다. 이 생성자는 동적으로 만든된 데이터 바인딩된 컨트롤에 필드를 추가 하는 경우 일반적으로 사용 됩니다.       동적으로 추가 하는 <xref:System.Web.UI.WebControls.TemplateField>데이터 바인딩된 컨트롤에 개체를 새 <xref:System.Web.UI.WebControls.TemplateField>개체, 적절 한 템플릿을 정의 및 데이터 바인딩된 컨트롤의 필드 컬렉션에 추가 합니다.</xref:System.Web.UI.WebControls.TemplateField> </xref:System.Web.UI.WebControls.TemplateField> 예를 들어, 사용 하는 경우는 <xref:System.Web.UI.WebControls.GridView>컨트롤에 추가 합니다는 <xref:System.Web.UI.WebControls.TemplateField>개체는 <xref:System.Web.UI.WebControls.GridView.Columns%2A>컬렉션.</xref:System.Web.UI.WebControls.GridView.Columns%2A> </xref:System.Web.UI.WebControls.TemplateField> </xref:System.Web.UI.WebControls.GridView>      > [!NOTE] > 필드는 데이터 바인딩된 컨트롤에 동적으로 추가할 수 있지만 가장 좋습니다는 필드 정적으로 선언 하 고 다음 표시 하거나 숨길 수를 적절 하 게 합니다. 부모 데이터 바인딩된 컨트롤에 대 한 뷰 상태의 크기를 줄이는 모든 필드를 정적으로 선언 합니다."
  example:
  - "The following code example demonstrates how to use the constructor to dynamically add a <xref:System.Web.UI.WebControls.TemplateField> field column to a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[TemplateFieldCtor#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_118_1.aspx)]\n [!code-vb[TemplateFieldCtor#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_118_1.aspx)]"
  syntax:
    content: public TemplateField ();
    parameters: []
  overload: System.Web.UI.WebControls.TemplateField.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate
  id: AlternatingItemTemplate
  parent: System.Web.UI.WebControls.TemplateField
  langs:
  - csharp
  name: AlternatingItemTemplate
  nameWithType: TemplateField.AlternatingItemTemplate
  fullName: System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "항목을 교대로 반복 되는 표시에 대 한 서식 파일을 가져오거나는 <xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref> 개체입니다."
  remarks: "AlternatingItemTemplate 속성을 사용 하 여 교대로 반복 되는 항목에 대해 표시 되는 사용자 지정 콘텐츠를 지정 하는 <xref:System.Web.UI.WebControls.TemplateField>개체입니다.</xref:System.Web.UI.WebControls.TemplateField> 대체 항목은 렌더링 하는 방법을 지정 하는 템플릿을 만들어 콘텐츠를 정의 합니다.      > [!NOTE] > The AlternatingItemTemplate 속성은 주로 함께에서 사용 되는 <xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A>데이터 바인딩된 컨트롤에 다른 모든 항목에 대해 서로 다른 모양을 만들 속성입니다.</xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A>       서식 파일을 지정 하려면 먼저 배치 `<AlternatingItemTemplate>` 여는 태그와 닫는 태그 사이 `<TemplateField>` 요소입니다. 다음에 여는 태그와 닫는 사이 있는 사용자 지정 내용을 추가 `<AlternatingItemTemplate>` 태그입니다. 콘텐츠는 일반 텍스트 만큼 간단 하거나 복잡 한 (다른 컨트롤을 포함 템플릿의 예를 들어) 될 수 있습니다.       서식 파일에 정의 된 컨트롤에 프로그래밍 방식으로 액세스 하려면 먼저 결정할 <xref:System.Web.UI.WebControls.TableCell>개체 데이터 바인딩된 컨트롤에 컨트롤을 포함 합니다.</xref:System.Web.UI.WebControls.TableCell> 를 사용 하 여는 <xref:System.Web.UI.Control.Controls%2A>의 컬렉션은 <xref:System.Web.UI.WebControls.TableCell>컨트롤에 액세스 하는 개체입니다.</xref:System.Web.UI.WebControls.TableCell> </xref:System.Web.UI.Control.Controls%2A> 사용할 수도 있습니다는 <xref:System.Web.UI.Control.FindControl%2A>의 메서드는 <xref:System.Web.UI.WebControls.TableCell>개체를 컨트롤에 있는 경우 컨트롤을 찾을 <xref:System.Web.UI.Control.ID%2A>지정 된 속성입니다.</xref:System.Web.UI.Control.ID%2A> </xref:System.Web.UI.WebControls.TableCell> </xref:System.Web.UI.Control.FindControl%2A>"
  example:
  - "The following code example demonstrates how to use the AlternatingItemTemplate property to create a custom template for the alternating items in a <xref:System.Web.UI.WebControls.TemplateField> field column of a <xref:System.Web.UI.WebControls.GridView> control. The template is a variation of the template specified by the <xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A> property, where an image is displayed on the opposite side of the cell.  \n  \n [!code-vb[TemplateFieldAlternatingItemTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1029_1.aspx)]\n [!code-cs[TemplateFieldAlternatingItemTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1029_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate AlternatingItemTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "A <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref>-구현 된 개체에서 항목을 교대로 반복 되는 표시에 대 한 템플릿을 포함 하는 <xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>,이 속성이 설정 되어 있지 않음을 나타냅니다."
  overload: System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TemplateField.ConvertEmptyStringToNull
  id: ConvertEmptyStringToNull
  parent: System.Web.UI.WebControls.TemplateField
  langs:
  - csharp
  name: ConvertEmptyStringToNull
  nameWithType: TemplateField.ConvertEmptyStringToNull
  fullName: System.Web.UI.WebControls.TemplateField.ConvertEmptyStringToNull
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "나타내는 값을 가져오거나 여부 값 하는 <xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref> 개체가 바인딩된에 변환할지 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> <xref:System.String.Empty>.</xref:System.String.Empty> 경우"
  remarks: "이 속성이 서식 파일에 작성 된 양방향 데이터 바인딩을 문이 적용 됩니다. 양방향 바인딩된 템플릿에서 값을 추출 하는 업데이트 또는 삽입 작업에 대 한 데이터 소스에 값을 전달 하기 전에 다음 변환이 수행 됩니다.       예를 들어 사용자가 빈 문자열을 입력 (&quot;&quot;)를 업데이트 하거나 레코드를 삽입할 때 필드 값에 대 한 합니다. 빈 문자열 값을 자동으로 변환 되며 있는지 여부를 지정 하려면 ConvertEmptyStringToNull 속성을 사용 하 여 `null` 데이터 원본에서 데이터 필드가 업데이트 되는 경우."
  syntax:
    content: public virtual bool ConvertEmptyStringToNull { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우 값 하는 <xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref> 은에 바인딩된으로 변환할지 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 때 <xref:System.String.Empty>, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.String.Empty> 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.TemplateField.ConvertEmptyStringToNull*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TemplateField.CopyProperties(System.Web.UI.WebControls.DataControlField)
  id: CopyProperties(System.Web.UI.WebControls.DataControlField)
  parent: System.Web.UI.WebControls.TemplateField
  langs:
  - csharp
  name: CopyProperties(DataControlField)
  nameWithType: TemplateField.CopyProperties(DataControlField)
  fullName: System.Web.UI.WebControls.TemplateField.CopyProperties(DataControlField)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "현재의 속성을 복사 <xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref>-파생 된 개체를 지정 된 <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> 개체입니다."
  remarks: "CopyProperties 메서드는 현재 속성을 복사 하는 데 사용 하는 도우미 메서드입니다 <xref:System.Web.UI.WebControls.TemplateField>-파생 개체는 <xref:System.Web.UI.WebControls.DataControlField>메서드에서 만든 개체입니다.</xref:System.Web.UI.WebControls.DataControlField> </xref:System.Web.UI.WebControls.TemplateField>"
  syntax:
    content: protected override void CopyProperties (System.Web.UI.WebControls.DataControlField newField);
    parameters:
    - id: newField
      type: System.Web.UI.WebControls.DataControlField
      description: "<xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> 현재 속성을 복사 하도록 <xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref> 하 합니다."
  overload: System.Web.UI.WebControls.TemplateField.CopyProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TemplateField.CreateField
  id: CreateField
  parent: System.Web.UI.WebControls.TemplateField
  langs:
  - csharp
  name: CreateField()
  nameWithType: TemplateField.CreateField()
  fullName: System.Web.UI.WebControls.TemplateField.CreateField()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "새 <xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref> 개체입니다."
  remarks: "반환할 기본 메서드를 재정의 하는 CreateField 메서드는 <xref:System.Web.UI.WebControls.TemplateField>개체입니다.</xref:System.Web.UI.WebControls.TemplateField>"
  syntax:
    content: protected override System.Web.UI.WebControls.DataControlField CreateField ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.DataControlField
      description: "항상 새 반환 <xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.TemplateField.CreateField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TemplateField.EditItemTemplate
  id: EditItemTemplate
  parent: System.Web.UI.WebControls.TemplateField
  langs:
  - csharp
  name: EditItemTemplate
  nameWithType: TemplateField.EditItemTemplate
  fullName: System.Web.UI.WebControls.TemplateField.EditItemTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "편집 모드에서 항목을 표시 하기 위한 서식 파일을 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref> 개체입니다."
  remarks: "EditItemTemplate 속성을 사용 하 여에서 편집 모드에 있는 항목에 대해 표시 되는 사용자 지정 콘텐츠를 지정 하는 <xref:System.Web.UI.WebControls.TemplateField>개체입니다.</xref:System.Web.UI.WebControls.TemplateField> 편집 모드에 있는 항목을 렌더링 하는 방법을 지정 하는 서식 파일을 만들어 콘텐츠를 정의 합니다. EditItemTemplate 속성은 일반적으로 데이터 원본에 값을 수정 하려면 사용자에 대 한 입력된 컨트롤을 포함 합니다.       서식 파일을 지정 하려면 먼저 배치 `<EditItemTemplate>` 여는 태그와 닫는 태그 사이 `<TemplateField>` 요소입니다. 다음에 여는 태그와 닫는 사이 있는 사용자 지정 내용을 추가 `<EditItemTemplate>` 태그입니다. 콘텐츠는 일반 텍스트 만큼 간단 하거나 복잡 한 (다른 컨트롤을 포함 템플릿의 예를 들어) 될 수 있습니다.       서식 파일에 정의 된 컨트롤에 프로그래밍 방식으로 액세스 하려면 먼저 결정할 <xref:System.Web.UI.WebControls.TableCell>개체 데이터 바인딩된 컨트롤에 컨트롤을 포함 합니다.</xref:System.Web.UI.WebControls.TableCell> 를 사용 하 여는 <xref:System.Web.UI.Control.Controls%2A>의 컬렉션은 <xref:System.Web.UI.WebControls.TableCell>컨트롤에 액세스 하는 개체입니다.</xref:System.Web.UI.WebControls.TableCell> </xref:System.Web.UI.Control.Controls%2A> 사용할 수도 있습니다는 <xref:System.Web.UI.Control.FindControl%2A>의 메서드는 <xref:System.Web.UI.WebControls.TableCell>개체를 컨트롤에 있는 경우 컨트롤을 찾을 <xref:System.Web.UI.Control.ID%2A>지정 된 속성입니다.</xref:System.Web.UI.Control.ID%2A> </xref:System.Web.UI.WebControls.TableCell> </xref:System.Web.UI.Control.FindControl%2A>"
  example:
  - "The following code example demonstrates how to use the EditItemTemplate property to create a custom template for an item in edit mode in a <xref:System.Web.UI.WebControls.TemplateField> field column of a <xref:System.Web.UI.WebControls.GridView> control. The template contains validation server controls to prevent a user from leaving a value field empty.  \n  \n [!code-cs[TemplateFieldEditItemTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_821_1.aspx)]\n [!code-vb[TemplateFieldEditItemTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_821_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate EditItemTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "A <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref>-구현에서 편집 모드의 항목을 표시 하는 것에 대 한 템플릿이 포함 된 개체는 <xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>,이 속성이 설정 되어 있지 않음을 나타냅니다."
  overload: System.Web.UI.WebControls.TemplateField.EditItemTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TemplateField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)
  id: ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)
  parent: System.Web.UI.WebControls.TemplateField
  langs:
  - csharp
  name: ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  nameWithType: TemplateField.ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  fullName: System.Web.UI.WebControls.TemplateField.ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "하나 이상의 양방향 바인딩 문으로 지정 된 추출 데이터 컨트롤의 값 필드 (<xref uid=&quot;langword_csharp_DataBind&quot; name=&quot;DataBind&quot; href=&quot;&quot;></xref>) 현재 표 셀에서 지정 된 값을 추가 하 고 <xref href=&quot;System.Collections.Specialized.IOrderedDictionary&quot;> </xref> 컬렉션입니다."
  remarks: "ExtractValuesFromCell 메서드는 파생 형식에서 구현 <xref:System.Web.UI.WebControls.DataControlField>, <xref:System.Web.UI.WebControls.TemplateField>.</xref:System.Web.UI.WebControls.TemplateField> 같은</xref:System.Web.UI.WebControls.DataControlField> 이 메서드는 서식 파일을 업데이트, 삽입 또는 삭제 작업에 대 한 데이터 원본에 전달 하도록 사전 채우기의 양방향 데이터 바인딩된 필드의 값을 추출 하 합니다. 필드/값 쌍은 메서드에 전달 되는 사전 컬렉션에 저장 됩니다. ExtractValuesFromCell 메서드에 의해 호출 됩니다는 `ExtractRowValues` 등 <xref:System.Web.UI.WebControls.DetailsView> <xref:System.Web.UI.WebControls.GridView>.</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.DetailsView> 데이터 컨트롤의 메서드"
  syntax:
    content: public override void ExtractValuesFromCell (System.Collections.Specialized.IOrderedDictionary dictionary, System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlRowState rowState, bool includeReadOnly);
    parameters:
    - id: dictionary
      type: System.Collections.Specialized.IOrderedDictionary
      description: "An <xref href=&quot;System.Collections.Specialized.IOrderedDictionary&quot;></xref>."
    - id: cell
      type: System.Web.UI.WebControls.DataControlFieldCell
      description: "A <xref href=&quot;System.Web.UI.WebControls.DataControlFieldCell&quot;> </xref> 텍스트 또는 컨트롤을 포함 하는 <xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref>합니다."
    - id: rowState
      type: System.Web.UI.WebControls.DataControlRowState
      description: "중 하나는 <xref href=&quot;System.Web.UI.WebControls.DataControlRowState&quot;> </xref> 값입니다."
    - id: includeReadOnly
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>읽기 전용 필드의 값에 포함 되어 있는지를 나타내는 데는 `dictionary` 컬렉션, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.TemplateField.ExtractValuesFromCell*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TemplateField.FooterTemplate
  id: FooterTemplate
  parent: System.Web.UI.WebControls.TemplateField
  langs:
  - csharp
  name: FooterTemplate
  nameWithType: TemplateField.FooterTemplate
  fullName: System.Web.UI.WebControls.TemplateField.FooterTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "바닥글 섹션을 표시 하기 위한 서식 파일을 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref> 개체입니다."
  remarks: "바닥글 섹션에 표시 되는 사용자 지정 콘텐츠를 지정 하려면 먼저 속성을 사용 하 여 한 <xref:System.Web.UI.WebControls.TemplateField>개체입니다.</xref:System.Web.UI.WebControls.TemplateField> 바닥글 섹션은 렌더링 하는 방법을 지정 하는 템플릿을 만들어 콘텐츠를 정의 합니다.       서식 파일을 지정 하려면 먼저 배치 `<FooterTemplate>` 여는 태그와 닫는 태그 사이 `<TemplateField>` 요소입니다. 다음에 여는 태그와 닫는 사이 있는 사용자 지정 내용을 추가 `<FooterTemplate>` 태그입니다. 콘텐츠는 일반 텍스트 만큼 간단 하거나 복잡 한 (다른 컨트롤을 포함 템플릿의 예를 들어) 될 수 있습니다.       서식 파일에 정의 된 컨트롤에 프로그래밍 방식으로 액세스 하려면 먼저 결정할 <xref:System.Web.UI.WebControls.TableCell>개체 데이터 바인딩된 컨트롤에 컨트롤을 포함 합니다.</xref:System.Web.UI.WebControls.TableCell> 를 사용 하 여는 <xref:System.Web.UI.Control.Controls%2A>의 컬렉션은 <xref:System.Web.UI.WebControls.TableCell>컨트롤에 액세스 하는 개체입니다.</xref:System.Web.UI.WebControls.TableCell> </xref:System.Web.UI.Control.Controls%2A> 사용할 수도 있습니다는 <xref:System.Web.UI.Control.FindControl%2A>의 메서드는 <xref:System.Web.UI.WebControls.TableCell>개체를 컨트롤에 있는 경우 컨트롤을 찾을 <xref:System.Web.UI.Control.ID%2A>지정 된 속성입니다.</xref:System.Web.UI.Control.ID%2A> </xref:System.Web.UI.WebControls.TableCell> </xref:System.Web.UI.Control.FindControl%2A>"
  example:
  - "The following code example demonstrates how to use the FooterTemplate property to create a custom template for the footer section of a <xref:System.Web.UI.WebControls.TemplateField> field column in a <xref:System.Web.UI.WebControls.GridView> control. The template displays the sum of the values in the <xref:System.Web.UI.WebControls.TemplateField> field column.  \n  \n [!code-cs[TemplateFieldFooterTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1286_1.aspx)]\n [!code-vb[TemplateFieldFooterTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1286_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate FooterTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "A <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref>-구현의 바닥글 섹션을 표시 하기 위한 템플릿이 포함 된 개체는 <xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>,이 속성이 설정 되어 있지 않음을 나타냅니다."
  overload: System.Web.UI.WebControls.TemplateField.FooterTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TemplateField.HeaderTemplate
  id: HeaderTemplate
  parent: System.Web.UI.WebControls.TemplateField
  langs:
  - csharp
  name: HeaderTemplate
  nameWithType: TemplateField.HeaderTemplate
  fullName: System.Web.UI.WebControls.TemplateField.HeaderTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "헤더 섹션을 표시 하기 위한 서식 파일을 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref> 개체입니다."
  remarks: "HeaderTemplate 속성을 사용 하 여 헤더 섹션에 대해 표시 되는 사용자 지정 콘텐츠를 지정 하는 <xref:System.Web.UI.WebControls.TemplateField>개체입니다.</xref:System.Web.UI.WebControls.TemplateField> 헤더 섹션을 렌더링 하는 방법을 지정 하는 서식 파일을 만들어 콘텐츠를 정의 합니다.       서식 파일을 지정 하려면 먼저 배치 `<HeaderTemplate>` 여는 태그와 닫는 태그 사이 `<TemplateField>` 요소입니다. 다음에 여는 태그와 닫는 사이 있는 사용자 지정 내용을 추가 `<HeaderTemplate>` 태그입니다. 콘텐츠는 일반 텍스트 만큼 간단 하거나 복잡 한 (다른 컨트롤을 포함 템플릿의 예를 들어) 될 수 있습니다.       서식 파일에 정의 된 컨트롤에 프로그래밍 방식으로 액세스 하려면 먼저 결정할 <xref:System.Web.UI.WebControls.TableCell>개체 데이터 바인딩된 컨트롤에 컨트롤을 포함 합니다.</xref:System.Web.UI.WebControls.TableCell> 를 사용 하 여는 <xref:System.Web.UI.Control.Controls%2A>의 컬렉션은 <xref:System.Web.UI.WebControls.TableCell>컨트롤에 액세스 하는 개체입니다.</xref:System.Web.UI.WebControls.TableCell> </xref:System.Web.UI.Control.Controls%2A> 사용할 수도 있습니다는 <xref:System.Web.UI.Control.FindControl%2A>의 메서드는 <xref:System.Web.UI.WebControls.TableCell>개체를 컨트롤에 있는 경우 컨트롤을 찾을 <xref:System.Web.UI.Control.ID%2A>지정 된 속성입니다.</xref:System.Web.UI.Control.ID%2A> </xref:System.Web.UI.WebControls.TableCell> </xref:System.Web.UI.Control.FindControl%2A>"
  example:
  - "The following code example demonstrates how to use the HeaderTemplate property to create a custom template for the header section of a <xref:System.Web.UI.WebControls.TemplateField> field column in a <xref:System.Web.UI.WebControls.GridView> control. The template displays a check box that allows the user to show or hide the rows of the <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[TemplateFieldHeaderTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1149_1.aspx)]\n [!code-vb[TemplateFieldHeaderTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1149_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate HeaderTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "A <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref>-구현 헤더 섹션을 표시 하기 위한 템플릿이 포함 된 개체는 <xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref> 데이터 바인딩된 컨트롤에 있습니다. 기본값은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>,이 속성이 설정 되어 있지 않음을 나타냅니다."
  overload: System.Web.UI.WebControls.TemplateField.HeaderTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TemplateField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  id: InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  parent: System.Web.UI.WebControls.TemplateField
  langs:
  - csharp
  name: InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  nameWithType: TemplateField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  fullName: System.Web.UI.WebControls.TemplateField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "셀의 controls 컬렉션에 텍스트 또는 컨트롤을 추가합니다."
  remarks: "이 메서드를 사용 하는 사용자 지정 데이터 바인딩된 컨트롤을 만들 때 호출 <xref:System.Web.UI.WebControls.DataControlFieldCell>개체는 테이블 구조 데이터 나 컨트롤의 셀을 초기화 합니다.</xref:System.Web.UI.WebControls.DataControlFieldCell>"
  syntax:
    content: public override void InitializeCell (System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlCellType cellType, System.Web.UI.WebControls.DataControlRowState rowState, int rowIndex);
    parameters:
    - id: cell
      type: System.Web.UI.WebControls.DataControlFieldCell
      description: "A <xref href=&quot;System.Web.UI.WebControls.DataControlFieldCell&quot;> </xref> 텍스트 또는 컨트롤을 포함 하는 <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref>합니다."
    - id: cellType
      type: System.Web.UI.WebControls.DataControlCellType
      description: "중 하나는 <xref href=&quot;System.Web.UI.WebControls.DataControlCellType&quot;> </xref> 값입니다."
    - id: rowState
      type: System.Web.UI.WebControls.DataControlRowState
      description: "중 하나는 <xref href=&quot;System.Web.UI.WebControls.DataControlRowState&quot;> </xref> 값을 포함 하는 행의 상태를 지정 하는 <xref href=&quot;System.Web.UI.WebControls.DataControlFieldCell&quot;> </xref>합니다."
    - id: rowIndex
      type: System.Int32
      description: "행의 인덱스는는 <xref href=&quot;System.Web.UI.WebControls.DataControlFieldCell&quot;> </xref> 에 포함 되어 있습니다."
  overload: System.Web.UI.WebControls.TemplateField.InitializeCell*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TemplateField.InsertItemTemplate
  id: InsertItemTemplate
  parent: System.Web.UI.WebControls.TemplateField
  langs:
  - csharp
  name: InsertItemTemplate
  nameWithType: TemplateField.InsertItemTemplate
  fullName: System.Web.UI.WebControls.TemplateField.InsertItemTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "삽입 모드에서 항목을 표시 하기 위해 서식 파일을 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref> 개체입니다."
  remarks: "InsertItemTemplate 속성을 사용 하 여 항목의 삽입 모드에 대해 표시 되는 사용자 지정 콘텐츠를 지정 하는 <xref:System.Web.UI.WebControls.TemplateField>개체입니다.</xref:System.Web.UI.WebControls.TemplateField> 삽입 모드에서 항목을 렌더링 하는 방법을 지정 하는 서식 파일을 만들어 콘텐츠를 정의 합니다.       서식 파일을 지정 하려면 먼저 배치 `<InsertItemTemplate>` 여는 태그와 닫는 태그 사이 `<TemplateField>` 요소입니다. 다음에 여는 태그와 닫는 사이 있는 사용자 지정 내용을 추가 `<InsertItemTemplate>` 태그입니다. 콘텐츠는 일반 텍스트 만큼 간단 하거나 복잡 한 (다른 컨트롤을 포함 템플릿의 예를 들어) 될 수 있습니다.       서식 파일에 정의 된 컨트롤에 프로그래밍 방식으로 액세스 하려면 먼저 결정할 <xref:System.Web.UI.WebControls.TableCell>개체 데이터 바인딩된 컨트롤에 컨트롤을 포함 합니다.</xref:System.Web.UI.WebControls.TableCell> 를 사용 하 여는 <xref:System.Web.UI.Control.Controls%2A>의 컬렉션은 <xref:System.Web.UI.WebControls.TableCell>컨트롤에 액세스 하는 개체입니다.</xref:System.Web.UI.WebControls.TableCell> </xref:System.Web.UI.Control.Controls%2A> 사용할 수도 있습니다는 <xref:System.Web.UI.Control.FindControl%2A>의 메서드는 <xref:System.Web.UI.WebControls.TableCell>개체를 컨트롤에 있는 경우 컨트롤을 찾을 <xref:System.Web.UI.Control.ID%2A>지정 된 속성입니다.</xref:System.Web.UI.Control.ID%2A> </xref:System.Web.UI.WebControls.TableCell> </xref:System.Web.UI.Control.FindControl%2A>      > [!NOTE] >이 템플릿은와 같은 레코드를 삽입할 수 있도록 하는 데이터 바인딩된 컨트롤 에서만 지원 되며이 서식 파일을 지원 하지 않는 데이터 바인딩된 컨트롤도 <xref:System.Web.UI.WebControls.DetailsView>컨트롤.</xref:System.Web.UI.WebControls.DetailsView>"
  example:
  - "The following code example demonstrates how to use the InsertItemTemplate property to create a custom template for an item in insert mode in a <xref:System.Web.UI.WebControls.TemplateField> field row in a <xref:System.Web.UI.WebControls.DetailsView> control. The template displays a <xref:System.Web.UI.WebControls.DropDownList> control that allows the user to select a value from a predefined list.  \n  \n [!code-vb[TemplateFieldInsertItemTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_855_1.aspx)]\n [!code-cs[TemplateFieldInsertItemTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_855_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate InsertItemTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "A <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref>-구현에서 삽입 모드의 항목을 표시 하는 것에 대 한 템플릿이 포함 된 개체는 <xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>,이 속성이 설정 되어 있지 않음을 나타냅니다."
  overload: System.Web.UI.WebControls.TemplateField.InsertItemTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TemplateField.ItemTemplate
  id: ItemTemplate
  parent: System.Web.UI.WebControls.TemplateField
  langs:
  - csharp
  name: ItemTemplate
  nameWithType: TemplateField.ItemTemplate
  fullName: System.Web.UI.WebControls.TemplateField.ItemTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "데이터 바인딩된 컨트롤에서 항목을 표시 하기 위한 서식 파일을 가져오거나 설정 합니다."
  remarks: "ItemTemplate 속성을 사용 하 여 항목에 대해 표시 되는 사용자 지정 콘텐츠를 지정 하는 <xref:System.Web.UI.WebControls.TemplateField>개체입니다.</xref:System.Web.UI.WebControls.TemplateField> 콘텐츠 항목이 렌더링 되는 방식을 지정 하는 템플릿을 만들어 정의 합니다.      > [!NOTE] > 필요에 따라 정의할 수 있습니다는 <xref:System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate%2A>속성 조합 하 여 데이터 바인딩된 컨트롤에 다른 모든 항목에 대해 서로 다른 모양을 만들 ItemTemplate 속성으로.</xref:System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate%2A>       서식 파일을 지정 하려면 먼저 배치 `<ItemTemplate>` 여는 태그와 닫는 태그 사이 `<TemplateField>` 요소입니다. 다음에 여는 태그와 닫는 사이 있는 사용자 지정 내용을 추가 `<ItemTemplate>` 태그입니다. 콘텐츠는 일반 텍스트 만큼 간단 하거나 복잡 한 (다른 컨트롤을 포함 템플릿의 예를 들어) 될 수 있습니다.       서식 파일에 정의 된 컨트롤에 프로그래밍 방식으로 액세스 하려면 먼저 결정할 <xref:System.Web.UI.WebControls.TableCell>개체 데이터 바인딩된 컨트롤에 컨트롤을 포함 합니다.</xref:System.Web.UI.WebControls.TableCell> 를 사용 하 여는 <xref:System.Web.UI.Control.Controls%2A>의 컬렉션은 <xref:System.Web.UI.WebControls.TableCell>컨트롤에 액세스 하는 개체입니다.</xref:System.Web.UI.WebControls.TableCell> </xref:System.Web.UI.Control.Controls%2A> 사용할 수도 있습니다는 <xref:System.Web.UI.Control.FindControl%2A>의 메서드는 <xref:System.Web.UI.WebControls.TableCell>개체를 컨트롤에 있는 경우 컨트롤을 찾을 <xref:System.Web.UI.Control.ID%2A>지정 된 속성입니다.</xref:System.Web.UI.Control.ID%2A> </xref:System.Web.UI.WebControls.TableCell> </xref:System.Web.UI.Control.FindControl%2A>"
  example:
  - "The following code example demonstrates how to use the ItemTemplate property to create a custom template for the items of a <xref:System.Web.UI.WebControls.TemplateField> field in a <xref:System.Web.UI.WebControls.GridView> control. The template displays the field's value in a <xref:System.Web.UI.WebControls.RadioButtonList> control.  \n  \n [!code-cs[TemplateFieldItemTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_239_1.aspx)]\n [!code-vb[TemplateFieldItemTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_239_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate ItemTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "A <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref>-구현에서 항목을 표시 하는 것에 대 한 템플릿이 포함 된 개체는 <xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>,이 속성이 설정 되어 있지 않음을 나타냅니다."
  overload: System.Web.UI.WebControls.TemplateField.ItemTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TemplateField.ValidateRequestMode
  id: ValidateRequestMode
  parent: System.Web.UI.WebControls.TemplateField
  langs:
  - csharp
  name: ValidateRequestMode
  nameWithType: TemplateField.ValidateRequestMode
  fullName: System.Web.UI.WebControls.TemplateField.ValidateRequestMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "컨트롤에서 클라이언트 입력의 유효성을 검사 하는지 여부를 지정 하는 값을 가져오거나 설정 합니다."
  syntax:
    content: public System.Web.UI.ValidateRequestMode ValidateRequestMode { get; set; }
    return:
      type: System.Web.UI.ValidateRequestMode
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>컨트롤 클라이언트 입력의 유효성을 검사 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.TemplateField.ValidateRequestMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TemplateField.ValidateSupportsCallback
  id: ValidateSupportsCallback
  parent: System.Web.UI.WebControls.TemplateField
  langs:
  - csharp
  name: ValidateSupportsCallback()
  nameWithType: TemplateField.ValidateSupportsCallback()
  fullName: System.Web.UI.WebControls.TemplateField.ValidateSupportsCallback()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "컨트롤에 포함 되는지 확인 한 <xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref> 콜백이 지원 페이지 개체입니다."
  remarks: "ValidateSupportsCallback 메서드가이 클래스와 항상 throw에 대 한 지원 되지 않습니다는 <xref:System.NotSupportedException>예외.</xref:System.NotSupportedException>"
  syntax:
    content: public override void ValidateSupportsCallback ();
    parameters: []
  overload: System.Web.UI.WebControls.TemplateField.ValidateSupportsCallback*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "이 메서드의 기본 구현을 호출 됩니다."
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: System.Web.UI.WebControls.DataControlField
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Web.UI.WebControls.TemplateField.#ctor
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: TemplateField()
  nameWithType: TemplateField.TemplateField()
  fullName: System.Web.UI.WebControls.TemplateField.TemplateField()
- uid: System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: AlternatingItemTemplate
  nameWithType: TemplateField.AlternatingItemTemplate
  fullName: System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate
- uid: System.Web.UI.ITemplate
  parent: System.Web.UI
  isExternal: false
  name: ITemplate
  nameWithType: ITemplate
  fullName: System.Web.UI.ITemplate
- uid: System.Web.UI.WebControls.TemplateField.ConvertEmptyStringToNull
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: ConvertEmptyStringToNull
  nameWithType: TemplateField.ConvertEmptyStringToNull
  fullName: System.Web.UI.WebControls.TemplateField.ConvertEmptyStringToNull
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.TemplateField.CopyProperties(System.Web.UI.WebControls.DataControlField)
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: CopyProperties(DataControlField)
  nameWithType: TemplateField.CopyProperties(DataControlField)
  fullName: System.Web.UI.WebControls.TemplateField.CopyProperties(DataControlField)
- uid: System.Web.UI.WebControls.TemplateField.CreateField
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: CreateField()
  nameWithType: TemplateField.CreateField()
  fullName: System.Web.UI.WebControls.TemplateField.CreateField()
- uid: System.Web.UI.WebControls.TemplateField.EditItemTemplate
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: EditItemTemplate
  nameWithType: TemplateField.EditItemTemplate
  fullName: System.Web.UI.WebControls.TemplateField.EditItemTemplate
- uid: System.Web.UI.WebControls.TemplateField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  nameWithType: TemplateField.ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  fullName: System.Web.UI.WebControls.TemplateField.ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
- uid: System.Collections.Specialized.IOrderedDictionary
  parent: System.Collections.Specialized
  isExternal: false
  name: IOrderedDictionary
  nameWithType: IOrderedDictionary
  fullName: System.Collections.Specialized.IOrderedDictionary
- uid: System.Web.UI.WebControls.DataControlFieldCell
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlFieldCell
  nameWithType: DataControlFieldCell
  fullName: System.Web.UI.WebControls.DataControlFieldCell
- uid: System.Web.UI.WebControls.DataControlRowState
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlRowState
  nameWithType: DataControlRowState
  fullName: System.Web.UI.WebControls.DataControlRowState
- uid: System.Web.UI.WebControls.TemplateField.FooterTemplate
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: FooterTemplate
  nameWithType: TemplateField.FooterTemplate
  fullName: System.Web.UI.WebControls.TemplateField.FooterTemplate
- uid: System.Web.UI.WebControls.TemplateField.HeaderTemplate
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: HeaderTemplate
  nameWithType: TemplateField.HeaderTemplate
  fullName: System.Web.UI.WebControls.TemplateField.HeaderTemplate
- uid: System.Web.UI.WebControls.TemplateField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  nameWithType: TemplateField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  fullName: System.Web.UI.WebControls.TemplateField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
- uid: System.Web.UI.WebControls.DataControlCellType
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlCellType
  nameWithType: DataControlCellType
  fullName: System.Web.UI.WebControls.DataControlCellType
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.TemplateField.InsertItemTemplate
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: InsertItemTemplate
  nameWithType: TemplateField.InsertItemTemplate
  fullName: System.Web.UI.WebControls.TemplateField.InsertItemTemplate
- uid: System.Web.UI.WebControls.TemplateField.ItemTemplate
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: ItemTemplate
  nameWithType: TemplateField.ItemTemplate
  fullName: System.Web.UI.WebControls.TemplateField.ItemTemplate
- uid: System.Web.UI.WebControls.TemplateField.ValidateRequestMode
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: ValidateRequestMode
  nameWithType: TemplateField.ValidateRequestMode
  fullName: System.Web.UI.WebControls.TemplateField.ValidateRequestMode
- uid: System.Web.UI.ValidateRequestMode
  parent: System.Web.UI
  isExternal: false
  name: ValidateRequestMode
  nameWithType: ValidateRequestMode
  fullName: System.Web.UI.ValidateRequestMode
- uid: System.Web.UI.WebControls.TemplateField.ValidateSupportsCallback
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: ValidateSupportsCallback()
  nameWithType: TemplateField.ValidateSupportsCallback()
  fullName: System.Web.UI.WebControls.TemplateField.ValidateSupportsCallback()
- uid: System.Web.UI.WebControls.TemplateField.#ctor*
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: TemplateField
  nameWithType: TemplateField.TemplateField
- uid: System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate*
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: AlternatingItemTemplate
  nameWithType: TemplateField.AlternatingItemTemplate
- uid: System.Web.UI.WebControls.TemplateField.ConvertEmptyStringToNull*
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: ConvertEmptyStringToNull
  nameWithType: TemplateField.ConvertEmptyStringToNull
- uid: System.Web.UI.WebControls.TemplateField.CopyProperties*
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: CopyProperties
  nameWithType: TemplateField.CopyProperties
- uid: System.Web.UI.WebControls.TemplateField.CreateField*
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: CreateField
  nameWithType: TemplateField.CreateField
- uid: System.Web.UI.WebControls.TemplateField.EditItemTemplate*
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: EditItemTemplate
  nameWithType: TemplateField.EditItemTemplate
- uid: System.Web.UI.WebControls.TemplateField.ExtractValuesFromCell*
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: ExtractValuesFromCell
  nameWithType: TemplateField.ExtractValuesFromCell
- uid: System.Web.UI.WebControls.TemplateField.FooterTemplate*
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: FooterTemplate
  nameWithType: TemplateField.FooterTemplate
- uid: System.Web.UI.WebControls.TemplateField.HeaderTemplate*
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: HeaderTemplate
  nameWithType: TemplateField.HeaderTemplate
- uid: System.Web.UI.WebControls.TemplateField.InitializeCell*
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: InitializeCell
  nameWithType: TemplateField.InitializeCell
- uid: System.Web.UI.WebControls.TemplateField.InsertItemTemplate*
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: InsertItemTemplate
  nameWithType: TemplateField.InsertItemTemplate
- uid: System.Web.UI.WebControls.TemplateField.ItemTemplate*
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: ItemTemplate
  nameWithType: TemplateField.ItemTemplate
- uid: System.Web.UI.WebControls.TemplateField.ValidateRequestMode*
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: ValidateRequestMode
  nameWithType: TemplateField.ValidateRequestMode
- uid: System.Web.UI.WebControls.TemplateField.ValidateSupportsCallback*
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: ValidateSupportsCallback
  nameWithType: TemplateField.ValidateSupportsCallback
