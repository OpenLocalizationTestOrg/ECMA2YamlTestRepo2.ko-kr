### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.Financial
  id: Financial
  children:
  - Microsoft.VisualBasic.Financial.DDB(System.Double,System.Double,System.Double,System.Double,System.Double)
  - Microsoft.VisualBasic.Financial.FV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  - Microsoft.VisualBasic.Financial.IPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  - Microsoft.VisualBasic.Financial.IRR(System.Double[]@,System.Double)
  - Microsoft.VisualBasic.Financial.MIRR(System.Double[]@,System.Double,System.Double)
  - Microsoft.VisualBasic.Financial.NPer(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  - Microsoft.VisualBasic.Financial.NPV(System.Double,System.Double[]@)
  - Microsoft.VisualBasic.Financial.Pmt(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  - Microsoft.VisualBasic.Financial.PPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  - Microsoft.VisualBasic.Financial.PV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  - Microsoft.VisualBasic.Financial.Rate(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate,System.Double)
  - Microsoft.VisualBasic.Financial.SLN(System.Double,System.Double,System.Double)
  - Microsoft.VisualBasic.Financial.SYD(System.Double,System.Double,System.Double,System.Double)
  langs:
  - csharp
  name: Financial
  nameWithType: Financial
  fullName: Microsoft.VisualBasic.Financial
  type: Class
  summary: "<xref uid=&quot;langword_csharp_Financial&quot; name=&quot;Financial&quot; href=&quot;&quot;> </xref> 모듈 관련 작업을 수행 하는 데 사용 되는 프로시저가 포함 되어 있습니다."
  remarks: "이 모듈은 감가, 현재 및 미래 가치, 지 및 지불 하는 비율이 등의 금융 계산을 수행 하는 Visual Basic 런타임 라이브러리 멤버를 지원 합니다."
  example:
  - "This example uses the `Rate` function to calculate the interest rate of a loan, given the total number of payments (`TotPmts`), the amount of the loan payment (`Payment`), the present value or principal of the loan (`PVal`), the future value of the loan (`FVal`), a number that indicates whether the payment is due at the beginning or end of the payment period (`PayType`), and an approximation of the expected interest rate (`Guess`).  \n  \n [!code-vb[VbVbalrMath#2](~/add/codesnippet/visualbasic/t-microsoft.visualbasic._25_1.vb)]"
  syntax:
    content: >-
      [Microsoft.VisualBasic.CompilerServices.StandardModule]

      public sealed class Financial
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Financial.DDB(System.Double,System.Double,System.Double,System.Double,System.Double)
  id: DDB(System.Double,System.Double,System.Double,System.Double,System.Double)
  parent: Microsoft.VisualBasic.Financial
  langs:
  - csharp
  name: DDB(Double,Double,Double,Double,Double)
  nameWithType: Financial.DDB(Double,Double,Double,Double,Double)
  fullName: Microsoft.VisualBasic.Financial.DDB(Double,Double,Double,Double,Double)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "반환 된 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> 이중 체감 잔액 법 또는 다른 방법을 사용 하 여 특정 기간에 대 한 자산의 감가상각을 지정 합니다."
  remarks: "이중 체감 잔액 법 빠른 속도로 감가상각을 계산합니다. 감가 비율이 첫 번째 기간 가장 하 고 기간에서 감소 합니다.       `Life` 및 `Period` 인수는 같은 단위로 표현 되어야 합니다. 예를 들어 경우 `Life` 월에 `Period` 개월도 지정 해야 합니다. 모든 인수는 양수 여야 합니다.       `DDB` 함수는 지정 된 기간에 대 한 감가상각비를 계산 하는 다음 수식을 사용: 감가 / &quot;를 &quot; ((Cost – Salvage) * 비율) / 수명"
  example:
  - "This example uses the `DDB` function to return the depreciation of an asset for a specified period given the initial cost (`InitCost`), the salvage value at the end of the asset's useful life (`SalvageVal`), the total life of the asset in years (`LifeTime`), and the period in years for which the depreciation is calculated (`Depr`).  \n  \n [!code-vb[VbVbalrMath#3](~/add/codesnippet/visualbasic/0a9b2d8a-2f04-4c59-80da-_1.vb)]"
  syntax:
    content: public static double DDB (double Cost, double Salvage, double Life, double Period, double Factor = 2);
    parameters:
    - id: Cost
      type: System.Double
      description: "필수 사항입니다. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>초기 자산 비용을 지정 합니다."
    - id: Salvage
      type: System.Double
      description: "필수 사항입니다. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>내용 연수 종료 시점의 자산 값을 지정 합니다."
    - id: Life
      type: System.Double
      description: "필수 사항입니다. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>자산의 내용 연수 길이 지정 합니다."
    - id: Period
      type: System.Double
      description: "필수 사항입니다. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>자산의 감가상각이 계산 기간을 지정 합니다."
    - id: Factor
      type: System.Double
      description: "선택 사항입니다. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>가액을 지정 합니다. 생략 하면 2 (이중 체감 잔액 법)가 사용 됩니다."
    return:
      type: System.Double
      description: "반환 된 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> 이중 체감 잔액 법 또는 다른 방법을 사용 하 여 특정 기간에 대 한 자산의 감가상각을 지정 합니다."
  overload: Microsoft.VisualBasic.Financial.DDB*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Factor</code>&lt;= 0, <code>Salvage</code> &lt; 0, <code>Period</code> &lt;= 0, or <code>Period</code> &gt;<code>Life.</code>"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Financial.FV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  id: FV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  parent: Microsoft.VisualBasic.Financial
  langs:
  - csharp
  name: FV(Double,Double,Double,Double,DueDate)
  nameWithType: Financial.FV(Double,Double,Double,Double,DueDate)
  fullName: Microsoft.VisualBasic.Financial.FV(Double,Double,Double,Double,DueDate)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "반환 된 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> 정기 고정된 지급액 및 고정된 금리를 기반으로 연금의 미래 가치를 지정 합니다."
  remarks: "연금은 일련의 시간이 지남에 따라 정기적으로 고정된 금액을 지불 합니다. 연금 대출 (예: 홈 담보 대출) 또는 (예: 월간 저축 계획) 투자 수 있습니다.       `Rate` 및 `NPer` 인수는 같은 단위로 지불 기간을 사용 하 여 계산 해야 합니다. 예를 들어 경우 `Rate` 월 단위로 계산 `NPer` 도 월 단위로 계산 합니다.       모든 인수에 대 한 현금 (예: 절약 예치금) 지급 나타내는 음수; (예: 피제수 검사) 받은 양수도 표시 됩니다."
  example:
  - "This example uses the `FV` function to return the future value of an investment given the percentage rate that accrues per period (`APR / 12`), the total number of payments (`TotPmts`), the payment (`Payment`), the current value of the investment (`PVal`), and a number that indicates whether the payment is made at the beginning or end of the payment period (`PayType`). Note that because `Payment` represents cash paid out, it is a negative number.  \n  \n [!code-vb[VbVbalrMath#22](~/add/codesnippet/visualbasic/0c46fa91-bd2b-4dd0-a9f3-_1.vb)]"
  syntax:
    content: public static double FV (double Rate, double NPer, double Pmt, double PV = 0, Microsoft.VisualBasic.DueDate Due = Microsoft.VisualBasic.DueDate.EndOfPeriod);
    parameters:
    - id: Rate
      type: System.Double
      description: "필수 사항입니다. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>기간당 이자율을 지정 합니다. 예를 들어 매월 갚로 10%의 연간 이자율 (APR) 자동차 대 부를 받아 이자율은 0.1/12, 즉 0.0083입니다."
    - id: NPer
      type: System.Double
      description: "필수 사항입니다. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>연금의 총 지불 기간 수를 지정합니다. 예를 들어 4 년간 자동차 대 부 매월 갚 아 대출에 총 상환 기간은 4 x 12, 즉 48입니다."
    - id: Pmt
      type: System.Double
      description: "필수 사항입니다. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>지불액 기간당을 지정 합니다. 지불액에는 일반적으로 일정 기간 동안 변경 되지 않는 원금과 포함 됩니다."
    - id: PV
      type: System.Double
      description: "선택 사항입니다. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>현재 가치 또는 총액을 일련의 미래 지불액을 지정합니다. 예를 들어, 자동차를 사기 위해 돈을 빌릴 경우 총 차입 금액은 매월 자동차 대금을 만드는를 생략 하면&0; 현재 값입니다. 생략 하는 경우 0 이라고 가정 합니다."
    - id: Due
      type: Microsoft.VisualBasic.DueDate
      description: "선택 사항입니다. 형식의 개체 <xref href=&quot;Microsoft.VisualBasic.DueDate&quot;> </xref> 지불 하는 시점을 지정 하는 합니다. 이 인수 중 하나 여야 합니다 <xref uid=&quot;langword_csharp_DueDate.EndOfPeriod&quot; name=&quot;DueDate.EndOfPeriod&quot; href=&quot;&quot;> </xref> 지불 기간의 끝에 있는 경우 또는 <xref uid=&quot;langword_csharp_DueDate.BegOfPeriod&quot; name=&quot;DueDate.BegOfPeriod&quot; href=&quot;&quot;> </xref> 되어야 하면 기간의 시작 부분에 있습니다. 생략 하면 <xref uid=&quot;langword_csharp_DueDate.EndOfPeriod&quot; name=&quot;DueDate.EndOfPeriod&quot; href=&quot;&quot;> </xref> 것으로 간주 됩니다."
    return:
      type: System.Double
      description: "반환 된 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> 정기 고정된 지급액 및 고정된 금리를 기반으로 연금의 미래 가치를 지정 합니다."
  overload: Microsoft.VisualBasic.Financial.FV*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Financial.IPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  id: IPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  parent: Microsoft.VisualBasic.Financial
  langs:
  - csharp
  name: IPmt(Double,Double,Double,Double,Double,DueDate)
  nameWithType: Financial.IPmt(Double,Double,Double,Double,Double,DueDate)
  fullName: Microsoft.VisualBasic.Financial.IPmt(Double,Double,Double,Double,Double,DueDate)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "반환 된 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> 일정 기간의 연금에 대 한 이자 지불액 정기 고정된 지급액 및 고정된 금리를 기반 합니다."
  remarks: "연금은 일련의 시간이 지남에 따라 정기적으로 고정된 금액을 지불 합니다. 연금 대출 (예: 홈 담보 대출) 또는 (예: 월간 저축 계획) 투자 수 있습니다.       `Rate` 및 `NPer` 인수는 같은 단위로 지불 기간을 사용 하 여 계산 해야 합니다. 예를 들어 경우 `Rate` 월 단위로 계산 `NPer` 도 월 단위로 계산 합니다.       모든 인수에 대 한 현금 (예: 절약 예치금) 지급 나타내는 음수; (예: 피제수 검사) 받은 양수도 표시 됩니다."
  example:
  - "This example uses the `IPmt` function to calculate how much of a payment is interest when all the payments are of equal value. Given are the interest percentage rate per period (`APR / 12`), the payment period for which the interest portion is desired (`Period`), the total number of payments (`TotPmts`), the present value or principal of the loan (`PVal`), the future value of the loan (`FVal`), and a number that indicates whether the payment is due at the beginning or end of the payment period (`PayType`).  \n  \n [!code-vb[VbVbalrMath#26](~/add/codesnippet/visualbasic/2fa7f248-74e0-4498-aee1-_1.vb)]"
  syntax:
    content: public static double IPmt (double Rate, double Per, double NPer, double PV, double FV = 0, Microsoft.VisualBasic.DueDate Due = Microsoft.VisualBasic.DueDate.EndOfPeriod);
    parameters:
    - id: Rate
      type: System.Double
      description: "필수 사항입니다. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>기간당 이자율을 지정 합니다. 예를 들어 매월 갚로 10%의 연간 이자율 (APR) 자동차 대 부를 받아 이자율은 0.1/12, 즉 0.0083입니다."
    - id: Per
      type: System.Double
      description: "필수 사항입니다. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>-%1 범위에 지불 기간을 지정 하 여 `NPer`합니다."
    - id: NPer
      type: System.Double
      description: "필수 사항입니다. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>연금의 총 지불 기간 수를 지정합니다. 예를 들어 4 년간 자동차 대 부 매월 갚 아 대출에 총 상환 기간은 4 x 12, 즉 48입니다."
    - id: PV
      type: System.Double
      description: "필수 사항입니다. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>지정 하는 값을 또는 금일 값, 일련의 미래 지불액 또는 수령액 합니다. 예를 들어, 자동차를 사기 위해 돈을 빌릴 경우 총 차입 금액은 매월 자동차 대금을 만드는를 생략 하면&0; 현재 값입니다."
    - id: FV
      type: System.Double
      description: "선택 사항입니다. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>미래 값 또는 최종 지불을 완료 한 후 원하는 현금 잔액을 지정 합니다. 예를 들어, 최종 지불 후 해당 값 이기 때문에 대출의 미래 값은 $0입니다. 그러나 자녀의 교육을 위해 18 년간 $ 50, 000를 저장 하려는 경우 $ 50, 000가 미래 값이 있습니다. 생략 하는 경우 0 이라고 가정 합니다."
    - id: Due
      type: Microsoft.VisualBasic.DueDate
      description: "선택 사항입니다. 형식의 개체 <xref href=&quot;Microsoft.VisualBasic.DueDate&quot;> </xref> 지불 하는 시점을 지정 하는 합니다. 이 인수 중 하나 여야 합니다 `DueDate.EndOfPeriod` 지불 기간의 끝에 있는 경우 또는 `DueDate.BegOfPeriod` 기간의 시작 부분에 있는 경우. 생략 하면 `DueDate.EndOfPeriod` 것으로 간주 됩니다."
    return:
      type: System.Double
      description: "반환 된 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> 일정 기간의 연금에 대 한 이자 지불액 정기 고정된 지급액 및 고정된 금리를 기반 합니다."
  overload: Microsoft.VisualBasic.Financial.IPmt*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Per</code>&lt;= 0 or <code>Per</code> &gt;<code>NPer</code>"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Financial.IRR(System.Double[]@,System.Double)
  id: IRR(System.Double[]@,System.Double)
  parent: Microsoft.VisualBasic.Financial
  langs:
  - csharp
  name: IRR(Double[],Double)
  nameWithType: Financial.IRR(Double[],Double)
  fullName: Microsoft.VisualBasic.Financial.IRR(Double[],Double)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "반환 된 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> 일련의 주기적인 현금 흐름 (지급액 및 수령액)에 대 한 내부 수익률을 지정 합니다."
  remarks: "내부 수익률은 이자 지급액 및 수령액 정기적으로 발생 하는 구성 된 투자에 대 한 수신입니다.       `IRR` 함수는 배열에 있는 값의 순서를 사용 하 여 지급액 및 수령액의 순서를 해석 합니다. 올바른 순서로 지불 및 수신 확인 값을 입력 해야 합니다. 각 기간에 대 한 현금 흐름으로 연금에 대 한 이므로 수정 해야 하 필요가 없습니다.       `IRR`반복적으로 계산 됩니다. 값의 시작 `Guess`, `IRR` 내 때까지 결과를 0.00001% 계산 합니다. 경우 `IRR` 20 후 결과 실패를 찾을 수 없습니다."
  example:
  - "In this example, the `IRR` function returns the internal rate of return for a series of five cash flows contained in the array `Values()`. The first array element is a negative cash flow representing business start-up costs. The remaining four cash flows represent positive cash flows for the subsequent four years. `Guess` is the estimated internal rate of return.  \n  \n [!code-vb[VbVbalrMath#20](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._228_1.vb)]"
  syntax:
    content: public static double IRR (ref double[] ValueArray, double Guess = 0.1);
    parameters:
    - id: ValueArray
      type: System.Double[]
      description: "필수 사항입니다. 배열 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> 현금 흐름 값을 지정 합니다. 배열의 하나 이상의 음수 값 (지불)과 하나 이상의 양수 값 (확인)를 포함 해야 합니다."
    - id: Guess
      type: System.Double
      description: "선택 사항입니다. 반환할 추정 값을 지정 하는 개체 <xref uid=&quot;langword_csharp_IRR&quot; name=&quot;IRR&quot; href=&quot;&quot;> </xref>합니다. 생략 하면 `Guess` 는 0.1 (10%)."
    return:
      type: System.Double
      description: "반환 된 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> 일련의 주기적인 현금 흐름 (지급액 및 수령액)에 대 한 내부 수익률을 지정 합니다."
  overload: Microsoft.VisualBasic.Financial.IRR*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "배열 인수 값이 잘못 또는 <code> Guess </code> &lt;=-1입니다."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Financial.MIRR(System.Double[]@,System.Double,System.Double)
  id: MIRR(System.Double[]@,System.Double,System.Double)
  parent: Microsoft.VisualBasic.Financial
  langs:
  - csharp
  name: MIRR(Double[],Double,Double)
  nameWithType: Financial.MIRR(Double[],Double,Double)
  fullName: Microsoft.VisualBasic.Financial.MIRR(Double[],Double,Double)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "반환 된 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> 일련의 주기적인 현금 흐름 (지급액 및 수령액)에 대 한 수정 된 내부 수익률을 지정 합니다."
  remarks: "수정 된 내부 수익률의 내부 수익률 있으면 지급액 및 수령액 서로 다른 속도로 충당 됩니다. `MIRR` 함수는 고려 투자 비용 (`FinanceRate`) 및 현금 재투자 금리 (`ReinvestRate`).       `FinanceRate` 및 `ReinvestRatearguments` 백분율&10; 진수 값으로 표시 합니다. 예를 들어 12 %0.12로 표시 됩니다.       `MIRR` 함수는 배열에 있는 값의 순서를 사용 하 여 지급액 및 수령액의 순서를 해석 합니다. 올바른 순서로 지불 및 수신 확인 값을 입력 해야 합니다."
  example:
  - "This example uses the `MIRR` function to return the modified internal rate of return for a series of cash flows contained in the array `Values()`. `LoanAPR` represents the financing interest, and `InvAPR` represents the interest rate received on reinvestment.  \n  \n [!code-vb[VbVbalrMath#29](~/add/codesnippet/visualbasic/ba568dc0-432d-4a7b-b1d0-_1.vb)]"
  syntax:
    content: public static double MIRR (ref double[] ValueArray, double FinanceRate, double ReinvestRate);
    parameters:
    - id: ValueArray
      type: System.Double[]
      description: "필수 사항입니다. 배열 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> 현금 흐름 값을 지정 합니다. 배열의 하나 이상의 음수 값 (지불)과 하나 이상의 양수 값 (확인)를 포함 해야 합니다."
    - id: FinanceRate
      type: System.Double
      description: "필수 사항입니다. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>출자 비용으로 지불 될 이자율을 지정 합니다."
    - id: ReinvestRate
      type: System.Double
      description: "필수 사항입니다. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>현금 재투자 수익에서 받는 이자율을 지정 합니다."
    return:
      type: System.Double
      description: "반환 된 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> 일련의 주기적인 현금 흐름 (지급액 및 수령액)에 대 한 수정 된 내부 수익률을 지정 합니다."
  overload: Microsoft.VisualBasic.Financial.MIRR*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Rank of <code>ValueArray</code> does not equal 1, <code>FinanceRate</code> = -1, or <code>ReinvestRate</code> = -1"
  - type: System.DivideByZeroException
    commentId: T:System.DivideByZeroException
    description: "0으로 나누기가 발생 했습니다."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Financial.NPer(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  id: NPer(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  parent: Microsoft.VisualBasic.Financial
  langs:
  - csharp
  name: NPer(Double,Double,Double,Double,DueDate)
  nameWithType: Financial.NPer(Double,Double,Double,Double,DueDate)
  fullName: Microsoft.VisualBasic.Financial.NPer(Double,Double,Double,Double,DueDate)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "반환 된 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> 정기 고정된 지급액 및 고정된 금리를 기반으로 연금의 기간 수를 지정 합니다."
  remarks: "연금은 일련의 시간 동안 정기적으로 고정된 금액을 지불 합니다. 연금 대출 (예: 홈 담보 대출) 또는 (예: 월간 저축 계획) 투자 수 있습니다.       모든 인수에 대 한 현금 (예: 절약 예치금) 지급 나타내는 음수; (예: 피제수 검사) 받은 양수도 표시 됩니다."
  example:
  - "This example uses the `NPer` function to return the number of periods during which payments must be made to pay off a loan whose value is contained in `PVal`. Also provided are the interest percentage rate per period (`APR / 12`), the payment (`Payment`), the future value of the loan (`FVal`), and a number that indicates whether the payment is due at the beginning or end of the payment period (`PayType`).  \n  \n [!code-vb[VbVbalrMath#19](~/add/codesnippet/visualbasic/57cf6dfc-5811-4703-a937-_1.vb)]"
  syntax:
    content: public static double NPer (double Rate, double Pmt, double PV, double FV = 0, Microsoft.VisualBasic.DueDate Due = Microsoft.VisualBasic.DueDate.EndOfPeriod);
    parameters:
    - id: Rate
      type: System.Double
      description: "필수 사항입니다. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>기간당 이자율을 지정 합니다. 예를 들어 매월 갚로 10%의 연간 이자율 (APR) 자동차 대 부를 받아 이자율은 0.1/12, 즉 0.0083입니다."
    - id: Pmt
      type: System.Double
      description: "필수 사항입니다. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>지불액 기간당을 지정 합니다. 지불액에는 일반적으로 일정 기간 동안 변경 되지 않는 않는 원금과 포함 됩니다."
    - id: PV
      type: System.Double
      description: "필수 사항입니다. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>지정 하는 값을 또는 금일 값, 일련의 미래 지불액 또는 수령액 합니다. 예를 들어, 자동차를 사기 위해 돈을 빌릴 경우 총 차입 금액은 매월 자동차 대금을 만드는를 생략 하면&0; 현재 값입니다."
    - id: FV
      type: System.Double
      description: "선택 사항입니다. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>미래 값 또는 현금 잔액 최종 지불 후 앞으로 지불할 수를 지정 합니다. 예를 들어, 최종 지불 후 해당 값 이기 때문에 대출의 미래 값은 $0입니다. 그러나 자녀의 교육을 위해 18 년간 $ 50, 000를 저장 하려는 경우 $ 50, 000가 미래 값이 있습니다. 생략 하는 경우 0 이라고 가정 합니다."
    - id: Due
      type: Microsoft.VisualBasic.DueDate
      description: "선택 사항입니다. 형식의 개체 <xref href=&quot;Microsoft.VisualBasic.DueDate&quot;> </xref> 지불 하는 시점을 지정 하는 합니다. 이 인수 중 하나 여야 합니다 `DueDate.EndOfPeriod` 지불 기간의 끝에 있는 경우 또는 `DueDate.BegOfPeriod` 기간의 시작 부분에 있는 경우. 생략 하면 `DueDate.EndOfPeriod` 것으로 간주 됩니다."
    return:
      type: System.Double
      description: "반환 된 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> 정기 고정된 지급액 및 고정된 금리를 기반으로 연금의 기간 수를 지정 합니다."
  overload: Microsoft.VisualBasic.Financial.NPer*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Rate</code>= 0 and <code>Pmt</code> = 0"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Financial.NPV(System.Double,System.Double[]@)
  id: NPV(System.Double,System.Double[]@)
  parent: Microsoft.VisualBasic.Financial
  langs:
  - csharp
  name: NPV(Double,Double[])
  nameWithType: Financial.NPV(Double,Double[])
  fullName: Microsoft.VisualBasic.Financial.NPV(Double,Double[])
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "반환 된 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> 일련의 주기적인 현금 흐름 (지급액 및 수령액)과 할인율을 기반으로 출 자금의 순 현재 가치를 지정 합니다."
  remarks: "으로 출 자금의 순 현재 가치에 이후 일련 지급액 및 수령액의 현재 값이입니다.       `NPV` 함수는 배열에 있는 값의 순서를 사용 하 여 지급액 및 수령액의 순서를 해석 합니다. 올바른 순서로 지불 및 수신 확인 값을 입력 해야 합니다.       `NPV` 투자 한 기간 날짜 전에 첫 번째 현금 흐름 값의 시작 및 배열에서 마지막 현금 흐름 값으로 끝납니다.       순 현재 가치 계산 미래의 현금 흐름을 기반으로 합니다. 첫 번째 현금 흐름의 첫 번째 기간 시작 부분에서 발생 하는 경우 첫 번째 값에서 반환 된 값에 추가 해야 `NPV` 의 현금 흐름 값에 포함 해서도 안 및 `ValueArray`합니다.       `NPV` 함수는 비슷합니다는 `PV` 점을 제외 하 고 (현재 가치) 함수는 `PV` 함수 현금 흐름의 끝 이나 기간의 시작에 시작할 수 있도록 합니다. 변수는 달리 `NPV` 현금 흐름 값 `PV` 투자 전체 현금 흐름을 수정 해야 합니다."
  example:
  - "This example uses the `NPV` function to return the net present value for a series of cash flows contained in the array `values()`. The return value, stored in `FixedRetRate`, represents the fixed internal rate of return.  \n  \n [!code-vb[VbVbalrMath#1](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._103_1.vb)]"
  syntax:
    content: public static double NPV (double Rate, ref double[] ValueArray);
    parameters:
    - id: Rate
      type: System.Double
      description: "필수 사항입니다. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>기간의 길이 초과 할인율을 지정 하는&10; 진수로 표현 됩니다."
    - id: ValueArray
      type: System.Double[]
      description: "필수 사항입니다. 배열 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> 현금 흐름 값을 지정 합니다. 배열의 하나 이상의 음수 값 (지불)과 하나 이상의 양수 값 (확인)를 포함 해야 합니다."
    return:
      type: System.Double
      description: "반환 된 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> 일련의 주기적인 현금 흐름 (지급액 및 수령액)과 할인율을 기반으로 출 자금의 순 현재 가치를 지정 합니다."
  overload: Microsoft.VisualBasic.Financial.NPV*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>ValueArray</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>, rank of <code>ValueArray</code> &lt;&gt; 1, or <code>Rate</code> = -1"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Financial.Pmt(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  id: Pmt(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  parent: Microsoft.VisualBasic.Financial
  langs:
  - csharp
  name: Pmt(Double,Double,Double,Double,DueDate)
  nameWithType: Financial.Pmt(Double,Double,Double,Double,DueDate)
  fullName: Microsoft.VisualBasic.Financial.Pmt(Double,Double,Double,Double,DueDate)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "반환 된 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> 정기 고정된 지급액 및 고정된 금리를 기반으로 연금에 대 한 지불액을 지정 합니다."
  remarks: "연금은 일련의 일정 기간 동안 정기적으로 고정된 금액을 지불 합니다. 연금 대출 (예: 홈 담보 대출) 또는 (예: 월간 저축 계획) 투자 수 있습니다.       `Rate` 및 `NPer` 인수는 같은 단위로 지불 기간을 사용 하 여 계산 해야 합니다. 예를 들어 경우 `Rate` 월 단위로 계산 `NPer` 도 월 단위로 계산 합니다.       음수로; 표현 됩니다 (예: 절약 예치금) 유료 현금 모든 인수에 대 한 (예: 피제수 검사) 받은 양수도 표시 됩니다."
  example:
  - "This example uses the `Pmt` function to return the monthly payment for a loan during a fixed period. Given are the interest percentage rate per period (`APR / 12`), the total number of payments (`TotPmts`), the present value or principal of the loan (`PVal`), the future value of the loan (`FVal`), and a number that indicates whether the payment is due at the beginning or end of the payment period `(PayType).`  \n  \n [!code-vb[VbVbalrMath#7](~/add/codesnippet/visualbasic/7dc3a2f6-c47c-4a51-b799-_1.vb)]"
  syntax:
    content: public static double Pmt (double Rate, double NPer, double PV, double FV = 0, Microsoft.VisualBasic.DueDate Due = Microsoft.VisualBasic.DueDate.EndOfPeriod);
    parameters:
    - id: Rate
      type: System.Double
      description: "필수 사항입니다. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>기간당 이자율을 지정합니다. 예를 들어 매월 갚로 10%의 연간 이자율 (APR) 자동차 대 부를 받아 이자율은 0.1/12, 즉 0.0083입니다."
    - id: NPer
      type: System.Double
      description: "필수 사항입니다. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>연금의 총 지불 기간 수를 지정합니다. 예를 들어 4 년간 자동차 대 부 매월 갚 아 대출에 총 4 × 12, 즉 48 지불 기간입니다."
    - id: PV
      type: System.Double
      description: "필수 사항입니다. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>현재 값 (또는 총액)를 지정 합니다. 일련의 미래에 지불할 지불액은 현재 가치가 있습니다. 예를 들어, 자동차를 사기 위해 돈을 빌릴 경우 총 차입 금액은 매월 자동차 대금을 만드는를 생략 하면&0; 현재 값입니다."
    - id: FV
      type: System.Double
      description: "선택 사항입니다. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>미래 값 또는 현금 잔액 최종 지불 후 앞으로 지불할 수를 지정 합니다. 예를 들어, 최종 지불 후 해당 값 이기 때문에 대출의 미래 값은 $0입니다. 그러나 자녀의 교육을 위해 18 년간 $ 50, 000를 저장 하려는 경우 $ 50, 000가 미래 값이 있습니다. 생략 하는 경우 0 이라고 가정 합니다."
    - id: Due
      type: Microsoft.VisualBasic.DueDate
      description: "선택 사항입니다. 형식의 개체 <xref href=&quot;Microsoft.VisualBasic.DueDate&quot;> </xref> 지불 하는 시점을 지정 하는 합니다. 이 인수 중 하나 여야 합니다 `DueDate.EndOfPeriod` 지불 기간의 끝에 있는 경우 또는 `DueDate.BegOfPeriod` 기간의 시작 부분에 있는 경우. 생략 하면 `DueDate.EndOfPeriod` 것으로 간주 됩니다."
    return:
      type: System.Double
      description: "반환 된 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> 정기 고정된 지급액 및 고정된 금리를 기반으로 연금에 대 한 지불액을 지정 합니다."
  overload: Microsoft.VisualBasic.Financial.Pmt*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>NPer</code> = 0."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Financial.PPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  id: PPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  parent: Microsoft.VisualBasic.Financial
  langs:
  - csharp
  name: PPmt(Double,Double,Double,Double,Double,DueDate)
  nameWithType: Financial.PPmt(Double,Double,Double,Double,Double,DueDate)
  fullName: Microsoft.VisualBasic.Financial.PPmt(Double,Double,Double,Double,Double,DueDate)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "반환 된 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> 정기 고정된 지급액 및 고정된 금리를 기반 일정 기간의 연금에 대 한 원금 지불액을 지정 합니다."
  remarks: "연금은 일련의 시간 동안 정기적으로 고정된 금액을 지불 합니다. 연금 대출 (예: 홈 담보 대출) 또는 (예: 월간 저축 계획) 투자 수 있습니다.       `Rate` 및 `NPer` 인수는 같은 단위로 지불 기간을 사용 하 여 계산 해야 합니다. 예를 들어 경우 `Rate` 월 단위로 계산 `NPer` 도 월 단위로 계산 합니다.       음수로; 표현 됩니다 (예: 절약 예치금) 유료 현금 모든 인수에 대 한 (예: 피제수 검사) 받은 양수도 표시 됩니다."
  example:
  - "This example uses the `PPmt` function to calculate how much of a payment for a specific period is principal when all the payments are of equal value. Given are the interest percentage rate per period (`APR / 12`), the payment period for which the principal portion is desired (`Period`), the total number of payments (`TotPmts`), the present value or principal of the loan (`PVal`), the future value of the loan (`FVal`), and a number that indicates whether the payment is due at the beginning or end of the payment period (`PayType`).  \n  \n [!code-vb[VbVbalrMath#24](~/add/codesnippet/visualbasic/43623fd2-2acb-4eab-9abc-_1.vb)]"
  syntax:
    content: public static double PPmt (double Rate, double Per, double NPer, double PV, double FV = 0, Microsoft.VisualBasic.DueDate Due = Microsoft.VisualBasic.DueDate.EndOfPeriod);
    parameters:
    - id: Rate
      type: System.Double
      description: "필수 사항입니다. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>기간당 이자율을 지정합니다. 예를 들어 매월 갚로 10%의 연간 이자율 (APR) 자동차 대 부를 받아 이자율은 0.1/12, 즉 0.0083입니다."
    - id: Per
      type: System.Double
      description: "필수 사항입니다. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>-%1 범위에 지불 기간을 지정 `NPer`합니다."
    - id: NPer
      type: System.Double
      description: "필수 사항입니다. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>연금의 총 지불 기간 수를 지정합니다. 예를 들어 4 년간 자동차 대 부 매월 갚 아 대출에 총 상환 기간은 4 x 12, 즉 48입니다."
    - id: PV
      type: System.Double
      description: "필수 사항입니다. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>일련의 미래 지불액 또는 수령액의 현재 값을 지정합니다. 예를 들어, 자동차를 사기 위해 돈을 빌릴 경우 총 차입 금액은 매월 자동차 대금을 만드는를 생략 하면&0; 현재 값입니다."
    - id: FV
      type: System.Double
      description: "선택 사항입니다. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>미래 값 또는 현금 잔액 최종 지불 후 앞으로 지불할 수를 지정 합니다. 예를 들어, 최종 지불 후 해당 값 이기 때문에 대출의 미래 값은 $0입니다. 그러나 자녀의 교육을 위해 18 년간 $ 50, 000를 저장 하려는 경우 $ 50, 000가 미래 값이 있습니다. 생략 하는 경우 0 이라고 가정 합니다."
    - id: Due
      type: Microsoft.VisualBasic.DueDate
      description: "선택 사항입니다. 형식의 개체 <xref href=&quot;Microsoft.VisualBasic.DueDate&quot;> </xref> 지불 하는 시점을 지정 하는 합니다. 이 인수 중 하나 여야 합니다 `DueDate.EndOfPeriod` 지불 기간의 끝에 있는 경우 또는 `DueDate.BegOfPeriod` 기간의 시작 부분에 있는 경우. 생략 하면 `DueDate.EndOfPeriod` 것으로 간주 됩니다."
    return:
      type: System.Double
      description: "반환 된 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> 정기 고정된 지급액 및 고정된 금리를 기반 일정 기간의 연금에 대 한 원금 지불액을 지정 합니다."
  overload: Microsoft.VisualBasic.Financial.PPmt*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Per</code>&lt;=0 or <code>Per</code> &gt; <code>NPer</code>."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Financial.PV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  id: PV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  parent: Microsoft.VisualBasic.Financial
  langs:
  - csharp
  name: PV(Double,Double,Double,Double,DueDate)
  nameWithType: Financial.PV(Double,Double,Double,Double,DueDate)
  fullName: Microsoft.VisualBasic.Financial.PV(Double,Double,Double,Double,DueDate)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "반환 된 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> 미래에 지불할 일정 기간의 고정 지불액과 고정된 이자율을 기준으로 연금의 현재 가치를 지정 합니다."
  remarks: "연금은 일련의 시간 동안 정기적으로 고정된 금액을 지불 합니다. 연금 대출 (예: 홈 담보 대출) 또는 (예: 월간 저축 계획) 투자 수 있습니다.       `Rate` 및 `NPer` 인수는 같은 단위로 지불 기간을 사용 하 여 계산 해야 합니다. 예를 들어 경우 `Rate` 월 단위로 계산 `NPer` 도 월 단위로 계산 합니다.       모든 인수에 대 한 현금 (예: 절약 예치금) 지급 나타내는 음수; (예: 피제수 검사) 받은 양수도 표시 됩니다."
  example:
  - "In this example, the `PV` function returns the present value of an $1,000,000 annuity that will provide $50,000 a year for the next 20 years. Provided are the expected annual percentage rate (`APR`), the total number of payments (`TotPmts`), the amount of each payment (`YrIncome`), the total future value of the investment (`FVal`), and a number that indicates whether each payment is made at the beginning or end of the payment period (`PayType`). Note that `YrIncome` is a negative number because it represents cash paid out from the annuity each year.  \n  \n [!code-vb[VbVbalrMath#25](~/add/codesnippet/visualbasic/0175a2c1-5f6c-4f6b-9587-_1.vb)]"
  syntax:
    content: public static double PV (double Rate, double NPer, double Pmt, double FV = 0, Microsoft.VisualBasic.DueDate Due = Microsoft.VisualBasic.DueDate.EndOfPeriod);
    parameters:
    - id: Rate
      type: System.Double
      description: "필수 사항입니다. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>기간당 이자율을 지정합니다. 예를 들어 매월 갚로 10%의 연간 이자율 (APR) 자동차 대 부를 받아 이자율은 0.1/12, 즉 0.0083입니다."
    - id: NPer
      type: System.Double
      description: "필수 사항입니다. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>연금의 총 지불 기간 수를 지정합니다. 예를 들어 4 년간 자동차 대 부 매월 갚 아 경우 대출 상환 기간은 4 x 12 (또는 48)에 있습니다."
    - id: Pmt
      type: System.Double
      description: "필수 사항입니다. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>기간당 지불액을 지정 합니다. 지불액에는 일반적으로 일정 기간 동안 변경 되지 않는 않는 원금과 포함 됩니다."
    - id: FV
      type: System.Double
      description: "선택 사항입니다. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>있습니다 최종 지불 후 앞으로 지불할 미래 값 또는 현금 잔액을 지정 합니다. 예를 들어, 최종 지불 후 해당 값 이기 때문에 대출의 미래 값은 $0입니다. 그러나 자녀의 교육을 위해 18 년간 $ 50, 000를 저장 하려는 경우 $ 50, 000가 미래 값이 있습니다. 생략 하는 경우 0 이라고 가정 합니다."
    - id: Due
      type: Microsoft.VisualBasic.DueDate
      description: "선택 사항입니다. 형식의 개체 <xref href=&quot;Microsoft.VisualBasic.DueDate&quot;> </xref> 지불 하는 시점을 지정 하는 합니다. 이 인수 중 하나 여야 합니다 `DueDate.EndOfPeriod` 지불 기간의 끝에 있는 경우 또는 `DueDate.BegOfPeriod` 기간의 시작 부분에 있는 경우. 생략 하면 `DueDate.EndOfPeriod` 것으로 간주 됩니다."
    return:
      type: System.Double
      description: "반환 된 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> 미래에 지불할 일정 기간의 고정 지불액과 고정된 이자율을 기준으로 연금의 현재 가치를 지정 합니다."
  overload: Microsoft.VisualBasic.Financial.PV*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Financial.Rate(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate,System.Double)
  id: Rate(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate,System.Double)
  parent: Microsoft.VisualBasic.Financial
  langs:
  - csharp
  name: Rate(Double,Double,Double,Double,DueDate,Double)
  nameWithType: Financial.Rate(Double,Double,Double,Double,DueDate,Double)
  fullName: Microsoft.VisualBasic.Financial.Rate(Double,Double,Double,Double,DueDate,Double)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "반환 된 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> 연금에 대 한 기간별 금리를 지정 합니다."
  remarks: "연금은 일련의 시간 동안 정기적으로 고정된 금액을 지불 합니다. 연금 대출 (예: 홈 담보 대출) 또는 (예: 월간 저축 계획) 투자 수 있습니다.       모든 인수에 대 한 현금 (예: 절약 예치금) 지급 나타내는 음수; (예: 피제수 검사) 받은 양수도 표시 됩니다.       `Rate`반복적으로 계산 됩니다. 값의 시작 `Guess`, `Rate` 내 때까지 결과를 0.00001% 계산 합니다. 경우 `Rate` 20 후 결과 실패를 찾을 수 없습니다. 추정값 10%가 하는 경우 및 `Rate` 실패에 대 한 다른 값을 시도 `Guess`합니다."
  example:
  - "This example uses the `Rate` function to calculate the interest rate of a loan given the total number of payments (`TotPmts`), the amount of the loan payment (`Payment`), the present value or principal of the loan (`PVal`), the future value of the loan (`FVal`), a number that indicates whether the payment is due at the beginning or end of the payment period (`PayType`), and an approximation of the expected interest rate (`Guess`).  \n  \n [!code-vb[VbVbalrMath#2](~/add/codesnippet/visualbasic/ea19cd36-8223-44a7-9131-_1.vb)]"
  syntax:
    content: public static double Rate (double NPer, double Pmt, double PV, double FV = 0, Microsoft.VisualBasic.DueDate Due = Microsoft.VisualBasic.DueDate.EndOfPeriod, double Guess = 0.1);
    parameters:
    - id: NPer
      type: System.Double
      description: "필수 사항입니다. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>연금의 총 지불 기간 수를 지정합니다. 예를 들어 4 년간 자동차 대 부 매월 갚 아 대출에 총 4 * 12, 즉 48 지불 기간입니다."
    - id: Pmt
      type: System.Double
      description: "필수 사항입니다. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>기간당 지불액을 지정 합니다. 지불액에는 일반적으로 일정 기간 동안 변경 되지 않는 원금과 포함 됩니다."
    - id: PV
      type: System.Double
      description: "필수 사항입니다. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>지정 하는 값, 금일 값, 일련의 미래 지불액 또는 수령액 또는 합니다. 예를 들어, 자동차를 사기 위해 돈을 빌릴 경우 총 차입 금액은 매월 자동차 대금을 만드는를 생략 하면&0; 현재 값입니다."
    - id: FV
      type: System.Double
      description: "선택 사항입니다. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>있습니다 최종 지불 후 앞으로 지불할 미래 값 또는 현금 잔액을 지정 합니다. 예를 들어, 최종 지불 후 해당 값 이기 때문에 대출의 미래 값은 $0입니다. 그러나 자녀의 교육을 위해 18 년간 $ 50, 000를 저장 하려는 경우 $ 50, 000가 미래 값이 있습니다. 생략 하는 경우 0 이라고 가정 합니다."
    - id: Due
      type: Microsoft.VisualBasic.DueDate
      description: "선택 사항입니다. 형식의 개체 <xref href=&quot;Microsoft.VisualBasic.DueDate&quot;> </xref> 지불 하는 시점을 지정 하는 합니다. 이 인수 중 하나 여야 합니다 `DueDate.EndOfPeriod` 지불 기간의 끝에 있는 경우 또는 `DueDate.BegOfPeriod` 기간의 시작 부분에 있는 경우. 생략 하면 `DueDate.EndOfPeriod` 것으로 간주 됩니다."
    - id: Guess
      type: System.Double
      description: "선택 사항입니다. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>추정 값을 지정 하는 반환한 <xref uid=&quot;langword_csharp_Rate&quot; name=&quot;Rate&quot; href=&quot;&quot;> </xref>합니다. 생략 하면 `Guess` 는 0.1 (10%)."
    return:
      type: System.Double
      description: "반환 된 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> 연금에 대 한 기간별 금리를 지정 합니다."
  overload: Microsoft.VisualBasic.Financial.Rate*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>NPer</code> &lt;= 0."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Financial.SLN(System.Double,System.Double,System.Double)
  id: SLN(System.Double,System.Double,System.Double)
  parent: Microsoft.VisualBasic.Financial
  langs:
  - csharp
  name: SLN(Double,Double,Double)
  nameWithType: Financial.SLN(Double,Double,Double)
  fullName: Microsoft.VisualBasic.Financial.SLN(Double,Double,Double)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "반환 된 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> 한 기간에 대 한 자산 정액법을 지정 합니다."
  remarks: "감가상각 기간은와 같은 단위로 표현 해야 합니다는 `Life` 인수입니다. 모든 인수는 양수 여야 합니다."
  example:
  - "This example uses the `SLN` function to return the straight-line depreciation of an asset for a single period given the asset's initial cost (`InitCost`), the salvage value at the end of the asset's useful life (`SalvageVal`), and the total life of the asset in years (`LifeTime`).  \n  \n [!code-vb[VbVbalrMath#3](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._10_1.vb)]"
  syntax:
    content: public static double SLN (double Cost, double Salvage, double Life);
    parameters:
    - id: Cost
      type: System.Double
      description: "필수 사항입니다. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>초기 자산 비용을 지정 합니다."
    - id: Salvage
      type: System.Double
      description: "필수 사항입니다. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>내용 연수 종료 시점의 자산 값을 지정 합니다."
    - id: Life
      type: System.Double
      description: "필수 사항입니다. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>자산의 내용 연수 길이 지정 합니다."
    return:
      type: System.Double
      description: "반환 된 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> 한 기간에 대 한 자산 정액법을 지정 합니다."
  overload: Microsoft.VisualBasic.Financial.SLN*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Life</code> = 0."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Financial.SYD(System.Double,System.Double,System.Double,System.Double)
  id: SYD(System.Double,System.Double,System.Double,System.Double)
  parent: Microsoft.VisualBasic.Financial
  langs:
  - csharp
  name: SYD(Double,Double,Double,Double)
  nameWithType: Financial.SYD(Double,Double,Double,Double)
  fullName: Microsoft.VisualBasic.Financial.SYD(Double,Double,Double,Double)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "반환 된 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> 지정한 기간의 자산의 연수 합계 감가상각을 지정 합니다."
  remarks: "`Life` 및 `Period` 인수는 같은 단위로 표현 되어야 합니다. 예를 들어 경우 `Life` 월에 `Period` 개월도 지정 해야 합니다. 모든 인수는 양수 여야 합니다."
  example:
  - "This example uses the `SYD` function to return the depreciation of an asset for a specified period given the asset's initial cost (`InitCost`), the salvage value at the end of the asset's useful life (`SalvageVal`), and the total life of the asset in years (`LifeTime`).  \n  \n [!code-vb[VbVbalrMath#3](~/add/codesnippet/visualbasic/9fc7d5a0-c6cb-4861-b899-_1.vb)]"
  syntax:
    content: public static double SYD (double Cost, double Salvage, double Life, double Period);
    parameters:
    - id: Cost
      type: System.Double
      description: "필수 사항입니다. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>자산의 초기 비용을 지정 합니다."
    - id: Salvage
      type: System.Double
      description: "필수 사항입니다. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>내용 연수 종료 시점의 자산 변수의 값을 지정 합니다."
    - id: Life
      type: System.Double
      description: "필수 사항입니다. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>자산의 내용 연수 길이 지정 합니다."
    - id: Period
      type: System.Double
      description: "필수 사항입니다. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>자산 감가상각이 계산 되는 기간을 지정 합니다."
    return:
      type: System.Double
      description: "반환 된 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> 지정한 기간의 자산의 연수 합계 감가상각을 지정 합니다."
  overload: Microsoft.VisualBasic.Financial.SYD*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Salvage</code>&lt; 0, <code>Period</code> &gt; <code>Life</code>, or <code>Period</code> &lt;=0."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.DivideByZeroException
  isExternal: true
  name: System.DivideByZeroException
- uid: Microsoft.VisualBasic.Financial.DDB(System.Double,System.Double,System.Double,System.Double,System.Double)
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: DDB(Double,Double,Double,Double,Double)
  nameWithType: Financial.DDB(Double,Double,Double,Double,Double)
  fullName: Microsoft.VisualBasic.Financial.DDB(Double,Double,Double,Double,Double)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: Microsoft.VisualBasic.Financial.FV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: FV(Double,Double,Double,Double,DueDate)
  nameWithType: Financial.FV(Double,Double,Double,Double,DueDate)
  fullName: Microsoft.VisualBasic.Financial.FV(Double,Double,Double,Double,DueDate)
- uid: Microsoft.VisualBasic.DueDate
  parent: Microsoft.VisualBasic
  isExternal: false
  name: DueDate
  nameWithType: DueDate
  fullName: Microsoft.VisualBasic.DueDate
- uid: Microsoft.VisualBasic.Financial.IPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: IPmt(Double,Double,Double,Double,Double,DueDate)
  nameWithType: Financial.IPmt(Double,Double,Double,Double,Double,DueDate)
  fullName: Microsoft.VisualBasic.Financial.IPmt(Double,Double,Double,Double,Double,DueDate)
- uid: Microsoft.VisualBasic.Financial.IRR(System.Double[]@,System.Double)
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: IRR(Double[],Double)
  nameWithType: Financial.IRR(Double[],Double)
  fullName: Microsoft.VisualBasic.Financial.IRR(Double[],Double)
- uid: System.Double[]
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double[]
  spec.csharp:
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: Double[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.VisualBasic.Financial.MIRR(System.Double[]@,System.Double,System.Double)
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: MIRR(Double[],Double,Double)
  nameWithType: Financial.MIRR(Double[],Double,Double)
  fullName: Microsoft.VisualBasic.Financial.MIRR(Double[],Double,Double)
- uid: Microsoft.VisualBasic.Financial.NPer(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: NPer(Double,Double,Double,Double,DueDate)
  nameWithType: Financial.NPer(Double,Double,Double,Double,DueDate)
  fullName: Microsoft.VisualBasic.Financial.NPer(Double,Double,Double,Double,DueDate)
- uid: Microsoft.VisualBasic.Financial.NPV(System.Double,System.Double[]@)
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: NPV(Double,Double[])
  nameWithType: Financial.NPV(Double,Double[])
  fullName: Microsoft.VisualBasic.Financial.NPV(Double,Double[])
- uid: Microsoft.VisualBasic.Financial.Pmt(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: Pmt(Double,Double,Double,Double,DueDate)
  nameWithType: Financial.Pmt(Double,Double,Double,Double,DueDate)
  fullName: Microsoft.VisualBasic.Financial.Pmt(Double,Double,Double,Double,DueDate)
- uid: Microsoft.VisualBasic.Financial.PPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: PPmt(Double,Double,Double,Double,Double,DueDate)
  nameWithType: Financial.PPmt(Double,Double,Double,Double,Double,DueDate)
  fullName: Microsoft.VisualBasic.Financial.PPmt(Double,Double,Double,Double,Double,DueDate)
- uid: Microsoft.VisualBasic.Financial.PV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: PV(Double,Double,Double,Double,DueDate)
  nameWithType: Financial.PV(Double,Double,Double,Double,DueDate)
  fullName: Microsoft.VisualBasic.Financial.PV(Double,Double,Double,Double,DueDate)
- uid: Microsoft.VisualBasic.Financial.Rate(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate,System.Double)
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: Rate(Double,Double,Double,Double,DueDate,Double)
  nameWithType: Financial.Rate(Double,Double,Double,Double,DueDate,Double)
  fullName: Microsoft.VisualBasic.Financial.Rate(Double,Double,Double,Double,DueDate,Double)
- uid: Microsoft.VisualBasic.Financial.SLN(System.Double,System.Double,System.Double)
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: SLN(Double,Double,Double)
  nameWithType: Financial.SLN(Double,Double,Double)
  fullName: Microsoft.VisualBasic.Financial.SLN(Double,Double,Double)
- uid: Microsoft.VisualBasic.Financial.SYD(System.Double,System.Double,System.Double,System.Double)
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: SYD(Double,Double,Double,Double)
  nameWithType: Financial.SYD(Double,Double,Double,Double)
  fullName: Microsoft.VisualBasic.Financial.SYD(Double,Double,Double,Double)
- uid: Microsoft.VisualBasic.Financial.DDB*
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: DDB
  nameWithType: Financial.DDB
- uid: Microsoft.VisualBasic.Financial.FV*
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: FV
  nameWithType: Financial.FV
- uid: Microsoft.VisualBasic.Financial.IPmt*
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: IPmt
  nameWithType: Financial.IPmt
- uid: Microsoft.VisualBasic.Financial.IRR*
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: IRR
  nameWithType: Financial.IRR
- uid: Microsoft.VisualBasic.Financial.MIRR*
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: MIRR
  nameWithType: Financial.MIRR
- uid: Microsoft.VisualBasic.Financial.NPer*
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: NPer
  nameWithType: Financial.NPer
- uid: Microsoft.VisualBasic.Financial.NPV*
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: NPV
  nameWithType: Financial.NPV
- uid: Microsoft.VisualBasic.Financial.Pmt*
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: Pmt
  nameWithType: Financial.Pmt
- uid: Microsoft.VisualBasic.Financial.PPmt*
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: PPmt
  nameWithType: Financial.PPmt
- uid: Microsoft.VisualBasic.Financial.PV*
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: PV
  nameWithType: Financial.PV
- uid: Microsoft.VisualBasic.Financial.Rate*
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: Rate
  nameWithType: Financial.Rate
- uid: Microsoft.VisualBasic.Financial.SLN*
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: SLN
  nameWithType: Financial.SLN
- uid: Microsoft.VisualBasic.Financial.SYD*
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: SYD
  nameWithType: Financial.SYD
