### YamlMime:ManagedReference
items:
- uid: System.Windows.Data.BindingBase
  id: BindingBase
  children:
  - System.Windows.Data.BindingBase.BindingGroupName
  - System.Windows.Data.BindingBase.Delay
  - System.Windows.Data.BindingBase.FallbackValue
  - System.Windows.Data.BindingBase.ProvideValue(System.IServiceProvider)
  - System.Windows.Data.BindingBase.ShouldSerializeFallbackValue
  - System.Windows.Data.BindingBase.ShouldSerializeTargetNullValue
  - System.Windows.Data.BindingBase.StringFormat
  - System.Windows.Data.BindingBase.TargetNullValue
  langs:
  - csharp
  name: BindingBase
  nameWithType: BindingBase
  fullName: System.Windows.Data.BindingBase
  type: Class
  summary: "일반적인 특성 정의 <xref href=&quot;System.Windows.Data.Binding&quot;> </xref>, <xref href=&quot;System.Windows.Data.PriorityBinding&quot;> </xref>, 및 <xref href=&quot;System.Windows.Data.MultiBinding&quot;> </xref> 클래스입니다."
  remarks: "때문에 <xref:System.Windows.Data.BindingBase.ProvideValue%2A?displayProperty=fullName>메서드는 봉인 되어, BindingBase에서 파생 되는 사용자 지정 바인딩 클래스도 제대로 작동 하지 것입니다는 [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)] 태그 확장입니다.</xref:System.Windows.Data.BindingBase.ProvideValue%2A?displayProperty=fullName>"
  syntax:
    content: >-
      [System.Windows.Localizability(System.Windows.LocalizationCategory.None, Modifiability=System.Windows.Modifiability.Unmodifiable, Readability=System.Windows.Readability.Unreadable)]

      [System.Windows.Markup.MarkupExtensionReturnType(typeof(System.Object))]

      public abstract class BindingBase : System.Windows.Markup.MarkupExtension
  inheritance:
  - System.Windows.Markup.MarkupExtension
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Data.BindingBase.BindingGroupName
  id: BindingGroupName
  parent: System.Windows.Data.BindingBase
  langs:
  - csharp
  name: BindingGroupName
  nameWithType: BindingBase.BindingGroupName
  fullName: System.Windows.Data.BindingBase.BindingGroupName
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "이름을 가져오거나 설정 합니다.는 <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref> 이 바인딩이 속하는 합니다."
  remarks: "바인딩이 속한 BindingGroupName 설정 되어 있지 않으면는 <xref:System.Windows.Data.BindingGroup>경우에만 바인딩 소스 및 <xref:System.Windows.FrameworkElement.DataContext%2A>가 부모 요소의 <xref:System.Windows.Data.BindingGroup>가 같은 개체입니다.</xref:System.Windows.Data.BindingGroup> </xref:System.Windows.FrameworkElement.DataContext%2A> </xref:System.Windows.Data.BindingGroup>       바인딩이 속한 BindingGroupName을 값으로 설정 하는 경우는 <xref:System.Windows.Data.BindingGroup>다음 조건이 true 인 경우:- <xref:System.Windows.Data.BindingGroup.Name%2A>의 <xref:System.Windows.Data.BindingGroup>BindingGroupName 같은지.</xref:System.Windows.Data.BindingGroup> </xref:System.Windows.Data.BindingGroup.Name%2A> </xref:System.Windows.Data.BindingGroup>      - <xref:System.Windows.Data.BindingGroup>는 바인딩 대상 요소의 부모 요소에 속합니다.</xref:System.Windows.Data.BindingGroup>       BindingGroupName로 설정 되어 있으면 `null`, 바인딩이 <xref:System.Windows.Data.BindingGroup>.</xref:System.Windows.Data.BindingGroup> 속하지 않습니다.       과 다른 소스 있는 바인딩을 포함할 수 있습니다는 <xref:System.Windows.FrameworkElement.DataContext%2A>가 부모 요소의 <xref:System.Windows.Data.BindingGroup>설정 하 여 <xref:System.Windows.Data.BindingGroup.Name%2A>의 <xref:System.Windows.Data.BindingGroup>BindingGroupName의 속성과 동일한 값에 대 한 바인딩.</xref:System.Windows.Data.BindingGroup> </xref:System.Windows.Data.BindingGroup.Name%2A> </xref:System.Windows.Data.BindingGroup> </xref:System.Windows.FrameworkElement.DataContext%2A>  동일한 원본으로 포함 된 바인딩이 제외할 수 <xref:System.Windows.FrameworkElement.DataContext%2A>가 부모 요소의 <xref:System.Windows.Data.BindingGroup>설정 하 여 <xref:System.Windows.Data.BindingGroup.Name%2A>의 <xref:System.Windows.Data.BindingGroup>BindingGroupName의 속성과 다른 값에 대 한 바인딩.</xref:System.Windows.Data.BindingGroup> </xref:System.Windows.Data.BindingGroup.Name%2A> </xref:System.Windows.Data.BindingGroup> </xref:System.Windows.FrameworkElement.DataContext%2A>"
  example:
  - "The following examples are part of an application that checks whether the user has set the properties of two objects to equal values. The first example creates two <xref:System.Windows.Controls.TextBox> controls, each of which is data bound to a different source: The binding of the first <xref:System.Windows.Controls.TextBox> is part of the <xref:System.Windows.Data.BindingGroup> because the <xref:System.Windows.Controls.TextBox> inherits the <xref:System.Windows.FrameworkElement.DataContext%2A> and <xref:System.Windows.Data.BindingGroup> from its parent <xref:System.Windows.Controls.StackPanel>  \n  \n The binding on the second <xref:System.Windows.Controls.TextBox> is part of the <xref:System.Windows.Data.BindingGroup> because the <xref:System.Windows.Data.BindingGroup.Name%2A> of the <xref:System.Windows.Data.BindingGroup> and the BindingGroupName of the <xref:System.Windows.Data.Binding> are both set to `bindingGroup`.  \n  \n [!code-xml[BindingGroupSnippets#BindingGroupName](~/add/codesnippet/xaml/BindingGroupSnippets/Window3.xaml#bindinggroupname)]  \n[!code-xml[BindingGroupSnippets#ValidationAdornerSite](~/add/codesnippet/xaml/BindingGroupSnippets/Window3.xaml#validationadornersite)]  \n  \n The following example shows the <xref:System.Windows.Controls.ValidationRule> that the previous example uses.  In the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method, the example gets each source object from the <xref:System.Windows.Data.BindingGroup> and checks whether the properties of the objects are equal.  \n  \n [!code-cs[BindingGroupSnippets#BindingGroupNameValidationRule](~/add/codesnippet/csharp/BindingGroupSnippets/Window3.xaml.cs#bindinggroupnamevalidationrule)]\n [!code-vb[BindingGroupSnippets#BindingGroupNameValidationRule](~/add/codesnippet/visualbasic/bindinggroupsnippets/window3.xaml.vb#bindinggroupnamevalidationrule)]"
  syntax:
    content: public string BindingGroupName { get; set; }
    return:
      type: System.String
      description: "이름에서 <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref> 이 바인딩이 속하는 합니다."
  overload: System.Windows.Data.BindingBase.BindingGroupName*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingBase.Delay
  id: Delay
  parent: System.Windows.Data.BindingBase
  langs:
  - csharp
  name: Delay
  nameWithType: BindingBase.Delay
  fullName: System.Windows.Data.BindingBase.Delay
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "변경 되는 대상의 값 보다 이후 바인딩 소스를 업데이트 하기 전에 대기할 밀리초 단위로 시간을 설정 하거나 가져옵니다."
  remarks: "속성의 값이 대상에 변경 될 때마다 바인딩 소스를 업데이트 하는 바인딩을 사용 하면 때는 <xref:System.Windows.Data.Binding.Mode%2A>하 <xref:System.Windows.Data.BindingMode>고 <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> <xref:System.Windows.Data.UpdateSourceTrigger>.</xref:System.Windows.Data.UpdateSourceTrigger> </xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> </xref:System.Windows.Data.BindingMode> 속성</xref:System.Windows.Data.Binding.Mode%2A> 설정  이 경우 대상이 변경 된 경우 소스를 업데이트 하는 경우 사이의 시간 지연 되어야 하는지 여부를 지정 하려면 지연 속성을 사용할 수 있습니다.  즉시 소스에 커밋할 수를 변경할 때마다 원하는 하지만 사용자가 원본 개체에서 속성을 변경할 수 있도록 하려는 경우에 유용 합니다.  예를 들어 양방향 데이터 개체의 속성에 바인딩된 데이터의 텍스트 상자에 있다고 가정 합니다.  사용자가 텍스트 상자에 값을 변경 해도 소스가 업데이트 됩니다.  <xref:System.Windows.Data.Binding.Mode%2A> <xref:System.Windows.Data.Binding>하 <xref:System.Windows.Data.BindingMode>고 <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> <xref:System.Windows.Data.UpdateSourceTrigger>.</xref:System.Windows.Data.UpdateSourceTrigger> </xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> </xref:System.Windows.Data.BindingMode> </xref:System.Windows.Data.Binding> 속성</xref:System.Windows.Data.Binding.Mode%2A> 을 설정 하면이 시나리오를 활성화 하려면  모든 키 입력으로 소스 개체 업데이트를 방지 하려면 적절 한 값 바인딩 사용자 입력을 중지 하는 후&1; 시간 경과 된 후에 업데이트를 지연 속성을 설정 합니다."
  syntax:
    content: public int Delay { get; set; }
    return:
      type: System.Int32
      description: "바인딩 소스를 업데이트 하기 전에 대기할 밀리초에서 시간의 양입니다."
  overload: System.Windows.Data.BindingBase.Delay*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingBase.FallbackValue
  id: FallbackValue
  parent: System.Windows.Data.BindingBase
  langs:
  - csharp
  name: FallbackValue
  nameWithType: BindingBase.FallbackValue
  fullName: System.Windows.Data.BindingBase.FallbackValue
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "바인딩이 값을 반환할 수 없는 경우 사용할 값을 가져오거나 설정 합니다."
  remarks: "바인딩 값을 반환 했습니다: 1입니다.  바인딩 소스 경로 성공적으로 확인합니다.      2.  값 변환기 있는 경우는 결과 값을 변환할 수 있습니다.      3.  결과 값은 바인딩 대상 (대상) 속성에 유효 합니다.       1과 2를 반환 하는 경우 <xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=fullName>, 사용 가능한 경우 target 속성이 FallbackValue 값으로 설정 됩니다.</xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=fullName> 없는 FallbackValue 이면 대상 속성의 기본값 사용 됩니다.       값 <xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=fullName>성공적인 반환 값으로 간주 되지 않습니다.</xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=fullName>      <a name=&quot;xamlTextUsage_FallbackValue&quot;></a># # XAML 텍스트 사용 ```   <object FallbackValue=&quot;fallbackValue&quot; />   ``` **-또는-** ```   <object>     <object.FallbackValue>       fallbackValue       </object.FallbackValue>   </object>   ``` <a name=&quot;xamlValues_FallbackValue&quot;> </a> # # XAML 값 *fallbackValue* 대상 속성으로 동일한 형식의 특성 또는 개체 요소 값입니다.                    XAML 사용 정보에 대 한 해당 형식의 설명서를 참조 하십시오. 해당 형식의 수 또는 해당 값에 대 한 특성 구문을 지원 하지 않을 수 있습니다 또는 수도 있습니다 개체 요소 구문 (이 위해서는 해당 형식에 기본 생성자)를 지원 하지 않을 수 있습니다. 따라서 대상 속성 형식에는 FallbackValue 속성의 값에 대해 사용 하는 구문이 영향을 미칩니다."
  syntax:
    content: public object FallbackValue { get; set; }
    return:
      type: System.Object
      description: "기본값은 <xref href=&quot;System.Windows.DependencyProperty.UnsetValue&quot;> </xref>합니다."
  overload: System.Windows.Data.BindingBase.FallbackValue*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingBase.ProvideValue(System.IServiceProvider)
  id: ProvideValue(System.IServiceProvider)
  parent: System.Windows.Data.BindingBase
  langs:
  - csharp
  name: ProvideValue(IServiceProvider)
  nameWithType: BindingBase.ProvideValue(IServiceProvider)
  fullName: System.Windows.Data.BindingBase.ProvideValue(IServiceProvider)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "이 바인딩 및 확장이 적용 되는 속성에 설정 해야 하는 개체를 반환 합니다."
  remarks: "이 구현은 통해 바인딩에 대 한 기본 구문 지원을 제공 [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)] 모두 제공 실제 파생된 클래스에 대 한 (<xref:System.Windows.Data.Binding>, <xref:System.Windows.Data.PriorityBinding>, 및 <xref:System.Windows.Data.MultiBinding>).</xref:System.Windows.Data.MultiBinding> </xref:System.Windows.Data.PriorityBinding> </xref:System.Windows.Data.Binding>       <xref:System.Windows.Data.BindingBase>클래스가 메서드의 구현은 바인딩의 결과로 생성 되는 식 개체를 반환 합니다.</xref:System.Windows.Data.BindingBase> 속성은 한 지정 된 <xref:System.Windows.DependencyProperty>주어진 <xref:System.Windows.DependencyObject>.</xref:System.Windows.DependencyObject> </xref:System.Windows.DependencyProperty> 대상으로 하 여 바인딩 이 두 가지 정보에 대 한 쿼리를 통해 전송 되는 <xref:System.Windows.Markup.IProvideValueTarget>구현에는 `serviceProvider`되는 [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] 바인딩을 구문 분석 하는 동안 판독기를 사용할 수 있게 합니다.</xref:System.Windows.Markup.IProvideValueTarget> 올바른 <xref:System.Windows.DependencyProperty>및 <xref:System.Windows.DependencyObject>.</xref:System.Windows.DependencyObject> </xref:System.Windows.DependencyProperty> 에 대 한 검사에 대 한이 기본 클래스 구현을 담당합니다 이러한 발견 되 면 바인딩 식을 반환의 실제 구현에는 기본 클래스는 내부 추상 메서드를 호출 하 여 구현 된 대로 다양 한 파생 클래스 포함 됩니다. 그렇지 않으면 확장 바인딩 개체 자체를 반환 합니다. 형식 불일치 오류가 발생 바인딩 자체를 반환 하지만이 일반적인 환경에서 발생 하지 않습니다.      > [!IMPORTANT] > 때문에 통해 바인딩에 대 한 구문 [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] 에서 구현 될 때이 메서드는 내부 재정의 구현 사용 및 ProvideValue 자체는 날인이 찍 때문에 사용자 지정 바인딩 클래스에서 파생 된 <xref:System.Windows.Data.BindingBase>으로 제대로 작동 하지 것입니다는 [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] 태그 확장입니다.</xref:System.Windows.Data.BindingBase>"
  syntax:
    content: public override sealed object ProvideValue (IServiceProvider serviceProvider);
    parameters:
    - id: serviceProvider
      type: System.IServiceProvider
      description: "태그 확장에 대 한 서비스를 제공할 수 있는 개체입니다. 되었을 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>;에 대 한 자세한 내용은 설명 섹션을 참조 합니다."
    return:
      type: System.Object
      description: "바인딩 대상 속성에 설정할 값입니다."
  overload: System.Windows.Data.BindingBase.ProvideValue*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingBase.ShouldSerializeFallbackValue
  id: ShouldSerializeFallbackValue
  parent: System.Windows.Data.BindingBase
  langs:
  - csharp
  name: ShouldSerializeFallbackValue()
  nameWithType: BindingBase.ShouldSerializeFallbackValue()
  fullName: System.Windows.Data.BindingBase.ShouldSerializeFallbackValue()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Serialization 프로세스가 <xref:System.Windows.Data.BindingBase.FallbackValue*>이 클래스의 인스턴스에서 속성</xref:System.Windows.Data.BindingBase.FallbackValue*> 의 유효 값을 serialize 해야 하는지 여부를 나타내는 값을 반환 합니다."
  syntax:
    content: public bool ShouldSerializeFallbackValue ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우는 <xref:System.Windows.Data.BindingBase.FallbackValue*>고, 그렇지 않으면 직렬화 된 속성 값은 여야 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Windows.Data.BindingBase.FallbackValue*>"
  overload: System.Windows.Data.BindingBase.ShouldSerializeFallbackValue*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingBase.ShouldSerializeTargetNullValue
  id: ShouldSerializeTargetNullValue
  parent: System.Windows.Data.BindingBase
  langs:
  - csharp
  name: ShouldSerializeTargetNullValue()
  nameWithType: BindingBase.ShouldSerializeTargetNullValue()
  fullName: System.Windows.Data.BindingBase.ShouldSerializeTargetNullValue()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "나타내는 값을 반환 여부는 <xref:System.Windows.Data.BindingBase.TargetNullValue*>속성을 serialize 해야 합니다.</xref:System.Windows.Data.BindingBase.TargetNullValue*>"
  syntax:
    content: public bool ShouldSerializeTargetNullValue ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우는 <xref:System.Windows.Data.BindingBase.TargetNullValue*>속성이 고, 그렇지 않으면 직렬화 되어야 합니다 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Windows.Data.BindingBase.TargetNullValue*>"
  overload: System.Windows.Data.BindingBase.ShouldSerializeTargetNullValue*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingBase.StringFormat
  id: StringFormat
  parent: System.Windows.Data.BindingBase
  langs:
  - csharp
  name: StringFormat
  nameWithType: BindingBase.StringFormat
  fullName: System.Windows.Data.BindingBase.StringFormat
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "바인딩된 값을 문자열로 표시 하는 경우 바인딩 형식을 지정 하는 방법을 지정 하는 문자열을 가져오거나 설정 합니다."
  remarks: "StringFormat는 미리 정의 된 복합, 또는 사용자 지정 문자열 형식일 수 있습니다. 문자열 형식에 대 한 자세한 내용은 참조 [형식 지정](~/add/includes/ajax-current-ext-md.md)합니다.       설정 하는 경우는 <xref:System.Windows.Data.Binding.Converter%2A>StringFormat 속성 변환기 데이터 값에 먼저 적용 한 후의 StringFormat를 적용 하 고.</xref:System.Windows.Data.Binding.Converter%2A>       에 StringFormat를 설정 하면는 <xref:System.Windows.Data.Binding>복합 문자열 형식으로 매개 변수를 하나만 지정할 수 있습니다.</xref:System.Windows.Data.Binding>       사용 하는 경우는 <xref:System.Windows.Data.MultiBinding>StringFormat 속성 <xref:System.Windows.Data.MultiBinding>.</xref:System.Windows.Data.MultiBinding> 에 설정 된 경우에 적용 됩니다.</xref:System.Windows.Data.MultiBinding>  모든 자식에 설정 된 StringFormat 값 <xref:System.Windows.Data.Binding>개체는 무시 됩니다.</xref:System.Windows.Data.Binding>  복합 문자열 형식의 매개 변수 개수 자식 <xref:System.Windows.Data.Binding> <xref:System.Windows.Data.MultiBinding>.</xref:System.Windows.Data.MultiBinding> 개체</xref:System.Windows.Data.Binding> 의 수를 초과할 수 없습니다.       사용 하는 경우는 <xref:System.Windows.Data.PriorityBinding>에 StringFormat를 설정할 수 있습니다는 <xref:System.Windows.Data.PriorityBinding>자식 바인딩 개체 중 하나 또는 둘 모두에서.</xref:System.Windows.Data.PriorityBinding> </xref:System.Windows.Data.PriorityBinding>  적용 되는 자식 바인딩에 StringFormat 설정 되 면 해당 값이 사용 됩니다.  StringFormat 자식 바인딩에 적용 되는의 StringFormat 설정 되지 않은 경우는 <xref:System.Windows.Data.PriorityBinding>설정 된 경우 적용 됩니다.</xref:System.Windows.Data.PriorityBinding>"
  example:
  - "The following example uses the StringFormat property to convert `Price`, which is a <xref:System.Double>, to a string that represents a currency.  \n  \n [!code-xml[ContentStringSnippets#Binding](~/add/codesnippet/xaml/ContentStringSnippets/Window1.xaml#binding)]  \n  \n The following example uses the StringFormat property on a <xref:System.Windows.Data.MultiBinding> to build a string that includes the `Description` and `Price` of each item in a <xref:System.Windows.Controls.ListBox>.  \n  \n [!code-xml[ContentStringSnippets#MultiBinding](~/add/codesnippet/xaml/ContentStringSnippets/Window1.xaml#multibinding)]"
  syntax:
    content: public string StringFormat { get; set; }
    return:
      type: System.String
      description: "바인딩된 값을 문자열로 표시 하는 경우 바인딩 형식을 지정 하는 방법을 지정 하는 문자열입니다."
  overload: System.Windows.Data.BindingBase.StringFormat*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingBase.TargetNullValue
  id: TargetNullValue
  parent: System.Windows.Data.BindingBase
  langs:
  - csharp
  name: TargetNullValue
  nameWithType: BindingBase.TargetNullValue
  fullName: System.Windows.Data.BindingBase.TargetNullValue
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "소스 값이 대상에 사용 되는 값을 설정 하거나 가져옵니다 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  remarks: "<a name=&quot;xamlTextUsage_TargetNullValue&quot;></a># # XAML 텍스트 사용 ```   <object TargetNullValue=&quot;nullValue&quot; />   ``` **-또는-** ```   <object>     <object.TargetNullValue>       nullValue       </object.TargetNullValue>   </object>   ``` <a name=&quot;xamlValues_TargetNullValue&quot;> </a> # # XAML 값 *nullValue* 대상 속성으로 동일한 형식의 특성 또는 개체 요소 값입니다.                    XAML 사용 정보에 대 한 해당 형식의 설명서를 참조 하십시오. 해당 형식의 수 또는 해당 값에 대 한 특성 구문을 지원 하지 않을 수 있습니다 또는 수도 있습니다 개체 요소 구문 (이 위해서는 해당 형식에 기본 생성자)를 지원 하지 않을 수 있습니다."
  example:
  - "The following example binds a <xref:System.Windows.Controls.TextBox> to a property of an object.  If the property is `null`, the <xref:System.Windows.Controls.TextBox> displays \"please enter a string.\"  \n  \n [!code-xml[BindingGroupSnippets#TargetNullValue](~/add/codesnippet/xaml/BindingGroupSnippets/Window3.xaml#targetnullvalue)]"
  syntax:
    content: public object TargetNullValue { get; set; }
    return:
      type: System.Object
      description: "소스 값이 대상에 사용 되는 값 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Data.BindingBase.TargetNullValue*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Markup.MarkupExtension
  isExternal: false
  name: System.Windows.Markup.MarkupExtension
- uid: System.Windows.Data.BindingBase.BindingGroupName
  parent: System.Windows.Data.BindingBase
  isExternal: false
  name: BindingGroupName
  nameWithType: BindingBase.BindingGroupName
  fullName: System.Windows.Data.BindingBase.BindingGroupName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Data.BindingBase.Delay
  parent: System.Windows.Data.BindingBase
  isExternal: false
  name: Delay
  nameWithType: BindingBase.Delay
  fullName: System.Windows.Data.BindingBase.Delay
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Data.BindingBase.FallbackValue
  parent: System.Windows.Data.BindingBase
  isExternal: false
  name: FallbackValue
  nameWithType: BindingBase.FallbackValue
  fullName: System.Windows.Data.BindingBase.FallbackValue
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Data.BindingBase.ProvideValue(System.IServiceProvider)
  parent: System.Windows.Data.BindingBase
  isExternal: false
  name: ProvideValue(IServiceProvider)
  nameWithType: BindingBase.ProvideValue(IServiceProvider)
  fullName: System.Windows.Data.BindingBase.ProvideValue(IServiceProvider)
- uid: System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.Windows.Data.BindingBase.ShouldSerializeFallbackValue
  parent: System.Windows.Data.BindingBase
  isExternal: false
  name: ShouldSerializeFallbackValue()
  nameWithType: BindingBase.ShouldSerializeFallbackValue()
  fullName: System.Windows.Data.BindingBase.ShouldSerializeFallbackValue()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Data.BindingBase.ShouldSerializeTargetNullValue
  parent: System.Windows.Data.BindingBase
  isExternal: false
  name: ShouldSerializeTargetNullValue()
  nameWithType: BindingBase.ShouldSerializeTargetNullValue()
  fullName: System.Windows.Data.BindingBase.ShouldSerializeTargetNullValue()
- uid: System.Windows.Data.BindingBase.StringFormat
  parent: System.Windows.Data.BindingBase
  isExternal: false
  name: StringFormat
  nameWithType: BindingBase.StringFormat
  fullName: System.Windows.Data.BindingBase.StringFormat
- uid: System.Windows.Data.BindingBase.TargetNullValue
  parent: System.Windows.Data.BindingBase
  isExternal: false
  name: TargetNullValue
  nameWithType: BindingBase.TargetNullValue
  fullName: System.Windows.Data.BindingBase.TargetNullValue
- uid: System.Windows.Data.BindingBase.BindingGroupName*
  parent: System.Windows.Data.BindingBase
  isExternal: false
  name: BindingGroupName
  nameWithType: BindingBase.BindingGroupName
- uid: System.Windows.Data.BindingBase.Delay*
  parent: System.Windows.Data.BindingBase
  isExternal: false
  name: Delay
  nameWithType: BindingBase.Delay
- uid: System.Windows.Data.BindingBase.FallbackValue*
  parent: System.Windows.Data.BindingBase
  isExternal: false
  name: FallbackValue
  nameWithType: BindingBase.FallbackValue
- uid: System.Windows.Data.BindingBase.ProvideValue*
  parent: System.Windows.Data.BindingBase
  isExternal: false
  name: ProvideValue
  nameWithType: BindingBase.ProvideValue
- uid: System.Windows.Data.BindingBase.ShouldSerializeFallbackValue*
  parent: System.Windows.Data.BindingBase
  isExternal: false
  name: ShouldSerializeFallbackValue
  nameWithType: BindingBase.ShouldSerializeFallbackValue
- uid: System.Windows.Data.BindingBase.ShouldSerializeTargetNullValue*
  parent: System.Windows.Data.BindingBase
  isExternal: false
  name: ShouldSerializeTargetNullValue
  nameWithType: BindingBase.ShouldSerializeTargetNullValue
- uid: System.Windows.Data.BindingBase.StringFormat*
  parent: System.Windows.Data.BindingBase
  isExternal: false
  name: StringFormat
  nameWithType: BindingBase.StringFormat
- uid: System.Windows.Data.BindingBase.TargetNullValue*
  parent: System.Windows.Data.BindingBase
  isExternal: false
  name: TargetNullValue
  nameWithType: BindingBase.TargetNullValue
