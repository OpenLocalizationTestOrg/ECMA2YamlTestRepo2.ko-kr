### YamlMime:ManagedReference
items:
- uid: System.Reflection.Emit.StringToken
  id: StringToken
  children:
  - System.Reflection.Emit.StringToken.Equals(System.Object)
  - System.Reflection.Emit.StringToken.Equals(System.Reflection.Emit.StringToken)
  - System.Reflection.Emit.StringToken.GetHashCode
  - System.Reflection.Emit.StringToken.op_Equality(System.Reflection.Emit.StringToken,System.Reflection.Emit.StringToken)
  - System.Reflection.Emit.StringToken.op_Inequality(System.Reflection.Emit.StringToken,System.Reflection.Emit.StringToken)
  - System.Reflection.Emit.StringToken.Token
  langs:
  - csharp
  name: StringToken
  nameWithType: StringToken
  fullName: System.Reflection.Emit.StringToken
  type: Struct
  summary: "문자열을 나타내는 토큰을 나타냅니다."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public struct StringToken
  inheritance:
  - System.ValueType
  implements: []
  platform:
  - net462
- uid: System.Reflection.Emit.StringToken.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Reflection.Emit.StringToken
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: StringToken.Equals(Object)
  fullName: System.Reflection.Emit.StringToken.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: "지정된 된 개체의 인스턴스 인지 확인 <xref uid=&quot;langword_csharp_StringToken&quot; name=&quot;StringToken&quot; href=&quot;&quot;> </xref> 과이 인스턴스와 동일 합니다."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "와 비교할 개체 <xref uid=&quot;langword_csharp_StringToken&quot; name=&quot;StringToken&quot; href=&quot;&quot;> </xref>합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우 <code> obj </code> 의 인스턴스가 <xref uid=&quot;langword_csharp_StringToken&quot; name=&quot;StringToken&quot; href=&quot;&quot;> </xref> 이 개체에 같고, 그렇지 않으면 이며 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Reflection.Emit.StringToken.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Reflection.Emit.StringToken.Equals(System.Reflection.Emit.StringToken)
  id: Equals(System.Reflection.Emit.StringToken)
  parent: System.Reflection.Emit.StringToken
  langs:
  - csharp
  name: Equals(StringToken)
  nameWithType: StringToken.Equals(StringToken)
  fullName: System.Reflection.Emit.StringToken.Equals(StringToken)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: "현재 인스턴스가 같은지 여부를 지정 된 나타냅니다 <xref href=&quot;System.Reflection.Emit.StringToken&quot;> </xref>합니다."
  syntax:
    content: public bool Equals (System.Reflection.Emit.StringToken obj);
    parameters:
    - id: obj
      type: System.Reflection.Emit.StringToken
      description: "<xref href=&quot;System.Reflection.Emit.StringToken&quot;> </xref> 현재 인스턴스와 비교할 합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>하는 경우의 값 <code> obj </code> 현재 인스턴스의 값과 같지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Reflection.Emit.StringToken.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Reflection.Emit.StringToken.GetHashCode
  id: GetHashCode
  parent: System.Reflection.Emit.StringToken
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: StringToken.GetHashCode()
  fullName: System.Reflection.Emit.StringToken.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: "이 문자열에 대 한 해시 코드를 반환합니다."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "기본 문자열 토큰을 반환합니다."
  overload: System.Reflection.Emit.StringToken.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Reflection.Emit.StringToken.op_Equality(System.Reflection.Emit.StringToken,System.Reflection.Emit.StringToken)
  id: op_Equality(System.Reflection.Emit.StringToken,System.Reflection.Emit.StringToken)
  parent: System.Reflection.Emit.StringToken
  langs:
  - csharp
  name: op_Equality(StringToken,StringToken)
  nameWithType: StringToken.op_Equality(StringToken,StringToken)
  fullName: System.Reflection.Emit.StringToken.op_Equality(StringToken,StringToken)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: "나타냅니다 두 <xref href=&quot;System.Reflection.Emit.StringToken&quot;> </xref> 구조체가 동일 합니다."
  syntax:
    content: public static bool op_Equality (System.Reflection.Emit.StringToken a, System.Reflection.Emit.StringToken b);
    parameters:
    - id: a
      type: System.Reflection.Emit.StringToken
      description: "<xref href=&quot;System.Reflection.Emit.StringToken&quot;> </xref> 비교할 `b`합니다."
    - id: b
      type: System.Reflection.Emit.StringToken
      description: "<xref href=&quot;System.Reflection.Emit.StringToken&quot;> </xref> 비교할 `a`합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>a</code> is equal to <code>b</code>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Reflection.Emit.StringToken.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Reflection.Emit.StringToken.op_Inequality(System.Reflection.Emit.StringToken,System.Reflection.Emit.StringToken)
  id: op_Inequality(System.Reflection.Emit.StringToken,System.Reflection.Emit.StringToken)
  parent: System.Reflection.Emit.StringToken
  langs:
  - csharp
  name: op_Inequality(StringToken,StringToken)
  nameWithType: StringToken.op_Inequality(StringToken,StringToken)
  fullName: System.Reflection.Emit.StringToken.op_Inequality(StringToken,StringToken)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: "나타냅니다 두 <xref href=&quot;System.Reflection.Emit.StringToken&quot;> </xref> 구조체가 동일 합니다."
  syntax:
    content: public static bool op_Inequality (System.Reflection.Emit.StringToken a, System.Reflection.Emit.StringToken b);
    parameters:
    - id: a
      type: System.Reflection.Emit.StringToken
      description: "<xref href=&quot;System.Reflection.Emit.StringToken&quot;> </xref> 비교할 `b`합니다."
    - id: b
      type: System.Reflection.Emit.StringToken
      description: "<xref href=&quot;System.Reflection.Emit.StringToken&quot;> </xref> 비교할 `a`합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>a</code> is not equal to <code>b</code>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Reflection.Emit.StringToken.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Reflection.Emit.StringToken.Token
  id: Token
  parent: System.Reflection.Emit.StringToken
  langs:
  - csharp
  name: Token
  nameWithType: StringToken.Token
  fullName: System.Reflection.Emit.StringToken.Token
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: "이 문자열에 대 한 메타 데이터 토큰을 검색합니다."
  syntax:
    content: public int Token { get; }
    return:
      type: System.Int32
      description: "읽기 전용입니다. 이 문자열의 메타 데이터 토큰을 검색합니다."
  overload: System.Reflection.Emit.StringToken.Token*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Reflection.Emit.StringToken.Equals(System.Object)
  parent: System.Reflection.Emit.StringToken
  isExternal: false
  name: Equals(Object)
  nameWithType: StringToken.Equals(Object)
  fullName: System.Reflection.Emit.StringToken.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Reflection.Emit.StringToken.Equals(System.Reflection.Emit.StringToken)
  parent: System.Reflection.Emit.StringToken
  isExternal: false
  name: Equals(StringToken)
  nameWithType: StringToken.Equals(StringToken)
  fullName: System.Reflection.Emit.StringToken.Equals(StringToken)
- uid: System.Reflection.Emit.StringToken
  parent: System.Reflection.Emit
  isExternal: false
  name: StringToken
  nameWithType: StringToken
  fullName: System.Reflection.Emit.StringToken
- uid: System.Reflection.Emit.StringToken.GetHashCode
  parent: System.Reflection.Emit.StringToken
  isExternal: false
  name: GetHashCode()
  nameWithType: StringToken.GetHashCode()
  fullName: System.Reflection.Emit.StringToken.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Reflection.Emit.StringToken.op_Equality(System.Reflection.Emit.StringToken,System.Reflection.Emit.StringToken)
  parent: System.Reflection.Emit.StringToken
  isExternal: false
  name: op_Equality(StringToken,StringToken)
  nameWithType: StringToken.op_Equality(StringToken,StringToken)
  fullName: System.Reflection.Emit.StringToken.op_Equality(StringToken,StringToken)
- uid: System.Reflection.Emit.StringToken.op_Inequality(System.Reflection.Emit.StringToken,System.Reflection.Emit.StringToken)
  parent: System.Reflection.Emit.StringToken
  isExternal: false
  name: op_Inequality(StringToken,StringToken)
  nameWithType: StringToken.op_Inequality(StringToken,StringToken)
  fullName: System.Reflection.Emit.StringToken.op_Inequality(StringToken,StringToken)
- uid: System.Reflection.Emit.StringToken.Token
  parent: System.Reflection.Emit.StringToken
  isExternal: false
  name: Token
  nameWithType: StringToken.Token
  fullName: System.Reflection.Emit.StringToken.Token
- uid: System.Reflection.Emit.StringToken.Equals*
  parent: System.Reflection.Emit.StringToken
  isExternal: false
  name: Equals
  nameWithType: StringToken.Equals
- uid: System.Reflection.Emit.StringToken.GetHashCode*
  parent: System.Reflection.Emit.StringToken
  isExternal: false
  name: GetHashCode
  nameWithType: StringToken.GetHashCode
- uid: System.Reflection.Emit.StringToken.op_Equality*
  parent: System.Reflection.Emit.StringToken
  isExternal: false
  name: op_Equality
  nameWithType: StringToken.op_Equality
- uid: System.Reflection.Emit.StringToken.op_Inequality*
  parent: System.Reflection.Emit.StringToken
  isExternal: false
  name: op_Inequality
  nameWithType: StringToken.op_Inequality
- uid: System.Reflection.Emit.StringToken.Token*
  parent: System.Reflection.Emit.StringToken
  isExternal: false
  name: Token
  nameWithType: StringToken.Token
