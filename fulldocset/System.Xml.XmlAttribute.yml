### YamlMime:ManagedReference
items:
- uid: System.Xml.XmlAttribute
  id: XmlAttribute
  children:
  - System.Xml.XmlAttribute.#ctor(System.String,System.String,System.String,System.Xml.XmlDocument)
  - System.Xml.XmlAttribute.AppendChild(System.Xml.XmlNode)
  - System.Xml.XmlAttribute.BaseURI
  - System.Xml.XmlAttribute.CloneNode(System.Boolean)
  - System.Xml.XmlAttribute.InnerText
  - System.Xml.XmlAttribute.InnerXml
  - System.Xml.XmlAttribute.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)
  - System.Xml.XmlAttribute.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)
  - System.Xml.XmlAttribute.LocalName
  - System.Xml.XmlAttribute.Name
  - System.Xml.XmlAttribute.NamespaceURI
  - System.Xml.XmlAttribute.NodeType
  - System.Xml.XmlAttribute.OwnerDocument
  - System.Xml.XmlAttribute.OwnerElement
  - System.Xml.XmlAttribute.ParentNode
  - System.Xml.XmlAttribute.Prefix
  - System.Xml.XmlAttribute.PrependChild(System.Xml.XmlNode)
  - System.Xml.XmlAttribute.RemoveChild(System.Xml.XmlNode)
  - System.Xml.XmlAttribute.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)
  - System.Xml.XmlAttribute.SchemaInfo
  - System.Xml.XmlAttribute.Specified
  - System.Xml.XmlAttribute.Value
  - System.Xml.XmlAttribute.WriteContentTo(System.Xml.XmlWriter)
  - System.Xml.XmlAttribute.WriteTo(System.Xml.XmlWriter)
  langs:
  - csharp
  name: XmlAttribute
  nameWithType: XmlAttribute
  fullName: System.Xml.XmlAttribute
  type: Class
  summary: "특성을 나타냅니다. 특성 값이 유효 하 고 기본 문서 종류 정의 (DTD) 또는 스키마에 정의 됩니다."
  remarks: "특성은 요소와 연결할 수 있습니다. 사용 하 여는 <xref:System.Xml.XmlAttribute.OwnerElement%2A>가져올 속성의 <xref:System.Xml.XmlElement>특성 속해 있는.</xref:System.Xml.XmlElement> </xref:System.Xml.XmlAttribute.OwnerElement%2A>       `XmlElement` 클래스에 특성 노드에 액세스할 수 있도록 여러 가지 방법 (<xref:System.Xml.XmlElement.GetAttribute%2A?displayProperty=fullName>, <xref:System.Xml.XmlElement.SetAttribute%2A?displayProperty=fullName>, <xref:System.Xml.XmlElement.RemoveAttribute%2A?displayProperty=fullName>등).</xref:System.Xml.XmlElement.RemoveAttribute%2A?displayProperty=fullName> </xref:System.Xml.XmlElement.SetAttribute%2A?displayProperty=fullName> </xref:System.Xml.XmlElement.GetAttribute%2A?displayProperty=fullName> 호출할 수는 또한는 <xref:System.Xml.XmlElement.Attributes%2A?displayProperty=fullName>속성을 반환 하는 <xref:System.Xml.XmlAttributeCollection>컬렉션에서 특성 이름이 나 인덱스로 액세스할 수 있습니다.</xref:System.Xml.XmlAttributeCollection> </xref:System.Xml.XmlElement.Attributes%2A?displayProperty=fullName>"
  syntax:
    content: 'public class XmlAttribute : System.Xml.XmlNode'
  inheritance:
  - System.Object
  - System.Xml.XmlNode
  implements: []
  inheritedMembers:
  - System.Xml.XmlNode.Attributes
  - System.Xml.XmlNode.ChildNodes
  - System.Xml.XmlNode.Clone
  - System.Xml.XmlNode.CreateNavigator
  - System.Xml.XmlNode.FirstChild
  - System.Xml.XmlNode.GetEnumerator
  - System.Xml.XmlNode.GetNamespaceOfPrefix(System.String)
  - System.Xml.XmlNode.GetPrefixOfNamespace(System.String)
  - System.Xml.XmlNode.HasChildNodes
  - System.Xml.XmlNode.IsReadOnly
  - System.Xml.XmlNode.Item(System.String)
  - System.Xml.XmlNode.Item(System.String,System.String)
  - System.Xml.XmlNode.LastChild
  - System.Xml.XmlNode.NextSibling
  - System.Xml.XmlNode.Normalize
  - System.Xml.XmlNode.OuterXml
  - System.Xml.XmlNode.PreviousSibling
  - System.Xml.XmlNode.PreviousText
  - System.Xml.XmlNode.RemoveAll
  - System.Xml.XmlNode.SelectNodes(System.String)
  - System.Xml.XmlNode.SelectNodes(System.String,System.Xml.XmlNamespaceManager)
  - System.Xml.XmlNode.SelectSingleNode(System.String)
  - System.Xml.XmlNode.SelectSingleNode(System.String,System.Xml.XmlNamespaceManager)
  - System.Xml.XmlNode.Supports(System.String,System.String)
  - System.Xml.XmlNode.System#Collections#IEnumerable#GetEnumerator
  - System.Xml.XmlNode.System#ICloneable#Clone
  platform:
  - net462
- uid: System.Xml.XmlAttribute.#ctor(System.String,System.String,System.String,System.Xml.XmlDocument)
  id: '#ctor(System.String,System.String,System.String,System.Xml.XmlDocument)'
  parent: System.Xml.XmlAttribute
  langs:
  - csharp
  name: XmlAttribute(String,String,String,XmlDocument)
  nameWithType: XmlAttribute.XmlAttribute(String,String,String,XmlDocument)
  fullName: System.Xml.XmlAttribute.XmlAttribute(String,String,String,XmlDocument)
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Xml.XmlAttribute&quot;> </xref> 클래스입니다."
  remarks: "<xref:System.Xml.XmlAttribute>직접; 대신 <xref:System.Xml.XmlDocument.CreateAttribute%2A>.</xref:System.Xml.XmlDocument.CreateAttribute%2A> 와 같은 메서드를 사용 하 여</xref:System.Xml.XmlAttribute> 인스턴스화할 수 없습니다"
  syntax:
    content: protected XmlAttribute (string prefix, string localName, string namespaceURI, System.Xml.XmlDocument doc);
    parameters:
    - id: prefix
      type: System.String
      description: "네임 스페이스 접두사입니다."
    - id: localName
      type: System.String
      description: "특성의 로컬 이름입니다."
    - id: namespaceURI
      type: System.String
      description: "네임 스페이스 uniform resource identifier (URI)입니다."
    - id: doc
      type: System.Xml.XmlDocument
      description: "부모 XML 문서입니다."
  overload: System.Xml.XmlAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlAttribute.AppendChild(System.Xml.XmlNode)
  id: AppendChild(System.Xml.XmlNode)
  parent: System.Xml.XmlAttribute
  langs:
  - csharp
  name: AppendChild(XmlNode)
  nameWithType: XmlAttribute.AppendChild(XmlNode)
  fullName: System.Xml.XmlAttribute.AppendChild(XmlNode)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "이 노드의 자식 노드 목록 끝에 지정된 된 노드를 추가합니다."
  remarks: "경우는 `newChild` 은 이미 트리에서 먼저 제거 됩니다.       삽입 하는 노드가 다른 문서에서 만들어진 경우 사용할 수 있습니다 <xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=fullName>현재 문서에 노드를 가져오려는.</xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=fullName> 가져온 다음 현재 문서에 삽입할 수 있습니다."
  example:
  - For an example of the AppendChild method, see the <xref:System.Xml.XmlNode.AppendChild%2A> method.
  syntax:
    content: public override System.Xml.XmlNode AppendChild (System.Xml.XmlNode newChild);
    parameters:
    - id: newChild
      type: System.Xml.XmlNode
      description: "The <xref href=&quot;System.Xml.XmlNode&quot;></xref> to add."
    return:
      type: System.Xml.XmlNode
      description: "<xref href=&quot;System.Xml.XmlNode&quot;> </xref> 추가 합니다."
  overload: System.Xml.XmlAttribute.AppendChild*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "이 노드는 자식 형식의 노드를 허용 하지 않는 형식의 <code> newChild </code> 노드.       <code> newChild </code> 이 노드의 상위 항목 인지 합니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> newChild </code> 이 노드를 다른 문서에서 생성 합니다.       이 노드는 읽기 전용입니다."
  platform:
  - net462
- uid: System.Xml.XmlAttribute.BaseURI
  id: BaseURI
  parent: System.Xml.XmlAttribute
  langs:
  - csharp
  name: BaseURI
  nameWithType: XmlAttribute.BaseURI
  fullName: System.Xml.XmlAttribute.BaseURI
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "기본 식별자 URI (Uniform Resource) 노드를 가져옵니다."
  remarks: "네트워크 XML 문서는 다양 한 World Wide Web Consortium (W3C) 표준 포함 메커니즘을 사용 하 여 집계 데이터의 청크 한 이루어져 서로 다른 위치에서 제공 하는 노드를 포함 합니다. `BaseURI` 이러한 노드 출처를 보여 줍니다.       에 대 한 자세한 내용은 `BaseURI` <xref:System.Xml.XmlNode.BaseURI%2A?displayProperty=fullName>.</xref:System.Xml.XmlNode.BaseURI%2A?displayProperty=fullName> 참조와 다른 노드 형식 동작       이 속성은 문서 개체 모델 (DOM)에 Microsoft 확장입니다."
  example:
  - "The following example displays information on the attribute node, including its base URI.  \n  \n [!code-cpp[Classic WebData XmlAttribute.BaseURI Example#1](~/add/codesnippet/cpp/p-system.xml.xmlattribut_7_1.cpp)]\n [!code-vb[Classic WebData XmlAttribute.BaseURI Example#1](~/add/codesnippet/visualbasic/p-system.xml.xmlattribut_7_1.vb)]\n [!code-cs[Classic WebData XmlAttribute.BaseURI Example#1](~/add/codesnippet/csharp/p-system.xml.xmlattribut_7_1.cs)]  \n  \n The sample uses the file, `baseuri.xml`, as input.  \n  \n [!code-xml[Classic WebData XmlAttribute.BaseURI Example#2](~/add/codesnippet/xml/p-system.xml.xmlattribut_7_2.xml)]"
  syntax:
    content: public override string BaseURI { get; }
    return:
      type: System.String
      description: "위치를 노드가 로드 된 이거나 노드에 기본 URI가 없으면 String.Empty입니다. 특성 노드에 해당 소유자 요소와 같은 기본 URI. 특성 노드에 소유자 요소가 없는 경우 <xref uid=&quot;langword_csharp_BaseURI&quot; name=&quot;BaseURI&quot; href=&quot;&quot;> </xref> String.Empty를 반환 합니다."
  overload: System.Xml.XmlAttribute.BaseURI*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlAttribute.CloneNode(System.Boolean)
  id: CloneNode(System.Boolean)
  parent: System.Xml.XmlAttribute
  langs:
  - csharp
  name: CloneNode(Boolean)
  nameWithType: XmlAttribute.CloneNode(Boolean)
  fullName: System.Xml.XmlAttribute.CloneNode(Boolean)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "이 노드의 복제본을 만듭니다."
  remarks: "이 메서드는 노드에 대 한 복사 생성자로 사용 됩니다. 복제 된 노드는 부모 없습니다 (<xref:System.Xml.XmlAttribute.ParentNode%2A> 반환 `null`).</xref:System.Xml.XmlAttribute.ParentNode%2A>       지정된 된 특성이 지정 되지 않은 특성을 복제 반환 (<xref:System.Xml.XmlAttribute.Specified%2A> 반환 `true`).</xref:System.Xml.XmlAttribute.Specified%2A>"
  example:
  - "The following example uses `CloneNode` to add an attribute to two different element nodes.  \n  \n [!code-cpp[Classic WebData XmlAttribute.CloneNode Example#1](~/add/codesnippet/cpp/m-system.xml.xmlattribut_1_1.cpp)]\n [!code-cs[Classic WebData XmlAttribute.CloneNode Example#1](~/add/codesnippet/csharp/m-system.xml.xmlattribut_1_1.cs)]\n [!code-vb[Classic WebData XmlAttribute.CloneNode Example#1](~/add/codesnippet/visualbasic/m-system.xml.xmlattribut_1_1.vb)]  \n  \n The example uses the file, `2elems.xml`, as input.  \n  \n [!code-xml[Classic WebData XmlAttribute.CloneNode Example#2](~/add/codesnippet/xml/m-system.xml.xmlattribut_1_2.xml)]"
  syntax:
    content: public override System.Xml.XmlNode CloneNode (bool deep);
    parameters:
    - id: deep
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>지정된 된 노드 아래의 하위 트리를 재귀적으로를 복제. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 노드 자체만 복제 하려면"
    return:
      type: System.Xml.XmlNode
      description: "복제 노드입니다."
  overload: System.Xml.XmlAttribute.CloneNode*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlAttribute.InnerText
  id: InnerText
  parent: System.Xml.XmlAttribute
  langs:
  - csharp
  name: InnerText
  nameWithType: XmlAttribute.InnerText
  fullName: System.Xml.XmlAttribute.InnerText
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "노드와 모든 자식의 연결된 된 값을 설정합니다."
  remarks: "이 속성을 설정 모든 자식이 지정된 된 문자열의 구문 분석 된 내용으로 바뀝니다.       이 속성은 문서 개체 모델 (DOM)에 Microsoft 확장입니다."
  syntax:
    content: public override string InnerText { set; }
    return:
      type: System.String
      description: "노드와 모든 자식의 연결 된 값. 특성 노드의 경우이 속성에는 동일한 기능을는 <xref:System.Xml.XmlAttribute.Value*>속성.</xref:System.Xml.XmlAttribute.Value*>"
  overload: System.Xml.XmlAttribute.InnerText*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlAttribute.InnerXml
  id: InnerXml
  parent: System.Xml.XmlAttribute
  langs:
  - csharp
  name: InnerXml
  nameWithType: XmlAttribute.InnerXml
  fullName: System.Xml.XmlAttribute.InnerXml
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "특성의 값을 설정합니다."
  remarks: "이 속성은 문서 개체 모델 (DOM)에 Microsoft 확장입니다."
  syntax:
    content: public override string InnerXml { set; }
    return:
      type: System.String
      description: "특성 값입니다."
  overload: System.Xml.XmlAttribute.InnerXml*
  exceptions:
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "지정 된 XML이 경우이 속성을 설정 형식이 잘못 되었습니다."
  platform:
  - net462
- uid: System.Xml.XmlAttribute.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)
  id: InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)
  parent: System.Xml.XmlAttribute
  langs:
  - csharp
  name: InsertAfter(XmlNode,XmlNode)
  nameWithType: XmlAttribute.InsertAfter(XmlNode,XmlNode)
  fullName: System.Xml.XmlAttribute.InsertAfter(XmlNode,XmlNode)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "지정 된 참조 노드 바로 뒤에 지정된 된 노드를 삽입합니다."
  remarks: "경우 `refChild` 은 `null`, 삽입 `newChild` 자식 노드 목록 맨 앞에 있습니다. 경우 `newChild` 는 <xref:System.Xml.XmlDocumentFragment>개체, 해당 자식 노드는 동일한 순서로 뒤 삽입 `refChild`.</xref:System.Xml.XmlDocumentFragment> 경우는 `newChild` 은 이미 트리에서 먼저 제거 됩니다.       삽입 하는 노드가 다른 문서에서 만들어진 경우 사용할 수 있습니다 <xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=fullName>현재 문서에 노드를 가져오려는.</xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=fullName> 가져온 다음 현재 문서에 삽입할 수 있습니다.       이 방법은 Microsoft 문서 개체 모델 (DOM)를 확장 합니다."
  example:
  - For an example of the InsertAfter method see the <xref:System.Xml.XmlNode.InsertAfter%2A> method.
  syntax:
    content: public override System.Xml.XmlNode InsertAfter (System.Xml.XmlNode newChild, System.Xml.XmlNode refChild);
    parameters:
    - id: newChild
      type: System.Xml.XmlNode
      description: "<xref href=&quot;System.Xml.XmlNode&quot;> </xref> 를 삽입 합니다."
    - id: refChild
      type: System.Xml.XmlNode
      description: "<xref href=&quot;System.Xml.XmlNode&quot;> </xref> 즉 참조 노드. `newChild` 뒤에 배치 됩니다는 `refChild`합니다."
    return:
      type: System.Xml.XmlNode
      description: "<xref href=&quot;System.Xml.XmlNode&quot;> </xref> 삽입 합니다."
  overload: System.Xml.XmlAttribute.InsertAfter*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "이 노드는 자식 형식의 노드를 허용 하지 않는 형식의 <code> newChild </code> 노드.       <code> newChild </code> 이 노드의 상위 항목 인지 합니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> newChild </code> 이 노드를 다른 문서에서 생성 합니다.       <code> refChild </code> 이 노드의 자식이 아닙니다.       이 노드는 읽기 전용입니다."
  platform:
  - net462
- uid: System.Xml.XmlAttribute.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)
  id: InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)
  parent: System.Xml.XmlAttribute
  langs:
  - csharp
  name: InsertBefore(XmlNode,XmlNode)
  nameWithType: XmlAttribute.InsertBefore(XmlNode,XmlNode)
  fullName: System.Xml.XmlAttribute.InsertBefore(XmlNode,XmlNode)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "지정 된 참조 노드 바로 앞에 지정된 된 노드를 삽입합니다."
  remarks: "경우 `refChild` 은 `null`, 삽입 `newChild` 자식 노드 목록 끝에 있습니다. 경우 `newChild` 는 <xref:System.Xml.XmlDocumentFragment>개체, 해당 자식 노드는 삽입, 동일한 순서로 전에 `refChild`.</xref:System.Xml.XmlDocumentFragment> 경우는 `newChild` 은 이미 트리에서 먼저 제거 됩니다.       삽입 하는 노드가 다른 문서에서 만들어진 경우 사용할 수 있습니다 <xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=fullName>현재 문서에 노드를 가져오려는.</xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=fullName> 가져온 다음 현재 문서에 삽입할 수 있습니다."
  example:
  - For an example of the InsertBefore method, see the <xref:System.Xml.XmlNode.InsertBefore%2A> method.
  syntax:
    content: public override System.Xml.XmlNode InsertBefore (System.Xml.XmlNode newChild, System.Xml.XmlNode refChild);
    parameters:
    - id: newChild
      type: System.Xml.XmlNode
      description: "<xref href=&quot;System.Xml.XmlNode&quot;> </xref> 를 삽입 합니다."
    - id: refChild
      type: System.Xml.XmlNode
      description: "<xref href=&quot;System.Xml.XmlNode&quot;> </xref> 즉 참조 노드. `newChild` 이 노드 앞에 배치 됩니다."
    return:
      type: System.Xml.XmlNode
      description: "<xref href=&quot;System.Xml.XmlNode&quot;> </xref> 삽입 합니다."
  overload: System.Xml.XmlAttribute.InsertBefore*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "현재 노드가 자식 형식의 노드를 허용 하지 않는 형식의 인지는 <code> newChild </code> 노드.       <code> newChild </code> 이 노드의 상위 항목 인지 합니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> newChild </code> 이 노드를 다른 문서에서 생성 합니다.       <code> refChild </code> 이 노드의 자식이 아닙니다.       이 노드는 읽기 전용입니다."
  platform:
  - net462
- uid: System.Xml.XmlAttribute.LocalName
  id: LocalName
  parent: System.Xml.XmlAttribute
  langs:
  - csharp
  name: LocalName
  nameWithType: XmlAttribute.LocalName
  fullName: System.Xml.XmlAttribute.LocalName
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "노드의 로컬 이름을 가져옵니다."
  remarks: "노드는 접두사가 없는 경우 `LocalName` <xref:System.Xml.XmlAttribute.Name%2A>.</xref:System.Xml.XmlAttribute.Name%2A> 와 같습니다"
  example:
  - "The following example displays information on each of the nodes in the attribute collection.  \n  \n [!code-cs[Classic WebData XmlAttribute.NamespaceURI Example#1](~/add/codesnippet/csharp/p-system.xml.xmlattribut_3_1.cs)]\n [!code-cpp[Classic WebData XmlAttribute.NamespaceURI Example#1](~/add/codesnippet/cpp/p-system.xml.xmlattribut_3_1.cpp)]\n [!code-vb[Classic WebData XmlAttribute.NamespaceURI Example#1](~/add/codesnippet/visualbasic/p-system.xml.xmlattribut_3_1.vb)]"
  syntax:
    content: public override string LocalName { get; }
    return:
      type: System.String
      description: "제거 접두사가 포함 된 특성 노드의 이름입니다. 다음 예에서 &lt;bk:genre 예약 = &quot;novel&quot;&gt;, <xref uid=&quot;langword_csharp_LocalName&quot; name=&quot;LocalName&quot; href=&quot;&quot;> </xref> 특성은 <xref uid=&quot;langword_csharp_genre&quot; name=&quot;genre&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Xml.XmlAttribute.LocalName*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlAttribute.Name
  id: Name
  parent: System.Xml.XmlAttribute
  langs:
  - csharp
  name: Name
  nameWithType: XmlAttribute.Name
  fullName: System.Xml.XmlAttribute.Name
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "노드의 정규화 된 이름을 가져옵니다."
  remarks: ''
  example:
  - "The following example displays information on each of the nodes in the attribute collection.  \n  \n [!code-cs[Classic WebData XmlAttribute.Name Example#1](~/add/codesnippet/csharp/p-system.xml.xmlattribut_8_1.cs)]\n [!code-cpp[Classic WebData XmlAttribute.Name Example#1](~/add/codesnippet/cpp/p-system.xml.xmlattribut_8_1.cpp)]\n [!code-vb[Classic WebData XmlAttribute.Name Example#1](~/add/codesnippet/visualbasic/p-system.xml.xmlattribut_8_1.vb)]"
  syntax:
    content: public override string Name { get; }
    return:
      type: System.String
      description: "특성 노드의 정규화 된 이름입니다."
  overload: System.Xml.XmlAttribute.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlAttribute.NamespaceURI
  id: NamespaceURI
  parent: System.Xml.XmlAttribute
  langs:
  - csharp
  name: NamespaceURI
  nameWithType: XmlAttribute.NamespaceURI
  fullName: System.Xml.XmlAttribute.NamespaceURI
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "이 노드의 URI 네임 스페이스를 가져옵니다."
  remarks: "특성에 연결 된 요소에서 해당 네임 스페이스를 상속 하지 않습니다. 특성 네임 스페이스를 명시적으로 지정 하지 않으면 네임 스페이스 URI String.Empty 간주 됩니다."
  example:
  - "The following example displays information on each of the nodes in the attribute collection.  \n  \n [!code-cs[Classic WebData XmlAttribute.NamespaceURI Example#1](~/add/codesnippet/csharp/p-system.xml.xmlattribut_1_1.cs)]\n [!code-cpp[Classic WebData XmlAttribute.NamespaceURI Example#1](~/add/codesnippet/cpp/p-system.xml.xmlattribut_1_1.cpp)]\n [!code-vb[Classic WebData XmlAttribute.NamespaceURI Example#1](~/add/codesnippet/visualbasic/p-system.xml.xmlattribut_1_1.vb)]"
  syntax:
    content: public override string NamespaceURI { get; }
    return:
      type: System.String
      description: "네임 스페이스가이 노드의 URI입니다. 특성이 네임 스페이스를 명시적으로 지정 하지 않으면이 속성 String.Empty를 반환 합니다."
  overload: System.Xml.XmlAttribute.NamespaceURI*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlAttribute.NodeType
  id: NodeType
  parent: System.Xml.XmlAttribute
  langs:
  - csharp
  name: NodeType
  nameWithType: XmlAttribute.NodeType
  fullName: System.Xml.XmlAttribute.NodeType
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "현재 노드의 형식을 가져옵니다."
  syntax:
    content: public override System.Xml.XmlNodeType NodeType { get; }
    return:
      type: System.Xml.XmlNodeType
      description: "에 대 한 노드 형식을 <xref uid=&quot;langword_csharp_XmlAttribute&quot; name=&quot;XmlAttribute&quot; href=&quot;&quot;> </xref> 노드 XmlNodeType.Attribute 됩니다."
  overload: System.Xml.XmlAttribute.NodeType*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlAttribute.OwnerDocument
  id: OwnerDocument
  parent: System.Xml.XmlAttribute
  langs:
  - csharp
  name: OwnerDocument
  nameWithType: XmlAttribute.OwnerDocument
  fullName: System.Xml.XmlAttribute.OwnerDocument
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "가져옵니다는 <xref href=&quot;System.Xml.XmlDocument&quot;> </xref> 이 노드가 속한를 합니다."
  remarks: ''
  example:
  - "The following example creates an attribute and displays its `OwnerDocument`.  \n  \n [!code-cs[Classic WebData XmlAttribute.OwnerDocument Example#1](~/add/codesnippet/csharp/p-system.xml.xmlattribut_2_1.cs)]\n [!code-cpp[Classic WebData XmlAttribute.OwnerDocument Example#1](~/add/codesnippet/cpp/p-system.xml.xmlattribut_2_1.cpp)]\n [!code-vb[Classic WebData XmlAttribute.OwnerDocument Example#1](~/add/codesnippet/visualbasic/p-system.xml.xmlattribut_2_1.vb)]"
  syntax:
    content: public override System.Xml.XmlDocument OwnerDocument { get; }
    return:
      type: System.Xml.XmlDocument
      description: "이 노드가 속한는 XML 문서입니다."
  overload: System.Xml.XmlAttribute.OwnerDocument*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlAttribute.OwnerElement
  id: OwnerElement
  parent: System.Xml.XmlAttribute
  langs:
  - csharp
  name: OwnerElement
  nameWithType: XmlAttribute.OwnerElement
  fullName: System.Xml.XmlAttribute.OwnerElement
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "가져옵니다는 <xref href=&quot;System.Xml.XmlElement&quot;> </xref> 특성 속해 있는 합니다."
  remarks: ''
  example:
  - "The following example creates an attribute and displays the `OwnerElement` of the attribute.  \n  \n [!code-cs[Classic WebData XmlAttribute.OwnerElement Example#1](~/add/codesnippet/csharp/p-system.xml.xmlattribut_4_1.cs)]\n [!code-vb[Classic WebData XmlAttribute.OwnerElement Example#1](~/add/codesnippet/visualbasic/p-system.xml.xmlattribut_4_1.vb)]\n [!code-cpp[Classic WebData XmlAttribute.OwnerElement Example#1](~/add/codesnippet/cpp/p-system.xml.xmlattribut_4_1.cpp)]"
  syntax:
    content: public virtual System.Xml.XmlElement OwnerElement { get; }
    return:
      type: System.Xml.XmlElement
      description: "<xref uid=&quot;langword_csharp_XmlElement&quot; name=&quot;XmlElement&quot; href=&quot;&quot;> </xref> 특성에 속하는 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 이 특성이 없으면의 일부가 <xref uid=&quot;langword_csharp_XmlElement&quot; name=&quot;XmlElement&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Xml.XmlAttribute.OwnerElement*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlAttribute.ParentNode
  id: ParentNode
  parent: System.Xml.XmlAttribute
  langs:
  - csharp
  name: ParentNode
  nameWithType: XmlAttribute.ParentNode
  fullName: System.Xml.XmlAttribute.ParentNode
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "이 노드의 부모를 가져옵니다. 에 대 한 <xref uid=&quot;langword_csharp_XmlAttribute&quot; name=&quot;XmlAttribute&quot; href=&quot;&quot;> </xref> 노드,이 속성은 항상 반환 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  remarks: "사용 하 여는 <xref:System.Xml.XmlAttribute.OwnerElement%2A>가져올 속성의 <xref:System.Xml.XmlElement>특성 속해 있는.</xref:System.Xml.XmlElement> </xref:System.Xml.XmlAttribute.OwnerElement%2A>"
  syntax:
    content: public override System.Xml.XmlNode ParentNode { get; }
    return:
      type: System.Xml.XmlNode
      description: "에 대 한 <xref uid=&quot;langword_csharp_XmlAttribute&quot; name=&quot;XmlAttribute&quot; href=&quot;&quot;> </xref> 노드,이 속성은 항상 반환 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Xml.XmlAttribute.ParentNode*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlAttribute.Prefix
  id: Prefix
  parent: System.Xml.XmlAttribute
  langs:
  - csharp
  name: Prefix
  nameWithType: XmlAttribute.Prefix
  fullName: System.Xml.XmlAttribute.Prefix
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "이 노드의 네임 스페이스 접두사를 가져오거나 설정 합니다."
  remarks: "특성의 접두사를 변경 해도 해당 네임 스페이스 URI는 변경 되지 않으므로, 기본값이으로 알려진 특성의 접두사를 변경과 만들어지지 않습니다 새 특성 기본 값 및 원래 접두사입니다."
  example:
  - "The following example displays information on each of the nodes in the attribute collection.  \n  \n [!code-cs[Classic WebData XmlAttribute.NamespaceURI Example#1](~/add/codesnippet/csharp/p-system.xml.xmlattribut_9_1.cs)]\n [!code-cpp[Classic WebData XmlAttribute.NamespaceURI Example#1](~/add/codesnippet/cpp/p-system.xml.xmlattribut_9_1.cpp)]\n [!code-vb[Classic WebData XmlAttribute.NamespaceURI Example#1](~/add/codesnippet/visualbasic/p-system.xml.xmlattribut_9_1.vb)]"
  syntax:
    content: public override string Prefix { get; set; }
    return:
      type: System.String
      description: "이 노드의 네임 스페이스 접두사입니다. 접두사가 없는 경우이 속성은 String.Empty를 반환 합니다."
  overload: System.Xml.XmlAttribute.Prefix*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "이 노드는 읽기 전용입니다."
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "지정된 된 접두사에 잘못 된 문자가 있습니다.       지정된 된 접두사의 형식이 잘못 되었습니다.       이 노드의 네임 스페이스 Uri가 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다.       지정 된 접두사가 &quot;xml&quot;이 고이 노드의 네임 스페이스 Uri는 &quot;http://www.w3.org/XML/1998/namespace&quot;와에서 다릅니다.       이 노드는 특성, 및 지정 된 접두사 &quot;xmlns&quot;는이 노드의 네임 스페이스 Uri는 &quot;http://www.w3.org/2000/xmlns/&quot; 다릅니다.       이 노드는 특성 및이 노드의 qualifiedName &quot;xmlns&quot; [Namespaces]는 합니다."
  platform:
  - net462
- uid: System.Xml.XmlAttribute.PrependChild(System.Xml.XmlNode)
  id: PrependChild(System.Xml.XmlNode)
  parent: System.Xml.XmlAttribute
  langs:
  - csharp
  name: PrependChild(XmlNode)
  nameWithType: XmlAttribute.PrependChild(XmlNode)
  fullName: System.Xml.XmlAttribute.PrependChild(XmlNode)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "이 노드의 자식 노드 목록 시작 부분에 지정된 된 노드를 추가합니다."
  remarks: "경우는 `newChild` 은 이미 트리에서 먼저 제거 됩니다.       삽입 하는 노드가 다른 문서에서 만들어진 경우 사용할 수 있습니다 <xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=fullName>현재 문서에 노드를 가져오려는.</xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=fullName> 가져온 다음 현재 문서에 삽입할 수 있습니다.       이 방법은 Microsoft 문서 개체 모델 (DOM)를 확장 합니다."
  example:
  - For an example of the PrependChild method, see the <xref:System.Xml.XmlNode.PrependChild%2A> method.
  syntax:
    content: public override System.Xml.XmlNode PrependChild (System.Xml.XmlNode newChild);
    parameters:
    - id: newChild
      type: System.Xml.XmlNode
      description: "The <xref href=&quot;System.Xml.XmlNode&quot;></xref> to add. 이 경우는 <xref href=&quot;System.Xml.XmlDocumentFragment&quot;> </xref>, 문서 조각의 전체 내용이이 노드의 자식 목록으로 이동 합니다."
    return:
      type: System.Xml.XmlNode
      description: "<xref href=&quot;System.Xml.XmlNode&quot;> </xref> 추가 합니다."
  overload: System.Xml.XmlAttribute.PrependChild*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "이 노드는 자식 형식의 노드를 허용 하지 않는 형식의 <code> newChild </code> 노드.       <code> newChild </code> 이 노드의 상위 항목 인지 합니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> newChild </code> 이 노드를 다른 문서에서 생성 합니다.       이 노드는 읽기 전용입니다."
  platform:
  - net462
- uid: System.Xml.XmlAttribute.RemoveChild(System.Xml.XmlNode)
  id: RemoveChild(System.Xml.XmlNode)
  parent: System.Xml.XmlAttribute
  langs:
  - csharp
  name: RemoveChild(XmlNode)
  nameWithType: XmlAttribute.RemoveChild(XmlNode)
  fullName: System.Xml.XmlAttribute.RemoveChild(XmlNode)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "지정된 된 자식 노드를 제거합니다."
  remarks: ''
  example:
  - For an example of the RemoveChild method, see the <xref:System.Xml.XmlNode.RemoveChild%2A> method.
  syntax:
    content: public override System.Xml.XmlNode RemoveChild (System.Xml.XmlNode oldChild);
    parameters:
    - id: oldChild
      type: System.Xml.XmlNode
      description: "<xref href=&quot;System.Xml.XmlNode&quot;> </xref> 를 제거 합니다."
    return:
      type: System.Xml.XmlNode
      description: "<xref href=&quot;System.Xml.XmlNode&quot;> </xref> 제거 합니다."
  overload: System.Xml.XmlAttribute.RemoveChild*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> oldChild </code> 이 노드의 자식이 아닙니다. 또는이 노드는 읽기 전용입니다."
  platform:
  - net462
- uid: System.Xml.XmlAttribute.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)
  id: ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)
  parent: System.Xml.XmlAttribute
  langs:
  - csharp
  name: ReplaceChild(XmlNode,XmlNode)
  nameWithType: XmlAttribute.ReplaceChild(XmlNode,XmlNode)
  fullName: System.Xml.XmlAttribute.ReplaceChild(XmlNode,XmlNode)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "지정 된 새 자식 노드에 지정 된 자식 노드를 대체 합니다."
  remarks: "경우는 `newChild` 은 이미 트리에서 먼저 제거 됩니다.       경우는 `newChild` 만들어진 다른 문서에서 사용할 수 있습니다 <xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=fullName>현재 문서에 노드를 가져오려는.</xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=fullName>"
  example:
  - For an example of the ReplaceChild method, see the <xref:System.Xml.XmlNode.ReplaceChild%2A> method.
  syntax:
    content: public override System.Xml.XmlNode ReplaceChild (System.Xml.XmlNode newChild, System.Xml.XmlNode oldChild);
    parameters:
    - id: newChild
      type: System.Xml.XmlNode
      description: "새 자식 <xref href=&quot;System.Xml.XmlNode&quot;> </xref>합니다."
    - id: oldChild
      type: System.Xml.XmlNode
      description: "<xref href=&quot;System.Xml.XmlNode&quot;> </xref> 교체할 수 있습니다."
    return:
      type: System.Xml.XmlNode
      description: "<xref href=&quot;System.Xml.XmlNode&quot;> </xref> 대체 합니다."
  overload: System.Xml.XmlAttribute.ReplaceChild*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "이 노드는 자식 형식의 노드를 허용 하지 않는 형식의 <code> newChild </code> 노드.       <code> newChild </code> 이 노드의 상위 항목 인지 합니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> newChild </code> 이 노드를 다른 문서에서 생성 합니다.       이 노드는 읽기 전용입니다.       <code> oldChild </code> 이 노드의 자식이 아닙니다."
  platform:
  - net462
- uid: System.Xml.XmlAttribute.SchemaInfo
  id: SchemaInfo
  parent: System.Xml.XmlAttribute
  langs:
  - csharp
  name: SchemaInfo
  nameWithType: XmlAttribute.SchemaInfo
  fullName: System.Xml.XmlAttribute.SchemaInfo
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "스키마 유효성 검사-이후 스키마 유효성 검사의 결과로이 노드에 할당 된를 가져옵니다."
  remarks: "이 노드의 유효성을 검사할 때 SchemaInfo 속성이 설정 되어 있습니다."
  syntax:
    content: public override System.Xml.Schema.IXmlSchemaInfo SchemaInfo { get; }
    return:
      type: System.Xml.Schema.IXmlSchemaInfo
      description: "<xref href=&quot;System.Xml.Schema.IXmlSchemaInfo&quot;> </xref> 는 스키마 유효성 검사-이후가 노드의 포함 합니다."
  overload: System.Xml.XmlAttribute.SchemaInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlAttribute.Specified
  id: Specified
  parent: System.Xml.XmlAttribute
  langs:
  - csharp
  name: Specified
  nameWithType: XmlAttribute.Specified
  fullName: System.Xml.XmlAttribute.Specified
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "특성 값이 명시적으로 설정 되어 있는지 여부를 나타내는 값을 가져옵니다."
  remarks: "이 속성을 사용자가 아니라 담당 구현이입니다. 사용자 (기본/고정 값과 같은 값으로 끝나는 경우에) 특성의 값이 변경 되 면 다음 지정 된 플래그는 자동으로 대칭 이동에 `true`합니다. DTD에서 기본/고정 값으로 특성을 다시 지정, 사용자 특성을 삭제 해야 합니다. 그런 다음 구현 새 특성에 지정 된 집합으로 사용할 수 있도록 `false` 고 (있는 경우) 값 기본/고정 합니다.       요약에서: 1입니다.  특성에 있는 경우 할당된 된 값은 문서의 `Specified` 은 `true`, 고 값이 할당 된 값입니다.      2.  특성에 할당 된 값이 없는 문서에 있고 경우에 기본/고정 값은 DTD에 `Specified` 은 `false`, 값은 DTD에서 기본/고정 값.      3.  이렇게 하지 않으면 특성 문서 구조 모델에 나타나지 않습니다."
  syntax:
    content: public virtual bool Specified { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>이 특성은 원래 인스턴스 문서의 값을 명시적으로 부여 되었습니다 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 값이 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> DTD에서 특성의 값 임을 나타냅니다."
  overload: System.Xml.XmlAttribute.Specified*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlAttribute.Value
  id: Value
  parent: System.Xml.XmlAttribute
  langs:
  - csharp
  name: Value
  nameWithType: XmlAttribute.Value
  fullName: System.Xml.XmlAttribute.Value
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "노드의 값을 가져오거나 설정 합니다."
  remarks: ''
  example:
  - "The following example displays information on each of the nodes in the attribute collection.  \n  \n [!code-cs[Classic WebData XmlAttribute.NamespaceURI Example#1](~/add/codesnippet/csharp/p-system.xml.xmlattribut_6_1.cs)]\n [!code-cpp[Classic WebData XmlAttribute.NamespaceURI Example#1](~/add/codesnippet/cpp/p-system.xml.xmlattribut_6_1.cpp)]\n [!code-vb[Classic WebData XmlAttribute.NamespaceURI Example#1](~/add/codesnippet/visualbasic/p-system.xml.xmlattribut_6_1.vb)]"
  syntax:
    content: public override string Value { get; set; }
    return:
      type: System.String
      description: "반환 되는 값에는 <xref:System.Xml.XmlNode.NodeType*>노드의.</xref:System.Xml.XmlNode.NodeType*> 에 대 한 <xref uid=&quot;langword_csharp_XmlAttribute&quot; name=&quot;XmlAttribute&quot; href=&quot;&quot;> </xref> 노드의 경우이 속성은 특성의 값입니다."
  overload: System.Xml.XmlAttribute.Value*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "노드는 읽기 전용으로 설정 하 고 set 작업 라고 합니다."
  platform:
  - net462
- uid: System.Xml.XmlAttribute.WriteContentTo(System.Xml.XmlWriter)
  id: WriteContentTo(System.Xml.XmlWriter)
  parent: System.Xml.XmlAttribute
  langs:
  - csharp
  name: WriteContentTo(XmlWriter)
  nameWithType: XmlAttribute.WriteContentTo(XmlWriter)
  fullName: System.Xml.XmlAttribute.WriteContentTo(XmlWriter)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "노드의 모든 자식을 지정 <xref:System.Xml.XmlWriter>.</xref:System.Xml.XmlWriter> 저장"
  remarks: "이 방법은 Microsoft 문서 개체 모델 (DOM)를 확장 합니다. 기능적으로 <xref:System.Xml.XmlAttribute.InnerXml%2A>속성.</xref:System.Xml.XmlAttribute.InnerXml%2A>"
  syntax:
    content: public override void WriteContentTo (System.Xml.XmlWriter w);
    parameters:
    - id: w
      type: System.Xml.XmlWriter
      description: "<xref uid=&quot;langword_csharp_XmlWriter&quot; name=&quot;XmlWriter&quot; href=&quot;&quot;> </xref> 를 저장 합니다."
  overload: System.Xml.XmlAttribute.WriteContentTo*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlAttribute.WriteTo(System.Xml.XmlWriter)
  id: WriteTo(System.Xml.XmlWriter)
  parent: System.Xml.XmlAttribute
  langs:
  - csharp
  name: WriteTo(XmlWriter)
  nameWithType: XmlAttribute.WriteTo(XmlWriter)
  fullName: System.Xml.XmlAttribute.WriteTo(XmlWriter)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "지정 된 <xref:System.Xml.XmlWriter>.</xref:System.Xml.XmlWriter> 노드를 저장합니다."
  remarks: "이 방법은 Microsoft 문서 개체 모델 (DOM)를 확장 합니다. 기능적으로 <xref:System.Xml.XmlNode.OuterXml%2A?displayProperty=fullName>속성.</xref:System.Xml.XmlNode.OuterXml%2A?displayProperty=fullName>"
  syntax:
    content: public override void WriteTo (System.Xml.XmlWriter w);
    parameters:
    - id: w
      type: System.Xml.XmlWriter
      description: "<xref uid=&quot;langword_csharp_XmlWriter&quot; name=&quot;XmlWriter&quot; href=&quot;&quot;> </xref> 를 저장 합니다."
  overload: System.Xml.XmlAttribute.WriteTo*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Xml.XmlNode
  isExternal: false
  name: System.Xml.XmlNode
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Xml.XmlException
  isExternal: true
  name: System.Xml.XmlException
- uid: System.Xml.XmlAttribute.#ctor(System.String,System.String,System.String,System.Xml.XmlDocument)
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: XmlAttribute(String,String,String,XmlDocument)
  nameWithType: XmlAttribute.XmlAttribute(String,String,String,XmlDocument)
  fullName: System.Xml.XmlAttribute.XmlAttribute(String,String,String,XmlDocument)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.XmlDocument
  parent: System.Xml
  isExternal: false
  name: XmlDocument
  nameWithType: XmlDocument
  fullName: System.Xml.XmlDocument
- uid: System.Xml.XmlAttribute.AppendChild(System.Xml.XmlNode)
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: AppendChild(XmlNode)
  nameWithType: XmlAttribute.AppendChild(XmlNode)
  fullName: System.Xml.XmlAttribute.AppendChild(XmlNode)
- uid: System.Xml.XmlAttribute.BaseURI
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: BaseURI
  nameWithType: XmlAttribute.BaseURI
  fullName: System.Xml.XmlAttribute.BaseURI
- uid: System.Xml.XmlAttribute.CloneNode(System.Boolean)
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: CloneNode(Boolean)
  nameWithType: XmlAttribute.CloneNode(Boolean)
  fullName: System.Xml.XmlAttribute.CloneNode(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.XmlAttribute.InnerText
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: InnerText
  nameWithType: XmlAttribute.InnerText
  fullName: System.Xml.XmlAttribute.InnerText
- uid: System.Xml.XmlAttribute.InnerXml
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: InnerXml
  nameWithType: XmlAttribute.InnerXml
  fullName: System.Xml.XmlAttribute.InnerXml
- uid: System.Xml.XmlAttribute.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: InsertAfter(XmlNode,XmlNode)
  nameWithType: XmlAttribute.InsertAfter(XmlNode,XmlNode)
  fullName: System.Xml.XmlAttribute.InsertAfter(XmlNode,XmlNode)
- uid: System.Xml.XmlAttribute.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: InsertBefore(XmlNode,XmlNode)
  nameWithType: XmlAttribute.InsertBefore(XmlNode,XmlNode)
  fullName: System.Xml.XmlAttribute.InsertBefore(XmlNode,XmlNode)
- uid: System.Xml.XmlAttribute.LocalName
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: LocalName
  nameWithType: XmlAttribute.LocalName
  fullName: System.Xml.XmlAttribute.LocalName
- uid: System.Xml.XmlAttribute.Name
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: Name
  nameWithType: XmlAttribute.Name
  fullName: System.Xml.XmlAttribute.Name
- uid: System.Xml.XmlAttribute.NamespaceURI
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: NamespaceURI
  nameWithType: XmlAttribute.NamespaceURI
  fullName: System.Xml.XmlAttribute.NamespaceURI
- uid: System.Xml.XmlAttribute.NodeType
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: NodeType
  nameWithType: XmlAttribute.NodeType
  fullName: System.Xml.XmlAttribute.NodeType
- uid: System.Xml.XmlNodeType
  parent: System.Xml
  isExternal: true
  name: XmlNodeType
  nameWithType: XmlNodeType
  fullName: System.Xml.XmlNodeType
- uid: System.Xml.XmlAttribute.OwnerDocument
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: OwnerDocument
  nameWithType: XmlAttribute.OwnerDocument
  fullName: System.Xml.XmlAttribute.OwnerDocument
- uid: System.Xml.XmlAttribute.OwnerElement
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: OwnerElement
  nameWithType: XmlAttribute.OwnerElement
  fullName: System.Xml.XmlAttribute.OwnerElement
- uid: System.Xml.XmlElement
  parent: System.Xml
  isExternal: false
  name: XmlElement
  nameWithType: XmlElement
  fullName: System.Xml.XmlElement
- uid: System.Xml.XmlAttribute.ParentNode
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: ParentNode
  nameWithType: XmlAttribute.ParentNode
  fullName: System.Xml.XmlAttribute.ParentNode
- uid: System.Xml.XmlAttribute.Prefix
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: Prefix
  nameWithType: XmlAttribute.Prefix
  fullName: System.Xml.XmlAttribute.Prefix
- uid: System.Xml.XmlAttribute.PrependChild(System.Xml.XmlNode)
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: PrependChild(XmlNode)
  nameWithType: XmlAttribute.PrependChild(XmlNode)
  fullName: System.Xml.XmlAttribute.PrependChild(XmlNode)
- uid: System.Xml.XmlAttribute.RemoveChild(System.Xml.XmlNode)
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: RemoveChild(XmlNode)
  nameWithType: XmlAttribute.RemoveChild(XmlNode)
  fullName: System.Xml.XmlAttribute.RemoveChild(XmlNode)
- uid: System.Xml.XmlAttribute.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: ReplaceChild(XmlNode,XmlNode)
  nameWithType: XmlAttribute.ReplaceChild(XmlNode,XmlNode)
  fullName: System.Xml.XmlAttribute.ReplaceChild(XmlNode,XmlNode)
- uid: System.Xml.XmlAttribute.SchemaInfo
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: SchemaInfo
  nameWithType: XmlAttribute.SchemaInfo
  fullName: System.Xml.XmlAttribute.SchemaInfo
- uid: System.Xml.Schema.IXmlSchemaInfo
  parent: System.Xml.Schema
  isExternal: false
  name: IXmlSchemaInfo
  nameWithType: IXmlSchemaInfo
  fullName: System.Xml.Schema.IXmlSchemaInfo
- uid: System.Xml.XmlAttribute.Specified
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: Specified
  nameWithType: XmlAttribute.Specified
  fullName: System.Xml.XmlAttribute.Specified
- uid: System.Xml.XmlAttribute.Value
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: Value
  nameWithType: XmlAttribute.Value
  fullName: System.Xml.XmlAttribute.Value
- uid: System.Xml.XmlAttribute.WriteContentTo(System.Xml.XmlWriter)
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: WriteContentTo(XmlWriter)
  nameWithType: XmlAttribute.WriteContentTo(XmlWriter)
  fullName: System.Xml.XmlAttribute.WriteContentTo(XmlWriter)
- uid: System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Xml.XmlAttribute.WriteTo(System.Xml.XmlWriter)
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: WriteTo(XmlWriter)
  nameWithType: XmlAttribute.WriteTo(XmlWriter)
  fullName: System.Xml.XmlAttribute.WriteTo(XmlWriter)
- uid: System.Xml.XmlAttribute.#ctor*
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: XmlAttribute
  nameWithType: XmlAttribute.XmlAttribute
- uid: System.Xml.XmlAttribute.AppendChild*
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: AppendChild
  nameWithType: XmlAttribute.AppendChild
- uid: System.Xml.XmlAttribute.BaseURI*
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: BaseURI
  nameWithType: XmlAttribute.BaseURI
- uid: System.Xml.XmlAttribute.CloneNode*
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: CloneNode
  nameWithType: XmlAttribute.CloneNode
- uid: System.Xml.XmlAttribute.InnerText*
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: InnerText
  nameWithType: XmlAttribute.InnerText
- uid: System.Xml.XmlAttribute.InnerXml*
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: InnerXml
  nameWithType: XmlAttribute.InnerXml
- uid: System.Xml.XmlAttribute.InsertAfter*
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: InsertAfter
  nameWithType: XmlAttribute.InsertAfter
- uid: System.Xml.XmlAttribute.InsertBefore*
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: InsertBefore
  nameWithType: XmlAttribute.InsertBefore
- uid: System.Xml.XmlAttribute.LocalName*
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: LocalName
  nameWithType: XmlAttribute.LocalName
- uid: System.Xml.XmlAttribute.Name*
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: Name
  nameWithType: XmlAttribute.Name
- uid: System.Xml.XmlAttribute.NamespaceURI*
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: NamespaceURI
  nameWithType: XmlAttribute.NamespaceURI
- uid: System.Xml.XmlAttribute.NodeType*
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: NodeType
  nameWithType: XmlAttribute.NodeType
- uid: System.Xml.XmlAttribute.OwnerDocument*
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: OwnerDocument
  nameWithType: XmlAttribute.OwnerDocument
- uid: System.Xml.XmlAttribute.OwnerElement*
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: OwnerElement
  nameWithType: XmlAttribute.OwnerElement
- uid: System.Xml.XmlAttribute.ParentNode*
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: ParentNode
  nameWithType: XmlAttribute.ParentNode
- uid: System.Xml.XmlAttribute.Prefix*
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: Prefix
  nameWithType: XmlAttribute.Prefix
- uid: System.Xml.XmlAttribute.PrependChild*
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: PrependChild
  nameWithType: XmlAttribute.PrependChild
- uid: System.Xml.XmlAttribute.RemoveChild*
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: RemoveChild
  nameWithType: XmlAttribute.RemoveChild
- uid: System.Xml.XmlAttribute.ReplaceChild*
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: ReplaceChild
  nameWithType: XmlAttribute.ReplaceChild
- uid: System.Xml.XmlAttribute.SchemaInfo*
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: SchemaInfo
  nameWithType: XmlAttribute.SchemaInfo
- uid: System.Xml.XmlAttribute.Specified*
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: Specified
  nameWithType: XmlAttribute.Specified
- uid: System.Xml.XmlAttribute.Value*
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: Value
  nameWithType: XmlAttribute.Value
- uid: System.Xml.XmlAttribute.WriteContentTo*
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: WriteContentTo
  nameWithType: XmlAttribute.WriteContentTo
- uid: System.Xml.XmlAttribute.WriteTo*
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: WriteTo
  nameWithType: XmlAttribute.WriteTo
