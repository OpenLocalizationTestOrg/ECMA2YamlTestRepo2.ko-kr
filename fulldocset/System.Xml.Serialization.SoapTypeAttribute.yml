### YamlMime:ManagedReference
items:
- uid: System.Xml.Serialization.SoapTypeAttribute
  id: SoapTypeAttribute
  children:
  - System.Xml.Serialization.SoapTypeAttribute.#ctor
  - System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String)
  - System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String,System.String)
  - System.Xml.Serialization.SoapTypeAttribute.IncludeInSchema
  - System.Xml.Serialization.SoapTypeAttribute.Namespace
  - System.Xml.Serialization.SoapTypeAttribute.TypeName
  langs:
  - csharp
  name: SoapTypeAttribute
  nameWithType: SoapTypeAttribute
  fullName: System.Xml.Serialization.SoapTypeAttribute
  type: Class
  summary: "에 의해 생성 된 스키마를 제어는 <xref:System.Xml.Serialization.XmlSerializer>SOAP 인코딩된 XML 클래스 인스턴스를 serialize 합니다.</xref:System.Xml.Serialization.XmlSerializer>"
  remarks: "사용할 수 없습니다 클래스 제어 되는 특성의 집합에 속합니다 방법을 <xref:System.Xml.Serialization.XmlSerializer>를 직렬화 또는 인코딩된 SOAP XML로 개체를 역직렬화 합니다.</xref:System.Xml.Serialization.XmlSerializer> 결과 XML은 World Wide Web 컨소시엄 (www.w3.org) 문서의 &quot;Simple Object Access Protocol (SOAP) 1.1&quot; 섹션 5 준수합니다. 비슷한 특성의 전체 목록은 참조 하십시오. [특성을 제어 인코딩된 SOAP Serialization](~/add/includes/ajax-current-ext-md.md)합니다.       <xref:System.Xml.Serialization.XmlSerializer> <xref:System.Xml.Serialization.XmlTypeMapping> <xref:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping%2A> <xref:System.Xml.Serialization.SoapReflectionImporter>클래스</xref:System.Xml.Serialization.SoapReflectionImporter> 의 메서드</xref:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping%2A> 를 사용 하 여 만든</xref:System.Xml.Serialization.XmlTypeMapping> 사용 하 여</xref:System.Xml.Serialization.XmlSerializer> 생성 개체를 인코딩된 SOAP 메시지로 serialize 하려면       사용할 수 없습니다 클래스 선언에만 적용할 수 있습니다.       <xref:System.Xml.Serialization.SoapTypeAttribute.IncludeInSchema%2A>속성 결과 XML 요소 형식이 생성 된 XML 스트림에 대 한 XML 스키마 (.xsd) 문서에 포함 되는지 여부를 결정 합니다.</xref:System.Xml.Serialization.SoapTypeAttribute.IncludeInSchema%2A> 스키마를 보려면 클래스를 DLL 파일을 컴파일하십시오. 파일에 대 한 인수로 전달 된 [XML 스키마 정의 도구 (Xsd.exe)](~/add/includes/ajax-current-ext-md.md)합니다. <xref:System.Xml.Serialization.XmlSerializer>클래스</xref:System.Xml.Serialization.XmlSerializer> 의 인스턴스에서 클래스를 serialize 할 때 생성 된 XML 스트림에 대 한 XML 스키마를 생성 하는 도구       다른 네임 스페이스를 설정 하면 Xsd.exe 클래스를 serialize 할 때 생성 된 XML 스트림에 대 한 다른 스키마 (.xsd) 파일을 작성 합니다."
  example:
  - "The following example serializes a class named `Group`. The SoapTypeAttribute is applied to the class, with the <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> set to \"SoapGroupType\". The SoapTypeAttribute is also overridden, changing the <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> to \"Team\". Both versions are serialized, resulting in two files: SoapType.xml and SoapType2.xml.  \n  \n [!code-cs[SoapTypeAttribute Example#1](~/add/codesnippet/csharp/t-system.xml.serializati_5_1.cs)]\n [!code-vb[SoapTypeAttribute Example#1](~/add/codesnippet/visualbasic/t-system.xml.serializati_5_1.vb)]\n [!code-cpp[SoapTypeAttribute Example#1](~/add/codesnippet/cpp/t-system.xml.serializati_5_1.cpp)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Enum | System.AttributeTargets.Interface)]

      public class SoapTypeAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xml.Serialization.SoapTypeAttribute.#ctor
  id: '#ctor'
  parent: System.Xml.Serialization.SoapTypeAttribute
  langs:
  - csharp
  name: SoapTypeAttribute()
  nameWithType: SoapTypeAttribute.SoapTypeAttribute()
  fullName: System.Xml.Serialization.SoapTypeAttribute.SoapTypeAttribute()
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Xml.Serialization.SoapTypeAttribute&quot;> </xref> 클래스입니다."
  remarks: "만들기는 <xref:System.Xml.Serialization.SoapTypeAttribute>형식의 직렬화를 재정의 하는 경우.</xref:System.Xml.Serialization.SoapTypeAttribute> 개체 <xref:System.Xml.Serialization.SoapAttributes.SoapType%2A> <xref:System.Xml.Serialization.SoapAttributes> <xref:System.Xml.Serialization.SoapAttributes>에 <xref:System.Xml.Serialization.SoapAttributeOverrides>.</xref:System.Xml.Serialization.SoapAttributeOverrides> 를</xref:System.Xml.Serialization.SoapAttributes> 추가 하 고</xref:System.Xml.Serialization.SoapAttributes> 속성</xref:System.Xml.Serialization.SoapAttributes.SoapType%2A> 에 할당 참조는 <xref:System.Xml.Serialization.SoapAttributeOverrides>SOAP serialization을 재정의 하는 방법에 대 한 자세한 내용은 클래스 개요.</xref:System.Xml.Serialization.SoapAttributeOverrides>"
  example:
  - "The following example serializes a class named `Group`. The <xref:System.Xml.Serialization.SoapTypeAttribute> is applied to the class with the <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> set to \"SoapGroupType\". The <xref:System.Xml.Serialization.SoapTypeAttribute> is also overridden, changing the <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> to \"Team\". Both versions are serialized, resulting in two files: SoapType.xml and SoapType2.xml.  \n  \n [!code-cs[SoapTypeAttribute Example#1](~/add/codesnippet/csharp/m-system.xml.serializati_8_1.cs)]\n [!code-vb[SoapTypeAttribute Example#1](~/add/codesnippet/visualbasic/m-system.xml.serializati_8_1.vb)]\n [!code-cpp[SoapTypeAttribute Example#1](~/add/codesnippet/cpp/m-system.xml.serializati_8_1.cpp)]"
  syntax:
    content: public SoapTypeAttribute ();
    parameters: []
  overload: System.Xml.Serialization.SoapTypeAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Xml.Serialization.SoapTypeAttribute
  langs:
  - csharp
  name: SoapTypeAttribute(String)
  nameWithType: SoapTypeAttribute.SoapTypeAttribute(String)
  fullName: System.Xml.Serialization.SoapTypeAttribute.SoapTypeAttribute(String)
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Xml.Serialization.SoapTypeAttribute&quot;> </xref> 클래스 및 XML 형식의 이름을 지정 합니다."
  remarks: "만들기는 <xref:System.Xml.Serialization.SoapTypeAttribute>형식의 직렬화를 재정의 하는 경우.</xref:System.Xml.Serialization.SoapTypeAttribute> 개체 <xref:System.Xml.Serialization.SoapAttributes.SoapType%2A> <xref:System.Xml.Serialization.SoapAttributes> <xref:System.Xml.Serialization.SoapAttributes>에 <xref:System.Xml.Serialization.SoapAttributeOverrides>.</xref:System.Xml.Serialization.SoapAttributeOverrides> 를</xref:System.Xml.Serialization.SoapAttributes> 추가 하 고</xref:System.Xml.Serialization.SoapAttributes> 속성</xref:System.Xml.Serialization.SoapAttributes.SoapType%2A> 에 할당 참조는 <xref:System.Xml.Serialization.SoapAttributeOverrides>SOAP serialization을 재정의 하는 방법에 대 한 자세한 내용은 클래스 개요.</xref:System.Xml.Serialization.SoapAttributeOverrides>"
  example:
  - "The following example serializes a class named `Group`. The <xref:System.Xml.Serialization.SoapTypeAttribute> is applied to the class with the <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> set to \"SoapGroupType\". The <xref:System.Xml.Serialization.SoapTypeAttribute> is also overridden, changing the <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> to \"Team\". Both versions are serialized, resulting in two files: SoapType.xml and SoapType2.xml.  \n  \n [!code-cs[SoapTypeAttribute Example#1](~/add/codesnippet/csharp/m-system.xml.serializati_11_1.cs)]\n [!code-vb[SoapTypeAttribute Example#1](~/add/codesnippet/visualbasic/m-system.xml.serializati_11_1.vb)]\n [!code-cpp[SoapTypeAttribute Example#1](~/add/codesnippet/cpp/m-system.xml.serializati_11_1.cpp)]"
  syntax:
    content: public SoapTypeAttribute (string typeName);
    parameters:
    - id: typeName
      type: System.String
      description: "XML의 이름을 입력 하 고 <xref:System.Xml.Serialization.XmlSerializer>때 클래스 인스턴스를 serialize (클래스 인스턴스를 deserialize 할 때 인식)를 생성 합니다.</xref:System.Xml.Serialization.XmlSerializer>"
  overload: System.Xml.Serialization.SoapTypeAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Xml.Serialization.SoapTypeAttribute
  langs:
  - csharp
  name: SoapTypeAttribute(String,String)
  nameWithType: SoapTypeAttribute.SoapTypeAttribute(String,String)
  fullName: System.Xml.Serialization.SoapTypeAttribute.SoapTypeAttribute(String,String)
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Xml.Serialization.SoapTypeAttribute&quot;> </xref> 클래스 및 이름과 형식의 XML 네임 스페이스를 지정 합니다."
  remarks: "만들기는 <xref:System.Xml.Serialization.SoapTypeAttribute>형식의 직렬화를 재정의 하는 경우.</xref:System.Xml.Serialization.SoapTypeAttribute> 개체 <xref:System.Xml.Serialization.SoapAttributes.SoapType%2A> <xref:System.Xml.Serialization.SoapAttributes> <xref:System.Xml.Serialization.SoapAttributes>에 <xref:System.Xml.Serialization.SoapAttributeOverrides>.</xref:System.Xml.Serialization.SoapAttributeOverrides> 를</xref:System.Xml.Serialization.SoapAttributes> 추가 하 고</xref:System.Xml.Serialization.SoapAttributes> 속성</xref:System.Xml.Serialization.SoapAttributes.SoapType%2A> 에 할당 참조는 <xref:System.Xml.Serialization.SoapAttributeOverrides>클래스 개요에 대 한 자세한 내용은 SOAP serialization을 재정의 합니다.</xref:System.Xml.Serialization.SoapAttributeOverrides>       설정 하는 경우는 <xref:System.Xml.Serialization.SoapTypeAttribute.Namespace%2A>둘 이상의 형식에 대 한 값 (즉, 다른 둘 이상의 클래스에 특성을 적용 하는 경우 <xref:System.Xml.Serialization.SoapTypeAttribute.Namespace%2A>각각에 대 한 값), [XML 스키마 정의 도구 (Xsd.exe)](~/add/includes/ajax-current-ext-md.md) 각 유형에 대해 별도 스키마 파일 (.xsd)를 생성 합니다.</xref:System.Xml.Serialization.SoapTypeAttribute.Namespace%2A> </xref:System.Xml.Serialization.SoapTypeAttribute.Namespace%2A> 설정 다른 네임 스페이스 각 형식에 대 한 렌더링 유형별로 다른 고유한 각 형식이를 독립 엔터티로 기록해 야 하므로 때문입니다."
  example:
  - "The following example serializes a class named `Group`. The <xref:System.Xml.Serialization.SoapTypeAttribute> is applied to the class with the <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> set to \"SoapGroupType\". The <xref:System.Xml.Serialization.SoapTypeAttribute> is also overridden, changing the <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> to \"Team\". Both versions are serialized, resulting in two files: SoapType.xml and SoapType2.xml.  \n  \n [!code-cs[SoapTypeAttribute Example#1](~/add/codesnippet/csharp/b7d7a27e-07c4-4ae2-8b05-_1.cs)]\n [!code-vb[SoapTypeAttribute Example#1](~/add/codesnippet/visualbasic/b7d7a27e-07c4-4ae2-8b05-_1.vb)]\n [!code-cpp[SoapTypeAttribute Example#1](~/add/codesnippet/cpp/b7d7a27e-07c4-4ae2-8b05-_1.cpp)]"
  syntax:
    content: public SoapTypeAttribute (string typeName, string ns);
    parameters:
    - id: typeName
      type: System.String
      description: "XML의 이름을 입력 하 고 <xref:System.Xml.Serialization.XmlSerializer>때 클래스 인스턴스를 serialize (클래스 인스턴스를 deserialize 할 때 인식)를 생성 합니다.</xref:System.Xml.Serialization.XmlSerializer>"
    - id: ns
      type: System.String
      description: "형식의 XML 네임 스페이스입니다."
  overload: System.Xml.Serialization.SoapTypeAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.SoapTypeAttribute.IncludeInSchema
  id: IncludeInSchema
  parent: System.Xml.Serialization.SoapTypeAttribute
  langs:
  - csharp
  name: IncludeInSchema
  nameWithType: SoapTypeAttribute.IncludeInSchema
  fullName: System.Xml.Serialization.SoapTypeAttribute.IncludeInSchema
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "형식을 SOAP 인코딩된 XML 스키마 문서에 포함할지 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "적용 된 <xref:System.Xml.Serialization.SoapTypeAttribute>형식을 XML 스키마 문서에 포함할지 여부를 지정 하려면 클래스 선언에.</xref:System.Xml.Serialization.SoapTypeAttribute> 속성을 설정할 때의 결과 확인 하는 <xref:System.Xml.Serialization.SoapTypeAttribute>클래스 응용 프로그램 실행 파일이 나 DLL로 컴파일하고 결과 파일을 전달는 [XML 스키마 정의 도구 (Xsd.exe)](~/add/includes/ajax-current-ext-md.md).</xref:System.Xml.Serialization.SoapTypeAttribute> 클래스를 serialize 할 때 생성 된 XML 스트림의 형식 정의 포함 하 여 스키마를 작성 하는 도구입니다."
  example:
  - "The following example serializes a class named `Group`. The <xref:System.Xml.Serialization.SoapTypeAttribute> is applied to the class with the <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> set to \"SoapGroupType\". The <xref:System.Xml.Serialization.SoapTypeAttribute> is also overridden, changing the <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> to \"Team\". Both versions are serialized, resulting in two files: SoapType.xml and SoapType2.xml.  \n  \n [!code-cs[SoapTypeAttribute Example#1](~/add/codesnippet/csharp/p-system.xml.serializati_18_1.cs)]\n [!code-vb[SoapTypeAttribute Example#1](~/add/codesnippet/visualbasic/p-system.xml.serializati_18_1.vb)]\n [!code-cpp[SoapTypeAttribute Example#1](~/add/codesnippet/cpp/p-system.xml.serializati_18_1.cpp)]"
  syntax:
    content: public bool IncludeInSchema { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>형식을 SOAP 인코딩된 XML 스키마 문서에 포함 하려면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Xml.Serialization.SoapTypeAttribute.IncludeInSchema*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.SoapTypeAttribute.Namespace
  id: Namespace
  parent: System.Xml.Serialization.SoapTypeAttribute
  langs:
  - csharp
  name: Namespace
  nameWithType: SoapTypeAttribute.Namespace
  fullName: System.Xml.Serialization.SoapTypeAttribute.Namespace
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "XML 형식의 네임 스페이스를 가져오거나 설정 합니다."
  remarks: "(즉, 하는 경우 각각에 대 한 다른 Namespace 값을 사용 하는 둘 이상의 클래스에 특성을 적용할) 둘 이상의 형식에 대 한 Namespace 값을 설정 하는 경우, [XML 스키마 정의 도구 (Xsd.exe)](~/add/includes/ajax-current-ext-md.md) 각 유형에 대해 별도 스키마 파일 (.xsd)를 생성 합니다. 설정 다른 네임 스페이스 각 형식에 대 한 렌더링 유형별로 다른 고유한 각 형식이를 독립 엔터티로 기록해 야 하므로 때문입니다."
  example:
  - "The following example serializes a class named `Group`. The <xref:System.Xml.Serialization.SoapTypeAttribute> is applied to the class with the <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> set to \"SoapGroupType\". The <xref:System.Xml.Serialization.SoapTypeAttribute> is also overridden, changing the <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> to \"Team\". Both versions are serialized, resulting in two files: SoapType.xml and SoapType2.xml.  \n  \n [!code-cs[SoapTypeAttribute Example#1](~/add/codesnippet/csharp/p-system.xml.serializati_2_1.cs)]\n [!code-vb[SoapTypeAttribute Example#1](~/add/codesnippet/visualbasic/p-system.xml.serializati_2_1.vb)]\n [!code-cpp[SoapTypeAttribute Example#1](~/add/codesnippet/cpp/p-system.xml.serializati_2_1.cpp)]"
  syntax:
    content: public string Namespace { get; set; }
    return:
      type: System.String
      description: "XML 형식의 네임 스페이스입니다. 기본값은 빈 문자열 (&quot;&quot;)."
  overload: System.Xml.Serialization.SoapTypeAttribute.Namespace*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.SoapTypeAttribute.TypeName
  id: TypeName
  parent: System.Xml.Serialization.SoapTypeAttribute
  langs:
  - csharp
  name: TypeName
  nameWithType: SoapTypeAttribute.TypeName
  fullName: System.Xml.Serialization.SoapTypeAttribute.TypeName
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "XML 형식의 이름을 가져오거나 설정 합니다."
  remarks: "적용 된 <xref:System.Xml.Serialization.SoapTypeAttribute>XML 형식의 네임 스페이스, XML 유형 이름 및 형식을 XML 스키마 문서에 포함할지 여부를 지정 하는 클래스를.</xref:System.Xml.Serialization.SoapTypeAttribute> 설정의 결과 확인 하 고 <xref:System.Xml.Serialization.SoapTypeAttribute>개체의 속성을 응용 프로그램 실행 파일이 나 DLL로 컴파일하고 결과 파일을 전달는 [XML 스키마 정의 도구 (Xsd.exe)](~/add/includes/ajax-current-ext-md.md).</xref:System.Xml.Serialization.SoapTypeAttribute> 형식 정의 포함 하 여 스키마를 작성 하는 도구입니다."
  example:
  - "The following example serializes a class named `Group`. The <xref:System.Xml.Serialization.SoapTypeAttribute> is applied to the class with the TypeName set to \"SoapGroupType\". The <xref:System.Xml.Serialization.SoapTypeAttribute> is also overridden, changing the TypeName to \"Team\". Both versions are serialized, resulting in two files: SoapType.xml and SoapType2.xml.  \n  \n [!code-cs[SoapTypeAttribute Example#1](~/add/codesnippet/csharp/p-system.xml.serializati_14_1.cs)]\n [!code-vb[SoapTypeAttribute Example#1](~/add/codesnippet/visualbasic/p-system.xml.serializati_14_1.vb)]\n [!code-cpp[SoapTypeAttribute Example#1](~/add/codesnippet/cpp/p-system.xml.serializati_14_1.cpp)]"
  syntax:
    content: public string TypeName { get; set; }
    return:
      type: System.String
      description: "XML 형식의 이름입니다. 기본값은 클래스 이름입니다."
  overload: System.Xml.Serialization.SoapTypeAttribute.TypeName*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.Xml.Serialization.SoapTypeAttribute.#ctor
  parent: System.Xml.Serialization.SoapTypeAttribute
  isExternal: false
  name: SoapTypeAttribute()
  nameWithType: SoapTypeAttribute.SoapTypeAttribute()
  fullName: System.Xml.Serialization.SoapTypeAttribute.SoapTypeAttribute()
- uid: System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String)
  parent: System.Xml.Serialization.SoapTypeAttribute
  isExternal: false
  name: SoapTypeAttribute(String)
  nameWithType: SoapTypeAttribute.SoapTypeAttribute(String)
  fullName: System.Xml.Serialization.SoapTypeAttribute.SoapTypeAttribute(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String,System.String)
  parent: System.Xml.Serialization.SoapTypeAttribute
  isExternal: false
  name: SoapTypeAttribute(String,String)
  nameWithType: SoapTypeAttribute.SoapTypeAttribute(String,String)
  fullName: System.Xml.Serialization.SoapTypeAttribute.SoapTypeAttribute(String,String)
- uid: System.Xml.Serialization.SoapTypeAttribute.IncludeInSchema
  parent: System.Xml.Serialization.SoapTypeAttribute
  isExternal: false
  name: IncludeInSchema
  nameWithType: SoapTypeAttribute.IncludeInSchema
  fullName: System.Xml.Serialization.SoapTypeAttribute.IncludeInSchema
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.Serialization.SoapTypeAttribute.Namespace
  parent: System.Xml.Serialization.SoapTypeAttribute
  isExternal: false
  name: Namespace
  nameWithType: SoapTypeAttribute.Namespace
  fullName: System.Xml.Serialization.SoapTypeAttribute.Namespace
- uid: System.Xml.Serialization.SoapTypeAttribute.TypeName
  parent: System.Xml.Serialization.SoapTypeAttribute
  isExternal: false
  name: TypeName
  nameWithType: SoapTypeAttribute.TypeName
  fullName: System.Xml.Serialization.SoapTypeAttribute.TypeName
- uid: System.Xml.Serialization.SoapTypeAttribute.#ctor*
  parent: System.Xml.Serialization.SoapTypeAttribute
  isExternal: false
  name: SoapTypeAttribute
  nameWithType: SoapTypeAttribute.SoapTypeAttribute
- uid: System.Xml.Serialization.SoapTypeAttribute.IncludeInSchema*
  parent: System.Xml.Serialization.SoapTypeAttribute
  isExternal: false
  name: IncludeInSchema
  nameWithType: SoapTypeAttribute.IncludeInSchema
- uid: System.Xml.Serialization.SoapTypeAttribute.Namespace*
  parent: System.Xml.Serialization.SoapTypeAttribute
  isExternal: false
  name: Namespace
  nameWithType: SoapTypeAttribute.Namespace
- uid: System.Xml.Serialization.SoapTypeAttribute.TypeName*
  parent: System.Xml.Serialization.SoapTypeAttribute
  isExternal: false
  name: TypeName
  nameWithType: SoapTypeAttribute.TypeName
