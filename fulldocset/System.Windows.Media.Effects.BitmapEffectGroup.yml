### YamlMime:ManagedReference
items:
- uid: System.Windows.Media.Effects.BitmapEffectGroup
  id: BitmapEffectGroup
  children:
  - System.Windows.Media.Effects.BitmapEffectGroup.#ctor
  - System.Windows.Media.Effects.BitmapEffectGroup.Children
  - System.Windows.Media.Effects.BitmapEffectGroup.ChildrenProperty
  - System.Windows.Media.Effects.BitmapEffectGroup.Clone
  - System.Windows.Media.Effects.BitmapEffectGroup.CloneCurrentValue
  - System.Windows.Media.Effects.BitmapEffectGroup.CreateInstanceCore
  - System.Windows.Media.Effects.BitmapEffectGroup.CreateUnmanagedEffect
  - System.Windows.Media.Effects.BitmapEffectGroup.UpdateUnmanagedPropertyState(System.Runtime.InteropServices.SafeHandle)
  langs:
  - csharp
  name: BitmapEffectGroup
  nameWithType: BitmapEffectGroup
  fullName: System.Windows.Media.Effects.BitmapEffectGroup
  type: Class
  summary: '**참고:이 API는 이제 사용 되지 않습니다.** 사용 되는 대체 항목은 <xref href=&quot;System.Windows.Media.Effects.Effect&quot;> </xref>합니다. 그룹을 나타냅니다 <xref href=&quot;System.Windows.Media.Effects.BitmapEffect&quot;> </xref> 표시 되는 개체에 여러 효과 적용 하는 데 사용 되는 개체입니다.'
  remarks: "효과 그룹에 추가 되는 순서는 최종 시각적을 효과에 적용 되는 내용으로 영향을 줍니다. 첫 번째 효과의 시각적 개체에서 두 번째의 원본으로 사용 되도록 효과 연결 됩니다. 이 논리 효과 그룹 내의 모든 후속 효과 다음 됩니다. 다음 그림에 나와 효과는 <xref:System.Windows.Media.Effects.DropShadowBitmapEffect>및 <xref:System.Windows.Media.Effects.OuterGlowBitmapEffect>했을 때 <xref:System.Windows.Controls.Button>.</xref:System.Windows.Controls.Button> 에 추가</xref:System.Windows.Media.Effects.OuterGlowBitmapEffect> </xref:System.Windows.Media.Effects.DropShadowBitmapEffect> 첫 번째 단추는 그림자가 먼저 적용 되 고 마지막으로 적용 하는 외부 광선에 있습니다. 두 번째 단추의 순서가 반대로 되어 있습니다.       ![BitmapEffectGroup에서 효과 순서의 영향을](~/add/media/effectgrouporder.PNG &quot;BitmapEffectGroup에서 효과 순서의 영향을&quot;) BitmapEffectGroup에서 효과"
  syntax:
    content: >-
      [System.Windows.Markup.ContentProperty("Children")]

      public sealed class BitmapEffectGroup : System.Windows.Media.Effects.BitmapEffect
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  - System.Windows.Freezable
  - System.Windows.Media.Animation.Animatable
  - System.Windows.Media.Effects.BitmapEffect
  implements: []
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Freezable.CanFreeze
  - System.Windows.Freezable.Changed
  - System.Windows.Freezable.CloneCore(System.Windows.Freezable)
  - System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)
  - System.Windows.Freezable.CreateInstance
  - System.Windows.Freezable.Freeze
  - System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)
  - System.Windows.Freezable.GetAsFrozen
  - System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Freezable.GetCurrentValueAsFrozen
  - System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Freezable.IsFrozen
  - System.Windows.Freezable.OnChanged
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)
  - System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.Freezable.ReadPreamble
  - System.Windows.Freezable.WritePostscript
  - System.Windows.Freezable.WritePreamble
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)
  - System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)
  - System.Windows.Media.Animation.Animatable.HasAnimatedProperties
  - System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)
  - System.Windows.Media.Effects.BitmapEffect.CreateBitmapEffectOuter
  - System.Windows.Media.Effects.BitmapEffect.GetOutput(System.Windows.Media.Effects.BitmapEffectInput)
  - System.Windows.Media.Effects.BitmapEffect.InitializeBitmapEffect(System.Runtime.InteropServices.SafeHandle,System.Runtime.InteropServices.SafeHandle)
  - System.Windows.Media.Effects.BitmapEffect.SetValue(System.Runtime.InteropServices.SafeHandle,System.String,System.Object)
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Media.Effects.BitmapEffectGroup.#ctor
  id: '#ctor'
  parent: System.Windows.Media.Effects.BitmapEffectGroup
  langs:
  - csharp
  name: BitmapEffectGroup()
  nameWithType: BitmapEffectGroup.BitmapEffectGroup()
  fullName: System.Windows.Media.Effects.BitmapEffectGroup.BitmapEffectGroup()
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: '**참고:이 API는 이제 사용 되지 않습니다.** 사용 되는 대체 항목은 <xref href=&quot;System.Windows.Media.Effects.Effect&quot;> </xref>합니다. 새 인스턴스를 초기화는 <xref href=&quot;System.Windows.Media.Effects.BitmapEffectGroup&quot;> </xref> 클래스입니다.'
  syntax:
    content: public BitmapEffectGroup ();
    parameters: []
  overload: System.Windows.Media.Effects.BitmapEffectGroup.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.BitmapEffectGroup.Children
  id: Children
  parent: System.Windows.Media.Effects.BitmapEffectGroup
  langs:
  - csharp
  name: Children
  nameWithType: BitmapEffectGroup.Children
  fullName: System.Windows.Media.Effects.BitmapEffectGroup.Children
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: '**참고:이 API는 이제 사용 되지 않습니다.** 사용 되는 대체 항목은 <xref href=&quot;System.Windows.Media.Effects.Effect&quot;> </xref>합니다. 자식을 가져오거나 설정 합니다.는 <xref href=&quot;System.Windows.Media.Effects.BitmapEffectGroup&quot;> </xref>합니다.'
  remarks: "<a name=&quot;dependencyPropertyInfo_Children&quot;></a># # 종속성 속성 정보 | | |   |-|-|   | 식별자 필드 | <xref:System.Windows.Media.Effects.BitmapEffectGroup.ChildrenProperty>|   | 메타 데이터 속성이 `true`| None |</xref:System.Windows.Media.Effects.BitmapEffectGroup.ChildrenProperty>"
  syntax:
    content: public System.Windows.Media.Effects.BitmapEffectCollection Children { get; set; }
    return:
      type: System.Windows.Media.Effects.BitmapEffectCollection
      description: "효과의 자식으로 그룹화 한 <xref href=&quot;System.Windows.Media.Effects.BitmapEffectCollection&quot;> </xref>합니다."
  overload: System.Windows.Media.Effects.BitmapEffectGroup.Children*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.BitmapEffectGroup.ChildrenProperty
  id: ChildrenProperty
  parent: System.Windows.Media.Effects.BitmapEffectGroup
  langs:
  - csharp
  name: ChildrenProperty
  nameWithType: BitmapEffectGroup.ChildrenProperty
  fullName: System.Windows.Media.Effects.BitmapEffectGroup.ChildrenProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: '**참고:이 API는 이제 사용 되지 않습니다.** 사용 되는 대체 항목은 <xref href=&quot;System.Windows.Media.Effects.Effect&quot;> </xref>합니다. 식별 된 <xref:System.Windows.Media.Effects.BitmapEffectGroup.Children*>종속성 속성입니다.</xref:System.Windows.Media.Effects.BitmapEffectGroup.Children*>'
  remarks: "에 대 한 식별자는 <xref:System.Windows.Media.Effects.BitmapEffectGroup.Children%2A>종속성 속성입니다.</xref:System.Windows.Media.Effects.BitmapEffectGroup.Children%2A>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty ChildrenProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.BitmapEffectGroup.Clone
  id: Clone
  parent: System.Windows.Media.Effects.BitmapEffectGroup
  langs:
  - csharp
  name: Clone()
  nameWithType: BitmapEffectGroup.Clone()
  fullName: System.Windows.Media.Effects.BitmapEffectGroup.Clone()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: '**Note: This API is now obsolete.** The non-obsolete alternative is <xref href="System.Windows.Media.Effects.Effect"></xref>. Creates a modifiable clone of this <xref href="System.Windows.Media.Effects.BitmapEffectGroup"></xref> object, making deep copies of this object''s current values. Resource references, data bindings, and animations are not copied, but their current values are.'
  remarks: "수정 가능한 복사본을 생성 하기 위해이 메서드는 고정 된 <xref:System.Windows.Freezable>개체 (또는 모든 <xref:System.Windows.Freezable>개체).</xref:System.Windows.Freezable> </xref:System.Windows.Freezable> 편의 위해이 메서드는 상속 된 버전을 숨깁니다.       자세한 내용은 <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>.</xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName> 을 참조 하십시오."
  syntax:
    content: public System.Windows.Media.Effects.BitmapEffectGroup Clone ();
    parameters: []
    return:
      type: System.Windows.Media.Effects.BitmapEffectGroup
      description: "현재 개체의 수정 가능한 복제본입니다. 복제 된 개체의 <> </> *> 속성은 됩니다 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 경우에 원본의 <> </> *> 속성은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Media.Effects.BitmapEffectGroup.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.BitmapEffectGroup.CloneCurrentValue
  id: CloneCurrentValue
  parent: System.Windows.Media.Effects.BitmapEffectGroup
  langs:
  - csharp
  name: CloneCurrentValue()
  nameWithType: BitmapEffectGroup.CloneCurrentValue()
  fullName: System.Windows.Media.Effects.BitmapEffectGroup.CloneCurrentValue()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: '**Note: This API is now obsolete.** The non-obsolete alternative is <xref href="System.Windows.Media.Effects.Effect"></xref>. Creates a modifiable clone of this <xref href="System.Windows.Media.Effects.BitmapEffectGroup"></xref> object, making deep copies of this object''s current values. Resource references, data bindings, and animations are not copied, but their current values are.'
  remarks: "수정 가능한 복사본을 생성 하기 위해이 메서드는 고정 된 <xref:System.Windows.Freezable>개체 (또는 모든 <xref:System.Windows.Freezable>개체).</xref:System.Windows.Freezable> </xref:System.Windows.Freezable> 편의 위해이 메서드는 상속 된 버전을 숨깁니다.       자세한 내용은 <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>.</xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName> 을 참조 하십시오."
  syntax:
    content: public System.Windows.Media.Effects.BitmapEffectGroup CloneCurrentValue ();
    parameters: []
    return:
      type: System.Windows.Media.Effects.BitmapEffectGroup
      description: "현재 개체의 수정 가능한 복제본입니다. 복제 된 개체의 <> </> *> 속성은 됩니다 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 경우에 원본의 <> </> *> 속성은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Media.Effects.BitmapEffectGroup.CloneCurrentValue*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.BitmapEffectGroup.CreateInstanceCore
  id: CreateInstanceCore
  parent: System.Windows.Media.Effects.BitmapEffectGroup
  langs:
  - csharp
  name: CreateInstanceCore()
  nameWithType: BitmapEffectGroup.CreateInstanceCore()
  fullName: System.Windows.Media.Effects.BitmapEffectGroup.CreateInstanceCore()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  syntax:
    content: protected override System.Windows.Freezable CreateInstanceCore ();
    parameters: []
    return:
      type: System.Windows.Freezable
      description: "추가할 수 있습니다."
  overload: System.Windows.Media.Effects.BitmapEffectGroup.CreateInstanceCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.BitmapEffectGroup.CreateUnmanagedEffect
  id: CreateUnmanagedEffect
  parent: System.Windows.Media.Effects.BitmapEffectGroup
  langs:
  - csharp
  name: CreateUnmanagedEffect()
  nameWithType: BitmapEffectGroup.CreateUnmanagedEffect()
  fullName: System.Windows.Media.Effects.BitmapEffectGroup.CreateUnmanagedEffect()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  syntax:
    content: protected override System.Runtime.InteropServices.SafeHandle CreateUnmanagedEffect ();
    parameters: []
    return:
      type: System.Runtime.InteropServices.SafeHandle
      description: "추가할 수 있습니다."
  overload: System.Windows.Media.Effects.BitmapEffectGroup.CreateUnmanagedEffect*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.BitmapEffectGroup.UpdateUnmanagedPropertyState(System.Runtime.InteropServices.SafeHandle)
  id: UpdateUnmanagedPropertyState(System.Runtime.InteropServices.SafeHandle)
  parent: System.Windows.Media.Effects.BitmapEffectGroup
  langs:
  - csharp
  name: UpdateUnmanagedPropertyState(SafeHandle)
  nameWithType: BitmapEffectGroup.UpdateUnmanagedPropertyState(SafeHandle)
  fullName: System.Windows.Media.Effects.BitmapEffectGroup.UpdateUnmanagedPropertyState(SafeHandle)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  syntax:
    content: protected override void UpdateUnmanagedPropertyState (System.Runtime.InteropServices.SafeHandle unmanagedEffect);
    parameters:
    - id: unmanagedEffect
      type: System.Runtime.InteropServices.SafeHandle
      description: "추가할 수 있습니다."
  overload: System.Windows.Media.Effects.BitmapEffectGroup.UpdateUnmanagedPropertyState*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Media.Effects.BitmapEffect
  isExternal: false
  name: System.Windows.Media.Effects.BitmapEffect
- uid: System.Windows.Media.Effects.BitmapEffectGroup.#ctor
  parent: System.Windows.Media.Effects.BitmapEffectGroup
  isExternal: false
  name: BitmapEffectGroup()
  nameWithType: BitmapEffectGroup.BitmapEffectGroup()
  fullName: System.Windows.Media.Effects.BitmapEffectGroup.BitmapEffectGroup()
- uid: System.Windows.Media.Effects.BitmapEffectGroup.Children
  parent: System.Windows.Media.Effects.BitmapEffectGroup
  isExternal: false
  name: Children
  nameWithType: BitmapEffectGroup.Children
  fullName: System.Windows.Media.Effects.BitmapEffectGroup.Children
- uid: System.Windows.Media.Effects.BitmapEffectCollection
  parent: System.Windows.Media.Effects
  isExternal: false
  name: BitmapEffectCollection
  nameWithType: BitmapEffectCollection
  fullName: System.Windows.Media.Effects.BitmapEffectCollection
- uid: System.Windows.Media.Effects.BitmapEffectGroup.ChildrenProperty
  parent: System.Windows.Media.Effects.BitmapEffectGroup
  isExternal: false
  name: ChildrenProperty
  nameWithType: BitmapEffectGroup.ChildrenProperty
  fullName: System.Windows.Media.Effects.BitmapEffectGroup.ChildrenProperty
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.Media.Effects.BitmapEffectGroup.Clone
  parent: System.Windows.Media.Effects.BitmapEffectGroup
  isExternal: false
  name: Clone()
  nameWithType: BitmapEffectGroup.Clone()
  fullName: System.Windows.Media.Effects.BitmapEffectGroup.Clone()
- uid: System.Windows.Media.Effects.BitmapEffectGroup
  parent: System.Windows.Media.Effects
  isExternal: false
  name: BitmapEffectGroup
  nameWithType: BitmapEffectGroup
  fullName: System.Windows.Media.Effects.BitmapEffectGroup
- uid: System.Windows.Media.Effects.BitmapEffectGroup.CloneCurrentValue
  parent: System.Windows.Media.Effects.BitmapEffectGroup
  isExternal: false
  name: CloneCurrentValue()
  nameWithType: BitmapEffectGroup.CloneCurrentValue()
  fullName: System.Windows.Media.Effects.BitmapEffectGroup.CloneCurrentValue()
- uid: System.Windows.Media.Effects.BitmapEffectGroup.CreateInstanceCore
  parent: System.Windows.Media.Effects.BitmapEffectGroup
  isExternal: false
  name: CreateInstanceCore()
  nameWithType: BitmapEffectGroup.CreateInstanceCore()
  fullName: System.Windows.Media.Effects.BitmapEffectGroup.CreateInstanceCore()
- uid: System.Windows.Freezable
  parent: System.Windows
  isExternal: false
  name: Freezable
  nameWithType: Freezable
  fullName: System.Windows.Freezable
- uid: System.Windows.Media.Effects.BitmapEffectGroup.CreateUnmanagedEffect
  parent: System.Windows.Media.Effects.BitmapEffectGroup
  isExternal: false
  name: CreateUnmanagedEffect()
  nameWithType: BitmapEffectGroup.CreateUnmanagedEffect()
  fullName: System.Windows.Media.Effects.BitmapEffectGroup.CreateUnmanagedEffect()
- uid: System.Runtime.InteropServices.SafeHandle
  parent: System.Runtime.InteropServices
  isExternal: true
  name: SafeHandle
  nameWithType: SafeHandle
  fullName: System.Runtime.InteropServices.SafeHandle
- uid: System.Windows.Media.Effects.BitmapEffectGroup.UpdateUnmanagedPropertyState(System.Runtime.InteropServices.SafeHandle)
  parent: System.Windows.Media.Effects.BitmapEffectGroup
  isExternal: false
  name: UpdateUnmanagedPropertyState(SafeHandle)
  nameWithType: BitmapEffectGroup.UpdateUnmanagedPropertyState(SafeHandle)
  fullName: System.Windows.Media.Effects.BitmapEffectGroup.UpdateUnmanagedPropertyState(SafeHandle)
- uid: System.Windows.Media.Effects.BitmapEffectGroup.#ctor*
  parent: System.Windows.Media.Effects.BitmapEffectGroup
  isExternal: false
  name: BitmapEffectGroup
  nameWithType: BitmapEffectGroup.BitmapEffectGroup
- uid: System.Windows.Media.Effects.BitmapEffectGroup.Children*
  parent: System.Windows.Media.Effects.BitmapEffectGroup
  isExternal: false
  name: Children
  nameWithType: BitmapEffectGroup.Children
- uid: System.Windows.Media.Effects.BitmapEffectGroup.Clone*
  parent: System.Windows.Media.Effects.BitmapEffectGroup
  isExternal: false
  name: Clone
  nameWithType: BitmapEffectGroup.Clone
- uid: System.Windows.Media.Effects.BitmapEffectGroup.CloneCurrentValue*
  parent: System.Windows.Media.Effects.BitmapEffectGroup
  isExternal: false
  name: CloneCurrentValue
  nameWithType: BitmapEffectGroup.CloneCurrentValue
- uid: System.Windows.Media.Effects.BitmapEffectGroup.CreateInstanceCore*
  parent: System.Windows.Media.Effects.BitmapEffectGroup
  isExternal: false
  name: CreateInstanceCore
  nameWithType: BitmapEffectGroup.CreateInstanceCore
- uid: System.Windows.Media.Effects.BitmapEffectGroup.CreateUnmanagedEffect*
  parent: System.Windows.Media.Effects.BitmapEffectGroup
  isExternal: false
  name: CreateUnmanagedEffect
  nameWithType: BitmapEffectGroup.CreateUnmanagedEffect
- uid: System.Windows.Media.Effects.BitmapEffectGroup.UpdateUnmanagedPropertyState*
  parent: System.Windows.Media.Effects.BitmapEffectGroup
  isExternal: false
  name: UpdateUnmanagedPropertyState
  nameWithType: BitmapEffectGroup.UpdateUnmanagedPropertyState
