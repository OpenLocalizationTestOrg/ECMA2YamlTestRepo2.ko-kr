### YamlMime:ManagedReference
items:
- uid: System.Data.Common.DbDataReader
  id: DbDataReader
  children:
  - System.Data.Common.DbDataReader.#ctor
  - System.Data.Common.DbDataReader.Close
  - System.Data.Common.DbDataReader.Depth
  - System.Data.Common.DbDataReader.Dispose
  - System.Data.Common.DbDataReader.Dispose(System.Boolean)
  - System.Data.Common.DbDataReader.FieldCount
  - System.Data.Common.DbDataReader.GetBoolean(System.Int32)
  - System.Data.Common.DbDataReader.GetByte(System.Int32)
  - System.Data.Common.DbDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  - System.Data.Common.DbDataReader.GetChar(System.Int32)
  - System.Data.Common.DbDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  - System.Data.Common.DbDataReader.GetData(System.Int32)
  - System.Data.Common.DbDataReader.GetDataTypeName(System.Int32)
  - System.Data.Common.DbDataReader.GetDateTime(System.Int32)
  - System.Data.Common.DbDataReader.GetDbDataReader(System.Int32)
  - System.Data.Common.DbDataReader.GetDecimal(System.Int32)
  - System.Data.Common.DbDataReader.GetDouble(System.Int32)
  - System.Data.Common.DbDataReader.GetEnumerator
  - System.Data.Common.DbDataReader.GetFieldType(System.Int32)
  - System.Data.Common.DbDataReader.GetFieldValue``1(System.Int32)
  - System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32)
  - System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32,System.``0hreading.Cancellation``0oken)
  - System.Data.Common.DbDataReader.GetFloat(System.Int32)
  - System.Data.Common.DbDataReader.GetGuid(System.Int32)
  - System.Data.Common.DbDataReader.GetInt16(System.Int32)
  - System.Data.Common.DbDataReader.GetInt32(System.Int32)
  - System.Data.Common.DbDataReader.GetInt64(System.Int32)
  - System.Data.Common.DbDataReader.GetName(System.Int32)
  - System.Data.Common.DbDataReader.GetOrdinal(System.String)
  - System.Data.Common.DbDataReader.GetProviderSpecificFieldType(System.Int32)
  - System.Data.Common.DbDataReader.GetProviderSpecificValue(System.Int32)
  - System.Data.Common.DbDataReader.GetProviderSpecificValues(System.Object[])
  - System.Data.Common.DbDataReader.GetSchemaTable
  - System.Data.Common.DbDataReader.GetStream(System.Int32)
  - System.Data.Common.DbDataReader.GetString(System.Int32)
  - System.Data.Common.DbDataReader.GetTextReader(System.Int32)
  - System.Data.Common.DbDataReader.GetValue(System.Int32)
  - System.Data.Common.DbDataReader.GetValues(System.Object[])
  - System.Data.Common.DbDataReader.HasRows
  - System.Data.Common.DbDataReader.IsClosed
  - System.Data.Common.DbDataReader.IsDBNull(System.Int32)
  - System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32)
  - System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32,System.Threading.CancellationToken)
  - System.Data.Common.DbDataReader.Item(System.Int32)
  - System.Data.Common.DbDataReader.Item(System.String)
  - System.Data.Common.DbDataReader.NextResult
  - System.Data.Common.DbDataReader.NextResultAsync
  - System.Data.Common.DbDataReader.NextResultAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbDataReader.Read
  - System.Data.Common.DbDataReader.ReadAsync
  - System.Data.Common.DbDataReader.ReadAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbDataReader.RecordsAffected
  - System.Data.Common.DbDataReader.System#Data#IDataRecord#GetData(System.Int32)
  - System.Data.Common.DbDataReader.VisibleFieldCount
  langs:
  - csharp
  name: DbDataReader
  nameWithType: DbDataReader
  fullName: System.Data.Common.DbDataReader
  type: Class
  summary: "데이터 소스에서 앞 으로만 이동 가능한 행 스트림을 읽습니다."
  syntax:
    content: 'public abstract class DbDataReader : MarshalByRefObject, IDisposable, System.Collections.IEnumerable, System.Data.IDataReader'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  implements:
  - System.Collections.IEnumerable
  - System.Data.IDataReader
  - System.IDisposable
  inheritedMembers:
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.#ctor
  id: '#ctor'
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: DbDataReader()
  nameWithType: DbDataReader.DbDataReader()
  fullName: System.Data.Common.DbDataReader.DbDataReader()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Data.Common.DbDataReader&quot;> </xref> 클래스입니다."
  syntax:
    content: protected DbDataReader ();
    parameters: []
  overload: System.Data.Common.DbDataReader.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.Close
  id: Close
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: Close()
  nameWithType: DbDataReader.Close()
  fullName: System.Data.Common.DbDataReader.Close()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "닫습니다는 <xref href=&quot;System.Data.Common.DbDataReader&quot;> </xref> 개체입니다."
  syntax:
    content: public virtual void Close ();
    parameters: []
  overload: System.Data.Common.DbDataReader.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.Depth
  id: Depth
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: Depth
  nameWithType: DbDataReader.Depth
  fullName: System.Data.Common.DbDataReader.Depth
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "현재 행의 중첩 수준을 나타내는 값을 가져옵니다."
  remarks: "가장 바깥쪽 테이블의 중첩 수준은&0;입니다."
  syntax:
    content: public abstract int Depth { get; }
    return:
      type: System.Int32
      description: "현재 행의 중첩 깊이입니다."
  overload: System.Data.Common.DbDataReader.Depth*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.Dispose
  id: Dispose
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: Dispose()
  nameWithType: DbDataReader.Dispose()
  fullName: System.Data.Common.DbDataReader.Dispose()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "현재 인스턴스에서 사용 하는 모든 리소스를 해제는 <xref href=&quot;System.Data.Common.DbDataReader&quot;> </xref> 클래스입니다."
  remarks: "호출 `Dispose` <xref:System.Data.Common.DbDataReader>.</xref:System.Data.Common.DbDataReader> 를 사용 하 여 작업을 마쳤으면 `Dispose` 메서드는 <xref:System.Data.Common.DbDataReader>불안정 한 상태가.</xref:System.Data.Common.DbDataReader> 호출한 후 `Dispose`에 대 한 모든 참조를 해제 해야는 <xref:System.Data.Common.DbDataReader>가비지 수집기는 메모리를 회수할 수 있도록 하는 <xref:System.Data.Common.DbDataReader>차지한.</xref:System.Data.Common.DbDataReader> </xref:System.Data.Common.DbDataReader>       자세한 내용은 참조 [관리 되지 않는 리소스 정리](~/add/includes/ajax-current-ext-md.md) 및 [Dispose 메서드를 구현](~/add/includes/ajax-current-ext-md.md)합니다.      > [!NOTE] > 항상 호출 `Dispose` <xref:System.Data.Common.DbDataReader>.</xref:System.Data.Common.DbDataReader> 에 대 한 마지막 참조를 해제 하기 전에 사용 중인 리소스가 가비지 수집기 호출할 때까지 해제 되지 것입니다 그렇지 않은 경우는 <xref:System.Data.Common.DbDataReader>개체의 `Finalize` 메서드.</xref:System.Data.Common.DbDataReader>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Data.Common.DbDataReader.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: DbDataReader.Dispose(Boolean)
  fullName: System.Data.Common.DbDataReader.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "사용 하는 관리 되는 리소스를 해제는 <xref href=&quot;System.Data.Common.DbDataReader&quot;> </xref> 관리 되지 않는 리소스를 선택적으로 해제 합니다."
  remarks: "이 메서드를 호출 <xref:System.Data.SqlClient.SqlDataReader.Close%2A>.</xref:System.Data.SqlClient.SqlDataReader.Close%2A>"
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>관리 되는 관리 되지 않는 리소스만 해제 하려면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 만 관리 되지 않는 리소스를 해제 합니다."
  overload: System.Data.Common.DbDataReader.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.FieldCount
  id: FieldCount
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: FieldCount
  nameWithType: DbDataReader.FieldCount
  fullName: System.Data.Common.DbDataReader.FieldCount
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "현재 행에서 열 수를 가져옵니다."
  remarks: "숨김된 필드도 포함 됩니다. 사용 하 여 <xref:System.Data.Common.DbDataReader.VisibleFieldCount%2A>숨겨진된 필드를 제외 하려면.</xref:System.Data.Common.DbDataReader.VisibleFieldCount%2A>"
  syntax:
    content: public abstract int FieldCount { get; }
    return:
      type: System.Int32
      description: "현재 행에서 열 수를 지정 합니다."
  overload: System.Data.Common.DbDataReader.FieldCount*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "SQL Server의 인스턴스로 현재 연결이 없습니다."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetBoolean(System.Int32)
  id: GetBoolean(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetBoolean(Int32)
  nameWithType: DbDataReader.GetBoolean(Int32)
  fullName: System.Data.Common.DbDataReader.GetBoolean(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "부울으로 지정 된 열의 값을 가져옵니다."
  syntax:
    content: public abstract bool GetBoolean (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "서 수는&0;부터 시작 열입니다."
    return:
      type: System.Boolean
      description: "지정 된 열의 값입니다."
  overload: System.Data.Common.DbDataReader.GetBoolean*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "지정한 캐스트가 잘못 되었습니다."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetByte(System.Int32)
  id: GetByte(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetByte(Int32)
  nameWithType: DbDataReader.GetByte(Int32)
  fullName: System.Data.Common.DbDataReader.GetByte(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "지정 된 열의 값을 바이트로 가져옵니다."
  syntax:
    content: public abstract byte GetByte (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "서 수는&0;부터 시작 열입니다."
    return:
      type: System.Byte
      description: "지정 된 열의 값입니다."
  overload: System.Data.Common.DbDataReader.GetByte*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "지정한 캐스트가 잘못 되었습니다."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  id: GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetBytes(Int32,Int64,Byte[],Int32,Int32)
  nameWithType: DbDataReader.GetBytes(Int32,Int64,Byte[],Int32,Int32)
  fullName: System.Data.Common.DbDataReader.GetBytes(Int32,Int64,Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "가 나타내는 위치부터 시작 하는 지정 된 열에서 바이트 스트림을 읽습니다 <code> dataOffset </code>를 가리키는 위치에서 시작 버퍼로 <code> bufferOffset </code>합니다."
  syntax:
    content: public abstract long GetBytes (int ordinal, long dataOffset, byte[] buffer, int bufferOffset, int length);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "서 수는&0;부터 시작 열입니다."
    - id: dataOffset
      type: System.Int64
      description: "읽기 작업을 시작할 행 내의 인덱스입니다."
    - id: buffer
      type: System.Byte[]
      description: "데이터를 복사할 대상 버퍼입니다."
    - id: bufferOffset
      type: System.Int32
      description: "데이터를 복사할 버퍼와 인덱스입니다."
    - id: length
      type: System.Int32
      description: "읽을 문자 최대 수입니다."
    return:
      type: System.Int64
      description: "실제 읽은 바이트 수입니다."
  overload: System.Data.Common.DbDataReader.GetBytes*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "지정한 캐스트가 잘못 되었습니다."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetChar(System.Int32)
  id: GetChar(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetChar(Int32)
  nameWithType: DbDataReader.GetChar(Int32)
  fullName: System.Data.Common.DbDataReader.GetChar(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "단일 문자로 지정 된 열의 값을 가져옵니다."
  syntax:
    content: public abstract char GetChar (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "서 수는&0;부터 시작 열입니다."
    return:
      type: System.Char
      description: "지정 된 열의 값입니다."
  overload: System.Data.Common.DbDataReader.GetChar*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "지정한 캐스트가 잘못 되었습니다."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  id: GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetChars(Int32,Int64,Char[],Int32,Int32)
  nameWithType: DbDataReader.GetChars(Int32,Int64,Char[],Int32,Int32)
  fullName: System.Data.Common.DbDataReader.GetChars(Int32,Int64,Char[],Int32,Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "가 나타내는 위치부터 시작 하는 지정 된 열에서 문자 스트림을 읽습니다 <code> dataOffset </code>를 가리키는 위치에서 시작 버퍼로 <code> bufferOffset </code>합니다."
  syntax:
    content: public abstract long GetChars (int ordinal, long dataOffset, char[] buffer, int bufferOffset, int length);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "서 수는&0;부터 시작 열입니다."
    - id: dataOffset
      type: System.Int64
      description: "읽기 작업을 시작할 행 내의 인덱스입니다."
    - id: buffer
      type: System.Char[]
      description: "데이터를 복사할 대상 버퍼입니다."
    - id: bufferOffset
      type: System.Int32
      description: "데이터를 복사할 버퍼와 인덱스입니다."
    - id: length
      type: System.Int32
      description: "읽을 문자 최대 수입니다."
    return:
      type: System.Int64
      description: "실제 읽은 문자 수입니다."
  overload: System.Data.Common.DbDataReader.GetChars*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetData(System.Int32)
  id: GetData(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetData(Int32)
  nameWithType: DbDataReader.GetData(Int32)
  fullName: System.Data.Common.DbDataReader.GetData(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "반환 된 <xref href=&quot;System.Data.Common.DbDataReader&quot;> </xref> 요청된 열 서 수에 대 한 개체입니다."
  syntax:
    content: public System.Data.Common.DbDataReader GetData (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "서 수는&0;부터 시작 열입니다."
    return:
      type: System.Data.Common.DbDataReader
      description: "A <xref href=&quot;System.Data.Common.DbDataReader&quot;></xref> object."
  overload: System.Data.Common.DbDataReader.GetData*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetDataTypeName(System.Int32)
  id: GetDataTypeName(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetDataTypeName(Int32)
  nameWithType: DbDataReader.GetDataTypeName(Int32)
  fullName: System.Data.Common.DbDataReader.GetDataTypeName(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "지정 된 열 데이터 형식의 이름을 가져옵니다."
  remarks: "```  \nprivate static void GetDataTypes(String connectiongString) {       \n   using (SqlConnection conn = new SqlConnection(connectiongString)) {  \n      String queryString = \"Select [CourseID],[Title],[Credits] from [MySchool].[dbo].[Course]\";  \n      using (DbCommand command = new SqlCommand(queryString, conn)) {  \n         conn.Open();               \n         using (DbDataReader reader = command.ExecuteReader()) {  \n            for (Int32 i = 0; i < reader.FieldCount; i++) {  \n               Console.WriteLine(\"ColumnName:{0,-15}DataType:{1,-15}\",reader.GetName(i),reader.GetDataTypeName(i));  \n            }  \n         }  \n      }  \n   }  \n}  \n```"
  syntax:
    content: public abstract string GetDataTypeName (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "서 수는&0;부터 시작 열입니다."
    return:
      type: System.String
      description: "데이터 형식의 이름을 나타내는 문자열입니다."
  overload: System.Data.Common.DbDataReader.GetDataTypeName*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "지정한 캐스트가 잘못 되었습니다."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetDateTime(System.Int32)
  id: GetDateTime(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetDateTime(Int32)
  nameWithType: DbDataReader.GetDateTime(Int32)
  fullName: System.Data.Common.DbDataReader.GetDateTime(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "지정 된 열의 값을 가져옵니다는 <xref:System.DateTime>개체입니다.</xref:System.DateTime>"
  syntax:
    content: public abstract DateTime GetDateTime (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "서 수는&0;부터 시작 열입니다."
    return:
      type: System.DateTime
      description: "지정 된 열의 값입니다."
  overload: System.Data.Common.DbDataReader.GetDateTime*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "지정한 캐스트가 잘못 되었습니다."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetDbDataReader(System.Int32)
  id: GetDbDataReader(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetDbDataReader(Int32)
  nameWithType: DbDataReader.GetDbDataReader(Int32)
  fullName: System.Data.Common.DbDataReader.GetDbDataReader(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "반환 된 <xref href=&quot;System.Data.Common.DbDataReader&quot;> </xref> 에 대 한 요청된 된 열 서 수는 공급자별 구현으로 재정의할 수 있는 개체입니다."
  syntax:
    content: protected virtual System.Data.Common.DbDataReader GetDbDataReader (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "서 수는&0;부터 시작 열입니다."
    return:
      type: System.Data.Common.DbDataReader
      description: "A <xref href=&quot;System.Data.Common.DbDataReader&quot;></xref> object."
  overload: System.Data.Common.DbDataReader.GetDbDataReader*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetDecimal(System.Int32)
  id: GetDecimal(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetDecimal(Int32)
  nameWithType: DbDataReader.GetDecimal(Int32)
  fullName: System.Data.Common.DbDataReader.GetDecimal(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "지정 된 열의 값을 가져옵니다는 <xref:System.Decimal>개체입니다.</xref:System.Decimal>"
  syntax:
    content: public abstract decimal GetDecimal (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "서 수는&0;부터 시작 열입니다."
    return:
      type: System.Decimal
      description: "지정 된 열의 값입니다."
  overload: System.Data.Common.DbDataReader.GetDecimal*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "지정한 캐스트가 잘못 되었습니다."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetDouble(System.Int32)
  id: GetDouble(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetDouble(Int32)
  nameWithType: DbDataReader.GetDouble(Int32)
  fullName: System.Data.Common.DbDataReader.GetDouble(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "배정밀도 부동 소수점 숫자로 지정 된 열의 값을 가져옵니다."
  syntax:
    content: public abstract double GetDouble (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "서 수는&0;부터 시작 열입니다."
    return:
      type: System.Double
      description: "지정 된 열의 값입니다."
  overload: System.Data.Common.DbDataReader.GetDouble*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "지정한 캐스트가 잘못 되었습니다."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetEnumerator
  id: GetEnumerator
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: DbDataReader.GetEnumerator()
  fullName: System.Data.Common.DbDataReader.GetEnumerator()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "반환 된 <xref:System.Collections.IEnumerator>데이터 판독기의 행을 반복에 사용할 수 있는.</xref:System.Collections.IEnumerator>"
  remarks: "이 메서드를 사용 하 여 명시적 생성자를 검색할 수 있지만 언어에서 지 원하는 명시적 **foreach** 구성 하는 것이 데이터 판독기의 행을 반복 하는 직접 루프 구문을 사용 합니다.       이 메서드를 구현 하는 경우의 새 인스턴스를 반환 해야 <xref:System.Data.Common.DbEnumerator>해당 열거형을 반환 하는지 확인 하거나 <xref:System.Data.IDataRecord>개체.</xref:System.Data.IDataRecord> </xref:System.Data.Common.DbEnumerator>"
  syntax:
    content: public abstract System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "<xref:System.Collections.IEnumerator>데이터 판독기의 행을 반복에 사용할 수 있는.</xref:System.Collections.IEnumerator>"
  overload: System.Data.Common.DbDataReader.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetFieldType(System.Int32)
  id: GetFieldType(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetFieldType(Int32)
  nameWithType: DbDataReader.GetFieldType(Int32)
  fullName: System.Data.Common.DbDataReader.GetFieldType(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "지정 된 열의 데이터 형식을 가져옵니다."
  syntax:
    content: public abstract Type GetFieldType (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "서 수는&0;부터 시작 열입니다."
    return:
      type: System.Type
      description: "지정 된 열의 데이터 형식입니다."
  overload: System.Data.Common.DbDataReader.GetFieldType*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "지정한 캐스트가 잘못 되었습니다."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetFieldValue``1(System.Int32)
  id: GetFieldValue``1(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetFieldValue(Int32)
  nameWithType: DbDataReader.GetFieldValue(Int32)
  fullName: System.Data.Common.DbDataReader.GetFieldValue(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  syntax:
    content: public virtual T GetFieldValue<T> (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "추가할 수 있습니다."
    return:
      type: T
      description: "추가할 수 있습니다."
  overload: System.Data.Common.DbDataReader.GetFieldValue<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32)
  id: GetFieldValueAsync``1(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetFieldValueAsync(Int32)
  nameWithType: DbDataReader.GetFieldValueAsync(Int32)
  fullName: System.Data.Common.DbDataReader.GetFieldValueAsync(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  syntax:
    content: public System.Threading.Tasks.Task<T> GetFieldValueAsync<T> (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "추가할 수 있습니다."
    return:
      type: System.Threading.Tasks.Task{T}
      description: "추가할 수 있습니다."
  overload: System.Data.Common.DbDataReader.GetFieldValueAsync<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32,System.``0hreading.Cancellation``0oken)
  id: GetFieldValueAsync``1(System.Int32,System.``0hreading.Cancellation``0oken)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetFieldValueAsync(Int32,CancellationToken)
  nameWithType: DbDataReader.GetFieldValueAsync(Int32,CancellationToken)
  fullName: System.Data.Common.DbDataReader.GetFieldValueAsync(Int32,CancellationToken)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  syntax:
    content: public virtual System.Threading.Tasks.Task<T> GetFieldValueAsync<T> (int ordinal, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "추가할 수 있습니다."
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "추가할 수 있습니다."
    return:
      type: System.Threading.Tasks.Task{T}
      description: "추가할 수 있습니다."
  overload: System.Data.Common.DbDataReader.GetFieldValueAsync<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetFloat(System.Int32)
  id: GetFloat(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetFloat(Int32)
  nameWithType: DbDataReader.GetFloat(Int32)
  fullName: System.Data.Common.DbDataReader.GetFloat(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "단 정밀도 부동 소수점 숫자의 지정된 된 열의 값을 가져옵니다."
  syntax:
    content: public abstract float GetFloat (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "서 수는&0;부터 시작 열입니다."
    return:
      type: System.Single
      description: "지정 된 열의 값입니다."
  overload: System.Data.Common.DbDataReader.GetFloat*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "지정한 캐스트가 잘못 되었습니다."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetGuid(System.Int32)
  id: GetGuid(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetGuid(Int32)
  nameWithType: DbDataReader.GetGuid(Int32)
  fullName: System.Data.Common.DbDataReader.GetGuid(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "전역적으로 고유 식별자 (GUID)로 지정 된 열의 값을 가져옵니다."
  syntax:
    content: public abstract Guid GetGuid (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "서 수는&0;부터 시작 열입니다."
    return:
      type: System.Guid
      description: "지정 된 열의 값입니다."
  overload: System.Data.Common.DbDataReader.GetGuid*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "지정한 캐스트가 잘못 되었습니다."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetInt16(System.Int32)
  id: GetInt16(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetInt16(Int32)
  nameWithType: DbDataReader.GetInt16(Int32)
  fullName: System.Data.Common.DbDataReader.GetInt16(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "16 비트 부호 있는 정수로 지정 된 열의 값을 가져옵니다."
  syntax:
    content: public abstract short GetInt16 (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "서 수는&0;부터 시작 열입니다."
    return:
      type: System.Int16
      description: "지정 된 열의 값입니다."
  overload: System.Data.Common.DbDataReader.GetInt16*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "지정한 캐스트가 잘못 되었습니다."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetInt32(System.Int32)
  id: GetInt32(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetInt32(Int32)
  nameWithType: DbDataReader.GetInt32(Int32)
  fullName: System.Data.Common.DbDataReader.GetInt32(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "부호 있는 32 비트 정수로 지정 된 열의 값을 가져옵니다."
  remarks: "```  \nprivate static void GetCredits(String connectiongString) {  \n   using (SqlConnection conn = new SqlConnection(connectiongString)) {  \n      String queryString = \"Select [CourseID],[Title],[Credits] from [MySchool].[dbo].[Course]\";   \n      using (DbCommand command = new SqlCommand(queryString, conn)) {  \n         conn.Open();   \n         using (DbDataReader reader = command.ExecuteReader()) {  \n            while (reader.Read()) {  \n               // Credits column is the integer column, and you can use the GetInt32 method                        \n               // to return a a 32-bit signed integer.                       \n               Console.WriteLine(\"Course:{0,-15} Credits:{1}\",reader[1],reader.GetInt32(2));   \n            }  \n         }  \n      }  \n   }  \n}  \n```"
  syntax:
    content: public abstract int GetInt32 (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "서 수는&0;부터 시작 열입니다."
    return:
      type: System.Int32
      description: "지정 된 열의 값입니다."
  overload: System.Data.Common.DbDataReader.GetInt32*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "지정한 캐스트가 잘못 되었습니다."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetInt64(System.Int32)
  id: GetInt64(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetInt64(Int32)
  nameWithType: DbDataReader.GetInt64(Int32)
  fullName: System.Data.Common.DbDataReader.GetInt64(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "64 비트 부호 있는 정수로 지정 된 열의 값을 가져옵니다."
  syntax:
    content: public abstract long GetInt64 (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "서 수는&0;부터 시작 열입니다."
    return:
      type: System.Int64
      description: "지정 된 열의 값입니다."
  overload: System.Data.Common.DbDataReader.GetInt64*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "지정한 캐스트가 잘못 되었습니다."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetName(System.Int32)
  id: GetName(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetName(Int32)
  nameWithType: DbDataReader.GetName(Int32)
  fullName: System.Data.Common.DbDataReader.GetName(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "열의 이름을&0;부터 시작 하는 열 서 수 가져옵니다."
  syntax:
    content: public abstract string GetName (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "서 수는&0;부터 시작 열입니다."
    return:
      type: System.String
      description: "지정 된 열의 이름입니다."
  overload: System.Data.Common.DbDataReader.GetName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetOrdinal(System.String)
  id: GetOrdinal(System.String)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetOrdinal(String)
  nameWithType: DbDataReader.GetOrdinal(String)
  fullName: System.Data.Common.DbDataReader.GetOrdinal(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "열을 가져옵니다 서 수 열 이름을 지정 합니다."
  syntax:
    content: public abstract int GetOrdinal (string name);
    parameters:
    - id: name
      type: System.String
      description: "열의 이름입니다."
    return:
      type: System.Int32
      description: "서 수는&0;부터 시작 열입니다."
  overload: System.Data.Common.DbDataReader.GetOrdinal*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "지정 된 이름이 올바른 열 이름이 아닙니다."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetProviderSpecificFieldType(System.Int32)
  id: GetProviderSpecificFieldType(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetProviderSpecificFieldType(Int32)
  nameWithType: DbDataReader.GetProviderSpecificFieldType(Int32)
  fullName: System.Data.Common.DbDataReader.GetProviderSpecificFieldType(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "지정 된 열의 공급자별 필드 형식을 반환합니다."
  syntax:
    content: public virtual Type GetProviderSpecificFieldType (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "서 수는&0;부터 시작 열입니다."
    return:
      type: System.Type
      description: "<xref:System.Type>지정 된 열의 데이터 형식을 설명 하는 개체입니다.</xref:System.Type>"
  overload: System.Data.Common.DbDataReader.GetProviderSpecificFieldType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetProviderSpecificValue(System.Int32)
  id: GetProviderSpecificValue(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetProviderSpecificValue(Int32)
  nameWithType: DbDataReader.GetProviderSpecificValue(Int32)
  fullName: System.Data.Common.DbDataReader.GetProviderSpecificValue(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "<xref:System.Object>.</xref:System.Object> 의 인스턴스로 지정 된 열의 값을 가져옵니다."
  remarks: "를 반환 하는 개체의 특정 형식을 확인 하려면 <xref:System.Data.Common.DbDataReader.GetProviderSpecificFieldType%2A>.</xref:System.Data.Common.DbDataReader.GetProviderSpecificFieldType%2A> 를 사용 합니다."
  syntax:
    content: public virtual object GetProviderSpecificValue (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "서 수는&0;부터 시작 열입니다."
    return:
      type: System.Object
      description: "지정 된 열의 값입니다."
  overload: System.Data.Common.DbDataReader.GetProviderSpecificValue*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetProviderSpecificValues(System.Object[])
  id: GetProviderSpecificValues(System.Object[])
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetProviderSpecificValues(Object[])
  nameWithType: DbDataReader.GetProviderSpecificValues(Object[])
  fullName: System.Data.Common.DbDataReader.GetProviderSpecificValues(Object[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "현재 행에 대 한 컬렉션의 모든 공급자별 특성 열을 가져옵니다."
  syntax:
    content: public virtual int GetProviderSpecificValues (object[] values);
    parameters:
    - id: values
      type: System.Object[]
      description: "배열을 <xref:System.Object>특성 열을 복사할 대상.</xref:System.Object>"
    return:
      type: System.Int32
      description: "인스턴스 수가 <xref:System.Object>배열의.</xref:System.Object>"
  overload: System.Data.Common.DbDataReader.GetProviderSpecificValues*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetSchemaTable
  id: GetSchemaTable
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetSchemaTable()
  nameWithType: DbDataReader.GetSchemaTable()
  fullName: System.Data.Common.DbDataReader.GetSchemaTable()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "반환 된 <xref href=&quot;System.Data.DataTable&quot;> </xref> 의 열 메타 데이터를 설명 하는 <xref href=&quot;System.Data.Common.DbDataReader&quot;> </xref>합니다."
  syntax:
    content: public virtual System.Data.DataTable GetSchemaTable ();
    parameters: []
    return:
      type: System.Data.DataTable
      description: "A <xref href=&quot;System.Data.DataTable&quot;> </xref> 열 메타 데이터를 설명 하는 합니다."
  overload: System.Data.Common.DbDataReader.GetSchemaTable*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref> 닫혀 있습니다."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetStream(System.Int32)
  id: GetStream(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetStream(Int32)
  nameWithType: DbDataReader.GetStream(Int32)
  fullName: System.Data.Common.DbDataReader.GetStream(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "에 <xref:System.IO.Stream>.</xref:System.IO.Stream> 으로 데이터를 검색합니다."
  remarks: "GetStream을 바이트 배열로 변환 될 수 있는 값의 검색을 지원 합니다.       자세한 내용은 참조 [SqlClient 스트리밍 지원](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public virtual System.IO.Stream GetStream (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "에 <xref:System.IO.Stream>.</xref:System.IO.Stream> 으로 데이터를 검색합니다."
    return:
      type: System.IO.Stream
      description: "반환 된 개체입니다."
  overload: System.Data.Common.DbDataReader.GetStream*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "연결이 삭제 되거나 데이터 검색 중 닫힙니다.       <xref href=&quot;System.Data.Common.DbDataReader&quot;> </xref> 데이터 검색 중 닫혀 있습니다.       데이터가 읽을 수 없습니다 (예를 들어 첫 번째 <> </> *> 호출 되거나가 false를 반환 하지 않은).       순차 모드에서 이전에 읽은 열 읽기 하려고 했습니다.       진행 중인 비동기 작업이 있었습니다. 이 모든 Get에 적용 됩니다* 메서드에서 때 순차 모드에서 실행 되는 스트림을 읽는 동안 호출할 수 있습니다."
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "존재 하지 않는 열 읽기 하려고 합니다."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "반환 되는 형식은 아래 형식 중 하나 였습니다:-이진-이미지-varbinary-udt"
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetString(System.Int32)
  id: GetString(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetString(Int32)
  nameWithType: DbDataReader.GetString(Int32)
  fullName: System.Data.Common.DbDataReader.GetString(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "<xref:System.String>.</xref:System.String> 의 인스턴스로 지정 된 열의 값을 가져옵니다."
  syntax:
    content: public abstract string GetString (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "서 수는&0;부터 시작 열입니다."
    return:
      type: System.String
      description: "지정 된 열의 값입니다."
  overload: System.Data.Common.DbDataReader.GetString*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "지정한 캐스트가 잘못 되었습니다."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetTextReader(System.Int32)
  id: GetTextReader(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetTextReader(Int32)
  nameWithType: DbDataReader.GetTextReader(Int32)
  fullName: System.Data.Common.DbDataReader.GetTextReader(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "에 <xref:System.IO.TextReader>.</xref:System.IO.TextReader> 으로 데이터를 검색합니다."
  remarks: "GetTextReader 문자 배열 (문자열)로 변환할 수 있는 값의 검색을 지원 합니다.       자세한 내용은 참조 [SqlClient 스트리밍 지원](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public virtual System.IO.TextReader GetTextReader (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "에 <xref:System.IO.TextReader>.</xref:System.IO.TextReader> 으로 데이터를 검색합니다."
    return:
      type: System.IO.TextReader
      description: "반환 된 개체입니다."
  overload: System.Data.Common.DbDataReader.GetTextReader*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "연결이 삭제 되거나 데이터 검색 중 닫힙니다.       <xref href=&quot;System.Data.Common.DbDataReader&quot;> </xref> 데이터 검색 중 닫혀 있습니다.       데이터가 읽을 수 없습니다 (예를 들어 첫 번째 <> </> *> 호출 되거나가 false를 반환 하지 않은).       순차 모드에서 이전에 읽은 열 읽기 하려고 했습니다.       진행 중인 비동기 작업이 있었습니다. 이 모든 Get에 적용 됩니다* 메서드에서 때 순차 모드에서 실행 되는 스트림을 읽는 동안 호출할 수 있습니다."
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "존재 하지 않는 열 읽기 하려고 합니다."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "반환 되는 형식은 아래 형식 중 하나 였습니다: 자의-nchar ntext-nvarchar-텍스트-varchar"
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetValue(System.Int32)
  id: GetValue(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetValue(Int32)
  nameWithType: DbDataReader.GetValue(Int32)
  fullName: System.Data.Common.DbDataReader.GetValue(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "<xref:System.Object>.</xref:System.Object> 의 인스턴스로 지정 된 열의 값을 가져옵니다."
  syntax:
    content: public abstract object GetValue (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "서 수는&0;부터 시작 열입니다."
    return:
      type: System.Object
      description: "지정 된 열의 값입니다."
  overload: System.Data.Common.DbDataReader.GetValue*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetValues(System.Object[])
  id: GetValues(System.Object[])
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetValues(Object[])
  nameWithType: DbDataReader.GetValues(Object[])
  fullName: System.Data.Common.DbDataReader.GetValues(Object[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "현재 행의 열 값이 있는 개체의 배열을 채웁니다."
  syntax:
    content: public abstract int GetValues (object[] values);
    parameters:
    - id: values
      type: System.Object[]
      description: "배열을 <xref:System.Object>특성 열을 복사할 대상.</xref:System.Object>"
    return:
      type: System.Int32
      description: "인스턴스 수가 <xref:System.Object>배열의.</xref:System.Object>"
  overload: System.Data.Common.DbDataReader.GetValues*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.HasRows
  id: HasRows
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: HasRows
  nameWithType: DbDataReader.HasRows
  fullName: System.Data.Common.DbDataReader.HasRows
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "나타내는 값을 가져옵니다 여부이 <xref href=&quot;System.Data.Common.DbDataReader&quot;> </xref> 하나 이상의 행을 포함 합니다."
  syntax:
    content: public abstract bool HasRows { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우는 <xref href=&quot;System.Data.Common.DbDataReader&quot;> </xref> 하나 이상의 행을 포함 하지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Data.Common.DbDataReader.HasRows*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.IsClosed
  id: IsClosed
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: IsClosed
  nameWithType: DbDataReader.IsClosed
  fullName: System.Data.Common.DbDataReader.IsClosed
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "나타내는 값을 가져옵니다 여부는 <xref href=&quot;System.Data.Common.DbDataReader&quot;> </xref> 닫혀 있습니다."
  syntax:
    content: public abstract bool IsClosed { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우는 <xref href=&quot;System.Data.Common.DbDataReader&quot;> </xref> 닫혀 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Data.Common.DbDataReader.IsClosed*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref> 닫혀 있습니다."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.IsDBNull(System.Int32)
  id: IsDBNull(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: IsDBNull(Int32)
  nameWithType: DbDataReader.IsDBNull(Int32)
  fullName: System.Data.Common.DbDataReader.IsDBNull(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "열에 존재 하지 않거나 누락 된 값이 들어 있는지 여부를 나타내는 값을 가져옵니다."
  remarks: "Get 메서드는 형식화 된를 호출 하기 전에 null 열 값을 확인 하려면이 메서드를 호출 (예를 들어 <xref:System.Data.Common.DbDataReader.GetByte%2A>, <xref:System.Data.Common.DbDataReader.GetChar%2A>등)에 오류가 발생 하지 않도록 합니다.</xref:System.Data.Common.DbDataReader.GetChar%2A> </xref:System.Data.Common.DbDataReader.GetByte%2A>"
  syntax:
    content: public abstract bool IsDBNull (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "서 수는&0;부터 시작 열입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>지정 된 열은에 해당 하는 경우 <xref href=&quot;System.DBNull&quot;> </xref>고, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Data.Common.DbDataReader.IsDBNull*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32)
  id: IsDBNullAsync(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: IsDBNullAsync(Int32)
  nameWithType: DbDataReader.IsDBNullAsync(Int32)
  fullName: System.Data.Common.DbDataReader.IsDBNullAsync(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "비동기 버전의 <xref:System.Data.Common.DbDataReader.IsDBNull*>, 열에 존재 하지 않거나 누락 된 값이 들어 있는지 여부를 나타내는 값을 가져옵니다입니다.</xref:System.Data.Common.DbDataReader.IsDBNull*>"
  remarks: "자세한 내용은 참조 [SqlClient 스트리밍 지원](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public System.Threading.Tasks.Task<bool> IsDBNullAsync (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "검색할&0;부터 시작 하는 열입니다."
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>지정 된 열 값에 해당 하는 경우 <xref uid=&quot;langword_csharp_DBNull&quot; name=&quot;DBNull&quot; href=&quot;&quot;> </xref> 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Data.Common.DbDataReader.IsDBNullAsync*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "연결이 삭제 되거나 데이터 검색 중 닫힙니다.       <xref href=&quot;System.Data.Common.DbDataReader&quot;> </xref> 데이터 검색 중 닫혀 있습니다.       데이터가 읽을 수 없습니다 (예를 들어 첫 번째 <> </> *> 호출 되거나가 false를 반환 하지 않은).       순차 모드에서 이전에 읽은 열 읽기 하려고 합니다.       진행 중인 비동기 작업이 있었습니다. 이 모든 Get에 적용 됩니다* 메서드에서 때 순차 모드에서 실행 되는 스트림을 읽는 동안 호출할 수 있습니다."
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "존재 하지 않는 열 읽기 하려고 합니다."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32,System.Threading.CancellationToken)
  id: IsDBNullAsync(System.Int32,System.Threading.CancellationToken)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: IsDBNullAsync(Int32,CancellationToken)
  nameWithType: DbDataReader.IsDBNullAsync(Int32,CancellationToken)
  fullName: System.Data.Common.DbDataReader.IsDBNullAsync(Int32,CancellationToken)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "비동기 버전의 <xref:System.Data.Common.DbDataReader.IsDBNull*>, 열에 존재 하지 않거나 누락 된 값이 들어 있는지 여부를 나타내는 값을 가져옵니다입니다.</xref:System.Data.Common.DbDataReader.IsDBNull*> 필요에 따라 작업을 취소 해야 함을 알림을 보냅니다."
  remarks: "자세한 내용은 참조 [SqlClient 스트리밍 지원](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public virtual System.Threading.Tasks.Task<bool> IsDBNullAsync (int ordinal, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "검색할&0;부터 시작 하는 열입니다."
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "작업을 취소 해야 한다는 알림을 전파 하는 취소 명령입니다. 취소를 보장 하지는 않습니다. 설정 <xref uid=&quot;langword_csharp_CancellationToken.None&quot; name=&quot;CancellationToken.None&quot; href=&quot;&quot;> </xref> 하면이 메서드가 <xref:System.Data.Common.DbDataReader.IsDBNullAsync*>.</xref:System.Data.Common.DbDataReader.IsDBNullAsync*> 같음 반환된 된 작업 취소 됨으로 표시 되어야 합니다."
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>지정 된 열 값에 해당 하는 경우 <xref uid=&quot;langword_csharp_DBNull&quot; name=&quot;DBNull&quot; href=&quot;&quot;> </xref> 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Data.Common.DbDataReader.IsDBNullAsync*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "연결이 삭제 되거나 데이터 검색 중 닫힙니다.       <xref href=&quot;System.Data.Common.DbDataReader&quot;> </xref> 데이터 검색 중 닫혀 있습니다.       데이터가 읽을 수 없습니다 (예를 들어 첫 번째 <> </> *> 호출 되거나가 false를 반환 하지 않은).       순차 모드에서 이전에 읽은 열 읽기 하려고 합니다.       진행 중인 비동기 작업이 있었습니다. 이 모든 Get에 적용 됩니다* 메서드에서 때 순차 모드에서 실행 되는 스트림을 읽는 동안 호출할 수 있습니다."
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "존재 하지 않는 열 읽기 하려고 합니다."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: DbDataReader.Item(Int32)
  fullName: System.Data.Common.DbDataReader.Item(Int32)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "<xref:System.Object>.</xref:System.Object> 의 인스턴스로 지정 된 열의 값을 가져옵니다."
  syntax:
    content: public abstract object this[int ordinal] { get; }
    parameters:
    - id: ordinal
      type: System.Int32
      description: "서 수는&0;부터 시작 열입니다."
    return:
      type: System.Object
      description: "지정 된 열의 값입니다."
  overload: System.Data.Common.DbDataReader.Item*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "전달 된 <xref:System.Data.IDataRecord.FieldCount*>.</xref:System.Data.IDataRecord.FieldCount*> 0k 범위를 벗어납니다."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.Item(System.String)
  id: Item(System.String)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: Item(String)
  nameWithType: DbDataReader.Item(String)
  fullName: System.Data.Common.DbDataReader.Item(String)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "<xref:System.Object>.</xref:System.Object> 의 인스턴스로 지정 된 열의 값을 가져옵니다."
  syntax:
    content: public abstract object this[string name] { get; }
    parameters:
    - id: name
      type: System.String
      description: "열의 이름입니다."
    return:
      type: System.Object
      description: "지정 된 열의 값입니다."
  overload: System.Data.Common.DbDataReader.Item*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "지정한 이름 가진 열을 찾았습니다."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.NextResult
  id: NextResult
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: NextResult()
  nameWithType: DbDataReader.NextResult()
  fullName: System.Data.Common.DbDataReader.NextResult()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "일괄 처리 문의 결과 읽을 때 판독기를 다음 결과로 이동 합니다."
  remarks: "이 메서드를 사용 하면 일괄 처리는 데이터 공급자에 제출 될 때 반환 되는 여러 결과 집합을 처리할 수 있습니다."
  syntax:
    content: public abstract bool NextResult ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>결과 집합이 더 있는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Data.Common.DbDataReader.NextResult*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.NextResultAsync
  id: NextResultAsync
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: NextResultAsync()
  nameWithType: DbDataReader.NextResultAsync()
  fullName: System.Data.Common.DbDataReader.NextResultAsync()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "비동기 버전 <> </> *>, 일괄 처리 문의 결과 읽을 때 판독기를 다음 결과 이동입니다.       호출 <> </> *> CancellationToken.None을 사용 합니다."
  remarks: "비동기 프로그래밍에 대 한 자세한 내용은 참조 [비동기 프로그래밍](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public System.Threading.Tasks.Task<bool> NextResultAsync ();
    parameters: []
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: "비동기 작업을 나타내는 작업입니다."
  overload: System.Data.Common.DbDataReader.NextResultAsync*
  exceptions:
  - type: System.Data.Common.DbException
    commentId: T:System.Data.Common.DbException
    description: "명령 텍스트를 실행 하는 동안 오류가 발생 했습니다."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.NextResultAsync(System.Threading.CancellationToken)
  id: NextResultAsync(System.Threading.CancellationToken)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: NextResultAsync(CancellationToken)
  nameWithType: DbDataReader.NextResultAsync(CancellationToken)
  fullName: System.Data.Common.DbDataReader.NextResultAsync(CancellationToken)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "이의 비동기 버전 <> </> *> 합니다. 공급자는 적절 한 구현을 재정의 해야 합니다. <code> cancellationToken </code> 필요에 따라 무시 될 수 있습니다.       기본 구현은 동기 호출 <> </> *> 메서드 호출 스레드를 차단 하는 완료 작업을 반환 합니다. 기본 구현은 전달 이미 취소 된 경우 취소 된 작업을 반환 합니다 <code> cancellationToken </code>합니다. throw 된 예외 <xref:System.Data.Common.DbDataReader.NextResult*>반환 된 작업 예외 속성을 통해 전달 됩니다.</xref:System.Data.Common.DbDataReader.NextResult*>       다른 메서드 및 DbDataReader 개체의 속성을 호출 해서는 안됩니다 동안 반환 된 작업이 아직 완료 되지 않았습니다."
  remarks: "비동기 프로그래밍에 대 한 자세한 내용은 참조 [비동기 프로그래밍](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public virtual System.Threading.Tasks.Task<bool> NextResultAsync (System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "취소 명령입니다."
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: "비동기 작업을 나타내는 작업입니다."
  overload: System.Data.Common.DbDataReader.NextResultAsync*
  exceptions:
  - type: System.Data.Common.DbException
    commentId: T:System.Data.Common.DbException
    description: "명령 텍스트를 실행 하는 동안 오류가 발생 했습니다."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.Read
  id: Read
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: Read()
  nameWithType: DbDataReader.Read()
  fullName: System.Data.Common.DbDataReader.Read()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "판독기는 결과 집합의 다음 레코드로 이동합니다."
  remarks: "데이터 판독기의 기본 위치는 첫 번째 레코드 바로 앞 이므로 따라서 데이터 액세스를 시작 하는 Read를 호출 해야 합니다."
  syntax:
    content: public abstract bool Read ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>행이 더 있는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Data.Common.DbDataReader.Read*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.ReadAsync
  id: ReadAsync
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: ReadAsync()
  nameWithType: DbDataReader.ReadAsync()
  fullName: System.Data.Common.DbDataReader.ReadAsync()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "비동기 버전 <> </> *>, 판독기를 결과 집합의 다음 레코드로 이동입니다. 이 메서드를 호출 <> </> *> CancellationToken.None을 사용 합니다."
  remarks: "비동기 프로그래밍에 대 한 자세한 내용은 참조 [비동기 프로그래밍](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public System.Threading.Tasks.Task<bool> ReadAsync ();
    parameters: []
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: "비동기 작업을 나타내는 작업입니다."
  overload: System.Data.Common.DbDataReader.ReadAsync*
  exceptions:
  - type: System.Data.Common.DbException
    commentId: T:System.Data.Common.DbException
    description: "명령 텍스트를 실행 하는 동안 오류가 발생 했습니다."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.ReadAsync(System.Threading.CancellationToken)
  id: ReadAsync(System.Threading.CancellationToken)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: ReadAsync(CancellationToken)
  nameWithType: DbDataReader.ReadAsync(CancellationToken)
  fullName: System.Data.Common.DbDataReader.ReadAsync(CancellationToken)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "이의 비동기 버전 <> </> *> 합니다.  공급자는 적절 한 구현을 재정의 해야 합니다. CancellationToken은 선택적으로 무시할 수 있습니다.       기본 구현은 동기 호출 <> </> *> 메서드 호출 스레드를 차단 하는 완료 작업을 반환 합니다. 기본 구현은 이미 취소 된 cancellationToken을 전달 하는 경우 취소 된 작업을 반환 합니다.  읽기에서 발생 한 예외는 반환 된 작업 예외 속성을 통해 전달 됩니다.       다른 메서드 및 속성을 호출 하지 않고는 <xref uid=&quot;langword_csharp_DbDataReader&quot; name=&quot;DbDataReader&quot; href=&quot;&quot;> </xref> 반환 된 작업이 완료 될 때까지 개체입니다."
  remarks: "비동기 프로그래밍에 대 한 자세한 내용은 참조 [비동기 프로그래밍](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public virtual System.Threading.Tasks.Task<bool> ReadAsync (System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "취소 명령입니다."
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: "비동기 작업을 나타내는 작업입니다."
  overload: System.Data.Common.DbDataReader.ReadAsync*
  exceptions:
  - type: System.Data.Common.DbException
    commentId: T:System.Data.Common.DbException
    description: "명령 텍스트를 실행 하는 동안 오류가 발생 했습니다."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.RecordsAffected
  id: RecordsAffected
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: RecordsAffected
  nameWithType: DbDataReader.RecordsAffected
  fullName: System.Data.Common.DbDataReader.RecordsAffected
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "변경, 삽입 또는 SQL 문 실행 하 여 삭제 된 행의 수를 가져옵니다."
  remarks: "`RecordsAffected` 모든 행을 닫을 때까지 속성이 설정 되지 않은 `DataReader`합니다."
  syntax:
    content: public abstract int RecordsAffected { get; }
    return:
      type: System.Int32
      description: "변경, 삽입 또는 삭제 된 행의 수입니다. SELECT 문의;에 대 한-1 행이 없는 영향을 받은 경우에 0 또는 문이 실패 했습니다."
  overload: System.Data.Common.DbDataReader.RecordsAffected*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.System#Data#IDataRecord#GetData(System.Int32)
  id: System#Data#IDataRecord#GetData(System.Int32)
  isEii: true
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: System.Data.IDataRecord.GetData(Int32)
  nameWithType: DbDataReader.System.Data.IDataRecord.GetData(Int32)
  fullName: System.Data.Common.DbDataReader.System.Data.IDataRecord.GetData(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "이 멤버에 대 한 참조 &lt;xref:System.Data.IDataRecord.GetData%2A?displayProperty=fullName&gt;합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Data.Common.DbDataReader>인스턴스로 캐스팅 되는 <xref:System.Data.IDataRecord>인터페이스.</xref:System.Data.IDataRecord> </xref:System.Data.Common.DbDataReader>"
  syntax:
    content: System.Data.IDataReader IDataRecord.GetData (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "서 수는&0;부터 시작 열입니다."
    return:
      type: System.Data.IDataReader
      description: "인스턴스 <xref href=&quot;System.Data.IDataReader&quot;> </xref> 더 많은 원격의 구조화 된 데이터를 필드를 가리키면 사용할 수 있습니다."
  overload: System.Data.Common.DbDataReader.System#Data#IDataRecord#GetData*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.VisibleFieldCount
  id: VisibleFieldCount
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: VisibleFieldCount
  nameWithType: DbDataReader.VisibleFieldCount
  fullName: System.Data.Common.DbDataReader.VisibleFieldCount
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "필드 수를 가져옵니다는 <xref href=&quot;System.Data.Common.DbDataReader&quot;> </xref> 있는 숨겨지지 않습니다."
  remarks: "필드 수를 확인 하려면이 값은 사용 된 <xref:System.Data.Common.DbDataReader>표시 됩니다.</xref:System.Data.Common.DbDataReader> 예를 들어 부분 기본 키에 대해 SELECT 숨김 필드로 키의 나머지 부분을 반환합니다. 숨겨진된 필드는 항상 표시 되는 필드에 추가 됩니다."
  syntax:
    content: public virtual int VisibleFieldCount { get; }
    return:
      type: System.Int32
      description: "표시 되는 필드의 수입니다."
  overload: System.Data.Common.DbDataReader.VisibleFieldCount*
  exceptions: []
  platform:
  - net462
references:
- uid: System.MarshalByRefObject
  isExternal: false
  name: System.MarshalByRefObject
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.InvalidCastException
  isExternal: true
  name: System.InvalidCastException
- uid: System.IndexOutOfRangeException
  isExternal: true
  name: System.IndexOutOfRangeException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Data.Common.DbException
  parent: System.Data.Common
  isExternal: false
  name: DbException
  nameWithType: DbException
  fullName: System.Data.Common.DbException
- uid: System.Data.Common.DbDataReader.#ctor
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: DbDataReader()
  nameWithType: DbDataReader.DbDataReader()
  fullName: System.Data.Common.DbDataReader.DbDataReader()
- uid: System.Data.Common.DbDataReader.Close
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: Close()
  nameWithType: DbDataReader.Close()
  fullName: System.Data.Common.DbDataReader.Close()
- uid: System.Data.Common.DbDataReader.Depth
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: Depth
  nameWithType: DbDataReader.Depth
  fullName: System.Data.Common.DbDataReader.Depth
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.Common.DbDataReader.Dispose
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: Dispose()
  nameWithType: DbDataReader.Dispose()
  fullName: System.Data.Common.DbDataReader.Dispose()
- uid: System.Data.Common.DbDataReader.Dispose(System.Boolean)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: DbDataReader.Dispose(Boolean)
  fullName: System.Data.Common.DbDataReader.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Common.DbDataReader.FieldCount
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: FieldCount
  nameWithType: DbDataReader.FieldCount
  fullName: System.Data.Common.DbDataReader.FieldCount
- uid: System.Data.Common.DbDataReader.GetBoolean(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetBoolean(Int32)
  nameWithType: DbDataReader.GetBoolean(Int32)
  fullName: System.Data.Common.DbDataReader.GetBoolean(Int32)
- uid: System.Data.Common.DbDataReader.GetByte(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetByte(Int32)
  nameWithType: DbDataReader.GetByte(Int32)
  fullName: System.Data.Common.DbDataReader.GetByte(Int32)
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Data.Common.DbDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetBytes(Int32,Int64,Byte[],Int32,Int32)
  nameWithType: DbDataReader.GetBytes(Int32,Int64,Byte[],Int32,Int32)
  fullName: System.Data.Common.DbDataReader.GetBytes(Int32,Int64,Byte[],Int32,Int32)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.Common.DbDataReader.GetChar(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetChar(Int32)
  nameWithType: DbDataReader.GetChar(Int32)
  fullName: System.Data.Common.DbDataReader.GetChar(Int32)
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Data.Common.DbDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetChars(Int32,Int64,Char[],Int32,Int32)
  nameWithType: DbDataReader.GetChars(Int32,Int64,Char[],Int32,Int32)
  fullName: System.Data.Common.DbDataReader.GetChars(Int32,Int64,Char[],Int32,Int32)
- uid: System.Char[]
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char[]
  spec.csharp:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: Char[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.Common.DbDataReader.GetData(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetData(Int32)
  nameWithType: DbDataReader.GetData(Int32)
  fullName: System.Data.Common.DbDataReader.GetData(Int32)
- uid: System.Data.Common.DbDataReader
  parent: System.Data.Common
  isExternal: false
  name: DbDataReader
  nameWithType: DbDataReader
  fullName: System.Data.Common.DbDataReader
- uid: System.Data.Common.DbDataReader.GetDataTypeName(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetDataTypeName(Int32)
  nameWithType: DbDataReader.GetDataTypeName(Int32)
  fullName: System.Data.Common.DbDataReader.GetDataTypeName(Int32)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Common.DbDataReader.GetDateTime(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetDateTime(Int32)
  nameWithType: DbDataReader.GetDateTime(Int32)
  fullName: System.Data.Common.DbDataReader.GetDateTime(Int32)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Data.Common.DbDataReader.GetDbDataReader(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetDbDataReader(Int32)
  nameWithType: DbDataReader.GetDbDataReader(Int32)
  fullName: System.Data.Common.DbDataReader.GetDbDataReader(Int32)
- uid: System.Data.Common.DbDataReader.GetDecimal(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetDecimal(Int32)
  nameWithType: DbDataReader.GetDecimal(Int32)
  fullName: System.Data.Common.DbDataReader.GetDecimal(Int32)
- uid: System.Decimal
  parent: System
  isExternal: true
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
- uid: System.Data.Common.DbDataReader.GetDouble(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetDouble(Int32)
  nameWithType: DbDataReader.GetDouble(Int32)
  fullName: System.Data.Common.DbDataReader.GetDouble(Int32)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Data.Common.DbDataReader.GetEnumerator
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetEnumerator()
  nameWithType: DbDataReader.GetEnumerator()
  fullName: System.Data.Common.DbDataReader.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Data.Common.DbDataReader.GetFieldType(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetFieldType(Int32)
  nameWithType: DbDataReader.GetFieldType(Int32)
  fullName: System.Data.Common.DbDataReader.GetFieldType(Int32)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Data.Common.DbDataReader.GetFieldValue``1(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetFieldValue(Int32)
  nameWithType: DbDataReader.GetFieldValue(Int32)
  fullName: System.Data.Common.DbDataReader.GetFieldValue(Int32)
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetFieldValueAsync(Int32)
  nameWithType: DbDataReader.GetFieldValueAsync(Int32)
  fullName: System.Data.Common.DbDataReader.GetFieldValueAsync(Int32)
- uid: System.Threading.Tasks.Task{T}
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<T>
  nameWithType: Task<T>
  fullName: System.Threading.Tasks.Task<T>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: Task<T>
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32,System.``0hreading.Cancellation``0oken)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetFieldValueAsync(Int32,CancellationToken)
  nameWithType: DbDataReader.GetFieldValueAsync(Int32,CancellationToken)
  fullName: System.Data.Common.DbDataReader.GetFieldValueAsync(Int32,CancellationToken)
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Data.Common.DbDataReader.GetFloat(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetFloat(Int32)
  nameWithType: DbDataReader.GetFloat(Int32)
  fullName: System.Data.Common.DbDataReader.GetFloat(Int32)
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Data.Common.DbDataReader.GetGuid(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetGuid(Int32)
  nameWithType: DbDataReader.GetGuid(Int32)
  fullName: System.Data.Common.DbDataReader.GetGuid(Int32)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Data.Common.DbDataReader.GetInt16(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetInt16(Int32)
  nameWithType: DbDataReader.GetInt16(Int32)
  fullName: System.Data.Common.DbDataReader.GetInt16(Int32)
- uid: System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Data.Common.DbDataReader.GetInt32(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetInt32(Int32)
  nameWithType: DbDataReader.GetInt32(Int32)
  fullName: System.Data.Common.DbDataReader.GetInt32(Int32)
- uid: System.Data.Common.DbDataReader.GetInt64(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetInt64(Int32)
  nameWithType: DbDataReader.GetInt64(Int32)
  fullName: System.Data.Common.DbDataReader.GetInt64(Int32)
- uid: System.Data.Common.DbDataReader.GetName(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetName(Int32)
  nameWithType: DbDataReader.GetName(Int32)
  fullName: System.Data.Common.DbDataReader.GetName(Int32)
- uid: System.Data.Common.DbDataReader.GetOrdinal(System.String)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetOrdinal(String)
  nameWithType: DbDataReader.GetOrdinal(String)
  fullName: System.Data.Common.DbDataReader.GetOrdinal(String)
- uid: System.Data.Common.DbDataReader.GetProviderSpecificFieldType(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetProviderSpecificFieldType(Int32)
  nameWithType: DbDataReader.GetProviderSpecificFieldType(Int32)
  fullName: System.Data.Common.DbDataReader.GetProviderSpecificFieldType(Int32)
- uid: System.Data.Common.DbDataReader.GetProviderSpecificValue(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetProviderSpecificValue(Int32)
  nameWithType: DbDataReader.GetProviderSpecificValue(Int32)
  fullName: System.Data.Common.DbDataReader.GetProviderSpecificValue(Int32)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.Common.DbDataReader.GetProviderSpecificValues(System.Object[])
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetProviderSpecificValues(Object[])
  nameWithType: DbDataReader.GetProviderSpecificValues(Object[])
  fullName: System.Data.Common.DbDataReader.GetProviderSpecificValues(Object[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.Common.DbDataReader.GetSchemaTable
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetSchemaTable()
  nameWithType: DbDataReader.GetSchemaTable()
  fullName: System.Data.Common.DbDataReader.GetSchemaTable()
- uid: System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Data.Common.DbDataReader.GetStream(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetStream(Int32)
  nameWithType: DbDataReader.GetStream(Int32)
  fullName: System.Data.Common.DbDataReader.GetStream(Int32)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Data.Common.DbDataReader.GetString(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetString(Int32)
  nameWithType: DbDataReader.GetString(Int32)
  fullName: System.Data.Common.DbDataReader.GetString(Int32)
- uid: System.Data.Common.DbDataReader.GetTextReader(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetTextReader(Int32)
  nameWithType: DbDataReader.GetTextReader(Int32)
  fullName: System.Data.Common.DbDataReader.GetTextReader(Int32)
- uid: System.IO.TextReader
  parent: System.IO
  isExternal: true
  name: TextReader
  nameWithType: TextReader
  fullName: System.IO.TextReader
- uid: System.Data.Common.DbDataReader.GetValue(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetValue(Int32)
  nameWithType: DbDataReader.GetValue(Int32)
  fullName: System.Data.Common.DbDataReader.GetValue(Int32)
- uid: System.Data.Common.DbDataReader.GetValues(System.Object[])
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetValues(Object[])
  nameWithType: DbDataReader.GetValues(Object[])
  fullName: System.Data.Common.DbDataReader.GetValues(Object[])
- uid: System.Data.Common.DbDataReader.HasRows
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: HasRows
  nameWithType: DbDataReader.HasRows
  fullName: System.Data.Common.DbDataReader.HasRows
- uid: System.Data.Common.DbDataReader.IsClosed
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: IsClosed
  nameWithType: DbDataReader.IsClosed
  fullName: System.Data.Common.DbDataReader.IsClosed
- uid: System.Data.Common.DbDataReader.IsDBNull(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: IsDBNull(Int32)
  nameWithType: DbDataReader.IsDBNull(Int32)
  fullName: System.Data.Common.DbDataReader.IsDBNull(Int32)
- uid: System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: IsDBNullAsync(Int32)
  nameWithType: DbDataReader.IsDBNullAsync(Int32)
  fullName: System.Data.Common.DbDataReader.IsDBNullAsync(Int32)
- uid: System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: Task<System.Boolean>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: Boolean
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32,System.Threading.CancellationToken)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: IsDBNullAsync(Int32,CancellationToken)
  nameWithType: DbDataReader.IsDBNullAsync(Int32,CancellationToken)
  fullName: System.Data.Common.DbDataReader.IsDBNullAsync(Int32,CancellationToken)
- uid: System.Data.Common.DbDataReader.Item(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: Item(Int32)
  nameWithType: DbDataReader.Item(Int32)
  fullName: System.Data.Common.DbDataReader.Item(Int32)
- uid: System.Data.Common.DbDataReader.Item(System.String)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: Item(String)
  nameWithType: DbDataReader.Item(String)
  fullName: System.Data.Common.DbDataReader.Item(String)
- uid: System.Data.Common.DbDataReader.NextResult
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: NextResult()
  nameWithType: DbDataReader.NextResult()
  fullName: System.Data.Common.DbDataReader.NextResult()
- uid: System.Data.Common.DbDataReader.NextResultAsync
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: NextResultAsync()
  nameWithType: DbDataReader.NextResultAsync()
  fullName: System.Data.Common.DbDataReader.NextResultAsync()
- uid: System.Data.Common.DbDataReader.NextResultAsync(System.Threading.CancellationToken)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: NextResultAsync(CancellationToken)
  nameWithType: DbDataReader.NextResultAsync(CancellationToken)
  fullName: System.Data.Common.DbDataReader.NextResultAsync(CancellationToken)
- uid: System.Data.Common.DbDataReader.Read
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: Read()
  nameWithType: DbDataReader.Read()
  fullName: System.Data.Common.DbDataReader.Read()
- uid: System.Data.Common.DbDataReader.ReadAsync
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: ReadAsync()
  nameWithType: DbDataReader.ReadAsync()
  fullName: System.Data.Common.DbDataReader.ReadAsync()
- uid: System.Data.Common.DbDataReader.ReadAsync(System.Threading.CancellationToken)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: ReadAsync(CancellationToken)
  nameWithType: DbDataReader.ReadAsync(CancellationToken)
  fullName: System.Data.Common.DbDataReader.ReadAsync(CancellationToken)
- uid: System.Data.Common.DbDataReader.RecordsAffected
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: RecordsAffected
  nameWithType: DbDataReader.RecordsAffected
  fullName: System.Data.Common.DbDataReader.RecordsAffected
- uid: System.Data.Common.DbDataReader.System#Data#IDataRecord#GetData(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: System.Data.IDataRecord.GetData(Int32)
  nameWithType: DbDataReader.System.Data.IDataRecord.GetData(Int32)
  fullName: System.Data.Common.DbDataReader.System.Data.IDataRecord.GetData(Int32)
- uid: System.Data.IDataReader
  parent: System.Data
  isExternal: false
  name: IDataReader
  nameWithType: IDataReader
  fullName: System.Data.IDataReader
- uid: System.Data.Common.DbDataReader.VisibleFieldCount
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: VisibleFieldCount
  nameWithType: DbDataReader.VisibleFieldCount
  fullName: System.Data.Common.DbDataReader.VisibleFieldCount
- uid: System.Data.Common.DbDataReader.#ctor*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: DbDataReader
  nameWithType: DbDataReader.DbDataReader
- uid: System.Data.Common.DbDataReader.Close*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: Close
  nameWithType: DbDataReader.Close
- uid: System.Data.Common.DbDataReader.Depth*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: Depth
  nameWithType: DbDataReader.Depth
- uid: System.Data.Common.DbDataReader.Dispose*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: Dispose
  nameWithType: DbDataReader.Dispose
- uid: System.Data.Common.DbDataReader.FieldCount*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: FieldCount
  nameWithType: DbDataReader.FieldCount
- uid: System.Data.Common.DbDataReader.GetBoolean*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetBoolean
  nameWithType: DbDataReader.GetBoolean
- uid: System.Data.Common.DbDataReader.GetByte*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetByte
  nameWithType: DbDataReader.GetByte
- uid: System.Data.Common.DbDataReader.GetBytes*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetBytes
  nameWithType: DbDataReader.GetBytes
- uid: System.Data.Common.DbDataReader.GetChar*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetChar
  nameWithType: DbDataReader.GetChar
- uid: System.Data.Common.DbDataReader.GetChars*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetChars
  nameWithType: DbDataReader.GetChars
- uid: System.Data.Common.DbDataReader.GetData*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetData
  nameWithType: DbDataReader.GetData
- uid: System.Data.Common.DbDataReader.GetDataTypeName*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetDataTypeName
  nameWithType: DbDataReader.GetDataTypeName
- uid: System.Data.Common.DbDataReader.GetDateTime*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetDateTime
  nameWithType: DbDataReader.GetDateTime
- uid: System.Data.Common.DbDataReader.GetDbDataReader*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetDbDataReader
  nameWithType: DbDataReader.GetDbDataReader
- uid: System.Data.Common.DbDataReader.GetDecimal*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetDecimal
  nameWithType: DbDataReader.GetDecimal
- uid: System.Data.Common.DbDataReader.GetDouble*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetDouble
  nameWithType: DbDataReader.GetDouble
- uid: System.Data.Common.DbDataReader.GetEnumerator*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetEnumerator
  nameWithType: DbDataReader.GetEnumerator
- uid: System.Data.Common.DbDataReader.GetFieldType*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetFieldType
  nameWithType: DbDataReader.GetFieldType
- uid: System.Data.Common.DbDataReader.GetFieldValue<T>*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetFieldValue<T>
  nameWithType: DbDataReader.GetFieldValue<T>
- uid: System.Data.Common.DbDataReader.GetFieldValueAsync<T>*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetFieldValueAsync<T>
  nameWithType: DbDataReader.GetFieldValueAsync<T>
- uid: System.Data.Common.DbDataReader.GetFloat*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetFloat
  nameWithType: DbDataReader.GetFloat
- uid: System.Data.Common.DbDataReader.GetGuid*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetGuid
  nameWithType: DbDataReader.GetGuid
- uid: System.Data.Common.DbDataReader.GetInt16*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetInt16
  nameWithType: DbDataReader.GetInt16
- uid: System.Data.Common.DbDataReader.GetInt32*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetInt32
  nameWithType: DbDataReader.GetInt32
- uid: System.Data.Common.DbDataReader.GetInt64*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetInt64
  nameWithType: DbDataReader.GetInt64
- uid: System.Data.Common.DbDataReader.GetName*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetName
  nameWithType: DbDataReader.GetName
- uid: System.Data.Common.DbDataReader.GetOrdinal*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetOrdinal
  nameWithType: DbDataReader.GetOrdinal
- uid: System.Data.Common.DbDataReader.GetProviderSpecificFieldType*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetProviderSpecificFieldType
  nameWithType: DbDataReader.GetProviderSpecificFieldType
- uid: System.Data.Common.DbDataReader.GetProviderSpecificValue*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetProviderSpecificValue
  nameWithType: DbDataReader.GetProviderSpecificValue
- uid: System.Data.Common.DbDataReader.GetProviderSpecificValues*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetProviderSpecificValues
  nameWithType: DbDataReader.GetProviderSpecificValues
- uid: System.Data.Common.DbDataReader.GetSchemaTable*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetSchemaTable
  nameWithType: DbDataReader.GetSchemaTable
- uid: System.Data.Common.DbDataReader.GetStream*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetStream
  nameWithType: DbDataReader.GetStream
- uid: System.Data.Common.DbDataReader.GetString*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetString
  nameWithType: DbDataReader.GetString
- uid: System.Data.Common.DbDataReader.GetTextReader*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetTextReader
  nameWithType: DbDataReader.GetTextReader
- uid: System.Data.Common.DbDataReader.GetValue*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetValue
  nameWithType: DbDataReader.GetValue
- uid: System.Data.Common.DbDataReader.GetValues*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetValues
  nameWithType: DbDataReader.GetValues
- uid: System.Data.Common.DbDataReader.HasRows*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: HasRows
  nameWithType: DbDataReader.HasRows
- uid: System.Data.Common.DbDataReader.IsClosed*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: IsClosed
  nameWithType: DbDataReader.IsClosed
- uid: System.Data.Common.DbDataReader.IsDBNull*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: IsDBNull
  nameWithType: DbDataReader.IsDBNull
- uid: System.Data.Common.DbDataReader.IsDBNullAsync*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: IsDBNullAsync
  nameWithType: DbDataReader.IsDBNullAsync
- uid: System.Data.Common.DbDataReader.Item*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: Item
  nameWithType: DbDataReader.Item
- uid: System.Data.Common.DbDataReader.NextResult*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: NextResult
  nameWithType: DbDataReader.NextResult
- uid: System.Data.Common.DbDataReader.NextResultAsync*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: NextResultAsync
  nameWithType: DbDataReader.NextResultAsync
- uid: System.Data.Common.DbDataReader.Read*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: Read
  nameWithType: DbDataReader.Read
- uid: System.Data.Common.DbDataReader.ReadAsync*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: ReadAsync
  nameWithType: DbDataReader.ReadAsync
- uid: System.Data.Common.DbDataReader.RecordsAffected*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: RecordsAffected
  nameWithType: DbDataReader.RecordsAffected
- uid: System.Data.Common.DbDataReader.System#Data#IDataRecord#GetData*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: System.Data.IDataRecord.GetData
  nameWithType: DbDataReader.System.Data.IDataRecord.GetData
- uid: System.Data.Common.DbDataReader.VisibleFieldCount*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: VisibleFieldCount
  nameWithType: DbDataReader.VisibleFieldCount
