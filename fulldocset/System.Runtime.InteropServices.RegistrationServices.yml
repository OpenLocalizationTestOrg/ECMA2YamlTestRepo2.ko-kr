### YamlMime:ManagedReference
items:
- uid: System.Runtime.InteropServices.RegistrationServices
  id: RegistrationServices
  children:
  - System.Runtime.InteropServices.RegistrationServices.#ctor
  - System.Runtime.InteropServices.RegistrationServices.GetManagedCategoryGuid
  - System.Runtime.InteropServices.RegistrationServices.GetProgIdForType(System.Type)
  - System.Runtime.InteropServices.RegistrationServices.GetRegistrableTypesInAssembly(System.Reflection.Assembly)
  - System.Runtime.InteropServices.RegistrationServices.RegisterAssembly(System.Reflection.Assembly,System.Runtime.InteropServices.AssemblyRegistrationFlags)
  - System.Runtime.InteropServices.RegistrationServices.RegisterTypeForComClients(System.Type,System.Guid@)
  - System.Runtime.InteropServices.RegistrationServices.RegisterTypeForComClients(System.Type,System.Runtime.InteropServices.RegistrationClassContext,System.Runtime.InteropServices.RegistrationConnectionType)
  - System.Runtime.InteropServices.RegistrationServices.TypeRepresentsComType(System.Type)
  - System.Runtime.InteropServices.RegistrationServices.TypeRequiresRegistration(System.Type)
  - System.Runtime.InteropServices.RegistrationServices.UnregisterAssembly(System.Reflection.Assembly)
  - System.Runtime.InteropServices.RegistrationServices.UnregisterTypeForComClients(System.Int32)
  langs:
  - csharp
  name: RegistrationServices
  nameWithType: RegistrationServices
  fullName: System.Runtime.InteropServices.RegistrationServices
  type: Class
  summary: "Com에서 관리 되는 사용 하기 위해 어셈블리를 등록 하 고 등록을 취소 하는 서비스 집합을 제공 합니다."
  remarks: "Registration is needed when the objects within an assembly are being used by COM clients. The [Regasm.exe (Assembly Registration Tool)](~/add/includes/ajax-current-ext-md.md) and [!INCLUDE[vsprvsext](~/add/includes/ajax-current-ext-md.md)] use methods exposed by the RegistrationServices class to add or remove COM-enabling registry entries for managed assemblies.  \n  \n You can use the following methods to assist you in preparing a registration file:  \n  \n-   <xref:System.Runtime.InteropServices.RegistrationServices.GetManagedCategoryGuid%2A>  \n  \n-   <xref:System.Runtime.InteropServices.RegistrationServices.GetProgIdForType%2A>  \n  \n-   <xref:System.Runtime.InteropServices.RegistrationServices.GetRegistrableTypesInAssembly%2A>  \n  \n-   <xref:System.Runtime.InteropServices.RegistrationServices.TypeRepresentsComType%2A>  \n  \n Although these methods help in gathering information to be used in a registration file, they do not actually produce a registration file. Instead, you can use the [Regasm.exe (Assembly Registration Tool)](../Topic/Regasm.exe%20\\(Assembly%20Registration%20Tool\\).md) tool with the `/regfile` option to perform this task. RegistrationServices methods cannot export and register a type library. To export and register a type library, you can use the [Regasm.exe (Assembly Registration Tool)](../Topic/Regasm.exe%20\\(Assembly%20Registration%20Tool\\).md) tool and the [Tlbexp.exe (Type Library Exporter)](~/add/includes/ajax-current-ext-md.md) tool."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]

      [System.Runtime.InteropServices.ComVisible(true)]

      [System.Runtime.InteropServices.Guid("475E398F-8AFA-43a7-A3BE-F4EF8D6787C9")]

      public class RegistrationServices : System.Runtime.InteropServices.IRegistrationServices
  inheritance:
  - System.Object
  implements:
  - System.Runtime.InteropServices.IRegistrationServices
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.InteropServices.RegistrationServices.#ctor
  id: '#ctor'
  parent: System.Runtime.InteropServices.RegistrationServices
  langs:
  - csharp
  name: RegistrationServices()
  nameWithType: RegistrationServices.RegistrationServices()
  fullName: System.Runtime.InteropServices.RegistrationServices.RegistrationServices()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Runtime.InteropServices.RegistrationServices&quot;> </xref> 클래스입니다."
  syntax:
    content: public RegistrationServices ();
    parameters: []
  overload: System.Runtime.InteropServices.RegistrationServices.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices.RegistrationServices.GetManagedCategoryGuid
  id: GetManagedCategoryGuid
  parent: System.Runtime.InteropServices.RegistrationServices
  langs:
  - csharp
  name: GetManagedCategoryGuid()
  nameWithType: RegistrationServices.GetManagedCategoryGuid()
  fullName: System.Runtime.InteropServices.RegistrationServices.GetManagedCategoryGuid()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "관리 되는 클래스를 포함 하는 COM 범주의 GUID를 반환 합니다."
  syntax:
    content: public virtual Guid GetManagedCategoryGuid ();
    parameters: []
    return:
      type: System.Guid
      description: "관리 되는 클래스를 포함 하는 COM 범주 GUID입니다."
  overload: System.Runtime.InteropServices.RegistrationServices.GetManagedCategoryGuid*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices.RegistrationServices.GetProgIdForType(System.Type)
  id: GetProgIdForType(System.Type)
  parent: System.Runtime.InteropServices.RegistrationServices
  langs:
  - csharp
  name: GetProgIdForType(Type)
  nameWithType: RegistrationServices.GetProgIdForType(Type)
  fullName: System.Runtime.InteropServices.RegistrationServices.GetProgIdForType(Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "지정된 된 형식에 대 한 COM ProgID를 검색합니다."
  syntax:
    content: public virtual string GetProgIdForType (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "요청 중인 ProgID에 해당 하는 형식입니다."
    return:
      type: System.String
      description: "지정 된 형식의 ProgID입니다."
  overload: System.Runtime.InteropServices.RegistrationServices.GetProgIdForType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices.RegistrationServices.GetRegistrableTypesInAssembly(System.Reflection.Assembly)
  id: GetRegistrableTypesInAssembly(System.Reflection.Assembly)
  parent: System.Runtime.InteropServices.RegistrationServices
  langs:
  - csharp
  name: GetRegistrableTypesInAssembly(Assembly)
  nameWithType: RegistrationServices.GetRegistrableTypesInAssembly(Assembly)
  fullName: System.Runtime.InteropServices.RegistrationServices.GetRegistrableTypesInAssembly(Assembly)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "<xref:System.Runtime.InteropServices.RegistrationServices.RegisterAssembly*>.</xref:System.Runtime.InteropServices.RegistrationServices.RegisterAssembly*> 를 호출 하 여 등록 되는 어셈블리의 클래스의 목록을 검색 합니다."
  syntax:
    content: public virtual Type[] GetRegistrableTypesInAssembly (System.Reflection.Assembly assembly);
    parameters:
    - id: assembly
      type: System.Reflection.Assembly
      description: "클래스를 검색할 어셈블리입니다."
    return:
      type: System.Type[]
      description: "A <xref:System.Type>의 클래스 목록을 포함 하는 배열 <code> assembly </code>.</xref:System.Type>"
  overload: System.Runtime.InteropServices.RegistrationServices.GetRegistrableTypesInAssembly*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>assembly</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Runtime.InteropServices.RegistrationServices.RegisterAssembly(System.Reflection.Assembly,System.Runtime.InteropServices.AssemblyRegistrationFlags)
  id: RegisterAssembly(System.Reflection.Assembly,System.Runtime.InteropServices.AssemblyRegistrationFlags)
  parent: System.Runtime.InteropServices.RegistrationServices
  langs:
  - csharp
  name: RegisterAssembly(Assembly,AssemblyRegistrationFlags)
  nameWithType: RegistrationServices.RegisterAssembly(Assembly,AssemblyRegistrationFlags)
  fullName: System.Runtime.InteropServices.RegistrationServices.RegisterAssembly(Assembly,AssemblyRegistrationFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Com에서 만들 수 있도록 하려면 관리 되는 어셈블리의 클래스를 등록 합니다."
  remarks: "`RegisterAssembly`지정된 된 어셈블리의 형식에 대 한 적절 한 레지스트리 항목을 추가합니다. 또한이 메서드는 어셈블리에 있는 모든 등록 함수를 호출 합니다.       사용 하 여 <xref:System.Reflection.Assembly.Load%2A?displayProperty=fullName>어셈블리를 가져오려는.</xref:System.Reflection.Assembly.Load%2A?displayProperty=fullName>"
  syntax:
    content: public virtual bool RegisterAssembly (System.Reflection.Assembly assembly, System.Runtime.InteropServices.AssemblyRegistrationFlags flags);
    parameters:
    - id: assembly
      type: System.Reflection.Assembly
      description: "어셈블리를 등록 해야 합니다."
    - id: flags
      type: System.Runtime.InteropServices.AssemblyRegistrationFlags
      description: "<xref href=&quot;System.Runtime.InteropServices.AssemblyRegistrationFlags&quot;> </xref> 등록할 때 사용 되는 특별 한 설정을 나타내는 값 `assembly`합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우 <code> assembly </code> 성공적으로 등록, 그렇지 않으면 유형은 포함 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 적격 형식이 없습니다. 포함 하는 경우."
  overload: System.Runtime.InteropServices.RegistrationServices.RegisterAssembly*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>assembly</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The full name of <code>assembly</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -또는-메서드로 <xref href=&quot;System.Runtime.InteropServices.ComRegisterFunctionAttribute&quot;> </xref> 않습니다 <xref uid=&quot;langword_csharp_static&quot; name=&quot;static&quot; href=&quot;&quot;> </xref>합니다.       -또는-로 표시 하는 둘 이상의 메서드가 없는 <xref href=&quot;System.Runtime.InteropServices.ComRegisterFunctionAttribute&quot;> </xref> 계층의 지정 된 수준입니다.       -또는-로 메서드의 서명을 표시 <xref href=&quot;System.Runtime.InteropServices.ComRegisterFunctionAttribute&quot;> </xref> 올바르지 않습니다."
  - type: System.Reflection.TargetInvocationException
    commentId: T:System.Reflection.TargetInvocationException
    description: "사용자 지정 등록 사용자 정의 함수 (으로 표시 된 <xref href=&quot;System.Runtime.InteropServices.ComRegisterFunctionAttribute&quot;> </xref> 특성) 예외를 throw 합니다."
  platform:
  - net462
- uid: System.Runtime.InteropServices.RegistrationServices.RegisterTypeForComClients(System.Type,System.Guid@)
  id: RegisterTypeForComClients(System.Type,System.Guid@)
  parent: System.Runtime.InteropServices.RegistrationServices
  langs:
  - csharp
  name: RegisterTypeForComClients(Type,Guid)
  nameWithType: RegistrationServices.RegisterTypeForComClients(Type,Guid)
  fullName: System.Runtime.InteropServices.RegistrationServices.RegisterTypeForComClients(Type,Guid)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "지정된 된 형식의 지정된 된 GUID를 사용 하 여 COM 등록 합니다."
  remarks: "이 메서드는 호출에 해당 `CoRegisterClassObject` COM.에 RegisterTypeForComClients 메서드 원자성 아니며 다중 스레드 컨텍스트에서 사용할 경우 예기치 않은 결과가 발생할 수 있습니다.       버전 2.0 이상에서 <xref:System.Runtime.InteropServices.RegistrationServices.UnregisterTypeForComClients%2A>COM.에서 유형을 등록을 취소 하는 메서드</xref:System.Runtime.InteropServices.RegistrationServices.UnregisterTypeForComClients%2A> 를 사용 합니다.       관리 되지 않는 호출 하는 플랫폼을 사용 하 여 호출을 `CoRegisterClassObject` 및 `CoDisconnectObject` 등록 및 COM 개체의 등록 취소에 대 한 메서드는 지원 되지 않습니다."
  syntax:
    content: public virtual void RegisterTypeForComClients (Type type, ref Guid g);
    parameters:
    - id: type
      type: System.Type
      description: "<xref:System.Type>Com에서 사용 하도록 등록 하려면</xref:System.Type>"
    - id: g
      type: System.Guid
      description: "<xref:System.Guid>지정된 된 형식을 등록 하는 데 사용 합니다.</xref:System.Guid>"
  overload: System.Runtime.InteropServices.RegistrationServices.RegisterTypeForComClients*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>type</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> type </code> 매개 변수를 만들 수 없습니다."
  platform:
  - net462
- uid: System.Runtime.InteropServices.RegistrationServices.RegisterTypeForComClients(System.Type,System.Runtime.InteropServices.RegistrationClassContext,System.Runtime.InteropServices.RegistrationConnectionType)
  id: RegisterTypeForComClients(System.Type,System.Runtime.InteropServices.RegistrationClassContext,System.Runtime.InteropServices.RegistrationConnectionType)
  parent: System.Runtime.InteropServices.RegistrationServices
  langs:
  - csharp
  name: RegisterTypeForComClients(Type,RegistrationClassContext,RegistrationConnectionType)
  nameWithType: RegistrationServices.RegisterTypeForComClients(Type,RegistrationClassContext,RegistrationConnectionType)
  fullName: System.Runtime.InteropServices.RegistrationServices.RegisterTypeForComClients(Type,RegistrationClassContext,RegistrationConnectionType)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "연결 종류와 지정된 된 실행 컨텍스트를 사용 하 여 지정 된 형식을 COM에 등록 합니다."
  remarks: "이 메서드는 호출에 해당 `CoRegisterClassObject` COM.에 RegisterTypeForComClients 메서드 원자성 아니며 다중 스레드 컨텍스트에서 사용할 경우 예기치 않은 결과가 발생할 수 있습니다.       .NET Framework 버전 2.0 이상에서 <xref:System.Runtime.InteropServices.RegistrationServices.UnregisterTypeForComClients%2A>COM.에서 유형을 등록을 취소 하는 메서드</xref:System.Runtime.InteropServices.RegistrationServices.UnregisterTypeForComClients%2A> 를 사용 합니다.       관리 되지 않는 호출 하는 플랫폼을 사용 하 여 호출을 `CoRegisterClassObject` 및 `CoDisconnectObject` 등록 및 COM 개체의 등록 취소에 대 한 메서드는 지원 되지 않습니다."
  syntax:
    content: public virtual int RegisterTypeForComClients (Type type, System.Runtime.InteropServices.RegistrationClassContext classContext, System.Runtime.InteropServices.RegistrationConnectionType flags);
    parameters:
    - id: type
      type: System.Type
      description: "<xref:System.Type>Com에서 사용 하기 위해 등록 하는 개체</xref:System.Type>"
    - id: classContext
      type: System.Runtime.InteropServices.RegistrationClassContext
      description: "중 하나는 <xref href=&quot;System.Runtime.InteropServices.RegistrationClassContext&quot;> </xref> 실행 코드가 실행 될 컨텍스트를 나타내는 값입니다."
    - id: flags
      type: System.Runtime.InteropServices.RegistrationConnectionType
      description: "중 하나는 <xref href=&quot;System.Runtime.InteropServices.RegistrationConnectionType&quot;> </xref> 클래스 개체에 따른 연결 방법을 지정 하는 값입니다."
    return:
      type: System.Int32
      description: "쿠키 값을 나타내는 정수입니다."
  overload: System.Runtime.InteropServices.RegistrationServices.RegisterTypeForComClients*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>type</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> type </code> 매개 변수를 만들 수 없습니다."
  platform:
  - net462
- uid: System.Runtime.InteropServices.RegistrationServices.TypeRepresentsComType(System.Type)
  id: TypeRepresentsComType(System.Type)
  parent: System.Runtime.InteropServices.RegistrationServices
  langs:
  - csharp
  name: TypeRepresentsComType(Type)
  nameWithType: RegistrationServices.TypeRepresentsComType(Type)
  fullName: System.Runtime.InteropServices.RegistrationServices.TypeRepresentsComType(Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "형식이으로 표시 되어 있는지 여부를 나타냅니다는 <xref:System.Runtime.InteropServices.ComImportAttribute>,으로 표시 된 형식에서 파생 되었거나는 <xref:System.Runtime.InteropServices.ComImportAttribute>부모와 동일한 GUID를 공유 합니다.</xref:System.Runtime.InteropServices.ComImportAttribute> </xref:System.Runtime.InteropServices.ComImportAttribute>"
  syntax:
    content: public virtual bool TypeRepresentsComType (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "COM 형식 인지를 확인 하려면 유형입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>형식으로 표시 되는 <xref:System.Runtime.InteropServices.ComImportAttribute>,으로 표시 된 형식에서 파생 되었거나는 <xref:System.Runtime.InteropServices.ComImportAttribute>; 부모와 동일한 GUID를 공유 하 고 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Runtime.InteropServices.ComImportAttribute> </xref:System.Runtime.InteropServices.ComImportAttribute>"
  overload: System.Runtime.InteropServices.RegistrationServices.TypeRepresentsComType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices.RegistrationServices.TypeRequiresRegistration(System.Type)
  id: TypeRequiresRegistration(System.Type)
  parent: System.Runtime.InteropServices.RegistrationServices
  langs:
  - csharp
  name: TypeRequiresRegistration(Type)
  nameWithType: RegistrationServices.TypeRequiresRegistration(Type)
  fullName: System.Runtime.InteropServices.RegistrationServices.TypeRequiresRegistration(Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "지정된 된 형식을 등록 해야 하는지 여부를 결정 합니다."
  syntax:
    content: public virtual bool TypeRequiresRegistration (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "COM 등록 요구 사항을 확인할 형식입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>COM;에서 사용할 형식을 등록 해야 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Runtime.InteropServices.RegistrationServices.TypeRequiresRegistration*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices.RegistrationServices.UnregisterAssembly(System.Reflection.Assembly)
  id: UnregisterAssembly(System.Reflection.Assembly)
  parent: System.Runtime.InteropServices.RegistrationServices
  langs:
  - csharp
  name: UnregisterAssembly(Assembly)
  nameWithType: RegistrationServices.UnregisterAssembly(Assembly)
  fullName: System.Runtime.InteropServices.RegistrationServices.UnregisterAssembly(Assembly)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "관리 되는 어셈블리의 클래스를 등록 취소합니다."
  remarks: '`UnregisterAssembly`이전에 추가한 <xref:System.Runtime.InteropServices.RegistrationServices.RegisterAssembly%2A>.</xref:System.Runtime.InteropServices.RegistrationServices.RegisterAssembly%2A> 지정된 된 어셈블리의 형식에 대 한 레지스트리 항목을 제거 합니다. 또한이 메서드는 어셈블리에 있는 모든 등록 취소 함수를 호출 합니다.'
  syntax:
    content: public virtual bool UnregisterAssembly (System.Reflection.Assembly assembly);
    parameters:
    - id: assembly
      type: System.Reflection.Assembly
      description: "등록을 취소할 어셈블리입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우 <code> assembly </code> 성공적으로 등록 되지 않은 고, 그렇지 않으면 유형은 포함 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 적격 형식이 없습니다. 포함 하는 경우."
  overload: System.Runtime.InteropServices.RegistrationServices.UnregisterAssembly*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>assembly</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The full name of <code>assembly</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -또는-메서드로 <xref href=&quot;System.Runtime.InteropServices.ComUnregisterFunctionAttribute&quot;> </xref> 않습니다 <xref uid=&quot;langword_csharp_static&quot; name=&quot;static&quot; href=&quot;&quot;> </xref>합니다.       -또는-로 표시 하는 둘 이상의 메서드가 없는 <xref href=&quot;System.Runtime.InteropServices.ComUnregisterFunctionAttribute&quot;> </xref> 계층의 지정 된 수준입니다.       -또는-로 메서드의 서명을 표시 <xref href=&quot;System.Runtime.InteropServices.ComUnregisterFunctionAttribute&quot;> </xref> 올바르지 않습니다."
  - type: System.Reflection.TargetInvocationException
    commentId: T:System.Reflection.TargetInvocationException
    description: "사용자 정의 사용자 지정 등록 취소 함수 (으로 표시 된 <xref href=&quot;System.Runtime.InteropServices.ComUnregisterFunctionAttribute&quot;> </xref> 특성) 예외를 throw 합니다."
  platform:
  - net462
- uid: System.Runtime.InteropServices.RegistrationServices.UnregisterTypeForComClients(System.Int32)
  id: UnregisterTypeForComClients(System.Int32)
  parent: System.Runtime.InteropServices.RegistrationServices
  langs:
  - csharp
  name: UnregisterTypeForComClients(Int32)
  nameWithType: RegistrationServices.UnregisterTypeForComClients(Int32)
  fullName: System.Runtime.InteropServices.RegistrationServices.UnregisterTypeForComClients(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "등록 된 형식에 대 한 참조 제거는 <xref:System.Runtime.InteropServices.RegistrationServices.RegisterTypeForComClients*>메서드.</xref:System.Runtime.InteropServices.RegistrationServices.RegisterTypeForComClients*>"
  remarks: "관리 되지 않는 호출 하는 플랫폼을 사용 하 여 호출을 `CoRegisterClassObject` 및 `CoDisconnectObject` 등록 및 COM 개체를 등록 취소 하는 메서드를 사용할 수 없습니다."
  syntax:
    content: public virtual void UnregisterTypeForComClients (int cookie);
    parameters:
    - id: cookie
      type: System.Int32
      description: "에 대 한 이전 호출에서 반환 된 쿠키 값의 <xref:System.Runtime.InteropServices.RegistrationServices.RegisterTypeForComClients*>메서드 오버 로드.</xref:System.Runtime.InteropServices.RegistrationServices.RegisterTypeForComClients*>"
  overload: System.Runtime.InteropServices.RegistrationServices.UnregisterTypeForComClients*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Reflection.TargetInvocationException
  isExternal: true
  name: System.Reflection.TargetInvocationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Runtime.InteropServices.RegistrationServices.#ctor
  parent: System.Runtime.InteropServices.RegistrationServices
  isExternal: false
  name: RegistrationServices()
  nameWithType: RegistrationServices.RegistrationServices()
  fullName: System.Runtime.InteropServices.RegistrationServices.RegistrationServices()
- uid: System.Runtime.InteropServices.RegistrationServices.GetManagedCategoryGuid
  parent: System.Runtime.InteropServices.RegistrationServices
  isExternal: false
  name: GetManagedCategoryGuid()
  nameWithType: RegistrationServices.GetManagedCategoryGuid()
  fullName: System.Runtime.InteropServices.RegistrationServices.GetManagedCategoryGuid()
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Runtime.InteropServices.RegistrationServices.GetProgIdForType(System.Type)
  parent: System.Runtime.InteropServices.RegistrationServices
  isExternal: false
  name: GetProgIdForType(Type)
  nameWithType: RegistrationServices.GetProgIdForType(Type)
  fullName: System.Runtime.InteropServices.RegistrationServices.GetProgIdForType(Type)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Runtime.InteropServices.RegistrationServices.GetRegistrableTypesInAssembly(System.Reflection.Assembly)
  parent: System.Runtime.InteropServices.RegistrationServices
  isExternal: false
  name: GetRegistrableTypesInAssembly(Assembly)
  nameWithType: RegistrationServices.GetRegistrableTypesInAssembly(Assembly)
  fullName: System.Runtime.InteropServices.RegistrationServices.GetRegistrableTypesInAssembly(Assembly)
- uid: System.Type[]
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type[]
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: true
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Runtime.InteropServices.RegistrationServices.RegisterAssembly(System.Reflection.Assembly,System.Runtime.InteropServices.AssemblyRegistrationFlags)
  parent: System.Runtime.InteropServices.RegistrationServices
  isExternal: false
  name: RegisterAssembly(Assembly,AssemblyRegistrationFlags)
  nameWithType: RegistrationServices.RegisterAssembly(Assembly,AssemblyRegistrationFlags)
  fullName: System.Runtime.InteropServices.RegistrationServices.RegisterAssembly(Assembly,AssemblyRegistrationFlags)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Runtime.InteropServices.AssemblyRegistrationFlags
  parent: System.Runtime.InteropServices
  isExternal: false
  name: AssemblyRegistrationFlags
  nameWithType: AssemblyRegistrationFlags
  fullName: System.Runtime.InteropServices.AssemblyRegistrationFlags
- uid: System.Runtime.InteropServices.RegistrationServices.RegisterTypeForComClients(System.Type,System.Guid@)
  parent: System.Runtime.InteropServices.RegistrationServices
  isExternal: false
  name: RegisterTypeForComClients(Type,Guid)
  nameWithType: RegistrationServices.RegisterTypeForComClients(Type,Guid)
  fullName: System.Runtime.InteropServices.RegistrationServices.RegisterTypeForComClients(Type,Guid)
- uid: System.Runtime.InteropServices.RegistrationServices.RegisterTypeForComClients(System.Type,System.Runtime.InteropServices.RegistrationClassContext,System.Runtime.InteropServices.RegistrationConnectionType)
  parent: System.Runtime.InteropServices.RegistrationServices
  isExternal: false
  name: RegisterTypeForComClients(Type,RegistrationClassContext,RegistrationConnectionType)
  nameWithType: RegistrationServices.RegisterTypeForComClients(Type,RegistrationClassContext,RegistrationConnectionType)
  fullName: System.Runtime.InteropServices.RegistrationServices.RegisterTypeForComClients(Type,RegistrationClassContext,RegistrationConnectionType)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Runtime.InteropServices.RegistrationClassContext
  parent: System.Runtime.InteropServices
  isExternal: false
  name: RegistrationClassContext
  nameWithType: RegistrationClassContext
  fullName: System.Runtime.InteropServices.RegistrationClassContext
- uid: System.Runtime.InteropServices.RegistrationConnectionType
  parent: System.Runtime.InteropServices
  isExternal: false
  name: RegistrationConnectionType
  nameWithType: RegistrationConnectionType
  fullName: System.Runtime.InteropServices.RegistrationConnectionType
- uid: System.Runtime.InteropServices.RegistrationServices.TypeRepresentsComType(System.Type)
  parent: System.Runtime.InteropServices.RegistrationServices
  isExternal: false
  name: TypeRepresentsComType(Type)
  nameWithType: RegistrationServices.TypeRepresentsComType(Type)
  fullName: System.Runtime.InteropServices.RegistrationServices.TypeRepresentsComType(Type)
- uid: System.Runtime.InteropServices.RegistrationServices.TypeRequiresRegistration(System.Type)
  parent: System.Runtime.InteropServices.RegistrationServices
  isExternal: false
  name: TypeRequiresRegistration(Type)
  nameWithType: RegistrationServices.TypeRequiresRegistration(Type)
  fullName: System.Runtime.InteropServices.RegistrationServices.TypeRequiresRegistration(Type)
- uid: System.Runtime.InteropServices.RegistrationServices.UnregisterAssembly(System.Reflection.Assembly)
  parent: System.Runtime.InteropServices.RegistrationServices
  isExternal: false
  name: UnregisterAssembly(Assembly)
  nameWithType: RegistrationServices.UnregisterAssembly(Assembly)
  fullName: System.Runtime.InteropServices.RegistrationServices.UnregisterAssembly(Assembly)
- uid: System.Runtime.InteropServices.RegistrationServices.UnregisterTypeForComClients(System.Int32)
  parent: System.Runtime.InteropServices.RegistrationServices
  isExternal: false
  name: UnregisterTypeForComClients(Int32)
  nameWithType: RegistrationServices.UnregisterTypeForComClients(Int32)
  fullName: System.Runtime.InteropServices.RegistrationServices.UnregisterTypeForComClients(Int32)
- uid: System.Runtime.InteropServices.RegistrationServices.#ctor*
  parent: System.Runtime.InteropServices.RegistrationServices
  isExternal: false
  name: RegistrationServices
  nameWithType: RegistrationServices.RegistrationServices
- uid: System.Runtime.InteropServices.RegistrationServices.GetManagedCategoryGuid*
  parent: System.Runtime.InteropServices.RegistrationServices
  isExternal: false
  name: GetManagedCategoryGuid
  nameWithType: RegistrationServices.GetManagedCategoryGuid
- uid: System.Runtime.InteropServices.RegistrationServices.GetProgIdForType*
  parent: System.Runtime.InteropServices.RegistrationServices
  isExternal: false
  name: GetProgIdForType
  nameWithType: RegistrationServices.GetProgIdForType
- uid: System.Runtime.InteropServices.RegistrationServices.GetRegistrableTypesInAssembly*
  parent: System.Runtime.InteropServices.RegistrationServices
  isExternal: false
  name: GetRegistrableTypesInAssembly
  nameWithType: RegistrationServices.GetRegistrableTypesInAssembly
- uid: System.Runtime.InteropServices.RegistrationServices.RegisterAssembly*
  parent: System.Runtime.InteropServices.RegistrationServices
  isExternal: false
  name: RegisterAssembly
  nameWithType: RegistrationServices.RegisterAssembly
- uid: System.Runtime.InteropServices.RegistrationServices.RegisterTypeForComClients*
  parent: System.Runtime.InteropServices.RegistrationServices
  isExternal: false
  name: RegisterTypeForComClients
  nameWithType: RegistrationServices.RegisterTypeForComClients
- uid: System.Runtime.InteropServices.RegistrationServices.TypeRepresentsComType*
  parent: System.Runtime.InteropServices.RegistrationServices
  isExternal: false
  name: TypeRepresentsComType
  nameWithType: RegistrationServices.TypeRepresentsComType
- uid: System.Runtime.InteropServices.RegistrationServices.TypeRequiresRegistration*
  parent: System.Runtime.InteropServices.RegistrationServices
  isExternal: false
  name: TypeRequiresRegistration
  nameWithType: RegistrationServices.TypeRequiresRegistration
- uid: System.Runtime.InteropServices.RegistrationServices.UnregisterAssembly*
  parent: System.Runtime.InteropServices.RegistrationServices
  isExternal: false
  name: UnregisterAssembly
  nameWithType: RegistrationServices.UnregisterAssembly
- uid: System.Runtime.InteropServices.RegistrationServices.UnregisterTypeForComClients*
  parent: System.Runtime.InteropServices.RegistrationServices
  isExternal: false
  name: UnregisterTypeForComClients
  nameWithType: RegistrationServices.UnregisterTypeForComClients
