### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.MenuItemCollection
  id: MenuItemCollection
  children:
  - System.Web.UI.WebControls.MenuItemCollection.#ctor
  - System.Web.UI.WebControls.MenuItemCollection.#ctor(System.Web.UI.WebControls.MenuItem)
  - System.Web.UI.WebControls.MenuItemCollection.Add(System.Web.UI.WebControls.MenuItem)
  - System.Web.UI.WebControls.MenuItemCollection.AddAt(System.Int32,System.Web.UI.WebControls.MenuItem)
  - System.Web.UI.WebControls.MenuItemCollection.Clear
  - System.Web.UI.WebControls.MenuItemCollection.Contains(System.Web.UI.WebControls.MenuItem)
  - System.Web.UI.WebControls.MenuItemCollection.CopyTo(System.Array,System.Int32)
  - System.Web.UI.WebControls.MenuItemCollection.CopyTo(System.Web.UI.WebControls.MenuItem[],System.Int32)
  - System.Web.UI.WebControls.MenuItemCollection.Count
  - System.Web.UI.WebControls.MenuItemCollection.GetEnumerator
  - System.Web.UI.WebControls.MenuItemCollection.IndexOf(System.Web.UI.WebControls.MenuItem)
  - System.Web.UI.WebControls.MenuItemCollection.IsSynchronized
  - System.Web.UI.WebControls.MenuItemCollection.Item(System.Int32)
  - System.Web.UI.WebControls.MenuItemCollection.Remove(System.Web.UI.WebControls.MenuItem)
  - System.Web.UI.WebControls.MenuItemCollection.RemoveAt(System.Int32)
  - System.Web.UI.WebControls.MenuItemCollection.SyncRoot
  - System.Web.UI.WebControls.MenuItemCollection.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.WebControls.MenuItemCollection.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.WebControls.MenuItemCollection.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.WebControls.MenuItemCollection.System#Web#UI#IStateManager#TrackViewState
  langs:
  - csharp
  name: MenuItemCollection
  nameWithType: MenuItemCollection
  fullName: System.Web.UI.WebControls.MenuItemCollection
  type: Class
  summary: "메뉴 항목의 컬렉션을 나타냅니다는 <xref href=&quot;System.Web.UI.WebControls.Menu&quot;> </xref> 제어 합니다. 이 클래스는 상속 될 수 없습니다."
  remarks: "MenuItemCollection 클래스는 저장 하 고 컬렉션을 관리 하는 데 사용 <xref:System.Web.UI.WebControls.MenuItem>개체에 <xref:System.Web.UI.WebControls.Menu>컨트롤.</xref:System.Web.UI.WebControls.Menu> </xref:System.Web.UI.WebControls.MenuItem> <xref:System.Web.UI.WebControls.Menu>컨트롤 MenuItemCollection 클래스를 사용 하 여 해당 루트 메뉴 항목에 저장 하는 <xref:System.Web.UI.WebControls.Menu.Items%2A>속성.</xref:System.Web.UI.WebControls.Menu.Items%2A> </xref:System.Web.UI.WebControls.Menu> 이 컬렉션에도 사용 됩니다는 <xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A>속성은 <xref:System.Web.UI.WebControls.MenuItem>(있는 경우)에 메뉴 항목의 하위 메뉴 항목을 저장할 개체입니다.</xref:System.Web.UI.WebControls.MenuItem> </xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A>       MenuItemCollection 클래스를 사용 하는 컬렉션의 항목에 액세스 하는 여러 방법을 지원:-사용 된 <xref:System.Web.UI.WebControls.MenuItemCollection.Item%2A>인덱서를 직접 검색 하는 <xref:System.Web.UI.WebControls.MenuItem>특정 인덱스에 개체.</xref:System.Web.UI.WebControls.MenuItem> </xref:System.Web.UI.WebControls.MenuItemCollection.Item%2A>      -사용 된 <xref:System.Web.UI.WebControls.MenuItemCollection.GetEnumerator%2A>메서드는 컬렉션을 반복 하는 데 사용할 수 있는 열거자를 만드는.</xref:System.Web.UI.WebControls.MenuItemCollection.GetEnumerator%2A>      -사용 된 <xref:System.Web.UI.WebControls.MenuItemCollection.CopyTo%2A>컬렉션의 내용을 배열에 복사 하려면.</xref:System.Web.UI.WebControls.MenuItemCollection.CopyTo%2A>       MenuItemCollection 개체를 추가 및 제거 하 여 프로그래밍 방식으로 관리할 수 있습니다 <xref:System.Web.UI.WebControls.MenuItem>개체입니다.</xref:System.Web.UI.WebControls.MenuItem> 메뉴 항목 컬렉션에 추가 하려면 사용 된 <xref:System.Web.UI.WebControls.MenuItemCollection.Add%2A>또는 <xref:System.Web.UI.WebControls.MenuItemCollection.AddAt%2A>메서드.</xref:System.Web.UI.WebControls.MenuItemCollection.AddAt%2A> </xref:System.Web.UI.WebControls.MenuItemCollection.Add%2A> 컬렉션에서 노드를 제거 하려면 사용 하 여는 <xref:System.Web.UI.WebControls.MenuItemCollection.Remove%2A>, <xref:System.Web.UI.WebControls.MenuItemCollection.RemoveAt%2A>, 또는 <xref:System.Web.UI.WebControls.MenuItemCollection.Clear%2A>메서드.</xref:System.Web.UI.WebControls.MenuItemCollection.Clear%2A> </xref:System.Web.UI.WebControls.MenuItemCollection.RemoveAt%2A> </xref:System.Web.UI.WebControls.MenuItemCollection.Remove%2A>      > [!NOTE] > 때는 <xref:System.Web.UI.WebControls.Menu>컨트롤이 데이터 원본에 바인딩되는 <xref:System.Web.UI.WebControls.Menu.Items%2A>및 <xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A>컬렉션 바인딩이 수행 될 때마다 자동으로 채워집니다.</xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A> </xref:System.Web.UI.WebControls.Menu.Items%2A> </xref:System.Web.UI.WebControls.Menu> 바인딩 간의 컬렉션 변경 내용이 손실 됩니다. 이러한 변경 내용을 유지 하려면 데이터 원본을 업데이트 하거나 바인딩할 때마다 컬렉션을 수동으로 다시 작성 합니다.       MenuItemCollection 클래스 자체는 컬렉션에 대 한 정보를 검색할 수 있도록 하는 메서드와 속성을 포함 합니다. 컬렉션에 있는 항목 수를 확인 하려면 사용 하 여는 <xref:System.Web.UI.WebControls.MenuItemCollection.Count%2A>속성.</xref:System.Web.UI.WebControls.MenuItemCollection.Count%2A> 특정 컬렉션에 있는지 확인 하려는 경우 <xref:System.Web.UI.WebControls.MenuItem>개체를 가져오려면는 <xref:System.Web.UI.WebControls.MenuItemCollection.Contains%2A>메서드.</xref:System.Web.UI.WebControls.MenuItemCollection.Contains%2A> </xref:System.Web.UI.WebControls.MenuItem> 인덱스를 가져옵니다는 <xref:System.Web.UI.WebControls.MenuItem>사용 하 여 컬렉션의 개체는 <xref:System.Web.UI.WebControls.MenuItemCollection.IndexOf%2A>메서드.</xref:System.Web.UI.WebControls.MenuItemCollection.IndexOf%2A> </xref:System.Web.UI.WebControls.MenuItem>"
  example:
  - "The following code example demonstrates how to populate the <xref:System.Web.UI.WebControls.Menu.Items%2A> and <xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A> collections using declarative syntax.  \n  \n [!code-cs[MenuDeclarative#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_381_1.aspx)]\n [!code-vb[MenuDeclarative#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_381_1.aspx)]  \n  \n The following code example demonstrates how to programmatically add a <xref:System.Web.UI.WebControls.MenuItem> object to the <xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A> collection of a root menu item.  \n  \n [!code-vb[MenuItemCollectionAdd#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_381_2.aspx)]\n [!code-cs[MenuItemCollectionAdd#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_381_2.aspx)]"
  syntax:
    content: 'public sealed class MenuItemCollection : System.Collections.ICollection, System.Web.UI.IStateManager'
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  - System.Web.UI.IStateManager
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemCollection.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.MenuItemCollection
  langs:
  - csharp
  name: MenuItemCollection()
  nameWithType: MenuItemCollection.MenuItemCollection()
  fullName: System.Web.UI.WebControls.MenuItemCollection.MenuItemCollection()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.UI.WebControls.MenuItemCollection&quot;> </xref> 클래스는 기본값을 사용 합니다."
  remarks: "새 인스턴스를 초기화 하려면이 생성자를 사용 하는 <xref:System.Web.UI.WebControls.MenuItemCollection>클래스는 기본값을 사용 합니다.</xref:System.Web.UI.WebControls.MenuItemCollection> 이 생성자는 일반적으로 부모 메뉴 (또는 소유자)가 필요 하지 메뉴 항목 루트의 컬렉션을 만들 때 사용 됩니다.      > [!NOTE] > 사용 하는 오버 로드 된 생성자를 사용 해야 메뉴 항목의 자식 컬렉션을 만들 때는 `owner` 부모 메뉴 항목을 지정 하려면이 생성자 대신 매개 변수입니다.       확장할 때 주로 컨트롤 개발자가이 생성자는 사용 된 <xref:System.Web.UI.WebControls.Menu>컨트롤을 초기화는 <xref:System.Web.UI.WebControls.Menu.Items%2A>속성.</xref:System.Web.UI.WebControls.Menu.Items%2A> </xref:System.Web.UI.WebControls.Menu>"
  syntax:
    content: public MenuItemCollection ();
    parameters: []
  overload: System.Web.UI.WebControls.MenuItemCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemCollection.#ctor(System.Web.UI.WebControls.MenuItem)
  id: '#ctor(System.Web.UI.WebControls.MenuItem)'
  parent: System.Web.UI.WebControls.MenuItemCollection
  langs:
  - csharp
  name: MenuItemCollection(MenuItem)
  nameWithType: MenuItemCollection.MenuItemCollection(MenuItem)
  fullName: System.Web.UI.WebControls.MenuItemCollection.MenuItemCollection(MenuItem)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.UI.WebControls.MenuItemCollection&quot;> </xref> 클래스 지정 된 부모 메뉴 항목 (또는 소유자)를 사용 합니다."
  remarks: "새 인스턴스를 초기화 하려면이 생성자를 사용 하는 <xref:System.Web.UI.WebControls.MenuItemCollection>클래스 지정 된 부모 메뉴 항목 (또는 소유자)를 사용 합니다.</xref:System.Web.UI.WebControls.MenuItemCollection> 이 생성자는 일반적으로 부모 메뉴 항목을 지정 해야 하는 하위 메뉴 항목의 컬렉션을 만들 때 사용 됩니다.      > [!NOTE] > 메뉴 항목 루트의 컬렉션을 만들 때 루트 메뉴 항목에 부모 메뉴 항목에는 없기 때문에 기본 생성자를 사용 하 여 고려해 야 합니다.       확장할 때 주로 컨트롤 개발자가이 생성자는 사용 된 <xref:System.Web.UI.WebControls.MenuItem>초기화 하기 위해 클래스는 <xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A>속성.</xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A> </xref:System.Web.UI.WebControls.MenuItem>"
  syntax:
    content: public MenuItemCollection (System.Web.UI.WebControls.MenuItem owner);
    parameters:
    - id: owner
      type: System.Web.UI.WebControls.MenuItem
      description: "A <xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;> </xref> 현재 부모 메뉴 항목을 나타내는 <xref href=&quot;System.Web.UI.WebControls.MenuItemCollection&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.MenuItemCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemCollection.Add(System.Web.UI.WebControls.MenuItem)
  id: Add(System.Web.UI.WebControls.MenuItem)
  parent: System.Web.UI.WebControls.MenuItemCollection
  langs:
  - csharp
  name: Add(MenuItem)
  nameWithType: MenuItemCollection.Add(MenuItem)
  fullName: System.Web.UI.WebControls.MenuItemCollection.Add(MenuItem)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "지정 된 추가 <xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;> </xref> 개체를 현재 끝 <xref href=&quot;System.Web.UI.WebControls.MenuItemCollection&quot;> </xref> 개체입니다."
  remarks: "Add 메서드를 사용 하 여 지정 된 추가할 <xref:System.Web.UI.WebControls.MenuItem>개체 컬렉션의 끝입니다.</xref:System.Web.UI.WebControls.MenuItem>      > [!NOTE] > Null 값을 추가 하 고 중복 수 <xref:System.Web.UI.WebControls.MenuItem>개체를 컬렉션에.</xref:System.Web.UI.WebControls.MenuItem>       삽입할 수 있습니다는 <xref:System.Web.UI.WebControls.MenuItem>를 사용 하 여 특정 인덱스에 컬렉션의 개체는 <xref:System.Web.UI.WebControls.MenuItemCollection.AddAt%2A>메서드.</xref:System.Web.UI.WebControls.MenuItemCollection.AddAt%2A> </xref:System.Web.UI.WebControls.MenuItem>"
  example:
  - "The following code example demonstrates how to use the Add method to programmatically add a <xref:System.Web.UI.WebControls.MenuItem> object to a <xref:System.Web.UI.WebControls.MenuItemCollection> object.  \n  \n [!code-vb[MenuItemCollectionAdd#1](~/add/codesnippet/visualbasic/0df9c322-61ee-44a7-857e-_1.aspx)]\n [!code-cs[MenuItemCollectionAdd#1](~/add/codesnippet/csharp/0df9c322-61ee-44a7-857e-_1.aspx)]"
  syntax:
    content: public void Add (System.Web.UI.WebControls.MenuItem child);
    parameters:
    - id: child
      type: System.Web.UI.WebControls.MenuItem
      description: "<xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;> </xref> 현재의 끝에 추가할 <xref href=&quot;System.Web.UI.WebControls.MenuItemCollection&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.MenuItemCollection.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>child</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemCollection.AddAt(System.Int32,System.Web.UI.WebControls.MenuItem)
  id: AddAt(System.Int32,System.Web.UI.WebControls.MenuItem)
  parent: System.Web.UI.WebControls.MenuItemCollection
  langs:
  - csharp
  name: AddAt(Int32,MenuItem)
  nameWithType: MenuItemCollection.AddAt(Int32,MenuItem)
  fullName: System.Web.UI.WebControls.MenuItemCollection.AddAt(Int32,MenuItem)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "지정 된 삽입 <xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;> </xref> 현재에서 개체 <xref href=&quot;System.Web.UI.WebControls.MenuItemCollection&quot;> </xref> 개체에서 지정 된 인덱스 위치에 있습니다."
  remarks: "AddAt 메서드를 사용 하 여 지정 된 삽입 <xref:System.Web.UI.WebControls.MenuItem>지정된 된 인덱스에 컬렉션에 있는 개체입니다.</xref:System.Web.UI.WebControls.MenuItem>      > [!NOTE] > Null 값을 추가 하 고 중복 수 <xref:System.Web.UI.WebControls.MenuItem>개체를 컬렉션에.</xref:System.Web.UI.WebControls.MenuItem>       추가할 수도 있습니다는 <xref:System.Web.UI.WebControls.MenuItem>개체를 사용 하 여 컬렉션의 끝에서 <xref:System.Web.UI.WebControls.MenuItemCollection.Add%2A>메서드.</xref:System.Web.UI.WebControls.MenuItemCollection.Add%2A> </xref:System.Web.UI.WebControls.MenuItem>"
  example:
  - "The following code example demonstrates how to use the AddAt method to programmatically insert a <xref:System.Web.UI.WebControls.MenuItem> object in a <xref:System.Web.UI.WebControls.MenuItemCollection> object at a specified index location.  \n  \n [!code-cs[MenuItemCollectionAddAt#1](~/add/codesnippet/csharp/4689054e-5746-4d49-8a86-_1.aspx)]\n [!code-vb[MenuItemCollectionAddAt#1](~/add/codesnippet/visualbasic/4689054e-5746-4d49-8a86-_1.aspx)]"
  syntax:
    content: public void AddAt (int index, System.Web.UI.WebControls.MenuItem child);
    parameters:
    - id: index
      type: System.Int32
      description: "삽입할&0;부터 시작 인덱스 위치는 <xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;> </xref>합니다."
    - id: child
      type: System.Web.UI.WebControls.MenuItem
      description: "<xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;> </xref> 를 삽입 합니다."
  overload: System.Web.UI.WebControls.MenuItemCollection.AddAt*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemCollection.Clear
  id: Clear
  parent: System.Web.UI.WebControls.MenuItemCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: MenuItemCollection.Clear()
  fullName: System.Web.UI.WebControls.MenuItemCollection.Clear()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "현재에서 모든 항목을 제거 <xref href=&quot;System.Web.UI.WebControls.MenuItemCollection&quot;> </xref> 개체입니다."
  remarks: "Clear 메서드를 사용 하 여 제거할 모든 <xref:System.Web.UI.WebControls.MenuItem>개체는 현재에서 <xref:System.Web.UI.WebControls.MenuItemCollection>개체입니다.</xref:System.Web.UI.WebControls.MenuItemCollection> </xref:System.Web.UI.WebControls.MenuItem>      > [!NOTE] > 컬렉션에서 개별 노드를 제거 하는 것이 좋습니다를 사용 하 여 <xref:System.Web.UI.WebControls.MenuItemCollection.Remove%2A>또는 <xref:System.Web.UI.WebControls.MenuItemCollection.RemoveAt%2A>메서드.</xref:System.Web.UI.WebControls.MenuItemCollection.RemoveAt%2A> </xref:System.Web.UI.WebControls.MenuItemCollection.Remove%2A>"
  example:
  - "The following code example demonstrates how to use the Clear method to remove all items from the <xref:System.Web.UI.WebControls.Menu.Items%2A> collection of a <xref:System.Web.UI.WebControls.Menu> control.  \n  \n [!code-cs[MenuItemCollectionClear#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_183_1.aspx)]\n [!code-vb[MenuItemCollectionClear#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_183_1.aspx)]"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Web.UI.WebControls.MenuItemCollection.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemCollection.Contains(System.Web.UI.WebControls.MenuItem)
  id: Contains(System.Web.UI.WebControls.MenuItem)
  parent: System.Web.UI.WebControls.MenuItemCollection
  langs:
  - csharp
  name: Contains(MenuItem)
  nameWithType: MenuItemCollection.Contains(MenuItem)
  fullName: System.Web.UI.WebControls.MenuItemCollection.Contains(MenuItem)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "결정 하는지 여부를 지정 된 <xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;> </xref> 개체 컬렉션에에서 포함 되어 있습니다."
  remarks: "Contains 메서드를 사용 하 여 확인 여부는 <xref:System.Web.UI.WebControls.MenuItem>개체가 현재에 포함 되어 <xref:System.Web.UI.WebControls.MenuItemCollection>개체입니다.</xref:System.Web.UI.WebControls.MenuItemCollection> </xref:System.Web.UI.WebControls.MenuItem> <xref:System.Web.UI.WebControls.MenuItem>및 해당 속성에 전달 된 값과 비교 됩니다.</xref:System.Web.UI.WebControls.MenuItem> 이 메서드는의 존재 여부를 테스트 하는 데 주로 사용 된 <xref:System.Web.UI.WebControls.MenuItem>추가 하거나 컬렉션에서 제거 되는 메뉴 항목 등의 작업을 수행 하기 전에 개체입니다.</xref:System.Web.UI.WebControls.MenuItem>"
  example:
  - "The following code example demonstrates how to use the Contains method to determine whether a <xref:System.Web.UI.WebControls.MenuItem> object is contained within a <xref:System.Web.UI.WebControls.MenuItemCollection> object.  \n  \n [!code-cs[MenuItemCollectionContains#1](~/add/codesnippet/csharp/f4ddd916-8b0f-407b-a05b-_1.aspx)]\n [!code-vb[MenuItemCollectionContains#1](~/add/codesnippet/visualbasic/f4ddd916-8b0f-407b-a05b-_1.aspx)]"
  syntax:
    content: public bool Contains (System.Web.UI.WebControls.MenuItem c);
    parameters:
    - id: c
      type: System.Web.UI.WebControls.MenuItem
      description: "<xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;> </xref> 찾으려고 합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>하는 경우 지정 된 <xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;> </xref> 개체 컬렉션에 포함 되지 않았으면, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.MenuItemCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemCollection.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Web.UI.WebControls.MenuItemCollection
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: MenuItemCollection.CopyTo(Array,Int32)
  fullName: System.Web.UI.WebControls.MenuItemCollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "모든 항목을 복사는 <xref href=&quot;System.Web.UI.WebControls.MenuItemCollection&quot;> </xref> 호환 되는&1; 차원 개체 <xref:System.Array>대상 배열의 지정된 된 인덱스부터 시작 합니다.</xref:System.Array>"
  remarks: "CopyTo 메서드를 사용 하 여 현재 <xref:System.Web.UI.WebControls.MenuItemCollection>개체에 지정 된&0;부터 시작 <xref:System.Array?displayProperty=fullName>.</xref:System.Array?displayProperty=fullName> 에</xref:System.Web.UI.WebControls.MenuItemCollection> 내용을 복사 하려면 항목 대상 배열의 지정 된 인덱스부터 복사 됩니다. 와 <xref:System.Array?displayProperty=fullName>의 항목에 액세스 하려면 배열 구문을 사용할 수 있습니다는 <xref:System.Web.UI.WebControls.MenuItemCollection>개체입니다.</xref:System.Web.UI.WebControls.MenuItemCollection> </xref:System.Array?displayProperty=fullName>       대신 사용할 수도 있습니다는 <xref:System.Web.UI.WebControls.MenuItemCollection.GetEnumerator%2A>컬렉션의 항목에 액세스를 사용할 수 있는 열거자를 만드는 방법.</xref:System.Web.UI.WebControls.MenuItemCollection.GetEnumerator%2A>"
  syntax:
    content: public void CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "0부터 시작 <xref:System.Array>현재에서 복사한 항목을 받는 <xref href=&quot;System.Web.UI.WebControls.MenuItemCollection&quot;> </xref>.</xref:System.Array>"
    - id: index
      type: System.Int32
      description: "대상 배열에서 복사 된 내용을 받기 시작 하는 위치입니다."
  overload: System.Web.UI.WebControls.MenuItemCollection.CopyTo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>array</code>배열이 <xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;> </xref> 개체입니다."
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemCollection.CopyTo(System.Web.UI.WebControls.MenuItem[],System.Int32)
  id: CopyTo(System.Web.UI.WebControls.MenuItem[],System.Int32)
  parent: System.Web.UI.WebControls.MenuItemCollection
  langs:
  - csharp
  name: CopyTo(MenuItem[],Int32)
  nameWithType: MenuItemCollection.CopyTo(MenuItem[],Int32)
  fullName: System.Web.UI.WebControls.MenuItemCollection.CopyTo(MenuItem[],Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "모든 항목을 복사는 <xref href=&quot;System.Web.UI.WebControls.MenuItemCollection&quot;> </xref> 호환 가능한&1; 차원 배열에 개체 <xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;> </xref> 대상 배열의 지정된 된 인덱스부터 시작 합니다."
  remarks: "CopyTo 메서드를 사용 하 여 현재의 내용을 복사 <xref:System.Web.UI.WebControls.MenuItemCollection>지정된 된&0;부터 시작 배열에는 개체입니다.</xref:System.Web.UI.WebControls.MenuItemCollection> 항목 대상 배열의 지정 된 인덱스부터 복사 됩니다. 배열에서는 다음 구문을 사용할 수 있습니다 배열에서 항목에 액세스 하는 <xref:System.Web.UI.WebControls.MenuItemCollection>개체입니다.</xref:System.Web.UI.WebControls.MenuItemCollection>       대신 사용할 수도 있습니다는 <xref:System.Web.UI.WebControls.MenuItemCollection.GetEnumerator%2A>컬렉션의 항목에 액세스를 사용할 수 있는 열거자를 만드는 방법.</xref:System.Web.UI.WebControls.MenuItemCollection.GetEnumerator%2A>"
  example:
  - "The following code example demonstrates how to use the CopyTo method to copy the items in a <xref:System.Web.UI.WebControls.MenuItemCollection> object to an array of <xref:System.Web.UI.WebControls.MenuItem> objects.  \n  \n [!code-cs[MenuItemCollectionCopyTo#1](~/add/codesnippet/csharp/04268ea3-6298-4f73-81e4-_1.aspx)]\n [!code-vb[MenuItemCollectionCopyTo#1](~/add/codesnippet/visualbasic/04268ea3-6298-4f73-81e4-_1.aspx)]"
  syntax:
    content: public void CopyTo (System.Web.UI.WebControls.MenuItem[] array, int index);
    parameters:
    - id: array
      type: System.Web.UI.WebControls.MenuItem[]
      description: "0부터 시작 배열 <xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;> </xref> 현재에서 복사한 항목을 받는 개체 <xref href=&quot;System.Web.UI.WebControls.MenuItemCollection&quot;> </xref>합니다."
    - id: index
      type: System.Int32
      description: "대상 배열에서 복사 된 내용을 받기 시작 하는 위치입니다."
  overload: System.Web.UI.WebControls.MenuItemCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemCollection.Count
  id: Count
  parent: System.Web.UI.WebControls.MenuItemCollection
  langs:
  - csharp
  name: Count
  nameWithType: MenuItemCollection.Count
  fullName: System.Web.UI.WebControls.MenuItemCollection.Count
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "현재에 포함 된 메뉴 항목의 수를 가져옵니다 <xref href=&quot;System.Web.UI.WebControls.MenuItemCollection&quot;> </xref> 개체입니다."
  remarks: "Count 속성을 사용 하 여에 있는 항목의 수를 확인 하는 <xref:System.Web.UI.WebControls.MenuItemCollection>개체입니다.</xref:System.Web.UI.WebControls.MenuItemCollection> 이 속성은 일반적으로 컬렉션의 상한을 결정 하는 컬렉션을 반복할 때 사용 됩니다. Count 속성 컬렉션이 비어 있는지 여부를 확인 하려면 일반적으로 사용 됩니다."
  example:
  - "The following code example demonstrates how to use the Count property to determine the number of menu items in a <xref:System.Web.UI.WebControls.MenuItemCollection> object.  \n  \n [!code-cs[MenuItemCollectionCount#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_91_1.aspx)]\n [!code-vb[MenuItemCollectionCount#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_91_1.aspx)]"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "현재에 포함 된 메뉴 항목 수가 <xref href=&quot;System.Web.UI.WebControls.MenuItemCollection&quot;> </xref> 개체입니다."
  overload: System.Web.UI.WebControls.MenuItemCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Web.UI.WebControls.MenuItemCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: MenuItemCollection.GetEnumerator()
  fullName: System.Web.UI.WebControls.MenuItemCollection.GetEnumerator()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "현재에서 항목을 반복 하는 데 사용할 수 있는 열거자를 반환 <xref href=&quot;System.Web.UI.WebControls.MenuItemCollection&quot;> </xref> 개체입니다."
  remarks: "GetEnumerator 메서드를 사용 하 여 쉽게 반복할 수 현재의 각 항목을 가져올 수 있는 열거자를 만들 <xref:System.Web.UI.WebControls.MenuItemCollection>개체입니다.</xref:System.Web.UI.WebControls.MenuItemCollection> 열거자에서 현재 가리키는 항목을 사용는 <xref:System.Collections.IEnumerator.Current%2A>속성.</xref:System.Collections.IEnumerator.Current%2A> 사용 된 <xref:System.Collections.IEnumerator.MoveNext%2A>메서드를 다음 항목으로 이동 합니다.</xref:System.Collections.IEnumerator.MoveNext%2A> 사용 하 여 열거자를 컬렉션의 시작 부분으로 다시 이동 해야 할 경우는 <xref:System.Collections.IEnumerator.Reset%2A>메서드.</xref:System.Collections.IEnumerator.Reset%2A>      > [!NOTE] > 후에 열거자를 만들거나 사용 하 여는 <xref:System.Collections.IEnumerator.Reset%2A>호출 해야 합니다는 <xref:System.Collections.IEnumerator.MoveNext%2A>메서드.</xref:System.Collections.IEnumerator.MoveNext%2A> </xref:System.Collections.IEnumerator.Reset%2A> 그렇지 않은 경우으로 표시 되는 항목의 <xref:System.Collections.IEnumerator.Current%2A>속성이 정의 되지 않습니다.</xref:System.Collections.IEnumerator.Current%2A>       대신 사용할 수도 있습니다는 <xref:System.Web.UI.WebControls.MenuItemCollection.CopyTo%2A>메서드 항목의 컬렉션을 배열에 복사 합니다.</xref:System.Web.UI.WebControls.MenuItemCollection.CopyTo%2A> 그런 다음 컬렉션의 항목에 액세스할 수 배열을 사용할 수 있습니다."
  example:
  - "The following code example demonstrates how to use the GetEnumerator method to create an enumerator that contains the submenu items of the `Music` menu item in a <xref:System.Web.UI.WebControls.Menu> control.  \n  \n [!code-cs[MenuItemCollectionGetEnumerator#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_25_1.aspx)]\n [!code-vb[MenuItemCollectionGetEnumerator#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_25_1.aspx)]"
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "현재에서 항목을 반복 하는 데 사용할 수 있는 열거자 <xref href=&quot;System.Web.UI.WebControls.MenuItemCollection&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.MenuItemCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemCollection.IndexOf(System.Web.UI.WebControls.MenuItem)
  id: IndexOf(System.Web.UI.WebControls.MenuItem)
  parent: System.Web.UI.WebControls.MenuItemCollection
  langs:
  - csharp
  name: IndexOf(MenuItem)
  nameWithType: MenuItemCollection.IndexOf(MenuItem)
  fullName: System.Web.UI.WebControls.MenuItemCollection.IndexOf(MenuItem)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "지정 된 인덱스를 결정 <xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;> </xref> 컬렉션의 개체입니다."
  remarks: "IndexOf 메서드를 사용 하 여 지정 된 인덱스를 확인 하려면 <xref:System.Web.UI.WebControls.MenuItem>현재에서 개체 <xref:System.Web.UI.WebControls.MenuItemCollection>개체입니다.</xref:System.Web.UI.WebControls.MenuItemCollection> </xref:System.Web.UI.WebControls.MenuItem> 메뉴 항목 컬렉션에 없는 경우-1이 반환 됩니다.      > [!NOTE] > 컬렉션에 여러 번 표시 하는 지정 된 메뉴 항목을 처음 나타나는 인덱스 반환 됩니다."
  example:
  - "The following code example demonstrates how to use the IndexOf method to determine the index of a <xref:System.Web.UI.WebControls.MenuItem> object within a <xref:System.Web.UI.WebControls.MenuItemCollection> object.  \n  \n [!code-cs[MenuItemCollectionIndexOf#1](~/add/codesnippet/csharp/2022a36d-8d0a-4c79-82a2-_1.aspx)]\n [!code-vb[MenuItemCollectionIndexOf#1](~/add/codesnippet/visualbasic/2022a36d-8d0a-4c79-82a2-_1.aspx)]"
  syntax:
    content: public int IndexOf (System.Web.UI.WebControls.MenuItem value);
    parameters:
    - id: value
      type: System.Web.UI.WebControls.MenuItem
      description: "<xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;> </xref> 찾으려고 합니다."
    return:
      type: System.Int32
      description: "첫 번째로 나타나는 항목의&0;부터 시작 인덱스 <code> value </code> 현재 <xref href=&quot;System.Web.UI.WebControls.MenuItemCollection&quot;> </xref>이거나, 없는 경우, 그렇지 않으면-1입니다."
  overload: System.Web.UI.WebControls.MenuItemCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemCollection.IsSynchronized
  id: IsSynchronized
  parent: System.Web.UI.WebControls.MenuItemCollection
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: MenuItemCollection.IsSynchronized
  fullName: System.Web.UI.WebControls.MenuItemCollection.IsSynchronized
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "에 대 한 액세스 여부를 나타내는 값을 가져옵니다는 <xref href=&quot;System.Web.UI.WebControls.MenuItemCollection&quot;> </xref> 개체가 동기화 되었는지 (스레드로부터 안전함)."
  remarks: "IsSynchronized 속성이 나타내는 데 사용 됩니다에 액세스할 수 있는지 여부는 <xref:System.Web.UI.WebControls.MenuItemCollection>개체가 동기화 되었는지 (스레드로부터 안전함).</xref:System.Web.UI.WebControls.MenuItemCollection> 이 속성에서 파생 되는 <xref:System.Collections.ICollection?displayProperty=fullName>클래스 및 항상 반환 하도록 재정의 `false`.</xref:System.Collections.ICollection?displayProperty=fullName>       IsSynchronized 속성에 대 한 자세한 내용은 참조는 <xref:System.Collections.ICollection.IsSynchronized%2A>의 속성은 <xref:System.Collections.ICollection>인터페이스.</xref:System.Collections.ICollection> </xref:System.Collections.ICollection.IsSynchronized%2A>"
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "항상 반환 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.MenuItemCollection.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Web.UI.WebControls.MenuItemCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: MenuItemCollection.Item(Int32)
  fullName: System.Web.UI.WebControls.MenuItemCollection.Item(Int32)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "가져옵니다는 <xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;> </xref> 현재에서 지정된 된 인덱스에 개체 <xref href=&quot;System.Web.UI.WebControls.MenuItemCollection&quot;> </xref> 개체입니다."
  remarks: "이 인덱서를 사용 하 여 액세스 하는 <xref:System.Web.UI.WebControls.MenuItem>개체는 현재에서 <xref:System.Web.UI.WebControls.MenuItemCollection>배열 표기법을 사용 하 여 지정된 된 인덱스에는 개체입니다.</xref:System.Web.UI.WebControls.MenuItemCollection> </xref:System.Web.UI.WebControls.MenuItem> 인덱서 액세스 하거나, 수정 하거나 대체할 수 있습니다는 <xref:System.Web.UI.WebControls.MenuItem>개체 컬렉션에서 직접.</xref:System.Web.UI.WebControls.MenuItem>"
  example:
  - "The following code example demonstrates how to use the indexer to retrieve the root menu item from the <xref:System.Web.UI.WebControls.Menu.Items%2A> collection of a <xref:System.Web.UI.WebControls.Menu> control.  \n  \n [!code-vb[MenuItemCollectionAdd#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_785_1.aspx)]\n [!code-cs[MenuItemCollectionAdd#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_785_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.MenuItem this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "0부터 시작 인덱스는 <xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;> </xref> 를 검색 합니다."
    return:
      type: System.Web.UI.WebControls.MenuItem
      description: "<xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;> </xref> 현재에서 지정된 된 인덱스에 <xref href=&quot;System.Web.UI.WebControls.MenuItemCollection&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.MenuItemCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemCollection.Remove(System.Web.UI.WebControls.MenuItem)
  id: Remove(System.Web.UI.WebControls.MenuItem)
  parent: System.Web.UI.WebControls.MenuItemCollection
  langs:
  - csharp
  name: Remove(MenuItem)
  nameWithType: MenuItemCollection.Remove(MenuItem)
  fullName: System.Web.UI.WebControls.MenuItemCollection.Remove(MenuItem)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "지정 된 제거 <xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;> </xref> 에서 개체는 <xref href=&quot;System.Web.UI.WebControls.MenuItemCollection&quot;> </xref> 개체입니다."
  remarks: "Remove 메서드를 사용 하 여 컬렉션에서 지정 된 메뉴 항목을 제거 합니다. 해당 메뉴 항목 아래에 있는 모든 항목은 다음 빈 자리를 채웁니다 위로 이동 됩니다. 이동된 된 항목의 인덱스도 업데이트 됩니다.      > [!NOTE] >는 <xref:System.Web.UI.WebControls.MenuItemCollection>개체 수 null 값이 포함 될 뿐만 아니라 복제 <xref:System.Web.UI.WebControls.MenuItem>개체.</xref:System.Web.UI.WebControls.MenuItem> </xref:System.Web.UI.WebControls.MenuItemCollection>       제거할 수 있습니다 메뉴 항목 컬렉션에 있는 특정 인덱스에서 사용 하 여는 <xref:System.Web.UI.WebControls.MenuItemCollection.RemoveAt%2A>메서드.</xref:System.Web.UI.WebControls.MenuItemCollection.RemoveAt%2A> 사용 하 여 컬렉션에서 모든 메뉴 항목을 제거할 수도 있습니다는 <xref:System.Web.UI.WebControls.MenuItemCollection.Clear%2A>메서드.</xref:System.Web.UI.WebControls.MenuItemCollection.Clear%2A>"
  example:
  - "The following code example demonstrates how to use the Remove method to programmatically remove a <xref:System.Web.UI.WebControls.MenuItem> object from a <xref:System.Web.UI.WebControls.MenuItemCollection> object.  \n  \n [!code-vb[MenuItemCollectionRemove#1](~/add/codesnippet/visualbasic/92b6cc10-641c-4936-b3a9-_1.aspx)]\n [!code-cs[MenuItemCollectionRemove#1](~/add/codesnippet/csharp/92b6cc10-641c-4936-b3a9-_1.aspx)]"
  syntax:
    content: public void Remove (System.Web.UI.WebControls.MenuItem value);
    parameters:
    - id: value
      type: System.Web.UI.WebControls.MenuItem
      description: "<xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;> </xref> 제거할 개체입니다."
  overload: System.Web.UI.WebControls.MenuItemCollection.Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>value</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Web.UI.WebControls.MenuItemCollection
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: MenuItemCollection.RemoveAt(Int32)
  fullName: System.Web.UI.WebControls.MenuItemCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "제거는 <xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;> </xref> 개체에서 현재에서 지정한 인덱스 위치에 <xref href=&quot;System.Web.UI.WebControls.MenuItemCollection&quot;> </xref> 개체입니다."
  remarks: "RemoveAt 메서드를 사용 하 여 제거 하는 <xref:System.Web.UI.WebControls.MenuItem>개체 컬렉션에서 지정한 인덱스 위치입니다.</xref:System.Web.UI.WebControls.MenuItem> 해당 메뉴 항목 아래에 있는 모든 항목은 다음 빈 자리를 채웁니다 위로 이동 됩니다. 이동된 된 항목의 인덱스도 업데이트 됩니다.      > [!NOTE] >는 <xref:System.Web.UI.WebControls.MenuItemCollection>개체 수 null 값이 포함 될 뿐만 아니라 복제 <xref:System.Web.UI.WebControls.MenuItem>개체.</xref:System.Web.UI.WebControls.MenuItem> </xref:System.Web.UI.WebControls.MenuItemCollection>       대신 특정을 제거할 수 있습니다 <xref:System.Web.UI.WebControls.MenuItem>사용 하 여 개체는 <xref:System.Web.UI.WebControls.MenuItemCollection.Remove%2A>메서드.</xref:System.Web.UI.WebControls.MenuItemCollection.Remove%2A> </xref:System.Web.UI.WebControls.MenuItem> 사용 하 여 컬렉션에서 모든 메뉴 항목을 제거할 수도 있습니다는 <xref:System.Web.UI.WebControls.MenuItemCollection.Clear%2A>메서드.</xref:System.Web.UI.WebControls.MenuItemCollection.Clear%2A>"
  example:
  - "The following code example demonstrates how to use the RemoveAt method to programmatically remove a <xref:System.Web.UI.WebControls.MenuItem> object from a <xref:System.Web.UI.WebControls.MenuItemCollection> object at a specified index location.  \n  \n [!code-cs[MenuItemCollectionRemoveAt#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_163_1.aspx)]\n [!code-vb[MenuItemCollectionRemoveAt#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_163_1.aspx)]"
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "제거할 메뉴 항목의&0;부터 시작 인덱스 위치입니다."
  overload: System.Web.UI.WebControls.MenuItemCollection.RemoveAt*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemCollection.SyncRoot
  id: SyncRoot
  parent: System.Web.UI.WebControls.MenuItemCollection
  langs:
  - csharp
  name: SyncRoot
  nameWithType: MenuItemCollection.SyncRoot
  fullName: System.Web.UI.WebControls.MenuItemCollection.SyncRoot
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "에 대 한 액세스를 동기화 하는 데 사용할 수 있는 개체를 가져옵니다는 <xref href=&quot;System.Web.UI.WebControls.MenuItemCollection&quot;> </xref> 개체입니다."
  remarks: "SyncRoot 속성의 동기화 된 버전 제공는 <xref:System.Web.UI.WebControls.MenuItemCollection>동기화 (스레드) 코드와 함께 사용할 수 있는 개체입니다.</xref:System.Web.UI.WebControls.MenuItemCollection>      > [!CAUTION] >는 <xref:System.Web.UI.WebControls.MenuItemCollection.IsSynchronized%2A>속성이이 클래스는 항상 반환 `false`, 않는다는 의미는 <xref:System.Web.UI.WebControls.MenuItemCollection>클래스 (스레드로부터 안전 하지) 동기화 되지 않습니다.</xref:System.Web.UI.WebControls.MenuItemCollection> </xref:System.Web.UI.WebControls.MenuItemCollection.IsSynchronized%2A>       동기화 코드의 SyncRoot 개체에 대 한 작업을 수행 해야 합니다는 <xref:System.Web.UI.WebControls.MenuItemCollection>컬렉션에 대해 직접는 <xref:System.Web.UI.WebControls.MenuItemCollection>개체 자체입니다.</xref:System.Web.UI.WebControls.MenuItemCollection> </xref:System.Web.UI.WebControls.MenuItemCollection> 이렇게 하면 다른 개체에서 파생 된 컬렉션의 적절 한 작업입니다. 특히, 동시에 수정할 수 있는 다른 스레드와 적절 한 동기화를 유지 관리는 <xref:System.Web.UI.WebControls.MenuItemCollection>개체입니다.</xref:System.Web.UI.WebControls.MenuItemCollection>      > [!NOTE] >이 구현에서 반환 되는 개체는 <xref:System.Collections.ArrayList>저장 하는 데 사용 되는 개체는 <xref:System.Web.UI.WebControls.MenuItem>컬렉션의 개체입니다.</xref:System.Web.UI.WebControls.MenuItem> </xref:System.Collections.ArrayList>       컬렉션을 열거 본질적으로 스레드로부터 안전한 프로시저가 아닙니다. 컬렉션이 동기화 되어 있을 때 다른 스레드에서 수 수정할 예외를 throw 하면 열거자는 컬렉션입니다. 열거 동안 스레드 보안을 보장 하려면 전체 열거 동안 컬렉션을 잠글 하거나 다른 스레드에서 변경 된 내용으로 인해 발생 한 예외를 catch 합니다.       SyncRoot 속성에 대 한 자세한 내용은 참조는 <xref:System.Collections.ICollection.SyncRoot%2A>의 속성은 <xref:System.Collections.ICollection>인터페이스.</xref:System.Collections.ICollection> </xref:System.Collections.ICollection.SyncRoot%2A>"
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "<xref:System.Object>에 대 한 액세스를 동기화 하는 데 사용 하 여 <xref href=&quot;System.Web.UI.WebControls.MenuItemCollection&quot;> </xref>.</xref:System.Object>"
  overload: System.Web.UI.WebControls.MenuItemCollection.SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemCollection.System#Web#UI#IStateManager#IsTrackingViewState
  id: System#Web#UI#IStateManager#IsTrackingViewState
  isEii: true
  parent: System.Web.UI.WebControls.MenuItemCollection
  langs:
  - csharp
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: MenuItemCollection.System.Web.UI.IStateManager.IsTrackingViewState
  fullName: System.Web.UI.WebControls.MenuItemCollection.System.Web.UI.IStateManager.IsTrackingViewState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "나타내는 값을 가져옵니다 여부는 <xref href=&quot;System.Web.UI.WebControls.MenuItemCollection&quot;> </xref> 개체가 해당 뷰 상태의 변경 내용을 저장 합니다."
  syntax:
    content: bool System.Web.UI.IStateManager.IsTrackingViewState { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>컨트롤의 상태를 저장 하도록 표시 된 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.MenuItemCollection.System#Web#UI#IStateManager#IsTrackingViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemCollection.System#Web#UI#IStateManager#LoadViewState(System.Object)
  id: System#Web#UI#IStateManager#LoadViewState(System.Object)
  isEii: true
  parent: System.Web.UI.WebControls.MenuItemCollection
  langs:
  - csharp
  name: System.Web.UI.IStateManager.LoadViewState(Object)
  nameWithType: MenuItemCollection.System.Web.UI.IStateManager.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.MenuItemCollection.System.Web.UI.IStateManager.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "로드는 <xref href=&quot;System.Web.UI.WebControls.MenuItemCollection&quot;> </xref> 개체의 뷰 상태를 이전에 저장 합니다."
  syntax:
    content: void IStateManager.LoadViewState (object state);
    parameters:
    - id: state
      type: System.Object
      description: "<xref:System.Object>저장 된 뷰 상태 값이 들어 있는.</xref:System.Object>"
  overload: System.Web.UI.WebControls.MenuItemCollection.System#Web#UI#IStateManager#LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemCollection.System#Web#UI#IStateManager#SaveViewState
  id: System#Web#UI#IStateManager#SaveViewState
  isEii: true
  parent: System.Web.UI.WebControls.MenuItemCollection
  langs:
  - csharp
  name: System.Web.UI.IStateManager.SaveViewState()
  nameWithType: MenuItemCollection.System.Web.UI.IStateManager.SaveViewState()
  fullName: System.Web.UI.WebControls.MenuItemCollection.System.Web.UI.IStateManager.SaveViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "<xref:System.Object>.</xref:System.Object> 에 뷰 상태 변경 내용을 저장 함"
  syntax:
    content: object IStateManager.SaveViewState ();
    parameters: []
    return:
      type: System.Object
      description: "<xref:System.Object>뷰 상태 변경 내용이 들어 있는.</xref:System.Object>"
  overload: System.Web.UI.WebControls.MenuItemCollection.System#Web#UI#IStateManager#SaveViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemCollection.System#Web#UI#IStateManager#TrackViewState
  id: System#Web#UI#IStateManager#TrackViewState
  isEii: true
  parent: System.Web.UI.WebControls.MenuItemCollection
  langs:
  - csharp
  name: System.Web.UI.IStateManager.TrackViewState()
  nameWithType: MenuItemCollection.System.Web.UI.IStateManager.TrackViewState()
  fullName: System.Web.UI.WebControls.MenuItemCollection.System.Web.UI.IStateManager.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "지시는 <xref href=&quot;System.Web.UI.WebControls.MenuItemCollection&quot;> </xref> 해당 뷰 상태의 변경 내용을 추적 하는 개체입니다."
  remarks: "이 메서드가 호출 된 후에 서버 컨트롤에는 <xref:System.Web.UI.Control.IsTrackingViewState%2A>속성에서 반환 `true`.</xref:System.Web.UI.Control.IsTrackingViewState%2A>"
  syntax:
    content: void IStateManager.TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.MenuItemCollection.System#Web#UI#IStateManager#TrackViewState*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Web.UI.WebControls.MenuItemCollection.#ctor
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: MenuItemCollection()
  nameWithType: MenuItemCollection.MenuItemCollection()
  fullName: System.Web.UI.WebControls.MenuItemCollection.MenuItemCollection()
- uid: System.Web.UI.WebControls.MenuItemCollection.#ctor(System.Web.UI.WebControls.MenuItem)
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: MenuItemCollection(MenuItem)
  nameWithType: MenuItemCollection.MenuItemCollection(MenuItem)
  fullName: System.Web.UI.WebControls.MenuItemCollection.MenuItemCollection(MenuItem)
- uid: System.Web.UI.WebControls.MenuItem
  parent: System.Web.UI.WebControls
  isExternal: false
  name: MenuItem
  nameWithType: MenuItem
  fullName: System.Web.UI.WebControls.MenuItem
- uid: System.Web.UI.WebControls.MenuItemCollection.Add(System.Web.UI.WebControls.MenuItem)
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: Add(MenuItem)
  nameWithType: MenuItemCollection.Add(MenuItem)
  fullName: System.Web.UI.WebControls.MenuItemCollection.Add(MenuItem)
- uid: System.Web.UI.WebControls.MenuItemCollection.AddAt(System.Int32,System.Web.UI.WebControls.MenuItem)
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: AddAt(Int32,MenuItem)
  nameWithType: MenuItemCollection.AddAt(Int32,MenuItem)
  fullName: System.Web.UI.WebControls.MenuItemCollection.AddAt(Int32,MenuItem)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.MenuItemCollection.Clear
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: Clear()
  nameWithType: MenuItemCollection.Clear()
  fullName: System.Web.UI.WebControls.MenuItemCollection.Clear()
- uid: System.Web.UI.WebControls.MenuItemCollection.Contains(System.Web.UI.WebControls.MenuItem)
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: Contains(MenuItem)
  nameWithType: MenuItemCollection.Contains(MenuItem)
  fullName: System.Web.UI.WebControls.MenuItemCollection.Contains(MenuItem)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.MenuItemCollection.CopyTo(System.Array,System.Int32)
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: MenuItemCollection.CopyTo(Array,Int32)
  fullName: System.Web.UI.WebControls.MenuItemCollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Web.UI.WebControls.MenuItemCollection.CopyTo(System.Web.UI.WebControls.MenuItem[],System.Int32)
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: CopyTo(MenuItem[],Int32)
  nameWithType: MenuItemCollection.CopyTo(MenuItem[],Int32)
  fullName: System.Web.UI.WebControls.MenuItemCollection.CopyTo(MenuItem[],Int32)
- uid: System.Web.UI.WebControls.MenuItem[]
  parent: System.Web.UI.WebControls
  isExternal: false
  name: MenuItem
  nameWithType: MenuItem
  fullName: System.Web.UI.WebControls.MenuItem[]
  spec.csharp:
  - uid: System.Web.UI.WebControls.MenuItem
    name: MenuItem
    nameWithType: MenuItem
    fullName: MenuItem[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.UI.WebControls.MenuItemCollection.Count
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: Count
  nameWithType: MenuItemCollection.Count
  fullName: System.Web.UI.WebControls.MenuItemCollection.Count
- uid: System.Web.UI.WebControls.MenuItemCollection.GetEnumerator
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: MenuItemCollection.GetEnumerator()
  fullName: System.Web.UI.WebControls.MenuItemCollection.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Web.UI.WebControls.MenuItemCollection.IndexOf(System.Web.UI.WebControls.MenuItem)
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: IndexOf(MenuItem)
  nameWithType: MenuItemCollection.IndexOf(MenuItem)
  fullName: System.Web.UI.WebControls.MenuItemCollection.IndexOf(MenuItem)
- uid: System.Web.UI.WebControls.MenuItemCollection.IsSynchronized
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: MenuItemCollection.IsSynchronized
  fullName: System.Web.UI.WebControls.MenuItemCollection.IsSynchronized
- uid: System.Web.UI.WebControls.MenuItemCollection.Item(System.Int32)
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: MenuItemCollection.Item(Int32)
  fullName: System.Web.UI.WebControls.MenuItemCollection.Item(Int32)
- uid: System.Web.UI.WebControls.MenuItemCollection.Remove(System.Web.UI.WebControls.MenuItem)
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: Remove(MenuItem)
  nameWithType: MenuItemCollection.Remove(MenuItem)
  fullName: System.Web.UI.WebControls.MenuItemCollection.Remove(MenuItem)
- uid: System.Web.UI.WebControls.MenuItemCollection.RemoveAt(System.Int32)
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: MenuItemCollection.RemoveAt(Int32)
  fullName: System.Web.UI.WebControls.MenuItemCollection.RemoveAt(Int32)
- uid: System.Web.UI.WebControls.MenuItemCollection.SyncRoot
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: SyncRoot
  nameWithType: MenuItemCollection.SyncRoot
  fullName: System.Web.UI.WebControls.MenuItemCollection.SyncRoot
- uid: System.Web.UI.WebControls.MenuItemCollection.System#Web#UI#IStateManager#IsTrackingViewState
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: MenuItemCollection.System.Web.UI.IStateManager.IsTrackingViewState
  fullName: System.Web.UI.WebControls.MenuItemCollection.System.Web.UI.IStateManager.IsTrackingViewState
- uid: System.Web.UI.WebControls.MenuItemCollection.System#Web#UI#IStateManager#LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: System.Web.UI.IStateManager.LoadViewState(Object)
  nameWithType: MenuItemCollection.System.Web.UI.IStateManager.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.MenuItemCollection.System.Web.UI.IStateManager.LoadViewState(Object)
- uid: System.Web.UI.WebControls.MenuItemCollection.System#Web#UI#IStateManager#SaveViewState
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: System.Web.UI.IStateManager.SaveViewState()
  nameWithType: MenuItemCollection.System.Web.UI.IStateManager.SaveViewState()
  fullName: System.Web.UI.WebControls.MenuItemCollection.System.Web.UI.IStateManager.SaveViewState()
- uid: System.Web.UI.WebControls.MenuItemCollection.System#Web#UI#IStateManager#TrackViewState
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: System.Web.UI.IStateManager.TrackViewState()
  nameWithType: MenuItemCollection.System.Web.UI.IStateManager.TrackViewState()
  fullName: System.Web.UI.WebControls.MenuItemCollection.System.Web.UI.IStateManager.TrackViewState()
- uid: System.Web.UI.WebControls.MenuItemCollection.#ctor*
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: MenuItemCollection
  nameWithType: MenuItemCollection.MenuItemCollection
- uid: System.Web.UI.WebControls.MenuItemCollection.Add*
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: Add
  nameWithType: MenuItemCollection.Add
- uid: System.Web.UI.WebControls.MenuItemCollection.AddAt*
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: AddAt
  nameWithType: MenuItemCollection.AddAt
- uid: System.Web.UI.WebControls.MenuItemCollection.Clear*
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: Clear
  nameWithType: MenuItemCollection.Clear
- uid: System.Web.UI.WebControls.MenuItemCollection.Contains*
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: Contains
  nameWithType: MenuItemCollection.Contains
- uid: System.Web.UI.WebControls.MenuItemCollection.CopyTo*
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: CopyTo
  nameWithType: MenuItemCollection.CopyTo
- uid: System.Web.UI.WebControls.MenuItemCollection.Count*
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: Count
  nameWithType: MenuItemCollection.Count
- uid: System.Web.UI.WebControls.MenuItemCollection.GetEnumerator*
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: MenuItemCollection.GetEnumerator
- uid: System.Web.UI.WebControls.MenuItemCollection.IndexOf*
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: IndexOf
  nameWithType: MenuItemCollection.IndexOf
- uid: System.Web.UI.WebControls.MenuItemCollection.IsSynchronized*
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: MenuItemCollection.IsSynchronized
- uid: System.Web.UI.WebControls.MenuItemCollection.Item*
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: Item
  nameWithType: MenuItemCollection.Item
- uid: System.Web.UI.WebControls.MenuItemCollection.Remove*
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: Remove
  nameWithType: MenuItemCollection.Remove
- uid: System.Web.UI.WebControls.MenuItemCollection.RemoveAt*
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: RemoveAt
  nameWithType: MenuItemCollection.RemoveAt
- uid: System.Web.UI.WebControls.MenuItemCollection.SyncRoot*
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: SyncRoot
  nameWithType: MenuItemCollection.SyncRoot
- uid: System.Web.UI.WebControls.MenuItemCollection.System#Web#UI#IStateManager#IsTrackingViewState*
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: MenuItemCollection.System.Web.UI.IStateManager.IsTrackingViewState
- uid: System.Web.UI.WebControls.MenuItemCollection.System#Web#UI#IStateManager#LoadViewState*
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: System.Web.UI.IStateManager.LoadViewState
  nameWithType: MenuItemCollection.System.Web.UI.IStateManager.LoadViewState
- uid: System.Web.UI.WebControls.MenuItemCollection.System#Web#UI#IStateManager#SaveViewState*
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: System.Web.UI.IStateManager.SaveViewState
  nameWithType: MenuItemCollection.System.Web.UI.IStateManager.SaveViewState
- uid: System.Web.UI.WebControls.MenuItemCollection.System#Web#UI#IStateManager#TrackViewState*
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: System.Web.UI.IStateManager.TrackViewState
  nameWithType: MenuItemCollection.System.Web.UI.IStateManager.TrackViewState
