### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.BooleanSwitch
  id: BooleanSwitch
  children:
  - System.Diagnostics.BooleanSwitch.#ctor(System.String,System.String)
  - System.Diagnostics.BooleanSwitch.#ctor(System.String,System.String,System.String)
  - System.Diagnostics.BooleanSwitch.Enabled
  - System.Diagnostics.BooleanSwitch.OnValueChanged
  langs:
  - csharp
  name: BooleanSwitch
  nameWithType: BooleanSwitch
  fullName: System.Diagnostics.BooleanSwitch
  type: Class
  summary: "간단한 켜기/끄기 디버깅 및 추적 출력을 제어 하는 스위치를 제공 합니다."
  remarks: "중요도에 따라 메시지를 사용할지 여부를 Boolean 추적 스위치를 사용할 수 있습니다. 사용 하 여는 <xref:System.Diagnostics.BooleanSwitch.Enabled%2A>스위치의 현재 값을 가져올 속성입니다.</xref:System.Diagnostics.BooleanSwitch.Enabled%2A>       사용 하도록 설정 하 고 또는 응용 프로그램 구성 파일을 통해 한 BooleanSwitch를 해제 하 고, 다음 구성 된 BooleanSwitch 값을 사용 하 여 응용 프로그램에 수 있습니다. 코드에는 BooleanSwitch 만들 하 고 설정할 수 또는 <xref:System.Diagnostics.BooleanSwitch.Enabled%2A>계측 코드의 특정 섹션에 직접 속성.</xref:System.Diagnostics.BooleanSwitch.Enabled%2A>       BooleanSwitch를 구성 하려면 응용 프로그램의 이름에 해당 하는 구성 파일을 편집 합니다. 이 파일 내에서 추가 또는 제거 하는 스위치, 스위치의 값을 설정 하거나 지울 수 스위치 응용 프로그램에서 이전에 설정한 모든 합니다. 다음 예제와 같은 구성 파일의 형식은 같아야 합니다.      ```   <configuration>     <system.diagnostics>       <switches>         <add name=&quot;mySwitch&quot; value=&quot;1&quot;/>       </switches>     </system.diagnostics>   </configuration>   ```이 예제에서는 구성 섹션 정의 된 BooleanSwitch는 <xref:System.Diagnostics.Switch.DisplayName%2A>속성이로 설정 `mySwitch` 및 <xref:System.Diagnostics.BooleanSwitch.Enabled%2A>값으로 설정 `true`.</xref:System.Diagnostics.BooleanSwitch.Enabled%2A> </xref:System.Diagnostics.Switch.DisplayName%2A> 응용 프로그램 내에서 다음 코드 예제와 같이 동일한 이름의 BooleanSwitch를 만들어 구성된 된 스위치 값을 사용할 수 있습니다.       [!code-cpp[클래식 BooleanSwitch.BooleanSwitch 예제&#2;](~/add/codesnippet/cpp/t-system.diagnostics.boo_1.cpp)][!code-vb[클래식 BooleanSwitch.BooleanSwitch 예제&#2;](~/add/codesnippet/visualbasic/t-system.diagnostics.boo_1.vb)][!code-cs[클래식 BooleanSwitch.BooleanSwitch 예제&#2;](~/add/codesnippet/csharp/t-system.diagnostics.boo_1.cs) ] 기본적으로는 <xref:System.Diagnostics.BooleanSwitch.Enabled%2A>구성 파일에 지정 된 값을 사용 하 여 속성을 설정 합니다.</xref:System.Diagnostics.BooleanSwitch.Enabled%2A>     스위치를 설정 하려면 0의 값으로 구성 된 <xref:System.Diagnostics.BooleanSwitch.Enabled%2A>속성을 `false`; 스위치를 설정 하려면 0이 아닌 값으로 구성는 <xref:System.Diagnostics.BooleanSwitch.Enabled%2A>속성을 `true`.</xref:System.Diagnostics.BooleanSwitch.Enabled%2A> </xref:System.Diagnostics.BooleanSwitch.Enabled%2A> BooleanSwitch 생성자 구성 파일에서 초기 스위치 설정을 찾을 수 없는 경우는 <xref:System.Diagnostics.BooleanSwitch.Enabled%2A>새 스위치의 속성이로 설정 되어 `false` 기본적으로.</xref:System.Diagnostics.BooleanSwitch.Enabled%2A>       스위치를 사용 하려면 추적 또는 디버깅 사용 하도록 설정 해야 합니다. 다음 구문은 특정 컴파일러입니다. 이외의 C# 또는 Visual Basic 컴파일러를 사용 하는 경우 컴파일러에 대 한 설명서를 참조 하십시오.      -C#에서 디버깅을 사용 하려면 추가 `/d:DEBUG` 플래그를 추가할 수 있습니다 또는 코드를 컴파일할 때 컴파일러 명령줄 `#define DEBUG` 파일의 맨 위로 이동 합니다. Visual Basic의 추가 `/d:DEBUG=True` 컴파일러 명령줄을 플래그 합니다.      -C#에서 추적을 사용 하도록 설정 하려면 추가 `/d:TRACE` 플래그를 추가 하거나 코드를 컴파일할 때 컴파일러 명령줄 `#define TRACE` 파일의 맨 위로 이동 합니다. Visual Basic의 추가 `/d:TRACE=True` 컴파일러 명령줄을 플래그 합니다.      > [!NOTE] > 이러한 디버그 및 BooleanSwitch 클래스를 사용 하 여 격리 된 상태에서 추적 컴파일러 스위치 필요 하지 않습니다. 와 함께에서 필요 <xref:System.Diagnostics.Trace>또는 <xref:System.Diagnostics.Debug>메서드는 조건부로 컴파일됩니다.</xref:System.Diagnostics.Debug> </xref:System.Diagnostics.Trace>       응용 프로그램을 계측에 대 한 자세한 내용은 <xref:System.Diagnostics.Debug>및 <xref:System.Diagnostics.Trace>.</xref:System.Diagnostics.Trace> </xref:System.Diagnostics.Debug> 를 참조 하십시오. 구성 및 추적 스위치를 사용 하는 방법에 대 한 자세한 내용은 참조 [추적 스위치](~/add/includes/ajax-current-ext-md.md)합니다.      > [!NOTE] > 성능을 향상 시키기 위해 BooleanSwitch 멤버를 만들 수 있습니다 `static` 클래스에 있습니다."
  example:
  - "The following example creates a BooleanSwitch and uses the switch to determine whether to print an error message. You create the switch at the class level. The `Main` method passes its location to `MyMethod`, which prints an error message and where the error occurred.  \n  \n [!code-vb[Classic BooleanSwitch.BooleanSwitch Example#1](~/add/codesnippet/visualbasic/t-system.diagnostics.boo_2.vb)]\n [!code-cpp[Classic BooleanSwitch.BooleanSwitch Example#1](~/add/codesnippet/cpp/t-system.diagnostics.boo_2.cpp)]\n [!code-cs[Classic BooleanSwitch.BooleanSwitch Example#1](~/add/codesnippet/csharp/t-system.diagnostics.boo_2.cs)]"
  syntax:
    content: >-
      [System.Diagnostics.SwitchLevel(typeof(System.Boolean))]

      public class BooleanSwitch : System.Diagnostics.Switch
  inheritance:
  - System.Object
  - System.Diagnostics.Switch
  implements: []
  inheritedMembers:
  - System.Diagnostics.Switch.Attributes
  - System.Diagnostics.Switch.Description
  - System.Diagnostics.Switch.DisplayName
  - System.Diagnostics.Switch.GetSupportedAttributes
  - System.Diagnostics.Switch.OnSwitchSettingChanged
  - System.Diagnostics.Switch.SwitchSetting
  - System.Diagnostics.Switch.Value
  platform:
  - net462
- uid: System.Diagnostics.BooleanSwitch.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Diagnostics.BooleanSwitch
  langs:
  - csharp
  name: BooleanSwitch(String,String)
  nameWithType: BooleanSwitch.BooleanSwitch(String,String)
  fullName: System.Diagnostics.BooleanSwitch.BooleanSwitch(String,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Diagnostics.BooleanSwitch&quot;> </xref> 클래스 지정 된 표시 이름 및 설명을 사용 합니다."
  remarks: "만들 때 한 <xref:System.Diagnostics.BooleanSwitch>, `displayName` 매개 변수는 초기 스위치 설정을 찾는 데 사용 됩니다.</xref:System.Diagnostics.BooleanSwitch> 생성자에는 초기 설정을 찾을 수 없는 경우는 <xref:System.Diagnostics.BooleanSwitch.Enabled%2A>속성이 `false` (사용 안 함).</xref:System.Diagnostics.BooleanSwitch.Enabled%2A>       수준을 설정 하려면 프로그램 <xref:System.Diagnostics.BooleanSwitch>, 응용 프로그램의 이름에 해당 하는 구성 파일을 편집 합니다.</xref:System.Diagnostics.BooleanSwitch> 이 파일 내에서 스위치를 추가 하 고 해당 값을 설정, 스위치를 제거 하거나 지울 수 이전에 응용 프로그램에 의해 설정 스위치를 모두 합니다. 다음 예제와 같은 구성 파일의 형식은 같아야: ```   <configuration>       <system.diagnostics>          <switches>             <add name=&quot;mySwitch&quot; value=&quot;10&quot; />             <add name=&quot;myNewSwitch&quot; value=&quot;20&quot; />             <remove name=&quot;mySwitch&quot; />             <clear/>          </switches>       </system.diagnostics>    </configuration>   ```       >  [!NOTE] > 만든 스위치 해야 `static`합니다."
  example:
  - "The following example creates a <xref:System.Diagnostics.BooleanSwitch> and uses the switch to determine whether to print an error message. The switch is created at the class level. The `Main` method passes its location to `MyMethod`, which prints an error message and where the error occurred.  \n  \n [!code-vb[Classic BooleanSwitch.BooleanSwitch Example#1](~/add/codesnippet/visualbasic/m-system.diagnostics.boo_1.vb)]\n [!code-cpp[Classic BooleanSwitch.BooleanSwitch Example#1](~/add/codesnippet/cpp/m-system.diagnostics.boo_1.cpp)]\n [!code-cs[Classic BooleanSwitch.BooleanSwitch Example#1](~/add/codesnippet/csharp/m-system.diagnostics.boo_1.cs)]"
  syntax:
    content: public BooleanSwitch (string displayName, string description);
    parameters:
    - id: displayName
      type: System.String
      description: "사용자 인터페이스에 표시할 이름입니다."
    - id: description
      type: System.String
      description: "스위치의 설명입니다."
  overload: System.Diagnostics.BooleanSwitch.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.BooleanSwitch.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: System.Diagnostics.BooleanSwitch
  langs:
  - csharp
  name: BooleanSwitch(String,String,String)
  nameWithType: BooleanSwitch.BooleanSwitch(String,String,String)
  fullName: System.Diagnostics.BooleanSwitch.BooleanSwitch(String,String,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Diagnostics.BooleanSwitch&quot;> </xref> 지정 된 표시 이름, 설명 및 기본 스위치 값을 사용 하 여 클래스입니다."
  remarks: "`displayName` 의 값을 설정 하려면 매개 변수를 사용 하는 <xref:System.Diagnostics.Switch.DisplayName%2A>속성 및 `description` 매개 변수 값을 설정 하는 데 사용 되며는 <xref:System.Diagnostics.Switch.Description%2A>속성.</xref:System.Diagnostics.Switch.Description%2A> </xref:System.Diagnostics.Switch.DisplayName%2A> `defaultSwitchValue` 매개 변수를 필드로 저장 하 고 초기화 하는 데는 <xref:System.Diagnostics.Switch.Value%2A>첫 번째 참조에서 속성.</xref:System.Diagnostics.Switch.Value%2A> 생성자 사용에 대 한 자세한 내용은 참조는 <xref:System.Diagnostics.BooleanSwitch.%23ctor%28System.String%2CSystem.String%29>생성자.</xref:System.Diagnostics.BooleanSwitch.%23ctor%28System.String%2CSystem.String%29>"
  syntax:
    content: public BooleanSwitch (string displayName, string description, string defaultSwitchValue);
    parameters:
    - id: displayName
      type: System.String
      description: "사용자 인터페이스에 표시할 이름입니다."
    - id: description
      type: System.String
      description: "스위치의 설명입니다."
    - id: defaultSwitchValue
      type: System.String
      description: "스위치의 기본값입니다."
  overload: System.Diagnostics.BooleanSwitch.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.BooleanSwitch.Enabled
  id: Enabled
  parent: System.Diagnostics.BooleanSwitch
  langs:
  - csharp
  name: Enabled
  nameWithType: BooleanSwitch.Enabled
  fullName: System.Diagnostics.BooleanSwitch.Enabled
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "스위치 사용 되는지 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "기본적으로이 필드 설정 `false` (사용 안 함). 스위치를 사용 하려면이 필드의 값을 할당 `true`합니다. 스위치를 사용 하지 않으려면 값을 할당 `false`합니다.  이 속성의 값이 <xref:System.Diagnostics.Switch.SwitchSetting%2A>.</xref:System.Diagnostics.Switch.SwitchSetting%2A> 기본 클래스 속성의 값에 의해 결정 됩니다.      > [!NOTE] >이 메서드는 사용 된 <xref:System.Security.Permissions.SecurityAction?displayProperty=fullName>신뢰할 수 없는 코드에서 호출 되지 않도록 하는 플래그; 직접 실행 호출자만 포함 해야 합니다. <xref:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode%2A?displayProperty=fullName>권한.</xref:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode%2A?displayProperty=fullName> </xref:System.Security.Permissions.SecurityAction?displayProperty=fullName> 코드와 부분적으로 신뢰할 수 있는 코드에서 호출할 수 있는 경우 사용자 입력을 통과 하지 못한 <xref:System.Runtime.InteropServices.Marshal>클래스 메서드를 유효성 검사 없이.</xref:System.Runtime.InteropServices.Marshal>"
  example:
  - "The following code example creates a <xref:System.Diagnostics.BooleanSwitch> and uses the switch to determine whether to print an error message. The switch is created at the class level. The `Main` method passes its location to `MyMethod`, which prints an error message and the location where the error occurred.  \n  \n [!code-cpp[Classic BooleanSwitch.Enabled Example#1](~/add/codesnippet/cpp/p-system.diagnostics.boo_1.cpp)]\n [!code-cs[Classic BooleanSwitch.Enabled Example#1](~/add/codesnippet/csharp/p-system.diagnostics.boo_1.cs)]\n [!code-vb[Classic BooleanSwitch.Enabled Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.boo_1.vb)]"
  syntax:
    content: public bool Enabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>스위치를 사용 하면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Diagnostics.BooleanSwitch.Enabled*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "호출자에 게 올바른 권한이 없습니다."
  platform:
  - net462
- uid: System.Diagnostics.BooleanSwitch.OnValueChanged
  id: OnValueChanged
  parent: System.Diagnostics.BooleanSwitch
  langs:
  - csharp
  name: OnValueChanged()
  nameWithType: BooleanSwitch.OnValueChanged()
  fullName: System.Diagnostics.BooleanSwitch.OnValueChanged()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "결정 여부의 새 값은 <xref:System.Diagnostics.Switch.Value*>속성 부울 값으로 구문 분석할 수 있습니다.</xref:System.Diagnostics.Switch.Value*>"
  remarks: "OnValueChanged 메서드는 새 값 (&quot;false&quot; 또는 &quot;true&quot;)는 부울 값의 유효한 문자열 표현을 인지 확인 합니다. 따라서 메서드가 설정 하는 경우는 <xref:System.Diagnostics.Switch.SwitchSetting%2A>속성을 0 또는 1.</xref:System.Diagnostics.Switch.SwitchSetting%2A>  그렇지 않으면 기본 메서드는 호출, 문자열 값에는 다음을 설정 하는 데 사용 되는 정수 값으로 변환 하는 <xref:System.Diagnostics.Switch.SwitchSetting%2A>속성.</xref:System.Diagnostics.Switch.SwitchSetting%2A>"
  syntax:
    content: protected override void OnValueChanged ();
    parameters: []
  overload: System.Diagnostics.BooleanSwitch.OnValueChanged*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Diagnostics.Switch
  isExternal: false
  name: System.Diagnostics.Switch
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.Diagnostics.BooleanSwitch.#ctor(System.String,System.String)
  parent: System.Diagnostics.BooleanSwitch
  isExternal: false
  name: BooleanSwitch(String,String)
  nameWithType: BooleanSwitch.BooleanSwitch(String,String)
  fullName: System.Diagnostics.BooleanSwitch.BooleanSwitch(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Diagnostics.BooleanSwitch.#ctor(System.String,System.String,System.String)
  parent: System.Diagnostics.BooleanSwitch
  isExternal: false
  name: BooleanSwitch(String,String,String)
  nameWithType: BooleanSwitch.BooleanSwitch(String,String,String)
  fullName: System.Diagnostics.BooleanSwitch.BooleanSwitch(String,String,String)
- uid: System.Diagnostics.BooleanSwitch.Enabled
  parent: System.Diagnostics.BooleanSwitch
  isExternal: false
  name: Enabled
  nameWithType: BooleanSwitch.Enabled
  fullName: System.Diagnostics.BooleanSwitch.Enabled
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.BooleanSwitch.OnValueChanged
  parent: System.Diagnostics.BooleanSwitch
  isExternal: false
  name: OnValueChanged()
  nameWithType: BooleanSwitch.OnValueChanged()
  fullName: System.Diagnostics.BooleanSwitch.OnValueChanged()
- uid: System.Diagnostics.BooleanSwitch.#ctor*
  parent: System.Diagnostics.BooleanSwitch
  isExternal: false
  name: BooleanSwitch
  nameWithType: BooleanSwitch.BooleanSwitch
- uid: System.Diagnostics.BooleanSwitch.Enabled*
  parent: System.Diagnostics.BooleanSwitch
  isExternal: false
  name: Enabled
  nameWithType: BooleanSwitch.Enabled
- uid: System.Diagnostics.BooleanSwitch.OnValueChanged*
  parent: System.Diagnostics.BooleanSwitch
  isExternal: false
  name: OnValueChanged
  nameWithType: BooleanSwitch.OnValueChanged
