### YamlMime:ManagedReference
items:
- uid: System.Windows.Controls.WebBrowser
  id: WebBrowser
  children:
  - System.Windows.Controls.WebBrowser.#ctor
  - System.Windows.Controls.WebBrowser.CanGoBack
  - System.Windows.Controls.WebBrowser.CanGoForward
  - System.Windows.Controls.WebBrowser.Document
  - System.Windows.Controls.WebBrowser.GoBack
  - System.Windows.Controls.WebBrowser.GoForward
  - System.Windows.Controls.WebBrowser.InvokeScript(System.String)
  - System.Windows.Controls.WebBrowser.InvokeScript(System.String,System.Object[])
  - System.Windows.Controls.WebBrowser.LoadCompleted
  - System.Windows.Controls.WebBrowser.Navigate(System.String)
  - System.Windows.Controls.WebBrowser.Navigate(System.Uri)
  - System.Windows.Controls.WebBrowser.Navigate(System.String,System.String,System.Byte[],System.String)
  - System.Windows.Controls.WebBrowser.Navigate(System.Uri,System.String,System.Byte[],System.String)
  - System.Windows.Controls.WebBrowser.Navigated
  - System.Windows.Controls.WebBrowser.NavigateToStream(System.IO.Stream)
  - System.Windows.Controls.WebBrowser.NavigateToString(System.String)
  - System.Windows.Controls.WebBrowser.Navigating
  - System.Windows.Controls.WebBrowser.ObjectForScripting
  - System.Windows.Controls.WebBrowser.Refresh
  - System.Windows.Controls.WebBrowser.Refresh(System.Boolean)
  - System.Windows.Controls.WebBrowser.Source
  - System.Windows.Controls.WebBrowser.TabIntoCore(System.Windows.Input.TraversalRequest)
  - System.Windows.Controls.WebBrowser.TranslateAcceleratorCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)
  langs:
  - csharp
  name: WebBrowser
  nameWithType: WebBrowser
  fullName: System.Windows.Controls.WebBrowser
  type: Class
  summary: "호스트 간에 이동 하 고 [!INCLUDE[TLA2#tla_html](~/add/includes/tla2sharptla-html-md.md)] 문서. 간의 상호 운용을 활성화 [!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)] 관리 코드 및 [!INCLUDE[TLA2#tla_html](~/add/includes/tla2sharptla-html-md.md)] 스크립트입니다."
  remarks: "WebBrowser 컨트롤은 다음과 같은 기능을 제공: **탐색**: <xref:System.Windows.Controls.WebBrowser.Source%2A>, <xref:System.Windows.Controls.WebBrowser.Navigate%2A>, <xref:System.Windows.Controls.WebBrowser.NavigateToStream%2A>, <xref:System.Windows.Controls.WebBrowser.NavigateToString%2A>, 및 <xref:System.Windows.Controls.WebBrowser.Refresh%2A>.</xref:System.Windows.Controls.WebBrowser.Refresh%2A> </xref:System.Windows.Controls.WebBrowser.NavigateToString%2A> </xref:System.Windows.Controls.WebBrowser.NavigateToStream%2A> </xref:System.Windows.Controls.WebBrowser.Navigate%2A> </xref:System.Windows.Controls.WebBrowser.Source%2A>       **탐색 수명**: <xref:System.Windows.Controls.WebBrowser.Navigating>, <xref:System.Windows.Controls.WebBrowser.Navigated>, 및 <xref:System.Windows.Controls.WebBrowser.LoadCompleted>.</xref:System.Windows.Controls.WebBrowser.LoadCompleted> </xref:System.Windows.Controls.WebBrowser.Navigated> </xref:System.Windows.Controls.WebBrowser.Navigating>       **탐색 저널링**: <xref:System.Windows.Controls.WebBrowser.CanGoBack%2A>, <xref:System.Windows.Controls.WebBrowser.GoBack%2A>, <xref:System.Windows.Controls.WebBrowser.CanGoForward%2A>, 및 <xref:System.Windows.Controls.WebBrowser.GoForward%2A>.</xref:System.Windows.Controls.WebBrowser.GoForward%2A> </xref:System.Windows.Controls.WebBrowser.CanGoForward%2A> </xref:System.Windows.Controls.WebBrowser.GoBack%2A> </xref:System.Windows.Controls.WebBrowser.CanGoBack%2A>       **WPF/HTML 상호 운용성**: <xref:System.Windows.Controls.WebBrowser.InvokeScript%2A>및 <xref:System.Windows.Controls.WebBrowser.ObjectForScripting%2A>, 및 <xref:System.Windows.Controls.WebBrowser.Document%2A>.</xref:System.Windows.Controls.WebBrowser.Document%2A> </xref:System.Windows.Controls.WebBrowser.ObjectForScripting%2A> </xref:System.Windows.Controls.WebBrowser.InvokeScript%2A>       WebBrowser의 보안 제약 조건에 의해 바인딩된는 [!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)] WebBrowser를 호스팅하는 응용 프로그램:-WebBrowser 완전 신뢰에서 호스팅되는 경우 [!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)] 응용 프로그램 (독립 실행형 응용 프로그램, 예:), WebBrowser를 호스트할 수 [!INCLUDE[TLA2#tla_html](~/add/includes/tla2sharptla-html-md.md)] 어느 위치에서 문서입니다.      -WebBrowser 부분 신뢰에서 호스트 된 경우 [!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)] 응용 프로그램 (한 [!INCLUDE[TLA2#tla_xbap](~/add/includes/ajax-current-ext-md.md)]예를 들어,), WebBrowser 문서를 호스팅할 수 있습니다 **원본 사이트** 응용 프로그램 데이터 파일. 자세한 내용은 참조 [WPF 응용 프로그램 리소스, 내용 및 데이터 파일](~/add/includes/ajax-current-ext-md.md)합니다.      > [!CAUTION] > The WebBrowser 컨트롤 네이티브 WebBrowser ActiveX 컨트롤을 내부적으로 인스턴스화합니다. WPF 기능 컨트롤 WebBrowser ActiveX 컨트롤에 적용 하 여 보안 기능을 사용 합니다. 적용 되는 기능 컨트롤 Xbap 및 독립 실행형 응용 프로그램 마다 다릅니다. 일부 응용 프로그램의 실행 악의적인 내용을 방지 하기 위해 추가 기능 컨트롤에 적용 해야 합니다. 자세한 내용은의 &quot;WebBrowser 컨트롤 및 기능 컨트롤&quot; 섹션을 참조 하십시오. [보안 (WPF)](~/add/includes/ajax-current-ext-md.md) 및 [WebBrowser 컨트롤 개요 및 자습서](http://go.microsoft.com/fwlink/?LinkId=179388)합니다."
  example:
  - "The following example shows how to configure WebBrowser to navigate to an [!INCLUDE[TLA2#tla_html](~/add/includes/tla2sharptla-html-md.md)] document by using markup only.  \n  \n```xaml  \n<!-- Web Browser Control that hosts a web page. -->  \n<WebBrowser x:Name=\"webBrowser\" Source=\"http://msdn.com\"   \n  Width=\"600\" Height=\"600\"  />  \n```  \n  \n The following example shows how to configure WebBrowser to navigate to a document by using markup and code-behind.  \n  \n```xaml  \n<StackPanel>  \n    <StackPanel Orientation=\"Horizontal\">  \n        <TextBox x:Name=\"addressTextBox\" Width=\"200\" />  \n        <Button Click=\"goNavigateButton_Click\">Go</Button>  \n    </StackPanel>  \n    <WebBrowser x:Name=\"myWebBrowser\" />  \n</StackPanel>  \n```  \n  \n```c#  \nprivate void goNavigateButton_Click(object sender, RoutedEventArgs e)  \n{  \n    // Get URI to navigate to  \n    Uri uri = new Uri(this.addressTextBox.Text, UriKind.RelativeOrAbsolute);  \n  \n    // Only absolute URIs can be navigated to  \n    if (!uri.IsAbsoluteUri)  \n    {  \n        MessageBox.Show(\"The Address URI must be absolute eg 'http://www.microsoft.com'\");  \n        return;  \n    }  \n  \n    // Navigate to the desired URL by calling the .Navigate method  \n    this.myWebBrowser.Navigate(uri);  \n}  \n```  \n  \n The following example shows how to handle the `NewWindow2` event and similar events using a WebBrowser control. This example requires a reference to **SHDocVw.dll**, a `using System.Runtime.InteropServices;` statement, and a WebBrowser control named `webBrowser1`.  \n  \n```c#  \npublic MainWindow()  \n{  \n    InitializeComponent();  \n  \n    var serviceProvider = (IServiceProvider)webBrowser1.Document;  \n    if (serviceProvider != null)  \n    {  \n        Guid serviceGuid = new Guid(\"0002DF05-0000-0000-C000-000000000046\");  \n        Guid iid = typeof(SHDocVw.WebBrowser).GUID;  \n        var webBrowserPtr = (SHDocVw.WebBrowser)serviceProvider  \n            .QueryService(ref serviceGuid, ref iid);  \n        if (webBrowserPtr != null)  \n        {  \n            webBrowserPtr.NewWindow2 += webBrowser1_NewWindow2;  \n        }  \n    }  \n}  \n  \nprivate void webBrowser1_NewWindow2(ref object ppDisp, ref bool Cancel)  \n{  \n    // Handle the event.  \n}  \n  \n[ComImport, InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]  \n[Guid(\"6d5140c1-7436-11ce-8034-00aa006009fa\")]  \ninternal interface IServiceProvider  \n{  \n    [return: MarshalAs(UnmanagedType.IUnknown)]  \n    object QueryService(ref Guid guidService, ref Guid riid);  \n}  \n```"
  syntax:
    content: 'public sealed class WebBrowser : System.Windows.Interop.ActiveXHost'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  - System.Windows.Media.Visual
  - System.Windows.UIElement
  - System.Windows.FrameworkElement
  - System.Windows.Interop.HwndHost
  - System.Windows.Interop.ActiveXHost
  implements: []
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.FrameworkElement.ActualHeight
  - System.Windows.FrameworkElement.ActualHeightProperty
  - System.Windows.FrameworkElement.ActualWidth
  - System.Windows.FrameworkElement.ActualWidthProperty
  - System.Windows.FrameworkElement.AddLogicalChild(System.Object)
  - System.Windows.FrameworkElement.ApplyTemplate
  - System.Windows.FrameworkElement.ArrangeCore(System.Windows.Rect)
  - System.Windows.FrameworkElement.ArrangeOverride(System.Windows.Size)
  - System.Windows.FrameworkElement.BeginInit
  - System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard)
  - System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)
  - System.Windows.FrameworkElement.BindingGroup
  - System.Windows.FrameworkElement.BindingGroupProperty
  - System.Windows.FrameworkElement.BringIntoView
  - System.Windows.FrameworkElement.BringIntoView(System.Windows.Rect)
  - System.Windows.FrameworkElement.ContextMenu
  - System.Windows.FrameworkElement.ContextMenuClosing
  - System.Windows.FrameworkElement.ContextMenuClosingEvent
  - System.Windows.FrameworkElement.ContextMenuOpening
  - System.Windows.FrameworkElement.ContextMenuOpeningEvent
  - System.Windows.FrameworkElement.ContextMenuProperty
  - System.Windows.FrameworkElement.Cursor
  - System.Windows.FrameworkElement.CursorProperty
  - System.Windows.FrameworkElement.DataContext
  - System.Windows.FrameworkElement.DataContextChanged
  - System.Windows.FrameworkElement.DataContextProperty
  - System.Windows.FrameworkElement.DefaultStyleKey
  - System.Windows.FrameworkElement.DefaultStyleKeyProperty
  - System.Windows.FrameworkElement.EndInit
  - System.Windows.FrameworkElement.FindName(System.String)
  - System.Windows.FrameworkElement.FindResource(System.Object)
  - System.Windows.FrameworkElement.FlowDirection
  - System.Windows.FrameworkElement.FlowDirectionProperty
  - System.Windows.FrameworkElement.FocusVisualStyle
  - System.Windows.FrameworkElement.FocusVisualStyleProperty
  - System.Windows.FrameworkElement.ForceCursor
  - System.Windows.FrameworkElement.ForceCursorProperty
  - System.Windows.FrameworkElement.GetBindingExpression(System.Windows.DependencyProperty)
  - System.Windows.FrameworkElement.GetFlowDirection(System.Windows.DependencyObject)
  - System.Windows.FrameworkElement.GetLayoutClip(System.Windows.Size)
  - System.Windows.FrameworkElement.GetTemplateChild(System.String)
  - System.Windows.FrameworkElement.GetUIParentCore
  - System.Windows.FrameworkElement.GetVisualChild(System.Int32)
  - System.Windows.FrameworkElement.Height
  - System.Windows.FrameworkElement.HeightProperty
  - System.Windows.FrameworkElement.HorizontalAlignment
  - System.Windows.FrameworkElement.HorizontalAlignmentProperty
  - System.Windows.FrameworkElement.InheritanceBehavior
  - System.Windows.FrameworkElement.Initialized
  - System.Windows.FrameworkElement.InputScope
  - System.Windows.FrameworkElement.InputScopeProperty
  - System.Windows.FrameworkElement.IsInitialized
  - System.Windows.FrameworkElement.IsLoaded
  - System.Windows.FrameworkElement.Language
  - System.Windows.FrameworkElement.LanguageProperty
  - System.Windows.FrameworkElement.LayoutTransform
  - System.Windows.FrameworkElement.LayoutTransformProperty
  - System.Windows.FrameworkElement.Loaded
  - System.Windows.FrameworkElement.LoadedEvent
  - System.Windows.FrameworkElement.LogicalChildren
  - System.Windows.FrameworkElement.Margin
  - System.Windows.FrameworkElement.MarginProperty
  - System.Windows.FrameworkElement.MaxHeight
  - System.Windows.FrameworkElement.MaxHeightProperty
  - System.Windows.FrameworkElement.MaxWidth
  - System.Windows.FrameworkElement.MaxWidthProperty
  - System.Windows.FrameworkElement.MeasureCore(System.Windows.Size)
  - System.Windows.FrameworkElement.MinHeight
  - System.Windows.FrameworkElement.MinHeightProperty
  - System.Windows.FrameworkElement.MinWidth
  - System.Windows.FrameworkElement.MinWidthProperty
  - System.Windows.FrameworkElement.MoveFocus(System.Windows.Input.TraversalRequest)
  - System.Windows.FrameworkElement.Name
  - System.Windows.FrameworkElement.NameProperty
  - System.Windows.FrameworkElement.OnApplyTemplate
  - System.Windows.FrameworkElement.OnContextMenuClosing(System.Windows.Controls.ContextMenuEventArgs)
  - System.Windows.FrameworkElement.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)
  - System.Windows.FrameworkElement.OnGotFocus(System.Windows.RoutedEventArgs)
  - System.Windows.FrameworkElement.OnInitialized(System.EventArgs)
  - System.Windows.FrameworkElement.OnRenderSizeChanged(System.Windows.SizeChangedInfo)
  - System.Windows.FrameworkElement.OnStyleChanged(System.Windows.Style,System.Windows.Style)
  - System.Windows.FrameworkElement.OnToolTipClosing(System.Windows.Controls.ToolTipEventArgs)
  - System.Windows.FrameworkElement.OnToolTipOpening(System.Windows.Controls.ToolTipEventArgs)
  - System.Windows.FrameworkElement.OnVisualParentChanged(System.Windows.DependencyObject)
  - System.Windows.FrameworkElement.OverridesDefaultStyle
  - System.Windows.FrameworkElement.OverridesDefaultStyleProperty
  - System.Windows.FrameworkElement.Parent
  - System.Windows.FrameworkElement.ParentLayoutInvalidated(System.Windows.UIElement)
  - System.Windows.FrameworkElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)
  - System.Windows.FrameworkElement.RegisterName(System.String,System.Object)
  - System.Windows.FrameworkElement.RemoveLogicalChild(System.Object)
  - System.Windows.FrameworkElement.RequestBringIntoView
  - System.Windows.FrameworkElement.RequestBringIntoViewEvent
  - System.Windows.FrameworkElement.Resources
  - System.Windows.FrameworkElement.SetBinding(System.Windows.DependencyProperty,System.String)
  - System.Windows.FrameworkElement.SetBinding(System.Windows.DependencyProperty,System.Windows.Data.BindingBase)
  - System.Windows.FrameworkElement.SetFlowDirection(System.Windows.DependencyObject,System.Windows.FlowDirection)
  - System.Windows.FrameworkElement.SetResourceReference(System.Windows.DependencyProperty,System.Object)
  - System.Windows.FrameworkElement.ShouldSerializeResources
  - System.Windows.FrameworkElement.ShouldSerializeStyle
  - System.Windows.FrameworkElement.ShouldSerializeTriggers
  - System.Windows.FrameworkElement.SizeChanged
  - System.Windows.FrameworkElement.SizeChangedEvent
  - System.Windows.FrameworkElement.SourceUpdated
  - System.Windows.FrameworkElement.Style
  - System.Windows.FrameworkElement.StyleProperty
  - System.Windows.FrameworkElement.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable(System.String)
  - System.Windows.FrameworkElement.Tag
  - System.Windows.FrameworkElement.TagProperty
  - System.Windows.FrameworkElement.TargetUpdated
  - System.Windows.FrameworkElement.TemplatedParent
  - System.Windows.FrameworkElement.ToolTip
  - System.Windows.FrameworkElement.ToolTipClosing
  - System.Windows.FrameworkElement.ToolTipClosingEvent
  - System.Windows.FrameworkElement.ToolTipOpening
  - System.Windows.FrameworkElement.ToolTipOpeningEvent
  - System.Windows.FrameworkElement.ToolTipProperty
  - System.Windows.FrameworkElement.Triggers
  - System.Windows.FrameworkElement.TryFindResource(System.Object)
  - System.Windows.FrameworkElement.Unloaded
  - System.Windows.FrameworkElement.UnloadedEvent
  - System.Windows.FrameworkElement.UnregisterName(System.String)
  - System.Windows.FrameworkElement.UpdateDefaultStyle
  - System.Windows.FrameworkElement.UseLayoutRounding
  - System.Windows.FrameworkElement.UseLayoutRoundingProperty
  - System.Windows.FrameworkElement.VerticalAlignment
  - System.Windows.FrameworkElement.VerticalAlignmentProperty
  - System.Windows.FrameworkElement.VisualChildrenCount
  - System.Windows.FrameworkElement.Width
  - System.Windows.FrameworkElement.WidthProperty
  - System.Windows.Interop.ActiveXHost.BuildWindowCore(System.Runtime.InteropServices.HandleRef)
  - System.Windows.Interop.ActiveXHost.DestroyWindowCore(System.Runtime.InteropServices.HandleRef)
  - System.Windows.Interop.ActiveXHost.Dispose(System.Boolean)
  - System.Windows.Interop.ActiveXHost.IsDisposed
  - System.Windows.Interop.ActiveXHost.MeasureOverride(System.Windows.Size)
  - System.Windows.Interop.ActiveXHost.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)
  - System.Windows.Interop.ActiveXHost.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.Interop.ActiveXHost.OnWindowPositionChanged(System.Windows.Rect)
  - System.Windows.Interop.HwndHost.Dispose
  - System.Windows.Interop.HwndHost.DpiChanged
  - System.Windows.Interop.HwndHost.DpiChangedEvent
  - System.Windows.Interop.HwndHost.Handle
  - System.Windows.Interop.HwndHost.HasFocusWithinCore
  - System.Windows.Interop.HwndHost.MessageHook
  - System.Windows.Interop.HwndHost.OnCreateAutomationPeer
  - System.Windows.Interop.HwndHost.OnDpiChanged(System.Windows.DpiScale,System.Windows.DpiScale)
  - System.Windows.Interop.HwndHost.OnKeyDown(System.Windows.Input.KeyEventArgs)
  - System.Windows.Interop.HwndHost.OnKeyUp(System.Windows.Input.KeyEventArgs)
  - System.Windows.Interop.HwndHost.OnMnemonicCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)
  - System.Windows.Interop.HwndHost.RegisterKeyboardInputSinkCore(System.Windows.Interop.IKeyboardInputSink)
  - System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#HasFocusWithin
  - System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#KeyboardInputSite
  - System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)
  - System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)
  - System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#TabInto(System.Windows.Input.TraversalRequest)
  - System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)
  - System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)
  - System.Windows.Interop.HwndHost.TranslateCharCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)
  - System.Windows.Interop.HwndHost.UpdateWindowPos
  - System.Windows.Interop.HwndHost.WndProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr,System.Boolean@)
  - System.Windows.Media.Visual.AddVisualChild(System.Windows.Media.Visual)
  - System.Windows.Media.Visual.FindCommonVisualAncestor(System.Windows.DependencyObject)
  - System.Windows.Media.Visual.IsAncestorOf(System.Windows.DependencyObject)
  - System.Windows.Media.Visual.IsDescendantOf(System.Windows.DependencyObject)
  - System.Windows.Media.Visual.OnVisualChildrenChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)
  - System.Windows.Media.Visual.PointFromScreen(System.Windows.Point)
  - System.Windows.Media.Visual.PointToScreen(System.Windows.Point)
  - System.Windows.Media.Visual.RemoveVisualChild(System.Windows.Media.Visual)
  - System.Windows.Media.Visual.TransformToAncestor(System.Windows.Media.Media3D.Visual3D)
  - System.Windows.Media.Visual.TransformToAncestor(System.Windows.Media.Visual)
  - System.Windows.Media.Visual.TransformToDescendant(System.Windows.Media.Visual)
  - System.Windows.Media.Visual.TransformToVisual(System.Windows.Media.Visual)
  - System.Windows.Media.Visual.VisualBitmapEffect
  - System.Windows.Media.Visual.VisualBitmapEffectInput
  - System.Windows.Media.Visual.VisualBitmapScalingMode
  - System.Windows.Media.Visual.VisualCacheMode
  - System.Windows.Media.Visual.VisualClearTypeHint
  - System.Windows.Media.Visual.VisualClip
  - System.Windows.Media.Visual.VisualEdgeMode
  - System.Windows.Media.Visual.VisualEffect
  - System.Windows.Media.Visual.VisualOffset
  - System.Windows.Media.Visual.VisualOpacity
  - System.Windows.Media.Visual.VisualOpacityMask
  - System.Windows.Media.Visual.VisualParent
  - System.Windows.Media.Visual.VisualScrollableAreaClip
  - System.Windows.Media.Visual.VisualTextHintingMode
  - System.Windows.Media.Visual.VisualTextRenderingMode
  - System.Windows.Media.Visual.VisualTransform
  - System.Windows.Media.Visual.VisualXSnappingGuidelines
  - System.Windows.Media.Visual.VisualYSnappingGuidelines
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  - System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)
  - System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)
  - System.Windows.UIElement.AddToEventRoute(System.Windows.EventRoute,System.Windows.RoutedEventArgs)
  - System.Windows.UIElement.AllowDrop
  - System.Windows.UIElement.AllowDropProperty
  - System.Windows.UIElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.UIElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.UIElement.AreAnyTouchesCaptured
  - System.Windows.UIElement.AreAnyTouchesCapturedProperty
  - System.Windows.UIElement.AreAnyTouchesCapturedWithin
  - System.Windows.UIElement.AreAnyTouchesCapturedWithinProperty
  - System.Windows.UIElement.AreAnyTouchesDirectlyOver
  - System.Windows.UIElement.AreAnyTouchesDirectlyOverProperty
  - System.Windows.UIElement.AreAnyTouchesOver
  - System.Windows.UIElement.AreAnyTouchesOverProperty
  - System.Windows.UIElement.Arrange(System.Windows.Rect)
  - System.Windows.UIElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)
  - System.Windows.UIElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.UIElement.BitmapEffect
  - System.Windows.UIElement.BitmapEffectInput
  - System.Windows.UIElement.BitmapEffectInputProperty
  - System.Windows.UIElement.BitmapEffectProperty
  - System.Windows.UIElement.CacheMode
  - System.Windows.UIElement.CacheModeProperty
  - System.Windows.UIElement.CaptureMouse
  - System.Windows.UIElement.CaptureStylus
  - System.Windows.UIElement.CaptureTouch(System.Windows.Input.TouchDevice)
  - System.Windows.UIElement.Clip
  - System.Windows.UIElement.ClipProperty
  - System.Windows.UIElement.ClipToBounds
  - System.Windows.UIElement.ClipToBoundsProperty
  - System.Windows.UIElement.CommandBindings
  - System.Windows.UIElement.DesiredSize
  - System.Windows.UIElement.DragEnter
  - System.Windows.UIElement.DragEnterEvent
  - System.Windows.UIElement.DragLeave
  - System.Windows.UIElement.DragLeaveEvent
  - System.Windows.UIElement.DragOver
  - System.Windows.UIElement.DragOverEvent
  - System.Windows.UIElement.Drop
  - System.Windows.UIElement.DropEvent
  - System.Windows.UIElement.Effect
  - System.Windows.UIElement.EffectProperty
  - System.Windows.UIElement.Focus
  - System.Windows.UIElement.Focusable
  - System.Windows.UIElement.FocusableChanged
  - System.Windows.UIElement.FocusableProperty
  - System.Windows.UIElement.GetAnimationBaseValue(System.Windows.DependencyProperty)
  - System.Windows.UIElement.GiveFeedback
  - System.Windows.UIElement.GiveFeedbackEvent
  - System.Windows.UIElement.GotFocus
  - System.Windows.UIElement.GotFocusEvent
  - System.Windows.UIElement.GotKeyboardFocus
  - System.Windows.UIElement.GotKeyboardFocusEvent
  - System.Windows.UIElement.GotMouseCapture
  - System.Windows.UIElement.GotMouseCaptureEvent
  - System.Windows.UIElement.GotStylusCapture
  - System.Windows.UIElement.GotStylusCaptureEvent
  - System.Windows.UIElement.GotTouchCapture
  - System.Windows.UIElement.GotTouchCaptureEvent
  - System.Windows.UIElement.HasAnimatedProperties
  - System.Windows.UIElement.HasEffectiveKeyboardFocus
  - System.Windows.UIElement.HitTestCore(System.Windows.Media.GeometryHitTestParameters)
  - System.Windows.UIElement.HitTestCore(System.Windows.Media.PointHitTestParameters)
  - System.Windows.UIElement.InputBindings
  - System.Windows.UIElement.InputHitTest(System.Windows.Point)
  - System.Windows.UIElement.InvalidateArrange
  - System.Windows.UIElement.InvalidateMeasure
  - System.Windows.UIElement.InvalidateVisual
  - System.Windows.UIElement.IsArrangeValid
  - System.Windows.UIElement.IsEnabled
  - System.Windows.UIElement.IsEnabledChanged
  - System.Windows.UIElement.IsEnabledCore
  - System.Windows.UIElement.IsEnabledProperty
  - System.Windows.UIElement.IsFocused
  - System.Windows.UIElement.IsFocusedProperty
  - System.Windows.UIElement.IsHitTestVisible
  - System.Windows.UIElement.IsHitTestVisibleChanged
  - System.Windows.UIElement.IsHitTestVisibleProperty
  - System.Windows.UIElement.IsInputMethodEnabled
  - System.Windows.UIElement.IsKeyboardFocused
  - System.Windows.UIElement.IsKeyboardFocusedChanged
  - System.Windows.UIElement.IsKeyboardFocusedProperty
  - System.Windows.UIElement.IsKeyboardFocusWithin
  - System.Windows.UIElement.IsKeyboardFocusWithinChanged
  - System.Windows.UIElement.IsKeyboardFocusWithinProperty
  - System.Windows.UIElement.IsManipulationEnabled
  - System.Windows.UIElement.IsManipulationEnabledProperty
  - System.Windows.UIElement.IsMeasureValid
  - System.Windows.UIElement.IsMouseCaptured
  - System.Windows.UIElement.IsMouseCapturedChanged
  - System.Windows.UIElement.IsMouseCapturedProperty
  - System.Windows.UIElement.IsMouseCaptureWithin
  - System.Windows.UIElement.IsMouseCaptureWithinChanged
  - System.Windows.UIElement.IsMouseCaptureWithinProperty
  - System.Windows.UIElement.IsMouseDirectlyOver
  - System.Windows.UIElement.IsMouseDirectlyOverChanged
  - System.Windows.UIElement.IsMouseDirectlyOverProperty
  - System.Windows.UIElement.IsMouseOver
  - System.Windows.UIElement.IsMouseOverProperty
  - System.Windows.UIElement.IsStylusCaptured
  - System.Windows.UIElement.IsStylusCapturedChanged
  - System.Windows.UIElement.IsStylusCapturedProperty
  - System.Windows.UIElement.IsStylusCaptureWithin
  - System.Windows.UIElement.IsStylusCaptureWithinChanged
  - System.Windows.UIElement.IsStylusCaptureWithinProperty
  - System.Windows.UIElement.IsStylusDirectlyOver
  - System.Windows.UIElement.IsStylusDirectlyOverChanged
  - System.Windows.UIElement.IsStylusDirectlyOverProperty
  - System.Windows.UIElement.IsStylusOver
  - System.Windows.UIElement.IsStylusOverProperty
  - System.Windows.UIElement.IsVisible
  - System.Windows.UIElement.IsVisibleChanged
  - System.Windows.UIElement.IsVisibleProperty
  - System.Windows.UIElement.KeyDown
  - System.Windows.UIElement.KeyDownEvent
  - System.Windows.UIElement.KeyUp
  - System.Windows.UIElement.KeyUpEvent
  - System.Windows.UIElement.LayoutUpdated
  - System.Windows.UIElement.LostFocus
  - System.Windows.UIElement.LostFocusEvent
  - System.Windows.UIElement.LostKeyboardFocus
  - System.Windows.UIElement.LostKeyboardFocusEvent
  - System.Windows.UIElement.LostMouseCapture
  - System.Windows.UIElement.LostMouseCaptureEvent
  - System.Windows.UIElement.LostStylusCapture
  - System.Windows.UIElement.LostStylusCaptureEvent
  - System.Windows.UIElement.LostTouchCapture
  - System.Windows.UIElement.LostTouchCaptureEvent
  - System.Windows.UIElement.ManipulationBoundaryFeedback
  - System.Windows.UIElement.ManipulationBoundaryFeedbackEvent
  - System.Windows.UIElement.ManipulationCompleted
  - System.Windows.UIElement.ManipulationCompletedEvent
  - System.Windows.UIElement.ManipulationDelta
  - System.Windows.UIElement.ManipulationDeltaEvent
  - System.Windows.UIElement.ManipulationInertiaStarting
  - System.Windows.UIElement.ManipulationInertiaStartingEvent
  - System.Windows.UIElement.ManipulationStarted
  - System.Windows.UIElement.ManipulationStartedEvent
  - System.Windows.UIElement.ManipulationStarting
  - System.Windows.UIElement.ManipulationStartingEvent
  - System.Windows.UIElement.Measure(System.Windows.Size)
  - System.Windows.UIElement.MouseDown
  - System.Windows.UIElement.MouseDownEvent
  - System.Windows.UIElement.MouseEnter
  - System.Windows.UIElement.MouseEnterEvent
  - System.Windows.UIElement.MouseLeave
  - System.Windows.UIElement.MouseLeaveEvent
  - System.Windows.UIElement.MouseLeftButtonDown
  - System.Windows.UIElement.MouseLeftButtonDownEvent
  - System.Windows.UIElement.MouseLeftButtonUp
  - System.Windows.UIElement.MouseLeftButtonUpEvent
  - System.Windows.UIElement.MouseMove
  - System.Windows.UIElement.MouseMoveEvent
  - System.Windows.UIElement.MouseRightButtonDown
  - System.Windows.UIElement.MouseRightButtonDownEvent
  - System.Windows.UIElement.MouseRightButtonUp
  - System.Windows.UIElement.MouseRightButtonUpEvent
  - System.Windows.UIElement.MouseUp
  - System.Windows.UIElement.MouseUpEvent
  - System.Windows.UIElement.MouseWheel
  - System.Windows.UIElement.MouseWheelEvent
  - System.Windows.UIElement.OnChildDesiredSizeChanged(System.Windows.UIElement)
  - System.Windows.UIElement.OnDragEnter(System.Windows.DragEventArgs)
  - System.Windows.UIElement.OnDragLeave(System.Windows.DragEventArgs)
  - System.Windows.UIElement.OnDragOver(System.Windows.DragEventArgs)
  - System.Windows.UIElement.OnDrop(System.Windows.DragEventArgs)
  - System.Windows.UIElement.OnGiveFeedback(System.Windows.GiveFeedbackEventArgs)
  - System.Windows.UIElement.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  - System.Windows.UIElement.OnGotMouseCapture(System.Windows.Input.MouseEventArgs)
  - System.Windows.UIElement.OnGotStylusCapture(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnGotTouchCapture(System.Windows.Input.TouchEventArgs)
  - System.Windows.UIElement.OnIsKeyboardFocusedChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.UIElement.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.UIElement.OnIsMouseCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.UIElement.OnIsMouseCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.UIElement.OnIsMouseDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.UIElement.OnIsStylusCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.UIElement.OnIsStylusCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.UIElement.OnIsStylusDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.UIElement.OnLostFocus(System.Windows.RoutedEventArgs)
  - System.Windows.UIElement.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  - System.Windows.UIElement.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)
  - System.Windows.UIElement.OnLostStylusCapture(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnLostTouchCapture(System.Windows.Input.TouchEventArgs)
  - System.Windows.UIElement.OnManipulationBoundaryFeedback(System.Windows.Input.ManipulationBoundaryFeedbackEventArgs)
  - System.Windows.UIElement.OnManipulationCompleted(System.Windows.Input.ManipulationCompletedEventArgs)
  - System.Windows.UIElement.OnManipulationDelta(System.Windows.Input.ManipulationDeltaEventArgs)
  - System.Windows.UIElement.OnManipulationInertiaStarting(System.Windows.Input.ManipulationInertiaStartingEventArgs)
  - System.Windows.UIElement.OnManipulationStarted(System.Windows.Input.ManipulationStartedEventArgs)
  - System.Windows.UIElement.OnManipulationStarting(System.Windows.Input.ManipulationStartingEventArgs)
  - System.Windows.UIElement.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement.OnMouseEnter(System.Windows.Input.MouseEventArgs)
  - System.Windows.UIElement.OnMouseLeave(System.Windows.Input.MouseEventArgs)
  - System.Windows.UIElement.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement.OnMouseMove(System.Windows.Input.MouseEventArgs)
  - System.Windows.UIElement.OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement.OnMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)
  - System.Windows.UIElement.OnPreviewDragEnter(System.Windows.DragEventArgs)
  - System.Windows.UIElement.OnPreviewDragLeave(System.Windows.DragEventArgs)
  - System.Windows.UIElement.OnPreviewDragOver(System.Windows.DragEventArgs)
  - System.Windows.UIElement.OnPreviewDrop(System.Windows.DragEventArgs)
  - System.Windows.UIElement.OnPreviewGiveFeedback(System.Windows.GiveFeedbackEventArgs)
  - System.Windows.UIElement.OnPreviewGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  - System.Windows.UIElement.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)
  - System.Windows.UIElement.OnPreviewKeyUp(System.Windows.Input.KeyEventArgs)
  - System.Windows.UIElement.OnPreviewLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  - System.Windows.UIElement.OnPreviewMouseDown(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement.OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement.OnPreviewMouseMove(System.Windows.Input.MouseEventArgs)
  - System.Windows.UIElement.OnPreviewMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement.OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement.OnPreviewMouseUp(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement.OnPreviewMouseWheel(System.Windows.Input.MouseWheelEventArgs)
  - System.Windows.UIElement.OnPreviewQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)
  - System.Windows.UIElement.OnPreviewStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)
  - System.Windows.UIElement.OnPreviewStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)
  - System.Windows.UIElement.OnPreviewStylusDown(System.Windows.Input.StylusDownEventArgs)
  - System.Windows.UIElement.OnPreviewStylusInAirMove(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnPreviewStylusInRange(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnPreviewStylusMove(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnPreviewStylusOutOfRange(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnPreviewStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)
  - System.Windows.UIElement.OnPreviewStylusUp(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnPreviewTextInput(System.Windows.Input.TextCompositionEventArgs)
  - System.Windows.UIElement.OnPreviewTouchDown(System.Windows.Input.TouchEventArgs)
  - System.Windows.UIElement.OnPreviewTouchMove(System.Windows.Input.TouchEventArgs)
  - System.Windows.UIElement.OnPreviewTouchUp(System.Windows.Input.TouchEventArgs)
  - System.Windows.UIElement.OnQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)
  - System.Windows.UIElement.OnQueryCursor(System.Windows.Input.QueryCursorEventArgs)
  - System.Windows.UIElement.OnRender(System.Windows.Media.DrawingContext)
  - System.Windows.UIElement.OnStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)
  - System.Windows.UIElement.OnStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)
  - System.Windows.UIElement.OnStylusDown(System.Windows.Input.StylusDownEventArgs)
  - System.Windows.UIElement.OnStylusEnter(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnStylusInAirMove(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnStylusInRange(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnStylusLeave(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnStylusMove(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnStylusOutOfRange(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)
  - System.Windows.UIElement.OnStylusUp(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnTextInput(System.Windows.Input.TextCompositionEventArgs)
  - System.Windows.UIElement.OnTouchDown(System.Windows.Input.TouchEventArgs)
  - System.Windows.UIElement.OnTouchEnter(System.Windows.Input.TouchEventArgs)
  - System.Windows.UIElement.OnTouchLeave(System.Windows.Input.TouchEventArgs)
  - System.Windows.UIElement.OnTouchMove(System.Windows.Input.TouchEventArgs)
  - System.Windows.UIElement.OnTouchUp(System.Windows.Input.TouchEventArgs)
  - System.Windows.UIElement.Opacity
  - System.Windows.UIElement.OpacityMask
  - System.Windows.UIElement.OpacityMaskProperty
  - System.Windows.UIElement.OpacityProperty
  - System.Windows.UIElement.PersistId
  - System.Windows.UIElement.PreviewDragEnter
  - System.Windows.UIElement.PreviewDragEnterEvent
  - System.Windows.UIElement.PreviewDragLeave
  - System.Windows.UIElement.PreviewDragLeaveEvent
  - System.Windows.UIElement.PreviewDragOver
  - System.Windows.UIElement.PreviewDragOverEvent
  - System.Windows.UIElement.PreviewDrop
  - System.Windows.UIElement.PreviewDropEvent
  - System.Windows.UIElement.PreviewGiveFeedback
  - System.Windows.UIElement.PreviewGiveFeedbackEvent
  - System.Windows.UIElement.PreviewGotKeyboardFocus
  - System.Windows.UIElement.PreviewGotKeyboardFocusEvent
  - System.Windows.UIElement.PreviewKeyDown
  - System.Windows.UIElement.PreviewKeyDownEvent
  - System.Windows.UIElement.PreviewKeyUp
  - System.Windows.UIElement.PreviewKeyUpEvent
  - System.Windows.UIElement.PreviewLostKeyboardFocus
  - System.Windows.UIElement.PreviewLostKeyboardFocusEvent
  - System.Windows.UIElement.PreviewMouseDown
  - System.Windows.UIElement.PreviewMouseDownEvent
  - System.Windows.UIElement.PreviewMouseLeftButtonDown
  - System.Windows.UIElement.PreviewMouseLeftButtonDownEvent
  - System.Windows.UIElement.PreviewMouseLeftButtonUp
  - System.Windows.UIElement.PreviewMouseLeftButtonUpEvent
  - System.Windows.UIElement.PreviewMouseMove
  - System.Windows.UIElement.PreviewMouseMoveEvent
  - System.Windows.UIElement.PreviewMouseRightButtonDown
  - System.Windows.UIElement.PreviewMouseRightButtonDownEvent
  - System.Windows.UIElement.PreviewMouseRightButtonUp
  - System.Windows.UIElement.PreviewMouseRightButtonUpEvent
  - System.Windows.UIElement.PreviewMouseUp
  - System.Windows.UIElement.PreviewMouseUpEvent
  - System.Windows.UIElement.PreviewMouseWheel
  - System.Windows.UIElement.PreviewMouseWheelEvent
  - System.Windows.UIElement.PreviewQueryContinueDrag
  - System.Windows.UIElement.PreviewQueryContinueDragEvent
  - System.Windows.UIElement.PreviewStylusButtonDown
  - System.Windows.UIElement.PreviewStylusButtonDownEvent
  - System.Windows.UIElement.PreviewStylusButtonUp
  - System.Windows.UIElement.PreviewStylusButtonUpEvent
  - System.Windows.UIElement.PreviewStylusDown
  - System.Windows.UIElement.PreviewStylusDownEvent
  - System.Windows.UIElement.PreviewStylusInAirMove
  - System.Windows.UIElement.PreviewStylusInAirMoveEvent
  - System.Windows.UIElement.PreviewStylusInRange
  - System.Windows.UIElement.PreviewStylusInRangeEvent
  - System.Windows.UIElement.PreviewStylusMove
  - System.Windows.UIElement.PreviewStylusMoveEvent
  - System.Windows.UIElement.PreviewStylusOutOfRange
  - System.Windows.UIElement.PreviewStylusOutOfRangeEvent
  - System.Windows.UIElement.PreviewStylusSystemGesture
  - System.Windows.UIElement.PreviewStylusSystemGestureEvent
  - System.Windows.UIElement.PreviewStylusUp
  - System.Windows.UIElement.PreviewStylusUpEvent
  - System.Windows.UIElement.PreviewTextInput
  - System.Windows.UIElement.PreviewTextInputEvent
  - System.Windows.UIElement.PreviewTouchDown
  - System.Windows.UIElement.PreviewTouchDownEvent
  - System.Windows.UIElement.PreviewTouchMove
  - System.Windows.UIElement.PreviewTouchMoveEvent
  - System.Windows.UIElement.PreviewTouchUp
  - System.Windows.UIElement.PreviewTouchUpEvent
  - System.Windows.UIElement.QueryContinueDrag
  - System.Windows.UIElement.QueryContinueDragEvent
  - System.Windows.UIElement.QueryCursor
  - System.Windows.UIElement.QueryCursorEvent
  - System.Windows.UIElement.RaiseEvent(System.Windows.RoutedEventArgs)
  - System.Windows.UIElement.ReleaseAllTouchCaptures
  - System.Windows.UIElement.ReleaseMouseCapture
  - System.Windows.UIElement.ReleaseStylusCapture
  - System.Windows.UIElement.ReleaseTouchCapture(System.Windows.Input.TouchDevice)
  - System.Windows.UIElement.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)
  - System.Windows.UIElement.RenderSize
  - System.Windows.UIElement.RenderTransform
  - System.Windows.UIElement.RenderTransformOrigin
  - System.Windows.UIElement.RenderTransformOriginProperty
  - System.Windows.UIElement.RenderTransformProperty
  - System.Windows.UIElement.ShouldSerializeCommandBindings
  - System.Windows.UIElement.ShouldSerializeInputBindings
  - System.Windows.UIElement.SnapsToDevicePixels
  - System.Windows.UIElement.SnapsToDevicePixelsProperty
  - System.Windows.UIElement.StylusButtonDown
  - System.Windows.UIElement.StylusButtonDownEvent
  - System.Windows.UIElement.StylusButtonUp
  - System.Windows.UIElement.StylusButtonUpEvent
  - System.Windows.UIElement.StylusDown
  - System.Windows.UIElement.StylusDownEvent
  - System.Windows.UIElement.StylusEnter
  - System.Windows.UIElement.StylusEnterEvent
  - System.Windows.UIElement.StylusInAirMove
  - System.Windows.UIElement.StylusInAirMoveEvent
  - System.Windows.UIElement.StylusInRange
  - System.Windows.UIElement.StylusInRangeEvent
  - System.Windows.UIElement.StylusLeave
  - System.Windows.UIElement.StylusLeaveEvent
  - System.Windows.UIElement.StylusMove
  - System.Windows.UIElement.StylusMoveEvent
  - System.Windows.UIElement.StylusOutOfRange
  - System.Windows.UIElement.StylusOutOfRangeEvent
  - System.Windows.UIElement.StylusPlugIns
  - System.Windows.UIElement.StylusSystemGesture
  - System.Windows.UIElement.StylusSystemGestureEvent
  - System.Windows.UIElement.StylusUp
  - System.Windows.UIElement.StylusUpEvent
  - System.Windows.UIElement.TextInput
  - System.Windows.UIElement.TextInputEvent
  - System.Windows.UIElement.TouchDown
  - System.Windows.UIElement.TouchDownEvent
  - System.Windows.UIElement.TouchEnter
  - System.Windows.UIElement.TouchEnterEvent
  - System.Windows.UIElement.TouchesCaptured
  - System.Windows.UIElement.TouchesCapturedWithin
  - System.Windows.UIElement.TouchesDirectlyOver
  - System.Windows.UIElement.TouchesOver
  - System.Windows.UIElement.TouchLeave
  - System.Windows.UIElement.TouchLeaveEvent
  - System.Windows.UIElement.TouchMove
  - System.Windows.UIElement.TouchMoveEvent
  - System.Windows.UIElement.TouchUp
  - System.Windows.UIElement.TouchUpEvent
  - System.Windows.UIElement.TranslatePoint(System.Windows.Point,System.Windows.UIElement)
  - System.Windows.UIElement.Uid
  - System.Windows.UIElement.UidProperty
  - System.Windows.UIElement.UpdateLayout
  - System.Windows.UIElement.Visibility
  - System.Windows.UIElement.VisibilityProperty
  platform:
  - net462
- uid: System.Windows.Controls.WebBrowser.#ctor
  id: '#ctor'
  parent: System.Windows.Controls.WebBrowser
  langs:
  - csharp
  name: WebBrowser()
  nameWithType: WebBrowser.WebBrowser()
  fullName: System.Windows.Controls.WebBrowser.WebBrowser()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Windows.Controls.WebBrowser&quot;> </xref> 클래스입니다."
  syntax:
    content: public WebBrowser ();
    parameters: []
  overload: System.Windows.Controls.WebBrowser.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.WebBrowser.CanGoBack
  id: CanGoBack
  parent: System.Windows.Controls.WebBrowser
  langs:
  - csharp
  name: CanGoBack
  nameWithType: WebBrowser.CanGoBack
  fullName: System.Windows.Controls.WebBrowser.CanGoBack
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "다시 탐색할 문서가 있는지 여부를 나타내는 값을 가져옵니다."
  remarks: ''
  example:
  - "The following example shows how to navigate back to the previous document by calling <xref:System.Windows.Controls.WebBrowser.GoBack%2A>. The example first checks that there are documents to navigate back to by checking CanGoBack.  \n  \n```c#  \nprivate void backButton_Click(object sender, RoutedEventArgs e)  \n{  \n  // Navigate to the previous HTML document, if there is one  \n  if (this.webBrowser.CanGoBack)  \n  {  \n    this.webBrowser.GoBack();  \n  }  \n}  \n```"
  syntax:
    content: public bool CanGoBack { get; }
    return:
      type: System.Boolean
      description: "A <xref:System.Boolean>다시 탐색할 문서가 있는지 여부를 나타내는 값입니다.</xref:System.Boolean>"
  overload: System.Windows.Controls.WebBrowser.CanGoBack*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.WebBrowser.CanGoForward
  id: CanGoForward
  parent: System.Windows.Controls.WebBrowser
  langs:
  - csharp
  name: CanGoForward
  nameWithType: WebBrowser.CanGoForward
  fullName: System.Windows.Controls.WebBrowser.CanGoForward
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "앞으로 탐색할 문서가 있는지 여부를 나타내는 값을 가져옵니다."
  remarks: ''
  example:
  - "The following example shows how to navigate forward to the next [!INCLUDE[TLA2#tla_html](~/add/includes/tla2sharptla-html-md.md)] document by calling <xref:System.Windows.Controls.WebBrowser.GoForward%2A>. The example first checks that there are documents to navigate forward to by checking CanGoForward.  \n  \n```c#  \nprivate void forwardButton_Click(object sender, RoutedEventArgs e)  \n{  \n  // Navigate to the next HTML document, if there is one  \n  if (this.webBrowser.CanGoForward)  \n  {  \n    this.webBrowser.GoForward();  \n  }  \n}  \n```"
  syntax:
    content: public bool CanGoForward { get; }
    return:
      type: System.Boolean
      description: "A <xref:System.Boolean>앞으로 탐색할 문서가 있는지 여부를 나타내는 값입니다.</xref:System.Boolean>"
  overload: System.Windows.Controls.WebBrowser.CanGoForward*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.WebBrowser.Document
  id: Document
  parent: System.Windows.Controls.WebBrowser
  langs:
  - csharp
  name: Document
  nameWithType: WebBrowser.Document
  fullName: System.Windows.Controls.WebBrowser.Document
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "호스팅된 나타내는 Document 개체를 가져옵니다 [!INCLUDE[TLA2#tla_html](~/add/includes/tla2sharptla-html-md.md)] 페이지."
  remarks: "문서 개체가 예상 하는 COM 인터페이스로 캐스팅 해야 합니다."
  syntax:
    content: public object Document { get; }
    return:
      type: System.Object
      description: "Document 개체입니다."
  overload: System.Windows.Controls.WebBrowser.Document*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Windows.Controls.WebBrowser&quot;> </xref> 인스턴스는 더 이상 유효 합니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "기본 네이티브에 대 한 참조 `WebBrowser` 검색할 수 없습니다."
  platform:
  - net462
- uid: System.Windows.Controls.WebBrowser.GoBack
  id: GoBack
  parent: System.Windows.Controls.WebBrowser
  langs:
  - csharp
  name: GoBack()
  nameWithType: WebBrowser.GoBack()
  fullName: System.Windows.Controls.WebBrowser.GoBack()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "있는 경우 이전 문서로 이동 합니다."
  remarks: "GoBack를 호출 하려면 다시 탐색할 문서가 없는 경우 <xref:System.Windows.Controls.WebBrowser>탐색이 수행 되지 않는 예외가 throw 됩니다.</xref:System.Windows.Controls.WebBrowser> 값을 검사할 수를 해야 하는 경우는 <xref:System.Windows.Controls.WebBrowser.CanGoBack%2A>다시 탐색할 문서가 있는지 여부를 결정 하는 속성.</xref:System.Windows.Controls.WebBrowser.CanGoBack%2A>"
  example:
  - "The following example shows how to navigate back to the previous [!INCLUDE[TLA2#tla_html](~/add/includes/tla2sharptla-html-md.md)] document by calling GoBack. The example first checks that there are [!INCLUDE[TLA2#tla_html](~/add/includes/tla2sharptla-html-md.md)] documents to navigate back to by checking <xref:System.Windows.Controls.WebBrowser.CanGoBack%2A>.  \n  \n```c#  \nprivate void backButton_Click(object sender, RoutedEventArgs e)  \n{  \n  // Navigate to the previous HTML document, if there is one  \n  if (this.webBrowser.CanGoBack)  \n  {  \n    this.webBrowser.GoBack();  \n  }  \n}  \n```"
  syntax:
    content: public void GoBack ();
    parameters: []
  overload: System.Windows.Controls.WebBrowser.GoBack*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Windows.Controls.WebBrowser&quot;> </xref> 인스턴스는 더 이상 유효 합니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "기본 네이티브에 대 한 참조 `WebBrowser` 검색할 수 없습니다."
  - type: System.Runtime.InteropServices.COMException
    commentId: T:System.Runtime.InteropServices.COMException
    description: "다시 탐색할 문서가 있습니다."
  platform:
  - net462
- uid: System.Windows.Controls.WebBrowser.GoForward
  id: GoForward
  parent: System.Windows.Controls.WebBrowser
  langs:
  - csharp
  name: GoForward()
  nameWithType: WebBrowser.GoForward()
  fullName: System.Windows.Controls.WebBrowser.GoForward()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "다음 앞으로 탐색 [!INCLUDE[TLA2#tla_html](~/add/includes/tla2sharptla-html-md.md)] 문서에 있는 경우."
  remarks: "GoForward를 호출 하면, 앞으로 탐색할 문서가 하지 않는 경우 <xref:System.Windows.Controls.WebBrowser>탐색이 수행 되지 않는 예외가 throw 됩니다.</xref:System.Windows.Controls.WebBrowser> 해야 할 경우의 값을 검사할 수 있습니다는 <xref:System.Windows.Controls.WebBrowser.CanGoForward%2A>앞으로 탐색할 문서가 있는지 여부를 결정 하는 속성.</xref:System.Windows.Controls.WebBrowser.CanGoForward%2A>"
  example:
  - "The following example shows how to navigate forward to the next document by calling GoForward. The example first checks that there are documents to navigate forward to by checking <xref:System.Windows.Controls.WebBrowser.CanGoForward%2A>.  \n  \n```c#  \nprivate void forwardButton_Click(object sender, RoutedEventArgs e)  \n{  \n  // Navigate to the next HTML document, if there is one  \n  if (this.webBrowser.CanGoForward)  \n  {  \n    this.webBrowser.GoForward();  \n  }  \n}  \n```"
  syntax:
    content: public void GoForward ();
    parameters: []
  overload: System.Windows.Controls.WebBrowser.GoForward*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Windows.Controls.WebBrowser&quot;> </xref> 인스턴스는 더 이상 유효 합니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "기본 네이티브에 대 한 참조 `WebBrowser` 검색할 수 없습니다."
  - type: System.Runtime.InteropServices.COMException
    commentId: T:System.Runtime.InteropServices.COMException
    description: "앞으로 탐색 문서가 있습니다."
  platform:
  - net462
- uid: System.Windows.Controls.WebBrowser.InvokeScript(System.String)
  id: InvokeScript(System.String)
  parent: System.Windows.Controls.WebBrowser
  langs:
  - csharp
  name: InvokeScript(String)
  nameWithType: WebBrowser.InvokeScript(String)
  fullName: System.Windows.Controls.WebBrowser.InvokeScript(String)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "현재 로드 된 문서에서 구현 되는 스크립트 함수를 실행 합니다."
  remarks: "InvokeScript 구현 하는 문서 로드를 완료 되기 전에 호출할 수 없습니다. 문서 처리 하 여 로드를 마쳤을 때를 감지할 수 있습니다는 <xref:System.Windows.Controls.WebBrowser.LoadCompleted>이벤트.</xref:System.Windows.Controls.WebBrowser.LoadCompleted>"
  example:
  - "The following example shows how to call a script function in a document from a [!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)] application by using InvokeScript. In this example, the script function has no parameters.  \n  \n The following is the [!INCLUDE[TLA2#tla_html](~/add/includes/tla2sharptla-html-md.md)] document that implements the script function that will be called from [!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)].  \n  \n```html  \n<html>  \n    <head>  \n        <script type=\"text/javascript\">  \n            // Function Without Parameters  \n            function JavaScriptFunctionWithoutParameters()    \n            {  \n              outputID.innerHTML = \"JavaScript function called!\";  \n            }  \n        </script>  \n    </head>  \n    <body>  \n    <div id=\"outputID\" style=\"color:Red; font-size:16\">  \n        Hello from HTML document with script!  \n    </div>  \n    </body>  \n</html>  \n```  \n  \n The following shows the [!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)] implementation to call the script function in the [!INCLUDE[TLA2#tla_html](~/add/includes/tla2sharptla-html-md.md)] document.  \n  \n```c#  \nprivate void callScriptFunctionNoParamButton_Click(object sender, RoutedEventArgs e)  \n{  \n  // Make sure the HTML document has loaded before attempting to  \n  // invoke script of the document page. You could set loadCompleted  \n  // to true when the LoadCompleted event on the WebBrowser fires.  \n  if (this.loadCompleted)  \n  {  \n    try  \n    {  \n      this.webBrowser.InvokeScript(\"JavaScriptFunctionWithoutParameters\");  \n    }  \n    catch (Exception ex)  \n    {  \n      string msg = \"Could not call script: \" +  \n                   ex.Message +  \n                  \"\\n\\nPlease click the 'Load HTML Document with Script' button to load.\";  \n      MessageBox.Show(msg);  \n    }  \n  }  \n}  \n```"
  syntax:
    content: public object InvokeScript (string scriptName);
    parameters:
    - id: scriptName
      type: System.String
      description: "실행할 스크립트 함수의 이름입니다."
    return:
      type: System.Object
      description: "액티브 스크립트 호출이 반환 되는 개체입니다."
  overload: System.Windows.Controls.WebBrowser.InvokeScript*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Windows.Controls.WebBrowser&quot;> </xref> 인스턴스는 더 이상 유효 합니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "기본 네이티브에 대 한 참조 `WebBrowser` 검색할 수 없습니다."
  - type: System.Runtime.InteropServices.COMException
    commentId: T:System.Runtime.InteropServices.COMException
    description: "스크립트 함수가 존재 하지 않습니다."
  platform:
  - net462
- uid: System.Windows.Controls.WebBrowser.InvokeScript(System.String,System.Object[])
  id: InvokeScript(System.String,System.Object[])
  parent: System.Windows.Controls.WebBrowser
  langs:
  - csharp
  name: InvokeScript(String,Object[])
  nameWithType: WebBrowser.InvokeScript(String,Object[])
  fullName: System.Windows.Controls.WebBrowser.InvokeScript(String,Object[])
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "현재 로드 된 문서에 정의 된 스크립트 함수를 실행 합니다."
  remarks: "InvokeScript 구현 하는 문서 로드를 완료 되기 전에 호출할 수 없습니다. 문서 처리 하 여 로드를 마쳤을 때를 감지할 수 있습니다는 <xref:System.Windows.Controls.WebBrowser.LoadCompleted>이벤트.</xref:System.Windows.Controls.WebBrowser.LoadCompleted>       호출 하는 스크립트에 충분 한 매개 변수 값을 통과 하지 않으면 매개 변수 값을 전달 하지 않는 정의 되지 않은 값을 갖습니다. 너무 많은 매개 변수 값을 전달 하는 경우 초과 되는 값은 무시 됩니다."
  example:
  - "The following example shows how to call script functions in a document from an application by using InvokeScript. In this example, the script functions require parameters.  \n  \n The following is the document that implements the script functions that will be called from [!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)].  \n  \n```html  \n<html>  \n    <head>  \n        <script type=\"text/javascript\">  \n            // Function Without Parameters  \n            function JavaScriptFunctionWithoutParameters()    \n            {  \n              outputID.innerHTML = \"JavaScript function 'called: \" + message + \".\";  \n            }  \n        </script>  \n    </head>  \n    <body>  \n    <div id=\"outputID\" style=\"color:Red; font-size:16\">  \n        Hello from HTML document with script!  \n    </div>  \n    </body>  \n</html>  \n```  \n  \n The following shows the [!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)] implementation to call the script functions in the [!INCLUDE[TLA2#tla_html](~/add/includes/tla2sharptla-html-md.md)] document.  \n  \n```c#  \nprivate void callScriptFunctionNoParamButton_Click(object sender, RoutedEventArgs e)  \n{  \n  // Make sure the HTML document has loaded before attempting to  \n  // invoke script of the document page. You could set loadCompleted  \n  // to true when the LoadCompleted event on the WebBrowser fires.  \n  if (this.loadCompleted)  \n  {  \n    try  \n    {  \n      this.webBrowser.InvokeScript(\"JavaScriptFunctionWithoutParameters\", this.messageTextBox.Text);  \n    }  \n    catch (Exception ex)  \n    {  \n      string msg = \"Could not call script: \" +  \n                   ex.Message +  \n                  \"\\n\\nPlease click the 'Load HTML Document with Script' button to load.\";  \n      MessageBox.Show(msg);  \n    }  \n  }  \n}  \n```"
  syntax:
    content: public object InvokeScript (string scriptName, object[] args);
    parameters:
    - id: scriptName
      type: System.String
      description: "실행할 스크립트 함수의 이름입니다."
    - id: args
      type: System.Object[]
      description: "스크립트 함수에 전달할 매개 변수입니다."
    return:
      type: System.Object
      description: "액티브 스크립트 호출이 반환 되는 개체입니다."
  overload: System.Windows.Controls.WebBrowser.InvokeScript*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Windows.Controls.WebBrowser&quot;> </xref> 인스턴스는 더 이상 유효 합니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "기본 네이티브에 대 한 참조 `WebBrowser` 검색할 수 없습니다."
  - type: System.Runtime.InteropServices.COMException
    commentId: T:System.Runtime.InteropServices.COMException
    description: "스크립트 함수가 존재 하지 않습니다."
  platform:
  - net462
- uid: System.Windows.Controls.WebBrowser.LoadCompleted
  id: LoadCompleted
  parent: System.Windows.Controls.WebBrowser
  langs:
  - csharp
  name: LoadCompleted
  nameWithType: WebBrowser.LoadCompleted
  fullName: System.Windows.Controls.WebBrowser.LoadCompleted
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "탐색 중인 문서 다운로드 될 때 발생 합니다."
  remarks: "탐색된 이벤트 처리기의 인스턴스를 전달 되는 <xref:System.Windows.Navigation.NavigationEventArgs>웹 응답의 세부 정보를 포함 하 여 탐색에 대 한 컨텍스트 정보를 제공 하는 클래스입니다.</xref:System.Windows.Navigation.NavigationEventArgs>       이 이벤트는 최상위 탐색에 대해서만 발생 합니다."
  syntax:
    content: public event System.Windows.Navigation.LoadCompletedEventHandler LoadCompleted;
    return:
      type: System.Windows.Navigation.LoadCompletedEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.WebBrowser.Navigate(System.String)
  id: Navigate(System.String)
  parent: System.Windows.Controls.WebBrowser
  langs:
  - csharp
  name: Navigate(String)
  nameWithType: WebBrowser.Navigate(String)
  fullName: System.Windows.Controls.WebBrowser.Navigate(String)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "지정된 된 URL에서 문서를 비동기적으로 탐색 합니다."
  remarks: "Navigate 메서드를 사용 하 여 이스케이프 문자를 포함할 수 있는 URL로 이동 합니다. 사용 된 <xref:System.Windows.Controls.WebBrowser.Navigate%28System.Uri%29>으로 이동 하는 메서드는 <xref:System.Uri>이스케이프 문자를 포함 하지 않습니다.</xref:System.Uri> </xref:System.Windows.Controls.WebBrowser.Navigate%28System.Uri%29>"
  syntax:
    content: public void Navigate (string source);
    parameters:
    - id: source
      type: System.String
      description: "탐색할 URL입니다."
  overload: System.Windows.Controls.WebBrowser.Navigate*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.WebBrowser.Navigate(System.Uri)
  id: Navigate(System.Uri)
  parent: System.Windows.Controls.WebBrowser
  langs:
  - csharp
  name: Navigate(Uri)
  nameWithType: WebBrowser.Navigate(Uri)
  fullName: System.Windows.Controls.WebBrowser.Navigate(Uri)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "지정 된 <xref:System.Uri>.</xref:System.Uri> 에 문서를 비동기적으로 탐색"
  remarks: "설정 것과 동일한 결과가 탐색 호출는 <xref:System.Windows.Controls.WebBrowser.Source%2A>속성.</xref:System.Windows.Controls.WebBrowser.Source%2A> <xref:System.Windows.Controls.WebBrowser.Source%2A>개발자는 초기 문서를 선언적으로 지정 하 여 태그에서 사용 하는 <xref:System.Windows.Controls.WebBrowser>때 탐색 <xref:System.Windows.Controls.WebBrowser>초기화 됩니다.</xref:System.Windows.Controls.WebBrowser> </xref:System.Windows.Controls.WebBrowser></xref:System.Windows.Controls.WebBrowser.Source%2A>       사용 하 여 <xref:System.Windows.Controls.WebBrowser.Navigate%28System.String%29>이스케이프 문자를 포함할 수 있는 URL로 이동 하는 메서드.</xref:System.Windows.Controls.WebBrowser.Navigate%28System.String%29> Navigate 메서드를 사용 하 여으로 이동 하는 <xref:System.Uri>이스케이프 문자를 포함 하지 않습니다.</xref:System.Uri>"
  example:
  - "The following example shows how to use <xref:System.Windows.Controls.WebBrowser> to navigate to a document by using the Navigate method.  \n  \n```xaml  \n<StackPanel>  \n    <StackPanel Orientation=\"Horizontal\">  \n        <TextBox x:Name=\"addressTextBox\" Width=\"200\" />  \n        <Button Click=\"goNavigateButton_Click\">Go</Button>  \n    </StackPanel>  \n    <WebBrowser x:Name=\"myWebBrowser\" />  \n</StackPanel>  \n```  \n  \n```c#  \nprivate void goNavigateButton_Click(object sender, RoutedEventArgs e)  \n{  \n    // Get URI to navigate to  \n    Uri uri = new Uri(this.addressTextBox.Text, UriKind.RelativeOrAbsolute);  \n  \n    // Only absolute URIs can be navigated to  \n    if (!uri.IsAbsoluteUri)  \n    {  \n        MessageBox.Show(\"The Address URI must be absolute eg 'http://www.microsoft.com'\");  \n        return;  \n    }  \n  \n    // Navigate to the desired URL by calling the .Navigate method  \n    this.myWebBrowser.Navigate(uri);  \n}  \n```"
  syntax:
    content: public void Navigate (Uri source);
    parameters:
    - id: source
      type: System.Uri
      description: "<xref:System.Uri>로 이동할 수 있습니다.</xref:System.Uri>"
  overload: System.Windows.Controls.WebBrowser.Navigate*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Windows.Controls.WebBrowser&quot;> </xref> 인스턴스는 더 이상 유효 합니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "기본 네이티브에 대 한 참조 `WebBrowser` 검색할 수 없습니다."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "부분 신뢰에서 실행 되는 응용 프로그램에서 한 <xref:System.Uri>그렇지 않은 위치에 원본 사이트에.</xref:System.Uri>"
  platform:
  - net462
- uid: System.Windows.Controls.WebBrowser.Navigate(System.String,System.String,System.Byte[],System.String)
  id: Navigate(System.String,System.String,System.Byte[],System.String)
  parent: System.Windows.Controls.WebBrowser
  langs:
  - csharp
  name: Navigate(String,String,Byte[],String)
  nameWithType: WebBrowser.Navigate(String,String,Byte[],String)
  fullName: System.Windows.Controls.WebBrowser.Navigate(String,String,Byte[],String)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "지정된 된 URL에서 문서를 비동기적으로 탐색 하 고 문서의 콘텐츠를 로드할 대상 프레임을 지정 합니다. 추가 HTTP POST 데이터 및 HTTP 헤더를 서버에 탐색 요청의 일부로 보낼 수 있습니다."
  remarks: "Navigate 메서드를 사용 하 여 이스케이프 문자를 포함할 수 있는 URL로 이동 합니다. 사용 하 여는 [탐색 (Uri, 문자열, 바이트\\[\\], String)](assetId:///M:System.Windows.Controls.WebBrowser.Navigate(System.Uri,System.String,System.Byte[],System.String)?qualifyHint=False&autoUpgrade=False) 으로 이동 하는 메서드는 <xref:System.Uri>이스케이프 문자를 포함 하지 않습니다.</xref:System.Uri>"
  syntax:
    content: public void Navigate (string source, string targetFrameName, byte[] postData, string additionalHeaders);
    parameters:
    - id: source
      type: System.String
      description: "탐색할 URL입니다."
    - id: targetFrameName
      type: System.String
      description: "문서의 콘텐츠를 표시할 프레임의 이름입니다."
    - id: postData
      type: System.Byte[]
      description: "소스가 요청 될 때 서버에 보낼 HTTP POST 데이터입니다."
    - id: additionalHeaders
      type: System.String
      description: "소스가 요청 될 때 서버에 보낼 HTTP 헤더입니다."
  overload: System.Windows.Controls.WebBrowser.Navigate*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.WebBrowser.Navigate(System.Uri,System.String,System.Byte[],System.String)
  id: Navigate(System.Uri,System.String,System.Byte[],System.String)
  parent: System.Windows.Controls.WebBrowser
  langs:
  - csharp
  name: Navigate(Uri,String,Byte[],String)
  nameWithType: WebBrowser.Navigate(Uri,String,Byte[],String)
  fullName: System.Windows.Controls.WebBrowser.Navigate(Uri,String,Byte[],String)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "지정 된 위치에서 문서를 비동기적으로 탐색 <xref:System.Uri>문서의 콘텐츠를 로드할 대상 프레임을 지정 합니다.</xref:System.Uri> 추가 HTTP POST 데이터 및 HTTP 헤더를 서버에 탐색 요청의 일부로 보낼 수 있습니다."
  remarks: "사용 하 여는 [탐색 (String, String, Byte\\[\\], 문자열)](assetId:///M:System.Windows.Controls.WebBrowser.Navigate(System.String,System.String,System.Byte[],System.String)?qualifyHint=False&autoUpgrade=False) 이스케이프 문자를 포함할 수 있는 URL로 이동 하는 메서드. Navigate 메서드를 사용 하 여으로 이동 하는 <xref:System.Uri>이스케이프 문자를 포함 하지 않습니다.</xref:System.Uri>"
  example:
  - "The following example shows how to navigate to a document and open it in a new browser window by specifying the \"about:blank\" target.  \n  \n```xaml  \n<StackPanel>  \n    <StackPanel Orientation=\"Horizontal\">  \n        <TextBox x:Name=\"addressTextBox\" Width=\"200\" />  \n        <Button Click=\"goNavigateButton_Click\">Go</Button>  \n    </StackPanel>  \n    <WebBrowser x:Name=\"myWebBrowser\" />  \n</StackPanel>  \n```  \n  \n```c#  \nprivate void goNavigateButton_Click(object sender, RoutedEventArgs e)  \n{  \n    // Get URI to navigate to  \n    Uri uri = new Uri(this.addressTextBox.Text, UriKind.RelativeOrAbsolute);  \n  \n    // Only absolute URIs can be navigated to  \n    if (!uri.IsAbsoluteUri)  \n    {  \n        MessageBox.Show(\"The Address URI must be absolute eg 'http://www.microsoft.com'\");  \n        return;  \n    }  \n  \n    // Navigate to the desired URL by calling the .Navigate method  \n    this.myWebBrowser.Navigate(uri, \"_blank\", null, null);  \n}  \n```"
  syntax:
    content: public void Navigate (Uri source, string targetFrameName, byte[] postData, string additionalHeaders);
    parameters:
    - id: source
      type: System.Uri
      description: "<xref:System.Uri>로 이동할 수 있습니다.</xref:System.Uri>"
    - id: targetFrameName
      type: System.String
      description: "문서의 콘텐츠를 표시할 프레임의 이름입니다."
    - id: postData
      type: System.Byte[]
      description: "소스가 요청 될 때 서버에 보낼 HTTP POST 데이터입니다."
    - id: additionalHeaders
      type: System.String
      description: "소스가 요청 될 때 서버에 보낼 HTTP 헤더입니다."
  overload: System.Windows.Controls.WebBrowser.Navigate*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Windows.Controls.WebBrowser&quot;> </xref> 인스턴스는 더 이상 유효 합니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "기본 네이티브에 대 한 참조 `WebBrowser` 검색할 수 없습니다."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "부분 신뢰에서 실행 되는 응용 프로그램에서:-에 <xref:System.Uri>없는 원본, 사이트에 또는- <code> targetFrameName </code> 이름이 아닌 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 이거나 비어 있습니다.</xref:System.Uri>"
  platform:
  - net462
- uid: System.Windows.Controls.WebBrowser.Navigated
  id: Navigated
  parent: System.Windows.Controls.WebBrowser
  langs:
  - csharp
  name: Navigated
  nameWithType: WebBrowser.Navigated
  fullName: System.Windows.Controls.WebBrowser.Navigated
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "탐색 중인 문서가 있는 찾아 다운로드가 시작 하는 경우 발생 합니다."
  remarks: "탐색된 이벤트 처리기의 인스턴스를 전달 되는 <xref:System.Windows.Navigation.NavigationEventArgs>웹 응답의 세부 정보를 포함 하 여 탐색에 대 한 컨텍스트 정보를 제공 하는 클래스입니다.</xref:System.Windows.Navigation.NavigationEventArgs>       이 이벤트는 최상위 탐색에 대해서만 발생 합니다."
  syntax:
    content: public event System.Windows.Navigation.NavigatedEventHandler Navigated;
    return:
      type: System.Windows.Navigation.NavigatedEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.WebBrowser.NavigateToStream(System.IO.Stream)
  id: NavigateToStream(System.IO.Stream)
  parent: System.Windows.Controls.WebBrowser
  langs:
  - csharp
  name: NavigateToStream(Stream)
  nameWithType: WebBrowser.NavigateToStream(Stream)
  fullName: System.Windows.Controls.WebBrowser.NavigateToStream(Stream)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "비동기적으로 탐색 한 <xref:System.IO.Stream>문서에 대 한 내용이 포함 된.</xref:System.IO.Stream>"
  remarks: "경우는 `stream` 매개 변수는 `null`, <xref:System.Windows.Controls.WebBrowser>빈 문서를 탐색 (&quot;에 대 한: 빈&quot;).</xref:System.Windows.Controls.WebBrowser>       Stream 매개 변수는 유효한에 없는 경우 [!INCLUDE[TLA2#tla_html](~/add/includes/tla2sharptla-html-md.md)] 형식으로 일반 텍스트로 표시 됩니다.       탐색 후 <xref:System.Windows.Controls.WebBrowser.Source%2A>됩니다 `null`.</xref:System.Windows.Controls.WebBrowser.Source%2A>"
  example:
  - "The following example shows how to navigate to a stream that contains a document.  \n  \n```c#  \nprivate void goNavigateToStreamButton_Click(object sender, RoutedEventArgs e)  \n{  \n  // Load HTML document as a stream  \n  Uri uri = new Uri(@\"pack://application:,,,/HTMLDocumentWithScript.html\", UriKind.Absolute);  \n  Stream source = Application.GetResourceStream(uri).Stream;  \n  \n  // Navigate to HTML document stream  \n  this.webBrowser.NavigateToStream(source);  \n}  \n```"
  syntax:
    content: public void NavigateToStream (System.IO.Stream stream);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "<xref:System.IO.Stream>문서에 대 한 내용이 포함 된.</xref:System.IO.Stream>"
  overload: System.Windows.Controls.WebBrowser.NavigateToStream*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Windows.Controls.WebBrowser&quot;> </xref> 인스턴스는 더 이상 유효 합니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "기본 네이티브에 대 한 참조 `WebBrowser` 검색할 수 없습니다."
  platform:
  - net462
- uid: System.Windows.Controls.WebBrowser.NavigateToString(System.String)
  id: NavigateToString(System.String)
  parent: System.Windows.Controls.WebBrowser
  langs:
  - csharp
  name: NavigateToString(String)
  nameWithType: WebBrowser.NavigateToString(String)
  fullName: System.Windows.Controls.WebBrowser.NavigateToString(String)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "비동기적으로 탐색 한 <xref:System.String>문서에 대 한 내용이 포함 된.</xref:System.String>"
  remarks: "경우는 `text` 매개 변수는 `null`, <xref:System.Windows.Controls.WebBrowser>빈 문서를 탐색 (&quot;에 대 한: 빈&quot;).</xref:System.Windows.Controls.WebBrowser>       텍스트 매개 변수에 유효한에 없는 경우 [!INCLUDE[TLA2#tla_html](~/add/includes/tla2sharptla-html-md.md)] 형식으로 일반 텍스트로 표시 됩니다.       탐색 후 <xref:System.Windows.Controls.WebBrowser.Source%2A>됩니다 `null`.</xref:System.Windows.Controls.WebBrowser.Source%2A>"
  example:
  - "The following example shows how to navigate to a string that contains a document.  \n  \n```c#  \nprivate void goNavigateToStringButton_Click(object sender, RoutedEventArgs e)  \n{  \n  // Load HTML document as a string  \n  Uri uri = new Uri(@\"pack://application:,,,/HTMLDocumentWithoutScript.html\", UriKind.Absolute);  \n  Stream stream = Application.GetResourceStream(uri).Stream;  \n  using (StreamReader reader = new StreamReader(stream))  \n  {  \n    // Navigate to HTML document string  \n    this.webBrowser.NavigateToString(reader.ReadToEnd());  \n  }  \n}  \n```"
  syntax:
    content: public void NavigateToString (string text);
    parameters:
    - id: text
      type: System.String
      description: "<xref:System.String>문서에 대 한 내용이 포함 된.</xref:System.String>"
  overload: System.Windows.Controls.WebBrowser.NavigateToString*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Windows.Controls.WebBrowser&quot;> </xref> 인스턴스는 더 이상 유효 합니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "기본 네이티브에 대 한 참조 `WebBrowser` 검색할 수 없습니다."
  platform:
  - net462
- uid: System.Windows.Controls.WebBrowser.Navigating
  id: Navigating
  parent: System.Windows.Controls.WebBrowser
  langs:
  - csharp
  name: Navigating
  nameWithType: WebBrowser.Navigating
  fullName: System.Windows.Controls.WebBrowser.Navigating
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "문서를 탐색 하기 바로 전에 발생합니다."
  remarks: "탐색 이벤트 처리기는 <xref:System.Windows.Navigation.NavigatingCancelEventArgs>클래스</xref:System.Windows.Navigation.NavigatingCancelEventArgs> 의 인스턴스를 전달 됩니다. 설정 하 여 탐색을 취소할 수는 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>의 속성은 <xref:System.Windows.Navigation.NavigatingCancelEventArgs>개체를 `true`.</xref:System.Windows.Navigation.NavigatingCancelEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A>       이 이벤트는 최상위 탐색에 대해서만 발생 합니다."
  syntax:
    content: public event System.Windows.Navigation.NavigatingCancelEventHandler Navigating;
    return:
      type: System.Windows.Navigation.NavigatingCancelEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.WebBrowser.ObjectForScripting
  id: ObjectForScripting
  parent: System.Windows.Controls.WebBrowser
  langs:
  - csharp
  name: ObjectForScripting
  nameWithType: WebBrowser.ObjectForScripting
  fullName: System.Windows.Controls.WebBrowser.ObjectForScripting
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "호스팅된 문서의 스크립트를 통해 액세스할 수 있는 호스트 응용 프로그램에서 구현 하는 공용 클래스의 인스턴스를 가져오거나 설정 합니다."
  remarks: "공용 속성 및 스크립팅 코드를 사용할 수 있는 방법을 원하는 COM 노출 개체에이 속성을 설정할 수 있습니다. <xref:System.Runtime.InteropServices.ComVisibleAttribute>.</xref:System.Runtime.InteropServices.ComVisibleAttribute> 표시 하 여 COM에 표시 되는 클래스를 만들 수 있습니다.       현재 문서에 노출 되는 scripting 설정 된 개체는 [!INCLUDE[TLA2#tla_html](~/add/includes/tla2sharptla-html-md.md)] 사용 하 여 DOM의 `window.external` 속성입니다."
  syntax:
    content: public object ObjectForScripting { get; set; }
    return:
      type: System.Object
      description: "<xref:System.Object>의 인스턴스인은 <xref uid=&quot;langword_csharp_public&quot; name=&quot;public&quot; href=&quot;&quot;> </xref> 호스팅된 문서의 스크립트를 통해 액세스할 수 있는 호스트 응용 프로그램에 의해 구현 클래스입니다.</xref:System.Object>"
  overload: System.Windows.Controls.WebBrowser.ObjectForScripting*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "ObjectForScripting 하지 않은 형식의 인스턴스를 사용 하 여 설정 <xref uid=&quot;langword_csharp_COMVisible&quot; name=&quot;COMVisible&quot; href=&quot;&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Windows.Controls.WebBrowser.Refresh
  id: Refresh
  parent: System.Windows.Controls.WebBrowser
  langs:
  - csharp
  name: Refresh()
  nameWithType: WebBrowser.Refresh()
  fullName: System.Windows.Controls.WebBrowser.Refresh()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "현재 페이지를 다시 로드합니다."
  syntax:
    content: public void Refresh ();
    parameters: []
  overload: System.Windows.Controls.WebBrowser.Refresh*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Windows.Controls.WebBrowser&quot;> </xref> 인스턴스는 더 이상 유효 합니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "기본 네이티브에 대 한 참조 `WebBrowser` 검색할 수 없습니다."
  platform:
  - net462
- uid: System.Windows.Controls.WebBrowser.Refresh(System.Boolean)
  id: Refresh(System.Boolean)
  parent: System.Windows.Controls.WebBrowser
  langs:
  - csharp
  name: Refresh(Boolean)
  nameWithType: WebBrowser.Refresh(Boolean)
  fullName: System.Windows.Controls.WebBrowser.Refresh(Boolean)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "선택적 캐시 유효성 검사와 함께 현재 페이지를 다시 로드합니다."
  remarks: "경우 `noCache` 은 `true`, <xref:System.Windows.Controls.WebBrowser>전송 하 여 캐시 유효성 검사 없이 새로 고침을 제어는 &quot;Pragma:no-캐시&quot; 서버에 헤더.</xref:System.Windows.Controls.WebBrowser>"
  syntax:
    content: public void Refresh (bool noCache);
    parameters:
    - id: noCache
      type: System.Boolean
      description: "캐시 유효성 검사 없이 새로 고칠지를 지정 합니다."
  overload: System.Windows.Controls.WebBrowser.Refresh*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Windows.Controls.WebBrowser&quot;> </xref> 인스턴스는 더 이상 유효 합니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "기본 네이티브에 대 한 참조 `WebBrowser` 검색할 수 없습니다."
  platform:
  - net462
- uid: System.Windows.Controls.WebBrowser.Source
  id: Source
  parent: System.Windows.Controls.WebBrowser
  langs:
  - csharp
  name: Source
  nameWithType: WebBrowser.Source
  fullName: System.Windows.Controls.WebBrowser.Source
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "가져오거나는 <xref:System.Uri>현재 문서에서 호스팅되는 <xref href=&quot;System.Windows.Controls.WebBrowser&quot;> </xref>.</xref:System.Uri>"
  remarks: "원본 속성을 설정 하면 <xref:System.Windows.Controls.WebBrowser>에 <xref:System.Uri>.</xref:System.Uri> 지정 된 문서를 찾아서</xref:System.Windows.Controls.WebBrowser> 경우는 <xref:System.Uri>은 `null`, 빈 문서 표시 됩니다 (&quot;에 대 한: 빈&quot;).</xref:System.Uri>"
  example:
  - "The following example shows how to configure <xref:System.Windows.Controls.WebBrowser> to navigate to an [!INCLUDE[TLA2#tla_html](~/add/includes/tla2sharptla-html-md.md)] document by using markup only.  \n  \n```xaml  \n<!-- Web Browser Control that hosts a web page. -->  \n<WebBrowser x:Name=\"webBrowser\" Source=\"http://msdn.com\"   \n  Width=\"600\" Height=\"600\"  />  \n```"
  syntax:
    content: public Uri Source { get; set; }
    return:
      type: System.Uri
      description: "<xref:System.Uri>현재 [!INCLUDE[TLA2#tla_html](~/add/includes/tla2sharptla-html-md.md)] 문서.</xref:System.Uri>"
  overload: System.Windows.Controls.WebBrowser.Source*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Windows.Controls.WebBrowser&quot;> </xref> 인스턴스는 더 이상 유효 합니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "기본 네이티브에 대 한 참조 `WebBrowser` 검색할 수 없습니다."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "부분 신뢰에서 실행 되는 응용 프로그램에서 한 <xref:System.Uri>그렇지 않은 위치에 원본 사이트에.</xref:System.Uri>"
  platform:
  - net462
- uid: System.Windows.Controls.WebBrowser.TabIntoCore(System.Windows.Input.TraversalRequest)
  id: TabIntoCore(System.Windows.Input.TraversalRequest)
  parent: System.Windows.Controls.WebBrowser
  langs:
  - csharp
  name: TabIntoCore(TraversalRequest)
  nameWithType: WebBrowser.TabIntoCore(TraversalRequest)
  fullName: System.Windows.Controls.WebBrowser.TabIntoCore(TraversalRequest)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  syntax:
    content: protected override bool TabIntoCore (System.Windows.Input.TraversalRequest request);
    parameters:
    - id: request
      type: System.Windows.Input.TraversalRequest
      description: "추가할 수 있습니다."
    return:
      type: System.Boolean
      description: "추가할 수 있습니다."
  overload: System.Windows.Controls.WebBrowser.TabIntoCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.WebBrowser.TranslateAcceleratorCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)
  id: TranslateAcceleratorCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)
  parent: System.Windows.Controls.WebBrowser
  langs:
  - csharp
  name: TranslateAcceleratorCore(MSG,ModifierKeys)
  nameWithType: WebBrowser.TranslateAcceleratorCore(MSG,ModifierKeys)
  fullName: System.Windows.Controls.WebBrowser.TranslateAcceleratorCore(MSG,ModifierKeys)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  syntax:
    content: protected override bool TranslateAcceleratorCore (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);
    parameters:
    - id: msg
      type: System.Windows.Interop.MSG
      description: "추가할 수 있습니다."
    - id: modifiers
      type: System.Windows.Input.ModifierKeys
      description: "추가할 수 있습니다."
    return:
      type: System.Boolean
      description: "추가할 수 있습니다."
  overload: System.Windows.Controls.WebBrowser.TranslateAcceleratorCore*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Interop.ActiveXHost
  isExternal: false
  name: System.Windows.Interop.ActiveXHost
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Runtime.InteropServices.COMException
  isExternal: true
  name: System.Runtime.InteropServices.COMException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Windows.Controls.WebBrowser.#ctor
  parent: System.Windows.Controls.WebBrowser
  isExternal: false
  name: WebBrowser()
  nameWithType: WebBrowser.WebBrowser()
  fullName: System.Windows.Controls.WebBrowser.WebBrowser()
- uid: System.Windows.Controls.WebBrowser.CanGoBack
  parent: System.Windows.Controls.WebBrowser
  isExternal: false
  name: CanGoBack
  nameWithType: WebBrowser.CanGoBack
  fullName: System.Windows.Controls.WebBrowser.CanGoBack
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Controls.WebBrowser.CanGoForward
  parent: System.Windows.Controls.WebBrowser
  isExternal: false
  name: CanGoForward
  nameWithType: WebBrowser.CanGoForward
  fullName: System.Windows.Controls.WebBrowser.CanGoForward
- uid: System.Windows.Controls.WebBrowser.Document
  parent: System.Windows.Controls.WebBrowser
  isExternal: false
  name: Document
  nameWithType: WebBrowser.Document
  fullName: System.Windows.Controls.WebBrowser.Document
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Controls.WebBrowser.GoBack
  parent: System.Windows.Controls.WebBrowser
  isExternal: false
  name: GoBack()
  nameWithType: WebBrowser.GoBack()
  fullName: System.Windows.Controls.WebBrowser.GoBack()
- uid: System.Windows.Controls.WebBrowser.GoForward
  parent: System.Windows.Controls.WebBrowser
  isExternal: false
  name: GoForward()
  nameWithType: WebBrowser.GoForward()
  fullName: System.Windows.Controls.WebBrowser.GoForward()
- uid: System.Windows.Controls.WebBrowser.InvokeScript(System.String)
  parent: System.Windows.Controls.WebBrowser
  isExternal: false
  name: InvokeScript(String)
  nameWithType: WebBrowser.InvokeScript(String)
  fullName: System.Windows.Controls.WebBrowser.InvokeScript(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Controls.WebBrowser.InvokeScript(System.String,System.Object[])
  parent: System.Windows.Controls.WebBrowser
  isExternal: false
  name: InvokeScript(String,Object[])
  nameWithType: WebBrowser.InvokeScript(String,Object[])
  fullName: System.Windows.Controls.WebBrowser.InvokeScript(String,Object[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Controls.WebBrowser.LoadCompleted
  parent: System.Windows.Controls.WebBrowser
  isExternal: false
  name: LoadCompleted
  nameWithType: WebBrowser.LoadCompleted
  fullName: System.Windows.Controls.WebBrowser.LoadCompleted
- uid: System.Windows.Navigation.LoadCompletedEventHandler
  parent: System.Windows.Navigation
  isExternal: false
  name: LoadCompletedEventHandler
  nameWithType: LoadCompletedEventHandler
  fullName: System.Windows.Navigation.LoadCompletedEventHandler
- uid: System.Windows.Controls.WebBrowser.Navigate(System.String)
  parent: System.Windows.Controls.WebBrowser
  isExternal: false
  name: Navigate(String)
  nameWithType: WebBrowser.Navigate(String)
  fullName: System.Windows.Controls.WebBrowser.Navigate(String)
- uid: System.Windows.Controls.WebBrowser.Navigate(System.Uri)
  parent: System.Windows.Controls.WebBrowser
  isExternal: false
  name: Navigate(Uri)
  nameWithType: WebBrowser.Navigate(Uri)
  fullName: System.Windows.Controls.WebBrowser.Navigate(Uri)
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Windows.Controls.WebBrowser.Navigate(System.String,System.String,System.Byte[],System.String)
  parent: System.Windows.Controls.WebBrowser
  isExternal: false
  name: Navigate(String,String,Byte[],String)
  nameWithType: WebBrowser.Navigate(String,String,Byte[],String)
  fullName: System.Windows.Controls.WebBrowser.Navigate(String,String,Byte[],String)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Controls.WebBrowser.Navigate(System.Uri,System.String,System.Byte[],System.String)
  parent: System.Windows.Controls.WebBrowser
  isExternal: false
  name: Navigate(Uri,String,Byte[],String)
  nameWithType: WebBrowser.Navigate(Uri,String,Byte[],String)
  fullName: System.Windows.Controls.WebBrowser.Navigate(Uri,String,Byte[],String)
- uid: System.Windows.Controls.WebBrowser.Navigated
  parent: System.Windows.Controls.WebBrowser
  isExternal: false
  name: Navigated
  nameWithType: WebBrowser.Navigated
  fullName: System.Windows.Controls.WebBrowser.Navigated
- uid: System.Windows.Navigation.NavigatedEventHandler
  parent: System.Windows.Navigation
  isExternal: false
  name: NavigatedEventHandler
  nameWithType: NavigatedEventHandler
  fullName: System.Windows.Navigation.NavigatedEventHandler
- uid: System.Windows.Controls.WebBrowser.NavigateToStream(System.IO.Stream)
  parent: System.Windows.Controls.WebBrowser
  isExternal: false
  name: NavigateToStream(Stream)
  nameWithType: WebBrowser.NavigateToStream(Stream)
  fullName: System.Windows.Controls.WebBrowser.NavigateToStream(Stream)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Windows.Controls.WebBrowser.NavigateToString(System.String)
  parent: System.Windows.Controls.WebBrowser
  isExternal: false
  name: NavigateToString(String)
  nameWithType: WebBrowser.NavigateToString(String)
  fullName: System.Windows.Controls.WebBrowser.NavigateToString(String)
- uid: System.Windows.Controls.WebBrowser.Navigating
  parent: System.Windows.Controls.WebBrowser
  isExternal: false
  name: Navigating
  nameWithType: WebBrowser.Navigating
  fullName: System.Windows.Controls.WebBrowser.Navigating
- uid: System.Windows.Navigation.NavigatingCancelEventHandler
  parent: System.Windows.Navigation
  isExternal: false
  name: NavigatingCancelEventHandler
  nameWithType: NavigatingCancelEventHandler
  fullName: System.Windows.Navigation.NavigatingCancelEventHandler
- uid: System.Windows.Controls.WebBrowser.ObjectForScripting
  parent: System.Windows.Controls.WebBrowser
  isExternal: false
  name: ObjectForScripting
  nameWithType: WebBrowser.ObjectForScripting
  fullName: System.Windows.Controls.WebBrowser.ObjectForScripting
- uid: System.Windows.Controls.WebBrowser.Refresh
  parent: System.Windows.Controls.WebBrowser
  isExternal: false
  name: Refresh()
  nameWithType: WebBrowser.Refresh()
  fullName: System.Windows.Controls.WebBrowser.Refresh()
- uid: System.Windows.Controls.WebBrowser.Refresh(System.Boolean)
  parent: System.Windows.Controls.WebBrowser
  isExternal: false
  name: Refresh(Boolean)
  nameWithType: WebBrowser.Refresh(Boolean)
  fullName: System.Windows.Controls.WebBrowser.Refresh(Boolean)
- uid: System.Windows.Controls.WebBrowser.Source
  parent: System.Windows.Controls.WebBrowser
  isExternal: false
  name: Source
  nameWithType: WebBrowser.Source
  fullName: System.Windows.Controls.WebBrowser.Source
- uid: System.Windows.Controls.WebBrowser.TabIntoCore(System.Windows.Input.TraversalRequest)
  parent: System.Windows.Controls.WebBrowser
  isExternal: false
  name: TabIntoCore(TraversalRequest)
  nameWithType: WebBrowser.TabIntoCore(TraversalRequest)
  fullName: System.Windows.Controls.WebBrowser.TabIntoCore(TraversalRequest)
- uid: System.Windows.Input.TraversalRequest
  parent: System.Windows.Input
  isExternal: false
  name: TraversalRequest
  nameWithType: TraversalRequest
  fullName: System.Windows.Input.TraversalRequest
- uid: System.Windows.Controls.WebBrowser.TranslateAcceleratorCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)
  parent: System.Windows.Controls.WebBrowser
  isExternal: false
  name: TranslateAcceleratorCore(MSG,ModifierKeys)
  nameWithType: WebBrowser.TranslateAcceleratorCore(MSG,ModifierKeys)
  fullName: System.Windows.Controls.WebBrowser.TranslateAcceleratorCore(MSG,ModifierKeys)
- uid: System.Windows.Interop.MSG
  parent: System.Windows.Interop
  isExternal: false
  name: MSG
  nameWithType: MSG
  fullName: System.Windows.Interop.MSG
- uid: System.Windows.Input.ModifierKeys
  parent: System.Windows.Input
  isExternal: false
  name: ModifierKeys
  nameWithType: ModifierKeys
  fullName: System.Windows.Input.ModifierKeys
- uid: System.Windows.Controls.WebBrowser.#ctor*
  parent: System.Windows.Controls.WebBrowser
  isExternal: false
  name: WebBrowser
  nameWithType: WebBrowser.WebBrowser
- uid: System.Windows.Controls.WebBrowser.CanGoBack*
  parent: System.Windows.Controls.WebBrowser
  isExternal: false
  name: CanGoBack
  nameWithType: WebBrowser.CanGoBack
- uid: System.Windows.Controls.WebBrowser.CanGoForward*
  parent: System.Windows.Controls.WebBrowser
  isExternal: false
  name: CanGoForward
  nameWithType: WebBrowser.CanGoForward
- uid: System.Windows.Controls.WebBrowser.Document*
  parent: System.Windows.Controls.WebBrowser
  isExternal: false
  name: Document
  nameWithType: WebBrowser.Document
- uid: System.Windows.Controls.WebBrowser.GoBack*
  parent: System.Windows.Controls.WebBrowser
  isExternal: false
  name: GoBack
  nameWithType: WebBrowser.GoBack
- uid: System.Windows.Controls.WebBrowser.GoForward*
  parent: System.Windows.Controls.WebBrowser
  isExternal: false
  name: GoForward
  nameWithType: WebBrowser.GoForward
- uid: System.Windows.Controls.WebBrowser.InvokeScript*
  parent: System.Windows.Controls.WebBrowser
  isExternal: false
  name: InvokeScript
  nameWithType: WebBrowser.InvokeScript
- uid: System.Windows.Controls.WebBrowser.Navigate*
  parent: System.Windows.Controls.WebBrowser
  isExternal: false
  name: Navigate
  nameWithType: WebBrowser.Navigate
- uid: System.Windows.Controls.WebBrowser.NavigateToStream*
  parent: System.Windows.Controls.WebBrowser
  isExternal: false
  name: NavigateToStream
  nameWithType: WebBrowser.NavigateToStream
- uid: System.Windows.Controls.WebBrowser.NavigateToString*
  parent: System.Windows.Controls.WebBrowser
  isExternal: false
  name: NavigateToString
  nameWithType: WebBrowser.NavigateToString
- uid: System.Windows.Controls.WebBrowser.ObjectForScripting*
  parent: System.Windows.Controls.WebBrowser
  isExternal: false
  name: ObjectForScripting
  nameWithType: WebBrowser.ObjectForScripting
- uid: System.Windows.Controls.WebBrowser.Refresh*
  parent: System.Windows.Controls.WebBrowser
  isExternal: false
  name: Refresh
  nameWithType: WebBrowser.Refresh
- uid: System.Windows.Controls.WebBrowser.Source*
  parent: System.Windows.Controls.WebBrowser
  isExternal: false
  name: Source
  nameWithType: WebBrowser.Source
- uid: System.Windows.Controls.WebBrowser.TabIntoCore*
  parent: System.Windows.Controls.WebBrowser
  isExternal: false
  name: TabIntoCore
  nameWithType: WebBrowser.TabIntoCore
- uid: System.Windows.Controls.WebBrowser.TranslateAcceleratorCore*
  parent: System.Windows.Controls.WebBrowser
  isExternal: false
  name: TranslateAcceleratorCore
  nameWithType: WebBrowser.TranslateAcceleratorCore
