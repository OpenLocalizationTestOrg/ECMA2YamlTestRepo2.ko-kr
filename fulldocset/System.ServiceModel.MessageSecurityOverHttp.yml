### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.MessageSecurityOverHttp
  id: MessageSecurityOverHttp
  children:
  - System.ServiceModel.MessageSecurityOverHttp.#ctor
  - System.ServiceModel.MessageSecurityOverHttp.AlgorithmSuite
  - System.ServiceModel.MessageSecurityOverHttp.ClientCredentialType
  - System.ServiceModel.MessageSecurityOverHttp.IsSecureConversationEnabled
  - System.ServiceModel.MessageSecurityOverHttp.NegotiateServiceCredential
  - System.ServiceModel.MessageSecurityOverHttp.ShouldSerializeAlgorithmSuite
  - System.ServiceModel.MessageSecurityOverHttp.ShouldSerializeClientCredentialType
  - System.ServiceModel.MessageSecurityOverHttp.ShouldSerializeNegotiateServiceCredential
  langs:
  - csharp
  name: MessageSecurityOverHttp
  nameWithType: MessageSecurityOverHttp
  fullName: System.ServiceModel.MessageSecurityOverHttp
  type: Class
  summary: "WsDualHttpBinding 바인딩에서 메시지 수준 보안 속성을 설정할 수 있습니다."
  remarks: "이 개체를 통해 바인딩에서 액세스할는 <xref:System.ServiceModel.WSDualHttpBinding.Security%2A>속성을 반환 하는 <xref:System.ServiceModel.WSDualHttpSecurity>개체입니다.</xref:System.ServiceModel.WSDualHttpSecurity> </xref:System.ServiceModel.WSDualHttpBinding.Security%2A> <xref:System.ServiceModel.WSDualHttpSecurity.Message%2A>속성은 MessageSecurityOverHttp 개체에 대 한 참조를 제공 합니다.</xref:System.ServiceModel.WSDualHttpSecurity.Message%2A>"
  syntax:
    content: public class MessageSecurityOverHttp
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.MessageSecurityOverHttp.#ctor
  id: '#ctor'
  parent: System.ServiceModel.MessageSecurityOverHttp
  langs:
  - csharp
  name: MessageSecurityOverHttp()
  nameWithType: MessageSecurityOverHttp.MessageSecurityOverHttp()
  fullName: System.ServiceModel.MessageSecurityOverHttp.MessageSecurityOverHttp()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.ServiceModel.MessageSecurityOverHttp&quot;> </xref> 클래스입니다."
  syntax:
    content: public MessageSecurityOverHttp ();
    parameters: []
  overload: System.ServiceModel.MessageSecurityOverHttp.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.MessageSecurityOverHttp.AlgorithmSuite
  id: AlgorithmSuite
  parent: System.ServiceModel.MessageSecurityOverHttp
  langs:
  - csharp
  name: AlgorithmSuite
  nameWithType: MessageSecurityOverHttp.AlgorithmSuite
  fullName: System.ServiceModel.MessageSecurityOverHttp.AlgorithmSuite
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "SOAP 수준에서 보안 메시지에 사용 되는 알고리즘 모음을 지정 합니다."
  remarks: "이 속성은 비-작업할 경우에 가장 관련성이 높은[!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] 기본값과 다른 알고리즘 모음을 사용 하는 플랫폼입니다. 이 설정을 수정 하는 경우 관련 알고리즘의 장단점을 알고 있어야 합니다."
  example:
  - "The following code shows how to access and set this property.  \n  \n [!code-vb[c_ProgrammingSecurity#8](~/add/codesnippet/visualbasic/p-system.servicemodel.me_3_1.vb)]\n [!code-cs[c_ProgrammingSecurity#8](~/add/codesnippet/csharp/p-system.servicemodel.me_3_1.cs)]"
  syntax:
    content: public System.ServiceModel.Security.SecurityAlgorithmSuite AlgorithmSuite { get; set; }
    return:
      type: System.ServiceModel.Security.SecurityAlgorithmSuite
      description: "A <xref href=&quot;System.ServiceModel.Security.SecurityAlgorithmSuite&quot;></xref>. 기본값은 <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256*>.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256*>"
  overload: System.ServiceModel.MessageSecurityOverHttp.AlgorithmSuite*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "AlgorithmSuite의 값은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.ServiceModel.MessageSecurityOverHttp.ClientCredentialType
  id: ClientCredentialType
  parent: System.ServiceModel.MessageSecurityOverHttp
  langs:
  - csharp
  name: ClientCredentialType
  nameWithType: MessageSecurityOverHttp.ClientCredentialType
  fullName: System.ServiceModel.MessageSecurityOverHttp.ClientCredentialType
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "WsHttpBinding 또는 wsDualHttpBinding 바인딩에서 클라이언트 인증에 사용 되는 클라이언트 자격 증명 유형을 지정 합니다."
  remarks: "설정 하려면이 속성은 사용 된 `MessageCredentialType` 서비스에서 호출자를 인증 하는 데 사용 되는 합니다. Valid types are:      -   <xref:System.ServiceModel.MessageCredentialType>      -   <xref:System.ServiceModel.MessageCredentialType>      -   <xref:System.ServiceModel.MessageCredentialType>      -   <xref:System.ServiceModel.MessageCredentialType>      -   <xref:System.ServiceModel.MessageCredentialType></xref:System.ServiceModel.MessageCredentialType></xref:System.ServiceModel.MessageCredentialType></xref:System.ServiceModel.MessageCredentialType></xref:System.ServiceModel.MessageCredentialType></xref:System.ServiceModel.MessageCredentialType>"
  example:
  - "The following code sets this property.  \n  \n [!code-cs[c_CreateSecureSession#4](~/add/codesnippet/csharp/p-system.servicemodel.me_0_1.cs)]"
  syntax:
    content: public System.ServiceModel.MessageCredentialType ClientCredentialType { get; set; }
    return:
      type: System.ServiceModel.MessageCredentialType
      description: "A <xref:System.ServiceModel.MessageCredentialType>.</xref:System.ServiceModel.MessageCredentialType> 기본값은 <xref:System.ServiceModel.MessageCredentialType>.</xref:System.ServiceModel.MessageCredentialType>"
  overload: System.ServiceModel.MessageSecurityOverHttp.ClientCredentialType*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "ClientCredentialType의 값에 유효한 <xref:System.ServiceModel.MessageCredentialType>.</xref:System.ServiceModel.MessageCredentialType> 않습니다."
  platform:
  - net462
- uid: System.ServiceModel.MessageSecurityOverHttp.IsSecureConversationEnabled
  id: IsSecureConversationEnabled
  parent: System.ServiceModel.MessageSecurityOverHttp
  langs:
  - csharp
  name: IsSecureConversationEnabled()
  nameWithType: MessageSecurityOverHttp.IsSecureConversationEnabled()
  fullName: System.ServiceModel.MessageSecurityOverHttp.IsSecureConversationEnabled()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "파생 된 클래스의 인스턴스여야 하는지 여부를 나타내기 위해 확장성 시나리오 에서만 사용 <xref href=&quot;System.ServiceModel.MessageSecurityOverHttp&quot;> </xref> Ws-securityconversation에서 설명한 대로 보안 대화를 수행 하도록 구성 됩니다."
  syntax:
    content: protected virtual bool IsSecureConversationEnabled ();
    parameters: []
    return:
      type: System.Boolean
      description: "항상 반환 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>파생된 클래스에서 재정의 하지 않는 한, 합니다."
  overload: System.ServiceModel.MessageSecurityOverHttp.IsSecureConversationEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.MessageSecurityOverHttp.NegotiateServiceCredential
  id: NegotiateServiceCredential
  parent: System.ServiceModel.MessageSecurityOverHttp
  langs:
  - csharp
  name: NegotiateServiceCredential
  nameWithType: MessageSecurityOverHttp.NegotiateServiceCredential
  fullName: System.ServiceModel.MessageSecurityOverHttp.NegotiateServiceCredential
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "서비스 자격 증명이 대역 외 클라이언트에서 제공 하거나 협상 프로세스를 통해 서비스에서 가져온 있는지 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "Setting this property to `true`, requires WS-Trust and WS-SecureConversation to be supported by the client and the service. Setting this property to `false` does not require WS-Trust or WS-SecureConversation to be supported.  \n  \n For Anonymous, Username or Certificate client credential types, setting this property to `false` implies that the service certificate must be available at the client out of band and that the client must specify the service's certificate to use.  \n  \n In the case of Windows credentials, setting this property to `false` causes an authentication based on `KerberosToken`. This requires that the client and service be part of a Kerberos domain. This mode is interoperable with SOAP stacks that implement the Kerberos token profile from OASIS. Setting this property to `true` causes a SOAP negotiation that tunnels SPNego exchange over SOAP messages. This mode is not interoperable.  \n  \n This property indicates whether the service credential is negotiated automatically between the client and the service. If this property is `true`, then such negotiation occurs. If this property is `false`, then the service credentials must be specified at the client before communication with the service can occur.  \n  \n If this property is set to `false`, and the binding is configured to use Windows as a client credential type, the service account must be associated with a Service Principal Name (SPN). To do this, run the service under the NETWORK SERVICE account, or LOCAL SYSTEM account. Alternatively, use the SetSpn.exe tool to create an SPN for the service account. In either case, the client must use the correct SPN in the [\\&lt;servicePrincipalName\\&gt;](../Topic/%3CservicePrincipalName%3E.md) element, or by using the <xref:System.ServiceModel.EndpointAddress> constructor. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Service Identity and Authentication](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code shows how to access and set this property.  \n  \n [!code-vb[c_ProgrammingSecurity#7](~/add/codesnippet/visualbasic/p-system.servicemodel.me_5_1.vb)]\n [!code-cs[c_ProgrammingSecurity#7](~/add/codesnippet/csharp/p-system.servicemodel.me_5_1.cs)]"
  syntax:
    content: public bool NegotiateServiceCredential { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>서비스 자격 증명 협상; 프로세스를 통해 얻을 수 있는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.ServiceModel.MessageSecurityOverHttp.NegotiateServiceCredential*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.MessageSecurityOverHttp.ShouldSerializeAlgorithmSuite
  id: ShouldSerializeAlgorithmSuite
  parent: System.ServiceModel.MessageSecurityOverHttp
  langs:
  - csharp
  name: ShouldSerializeAlgorithmSuite()
  nameWithType: MessageSecurityOverHttp.ShouldSerializeAlgorithmSuite()
  fullName: System.ServiceModel.MessageSecurityOverHttp.ShouldSerializeAlgorithmSuite()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "나타내는 값을 반환 여부는 <xref:System.ServiceModel.MessageSecurityOverHttp.AlgorithmSuite*>속성 값이 기본값에서 변경 되었으며 serialize 해야 합니다.</xref:System.ServiceModel.MessageSecurityOverHttp.AlgorithmSuite*>"
  syntax:
    content: public bool ShouldSerializeAlgorithmSuite ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우는 <xref:System.ServiceModel.MessageSecurityOverHttp.AlgorithmSuite*>고, 그렇지 않으면 직렬화 된 속성 값은 여야 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.ServiceModel.MessageSecurityOverHttp.AlgorithmSuite*>"
  overload: System.ServiceModel.MessageSecurityOverHttp.ShouldSerializeAlgorithmSuite*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.MessageSecurityOverHttp.ShouldSerializeClientCredentialType
  id: ShouldSerializeClientCredentialType
  parent: System.ServiceModel.MessageSecurityOverHttp
  langs:
  - csharp
  name: ShouldSerializeClientCredentialType()
  nameWithType: MessageSecurityOverHttp.ShouldSerializeClientCredentialType()
  fullName: System.ServiceModel.MessageSecurityOverHttp.ShouldSerializeClientCredentialType()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "나타내는 값을 반환 여부는 <xref:System.ServiceModel.MessageSecurityOverHttp.ClientCredentialType*>속성 값이 기본값에서 변경 되었으며 serialize 해야 합니다.</xref:System.ServiceModel.MessageSecurityOverHttp.ClientCredentialType*>"
  syntax:
    content: public bool ShouldSerializeClientCredentialType ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우는 <xref:System.ServiceModel.MessageSecurityOverHttp.ClientCredentialType*>고, 그렇지 않으면 직렬화 된 속성 값은 여야 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.ServiceModel.MessageSecurityOverHttp.ClientCredentialType*>"
  overload: System.ServiceModel.MessageSecurityOverHttp.ShouldSerializeClientCredentialType*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.MessageSecurityOverHttp.ShouldSerializeNegotiateServiceCredential
  id: ShouldSerializeNegotiateServiceCredential
  parent: System.ServiceModel.MessageSecurityOverHttp
  langs:
  - csharp
  name: ShouldSerializeNegotiateServiceCredential()
  nameWithType: MessageSecurityOverHttp.ShouldSerializeNegotiateServiceCredential()
  fullName: System.ServiceModel.MessageSecurityOverHttp.ShouldSerializeNegotiateServiceCredential()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "나타내는 값을 반환 여부는 <xref:System.ServiceModel.MessageSecurityOverHttp.NegotiateServiceCredential*>속성 값이 기본값에서 변경 되었으며 serialize 해야 합니다.</xref:System.ServiceModel.MessageSecurityOverHttp.NegotiateServiceCredential*>"
  syntax:
    content: public bool ShouldSerializeNegotiateServiceCredential ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우는 <xref:System.ServiceModel.MessageSecurityOverHttp.NegotiateServiceCredential*>고, 그렇지 않으면 직렬화 된 속성 값은 여야 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.ServiceModel.MessageSecurityOverHttp.NegotiateServiceCredential*>"
  overload: System.ServiceModel.MessageSecurityOverHttp.ShouldSerializeNegotiateServiceCredential*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ServiceModel.MessageSecurityOverHttp.#ctor
  parent: System.ServiceModel.MessageSecurityOverHttp
  isExternal: false
  name: MessageSecurityOverHttp()
  nameWithType: MessageSecurityOverHttp.MessageSecurityOverHttp()
  fullName: System.ServiceModel.MessageSecurityOverHttp.MessageSecurityOverHttp()
- uid: System.ServiceModel.MessageSecurityOverHttp.AlgorithmSuite
  parent: System.ServiceModel.MessageSecurityOverHttp
  isExternal: false
  name: AlgorithmSuite
  nameWithType: MessageSecurityOverHttp.AlgorithmSuite
  fullName: System.ServiceModel.MessageSecurityOverHttp.AlgorithmSuite
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite
  parent: System.ServiceModel.Security
  isExternal: false
  name: SecurityAlgorithmSuite
  nameWithType: SecurityAlgorithmSuite
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite
- uid: System.ServiceModel.MessageSecurityOverHttp.ClientCredentialType
  parent: System.ServiceModel.MessageSecurityOverHttp
  isExternal: false
  name: ClientCredentialType
  nameWithType: MessageSecurityOverHttp.ClientCredentialType
  fullName: System.ServiceModel.MessageSecurityOverHttp.ClientCredentialType
- uid: System.ServiceModel.MessageCredentialType
  parent: System.ServiceModel
  isExternal: true
  name: MessageCredentialType
  nameWithType: MessageCredentialType
  fullName: System.ServiceModel.MessageCredentialType
- uid: System.ServiceModel.MessageSecurityOverHttp.IsSecureConversationEnabled
  parent: System.ServiceModel.MessageSecurityOverHttp
  isExternal: false
  name: IsSecureConversationEnabled()
  nameWithType: MessageSecurityOverHttp.IsSecureConversationEnabled()
  fullName: System.ServiceModel.MessageSecurityOverHttp.IsSecureConversationEnabled()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.MessageSecurityOverHttp.NegotiateServiceCredential
  parent: System.ServiceModel.MessageSecurityOverHttp
  isExternal: false
  name: NegotiateServiceCredential
  nameWithType: MessageSecurityOverHttp.NegotiateServiceCredential
  fullName: System.ServiceModel.MessageSecurityOverHttp.NegotiateServiceCredential
- uid: System.ServiceModel.MessageSecurityOverHttp.ShouldSerializeAlgorithmSuite
  parent: System.ServiceModel.MessageSecurityOverHttp
  isExternal: false
  name: ShouldSerializeAlgorithmSuite()
  nameWithType: MessageSecurityOverHttp.ShouldSerializeAlgorithmSuite()
  fullName: System.ServiceModel.MessageSecurityOverHttp.ShouldSerializeAlgorithmSuite()
- uid: System.ServiceModel.MessageSecurityOverHttp.ShouldSerializeClientCredentialType
  parent: System.ServiceModel.MessageSecurityOverHttp
  isExternal: false
  name: ShouldSerializeClientCredentialType()
  nameWithType: MessageSecurityOverHttp.ShouldSerializeClientCredentialType()
  fullName: System.ServiceModel.MessageSecurityOverHttp.ShouldSerializeClientCredentialType()
- uid: System.ServiceModel.MessageSecurityOverHttp.ShouldSerializeNegotiateServiceCredential
  parent: System.ServiceModel.MessageSecurityOverHttp
  isExternal: false
  name: ShouldSerializeNegotiateServiceCredential()
  nameWithType: MessageSecurityOverHttp.ShouldSerializeNegotiateServiceCredential()
  fullName: System.ServiceModel.MessageSecurityOverHttp.ShouldSerializeNegotiateServiceCredential()
- uid: System.ServiceModel.MessageSecurityOverHttp.#ctor*
  parent: System.ServiceModel.MessageSecurityOverHttp
  isExternal: false
  name: MessageSecurityOverHttp
  nameWithType: MessageSecurityOverHttp.MessageSecurityOverHttp
- uid: System.ServiceModel.MessageSecurityOverHttp.AlgorithmSuite*
  parent: System.ServiceModel.MessageSecurityOverHttp
  isExternal: false
  name: AlgorithmSuite
  nameWithType: MessageSecurityOverHttp.AlgorithmSuite
- uid: System.ServiceModel.MessageSecurityOverHttp.ClientCredentialType*
  parent: System.ServiceModel.MessageSecurityOverHttp
  isExternal: false
  name: ClientCredentialType
  nameWithType: MessageSecurityOverHttp.ClientCredentialType
- uid: System.ServiceModel.MessageSecurityOverHttp.IsSecureConversationEnabled*
  parent: System.ServiceModel.MessageSecurityOverHttp
  isExternal: false
  name: IsSecureConversationEnabled
  nameWithType: MessageSecurityOverHttp.IsSecureConversationEnabled
- uid: System.ServiceModel.MessageSecurityOverHttp.NegotiateServiceCredential*
  parent: System.ServiceModel.MessageSecurityOverHttp
  isExternal: false
  name: NegotiateServiceCredential
  nameWithType: MessageSecurityOverHttp.NegotiateServiceCredential
- uid: System.ServiceModel.MessageSecurityOverHttp.ShouldSerializeAlgorithmSuite*
  parent: System.ServiceModel.MessageSecurityOverHttp
  isExternal: false
  name: ShouldSerializeAlgorithmSuite
  nameWithType: MessageSecurityOverHttp.ShouldSerializeAlgorithmSuite
- uid: System.ServiceModel.MessageSecurityOverHttp.ShouldSerializeClientCredentialType*
  parent: System.ServiceModel.MessageSecurityOverHttp
  isExternal: false
  name: ShouldSerializeClientCredentialType
  nameWithType: MessageSecurityOverHttp.ShouldSerializeClientCredentialType
- uid: System.ServiceModel.MessageSecurityOverHttp.ShouldSerializeNegotiateServiceCredential*
  parent: System.ServiceModel.MessageSecurityOverHttp
  isExternal: false
  name: ShouldSerializeNegotiateServiceCredential
  nameWithType: MessageSecurityOverHttp.ShouldSerializeNegotiateServiceCredential
