### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator
  id: SecurityTokenAuthenticator
  children:
  - System.IdentityModel.Selectors.SecurityTokenAuthenticator.#ctor
  - System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  langs:
  - csharp
  name: SecurityTokenAuthenticator
  nameWithType: SecurityTokenAuthenticator
  fullName: System.IdentityModel.Selectors.SecurityTokenAuthenticator
  type: Class
  summary: "보안 토큰을 인증 합니다."
  remarks: "SecurityTokenAuthenticator 클래스와 파생 된 클래스는 보안 토큰을 인증 합니다. 일반적으로 것만 클래스를 파생 SecurityTokenAuthenticator에서 직접 사용자 지정 보안 토큰을 만들 때. 기본 제공 보안 토큰에 대 한 기본 인증 또는 권한 부여 동작을 재정의 하려는 경우 같은 <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator>.</xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator> SecurityTokenAuthenticator를에서 파생 된 클래스 중 하나에서 파생       SecurityTokenAuthenticator에서 클래스를 파생 하는 경우 다음 두 가지 메서드를 재정의: <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A>및 <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A>.</xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A> </xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A> <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A>메서드는이 보안 토큰 인증 자가 특정 보안 토큰을 인증할 수 있는지 여부를 확인 합니다.</xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A> <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A>메서드 보안 토큰을 인증 및 권한 부여에 대 한 권한 부여 정책의 집합을 설정 합니다.</xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A> 권한 부여 정책 응용 프로그램에 클레임을 보안 토큰에 있는 클레임을 매핑합니다."
  syntax:
    content: public abstract class SecurityTokenAuthenticator
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator.#ctor
  id: '#ctor'
  parent: System.IdentityModel.Selectors.SecurityTokenAuthenticator
  langs:
  - csharp
  name: SecurityTokenAuthenticator()
  nameWithType: SecurityTokenAuthenticator.SecurityTokenAuthenticator()
  fullName: System.IdentityModel.Selectors.SecurityTokenAuthenticator.SecurityTokenAuthenticator()
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenAuthenticator&quot;> </xref> 클래스입니다."
  syntax:
    content: protected SecurityTokenAuthenticator ();
    parameters: []
  overload: System.IdentityModel.Selectors.SecurityTokenAuthenticator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken(System.IdentityModel.Tokens.SecurityToken)
  id: CanValidateToken(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.SecurityTokenAuthenticator
  langs:
  - csharp
  name: CanValidateToken(SecurityToken)
  nameWithType: SecurityTokenAuthenticator.CanValidateToken(SecurityToken)
  fullName: System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken(SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "이 보안 토큰 인증 자가 지정된 된 보안 토큰 유효성을 검사할 수 있는지 여부를 나타내는 값을 가져옵니다."
  remarks: "CanValidateToken 메서드 토큰 매개 변수 인지를 확인 `null` 를 호출 하는 <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A>이 보안 토큰 인증자에 대 한 보안 토큰 형식을 인증할 수 있는지 여부를 확인할 수 있는 방법은 `token`.</xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A>"
  syntax:
    content: public bool CanValidateToken (System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> 유효성을 검사 합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>때 토큰을 확인할 수 있습니다. 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>token</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  id: CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.SecurityTokenAuthenticator
  langs:
  - csharp
  name: CanValidateTokenCore(SecurityToken)
  nameWithType: SecurityTokenAuthenticator.CanValidateTokenCore(SecurityToken)
  fullName: System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore(SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "파생된 클래스에서 재정의 되 면이 보안 토큰 인증 자가 지정된 된 보안 토큰 유효성을 검사할 수 있는지 여부를 나타내는 값을 가져옵니다."
  remarks: "CanValidateTokenCore 메서드에 의해 호출 됩니다는 <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken%2A>이 보안 토큰 인증자에 대 한 보안 토큰 형식을 인증할 수 있는지 여부를 확인할 수 있는 방법은 `token`.</xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken%2A> 이 보안 토큰을 인증 하지 않습니다. 통해 수행 됩니다는 <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken%2A>메서드.</xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken%2A>"
  syntax:
    content: protected abstract bool CanValidateTokenCore (System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> 유효성을 검사 합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>때 <code> token </code> 수 유효성이 검사 된 없으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken(System.IdentityModel.Tokens.SecurityToken)
  id: ValidateToken(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.SecurityTokenAuthenticator
  langs:
  - csharp
  name: ValidateToken(SecurityToken)
  nameWithType: SecurityTokenAuthenticator.ValidateToken(SecurityToken)
  fullName: System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken(SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "지정 된 보안 토큰을 인증 하 고 보안 토큰에 대 한 권한 부여 정책의 집합을 반환 합니다."
  remarks: "ValidateToken 메서드 검사 여부는 `token` 매개 변수는 `null`, 호출의 <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken%2A>이 보안 토큰 인증 자가이 보안 토큰을 인증할 수 있습니다 및 가능한 경우 다음 호출 하는 경우를 확인 하는 <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A>메서드.</xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A> </xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken%2A>"
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy> ValidateToken (System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> 유효성을 검사 합니다."
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy}
      description: "A &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; 형식의 <xref href=&quot;System.IdentityModel.Policy.IAuthorizationPolicy&quot;> </xref> 적용이 응용 프로그램에 대 한 권한 부여 정책의 집합이 들어 있는입니다."
  overload: System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>token</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IdentityModel.Tokens.SecurityTokenValidationException
    commentId: T:System.IdentityModel.Tokens.SecurityTokenValidationException
    description: "<code>token</code>이 보안 토큰 인증 자가 인증할 수 없습니다-또는- <code>token</code> 인증 되지 않습니다."
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  id: ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.SecurityTokenAuthenticator
  langs:
  - csharp
  name: ValidateTokenCore(SecurityToken)
  nameWithType: SecurityTokenAuthenticator.ValidateTokenCore(SecurityToken)
  fullName: System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore(SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "파생된 클래스에서 재정의 되 면 지정 된 보안 토큰을 인증 하 고 보안 토큰에 대 한 권한 부여 정책의 집합을 반환 합니다."
  remarks: "특정 보안 토큰 형식을 인증 하려면 ValidateTokenCore 메서드를 재정의 합니다.       ValidateTokenCore 메서드를 재정의 하는 경우 다음이 지침을 따릅니다:-보안 토큰에 전달 하는 경우는 `token` 매개 변수 여야 throw 유효성을 검사는 <xref:System.IdentityModel.Tokens.SecurityTokenValidationException>예외.</xref:System.IdentityModel.Tokens.SecurityTokenValidationException>      -이 응용 프로그램에 적용 권한 부여 정책이 인 경우는 빈 <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> <xref:System.IdentityModel.Policy.IAuthorizationPolicy>.</xref:System.IdentityModel.Policy.IAuthorizationPolicy> 형식의</xref:System.Collections.ObjectModel.ReadOnlyCollection%601> 반환       때 `null` 이 메서드에서 반환 되 [!INCLUDE[vsindigo](~/add/includes/vsindigo-md.md)] throw는 <xref:System.IdentityModel.Tokens.SecurityTokenValidationException>예외.</xref:System.IdentityModel.Tokens.SecurityTokenValidationException>       ValidateTokenCore 메서드에 의해 호출 됩니다는 <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken%2A>메서드.</xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken%2A>"
  syntax:
    content: protected abstract System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy> ValidateTokenCore (System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> 유효성을 검사 합니다."
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy}
      description: "A &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; 형식의 <xref href=&quot;System.IdentityModel.Policy.IAuthorizationPolicy&quot;> </xref> 적용이 응용 프로그램에 대 한 권한 부여 정책의 집합이 들어 있는입니다."
  overload: System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.IdentityModel.Tokens.SecurityTokenValidationException
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityTokenValidationException
  nameWithType: SecurityTokenValidationException
  fullName: System.IdentityModel.Tokens.SecurityTokenValidationException
- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator.#ctor
  parent: System.IdentityModel.Selectors.SecurityTokenAuthenticator
  isExternal: false
  name: SecurityTokenAuthenticator()
  nameWithType: SecurityTokenAuthenticator.SecurityTokenAuthenticator()
  fullName: System.IdentityModel.Selectors.SecurityTokenAuthenticator.SecurityTokenAuthenticator()
- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.SecurityTokenAuthenticator
  isExternal: false
  name: CanValidateToken(SecurityToken)
  nameWithType: SecurityTokenAuthenticator.CanValidateToken(SecurityToken)
  fullName: System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken(SecurityToken)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Tokens.SecurityToken
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityToken
  nameWithType: SecurityToken
  fullName: System.IdentityModel.Tokens.SecurityToken
- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.SecurityTokenAuthenticator
  isExternal: false
  name: CanValidateTokenCore(SecurityToken)
  nameWithType: SecurityTokenAuthenticator.CanValidateTokenCore(SecurityToken)
  fullName: System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore(SecurityToken)
- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.SecurityTokenAuthenticator
  isExternal: false
  name: ValidateToken(SecurityToken)
  nameWithType: SecurityTokenAuthenticator.ValidateToken(SecurityToken)
  fullName: System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken(SecurityToken)
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<IAuthorizationPolicy>
  nameWithType: ReadOnlyCollection<IAuthorizationPolicy>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Policy.IAuthorizationPolicy
    name: IAuthorizationPolicy
    nameWithType: IAuthorizationPolicy
    fullName: IAuthorizationPolicy
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.SecurityTokenAuthenticator
  isExternal: false
  name: ValidateTokenCore(SecurityToken)
  nameWithType: SecurityTokenAuthenticator.ValidateTokenCore(SecurityToken)
  fullName: System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore(SecurityToken)
- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator.#ctor*
  parent: System.IdentityModel.Selectors.SecurityTokenAuthenticator
  isExternal: false
  name: SecurityTokenAuthenticator
  nameWithType: SecurityTokenAuthenticator.SecurityTokenAuthenticator
- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken*
  parent: System.IdentityModel.Selectors.SecurityTokenAuthenticator
  isExternal: false
  name: CanValidateToken
  nameWithType: SecurityTokenAuthenticator.CanValidateToken
- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore*
  parent: System.IdentityModel.Selectors.SecurityTokenAuthenticator
  isExternal: false
  name: CanValidateTokenCore
  nameWithType: SecurityTokenAuthenticator.CanValidateTokenCore
- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken*
  parent: System.IdentityModel.Selectors.SecurityTokenAuthenticator
  isExternal: false
  name: ValidateToken
  nameWithType: SecurityTokenAuthenticator.ValidateToken
- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore*
  parent: System.IdentityModel.Selectors.SecurityTokenAuthenticator
  isExternal: false
  name: ValidateTokenCore
  nameWithType: SecurityTokenAuthenticator.ValidateTokenCore
