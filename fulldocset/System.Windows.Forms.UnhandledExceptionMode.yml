### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.UnhandledExceptionMode
  id: UnhandledExceptionMode
  children:
  - System.Windows.Forms.UnhandledExceptionMode.Automatic
  - System.Windows.Forms.UnhandledExceptionMode.CatchException
  - System.Windows.Forms.UnhandledExceptionMode.ThrowException
  langs:
  - csharp
  name: UnhandledExceptionMode
  nameWithType: UnhandledExceptionMode
  fullName: System.Windows.Forms.UnhandledExceptionMode
  type: Enum
  summary: "Windows Forms 응용 프로그램 처리 되지 않은 예외를 전송 하도록 정의 합니다."
  remarks: "이 열거형은 <xref:System.Windows.Forms.Application.SetUnhandledExceptionMode%2A>.</xref:System.Windows.Forms.Application.SetUnhandledExceptionMode%2A> 사용      > [!NOTE] >.NET Framework 버전 2.0에서는 공용 언어 런타임 동작이 처리 되지 않은 예외가 호출 스택으로 전파를 허용 하도록 변경 합니다. 응용 프로그램 구성 파일을 통해이 동작을 비활성화할 수 있습니다. 자세한 내용은 참조 [관리 되는 스레드의 예외](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example sets event handlers for both errors that occur on Windows Forms threads and errors that occur on other threads. It sets <xref:System.Windows.Forms.Application.SetUnhandledExceptionMode%2A> so that all errors are handled by the application, regardless of the settings in the application's user configuration file. It uses the <xref:System.Windows.Forms.Application.ThreadException> event for the former, and the <xref:System.AppDomain.UnhandledException> event for the latter. Since <xref:System.AppDomain.UnhandledException> cannot prevent an application from terminating, the example simply logs the error in the system Event Log prior to termination.  \n  \n This sample assumes that you have defined two <xref:System.Windows.Forms.Button> controls, `button1` and `button2`, on your <xref:System.Windows.Forms.Form> class.  \n  \n [!code-cpp[Classic Application.ThreadException Example#1](~/add/codesnippet/cpp/t-system.windows.forms.u_3_1.cpp)]\n [!code-cs[Classic Application.ThreadException Example#1](~/add/codesnippet/csharp/t-system.windows.forms.u_3_1.cs)]\n [!code-vb[Classic Application.ThreadException Example#1](~/add/codesnippet/visualbasic/t-system.windows.forms.u_3_1.vb)]"
  syntax:
    content: public enum UnhandledExceptionMode
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.Windows.Forms.UnhandledExceptionMode.Automatic
  id: Automatic
  parent: System.Windows.Forms.UnhandledExceptionMode
  langs:
  - csharp
  name: Automatic
  nameWithType: UnhandledExceptionMode.Automatic
  fullName: System.Windows.Forms.UnhandledExceptionMode.Automatic
  type: Field
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "모든 예외를 라우팅하는 <xref href=&quot;System.Windows.Forms.Application.ThreadException&quot;> </xref> 처리기를 응용 프로그램의 구성 파일 지정 하지 않는 한 합니다."
  syntax:
    content: Automatic
    return:
      type: System.Windows.Forms.UnhandledExceptionMode
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.UnhandledExceptionMode.CatchException
  id: CatchException
  parent: System.Windows.Forms.UnhandledExceptionMode
  langs:
  - csharp
  name: CatchException
  nameWithType: UnhandledExceptionMode.CatchException
  fullName: System.Windows.Forms.UnhandledExceptionMode.CatchException
  type: Field
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "항상에 대 한 예외를 라우팅하는 <xref href=&quot;System.Windows.Forms.Application.ThreadException&quot;> </xref> 처리기입니다. 응용 프로그램 구성 파일을 무시 합니다."
  syntax:
    content: CatchException
    return:
      type: System.Windows.Forms.UnhandledExceptionMode
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.UnhandledExceptionMode.ThrowException
  id: ThrowException
  parent: System.Windows.Forms.UnhandledExceptionMode
  langs:
  - csharp
  name: ThrowException
  nameWithType: UnhandledExceptionMode.ThrowException
  fullName: System.Windows.Forms.UnhandledExceptionMode.ThrowException
  type: Field
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "에 대 한 예외를 보내지는 <xref href=&quot;System.Windows.Forms.Application.ThreadException&quot;> </xref> 처리기입니다. 응용 프로그램 구성 파일을 무시 합니다."
  syntax:
    content: ThrowException
    return:
      type: System.Windows.Forms.UnhandledExceptionMode
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.Windows.Forms.UnhandledExceptionMode.Automatic
  parent: System.Windows.Forms.UnhandledExceptionMode
  isExternal: false
  name: Automatic
  nameWithType: UnhandledExceptionMode.Automatic
  fullName: System.Windows.Forms.UnhandledExceptionMode.Automatic
- uid: System.Windows.Forms.UnhandledExceptionMode
  parent: System.Windows.Forms
  isExternal: false
  name: UnhandledExceptionMode
  nameWithType: UnhandledExceptionMode
  fullName: System.Windows.Forms.UnhandledExceptionMode
- uid: System.Windows.Forms.UnhandledExceptionMode.CatchException
  parent: System.Windows.Forms.UnhandledExceptionMode
  isExternal: false
  name: CatchException
  nameWithType: UnhandledExceptionMode.CatchException
  fullName: System.Windows.Forms.UnhandledExceptionMode.CatchException
- uid: System.Windows.Forms.UnhandledExceptionMode.ThrowException
  parent: System.Windows.Forms.UnhandledExceptionMode
  isExternal: false
  name: ThrowException
  nameWithType: UnhandledExceptionMode.ThrowException
  fullName: System.Windows.Forms.UnhandledExceptionMode.ThrowException
