### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.AccessibleObject
  id: AccessibleObject
  children:
  - System.Windows.Forms.AccessibleObject.#ctor
  - System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accChildCount
  - System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accDoDefaultAction(System.Object)
  - System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accFocus
  - System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accHitTest(System.Int32,System.Int32)
  - System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accLocation(System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Object)
  - System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accNavigate(System.Int32,System.Object)
  - System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accParent
  - System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accSelect(System.Int32,System.Object)
  - System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accSelection
  - System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accChild(System.Object)
  - System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accDefaultAction(System.Object)
  - System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accDescription(System.Object)
  - System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accHelp(System.Object)
  - System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accHelpTopic(System.String@,System.Object)
  - System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accKeyboardShortcut(System.Object)
  - System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accName(System.Object)
  - System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accRole(System.Object)
  - System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accState(System.Object)
  - System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accValue(System.Object)
  - System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#set_accName(System.Object,System.String)
  - System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#set_accValue(System.Object,System.String)
  - System.Windows.Forms.AccessibleObject.Bounds
  - System.Windows.Forms.AccessibleObject.DefaultAction
  - System.Windows.Forms.AccessibleObject.Description
  - System.Windows.Forms.AccessibleObject.DoDefaultAction
  - System.Windows.Forms.AccessibleObject.GetChild(System.Int32)
  - System.Windows.Forms.AccessibleObject.GetChildCount
  - System.Windows.Forms.AccessibleObject.GetFocused
  - System.Windows.Forms.AccessibleObject.GetHelpTopic(System.String@)
  - System.Windows.Forms.AccessibleObject.GetSelected
  - System.Windows.Forms.AccessibleObject.Help
  - System.Windows.Forms.AccessibleObject.HitTest(System.Int32,System.Int32)
  - System.Windows.Forms.AccessibleObject.KeyboardShortcut
  - System.Windows.Forms.AccessibleObject.Name
  - System.Windows.Forms.AccessibleObject.Navigate(System.Windows.Forms.AccessibleNavigation)
  - System.Windows.Forms.AccessibleObject.Parent
  - System.Windows.Forms.AccessibleObject.Role
  - System.Windows.Forms.AccessibleObject.Select(System.Windows.Forms.AccessibleSelection)
  - System.Windows.Forms.AccessibleObject.State
  - System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetField(System.String,System.Reflection.BindingFlags)
  - System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetFields(System.Reflection.BindingFlags)
  - System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMember(System.String,System.Reflection.BindingFlags)
  - System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMembers(System.Reflection.BindingFlags)
  - System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMethod(System.String,System.Reflection.BindingFlags)
  - System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])
  - System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMethods(System.Reflection.BindingFlags)
  - System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetProperties(System.Reflection.BindingFlags)
  - System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetProperty(System.String,System.Reflection.BindingFlags)
  - System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  - System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])
  - System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#UnderlyingSystemType
  - System.Windows.Forms.AccessibleObject.UseStdAccessibleObjects(System.IntPtr)
  - System.Windows.Forms.AccessibleObject.UseStdAccessibleObjects(System.IntPtr,System.Int32)
  - System.Windows.Forms.AccessibleObject.Value
  langs:
  - csharp
  name: AccessibleObject
  nameWithType: AccessibleObject
  fullName: System.Windows.Forms.AccessibleObject
  type: Class
  summary: "접근성 응용 프로그램이 사용 하 여 응용 프로그램의 UI (사용자 인터페이스) 장애가 있는 사용자에 대 한 조정 정보를 제공 합니다."
  remarks: "접근성 응용 프로그램이 장애가 있는 사용자에 대 한 유용성을 개선 하기 위해 응용 프로그램의 기능을 조정할 수 있습니다.       시각 장애가 있는 사용자에 대해 소프트웨어와 운영 체제의 기능을 조정할 수 있습니다. 예를 들어 텍스트 및 이미지 확대 및 대비를 사용 하 여 렌더링할 수 있습니다. 또한 색맹 적절 한 색을 사용 하 여 사용자를 수용할 수 있습니다. 심각 하 게 시각 장애가 있는 사용자가 액세스할 수 있는 화면에 나타나는 변환 하는 화면 검토 기능으로 텍스트 음성 또는 동적, 새로 고칠 수 있는, 브라유 점자 표시 합니다.       청각 장애인을 위해; 깜박이 도구 모음 등의 시각 신호를 사용 하는 프로그램을 디자인할 수 있습니다. 또는 텍스트로 음성된 메시지를 표시할 수 있습니다. 예를 들어, 설정 되 면는 `SoundSentry` 시스템에서는 경보 사운드 때마다 visual 경고 제어판에 내게 필요한 옵션 기능을 제공 합니다.       동작 장애가 있는 사용자가에 대 한 컴퓨터 액세스 가능성을 향상 구체화 하거나 키보드 및 마우스 사용을 제거 하는 컨트롤 디자인할 수 있습니다. 제어판 지원을 제공합니다. 예를 들어 한 가지 대안은 탐색을 위한 마우스 대신 숫자 키패드를 사용 하는 것입니다. 라는 옵션을 `StickyKeys`, 사용자 수 없는 키를 누른 채 두 개 이상의 키 (예: CTRL + P) 한 번에 한 번에 한 개의 키를 입력 하 여 동일한 결과 얻을 수 있습니다.       사용자 인지에 대 한 있으며 언어 장애가 소프트웨어 프로그램의 요구에 더 잘 맞게 디자인할 수 있습니다. 예를 들어 이해, 표시, 더 적은 단어 및 초등학교 수준의 사용 하 여 이러한 사용자 유용할 수 있습니다.       점유 장애가 있는 사용자가 점유 요인을 패턴을 제거 하기 위해 소프트웨어 프로그램을 디자인할 수 있습니다.       접근성 응용 프로그램에 대 한 정보를 포함 하 여 내게 필요한 옵션에 대 한 자세한 내용은 MSDN library에서 또는 Microsoft 웹 사이트에서 Microsoft 내게 필요한 옵션에 대 한 설명서를 참조 합니다.      > [!NOTE] > AccessibleObject를 사용 하려면에 대 한 참조를 추가 해야 합니다는 `Accessibility` 어셈블리와 함께 설치는 [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]합니다. Windows Forms Active Accessibility 2.0 지원합니다."
  example:
  - "The following code example demonstrates the creation of an accessibility-aware chart control, using the AccessibleObject and <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes to expose accessible information. The control plots two curves along with a legend. The `ChartControlAccessibleObject` class, which derives from `ControlAccessibleObject`, is used in the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method to provide custom accessible information for the chart control. Because the chart legend is not an actual <xref:System.Windows.Forms.Control> -based control, but instead is drawn by the chart control, it does not have any built-in accessible information. Because of this, the `ChartControlAccessibleObject` class overrides the <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> method to return the `CurveLegendAccessibleObject` that represents accessible information for each part of the legend. When an accessible-aware application uses this control, the control can provide the necessary accessible information.  \n  \n [!code-vb[System.Windows.Forms.AccessibleObject#1](~/add/codesnippet/visualbasic/t-system.windows.forms.a_7_1.vb)]\n [!code-cs[System.Windows.Forms.AccessibleObject#1](~/add/codesnippet/csharp/t-system.windows.forms.a_7_1.cs)]\n [!code-cpp[System.Windows.Forms.AccessibleObject#1](~/add/codesnippet/cpp/t-system.windows.forms.a_7_1.cpp)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class AccessibleObject : System.Runtime.InteropServices.StandardOleMarshalObject, Accessibility.IAccessible, System.Reflection.IReflect
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.Runtime.InteropServices.StandardOleMarshalObject
  implements:
  - Accessibility.IAccessible
  - System.Reflection.IReflect
  inheritedMembers:
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.#ctor
  id: '#ctor'
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: AccessibleObject()
  nameWithType: AccessibleObject.AccessibleObject()
  fullName: System.Windows.Forms.AccessibleObject.AccessibleObject()
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Windows.Forms.AccessibleObject&quot;> </xref> 클래스입니다."
  remarks: "일반적으로이 메서드를 사용 하 여 액세스 가능한 개체를 만들 때 제공 하는 응용 프로그램에 특정 기능을 제공 하는 클래스의 메서드와 속성의 자체 구현을 합니다."
  syntax:
    content: public AccessibleObject ();
    parameters: []
  overload: System.Windows.Forms.AccessibleObject.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accChildCount
  id: Accessibility#IAccessible#accChildCount
  isEii: true
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: Accessibility.IAccessible.accChildCount
  nameWithType: AccessibleObject.Accessibility.IAccessible.accChildCount
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.accChildCount
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "이 개체에 속하는 자식 인터페이스의 수를 가져옵니다. 이 멤버에 대 한 참조 &lt;xref:Accessibility.IAccessible.accChildCount%2A?displayProperty=fullName&gt;합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Windows.Forms.AccessibleObject>인스턴스로 캐스팅 되는 <xref:Accessibility.IAccessible>인터페이스.</xref:Accessibility.IAccessible> </xref:System.Windows.Forms.AccessibleObject>"
  syntax:
    content: int Accessibility.IAccessible.accChildCount { get; }
    return:
      type: System.Int32
      description: "이 개체에 속하는 자식 액세스할 수 있는 개체의 수입니다. 개체에 자식 개체가 없으면,이 값은 0입니다."
  overload: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accChildCount*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accDoDefaultAction(System.Object)
  id: Accessibility#IAccessible#accDoDefaultAction(System.Object)
  isEii: true
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: Accessibility.IAccessible.accDoDefaultAction(Object)
  nameWithType: AccessibleObject.Accessibility.IAccessible.accDoDefaultAction(Object)
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.accDoDefaultAction(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "지정된 된 개체의 기본 동작을 수행 합니다. 일부 개체 마다 기본 작업이 있는 합니다. 이 멤버에 대 한 참조 &lt;xref:Accessibility.IAccessible.accDoDefaultAction%2A?displayProperty=fullName&gt;합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Windows.Forms.AccessibleObject>인스턴스로 캐스팅 되는 <xref:Accessibility.IAccessible>인터페이스.</xref:Accessibility.IAccessible> </xref:System.Windows.Forms.AccessibleObject>"
  syntax:
    content: void IAccessible.accDoDefaultAction (object childID);
    parameters:
    - id: childID
      type: System.Object
      description: "에 있는 자식 ID의 <xref href=&quot;Accessibility.IAccessible&quot;> </xref> 액세스 가능성 개체를 나타내는 인터페이스/자식 ID 쌍입니다."
  overload: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accDoDefaultAction*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accFocus
  id: Accessibility#IAccessible#accFocus
  isEii: true
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: Accessibility.IAccessible.accFocus
  nameWithType: AccessibleObject.Accessibility.IAccessible.accFocus
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.accFocus
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "키보드 포커스가 있는 개체를 가져옵니다. 이 멤버에 대 한 참조 &lt;xref:Accessibility.IAccessible.accFocus%2A?displayProperty=fullName&gt;합니다."
  remarks: "키보드 포커스가 있는 개체에 IAccessible.accFocus 속성의 반환 값 형식에 따라 달라 집니다. 다음 표에서 IAccessible.accFocus 속성에서 반환 된 개체 유형을 설명 합니다.      | 형식 | 설명 |   |----------|-----------------|   | `null`| 이 개체는 자체 포커스 키보드 없으며 키보드 포커스가 있는 자식에 포함 되어 있지 않습니다. |   | 정수 | 현재 개체에 키보드 포커스가 있으면&0; 이렇게 하지 않으면 키보드 포커스를 액세스할 수 있는 자식 개체의 자식 ID. |   | <xref:Accessibility.IAccessible>| 키보드 포커스가 있는 자식 액세스 가능성 개체입니다. |       이 멤버는 명시적 인터페이스 멤버 구현.</xref:Accessibility.IAccessible> 사용할 수 있습니다 경우에만 <xref:System.Windows.Forms.AccessibleObject>인스턴스로 캐스팅 되는 <xref:Accessibility.IAccessible>인터페이스.</xref:Accessibility.IAccessible> </xref:System.Windows.Forms.AccessibleObject>"
  syntax:
    content: object Accessibility.IAccessible.accFocus { get; }
    return:
      type: System.Object
      description: "키보드 포커스가 있는 개체입니다."
  overload: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accFocus*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accHitTest(System.Int32,System.Int32)
  id: Accessibility#IAccessible#accHitTest(System.Int32,System.Int32)
  isEii: true
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: Accessibility.IAccessible.accHitTest(Int32,Int32)
  nameWithType: AccessibleObject.Accessibility.IAccessible.accHitTest(Int32,Int32)
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.accHitTest(Int32,Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "지정된 된 화면 좌표에 있는 자식 개체를 가져옵니다. 이 멤버에 대 한 참조 &lt;xref:Accessibility.IAccessible.accHitTest%2A?displayProperty=fullName&gt;합니다."
  remarks: "다음 표에서 IAccessible.accHitTest 메서드가 반환할 수 있는 개체 유형을 설명 합니다.      | 형식 | 설명 |   |----------|-----------------|   | <xref:Accessibility.IAccessible>| 지정된 된 방향에 액세스할 수 있는 개체입니다. |   | 정수 |&0; 포인터가 있는 경우 지정 된 현재 개체 또는 개체의 경계 외부 그렇지 않으면 지정된 된 방향에 액세스 가능한 개체를 식별 하는 자식 ID. |       이 멤버는 명시적 인터페이스 멤버 구현.</xref:Accessibility.IAccessible> 사용할 수 있습니다 경우에만 <xref:System.Windows.Forms.AccessibleObject>인스턴스로 캐스팅 되는 <xref:Accessibility.IAccessible>인터페이스.</xref:Accessibility.IAccessible> </xref:System.Windows.Forms.AccessibleObject>"
  syntax:
    content: object IAccessible.accHitTest (int xLeft, int yTop);
    parameters:
    - id: xLeft
      type: System.Int32
      description: "가로 좌표입니다."
    - id: yTop
      type: System.Int32
      description: "세로 좌표입니다."
    return:
      type: System.Object
      description: "지정 된 지점에서 액세스 가능한 개체 <code> xLeft </code> 및 <code> yTop </code>합니다."
  overload: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accHitTest*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accLocation(System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Object)
  id: Accessibility#IAccessible#accLocation(System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Object)
  isEii: true
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: Accessibility.IAccessible.accLocation(Int32,Int32,Int32,Int32,Object)
  nameWithType: AccessibleObject.Accessibility.IAccessible.accLocation(Int32,Int32,Int32,Int32,Object)
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.accLocation(Int32,Int32,Int32,Int32,Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "개체의 현재 화면 위치를 가져옵니다. 이 멤버에 대 한 참조 &lt;xref:Accessibility.IAccessible.accLocation%2A?displayProperty=fullName&gt;합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Windows.Forms.AccessibleObject>인스턴스로 캐스팅 되는 <xref:Accessibility.IAccessible>인터페이스.</xref:Accessibility.IAccessible> </xref:System.Windows.Forms.AccessibleObject>"
  syntax:
    content: void IAccessible.accLocation (out int pxLeft, out int pyTop, out int pcxWidth, out int pcyHeight, object childID);
    parameters:
    - id: pxLeft
      type: System.Int32
      description: "이 메서드가 반환 될 때 개체의 왼쪽된 가장자리의 x 좌표를 포함 합니다. 이 매개 변수는 초기화 되지 않은 상태로 전달 됩니다."
    - id: pyTop
      type: System.Int32
      description: "이 메서드가 반환 될 때 개체의 위쪽 가장자리의 y 좌표를 포함 합니다. 이 매개 변수는 초기화 되지 않은 상태로 전달 됩니다."
    - id: pcxWidth
      type: System.Int32
      description: "이 메서드가 반환 될 때 개체의 너비를 포함 합니다. 이 매개 변수는 초기화 되지 않은 상태로 전달 됩니다."
    - id: pcyHeight
      type: System.Int32
      description: "이 메서드가 반환 될 때 개체의 높이 포함 합니다. 이 매개 변수는 초기화 되지 않은 상태로 전달 됩니다."
    - id: childID
      type: System.Object
      description: "액세스 가능성 개체의 ID. 이 매개 변수는 0에서 개체 또는 개체의 자식 개체 중 하나의 위치를 가져옵니다는 자식 ID의 위치를 가져옵니다."
  overload: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accLocation*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accNavigate(System.Int32,System.Object)
  id: Accessibility#IAccessible#accNavigate(System.Int32,System.Object)
  isEii: true
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: Accessibility.IAccessible.accNavigate(Int32,Object)
  nameWithType: AccessibleObject.Accessibility.IAccessible.accNavigate(Int32,Object)
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.accNavigate(Int32,Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "현재 개체를 기준으로 액세스 가능한 개체를 탐색합니다. 이 멤버에 대 한 참조 &lt;xref:Accessibility.IAccessible.accNavigate%2A?displayProperty=fullName&gt;합니다."
  remarks: "다음 표에서 IAccessible.accNavigate 메서드가 반환할 수 있는 개체 유형을 설명 합니다.      | 형식 | 설명 |   |----------|-----------------|   | `null`| 지정된 된 방향에 액세스할 수 있는 개체가 아닌 경우. |   | <xref:Accessibility.IAccessible>| 지정된 된 방향에 액세스할 수 있는 개체입니다. |   | 정수 | 지정된 된 방향에 액세스 가능한 개체를 식별 하는 자식 ID.</xref:Accessibility.IAccessible> <xref:Accessibility.IAccessible>부모 및 자식 ID를 사용 하 여 액세스할 수 있는 개체에 액세스할 수 있습니다. |       이 멤버는 명시적 인터페이스 멤버 구현.</xref:Accessibility.IAccessible> 사용할 수 있습니다 경우에만 <xref:System.Windows.Forms.AccessibleObject>인스턴스로 캐스팅 되는 <xref:Accessibility.IAccessible>인터페이스.</xref:Accessibility.IAccessible> </xref:System.Windows.Forms.AccessibleObject>"
  syntax:
    content: object IAccessible.accNavigate (int navDir, object childID);
    parameters:
    - id: navDir
      type: System.Int32
      description: "중 하나는 <xref href=&quot;System.Windows.Forms.AccessibleNavigation&quot;> </xref> 이동할 방향을 지정 하는 열거형입니다."
    - id: childID
      type: System.Object
      description: "액세스 가능성 개체의 ID. 이 매개 변수는 0에서 개체 또는 개체의 자식 개체 중 하나에서 시작 하는 자식 ID에서 시작 하도록 합니다."
    return:
      type: System.Object
      description: "에 지정 된 값에 액세스할 수 있는 개체 <code> navDir </code>합니다."
  overload: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accNavigate*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accParent
  id: Accessibility#IAccessible#accParent
  isEii: true
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: Accessibility.IAccessible.accParent
  nameWithType: AccessibleObject.Accessibility.IAccessible.accParent
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.accParent
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "부모를 가져옵니다.이 개체의 액세스 가능성 개체입니다. 이 멤버에 대 한 참조 &lt;xref:Accessibility.IAccessible.accParent%2A?displayProperty=fullName&gt;합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있도록 경우에만 <xref:System.Windows.Forms.AccessibleObject>인스턴스 캐스팅는 <xref:Accessibility.IAccessible>인터페이스...</xref:Accessibility.IAccessible> </xref:System.Windows.Forms.AccessibleObject>"
  syntax:
    content: object Accessibility.IAccessible.accParent { get; }
    return:
      type: System.Object
      description: "<xref href=&quot;Accessibility.IAccessible&quot;> </xref> 액세스 가능성 개체의 부모를 나타내는 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 부모 개체가 없는 경우."
  overload: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accParent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accSelect(System.Int32,System.Object)
  id: Accessibility#IAccessible#accSelect(System.Int32,System.Object)
  isEii: true
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: Accessibility.IAccessible.accSelect(Int32,Object)
  nameWithType: AccessibleObject.Accessibility.IAccessible.accSelect(Int32,Object)
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.accSelect(Int32,Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "선택을 수정 하거나 액세스 가능성 개체의 키보드 포커스를 이동 합니다. 이 멤버에 대 한 참조 &lt;xref:Accessibility.IAccessible.accSelect%2A?displayProperty=fullName&gt;합니다."
  remarks: "다음에 설명 <xref:System.Windows.Forms.AccessibleSelection>호출할 때 지정 하는 값 `Select` 복잡 한 선택 작업을 수행할 수 있습니다.</xref:System.Windows.Forms.AccessibleSelection>      | 작업 | 조합 플래그입니다. |   |---------------|----------------------|   | 한 번의 클릭을 시뮬레이션할 | <xref:System.Windows.Forms.AccessibleSelection> OR <xref:System.Windows.Forms.AccessibleSelection>|   | CTRL + 클릭을 시뮬레이션 하 여 대상 항목을 선택 하려면 | <xref:System.Windows.Forms.AccessibleSelection> OR <xref:System.Windows.Forms.AccessibleSelection>|   | CTRL + 클릭을 시뮬레이션 하 여 대상 항목의 선택을 취소 하려면 | <xref:System.Windows.Forms.AccessibleSelection> OR <xref:System.Windows.Forms.AccessibleSelection>|   | 시뮬레이션 SHIFT + 클릭 | <xref:System.Windows.Forms.AccessibleSelection> OR <xref:System.Windows.Forms.AccessibleSelection>|   | 개체의 범위를 선택 하 고 마지막 개체에 포커스를 설정 하려면 | 지정 <xref:System.Windows.Forms.AccessibleSelection>선택 영역 앵커를 설정 하려면 시작 개체입니다.</xref:System.Windows.Forms.AccessibleSelection> </xref:System.Windows.Forms.AccessibleSelection> </xref:System.Windows.Forms.AccessibleSelection> </xref:System.Windows.Forms.AccessibleSelection> </xref:System.Windows.Forms.AccessibleSelection> </xref:System.Windows.Forms.AccessibleSelection> </xref:System.Windows.Forms.AccessibleSelection> </xref:System.Windows.Forms.AccessibleSelection> </xref:System.Windows.Forms.AccessibleSelection> 그런 다음 Select를 다시 호출 하 고 <xref:System.Windows.Forms.AccessibleSelection>지정 또는 <xref:System.Windows.Forms.AccessibleSelection>마지막 개체에. |   | 모든 개체의 선택을 취소 하려면 | 지정 <xref:System.Windows.Forms.AccessibleSelection>임의 개체에서.</xref:System.Windows.Forms.AccessibleSelection> </xref:System.Windows.Forms.AccessibleSelection> </xref:System.Windows.Forms.AccessibleSelection> 이 플래그를 제외 하 고 방금 선택한 모든 개체를 선택 취소 합니다. 그런 다음 Select를 다시 호출 하 고 동일한 개체에서 <xref:System.Windows.Forms.AccessibleSelection>를 지정 합니다. |       이 멤버는 명시적 인터페이스 멤버 구현.</xref:System.Windows.Forms.AccessibleSelection> 사용할 수 있습니다 경우에만 <xref:System.Windows.Forms.AccessibleObject>인스턴스로 캐스팅 되는 <xref:Accessibility.IAccessible>인터페이스.</xref:Accessibility.IAccessible> </xref:System.Windows.Forms.AccessibleObject>"
  syntax:
    content: void IAccessible.accSelect (int flagsSelect, object childID);
    parameters:
    - id: flagsSelect
      type: System.Int32
      description: "비트 조합 된 <xref href=&quot;System.Windows.Forms.AccessibleSelection&quot;> </xref> 값입니다."
    - id: childID
      type: System.Object
      description: "선택 영역을 수행 하는 액세스 가능한 개체의 ID. 이 매개 변수는 0에서 개체 또는 개체의 자식 개체 중 하나를 선택 하는 자식 ID를 선택 합니다."
  overload: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accSelect*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accSelection
  id: Accessibility#IAccessible#accSelection
  isEii: true
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: Accessibility.IAccessible.accSelection
  nameWithType: AccessibleObject.Accessibility.IAccessible.accSelection
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.accSelection
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "선택한 자식 액세스 가능한 개체의 개체를 가져옵니다. 이 멤버에 대 한 참조 &lt;xref:Accessibility.IAccessible.accSelection%2A?displayProperty=fullName&gt;합니다."
  remarks: "다음 표에서 IAccessible.accSelection 속성에서 반환 하는 개체 유형을 설명 | 형식 | 설명 |   |----------|-----------------|   | `null`| 자식 개체가 선택 됩니다. |   | <xref:Accessibility.IAccessible>| 선택 된 자식 액세스 가능성 개체입니다. |   | 정수 | 선택 된 액세스 가능성 개체를 식별 하는 자식 ID.</xref:Accessibility.IAccessible> <xref:Accessibility.IAccessible>부모 및 자식 ID를 사용 하 여 액세스할 수 있는 개체에 액세스할 수 있습니다. |   | `IEnumVARIANT`| 선택 된 자식 개체의 목록입니다. |       이 멤버는 명시적 인터페이스 멤버 구현.</xref:Accessibility.IAccessible> 사용할 수 있습니다 경우에만 <xref:System.Windows.Forms.AccessibleObject>인스턴스로 캐스팅 되는 <xref:Accessibility.IAccessible>인터페이스.</xref:Accessibility.IAccessible> </xref:System.Windows.Forms.AccessibleObject>"
  syntax:
    content: object Accessibility.IAccessible.accSelection { get; }
    return:
      type: System.Object
      description: "액세스 가능한 개체의 선택 된 자식 개체입니다."
  overload: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accSelection*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accChild(System.Object)
  id: Accessibility#IAccessible#get_accChild(System.Object)
  isEii: true
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: Accessibility.IAccessible.get_accChild(Object)
  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accChild(Object)
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.get_accChild(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  syntax:
    content: object IAccessible.get_accChild (object childID);
    parameters:
    - id: childID
      type: System.Object
      description: "추가할 수 있습니다."
    return:
      type: System.Object
      description: "추가할 수 있습니다."
  overload: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accChild*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accDefaultAction(System.Object)
  id: Accessibility#IAccessible#get_accDefaultAction(System.Object)
  isEii: true
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: Accessibility.IAccessible.get_accDefaultAction(Object)
  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accDefaultAction(Object)
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.get_accDefaultAction(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  syntax:
    content: string IAccessible.get_accDefaultAction (object childID);
    parameters:
    - id: childID
      type: System.Object
      description: "추가할 수 있습니다."
    return:
      type: System.String
      description: "추가할 수 있습니다."
  overload: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accDefaultAction*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accDescription(System.Object)
  id: Accessibility#IAccessible#get_accDescription(System.Object)
  isEii: true
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: Accessibility.IAccessible.get_accDescription(Object)
  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accDescription(Object)
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.get_accDescription(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  syntax:
    content: string IAccessible.get_accDescription (object childID);
    parameters:
    - id: childID
      type: System.Object
      description: "추가할 수 있습니다."
    return:
      type: System.String
      description: "추가할 수 있습니다."
  overload: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accDescription*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accHelp(System.Object)
  id: Accessibility#IAccessible#get_accHelp(System.Object)
  isEii: true
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: Accessibility.IAccessible.get_accHelp(Object)
  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accHelp(Object)
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.get_accHelp(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  syntax:
    content: string IAccessible.get_accHelp (object childID);
    parameters:
    - id: childID
      type: System.Object
      description: "추가할 수 있습니다."
    return:
      type: System.String
      description: "추가할 수 있습니다."
  overload: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accHelp*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accHelpTopic(System.String@,System.Object)
  id: Accessibility#IAccessible#get_accHelpTopic(System.String@,System.Object)
  isEii: true
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: Accessibility.IAccessible.get_accHelpTopic(String,Object)
  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accHelpTopic(String,Object)
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.get_accHelpTopic(String,Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  syntax:
    content: int IAccessible.get_accHelpTopic (out string pszHelpFile, object childID);
    parameters:
    - id: pszHelpFile
      type: System.String
      description: "추가할 수 있습니다."
    - id: childID
      type: System.Object
      description: "추가할 수 있습니다."
    return:
      type: System.Int32
      description: "추가할 수 있습니다."
  overload: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accHelpTopic*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accKeyboardShortcut(System.Object)
  id: Accessibility#IAccessible#get_accKeyboardShortcut(System.Object)
  isEii: true
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: Accessibility.IAccessible.get_accKeyboardShortcut(Object)
  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accKeyboardShortcut(Object)
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.get_accKeyboardShortcut(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  syntax:
    content: string IAccessible.get_accKeyboardShortcut (object childID);
    parameters:
    - id: childID
      type: System.Object
      description: "추가할 수 있습니다."
    return:
      type: System.String
      description: "추가할 수 있습니다."
  overload: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accKeyboardShortcut*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accName(System.Object)
  id: Accessibility#IAccessible#get_accName(System.Object)
  isEii: true
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: Accessibility.IAccessible.get_accName(Object)
  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accName(Object)
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.get_accName(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  syntax:
    content: string IAccessible.get_accName (object childID);
    parameters:
    - id: childID
      type: System.Object
      description: "추가할 수 있습니다."
    return:
      type: System.String
      description: "추가할 수 있습니다."
  overload: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accName*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accRole(System.Object)
  id: Accessibility#IAccessible#get_accRole(System.Object)
  isEii: true
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: Accessibility.IAccessible.get_accRole(Object)
  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accRole(Object)
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.get_accRole(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  syntax:
    content: object IAccessible.get_accRole (object childID);
    parameters:
    - id: childID
      type: System.Object
      description: "추가할 수 있습니다."
    return:
      type: System.Object
      description: "추가할 수 있습니다."
  overload: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accRole*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accState(System.Object)
  id: Accessibility#IAccessible#get_accState(System.Object)
  isEii: true
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: Accessibility.IAccessible.get_accState(Object)
  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accState(Object)
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.get_accState(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  syntax:
    content: object IAccessible.get_accState (object childID);
    parameters:
    - id: childID
      type: System.Object
      description: "추가할 수 있습니다."
    return:
      type: System.Object
      description: "추가할 수 있습니다."
  overload: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accState*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accValue(System.Object)
  id: Accessibility#IAccessible#get_accValue(System.Object)
  isEii: true
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: Accessibility.IAccessible.get_accValue(Object)
  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accValue(Object)
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.get_accValue(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  syntax:
    content: string IAccessible.get_accValue (object childID);
    parameters:
    - id: childID
      type: System.Object
      description: "추가할 수 있습니다."
    return:
      type: System.String
      description: "추가할 수 있습니다."
  overload: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accValue*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#set_accName(System.Object,System.String)
  id: Accessibility#IAccessible#set_accName(System.Object,System.String)
  isEii: true
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: Accessibility.IAccessible.set_accName(Object,String)
  nameWithType: AccessibleObject.Accessibility.IAccessible.set_accName(Object,String)
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.set_accName(Object,String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  syntax:
    content: void IAccessible.set_accName (object childID, string newName);
    parameters:
    - id: childID
      type: System.Object
      description: "추가할 수 있습니다."
    - id: newName
      type: System.String
      description: "추가할 수 있습니다."
  overload: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#set_accName*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#set_accValue(System.Object,System.String)
  id: Accessibility#IAccessible#set_accValue(System.Object,System.String)
  isEii: true
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: Accessibility.IAccessible.set_accValue(Object,String)
  nameWithType: AccessibleObject.Accessibility.IAccessible.set_accValue(Object,String)
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.set_accValue(Object,String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  syntax:
    content: void IAccessible.set_accValue (object childID, string newValue);
    parameters:
    - id: childID
      type: System.Object
      description: "추가할 수 있습니다."
    - id: newValue
      type: System.String
      description: "추가할 수 있습니다."
  overload: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#set_accValue*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.Bounds
  id: Bounds
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: Bounds
  nameWithType: AccessibleObject.Bounds
  fullName: System.Windows.Forms.AccessibleObject.Bounds
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "액세스 가능성 개체의 크기와 위치를 가져옵니다."
  remarks: "Bounds 속성 화면 좌표에서 개체의 경계 사각형을 검색합니다. 개체에 있는 경우 사각형이 아닌 도형,이 속성은 전체 개체 영역을 완전히 둘러싸는 가장 작은 사각형을 나타냅니다. 따라서 목록 뷰 항목 같이 사각형이 아닌 개체에 대 한 개체의 경계 사각형의 좌표 실패할 수 있습니다를 호출 하 여 테스트 한 경우는 <xref:System.Windows.Forms.AccessibleObject.HitTest%2A>메서드를 때문에 <xref:System.Windows.Forms.AccessibleObject.HitTest%2A>픽셀 단위의 기준 개체의 경계를 결정 합니다.</xref:System.Windows.Forms.AccessibleObject.HitTest%2A> </xref:System.Windows.Forms.AccessibleObject.HitTest%2A>"
  example:
  - "The following example demonstrates the creation of an accessibility-aware chart control, using the <xref:System.Windows.Forms.AccessibleObject> and <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes to expose accessible information. The control plots two curves along with a legend. The `ChartControlAccessibleObject` class, which derives from `ControlAccessibleObject`, is used in the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method to provide custom accessible information for the chart control. Since the chart legend is not an actual <xref:System.Windows.Forms.Control> -based control, but instead is drawn by the chart control, it does not have any built-in accessible information. Because of this, the `ChartControlAccessibleObject` class overrides the <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> method to return the `CurveLegendAccessibleObject` that represents accessible information for each part of the legend. When an accessible-aware application uses this control, the control can provide the necessary accessible information.  \n  \n This code excerpt demonstrates overriding the Bounds property. See the <xref:System.Windows.Forms.AccessibleObject> class overview for the complete code example.  \n  \n [!code-vb[System.Windows.Forms.AccessibleObject#6](~/add/codesnippet/visualbasic/p-system.windows.forms.a_14_1.vb)]\n [!code-cs[System.Windows.Forms.AccessibleObject#6](~/add/codesnippet/csharp/p-system.windows.forms.a_14_1.cs)]\n [!code-cpp[System.Windows.Forms.AccessibleObject#6](~/add/codesnippet/cpp/p-system.windows.forms.a_14_1.cpp)]"
  syntax:
    content: public virtual System.Drawing.Rectangle Bounds { get; }
    return:
      type: System.Drawing.Rectangle
      description: "A <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 액세스 가능성 개체의 경계를 나타내는입니다."
  overload: System.Windows.Forms.AccessibleObject.Bounds*
  exceptions:
  - type: System.Runtime.InteropServices.COMException
    commentId: T:System.Runtime.InteropServices.COMException
    description: "컨트롤의 범위를 검색할 수 없습니다."
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.DefaultAction
  id: DefaultAction
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: DefaultAction
  nameWithType: AccessibleObject.DefaultAction
  fullName: System.Windows.Forms.AccessibleObject.DefaultAction
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "개체의 기본 동작을 설명 하는 문자열을 가져옵니다. 일부 개체 마다 기본 작업이 있는 합니다."
  remarks: "문자열 하지 개체의 역할이 결과적으로 개체에서 수행 될 동작을 설명 합니다. 즉, 문서를 인쇄 하는 도구 모음 단추에 &quot;현재 문서를 인쇄 합니다.&quot; 대신 &quot;Press&quot;의 기본 동작 개체의 기본 동작과 해당 값을 혼동 하지 마십시오."
  syntax:
    content: public virtual string DefaultAction { get; }
    return:
      type: System.String
      description: "개체에 대 한 기본 동작에 대 한 설명을 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 이 개체에 기본 작업이 없을 경우."
  overload: System.Windows.Forms.AccessibleObject.DefaultAction*
  exceptions:
  - type: System.Runtime.InteropServices.COMException
    commentId: T:System.Runtime.InteropServices.COMException
    description: "컨트롤에 대 한 기본 동작을 검색할 수 없습니다."
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.Description
  id: Description
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: Description
  nameWithType: AccessibleObject.Description
  fullName: System.Windows.Forms.AccessibleObject.Description
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "지정된 된 개체의 시각적 모양을 설명 하는 문자열을 가져옵니다. 일부 개체에는 설명이 필요 합니다."
  remarks: "이 속성에는 사용자에 게 개체의 시각적 모양을 설명합니다."
  syntax:
    content: public virtual string Description { get; }
    return:
      type: System.String
      description: "사용자에 게 개체의 시각적 모양에 대 한 설명을 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 개체에 대 한 설명이 없는 경우."
  overload: System.Windows.Forms.AccessibleObject.Description*
  exceptions:
  - type: System.Runtime.InteropServices.COMException
    commentId: T:System.Runtime.InteropServices.COMException
    description: "컨트롤에 대 한 설명을 검색할 수 없습니다."
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.DoDefaultAction
  id: DoDefaultAction
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: DoDefaultAction()
  nameWithType: AccessibleObject.DoDefaultAction()
  fullName: System.Windows.Forms.AccessibleObject.DoDefaultAction()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "이 액세스 가능성 개체와 연결 된 기본 동작을 수행 합니다."
  remarks: "클라이언트는 개체를 검사 하 여 개체의 기본 동작을 검색할 수 있습니다 <xref:System.Windows.Forms.AccessibleObject.DefaultAction%2A>속성.</xref:System.Windows.Forms.AccessibleObject.DefaultAction%2A> 클라이언트 개체의 기본 작업을 수행할 DoDefaultAction 대신 (지원) 하는 경우 자동화를 사용할 수 있습니다. 그러나 DoDefaultAction 동작을 사용 하는 개체의 가장 일반적으로 수행 하는 쉬운 방법을 제공 합니다."
  syntax:
    content: public virtual void DoDefaultAction ();
    parameters: []
  overload: System.Windows.Forms.AccessibleObject.DoDefaultAction*
  exceptions:
  - type: System.Runtime.InteropServices.COMException
    commentId: T:System.Runtime.InteropServices.COMException
    description: "컨트롤에 대 한 기본 작업을 수행할 수 없습니다."
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.GetChild(System.Int32)
  id: GetChild(System.Int32)
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: GetChild(Int32)
  nameWithType: AccessibleObject.GetChild(Int32)
  fullName: System.Windows.Forms.AccessibleObject.GetChild(Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "지정 된 인덱스에 해당 하는 액세스 가능한 자식을 검색 합니다."
  remarks: ''
  example:
  - "The following example demonstrates the creation of an accessibility-aware chart control, using the <xref:System.Windows.Forms.AccessibleObject> and <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes to expose accessible information. The control plots two curves along with a legend. The `ChartControlAccessibleObject` class, which derives from `ControlAccessibleObject`, is used in the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method to provide custom accessible information for the chart control. Since the chart legend is not an actual <xref:System.Windows.Forms.Control> -based control, but instead is drawn by the chart control, it does not have any built-in accessible information. Because of this, the `ChartControlAccessibleObject` class overrides the GetChild method to return the `CurveLegendAccessibleObject` that represents accessible information for each part of the legend. When an accessible-aware application uses this control, the control can provide the necessary accessible information.  \n  \n This code excerpt demonstrates overriding the GetChild method. See the <xref:System.Windows.Forms.AccessibleObject> class overview for the complete code example.  \n  \n [!code-vb[System.Windows.Forms.AccessibleObject#4](~/add/codesnippet/visualbasic/m-system.windows.forms.a_1_1.vb)]\n [!code-cs[System.Windows.Forms.AccessibleObject#4](~/add/codesnippet/csharp/m-system.windows.forms.a_1_1.cs)]\n [!code-cpp[System.Windows.Forms.AccessibleObject#4](~/add/codesnippet/cpp/m-system.windows.forms.a_1_1.cpp)]"
  syntax:
    content: public virtual System.Windows.Forms.AccessibleObject GetChild (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "액세스 가능한 자식의 인덱스&0;부터 시작 합니다."
    return:
      type: System.Windows.Forms.AccessibleObject
      description: "<xref href=&quot;System.Windows.Forms.AccessibleObject&quot;> </xref> 지정 된 인덱스에 해당 하는 액세스 가능한 자식을 나타내는입니다."
  overload: System.Windows.Forms.AccessibleObject.GetChild*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.GetChildCount
  id: GetChildCount
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: GetChildCount()
  nameWithType: AccessibleObject.GetChildCount()
  fullName: System.Windows.Forms.AccessibleObject.GetChildCount()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "액세스 가능한 개체에 속하는 자식 수를 검색 합니다."
  remarks: ''
  example:
  - "The following example demonstrates the creation of an accessibility-aware chart control, using the <xref:System.Windows.Forms.AccessibleObject> and <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes to expose accessible information. The control plots two curves along with a legend. The `ChartControlAccessibleObject` class, which derives from `ControlAccessibleObject`, is used in the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method to provide custom accessible information for the chart control. Since the chart legend is not an actual <xref:System.Windows.Forms.Control> -based control, but instead is drawn by the chart control, it does not have any built-in accessible information. Because of this, the `ChartControlAccessibleObject` class overrides the <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> method to return the `CurveLegendAccessibleObject` that represents accessible information for each part of the legend. When an accessible-aware application uses this control, the control can provide the necessary accessible information.  \n  \n This code demonstrates shows overriding the GetChildCount method. See the <xref:System.Windows.Forms.AccessibleObject> class overview for the complete code example.  \n  \n [!code-vb[System.Windows.Forms.AccessibleObject#4](~/add/codesnippet/visualbasic/m-system.windows.forms.a_7_1.vb)]\n [!code-cs[System.Windows.Forms.AccessibleObject#4](~/add/codesnippet/csharp/m-system.windows.forms.a_7_1.cs)]\n [!code-cpp[System.Windows.Forms.AccessibleObject#4](~/add/codesnippet/cpp/m-system.windows.forms.a_7_1.cpp)]"
  syntax:
    content: public virtual int GetChildCount ();
    parameters: []
    return:
      type: System.Int32
      description: "액세스 가능한 개체에 속하는 자식 수입니다."
  overload: System.Windows.Forms.AccessibleObject.GetChildCount*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.GetFocused
  id: GetFocused
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: GetFocused()
  nameWithType: AccessibleObject.GetFocused()
  fullName: System.Windows.Forms.AccessibleObject.GetFocused()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "키보드 포커스가 있는 개체를 검색 합니다."
  remarks: "키보드 포커스의 개념을 활성 창의 관련 되어 있습니다. 활성 창에는 사용자가 작업 전경 창이입니다. 키보드 포커스가 있는 개체를 활성 창 또는 활성 창의 자식 개체입니다.       한 번에 하나의 개체나 컨테이너 내에서 항목에 포커스를 가질 수 있습니다. 키보드 포커스가 있는 개체는 반드시 선택한 개체가 아닙니다."
  syntax:
    content: public virtual System.Windows.Forms.AccessibleObject GetFocused ();
    parameters: []
    return:
      type: System.Windows.Forms.AccessibleObject
      description: "<xref href=&quot;System.Windows.Forms.AccessibleObject&quot;> </xref> 현재 포커스를 지정 하는 합니다. 이 메서드는 개체 자체는 데 사용 하는 경우 호출 하는 개체를 반환 합니다. 반환 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 포커스가 개체가 없는 경우."
  overload: System.Windows.Forms.AccessibleObject.GetFocused*
  exceptions:
  - type: System.Runtime.InteropServices.COMException
    commentId: T:System.Runtime.InteropServices.COMException
    description: "컨트롤을 검색할 수 없습니다."
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.GetHelpTopic(System.String@)
  id: GetHelpTopic(System.String@)
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: GetHelpTopic(String)
  nameWithType: AccessibleObject.GetHelpTopic(String)
  fullName: System.Windows.Forms.AccessibleObject.GetHelpTopic(String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "이 액세스 가능성 개체와 연결 된 도움말 파일에 대 한 도움말 항목 식별자와 경로 대 한 식별자를 가져옵니다."
  remarks: "<xref:System.Windows.Forms.AccessibleObject>Windows 도움말 시스템을 사용 하 여 적절 한 <xref:System.Windows.Forms.Help.ShowHelp%2A?displayProperty=fullName> <xref:System.Windows.Forms.Help>안내 하십시오.</xref:System.Windows.Forms.Help> 메서드</xref:System.Windows.Forms.Help.ShowHelp%2A?displayProperty=fullName> 파일 이름 및 항목 ID를 전달할 수</xref:System.Windows.Forms.AccessibleObject> 에 대 한 도움말을 표시 하려면"
  syntax:
    content: public virtual int GetHelpTopic (out string fileName);
    parameters:
    - id: fileName
      type: System.String
      description: "반환 시,이 속성에는이 액세스 가능성 개체와 연결 된 도움말 파일의 경로를 포함 합니다."
    return:
      type: System.Int32
      description: "도움말 항목 또는 도움말 항목이 없으면-1에 대 한 식별자입니다. 반환 시,는 <code> fileName </code> 매개 변수에이 액세스 가능성 개체와 연결 된 도움말 파일의 경로를 포함 합니다."
  overload: System.Windows.Forms.AccessibleObject.GetHelpTopic*
  exceptions:
  - type: System.Runtime.InteropServices.COMException
    commentId: T:System.Runtime.InteropServices.COMException
    description: "컨트롤에 대 한 도움말 항목을 검색할 수 없습니다."
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.GetSelected
  id: GetSelected
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: GetSelected()
  nameWithType: AccessibleObject.GetSelected()
  fullName: System.Windows.Forms.AccessibleObject.GetSelected()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "현재 선택 된 자식을 검색합니다."
  syntax:
    content: public virtual System.Windows.Forms.AccessibleObject GetSelected ();
    parameters: []
    return:
      type: System.Windows.Forms.AccessibleObject
      description: "<xref href=&quot;System.Windows.Forms.AccessibleObject&quot;> </xref> 현재 선택 된 자식을 나타내는입니다. 이 메서드는 개체 자체를 선택 하는 경우 호출 하는 개체를 반환 합니다. 반환 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 경우 현재 선택 된 자식이 없고 개체 자체에 포커스가 있습니다."
  overload: System.Windows.Forms.AccessibleObject.GetSelected*
  exceptions:
  - type: System.Runtime.InteropServices.COMException
    commentId: T:System.Runtime.InteropServices.COMException
    description: "선택 된 자식을 검색할 수 없습니다."
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.Help
  id: Help
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: Help
  nameWithType: AccessibleObject.Help
  fullName: System.Windows.Forms.AccessibleObject.Help
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "개체 또는 개체를 사용 하는 방법에 대 한 설명을 가져옵니다."
  syntax:
    content: public virtual string Help { get; }
    return:
      type: System.String
      description: "A <xref:System.String>개체 또는 개체를 사용 하는 방법에 대 한 설명을 포함 하는.</xref:System.String> 반환 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 도움말이 정의 된 경우."
  overload: System.Windows.Forms.AccessibleObject.Help*
  exceptions:
  - type: System.Runtime.InteropServices.COMException
    commentId: T:System.Runtime.InteropServices.COMException
    description: "컨트롤에 대 한 도움말 문자열을 검색할 수 없습니다."
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.HitTest(System.Int32,System.Int32)
  id: HitTest(System.Int32,System.Int32)
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: HitTest(Int32,Int32)
  nameWithType: AccessibleObject.HitTest(Int32,Int32)
  fullName: System.Windows.Forms.AccessibleObject.HitTest(Int32,Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "지정된 된 화면 좌표에 있는 자식 개체를 검색합니다."
  remarks: "목록 뷰 항목 같이 사각형이 아닌 개체에 대 한 개체의 좌표의 경계 사각형 검색 <xref:System.Windows.Forms.AccessibleObject.Bounds%2A>HitTest 픽셀 단위의 기준 개체의 경계를 결정 하기 때문에 HitTest를 사용 하 여 테스트 하는 경우 실패할 수 있습니다.</xref:System.Windows.Forms.AccessibleObject.Bounds%2A>"
  syntax:
    content: public virtual System.Windows.Forms.AccessibleObject HitTest (int x, int y);
    parameters:
    - id: x
      type: System.Int32
      description: "가로 화면 좌표입니다."
    - id: y
      type: System.Int32
      description: "세로 화면 좌표입니다."
    return:
      type: System.Windows.Forms.AccessibleObject
      description: "<xref href=&quot;System.Windows.Forms.AccessibleObject&quot;> </xref> 지정한 화면 좌표에 있는 자식 개체를 나타내는입니다. 이 메서드는 개체 자신이 지정 된 위치에 있으면 호출 하는 개체를 반환 합니다. 반환 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 테스트 한 위치에 개체가 없는 경우."
  overload: System.Windows.Forms.AccessibleObject.HitTest*
  exceptions:
  - type: System.Runtime.InteropServices.COMException
    commentId: T:System.Runtime.InteropServices.COMException
    description: "컨트롤을 맞출 수 테스트 합니다."
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.KeyboardShortcut
  id: KeyboardShortcut
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: KeyboardShortcut
  nameWithType: AccessibleObject.KeyboardShortcut
  fullName: System.Windows.Forms.AccessibleObject.KeyboardShortcut
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "바로 가기 키 또는 액세스 가능한 개체에 대 한 액세스 키를 가져옵니다."
  remarks: "선택 키를 니모닉으로 알려진은 메뉴, 메뉴 항목, 레이블, 단추 또는 다른 일부 컨트롤의 텍스트에 밑줄이 그어진된 문자입니다. 로 인해 사용자도를 열려면 ALT + F, 예: 표시 된 밑줄이 그어진된 키를 누른 채 ALT 키를 눌러 메뉴를 표시할 수는 예를 들어는 `File` 메뉴. 메뉴 항목의 선택 키를 사용 하려면 메뉴 항목을 포함 하는 활성 상태 여야 합니다. 도구 모음 단추 및 메뉴 항목 등의 컨트롤에 관련 된 바로 가기 키가 있는 경우가 많습니다. 메뉴 항목의 선택 키와 연결 된 바로 가기 키를 모두 있을 수 있습니다. 단일 문자가 KeyboardShortcut 속성의 값을 사용 하는 경우 액세스 키를 가정할 수 있습니다."
  syntax:
    content: public virtual string KeyboardShortcut { get; }
    return:
      type: System.String
      description: "바로 가기 키 또는 액세스 가능한 개체에 대 한 액세스 키 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 개체에 연결 된 바로 가기 키 인지 합니다."
  overload: System.Windows.Forms.AccessibleObject.KeyboardShortcut*
  exceptions:
  - type: System.Runtime.InteropServices.COMException
    commentId: T:System.Runtime.InteropServices.COMException
    description: "컨트롤에 대 한 바로 가기를 검색할 수 없습니다."
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.Name
  id: Name
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: Name
  nameWithType: AccessibleObject.Name
  fullName: System.Windows.Forms.AccessibleObject.Name
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "개체 이름을 가져오거나 설정 합니다."
  remarks: "Name 속성은 식별 찾거나 사용자에 대 한 개체를 알리기 위해 클라이언트에서 사용 하는 문자열입니다. 자식 개체의 이름에 액세스 하려면 먼저 호출 해야 <xref:System.Windows.Forms.AccessibleObject.GetChild%2A>자식 이름을 검색 하는 인덱스를 사용 합니다.</xref:System.Windows.Forms.AccessibleObject.GetChild%2A>"
  example:
  - "The following example demonstrates the creation of an accessibility-aware chart control, using the <xref:System.Windows.Forms.AccessibleObject> and <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes to expose accessible information. The control plots two curves along with a legend. The `ChartControlAccessibleObject` class, which derives from `ControlAccessibleObject`, is used in the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method to provide custom accessible information for the chart control. Since the chart legend is not an actual <xref:System.Windows.Forms.Control> -based control, but instead is drawn by the chart control, it does not have any built-in accessible information. Because of this, the `ChartControlAccessibleObject` class overrides the <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> method to return the `CurveLegendAccessibleObject` that represents accessible information for each part of the legend. When an accessible-aware application uses this control, the control can provide the necessary accessible information.  \n  \n This code excerpt demonstrates overriding the Name property. See the <xref:System.Windows.Forms.AccessibleObject> class overview for the complete code example.  \n  \n [!code-vb[System.Windows.Forms.AccessibleObject#6](~/add/codesnippet/visualbasic/p-system.windows.forms.a_7_1.vb)]\n [!code-cs[System.Windows.Forms.AccessibleObject#6](~/add/codesnippet/csharp/p-system.windows.forms.a_7_1.cs)]\n [!code-cpp[System.Windows.Forms.AccessibleObject#6](~/add/codesnippet/cpp/p-system.windows.forms.a_7_1.cpp)]"
  syntax:
    content: public virtual string Name { get; set; }
    return:
      type: System.String
      description: "개체 이름 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 는 속성이 설정 되지 않은 경우."
  overload: System.Windows.Forms.AccessibleObject.Name*
  exceptions:
  - type: System.Runtime.InteropServices.COMException
    commentId: T:System.Runtime.InteropServices.COMException
    description: "컨트롤의 이름은 검색 하거나 설정할 수 없습니다."
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.Navigate(System.Windows.Forms.AccessibleNavigation)
  id: Navigate(System.Windows.Forms.AccessibleNavigation)
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: Navigate(AccessibleNavigation)
  nameWithType: AccessibleObject.Navigate(AccessibleNavigation)
  fullName: System.Windows.Forms.AccessibleObject.Navigate(AccessibleNavigation)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "다른 액세스 가능성 개체를 탐색합니다."
  remarks: "탐색, 공간 및 논리는 항상 컨테이너 내에서 사용자 인터페이스 요소 수 있습니다. 공간 탐색 시작 개체의 형제에만 클라이언트 탐색할 수 있습니다. 클라이언트는 논리적 탐색 함께 사용 하 고 탐색 플래그에 따라 자식 또는 시작 개체의 형제를 탐색할 수 있습니다. 이 메서드는 선택 영역이 나 포커스 변경 되지 않습니다. 포커스를 변경 하거나 개체를 선택 하려면 사용 <xref:System.Windows.Forms.AccessibleObject.Select%2A>.</xref:System.Windows.Forms.AccessibleObject.Select%2A> Navigate 메서드는 사용자 인터페이스 요소에만 정의 된 화면 위치를 검색 합니다."
  example:
  - "The following example demonstrates the creation of an accessibility-aware chart control, using the <xref:System.Windows.Forms.AccessibleObject> and <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes to expose accessible information. The control plots two curves along with a legend. The `ChartControlAccessibleObject` class, which derives from `ControlAccessibleObject`, is used in the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method to provide custom accessible information for the chart control. Since the chart legend is not an actual <xref:System.Windows.Forms.Control> -based control, but instead is drawn by the chart control, it does not have any built-in accessible information. Because of this, the `ChartControlAccessibleObject` class overrides the <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> method to return the `CurveLegendAccessibleObject` that represents accessible information for each part of the legend. When an accessible-aware application uses this control, the control can provide the necessary accessible information.  \n  \n This code demonstrates shows overriding the Navigate method. See the <xref:System.Windows.Forms.AccessibleObject> class overview for the complete code example.  \n  \n [!code-vb[System.Windows.Forms.AccessibleObject#6](~/add/codesnippet/visualbasic/b72d660b-5a96-4d26-9d1d-_1.vb)]\n [!code-cs[System.Windows.Forms.AccessibleObject#6](~/add/codesnippet/csharp/b72d660b-5a96-4d26-9d1d-_1.cs)]\n [!code-cpp[System.Windows.Forms.AccessibleObject#6](~/add/codesnippet/cpp/b72d660b-5a96-4d26-9d1d-_1.cpp)]"
  syntax:
    content: public virtual System.Windows.Forms.AccessibleObject Navigate (System.Windows.Forms.AccessibleNavigation navdir);
    parameters:
    - id: navdir
      type: System.Windows.Forms.AccessibleNavigation
      description: "중 하나는 <xref href=&quot;System.Windows.Forms.AccessibleNavigation&quot;> </xref> 값입니다."
    return:
      type: System.Windows.Forms.AccessibleObject
      description: "<xref href=&quot;System.Windows.Forms.AccessibleObject&quot;> </xref> 나타내는 중 하나는 <xref href=&quot;System.Windows.Forms.AccessibleNavigation&quot;> </xref> 값입니다."
  overload: System.Windows.Forms.AccessibleObject.Navigate*
  exceptions:
  - type: System.Runtime.InteropServices.COMException
    commentId: T:System.Runtime.InteropServices.COMException
    description: "탐색 시도가 실패합니다."
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.Parent
  id: Parent
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: Parent
  nameWithType: AccessibleObject.Parent
  fullName: System.Windows.Forms.AccessibleObject.Parent
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "액세스 가능한 개체의 부모를 가져옵니다."
  remarks: ''
  example:
  - "The following example demonstrates the creation of an accessibility-aware chart control, using the <xref:System.Windows.Forms.AccessibleObject> and <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes to expose accessible information. The control plots two curves along with a legend. The `ChartControlAccessibleObject` class, which derives from `ControlAccessibleObject`, is used in the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method to provide custom accessible information for the chart control. Since the chart legend is not an actual <xref:System.Windows.Forms.Control> -based control, but instead is drawn by the chart control, it does not have any built-in accessible information. Because of this, the `ChartControlAccessibleObject` class overrides the <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> method to return the `CurveLegendAccessibleObject` that represents accessible information for each part of the legend. When an accessible-aware application uses this control, the control can provide the necessary accessible information.  \n  \n This code excerpt demonstrates overriding the Parent property. See the <xref:System.Windows.Forms.AccessibleObject> class overview for the complete code example.  \n  \n [!code-vb[System.Windows.Forms.AccessibleObject#6](~/add/codesnippet/visualbasic/p-system.windows.forms.a_9_1.vb)]\n [!code-cs[System.Windows.Forms.AccessibleObject#6](~/add/codesnippet/csharp/p-system.windows.forms.a_9_1.cs)]\n [!code-cpp[System.Windows.Forms.AccessibleObject#6](~/add/codesnippet/cpp/p-system.windows.forms.a_9_1.cpp)]"
  syntax:
    content: public virtual System.Windows.Forms.AccessibleObject Parent { get; }
    return:
      type: System.Windows.Forms.AccessibleObject
      description: "<xref href=&quot;System.Windows.Forms.AccessibleObject&quot;> </xref> 액세스 가능한 개체의 부모를 나타내는 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 부모 개체가 없는 경우."
  overload: System.Windows.Forms.AccessibleObject.Parent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.Role
  id: Role
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: Role
  nameWithType: AccessibleObject.Role
  fullName: System.Windows.Forms.AccessibleObject.Role
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "이 액세스 가능성 개체의 역할을 가져옵니다."
  remarks: "개체의 역할에 개체의 기능에 설명 하는 데 도움이 됩니다."
  example:
  - "The following example demonstrates the creation of an accessibility-aware chart control, using the <xref:System.Windows.Forms.AccessibleObject> and <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes to expose accessible information. The control plots two curves along with a legend. The `ChartControlAccessibleObject` class, which derives from `ControlAccessibleObject`, is used in the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method to provide custom accessible information for the chart control. Since the chart legend is not an actual <xref:System.Windows.Forms.Control> -based control, but instead is drawn by the chart control, it does not have any built-in accessible information. Because of this, the `ChartControlAccessibleObject` class overrides the <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> method to return the `CurveLegendAccessibleObject` that represents accessible information for each part of the legend. When an accessible-aware application uses this control, the control can provide the necessary accessible information.  \n  \n This code excerpt demonstrates overriding the Role property. See the <xref:System.Windows.Forms.AccessibleObject> class overview for the complete code example.  \n  \n [!code-vb[System.Windows.Forms.AccessibleObject#4](~/add/codesnippet/visualbasic/p-system.windows.forms.a_13_1.vb)]\n [!code-cs[System.Windows.Forms.AccessibleObject#4](~/add/codesnippet/csharp/p-system.windows.forms.a_13_1.cs)]\n [!code-cpp[System.Windows.Forms.AccessibleObject#4](~/add/codesnippet/cpp/p-system.windows.forms.a_13_1.cpp)]"
  syntax:
    content: public virtual System.Windows.Forms.AccessibleRole Role { get; }
    return:
      type: System.Windows.Forms.AccessibleRole
      description: "중 하나는 <xref href=&quot;System.Windows.Forms.AccessibleRole&quot;> </xref> 값 또는 <xref href=&quot;System.Windows.Forms.AccessibleRole&quot;> </xref> 지정 된 역할이 없으면 합니다."
  overload: System.Windows.Forms.AccessibleObject.Role*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.Select(System.Windows.Forms.AccessibleSelection)
  id: Select(System.Windows.Forms.AccessibleSelection)
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: Select(AccessibleSelection)
  nameWithType: AccessibleObject.Select(AccessibleSelection)
  fullName: System.Windows.Forms.AccessibleObject.Select(AccessibleSelection)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "선택을 수정 하거나 액세스 가능성 개체의 키보드 포커스를 이동 합니다."
  remarks: "응용 프로그램 복잡 한 선택 작업을 수행 하려면이 메서드를 사용할 수 있습니다.       다음 설명 <xref:System.Windows.Forms.AccessibleSelection>복잡 한 선택 작업을 수행 하려면 호출할 때 지정 하는 값을 선택 합니다.</xref:System.Windows.Forms.AccessibleSelection>      | 작업 | 조합 플래그입니다. |   |---------------|----------------------|   | 한 번의 클릭을 시뮬레이션할 | <xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName> `OR` <xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName> **참고:** 사용자의 응용 프로그램 내에서 호출 하는 경우이 조합은 원하는 컨트롤을 선택 하지 않습니다.</xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName> </xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName> 그러나 원하는 효과 외부 응용 프로그램에서 호출 된 경우. |   | CTRL + 클릭을 시뮬레이션 하 여 대상 항목을 선택 하려면 | <xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName> `OR` <xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName>|   | CTRL + 클릭을 시뮬레이션 하 여 대상 항목의 선택을 취소 하려면 | <xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName> `OR` <xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName>|   | 시뮬레이션 SHIFT + 클릭 | <xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName> `OR` <xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName>|   | 개체의 범위를 선택 하 고 마지막 개체에 포커스를 설정 하려면 | 지정 <xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName>선택 영역 앵커를 설정 하려면 시작 개체입니다.</xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName> </xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName> </xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName> </xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName> </xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName> </xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName> </xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName> 그런 다음 Select를 다시 호출 하 고 <xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName>지정 `OR` <xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName>마지막 개체에. |   | 모든 개체의 선택을 취소 하려면 | 지정 <xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName>임의 개체에서.</xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName> </xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName></xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName> 이 플래그를 제외 하 고 방금 선택한 모든 개체를 선택 취소 합니다. 그런 다음 Select를 다시 호출 하 고 지정 <xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName>같은 개체에 대해. |</xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName>"
  example:
  - "The following example demonstrates the creation of an accessibility-aware chart control, using the <xref:System.Windows.Forms.AccessibleObject> and <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes to expose accessible information. The control plots two curves along with a legend. The `ChartControlAccessibleObject` class, which derives from `ControlAccessibleObject`, is used in the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method to provide custom accessible information for the chart control. Since the chart legend is not an actual <xref:System.Windows.Forms.Control> -based control, but instead is drawn by the chart control, it does not have any built-in accessible information. Because of this, the `ChartControlAccessibleObject` class overrides the <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> method to return the `CurveLegendAccessibleObject` that represents accessible information for each part of the legend. When an accessible-aware application uses this control, the control can provide the necessary accessible information.  \n  \n This code demonstrates shows overriding the Select method. See the <xref:System.Windows.Forms.AccessibleObject> class overview for the complete code example.  \n  \n [!code-vb[System.Windows.Forms.AccessibleObject#6](~/add/codesnippet/visualbasic/f0c27e30-bd9a-4501-a7a0-_1.vb)]\n [!code-cs[System.Windows.Forms.AccessibleObject#6](~/add/codesnippet/csharp/f0c27e30-bd9a-4501-a7a0-_1.cs)]\n [!code-cpp[System.Windows.Forms.AccessibleObject#6](~/add/codesnippet/cpp/f0c27e30-bd9a-4501-a7a0-_1.cpp)]"
  syntax:
    content: public virtual void Select (System.Windows.Forms.AccessibleSelection flags);
    parameters:
    - id: flags
      type: System.Windows.Forms.AccessibleSelection
      description: "중 하나는 <xref href=&quot;System.Windows.Forms.AccessibleSelection&quot;> </xref> 값입니다."
  overload: System.Windows.Forms.AccessibleObject.Select*
  exceptions:
  - type: System.Runtime.InteropServices.COMException
    commentId: T:System.Runtime.InteropServices.COMException
    description: "선택 영역을 수행할 수 없습니다."
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.State
  id: State
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: State
  nameWithType: AccessibleObject.State
  fullName: System.Windows.Forms.AccessibleObject.State
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "이 액세스 가능성 개체의 상태를 가져옵니다."
  remarks: ''
  example:
  - "The following example demonstrates the creation of an accessibility-aware chart control, using the <xref:System.Windows.Forms.AccessibleObject> and <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes to expose accessible information. The control plots two curves along with a legend. The `ChartControlAccessibleObject` class, which derives from `ControlAccessibleObject`, is used in the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method to provide custom accessible information for the chart control. Since the chart legend is not an actual <xref:System.Windows.Forms.Control> -based control, but instead is drawn by the chart control, it does not have any built-in accessible information. Because of this, the `ChartControlAccessibleObject` class overrides the <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> method to return the `CurveLegendAccessibleObject` that represents accessible information for each part of the legend. When an accessible-aware application uses this control, the control can provide the necessary accessible information.  \n  \n This code excerpt demonstrates overriding the State property. See the <xref:System.Windows.Forms.AccessibleObject> class overview for the complete code example.  \n  \n [!code-vb[System.Windows.Forms.AccessibleObject#4](~/add/codesnippet/visualbasic/p-system.windows.forms.a_10_1.vb)]\n [!code-cs[System.Windows.Forms.AccessibleObject#4](~/add/codesnippet/csharp/p-system.windows.forms.a_10_1.cs)]\n [!code-cpp[System.Windows.Forms.AccessibleObject#4](~/add/codesnippet/cpp/p-system.windows.forms.a_10_1.cpp)]"
  syntax:
    content: public virtual System.Windows.Forms.AccessibleStates State { get; }
    return:
      type: System.Windows.Forms.AccessibleStates
      description: "중 하나는 <xref href=&quot;System.Windows.Forms.AccessibleStates&quot;> </xref> 값 또는 <xref href=&quot;System.Windows.Forms.AccessibleStates&quot;> </xref>없는 상태가 설정 된 경우."
  overload: System.Windows.Forms.AccessibleObject.State*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetField(System.String,System.Reflection.BindingFlags)
  id: System#Reflection#IReflect#GetField(System.String,System.Reflection.BindingFlags)
  isEii: true
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: System.Reflection.IReflect.GetField(String,BindingFlags)
  nameWithType: AccessibleObject.System.Reflection.IReflect.GetField(String,BindingFlags)
  fullName: System.Windows.Forms.AccessibleObject.System.Reflection.IReflect.GetField(String,BindingFlags)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "가져옵니다는 &lt;xref:System.Reflection.FieldInfo?displayProperty=fullName&gt; 개체 바인딩 플래그 및 지정된 된 필드에 해당 합니다. 이 멤버에 대 한 참조 &lt;xref:System.Reflection.IReflect.GetField%2A?displayProperty=fullName&gt;합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Windows.Forms.AccessibleObject>인스턴스로 캐스팅 되는 <xref:System.Reflection.IReflect>인터페이스.</xref:System.Reflection.IReflect> </xref:System.Windows.Forms.AccessibleObject>"
  syntax:
    content: System.Reflection.FieldInfo IReflect.GetField (string name, System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: name
      type: System.String
      description: "찾을 필드의 이름입니다."
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "바인딩 특성 검색을 제어 하는 데 사용 합니다."
    return:
      type: System.Reflection.FieldInfo
      description: "A &lt;xref:System.Reflection.FieldInfo?displayProperty=fullName&gt; 에 지정 된 검색 제약 조건을 충족 하는 명명 된 개체에 대 한 필드 정보를 포함 하는 개체 <code> bindingAttr </code>합니다."
  overload: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetField*
  exceptions:
  - type: System.Reflection.AmbiguousMatchException
    commentId: T:System.Reflection.AmbiguousMatchException
    description: "개체 이름이 같은 여러 필드를 구현합니다."
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetFields(System.Reflection.BindingFlags)
  id: System#Reflection#IReflect#GetFields(System.Reflection.BindingFlags)
  isEii: true
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: System.Reflection.IReflect.GetFields(BindingFlags)
  nameWithType: AccessibleObject.System.Reflection.IReflect.GetFields(BindingFlags)
  fullName: System.Windows.Forms.AccessibleObject.System.Reflection.IReflect.GetFields(BindingFlags)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "배열을 가져옵니다 &lt;xref:System.Reflection.FieldInfo?displayProperty=fullName&gt; 현재 클래스의 모든 필드에 해당 하는 개체입니다. 이 멤버에 대 한 참조 &lt;xref:System.Reflection.IReflect.GetFields%2A?displayProperty=fullName&gt;합니다."
  remarks: "각 필드에는 고유한 이름이 있어야 합니다. <xref:System.Reflection.BindingFlags?displayProperty=fullName>플래그 public이 아닌 필드를 검색에 포함 되도록 지정 합니다.</xref:System.Reflection.BindingFlags?displayProperty=fullName> <xref:System.Reflection.BindingFlags?displayProperty=fullName>플래그는 공용 필드는 검색에 포함 되도록 지정 합니다.</xref:System.Reflection.BindingFlags?displayProperty=fullName>       이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Windows.Forms.AccessibleObject>인스턴스로 캐스팅 되는 <xref:System.Reflection.IReflect>인터페이스.</xref:System.Reflection.IReflect> </xref:System.Windows.Forms.AccessibleObject>"
  syntax:
    content: System.Reflection.FieldInfo[] IReflect.GetFields (System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "바인딩 특성 검색을 제어 하는 데 사용 합니다."
    return:
      type: System.Reflection.FieldInfo[]
      description: "배열을 &lt;xref:System.Reflection.FieldInfo?displayProperty=fullName&gt; 이에 지정 된 검색 제약 조건을 충족 하는 리플렉션 개체에 대 한 모든 필드 정보를 포함 하는 개체 <code> bindingAttr </code>합니다."
  overload: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetFields*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMember(System.String,System.Reflection.BindingFlags)
  id: System#Reflection#IReflect#GetMember(System.String,System.Reflection.BindingFlags)
  isEii: true
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: System.Reflection.IReflect.GetMember(String,BindingFlags)
  nameWithType: AccessibleObject.System.Reflection.IReflect.GetMember(String,BindingFlags)
  fullName: System.Windows.Forms.AccessibleObject.System.Reflection.IReflect.GetMember(String,BindingFlags)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "배열을 가져옵니다 &lt;xref:System.Reflection.MemberInfo?displayProperty=fullName&gt; 모든 공용 멤버에 지정 된 이름과 일치 하는 모든 멤버에 해당 합니다. 이 멤버에 대 한 참조 &lt;xref:System.Reflection.IReflect.GetMember%2A?displayProperty=fullName&gt;합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Windows.Forms.AccessibleObject>인스턴스로 캐스팅 되는 <xref:System.Reflection.IReflect>인터페이스.</xref:System.Reflection.IReflect> </xref:System.Windows.Forms.AccessibleObject>"
  syntax:
    content: System.Reflection.MemberInfo[] IReflect.GetMember (string name, System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: name
      type: System.String
      description: "찾으려는 멤버의 이름입니다."
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "바인딩 특성 검색을 제어 하는 데 사용 합니다."
    return:
      type: System.Reflection.MemberInfo[]
      description: "배열을 &lt;xref:System.Reflection.MemberInfo?displayProperty=fullName&gt; name 매개 변수와 일치 하는 개체입니다."
  overload: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMember*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMembers(System.Reflection.BindingFlags)
  id: System#Reflection#IReflect#GetMembers(System.Reflection.BindingFlags)
  isEii: true
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: System.Reflection.IReflect.GetMembers(BindingFlags)
  nameWithType: AccessibleObject.System.Reflection.IReflect.GetMembers(BindingFlags)
  fullName: System.Windows.Forms.AccessibleObject.System.Reflection.IReflect.GetMembers(BindingFlags)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "배열을 가져옵니다 &lt;xref:System.Reflection.MemberInfo?displayProperty=fullName&gt; 모든 public 멤버 또는 현재 클래스의 모든 멤버에 해당 하는 개체입니다. 이 멤버에 대 한 참조 &lt;xref:System.Reflection.IReflect.GetMembers%2A?displayProperty=fullName&gt;합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Windows.Forms.AccessibleObject>인스턴스로 캐스팅 되는 <xref:System.Reflection.IReflect>인터페이스.</xref:System.Reflection.IReflect> </xref:System.Windows.Forms.AccessibleObject>"
  syntax:
    content: System.Reflection.MemberInfo[] IReflect.GetMembers (System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "바인딩 특성 검색을 제어 하는 데 사용 합니다."
    return:
      type: System.Reflection.MemberInfo[]
      description: "배열을 &lt;xref:System.Reflection.MemberInfo?displayProperty=fullName&gt; 이 리플렉션 개체에 대 한 모든 멤버 정보를 포함 하는 개체입니다."
  overload: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMembers*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMethod(System.String,System.Reflection.BindingFlags)
  id: System#Reflection#IReflect#GetMethod(System.String,System.Reflection.BindingFlags)
  isEii: true
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: System.Reflection.IReflect.GetMethod(String,BindingFlags)
  nameWithType: AccessibleObject.System.Reflection.IReflect.GetMethod(String,BindingFlags)
  fullName: System.Windows.Forms.AccessibleObject.System.Reflection.IReflect.GetMethod(String,BindingFlags)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "가져옵니다는 &lt;xref:System.Reflection.MethodInfo?displayProperty=fullName&gt; 지정 된 검색 제약 조건 지정한 메서드에 해당 하는 개체입니다. 이 멤버에 대 한 참조 &lt;xref:System.Reflection.IReflect.GetMethod%2A?displayProperty=fullName&gt;합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Windows.Forms.AccessibleObject>인스턴스로 캐스팅 되는 <xref:System.Reflection.IReflect>인터페이스.</xref:System.Reflection.IReflect> </xref:System.Windows.Forms.AccessibleObject>"
  syntax:
    content: System.Reflection.MethodInfo IReflect.GetMethod (string name, System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: name
      type: System.String
      description: "찾으려는 멤버의 이름입니다."
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "바인딩 특성 검색을 제어 하는 데 사용 합니다."
    return:
      type: System.Reflection.MethodInfo
      description: "A &lt;xref:System.Reflection.MethodInfo?displayProperty=fullName&gt; 일치 항목에 지정 된 메서드 이름 및 검색 조건을 기반으로 메서드 정보를 포함 하는 개체 <code> bindingAttr </code>합니다."
  overload: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMethod*
  exceptions:
  - type: System.Reflection.AmbiguousMatchException
    commentId: T:System.Reflection.AmbiguousMatchException
    description: "개체는 같은 이름의 여러 메서드를 구현합니다."
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])
  id: System#Reflection#IReflect#GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])
  isEii: true
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: System.Reflection.IReflect.GetMethod(String,BindingFlags,Binder,Type[],ParameterModifier[])
  nameWithType: AccessibleObject.System.Reflection.IReflect.GetMethod(String,BindingFlags,Binder,Type[],ParameterModifier[])
  fullName: System.Windows.Forms.AccessibleObject.System.Reflection.IReflect.GetMethod(String,BindingFlags,Binder,Type[],ParameterModifier[])
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "가져옵니다는 &lt;xref:System.Reflection.MethodInfo?displayProperty=fullName&gt; 오버 로드 된 메서드 중에서 선택할 유형 배열을 사용 하 여 지정된 된 메서드에 해당 하는 개체입니다. 이 멤버에 대 한 참조 &lt;xref:System.Reflection.IReflect.GetMethod%2A?displayProperty=fullName&gt;합니다."
  remarks: "반환 값은 일치 하는 메서드 이름 뒤에 <xref:System.Reflection.BindingFlags?displayProperty=fullName>열거, 하 여 지정 된 형식 변환의 종류는 `binder` 매개 변수, 오버 로드를 및 <xref:System.Reflection.ParameterInfo?displayProperty=fullName>메서드의 시그니처를 설명 하는.</xref:System.Reflection.ParameterInfo?displayProperty=fullName> </xref:System.Reflection.BindingFlags?displayProperty=fullName>       이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Windows.Forms.AccessibleObject>인스턴스로 캐스팅 되는 <xref:System.Reflection.IReflect>인터페이스.</xref:System.Reflection.IReflect> </xref:System.Windows.Forms.AccessibleObject>"
  syntax:
    content: System.Reflection.MethodInfo IReflect.GetMethod (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type[] types, System.Reflection.ParameterModifier[] modifiers);
    parameters:
    - id: name
      type: System.String
      description: "찾으려는 멤버의 이름입니다."
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "바인딩 특성 검색을 제어 하는 데 사용 합니다."
    - id: binder
      type: System.Reflection.Binder
      description: "구현 하는 개체 <xref href=&quot;System.Reflection.Binder&quot;> </xref>,이 메서드와 관련 된 속성이 포함 된 합니다."
    - id: types
      type: System.Type[]
      description: "오버 로드 된 메서드 중 하나를 선택 하는 데 사용 되는 배열입니다."
    - id: modifiers
      type: System.Reflection.ParameterModifier[]
      description: "바인딩을 형식이 수정 된 매개 변수 서명과 함께 작동 하는 데 사용 되는 매개 변수 한정자의 배열입니다."
    return:
      type: System.Reflection.MethodInfo
      description: "지정된 된 모든 매개 변수와 일치 하는 요청 된 메서드."
  overload: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMethod*
  exceptions:
  - type: System.Reflection.AmbiguousMatchException
    commentId: T:System.Reflection.AmbiguousMatchException
    description: "개체는 같은 이름의 여러 메서드를 구현합니다."
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMethods(System.Reflection.BindingFlags)
  id: System#Reflection#IReflect#GetMethods(System.Reflection.BindingFlags)
  isEii: true
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: System.Reflection.IReflect.GetMethods(BindingFlags)
  nameWithType: AccessibleObject.System.Reflection.IReflect.GetMethods(BindingFlags)
  fullName: System.Windows.Forms.AccessibleObject.System.Reflection.IReflect.GetMethods(BindingFlags)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "배열을 가져옵니다 &lt;xref:System.Reflection.MethodInfo?displayProperty=fullName&gt; 모든 공용 메서드 또는 현재 클래스의 모든 메서드를 사용 하 여 개체입니다. 이 멤버에 대 한 참조 &lt;xref:System.Reflection.IReflect.GetMethods%2A?displayProperty=fullName&gt;합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Windows.Forms.AccessibleObject>인스턴스로 캐스팅 되는 <xref:System.Reflection.IReflect>인터페이스.</xref:System.Reflection.IReflect> </xref:System.Windows.Forms.AccessibleObject>"
  syntax:
    content: System.Reflection.MethodInfo[] IReflect.GetMethods (System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "바인딩 특성 검색을 제어 하는 데 사용 합니다."
    return:
      type: System.Reflection.MethodInfo[]
      description: "배열을 &lt;xref:System.Reflection.MethodInfo?displayProperty=fullName&gt; 에 지정 된 검색 제약 조건을 충족 하는이 리플렉션 개체에 대해 정의 된 모든 메서드를 포함 하는 개체 <xref uid=&quot;langword_csharp_bindingAttr&quot; name=&quot;bindingAttr&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMethods*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetProperties(System.Reflection.BindingFlags)
  id: System#Reflection#IReflect#GetProperties(System.Reflection.BindingFlags)
  isEii: true
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: System.Reflection.IReflect.GetProperties(BindingFlags)
  nameWithType: AccessibleObject.System.Reflection.IReflect.GetProperties(BindingFlags)
  fullName: System.Windows.Forms.AccessibleObject.System.Reflection.IReflect.GetProperties(BindingFlags)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "배열을 가져옵니다 &lt;xref:System.Reflection.PropertyInfo?displayProperty=fullName&gt; 모든 공용 속성에 현재 클래스의 모든 속성에 해당 합니다. 이 멤버에 대 한 참조 &lt;xref:System.Reflection.IReflect.GetProperties%2A?displayProperty=fullName&gt;합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Windows.Forms.AccessibleObject>인스턴스로 캐스팅 되는 <xref:System.Reflection.IReflect>인터페이스.</xref:System.Reflection.IReflect> </xref:System.Windows.Forms.AccessibleObject>"
  syntax:
    content: System.Reflection.PropertyInfo[] IReflect.GetProperties (System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "바인딩 특성 검색을 제어 하는 데 사용 합니다."
    return:
      type: System.Reflection.PropertyInfo[]
      description: "배열을 &lt;xref:System.Reflection.PropertyInfo?displayProperty=fullName&gt; 리플렉션 개체에 정의 된 모든 속성에 대 한 개체입니다."
  overload: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetProperty(System.String,System.Reflection.BindingFlags)
  id: System#Reflection#IReflect#GetProperty(System.String,System.Reflection.BindingFlags)
  isEii: true
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: System.Reflection.IReflect.GetProperty(String,BindingFlags)
  nameWithType: AccessibleObject.System.Reflection.IReflect.GetProperty(String,BindingFlags)
  fullName: System.Windows.Forms.AccessibleObject.System.Reflection.IReflect.GetProperty(String,BindingFlags)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "가져옵니다는 &lt;xref:System.Reflection.PropertyInfo?displayProperty=fullName&gt; 아래 지정 된 속성에 해당 하는 개체 검색 제약 조건을 지정 합니다. 이 멤버에 대 한 참조 &lt;xref:System.Reflection.IReflect.GetProperty%2A?displayProperty=fullName&gt;합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Windows.Forms.AccessibleObject>인스턴스로 캐스팅 되는 <xref:System.Reflection.IReflect>인터페이스.</xref:System.Reflection.IReflect> </xref:System.Windows.Forms.AccessibleObject>"
  syntax:
    content: System.Reflection.PropertyInfo IReflect.GetProperty (string name, System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: name
      type: System.String
      description: "찾을 속성의 이름입니다."
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "바인딩 특성 검색을 제어 하는 데 사용 합니다."
    return:
      type: System.Reflection.PropertyInfo
      description: "A &lt;xref:System.Reflection.PropertyInfo?displayProperty=fullName&gt; 에 지정 된 검색 제약 조건을 충족 하는 속성에 대 한 개체 <code> bindingAttr </code>, 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 경우 속성을 찾을 수 없습니다."
  overload: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetProperty*
  exceptions:
  - type: System.Reflection.AmbiguousMatchException
    commentId: T:System.Reflection.AmbiguousMatchException
    description: "개체는 같은 이름의 여러 메서드를 구현합니다."
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  id: System#Reflection#IReflect#GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  isEii: true
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: System.Reflection.IReflect.GetProperty(String,BindingFlags,Binder,Type,Type[],ParameterModifier[])
  nameWithType: AccessibleObject.System.Reflection.IReflect.GetProperty(String,BindingFlags,Binder,Type,Type[],ParameterModifier[])
  fullName: System.Windows.Forms.AccessibleObject.System.Reflection.IReflect.GetProperty(String,BindingFlags,Binder,Type,Type[],ParameterModifier[])
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "가져옵니다는 &lt;xref:System.Reflection.PropertyInfo?displayProperty=fullName&gt; 와 지정 된 속성에 해당 하는 개체 검색 제약 조건을 지정 합니다. 이 멤버에 대 한 참조 &lt;xref:System.Reflection.IReflect.GetProperty%2A?displayProperty=fullName&gt;합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Windows.Forms.AccessibleObject>인스턴스로 캐스팅 되는 <xref:System.Reflection.IReflect>인터페이스.</xref:System.Reflection.IReflect> </xref:System.Windows.Forms.AccessibleObject>"
  syntax:
    content: System.Reflection.PropertyInfo IReflect.GetProperty (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type returnType, Type[] types, System.Reflection.ParameterModifier[] modifiers);
    parameters:
    - id: name
      type: System.String
      description: "찾으려는 멤버의 이름입니다."
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "바인딩 특성 검색을 제어 하는 데 사용 합니다."
    - id: binder
      type: System.Reflection.Binder
      description: "이 메서드와 관련 된 속성이 포함 된 바인더를 구현 하는 개체입니다."
    - id: returnType
      type: System.Type
      description: "오버 로드 된 메서드 중 하나를 선택 하는 데 사용 되는 배열입니다."
    - id: types
      type: System.Type[]
      description: "바인딩을 형식이 수정 된 매개 변수 서명과 함께 작동 하는 데 사용 되는 매개 변수 한정자의 배열입니다."
    - id: modifiers
      type: System.Reflection.ParameterModifier[]
      description: "매개 변수 한정자를 선택 하는 데 사용 되는 배열입니다."
    return:
      type: System.Reflection.PropertyInfo
      description: "A &lt;xref:System.Reflection.PropertyInfo?displayProperty=fullName&gt; 위치 속성이이 리플렉션 개체에 지정 된 이름 가진 속성이 있는 경우이 속성에 대 한 개체 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 경우 속성을 찾을 수 없습니다."
  overload: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])
  id: System#Reflection#IReflect#InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])
  isEii: true
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: System.Reflection.IReflect.InvokeMember(String,BindingFlags,Binder,Object,Object[],ParameterModifier[],CultureInfo,String[])
  nameWithType: AccessibleObject.System.Reflection.IReflect.InvokeMember(String,BindingFlags,Binder,Object,Object[],ParameterModifier[],CultureInfo,String[])
  fullName: System.Windows.Forms.AccessibleObject.System.Reflection.IReflect.InvokeMember(String,BindingFlags,Binder,Object,Object[],ParameterModifier[],CultureInfo,String[])
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "지정된 된 멤버를 호출합니다. 이 멤버에 대 한 참조 &lt;xref:System.Reflection.IReflect.InvokeMember%2A?displayProperty=fullName&gt;합니다."
  remarks: "`invokeAttr` 매개 변수는 생성자, 메서드, 속성 또는 필드 일 수 있습니다. 적합 한 호출 특성을 지정 해야 합니다. 빈 문자열을 전달 하 여 클래스의 기본 멤버를 호출 합니다. (&quot;&quot;)으로 멤버의 이름입니다.       `modifiers` 매개 변수의 길이는는 `args` 메타 데이터에서 호출 된 멤버의 인수 특성을 나타내는 매개 변수입니다. 매개 변수는 다음과 같은 특성을 가질 수 있습니다: pdIn, pdOut, pdRetval, pdOptional, 및 pdHasDefault 합니다. 이 나타냅니다 [In] [Out], [retval] [선택 사항] 및 기본 매개 변수를 각각.       이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Windows.Forms.AccessibleObject>인스턴스로 캐스팅 되는 <xref:System.Reflection.IReflect>인터페이스.</xref:System.Reflection.IReflect> </xref:System.Windows.Forms.AccessibleObject>"
  syntax:
    content: object IReflect.InvokeMember (string name, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object target, object[] args, System.Reflection.ParameterModifier[] modifiers, System.Globalization.CultureInfo culture, string[] namedParameters);
    parameters:
    - id: name
      type: System.String
      description: "찾으려는 멤버의 이름입니다."
    - id: invokeAttr
      type: System.Reflection.BindingFlags
      description: "중 하나는 <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> 호출 특성입니다."
    - id: binder
      type: System.Reflection.Binder
      description: "중 하나는 <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> 비트 플래그입니다. 이 메서드와 관련 된 속성이 포함 된 구현 바인더를 제공 합니다."
    - id: target
      type: System.Object
      description: "지정된 된 멤버를 호출 하는 개체입니다. 이 매개 변수는 정적 멤버에 대 한 무시 됩니다."
    - id: args
      type: System.Object[]
      description: "숫자, 순서 및 멤버의 매개 변수 형식을 호출할 포함 된 개체의 배열입니다. 매개 변수가 없는 경우 빈 배열입니다."
    - id: modifiers
      type: System.Reflection.ParameterModifier[]
      description: "배열을 <xref href=&quot;System.Reflection.ParameterModifier&quot;> </xref> 개체입니다."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "인스턴스 &lt;xref:System.Globalization.CultureInfo?displayProperty=fullName&gt; 형식의 강제 변환을 제어 하는 데 사용 합니다."
    - id: namedParameters
      type: System.String[]
      description: "매개 변수는 문자열 배열입니다."
    return:
      type: System.Object
      description: "지정 된 멤버입니다."
  overload: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#InvokeMember*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "둘 이상의 인수는 필드 집합 작업에 지정 됩니다."
  - type: System.MissingFieldException
    commentId: T:System.MissingFieldException
    description: "필드 또는 속성을 찾을 수 없습니다."
  - type: System.MissingMethodException
    commentId: T:System.MissingMethodException
    description: "메서드를 찾을 수 없습니다."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "필요 하지 않고 전용 멤버를 호출 <xref href=&quot;System.Security.Permissions.ReflectionPermission&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#UnderlyingSystemType
  id: System#Reflection#IReflect#UnderlyingSystemType
  isEii: true
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: System.Reflection.IReflect.UnderlyingSystemType
  nameWithType: AccessibleObject.System.Reflection.IReflect.UnderlyingSystemType
  fullName: System.Windows.Forms.AccessibleObject.System.Reflection.IReflect.UnderlyingSystemType
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "기본 형식을 나타내는 가져옵니다는 <xref href=&quot;System.Reflection.IReflect&quot;> </xref> 개체입니다. 이 멤버에 대 한 참조 &lt;xref:System.Reflection.IReflect.UnderlyingSystemType%2A?displayProperty=fullName&gt;합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Windows.Forms.AccessibleObject>인스턴스로 캐스팅 되는 <xref:System.Reflection.IReflect>인터페이스.</xref:System.Reflection.IReflect> </xref:System.Windows.Forms.AccessibleObject>"
  syntax:
    content: Type System.Reflection.IReflect.UnderlyingSystemType { get; }
    return:
      type: System.Type
      description: "나타내는 내부 형식을 <xref href=&quot;System.Reflection.IReflect&quot;> </xref> 개체입니다."
  overload: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#UnderlyingSystemType*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.UseStdAccessibleObjects(System.IntPtr)
  id: UseStdAccessibleObjects(System.IntPtr)
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: UseStdAccessibleObjects(IntPtr)
  nameWithType: AccessibleObject.UseStdAccessibleObjects(IntPtr)
  fullName: System.Windows.Forms.AccessibleObject.UseStdAccessibleObjects(IntPtr)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "개체의 인스턴스와 연결 된 <xref href=&quot;System.Windows.Forms.AccessibleObject&quot;> </xref> 개체의 핸들을 기반 합니다."
  remarks: "시스템에서 제공한 개체 유사 하는 사용자 지정 UI 개체를 포함 하는 경우 서버 응용 프로그램에서이 함수를 호출할 수 있습니다. 서버 응용 프로그램 호출 `CreateStdAccessibleObject` 재정의 <xref:Accessibility.IAccessible>메서드 및 속성에 따라 필요에 따라.</xref:Accessibility.IAccessible> 이 방법은 서버 개발자는 작업을 완전 하 게 구현는 <xref:Accessibility.IAccessible>속성 및 메서드.</xref:Accessibility.IAccessible> 이 함수는 `CreateStdAccessibleProxy`점을 제외 하 고, `CreateStdAccessibleProxy` 반면 클래스 이름을 매개 변수로 지정할 수 있습니다 `CreateStdAccessibleObject` 와 관련 된 클래스 이름을 사용 하는 `hwnd`합니다.       이 버전의 `UseStdAccessible` 클라이언트의 objid 포함 된 버전을 두 개의 매개 변수를 호출 하는 것과 같습니다."
  syntax:
    content: protected void UseStdAccessibleObjects (IntPtr handle);
    parameters:
    - id: handle
      type: System.IntPtr
      description: "<xref:System.IntPtr>개체의 핸들을 포함 하는.</xref:System.IntPtr>"
  overload: System.Windows.Forms.AccessibleObject.UseStdAccessibleObjects*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.UseStdAccessibleObjects(System.IntPtr,System.Int32)
  id: UseStdAccessibleObjects(System.IntPtr,System.Int32)
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: UseStdAccessibleObjects(IntPtr,Int32)
  nameWithType: AccessibleObject.UseStdAccessibleObjects(IntPtr,Int32)
  fullName: System.Windows.Forms.AccessibleObject.UseStdAccessibleObjects(IntPtr,Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "개체의 인스턴스는 <xref href=&quot;System.Windows.Forms.AccessibleObject&quot;> </xref> 핸들 및 개체의 개체 id를 기반 합니다."
  remarks: "메서드 및 지정된 된 형식의 시스템 제공 사용자 인터페이스 요소에 대 한 속성으로 액세스 가능한 개체를 만듭니다.       시스템에서 제공한 개체 유사 하는 사용자 지정 UI 개체를 포함 하는 경우 서버 응용 프로그램에서이 함수를 호출할 수 있습니다. 서버 응용 프로그램 호출 `CreateStdAccessibleObject` 재정의 <xref:Accessibility.IAccessible>메서드 및 속성에 따라 필요에 따라.</xref:Accessibility.IAccessible> 이 방법은 서버 개발자는 작업을 완전 하 게 구현는 <xref:Accessibility.IAccessible>속성 및 메서드.</xref:Accessibility.IAccessible>       유효한 `objid` 값입니다.      | 개체 | 값 | 설명 |   |------------|-----------|-----------------|   | 경고 |&0;XFFFFFFF6 | 창 또는 응용 프로그램에 연결 된 메시지를 참조 합니다. |   | 캐럿 |&0;XFFFFFFF8 | 텍스트 삽입 참조 창에 막대 (캐럿). |   | 클라이언트 |&0;XFFFFFFFC | 창의 클라이언트 영역을 가리킵니다. 대부분의 경우에서 운영 체제는 프레임 요소를 제어 하 고 응용 프로그램을 제어 하는 모든 요소를 포함 하는 클라이언트 개체입니다. |   | 커서 |&0;XFFFFFFF7 | 마우스 포인터를 가리킵니다. 시스템에 마우스 포인터를 하나만 있고 창의 자식이 아닙니다. |   | HSCROLL |&0;XFFFFFFFA | 창의 가로 스크롤 막대를 참조 합니다. |   | 메뉴 |&0;XFFFFFFFD | 창의 메뉴 표시줄을 가리킵니다. |   | SIZEGRIP |&0;XFFFFFFF9 | 창 프레임의 오른쪽 아래 모서리에 있는 선택적 프레임 구성 요소는 창 크기 조정 그립을 가리킵니다. |   | 사운드 |&0;XFFFFFFF5 | 소리 개체를 참조합니다. 사운드 개체의 화면 위치 또는 자식이 없는 하지만 이름 및 상태 특성 필요. 소리 재생 응용 프로그램의 자식인. |   | SYSMENU |&0;XFFFFFFFF | 창의 시스템 메뉴를 참조 합니다. |   | TITLEBAR |&0;XFFFFFFFE | 창의 제목 표시줄을 가리킵니다. |   | VSCROLL |&0;XFFFFFFFB | 창의 세로 스크롤 막대를 참조 합니다. |   | 창 |&0;X00000000 | 자식 개체 대신 창 자체를 참조 합니다. |"
  syntax:
    content: protected void UseStdAccessibleObjects (IntPtr handle, int objid);
    parameters:
    - id: handle
      type: System.IntPtr
      description: "<xref:System.IntPtr>개체의 핸들을 포함 하는.</xref:System.IntPtr>"
    - id: objid
      type: System.Int32
      description: "개체의 유형을 정의 하는 Int는 `handle` 매개 변수를 참조 합니다."
  overload: System.Windows.Forms.AccessibleObject.UseStdAccessibleObjects*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.AccessibleObject.Value
  id: Value
  parent: System.Windows.Forms.AccessibleObject
  langs:
  - csharp
  name: Value
  nameWithType: AccessibleObject.Value
  fullName: System.Windows.Forms.AccessibleObject.Value
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "액세스 가능한 개체의 값을 가져오거나 설정 합니다."
  remarks: "일반적으로 값 속성은 개체에 포함 하는 시각적 정보를 나타냅니다. 일부 개체의 Value 속성을 지원합니다.       대부분의 경우에서 속성을 사용 하는 개체의 시각적 정보에 대 한 클라이언트를 지시 하는 값을 포함 합니다. 예를 들어 편집 컨트롤에 대 한 값이 포함 된 텍스트 하지만 메뉴 항목에 값이 없습니다.       Value 속성 계층적 트리 뷰 컨트롤 등의 경우 정보를 제공할 수 있습니다. 트리 뷰 컨트롤의 부모 개체의 Value 속성에 대 한 정보를 제공 하지, 있지만 컨트롤 내에서 각 항목의 계층 구조 내에서 해당 수준을 나타내는&0;부터 시작 값을 갖습니다. 최상위 항목의&0; 값이 두 번째 수준 항목 값이&1;, 하 고, 합니다.      > [!NOTE] > 값에서 반환 된 스크롤 막대 및 trackbar 액세스할 수 있는 개체 백분율을 나타내므로 0에서 100 사이의 정수입니다."
  syntax:
    content: public virtual string Value { get; set; }
    return:
      type: System.String
      description: "액세스 가능한 개체의 값 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 개체에 있는 경우 설정 된 값입니다."
  overload: System.Windows.Forms.AccessibleObject.Value*
  exceptions:
  - type: System.Runtime.InteropServices.COMException
    commentId: T:System.Runtime.InteropServices.COMException
    description: "값을 설정 하거나 검색할 수 없습니다."
  platform:
  - net462
references:
- uid: System.Runtime.InteropServices.StandardOleMarshalObject
  isExternal: false
  name: System.Runtime.InteropServices.StandardOleMarshalObject
- uid: System.Runtime.InteropServices.COMException
  isExternal: true
  name: System.Runtime.InteropServices.COMException
- uid: System.Reflection.AmbiguousMatchException
  isExternal: true
  name: System.Reflection.AmbiguousMatchException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.MissingFieldException
  isExternal: true
  name: System.MissingFieldException
- uid: System.MissingMethodException
  isExternal: true
  name: System.MissingMethodException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.Windows.Forms.AccessibleObject.#ctor
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: AccessibleObject()
  nameWithType: AccessibleObject.AccessibleObject()
  fullName: System.Windows.Forms.AccessibleObject.AccessibleObject()
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accChildCount
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.accChildCount
  nameWithType: AccessibleObject.Accessibility.IAccessible.accChildCount
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.accChildCount
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accDoDefaultAction(System.Object)
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.accDoDefaultAction(Object)
  nameWithType: AccessibleObject.Accessibility.IAccessible.accDoDefaultAction(Object)
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.accDoDefaultAction(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accFocus
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.accFocus
  nameWithType: AccessibleObject.Accessibility.IAccessible.accFocus
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.accFocus
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accHitTest(System.Int32,System.Int32)
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.accHitTest(Int32,Int32)
  nameWithType: AccessibleObject.Accessibility.IAccessible.accHitTest(Int32,Int32)
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.accHitTest(Int32,Int32)
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accLocation(System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Object)
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.accLocation(Int32,Int32,Int32,Int32,Object)
  nameWithType: AccessibleObject.Accessibility.IAccessible.accLocation(Int32,Int32,Int32,Int32,Object)
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.accLocation(Int32,Int32,Int32,Int32,Object)
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accNavigate(System.Int32,System.Object)
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.accNavigate(Int32,Object)
  nameWithType: AccessibleObject.Accessibility.IAccessible.accNavigate(Int32,Object)
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.accNavigate(Int32,Object)
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accParent
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.accParent
  nameWithType: AccessibleObject.Accessibility.IAccessible.accParent
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.accParent
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accSelect(System.Int32,System.Object)
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.accSelect(Int32,Object)
  nameWithType: AccessibleObject.Accessibility.IAccessible.accSelect(Int32,Object)
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.accSelect(Int32,Object)
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accSelection
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.accSelection
  nameWithType: AccessibleObject.Accessibility.IAccessible.accSelection
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.accSelection
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accChild(System.Object)
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.get_accChild(Object)
  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accChild(Object)
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.get_accChild(Object)
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accDefaultAction(System.Object)
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.get_accDefaultAction(Object)
  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accDefaultAction(Object)
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.get_accDefaultAction(Object)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accDescription(System.Object)
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.get_accDescription(Object)
  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accDescription(Object)
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.get_accDescription(Object)
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accHelp(System.Object)
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.get_accHelp(Object)
  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accHelp(Object)
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.get_accHelp(Object)
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accHelpTopic(System.String@,System.Object)
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.get_accHelpTopic(String,Object)
  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accHelpTopic(String,Object)
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.get_accHelpTopic(String,Object)
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accKeyboardShortcut(System.Object)
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.get_accKeyboardShortcut(Object)
  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accKeyboardShortcut(Object)
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.get_accKeyboardShortcut(Object)
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accName(System.Object)
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.get_accName(Object)
  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accName(Object)
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.get_accName(Object)
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accRole(System.Object)
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.get_accRole(Object)
  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accRole(Object)
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.get_accRole(Object)
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accState(System.Object)
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.get_accState(Object)
  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accState(Object)
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.get_accState(Object)
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accValue(System.Object)
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.get_accValue(Object)
  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accValue(Object)
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.get_accValue(Object)
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#set_accName(System.Object,System.String)
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.set_accName(Object,String)
  nameWithType: AccessibleObject.Accessibility.IAccessible.set_accName(Object,String)
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.set_accName(Object,String)
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#set_accValue(System.Object,System.String)
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.set_accValue(Object,String)
  nameWithType: AccessibleObject.Accessibility.IAccessible.set_accValue(Object,String)
  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.set_accValue(Object,String)
- uid: System.Windows.Forms.AccessibleObject.Bounds
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Bounds
  nameWithType: AccessibleObject.Bounds
  fullName: System.Windows.Forms.AccessibleObject.Bounds
- uid: System.Drawing.Rectangle
  parent: System.Drawing
  isExternal: false
  name: Rectangle
  nameWithType: Rectangle
  fullName: System.Drawing.Rectangle
- uid: System.Windows.Forms.AccessibleObject.DefaultAction
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: DefaultAction
  nameWithType: AccessibleObject.DefaultAction
  fullName: System.Windows.Forms.AccessibleObject.DefaultAction
- uid: System.Windows.Forms.AccessibleObject.Description
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Description
  nameWithType: AccessibleObject.Description
  fullName: System.Windows.Forms.AccessibleObject.Description
- uid: System.Windows.Forms.AccessibleObject.DoDefaultAction
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: DoDefaultAction()
  nameWithType: AccessibleObject.DoDefaultAction()
  fullName: System.Windows.Forms.AccessibleObject.DoDefaultAction()
- uid: System.Windows.Forms.AccessibleObject.GetChild(System.Int32)
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: GetChild(Int32)
  nameWithType: AccessibleObject.GetChild(Int32)
  fullName: System.Windows.Forms.AccessibleObject.GetChild(Int32)
- uid: System.Windows.Forms.AccessibleObject
  parent: System.Windows.Forms
  isExternal: false
  name: AccessibleObject
  nameWithType: AccessibleObject
  fullName: System.Windows.Forms.AccessibleObject
- uid: System.Windows.Forms.AccessibleObject.GetChildCount
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: GetChildCount()
  nameWithType: AccessibleObject.GetChildCount()
  fullName: System.Windows.Forms.AccessibleObject.GetChildCount()
- uid: System.Windows.Forms.AccessibleObject.GetFocused
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: GetFocused()
  nameWithType: AccessibleObject.GetFocused()
  fullName: System.Windows.Forms.AccessibleObject.GetFocused()
- uid: System.Windows.Forms.AccessibleObject.GetHelpTopic(System.String@)
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: GetHelpTopic(String)
  nameWithType: AccessibleObject.GetHelpTopic(String)
  fullName: System.Windows.Forms.AccessibleObject.GetHelpTopic(String)
- uid: System.Windows.Forms.AccessibleObject.GetSelected
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: GetSelected()
  nameWithType: AccessibleObject.GetSelected()
  fullName: System.Windows.Forms.AccessibleObject.GetSelected()
- uid: System.Windows.Forms.AccessibleObject.Help
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Help
  nameWithType: AccessibleObject.Help
  fullName: System.Windows.Forms.AccessibleObject.Help
- uid: System.Windows.Forms.AccessibleObject.HitTest(System.Int32,System.Int32)
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: HitTest(Int32,Int32)
  nameWithType: AccessibleObject.HitTest(Int32,Int32)
  fullName: System.Windows.Forms.AccessibleObject.HitTest(Int32,Int32)
- uid: System.Windows.Forms.AccessibleObject.KeyboardShortcut
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: KeyboardShortcut
  nameWithType: AccessibleObject.KeyboardShortcut
  fullName: System.Windows.Forms.AccessibleObject.KeyboardShortcut
- uid: System.Windows.Forms.AccessibleObject.Name
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Name
  nameWithType: AccessibleObject.Name
  fullName: System.Windows.Forms.AccessibleObject.Name
- uid: System.Windows.Forms.AccessibleObject.Navigate(System.Windows.Forms.AccessibleNavigation)
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Navigate(AccessibleNavigation)
  nameWithType: AccessibleObject.Navigate(AccessibleNavigation)
  fullName: System.Windows.Forms.AccessibleObject.Navigate(AccessibleNavigation)
- uid: System.Windows.Forms.AccessibleNavigation
  parent: System.Windows.Forms
  isExternal: false
  name: AccessibleNavigation
  nameWithType: AccessibleNavigation
  fullName: System.Windows.Forms.AccessibleNavigation
- uid: System.Windows.Forms.AccessibleObject.Parent
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Parent
  nameWithType: AccessibleObject.Parent
  fullName: System.Windows.Forms.AccessibleObject.Parent
- uid: System.Windows.Forms.AccessibleObject.Role
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Role
  nameWithType: AccessibleObject.Role
  fullName: System.Windows.Forms.AccessibleObject.Role
- uid: System.Windows.Forms.AccessibleRole
  parent: System.Windows.Forms
  isExternal: false
  name: AccessibleRole
  nameWithType: AccessibleRole
  fullName: System.Windows.Forms.AccessibleRole
- uid: System.Windows.Forms.AccessibleObject.Select(System.Windows.Forms.AccessibleSelection)
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Select(AccessibleSelection)
  nameWithType: AccessibleObject.Select(AccessibleSelection)
  fullName: System.Windows.Forms.AccessibleObject.Select(AccessibleSelection)
- uid: System.Windows.Forms.AccessibleSelection
  parent: System.Windows.Forms
  isExternal: false
  name: AccessibleSelection
  nameWithType: AccessibleSelection
  fullName: System.Windows.Forms.AccessibleSelection
- uid: System.Windows.Forms.AccessibleObject.State
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: State
  nameWithType: AccessibleObject.State
  fullName: System.Windows.Forms.AccessibleObject.State
- uid: System.Windows.Forms.AccessibleStates
  parent: System.Windows.Forms
  isExternal: false
  name: AccessibleStates
  nameWithType: AccessibleStates
  fullName: System.Windows.Forms.AccessibleStates
- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetField(System.String,System.Reflection.BindingFlags)
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: System.Reflection.IReflect.GetField(String,BindingFlags)
  nameWithType: AccessibleObject.System.Reflection.IReflect.GetField(String,BindingFlags)
  fullName: System.Windows.Forms.AccessibleObject.System.Reflection.IReflect.GetField(String,BindingFlags)
- uid: System.Reflection.FieldInfo
  parent: System.Reflection
  isExternal: true
  name: FieldInfo
  nameWithType: FieldInfo
  fullName: System.Reflection.FieldInfo
- uid: System.Reflection.BindingFlags
  parent: System.Reflection
  isExternal: false
  name: BindingFlags
  nameWithType: BindingFlags
  fullName: System.Reflection.BindingFlags
- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetFields(System.Reflection.BindingFlags)
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: System.Reflection.IReflect.GetFields(BindingFlags)
  nameWithType: AccessibleObject.System.Reflection.IReflect.GetFields(BindingFlags)
  fullName: System.Windows.Forms.AccessibleObject.System.Reflection.IReflect.GetFields(BindingFlags)
- uid: System.Reflection.FieldInfo[]
  parent: System.Reflection
  isExternal: true
  name: FieldInfo
  nameWithType: FieldInfo
  fullName: System.Reflection.FieldInfo[]
  spec.csharp:
  - uid: System.Reflection.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: FieldInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMember(System.String,System.Reflection.BindingFlags)
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: System.Reflection.IReflect.GetMember(String,BindingFlags)
  nameWithType: AccessibleObject.System.Reflection.IReflect.GetMember(String,BindingFlags)
  fullName: System.Windows.Forms.AccessibleObject.System.Reflection.IReflect.GetMember(String,BindingFlags)
- uid: System.Reflection.MemberInfo[]
  parent: System.Reflection
  isExternal: true
  name: MemberInfo
  nameWithType: MemberInfo
  fullName: System.Reflection.MemberInfo[]
  spec.csharp:
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    nameWithType: MemberInfo
    fullName: MemberInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMembers(System.Reflection.BindingFlags)
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: System.Reflection.IReflect.GetMembers(BindingFlags)
  nameWithType: AccessibleObject.System.Reflection.IReflect.GetMembers(BindingFlags)
  fullName: System.Windows.Forms.AccessibleObject.System.Reflection.IReflect.GetMembers(BindingFlags)
- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMethod(System.String,System.Reflection.BindingFlags)
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: System.Reflection.IReflect.GetMethod(String,BindingFlags)
  nameWithType: AccessibleObject.System.Reflection.IReflect.GetMethod(String,BindingFlags)
  fullName: System.Windows.Forms.AccessibleObject.System.Reflection.IReflect.GetMethod(String,BindingFlags)
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: true
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: System.Reflection.IReflect.GetMethod(String,BindingFlags,Binder,Type[],ParameterModifier[])
  nameWithType: AccessibleObject.System.Reflection.IReflect.GetMethod(String,BindingFlags,Binder,Type[],ParameterModifier[])
  fullName: System.Windows.Forms.AccessibleObject.System.Reflection.IReflect.GetMethod(String,BindingFlags,Binder,Type[],ParameterModifier[])
- uid: System.Reflection.Binder
  parent: System.Reflection
  isExternal: false
  name: Binder
  nameWithType: Binder
  fullName: System.Reflection.Binder
- uid: System.Type[]
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type[]
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Reflection.ParameterModifier[]
  parent: System.Reflection
  isExternal: false
  name: ParameterModifier
  nameWithType: ParameterModifier
  fullName: System.Reflection.ParameterModifier[]
  spec.csharp:
  - uid: System.Reflection.ParameterModifier
    name: ParameterModifier
    nameWithType: ParameterModifier
    fullName: ParameterModifier[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMethods(System.Reflection.BindingFlags)
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: System.Reflection.IReflect.GetMethods(BindingFlags)
  nameWithType: AccessibleObject.System.Reflection.IReflect.GetMethods(BindingFlags)
  fullName: System.Windows.Forms.AccessibleObject.System.Reflection.IReflect.GetMethods(BindingFlags)
- uid: System.Reflection.MethodInfo[]
  parent: System.Reflection
  isExternal: true
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo[]
  spec.csharp:
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    nameWithType: MethodInfo
    fullName: MethodInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetProperties(System.Reflection.BindingFlags)
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: System.Reflection.IReflect.GetProperties(BindingFlags)
  nameWithType: AccessibleObject.System.Reflection.IReflect.GetProperties(BindingFlags)
  fullName: System.Windows.Forms.AccessibleObject.System.Reflection.IReflect.GetProperties(BindingFlags)
- uid: System.Reflection.PropertyInfo[]
  parent: System.Reflection
  isExternal: true
  name: PropertyInfo
  nameWithType: PropertyInfo
  fullName: System.Reflection.PropertyInfo[]
  spec.csharp:
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    nameWithType: PropertyInfo
    fullName: PropertyInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetProperty(System.String,System.Reflection.BindingFlags)
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: System.Reflection.IReflect.GetProperty(String,BindingFlags)
  nameWithType: AccessibleObject.System.Reflection.IReflect.GetProperty(String,BindingFlags)
  fullName: System.Windows.Forms.AccessibleObject.System.Reflection.IReflect.GetProperty(String,BindingFlags)
- uid: System.Reflection.PropertyInfo
  parent: System.Reflection
  isExternal: true
  name: PropertyInfo
  nameWithType: PropertyInfo
  fullName: System.Reflection.PropertyInfo
- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: System.Reflection.IReflect.GetProperty(String,BindingFlags,Binder,Type,Type[],ParameterModifier[])
  nameWithType: AccessibleObject.System.Reflection.IReflect.GetProperty(String,BindingFlags,Binder,Type,Type[],ParameterModifier[])
  fullName: System.Windows.Forms.AccessibleObject.System.Reflection.IReflect.GetProperty(String,BindingFlags,Binder,Type,Type[],ParameterModifier[])
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: System.Reflection.IReflect.InvokeMember(String,BindingFlags,Binder,Object,Object[],ParameterModifier[],CultureInfo,String[])
  nameWithType: AccessibleObject.System.Reflection.IReflect.InvokeMember(String,BindingFlags,Binder,Object,Object[],ParameterModifier[],CultureInfo,String[])
  fullName: System.Windows.Forms.AccessibleObject.System.Reflection.IReflect.InvokeMember(String,BindingFlags,Binder,Object,Object[],ParameterModifier[],CultureInfo,String[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#UnderlyingSystemType
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: System.Reflection.IReflect.UnderlyingSystemType
  nameWithType: AccessibleObject.System.Reflection.IReflect.UnderlyingSystemType
  fullName: System.Windows.Forms.AccessibleObject.System.Reflection.IReflect.UnderlyingSystemType
- uid: System.Windows.Forms.AccessibleObject.UseStdAccessibleObjects(System.IntPtr)
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: UseStdAccessibleObjects(IntPtr)
  nameWithType: AccessibleObject.UseStdAccessibleObjects(IntPtr)
  fullName: System.Windows.Forms.AccessibleObject.UseStdAccessibleObjects(IntPtr)
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Windows.Forms.AccessibleObject.UseStdAccessibleObjects(System.IntPtr,System.Int32)
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: UseStdAccessibleObjects(IntPtr,Int32)
  nameWithType: AccessibleObject.UseStdAccessibleObjects(IntPtr,Int32)
  fullName: System.Windows.Forms.AccessibleObject.UseStdAccessibleObjects(IntPtr,Int32)
- uid: System.Windows.Forms.AccessibleObject.Value
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Value
  nameWithType: AccessibleObject.Value
  fullName: System.Windows.Forms.AccessibleObject.Value
- uid: System.Windows.Forms.AccessibleObject.#ctor*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: AccessibleObject
  nameWithType: AccessibleObject.AccessibleObject
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accChildCount*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.accChildCount
  nameWithType: AccessibleObject.Accessibility.IAccessible.accChildCount
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accDoDefaultAction*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.accDoDefaultAction
  nameWithType: AccessibleObject.Accessibility.IAccessible.accDoDefaultAction
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accFocus*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.accFocus
  nameWithType: AccessibleObject.Accessibility.IAccessible.accFocus
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accHitTest*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.accHitTest
  nameWithType: AccessibleObject.Accessibility.IAccessible.accHitTest
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accLocation*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.accLocation
  nameWithType: AccessibleObject.Accessibility.IAccessible.accLocation
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accNavigate*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.accNavigate
  nameWithType: AccessibleObject.Accessibility.IAccessible.accNavigate
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accParent*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.accParent
  nameWithType: AccessibleObject.Accessibility.IAccessible.accParent
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accSelect*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.accSelect
  nameWithType: AccessibleObject.Accessibility.IAccessible.accSelect
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accSelection*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.accSelection
  nameWithType: AccessibleObject.Accessibility.IAccessible.accSelection
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accChild*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.get_accChild
  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accChild
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accDefaultAction*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.get_accDefaultAction
  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accDefaultAction
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accDescription*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.get_accDescription
  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accDescription
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accHelp*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.get_accHelp
  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accHelp
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accHelpTopic*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.get_accHelpTopic
  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accHelpTopic
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accKeyboardShortcut*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.get_accKeyboardShortcut
  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accKeyboardShortcut
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accName*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.get_accName
  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accName
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accRole*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.get_accRole
  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accRole
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accState*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.get_accState
  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accState
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accValue*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.get_accValue
  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accValue
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#set_accName*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.set_accName
  nameWithType: AccessibleObject.Accessibility.IAccessible.set_accName
- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#set_accValue*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Accessibility.IAccessible.set_accValue
  nameWithType: AccessibleObject.Accessibility.IAccessible.set_accValue
- uid: System.Windows.Forms.AccessibleObject.Bounds*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Bounds
  nameWithType: AccessibleObject.Bounds
- uid: System.Windows.Forms.AccessibleObject.DefaultAction*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: DefaultAction
  nameWithType: AccessibleObject.DefaultAction
- uid: System.Windows.Forms.AccessibleObject.Description*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Description
  nameWithType: AccessibleObject.Description
- uid: System.Windows.Forms.AccessibleObject.DoDefaultAction*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: DoDefaultAction
  nameWithType: AccessibleObject.DoDefaultAction
- uid: System.Windows.Forms.AccessibleObject.GetChild*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: GetChild
  nameWithType: AccessibleObject.GetChild
- uid: System.Windows.Forms.AccessibleObject.GetChildCount*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: GetChildCount
  nameWithType: AccessibleObject.GetChildCount
- uid: System.Windows.Forms.AccessibleObject.GetFocused*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: GetFocused
  nameWithType: AccessibleObject.GetFocused
- uid: System.Windows.Forms.AccessibleObject.GetHelpTopic*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: GetHelpTopic
  nameWithType: AccessibleObject.GetHelpTopic
- uid: System.Windows.Forms.AccessibleObject.GetSelected*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: GetSelected
  nameWithType: AccessibleObject.GetSelected
- uid: System.Windows.Forms.AccessibleObject.Help*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Help
  nameWithType: AccessibleObject.Help
- uid: System.Windows.Forms.AccessibleObject.HitTest*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: HitTest
  nameWithType: AccessibleObject.HitTest
- uid: System.Windows.Forms.AccessibleObject.KeyboardShortcut*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: KeyboardShortcut
  nameWithType: AccessibleObject.KeyboardShortcut
- uid: System.Windows.Forms.AccessibleObject.Name*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Name
  nameWithType: AccessibleObject.Name
- uid: System.Windows.Forms.AccessibleObject.Navigate*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Navigate
  nameWithType: AccessibleObject.Navigate
- uid: System.Windows.Forms.AccessibleObject.Parent*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Parent
  nameWithType: AccessibleObject.Parent
- uid: System.Windows.Forms.AccessibleObject.Role*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Role
  nameWithType: AccessibleObject.Role
- uid: System.Windows.Forms.AccessibleObject.Select*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Select
  nameWithType: AccessibleObject.Select
- uid: System.Windows.Forms.AccessibleObject.State*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: State
  nameWithType: AccessibleObject.State
- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetField*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: System.Reflection.IReflect.GetField
  nameWithType: AccessibleObject.System.Reflection.IReflect.GetField
- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetFields*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: System.Reflection.IReflect.GetFields
  nameWithType: AccessibleObject.System.Reflection.IReflect.GetFields
- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMember*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: System.Reflection.IReflect.GetMember
  nameWithType: AccessibleObject.System.Reflection.IReflect.GetMember
- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMembers*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: System.Reflection.IReflect.GetMembers
  nameWithType: AccessibleObject.System.Reflection.IReflect.GetMembers
- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMethod*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: System.Reflection.IReflect.GetMethod
  nameWithType: AccessibleObject.System.Reflection.IReflect.GetMethod
- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMethods*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: System.Reflection.IReflect.GetMethods
  nameWithType: AccessibleObject.System.Reflection.IReflect.GetMethods
- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetProperties*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: System.Reflection.IReflect.GetProperties
  nameWithType: AccessibleObject.System.Reflection.IReflect.GetProperties
- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetProperty*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: System.Reflection.IReflect.GetProperty
  nameWithType: AccessibleObject.System.Reflection.IReflect.GetProperty
- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#InvokeMember*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: System.Reflection.IReflect.InvokeMember
  nameWithType: AccessibleObject.System.Reflection.IReflect.InvokeMember
- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#UnderlyingSystemType*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: System.Reflection.IReflect.UnderlyingSystemType
  nameWithType: AccessibleObject.System.Reflection.IReflect.UnderlyingSystemType
- uid: System.Windows.Forms.AccessibleObject.UseStdAccessibleObjects*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: UseStdAccessibleObjects
  nameWithType: AccessibleObject.UseStdAccessibleObjects
- uid: System.Windows.Forms.AccessibleObject.Value*
  parent: System.Windows.Forms.AccessibleObject
  isExternal: false
  name: Value
  nameWithType: AccessibleObject.Value
