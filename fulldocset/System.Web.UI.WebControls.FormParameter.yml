### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.FormParameter
  id: FormParameter
  children:
  - System.Web.UI.WebControls.FormParameter.#ctor
  - System.Web.UI.WebControls.FormParameter.#ctor(System.Web.UI.WebControls.FormParameter)
  - System.Web.UI.WebControls.FormParameter.#ctor(System.String,System.String)
  - System.Web.UI.WebControls.FormParameter.#ctor(System.String,System.Data.DbType,System.String)
  - System.Web.UI.WebControls.FormParameter.#ctor(System.String,System.TypeCode,System.String)
  - System.Web.UI.WebControls.FormParameter.Clone
  - System.Web.UI.WebControls.FormParameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)
  - System.Web.UI.WebControls.FormParameter.FormField
  - System.Web.UI.WebControls.FormParameter.ValidateInput
  langs:
  - csharp
  name: FormParameter
  nameWithType: FormParameter
  fullName: System.Web.UI.WebControls.FormParameter
  type: Class
  summary: "HTTP 요청 값을 바인딩하 <xref:System.Web.HttpRequest.Form*>필드 매개 변수 개체를.</xref:System.Web.HttpRequest.Form*>"
  remarks: "폼 변수 값에 바인딩할 FormParameter 클래스를 사용할 수는 <xref:System.Web.HttpRequest.Form%2A>매개 변수가 있는 쿼리 또는 명령에서 사용 되는 매개 변수 컬렉션입니다.</xref:System.Web.HttpRequest.Form%2A> 데이터 매개 변수를 바인딩하는 컨트롤은 FormParameter를 지정 하 고 해당 양식을 변수가 없으면 전달 되는 경우 예외를 throw 할 수 있습니다. 폼 변수는 해당 값이 없는 함께 전달 되 면 데이터가 없는 표시할 수도 있습니다. 설정의 <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A>적절 한 이러한 상황을 방지 하기 위해.</xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A>       <xref:System.Web.UI.WebControls.FormParameter.FormField%2A> <xref:System.Web.UI.WebControls.Parameter>클래스</xref:System.Web.UI.WebControls.Parameter> 에서 상속 된 권한과 함께 바인딩할 폼 변수의 이름을 식별 하는 속성</xref:System.Web.UI.WebControls.FormParameter.FormField%2A> 을 제공 하는 FormParameter 클래스      > [!IMPORTANT] > The FormParameter 어떤 방식으로든에서 폼 요소에 의해 전달 된 값을 확인 하지 않습니다 않으며 원시 값을 사용 합니다. 대부분의 경우에서 확인할 수와 같은 이벤트를 처리 하 여 데이터 소스 제어에서 사용 하기 전에 FormParameter의 값은 `Selecting`, `Updating`, `Inserting`, 또는 `Deleting` 사용 하는 데이터 소스 컨트롤에서 노출 하는 이벤트입니다. 설정 하 여 데이터 작업을 취소할 수는 매개 변수 값 유효성 검사 테스트를 통과 하지 못하는 경우는 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>속성은 연결 된 <xref:System.ComponentModel.CancelEventArgs>클래스를 `true`.</xref:System.ComponentModel.CancelEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A>"
  example:
  - "The following code example demonstrates how to insert data into a database using the <xref:System.Web.UI.WebControls.SqlDataSource> control and a simple ASP.NET Web page. The current data in the data table is displayed in the <xref:System.Web.UI.WebControls.DropDownList> control. You can add new records by entering values in the <xref:System.Web.UI.WebControls.TextBox> controls and clicking the button. When the button is clicked, the specified values are inserted into the database, and the <xref:System.Web.UI.WebControls.DropDownList> is refreshed.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_143_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_143_1.aspx)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultProperty("FormField")]

      public class FormParameter : System.Web.UI.WebControls.Parameter
  inheritance:
  - System.Object
  - System.Web.UI.WebControls.Parameter
  implements: []
  inheritedMembers:
  - System.Web.UI.WebControls.Parameter.ConvertDbTypeToTypeCode(System.Data.DbType)
  - System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull
  - System.Web.UI.WebControls.Parameter.ConvertTypeCodeToDbType(System.TypeCode)
  - System.Web.UI.WebControls.Parameter.DbType
  - System.Web.UI.WebControls.Parameter.DefaultValue
  - System.Web.UI.WebControls.Parameter.Direction
  - System.Web.UI.WebControls.Parameter.GetDatabaseType
  - System.Web.UI.WebControls.Parameter.IsTrackingViewState
  - System.Web.UI.WebControls.Parameter.LoadViewState(System.Object)
  - System.Web.UI.WebControls.Parameter.Name
  - System.Web.UI.WebControls.Parameter.OnParameterChanged
  - System.Web.UI.WebControls.Parameter.SaveViewState
  - System.Web.UI.WebControls.Parameter.SetDirty
  - System.Web.UI.WebControls.Parameter.Size
  - System.Web.UI.WebControls.Parameter.System#ICloneable#Clone
  - System.Web.UI.WebControls.Parameter.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.WebControls.Parameter.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.WebControls.Parameter.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.WebControls.Parameter.System#Web#UI#IStateManager#TrackViewState
  - System.Web.UI.WebControls.Parameter.ToString
  - System.Web.UI.WebControls.Parameter.TrackViewState
  - System.Web.UI.WebControls.Parameter.Type
  - System.Web.UI.WebControls.Parameter.ViewState
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormParameter.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.FormParameter
  langs:
  - csharp
  name: FormParameter()
  nameWithType: FormParameter.FormParameter()
  fullName: System.Web.UI.WebControls.FormParameter.FormParameter()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "명명 되지 않은 새 인스턴스를 초기화는 <xref href=&quot;System.Web.UI.WebControls.FormParameter&quot;> </xref> 클래스입니다."
  remarks: "A <xref:System.Web.UI.WebControls.FormParameter>FormParameter 생성자를 사용 하 여 만든 개체는 모든 속성에 대 한 기본 값으로 초기화 됩니다.</xref:System.Web.UI.WebControls.FormParameter> <xref:System.Web.UI.WebControls.FormParameter.FormField%2A> <xref:System.String.Empty?displayProperty=fullName>.</xref:System.String.Empty?displayProperty=fullName> 초기화</xref:System.Web.UI.WebControls.FormParameter.FormField%2A> 또한는 <xref:System.Web.UI.WebControls.Parameter.Name%2A>속성은 초기화 <xref:System.String.Empty?displayProperty=fullName>, <xref:System.Web.UI.WebControls.Parameter.Type%2A>속성은 초기화 <xref:System.TypeCode?displayProperty=fullName>, <xref:System.Web.UI.WebControls.Parameter.Direction%2A>속성은 초기화 <xref:System.Data.ParameterDirection>, 및 <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A>속성은 null로 초기화 (`Nothing` Visual basic에서).</xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> </xref:System.Data.ParameterDirection> </xref:System.Web.UI.WebControls.Parameter.Direction%2A> </xref:System.TypeCode?displayProperty=fullName> </xref:System.Web.UI.WebControls.Parameter.Type%2A> </xref:System.String.Empty?displayProperty=fullName> </xref:System.Web.UI.WebControls.Parameter.Name%2A>"
  example:
  - "> [!IMPORTANT]\n>  The <xref:System.Web.UI.WebControls.FormParameter> does not validate the value passed by the form element in any way; it uses the raw value. In most cases, you can validate the value of the <xref:System.Web.UI.WebControls.FormParameter> before it is used by a data source control by handling an event, such as the `Selecting`, `Updating`, `Inserting`, or `Deleting` event exposed by the data source control you are using. If the value of the parameter does not pass your validation tests, you can cancel the data operation by setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the associated <xref:System.ComponentModel.CancelEventArgs> class to `true`.  \n  \n [!code-cs[System.Web.UI.WebControls.FormParameter_1#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_75_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.FormParameter_1#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_75_1.aspx)]"
  syntax:
    content: public FormParameter ();
    parameters: []
  overload: System.Web.UI.WebControls.FormParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormParameter.#ctor(System.Web.UI.WebControls.FormParameter)
  id: '#ctor(System.Web.UI.WebControls.FormParameter)'
  parent: System.Web.UI.WebControls.FormParameter
  langs:
  - csharp
  name: FormParameter(FormParameter)
  nameWithType: FormParameter.FormParameter(FormParameter)
  fullName: System.Web.UI.WebControls.FormParameter.FormParameter(FormParameter)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.UI.WebControls.FormParameter&quot;> </xref> 값을 사용 하 여 지정 된 인스턴스의 클래스는 <code> original </code> 매개 변수입니다."
  remarks: "FormParameter 생성자는 한 `protected` 복제 하는 데 사용 되는 복사 생성자는 <xref:System.Web.UI.WebControls.FormParameter>인스턴스.</xref:System.Web.UI.WebControls.FormParameter> 값은 <xref:System.Web.UI.WebControls.FormParameter>를 포함 하 여 <xref:System.Web.UI.WebControls.FormParameter.FormField%2A>, <xref:System.Web.UI.WebControls.Parameter.Name%2A>, 및 <xref:System.Web.UI.WebControls.Parameter.Type%2A>를 새 인스턴스로 전송 합니다.</xref:System.Web.UI.WebControls.Parameter.Type%2A> </xref:System.Web.UI.WebControls.Parameter.Name%2A> </xref:System.Web.UI.WebControls.FormParameter.FormField%2A> </xref:System.Web.UI.WebControls.FormParameter>"
  syntax:
    content: protected FormParameter (System.Web.UI.WebControls.FormParameter original);
    parameters:
    - id: original
      type: System.Web.UI.WebControls.FormParameter
      description: "A <xref href=&quot;System.Web.UI.WebControls.FormParameter&quot;> </xref> 에서 현재 인스턴스 초기화 된 인스턴스."
  overload: System.Web.UI.WebControls.FormParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormParameter.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Web.UI.WebControls.FormParameter
  langs:
  - csharp
  name: FormParameter(String,String)
  nameWithType: FormParameter.FormParameter(String,String)
  fullName: System.Web.UI.WebControls.FormParameter.FormParameter(String,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "새를 초기화의 명명 된 인스턴스는 <xref href=&quot;System.Web.UI.WebControls.FormParameter&quot;> </xref> 클래스, 바인딩할 폼 변수 필드를 식별 하는 지정 된 문자열을 사용 합니다."
  remarks: "A <xref:System.Web.UI.WebControls.FormParameter>FormParameter 생성자를 사용 하 여 만든 개체 지정 된 매개 변수 이름 및 매개 변수를 바인딩하는 폼 변수를 식별 하는 문자열을 사용 하 여 초기화 됩니다.</xref:System.Web.UI.WebControls.FormParameter> <xref:System.Web.UI.WebControls.Parameter.Type%2A>및 <xref:System.Web.UI.WebControls.Parameter.Direction%2A>속성이 기본 값으로 초기화 됩니다.</xref:System.Web.UI.WebControls.Parameter.Direction%2A> </xref:System.Web.UI.WebControls.Parameter.Type%2A>"
  example:
  - "> [!IMPORTANT]\n>  The <xref:System.Web.UI.WebControls.FormParameter> does not validate the value passed by the form element in any way; it uses the raw value. In most cases, you can validate the value of the <xref:System.Web.UI.WebControls.FormParameter> before it is used by a data source control by handling an event, such as the `Selecting`, `Updating`, `Inserting`, or `Deleting` event exposed by the data source control you are using. If the value of the parameter does not pass your validation tests, you can cancel the data operation by setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the associated <xref:System.ComponentModel.CancelEventArgs> class to `true`.  \n  \n [!code-cs[System.Web.UI.WebControls.FormParameter_2#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_211_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.FormParameter_2#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_211_1.aspx)]"
  syntax:
    content: public FormParameter (string name, string formField);
    parameters:
    - id: name
      type: System.String
      description: "매개 변수의 이름입니다."
    - id: formField
      type: System.String
      description: "매개 변수 개체에 바인딩된 폼 변수의 이름입니다. 기본값은 <xref:System.String>.</xref:System.String>"
  overload: System.Web.UI.WebControls.FormParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormParameter.#ctor(System.String,System.Data.DbType,System.String)
  id: '#ctor(System.String,System.Data.DbType,System.String)'
  parent: System.Web.UI.WebControls.FormParameter
  langs:
  - csharp
  name: FormParameter(String,DbType,String)
  nameWithType: FormParameter.FormParameter(String,DbType,String)
  fullName: System.Web.UI.WebControls.FormParameter.FormParameter(String,DbType,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.UI.WebControls.FormParameter&quot;> </xref> 클래스, 바인딩할 폼 변수 필드를 식별 하는 지정 된 문자열을 사용 합니다."
  syntax:
    content: public FormParameter (string name, System.Data.DbType dbType, string formField);
    parameters:
    - id: name
      type: System.String
      description: "매개 변수의 이름입니다."
    - id: dbType
      type: System.Data.DbType
      description: "매개 변수의 데이터베이스 유형입니다."
    - id: formField
      type: System.String
      description: "매개 변수 개체에 바인딩된 폼 변수의 이름입니다."
  overload: System.Web.UI.WebControls.FormParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormParameter.#ctor(System.String,System.TypeCode,System.String)
  id: '#ctor(System.String,System.TypeCode,System.String)'
  parent: System.Web.UI.WebControls.FormParameter
  langs:
  - csharp
  name: FormParameter(String,TypeCode,String)
  nameWithType: FormParameter.FormParameter(String,TypeCode,String)
  fullName: System.Web.UI.WebControls.FormParameter.FormParameter(String,TypeCode,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "명명 된 인수와 강력한 형식의 새 인스턴스를 초기화는 <xref href=&quot;System.Web.UI.WebControls.FormParameter&quot;> </xref> 클래스, 폼에 바인딩할 변수 필드를 식별 하는 지정 된 문자열을 사용 합니다."
  remarks: "A <xref:System.Web.UI.WebControls.FormParameter>FormParameter 생성자를 사용 하 여 만든 개체가 지정 된 매개 변수 이름으로 초기화 <xref:System.Web.UI.WebControls.Parameter.Type%2A>, 및 폼 변수는 매개 변수가 바인딩된를 식별 하는 문자열입니다.</xref:System.Web.UI.WebControls.Parameter.Type%2A> </xref:System.Web.UI.WebControls.FormParameter> 만 <xref:System.Web.UI.WebControls.Parameter.Direction%2A>및 <xref:System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull%2A>속성이 기본 값으로 초기화 됩니다.</xref:System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull%2A> </xref:System.Web.UI.WebControls.Parameter.Direction%2A>"
  example:
  - "> [!IMPORTANT]\n>  The <xref:System.Web.UI.WebControls.FormParameter> does not validate the value passed by the form element in any way; it uses the raw value. In most cases, you can validate the value of the <xref:System.Web.UI.WebControls.FormParameter> before it is used by a data source control by handling an event, such as the `Selecting`, `Updating`, `Inserting`, or `Deleting` event exposed by the data source control you are using. If the value of the parameter does not pass your validation tests, you can cancel the data operation by setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the associated <xref:System.ComponentModel.CancelEventArgs> class to `true`.  \n  \n [!code-cs[System.Web.UI.WebControls.FormParameter_3#1](~/add/codesnippet/csharp/8907b4db-f03b-4c6d-87a9-_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.FormParameter_3#1](~/add/codesnippet/visualbasic/8907b4db-f03b-4c6d-87a9-_1.aspx)]"
  syntax:
    content: public FormParameter (string name, TypeCode type, string formField);
    parameters:
    - id: name
      type: System.String
      description: "매개 변수의 이름입니다."
    - id: type
      type: System.TypeCode
      description: "매개 변수를 나타내는 형식입니다. 기본값은 <xref:System.TypeCode>.</xref:System.TypeCode>"
    - id: formField
      type: System.String
      description: "매개 변수 개체에 바인딩된 폼 변수의 이름입니다. 기본값은 <xref:System.String>.</xref:System.String>"
  overload: System.Web.UI.WebControls.FormParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormParameter.Clone
  id: Clone
  parent: System.Web.UI.WebControls.FormParameter
  langs:
  - csharp
  name: Clone()
  nameWithType: FormParameter.Clone()
  fullName: System.Web.UI.WebControls.FormParameter.Clone()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "현재 복제본을 반환 <xref href=&quot;System.Web.UI.WebControls.FormParameter&quot;> </xref> 인스턴스."
  remarks: "Clone 메서드 호출의 <xref:System.Web.UI.WebControls.FormParameter.%23ctor%2A>의 새 인스턴스를 초기화 하는 복사 생성자는 <xref:System.Web.UI.WebControls.FormParameter>현재 인스턴스의 값을 가진 클래스.</xref:System.Web.UI.WebControls.FormParameter> </xref:System.Web.UI.WebControls.FormParameter.%23ctor%2A>"
  syntax:
    content: protected override System.Web.UI.WebControls.Parameter Clone ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.Parameter
      description: "A <xref href=&quot;System.Web.UI.WebControls.FormParameter&quot;> </xref> 의 현재 환경의 복제본입니다."
  overload: System.Web.UI.WebControls.FormParameter.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormParameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)
  id: Evaluate(System.Web.HttpContext,System.Web.UI.Control)
  parent: System.Web.UI.WebControls.FormParameter
  langs:
  - csharp
  name: Evaluate(HttpContext,Control)
  nameWithType: FormParameter.Evaluate(HttpContext,Control)
  fullName: System.Web.UI.WebControls.FormParameter.Evaluate(HttpContext,Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "값을 반환 하 고 업데이트는 <xref href=&quot;System.Web.UI.WebControls.FormParameter&quot;> </xref> 개체입니다."
  remarks: "<xref:System.Web.UI.WebControls.FormParameter>Evaluate 메서드를 호출할 때마다 폼 변수에 바인딩하려고 합니다.</xref:System.Web.UI.WebControls.FormParameter>       `context` 매개 변수는 Evaluate 메서드 요청에서 지정된 된 폼 필드의 값을 검색 하려면 사용 합니다. `control` 매개 변수가 무시 됩니다."
  syntax:
    content: protected override object Evaluate (System.Web.HttpContext context, System.Web.UI.Control control);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "현재 <xref href=&quot;System.Web.HttpContext&quot;> </xref> 요청 합니다."
    - id: control
      type: System.Web.UI.Control
      description: "A <xref href=&quot;System.Web.UI.Control&quot;> </xref> 페이지와 연결 된 위치는 <xref href=&quot;System.Web.UI.WebControls.FormParameter&quot;> </xref> 사용 됩니다."
    return:
      type: System.Object
      description: "매개 변수 업데이트 된 현재 값을 나타내는 개체입니다. 컨텍스트 또는 요청 null 이면 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> Visual basic에서), Evaluate 메서드는 null을 반환 합니다."
  overload: System.Web.UI.WebControls.FormParameter.Evaluate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormParameter.FormField
  id: FormField
  parent: System.Web.UI.WebControls.FormParameter
  langs:
  - csharp
  name: FormField
  nameWithType: FormParameter.FormField
  fullName: System.Web.UI.WebControls.FormParameter.FormField
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "매개 변수를 바인딩하는 폼 변수의 이름을 가져오거나 설정 합니다."
  remarks: "FormField 식별에 전달 되는 이름/값 쌍의 <xref:System.Web.HttpRequest.Form%2A>컬렉션.</xref:System.Web.HttpRequest.Form%2A> FormField 속성 쌍의 이름을 식별 하는 동안는 <xref:System.Web.UI.WebControls.FormParameter>런타임에 해당 값에 바인딩합니다.</xref:System.Web.UI.WebControls.FormParameter> 예상 되는 폼 변수 문자열 이름/값 쌍 컬렉션에 ASP.NET 웹 페이지에 전달 되지 않은 경우는 <xref:System.Web.UI.WebControls.FormParameter.Evaluate%2A>메서드의 값에는 매개 변수를 바인딩하여는 <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A>속성에 설정 된 경우.</xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> </xref:System.Web.UI.WebControls.FormParameter.Evaluate%2A> 경우는 <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A>설정 되지 않은 경우는 <xref:System.Web.UI.WebControls.FormParameter.Evaluate%2A>매개 변수 값에 바인딩하여 메서드가 실패 합니다.</xref:System.Web.UI.WebControls.FormParameter.Evaluate%2A> </xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A>"
  example:
  - "The following code example demonstrates how to display filtered data using an <xref:System.Web.UI.WebControls.ObjectDataSource> control and a <xref:System.Web.UI.WebControls.FormParameter> to retrieve data from a middle-tier business object and a <xref:System.Web.UI.WebControls.GridView> control to display the results.  \n  \n The code example consists of a <xref:System.Web.UI.WebControls.TextBox>, a <xref:System.Web.UI.WebControls.GridView> control, the <xref:System.Web.UI.WebControls.ObjectDataSource> control, and a submit button. By default, the <xref:System.Web.UI.WebControls.TextBox> is populated with the name of one of the Northwind Traders employees. The <xref:System.Web.UI.WebControls.GridView> displays information about the employee identified by the name in the <xref:System.Web.UI.WebControls.TextBox>. To retrieve data on another employee, enter the full name of the employee in the <xref:System.Web.UI.WebControls.TextBox> and click the button.  \n  \n The <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> property specifies an expression used to filter the data retrieved by the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>. This property uses parameter placeholders that are evaluated to the parameters contained in the <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> collection. In this example, the parameter placeholder is a <xref:System.Web.UI.WebControls.FormParameter> bound to the value of the <xref:System.Web.UI.WebControls.TextBox> control.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_9#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_952_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_9#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_952_1.aspx)]  \n  \n The following code example shows the middle-tier business object that the previous code example uses. This example consists of two basic classes: The `EmployeeLogic` class encapsulates business logic, and the `NorthwindEmployee` class is a model class that contains only the basic functionality required to load and persist data from the data tier. For simplicity, the `EmployeeLogic` class creates a static set of data, rather than retrieving the data from a data tier. It is also helpful for this example, because the sample relies on the user to provide the full name of a Northwind Traders employee to demonstrate filtering. For a complete working example, you must compile and use these classes with the ASP.NET code examples provided.  \n  \n> [!IMPORTANT]\n>  The <xref:System.Web.UI.WebControls.FormParameter> does not validate the value passed by the form element in any way; it uses the raw value. In most cases, you can validate the value of the <xref:System.Web.UI.WebControls.FormParameter> before it is used by a data source control by handling an event, such as the `Selecting`, `Updating`, `Inserting`, or `Deleting` event exposed by the data source control you are using. If the value of the parameter does not pass your validation tests, you can cancel the data operation by setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the associated <xref:System.ComponentModel.CancelEventArgs> class to `true`.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_9#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_952_2.cs)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_9#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_952_2.vb)]"
  syntax:
    content: public string FormField { get; set; }
    return:
      type: System.String
      description: "매개 변수가 있는 바인딩된 폼 변수를 식별 하는 문자열입니다."
  overload: System.Web.UI.WebControls.FormParameter.FormField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormParameter.ValidateInput
  id: ValidateInput
  parent: System.Web.UI.WebControls.FormParameter
  langs:
  - csharp
  name: ValidateInput
  nameWithType: FormParameter.ValidateInput
  fullName: System.Web.UI.WebControls.FormParameter.ValidateInput
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "입력 매개 변수에서 클라이언트가 유효성을 검사 하는지 여부를 나타내는 값을 가져오거나 설정 합니다."
  syntax:
    content: public bool ValidateInput { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>클라이언트 입력; 유효성을 검사 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.FormParameter.ValidateInput*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.Parameter
  isExternal: false
  name: System.Web.UI.WebControls.Parameter
- uid: System.Web.UI.WebControls.FormParameter.#ctor
  parent: System.Web.UI.WebControls.FormParameter
  isExternal: false
  name: FormParameter()
  nameWithType: FormParameter.FormParameter()
  fullName: System.Web.UI.WebControls.FormParameter.FormParameter()
- uid: System.Web.UI.WebControls.FormParameter.#ctor(System.Web.UI.WebControls.FormParameter)
  parent: System.Web.UI.WebControls.FormParameter
  isExternal: false
  name: FormParameter(FormParameter)
  nameWithType: FormParameter.FormParameter(FormParameter)
  fullName: System.Web.UI.WebControls.FormParameter.FormParameter(FormParameter)
- uid: System.Web.UI.WebControls.FormParameter
  parent: System.Web.UI.WebControls
  isExternal: false
  name: FormParameter
  nameWithType: FormParameter
  fullName: System.Web.UI.WebControls.FormParameter
- uid: System.Web.UI.WebControls.FormParameter.#ctor(System.String,System.String)
  parent: System.Web.UI.WebControls.FormParameter
  isExternal: false
  name: FormParameter(String,String)
  nameWithType: FormParameter.FormParameter(String,String)
  fullName: System.Web.UI.WebControls.FormParameter.FormParameter(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.FormParameter.#ctor(System.String,System.Data.DbType,System.String)
  parent: System.Web.UI.WebControls.FormParameter
  isExternal: false
  name: FormParameter(String,DbType,String)
  nameWithType: FormParameter.FormParameter(String,DbType,String)
  fullName: System.Web.UI.WebControls.FormParameter.FormParameter(String,DbType,String)
- uid: System.Data.DbType
  parent: System.Data
  isExternal: false
  name: DbType
  nameWithType: DbType
  fullName: System.Data.DbType
- uid: System.Web.UI.WebControls.FormParameter.#ctor(System.String,System.TypeCode,System.String)
  parent: System.Web.UI.WebControls.FormParameter
  isExternal: false
  name: FormParameter(String,TypeCode,String)
  nameWithType: FormParameter.FormParameter(String,TypeCode,String)
  fullName: System.Web.UI.WebControls.FormParameter.FormParameter(String,TypeCode,String)
- uid: System.TypeCode
  parent: System
  isExternal: true
  name: TypeCode
  nameWithType: TypeCode
  fullName: System.TypeCode
- uid: System.Web.UI.WebControls.FormParameter.Clone
  parent: System.Web.UI.WebControls.FormParameter
  isExternal: false
  name: Clone()
  nameWithType: FormParameter.Clone()
  fullName: System.Web.UI.WebControls.FormParameter.Clone()
- uid: System.Web.UI.WebControls.FormParameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)
  parent: System.Web.UI.WebControls.FormParameter
  isExternal: false
  name: Evaluate(HttpContext,Control)
  nameWithType: FormParameter.Evaluate(HttpContext,Control)
  fullName: System.Web.UI.WebControls.FormParameter.Evaluate(HttpContext,Control)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.Web.UI.Control
  parent: System.Web.UI
  isExternal: false
  name: Control
  nameWithType: Control
  fullName: System.Web.UI.Control
- uid: System.Web.UI.WebControls.FormParameter.FormField
  parent: System.Web.UI.WebControls.FormParameter
  isExternal: false
  name: FormField
  nameWithType: FormParameter.FormField
  fullName: System.Web.UI.WebControls.FormParameter.FormField
- uid: System.Web.UI.WebControls.FormParameter.ValidateInput
  parent: System.Web.UI.WebControls.FormParameter
  isExternal: false
  name: ValidateInput
  nameWithType: FormParameter.ValidateInput
  fullName: System.Web.UI.WebControls.FormParameter.ValidateInput
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.FormParameter.#ctor*
  parent: System.Web.UI.WebControls.FormParameter
  isExternal: false
  name: FormParameter
  nameWithType: FormParameter.FormParameter
- uid: System.Web.UI.WebControls.FormParameter.Clone*
  parent: System.Web.UI.WebControls.FormParameter
  isExternal: false
  name: Clone
  nameWithType: FormParameter.Clone
- uid: System.Web.UI.WebControls.FormParameter.Evaluate*
  parent: System.Web.UI.WebControls.FormParameter
  isExternal: false
  name: Evaluate
  nameWithType: FormParameter.Evaluate
- uid: System.Web.UI.WebControls.FormParameter.FormField*
  parent: System.Web.UI.WebControls.FormParameter
  isExternal: false
  name: FormField
  nameWithType: FormParameter.FormField
- uid: System.Web.UI.WebControls.FormParameter.ValidateInput*
  parent: System.Web.UI.WebControls.FormParameter
  isExternal: false
  name: ValidateInput
  nameWithType: FormParameter.ValidateInput
