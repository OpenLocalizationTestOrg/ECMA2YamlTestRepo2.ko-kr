### YamlMime:ManagedReference
items:
- uid: System.Transactions.PreparingEnlistment
  id: PreparingEnlistment
  children:
  - System.Transactions.PreparingEnlistment.ForceRollback
  - System.Transactions.PreparingEnlistment.ForceRollback(System.Exception)
  - System.Transactions.PreparingEnlistment.Prepared
  - System.Transactions.PreparingEnlistment.RecoveryInformation
  langs:
  - csharp
  name: PreparingEnlistment
  nameWithType: PreparingEnlistment
  fullName: System.Transactions.PreparingEnlistment
  type: Class
  summary: "트랜잭션의 준비 단계를 참여 한 트랜잭션이 참가자와 트랜잭션 관리자 간 통신을 용이 하 게 합니다."
  remarks: "초기 하는 동안 (준비) 단계 트랜잭션의 트랜잭션 관리자이 이와 같은 리소스 관리자를 호출 하 여 전달 된 <xref:System.Transactions.IEnlistmentNotification.Prepare%2A>트랜잭션에서 리소스의 투표를 얻는 메서드를.</xref:System.Transactions.IEnlistmentNotification.Prepare%2A> 리소스 관리자의 구현 여부에 따라 커밋 또는 롤백를 호출 해야는 <xref:System.Transactions.PreparingEnlistment.Prepared%2A>또는 <xref:System.Transactions.PreparingEnlistment.ForceRollback%2A>이 형식의 메서드가.</xref:System.Transactions.PreparingEnlistment.ForceRollback%2A> </xref:System.Transactions.PreparingEnlistment.Prepared%2A>       리소스 관리자를 호출할 수도 있습니다는 <xref:System.Transactions.Enlistment.Done%2A>메서드 전에 언제 든 지 라 부릅니다는 <xref:System.Transactions.PreparingEnlistment.Prepared%2A>메서드.</xref:System.Transactions.PreparingEnlistment.Prepared%2A> </xref:System.Transactions.Enlistment.Done%2A> 이렇게 하면 해당 인 리스트 먼 트랜잭션에서 커밋 응답 하지만 최종 결과 수신 하지 않아도 의미 읽기 전용 투표를 캐스팅은 했습니다.       영구 리소스 관리자는 정보를 검색할 수에서 다시 참여에 대 한 트랜잭션 관리자가 필요할 수는 <xref:System.Transactions.PreparingEnlistment.RecoveryInformation%2A>속성.</xref:System.Transactions.PreparingEnlistment.RecoveryInformation%2A> 복구에 대 한 자세한 내용은 참조 하십시오. [복구 수행](http://msdn.microsoft.com/en-us/d342c5c7-da64-4a4c-8e63-b52f4fbf2691)합니다."
  example:
  - >-
    [!code-cs[Tx_Enlist#2](~/add/codesnippet/csharp/t-system.transactions.pr_1.cs)]
     [!code-vb[Tx_Enlist#2](~/add/codesnippet/visualbasic/t-system.transactions.pr_1.vb)]
  syntax:
    content: 'public class PreparingEnlistment : System.Transactions.Enlistment'
  inheritance:
  - System.Object
  - System.Transactions.Enlistment
  implements: []
  inheritedMembers:
  - System.Transactions.Enlistment.Done
  platform:
  - net462
- uid: System.Transactions.PreparingEnlistment.ForceRollback
  id: ForceRollback
  parent: System.Transactions.PreparingEnlistment
  langs:
  - csharp
  name: ForceRollback()
  nameWithType: PreparingEnlistment.ForceRollback()
  fullName: System.Transactions.PreparingEnlistment.ForceRollback()
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "트랜잭션을 다시 롤오버 되어야 함을 나타냅니다."
  remarks: "구현에서 <xref:System.Transactions.IEnlistmentNotification.Prepare%2A>의 메서드는 <xref:System.Transactions.IEnlistmentNotification>트랜잭션이 롤백되어야 있는지 나타내기 위해이 메서드를 호출 하는 인터페이스입니다.</xref:System.Transactions.IEnlistmentNotification> </xref:System.Transactions.IEnlistmentNotification.Prepare%2A>"
  example:
  - >-
    [!code-cs[Tx_Enlist#2](~/add/codesnippet/csharp/m-system.transactions.pr_0_1.cs)]
     [!code-vb[Tx_Enlist#2](~/add/codesnippet/visualbasic/m-system.transactions.pr_0_1.vb)]
  syntax:
    content: public void ForceRollback ();
    parameters: []
  overload: System.Transactions.PreparingEnlistment.ForceRollback*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.PreparingEnlistment.ForceRollback(System.Exception)
  id: ForceRollback(System.Exception)
  parent: System.Transactions.PreparingEnlistment
  langs:
  - csharp
  name: ForceRollback(Exception)
  nameWithType: PreparingEnlistment.ForceRollback(Exception)
  fullName: System.Transactions.PreparingEnlistment.ForceRollback(Exception)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "트랜잭션을 다시 롤오버 되어야 함을 나타냅니다."
  syntax:
    content: public void ForceRollback (Exception e);
    parameters:
    - id: e
      type: System.Exception
      description: "롤백이 트리거될 이유에 대해 설명 합니다."
  overload: System.Transactions.PreparingEnlistment.ForceRollback*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.PreparingEnlistment.Prepared
  id: Prepared
  parent: System.Transactions.PreparingEnlistment
  langs:
  - csharp
  name: Prepared()
  nameWithType: PreparingEnlistment.Prepared()
  fullName: System.Transactions.PreparingEnlistment.Prepared()
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "트랜잭션이 커밋될 수 있음을 나타냅니다."
  remarks: "첫 번째 범위에서 (준비)&2; 단계 커밋을 구현 하는 리소스 관리자의 단계는 <xref:System.Transactions.IEnlistmentNotification.Prepare%2A>의 메서드는 <xref:System.Transactions.IEnlistmentNotification>인터페이스를 트랜잭션이 커밋될 수 있음을 나타내기 위해이 메서드를 호출 합니다.</xref:System.Transactions.IEnlistmentNotification> </xref:System.Transactions.IEnlistmentNotification.Prepare%2A>       리소스 관리자를 호출할 수는 <xref:System.Transactions.Enlistment.Done%2A>에서 원하는 방법이 되기 전에 언제 든 지이 메서드를 호출 합니다.</xref:System.Transactions.Enlistment.Done%2A>  이렇게 하면 해당 인 리스트 먼 트랜잭션에서 커밋 응답 하지만 최종 결과 수신 하지 않아도 의미 읽기 전용 투표를 캐스팅은 했습니다.       인리스트먼트에 의해이 메서드가 호출 되 고 있기 반환 하기 전에 해당 다른 스레드 또는이 동일한 스레드에서 만들 수 동일한 인 리스트 먼 트 메서드에 대 한 호출 등 <xref:System.Transactions.IEnlistmentNotification.Rollback%2A>한 롤백을 수행할.</xref:System.Transactions.IEnlistmentNotification.Rollback%2A> 이 메서드가 반환 된 후 리소스 관리자 구현 될 때까지 리소스 잠금을 해제 하지 않는 경우이 값이 교착 상태 상황이 발생할 수 있습니다."
  example:
  - >-
    [!code-cs[Tx_Enlist#2](~/add/codesnippet/csharp/m-system.transactions.pr_1_1.cs)]
     [!code-vb[Tx_Enlist#2](~/add/codesnippet/visualbasic/m-system.transactions.pr_1_1.vb)]
  syntax:
    content: public void Prepared ();
    parameters: []
  overload: System.Transactions.PreparingEnlistment.Prepared*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.PreparingEnlistment.RecoveryInformation
  id: RecoveryInformation
  parent: System.Transactions.PreparingEnlistment
  langs:
  - csharp
  name: RecoveryInformation()
  nameWithType: PreparingEnlistment.RecoveryInformation()
  fullName: System.Transactions.PreparingEnlistment.RecoveryInformation()
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "인 리스트 먼 트의 복구 정보를 가져옵니다."
  syntax:
    content: public byte[] RecoveryInformation ();
    parameters: []
    return:
      type: System.Byte[]
      description: "복구 정보는 인 리스트 먼 트입니다."
  overload: System.Transactions.PreparingEnlistment.RecoveryInformation*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "일시적인 인 리스트 먼 트를 복구 정보를 표시 하지 않는 포함 된 복구 정보를 가져오려는 시도가 합니다."
  platform:
  - net462
references:
- uid: System.Transactions.Enlistment
  isExternal: false
  name: System.Transactions.Enlistment
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Transactions.PreparingEnlistment.ForceRollback
  parent: System.Transactions.PreparingEnlistment
  isExternal: false
  name: ForceRollback()
  nameWithType: PreparingEnlistment.ForceRollback()
  fullName: System.Transactions.PreparingEnlistment.ForceRollback()
- uid: System.Transactions.PreparingEnlistment.ForceRollback(System.Exception)
  parent: System.Transactions.PreparingEnlistment
  isExternal: false
  name: ForceRollback(Exception)
  nameWithType: PreparingEnlistment.ForceRollback(Exception)
  fullName: System.Transactions.PreparingEnlistment.ForceRollback(Exception)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Transactions.PreparingEnlistment.Prepared
  parent: System.Transactions.PreparingEnlistment
  isExternal: false
  name: Prepared()
  nameWithType: PreparingEnlistment.Prepared()
  fullName: System.Transactions.PreparingEnlistment.Prepared()
- uid: System.Transactions.PreparingEnlistment.RecoveryInformation
  parent: System.Transactions.PreparingEnlistment
  isExternal: false
  name: RecoveryInformation()
  nameWithType: PreparingEnlistment.RecoveryInformation()
  fullName: System.Transactions.PreparingEnlistment.RecoveryInformation()
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Transactions.PreparingEnlistment.ForceRollback*
  parent: System.Transactions.PreparingEnlistment
  isExternal: false
  name: ForceRollback
  nameWithType: PreparingEnlistment.ForceRollback
- uid: System.Transactions.PreparingEnlistment.Prepared*
  parent: System.Transactions.PreparingEnlistment
  isExternal: false
  name: Prepared
  nameWithType: PreparingEnlistment.Prepared
- uid: System.Transactions.PreparingEnlistment.RecoveryInformation*
  parent: System.Transactions.PreparingEnlistment
  isExternal: false
  name: RecoveryInformation
  nameWithType: PreparingEnlistment.RecoveryInformation
