### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.MD5
  id: MD5
  children:
  - System.Security.Cryptography.MD5.#ctor
  - System.Security.Cryptography.MD5.Create
  - System.Security.Cryptography.MD5.Create(System.String)
  langs:
  - csharp
  name: MD5
  nameWithType: MD5
  fullName: System.Security.Cryptography.MD5
  type: Class
  summary: "MD5 해시 알고리즘의 모든 구현이 상속 되는 추상 클래스를 나타냅니다."
  remarks: "해시 함수 맵 길이의 이진 문자열은 임의의 고정 길이의 작은 이진 문자열에 있습니다. 암호화 해시 함수에 계산 상 적합; 같은 값으로 해시는 두 가지 입력을 찾을 수 없는 아닌지 속성 즉, 해당 데이터도 일치 하는 경우 두 데이터 집합의 해시 일치 해야 합니다. 약간 변경 된 데이터에 큰, 예측할 수 없는 해시 변화 시킵니다.       MD5 알고리즘 해시 크기는 128 비트입니다.       <xref:System.Security.Cryptography.HashAlgorithm.ComputeHash%2A>MD5 클래스의 메서드는 해시 16 바이트의 배열로 반환 합니다.</xref:System.Security.Cryptography.HashAlgorithm.ComputeHash%2A>  참고 일부 MD5 구현 32 자 16 진수 지정 하거나, 해시를 생성 합니다.  이러한 구현은와 상호 운용, 반환 값의 서식을 <xref:System.Security.Cryptography.HashAlgorithm.ComputeHash%2A>메서드를&16; 진수 값으로.</xref:System.Security.Cryptography.HashAlgorithm.ComputeHash%2A>      > [!NOTE] > 보안 해시 알고리즘 s h A-256 및 s h A-512와 같은 최신 해시 함수를 사용할 수 있습니다. <xref:System.Security.Cryptography.SHA256>클래스 또는 <xref:System.Security.Cryptography.SHA512>MD5 클래스 대신 클래스</xref:System.Security.Cryptography.SHA512> </xref:System.Security.Cryptography.SHA256> 를 사용 하는 것이 좋습니다. 레거시 응용 프로그램 및 데이터와의 호환성에 대 한 m d&5;를 사용 합니다."
  example:
  - "The following code example computes the MD5 hash value of a string and returns the hash as a 32-character, hexadecimal-formatted string.  The hash string created by this code example is compatible with any MD5 hash function (on any platform) that creates a 32-character, hexadecimal-formatted hash string.  \n  \n [!code-vb[Security.Cryptography.MD5#1](~/add/codesnippet/visualbasic/t-system.security.crypto_105_1.vb)]\n [!code-cs[Security.Cryptography.MD5#1](~/add/codesnippet/csharp/t-system.security.crypto_105_1.cs)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class MD5 : System.Security.Cryptography.HashAlgorithm
  inheritance:
  - System.Object
  - System.Security.Cryptography.HashAlgorithm
  implements: []
  inheritedMembers:
  - System.Security.Cryptography.HashAlgorithm.CanReuseTransform
  - System.Security.Cryptography.HashAlgorithm.CanTransformMultipleBlocks
  - System.Security.Cryptography.HashAlgorithm.Clear
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)
  - System.Security.Cryptography.HashAlgorithm.Dispose
  - System.Security.Cryptography.HashAlgorithm.Dispose(System.Boolean)
  - System.Security.Cryptography.HashAlgorithm.Hash
  - System.Security.Cryptography.HashAlgorithm.HashCore(System.Byte[],System.Int32,System.Int32)
  - System.Security.Cryptography.HashAlgorithm.HashFinal
  - System.Security.Cryptography.HashAlgorithm.HashSize
  - System.Security.Cryptography.HashAlgorithm.HashSizeValue
  - System.Security.Cryptography.HashAlgorithm.HashValue
  - System.Security.Cryptography.HashAlgorithm.Initialize
  - System.Security.Cryptography.HashAlgorithm.InputBlockSize
  - System.Security.Cryptography.HashAlgorithm.OutputBlockSize
  - System.Security.Cryptography.HashAlgorithm.State
  - System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  - System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)
  platform:
  - net462
- uid: System.Security.Cryptography.MD5.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.MD5
  langs:
  - csharp
  name: MD5()
  nameWithType: MD5.MD5()
  fullName: System.Security.Cryptography.MD5.MD5()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "새 인스턴스를 초기화 <xref href=&quot;System.Security.Cryptography.MD5&quot;> </xref>합니다."
  remarks: "인스턴스를 만드는 <xref:System.Security.Cryptography.MD5>클래스를 사용 하 여는 <xref:System.Security.Cryptography.MD5.Create%2A>메서드.</xref:System.Security.Cryptography.MD5.Create%2A> </xref:System.Security.Cryptography.MD5>"
  syntax:
    content: protected MD5 ();
    parameters: []
  overload: System.Security.Cryptography.MD5.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.MD5.Create
  id: Create
  parent: System.Security.Cryptography.MD5
  langs:
  - csharp
  name: Create()
  nameWithType: MD5.Create()
  fullName: System.Security.Cryptography.MD5.Create()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "기본 구현 인스턴스를 만듭니다는 <xref href=&quot;System.Security.Cryptography.MD5&quot;> </xref> 해시 알고리즘입니다."
  syntax:
    content: public static System.Security.Cryptography.MD5 Create ();
    parameters: []
    return:
      type: System.Security.Cryptography.MD5
      description: "새 인스턴스는 <xref href=&quot;System.Security.Cryptography.MD5&quot;> </xref> 해시 알고리즘입니다."
  overload: System.Security.Cryptography.MD5.Create*
  exceptions:
  - type: System.Reflection.TargetInvocationException
    commentId: T:System.Reflection.TargetInvocationException
    description: "알고리즘은 처리 표준 FIPS (Federal Information) 모드를 사용 하 고, 사용 했지만 FIPS 호환 되지 않습니다."
  platform:
  - net462
- uid: System.Security.Cryptography.MD5.Create(System.String)
  id: Create(System.String)
  parent: System.Security.Cryptography.MD5
  langs:
  - csharp
  name: Create(String)
  nameWithType: MD5.Create(String)
  fullName: System.Security.Cryptography.MD5.Create(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "지정 된 구현 인스턴스를 만듭니다는 <xref href=&quot;System.Security.Cryptography.MD5&quot;> </xref> 해시 알고리즘입니다."
  remarks: '가능한 값에 대 한 `algName` 됩니다: `System.Security.Cryptography.MD5`, `MD5`, `System.Security.Cryptography.MD5CryptoServiceProvider`, 및 `System.Security.Cryptography.MD5Managed`합니다.'
  syntax:
    content: public static System.Security.Cryptography.MD5 Create (string algName);
    parameters:
    - id: algName
      type: System.String
      description: "특정 구현 이름 <xref href=&quot;System.Security.Cryptography.MD5&quot;> </xref> 사용 하도록 합니다."
    return:
      type: System.Security.Cryptography.MD5
      description: "지정 된 구현의 새 인스턴스 <xref href=&quot;System.Security.Cryptography.MD5&quot;> </xref>합니다."
  overload: System.Security.Cryptography.MD5.Create*
  exceptions:
  - type: System.Reflection.TargetInvocationException
    commentId: T:System.Reflection.TargetInvocationException
    description: "설명 하는 알고리즘은 <code> algName </code> 매개 변수 처리 표준 FIPS (Federal Information) 모드를 사용 하 고, 사용 되었지만 FIPS 호환 되지 않습니다."
  platform:
  - net462
references:
- uid: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: System.Security.Cryptography.HashAlgorithm
- uid: System.Reflection.TargetInvocationException
  isExternal: true
  name: System.Reflection.TargetInvocationException
- uid: System.Security.Cryptography.MD5.#ctor
  parent: System.Security.Cryptography.MD5
  isExternal: false
  name: MD5()
  nameWithType: MD5.MD5()
  fullName: System.Security.Cryptography.MD5.MD5()
- uid: System.Security.Cryptography.MD5.Create
  parent: System.Security.Cryptography.MD5
  isExternal: false
  name: Create()
  nameWithType: MD5.Create()
  fullName: System.Security.Cryptography.MD5.Create()
- uid: System.Security.Cryptography.MD5
  parent: System.Security.Cryptography
  isExternal: false
  name: MD5
  nameWithType: MD5
  fullName: System.Security.Cryptography.MD5
- uid: System.Security.Cryptography.MD5.Create(System.String)
  parent: System.Security.Cryptography.MD5
  isExternal: false
  name: Create(String)
  nameWithType: MD5.Create(String)
  fullName: System.Security.Cryptography.MD5.Create(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.MD5.#ctor*
  parent: System.Security.Cryptography.MD5
  isExternal: false
  name: MD5
  nameWithType: MD5.MD5
- uid: System.Security.Cryptography.MD5.Create*
  parent: System.Security.Cryptography.MD5
  isExternal: false
  name: Create
  nameWithType: MD5.Create
