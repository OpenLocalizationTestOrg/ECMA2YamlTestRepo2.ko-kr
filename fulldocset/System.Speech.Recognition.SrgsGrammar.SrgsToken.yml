### YamlMime:ManagedReference
items:
- uid: System.Speech.Recognition.SrgsGrammar.SrgsToken
  id: SrgsToken
  children:
  - System.Speech.Recognition.SrgsGrammar.SrgsToken.#ctor(System.String)
  - System.Speech.Recognition.SrgsGrammar.SrgsToken.Display
  - System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation
  - System.Speech.Recognition.SrgsGrammar.SrgsToken.Text
  langs:
  - csharp
  name: SrgsToken
  nameWithType: SrgsToken
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsToken
  type: Class
  summary: "단어 또는 인식 될 수 있는 짧은 구를 나타냅니다."
  remarks: "SrgsToken 클래스의 멤버를 사용 하 여 세 가지 형태의 단어를 지정할 수 있습니다:는 <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Display%2A>폼의 <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A>폼을 사용자 지정 <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation%2A>단어.</xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation%2A> </xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A> </xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Display%2A>       여러 단어 단일 SrgsToken 개체에 저장 되 면 내부적으로 및 결과에 다른 토큰으로 처리 됩니다 각각.       이 클래스는 나타냅니다는 `token` World Wide Web Consortium (W3C)에서 정의 된 요소 [음성 인식 문법 사양 (SRGS) 버전 1.0.](http://go.microsoft.com/fwlink/?LinkId=201761)합니다. SRGS에 대 한 내용은 `token` 요소 및 System.Speech에서 지원 되는 해당 하는 방법에 대 한 세부 정보 참조 [요소 토큰](http://msdn.microsoft.com/en-us/3a9e8d64-7bd4-4188-a6f4-dbf28ea71632)합니다."
  syntax:
    content: >-
      [System.Diagnostics.DebuggerDisplay("{DebuggerDisplayString ()}")]

      public class SrgsToken : System.Speech.Recognition.SrgsGrammar.SrgsElement
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.Speech.Recognition.SrgsGrammar.SrgsElement
  implements: []
  inheritedMembers:
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Speech.Recognition.SrgsGrammar.SrgsToken.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Speech.Recognition.SrgsGrammar.SrgsToken
  langs:
  - csharp
  name: SrgsToken(String)
  nameWithType: SrgsToken.SrgsToken(String)
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsToken.SrgsToken(String)
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition.SrgsGrammar
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsToken&quot;> </xref> 클래스 및 텍스트를 인식할 수를 지정 합니다."
  remarks: "만듭니다는 <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken>개체 <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A>속성의 값으로 초기 설정 됩니다는 `text` 매개 변수.</xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A> </xref:System.Speech.Recognition.SrgsGrammar.SrgsToken>"
  syntax:
    content: public SrgsToken (string text);
    parameters:
    - id: text
      type: System.String
      description: "새 텍스트 <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsToken&quot;> </xref> 클래스 인스턴스."
  overload: System.Speech.Recognition.SrgsGrammar.SrgsToken.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>text</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>text</code>가 비어 있습니다."
  platform:
  - net462
- uid: System.Speech.Recognition.SrgsGrammar.SrgsToken.Display
  id: Display
  parent: System.Speech.Recognition.SrgsGrammar.SrgsToken
  langs:
  - csharp
  name: Display
  nameWithType: SrgsToken.Display
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsToken.Display
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition.SrgsGrammar
  summary: "읽을 텍스트의 표시 폼을 가져오거나 설정 합니다."
  remarks: "폼 표시 <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A>단어 또는 구를 <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken>.</xref:System.Speech.Recognition.SrgsGrammar.SrgsToken> 에 대 한 폼</xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A> 보다 다를 수 있습니다 하지만 일반적으로 동일한 값을 나타내는, 예를 들어 폼 표시, 머리글자어 &quot;미국&quot;와 같은 텍스트를 읽을 것인지 하는 동안 하 고 있는 수는 <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation%2A>&quot;미국&quot;가 적용 됩니다.</xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation%2A>"
  syntax:
    content: public string Display { get; set; }
    return:
      type: System.String
      description: "토큰이 것으로 표시를 표시 합니다."
  overload: System.Speech.Recognition.SrgsGrammar.SrgsToken.Display*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "표시 설정 하려고 시도 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "디스플레이에 빈 문자열을 할당 하려고 시도 합니다."
  platform:
  - net462
- uid: System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation
  id: Pronunciation
  parent: System.Speech.Recognition.SrgsGrammar.SrgsToken
  langs:
  - csharp
  name: Pronunciation
  nameWithType: SrgsToken.Pronunciation
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition.SrgsGrammar
  summary: "발음 토큰을 정의 하는 문자열을 가져오거나 설정 합니다."
  remarks: "전화는 문자 또는 음성 발음을 설명 하는 기호입니다. System.Speech 사용자 지정 발음을 지정 하기 위한 세 가지 phonetic 알파벳 지원: 범용 전화 설정 (UPS), Speech API (SAPI) 전화 집합 및 International Phonetic Alphabet (IPA). 발음에 지정 된 휴대폰에에서 지정 <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument.PhoneticAlphabet%2A>.</xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument.PhoneticAlphabet%2A> phonetic 알파벳 같아야 합니다. 참조 [집 및 Phonetic 알파벳](http://msdn.microsoft.com/en-us/435e3c6f-6834-4e5a-b0f6-c17b2275dc51) 자세한 정보에 대 한 합니다.       발음에 지정 된 휴대폰 표시 방법을 내용의 <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A>성공적으로 인식 현저 하 게 해야 합니다.</xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A>  음성 인식 엔진 발음에 지정 된 발음 음성 입력을 사용 하 여 및에 포함 된 문자열을 반환 <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A>인식 결과에서.</xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A>       인식 엔진 전화 공백으로 구분 된 없거나 지정 된 문자열에 인식할 수 없는 전화, 지정 된 발음 <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A>.</xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A> 에 포함 된 단어의 유효한 발음을 인식 하지 못합니다.       발음에 지정 된 발음 문법 또는 인식 엔진와 연결 된 사전을에 지정 된 발음 보다 우선 합니다. 발음 발음 속성에는 단어 또는 구의 <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A>.</xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A> 에 포함 된 개별 항목에만 적용 되는 또한"
  example:
  - "The grammar in the following example contains slang words and also has an uncommon word: \"whatchamacallit\". Adding a custom, inline pronunciation using the Pronunciation property of the <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken> class can improve the accuracy of recognition for the word \"whatchamacallit\" as well as for the entire phrase that contains it. The example uses phones from the Microsoft Universal Phone Set (UPS) to define the custom pronunciations.  \n  \n```  \nusing System;  \nusing System.Speech.Recognition;  \nusing System.Speech.Recognition.SrgsGrammar;  \n  \nnamespace SampleRecognition  \n{  \n  class Program  \n  {  \n    static void Main(string[] args)  \n  \n    // Initialize an instance of the in-process recognizer.  \n    {  \n      using (SpeechRecognitionEngine recognizer =  \n         new SpeechRecognitionEngine(new System.Globalization.CultureInfo(\"en-US\")))  \n      {  \n  \n        // Build the SrgsOneOf objects with alternative choices for the slang phrase.  \n        SrgsOneOf gimme = new SrgsOneOf(  \n          new string[] { \"give me\", \"gimme\", \"hand me\", \"ha'me\" });  \n        SrgsOneOf the = new SrgsOneOf(new string[] { \"the\", \"duh\" });  \n  \n        // Build the one-of element that contains the pronunciation.  \n        SrgsItem thing = new SrgsItem(\"thingamajig\");  \n        SrgsItem whatcha = new SrgsItem();  \n        SrgsToken callit = new SrgsToken(\"whatchamacallit\");  \n        callit.Pronunciation = \"W AE T CH AE M AE K AA L IH T\";  \n        whatcha.Add(callit);  \n        SrgsOneOf what = new SrgsOneOf(new SrgsItem[] {thing, whatcha});  \n  \n        // Create the rule from the SrgsOneOf objects.  \n        SrgsRule slangRule = new SrgsRule(\"slang\", gimme, the, what);  \n  \n        // Build an SrgsDocument object from the rule and set the phonetic alphabet.  \n        SrgsDocument tokenPron = new SrgsDocument(slangRule);  \n        tokenPron.PhoneticAlphabet = SrgsPhoneticAlphabet.Ups;  \n  \n        // Create a Grammar object from the SrgsDocument and load it to the recognizer.  \n        Grammar g_Slang = new Grammar(tokenPron);  \n        g_Slang.Name = (\"Slang Pronunciation\");  \n        recognizer.LoadGrammarAsync(g_Slang);  \n  \n        // Configure recognizer input.  \n        recognizer.SetInputToDefaultAudioDevice();  \n  \n        // Attach a handler for the SpeechRecognized event.  \n        recognizer.SpeechRecognized +=   \n          new EventHandler<SpeechRecognizedEventArgs>(recognizer_SpeechRecognized);  \n  \n        // Start asynchronous recognition.  \n        recognizer.RecognizeAsync();  \n        Console.WriteLine(\"Starting asynchronous recognition...\");  \n  \n        // Keep the console window open.  \n        Console.ReadLine();  \n      }  \n    }  \n  \n    // Handle the SpeechRecognized event.  \n    static void recognizer_SpeechRecognized(object sender, SpeechRecognizedEventArgs e)  \n    {  \n      Console.WriteLine(\"Recognized phrase: \" + e.Result.Text);  \n      Console.WriteLine(\"Confidence: \" + e.Result.Confidence);  \n      Console.WriteLine(\"  Word summary: \");  \n      foreach (RecognizedWordUnit word in e.Result.Words)  \n      {  \n        Console.WriteLine(  \n          \"    Lexical form ({1})\" +  \n          \" Pronunciation ({0})\" +  \n          \" Confidence ({2})\",  \n          word.Pronunciation, word.LexicalForm, word.Confidence);  \n      }  \n    }  \n  }  \n}  \n  \n```"
  syntax:
    content: public string Pronunciation { get; set; }
    return:
      type: System.String
      description: "에 지정 <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument.PhoneticAlphabet*>.</xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument.PhoneticAlphabet*> phonetic 알파벳에서 휴대폰을 포함 하는 문자열을 반환 합니다."
  overload: System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "발음으로 설정 하려고 시도 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "빈 문자열 발음을 할당 하려고 시도 합니다."
  platform:
  - net462
- uid: System.Speech.Recognition.SrgsGrammar.SrgsToken.Text
  id: Text
  parent: System.Speech.Recognition.SrgsGrammar.SrgsToken
  langs:
  - csharp
  name: Text
  nameWithType: SrgsToken.Text
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsToken.Text
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition.SrgsGrammar
  summary: "서 면된 형식의 음성으로 변환 되어야 하는 단어를 가져오거나 설정 합니다."
  remarks: "텍스트 형식의 <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Display%2A>단어 또는 구를 <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken>.</xref:System.Speech.Recognition.SrgsGrammar.SrgsToken> 에 대 한 폼</xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Display%2A> 보다 다를 수 있습니다 하지만 일반적으로 동일한 값을 나타내는, 예를 들어는 <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Display%2A>양식은, 머리글자어 &quot;미국&quot;와 같은 텍스트를 읽을 것인지 하는 동안 및를 수 있습니다는 <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation%2A>&quot;미국&quot;가 적용 됩니다.</xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation%2A> </xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Display%2A>       Text 속성의 기본값은 빈 문자열-&quot;&quot;입니다."
  syntax:
    content: public string Text { get; set; }
    return:
      type: System.String
      description: "내에 포함 된 텍스트는 <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsToken&quot;> </xref> 클래스 인스턴스."
  overload: System.Speech.Recognition.SrgsGrammar.SrgsToken.Text*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "텍스트 설정 하려고 시도 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "텍스트에 빈 문자열을 할당 하려고 시도 합니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "텍스트를 따옴표 (&quot;)를 포함 하는 문자열을 할당 하려고 시도 합니다."
  platform:
  - net462
references:
- uid: System.Speech.Recognition.SrgsGrammar.SrgsElement
  isExternal: false
  name: System.Speech.Recognition.SrgsGrammar.SrgsElement
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Speech.Recognition.SrgsGrammar.SrgsToken.#ctor(System.String)
  parent: System.Speech.Recognition.SrgsGrammar.SrgsToken
  isExternal: false
  name: SrgsToken(String)
  nameWithType: SrgsToken.SrgsToken(String)
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsToken.SrgsToken(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Speech.Recognition.SrgsGrammar.SrgsToken.Display
  parent: System.Speech.Recognition.SrgsGrammar.SrgsToken
  isExternal: false
  name: Display
  nameWithType: SrgsToken.Display
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsToken.Display
- uid: System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation
  parent: System.Speech.Recognition.SrgsGrammar.SrgsToken
  isExternal: false
  name: Pronunciation
  nameWithType: SrgsToken.Pronunciation
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation
- uid: System.Speech.Recognition.SrgsGrammar.SrgsToken.Text
  parent: System.Speech.Recognition.SrgsGrammar.SrgsToken
  isExternal: false
  name: Text
  nameWithType: SrgsToken.Text
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsToken.Text
- uid: System.Speech.Recognition.SrgsGrammar.SrgsToken.#ctor*
  parent: System.Speech.Recognition.SrgsGrammar.SrgsToken
  isExternal: false
  name: SrgsToken
  nameWithType: SrgsToken.SrgsToken
- uid: System.Speech.Recognition.SrgsGrammar.SrgsToken.Display*
  parent: System.Speech.Recognition.SrgsGrammar.SrgsToken
  isExternal: false
  name: Display
  nameWithType: SrgsToken.Display
- uid: System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation*
  parent: System.Speech.Recognition.SrgsGrammar.SrgsToken
  isExternal: false
  name: Pronunciation
  nameWithType: SrgsToken.Pronunciation
- uid: System.Speech.Recognition.SrgsGrammar.SrgsToken.Text*
  parent: System.Speech.Recognition.SrgsGrammar.SrgsToken
  isExternal: false
  name: Text
  nameWithType: SrgsToken.Text
