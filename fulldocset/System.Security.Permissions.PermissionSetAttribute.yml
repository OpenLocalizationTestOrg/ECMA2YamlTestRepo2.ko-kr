### YamlMime:ManagedReference
items:
- uid: System.Security.Permissions.PermissionSetAttribute
  id: PermissionSetAttribute
  children:
  - System.Security.Permissions.PermissionSetAttribute.#ctor(System.Security.Permissions.SecurityAction)
  - System.Security.Permissions.PermissionSetAttribute.CreatePermission
  - System.Security.Permissions.PermissionSetAttribute.CreatePermissionSet
  - System.Security.Permissions.PermissionSetAttribute.File
  - System.Security.Permissions.PermissionSetAttribute.Hex
  - System.Security.Permissions.PermissionSetAttribute.Name
  - System.Security.Permissions.PermissionSetAttribute.UnicodeEncoded
  - System.Security.Permissions.PermissionSetAttribute.XML
  langs:
  - csharp
  name: PermissionSetAttribute
  nameWithType: PermissionSetAttribute
  fullName: System.Security.Permissions.PermissionSetAttribute
  type: Class
  summary: "에 대 한 보안 동작는 <xref href=&quot;System.Security.PermissionSet&quot;> </xref> 선언적 보안을 사용 하 여 코드에 적용 될 수 있습니다. 이 클래스는 상속 될 수 없습니다."
  remarks: "PermissionSetAttribute 속성 <xref:System.Security.Permissions.PermissionSetAttribute.Name%2A>, <xref:System.Security.Permissions.PermissionSetAttribute.File%2A>, 및 <xref:System.Security.Permissions.PermissionSetAttribute.XML%2A>은 상호 배타적 사용 권한 집합을 다음 중 하나에 원본으로 사용할 수 있도록 즉: 사용 권한 집합의 XML 표현을 포함 하는 파일 명명 된 권한 집합 또는 사용 권한의 XML 표현을 포함 하는 문자열 집합.</xref:System.Security.Permissions.PermissionSetAttribute.XML%2A> </xref:System.Security.Permissions.PermissionSetAttribute.File%2A> </xref:System.Security.Permissions.PermissionSetAttribute.Name%2A>       허용 되는 선언의 범위에 따라 달라 집니다는 <xref:System.Security.Permissions.SecurityAction>사용 되는.</xref:System.Security.Permissions.SecurityAction> A <xref:System.Security.Permissions.SecurityAction>에 대해 수행 된 <xref:System.Security.PermissionSet>는 각 집합 내에서 사용 권한에서 해당 작업을 수행 하는 것과 같습니다.</xref:System.Security.PermissionSet> </xref:System.Security.Permissions.SecurityAction>       보안 특성에 의해 선언 된 보안 정보 특성 대상의 메타 데이터에 저장 되 고 실행 시 시스템에서 액세스 됩니다. 보안 특성은 선언적 보안에만 사용 됩니다. 명령적 보안을 위해 해당 권한 클래스를 사용 합니다."
  example:
  - "The following example shows the use of the PermissionSetAttribute Class.  \n  \n [!code-vb[System.Security.Permissions.PermissionSetAttribute#1](~/add/codesnippet/visualbasic/t-system.security.permis_5_1.vb)]\n [!code-cs[System.Security.Permissions.PermissionSetAttribute#1](~/add/codesnippet/csharp/t-system.security.permis_5_1.cs)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Assembly | System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Constructor | System.AttributeTargets.Method, AllowMultiple=true, Inherited=false)]

      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class PermissionSetAttribute : System.Security.Permissions.CodeAccessSecurityAttribute
  inheritance:
  - System.Attribute
  - System.Security.Permissions.SecurityAttribute
  - System.Security.Permissions.CodeAccessSecurityAttribute
  implements: []
  inheritedMembers:
  - System.Security.Permissions.SecurityAttribute.Action
  - System.Security.Permissions.SecurityAttribute.Unrestricted
  platform:
  - net462
- uid: System.Security.Permissions.PermissionSetAttribute.#ctor(System.Security.Permissions.SecurityAction)
  id: '#ctor(System.Security.Permissions.SecurityAction)'
  parent: System.Security.Permissions.PermissionSetAttribute
  langs:
  - csharp
  name: PermissionSetAttribute(SecurityAction)
  nameWithType: PermissionSetAttribute.PermissionSetAttribute(SecurityAction)
  fullName: System.Security.Permissions.PermissionSetAttribute.PermissionSetAttribute(SecurityAction)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Security.Permissions.PermissionSetAttribute&quot;> </xref> 지정 된 보안 동작을 사용 하 여 클래스입니다."
  syntax:
    content: public PermissionSetAttribute (System.Security.Permissions.SecurityAction action);
    parameters:
    - id: action
      type: System.Security.Permissions.SecurityAction
      description: "보안 동작을 지정 하는 열거형 값 중 하나입니다."
  overload: System.Security.Permissions.PermissionSetAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.PermissionSetAttribute.CreatePermission
  id: CreatePermission
  parent: System.Security.Permissions.PermissionSetAttribute
  langs:
  - csharp
  name: CreatePermission()
  nameWithType: PermissionSetAttribute.CreatePermission()
  fullName: System.Security.Permissions.PermissionSetAttribute.CreatePermission()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "이 메서드는 사용 되지 않습니다."
  remarks: "이 메서드는 사용 되지 않습니다. <xref:System.Security.Permissions.SecurityAttribute>.</xref:System.Security.Permissions.SecurityAttribute> 상속을 지원 하기 위해 포함 됩니다."
  syntax:
    content: public override System.Security.IPermission CreatePermission ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "Null 참조 (<xref uid=&quot;langword_csharp_nothing&quot; name=&quot;nothing&quot; href=&quot;&quot;> </xref> Visual basic에서) 모든 경우에에서 합니다."
  overload: System.Security.Permissions.PermissionSetAttribute.CreatePermission*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.PermissionSetAttribute.CreatePermissionSet
  id: CreatePermissionSet
  parent: System.Security.Permissions.PermissionSetAttribute
  langs:
  - csharp
  name: CreatePermissionSet()
  nameWithType: PermissionSetAttribute.CreatePermissionSet()
  fullName: System.Security.Permissions.PermissionSetAttribute.CreatePermissionSet()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "만들고이 권한 집합 특성 개체에 따라 새 사용 권한 집합을 반환 합니다."
  remarks: "이 메서드는 응용 프로그램 코드는 보안 시스템에 의해서만 호출 합니다.       특성은 보안 선언을 메타 데이터의 serialize 된 형식으로 변환 하 여 컴파일 타임에 사용 됩니다. 선언적 보안 메타 데이터의 데이터는이 특성 인스턴스에 해당 하는이 메서드가 반환 하는 사용 권한 개체에서 생성 됩니다."
  syntax:
    content: public System.Security.PermissionSet CreatePermissionSet ();
    parameters: []
    return:
      type: System.Security.PermissionSet
      description: "새 사용 권한 집합입니다."
  overload: System.Security.Permissions.PermissionSetAttribute.CreatePermissionSet*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.PermissionSetAttribute.File
  id: File
  parent: System.Security.Permissions.PermissionSetAttribute
  langs:
  - csharp
  name: File
  nameWithType: PermissionSetAttribute.File
  fullName: System.Security.Permissions.PermissionSetAttribute.File
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "사용자 지정 권한 집합을 선언할 수의 XML 표현을 포함 하는 파일을 가져오거나 설정 합니다."
  remarks: "유니코드 지정 된 파일을 사용 하는 경우 설정 된 <xref:System.Security.Permissions.PermissionSetAttribute.UnicodeEncoded%2A>속성을 `true`.</xref:System.Security.Permissions.PermissionSetAttribute.UnicodeEncoded%2A>"
  example:
  - "The following code shows the use of the File property. This code example is part of a larger example provided for the <xref:System.Security.Permissions.PermissionSetAttribute> class.  \n  \n [!code-vb[System.Security.Permissions.PermissionSetAttribute#2](~/add/codesnippet/visualbasic/p-system.security.permis_27_1.vb)]\n [!code-cs[System.Security.Permissions.PermissionSetAttribute#2](~/add/codesnippet/csharp/p-system.security.permis_27_1.cs)]"
  syntax:
    content: public string File { get; set; }
    return:
      type: System.String
      description: "실제 경로 권한의 XML 표현을 포함 하는 파일을 설정 합니다."
  overload: System.Security.Permissions.PermissionSetAttribute.File*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.PermissionSetAttribute.Hex
  id: Hex
  parent: System.Security.Permissions.PermissionSetAttribute
  langs:
  - csharp
  name: Hex
  nameWithType: PermissionSetAttribute.Hex
  fullName: System.Security.Permissions.PermissionSetAttribute.Hex
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "16 진수 표현의 XML로 인코딩된 사용 권한 집합을 가져오거나 설정 합니다."
  syntax:
    content: public string Hex { get; set; }
    return:
      type: System.String
      description: "XML의&16; 진수 표현 인코딩된 사용 권한 집합입니다."
  overload: System.Security.Permissions.PermissionSetAttribute.Hex*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.PermissionSetAttribute.Name
  id: Name
  parent: System.Security.Permissions.PermissionSetAttribute
  langs:
  - csharp
  name: Name
  nameWithType: PermissionSetAttribute.Name
  fullName: System.Security.Permissions.PermissionSetAttribute.Name
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "사용 권한 집합의 이름을 가져오거나 설정 합니다."
  remarks: "명명 된 집합 컴퓨터 마다 다를 수 있습니다, 때문에 선언적 보안에 대 한 명명 된 권한 집합을 사용 하는 기본 정책의 일부로 포함 된 변경할 수 없는 명명 된 권한 집합으로 제한 합니다. 이렇게 하면는 참조 된 권한 집합에 포함 된 사용 권한에 동일 하 게 코드를 실행 하는 경우. 변경 가능한 또는 인식할 수 없는 명명 된 권한 집합을 사용 하는 경우 컴파일러 오류가 throw 됩니다."
  example:
  - "The following code shows the use of the Name property. This code example is part of a larger example provided for the <xref:System.Security.Permissions.PermissionSetAttribute> class.  \n  \n [!code-vb[System.Security.Permissions.PermissionSetAttribute#3](~/add/codesnippet/visualbasic/p-system.security.permis_28_1.vb)]\n [!code-cs[System.Security.Permissions.PermissionSetAttribute#3](~/add/codesnippet/csharp/p-system.security.permis_28_1.cs)]"
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "이름을 변경할 수 없는 <xref href=&quot;System.Security.NamedPermissionSet&quot;> </xref> (기본 정책에 포함 되어 있으며 변경할 수 없게 된 여러 권한 집합 중 하나)."
  overload: System.Security.Permissions.PermissionSetAttribute.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.PermissionSetAttribute.UnicodeEncoded
  id: UnicodeEncoded
  parent: System.Security.Permissions.PermissionSetAttribute
  langs:
  - csharp
  name: UnicodeEncoded
  nameWithType: PermissionSetAttribute.UnicodeEncoded
  fullName: System.Security.Permissions.PermissionSetAttribute.UnicodeEncoded
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "지정한 파일이 있는지 여부를 나타내는 값을 가져오거나 설정 합니다. <xref:System.Security.Permissions.PermissionSetAttribute.File*>유니코드 또는 ASCII로 인코딩된.</xref:System.Security.Permissions.PermissionSetAttribute.File*>"
  remarks: "이 속성을 설정 하지 파일 ASCII 것으로 간주 됩니다.       경우 <xref:System.Security.Permissions.PermissionSetAttribute.File%2A>은 `null` 이 속성은 사용 되지 않습니다.</xref:System.Security.Permissions.PermissionSetAttribute.File%2A>"
  syntax:
    content: public bool UnicodeEncoded { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>파일이 암호화 됩니다; 유니코드 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Security.Permissions.PermissionSetAttribute.UnicodeEncoded*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.PermissionSetAttribute.XML
  id: XML
  parent: System.Security.Permissions.PermissionSetAttribute
  langs:
  - csharp
  name: XML
  nameWithType: PermissionSetAttribute.XML
  fullName: System.Security.Permissions.PermissionSetAttribute.XML
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "사용 권한 집합의 XML 표현을 가져오거나 설정 합니다."
  syntax:
    content: public string XML { get; set; }
    return:
      type: System.String
      description: "사용 권한 집합의 XML 표현입니다."
  overload: System.Security.Permissions.PermissionSetAttribute.XML*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Permissions.CodeAccessSecurityAttribute
  isExternal: false
  name: System.Security.Permissions.CodeAccessSecurityAttribute
- uid: System.Security.Permissions.PermissionSetAttribute.#ctor(System.Security.Permissions.SecurityAction)
  parent: System.Security.Permissions.PermissionSetAttribute
  isExternal: false
  name: PermissionSetAttribute(SecurityAction)
  nameWithType: PermissionSetAttribute.PermissionSetAttribute(SecurityAction)
  fullName: System.Security.Permissions.PermissionSetAttribute.PermissionSetAttribute(SecurityAction)
- uid: System.Security.Permissions.SecurityAction
  parent: System.Security.Permissions
  isExternal: false
  name: SecurityAction
  nameWithType: SecurityAction
  fullName: System.Security.Permissions.SecurityAction
- uid: System.Security.Permissions.PermissionSetAttribute.CreatePermission
  parent: System.Security.Permissions.PermissionSetAttribute
  isExternal: false
  name: CreatePermission()
  nameWithType: PermissionSetAttribute.CreatePermission()
  fullName: System.Security.Permissions.PermissionSetAttribute.CreatePermission()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Security.Permissions.PermissionSetAttribute.CreatePermissionSet
  parent: System.Security.Permissions.PermissionSetAttribute
  isExternal: false
  name: CreatePermissionSet()
  nameWithType: PermissionSetAttribute.CreatePermissionSet()
  fullName: System.Security.Permissions.PermissionSetAttribute.CreatePermissionSet()
- uid: System.Security.PermissionSet
  parent: System.Security
  isExternal: false
  name: PermissionSet
  nameWithType: PermissionSet
  fullName: System.Security.PermissionSet
- uid: System.Security.Permissions.PermissionSetAttribute.File
  parent: System.Security.Permissions.PermissionSetAttribute
  isExternal: false
  name: File
  nameWithType: PermissionSetAttribute.File
  fullName: System.Security.Permissions.PermissionSetAttribute.File
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Permissions.PermissionSetAttribute.Hex
  parent: System.Security.Permissions.PermissionSetAttribute
  isExternal: false
  name: Hex
  nameWithType: PermissionSetAttribute.Hex
  fullName: System.Security.Permissions.PermissionSetAttribute.Hex
- uid: System.Security.Permissions.PermissionSetAttribute.Name
  parent: System.Security.Permissions.PermissionSetAttribute
  isExternal: false
  name: Name
  nameWithType: PermissionSetAttribute.Name
  fullName: System.Security.Permissions.PermissionSetAttribute.Name
- uid: System.Security.Permissions.PermissionSetAttribute.UnicodeEncoded
  parent: System.Security.Permissions.PermissionSetAttribute
  isExternal: false
  name: UnicodeEncoded
  nameWithType: PermissionSetAttribute.UnicodeEncoded
  fullName: System.Security.Permissions.PermissionSetAttribute.UnicodeEncoded
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Permissions.PermissionSetAttribute.XML
  parent: System.Security.Permissions.PermissionSetAttribute
  isExternal: false
  name: XML
  nameWithType: PermissionSetAttribute.XML
  fullName: System.Security.Permissions.PermissionSetAttribute.XML
- uid: System.Security.Permissions.PermissionSetAttribute.#ctor*
  parent: System.Security.Permissions.PermissionSetAttribute
  isExternal: false
  name: PermissionSetAttribute
  nameWithType: PermissionSetAttribute.PermissionSetAttribute
- uid: System.Security.Permissions.PermissionSetAttribute.CreatePermission*
  parent: System.Security.Permissions.PermissionSetAttribute
  isExternal: false
  name: CreatePermission
  nameWithType: PermissionSetAttribute.CreatePermission
- uid: System.Security.Permissions.PermissionSetAttribute.CreatePermissionSet*
  parent: System.Security.Permissions.PermissionSetAttribute
  isExternal: false
  name: CreatePermissionSet
  nameWithType: PermissionSetAttribute.CreatePermissionSet
- uid: System.Security.Permissions.PermissionSetAttribute.File*
  parent: System.Security.Permissions.PermissionSetAttribute
  isExternal: false
  name: File
  nameWithType: PermissionSetAttribute.File
- uid: System.Security.Permissions.PermissionSetAttribute.Hex*
  parent: System.Security.Permissions.PermissionSetAttribute
  isExternal: false
  name: Hex
  nameWithType: PermissionSetAttribute.Hex
- uid: System.Security.Permissions.PermissionSetAttribute.Name*
  parent: System.Security.Permissions.PermissionSetAttribute
  isExternal: false
  name: Name
  nameWithType: PermissionSetAttribute.Name
- uid: System.Security.Permissions.PermissionSetAttribute.UnicodeEncoded*
  parent: System.Security.Permissions.PermissionSetAttribute
  isExternal: false
  name: UnicodeEncoded
  nameWithType: PermissionSetAttribute.UnicodeEncoded
- uid: System.Security.Permissions.PermissionSetAttribute.XML*
  parent: System.Security.Permissions.PermissionSetAttribute
  isExternal: false
  name: XML
  nameWithType: PermissionSetAttribute.XML
