### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.FileIO.FileSystem
  id: FileSystem
  children:
  - Microsoft.VisualBasic.FileIO.FileSystem.#ctor
  - Microsoft.VisualBasic.FileIO.FileSystem.CombinePath(System.String,System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  - Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,System.Boolean)
  - Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  - Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  - Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,System.Boolean)
  - Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  - Microsoft.VisualBasic.FileIO.FileSystem.CreateDirectory(System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory
  - Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.DeleteDirectoryOption)
  - Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)
  - Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  - Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)
  - Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  - Microsoft.VisualBasic.FileIO.FileSystem.DirectoryExists(System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.Drives
  - Microsoft.VisualBasic.FileIO.FileSystem.FileExists(System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption)
  - Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])
  - Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories(System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])
  - Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.GetDriveInfo(System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.GetFiles(System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.GetFiles(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])
  - Microsoft.VisualBasic.FileIO.FileSystem.GetName(System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.GetParentPath(System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.GetTempFileName
  - Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  - Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,System.Boolean)
  - Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  - Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  - Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,System.Boolean)
  - Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  - Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String,System.Int32[])
  - Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String,System.String[])
  - Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader(System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader(System.String,System.Text.Encoding)
  - Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter(System.String,System.Boolean)
  - Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter(System.String,System.Boolean,System.Text.Encoding)
  - Microsoft.VisualBasic.FileIO.FileSystem.ReadAllBytes(System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText(System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText(System.String,System.Text.Encoding)
  - Microsoft.VisualBasic.FileIO.FileSystem.RenameDirectory(System.String,System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.RenameFile(System.String,System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.WriteAllBytes(System.String,System.Byte[],System.Boolean)
  - Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText(System.String,System.String,System.Boolean)
  - Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText(System.String,System.String,System.Boolean,System.Text.Encoding)
  langs:
  - csharp
  name: FileSystem
  nameWithType: FileSystem
  fullName: Microsoft.VisualBasic.FileIO.FileSystem
  type: Class
  summary: "드라이브, 파일 및 디렉터리를 사용 하기 위한 메서드와 속성을 제공 합니다."
  remarks: "다음 표에서 관련 된 작업의 예를 보여 줍니다.는 `My.Computer.FileSystem` 개체입니다.      |||   |-|-|   | | 참조 |   | 텍스트 파일에서 읽기 | [하는 방법: 텍스트 파일에서 읽은](~/add/includes/ajax-current-ext-md.md)|   | 구분 기호로 분리 된 텍스트 파일에서 읽기 | [하는 방법: 쉼표로 구분 된 텍스트 파일에서 읽은](~/add/includes/ajax-current-ext-md.md)|   | 고정 너비 텍스트 파일에서 읽기 | [하는 방법: 고정 너비 텍스트 파일에서 읽은](~/add/includes/ajax-current-ext-md.md)|   | 여러 형식의 텍스트 파일에서 읽기 | [하는 방법: 여러 형식의 텍스트 파일에서 읽은](~/add/includes/ajax-current-ext-md.md)|   | 이진 파일에서 읽기 | [하는 방법: 이진 파일에서 읽은](~/add/includes/ajax-current-ext-md.md)|   | <xref:System.IO.StreamReader>있는 텍스트 파일에서 읽은 |[ 방법: StreamReader 사용 하 여 파일에서 텍스트 읽기](~/add/includes/ajax-current-ext-md.md)|   | 텍스트 파일에 쓰기 | [하는 방법: 파일에 텍스트 쓰기](~/add/includes/ajax-current-ext-md.md)|   | 텍스트 파일에 추가 | [하는 방법: 텍스트 파일에 추가](~/add/includes/ajax-current-ext-md.md)|   | 이진 파일에 쓸 | [하는 방법: 이진 파일에 쓰기](~/add/includes/ajax-current-ext-md.md)|   | 텍스트 파일에 쓰기는 **내 문서** 디렉터리 |[ 방법: 파일에 텍스트 쓰기의 내 문서 디렉터리](~/add/includes/ajax-current-ext-md.md)|   | 텍스트 파일에 쓰기는 `StreamWriter` | [하는 방법: StreamWriter 사용 하 여 파일에 텍스트 쓰기](~/add/includes/ajax-current-ext-md.md)|   | 특정 패턴의 파일 복사 | [하는 방법: 특정 패턴의 파일을 디렉터리에 복사](~/add/includes/ajax-current-ext-md.md)|   | 파일을 같은 디렉터리로 복사 | [하는 방법: 동일한 디렉터리에 파일의 복사본 만들기](~/add/includes/ajax-current-ext-md.md)|   | 파일을 다른 디렉터리로 복사 | [하는 방법: 다른 디렉터리에 파일의 복사본 만들기](~/add/includes/ajax-current-ext-md.md)|   | 파일 만들기 | [하는 방법: 파일을 만들](~/add/includes/ajax-current-ext-md.md)|   | 파일 삭제 | [하는 방법: 파일 삭제](~/add/includes/ajax-current-ext-md.md)|   | 특정 패턴의 파일 찾기 | [하는 방법: 특정 패턴의 파일 찾기](~/add/includes/ajax-current-ext-md.md)|   | 파일 이동 | [하는 방법: 파일 이동](~/add/includes/ajax-current-ext-md.md)|   | 파일 이름 바꾸기 | [하는 방법: 파일 이름 바꾸기](~/add/includes/ajax-current-ext-md.md)|   | 디렉터리를 다른 디렉터리에 복사 | [하는 방법: 디렉터리를 다른 디렉터리에 복사](~/add/includes/ajax-current-ext-md.md)|   | 디렉터리 만들기 | [하는 방법: 디렉터리 만들기](~/add/includes/ajax-current-ext-md.md)|   | 특정 패턴의 하위 디렉터리 찾기 | [하는 방법: 특정 패턴의 하위 디렉터리 찾기](~/add/includes/ajax-current-ext-md.md)|   | 디렉터리의 파일 컬렉션을 가져옵니다. | [하는 방법: 디렉터리의 파일 컬렉션 가져오기](~/add/includes/ajax-current-ext-md.md)|   | 읽기는 **내 문서** 디렉터리 |[ 방법:의 콘텐츠를 검색에서 내 문서 디렉터리](~/add/includes/ajax-current-ext-md.md)|   | 파일 경로 구문 분석 | [하는 방법: 파일 경로의 구문 분석](~/add/includes/ajax-current-ext-md.md) | </xref:System.IO.StreamReader>"
  example:
  - "This example checks to determine whether the folder `C:\\backup\\logs` exists and checks its properties.  \n  \n [!code-vb[VbVbcnMyFileSystem#23](~/add/codesnippet/visualbasic/t-microsoft.visualbasic._1_1.vb)]"
  syntax:
    content: public class FileSystem
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.#ctor
  id: '#ctor'
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: FileSystem()
  nameWithType: FileSystem.FileSystem()
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.FileSystem()
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "새 인스턴스를 초기화는 <xref href=&quot;Microsoft.VisualBasic.FileIO.FileSystem&quot;> </xref> 클래스입니다."
  remarks: ''
  example:
  - '[Objects (Visual Basic)](~/add/includes/ajax-current-ext-md.md)'
  syntax:
    content: public FileSystem ();
    parameters: []
  overload: Microsoft.VisualBasic.FileIO.FileSystem.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CombinePath(System.String,System.String)
  id: CombinePath(System.String,System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: CombinePath(String,String)
  nameWithType: FileSystem.CombinePath(String,String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CombinePath(String,String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "두 개의 패스를 결합 하 고 올바른 형식의 경로 반환 합니다."
  remarks: "이 메서드는 올바른 형식의 경로를 만들 과도 한 슬래시 문자를 삭제 합니다.       다음 표에서 관련 된 작업의 예는 `My.Computer.FileSystem.CombinePath` 메서드.      |||   |-|-|   | | 참조 |   | 디렉터리 경로 파일 이름을 결합 | [하는 방법: Visual Basic에서 파일 경로의 구문 분석](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example combines a directory path and file name to create a properly formatted path.  \n  \n [!code-vb[VbRefFile#3](~/add/codesnippet/visualbasic/7e0ca449-b1a8-4acd-a607-_1.vb)]  \n  \n This example combines two paths to create a properly formatted path.  \n  \n [!code-vb[VbRefFile#4](~/add/codesnippet/visualbasic/7e0ca449-b1a8-4acd-a607-_2.vb)]  \n  \n This example returns `C:\\Dir1\\Dir2\\Dir4\\Dir5\\File.txt`."
  syntax:
    content: public static string CombinePath (string baseDirectory, string relativePath);
    parameters:
    - id: baseDirectory
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. 결합할 첫 번째 경로입니다."
    - id: relativePath
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. 결합할 두 번째 경로입니다."
    return:
      type: System.String
      description: "지정된 된 경로의 조합입니다."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.CombinePath*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>baseDirectory</code>또는 <code>relativePath</code> 잘못 된 경로가 있습니다."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String)
  id: CopyDirectory(System.String,System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: CopyDirectory(String,String)
  nameWithType: FileSystem.CopyDirectory(String,String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(String,String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "디렉터리의 내용을 다른 디렉터리로 복사합니다."
  remarks: "이 메서드는 원본 디렉터리의 내용을 대상 디렉터리에 복사합니다. 대상 디렉터리가 생성 됩니다. 대상 위치에 같은 이름의 디렉터리가 있으면 두 디렉터리의 내용은 병합 됩니다. 작업을 하는 동안 디렉터리에 대 한 새 이름을 지정할 수 있습니다.       디렉터리 내의 파일을 복사할 때 예외가 throw 될 수 있습니다의 일반적인 원인은 특정 파일로 합니다. 이러한 예외가 throw 되 이들 통합 되며 하나의 예외로 인 `Data` 속성의 형태로 항목에 저장 된 <xref:System.Collections.IDictionary>파일 또는 디렉터리 경로 키 및 해당 값에 특정 예외 메시지가 포함 된.</xref:System.Collections.IDictionary> 사용 하 여 `For…Each` 하 여 항목을 열거 합니다.       다음 표에서 관련 된 작업의 예는 `My.Computer.FileSystem.CopyDirectory` 메서드.      |||   |-|-|   | | 참조 |   | 디렉터리 복사 | [하는 방법: Visual Basic에서 다른 디렉터리에 디렉터리를 복사 합니다.](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "The following example copies the contents of directory `TestDirectory1` into `TestDirectory2`, overwriting existing files.  \n  \n [!code-vb[VbVbcnMyFileSystem#49](~/add/codesnippet/visualbasic/02942d01-133a-478f-ae50-_1.vb)]  \n  \n Replace `C:\\TestDirectory1` and `C:\\TestDirectory2` with the path and name of the directory you wish to copy and the location to which you wish to copy it."
  syntax:
    content: public static void CopyDirectory (string sourceDirectoryName, string destinationDirectoryName);
    parameters:
    - id: sourceDirectoryName
      type: System.String
      description: "복사 될 디렉터리입니다."
    - id: destinationDirectoryName
      type: System.String
      description: "디렉터리 내용을 복사 될 위치입니다."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '다음 이유 중 하나로 경로가 올바르지 않습니다: 길이가&0; 인 문자열 이거나; 공백 문자만; 포함 잘못 된 문자가 있습니다. 장치 경로 또는 (붙습니다 \\ \\.\\).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationDirectoryName</code>또는 <code>sourceDirectoryName</code> 은 <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> 또는 빈 문자열입니다."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "원본 디렉터리가 존재 하지 않습니다."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "원본 경로 대상 경로가 동일합니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "이 작업은 순환."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "경로가는 시스템 정의 최대 길이 초과합니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "경로에 폴더 이름을 콜론 (:)이 포함 된 없거나 형식이 잘못 되었습니다."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "사용자에 경로 보는 데 필요한 권한이 부족 합니다."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "대상 파일이 있지만 액세스할 수 없습니다."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  id: CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: CopyDirectory(String,String,UIOption)
  nameWithType: FileSystem.CopyDirectory(String,String,UIOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(String,String,UIOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "디렉터리의 내용을 다른 디렉터리로 복사합니다."
  remarks: "이 메서드는 원본 디렉터리의 내용을 대상 디렉터리에 복사합니다. 대상 디렉터리가 생성 됩니다. 대상 위치에 같은 이름의 디렉터리가 있으면 두 디렉터리의 내용은 병합 됩니다. 작업을 하는 동안 디렉터리에 대 한 새 이름을 지정할 수 있습니다.       디렉터리 내의 파일을 복사할 때 예외가 throw 될 수 있습니다의 일반적인 원인은 특정 파일로 합니다. 이러한 예외가 throw 되 이들 통합 되며 하나의 예외로 인 `Data` 속성의 형태로 항목에 저장 된 <xref:System.Collections.IDictionary>파일 또는 디렉터리 경로 키 및 해당 값에 특정 예외 메시지가 포함 된.</xref:System.Collections.IDictionary> 사용 하 여 `For…Each` 하 여 항목을 열거 합니다.       다음 표에서 관련 된 작업의 예는 `My.Computer.FileSystem.CopyDirectory` 메서드.      |||   |-|-|   | | 참조 |   | 디렉터리 복사 | [하는 방법: Visual Basic에서 다른 디렉터리에 디렉터리를 복사 합니다.](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "The following example copies the contents of directory `TestDirectory1` into `TestDirectory2`, overwriting existing files.  \n  \n [!code-vb[VbVbcnMyFileSystem#49](~/add/codesnippet/visualbasic/8f7d2df3-4266-47ac-8381-_1.vb)]  \n  \n Replace `C:\\TestDirectory1` and `C:\\TestDirectory2` with the path and name of the directory you wish to copy and the location to which you wish to copy it."
  syntax:
    content: public static void CopyDirectory (string sourceDirectoryName, string destinationDirectoryName, Microsoft.VisualBasic.FileIO.UIOption showUI);
    parameters:
    - id: sourceDirectoryName
      type: System.String
      description: "복사 될 디렉터리입니다."
    - id: destinationDirectoryName
      type: System.String
      description: "디렉터리 내용을 복사 될 위치입니다."
    - id: showUI
      type: Microsoft.VisualBasic.FileIO.UIOption
      description: "작업의 진행률을 시각적으로 추적 여부를 나타냅니다. 기본값은 <xref uid=&quot;langword_csharp_UIOption.OnlyErrorDialogs&quot; name=&quot;UIOption.OnlyErrorDialogs&quot; href=&quot;&quot;> </xref>합니다."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '다음 이유 중 하나로 경로가 올바르지 않습니다: 길이가&0; 인 문자열 이거나; 공백 문자만; 포함 잘못 된 문자가 있습니다. 장치 경로 또는 (붙습니다 \\ \\.\\).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationDirectoryName</code>또는 <code>sourceDirectoryName</code> 은 <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> 또는 빈 문자열입니다."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "원본 디렉터리가 존재 하지 않습니다."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "원본 경로 대상 경로가 동일합니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "이 작업은 순환."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "경로가는 시스템 정의 최대 길이 초과합니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "경로에 폴더 이름을 콜론 (:)이 포함 된 없거나 형식이 잘못 되었습니다."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "사용자에 경로 보는 데 필요한 권한이 부족 합니다."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "대상 파일이 있지만 액세스할 수 없습니다."
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: "<code>ShowUI</code>로 설정 되어 <xref uid=&quot;langword_csharp_UIOption.AllDialogs&quot; name=&quot;UIOption.AllDialogs&quot; href=&quot;&quot;> </xref> 는 작업을 취소 하 고 또는 디렉터리에 있는 하나 이상의 파일을 복사할 수 없습니다."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,System.Boolean)
  id: CopyDirectory(System.String,System.String,System.Boolean)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: CopyDirectory(String,String,Boolean)
  nameWithType: FileSystem.CopyDirectory(String,String,Boolean)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(String,String,Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "디렉터리의 내용을 다른 디렉터리로 복사합니다."
  remarks: "이 메서드는 원본 디렉터리의 내용을 대상 디렉터리에 복사합니다. 대상 디렉터리가 생성 됩니다. 대상 위치에 같은 이름의 디렉터리가 있으면 두 디렉터리의 내용은 병합 됩니다. 작업을 하는 동안 디렉터리에 대 한 새 이름을 지정할 수 있습니다.       디렉터리 내의 파일을 복사할 때 예외가 throw 될 수 있습니다 발생 하는 동안 병합 하는 동안 기존 파일 등의 특정 파일로 `overwrite` 로 설정 된 `False`합니다. 이러한 예외가 throw 되 이들 통합 되며 하나의 예외로 인 `Data` 속성의 형태로 항목에 저장 된 <xref:System.Collections.IDictionary>파일 또는 디렉터리 경로 키 및 해당 값에 특정 예외 메시지가 포함 된.</xref:System.Collections.IDictionary> 사용 하 여 `For…Each` 하 여 항목을 열거 합니다.       다음 표에서 관련 된 작업의 예는 `My.Computer.FileSystem.CopyDirectory` 메서드.      |||   |-|-|   | | 참조 |   | 디렉터리 복사 | [하는 방법: Visual Basic에서 다른 디렉터리에 디렉터리를 복사 합니다.](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "The following example copies the contents of directory `TestDirectory1` into `TestDirectory2`, overwriting existing files.  \n  \n [!code-vb[VbVbcnMyFileSystem#49](~/add/codesnippet/visualbasic/fdc93a8a-3025-4efd-8987-_1.vb)]  \n  \n Replace `C:\\TestDirectory1` and `C:\\TestDirectory2` with the path and name of the directory you wish to copy and the location to which you wish to copy it."
  syntax:
    content: public static void CopyDirectory (string sourceDirectoryName, string destinationDirectoryName, bool overwrite);
    parameters:
    - id: sourceDirectoryName
      type: System.String
      description: "복사 될 디렉터리입니다."
    - id: destinationDirectoryName
      type: System.String
      description: "디렉터리 내용을 복사 될 위치입니다."
    - id: overwrite
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>기존 파일을 덮어쓰려면 그렇지 않으면 <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>합니다."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '다음 이유 중 하나로 경로가 올바르지 않습니다: 길이가&0; 인 문자열 이거나; 공백 문자만; 포함 잘못 된 문자가 있습니다. 장치 경로 또는 (붙습니다 \\ \\.\\).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationDirectoryName</code>또는 <code>sourceDirectoryName</code> 은 <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> 또는 빈 문자열입니다."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "원본 디렉터리가 존재 하지 않습니다."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "원본 경로 대상 경로가 동일합니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "이 작업은 순환."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "경로가는 시스템 정의 최대 길이 초과합니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "경로에 폴더 이름을 콜론 (:)이 포함 된 없거나 형식이 잘못 되었습니다."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "사용자에 경로 보는 데 필요한 권한이 부족 합니다."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "대상 파일이 있지만 액세스할 수 없습니다."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  id: CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: CopyDirectory(String,String,UIOption,UICancelOption)
  nameWithType: FileSystem.CopyDirectory(String,String,UIOption,UICancelOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(String,String,UIOption,UICancelOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "디렉터리의 내용을 다른 디렉터리로 복사합니다."
  remarks: "이 메서드는 원본 디렉터리의 내용을 대상 디렉터리에 복사합니다. 대상 디렉터리가 생성 됩니다. 대상 위치에 같은 이름의 디렉터리가 있으면 두 디렉터리의 내용은 병합 됩니다. 작업을 하는 동안 디렉터리에 대 한 새 이름을 지정할 수 있습니다.       디렉터리 내의 파일을 복사할 때 예외가 throw 될 수 있습니다의 일반적인 원인은 특정 파일로 합니다. 이러한 예외가 throw 되 이들 통합 되며 하나의 예외로 인 `Data` 속성의 형태로 항목에 저장 된 <xref:System.Collections.IDictionary>파일 또는 디렉터리 경로 키 및 해당 값에 특정 예외 메시지가 포함 된.</xref:System.Collections.IDictionary> 사용 하 여 `For…Each` 하 여 항목을 열거 합니다.       다음 표에서 관련 된 작업의 예는 `My.Computer.FileSystem.CopyDirectory` 메서드.      |||   |-|-|   | | 참조 |   | 디렉터리 복사 | [하는 방법: Visual Basic에서 다른 디렉터리에 디렉터리를 복사 합니다.](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "The following example copies the contents of directory `TestDirectory1` into `TestDirectory2`, overwriting existing files.  \n  \n [!code-vb[VbVbcnMyFileSystem#49](~/add/codesnippet/visualbasic/c0cf1625-22a4-46e5-a6cf-_1.vb)]  \n  \n Replace `C:\\TestDirectory1` and `C:\\TestDirectory2` with the path and name of the directory you wish to copy and the location to which you wish to copy it."
  syntax:
    content: public static void CopyDirectory (string sourceDirectoryName, string destinationDirectoryName, Microsoft.VisualBasic.FileIO.UIOption showUI, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);
    parameters:
    - id: sourceDirectoryName
      type: System.String
      description: "복사 될 디렉터리입니다."
    - id: destinationDirectoryName
      type: System.String
      description: "디렉터리 내용을 복사 될 위치입니다."
    - id: showUI
      type: Microsoft.VisualBasic.FileIO.UIOption
      description: "작업의 진행률을 시각적으로 추적 여부를 나타냅니다. 기본값은 <xref uid=&quot;langword_csharp_UIOption.OnlyErrorDialogs&quot; name=&quot;UIOption.OnlyErrorDialogs&quot; href=&quot;&quot;> </xref>합니다."
    - id: onUserCancel
      type: Microsoft.VisualBasic.FileIO.UICancelOption
      description: "지정를 클릭할 경우 **취소** 작업을 수행 합니다. 기본값은 <xref href=&quot;Microsoft.VisualBasic.FileIO.UICancelOption&quot;> </xref>합니다."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '다음 이유 중 하나로 경로가 올바르지 않습니다: 길이가&0; 인 문자열 이거나; 공백 문자만; 포함 잘못 된 문자가 있습니다. 장치 경로 또는 (붙습니다 \\ \\.\\).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationDirectoryName</code>또는 <code>sourceDirectoryName</code> 은 <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> 또는 빈 문자열입니다."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "원본 디렉터리가 존재 하지 않습니다."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "원본 경로 대상 경로가 동일합니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "이 작업은 순환."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "경로가는 시스템 정의 최대 길이 초과합니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "경로에 폴더 이름을 콜론 (:)이 포함 된 없거나 형식이 잘못 되었습니다."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "사용자에 경로 보는 데 필요한 권한이 부족 합니다."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "대상 파일이 있지만 액세스할 수 없습니다."
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: "<code>ShowUI</code>로 설정 되어 <xref uid=&quot;langword_csharp_UIOption.AllDialogs&quot; name=&quot;UIOption.AllDialogs&quot; href=&quot;&quot;> </xref> 는 작업을 취소 하 고 또는 디렉터리에 있는 하나 이상의 파일을 복사할 수 없습니다."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String)
  id: CopyFile(System.String,System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: CopyFile(String,String)
  nameWithType: FileSystem.CopyFile(String,String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(String,String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "새 위치로 파일을 복사합니다."
  remarks: "`CopyFile`Ace (액세스 제어 항목)를 유지 하지 않습니다. 새로 만든된 파일 생성는 디렉터리에서 기본 Ace를 상속 합니다.       다음 표에서 관련 된 작업의 예를 보여 줍니다.는 `My.Computer.FileSystem.CopyFile` 메서드.      |||   |-|-|   | | 참조 |   | 동일한 디렉터리에 파일을 복사 합니다. | [하는 방법: Visual Basic에서는 동일한 디렉터리에 파일의 복사본 만들기](~/add/includes/ajax-current-ext-md.md)|   | 다른 디렉터리에 파일을 복사 합니다. | [하는 방법: Visual Basic에서 다른 디렉터리에 파일의 복사본 만들기](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example copies the file `Test.txt` to the directory `TestFiles2` without overwriting existing files.  \n  \n [!code-vb[VbRefFile#15](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._216_1.vb)]  \n  \n Replace the file paths with the paths you want to use in your code.  \n  \n This example copies the file `Test.txt` to the directory `TestFiles2` and renames it `NewFile.txt`.  \n  \n [!code-vb[VbRefFile#16](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._216_2.vb)]  \n  \n Replace the file paths with the paths you want to use in your code."
  syntax:
    content: public static void CopyFile (string sourceFileName, string destinationFileName);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "복사할 파일입니다."
    - id: destinationFileName
      type: System.String
      description: "파일을 복사할 위치입니다."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.CopyFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>destinationFileName </code>경로 정보를 포함합니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationFileName</code>또는 <code>sourceFileName</code> 은 <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> 또는 빈 문자열입니다."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "원본 파일이 잘못 되었거나 존재 하지 않습니다."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "동일한 이름의 대상 디렉터리의 파일에에서 사용 중인 경우"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "경로에 파일 또는 디렉터리 이름 콜론 (:)이 포함 된 없거나 형식이 잘못 되었습니다."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "경로가는 시스템 정의 최대 길이 초과합니다."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "사용자에 필요한 권한이 없습니다."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "사용자에 경로 보는 데 필요한 권한이 부족 합니다."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  id: CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: CopyFile(String,String,UIOption)
  nameWithType: FileSystem.CopyFile(String,String,UIOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(String,String,UIOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "새 위치로 파일을 복사합니다."
  remarks: "`CopyFile`Ace (액세스 제어 항목)를 유지 하지 않습니다. 새로 만든된 파일 생성는 디렉터리에서 기본 Ace를 상속 합니다.       다음 표에서 관련 된 작업의 예를 보여 줍니다.는 `My.Computer.FileSystem.CopyFile` 메서드.      |||   |-|-|   | | 참조 |   | 동일한 디렉터리에 파일을 복사 합니다. | [하는 방법: Visual Basic에서는 동일한 디렉터리에 파일의 복사본 만들기](~/add/includes/ajax-current-ext-md.md)|   | 다른 디렉터리에 파일을 복사 합니다. | [하는 방법: Visual Basic에서 다른 디렉터리에 파일의 복사본 만들기](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example copies the file `Test.txt` to the directory `TestFiles2` without overwriting existing files.  \n  \n [!code-vb[VbRefFile#15](~/add/codesnippet/visualbasic/10e9e45a-2651-4a04-992d-_1.vb)]  \n  \n Replace the file paths with the paths you want to use in your code.  \n  \n This example copies the file `Test.txt` to the directory `TestFiles2` and renames it `NewFile.txt`.  \n  \n [!code-vb[VbRefFile#16](~/add/codesnippet/visualbasic/10e9e45a-2651-4a04-992d-_2.vb)]  \n  \n Replace the file paths with the paths you want to use in your code."
  syntax:
    content: public static void CopyFile (string sourceFileName, string destinationFileName, Microsoft.VisualBasic.FileIO.UIOption showUI);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "복사할 파일입니다."
    - id: destinationFileName
      type: System.String
      description: "파일을 복사할 위치입니다."
    - id: showUI
      type: Microsoft.VisualBasic.FileIO.UIOption
      description: "작업의 진행률을 시각적으로 추적 여부를 나타냅니다. 기본값은 <xref uid=&quot;langword_csharp_UIOption.OnlyErrorDialogs&quot; name=&quot;UIOption.OnlyErrorDialogs&quot; href=&quot;&quot;> </xref>합니다."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.CopyFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>destinationFileName </code>경로 정보를 포함합니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationFileName</code>또는 <code>sourceFileName</code> 은 <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> 또는 빈 문자열입니다."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "원본 파일이 잘못 되었거나 존재 하지 않습니다."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "대상 파일이 있는 및 <code> overwrite </code> 로 설정 된 <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>합니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "경로에 파일 또는 디렉터리 이름 콜론 (:)이 포함 된 없거나 형식이 잘못 되었습니다."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "경로가는 시스템 정의 최대 길이 초과합니다."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "사용자에 필요한 권한이 없습니다."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "사용자에 경로 보는 데 필요한 권한이 부족 합니다."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,System.Boolean)
  id: CopyFile(System.String,System.String,System.Boolean)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: CopyFile(String,String,Boolean)
  nameWithType: FileSystem.CopyFile(String,String,Boolean)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(String,String,Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "새 위치로 파일을 복사합니다."
  remarks: "`CopyFile`Ace (액세스 제어 항목)를 유지 하지 않습니다. 새로 만든된 파일 생성는 디렉터리에서 기본 Ace를 상속 합니다.       다음 표에서 관련 된 작업의 예를 보여 줍니다.는 `My.Computer.FileSystem.CopyFile` 메서드.      |||   |-|-|   | | 참조 |   | 동일한 디렉터리에 파일을 복사 합니다. | [하는 방법: Visual Basic에서는 동일한 디렉터리에 파일의 복사본 만들기](~/add/includes/ajax-current-ext-md.md)|   | 다른 디렉터리에 파일을 복사 합니다. | [하는 방법: Visual Basic에서 다른 디렉터리에 파일의 복사본 만들기](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example copies the file `Test.txt` to the directory `TestFiles2` without overwriting existing files.  \n  \n [!code-vb[VbRefFile#15](~/add/codesnippet/visualbasic/a6a3d787-8022-457c-b6ec-_1.vb)]  \n  \n Replace the file paths with the paths you want to use in your code.  \n  \n This example copies the file `Test.txt` to the directory `TestFiles2` and renames it `NewFile.txt`.  \n  \n [!code-vb[VbRefFile#16](~/add/codesnippet/visualbasic/a6a3d787-8022-457c-b6ec-_2.vb)]  \n  \n Replace the file paths with the paths you want to use in your code."
  syntax:
    content: public static void CopyFile (string sourceFileName, string destinationFileName, bool overwrite);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "복사할 파일입니다."
    - id: destinationFileName
      type: System.String
      description: "파일을 복사할 위치입니다."
    - id: overwrite
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>이면 기존 파일을 덮어씁니다. 그렇지 않으면 <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>합니다."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.CopyFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>destinationFileName </code>경로 정보를 포함합니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationFileName</code>또는 <code>sourceFileName</code> 은 <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> 또는 빈 문자열입니다."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "원본 파일이 잘못 되었거나 존재 하지 않습니다."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "대상 파일이 있는 및 <code> overwrite </code> 로 설정 된 <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>합니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "경로에 파일 또는 디렉터리 이름 콜론 (:)이 포함 된 없거나 형식이 잘못 되었습니다."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "경로가는 시스템 정의 최대 길이 초과합니다."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "사용자에 필요한 권한이 없습니다."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "사용자에 경로 보는 데 필요한 권한이 부족 합니다."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  id: CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: CopyFile(String,String,UIOption,UICancelOption)
  nameWithType: FileSystem.CopyFile(String,String,UIOption,UICancelOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(String,String,UIOption,UICancelOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "새 위치로 파일을 복사합니다."
  remarks: "`CopyFile`Ace (액세스 제어 항목)를 유지 하지 않습니다. 새로 만든된 파일 생성는 디렉터리에서 기본 Ace를 상속 합니다.       다음 표에서 관련 된 작업의 예를 보여 줍니다.는 `My.Computer.FileSystem.CopyFile` 메서드.      |||   |-|-|   | | 참조 |   | 동일한 디렉터리에 파일을 복사 합니다. | [하는 방법: Visual Basic에서는 동일한 디렉터리에 파일의 복사본 만들기](~/add/includes/ajax-current-ext-md.md)|   | 다른 디렉터리에 파일을 복사 합니다. | [하는 방법: Visual Basic에서 다른 디렉터리에 파일의 복사본 만들기](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example copies the file `Test.txt` to the directory `TestFiles2` without overwriting existing files.  \n  \n [!code-vb[VbRefFile#15](~/add/codesnippet/visualbasic/6cd9502b-4283-47ba-b4e5-_1.vb)]  \n  \n Replace the file paths with the paths you want to use in your code.  \n  \n This example copies the file `Test.txt` to the directory `TestFiles2` and renames it `NewFile.txt`.  \n  \n [!code-vb[VbRefFile#16](~/add/codesnippet/visualbasic/6cd9502b-4283-47ba-b4e5-_2.vb)]  \n  \n Replace the file paths with the paths you want to use in your code."
  syntax:
    content: public static void CopyFile (string sourceFileName, string destinationFileName, Microsoft.VisualBasic.FileIO.UIOption showUI, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "복사할 파일입니다."
    - id: destinationFileName
      type: System.String
      description: "파일을 복사할 위치입니다."
    - id: showUI
      type: Microsoft.VisualBasic.FileIO.UIOption
      description: "작업의 진행률을 시각적으로 추적 여부를 나타냅니다. 기본값은 <xref uid=&quot;langword_csharp_UIOption.OnlyErrorDialogs&quot; name=&quot;UIOption.OnlyErrorDialogs&quot; href=&quot;&quot;> </xref>합니다."
    - id: onUserCancel
      type: Microsoft.VisualBasic.FileIO.UICancelOption
      description: "지정를 클릭할 경우 **취소** 작업을 수행 합니다. 기본값은 <xref href=&quot;Microsoft.VisualBasic.FileIO.UICancelOption&quot;> </xref>합니다."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.CopyFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>destinationFileName </code>경로 정보를 포함합니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationFileName</code>또는 <code>sourceFileName</code> 은 <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> 또는 빈 문자열입니다."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "원본 파일이 잘못 되었거나 존재 하지 않습니다."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "대상 파일이 있는 및 <code> overwrite </code> 로 설정 된 <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>합니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "경로에 파일 또는 디렉터리 이름 콜론 (:)이 포함 된 없거나 형식이 잘못 되었습니다."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "경로가는 시스템 정의 최대 길이 초과합니다."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "사용자에 필요한 권한이 없습니다."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "사용자에 경로 보는 데 필요한 권한이 부족 합니다."
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: "<code>UICancelOption</code>로 설정 되어 <xref uid=&quot;langword_csharp_ThrowException&quot; name=&quot;ThrowException&quot; href=&quot;&quot;> </xref>, 및 사용자 작업을 취소 했습니다 또는 지정 되지 않은 I/O 오류가 발생 합니다."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CreateDirectory(System.String)
  id: CreateDirectory(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: CreateDirectory(String)
  nameWithType: FileSystem.CreateDirectory(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CreateDirectory(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "디렉터리를 만듭니다."
  remarks: "디렉터리가 이미 있는 경우 예외가 throw 되지 않습니다.       다음 표에서 관련 된 작업의 예는 `My.Computer.FileSystem.CreateDirectory` 메서드.      |||   |-|-|   | | 참조 |   | 디렉터리 만들기 | [하는 방법: Visual Basic에서 디렉터리 만들기](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example creates the directory, `NewDirectory`, in `C:\\Documents and Settings\\All Users\\Documents`.  \n  \n [!code-vb[VbVbcnMyFileSystem#17](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._120_1.vb)]"
  syntax:
    content: public static void CreateDirectory (string directory);
    parameters:
    - id: directory
      type: System.String
      description: "이름 및 디렉터리의 위치입니다."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.CreateDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "디렉터리 이름 형식이 잘못 되었습니다. 예를 들어 잘못 된 문자를 포함 하거나 공백만 합니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>directory</code><xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> 또는 빈 문자열입니다."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "디렉터리 이름이 너무 깁니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "디렉터리 이름은 콜론 (:)입니다."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "만들 디렉터리의 부모 디렉터리가 읽기 전용"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "사용자는 디렉터리를 만들 수 있는 권한이 없습니다."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory
  id: CurrentDirectory
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: CurrentDirectory
  nameWithType: FileSystem.CurrentDirectory
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "현재 디렉터리를 가져오거나 설정 합니다."
  remarks: '`CurrentDirectory`시스템 수준 환경 변수가입니다.'
  example:
  - "This example returns the current directory and displays it in a message box.  \n  \n [!code-vb[VbVbcnMyFileSystem#18](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._62_1.vb)]  \n  \n This example sets the current directory to `C:\\TestDirectory`.  \n  \n [!code-vb[VbVbcnMyFileSystem#19](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._62_2.vb)]"
  syntax:
    content: public static string CurrentDirectory { get; set; }
    return:
      type: System.String
      description: "파일 I/O 작업에 대 한 현재 디렉터리입니다."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory*
  exceptions:
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "경로가 올바르지 않습니다."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "사용자에 게 필요한 권한이 없는 합니다."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.DeleteDirectoryOption)
  id: DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.DeleteDirectoryOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: DeleteDirectory(String,DeleteDirectoryOption)
  nameWithType: FileSystem.DeleteDirectory(String,DeleteDirectoryOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(String,DeleteDirectoryOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "디렉터리를 삭제합니다."
  remarks: ''
  example:
  - "The example deletes the directory `OldDirectory` only if it is empty.  \n  \n [!code-vb[VbVbcnMyFileSystem#56](~/add/codesnippet/visualbasic/37e2cb0d-2f7b-442f-bdee-_1.vb)]  \n  \n This example deletes the directory `OldDirectory` and all of its contents.  \n  \n [!code-vb[VbVbcnMyFileSystem#57](~/add/codesnippet/visualbasic/37e2cb0d-2f7b-442f-bdee-_2.vb)]  \n  \n This example deletes the directory `OldDirectory` and all of its contents, asking the user to confirm the deletion, but does not send the contents to the **Recycle Bin**.  \n  \n [!code-vb[VbVbcnMyFileSystem#58](~/add/codesnippet/visualbasic/37e2cb0d-2f7b-442f-bdee-_3.vb)]  \n  \n This example deletes the directory `OldDirectory` and all of its contents, sending them to the **Recycle Bin**, but does not show the progress of the operation.  \n  \n [!code-vb[VbVbcnMyFileSystem#59](~/add/codesnippet/visualbasic/37e2cb0d-2f7b-442f-bdee-_4.vb)]"
  syntax:
    content: public static void DeleteDirectory (string directory, Microsoft.VisualBasic.FileIO.DeleteDirectoryOption onDirectoryNotEmpty);
    parameters:
    - id: directory
      type: System.String
      description: "삭제할 디렉터리입니다."
    - id: onDirectoryNotEmpty
      type: Microsoft.VisualBasic.FileIO.DeleteDirectoryOption
      description: "파일이 나 디렉터리를 삭제 해야 디렉터리를 포함 하는 경우 수행할 지정 합니다. 기본값은 <xref uid=&quot;langword_csharp_DeleteDirectoryOption.DeleteAllContents&quot; name=&quot;DeleteDirectoryOption.DeleteAllContents&quot; href=&quot;&quot;> </xref>합니다."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "길이가&0; 인 문자열을가 하의 형식이 잘못 되었습니다 공백만 포함 하거나 잘못 된 문자 (와일드 카드 문자 포함)를 포함 하는 경로입니다. 경로가 장치 경로인 (붙습니다 \\\\ \\\\.\\\\)."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>directory</code><xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> 또는 빈 문자열입니다."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "디렉터리가 존재 하지 않거나는 파일입니다."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "디렉터리 또는 하위 디렉터리에서에서 파일을 사용 합니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "디렉터리 이름에 콜론 (:)을 포함합니다."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "경로가는 시스템 정의 최대 길이 초과합니다."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "사용자에 필요한 권한이 없습니다."
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: "작업을 취소 하거나 디렉터리를 삭제할 수 없습니다."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)
  id: DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: DeleteDirectory(String,UIOption,RecycleOption)
  nameWithType: FileSystem.DeleteDirectory(String,UIOption,RecycleOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(String,UIOption,RecycleOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "디렉터리를 삭제합니다."
  remarks: "`showUI` 및 `recycle` 매개 변수는 Windows 서비스와 같은 대화형 사용자 하지 않은 응용 프로그램에서 지원 되지 않습니다."
  example:
  - "The example deletes the directory `OldDirectory` only if it is empty.  \n  \n [!code-vb[VbVbcnMyFileSystem#56](~/add/codesnippet/visualbasic/774235a1-3e7f-4503-99ae-_1.vb)]  \n  \n This example deletes the directory `OldDirectory` and all of its contents.  \n  \n [!code-vb[VbVbcnMyFileSystem#57](~/add/codesnippet/visualbasic/774235a1-3e7f-4503-99ae-_2.vb)]  \n  \n This example deletes the directory `OldDirectory` and all of its contents, asking the user to confirm the deletion, but does not send the contents to the **Recycle Bin**.  \n  \n [!code-vb[VbVbcnMyFileSystem#58](~/add/codesnippet/visualbasic/774235a1-3e7f-4503-99ae-_3.vb)]  \n  \n This example deletes the directory `OldDirectory` and all of its contents, sending them to the **Recycle Bin**, but does not show the progress of the operation.  \n  \n [!code-vb[VbVbcnMyFileSystem#59](~/add/codesnippet/visualbasic/774235a1-3e7f-4503-99ae-_4.vb)]"
  syntax:
    content: public static void DeleteDirectory (string directory, Microsoft.VisualBasic.FileIO.UIOption showUI, Microsoft.VisualBasic.FileIO.RecycleOption recycle);
    parameters:
    - id: directory
      type: System.String
      description: "삭제할 디렉터리입니다."
    - id: showUI
      type: Microsoft.VisualBasic.FileIO.UIOption
      description: "작업의 진행 상황을 시각적으로 추적 여부를 지정 합니다. 기본값은 <xref uid=&quot;langword_csharp_UIOption.OnlyErrorDialogs&quot; name=&quot;UIOption.OnlyErrorDialogs&quot; href=&quot;&quot;> </xref>합니다."
    - id: recycle
      type: Microsoft.VisualBasic.FileIO.RecycleOption
      description: "삭제 된 파일으로 보낼지 여부를 지정 된 **휴지통**합니다. 기본값은 <xref uid=&quot;langword_csharp_RecycleOption.DeletePermanently&quot; name=&quot;RecycleOption.DeletePermanently&quot; href=&quot;&quot;> </xref>합니다."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "길이가&0; 인 문자열을가 하의 형식이 잘못 되었습니다 공백만 포함 하거나 잘못 된 문자 (와일드 카드 문자 포함)를 포함 하는 경로입니다. 경로가 장치 경로인 (붙습니다 \\\\ \\\\.\\\\)."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>directory</code><xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> 또는 빈 문자열입니다."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "디렉터리가 존재 하지 않거나는 파일입니다."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "디렉터리 또는 하위 디렉터리에서에서 파일을 사용 합니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "디렉터리 이름에 콜론 (:)을 포함합니다."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "경로가는 시스템 정의 최대 길이 초과합니다."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "사용자에 필요한 권한이 없습니다."
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: "작업을 취소 하거나 디렉터리를 삭제할 수 없습니다."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  id: DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: DeleteDirectory(String,UIOption,RecycleOption,UICancelOption)
  nameWithType: FileSystem.DeleteDirectory(String,UIOption,RecycleOption,UICancelOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(String,UIOption,RecycleOption,UICancelOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "디렉터리를 삭제합니다."
  remarks: "`showUI`, `recycle`, 및 `onUserCancel` 매개 변수는 Windows 서비스와 같은 대화형 사용자 하지 않은 응용 프로그램에서 지원 되지 않습니다."
  example:
  - "The example deletes the directory `OldDirectory` only if it is empty.  \n  \n [!code-vb[VbVbcnMyFileSystem#56](~/add/codesnippet/visualbasic/03b0278b-ea6f-4e00-928c-_1.vb)]  \n  \n This example deletes the directory `OldDirectory` and all of its contents.  \n  \n [!code-vb[VbVbcnMyFileSystem#57](~/add/codesnippet/visualbasic/03b0278b-ea6f-4e00-928c-_2.vb)]  \n  \n This example deletes the directory `OldDirectory` and all of its contents, asking the user to confirm the deletion, but does not send the contents to the **Recycle Bin**.  \n  \n [!code-vb[VbVbcnMyFileSystem#58](~/add/codesnippet/visualbasic/03b0278b-ea6f-4e00-928c-_3.vb)]  \n  \n This example deletes the directory `OldDirectory` and all of its contents, sending them to the **Recycle Bin**, but does not show the progress of the operation.  \n  \n [!code-vb[VbVbcnMyFileSystem#59](~/add/codesnippet/visualbasic/03b0278b-ea6f-4e00-928c-_4.vb)]"
  syntax:
    content: public static void DeleteDirectory (string directory, Microsoft.VisualBasic.FileIO.UIOption showUI, Microsoft.VisualBasic.FileIO.RecycleOption recycle, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);
    parameters:
    - id: directory
      type: System.String
      description: "삭제할 디렉터리입니다."
    - id: showUI
      type: Microsoft.VisualBasic.FileIO.UIOption
      description: "작업의 진행 상황을 시각적으로 추적 여부를 지정 합니다. 기본값은 <xref uid=&quot;langword_csharp_UIOption.OnlyErrorDialogs&quot; name=&quot;UIOption.OnlyErrorDialogs&quot; href=&quot;&quot;> </xref>합니다."
    - id: recycle
      type: Microsoft.VisualBasic.FileIO.RecycleOption
      description: "삭제 된 파일으로 보낼지 여부를 지정 된 **휴지통**합니다. 기본값은 <xref uid=&quot;langword_csharp_RecycleOption.DeletePermanently&quot; name=&quot;RecycleOption.DeletePermanently&quot; href=&quot;&quot;> </xref>합니다."
    - id: onUserCancel
      type: Microsoft.VisualBasic.FileIO.UICancelOption
      description: "클릭 하면 예외를 throw 할지를 지정 **취소**합니다."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "길이가&0; 인 문자열을가 하의 형식이 잘못 되었습니다 공백만 포함 하거나 잘못 된 문자 (와일드 카드 문자 포함)를 포함 하는 경로입니다. 경로가 장치 경로인 (붙습니다 \\\\ \\\\.\\\\)."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>directory</code><xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> 또는 빈 문자열입니다."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "디렉터리가 존재 하지 않거나는 파일입니다."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "디렉터리 또는 하위 디렉터리에서에서 파일을 사용 합니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "디렉터리 이름에 콜론 (:)을 포함합니다."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "경로가는 시스템 정의 최대 길이 초과합니다."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "사용자에 필요한 권한이 없습니다."
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: "작업을 취소 하거나 디렉터리를 삭제할 수 없습니다."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String)
  id: DeleteFile(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: DeleteFile(String)
  nameWithType: FileSystem.DeleteFile(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "파일을 삭제합니다."
  remarks: "다음 표에서 관련 된 작업의 예는 `My.Computer.FileSystem.DeleteFile` 메서드.      |||   |-|-|   | | 참조 |   | 파일을 삭제 하려면 | [하는 방법: Visual Basic에서 파일 삭제](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example deletes the file `Test.txt`.  \n  \n [!code-vb[VbVbcnMyFileSystem#3](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._19_1.vb)]  \n  \n This example deletes the file `Test.txt` and allows the user to confirm that the file should be deleted.  \n  \n [!code-vb[VbVbcnMyFileSystem#4](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._19_2.vb)]  \n  \n This example deletes the file `Test.txt` and sends it to the **Recycle Bin**.  \n  \n [!code-vb[VbVbcnMyFileSystem#5](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._19_3.vb)]"
  syntax:
    content: public static void DeleteFile (string file);
    parameters:
    - id: file
      type: System.String
      description: "이름과 삭제할 파일의 경로입니다."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '다음 이유 중 하나로 경로가 올바르지 않습니다: 길이가&0; 인 문자열 이거나; 공백 문자만; 포함 잘못 된 문자가 있습니다. 후행 슬래시에 있는 파일을 지정 해야 하며 장치 경로 또는 (붙습니다 \\ \\.\\).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code><xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> 또는 빈 문자열입니다."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "경로가는 시스템 정의 최대 길이 초과합니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "경로에 파일 또는 디렉터리 이름 콜론 (:)이 포함 된 없거나 형식이 잘못 되었습니다."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "파일이 사용입니다."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "사용자에 경로 보는 데 필요한 권한이 부족 합니다."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "파일이 존재 하지 않습니다."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "사용자 파일을 삭제할 수 있는 권한이 없거나 파일은 읽기 전용입니다."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)
  id: DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: DeleteFile(String,UIOption,RecycleOption)
  nameWithType: FileSystem.DeleteFile(String,UIOption,RecycleOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(String,UIOption,RecycleOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "파일을 삭제합니다."
  remarks: "`showUI` 및 `recycle` 매개 변수는 Windows 서비스와 같은 대화형 사용자 하지 않은 응용 프로그램에서 지원 되지 않습니다.       다음 표에서 관련 된 작업의 예는 `My.Computer.FileSystem.DeleteFile` 메서드.      |||   |-|-|   | | 참조 |   | 파일을 삭제 하려면 | [하는 방법: Visual Basic에서 파일 삭제](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example deletes the file `Test.txt`.  \n  \n [!code-vb[VbVbcnMyFileSystem#3](~/add/codesnippet/visualbasic/99989061-6d67-4b10-9ec4-_1.vb)]  \n  \n This example deletes the file `Test.txt` and allows the user to confirm that the file should be deleted.  \n  \n [!code-vb[VbVbcnMyFileSystem#4](~/add/codesnippet/visualbasic/99989061-6d67-4b10-9ec4-_2.vb)]  \n  \n This example deletes the file `Test.txt` and sends it to the **Recycle Bin**.  \n  \n [!code-vb[VbVbcnMyFileSystem#5](~/add/codesnippet/visualbasic/99989061-6d67-4b10-9ec4-_3.vb)]"
  syntax:
    content: public static void DeleteFile (string file, Microsoft.VisualBasic.FileIO.UIOption showUI, Microsoft.VisualBasic.FileIO.RecycleOption recycle);
    parameters:
    - id: file
      type: System.String
      description: "이름과 삭제할 파일의 경로입니다."
    - id: showUI
      type: Microsoft.VisualBasic.FileIO.UIOption
      description: "작업의 진행률을 시각적으로 추적 여부를 나타냅니다. 기본값은 <xref uid=&quot;langword_csharp_UIOption.OnlyErrorDialogs&quot; name=&quot;UIOption.OnlyErrorDialogs&quot; href=&quot;&quot;> </xref>합니다."
    - id: recycle
      type: Microsoft.VisualBasic.FileIO.RecycleOption
      description: "에 삭제 된 파일 보내야 할지 여부는 **휴지통**합니다. 기본값은 <xref uid=&quot;langword_csharp_RecycleOption.DeletePermanently&quot; name=&quot;RecycleOption.DeletePermanently&quot; href=&quot;&quot;> </xref>합니다."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '다음 이유 중 하나로 경로가 올바르지 않습니다: 길이가&0; 인 문자열 이거나; 공백 문자만; 포함 잘못 된 문자가 있습니다. 후행 슬래시에 있는 파일을 지정 해야 하며 장치 경로 또는 (붙습니다 \\ \\.\\).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code><xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> 또는 빈 문자열입니다."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "경로가는 시스템 정의 최대 길이 초과합니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "경로에 파일 또는 디렉터리 이름 콜론 (:)이 포함 된 없거나 형식이 잘못 되었습니다."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "파일이 사용입니다."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "사용자에 경로 보는 데 필요한 권한이 부족 합니다."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "파일이 존재 하지 않습니다."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "사용자 파일을 삭제할 수 있는 권한이 없거나 파일은 읽기 전용입니다."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  id: DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: DeleteFile(String,UIOption,RecycleOption,UICancelOption)
  nameWithType: FileSystem.DeleteFile(String,UIOption,RecycleOption,UICancelOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(String,UIOption,RecycleOption,UICancelOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "파일을 삭제합니다."
  remarks: "`showUI`, `recycle`, 및 `onUserCancel` 매개 변수는 Windows 서비스와 같은 대화형 사용자 하지 않은 응용 프로그램에서 지원 되지 않습니다.       다음 표에서 관련 된 작업의 예는 `My.Computer.FileSystem.DeleteFile` 메서드.      |||   |-|-|   | | 참조 |   | 파일을 삭제 하려면 | [하는 방법: Visual Basic에서 파일 삭제](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example deletes the file `Test.txt`.  \n  \n [!code-vb[VbVbcnMyFileSystem#3](~/add/codesnippet/visualbasic/cad1fd49-c6fe-4568-9bc0-_1.vb)]  \n  \n This example deletes the file `Test.txt` and allows the user to confirm that the file should be deleted.  \n  \n [!code-vb[VbVbcnMyFileSystem#4](~/add/codesnippet/visualbasic/cad1fd49-c6fe-4568-9bc0-_2.vb)]  \n  \n This example deletes the file `Test.txt` and sends it to the **Recycle Bin**.  \n  \n [!code-vb[VbVbcnMyFileSystem#5](~/add/codesnippet/visualbasic/cad1fd49-c6fe-4568-9bc0-_3.vb)]"
  syntax:
    content: public static void DeleteFile (string file, Microsoft.VisualBasic.FileIO.UIOption showUI, Microsoft.VisualBasic.FileIO.RecycleOption recycle, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);
    parameters:
    - id: file
      type: System.String
      description: "이름과 삭제할 파일의 경로입니다."
    - id: showUI
      type: Microsoft.VisualBasic.FileIO.UIOption
      description: "작업의 진행률을 시각적으로 추적 여부를 나타냅니다. 기본값은 <xref uid=&quot;langword_csharp_UIOption.OnlyErrorDialogs&quot; name=&quot;UIOption.OnlyErrorDialogs&quot; href=&quot;&quot;> </xref>합니다."
    - id: recycle
      type: Microsoft.VisualBasic.FileIO.RecycleOption
      description: "에 삭제 된 파일 보내야 할지 여부는 **휴지통**합니다. 기본값은 <xref uid=&quot;langword_csharp_RecycleOption.DeletePermanently&quot; name=&quot;RecycleOption.DeletePermanently&quot; href=&quot;&quot;> </xref>합니다."
    - id: onUserCancel
      type: Microsoft.VisualBasic.FileIO.UICancelOption
      description: "작업을 취소 하는 경우는 예외를 throw 여부를 지정 합니다. 기본값은 <xref uid=&quot;langword_csharp_UICancelOption.ThrowException&quot; name=&quot;UICancelOption.ThrowException&quot; href=&quot;&quot;> </xref>합니다."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '다음 이유 중 하나로 경로가 올바르지 않습니다: 길이가&0; 인 문자열 이거나; 공백 문자만; 포함 잘못 된 문자가 있습니다. 후행 슬래시에 있는 파일을 지정 해야 하며 장치 경로 또는 (붙습니다 \\ \\.\\).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code><xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> 또는 빈 문자열입니다."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "경로가는 시스템 정의 최대 길이 초과합니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "경로에 파일 또는 디렉터리 이름 콜론 (:)이 포함 된 없거나 형식이 잘못 되었습니다."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "파일이 사용입니다."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "사용자에 경로 보는 데 필요한 권한이 부족 합니다."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "파일이 존재 하지 않습니다."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "사용자 파일을 삭제할 수 있는 권한이 없거나 파일은 읽기 전용입니다."
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: "사용자가 작업을 취소 하 고 <code> onUserCancel </code> 로 설정 된 <xref href=&quot;Microsoft.VisualBasic.FileIO.UICancelOption&quot;> </xref>합니다."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.DirectoryExists(System.String)
  id: DirectoryExists(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: DirectoryExists(String)
  nameWithType: FileSystem.DirectoryExists(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.DirectoryExists(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "반환 <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;> </xref> 지정한 디렉터리가 존재 하는 경우."
  remarks: ''
  example:
  - "This example determines whether the directory `C:\\backup\\logs` exists and checks its properties.  \n  \n [!code-vb[VbRefFile#13](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._66_1.vb)]"
  syntax:
    content: public static bool DirectoryExists (string directory);
    parameters:
    - id: directory
      type: System.String
      description: "디렉터리의 경로입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>디렉터리가 있으면; 그렇지 않으면 <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>합니다."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.DirectoryExists*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.Drives
  id: Drives
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: Drives
  nameWithType: FileSystem.Drives
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.Drives
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "모든 사용 가능한 드라이브 이름 읽기 전용 컬렉션을 반환합니다."
  remarks: "이 논리 드라이브를 모두 반환합니다."
  example:
  - "This example displays the available drive names in a message box.  \n  \n [!code-vb[VbRefFile#19](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._109_1.vb)]"
  syntax:
    content: public static System.Collections.ObjectModel.ReadOnlyCollection<System.IO.DriveInfo> Drives { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IO.DriveInfo}
      description: "가능한 모든 드라이브의 읽기 전용 컬렉션 <xref href=&quot;System.IO.DriveInfo&quot;> </xref> 개체입니다."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.Drives*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.FileExists(System.String)
  id: FileExists(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: FileExists(String)
  nameWithType: FileSystem.FileExists(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.FileExists(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "반환 <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;> </xref> 지정 된 파일이 있는 경우."
  remarks: "응용 프로그램에 지정 된 파일을 읽을 수 있는 권한이 없는 경우는 `FileExists` 메서드 반환 `False`, 메서드가 해당 경로의; 존재 여부에 관계 없이 예외를 throw 하지 않습니다."
  example:
  - "This example checks to see whether or not the file `Check.txt` exists and supplies the information in a message box.  \n  \n [!code-vb[VbRefFile#20](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._163_1.vb)]"
  syntax:
    content: public static bool FileExists (string file);
    parameters:
    - id: file
      type: System.String
      description: "이름 및 파일의 경로입니다."
    return:
      type: System.Boolean
      description: "반환 <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;> </xref> 파일이 있으면이 고; 그렇지 않으면이 메서드가 반환 <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>합니다."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.FileExists*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "백슬래시로 끝납니다. 파일의 이름 (\\\\)."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption)
  id: FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: FindInFiles(String,String,Boolean,SearchOption)
  nameWithType: FileSystem.FindInFiles(String,String,Boolean,SearchOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles(String,String,Boolean,SearchOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "지정된 된 텍스트를 포함 하는 파일의 이름을 나타내는 문자열의 읽기 전용 컬렉션을 반환 합니다."
  remarks: "지정 된 패턴과 일치 하는 파일이 없으면 빈 컬렉션이 반환 됩니다.       다음 표에서 관련 된 작업의 예는 `My.Computer.FileSystem.FindInFiles` 메서드.      |||   |-|-|   | | 참조 |   | 특정 문자열을 포함 하는 파일에 대 한 디렉터리를 검색 합니다. | [연습: Visual Basic에서 파일과 디렉터리 조작](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example searches the directory `C:\\TestDir` for any files containing the string `\"sample string\"` and displays the results in `ListBox1`.  \n  \n [!code-vb[VbRefFile#12](~/add/codesnippet/visualbasic/c1aba623-4b25-4809-b962-_1.vb)]  \n  \n In order to work, the project must contain a `ListBox` named `ListBox1`."
  syntax:
    content: public static System.Collections.ObjectModel.ReadOnlyCollection<string> FindInFiles (string directory, string containsText, bool ignoreCase, Microsoft.VisualBasic.FileIO.SearchOption searchType);
    parameters:
    - id: directory
      type: System.String
      description: "검색할 디렉터리입니다."
    - id: containsText
      type: System.String
      description: "검색 텍스트입니다."
    - id: ignoreCase
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>검색은 대/소문자 구분; 해야 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;> </xref>합니다."
    - id: searchType
      type: Microsoft.VisualBasic.FileIO.SearchOption
      description: "하위 폴더 포함 여부를 나타냅니다. 기본값은 <xref uid=&quot;langword_csharp_SearchOption.SearchTopLevelOnly&quot; name=&quot;SearchOption.SearchTopLevelOnly&quot; href=&quot;&quot;> </xref>합니다."
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
      description: "지정된 된 텍스트를 포함 하는 파일의 이름의 읽기 전용 컬렉션입니다."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '다음 이유 중 하나로 경로가 올바르지 않습니다: 길이가&0; 인 문자열 이거나; 공백 문자만; 포함 잘못 된 문자가 있습니다. 장치 경로 또는 (붙습니다 `\\.\`).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>directory</code><xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> 또는 빈 문자열입니다."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "지정한 디렉터리가 존재 하지 않습니다."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "지정된 된 디렉터리는 기존 파일을 가리킵니다."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "경로가는 시스템 정의 최대 길이 초과합니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "지정한 디렉터리 경로 콜론 (:) 없거나 형식이 잘못 되었습니다."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "사용자에 경로 보는 데 필요한 권한이 부족 합니다."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "사용자에 게 필요한 권한이 없는 합니다."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])
  id: FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: FindInFiles(String,String,Boolean,SearchOption,String[])
  nameWithType: FileSystem.FindInFiles(String,String,Boolean,SearchOption,String[])
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles(String,String,Boolean,SearchOption,String[])
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "지정된 된 텍스트를 포함 하는 파일의 이름을 나타내는 문자열의 읽기 전용 컬렉션을 반환 합니다."
  remarks: "지정 된 패턴과 일치 하는 파일이 없으면 빈 컬렉션이 반환 됩니다.       다음 표에서 관련 된 작업의 예는 `My.Computer.FileSystem.FindInFiles` 메서드.      |||   |-|-|   | | 참조 |   | 특정 문자열을 포함 하는 파일에 대 한 디렉터리를 검색 합니다. | [연습: Visual Basic에서 파일과 디렉터리 조작](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example searches the directory `C:\\TestDir` for any files containing the string `\"sample string\"` and displays the results in `ListBox1`.  \n  \n [!code-vb[VbRefFile#12](~/add/codesnippet/visualbasic/3de7a74a-9724-4c87-9247-_1.vb)]  \n  \n In order to work, the project must contain a `ListBox` named `ListBox1`."
  syntax:
    content: public static System.Collections.ObjectModel.ReadOnlyCollection<string> FindInFiles (string directory, string containsText, bool ignoreCase, Microsoft.VisualBasic.FileIO.SearchOption searchType, string[] fileWildcards);
    parameters:
    - id: directory
      type: System.String
      description: "검색할 디렉터리입니다."
    - id: containsText
      type: System.String
      description: "검색 텍스트입니다."
    - id: ignoreCase
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>검색은 대/소문자 구분; 해야 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;> </xref>합니다."
    - id: searchType
      type: Microsoft.VisualBasic.FileIO.SearchOption
      description: "하위 폴더 포함 여부를 나타냅니다. 기본값은 <xref uid=&quot;langword_csharp_SearchOption.SearchTopLevelOnly&quot; name=&quot;SearchOption.SearchTopLevelOnly&quot; href=&quot;&quot;> </xref>합니다."
    - id: fileWildcards
      type: System.String[]
      description: "일치 시킬 패턴입니다."
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
      description: "지정된 된 텍스트를 포함 하는 파일의 이름의 읽기 전용 컬렉션입니다."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '다음 이유 중 하나로 경로가 올바르지 않습니다: 길이가&0; 인 문자열 이거나; 공백 문자만; 포함 잘못 된 문자가 있습니다. 장치 경로 또는 (붙습니다 `\\.\`).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>directory</code><xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> 또는 빈 문자열입니다."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "지정한 디렉터리가 존재 하지 않습니다."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "지정된 된 디렉터리는 기존 파일을 가리킵니다."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "경로가는 시스템 정의 최대 길이 초과합니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "지정한 디렉터리 경로 콜론 (:) 없거나 형식이 잘못 되었습니다."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "사용자에 경로 보는 데 필요한 권한이 부족 합니다."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "사용자에 게 필요한 권한이 없는 합니다."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories(System.String)
  id: GetDirectories(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: GetDirectories(String)
  nameWithType: FileSystem.GetDirectories(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "디렉터리 내에서 하위 디렉터리의 경로 이름을 나타내는 문자열의 컬렉션을 반환 합니다."
  remarks: "다음 표에서 관련 된 작업의 예는 `My.Computer.FileSystem.GetDirectories` 메서드.      |||   |-|-|   | | 참조 |   | 특정 패턴의 하위 디렉터리를 나열 합니다. | [하는 방법: Visual Basic에서 특정 패턴의 하위 디렉터리 찾기](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "The following example returns all the directories in the directory structure that contain the word `Logs` in their names and adds them to `ListBox1`.  \n  \n [!code-vb[VbRefFile#10](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._39_1.vb)]  \n  \n This example requires that you have a `ListBox` named `ListBox1` on your form."
  syntax:
    content: public static System.Collections.ObjectModel.ReadOnlyCollection<string> GetDirectories (string directory);
    parameters:
    - id: directory
      type: System.String
      description: "이름 및 디렉터리의 경로입니다."
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
      description: "읽기 전용 컬렉션의 지정된 된 디렉터리 내 하위 디렉터리의 경로 이름입니다."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '다음 이유 중 하나로 경로가 올바르지 않습니다: 길이가&0; 인 문자열 이거나; 공백 문자만; 포함 잘못 된 문자가 있습니다. 장치 경로 또는 (붙습니다 \\ \\.\\).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>directory</code><xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> 또는 빈 문자열입니다."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "지정한 디렉터리가 존재 하지 않습니다."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "지정된 된 디렉터리는 기존 파일을 가리킵니다."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "경로가는 시스템 정의 최대 길이 초과합니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "경로에 파일 또는 디렉터리 이름 콜론 (:)이 포함 된 없거나 형식이 잘못 되었습니다."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "사용자에 경로 보는 데 필요한 권한이 부족 합니다."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "사용자에 게 필요한 권한이 없는 합니다."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])
  id: GetDirectories(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: GetDirectories(String,SearchOption,String[])
  nameWithType: FileSystem.GetDirectories(String,SearchOption,String[])
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories(String,SearchOption,String[])
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "디렉터리 내에서 하위 디렉터리의 경로 이름을 나타내는 문자열의 컬렉션을 반환 합니다."
  remarks: "사용할 수는 `wildcards` 매개 변수를 특정 패턴을 지정 합니다. 하위 디렉터리의 내용을 검색에 포함 하려는 경우에 설정 된 `searchType` 매개 변수를 `SearchAllSubDirectories`합니다.       지정 된 패턴과 일치 하는 디렉터리가 없으면 빈 컬렉션이 반환 됩니다.       다음 표에서 관련 된 작업의 예는 `My.Computer.FileSystem.GetDirectories` 메서드.      |||   |-|-|   | | 참조 |   | 특정 패턴의 하위 디렉터리를 나열 합니다. | [하는 방법: Visual Basic에서 특정 패턴의 하위 디렉터리 찾기](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "The following example returns all the directories in the directory structure that contain the word `Logs` in their names and adds them to `ListBox1`.  \n  \n [!code-vb[VbRefFile#10](~/add/codesnippet/visualbasic/7bb013c4-a081-4298-a67c-_1.vb)]  \n  \n This example requires that you have a `ListBox` named `ListBox1` on your form."
  syntax:
    content: public static System.Collections.ObjectModel.ReadOnlyCollection<string> GetDirectories (string directory, Microsoft.VisualBasic.FileIO.SearchOption searchType, string[] wildcards);
    parameters:
    - id: directory
      type: System.String
      description: "이름 및 디렉터리의 경로입니다."
    - id: searchType
      type: Microsoft.VisualBasic.FileIO.SearchOption
      description: "하위 폴더 포함 여부를 나타냅니다. 기본값은 <xref uid=&quot;langword_csharp_SearchOption.SearchTopLevelOnly&quot; name=&quot;SearchOption.SearchTopLevelOnly&quot; href=&quot;&quot;> </xref>합니다."
    - id: wildcards
      type: System.String[]
      description: "이름을 일치 시키는 패턴입니다."
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
      description: "읽기 전용 컬렉션의 지정된 된 디렉터리 내 하위 디렉터리의 경로 이름입니다."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '다음 이유 중 하나로 경로가 올바르지 않습니다: 길이가&0; 인 문자열 이거나; 공백 문자만; 포함 잘못 된 문자가 있습니다. 장치 경로 또는 (붙습니다 \\ \\.\\).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "하나 이상의 지정 된 와일드 카드 문자는 <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>, 빈 문자열 이거나 공백만 포함 합니다."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "지정한 디렉터리가 존재 하지 않습니다."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "지정된 된 디렉터리는 기존 파일을 가리킵니다."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "경로가는 시스템 정의 최대 길이 초과합니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "경로에 파일 또는 디렉터리 이름 콜론 (:)이 포함 된 없거나 형식이 잘못 되었습니다."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "사용자에 경로 보는 데 필요한 권한이 부족 합니다."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "사용자에 게 필요한 권한이 없는 합니다."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)
  id: GetDirectoryInfo(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: GetDirectoryInfo(String)
  nameWithType: FileSystem.GetDirectoryInfo(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "반환 된 <xref href=&quot;System.IO.DirectoryInfo&quot;> </xref> 지정된 된 경로 대 한 개체입니다."
  remarks: "디렉터리가 없는 경우 예외가 throw 되지 않습니다 처음까지 속성는 <xref:System.IO.DirectoryInfo>개체에 액세스 합니다.</xref:System.IO.DirectoryInfo>"
  example:
  - "This example gets a <xref:System.IO.DirectoryInfo> object for the directory `C:\\Documents and Settings` and displays the directory's creation time, last access time, and last write time.  \n  \n [!code-vb[VbRefFile#7](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._121_1.vb)]"
  syntax:
    content: public static System.IO.DirectoryInfo GetDirectoryInfo (string directory);
    parameters:
    - id: directory
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. 디렉터리의 경로입니다."
    return:
      type: System.IO.DirectoryInfo
      description: "<xref href=&quot;System.IO.DirectoryInfo&quot;></xref>지정된 된 경로 대 한 개체입니다."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '다음 이유 중 하나로 경로가 올바르지 않습니다: 길이가&0; 인 문자열 이거나; 공백 문자만; 포함 잘못 된 문자가 있습니다. 장치 경로 또는 (붙습니다 \\ \\.\\).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>directory</code><xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> 또는 빈 문자열입니다."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "경로가는 시스템 정의 최대 길이 초과합니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "디렉터리 경로 콜론 (:) 또는 잘못 형식입니다."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "경로 보는 데 필요한 권한이 사용자에 게 없는 경우"
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetDriveInfo(System.String)
  id: GetDriveInfo(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: GetDriveInfo(String)
  nameWithType: FileSystem.GetDriveInfo(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.GetDriveInfo(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "반환 된 <xref href=&quot;System.IO.DriveInfo&quot;> </xref> 지정된 된 드라이브에 대 한 개체입니다."
  remarks: "<xref:System.IO.DriveInfo>클래스 드라이브를 모델링 하 고 메서드 및 속성을 쿼리할 드라이브 정보를 제공 합니다.</xref:System.IO.DriveInfo> 사용 하 여 <xref:System.IO.DriveInfo>가능한, 및 자격 증명이 드라이브의 유형을 확인 하려면.</xref:System.IO.DriveInfo> 용량 및 드라이브에 사용 가능한 공간을 결정 하는 속성을 쿼리할 수도 있습니다."
  example:
  - "This example obtains a <xref:System.IO.DriveInfo> object for the C drive and uses it to display information about the drive.  \n  \n [!code-vb[VbRefFile#11](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._132_1.vb)]  \n  \n For information on the different drive types, see <xref:System.IO.DriveType>."
  syntax:
    content: public static System.IO.DriveInfo GetDriveInfo (string drive);
    parameters:
    - id: drive
      type: System.String
      description: "검사 하는 드라이브입니다."
    return:
      type: System.IO.DriveInfo
      description: "<xref href=&quot;System.IO.DriveInfo&quot;></xref>지정된 된 드라이브에 대 한 개체입니다."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.GetDriveInfo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '다음 이유 중 하나로 경로가 올바르지 않습니다: 길이가&0; 인 문자열 이거나; 공백 문자만; 포함 잘못 된 문자가 있습니다. 장치 경로 또는 (붙습니다 \\ \\.\\).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>drive</code><xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> 또는 빈 문자열입니다."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "경로가는 시스템 정의 최대 길이 초과합니다."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "경로 보는 데 필요한 권한이 사용자에 게 없는 경우"
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)
  id: GetFileInfo(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: GetFileInfo(String)
  nameWithType: FileSystem.GetFileInfo(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "반환 된 <xref href=&quot;System.IO.FileInfo&quot;> </xref> 지정된 된 파일에 대 한 개체입니다."
  remarks: "파일이 없으면; 예외가 throw 되지 않습니다. 대신 throw 되는 처음으로 개체의 속성에 액세스 합니다.       다음 표에서 관련 된 작업의 예는 `My.Computer.FileSystem.GetFileInfo` 메서드.      |||   |-|-|   | | 참조 |   | 파일의 이름 및 경로 확인 | [하는 방법: Visual Basic에서 파일 경로의 구문 분석](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example retrieves a <xref:System.IO.FileInfo?displayProperty=fullName> object for the file `MyLogFile.log` and uses it to report the file's full name, last access time, and length.  \n  \n [!code-vb[VbRefFile#1](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._167_1.vb)]"
  syntax:
    content: public static System.IO.FileInfo GetFileInfo (string file);
    parameters:
    - id: file
      type: System.String
      description: "이름 및 파일의 경로입니다."
    return:
      type: System.IO.FileInfo
      description: "<xref href=&quot;System.IO.FileInfo&quot;></xref>지정된 된 파일에 대 한 개체"
  overload: Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "경로 이름 형식이 잘못 되었습니다. 예를 들어 잘못 된 문자를 포함 하거나 공백만 합니다. 파일 이름에 후행 슬래시 기호입니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code><xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> 또는 빈 문자열입니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "경로는 문자열 중간에 콜론을 포함합니다."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "경로가 너무 깁니다."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "사용자에 게 필요한 권한이 없는 합니다."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "사용자 파일에 대를 한 ACL (액세스 제어 목록)에 없습니다."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetFiles(System.String)
  id: GetFiles(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: GetFiles(String)
  nameWithType: FileSystem.GetFiles(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.GetFiles(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "디렉터리 내의 파일 이름을 나타내는 문자열의 읽기 전용 컬렉션을 반환 합니다."
  remarks: "지정 된 패턴과 일치 하는 파일이 없으면 빈 컬렉션이 반환 됩니다.       다음 표에서 관련 된 작업의 예를 보여 줍니다.는 `My.Computer.FileSystem.GetFiles` 메서드.      |||   |-|-|   | | 참조 |   | 디렉터리의 파일 컬렉션을 가져옵니다. | [하는 방법: Visual Basic에서 디렉터리의 파일 컬렉션 가져오기](~/add/includes/ajax-current-ext-md.md)|   | 디렉터리에서 특정 패턴의 파일 찾기 | [하는 방법: Visual Basic에서 특정 패턴의 파일 찾기](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "The following example returns all files in the directory and adds them to `ListBox1`.  \n  \n [!code-vb[VbRefFile#5](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._183_1.vb)]  \n  \n This example requires that you have a `ListBox` named `ListBox1` on your form.  \n  \n This example returns all files in the directory with the extension `.txt` and adds them to `ListBox1`.  \n  \n [!code-vb[VbRefFile#6](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._183_2.vb)]  \n  \n This example requires that you have a `ListBox` named `ListBox1` on your form."
  syntax:
    content: public static System.Collections.ObjectModel.ReadOnlyCollection<string> GetFiles (string directory);
    parameters:
    - id: directory
      type: System.String
      description: "검색할 디렉터리입니다."
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
      description: "지정된 된 디렉터리에서 파일 이름 읽기 전용 컬렉션입니다."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.GetFiles*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '다음 이유 중 하나로 경로가 올바르지 않습니다: 길이가&0; 인 문자열 이거나; 공백 문자만; 포함 잘못 된 문자가 있습니다. 장치 경로 또는 (붙습니다 \\ \\.\\).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>directory</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "검색할 디렉터리 존재 하지 않습니다."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>directory</code>기존 파일을 가리킵니다."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "경로가는 시스템 정의 최대 길이 초과합니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "경로에 파일 또는 디렉터리 이름 콜론 (:)이 포함 된 없거나 형식이 잘못 되었습니다."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "사용자에 경로 보는 데 필요한 권한이 부족 합니다."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "사용자에 게 필요한 권한이 없는 합니다."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetFiles(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])
  id: GetFiles(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: GetFiles(String,SearchOption,String[])
  nameWithType: FileSystem.GetFiles(String,SearchOption,String[])
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.GetFiles(String,SearchOption,String[])
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "디렉터리 내의 파일 이름을 나타내는 문자열의 읽기 전용 컬렉션을 반환 합니다."
  remarks: "지정 된 패턴과 일치 하는 파일이 없으면 빈 컬렉션이 반환 됩니다.       다음 표에서 관련 된 작업의 예를 보여 줍니다.는 `My.Computer.FileSystem.GetFiles` 메서드.      |||   |-|-|   | | 참조 |   | 디렉터리의 파일 컬렉션을 가져옵니다. | [하는 방법: Visual Basic에서 디렉터리의 파일 컬렉션 가져오기](~/add/includes/ajax-current-ext-md.md)|   | 디렉터리에서 특정 패턴의 파일 찾기 | [하는 방법: Visual Basic에서 특정 패턴의 파일 찾기](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "The following example returns all files in the directory and adds them to `ListBox1`.  \n  \n [!code-vb[VbRefFile#5](~/add/codesnippet/visualbasic/5e6a1ffc-ea51-43c3-854b-_1.vb)]  \n  \n This example requires that you have a `ListBox` named `ListBox1` on your form.  \n  \n This example returns all files in the directory with the extension `.txt` and adds them to `ListBox1`.  \n  \n [!code-vb[VbRefFile#6](~/add/codesnippet/visualbasic/5e6a1ffc-ea51-43c3-854b-_2.vb)]  \n  \n This example requires that you have a `ListBox` named `ListBox1` on your form."
  syntax:
    content: public static System.Collections.ObjectModel.ReadOnlyCollection<string> GetFiles (string directory, Microsoft.VisualBasic.FileIO.SearchOption searchType, string[] wildcards);
    parameters:
    - id: directory
      type: System.String
      description: "검색할 디렉터리입니다."
    - id: searchType
      type: Microsoft.VisualBasic.FileIO.SearchOption
      description: "하위 폴더 포함 여부를 나타냅니다. 기본값은 <xref uid=&quot;langword_csharp_SearchOption.SearchTopLevelOnly&quot; name=&quot;SearchOption.SearchTopLevelOnly&quot; href=&quot;&quot;> </xref>합니다."
    - id: wildcards
      type: System.String[]
      description: "일치 시킬 패턴입니다."
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
      description: "지정된 된 디렉터리에서 파일 이름 읽기 전용 컬렉션입니다."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.GetFiles*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '다음 이유 중 하나로 경로가 올바르지 않습니다: 길이가&0; 인 문자열 이거나; 공백 문자만; 포함 잘못 된 문자가 있습니다. 장치 경로 또는 (붙습니다 \\ \\.\\).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>directory</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "검색할 디렉터리 존재 하지 않습니다."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>directory</code>기존 파일을 가리킵니다."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "경로가는 시스템 정의 최대 길이 초과합니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "경로에 파일 또는 디렉터리 이름 콜론 (:)이 포함 된 없거나 형식이 잘못 되었습니다."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "사용자에 경로 보는 데 필요한 권한이 부족 합니다."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "사용자에 게 필요한 권한이 없는 합니다."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetName(System.String)
  id: GetName(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: GetName(String)
  nameWithType: FileSystem.GetName(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.GetName(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "제공 된 경로에서 파일 이름을 구문 분석 합니다."
  remarks: "이 항목은 문자열 연산입니다. `FileSystem` 검사 하지 않습니다.       `GetName` 메서드 경로의 끝에서 발생 하는 슬래시를 무시 합니다.       다음 표에서 관련 된 작업의 예는 `My.Computer.FileSystem.GetFileName` 메서드.      |||   |-|-|   | | 참조 |   | 파일 경로 구문 분석 | [하는 방법: Visual Basic에서 파일 경로의 구문 분석](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "The following example parses a file path and returns the name of the file.  \n  \n [!code-vb[VbVbcnMyFileSystem#21](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._3_1.vb)]  \n  \n Replace the path `C:\\Testdirectory\\Testfile` with the path you wish to parse."
  syntax:
    content: public static string GetName (string path);
    parameters:
    - id: path
      type: System.String
      description: "필수 사항입니다. 경로 구문 분석할 수입니다. <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>."
    return:
      type: System.String
      description: "지정된 된 경로에서 파일 이름입니다."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.GetName*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetParentPath(System.String)
  id: GetParentPath(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: GetParentPath(String)
  nameWithType: FileSystem.GetParentPath(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.GetParentPath(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "제공된 된 경로의 부모 경로 반환합니다."
  remarks: "이 항목은 문자열 연산입니다. 파일 시스템은 검사 하지 않습니다."
  example:
  - "This example gets the parent path for `C:\\Backups\\Tmp\\Test`.  \n  \n [!code-vb[VbRefFile#17](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._2_1.vb)]"
  syntax:
    content: public static string GetParentPath (string path);
    parameters:
    - id: path
      type: System.String
      description: "경로 검사 수입니다."
    return:
      type: System.String
      description: "제공된 된 경로의 부모 경로입니다."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.GetParentPath*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "루트 경로 이기 때문에 경로 부모 경로가지고 있지 않습니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "경로가는 시스템 정의 최대 길이 초과합니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "경로에 파일 또는 디렉터리 이름 콜론 (:)이 포함 된 없거나 형식이 잘못 되었습니다."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetTempFileName
  id: GetTempFileName
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: GetTempFileName()
  nameWithType: FileSystem.GetTempFileName()
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.GetTempFileName()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "디스크에 크기가&0; 바이트인 고유한 이름의 임시 파일을 만듭니다 하 고 해당 파일의 전체 경로 반환 합니다."
  remarks: "이 메서드는 임시 파일을 만드는 데 사용할 수 있습니다."
  example:
  - "This example creates a temp file and returns its path.  \n  \n [!code-vb[VbVbcnMyFileSystem#12](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._71_1.vb)]"
  syntax:
    content: public static string GetTempFileName ();
    parameters: []
    return:
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>임시 파일의 전체 경로 포함 합니다."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.GetTempFileName*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String)
  id: MoveDirectory(System.String,System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: MoveDirectory(String,String)
  nameWithType: FileSystem.MoveDirectory(String,String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(String,String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "한 위치에서 다른 디렉터리를 이동합니다."
  remarks: "존재 하지 않는 디렉터리 내에 디렉터리를 이동 하려고 하는 경우 대상 구조가 생성 됩니다."
  example:
  - "This example moves `Directory1` inside `Directory2`.  \n  \n [!code-vb[VbVbcnMyFileSystem#81](~/add/codesnippet/visualbasic/9b938424-f0a1-43e1-91c4-_1.vb)]  \n  \n This example moves `Directory1` inside `Directory2`, overwriting the directory if it already exists.  \n  \n [!code-vb[VbVbcnMyFileSystem#82](~/add/codesnippet/visualbasic/9b938424-f0a1-43e1-91c4-_2.vb)]"
  syntax:
    content: public static void MoveDirectory (string sourceDirectoryName, string destinationDirectoryName);
    parameters:
    - id: sourceDirectoryName
      type: System.String
      description: "이동할 디렉터리의 경로입니다."
    - id: destinationDirectoryName
      type: System.String
      description: "소스 디렉터리 이동 되는 디렉터리의 경로입니다."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '다음 이유 중 하나로 경로가 올바르지 않습니다: 길이가&0; 인 문자열 이거나; 공백 문자만; 포함 잘못 된 문자가 있습니다. 장치 경로 또는 (붙습니다 \\ \\.\\).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>sourceDirectoryName</code>또는 <code>destinationDirectoryName</code> 은 <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> 또는 빈 문자열입니다."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "디렉터리가 존재 하지 않습니다."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "소스 폴더는 루트 디렉터리 또는 원본 경로 대상 경로가 동일 합니다."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "경로가는 시스템 정의 최대 길이 초과합니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "이 작업은 순환."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "경로에 파일 또는 디렉터리 이름 콜론 (:)이 포함 된 없거나 형식이 잘못 되었습니다."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "사용자에 경로 보는 데 필요한 권한이 부족 합니다."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "사용자에 필요한 권한이 없습니다."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  id: MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: MoveDirectory(String,String,UIOption)
  nameWithType: FileSystem.MoveDirectory(String,String,UIOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(String,String,UIOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "한 위치에서 다른 디렉터리를 이동합니다."
  remarks: "존재 하지 않는 디렉터리 내에 디렉터리를 이동 하려고 하는 경우 대상 구조가 생성 됩니다."
  example:
  - "This example moves `Directory1` inside `Directory2`.  \n  \n [!code-vb[VbVbcnMyFileSystem#81](~/add/codesnippet/visualbasic/fe61004d-06a2-46b1-a90d-_1.vb)]  \n  \n This example moves `Directory1` inside `Directory2`, overwriting the directory if it already exists.  \n  \n [!code-vb[VbVbcnMyFileSystem#82](~/add/codesnippet/visualbasic/fe61004d-06a2-46b1-a90d-_2.vb)]"
  syntax:
    content: public static void MoveDirectory (string sourceDirectoryName, string destinationDirectoryName, Microsoft.VisualBasic.FileIO.UIOption showUI);
    parameters:
    - id: sourceDirectoryName
      type: System.String
      description: "이동할 디렉터리의 경로입니다."
    - id: destinationDirectoryName
      type: System.String
      description: "소스 디렉터리 이동 되는 디렉터리의 경로입니다."
    - id: showUI
      type: Microsoft.VisualBasic.FileIO.UIOption
      description: "작업의 진행 상황을 시각적으로 추적 여부를 지정 합니다. 기본값은 <xref uid=&quot;langword_csharp_UIOption.OnlyErrorDialogs&quot; name=&quot;UIOption.OnlyErrorDialogs&quot; href=&quot;&quot;> </xref>합니다."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '다음 이유 중 하나로 경로가 올바르지 않습니다: 길이가&0; 인 문자열 이거나; 공백 문자만; 포함 잘못 된 문자가 있습니다. 장치 경로 또는 (붙습니다 \\ \\.\\).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>sourceDirectoryName</code>또는 <code>destinationDirectoryName</code> 은 <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> 또는 빈 문자열입니다."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "디렉터리가 존재 하지 않습니다."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "대상 디렉터리가 이미 및 o<code> verwrite </code> 로 설정 된 <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>합니다."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "경로가는 시스템 정의 최대 길이 초과합니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "이 작업은 순환."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "경로에 파일 또는 디렉터리 이름 콜론 (:)이 포함 된 없거나 형식이 잘못 되었습니다."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "사용자에 경로 보는 데 필요한 권한이 부족 합니다."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "사용자에 필요한 권한이 없습니다."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,System.Boolean)
  id: MoveDirectory(System.String,System.String,System.Boolean)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: MoveDirectory(String,String,Boolean)
  nameWithType: FileSystem.MoveDirectory(String,String,Boolean)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(String,String,Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "한 위치에서 다른 디렉터리를 이동합니다."
  remarks: "존재 하지 않는 디렉터리 내에 디렉터리를 이동 하려고 하는 경우 대상 구조가 생성 됩니다."
  example:
  - "This example moves `Directory1` inside `Directory2`.  \n  \n [!code-vb[VbVbcnMyFileSystem#81](~/add/codesnippet/visualbasic/9ecf6293-7b0b-405f-882c-_1.vb)]  \n  \n This example moves `Directory1` inside `Directory2`, overwriting the directory if it already exists.  \n  \n [!code-vb[VbVbcnMyFileSystem#82](~/add/codesnippet/visualbasic/9ecf6293-7b0b-405f-882c-_2.vb)]"
  syntax:
    content: public static void MoveDirectory (string sourceDirectoryName, string destinationDirectoryName, bool overwrite);
    parameters:
    - id: sourceDirectoryName
      type: System.String
      description: "이동할 디렉터리의 경로입니다."
    - id: destinationDirectoryName
      type: System.String
      description: "소스 디렉터리 이동 되는 디렉터리의 경로입니다."
    - id: overwrite
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>이면 기존 디렉터리를 덮어씁니다. 그렇지 않으면 <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>합니다."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '다음 이유 중 하나로 경로가 올바르지 않습니다: 길이가&0; 인 문자열 이거나; 공백 문자만; 포함 잘못 된 문자가 있습니다. 장치 경로 또는 (붙습니다 \\ \\.\\).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>sourceDirectoryName</code>또는 <code>destinationDirectoryName</code> 은 <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> 또는 빈 문자열입니다."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "디렉터리가 존재 하지 않습니다."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "대상 디렉터리가 이미 및 o<code> verwrite </code> 로 설정 된 <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>합니다."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "경로가는 시스템 정의 최대 길이 초과합니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "이 작업은 순환."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "경로에 파일 또는 디렉터리 이름 콜론 (:)이 포함 된 없거나 형식이 잘못 되었습니다."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "사용자에 경로 보는 데 필요한 권한이 부족 합니다."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "사용자에 필요한 권한이 없습니다."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  id: MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: MoveDirectory(String,String,UIOption,UICancelOption)
  nameWithType: FileSystem.MoveDirectory(String,String,UIOption,UICancelOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(String,String,UIOption,UICancelOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "한 위치에서 다른 디렉터리를 이동합니다."
  remarks: "존재 하지 않는 디렉터리 내에 디렉터리를 이동 하려고 하는 경우 대상 구조가 생성 됩니다."
  example:
  - "This example moves `Directory1` inside `Directory2`.  \n  \n [!code-vb[VbVbcnMyFileSystem#81](~/add/codesnippet/visualbasic/d810659f-78df-493e-93de-_1.vb)]  \n  \n This example moves `Directory1` inside `Directory2`, overwriting the directory if it already exists.  \n  \n [!code-vb[VbVbcnMyFileSystem#82](~/add/codesnippet/visualbasic/d810659f-78df-493e-93de-_2.vb)]"
  syntax:
    content: public static void MoveDirectory (string sourceDirectoryName, string destinationDirectoryName, Microsoft.VisualBasic.FileIO.UIOption showUI, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);
    parameters:
    - id: sourceDirectoryName
      type: System.String
      description: "이동할 디렉터리의 경로입니다."
    - id: destinationDirectoryName
      type: System.String
      description: "소스 디렉터리 이동 되는 디렉터리의 경로입니다."
    - id: showUI
      type: Microsoft.VisualBasic.FileIO.UIOption
      description: "작업의 진행 상황을 시각적으로 추적 여부를 지정 합니다. 기본값은 <xref uid=&quot;langword_csharp_UIOption.OnlyErrorDialogs&quot; name=&quot;UIOption.OnlyErrorDialogs&quot; href=&quot;&quot;> </xref>합니다."
    - id: onUserCancel
      type: Microsoft.VisualBasic.FileIO.UICancelOption
      description: "작업을 취소 하는 경우는 예외를 throw 여부를 지정 합니다. 기본값은 <xref uid=&quot;langword_csharp_UICancelOption.ThrowException&quot; name=&quot;UICancelOption.ThrowException&quot; href=&quot;&quot;> </xref>합니다."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '다음 이유 중 하나로 경로가 올바르지 않습니다: 길이가&0; 인 문자열 이거나; 공백 문자만; 포함 잘못 된 문자가 있습니다. 장치 경로 또는 (붙습니다 \\ \\.\\).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>sourceDirectoryName</code>또는 <code>destinationDirectoryName</code> 은 <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> 또는 빈 문자열입니다."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "디렉터리가 존재 하지 않습니다."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>onUserCancel</code>로 설정 되어 <xref uid=&quot;langword_csharp_ThrowException&quot; name=&quot;ThrowException&quot; href=&quot;&quot;> </xref> 파일의 하위 디렉터리를 복사할 수 없습니다."
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: "<code>onUserCancel</code>로 설정 되어 <xref uid=&quot;langword_csharp_ThrowException&quot; name=&quot;ThrowException&quot; href=&quot;&quot;> </xref>, 및는 작업을 취소 하거나 작업을 완료할 수 없습니다."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "사용자에 경로 보는 데 필요한 권한이 부족 합니다."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "경로가는 시스템 정의 최대 길이 초과합니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "이 작업은 순환."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "경로에 파일 또는 디렉터리 이름 콜론 (:)이 포함 된 없거나 형식이 잘못 되었습니다."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "사용자에 필요한 권한이 없습니다."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String)
  id: MoveFile(System.String,System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: MoveFile(String,String)
  nameWithType: FileSystem.MoveFile(String,String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(String,String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "파일을 새 위치로 이동합니다."
  remarks: "대상 구조 존재 하지 않는 경우 자동으로 만들어집니다.       `MoveFile` 메서드 동일한 볼륨 내에서 파일을 이동할 때만 Ace (액세스 제어 항목)를 유지 합니다. 상속 된 Ace (직접 우선 상속 된 Ace)를 이동 하면 직접 Ace가 되 포함 됩니다. 볼륨 간에 파일을 이동 하는 Ace 복사 되지 않습니다.       다음 표에서 관련 된 작업의 예는 `My.Computer.FileSystem.MoveFile` 메서드.      |||   |-|-|   | | 참조 |   | 파일 이동 | [하는 방법: Visual Basic에서 파일 이동](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example moves the file `Test.txt` from `TestDir1` to `TestDir2`.  \n  \n [!code-vb[VbVbcnMyFileSystem#86](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._133_1.vb)]  \n  \n This example moves the file `Test.txt` from `TestDir1` to `TestDir2` and renames it `Test2.txt`.  \n  \n [!code-vb[VbVbcnMyFileSystem#87](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._133_2.vb)]"
  syntax:
    content: public static void MoveFile (string sourceFileName, string destinationFileName);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "이동할 파일의 경로입니다."
    - id: destinationFileName
      type: System.String
      description: "파일은 이동 하는 디렉터리의 경로입니다."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.MoveFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '다음 이유 중 하나로 경로가 올바르지 않습니다: 길이가&0; 인 문자열 이거나; 공백 문자만; 포함 잘못 된 문자가 있습니다. 장치 경로 또는 (붙습니다 \\ \\.\\);는 후행 슬래시로 끝나는 합니다.'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationFileName</code><xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> 또는 빈 문자열입니다."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "원본 파일이 잘못 되었거나 존재 하지 않습니다."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "파일이 다른 프로세스에서 사용 중인 또는 I/O 오류가 발생 했습니다."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "경로가는 시스템 정의 최대 길이 초과합니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "경로에 파일 또는 디렉터리 이름 콜론 (:)이 포함 된 없거나 형식이 잘못 되었습니다."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "사용자에 경로 보는 데 필요한 권한이 부족 합니다."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  id: MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: MoveFile(String,String,UIOption)
  nameWithType: FileSystem.MoveFile(String,String,UIOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(String,String,UIOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "파일을 새 위치로 이동합니다."
  remarks: "대상 구조 존재 하지 않는 경우 자동으로 만들어집니다.       `MoveFile` 메서드 동일한 볼륨 내에서 파일을 이동할 때만 Ace (액세스 제어 항목)를 유지 합니다. 상속 된 Ace (직접 우선 상속 된 Ace)를 이동 하면 직접 Ace가 되 포함 됩니다. 볼륨 간에 파일을 이동 하는 Ace 복사 되지 않습니다.       다음 표에서 관련 된 작업의 예는 `My.Computer.FileSystem.MoveFile` 메서드.      |||   |-|-|   | | 참조 |   | 파일 이동 | [하는 방법: Visual Basic에서 파일 이동](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example moves the file `Test.txt` from `TestDir1` to `TestDir2`.  \n  \n [!code-vb[VbVbcnMyFileSystem#86](~/add/codesnippet/visualbasic/3e6ad2aa-c200-49f5-9d85-_1.vb)]  \n  \n This example moves the file `Test.txt` from `TestDir1` to `TestDir2` and renames it `Test2.txt`.  \n  \n [!code-vb[VbVbcnMyFileSystem#87](~/add/codesnippet/visualbasic/3e6ad2aa-c200-49f5-9d85-_2.vb)]"
  syntax:
    content: public static void MoveFile (string sourceFileName, string destinationFileName, Microsoft.VisualBasic.FileIO.UIOption showUI);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "이동할 파일의 경로입니다."
    - id: destinationFileName
      type: System.String
      description: "파일은 이동 하는 디렉터리의 경로입니다."
    - id: showUI
      type: Microsoft.VisualBasic.FileIO.UIOption
      description: "작업의 진행 상황을 시각적으로 추적 여부를 지정 합니다. 기본값은 <xref uid=&quot;langword_csharp_UIOption.OnlyErrorDialogs&quot; name=&quot;UIOption.OnlyErrorDialogs&quot; href=&quot;&quot;> </xref>합니다."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.MoveFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '다음 이유 중 하나로 경로가 올바르지 않습니다: 길이가&0; 인 문자열 이거나; 공백 문자만; 포함 잘못 된 문자가 있습니다. 장치 경로 또는 (붙습니다 \\ \\.\\);는 후행 슬래시로 끝나는 합니다.'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationFileName</code><xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> 또는 빈 문자열입니다."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "원본 파일이 잘못 되었거나 존재 하지 않습니다."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "파일이 다른 프로세스에서 사용 중인 또는 I/O 오류가 발생 했습니다."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "경로가는 시스템 정의 최대 길이 초과합니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "경로에 파일 또는 디렉터리 이름 콜론 (:)이 포함 된 없거나 형식이 잘못 되었습니다."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "사용자에 경로 보는 데 필요한 권한이 부족 합니다."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,System.Boolean)
  id: MoveFile(System.String,System.String,System.Boolean)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: MoveFile(String,String,Boolean)
  nameWithType: FileSystem.MoveFile(String,String,Boolean)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(String,String,Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "파일을 새 위치로 이동합니다."
  remarks: "대상 구조 존재 하지 않는 경우 자동으로 만들어집니다.       `MoveFile` 메서드 동일한 볼륨 내에서 파일을 이동할 때만 Ace (액세스 제어 항목)를 유지 합니다. 상속 된 Ace (직접 우선 상속 된 Ace)를 이동 하면 직접 Ace가 되 포함 됩니다. 볼륨 간에 파일을 이동 하는 Ace 복사 되지 않습니다.       다음 표에서 관련 된 작업의 예는 `My.Computer.FileSystem.MoveFile` 메서드.      |||   |-|-|   | | 참조 |   | 파일 이동 | [하는 방법: Visual Basic에서 파일 이동](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example moves the file `Test.txt` from `TestDir1` to `TestDir2`.  \n  \n [!code-vb[VbVbcnMyFileSystem#86](~/add/codesnippet/visualbasic/061580cd-dc37-447c-a290-_1.vb)]  \n  \n This example moves the file `Test.txt` from `TestDir1` to `TestDir2` and renames it `Test2.txt`.  \n  \n [!code-vb[VbVbcnMyFileSystem#87](~/add/codesnippet/visualbasic/061580cd-dc37-447c-a290-_2.vb)]"
  syntax:
    content: public static void MoveFile (string sourceFileName, string destinationFileName, bool overwrite);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "이동할 파일의 경로입니다."
    - id: destinationFileName
      type: System.String
      description: "파일은 이동 하는 디렉터리의 경로입니다."
    - id: overwrite
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>기존 파일을 덮어쓰려면 그렇지 않으면 <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>합니다."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.MoveFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '다음 이유 중 하나로 경로가 올바르지 않습니다: 길이가&0; 인 문자열 이거나; 공백 문자만; 포함 잘못 된 문자가 있습니다. 장치 경로 또는 (붙습니다 \\ \\.\\);는 후행 슬래시로 끝나는 합니다.'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationFileName</code><xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> 또는 빈 문자열입니다."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "원본 파일이 잘못 되었거나 존재 하지 않습니다."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "파일이 다른 프로세스에서 사용 중인 또는 I/O 오류가 발생 했습니다."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "경로가는 시스템 정의 최대 길이 초과합니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "경로에 파일 또는 디렉터리 이름 콜론 (:)이 포함 된 없거나 형식이 잘못 되었습니다."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "사용자에 경로 보는 데 필요한 권한이 부족 합니다."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  id: MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: MoveFile(String,String,UIOption,UICancelOption)
  nameWithType: FileSystem.MoveFile(String,String,UIOption,UICancelOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(String,String,UIOption,UICancelOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "파일을 새 위치로 이동합니다."
  remarks: "대상 구조 존재 하지 않는 경우 자동으로 만들어집니다.       `MoveFile` 메서드 동일한 볼륨 내에서 파일을 이동할 때만 Ace (액세스 제어 항목)를 유지 합니다. 상속 된 Ace (직접 우선 상속 된 Ace)를 이동 하면 직접 Ace가 되 포함 됩니다. 볼륨 간에 파일을 이동 하는 Ace 복사 되지 않습니다.       다음 표에서 관련 된 작업의 예는 `My.Computer.FileSystem.MoveFile` 메서드.      |||   |-|-|   | | 참조 |   | 파일 이동 | [하는 방법: Visual Basic에서 파일 이동](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example moves the file `Test.txt` from `TestDir1` to `TestDir2`.  \n  \n [!code-vb[VbVbcnMyFileSystem#86](~/add/codesnippet/visualbasic/4184c832-c8dc-48e4-b29a-_1.vb)]  \n  \n This example moves the file `Test.txt` from `TestDir1` to `TestDir2` and renames it `Test2.txt`.  \n  \n [!code-vb[VbVbcnMyFileSystem#87](~/add/codesnippet/visualbasic/4184c832-c8dc-48e4-b29a-_2.vb)]"
  syntax:
    content: public static void MoveFile (string sourceFileName, string destinationFileName, Microsoft.VisualBasic.FileIO.UIOption showUI, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "이동할 파일의 경로입니다."
    - id: destinationFileName
      type: System.String
      description: "파일은 이동 하는 디렉터리의 경로입니다."
    - id: showUI
      type: Microsoft.VisualBasic.FileIO.UIOption
      description: "작업의 진행 상황을 시각적으로 추적 여부를 지정 합니다. 기본값은 <xref uid=&quot;langword_csharp_UIOption.OnlyErrorDialogs&quot; name=&quot;UIOption.OnlyErrorDialogs&quot; href=&quot;&quot;> </xref>합니다."
    - id: onUserCancel
      type: Microsoft.VisualBasic.FileIO.UICancelOption
      description: "작업을 취소 하는 경우는 예외를 throw 여부를 지정 합니다. 기본값은 <xref uid=&quot;langword_csharp_UICancelOption.ThrowException&quot; name=&quot;UICancelOption.ThrowException&quot; href=&quot;&quot;> </xref>합니다."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.MoveFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '다음 이유 중 하나로 경로가 올바르지 않습니다: 길이가&0; 인 문자열 이거나; 공백 문자만; 포함 잘못 된 문자가 있습니다. 장치 경로 또는 (붙습니다 \\ \\.\\);는 후행 슬래시로 끝나는 합니다.'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationFileName</code><xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> 또는 빈 문자열입니다."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "원본 파일이 잘못 되었거나 존재 하지 않습니다."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "파일이 다른 프로세스에서 사용 중인 또는 I/O 오류가 발생 했습니다."
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: "<code>onUserCancel</code>로 설정 되어 <xref uid=&quot;langword_csharp_ThrowException&quot; name=&quot;ThrowException&quot; href=&quot;&quot;> </xref>, 및 중 하나는 사용자가 작업을 취소 또는 지정 되지 않은 I/O 오류가 발생 합니다."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "경로가는 시스템 정의 최대 길이 초과합니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "경로에 파일 또는 디렉터리 이름 콜론 (:)이 포함 된 없거나 형식이 잘못 되었습니다."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "사용자에 경로 보는 데 필요한 권한이 부족 합니다."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)
  id: OpenTextFieldParser(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: OpenTextFieldParser(String)
  nameWithType: FileSystem.OpenTextFieldParser(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "<xref uid=&quot;langword_csharp_OpenTextFieldParser&quot; name=&quot;OpenTextFieldParser&quot; href=&quot;&quot;> </xref> 메서드를 사용 하면 만들 수는 <xref href=&quot;Microsoft.VisualBasic.FileIO.TextFieldParser&quot;> </xref> 쉽고 효율적으로 로그와 같은 구조화 된 텍스트 파일 구문 분석 하는 방법을 제공 하는 개체입니다. <xref uid=&quot;langword_csharp_TextFieldParser&quot; name=&quot;TextFieldParser&quot; href=&quot;&quot;> </xref> 개체 구분 기호로 분리 된 및 고정 너비 파일을 읽는 데 사용할 수 있습니다."
  remarks: "다음 표에서 관련 된 작업의 예를 보여 줍니다.는 `My.Computer.FileSystem.OpenTextFieldParser` 메서드.      |||   |-|-|   | | 참조 |   | 구분 기호로 분리 된 텍스트 파일에서 읽기 | [하는 방법: Visual Basic에서 쉼표로 구분 된 텍스트 파일에서 읽은](~/add/includes/ajax-current-ext-md.md)|   | 고정 너비 텍스트 파일에서 읽기 | [하는 방법: Visual Basic에서 고정 너비 텍스트 파일에서 읽은](~/add/includes/ajax-current-ext-md.md)|   | 여러 형식의 텍스트 파일에서 읽기 | [하는 방법: Visual Basic의 여러 형식의 텍스트 파일에서 읽기](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example opens the `TextFieldParser``reader` and uses it to read from `C:\\TestFolder1\\Test1.txt`.  \n  \n [!code-vb[VbRefFile#18](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._156_1.vb)]"
  syntax:
    content: public static Microsoft.VisualBasic.FileIO.TextFieldParser OpenTextFieldParser (string file);
    parameters:
    - id: file
      type: System.String
      description: "파일을 열 수는 <xref uid=&quot;langword_csharp_TextFieldParser&quot; name=&quot;TextFieldParser&quot; href=&quot;&quot;> </xref>합니다."
    return:
      type: Microsoft.VisualBasic.FileIO.TextFieldParser
      description: "<xref href=&quot;Microsoft.VisualBasic.FileIO.TextFieldParser&quot;></xref>지정된 된 파일을 읽지 못했습니다."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '다음 이유 중 하나로 경로가 올바르지 않습니다: 길이가&0; 인 문자열 이거나; 공백 문자만; 포함 잘못 된 문자가 있습니다. 장치 경로 또는 (붙습니다 \\ \\.\\);는 후행 슬래시로 끝나는 합니다.'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "파일이 존재 하지 않습니다."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "파일이 다른 프로세스에서 사용 중인 또는 I/O 오류가 발생 했습니다."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "경로가는 시스템 정의 최대 길이 초과합니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "경로에 파일 또는 디렉터리 이름 콜론 (:)이 포함 된 없거나 형식이 잘못 되었습니다."
  - type: Microsoft.VisualBasic.FileIO.MalformedLineException
    commentId: T:Microsoft.VisualBasic.FileIO.MalformedLineException
    description: "지정 된 형식을 사용 하 여 행을 구문 분석할 수 없습니다. 예외 메시지 줄을 지정 하는 동안 예외를 발생 시킨는 <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine*>속성 줄에 포함 된 텍스트에 할당 됩니다.</xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine*>"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "사용자에 경로 보는 데 필요한 권한이 부족 합니다."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String,System.Int32[])
  id: OpenTextFieldParser(System.String,System.Int32[])
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: OpenTextFieldParser(String,Int32[])
  nameWithType: FileSystem.OpenTextFieldParser(String,Int32[])
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(String,Int32[])
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "<xref uid=&quot;langword_csharp_OpenTextFieldParser&quot; name=&quot;OpenTextFieldParser&quot; href=&quot;&quot;> </xref> 메서드를 사용 하면 만들 수는 <xref href=&quot;Microsoft.VisualBasic.FileIO.TextFieldParser&quot;> </xref> 쉽고 효율적으로 로그와 같은 구조화 된 텍스트 파일 구문 분석 하는 방법을 제공 하는 개체입니다. <xref uid=&quot;langword_csharp_TextFieldParser&quot; name=&quot;TextFieldParser&quot; href=&quot;&quot;> </xref> 개체 구분 기호로 분리 된 및 고정 너비 파일을 읽는 데 사용할 수 있습니다."
  remarks: "다음 표에서 관련 된 작업의 예를 보여 줍니다.는 `My.Computer.FileSystem.OpenTextFieldParser` 메서드.      |||   |-|-|   | | 참조 |   | 구분 기호로 분리 된 텍스트 파일에서 읽기 | [하는 방법: Visual Basic에서 쉼표로 구분 된 텍스트 파일에서 읽은](~/add/includes/ajax-current-ext-md.md)|   | 고정 너비 텍스트 파일에서 읽기 | [하는 방법: Visual Basic에서 고정 너비 텍스트 파일에서 읽은](~/add/includes/ajax-current-ext-md.md)|   | 여러 형식의 텍스트 파일에서 읽기 | [하는 방법: Visual Basic의 여러 형식의 텍스트 파일에서 읽기](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example opens the `TextFieldParser``reader` and uses it to read from `C:\\TestFolder1\\Test1.txt`.  \n  \n [!code-vb[VbRefFile#18](~/add/codesnippet/visualbasic/23049b6e-0913-4641-bd0f-_1.vb)]"
  syntax:
    content: public static Microsoft.VisualBasic.FileIO.TextFieldParser OpenTextFieldParser (string file, int[] fieldWidths);
    parameters:
    - id: file
      type: System.String
      description: "파일을 열 수는 <xref uid=&quot;langword_csharp_TextFieldParser&quot; name=&quot;TextFieldParser&quot; href=&quot;&quot;> </xref>합니다."
    - id: fieldWidths
      type: System.Int32[]
      description: "필드의 너비입니다."
    return:
      type: Microsoft.VisualBasic.FileIO.TextFieldParser
      description: "<xref href=&quot;Microsoft.VisualBasic.FileIO.TextFieldParser&quot;></xref>지정된 된 파일을 읽지 못했습니다."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '다음 이유 중 하나로 경로가 올바르지 않습니다: 길이가&0; 인 문자열 이거나; 공백 문자만; 포함 잘못 된 문자가 있습니다. 장치 경로 또는 (붙습니다 \\ \\.\\);는 후행 슬래시로 끝나는 합니다.'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "파일이 존재 하지 않습니다."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "파일이 다른 프로세스에서 사용 중인 또는 I/O 오류가 발생 했습니다."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "경로가는 시스템 정의 최대 길이 초과합니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "경로에 파일 또는 디렉터리 이름 콜론 (:)이 포함 된 없거나 형식이 잘못 되었습니다."
  - type: Microsoft.VisualBasic.FileIO.MalformedLineException
    commentId: T:Microsoft.VisualBasic.FileIO.MalformedLineException
    description: "지정 된 형식을 사용 하 여 행을 구문 분석할 수 없습니다. 예외 메시지 줄을 지정 하는 동안 예외를 발생 시킨는 <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine*>속성 줄에 포함 된 텍스트에 할당 됩니다.</xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine*>"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "사용자에 경로 보는 데 필요한 권한이 부족 합니다."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String,System.String[])
  id: OpenTextFieldParser(System.String,System.String[])
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: OpenTextFieldParser(String,String[])
  nameWithType: FileSystem.OpenTextFieldParser(String,String[])
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(String,String[])
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "<xref uid=&quot;langword_csharp_OpenTextFieldParser&quot; name=&quot;OpenTextFieldParser&quot; href=&quot;&quot;> </xref> 메서드를 사용 하면 만들 수는 <xref href=&quot;Microsoft.VisualBasic.FileIO.TextFieldParser&quot;> </xref> 쉽고 효율적으로 로그와 같은 구조화 된 텍스트 파일 구문 분석 하는 방법을 제공 하는 개체입니다. <xref uid=&quot;langword_csharp_TextFieldParser&quot; name=&quot;TextFieldParser&quot; href=&quot;&quot;> </xref> 개체 구분 기호로 분리 된 및 고정 너비 파일을 읽는 데 사용할 수 있습니다."
  remarks: "다음 표에서 관련 된 작업의 예를 보여 줍니다.는 `My.Computer.FileSystem.OpenTextFieldParser` 메서드.      |||   |-|-|   | | 참조 |   | 구분 기호로 분리 된 텍스트 파일에서 읽기 | [하는 방법: Visual Basic에서 쉼표로 구분 된 텍스트 파일에서 읽은](~/add/includes/ajax-current-ext-md.md)|   | 고정 너비 텍스트 파일에서 읽기 | [하는 방법: Visual Basic에서 고정 너비 텍스트 파일에서 읽은](~/add/includes/ajax-current-ext-md.md)|   | 여러 형식의 텍스트 파일에서 읽기 | [하는 방법: Visual Basic의 여러 형식의 텍스트 파일에서 읽기](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example opens the `TextFieldParser``reader` and uses it to read from `C:\\TestFolder1\\Test1.txt`.  \n  \n [!code-vb[VbRefFile#18](~/add/codesnippet/visualbasic/714bc4c9-ee52-4bdc-875b-_1.vb)]"
  syntax:
    content: public static Microsoft.VisualBasic.FileIO.TextFieldParser OpenTextFieldParser (string file, string[] delimiters);
    parameters:
    - id: file
      type: System.String
      description: "파일을 열 수는 <xref uid=&quot;langword_csharp_TextFieldParser&quot; name=&quot;TextFieldParser&quot; href=&quot;&quot;> </xref>합니다."
    - id: delimiters
      type: System.String[]
      description: "필드에 대 한 구분 기호입니다."
    return:
      type: Microsoft.VisualBasic.FileIO.TextFieldParser
      description: "<xref href=&quot;Microsoft.VisualBasic.FileIO.TextFieldParser&quot;></xref>지정된 된 파일을 읽지 못했습니다."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '다음 이유 중 하나로 경로가 올바르지 않습니다: 길이가&0; 인 문자열 이거나; 공백 문자만; 포함 잘못 된 문자가 있습니다. 장치 경로 또는 (붙습니다 \\ \\.\\);는 후행 슬래시로 끝나는 합니다.'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "파일이 존재 하지 않습니다."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "파일이 다른 프로세스에서 사용 중인 또는 I/O 오류가 발생 했습니다."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "경로가는 시스템 정의 최대 길이 초과합니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "경로에 파일 또는 디렉터리 이름 콜론 (:)이 포함 된 없거나 형식이 잘못 되었습니다."
  - type: Microsoft.VisualBasic.FileIO.MalformedLineException
    commentId: T:Microsoft.VisualBasic.FileIO.MalformedLineException
    description: "지정 된 형식을 사용 하 여 행을 구문 분석할 수 없습니다. 예외 메시지 줄을 지정 하는 동안 예외를 발생 시킨는 <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine*>속성 줄에 포함 된 텍스트에 할당 됩니다.</xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine*>"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "사용자에 경로 보는 데 필요한 권한이 부족 합니다."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader(System.String)
  id: OpenTextFileReader(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: OpenTextFileReader(String)
  nameWithType: FileSystem.OpenTextFileReader(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "열립니다는 <xref:System.IO.StreamReader>파일에서 읽을 개체입니다.</xref:System.IO.StreamReader>"
  remarks: "에 <xref:System.IO.StreamReader>.</xref:System.IO.StreamReader> 텍스트 파일만 읽을 수 있습니다       다음 표에서 관련 된 작업의 예는 `My.Computer.FileSystem.OpenTextFileReader` 메서드.      |||   |-|-|   | | 참조 |   | <xref:System.IO.StreamReader>로 파일을 열고 |[ 방법: StreamReader (Visual Basic)를 사용 하 여 파일에서 텍스트 읽기](~/add/includes/ajax-current-ext-md.md) | </xref:System.IO.StreamReader>"
  example:
  - "This example opens the file `Testfile.txt`, reads a line from it, and displays the line in a `MessageBox`.  \n  \n [!code-vb[VbRefFile#2](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._86_1.vb)]"
  syntax:
    content: public static System.IO.StreamReader OpenTextFileReader (string file);
    parameters:
    - id: file
      type: System.String
      description: "읽을 파일입니다."
    return:
      type: System.IO.StreamReader
      description: "<xref:System.IO.StreamReader>파일에서 읽을 개체</xref:System.IO.StreamReader>"
  overload: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "파일 이름은 백슬래시로 끝납니다 (\\\\)."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "지정된 된 파일을 찾을 수 없습니다."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "사용자에는 파일에서 읽는 데 필요한 권한이 부족 합니다."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader(System.String,System.Text.Encoding)
  id: OpenTextFileReader(System.String,System.Text.Encoding)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: OpenTextFileReader(String,Encoding)
  nameWithType: FileSystem.OpenTextFileReader(String,Encoding)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader(String,Encoding)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "열립니다는 <xref:System.IO.StreamReader>파일에서 읽을 개체입니다.</xref:System.IO.StreamReader>"
  remarks: "에 <xref:System.IO.StreamReader>.</xref:System.IO.StreamReader> 텍스트 파일만 읽을 수 있습니다       다음 표에서 관련 된 작업의 예는 `My.Computer.FileSystem.OpenTextFileReader` 메서드.      |||   |-|-|   | | 참조 |   | <xref:System.IO.StreamReader>로 파일을 열고 |[ 방법: StreamReader (Visual Basic)를 사용 하 여 파일에서 텍스트 읽기](~/add/includes/ajax-current-ext-md.md) | </xref:System.IO.StreamReader>"
  example:
  - "This example opens the file `Testfile.txt`, reads a line from it, and displays the line in a `MessageBox`.  \n  \n [!code-vb[VbRefFile#2](~/add/codesnippet/visualbasic/86e418b6-8642-47bd-853b-_1.vb)]"
  syntax:
    content: public static System.IO.StreamReader OpenTextFileReader (string file, System.Text.Encoding encoding);
    parameters:
    - id: file
      type: System.String
      description: "읽을 파일입니다."
    - id: encoding
      type: System.Text.Encoding
      description: "파일 내용에 사용할 인코딩입니다. 기본값은 ASCII입니다."
    return:
      type: System.IO.StreamReader
      description: "<xref:System.IO.StreamReader>파일에서 읽을 개체</xref:System.IO.StreamReader>"
  overload: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "파일 이름은 백슬래시로 끝납니다 (\\\\)."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "지정된 된 파일을 찾을 수 없습니다."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "사용자에는 파일에서 읽는 데 필요한 권한이 부족 합니다."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter(System.String,System.Boolean)
  id: OpenTextFileWriter(System.String,System.Boolean)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: OpenTextFileWriter(String,Boolean)
  nameWithType: FileSystem.OpenTextFileWriter(String,Boolean)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter(String,Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "열립니다는 <xref:System.IO.StreamWriter>지정된 된 파일에 쓸 개체입니다.</xref:System.IO.StreamWriter>"
  remarks: "`OpenTextFileWriter` 메서드 및 파일 스트림을 초기화 열고 다음 반환 된 <xref:System.IO.StreamWriter>해당 스트림에 대 한 개체.</xref:System.IO.StreamWriter> 필요한 횟수 만큼 스트림에 쓸 수 있으며 다음 완료 했으면 닫습니다.      > [!NOTE] >를 호출 해야 합니다는 <xref:System.IO.StreamWriter.Close%2A>에서 메서드는 <xref:System.IO.StreamWriter>모든 데이터가 내부 스트림에 쓰여집니다 올바르게 되었는지 확인 하는 개체입니다.</xref:System.IO.StreamWriter> </xref:System.IO.StreamWriter.Close%2A>       파일에 몇 가지 문자열만 작성 하는 경우 간단 하 게 사용할 수 있습니다는 <xref:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText%2A>메서드.</xref:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText%2A>       다음 표에서 관련 된 작업의 예는 `My.Computer.FileSystem.OpenTextFileWriter` 메서드.      |||   |-|-|   | | 참조 |   | 텍스트 파일에 쓰기는 `StreamWriter` | [하는 방법: Visual Basic에서 StreamWriter 사용 하 여 파일에 텍스트 쓰기](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example opens a <xref:System.IO.StreamWriter> with the `My.Computer.FileSystem.OpenTextFileWriter` method and uses it to write a string to a text file with the `WriteLine` method of the `StreamWriter` class.  \n  \n [!code-vb[VbRefFile#14](~/add/codesnippet/visualbasic/01606e79-13a9-4f6b-a18a-_1.vb)]"
  syntax:
    content: public static System.IO.StreamWriter OpenTextFileWriter (string file, bool append);
    parameters:
    - id: file
      type: System.String
      description: "파일에 쓸 수입니다."
    - id: append
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>파일의 내용에 추가 하려면 <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref> 파일의 내용을 덮어쓸 수 있습니다. 기본값은 <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>합니다."
    return:
      type: System.IO.StreamWriter
      description: "<xref:System.IO.StreamWriter>지정된 된 파일에 쓸 개체입니다.</xref:System.IO.StreamWriter>"
  overload: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "파일 이름 끝에 슬래시로 끝납니다."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter(System.String,System.Boolean,System.Text.Encoding)
  id: OpenTextFileWriter(System.String,System.Boolean,System.Text.Encoding)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: OpenTextFileWriter(String,Boolean,Encoding)
  nameWithType: FileSystem.OpenTextFileWriter(String,Boolean,Encoding)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter(String,Boolean,Encoding)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "열립니다는 <xref:System.IO.StreamWriter>지정된 된 파일에 쓸 수 있습니다.</xref:System.IO.StreamWriter>"
  remarks: "`OpenTextFileWriter` 메서드 및 파일 스트림을 초기화 열고 다음 반환 된 <xref:System.IO.StreamWriter>해당 스트림에 대 한 개체.</xref:System.IO.StreamWriter> 필요한 횟수 만큼 스트림에 쓸 수 있으며 다음 완료 했으면 닫습니다.      > [!NOTE] >를 호출 해야 합니다는 <xref:System.IO.StreamWriter.Close%2A>에서 메서드는 <xref:System.IO.StreamWriter>모든 데이터가 내부 스트림에 쓰여집니다 올바르게 되었는지 확인 하는 개체입니다.</xref:System.IO.StreamWriter> </xref:System.IO.StreamWriter.Close%2A>       파일에 몇 가지 문자열만 작성 하는 경우 간단 하 게 사용할 수 있습니다는 <xref:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText%2A>메서드.</xref:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText%2A>       다음 표에서 관련 된 작업의 예는 `My.Computer.FileSystem.OpenTextFileWriter` 메서드.      |||   |-|-|   | | 참조 |   | 텍스트 파일에 쓰기는 `StreamWriter` | [하는 방법: Visual Basic에서 StreamWriter 사용 하 여 파일에 텍스트 쓰기](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example opens a <xref:System.IO.StreamWriter> with the `My.Computer.FileSystem.OpenTextFileWriter` method and uses it to write a string to a text file with the `WriteLine` method of the `StreamWriter` class.  \n  \n [!code-vb[VbRefFile#14](~/add/codesnippet/visualbasic/dde0fe7a-3324-4e07-ba75-_1.vb)]"
  syntax:
    content: public static System.IO.StreamWriter OpenTextFileWriter (string file, bool append, System.Text.Encoding encoding);
    parameters:
    - id: file
      type: System.String
      description: "파일에 쓸 수입니다."
    - id: append
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>파일의 내용에 추가 하려면 <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref> 파일의 내용을 덮어쓸 수 있습니다. 기본값은 <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>합니다."
    - id: encoding
      type: System.Text.Encoding
      description: "파일에 쓸 때 사용할 인코딩입니다. 기본값은 ASCII입니다."
    return:
      type: System.IO.StreamWriter
      description: "<xref:System.IO.StreamWriter>지정된 된 파일에 쓸 개체입니다.</xref:System.IO.StreamWriter>"
  overload: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "파일 이름 끝에 슬래시로 끝납니다."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.ReadAllBytes(System.String)
  id: ReadAllBytes(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: ReadAllBytes(String)
  nameWithType: FileSystem.ReadAllBytes(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.ReadAllBytes(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "파일의 내용을 바이트 배열로 반환합니다."
  remarks: "`ReadAllBytes` 의 메서드는 `My.Computer.FileSystem` 개체를 사용 하면 이진 파일에서 읽을 수 있습니다. 파일의 내용은 바이트 배열로 반환 됩니다.       파일의 이름을 기반으로 하는 파일의 내용에 대 한 결정 수 없도록 합니다. 예를 들어 Form1.vb 파일이 Visual Basic 소스 파일 수 없습니다. 응용 프로그램에서 데이터를 사용 하기 전에 모든 입력을 확인 합니다.       다음 표에서 관련 된 작업의 예는 `My.Computer.FileSystem.ReadAllBytes` 메서드.      |||   |-|-|   | | 참조 |   | 이진 파일에서 읽기 | [하는 방법: Visual Basic에서 이진 파일에서 읽기](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example reads from the file `C:/Documents and Settings/selfportrait.jpg.`  \n  \n [!code-vb[VbVbcnMyFileSystem#33](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._186_1.vb)]"
  syntax:
    content: public static byte[] ReadAllBytes (string file);
    parameters:
    - id: file
      type: System.String
      description: "읽을 파일입니다."
    return:
      type: System.Byte[]
      description: "<xref uid=&quot;langword_csharp_Byte&quot; name=&quot;Byte&quot; href=&quot;&quot;></xref>파일의 내용을 포함 하는 배열입니다."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.ReadAllBytes*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '다음 이유 중 하나로 경로가 올바르지 않습니다: 길이가&0; 인 문자열 이거나; 공백 문자만; 포함 잘못 된 문자가 있습니다. 장치 경로 또는 (붙습니다 \\ \\.\\);는 후행 슬래시로 끝나는 합니다.'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "파일이 존재 하지 않습니다."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "파일이 다른 프로세스에서 사용 중인 또는 I/O 오류가 발생 했습니다."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "경로가는 시스템 정의 최대 길이 초과합니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "경로에 파일 또는 디렉터리 이름 콜론 (:)이 포함 된 없거나 형식이 잘못 되었습니다."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "메모리가 부족 하 여 문자열 버퍼에 쓸 수 없습니다."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "사용자에 경로 보는 데 필요한 권한이 부족 합니다."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText(System.String)
  id: ReadAllText(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: ReadAllText(String)
  nameWithType: FileSystem.ReadAllText(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "로 텍스트 파일의 내용을 반환 합니다.는 <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref>합니다."
  remarks: "`ReadAllText` 의 메서드는 `My.Computer.FileSystem` 개체를 사용 하 여 텍스트 파일에서 읽을 수 있습니다. 파일의 내용은 문자열로 반환 됩니다.       파일 인코딩을 지정할 수 있습니다 하는 경우 파일의 내용이 예: ASCII 또는 utf-8 인코딩을 지정 합니다. 다른 오버 로드를 사용 하 여 파일 인코딩을 지정 해야 하는 확장된 문자가 사용 된 파일에서을 읽는 경우는 <xref:Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText%2A>메서드.</xref:Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText%2A>       파일의 이름을 기반으로 하는 파일의 내용에 대 한 결정 수 없도록 합니다. 예를 들어 Form1.vb 파일이 Visual Basic 소스 파일 수 없습니다. 응용 프로그램에서 데이터를 사용 하기 전에 모든 입력을 확인 합니다.       다음 표에서 관련 된 작업의 예는 `My.Computer.FileSystem.ReadAllText` 메서드.      |||   |-|-|   | | 참조 |   | 텍스트 파일에서 읽기 | [하는 방법: Visual Basic에서 텍스트 파일에서 읽기](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example reads the contents of `Test.txt` into a string and then displays it in a message box.  \n  \n [!code-vb[VbRefFile#8](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._107_1.vb)]  \n  \n This example reads the contents of the ASCII file `Test.txt` into a string and then displays it in a message box.  \n  \n [!code-vb[VbRefFile#9](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._107_2.vb)]"
  syntax:
    content: public static string ReadAllText (string file);
    parameters:
    - id: file
      type: System.String
      description: "이름과 읽을 파일의 경로입니다."
    return:
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>파일의 내용을 포함 합니다."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '다음 이유 중 하나로 경로가 올바르지 않습니다: 길이가&0; 인 문자열 이거나; 공백 문자만; 포함 잘못 된 문자가 있습니다. 장치 경로 또는 (붙습니다 \\ \\.\\);는 후행 슬래시로 끝나는 합니다.'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "파일이 존재 하지 않습니다."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "파일이 다른 프로세스에서 사용 중인 또는 I/O 오류가 발생 했습니다."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "경로가는 시스템 정의 최대 길이 초과합니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "경로에 파일 또는 디렉터리 이름 콜론 (:)이 포함 된 없거나 형식이 잘못 되었습니다."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "메모리가 부족 하 여 문자열 버퍼에 쓸 수 없습니다."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "사용자에 경로 보는 데 필요한 권한이 부족 합니다."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText(System.String,System.Text.Encoding)
  id: ReadAllText(System.String,System.Text.Encoding)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: ReadAllText(String,Encoding)
  nameWithType: FileSystem.ReadAllText(String,Encoding)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText(String,Encoding)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "로 텍스트 파일의 내용을 반환 합니다.는 <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref>합니다."
  remarks: "`ReadAllText` 의 메서드는 `My.Computer.FileSystem` 개체를 사용 하 여 텍스트 파일에서 읽을 수 있습니다. 파일의 내용은 문자열로 반환 됩니다.       파일 인코딩을 지정할 수 있습니다 하는 경우 파일의 내용이 예: ASCII 또는 utf-8 인코딩을 지정 합니다. 확장된 문자가 사용 된 파일에서을 읽고 있는 경우 파일 인코딩을 지정 해야 합니다.       파일의 이름을 기반으로 하는 파일의 내용에 대 한 결정 수 없도록 합니다. 예를 들어 Form1.vb 파일이 Visual Basic 소스 파일 수 없습니다. 응용 프로그램에서 데이터를 사용 하기 전에 모든 입력을 확인 합니다.       다음 표에서 관련 된 작업의 예는 `My.Computer.FileSystem.ReadAllText` 메서드.      |||   |-|-|   | | 참조 |   | 텍스트 파일에서 읽기 | [하는 방법: Visual Basic에서 텍스트 파일에서 읽기](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example reads the contents of `Test.txt` into a string and then displays it in a message box.  \n  \n [!code-vb[VbRefFile#8](~/add/codesnippet/visualbasic/1582cda5-304c-4525-b252-_1.vb)]  \n  \n This example reads the contents of the ASCII file `Test.txt` into a string and then displays it in a message box.  \n  \n [!code-vb[VbRefFile#9](~/add/codesnippet/visualbasic/1582cda5-304c-4525-b252-_2.vb)]"
  syntax:
    content: public static string ReadAllText (string file, System.Text.Encoding encoding);
    parameters:
    - id: file
      type: System.String
      description: "이름과 읽을 파일의 경로입니다."
    - id: encoding
      type: System.Text.Encoding
      description: "문자 파일을 읽을 때 사용할 인코딩입니다. 기본값은 u t F-8입니다."
    return:
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>파일의 내용을 포함 합니다."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '다음 이유 중 하나로 경로가 올바르지 않습니다: 길이가&0; 인 문자열 이거나; 공백 문자만; 포함 잘못 된 문자가 있습니다. 장치 경로 또는 (붙습니다 \\ \\.\\);는 후행 슬래시로 끝나는 합니다.'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "파일이 존재 하지 않습니다."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "파일이 다른 프로세스에서 사용 중인 또는 I/O 오류가 발생 했습니다."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "경로가는 시스템 정의 최대 길이 초과합니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "경로에 파일 또는 디렉터리 이름 콜론 (:)이 포함 된 없거나 형식이 잘못 되었습니다."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "메모리가 부족 하 여 문자열 버퍼에 쓸 수 없습니다."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "사용자에 경로 보는 데 필요한 권한이 부족 합니다."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.RenameDirectory(System.String,System.String)
  id: RenameDirectory(System.String,System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: RenameDirectory(String,String)
  nameWithType: FileSystem.RenameDirectory(String,String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.RenameDirectory(String,String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "디렉터리를 이름을 바꿉니다."
  remarks: "디렉터리를 이동 하려면이 메서드를 사용할 수 없습니다. 사용 하 여는 `MoveDirectory` 메서드를 이동 하 고 디렉터리의 이름을 바꿉니다."
  example:
  - "This example renames the `Test` directory to `SecondTest`.  \n  \n [!code-vb[VbVbcnMyFileSystem#13](~/add/codesnippet/visualbasic/313534a3-4c32-4f3e-9ae2-_1.vb)]"
  syntax:
    content: public static void RenameDirectory (string directory, string newName);
    parameters:
    - id: directory
      type: System.String
      description: "경로 이름을 변경 해야 하는 디렉터리의 이름입니다."
    - id: newName
      type: System.String
      description: "디렉터리에 대 한 새 이름입니다."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.RenameDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>newName</code>경로 정보를 포함합니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>directory</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>.       -또는- <code>newName</code> 은 <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> 또는 빈 문자열입니다."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "디렉터리가 존재 하지 않습니다."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "기존 파일 또는 디렉터리에 지정 된 이름의 <code> newName </code>합니다."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "경로 248 자를 초과합니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "경로에 파일 또는 디렉터리 이름 콜론 (:)이 포함 된 없거나 형식이 잘못 되었습니다."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "사용자에 경로 보는 데 필요한 권한이 부족 합니다."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "사용자에 필요한 권한이 없습니다."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.RenameFile(System.String,System.String)
  id: RenameFile(System.String,System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: RenameFile(String,String)
  nameWithType: FileSystem.RenameFile(String,String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.RenameFile(String,String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "파일을 이름을 바꿉니다."
  remarks: "파일을 이동 하려면이 메서드를 사용할 수 없습니다. 사용 하 여는 <xref:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile%2A>메서드를 이동 하 고 파일 이름을 바꿉니다.</xref:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile%2A>       다음 표에서 관련 된 작업의 예는 `My.Computer.FileSystem.RenameFile` 메서드.      |||   |-|-|   | | 참조 |   | 파일 이름 바꾸기 | [하는 방법: Visual Basic에서 파일 이름 바꾸기](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example renames the file `Test.txt` to `SecondTest.txt`.  \n  \n [!code-vb[VbVbcnMyFileSystem#1](~/add/codesnippet/visualbasic/39c53cd2-9477-4e35-83cb-_1.vb)]  \n  \n Change \"`C:\\Test.txt`\" to the path and file name of the file that you want to rename."
  syntax:
    content: public static void RenameFile (string file, string newName);
    parameters:
    - id: file
      type: System.String
      description: "파일의 이름을 바꿀 수입니다."
    - id: newName
      type: System.String
      description: "파일의 새 이름입니다."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.RenameFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>newName</code>경로 정보를 포함 하거나이 백슬래시로 끝납니다 (\\\\)."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>.       -또는- <code>newName</code> 은 <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> 또는 빈 문자열입니다."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "디렉터리가 존재 하지 않습니다."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "기존 파일 또는 디렉터리에 지정 된 이름의 <code> newName </code>합니다."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "경로가는 시스템 정의 최대 길이 초과합니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "경로에 파일 또는 디렉터리 이름 콜론 (:)이 포함 된 없거나 형식이 잘못 되었습니다."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "사용자에 경로 보는 데 필요한 권한이 부족 합니다."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "사용자에 필요한 권한이 없습니다."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.WriteAllBytes(System.String,System.Byte[],System.Boolean)
  id: WriteAllBytes(System.String,System.Byte[],System.Boolean)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: WriteAllBytes(String,Byte[],Boolean)
  nameWithType: FileSystem.WriteAllBytes(String,Byte[],Boolean)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.WriteAllBytes(String,Byte[],Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "이진 파일에 데이터를 씁니다."
  remarks: "지정된 된 경로, 파일 이름을 제외한 유효 하지 않을 경우는 <xref:System.IO.DirectoryNotFoundException>예외가 throw 됩니다.</xref:System.IO.DirectoryNotFoundException> 경로가 유효한 파일이 존재 하지 않는 경우에 파일이 생성 됩니다.      > [!NOTE] >는 `WriteAllBytes` 메서드 파일을 엽니다를 기록 하 고 다음 닫습니다. 사용 하는 코드는 `WriteAllBytes` 메서드는 사용 하는 코드 보다 간단는 <xref:System.IO.BinaryWriter>개체입니다.</xref:System.IO.BinaryWriter> 그러나 데이터는 루프를 사용 하 여 파일에 추가 하는 경우, 한 <xref:System.IO.BinaryWriter>개체를 열고 파일을 두 번 닫을 하나만 있으므로 더 나은 성능을 제공할 수 있습니다.</xref:System.IO.BinaryWriter>       다음 표에서 관련 된 작업의 예는 `My.Computer.FileSystem.WriteAllBytes` 메서드.      |||   |-|-|   | | 참조 |   | 이진 파일에 쓸 | [하는 방법: Visual Basic에서 이진 파일에 쓰기](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example appends the data array `CustomerData` to the file `CollectedData`.  \n  \n [!code-vb[VbVbcnMyFileSystem#50](~/add/codesnippet/visualbasic/45dbfd83-d122-4e5f-a7b8-_1.vb)]"
  syntax:
    content: public static void WriteAllBytes (string file, byte[] data, bool append);
    parameters:
    - id: file
      type: System.String
      description: "경로 파일에 쓰여지도록의 이름입니다."
    - id: data
      type: System.Byte[]
      description: "데이터를 파일에 기록 합니다."
    - id: append
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>파일 내용을;에 추가 하려면 <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref> 파일 내용을 덮어쓸 수 있습니다. 기본값은 <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>합니다."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.WriteAllBytes*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '다음 이유 중 하나로 경로가 올바르지 않습니다: 길이가&0; 인 문자열 이거나; 공백 문자만; 포함 잘못 된 문자가 있습니다. 장치 경로 또는 (붙습니다 \\ \\.\\);는 후행 슬래시로 끝나는 합니다.'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "파일이 존재 하지 않습니다."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "파일이 다른 프로세스에서 사용 중인 또는 I/O 오류가 발생 했습니다."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "경로가는 시스템 정의 최대 길이 초과합니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "경로에 파일 또는 디렉터리 이름 콜론 (:)이 포함 된 없거나 형식이 잘못 되었습니다."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "메모리가 부족 하 여 문자열 버퍼에 쓸 수 없습니다."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "사용자에 경로 보는 데 필요한 권한이 부족 합니다."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText(System.String,System.String,System.Boolean)
  id: WriteAllText(System.String,System.String,System.Boolean)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: WriteAllText(String,String,Boolean)
  nameWithType: FileSystem.WriteAllText(String,String,Boolean)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText(String,String,Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "텍스트 파일에 씁니다."
  remarks: "인코딩은 u t F-8의 파일에 쓰는 데 사용 됩니다. 다른 인코딩을 지정 하려면 다른 오버 로드를 사용 하 여는 <xref:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText%2A>메서드.</xref:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText%2A>       지정된 된 파일 존재 하지 않는 경우 자동으로 만들어집니다.       지정 된 인코딩을 파일의 기존 인코딩과 일치 하지 않으면 지정된 코딩이 무시 됩니다.      > [!NOTE] >는 `WriteAllText` 메서드 파일을 엽니다를 기록 하 고 다음 닫습니다. 사용 하는 코드는 `WriteAllText` 메서드는 사용 하는 코드 보다 간단는 <xref:System.IO.StreamWriter>개체입니다.</xref:System.IO.StreamWriter> 그러나 추가 하는 경우 문자열 파일에는 루프를 사용 하 여,는 <xref:System.IO.StreamWriter>개체를 열고 파일을 한 번 닫을 하나만 있으므로 더 나은 성능을 제공할 수 있습니다.</xref:System.IO.StreamWriter> 자세한 내용은 참조는 <xref:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter%2A>메서드.</xref:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter%2A>       다음 표에서 관련 된 작업의 예를 보여 줍니다.는 `My.Computer.FileSystem.WriteAllText` 메서드.      |||   |-|-|   | | 참조 |   | 파일에 텍스트 쓰기 | [하는 방법: Visual Basic에서 파일에 텍스트 쓰기](~/add/includes/ajax-current-ext-md.md)|   | 텍스트 파일에 추가 | [하는 방법: Visual Basic에서 텍스트 파일에 추가](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example writes the line `\"This is new text to be added.\"` to the file `Test.txt`, overwriting any existing text in the file.  \n  \n [!code-vb[VbRefFile#21](~/add/codesnippet/visualbasic/1188930b-d690-4775-ad99-_1.vb)]  \n  \n This example writes the names of the files in the `Documents and Settings` folder to `FileList.txt`, inserting a carriage return between each for better readability.  \n  \n [!code-vb[VbRefFile#22](~/add/codesnippet/visualbasic/1188930b-d690-4775-ad99-_2.vb)]"
  syntax:
    content: public static void WriteAllText (string file, string text, bool append);
    parameters:
    - id: file
      type: System.String
      description: "파일에 쓸 수입니다."
    - id: text
      type: System.String
      description: "텍스트 파일에 쓸 수입니다."
    - id: append
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>파일의 내용에 추가 하려면 <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref> 파일의 내용을 덮어쓸 수 있습니다."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '다음 이유 중 하나로 경로가 올바르지 않습니다: 길이가&0; 인 문자열 이거나; 공백 문자만; 포함 잘못 된 문자가 있습니다. 장치 경로 또는 (붙습니다 \\ \\.\\);는 후행 슬래시로 끝나는 합니다.'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "파일이 존재 하지 않습니다."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "파일이 다른 프로세스에서 사용 중인 또는 I/O 오류가 발생 했습니다."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "경로가는 시스템 정의 최대 길이 초과합니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "경로에 파일 또는 디렉터리 이름 콜론 (:)이 포함 된 없거나 형식이 잘못 되었습니다."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "메모리가 부족 하 여 문자열 버퍼에 쓸 수 없습니다."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "사용자에 경로 보는 데 필요한 권한이 부족 합니다."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText(System.String,System.String,System.Boolean,System.Text.Encoding)
  id: WriteAllText(System.String,System.String,System.Boolean,System.Text.Encoding)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: WriteAllText(String,String,Boolean,Encoding)
  nameWithType: FileSystem.WriteAllText(String,String,Boolean,Encoding)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText(String,String,Boolean,Encoding)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "텍스트 파일에 씁니다."
  remarks: "지정된 된 파일 존재 하지 않는 경우 자동으로 만들어집니다.       지정 된 인코딩을 파일의 기존 인코딩과 일치 하지 않으면 지정된 코딩이 무시 됩니다.      > [!NOTE] >는 `WriteAllText` 메서드 파일을 엽니다를 기록 하 고 다음 닫습니다. 사용 하는 코드는 `WriteAllText` 메서드는 사용 하는 코드 보다 간단는 <xref:System.IO.StreamWriter>개체입니다.</xref:System.IO.StreamWriter> 그러나 추가 하는 경우 문자열 파일에는 루프를 사용 하 여,는 <xref:System.IO.StreamWriter>개체를 열고 파일을 한 번 닫을 하나만 있으므로 더 나은 성능을 제공할 수 있습니다.</xref:System.IO.StreamWriter> 자세한 내용은 참조는 <xref:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter%2A>메서드.</xref:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter%2A>       다음 표에서 관련 된 작업의 예를 보여 줍니다.는 `My.Computer.FileSystem.WriteAllText` 메서드.      |||   |-|-|   | | 참조 |   | 파일에 텍스트 쓰기 | [하는 방법: Visual Basic에서 파일에 텍스트 쓰기](~/add/includes/ajax-current-ext-md.md)|   | 텍스트 파일에 추가 | [하는 방법: Visual Basic에서 텍스트 파일에 추가](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example writes the line `\"This is new text to be added.\"` to the file `Test.txt`, overwriting any existing text in the file.  \n  \n [!code-vb[VbRefFile#21](~/add/codesnippet/visualbasic/aa785e67-61d7-4ff0-b9bf-_1.vb)]  \n  \n This example writes the names of the files in the `Documents and Settings` folder to `FileList.txt`, inserting a carriage return between each for better readability.  \n  \n [!code-vb[VbRefFile#22](~/add/codesnippet/visualbasic/aa785e67-61d7-4ff0-b9bf-_2.vb)]"
  syntax:
    content: public static void WriteAllText (string file, string text, bool append, System.Text.Encoding encoding);
    parameters:
    - id: file
      type: System.String
      description: "파일에 쓸 수입니다."
    - id: text
      type: System.String
      description: "텍스트 파일에 쓸 수입니다."
    - id: append
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>파일의 내용에 추가 하려면 <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref> 파일의 내용을 덮어쓸 수 있습니다."
    - id: encoding
      type: System.Text.Encoding
      description: "파일에 쓸 때 사용할 인코딩입니다."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '다음 이유 중 하나로 경로가 올바르지 않습니다: 길이가&0; 인 문자열 이거나; 공백 문자만; 포함 잘못 된 문자가 있습니다. 장치 경로 또는 (붙습니다 \\ \\.\\);는 후행 슬래시로 끝나는 합니다.'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "파일이 존재 하지 않습니다."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "파일이 다른 프로세스에서 사용 중인 또는 I/O 오류가 발생 했습니다."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "경로가는 시스템 정의 최대 길이 초과합니다."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "경로에 파일 또는 디렉터리 이름 콜론 (:)이 포함 된 없거나 형식이 잘못 되었습니다."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "메모리가 부족 하 여 문자열 버퍼에 쓸 수 없습니다."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "사용자에 경로 보는 데 필요한 권한이 부족 합니다."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.IO.DirectoryNotFoundException
  isExternal: true
  name: System.IO.DirectoryNotFoundException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.IO.PathTooLongException
  isExternal: true
  name: System.IO.PathTooLongException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.UnauthorizedAccessException
  isExternal: true
  name: System.UnauthorizedAccessException
- uid: System.OperationCanceledException
  isExternal: true
  name: System.OperationCanceledException
- uid: System.IO.FileNotFoundException
  isExternal: true
  name: System.IO.FileNotFoundException
- uid: Microsoft.VisualBasic.FileIO.MalformedLineException
  parent: Microsoft.VisualBasic.FileIO
  isExternal: false
  name: MalformedLineException
  nameWithType: MalformedLineException
  fullName: Microsoft.VisualBasic.FileIO.MalformedLineException
- uid: System.OutOfMemoryException
  isExternal: true
  name: System.OutOfMemoryException
- uid: Microsoft.VisualBasic.FileIO.FileSystem.#ctor
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: FileSystem()
  nameWithType: FileSystem.FileSystem()
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.FileSystem()
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CombinePath(System.String,System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: CombinePath(String,String)
  nameWithType: FileSystem.CombinePath(String,String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CombinePath(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: CopyDirectory(String,String)
  nameWithType: FileSystem.CopyDirectory(String,String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(String,String)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: CopyDirectory(String,String,UIOption)
  nameWithType: FileSystem.CopyDirectory(String,String,UIOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(String,String,UIOption)
- uid: Microsoft.VisualBasic.FileIO.UIOption
  parent: Microsoft.VisualBasic.FileIO
  isExternal: false
  name: UIOption
  nameWithType: UIOption
  fullName: Microsoft.VisualBasic.FileIO.UIOption
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,System.Boolean)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: CopyDirectory(String,String,Boolean)
  nameWithType: FileSystem.CopyDirectory(String,String,Boolean)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(String,String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: CopyDirectory(String,String,UIOption,UICancelOption)
  nameWithType: FileSystem.CopyDirectory(String,String,UIOption,UICancelOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(String,String,UIOption,UICancelOption)
- uid: Microsoft.VisualBasic.FileIO.UICancelOption
  parent: Microsoft.VisualBasic.FileIO
  isExternal: false
  name: UICancelOption
  nameWithType: UICancelOption
  fullName: Microsoft.VisualBasic.FileIO.UICancelOption
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: CopyFile(String,String)
  nameWithType: FileSystem.CopyFile(String,String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(String,String)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: CopyFile(String,String,UIOption)
  nameWithType: FileSystem.CopyFile(String,String,UIOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(String,String,UIOption)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,System.Boolean)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: CopyFile(String,String,Boolean)
  nameWithType: FileSystem.CopyFile(String,String,Boolean)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(String,String,Boolean)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: CopyFile(String,String,UIOption,UICancelOption)
  nameWithType: FileSystem.CopyFile(String,String,UIOption,UICancelOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(String,String,UIOption,UICancelOption)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CreateDirectory(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: CreateDirectory(String)
  nameWithType: FileSystem.CreateDirectory(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CreateDirectory(String)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: CurrentDirectory
  nameWithType: FileSystem.CurrentDirectory
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory
- uid: Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.DeleteDirectoryOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: DeleteDirectory(String,DeleteDirectoryOption)
  nameWithType: FileSystem.DeleteDirectory(String,DeleteDirectoryOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(String,DeleteDirectoryOption)
- uid: Microsoft.VisualBasic.FileIO.DeleteDirectoryOption
  parent: Microsoft.VisualBasic.FileIO
  isExternal: false
  name: DeleteDirectoryOption
  nameWithType: DeleteDirectoryOption
  fullName: Microsoft.VisualBasic.FileIO.DeleteDirectoryOption
- uid: Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: DeleteDirectory(String,UIOption,RecycleOption)
  nameWithType: FileSystem.DeleteDirectory(String,UIOption,RecycleOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(String,UIOption,RecycleOption)
- uid: Microsoft.VisualBasic.FileIO.RecycleOption
  parent: Microsoft.VisualBasic.FileIO
  isExternal: false
  name: RecycleOption
  nameWithType: RecycleOption
  fullName: Microsoft.VisualBasic.FileIO.RecycleOption
- uid: Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: DeleteDirectory(String,UIOption,RecycleOption,UICancelOption)
  nameWithType: FileSystem.DeleteDirectory(String,UIOption,RecycleOption,UICancelOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(String,UIOption,RecycleOption,UICancelOption)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: DeleteFile(String)
  nameWithType: FileSystem.DeleteFile(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(String)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: DeleteFile(String,UIOption,RecycleOption)
  nameWithType: FileSystem.DeleteFile(String,UIOption,RecycleOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(String,UIOption,RecycleOption)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: DeleteFile(String,UIOption,RecycleOption,UICancelOption)
  nameWithType: FileSystem.DeleteFile(String,UIOption,RecycleOption,UICancelOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(String,UIOption,RecycleOption,UICancelOption)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.DirectoryExists(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: DirectoryExists(String)
  nameWithType: FileSystem.DirectoryExists(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.DirectoryExists(String)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.Drives
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: Drives
  nameWithType: FileSystem.Drives
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.Drives
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.IO.DriveInfo}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<DriveInfo>
  nameWithType: ReadOnlyCollection<DriveInfo>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.IO.DriveInfo>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.IO.DriveInfo>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IO.DriveInfo
    name: DriveInfo
    nameWithType: DriveInfo
    fullName: DriveInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.VisualBasic.FileIO.FileSystem.FileExists(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: FileExists(String)
  nameWithType: FileSystem.FileExists(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.FileExists(String)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: FindInFiles(String,String,Boolean,SearchOption)
  nameWithType: FileSystem.FindInFiles(String,String,Boolean,SearchOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles(String,String,Boolean,SearchOption)
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<String>
  nameWithType: ReadOnlyCollection<String>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.String>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.VisualBasic.FileIO.SearchOption
  parent: Microsoft.VisualBasic.FileIO
  isExternal: false
  name: SearchOption
  nameWithType: SearchOption
  fullName: Microsoft.VisualBasic.FileIO.SearchOption
- uid: Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: FindInFiles(String,String,Boolean,SearchOption,String[])
  nameWithType: FileSystem.FindInFiles(String,String,Boolean,SearchOption,String[])
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles(String,String,Boolean,SearchOption,String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: GetDirectories(String)
  nameWithType: FileSystem.GetDirectories(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories(String)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: GetDirectories(String,SearchOption,String[])
  nameWithType: FileSystem.GetDirectories(String,SearchOption,String[])
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories(String,SearchOption,String[])
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: GetDirectoryInfo(String)
  nameWithType: FileSystem.GetDirectoryInfo(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(String)
- uid: System.IO.DirectoryInfo
  parent: System.IO
  isExternal: false
  name: DirectoryInfo
  nameWithType: DirectoryInfo
  fullName: System.IO.DirectoryInfo
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetDriveInfo(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: GetDriveInfo(String)
  nameWithType: FileSystem.GetDriveInfo(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.GetDriveInfo(String)
- uid: System.IO.DriveInfo
  parent: System.IO
  isExternal: false
  name: DriveInfo
  nameWithType: DriveInfo
  fullName: System.IO.DriveInfo
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: GetFileInfo(String)
  nameWithType: FileSystem.GetFileInfo(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(String)
- uid: System.IO.FileInfo
  parent: System.IO
  isExternal: false
  name: FileInfo
  nameWithType: FileInfo
  fullName: System.IO.FileInfo
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetFiles(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: GetFiles(String)
  nameWithType: FileSystem.GetFiles(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.GetFiles(String)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetFiles(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: GetFiles(String,SearchOption,String[])
  nameWithType: FileSystem.GetFiles(String,SearchOption,String[])
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.GetFiles(String,SearchOption,String[])
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetName(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: GetName(String)
  nameWithType: FileSystem.GetName(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.GetName(String)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetParentPath(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: GetParentPath(String)
  nameWithType: FileSystem.GetParentPath(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.GetParentPath(String)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetTempFileName
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: GetTempFileName()
  nameWithType: FileSystem.GetTempFileName()
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.GetTempFileName()
- uid: Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: MoveDirectory(String,String)
  nameWithType: FileSystem.MoveDirectory(String,String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(String,String)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: MoveDirectory(String,String,UIOption)
  nameWithType: FileSystem.MoveDirectory(String,String,UIOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(String,String,UIOption)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,System.Boolean)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: MoveDirectory(String,String,Boolean)
  nameWithType: FileSystem.MoveDirectory(String,String,Boolean)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(String,String,Boolean)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: MoveDirectory(String,String,UIOption,UICancelOption)
  nameWithType: FileSystem.MoveDirectory(String,String,UIOption,UICancelOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(String,String,UIOption,UICancelOption)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: MoveFile(String,String)
  nameWithType: FileSystem.MoveFile(String,String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(String,String)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: MoveFile(String,String,UIOption)
  nameWithType: FileSystem.MoveFile(String,String,UIOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(String,String,UIOption)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,System.Boolean)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: MoveFile(String,String,Boolean)
  nameWithType: FileSystem.MoveFile(String,String,Boolean)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(String,String,Boolean)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: MoveFile(String,String,UIOption,UICancelOption)
  nameWithType: FileSystem.MoveFile(String,String,UIOption,UICancelOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(String,String,UIOption,UICancelOption)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: OpenTextFieldParser(String)
  nameWithType: FileSystem.OpenTextFieldParser(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(String)
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser
  parent: Microsoft.VisualBasic.FileIO
  isExternal: false
  name: TextFieldParser
  nameWithType: TextFieldParser
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser
- uid: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String,System.Int32[])
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: OpenTextFieldParser(String,Int32[])
  nameWithType: FileSystem.OpenTextFieldParser(String,Int32[])
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(String,Int32[])
- uid: System.Int32[]
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32[]
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String,System.String[])
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: OpenTextFieldParser(String,String[])
  nameWithType: FileSystem.OpenTextFieldParser(String,String[])
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(String,String[])
- uid: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: OpenTextFileReader(String)
  nameWithType: FileSystem.OpenTextFileReader(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader(String)
- uid: System.IO.StreamReader
  parent: System.IO
  isExternal: true
  name: StreamReader
  nameWithType: StreamReader
  fullName: System.IO.StreamReader
- uid: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader(System.String,System.Text.Encoding)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: OpenTextFileReader(String,Encoding)
  nameWithType: FileSystem.OpenTextFileReader(String,Encoding)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader(String,Encoding)
- uid: System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter(System.String,System.Boolean)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: OpenTextFileWriter(String,Boolean)
  nameWithType: FileSystem.OpenTextFileWriter(String,Boolean)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter(String,Boolean)
- uid: System.IO.StreamWriter
  parent: System.IO
  isExternal: true
  name: StreamWriter
  nameWithType: StreamWriter
  fullName: System.IO.StreamWriter
- uid: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter(System.String,System.Boolean,System.Text.Encoding)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: OpenTextFileWriter(String,Boolean,Encoding)
  nameWithType: FileSystem.OpenTextFileWriter(String,Boolean,Encoding)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter(String,Boolean,Encoding)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.ReadAllBytes(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: ReadAllBytes(String)
  nameWithType: FileSystem.ReadAllBytes(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.ReadAllBytes(String)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: ReadAllText(String)
  nameWithType: FileSystem.ReadAllText(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText(String)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText(System.String,System.Text.Encoding)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: ReadAllText(String,Encoding)
  nameWithType: FileSystem.ReadAllText(String,Encoding)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText(String,Encoding)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.RenameDirectory(System.String,System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: RenameDirectory(String,String)
  nameWithType: FileSystem.RenameDirectory(String,String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.RenameDirectory(String,String)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.RenameFile(System.String,System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: RenameFile(String,String)
  nameWithType: FileSystem.RenameFile(String,String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.RenameFile(String,String)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.WriteAllBytes(System.String,System.Byte[],System.Boolean)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: WriteAllBytes(String,Byte[],Boolean)
  nameWithType: FileSystem.WriteAllBytes(String,Byte[],Boolean)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.WriteAllBytes(String,Byte[],Boolean)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText(System.String,System.String,System.Boolean)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: WriteAllText(String,String,Boolean)
  nameWithType: FileSystem.WriteAllText(String,String,Boolean)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText(String,String,Boolean)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText(System.String,System.String,System.Boolean,System.Text.Encoding)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: WriteAllText(String,String,Boolean,Encoding)
  nameWithType: FileSystem.WriteAllText(String,String,Boolean,Encoding)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText(String,String,Boolean,Encoding)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.#ctor*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: FileSystem
  nameWithType: FileSystem.FileSystem
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CombinePath*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: CombinePath
  nameWithType: FileSystem.CombinePath
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: CopyDirectory
  nameWithType: FileSystem.CopyDirectory
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CopyFile*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: CopyFile
  nameWithType: FileSystem.CopyFile
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CreateDirectory*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: CreateDirectory
  nameWithType: FileSystem.CreateDirectory
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: CurrentDirectory
  nameWithType: FileSystem.CurrentDirectory
- uid: Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: DeleteDirectory
  nameWithType: FileSystem.DeleteDirectory
- uid: Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: DeleteFile
  nameWithType: FileSystem.DeleteFile
- uid: Microsoft.VisualBasic.FileIO.FileSystem.DirectoryExists*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: DirectoryExists
  nameWithType: FileSystem.DirectoryExists
- uid: Microsoft.VisualBasic.FileIO.FileSystem.Drives*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: Drives
  nameWithType: FileSystem.Drives
- uid: Microsoft.VisualBasic.FileIO.FileSystem.FileExists*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: FileExists
  nameWithType: FileSystem.FileExists
- uid: Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: FindInFiles
  nameWithType: FileSystem.FindInFiles
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: GetDirectories
  nameWithType: FileSystem.GetDirectories
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: GetDirectoryInfo
  nameWithType: FileSystem.GetDirectoryInfo
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetDriveInfo*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: GetDriveInfo
  nameWithType: FileSystem.GetDriveInfo
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: GetFileInfo
  nameWithType: FileSystem.GetFileInfo
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetFiles*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: GetFiles
  nameWithType: FileSystem.GetFiles
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetName*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: GetName
  nameWithType: FileSystem.GetName
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetParentPath*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: GetParentPath
  nameWithType: FileSystem.GetParentPath
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetTempFileName*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: GetTempFileName
  nameWithType: FileSystem.GetTempFileName
- uid: Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: MoveDirectory
  nameWithType: FileSystem.MoveDirectory
- uid: Microsoft.VisualBasic.FileIO.FileSystem.MoveFile*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: MoveFile
  nameWithType: FileSystem.MoveFile
- uid: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: OpenTextFieldParser
  nameWithType: FileSystem.OpenTextFieldParser
- uid: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: OpenTextFileReader
  nameWithType: FileSystem.OpenTextFileReader
- uid: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: OpenTextFileWriter
  nameWithType: FileSystem.OpenTextFileWriter
- uid: Microsoft.VisualBasic.FileIO.FileSystem.ReadAllBytes*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: ReadAllBytes
  nameWithType: FileSystem.ReadAllBytes
- uid: Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: ReadAllText
  nameWithType: FileSystem.ReadAllText
- uid: Microsoft.VisualBasic.FileIO.FileSystem.RenameDirectory*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: RenameDirectory
  nameWithType: FileSystem.RenameDirectory
- uid: Microsoft.VisualBasic.FileIO.FileSystem.RenameFile*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: RenameFile
  nameWithType: FileSystem.RenameFile
- uid: Microsoft.VisualBasic.FileIO.FileSystem.WriteAllBytes*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: WriteAllBytes
  nameWithType: FileSystem.WriteAllBytes
- uid: Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: WriteAllText
  nameWithType: FileSystem.WriteAllText
