### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.FileIO.SpecialDirectories
  id: SpecialDirectories
  children:
  - Microsoft.VisualBasic.FileIO.SpecialDirectories.#ctor
  - Microsoft.VisualBasic.FileIO.SpecialDirectories.AllUsersApplicationData
  - Microsoft.VisualBasic.FileIO.SpecialDirectories.CurrentUserApplicationData
  - Microsoft.VisualBasic.FileIO.SpecialDirectories.Desktop
  - Microsoft.VisualBasic.FileIO.SpecialDirectories.MyDocuments
  - Microsoft.VisualBasic.FileIO.SpecialDirectories.MyMusic
  - Microsoft.VisualBasic.FileIO.SpecialDirectories.MyPictures
  - Microsoft.VisualBasic.FileIO.SpecialDirectories.ProgramFiles
  - Microsoft.VisualBasic.FileIO.SpecialDirectories.Programs
  - Microsoft.VisualBasic.FileIO.SpecialDirectories.Temp
  langs:
  - csharp
  name: SpecialDirectories
  nameWithType: SpecialDirectories
  fullName: Microsoft.VisualBasic.FileIO.SpecialDirectories
  type: Class
  summary: "일반적으로 액세스 하기 위한 속성 참조 되는 디렉터리를 제공 합니다."
  remarks: "If the path for the referenced directory is empty, usually due to the operating system not supporting the directory, a <xref:System.IO.DirectoryNotFoundException> exception is thrown.  \n  \n No backslash (\\\\) appears at the end of the path.  \n  \n The following table lists examples of tasks involving the `My.Computer.FileSystem.SpecialDirectories` object.  \n  \n|||  \n|-|-|  \n|To|See|  \n|Read from the MyDocuments directory|[How to: Retrieve the Contents of the My Documents Directory](~/add/includes/ajax-current-ext-md.md)|  \n  \n## Availability by Project Type  \n  \n|||  \n|-|-|  \n|Project type|Available|  \n|Windows Application|**Yes**|  \n|Class Library|**Yes**|  \n|Console Application|**Yes**|  \n|Windows Control Library|**Yes**|  \n|Web Control Library|**Yes**|  \n|Windows Service|**Yes**|  \n|Web Site|**Yes**|"
  example:
  - "This example returns the `filePath` for the user's Desktop directory and displays it.  \n  \n [!code-vb[VbVbcnMyFileSystem#80](~/add/codesnippet/visualbasic/t-microsoft.visualbasic._16_1.vb)]"
  syntax:
    content: public class SpecialDirectories
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.SpecialDirectories.#ctor
  id: '#ctor'
  parent: Microsoft.VisualBasic.FileIO.SpecialDirectories
  langs:
  - csharp
  name: SpecialDirectories()
  nameWithType: SpecialDirectories.SpecialDirectories()
  fullName: Microsoft.VisualBasic.FileIO.SpecialDirectories.SpecialDirectories()
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "<xref:Microsoft.VisualBasic.MyServices.FileSystemProxy.SpecialDirectories*>클래스</xref:Microsoft.VisualBasic.MyServices.FileSystemProxy.SpecialDirectories*> 의 인스턴스를 반환합니다."
  syntax:
    content: public SpecialDirectories ();
    parameters: []
  overload: Microsoft.VisualBasic.FileIO.SpecialDirectories.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.SpecialDirectories.AllUsersApplicationData
  id: AllUsersApplicationData
  parent: Microsoft.VisualBasic.FileIO.SpecialDirectories
  langs:
  - csharp
  name: AllUsersApplicationData
  nameWithType: SpecialDirectories.AllUsersApplicationData
  fullName: Microsoft.VisualBasic.FileIO.SpecialDirectories.AllUsersApplicationData
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "모든 사용자에 대 한 응용 프로그램 데이터 디렉터리를 가리키는 경로 이름을 가져옵니다."
  remarks: "`SpecialDirectories` 개체는 일반적으로 참조 되는 디렉터리에 대 한 경로 포함 합니다."
  example:
  - "This example displays the path to the Application Data directory for the all users in a <xref:System.Windows.Forms.MessageBox>.  \n  \n [!code-vb[VbVbcnMyFileSystem#79](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._16_1.vb)]"
  syntax:
    content: public static string AllUsersApplicationData { get; }
    return:
      type: System.String
      description: "모든 사용자에 대 한 응용 프로그램 데이터 디렉터리 경로입니다."
  overload: Microsoft.VisualBasic.FileIO.SpecialDirectories.AllUsersApplicationData*
  exceptions:
  - type: System.Security.Permissions.EnvironmentPermission
    commentId: T:System.Security.Permissions.EnvironmentPermission
    description: '시스템 및 사용자 환경 변수에 대 한 액세스 제어 합니다. 연관 된 열거형: <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref>합니다.'
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "경로가 비어 있는 경우 일반적으로 운영 체제 디렉터리를 지원 하지 않습니다."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.SpecialDirectories.CurrentUserApplicationData
  id: CurrentUserApplicationData
  parent: Microsoft.VisualBasic.FileIO.SpecialDirectories
  langs:
  - csharp
  name: CurrentUserApplicationData
  nameWithType: SpecialDirectories.CurrentUserApplicationData
  fullName: Microsoft.VisualBasic.FileIO.SpecialDirectories.CurrentUserApplicationData
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "현재 사용자에 대 한 응용 프로그램 데이터 디렉터리를 가리키는 경로 이름을 가져옵니다."
  remarks: "SpecialDirectories 개체는 일반적으로 참조 되는 디렉터리에 대 한 경로 포함합니다."
  example:
  - "This example displays the path to the Application Data directory for the current user in a <xref:System.Windows.Forms.MessageBox>.  \n  \n [!code-vb[VbVbcnMyFileSystem#48](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._76_1.vb)]"
  syntax:
    content: public static string CurrentUserApplicationData { get; }
    return:
      type: System.String
      description: "현재 사용자에 대 한 응용 프로그램 데이터 디렉터리 경로입니다."
  overload: Microsoft.VisualBasic.FileIO.SpecialDirectories.CurrentUserApplicationData*
  exceptions:
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "경로가 비어 있는 경우 일반적으로 운영 체제 디렉터리를 지원 하지 않습니다."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.SpecialDirectories.Desktop
  id: Desktop
  parent: Microsoft.VisualBasic.FileIO.SpecialDirectories
  langs:
  - csharp
  name: Desktop
  nameWithType: SpecialDirectories.Desktop
  fullName: Microsoft.VisualBasic.FileIO.SpecialDirectories.Desktop
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "데스크톱 디렉터리를 가리키는 경로 이름을 가져옵니다."
  remarks: "SpecialDirectories 개체는 일반적으로 참조 되는 디렉터리에 대 한 경로 포함합니다."
  example:
  - "This example displays the path for the Desktop directory in a <xref:System.Windows.Forms.MessageBox>.  \n  \n [!code-vb[VbVbcnMyFileSystem#60](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._46_1.vb)]"
  syntax:
    content: public static string Desktop { get; }
    return:
      type: System.String
      description: "데스크톱 디렉터리의 경로입니다."
  overload: Microsoft.VisualBasic.FileIO.SpecialDirectories.Desktop*
  exceptions:
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "경로가 비어 있는 경우 일반적으로 운영 체제 디렉터리를 지원 하지 않습니다."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.SpecialDirectories.MyDocuments
  id: MyDocuments
  parent: Microsoft.VisualBasic.FileIO.SpecialDirectories
  langs:
  - csharp
  name: MyDocuments
  nameWithType: SpecialDirectories.MyDocuments
  fullName: Microsoft.VisualBasic.FileIO.SpecialDirectories.MyDocuments
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "내 문서 디렉터리를 가리키는 경로 이름을 가져옵니다."
  remarks: "`SpecialDirectories` 개체는 일반적으로 참조 되는 디렉터리에 대 한 경로 포함 합니다."
  example:
  - "This example displays the path for the My Documents directory in a <xref:System.Windows.Forms.MessageBox>.  \n  \n [!code-vb[VbVbcnMyFileSystem#53](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._105_1.vb)]"
  syntax:
    content: public static string MyDocuments { get; }
    return:
      type: System.String
      description: "내 문서 디렉터리의 경로입니다."
  overload: Microsoft.VisualBasic.FileIO.SpecialDirectories.MyDocuments*
  exceptions:
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "경로가 비어 있는 경우 일반적으로 운영 체제 디렉터리를 지원 하지 않습니다."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.SpecialDirectories.MyMusic
  id: MyMusic
  parent: Microsoft.VisualBasic.FileIO.SpecialDirectories
  langs:
  - csharp
  name: MyMusic
  nameWithType: SpecialDirectories.MyMusic
  fullName: Microsoft.VisualBasic.FileIO.SpecialDirectories.MyMusic
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "내 음악 디렉터리를 가리키는 경로 이름을 가져옵니다."
  remarks: "`SpecialDirectories` 개체는 일반적으로 참조 되는 디렉터리에 대 한 경로 포함 합니다."
  example:
  - "This example displays the path for the My Music directory in a <xref:System.Windows.Forms.MessageBox>.  \n  \n [!code-vb[VbVbcnMyFileSystem#26](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._3_1.vb)]"
  syntax:
    content: public static string MyMusic { get; }
    return:
      type: System.String
      description: "내 음악 디렉터리의 경로입니다."
  overload: Microsoft.VisualBasic.FileIO.SpecialDirectories.MyMusic*
  exceptions:
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "경로가 비어 있는 경우 일반적으로 운영 체제 디렉터리를 지원 하지 않습니다."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.SpecialDirectories.MyPictures
  id: MyPictures
  parent: Microsoft.VisualBasic.FileIO.SpecialDirectories
  langs:
  - csharp
  name: MyPictures
  nameWithType: SpecialDirectories.MyPictures
  fullName: Microsoft.VisualBasic.FileIO.SpecialDirectories.MyPictures
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "내 그림 디렉터리를 가리키는 경로 이름을 가져옵니다."
  remarks: "`SpecialDirectories` 개체는 일반적으로 참조 되는 디렉터리에 대 한 경로 포함 합니다."
  example:
  - "This example displays the path for the MyPictures directory in a <xref:System.Windows.Forms.MessageBox>.  \n  \n [!code-vb[VbVbcnMyFileSystem#77](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._40_1.vb)]"
  syntax:
    content: public static string MyPictures { get; }
    return:
      type: System.String
      description: "내 그림 디렉터리를 경로입니다."
  overload: Microsoft.VisualBasic.FileIO.SpecialDirectories.MyPictures*
  exceptions:
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "경로가 비어 있는 경우 일반적으로 운영 체제 디렉터리를 지원 하지 않습니다."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.SpecialDirectories.ProgramFiles
  id: ProgramFiles
  parent: Microsoft.VisualBasic.FileIO.SpecialDirectories
  langs:
  - csharp
  name: ProgramFiles
  nameWithType: SpecialDirectories.ProgramFiles
  fullName: Microsoft.VisualBasic.FileIO.SpecialDirectories.ProgramFiles
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "가리키는 경로 가져옵니다는 **Program Files** 디렉터리입니다."
  remarks: "`SpecialDirectories` 개체는 일반적으로 참조 되는 디렉터리에 대 한 경로 포함 합니다. **Program Files** 디렉터리는 컴퓨터의 프로그램 파일을 포함 합니다."
  example:
  - "This example displays the path for the **Program Files** directory in a <xref:System.Windows.Forms.MessageBox>.  \n  \n [!code-vb[VbVbcnMyFileSystem#90](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._49_1.vb)]"
  syntax:
    content: public static string ProgramFiles { get; }
    return:
      type: System.String
      description: "에 대 한 경로 **Program Files** 디렉터리입니다."
  overload: Microsoft.VisualBasic.FileIO.SpecialDirectories.ProgramFiles*
  exceptions:
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "경로가 비어 있는 경우 일반적으로 운영 체제 디렉터리를 지원 하지 않습니다."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.SpecialDirectories.Programs
  id: Programs
  parent: Microsoft.VisualBasic.FileIO.SpecialDirectories
  langs:
  - csharp
  name: Programs
  nameWithType: SpecialDirectories.Programs
  fullName: Microsoft.VisualBasic.FileIO.SpecialDirectories.Programs
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "프로그램 디렉터리를 가리키는 경로 이름을 가져옵니다."
  remarks: "`SpecialDirectories` 개체는 일반적으로 참조 되는 디렉터리에 대 한 경로 포함 합니다. 프로그램 디렉터리에 사용자의 프로그램 그룹이 포함 되어 있습니다."
  example:
  - "This example displays the path for the Programs directory in a <xref:System.Windows.Forms.MessageBox>.  \n  \n [!code-vb[VbVbcnMyFileSystem#61](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._22_1.vb)]"
  syntax:
    content: public static string Programs { get; }
    return:
      type: System.String
      description: "프로그램 디렉터리의 경로입니다."
  overload: Microsoft.VisualBasic.FileIO.SpecialDirectories.Programs*
  exceptions:
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "경로가 비어 있는 경우 일반적으로 운영 체제 디렉터리를 지원 하지 않습니다."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.SpecialDirectories.Temp
  id: Temp
  parent: Microsoft.VisualBasic.FileIO.SpecialDirectories
  langs:
  - csharp
  name: Temp
  nameWithType: SpecialDirectories.Temp
  fullName: Microsoft.VisualBasic.FileIO.SpecialDirectories.Temp
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Temp 디렉터리를 가리키는 경로 이름을 가져옵니다."
  remarks: "`SpecialDirectories` 개체는 일반적으로 참조 되는 디렉터리에 대 한 경로 포함 합니다."
  example:
  - "This example displays the path for the Temp directory in a <xref:System.Windows.Forms.MessageBox>.  \n  \n [!code-vb[VbVbcnMyFileSystem#31](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._90_1.vb)]"
  syntax:
    content: public static string Temp { get; }
    return:
      type: System.String
      description: "Temp 디렉터리에 대 한 경로입니다."
  overload: Microsoft.VisualBasic.FileIO.SpecialDirectories.Temp*
  exceptions:
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "경로가 비어 있는 경우 일반적으로 운영 체제 디렉터리를 지원 하지 않습니다."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Security.Permissions.EnvironmentPermission
  parent: System.Security.Permissions
  isExternal: false
  name: EnvironmentPermission
  nameWithType: EnvironmentPermission
  fullName: System.Security.Permissions.EnvironmentPermission
- uid: System.IO.DirectoryNotFoundException
  isExternal: true
  name: System.IO.DirectoryNotFoundException
- uid: Microsoft.VisualBasic.FileIO.SpecialDirectories.#ctor
  parent: Microsoft.VisualBasic.FileIO.SpecialDirectories
  isExternal: false
  name: SpecialDirectories()
  nameWithType: SpecialDirectories.SpecialDirectories()
  fullName: Microsoft.VisualBasic.FileIO.SpecialDirectories.SpecialDirectories()
- uid: Microsoft.VisualBasic.FileIO.SpecialDirectories.AllUsersApplicationData
  parent: Microsoft.VisualBasic.FileIO.SpecialDirectories
  isExternal: false
  name: AllUsersApplicationData
  nameWithType: SpecialDirectories.AllUsersApplicationData
  fullName: Microsoft.VisualBasic.FileIO.SpecialDirectories.AllUsersApplicationData
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.VisualBasic.FileIO.SpecialDirectories.CurrentUserApplicationData
  parent: Microsoft.VisualBasic.FileIO.SpecialDirectories
  isExternal: false
  name: CurrentUserApplicationData
  nameWithType: SpecialDirectories.CurrentUserApplicationData
  fullName: Microsoft.VisualBasic.FileIO.SpecialDirectories.CurrentUserApplicationData
- uid: Microsoft.VisualBasic.FileIO.SpecialDirectories.Desktop
  parent: Microsoft.VisualBasic.FileIO.SpecialDirectories
  isExternal: false
  name: Desktop
  nameWithType: SpecialDirectories.Desktop
  fullName: Microsoft.VisualBasic.FileIO.SpecialDirectories.Desktop
- uid: Microsoft.VisualBasic.FileIO.SpecialDirectories.MyDocuments
  parent: Microsoft.VisualBasic.FileIO.SpecialDirectories
  isExternal: false
  name: MyDocuments
  nameWithType: SpecialDirectories.MyDocuments
  fullName: Microsoft.VisualBasic.FileIO.SpecialDirectories.MyDocuments
- uid: Microsoft.VisualBasic.FileIO.SpecialDirectories.MyMusic
  parent: Microsoft.VisualBasic.FileIO.SpecialDirectories
  isExternal: false
  name: MyMusic
  nameWithType: SpecialDirectories.MyMusic
  fullName: Microsoft.VisualBasic.FileIO.SpecialDirectories.MyMusic
- uid: Microsoft.VisualBasic.FileIO.SpecialDirectories.MyPictures
  parent: Microsoft.VisualBasic.FileIO.SpecialDirectories
  isExternal: false
  name: MyPictures
  nameWithType: SpecialDirectories.MyPictures
  fullName: Microsoft.VisualBasic.FileIO.SpecialDirectories.MyPictures
- uid: Microsoft.VisualBasic.FileIO.SpecialDirectories.ProgramFiles
  parent: Microsoft.VisualBasic.FileIO.SpecialDirectories
  isExternal: false
  name: ProgramFiles
  nameWithType: SpecialDirectories.ProgramFiles
  fullName: Microsoft.VisualBasic.FileIO.SpecialDirectories.ProgramFiles
- uid: Microsoft.VisualBasic.FileIO.SpecialDirectories.Programs
  parent: Microsoft.VisualBasic.FileIO.SpecialDirectories
  isExternal: false
  name: Programs
  nameWithType: SpecialDirectories.Programs
  fullName: Microsoft.VisualBasic.FileIO.SpecialDirectories.Programs
- uid: Microsoft.VisualBasic.FileIO.SpecialDirectories.Temp
  parent: Microsoft.VisualBasic.FileIO.SpecialDirectories
  isExternal: false
  name: Temp
  nameWithType: SpecialDirectories.Temp
  fullName: Microsoft.VisualBasic.FileIO.SpecialDirectories.Temp
- uid: Microsoft.VisualBasic.FileIO.SpecialDirectories.#ctor*
  parent: Microsoft.VisualBasic.FileIO.SpecialDirectories
  isExternal: false
  name: SpecialDirectories
  nameWithType: SpecialDirectories.SpecialDirectories
- uid: Microsoft.VisualBasic.FileIO.SpecialDirectories.AllUsersApplicationData*
  parent: Microsoft.VisualBasic.FileIO.SpecialDirectories
  isExternal: false
  name: AllUsersApplicationData
  nameWithType: SpecialDirectories.AllUsersApplicationData
- uid: Microsoft.VisualBasic.FileIO.SpecialDirectories.CurrentUserApplicationData*
  parent: Microsoft.VisualBasic.FileIO.SpecialDirectories
  isExternal: false
  name: CurrentUserApplicationData
  nameWithType: SpecialDirectories.CurrentUserApplicationData
- uid: Microsoft.VisualBasic.FileIO.SpecialDirectories.Desktop*
  parent: Microsoft.VisualBasic.FileIO.SpecialDirectories
  isExternal: false
  name: Desktop
  nameWithType: SpecialDirectories.Desktop
- uid: Microsoft.VisualBasic.FileIO.SpecialDirectories.MyDocuments*
  parent: Microsoft.VisualBasic.FileIO.SpecialDirectories
  isExternal: false
  name: MyDocuments
  nameWithType: SpecialDirectories.MyDocuments
- uid: Microsoft.VisualBasic.FileIO.SpecialDirectories.MyMusic*
  parent: Microsoft.VisualBasic.FileIO.SpecialDirectories
  isExternal: false
  name: MyMusic
  nameWithType: SpecialDirectories.MyMusic
- uid: Microsoft.VisualBasic.FileIO.SpecialDirectories.MyPictures*
  parent: Microsoft.VisualBasic.FileIO.SpecialDirectories
  isExternal: false
  name: MyPictures
  nameWithType: SpecialDirectories.MyPictures
- uid: Microsoft.VisualBasic.FileIO.SpecialDirectories.ProgramFiles*
  parent: Microsoft.VisualBasic.FileIO.SpecialDirectories
  isExternal: false
  name: ProgramFiles
  nameWithType: SpecialDirectories.ProgramFiles
- uid: Microsoft.VisualBasic.FileIO.SpecialDirectories.Programs*
  parent: Microsoft.VisualBasic.FileIO.SpecialDirectories
  isExternal: false
  name: Programs
  nameWithType: SpecialDirectories.Programs
- uid: Microsoft.VisualBasic.FileIO.SpecialDirectories.Temp*
  parent: Microsoft.VisualBasic.FileIO.SpecialDirectories
  isExternal: false
  name: Temp
  nameWithType: SpecialDirectories.Temp
