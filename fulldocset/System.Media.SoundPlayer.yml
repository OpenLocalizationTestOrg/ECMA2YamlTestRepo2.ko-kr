### YamlMime:ManagedReference
items:
- uid: System.Media.SoundPlayer
  id: SoundPlayer
  children:
  - System.Media.SoundPlayer.#ctor
  - System.Media.SoundPlayer.#ctor(System.IO.Stream)
  - System.Media.SoundPlayer.#ctor(System.String)
  - System.Media.SoundPlayer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Media.SoundPlayer.IsLoadCompleted
  - System.Media.SoundPlayer.Load
  - System.Media.SoundPlayer.LoadAsync
  - System.Media.SoundPlayer.LoadCompleted
  - System.Media.SoundPlayer.LoadTimeout
  - System.Media.SoundPlayer.OnLoadCompleted(System.ComponentModel.AsyncCompletedEventArgs)
  - System.Media.SoundPlayer.OnSoundLocationChanged(System.EventArgs)
  - System.Media.SoundPlayer.OnStreamChanged(System.EventArgs)
  - System.Media.SoundPlayer.Play
  - System.Media.SoundPlayer.PlayLooping
  - System.Media.SoundPlayer.PlaySync
  - System.Media.SoundPlayer.SoundLocation
  - System.Media.SoundPlayer.SoundLocationChanged
  - System.Media.SoundPlayer.Stop
  - System.Media.SoundPlayer.Stream
  - System.Media.SoundPlayer.StreamChanged
  - System.Media.SoundPlayer.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Media.SoundPlayer.Tag
  langs:
  - csharp
  name: SoundPlayer
  nameWithType: SoundPlayer
  fullName: System.Media.SoundPlayer
  type: Class
  summary: ".Wav 파일에서 소리 재생을 제어 합니다."
  remarks: "SoundPlayer 클래스 로드 하 고.wav 파일 재생을 위한 간단한 인터페이스를 제공 합니다. SoundPlayer 클래스에서는.wav 파일에서 URL, 파일 경로 로드할 수는 <xref:System.IO.Stream>.wav 파일 또는.wav 파일을 포함 하는 포함된 리소스를 포함 하는.</xref:System.IO.Stream>       SoundPlayer 클래스를 사용 하 여 소리를 재생 하려면 SoundPlayer.wav 파일에 대 한 경로 사용 하 여 구성 하 고 재생 메서드 중 하나를 호출 합니다. .Wav 파일 중 하나를 설정 하거나 생성자 중 하나를 사용 하 여 재생을 확인할 수 있습니다는 <xref:System.Media.SoundPlayer.SoundLocation%2A>또는 <xref:System.Media.SoundPlayer.Stream%2A>속성.</xref:System.Media.SoundPlayer.Stream%2A> </xref:System.Media.SoundPlayer.SoundLocation%2A> Load 메서드 중 하나를 사용 하 여 재생 하기 전에 파일을 로드할 수 또는 로드 재생 메서드 중 하나를 호출할 때까지 지연 될 수 있습니다. SoundPlayer에서.wav 파일을 로드 하도록 구성 된 <xref:System.IO.Stream>또는 재생을 시작 하기 전에 URL 메모리로.wav 파일 로드 해야 합니다.</xref:System.IO.Stream>       로드 하거나 대기가 동기적인 또는 비동기적인지.wav 파일을 재생할 수 있습니다. 동기 로드를 호출 하거나 메서드를 호출 하는 스레드에서 י ֱ  그리기 및 기타 이벤트가 발생할 수 있습니다는 메서드가 반환 될 때까지 대기 합니다. 비동기 로드 또는 플레이 메서드를 호출 하면 호출 스레드가 중단 없이 계속 사용 합니다. 비동기 메서드 호출에 대 한 자세한 내용은 참조 하십시오. [하는 방법: 백그라운드에서 작업 실행](~/add/includes/ajax-current-ext-md.md)합니다.       SoundPlayer.wav 파일을 로드 완료 되 면 발생는 <xref:System.Media.SoundPlayer.LoadCompleted>이벤트.</xref:System.Media.SoundPlayer.LoadCompleted> 검사할 수 있습니다는 <xref:System.ComponentModel.AsyncCompletedEventArgs>부하 성공 또는 실패 여부를 확인 하 여 이벤트 처리기의.</xref:System.ComponentModel.AsyncCompletedEventArgs> <xref:System.Media.SoundPlayer.SoundLocationChanged>오디오 소스가 새 파일 경로 또는 URL로 설정 될 때 이벤트가 발생 합니다.</xref:System.Media.SoundPlayer.SoundLocationChanged> <xref:System.Media.SoundPlayer.StreamChanged>오디오 소스에 새 <xref:System.IO.Stream>.</xref:System.IO.Stream> 로 설정 된 경우 이벤트는 발생 합니다.</xref:System.Media.SoundPlayer.StreamChanged> 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.       SoundPlayer에 대 한 자세한 내용은 참조 [SoundPlayer 클래스 개요](~/add/includes/ajax-current-ext-md.md)합니다.      > [!NOTE] > The SoundPlayer 클래스.wma 또는.mp3 같은 다른 파일 형식을 재생할 수 없습니다. 다른 파일 형식을 재생 하려는 경우에 Windows Media Player 컨트롤을 사용할 수 있습니다. 자세한 내용은 참조 [Windows 미디어 플레이어 컨트롤을 사용 하 여.NET Framework 솔루션에서](http://go.microsoft.com/fwlink/?LinkId=131267) 및 [Visual Basic.NET 및 C# Windows Media Player 개체 모델 참조](http://go.microsoft.com/fwlink/?LinkId=131269) Windows Media Player SDK에 있습니다."
  example:
  - "The following code example demonstrates the use of the SoundPlayer class for playing .wav files from a local path or a Uniform Resource Identifier (URI).  \n  \n [!code-vb[System.Windows.Forms.Sound#1](~/add/codesnippet/visualbasic/t-system.media.soundplayer_1.vb)]\n [!code-cpp[System.Windows.Forms.Sound#1](~/add/codesnippet/cpp/t-system.media.soundplayer_1.cpp)]\n [!code-cs[System.Windows.Forms.Sound#1](~/add/codesnippet/csharp/t-system.media.soundplayer_1.cs)]"
  syntax:
    content: >-
      [System.ComponentModel.ToolboxItem(false)]

      public class SoundPlayer : System.ComponentModel.Component, System.Runtime.Serialization.ISerializable
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  implements:
  - System.Runtime.Serialization.ISerializable
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Dispose(System.Boolean)
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Media.SoundPlayer.#ctor
  id: '#ctor'
  parent: System.Media.SoundPlayer
  langs:
  - csharp
  name: SoundPlayer()
  nameWithType: SoundPlayer.SoundPlayer()
  fullName: System.Media.SoundPlayer.SoundPlayer()
  type: Constructor
  assemblies:
  - System
  namespace: System.Media
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Media.SoundPlayer&quot;> </xref> 클래스입니다."
  remarks: "이 생성자는 <xref:System.Media.SoundPlayer>오디오 소스 없는.</xref:System.Media.SoundPlayer> 오디오 소스 경로로 구성 될 때까지 <xref:System.Media.SoundPlayer>됩니다 경고음을 재생 해당 재생이 메서드 중 하나를 호출할 때.</xref:System.Media.SoundPlayer>"
  syntax:
    content: public SoundPlayer ();
    parameters: []
  overload: System.Media.SoundPlayer.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Media.SoundPlayer.#ctor(System.IO.Stream)
  id: '#ctor(System.IO.Stream)'
  parent: System.Media.SoundPlayer
  langs:
  - csharp
  name: SoundPlayer(Stream)
  nameWithType: SoundPlayer.SoundPlayer(Stream)
  fullName: System.Media.SoundPlayer.SoundPlayer(Stream)
  type: Constructor
  assemblies:
  - System
  namespace: System.Media
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Media.SoundPlayer&quot;> </xref> 클래스 내에 지정 된 <xref:System.IO.Stream>.</xref:System.IO.Stream> .wav 파일을 연결 하 고"
  remarks: "<xref:System.IO.Stream>에 전달 되는 `stream` 매개 변수 이어야 합니다는 <xref:System.IO.Stream>.wav 파일을 포함 하.</xref:System.IO.Stream> </xref:System.IO.Stream> 반환 된 데이터는 <xref:System.IO.Stream.Read%2A>의 메서드는 <xref:System.IO.Stream>.wav 파일 내에서 데이터 여야 합니다.</xref:System.IO.Stream> </xref:System.IO.Stream.Read%2A>"
  syntax:
    content: public SoundPlayer (System.IO.Stream stream);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "A <xref:System.IO.Stream>.wav 파일.</xref:System.IO.Stream>"
  overload: System.Media.SoundPlayer.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Media.SoundPlayer.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Media.SoundPlayer
  langs:
  - csharp
  name: SoundPlayer(String)
  nameWithType: SoundPlayer.SoundPlayer(String)
  fullName: System.Media.SoundPlayer.SoundPlayer(String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Media
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Media.SoundPlayer&quot;> </xref> 클래스 하 고 지정 된.wav 파일을 연결 합니다."
  remarks: "에 전달 되는 문자열은 `soundLocation` 매개 변수는 파일 경로 또는.wav 파일에 대 한 일 수 있습니다. 경로 또는 URL 유효 하지 않을 경우, 고 <xref:System.Media.SoundPlayer>부하에 대 한 생성 되지만 후속 호출에 계속 됩니다 또는 재생 메서드가 실패 합니다.</xref:System.Media.SoundPlayer>"
  syntax:
    content: public SoundPlayer (string soundLocation);
    parameters:
    - id: soundLocation
      type: System.String
      description: "로드할.wav 파일의 위치입니다."
  overload: System.Media.SoundPlayer.#ctor*
  exceptions:
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: "에 지정 된 URL 값 <code> soundLocation </code> 확인할 수 없습니다."
  platform:
  - net462
- uid: System.Media.SoundPlayer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.Media.SoundPlayer
  langs:
  - csharp
  name: SoundPlayer(SerializationInfo,StreamingContext)
  nameWithType: SoundPlayer.SoundPlayer(SerializationInfo,StreamingContext)
  fullName: System.Media.SoundPlayer.SoundPlayer(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - System
  namespace: System.Media
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Media.SoundPlayer&quot;> </xref> 클래스입니다."
  syntax:
    content: protected SoundPlayer (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: serializationInfo
      type: System.Runtime.Serialization.SerializationInfo
      description: "<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> deserialization에 사용할 수 있습니다."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "Deserialization에 사용할 대상입니다."
  overload: System.Media.SoundPlayer.#ctor*
  exceptions:
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: "<xref:System.Media.SoundPlayer.SoundLocation*>에 지정 된 <code> serializationInfo </code> 확인할 수 없습니다.</xref:System.Media.SoundPlayer.SoundLocation*>"
  platform:
  - net462
- uid: System.Media.SoundPlayer.IsLoadCompleted
  id: IsLoadCompleted
  parent: System.Media.SoundPlayer
  langs:
  - csharp
  name: IsLoadCompleted
  nameWithType: SoundPlayer.IsLoadCompleted
  fullName: System.Media.SoundPlayer.IsLoadCompleted
  type: Property
  assemblies:
  - System
  namespace: System.Media
  summary: ".Wav 파일의 로드 성공적으로 완료 되었는지 여부를 나타내는 값을 가져옵니다."
  syntax:
    content: public bool IsLoadCompleted { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>.wav 파일 로드 되어 있습니다. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> .wav 파일 아직 로드 되지 않은 경우."
  overload: System.Media.SoundPlayer.IsLoadCompleted*
  exceptions: []
  platform:
  - net462
- uid: System.Media.SoundPlayer.Load
  id: Load
  parent: System.Media.SoundPlayer
  langs:
  - csharp
  name: Load()
  nameWithType: SoundPlayer.Load()
  fullName: System.Media.SoundPlayer.Load()
  type: Method
  assemblies:
  - System
  namespace: System.Media
  summary: "동기적으로 소리를 로드합니다."
  remarks: "Load 메서드가 현재 스레드를 사용 하 여 해당 스레드에서 로드가 완료 될 때까지 다른 메시지를 처리 하지 못하도록.wav 파일을 로드할 수입니다.      > [!CAUTION] >의 Load 메서드 큰.wav 파일을 로드 하는 동안 지연이 발생할 수 있습니다. 또한 그리기 및 다른 이벤트는 로드가 완료 될 때까지 차단 됩니다. 사용 된 <xref:System.Media.SoundPlayer.LoadAsync%2A>호출 스레드를 중단 없이 계속 수 있는 메서드를 비동기적으로 소리를 로드 합니다.</xref:System.Media.SoundPlayer.LoadAsync%2A>       이 메서드는 <xref:System.Media.SoundPlayer.LoadCompleted>이벤트를 로드할 때 완료 되 면 로드 하지 못한 경우에.</xref:System.Media.SoundPlayer.LoadCompleted>"
  example:
  - "The following code example demonstrates the use of the <xref:System.Media.SoundPlayer.LoadAsync%2A> method to attach a .wav file to an instance of the <xref:System.Media.SoundPlayer> class. This code example is part of a larger example provided for the <xref:System.Media.SoundPlayer> class.  \n  \n [!code-vb[System.Windows.Forms.Sound#2](~/add/codesnippet/visualbasic/m-system.media.soundplay_2_1.vb)]\n [!code-cpp[System.Windows.Forms.Sound#2](~/add/codesnippet/cpp/m-system.media.soundplay_2_1.cpp)]\n [!code-cs[System.Windows.Forms.Sound#2](~/add/codesnippet/csharp/m-system.media.soundplay_2_1.cs)]"
  syntax:
    content: public void Load ();
    parameters: []
  overload: System.Media.SoundPlayer.Load*
  exceptions:
  - type: System.ServiceProcess.TimeoutException
    commentId: T:System.ServiceProcess.TimeoutException
    description: "밀리초 <xref:System.Media.SoundPlayer.LoadTimeout*>.</xref:System.Media.SoundPlayer.LoadTimeout*> 로 지정 된 시간을 초과 하는 로드 하는 동안 경과 시간"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "지정한 파일 <xref:System.Media.SoundPlayer.SoundLocation*>찾을 수 없습니다.</xref:System.Media.SoundPlayer.SoundLocation*>"
  platform:
  - net462
- uid: System.Media.SoundPlayer.LoadAsync
  id: LoadAsync
  parent: System.Media.SoundPlayer
  langs:
  - csharp
  name: LoadAsync()
  nameWithType: SoundPlayer.LoadAsync()
  fullName: System.Media.SoundPlayer.LoadAsync()
  type: Method
  assemblies:
  - System
  namespace: System.Media
  summary: ".Wav 파일 스트림 또는 새 스레드를 사용 하 여 웹 리소스에서 로드 합니다."
  remarks: "경우는 <xref:System.Media.SoundPlayer>에서.wav 파일을 로드 하도록 구성 된 <xref:System.IO.Stream>웹 리소스에이 메서드는 새 스레드를 사용 하 여 위치에서.wav 파일을 로드 시작 또는.</xref:System.IO.Stream> </xref:System.Media.SoundPlayer>       이 메서드는 <xref:System.Media.SoundPlayer.LoadCompleted>이벤트를 로드할 때 완료 되 면 로드 하지 못한 경우에.</xref:System.Media.SoundPlayer.LoadCompleted>       경우는 <xref:System.Media.SoundPlayer>구성 된 로컬 파일 경로에서.wav 파일을 로드 하려면이 메서드는 아무 작업도 수행, 재생 시작 될 때까지 지연 로드 때문에.</xref:System.Media.SoundPlayer>       비동기 로드에 대 한 자세한 내용은 참조 [하는 방법: Windows Form에서 소리 비동기적으로 로드](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example demonstrates the use of the LoadAsync method to asynchronously load a .wav file for use by an instance of the <xref:System.Media.SoundPlayer> class. This code example is part of a larger example provided for the <xref:System.Media.SoundPlayer> class.  \n  \n [!code-vb[System.Windows.Forms.Sound#3](~/add/codesnippet/visualbasic/m-system.media.soundplay_3_1.vb)]\n [!code-cpp[System.Windows.Forms.Sound#3](~/add/codesnippet/cpp/m-system.media.soundplay_3_1.cpp)]\n [!code-cs[System.Windows.Forms.Sound#3](~/add/codesnippet/csharp/m-system.media.soundplay_3_1.cs)]"
  syntax:
    content: public void LoadAsync ();
    parameters: []
  overload: System.Media.SoundPlayer.LoadAsync*
  exceptions:
  - type: System.ServiceProcess.TimeoutException
    commentId: T:System.ServiceProcess.TimeoutException
    description: "밀리초 <xref:System.Media.SoundPlayer.LoadTimeout*>.</xref:System.Media.SoundPlayer.LoadTimeout*> 로 지정 된 시간을 초과 하는 로드 하는 동안 경과 시간"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "지정한 파일 <xref:System.Media.SoundPlayer.SoundLocation*>찾을 수 없습니다.</xref:System.Media.SoundPlayer.SoundLocation*>"
  platform:
  - net462
- uid: System.Media.SoundPlayer.LoadCompleted
  id: LoadCompleted
  parent: System.Media.SoundPlayer
  langs:
  - csharp
  name: LoadCompleted
  nameWithType: SoundPlayer.LoadCompleted
  fullName: System.Media.SoundPlayer.LoadCompleted
  type: Event
  assemblies:
  - System
  namespace: System.Media
  summary: ".Wav 파일 성공 또는 실패 한 로드 된 때 발생 합니다."
  remarks: "이 이벤트는.wav 파일의 로드가 완료 되 면 발생 합니다. 이벤트 인수에는 소리 부하 성공적으로 완료 되었거나 실패 하는지 여부를 나타냅니다.       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다."
  example:
  - "The following code example demonstrates the use of the <xref:System.Media.SoundPlayer.OnLoadCompleted%2A> event handler to receive a notification indicating that the contents of a .wav file have been loaded. This code example is part of a larger example provided for the <xref:System.Media.SoundPlayer> class.  \n  \n [!code-vb[System.Windows.Forms.Sound#8](~/add/codesnippet/visualbasic/e-system.media.soundplay_1_1.vb)]\n [!code-cpp[System.Windows.Forms.Sound#8](~/add/codesnippet/cpp/e-system.media.soundplay_1_1.cpp)]\n [!code-cs[System.Windows.Forms.Sound#8](~/add/codesnippet/csharp/e-system.media.soundplay_1_1.cs)]"
  syntax:
    content: public event System.ComponentModel.AsyncCompletedEventHandler LoadCompleted;
    return:
      type: System.ComponentModel.AsyncCompletedEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Media.SoundPlayer.LoadTimeout
  id: LoadTimeout
  parent: System.Media.SoundPlayer
  langs:
  - csharp
  name: LoadTimeout
  nameWithType: SoundPlayer.LoadTimeout
  fullName: System.Media.SoundPlayer.LoadTimeout
  type: Property
  assemblies:
  - System
  namespace: System.Media
  summary: ".Wav 파일 로드 해야 밀리초에서의 시간을 가져오거나 설정 합니다."
  remarks: "이 기간이 만료 되 면는 로드가 취소 되 고 <xref:System.ServiceProcess.TimeoutException>예외가 throw 됩니다.</xref:System.ServiceProcess.TimeoutException>"
  syntax:
    content: public int LoadTimeout { get; set; }
    return:
      type: System.Int32
      description: "시간 (밀리초)의 수입니다. 기본값은 10000 (10 초)입니다."
  overload: System.Media.SoundPlayer.LoadTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Media.SoundPlayer.OnLoadCompleted(System.ComponentModel.AsyncCompletedEventArgs)
  id: OnLoadCompleted(System.ComponentModel.AsyncCompletedEventArgs)
  parent: System.Media.SoundPlayer
  langs:
  - csharp
  name: OnLoadCompleted(AsyncCompletedEventArgs)
  nameWithType: SoundPlayer.OnLoadCompleted(AsyncCompletedEventArgs)
  fullName: System.Media.SoundPlayer.OnLoadCompleted(AsyncCompletedEventArgs)
  type: Method
  assemblies:
  - System
  namespace: System.Media
  summary: "발생 된 <xref href=&quot;System.Media.SoundPlayer.LoadCompleted&quot;> </xref> 이벤트입니다."
  remarks: "이 메서드는.wav 파일의 로드가 완료 되 면 호출 됩니다.       이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [NIB: 이벤트를 발생 시키는](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)합니다.       OnLoadCompleted 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnLoadCompleted (System.ComponentModel.AsyncCompletedEventArgs e);
    parameters:
    - id: e
      type: System.ComponentModel.AsyncCompletedEventArgs
      description: "<xref:System.ComponentModel.AsyncCompletedEventArgs>이벤트 데이터를 포함 하는.</xref:System.ComponentModel.AsyncCompletedEventArgs>"
  overload: System.Media.SoundPlayer.OnLoadCompleted*
  exceptions: []
  platform:
  - net462
- uid: System.Media.SoundPlayer.OnSoundLocationChanged(System.EventArgs)
  id: OnSoundLocationChanged(System.EventArgs)
  parent: System.Media.SoundPlayer
  langs:
  - csharp
  name: OnSoundLocationChanged(EventArgs)
  nameWithType: SoundPlayer.OnSoundLocationChanged(EventArgs)
  fullName: System.Media.SoundPlayer.OnSoundLocationChanged(EventArgs)
  type: Method
  assemblies:
  - System
  namespace: System.Media
  summary: "발생 된 <xref href=&quot;System.Media.SoundPlayer.SoundLocationChanged&quot;> </xref> 이벤트입니다."
  remarks: "이 메서드는 새 오디오 소스 경로가이 <xref:System.Media.SoundPlayer>설정 되었습니다.</xref:System.Media.SoundPlayer>       이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 하는 방법: 이벤트 제공 기능 및 [NIB: 이벤트를 발생 시키는](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)합니다.       OnSoundLocationChanged 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnSoundLocationChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Media.SoundPlayer.OnSoundLocationChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Media.SoundPlayer.OnStreamChanged(System.EventArgs)
  id: OnStreamChanged(System.EventArgs)
  parent: System.Media.SoundPlayer
  langs:
  - csharp
  name: OnStreamChanged(EventArgs)
  nameWithType: SoundPlayer.OnStreamChanged(EventArgs)
  fullName: System.Media.SoundPlayer.OnStreamChanged(EventArgs)
  type: Method
  assemblies:
  - System
  namespace: System.Media
  summary: "발생 된 <xref href=&quot;System.Media.SoundPlayer.StreamChanged&quot;> </xref> 이벤트입니다."
  remarks: "이 메서드는 새 <xref:System.IO.Stream>오디오 소스가 <xref:System.Media.SoundPlayer>설정 되었습니다.</xref:System.Media.SoundPlayer> </xref:System.IO.Stream>       이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [NIB: 이벤트를 발생 시키는](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)합니다.       OnStreamChanged 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnStreamChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Media.SoundPlayer.OnStreamChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Media.SoundPlayer.Play
  id: Play
  parent: System.Media.SoundPlayer
  langs:
  - csharp
  name: Play()
  nameWithType: SoundPlayer.Play()
  fullName: System.Media.SoundPlayer.Play()
  type: Method
  assemblies:
  - System
  namespace: System.Media
  summary: "새 스레드를 사용 하 여.wav 파일을 재생 하 고 로드 되지 않은 경우 먼저.wav 파일을 로드 합니다."
  remarks: "Play 메서드는 새 스레드를 사용 하 여 재생 합니다. .Wav 파일 메모리에 로드 된 전에 재생을 호출 하면 재생이 시작.wav 파일 로드 됩니다. 사용할 수는 <xref:System.Media.SoundPlayer.LoadAsync%2A>또는 <xref:System.Media.SoundPlayer.Load%2A>.wav 파일을 메모리를 미리 로드 하는 메서드.</xref:System.Media.SoundPlayer.Load%2A> </xref:System.Media.SoundPlayer.LoadAsync%2A> .Wav 파일은 성공적으로 로드 후에서 <xref:System.IO.Stream>또는 URL, 이후 호출에 대 한 재생 메서드는 <xref:System.Media.SoundPlayer>사운드 변경에 대 한 경로까지.wav 파일을 다시 로드할 필요가 없습니다.</xref:System.Media.SoundPlayer> </xref:System.IO.Stream>       .Wav 파일 지정 되지 않은 형식이 로드 되지 않거나, Play 메서드는 기본 경고음 소리 재생 합니다."
  example:
  - "The following code example demonstrates the use of the Play method to asynchronously play a .wav file. This code example is part of a larger example provided for the <xref:System.Media.SoundPlayer> class.  \n  \n [!code-vb[System.Windows.Forms.Sound#5](~/add/codesnippet/visualbasic/m-system.media.soundplay_0_1.vb)]\n [!code-cpp[System.Windows.Forms.Sound#5](~/add/codesnippet/cpp/m-system.media.soundplay_0_1.cpp)]\n [!code-cs[System.Windows.Forms.Sound#5](~/add/codesnippet/csharp/m-system.media.soundplay_0_1.cs)]"
  syntax:
    content: public void Play ();
    parameters: []
  overload: System.Media.SoundPlayer.Play*
  exceptions:
  - type: System.ServiceProcess.TimeoutException
    commentId: T:System.ServiceProcess.TimeoutException
    description: "밀리초 <xref:System.Media.SoundPlayer.LoadTimeout*>.</xref:System.Media.SoundPlayer.LoadTimeout*> 로 지정 된 시간을 초과 하는 로드 하는 동안 경과 시간"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "지정한 파일 <xref:System.Media.SoundPlayer.SoundLocation*>찾을 수 없습니다.</xref:System.Media.SoundPlayer.SoundLocation*>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: ".Wav 헤더가 손상 되었습니다. 지정한 파일 <xref:System.Media.SoundPlayer.SoundLocation*>PCM.wav 파일이 아닙니다.</xref:System.Media.SoundPlayer.SoundLocation*>"
  platform:
  - net462
- uid: System.Media.SoundPlayer.PlayLooping
  id: PlayLooping
  parent: System.Media.SoundPlayer
  langs:
  - csharp
  name: PlayLooping()
  nameWithType: SoundPlayer.PlayLooping()
  fullName: System.Media.SoundPlayer.PlayLooping()
  type: Method
  assemblies:
  - System
  namespace: System.Media
  summary: "재생 하 고 새 스레드를 사용 하 여.wav 파일 반복 로드 되지 않은 경우 먼저.wav 파일을 로드 합니다."
  remarks: "PlayLooping 메서드는 재생 하 고 새 스레드를 사용 하 여 소리를 반복 합니다. .Wav 파일 메모리에 로드 된 전에 PlayLooping를 호출 하면 재생이 시작.wav 파일 로드 됩니다. 사용할 수는 <xref:System.Media.SoundPlayer.LoadAsync%2A>또는 <xref:System.Media.SoundPlayer.Load%2A>.wav 파일을 메모리를 미리 로드 하는 메서드.</xref:System.Media.SoundPlayer.Load%2A> </xref:System.Media.SoundPlayer.LoadAsync%2A> .Wav 파일은 성공적으로 로드 후에서 <xref:System.IO.Stream>또는 URL, 이후 호출에 대 한 재생 메서드는 <xref:System.Media.SoundPlayer>사운드 변경에 대 한 경로까지.wav 파일을 다시 로드할 필요가 없습니다.</xref:System.Media.SoundPlayer> </xref:System.IO.Stream>       .Wav 파일 지정 되지 않은 형식이 로드 되지 않거나, PlayLooping 메서드는 기본 경고음 소리 재생 합니다.       PlayLooping에 대 한 자세한 내용은 참조 [하는 방법: Windows Form에서 소리 재생 반복](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example demonstrates the use of the PlayLooping method to repeatedly play a .wav file. The .wav will be played until the <xref:System.Media.SoundPlayer.Stop%2A> method is called. This code example is part of a larger example provided for the <xref:System.Media.SoundPlayer> class.  \n  \n [!code-vb[System.Windows.Forms.Sound#6](~/add/codesnippet/visualbasic/m-system.media.soundplay_1_1.vb)]\n [!code-cpp[System.Windows.Forms.Sound#6](~/add/codesnippet/cpp/m-system.media.soundplay_1_1.cpp)]\n [!code-cs[System.Windows.Forms.Sound#6](~/add/codesnippet/csharp/m-system.media.soundplay_1_1.cs)]"
  syntax:
    content: public void PlayLooping ();
    parameters: []
  overload: System.Media.SoundPlayer.PlayLooping*
  exceptions:
  - type: System.ServiceProcess.TimeoutException
    commentId: T:System.ServiceProcess.TimeoutException
    description: "밀리초 <xref:System.Media.SoundPlayer.LoadTimeout*>.</xref:System.Media.SoundPlayer.LoadTimeout*> 로 지정 된 시간을 초과 하는 로드 하는 동안 경과 시간"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "지정한 파일 <xref:System.Media.SoundPlayer.SoundLocation*>찾을 수 없습니다.</xref:System.Media.SoundPlayer.SoundLocation*>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: ".Wav 헤더가 손상 되었습니다. 지정한 파일 <xref:System.Media.SoundPlayer.SoundLocation*>PCM.wav 파일이 아닙니다.</xref:System.Media.SoundPlayer.SoundLocation*>"
  platform:
  - net462
- uid: System.Media.SoundPlayer.PlaySync
  id: PlaySync
  parent: System.Media.SoundPlayer
  langs:
  - csharp
  name: PlaySync()
  nameWithType: SoundPlayer.PlaySync()
  fullName: System.Media.SoundPlayer.PlaySync()
  type: Method
  assemblies:
  - System
  namespace: System.Media
  summary: ".Wav 파일을 재생 하 고 로드 되지 않은 경우 먼저.wav 파일을 로드 합니다."
  remarks: "PlaySync 메서드가 현재 스레드를 사용 하 여 해당 스레드에서 로드가 완료 될 때까지 다른 메시지를 처리 하지 못하도록 한.wav 파일을 재생 합니다. 사용할 수는 <xref:System.Media.SoundPlayer.LoadAsync%2A>또는 <xref:System.Media.SoundPlayer.Load%2A>.wav 파일을 메모리를 미리 로드 하는 메서드.</xref:System.Media.SoundPlayer.Load%2A> </xref:System.Media.SoundPlayer.LoadAsync%2A> .Wav 파일은 성공적으로 로드 후에서 <xref:System.IO.Stream>또는 URL, 이후 호출에 대 한 재생 메서드는 <xref:System.Media.SoundPlayer>사운드 변경에 대 한 경로까지.wav 파일을 다시 로드할 필요가 없습니다.</xref:System.Media.SoundPlayer> </xref:System.IO.Stream>       .Wav 파일 지정 되지 않은 형식이 로드 되지 않거나, PlaySync 메서드는 기본 경고음 소리 재생 합니다."
  example:
  - "The following code example demonstrates the use of the PlaySync method to synchronously play a .wav file.  \n  \n [!code-cs[System.Windows.Forms.PlaySync#1](~/add/codesnippet/csharp/m-system.media.soundplay_4_1.cs)]\n [!code-cpp[System.Windows.Forms.PlaySync#1](~/add/codesnippet/cpp/m-system.media.soundplay_4_1.cpp)]\n [!code-vb[System.Windows.Forms.PlaySync#1](~/add/codesnippet/visualbasic/m-system.media.soundplay_4_1.vb)]"
  syntax:
    content: public void PlaySync ();
    parameters: []
  overload: System.Media.SoundPlayer.PlaySync*
  exceptions:
  - type: System.ServiceProcess.TimeoutException
    commentId: T:System.ServiceProcess.TimeoutException
    description: "밀리초 <xref:System.Media.SoundPlayer.LoadTimeout*>.</xref:System.Media.SoundPlayer.LoadTimeout*> 로 지정 된 시간을 초과 하는 로드 하는 동안 경과 시간"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "지정한 파일 <xref:System.Media.SoundPlayer.SoundLocation*>찾을 수 없습니다.</xref:System.Media.SoundPlayer.SoundLocation*>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: ".Wav 헤더가 손상 되었습니다. 지정한 파일 <xref:System.Media.SoundPlayer.SoundLocation*>PCM.wav 파일이 아닙니다.</xref:System.Media.SoundPlayer.SoundLocation*>"
  platform:
  - net462
- uid: System.Media.SoundPlayer.SoundLocation
  id: SoundLocation
  parent: System.Media.SoundPlayer
  langs:
  - csharp
  name: SoundLocation
  nameWithType: SoundPlayer.SoundLocation
  fullName: System.Media.SoundPlayer.SoundLocation
  type: Property
  assemblies:
  - System
  namespace: System.Media
  summary: "파일 경로 또는 로드할.wav 파일의 URL을 가져오거나 설정 합니다."
  remarks: "이 속성이 <xref:System.String?displayProperty=fullName>때 <xref:System.Media.SoundPlayer.Stream%2A> <xref:System.IO.Stream>.</xref:System.IO.Stream> 속성이</xref:System.Media.SoundPlayer.Stream%2A> </xref:System.String?displayProperty=fullName>"
  example:
  - "The following code example demonstrates the use of the SoundLocation property to assign the .wav file source to an instance of the <xref:System.Media.SoundPlayer> class. This code example is part of a larger example provided for the <xref:System.Media.SoundPlayer> class.  \n  \n [!code-vb[System.Windows.Forms.Sound#2](~/add/codesnippet/visualbasic/p-system.media.soundplay_1.vb)]\n [!code-cpp[System.Windows.Forms.Sound#2](~/add/codesnippet/cpp/p-system.media.soundplay_1.cpp)]\n [!code-cs[System.Windows.Forms.Sound#2](~/add/codesnippet/csharp/p-system.media.soundplay_1.cs)]"
  syntax:
    content: public string SoundLocation { get; set; }
    return:
      type: System.String
      description: "파일 경로 또는.wav 파일을 로드할 수 있는 URL을 또는 &lt;xref:System.String?displayProperty=fullName&gt; 경우 파일 경로가 존재 하지 않습니다. 기본값은 &lt;xref:System.String?displayProperty=fullName&gt;합니다."
  overload: System.Media.SoundPlayer.SoundLocation*
  exceptions: []
  platform:
  - net462
- uid: System.Media.SoundPlayer.SoundLocationChanged
  id: SoundLocationChanged
  parent: System.Media.SoundPlayer
  langs:
  - csharp
  name: SoundLocationChanged
  nameWithType: SoundPlayer.SoundLocationChanged
  fullName: System.Media.SoundPlayer.SoundLocationChanged
  type: Event
  assemblies:
  - System
  namespace: System.Media
  summary: "이 경우 새 오디오 소스 경로 발생 <xref href=&quot;System.Media.SoundPlayer&quot;> </xref> 설정 되었습니다."
  remarks: "이 이벤트는 새 오디오 소스 경로가이 <xref:System.Media.SoundPlayer>설정 되었습니다.</xref:System.Media.SoundPlayer>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다."
  example:
  - "The following code example demonstrates the use of the <xref:System.Media.SoundPlayer.OnSoundLocationChanged%2A> event handler to receive a notification when the <xref:System.Media.SoundPlayer> has been attached to a different .wav file. This code example is part of a larger example provided for the <xref:System.Media.SoundPlayer> class.  \n  \n [!code-vb[System.Windows.Forms.Sound#9](~/add/codesnippet/visualbasic/e-system.media.soundplay_0_1.vb)]\n [!code-cpp[System.Windows.Forms.Sound#9](~/add/codesnippet/cpp/e-system.media.soundplay_0_1.cpp)]\n [!code-cs[System.Windows.Forms.Sound#9](~/add/codesnippet/csharp/e-system.media.soundplay_0_1.cs)]"
  syntax:
    content: public event EventHandler SoundLocationChanged;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Media.SoundPlayer.Stop
  id: Stop
  parent: System.Media.SoundPlayer
  langs:
  - csharp
  name: Stop()
  nameWithType: SoundPlayer.Stop()
  fullName: System.Media.SoundPlayer.Stop()
  type: Method
  assemblies:
  - System
  namespace: System.Media
  summary: "소리 재생 중인 경우의 재생을 중지 합니다."
  remarks: ''
  example:
  - "The following code example demonstrates the use of the Stop method to halt a .wav file that is currently playing. This code example is part of a larger example provided for the <xref:System.Media.SoundPlayer> class.  \n  \n [!code-vb[System.Windows.Forms.Sound#7](~/add/codesnippet/visualbasic/m-system.media.soundplay_5_1.vb)]\n [!code-cpp[System.Windows.Forms.Sound#7](~/add/codesnippet/cpp/m-system.media.soundplay_5_1.cpp)]\n [!code-cs[System.Windows.Forms.Sound#7](~/add/codesnippet/csharp/m-system.media.soundplay_5_1.cs)]"
  syntax:
    content: public void Stop ();
    parameters: []
  overload: System.Media.SoundPlayer.Stop*
  exceptions: []
  platform:
  - net462
- uid: System.Media.SoundPlayer.Stream
  id: Stream
  parent: System.Media.SoundPlayer
  langs:
  - csharp
  name: Stream
  nameWithType: SoundPlayer.Stream
  fullName: System.Media.SoundPlayer.Stream
  type: Property
  assemblies:
  - System
  namespace: System.Media
  summary: "가져오거나는 <xref:System.IO.Stream>.wav 파일을 로드할 수입니다.</xref:System.IO.Stream>"
  remarks: "이 속성이 `null` 때는 <xref:System.Media.SoundPlayer.SoundLocation%2A>새롭고 유효한 소리 위치 속성이.</xref:System.Media.SoundPlayer.SoundLocation%2A>"
  syntax:
    content: public System.IO.Stream Stream { get; set; }
    return:
      type: System.IO.Stream
      description: "A <xref:System.IO.Stream>를 로드할.wav 파일 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 스트림이 사용할 수 없습니다.</xref:System.IO.Stream> 기본값은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Media.SoundPlayer.Stream*
  exceptions: []
  platform:
  - net462
- uid: System.Media.SoundPlayer.StreamChanged
  id: StreamChanged
  parent: System.Media.SoundPlayer
  langs:
  - csharp
  name: StreamChanged
  nameWithType: SoundPlayer.StreamChanged
  fullName: System.Media.SoundPlayer.StreamChanged
  type: Event
  assemblies:
  - System
  namespace: System.Media
  summary: "새 발생 <xref:System.IO.Stream>오디오 소스가 <xref href=&quot;System.Media.SoundPlayer&quot;> </xref> 설정 되었습니다.</xref:System.IO.Stream>"
  remarks: "이 이벤트는 새 <xref:System.IO.Stream>오디오 소스가 <xref:System.Media.SoundPlayer>설정 되었습니다.</xref:System.Media.SoundPlayer> </xref:System.IO.Stream>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다."
  syntax:
    content: public event EventHandler StreamChanged;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Media.SoundPlayer.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  isEii: true
  parent: System.Media.SoundPlayer
  langs:
  - csharp
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: SoundPlayer.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Media.SoundPlayer.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System
  namespace: System.Media
  summary: "이 멤버에 대 한 참조는 &lt;xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A?displayProperty=fullName&gt; 메서드."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Media.SoundPlayer>인스턴스로 캐스팅 되는 <xref:System.Runtime.Serialization.ISerializable>인터페이스.</xref:System.Runtime.Serialization.ISerializable> </xref:System.Media.SoundPlayer>"
  syntax:
    content: void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> 데이터로 채울 합니다."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "대상 (참조 <xref:System.Runtime.Serialization.StreamingContext>)이이 serialization에 대 한.</xref:System.Runtime.Serialization.StreamingContext>"
  overload: System.Media.SoundPlayer.System#Runtime#Serialization#ISerializable#GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.Media.SoundPlayer.Tag
  id: Tag
  parent: System.Media.SoundPlayer
  langs:
  - csharp
  name: Tag
  nameWithType: SoundPlayer.Tag
  fullName: System.Media.SoundPlayer.Tag
  type: Property
  assemblies:
  - System
  namespace: System.Media
  summary: "가져오거나는 <xref:System.Object>에 대 한 데이터를 포함 하는 <xref href=&quot;System.Media.SoundPlayer&quot;> </xref>.</xref:System.Object>"
  syntax:
    content: public object Tag { get; set; }
    return:
      type: System.Object
      description: "<xref:System.Object>에 대 한 데이터를 포함 하는 <xref href=&quot;System.Media.SoundPlayer&quot;> </xref>.</xref:System.Object>"
  overload: System.Media.SoundPlayer.Tag*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.Component
  isExternal: false
  name: System.ComponentModel.Component
- uid: System.UriFormatException
  isExternal: true
  name: System.UriFormatException
- uid: System.ServiceProcess.TimeoutException
  parent: System.ServiceProcess
  isExternal: false
  name: TimeoutException
  nameWithType: TimeoutException
  fullName: System.ServiceProcess.TimeoutException
- uid: System.IO.FileNotFoundException
  isExternal: true
  name: System.IO.FileNotFoundException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Media.SoundPlayer.#ctor
  parent: System.Media.SoundPlayer
  isExternal: false
  name: SoundPlayer()
  nameWithType: SoundPlayer.SoundPlayer()
  fullName: System.Media.SoundPlayer.SoundPlayer()
- uid: System.Media.SoundPlayer.#ctor(System.IO.Stream)
  parent: System.Media.SoundPlayer
  isExternal: false
  name: SoundPlayer(Stream)
  nameWithType: SoundPlayer.SoundPlayer(Stream)
  fullName: System.Media.SoundPlayer.SoundPlayer(Stream)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Media.SoundPlayer.#ctor(System.String)
  parent: System.Media.SoundPlayer
  isExternal: false
  name: SoundPlayer(String)
  nameWithType: SoundPlayer.SoundPlayer(String)
  fullName: System.Media.SoundPlayer.SoundPlayer(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Media.SoundPlayer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Media.SoundPlayer
  isExternal: false
  name: SoundPlayer(SerializationInfo,StreamingContext)
  nameWithType: SoundPlayer.SoundPlayer(SerializationInfo,StreamingContext)
  fullName: System.Media.SoundPlayer.SoundPlayer(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Media.SoundPlayer.IsLoadCompleted
  parent: System.Media.SoundPlayer
  isExternal: false
  name: IsLoadCompleted
  nameWithType: SoundPlayer.IsLoadCompleted
  fullName: System.Media.SoundPlayer.IsLoadCompleted
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Media.SoundPlayer.Load
  parent: System.Media.SoundPlayer
  isExternal: false
  name: Load()
  nameWithType: SoundPlayer.Load()
  fullName: System.Media.SoundPlayer.Load()
- uid: System.Media.SoundPlayer.LoadAsync
  parent: System.Media.SoundPlayer
  isExternal: false
  name: LoadAsync()
  nameWithType: SoundPlayer.LoadAsync()
  fullName: System.Media.SoundPlayer.LoadAsync()
- uid: System.Media.SoundPlayer.LoadCompleted
  parent: System.Media.SoundPlayer
  isExternal: false
  name: LoadCompleted
  nameWithType: SoundPlayer.LoadCompleted
  fullName: System.Media.SoundPlayer.LoadCompleted
- uid: System.ComponentModel.AsyncCompletedEventHandler
  parent: System.ComponentModel
  isExternal: true
  name: AsyncCompletedEventHandler
  nameWithType: AsyncCompletedEventHandler
  fullName: System.ComponentModel.AsyncCompletedEventHandler
- uid: System.Media.SoundPlayer.LoadTimeout
  parent: System.Media.SoundPlayer
  isExternal: false
  name: LoadTimeout
  nameWithType: SoundPlayer.LoadTimeout
  fullName: System.Media.SoundPlayer.LoadTimeout
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Media.SoundPlayer.OnLoadCompleted(System.ComponentModel.AsyncCompletedEventArgs)
  parent: System.Media.SoundPlayer
  isExternal: false
  name: OnLoadCompleted(AsyncCompletedEventArgs)
  nameWithType: SoundPlayer.OnLoadCompleted(AsyncCompletedEventArgs)
  fullName: System.Media.SoundPlayer.OnLoadCompleted(AsyncCompletedEventArgs)
- uid: System.ComponentModel.AsyncCompletedEventArgs
  parent: System.ComponentModel
  isExternal: true
  name: AsyncCompletedEventArgs
  nameWithType: AsyncCompletedEventArgs
  fullName: System.ComponentModel.AsyncCompletedEventArgs
- uid: System.Media.SoundPlayer.OnSoundLocationChanged(System.EventArgs)
  parent: System.Media.SoundPlayer
  isExternal: false
  name: OnSoundLocationChanged(EventArgs)
  nameWithType: SoundPlayer.OnSoundLocationChanged(EventArgs)
  fullName: System.Media.SoundPlayer.OnSoundLocationChanged(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Media.SoundPlayer.OnStreamChanged(System.EventArgs)
  parent: System.Media.SoundPlayer
  isExternal: false
  name: OnStreamChanged(EventArgs)
  nameWithType: SoundPlayer.OnStreamChanged(EventArgs)
  fullName: System.Media.SoundPlayer.OnStreamChanged(EventArgs)
- uid: System.Media.SoundPlayer.Play
  parent: System.Media.SoundPlayer
  isExternal: false
  name: Play()
  nameWithType: SoundPlayer.Play()
  fullName: System.Media.SoundPlayer.Play()
- uid: System.Media.SoundPlayer.PlayLooping
  parent: System.Media.SoundPlayer
  isExternal: false
  name: PlayLooping()
  nameWithType: SoundPlayer.PlayLooping()
  fullName: System.Media.SoundPlayer.PlayLooping()
- uid: System.Media.SoundPlayer.PlaySync
  parent: System.Media.SoundPlayer
  isExternal: false
  name: PlaySync()
  nameWithType: SoundPlayer.PlaySync()
  fullName: System.Media.SoundPlayer.PlaySync()
- uid: System.Media.SoundPlayer.SoundLocation
  parent: System.Media.SoundPlayer
  isExternal: false
  name: SoundLocation
  nameWithType: SoundPlayer.SoundLocation
  fullName: System.Media.SoundPlayer.SoundLocation
- uid: System.Media.SoundPlayer.SoundLocationChanged
  parent: System.Media.SoundPlayer
  isExternal: false
  name: SoundLocationChanged
  nameWithType: SoundPlayer.SoundLocationChanged
  fullName: System.Media.SoundPlayer.SoundLocationChanged
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Media.SoundPlayer.Stop
  parent: System.Media.SoundPlayer
  isExternal: false
  name: Stop()
  nameWithType: SoundPlayer.Stop()
  fullName: System.Media.SoundPlayer.Stop()
- uid: System.Media.SoundPlayer.Stream
  parent: System.Media.SoundPlayer
  isExternal: false
  name: Stream
  nameWithType: SoundPlayer.Stream
  fullName: System.Media.SoundPlayer.Stream
- uid: System.Media.SoundPlayer.StreamChanged
  parent: System.Media.SoundPlayer
  isExternal: false
  name: StreamChanged
  nameWithType: SoundPlayer.StreamChanged
  fullName: System.Media.SoundPlayer.StreamChanged
- uid: System.Media.SoundPlayer.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Media.SoundPlayer
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: SoundPlayer.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Media.SoundPlayer.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Media.SoundPlayer.Tag
  parent: System.Media.SoundPlayer
  isExternal: false
  name: Tag
  nameWithType: SoundPlayer.Tag
  fullName: System.Media.SoundPlayer.Tag
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Media.SoundPlayer.#ctor*
  parent: System.Media.SoundPlayer
  isExternal: false
  name: SoundPlayer
  nameWithType: SoundPlayer.SoundPlayer
- uid: System.Media.SoundPlayer.IsLoadCompleted*
  parent: System.Media.SoundPlayer
  isExternal: false
  name: IsLoadCompleted
  nameWithType: SoundPlayer.IsLoadCompleted
- uid: System.Media.SoundPlayer.Load*
  parent: System.Media.SoundPlayer
  isExternal: false
  name: Load
  nameWithType: SoundPlayer.Load
- uid: System.Media.SoundPlayer.LoadAsync*
  parent: System.Media.SoundPlayer
  isExternal: false
  name: LoadAsync
  nameWithType: SoundPlayer.LoadAsync
- uid: System.Media.SoundPlayer.LoadTimeout*
  parent: System.Media.SoundPlayer
  isExternal: false
  name: LoadTimeout
  nameWithType: SoundPlayer.LoadTimeout
- uid: System.Media.SoundPlayer.OnLoadCompleted*
  parent: System.Media.SoundPlayer
  isExternal: false
  name: OnLoadCompleted
  nameWithType: SoundPlayer.OnLoadCompleted
- uid: System.Media.SoundPlayer.OnSoundLocationChanged*
  parent: System.Media.SoundPlayer
  isExternal: false
  name: OnSoundLocationChanged
  nameWithType: SoundPlayer.OnSoundLocationChanged
- uid: System.Media.SoundPlayer.OnStreamChanged*
  parent: System.Media.SoundPlayer
  isExternal: false
  name: OnStreamChanged
  nameWithType: SoundPlayer.OnStreamChanged
- uid: System.Media.SoundPlayer.Play*
  parent: System.Media.SoundPlayer
  isExternal: false
  name: Play
  nameWithType: SoundPlayer.Play
- uid: System.Media.SoundPlayer.PlayLooping*
  parent: System.Media.SoundPlayer
  isExternal: false
  name: PlayLooping
  nameWithType: SoundPlayer.PlayLooping
- uid: System.Media.SoundPlayer.PlaySync*
  parent: System.Media.SoundPlayer
  isExternal: false
  name: PlaySync
  nameWithType: SoundPlayer.PlaySync
- uid: System.Media.SoundPlayer.SoundLocation*
  parent: System.Media.SoundPlayer
  isExternal: false
  name: SoundLocation
  nameWithType: SoundPlayer.SoundLocation
- uid: System.Media.SoundPlayer.Stop*
  parent: System.Media.SoundPlayer
  isExternal: false
  name: Stop
  nameWithType: SoundPlayer.Stop
- uid: System.Media.SoundPlayer.Stream*
  parent: System.Media.SoundPlayer
  isExternal: false
  name: Stream
  nameWithType: SoundPlayer.Stream
- uid: System.Media.SoundPlayer.System#Runtime#Serialization#ISerializable#GetObjectData*
  parent: System.Media.SoundPlayer
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData
  nameWithType: SoundPlayer.System.Runtime.Serialization.ISerializable.GetObjectData
- uid: System.Media.SoundPlayer.Tag*
  parent: System.Media.SoundPlayer
  isExternal: false
  name: Tag
  nameWithType: SoundPlayer.Tag
