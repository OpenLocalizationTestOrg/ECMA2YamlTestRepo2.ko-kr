### YamlMime:ManagedReference
items:
- uid: System.Runtime.Remoting.Contexts.ContextProperty
  id: ContextProperty
  children:
  - System.Runtime.Remoting.Contexts.ContextProperty.Name
  - System.Runtime.Remoting.Contexts.ContextProperty.Property
  langs:
  - csharp
  name: ContextProperty
  nameWithType: ContextProperty
  fullName: System.Runtime.Remoting.Contexts.ContextProperty
  type: Class
  summary: "속성 이름 및 컨텍스트 속성을 나타내는 개체의 이름/값 쌍을 보유 합니다."
  remarks: "속성 컨텍스트를 구성 하는 다양 한 서비스를 자동으로 제공 되 고 활성화가 설정 될 때 서비스는 <xref:System.Runtime.Remoting.Contexts.Context>클래스가 만들어집니다.</xref:System.Runtime.Remoting.Contexts.Context> 각 속성은 관리 되는 개체 자체입니다. 속성이 메시지 싱크를 제공 여부에 따라 활성 또는 수동 간주 됩니다."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      [System.Security.SecurityCritical]

      public class ContextProperty
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Contexts.ContextProperty.Name
  id: Name
  parent: System.Runtime.Remoting.Contexts.ContextProperty
  langs:
  - csharp
  name: Name
  nameWithType: ContextProperty.Name
  fullName: System.Runtime.Remoting.Contexts.ContextProperty.Name
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Contexts
  summary: "T:System.Runtime.Remoting.Contexts.ContextProperty 클래스의 이름을 가져옵니다."
  syntax:
    content: public virtual string Name { get; }
    return:
      type: System.String
      description: "이름에서 <xref href=&quot;System.Runtime.Remoting.Contexts.ContextProperty&quot;> </xref> 클래스입니다."
  overload: System.Runtime.Remoting.Contexts.ContextProperty.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Contexts.ContextProperty.Property
  id: Property
  parent: System.Runtime.Remoting.Contexts.ContextProperty
  langs:
  - csharp
  name: Property
  nameWithType: ContextProperty.Property
  fullName: System.Runtime.Remoting.Contexts.ContextProperty.Property
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Contexts
  summary: "컨텍스트 속성을 나타내는 개체를 가져옵니다."
  syntax:
    content: public virtual object Property { get; }
    return:
      type: System.Object
      description: "컨텍스트 속성을 나타내는 개체입니다."
  overload: System.Runtime.Remoting.Contexts.ContextProperty.Property*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Runtime.Remoting.Contexts.ContextProperty.Name
  parent: System.Runtime.Remoting.Contexts.ContextProperty
  isExternal: false
  name: Name
  nameWithType: ContextProperty.Name
  fullName: System.Runtime.Remoting.Contexts.ContextProperty.Name
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.Remoting.Contexts.ContextProperty.Property
  parent: System.Runtime.Remoting.Contexts.ContextProperty
  isExternal: false
  name: Property
  nameWithType: ContextProperty.Property
  fullName: System.Runtime.Remoting.Contexts.ContextProperty.Property
- uid: System.Runtime.Remoting.Contexts.ContextProperty.Name*
  parent: System.Runtime.Remoting.Contexts.ContextProperty
  isExternal: false
  name: Name
  nameWithType: ContextProperty.Name
- uid: System.Runtime.Remoting.Contexts.ContextProperty.Property*
  parent: System.Runtime.Remoting.Contexts.ContextProperty
  isExternal: false
  name: Property
  nameWithType: ContextProperty.Property
