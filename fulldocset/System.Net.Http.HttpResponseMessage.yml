### YamlMime:ManagedReference
items:
- uid: System.Net.Http.HttpResponseMessage
  id: HttpResponseMessage
  children:
  - System.Net.Http.HttpResponseMessage.#ctor
  - System.Net.Http.HttpResponseMessage.#ctor(System.Net.HttpStatusCode)
  - System.Net.Http.HttpResponseMessage.Content
  - System.Net.Http.HttpResponseMessage.Dispose
  - System.Net.Http.HttpResponseMessage.Dispose(System.Boolean)
  - System.Net.Http.HttpResponseMessage.EnsureSuccessStatusCode
  - System.Net.Http.HttpResponseMessage.Headers
  - System.Net.Http.HttpResponseMessage.IsSuccessStatusCode
  - System.Net.Http.HttpResponseMessage.ReasonPhrase
  - System.Net.Http.HttpResponseMessage.RequestMessage
  - System.Net.Http.HttpResponseMessage.StatusCode
  - System.Net.Http.HttpResponseMessage.ToString
  - System.Net.Http.HttpResponseMessage.Version
  langs:
  - csharp
  name: HttpResponseMessage
  nameWithType: HttpResponseMessage
  fullName: System.Net.Http.HttpResponseMessage
  type: Class
  summary: "상태 코드 및 데이터를 포함 하 여 HTTP 응답 메시지를 나타냅니다."
  remarks: "HttpResponseMessage를 얻을 수 있는 일반적인 방법 중 하나에서는 <xref:System.Net.Http.HttpClient.SendAsync%28System.Net.Http.HttpRequestMessage%29?displayProperty=fullName>메서드.</xref:System.Net.Http.HttpClient.SendAsync%28System.Net.Http.HttpRequestMessage%29?displayProperty=fullName>"
  syntax:
    content: 'public class HttpResponseMessage : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.Http.HttpResponseMessage.#ctor
  id: '#ctor'
  parent: System.Net.Http.HttpResponseMessage
  langs:
  - csharp
  name: HttpResponseMessage()
  nameWithType: HttpResponseMessage.HttpResponseMessage()
  fullName: System.Net.Http.HttpResponseMessage.HttpResponseMessage()
  type: Constructor
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Net.Http.HttpResponseMessage&quot;> </xref> 클래스입니다."
  syntax:
    content: public HttpResponseMessage ();
    parameters: []
  overload: System.Net.Http.HttpResponseMessage.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.HttpResponseMessage.#ctor(System.Net.HttpStatusCode)
  id: '#ctor(System.Net.HttpStatusCode)'
  parent: System.Net.Http.HttpResponseMessage
  langs:
  - csharp
  name: HttpResponseMessage(HttpStatusCode)
  nameWithType: HttpResponseMessage.HttpResponseMessage(HttpStatusCode)
  fullName: System.Net.Http.HttpResponseMessage.HttpResponseMessage(HttpStatusCode)
  type: Constructor
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Net.Http.HttpResponseMessage&quot;> </xref> 특정 <xref:System.Net.Http.HttpResponseMessage.StatusCode*>.</xref:System.Net.Http.HttpResponseMessage.StatusCode*> 클래스"
  syntax:
    content: public HttpResponseMessage (System.Net.HttpStatusCode statusCode);
    parameters:
    - id: statusCode
      type: System.Net.HttpStatusCode
      description: "HTTP 응답의 상태 코드입니다."
  overload: System.Net.Http.HttpResponseMessage.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.HttpResponseMessage.Content
  id: Content
  parent: System.Net.Http.HttpResponseMessage
  langs:
  - csharp
  name: Content
  nameWithType: HttpResponseMessage.Content
  fullName: System.Net.Http.HttpResponseMessage.Content
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "HTTP 응답 메시지의 콘텐츠를 가져오거나 설정 합니다."
  remarks: "HTTP 응답 메시지의 내용을 RFC 2616에 정의 된 엔터티 본문에 해당 합니다."
  syntax:
    content: public System.Net.Http.HttpContent Content { get; set; }
    return:
      type: System.Net.Http.HttpContent
      description: "HTTP 응답 메시지의 내용입니다."
  overload: System.Net.Http.HttpResponseMessage.Content*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.HttpResponseMessage.Dispose
  id: Dispose
  parent: System.Net.Http.HttpResponseMessage
  langs:
  - csharp
  name: Dispose()
  nameWithType: HttpResponseMessage.Dispose()
  fullName: System.Net.Http.HttpResponseMessage.Dispose()
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "릴리스 관리 되지 않는 리소스에서 사용 하는 관리 되지 않는 리소스와 삭제는 <xref href=&quot;System.Net.Http.HttpResponseMessage&quot;> </xref>합니다."
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Net.Http.HttpResponseMessage.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.HttpResponseMessage.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Net.Http.HttpResponseMessage
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: HttpResponseMessage.Dispose(Boolean)
  fullName: System.Net.Http.HttpResponseMessage.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "사용 하는 관리 되지 않는 리소스를 해제는 <xref href=&quot;System.Net.Http.HttpResponseMessage&quot;> </xref> 관리 되는 리소스를 선택적으로 삭제 하 고 있습니다."
  remarks: "이 메서드는 public `Dispose()` 메서드 및 <xref:System.Object.Finalize%2A>메서드.</xref:System.Object.Finalize%2A> `Dispose()`보호 된 호출 `Dispose(Boolean)` 메서드는 `disposing` 매개 변수 설정 `true`합니다. <xref:System.Object.Finalize%2A>호출 `Dispose` 와 `disposing` 로 설정 `false`합니다. 경우는 `disposing` 매개 변수는 `true`,이 메서드는 관리 개체가 보유 하는 모든 리소스를 해제 합니다.이 <xref:System.Net.Http.HttpResponseMessage>참조.</xref:System.Net.Http.HttpResponseMessage></xref:System.Object.Finalize%2A> 이 메서드 호출에서 `Dispose()` 각 참조 된 개체의 메서드."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>관리 되는 관리 되지 않는 리소스만 해제 하려면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 관리 되지 않는 리소스를 해제 합니다."
  overload: System.Net.Http.HttpResponseMessage.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.HttpResponseMessage.EnsureSuccessStatusCode
  id: EnsureSuccessStatusCode
  parent: System.Net.Http.HttpResponseMessage
  langs:
  - csharp
  name: EnsureSuccessStatusCode()
  nameWithType: HttpResponseMessage.EnsureSuccessStatusCode()
  fullName: System.Net.Http.HttpResponseMessage.EnsureSuccessStatusCode()
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "예외가 throw 된 <xref:System.Net.Http.HttpResponseMessage.IsSuccessStatusCode*>HTTP 응답에 대 한 속성은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Net.Http.HttpResponseMessage.IsSuccessStatusCode*>"
  remarks: "EnsureSuccessStatusCode 메서드는 HTTP 응답에 실패 한 경우 예외를 throw 합니다. 경우는 <xref:System.Net.Http.HttpResponseMessage.Content%2A>않습니다 `null`,이 메서드는 호출 또한 <xref:System.Net.Http.HttpResponseMessage.Dispose%2A>스레드와 관리 되지 않는 리소스를 해제 합니다.</xref:System.Net.Http.HttpResponseMessage.Dispose%2A> </xref:System.Net.Http.HttpResponseMessage.Content%2A>"
  syntax:
    content: public System.Net.Http.HttpResponseMessage EnsureSuccessStatusCode ();
    parameters: []
    return:
      type: System.Net.Http.HttpResponseMessage
      description: "호출이 성공 하면 HTTP 응답 메시지입니다."
  overload: System.Net.Http.HttpResponseMessage.EnsureSuccessStatusCode*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.HttpResponseMessage.Headers
  id: Headers
  parent: System.Net.Http.HttpResponseMessage
  langs:
  - csharp
  name: Headers
  nameWithType: HttpResponseMessage.Headers
  fullName: System.Net.Http.HttpResponseMessage.Headers
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "HTTP 응답 헤더의 컬렉션을 가져옵니다."
  syntax:
    content: public System.Net.Http.Headers.HttpResponseHeaders Headers { get; }
    return:
      type: System.Net.Http.Headers.HttpResponseHeaders
      description: "HTTP 응답 헤더의 컬렉션입니다."
  overload: System.Net.Http.HttpResponseMessage.Headers*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.HttpResponseMessage.IsSuccessStatusCode
  id: IsSuccessStatusCode
  parent: System.Net.Http.HttpResponseMessage
  langs:
  - csharp
  name: IsSuccessStatusCode
  nameWithType: HttpResponseMessage.IsSuccessStatusCode
  fullName: System.Net.Http.HttpResponseMessage.IsSuccessStatusCode
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "HTTP 응답이 성공 했는지 여부를 나타내는 값을 가져옵니다."
  syntax:
    content: public bool IsSuccessStatusCode { get; }
    return:
      type: System.Boolean
      description: "HTTP 응답이 성공 했는지 여부를 나타내는 값입니다. <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우 <xref:System.Net.Http.HttpResponseMessage.StatusCode*>범위 200-299; 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Net.Http.HttpResponseMessage.StatusCode*>"
  overload: System.Net.Http.HttpResponseMessage.IsSuccessStatusCode*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.HttpResponseMessage.ReasonPhrase
  id: ReasonPhrase
  parent: System.Net.Http.HttpResponseMessage
  langs:
  - csharp
  name: ReasonPhrase
  nameWithType: HttpResponseMessage.ReasonPhrase
  fullName: System.Net.Http.HttpResponseMessage.ReasonPhrase
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "일반적으로 상태 코드와 함께 서버 인증에서 전송 되는 이유 구문을 가져오거나 설정 합니다."
  syntax:
    content: public string ReasonPhrase { get; set; }
    return:
      type: System.String
      description: "서버에서 보낸 이유 구문입니다."
  overload: System.Net.Http.HttpResponseMessage.ReasonPhrase*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.HttpResponseMessage.RequestMessage
  id: RequestMessage
  parent: System.Net.Http.HttpResponseMessage
  langs:
  - csharp
  name: RequestMessage
  nameWithType: HttpResponseMessage.RequestMessage
  fullName: System.Net.Http.HttpResponseMessage.RequestMessage
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "이 응답 메시지를 초래한 요청 메시지를 가져오거나 설정 합니다."
  remarks: "이 응답 메시지를 초래한 요청 메시지에이 속성이 설정 되어 있습니다. 사용 하 여 보낸 요청 대해서 <xref:System.Net.Http.HttpClient>,이 속성 앞에 최종 응답에 대 한 실제 요청 메시지를 가리킵니다.</xref:System.Net.Http.HttpClient> Note는 사용자가 요청을 보낼 때 제공한 동일한 메시지 아닐 수 있습니다. 이 일반적으로 요청 리디렉션을 또는 인증으로 인해 메일이 다시 전송 해야 하는 경우. 이 속성은 만든 대상을 확인 URL 실제로 응답 (리디렉션이 발생 한 경우에 유용함) 데 사용할 수 있습니다."
  syntax:
    content: public System.Net.Http.HttpRequestMessage RequestMessage { get; set; }
    return:
      type: System.Net.Http.HttpRequestMessage
      description: "이 응답 메시지를 초래한 요청 메시지입니다."
  overload: System.Net.Http.HttpResponseMessage.RequestMessage*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.HttpResponseMessage.StatusCode
  id: StatusCode
  parent: System.Net.Http.HttpResponseMessage
  langs:
  - csharp
  name: StatusCode
  nameWithType: HttpResponseMessage.StatusCode
  fullName: System.Net.Http.HttpResponseMessage.StatusCode
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "HTTP 응답의 상태 코드를 가져오거나 설정 합니다."
  syntax:
    content: public System.Net.HttpStatusCode StatusCode { get; set; }
    return:
      type: System.Net.HttpStatusCode
      description: "HTTP 응답의 상태 코드입니다."
  overload: System.Net.Http.HttpResponseMessage.StatusCode*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.HttpResponseMessage.ToString
  id: ToString
  parent: System.Net.Http.HttpResponseMessage
  langs:
  - csharp
  name: ToString()
  nameWithType: HttpResponseMessage.ToString()
  fullName: System.Net.Http.HttpResponseMessage.ToString()
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "현재 개체를 나타내는 문자열을 반환 합니다."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "현재 개체의 문자열 표현입니다."
  overload: System.Net.Http.HttpResponseMessage.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.HttpResponseMessage.Version
  id: Version
  parent: System.Net.Http.HttpResponseMessage
  langs:
  - csharp
  name: Version
  nameWithType: HttpResponseMessage.Version
  fullName: System.Net.Http.HttpResponseMessage.Version
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "HTTP 메시지 버전을 가져오거나 설정 합니다."
  syntax:
    content: public Version Version { get; set; }
    return:
      type: System.Version
      description: "HTTP 메시지 버전입니다. 기본값은 1.1."
  overload: System.Net.Http.HttpResponseMessage.Version*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Net.Http.HttpResponseMessage.#ctor
  parent: System.Net.Http.HttpResponseMessage
  isExternal: false
  name: HttpResponseMessage()
  nameWithType: HttpResponseMessage.HttpResponseMessage()
  fullName: System.Net.Http.HttpResponseMessage.HttpResponseMessage()
- uid: System.Net.Http.HttpResponseMessage.#ctor(System.Net.HttpStatusCode)
  parent: System.Net.Http.HttpResponseMessage
  isExternal: false
  name: HttpResponseMessage(HttpStatusCode)
  nameWithType: HttpResponseMessage.HttpResponseMessage(HttpStatusCode)
  fullName: System.Net.Http.HttpResponseMessage.HttpResponseMessage(HttpStatusCode)
- uid: System.Net.HttpStatusCode
  parent: System.Net
  isExternal: true
  name: HttpStatusCode
  nameWithType: HttpStatusCode
  fullName: System.Net.HttpStatusCode
- uid: System.Net.Http.HttpResponseMessage.Content
  parent: System.Net.Http.HttpResponseMessage
  isExternal: false
  name: Content
  nameWithType: HttpResponseMessage.Content
  fullName: System.Net.Http.HttpResponseMessage.Content
- uid: System.Net.Http.HttpContent
  parent: System.Net.Http
  isExternal: false
  name: HttpContent
  nameWithType: HttpContent
  fullName: System.Net.Http.HttpContent
- uid: System.Net.Http.HttpResponseMessage.Dispose
  parent: System.Net.Http.HttpResponseMessage
  isExternal: false
  name: Dispose()
  nameWithType: HttpResponseMessage.Dispose()
  fullName: System.Net.Http.HttpResponseMessage.Dispose()
- uid: System.Net.Http.HttpResponseMessage.Dispose(System.Boolean)
  parent: System.Net.Http.HttpResponseMessage
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: HttpResponseMessage.Dispose(Boolean)
  fullName: System.Net.Http.HttpResponseMessage.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.Http.HttpResponseMessage.EnsureSuccessStatusCode
  parent: System.Net.Http.HttpResponseMessage
  isExternal: false
  name: EnsureSuccessStatusCode()
  nameWithType: HttpResponseMessage.EnsureSuccessStatusCode()
  fullName: System.Net.Http.HttpResponseMessage.EnsureSuccessStatusCode()
- uid: System.Net.Http.HttpResponseMessage
  parent: System.Net.Http
  isExternal: false
  name: HttpResponseMessage
  nameWithType: HttpResponseMessage
  fullName: System.Net.Http.HttpResponseMessage
- uid: System.Net.Http.HttpResponseMessage.Headers
  parent: System.Net.Http.HttpResponseMessage
  isExternal: false
  name: Headers
  nameWithType: HttpResponseMessage.Headers
  fullName: System.Net.Http.HttpResponseMessage.Headers
- uid: System.Net.Http.Headers.HttpResponseHeaders
  parent: System.Net.Http.Headers
  isExternal: false
  name: HttpResponseHeaders
  nameWithType: HttpResponseHeaders
  fullName: System.Net.Http.Headers.HttpResponseHeaders
- uid: System.Net.Http.HttpResponseMessage.IsSuccessStatusCode
  parent: System.Net.Http.HttpResponseMessage
  isExternal: false
  name: IsSuccessStatusCode
  nameWithType: HttpResponseMessage.IsSuccessStatusCode
  fullName: System.Net.Http.HttpResponseMessage.IsSuccessStatusCode
- uid: System.Net.Http.HttpResponseMessage.ReasonPhrase
  parent: System.Net.Http.HttpResponseMessage
  isExternal: false
  name: ReasonPhrase
  nameWithType: HttpResponseMessage.ReasonPhrase
  fullName: System.Net.Http.HttpResponseMessage.ReasonPhrase
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.Http.HttpResponseMessage.RequestMessage
  parent: System.Net.Http.HttpResponseMessage
  isExternal: false
  name: RequestMessage
  nameWithType: HttpResponseMessage.RequestMessage
  fullName: System.Net.Http.HttpResponseMessage.RequestMessage
- uid: System.Net.Http.HttpRequestMessage
  parent: System.Net.Http
  isExternal: false
  name: HttpRequestMessage
  nameWithType: HttpRequestMessage
  fullName: System.Net.Http.HttpRequestMessage
- uid: System.Net.Http.HttpResponseMessage.StatusCode
  parent: System.Net.Http.HttpResponseMessage
  isExternal: false
  name: StatusCode
  nameWithType: HttpResponseMessage.StatusCode
  fullName: System.Net.Http.HttpResponseMessage.StatusCode
- uid: System.Net.Http.HttpResponseMessage.ToString
  parent: System.Net.Http.HttpResponseMessage
  isExternal: false
  name: ToString()
  nameWithType: HttpResponseMessage.ToString()
  fullName: System.Net.Http.HttpResponseMessage.ToString()
- uid: System.Net.Http.HttpResponseMessage.Version
  parent: System.Net.Http.HttpResponseMessage
  isExternal: false
  name: Version
  nameWithType: HttpResponseMessage.Version
  fullName: System.Net.Http.HttpResponseMessage.Version
- uid: System.Version
  parent: System
  isExternal: true
  name: Version
  nameWithType: Version
  fullName: System.Version
- uid: System.Net.Http.HttpResponseMessage.#ctor*
  parent: System.Net.Http.HttpResponseMessage
  isExternal: false
  name: HttpResponseMessage
  nameWithType: HttpResponseMessage.HttpResponseMessage
- uid: System.Net.Http.HttpResponseMessage.Content*
  parent: System.Net.Http.HttpResponseMessage
  isExternal: false
  name: Content
  nameWithType: HttpResponseMessage.Content
- uid: System.Net.Http.HttpResponseMessage.Dispose*
  parent: System.Net.Http.HttpResponseMessage
  isExternal: false
  name: Dispose
  nameWithType: HttpResponseMessage.Dispose
- uid: System.Net.Http.HttpResponseMessage.EnsureSuccessStatusCode*
  parent: System.Net.Http.HttpResponseMessage
  isExternal: false
  name: EnsureSuccessStatusCode
  nameWithType: HttpResponseMessage.EnsureSuccessStatusCode
- uid: System.Net.Http.HttpResponseMessage.Headers*
  parent: System.Net.Http.HttpResponseMessage
  isExternal: false
  name: Headers
  nameWithType: HttpResponseMessage.Headers
- uid: System.Net.Http.HttpResponseMessage.IsSuccessStatusCode*
  parent: System.Net.Http.HttpResponseMessage
  isExternal: false
  name: IsSuccessStatusCode
  nameWithType: HttpResponseMessage.IsSuccessStatusCode
- uid: System.Net.Http.HttpResponseMessage.ReasonPhrase*
  parent: System.Net.Http.HttpResponseMessage
  isExternal: false
  name: ReasonPhrase
  nameWithType: HttpResponseMessage.ReasonPhrase
- uid: System.Net.Http.HttpResponseMessage.RequestMessage*
  parent: System.Net.Http.HttpResponseMessage
  isExternal: false
  name: RequestMessage
  nameWithType: HttpResponseMessage.RequestMessage
- uid: System.Net.Http.HttpResponseMessage.StatusCode*
  parent: System.Net.Http.HttpResponseMessage
  isExternal: false
  name: StatusCode
  nameWithType: HttpResponseMessage.StatusCode
- uid: System.Net.Http.HttpResponseMessage.ToString*
  parent: System.Net.Http.HttpResponseMessage
  isExternal: false
  name: ToString
  nameWithType: HttpResponseMessage.ToString
- uid: System.Net.Http.HttpResponseMessage.Version*
  parent: System.Net.Http.HttpResponseMessage
  isExternal: false
  name: Version
  nameWithType: HttpResponseMessage.Version
