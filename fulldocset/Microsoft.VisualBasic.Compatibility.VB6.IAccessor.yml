### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.Compatibility.VB6.IAccessor
  id: IAccessor
  children:
  - Microsoft.VisualBasic.Compatibility.VB6.IAccessor.AddRefAccessor(System.Int32,System.Int32@)
  - Microsoft.VisualBasic.Compatibility.VB6.IAccessor.CreateAccessor(System.Int32,System.Int32,Microsoft.VisualBasic.Compatibility.VB6.DBBINDING[],System.Int32,System.Int32@,System.IntPtr)
  - Microsoft.VisualBasic.Compatibility.VB6.IAccessor.GetBindings(System.Int32,System.Int32@,System.Int32@,System.IntPtr@)
  - Microsoft.VisualBasic.Compatibility.VB6.IAccessor.ReleaseAccessor(System.Int32,System.Int32@)
  langs:
  - csharp
  name: IAccessor
  nameWithType: IAccessor
  fullName: Microsoft.VisualBasic.Compatibility.VB6.IAccessor
  type: Interface
  summary: "OLE DB의 구현을 제공 <xref uid=&quot;langword_csharp_IAccessor&quot; name=&quot;IAccessor&quot; href=&quot;&quot;> </xref> Visual Basic 6.0에서 업그레이드 하는 응용 프로그램에서 사용 하기 위한 인터페이스입니다."
  remarks: >-
    > [!NOTE]

    >  Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]. In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]. They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] implementation.
  syntax:
    content: >-
      [System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")]

      [System.Runtime.InteropServices.Guid("0c733a8c-2a1c-11ce-ade5-00aa0044773d")]

      [System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]

      public interface IAccessor
  implements: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.IAccessor.AddRefAccessor(System.Int32,System.Int32@)
  id: AddRefAccessor(System.Int32,System.Int32@)
  parent: Microsoft.VisualBasic.Compatibility.VB6.IAccessor
  langs:
  - csharp
  name: AddRefAccessor(Int32,Int32)
  nameWithType: IAccessor.AddRefAccessor(Int32,Int32)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.IAccessor.AddRefAccessor(Int32,Int32)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility.Data
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "기존 접근자에 대 한 참조 횟수를 추가합니다."
  remarks: >-
    > [!NOTE]

    >  Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]. In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]. They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] implementation.
  syntax:
    content: public void AddRefAccessor (int hAccessor, out int cRefCount);
    parameters:
    - id: hAccessor
      type: System.Int32
      description: "접근자의 참조 횟수를 증가의 핸들입니다."
    - id: cRefCount
      type: System.Int32
      description: "접근자 핸들의 참조 횟수를 반환할 메모리에 대 한 포인터입니다. 경우 `cRefCount` 가 null 포인터 참조 횟수가 없는 반환 합니다."
  overload: Microsoft.VisualBasic.Compatibility.VB6.IAccessor.AddRefAccessor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.IAccessor.CreateAccessor(System.Int32,System.Int32,Microsoft.VisualBasic.Compatibility.VB6.DBBINDING[],System.Int32,System.Int32@,System.IntPtr)
  id: CreateAccessor(System.Int32,System.Int32,Microsoft.VisualBasic.Compatibility.VB6.DBBINDING[],System.Int32,System.Int32@,System.IntPtr)
  parent: Microsoft.VisualBasic.Compatibility.VB6.IAccessor
  langs:
  - csharp
  name: CreateAccessor(Int32,Int32,DBBINDING[],Int32,Int32,IntPtr)
  nameWithType: IAccessor.CreateAccessor(Int32,Int32,DBBINDING[],Int32,Int32,IntPtr)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.IAccessor.CreateAccessor(Int32,Int32,DBBINDING[],Int32,Int32,IntPtr)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility.Data
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "바인딩 집합에서 접근자를 만듭니다."
  remarks: >-
    > [!NOTE]

    >  Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]. In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]. They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] implementation.
  syntax:
    content: public void CreateAccessor (int accessorFlags, int cBindings, Microsoft.VisualBasic.Compatibility.VB6.DBBINDING[] bindings, int cbRowSize, out int hAccessor, IntPtr pBindStatus);
    parameters:
    - id: accessorFlags
      type: System.Int32
      description: "사용할 수 있는 방법을 소비자는 접근자의 속성을 설명 하는 비트 마스크입니다."
    - id: cBindings
      type: System.Int32
      description: "접근자의 바인딩 수입니다."
    - id: bindings
      type: Microsoft.VisualBasic.Compatibility.VB6.DBBINDING[]
      description: "배열을 <xref href=&quot;Microsoft.VisualBasic.Compatibility.VB6.DBBINDING&quot;> </xref> 구조입니다."
    - id: cbRowSize
      type: System.Int32
      description: "소비자 버퍼에 있는 매개 변수 또는 조건 값의 단일 집합에 대 한 할당 된 바이트 수입니다."
    - id: hAccessor
      type: System.Int32
      description: "만든된 접근자 핸들을 반환할 메모리에 대 한 포인터입니다."
    - id: pBindStatus
      type: System.IntPtr
      description: "배열에 대 한 포인터 <xref uid=&quot;langword_csharp_DBBINDSTATUS&quot; name=&quot;DBBINDSTATUS&quot; href=&quot;&quot;> </xref> 값입니다."
  overload: Microsoft.VisualBasic.Compatibility.VB6.IAccessor.CreateAccessor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.IAccessor.GetBindings(System.Int32,System.Int32@,System.Int32@,System.IntPtr@)
  id: GetBindings(System.Int32,System.Int32@,System.Int32@,System.IntPtr@)
  parent: Microsoft.VisualBasic.Compatibility.VB6.IAccessor
  langs:
  - csharp
  name: GetBindings(Int32,Int32,Int32,IntPtr)
  nameWithType: IAccessor.GetBindings(Int32,Int32,Int32,IntPtr)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.IAccessor.GetBindings(Int32,Int32,Int32,IntPtr)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility.Data
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "접근자 바인딩을 반환합니다."
  remarks: >-
    > [!NOTE]

    >  Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]. In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]. They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] implementation.
  syntax:
    content: public void GetBindings (int hAccessor, out int accessorFlags, out int cBindings, out IntPtr rgBindings);
    parameters:
    - id: hAccessor
      type: System.Int32
      description: "바인딩을 반환 될 접근자의 핸들입니다."
    - id: accessorFlags
      type: System.Int32
      description: "사용할 용도 소비자는 접근자의 속성을 설명 하는 비트 마스크를 반환할 메모리에 대 한 포인터입니다."
    - id: cBindings
      type: System.Int32
      description: "접근자에서 바인딩 수를 반환할 메모리에 대 한 포인터입니다."
    - id: rgBindings
      type: System.IntPtr
      description: "배열을 반환할 메모리에 대 한 포인터 <xref uid=&quot;langword_csharp_DBBINDSTATUS&quot; name=&quot;DBBINDSTATUS&quot; href=&quot;&quot;> </xref> 구조입니다."
  overload: Microsoft.VisualBasic.Compatibility.VB6.IAccessor.GetBindings*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.IAccessor.ReleaseAccessor(System.Int32,System.Int32@)
  id: ReleaseAccessor(System.Int32,System.Int32@)
  parent: Microsoft.VisualBasic.Compatibility.VB6.IAccessor
  langs:
  - csharp
  name: ReleaseAccessor(Int32,Int32)
  nameWithType: IAccessor.ReleaseAccessor(Int32,Int32)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.IAccessor.ReleaseAccessor(Int32,Int32)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility.Data
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "접근자를 해제 합니다."
  remarks: >-
    > [!NOTE]

    >  Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]. In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]. They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] implementation.
  syntax:
    content: public void ReleaseAccessor (int hAccessor, out int cRefCount);
    parameters:
    - id: hAccessor
      type: System.Int32
      description: "해제할 접근자의 핸들입니다."
    - id: cRefCount
      type: System.Int32
      description: "접근자 핸들의 남은 참조 수를 반환할 메모리에 대 한 포인터입니다."
  overload: Microsoft.VisualBasic.Compatibility.VB6.IAccessor.ReleaseAccessor*
  exceptions: []
  platform:
  - net462
references:
- uid: Microsoft.VisualBasic.Compatibility.VB6.IAccessor.AddRefAccessor(System.Int32,System.Int32@)
  parent: Microsoft.VisualBasic.Compatibility.VB6.IAccessor
  isExternal: false
  name: AddRefAccessor(Int32,Int32)
  nameWithType: IAccessor.AddRefAccessor(Int32,Int32)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.IAccessor.AddRefAccessor(Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.VisualBasic.Compatibility.VB6.IAccessor.CreateAccessor(System.Int32,System.Int32,Microsoft.VisualBasic.Compatibility.VB6.DBBINDING[],System.Int32,System.Int32@,System.IntPtr)
  parent: Microsoft.VisualBasic.Compatibility.VB6.IAccessor
  isExternal: false
  name: CreateAccessor(Int32,Int32,DBBINDING[],Int32,Int32,IntPtr)
  nameWithType: IAccessor.CreateAccessor(Int32,Int32,DBBINDING[],Int32,Int32,IntPtr)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.IAccessor.CreateAccessor(Int32,Int32,DBBINDING[],Int32,Int32,IntPtr)
- uid: Microsoft.VisualBasic.Compatibility.VB6.DBBINDING[]
  parent: Microsoft.VisualBasic.Compatibility.VB6
  isExternal: false
  name: DBBINDING
  nameWithType: DBBINDING
  fullName: Microsoft.VisualBasic.Compatibility.VB6.DBBINDING[]
  spec.csharp:
  - uid: Microsoft.VisualBasic.Compatibility.VB6.DBBINDING
    name: DBBINDING
    nameWithType: DBBINDING
    fullName: DBBINDING[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: Microsoft.VisualBasic.Compatibility.VB6.IAccessor.GetBindings(System.Int32,System.Int32@,System.Int32@,System.IntPtr@)
  parent: Microsoft.VisualBasic.Compatibility.VB6.IAccessor
  isExternal: false
  name: GetBindings(Int32,Int32,Int32,IntPtr)
  nameWithType: IAccessor.GetBindings(Int32,Int32,Int32,IntPtr)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.IAccessor.GetBindings(Int32,Int32,Int32,IntPtr)
- uid: Microsoft.VisualBasic.Compatibility.VB6.IAccessor.ReleaseAccessor(System.Int32,System.Int32@)
  parent: Microsoft.VisualBasic.Compatibility.VB6.IAccessor
  isExternal: false
  name: ReleaseAccessor(Int32,Int32)
  nameWithType: IAccessor.ReleaseAccessor(Int32,Int32)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.IAccessor.ReleaseAccessor(Int32,Int32)
- uid: Microsoft.VisualBasic.Compatibility.VB6.IAccessor.AddRefAccessor*
  parent: Microsoft.VisualBasic.Compatibility.VB6.IAccessor
  isExternal: false
  name: AddRefAccessor
  nameWithType: IAccessor.AddRefAccessor
- uid: Microsoft.VisualBasic.Compatibility.VB6.IAccessor.CreateAccessor*
  parent: Microsoft.VisualBasic.Compatibility.VB6.IAccessor
  isExternal: false
  name: CreateAccessor
  nameWithType: IAccessor.CreateAccessor
- uid: Microsoft.VisualBasic.Compatibility.VB6.IAccessor.GetBindings*
  parent: Microsoft.VisualBasic.Compatibility.VB6.IAccessor
  isExternal: false
  name: GetBindings
  nameWithType: IAccessor.GetBindings
- uid: Microsoft.VisualBasic.Compatibility.VB6.IAccessor.ReleaseAccessor*
  parent: Microsoft.VisualBasic.Compatibility.VB6.IAccessor
  isExternal: false
  name: ReleaseAccessor
  nameWithType: IAccessor.ReleaseAccessor
