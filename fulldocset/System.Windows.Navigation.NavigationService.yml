### YamlMime:ManagedReference
items:
- uid: System.Windows.Navigation.NavigationService
  id: NavigationService
  children:
  - System.Windows.Navigation.NavigationService.AddBackEntry(System.Windows.Navigation.CustomContentState)
  - System.Windows.Navigation.NavigationService.CanGoBack
  - System.Windows.Navigation.NavigationService.CanGoForward
  - System.Windows.Navigation.NavigationService.Content
  - System.Windows.Navigation.NavigationService.CurrentSource
  - System.Windows.Navigation.NavigationService.FragmentNavigation
  - System.Windows.Navigation.NavigationService.GetNavigationService(System.Windows.DependencyObject)
  - System.Windows.Navigation.NavigationService.GoBack
  - System.Windows.Navigation.NavigationService.GoForward
  - System.Windows.Navigation.NavigationService.LoadCompleted
  - System.Windows.Navigation.NavigationService.Navigate(System.Object)
  - System.Windows.Navigation.NavigationService.Navigate(System.Uri)
  - System.Windows.Navigation.NavigationService.Navigate(System.Object,System.Object)
  - System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object)
  - System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object,System.Boolean)
  - System.Windows.Navigation.NavigationService.Navigated
  - System.Windows.Navigation.NavigationService.Navigating
  - System.Windows.Navigation.NavigationService.NavigationFailed
  - System.Windows.Navigation.NavigationService.NavigationProgress
  - System.Windows.Navigation.NavigationService.NavigationStopped
  - System.Windows.Navigation.NavigationService.Refresh
  - System.Windows.Navigation.NavigationService.RemoveBackEntry
  - System.Windows.Navigation.NavigationService.Source
  - System.Windows.Navigation.NavigationService.StopLoading
  langs:
  - csharp
  name: NavigationService
  nameWithType: NavigationService
  fullName: System.Windows.Navigation.NavigationService
  type: Class
  summary: "메서드, 속성 및 탐색을 지 원하는 이벤트를 포함 합니다."
  remarks: "NavigationService는 브라우저 스타일 탐색의 컨텍스트 내에서 콘텐츠를 다운로드 하는 기능을 캡슐화 합니다.       콘텐츠는 모든 종류의 될 수 [!INCLUDE[TLA2#tla_winfx](~/add/includes/tla2sharptla-winfx-md.md)] 개체 및 [!INCLUDE[TLA#tla_html](~/add/includes/tlasharptla-html-md.md)] 파일입니다. 그러나 일반적으로 페이지는 콘텐츠를 탐색 하는 방법으로 기본 설정 (참조 <xref:System.Windows.Controls.Page>).</xref:System.Windows.Controls.Page>       개체의 인스턴스를 제공 하 고 오버 로드를 호출 하 여 콘텐츠를 탐색할 수 있습니다는 <xref:System.Windows.Navigation.NavigationService.Navigate%2A>메서드 개체를 받는:- <xref:System.Windows.Navigation.NavigationService.Navigate%28System.Object%29?displayProperty=fullName>- <xref:System.Windows.Navigation.NavigationService.Navigate%28System.Object%2CSystem.Object%29?displayProperty=fullName>콘텐츠 절대 또는 상대 전달 하 여 탐색할 수 있습니다 또는 [!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)] 중 하나에 <xref:System.Windows.Navigation.NavigationService.Navigate%2A>허용 하는 메서드 오버 로드는 [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]:- <xref:System.Windows.Navigation.NavigationService.Navigate%28System.Uri%29?displayProperty=fullName>- <xref:System.Windows.Navigation.NavigationService.Navigate%28System.Uri%2CSystem.Object%29?displayProperty=fullName>- <xref:System.Windows.Navigation.NavigationService.Navigate%28System.Uri%2CSystem.Object%2CSystem.Boolean%29?displayProperty=fullName>하 여 콘텐츠를 탐색 하는 경우 [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)], NavigationService 콘텐츠를 포함 하는 개체를 반환 합니다.</xref:System.Windows.Navigation.NavigationService.Navigate%28System.Uri%2CSystem.Object%2CSystem.Boolean%29?displayProperty=fullName> </xref:System.Windows.Navigation.NavigationService.Navigate%28System.Uri%2CSystem.Object%29?displayProperty=fullName> </xref:System.Windows.Navigation.NavigationService.Navigate%28System.Uri%29?displayProperty=fullName> </xref:System.Windows.Navigation.NavigationService.Navigate%2A> </xref:System.Windows.Navigation.NavigationService.Navigate%28System.Object%2CSystem.Object%29?displayProperty=fullName> </xref:System.Windows.Navigation.NavigationService.Navigate%28System.Object%29?displayProperty=fullName> </xref:System.Windows.Navigation.NavigationService.Navigate%2A>       다음 이벤트를 통해 탐색 수명을 추적할 수 있습니다.- <xref:System.Windows.Navigation.NavigationService.Navigating>- <xref:System.Windows.Navigation.NavigationService.Navigated>- <xref:System.Windows.Navigation.NavigationService.NavigationProgress>- <xref:System.Windows.Navigation.NavigationService.NavigationFailed>- <xref:System.Windows.Navigation.NavigationService.NavigationStopped>- <xref:System.Windows.Navigation.NavigationService.LoadCompleted>- <xref:System.Windows.Navigation.NavigationService.FragmentNavigation>.</xref:System.Windows.Navigation.NavigationService.FragmentNavigation> </xref:System.Windows.Navigation.NavigationService.LoadCompleted> </xref:System.Windows.Navigation.NavigationService.NavigationStopped> </xref:System.Windows.Navigation.NavigationService.NavigationFailed> </xref:System.Windows.Navigation.NavigationService.NavigationProgress> </xref:System.Windows.Navigation.NavigationService.Navigated> </xref:System.Windows.Navigation.NavigationService.Navigating>       일부 이벤트가 발생 될 때마다 탐색에는 다음이 발생 합니다. 발생 하는 이벤트 집합이 (취소, 중지, 또는 실패) 형식 (콘텐츠 또는 콘텐츠 조각) 발생 하는 탐색 및 탐색이 완료 되는 방식에 따라 결정 됩니다.       다음 그림은 이러한 이벤트는 발생 순서: ![페이지 탐색 흐름 차트](~/add/media/navigationoverviewfigure11.png &quot;페이지 탐색 흐름 차트&quot;) NavigationService 되 고 탐색을 포함 하 여 콘텐츠에 대 한 정보를 제공 하는 동안 또는 탐색 후의 [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] 탐색 중인 콘텐츠에의 (<xref:System.Windows.Navigation.NavigationService.Source%2A>), [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] 현재 콘텐츠의 (<xref:System.Windows.Navigation.NavigationService.CurrentSource%2A>), 및 탐색 하는 콘텐츠를 포함 하는 개체 (<xref:System.Windows.Navigation.NavigationService.Content%2A>).</xref:System.Windows.Navigation.NavigationService.Content%2A> </xref:System.Windows.Navigation.NavigationService.CurrentSource%2A> </xref:System.Windows.Navigation.NavigationService.Source%2A>       콘텐츠 탐색 NavigationService 탐색 기록의 항목으로 탐색을 기록 합니다. 호출 하 여 새 탐색 발생 될 때 탐색 기록을 다시에 항목이 추가 되는 <xref:System.Windows.Navigation.NavigationService.Navigate%2A>메서드, 또는 <xref:System.Windows.Navigation.NavigationService.GoForward%2A>.</xref:System.Windows.Navigation.NavigationService.GoForward%2A> 를 호출 하 여 앞으로 탐색 기록의 항목으로 이동 하 여</xref:System.Windows.Navigation.NavigationService.Navigate%2A> 항목 기록에 추가 됩니다 앞으로 탐색 뒤에 항목으로 이동 하 여 탐색 기록은 <xref:System.Windows.Navigation.NavigationService.GoBack%2A>.</xref:System.Windows.Navigation.NavigationService.GoBack%2A> 를 호출 하 여 <xref:System.Windows.Navigation.NavigationService.CanGoBack%2A>및 <xref:System.Windows.Navigation.NavigationService.CanGoForward%2A>있는지 여부를 보고 하 고 앞으로 탐색 기록 항목 뒤에 각각.</xref:System.Windows.Navigation.NavigationService.CanGoForward%2A></xref:System.Windows.Navigation.NavigationService.CanGoBack%2A> 또한 <xref:System.Windows.Navigation.NavigationService.RemoveBackEntry%2A>.</xref:System.Windows.Navigation.NavigationService.RemoveBackEntry%2A> 를 호출 하 여 뒤로 탐색 기록의 가장 최근 항목 제거 수 있습니다.       기본적으로 NavigationService 탐색 기록의 콘텐츠 개체의 인스턴스로 저장 하지 않습니다. 대신, NavigationService 탐색 기록을 사용 하 여 탐색할 될 때마다 콘텐츠 개체의 새 인스턴스를 만듭니다. 이 문제는 많은 수 및 대규모 콘텐츠를 탐색할 때 과도 한 메모리 소비를 방지 하도록 설계 되었습니다. 따라서 콘텐츠 상태는 다음 탐색에서 저장 되지 않습니다. 그러나 [!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)] 탐색 기록의 콘텐츠의 부분에 대 한 상태를 저장할 수 있는 몇 가지 방법을 제공 합니다.       사용 하 여 <xref:System.Windows.Navigation.NavigationService.AddBackEntry%2A>, 여러 인스턴스를 단일 페이지에 대 한 상태 집합을 기억할 수도 있습니다.</xref:System.Windows.Navigation.NavigationService.AddBackEntry%2A>       NavigationService은 `sealed` 클래스이 고 따라서 인스턴스화할 수 없습니다; 대신 NavigationService 탐색을 사용 하도록 설정 하려면 기가 사용 됩니다. [!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)], 탐색기가 있습니다: <xref:System.Windows.Navigation.NavigationWindow> <xref:System.Windows.Controls.Frame>.</xref:System.Windows.Controls.Frame> </xref:System.Windows.Navigation.NavigationWindow>       시각적으로 [!INCLUDE[TLA2#tla_xbap#plural](~/add/includes/tla2sharptla-xbapsharpplural-md.md)] 사용 [!INCLUDE[TLA2#tla_ie7](~/add/includes/tla2sharptla-ie7-md.md)] 통합 된 사용자 환경을 제공할 수 있도록을 탐색기로 합니다. 그러나 물리적으로, [!INCLUDE[TLA2#tla_xbap#plural](~/add/includes/tla2sharptla-xbapsharpplural-md.md)] 실제로 사용 하 여 <xref:System.Windows.Navigation.NavigationWindow>탐색기;로 <xref:System.Windows.Application.MainWindow%2A>속성의는 [!INCLUDE[TLA2#tla_xbap](~/add/includes/ajax-current-ext-md.md)] 에서 실행 중인 [!INCLUDE[TLA2#tla_ie7](~/add/includes/tla2sharptla-ie7-md.md)] 에 대 한 참조를 반환 합니다는 <xref:System.Windows.Navigation.NavigationWindow>, 및 탐색 기록에서 관리 되는 <xref:System.Windows.Navigation.NavigationWindow>통합 하 여 관리 되는 탐색 기록 된 [!INCLUDE[TLA2#tla_ie7](~/add/includes/tla2sharptla-ie7-md.md)] 다음과 같은 방법으로:-호출 하 여 콘텐츠를 탐색 하는 경우 <xref:System.Windows.Navigation.NavigationService.Navigate%2A>, <xref:System.Windows.Navigation.NavigationService.GoBack%2A>, 및 <xref:System.Windows.Navigation.NavigationService.GoForward%2A>내에서 [!INCLUDE[TLA2#tla_xbap](~/add/includes/ajax-current-ext-md.md)] 관련 탐색 기록 항목에도 추가 됩니다 [!INCLUDE[TLA2#tla_ie7](~/add/includes/tla2sharptla-ie7-md.md)] 탐색 기록.</xref:System.Windows.Navigation.NavigationService.GoForward%2A> </xref:System.Windows.Navigation.NavigationService.GoBack%2A> </xref:System.Windows.Navigation.NavigationService.Navigate%2A> </xref:System.Windows.Navigation.NavigationWindow> </xref:System.Windows.Navigation.NavigationWindow> </xref:System.Windows.Application.MainWindow%2A> </xref:System.Windows.Navigation.NavigationWindow>      -항목에는 [!INCLUDE[TLA2#tla_ie7](~/add/includes/tla2sharptla-ie7-md.md)] 탐색 [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)] 선택 되어 [!INCLUDE[TLA2#tla_ie7](~/add/includes/tla2sharptla-ie7-md.md)] NavigationService 뒤로 탐색을 사용 하면 또는 이러한 항목에 연관 된 콘텐츠를 전달 합니다.      > [!NOTE] >를 <xref:System.Windows.Controls.Frame>사용 합니다.를 호스팅하는 탐색 창의 탐색 기록 또는 자체 탐색 기록을 제공할 수 있습니다</xref:System.Windows.Controls.Frame> 경우 <xref:System.Windows.Controls.Frame>자체 탐색 기록을 제공 자체 탐색을 표시할 수 [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)] 탐색 기록의 항목을 탐색 하려면 해당 항목을 호스트 탐색기의 탐색 기록에 추가 되지 않습니다 (<xref:System.Windows.Navigation.NavigationWindow>, <xref:System.Windows.Controls.Frame>, [!INCLUDE[TLA2#tla_iegeneric](~/add/includes/tla2sharptla-iegeneric-md.md)]) 따라서을 탐색할 수 없습니다 탐색에서 및 [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)] 각 (참조 <xref:System.Windows.Controls.Frame.JournalOwnership%2A>).</xref:System.Windows.Controls.Frame.JournalOwnership%2A> </xref:System.Windows.Controls.Frame> </xref:System.Windows.Navigation.NavigationWindow> </xref:System.Windows.Controls.Frame>"
  syntax:
    content: public sealed class NavigationService
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Navigation.NavigationService.AddBackEntry(System.Windows.Navigation.CustomContentState)
  id: AddBackEntry(System.Windows.Navigation.CustomContentState)
  parent: System.Windows.Navigation.NavigationService
  langs:
  - csharp
  name: AddBackEntry(CustomContentState)
  nameWithType: NavigationService.AddBackEntry(CustomContentState)
  fullName: System.Windows.Navigation.NavigationService.AddBackEntry(CustomContentState)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Navigation
  summary: "포함 된 탐색 기록에 항목을 추가 하는 <xref href=&quot;System.Windows.Navigation.CustomContentState&quot;> </xref> 개체입니다."
  remarks: "AddBackEntry, <xref:System.Windows.Navigation.CustomContentState>, 및 <xref:System.Windows.Navigation.IProvideCustomContentState>여러 집합이 현재 콘텐츠에 대 한 상태를 기억 하는 데 사용 됩니다.</xref:System.Windows.Navigation.IProvideCustomContentState> </xref:System.Windows.Navigation.CustomContentState>"
  syntax:
    content: public void AddBackEntry (System.Windows.Navigation.CustomContentState state);
    parameters:
    - id: state
      type: System.Windows.Navigation.CustomContentState
      description: "A <xref href=&quot;System.Windows.Navigation.CustomContentState&quot;> </xref> 콘텐츠의 특정 부분에 연관 된 응용 프로그램 정의 상태를 나타내는 개체입니다."
  overload: System.Windows.Navigation.NavigationService.AddBackEntry*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>state</code><xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, 및 <xref href=&quot;System.Windows.Navigation.CustomContentState&quot;> </xref> 개체에서 반환 되지 않은 <xref:System.Windows.Navigation.IProvideCustomContentState.GetContentState*>합니다."
  platform:
  - net462
- uid: System.Windows.Navigation.NavigationService.CanGoBack
  id: CanGoBack
  parent: System.Windows.Navigation.NavigationService
  langs:
  - csharp
  name: CanGoBack
  nameWithType: NavigationService.CanGoBack
  fullName: System.Windows.Navigation.NavigationService.CanGoBack
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Navigation
  summary: "뒤로 탐색 기록에서 하나 이상의 항목이 있는지 여부를 나타내는 값을 가져옵니다."
  remarks: "뒤로 탐색 기록에서 하나 이상의 항목이 있는지 여부를 확인 하려면 CanGoBack 합니다. 호출 하기 전에이 속성을 검사 해야 <xref:System.Windows.Navigation.NavigationService.GoBack%2A>경우 <xref:System.Windows.Navigation.NavigationService.GoBack%2A>라고 뒤로 탐색 기록의 항목이 고는 <xref:System.InvalidOperationException>throw 됩니다.</xref:System.InvalidOperationException> </xref:System.Windows.Navigation.NavigationService.GoBack%2A> </xref:System.Windows.Navigation.NavigationService.GoBack%2A>      > [!NOTE] >는 여러 탐색기에서 탐색 기록을 공유 하는 경우 (<xref:System.Windows.Navigation.NavigationWindow>, <xref:System.Windows.Controls.Frame>)는 가장 최근 항목 뒤에 탐색 기록 되지 추가 된 여는 <xref:System.Windows.Navigation.NavigationService>현재 탐색기에 대 한.</xref:System.Windows.Navigation.NavigationService> </xref:System.Windows.Controls.Frame> </xref:System.Windows.Navigation.NavigationWindow>"
  syntax:
    content: public bool CanGoBack { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>뒤로 탐색 기록에 적어도 하나의 항목이 없는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Navigation.NavigationService.CanGoBack*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Navigation.NavigationService.CanGoForward
  id: CanGoForward
  parent: System.Windows.Navigation.NavigationService
  langs:
  - csharp
  name: CanGoForward
  nameWithType: NavigationService.CanGoForward
  fullName: System.Windows.Navigation.NavigationService.CanGoForward
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Navigation
  summary: "앞으로 탐색 기록에서 하나 이상의 항목이 있는지 여부를 나타내는 값을 가져옵니다."
  remarks: "앞으로 탐색 기록에서 하나 이상의 항목이 있는지 여부를 확인 하려면 CanGoForward 합니다. 호출 하기 전에이 속성을 검사 해야 <xref:System.Windows.Navigation.NavigationService.GoForward%2A>경우 <xref:System.Windows.Navigation.NavigationService.GoForward%2A>라고 있고 앞으로 탐색 기록에 항목이 없습니다.이 <xref:System.InvalidOperationException>throw 됩니다.</xref:System.InvalidOperationException> </xref:System.Windows.Navigation.NavigationService.GoForward%2A> </xref:System.Windows.Navigation.NavigationService.GoForward%2A>"
  syntax:
    content: public bool CanGoForward { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>앞으로 탐색 기록에 적어도 하나의 항목이 없는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Navigation.NavigationService.CanGoForward*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Navigation.NavigationService.Content
  id: Content
  parent: System.Windows.Navigation.NavigationService
  langs:
  - csharp
  name: Content
  nameWithType: NavigationService.Content
  fullName: System.Windows.Navigation.NavigationService.Content
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Navigation
  summary: "현재 콘텐츠를 포함 하는 개체에 대 한 참조를 가져오거나 설정 합니다."
  remarks: "두 가지 방법 중 하나에서 콘텐츠를 설정할 수 있는:-개체에 대 한 참조로 설정 하면 직접 합니다.      -간접적으로 호출 하 여 <xref:System.Windows.Navigation.NavigationService.Navigate%2A>, <xref:System.Windows.Navigation.NavigationService.GoBack%2A>, 또는 <xref:System.Windows.Navigation.NavigationService.GoForward%2A>.</xref:System.Windows.Navigation.NavigationService.GoForward%2A> </xref:System.Windows.Navigation.NavigationService.GoBack%2A> </xref:System.Windows.Navigation.NavigationService.Navigate%2A>       설정 <xref:System.Windows.Navigation.NavigationService>새 탐색 시작; 비동기, 콘텐츠 탐색이 설정 된 후 바로 검사 하면 값을 반환 하지 않습니다.</xref:System.Windows.Navigation.NavigationService>"
  syntax:
    content: public object Content { get; set; }
    return:
      type: System.Object
      description: "현재 콘텐츠를 포함 하는 개체에 대 한 참조는 개체입니다."
  overload: System.Windows.Navigation.NavigationService.Content*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Navigation.NavigationService.CurrentSource
  id: CurrentSource
  parent: System.Windows.Navigation.NavigationService
  langs:
  - csharp
  name: CurrentSource
  nameWithType: NavigationService.CurrentSource
  fullName: System.Windows.Navigation.NavigationService.CurrentSource
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Navigation
  summary: "가져옵니다는 [!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)] 마지막으로 탐색 되는 콘텐츠의 합니다."
  remarks: "CurrentSource 속성의 값을 다른 탐색 될 때까지 변경 되지 않습니다 [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] 완료 되었습니다.       CurrentSource 조각만로 설정할 수 [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]합니다."
  syntax:
    content: public Uri CurrentSource { get; }
    return:
      type: System.Uri
      description: "A <xref:System.Uri>를 사용 하 여 탐색 한 경우 마지막으로 탐색 하는 콘텐츠에 [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)], 그렇지 않으면 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Uri>"
  overload: System.Windows.Navigation.NavigationService.CurrentSource*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Navigation.NavigationService.FragmentNavigation
  id: FragmentNavigation
  parent: System.Windows.Navigation.NavigationService
  langs:
  - csharp
  name: FragmentNavigation
  nameWithType: NavigationService.FragmentNavigation
  fullName: System.Windows.Navigation.NavigationService.FragmentNavigation
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Navigation
  summary: "시작 될 때 발생 콘텐츠 조각 탐색, 즉시 발생 하 원하는 조각이 되었거나 현재 콘텐츠에 원본 뒤 [!INCLUDE[TLA2#tla_titlexaml](~/add/includes/tla2sharptla-titlexaml-md.md)] 콘텐츠가 로드 됨, 다른 콘텐츠에 있으면 하는 경우."
  remarks: "By default, a content fragment is content that is contained by a named <xref:System.Windows.UIElement>, which is a <xref:System.Windows.UIElement> whose <xref:System.Windows.FrameworkElement.Name%2A> attribute is set, eg:  \n  \n```  \n<TextBlock Name=\"FragmentName\">...</TextBlock>  \n```  \n  \n You navigate to a [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] fragment by providing a [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] with a suffix in the following format:  \n  \n \\#*FragmentName*  \n  \n The following shows an example of a [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] that refers to a content fragment:  \n  \n `http://www.microsoft.com/targetpage.xaml#FragmentName`  \n  \n After the source page loads (after <xref:System.Windows.Navigation.NavigationService.LoadCompleted> event is raised), fragment navigation begins and the <xref:System.Windows.Navigation.NavigationService> attempts to locate the [!INCLUDE[TLA2#tla_titlexaml](~/add/includes/tla2sharptla-titlexaml-md.md)] fragment. If the [!INCLUDE[TLA2#tla_titlexaml](~/add/includes/tla2sharptla-titlexaml-md.md)] fragment is found, <xref:System.Windows.Navigation.NavigationService> instructs the content navigator  (<xref:System.Windows.Navigation.NavigationWindow>, <xref:System.Windows.Controls.Frame>) to show the fragment. If you need to change this behavior, you can handle FragmentNavigation to provide your own fragment navigation behavior. FragmentNavigation is passed a <xref:System.Windows.Navigation.FragmentNavigationEventArgs> parameter which exposes properties that are useful for this purpose, including:  \n  \n-   The navigator that owns this navigation service (<xref:System.Windows.Navigation.NavigationWindow>, <xref:System.Windows.Controls.Frame>).  \n  \n-   The fragment name.  \n  \n You can handle FragmentNavigation to override the default [!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)] fragment implementation with your own custom implementation. If you do so, you need to set <xref:System.Windows.Navigation.FragmentNavigationEventArgs.Handled%2A> to `true`; otherwise, the default [!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)] fragment processing behavior is applied.  \n  \n You should avoid directly initiating navigation from within a FragmentNavigation event handler. Since FragmentNavigation is raised during an existing navigation, initiating a new navigation from a FragmentNavigation event handler creates a nested navigation that can cause the <xref:System.ExecutionEngineException> to be thrown. Instead, you can indirectly initiate navigation by creating an asynchronous work item using the <xref:System.Windows.Threading.Dispatcher>.  \n  \n> [!NOTE]\n>  When <xref:System.Windows.Navigation.NavigationService> raises FragmentNavigation, it also raises <xref:System.Windows.Application.FragmentNavigation?displayProperty=fullName> event on the <xref:System.Windows.Application> object.  \n  \n> [!IMPORTANT]\n>  Fragment navigation is not supported for loose [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] pages (markup-only [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] files with `Page` as the root element) in the following cases:  \n>   \n>  • When navigating to a fragment in a loose [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] page.  \n>   \n>  • When navigating from a loose [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] page to a fragment in another loose [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] page.  \n>   \n>  However, a loose [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] page can navigate to its own fragments."
  example:
  - "The following example shows how to handle FragmentNavigation to provide custom fragment navigation behavior. In this case, the example opens an error [!INCLUDE[TLA2#tla_titlexaml](~/add/includes/tla2sharptla-titlexaml-md.md)] page if the fragment in the source [!INCLUDE[TLA2#tla_titlexaml](~/add/includes/tla2sharptla-titlexaml-md.md)] page is not found.  \n  \n [!code-cs[NavigationServiceSnippets#MainWindowFragmentNavigationCODE](~/add/codesnippet/csharp/NavigationServiceSnippets.CSharp/MainWindow.xaml.cs#mainwindowfragmentnavigationcode)]\n [!code-vb[NavigationServiceSnippets#MainWindowFragmentNavigationCODE](~/add/codesnippet/visualbasic/navigationservicesnippets/mainwindow.xaml.vb#mainwindowfragmentnavigationcode)]"
  syntax:
    content: public event System.Windows.Navigation.FragmentNavigationEventHandler FragmentNavigation;
    return:
      type: System.Windows.Navigation.FragmentNavigationEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Navigation.NavigationService.GetNavigationService(System.Windows.DependencyObject)
  id: GetNavigationService(System.Windows.DependencyObject)
  parent: System.Windows.Navigation.NavigationService
  langs:
  - csharp
  name: GetNavigationService(DependencyObject)
  nameWithType: NavigationService.GetNavigationService(DependencyObject)
  fullName: System.Windows.Navigation.NavigationService.GetNavigationService(DependencyObject)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Navigation
  summary: "에 대 한 참조는 <xref href=&quot;System.Windows.Navigation.NavigationService&quot;> </xref> 내용이 지정 된 탐색 창에 대 한 <xref href=&quot;System.Windows.DependencyObject&quot;> </xref>합니다."
  remarks: "탐색기에는 <xref:System.Windows.Navigation.NavigationService>콘텐츠 탐색을 처리 하는.</xref:System.Windows.Navigation.NavigationService> [!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]에 두가지: <xref:System.Windows.Navigation.NavigationWindow>및 <xref:System.Windows.Controls.Frame>.</xref:System.Windows.Controls.Frame> </xref:System.Windows.Navigation.NavigationWindow> 탐색기 탐색 요청을 처리 하 고 탐색 수명 관리를 사용 하 여는 [!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)] <xref:System.Windows.Navigation.NavigationService>클래스</xref:System.Windows.Navigation.NavigationService> 요소로 구현 되는 탐색 서비스 탐색기에서 호스트 되는 콘텐츠에 탐색기의에 대 한 참조를 가져올 수 <xref:System.Windows.Navigation.NavigationService>GetNavigationService 메서드를 호출 하 여.</xref:System.Windows.Navigation.NavigationService>       GetNavigationService 반환 `null` 때는 `dependencyObject`:-은 <xref:System.Windows.Navigation.NavigationWindow>.</xref:System.Windows.Navigation.NavigationWindow>      -는 <xref:System.Windows.Controls.Frame>있는: 1.</xref:System.Windows.Controls.Frame>  다른 탐색기에 의해 호스팅됩니다.          2.  해당 <xref:System.Windows.Controls.Frame.JournalOwnership%2A>속성이 <xref:System.Windows.Navigation.JournalOwnership>.</xref:System.Windows.Navigation.JournalOwnership> 로 설정</xref:System.Windows.Controls.Frame.JournalOwnership%2A>      -탐색기에서 호스트 되는 콘텐츠에의 일부가 아닌입니다.       [!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]에 대 한 참조를 인식 하기 위한 두 개의 바로 가기를 제공는 <xref:System.Windows.Navigation.NavigationService>:- <xref:System.Windows.Navigation.NavigationService>탐색을 처리 하는 <xref:System.Windows.Controls.Page>에서 액세스할 수는 <xref:System.Windows.Controls.Page>자체의 값을 가져오고 해당 <xref:System.Windows.Controls.Page.NavigationService%2A?displayProperty=fullName>속성.</xref:System.Windows.Controls.Page.NavigationService%2A?displayProperty=fullName> </xref:System.Windows.Controls.Page> </xref:System.Windows.Controls.Page> </xref:System.Windows.Navigation.NavigationService> </xref:System.Windows.Navigation.NavigationService>      - <xref:System.Windows.Navigation.NavigationService>에서 사용 하는 <xref:System.Windows.Controls.Frame>탐색을 처리 하 여 값을 가져오는 액세스할 수 있습니다는 <xref:System.Windows.Controls.Frame.NavigationService%2A>속성.</xref:System.Windows.Controls.Frame.NavigationService%2A> </xref:System.Windows.Controls.Frame> </xref:System.Windows.Navigation.NavigationService>"
  example:
  - "The following example shows how a <xref:System.Windows.Controls.UserControl> can retrieve a navigation service by calling GetNavigationService.  \n  \n [!code-cs[NSGetNavigationServiceSnippets#GetNavigationServiceCODE1](~/add/codesnippet/csharp/NSGetNavigationServiceSnippets.CSharp/ContentUserControl.xaml.cs#getnavigationservicecode1)]\n [!code-vb[NSGetNavigationServiceSnippets#GetNavigationServiceCODE1](~/add/codesnippet/visualbasic/nsgetnavigationservicesnippets/contentusercontrol.xaml.vb#getnavigationservicecode1)]  \n[!code-cs[NSGetNavigationServiceSnippets#GetNavigationServiceCODE2](~/add/codesnippet/csharp/NSGetNavigationServiceSnippets.CSharp/ContentUserControl.xaml.cs#getnavigationservicecode2)]\n[!code-vb[NSGetNavigationServiceSnippets#GetNavigationServiceCODE2](~/add/codesnippet/visualbasic/nsgetnavigationservicesnippets/contentusercontrol.xaml.vb#getnavigationservicecode2)]"
  syntax:
    content: public static System.Windows.Navigation.NavigationService GetNavigationService (System.Windows.DependencyObject dependencyObject);
    parameters:
    - id: dependencyObject
      type: System.Windows.DependencyObject
      description: "<xref href=&quot;System.Windows.DependencyObject&quot;> </xref> 탐색기에서 호스트 되는 콘텐츠에 있습니다."
    return:
      type: System.Windows.Navigation.NavigationService
      description: "에 대 한 참조는 <xref href=&quot;System.Windows.Navigation.NavigationService&quot;> </xref> 내용이 지정 된 탐색 창에 대 한 <xref href=&quot;System.Windows.DependencyObject&quot;> </xref>; 수 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 경우에 따라 (설명 참조)."
  overload: System.Windows.Navigation.NavigationService.GetNavigationService*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>dependencyObject</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Navigation.NavigationService.GoBack
  id: GoBack
  parent: System.Windows.Navigation.NavigationService
  langs:
  - csharp
  name: GoBack()
  nameWithType: NavigationService.GoBack()
  fullName: System.Windows.Navigation.NavigationService.GoBack()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Navigation
  summary: "탐색에서 가장 최근 항목에 탐색 기록 있는 경우."
  remarks: "GoBack를 호출 하기 전에 <xref:System.Windows.Navigation.NavigationService.CanGoBack%2A>뒤로 탐색 기록의 항목이 있는지 여부를 확인 하려면 속성을 검사할 수 있습니다.</xref:System.Windows.Navigation.NavigationService.CanGoBack%2A>"
  example:
  - "The following example navigates to the most recent entry in back navigation history, if one exists.  \n  \n [!code-cs[NavigationServiceSnippets#MainWindowBackCODE](~/add/codesnippet/csharp/NavigationServiceSnippets.CSharp/MainWindow.xaml.cs#mainwindowbackcode)]\n [!code-vb[NavigationServiceSnippets#MainWindowBackCODE](~/add/codesnippet/visualbasic/navigationservicesnippets/mainwindow.xaml.vb#mainwindowbackcode)]"
  syntax:
    content: public void GoBack ();
    parameters: []
  overload: System.Windows.Navigation.NavigationService.GoBack*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "GoBack 뒤로 탐색 기록의 항목이 있을 때 호출 됩니다."
  platform:
  - net462
- uid: System.Windows.Navigation.NavigationService.GoForward
  id: GoForward
  parent: System.Windows.Navigation.NavigationService
  langs:
  - csharp
  name: GoForward()
  nameWithType: NavigationService.GoForward()
  fullName: System.Windows.Navigation.NavigationService.GoForward()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Navigation
  summary: "있는 경우 앞으로 탐색 기록의 가장 최근 항목으로 이동 합니다."
  remarks: "GoForward를 호출 하기 전에 <xref:System.Windows.Navigation.NavigationService.CanGoForward%2A>앞으로 탐색 기록에서 항목이 있는지 여부를 확인 하려면 속성을 검사할 수 있습니다.</xref:System.Windows.Navigation.NavigationService.CanGoForward%2A>"
  example:
  - "The following example navigates to the most recent entry in forward navigation history, if one exists.  \n  \n [!code-cs[NavigationServiceSnippets#MainWindowForwardCODE](~/add/codesnippet/csharp/NavigationServiceSnippets.CSharp/MainWindow.xaml.cs#mainwindowforwardcode)]\n [!code-vb[NavigationServiceSnippets#MainWindowForwardCODE](~/add/codesnippet/visualbasic/navigationservicesnippets/mainwindow.xaml.vb#mainwindowforwardcode)]"
  syntax:
    content: public void GoForward ();
    parameters: []
  overload: System.Windows.Navigation.NavigationService.GoForward*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "GoForward 앞으로 탐색 기록의 항목이 있을 때 호출 됩니다."
  platform:
  - net462
- uid: System.Windows.Navigation.NavigationService.LoadCompleted
  id: LoadCompleted
  parent: System.Windows.Navigation.NavigationService
  langs:
  - csharp
  name: LoadCompleted
  nameWithType: NavigationService.LoadCompleted
  fullName: System.Windows.Navigation.NavigationService.LoadCompleted
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Navigation
  summary: "콘텐츠 탐색 된 로드 된 구문 분석 하 고 렌더링 되기 시작할 때 발생 합니다."
  remarks: "로드가 완료 될 때 탐색 요청 관련 정보를 검색 해야 하는 경우에 LoadCompleted를 처리 합니다. 이 정보는에서 사용할 수는 <xref:System.Windows.Navigation.NavigationEventArgs>LoadCompleted 이벤트 처리기에 전달 되는 포함 개체:-콘텐츠 및 해당 [!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)].</xref:System.Windows.Navigation.NavigationEventArgs>      -탐색기 (<xref:System.Windows.Navigation.NavigationWindow>, <xref:System.Windows.Controls.Frame>).</xref:System.Windows.Controls.Frame> </xref:System.Windows.Navigation.NavigationWindow>      -추가 데이터를 탐색 중 하나 <xref:System.Windows.Navigation.NavigationService.Navigate%2A>나 <xref:System.Windows.Navigation.NavigationService.Navigate%2A>.</xref:System.Windows.Navigation.NavigationService.Navigate%2A> </xref:System.Windows.Navigation.NavigationService.Navigate%2A> 를 호출 하 여 시작 된 경우      -응답 세부 정보 (사용 하는 <xref:System.Net.WebResponse>개체).</xref:System.Net.WebResponse>       원본 페이지를 찾거나 경우 로드 될 수 없습니다 LoadCompleted 발생 하지 않습니다 <xref:System.Windows.Navigation.NavigationService.NavigationFailed>발생 합니다.</xref:System.Windows.Navigation.NavigationService.NavigationFailed>      > [!NOTE] > 때 <xref:System.Windows.Navigation.NavigationService>LoadCompleted, 발생 발생 <xref:System.Windows.Application.LoadCompleted?displayProperty=fullName>이벤트에는 <xref:System.Windows.Application>개체입니다.</xref:System.Windows.Application> </xref:System.Windows.Application.LoadCompleted?displayProperty=fullName> </xref:System.Windows.Navigation.NavigationService>"
  example:
  - "The following example shows how to handle LoadCompleted.  \n  \n [!code-cs[NavigationServiceSnippets#MainWindowLoadCompletedCODE](~/add/codesnippet/csharp/NavigationServiceSnippets.CSharp/MainWindow.xaml.cs#mainwindowloadcompletedcode)]\n [!code-vb[NavigationServiceSnippets#MainWindowLoadCompletedCODE](~/add/codesnippet/visualbasic/navigationservicesnippets/mainwindow.xaml.vb#mainwindowloadcompletedcode)]"
  syntax:
    content: public event System.Windows.Navigation.LoadCompletedEventHandler LoadCompleted;
    return:
      type: System.Windows.Navigation.LoadCompletedEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Navigation.NavigationService.Navigate(System.Object)
  id: Navigate(System.Object)
  parent: System.Windows.Navigation.NavigationService
  langs:
  - csharp
  name: Navigate(Object)
  nameWithType: NavigationService.Navigate(Object)
  fullName: System.Windows.Navigation.NavigationService.Navigate(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Navigation
  summary: "개체에 의해 포함 된 콘텐츠를 비동기적으로 이동 합니다."
  remarks: "이동로 이동는 <xref:System.Object>에 지정 된 `root` 다음 조건이 true 인 경우:- <xref:System.Windows.Navigation.NavigationService.Navigating>이벤트는 취소 되지 않습니다.</xref:System.Windows.Navigation.NavigationService.Navigating> </xref:System.Object>      -웹 요청 (참조 <xref:System.Windows.Navigation.NavigationService.Navigating>)를 만들 수 있습니다.</xref:System.Windows.Navigation.NavigationService.Navigating>       경우 `root` 은 `null`, 기존 콘텐츠 (<xref:System.Windows.Navigation.NavigationService.Content%2A>) 지워집니다.</xref:System.Windows.Navigation.NavigationService.Content%2A>      > [!NOTE] > 웹 콘텐츠를 다운로드할 웹 예외가 나타날 수 있습니다 (예를 들어 404: 파일을 찾을 수 없습니다). <xref:System.Windows.Navigation.NavigationService.NavigationFailed>.</xref:System.Windows.Navigation.NavigationService.NavigationFailed> 이러한 예외를 처리할 수 있습니다."
  example:
  - "The following example shows how to navigate to a <xref:System.Windows.Controls.Page> object containing the source content tree.  \n  \n [!code-cs[NavigationServiceSnippets#MainWindowNavigateObjectCODE](~/add/codesnippet/csharp/NavigationServiceSnippets.CSharp/MainWindow.xaml.cs#mainwindownavigateobjectcode)]\n [!code-vb[NavigationServiceSnippets#MainWindowNavigateObjectCODE](~/add/codesnippet/visualbasic/navigationservicesnippets/mainwindow.xaml.vb#mainwindownavigateobjectcode)]"
  syntax:
    content: public bool Navigate (object root);
    parameters:
    - id: root
      type: System.Object
      description: "으로 이동 하는 콘텐츠를 포함 하는 개체입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>탐색; 취소 되지 않은 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Navigation.NavigationService.Navigate*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Navigation.NavigationService.Navigate(System.Uri)
  id: Navigate(System.Uri)
  parent: System.Windows.Navigation.NavigationService
  langs:
  - csharp
  name: Navigate(Uri)
  nameWithType: NavigationService.Navigate(Uri)
  fullName: System.Windows.Navigation.NavigationService.Navigate(Uri)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Navigation
  summary: "지정 된 콘텐츠를 비동기적으로 탐색 한 [!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)]합니다."
  remarks: "값 `source` 은 웹 [!INCLUDE[TLA#tla_url](~/add/includes/tlasharptla-url-md.md)] 또는 유효한 팩 [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] (참조 [WPF의 Pack Uri](~/add/includes/ajax-current-ext-md.md)).       이동로 이동는 [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] 에 지정 된 `source` 다음 조건이 true 인 경우:- <xref:System.Windows.Navigation.NavigationService.Navigating>이벤트는 취소 되지 않습니다.</xref:System.Windows.Navigation.NavigationService.Navigating>      -웹 요청 (참조 <xref:System.Windows.Navigation.NavigationService.Navigating>)를 만들 수 있습니다.</xref:System.Windows.Navigation.NavigationService.Navigating>       경우 `source` 은 `null`, 기존 콘텐츠 (<xref:System.Windows.Navigation.NavigationService.Content%2A>) 지워집니다.</xref:System.Windows.Navigation.NavigationService.Content%2A>      > [!NOTE] > 웹 콘텐츠를 다운로드할 웹 예외가 나타날 수 있습니다 (예를 들어 404: 파일을 찾을 수 없습니다). <xref:System.Windows.Navigation.NavigationService.NavigationFailed>.</xref:System.Windows.Navigation.NavigationService.NavigationFailed> 이러한 예외를 처리할 수 있습니다.       콘텐츠 조각을 탐색 하려면 탐색을 사용할 수 있습니다. 콘텐츠도 식별 하는 경우는 [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] 은 현재 콘텐츠를 다시 다운로드 되지 않습니다."
  example:
  - "The following example shows how to navigate to a [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)].  \n  \n [!code-cs[NavigationServiceSnippets#MainWindowNavigateCODE](~/add/codesnippet/csharp/NavigationServiceSnippets.CSharp/MainWindow.xaml.cs#mainwindownavigatecode)]\n [!code-vb[NavigationServiceSnippets#MainWindowNavigateCODE](~/add/codesnippet/visualbasic/navigationservicesnippets/mainwindow.xaml.vb#mainwindownavigatecode)]"
  syntax:
    content: public bool Navigate (Uri source);
    parameters:
    - id: source
      type: System.Uri
      description: "A <xref:System.Uri>사용 하 여 개체 초기화는 [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] 해당 콘텐츠의.</xref:System.Uri>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>탐색; 취소 되지 않은 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Navigation.NavigationService.Navigate*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Navigation.NavigationService.Navigate(System.Object,System.Object)
  id: Navigate(System.Object,System.Object)
  parent: System.Windows.Navigation.NavigationService
  langs:
  - csharp
  name: Navigate(Object,Object)
  nameWithType: NavigationService.Navigate(Object,Object)
  fullName: System.Windows.Navigation.NavigationService.Navigate(Object,Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Navigation
  summary: "개체에 포함 된 콘텐츠를 비동기적으로 탐색 하 고 탐색 하는 동안 처리를 위해 사용할 데이터를 포함 하는 개체를 전달 합니다."
  remarks: "이 메서드는 같은 동작 <xref:System.Windows.Navigation.NavigationService.Navigate%2A?displayProperty=fullName>대신 전달 하는 하지만, 한 [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)].</xref:System.Windows.Navigation.NavigationService.Navigate%2A?displayProperty=fullName>"
  example:
  - "The following example shows how to navigate to a <xref:System.Windows.Controls.Page> object containing the source content, and passing navigation state.  \n  \n [!code-cs[NavigationServiceNavigateObjectStateSnippets#MainWindowCODE](~/add/codesnippet/csharp/NavigationServiceNavigateObjectStateSnippets.CSharp/MainWindow.xaml.cs#mainwindowcode)]\n [!code-vb[NavigationServiceNavigateObjectStateSnippets#MainWindowCODE](~/add/codesnippet/visualbasic/navigationservicenavigateobjectstatesnippets/mainwindow.xaml.vb#mainwindowcode)]"
  syntax:
    content: public bool Navigate (object root, object navigationState);
    parameters:
    - id: root
      type: System.Object
      description: "으로 이동 하는 콘텐츠를 포함 하는 개체입니다."
    - id: navigationState
      type: System.Object
      description: "탐색 하는 동안 처리를 위해 사용할 데이터를 포함 하는 개체입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>탐색; 취소 되지 않은 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Navigation.NavigationService.Navigate*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object)
  id: Navigate(System.Uri,System.Object)
  parent: System.Windows.Navigation.NavigationService
  langs:
  - csharp
  name: Navigate(Uri,Object)
  nameWithType: NavigationService.Navigate(Uri,Object)
  fullName: System.Windows.Navigation.NavigationService.Navigate(Uri,Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Navigation
  summary: "에 있는 원본 콘텐츠를 비동기적으로 탐색 하는 [!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)]를 탐색 하는 동안 처리를 위해 사용할 데이터를 포함 하는 개체를 전달 합니다."
  remarks: "탐색은, 동시에 진행에서 되도록 여러 탐색 같습니다. 예를 들어 단일 페이지에 두 개의 자식 프레임이 있는 경우 모두 프레임을 탐색할 수 있습니다. 이 경우 여러 탐색 이벤트에 의해 발생 하는 <xref:System.Windows.Navigation.NavigationService>발생된 여러, 탐색 대상인 콘텐츠의 각 부분에 대 한 번 수와 다를 탐색이 요청을 수 있습니다.</xref:System.Windows.Navigation.NavigationService> 따라서 특정 탐색 요청을 개별 요청에만 적용 되는 데이터를 처리 하는 경우 모든 탐색 요청에 사용할 수 있는 데이터를 사용할 수 없습니다. 대신 사용할 수 있습니다 `navigationState` 탐색 요청 하는 탐색을 처리에 대 한 데이터를 전달할 수 있습니다.       탐색 상태에 대 한 액세스를 제공 하는 다음 이벤트 인수:- <xref:System.Windows.Navigation.NavigatingCancelEventArgs.ExtraData%2A>(에 전달 되는 <xref:System.Windows.Navigation.NavigationService.Navigating>이벤트).</xref:System.Windows.Navigation.NavigationService.Navigating> </xref:System.Windows.Navigation.NavigatingCancelEventArgs.ExtraData%2A>      - <xref:System.Windows.Navigation.NavigationEventArgs.ExtraData%2A>(에 전달 되는 <xref:System.Windows.Navigation.NavigationService.Navigated>, <xref:System.Windows.Navigation.NavigationService.NavigationStopped>, <xref:System.Windows.Navigation.NavigationService.LoadCompleted>이벤트 처리기).</xref:System.Windows.Navigation.NavigationService.LoadCompleted> </xref:System.Windows.Navigation.NavigationService.NavigationStopped> </xref:System.Windows.Navigation.NavigationService.Navigated> </xref:System.Windows.Navigation.NavigationEventArgs.ExtraData%2A>"
  example:
  - "The following example demonstrates navigating to a [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] and passing navigation state.  \n  \n [!code-cs[NavigationServiceNavigateUriStateSnippets#MainWindowCODE](~/add/codesnippet/csharp/NavigationServiceNavigateUriStateSnippets.CSharp/MainWindow.xaml.cs#mainwindowcode)]\n [!code-vb[NavigationServiceNavigateUriStateSnippets#MainWindowCODE](~/add/codesnippet/visualbasic/navigationservicenavigateuristatesnippets/mainwindow.xaml.vb#mainwindowcode)]"
  syntax:
    content: public bool Navigate (Uri source, object navigationState);
    parameters:
    - id: source
      type: System.Uri
      description: "A <xref:System.Uri>사용 하 여 개체 초기화는 [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] 해당 콘텐츠의.</xref:System.Uri>"
    - id: navigationState
      type: System.Object
      description: "탐색 하는 동안 처리를 위해 사용할 데이터를 포함 하는 개체입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>탐색; 취소 되지 않은 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Navigation.NavigationService.Navigate*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object,System.Boolean)
  id: Navigate(System.Uri,System.Object,System.Boolean)
  parent: System.Windows.Navigation.NavigationService
  langs:
  - csharp
  name: Navigate(Uri,Object,Boolean)
  nameWithType: NavigationService.Navigate(Uri,Object,Boolean)
  fullName: System.Windows.Navigation.NavigationService.Navigate(Uri,Object,Boolean)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Navigation
  summary: "에 있는 원본 콘텐츠를 비동기적으로 탐색 하는 [!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)], 탐색 및 샌드박스 중 콘텐츠를 처리 하는 것에 대 한 탐색 상태를 포함 하는 개체를 전달 합니다."
  remarks: "이 방법은 독립 실행형 응용 프로그램에 대해서만 및 [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)] 콘텐츠입니다.       이 메서드는 동일한 동작으로 유효 <xref:System.Windows.Navigation.NavigationService.Navigate%2A?displayProperty=fullName>, 콘텐츠를 다운로드 하는 부분 신뢰 보안 샌드박스에 배치 됩니다 되도록 하 여 확장 하 고 (사용 권한-기본 인터넷 영역 집합과 함께 참조 [WPF 부분 신뢰 보안](~/add/includes/ajax-current-ext-md.md)).</xref:System.Windows.Navigation.NavigationService.Navigate%2A?displayProperty=fullName>"
  syntax:
    content: public bool Navigate (Uri source, object navigationState, bool sandboxExternalContent);
    parameters:
    - id: source
      type: System.Uri
      description: "A <xref:System.Uri>사용 하 여 개체 초기화는 [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] 해당 콘텐츠의.</xref:System.Uri>"
    - id: navigationState
      type: System.Object
      description: "탐색 하는 동안 처리를 위해 사용할 데이터를 포함 하는 개체입니다."
    - id: sandboxExternalContent
      type: System.Boolean
      description: "부분 신뢰 보안 샌드박스에 콘텐츠 다운로드 (기본 인터넷 권한 집합이 경우 영역 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>탐색; 취소 되지 않은 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Navigation.NavigationService.Navigate*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Navigation.NavigationService.Navigated
  id: Navigated
  parent: System.Windows.Navigation.NavigationService
  langs:
  - csharp
  name: Navigated
  nameWithType: NavigationService.Navigated
  fullName: System.Windows.Navigation.NavigationService.Navigated
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Navigation
  summary: "탐색 중인 콘텐츠에 발견 되었습니다에서 사용할 수 있을 때 발생 된 <xref:System.Windows.Navigation.NavigationService.Content*>속성을 아직 완전히 로드 되지 않았지만.</xref:System.Windows.Navigation.NavigationService.Content*>"
  remarks: "다운로드를 시작할 때 탐색 요청 관련 정보를 검색 해야 하는 경우에 Navigated를 처리 합니다. 이 정보는에서 사용할 수는 <xref:System.Windows.Navigation.NavigationEventArgs>Navigated 이벤트 처리기에 전달 되는 포함 개체:-소스 페이지.</xref:System.Windows.Navigation.NavigationEventArgs> Navigated 발생 하는 경우 원본 페이지의 일부분이 [!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)] 트리를 구문 분석 하 고 대상 콘텐츠 컨트롤에 연결 되었습니다.      -요청 된 [!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)]합니다.      -탐색기 (<xref:System.Windows.Navigation.NavigationWindow>, <xref:System.Windows.Controls.Frame>).</xref:System.Windows.Controls.Frame> </xref:System.Windows.Navigation.NavigationWindow>      -추가 데이터를 탐색 중 하나 <xref:System.Windows.Navigation.NavigationService.Navigate%2A>나 <xref:System.Windows.Navigation.NavigationService.Navigate%2A>.</xref:System.Windows.Navigation.NavigationService.Navigate%2A> </xref:System.Windows.Navigation.NavigationService.Navigate%2A> 를 호출 하 여 시작 된 경우      -응답 세부 정보 (사용 하는 <xref:System.Net.WebResponse>개체).</xref:System.Net.WebResponse>       탐색 소스 페이지를 찾을 수 또는 쿼리에서 로드할 수 없을 때 발생 하지 않는 <xref:System.Windows.Navigation.NavigationService.NavigationFailed>발생 합니다.</xref:System.Windows.Navigation.NavigationService.NavigationFailed>      > [!NOTE] > 때 <xref:System.Windows.Navigation.NavigationService>발생 <xref:System.Windows.Navigation.NavigationService.NavigationFailed>, 발생 <xref:System.Windows.Application.NavigationFailed?displayProperty=fullName>이벤트에는 <xref:System.Windows.Application>개체입니다.</xref:System.Windows.Application> </xref:System.Windows.Application.NavigationFailed?displayProperty=fullName> </xref:System.Windows.Navigation.NavigationService.NavigationFailed> </xref:System.Windows.Navigation.NavigationService>"
  example:
  - "The following example shows how to handle Navigated.  \n  \n [!code-cs[NavigationServiceSnippets#MainWindowNavigatedCODE](~/add/codesnippet/csharp/NavigationServiceSnippets.CSharp/MainWindow.xaml.cs#mainwindownavigatedcode)]\n [!code-vb[NavigationServiceSnippets#MainWindowNavigatedCODE](~/add/codesnippet/visualbasic/navigationservicesnippets/mainwindow.xaml.vb#mainwindownavigatedcode)]"
  syntax:
    content: public event System.Windows.Navigation.NavigatedEventHandler Navigated;
    return:
      type: System.Windows.Navigation.NavigatedEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Navigation.NavigationService.Navigating
  id: Navigating
  parent: System.Windows.Navigation.NavigationService
  langs:
  - csharp
  name: Navigating
  nameWithType: NavigationService.Navigating
  fullName: System.Windows.Navigation.NavigationService.Navigating
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Navigation
  summary: "새 탐색 요청 될 때 발생 합니다."
  remarks: "새 탐색 요청 되었지만 원본 하기 전에 콘텐츠를 요청 될 때를 포함 하 여 이벤트가 발생 탐색:- <xref:System.Windows.Navigation.NavigationService.Navigate%2A>호출 됩니다.</xref:System.Windows.Navigation.NavigationService.Navigate%2A>      - <xref:System.Windows.Navigation.NavigationService.GoBack%2A>또는 <xref:System.Windows.Navigation.NavigationService.GoForward%2A>라고 (탐색에서 한 항목을 선택 또는 [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]).</xref:System.Windows.Navigation.NavigationService.GoForward%2A> </xref:System.Windows.Navigation.NavigationService.GoBack%2A>      -콘텐츠 조각을 탐색 하는 경우       탐색이 시작 되기 전에 탐색 요청 관련 정보를 검색 해야 하는 경우 탐색을 처리 합니다. 이 정보는에서 사용할 수는 <xref:System.Windows.Navigation.NavigatingCancelEventArgs>Navigating 이벤트 처리기에 전달 되는 개체입니다.</xref:System.Windows.Navigation.NavigatingCancelEventArgs>       A <xref:System.Net.WebRequest>탐색 생성 되어에서 사용할 수 있는 개체는 <xref:System.Windows.Navigation.NavigatingCancelEventArgs>; 매개 변수는 실제 요청이 시점에서, 때문에 다시 구성할 수 있습니다는 <xref:System.Net.WebRequest>개체, 필요한 경우.</xref:System.Net.WebRequest> </xref:System.Windows.Navigation.NavigatingCancelEventArgs> </xref:System.Net.WebRequest>       또한 처리 <xref:System.Windows.Navigation.NavigatingCancelEventArgs>탐색을 설정 하 여 필요한 경우 취소 하도록 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>true로.</xref:System.ComponentModel.CancelEventArgs.Cancel%2A> </xref:System.Windows.Navigation.NavigatingCancelEventArgs> 탐색을 취소 하면 다른 탐색 이벤트가 발생 합니다.      > [!NOTE] > Navigating 이벤트를 취소 하 여 응용 프로그램에서 다른 페이지로 이동에서 사용자를 방지할 수 응용 프로그램을 브라우저에서 호스트 된 경우.       탐색기에서 첫 번째 부분 콘텐츠 탐색 한 후 (<xref:System.Windows.Navigation.NavigationWindow>, <xref:System.Windows.Controls.Frame>)에서 멀리 탐색 각 콘텐츠 탐색 기록에 추가 됩니다.</xref:System.Windows.Controls.Frame> </xref:System.Windows.Navigation.NavigationWindow> 멀리 탐색 중인 콘텐츠에 대 한 상태 정보를 저장 해야 할 경우 추가할 수 있습니다 상태 해당 콘텐츠에 대 한 업무 일지 항목을 설정 하 여 <xref:System.Windows.Navigation.NavigatingCancelEventArgs.ContentStateToSave%2A>와 <xref:System.Windows.Navigation.CustomContentState>개체입니다.</xref:System.Windows.Navigation.CustomContentState> </xref:System.Windows.Navigation.NavigatingCancelEventArgs.ContentStateToSave%2A>      > [!NOTE] > 때 <xref:System.Windows.Navigation.NavigationService>Navigating, 발생 발생 <xref:System.Windows.Application.Navigating?displayProperty=fullName>이벤트에는 <xref:System.Windows.Application>개체입니다.</xref:System.Windows.Application> </xref:System.Windows.Application.Navigating?displayProperty=fullName> </xref:System.Windows.Navigation.NavigationService>"
  example:
  - "The following example shows how to handle Navigating to detect whether a request to refresh static content has been made and, if so, to cancel the request.  \n  \n Navigating.  \n  \n [!code-cs[NavigationServiceSnippets#MainWindowNavigatingCODE](~/add/codesnippet/csharp/NavigationServiceSnippets.CSharp/MainWindow.xaml.cs#mainwindownavigatingcode)]\n [!code-vb[NavigationServiceSnippets#MainWindowNavigatingCODE](~/add/codesnippet/visualbasic/navigationservicesnippets/mainwindow.xaml.vb#mainwindownavigatingcode)]"
  syntax:
    content: public event System.Windows.Navigation.NavigatingCancelEventHandler Navigating;
    return:
      type: System.Windows.Navigation.NavigatingCancelEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Navigation.NavigationService.NavigationFailed
  id: NavigationFailed
  parent: System.Windows.Navigation.NavigationService
  langs:
  - csharp
  name: NavigationFailed
  nameWithType: NavigationService.NavigationFailed
  fullName: System.Windows.Navigation.NavigationService.NavigationFailed
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Navigation
  summary: "요청 된 콘텐츠를 탐색 하는 동안 오류가 발생할 때 발생 합니다."
  remarks: "경우 중 하나는 <xref:System.Net.WebException>또는 <xref:System.IO.IOException>이벤트가 NavigationFailed 탐색 하는 동안 발생 합니다.</xref:System.IO.IOException> </xref:System.Net.WebException> NavigationFailed 전달 되는 <xref:System.Windows.Navigation.NavigationFailedEventArgs>예외와 예외를 발생 시킨 탐색의 세부 정보에 대 한 정보를 캡슐화 하는.</xref:System.Windows.Navigation.NavigationFailedEventArgs>       나열 된 순서로 다음 이벤트는 발생 예외가 실패 한 탐색에서 결과 처리 되지 않은 경우:-NavigationFailed 합니다.      -   <xref:System.Windows.Controls.Frame.NavigationFailed?displayProperty=fullName> or <xref:System.Windows.Navigation.NavigationWindow.NavigationFailed?displayProperty=fullName>.</xref:System.Windows.Navigation.NavigationWindow.NavigationFailed?displayProperty=fullName></xref:System.Windows.Controls.Frame.NavigationFailed?displayProperty=fullName>      -   <xref:System.Windows.Application.NavigationFailed?displayProperty=fullName>.</xref:System.Windows.Application.NavigationFailed?displayProperty=fullName>      -   <xref:System.Windows.Application.DispatcherUnhandledException>.</xref:System.Windows.Application.DispatcherUnhandledException>       탐색기 (<xref:System.Windows.Navigation.NavigationWindow>, <xref:System.Windows.Controls.Frame>) 하나 이상의 탐색기에서 호스팅되는 `NavigationFailed` 그 중 하나에 발생 하지 않습니다.</xref:System.Windows.Controls.Frame> </xref:System.Windows.Navigation.NavigationWindow>"
  example:
  - "The following example shows how to handle NavigationFailed.  \n  \n [!code-cs[NavigationServiceSnippets#MainWindowNavigationFailedCODE](~/add/codesnippet/csharp/NavigationServiceSnippets.CSharp/MainWindow.xaml.cs#mainwindownavigationfailedcode)]\n [!code-vb[NavigationServiceSnippets#MainWindowNavigationFailedCODE](~/add/codesnippet/visualbasic/navigationservicesnippets/mainwindow.xaml.vb#mainwindownavigationfailedcode)]"
  syntax:
    content: public event System.Windows.Navigation.NavigationFailedEventHandler NavigationFailed;
    return:
      type: System.Windows.Navigation.NavigationFailedEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Navigation.NavigationService.NavigationProgress
  id: NavigationProgress
  parent: System.Windows.Navigation.NavigationService
  langs:
  - csharp
  name: NavigationProgress
  nameWithType: NavigationService.NavigationProgress
  fullName: System.Windows.Navigation.NavigationService.NavigationProgress
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Navigation
  summary: "탐색 진행 정보를 제공 하기 위해 다운로드 하는 동안에 주기적으로 발생 합니다."
  remarks: "NavigationProgress 전달 되는 <xref:System.Windows.Navigation.NavigationProgressEventArgs>다음 진행 상황 정보를 노출 하는:-지금까지 다운로드 된 바이트 수 (<xref:System.Windows.Navigation.NavigationProgressEventArgs.BytesRead%2A>).</xref:System.Windows.Navigation.NavigationProgressEventArgs.BytesRead%2A> </xref:System.Windows.Navigation.NavigationProgressEventArgs>      -총 바이트 수를 다운로드 (<xref:System.Windows.Navigation.NavigationProgressEventArgs.MaxBytes%2A>).</xref:System.Windows.Navigation.NavigationProgressEventArgs.MaxBytes%2A>       NavigationProgress는 콘텐츠의 모든 1024 바이트에 대 한 다운로드 된 후 한 번 더 남아 있는 바이트 수는 1024 바이트 보다 작은 경우에 발생 합니다. 이러한 이유로 추적 하 고 현재 다운로드의 진행률을 표시 하는 유용한 방법은 제공 NavigationProgress 처리 합니다.       NavigationProgress, 동일한 콘텐츠의 탐색 하는 경우 또는에 현재 로드 된 콘텐츠에 콘텐츠 조각을 탐색 하는 경우와 같은 일부 경우에 발생 하지 않습니다 (즉, 값은 <xref:System.Windows.Navigation.NavigationService.Content%2A>속성).</xref:System.Windows.Navigation.NavigationService.Content%2A>       컴파일된 XAML 리소스를 탐색할 때 최종 NavigationProgress 이벤트가 발생 하지 않을 수 있습니다. 이 다운로드의 끝 마지막 보고 의미 <xref:System.Windows.Navigation.NavigationProgressEventArgs.BytesRead%2A>값과 같지 않을 수 있습니다는 <xref:System.Windows.Navigation.NavigationProgressEventArgs.MaxBytes%2A>값.</xref:System.Windows.Navigation.NavigationProgressEventArgs.MaxBytes%2A> </xref:System.Windows.Navigation.NavigationProgressEventArgs.BytesRead%2A> 처리는 <xref:System.Windows.Navigation.NavigationService.LoadCompleted>탐색 완료 되 면 알림을 받을 수는 이벤트입니다.</xref:System.Windows.Navigation.NavigationService.LoadCompleted>      > [!NOTE] > 때 <xref:System.Windows.Navigation.NavigationService>NavigationProgress, 발생 발생 <xref:System.Windows.Application.NavigationProgress?displayProperty=fullName>이벤트에는 <xref:System.Windows.Application>개체입니다.</xref:System.Windows.Application> </xref:System.Windows.Application.NavigationProgress?displayProperty=fullName> </xref:System.Windows.Navigation.NavigationService>"
  example:
  - "The following example shows how to handle NavigationProgress.  \n  \n [!code-cs[NavigationServiceSnippets#MainWindowNavigationProgressCODE](~/add/codesnippet/csharp/NavigationServiceSnippets.CSharp/MainWindow.xaml.cs#mainwindownavigationprogresscode)]\n [!code-vb[NavigationServiceSnippets#MainWindowNavigationProgressCODE](~/add/codesnippet/visualbasic/navigationservicesnippets/mainwindow.xaml.vb#mainwindownavigationprogresscode)]"
  syntax:
    content: public event System.Windows.Navigation.NavigationProgressEventHandler NavigationProgress;
    return:
      type: System.Windows.Navigation.NavigationProgressEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Navigation.NavigationService.NavigationStopped
  id: NavigationStopped
  parent: System.Windows.Navigation.NavigationService
  langs:
  - csharp
  name: NavigationStopped
  nameWithType: NavigationService.NavigationStopped
  fullName: System.Windows.Navigation.NavigationService.NavigationStopped
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Navigation
  summary: "발생 경우는 <xref:System.Windows.Navigation.NavigationService.StopLoading*>메서드를 호출 하거나 새 탐색 요청 될 경우에 현재 탐색 진행 중인 동안.</xref:System.Windows.Navigation.NavigationService.StopLoading*>"
  remarks: "다운로드를 중지할 때 탐색 요청 관련 정보를 검색 해야 하는 경우에 NavigationStopped를 처리 합니다. 이 정보는에서 사용할 수는 <xref:System.Windows.Navigation.NavigationEventArgs>NavigationStopped 이벤트 처리기에 전달 되는 포함 개체:-요청 된 [!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)].</xref:System.Windows.Navigation.NavigationEventArgs>      -탐색기 (<xref:System.Windows.Navigation.NavigationWindow>, <xref:System.Windows.Controls.Frame>).</xref:System.Windows.Controls.Frame> </xref:System.Windows.Navigation.NavigationWindow>      -추가 데이터를 탐색 중 하나 <xref:System.Windows.Navigation.NavigationService.Navigate%2A?displayProperty=fullName>나 <xref:System.Windows.Navigation.NavigationService.Navigate%2A?displayProperty=fullName>.</xref:System.Windows.Navigation.NavigationService.Navigate%2A?displayProperty=fullName> </xref:System.Windows.Navigation.NavigationService.Navigate%2A?displayProperty=fullName> 를 호출 하 여 시작 된 경우      > [!NOTE] > 때 <xref:System.Windows.Navigation.NavigationService>NavigationStopped, 발생 발생 <xref:System.Windows.Application.NavigationStopped?displayProperty=fullName>이벤트에는 <xref:System.Windows.Application>개체입니다.</xref:System.Windows.Application> </xref:System.Windows.Application.NavigationStopped?displayProperty=fullName> </xref:System.Windows.Navigation.NavigationService>"
  example:
  - "The following example shows how to handle NavigationStopped.  \n  \n [!code-cs[NavigationServiceSnippets#MainWindowNavigationStoppedCODE](~/add/codesnippet/csharp/NavigationServiceSnippets.CSharp/MainWindow.xaml.cs#mainwindownavigationstoppedcode)]\n [!code-vb[NavigationServiceSnippets#MainWindowNavigationStoppedCODE](~/add/codesnippet/visualbasic/navigationservicesnippets/mainwindow.xaml.vb#mainwindownavigationstoppedcode)]"
  syntax:
    content: public event System.Windows.Navigation.NavigationStoppedEventHandler NavigationStopped;
    return:
      type: System.Windows.Navigation.NavigationStoppedEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Navigation.NavigationService.Refresh
  id: Refresh
  parent: System.Windows.Navigation.NavigationService
  langs:
  - csharp
  name: Refresh()
  nameWithType: NavigationService.Refresh()
  fullName: System.Windows.Navigation.NavigationService.Refresh()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Navigation
  summary: "현재 콘텐츠를 다시 로드합니다."
  remarks: "하는 경우 현재 콘텐츠 (의 값으로 지정 된는 <xref:System.Windows.Navigation.NavigationService.Source%2A>속성)를 다시, 탐색 <xref:System.Windows.Navigation.NavigationService>콘텐츠를 다시 다운로드 하지 않습니다.</xref:System.Windows.Navigation.NavigationService> </xref:System.Windows.Navigation.NavigationService.Source%2A> 강제로 <xref:System.Windows.Navigation.NavigationService>콘텐츠 다시 탐색 하려면 새로 고침을 호출 합니다.</xref:System.Windows.Navigation.NavigationService>       경우 유의 현재 콘텐츠를 탐색 하는 다시 여부를 호출 하 여 <xref:System.Windows.Navigation.NavigationService.Navigate%2A>또는 새로 고침, 탐색 기록에 새 항목이 추가 되지 않습니다.</xref:System.Windows.Navigation.NavigationService.Navigate%2A>"
  syntax:
    content: public void Refresh ();
    parameters: []
  overload: System.Windows.Navigation.NavigationService.Refresh*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Navigation.NavigationService.RemoveBackEntry
  id: RemoveBackEntry
  parent: System.Windows.Navigation.NavigationService
  langs:
  - csharp
  name: RemoveBackEntry()
  nameWithType: NavigationService.RemoveBackEntry()
  fullName: System.Windows.Navigation.NavigationService.RemoveBackEntry()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Navigation
  summary: "뒤로 기록에서 가장 최근의 업무 일지 항목을 제거합니다."
  remarks: "하는 경우 두 개 이상의 탐색기 (<xref:System.Windows.Navigation.NavigationWindow>, <xref:System.Windows.Controls.Frame>) 하면 동일한 공유 하거나, 한 탐색기 RemoveBackEntry를 사용 하 여 다른 탐색기에 발생 한 탐색을 위한 뒤로 탐색 기록 항목을 검색할 수 있습니다.</xref:System.Windows.Controls.Frame> </xref:System.Windows.Navigation.NavigationWindow>"
  syntax:
    content: public System.Windows.Navigation.JournalEntry RemoveBackEntry ();
    parameters: []
    return:
      type: System.Windows.Navigation.JournalEntry
      description: "가장 최근의 <xref href=&quot;System.Windows.Navigation.JournalEntry&quot;> </xref> 탐색 기록, 있는 경우에 합니다."
  overload: System.Windows.Navigation.NavigationService.RemoveBackEntry*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Navigation.NavigationService.Source
  id: Source
  parent: System.Windows.Navigation.NavigationService
  langs:
  - csharp
  name: Source
  nameWithType: NavigationService.Source
  fullName: System.Windows.Navigation.NavigationService.Source
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Navigation
  summary: "가져오거나는 [!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)] 현재 콘텐츠의 또는 [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] 현재 탐색 되 고 있는 새 콘텐츠입니다."
  remarks: "이 속성을 다른 설정 하면 [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] 보다 현재 표시 되는 탐색기 (<xref:System.Windows.Navigation.NavigationWindow>, <xref:System.Windows.Controls.Frame>)를 지정 된 탐색 [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)].</xref:System.Windows.Controls.Frame> </xref:System.Windows.Navigation.NavigationWindow>       소스에서 로드 된 콘텐츠로 설정 되 고 [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] 탐색을 취소 하지 않으면 탐색 하는 합니다.       소스 조각만로 설정할 수 [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]로 설정할 수 있습니다 및 `null`합니다."
  syntax:
    content: public Uri Source { get; set; }
    return:
      type: System.Uri
      description: "A <xref:System.Uri>를 포함 하는 [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] 현재 콘텐츠 또는 현재 탐색 중인 콘텐츠에 대 한.</xref:System.Uri>"
  overload: System.Windows.Navigation.NavigationService.Source*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Navigation.NavigationService.StopLoading
  id: StopLoading
  parent: System.Windows.Navigation.NavigationService
  langs:
  - csharp
  name: StopLoading()
  nameWithType: NavigationService.StopLoading()
  fullName: System.Windows.Navigation.NavigationService.StopLoading()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Navigation
  summary: "더 이상 현재 탐색 요청에 대 한 콘텐츠 다운로드를 중지 합니다."
  remarks: "StopLoading 호출할 수는 즉시 <xref:System.Windows.Navigation.NavigationService.Navigate%2A>반환 하 고 자식 프레임에서 진행 중인 탐색이 중지.</xref:System.Windows.Navigation.NavigationService.Navigate%2A>       (<xref:System.Windows.Controls.Frame>).</xref:System.Windows.Controls.Frame>       StopLoading 메서드가 호출 된 <xref:System.Windows.Navigation.NavigationService.NavigationStopped>이벤트.</xref:System.Windows.Navigation.NavigationService.NavigationStopped>      > [!NOTE] > StopLoading 탐색을 시작한 스레드와 동일한 스레드에서 호출 해야 합니다."
  example:
  - "The following example demonstrates how to stop loading.  \n  \n [!code-cs[NavigationServiceSnippets#MainWindowStopLoadingCODE](~/add/codesnippet/csharp/NavigationServiceSnippets.CSharp/MainWindow.xaml.cs#mainwindowstoploadingcode)]\n [!code-vb[NavigationServiceSnippets#MainWindowStopLoadingCODE](~/add/codesnippet/visualbasic/navigationservicesnippets/mainwindow.xaml.vb#mainwindowstoploadingcode)]"
  syntax:
    content: public void StopLoading ();
    parameters: []
  overload: System.Windows.Navigation.NavigationService.StopLoading*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Windows.Navigation.NavigationService.AddBackEntry(System.Windows.Navigation.CustomContentState)
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: AddBackEntry(CustomContentState)
  nameWithType: NavigationService.AddBackEntry(CustomContentState)
  fullName: System.Windows.Navigation.NavigationService.AddBackEntry(CustomContentState)
- uid: System.Windows.Navigation.CustomContentState
  parent: System.Windows.Navigation
  isExternal: false
  name: CustomContentState
  nameWithType: CustomContentState
  fullName: System.Windows.Navigation.CustomContentState
- uid: System.Windows.Navigation.NavigationService.CanGoBack
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: CanGoBack
  nameWithType: NavigationService.CanGoBack
  fullName: System.Windows.Navigation.NavigationService.CanGoBack
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Navigation.NavigationService.CanGoForward
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: CanGoForward
  nameWithType: NavigationService.CanGoForward
  fullName: System.Windows.Navigation.NavigationService.CanGoForward
- uid: System.Windows.Navigation.NavigationService.Content
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: Content
  nameWithType: NavigationService.Content
  fullName: System.Windows.Navigation.NavigationService.Content
- uid: System.Windows.Navigation.NavigationService.CurrentSource
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: CurrentSource
  nameWithType: NavigationService.CurrentSource
  fullName: System.Windows.Navigation.NavigationService.CurrentSource
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Windows.Navigation.NavigationService.FragmentNavigation
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: FragmentNavigation
  nameWithType: NavigationService.FragmentNavigation
  fullName: System.Windows.Navigation.NavigationService.FragmentNavigation
- uid: System.Windows.Navigation.FragmentNavigationEventHandler
  parent: System.Windows.Navigation
  isExternal: false
  name: FragmentNavigationEventHandler
  nameWithType: FragmentNavigationEventHandler
  fullName: System.Windows.Navigation.FragmentNavigationEventHandler
- uid: System.Windows.Navigation.NavigationService.GetNavigationService(System.Windows.DependencyObject)
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: GetNavigationService(DependencyObject)
  nameWithType: NavigationService.GetNavigationService(DependencyObject)
  fullName: System.Windows.Navigation.NavigationService.GetNavigationService(DependencyObject)
- uid: System.Windows.Navigation.NavigationService
  parent: System.Windows.Navigation
  isExternal: false
  name: NavigationService
  nameWithType: NavigationService
  fullName: System.Windows.Navigation.NavigationService
- uid: System.Windows.DependencyObject
  parent: System.Windows
  isExternal: false
  name: DependencyObject
  nameWithType: DependencyObject
  fullName: System.Windows.DependencyObject
- uid: System.Windows.Navigation.NavigationService.GoBack
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: GoBack()
  nameWithType: NavigationService.GoBack()
  fullName: System.Windows.Navigation.NavigationService.GoBack()
- uid: System.Windows.Navigation.NavigationService.GoForward
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: GoForward()
  nameWithType: NavigationService.GoForward()
  fullName: System.Windows.Navigation.NavigationService.GoForward()
- uid: System.Windows.Navigation.NavigationService.LoadCompleted
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: LoadCompleted
  nameWithType: NavigationService.LoadCompleted
  fullName: System.Windows.Navigation.NavigationService.LoadCompleted
- uid: System.Windows.Navigation.LoadCompletedEventHandler
  parent: System.Windows.Navigation
  isExternal: false
  name: LoadCompletedEventHandler
  nameWithType: LoadCompletedEventHandler
  fullName: System.Windows.Navigation.LoadCompletedEventHandler
- uid: System.Windows.Navigation.NavigationService.Navigate(System.Object)
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: Navigate(Object)
  nameWithType: NavigationService.Navigate(Object)
  fullName: System.Windows.Navigation.NavigationService.Navigate(Object)
- uid: System.Windows.Navigation.NavigationService.Navigate(System.Uri)
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: Navigate(Uri)
  nameWithType: NavigationService.Navigate(Uri)
  fullName: System.Windows.Navigation.NavigationService.Navigate(Uri)
- uid: System.Windows.Navigation.NavigationService.Navigate(System.Object,System.Object)
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: Navigate(Object,Object)
  nameWithType: NavigationService.Navigate(Object,Object)
  fullName: System.Windows.Navigation.NavigationService.Navigate(Object,Object)
- uid: System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object)
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: Navigate(Uri,Object)
  nameWithType: NavigationService.Navigate(Uri,Object)
  fullName: System.Windows.Navigation.NavigationService.Navigate(Uri,Object)
- uid: System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object,System.Boolean)
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: Navigate(Uri,Object,Boolean)
  nameWithType: NavigationService.Navigate(Uri,Object,Boolean)
  fullName: System.Windows.Navigation.NavigationService.Navigate(Uri,Object,Boolean)
- uid: System.Windows.Navigation.NavigationService.Navigated
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: Navigated
  nameWithType: NavigationService.Navigated
  fullName: System.Windows.Navigation.NavigationService.Navigated
- uid: System.Windows.Navigation.NavigatedEventHandler
  parent: System.Windows.Navigation
  isExternal: false
  name: NavigatedEventHandler
  nameWithType: NavigatedEventHandler
  fullName: System.Windows.Navigation.NavigatedEventHandler
- uid: System.Windows.Navigation.NavigationService.Navigating
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: Navigating
  nameWithType: NavigationService.Navigating
  fullName: System.Windows.Navigation.NavigationService.Navigating
- uid: System.Windows.Navigation.NavigatingCancelEventHandler
  parent: System.Windows.Navigation
  isExternal: false
  name: NavigatingCancelEventHandler
  nameWithType: NavigatingCancelEventHandler
  fullName: System.Windows.Navigation.NavigatingCancelEventHandler
- uid: System.Windows.Navigation.NavigationService.NavigationFailed
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: NavigationFailed
  nameWithType: NavigationService.NavigationFailed
  fullName: System.Windows.Navigation.NavigationService.NavigationFailed
- uid: System.Windows.Navigation.NavigationFailedEventHandler
  parent: System.Windows.Navigation
  isExternal: false
  name: NavigationFailedEventHandler
  nameWithType: NavigationFailedEventHandler
  fullName: System.Windows.Navigation.NavigationFailedEventHandler
- uid: System.Windows.Navigation.NavigationService.NavigationProgress
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: NavigationProgress
  nameWithType: NavigationService.NavigationProgress
  fullName: System.Windows.Navigation.NavigationService.NavigationProgress
- uid: System.Windows.Navigation.NavigationProgressEventHandler
  parent: System.Windows.Navigation
  isExternal: false
  name: NavigationProgressEventHandler
  nameWithType: NavigationProgressEventHandler
  fullName: System.Windows.Navigation.NavigationProgressEventHandler
- uid: System.Windows.Navigation.NavigationService.NavigationStopped
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: NavigationStopped
  nameWithType: NavigationService.NavigationStopped
  fullName: System.Windows.Navigation.NavigationService.NavigationStopped
- uid: System.Windows.Navigation.NavigationStoppedEventHandler
  parent: System.Windows.Navigation
  isExternal: false
  name: NavigationStoppedEventHandler
  nameWithType: NavigationStoppedEventHandler
  fullName: System.Windows.Navigation.NavigationStoppedEventHandler
- uid: System.Windows.Navigation.NavigationService.Refresh
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: Refresh()
  nameWithType: NavigationService.Refresh()
  fullName: System.Windows.Navigation.NavigationService.Refresh()
- uid: System.Windows.Navigation.NavigationService.RemoveBackEntry
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: RemoveBackEntry()
  nameWithType: NavigationService.RemoveBackEntry()
  fullName: System.Windows.Navigation.NavigationService.RemoveBackEntry()
- uid: System.Windows.Navigation.JournalEntry
  parent: System.Windows.Navigation
  isExternal: false
  name: JournalEntry
  nameWithType: JournalEntry
  fullName: System.Windows.Navigation.JournalEntry
- uid: System.Windows.Navigation.NavigationService.Source
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: Source
  nameWithType: NavigationService.Source
  fullName: System.Windows.Navigation.NavigationService.Source
- uid: System.Windows.Navigation.NavigationService.StopLoading
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: StopLoading()
  nameWithType: NavigationService.StopLoading()
  fullName: System.Windows.Navigation.NavigationService.StopLoading()
- uid: System.Windows.Navigation.NavigationService.AddBackEntry*
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: AddBackEntry
  nameWithType: NavigationService.AddBackEntry
- uid: System.Windows.Navigation.NavigationService.CanGoBack*
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: CanGoBack
  nameWithType: NavigationService.CanGoBack
- uid: System.Windows.Navigation.NavigationService.CanGoForward*
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: CanGoForward
  nameWithType: NavigationService.CanGoForward
- uid: System.Windows.Navigation.NavigationService.Content*
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: Content
  nameWithType: NavigationService.Content
- uid: System.Windows.Navigation.NavigationService.CurrentSource*
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: CurrentSource
  nameWithType: NavigationService.CurrentSource
- uid: System.Windows.Navigation.NavigationService.GetNavigationService*
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: GetNavigationService
  nameWithType: NavigationService.GetNavigationService
- uid: System.Windows.Navigation.NavigationService.GoBack*
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: GoBack
  nameWithType: NavigationService.GoBack
- uid: System.Windows.Navigation.NavigationService.GoForward*
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: GoForward
  nameWithType: NavigationService.GoForward
- uid: System.Windows.Navigation.NavigationService.Navigate*
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: Navigate
  nameWithType: NavigationService.Navigate
- uid: System.Windows.Navigation.NavigationService.Refresh*
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: Refresh
  nameWithType: NavigationService.Refresh
- uid: System.Windows.Navigation.NavigationService.RemoveBackEntry*
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: RemoveBackEntry
  nameWithType: NavigationService.RemoveBackEntry
- uid: System.Windows.Navigation.NavigationService.Source*
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: Source
  nameWithType: NavigationService.Source
- uid: System.Windows.Navigation.NavigationService.StopLoading*
  parent: System.Windows.Navigation.NavigationService
  isExternal: false
  name: StopLoading
  nameWithType: NavigationService.StopLoading
