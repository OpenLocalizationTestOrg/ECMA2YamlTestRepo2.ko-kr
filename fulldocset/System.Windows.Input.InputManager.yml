### YamlMime:ManagedReference
items:
- uid: System.Windows.Input.InputManager
  id: InputManager
  children:
  - System.Windows.Input.InputManager.Current
  - System.Windows.Input.InputManager.EnterMenuMode
  - System.Windows.Input.InputManager.HitTestInvalidatedAsync
  - System.Windows.Input.InputManager.InputProviders
  - System.Windows.Input.InputManager.IsInMenuMode
  - System.Windows.Input.InputManager.LeaveMenuMode
  - System.Windows.Input.InputManager.MostRecentInputDevice
  - System.Windows.Input.InputManager.PopMenuMode(System.Windows.PresentationSource)
  - System.Windows.Input.InputManager.PostNotifyInput
  - System.Windows.Input.InputManager.PostProcessInput
  - System.Windows.Input.InputManager.PreNotifyInput
  - System.Windows.Input.InputManager.PreProcessInput
  - System.Windows.Input.InputManager.PrimaryKeyboardDevice
  - System.Windows.Input.InputManager.PrimaryMouseDevice
  - System.Windows.Input.InputManager.ProcessInput(System.Windows.Input.InputEventArgs)
  - System.Windows.Input.InputManager.PushMenuMode(System.Windows.PresentationSource)
  langs:
  - csharp
  name: InputManager
  nameWithType: InputManager
  fullName: System.Windows.Input.InputManager
  type: Class
  summary: "모든 입력된 시스템을 관리 [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]합니다."
  remarks: "InputManager 클래스는 모든 입력된 시스템에서 조정을 담당 [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]합니다.       필터 <xref:System.Windows.Input.InputManager.PreProcessInput>또는 <xref:System.Windows.Input.InputManager.PostProcessInput>.</xref:System.Windows.Input.InputManager.PostProcessInput> </xref:System.Windows.Input.InputManager.PreProcessInput> 를 수신 하는 모든 코드는  필터 입력된 준비 영역을 수정할 수 있습니다.       모니터는 <xref:System.Windows.Input.InputManager.PreNotifyInput>나 <xref:System.Windows.Input.InputManager.PostNotifyInput>.</xref:System.Windows.Input.InputManager.PostNotifyInput> </xref:System.Windows.Input.InputManager.PreNotifyInput> 를 수신 하는 코드  모니터 입력된 준비 영역을 수정할 수 없습니다.       InputManager 입력된 준비 영역을 제어합니다.  입력된 준비 영역에 입력을 처리 [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] 이벤트입니다.       입력에서 처리 되기 [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] 다음 단계에서: 1입니다.  전처리 단계입니다.  입력된 관리자 발생은 <xref:System.Windows.Input.InputManager.PreProcessInput>이벤트.</xref:System.Windows.Input.InputManager.PreProcessInput>      2.  미리 알림 단계입니다.  입력된 관리자 발생은 <xref:System.Windows.Input.InputManager.PreNotifyInput>이벤트.</xref:System.Windows.Input.InputManager.PreNotifyInput>      3.  [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] 입력된 이벤트 또는 이벤트 발생 합니다.      4.  사후 알림 단계입니다.  입력된 관리자 발생은 <xref:System.Windows.Input.InputManager.PostNotifyInput>이벤트.</xref:System.Windows.Input.InputManager.PostNotifyInput>      5.  후 처리 단계입니다.  입력된 관리자 발생은 <xref:System.Windows.Input.InputManager.PostProcessInput>이벤트.</xref:System.Windows.Input.InputManager.PostProcessInput>"
  syntax:
    content: 'public sealed class InputManager : System.Windows.Threading.DispatcherObject'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  implements: []
  inheritedMembers:
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Input.InputManager.Current
  id: Current
  parent: System.Windows.Input.InputManager
  langs:
  - csharp
  name: Current
  nameWithType: InputManager.Current
  fullName: System.Windows.Input.InputManager.Current
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "가져옵니다는 <xref href=&quot;System.Windows.Input.InputManager&quot;> </xref> 현재 스레드와 연결 되어 있습니다."
  remarks: "이 클래스는 인터넷 영역에서 사용할 수 없습니다."
  syntax:
    content: public static System.Windows.Input.InputManager Current { get; }
    return:
      type: System.Windows.Input.InputManager
      description: "입력된 관리자입니다."
  overload: System.Windows.Input.InputManager.Current*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.InputManager.EnterMenuMode
  id: EnterMenuMode
  parent: System.Windows.Input.InputManager
  langs:
  - csharp
  name: EnterMenuMode
  nameWithType: InputManager.EnterMenuMode
  fullName: System.Windows.Input.InputManager.EnterMenuMode
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "컨트롤을 호출 하 여 메뉴 모드를 시작할 때 발생 된 <xref:System.Windows.Input.InputManager.PushMenuMode*>메서드.</xref:System.Windows.Input.InputManager.PushMenuMode*>"
  remarks: "구성 요소 입력된 관리자의 메뉴 모드를 입력 하는 컨트롤에 응답 하도록이 이벤트와 함께 대리자를 등록 합니다."
  syntax:
    content: public event EventHandler EnterMenuMode;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.InputManager.HitTestInvalidatedAsync
  id: HitTestInvalidatedAsync
  parent: System.Windows.Input.InputManager
  langs:
  - csharp
  name: HitTestInvalidatedAsync
  nameWithType: InputManager.HitTestInvalidatedAsync
  fullName: System.Windows.Input.InputManager.HitTestInvalidatedAsync
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "적중 횟수 테스트의 결과가 변경 될 때 발생 합니다."
  syntax:
    content: public event EventHandler HitTestInvalidatedAsync;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.InputManager.InputProviders
  id: InputProviders
  parent: System.Windows.Input.InputManager
  langs:
  - csharp
  name: InputProviders
  nameWithType: InputManager.InputProviders
  fullName: System.Windows.Input.InputManager.InputProviders
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "등록 된 InputProviders의 컬렉션을 가져옵니다는 <xref href=&quot;System.Windows.Input.InputManager&quot;> </xref>합니다."
  syntax:
    content: public System.Collections.ICollection InputProviders { get; }
    return:
      type: System.Collections.ICollection
      description: "입력 컬렉션을 제공 합니다."
  overload: System.Windows.Input.InputManager.InputProviders*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.InputManager.IsInMenuMode
  id: IsInMenuMode
  parent: System.Windows.Input.InputManager
  langs:
  - csharp
  name: IsInMenuMode
  nameWithType: InputManager.IsInMenuMode
  fullName: System.Windows.Input.InputManager.IsInMenuMode
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "나타내는 값을 가져옵니다 여부이 <xref href=&quot;System.Windows.Interop.ComponentDispatcher&quot;> </xref> 메뉴 모드입니다."
  remarks: "속성은 IsInMenuMode 반환 `true` 모든 메뉴, 진행 되 고 반환 `false` 열려 있지 않은 경우."
  syntax:
    content: public bool IsInMenuMode { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>이 경우 <xref href=&quot;System.Windows.Interop.ComponentDispatcher&quot;> </xref> 메뉴 모드입니다; 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Input.InputManager.IsInMenuMode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.InputManager.LeaveMenuMode
  id: LeaveMenuMode
  parent: System.Windows.Input.InputManager
  langs:
  - csharp
  name: LeaveMenuMode
  nameWithType: InputManager.LeaveMenuMode
  fullName: System.Windows.Input.InputManager.LeaveMenuMode
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "컨트롤을 호출 하 여 메뉴 모드를 떠나면 발생는 <xref:System.Windows.Input.InputManager.PopMenuMode*>메서드.</xref:System.Windows.Input.InputManager.PopMenuMode*>"
  remarks: "구성 요소 입력된 관리자의 메뉴 모드를 종료 하는 컨트롤에 응답 하도록이 이벤트와 함께 대리자를 등록 합니다."
  syntax:
    content: public event EventHandler LeaveMenuMode;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.InputManager.MostRecentInputDevice
  id: MostRecentInputDevice
  parent: System.Windows.Input.InputManager
  langs:
  - csharp
  name: MostRecentInputDevice
  nameWithType: InputManager.MostRecentInputDevice
  fullName: System.Windows.Input.InputManager.MostRecentInputDevice
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "가장 최근의 입력된 이벤트와 연결 된 입력된 장치를 나타내는 값을 가져옵니다."
  syntax:
    content: public System.Windows.Input.InputDevice MostRecentInputDevice { get; }
    return:
      type: System.Windows.Input.InputDevice
      description: "입력된 장치입니다."
  overload: System.Windows.Input.InputManager.MostRecentInputDevice*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.InputManager.PopMenuMode(System.Windows.PresentationSource)
  id: PopMenuMode(System.Windows.PresentationSource)
  parent: System.Windows.Input.InputManager
  langs:
  - csharp
  name: PopMenuMode(PresentationSource)
  nameWithType: InputManager.PopMenuMode(PresentationSource)
  fullName: System.Windows.Input.InputManager.PopMenuMode(PresentationSource)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "메뉴 모드를 종료할 구성 요소에 의해 호출 됩니다."
  remarks: "구성 요소 입력된 관리자의 메뉴 모드를 종료할이 메서드를 호출 합니다. `menuSite` 창 메시지에 대 한 권한 있는 액세스를 해제 합니다.       이 메서드를 호출 하면를 감소 시키기 위해 열기 메뉴의 내부 수가 집합과 <xref:System.Windows.Input.InputManager.IsInMenuMode%2A>속성을 `false`, 이것이 마지막 메뉴를 닫습니다.</xref:System.Windows.Input.InputManager.IsInMenuMode%2A>"
  syntax:
    content: public void PopMenuMode (System.Windows.PresentationSource menuSite);
    parameters:
    - id: menuSite
      type: System.Windows.PresentationSource
      description: "종료할 메뉴입니다."
  overload: System.Windows.Input.InputManager.PopMenuMode*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>menuSite</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Input.InputManager.PostNotifyInput
  id: PostNotifyInput
  parent: System.Windows.Input.InputManager
  langs:
  - csharp
  name: PostNotifyInput
  nameWithType: InputManager.PostNotifyInput
  fullName: System.Windows.Input.InputManager.PostNotifyInput
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "뒤에 오는 <xref href=&quot;System.Windows.Input.InputManager.PreNotifyInput&quot;> </xref> 처리기의 입력 및 해당 처리를 완료 했 [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] 이벤트가 발생 합니다."
  remarks: "수신 하는 모든 코드를 모니터가 <xref:System.Windows.Input.InputManager.PreNotifyInput>또는 PostNotifyInput.</xref:System.Windows.Input.InputManager.PreNotifyInput>  모니터 입력된 준비 영역을 수정할 수 없습니다.       PostNotifyInput에 연결 된 처리기는 시스템에 처리기 보다 먼저 사용자가 추가 하는 처리기가 호출 되도록 반대 순서로 호출 됩니다.       입력에서 처리 되기 [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] 다음 단계에서: 1입니다.  전처리 단계입니다.  입력된 관리자 발생은 <xref:System.Windows.Input.InputManager.PreProcessInput>이벤트.</xref:System.Windows.Input.InputManager.PreProcessInput>      2.  미리 알림 단계입니다.  입력된 관리자 발생은 <xref:System.Windows.Input.InputManager.PreNotifyInput>이벤트.</xref:System.Windows.Input.InputManager.PreNotifyInput>      3.  [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] 입력된 이벤트 또는 이벤트 발생 합니다.      4.  사후 알림 단계입니다.  입력된 관리자 PostNotifyInput 이벤트를 발생 시킵니다.      5.  후 처리 단계입니다.  입력된 관리자 발생은 <xref:System.Windows.Input.InputManager.PostProcessInput>이벤트.</xref:System.Windows.Input.InputManager.PostProcessInput>"
  syntax:
    content: public event System.Windows.Input.NotifyInputEventHandler PostNotifyInput;
    return:
      type: System.Windows.Input.NotifyInputEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.InputManager.PostProcessInput
  id: PostProcessInput
  parent: System.Windows.Input.InputManager
  langs:
  - csharp
  name: PostProcessInput
  nameWithType: InputManager.PostProcessInput
  fullName: System.Windows.Input.InputManager.PostProcessInput
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "뒤에 오는 <xref href=&quot;System.Windows.Input.InputManager.PreNotifyInput&quot;> </xref> 처리기 입력 처리를 완료 했습니다."
  remarks: "필터는 수신 하는 모든 코드 <xref:System.Windows.Input.InputManager.PreProcessInput>또는 PostProcessInput.</xref:System.Windows.Input.InputManager.PreProcessInput>  필터 입력된 준비 영역을 수정할 수 있습니다.       PostProcessInput에 연결 된 처리기는 시스템에 처리기 보다 먼저 사용자가 추가 하는 처리기가 호출 되도록 반대 순서로 호출 됩니다.       입력에서 처리 되기 [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] 다음 단계에서: 1입니다.  전처리 단계입니다.  입력된 관리자 발생은 <xref:System.Windows.Input.InputManager.PreProcessInput>이벤트.</xref:System.Windows.Input.InputManager.PreProcessInput>      2.  미리 알림 단계입니다.  입력된 관리자 발생은 <xref:System.Windows.Input.InputManager.PreNotifyInput>이벤트.</xref:System.Windows.Input.InputManager.PreNotifyInput>      3.  [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] 입력된 이벤트 또는 이벤트 발생 합니다.      4.  사후 알림 단계입니다.  입력된 관리자 발생은 <xref:System.Windows.Input.InputManager.PostNotifyInput>이벤트.</xref:System.Windows.Input.InputManager.PostNotifyInput>      5.  후 처리 단계입니다.  입력된 관리자 PostProcessInput 이벤트를 발생 시킵니다."
  syntax:
    content: public event System.Windows.Input.ProcessInputEventHandler PostProcessInput;
    return:
      type: System.Windows.Input.ProcessInputEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.InputManager.PreNotifyInput
  id: PreNotifyInput
  parent: System.Windows.Input.InputManager
  langs:
  - csharp
  name: PreNotifyInput
  nameWithType: InputManager.PreNotifyInput
  fullName: System.Windows.Input.InputManager.PreNotifyInput
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "발생 경우는 <xref href=&quot;System.Windows.Input.InputManager.PreProcessInput&quot;> </xref> 처리기 처리를 마치면 입력 인 경우 입력 취소 되지 않았습니다."
  remarks: "모니터는 PreNotifyInput 나 <xref:System.Windows.Input.InputManager.PostNotifyInput>.</xref:System.Windows.Input.InputManager.PostNotifyInput> 를 수신 하는 코드  모니터 입력된 준비 영역을 수정할 수 없습니다.       PreNotifyInput에 연결 된 처리기는 시스템에 처리기 보다 먼저 사용자가 추가 하는 처리기가 호출 되도록 반대 순서로 호출 됩니다.       입력에서 처리 되기 [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] 다음 단계에서: 1입니다.  전처리 단계입니다.  입력된 관리자 발생은 <xref:System.Windows.Input.InputManager.PreProcessInput>이벤트.</xref:System.Windows.Input.InputManager.PreProcessInput>      2.  미리 알림 단계입니다.  입력된 관리자 PreNotifyInput 이벤트를 발생 시킵니다.      3.  [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] 입력된 이벤트 또는 이벤트 발생 합니다.      4.  사후 알림 단계입니다.  입력된 관리자 발생은 <xref:System.Windows.Input.InputManager.PostNotifyInput>이벤트.</xref:System.Windows.Input.InputManager.PostNotifyInput>      5.  후 처리 단계입니다.  입력된 관리자 발생은 <xref:System.Windows.Input.InputManager.PostProcessInput>이벤트.</xref:System.Windows.Input.InputManager.PostProcessInput>"
  syntax:
    content: public event System.Windows.Input.NotifyInputEventHandler PreNotifyInput;
    return:
      type: System.Windows.Input.NotifyInputEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.InputManager.PreProcessInput
  id: PreProcessInput
  parent: System.Windows.Input.InputManager
  langs:
  - csharp
  name: PreProcessInput
  nameWithType: InputManager.PreProcessInput
  fullName: System.Windows.Input.InputManager.PreProcessInput
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "발생 경우는 <xref href=&quot;System.Windows.Input.InputManager&quot;> </xref> 입력된 항목을 처리 하기 시작 합니다."
  remarks: "필터는 PreProcessInput 나 <xref:System.Windows.Input.InputManager.PostProcessInput>.</xref:System.Windows.Input.InputManager.PostProcessInput> 를 수신 하는 코드  필터 입력된 준비 영역을 수정할 수 있습니다.       PreProcessInput에 연결 된 처리기는 시스템에 처리기 보다 먼저 사용자가 추가 하는 처리기가 호출 되도록 반대 순서로 호출 됩니다.       호출 <xref:System.Windows.Input.PreProcessInputEventArgs.Cancel%2A>에 <xref:System.Windows.Input.PreProcessInputEventArgs>에 전달 되는 <xref:System.Windows.Input.PreProcessInputEventHandler>는 입력 처리를 취소 합니다.</xref:System.Windows.Input.PreProcessInputEventHandler> </xref:System.Windows.Input.PreProcessInputEventArgs> </xref:System.Windows.Input.PreProcessInputEventArgs.Cancel%2A>       입력에서 처리 되기 [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] 다음 단계에서: 1입니다.  전처리 단계입니다.  입력된 관리자 PreProcessInput 이벤트를 발생 시킵니다.      2.  미리 알림 단계입니다.  입력된 관리자 발생은 <xref:System.Windows.Input.InputManager.PreNotifyInput>이벤트.</xref:System.Windows.Input.InputManager.PreNotifyInput>      3.  [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] 입력된 이벤트 또는 이벤트 발생 합니다.      4.  사후 알림 단계입니다.  입력된 관리자 발생은 <xref:System.Windows.Input.InputManager.PostNotifyInput>이벤트.</xref:System.Windows.Input.InputManager.PostNotifyInput>      5.  후 처리 단계입니다.  입력된 관리자 발생은 <xref:System.Windows.Input.InputManager.PostProcessInput>이벤트.</xref:System.Windows.Input.InputManager.PostProcessInput>"
  syntax:
    content: public event System.Windows.Input.PreProcessInputEventHandler PreProcessInput;
    return:
      type: System.Windows.Input.PreProcessInputEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.InputManager.PrimaryKeyboardDevice
  id: PrimaryKeyboardDevice
  parent: System.Windows.Input.InputManager
  langs:
  - csharp
  name: PrimaryKeyboardDevice
  nameWithType: InputManager.PrimaryKeyboardDevice
  fullName: System.Windows.Input.InputManager.PrimaryKeyboardDevice
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "기본 키보드 장치를 가져옵니다."
  syntax:
    content: public System.Windows.Input.KeyboardDevice PrimaryKeyboardDevice { get; }
    return:
      type: System.Windows.Input.KeyboardDevice
      description: "키보드 장치입니다."
  overload: System.Windows.Input.InputManager.PrimaryKeyboardDevice*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.InputManager.PrimaryMouseDevice
  id: PrimaryMouseDevice
  parent: System.Windows.Input.InputManager
  langs:
  - csharp
  name: PrimaryMouseDevice
  nameWithType: InputManager.PrimaryMouseDevice
  fullName: System.Windows.Input.InputManager.PrimaryMouseDevice
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "기본 마우스 장치를 가져옵니다."
  syntax:
    content: public System.Windows.Input.MouseDevice PrimaryMouseDevice { get; }
    return:
      type: System.Windows.Input.MouseDevice
      description: "마우스 장치입니다."
  overload: System.Windows.Input.InputManager.PrimaryMouseDevice*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.InputManager.ProcessInput(System.Windows.Input.InputEventArgs)
  id: ProcessInput(System.Windows.Input.InputEventArgs)
  parent: System.Windows.Input.InputManager
  langs:
  - csharp
  name: ProcessInput(InputEventArgs)
  nameWithType: InputManager.ProcessInput(InputEventArgs)
  fullName: System.Windows.Input.InputManager.ProcessInput(InputEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "지정된 된 입력을 동기적으로 처리합니다."
  remarks: "필터 <xref:System.Windows.Input.InputManager.PreProcessInput>또는 <xref:System.Windows.Input.InputManager.PostProcessInput>.</xref:System.Windows.Input.InputManager.PostProcessInput> </xref:System.Windows.Input.InputManager.PreProcessInput> 를 수신 하는 모든 코드는  필터 입력된 준비 영역을 수정할 수 있습니다.       모니터는 <xref:System.Windows.Input.InputManager.PreNotifyInput>나 <xref:System.Windows.Input.InputManager.PostNotifyInput>.</xref:System.Windows.Input.InputManager.PostNotifyInput> </xref:System.Windows.Input.InputManager.PreNotifyInput> 를 수신 하는 코드  모니터 입력된 준비 영역을 수정할 수 없습니다.       지정 된 입력으로 모든 필터 및 모니터 처리 되 고 입력된 이벤트로 적절 한 요소에 마지막으로 디스패치 됩니다.       입력에서 처리 되기 [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] 다음 단계에서: 1입니다.  전처리 단계입니다.  입력된 관리자 발생은 <xref:System.Windows.Input.InputManager.PreProcessInput>이벤트.</xref:System.Windows.Input.InputManager.PreProcessInput>      2.  미리 알림 단계입니다.  입력된 관리자 발생은 <xref:System.Windows.Input.InputManager.PreNotifyInput>이벤트.</xref:System.Windows.Input.InputManager.PreNotifyInput>      3.  [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] 입력된 이벤트 또는 이벤트 발생 합니다.      4.  사후 알림 단계입니다.  입력된 관리자 발생은 <xref:System.Windows.Input.InputManager.PostNotifyInput>이벤트.</xref:System.Windows.Input.InputManager.PostNotifyInput>      5.  후 처리 단계입니다.  입력된 관리자 발생은 <xref:System.Windows.Input.InputManager.PostProcessInput>이벤트.</xref:System.Windows.Input.InputManager.PostProcessInput>"
  syntax:
    content: public bool ProcessInput (System.Windows.Input.InputEventArgs input);
    parameters:
    - id: input
      type: System.Windows.Input.InputEventArgs
      description: "처리할 입력 합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>모든 입력된 이벤트가; 처리 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Input.InputManager.ProcessInput*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>input</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Input.InputManager.PushMenuMode(System.Windows.PresentationSource)
  id: PushMenuMode(System.Windows.PresentationSource)
  parent: System.Windows.Input.InputManager
  langs:
  - csharp
  name: PushMenuMode(PresentationSource)
  nameWithType: InputManager.PushMenuMode(PresentationSource)
  fullName: System.Windows.Input.InputManager.PushMenuMode(PresentationSource)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "메뉴 모드 구성 요소에 의해 호출 됩니다."
  remarks: "구성 요소 입력된 관리자의 메뉴 모드를 시작 하려면이 메서드를 호출 합니다. `menuSite` 창 메시지에 대 한 액세스 권한을된 갖습니다. 이 메서드를 호출을 늘리고 열기 메뉴의 내부 개수 시키고 유효성 검사 설정의 <xref:System.Windows.Input.InputManager.IsInMenuMode%2A>속성을 `true`경우 이것이 첫 번째 메뉴를 엽니다.</xref:System.Windows.Input.InputManager.IsInMenuMode%2A>"
  syntax:
    content: public void PushMenuMode (System.Windows.PresentationSource menuSite);
    parameters:
    - id: menuSite
      type: System.Windows.PresentationSource
      description: "메뉴 입력입니다."
  overload: System.Windows.Input.InputManager.PushMenuMode*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>menuSite</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Windows.Threading.DispatcherObject
  isExternal: false
  name: System.Windows.Threading.DispatcherObject
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Windows.Input.InputManager.Current
  parent: System.Windows.Input.InputManager
  isExternal: false
  name: Current
  nameWithType: InputManager.Current
  fullName: System.Windows.Input.InputManager.Current
- uid: System.Windows.Input.InputManager
  parent: System.Windows.Input
  isExternal: false
  name: InputManager
  nameWithType: InputManager
  fullName: System.Windows.Input.InputManager
- uid: System.Windows.Input.InputManager.EnterMenuMode
  parent: System.Windows.Input.InputManager
  isExternal: false
  name: EnterMenuMode
  nameWithType: InputManager.EnterMenuMode
  fullName: System.Windows.Input.InputManager.EnterMenuMode
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Windows.Input.InputManager.HitTestInvalidatedAsync
  parent: System.Windows.Input.InputManager
  isExternal: false
  name: HitTestInvalidatedAsync
  nameWithType: InputManager.HitTestInvalidatedAsync
  fullName: System.Windows.Input.InputManager.HitTestInvalidatedAsync
- uid: System.Windows.Input.InputManager.InputProviders
  parent: System.Windows.Input.InputManager
  isExternal: false
  name: InputProviders
  nameWithType: InputManager.InputProviders
  fullName: System.Windows.Input.InputManager.InputProviders
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Windows.Input.InputManager.IsInMenuMode
  parent: System.Windows.Input.InputManager
  isExternal: false
  name: IsInMenuMode
  nameWithType: InputManager.IsInMenuMode
  fullName: System.Windows.Input.InputManager.IsInMenuMode
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Input.InputManager.LeaveMenuMode
  parent: System.Windows.Input.InputManager
  isExternal: false
  name: LeaveMenuMode
  nameWithType: InputManager.LeaveMenuMode
  fullName: System.Windows.Input.InputManager.LeaveMenuMode
- uid: System.Windows.Input.InputManager.MostRecentInputDevice
  parent: System.Windows.Input.InputManager
  isExternal: false
  name: MostRecentInputDevice
  nameWithType: InputManager.MostRecentInputDevice
  fullName: System.Windows.Input.InputManager.MostRecentInputDevice
- uid: System.Windows.Input.InputDevice
  parent: System.Windows.Input
  isExternal: false
  name: InputDevice
  nameWithType: InputDevice
  fullName: System.Windows.Input.InputDevice
- uid: System.Windows.Input.InputManager.PopMenuMode(System.Windows.PresentationSource)
  parent: System.Windows.Input.InputManager
  isExternal: false
  name: PopMenuMode(PresentationSource)
  nameWithType: InputManager.PopMenuMode(PresentationSource)
  fullName: System.Windows.Input.InputManager.PopMenuMode(PresentationSource)
- uid: System.Windows.PresentationSource
  parent: System.Windows
  isExternal: false
  name: PresentationSource
  nameWithType: PresentationSource
  fullName: System.Windows.PresentationSource
- uid: System.Windows.Input.InputManager.PostNotifyInput
  parent: System.Windows.Input.InputManager
  isExternal: false
  name: PostNotifyInput
  nameWithType: InputManager.PostNotifyInput
  fullName: System.Windows.Input.InputManager.PostNotifyInput
- uid: System.Windows.Input.NotifyInputEventHandler
  parent: System.Windows.Input
  isExternal: false
  name: NotifyInputEventHandler
  nameWithType: NotifyInputEventHandler
  fullName: System.Windows.Input.NotifyInputEventHandler
- uid: System.Windows.Input.InputManager.PostProcessInput
  parent: System.Windows.Input.InputManager
  isExternal: false
  name: PostProcessInput
  nameWithType: InputManager.PostProcessInput
  fullName: System.Windows.Input.InputManager.PostProcessInput
- uid: System.Windows.Input.ProcessInputEventHandler
  parent: System.Windows.Input
  isExternal: false
  name: ProcessInputEventHandler
  nameWithType: ProcessInputEventHandler
  fullName: System.Windows.Input.ProcessInputEventHandler
- uid: System.Windows.Input.InputManager.PreNotifyInput
  parent: System.Windows.Input.InputManager
  isExternal: false
  name: PreNotifyInput
  nameWithType: InputManager.PreNotifyInput
  fullName: System.Windows.Input.InputManager.PreNotifyInput
- uid: System.Windows.Input.InputManager.PreProcessInput
  parent: System.Windows.Input.InputManager
  isExternal: false
  name: PreProcessInput
  nameWithType: InputManager.PreProcessInput
  fullName: System.Windows.Input.InputManager.PreProcessInput
- uid: System.Windows.Input.PreProcessInputEventHandler
  parent: System.Windows.Input
  isExternal: false
  name: PreProcessInputEventHandler
  nameWithType: PreProcessInputEventHandler
  fullName: System.Windows.Input.PreProcessInputEventHandler
- uid: System.Windows.Input.InputManager.PrimaryKeyboardDevice
  parent: System.Windows.Input.InputManager
  isExternal: false
  name: PrimaryKeyboardDevice
  nameWithType: InputManager.PrimaryKeyboardDevice
  fullName: System.Windows.Input.InputManager.PrimaryKeyboardDevice
- uid: System.Windows.Input.KeyboardDevice
  parent: System.Windows.Input
  isExternal: false
  name: KeyboardDevice
  nameWithType: KeyboardDevice
  fullName: System.Windows.Input.KeyboardDevice
- uid: System.Windows.Input.InputManager.PrimaryMouseDevice
  parent: System.Windows.Input.InputManager
  isExternal: false
  name: PrimaryMouseDevice
  nameWithType: InputManager.PrimaryMouseDevice
  fullName: System.Windows.Input.InputManager.PrimaryMouseDevice
- uid: System.Windows.Input.MouseDevice
  parent: System.Windows.Input
  isExternal: false
  name: MouseDevice
  nameWithType: MouseDevice
  fullName: System.Windows.Input.MouseDevice
- uid: System.Windows.Input.InputManager.ProcessInput(System.Windows.Input.InputEventArgs)
  parent: System.Windows.Input.InputManager
  isExternal: false
  name: ProcessInput(InputEventArgs)
  nameWithType: InputManager.ProcessInput(InputEventArgs)
  fullName: System.Windows.Input.InputManager.ProcessInput(InputEventArgs)
- uid: System.Windows.Input.InputEventArgs
  parent: System.Windows.Input
  isExternal: false
  name: InputEventArgs
  nameWithType: InputEventArgs
  fullName: System.Windows.Input.InputEventArgs
- uid: System.Windows.Input.InputManager.PushMenuMode(System.Windows.PresentationSource)
  parent: System.Windows.Input.InputManager
  isExternal: false
  name: PushMenuMode(PresentationSource)
  nameWithType: InputManager.PushMenuMode(PresentationSource)
  fullName: System.Windows.Input.InputManager.PushMenuMode(PresentationSource)
- uid: System.Windows.Input.InputManager.Current*
  parent: System.Windows.Input.InputManager
  isExternal: false
  name: Current
  nameWithType: InputManager.Current
- uid: System.Windows.Input.InputManager.InputProviders*
  parent: System.Windows.Input.InputManager
  isExternal: false
  name: InputProviders
  nameWithType: InputManager.InputProviders
- uid: System.Windows.Input.InputManager.IsInMenuMode*
  parent: System.Windows.Input.InputManager
  isExternal: false
  name: IsInMenuMode
  nameWithType: InputManager.IsInMenuMode
- uid: System.Windows.Input.InputManager.MostRecentInputDevice*
  parent: System.Windows.Input.InputManager
  isExternal: false
  name: MostRecentInputDevice
  nameWithType: InputManager.MostRecentInputDevice
- uid: System.Windows.Input.InputManager.PopMenuMode*
  parent: System.Windows.Input.InputManager
  isExternal: false
  name: PopMenuMode
  nameWithType: InputManager.PopMenuMode
- uid: System.Windows.Input.InputManager.PrimaryKeyboardDevice*
  parent: System.Windows.Input.InputManager
  isExternal: false
  name: PrimaryKeyboardDevice
  nameWithType: InputManager.PrimaryKeyboardDevice
- uid: System.Windows.Input.InputManager.PrimaryMouseDevice*
  parent: System.Windows.Input.InputManager
  isExternal: false
  name: PrimaryMouseDevice
  nameWithType: InputManager.PrimaryMouseDevice
- uid: System.Windows.Input.InputManager.ProcessInput*
  parent: System.Windows.Input.InputManager
  isExternal: false
  name: ProcessInput
  nameWithType: InputManager.ProcessInput
- uid: System.Windows.Input.InputManager.PushMenuMode*
  parent: System.Windows.Input.InputManager
  isExternal: false
  name: PushMenuMode
  nameWithType: InputManager.PushMenuMode
