### YamlMime:ManagedReference
items:
- uid: System.Activities.Presentation.Hosting.IMultiTargetingSupportService
  id: IMultiTargetingSupportService
  children:
  - System.Activities.Presentation.Hosting.IMultiTargetingSupportService.GetReflectionAssembly(System.Reflection.AssemblyName)
  - System.Activities.Presentation.Hosting.IMultiTargetingSupportService.GetRuntimeType(System.Type)
  - System.Activities.Presentation.Hosting.IMultiTargetingSupportService.IsSupportedType(System.Type)
  langs:
  - csharp
  name: IMultiTargetingSupportService
  nameWithType: IMultiTargetingSupportService
  fullName: System.Activities.Presentation.Hosting.IMultiTargetingSupportService
  type: Interface
  summary: "에 멀티 타기 팅을 제공 [!INCLUDE[wfd1](~/add/includes/wfd1-md.md)] 호스트 합니다."
  remarks: "*멀티 타기 팅* 대상에 해당 하는 로드 된 어셈블리의 올바른 버전을 찾을 수 있다는 [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] 버전에서 현재 워크플로 프로젝트의 [!INCLUDE[vs2010](~/add/includes/vs2010-md.md)]합니다.       이 인터페이스 구현 되며 내부적으로 사용 [!INCLUDE[wf1](~/add/includes/wf1-md.md)] 디자이너 구성 요소를 해결 하려면 [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] 어셈블리를 멀티 타기 팅을 인식 방식으로 내에서 [!INCLUDE[vs2010](~/add/includes/vs2010-md.md)] 응용 프로그램을 호스트 합니다. [!INCLUDE[wf1](~/add/includes/wf1-md.md)] 디자이너 구성 요소 추가 어셈블리 편집에 동적으로 로드 해야 하는 경우에이 인터페이스의 구현을 사용 하 여 `AppDomain`합니다."
  syntax:
    content: public interface IMultiTargetingSupportService
  implements: []
  platform:
  - net462
- uid: System.Activities.Presentation.Hosting.IMultiTargetingSupportService.GetReflectionAssembly(System.Reflection.AssemblyName)
  id: GetReflectionAssembly(System.Reflection.AssemblyName)
  parent: System.Activities.Presentation.Hosting.IMultiTargetingSupportService
  langs:
  - csharp
  name: GetReflectionAssembly(AssemblyName)
  nameWithType: IMultiTargetingSupportService.GetReflectionAssembly(AssemblyName)
  fullName: System.Activities.Presentation.Hosting.IMultiTargetingSupportService.GetReflectionAssembly(AssemblyName)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Hosting
  summary: "어셈블리 이름이 지정 된 현재 로드 된 어셈블리를 반환 합니다."
  syntax:
    content: public System.Reflection.Assembly GetReflectionAssembly (System.Reflection.AssemblyName targetAssemblyName);
    parameters:
    - id: targetAssemblyName
      type: System.Reflection.AssemblyName
      description: "어셈블리 이름입니다."
    return:
      type: System.Reflection.Assembly
      description: "어셈블리 이름이 지정 된 현재 로드 된 어셈블리입니다."
  overload: System.Activities.Presentation.Hosting.IMultiTargetingSupportService.GetReflectionAssembly*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Hosting.IMultiTargetingSupportService.GetRuntimeType(System.Type)
  id: GetRuntimeType(System.Type)
  parent: System.Activities.Presentation.Hosting.IMultiTargetingSupportService
  langs:
  - csharp
  name: GetRuntimeType(Type)
  nameWithType: IMultiTargetingSupportService.GetRuntimeType(Type)
  fullName: System.Activities.Presentation.Hosting.IMultiTargetingSupportService.GetRuntimeType(Type)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Hosting
  summary: "지정된 된 형식에 해당 하는 런타임 형식을 가져옵니다."
  syntax:
    content: public Type GetRuntimeType (Type reflectionType);
    parameters:
    - id: reflectionType
      type: System.Type
      description: "런타임 형식을 가져올 형식입니다."
    return:
      type: System.Type
      description: "지정된 된 형식에 해당 하는 런타임 형식입니다."
  overload: System.Activities.Presentation.Hosting.IMultiTargetingSupportService.GetRuntimeType*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Hosting.IMultiTargetingSupportService.IsSupportedType(System.Type)
  id: IsSupportedType(System.Type)
  parent: System.Activities.Presentation.Hosting.IMultiTargetingSupportService
  langs:
  - csharp
  name: IsSupportedType(Type)
  nameWithType: IMultiTargetingSupportService.IsSupportedType(Type)
  fullName: System.Activities.Presentation.Hosting.IMultiTargetingSupportService.IsSupportedType(Type)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Hosting
  summary: "지정된 된 형식의 지원 되는지 여부를 나타내는 값을 반환 합니다."
  syntax:
    content: public bool IsSupportedType (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "조사할 형식입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>지정된 된 형식을 지원 되 면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Activities.Presentation.Hosting.IMultiTargetingSupportService.IsSupportedType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Activities.Presentation.Hosting.IMultiTargetingSupportService.GetReflectionAssembly(System.Reflection.AssemblyName)
  parent: System.Activities.Presentation.Hosting.IMultiTargetingSupportService
  isExternal: false
  name: GetReflectionAssembly(AssemblyName)
  nameWithType: IMultiTargetingSupportService.GetReflectionAssembly(AssemblyName)
  fullName: System.Activities.Presentation.Hosting.IMultiTargetingSupportService.GetReflectionAssembly(AssemblyName)
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: true
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Reflection.AssemblyName
  parent: System.Reflection
  isExternal: true
  name: AssemblyName
  nameWithType: AssemblyName
  fullName: System.Reflection.AssemblyName
- uid: System.Activities.Presentation.Hosting.IMultiTargetingSupportService.GetRuntimeType(System.Type)
  parent: System.Activities.Presentation.Hosting.IMultiTargetingSupportService
  isExternal: false
  name: GetRuntimeType(Type)
  nameWithType: IMultiTargetingSupportService.GetRuntimeType(Type)
  fullName: System.Activities.Presentation.Hosting.IMultiTargetingSupportService.GetRuntimeType(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Activities.Presentation.Hosting.IMultiTargetingSupportService.IsSupportedType(System.Type)
  parent: System.Activities.Presentation.Hosting.IMultiTargetingSupportService
  isExternal: false
  name: IsSupportedType(Type)
  nameWithType: IMultiTargetingSupportService.IsSupportedType(Type)
  fullName: System.Activities.Presentation.Hosting.IMultiTargetingSupportService.IsSupportedType(Type)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Activities.Presentation.Hosting.IMultiTargetingSupportService.GetReflectionAssembly*
  parent: System.Activities.Presentation.Hosting.IMultiTargetingSupportService
  isExternal: false
  name: GetReflectionAssembly
  nameWithType: IMultiTargetingSupportService.GetReflectionAssembly
- uid: System.Activities.Presentation.Hosting.IMultiTargetingSupportService.GetRuntimeType*
  parent: System.Activities.Presentation.Hosting.IMultiTargetingSupportService
  isExternal: false
  name: GetRuntimeType
  nameWithType: IMultiTargetingSupportService.GetRuntimeType
- uid: System.Activities.Presentation.Hosting.IMultiTargetingSupportService.IsSupportedType*
  parent: System.Activities.Presentation.Hosting.IMultiTargetingSupportService
  isExternal: false
  name: IsSupportedType
  nameWithType: IMultiTargetingSupportService.IsSupportedType
