### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.MACTripleDES
  id: MACTripleDES
  children:
  - System.Security.Cryptography.MACTripleDES.#ctor
  - System.Security.Cryptography.MACTripleDES.#ctor(System.Byte[])
  - System.Security.Cryptography.MACTripleDES.#ctor(System.String,System.Byte[])
  - System.Security.Cryptography.MACTripleDES.Dispose(System.Boolean)
  - System.Security.Cryptography.MACTripleDES.HashCore(System.Byte[],System.Int32,System.Int32)
  - System.Security.Cryptography.MACTripleDES.HashFinal
  - System.Security.Cryptography.MACTripleDES.Initialize
  - System.Security.Cryptography.MACTripleDES.Padding
  langs:
  - csharp
  name: MACTripleDES
  nameWithType: MACTripleDES
  fullName: System.Security.Cryptography.MACTripleDES
  type: Class
  summary: "사용 하 여 메시지 인증 코드 (MAC) 계산 <xref href=&quot;System.Security.Cryptography.TripleDES&quot;> </xref> 입력된 데이터에 대 한 <xref href=&quot;System.Security.Cryptography.CryptoStream&quot;> </xref>합니다."
  remarks: "MAC 비밀 키를 공유 하는 발신자와 수신자 보안 되지 않은 채널을 통해 보낸 메시지가 훼손 되었는지 여부를 확인 데 사용할 수 있습니다. 보낸 사람에 게는 원본 데이터에 대 한 MAC을 계산 하 고 모두 단일 메시지로 보냅니다. 수신자는 MAC를 받은 메시지에 대해 다시 계산 하 고 계산 된 MAC에 전송 된 MAC과 일치 하는지 확인       비밀 키의 지식이 없어도 메시지를 변경 하 고 올바른 MAC 재현 하기 때문에 데이터 또는 불일치 상태가 MAC 결과에 변경 따라서 코드가 일치 하는 경우에 메시지가 인증 됩니다.       MACTripleDES은 16 또는 24 바이트 long, 해시 시퀀스 길이 8 바이트를 생성 하는 키를 사용 합니다."
  example:
  - "The following example creates a MAC for a file named `input.txt`, which is located in the folder that contains the example executable. The MAC and the original text are written to a file named `encrypted.hsh` in the same folder. The signed file is then read, and the MAC is calculated for the text portion of the file and compared to the MAC that is included with the text.  \n  \n [!code-vb[MAC3DES#1](~/add/codesnippet/visualbasic/t-system.security.crypto_8_1.vb)]\n [!code-cs[MAC3DES#1](~/add/codesnippet/csharp/t-system.security.crypto_8_1.cs)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class MACTripleDES : System.Security.Cryptography.KeyedHashAlgorithm
  inheritance:
  - System.Object
  - System.Security.Cryptography.HashAlgorithm
  - System.Security.Cryptography.KeyedHashAlgorithm
  implements: []
  inheritedMembers:
  - System.Security.Cryptography.HashAlgorithm.CanReuseTransform
  - System.Security.Cryptography.HashAlgorithm.CanTransformMultipleBlocks
  - System.Security.Cryptography.HashAlgorithm.Clear
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)
  - System.Security.Cryptography.HashAlgorithm.Dispose
  - System.Security.Cryptography.HashAlgorithm.Hash
  - System.Security.Cryptography.HashAlgorithm.HashSize
  - System.Security.Cryptography.HashAlgorithm.HashSizeValue
  - System.Security.Cryptography.HashAlgorithm.HashValue
  - System.Security.Cryptography.HashAlgorithm.InputBlockSize
  - System.Security.Cryptography.HashAlgorithm.OutputBlockSize
  - System.Security.Cryptography.HashAlgorithm.State
  - System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  - System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)
  - System.Security.Cryptography.KeyedHashAlgorithm.Create
  - System.Security.Cryptography.KeyedHashAlgorithm.Create(System.String)
  - System.Security.Cryptography.KeyedHashAlgorithm.Key
  - System.Security.Cryptography.KeyedHashAlgorithm.KeyValue
  platform:
  - net462
- uid: System.Security.Cryptography.MACTripleDES.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.MACTripleDES
  langs:
  - csharp
  name: MACTripleDES()
  nameWithType: MACTripleDES.MACTripleDES()
  fullName: System.Security.Cryptography.MACTripleDES.MACTripleDES()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Security.Cryptography.MACTripleDES&quot;> </xref> 클래스입니다."
  remarks: "이 생성자는 <xref:System.Security.Cryptography.TripleDES>.</xref:System.Security.Cryptography.TripleDES> 의 기본 구현을 사용합니다."
  syntax:
    content: public MACTripleDES ();
    parameters: []
  overload: System.Security.Cryptography.MACTripleDES.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.MACTripleDES.#ctor(System.Byte[])
  id: '#ctor(System.Byte[])'
  parent: System.Security.Cryptography.MACTripleDES
  langs:
  - csharp
  name: MACTripleDES(Byte[])
  nameWithType: MACTripleDES.MACTripleDES(Byte[])
  fullName: System.Security.Cryptography.MACTripleDES.MACTripleDES(Byte[])
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Security.Cryptography.MACTripleDES&quot;> </xref> 지정 된 키 데이터를 사용 하 여 클래스입니다."
  remarks: "이 생성자는 <xref:System.Security.Cryptography.TripleDES>.</xref:System.Security.Cryptography.TripleDES> 의 기본 구현을 사용합니다. `rgbKey` 매개 변수는 길이가 16 또는 24 바이트 여야 합니다."
  example:
  - For an example of how to use this constructor, see the <xref:System.Security.Cryptography.MACTripleDES> class.
  syntax:
    content: public MACTripleDES (byte[] rgbKey);
    parameters:
    - id: rgbKey
      type: System.Byte[]
      description: "에 대 한 비밀 키 <xref href=&quot;System.Security.Cryptography.MACTripleDES&quot;> </xref> 암호화 합니다."
  overload: System.Security.Cryptography.MACTripleDES.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rgbKey</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.MACTripleDES.#ctor(System.String,System.Byte[])
  id: '#ctor(System.String,System.Byte[])'
  parent: System.Security.Cryptography.MACTripleDES
  langs:
  - csharp
  name: MACTripleDES(String,Byte[])
  nameWithType: MACTripleDES.MACTripleDES(String,Byte[])
  fullName: System.Security.Cryptography.MACTripleDES.MACTripleDES(String,Byte[])
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Security.Cryptography.MACTripleDES&quot;> </xref> 된 지정 된 키 데이터 및 지정 된 구현의 사용 하 여 <xref href=&quot;System.Security.Cryptography.TripleDES&quot;> </xref>합니다."
  remarks: "`strTripleDES` 매개 변수는 이름이 고 <xref:System.Security.Cryptography.TripleDES>구현 형식.</xref:System.Security.Cryptography.TripleDES> 기본 구현은 System.Security.Cryptography.TripleDES입니다.       `rgbKey` 매개 변수는 길이가 16 또는 24 바이트 여야 합니다."
  syntax:
    content: public MACTripleDES (string strTripleDES, byte[] rgbKey);
    parameters:
    - id: strTripleDES
      type: System.String
      description: "이름에서 <xref href=&quot;System.Security.Cryptography.TripleDES&quot;> </xref> 사용할 구현입니다."
    - id: rgbKey
      type: System.Byte[]
      description: "에 대 한 비밀 키 <xref href=&quot;System.Security.Cryptography.MACTripleDES&quot;> </xref> 암호화 합니다."
  overload: System.Security.Cryptography.MACTripleDES.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rgbKey</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Cryptography.CryptographicUnexpectedOperationException
    commentId: T:System.Security.Cryptography.CryptographicUnexpectedOperationException
    description: "<code> strTripleDES </code> 매개 변수의 올바른 이름이 아닙니다.는 <xref href=&quot;System.Security.Cryptography.TripleDES&quot;> </xref> 구현 합니다."
  platform:
  - net462
- uid: System.Security.Cryptography.MACTripleDES.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Security.Cryptography.MACTripleDES
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: MACTripleDES.Dispose(Boolean)
  fullName: System.Security.Cryptography.MACTripleDES.Dispose(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "사용 하는 리소스를 해제는 <xref href=&quot;System.Security.Cryptography.MACTripleDES&quot;> </xref> 인스턴스."
  remarks: "이 메서드는 public `Dispose()` 메서드 및 `Finalize` 메서드. `Dispose()`보호 된 호출 `Dispose(Boolean)` 로 설정 disposing 매개 `true`합니다. `Finalize`호출 `Dispose` 삭제로 설정 된 `false`합니다.       경우는 `disposing` 매개 변수는 `true`,이 메서드는 관리 개체가 보유 하는 모든 리소스를 해제 합니다.이 <xref:System.Security.Cryptography.MACTripleDES>참조.</xref:System.Security.Cryptography.MACTripleDES> 이 메서드 호출에서 `Dispose()` 각 참조 된 개체의 메서드."
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>메서드가 호출 되는 경우는 &lt;xref:System.IDisposable.Dispose%2A?displayProperty=fullName&gt; 구현, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Security.Cryptography.MACTripleDES.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.MACTripleDES.HashCore(System.Byte[],System.Int32,System.Int32)
  id: HashCore(System.Byte[],System.Int32,System.Int32)
  parent: System.Security.Cryptography.MACTripleDES
  langs:
  - csharp
  name: HashCore(Byte[],Int32,Int32)
  nameWithType: MACTripleDES.HashCore(Byte[],Int32,Int32)
  fullName: System.Security.Cryptography.MACTripleDES.HashCore(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "개체에 쓰여진 데이터의 경로 <xref href=&quot;System.Security.Cryptography.TripleDES&quot;> </xref> 메시지 인증 코드 (MAC) 계산에 대 한 암호기입니다."
  syntax:
    content: protected override void HashCore (byte[] rgbData, int ibStart, int cbSize);
    parameters:
    - id: rgbData
      type: System.Byte[]
      description: "입력된 데이터입니다."
    - id: ibStart
      type: System.Int32
      description: "데이터 사용을 시작할 바이트 배열의 오프셋입니다."
    - id: cbSize
      type: System.Int32
      description: "데이터로 사용할 배열의 바이트 수입니다."
  overload: System.Security.Cryptography.MACTripleDES.HashCore*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.MACTripleDES.HashFinal
  id: HashFinal
  parent: System.Security.Cryptography.MACTripleDES
  langs:
  - csharp
  name: HashFinal()
  nameWithType: MACTripleDES.HashFinal()
  fullName: System.Security.Cryptography.MACTripleDES.HashFinal()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "반환 된 계산된 코드 MAC (메시지 인증) 후 모든 데이터 개체에 기록 됩니다."
  remarks: "모든 데이터가 기록 되 고 나중에 더 많은 데이터를 쓸 수 없습니다 후에이 값을 읽을 수 있습니다. 새 인스턴스를 만들고 <xref:System.Security.Cryptography.MACTripleDES>해당 데이터에 대 한 MAC 계산 하기 위해 데이터의 각 개별 세그먼트에 대 한.</xref:System.Security.Cryptography.MACTripleDES>"
  syntax:
    content: protected override byte[] HashFinal ();
    parameters: []
    return:
      type: System.Byte[]
      description: "계산 된 MAC"
  overload: System.Security.Cryptography.MACTripleDES.HashFinal*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.MACTripleDES.Initialize
  id: Initialize
  parent: System.Security.Cryptography.MACTripleDES
  langs:
  - csharp
  name: Initialize()
  nameWithType: MACTripleDES.Initialize()
  fullName: System.Security.Cryptography.MACTripleDES.Initialize()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "인스턴스를 초기화 <xref href=&quot;System.Security.Cryptography.MACTripleDES&quot;> </xref>합니다."
  remarks: "이 메서드는 클래스에 대 한 기본 생성자를 호출합니다."
  syntax:
    content: public override void Initialize ();
    parameters: []
  overload: System.Security.Cryptography.MACTripleDES.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.MACTripleDES.Padding
  id: Padding
  parent: System.Security.Cryptography.MACTripleDES
  langs:
  - csharp
  name: Padding
  nameWithType: MACTripleDES.Padding
  fullName: System.Security.Cryptography.MACTripleDES.Padding
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "해시 알고리즘에 사용 된 패딩 모드를 가져오거나 설정 합니다."
  remarks: "대부분의 일반 텍스트 메시지 완전히 블록을 작성 하는 바이트 수로 구성 되어 있지 않습니다. 종종 마지막 블록을 채울 바이트 수가 충분 하지 않습니다. 이 경우 안쪽 여백 문자열을 텍스트에 추가 됩니다. 예를 들어 블록 길이가 64 비트 마지막 블록 40 비트만 포함 하는 경우 24 비트의 패딩이 추가 됩니다. 참조 <xref:System.Security.Cryptography.PaddingMode>특정 모드에 대 한.</xref:System.Security.Cryptography.PaddingMode>       이 필드는 <xref:System.Security.Cryptography.SymmetricAlgorithm.Padding%2A>속성.</xref:System.Security.Cryptography.SymmetricAlgorithm.Padding%2A>"
  syntax:
    content: public System.Security.Cryptography.PaddingMode Padding { get; set; }
    return:
      type: System.Security.Cryptography.PaddingMode
      description: "해시 알고리즘에 사용 된 패딩 모드입니다."
  overload: System.Security.Cryptography.MACTripleDES.Padding*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "패딩 모드 잘못 되어 속성을 설정할 수 없습니다."
  platform:
  - net462
references:
- uid: System.Security.Cryptography.KeyedHashAlgorithm
  isExternal: false
  name: System.Security.Cryptography.KeyedHashAlgorithm
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Cryptography.CryptographicUnexpectedOperationException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicUnexpectedOperationException
  nameWithType: CryptographicUnexpectedOperationException
  fullName: System.Security.Cryptography.CryptographicUnexpectedOperationException
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.Security.Cryptography.MACTripleDES.#ctor
  parent: System.Security.Cryptography.MACTripleDES
  isExternal: false
  name: MACTripleDES()
  nameWithType: MACTripleDES.MACTripleDES()
  fullName: System.Security.Cryptography.MACTripleDES.MACTripleDES()
- uid: System.Security.Cryptography.MACTripleDES.#ctor(System.Byte[])
  parent: System.Security.Cryptography.MACTripleDES
  isExternal: false
  name: MACTripleDES(Byte[])
  nameWithType: MACTripleDES.MACTripleDES(Byte[])
  fullName: System.Security.Cryptography.MACTripleDES.MACTripleDES(Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.MACTripleDES.#ctor(System.String,System.Byte[])
  parent: System.Security.Cryptography.MACTripleDES
  isExternal: false
  name: MACTripleDES(String,Byte[])
  nameWithType: MACTripleDES.MACTripleDES(String,Byte[])
  fullName: System.Security.Cryptography.MACTripleDES.MACTripleDES(String,Byte[])
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.MACTripleDES.Dispose(System.Boolean)
  parent: System.Security.Cryptography.MACTripleDES
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: MACTripleDES.Dispose(Boolean)
  fullName: System.Security.Cryptography.MACTripleDES.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.MACTripleDES.HashCore(System.Byte[],System.Int32,System.Int32)
  parent: System.Security.Cryptography.MACTripleDES
  isExternal: false
  name: HashCore(Byte[],Int32,Int32)
  nameWithType: MACTripleDES.HashCore(Byte[],Int32,Int32)
  fullName: System.Security.Cryptography.MACTripleDES.HashCore(Byte[],Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.MACTripleDES.HashFinal
  parent: System.Security.Cryptography.MACTripleDES
  isExternal: false
  name: HashFinal()
  nameWithType: MACTripleDES.HashFinal()
  fullName: System.Security.Cryptography.MACTripleDES.HashFinal()
- uid: System.Security.Cryptography.MACTripleDES.Initialize
  parent: System.Security.Cryptography.MACTripleDES
  isExternal: false
  name: Initialize()
  nameWithType: MACTripleDES.Initialize()
  fullName: System.Security.Cryptography.MACTripleDES.Initialize()
- uid: System.Security.Cryptography.MACTripleDES.Padding
  parent: System.Security.Cryptography.MACTripleDES
  isExternal: false
  name: Padding
  nameWithType: MACTripleDES.Padding
  fullName: System.Security.Cryptography.MACTripleDES.Padding
- uid: System.Security.Cryptography.PaddingMode
  parent: System.Security.Cryptography
  isExternal: false
  name: PaddingMode
  nameWithType: PaddingMode
  fullName: System.Security.Cryptography.PaddingMode
- uid: System.Security.Cryptography.MACTripleDES.#ctor*
  parent: System.Security.Cryptography.MACTripleDES
  isExternal: false
  name: MACTripleDES
  nameWithType: MACTripleDES.MACTripleDES
- uid: System.Security.Cryptography.MACTripleDES.Dispose*
  parent: System.Security.Cryptography.MACTripleDES
  isExternal: false
  name: Dispose
  nameWithType: MACTripleDES.Dispose
- uid: System.Security.Cryptography.MACTripleDES.HashCore*
  parent: System.Security.Cryptography.MACTripleDES
  isExternal: false
  name: HashCore
  nameWithType: MACTripleDES.HashCore
- uid: System.Security.Cryptography.MACTripleDES.HashFinal*
  parent: System.Security.Cryptography.MACTripleDES
  isExternal: false
  name: HashFinal
  nameWithType: MACTripleDES.HashFinal
- uid: System.Security.Cryptography.MACTripleDES.Initialize*
  parent: System.Security.Cryptography.MACTripleDES
  isExternal: false
  name: Initialize
  nameWithType: MACTripleDES.Initialize
- uid: System.Security.Cryptography.MACTripleDES.Padding*
  parent: System.Security.Cryptography.MACTripleDES
  isExternal: false
  name: Padding
  nameWithType: MACTripleDES.Padding
