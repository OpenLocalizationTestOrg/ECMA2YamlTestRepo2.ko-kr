### YamlMime:ManagedReference
items:
- uid: System.Windows.Input.TraversalRequest
  id: TraversalRequest
  children:
  - System.Windows.Input.TraversalRequest.#ctor(System.Windows.Input.FocusNavigationDirection)
  - System.Windows.Input.TraversalRequest.FocusNavigationDirection
  - System.Windows.Input.TraversalRequest.Wrapped
  langs:
  - csharp
  name: TraversalRequest
  nameWithType: TraversalRequest
  fullName: System.Windows.Input.TraversalRequest
  type: Class
  summary: "다른 컨트롤에 포커스를 이동 하려면 요청을 나타냅니다."
  remarks: "이 클래스에 대 한 입력된 매개 변수로 사용 되는 <xref:System.Windows.UIElement.MoveFocus%2A?displayProperty=fullName>메서드.</xref:System.Windows.UIElement.MoveFocus%2A?displayProperty=fullName> <xref:System.Windows.UIElement.MoveFocus%2A>메서드는 더 실용적 구현을 제공 하는 WPF 프레임 워크 수준 재정의 (<xref:System.Windows.FrameworkElement.MoveFocus%2A?displayProperty=fullName>), 및 <xref:System.Windows.ContentElement> <xref:System.Windows.FrameworkContentElement>.</xref:System.Windows.FrameworkContentElement> </xref:System.Windows.ContentElement> 병렬 구현 뿐 아니라</xref:System.Windows.FrameworkElement.MoveFocus%2A?displayProperty=fullName> </xref:System.Windows.UIElement.MoveFocus%2A> 일반적으로 설정 합니다 속성 TraversalRequest에 포커스를 다른 요소로 이동할 수를 요청할 때 포커스 동작을 사용자 지정 하기 위해.       이 클래스는도 다음 방법에 대 한 입력된 매개 변수로 사용 됩니다.- <xref:System.Windows.Interop.IKeyboardInputSink.TabInto%2A>와 상호 운용에 사용 되는 해당 메서드의 구현을 (<xref:System.Windows.Forms.Integration.WindowsFormsHost.TabInto%2A>).</xref:System.Windows.Forms.Integration.WindowsFormsHost.TabInto%2A> </xref:System.Windows.Interop.IKeyboardInputSink.TabInto%2A>      -   <xref:System.Windows.Interop.IKeyboardInputSite.OnNoMoreTabStops%2A>.</xref:System.Windows.Interop.IKeyboardInputSite.OnNoMoreTabStops%2A>"
  example:
  - "The following example creates a TraversalRequest instance as input for a <xref:System.Windows.FrameworkElement.MoveFocus%2A?displayProperty=fullName> call.  \n  \n [!code-cs[FocusSample#FocusSampleMoveFocus](~/add/codesnippet/csharp/FocusSample/Window1.xaml.cs#focussamplemovefocus)]\n [!code-vb[FocusSample#FocusSampleMoveFocus](~/add/codesnippet/visualbasic/focussample/window1.xaml.vb#focussamplemovefocus)]"
  syntax:
    content: public class TraversalRequest
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Input.TraversalRequest.#ctor(System.Windows.Input.FocusNavigationDirection)
  id: '#ctor(System.Windows.Input.FocusNavigationDirection)'
  parent: System.Windows.Input.TraversalRequest
  langs:
  - csharp
  name: TraversalRequest(FocusNavigationDirection)
  nameWithType: TraversalRequest.TraversalRequest(FocusNavigationDirection)
  fullName: System.Windows.Input.TraversalRequest.TraversalRequest(FocusNavigationDirection)
  type: Constructor
  assemblies:
  - WindowsBase
  namespace: System.Windows.Input
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Windows.Input.TraversalRequest&quot;> </xref> 클래스입니다."
  remarks: ''
  example:
  - "The following example creates a <xref:System.Windows.Input.TraversalRequest> instance as input for a <xref:System.Windows.FrameworkElement.MoveFocus%2A?displayProperty=fullName> call.  \n  \n [!code-cs[FocusSample#FocusSampleMoveFocus](~/add/codesnippet/csharp/FocusSample/Window1.xaml.cs#focussamplemovefocus)]\n [!code-vb[FocusSample#FocusSampleMoveFocus](~/add/codesnippet/visualbasic/focussample/window1.xaml.vb#focussamplemovefocus)]"
  syntax:
    content: public TraversalRequest (System.Windows.Input.FocusNavigationDirection focusNavigationDirection);
    parameters:
    - id: focusNavigationDirection
      type: System.Windows.Input.FocusNavigationDirection
      description: "열거형의 값으로 포커스 이동의 의도 한 방향입니다."
  overload: System.Windows.Input.TraversalRequest.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.TraversalRequest.FocusNavigationDirection
  id: FocusNavigationDirection
  parent: System.Windows.Input.TraversalRequest
  langs:
  - csharp
  name: FocusNavigationDirection
  nameWithType: TraversalRequest.FocusNavigationDirection
  fullName: System.Windows.Input.TraversalRequest.FocusNavigationDirection
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows.Input
  summary: "이동 방향을 가져옵니다."
  remarks: "이 속성은 읽기 전용 이므로 <xref:System.Windows.Input.FocusNavigationDirection>의 필수 입력 매개 변수는 <xref:System.Windows.Input.TraversalRequest>클래스 생성자.</xref:System.Windows.Input.TraversalRequest> </xref:System.Windows.Input.FocusNavigationDirection>"
  syntax:
    content: public System.Windows.Input.FocusNavigationDirection FocusNavigationDirection { get; }
    return:
      type: System.Windows.Input.FocusNavigationDirection
      description: "이동 방향 열거형 값 중 하나입니다."
  overload: System.Windows.Input.TraversalRequest.FocusNavigationDirection*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.TraversalRequest.Wrapped
  id: Wrapped
  parent: System.Windows.Input.TraversalRequest
  langs:
  - csharp
  name: Wrapped
  nameWithType: TraversalRequest.Wrapped
  fullName: System.Windows.Input.TraversalRequest.Wrapped
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows.Input
  summary: "포커스 이동 포커스를 가질 수 있는 자식 요소의 끝에 도달 하는지 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "포커스를 받을 수 요소는 해당 요소에는 <xref:System.Windows.UIElement.Focusable%2A>속성은 `true`.</xref:System.Windows.UIElement.Focusable%2A>       메서드를 호출할 때 탭 정지를 사용 하 여 통과 줄 바꿈할지 여부를 통신 하도록이 매개 변수는 주로 <xref:System.Windows.Interop.IKeyboardInputSink.TabInto%2A>, <xref:System.Windows.Forms.Integration.WindowsFormsHost.TabInto%2A>, 또는.<xref:System.Windows.Interop.IKeyboardInputSite.OnNoMoreTabStops%2A>.</xref:System.Windows.Interop.IKeyboardInputSite.OnNoMoreTabStops%2A> </xref:System.Windows.Forms.Integration.WindowsFormsHost.TabInto%2A> </xref:System.Windows.Interop.IKeyboardInputSink.TabInto%2A> 구현 하는 개체를 포커스를 전달 하는 경우 <xref:System.Windows.Interop.IKeyboardInputSink>, Wrapped true 하면를 지정 하 `true` 에 전달 되는 값은 <xref:System.Windows.Interop.IKeyboardInputSink.TabInto%2A>구현.</xref:System.Windows.Interop.IKeyboardInputSink.TabInto%2A> </xref:System.Windows.Interop.IKeyboardInputSink>"
  syntax:
    content: public bool Wrapped { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>이 이동이 포커스를 가질 수 있는 자식 요소의 끝에 도달한 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Input.TraversalRequest.Wrapped*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Windows.Input.TraversalRequest.#ctor(System.Windows.Input.FocusNavigationDirection)
  parent: System.Windows.Input.TraversalRequest
  isExternal: false
  name: TraversalRequest(FocusNavigationDirection)
  nameWithType: TraversalRequest.TraversalRequest(FocusNavigationDirection)
  fullName: System.Windows.Input.TraversalRequest.TraversalRequest(FocusNavigationDirection)
- uid: System.Windows.Input.FocusNavigationDirection
  parent: System.Windows.Input
  isExternal: false
  name: FocusNavigationDirection
  nameWithType: FocusNavigationDirection
  fullName: System.Windows.Input.FocusNavigationDirection
- uid: System.Windows.Input.TraversalRequest.FocusNavigationDirection
  parent: System.Windows.Input.TraversalRequest
  isExternal: false
  name: FocusNavigationDirection
  nameWithType: TraversalRequest.FocusNavigationDirection
  fullName: System.Windows.Input.TraversalRequest.FocusNavigationDirection
- uid: System.Windows.Input.TraversalRequest.Wrapped
  parent: System.Windows.Input.TraversalRequest
  isExternal: false
  name: Wrapped
  nameWithType: TraversalRequest.Wrapped
  fullName: System.Windows.Input.TraversalRequest.Wrapped
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Input.TraversalRequest.#ctor*
  parent: System.Windows.Input.TraversalRequest
  isExternal: false
  name: TraversalRequest
  nameWithType: TraversalRequest.TraversalRequest
- uid: System.Windows.Input.TraversalRequest.FocusNavigationDirection*
  parent: System.Windows.Input.TraversalRequest
  isExternal: false
  name: FocusNavigationDirection
  nameWithType: TraversalRequest.FocusNavigationDirection
- uid: System.Windows.Input.TraversalRequest.Wrapped*
  parent: System.Windows.Input.TraversalRequest
  isExternal: false
  name: Wrapped
  nameWithType: TraversalRequest.Wrapped
