### YamlMime:ManagedReference
items:
- uid: System.Windows.Documents.FlowDocument
  id: FlowDocument
  children:
  - System.Windows.Documents.FlowDocument.#ctor
  - System.Windows.Documents.FlowDocument.#ctor(System.Windows.Documents.Block)
  - System.Windows.Documents.FlowDocument.Background
  - System.Windows.Documents.FlowDocument.BackgroundProperty
  - System.Windows.Documents.FlowDocument.Blocks
  - System.Windows.Documents.FlowDocument.ColumnGap
  - System.Windows.Documents.FlowDocument.ColumnGapProperty
  - System.Windows.Documents.FlowDocument.ColumnRuleBrush
  - System.Windows.Documents.FlowDocument.ColumnRuleBrushProperty
  - System.Windows.Documents.FlowDocument.ColumnRuleWidth
  - System.Windows.Documents.FlowDocument.ColumnRuleWidthProperty
  - System.Windows.Documents.FlowDocument.ColumnWidth
  - System.Windows.Documents.FlowDocument.ColumnWidthProperty
  - System.Windows.Documents.FlowDocument.ContentEnd
  - System.Windows.Documents.FlowDocument.ContentStart
  - System.Windows.Documents.FlowDocument.FlowDirection
  - System.Windows.Documents.FlowDocument.FlowDirectionProperty
  - System.Windows.Documents.FlowDocument.FontFamily
  - System.Windows.Documents.FlowDocument.FontFamilyProperty
  - System.Windows.Documents.FlowDocument.FontSize
  - System.Windows.Documents.FlowDocument.FontSizeProperty
  - System.Windows.Documents.FlowDocument.FontStretch
  - System.Windows.Documents.FlowDocument.FontStretchProperty
  - System.Windows.Documents.FlowDocument.FontStyle
  - System.Windows.Documents.FlowDocument.FontStyleProperty
  - System.Windows.Documents.FlowDocument.FontWeight
  - System.Windows.Documents.FlowDocument.FontWeightProperty
  - System.Windows.Documents.FlowDocument.Foreground
  - System.Windows.Documents.FlowDocument.ForegroundProperty
  - System.Windows.Documents.FlowDocument.IsColumnWidthFlexible
  - System.Windows.Documents.FlowDocument.IsColumnWidthFlexibleProperty
  - System.Windows.Documents.FlowDocument.IsEnabledCore
  - System.Windows.Documents.FlowDocument.IsHyphenationEnabled
  - System.Windows.Documents.FlowDocument.IsHyphenationEnabledProperty
  - System.Windows.Documents.FlowDocument.IsOptimalParagraphEnabled
  - System.Windows.Documents.FlowDocument.IsOptimalParagraphEnabledProperty
  - System.Windows.Documents.FlowDocument.LineHeight
  - System.Windows.Documents.FlowDocument.LineHeightProperty
  - System.Windows.Documents.FlowDocument.LineStackingStrategy
  - System.Windows.Documents.FlowDocument.LineStackingStrategyProperty
  - System.Windows.Documents.FlowDocument.LogicalChildren
  - System.Windows.Documents.FlowDocument.MaxPageHeight
  - System.Windows.Documents.FlowDocument.MaxPageHeightProperty
  - System.Windows.Documents.FlowDocument.MaxPageWidth
  - System.Windows.Documents.FlowDocument.MaxPageWidthProperty
  - System.Windows.Documents.FlowDocument.MinPageHeight
  - System.Windows.Documents.FlowDocument.MinPageHeightProperty
  - System.Windows.Documents.FlowDocument.MinPageWidth
  - System.Windows.Documents.FlowDocument.MinPageWidthProperty
  - System.Windows.Documents.FlowDocument.OnCreateAutomationPeer
  - System.Windows.Documents.FlowDocument.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.Documents.FlowDocument.PageHeight
  - System.Windows.Documents.FlowDocument.PageHeightProperty
  - System.Windows.Documents.FlowDocument.PagePadding
  - System.Windows.Documents.FlowDocument.PagePaddingProperty
  - System.Windows.Documents.FlowDocument.PageWidth
  - System.Windows.Documents.FlowDocument.PageWidthProperty
  - System.Windows.Documents.FlowDocument.SetDpi(System.Windows.DpiScale)
  - System.Windows.Documents.FlowDocument.System#IServiceProvider#GetService(System.Type)
  - System.Windows.Documents.FlowDocument.System#Windows#Documents#IDocumentPaginatorSource#DocumentPaginator
  - System.Windows.Documents.FlowDocument.System#Windows#Markup#IAddChild#AddChild(System.Object)
  - System.Windows.Documents.FlowDocument.System#Windows#Markup#IAddChild#AddText(System.String)
  - System.Windows.Documents.FlowDocument.TextAlignment
  - System.Windows.Documents.FlowDocument.TextAlignmentProperty
  - System.Windows.Documents.FlowDocument.TextEffects
  - System.Windows.Documents.FlowDocument.TextEffectsProperty
  - System.Windows.Documents.FlowDocument.Typography
  langs:
  - csharp
  name: FlowDocument
  nameWithType: FlowDocument
  fullName: System.Windows.Documents.FlowDocument
  type: Class
  summary: "호스트 및 형식으로 유동 콘텐츠 페이지 매김 및 열과 같은 고급 문서 기능을 합니다."
  remarks: "FlowDocument 자식 콘텐츠에 대 한 강력한 콘텐츠 모델을 적용합니다.  FlowDocument에 포함 된 최상위 자식 요소 <xref:System.Windows.Documents.Block>.</xref:System.Windows.Documents.Block> 에서 파생 되어야 합니다.  유효한 최상위 자식 요소는 다음과 같습니다:- <xref:System.Windows.Documents.BlockUIContainer>- <xref:System.Windows.Documents.List>- <xref:System.Windows.Documents.Paragraph>- <xref:System.Windows.Documents.Section>- <xref:System.Windows.Documents.Table>기본 <xref:System.Windows.DataTemplate>FlowDocument 포함 한 <xref:System.Windows.Controls.FlowDocumentReader>FlowDocument XAML 파일의 루트 요소로 사용 하는 경우 문서를 표시 하는 데 사용 되는.</xref:System.Windows.Controls.FlowDocumentReader> </xref:System.Windows.DataTemplate> </xref:System.Windows.Documents.Table> </xref:System.Windows.Documents.Section> </xref:System.Windows.Documents.Paragraph> </xref:System.Windows.Documents.List> </xref:System.Windows.Documents.BlockUIContainer> 문서에 표시할 수 FlowDocument 루트 요소가 없는 경우는 <xref:System.Windows.Controls.FlowDocumentScrollViewer>, 즉 <xref:System.Windows.Controls.FlowDocumentPageViewer>, 또는 <xref:System.Windows.Controls.FlowDocumentReader>컨트롤.</xref:System.Windows.Controls.FlowDocumentReader> </xref:System.Windows.Controls.FlowDocumentPageViewer> </xref:System.Windows.Controls.FlowDocumentScrollViewer> FlowDocument 편집할 수도 있습니다는 <xref:System.Windows.Controls.RichTextBox>컨트롤.</xref:System.Windows.Controls.RichTextBox>"
  syntax:
    content: >-
      [System.Windows.Localizability(System.Windows.LocalizationCategory.Inherit, Readability=System.Windows.Readability.Unreadable)]

      [System.Windows.Markup.ContentProperty("Blocks")]

      public class FlowDocument : System.Windows.FrameworkContentElement, IServiceProvider, System.Windows.Documents.IDocumentPaginatorSource, System.Windows.Markup.IAddChild
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  - System.Windows.ContentElement
  - System.Windows.FrameworkContentElement
  implements:
  - System.IServiceProvider
  - System.Windows.Documents.IDocumentPaginatorSource
  - System.Windows.Markup.IAddChild
  inheritedMembers:
  - System.Windows.ContentElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)
  - System.Windows.ContentElement.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)
  - System.Windows.ContentElement.AddToEventRoute(System.Windows.EventRoute,System.Windows.RoutedEventArgs)
  - System.Windows.ContentElement.AllowDrop
  - System.Windows.ContentElement.AllowDropProperty
  - System.Windows.ContentElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.ContentElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.ContentElement.AreAnyTouchesCaptured
  - System.Windows.ContentElement.AreAnyTouchesCapturedProperty
  - System.Windows.ContentElement.AreAnyTouchesCapturedWithin
  - System.Windows.ContentElement.AreAnyTouchesCapturedWithinProperty
  - System.Windows.ContentElement.AreAnyTouchesDirectlyOver
  - System.Windows.ContentElement.AreAnyTouchesDirectlyOverProperty
  - System.Windows.ContentElement.AreAnyTouchesOver
  - System.Windows.ContentElement.AreAnyTouchesOverProperty
  - System.Windows.ContentElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)
  - System.Windows.ContentElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.ContentElement.CaptureMouse
  - System.Windows.ContentElement.CaptureStylus
  - System.Windows.ContentElement.CaptureTouch(System.Windows.Input.TouchDevice)
  - System.Windows.ContentElement.CommandBindings
  - System.Windows.ContentElement.DragEnter
  - System.Windows.ContentElement.DragEnterEvent
  - System.Windows.ContentElement.DragLeave
  - System.Windows.ContentElement.DragLeaveEvent
  - System.Windows.ContentElement.DragOver
  - System.Windows.ContentElement.DragOverEvent
  - System.Windows.ContentElement.Drop
  - System.Windows.ContentElement.DropEvent
  - System.Windows.ContentElement.Focus
  - System.Windows.ContentElement.Focusable
  - System.Windows.ContentElement.FocusableChanged
  - System.Windows.ContentElement.FocusableProperty
  - System.Windows.ContentElement.GetAnimationBaseValue(System.Windows.DependencyProperty)
  - System.Windows.ContentElement.GiveFeedback
  - System.Windows.ContentElement.GiveFeedbackEvent
  - System.Windows.ContentElement.GotFocus
  - System.Windows.ContentElement.GotFocusEvent
  - System.Windows.ContentElement.GotKeyboardFocus
  - System.Windows.ContentElement.GotKeyboardFocusEvent
  - System.Windows.ContentElement.GotMouseCapture
  - System.Windows.ContentElement.GotMouseCaptureEvent
  - System.Windows.ContentElement.GotStylusCapture
  - System.Windows.ContentElement.GotStylusCaptureEvent
  - System.Windows.ContentElement.GotTouchCapture
  - System.Windows.ContentElement.GotTouchCaptureEvent
  - System.Windows.ContentElement.HasAnimatedProperties
  - System.Windows.ContentElement.InputBindings
  - System.Windows.ContentElement.IsEnabled
  - System.Windows.ContentElement.IsEnabledChanged
  - System.Windows.ContentElement.IsEnabledProperty
  - System.Windows.ContentElement.IsFocused
  - System.Windows.ContentElement.IsFocusedProperty
  - System.Windows.ContentElement.IsInputMethodEnabled
  - System.Windows.ContentElement.IsKeyboardFocused
  - System.Windows.ContentElement.IsKeyboardFocusedChanged
  - System.Windows.ContentElement.IsKeyboardFocusedProperty
  - System.Windows.ContentElement.IsKeyboardFocusWithin
  - System.Windows.ContentElement.IsKeyboardFocusWithinChanged
  - System.Windows.ContentElement.IsKeyboardFocusWithinProperty
  - System.Windows.ContentElement.IsMouseCaptured
  - System.Windows.ContentElement.IsMouseCapturedChanged
  - System.Windows.ContentElement.IsMouseCapturedProperty
  - System.Windows.ContentElement.IsMouseCaptureWithin
  - System.Windows.ContentElement.IsMouseCaptureWithinChanged
  - System.Windows.ContentElement.IsMouseCaptureWithinProperty
  - System.Windows.ContentElement.IsMouseDirectlyOver
  - System.Windows.ContentElement.IsMouseDirectlyOverChanged
  - System.Windows.ContentElement.IsMouseDirectlyOverProperty
  - System.Windows.ContentElement.IsMouseOver
  - System.Windows.ContentElement.IsMouseOverProperty
  - System.Windows.ContentElement.IsStylusCaptured
  - System.Windows.ContentElement.IsStylusCapturedChanged
  - System.Windows.ContentElement.IsStylusCapturedProperty
  - System.Windows.ContentElement.IsStylusCaptureWithin
  - System.Windows.ContentElement.IsStylusCaptureWithinChanged
  - System.Windows.ContentElement.IsStylusCaptureWithinProperty
  - System.Windows.ContentElement.IsStylusDirectlyOver
  - System.Windows.ContentElement.IsStylusDirectlyOverChanged
  - System.Windows.ContentElement.IsStylusDirectlyOverProperty
  - System.Windows.ContentElement.IsStylusOver
  - System.Windows.ContentElement.IsStylusOverProperty
  - System.Windows.ContentElement.KeyDown
  - System.Windows.ContentElement.KeyDownEvent
  - System.Windows.ContentElement.KeyUp
  - System.Windows.ContentElement.KeyUpEvent
  - System.Windows.ContentElement.LostFocus
  - System.Windows.ContentElement.LostFocusEvent
  - System.Windows.ContentElement.LostKeyboardFocus
  - System.Windows.ContentElement.LostKeyboardFocusEvent
  - System.Windows.ContentElement.LostMouseCapture
  - System.Windows.ContentElement.LostMouseCaptureEvent
  - System.Windows.ContentElement.LostStylusCapture
  - System.Windows.ContentElement.LostStylusCaptureEvent
  - System.Windows.ContentElement.LostTouchCapture
  - System.Windows.ContentElement.LostTouchCaptureEvent
  - System.Windows.ContentElement.MouseDown
  - System.Windows.ContentElement.MouseDownEvent
  - System.Windows.ContentElement.MouseEnter
  - System.Windows.ContentElement.MouseEnterEvent
  - System.Windows.ContentElement.MouseLeave
  - System.Windows.ContentElement.MouseLeaveEvent
  - System.Windows.ContentElement.MouseLeftButtonDown
  - System.Windows.ContentElement.MouseLeftButtonDownEvent
  - System.Windows.ContentElement.MouseLeftButtonUp
  - System.Windows.ContentElement.MouseLeftButtonUpEvent
  - System.Windows.ContentElement.MouseMove
  - System.Windows.ContentElement.MouseMoveEvent
  - System.Windows.ContentElement.MouseRightButtonDown
  - System.Windows.ContentElement.MouseRightButtonDownEvent
  - System.Windows.ContentElement.MouseRightButtonUp
  - System.Windows.ContentElement.MouseRightButtonUpEvent
  - System.Windows.ContentElement.MouseUp
  - System.Windows.ContentElement.MouseUpEvent
  - System.Windows.ContentElement.MouseWheel
  - System.Windows.ContentElement.MouseWheelEvent
  - System.Windows.ContentElement.OnDragEnter(System.Windows.DragEventArgs)
  - System.Windows.ContentElement.OnDragLeave(System.Windows.DragEventArgs)
  - System.Windows.ContentElement.OnDragOver(System.Windows.DragEventArgs)
  - System.Windows.ContentElement.OnDrop(System.Windows.DragEventArgs)
  - System.Windows.ContentElement.OnGiveFeedback(System.Windows.GiveFeedbackEventArgs)
  - System.Windows.ContentElement.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  - System.Windows.ContentElement.OnGotMouseCapture(System.Windows.Input.MouseEventArgs)
  - System.Windows.ContentElement.OnGotStylusCapture(System.Windows.Input.StylusEventArgs)
  - System.Windows.ContentElement.OnGotTouchCapture(System.Windows.Input.TouchEventArgs)
  - System.Windows.ContentElement.OnIsKeyboardFocusedChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.ContentElement.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.ContentElement.OnIsMouseCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.ContentElement.OnIsMouseCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.ContentElement.OnIsMouseDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.ContentElement.OnIsStylusCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.ContentElement.OnIsStylusCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.ContentElement.OnIsStylusDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.ContentElement.OnKeyDown(System.Windows.Input.KeyEventArgs)
  - System.Windows.ContentElement.OnKeyUp(System.Windows.Input.KeyEventArgs)
  - System.Windows.ContentElement.OnLostFocus(System.Windows.RoutedEventArgs)
  - System.Windows.ContentElement.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  - System.Windows.ContentElement.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)
  - System.Windows.ContentElement.OnLostStylusCapture(System.Windows.Input.StylusEventArgs)
  - System.Windows.ContentElement.OnLostTouchCapture(System.Windows.Input.TouchEventArgs)
  - System.Windows.ContentElement.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.ContentElement.OnMouseEnter(System.Windows.Input.MouseEventArgs)
  - System.Windows.ContentElement.OnMouseLeave(System.Windows.Input.MouseEventArgs)
  - System.Windows.ContentElement.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.ContentElement.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.ContentElement.OnMouseMove(System.Windows.Input.MouseEventArgs)
  - System.Windows.ContentElement.OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.ContentElement.OnMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.ContentElement.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.ContentElement.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)
  - System.Windows.ContentElement.OnPreviewDragEnter(System.Windows.DragEventArgs)
  - System.Windows.ContentElement.OnPreviewDragLeave(System.Windows.DragEventArgs)
  - System.Windows.ContentElement.OnPreviewDragOver(System.Windows.DragEventArgs)
  - System.Windows.ContentElement.OnPreviewDrop(System.Windows.DragEventArgs)
  - System.Windows.ContentElement.OnPreviewGiveFeedback(System.Windows.GiveFeedbackEventArgs)
  - System.Windows.ContentElement.OnPreviewGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  - System.Windows.ContentElement.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)
  - System.Windows.ContentElement.OnPreviewKeyUp(System.Windows.Input.KeyEventArgs)
  - System.Windows.ContentElement.OnPreviewLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  - System.Windows.ContentElement.OnPreviewMouseDown(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.ContentElement.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.ContentElement.OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.ContentElement.OnPreviewMouseMove(System.Windows.Input.MouseEventArgs)
  - System.Windows.ContentElement.OnPreviewMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.ContentElement.OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.ContentElement.OnPreviewMouseUp(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.ContentElement.OnPreviewMouseWheel(System.Windows.Input.MouseWheelEventArgs)
  - System.Windows.ContentElement.OnPreviewQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)
  - System.Windows.ContentElement.OnPreviewStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)
  - System.Windows.ContentElement.OnPreviewStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)
  - System.Windows.ContentElement.OnPreviewStylusDown(System.Windows.Input.StylusDownEventArgs)
  - System.Windows.ContentElement.OnPreviewStylusInAirMove(System.Windows.Input.StylusEventArgs)
  - System.Windows.ContentElement.OnPreviewStylusInRange(System.Windows.Input.StylusEventArgs)
  - System.Windows.ContentElement.OnPreviewStylusMove(System.Windows.Input.StylusEventArgs)
  - System.Windows.ContentElement.OnPreviewStylusOutOfRange(System.Windows.Input.StylusEventArgs)
  - System.Windows.ContentElement.OnPreviewStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)
  - System.Windows.ContentElement.OnPreviewStylusUp(System.Windows.Input.StylusEventArgs)
  - System.Windows.ContentElement.OnPreviewTextInput(System.Windows.Input.TextCompositionEventArgs)
  - System.Windows.ContentElement.OnPreviewTouchDown(System.Windows.Input.TouchEventArgs)
  - System.Windows.ContentElement.OnPreviewTouchMove(System.Windows.Input.TouchEventArgs)
  - System.Windows.ContentElement.OnPreviewTouchUp(System.Windows.Input.TouchEventArgs)
  - System.Windows.ContentElement.OnQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)
  - System.Windows.ContentElement.OnQueryCursor(System.Windows.Input.QueryCursorEventArgs)
  - System.Windows.ContentElement.OnStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)
  - System.Windows.ContentElement.OnStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)
  - System.Windows.ContentElement.OnStylusDown(System.Windows.Input.StylusDownEventArgs)
  - System.Windows.ContentElement.OnStylusEnter(System.Windows.Input.StylusEventArgs)
  - System.Windows.ContentElement.OnStylusInAirMove(System.Windows.Input.StylusEventArgs)
  - System.Windows.ContentElement.OnStylusInRange(System.Windows.Input.StylusEventArgs)
  - System.Windows.ContentElement.OnStylusLeave(System.Windows.Input.StylusEventArgs)
  - System.Windows.ContentElement.OnStylusMove(System.Windows.Input.StylusEventArgs)
  - System.Windows.ContentElement.OnStylusOutOfRange(System.Windows.Input.StylusEventArgs)
  - System.Windows.ContentElement.OnStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)
  - System.Windows.ContentElement.OnStylusUp(System.Windows.Input.StylusEventArgs)
  - System.Windows.ContentElement.OnTextInput(System.Windows.Input.TextCompositionEventArgs)
  - System.Windows.ContentElement.OnTouchDown(System.Windows.Input.TouchEventArgs)
  - System.Windows.ContentElement.OnTouchEnter(System.Windows.Input.TouchEventArgs)
  - System.Windows.ContentElement.OnTouchLeave(System.Windows.Input.TouchEventArgs)
  - System.Windows.ContentElement.OnTouchMove(System.Windows.Input.TouchEventArgs)
  - System.Windows.ContentElement.OnTouchUp(System.Windows.Input.TouchEventArgs)
  - System.Windows.ContentElement.PreviewDragEnter
  - System.Windows.ContentElement.PreviewDragEnterEvent
  - System.Windows.ContentElement.PreviewDragLeave
  - System.Windows.ContentElement.PreviewDragLeaveEvent
  - System.Windows.ContentElement.PreviewDragOver
  - System.Windows.ContentElement.PreviewDragOverEvent
  - System.Windows.ContentElement.PreviewDrop
  - System.Windows.ContentElement.PreviewDropEvent
  - System.Windows.ContentElement.PreviewGiveFeedback
  - System.Windows.ContentElement.PreviewGiveFeedbackEvent
  - System.Windows.ContentElement.PreviewGotKeyboardFocus
  - System.Windows.ContentElement.PreviewGotKeyboardFocusEvent
  - System.Windows.ContentElement.PreviewKeyDown
  - System.Windows.ContentElement.PreviewKeyDownEvent
  - System.Windows.ContentElement.PreviewKeyUp
  - System.Windows.ContentElement.PreviewKeyUpEvent
  - System.Windows.ContentElement.PreviewLostKeyboardFocus
  - System.Windows.ContentElement.PreviewLostKeyboardFocusEvent
  - System.Windows.ContentElement.PreviewMouseDown
  - System.Windows.ContentElement.PreviewMouseDownEvent
  - System.Windows.ContentElement.PreviewMouseLeftButtonDown
  - System.Windows.ContentElement.PreviewMouseLeftButtonDownEvent
  - System.Windows.ContentElement.PreviewMouseLeftButtonUp
  - System.Windows.ContentElement.PreviewMouseLeftButtonUpEvent
  - System.Windows.ContentElement.PreviewMouseMove
  - System.Windows.ContentElement.PreviewMouseMoveEvent
  - System.Windows.ContentElement.PreviewMouseRightButtonDown
  - System.Windows.ContentElement.PreviewMouseRightButtonDownEvent
  - System.Windows.ContentElement.PreviewMouseRightButtonUp
  - System.Windows.ContentElement.PreviewMouseRightButtonUpEvent
  - System.Windows.ContentElement.PreviewMouseUp
  - System.Windows.ContentElement.PreviewMouseUpEvent
  - System.Windows.ContentElement.PreviewMouseWheel
  - System.Windows.ContentElement.PreviewMouseWheelEvent
  - System.Windows.ContentElement.PreviewQueryContinueDrag
  - System.Windows.ContentElement.PreviewQueryContinueDragEvent
  - System.Windows.ContentElement.PreviewStylusButtonDown
  - System.Windows.ContentElement.PreviewStylusButtonDownEvent
  - System.Windows.ContentElement.PreviewStylusButtonUp
  - System.Windows.ContentElement.PreviewStylusButtonUpEvent
  - System.Windows.ContentElement.PreviewStylusDown
  - System.Windows.ContentElement.PreviewStylusDownEvent
  - System.Windows.ContentElement.PreviewStylusInAirMove
  - System.Windows.ContentElement.PreviewStylusInAirMoveEvent
  - System.Windows.ContentElement.PreviewStylusInRange
  - System.Windows.ContentElement.PreviewStylusInRangeEvent
  - System.Windows.ContentElement.PreviewStylusMove
  - System.Windows.ContentElement.PreviewStylusMoveEvent
  - System.Windows.ContentElement.PreviewStylusOutOfRange
  - System.Windows.ContentElement.PreviewStylusOutOfRangeEvent
  - System.Windows.ContentElement.PreviewStylusSystemGesture
  - System.Windows.ContentElement.PreviewStylusSystemGestureEvent
  - System.Windows.ContentElement.PreviewStylusUp
  - System.Windows.ContentElement.PreviewStylusUpEvent
  - System.Windows.ContentElement.PreviewTextInput
  - System.Windows.ContentElement.PreviewTextInputEvent
  - System.Windows.ContentElement.PreviewTouchDown
  - System.Windows.ContentElement.PreviewTouchDownEvent
  - System.Windows.ContentElement.PreviewTouchMove
  - System.Windows.ContentElement.PreviewTouchMoveEvent
  - System.Windows.ContentElement.PreviewTouchUp
  - System.Windows.ContentElement.PreviewTouchUpEvent
  - System.Windows.ContentElement.QueryContinueDrag
  - System.Windows.ContentElement.QueryContinueDragEvent
  - System.Windows.ContentElement.QueryCursor
  - System.Windows.ContentElement.QueryCursorEvent
  - System.Windows.ContentElement.RaiseEvent(System.Windows.RoutedEventArgs)
  - System.Windows.ContentElement.ReleaseAllTouchCaptures
  - System.Windows.ContentElement.ReleaseMouseCapture
  - System.Windows.ContentElement.ReleaseStylusCapture
  - System.Windows.ContentElement.ReleaseTouchCapture(System.Windows.Input.TouchDevice)
  - System.Windows.ContentElement.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)
  - System.Windows.ContentElement.ShouldSerializeCommandBindings
  - System.Windows.ContentElement.ShouldSerializeInputBindings
  - System.Windows.ContentElement.StylusButtonDown
  - System.Windows.ContentElement.StylusButtonDownEvent
  - System.Windows.ContentElement.StylusButtonUp
  - System.Windows.ContentElement.StylusButtonUpEvent
  - System.Windows.ContentElement.StylusDown
  - System.Windows.ContentElement.StylusDownEvent
  - System.Windows.ContentElement.StylusEnter
  - System.Windows.ContentElement.StylusEnterEvent
  - System.Windows.ContentElement.StylusInAirMove
  - System.Windows.ContentElement.StylusInAirMoveEvent
  - System.Windows.ContentElement.StylusInRange
  - System.Windows.ContentElement.StylusInRangeEvent
  - System.Windows.ContentElement.StylusLeave
  - System.Windows.ContentElement.StylusLeaveEvent
  - System.Windows.ContentElement.StylusMove
  - System.Windows.ContentElement.StylusMoveEvent
  - System.Windows.ContentElement.StylusOutOfRange
  - System.Windows.ContentElement.StylusOutOfRangeEvent
  - System.Windows.ContentElement.StylusSystemGesture
  - System.Windows.ContentElement.StylusSystemGestureEvent
  - System.Windows.ContentElement.StylusUp
  - System.Windows.ContentElement.StylusUpEvent
  - System.Windows.ContentElement.TextInput
  - System.Windows.ContentElement.TextInputEvent
  - System.Windows.ContentElement.TouchDown
  - System.Windows.ContentElement.TouchDownEvent
  - System.Windows.ContentElement.TouchEnter
  - System.Windows.ContentElement.TouchEnterEvent
  - System.Windows.ContentElement.TouchesCaptured
  - System.Windows.ContentElement.TouchesCapturedWithin
  - System.Windows.ContentElement.TouchesDirectlyOver
  - System.Windows.ContentElement.TouchesOver
  - System.Windows.ContentElement.TouchLeave
  - System.Windows.ContentElement.TouchLeaveEvent
  - System.Windows.ContentElement.TouchMove
  - System.Windows.ContentElement.TouchMoveEvent
  - System.Windows.ContentElement.TouchUp
  - System.Windows.ContentElement.TouchUpEvent
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.FrameworkContentElement.AddLogicalChild(System.Object)
  - System.Windows.FrameworkContentElement.BeginInit
  - System.Windows.FrameworkContentElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard)
  - System.Windows.FrameworkContentElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.FrameworkContentElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)
  - System.Windows.FrameworkContentElement.BindingGroup
  - System.Windows.FrameworkContentElement.BindingGroupProperty
  - System.Windows.FrameworkContentElement.BringIntoView
  - System.Windows.FrameworkContentElement.ContextMenu
  - System.Windows.FrameworkContentElement.ContextMenuClosing
  - System.Windows.FrameworkContentElement.ContextMenuClosingEvent
  - System.Windows.FrameworkContentElement.ContextMenuOpening
  - System.Windows.FrameworkContentElement.ContextMenuOpeningEvent
  - System.Windows.FrameworkContentElement.ContextMenuProperty
  - System.Windows.FrameworkContentElement.Cursor
  - System.Windows.FrameworkContentElement.CursorProperty
  - System.Windows.FrameworkContentElement.DataContext
  - System.Windows.FrameworkContentElement.DataContextChanged
  - System.Windows.FrameworkContentElement.DataContextProperty
  - System.Windows.FrameworkContentElement.DefaultStyleKey
  - System.Windows.FrameworkContentElement.DefaultStyleKeyProperty
  - System.Windows.FrameworkContentElement.EndInit
  - System.Windows.FrameworkContentElement.FindName(System.String)
  - System.Windows.FrameworkContentElement.FindResource(System.Object)
  - System.Windows.FrameworkContentElement.FocusVisualStyle
  - System.Windows.FrameworkContentElement.FocusVisualStyleProperty
  - System.Windows.FrameworkContentElement.ForceCursor
  - System.Windows.FrameworkContentElement.ForceCursorProperty
  - System.Windows.FrameworkContentElement.GetBindingExpression(System.Windows.DependencyProperty)
  - System.Windows.FrameworkContentElement.GetUIParentCore
  - System.Windows.FrameworkContentElement.Initialized
  - System.Windows.FrameworkContentElement.InputScope
  - System.Windows.FrameworkContentElement.InputScopeProperty
  - System.Windows.FrameworkContentElement.IsInitialized
  - System.Windows.FrameworkContentElement.IsLoaded
  - System.Windows.FrameworkContentElement.Language
  - System.Windows.FrameworkContentElement.LanguageProperty
  - System.Windows.FrameworkContentElement.Loaded
  - System.Windows.FrameworkContentElement.LoadedEvent
  - System.Windows.FrameworkContentElement.MoveFocus(System.Windows.Input.TraversalRequest)
  - System.Windows.FrameworkContentElement.Name
  - System.Windows.FrameworkContentElement.NameProperty
  - System.Windows.FrameworkContentElement.OnContextMenuClosing(System.Windows.Controls.ContextMenuEventArgs)
  - System.Windows.FrameworkContentElement.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)
  - System.Windows.FrameworkContentElement.OnGotFocus(System.Windows.RoutedEventArgs)
  - System.Windows.FrameworkContentElement.OnInitialized(System.EventArgs)
  - System.Windows.FrameworkContentElement.OnStyleChanged(System.Windows.Style,System.Windows.Style)
  - System.Windows.FrameworkContentElement.OnToolTipClosing(System.Windows.Controls.ToolTipEventArgs)
  - System.Windows.FrameworkContentElement.OnToolTipOpening(System.Windows.Controls.ToolTipEventArgs)
  - System.Windows.FrameworkContentElement.OverridesDefaultStyle
  - System.Windows.FrameworkContentElement.OverridesDefaultStyleProperty
  - System.Windows.FrameworkContentElement.Parent
  - System.Windows.FrameworkContentElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)
  - System.Windows.FrameworkContentElement.RegisterName(System.String,System.Object)
  - System.Windows.FrameworkContentElement.RemoveLogicalChild(System.Object)
  - System.Windows.FrameworkContentElement.Resources
  - System.Windows.FrameworkContentElement.SetBinding(System.Windows.DependencyProperty,System.String)
  - System.Windows.FrameworkContentElement.SetBinding(System.Windows.DependencyProperty,System.Windows.Data.BindingBase)
  - System.Windows.FrameworkContentElement.SetResourceReference(System.Windows.DependencyProperty,System.Object)
  - System.Windows.FrameworkContentElement.ShouldSerializeResources
  - System.Windows.FrameworkContentElement.ShouldSerializeStyle
  - System.Windows.FrameworkContentElement.SourceUpdated
  - System.Windows.FrameworkContentElement.Style
  - System.Windows.FrameworkContentElement.StyleProperty
  - System.Windows.FrameworkContentElement.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable(System.String)
  - System.Windows.FrameworkContentElement.Tag
  - System.Windows.FrameworkContentElement.TagProperty
  - System.Windows.FrameworkContentElement.TargetUpdated
  - System.Windows.FrameworkContentElement.TemplatedParent
  - System.Windows.FrameworkContentElement.ToolTip
  - System.Windows.FrameworkContentElement.ToolTipClosing
  - System.Windows.FrameworkContentElement.ToolTipClosingEvent
  - System.Windows.FrameworkContentElement.ToolTipOpening
  - System.Windows.FrameworkContentElement.ToolTipOpeningEvent
  - System.Windows.FrameworkContentElement.ToolTipProperty
  - System.Windows.FrameworkContentElement.TryFindResource(System.Object)
  - System.Windows.FrameworkContentElement.Unloaded
  - System.Windows.FrameworkContentElement.UnloadedEvent
  - System.Windows.FrameworkContentElement.UnregisterName(System.String)
  - System.Windows.FrameworkContentElement.UpdateDefaultStyle
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Documents.FlowDocument.#ctor
  id: '#ctor'
  parent: System.Windows.Documents.FlowDocument
  langs:
  - csharp
  name: FlowDocument()
  nameWithType: FlowDocument.FlowDocument()
  fullName: System.Windows.Documents.FlowDocument.FlowDocument()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "새로 만든 빈 인스턴스를 초기화는 <xref href=&quot;System.Windows.Documents.FlowDocument&quot;> </xref> 클래스입니다."
  syntax:
    content: public FlowDocument ();
    parameters: []
  overload: System.Windows.Documents.FlowDocument.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.FlowDocument.#ctor(System.Windows.Documents.Block)
  id: '#ctor(System.Windows.Documents.Block)'
  parent: System.Windows.Documents.FlowDocument
  langs:
  - csharp
  name: FlowDocument(Block)
  nameWithType: FlowDocument.FlowDocument(Block)
  fullName: System.Windows.Documents.FlowDocument.FlowDocument(Block)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Windows.Documents.FlowDocument&quot;> </xref> 클래스, 지정 된 추가 <xref href=&quot;System.Windows.Documents.Block&quot;> </xref> 초기 콘텐츠로 요소입니다."
  remarks: "유효한 입력 형식에 `block` 포함 <xref:System.Windows.Documents.BlockUIContainer>, <xref:System.Windows.Documents.List>, <xref:System.Windows.Documents.Paragraph>, <xref:System.Windows.Documents.Section>, 및 <xref:System.Windows.Documents.Table>.</xref:System.Windows.Documents.Table> </xref:System.Windows.Documents.Section> </xref:System.Windows.Documents.Paragraph> </xref:System.Windows.Documents.List> </xref:System.Windows.Documents.BlockUIContainer>"
  example:
  - "The following example demonstrates the use of this constructor.  In this case, the <xref:System.Windows.Documents.FlowDocument> contains a flow element block structure consisting of a text run nested in a paragraph.  \n  \n [!code-cs[FlowDocumentSnippets#_FlowDocumentConstructorSimple](~/add/codesnippet/csharp/FlowDocumentSnippets/Window1.xaml.cs#_flowdocumentconstructorsimple)]\n [!code-vb[FlowDocumentSnippets#_FlowDocumentConstructorSimple](~/add/codesnippet/visualbasic/flowdocumentsnippets/window1.xaml.vb#_flowdocumentconstructorsimple)]  \n  \n The following example programmatically constructs a simple 2 x 2 table and then uses the <xref:System.Windows.Documents.FlowDocument> constructor to create a new <xref:System.Windows.Documents.FlowDocument> containing the table.  Though a somewhat more complicated flow element block structure is used, use of the constructor is the same as in the preceding example.  \n  \n [!code-cs[FlowDocumentSnippets#_FlowDocumentConstructorTable](~/add/codesnippet/csharp/FlowDocumentSnippets/Window1.xaml.cs#_flowdocumentconstructortable)]\n [!code-vb[FlowDocumentSnippets#_FlowDocumentConstructorTable](~/add/codesnippet/visualbasic/flowdocumentsnippets/window1.xaml.vb#_flowdocumentconstructortable)]"
  syntax:
    content: public FlowDocument (System.Windows.Documents.Block block);
    parameters:
    - id: block
      type: System.Windows.Documents.Block
      description: "Abstract에서 파생 된 개체 <xref href=&quot;System.Windows.Documents.Block&quot;> </xref> 로 초기 내용을 추가할 클래스입니다."
  overload: System.Windows.Documents.FlowDocument.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>block</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Documents.FlowDocument.Background
  id: Background
  parent: System.Windows.Documents.FlowDocument
  langs:
  - csharp
  name: Background
  nameWithType: FlowDocument.Background
  fullName: System.Windows.Documents.FlowDocument.Background
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "가져오거나는 <xref href=&quot;System.Windows.Media.Brush&quot;> </xref> 콘텐츠 영역의 배경을 채우는 데 사용 합니다."
  remarks: "사용 가능한 미리 정의 된 브러시 색 견본 테이블, <xref:System.Windows.Media.Brushes>.</xref:System.Windows.Media.Brushes> 을 참조 하십시오.      <a name=&quot;dependencyPropertyInfo_Background&quot;></a># # 종속성 속성 정보 | | |   |-|-|   | 식별자 필드 | <xref:System.Windows.Documents.FlowDocument.BackgroundProperty>|   | 메타 데이터 속성이 `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>|</xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A> </xref:System.Windows.Documents.FlowDocument.BackgroundProperty>"
  example:
  - "The following example shows how to set the Background attribute of a <xref:System.Windows.Documents.FlowDocument> element.  \n  \n [!code-xml[FlowDocumentSnippets#_FlowDocumentBackgroundXAML](~/add/codesnippet/xaml/FlowDocumentSnippets/Window1.xaml#_flowdocumentbackgroundxaml)]  \n  \n The following example shows how to set the Background property programmatically.  \n  \n [!code-cs[FlowDocumentSnippets#_FlowDocumentBackground](~/add/codesnippet/csharp/FlowDocumentSnippets/Window1.xaml.cs#_flowdocumentbackground)]\n [!code-vb[FlowDocumentSnippets#_FlowDocumentBackground](~/add/codesnippet/visualbasic/flowdocumentsnippets/window1.xaml.vb#_flowdocumentbackground)]"
  syntax:
    content: public System.Windows.Media.Brush Background { get; set; }
    return:
      type: System.Windows.Media.Brush
      description: "콘텐츠 영역의 배경을 채우는 데 사용 되는 브러시 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 배경 브러시를 사용 하지 않도록 합니다. 기본값은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Documents.FlowDocument.Background*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.FlowDocument.BackgroundProperty
  id: BackgroundProperty
  parent: System.Windows.Documents.FlowDocument
  langs:
  - csharp
  name: BackgroundProperty
  nameWithType: FlowDocument.BackgroundProperty
  fullName: System.Windows.Documents.FlowDocument.BackgroundProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "식별 된 <xref:System.Windows.Documents.FlowDocument.Background*>종속성 속성입니다.</xref:System.Windows.Documents.FlowDocument.Background*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty BackgroundProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.FlowDocument.Blocks
  id: Blocks
  parent: System.Windows.Documents.FlowDocument
  langs:
  - csharp
  name: Blocks
  nameWithType: FlowDocument.Blocks
  fullName: System.Windows.Documents.FlowDocument.Blocks
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "최상위 가져옵니다 <xref href=&quot;System.Windows.Documents.Block&quot;> </xref> 의 콘텐츠는 요소는 <xref href=&quot;System.Windows.Documents.FlowDocument&quot;> </xref>합니다."
  remarks: "<xref:System.Windows.Documents.BlockCollection>이 속성을 열거 하거나 <xref:System.Windows.Documents.FlowDocument>.</xref:System.Windows.Documents.FlowDocument> 의 내용을 조작에서 반환 된</xref:System.Windows.Documents.BlockCollection> 사용       <xref:System.Windows.Documents.FlowDocument> <xref:System.Windows.Documents.Block>.</xref:System.Windows.Documents.Block> 에서 파생 되어야</xref:System.Windows.Documents.FlowDocument> 하는에 포함 된 최상위 자식 요소  유효한 최상위 자식 요소는 다음과 같습니다:- <xref:System.Windows.Documents.BlockUIContainer>- <xref:System.Windows.Documents.List>- <xref:System.Windows.Documents.Paragraph>- <xref:System.Windows.Documents.Section>- <xref:System.Windows.Documents.Table></xref:System.Windows.Documents.Table> </xref:System.Windows.Documents.Section> </xref:System.Windows.Documents.Paragraph> </xref:System.Windows.Documents.List> </xref:System.Windows.Documents.BlockUIContainer>"
  syntax:
    content: public System.Windows.Documents.BlockCollection Blocks { get; }
    return:
      type: System.Windows.Documents.BlockCollection
      description: "A <xref href=&quot;System.Windows.Documents.BlockCollection&quot;> </xref> 포함 하는 <xref href=&quot;System.Windows.Documents.Block&quot;> </xref> 의 내용을 구성 하는 요소는 <xref href=&quot;System.Windows.Documents.FlowDocument&quot;> </xref>합니다."
  overload: System.Windows.Documents.FlowDocument.Blocks*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.FlowDocument.ColumnGap
  id: ColumnGap
  parent: System.Windows.Documents.FlowDocument
  langs:
  - csharp
  name: ColumnGap
  nameWithType: FlowDocument.ColumnGap
  fullName: System.Windows.Documents.FlowDocument.ColumnGap
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "열 사이의 간격을 나타내는 열 간격 값을 가져오거나 설정 합니다.는 <xref href=&quot;System.Windows.Documents.FlowDocument&quot;> </xref>합니다."
  remarks: "이 속성을 가져오면 현재 열 간격을 반환 합니다.  이 값으로 설정 현재 유효 열 간격이 바뀌고 흐름이 콘텐츠 않을 수 있습니다.       현재 <xref:System.Windows.Documents.FlowDocument.PageWidth%2A>모든 <xref:System.Windows.Documents.FlowDocument.PagePadding%2A>.</xref:System.Windows.Documents.FlowDocument.PagePadding%2A> 뺀</xref:System.Windows.Documents.FlowDocument.PageWidth%2A> 열 간격을 초과할 수 없습니다.  ColumnGap 속성의 값이 한이도 초과 하면이 제한을 준수 하도록 유효 열 간격이 줄어듭니다.       경우에이 속성이 적용 되지 않습니다 <xref:System.Windows.Documents.FlowDocument.ColumnWidth%2A>은 `null`.</xref:System.Windows.Documents.FlowDocument.ColumnWidth%2A>      <a name=&quot;xamlAttributeUsage_ColumnGap&quot;></a># # XAML 특성 사용 ```   <object ColumnGap=&quot;double&quot;/>   - or -   <object ColumnGap=&quot;qualifiedDouble&quot;/>   - or -   <object ColumnGap=&quot;Auto&quot;/>   ``` <a name=&quot;xamlValues_ColumnGap&quot;> </a> # # XAML 값 *double* <xref:System.Double> <xref:System.Double>같고 <xref:System.Double.PositiveInfinity?displayProperty=fullName>.</xref:System.Double.PositiveInfinity?displayProperty=fullName> 0.0 보다 크거나 같은 값</xref:System.Double> 의 문자열 표현</xref:System.Double>           정규화 되지 않은 값은 장치 독립적 픽셀 단위로 지정 합니다. 문자열은 소수점이 하를 명시적으로 포함 하지 않아야 합니다.       *도* A *double* 위에서 설명한 것 처럼 값 (인 경우는 제외 `Auto`) 단위 지정자 중 하나에 이어집니다: `px`, `in`, `cm`, `pt`합니다.       `px`(기본값)은 [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)] `in` 인치; 1in 96px = = `cm` 센티미터; 1cm==(96/2.54) px `pt` 은 포인트; 1pt==(96/72) px 자동 하면 효과적인의 현재 값으로 설정할 열 간격은 <xref:System.Windows.Documents.FlowDocument.LineHeight%2A>속성.</xref:System.Windows.Documents.FlowDocument.LineHeight%2A>         <xref:System.Double.NaN>안내 하십시오.</xref:System.Double.NaN> 속성 값에 해당      <a name=&quot;dependencyPropertyInfo_ColumnGap&quot;></a># # 종속성 속성 정보 | | |   |-|-|   | 식별자 필드 | <xref:System.Windows.Documents.FlowDocument.ColumnGapProperty>|   | 메타 데이터 속성이 `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>|</xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A> </xref:System.Windows.Documents.FlowDocument.ColumnGapProperty>"
  example:
  - "The following example shows how to set the ColumnGap property programmatically.  \n  \n [!code-cs[FlowDocumentSnippets#_FlowDocumentColumnGap](~/add/codesnippet/csharp/FlowDocumentSnippets/Window1.xaml.cs#_flowdocumentcolumngap)]\n [!code-vb[FlowDocumentSnippets#_FlowDocumentColumnGap](~/add/codesnippet/visualbasic/flowdocumentsnippets/window1.xaml.vb#_flowdocumentcolumngap)]"
  syntax:
    content: public double ColumnGap { get; set; }
    return:
      type: System.Double
      description: "열 간격 (장치 독립적 픽셀)에서입니다.  값이 &lt;xref:System.Double?displayProperty=fullName&gt; (의 특성 값에 해당 &quot;`Auto`&quot;)은 열 간격이 같음 임을 나타냅니다는 <xref:System.Windows.Documents.FlowDocument.LineHeight*>속성.</xref:System.Windows.Documents.FlowDocument.LineHeight*> 기본값은 &lt;xref:System.Double.NaN?displayProperty=fullName&gt;합니다."
  overload: System.Windows.Documents.FlowDocument.ColumnGap*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.FlowDocument.ColumnGapProperty
  id: ColumnGapProperty
  parent: System.Windows.Documents.FlowDocument
  langs:
  - csharp
  name: ColumnGapProperty
  nameWithType: FlowDocument.ColumnGapProperty
  fullName: System.Windows.Documents.FlowDocument.ColumnGapProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "식별 된 <xref:System.Windows.Documents.FlowDocument.ColumnGap*>종속성 속성입니다.</xref:System.Windows.Documents.FlowDocument.ColumnGap*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty ColumnGapProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.FlowDocument.ColumnRuleBrush
  id: ColumnRuleBrush
  parent: System.Windows.Documents.FlowDocument
  langs:
  - csharp
  name: ColumnRuleBrush
  nameWithType: FlowDocument.ColumnRuleBrush
  fullName: System.Windows.Documents.FlowDocument.ColumnRuleBrush
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "가져오거나는 <xref href=&quot;System.Windows.Media.Brush&quot;> </xref> 열 사이 규칙을 그리는 데 사용 합니다."
  remarks: "열 규칙은 열 사이 그려집니다 줄 콘텐츠의 열을 구분 하는 데 사용 됩니다.       사용 가능한 미리 정의 된 브러시 색 견본 테이블, <xref:System.Windows.Media.Brushes>.</xref:System.Windows.Media.Brushes> 을 참조 하십시오.       경우에이 속성이 적용 되지 않습니다는 <xref:System.Windows.Documents.FlowDocument.ColumnRuleWidth%2A>속성은 0 또는 `null`.</xref:System.Windows.Documents.FlowDocument.ColumnRuleWidth%2A>       열 규칙 두 개 이상의 열이 없는 경우에 표시 됩니다.      <a name=&quot;dependencyPropertyInfo_ColumnRuleBrush&quot;></a># # 종속성 속성 정보 | | |   |-|-|   | 식별자 필드 | <xref:System.Windows.Documents.FlowDocument.ColumnRuleBrushProperty>|   | 메타 데이터 속성이 `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>|</xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A> </xref:System.Windows.Documents.FlowDocument.ColumnRuleBrushProperty>"
  example:
  - "The following example shows how to set the ColumnRuleBrush property programmatically.  \n  \n [!code-cs[FlowDocumentSnippets#_FlowDocumentColumnRule](~/add/codesnippet/csharp/FlowDocumentSnippets/Window1.xaml.cs#_flowdocumentcolumnrule)]\n [!code-vb[FlowDocumentSnippets#_FlowDocumentColumnRule](~/add/codesnippet/visualbasic/flowdocumentsnippets/window1.xaml.vb#_flowdocumentcolumnrule)]"
  syntax:
    content: public System.Windows.Media.Brush ColumnRuleBrush { get; set; }
    return:
      type: System.Windows.Media.Brush
      description: "A <xref href=&quot;System.Windows.Media.Brush&quot;> </xref> 열 간의 규칙 선을 그릴 때 사용할 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 배경 브러시를 사용 하지 않도록 합니다. 기본값은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Documents.FlowDocument.ColumnRuleBrush*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.FlowDocument.ColumnRuleBrushProperty
  id: ColumnRuleBrushProperty
  parent: System.Windows.Documents.FlowDocument
  langs:
  - csharp
  name: ColumnRuleBrushProperty
  nameWithType: FlowDocument.ColumnRuleBrushProperty
  fullName: System.Windows.Documents.FlowDocument.ColumnRuleBrushProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "식별 된 <xref:System.Windows.Documents.FlowDocument.ColumnRuleBrush*>종속성 속성입니다.</xref:System.Windows.Documents.FlowDocument.ColumnRuleBrush*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty ColumnRuleBrushProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.FlowDocument.ColumnRuleWidth
  id: ColumnRuleWidth
  parent: System.Windows.Documents.FlowDocument
  langs:
  - csharp
  name: ColumnRuleWidth
  nameWithType: FlowDocument.ColumnRuleWidth
  fullName: System.Windows.Documents.FlowDocument.ColumnRuleWidth
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "열 규칙 너비를 가져오거나 설정 합니다."
  remarks: "열 규칙은 열 사이 그려집니다 줄 콘텐츠의 열을 구분 하는 데 사용 됩니다.       경우에이 속성이 적용 되지 않습니다는 <xref:System.Windows.Documents.FlowDocument.ColumnRuleBrush%2A>속성은 `null`.</xref:System.Windows.Documents.FlowDocument.ColumnRuleBrush%2A>       열 규칙 두 개 이상의 열이 없는 경우에 표시 됩니다.  열 규칙 너비 <xref:System.Windows.Documents.FlowDocument.ColumnGap%2A>.</xref:System.Windows.Documents.FlowDocument.ColumnGap%2A> 보다 작을 것으로 제한 됩니다.      <a name=&quot;xamlAttributeUsage_ColumnRuleWidth&quot;></a># # XAML 특성 사용 ```   <object ColumnRuleWidth=&quot;double&quot;/>   - or -   <object ColumnRuleWidth=&quot;qualifiedDouble&quot;/>   ``` <a name=&quot;xamlValues_ColumnRuleWidth&quot;> </a> # # XAML 값 *double* <xref:System.Double> <xref:System.Double>같고 <xref:System.Double.PositiveInfinity?displayProperty=fullName>.</xref:System.Double.PositiveInfinity?displayProperty=fullName> 0.0 보다 크거나 같은 값</xref:System.Double> 의 문자열 표현</xref:System.Double>           정규화 되지 않은 값은 장치 독립적 픽셀 단위로 지정 합니다. 문자열은 소수점이 하를 명시적으로 포함 하지 않아야 합니다.       *도* A *double* 단위 지정자 중 하나에 의해 다음 위에서 설명한 대로 값: `px`, `in`, `cm`, `pt`합니다.       `px`(기본값)은 [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)] `in` 인치; 1in 96px = = `cm` 센티미터; 1cm==(96/2.54) px `pt` 은 포인트; 1pt==(96/72) px <a name=&quot;dependencyPropertyInfo_ColumnRuleWidth&quot;> </a> # # 종속성 속성 정보 | | |   |-|-|   | 식별자 필드 | <xref:System.Windows.Documents.FlowDocument.ColumnRuleWidthProperty>|   | 메타 데이터 속성이 `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>|</xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A> </xref:System.Windows.Documents.FlowDocument.ColumnRuleWidthProperty>       "
  example:
  - "The following example shows how to set the ColumnRuleWidth property programmatically.  \n  \n [!code-cs[FlowDocumentSnippets#_FlowDocumentColumnRule](~/add/codesnippet/csharp/FlowDocumentSnippets/Window1.xaml.cs#_flowdocumentcolumnrule)]\n [!code-vb[FlowDocumentSnippets#_FlowDocumentColumnRule](~/add/codesnippet/visualbasic/flowdocumentsnippets/window1.xaml.vb#_flowdocumentcolumnrule)]"
  syntax:
    content: public double ColumnRuleWidth { get; set; }
    return:
      type: System.Double
      description: "열 규칙 너비 (장치 독립적 픽셀)에서입니다. 기본값은 0.0입니다."
  overload: System.Windows.Documents.FlowDocument.ColumnRuleWidth*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.FlowDocument.ColumnRuleWidthProperty
  id: ColumnRuleWidthProperty
  parent: System.Windows.Documents.FlowDocument
  langs:
  - csharp
  name: ColumnRuleWidthProperty
  nameWithType: FlowDocument.ColumnRuleWidthProperty
  fullName: System.Windows.Documents.FlowDocument.ColumnRuleWidthProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "식별 된 <xref:System.Windows.Documents.FlowDocument.ColumnRuleWidth*>종속성 속성입니다.</xref:System.Windows.Documents.FlowDocument.ColumnRuleWidth*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty ColumnRuleWidthProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.FlowDocument.ColumnWidth
  id: ColumnWidth
  parent: System.Windows.Documents.FlowDocument
  langs:
  - csharp
  name: ColumnWidth
  nameWithType: FlowDocument.ColumnWidth
  fullName: System.Windows.Documents.FlowDocument.ColumnWidth
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "에 있는 열의 원하는 최소 너비를 가져오거나 설정 합니다.는 <xref href=&quot;System.Windows.Documents.FlowDocument&quot;> </xref>합니다."
  remarks: "A <xref:System.Windows.Documents.FlowDocument>사용 가능한 표시 공간 내에서 콘텐츠 표시를 최대화 하기 위해 해당 내용을 동적으로 조정 합니다.</xref:System.Windows.Documents.FlowDocument>  표시 되는 열의 수는이 속성에 지정 된 최소 열 너비를 지정 하는 사용 가능한 표시 공간에 들어갈 수 있는 열 개수에 의해 결정 됩니다.  실제 열 너비는이 속성에 지정 된 값 보다 클 수 있습니다.       어느 방향으로든에서 창의 크기를 변경 효과적으로 사용 공간을 동적으로 다시 생성 하는 열에 발생 합니다. 이러한 방식으로 콘텐츠는 사용자의 환경에 동적으로 반응 합니다.      <a name=&quot;xamlAttributeUsage_ColumnWidth&quot;></a># # XAML 특성 사용 ```   <object ColumnWidth=&quot;double&quot;/>   - or -   <object ColumnWidth=&quot;qualifiedDouble&quot;/>   - or -   <object ColumnWidth=&quot;Auto&quot;/>   ``` <a name=&quot;xamlValues_ColumnWidth&quot;> </a> # # XAML 값 *double* <xref:System.Double> <xref:System.Double>같고 <xref:System.Double.PositiveInfinity?displayProperty=fullName>.</xref:System.Double.PositiveInfinity?displayProperty=fullName> 0.0 보다 크거나 같은 값</xref:System.Double> 의 문자열 표현</xref:System.Double>           정규화 되지 않은 값은 장치 독립적 픽셀 단위로 지정 합니다. 문자열은 소수점이 하를 명시적으로 포함 하지 않아야 합니다.       *도* A *double* 위에서 설명한 대로 값 (인 경우는 제외 `Auto`) 다음에 다음과 같은 단위 지정자 중 하나: `px`, `in`, `cm`, `pt`합니다.       `px`(기본값)은 [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)] `in` 인치; 1in 96px = = `cm` 센티미터; 1cm==(96/2.54) px `pt` 은 포인트; 1pt==(96/72) px 20 배 현재 <xref:System.Windows.Documents.FlowDocument.FontSize%2A>.</xref:System.Windows.Documents.FlowDocument.FontSize%2A> 되도록 자동으로 계산 열 너비 자동 하면             <a name=&quot;dependencyPropertyInfo_ColumnWidth&quot;></a># # 종속성 속성 정보 | | |   |-|-|   | 식별자 필드 | <xref:System.Windows.Documents.FlowDocument.ColumnWidthProperty>|   | 메타 데이터 속성이 `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>|</xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A> </xref:System.Windows.Documents.FlowDocument.ColumnWidthProperty>"
  example:
  - "The following example shows how to set the ColumnWidth attribute of a <xref:System.Windows.Documents.FlowDocument> element.  \n  \n [!code-xml[FlowDocumentSnippets#_FlowDocumentColumnWidthXAML](~/add/codesnippet/xaml/FlowDocumentSnippets/Window1.xaml#_flowdocumentcolumnwidthxaml)]  \n  \n The following example shows how to set the ColumnWidth property programmatically.  \n  \n [!code-cs[FlowDocumentSnippets#_FlowDocumentColumnWidth](~/add/codesnippet/csharp/FlowDocumentSnippets/Window1.xaml.cs#_flowdocumentcolumnwidth)]\n [!code-vb[FlowDocumentSnippets#_FlowDocumentColumnWidth](~/add/codesnippet/visualbasic/flowdocumentsnippets/window1.xaml.vb#_flowdocumentcolumnwidth)]"
  syntax:
    content: public double ColumnWidth { get; set; }
    return:
      type: System.Double
      description: "원하는 열 최소 너비 (장치 독립적 픽셀)에서입니다. 값이 &lt;xref:System.Double?displayProperty=fullName&gt; 하나의 열만 페이지 너비에 관계 없이 표시 됩니다.  기본값은 &lt;xref:System.Double?displayProperty=fullName&gt;합니다."
  overload: System.Windows.Documents.FlowDocument.ColumnWidth*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.FlowDocument.ColumnWidthProperty
  id: ColumnWidthProperty
  parent: System.Windows.Documents.FlowDocument
  langs:
  - csharp
  name: ColumnWidthProperty
  nameWithType: FlowDocument.ColumnWidthProperty
  fullName: System.Windows.Documents.FlowDocument.ColumnWidthProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "식별 된 <xref:System.Windows.Documents.FlowDocument.ColumnWidth*>종속성 속성입니다.</xref:System.Windows.Documents.FlowDocument.ColumnWidth*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty ColumnWidthProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.FlowDocument.ContentEnd
  id: ContentEnd
  parent: System.Windows.Documents.FlowDocument
  langs:
  - csharp
  name: ContentEnd
  nameWithType: FlowDocument.ContentEnd
  fullName: System.Windows.Documents.FlowDocument.ContentEnd
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "가져옵니다는 <xref href=&quot;System.Windows.Documents.TextPointer&quot;> </xref> 끝에 있는 콘텐츠의 나타내는 <xref href=&quot;System.Windows.Documents.FlowDocument&quot;> </xref>합니다."
  remarks: "ContentEnd 속성은 콘텐츠 <xref:System.Windows.Documents.FlowDocument>.</xref:System.Windows.Documents.FlowDocument> 의 끝에 추가 하는 데 자주 사용       <xref:System.Windows.Documents.TextPointer>이 속성에서 반환 항상 속성이 해당 <xref:System.Windows.Documents.TextPointer.LogicalDirection%2A>를 <xref:System.Windows.Documents.LogicalDirection?displayProperty=fullName>.</xref:System.Windows.Documents.LogicalDirection?displayProperty=fullName> </xref:System.Windows.Documents.TextPointer.LogicalDirection%2A> </xref:System.Windows.Documents.TextPointer>"
  example:
  - "The following example uses the ContentEnd property to append content to a <xref:System.Windows.Documents.FlowDocument>.  \n  \n [!code-cs[FlowDocumentSnippets#_FlowDocumentContentEnd](~/add/codesnippet/csharp/FlowDocumentSnippets/Window1.xaml.cs#_flowdocumentcontentend)]\n [!code-vb[FlowDocumentSnippets#_FlowDocumentContentEnd](~/add/codesnippet/visualbasic/flowdocumentsnippets/window1.xaml.vb#_flowdocumentcontentend)]"
  syntax:
    content: public System.Windows.Documents.TextPointer ContentEnd { get; }
    return:
      type: System.Windows.Documents.TextPointer
      description: "A <xref href=&quot;System.Windows.Documents.TextPointer&quot;> </xref> 에 있는 콘텐츠 끝을 나타내는 <xref href=&quot;System.Windows.Documents.FlowDocument&quot;> </xref>합니다."
  overload: System.Windows.Documents.FlowDocument.ContentEnd*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.FlowDocument.ContentStart
  id: ContentStart
  parent: System.Windows.Documents.FlowDocument
  langs:
  - csharp
  name: ContentStart
  nameWithType: FlowDocument.ContentStart
  fullName: System.Windows.Documents.FlowDocument.ContentStart
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "가져옵니다는 <xref href=&quot;System.Windows.Documents.TextPointer&quot;> </xref> 콘텐츠 내에서 시작을 나타내는 한 <xref href=&quot;System.Windows.Documents.FlowDocument&quot;> </xref>합니다."
  remarks: "ContentStart 속성에 <xref:System.Windows.Documents.FlowDocument>.</xref:System.Windows.Documents.FlowDocument> 의 시작 부분에 콘텐츠를 삽입 하는 대개       <xref:System.Windows.Documents.TextPointer>이 속성에서 반환 항상 속성이 해당 <xref:System.Windows.Documents.TextPointer.LogicalDirection%2A>를 <xref:System.Windows.Documents.LogicalDirection?displayProperty=fullName>.</xref:System.Windows.Documents.LogicalDirection?displayProperty=fullName> </xref:System.Windows.Documents.TextPointer.LogicalDirection%2A> </xref:System.Windows.Documents.TextPointer>"
  example:
  - "The following example uses the ContentStart property to insert content at the beginning of a <xref:System.Windows.Documents.FlowDocument>.  \n  \n [!code-cs[FlowDocumentSnippets#_FlowDocumentContentStart](~/add/codesnippet/csharp/FlowDocumentSnippets/Window1.xaml.cs#_flowdocumentcontentstart)]\n [!code-vb[FlowDocumentSnippets#_FlowDocumentContentStart](~/add/codesnippet/visualbasic/flowdocumentsnippets/window1.xaml.vb#_flowdocumentcontentstart)]"
  syntax:
    content: public System.Windows.Documents.TextPointer ContentStart { get; }
    return:
      type: System.Windows.Documents.TextPointer
      description: "A <xref href=&quot;System.Windows.Documents.TextPointerContext&quot;> </xref> 에 있는 내용의 시작을 나타내는 <xref href=&quot;System.Windows.Documents.FlowDocument&quot;> </xref>합니다."
  overload: System.Windows.Documents.FlowDocument.ContentStart*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.FlowDocument.FlowDirection
  id: FlowDirection
  parent: System.Windows.Documents.FlowDocument
  langs:
  - csharp
  name: FlowDirection
  nameWithType: FlowDocument.FlowDirection
  fullName: System.Windows.Documents.FlowDocument.FlowDirection
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "콘텐츠 흐름에 대 한 상대 방향을 가져오거나 설정 합니다.는 <xref href=&quot;System.Windows.Documents.FlowDocument&quot;> </xref>합니다."
  remarks: "이 속성을 가져오면 현재 유효한 흐름 방향을 반환 됩니다.  이 속성을 설정 하면 내용의 <xref:System.Windows.Documents.FlowDocument>표시 된 방향에서 흐름이.</xref:System.Windows.Documents.FlowDocument>       콘텐츠의 FlowDirection는 일반적으로 표시 되는 언어의 고유 흐름 방향을에 해당 합니다.  히브리어 및 아랍어는 오른쪽에서 왼쪽으로 자연스럽 게 진행 되는 언어에 속합니다.  영어, 독일어 및 러시아어는 원래 오른쪽에서 왼쪽으로 진행 되는 언어의 예입니다.      > [!NOTE] > 값이이 속성의 운영 체제에서 사용 되는 언어와 일치 하도록 자동으로 바뀌지 않습니다. 기본값은 다른 값을 사용 해야 할 경우 <xref:System.Windows.FlowDirection>, 사용자가 직접 지정 해야 합니다.</xref:System.Windows.FlowDirection>      <a name=&quot;dependencyPropertyInfo_FlowDirection&quot;></a># # 종속성 속성 정보 | | |   |-|-|   | 식별자 필드 | <xref:System.Windows.Documents.FlowDocument.FlowDirectionProperty>|   | 메타 데이터 속성이 `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsParentArrange%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|</xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A> </xref:System.Windows.FrameworkPropertyMetadata.AffectsParentArrange%2A> </xref:System.Windows.Documents.FlowDocument.FlowDirectionProperty>"
  example:
  - "The following example shows how to set the FlowDirection attribute of a <xref:System.Windows.Documents.FlowDocument> element.  \n  \n [!code-xml[FlowDocumentSnippets#_FlowDocumentFlowDirectionXAML](~/add/codesnippet/xaml/FlowDocumentSnippets/Window1.xaml#_flowdocumentflowdirectionxaml)]  \n  \n The following example shows how to set the FlowDirection property programmatically.  \n  \n [!code-cs[FlowDocumentSnippets#_FlowDocumentFlowDirection](~/add/codesnippet/csharp/FlowDocumentSnippets/Window1.xaml.cs#_flowdocumentflowdirection)]\n [!code-vb[FlowDocumentSnippets#_FlowDocumentFlowDirection](~/add/codesnippet/visualbasic/flowdocumentsnippets/window1.xaml.vb#_flowdocumentflowdirection)]"
  syntax:
    content: public System.Windows.FlowDirection FlowDirection { get; set; }
    return:
      type: System.Windows.FlowDirection
      description: "중 하나는 <xref href=&quot;System.Windows.FlowDirection&quot;> </xref> 상대적인 흐름 방향을 지정 하는 값입니다. 기본값은 <xref href=&quot;System.Windows.FlowDirection&quot;> </xref>합니다."
  overload: System.Windows.Documents.FlowDocument.FlowDirection*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.FlowDocument.FlowDirectionProperty
  id: FlowDirectionProperty
  parent: System.Windows.Documents.FlowDocument
  langs:
  - csharp
  name: FlowDirectionProperty
  nameWithType: FlowDocument.FlowDirectionProperty
  fullName: System.Windows.Documents.FlowDocument.FlowDirectionProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "식별 된 <xref:System.Windows.Documents.FlowDocument.FlowDirection*>종속성 속성입니다.</xref:System.Windows.Documents.FlowDocument.FlowDirection*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty FlowDirectionProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.FlowDocument.FontFamily
  id: FontFamily
  parent: System.Windows.Documents.FlowDocument
  langs:
  - csharp
  name: FontFamily
  nameWithType: FlowDocument.FontFamily
  fullName: System.Windows.Documents.FlowDocument.FontFamily
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "에 대 한 기본 최상위 글꼴 패밀리를 가져오거나 설정 합니다.는 <xref href=&quot;System.Windows.Documents.FlowDocument&quot;> </xref>합니다."
  remarks: "Any FontFamily settings on child elements will override this top-level setting.  \n  \n When multiple families are specified, the second and subsequent font families serve as fallback families to be used in cases where the primary font family is unavailable or not applicable.  \n  \n This property specifies a preference only.  If the specified font family is not available, the <xref:System.Windows.Documents.FlowDocument> will silently fall back to the font determined by the <xref:System.Windows.SystemFonts.MessageFontFamily%2A?displayProperty=fullName> value.  \n  \n<a name=\"xamlAttributeUsage_FontFamily\"></a>   \n## XAML Attribute Usage  \n  \n```  \n<object FontFamily=\"fontFamilyName\"/>  \n- or -  \n<object FontFamily=\"fontFamilyNamesList\"/>  \n- or -  \n<object FontFamily=\"fontFamilyFolderReference\"/>  \n- or -  \n<object FontFamily=\"fontFamilyUriReference\"/>  \n```  \n  \n<a name=\"xamlValues_FontFamily\"></a>   \n## XAML Values  \n *fontFamilyName*  \n A string specifying a font family name.  For example, `\"Arial\"` or `\"Century Gothic\"`.  \n  \n *fontFamilyNamesList*  \n A string specifying multiple font family names, each separated by a comma (any whitespace following a comma is ignored).  The first font family specified serves as the primary font family; subsequent font families serve as fallback families to be used in cases where the primary font family is unavailable or not applicable.  For example, `\"Arial, Century Gothic\"` specifies Arial as the primary font family, with Century Gothic as the fallback font family.  \n  \n *fontFamilyFolderReference*  \n A string specifying a folder containing the font, along with a font family name.  The folder and font family name are delimited by a # character.  The folder reference may be absolute, or relative.  For example, `\"Custom Fonts\\#My Custom Font\"`.  \n  \n *fontFamilyUriReference*  \n A string specifying a [!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)] for the font, along with a font family name.  The [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] and font family name are delimited by a # character.  For example, `\"http://MyFontServer/Fonts/#My Custom Font\"`.  \n  \n<a name=\"dependencyPropertyInfo_FontFamily\"></a>   \n## Dependency Property Information  \n  \n|||  \n|-|-|  \n|Identifier field|<xref:System.Windows.Documents.FlowDocument.FontFamilyProperty>|  \n|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|"
  example:
  - "The following example shows how to set the FontFamily attribute of a <xref:System.Windows.Documents.FlowDocument> element.  \n  \n [!code-xml[FlowDocumentSnippets#_FlowDocumentFontStuffXAML](~/add/codesnippet/xaml/FlowDocumentSnippets/Window1.xaml#_flowdocumentfontstuffxaml)]  \n  \n The following example shows how to set the FontFamily property programmatically.  \n  \n [!code-cs[FlowDocumentSnippets#_FlowDocumentFontStuff](~/add/codesnippet/csharp/FlowDocumentSnippets/Window1.xaml.cs#_flowdocumentfontstuff)]\n [!code-vb[FlowDocumentSnippets#_FlowDocumentFontStuff](~/add/codesnippet/visualbasic/flowdocumentsnippets/window1.xaml.vb#_flowdocumentfontstuff)]"
  syntax:
    content: public System.Windows.Media.FontFamily FontFamily { get; set; }
    return:
      type: System.Windows.Media.FontFamily
      description: "A <xref href=&quot;System.Windows.Media.FontFamily&quot;> </xref> 기본 글꼴 패밀리 또는 이상의 대체 글꼴 패밀리가 있는 주 기본 글꼴 패밀리 하나를 지정 하는 개체입니다. 기본값은 의해 결정 된 글꼴의 &lt;xref:System.Windows.SystemFonts.MessageFontFamily%2A?displayProperty=fullName&gt; 값입니다."
  overload: System.Windows.Documents.FlowDocument.FontFamily*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.FlowDocument.FontFamilyProperty
  id: FontFamilyProperty
  parent: System.Windows.Documents.FlowDocument
  langs:
  - csharp
  name: FontFamilyProperty
  nameWithType: FlowDocument.FontFamilyProperty
  fullName: System.Windows.Documents.FlowDocument.FontFamilyProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "식별 된 <xref:System.Windows.Documents.FlowDocument.FontFamily*>종속성 속성입니다.</xref:System.Windows.Documents.FlowDocument.FontFamily*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty FontFamilyProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.FlowDocument.FontSize
  id: FontSize
  parent: System.Windows.Documents.FlowDocument
  langs:
  - csharp
  name: FontSize
  nameWithType: FlowDocument.FontSize
  fullName: System.Windows.Documents.FlowDocument.FontSize
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "에 대 한 최상위 글꼴 크기를 가져오거나 설정 합니다.는 <xref href=&quot;System.Windows.Documents.FlowDocument&quot;> </xref>합니다."
  remarks: "이 최상위 수준 설정을 재정의 하는 자식 요소에 있는 모든 FontSize 설정 합니다.      <a name=&quot;xamlAttributeUsage_FontSize&quot;></a># # XAML 특성 사용 ```   <object FontSize=&quot;double&quot;/>   - or -   <object FontSize=&quot;qualifiedDouble&quot;/>   ``` <a name=&quot;xamlValues_FontSize&quot;> </a> # # XAML 값 *double* <xref:System.Double> <xref:System.Double>같고 <xref:System.Double.PositiveInfinity?displayProperty=fullName>.</xref:System.Double.PositiveInfinity?displayProperty=fullName> 0.0 보다 크거나 같은 값</xref:System.Double> 의 문자열 표현</xref:System.Double>           정규화 되지 않은 값은 장치 독립적 픽셀 단위로 지정 합니다. 문자열은 소수점이 하를 명시적으로 포함 하지 않아야 합니다.       *도* A *double* 단위 지정자 중 하나에 의해 다음 위에서 설명한 대로 값: `px`, `in`, `cm`, `pt`합니다.       `px`(기본값)은 [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)] `in` 인치; 1in 96px = = `cm` 센티미터; 1cm==(96/2.54) px `pt` 은 포인트; 1pt==(96/72) px <a name=&quot;dependencyPropertyInfo_FontSize&quot;> </a> # # 종속성 속성 정보 | | |   |-|-|   | 식별자 필드 | <xref:System.Windows.Documents.FlowDocument.FontSizeProperty>|   | 메타 데이터 속성이 `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A> <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|</xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A> </xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A> ,</xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A> </xref:System.Windows.Documents.FlowDocument.FontSizeProperty>       "
  example:
  - "The following example shows how to set the FontSize attribute of a <xref:System.Windows.Documents.FlowDocument> element.  \n  \n [!code-xml[FlowDocumentSnippets#_FlowDocumentFontStuffXAML](~/add/codesnippet/xaml/FlowDocumentSnippets/Window1.xaml#_flowdocumentfontstuffxaml)]  \n  \n The following example shows how to set the FontSize property programmatically.  \n  \n [!code-cs[FlowDocumentSnippets#_FlowDocumentFontStuff](~/add/codesnippet/csharp/FlowDocumentSnippets/Window1.xaml.cs#_flowdocumentfontstuff)]\n [!code-vb[FlowDocumentSnippets#_FlowDocumentFontStuff](~/add/codesnippet/visualbasic/flowdocumentsnippets/window1.xaml.vb#_flowdocumentfontstuff)]"
  syntax:
    content: public double FontSize { get; set; }
    return:
      type: System.Double
      description: "(장치 독립적 픽셀)를 사용 하려면 원하는 글꼴 크기)입니다.   기본값은 &lt;xref:System.Windows.SystemFonts.MessageFontSize%2A?displayProperty=fullName&gt; 값입니다."
  overload: System.Windows.Documents.FlowDocument.FontSize*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.FlowDocument.FontSizeProperty
  id: FontSizeProperty
  parent: System.Windows.Documents.FlowDocument
  langs:
  - csharp
  name: FontSizeProperty
  nameWithType: FlowDocument.FontSizeProperty
  fullName: System.Windows.Documents.FlowDocument.FontSizeProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "식별 된 <xref:System.Windows.Documents.FlowDocument.FontSize*>종속성 속성입니다.</xref:System.Windows.Documents.FlowDocument.FontSize*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty FontSizeProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.FlowDocument.FontStretch
  id: FontStretch
  parent: System.Windows.Documents.FlowDocument
  langs:
  - csharp
  name: FontStretch
  nameWithType: FlowDocument.FontStretch
  fullName: System.Windows.Documents.FlowDocument.FontStretch
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "에 대 한 최상위 글꼴 확장 특성을 가져오거나 설정 합니다.는 <xref href=&quot;System.Windows.Documents.FlowDocument&quot;> </xref>합니다."
  remarks: "이 최상위 수준 설정을 재정의 하는 자식 요소에 있는 모든 일반적으로 설정 합니다.      <a name=&quot;dependencyPropertyInfo_FontStretch&quot;></a># # 종속성 속성 정보 | | |   |-|-|   | 식별자 필드 | <xref:System.Windows.Documents.FlowDocument.FontStretchProperty>|   | 메타 데이터 속성이 `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A> <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|</xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A> </xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A> ,</xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A> </xref:System.Windows.Documents.FlowDocument.FontStretchProperty>"
  example:
  - "The following example shows how to set the FontStretch attribute of a <xref:System.Windows.Documents.FlowDocument> element.  \n  \n [!code-xml[FlowDocumentSnippets#_FlowDocumentFontStuffXAML](~/add/codesnippet/xaml/FlowDocumentSnippets/Window1.xaml#_flowdocumentfontstuffxaml)]  \n  \n The following example shows how to set the FontStretch property programmatically.  \n  \n [!code-cs[FlowDocumentSnippets#_FlowDocumentFontStuff](~/add/codesnippet/csharp/FlowDocumentSnippets/Window1.xaml.cs#_flowdocumentfontstuff)]\n [!code-vb[FlowDocumentSnippets#_FlowDocumentFontStuff](~/add/codesnippet/visualbasic/flowdocumentsnippets/window1.xaml.vb#_flowdocumentfontstuff)]"
  syntax:
    content: public System.Windows.FontStretch FontStretch { get; set; }
    return:
      type: System.Windows.FontStretch
      description: "멤버는 <xref href=&quot;System.Windows.FontStretch&quot;> </xref> 사용 하려는 글꼴 확장 특성을 지정 하는 클래스입니다. 기본값은 &lt;xref:System.Windows.FontStretches.Normal%2A?displayProperty=fullName&gt;합니다."
  overload: System.Windows.Documents.FlowDocument.FontStretch*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.FlowDocument.FontStretchProperty
  id: FontStretchProperty
  parent: System.Windows.Documents.FlowDocument
  langs:
  - csharp
  name: FontStretchProperty
  nameWithType: FlowDocument.FontStretchProperty
  fullName: System.Windows.Documents.FlowDocument.FontStretchProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "식별 된 <xref:System.Windows.Documents.FlowDocument.FontStretch*>종속성 속성입니다.</xref:System.Windows.Documents.FlowDocument.FontStretch*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty FontStretchProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.FlowDocument.FontStyle
  id: FontStyle
  parent: System.Windows.Documents.FlowDocument
  langs:
  - csharp
  name: FontStyle
  nameWithType: FlowDocument.FontStyle
  fullName: System.Windows.Documents.FlowDocument.FontStyle
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "에 대 한 최상위 글꼴 스타일을 가져오거나 설정 합니다.는 <xref href=&quot;System.Windows.Documents.FlowDocument&quot;> </xref>합니다."
  remarks: "자식 요소에 있는 모든 FontStyle 설정이 최상위 수준 설정을 재정의합니다.      <a name=&quot;dependencyPropertyInfo_FontStyle&quot;></a># # 종속성 속성 정보 | | |   |-|-|   | 식별자 필드 | <xref:System.Windows.Documents.FlowDocument.FontStyleProperty>|   | 메타 데이터 속성이 `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A> <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|</xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A> </xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A> ,</xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A> </xref:System.Windows.Documents.FlowDocument.FontStyleProperty>"
  example:
  - "The following example shows how to set the FontStyle attribute of a <xref:System.Windows.Documents.FlowDocument> element.  \n  \n [!code-xml[FlowDocumentSnippets#_FlowDocumentFontStuffXAML](~/add/codesnippet/xaml/FlowDocumentSnippets/Window1.xaml#_flowdocumentfontstuffxaml)]  \n  \n The following example shows how to set the FontStyle property programmatically.  \n  \n [!code-cs[FlowDocumentSnippets#_FlowDocumentFontStuff](~/add/codesnippet/csharp/FlowDocumentSnippets/Window1.xaml.cs#_flowdocumentfontstuff)]\n [!code-vb[FlowDocumentSnippets#_FlowDocumentFontStuff](~/add/codesnippet/visualbasic/flowdocumentsnippets/window1.xaml.vb#_flowdocumentfontstuff)]"
  syntax:
    content: public System.Windows.FontStyle FontStyle { get; set; }
    return:
      type: System.Windows.FontStyle
      description: "멤버는 <xref href=&quot;System.Windows.FontStyles&quot;> </xref> 원하는 글꼴 스타일을 지정 하는 클래스입니다. 기본값은 &lt;xref:System.Windows.SystemFonts.MessageFontStyle%2A?displayProperty=fullName&gt; 값입니다."
  overload: System.Windows.Documents.FlowDocument.FontStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.FlowDocument.FontStyleProperty
  id: FontStyleProperty
  parent: System.Windows.Documents.FlowDocument
  langs:
  - csharp
  name: FontStyleProperty
  nameWithType: FlowDocument.FontStyleProperty
  fullName: System.Windows.Documents.FlowDocument.FontStyleProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "식별 된 <xref:System.Windows.Documents.FlowDocument.FontStyle*>종속성 속성입니다.</xref:System.Windows.Documents.FlowDocument.FontStyle*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty FontStyleProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.FlowDocument.FontWeight
  id: FontWeight
  parent: System.Windows.Documents.FlowDocument
  langs:
  - csharp
  name: FontWeight
  nameWithType: FlowDocument.FontWeight
  fullName: System.Windows.Documents.FlowDocument.FontWeight
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "에 대 한 최상위 글꼴 두께 가져오거나 설정 합니다.는 <xref href=&quot;System.Windows.Documents.FlowDocument&quot;> </xref>합니다."
  remarks: "이 최상위 수준 설정을 재정의 하는 자식 요소에 있는 모든 FontWeight 설정 합니다.      <a name=&quot;dependencyPropertyInfo_FontWeight&quot;></a># # 종속성 속성 정보 | | |   |-|-|   | 식별자 필드 | <xref:System.Windows.Documents.FlowDocument.FontWeightProperty>|   | 메타 데이터 속성이 `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A> <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|</xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A> </xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A> ,</xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A> </xref:System.Windows.Documents.FlowDocument.FontWeightProperty>"
  example:
  - "The following example shows how to set the FontWeight attribute of a <xref:System.Windows.Documents.FlowDocument> element.  \n  \n [!code-xml[FlowDocumentSnippets#_FlowDocumentFontStuffXAML](~/add/codesnippet/xaml/FlowDocumentSnippets/Window1.xaml#_flowdocumentfontstuffxaml)]  \n  \n The following example shows how to set the FontWeight property programmatically.  \n  \n [!code-cs[FlowDocumentSnippets#_FlowDocumentFontStuff](~/add/codesnippet/csharp/FlowDocumentSnippets/Window1.xaml.cs#_flowdocumentfontstuff)]\n [!code-vb[FlowDocumentSnippets#_FlowDocumentFontStuff](~/add/codesnippet/visualbasic/flowdocumentsnippets/window1.xaml.vb#_flowdocumentfontstuff)]"
  syntax:
    content: public System.Windows.FontWeight FontWeight { get; set; }
    return:
      type: System.Windows.FontWeight
      description: "멤버는 <xref href=&quot;System.Windows.FontWeights&quot;> </xref> 원하는 글꼴 두께 지정 하는 클래스입니다. 기본값은 &lt;xref:System.Windows.SystemFonts.MessageFontWeight%2A?displayProperty=fullName&gt; 값입니다."
  overload: System.Windows.Documents.FlowDocument.FontWeight*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.FlowDocument.FontWeightProperty
  id: FontWeightProperty
  parent: System.Windows.Documents.FlowDocument
  langs:
  - csharp
  name: FontWeightProperty
  nameWithType: FlowDocument.FontWeightProperty
  fullName: System.Windows.Documents.FlowDocument.FontWeightProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "식별 된 <xref:System.Windows.Documents.FlowDocument.FontWeight*>종속성 속성입니다.</xref:System.Windows.Documents.FlowDocument.FontWeight*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty FontWeightProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.FlowDocument.Foreground
  id: Foreground
  parent: System.Windows.Documents.FlowDocument
  langs:
  - csharp
  name: Foreground
  nameWithType: FlowDocument.Foreground
  fullName: System.Windows.Documents.FlowDocument.Foreground
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "가져오거나는 <xref href=&quot;System.Windows.Media.Brush&quot;> </xref> 의 텍스트 내용에 적용 하는 <xref href=&quot;System.Windows.Documents.FlowDocument&quot;> </xref>합니다."
  remarks: "견본 테이블을 사용할 수 있는 미리 정의 된 브러시 색을 보여 주는, <xref:System.Windows.Media.Brushes>.</xref:System.Windows.Media.Brushes> 을 참조 하십시오.       자식 요소에 있는 모든 전경 설정이 최상위 수준 설정을 재정의합니다.      <a name=&quot;dependencyPropertyInfo_Foreground&quot;></a># # 종속성 속성 정보 | | |   |-|-|   | 식별자 필드 | <xref:System.Windows.Documents.FlowDocument.ForegroundProperty>|   | 메타 데이터 속성이 `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>,</xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A> </xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A> </xref:System.Windows.Documents.FlowDocument.ForegroundProperty><br /><br /> <xref:System.Windows.FrameworkPropertyMetadataOptions>|</xref:System.Windows.FrameworkPropertyMetadataOptions>"
  example:
  - "The following example shows how to set the Foreground attribute of a <xref:System.Windows.Documents.FlowDocument> element.  \n  \n [!code-xml[FlowDocumentSnippets#_FlowDocumentBackgroundXAML](~/add/codesnippet/xaml/FlowDocumentSnippets/Window1.xaml#_flowdocumentbackgroundxaml)]  \n  \n The following example shows how to set the Foreground property programmatically.  \n  \n [!code-cs[FlowDocumentSnippets#_FlowDocumentBackground](~/add/codesnippet/csharp/FlowDocumentSnippets/Window1.xaml.cs#_flowdocumentbackground)]\n [!code-vb[FlowDocumentSnippets#_FlowDocumentBackground](~/add/codesnippet/visualbasic/flowdocumentsnippets/window1.xaml.vb#_flowdocumentbackground)]"
  syntax:
    content: public System.Windows.Media.Brush Foreground { get; set; }
    return:
      type: System.Windows.Media.Brush
      description: "텍스트 콘텐츠에 적용 하는 데 사용 되는 브러시입니다. 기본값은 &lt;xref:System.Windows.Media.Brushes.Black%2A?displayProperty=fullName&gt;합니다."
  overload: System.Windows.Documents.FlowDocument.Foreground*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.FlowDocument.ForegroundProperty
  id: ForegroundProperty
  parent: System.Windows.Documents.FlowDocument
  langs:
  - csharp
  name: ForegroundProperty
  nameWithType: FlowDocument.ForegroundProperty
  fullName: System.Windows.Documents.FlowDocument.ForegroundProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "식별 된 <xref:System.Windows.Documents.FlowDocument.Foreground*>종속성 속성입니다.</xref:System.Windows.Documents.FlowDocument.Foreground*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty ForegroundProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.FlowDocument.IsColumnWidthFlexible
  id: IsColumnWidthFlexible
  parent: System.Windows.Documents.FlowDocument
  langs:
  - csharp
  name: IsColumnWidthFlexible
  nameWithType: FlowDocument.IsColumnWidthFlexible
  fullName: System.Windows.Documents.FlowDocument.IsColumnWidthFlexible
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "표시 하는 값을 가져오거나 설정 합니다. 여부는 <xref:System.Windows.Documents.FlowDocument.ColumnWidth*>유연한 또는 고정 값이 있습니다.</xref:System.Windows.Documents.FlowDocument.ColumnWidth*>"
  remarks: "IsColumnWidthFlexible 속성에는 열 중 어떤 여분의 콘텐츠 영역 너비 (즉, 페이지 너비와 콘텐츠에 배치 된 후 사이의 차이)를 배포 하는 방식을 결정 합니다. 설정 `true` 의미는 추가 공간이 배분 됩니다 동일 하 게 각 열에,이 경우, 열에 지정 된 너비 보다 더 넓게 조정 될 수 있습니다는 <xref:System.Windows.Documents.FlowDocument.ColumnWidth%2A>속성.</xref:System.Windows.Documents.FlowDocument.ColumnWidth%2A>  설정 `false` 페이지의 오른쪽에 안쪽 여백 공간을 배분;이 경우 열 항상 크기를 조정할지에 지정 된 너비를 초과 하는 의미는 <xref:System.Windows.Documents.FlowDocument.ColumnWidth%2A>속성 (해당 너비 뺀 값 페이지의 너비 보다 작은 경우에 <xref:System.Windows.Documents.FlowDocument.PagePadding%2A>).</xref:System.Windows.Documents.FlowDocument.PagePadding%2A> </xref:System.Windows.Documents.FlowDocument.ColumnWidth%2A>       이 속성이 다음 그림은 레이아웃의 차이 `true` 또는 `false`합니다.  연한 파란색 <xref:System.Windows.Documents.FlowDocument>.</xref:System.Windows.Documents.FlowDocument> 콘텐츠의 열을 나타내는       ![스크린 샷: IsColumnWidthFlexible 값 비교](~/add/media/flowdoc-columnflex.png &quot;스크린 샷: IsColumnWidthFlexible 비교 값&quot;) <a name=&quot;dependencyPropertyInfo_IsColumnWidthFlexible&quot;> </a> # # 종속성 속성 정보 | | |   |-|-|   | 식별자 필드 | <xref:System.Windows.Documents.FlowDocument.IsColumnWidthFlexibleProperty>|   | 메타 데이터 속성이 `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|</xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A> </xref:System.Windows.Documents.FlowDocument.IsColumnWidthFlexibleProperty>      "
  example:
  - "The following example shows how to set the IsColumnWidthFlexible attribute of a <xref:System.Windows.Documents.FlowDocument> element.  \n  \n [!code-xml[FlowDocumentSnippets#_FlowDocumentColumnFlexXAML](~/add/codesnippet/xaml/FlowDocumentSnippets/Window1.xaml#_flowdocumentcolumnflexxaml)]  \n  \n The following example shows how to set the IsColumnWidthFlexible property programmatically.  \n  \n [!code-cs[FlowDocumentSnippets#_FlowDocumentColumnFlex](~/add/codesnippet/csharp/FlowDocumentSnippets/Window1.xaml.cs#_flowdocumentcolumnflex)]\n [!code-vb[FlowDocumentSnippets#_FlowDocumentColumnFlex](~/add/codesnippet/visualbasic/flowdocumentsnippets/window1.xaml.vb#_flowdocumentcolumnflex)]"
  syntax:
    content: public bool IsColumnWidthFlexible { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>열 너비는 유연한; 경우 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 열 너비를 수정 합니다. 기본값은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Documents.FlowDocument.IsColumnWidthFlexible*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.FlowDocument.IsColumnWidthFlexibleProperty
  id: IsColumnWidthFlexibleProperty
  parent: System.Windows.Documents.FlowDocument
  langs:
  - csharp
  name: IsColumnWidthFlexibleProperty
  nameWithType: FlowDocument.IsColumnWidthFlexibleProperty
  fullName: System.Windows.Documents.FlowDocument.IsColumnWidthFlexibleProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "식별 된 <xref:System.Windows.Documents.FlowDocument.IsColumnWidthFlexible*>종속성 속성입니다.</xref:System.Windows.Documents.FlowDocument.IsColumnWidthFlexible*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty IsColumnWidthFlexibleProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.FlowDocument.IsEnabledCore
  id: IsEnabledCore
  parent: System.Windows.Documents.FlowDocument
  langs:
  - csharp
  name: IsEnabledCore
  nameWithType: FlowDocument.IsEnabledCore
  fullName: System.Windows.Documents.FlowDocument.IsEnabledCore
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "값을 가져옵니다는 <xref:System.Windows.ContentElement.IsEnabled*>속성에 대 한는 <xref href=&quot;System.Windows.Documents.FlowDocument&quot;> </xref>.</xref:System.Windows.ContentElement.IsEnabled*>"
  syntax:
    content: protected override bool IsEnabledCore { get; }
    return:
      type: System.Boolean
      description: "값은 <xref:System.Windows.ContentElement.IsEnabled*>속성에 대 한는 <xref href=&quot;System.Windows.Documents.FlowDocument&quot;> </xref>.</xref:System.Windows.ContentElement.IsEnabled*>"
  overload: System.Windows.Documents.FlowDocument.IsEnabledCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.FlowDocument.IsHyphenationEnabled
  id: IsHyphenationEnabled
  parent: System.Windows.Documents.FlowDocument
  langs:
  - csharp
  name: IsHyphenationEnabled
  nameWithType: FlowDocument.IsHyphenationEnabled
  fullName: System.Windows.Documents.FlowDocument.IsHyphenationEnabled
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "단어 자동 하이픈 넣기 사용 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "단어 단위로 하이픈 넣기 기능을 사용 하면 한 <xref:System.Windows.Documents.FlowDocument>자동으로 중단 하 고 현재 레이아웃 조건에 따라 단어 하이픈 넣기.</xref:System.Windows.Documents.FlowDocument>  긴 단어를 한 줄으로 시작 하 고이 단계를 계속 있으며 보다 균등 정렬 된 텍스트에 있는 공백을 달성 하는 경향이 있습니다.  단어 분리 되며 표준 문법 규칙에 따라 하이픈을 사용 합니다.  자동 하이픈은 최적의 단락 레이아웃 함께 사용 하면 특히 효과적 (나타내는 <xref:System.Windows.Documents.FlowDocument.IsOptimalParagraphEnabled%2A>속성).</xref:System.Windows.Documents.FlowDocument.IsOptimalParagraphEnabled%2A>      <a name=&quot;dependencyPropertyInfo_IsHyphenationEnabled&quot;></a># # 종속성 속성 정보 | | |   |-|-|   | 식별자 필드 | <xref:System.Windows.Documents.FlowDocument.IsHyphenationEnabledProperty>|   | 메타 데이터 속성이 `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A> <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|</xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A> </xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A> ,</xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A> </xref:System.Windows.Documents.FlowDocument.IsHyphenationEnabledProperty>"
  example:
  - "The following example shows how to set the IsHyphenationEnabled attribute of a <xref:System.Windows.Documents.FlowDocument> element.  \n  \n [!code-xml[FlowDocumentSnippets#_FlowDocumentHyphenateXAML](~/add/codesnippet/xaml/FlowDocumentSnippets/Window1.xaml#_flowdocumenthyphenatexaml)]  \n  \n The following figure shows how the preceding <xref:System.Windows.Documents.FlowDocument> renders.  \n  \n ![Screenshot: FlowDocument hyphen enabled](~/add/media/flowdoc-hyphenenabled.png \"Screenshot: FlowDocument hyphen enabled\")  \n  \n The following figure shows how the same <xref:System.Windows.Documents.FlowDocument> renders with the default setting of IsHyphenationEnabled=`false`.  \n  \n ![Screenshot: FlowDocument with disabled hyphens](~/add/media/flowdoc-hyphendisabled.png \"Screenshot: FlowDocument with disabled hyphens\")  \n  \n The following example shows how to set the IsHyphenationEnabled property programmatically.  \n  \n [!code-cs[FlowDocumentSnippets#_FlowDocumentHyphenate](~/add/codesnippet/csharp/FlowDocumentSnippets/Window1.xaml.cs#_flowdocumenthyphenate)]\n [!code-vb[FlowDocumentSnippets#_FlowDocumentHyphenate](~/add/codesnippet/visualbasic/flowdocumentsnippets/window1.xaml.vb#_flowdocumenthyphenate)]"
  syntax:
    content: public bool IsHyphenationEnabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>자동 줄 바꿈 및 단어를 사용 하면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Documents.FlowDocument.IsHyphenationEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.FlowDocument.IsHyphenationEnabledProperty
  id: IsHyphenationEnabledProperty
  parent: System.Windows.Documents.FlowDocument
  langs:
  - csharp
  name: IsHyphenationEnabledProperty
  nameWithType: FlowDocument.IsHyphenationEnabledProperty
  fullName: System.Windows.Documents.FlowDocument.IsHyphenationEnabledProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "식별 된 <xref:System.Windows.Documents.FlowDocument.IsHyphenationEnabled*>종속성 속성입니다.</xref:System.Windows.Documents.FlowDocument.IsHyphenationEnabled*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty IsHyphenationEnabledProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.FlowDocument.IsOptimalParagraphEnabled
  id: IsOptimalParagraphEnabled
  parent: System.Windows.Documents.FlowDocument
  langs:
  - csharp
  name: IsOptimalParagraphEnabled
  nameWithType: FlowDocument.IsOptimalParagraphEnabled
  fullName: System.Windows.Documents.FlowDocument.IsOptimalParagraphEnabled
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "최적의 단락 레이아웃이 사용 되는지 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "최적의 단락 레이아웃은에서 단락을 배치 하는 기능은 <xref:System.Windows.Documents.FlowDocument>공백 최대한 일정 하 게 분배 되도록.</xref:System.Windows.Documents.FlowDocument>  이론적으로 최적의 표시 환경을 줄 맞춰진 텍스트 및 다른 레이아웃 루틴에서 발생할 수 있는 산만 공백을 제거 하 여 제공 합니다.  최적의 단락 레이아웃은 자동 하이픈으로 사용할 경우 특히 효과적 (나타내는 <xref:System.Windows.Documents.FlowDocument.IsHyphenationEnabled%2A>속성).</xref:System.Windows.Documents.FlowDocument.IsHyphenationEnabled%2A>      <a name=&quot;dependencyPropertyInfo_Opt&quot;></a># # 종속성 속성 정보 | | |   |-|-|   | 식별자 필드 | <xref:System.Windows.Documents.FlowDocument.IsOptimalParagraphEnabledProperty>|   | 메타 데이터 속성이 `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|</xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A> </xref:System.Windows.Documents.FlowDocument.IsOptimalParagraphEnabledProperty>"
  example:
  - "The following example shows how to set the IsOptimalParagraphEnabled attribute of a <xref:System.Windows.Documents.FlowDocument> element.  \n  \n [!code-xml[FlowDocumentSnippets#_FlowDocumentHyphenateXAML](~/add/codesnippet/xaml/FlowDocumentSnippets/Window1.xaml#_flowdocumenthyphenatexaml)]  \n  \n The following figure shows how the preceding <xref:System.Windows.Documents.FlowDocument> renders.  \n  \n ![Screenshot: FlowDocument hyphen enabled](~/add/media/flowdoc-hyphenenabled.png \"Screenshot: FlowDocument hyphen enabled\")  \n  \n The following figure shows how the same <xref:System.Windows.Documents.FlowDocument> renders with the default setting of IsOptimalParagraphEnabled=`false`.  \n  \n ![Screenshot: FlowDocument with disabled hyphens](~/add/media/flowdoc-hyphendisabled.png \"Screenshot: FlowDocument with disabled hyphens\")  \n  \n The following example shows how to set the IsOptimalParagraphEnabled property programmatically.  \n  \n [!code-cs[FlowDocumentSnippets#_FlowDocumentHyphenate](~/add/codesnippet/csharp/FlowDocumentSnippets/Window1.xaml.cs#_flowdocumenthyphenate)]\n [!code-vb[FlowDocumentSnippets#_FlowDocumentHyphenate](~/add/codesnippet/visualbasic/flowdocumentsnippets/window1.xaml.vb#_flowdocumenthyphenate)]"
  syntax:
    content: public bool IsOptimalParagraphEnabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>최적의 단락 레이아웃을 사용 하면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Documents.FlowDocument.IsOptimalParagraphEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.FlowDocument.IsOptimalParagraphEnabledProperty
  id: IsOptimalParagraphEnabledProperty
  parent: System.Windows.Documents.FlowDocument
  langs:
  - csharp
  name: IsOptimalParagraphEnabledProperty
  nameWithType: FlowDocument.IsOptimalParagraphEnabledProperty
  fullName: System.Windows.Documents.FlowDocument.IsOptimalParagraphEnabledProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "식별 된 <xref:System.Windows.Documents.FlowDocument.IsOptimalParagraphEnabled*>종속성 속성입니다.</xref:System.Windows.Documents.FlowDocument.IsOptimalParagraphEnabled*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty IsOptimalParagraphEnabledProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.FlowDocument.LineHeight
  id: LineHeight
  parent: System.Windows.Documents.FlowDocument
  langs:
  - csharp
  name: LineHeight
  nameWithType: FlowDocument.LineHeight
  fullName: System.Windows.Documents.FlowDocument.LineHeight
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "각 내용 줄의 높이 가져오거나 설정 합니다."
  remarks: "이 값을 변경; 연결된 된 텍스트의 높이 변경 되지 않습니다. 대신, 텍스트가 포함 된 줄의 높이 변경 합니다. 텍스트의 크기를 변경 하려면 사용 하 여는 <xref:System.Windows.Documents.FlowDocument.FontSize%2A>속성.</xref:System.Windows.Documents.FlowDocument.FontSize%2A>       이 속성의 줄 레이아웃 이외에 <xref:System.Windows.Documents.FlowDocument>영향을 받는 해당 <xref:System.Windows.Documents.FlowDocument.LineStackingStrategy%2A>속성.</xref:System.Windows.Documents.FlowDocument.LineStackingStrategy%2A> </xref:System.Windows.Documents.FlowDocument>      <a name=&quot;xamlAttributeUsage_LineHeight&quot;></a># # XAML 특성 사용 ```   <object LineHeight=&quot;double&quot;/>   - or -   <object LineHeight=&quot;qualifiedDouble&quot;/>   - or -   <object LineHeight=&quot;Auto&quot;/>   ``` <a name=&quot;xamlValues_LineHeight&quot;> </a> # # XAML 값 *double* <xref:System.Double> 의 문자열 표현은 <xref:System.Double>값 보다 크거나 같은 `0.0034` 및 낮거나 다음 `160000`.</xref:System.Double> </xref:System.Double>           정규화 되지 않은 값은 장치 독립적 픽셀 단위로 지정 합니다. 문자열은 소수점이 하를 명시적으로 포함 하지 않아야 합니다.       *도* A *double* 위에서 설명한 대로 값 (인 경우는 제외 `Auto`) 다음에 다음과 같은 단위 지정자 중 하나: `px`, `in`, `cm`, `pt`합니다.       `px`(기본값)은 [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)] `in` 인치; 1in 96px = = `cm` 센티미터; 1cm==(96/2.54) px `pt` 은 포인트; 1pt==(96/72) px 자동 이면 줄 높이가 현재 글꼴 특성에서 자동으로 결정 됩니다.         <xref:System.Double.NaN?displayProperty=fullName>안내 하십시오.</xref:System.Double.NaN?displayProperty=fullName> 속성 값에 해당      <a name=&quot;dependencyPropertyInfo_LineHeight&quot;></a># # 종속성 속성 정보 | | |   |-|-|   | 식별자 필드 | <xref:System.Windows.Documents.FlowDocument.LineHeightProperty>|   | 메타 데이터 속성이 `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A> <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|</xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A> </xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A> ,</xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A> </xref:System.Windows.Documents.FlowDocument.LineHeightProperty>"
  example:
  - "The following example shows how to set the LineHeight attribute of a <xref:System.Windows.Documents.FlowDocument> element.  \n  \n [!code-xml[FlowDocumentSnippets#_FlowDocumentLineHeightXAML](~/add/codesnippet/xaml/FlowDocumentSnippets/Window1.xaml#_flowdocumentlineheightxaml)]  \n  \n The following figure shows how the preceding <xref:System.Windows.Documents.FlowDocument> renders.  \n  \n ![Screenshot: FlowDocument LineHeight](~/add/media/flowdocument-lineheight.png \"Screenshot: FlowDocument LineHeight\")  \n  \n The following figure shows how the same <xref:System.Windows.Documents.FlowDocument> renders with the default setting of LineHeight=<xref:System.Double.NaN?displayProperty=fullName>.  \n  \n ![Screenshot: FlowDocument LineHeight default](~/add/media/flowdocument-lineheightdefault.png \"Screenshot: FlowDocument LineHeight default\")  \n  \n The following example shows how to set the LineHeight property programmatically.  \n  \n [!code-cs[FlowDocumentSnippets#_FlowDocumentLineHeight](~/add/codesnippet/csharp/FlowDocumentSnippets/Window1.xaml.cs#_flowdocumentlineheight)]\n [!code-vb[FlowDocumentSnippets#_FlowDocumentLineHeight](~/add/codesnippet/visualbasic/flowdocumentsnippets/window1.xaml.vb#_flowdocumentlineheight)]"
  syntax:
    content: public double LineHeight { get; set; }
    return:
      type: System.Double
      description: "장치 독립적 픽셀 단위로 0.0034에서 160000의 범위에서 각 줄의 높이입니다. 값이 &lt;xref:System.Double?displayProperty=fullName&gt; (의 특성 값에 해당 &quot;`Auto`&quot;) 이면 줄 높이가 현재 글꼴 특성에서 자동으로 결정 됩니다. 기본값은 &lt;xref:System.Double?displayProperty=fullName&gt;합니다."
  overload: System.Windows.Documents.FlowDocument.LineHeight*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<xref:System.Windows.Controls.TextBlock.LineHeight*>양수가 아닌 값으로 설정 됩니다.</xref:System.Windows.Controls.TextBlock.LineHeight*>"
  platform:
  - net462
- uid: System.Windows.Documents.FlowDocument.LineHeightProperty
  id: LineHeightProperty
  parent: System.Windows.Documents.FlowDocument
  langs:
  - csharp
  name: LineHeightProperty
  nameWithType: FlowDocument.LineHeightProperty
  fullName: System.Windows.Documents.FlowDocument.LineHeightProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "식별 된 <xref:System.Windows.Documents.FlowDocument.LineHeight*>종속성 속성입니다.</xref:System.Windows.Documents.FlowDocument.LineHeight*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty LineHeightProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.FlowDocument.LineStackingStrategy
  id: LineStackingStrategy
  parent: System.Windows.Documents.FlowDocument
  langs:
  - csharp
  name: LineStackingStrategy
  nameWithType: FlowDocument.LineStackingStrategy
  fullName: System.Windows.Documents.FlowDocument.LineStackingStrategy
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "각 줄의 텍스트 내에서 한 줄 상자를 결정 하는 메커니즘을 가져오거나 설정 합니다.는 <xref href=&quot;System.Windows.Documents.FlowDocument&quot;> </xref>합니다."
  remarks: "<a name=&quot;dependencyPropertyInfo_LineStackingStrategy&quot;></a># # 종속성 속성 정보 | | |   |-|-|   | 식별자 필드 | <xref:System.Windows.Documents.FlowDocument.LineStackingStrategyProperty>|   | 메타 데이터 속성이 `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A> <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|</xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A> </xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A> ,</xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A> </xref:System.Windows.Documents.FlowDocument.LineStackingStrategyProperty>"
  example:
  - "The following example shows how to use the <xref:System.Windows.Controls.TextBlock.LineStackingStrategy%2A> property to determine how the line boxes are created for text lines of a <xref:System.Windows.Controls.TextBlock>. The first <xref:System.Windows.Controls.TextBlock> has a <xref:System.Windows.Controls.TextBlock.LineStackingStrategy%2A> value of <xref:System.Windows.LineStackingStrategy> and the second <xref:System.Windows.Controls.TextBlock> has a value of <xref:System.Windows.LineStackingStrategy>.  \n  \n [!code-xml[FlowMiscSnippets_snip#LineStackingStrategyExampleWholePage](~/add/codesnippet/xaml/flowmiscsnippets_snip/linestackingstrategyexample.xaml#linestackingstrategyexamplewholepage)]  \n  \n The following illustration shows the result of the preceding code.  \n  \n ![Screenshot: Compare LineStackingStrategy values](~/add/media/flow-linestackingstrategy.gif \"Screenshot: Compare LineStackingStrategy values\")"
  syntax:
    content: public System.Windows.LineStackingStrategy LineStackingStrategy { get; set; }
    return:
      type: System.Windows.LineStackingStrategy
      description: "중 하나는 <xref href=&quot;System.Windows.LineStackingStrategy&quot;> </xref> 각 줄의 텍스트에 대 한 줄 상자를 결정 하는 메커니즘을 지정 하는 값은 <xref href=&quot;System.Windows.Documents.FlowDocument&quot;> </xref>합니다. 기본값은 <xref href=&quot;System.Windows.LineStackingStrategy&quot;> </xref>합니다."
  overload: System.Windows.Documents.FlowDocument.LineStackingStrategy*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.FlowDocument.LineStackingStrategyProperty
  id: LineStackingStrategyProperty
  parent: System.Windows.Documents.FlowDocument
  langs:
  - csharp
  name: LineStackingStrategyProperty
  nameWithType: FlowDocument.LineStackingStrategyProperty
  fullName: System.Windows.Documents.FlowDocument.LineStackingStrategyProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "식별 된 <xref:System.Windows.Documents.FlowDocument.LineStackingStrategy*>종속성 속성입니다.</xref:System.Windows.Documents.FlowDocument.LineStackingStrategy*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty LineStackingStrategyProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.FlowDocument.LogicalChildren
  id: LogicalChildren
  parent: System.Windows.Documents.FlowDocument
  langs:
  - csharp
  name: LogicalChildren
  nameWithType: FlowDocument.LogicalChildren
  fullName: System.Windows.Documents.FlowDocument.LogicalChildren
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "논리 자식을 반복할 수 있는 열거자를 가져옵니다는 <xref href=&quot;System.Windows.Documents.FlowDocument&quot;> </xref>합니다."
  syntax:
    content: protected override System.Collections.IEnumerator LogicalChildren { get; }
    return:
      type: System.Collections.IEnumerator
      description: "논리 자식에 대 한 열거자입니다."
  overload: System.Windows.Documents.FlowDocument.LogicalChildren*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.FlowDocument.MaxPageHeight
  id: MaxPageHeight
  parent: System.Windows.Documents.FlowDocument
  langs:
  - csharp
  name: MaxPageHeight
  nameWithType: FlowDocument.MaxPageHeight
  fullName: System.Windows.Documents.FlowDocument.MaxPageHeight
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "페이지에 대 한 최대 높이 가져오거나 설정 합니다.는 <xref href=&quot;System.Windows.Documents.FlowDocument&quot;> </xref>합니다."
  remarks: "연속선상에서 본 경우는 <xref:System.Windows.Documents.FlowDocument.MinPageHeight%2A>속성 차례로 우선 MaxPageHeight 속성 보다 우선는 <xref:System.Windows.Documents.FlowDocument.PageHeight%2A>속성.</xref:System.Windows.Documents.FlowDocument.PageHeight%2A> </xref:System.Windows.Documents.FlowDocument.MinPageHeight%2A> 지정된 된 페이지에서 모든 세 가지 속성을 설정 하는 경우 이것이 속성 평가 되는 순서입니다.       이 속성은 no 하면 적용 <xref:System.Windows.Documents.FlowDocument.PageHeight%2A>로 설정 된 <xref:System.Double.NaN?displayProperty=fullName>(자동).</xref:System.Double.NaN?displayProperty=fullName> </xref:System.Windows.Documents.FlowDocument.PageHeight%2A>      <a name=&quot;xamlAttributeUsage_MaxPageHeight&quot;></a># # XAML 특성 사용 ```   <object MaxPageHeight=&quot;double&quot;/>   - or -   <object MaxPageHeight=&quot;qualifiedDouble&quot;/>   ``` <a name=&quot;xamlValues_MaxPageHeight&quot;> </a> # # XAML 값 *double* <xref:System.Double> <xref:System.Double>같고 <xref:System.Double.PositiveInfinity?displayProperty=fullName>.</xref:System.Double.PositiveInfinity?displayProperty=fullName> 0.0 보다 크거나 같은 값</xref:System.Double> 의 문자열 표현</xref:System.Double>           정규화 되지 않은 값은 장치 독립적 픽셀 단위로 지정 합니다. 문자열은 소수점이 하를 명시적으로 포함 하지 않아야 합니다.       *도* A *double* 단위 지정자 중 하나에 의해 다음 위에서 설명한 대로 값: `px`, `in`, `cm`, `pt`합니다.       `px`(기본값)은 [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)] `in` 인치; 1in 96px = = `cm` 센티미터; 1cm==(96/2.54) px `pt` 은 포인트; 1pt==(96/72) px <a name=&quot;dependencyPropertyInfo_MaxPageHeight&quot;> </a> # # 종속성 속성 정보 | | |   |-|-|   | 식별자 필드 | <xref:System.Windows.Documents.FlowDocument.MaxPageHeightProperty>|   | 메타 데이터 속성이 `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|</xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A> </xref:System.Windows.Documents.FlowDocument.MaxPageHeightProperty>       "
  example:
  - "The following example shows how to set the MaxPageHeight attribute of a <xref:System.Windows.Documents.FlowDocument> element.  \n  \n [!code-xml[FlowDocumentSnippets#_FlowDocumentPageWidthHeightXAML](~/add/codesnippet/xaml/FlowDocumentSnippets/Window1.xaml#_flowdocumentpagewidthheightxaml)]  \n  \n The following example shows how to set the MaxPageHeight property programmatically.  \n  \n [!code-cs[FlowDocumentSnippets#_FlowDocumentPageWidthHeight](~/add/codesnippet/csharp/FlowDocumentSnippets/Window1.xaml.cs#_flowdocumentpagewidthheight)]\n [!code-vb[FlowDocumentSnippets#_FlowDocumentPageWidthHeight](~/add/codesnippet/visualbasic/flowdocumentsnippets/window1.xaml.vb#_flowdocumentpagewidthheight)]"
  syntax:
    content: public double MaxPageHeight { get; set; }
    return:
      type: System.Double
      description: "페이지에 대 한 장치 독립적 픽셀의 최대 높이 <xref href=&quot;System.Windows.Documents.FlowDocument&quot;> </xref>합니다. 기본값은 &lt;xref:System.Double.PositiveInfinity?displayProperty=fullName&gt; (페이지 최고 높이 없음)."
  overload: System.Windows.Documents.FlowDocument.MaxPageHeight*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.FlowDocument.MaxPageHeightProperty
  id: MaxPageHeightProperty
  parent: System.Windows.Documents.FlowDocument
  langs:
  - csharp
  name: MaxPageHeightProperty
  nameWithType: FlowDocument.MaxPageHeightProperty
  fullName: System.Windows.Documents.FlowDocument.MaxPageHeightProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "식별 된 <xref:System.Windows.Documents.FlowDocument.MaxPageHeight*>종속성 속성입니다.</xref:System.Windows.Documents.FlowDocument.MaxPageHeight*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty MaxPageHeightProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.FlowDocument.MaxPageWidth
  id: MaxPageWidth
  parent: System.Windows.Documents.FlowDocument
  langs:
  - csharp
  name: MaxPageWidth
  nameWithType: FlowDocument.MaxPageWidth
  fullName: System.Windows.Documents.FlowDocument.MaxPageWidth
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "페이지에 대 한 최대 너비를 가져오거나 설정 합니다.는 <xref href=&quot;System.Windows.Documents.FlowDocument&quot;> </xref>합니다."
  remarks: "연속선상에서 본 경우는 <xref:System.Windows.Documents.FlowDocument.MinPageWidth%2A>속성 차례로 우선 MaxPageWidth 속성 보다 우선는 <xref:System.Windows.Documents.FlowDocument.PageWidth%2A>속성.</xref:System.Windows.Documents.FlowDocument.PageWidth%2A> </xref:System.Windows.Documents.FlowDocument.MinPageWidth%2A> 지정된 된 페이지에서 모든 세 가지 속성을 설정 하는 경우 이것이 속성 평가 되는 순서입니다.       이 속성은 no 하면 적용 <xref:System.Windows.Documents.FlowDocument.PageWidth%2A>로 설정 된 <xref:System.Double.NaN?displayProperty=fullName>(자동).</xref:System.Double.NaN?displayProperty=fullName> </xref:System.Windows.Documents.FlowDocument.PageWidth%2A>      <a name=&quot;xamlAttributeUsage_MaxPageWidth&quot;></a># # XAML 특성 사용 ```   <object MaxPageWidth=&quot;double&quot;/>   - or -   <object MaxPageWidth=&quot;qualifiedDouble&quot;/>   ``` <a name=&quot;xamlValues_MaxPageWidth&quot;> </a> # # XAML 값 *double* <xref:System.Double> <xref:System.Double>같고 <xref:System.Double.PositiveInfinity?displayProperty=fullName>.</xref:System.Double.PositiveInfinity?displayProperty=fullName> 0.0 보다 크거나 같은 값</xref:System.Double> 의 문자열 표현</xref:System.Double>           정규화 되지 않은 값은 장치 독립적 픽셀 단위로 지정 합니다. 문자열은 소수점이 하를 명시적으로 포함 하지 않아야 합니다.       *도* A *double* 단위 지정자 중 하나에 의해 다음 위에서 설명한 대로 값: `px`, `in`, `cm`, `pt`합니다.       `px`(기본값)은 [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)] `in` 인치; 1in 96px = = `cm` 센티미터; 1cm==(96/2.54) px `pt` 은 포인트; 1pt==(96/72) px <a name=&quot;dependencyPropertyInfo_MaxPageWidth&quot;> </a> # # 종속성 속성 정보 | | |   |-|-|   | 식별자 필드 | <xref:System.Windows.Documents.FlowDocument.MaxPageWidthProperty>|   | 메타 데이터 속성이 `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|</xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A> </xref:System.Windows.Documents.FlowDocument.MaxPageWidthProperty>       "
  example:
  - "The following example shows how to set the MaxPageWidth attribute of a <xref:System.Windows.Documents.FlowDocument> element.  \n  \n [!code-xml[FlowDocumentSnippets#_FlowDocumentPageWidthHeightXAML](~/add/codesnippet/xaml/FlowDocumentSnippets/Window1.xaml#_flowdocumentpagewidthheightxaml)]  \n  \n The following example shows how to set the MaxPageWidth property programmatically.  \n  \n [!code-cs[FlowDocumentSnippets#_FlowDocumentPageWidthHeight](~/add/codesnippet/csharp/FlowDocumentSnippets/Window1.xaml.cs#_flowdocumentpagewidthheight)]\n [!code-vb[FlowDocumentSnippets#_FlowDocumentPageWidthHeight](~/add/codesnippet/visualbasic/flowdocumentsnippets/window1.xaml.vb#_flowdocumentpagewidthheight)]"
  syntax:
    content: public double MaxPageWidth { get; set; }
    return:
      type: System.Double
      description: "페이지에 대 한 장치 독립적 픽셀의 최대 너비는 <xref href=&quot;System.Windows.Documents.FlowDocument&quot;> </xref>합니다. 기본값은 &lt;xref:System.Double.PositiveInfinity?displayProperty=fullName&gt; (최대 페이지 너비 없음)."
  overload: System.Windows.Documents.FlowDocument.MaxPageWidth*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.FlowDocument.MaxPageWidthProperty
  id: MaxPageWidthProperty
  parent: System.Windows.Documents.FlowDocument
  langs:
  - csharp
  name: MaxPageWidthProperty
  nameWithType: FlowDocument.MaxPageWidthProperty
  fullName: System.Windows.Documents.FlowDocument.MaxPageWidthProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "식별 된 <xref:System.Windows.Documents.FlowDocument.MaxPageWidth*>종속성 속성입니다.</xref:System.Windows.Documents.FlowDocument.MaxPageWidth*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty MaxPageWidthProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.FlowDocument.MinPageHeight
  id: MinPageHeight
  parent: System.Windows.Documents.FlowDocument
  langs:
  - csharp
  name: MinPageHeight
  nameWithType: FlowDocument.MinPageHeight
  fullName: System.Windows.Documents.FlowDocument.MinPageHeight
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "페이지에 대 한 최소 높이 가져오거나 설정 합니다.는 <xref href=&quot;System.Windows.Documents.FlowDocument&quot;> </xref>합니다."
  remarks: "연속선상에서 보는 경우 MinPageHeight 속성 보다 우선는 <xref:System.Windows.Documents.FlowDocument.MaxPageHeight%2A>차례로 우선 속성은 <xref:System.Windows.Documents.FlowDocument.PageHeight%2A>속성.</xref:System.Windows.Documents.FlowDocument.PageHeight%2A> </xref:System.Windows.Documents.FlowDocument.MaxPageHeight%2A> 지정된 된 페이지에서 모든 세 가지 속성을 설정 하는 경우 이것이 속성 평가 되는 순서입니다.       이 속성은 no 하면 적용 <xref:System.Windows.Documents.FlowDocument.PageHeight%2A>로 설정 된 <xref:System.Double.NaN?displayProperty=fullName>(자동).</xref:System.Double.NaN?displayProperty=fullName> </xref:System.Windows.Documents.FlowDocument.PageHeight%2A>      <a name=&quot;xamlAttributeUsage_MinPageHeight&quot;></a># # XAML 특성 사용 ```   <object MinPageHeight=&quot;double&quot;/>   - or -   <object MinPageHeight=&quot;qualifiedDouble&quot;/>   ``` <a name=&quot;xamlValues_MinPageHeight&quot;> </a> # # XAML 값 *double* <xref:System.Double> <xref:System.Double>같고 <xref:System.Double.PositiveInfinity?displayProperty=fullName>.</xref:System.Double.PositiveInfinity?displayProperty=fullName> 0.0 보다 크거나 같은 값</xref:System.Double> 의 문자열 표현</xref:System.Double>           정규화 되지 않은 값은 장치 독립적 픽셀 단위로 지정 합니다. 문자열은 소수점이 하를 명시적으로 포함 하지 않아야 합니다.       *도* A *double* 단위 지정자 중 하나에 의해 다음 위에서 설명한 대로 값: `px`, `in`, `cm`, `pt`합니다.       `px`(기본값)은 [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)] `in` 인치; 1in 96px = = `cm` 센티미터; 1cm==(96/2.54) px `pt` 은 포인트; 1pt==(96/72) px <a name=&quot;dependencyPropertyInfo_MinPageHeight&quot;> </a> # # 종속성 속성 정보 | | |   |-|-|   | 식별자 필드 | <xref:System.Windows.Documents.FlowDocument.MinPageHeightProperty>|   | 메타 데이터 속성이 `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|</xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A> </xref:System.Windows.Documents.FlowDocument.MinPageHeightProperty>       "
  example:
  - "The following example shows how to set the MinPageHeight attribute of a <xref:System.Windows.Documents.FlowDocument> element.  \n  \n [!code-xml[FlowDocumentSnippets#_FlowDocumentPageWidthHeightXAML](~/add/codesnippet/xaml/FlowDocumentSnippets/Window1.xaml#_flowdocumentpagewidthheightxaml)]  \n  \n The following example shows how to set the MinPageHeight property programmatically.  \n  \n [!code-cs[FlowDocumentSnippets#_FlowDocumentPageWidthHeight](~/add/codesnippet/csharp/FlowDocumentSnippets/Window1.xaml.cs#_flowdocumentpagewidthheight)]\n [!code-vb[FlowDocumentSnippets#_FlowDocumentPageWidthHeight](~/add/codesnippet/visualbasic/flowdocumentsnippets/window1.xaml.vb#_flowdocumentpagewidthheight)]"
  syntax:
    content: public double MinPageHeight { get; set; }
    return:
      type: System.Double
      description: "페이지에 대 한 장치 독립적 픽셀의 최소 높이 <xref href=&quot;System.Windows.Documents.FlowDocument&quot;> </xref>합니다. 기본값은 0.0입니다."
  overload: System.Windows.Documents.FlowDocument.MinPageHeight*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.FlowDocument.MinPageHeightProperty
  id: MinPageHeightProperty
  parent: System.Windows.Documents.FlowDocument
  langs:
  - csharp
  name: MinPageHeightProperty
  nameWithType: FlowDocument.MinPageHeightProperty
  fullName: System.Windows.Documents.FlowDocument.MinPageHeightProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "식별 된 <xref:System.Windows.Documents.FlowDocument.MinPageHeight*>종속성 속성입니다.</xref:System.Windows.Documents.FlowDocument.MinPageHeight*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty MinPageHeightProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.FlowDocument.MinPageWidth
  id: MinPageWidth
  parent: System.Windows.Documents.FlowDocument
  langs:
  - csharp
  name: MinPageWidth
  nameWithType: FlowDocument.MinPageWidth
  fullName: System.Windows.Documents.FlowDocument.MinPageWidth
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "페이지에 대 한 최소 너비를 가져오거나 설정 합니다.는 <xref href=&quot;System.Windows.Documents.FlowDocument&quot;> </xref>합니다."
  remarks: "연속선상에서 보는 경우 MinPageWidth 속성 보다 우선는 <xref:System.Windows.Documents.FlowDocument.MaxPageWidth%2A>차례로 우선 속성은 <xref:System.Windows.Documents.FlowDocument.PageWidth%2A>속성.</xref:System.Windows.Documents.FlowDocument.PageWidth%2A> </xref:System.Windows.Documents.FlowDocument.MaxPageWidth%2A> 지정된 된 페이지에서 모든 세 가지 속성을 설정 하는 경우 이것이 속성 평가 되는 순서입니다.       이 속성은 no 하면 적용 <xref:System.Windows.Documents.FlowDocument.PageWidth%2A>로 설정 된 <xref:System.Double.NaN?displayProperty=fullName>(자동).</xref:System.Double.NaN?displayProperty=fullName> </xref:System.Windows.Documents.FlowDocument.PageWidth%2A>      <a name=&quot;xamlAttributeUsage_MinPageWidth&quot;></a># # XAML 특성 사용 ```   <object MinPageWidth=&quot;double&quot;/>   - or -   <object MinPageWidth=&quot;qualifiedDouble&quot;/>   ``` <a name=&quot;xamlValues_MinPageWidth&quot;> </a> # # XAML 값 *double* <xref:System.Double> <xref:System.Double>같고 <xref:System.Double.PositiveInfinity?displayProperty=fullName>.</xref:System.Double.PositiveInfinity?displayProperty=fullName> 0.0 보다 크거나 같은 값</xref:System.Double> 의 문자열 표현</xref:System.Double>           정규화 되지 않은 값은 장치 독립적 픽셀 단위로 지정 합니다. 문자열은 소수점이 하를 명시적으로 포함 하지 않아야 합니다.       *도* A *double* 단위 지정자 중 하나에 의해 다음 위에서 설명한 대로 값: `px`, `in`, `cm`, `pt`합니다.       `px`(기본값)은 [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)] `in` 인치; 1in 96px = = `cm` 센티미터; 1cm==(96/2.54) px `pt` 은 포인트; 1pt==(96/72) px <a name=&quot;dependencyPropertyInfo_MinPageWidth&quot;> </a> # # 종속성 속성 정보 | | |   |-|-|   | 식별자 필드 | <xref:System.Windows.Documents.FlowDocument.MinPageWidthProperty>|   | 메타 데이터 속성이 `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|</xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A> </xref:System.Windows.Documents.FlowDocument.MinPageWidthProperty>       "
  example:
  - "The following example shows how to set the MinPageWidth attribute of a <xref:System.Windows.Documents.FlowDocument> element.  \n  \n [!code-xml[FlowDocumentSnippets#_FlowDocumentPageWidthHeightXAML](~/add/codesnippet/xaml/FlowDocumentSnippets/Window1.xaml#_flowdocumentpagewidthheightxaml)]  \n  \n The following example shows how to set the MinPageWidth property programmatically.  \n  \n [!code-cs[FlowDocumentSnippets#_FlowDocumentPageWidthHeight](~/add/codesnippet/csharp/FlowDocumentSnippets/Window1.xaml.cs#_flowdocumentpagewidthheight)]\n [!code-vb[FlowDocumentSnippets#_FlowDocumentPageWidthHeight](~/add/codesnippet/visualbasic/flowdocumentsnippets/window1.xaml.vb#_flowdocumentpagewidthheight)]"
  syntax:
    content: public double MinPageWidth { get; set; }
    return:
      type: System.Double
      description: "페이지에 대 한 장치 독립적 픽셀의 최소 너비는 <xref href=&quot;System.Windows.Documents.FlowDocument&quot;> </xref>합니다. 기본값은 0.0입니다."
  overload: System.Windows.Documents.FlowDocument.MinPageWidth*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.FlowDocument.MinPageWidthProperty
  id: MinPageWidthProperty
  parent: System.Windows.Documents.FlowDocument
  langs:
  - csharp
  name: MinPageWidthProperty
  nameWithType: FlowDocument.MinPageWidthProperty
  fullName: System.Windows.Documents.FlowDocument.MinPageWidthProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "식별 된 <xref:System.Windows.Documents.FlowDocument.MinPageWidth*>종속성 속성입니다.</xref:System.Windows.Documents.FlowDocument.MinPageWidth*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty MinPageWidthProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.FlowDocument.OnCreateAutomationPeer
  id: OnCreateAutomationPeer
  parent: System.Windows.Documents.FlowDocument
  langs:
  - csharp
  name: OnCreateAutomationPeer()
  nameWithType: FlowDocument.OnCreateAutomationPeer()
  fullName: System.Windows.Documents.FlowDocument.OnCreateAutomationPeer()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "파생된 클래스에서 재정의 되 면 제공 특정 <xref href=&quot;System.Windows.Automation.Peers.AutomationPeer&quot;> </xref> 구현에는 [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] 인프라입니다."
  remarks: "이 메서드의 구현은 특정 생성자를 호출 하는 일반적으로 <xref:System.Windows.Automation.Peers.AutomationPeer>구현 및 결과 반환 합니다.</xref:System.Windows.Automation.Peers.AutomationPeer>"
  syntax:
    content: protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();
    parameters: []
    return:
      type: System.Windows.Automation.Peers.AutomationPeer
      description: "형식별 <xref href=&quot;System.Windows.Automation.Peers.AutomationPeer&quot;> </xref> 구현 합니다."
  overload: System.Windows.Documents.FlowDocument.OnCreateAutomationPeer*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.FlowDocument.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  id: OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  parent: System.Windows.Documents.FlowDocument
  langs:
  - csharp
  name: OnPropertyChanged(DependencyPropertyChangedEventArgs)
  nameWithType: FlowDocument.OnPropertyChanged(DependencyPropertyChangedEventArgs)
  fullName: System.Windows.Documents.FlowDocument.OnPropertyChanged(DependencyPropertyChangedEventArgs)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "요소에 존재 하는 종속성 속성의 하나 이상의 유효 값이 변경 될 때 호출 됩니다."
  remarks: "이 메서드를 재정의 <xref:System.Windows.FrameworkContentElement.OnPropertyChanged%2A?displayProperty=fullName>.</xref:System.Windows.FrameworkContentElement.OnPropertyChanged%2A?displayProperty=fullName>"
  syntax:
    content: protected override sealed void OnPropertyChanged (System.Windows.DependencyPropertyChangedEventArgs e);
    parameters:
    - id: e
      type: System.Windows.DependencyPropertyChangedEventArgs
      description: "연결된 된 이벤트에 대 한 인수입니다."
  overload: System.Windows.Documents.FlowDocument.OnPropertyChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.FlowDocument.PageHeight
  id: PageHeight
  parent: System.Windows.Documents.FlowDocument
  langs:
  - csharp
  name: PageHeight
  nameWithType: FlowDocument.PageHeight
  fullName: System.Windows.Documents.FlowDocument.PageHeight
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "페이지에 대 한 기본 설정된 높이 가져오거나 설정 합니다.는 <xref href=&quot;System.Windows.Documents.FlowDocument&quot;> </xref>합니다."
  remarks: "연속선상에서 본 경우는 <xref:System.Windows.Documents.FlowDocument.MinPageHeight%2A>속성 보다 우선는 <xref:System.Windows.Documents.FlowDocument.MaxPageHeight%2A>속성에 우선 PageHeight 속성입니다.</xref:System.Windows.Documents.FlowDocument.MaxPageHeight%2A> </xref:System.Windows.Documents.FlowDocument.MinPageHeight%2A> 지정된 된 페이지에서 모든 세 가지 속성을 설정 하는 경우 이것이 속성 평가 되는 순서입니다.      <a name=&quot;xamlAttributeUsage_PageHeight&quot;></a># # XAML 특성 사용 ```   <object PageHeight=&quot;double&quot;/>   - or -   <object PageHeight=&quot;qualifiedDouble&quot;/>   - or -   <object PageHeight=&quot;Auto&quot;/>   ``` <a name=&quot;xamlValues_PageHeight&quot;> </a> # # XAML 값 *double* <xref:System.Double> <xref:System.Double>같고 <xref:System.Double.PositiveInfinity?displayProperty=fullName>.</xref:System.Double.PositiveInfinity?displayProperty=fullName> 0.0 보다 크거나 같은 값</xref:System.Double> 의 문자열 표현</xref:System.Double>           정규화 되지 않은 값은 장치 독립적 픽셀 단위로 지정 합니다. 문자열은 소수점이 하를 명시적으로 포함 하지 않아야 합니다.       *도* A *double* 단위 지정자 중 하나에 의해 다음 위에서 설명한 대로 값: `px`, `in`, `cm`, `pt`합니다.       `px`(기본값)은 [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)] `in` 인치; 1in 96px = = `cm` 센티미터; 1cm==(96/2.54) px `pt` 은 포인트; 1pt==(96/72) px *자동* 이면 페이지 높이가 자동으로 결정 됩니다.         <xref:System.Double.NaN?displayProperty=fullName>안내 하십시오.</xref:System.Double.NaN?displayProperty=fullName> 속성 값에 해당      <a name=&quot;dependencyPropertyInfo_PageHeight&quot;></a># # 종속성 속성 정보 | | |   |-|-|   | 식별자 필드 | <xref:System.Windows.Documents.FlowDocument.PageHeightProperty>|   | 메타 데이터 속성이 `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|</xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A> </xref:System.Windows.Documents.FlowDocument.PageHeightProperty>"
  example:
  - "The following example shows how to set the PageHeight attribute of a <xref:System.Windows.Documents.FlowDocument> element.  \n  \n [!code-xml[FlowDocumentSnippets#_FlowDocumentPageWidthHeightXAML](~/add/codesnippet/xaml/FlowDocumentSnippets/Window1.xaml#_flowdocumentpagewidthheightxaml)]  \n  \n The following example shows how to set the PageHeight property programmatically.  \n  \n [!code-cs[FlowDocumentSnippets#_FlowDocumentPageWidthHeight](~/add/codesnippet/csharp/FlowDocumentSnippets/Window1.xaml.cs#_flowdocumentpagewidthheight)]\n [!code-vb[FlowDocumentSnippets#_FlowDocumentPageWidthHeight](~/add/codesnippet/visualbasic/flowdocumentsnippets/window1.xaml.vb#_flowdocumentpagewidthheight)]"
  syntax:
    content: public double PageHeight { get; set; }
    return:
      type: System.Double
      description: "장치 독립적 픽셀 페이지에 대 한 기본 설정된 높이 <xref href=&quot;System.Windows.Documents.FlowDocument&quot;> </xref>합니다. 값이 &lt;xref:System.Double.NaN?displayProperty=fullName&gt; (의 특성 값에 해당 &quot;`Auto`&quot;) 이면 페이지 높이가 자동으로 결정 됩니다. 기본값은 &lt;xref:System.Double.NaN?displayProperty=fullName&gt;합니다."
  overload: System.Windows.Documents.FlowDocument.PageHeight*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.FlowDocument.PageHeightProperty
  id: PageHeightProperty
  parent: System.Windows.Documents.FlowDocument
  langs:
  - csharp
  name: PageHeightProperty
  nameWithType: FlowDocument.PageHeightProperty
  fullName: System.Windows.Documents.FlowDocument.PageHeightProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "식별 된 <xref:System.Windows.Documents.FlowDocument.PageHeight*>종속성 속성입니다.</xref:System.Windows.Documents.FlowDocument.PageHeight*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty PageHeightProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.FlowDocument.PagePadding
  id: PagePadding
  parent: System.Windows.Documents.FlowDocument
  langs:
  - csharp
  name: PagePadding
  nameWithType: FlowDocument.PagePadding
  fullName: System.Windows.Documents.FlowDocument.PagePadding
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "페이지의 경계와 페이지의 내용 사이의 안쪽 여백 두께 나타내는 값을 가져오거나 설정 합니다."
  remarks: "PagePadding 균일 하 게 모든 방향으로 설명할 수 있습니다 (`PagePadding=&quot;10&quot;`), 네 개의 왼쪽 방향을 나타내는 값을으로 위쪽, 오른쪽, 및 여백을 아래쪽 또는 (`PagePadding=&quot;5,0,10,20&quot;`).       지정한 안쪽 여백 두께 해당 페이지 크기를 초과 하는 경우 (예를 들어 왼쪽 및 오른쪽 안쪽 여백 너비의 합계는 페이지 너비 초과)의 안쪽 여백 두께 비례적으로 줄어듭니다 관련 페이지 크기 보다 더 클 수 있습니다.      <a name=&quot;xamlAttributeUsage_PagePadding&quot;></a># # XAML 특성 사용 ```   <object PagePadding=&quot;uniformThickness&quot;/>   - or -   <object PagePadding=&quot;independentThickness&quot;/>   - or -   <object PagePadding=&quot;qualifiedUniformThickness&quot;/>   - or -   <object PagePadding=&quot;qualifiedIndependentThickness&quot;/>   ``` <a name=&quot;xamlValues_PagePadding&quot;> </a> # # XAML 값 *uniformThickness* 단일의 문자열 표현 <xref:System.Double>네 가지 두께에 균일 하 게 적용할 값입니다.</xref:System.Double>        예를 들어 값 `&quot;10&quot;` 의 값에 해당 `&quot;10,10,10,10&quot;`합니다.  정규화 되지 않은 값은 장치 독립적 픽셀 단위로 지정 합니다. 문자열은 소수점이 하를 명시적으로 포함 하지 않아야 합니다.       *independentThickness* 정렬&4;의 문자열 표현 <xref:System.Double>왼쪽, 위쪽에 대 한 각 두께 차원에 해당 하는 값 오른쪽이 순서 대로 아래쪽.</xref:System.Double>  4 개의 값; 쉼표로 구분 해야 합니다. 공백은 허용 되지 않습니다.  예를 들어 &quot;5,10,15,20&quot;의 결과 안쪽 5 픽셀의 콘텐츠, 콘텐츠 위쪽 여백 10 픽셀, 콘텐츠, 오른쪽 안쪽 여백 15 픽셀 및 콘텐츠 아래쪽 여백 20 픽셀 왼쪽입니다.       *qualifiedUniformThickness* 에서 설명 하는 값 *uniformThickness* 단위 지정자 중 하나: `px`, `in`합니다.       `px`(기본값)은 [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)] `in` 인치; 1in 예를 들어 96px = = `&quot;1in&quot;` 모든 방향으로 1 인치의 uniform 안쪽 여백을 제공 합니다.              *qualifiedIndependentThickness* 에서 설명 하는 값 *independentThickness*, 각 독립적인 값이 다음에 다음과 같은 단위 지정자 중 하나: `px`, `in`합니다.       `px`(기본값)은 [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)] `in` 인치; 1in 예를 들어 96px = = `&quot;1.5in,0.8in,1.5in,0.8in&quot;`합니다.         단위 지정자 혼합 또는 하나 이상의 값에서 생략 될 수 있습니다.      <a name=&quot;dependencyPropertyInfo_PagePadding&quot;></a># # 종속성 속성 정보 | | |   |-|-|   | 식별자 필드 | <xref:System.Windows.Documents.FlowDocument.PagePaddingProperty>|   | 메타 데이터 속성이 `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|</xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A> </xref:System.Windows.Documents.FlowDocument.PagePaddingProperty>"
  example:
  - "The following examples show various ways to set the PagePadding attribute of a <xref:System.Windows.Documents.FlowDocument> element.  \n  \n [!code-xml[FlowDocumentSnippets#_FlowDocumentPaddingXAML](~/add/codesnippet/xaml/FlowDocumentSnippets/Window1.xaml#_flowdocumentpaddingxaml)]  \n  \n The following example shows how to set the PagePadding property programmatically.  \n  \n [!code-cs[FlowDocumentSnippets#_FlowDocumentPadding](~/add/codesnippet/csharp/FlowDocumentSnippets/Window1.xaml.cs#_flowdocumentpadding)]\n [!code-vb[FlowDocumentSnippets#_FlowDocumentPadding](~/add/codesnippet/visualbasic/flowdocumentsnippets/window1.xaml.vb#_flowdocumentpadding)]"
  syntax:
    content: public System.Windows.Thickness PagePadding { get; set; }
    return:
      type: System.Windows.Thickness
      description: "A <xref href=&quot;System.Windows.Thickness&quot;> </xref> 적용할 안쪽 여백의 양을 장치 독립적 픽셀 단위로 지정 하는 구조입니다. 기본값은 균일 두께 (0.0)입니다."
  overload: System.Windows.Documents.FlowDocument.PagePadding*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.FlowDocument.PagePaddingProperty
  id: PagePaddingProperty
  parent: System.Windows.Documents.FlowDocument
  langs:
  - csharp
  name: PagePaddingProperty
  nameWithType: FlowDocument.PagePaddingProperty
  fullName: System.Windows.Documents.FlowDocument.PagePaddingProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "식별 된 <xref:System.Windows.Documents.FlowDocument.PagePadding*>종속성 속성입니다.</xref:System.Windows.Documents.FlowDocument.PagePadding*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty PagePaddingProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.FlowDocument.PageWidth
  id: PageWidth
  parent: System.Windows.Documents.FlowDocument
  langs:
  - csharp
  name: PageWidth
  nameWithType: FlowDocument.PageWidth
  fullName: System.Windows.Documents.FlowDocument.PageWidth
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "페이지에 대 한 기본 설정된 너비를 가져오거나 설정 합니다.는 <xref href=&quot;System.Windows.Documents.FlowDocument&quot;> </xref>합니다."
  remarks: "연속선상에서 본 경우는 <xref:System.Windows.Documents.FlowDocument.MinPageWidth%2A>속성 보다 우선는 <xref:System.Windows.Documents.FlowDocument.MaxPageWidth%2A>속성에 우선 PageWidth 속성입니다.</xref:System.Windows.Documents.FlowDocument.MaxPageWidth%2A> </xref:System.Windows.Documents.FlowDocument.MinPageWidth%2A> 지정된 된 페이지에서 모든 세 가지 속성을 설정 하는 경우 이것이 속성 평가 되는 순서입니다.      <a name=&quot;xamlAttributeUsage_PageWidth&quot;></a># # XAML 특성 사용 ```   <object PageWidth=&quot;double&quot;/>   - or -   <object PageWidth=&quot;qualifiedDouble&quot;/>   - or -   <object PageWidth=&quot;Auto&quot;/>   ``` <a name=&quot;xamlValues_PageWidth&quot;> </a> # # XAML 값 *double* <xref:System.Double> <xref:System.Double>같고 <xref:System.Double.PositiveInfinity?displayProperty=fullName>.</xref:System.Double.PositiveInfinity?displayProperty=fullName> 0.0 보다 크거나 같은 값</xref:System.Double> 의 문자열 표현</xref:System.Double>           정규화 되지 않은 값은 장치 독립적 픽셀 단위로 지정 합니다. 문자열은 소수점이 하를 명시적으로 포함 하지 않아야 합니다.       *도* A *double* 단위 지정자 중 하나에 의해 다음 위에서 설명한 대로 값: `px`, `in`, `cm`, `pt`합니다.       `px`(기본값)은 [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)] `in` 인치; 1in 96px = = `cm` 센티미터; 1cm==(96/2.54) px `pt` 은 포인트; 1pt==(96/72) px *자동* 이면 페이지 너비가 자동으로 결정 됩니다.         <xref:System.Double.NaN?displayProperty=fullName>안내 하십시오.</xref:System.Double.NaN?displayProperty=fullName> 속성 값에 해당      <a name=&quot;dependencyPropertyInfo_PageWidth&quot;></a># # 종속성 속성 정보 | | |   |-|-|   | 식별자 필드 | <xref:System.Windows.Documents.FlowDocument.PageWidthProperty>|   | 메타 데이터 속성이 `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|</xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A> </xref:System.Windows.Documents.FlowDocument.PageWidthProperty>"
  example:
  - "The following example shows how to set the PageWidth attribute of a <xref:System.Windows.Documents.FlowDocument> element.  \n  \n [!code-xml[FlowDocumentSnippets#_FlowDocumentPageWidthHeightXAML](~/add/codesnippet/xaml/FlowDocumentSnippets/Window1.xaml#_flowdocumentpagewidthheightxaml)]  \n  \n The following example shows how to set the PageWidth property programmatically.  \n  \n [!code-cs[FlowDocumentSnippets#_FlowDocumentPageWidthHeight](~/add/codesnippet/csharp/FlowDocumentSnippets/Window1.xaml.cs#_flowdocumentpagewidthheight)]\n [!code-vb[FlowDocumentSnippets#_FlowDocumentPageWidthHeight](~/add/codesnippet/visualbasic/flowdocumentsnippets/window1.xaml.vb#_flowdocumentpagewidthheight)]"
  syntax:
    content: public double PageWidth { get; set; }
    return:
      type: System.Double
      description: "기본 설정된 너비 페이지에 대 한 장치 독립적 픽셀의 <xref href=&quot;System.Windows.Documents.FlowDocument&quot;> </xref>합니다. 값이 &lt;xref:System.Double.NaN?displayProperty=fullName&gt; (의 특성 값에 해당 &quot;`Auto`&quot;) 이면 페이지 너비가 자동으로 결정 됩니다. 기본값은 &lt;xref:System.Double.NaN?displayProperty=fullName&gt;합니다."
  overload: System.Windows.Documents.FlowDocument.PageWidth*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.FlowDocument.PageWidthProperty
  id: PageWidthProperty
  parent: System.Windows.Documents.FlowDocument
  langs:
  - csharp
  name: PageWidthProperty
  nameWithType: FlowDocument.PageWidthProperty
  fullName: System.Windows.Documents.FlowDocument.PageWidthProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "식별 된 <xref:System.Windows.Documents.FlowDocument.PageWidth*>종속성 속성입니다.</xref:System.Windows.Documents.FlowDocument.PageWidth*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty PageWidthProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.FlowDocument.SetDpi(System.Windows.DpiScale)
  id: SetDpi(System.Windows.DpiScale)
  parent: System.Windows.Documents.FlowDocument
  langs:
  - csharp
  name: SetDpi(DpiScale)
  nameWithType: FlowDocument.SetDpi(DpiScale)
  fullName: System.Windows.Documents.FlowDocument.SetDpi(DpiScale)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "트리거되고 하 고 렌더링 하는 FlowDocument에 대 한 DPI를 설정 합니다."
  remarks: "당 모니터 DPI 시나리오에서 사용 해야 합니다."
  syntax:
    content: public void SetDpi (System.Windows.DpiScale dpiInfo);
    parameters:
    - id: dpiInfo
      type: System.Windows.DpiScale
      description: "DPI 설정으로에서 있는 <xref href=&quot;System.Windows.Media.Visual&quot;> </xref> 또는 <xref href=&quot;System.Windows.UIElement&quot;> </xref> 렌더링 됩니다."
  overload: System.Windows.Documents.FlowDocument.SetDpi*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.FlowDocument.System#IServiceProvider#GetService(System.Type)
  id: System#IServiceProvider#GetService(System.Type)
  isEii: true
  parent: System.Windows.Documents.FlowDocument
  langs:
  - csharp
  name: System.IServiceProvider.GetService(Type)
  nameWithType: FlowDocument.System.IServiceProvider.GetService(Type)
  fullName: System.Windows.Documents.FlowDocument.System.IServiceProvider.GetService(Type)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "지정 된 형식의 서비스 개체를 가져옵니다."
  syntax:
    content: object IServiceProvider.GetService (Type serviceType);
    parameters:
    - id: serviceType
      type: System.Type
      description: "가져올 서비스 개체의 형식을 지정 하는 개체입니다."
    return:
      type: System.Object
      description: "형식의 서비스 개체가 <code> serviceType. </code> -또는- <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 형식의 서비스 개체가 없는 경우 <code> serviceType </code>합니다."
  overload: System.Windows.Documents.FlowDocument.System#IServiceProvider#GetService*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.FlowDocument.System#Windows#Documents#IDocumentPaginatorSource#DocumentPaginator
  id: System#Windows#Documents#IDocumentPaginatorSource#DocumentPaginator
  isEii: true
  parent: System.Windows.Documents.FlowDocument
  langs:
  - csharp
  name: System.Windows.Documents.IDocumentPaginatorSource.DocumentPaginator
  nameWithType: FlowDocument.System.Windows.Documents.IDocumentPaginatorSource.DocumentPaginator
  fullName: System.Windows.Documents.FlowDocument.System.Windows.Documents.IDocumentPaginatorSource.DocumentPaginator
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "실제 콘텐츠 페이지 매기기를 수행 하는 원본 개체를 정의 합니다."
  syntax:
    content: System.Windows.Documents.DocumentPaginator System.Windows.Documents.IDocumentPaginatorSource.DocumentPaginator { get; }
    return:
      type: System.Windows.Documents.DocumentPaginator
      description: "실제 콘텐츠 페이지 매기기를 수행 하는 개체입니다."
  overload: System.Windows.Documents.FlowDocument.System#Windows#Documents#IDocumentPaginatorSource#DocumentPaginator*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.FlowDocument.System#Windows#Markup#IAddChild#AddChild(System.Object)
  id: System#Windows#Markup#IAddChild#AddChild(System.Object)
  isEii: true
  parent: System.Windows.Documents.FlowDocument
  langs:
  - csharp
  name: System.Windows.Markup.IAddChild.AddChild(Object)
  nameWithType: FlowDocument.System.Windows.Markup.IAddChild.AddChild(Object)
  fullName: System.Windows.Documents.FlowDocument.System.Windows.Markup.IAddChild.AddChild(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "자식 개체를 추가 합니다."
  syntax:
    content: void IAddChild.AddChild (object value);
    parameters:
    - id: value
      type: System.Object
      description: "추가할 자식 개체입니다."
  overload: System.Windows.Documents.FlowDocument.System#Windows#Markup#IAddChild#AddChild*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.FlowDocument.System#Windows#Markup#IAddChild#AddText(System.String)
  id: System#Windows#Markup#IAddChild#AddText(System.String)
  isEii: true
  parent: System.Windows.Documents.FlowDocument
  langs:
  - csharp
  name: System.Windows.Markup.IAddChild.AddText(String)
  nameWithType: FlowDocument.System.Windows.Markup.IAddChild.AddText(String)
  fullName: System.Windows.Documents.FlowDocument.System.Windows.Markup.IAddChild.AddText(String)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "개체에 있는 노드의 텍스트 콘텐츠를 추가합니다."
  syntax:
    content: void IAddChild.AddText (string text);
    parameters:
    - id: text
      type: System.String
      description: "개체에 추가할 텍스트입니다."
  overload: System.Windows.Documents.FlowDocument.System#Windows#Markup#IAddChild#AddText*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.FlowDocument.TextAlignment
  id: TextAlignment
  parent: System.Windows.Documents.FlowDocument
  langs:
  - csharp
  name: TextAlignment
  nameWithType: FlowDocument.TextAlignment
  fullName: System.Windows.Documents.FlowDocument.TextAlignment
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "텍스트 콘텐츠의 가로 맞춤을 나타내는 값을 가져오거나 설정 합니다."
  remarks: "<a name=&quot;dependencyPropertyInfo_TextAlignment&quot;></a># # 종속성 속성 정보 | | |   |-|-|   | 식별자 필드 | <xref:System.Windows.Documents.FlowDocument.TextAlignmentProperty>|   | 메타 데이터 속성이 `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A> <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|</xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A> </xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A> ,</xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A> </xref:System.Windows.Documents.FlowDocument.TextAlignmentProperty>"
  example:
  - "The following example shows how to set the TextAlignment attribute of a <xref:System.Windows.Documents.FlowDocument> element.  \n  \n [!code-xml[FlowDocumentSnippets#_FlowDocumentTextAlignmentXAML](~/add/codesnippet/xaml/FlowDocumentSnippets/Window1.xaml#_flowdocumenttextalignmentxaml)]  \n  \n The following figure shows how the preceding <xref:System.Windows.Documents.FlowDocument> renders with <xref:System.Windows.TextAlignment> text alignment (the default).  \n  \n ![Screenshot: TextAlign property value of Left](~/add/media/flowdoc-textalign-left.png \"Screenshot: TextAlign property value of Left\")  \n  \n The following figure shows how the same <xref:System.Windows.Documents.FlowDocument> renders with <xref:System.Windows.TextAlignment> text alignment.  \n  \n ![Screenshot: TextAlign value of Right](~/add/media/flowdoc-textalign-right.png \"Screenshot: TextAlign value of Right\")  \n  \n The following figure shows how the same <xref:System.Windows.Documents.FlowDocument> renders with <xref:System.Windows.TextAlignment> text alignment.  \n  \n ![Screenshot: TextAlign property value of Center](~/add/media/flowdoc-textalign-center.png \"Screenshot: TextAlign property value of Center\")  \n  \n The following example shows how to set the TextAlignment property programmatically.  \n  \n [!code-cs[FlowDocumentSnippets#_FlowDocumentTextAlignment](~/add/codesnippet/csharp/FlowDocumentSnippets/Window1.xaml.cs#_flowdocumenttextalignment)]\n [!code-vb[FlowDocumentSnippets#_FlowDocumentTextAlignment](~/add/codesnippet/visualbasic/flowdocumentsnippets/window1.xaml.vb#_flowdocumenttextalignment)]"
  syntax:
    content: public System.Windows.TextAlignment TextAlignment { get; set; }
    return:
      type: System.Windows.TextAlignment
      description: "중 하나는 <xref href=&quot;System.Windows.TextAlignment&quot;> </xref> 원하는 맞춤을 지정 하는 값입니다. 기본값은 <xref href=&quot;System.Windows.TextAlignment&quot;> </xref>합니다."
  overload: System.Windows.Documents.FlowDocument.TextAlignment*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.FlowDocument.TextAlignmentProperty
  id: TextAlignmentProperty
  parent: System.Windows.Documents.FlowDocument
  langs:
  - csharp
  name: TextAlignmentProperty
  nameWithType: FlowDocument.TextAlignmentProperty
  fullName: System.Windows.Documents.FlowDocument.TextAlignmentProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "식별 된 <xref:System.Windows.Documents.FlowDocument.TextAlignment*>종속성 속성입니다.</xref:System.Windows.Documents.FlowDocument.TextAlignment*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty TextAlignmentProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.FlowDocument.TextEffects
  id: TextEffects
  parent: System.Windows.Documents.FlowDocument
  langs:
  - csharp
  name: TextEffects
  nameWithType: FlowDocument.TextEffects
  fullName: System.Windows.Documents.FlowDocument.TextEffects
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "텍스트에 적용할 효과 가져오거나 설정 합니다.는 <xref href=&quot;System.Windows.Documents.FlowDocument&quot;> </xref>합니다."
  remarks: "<a name=&quot;dependencyPropertyInfo_TextEffects&quot;></a># # 종속성 속성 정보 | | |   |-|-|   | 식별자 필드 | <xref:System.Windows.Documents.FlowDocument.TextEffectsProperty>|   | 메타 데이터 속성이 `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>|</xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A> </xref:System.Windows.Documents.FlowDocument.TextEffectsProperty>"
  syntax:
    content: public System.Windows.Media.TextEffectCollection TextEffects { get; set; }
    return:
      type: System.Windows.Media.TextEffectCollection
      description: "A <xref href=&quot;System.Windows.Media.TextEffectCollection&quot;> </xref> 하나 이상 포함 된 <xref href=&quot;System.Windows.Media.TextEffect&quot;> </xref> 의 텍스트에 적용할 효과를 정의 하는 개체는 <xref href=&quot;System.Windows.Documents.FlowDocument&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> (효과가 적용)."
  overload: System.Windows.Documents.FlowDocument.TextEffects*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.FlowDocument.TextEffectsProperty
  id: TextEffectsProperty
  parent: System.Windows.Documents.FlowDocument
  langs:
  - csharp
  name: TextEffectsProperty
  nameWithType: FlowDocument.TextEffectsProperty
  fullName: System.Windows.Documents.FlowDocument.TextEffectsProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "식별 된 <xref:System.Windows.Documents.FlowDocument.TextEffects*>종속성 속성입니다.</xref:System.Windows.Documents.FlowDocument.TextEffects*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty TextEffectsProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.FlowDocument.Typography
  id: Typography
  parent: System.Windows.Documents.FlowDocument
  langs:
  - csharp
  name: Typography
  nameWithType: FlowDocument.Typography
  fullName: System.Windows.Documents.FlowDocument.Typography
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "텍스트 내용에 대 한 현재 유효한 입력 체계 변형을 가져옵니다는 <xref href=&quot;System.Windows.Documents.FlowDocument&quot;> </xref>합니다."
  remarks: "입력 체계 속성에만 적용 됩니다. [!INCLUDE[TLA#tla_opentype](~/add/includes/tlasharptla-opentype-md.md)] 글꼴입니다. 입력 체계 variant variant를 지원 하지 않는 글꼴에는 영향이 없습니다.  이 항목에 대 한 자세한 내용은 참조 하십시오. [wpf에서 입력 체계](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following example shows how to set various typography variations with the Typography attribute of a <xref:System.Windows.Documents.FlowDocument> element.  \n  \n [!code-xml[FlowDocumentSnippets#_FlowDocumentTypographyXAML](~/add/codesnippet/xaml/FlowDocumentSnippets/Window1.xaml#_flowdocumenttypographyxaml)]  \n  \n The following example shows how to set various aspects of the Typography property programmatically.  \n  \n [!code-cs[FlowDocumentSnippets#_FlowDocumentTypography](~/add/codesnippet/csharp/FlowDocumentSnippets/Window1.xaml.cs#_flowdocumenttypography)]\n [!code-vb[FlowDocumentSnippets#_FlowDocumentTypography](~/add/codesnippet/visualbasic/flowdocumentsnippets/window1.xaml.vb#_flowdocumenttypography)]"
  syntax:
    content: public System.Windows.Documents.Typography Typography { get; }
    return:
      type: System.Windows.Documents.Typography
      description: "A <xref href=&quot;System.Windows.Documents.Typography&quot;> </xref> 현재 유효한 입력 체계 변형을 지정 하는 개체입니다. 목록이 기본 입력 체계 값에 대 한 참조 <xref href=&quot;System.Windows.Documents.Typography&quot;> </xref>합니다."
  overload: System.Windows.Documents.FlowDocument.Typography*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.FrameworkContentElement
  isExternal: false
  name: System.Windows.FrameworkContentElement
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Windows.Documents.FlowDocument.#ctor
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: FlowDocument()
  nameWithType: FlowDocument.FlowDocument()
  fullName: System.Windows.Documents.FlowDocument.FlowDocument()
- uid: System.Windows.Documents.FlowDocument.#ctor(System.Windows.Documents.Block)
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: FlowDocument(Block)
  nameWithType: FlowDocument.FlowDocument(Block)
  fullName: System.Windows.Documents.FlowDocument.FlowDocument(Block)
- uid: System.Windows.Documents.Block
  parent: System.Windows.Documents
  isExternal: false
  name: Block
  nameWithType: Block
  fullName: System.Windows.Documents.Block
- uid: System.Windows.Documents.FlowDocument.Background
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: Background
  nameWithType: FlowDocument.Background
  fullName: System.Windows.Documents.FlowDocument.Background
- uid: System.Windows.Media.Brush
  parent: System.Windows.Media
  isExternal: false
  name: Brush
  nameWithType: Brush
  fullName: System.Windows.Media.Brush
- uid: System.Windows.Documents.FlowDocument.BackgroundProperty
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: BackgroundProperty
  nameWithType: FlowDocument.BackgroundProperty
  fullName: System.Windows.Documents.FlowDocument.BackgroundProperty
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.Documents.FlowDocument.Blocks
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: Blocks
  nameWithType: FlowDocument.Blocks
  fullName: System.Windows.Documents.FlowDocument.Blocks
- uid: System.Windows.Documents.BlockCollection
  parent: System.Windows.Documents
  isExternal: false
  name: BlockCollection
  nameWithType: BlockCollection
  fullName: System.Windows.Documents.BlockCollection
- uid: System.Windows.Documents.FlowDocument.ColumnGap
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: ColumnGap
  nameWithType: FlowDocument.ColumnGap
  fullName: System.Windows.Documents.FlowDocument.ColumnGap
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.Documents.FlowDocument.ColumnGapProperty
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: ColumnGapProperty
  nameWithType: FlowDocument.ColumnGapProperty
  fullName: System.Windows.Documents.FlowDocument.ColumnGapProperty
- uid: System.Windows.Documents.FlowDocument.ColumnRuleBrush
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: ColumnRuleBrush
  nameWithType: FlowDocument.ColumnRuleBrush
  fullName: System.Windows.Documents.FlowDocument.ColumnRuleBrush
- uid: System.Windows.Documents.FlowDocument.ColumnRuleBrushProperty
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: ColumnRuleBrushProperty
  nameWithType: FlowDocument.ColumnRuleBrushProperty
  fullName: System.Windows.Documents.FlowDocument.ColumnRuleBrushProperty
- uid: System.Windows.Documents.FlowDocument.ColumnRuleWidth
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: ColumnRuleWidth
  nameWithType: FlowDocument.ColumnRuleWidth
  fullName: System.Windows.Documents.FlowDocument.ColumnRuleWidth
- uid: System.Windows.Documents.FlowDocument.ColumnRuleWidthProperty
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: ColumnRuleWidthProperty
  nameWithType: FlowDocument.ColumnRuleWidthProperty
  fullName: System.Windows.Documents.FlowDocument.ColumnRuleWidthProperty
- uid: System.Windows.Documents.FlowDocument.ColumnWidth
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: ColumnWidth
  nameWithType: FlowDocument.ColumnWidth
  fullName: System.Windows.Documents.FlowDocument.ColumnWidth
- uid: System.Windows.Documents.FlowDocument.ColumnWidthProperty
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: ColumnWidthProperty
  nameWithType: FlowDocument.ColumnWidthProperty
  fullName: System.Windows.Documents.FlowDocument.ColumnWidthProperty
- uid: System.Windows.Documents.FlowDocument.ContentEnd
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: ContentEnd
  nameWithType: FlowDocument.ContentEnd
  fullName: System.Windows.Documents.FlowDocument.ContentEnd
- uid: System.Windows.Documents.TextPointer
  parent: System.Windows.Documents
  isExternal: false
  name: TextPointer
  nameWithType: TextPointer
  fullName: System.Windows.Documents.TextPointer
- uid: System.Windows.Documents.FlowDocument.ContentStart
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: ContentStart
  nameWithType: FlowDocument.ContentStart
  fullName: System.Windows.Documents.FlowDocument.ContentStart
- uid: System.Windows.Documents.FlowDocument.FlowDirection
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: FlowDirection
  nameWithType: FlowDocument.FlowDirection
  fullName: System.Windows.Documents.FlowDocument.FlowDirection
- uid: System.Windows.FlowDirection
  parent: System.Windows
  isExternal: false
  name: FlowDirection
  nameWithType: FlowDirection
  fullName: System.Windows.FlowDirection
- uid: System.Windows.Documents.FlowDocument.FlowDirectionProperty
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: FlowDirectionProperty
  nameWithType: FlowDocument.FlowDirectionProperty
  fullName: System.Windows.Documents.FlowDocument.FlowDirectionProperty
- uid: System.Windows.Documents.FlowDocument.FontFamily
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: FontFamily
  nameWithType: FlowDocument.FontFamily
  fullName: System.Windows.Documents.FlowDocument.FontFamily
- uid: System.Windows.Media.FontFamily
  parent: System.Windows.Media
  isExternal: false
  name: FontFamily
  nameWithType: FontFamily
  fullName: System.Windows.Media.FontFamily
- uid: System.Windows.Documents.FlowDocument.FontFamilyProperty
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: FontFamilyProperty
  nameWithType: FlowDocument.FontFamilyProperty
  fullName: System.Windows.Documents.FlowDocument.FontFamilyProperty
- uid: System.Windows.Documents.FlowDocument.FontSize
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: FontSize
  nameWithType: FlowDocument.FontSize
  fullName: System.Windows.Documents.FlowDocument.FontSize
- uid: System.Windows.Documents.FlowDocument.FontSizeProperty
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: FontSizeProperty
  nameWithType: FlowDocument.FontSizeProperty
  fullName: System.Windows.Documents.FlowDocument.FontSizeProperty
- uid: System.Windows.Documents.FlowDocument.FontStretch
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: FontStretch
  nameWithType: FlowDocument.FontStretch
  fullName: System.Windows.Documents.FlowDocument.FontStretch
- uid: System.Windows.FontStretch
  parent: System.Windows
  isExternal: false
  name: FontStretch
  nameWithType: FontStretch
  fullName: System.Windows.FontStretch
- uid: System.Windows.Documents.FlowDocument.FontStretchProperty
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: FontStretchProperty
  nameWithType: FlowDocument.FontStretchProperty
  fullName: System.Windows.Documents.FlowDocument.FontStretchProperty
- uid: System.Windows.Documents.FlowDocument.FontStyle
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: FontStyle
  nameWithType: FlowDocument.FontStyle
  fullName: System.Windows.Documents.FlowDocument.FontStyle
- uid: System.Windows.FontStyle
  parent: System.Windows
  isExternal: false
  name: FontStyle
  nameWithType: FontStyle
  fullName: System.Windows.FontStyle
- uid: System.Windows.Documents.FlowDocument.FontStyleProperty
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: FontStyleProperty
  nameWithType: FlowDocument.FontStyleProperty
  fullName: System.Windows.Documents.FlowDocument.FontStyleProperty
- uid: System.Windows.Documents.FlowDocument.FontWeight
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: FontWeight
  nameWithType: FlowDocument.FontWeight
  fullName: System.Windows.Documents.FlowDocument.FontWeight
- uid: System.Windows.FontWeight
  parent: System.Windows
  isExternal: false
  name: FontWeight
  nameWithType: FontWeight
  fullName: System.Windows.FontWeight
- uid: System.Windows.Documents.FlowDocument.FontWeightProperty
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: FontWeightProperty
  nameWithType: FlowDocument.FontWeightProperty
  fullName: System.Windows.Documents.FlowDocument.FontWeightProperty
- uid: System.Windows.Documents.FlowDocument.Foreground
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: Foreground
  nameWithType: FlowDocument.Foreground
  fullName: System.Windows.Documents.FlowDocument.Foreground
- uid: System.Windows.Documents.FlowDocument.ForegroundProperty
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: ForegroundProperty
  nameWithType: FlowDocument.ForegroundProperty
  fullName: System.Windows.Documents.FlowDocument.ForegroundProperty
- uid: System.Windows.Documents.FlowDocument.IsColumnWidthFlexible
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: IsColumnWidthFlexible
  nameWithType: FlowDocument.IsColumnWidthFlexible
  fullName: System.Windows.Documents.FlowDocument.IsColumnWidthFlexible
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Documents.FlowDocument.IsColumnWidthFlexibleProperty
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: IsColumnWidthFlexibleProperty
  nameWithType: FlowDocument.IsColumnWidthFlexibleProperty
  fullName: System.Windows.Documents.FlowDocument.IsColumnWidthFlexibleProperty
- uid: System.Windows.Documents.FlowDocument.IsEnabledCore
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: IsEnabledCore
  nameWithType: FlowDocument.IsEnabledCore
  fullName: System.Windows.Documents.FlowDocument.IsEnabledCore
- uid: System.Windows.Documents.FlowDocument.IsHyphenationEnabled
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: IsHyphenationEnabled
  nameWithType: FlowDocument.IsHyphenationEnabled
  fullName: System.Windows.Documents.FlowDocument.IsHyphenationEnabled
- uid: System.Windows.Documents.FlowDocument.IsHyphenationEnabledProperty
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: IsHyphenationEnabledProperty
  nameWithType: FlowDocument.IsHyphenationEnabledProperty
  fullName: System.Windows.Documents.FlowDocument.IsHyphenationEnabledProperty
- uid: System.Windows.Documents.FlowDocument.IsOptimalParagraphEnabled
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: IsOptimalParagraphEnabled
  nameWithType: FlowDocument.IsOptimalParagraphEnabled
  fullName: System.Windows.Documents.FlowDocument.IsOptimalParagraphEnabled
- uid: System.Windows.Documents.FlowDocument.IsOptimalParagraphEnabledProperty
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: IsOptimalParagraphEnabledProperty
  nameWithType: FlowDocument.IsOptimalParagraphEnabledProperty
  fullName: System.Windows.Documents.FlowDocument.IsOptimalParagraphEnabledProperty
- uid: System.Windows.Documents.FlowDocument.LineHeight
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: LineHeight
  nameWithType: FlowDocument.LineHeight
  fullName: System.Windows.Documents.FlowDocument.LineHeight
- uid: System.Windows.Documents.FlowDocument.LineHeightProperty
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: LineHeightProperty
  nameWithType: FlowDocument.LineHeightProperty
  fullName: System.Windows.Documents.FlowDocument.LineHeightProperty
- uid: System.Windows.Documents.FlowDocument.LineStackingStrategy
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: LineStackingStrategy
  nameWithType: FlowDocument.LineStackingStrategy
  fullName: System.Windows.Documents.FlowDocument.LineStackingStrategy
- uid: System.Windows.LineStackingStrategy
  parent: System.Windows
  isExternal: false
  name: LineStackingStrategy
  nameWithType: LineStackingStrategy
  fullName: System.Windows.LineStackingStrategy
- uid: System.Windows.Documents.FlowDocument.LineStackingStrategyProperty
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: LineStackingStrategyProperty
  nameWithType: FlowDocument.LineStackingStrategyProperty
  fullName: System.Windows.Documents.FlowDocument.LineStackingStrategyProperty
- uid: System.Windows.Documents.FlowDocument.LogicalChildren
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: LogicalChildren
  nameWithType: FlowDocument.LogicalChildren
  fullName: System.Windows.Documents.FlowDocument.LogicalChildren
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Windows.Documents.FlowDocument.MaxPageHeight
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: MaxPageHeight
  nameWithType: FlowDocument.MaxPageHeight
  fullName: System.Windows.Documents.FlowDocument.MaxPageHeight
- uid: System.Windows.Documents.FlowDocument.MaxPageHeightProperty
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: MaxPageHeightProperty
  nameWithType: FlowDocument.MaxPageHeightProperty
  fullName: System.Windows.Documents.FlowDocument.MaxPageHeightProperty
- uid: System.Windows.Documents.FlowDocument.MaxPageWidth
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: MaxPageWidth
  nameWithType: FlowDocument.MaxPageWidth
  fullName: System.Windows.Documents.FlowDocument.MaxPageWidth
- uid: System.Windows.Documents.FlowDocument.MaxPageWidthProperty
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: MaxPageWidthProperty
  nameWithType: FlowDocument.MaxPageWidthProperty
  fullName: System.Windows.Documents.FlowDocument.MaxPageWidthProperty
- uid: System.Windows.Documents.FlowDocument.MinPageHeight
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: MinPageHeight
  nameWithType: FlowDocument.MinPageHeight
  fullName: System.Windows.Documents.FlowDocument.MinPageHeight
- uid: System.Windows.Documents.FlowDocument.MinPageHeightProperty
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: MinPageHeightProperty
  nameWithType: FlowDocument.MinPageHeightProperty
  fullName: System.Windows.Documents.FlowDocument.MinPageHeightProperty
- uid: System.Windows.Documents.FlowDocument.MinPageWidth
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: MinPageWidth
  nameWithType: FlowDocument.MinPageWidth
  fullName: System.Windows.Documents.FlowDocument.MinPageWidth
- uid: System.Windows.Documents.FlowDocument.MinPageWidthProperty
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: MinPageWidthProperty
  nameWithType: FlowDocument.MinPageWidthProperty
  fullName: System.Windows.Documents.FlowDocument.MinPageWidthProperty
- uid: System.Windows.Documents.FlowDocument.OnCreateAutomationPeer
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: OnCreateAutomationPeer()
  nameWithType: FlowDocument.OnCreateAutomationPeer()
  fullName: System.Windows.Documents.FlowDocument.OnCreateAutomationPeer()
- uid: System.Windows.Automation.Peers.AutomationPeer
  parent: System.Windows.Automation.Peers
  isExternal: false
  name: AutomationPeer
  nameWithType: AutomationPeer
  fullName: System.Windows.Automation.Peers.AutomationPeer
- uid: System.Windows.Documents.FlowDocument.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: OnPropertyChanged(DependencyPropertyChangedEventArgs)
  nameWithType: FlowDocument.OnPropertyChanged(DependencyPropertyChangedEventArgs)
  fullName: System.Windows.Documents.FlowDocument.OnPropertyChanged(DependencyPropertyChangedEventArgs)
- uid: System.Windows.DependencyPropertyChangedEventArgs
  parent: System.Windows
  isExternal: false
  name: DependencyPropertyChangedEventArgs
  nameWithType: DependencyPropertyChangedEventArgs
  fullName: System.Windows.DependencyPropertyChangedEventArgs
- uid: System.Windows.Documents.FlowDocument.PageHeight
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: PageHeight
  nameWithType: FlowDocument.PageHeight
  fullName: System.Windows.Documents.FlowDocument.PageHeight
- uid: System.Windows.Documents.FlowDocument.PageHeightProperty
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: PageHeightProperty
  nameWithType: FlowDocument.PageHeightProperty
  fullName: System.Windows.Documents.FlowDocument.PageHeightProperty
- uid: System.Windows.Documents.FlowDocument.PagePadding
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: PagePadding
  nameWithType: FlowDocument.PagePadding
  fullName: System.Windows.Documents.FlowDocument.PagePadding
- uid: System.Windows.Thickness
  parent: System.Windows
  isExternal: false
  name: Thickness
  nameWithType: Thickness
  fullName: System.Windows.Thickness
- uid: System.Windows.Documents.FlowDocument.PagePaddingProperty
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: PagePaddingProperty
  nameWithType: FlowDocument.PagePaddingProperty
  fullName: System.Windows.Documents.FlowDocument.PagePaddingProperty
- uid: System.Windows.Documents.FlowDocument.PageWidth
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: PageWidth
  nameWithType: FlowDocument.PageWidth
  fullName: System.Windows.Documents.FlowDocument.PageWidth
- uid: System.Windows.Documents.FlowDocument.PageWidthProperty
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: PageWidthProperty
  nameWithType: FlowDocument.PageWidthProperty
  fullName: System.Windows.Documents.FlowDocument.PageWidthProperty
- uid: System.Windows.Documents.FlowDocument.SetDpi(System.Windows.DpiScale)
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: SetDpi(DpiScale)
  nameWithType: FlowDocument.SetDpi(DpiScale)
  fullName: System.Windows.Documents.FlowDocument.SetDpi(DpiScale)
- uid: System.Windows.DpiScale
  parent: System.Windows
  isExternal: false
  name: DpiScale
  nameWithType: DpiScale
  fullName: System.Windows.DpiScale
- uid: System.Windows.Documents.FlowDocument.System#IServiceProvider#GetService(System.Type)
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: System.IServiceProvider.GetService(Type)
  nameWithType: FlowDocument.System.IServiceProvider.GetService(Type)
  fullName: System.Windows.Documents.FlowDocument.System.IServiceProvider.GetService(Type)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Windows.Documents.FlowDocument.System#Windows#Documents#IDocumentPaginatorSource#DocumentPaginator
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: System.Windows.Documents.IDocumentPaginatorSource.DocumentPaginator
  nameWithType: FlowDocument.System.Windows.Documents.IDocumentPaginatorSource.DocumentPaginator
  fullName: System.Windows.Documents.FlowDocument.System.Windows.Documents.IDocumentPaginatorSource.DocumentPaginator
- uid: System.Windows.Documents.DocumentPaginator
  parent: System.Windows.Documents
  isExternal: false
  name: DocumentPaginator
  nameWithType: DocumentPaginator
  fullName: System.Windows.Documents.DocumentPaginator
- uid: System.Windows.Documents.FlowDocument.System#Windows#Markup#IAddChild#AddChild(System.Object)
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: System.Windows.Markup.IAddChild.AddChild(Object)
  nameWithType: FlowDocument.System.Windows.Markup.IAddChild.AddChild(Object)
  fullName: System.Windows.Documents.FlowDocument.System.Windows.Markup.IAddChild.AddChild(Object)
- uid: System.Windows.Documents.FlowDocument.System#Windows#Markup#IAddChild#AddText(System.String)
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: System.Windows.Markup.IAddChild.AddText(String)
  nameWithType: FlowDocument.System.Windows.Markup.IAddChild.AddText(String)
  fullName: System.Windows.Documents.FlowDocument.System.Windows.Markup.IAddChild.AddText(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Documents.FlowDocument.TextAlignment
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: TextAlignment
  nameWithType: FlowDocument.TextAlignment
  fullName: System.Windows.Documents.FlowDocument.TextAlignment
- uid: System.Windows.TextAlignment
  parent: System.Windows
  isExternal: false
  name: TextAlignment
  nameWithType: TextAlignment
  fullName: System.Windows.TextAlignment
- uid: System.Windows.Documents.FlowDocument.TextAlignmentProperty
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: TextAlignmentProperty
  nameWithType: FlowDocument.TextAlignmentProperty
  fullName: System.Windows.Documents.FlowDocument.TextAlignmentProperty
- uid: System.Windows.Documents.FlowDocument.TextEffects
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: TextEffects
  nameWithType: FlowDocument.TextEffects
  fullName: System.Windows.Documents.FlowDocument.TextEffects
- uid: System.Windows.Media.TextEffectCollection
  parent: System.Windows.Media
  isExternal: false
  name: TextEffectCollection
  nameWithType: TextEffectCollection
  fullName: System.Windows.Media.TextEffectCollection
- uid: System.Windows.Documents.FlowDocument.TextEffectsProperty
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: TextEffectsProperty
  nameWithType: FlowDocument.TextEffectsProperty
  fullName: System.Windows.Documents.FlowDocument.TextEffectsProperty
- uid: System.Windows.Documents.FlowDocument.Typography
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: Typography
  nameWithType: FlowDocument.Typography
  fullName: System.Windows.Documents.FlowDocument.Typography
- uid: System.Windows.Documents.Typography
  parent: System.Windows.Documents
  isExternal: false
  name: Typography
  nameWithType: Typography
  fullName: System.Windows.Documents.Typography
- uid: System.Windows.Documents.FlowDocument.#ctor*
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: FlowDocument
  nameWithType: FlowDocument.FlowDocument
- uid: System.Windows.Documents.FlowDocument.Background*
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: Background
  nameWithType: FlowDocument.Background
- uid: System.Windows.Documents.FlowDocument.Blocks*
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: Blocks
  nameWithType: FlowDocument.Blocks
- uid: System.Windows.Documents.FlowDocument.ColumnGap*
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: ColumnGap
  nameWithType: FlowDocument.ColumnGap
- uid: System.Windows.Documents.FlowDocument.ColumnRuleBrush*
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: ColumnRuleBrush
  nameWithType: FlowDocument.ColumnRuleBrush
- uid: System.Windows.Documents.FlowDocument.ColumnRuleWidth*
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: ColumnRuleWidth
  nameWithType: FlowDocument.ColumnRuleWidth
- uid: System.Windows.Documents.FlowDocument.ColumnWidth*
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: ColumnWidth
  nameWithType: FlowDocument.ColumnWidth
- uid: System.Windows.Documents.FlowDocument.ContentEnd*
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: ContentEnd
  nameWithType: FlowDocument.ContentEnd
- uid: System.Windows.Documents.FlowDocument.ContentStart*
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: ContentStart
  nameWithType: FlowDocument.ContentStart
- uid: System.Windows.Documents.FlowDocument.FlowDirection*
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: FlowDirection
  nameWithType: FlowDocument.FlowDirection
- uid: System.Windows.Documents.FlowDocument.FontFamily*
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: FontFamily
  nameWithType: FlowDocument.FontFamily
- uid: System.Windows.Documents.FlowDocument.FontSize*
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: FontSize
  nameWithType: FlowDocument.FontSize
- uid: System.Windows.Documents.FlowDocument.FontStretch*
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: FontStretch
  nameWithType: FlowDocument.FontStretch
- uid: System.Windows.Documents.FlowDocument.FontStyle*
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: FontStyle
  nameWithType: FlowDocument.FontStyle
- uid: System.Windows.Documents.FlowDocument.FontWeight*
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: FontWeight
  nameWithType: FlowDocument.FontWeight
- uid: System.Windows.Documents.FlowDocument.Foreground*
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: Foreground
  nameWithType: FlowDocument.Foreground
- uid: System.Windows.Documents.FlowDocument.IsColumnWidthFlexible*
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: IsColumnWidthFlexible
  nameWithType: FlowDocument.IsColumnWidthFlexible
- uid: System.Windows.Documents.FlowDocument.IsEnabledCore*
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: IsEnabledCore
  nameWithType: FlowDocument.IsEnabledCore
- uid: System.Windows.Documents.FlowDocument.IsHyphenationEnabled*
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: IsHyphenationEnabled
  nameWithType: FlowDocument.IsHyphenationEnabled
- uid: System.Windows.Documents.FlowDocument.IsOptimalParagraphEnabled*
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: IsOptimalParagraphEnabled
  nameWithType: FlowDocument.IsOptimalParagraphEnabled
- uid: System.Windows.Documents.FlowDocument.LineHeight*
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: LineHeight
  nameWithType: FlowDocument.LineHeight
- uid: System.Windows.Documents.FlowDocument.LineStackingStrategy*
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: LineStackingStrategy
  nameWithType: FlowDocument.LineStackingStrategy
- uid: System.Windows.Documents.FlowDocument.LogicalChildren*
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: LogicalChildren
  nameWithType: FlowDocument.LogicalChildren
- uid: System.Windows.Documents.FlowDocument.MaxPageHeight*
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: MaxPageHeight
  nameWithType: FlowDocument.MaxPageHeight
- uid: System.Windows.Documents.FlowDocument.MaxPageWidth*
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: MaxPageWidth
  nameWithType: FlowDocument.MaxPageWidth
- uid: System.Windows.Documents.FlowDocument.MinPageHeight*
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: MinPageHeight
  nameWithType: FlowDocument.MinPageHeight
- uid: System.Windows.Documents.FlowDocument.MinPageWidth*
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: MinPageWidth
  nameWithType: FlowDocument.MinPageWidth
- uid: System.Windows.Documents.FlowDocument.OnCreateAutomationPeer*
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: OnCreateAutomationPeer
  nameWithType: FlowDocument.OnCreateAutomationPeer
- uid: System.Windows.Documents.FlowDocument.OnPropertyChanged*
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: OnPropertyChanged
  nameWithType: FlowDocument.OnPropertyChanged
- uid: System.Windows.Documents.FlowDocument.PageHeight*
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: PageHeight
  nameWithType: FlowDocument.PageHeight
- uid: System.Windows.Documents.FlowDocument.PagePadding*
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: PagePadding
  nameWithType: FlowDocument.PagePadding
- uid: System.Windows.Documents.FlowDocument.PageWidth*
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: PageWidth
  nameWithType: FlowDocument.PageWidth
- uid: System.Windows.Documents.FlowDocument.SetDpi*
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: SetDpi
  nameWithType: FlowDocument.SetDpi
- uid: System.Windows.Documents.FlowDocument.System#IServiceProvider#GetService*
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: System.IServiceProvider.GetService
  nameWithType: FlowDocument.System.IServiceProvider.GetService
- uid: System.Windows.Documents.FlowDocument.System#Windows#Documents#IDocumentPaginatorSource#DocumentPaginator*
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: System.Windows.Documents.IDocumentPaginatorSource.DocumentPaginator
  nameWithType: FlowDocument.System.Windows.Documents.IDocumentPaginatorSource.DocumentPaginator
- uid: System.Windows.Documents.FlowDocument.System#Windows#Markup#IAddChild#AddChild*
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: System.Windows.Markup.IAddChild.AddChild
  nameWithType: FlowDocument.System.Windows.Markup.IAddChild.AddChild
- uid: System.Windows.Documents.FlowDocument.System#Windows#Markup#IAddChild#AddText*
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: System.Windows.Markup.IAddChild.AddText
  nameWithType: FlowDocument.System.Windows.Markup.IAddChild.AddText
- uid: System.Windows.Documents.FlowDocument.TextAlignment*
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: TextAlignment
  nameWithType: FlowDocument.TextAlignment
- uid: System.Windows.Documents.FlowDocument.TextEffects*
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: TextEffects
  nameWithType: FlowDocument.TextEffects
- uid: System.Windows.Documents.FlowDocument.Typography*
  parent: System.Windows.Documents.FlowDocument
  isExternal: false
  name: Typography
  nameWithType: FlowDocument.Typography
