### YamlMime:ManagedReference
items:
- uid: System.Activities.UnhandledExceptionAction
  id: UnhandledExceptionAction
  children:
  - System.Activities.UnhandledExceptionAction.Abort
  - System.Activities.UnhandledExceptionAction.Cancel
  - System.Activities.UnhandledExceptionAction.Terminate
  langs:
  - csharp
  name: UnhandledExceptionAction
  nameWithType: UnhandledExceptionAction
  fullName: System.Activities.UnhandledExceptionAction
  type: Enum
  summary: "예외는 워크플로의 루트를 이스케이프할 때 발생 하는 동작을 지정 합니다."
  remarks: "<xref:System.Activities.WorkflowApplication.OnUnhandledException%2A>예외는 워크플로 루트를 이스케이프할 함수가 호출 됩니다.</xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> <xref:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs>제공 예외에 대 한 액세스에 대 한 포인터는 <xref:System.Activities.Activity>예외를 생성 하는.</xref:System.Activities.Activity> </xref:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs> 종료 되지 않은 경우 기본 작업은 <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A>처리기 지정 됩니다.</xref:System.Activities.WorkflowApplication.OnUnhandledException%2A>"
  example:
  - "The following example invokes a workflow that throws an exception. The exception is unhandled by the workflow and the <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> handler is invoked. The <xref:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs> are inspected to provide information about the exception, and the workflow is terminated.  \n  \n [!code-cs[CFX_WorkflowApplicationExample#6](~/add/codesnippet/csharp/t-system.activities.unha_1.cs)]"
  syntax:
    content: public enum UnhandledExceptionAction
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.Activities.UnhandledExceptionAction.Abort
  id: Abort
  parent: System.Activities.UnhandledExceptionAction
  langs:
  - csharp
  name: Abort
  nameWithType: UnhandledExceptionAction.Abort
  fullName: System.Activities.UnhandledExceptionAction.Abort
  type: Field
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "지정 된 <xref href=&quot;System.Activities.WorkflowApplication&quot;> </xref> 워크플로 중단 해야 합니다."
  remarks: "이 인해 <xref:System.Activities.WorkflowApplication.Aborted%2A>중단 프로세스가 완료 되 면 호출 되 고.</xref:System.Activities.WorkflowApplication.Aborted%2A> 처리 되지 않은 예외가 중단 이유로 사용 됩니다."
  example:
  - "The following example invokes a workflow that throws an exception. The exception is unhandled by the workflow and the <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> handler is invoked. The <xref:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs> are inspected to provide information about the exception, and the workflow is aborted.  \n  \n [!code-cs[CFX_WorkflowApplicationExample#7](~/add/codesnippet/csharp/t-system.activities.unha_2.cs)]"
  syntax:
    content: Abort
    return:
      type: System.Activities.UnhandledExceptionAction
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Activities.UnhandledExceptionAction.Cancel
  id: Cancel
  parent: System.Activities.UnhandledExceptionAction
  langs:
  - csharp
  name: Cancel
  nameWithType: UnhandledExceptionAction.Cancel
  fullName: System.Activities.UnhandledExceptionAction.Cancel
  type: Field
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "지정 된 <xref href=&quot;System.Activities.WorkflowApplication&quot;> </xref> 루트 활동의 취소를 예약 하 고 실행을 다시 시작 해야 합니다."
  remarks: "이 인해 <xref:System.Activities.WorkflowApplication.Completed%2A>취소 프로세스가 완료 되 면 호출 되 고.</xref:System.Activities.WorkflowApplication.Completed%2A>"
  example:
  - "The following example invokes a workflow that throws an exception. The exception is unhandled by the workflow and the <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> handler is invoked. The <xref:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs> are inspected to provide information about the exception, and the workflow is cancelled.  \n  \n [!code-cs[CFX_WorkflowApplicationExample#8](~/add/codesnippet/csharp/t-system.activities.unha_3.cs)]"
  syntax:
    content: Cancel
    return:
      type: System.Activities.UnhandledExceptionAction
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Activities.UnhandledExceptionAction.Terminate
  id: Terminate
  parent: System.Activities.UnhandledExceptionAction
  langs:
  - csharp
  name: Terminate
  nameWithType: UnhandledExceptionAction.Terminate
  fullName: System.Activities.UnhandledExceptionAction.Terminate
  type: Field
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "지정 된 <xref href=&quot;System.Activities.WorkflowApplication&quot;> </xref> 루트 활동의 종료를 예약 하 고 실행을 다시 시작 해야 합니다."
  remarks: "이 인해 <xref:System.Activities.WorkflowApplication.Completed%2A>종료 프로세스가 완료 되 면 호출 되 고.</xref:System.Activities.WorkflowApplication.Completed%2A> 처리 되지 않은 예외가 종료 이유로 사용 됩니다. 종료 되지 않은 경우 기본 작업은 <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A>처리기 지정 됩니다.</xref:System.Activities.WorkflowApplication.OnUnhandledException%2A>"
  example:
  - "The following example invokes a workflow that throws an exception. The exception is unhandled by the workflow and the <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> handler is invoked. The <xref:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs> are inspected to provide information about the exception, and the workflow is terminated.  \n  \n [!code-cs[CFX_WorkflowApplicationExample#6](~/add/codesnippet/csharp/t-system.activities.unha_1.cs)]"
  syntax:
    content: Terminate
    return:
      type: System.Activities.UnhandledExceptionAction
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.Activities.UnhandledExceptionAction.Abort
  parent: System.Activities.UnhandledExceptionAction
  isExternal: false
  name: Abort
  nameWithType: UnhandledExceptionAction.Abort
  fullName: System.Activities.UnhandledExceptionAction.Abort
- uid: System.Activities.UnhandledExceptionAction
  parent: System.Activities
  isExternal: false
  name: UnhandledExceptionAction
  nameWithType: UnhandledExceptionAction
  fullName: System.Activities.UnhandledExceptionAction
- uid: System.Activities.UnhandledExceptionAction.Cancel
  parent: System.Activities.UnhandledExceptionAction
  isExternal: false
  name: Cancel
  nameWithType: UnhandledExceptionAction.Cancel
  fullName: System.Activities.UnhandledExceptionAction.Cancel
- uid: System.Activities.UnhandledExceptionAction.Terminate
  parent: System.Activities.UnhandledExceptionAction
  isExternal: false
  name: Terminate
  nameWithType: UnhandledExceptionAction.Terminate
  fullName: System.Activities.UnhandledExceptionAction.Terminate
