### YamlMime:ManagedReference
items:
- uid: System.Web.Configuration.HttpCapabilitiesBase
  id: HttpCapabilitiesBase
  children:
  - System.Web.Configuration.HttpCapabilitiesBase.#ctor
  - System.Web.Configuration.HttpCapabilitiesBase.ActiveXControls
  - System.Web.Configuration.HttpCapabilitiesBase.Adapters
  - System.Web.Configuration.HttpCapabilitiesBase.AddBrowser(System.String)
  - System.Web.Configuration.HttpCapabilitiesBase.AOL
  - System.Web.Configuration.HttpCapabilitiesBase.BackgroundSounds
  - System.Web.Configuration.HttpCapabilitiesBase.Beta
  - System.Web.Configuration.HttpCapabilitiesBase.Browser
  - System.Web.Configuration.HttpCapabilitiesBase.BrowserCapabilitiesProvider
  - System.Web.Configuration.HttpCapabilitiesBase.Browsers
  - System.Web.Configuration.HttpCapabilitiesBase.CanCombineFormsInDeck
  - System.Web.Configuration.HttpCapabilitiesBase.CanInitiateVoiceCall
  - System.Web.Configuration.HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement
  - System.Web.Configuration.HttpCapabilitiesBase.CanRenderEmptySelects
  - System.Web.Configuration.HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether
  - System.Web.Configuration.HttpCapabilitiesBase.CanRenderMixedSelects
  - System.Web.Configuration.HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether
  - System.Web.Configuration.HttpCapabilitiesBase.CanRenderPostBackCards
  - System.Web.Configuration.HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList
  - System.Web.Configuration.HttpCapabilitiesBase.CanSendMail
  - System.Web.Configuration.HttpCapabilitiesBase.Capabilities
  - System.Web.Configuration.HttpCapabilitiesBase.CDF
  - System.Web.Configuration.HttpCapabilitiesBase.ClrVersion
  - System.Web.Configuration.HttpCapabilitiesBase.Cookies
  - System.Web.Configuration.HttpCapabilitiesBase.Crawler
  - System.Web.Configuration.HttpCapabilitiesBase.CreateHtmlTextWriter(System.IO.TextWriter)
  - System.Web.Configuration.HttpCapabilitiesBase.DefaultSubmitButtonLimit
  - System.Web.Configuration.HttpCapabilitiesBase.DisableOptimizedCacheKey
  - System.Web.Configuration.HttpCapabilitiesBase.EcmaScriptVersion
  - System.Web.Configuration.HttpCapabilitiesBase.Frames
  - System.Web.Configuration.HttpCapabilitiesBase.GatewayMajorVersion
  - System.Web.Configuration.HttpCapabilitiesBase.GatewayMinorVersion
  - System.Web.Configuration.HttpCapabilitiesBase.GatewayVersion
  - System.Web.Configuration.HttpCapabilitiesBase.GetClrVersions
  - System.Web.Configuration.HttpCapabilitiesBase.GetConfigCapabilities(System.String,System.Web.HttpRequest)
  - System.Web.Configuration.HttpCapabilitiesBase.HasBackButton
  - System.Web.Configuration.HttpCapabilitiesBase.HidesRightAlignedMultiselectScrollbars
  - System.Web.Configuration.HttpCapabilitiesBase.HtmlTextWriter
  - System.Web.Configuration.HttpCapabilitiesBase.Id
  - System.Web.Configuration.HttpCapabilitiesBase.Init
  - System.Web.Configuration.HttpCapabilitiesBase.InputType
  - System.Web.Configuration.HttpCapabilitiesBase.IsBrowser(System.String)
  - System.Web.Configuration.HttpCapabilitiesBase.IsColor
  - System.Web.Configuration.HttpCapabilitiesBase.IsMobileDevice
  - System.Web.Configuration.HttpCapabilitiesBase.Item(System.String)
  - System.Web.Configuration.HttpCapabilitiesBase.JavaApplets
  - System.Web.Configuration.HttpCapabilitiesBase.JavaScript
  - System.Web.Configuration.HttpCapabilitiesBase.JScriptVersion
  - System.Web.Configuration.HttpCapabilitiesBase.MajorVersion
  - System.Web.Configuration.HttpCapabilitiesBase.MaximumHrefLength
  - System.Web.Configuration.HttpCapabilitiesBase.MaximumRenderedPageSize
  - System.Web.Configuration.HttpCapabilitiesBase.MaximumSoftkeyLabelLength
  - System.Web.Configuration.HttpCapabilitiesBase.MinorVersion
  - System.Web.Configuration.HttpCapabilitiesBase.MinorVersionString
  - System.Web.Configuration.HttpCapabilitiesBase.MobileDeviceManufacturer
  - System.Web.Configuration.HttpCapabilitiesBase.MobileDeviceModel
  - System.Web.Configuration.HttpCapabilitiesBase.MSDomVersion
  - System.Web.Configuration.HttpCapabilitiesBase.NumberOfSoftkeys
  - System.Web.Configuration.HttpCapabilitiesBase.Platform
  - System.Web.Configuration.HttpCapabilitiesBase.PreferredImageMime
  - System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingMime
  - System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingType
  - System.Web.Configuration.HttpCapabilitiesBase.PreferredRequestEncoding
  - System.Web.Configuration.HttpCapabilitiesBase.PreferredResponseEncoding
  - System.Web.Configuration.HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput
  - System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterHtmlLists
  - System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor
  - System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlInput
  - System.Web.Configuration.HttpCapabilitiesBase.RendersWmlDoAcceptsInline
  - System.Web.Configuration.HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards
  - System.Web.Configuration.HttpCapabilitiesBase.RequiredMetaTagNameValue
  - System.Web.Configuration.HttpCapabilitiesBase.RequiresAttributeColonSubstitution
  - System.Web.Configuration.HttpCapabilitiesBase.RequiresContentTypeMetaTag
  - System.Web.Configuration.HttpCapabilitiesBase.RequiresControlStateInSession
  - System.Web.Configuration.HttpCapabilitiesBase.RequiresDBCSCharacter
  - System.Web.Configuration.HttpCapabilitiesBase.RequiresHtmlAdaptiveErrorReporting
  - System.Web.Configuration.HttpCapabilitiesBase.RequiresLeadingPageBreak
  - System.Web.Configuration.HttpCapabilitiesBase.RequiresNoBreakInFormatting
  - System.Web.Configuration.HttpCapabilitiesBase.RequiresOutputOptimization
  - System.Web.Configuration.HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText
  - System.Web.Configuration.HttpCapabilitiesBase.RequiresSpecialViewStateEncoding
  - System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueFilePathSuffix
  - System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueHtmlCheckboxNames
  - System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueHtmlInputNames
  - System.Web.Configuration.HttpCapabilitiesBase.RequiresUrlEncodedPostfieldValues
  - System.Web.Configuration.HttpCapabilitiesBase.ScreenBitDepth
  - System.Web.Configuration.HttpCapabilitiesBase.ScreenCharactersHeight
  - System.Web.Configuration.HttpCapabilitiesBase.ScreenCharactersWidth
  - System.Web.Configuration.HttpCapabilitiesBase.ScreenPixelsHeight
  - System.Web.Configuration.HttpCapabilitiesBase.ScreenPixelsWidth
  - System.Web.Configuration.HttpCapabilitiesBase.SupportsAccesskeyAttribute
  - System.Web.Configuration.HttpCapabilitiesBase.SupportsBodyColor
  - System.Web.Configuration.HttpCapabilitiesBase.SupportsBold
  - System.Web.Configuration.HttpCapabilitiesBase.SupportsCacheControlMetaTag
  - System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback
  - System.Web.Configuration.HttpCapabilitiesBase.SupportsCss
  - System.Web.Configuration.HttpCapabilitiesBase.SupportsDivAlign
  - System.Web.Configuration.HttpCapabilitiesBase.SupportsDivNoWrap
  - System.Web.Configuration.HttpCapabilitiesBase.SupportsEmptyStringInCookieValue
  - System.Web.Configuration.HttpCapabilitiesBase.SupportsFontColor
  - System.Web.Configuration.HttpCapabilitiesBase.SupportsFontName
  - System.Web.Configuration.HttpCapabilitiesBase.SupportsFontSize
  - System.Web.Configuration.HttpCapabilitiesBase.SupportsImageSubmit
  - System.Web.Configuration.HttpCapabilitiesBase.SupportsIModeSymbols
  - System.Web.Configuration.HttpCapabilitiesBase.SupportsInputIStyle
  - System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode
  - System.Web.Configuration.HttpCapabilitiesBase.SupportsItalic
  - System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes
  - System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneSymbols
  - System.Web.Configuration.HttpCapabilitiesBase.SupportsQueryStringInFormAction
  - System.Web.Configuration.HttpCapabilitiesBase.SupportsRedirectWithCookie
  - System.Web.Configuration.HttpCapabilitiesBase.SupportsSelectMultiple
  - System.Web.Configuration.HttpCapabilitiesBase.SupportsUncheck
  - System.Web.Configuration.HttpCapabilitiesBase.SupportsXmlHttp
  - System.Web.Configuration.HttpCapabilitiesBase.System#Web#UI#IFilterResolutionService#CompareFilters(System.String,System.String)
  - System.Web.Configuration.HttpCapabilitiesBase.System#Web#UI#IFilterResolutionService#EvaluateFilter(System.String)
  - System.Web.Configuration.HttpCapabilitiesBase.Tables
  - System.Web.Configuration.HttpCapabilitiesBase.TagWriter
  - System.Web.Configuration.HttpCapabilitiesBase.Type
  - System.Web.Configuration.HttpCapabilitiesBase.UseOptimizedCacheKey
  - System.Web.Configuration.HttpCapabilitiesBase.VBScript
  - System.Web.Configuration.HttpCapabilitiesBase.Version
  - System.Web.Configuration.HttpCapabilitiesBase.W3CDomVersion
  - System.Web.Configuration.HttpCapabilitiesBase.Win16
  - System.Web.Configuration.HttpCapabilitiesBase.Win32
  langs:
  - csharp
  name: HttpCapabilitiesBase
  nameWithType: HttpCapabilitiesBase
  fullName: System.Web.Configuration.HttpCapabilitiesBase
  type: Class
  summary: "클라이언트의 브라우저의 기능에 대 한 자세한 정보에 대 한 액세스를 제공합니다."
  remarks: "HttpCapabilitiesBase는 있는 기본 클래스는 <xref:System.Web.HttpBrowserCapabilities>클래스가 파생 됩니다.</xref:System.Web.HttpBrowserCapabilities> HttpCapabilitiesBase는 브라우저의 기능 사전에 대 한 형식이 안전한 액세스를 제공 하는 읽기 전용 속성의 다 수를 제공 합니다. 에 액세스할 수 있습니다는 <xref:System.Web.HttpBrowserCapabilities>통해 클래스는 <xref:System.Web.HttpRequest.Browser%2A>ASP.NET에서 노출 되는 속성 <xref:System.Web.HttpRequest.Browser%2A?displayProperty=fullName>속성.</xref:System.Web.HttpRequest.Browser%2A?displayProperty=fullName> </xref:System.Web.HttpRequest.Browser%2A> </xref:System.Web.HttpBrowserCapabilities>"
  example:
  - "The following example shows how to access information about the browser.  \n  \n [!code-cs[HttpCapabilitiesBase#1](~/add/codesnippet/csharp/t-system.web.configurati_61_1.aspx)]\n [!code-vb[HttpCapabilitiesBase#1](~/add/codesnippet/visualbasic/t-system.web.configurati_61_1.aspx)]"
  syntax:
    content: 'public class HttpCapabilitiesBase : System.Web.UI.IFilterResolutionService'
  inheritance:
  - System.Object
  implements:
  - System.Web.UI.IFilterResolutionService
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.#ctor
  id: '#ctor'
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: HttpCapabilitiesBase()
  nameWithType: HttpCapabilitiesBase.HttpCapabilitiesBase()
  fullName: System.Web.Configuration.HttpCapabilitiesBase.HttpCapabilitiesBase()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "새 인스턴스를 만듭니다는 <xref href=&quot;System.Web.Configuration.HttpCapabilitiesBase&quot;> </xref> 클래스입니다."
  syntax:
    content: public HttpCapabilitiesBase ();
    parameters: []
  overload: System.Web.Configuration.HttpCapabilitiesBase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.ActiveXControls
  id: ActiveXControls
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: ActiveXControls
  nameWithType: HttpCapabilitiesBase.ActiveXControls
  fullName: System.Web.Configuration.HttpCapabilitiesBase.ActiveXControls
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "브라우저에서 ActiveX 컨트롤을 지원 하는지를 나타내는 값을 가져옵니다."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser supports ActiveX controls.  \n  \n [!code-cs[HttpCapabilitiesBase.ActiveXControls#1](~/add/codesnippet/csharp/p-system.web.configurati_350_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.ActiveXControls#1](~/add/codesnippet/visualbasic/p-system.web.configurati_350_1.aspx)]"
  syntax:
    content: public bool ActiveXControls { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>브라우저에서 ActiveX 컨트롤; 지원 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.ActiveXControls*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.Adapters
  id: Adapters
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: Adapters
  nameWithType: HttpCapabilitiesBase.Adapters
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Adapters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "사용 가능한 컨트롤 어댑터의 컬렉션을 반환합니다."
  syntax:
    content: public System.Collections.IDictionary Adapters { get; }
    return:
      type: System.Collections.IDictionary
      description: "등록 된 컨트롤 어댑터의 컬렉션입니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.Adapters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.AddBrowser(System.String)
  id: AddBrowser(System.String)
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: AddBrowser(String)
  nameWithType: HttpCapabilitiesBase.AddBrowser(String)
  fullName: System.Web.Configuration.HttpCapabilitiesBase.AddBrowser(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "기능 인식을 위해 브라우저의 내부 컬렉션에 항목을 추가 하도록 내부적으로 사용 합니다."
  syntax:
    content: public void AddBrowser (string browserName);
    parameters:
    - id: browserName
      type: System.String
      description: "추가할 브라우저 이름입니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.AddBrowser*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.AOL
  id: AOL
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: AOL
  nameWithType: HttpCapabilitiesBase.AOL
  fullName: System.Web.Configuration.HttpCapabilitiesBase.AOL
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "클라이언트가 AOL (America Online) 브라우저 인지를 나타내는 값을 가져옵니다."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser is an AOL browser.  \n  \n [!code-cs[HttpCapabilitiesBase.AOL#1](~/add/codesnippet/csharp/p-system.web.configurati_269_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.AOL#1](~/add/codesnippet/visualbasic/p-system.web.configurati_269_1.aspx)]"
  syntax:
    content: public bool AOL { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>브라우저가는 AOL 브라우저; 이면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.AOL*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.BackgroundSounds
  id: BackgroundSounds
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: BackgroundSounds
  nameWithType: HttpCapabilitiesBase.BackgroundSounds
  fullName: System.Web.Configuration.HttpCapabilitiesBase.BackgroundSounds
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "브라우저를 사용 하 여 배경 소리 재생을 지원 하는지 여부를 나타내는 값을 가져옵니다는 <xref uid=&quot;langword_csharp_&lt;bgsounds&gt;&quot; name=&quot;&lt;bgsounds&gt;&quot; href=&quot;&quot;> </xref> HTML 요소입니다."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser supports playing background sounds.  \n  \n [!code-cs[HttpCapabilitiesBase.BackgroundSounds#1](~/add/codesnippet/csharp/p-system.web.configurati_72_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.BackgroundSounds#1](~/add/codesnippet/visualbasic/p-system.web.configurati_72_1.aspx)]"
  syntax:
    content: public bool BackgroundSounds { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>브라우저에서 배경 소리; 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.BackgroundSounds*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.Beta
  id: Beta
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: Beta
  nameWithType: HttpCapabilitiesBase.Beta
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Beta
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "브라우저가 베타 버전 인지를 나타내는 값을 가져옵니다."
  remarks: "베타 버전의 브라우저에서는 예기치 않은 동작이 발생할 수 있습니다."
  example:
  - "The following code example shows how to determine whether the browser is a beta version.  \n  \n [!code-cs[HttpCapabilitiesBase.Beta#1](~/add/codesnippet/csharp/p-system.web.configurati_76_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.Beta#1](~/add/codesnippet/visualbasic/p-system.web.configurati_76_1.aspx)]"
  syntax:
    content: public bool Beta { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>브라우저가 베타 버전이; 이면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.Beta*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.Browser
  id: Browser
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: Browser
  nameWithType: HttpCapabilitiesBase.Browser
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Browser
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "브라우저 문자열이 문자열을 가져옵니다 (있는 경우)에서 브라우저에서 보낸는 <xref uid=&quot;langword_csharp_User-Agent&quot; name=&quot;User-Agent&quot; href=&quot;&quot;> </xref> 요청 헤더입니다."
  remarks: ''
  example:
  - "The following code example shows how to determine the `User-Agent` request header sent by the browser.  \n  \n [!code-vb[HttpCapabilitiesBase.Browser#1](~/add/codesnippet/visualbasic/p-system.web.configurati_201_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.Browser#1](~/add/codesnippet/csharp/p-system.web.configurati_201_1.aspx)]"
  syntax:
    content: public string Browser { get; }
    return:
      type: System.String
      description: "콘텐츠는 <xref uid=&quot;langword_csharp_User-Agent&quot; name=&quot;User-Agent&quot; href=&quot;&quot;> </xref> 브라우저에서 보낸 요청 헤더입니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.Browser*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.BrowserCapabilitiesProvider
  id: BrowserCapabilitiesProvider
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: BrowserCapabilitiesProvider
  nameWithType: HttpCapabilitiesBase.BrowserCapabilitiesProvider
  fullName: System.Web.Configuration.HttpCapabilitiesBase.BrowserCapabilitiesProvider
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "가져오거나는 <xref href=&quot;System.Web.Configuration.HttpCapabilitiesProvider&quot;> </xref> 현재 브라우저에 대 한 개체입니다."
  syntax:
    content: public static System.Web.Configuration.HttpCapabilitiesProvider BrowserCapabilitiesProvider { get; set; }
    return:
      type: System.Web.Configuration.HttpCapabilitiesProvider
      description: "<xref href=&quot;System.Web.Configuration.HttpCapabilitiesProvider&quot;> </xref> 현재 브라우저에 대 한 개체입니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.BrowserCapabilitiesProvider*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.Browsers
  id: Browsers
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: Browsers
  nameWithType: HttpCapabilitiesBase.Browsers
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Browsers
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "가져옵니다는 <xref href=&quot;System.Collections.ArrayList&quot;> </xref> 있는 브라우저는 <xref:System.Web.Configuration.HttpCapabilitiesBase.Capabilities*>사전.</xref:System.Web.Configuration.HttpCapabilitiesBase.Capabilities*>"
  syntax:
    content: public System.Collections.ArrayList Browsers { get; }
    return:
      type: System.Collections.ArrayList
      description: "<xref href=&quot;System.Collections.ArrayList&quot;> </xref> 있는 브라우저는 <xref:System.Web.Configuration.HttpCapabilitiesBase.Capabilities*>사전.</xref:System.Web.Configuration.HttpCapabilitiesBase.Capabilities*>"
  overload: System.Web.Configuration.HttpCapabilitiesBase.Browsers*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanCombineFormsInDeck
  id: CanCombineFormsInDeck
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: CanCombineFormsInDeck
  nameWithType: HttpCapabilitiesBase.CanCombineFormsInDeck
  fullName: System.Web.Configuration.HttpCapabilitiesBase.CanCombineFormsInDeck
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "브라우저에서 별도 카드와 같은 여러 형식을 포함 하는 데크를 지원 하는지 여부를 나타내는 값을 가져옵니다."
  remarks: "CanCombineFormsInDeck 속성이 WML 호환 모바일 장치에만 적용 됩니다. True 이면 어댑터 가능한 경우 단일 데크 카드와 동일한 페이지에서 여러 개의 폼을 출력할 수 있습니다."
  example:
  - "The following code example shows how to determine whether the browser supports decks that contain multiple forms, such as separate cards.  \n  \n [!code-cs[HttpCapabilitiesBase.CanCombineFormsInDeck#1](~/add/codesnippet/csharp/p-system.web.configurati_320_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.CanCombineFormsInDeck#1](~/add/codesnippet/visualbasic/p-system.web.configurati_320_1.aspx)]"
  syntax:
    content: public virtual bool CanCombineFormsInDeck { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>브라우저에서 여러 형식을 포함 하는 데크를 지원 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.CanCombineFormsInDeck*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanInitiateVoiceCall
  id: CanInitiateVoiceCall
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: CanInitiateVoiceCall
  nameWithType: HttpCapabilitiesBase.CanInitiateVoiceCall
  fullName: System.Web.Configuration.HttpCapabilitiesBase.CanInitiateVoiceCall
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "브라우저 장치가 음성 통화를 시작할 수 있는지 여부를 나타내는 값을 가져옵니다."
  remarks: "CanInitiateVoiceCall 속성이 WML 호환 모바일 장치에만 적용 됩니다."
  example:
  - "The following code example shows how to determine whether the browser device is capable of initiating a voice call.  \n  \n [!code-cs[HttpCapabilitiesBase.CanInitiateVoiceCall#1](~/add/codesnippet/csharp/p-system.web.configurati_5_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.CanInitiateVoiceCall#1](~/add/codesnippet/visualbasic/p-system.web.configurati_5_1.aspx)]"
  syntax:
    content: public virtual bool CanInitiateVoiceCall { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>브라우저 장치가 음성 통화를; 시작할 수 있는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.CanInitiateVoiceCall*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement
  id: CanRenderAfterInputOrSelectElement
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: CanRenderAfterInputOrSelectElement
  nameWithType: HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement
  fullName: System.Web.Configuration.HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "브라우저 페이지 콘텐츠를 지원 하는지 여부를 나타내는 값을 가져옵니다 WML 다음 <xref uid=&quot;langword_csharp_&lt;select&gt;&quot; name=&quot;&lt;select&gt;&quot; href=&quot;&quot;> </xref> 또는 <xref uid=&quot;langword_csharp_&lt;input&gt;&quot; name=&quot;&lt;input&gt;&quot; href=&quot;&quot;> </xref> 요소입니다."
  remarks: "CanRenderAfterInputOrSelectElement 속성이 WML 호환 모바일 장치에만 적용 됩니다."
  example:
  - "The following code example shows how to determine whether the browser supports page content following HTML `<select>` or `<input>` elements.  \n  \n [!code-cs[HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement#1](~/add/codesnippet/csharp/def23b48-6df6-4cb2-be79-_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement#1](~/add/codesnippet/visualbasic/def23b48-6df6-4cb2-be79-_1.aspx)]"
  syntax:
    content: public virtual bool CanRenderAfterInputOrSelectElement { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>브라우저에서 페이지 다음에 나오는 HTML 콘텐츠가 있으면 <xref uid=&quot;langword_csharp_&lt;select&gt; &quot; name=&quot;&lt;select&gt; &quot; href=&quot;&quot;> </xref>또는 <xref uid=&quot;langword_csharp_&lt;input&gt; &quot; name=&quot;&lt;input&gt; &quot; href=&quot;&quot;> </xref>요소, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanRenderEmptySelects
  id: CanRenderEmptySelects
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: CanRenderEmptySelects
  nameWithType: HttpCapabilitiesBase.CanRenderEmptySelects
  fullName: System.Web.Configuration.HttpCapabilitiesBase.CanRenderEmptySelects
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "브라우저에서 빈 HTML를 지원 하는지 여부를 나타내는 값을 가져옵니다 <xref uid=&quot;langword_csharp_&lt;select&gt;&quot; name=&quot;&lt;select&gt;&quot; href=&quot;&quot;> </xref> 요소입니다."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser supports empty HTML `<select>` elements.  \n  \n [!code-cs[HttpCapabilitiesBase.CanRenderEmptySelects#1](~/add/codesnippet/csharp/p-system.web.configurati_70_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.CanRenderEmptySelects#1](~/add/codesnippet/visualbasic/p-system.web.configurati_70_1.aspx)]"
  syntax:
    content: public virtual bool CanRenderEmptySelects { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>브라우저에서 빈 HTML 있으면 <xref uid=&quot;langword_csharp_&lt;select&gt;&quot; name=&quot;&lt;select&gt;&quot; href=&quot;&quot;> </xref> 요소, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.CanRenderEmptySelects*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether
  id: CanRenderInputAndSelectElementsTogether
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: CanRenderInputAndSelectElementsTogether
  nameWithType: HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether
  fullName: System.Web.Configuration.HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "브라우저에서 WML을 지원 하는지 여부를 나타내는 값을 가져옵니다 <xref uid=&quot;langword_csharp_INPUT&quot; name=&quot;INPUT&quot; href=&quot;&quot;> </xref> 및 <xref uid=&quot;langword_csharp_SELECT&quot; name=&quot;SELECT&quot; href=&quot;&quot;> </xref> 요소를 동일한 카드에서 함께 합니다."
  remarks: "CanRenderInputAndSelectElementsTogether 속성이 WML 호환 모바일 장치에만 적용 됩니다."
  example:
  - "The following code example shows how to determine whether the browser supports HTML `<input>` and `<select>` elements together.  \n  \n [!code-cs[HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether#1](~/add/codesnippet/csharp/f29696c5-098f-4bb4-bc52-_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether#1](~/add/codesnippet/visualbasic/f29696c5-098f-4bb4-bc52-_1.aspx)]"
  syntax:
    content: public virtual bool CanRenderInputAndSelectElementsTogether { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>브라우저에서 WML 있으면 <xref uid=&quot;langword_csharp_&lt;input&gt;&quot; name=&quot;&lt;input&gt;&quot; href=&quot;&quot;> </xref> 및 <xref uid=&quot;langword_csharp_&lt;select&gt;&quot; name=&quot;&lt;select&gt;&quot; href=&quot;&quot;> </xref> 요소, 그러지 않으면 함께 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanRenderMixedSelects
  id: CanRenderMixedSelects
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: CanRenderMixedSelects
  nameWithType: HttpCapabilitiesBase.CanRenderMixedSelects
  fullName: System.Web.Configuration.HttpCapabilitiesBase.CanRenderMixedSelects
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "브라우저에서 WML을 지원 하는지 여부를 나타내는 값을 가져옵니다 <xref uid=&quot;langword_csharp_&lt;option&gt;&quot; name=&quot;&lt;option&gt;&quot; href=&quot;&quot;> </xref> 둘 다 지정 하는 요소 <xref uid=&quot;langword_csharp_onpick&quot; name=&quot;onpick&quot; href=&quot;&quot;> </xref> 및 <xref uid=&quot;langword_csharp_value&quot; name=&quot;value&quot; href=&quot;&quot;> </xref> 특성입니다."
  remarks: "CanRenderMixedSelects 속성이 WML 호환 모바일 장치에만 적용 됩니다.       경우 `false`, `onpick` 하이퍼링크로 표시 되는 값 및 `value` 특성 있어야는 `<do>` 포스트백에 대 한 요소입니다."
  example:
  - "The following code example shows how to determine whether the browser supports HTML `<option>` elements that specify both `onpick` and `value` attributes.  \n  \n [!code-cs[HttpCapabilitiesBase.CanRenderMixedSelects#1](~/add/codesnippet/csharp/p-system.web.configurati_159_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.CanRenderMixedSelects#1](~/add/codesnippet/visualbasic/p-system.web.configurati_159_1.aspx)]"
  syntax:
    content: public virtual bool CanRenderMixedSelects { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>브라우저에서 WML 있으면 <xref uid=&quot;langword_csharp_&lt;option&gt;&quot; name=&quot;&lt;option&gt;&quot; href=&quot;&quot;> </xref> 둘 다 지정 하는 요소 <xref uid=&quot;langword_csharp_onpick&quot; name=&quot;onpick&quot; href=&quot;&quot;> </xref> 및 <xref uid=&quot;langword_csharp_value&quot; name=&quot;value&quot; href=&quot;&quot;> </xref> 특성 그렇지 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.CanRenderMixedSelects*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether
  id: CanRenderOneventAndPrevElementsTogether
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: CanRenderOneventAndPrevElementsTogether
  nameWithType: HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether
  fullName: System.Web.Configuration.HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "브라우저에서 WML을 지원 하는지 여부를 나타내는 값을 가져옵니다 <xref uid=&quot;langword_csharp_&lt;onevent&gt;&quot; name=&quot;&lt;onevent&gt;&quot; href=&quot;&quot;> </xref> 및 <xref uid=&quot;langword_csharp_&lt;prev&gt;&quot; name=&quot;&lt;prev&gt;&quot; href=&quot;&quot;> </xref> 동일한 WML 카드에 포함 하는 요소입니다."
  remarks: "CanRenderOneventAndPrevElementsTogether 속성이 WML 호환 모바일 장치에만 적용 됩니다.       경우 `false`, WML `<onevent>` 및 `<prev>` 동일한 WML 카드에 포함 하는 요소 제대로 렌더링 되지 것입니다."
  example:
  - "The following code example shows how to determine whether the browser supports WML `<onevent>` and `<prev>` elements that coexist within the same WML card.  \n  \n [!code-cs[HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether#1](~/add/codesnippet/csharp/3effd139-a28b-4ed4-a597-_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether#1](~/add/codesnippet/visualbasic/3effd139-a28b-4ed4-a597-_1.aspx)]"
  syntax:
    content: public virtual bool CanRenderOneventAndPrevElementsTogether { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>브라우저에서 WML 있으면 <xref uid=&quot;langword_csharp_&lt;onevent&gt;&quot; name=&quot;&lt;onevent&gt;&quot; href=&quot;&quot;> </xref> 및 <xref uid=&quot;langword_csharp_&lt;prev&gt;&quot; name=&quot;&lt;prev&gt;&quot; href=&quot;&quot;> </xref> 동일한 WML 카드;에 포함 하는 요소, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanRenderPostBackCards
  id: CanRenderPostBackCards
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: CanRenderPostBackCards
  nameWithType: HttpCapabilitiesBase.CanRenderPostBackCards
  fullName: System.Web.Configuration.HttpCapabilitiesBase.CanRenderPostBackCards
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "브라우저에서 포스트백에 대해 WML 카드를 지원 하는지 여부를 나타내는 값을 가져옵니다."
  remarks: "CanRenderPostBackCards 속성이 WML와 호환 되는 모바일 장치 브라우저에만 적용 됩니다.       경우 `false`포스트백, 카드 브라우저에서 제대로 렌더링 되지 것입니다."
  example:
  - "The following code example shows how to determine whether the browser supports WML cards for postback.  \n  \n [!code-cs[HttpCapabilitiesBase.CanRenderPostBackCards#1](~/add/codesnippet/csharp/p-system.web.configurati_38_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.CanRenderPostBackCards#1](~/add/codesnippet/visualbasic/p-system.web.configurati_38_1.aspx)]"
  syntax:
    content: public virtual bool CanRenderPostBackCards { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>브라우저에서 포스트백;에 대해 WML 카드를 지원 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.CanRenderPostBackCards*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList
  id: CanRenderSetvarZeroWithMultiSelectionList
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: CanRenderSetvarZeroWithMultiSelectionList
  nameWithType: HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList
  fullName: System.Web.Configuration.HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "브라우저에서 WML을 지원 하는지 여부를 나타내는 값을 가져옵니다 <xref uid=&quot;langword_csharp_&lt;setvar&gt;&quot; name=&quot;&lt;setvar&gt;&quot; href=&quot;&quot;> </xref> 사용 하 여 요소는 <xref uid=&quot;langword_csharp_value&quot; name=&quot;value&quot; href=&quot;&quot;> </xref> 특성이 0입니다."
  remarks: "CanRenderSetvarZeroWithMultiSelectionList 속성이 WML 호환 모바일 장치에만 적용 됩니다.       경우 `false`, HTML `<setvar>` 사용 하 여 요소는 `value` 특성 `0` 제대로 표시 되지 것입니다."
  example:
  - "The following code example shows how to determine whether the browser supports WML `<setvar>` elements with a `value` attribute of 0.  \n  \n [!code-cs[HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList#1](~/add/codesnippet/csharp/965cbaf2-04ba-434c-aba7-_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList#1](~/add/codesnippet/visualbasic/965cbaf2-04ba-434c-aba7-_1.aspx)]"
  syntax:
    content: public virtual bool CanRenderSetvarZeroWithMultiSelectionList { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>브라우저에서 WML 있으면 <xref uid=&quot;langword_csharp_&lt;setvar&gt;&quot; name=&quot;&lt;setvar&gt;&quot; href=&quot;&quot;> </xref> 사용 하 여 요소는 <xref uid=&quot;langword_csharp_value&quot; name=&quot;value&quot; href=&quot;&quot;> </xref> 특성 <xref uid=&quot;langword_csharp_0&quot; name=&quot;0&quot; href=&quot;&quot;> </xref>, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanSendMail
  id: CanSendMail
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: CanSendMail
  nameWithType: HttpCapabilitiesBase.CanSendMail
  fullName: System.Web.Configuration.HttpCapabilitiesBase.CanSendMail
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "브라우저에서 HTML을 사용 하 여 전자 메일 보내기를 지원 하는지 여부를 나타내는 값을 가져옵니다 <xref uid=&quot;langword_csharp_&lt;mailto&gt;&quot; name=&quot;&lt;mailto&gt;&quot; href=&quot;&quot;> </xref> 요소 전자 주소를 표시 합니다."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser supports sending e-mail by using the HTML `<mailto>` element for displaying electronic addresses.  \n  \n [!code-vb[HttpCapabilitiesBase.CanSendMail#1](~/add/codesnippet/visualbasic/p-system.web.configurati_221_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.CanSendMail#1](~/add/codesnippet/csharp/p-system.web.configurati_221_1.aspx)]"
  syntax:
    content: public virtual bool CanSendMail { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>브라우저에서 HTML을 사용 하 여 전자 메일 보내기 경우 <xref uid=&quot;langword_csharp_&lt;mailto&gt;&quot; name=&quot;&lt;mailto&gt;&quot; href=&quot;&quot;> </xref> ; 전자 주소를 표시 하는 요소, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.CanSendMail*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.Capabilities
  id: Capabilities
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: Capabilities
  nameWithType: HttpCapabilitiesBase.Capabilities
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Capabilities
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "브라우저의 정의 된 기능을 가져오지 내부적으로 사용 합니다."
  syntax:
    content: public System.Collections.IDictionary Capabilities { get; set; }
    return:
      type: System.Collections.IDictionary
      description: "브라우저의 정의 된 기능입니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.Capabilities*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.CDF
  id: CDF
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: CDF
  nameWithType: HttpCapabilitiesBase.CDF
  fullName: System.Web.Configuration.HttpCapabilitiesBase.CDF
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "브라우저에서 웹캐스팅을 위한 CDF 채널 정의 형식 ()를 지원 하는지를 나타내는 값을 가져옵니다."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser supports CDF.  \n  \n [!code-vb[HttpCapabilitiesBase.CDF#1](~/add/codesnippet/visualbasic/p-system.web.configurati_293_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.CDF#1](~/add/codesnippet/csharp/p-system.web.configurati_293_1.aspx)]"
  syntax:
    content: public bool CDF { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>브라우저에서 CDF; 지원 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.CDF*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.ClrVersion
  id: ClrVersion
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: ClrVersion
  nameWithType: HttpCapabilitiesBase.ClrVersion
  fullName: System.Web.Configuration.HttpCapabilitiesBase.ClrVersion
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "클라이언트에 설치 된.NET Framework의 버전을 가져옵니다."
  remarks: "ClrVersion 속성은 브라우저는 Internet Explorer 버전 5.0 이상은 하는 경우에 지원 됩니다.       Version 요소 값은 반환.NET Framework 클라이언트에 설치 되어 있지 않으면, `0, 0,-1,-1`합니다.       클라이언트에 둘 이상의 버전의.NET Framework가 설치 되어 ClrVersion 속성 최신 버전을 반환 합니다."
  syntax:
    content: public Version ClrVersion { get; }
    return:
      type: System.Version
      description: "공용 언어 런타임 <xref:System.Version>입니다.</xref:System.Version>"
  overload: System.Web.Configuration.HttpCapabilitiesBase.ClrVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.Cookies
  id: Cookies
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: Cookies
  nameWithType: HttpCapabilitiesBase.Cookies
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Cookies
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "브라우저에서 쿠키를 지원 하는지 여부를 나타내는 값을 가져옵니다."
  remarks: "쿠키 속성 브라우저 응용 프로그램에서 쿠키를 지원 하는지 여부를 나타냅니다. 사용자가 해당 응용 프로그램에서 쿠키를 사용 하지 않도록 설정, 쿠키 속성 영향을 받지 않습니다."
  example:
  - "The following code example shows how to determine whether the browser supports cookies.  \n  \n [!code-vb[HttpCapabilitiesBase.Cookies#1](~/add/codesnippet/visualbasic/p-system.web.configurati_7_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.Cookies#1](~/add/codesnippet/csharp/p-system.web.configurati_7_1.aspx)]"
  syntax:
    content: public bool Cookies { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>브라우저에서 쿠키; 지원 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.Cookies*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.Crawler
  id: Crawler
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: Crawler
  nameWithType: HttpCapabilitiesBase.Crawler
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Crawler
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "브라우저가 검색 엔진 웹 크롤러 인지를 나타내는 값을 가져옵니다."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the client is a search engine Web crawler.  \n  \n [!code-vb[HttpCapabilitiesBase.Crawler#1](~/add/codesnippet/visualbasic/p-system.web.configurati_34_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.Crawler#1](~/add/codesnippet/csharp/p-system.web.configurati_34_1.aspx)]"
  syntax:
    content: public bool Crawler { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>브라우저가 검색 엔진; 이면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.Crawler*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.CreateHtmlTextWriter(System.IO.TextWriter)
  id: CreateHtmlTextWriter(System.IO.TextWriter)
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: CreateHtmlTextWriter(TextWriter)
  nameWithType: HttpCapabilitiesBase.CreateHtmlTextWriter(TextWriter)
  fullName: System.Web.Configuration.HttpCapabilitiesBase.CreateHtmlTextWriter(TextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "새 인스턴스를 만듭니다는 <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> 사용할 수 있습니다."
  syntax:
    content: public System.Web.UI.HtmlTextWriter CreateHtmlTextWriter (System.IO.TextWriter w);
    parameters:
    - id: w
      type: System.IO.TextWriter
      description: "<xref:System.IO.TextWriter>만들어야 합니다.</xref:System.IO.TextWriter>"
    return:
      type: System.Web.UI.HtmlTextWriter
      description: "새 인스턴스는 <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> 사용할 수 있습니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.CreateHtmlTextWriter*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "인스턴스를 만드는 메서드가 실패 한 <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.DefaultSubmitButtonLimit
  id: DefaultSubmitButtonLimit
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: DefaultSubmitButtonLimit
  nameWithType: HttpCapabilitiesBase.DefaultSubmitButtonLimit
  fullName: System.Web.Configuration.HttpCapabilitiesBase.DefaultSubmitButtonLimit
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "폼에 허용 되는 제출 단추의 최대 수를 반환 합니다."
  remarks: "DefaultSubmitButtonLimit 속성은 주로 WML 호환 모바일 장치에서 사용할 수 있는 소프트 키의 수를 나타냅니다.       Web Forms 페이지에 모바일 장치를 포함할 수 있습니다는 <xref:System.Web.UI.MobileControls.SelectionList>개체와 여러 개 <xref:System.Web.UI.MobileControls.Command>컨트롤.</xref:System.Web.UI.MobileControls.Command> </xref:System.Web.UI.MobileControls.SelectionList> DefaultSubmitButtonLimit을 사용 하면 중에서 선택할 수 있습니다는 <xref:System.Web.UI.MobileControls.Command>컨트롤 여러 소프트 키가 있는 장치에서 소프트 키에 할당 해야 합니다.</xref:System.Web.UI.MobileControls.Command>"
  syntax:
    content: public virtual int DefaultSubmitButtonLimit { get; }
    return:
      type: System.Int32
      description: "폼에 허용 되는 제출 단추의 최대 수입니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.DefaultSubmitButtonLimit*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.DisableOptimizedCacheKey
  id: DisableOptimizedCacheKey
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: DisableOptimizedCacheKey()
  nameWithType: HttpCapabilitiesBase.DisableOptimizedCacheKey()
  fullName: System.Web.Configuration.HttpCapabilitiesBase.DisableOptimizedCacheKey()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "최적화 된 캐시 키를 사용 하지 않도록 하려면 내부적으로 사용 합니다."
  syntax:
    content: public void DisableOptimizedCacheKey ();
    parameters: []
  overload: System.Web.Configuration.HttpCapabilitiesBase.DisableOptimizedCacheKey*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.EcmaScriptVersion
  id: EcmaScriptVersion
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: EcmaScriptVersion
  nameWithType: HttpCapabilitiesBase.EcmaScriptVersion
  fullName: System.Web.Configuration.HttpCapabilitiesBase.EcmaScriptVersion
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "브라우저에서 지 원하는 ECMAScript의 버전 번호를 가져옵니다."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser supports an ECMAScript major version number greater than 1.  \n  \n [!code-cs[HttpCapabilitiesBase.EcmaScriptVersion#1](~/add/codesnippet/csharp/p-system.web.configurati_75_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.EcmaScriptVersion#1](~/add/codesnippet/visualbasic/p-system.web.configurati_75_1.aspx)]"
  syntax:
    content: public Version EcmaScriptVersion { get; }
    return:
      type: System.Version
      description: "브라우저에서 지 원하는 ECMAScript의 버전 번호입니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.EcmaScriptVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.Frames
  id: Frames
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: Frames
  nameWithType: HttpCapabilitiesBase.Frames
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Frames
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "브라우저에서 HTML 프레임을 지원 하는지 여부를 나타내는 값을 가져옵니다."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser supports HTML frames.  \n  \n [!code-cs[HttpCapabilitiesBase.Frames#1](~/add/codesnippet/csharp/p-system.web.configurati_188_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.Frames#1](~/add/codesnippet/visualbasic/p-system.web.configurati_188_1.aspx)]"
  syntax:
    content: public bool Frames { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>브라우저에서 프레임을 지 원하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.Frames*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.GatewayMajorVersion
  id: GatewayMajorVersion
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: GatewayMajorVersion
  nameWithType: HttpCapabilitiesBase.GatewayMajorVersion
  fullName: System.Web.Configuration.HttpCapabilitiesBase.GatewayMajorVersion
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "알 수 있는 경우 서버에 액세스 하는 데 사용 되는 무선 게이트웨이의 주 버전 번호를 가져옵니다."
  syntax:
    content: public virtual int GatewayMajorVersion { get; }
    return:
      type: System.Int32
      description: "알 수 있는 경우 서버에 액세스 하는 데 사용 되는 무선 게이트웨이의 주 버전 번호. 기본값은 <xref uid=&quot;langword_csharp_0&quot; name=&quot;0&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.GatewayMajorVersion*
  exceptions:
  - type: System.Web.HttpUnhandledException
    commentId: T:System.Web.HttpUnhandledException
    description: "무선 게이트웨이의 주 버전 번호를 구문 분석할 수 없습니다."
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.GatewayMinorVersion
  id: GatewayMinorVersion
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: GatewayMinorVersion
  nameWithType: HttpCapabilitiesBase.GatewayMinorVersion
  fullName: System.Web.Configuration.HttpCapabilitiesBase.GatewayMinorVersion
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "알 수 있는 경우 서버에 액세스 하는 데 사용 되는 무선 게이트웨이의 부 버전 번호를 가져옵니다."
  syntax:
    content: public virtual double GatewayMinorVersion { get; }
    return:
      type: System.Double
      description: "알 수 있는 경우 서버에 액세스 하는 데 사용 되는 무선 게이트웨이의 부 버전 번호. 기본값은 <xref uid=&quot;langword_csharp_0&quot; name=&quot;0&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.GatewayMinorVersion*
  exceptions:
  - type: System.Web.HttpUnhandledException
    commentId: T:System.Web.HttpUnhandledException
    description: "무선 게이트웨이의 부 버전 번호를 구문 분석할 수 없습니다."
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.GatewayVersion
  id: GatewayVersion
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: GatewayVersion
  nameWithType: HttpCapabilitiesBase.GatewayVersion
  fullName: System.Web.Configuration.HttpCapabilitiesBase.GatewayVersion
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "알 수 있는 경우 서버에 액세스 하는 데 사용 되는 무선 게이트웨이의 버전을 가져옵니다."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the gateway is an `UP` gateway.  \n  \n [!code-vb[HttpCapabilitiesBase.GatewayVersion#1](~/add/codesnippet/visualbasic/p-system.web.configurati_11_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.GatewayVersion#1](~/add/codesnippet/csharp/p-system.web.configurati_11_1.aspx)]"
  syntax:
    content: public virtual string GatewayVersion { get; }
    return:
      type: System.String
      description: "알 수 있는 경우 서버에 액세스 하는 데 사용 되는 무선 게이트웨이의 버전 번호입니다. 기본값은 <xref uid=&quot;langword_csharp_None&quot; name=&quot;None&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.GatewayVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.GetClrVersions
  id: GetClrVersions
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: GetClrVersions()
  nameWithType: HttpCapabilitiesBase.GetClrVersions()
  fullName: System.Web.Configuration.HttpCapabilitiesBase.GetClrVersions()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "클라이언트에 설치 된 모든.NET Framework 공용 언어 런타임 버전을 반환 합니다."
  remarks: "GetClrVersions 메서드는 브라우저는 Internet Explorer 버전 5.0 이상 있는 경우에 지원 됩니다. 속성 하나만 포함 된 배열을 반환 공용 언어 런타임에서 클라이언트에 설치 되어 있지 <xref:System.Version>0, 0,-1,-1 값을 가진 개체입니다.</xref:System.Version>"
  syntax:
    content: public Version[] GetClrVersions ();
    parameters: []
    return:
      type: System.Version[]
      description: "배열을 <xref:System.Version>개체입니다.</xref:System.Version>"
  overload: System.Web.Configuration.HttpCapabilitiesBase.GetClrVersions*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.GetConfigCapabilities(System.String,System.Web.HttpRequest)
  id: GetConfigCapabilities(System.String,System.Web.HttpRequest)
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: GetConfigCapabilities(String,HttpRequest)
  nameWithType: HttpCapabilitiesBase.GetConfigCapabilities(String,HttpRequest)
  fullName: System.Web.Configuration.HttpCapabilitiesBase.GetConfigCapabilities(String,HttpRequest)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "인스턴스를 반환 하도록 내부적으로 사용 <xref href=&quot;System.Web.Configuration.HttpCapabilitiesBase&quot;> </xref> 지정 된 생성 한 브라우저를 나타내는 <xref href=&quot;System.Web.HttpRequest&quot;> </xref>합니다."
  syntax:
    content: public static System.Web.Configuration.HttpCapabilitiesBase GetConfigCapabilities (string configKey, System.Web.HttpRequest request);
    parameters:
    - id: configKey
      type: System.String
      description: "브라우저 기능을 구성 하는 구성 섹션의 이름입니다."
    - id: request
      type: System.Web.HttpRequest
      description: "<xref href=&quot;System.Web.HttpRequest&quot;> </xref> 를 반환할 기능 및 현재는 일반적으로 브라우저에 의해 생성 된 <xref href=&quot;System.Web.HttpRequest&quot;> </xref>합니다."
    return:
      type: System.Web.Configuration.HttpCapabilitiesBase
      description: "인스턴스 <xref href=&quot;System.Web.Configuration.HttpCapabilitiesBase&quot;> </xref> 지정 된 생성 한 브라우저를 나타내는 <xref href=&quot;System.Web.HttpRequest&quot;> </xref>합니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.GetConfigCapabilities*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.HasBackButton
  id: HasBackButton
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: HasBackButton
  nameWithType: HttpCapabilitiesBase.HasBackButton
  fullName: System.Web.Configuration.HttpCapabilitiesBase.HasBackButton
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "브라우저에 전용 있는지 여부를 나타내는 값을 가져옵니다 **다시** 단추입니다."
  remarks: "경우 `false`때 링크 컨트롤이 필요할 수도 **다시** 단추는 사용할 수 없습니다."
  example:
  - "The following code example shows how to determine whether the browser has a dedicated **Back** button.  \n  \n [!code-vb[HttpCapabilitiesBase.HasBackButton#1](~/add/codesnippet/visualbasic/p-system.web.configurati_229_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.HasBackButton#1](~/add/codesnippet/csharp/p-system.web.configurati_229_1.aspx)]"
  syntax:
    content: public virtual bool HasBackButton { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>브라우저에 전용 경우 **다시** 단추; 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.HasBackButton*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.HidesRightAlignedMultiselectScrollbars
  id: HidesRightAlignedMultiselectScrollbars
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: HidesRightAlignedMultiselectScrollbars
  nameWithType: HttpCapabilitiesBase.HidesRightAlignedMultiselectScrollbars
  fullName: System.Web.Configuration.HttpCapabilitiesBase.HidesRightAlignedMultiselectScrollbars
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "나타내는 값을 가져옵니다 여부 html scrollbar <xref uid=&quot;langword_csharp_&lt;select multiple&gt;&quot; name=&quot;&lt;select multiple&gt;&quot; href=&quot;&quot;> </xref> 인 요소는 <xref uid=&quot;langword_csharp_align&quot; name=&quot;align&quot; href=&quot;&quot;> </xref> 특성 값이 <xref uid=&quot;langword_csharp_right&quot; name=&quot;right&quot; href=&quot;&quot;> </xref> 렌더링할 때 가려지는지 합니다."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser obscures the scrollbar for right-aligned multi-select elements.  \n  \n [!code-vb[HttpCapabilitiesBase.HidesRightAlignedMultiselectScrollbars#1](~/add/codesnippet/visualbasic/35e8f82c-ef59-4da6-a070-_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.HidesRightAlignedMultiselectScrollbars#1](~/add/codesnippet/csharp/35e8f82c-ef59-4da6-a070-_1.aspx)]"
  syntax:
    content: public virtual bool HidesRightAlignedMultiselectScrollbars { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우 html scrollbar <xref uid=&quot;langword_csharp_&lt;select multiple&gt;&quot; name=&quot;&lt;select multiple&gt;&quot; href=&quot;&quot;> </xref> 인 요소는 <xref uid=&quot;langword_csharp_align&quot; name=&quot;align&quot; href=&quot;&quot;> </xref> 특성 값이 <xref uid=&quot;langword_csharp_right&quot; name=&quot;right&quot; href=&quot;&quot;> </xref> 렌더링할 때가 려 지 고, 그러지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.HidesRightAlignedMultiselectScrollbars*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.HtmlTextWriter
  id: HtmlTextWriter
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: HtmlTextWriter
  nameWithType: HttpCapabilitiesBase.HtmlTextWriter
  fullName: System.Web.Configuration.HttpCapabilitiesBase.HtmlTextWriter
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "정규화 된 클래스 이름을 가져오거나 설정 합니다.는 <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> 사용 하도록 합니다."
  syntax:
    content: public string HtmlTextWriter { get; set; }
    return:
      type: System.String
      description: "정규화 된 클래스 이름에서 <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> 사용 하도록 합니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.HtmlTextWriter*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.Id
  id: Id
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: Id
  nameWithType: HttpCapabilitiesBase.Id
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Id
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "브라우저 정의 파일에 지정 된 대로 브라우저의 내부 식별자를 가져옵니다."
  syntax:
    content: public string Id { get; }
    return:
      type: System.String
      description: "브라우저 정의 파일에 지정 된 대로 브라우저의 내부 식별자입니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.Id*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.Init
  id: Init
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: Init()
  nameWithType: HttpCapabilitiesBase.Init()
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Init()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "내부적으로 사용 하는 내부 값 집합을 초기화 합니다."
  syntax:
    content: protected virtual void Init ();
    parameters: []
  overload: System.Web.Configuration.HttpCapabilitiesBase.Init*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.InputType
  id: InputType
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: InputType
  nameWithType: HttpCapabilitiesBase.InputType
  fullName: System.Web.Configuration.HttpCapabilitiesBase.InputType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "브라우저에서 지 원하는 입력 형식을 반환 합니다."
  remarks: "가능한 반환 값은 같습니다.-`virtualKeyboard`      -   `telephoneKeypad`      -   `keyboard`"
  example:
  - "The following code example shows how to determine the type of input support.  \n  \n [!code-cs[HttpCapabilitiesBase.InputType#1](~/add/codesnippet/csharp/p-system.web.configurati_266_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.InputType#1](~/add/codesnippet/visualbasic/p-system.web.configurati_266_1.aspx)]"
  syntax:
    content: public virtual string InputType { get; }
    return:
      type: System.String
      description: "브라우저에서 지원 되는 입력의 형식입니다. 기본값은 `telephoneKeypad`합니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.InputType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.IsBrowser(System.String)
  id: IsBrowser(System.String)
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: IsBrowser(String)
  nameWithType: HttpCapabilitiesBase.IsBrowser(String)
  fullName: System.Web.Configuration.HttpCapabilitiesBase.IsBrowser(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "클라이언트 브라우저가 지정된 된 브라우저와 같은지 여부를 나타내는 값을 가져옵니다."
  remarks: "IsBrowser 메서드도 반환 `true` 클라이언트 브라우저 정의가 지정된 된 브라우저에서 상속 하는 경우."
  syntax:
    content: public bool IsBrowser (string browserName);
    parameters:
    - id: browserName
      type: System.String
      description: "지정된 된 브라우저입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>클라이언트 브라우저가 지정된 된 브라우저와 동일한 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.IsBrowser*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.IsColor
  id: IsColor
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: IsColor
  nameWithType: HttpCapabilitiesBase.IsColor
  fullName: System.Web.Configuration.HttpCapabilitiesBase.IsColor
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "브라우저에 컬러 디스플레이가 있는지 여부를 나타내는 값을 가져옵니다."
  remarks: ''
  example:
  - "The following code example shows whether the client's browser supports color. The returned value could be used to determine the appropriate image to send to the browser.  \n  \n [!code-cs[HttpCapabilitiesBase.IsColor#1](~/add/codesnippet/csharp/p-system.web.configurati_262_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.IsColor#1](~/add/codesnippet/visualbasic/p-system.web.configurati_262_1.aspx)]"
  syntax:
    content: public virtual bool IsColor { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>브라우저에 컬러 디스플레이가; 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.IsColor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.IsMobileDevice
  id: IsMobileDevice
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: IsMobileDevice
  nameWithType: HttpCapabilitiesBase.IsMobileDevice
  fullName: System.Web.Configuration.HttpCapabilitiesBase.IsMobileDevice
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "브라우저가 인식 된 모바일 장치 인지를 나타내는 값을 가져옵니다."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser is a mobile device.  \n  \n [!code-cs[HttpCapabilitiesBase.IsMobileDevice#1](~/add/codesnippet/csharp/p-system.web.configurati_270_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.IsMobileDevice#1](~/add/codesnippet/visualbasic/p-system.web.configurati_270_1.aspx)]"
  syntax:
    content: public virtual bool IsMobileDevice { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>브라우저가 인식 된 모바일 장치; 이면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.IsMobileDevice*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.Item(System.String)
  id: Item(System.String)
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: Item(String)
  nameWithType: HttpCapabilitiesBase.Item(String)
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Item(String)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "지정 된 브라우저 기능의 값을 가져옵니다. C#의 경우이 속성은 클래스의 인덱서입니다."
  remarks: "Jscript에서는 형식에 의해 정의 된 기본 인덱싱된 속성을 사용할 수 있습니다 하지만 정의할 수는 없습니다 명시적으로 직접. 그러나 지정 하는 `expando` 클래스에 특성에 형식이 인 기본 인덱싱된 속성이 자동으로 제공 `Object` 하 고 인덱스 형식이 `String`합니다."
  syntax:
    content: public virtual string this[string key] { get; }
    parameters:
    - id: key
      type: System.String
      description: "검색할 브라우저 기능의 이름입니다."
    return:
      type: System.String
      description: "지정한 키 이름 사용 하는 브라우저 기능입니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.JavaApplets
  id: JavaApplets
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: JavaApplets
  nameWithType: HttpCapabilitiesBase.JavaApplets
  fullName: System.Web.Configuration.HttpCapabilitiesBase.JavaApplets
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "브라우저에서 Java를 지원 하는지 여부를 나타내는 값을 가져옵니다."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser supports Java.  \n  \n [!code-cs[HttpCapabilitiesBase.JavaApplets#1](~/add/codesnippet/csharp/p-system.web.configurati_397_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.JavaApplets#1](~/add/codesnippet/visualbasic/p-system.web.configurati_397_1.aspx)]"
  syntax:
    content: public bool JavaApplets { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>브라우저에서 Java를 지원 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.JavaApplets*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.JavaScript
  id: JavaScript
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: JavaScript
  nameWithType: HttpCapabilitiesBase.JavaScript
  fullName: System.Web.Configuration.HttpCapabilitiesBase.JavaScript
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "브라우저에서 JavaScript를 지원 하는지 여부를 나타내는 값을 가져옵니다."
  remarks: "JavaScript 속성은 반환 하는 경우 브라우저에서 JavaScript를 지원 하지만 보안 설정을 통해 스크립팅을 사용 하지 않도록 설정, `true` 브라우저에서 스크립트 실행 되지는 것입니다."
  example:
  - "The following code example shows how to determine whether the browser supports JavaScript.  \n  \n [!code-vb[HttpCapabilitiesBase.JavaScript#1](~/add/codesnippet/visualbasic/p-system.web.configurati_318_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.JavaScript#1](~/add/codesnippet/csharp/p-system.web.configurati_318_1.aspx)]"
  syntax:
    content: public bool JavaScript { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>브라우저에서 JavaScript; 지원 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.JavaScript*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.JScriptVersion
  id: JScriptVersion
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: JScriptVersion
  nameWithType: HttpCapabilitiesBase.JScriptVersion
  fullName: System.Web.Configuration.HttpCapabilitiesBase.JScriptVersion
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "브라우저에서 지 원하는 JScript 버전을 가져옵니다."
  syntax:
    content: public Version JScriptVersion { get; }
    return:
      type: System.Version
      description: "<xref:System.Version>브라우저에서 지 원하는 jscript.</xref:System.Version>"
  overload: System.Web.Configuration.HttpCapabilitiesBase.JScriptVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.MajorVersion
  id: MajorVersion
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: MajorVersion
  nameWithType: HttpCapabilitiesBase.MajorVersion
  fullName: System.Web.Configuration.HttpCapabilitiesBase.MajorVersion
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "주 (정수)를 가져옵니다는 브라우저의 버전 번호입니다."
  remarks: ''
  example:
  - "The following code example adds the major and minor (integer and decimal) values of the browser version number and sends the result to browser.  \n  \n [!code-cs[HttpCapabilitiesBase.MajorVersion#1](~/add/codesnippet/csharp/p-system.web.configurati_241_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.MajorVersion#1](~/add/codesnippet/visualbasic/p-system.web.configurati_241_1.aspx)]"
  syntax:
    content: public int MajorVersion { get; }
    return:
      type: System.Int32
      description: "브라우저의 주 버전 번호입니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.MajorVersion*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "주 버전 값이 정수."
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.MaximumHrefLength
  id: MaximumHrefLength
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: MaximumHrefLength
  nameWithType: HttpCapabilitiesBase.MaximumHrefLength
  fullName: System.Web.Configuration.HttpCapabilitiesBase.MaximumHrefLength
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "문자에 대 한 최대 길이 가져옵니다는 <xref uid=&quot;langword_csharp_href&quot; name=&quot;href&quot; href=&quot;&quot;> </xref> html 특성 <xref uid=&quot;langword_csharp_&lt;a&gt;&quot; name=&quot;&lt;a&gt;&quot; href=&quot;&quot;> </xref> (앵커) 요소입니다."
  syntax:
    content: public virtual int MaximumHrefLength { get; }
    return:
      type: System.Int32
      description: "문자에 대 한 최대 길이 <xref uid=&quot;langword_csharp_href&quot; name=&quot;href&quot; href=&quot;&quot;> </xref> html 특성 <xref uid=&quot;langword_csharp_&lt;a&gt;&quot; name=&quot;&lt;a&gt;&quot; href=&quot;&quot;> </xref> (앵커) 요소입니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.MaximumHrefLength*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.MaximumRenderedPageSize
  id: MaximumRenderedPageSize
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: MaximumRenderedPageSize
  nameWithType: HttpCapabilitiesBase.MaximumRenderedPageSize
  fullName: System.Web.Configuration.HttpCapabilitiesBase.MaximumRenderedPageSize
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "브라우저가 표시할 수 있는 바이트 페이지의 최대 길이 가져옵니다."
  remarks: "중간 게이트웨이 통해 처리 브라우저에 도달 하는 바이트의 수를 변경할 수 있습니다. ASP.NET은 페이지 크기에이 제한을 적용 하지 않습니다.       MaximumRenderedPageSize는 모바일 클라이언트 브라우저에서 작업할 때 주로 유용 합니다."
  syntax:
    content: public virtual int MaximumRenderedPageSize { get; }
    return:
      type: System.Int32
      description: "브라우저가 표시할 수 있는 바이트에 있는 페이지의 최대 길이입니다. 기본값은 `2000`합니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.MaximumRenderedPageSize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.MaximumSoftkeyLabelLength
  id: MaximumSoftkeyLabelLength
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: MaximumSoftkeyLabelLength
  nameWithType: HttpCapabilitiesBase.MaximumSoftkeyLabelLength
  fullName: System.Web.Configuration.HttpCapabilitiesBase.MaximumSoftkeyLabelLength
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "소프트 키 레이블이 표시할 수 있는 텍스트의 최대 길이 반환 합니다."
  remarks: "MaximumSoftkeyLabelLength 속성이 WML 호환 모바일 장치에만 적용 됩니다."
  example:
  - "The following code example shows how to determine the maximum length of the soft-key label for the browser.  \n  \n [!code-cs[HttpCapabilitiesBase.MaximumSoftkeyLabelLength#1](~/add/codesnippet/csharp/p-system.web.configurati_145_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.MaximumSoftkeyLabelLength#1](~/add/codesnippet/visualbasic/p-system.web.configurati_145_1.aspx)]"
  syntax:
    content: public virtual int MaximumSoftkeyLabelLength { get; }
    return:
      type: System.Int32
      description: "소프트 키 레이블이 표시할 수 있는 텍스트의 최대 길이입니다. 기본값은 <xref uid=&quot;langword_csharp_5&quot; name=&quot;5&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.MaximumSoftkeyLabelLength*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.MinorVersion
  id: MinorVersion
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: MinorVersion
  nameWithType: HttpCapabilitiesBase.MinorVersion
  fullName: System.Web.Configuration.HttpCapabilitiesBase.MinorVersion
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "부 가져옵니다 (즉,&10; 진수) 브라우저의 버전 번호입니다."
  remarks: ''
  example:
  - "The following code example returns the minor version of the browser.  \n  \n [!code-cs[HttpCapabilitiesBase.MinorVersion#1](~/add/codesnippet/csharp/p-system.web.configurati_84_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.MinorVersion#1](~/add/codesnippet/visualbasic/p-system.web.configurati_84_1.aspx)]"
  syntax:
    content: public double MinorVersion { get; }
    return:
      type: System.Double
      description: "브라우저의 부 버전 번호입니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.MinorVersion*
  exceptions:
  - type: System.Web.HttpUnhandledException
    commentId: T:System.Web.HttpUnhandledException
    description: "헤더의 부 버전 번호가 올바르지 않습니다."
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.MinorVersionString
  id: MinorVersionString
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: MinorVersionString
  nameWithType: HttpCapabilitiesBase.MinorVersionString
  fullName: System.Web.Configuration.HttpCapabilitiesBase.MinorVersionString
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "문자열로 서 브라우저의 부 (10 진수) 버전 번호를 가져옵니다."
  syntax:
    content: public string MinorVersionString { get; }
    return:
      type: System.String
      description: "브라우저의 부 버전 번호입니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.MinorVersionString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.MobileDeviceManufacturer
  id: MobileDeviceManufacturer
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: MobileDeviceManufacturer
  nameWithType: HttpCapabilitiesBase.MobileDeviceManufacturer
  fullName: System.Web.Configuration.HttpCapabilitiesBase.MobileDeviceManufacturer
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "알 수 있는 경우 모바일 장치를 제조업체의 이름을 반환 합니다."
  syntax:
    content: public virtual string MobileDeviceManufacturer { get; }
    return:
      type: System.String
      description: "모바일 장치 제조업체의 이름입니다. 기본값은 <xref uid=&quot;langword_csharp_Unknown&quot; name=&quot;Unknown&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.MobileDeviceManufacturer*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.MobileDeviceModel
  id: MobileDeviceModel
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: MobileDeviceModel
  nameWithType: HttpCapabilitiesBase.MobileDeviceModel
  fullName: System.Web.Configuration.HttpCapabilitiesBase.MobileDeviceModel
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "알 수 있는 경우 모바일 장치의 모델 이름을 가져옵니다."
  syntax:
    content: public virtual string MobileDeviceModel { get; }
    return:
      type: System.String
      description: "모바일 장치의 모델 이름입니다. 기본값은 <xref uid=&quot;langword_csharp_Unknown&quot; name=&quot;Unknown&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.MobileDeviceModel*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.MSDomVersion
  id: MSDomVersion
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: MSDomVersion
  nameWithType: HttpCapabilitiesBase.MSDomVersion
  fullName: System.Web.Configuration.HttpCapabilitiesBase.MSDomVersion
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "MSHTML (Microsoft HTML) DOM 문서 개체 모델 () 브라우저에서 지 원하는 버전을 가져옵니다."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser supports an MSHTML DOM major version greater than 1.  \n  \n [!code-vb[HttpCapabilitiesBase.MSDomVersion#1](~/add/codesnippet/visualbasic/p-system.web.configurati_222_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.MSDomVersion#1](~/add/codesnippet/csharp/p-system.web.configurati_222_1.aspx)]"
  syntax:
    content: public Version MSDomVersion { get; }
    return:
      type: System.Version
      description: "브라우저에서 지 원하는 MSHTML DOM 버전 번호를 지정 합니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.MSDomVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.NumberOfSoftkeys
  id: NumberOfSoftkeys
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: NumberOfSoftkeys
  nameWithType: HttpCapabilitiesBase.NumberOfSoftkeys
  fullName: System.Web.Configuration.HttpCapabilitiesBase.NumberOfSoftkeys
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "모바일 장치에서 소프트 키의 수를 반환합니다."
  remarks: "NumberOfSoftkeys 속성이 WML 호환 모바일 장치에만 적용 됩니다.       소프트 키가 응용 프로그램 사용자 지정 작업에 매핑할 수 있는 특수 키입니다. 소프트 키 텍스트가 왼쪽 및 오른쪽 아래 모서리에 화면에 표시 됩니다."
  syntax:
    content: public virtual int NumberOfSoftkeys { get; }
    return:
      type: System.Int32
      description: "모바일 장치에서 지원 되는 소프트 키의 수입니다. 기본값은 <xref uid=&quot;langword_csharp_0&quot; name=&quot;0&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.NumberOfSoftkeys*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.Platform
  id: Platform
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: Platform
  nameWithType: HttpCapabilitiesBase.Platform
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Platform
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "알 경우 클라이언트가 사용 하는 플랫폼의 이름을 가져옵니다."
  remarks: "일부 플랫폼 속성에 대 한 가능한 값은 다음과 같습니다.- `Unknown`       -    `Win95`       -    `Win98`       -    `Windows NT 5.0` (Windows 2000)- `Windows NT 5.1` (Windows XP)- `WinNT` (다른 모든 버전의 Windows NT)-`Win16`      -   `WinCE`      -   `Mac68K`      -   `MacPPC`      -   `UNIX`      -   `WebTV`"
  example:
  - "The following code example shows how to determine whether the browser is running on the Windows NT platform.  \n  \n [!code-cs[HttpCapabilitiesBase.Platform#1](~/add/codesnippet/csharp/p-system.web.configurati_235_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.Platform#1](~/add/codesnippet/visualbasic/p-system.web.configurati_235_1.aspx)]"
  syntax:
    content: public string Platform { get; }
    return:
      type: System.String
      description: "알 경우 클라이언트가 사용 하는 운영 체제, 그렇지 않으면 값은로 설정 <xref uid=&quot;langword_csharp_Unknown&quot; name=&quot;Unknown&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.Platform*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.PreferredImageMime
  id: PreferredImageMime
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: PreferredImageMime
  nameWithType: HttpCapabilitiesBase.PreferredImageMime
  fullName: System.Web.Configuration.HttpCapabilitiesBase.PreferredImageMime
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "브라우저에서 지 원하는 기본 이미지 콘텐츠 형식의 MIME 형식을 반환 합니다."
  remarks: ''
  example:
  - "The following code example shows how to determine the type of image typically preferred by a browser.  \n  \n [!code-vb[HttpCapabilitiesBase.PreferredImageMime#1](~/add/codesnippet/visualbasic/p-system.web.configurati_205_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.PreferredImageMime#1](~/add/codesnippet/csharp/p-system.web.configurati_205_1.aspx)]"
  syntax:
    content: public virtual string PreferredImageMime { get; }
    return:
      type: System.String
      description: "브라우저에서 지 원하는 기본 이미지 콘텐츠 형식의 MIME 형식입니다. 기본값은 <xref uid=&quot;langword_csharp_image/gif&quot; name=&quot;image/gif&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.PreferredImageMime*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingMime
  id: PreferredRenderingMime
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: PreferredRenderingMime
  nameWithType: HttpCapabilitiesBase.PreferredRenderingMime
  fullName: System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingMime
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "브라우저에서 지 원하는 기본 콘텐츠 형식의 MIME 형식을 반환 합니다."
  remarks: ''
  example:
  - "The following code example shows how to determine the MIME type typically preferred by the browser.  \n  \n [!code-cs[HttpCapabilitiesBase.PreferredRenderingMime#1](~/add/codesnippet/csharp/p-system.web.configurati_125_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.PreferredRenderingMime#1](~/add/codesnippet/visualbasic/p-system.web.configurati_125_1.aspx)]"
  syntax:
    content: public virtual string PreferredRenderingMime { get; }
    return:
      type: System.String
      description: "브라우저에서 지 원하는 기본 콘텐츠 형식의 MIME 형식입니다. 기본값은 <xref uid=&quot;langword_csharp_text/html&quot; name=&quot;text/html&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingMime*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingType
  id: PreferredRenderingType
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: PreferredRenderingType
  nameWithType: HttpCapabilitiesBase.PreferredRenderingType
  fullName: System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "브라우저에서 지 원하는 콘텐츠 형식의 일반 이름을 가져옵니다."
  remarks: ''
  example:
  - "The following code example shows how to determine the type of content that the browser prefers.  \n  \n [!code-cs[HttpCapabilitiesBase.PreferredRenderingType#1](~/add/codesnippet/csharp/p-system.web.configurati_61_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.PreferredRenderingType#1](~/add/codesnippet/visualbasic/p-system.web.configurati_61_1.aspx)]"
  syntax:
    content: public virtual string PreferredRenderingType { get; }
    return:
      type: System.String
      description: "<xref uid=&quot;langword_csharp_html32&quot; name=&quot;html32&quot; href=&quot;&quot;></xref>or <xref uid=&quot;langword_csharp_chtml10&quot; name=&quot;chtml10&quot; href=&quot;&quot;></xref>. 기본값은 <xref uid=&quot;langword_csharp_html32&quot; name=&quot;html32&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.PreferredRequestEncoding
  id: PreferredRequestEncoding
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: PreferredRequestEncoding
  nameWithType: HttpCapabilitiesBase.PreferredRequestEncoding
  fullName: System.Web.Configuration.HttpCapabilitiesBase.PreferredRequestEncoding
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "브라우저에서 지 원하는 기본 요청 인코딩을 가져옵니다."
  syntax:
    content: public virtual string PreferredRequestEncoding { get; }
    return:
      type: System.String
      description: "요청 인코딩 브라우저에서 지 원하는 기본 합니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.PreferredRequestEncoding*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.PreferredResponseEncoding
  id: PreferredResponseEncoding
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: PreferredResponseEncoding
  nameWithType: HttpCapabilitiesBase.PreferredResponseEncoding
  fullName: System.Web.Configuration.HttpCapabilitiesBase.PreferredResponseEncoding
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "브라우저에서 지 원하는 기본 응답 인코딩을 가져옵니다."
  syntax:
    content: public virtual string PreferredResponseEncoding { get; }
    return:
      type: System.String
      description: "응답 인코딩을 브라우저에서 지 원하는 기본 합니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.PreferredResponseEncoding*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput
  id: RendersBreakBeforeWmlSelectAndInput
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: RendersBreakBeforeWmlSelectAndInput
  nameWithType: HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "브라우저 앞에 줄 바꿈을 렌더링 하는지 여부를 나타내는 값을 가져옵니다 <xref uid=&quot;langword_csharp_&lt;select&gt;&quot; name=&quot;&lt;select&gt;&quot; href=&quot;&quot;> </xref> 또는 <xref uid=&quot;langword_csharp_&lt;input&gt;&quot; name=&quot;&lt;input&gt;&quot; href=&quot;&quot;> </xref> 요소입니다."
  remarks: "RendersBreakBeforeWmlSelectAndInput 속성이 WML 호환 모바일 장치에만 적용 됩니다.       경우 `true`, 콘텐츠 다음 `<select>` 또는 `<input>` 요소는 새 줄에 자동으로 배치 됩니다."
  example:
  - "The following code example shows how to determine whether the browser renders a line break before `<select>` or `<input>` elements.  \n  \n [!code-cs[HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput#1](~/add/codesnippet/csharp/9303e792-7cc5-4e57-92b0-_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput#1](~/add/codesnippet/visualbasic/9303e792-7cc5-4e57-92b0-_1.aspx)]"
  syntax:
    content: public virtual bool RendersBreakBeforeWmlSelectAndInput { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>브라우저 앞에 줄 바꿈을 렌더링 하면 <xref uid=&quot;langword_csharp_&lt;select&gt;&quot; name=&quot;&lt;select&gt;&quot; href=&quot;&quot;> </xref> 또는 <xref uid=&quot;langword_csharp_&lt;input&gt;&quot; name=&quot;&lt;input&gt;&quot; href=&quot;&quot;> </xref> 요소, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterHtmlLists
  id: RendersBreaksAfterHtmlLists
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: RendersBreaksAfterHtmlLists
  nameWithType: HttpCapabilitiesBase.RendersBreaksAfterHtmlLists
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterHtmlLists
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "브라우저에서 목록 항목 요소 뒤에 줄 바꿈을 렌더링 하는지 여부를 나타내는 값을 가져옵니다."
  remarks: "경우 `true`, 새 줄에 자동으로 배치 될 목록 항목 요소 뒤 콘텐츠입니다."
  example:
  - "The following code example shows how to determine whether the browser renders a line break after list-item elements.  \n  \n [!code-cs[HttpCapabilitiesBase.RendersBreaksAfterHtmlLists#1](~/add/codesnippet/csharp/p-system.web.configurati_162_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.RendersBreaksAfterHtmlLists#1](~/add/codesnippet/visualbasic/p-system.web.configurati_162_1.aspx)]"
  syntax:
    content: public virtual bool RendersBreaksAfterHtmlLists { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>브라우저에서 목록 항목 요소 뒤에 줄 바꿈을 렌더링 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterHtmlLists*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor
  id: RendersBreaksAfterWmlAnchor
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: RendersBreaksAfterWmlAnchor
  nameWithType: HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "브라우저 독립 실행형 HTML 뒤에 줄 바꿈을 렌더링 하는지 여부를 나타내는 값을 가져옵니다 <xref uid=&quot;langword_csharp_&lt;a&gt;&quot; name=&quot;&lt;a&gt;&quot; href=&quot;&quot;> </xref> (앵커) 요소입니다."
  remarks: "RendersBreaksAfterWmlAnchor 속성이 WML 호환 모바일 장치에만 적용 됩니다.       경우 `true`다음 독립 실행형 HTML 콘텐츠, `<a>` (앵커) 요소는 새 줄에 자동으로 배치 됩니다."
  example:
  - "The following code example shows how to determine whether the browser renders a line break after a stand-alone WML `<a>` (anchor) element.  \n  \n [!code-vb[HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor#1](~/add/codesnippet/visualbasic/p-system.web.configurati_28_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor#1](~/add/codesnippet/csharp/p-system.web.configurati_28_1.aspx)]"
  syntax:
    content: public virtual bool RendersBreaksAfterWmlAnchor { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>브라우저에서 독립 실행형 HTML 뒤에 줄 바꿈을 렌더링 하는 경우 <xref uid=&quot;langword_csharp_&lt;a&gt;&quot; name=&quot;&lt;a&gt;&quot; href=&quot;&quot;> </xref> (앵커) 요소, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlInput
  id: RendersBreaksAfterWmlInput
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: RendersBreaksAfterWmlInput
  nameWithType: HttpCapabilitiesBase.RendersBreaksAfterWmlInput
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlInput
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "브라우저 HTML 뒤에 줄 바꿈을 렌더링 하는지 여부를 나타내는 값을 가져옵니다 <xref uid=&quot;langword_csharp_&lt;input&gt;&quot; name=&quot;&lt;input&gt;&quot; href=&quot;&quot;> </xref> 요소입니다."
  remarks: "RendersBreaksAfterWmlInput 속성이 WML 호환 모바일 장치에만 적용 됩니다.       경우 `true`다음 HTML 콘텐츠, `<input>` 요소는 새 줄에 자동으로 배치 됩니다."
  example:
  - "The following code example shows how to determine whether the browser renders a line break after an HTML `<input>` element.  \n  \n [!code-cs[HttpCapabilitiesBase.RendersBreaksAfterWmlInput#1](~/add/codesnippet/csharp/p-system.web.configurati_299_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.RendersBreaksAfterWmlInput#1](~/add/codesnippet/visualbasic/p-system.web.configurati_299_1.aspx)]"
  syntax:
    content: public virtual bool RendersBreaksAfterWmlInput { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>브라우저에서 HTML 뒤에 줄 바꿈을 렌더링 하는 경우 <xref uid=&quot;langword_csharp_&lt;input&gt; &quot; name=&quot;&lt;input&gt; &quot; href=&quot;&quot;> </xref>요소, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlInput*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.RendersWmlDoAcceptsInline
  id: RendersWmlDoAcceptsInline
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: RendersWmlDoAcceptsInline
  nameWithType: HttpCapabilitiesBase.RendersWmlDoAcceptsInline
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RendersWmlDoAcceptsInline
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "모바일 장치 브라우저에서 WML 렌더링 하는지 여부를 나타내는 값을 가져옵니다 <xref uid=&quot;langword_csharp_do&quot; name=&quot;do&quot; href=&quot;&quot;> </xref>-기반의 폼 허용 구문을 인라인 단추로 아니라 소프트 키입니다."
  remarks: "RendersWmlDoAcceptsInline 속성이 WML 호환 모바일 장치에만 적용 됩니다."
  example:
  - "The following code example shows how to determine whether the browser renders a WML `do`-based form-accept construct as an inline button.  \n  \n [!code-vb[HttpCapabilitiesBase.RendersWmlDoAcceptsInline#1](~/add/codesnippet/visualbasic/p-system.web.configurati_225_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.RendersWmlDoAcceptsInline#1](~/add/codesnippet/csharp/p-system.web.configurati_225_1.aspx)]"
  syntax:
    content: public virtual bool RendersWmlDoAcceptsInline { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>모바일 장치 브라우저에서 WML <xref uid=&quot;langword_csharp_do&quot; name=&quot;do&quot; href=&quot;&quot;> </xref>-기반 폼 허용 구문을 인라인 단추로; 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.RendersWmlDoAcceptsInline*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards
  id: RendersWmlSelectsAsMenuCards
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: RendersWmlSelectsAsMenuCards
  nameWithType: HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "브라우저에서 WML을 렌더링 하는지 여부를 나타내는 값을 가져옵니다 <xref uid=&quot;langword_csharp_&lt;select&gt;&quot; name=&quot;&lt;select&gt;&quot; href=&quot;&quot;> </xref> 요소를 콤보 상자가 아니라 메뉴 카드로 합니다."
  remarks: "RendersWmlSelectsAsMenuCards 속성이 WML 호환 모바일 장치에만 적용 됩니다."
  example:
  - "The following code example shows how to determine whether the browser renders WML `<select>` elements as menu cards.  \n  \n [!code-vb[HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards#1](~/add/codesnippet/visualbasic/p-system.web.configurati_310_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards#1](~/add/codesnippet/csharp/p-system.web.configurati_310_1.aspx)]"
  syntax:
    content: public virtual bool RendersWmlSelectsAsMenuCards { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>브라우저에서 WML을 렌더링 하는 경우 <xref uid=&quot;langword_csharp_&lt;select&gt;&quot; name=&quot;&lt;select&gt;&quot; href=&quot;&quot;> </xref> 요소를 메뉴 카드로; 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiredMetaTagNameValue
  id: RequiredMetaTagNameValue
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: RequiredMetaTagNameValue
  nameWithType: HttpCapabilitiesBase.RequiredMetaTagNameValue
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiredMetaTagNameValue
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "일부 브라우저에 필요한 메타 태그를 만들기 위해 내부적으로 사용 합니다."
  remarks: "내부 용도로 사용 합니다. 일부 브라우저 제대로 렌더링을 브라우저에 대 한 다음과 같은 메타 태그를 필요 합니다.      ```   <META NAME=&quot;NAME&quot; CONTENT=&quot;VALUE&quot;>   ```"
  syntax:
    content: public virtual string RequiredMetaTagNameValue { get; }
    return:
      type: System.String
      description: "일부 브라우저에 필요한 메타 태그입니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.RequiredMetaTagNameValue*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresAttributeColonSubstitution
  id: RequiresAttributeColonSubstitution
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: RequiresAttributeColonSubstitution
  nameWithType: HttpCapabilitiesBase.RequiresAttributeColonSubstitution
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresAttributeColonSubstitution
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "브라우저가 요소 특성 값을 다른 문자로 대체의 콜론 하는지 여부를 나타내는 값을 가져옵니다."
  remarks: "일부 브라우저에서 요소 특성 값의에서 콜론을 인식 하지 못합니다. 경우 `true`에 다른 문자 렌더링에서 대체 되 고 포스트백 데이터에 반환 됩니다."
  example:
  - "The following code example shows how to determine whether the browser requires colons in element attribute values to be substituted with a different character.  \n  \n [!code-cs[HttpCapabilitiesBase.RequiresAttributeColonSubstitution#1](~/add/codesnippet/csharp/75aeaef6-dcfa-4061-9538-_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.RequiresAttributeColonSubstitution#1](~/add/codesnippet/visualbasic/75aeaef6-dcfa-4061-9538-_1.aspx)]"
  syntax:
    content: public virtual bool RequiresAttributeColonSubstitution { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>브라우저 콜론을 다른 문자로 대체 요소 특성 값의 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.RequiresAttributeColonSubstitution*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresContentTypeMetaTag
  id: RequiresContentTypeMetaTag
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: RequiresContentTypeMetaTag
  nameWithType: HttpCapabilitiesBase.RequiresContentTypeMetaTag
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresContentTypeMetaTag
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "HTML 브라우저에 필요한 지 여부를 나타내는 값을 가져옵니다 <xref uid=&quot;langword_csharp_&lt;meta&gt;&quot; name=&quot;&lt;meta&gt;&quot; href=&quot;&quot;> </xref> 는 요소는 <xref uid=&quot;langword_csharp_content-type&quot; name=&quot;content-type&quot; href=&quot;&quot;> </xref> 특성을 지정 합니다."
  remarks: "경우 `true`, HTML에 다음 태그를 삽입 하는 서버 컨트롤 어댑터 `<head>` 웹 페이지의 요소: ```   <META HTTP-EQUIV=&quot;CONTENT-TYPE&quot; CONTENT=&quot;&quot;; CHARSET=&quot;&quot;>   ``` 이 예제에서는 `CONTENT` 반환 값의 <xref:System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingMime%2A>속성 및 `charset` 사용 되는 문자 인코딩입니다.</xref:System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingMime%2A>"
  example:
  - "The following code example shows how to determine whether the browser requires an HTML `<meta>` element for which the `content-type` attribute is specified.  \n  \n [!code-vb[HttpCapabilitiesBase.RequiresContentTypeMetaTag#1](~/add/codesnippet/visualbasic/p-system.web.configurati_102_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.RequiresContentTypeMetaTag#1](~/add/codesnippet/csharp/p-system.web.configurati_102_1.aspx)]"
  syntax:
    content: public virtual bool RequiresContentTypeMetaTag { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>브라우저에서 HTML 필요 하면 <xref uid=&quot;langword_csharp_&lt;meta&gt;&quot; name=&quot;&lt;meta&gt;&quot; href=&quot;&quot;> </xref> 는 요소는 <xref uid=&quot;langword_csharp_content-type&quot; name=&quot;content-type&quot; href=&quot;&quot;> </xref> 고, 그렇지 않으면 지정 된 특성은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.RequiresContentTypeMetaTag*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresControlStateInSession
  id: RequiresControlStateInSession
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: RequiresControlStateInSession
  nameWithType: HttpCapabilitiesBase.RequiresControlStateInSession
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresControlStateInSession
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "브라우저가 컨트롤 상태를 세션에서 유지 해야 하는지 여부를 나타내는 값을 가져옵니다."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser requires control state to be maintained in sessions.  \n  \n [!code-cs[HttpCapabilitiesBase.RequiresControlStateInSession#1](~/add/codesnippet/csharp/p-system.web.configurati_387_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.RequiresControlStateInSession#1](~/add/codesnippet/visualbasic/p-system.web.configurati_387_1.aspx)]"
  syntax:
    content: public bool RequiresControlStateInSession { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>브라우저가 컨트롤 상태를 세션에서 유지 관리 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.RequiresControlStateInSession*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresDBCSCharacter
  id: RequiresDBCSCharacter
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: RequiresDBCSCharacter
  nameWithType: HttpCapabilitiesBase.RequiresDBCSCharacter
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresDBCSCharacter
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "브라우저에 더블 바이트 문자 집합이 필요한 지 여부를 나타내는 값을 가져옵니다."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser requires a double-byte character set.  \n  \n [!code-vb[HttpCapabilitiesBase.RequiresDBCSCharacter#1](~/add/codesnippet/visualbasic/p-system.web.configurati_51_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.RequiresDBCSCharacter#1](~/add/codesnippet/csharp/p-system.web.configurati_51_1.aspx)]"
  syntax:
    content: public virtual bool RequiresDBCSCharacter { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>브라우저에 더블 바이트 문자 집합이; 필요한 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.RequiresDBCSCharacter*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresHtmlAdaptiveErrorReporting
  id: RequiresHtmlAdaptiveErrorReporting
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: RequiresHtmlAdaptiveErrorReporting
  nameWithType: HttpCapabilitiesBase.RequiresHtmlAdaptiveErrorReporting
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresHtmlAdaptiveErrorReporting
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "브라우저에 비표준 오류 메시지가 필요한 지 여부를 나타내는 값을 가져옵니다."
  remarks: "경우 `true`, 브라우저에서 HTTP 오류 메시지를 올바르게 렌더링 하지 않습니다. 이 문제를 해결 서버 컨트롤 어댑터의 브라우저에 대 한 사용자 지정 오류 페이지를 생성 합니다."
  example:
  - "The following code example shows how to determine whether the browser requires nonstandard error messages.  \n  \n [!code-cs[HttpCapabilitiesBase.RequiresHtmlAdaptiveErrorReporting#1](~/add/codesnippet/csharp/2ba3dcba-bae8-4562-b395-_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.RequiresHtmlAdaptiveErrorReporting#1](~/add/codesnippet/visualbasic/2ba3dcba-bae8-4562-b395-_1.aspx)]"
  syntax:
    content: public virtual bool RequiresHtmlAdaptiveErrorReporting { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>브라우저에 비표준 오류 메시지가 필요 하면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.RequiresHtmlAdaptiveErrorReporting*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresLeadingPageBreak
  id: RequiresLeadingPageBreak
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: RequiresLeadingPageBreak
  nameWithType: HttpCapabilitiesBase.RequiresLeadingPageBreak
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresLeadingPageBreak
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "브라우저가 HTML 되도록 웹 페이지 본문의 첫 번째 요소 하는지 여부를 나타내는 값을 가져옵니다 <xref uid=&quot;langword_csharp_&lt;br&gt;&quot; name=&quot;&lt;br&gt;&quot; href=&quot;&quot;> </xref> 요소입니다."
  remarks: "경우 `true`, 서버 컨트롤 어댑터 추가로 삽입 `<br>` 바로 다음 요소는 `<body>` 웹 페이지에는 태그입니다."
  example:
  - "The following code example shows how to determine whether the browser requires the first element in the body of a Web page to be an HTML `<br>` element.  \n  \n [!code-vb[HttpCapabilitiesBase.RequiresLeadingPageBreak#1](~/add/codesnippet/visualbasic/p-system.web.configurati_195_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.RequiresLeadingPageBreak#1](~/add/codesnippet/csharp/p-system.web.configurati_195_1.aspx)]"
  syntax:
    content: public virtual bool RequiresLeadingPageBreak { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>브라우저는 html 웹 페이지 본문의 첫 번째 요소에 필요 하면 <xref uid=&quot;langword_csharp_BR&quot; name=&quot;BR&quot; href=&quot;&quot;> </xref> 요소, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.RequiresLeadingPageBreak*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresNoBreakInFormatting
  id: RequiresNoBreakInFormatting
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: RequiresNoBreakInFormatting
  nameWithType: HttpCapabilitiesBase.RequiresNoBreakInFormatting
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresNoBreakInFormatting
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "브라우저에서 HTML 수 없는지 여부를 나타내는 값을 가져옵니다 <xref uid=&quot;langword_csharp_&lt;br&gt;&quot; name=&quot;&lt;br&gt;&quot; href=&quot;&quot;> </xref> 줄 바꿈 서식을 지정 하는 요소입니다."
  remarks: "경우 `true`, 브라우저에서 HTML을 포함 하는 페이지를 올바르게 렌더링 되지 것입니다 `<br>` 요소입니다."
  example:
  - "The following code example shows how to determine whether the browser does not support HTML `<br>` elements to format line breaks.  \n  \n [!code-vb[HttpCapabilitiesBase.RequiresNoBreakInFormatting#1](~/add/codesnippet/visualbasic/p-system.web.configurati_224_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.RequiresNoBreakInFormatting#1](~/add/codesnippet/csharp/p-system.web.configurati_224_1.aspx)]"
  syntax:
    content: public virtual bool RequiresNoBreakInFormatting { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>브라우저에서 HTML을 지원 하지 않는 경우 <xref uid=&quot;langword_csharp_&lt;br&gt;&quot; name=&quot;&lt;br&gt;&quot; href=&quot;&quot;> </xref> 요소, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.RequiresNoBreakInFormatting*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresOutputOptimization
  id: RequiresOutputOptimization
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: RequiresOutputOptimization
  nameWithType: HttpCapabilitiesBase.RequiresOutputOptimization
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresOutputOptimization
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "브라우저의 페이지가 크기가 최적화 된 생성 언어 태그 형식의를 포함 해야 하는지 여부를 나타내는 값을 가져옵니다."
  remarks: "경우 `true`, 서버 컨트롤 어댑터 결과 페이지의 크기를 줄이기 위해 최소한의 출력을 생성 합니다.      > [!NOTE] > The RequiresOutputOptimization 속성에서 반환 `true` i 모드 호환 브라우저에 대 한 합니다."
  example:
  - "The following code example shows how to determine whether the browser requires pages to contain a size-optimized form of markup language tags.  \n  \n [!code-cs[HttpCapabilitiesBase.RequiresOutputOptimization#1](~/add/codesnippet/csharp/p-system.web.configurati_64_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.RequiresOutputOptimization#1](~/add/codesnippet/visualbasic/p-system.web.configurati_64_1.aspx)]"
  syntax:
    content: public virtual bool RequiresOutputOptimization { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>브라우저의 페이지가 크기가 최적화 된 생성 언어 태그; 형식의를 포함 해야 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.RequiresOutputOptimization*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText
  id: RequiresPhoneNumbersAsPlainText
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: RequiresPhoneNumbersAsPlainText
  nameWithType: HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "브라우저의 일반 텍스트를 기반으로 하는 전화 걸기를 지원 하는지 여부 또는 특수 태그가 필요한 있는지 여부를 나타내는 값을 가져옵니다."
  remarks: "RequiresPhoneNumbersAsPlainText 속성이를 브라우저에만 적용 되는 <xref:System.Web.Configuration.HttpCapabilitiesBase.CanInitiateVoiceCall%2A>속성은 `true`.</xref:System.Web.Configuration.HttpCapabilitiesBase.CanInitiateVoiceCall%2A>"
  example:
  - "The following code example shows how to determine whether the browser supports phone dialing based on plain text, or whether it requires special markup.  \n  \n [!code-cs[HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText#1](~/add/codesnippet/csharp/p-system.web.configurati_169_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText#1](~/add/codesnippet/visualbasic/p-system.web.configurati_169_1.aspx)]"
  syntax:
    content: public virtual bool RequiresPhoneNumbersAsPlainText { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>브라우저에서 일반 텍스트만; 전화 걸기 기능을 지원 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresSpecialViewStateEncoding
  id: RequiresSpecialViewStateEncoding
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: RequiresSpecialViewStateEncoding
  nameWithType: HttpCapabilitiesBase.RequiresSpecialViewStateEncoding
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresSpecialViewStateEncoding
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "브라우저가 하는지 여부를 나타내는 값을 가져옵니다 <xref uid=&quot;langword_csharp_VIEWSTATE&quot; name=&quot;VIEWSTATE&quot; href=&quot;&quot;> </xref> 값을 특별히 인코드 합니다."
  remarks: "HTTP는 상태 비저장 프로토콜 및 `VIEWSTATE` 는 여러 요청에 대해 클라이언트의 변경 내용을 유지 하는 데 사용 하는 메커니즘 중 하나입니다. 웹 페이지에 있는 각 컨트롤을 포함 한 <xref:System.Web.UI.Control.ViewState%2A>속성의 클라이언트에서 수행한 변경 내용을 나타내는.</xref:System.Web.UI.Control.ViewState%2A> Web Forms 페이지에서 이러한 변경 내용은로 다시 게시 된 데이터에서 인코딩 되는 `value` html `<input>` 인 요소는 `type` 특성의 `hidden`합니다. 예를 들어: ```   <input type=&quot;hidden&quot; name=&quot;__VIEWSTATE&quot; value=&quot;t0PH_u56?cDxleHQ7P=&quot; />   ``` 경우 `true`영문자가 아닌의 문자는 `VIEWSTATE` 브라우저 및 중간 게이트웨이에서 값 제대로 전송 되지 것입니다. 이 문제를 해결 서버 컨트롤 어댑터에 있는 알파벳이 아닌 문자를 바꿀는 `VIEWSTATE` 문자로 바꿔 인코딩으로 HTTP 요청에 필요 하지 않은 값입니다."
  example:
  - "The following code example shows how to determine whether the browser requires `VIEWSTATE` values to be specially encoded.  \n  \n [!code-cs[HttpCapabilitiesBase.RequiresSpecialViewStateEncoding#1](~/add/codesnippet/csharp/ded66d43-c984-472a-ab07-_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.RequiresSpecialViewStateEncoding#1](~/add/codesnippet/visualbasic/ded66d43-c984-472a-ab07-_1.aspx)]"
  syntax:
    content: public virtual bool RequiresSpecialViewStateEncoding { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>브라우저에 필요 하면 <xref uid=&quot;langword_csharp_VIEWSTATE&quot; name=&quot;VIEWSTATE&quot; href=&quot;&quot;> </xref> 값을 특별히 고, 그러지 않으면 인코딩된 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.RequiresSpecialViewStateEncoding*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueFilePathSuffix
  id: RequiresUniqueFilePathSuffix
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: RequiresUniqueFilePathSuffix
  nameWithType: HttpCapabilitiesBase.RequiresUniqueFilePathSuffix
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueFilePathSuffix
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "브라우저 고유한 형식 작업 Url이 필요한 지 여부를 나타내는 값을 가져옵니다."
  remarks: "자기 참조 HTML `<form>` 요소를 하나는 `action` 특성 자체 URL을 지정 합니다. 경우 `true`, 자기 참조 폼 올바른 결과 반환 하지 않습니다. 브라우저 또는 중간 게이트웨이 하 여 캐시 때문입니다. 이 문제를 해결 서버 컨트롤 어댑터 기본 쿼리 문자열을 추가 합니다 (`__ufps=``uniquefilepathsuffix`)에 자기 참조 폼의 형식 작업 URL 값입니다."
  example:
  - "The following code example shows how to determine whether the browser requires unique form-action URLs.  \n  \n [!code-vb[HttpCapabilitiesBase.RequiresUniqueFilePathSuffix#1](~/add/codesnippet/visualbasic/p-system.web.configurati_74_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.RequiresUniqueFilePathSuffix#1](~/add/codesnippet/csharp/p-system.web.configurati_74_1.aspx)]"
  syntax:
    content: public virtual bool RequiresUniqueFilePathSuffix { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>브라우저; 고유한 형식 작업 Url이 필요한 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueFilePathSuffix*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueHtmlCheckboxNames
  id: RequiresUniqueHtmlCheckboxNames
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: RequiresUniqueHtmlCheckboxNames
  nameWithType: HttpCapabilitiesBase.RequiresUniqueHtmlCheckboxNames
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueHtmlCheckboxNames
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "브라우저가 하는지 여부를 나타내는 값을 고유한 가져옵니다 <xref uid=&quot;langword_csharp_name&quot; name=&quot;name&quot; href=&quot;&quot;> </xref> 특성 값의 여러 HTML <xref uid=&quot;langword_csharp_&lt;input type=&quot;checkbox&quot;&gt;&quot; name=&quot;&lt;input type=&quot;checkbox&quot;&gt;&quot; href=&quot;&quot;> </xref> 요소입니다."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser requires unique `NAME` attribute values of multiple HTML `<input type=\"checkbox\">` elements.  \n  \n [!code-cs[HttpCapabilitiesBase.RequiresUniqueHtmlCheckboxNames#1](~/add/codesnippet/csharp/p-system.web.configurati_384_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.RequiresUniqueHtmlCheckboxNames#1](~/add/codesnippet/visualbasic/p-system.web.configurati_384_1.aspx)]"
  syntax:
    content: public virtual bool RequiresUniqueHtmlCheckboxNames { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>브라우저에서 고유한 필요 하면 <xref uid=&quot;langword_csharp_name&quot; name=&quot;name&quot; href=&quot;&quot;> </xref> 특성 값의 여러 HTML <xref uid=&quot;langword_csharp_&lt;input type=&quot;checkbox&quot;&gt;&quot; name=&quot;&lt;input type=&quot;checkbox&quot;&gt;&quot; href=&quot;&quot;> </xref> 요소, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueHtmlCheckboxNames*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueHtmlInputNames
  id: RequiresUniqueHtmlInputNames
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: RequiresUniqueHtmlInputNames
  nameWithType: HttpCapabilitiesBase.RequiresUniqueHtmlInputNames
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueHtmlInputNames
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "브라우저가 하는지 여부를 나타내는 값을 고유한 가져옵니다 <xref uid=&quot;langword_csharp_name&quot; name=&quot;name&quot; href=&quot;&quot;> </xref> 특성 값의 여러 HTML <xref uid=&quot;langword_csharp_&lt;input&gt;&quot; name=&quot;&lt;input&gt;&quot; href=&quot;&quot;> </xref> 요소입니다."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser requires unique `name` attribute values of multiple HTML `<input>` elements.  \n  \n [!code-cs[HttpCapabilitiesBase.RequiresUniqueHtmlInputNames#1](~/add/codesnippet/csharp/p-system.web.configurati_285_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.RequiresUniqueHtmlInputNames#1](~/add/codesnippet/visualbasic/p-system.web.configurati_285_1.aspx)]"
  syntax:
    content: public virtual bool RequiresUniqueHtmlInputNames { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>브라우저에서 고유한 필요 하면 <xref uid=&quot;langword_csharp_name&quot; name=&quot;name&quot; href=&quot;&quot;> </xref> 특성 값의 여러 HTML <xref uid=&quot;langword_csharp_&lt;input&gt;&quot; name=&quot;&lt;input&gt;&quot; href=&quot;&quot;> </xref> 요소, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueHtmlInputNames*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresUrlEncodedPostfieldValues
  id: RequiresUrlEncodedPostfieldValues
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: RequiresUrlEncodedPostfieldValues
  nameWithType: HttpCapabilitiesBase.RequiresUrlEncodedPostfieldValues
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresUrlEncodedPostfieldValues
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "브라우저에서 전송 된 포스트백 데이터가 않을 것인지 여부를 나타내는 값을 가져옵니다 <xref uid=&quot;langword_csharp_UrlEncoded&quot; name=&quot;UrlEncoded&quot; href=&quot;&quot;> </xref>합니다."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser `UrlEncodes` postback data.  \n  \n [!code-vb[HttpCapabilitiesBase.RequiresUrlEncodedPostfieldValues#1](~/add/codesnippet/visualbasic/f29bbebb-6fc1-44b9-b9d3-_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.RequiresUrlEncodedPostfieldValues#1](~/add/codesnippet/csharp/f29bbebb-6fc1-44b9-b9d3-_1.aspx)]"
  syntax:
    content: public virtual bool RequiresUrlEncodedPostfieldValues { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>브라우저에서 전송 된 포스트백 데이터가 될 경우 <xref uid=&quot;langword_csharp_UrlEncoded&quot; name=&quot;UrlEncoded&quot; href=&quot;&quot;> </xref>, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.RequiresUrlEncodedPostfieldValues*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.ScreenBitDepth
  id: ScreenBitDepth
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: ScreenBitDepth
  nameWithType: HttpCapabilitiesBase.ScreenBitDepth
  fullName: System.Web.Configuration.HttpCapabilitiesBase.ScreenBitDepth
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "디스플레이의 깊이 픽셀당 비트 수를 반환합니다."
  syntax:
    content: public virtual int ScreenBitDepth { get; }
    return:
      type: System.Int32
      description: "표시 픽셀당 비트 수의 깊이입니다. 기본값은 <xref uid=&quot;langword_csharp_1&quot; name=&quot;1&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.ScreenBitDepth*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.ScreenCharactersHeight
  id: ScreenCharactersHeight
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: ScreenCharactersHeight
  nameWithType: HttpCapabilitiesBase.ScreenCharactersHeight
  fullName: System.Web.Configuration.HttpCapabilitiesBase.ScreenCharactersHeight
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "문자 줄에서은 표시의 대략적인 높이 반환합니다."
  remarks: "반환 되는 값을 맡은 문자 크기와 실제 화면 픽셀 크기에서 파생 될 수 있습니다. 높이 결정 하는 알고리즘 (.config 파일)에서 기본 글꼴 크기, 브라우저의 크기 (.config 파일의 경우) 및 브라우저에서 전송 하는 명시적 헤더의 조합을 사용 합니다. 일부 브라우저에서는 실제 높이 대략적인 값인 내부 기본값을 사용 합니다."
  syntax:
    content: public virtual int ScreenCharactersHeight { get; }
    return:
      type: System.Int32
      description: "문자 줄에서 표시의 대략적인 높이입니다. 기본값은 <xref uid=&quot;langword_csharp_6&quot; name=&quot;6&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.ScreenCharactersHeight*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.ScreenCharactersWidth
  id: ScreenCharactersWidth
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: ScreenCharactersWidth
  nameWithType: HttpCapabilitiesBase.ScreenCharactersWidth
  fullName: System.Web.Configuration.HttpCapabilitiesBase.ScreenCharactersWidth
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "표시의 대략적인 너비를 문자 단위로 반환 합니다."
  remarks: "반환 되는 값을 맡은 문자 크기와 실제 화면 픽셀 크기에서 파생 될 수 있습니다. 너비를 결정 하는 알고리즘 (.config 파일)에서 기본 글꼴 크기, 장치별 크기 (.config 파일의 경우) 및 장치에서 보내는 명시적 헤더의 조합을 사용 합니다. 이러한 값은 정확 하지 않을 (가변 너비 글꼴에 대 한 특히 이러한 값은 근사치)입니다. 일부 장치에서는 실제 너비 대략적인 값인 내부 기본값을 사용 합니다."
  syntax:
    content: public virtual int ScreenCharactersWidth { get; }
    return:
      type: System.Int32
      description: "문자에서 표시의 대략적인 너비입니다. 기본값은 <xref uid=&quot;langword_csharp_12&quot; name=&quot;12&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.ScreenCharactersWidth*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.ScreenPixelsHeight
  id: ScreenPixelsHeight
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: ScreenPixelsHeight
  nameWithType: HttpCapabilitiesBase.ScreenPixelsHeight
  fullName: System.Web.Configuration.HttpCapabilitiesBase.ScreenPixelsHeight
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "표시의 대략적인 높이 (픽셀)를 반환합니다."
  remarks: "반환 된 값을 맡은 문자 크기와 문자 높이에서 파생 될 수 있습니다. 픽셀 높이 결정 하는 알고리즘 (.config 파일)에서 기본 글꼴 크기, 장치별 크기 (.config 파일의 경우) 및 장치에서 보내는 명시적 헤더의 조합을 사용 합니다. 이러한 값이 정확 하지 않습니다. 일부 장치에서는 실제 높이 대략적인 값인 내부 기본값을 사용 합니다."
  syntax:
    content: public virtual int ScreenPixelsHeight { get; }
    return:
      type: System.Int32
      description: "픽셀 단위로 표시의 대략적인 높이입니다. 기본값은 <xref uid=&quot;langword_csharp_72&quot; name=&quot;72&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.ScreenPixelsHeight*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.ScreenPixelsWidth
  id: ScreenPixelsWidth
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: ScreenPixelsWidth
  nameWithType: HttpCapabilitiesBase.ScreenPixelsWidth
  fullName: System.Web.Configuration.HttpCapabilitiesBase.ScreenPixelsWidth
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "표시의 대략적인 너비 (픽셀)를 반환합니다."
  remarks: "맡은 문자 크기와 문자 너비에서 반환 되는 값을 파생 될 수 있습니다. 픽셀 너비를 결정 하는 알고리즘 (.config 파일)에서 기본 글꼴 크기, 장치별 크기 (.config 파일의 경우) 및 장치에서 보내는 명시적 헤더의 조합을 사용 합니다. 이러한 값은 정확 하지 않을 (가변 너비 글꼴에 대 한 특히 이러한 값은 근사치)입니다. 일부 장치에서는 실제 너비 대략적인 값인 내부 기본값을 사용 합니다."
  syntax:
    content: public virtual int ScreenPixelsWidth { get; }
    return:
      type: System.Int32
      description: "픽셀 단위로 표시의 대략적인 너비입니다. 기본값은 <xref uid=&quot;langword_csharp_96&quot; name=&quot;96&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.ScreenPixelsWidth*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsAccesskeyAttribute
  id: SupportsAccesskeyAttribute
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: SupportsAccesskeyAttribute
  nameWithType: HttpCapabilitiesBase.SupportsAccesskeyAttribute
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsAccesskeyAttribute
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "브라우저 지원 하는지 여부를 나타내는 값을 가져옵니다는 <xref uid=&quot;langword_csharp_ACCESSKEY&quot; name=&quot;ACCESSKEY&quot; href=&quot;&quot;> </xref> html 특성 <xref uid=&quot;langword_csharp_&lt;a&gt;&quot; name=&quot;&lt;a&gt;&quot; href=&quot;&quot;> </xref> (앵커) 및 <xref uid=&quot;langword_csharp_&lt;input&gt;&quot; name=&quot;&lt;input&gt;&quot; href=&quot;&quot;> </xref> 요소입니다."
  remarks: "`accesskey` 소프트 키 또는 다른 컨트롤러 HTML와 상호 작용 하는 장치에 할당 하 여 모바일로 바뀌고 액세스할 수 있는 플랫폼에 웹 페이지에 폼과 링크 컨트롤을 확장 하는 특성 `<a>` (앵커) 및 `<input>` 요소입니다."
  example:
  - "The following code example shows how to determine whether the browser supports the `accesskey` attribute of HTML `<a>` (anchor) and `<input>` elements.  \n  \n [!code-cs[HttpCapabilitiesBase.SupportsAccesskeyAttribute#1](~/add/codesnippet/csharp/p-system.web.configurati_98_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.SupportsAccesskeyAttribute#1](~/add/codesnippet/visualbasic/p-system.web.configurati_98_1.aspx)]"
  syntax:
    content: public virtual bool SupportsAccesskeyAttribute { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>브라우저에서 지원 되는 경우는 <xref uid=&quot;langword_csharp_accesskey&quot; name=&quot;accesskey&quot; href=&quot;&quot;> </xref> html 특성 <xref uid=&quot;langword_csharp_&lt;a&gt;&quot; name=&quot;&lt;a&gt;&quot; href=&quot;&quot;> </xref> (앵커) 및 <xref uid=&quot;langword_csharp_&lt;input&gt;&quot; name=&quot;&lt;input&gt;&quot; href=&quot;&quot;> </xref> 요소, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.SupportsAccesskeyAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsBodyColor
  id: SupportsBodyColor
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: SupportsBodyColor
  nameWithType: HttpCapabilitiesBase.SupportsBodyColor
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsBodyColor
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "브라우저 지원 하는지 여부를 나타내는 값을 가져옵니다는 <xref uid=&quot;langword_csharp_bgcolor&quot; name=&quot;bgcolor&quot; href=&quot;&quot;> </xref> html 특성 <xref uid=&quot;langword_csharp_&lt;body&gt;&quot; name=&quot;&lt;body&gt;&quot; href=&quot;&quot;> </xref> 요소입니다."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser supports the `bgcolor` attribute of the HTML `<body>` element.  \n  \n [!code-vb[HttpCapabilitiesBase.SupportsBodyColor#1](~/add/codesnippet/visualbasic/p-system.web.configurati_366_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.SupportsBodyColor#1](~/add/codesnippet/csharp/p-system.web.configurati_366_1.aspx)]"
  syntax:
    content: public virtual bool SupportsBodyColor { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>브라우저에서 지원 되는 경우는 <xref uid=&quot;langword_csharp_bgcolor&quot; name=&quot;bgcolor&quot; href=&quot;&quot;> </xref> html 특성 <xref uid=&quot;langword_csharp_&lt;body&gt;&quot; name=&quot;&lt;body&gt;&quot; href=&quot;&quot;> </xref> 요소, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.SupportsBodyColor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsBold
  id: SupportsBold
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: SupportsBold
  nameWithType: HttpCapabilitiesBase.SupportsBold
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsBold
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "브라우저에서 HTML을 지원 하는지 여부를 나타내는 값을 가져옵니다 <xref uid=&quot;langword_csharp_&lt;b&gt;&quot; name=&quot;&lt;b&gt;&quot; href=&quot;&quot;> </xref> 굵게 텍스트로 서식을 지정 하는 요소입니다."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser supports HTML `<b>` elements to format bold text.  \n  \n [!code-vb[HttpCapabilitiesBase.SupportsBold#1](~/add/codesnippet/visualbasic/p-system.web.configurati_211_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.SupportsBold#1](~/add/codesnippet/csharp/p-system.web.configurati_211_1.aspx)]"
  syntax:
    content: public virtual bool SupportsBold { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>브라우저에서 HTML 있으면 <xref uid=&quot;langword_csharp_&lt;b&gt;&quot; name=&quot;&lt;b&gt;&quot; href=&quot;&quot;> </xref> ; 굵게 텍스트로 서식을 지정 하는 요소, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.SupportsBold*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsCacheControlMetaTag
  id: SupportsCacheControlMetaTag
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: SupportsCacheControlMetaTag
  nameWithType: HttpCapabilitiesBase.SupportsCacheControlMetaTag
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsCacheControlMetaTag
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "브라우저 지원 하는지 여부를 나타내는 값을 가져옵니다는 <xref uid=&quot;langword_csharp_cache-control&quot; name=&quot;cache-control&quot; href=&quot;&quot;> </xref> 에 대 한 값은 <xref uid=&quot;langword_csharp_http-equiv&quot; name=&quot;http-equiv&quot; href=&quot;&quot;> </xref> html 특성 <xref uid=&quot;langword_csharp_&lt;meta&gt;&quot; name=&quot;&lt;meta&gt;&quot; href=&quot;&quot;> </xref> 요소입니다."
  remarks: "`cache-control` 에 대 한 값은 `http-equiv` html 특성 `<meta>` 요소에는 클라이언트를 제어할 수 있습니다. 포함 웹 페이지 콘텐츠를 다운로드 캐시 합니다. 다음 HTML 조각의 예를 보여 줍니다: ```   <META HTTP-EQUIV=&quot;CACHE-CONTROL&quot; CONTENT=&quot;NO-CACHE&quot;/>   ``` 경우 `true`에이 태그의 포함 여부는 `<head>` 웹 페이지의 요소는 서버에서 콘텐츠를 다시 로드 하려면 브라우저를 강제로 수행 해야 합니다.       경우 `false`, 기본 쿼리 문자열을 추가 하는 서버 컨트롤 어댑터 (`__ufps=``uniquefilepathsuffix`) 하지 않은 하나 링크 URL 값에 있습니다. 이렇게 하면 브라우저는 서버에서 콘텐츠를 다시 로드 됩니다.       SupportsCacheControlMetaTag 속성은 HTTP 헤더 폼에도 적용 됩니다.```   CACHE-CONTROL: NO-CACHE   ```"
  example:
  - "The following code example shows how to determine whether the browser supports the `cache-control` value for the `http-equiv` attribute of HTML `<meta>` elements.  \n  \n [!code-cs[HttpCapabilitiesBase.SupportsCacheControlMetaTag#1](~/add/codesnippet/csharp/p-system.web.configurati_207_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.SupportsCacheControlMetaTag#1](~/add/codesnippet/visualbasic/p-system.web.configurati_207_1.aspx)]"
  syntax:
    content: public virtual bool SupportsCacheControlMetaTag { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>브라우저에서 지원 되는 경우는 <xref uid=&quot;langword_csharp_cache-control&quot; name=&quot;cache-control&quot; href=&quot;&quot;> </xref> 에 대 한 값은 <xref uid=&quot;langword_csharp_http-equiv&quot; name=&quot;http-equiv&quot; href=&quot;&quot;> </xref> html 특성 <xref uid=&quot;langword_csharp_&lt;meta&gt;&quot; name=&quot;&lt;meta&gt;&quot; href=&quot;&quot;> </xref> 요소, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.SupportsCacheControlMetaTag*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback
  id: SupportsCallback
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: SupportsCallback
  nameWithType: HttpCapabilitiesBase.SupportsCallback
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "브라우저에서 콜백 스크립트를 지원 하는지 여부를 나타내는 값을 가져옵니다."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser supports callback scripts.  \n  \n [!code-vb[HttpCapabilitiesBase.SupportsCallback#1](~/add/codesnippet/visualbasic/p-system.web.configurati_321_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.SupportsCallback#1](~/add/codesnippet/csharp/p-system.web.configurati_321_1.aspx)]"
  syntax:
    content: public virtual bool SupportsCallback { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>브라우저에서 콜백 스크립트를 지원 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsCss
  id: SupportsCss
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: SupportsCss
  nameWithType: HttpCapabilitiesBase.SupportsCss
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsCss
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "브라우저 (CSS 스타일 시트)를 지원 하는지 여부를 나타내는 값을 가져옵니다."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser supports CSS.  \n  \n [!code-cs[HttpCapabilitiesBase.SupportsCss#1](~/add/codesnippet/csharp/p-system.web.configurati_129_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.SupportsCss#1](~/add/codesnippet/visualbasic/p-system.web.configurati_129_1.aspx)]"
  syntax:
    content: public virtual bool SupportsCss { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>브라우저에서 CSS; 지원 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.SupportsCss*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsDivAlign
  id: SupportsDivAlign
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: SupportsDivAlign
  nameWithType: HttpCapabilitiesBase.SupportsDivAlign
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsDivAlign
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "브라우저 지원 하는지 여부를 나타내는 값을 가져옵니다는 <xref uid=&quot;langword_csharp_align&quot; name=&quot;align&quot; href=&quot;&quot;> </xref> html 특성 <xref uid=&quot;langword_csharp_&lt;div&gt;&quot; name=&quot;&lt;div&gt;&quot; href=&quot;&quot;> </xref> 요소입니다."
  remarks: "HTML `<div>` 요소 CSS 스타일을 전체적으로 적용할 수 있도록 여러 HTML 요소를 그룹화 하는 데 사용 됩니다. `align` 의 가로 맞춤을 설정 하는 특성을 `<div>` 웹 페이지에 그룹입니다."
  example:
  - "The following code example shows how to determine whether the browser supports the `align` attribute of HTML `<div>` elements.  \n  \n [!code-cs[HttpCapabilitiesBase.SupportsDivAlign#1](~/add/codesnippet/csharp/p-system.web.configurati_329_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.SupportsDivAlign#1](~/add/codesnippet/visualbasic/p-system.web.configurati_329_1.aspx)]"
  syntax:
    content: public virtual bool SupportsDivAlign { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>브라우저에서 지원 되는 경우는 <xref uid=&quot;langword_csharp_align&quot; name=&quot;align&quot; href=&quot;&quot;> </xref> html 특성 <xref uid=&quot;langword_csharp_&lt;div&gt;&quot; name=&quot;&lt;div&gt;&quot; href=&quot;&quot;> </xref> 요소, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.SupportsDivAlign*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsDivNoWrap
  id: SupportsDivNoWrap
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: SupportsDivNoWrap
  nameWithType: HttpCapabilitiesBase.SupportsDivNoWrap
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsDivNoWrap
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "브라우저 지원 하는지 여부를 나타내는 값을 가져옵니다는 <xref uid=&quot;langword_csharp_nowrap&quot; name=&quot;nowrap&quot; href=&quot;&quot;> </xref> html 특성 <xref uid=&quot;langword_csharp_&lt;div&gt;&quot; name=&quot;&lt;div&gt;&quot; href=&quot;&quot;> </xref> 요소입니다."
  remarks: "HTML `<div>` 요소 CSS 스타일을 전체적으로 적용할 수 있도록 여러 HTML 요소를 그룹화 하는 데 사용 됩니다. `nowrap` 특성이 요소에 포함 되도록 지정 된 `<div>` 그룹에 새 줄으로 줄 바꿈 없이 서로 인접 한 상태로 유지 해야 합니다."
  example:
  - "The following code example shows how to determine whether the browser supports the `nowrap` attribute of HTML `<div>` elements.  \n  \n [!code-cs[HttpCapabilitiesBase.SupportsDivNoWrap#1](~/add/codesnippet/csharp/p-system.web.configurati_108_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.SupportsDivNoWrap#1](~/add/codesnippet/visualbasic/p-system.web.configurati_108_1.aspx)]"
  syntax:
    content: public virtual bool SupportsDivNoWrap { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>브라우저에서 지원 되는 경우는 <xref uid=&quot;langword_csharp_nowrap&quot; name=&quot;nowrap&quot; href=&quot;&quot;> </xref> html 특성 <xref uid=&quot;langword_csharp_&lt;div&gt;&quot; name=&quot;&lt;div&gt;&quot; href=&quot;&quot;> </xref> 요소, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.SupportsDivNoWrap*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsEmptyStringInCookieValue
  id: SupportsEmptyStringInCookieValue
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: SupportsEmptyStringInCookieValue
  nameWithType: HttpCapabilitiesBase.SupportsEmptyStringInCookieValue
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsEmptyStringInCookieValue
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "브라우저에서 빈 지원 하는지 여부를 나타내는 값을 가져옵니다 (<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>) 쿠키 값의 문자열입니다."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser supports empty (`null`) strings in cookie values.  \n  \n [!code-cs[HttpCapabilitiesBase.SupportsEmptyStringInCookieValue#1](~/add/codesnippet/csharp/88f116fb-05a4-493a-9e0f-_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.SupportsEmptyStringInCookieValue#1](~/add/codesnippet/visualbasic/88f116fb-05a4-493a-9e0f-_1.aspx)]"
  syntax:
    content: public virtual bool SupportsEmptyStringInCookieValue { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>브라우저에서 빈 있으면 (<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>) 쿠키 값의 문자열, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.SupportsEmptyStringInCookieValue*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsFontColor
  id: SupportsFontColor
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: SupportsFontColor
  nameWithType: HttpCapabilitiesBase.SupportsFontColor
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsFontColor
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "브라우저 지원 하는지 여부를 나타내는 값을 가져옵니다는 <xref uid=&quot;langword_csharp_color&quot; name=&quot;color&quot; href=&quot;&quot;> </xref> html 특성 <xref uid=&quot;langword_csharp_&lt;font&gt;&quot; name=&quot;&lt;font&gt;&quot; href=&quot;&quot;> </xref> 요소입니다."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser supports the `color` attribute of HTML `<font>` elements.  \n  \n [!code-cs[HttpCapabilitiesBase.SupportsFontColor#1](~/add/codesnippet/csharp/p-system.web.configurati_306_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.SupportsFontColor#1](~/add/codesnippet/visualbasic/p-system.web.configurati_306_1.aspx)]"
  syntax:
    content: public virtual bool SupportsFontColor { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>브라우저에서 지원 되는 경우는 <xref uid=&quot;langword_csharp_color&quot; name=&quot;color&quot; href=&quot;&quot;> </xref> html 특성 <xref uid=&quot;langword_csharp_&lt;font&gt; &quot; name=&quot;&lt;font&gt; &quot; href=&quot;&quot;> </xref>요소, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.SupportsFontColor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsFontName
  id: SupportsFontName
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: SupportsFontName
  nameWithType: HttpCapabilitiesBase.SupportsFontName
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsFontName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "브라우저 지원 하는지 여부를 나타내는 값을 가져옵니다는 <xref uid=&quot;langword_csharp_name&quot; name=&quot;name&quot; href=&quot;&quot;> </xref> html 특성 <xref uid=&quot;langword_csharp_&lt;font&gt;&quot; name=&quot;&lt;font&gt;&quot; href=&quot;&quot;> </xref> 요소입니다."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser supports the `name` attribute of HTML `<font>` elements.  \n  \n [!code-vb[HttpCapabilitiesBase.SupportsFontName#1](~/add/codesnippet/visualbasic/p-system.web.configurati_341_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.SupportsFontName#1](~/add/codesnippet/csharp/p-system.web.configurati_341_1.aspx)]"
  syntax:
    content: public virtual bool SupportsFontName { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>브라우저에서 지원 되는 경우는 <xref uid=&quot;langword_csharp_name&quot; name=&quot;name&quot; href=&quot;&quot;> </xref> html 특성 <xref uid=&quot;langword_csharp_&lt;font&gt;&quot; name=&quot;&lt;font&gt;&quot; href=&quot;&quot;> </xref> 요소, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.SupportsFontName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsFontSize
  id: SupportsFontSize
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: SupportsFontSize
  nameWithType: HttpCapabilitiesBase.SupportsFontSize
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsFontSize
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "브라우저 지원 하는지 여부를 나타내는 값을 가져옵니다는 <xref uid=&quot;langword_csharp_size&quot; name=&quot;size&quot; href=&quot;&quot;> </xref> html 특성 <xref uid=&quot;langword_csharp_&lt;font&gt; &quot; name=&quot;&lt;font&gt; &quot; href=&quot;&quot;> </xref>요소입니다."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser supports the `size` attribute of HTML `<font>` elements.  \n  \n [!code-cs[HttpCapabilitiesBase.SupportsFontSize#1](~/add/codesnippet/csharp/p-system.web.configurati_328_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.SupportsFontSize#1](~/add/codesnippet/visualbasic/p-system.web.configurati_328_1.aspx)]"
  syntax:
    content: public virtual bool SupportsFontSize { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>브라우저에서 지원 되는 경우는 <xref uid=&quot;langword_csharp_size&quot; name=&quot;size&quot; href=&quot;&quot;> </xref> html 특성 <xref uid=&quot;langword_csharp_&lt;font&gt;&quot; name=&quot;&lt;font&gt;&quot; href=&quot;&quot;> </xref> 요소, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.SupportsFontSize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsImageSubmit
  id: SupportsImageSubmit
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: SupportsImageSubmit
  nameWithType: HttpCapabilitiesBase.SupportsImageSubmit
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsImageSubmit
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "브라우저에서 표준 양식 전송 단추 대신 사용자 지정 이미지를 사용 하 여 지원 하는지를 나타내는 값을 가져옵니다."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser supports using a custom image in place of a standard form Submit button.  \n  \n [!code-cs[HttpCapabilitiesBase.SupportsImageSubmit#1](~/add/codesnippet/csharp/p-system.web.configurati_33_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.SupportsImageSubmit#1](~/add/codesnippet/visualbasic/p-system.web.configurati_33_1.aspx)]"
  syntax:
    content: public virtual bool SupportsImageSubmit { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>브라우저에서 표준 양식 전송 단추; 대신 사용자 지정 이미지를 사용 하 여 지원 되는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.SupportsImageSubmit*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsIModeSymbols
  id: SupportsIModeSymbols
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: SupportsIModeSymbols
  nameWithType: HttpCapabilitiesBase.SupportsIModeSymbols
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsIModeSymbols
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "브라우저에서 i 모드 기호를 지원 하는지 여부를 나타내는 값을 가져옵니다."
  remarks: "<xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode%2A>속성은만 i 모드 호환 장치 적용 됩니다.</xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode%2A>       I 관련 그림 기호를 사용 하 여 i 모드 호환 브라우저에 대 한 설정에서 <xref:System.Web.UI.WebControls.Image.ImageUrl%2A>속성.</xref:System.Web.UI.WebControls.Image.ImageUrl%2A>"
  example:
  - "The following code example shows how to determine whether the browser supports i-mode symbols.  \n  \n [!code-vb[HttpCapabilitiesBase.SupportsIModeSymbols#1](~/add/codesnippet/visualbasic/p-system.web.configurati_346_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.SupportsIModeSymbols#1](~/add/codesnippet/csharp/p-system.web.configurati_346_1.aspx)]"
  syntax:
    content: public virtual bool SupportsIModeSymbols { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>브라우저에서 i 모드 기호; 지원 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.SupportsIModeSymbols*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsInputIStyle
  id: SupportsInputIStyle
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: SupportsInputIStyle
  nameWithType: HttpCapabilitiesBase.SupportsInputIStyle
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsInputIStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "브라우저 지원 하는지 여부를 나타내는 값을 가져옵니다는 <xref uid=&quot;langword_csharp_istyle&quot; name=&quot;istyle&quot; href=&quot;&quot;> </xref> html 특성 <xref uid=&quot;langword_csharp_&lt;input&gt;&quot; name=&quot;&lt;input&gt;&quot; href=&quot;&quot;> </xref> 요소입니다."
  remarks: "<xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode%2A>속성은만 i 모드 호환 장치 적용 됩니다.</xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode%2A>       `istyle` 특성 i 모드 호환 브라우저에 텍스트 입력 필드의 입력된 스타일을 설정 하는 데 사용 됩니다."
  example:
  - "The following code example shows how to determine whether the browser supports the `istyle` attribute of HTML `<input>` elements.  \n  \n [!code-cs[HttpCapabilitiesBase.SupportsInputIStyle#1](~/add/codesnippet/csharp/p-system.web.configurati_164_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.SupportsInputIStyle#1](~/add/codesnippet/visualbasic/p-system.web.configurati_164_1.aspx)]"
  syntax:
    content: public virtual bool SupportsInputIStyle { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>브라우저에서 지원 되는 경우는 <xref uid=&quot;langword_csharp_istyle&quot; name=&quot;istyle&quot; href=&quot;&quot;> </xref> html 특성 <xref uid=&quot;langword_csharp_&lt;input&gt;&quot; name=&quot;&lt;input&gt;&quot; href=&quot;&quot;> </xref> 요소, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.SupportsInputIStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode
  id: SupportsInputMode
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: SupportsInputMode
  nameWithType: HttpCapabilitiesBase.SupportsInputMode
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "브라우저 지원 하는지 여부를 나타내는 값을 가져옵니다는 <xref uid=&quot;langword_csharp_mode&quot; name=&quot;mode&quot; href=&quot;&quot;> </xref> html 특성 <xref uid=&quot;langword_csharp_&lt;input&gt;&quot; name=&quot;&lt;input&gt;&quot; href=&quot;&quot;> </xref> 요소입니다."
  remarks: "SupportsInputMode 속성이 i 모드 호환 장치에만 적용 됩니다.       `MODE` 특성 i 모드 호환 브라우저에 텍스트 입력된 필드의 입력된 모드를 설정 하는 데 사용 됩니다."
  example:
  - "The following code example shows how to determine whether the browser supports the `mode` attribute of HTML `<input>` elements.  \n  \n [!code-cs[HttpCapabilitiesBase.SupportsInputMode#1](~/add/codesnippet/csharp/p-system.web.configurati_141_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.SupportsInputMode#1](~/add/codesnippet/visualbasic/p-system.web.configurati_141_1.aspx)]"
  syntax:
    content: public virtual bool SupportsInputMode { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>브라우저에서 지원 되는 경우는 <xref uid=&quot;langword_csharp_mode&quot; name=&quot;mode&quot; href=&quot;&quot;> </xref> html 특성 <xref uid=&quot;langword_csharp_&lt;input&gt;&quot; name=&quot;&lt;input&gt;&quot; href=&quot;&quot;> </xref> 요소, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsItalic
  id: SupportsItalic
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: SupportsItalic
  nameWithType: HttpCapabilitiesBase.SupportsItalic
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsItalic
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "브라우저에서 HTML을 지원 하는지 여부를 나타내는 값을 가져옵니다 <xref uid=&quot;langword_csharp_&lt;i&gt;&quot; name=&quot;&lt;i&gt;&quot; href=&quot;&quot;> </xref> 기울임꼴 텍스트 서식을 지정할 요소입니다."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser supports HTML `<i>` elements to format italic text.  \n  \n [!code-cs[HttpCapabilitiesBase.SupportsItalic#1](~/add/codesnippet/csharp/p-system.web.configurati_198_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.SupportsItalic#1](~/add/codesnippet/visualbasic/p-system.web.configurati_198_1.aspx)]"
  syntax:
    content: public virtual bool SupportsItalic { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>브라우저에서 HTML 있으면 <xref uid=&quot;langword_csharp_&lt;i&gt;&quot; name=&quot;&lt;i&gt;&quot; href=&quot;&quot;> </xref> 요소 기울임꼴 텍스트 서식을 지정할를 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.SupportsItalic*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes
  id: SupportsJPhoneMultiMediaAttributes
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: SupportsJPhoneMultiMediaAttributes
  nameWithType: HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "브라우저에서 J-phone 멀티미디어 특성을 지원 하는지 여부를 나타내는 값을 가져옵니다."
  remarks: "SupportsJPhoneMultiMediaAttributes 속성이 J-전화 – 호환 되는 모바일 장치에만 적용 됩니다.       J-phone J 전화 호환 브라우저에 대 한 HTML 기반 태그 언어 사양입니다. 경우 `true`, 브라우저에서 HTML에 대 한 추가 특성을 지원 `<a>` (앵커) 및 `<select>` 요소입니다. 지원 되는 추가 특성은 다음과 같습니다.-`src`      -   `soundstart`      -   `loop`      -   `volume`      -   `vibration`      -   `viblength`"
  example:
  - "The following code example shows how to determine whether the browser supports J-Phone multimedia attributes.  \n  \n [!code-cs[HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes#1](~/add/codesnippet/csharp/a19a3fd7-eca4-43f9-8389-_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes#1](~/add/codesnippet/visualbasic/a19a3fd7-eca4-43f9-8389-_1.aspx)]"
  syntax:
    content: public virtual bool SupportsJPhoneMultiMediaAttributes { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>브라우저에서 J-phone 멀티미디어 특성; 지 원하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneSymbols
  id: SupportsJPhoneSymbols
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: SupportsJPhoneSymbols
  nameWithType: HttpCapabilitiesBase.SupportsJPhoneSymbols
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneSymbols
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "브라우저 J 관련 그림 기호를 지원 하는지 여부를 나타내는 값을 가져옵니다."
  remarks: "SupportsJPhoneSymbols 속성이 J-전화 – 호환 되는 모바일 장치에만 적용 됩니다.       J 관련 그림 기호를 사용 하 여 호환 J-전화 브라우저에 대 한 설정에서 <xref:System.Web.UI.WebControls.Image.ImageUrl%2A>속성.</xref:System.Web.UI.WebControls.Image.ImageUrl%2A>"
  example:
  - "The following code example shows how to determine whether the browser supports J-Phone–specific picture symbols.  \n  \n [!code-cs[HttpCapabilitiesBase.SupportsJPhoneSymbols#1](~/add/codesnippet/csharp/p-system.web.configurati_401_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.SupportsJPhoneSymbols#1](~/add/codesnippet/visualbasic/p-system.web.configurati_401_1.aspx)]"
  syntax:
    content: public virtual bool SupportsJPhoneSymbols { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>브라우저에서 J 관련 그림 기호; 지원 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneSymbols*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsQueryStringInFormAction
  id: SupportsQueryStringInFormAction
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: SupportsQueryStringInFormAction
  nameWithType: HttpCapabilitiesBase.SupportsQueryStringInFormAction
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsQueryStringInFormAction
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "브라우저에 쿼리 문자열을 지원 하는지 여부를 나타내는 값을 가져옵니다는 <xref uid=&quot;langword_csharp_action&quot; name=&quot;action&quot; href=&quot;&quot;> </xref> 특성 값이 HTML <xref uid=&quot;langword_csharp_&lt;form&gt;&quot; name=&quot;&lt;form&gt;&quot; href=&quot;&quot;> </xref> 요소입니다."
  remarks: "경우 `false`를 HTML로의 포스트백 데이터에 쿼리 문자열 매개 변수가 전송 됩니다 `<input>` 사용 하 여 요소는 `type` 특성으로 설정 `hidden`합니다."
  example:
  - "The following code example shows how to determine whether the browser supports a query string in the value for the `action` attribute of HTML `<form>` elements.  \n  \n [!code-cs[HttpCapabilitiesBase.SupportsQueryStringInFormAction#1](~/add/codesnippet/csharp/p-system.web.configurati_376_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.SupportsQueryStringInFormAction#1](~/add/codesnippet/visualbasic/p-system.web.configurati_376_1.aspx)]"
  syntax:
    content: public virtual bool SupportsQueryStringInFormAction { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>브라우저에서 쿼리 문자열에 있으면는 <xref uid=&quot;langword_csharp_action&quot; name=&quot;action&quot; href=&quot;&quot;> </xref> 특성 값이 HTML <xref uid=&quot;langword_csharp_&lt;form&gt;&quot; name=&quot;&lt;form&gt;&quot; href=&quot;&quot;> </xref> 요소, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.SupportsQueryStringInFormAction*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsRedirectWithCookie
  id: SupportsRedirectWithCookie
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: SupportsRedirectWithCookie
  nameWithType: HttpCapabilitiesBase.SupportsRedirectWithCookie
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsRedirectWithCookie
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "브라우저에서 리디렉션 시 쿠키를 지원 하는지 여부를 나타내는 값을 가져옵니다."
  remarks: "위쪽에 있는. 브라우저 4.1 이나 합니다. 3.2의 경우 브라우저는 <xref:System.Web.HttpResponse.Redirect%2A>메서드 동작 처럼 SupportsRedirectWithCookie 속성의 값은 <xref:System.Web.HttpBrowserCapabilities>개체가 `false`하지 않는 한는 <xref:System.Web.Configuration.SessionStateSection.Cookieless%2A>속성에는 <xref:System.Web.Configuration.SystemWebSectionGroup.SessionState%2A>Web.config의 섹션으로 명시적으로 설정 된 `true`.</xref:System.Web.Configuration.SystemWebSectionGroup.SessionState%2A> </xref:System.Web.Configuration.SessionStateSection.Cookieless%2A> </xref:System.Web.HttpBrowserCapabilities> </xref:System.Web.HttpResponse.Redirect%2A>       이 설정에 대 한 옵션 된 ASP.NET 1.1에서 `true` 또는 `false`, ASP.NET 2.0 중에서 선택할 수는 확장 및 <xref:System.Web.HttpCookieMode>는 이제 기본 설정.</xref:System.Web.HttpCookieMode> 웹 응용 프로그램에 `cookieless` 특성에는 `<sessionState>` 부울 값으로 설정 하는 Web.config 파일에 섹션 <xref:System.Web.HttpResponse.Redirect%2A>이 브라우저에 대 한 예상 대로 작동 해야 합니다.</xref:System.Web.HttpResponse.Redirect%2A>"
  example:
  - "The following code example shows how to determine whether the browser supports cookies on redirection.  \n  \n [!code-vb[HttpCapabilitiesBase.SupportsRedirectWithCookie#1](~/add/codesnippet/visualbasic/p-system.web.configurati_97_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.SupportsRedirectWithCookie#1](~/add/codesnippet/csharp/p-system.web.configurati_97_1.aspx)]"
  syntax:
    content: public virtual bool SupportsRedirectWithCookie { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>브라우저에서 리디렉션 시 쿠키를 지원 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.SupportsRedirectWithCookie*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsSelectMultiple
  id: SupportsSelectMultiple
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: SupportsSelectMultiple
  nameWithType: HttpCapabilitiesBase.SupportsSelectMultiple
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsSelectMultiple
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "브라우저 지원 하는지 여부를 나타내는 값을 가져옵니다는 <xref uid=&quot;langword_csharp_multiple&quot; name=&quot;multiple&quot; href=&quot;&quot;> </xref> html 특성 <xref uid=&quot;langword_csharp_&lt;select&gt;&quot; name=&quot;&lt;select&gt;&quot; href=&quot;&quot;> </xref> 요소입니다."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser supports the `multiple` attribute of HTML `<select>` elements.  \n  \n [!code-cs[HttpCapabilitiesBase.SupportsSelectMultiple#1](~/add/codesnippet/csharp/p-system.web.configurati_289_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.SupportsSelectMultiple#1](~/add/codesnippet/visualbasic/p-system.web.configurati_289_1.aspx)]"
  syntax:
    content: public virtual bool SupportsSelectMultiple { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>브라우저에서 지원 되는 경우는 <xref uid=&quot;langword_csharp_multiple&quot; name=&quot;multiple&quot; href=&quot;&quot;> </xref> html 특성 <xref uid=&quot;langword_csharp_&lt;select&gt;&quot; name=&quot;&lt;select&gt;&quot; href=&quot;&quot;> </xref> 요소, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.SupportsSelectMultiple*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsUncheck
  id: SupportsUncheck
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: SupportsUncheck
  nameWithType: HttpCapabilitiesBase.SupportsUncheck
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsUncheck
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "나타내는 값을 가져옵니다 있는지 여부를 선택 된 HTML 지우기를 <xref uid=&quot;langword_csharp_&lt;input type=checkbox&gt;&quot; name=&quot;&lt;input type=checkbox&gt;&quot; href=&quot;&quot;> </xref> 요소 포스트백 데이터에 반영 됩니다."
  remarks: "경우 `false`, 값은 `checked` html 특성 `<input type=checkbox>` 다시 게시 된 데이터에서 요소를 생략 합니다."
  example:
  - "The following code example shows how to determine whether the clearing of a checked HTML `<input type=checkbox>` element is reflected in postback data.  \n  \n [!code-vb[HttpCapabilitiesBase.SupportsUncheck#1](~/add/codesnippet/visualbasic/p-system.web.configurati_253_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.SupportsUncheck#1](~/add/codesnippet/csharp/p-system.web.configurati_253_1.aspx)]"
  syntax:
    content: public virtual bool SupportsUncheck { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우 선택 된 HTML 지우기를 <xref uid=&quot;langword_csharp_&lt;input type=checkbox&gt;&quot; name=&quot;&lt;input type=checkbox&gt;&quot; href=&quot;&quot;> </xref> 요소 포스트백 데이터에 반영 되지 않았으면, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.SupportsUncheck*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsXmlHttp
  id: SupportsXmlHttp
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: SupportsXmlHttp
  nameWithType: HttpCapabilitiesBase.SupportsXmlHttp
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsXmlHttp
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "브라우저 HTTP를 통한 XML 수신을 지원 하는지 여부를 나타내는 값을 가져옵니다."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser supports receiving XML over HTTP.  \n  \n [!code-cs[HttpCapabilitiesBase.SupportsXmlHttp#1](~/add/codesnippet/csharp/p-system.web.configurati_261_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.SupportsXmlHttp#1](~/add/codesnippet/visualbasic/p-system.web.configurati_261_1.aspx)]"
  syntax:
    content: public virtual bool SupportsXmlHttp { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>브라우저에서; HTTP를 통한 XML 수신을 지원 되는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.SupportsXmlHttp*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.System#Web#UI#IFilterResolutionService#CompareFilters(System.String,System.String)
  id: System#Web#UI#IFilterResolutionService#CompareFilters(System.String,System.String)
  isEii: true
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: System.Web.UI.IFilterResolutionService.CompareFilters(String,String)
  nameWithType: HttpCapabilitiesBase.System.Web.UI.IFilterResolutionService.CompareFilters(String,String)
  fullName: System.Web.Configuration.HttpCapabilitiesBase.System.Web.UI.IFilterResolutionService.CompareFilters(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "필터를 비교 하기 내부적으로 사용 합니다."
  syntax:
    content: int IFilterResolutionService.CompareFilters (string filter1, string filter2);
    parameters:
    - id: filter1
      type: System.String
      description: "비교할 첫 번째 필터입니다."
    - id: filter2
      type: System.String
      description: "비교할 두 번째 필터입니다."
    return:
      type: System.Int32
      description: "1 if <code>filter1</code> is a parent of <code>filter2</code>; -1 if <code>filter2</code> is a parent of <code>filter1</code>; 0 if there is no parent-child relationship between <code>filter1</code> and <code>filter2</code>."
  overload: System.Web.Configuration.HttpCapabilitiesBase.System#Web#UI#IFilterResolutionService#CompareFilters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.System#Web#UI#IFilterResolutionService#EvaluateFilter(System.String)
  id: System#Web#UI#IFilterResolutionService#EvaluateFilter(System.String)
  isEii: true
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: System.Web.UI.IFilterResolutionService.EvaluateFilter(String)
  nameWithType: HttpCapabilitiesBase.System.Web.UI.IFilterResolutionService.EvaluateFilter(String)
  fullName: System.Web.Configuration.HttpCapabilitiesBase.System.Web.UI.IFilterResolutionService.EvaluateFilter(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "필터를 실행 하기 위해 내부적으로 사용 합니다."
  syntax:
    content: bool IFilterResolutionService.EvaluateFilter (string filterName);
    parameters:
    - id: filterName
      type: System.String
      description: "평가할 필터입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>필터는 성공적으로 평가 되었으면; 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.System#Web#UI#IFilterResolutionService#EvaluateFilter*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.Tables
  id: Tables
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: Tables
  nameWithType: HttpCapabilitiesBase.Tables
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Tables
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "브라우저에서 HTML을 지원 하는지 여부를 나타내는 값을 가져옵니다 <xref uid=&quot;langword_csharp_&lt;table&gt;&quot; name=&quot;&lt;table&gt;&quot; href=&quot;&quot;> </xref> 요소입니다."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser supports HTML `<table>` elements.  \n  \n [!code-vb[HttpCapabilitiesBase.Tables#1](~/add/codesnippet/visualbasic/p-system.web.configurati_259_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.Tables#1](~/add/codesnippet/csharp/p-system.web.configurati_259_1.aspx)]"
  syntax:
    content: public bool Tables { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>브라우저에서 HTML 있으면 <xref uid=&quot;langword_csharp_&lt;table&gt;&quot; name=&quot;&lt;table&gt;&quot; href=&quot;&quot;> </xref> 요소, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.Tables*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.TagWriter
  id: TagWriter
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: TagWriter
  nameWithType: HttpCapabilitiesBase.TagWriter
  fullName: System.Web.Configuration.HttpCapabilitiesBase.TagWriter
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "브라우저에 대 한 태그를 쓰는 데 사용 되는 개체의 형식을 가져오기 위해 내부적으로 사용 합니다."
  syntax:
    content: public Type TagWriter { get; }
    return:
      type: System.Type
      description: "<xref:System.Type>브라우저에 대 한 태그를 쓰는 데 사용 되는 개체의.</xref:System.Type>"
  overload: System.Web.Configuration.HttpCapabilitiesBase.TagWriter*
  exceptions:
  - type: System.Web.HttpUnhandledException
    commentId: T:System.Web.HttpUnhandledException
    description: "구문 분석 오류가입니다."
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.Type
  id: Type
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: Type
  nameWithType: HttpCapabilitiesBase.Type
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Type
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "이름 및 주 (정수)를 가져옵니다는 브라우저의 버전 번호입니다."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser is Internet Explorer version 6.  \n  \n [!code-cs[HttpCapabilitiesBase.Type#1](~/add/codesnippet/csharp/p-system.web.configurati_44_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.Type#1](~/add/codesnippet/visualbasic/p-system.web.configurati_44_1.aspx)]"
  syntax:
    content: public string Type { get; }
    return:
      type: System.String
      description: "이름 및 브라우저의 주 버전 번호입니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.Type*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.UseOptimizedCacheKey
  id: UseOptimizedCacheKey
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: UseOptimizedCacheKey
  nameWithType: HttpCapabilitiesBase.UseOptimizedCacheKey
  fullName: System.Web.Configuration.HttpCapabilitiesBase.UseOptimizedCacheKey
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "최적화 된 캐시 키를 사용할지 여부를 나타내는 값을 얻기 위해 내부적으로 사용 합니다."
  syntax:
    content: public bool UseOptimizedCacheKey { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>최적화 된 캐시 키; 사용 하려면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.UseOptimizedCacheKey*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.VBScript
  id: VBScript
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: VBScript
  nameWithType: HttpCapabilitiesBase.VBScript
  fullName: System.Web.Configuration.HttpCapabilitiesBase.VBScript
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Visual Basic Scripting edition (VBScript) 브라우저를 지원 하는지를 나타내는 값을 가져옵니다."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser supports VBScript.  \n  \n [!code-cs[HttpCapabilitiesBase.VBScript#1](~/add/codesnippet/csharp/p-system.web.configurati_206_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.VBScript#1](~/add/codesnippet/visualbasic/p-system.web.configurati_206_1.aspx)]"
  syntax:
    content: public bool VBScript { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>브라우저에서 VBScript를 지원 하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.VBScript*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.Version
  id: Version
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: Version
  nameWithType: HttpCapabilitiesBase.Version
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Version
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "브라우저의 전체 버전 번호를 (정수 및&10; 진수)을 문자열로 가져옵니다."
  remarks: "Version 속성 문자열을 반환 합니다. 일부 시나리오에서는 Version 속성에는 &quot;7.0b.&quot;와 같은 베타 버전 인지는 클라이언트 장치 또는 브라우저의 경우 처럼 문자가 포함 될 수 있습니다. 연결 하 여 숫자 비교에 사용할 수 있는 데이터 형식으로 버전을 가져오려면 올바르게,으로 <xref:System.Web.Configuration.HttpCapabilitiesBase.MajorVersion%2A>및 <xref:System.Web.Configuration.HttpCapabilitiesBase.MinorVersion%2A>속성 값.</xref:System.Web.Configuration.HttpCapabilitiesBase.MinorVersion%2A> </xref:System.Web.Configuration.HttpCapabilitiesBase.MajorVersion%2A>"
  example:
  - "The following code example shows how to determine the Version of the browser. The <xref:System.Web.Configuration.HttpCapabilitiesBase.MajorVersion%2A> property and <xref:System.Web.Configuration.HttpCapabilitiesBase.MinorVersion%2A> property are concatenated and the result is used to determine whether the browser version is greater than 5.01.  \n  \n [!code-vb[HttpCapabilitiesBase.Version#1](~/add/codesnippet/visualbasic/p-system.web.configurati_244_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.Version#1](~/add/codesnippet/csharp/p-system.web.configurati_244_1.aspx)]"
  syntax:
    content: public string Version { get; }
    return:
      type: System.String
      description: "문자열로 서 브라우저의 전체 버전 번호입니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.Version*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.W3CDomVersion
  id: W3CDomVersion
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: W3CDomVersion
  nameWithType: HttpCapabilitiesBase.W3CDomVersion
  fullName: System.Web.Configuration.HttpCapabilitiesBase.W3CDomVersion
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "World Wide Web Consortium (W3C) XML 문서 개체 모델 (DOM) 브라우저에서 지 원하는 버전을 가져옵니다."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser W3C XML DOM version is greater than 1.  \n  \n [!code-vb[HttpCapabilitiesBase.W3CDomVersion#1](~/add/codesnippet/visualbasic/p-system.web.configurati_110_1.aspx)]\n [!code-cs[HttpCapabilitiesBase.W3CDomVersion#1](~/add/codesnippet/csharp/p-system.web.configurati_110_1.aspx)]"
  syntax:
    content: public Version W3CDomVersion { get; }
    return:
      type: System.Version
      description: "브라우저에서 지 원하는 W3C XML DOM 버전 번호의 수입니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.W3CDomVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.Win16
  id: Win16
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: Win16
  nameWithType: HttpCapabilitiesBase.Win16
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Win16
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "클라이언트가 Win16 기반 컴퓨터 인지를 나타내는 값을 가져옵니다."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the browser is running on a Win16-based computer.  \n  \n [!code-cs[HttpCapabilitiesBase.Win16#1](~/add/codesnippet/csharp/p-system.web.configurati_210_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.Win16#1](~/add/codesnippet/visualbasic/p-system.web.configurati_210_1.aspx)]"
  syntax:
    content: public bool Win16 { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>브라우저가 Win16 기반 컴퓨터;에서 실행 중인 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.Win16*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpCapabilitiesBase.Win32
  id: Win32
  parent: System.Web.Configuration.HttpCapabilitiesBase
  langs:
  - csharp
  name: Win32
  nameWithType: HttpCapabilitiesBase.Win32
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Win32
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "클라이언트가 Win32 기반 컴퓨터 인지를 나타내는 값을 가져옵니다."
  remarks: ''
  example:
  - "The following code example shows how to determine whether the client is a Win32-based computer.  \n  \n [!code-cs[HttpCapabilitiesBase.Win32#1](~/add/codesnippet/csharp/p-system.web.configurati_30_1.aspx)]\n [!code-vb[HttpCapabilitiesBase.Win32#1](~/add/codesnippet/visualbasic/p-system.web.configurati_30_1.aspx)]"
  syntax:
    content: public bool Win32 { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>클라이언트가는 Win32 기반 컴퓨터; 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Configuration.HttpCapabilitiesBase.Win32*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Exception
  isExternal: true
  name: System.Exception
- uid: System.Web.HttpUnhandledException
  parent: System.Web
  isExternal: false
  name: HttpUnhandledException
  nameWithType: HttpUnhandledException
  fullName: System.Web.HttpUnhandledException
- uid: System.Web.Configuration.HttpCapabilitiesBase.#ctor
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: HttpCapabilitiesBase()
  nameWithType: HttpCapabilitiesBase.HttpCapabilitiesBase()
  fullName: System.Web.Configuration.HttpCapabilitiesBase.HttpCapabilitiesBase()
- uid: System.Web.Configuration.HttpCapabilitiesBase.ActiveXControls
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: ActiveXControls
  nameWithType: HttpCapabilitiesBase.ActiveXControls
  fullName: System.Web.Configuration.HttpCapabilitiesBase.ActiveXControls
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Configuration.HttpCapabilitiesBase.Adapters
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Adapters
  nameWithType: HttpCapabilitiesBase.Adapters
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Adapters
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Web.Configuration.HttpCapabilitiesBase.AddBrowser(System.String)
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: AddBrowser(String)
  nameWithType: HttpCapabilitiesBase.AddBrowser(String)
  fullName: System.Web.Configuration.HttpCapabilitiesBase.AddBrowser(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Configuration.HttpCapabilitiesBase.AOL
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: AOL
  nameWithType: HttpCapabilitiesBase.AOL
  fullName: System.Web.Configuration.HttpCapabilitiesBase.AOL
- uid: System.Web.Configuration.HttpCapabilitiesBase.BackgroundSounds
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: BackgroundSounds
  nameWithType: HttpCapabilitiesBase.BackgroundSounds
  fullName: System.Web.Configuration.HttpCapabilitiesBase.BackgroundSounds
- uid: System.Web.Configuration.HttpCapabilitiesBase.Beta
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Beta
  nameWithType: HttpCapabilitiesBase.Beta
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Beta
- uid: System.Web.Configuration.HttpCapabilitiesBase.Browser
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Browser
  nameWithType: HttpCapabilitiesBase.Browser
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Browser
- uid: System.Web.Configuration.HttpCapabilitiesBase.BrowserCapabilitiesProvider
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: BrowserCapabilitiesProvider
  nameWithType: HttpCapabilitiesBase.BrowserCapabilitiesProvider
  fullName: System.Web.Configuration.HttpCapabilitiesBase.BrowserCapabilitiesProvider
- uid: System.Web.Configuration.HttpCapabilitiesProvider
  parent: System.Web.Configuration
  isExternal: false
  name: HttpCapabilitiesProvider
  nameWithType: HttpCapabilitiesProvider
  fullName: System.Web.Configuration.HttpCapabilitiesProvider
- uid: System.Web.Configuration.HttpCapabilitiesBase.Browsers
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Browsers
  nameWithType: HttpCapabilitiesBase.Browsers
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Browsers
- uid: System.Collections.ArrayList
  parent: System.Collections
  isExternal: false
  name: ArrayList
  nameWithType: ArrayList
  fullName: System.Collections.ArrayList
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanCombineFormsInDeck
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: CanCombineFormsInDeck
  nameWithType: HttpCapabilitiesBase.CanCombineFormsInDeck
  fullName: System.Web.Configuration.HttpCapabilitiesBase.CanCombineFormsInDeck
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanInitiateVoiceCall
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: CanInitiateVoiceCall
  nameWithType: HttpCapabilitiesBase.CanInitiateVoiceCall
  fullName: System.Web.Configuration.HttpCapabilitiesBase.CanInitiateVoiceCall
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: CanRenderAfterInputOrSelectElement
  nameWithType: HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement
  fullName: System.Web.Configuration.HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanRenderEmptySelects
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: CanRenderEmptySelects
  nameWithType: HttpCapabilitiesBase.CanRenderEmptySelects
  fullName: System.Web.Configuration.HttpCapabilitiesBase.CanRenderEmptySelects
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: CanRenderInputAndSelectElementsTogether
  nameWithType: HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether
  fullName: System.Web.Configuration.HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanRenderMixedSelects
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: CanRenderMixedSelects
  nameWithType: HttpCapabilitiesBase.CanRenderMixedSelects
  fullName: System.Web.Configuration.HttpCapabilitiesBase.CanRenderMixedSelects
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: CanRenderOneventAndPrevElementsTogether
  nameWithType: HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether
  fullName: System.Web.Configuration.HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanRenderPostBackCards
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: CanRenderPostBackCards
  nameWithType: HttpCapabilitiesBase.CanRenderPostBackCards
  fullName: System.Web.Configuration.HttpCapabilitiesBase.CanRenderPostBackCards
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: CanRenderSetvarZeroWithMultiSelectionList
  nameWithType: HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList
  fullName: System.Web.Configuration.HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanSendMail
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: CanSendMail
  nameWithType: HttpCapabilitiesBase.CanSendMail
  fullName: System.Web.Configuration.HttpCapabilitiesBase.CanSendMail
- uid: System.Web.Configuration.HttpCapabilitiesBase.Capabilities
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Capabilities
  nameWithType: HttpCapabilitiesBase.Capabilities
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Capabilities
- uid: System.Web.Configuration.HttpCapabilitiesBase.CDF
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: CDF
  nameWithType: HttpCapabilitiesBase.CDF
  fullName: System.Web.Configuration.HttpCapabilitiesBase.CDF
- uid: System.Web.Configuration.HttpCapabilitiesBase.ClrVersion
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: ClrVersion
  nameWithType: HttpCapabilitiesBase.ClrVersion
  fullName: System.Web.Configuration.HttpCapabilitiesBase.ClrVersion
- uid: System.Version
  parent: System
  isExternal: true
  name: Version
  nameWithType: Version
  fullName: System.Version
- uid: System.Web.Configuration.HttpCapabilitiesBase.Cookies
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Cookies
  nameWithType: HttpCapabilitiesBase.Cookies
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Cookies
- uid: System.Web.Configuration.HttpCapabilitiesBase.Crawler
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Crawler
  nameWithType: HttpCapabilitiesBase.Crawler
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Crawler
- uid: System.Web.Configuration.HttpCapabilitiesBase.CreateHtmlTextWriter(System.IO.TextWriter)
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: CreateHtmlTextWriter(TextWriter)
  nameWithType: HttpCapabilitiesBase.CreateHtmlTextWriter(TextWriter)
  fullName: System.Web.Configuration.HttpCapabilitiesBase.CreateHtmlTextWriter(TextWriter)
- uid: System.Web.UI.HtmlTextWriter
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HtmlTextWriter
  fullName: System.Web.UI.HtmlTextWriter
- uid: System.IO.TextWriter
  parent: System.IO
  isExternal: true
  name: TextWriter
  nameWithType: TextWriter
  fullName: System.IO.TextWriter
- uid: System.Web.Configuration.HttpCapabilitiesBase.DefaultSubmitButtonLimit
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: DefaultSubmitButtonLimit
  nameWithType: HttpCapabilitiesBase.DefaultSubmitButtonLimit
  fullName: System.Web.Configuration.HttpCapabilitiesBase.DefaultSubmitButtonLimit
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.Configuration.HttpCapabilitiesBase.DisableOptimizedCacheKey
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: DisableOptimizedCacheKey()
  nameWithType: HttpCapabilitiesBase.DisableOptimizedCacheKey()
  fullName: System.Web.Configuration.HttpCapabilitiesBase.DisableOptimizedCacheKey()
- uid: System.Web.Configuration.HttpCapabilitiesBase.EcmaScriptVersion
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: EcmaScriptVersion
  nameWithType: HttpCapabilitiesBase.EcmaScriptVersion
  fullName: System.Web.Configuration.HttpCapabilitiesBase.EcmaScriptVersion
- uid: System.Web.Configuration.HttpCapabilitiesBase.Frames
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Frames
  nameWithType: HttpCapabilitiesBase.Frames
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Frames
- uid: System.Web.Configuration.HttpCapabilitiesBase.GatewayMajorVersion
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: GatewayMajorVersion
  nameWithType: HttpCapabilitiesBase.GatewayMajorVersion
  fullName: System.Web.Configuration.HttpCapabilitiesBase.GatewayMajorVersion
- uid: System.Web.Configuration.HttpCapabilitiesBase.GatewayMinorVersion
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: GatewayMinorVersion
  nameWithType: HttpCapabilitiesBase.GatewayMinorVersion
  fullName: System.Web.Configuration.HttpCapabilitiesBase.GatewayMinorVersion
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Web.Configuration.HttpCapabilitiesBase.GatewayVersion
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: GatewayVersion
  nameWithType: HttpCapabilitiesBase.GatewayVersion
  fullName: System.Web.Configuration.HttpCapabilitiesBase.GatewayVersion
- uid: System.Web.Configuration.HttpCapabilitiesBase.GetClrVersions
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: GetClrVersions()
  nameWithType: HttpCapabilitiesBase.GetClrVersions()
  fullName: System.Web.Configuration.HttpCapabilitiesBase.GetClrVersions()
- uid: System.Version[]
  parent: System
  isExternal: true
  name: Version
  nameWithType: Version
  fullName: System.Version[]
  spec.csharp:
  - uid: System.Version
    name: Version
    nameWithType: Version
    fullName: Version[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.Configuration.HttpCapabilitiesBase.GetConfigCapabilities(System.String,System.Web.HttpRequest)
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: GetConfigCapabilities(String,HttpRequest)
  nameWithType: HttpCapabilitiesBase.GetConfigCapabilities(String,HttpRequest)
  fullName: System.Web.Configuration.HttpCapabilitiesBase.GetConfigCapabilities(String,HttpRequest)
- uid: System.Web.Configuration.HttpCapabilitiesBase
  parent: System.Web.Configuration
  isExternal: false
  name: HttpCapabilitiesBase
  nameWithType: HttpCapabilitiesBase
  fullName: System.Web.Configuration.HttpCapabilitiesBase
- uid: System.Web.HttpRequest
  parent: System.Web
  isExternal: false
  name: HttpRequest
  nameWithType: HttpRequest
  fullName: System.Web.HttpRequest
- uid: System.Web.Configuration.HttpCapabilitiesBase.HasBackButton
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: HasBackButton
  nameWithType: HttpCapabilitiesBase.HasBackButton
  fullName: System.Web.Configuration.HttpCapabilitiesBase.HasBackButton
- uid: System.Web.Configuration.HttpCapabilitiesBase.HidesRightAlignedMultiselectScrollbars
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: HidesRightAlignedMultiselectScrollbars
  nameWithType: HttpCapabilitiesBase.HidesRightAlignedMultiselectScrollbars
  fullName: System.Web.Configuration.HttpCapabilitiesBase.HidesRightAlignedMultiselectScrollbars
- uid: System.Web.Configuration.HttpCapabilitiesBase.HtmlTextWriter
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HttpCapabilitiesBase.HtmlTextWriter
  fullName: System.Web.Configuration.HttpCapabilitiesBase.HtmlTextWriter
- uid: System.Web.Configuration.HttpCapabilitiesBase.Id
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Id
  nameWithType: HttpCapabilitiesBase.Id
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Id
- uid: System.Web.Configuration.HttpCapabilitiesBase.Init
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Init()
  nameWithType: HttpCapabilitiesBase.Init()
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Init()
- uid: System.Web.Configuration.HttpCapabilitiesBase.InputType
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: InputType
  nameWithType: HttpCapabilitiesBase.InputType
  fullName: System.Web.Configuration.HttpCapabilitiesBase.InputType
- uid: System.Web.Configuration.HttpCapabilitiesBase.IsBrowser(System.String)
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: IsBrowser(String)
  nameWithType: HttpCapabilitiesBase.IsBrowser(String)
  fullName: System.Web.Configuration.HttpCapabilitiesBase.IsBrowser(String)
- uid: System.Web.Configuration.HttpCapabilitiesBase.IsColor
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: IsColor
  nameWithType: HttpCapabilitiesBase.IsColor
  fullName: System.Web.Configuration.HttpCapabilitiesBase.IsColor
- uid: System.Web.Configuration.HttpCapabilitiesBase.IsMobileDevice
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: IsMobileDevice
  nameWithType: HttpCapabilitiesBase.IsMobileDevice
  fullName: System.Web.Configuration.HttpCapabilitiesBase.IsMobileDevice
- uid: System.Web.Configuration.HttpCapabilitiesBase.Item(System.String)
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Item(String)
  nameWithType: HttpCapabilitiesBase.Item(String)
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Item(String)
- uid: System.Web.Configuration.HttpCapabilitiesBase.JavaApplets
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: JavaApplets
  nameWithType: HttpCapabilitiesBase.JavaApplets
  fullName: System.Web.Configuration.HttpCapabilitiesBase.JavaApplets
- uid: System.Web.Configuration.HttpCapabilitiesBase.JavaScript
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: JavaScript
  nameWithType: HttpCapabilitiesBase.JavaScript
  fullName: System.Web.Configuration.HttpCapabilitiesBase.JavaScript
- uid: System.Web.Configuration.HttpCapabilitiesBase.JScriptVersion
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: JScriptVersion
  nameWithType: HttpCapabilitiesBase.JScriptVersion
  fullName: System.Web.Configuration.HttpCapabilitiesBase.JScriptVersion
- uid: System.Web.Configuration.HttpCapabilitiesBase.MajorVersion
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: MajorVersion
  nameWithType: HttpCapabilitiesBase.MajorVersion
  fullName: System.Web.Configuration.HttpCapabilitiesBase.MajorVersion
- uid: System.Web.Configuration.HttpCapabilitiesBase.MaximumHrefLength
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: MaximumHrefLength
  nameWithType: HttpCapabilitiesBase.MaximumHrefLength
  fullName: System.Web.Configuration.HttpCapabilitiesBase.MaximumHrefLength
- uid: System.Web.Configuration.HttpCapabilitiesBase.MaximumRenderedPageSize
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: MaximumRenderedPageSize
  nameWithType: HttpCapabilitiesBase.MaximumRenderedPageSize
  fullName: System.Web.Configuration.HttpCapabilitiesBase.MaximumRenderedPageSize
- uid: System.Web.Configuration.HttpCapabilitiesBase.MaximumSoftkeyLabelLength
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: MaximumSoftkeyLabelLength
  nameWithType: HttpCapabilitiesBase.MaximumSoftkeyLabelLength
  fullName: System.Web.Configuration.HttpCapabilitiesBase.MaximumSoftkeyLabelLength
- uid: System.Web.Configuration.HttpCapabilitiesBase.MinorVersion
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: MinorVersion
  nameWithType: HttpCapabilitiesBase.MinorVersion
  fullName: System.Web.Configuration.HttpCapabilitiesBase.MinorVersion
- uid: System.Web.Configuration.HttpCapabilitiesBase.MinorVersionString
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: MinorVersionString
  nameWithType: HttpCapabilitiesBase.MinorVersionString
  fullName: System.Web.Configuration.HttpCapabilitiesBase.MinorVersionString
- uid: System.Web.Configuration.HttpCapabilitiesBase.MobileDeviceManufacturer
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: MobileDeviceManufacturer
  nameWithType: HttpCapabilitiesBase.MobileDeviceManufacturer
  fullName: System.Web.Configuration.HttpCapabilitiesBase.MobileDeviceManufacturer
- uid: System.Web.Configuration.HttpCapabilitiesBase.MobileDeviceModel
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: MobileDeviceModel
  nameWithType: HttpCapabilitiesBase.MobileDeviceModel
  fullName: System.Web.Configuration.HttpCapabilitiesBase.MobileDeviceModel
- uid: System.Web.Configuration.HttpCapabilitiesBase.MSDomVersion
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: MSDomVersion
  nameWithType: HttpCapabilitiesBase.MSDomVersion
  fullName: System.Web.Configuration.HttpCapabilitiesBase.MSDomVersion
- uid: System.Web.Configuration.HttpCapabilitiesBase.NumberOfSoftkeys
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: NumberOfSoftkeys
  nameWithType: HttpCapabilitiesBase.NumberOfSoftkeys
  fullName: System.Web.Configuration.HttpCapabilitiesBase.NumberOfSoftkeys
- uid: System.Web.Configuration.HttpCapabilitiesBase.Platform
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Platform
  nameWithType: HttpCapabilitiesBase.Platform
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Platform
- uid: System.Web.Configuration.HttpCapabilitiesBase.PreferredImageMime
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: PreferredImageMime
  nameWithType: HttpCapabilitiesBase.PreferredImageMime
  fullName: System.Web.Configuration.HttpCapabilitiesBase.PreferredImageMime
- uid: System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingMime
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: PreferredRenderingMime
  nameWithType: HttpCapabilitiesBase.PreferredRenderingMime
  fullName: System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingMime
- uid: System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingType
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: PreferredRenderingType
  nameWithType: HttpCapabilitiesBase.PreferredRenderingType
  fullName: System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingType
- uid: System.Web.Configuration.HttpCapabilitiesBase.PreferredRequestEncoding
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: PreferredRequestEncoding
  nameWithType: HttpCapabilitiesBase.PreferredRequestEncoding
  fullName: System.Web.Configuration.HttpCapabilitiesBase.PreferredRequestEncoding
- uid: System.Web.Configuration.HttpCapabilitiesBase.PreferredResponseEncoding
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: PreferredResponseEncoding
  nameWithType: HttpCapabilitiesBase.PreferredResponseEncoding
  fullName: System.Web.Configuration.HttpCapabilitiesBase.PreferredResponseEncoding
- uid: System.Web.Configuration.HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RendersBreakBeforeWmlSelectAndInput
  nameWithType: HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput
- uid: System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterHtmlLists
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RendersBreaksAfterHtmlLists
  nameWithType: HttpCapabilitiesBase.RendersBreaksAfterHtmlLists
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterHtmlLists
- uid: System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RendersBreaksAfterWmlAnchor
  nameWithType: HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor
- uid: System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlInput
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RendersBreaksAfterWmlInput
  nameWithType: HttpCapabilitiesBase.RendersBreaksAfterWmlInput
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlInput
- uid: System.Web.Configuration.HttpCapabilitiesBase.RendersWmlDoAcceptsInline
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RendersWmlDoAcceptsInline
  nameWithType: HttpCapabilitiesBase.RendersWmlDoAcceptsInline
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RendersWmlDoAcceptsInline
- uid: System.Web.Configuration.HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RendersWmlSelectsAsMenuCards
  nameWithType: HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiredMetaTagNameValue
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiredMetaTagNameValue
  nameWithType: HttpCapabilitiesBase.RequiredMetaTagNameValue
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiredMetaTagNameValue
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresAttributeColonSubstitution
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresAttributeColonSubstitution
  nameWithType: HttpCapabilitiesBase.RequiresAttributeColonSubstitution
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresAttributeColonSubstitution
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresContentTypeMetaTag
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresContentTypeMetaTag
  nameWithType: HttpCapabilitiesBase.RequiresContentTypeMetaTag
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresContentTypeMetaTag
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresControlStateInSession
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresControlStateInSession
  nameWithType: HttpCapabilitiesBase.RequiresControlStateInSession
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresControlStateInSession
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresDBCSCharacter
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresDBCSCharacter
  nameWithType: HttpCapabilitiesBase.RequiresDBCSCharacter
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresDBCSCharacter
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresHtmlAdaptiveErrorReporting
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresHtmlAdaptiveErrorReporting
  nameWithType: HttpCapabilitiesBase.RequiresHtmlAdaptiveErrorReporting
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresHtmlAdaptiveErrorReporting
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresLeadingPageBreak
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresLeadingPageBreak
  nameWithType: HttpCapabilitiesBase.RequiresLeadingPageBreak
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresLeadingPageBreak
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresNoBreakInFormatting
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresNoBreakInFormatting
  nameWithType: HttpCapabilitiesBase.RequiresNoBreakInFormatting
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresNoBreakInFormatting
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresOutputOptimization
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresOutputOptimization
  nameWithType: HttpCapabilitiesBase.RequiresOutputOptimization
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresOutputOptimization
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresPhoneNumbersAsPlainText
  nameWithType: HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresSpecialViewStateEncoding
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresSpecialViewStateEncoding
  nameWithType: HttpCapabilitiesBase.RequiresSpecialViewStateEncoding
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresSpecialViewStateEncoding
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueFilePathSuffix
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresUniqueFilePathSuffix
  nameWithType: HttpCapabilitiesBase.RequiresUniqueFilePathSuffix
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueFilePathSuffix
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueHtmlCheckboxNames
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresUniqueHtmlCheckboxNames
  nameWithType: HttpCapabilitiesBase.RequiresUniqueHtmlCheckboxNames
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueHtmlCheckboxNames
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueHtmlInputNames
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresUniqueHtmlInputNames
  nameWithType: HttpCapabilitiesBase.RequiresUniqueHtmlInputNames
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueHtmlInputNames
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresUrlEncodedPostfieldValues
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresUrlEncodedPostfieldValues
  nameWithType: HttpCapabilitiesBase.RequiresUrlEncodedPostfieldValues
  fullName: System.Web.Configuration.HttpCapabilitiesBase.RequiresUrlEncodedPostfieldValues
- uid: System.Web.Configuration.HttpCapabilitiesBase.ScreenBitDepth
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: ScreenBitDepth
  nameWithType: HttpCapabilitiesBase.ScreenBitDepth
  fullName: System.Web.Configuration.HttpCapabilitiesBase.ScreenBitDepth
- uid: System.Web.Configuration.HttpCapabilitiesBase.ScreenCharactersHeight
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: ScreenCharactersHeight
  nameWithType: HttpCapabilitiesBase.ScreenCharactersHeight
  fullName: System.Web.Configuration.HttpCapabilitiesBase.ScreenCharactersHeight
- uid: System.Web.Configuration.HttpCapabilitiesBase.ScreenCharactersWidth
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: ScreenCharactersWidth
  nameWithType: HttpCapabilitiesBase.ScreenCharactersWidth
  fullName: System.Web.Configuration.HttpCapabilitiesBase.ScreenCharactersWidth
- uid: System.Web.Configuration.HttpCapabilitiesBase.ScreenPixelsHeight
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: ScreenPixelsHeight
  nameWithType: HttpCapabilitiesBase.ScreenPixelsHeight
  fullName: System.Web.Configuration.HttpCapabilitiesBase.ScreenPixelsHeight
- uid: System.Web.Configuration.HttpCapabilitiesBase.ScreenPixelsWidth
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: ScreenPixelsWidth
  nameWithType: HttpCapabilitiesBase.ScreenPixelsWidth
  fullName: System.Web.Configuration.HttpCapabilitiesBase.ScreenPixelsWidth
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsAccesskeyAttribute
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsAccesskeyAttribute
  nameWithType: HttpCapabilitiesBase.SupportsAccesskeyAttribute
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsAccesskeyAttribute
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsBodyColor
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsBodyColor
  nameWithType: HttpCapabilitiesBase.SupportsBodyColor
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsBodyColor
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsBold
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsBold
  nameWithType: HttpCapabilitiesBase.SupportsBold
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsBold
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsCacheControlMetaTag
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsCacheControlMetaTag
  nameWithType: HttpCapabilitiesBase.SupportsCacheControlMetaTag
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsCacheControlMetaTag
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsCallback
  nameWithType: HttpCapabilitiesBase.SupportsCallback
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsCss
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsCss
  nameWithType: HttpCapabilitiesBase.SupportsCss
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsCss
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsDivAlign
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsDivAlign
  nameWithType: HttpCapabilitiesBase.SupportsDivAlign
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsDivAlign
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsDivNoWrap
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsDivNoWrap
  nameWithType: HttpCapabilitiesBase.SupportsDivNoWrap
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsDivNoWrap
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsEmptyStringInCookieValue
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsEmptyStringInCookieValue
  nameWithType: HttpCapabilitiesBase.SupportsEmptyStringInCookieValue
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsEmptyStringInCookieValue
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsFontColor
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsFontColor
  nameWithType: HttpCapabilitiesBase.SupportsFontColor
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsFontColor
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsFontName
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsFontName
  nameWithType: HttpCapabilitiesBase.SupportsFontName
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsFontName
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsFontSize
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsFontSize
  nameWithType: HttpCapabilitiesBase.SupportsFontSize
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsFontSize
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsImageSubmit
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsImageSubmit
  nameWithType: HttpCapabilitiesBase.SupportsImageSubmit
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsImageSubmit
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsIModeSymbols
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsIModeSymbols
  nameWithType: HttpCapabilitiesBase.SupportsIModeSymbols
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsIModeSymbols
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsInputIStyle
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsInputIStyle
  nameWithType: HttpCapabilitiesBase.SupportsInputIStyle
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsInputIStyle
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsInputMode
  nameWithType: HttpCapabilitiesBase.SupportsInputMode
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsItalic
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsItalic
  nameWithType: HttpCapabilitiesBase.SupportsItalic
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsItalic
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsJPhoneMultiMediaAttributes
  nameWithType: HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneSymbols
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsJPhoneSymbols
  nameWithType: HttpCapabilitiesBase.SupportsJPhoneSymbols
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneSymbols
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsQueryStringInFormAction
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsQueryStringInFormAction
  nameWithType: HttpCapabilitiesBase.SupportsQueryStringInFormAction
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsQueryStringInFormAction
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsRedirectWithCookie
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsRedirectWithCookie
  nameWithType: HttpCapabilitiesBase.SupportsRedirectWithCookie
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsRedirectWithCookie
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsSelectMultiple
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsSelectMultiple
  nameWithType: HttpCapabilitiesBase.SupportsSelectMultiple
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsSelectMultiple
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsUncheck
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsUncheck
  nameWithType: HttpCapabilitiesBase.SupportsUncheck
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsUncheck
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsXmlHttp
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsXmlHttp
  nameWithType: HttpCapabilitiesBase.SupportsXmlHttp
  fullName: System.Web.Configuration.HttpCapabilitiesBase.SupportsXmlHttp
- uid: System.Web.Configuration.HttpCapabilitiesBase.System#Web#UI#IFilterResolutionService#CompareFilters(System.String,System.String)
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: System.Web.UI.IFilterResolutionService.CompareFilters(String,String)
  nameWithType: HttpCapabilitiesBase.System.Web.UI.IFilterResolutionService.CompareFilters(String,String)
  fullName: System.Web.Configuration.HttpCapabilitiesBase.System.Web.UI.IFilterResolutionService.CompareFilters(String,String)
- uid: System.Web.Configuration.HttpCapabilitiesBase.System#Web#UI#IFilterResolutionService#EvaluateFilter(System.String)
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: System.Web.UI.IFilterResolutionService.EvaluateFilter(String)
  nameWithType: HttpCapabilitiesBase.System.Web.UI.IFilterResolutionService.EvaluateFilter(String)
  fullName: System.Web.Configuration.HttpCapabilitiesBase.System.Web.UI.IFilterResolutionService.EvaluateFilter(String)
- uid: System.Web.Configuration.HttpCapabilitiesBase.Tables
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Tables
  nameWithType: HttpCapabilitiesBase.Tables
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Tables
- uid: System.Web.Configuration.HttpCapabilitiesBase.TagWriter
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: TagWriter
  nameWithType: HttpCapabilitiesBase.TagWriter
  fullName: System.Web.Configuration.HttpCapabilitiesBase.TagWriter
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.Configuration.HttpCapabilitiesBase.Type
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Type
  nameWithType: HttpCapabilitiesBase.Type
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Type
- uid: System.Web.Configuration.HttpCapabilitiesBase.UseOptimizedCacheKey
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: UseOptimizedCacheKey
  nameWithType: HttpCapabilitiesBase.UseOptimizedCacheKey
  fullName: System.Web.Configuration.HttpCapabilitiesBase.UseOptimizedCacheKey
- uid: System.Web.Configuration.HttpCapabilitiesBase.VBScript
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: VBScript
  nameWithType: HttpCapabilitiesBase.VBScript
  fullName: System.Web.Configuration.HttpCapabilitiesBase.VBScript
- uid: System.Web.Configuration.HttpCapabilitiesBase.Version
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Version
  nameWithType: HttpCapabilitiesBase.Version
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Version
- uid: System.Web.Configuration.HttpCapabilitiesBase.W3CDomVersion
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: W3CDomVersion
  nameWithType: HttpCapabilitiesBase.W3CDomVersion
  fullName: System.Web.Configuration.HttpCapabilitiesBase.W3CDomVersion
- uid: System.Web.Configuration.HttpCapabilitiesBase.Win16
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Win16
  nameWithType: HttpCapabilitiesBase.Win16
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Win16
- uid: System.Web.Configuration.HttpCapabilitiesBase.Win32
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Win32
  nameWithType: HttpCapabilitiesBase.Win32
  fullName: System.Web.Configuration.HttpCapabilitiesBase.Win32
- uid: System.Web.Configuration.HttpCapabilitiesBase.#ctor*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: HttpCapabilitiesBase
  nameWithType: HttpCapabilitiesBase.HttpCapabilitiesBase
- uid: System.Web.Configuration.HttpCapabilitiesBase.ActiveXControls*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: ActiveXControls
  nameWithType: HttpCapabilitiesBase.ActiveXControls
- uid: System.Web.Configuration.HttpCapabilitiesBase.Adapters*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Adapters
  nameWithType: HttpCapabilitiesBase.Adapters
- uid: System.Web.Configuration.HttpCapabilitiesBase.AddBrowser*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: AddBrowser
  nameWithType: HttpCapabilitiesBase.AddBrowser
- uid: System.Web.Configuration.HttpCapabilitiesBase.AOL*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: AOL
  nameWithType: HttpCapabilitiesBase.AOL
- uid: System.Web.Configuration.HttpCapabilitiesBase.BackgroundSounds*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: BackgroundSounds
  nameWithType: HttpCapabilitiesBase.BackgroundSounds
- uid: System.Web.Configuration.HttpCapabilitiesBase.Beta*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Beta
  nameWithType: HttpCapabilitiesBase.Beta
- uid: System.Web.Configuration.HttpCapabilitiesBase.Browser*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Browser
  nameWithType: HttpCapabilitiesBase.Browser
- uid: System.Web.Configuration.HttpCapabilitiesBase.BrowserCapabilitiesProvider*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: BrowserCapabilitiesProvider
  nameWithType: HttpCapabilitiesBase.BrowserCapabilitiesProvider
- uid: System.Web.Configuration.HttpCapabilitiesBase.Browsers*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Browsers
  nameWithType: HttpCapabilitiesBase.Browsers
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanCombineFormsInDeck*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: CanCombineFormsInDeck
  nameWithType: HttpCapabilitiesBase.CanCombineFormsInDeck
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanInitiateVoiceCall*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: CanInitiateVoiceCall
  nameWithType: HttpCapabilitiesBase.CanInitiateVoiceCall
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: CanRenderAfterInputOrSelectElement
  nameWithType: HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanRenderEmptySelects*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: CanRenderEmptySelects
  nameWithType: HttpCapabilitiesBase.CanRenderEmptySelects
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: CanRenderInputAndSelectElementsTogether
  nameWithType: HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanRenderMixedSelects*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: CanRenderMixedSelects
  nameWithType: HttpCapabilitiesBase.CanRenderMixedSelects
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: CanRenderOneventAndPrevElementsTogether
  nameWithType: HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanRenderPostBackCards*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: CanRenderPostBackCards
  nameWithType: HttpCapabilitiesBase.CanRenderPostBackCards
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: CanRenderSetvarZeroWithMultiSelectionList
  nameWithType: HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList
- uid: System.Web.Configuration.HttpCapabilitiesBase.CanSendMail*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: CanSendMail
  nameWithType: HttpCapabilitiesBase.CanSendMail
- uid: System.Web.Configuration.HttpCapabilitiesBase.Capabilities*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Capabilities
  nameWithType: HttpCapabilitiesBase.Capabilities
- uid: System.Web.Configuration.HttpCapabilitiesBase.CDF*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: CDF
  nameWithType: HttpCapabilitiesBase.CDF
- uid: System.Web.Configuration.HttpCapabilitiesBase.ClrVersion*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: ClrVersion
  nameWithType: HttpCapabilitiesBase.ClrVersion
- uid: System.Web.Configuration.HttpCapabilitiesBase.Cookies*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Cookies
  nameWithType: HttpCapabilitiesBase.Cookies
- uid: System.Web.Configuration.HttpCapabilitiesBase.Crawler*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Crawler
  nameWithType: HttpCapabilitiesBase.Crawler
- uid: System.Web.Configuration.HttpCapabilitiesBase.CreateHtmlTextWriter*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: CreateHtmlTextWriter
  nameWithType: HttpCapabilitiesBase.CreateHtmlTextWriter
- uid: System.Web.Configuration.HttpCapabilitiesBase.DefaultSubmitButtonLimit*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: DefaultSubmitButtonLimit
  nameWithType: HttpCapabilitiesBase.DefaultSubmitButtonLimit
- uid: System.Web.Configuration.HttpCapabilitiesBase.DisableOptimizedCacheKey*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: DisableOptimizedCacheKey
  nameWithType: HttpCapabilitiesBase.DisableOptimizedCacheKey
- uid: System.Web.Configuration.HttpCapabilitiesBase.EcmaScriptVersion*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: EcmaScriptVersion
  nameWithType: HttpCapabilitiesBase.EcmaScriptVersion
- uid: System.Web.Configuration.HttpCapabilitiesBase.Frames*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Frames
  nameWithType: HttpCapabilitiesBase.Frames
- uid: System.Web.Configuration.HttpCapabilitiesBase.GatewayMajorVersion*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: GatewayMajorVersion
  nameWithType: HttpCapabilitiesBase.GatewayMajorVersion
- uid: System.Web.Configuration.HttpCapabilitiesBase.GatewayMinorVersion*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: GatewayMinorVersion
  nameWithType: HttpCapabilitiesBase.GatewayMinorVersion
- uid: System.Web.Configuration.HttpCapabilitiesBase.GatewayVersion*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: GatewayVersion
  nameWithType: HttpCapabilitiesBase.GatewayVersion
- uid: System.Web.Configuration.HttpCapabilitiesBase.GetClrVersions*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: GetClrVersions
  nameWithType: HttpCapabilitiesBase.GetClrVersions
- uid: System.Web.Configuration.HttpCapabilitiesBase.GetConfigCapabilities*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: GetConfigCapabilities
  nameWithType: HttpCapabilitiesBase.GetConfigCapabilities
- uid: System.Web.Configuration.HttpCapabilitiesBase.HasBackButton*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: HasBackButton
  nameWithType: HttpCapabilitiesBase.HasBackButton
- uid: System.Web.Configuration.HttpCapabilitiesBase.HidesRightAlignedMultiselectScrollbars*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: HidesRightAlignedMultiselectScrollbars
  nameWithType: HttpCapabilitiesBase.HidesRightAlignedMultiselectScrollbars
- uid: System.Web.Configuration.HttpCapabilitiesBase.HtmlTextWriter*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HttpCapabilitiesBase.HtmlTextWriter
- uid: System.Web.Configuration.HttpCapabilitiesBase.Id*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Id
  nameWithType: HttpCapabilitiesBase.Id
- uid: System.Web.Configuration.HttpCapabilitiesBase.Init*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Init
  nameWithType: HttpCapabilitiesBase.Init
- uid: System.Web.Configuration.HttpCapabilitiesBase.InputType*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: InputType
  nameWithType: HttpCapabilitiesBase.InputType
- uid: System.Web.Configuration.HttpCapabilitiesBase.IsBrowser*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: IsBrowser
  nameWithType: HttpCapabilitiesBase.IsBrowser
- uid: System.Web.Configuration.HttpCapabilitiesBase.IsColor*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: IsColor
  nameWithType: HttpCapabilitiesBase.IsColor
- uid: System.Web.Configuration.HttpCapabilitiesBase.IsMobileDevice*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: IsMobileDevice
  nameWithType: HttpCapabilitiesBase.IsMobileDevice
- uid: System.Web.Configuration.HttpCapabilitiesBase.Item*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Item
  nameWithType: HttpCapabilitiesBase.Item
- uid: System.Web.Configuration.HttpCapabilitiesBase.JavaApplets*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: JavaApplets
  nameWithType: HttpCapabilitiesBase.JavaApplets
- uid: System.Web.Configuration.HttpCapabilitiesBase.JavaScript*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: JavaScript
  nameWithType: HttpCapabilitiesBase.JavaScript
- uid: System.Web.Configuration.HttpCapabilitiesBase.JScriptVersion*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: JScriptVersion
  nameWithType: HttpCapabilitiesBase.JScriptVersion
- uid: System.Web.Configuration.HttpCapabilitiesBase.MajorVersion*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: MajorVersion
  nameWithType: HttpCapabilitiesBase.MajorVersion
- uid: System.Web.Configuration.HttpCapabilitiesBase.MaximumHrefLength*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: MaximumHrefLength
  nameWithType: HttpCapabilitiesBase.MaximumHrefLength
- uid: System.Web.Configuration.HttpCapabilitiesBase.MaximumRenderedPageSize*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: MaximumRenderedPageSize
  nameWithType: HttpCapabilitiesBase.MaximumRenderedPageSize
- uid: System.Web.Configuration.HttpCapabilitiesBase.MaximumSoftkeyLabelLength*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: MaximumSoftkeyLabelLength
  nameWithType: HttpCapabilitiesBase.MaximumSoftkeyLabelLength
- uid: System.Web.Configuration.HttpCapabilitiesBase.MinorVersion*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: MinorVersion
  nameWithType: HttpCapabilitiesBase.MinorVersion
- uid: System.Web.Configuration.HttpCapabilitiesBase.MinorVersionString*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: MinorVersionString
  nameWithType: HttpCapabilitiesBase.MinorVersionString
- uid: System.Web.Configuration.HttpCapabilitiesBase.MobileDeviceManufacturer*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: MobileDeviceManufacturer
  nameWithType: HttpCapabilitiesBase.MobileDeviceManufacturer
- uid: System.Web.Configuration.HttpCapabilitiesBase.MobileDeviceModel*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: MobileDeviceModel
  nameWithType: HttpCapabilitiesBase.MobileDeviceModel
- uid: System.Web.Configuration.HttpCapabilitiesBase.MSDomVersion*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: MSDomVersion
  nameWithType: HttpCapabilitiesBase.MSDomVersion
- uid: System.Web.Configuration.HttpCapabilitiesBase.NumberOfSoftkeys*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: NumberOfSoftkeys
  nameWithType: HttpCapabilitiesBase.NumberOfSoftkeys
- uid: System.Web.Configuration.HttpCapabilitiesBase.Platform*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Platform
  nameWithType: HttpCapabilitiesBase.Platform
- uid: System.Web.Configuration.HttpCapabilitiesBase.PreferredImageMime*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: PreferredImageMime
  nameWithType: HttpCapabilitiesBase.PreferredImageMime
- uid: System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingMime*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: PreferredRenderingMime
  nameWithType: HttpCapabilitiesBase.PreferredRenderingMime
- uid: System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingType*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: PreferredRenderingType
  nameWithType: HttpCapabilitiesBase.PreferredRenderingType
- uid: System.Web.Configuration.HttpCapabilitiesBase.PreferredRequestEncoding*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: PreferredRequestEncoding
  nameWithType: HttpCapabilitiesBase.PreferredRequestEncoding
- uid: System.Web.Configuration.HttpCapabilitiesBase.PreferredResponseEncoding*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: PreferredResponseEncoding
  nameWithType: HttpCapabilitiesBase.PreferredResponseEncoding
- uid: System.Web.Configuration.HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RendersBreakBeforeWmlSelectAndInput
  nameWithType: HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput
- uid: System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterHtmlLists*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RendersBreaksAfterHtmlLists
  nameWithType: HttpCapabilitiesBase.RendersBreaksAfterHtmlLists
- uid: System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RendersBreaksAfterWmlAnchor
  nameWithType: HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor
- uid: System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlInput*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RendersBreaksAfterWmlInput
  nameWithType: HttpCapabilitiesBase.RendersBreaksAfterWmlInput
- uid: System.Web.Configuration.HttpCapabilitiesBase.RendersWmlDoAcceptsInline*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RendersWmlDoAcceptsInline
  nameWithType: HttpCapabilitiesBase.RendersWmlDoAcceptsInline
- uid: System.Web.Configuration.HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RendersWmlSelectsAsMenuCards
  nameWithType: HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiredMetaTagNameValue*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiredMetaTagNameValue
  nameWithType: HttpCapabilitiesBase.RequiredMetaTagNameValue
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresAttributeColonSubstitution*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresAttributeColonSubstitution
  nameWithType: HttpCapabilitiesBase.RequiresAttributeColonSubstitution
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresContentTypeMetaTag*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresContentTypeMetaTag
  nameWithType: HttpCapabilitiesBase.RequiresContentTypeMetaTag
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresControlStateInSession*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresControlStateInSession
  nameWithType: HttpCapabilitiesBase.RequiresControlStateInSession
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresDBCSCharacter*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresDBCSCharacter
  nameWithType: HttpCapabilitiesBase.RequiresDBCSCharacter
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresHtmlAdaptiveErrorReporting*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresHtmlAdaptiveErrorReporting
  nameWithType: HttpCapabilitiesBase.RequiresHtmlAdaptiveErrorReporting
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresLeadingPageBreak*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresLeadingPageBreak
  nameWithType: HttpCapabilitiesBase.RequiresLeadingPageBreak
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresNoBreakInFormatting*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresNoBreakInFormatting
  nameWithType: HttpCapabilitiesBase.RequiresNoBreakInFormatting
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresOutputOptimization*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresOutputOptimization
  nameWithType: HttpCapabilitiesBase.RequiresOutputOptimization
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresPhoneNumbersAsPlainText
  nameWithType: HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresSpecialViewStateEncoding*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresSpecialViewStateEncoding
  nameWithType: HttpCapabilitiesBase.RequiresSpecialViewStateEncoding
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueFilePathSuffix*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresUniqueFilePathSuffix
  nameWithType: HttpCapabilitiesBase.RequiresUniqueFilePathSuffix
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueHtmlCheckboxNames*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresUniqueHtmlCheckboxNames
  nameWithType: HttpCapabilitiesBase.RequiresUniqueHtmlCheckboxNames
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueHtmlInputNames*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresUniqueHtmlInputNames
  nameWithType: HttpCapabilitiesBase.RequiresUniqueHtmlInputNames
- uid: System.Web.Configuration.HttpCapabilitiesBase.RequiresUrlEncodedPostfieldValues*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: RequiresUrlEncodedPostfieldValues
  nameWithType: HttpCapabilitiesBase.RequiresUrlEncodedPostfieldValues
- uid: System.Web.Configuration.HttpCapabilitiesBase.ScreenBitDepth*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: ScreenBitDepth
  nameWithType: HttpCapabilitiesBase.ScreenBitDepth
- uid: System.Web.Configuration.HttpCapabilitiesBase.ScreenCharactersHeight*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: ScreenCharactersHeight
  nameWithType: HttpCapabilitiesBase.ScreenCharactersHeight
- uid: System.Web.Configuration.HttpCapabilitiesBase.ScreenCharactersWidth*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: ScreenCharactersWidth
  nameWithType: HttpCapabilitiesBase.ScreenCharactersWidth
- uid: System.Web.Configuration.HttpCapabilitiesBase.ScreenPixelsHeight*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: ScreenPixelsHeight
  nameWithType: HttpCapabilitiesBase.ScreenPixelsHeight
- uid: System.Web.Configuration.HttpCapabilitiesBase.ScreenPixelsWidth*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: ScreenPixelsWidth
  nameWithType: HttpCapabilitiesBase.ScreenPixelsWidth
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsAccesskeyAttribute*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsAccesskeyAttribute
  nameWithType: HttpCapabilitiesBase.SupportsAccesskeyAttribute
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsBodyColor*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsBodyColor
  nameWithType: HttpCapabilitiesBase.SupportsBodyColor
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsBold*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsBold
  nameWithType: HttpCapabilitiesBase.SupportsBold
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsCacheControlMetaTag*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsCacheControlMetaTag
  nameWithType: HttpCapabilitiesBase.SupportsCacheControlMetaTag
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsCallback
  nameWithType: HttpCapabilitiesBase.SupportsCallback
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsCss*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsCss
  nameWithType: HttpCapabilitiesBase.SupportsCss
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsDivAlign*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsDivAlign
  nameWithType: HttpCapabilitiesBase.SupportsDivAlign
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsDivNoWrap*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsDivNoWrap
  nameWithType: HttpCapabilitiesBase.SupportsDivNoWrap
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsEmptyStringInCookieValue*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsEmptyStringInCookieValue
  nameWithType: HttpCapabilitiesBase.SupportsEmptyStringInCookieValue
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsFontColor*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsFontColor
  nameWithType: HttpCapabilitiesBase.SupportsFontColor
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsFontName*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsFontName
  nameWithType: HttpCapabilitiesBase.SupportsFontName
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsFontSize*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsFontSize
  nameWithType: HttpCapabilitiesBase.SupportsFontSize
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsImageSubmit*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsImageSubmit
  nameWithType: HttpCapabilitiesBase.SupportsImageSubmit
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsIModeSymbols*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsIModeSymbols
  nameWithType: HttpCapabilitiesBase.SupportsIModeSymbols
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsInputIStyle*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsInputIStyle
  nameWithType: HttpCapabilitiesBase.SupportsInputIStyle
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsInputMode
  nameWithType: HttpCapabilitiesBase.SupportsInputMode
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsItalic*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsItalic
  nameWithType: HttpCapabilitiesBase.SupportsItalic
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsJPhoneMultiMediaAttributes
  nameWithType: HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneSymbols*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsJPhoneSymbols
  nameWithType: HttpCapabilitiesBase.SupportsJPhoneSymbols
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsQueryStringInFormAction*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsQueryStringInFormAction
  nameWithType: HttpCapabilitiesBase.SupportsQueryStringInFormAction
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsRedirectWithCookie*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsRedirectWithCookie
  nameWithType: HttpCapabilitiesBase.SupportsRedirectWithCookie
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsSelectMultiple*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsSelectMultiple
  nameWithType: HttpCapabilitiesBase.SupportsSelectMultiple
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsUncheck*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsUncheck
  nameWithType: HttpCapabilitiesBase.SupportsUncheck
- uid: System.Web.Configuration.HttpCapabilitiesBase.SupportsXmlHttp*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: SupportsXmlHttp
  nameWithType: HttpCapabilitiesBase.SupportsXmlHttp
- uid: System.Web.Configuration.HttpCapabilitiesBase.System#Web#UI#IFilterResolutionService#CompareFilters*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: System.Web.UI.IFilterResolutionService.CompareFilters
  nameWithType: HttpCapabilitiesBase.System.Web.UI.IFilterResolutionService.CompareFilters
- uid: System.Web.Configuration.HttpCapabilitiesBase.System#Web#UI#IFilterResolutionService#EvaluateFilter*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: System.Web.UI.IFilterResolutionService.EvaluateFilter
  nameWithType: HttpCapabilitiesBase.System.Web.UI.IFilterResolutionService.EvaluateFilter
- uid: System.Web.Configuration.HttpCapabilitiesBase.Tables*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Tables
  nameWithType: HttpCapabilitiesBase.Tables
- uid: System.Web.Configuration.HttpCapabilitiesBase.TagWriter*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: TagWriter
  nameWithType: HttpCapabilitiesBase.TagWriter
- uid: System.Web.Configuration.HttpCapabilitiesBase.Type*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Type
  nameWithType: HttpCapabilitiesBase.Type
- uid: System.Web.Configuration.HttpCapabilitiesBase.UseOptimizedCacheKey*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: UseOptimizedCacheKey
  nameWithType: HttpCapabilitiesBase.UseOptimizedCacheKey
- uid: System.Web.Configuration.HttpCapabilitiesBase.VBScript*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: VBScript
  nameWithType: HttpCapabilitiesBase.VBScript
- uid: System.Web.Configuration.HttpCapabilitiesBase.Version*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Version
  nameWithType: HttpCapabilitiesBase.Version
- uid: System.Web.Configuration.HttpCapabilitiesBase.W3CDomVersion*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: W3CDomVersion
  nameWithType: HttpCapabilitiesBase.W3CDomVersion
- uid: System.Web.Configuration.HttpCapabilitiesBase.Win16*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Win16
  nameWithType: HttpCapabilitiesBase.Win16
- uid: System.Web.Configuration.HttpCapabilitiesBase.Win32*
  parent: System.Web.Configuration.HttpCapabilitiesBase
  isExternal: false
  name: Win32
  nameWithType: HttpCapabilitiesBase.Win32
