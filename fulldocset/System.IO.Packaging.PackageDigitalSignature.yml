### YamlMime:ManagedReference
items:
- uid: System.IO.Packaging.PackageDigitalSignature
  id: PackageDigitalSignature
  children:
  - System.IO.Packaging.PackageDigitalSignature.CertificateEmbeddingOption
  - System.IO.Packaging.PackageDigitalSignature.GetPartTransformList(System.Uri)
  - System.IO.Packaging.PackageDigitalSignature.Signature
  - System.IO.Packaging.PackageDigitalSignature.SignaturePart
  - System.IO.Packaging.PackageDigitalSignature.SignatureType
  - System.IO.Packaging.PackageDigitalSignature.SignatureValue
  - System.IO.Packaging.PackageDigitalSignature.SignedParts
  - System.IO.Packaging.PackageDigitalSignature.SignedRelationshipSelectors
  - System.IO.Packaging.PackageDigitalSignature.Signer
  - System.IO.Packaging.PackageDigitalSignature.SigningTime
  - System.IO.Packaging.PackageDigitalSignature.TimeFormat
  - System.IO.Packaging.PackageDigitalSignature.Verify
  - System.IO.Packaging.PackageDigitalSignature.Verify(System.Security.Cryptography.X509Certificates.X509Certificate)
  langs:
  - csharp
  name: PackageDigitalSignature
  nameWithType: PackageDigitalSignature
  fullName: System.IO.Packaging.PackageDigitalSignature
  type: Class
  summary: "패키지 파트 및 관계 집합에 적용 되는 디지털 서명을 나타냅니다."
  remarks: "PackageDigitalSignature 개체는 변경할 수 및 만들어진 후에 변경할 수 없습니다.       보안을 위해 한 PackageDigitalSignature 파트에 <xref:System.IO.Packaging.Package>.</xref:System.IO.Packaging.Package> 내에서 연결 될 수 있습니다. 두 기능을 제공 하는 X.509 인증서를 통합 하는 PackageDigitalSignature:-를 식별 하 고 파트의 출처를 인증 합니다.      -부분 수정 되지 않았는지 확인 합니다.       디지털 서명을 수정 하지 못하도록 부품을 방해 하지 않는 있지만 부품 어떤 식으로든에서 변경 된 경우 서명 대 한 유효성 검사가 실패 합니다. 응용 프로그램이 적절 한 조치를 취할 수-예를 들어 부품 열리지에서 않을 수 있습니다 또는 파트 수정 되었는지 및 안전 하지 않은 사용자를 알릴 수 있습니다.       패키지 디지털 서명에 대 한 자세한 내용은 MSDN 문서를 참조 하십시오. [디지털 서명 프레임 워크를 Open Packaging Conventions](http://go.microsoft.com/fwlink/?LinkId=74494)합니다."
  syntax:
    content: public class PackageDigitalSignature
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignature.CertificateEmbeddingOption
  id: CertificateEmbeddingOption
  parent: System.IO.Packaging.PackageDigitalSignature
  langs:
  - csharp
  name: CertificateEmbeddingOption
  nameWithType: PackageDigitalSignature.CertificateEmbeddingOption
  fullName: System.IO.Packaging.PackageDigitalSignature.CertificateEmbeddingOption
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "X.509 인증서를 포함 옵션을 가져옵니다."
  remarks: "패키지의 유효성을 검사 하는 데 사용 되는 X.509 인증서는 세 위치 중 하나에 저장 될 수 있습니다: | | |   |-|-|   | <xref:System.IO.Packaging.CertificateEmbeddingOption>| 고유한 인증서에 <xref:System.IO.Packaging.PackagePart>패키지에서.</xref:System.IO.Packaging.PackagePart> </xref:System.IO.Packaging.CertificateEmbeddingOption><br /><br /> <xref:System.IO.Packaging.PackageDigitalSignature.Signer%2A>속성을 통해 X.509 인증서를 얻을 수 있습니다. |   | <xref:System.IO.Packaging.CertificateEmbeddingOption>| 콘텐츠 내에서 <xref:System.IO.Packaging.PackageDigitalSignature.SignaturePart%2A>패키지에서.</xref:System.IO.Packaging.PackageDigitalSignature.SignaturePart%2A> </xref:System.IO.Packaging.CertificateEmbeddingOption> </xref:System.IO.Packaging.PackageDigitalSignature.Signer%2A><br /><br /> <xref:System.IO.Packaging.PackageDigitalSignature.Signer%2A>속성을 통해 X.509 인증서를 얻을 수 있습니다. |   | <xref:System.IO.Packaging.CertificateEmbeddingOption>| 서명을 만드는 응용 프로그램과 나중에 유효성 검사에 대 한 시그니처를 사용 하는 응용 프로그램에 알려진 위치에 패키지 외부. |</xref:System.IO.Packaging.CertificateEmbeddingOption> </xref:System.IO.Packaging.PackageDigitalSignature.Signer%2A>"
  syntax:
    content: public System.IO.Packaging.CertificateEmbeddingOption CertificateEmbeddingOption { get; }
    return:
      type: System.IO.Packaging.CertificateEmbeddingOption
      description: "중 하나는 <xref href=&quot;System.IO.Packaging.CertificateEmbeddingOption&quot;> </xref> 디지털 서명에 대 한 옵션을 지정 하는 값입니다."
  overload: System.IO.Packaging.PackageDigitalSignature.CertificateEmbeddingOption*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "디지털 <xref:System.IO.Packaging.PackageDigitalSignature.Signature*>삭제 되었습니다.</xref:System.IO.Packaging.PackageDigitalSignature.Signature*>"
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignature.GetPartTransformList(System.Uri)
  id: GetPartTransformList(System.Uri)
  parent: System.IO.Packaging.PackageDigitalSignature
  langs:
  - csharp
  name: GetPartTransformList(Uri)
  nameWithType: PackageDigitalSignature.GetPartTransformList(Uri)
  fullName: System.IO.Packaging.PackageDigitalSignature.GetPartTransformList(Uri)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "정렬된 된 목록을 반환 된 <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;> </xref> 지정된 된 파트에 적용 되는 작업입니다."
  syntax:
    content: public System.Collections.Generic.List<string> GetPartTransformList (Uri partName);
    parameters:
    - id: partName
      type: System.Uri
      description: "<xref:System.Uri>의 <xref href=&quot;System.IO.Packaging.PackagePart&quot;> </xref> 를 변환 목록 반환할</xref:System.Uri>"
    return:
      type: System.Collections.Generic.List{System.String}
      description: "와 같은 URI의 정렬 된 목록 문자열 <xref href=&quot;System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl&quot;> </xref> 또는 <xref href=&quot;System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl&quot;> </xref>, 포함 된 파트에 적용 된 정식 XML 변환을 나타내는 주어진 <code> partName </code> URI입니다."
  overload: System.IO.Packaging.PackageDigitalSignature.GetPartTransformList*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "디지털 <xref:System.IO.Packaging.PackageDigitalSignature.Signature*>삭제 되었습니다.</xref:System.IO.Packaging.PackageDigitalSignature.Signature*>"
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignature.Signature
  id: Signature
  parent: System.IO.Packaging.PackageDigitalSignature
  langs:
  - csharp
  name: Signature
  nameWithType: PackageDigitalSignature.Signature
  fullName: System.IO.Packaging.PackageDigitalSignature.Signature
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "XML 디지털 서명을 가져오거나 설정 합니다."
  remarks: "서명에서 유형별 서명 암호화 기능 및 직렬화를 수행 하는 기본 클래스에 대 한 액세스를 제공는 <xref:System.IO.Packaging.PackagePart>서명을 호스팅하.</xref:System.IO.Packaging.PackagePart>"
  syntax:
    content: public System.Security.Cryptography.Xml.Signature Signature { get; set; }
    return:
      type: System.Security.Cryptography.Xml.Signature
      description: "XML 디지털 서명입니다."
  overload: System.IO.Packaging.PackageDigitalSignature.Signature*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "디지털 서명을 삭제 되었습니다."
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignature.SignaturePart
  id: SignaturePart
  parent: System.IO.Packaging.PackageDigitalSignature
  langs:
  - csharp
  name: SignaturePart
  nameWithType: PackageDigitalSignature.SignaturePart
  fullName: System.IO.Packaging.PackageDigitalSignature.SignaturePart
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "가져옵니다는 <xref href=&quot;System.IO.Packaging.PackagePart&quot;> </xref> 서명을 포함 하 합니다."
  remarks: "서명을 연대 서명할 서명의 패키지 파트 자주 액세스 됩니다."
  syntax:
    content: public System.IO.Packaging.PackagePart SignaturePart { get; }
    return:
      type: System.IO.Packaging.PackagePart
      description: "서명을 포함 하는 패키지 부분입니다."
  overload: System.IO.Packaging.PackageDigitalSignature.SignaturePart*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "디지털 <xref:System.IO.Packaging.PackageDigitalSignature.Signature*>삭제 되었습니다.</xref:System.IO.Packaging.PackageDigitalSignature.Signature*>"
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignature.SignatureType
  id: SignatureType
  parent: System.IO.Packaging.PackageDigitalSignature
  langs:
  - csharp
  name: SignatureType
  nameWithType: PackageDigitalSignature.SignatureType
  fullName: System.IO.Packaging.PackageDigitalSignature.SignatureType
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "가져옵니다는 [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] 서명 형식을 식별 하는 문자열입니다."
  syntax:
    content: public string SignatureType { get; }
    return:
      type: System.String
      description: "A [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] 서명 형식을 식별 하는 문자열입니다. 기본값은 <xref href=&quot;System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl&quot;> </xref>합니다."
  overload: System.IO.Packaging.PackageDigitalSignature.SignatureType*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "디지털 <xref:System.IO.Packaging.PackageDigitalSignature.Signature*>삭제 되었습니다.</xref:System.IO.Packaging.PackageDigitalSignature.Signature*>"
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignature.SignatureValue
  id: SignatureValue
  parent: System.IO.Packaging.PackageDigitalSignature
  langs:
  - csharp
  name: SignatureValue
  nameWithType: PackageDigitalSignature.SignatureValue
  fullName: System.IO.Packaging.PackageDigitalSignature.SignatureValue
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "<xref:System.IO.Packaging.PackageDigitalSignature.Signature*>.</xref:System.IO.Packaging.PackageDigitalSignature.Signature*> 의 암호화 된 해시 값을 가져옵니다."
  syntax:
    content: public byte[] SignatureValue { get; }
    return:
      type: System.Byte[]
      description: "<xref:System.IO.Packaging.PackageDigitalSignature.Signature*>.</xref:System.IO.Packaging.PackageDigitalSignature.Signature*> 의 암호화 된 해시 값을 포함 하는 바이트 배열"
  overload: System.IO.Packaging.PackageDigitalSignature.SignatureValue*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "디지털 <xref:System.IO.Packaging.PackageDigitalSignature.Signature*>삭제 되었습니다.</xref:System.IO.Packaging.PackageDigitalSignature.Signature*>"
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignature.SignedParts
  id: SignedParts
  parent: System.IO.Packaging.PackageDigitalSignature
  langs:
  - csharp
  name: SignedParts
  nameWithType: PackageDigitalSignature.SignedParts
  fullName: System.IO.Packaging.PackageDigitalSignature.SignedParts
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "모든 컬렉션을 가져옵니다는 <xref href=&quot;System.IO.Packaging.PackagePart&quot;> </xref> 서명 된 개체입니다."
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<Uri> SignedParts { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Uri}
      description: "모든 패키지 파트를 포함 하는 컬렉션의 서명으로 서명 합니다."
  overload: System.IO.Packaging.PackageDigitalSignature.SignedParts*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "디지털 <xref:System.IO.Packaging.PackageDigitalSignature.Signature*>삭제 되었습니다.</xref:System.IO.Packaging.PackageDigitalSignature.Signature*>"
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignature.SignedRelationshipSelectors
  id: SignedRelationshipSelectors
  parent: System.IO.Packaging.PackageDigitalSignature
  langs:
  - csharp
  name: SignedRelationshipSelectors
  nameWithType: PackageDigitalSignature.SignedRelationshipSelectors
  fullName: System.IO.Packaging.PackageDigitalSignature.SignedRelationshipSelectors
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "목록을 가져옵니다는 <xref href=&quot;System.IO.Packaging.PackageRelationship&quot;> </xref> 서명으로 서명 된 부분입니다."
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.IO.Packaging.PackageRelationshipSelector> SignedRelationshipSelectors { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IO.Packaging.PackageRelationshipSelector}
      description: "목록에서 <xref href=&quot;System.IO.Packaging.PackageRelationship&quot;> </xref> 서명으로 서명 된 부분입니다."
  overload: System.IO.Packaging.PackageDigitalSignature.SignedRelationshipSelectors*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "디지털 <xref:System.IO.Packaging.PackageDigitalSignature.Signature*>삭제 되었습니다.</xref:System.IO.Packaging.PackageDigitalSignature.Signature*>"
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignature.Signer
  id: Signer
  parent: System.IO.Packaging.PackageDigitalSignature
  langs:
  - csharp
  name: Signer
  nameWithType: PackageDigitalSignature.Signer
  fullName: System.IO.Packaging.PackageDigitalSignature.Signer
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "서명자의 X.509 인증서를 가져옵니다."
  remarks: "디지털 인증서는 패키지에 저장 되어 있는 서명자 서명자의 X.509 인증서를 반환 (즉, <xref:System.IO.Packaging.PackageDigitalSignature.CertificateEmbeddingOption%2A>은 <xref:System.IO.Packaging.CertificateEmbeddingOption>또는 <xref:System.IO.Packaging.CertificateEmbeddingOption>).</xref:System.IO.Packaging.CertificateEmbeddingOption> </xref:System.IO.Packaging.CertificateEmbeddingOption> </xref:System.IO.Packaging.PackageDigitalSignature.CertificateEmbeddingOption%2A>       서명자 반환 `null` 때 X.509 인증서가 패키지에 저장 되지 않습니다 (즉, <xref:System.IO.Packaging.PackageDigitalSignature.CertificateEmbeddingOption%2A>은 <xref:System.IO.Packaging.CertificateEmbeddingOption>).</xref:System.IO.Packaging.CertificateEmbeddingOption> </xref:System.IO.Packaging.PackageDigitalSignature.CertificateEmbeddingOption%2A>"
  syntax:
    content: public System.Security.Cryptography.X509Certificates.X509Certificate Signer { get; }
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "서명자의 디지털 인증서 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 인증서에 저장 되어 있지 않으면는 <xref href=&quot;System.IO.Packaging.Package&quot;> </xref>합니다."
  overload: System.IO.Packaging.PackageDigitalSignature.Signer*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "디지털 <xref:System.IO.Packaging.PackageDigitalSignature.Signature*>삭제 되었습니다.</xref:System.IO.Packaging.PackageDigitalSignature.Signature*>"
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignature.SigningTime
  id: SigningTime
  parent: System.IO.Packaging.PackageDigitalSignature
  langs:
  - csharp
  name: SigningTime
  nameWithType: PackageDigitalSignature.SigningTime
  fullName: System.IO.Packaging.PackageDigitalSignature.SigningTime
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "서명이 생성 된 시간과 날짜를 가져옵니다."
  remarks: "<xref:System.IO.Packaging.PackageDigitalSignature.TimeFormat%2A>속성 날짜의 형식을 지정 합니다.</xref:System.IO.Packaging.PackageDigitalSignature.TimeFormat%2A>  SigningTime 문자열의 형식을 기반으로 <xref:System.IO.Packaging.PackageDigitalSignatureManager.TimeFormat%2A?displayProperty=fullName>속성 서명을 생성 하는 경우에 적용 합니다.</xref:System.IO.Packaging.PackageDigitalSignatureManager.TimeFormat%2A?displayProperty=fullName>       SigningTime 위치 서명이 수행 하는 컴퓨터의 시스템 시간을 기반으로 합니다.       SigningTime &quot;안전한 타임 스탬프&quot; 아니며 신뢰할 수 있는 타임 스탬프 기관에서 가져오지 않았습니다.  안전한 타임 스탬프를 구한 신뢰할 수 있는 타임 스탬프 기관을 통해 적용 해야 합니다."
  syntax:
    content: public DateTime SigningTime { get; }
    return:
      type: System.DateTime
      description: "날짜와 서명을 만들어진 시간입니다."
  overload: System.IO.Packaging.PackageDigitalSignature.SigningTime*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "디지털 <xref:System.IO.Packaging.PackageDigitalSignature.Signature*>삭제 되었습니다.</xref:System.IO.Packaging.PackageDigitalSignature.Signature*>"
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignature.TimeFormat
  id: TimeFormat
  parent: System.IO.Packaging.PackageDigitalSignature
  langs:
  - csharp
  name: TimeFormat
  nameWithType: PackageDigitalSignature.TimeFormat
  fullName: System.IO.Packaging.PackageDigitalSignature.TimeFormat
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "반환 된 시간과 날짜의 형식을 가져옵니다는 <xref:System.IO.Packaging.PackageDigitalSignature.SigningTime*>속성.</xref:System.IO.Packaging.PackageDigitalSignature.SigningTime*>"
  remarks: "날짜/시간 형식은 W3C의 구문을 따릅니다 [날짜 및 시간 형식](http://go.microsoft.com/fwlink/?LinkId=84446) 참고 합니다.  다음 표에 표시 된 구성 요소는 구문 및 문장 부호 표시를 사용 해야 합니다.      | TimeFormat | 설명 | 예 |   |----------------|-----------------|-------------|   | YYYY | 연도 | 2005 |   | YYYY MM | 연도 및 월 | 2005-07 |   | YYYY-월-일 | 완료 날짜 | 2005-07-28 |   | YYYY-m M-날짜/시간입니다 | 완료 날짜와 시간 및 분 | 2005-07-28T19:20-01시 |   | YYYY-m M-DDThh:mm:ssTZD | 완료 날짜 및 시간, 분 및 초 | 2005-07-28T19:20:45-01시 |   | YYYY-m M-DDThh:mm:ss.sTZD| 완료 날짜 및 시간, 분 및 초 소수 부분 | 2005-07-28T19:20:45.75-01시 |       여기서: | | |   |-|-|   | YYYY | 네 자리 연도 (예: 2006) |   | MM | 두 자리 월 (01 = 1 월) |   | DD | 월 (01-31)의 두 일 |   | Thh | 두 자리 시간 (00-23, 24 시간) |   | mm |이 분 (00-59) |   | ss | 두 자리 초 (00-59) |   | s | 초의 소수 부분을 나타내는 하나 이상의 숫자 |   | TZD | 시간대 지정자 (Z 나 + hh: mm 또는-hh: mm) |"
  syntax:
    content: public string TimeFormat { get; }
    return:
      type: System.String
      description: "반환 된 시간과 날짜의 형식은 <xref:System.IO.Packaging.PackageDigitalSignature.SigningTime*>속성.</xref:System.IO.Packaging.PackageDigitalSignature.SigningTime*>"
  overload: System.IO.Packaging.PackageDigitalSignature.TimeFormat*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "디지털 <xref:System.IO.Packaging.PackageDigitalSignature.Signature*>삭제 되었습니다.</xref:System.IO.Packaging.PackageDigitalSignature.Signature*>"
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignature.Verify
  id: Verify
  parent: System.IO.Packaging.PackageDigitalSignature
  langs:
  - csharp
  name: Verify()
  nameWithType: PackageDigitalSignature.Verify()
  fullName: System.IO.Packaging.PackageDigitalSignature.Verify()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "X.509 인증서에 대 한 디지털 서명을 확인합니다."
  remarks: "이 메서드는 <xref:System.IO.Packaging.Package>.</xref:System.IO.Packaging.Package> 에 저장 된 포함 된 X.509 인증서에 대 한 서명을 확인 합니다."
  syntax:
    content: public System.IO.Packaging.VerifyResult Verify ();
    parameters: []
    return:
      type: System.IO.Packaging.VerifyResult
      description: "<xref href=&quot;System.IO.Packaging.VerifyResult&quot;></xref>확인 성공 그렇지 않고 중은 <xref href=&quot;System.IO.Packaging.VerifyResult&quot;> </xref> 문제를 식별 하는 값입니다."
  overload: System.IO.Packaging.PackageDigitalSignature.Verify*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "디지털 <xref:System.IO.Packaging.PackageDigitalSignature.Signature*>삭제 되었습니다.</xref:System.IO.Packaging.PackageDigitalSignature.Signature*>"
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignature.Verify(System.Security.Cryptography.X509Certificates.X509Certificate)
  id: Verify(System.Security.Cryptography.X509Certificates.X509Certificate)
  parent: System.IO.Packaging.PackageDigitalSignature
  langs:
  - csharp
  name: Verify(X509Certificate)
  nameWithType: PackageDigitalSignature.Verify(X509Certificate)
  fullName: System.IO.Packaging.PackageDigitalSignature.Verify(X509Certificate)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "지정 된 X.509 인증서를 사용 하 여 디지털 서명을 확인합니다."
  syntax:
    content: public System.IO.Packaging.VerifyResult Verify (System.Security.Cryptography.X509Certificates.X509Certificate signingCertificate);
    parameters:
    - id: signingCertificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "에 대 한 디지털 서명을 확인 하는 서명자의 X.509 인증서입니다."
    return:
      type: System.IO.Packaging.VerifyResult
      description: "<xref href=&quot;System.IO.Packaging.VerifyResult&quot;></xref>확인 성공 그렇지 않고 중은 <xref href=&quot;System.IO.Packaging.VerifyResult&quot;> </xref> 문제를 식별 하는 값입니다."
  overload: System.IO.Packaging.PackageDigitalSignature.Verify*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "디지털 <xref:System.IO.Packaging.PackageDigitalSignature.Signature*>삭제 되었습니다.</xref:System.IO.Packaging.PackageDigitalSignature.Signature*>"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.IO.Packaging.PackageDigitalSignature.CertificateEmbeddingOption
  parent: System.IO.Packaging.PackageDigitalSignature
  isExternal: false
  name: CertificateEmbeddingOption
  nameWithType: PackageDigitalSignature.CertificateEmbeddingOption
  fullName: System.IO.Packaging.PackageDigitalSignature.CertificateEmbeddingOption
- uid: System.IO.Packaging.CertificateEmbeddingOption
  parent: System.IO.Packaging
  isExternal: false
  name: CertificateEmbeddingOption
  nameWithType: CertificateEmbeddingOption
  fullName: System.IO.Packaging.CertificateEmbeddingOption
- uid: System.IO.Packaging.PackageDigitalSignature.GetPartTransformList(System.Uri)
  parent: System.IO.Packaging.PackageDigitalSignature
  isExternal: false
  name: GetPartTransformList(Uri)
  nameWithType: PackageDigitalSignature.GetPartTransformList(Uri)
  fullName: System.IO.Packaging.PackageDigitalSignature.GetPartTransformList(Uri)
- uid: System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: List<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.IO.Packaging.PackageDigitalSignature.Signature
  parent: System.IO.Packaging.PackageDigitalSignature
  isExternal: false
  name: Signature
  nameWithType: PackageDigitalSignature.Signature
  fullName: System.IO.Packaging.PackageDigitalSignature.Signature
- uid: System.Security.Cryptography.Xml.Signature
  parent: System.Security.Cryptography.Xml
  isExternal: false
  name: Signature
  nameWithType: Signature
  fullName: System.Security.Cryptography.Xml.Signature
- uid: System.IO.Packaging.PackageDigitalSignature.SignaturePart
  parent: System.IO.Packaging.PackageDigitalSignature
  isExternal: false
  name: SignaturePart
  nameWithType: PackageDigitalSignature.SignaturePart
  fullName: System.IO.Packaging.PackageDigitalSignature.SignaturePart
- uid: System.IO.Packaging.PackagePart
  parent: System.IO.Packaging
  isExternal: false
  name: PackagePart
  nameWithType: PackagePart
  fullName: System.IO.Packaging.PackagePart
- uid: System.IO.Packaging.PackageDigitalSignature.SignatureType
  parent: System.IO.Packaging.PackageDigitalSignature
  isExternal: false
  name: SignatureType
  nameWithType: PackageDigitalSignature.SignatureType
  fullName: System.IO.Packaging.PackageDigitalSignature.SignatureType
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.Packaging.PackageDigitalSignature.SignatureValue
  parent: System.IO.Packaging.PackageDigitalSignature
  isExternal: false
  name: SignatureValue
  nameWithType: PackageDigitalSignature.SignatureValue
  fullName: System.IO.Packaging.PackageDigitalSignature.SignatureValue
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.IO.Packaging.PackageDigitalSignature.SignedParts
  parent: System.IO.Packaging.PackageDigitalSignature
  isExternal: false
  name: SignedParts
  nameWithType: PackageDigitalSignature.SignedParts
  fullName: System.IO.Packaging.PackageDigitalSignature.SignedParts
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Uri}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<Uri>
  nameWithType: ReadOnlyCollection<Uri>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Uri>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Uri>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: Uri
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IO.Packaging.PackageDigitalSignature.SignedRelationshipSelectors
  parent: System.IO.Packaging.PackageDigitalSignature
  isExternal: false
  name: SignedRelationshipSelectors
  nameWithType: PackageDigitalSignature.SignedRelationshipSelectors
  fullName: System.IO.Packaging.PackageDigitalSignature.SignedRelationshipSelectors
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.IO.Packaging.PackageRelationshipSelector}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<PackageRelationshipSelector>
  nameWithType: ReadOnlyCollection<PackageRelationshipSelector>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.IO.Packaging.PackageRelationshipSelector>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.IO.Packaging.PackageRelationshipSelector>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IO.Packaging.PackageRelationshipSelector
    name: PackageRelationshipSelector
    nameWithType: PackageRelationshipSelector
    fullName: PackageRelationshipSelector
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IO.Packaging.PackageDigitalSignature.Signer
  parent: System.IO.Packaging.PackageDigitalSignature
  isExternal: false
  name: Signer
  nameWithType: PackageDigitalSignature.Signer
  fullName: System.IO.Packaging.PackageDigitalSignature.Signer
- uid: System.Security.Cryptography.X509Certificates.X509Certificate
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509Certificate
  nameWithType: X509Certificate
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate
- uid: System.IO.Packaging.PackageDigitalSignature.SigningTime
  parent: System.IO.Packaging.PackageDigitalSignature
  isExternal: false
  name: SigningTime
  nameWithType: PackageDigitalSignature.SigningTime
  fullName: System.IO.Packaging.PackageDigitalSignature.SigningTime
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.IO.Packaging.PackageDigitalSignature.TimeFormat
  parent: System.IO.Packaging.PackageDigitalSignature
  isExternal: false
  name: TimeFormat
  nameWithType: PackageDigitalSignature.TimeFormat
  fullName: System.IO.Packaging.PackageDigitalSignature.TimeFormat
- uid: System.IO.Packaging.PackageDigitalSignature.Verify
  parent: System.IO.Packaging.PackageDigitalSignature
  isExternal: false
  name: Verify()
  nameWithType: PackageDigitalSignature.Verify()
  fullName: System.IO.Packaging.PackageDigitalSignature.Verify()
- uid: System.IO.Packaging.VerifyResult
  parent: System.IO.Packaging
  isExternal: false
  name: VerifyResult
  nameWithType: VerifyResult
  fullName: System.IO.Packaging.VerifyResult
- uid: System.IO.Packaging.PackageDigitalSignature.Verify(System.Security.Cryptography.X509Certificates.X509Certificate)
  parent: System.IO.Packaging.PackageDigitalSignature
  isExternal: false
  name: Verify(X509Certificate)
  nameWithType: PackageDigitalSignature.Verify(X509Certificate)
  fullName: System.IO.Packaging.PackageDigitalSignature.Verify(X509Certificate)
- uid: System.IO.Packaging.PackageDigitalSignature.CertificateEmbeddingOption*
  parent: System.IO.Packaging.PackageDigitalSignature
  isExternal: false
  name: CertificateEmbeddingOption
  nameWithType: PackageDigitalSignature.CertificateEmbeddingOption
- uid: System.IO.Packaging.PackageDigitalSignature.GetPartTransformList*
  parent: System.IO.Packaging.PackageDigitalSignature
  isExternal: false
  name: GetPartTransformList
  nameWithType: PackageDigitalSignature.GetPartTransformList
- uid: System.IO.Packaging.PackageDigitalSignature.Signature*
  parent: System.IO.Packaging.PackageDigitalSignature
  isExternal: false
  name: Signature
  nameWithType: PackageDigitalSignature.Signature
- uid: System.IO.Packaging.PackageDigitalSignature.SignaturePart*
  parent: System.IO.Packaging.PackageDigitalSignature
  isExternal: false
  name: SignaturePart
  nameWithType: PackageDigitalSignature.SignaturePart
- uid: System.IO.Packaging.PackageDigitalSignature.SignatureType*
  parent: System.IO.Packaging.PackageDigitalSignature
  isExternal: false
  name: SignatureType
  nameWithType: PackageDigitalSignature.SignatureType
- uid: System.IO.Packaging.PackageDigitalSignature.SignatureValue*
  parent: System.IO.Packaging.PackageDigitalSignature
  isExternal: false
  name: SignatureValue
  nameWithType: PackageDigitalSignature.SignatureValue
- uid: System.IO.Packaging.PackageDigitalSignature.SignedParts*
  parent: System.IO.Packaging.PackageDigitalSignature
  isExternal: false
  name: SignedParts
  nameWithType: PackageDigitalSignature.SignedParts
- uid: System.IO.Packaging.PackageDigitalSignature.SignedRelationshipSelectors*
  parent: System.IO.Packaging.PackageDigitalSignature
  isExternal: false
  name: SignedRelationshipSelectors
  nameWithType: PackageDigitalSignature.SignedRelationshipSelectors
- uid: System.IO.Packaging.PackageDigitalSignature.Signer*
  parent: System.IO.Packaging.PackageDigitalSignature
  isExternal: false
  name: Signer
  nameWithType: PackageDigitalSignature.Signer
- uid: System.IO.Packaging.PackageDigitalSignature.SigningTime*
  parent: System.IO.Packaging.PackageDigitalSignature
  isExternal: false
  name: SigningTime
  nameWithType: PackageDigitalSignature.SigningTime
- uid: System.IO.Packaging.PackageDigitalSignature.TimeFormat*
  parent: System.IO.Packaging.PackageDigitalSignature
  isExternal: false
  name: TimeFormat
  nameWithType: PackageDigitalSignature.TimeFormat
- uid: System.IO.Packaging.PackageDigitalSignature.Verify*
  parent: System.IO.Packaging.PackageDigitalSignature
  isExternal: false
  name: Verify
  nameWithType: PackageDigitalSignature.Verify
