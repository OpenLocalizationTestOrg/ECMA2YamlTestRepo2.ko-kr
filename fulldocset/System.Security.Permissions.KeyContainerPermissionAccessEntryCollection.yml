### YamlMime:ManagedReference
items:
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  id: KeyContainerPermissionAccessEntryCollection
  children:
  - System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Add(System.Security.Permissions.KeyContainerPermissionAccessEntry)
  - System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Clear
  - System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.CopyTo(System.Security.Permissions.KeyContainerPermissionAccessEntry[],System.Int32)
  - System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Count
  - System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.GetEnumerator
  - System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.IndexOf(System.Security.Permissions.KeyContainerPermissionAccessEntry)
  - System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.IsSynchronized
  - System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Item(System.Int32)
  - System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Remove(System.Security.Permissions.KeyContainerPermissionAccessEntry)
  - System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.SyncRoot
  - System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.System#Collections#IEnumerable#GetEnumerator
  langs:
  - csharp
  name: KeyContainerPermissionAccessEntryCollection
  nameWithType: KeyContainerPermissionAccessEntryCollection
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  type: Class
  summary: "컬렉션을 나타냅니다 <xref href=&quot;System.Security.Permissions.KeyContainerPermissionAccessEntry&quot;> </xref> 개체입니다. 이 클래스는 상속 될 수 없습니다."
  remarks: "<xref:System.Security.Permissions.KeyContainerPermissionAccessEntry>개체에 특정 키 컨테이너에 대 한 액세스 권한을 지정합니다.</xref:System.Security.Permissions.KeyContainerPermissionAccessEntry>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class KeyContainerPermissionAccessEntryCollection : System.Collections.ICollection
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Add(System.Security.Permissions.KeyContainerPermissionAccessEntry)
  id: Add(System.Security.Permissions.KeyContainerPermissionAccessEntry)
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  langs:
  - csharp
  name: Add(KeyContainerPermissionAccessEntry)
  nameWithType: KeyContainerPermissionAccessEntryCollection.Add(KeyContainerPermissionAccessEntry)
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Add(KeyContainerPermissionAccessEntry)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "추가 <xref href=&quot;System.Security.Permissions.KeyContainerPermissionAccessEntry&quot;> </xref> 개체 컬렉션입니다."
  remarks: "<xref:System.Security.Permissions.KeyContainerPermissionAccessEntry>개체 컬렉션의 끝에 추가 됩니다.</xref:System.Security.Permissions.KeyContainerPermissionAccessEntry>"
  syntax:
    content: public int Add (System.Security.Permissions.KeyContainerPermissionAccessEntry accessEntry);
    parameters:
    - id: accessEntry
      type: System.Security.Permissions.KeyContainerPermissionAccessEntry
      description: "<xref href=&quot;System.Security.Permissions.KeyContainerPermissionAccessEntry&quot;> </xref> 추가할 개체입니다."
    return:
      type: System.Int32
      description: "새 요소가 삽입 된 인덱스입니다."
  overload: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>accessEntry</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Clear
  id: Clear
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: KeyContainerPermissionAccessEntryCollection.Clear()
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Clear()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "모든 제거는 <xref href=&quot;System.Security.Permissions.KeyContainerPermissionAccessEntry&quot;> </xref> 컬렉션에서 개체입니다."
  remarks: "이 메서드를 사용 하 여 <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection>.</xref:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection> 비워지도록"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.CopyTo(System.Security.Permissions.KeyContainerPermissionAccessEntry[],System.Int32)
  id: CopyTo(System.Security.Permissions.KeyContainerPermissionAccessEntry[],System.Int32)
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  langs:
  - csharp
  name: CopyTo(KeyContainerPermissionAccessEntry[],Int32)
  nameWithType: KeyContainerPermissionAccessEntryCollection.CopyTo(KeyContainerPermissionAccessEntry[],Int32)
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.CopyTo(KeyContainerPermissionAccessEntry[],Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "대상 배열의 지정 된 인덱스부터 호환 가능한&1; 차원 배열에 컬렉션의 요소를 복사 합니다."
  syntax:
    content: public void CopyTo (System.Security.Permissions.KeyContainerPermissionAccessEntry[] array, int index);
    parameters:
    - id: array
      type: System.Security.Permissions.KeyContainerPermissionAccessEntry[]
      description: "1 차원 <xref href=&quot;System.Security.Permissions.KeyContainerPermissionAccessEntry&quot;> </xref> 현재 컬렉션에서 복사한 요소의 대상인 배열입니다."
    - id: index
      type: System.Int32
      description: "인덱스 `array` 복사가 시작 되는 합니다."
  overload: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>array</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>하한값 보다 작습니다 <code>array</code>합니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>array</code>가 다차원 배열인 경우       -또는-컬렉션의 요소 수가에서 사용 가능한 공간 보다 큽니다. <code>index</code> 대상의 끝에 <code>array</code>합니다."
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Count
  id: Count
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  langs:
  - csharp
  name: Count
  nameWithType: KeyContainerPermissionAccessEntryCollection.Count
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Count
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "컬렉션의 항목 수를 가져옵니다."
  remarks: "Count 속성을 사용 하 여의 수를 확인 하려면 <xref:System.Security.Permissions.KeyContainerPermissionAccessEntry>개체에 <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection>컬렉션.</xref:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection> </xref:System.Security.Permissions.KeyContainerPermissionAccessEntry> Count 속성 컬렉션을 반복할 때 컬렉션의 상한을 결정 하 일반적으로 사용 됩니다."
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "수가 <xref href=&quot;System.Security.Permissions.KeyContainerPermissionAccessEntry&quot;> </xref> 컬렉션의 개체입니다."
  overload: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: KeyContainerPermissionAccessEntryCollection.GetEnumerator()
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.GetEnumerator()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "반환 된 <xref href=&quot;System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator&quot;> </xref> 컬렉션의 개체를 통해 반복 하는 데 사용할 수 있습니다."
  remarks: "이 메서드를 만드는 데는 <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator>각 항목을 컬렉션에서 반복 하는 데 사용할 수 있습니다.</xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator>       사용 하 여는 <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A>항목을 현재 가져올 열거자의 속성 컬렉션에서 가리키는.</xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A>       사용 하 여는 <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>컬렉션의 다음 항목으로 이동 하는 열거자의 메서드가.</xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>       사용 하 여는 <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A>초기 위치에 이동 하는 열거자의 메서드가.</xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A>      > [!NOTE] > 만든 후는 <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator>사용 또는 개체는 <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A>열거자는 컬렉션의 첫 번째 항목을 이동 하는 메서드를 호출 해야 합니다는 <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>메서드.</xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> </xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A> </xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator> 그렇지 않은 경우으로 표시 되는 항목의 <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A>속성이 정의 되지 않습니다.</xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A>"
  syntax:
    content: public System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator
      description: "A <xref href=&quot;System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator&quot;> </xref> 컬렉션을 반복 하는 데 사용할 수 있습니다."
  overload: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.IndexOf(System.Security.Permissions.KeyContainerPermissionAccessEntry)
  id: IndexOf(System.Security.Permissions.KeyContainerPermissionAccessEntry)
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  langs:
  - csharp
  name: IndexOf(KeyContainerPermissionAccessEntry)
  nameWithType: KeyContainerPermissionAccessEntryCollection.IndexOf(KeyContainerPermissionAccessEntry)
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.IndexOf(KeyContainerPermissionAccessEntry)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "지정 된 컬렉션에서 인덱스를 가져옵니다 <xref href=&quot;System.Security.Permissions.KeyContainerPermissionAccessEntry&quot;> </xref> 개체를 컬렉션에 있는 경우."
  remarks: "지정 된 인덱스 번호를 확인 하려면이 메서드를 사용 하 여 <xref:System.Security.Permissions.KeyContainerPermissionAccessEntry>컬렉션의 개체입니다.</xref:System.Security.Permissions.KeyContainerPermissionAccessEntry> 하는 경우 지정 된 <xref:System.Security.Permissions.KeyContainerPermissionAccessEntry>개체가 발견 되지 않으면-1의 값 반환 됩니다.</xref:System.Security.Permissions.KeyContainerPermissionAccessEntry>"
  syntax:
    content: public int IndexOf (System.Security.Permissions.KeyContainerPermissionAccessEntry accessEntry);
    parameters:
    - id: accessEntry
      type: System.Security.Permissions.KeyContainerPermissionAccessEntry
      description: "<xref href=&quot;System.Security.Permissions.KeyContainerPermissionAccessEntry&quot;> </xref> 찾을 개체입니다."
    return:
      type: System.Int32
      description: "지정 된 인덱스 <xref href=&quot;System.Security.Permissions.KeyContainerPermissionAccessEntry&quot;> </xref> 일치 항목이 없는 경우 개체의 컬렉션을 사용 하거나-1입니다."
  overload: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.IsSynchronized
  id: IsSynchronized
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: KeyContainerPermissionAccessEntryCollection.IsSynchronized
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.IsSynchronized
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "컬렉션이 동기화 되었는지 여부를 나타내는 값을 (스레드로부터 안전함)을 가져옵니다."
  remarks: "이 속성을 구현 하는 <xref:System.Collections.ICollection.IsSynchronized%2A?displayProperty=fullName>속성을 항상 반환 `false`.</xref:System.Collections.ICollection.IsSynchronized%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>모든 경우"
  overload: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: KeyContainerPermissionAccessEntryCollection.Item(Int32)
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Item(Int32)
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "컬렉션에서 지정된 된 인덱스에 항목을 가져옵니다."
  remarks: "이 인덱서를 사용 하 여 한 <xref:System.Security.Permissions.KeyContainerPermissionAccessEntry>에서 개체는 <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection>배열 표기법을 사용 하 여 지정된 된 인덱스에.</xref:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection> </xref:System.Security.Permissions.KeyContainerPermissionAccessEntry>"
  syntax:
    content: public System.Security.Permissions.KeyContainerPermissionAccessEntry this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "액세스할 요소의의&0;부터 시작 하는 인덱스입니다."
    return:
      type: System.Security.Permissions.KeyContainerPermissionAccessEntry
      description: "<xref href=&quot;System.Security.Permissions.KeyContainerPermissionAccessEntry&quot;> </xref> 개체 컬렉션에서 지정 된 인덱스입니다."
  overload: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Item*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>컬렉션 개수 보다 크거나 같은 경우입니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>index</code>가 음수입니다."
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Remove(System.Security.Permissions.KeyContainerPermissionAccessEntry)
  id: Remove(System.Security.Permissions.KeyContainerPermissionAccessEntry)
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  langs:
  - csharp
  name: Remove(KeyContainerPermissionAccessEntry)
  nameWithType: KeyContainerPermissionAccessEntryCollection.Remove(KeyContainerPermissionAccessEntry)
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Remove(KeyContainerPermissionAccessEntry)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "지정 된 제거 <xref href=&quot;System.Security.Permissions.KeyContainerPermissionAccessEntry&quot;> </xref> 컬렉션에서 개체입니다."
  remarks: "컬렉션에서 항목을 제거할 컬렉션의 다음 하위 항목에 대 한 인덱스 값이 변경 합니다. 제거 된 항목에 대 한 모든 정보가 삭제 됩니다. 제거할 실제 항목을 지정 하 여 특정 항목을 제거 하려는 경우이 메서드를 사용 합니다. 목록에서 모든 항목을 제거 하려면 사용 하 여는 <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Clear%2A>메서드.</xref:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Clear%2A>"
  syntax:
    content: public void Remove (System.Security.Permissions.KeyContainerPermissionAccessEntry accessEntry);
    parameters:
    - id: accessEntry
      type: System.Security.Permissions.KeyContainerPermissionAccessEntry
      description: "<xref href=&quot;System.Security.Permissions.KeyContainerPermissionAccessEntry&quot;> </xref> 제거할 개체입니다."
  overload: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>accessEntry</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.SyncRoot
  id: SyncRoot
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  langs:
  - csharp
  name: SyncRoot
  nameWithType: KeyContainerPermissionAccessEntryCollection.SyncRoot
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.SyncRoot
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "컬렉션에 대 한 액세스를 동기화 하는 데 사용할 수 있는 개체를 가져옵니다."
  remarks: "이 구현에서 반환 되는 개체는 <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection>개체 자체입니다.</xref:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection>       SyncRoot 속성에 대 한 자세한 내용은 참조는 <xref:System.Collections.ICollection.SyncRoot%2A>의 속성은 <xref:System.Collections.ICollection?displayProperty=fullName>인터페이스.</xref:System.Collections.ICollection?displayProperty=fullName> </xref:System.Collections.ICollection.SyncRoot%2A>"
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "컬렉션에 대 한 액세스를 동기화 하는 데 사용할 수 있는 개체입니다."
  overload: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  langs:
  - csharp
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: KeyContainerPermissionAccessEntryCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "대상 배열의 지정 된 인덱스부터 호환 가능한&1; 차원 배열에 컬렉션의 요소를 복사 합니다."
  syntax:
    content: void ICollection.CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "현재 컬렉션에서 복사한 요소의 대상인&1; 차원 배열입니다."
    - id: index
      type: System.Int32
      description: "인덱스 `array` 복사가 시작 되는 합니다."
  overload: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.System#Collections#ICollection#CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>array</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>하한값 보다 작습니다 <code>array</code>합니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>array</code>가 다차원 배열인 경우       -또는-컬렉션의 요소 수가에서 사용 가능한 공간 보다 큽니다. <code>index</code> 대상의 끝에 <code>array</code>합니다."
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: KeyContainerPermissionAccessEntryCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "반환 된 <xref href=&quot;System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator&quot;> </xref> 컬렉션의 개체를 통해 반복 하는 데 사용할 수 있습니다."
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "A <xref href=&quot;System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator&quot;> </xref> 컬렉션을 반복 하는 데 사용할 수 있습니다."
  overload: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Add(System.Security.Permissions.KeyContainerPermissionAccessEntry)
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  isExternal: false
  name: Add(KeyContainerPermissionAccessEntry)
  nameWithType: KeyContainerPermissionAccessEntryCollection.Add(KeyContainerPermissionAccessEntry)
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Add(KeyContainerPermissionAccessEntry)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry
  parent: System.Security.Permissions
  isExternal: false
  name: KeyContainerPermissionAccessEntry
  nameWithType: KeyContainerPermissionAccessEntry
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntry
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Clear
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  isExternal: false
  name: Clear()
  nameWithType: KeyContainerPermissionAccessEntryCollection.Clear()
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Clear()
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.CopyTo(System.Security.Permissions.KeyContainerPermissionAccessEntry[],System.Int32)
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  isExternal: false
  name: CopyTo(KeyContainerPermissionAccessEntry[],Int32)
  nameWithType: KeyContainerPermissionAccessEntryCollection.CopyTo(KeyContainerPermissionAccessEntry[],Int32)
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.CopyTo(KeyContainerPermissionAccessEntry[],Int32)
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry[]
  parent: System.Security.Permissions
  isExternal: false
  name: KeyContainerPermissionAccessEntry
  nameWithType: KeyContainerPermissionAccessEntry
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntry[]
  spec.csharp:
  - uid: System.Security.Permissions.KeyContainerPermissionAccessEntry
    name: KeyContainerPermissionAccessEntry
    nameWithType: KeyContainerPermissionAccessEntry
    fullName: KeyContainerPermissionAccessEntry[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Count
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  isExternal: false
  name: Count
  nameWithType: KeyContainerPermissionAccessEntryCollection.Count
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Count
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.GetEnumerator
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: KeyContainerPermissionAccessEntryCollection.GetEnumerator()
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.GetEnumerator()
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator
  parent: System.Security.Permissions
  isExternal: false
  name: KeyContainerPermissionAccessEntryEnumerator
  nameWithType: KeyContainerPermissionAccessEntryEnumerator
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.IndexOf(System.Security.Permissions.KeyContainerPermissionAccessEntry)
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  isExternal: false
  name: IndexOf(KeyContainerPermissionAccessEntry)
  nameWithType: KeyContainerPermissionAccessEntryCollection.IndexOf(KeyContainerPermissionAccessEntry)
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.IndexOf(KeyContainerPermissionAccessEntry)
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.IsSynchronized
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: KeyContainerPermissionAccessEntryCollection.IsSynchronized
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.IsSynchronized
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Item(System.Int32)
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: KeyContainerPermissionAccessEntryCollection.Item(Int32)
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Item(Int32)
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Remove(System.Security.Permissions.KeyContainerPermissionAccessEntry)
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  isExternal: false
  name: Remove(KeyContainerPermissionAccessEntry)
  nameWithType: KeyContainerPermissionAccessEntryCollection.Remove(KeyContainerPermissionAccessEntry)
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Remove(KeyContainerPermissionAccessEntry)
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.SyncRoot
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  isExternal: false
  name: SyncRoot
  nameWithType: KeyContainerPermissionAccessEntryCollection.SyncRoot
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.SyncRoot
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: KeyContainerPermissionAccessEntryCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.System.Collections.ICollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.System#Collections#IEnumerable#GetEnumerator
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: KeyContainerPermissionAccessEntryCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Add*
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  isExternal: false
  name: Add
  nameWithType: KeyContainerPermissionAccessEntryCollection.Add
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Clear*
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  isExternal: false
  name: Clear
  nameWithType: KeyContainerPermissionAccessEntryCollection.Clear
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.CopyTo*
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  isExternal: false
  name: CopyTo
  nameWithType: KeyContainerPermissionAccessEntryCollection.CopyTo
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Count*
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  isExternal: false
  name: Count
  nameWithType: KeyContainerPermissionAccessEntryCollection.Count
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.GetEnumerator*
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: KeyContainerPermissionAccessEntryCollection.GetEnumerator
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.IndexOf*
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  isExternal: false
  name: IndexOf
  nameWithType: KeyContainerPermissionAccessEntryCollection.IndexOf
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.IsSynchronized*
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: KeyContainerPermissionAccessEntryCollection.IsSynchronized
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Item*
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  isExternal: false
  name: Item
  nameWithType: KeyContainerPermissionAccessEntryCollection.Item
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Remove*
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  isExternal: false
  name: Remove
  nameWithType: KeyContainerPermissionAccessEntryCollection.Remove
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.SyncRoot*
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  isExternal: false
  name: SyncRoot
  nameWithType: KeyContainerPermissionAccessEntryCollection.SyncRoot
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.System#Collections#ICollection#CopyTo*
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo
  nameWithType: KeyContainerPermissionAccessEntryCollection.System.Collections.ICollection.CopyTo
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: KeyContainerPermissionAccessEntryCollection.System.Collections.IEnumerable.GetEnumerator
