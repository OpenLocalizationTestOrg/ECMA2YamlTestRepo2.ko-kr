### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.ComponentChangingEventArgs
  id: ComponentChangingEventArgs
  children:
  - System.ComponentModel.Design.ComponentChangingEventArgs.#ctor(System.Object,System.ComponentModel.MemberDescriptor)
  - System.ComponentModel.Design.ComponentChangingEventArgs.Component
  - System.ComponentModel.Design.ComponentChangingEventArgs.Member
  langs:
  - csharp
  name: ComponentChangingEventArgs
  nameWithType: ComponentChangingEventArgs
  fullName: System.ComponentModel.Design.ComponentChangingEventArgs
  type: Class
  summary: "에 대 한 데이터를 제공는 <xref href=&quot;System.ComponentModel.Design.IComponentChangeService.ComponentChanging&quot;> </xref> 이벤트입니다. 이 클래스는 상속 될 수 없습니다."
  remarks: "에 대 한 데이터를 제공 하는 ComponentChangingEventArgs는 <xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanging>이벤트.</xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanging> <xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanging>이벤트 알립니다는 <xref:System.ComponentModel.Design.IComponentChangeService>현재 디자인 문서에서 특정 구성 요소를 변경 하려고 하는 이벤트 처리기를 등록 합니다.</xref:System.ComponentModel.Design.IComponentChangeService> </xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanging> 이 이벤트는 변경할 수 없도록 하려면 구성 요소는 광범위 하 게 액세스할 수 있는 메서드를 제공 합니다.       A <xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanging>구성 요소를 변경 하기 전에 이벤트가 발생 합니다.</xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanging> 이 이벤트는 변경을 중단 하려면 디자이너에 대 한 기회를 제공 합니다. 구성 요소 디자이너를 일반적으로 발생는 <xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanging>이벤트 자동으로.</xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanging> 속성을 변경할 수 없는 경우 이벤트를 처리 하는 메서드가 예외를 throw 합니다. 예를 들어 디자이너 파일이 소스 코드 제어에 체크 인을 하는 경우이 이벤트의 처리기 일반적으로 예외를 throw 사용자를 거부 하는 파일을 체크 아웃 합니다.       다음 정보를 제공 하는 한 ComponentChangingEventArgs:- `Component` 를 수정할 수 있는 구성 요소를 나타내는 속성을 합니다.      -A `Member` 를 변경할 수 있는 멤버를 나타내는 속성입니다."
  example:
  - "The following example demonstrates creating a ComponentChangingEventArgs.  \n  \n [!code-cs[ComponentChangingEventArgsExample2#1](~/add/codesnippet/csharp/t-system.componentmodel._13_1.cs)]\n [!code-cpp[ComponentChangingEventArgsExample2#1](~/add/codesnippet/cpp/t-system.componentmodel._13_1.cpp)]\n [!code-vb[ComponentChangingEventArgsExample2#1](~/add/codesnippet/visualbasic/t-system.componentmodel._13_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class ComponentChangingEventArgs : EventArgs
  inheritance:
  - System.EventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.Design.ComponentChangingEventArgs.#ctor(System.Object,System.ComponentModel.MemberDescriptor)
  id: '#ctor(System.Object,System.ComponentModel.MemberDescriptor)'
  parent: System.ComponentModel.Design.ComponentChangingEventArgs
  langs:
  - csharp
  name: ComponentChangingEventArgs(Object,MemberDescriptor)
  nameWithType: ComponentChangingEventArgs.ComponentChangingEventArgs(Object,MemberDescriptor)
  fullName: System.ComponentModel.Design.ComponentChangingEventArgs.ComponentChangingEventArgs(Object,MemberDescriptor)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.ComponentModel.Design.ComponentChangingEventArgs&quot;> </xref> 클래스입니다."
  remarks: "A <xref:System.ComponentModel.Design.ComponentChangingEventArgs>를 변경할 수 있는 구성 요소와 멤버를 나타냅니다.</xref:System.ComponentModel.Design.ComponentChangingEventArgs>"
  syntax:
    content: public ComponentChangingEventArgs (object component, System.ComponentModel.MemberDescriptor member);
    parameters:
    - id: component
      type: System.Object
      description: "변경 하려고 하는 구성 요소입니다."
    - id: member
      type: System.ComponentModel.MemberDescriptor
      description: "A <xref href=&quot;System.ComponentModel.MemberDescriptor&quot;> </xref> 나타내는 멤버의 구성 요소를 변경할 수입니다."
  overload: System.ComponentModel.Design.ComponentChangingEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.ComponentChangingEventArgs.Component
  id: Component
  parent: System.ComponentModel.Design.ComponentChangingEventArgs
  langs:
  - csharp
  name: Component
  nameWithType: ComponentChangingEventArgs.Component
  fullName: System.ComponentModel.Design.ComponentChangingEventArgs.Component
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "변경 하려고 하는 구성 요소 또는 구성 요소를 변경할 수 있는 멤버의 부모 컨테이너를 가져옵니다."
  syntax:
    content: public object Component { get; }
    return:
      type: System.Object
      description: "변경 된 멤버를 포함 하려고 하는 구성 요소입니다."
  overload: System.ComponentModel.Design.ComponentChangingEventArgs.Component*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.ComponentChangingEventArgs.Member
  id: Member
  parent: System.ComponentModel.Design.ComponentChangingEventArgs
  langs:
  - csharp
  name: Member
  nameWithType: ComponentChangingEventArgs.Member
  fullName: System.ComponentModel.Design.ComponentChangingEventArgs.Member
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "변경 되어야 할 멤버를 가져옵니다."
  remarks: "이 속성은 `null` 멤버 알 수 없는 경우."
  syntax:
    content: public System.ComponentModel.MemberDescriptor Member { get; }
    return:
      type: System.ComponentModel.MemberDescriptor
      description: "A <xref href=&quot;System.ComponentModel.MemberDescriptor&quot;> </xref> 알려진 경우에 대 한 정보를 변경할 수 있는 멤버를 나타내는 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 그렇지 않은 경우."
  overload: System.ComponentModel.Design.ComponentChangingEventArgs.Member*
  exceptions: []
  platform:
  - net462
references:
- uid: System.EventArgs
  isExternal: false
  name: System.EventArgs
- uid: System.ComponentModel.Design.ComponentChangingEventArgs.#ctor(System.Object,System.ComponentModel.MemberDescriptor)
  parent: System.ComponentModel.Design.ComponentChangingEventArgs
  isExternal: false
  name: ComponentChangingEventArgs(Object,MemberDescriptor)
  nameWithType: ComponentChangingEventArgs.ComponentChangingEventArgs(Object,MemberDescriptor)
  fullName: System.ComponentModel.Design.ComponentChangingEventArgs.ComponentChangingEventArgs(Object,MemberDescriptor)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ComponentModel.MemberDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: MemberDescriptor
  nameWithType: MemberDescriptor
  fullName: System.ComponentModel.MemberDescriptor
- uid: System.ComponentModel.Design.ComponentChangingEventArgs.Component
  parent: System.ComponentModel.Design.ComponentChangingEventArgs
  isExternal: false
  name: Component
  nameWithType: ComponentChangingEventArgs.Component
  fullName: System.ComponentModel.Design.ComponentChangingEventArgs.Component
- uid: System.ComponentModel.Design.ComponentChangingEventArgs.Member
  parent: System.ComponentModel.Design.ComponentChangingEventArgs
  isExternal: false
  name: Member
  nameWithType: ComponentChangingEventArgs.Member
  fullName: System.ComponentModel.Design.ComponentChangingEventArgs.Member
- uid: System.ComponentModel.Design.ComponentChangingEventArgs.#ctor*
  parent: System.ComponentModel.Design.ComponentChangingEventArgs
  isExternal: false
  name: ComponentChangingEventArgs
  nameWithType: ComponentChangingEventArgs.ComponentChangingEventArgs
- uid: System.ComponentModel.Design.ComponentChangingEventArgs.Component*
  parent: System.ComponentModel.Design.ComponentChangingEventArgs
  isExternal: false
  name: Component
  nameWithType: ComponentChangingEventArgs.Component
- uid: System.ComponentModel.Design.ComponentChangingEventArgs.Member*
  parent: System.ComponentModel.Design.ComponentChangingEventArgs
  isExternal: false
  name: Member
  nameWithType: ComponentChangingEventArgs.Member
