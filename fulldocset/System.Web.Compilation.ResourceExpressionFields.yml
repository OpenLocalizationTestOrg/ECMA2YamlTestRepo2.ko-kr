### YamlMime:ManagedReference
items:
- uid: System.Web.Compilation.ResourceExpressionFields
  id: ResourceExpressionFields
  children:
  - System.Web.Compilation.ResourceExpressionFields.ClassKey
  - System.Web.Compilation.ResourceExpressionFields.ResourceKey
  langs:
  - csharp
  name: ResourceExpressionFields
  nameWithType: ResourceExpressionFields
  fullName: System.Web.Compilation.ResourceExpressionFields
  type: Class
  summary: "리소스 구문 분석 된 식에서 필드를 포함합니다."
  remarks: "페이지 구문 분석 되 면 리소스 식에 포함 된 구문 분석 되 고 ResourceExpressionFields 클래스의 인스턴스에 저장 합니다. 이 ResourceExpressionFields 개체 <xref:System.Web.Compilation.ResourceExpressionFields.ClassKey%2A>및 <xref:System.Web.Compilation.ResourceExpressionFields.ResourceKey%2A>.</xref:System.Web.Compilation.ResourceExpressionFields.ResourceKey%2A> </xref:System.Web.Compilation.ResourceExpressionFields.ClassKey%2A> 두 필드에 포함 이러한 필드에는 명시적 리소스 식을 값에서 가져온 것 (`<%$ Resources: ClassKey, ResourceKey %>`) 또는 암시적 (`meta:resourcekey=&quot;ResourceKey&quot;`) 형식입니다.       <xref:System.Web.Compilation.ResourceExpressionFields.ClassKey%2A>리소스 파일에 매핑되는 리소스의 클래스 이름 속성을 식별 합니다.</xref:System.Web.Compilation.ResourceExpressionFields.ClassKey%2A> 예를 들어 Financial.resx, 또는 Financial.en GB.resx 같은 다른 언어 버전 라는 리소스 파일을 참조 하려면 리소스 식은 것으로 표시 `<%$ Resources: Financial, ResourceKey %>`합니다. 구문 분석 한 후의 <xref:System.Web.Compilation.ResourceExpressionFields.ClassKey%2A>속성 값으로 &quot;Financial&quot;를 반환 합니다.</xref:System.Web.Compilation.ResourceExpressionFields.ClassKey%2A>       <xref:System.Web.Compilation.ResourceExpressionFields.ResourceKey%2A>속성 파일에서 검색할 특정 키/값 쌍을 식별 합니다.</xref:System.Web.Compilation.ResourceExpressionFields.ResourceKey%2A> Financial.resx 파일 라는 키를 포함 하는 경우 `Currency`, 리소스 식과 값을 지정할 수 있음을 `<%$ Resources: Financial, Currency %>`합니다. 구문 분석 한 후의 <xref:System.Web.Compilation.ResourceExpressionFields.ResourceKey%2A>속성 값으로 &quot;Currency&quot;를 반환 합니다.</xref:System.Web.Compilation.ResourceExpressionFields.ResourceKey%2A>       리소스 식을 통해 구문 분석 되 고 <xref:System.Web.Compilation.ResourceExpressionBuilder.ParseExpression%2A>메서드.</xref:System.Web.Compilation.ResourceExpressionBuilder.ParseExpression%2A>      > [!CAUTION] > 리소스 파일에 중요 한 정보를 저장 하지 합니다."
  syntax:
    content: public sealed class ResourceExpressionFields
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Compilation.ResourceExpressionFields.ClassKey
  id: ClassKey
  parent: System.Web.Compilation.ResourceExpressionFields
  langs:
  - csharp
  name: ClassKey
  nameWithType: ResourceExpressionFields.ClassKey
  fullName: System.Web.Compilation.ResourceExpressionFields.ClassKey
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "리소스 구문 분석 된 식에 대 한 클래스 키를 가져옵니다."
  remarks: "이 메서드는 리소스를 구문 분석 된 식에 대 한 클래스 키를 반환합니다. 클래스 키 리소스 파일의 이름을 나타내고 폼의 식에 쉼표 (,) 하기 전에 지정 된 값이 `<%$ Resources: [Namespace.]ClassKey, ResourceKey $>`합니다. 리소스 클래스에 대 한 네임 스페이스 값은 선택 사항입니다. 네임 스페이스 제공 되 면 네임 스페이스 및 클래스 키 ClassKey 속성에 반환 됩니다. 클래스 키에 공백이 없어야 합니다. 또는 더블 바이트 문자 집합 (DBCS).       리소스 식은 Financial.resx 또는 Financial.en GB.resx 같은 다른 언어 버전 라는 리소스 파일을 참조 하려면 포함 `%$ Resources: Financial, ResourceKey %>`합니다. 구문 분석 한 후 ClassKey 속성은 해당 값으로 &quot;Financial&quot;을 반환 합니다.      > [!CAUTION] > 리소스 파일에 중요 한 정보를 저장 하지 합니다."
  syntax:
    content: public string ClassKey { get; }
    return:
      type: System.String
      description: "A <xref:System.String>클래스 키가 포함 된 또는 <xref:System.String>클래스 키가 설정 되어 있지 않으면.</xref:System.String> </xref:System.String>"
  overload: System.Web.Compilation.ResourceExpressionFields.ClassKey*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ResourceExpressionFields.ResourceKey
  id: ResourceKey
  parent: System.Web.Compilation.ResourceExpressionFields
  langs:
  - csharp
  name: ResourceKey
  nameWithType: ResourceExpressionFields.ResourceKey
  fullName: System.Web.Compilation.ResourceExpressionFields.ResourceKey
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "리소스 구문 분석 된 식에 대 한 리소스 키를 가져옵니다."
  remarks: "이 메서드는 리소스를 구문 분석 된 식에 대 한 리소스 키를 반환합니다. 리소스 키는 폼의 식에 쉼표 (,) 한 후 지정 된 값 `<%$ Resources: ClassKey, ResourceKey %>`합니다. ResourceKey 속성 클래스 키에 매핑된 리소스 파일 내에서 특정 키/값 쌍을 식별 합니다. 예를 들어 라는 파일 Financial.resx 포함 라는 키 `Currency`, 리소스 식과 값을 지정할 수 있음을 `<%$ Resources: Financial, Currency %>`합니다. 구문 분석 한 후 ResourceKey 속성 값으로 &quot;Currency&quot;를 반환 합니다.      > [!CAUTION] > 리소스 파일에 중요 한 정보를 저장 하지 합니다."
  syntax:
    content: public string ResourceKey { get; }
    return:
      type: System.String
      description: "A <xref:System.String>리소스 키가 포함 된 또는 <xref:System.String>리소스 키가 설정 되어 있지 않으면.</xref:System.String> </xref:System.String>"
  overload: System.Web.Compilation.ResourceExpressionFields.ResourceKey*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.Compilation.ResourceExpressionFields.ClassKey
  parent: System.Web.Compilation.ResourceExpressionFields
  isExternal: false
  name: ClassKey
  nameWithType: ResourceExpressionFields.ClassKey
  fullName: System.Web.Compilation.ResourceExpressionFields.ClassKey
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Compilation.ResourceExpressionFields.ResourceKey
  parent: System.Web.Compilation.ResourceExpressionFields
  isExternal: false
  name: ResourceKey
  nameWithType: ResourceExpressionFields.ResourceKey
  fullName: System.Web.Compilation.ResourceExpressionFields.ResourceKey
- uid: System.Web.Compilation.ResourceExpressionFields.ClassKey*
  parent: System.Web.Compilation.ResourceExpressionFields
  isExternal: false
  name: ClassKey
  nameWithType: ResourceExpressionFields.ClassKey
- uid: System.Web.Compilation.ResourceExpressionFields.ResourceKey*
  parent: System.Web.Compilation.ResourceExpressionFields
  isExternal: false
  name: ResourceKey
  nameWithType: ResourceExpressionFields.ResourceKey
