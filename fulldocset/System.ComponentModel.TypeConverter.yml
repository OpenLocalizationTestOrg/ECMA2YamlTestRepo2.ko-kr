### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.TypeConverter
  id: TypeConverter
  children:
  - System.ComponentModel.TypeConverter.#ctor
  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)
  - System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)
  - System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)
  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)
  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetProperties(System.Object)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  - System.ComponentModel.TypeConverter.GetPropertiesSupported
  - System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValues
  - System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.IsValid(System.Object)
  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])
  langs:
  - csharp
  name: TypeConverter
  nameWithType: TypeConverter
  fullName: System.ComponentModel.TypeConverter
  type: Class
  summary: "다른 형식으로, 물론 표준 값과 하위 속성에 액세스 하기 위한 값의 형식을 변환 하는 단일화 된 방법을 제공 합니다."
  remarks: "변환기의 가장 일반적인 유형은 텍스트 표현을 상호 변환 하는 하나입니다. 클래스에 대 한 형식 변환기에 <xref:System.ComponentModel.TypeConverterAttribute>.</xref:System.ComponentModel.TypeConverterAttribute> 클래스에 바인딩됩니다. 이 특성을 재정의 하지 않는 한 기본 클래스와 동일한 형식 변환기를 사용 하는이 클래스에서 상속 하는 모든 클래스입니다.      > [!NOTE] > 일반 형식 시스템을 위해 직접 액세스 하지 않습니다는 형식 변환기입니다. 대신 적절 한 변환기 <xref:System.ComponentModel.TypeDescriptor>.</xref:System.ComponentModel.TypeDescriptor> 를 사용 하 여 액세스 자세한 내용은 제공 된 코드 예제를 참조 하세요.       **참고** XAML 용도에서는 XAML 프로세서는 <xref:System.ComponentModel.TypeConverterAttribute> <xref:System.ComponentModel.TypeDescriptor>.</xref:System.ComponentModel.TypeDescriptor> 을 통하지 않고 직접</xref:System.ComponentModel.TypeConverterAttribute> 에 대 한 검색 원하는 경우에는 <xref:System.ComponentModel.TypeDescriptor>코드에서 인스턴스 또는 WPF의 공유 인스턴스를 만들 위치 리소스를 사용할 수 있기를 참조 하지 않고 직접 생성 하 <xref:System.ComponentModel.TypeDescriptor>또는 기타 리플렉션 및 형식 시스템을 지원 합니다.</xref:System.ComponentModel.TypeDescriptor> </xref:System.ComponentModel.TypeDescriptor>       TypeConverter에서 파생 된 클래스는 주로 XAML 프로세서에서 태그 (기본적으로 문자열) 특성 또는 초기화 텍스트 값을 변환 하는 방법의 일부로 참조 런타임 표현에 대 한 개체를 생성 합니다. 지 원하는 자체의 고유한 TypeConverter 클래스를 구현 하는 사용자 지정 형식 작성자는 일반적으로 XAML에 대 한 형식 변환 동작을 지 원하는 데 `ConvertFrom` 문자열에서 동작 합니다. 이 동작은 XAML 특성 값으로 제공 하는 문자열 형식 변환할 수 있습니다 하 고 구문 분석 된 개체 그래프에서 개체를 생성 될 수 있도록 문자열에서 개체를 만드는 데 필요한 지원으로 XAML 프로세서를 제공 합니다. 사용자 정의 형식 또는 사용자 지정 형식의 멤버를 적용 하 여 표시 됩니다 <xref:System.ComponentModel.TypeConverterAttribute>는 정의에 특성으로 참조 하는 사용자 지정 TypeConverter 구현을.</xref:System.ComponentModel.TypeConverterAttribute> 자세한 내용은 참조 [XAML 개요에 대 한 유형 변환기](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example shows how to create an instance of a type converter and bind it to a class. The class implementing the converter, `MyClassConverter`, must inherit from the TypeConverter class.  \n  \n [!code-cpp[Classic TypeConverter Example#1](~/add/codesnippet/cpp/t-system.componentmodel._43_1.cpp)]\n [!code-cs[Classic TypeConverter Example#1](~/add/codesnippet/csharp/t-system.componentmodel._43_1.cs)]\n [!code-vb[Classic TypeConverter Example#1](~/add/codesnippet/visualbasic/t-system.componentmodel._43_1.vb)]  \n  \n When you have a property that has an enumeration, check to see whether an enumeration value is valid before setting the property. The next code example requires that an enumeration called `MyPropertyEnum` has been declared.  \n  \n [!code-cpp[Classic TypeConverter Example#2](~/add/codesnippet/cpp/t-system.componentmodel._43_2.cpp)]\n [!code-cs[Classic TypeConverter Example#2](~/add/codesnippet/csharp/t-system.componentmodel._43_2.cs)]\n [!code-vb[Classic TypeConverter Example#2](~/add/codesnippet/visualbasic/t-system.componentmodel._43_2.vb)]  \n  \n Another common type converter usage is to convert an object to a string. The following code example prints out the name of the <xref:System.Drawing.Color> stored in the variable `c`.  \n  \n [!code-cpp[Classic TypeConverter Example#3](~/add/codesnippet/cpp/t-system.componentmodel._43_3.cpp)]\n [!code-cs[Classic TypeConverter Example#3](~/add/codesnippet/csharp/t-system.componentmodel._43_3.cs)]\n [!code-vb[Classic TypeConverter Example#3](~/add/codesnippet/visualbasic/t-system.componentmodel._43_3.vb)]  \n  \n You can also use a type converter to convert a value from its name, as shown in the next code example.  \n  \n [!code-cpp[Classic TypeConverter Example#4](~/add/codesnippet/cpp/t-system.componentmodel._43_4.cpp)]\n [!code-cs[Classic TypeConverter Example#4](~/add/codesnippet/csharp/t-system.componentmodel._43_4.cs)]\n [!code-vb[Classic TypeConverter Example#4](~/add/codesnippet/visualbasic/t-system.componentmodel._43_4.vb)]  \n  \n In the following code example, you can use a type converter to print out the set of standard values that the object supports.  \n  \n [!code-cpp[Classic TypeConverter Example#5](~/add/codesnippet/cpp/t-system.componentmodel._43_5.cpp)]\n [!code-cs[Classic TypeConverter Example#5](~/add/codesnippet/csharp/t-system.componentmodel._43_5.cs)]\n [!code-vb[Classic TypeConverter Example#5](~/add/codesnippet/visualbasic/t-system.componentmodel._43_5.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class TypeConverter
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.#ctor
  id: '#ctor'
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: TypeConverter()
  nameWithType: TypeConverter.TypeConverter()
  fullName: System.ComponentModel.TypeConverter.TypeConverter()
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.ComponentModel.TypeConverter&quot;> </xref> 클래스입니다."
  syntax:
    content: public TypeConverter ();
    parameters: []
  overload: System.ComponentModel.TypeConverter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)
  id: CanConvertFrom(System.Type)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: CanConvertFrom(Type)
  nameWithType: TypeConverter.CanConvertFrom(Type)
  fullName: System.ComponentModel.TypeConverter.CanConvertFrom(Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "이 변환기 지정 된 형식의 개체를이 변환기의 형식으로 변환할 수 있는지 여부를 반환 합니다."
  remarks: "이 메서드는 항상 반환이 클래스에서 구현 된 대로 `false`합니다. 반환 하지 않습니다 `true`합니다."
  syntax:
    content: public bool CanConvertFrom (Type sourceType);
    parameters:
    - id: sourceType
      type: System.Type
      description: "A <xref:System.Type>에서 변환할 형식을 나타내는.</xref:System.Type>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>이 변환기에서 변환을; 수행할 수 있는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.ComponentModel.TypeConverter.CanConvertFrom*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: TypeConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.ComponentModel.TypeConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "이 변환기의 지정된 된 컨텍스트를 사용 하 여이 변환기 형식으로 지정 된 형식의 개체를 변환할 수 있는지 여부를 반환 합니다."
  remarks: "이 메서드가 반환 하는이 클래스에서 구현 된 대로 `false`하지 않는 한, `sourceType` 은 <xref:System.ComponentModel.Design.Serialization.InstanceDescriptor>.</xref:System.ComponentModel.Design.Serialization.InstanceDescriptor>"
  syntax:
    content: public virtual bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> 형식 컨텍스트를 제공 하는 합니다."
    - id: sourceType
      type: System.Type
      description: "A <xref:System.Type>에서 변환할 형식을 나타내는.</xref:System.Type>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>이 변환기에서 변환을; 수행할 수 있는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.ComponentModel.TypeConverter.CanConvertFrom*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.CanConvertTo(System.Type)
  id: CanConvertTo(System.Type)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: CanConvertTo(Type)
  nameWithType: TypeConverter.CanConvertTo(Type)
  fullName: System.ComponentModel.TypeConverter.CanConvertTo(Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "이 변환기 개체를 지정된 된 형식으로 변환할 수 있는지 여부를 반환 합니다."
  remarks: "경우 `destinationType` 는 문자열의 기본 구현은 <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A>항상 반환 `true`.</xref:System.ComponentModel.TypeConverter.CanConvertTo%2A>"
  syntax:
    content: public bool CanConvertTo (Type destinationType);
    parameters:
    - id: destinationType
      type: System.Type
      description: "A <xref:System.Type>를 변환할 형식을 나타내는.</xref:System.Type>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>이 변환기에서 변환을; 수행할 수 있는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.ComponentModel.TypeConverter.CanConvertTo*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: CanConvertTo(ITypeDescriptorContext,Type)
  nameWithType: TypeConverter.CanConvertTo(ITypeDescriptorContext,Type)
  fullName: System.ComponentModel.TypeConverter.CanConvertTo(ITypeDescriptorContext,Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "이 변환기 개체를 지정된 된 컨텍스트를 사용 하 여 지정 된 형식으로 변환할 수 있는지 여부를 반환 합니다."
  remarks: "사용 하 여 `context` 매개 변수를이 변환기가 호출 되는 환경에 대 한 추가 정보를 추출 합니다. 이 매개 변수 수 `null`, 항상 확인 합니다. 또한 컨텍스트 개체의 속성을 반환할 수 `null`합니다.       경우 `destinationType` 는 문자열의 기본 구현은 <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A>항상 반환 `true`.</xref:System.ComponentModel.TypeConverter.CanConvertTo%2A>"
  syntax:
    content: public virtual bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> 형식 컨텍스트를 제공 하는 합니다."
    - id: destinationType
      type: System.Type
      description: "A <xref:System.Type>를 변환할 형식을 나타내는.</xref:System.Type>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>이 변환기에서 변환을; 수행할 수 있는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.ComponentModel.TypeConverter.CanConvertTo*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.ConvertFrom(System.Object)
  id: ConvertFrom(System.Object)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: ConvertFrom(Object)
  nameWithType: TypeConverter.ConvertFrom(Object)
  fullName: System.ComponentModel.TypeConverter.ConvertFrom(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "이 변환기의 형식 지정된 값으로 변환 합니다."
  syntax:
    content: public object ConvertFrom (object value);
    parameters:
    - id: value
      type: System.Object
      description: "<xref:System.Object>변환할.</xref:System.Object>"
    return:
      type: System.Object
      description: "<xref:System.Object>변환 된 값을 나타내는입니다.</xref:System.Object>"
  overload: System.ComponentModel.TypeConverter.ConvertFrom*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "변환을 수행할 수 없습니다."
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: TypeConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.ComponentModel.TypeConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "지정 된 컨텍스트 및 문화권 정보를 사용 하 여이 변환기의 형식으로 지정된 된 개체를 변환 합니다."
  remarks: "사용자 지정 형식 작성자는 일반적으로 XAML에 대 한 형식 변환 동작을 지원 하기 위해 구현는 <xref:System.ComponentModel.TypeConverter>문자열에서 ConvertFrom 동작을 지 원하는 클래스입니다.</xref:System.ComponentModel.TypeConverter> 이 동작은 XAML 특성 값으로 제공 하는 문자열 형식 변환할 수 있습니다 하 고 구문 분석 된 개체 그래프에서 개체를 생성 될 수 있도록 문자열에서 개체를 만드는 데 필요한 지원으로 XAML 프로세서를 제공 합니다. 사용자 정의 형식 또는 사용자 지정 형식의 멤버를 적용 하 여 표시 됩니다 <xref:System.ComponentModel.TypeConverterAttribute>는 정의에 특성으로 참조 하는 사용자 지정 <xref:System.ComponentModel.TypeConverter>구현.</xref:System.ComponentModel.TypeConverter> </xref:System.ComponentModel.TypeConverterAttribute>       XAML 용도에서는 일반적으로 제공 하지 않으면 분기 구현을 기반으로 `culture`합니다. 개발 환경 컨텍스트에서 미리 컴파일된 XAML 및 문화 별 정보가 런타임에 대 한 XAML은 XAML 형식 변환에 대 한와 관련이 없습니다 때문입니다. 자세한 내용은 참조 [XAML 개요에 대 한 유형 변환기](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public virtual object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> 형식 컨텍스트를 제공 하는 합니다."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "<xref:System.Globalization.CultureInfo>현재 문화권으로 사용할.</xref:System.Globalization.CultureInfo>"
    - id: value
      type: System.Object
      description: "<xref:System.Object>변환할.</xref:System.Object>"
    return:
      type: System.Object
      description: "<xref:System.Object>변환 된 값을 나타내는입니다.</xref:System.Object>"
  overload: System.ComponentModel.TypeConverter.ConvertFrom*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "변환을 수행할 수 없습니다."
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)
  id: ConvertFromInvariantString(System.String)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: ConvertFromInvariantString(String)
  nameWithType: TypeConverter.ConvertFromInvariantString(String)
  fullName: System.ComponentModel.TypeConverter.ConvertFromInvariantString(String)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "고정 문화권을 사용 하 여이 변환기의 형식으로 지정된 된 문자열을 변환 합니다."
  remarks: "기본 구현에서는 항상 반환 `null`합니다."
  syntax:
    content: public object ConvertFromInvariantString (string text);
    parameters:
    - id: text
      type: System.String
      description: "<xref:System.String>변환할.</xref:System.String>"
    return:
      type: System.Object
      description: "<xref:System.Object>변환된 된 텍스트를 나타내는입니다.</xref:System.Object>"
  overload: System.ComponentModel.TypeConverter.ConvertFromInvariantString*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "변환을 수행할 수 없습니다."
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)
  id: ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: ConvertFromInvariantString(ITypeDescriptorContext,String)
  nameWithType: TypeConverter.ConvertFromInvariantString(ITypeDescriptorContext,String)
  fullName: System.ComponentModel.TypeConverter.ConvertFromInvariantString(ITypeDescriptorContext,String)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "고정 문화권 및 지정된 된 컨텍스트를 사용 하 여이 변환기의 형식으로 지정된 된 문자열을 변환 합니다."
  remarks: "문자열을 적절 한 개체로 변환할 수 없는 경우 예외가 발생 합니다. 기본 구현에서는 항상 반환 `null`합니다.       사용 하 여 `context` 매개 변수를이 변환기가 호출 되는 환경에 대 한 추가 정보를 추출 합니다. 이 매개 변수 수 `null`, 항상 확인 합니다. 또한 컨텍스트 개체의 속성을 반환할 수 `null`합니다."
  syntax:
    content: public object ConvertFromInvariantString (System.ComponentModel.ITypeDescriptorContext context, string text);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> 형식 컨텍스트를 제공 하는 합니다."
    - id: text
      type: System.String
      description: "<xref:System.String>변환할.</xref:System.String>"
    return:
      type: System.Object
      description: "<xref:System.Object>변환된 된 텍스트를 나타내는입니다.</xref:System.Object>"
  overload: System.ComponentModel.TypeConverter.ConvertFromInvariantString*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "변환을 수행할 수 없습니다."
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.String)
  id: ConvertFromString(System.String)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: ConvertFromString(String)
  nameWithType: TypeConverter.ConvertFromString(String)
  fullName: System.ComponentModel.TypeConverter.ConvertFromString(String)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "지정된 된 텍스트를 개체로 변환 합니다."
  remarks: "기본 구현에서는 항상 반환 `null`합니다."
  example:
  - For an example of this function, see the <xref:System.ComponentModel.TypeConverter> class.
  syntax:
    content: public object ConvertFromString (string text);
    parameters:
    - id: text
      type: System.String
      description: "변환할 개체의 텍스트 표현입니다."
    return:
      type: System.Object
      description: "<xref:System.Object>변환된 된 텍스트를 나타내는입니다.</xref:System.Object>"
  overload: System.ComponentModel.TypeConverter.ConvertFromString*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "문자열을 적절 한 개체로 변환할 수 없습니다."
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)
  id: ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: ConvertFromString(ITypeDescriptorContext,String)
  nameWithType: TypeConverter.ConvertFromString(ITypeDescriptorContext,String)
  fullName: System.ComponentModel.TypeConverter.ConvertFromString(ITypeDescriptorContext,String)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "지정된 된 컨텍스트를 사용 하 여 개체에 지정된 된 텍스트를 변환 합니다."
  remarks: "문자열을 적절 한 개체로 변환할 수 없는 경우 예외가 발생 합니다. 기본 구현에서는 항상 반환 `null`합니다.       사용 하 여 `context` 매개 변수를이 변환기가 호출 되는 환경에 대 한 추가 정보를 추출 합니다. 이 매개 변수 수 `null`, 항상 확인 합니다. 또한 컨텍스트 개체의 속성을 반환할 수 `null`합니다."
  syntax:
    content: public object ConvertFromString (System.ComponentModel.ITypeDescriptorContext context, string text);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> 형식 컨텍스트를 제공 하는 합니다."
    - id: text
      type: System.String
      description: "<xref:System.String>변환할.</xref:System.String>"
    return:
      type: System.Object
      description: "<xref:System.Object>변환된 된 텍스트를 나타내는입니다.</xref:System.Object>"
  overload: System.ComponentModel.TypeConverter.ConvertFromString*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "변환을 수행할 수 없습니다."
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)
  id: ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: ConvertFromString(ITypeDescriptorContext,CultureInfo,String)
  nameWithType: TypeConverter.ConvertFromString(ITypeDescriptorContext,CultureInfo,String)
  fullName: System.ComponentModel.TypeConverter.ConvertFromString(ITypeDescriptorContext,CultureInfo,String)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "지정 된 컨텍스트 및 문화권 정보를 사용 하 여 개체에 지정된 된 텍스트를 변환 합니다."
  remarks: "문자열을 적절 한 개체로 변환할 수 없는 경우 예외가 발생 합니다. 기본 구현에서는 항상 반환 `null`합니다.       사용 하 여 `context` 매개 변수를이 변환기가 호출 되는 환경에 대 한 추가 정보를 추출 합니다. 이 매개 변수 수 `null`, 항상 확인 합니다. 또한 컨텍스트 개체의 속성을 반환할 수 `null`합니다."
  syntax:
    content: public object ConvertFromString (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, string text);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> 형식 컨텍스트를 제공 하는 합니다."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "A <xref:System.Globalization.CultureInfo>.</xref:System.Globalization.CultureInfo> 경우 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 이 전달 되 면 현재 문화권이 사용 됩니다."
    - id: text
      type: System.String
      description: "<xref:System.String>변환할.</xref:System.String>"
    return:
      type: System.Object
      description: "<xref:System.Object>변환된 된 텍스트를 나타내는입니다.</xref:System.Object>"
  overload: System.ComponentModel.TypeConverter.ConvertFromString*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "변환을 수행할 수 없습니다."
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)
  id: ConvertTo(System.Object,System.Type)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: ConvertTo(Object,Type)
  nameWithType: TypeConverter.ConvertTo(Object,Type)
  fullName: System.ComponentModel.TypeConverter.ConvertTo(Object,Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "인수를 사용 하 여 지정 된 형식으로 지정된 된 값 개체를 변환 합니다."
  remarks: "가장 일반적인 형식 간에 변환 하는 문자열 개체입니다. 이 구현에서는 호출 <xref:System.Object.ToString%2A>개체에는 개체가 올바른지 및 대상 형식 문자열인 경우.</xref:System.Object.ToString%2A>"
  syntax:
    content: public object ConvertTo (object value, Type destinationType);
    parameters:
    - id: value
      type: System.Object
      description: "<xref:System.Object>변환할.</xref:System.Object>"
    - id: destinationType
      type: System.Type
      description: "<xref:System.Type>변환 하는 `value` 매개 변수를.</xref:System.Type>"
    return:
      type: System.Object
      description: "<xref:System.Object>변환 된 값을 나타내는입니다.</xref:System.Object>"
  overload: System.ComponentModel.TypeConverter.ConvertTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>destinationType</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "변환을 수행할 수 없습니다."
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  id: ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: TypeConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.ComponentModel.TypeConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "지정 된 컨텍스트 및 문화권 정보를 사용 하 여 지정 된 형식으로 지정된 된 값 개체를 변환 합니다."
  remarks: "String 개체에서 가장 일반적인 형식 변환 하는입니다. 이 구현에서는 호출 <xref:System.Object.ToString%2A>개체에는 개체가 올바른지 및 대상 형식 문자열인 경우.</xref:System.Object.ToString%2A>       사용 하 여 `context` 매개 변수를이 변환기가 호출 되는 환경에 대 한 추가 정보를 추출 합니다. 이 매개 변수 수 `null`, 항상 확인 합니다. 또한 컨텍스트 개체의 속성을 반환할 수 `null`합니다.       사용자 지정 형식 작성자는 일반적으로 XAML에 대 한 형식 변환 동작을 지원 하기 위해 구현는 <xref:System.ComponentModel.TypeConverter>지 원하는 클래스 <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A>문자열에서 동작 합니다.</xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> </xref:System.ComponentModel.TypeConverter> 이러한 형식 변환기를 XAML로 직렬화를 지원 하기 위해 ConvertTo 구현할 수도 있습니다.       일부 XAML serialization 시나리오와 적절 하 게 해결할 수 없으면 <xref:System.ComponentModel.TypeConverter>단독.</xref:System.ComponentModel.TypeConverter> 이러한 경우에도 정의 해야 할 수 있습니다는 <xref:System.Windows.Markup.ValueSerializer>ConvertTo에 의해 처리 될 수 있는 직렬화 사례를 처리 하는.</xref:System.Windows.Markup.ValueSerializer> 자세한 내용은 <xref:System.Windows.Markup.ValueSerializer>.</xref:System.Windows.Markup.ValueSerializer> 을 참조 하십시오."
  syntax:
    content: public virtual object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> 형식 컨텍스트를 제공 하는 합니다."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "A <xref:System.Globalization.CultureInfo>.</xref:System.Globalization.CultureInfo> 경우 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 이 전달 되 면 현재 문화권이 사용 됩니다."
    - id: value
      type: System.Object
      description: "<xref:System.Object>변환할.</xref:System.Object>"
    - id: destinationType
      type: System.Type
      description: "<xref:System.Type>변환 하는 `value` 매개 변수를.</xref:System.Type>"
    return:
      type: System.Object
      description: "<xref:System.Object>변환 된 값을 나타내는입니다.</xref:System.Object>"
  overload: System.ComponentModel.TypeConverter.ConvertTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>destinationType</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "변환을 수행할 수 없습니다."
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)
  id: ConvertToInvariantString(System.Object)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: ConvertToInvariantString(Object)
  nameWithType: TypeConverter.ConvertToInvariantString(Object)
  fullName: System.ComponentModel.TypeConverter.ConvertToInvariantString(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "지정된 된 값을 고정 문화권의 문자열 표현으로 변환 합니다."
  remarks: "`context` 매개 변수를 사용 하 여이 변환기가 호출 되는 환경에 대 한 추가 정보를 추출할 수 수 있습니다. 이 수 `null`, 있으므로 항상 확인 합니다. 또한 컨텍스트 개체의 속성을 반환할 수 `null`합니다.       값 포맷터의 구현에 따라 개체의 인스턴스를 다시 만들려고 값 포맷터에 다시 반환 된 문자열을 전달할 수 있습니다."
  syntax:
    content: public string ConvertToInvariantString (object value);
    parameters:
    - id: value
      type: System.Object
      description: "<xref:System.Object>변환할.</xref:System.Object>"
    return:
      type: System.String
      description: "A <xref:System.String>변환 된 값을 나타내는입니다.</xref:System.String>"
  overload: System.ComponentModel.TypeConverter.ConvertToInvariantString*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "변환을 수행할 수 없습니다."
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  id: ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: ConvertToInvariantString(ITypeDescriptorContext,Object)
  nameWithType: TypeConverter.ConvertToInvariantString(ITypeDescriptorContext,Object)
  fullName: System.ComponentModel.TypeConverter.ConvertToInvariantString(ITypeDescriptorContext,Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "지정된 된 값을 지정된 된 컨텍스트를 사용 하 여 고정 문화권의 문자열 표현으로 변환 합니다."
  remarks: "사용 하 여 `context` 매개 변수를이 변환기가 호출 되는 환경에 대 한 추가 정보를 추출 합니다. 이 매개 변수 수 `null`, 항상 확인 합니다. 또한 컨텍스트 개체의 속성을 반환할 수 `null`합니다.       값 포맷터의 구현에 따라 개체의 인스턴스를 다시 만들려고 값 포맷터에 다시 반환 된 문자열을 전달할 수 있습니다."
  syntax:
    content: public string ConvertToInvariantString (System.ComponentModel.ITypeDescriptorContext context, object value);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> 형식 컨텍스트를 제공 하는 합니다."
    - id: value
      type: System.Object
      description: "<xref:System.Object>변환할.</xref:System.Object>"
    return:
      type: System.String
      description: "A <xref:System.String>변환 된 값을 나타내는입니다.</xref:System.String>"
  overload: System.ComponentModel.TypeConverter.ConvertToInvariantString*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "변환을 수행할 수 없습니다."
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.ConvertToString(System.Object)
  id: ConvertToString(System.Object)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: ConvertToString(Object)
  nameWithType: TypeConverter.ConvertToString(Object)
  fullName: System.ComponentModel.TypeConverter.ConvertToString(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "지정된 된 값을 문자열 표현으로 변환 합니다."
  remarks: "값 포맷터의 구현에 따라 개체의 인스턴스를 다시 만들려고 값 포맷터에 다시 반환 된 문자열을 전달할 수 있습니다."
  example:
  - For an example on this function, see the <xref:System.ComponentModel.TypeConverter> class.
  syntax:
    content: public string ConvertToString (object value);
    parameters:
    - id: value
      type: System.Object
      description: "<xref:System.Object>변환할.</xref:System.Object>"
    return:
      type: System.String
      description: "<xref:System.Object>변환 된 값을 나타내는입니다.</xref:System.Object>"
  overload: System.ComponentModel.TypeConverter.ConvertToString*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "변환을 수행할 수 없습니다."
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  id: ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: ConvertToString(ITypeDescriptorContext,Object)
  nameWithType: TypeConverter.ConvertToString(ITypeDescriptorContext,Object)
  fullName: System.ComponentModel.TypeConverter.ConvertToString(ITypeDescriptorContext,Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "지정된 된 값을 지정 된 컨텍스트를 사용 하는 문자열 표현으로 변환 합니다."
  remarks: "사용 하 여 `context` 매개 변수를이 변환기가 호출 되는 환경에 대 한 추가 정보를 추출 합니다. 이 매개 변수 수 `null`, 항상 확인 합니다. 또한 컨텍스트 개체의 속성을 반환할 수 `null`합니다.       값 포맷터의 구현에 따라 개체의 인스턴스를 다시 만들려고 값 포맷터에 다시 반환 된 문자열을 전달할 수 있습니다."
  syntax:
    content: public string ConvertToString (System.ComponentModel.ITypeDescriptorContext context, object value);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> 형식 컨텍스트를 제공 하는 합니다."
    - id: value
      type: System.Object
      description: "<xref:System.Object>변환할.</xref:System.Object>"
    return:
      type: System.String
      description: "<xref:System.Object>변환 된 값을 나타내는입니다.</xref:System.Object>"
  overload: System.ComponentModel.TypeConverter.ConvertToString*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "변환을 수행할 수 없습니다."
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  id: ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: ConvertToString(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: TypeConverter.ConvertToString(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.ComponentModel.TypeConverter.ConvertToString(ITypeDescriptorContext,CultureInfo,Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "지정된 된 값을 지정 된 컨텍스트 및 문화권 정보를 사용 하는 문자열 표현으로 변환 합니다."
  remarks: "사용 하 여 `context` 매개 변수를이 변환기가 호출 되는 환경에 대 한 추가 정보를 추출 합니다. 이 매개 변수 수 `null`, 항상 확인 합니다. 또한 컨텍스트 개체의 속성을 반환할 수 `null`합니다.       값 포맷터의 구현에 따라 개체의 인스턴스를 다시 만들려고 값 포맷터에 다시 반환 된 문자열을 전달할 수 있습니다."
  syntax:
    content: public string ConvertToString (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> 형식 컨텍스트를 제공 하는 합니다."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "A <xref:System.Globalization.CultureInfo>.</xref:System.Globalization.CultureInfo> 경우 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 이 전달 되 면 현재 문화권이 사용 됩니다."
    - id: value
      type: System.Object
      description: "<xref:System.Object>변환할.</xref:System.Object>"
    return:
      type: System.String
      description: "<xref:System.Object>변환 된 값을 나타내는입니다.</xref:System.Object>"
  overload: System.ComponentModel.TypeConverter.ConvertToString*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "변환을 수행할 수 없습니다."
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)
  id: CreateInstance(System.Collections.IDictionary)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: CreateInstance(IDictionary)
  nameWithType: TypeConverter.CreateInstance(IDictionary)
  fullName: System.ComponentModel.TypeConverter.CreateInstance(IDictionary)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "다시 생성 한 <xref:System.Object>개체에 대 한 속성 값 집합을 제공 합니다.</xref:System.Object>"
  remarks: "이 메서드를 사용 하 여 변경할 수 없는 있지만 변경할 수 있는 속성을 제공 하려는 개체에 대 한 합니다.       제공 하는 사전은 `propertyValues` <xref:System.ComponentModel.TypeConverter.GetProperties%2A>.</xref:System.ComponentModel.TypeConverter.GetProperties%2A> 에서 반환 된 각 속성에 대 한 매개 변수는 이름/값 쌍"
  syntax:
    content: public object CreateInstance (System.Collections.IDictionary propertyValues);
    parameters:
    - id: propertyValues
      type: System.Collections.IDictionary
      description: "<xref:System.Collections.IDictionary>새 속성 값의 사전을 나타내는.</xref:System.Collections.IDictionary>"
    return:
      type: System.Object
      description: "<xref:System.Object>나타내는 주어진 <xref:System.Collections.IDictionary>, 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 개체를 만들 수 없는 경우.</xref:System.Collections.IDictionary> </xref:System.Object> 이 메서드는 항상 반환 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.ComponentModel.TypeConverter.CreateInstance*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  id: CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: CreateInstance(ITypeDescriptorContext,IDictionary)
  nameWithType: TypeConverter.CreateInstance(ITypeDescriptorContext,IDictionary)
  fullName: System.ComponentModel.TypeConverter.CreateInstance(ITypeDescriptorContext,IDictionary)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "형식의 인스턴스를 만들고이 <xref href=&quot;System.ComponentModel.TypeConverter&quot;> </xref> 가 연결 된 지정된 된 컨텍스트를 사용 하 여 개체에 대 한 속성 값 집합을 제공 합니다."
  remarks: "이 메서드를 사용 하 여 변경할 수 없는 있지만 변경할 수 있는 속성을 제공 하려는 개체에 대 한 합니다."
  syntax:
    content: public virtual object CreateInstance (System.ComponentModel.ITypeDescriptorContext context, System.Collections.IDictionary propertyValues);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> 형식 컨텍스트를 제공 하는 합니다."
    - id: propertyValues
      type: System.Collections.IDictionary
      description: "<xref:System.Collections.IDictionary>새 속성 값의.</xref:System.Collections.IDictionary>"
    return:
      type: System.Object
      description: "<xref:System.Object>나타내는 주어진 <xref:System.Collections.IDictionary>, 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 개체를 만들 수 없는 경우.</xref:System.Collections.IDictionary> </xref:System.Object> 이 메서드는 항상 반환 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.ComponentModel.TypeConverter.CreateInstance*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)
  id: GetConvertFromException(System.Object)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: GetConvertFromException(Object)
  nameWithType: TypeConverter.GetConvertFromException(Object)
  fullName: System.ComponentModel.TypeConverter.GetConvertFromException(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "변환을 수행할 수 없을 때 발생 하는 예외를 반환 합니다."
  syntax:
    content: protected Exception GetConvertFromException (object value);
    parameters:
    - id: value
      type: System.Object
      description: "<xref:System.Object>변환할 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 개체를 사용할 수 없는 경우.</xref:System.Object>"
    return:
      type: System.Exception
      description: "<xref:System.Exception>변환을 수행할 수 없을 때 발생 하는 예외를 나타내는입니다.</xref:System.Exception>"
  overload: System.ComponentModel.TypeConverter.GetConvertFromException*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "자동으로이 메서드에 의해 throw 됩니다."
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)
  id: GetConvertToException(System.Object,System.Type)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: GetConvertToException(Object,Type)
  nameWithType: TypeConverter.GetConvertToException(Object,Type)
  fullName: System.ComponentModel.TypeConverter.GetConvertToException(Object,Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "변환을 수행할 수 없을 때 발생 하는 예외를 반환 합니다."
  syntax:
    content: protected Exception GetConvertToException (object value, Type destinationType);
    parameters:
    - id: value
      type: System.Object
      description: "<xref:System.Object>변환할 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 개체를 사용할 수 없는 경우.</xref:System.Object>"
    - id: destinationType
      type: System.Type
      description: "A <xref:System.Type>변환으로 변환 하려고 했던 형식을 나타내는.</xref:System.Type>"
    return:
      type: System.Exception
      description: "<xref:System.Exception>변환을 수행할 수 없을 때 발생 하는 예외를 나타내는입니다.</xref:System.Exception>"
  overload: System.ComponentModel.TypeConverter.GetConvertToException*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "자동으로이 메서드에 의해 throw 됩니다."
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.GetCreateInstanceSupported
  id: GetCreateInstanceSupported
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: GetCreateInstanceSupported()
  nameWithType: TypeConverter.GetCreateInstanceSupported()
  fullName: System.ComponentModel.TypeConverter.GetCreateInstanceSupported()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "이 개체의 값 변경에 대 한 호출 해야 하는지 여부를 반환 합니다.는 <xref:System.ComponentModel.TypeConverter.CreateInstance*>메서드는 새 값을 생성 합니다.</xref:System.ComponentModel.TypeConverter.CreateInstance*>"
  syntax:
    content: public bool GetCreateInstanceSupported ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우에 호출 해야이 개체에서 속성을 변경 <xref:System.ComponentModel.TypeConverter.CreateInstance*>를 통해 새 값을 만드는 그렇지 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.ComponentModel.TypeConverter.CreateInstance*>"
  overload: System.ComponentModel.TypeConverter.GetCreateInstanceSupported*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  id: GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: GetCreateInstanceSupported(ITypeDescriptorContext)
  nameWithType: TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext)
  fullName: System.ComponentModel.TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "이 개체의 값 변경에 대 한 호출 해야 하는지 여부를 반환 합니다. <xref:System.ComponentModel.TypeConverter.CreateInstance*>지정된 된 컨텍스트를 사용 하 여 새 값을 만듭니다.</xref:System.ComponentModel.TypeConverter.CreateInstance*>"
  remarks: "이 메서드는 항상 반환이 클래스에서 구현 된 대로 `false`합니다."
  syntax:
    content: public virtual bool GetCreateInstanceSupported (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> 형식 컨텍스트를 제공 하는 합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우에 호출 해야이 개체에서 속성을 변경 <xref:System.ComponentModel.TypeConverter.CreateInstance*>를 통해 새 값을 만드는 그렇지 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.ComponentModel.TypeConverter.CreateInstance*>"
  overload: System.ComponentModel.TypeConverter.GetCreateInstanceSupported*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.GetProperties(System.Object)
  id: GetProperties(System.Object)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: GetProperties(Object)
  nameWithType: TypeConverter.GetProperties(Object)
  fullName: System.ComponentModel.TypeConverter.GetProperties(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "값 매개 변수로 지정 된 배열 형식에 대 한 속성의 컬렉션을 반환 합니다."
  remarks: "이 메서드는 항상 반환이 클래스에서 구현 된 대로 `null`합니다.       기본적으로 형식 속성을 반환 하지 않습니다. 이 메서드의 쉽게 구현을 호출할 수 <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A>올바른 데이터 형식에 대 한.</xref:System.ComponentModel.TypeDescriptor.GetProperties%2A>"
  syntax:
    content: public System.ComponentModel.PropertyDescriptorCollection GetProperties (object value);
    parameters:
    - id: value
      type: System.Object
      description: "<xref:System.Object>속성을 가져올 배열 형식을 지정 하는.</xref:System.Object>"
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "A <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref> 이 데이터 형식에 노출 되는 속성을 가진 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 속성이 없는 경우."
  overload: System.ComponentModel.TypeConverter.GetProperties*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)
  id: GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: GetProperties(ITypeDescriptorContext,Object)
  nameWithType: TypeConverter.GetProperties(ITypeDescriptorContext,Object)
  fullName: System.ComponentModel.TypeConverter.GetProperties(ITypeDescriptorContext,Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "지정된 된 컨텍스트를 사용 하 여 값 매개 변수로 지정 된 배열 형식에 대 한 속성의 컬렉션을 반환 합니다."
  remarks: "사용 하 여 `context` 매개 변수를이 변환기가 호출 되는 환경에 대 한 추가 정보를 추출 합니다. 이 매개 변수 수 `null`, 항상 확인 합니다. 또한 컨텍스트 개체의 속성을 반환할 수 `null`합니다.       이 메서드는 항상 반환이 클래스에서 구현 된 대로 `null`합니다.       기본적으로 형식 속성을 반환 하지 않습니다. 이 메서드의 쉽게 구현을 호출할 수 <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A>올바른 데이터 형식에 대 한.</xref:System.ComponentModel.TypeDescriptor.GetProperties%2A>"
  syntax:
    content: public System.ComponentModel.PropertyDescriptorCollection GetProperties (System.ComponentModel.ITypeDescriptorContext context, object value);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> 형식 컨텍스트를 제공 하는 합니다."
    - id: value
      type: System.Object
      description: "<xref:System.Object>속성을 가져올 배열 형식을 지정 하는.</xref:System.Object>"
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "A <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref> 이 데이터 형식에 노출 되는 속성을 가진 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 속성이 없는 경우."
  overload: System.ComponentModel.TypeConverter.GetProperties*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  id: GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: GetProperties(ITypeDescriptorContext,Object,Attribute[])
  nameWithType: TypeConverter.GetProperties(ITypeDescriptorContext,Object,Attribute[])
  fullName: System.ComponentModel.TypeConverter.GetProperties(ITypeDescriptorContext,Object,Attribute[])
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "지정 된 컨텍스트 및 특성을 사용 하 여 값 매개 변수로 지정 된 배열 형식에 대 한 속성의 컬렉션을 반환 합니다."
  remarks: "이 메서드는 항상 반환이 클래스에서 구현 된 대로 `null`합니다."
  syntax:
    content: public virtual System.ComponentModel.PropertyDescriptorCollection GetProperties (System.ComponentModel.ITypeDescriptorContext context, object value, Attribute[] attributes);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> 형식 컨텍스트를 제공 하는 합니다."
    - id: value
      type: System.Object
      description: "<xref:System.Object>속성을 가져올 배열 형식을 지정 하는.</xref:System.Object>"
    - id: attributes
      type: System.Attribute[]
      description: "형식의 배열 <xref:System.Attribute>필터로 사용 되는.</xref:System.Attribute>"
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "A <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref> 이 데이터 형식에 노출 되는 속성을 가진 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 속성이 없는 경우."
  overload: System.ComponentModel.TypeConverter.GetProperties*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.GetPropertiesSupported
  id: GetPropertiesSupported
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: GetPropertiesSupported()
  nameWithType: TypeConverter.GetPropertiesSupported()
  fullName: System.ComponentModel.TypeConverter.GetPropertiesSupported()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "이 개체 속성을 지원 하는지 여부를 반환 합니다."
  remarks: "이 메서드는 항상 반환이 클래스에서 구현 된 대로 `false`합니다."
  syntax:
    content: public bool GetPropertiesSupported ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우 <xref:System.ComponentModel.TypeConverter.GetProperties*>고, 그렇지 않으면이 개체의 속성을 찾기 위해 호출 해야 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.ComponentModel.TypeConverter.GetProperties*>"
  overload: System.ComponentModel.TypeConverter.GetPropertiesSupported*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  id: GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: GetPropertiesSupported(ITypeDescriptorContext)
  nameWithType: TypeConverter.GetPropertiesSupported(ITypeDescriptorContext)
  fullName: System.ComponentModel.TypeConverter.GetPropertiesSupported(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "이 개체가 지정된 된 컨텍스트를 사용 하 여 속성을 지원 하는지 여부를 반환 합니다."
  remarks: "이 메서드는 항상 반환이 클래스에서 구현 된 대로 `false`합니다."
  syntax:
    content: public virtual bool GetPropertiesSupported (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> 형식 컨텍스트를 제공 하는 합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우 <xref:System.ComponentModel.TypeConverter.GetProperties*>고, 그렇지 않으면이 개체의 속성을 찾기 위해 호출 해야 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.ComponentModel.TypeConverter.GetProperties*>"
  overload: System.ComponentModel.TypeConverter.GetPropertiesSupported*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.GetStandardValues
  id: GetStandardValues
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: GetStandardValues()
  nameWithType: TypeConverter.GetStandardValues()
  fullName: System.ComponentModel.TypeConverter.GetStandardValues()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "이 형식 변환기 용인지 데이터 형식에 대 한 기본 컨텍스트에서 표준 값 컬렉션을 반환 합니다."
  remarks: "이 메서드는 항상 반환이 클래스에서 구현 된 대로 `null`합니다."
  syntax:
    content: public System.Collections.ICollection GetStandardValues ();
    parameters: []
    return:
      type: System.Collections.ICollection
      description: "A <xref:System.ComponentModel.TypeConverter.StandardValuesCollection>표준 유효한 값이 포함 된 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 데이터 형식이 표준 값 집합을 지원 하지 않습니다.</xref:System.ComponentModel.TypeConverter.StandardValuesCollection>"
  overload: System.ComponentModel.TypeConverter.GetStandardValues*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  id: GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: GetStandardValues(ITypeDescriptorContext)
  nameWithType: TypeConverter.GetStandardValues(ITypeDescriptorContext)
  fullName: System.ComponentModel.TypeConverter.GetStandardValues(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "형식 컨텍스트와 함께 제공 되는 경우이 형식 변환기에 대 한 설계 된 데이터 형식에 대 한 표준 값의 컬렉션을 반환 합니다."
  remarks: "구현 될 때 <xref:System.ComponentModel.TypeConverter>,이 메서드는 항상 반환 `null`.</xref:System.ComponentModel.TypeConverter>"
  example:
  - For an example on this function, see the <xref:System.ComponentModel.TypeConverter> class.
  syntax:
    content: public virtual System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> 하는이 변환기가 호출 되는 환경에 대 한 추가 정보를 추출 하는 데 사용할 수 있는 형식 컨텍스트를 제공 합니다. 이 매개 변수 또는이 매개 변수는 속성 수 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
    return:
      type: System.ComponentModel.TypeConverter.StandardValuesCollection
      description: "A <xref:System.ComponentModel.TypeConverter.StandardValuesCollection>유효한 값의 표준 집합을 포함 하는 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 데이터 형식이 표준 값 집합을 지원 하지 않습니다.</xref:System.ComponentModel.TypeConverter.StandardValuesCollection>"
  overload: System.ComponentModel.TypeConverter.GetStandardValues*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.GetStandardValuesExclusive
  id: GetStandardValuesExclusive
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: GetStandardValuesExclusive()
  nameWithType: TypeConverter.GetStandardValuesExclusive()
  fullName: System.ComponentModel.TypeConverter.GetStandardValuesExclusive()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "표준 값 컬렉션 반환 되는지 반환 <xref:System.ComponentModel.TypeConverter.GetStandardValues*>단독 목록 인지.</xref:System.ComponentModel.TypeConverter.GetStandardValues*>"
  remarks: "이 메서드는 항상 반환이 클래스에서 구현 된 대로 `false`합니다.       열거형 데이터 형식에서와 같은 단독 목록인 경우 다른 값은 유효한 합니다. 표준 값 목록 단독 아닌 경우, 다른 유효한 값 목록 외에 있을 수 있습니다는 <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A>메서드를 제공 합니다.</xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> 목록에서 반환 값이 배타적, <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A>이러한 값을 편집할 수 없도록 해야 합니다.</xref:System.ComponentModel.TypeConverter.GetStandardValues%2A>"
  syntax:
    content: public bool GetStandardValuesExclusive ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref><xref:System.ComponentModel.TypeConverter.StandardValuesCollection> <xref:System.ComponentModel.TypeConverter.GetStandardValues*>에서 반환 되는 단독 목록이 가능한 값이 있습니다. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 다른 값은 가능한 경우.</xref:System.ComponentModel.TypeConverter.GetStandardValues*> </xref:System.ComponentModel.TypeConverter.StandardValuesCollection>"
  overload: System.ComponentModel.TypeConverter.GetStandardValuesExclusive*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  id: GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: GetStandardValuesExclusive(ITypeDescriptorContext)
  nameWithType: TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
  fullName: System.ComponentModel.TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "표준 값 컬렉션 반환 되는지 반환 <xref:System.ComponentModel.TypeConverter.GetStandardValues*>의 가능한 값을 지정된 된 컨텍스트를 사용 하 여 단독 목록 인지.</xref:System.ComponentModel.TypeConverter.GetStandardValues*>"
  remarks: "이 메서드는 항상 반환이 클래스에서 구현 된 대로 `false`합니다.       열거형 데이터 형식에서와 같은 단독 목록인 경우 다른 값은 유효한 합니다. 표준 값 목록 단독 아닌 경우, 다른 유효한 값 목록 외에 있을 수 있습니다는 <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A>메서드를 제공 합니다.</xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> 목록에서 반환 값이 배타적, <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A>이러한 값을 편집할 수 없도록 해야 합니다.</xref:System.ComponentModel.TypeConverter.GetStandardValues%2A>"
  syntax:
    content: public virtual bool GetStandardValuesExclusive (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> 형식 컨텍스트를 제공 하는 합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref><xref:System.ComponentModel.TypeConverter.StandardValuesCollection> <xref:System.ComponentModel.TypeConverter.GetStandardValues*>에서 반환 되는 단독 목록이 가능한 값이 있습니다. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 다른 값은 가능한 경우.</xref:System.ComponentModel.TypeConverter.GetStandardValues*> </xref:System.ComponentModel.TypeConverter.StandardValuesCollection>"
  overload: System.ComponentModel.TypeConverter.GetStandardValuesExclusive*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.GetStandardValuesSupported
  id: GetStandardValuesSupported
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: GetStandardValuesSupported()
  nameWithType: TypeConverter.GetStandardValuesSupported()
  fullName: System.ComponentModel.TypeConverter.GetStandardValuesSupported()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "이 개체가 목록에서 선택할 수 있는 값의 표준 집합을 지원 하는지 여부를 반환 합니다."
  syntax:
    content: public bool GetStandardValuesSupported ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우 <xref:System.ComponentModel.TypeConverter.GetStandardValues*>개체가 지 원하는 값의 공통 집합을 찾기 위해 호출 건너뛸 필요가 없으면, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.ComponentModel.TypeConverter.GetStandardValues*>"
  overload: System.ComponentModel.TypeConverter.GetStandardValuesSupported*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  id: GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: GetStandardValuesSupported(ITypeDescriptorContext)
  nameWithType: TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext)
  fullName: System.ComponentModel.TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "이 개체가 지정된 된 컨텍스트를 사용 하 여 목록에서 선택할 수 있는 값의 표준 집합을 지원 하는지 여부를 반환 합니다."
  remarks: "이 메서드는 항상 반환이 클래스에서 구현 된 대로 `false`합니다.       사용 하 여 `context` 매개 변수를이 변환기가 호출 되는 환경에 대 한 추가 정보를 추출 합니다. 이 매개 변수 수 `null`, 항상 확인 합니다. 또한 컨텍스트 개체의 속성을 반환할 수 `null`합니다."
  syntax:
    content: public virtual bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> 형식 컨텍스트를 제공 하는 합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우 <xref:System.ComponentModel.TypeConverter.GetStandardValues*>개체가 지 원하는 값의 공통 집합을 찾기 위해 호출 건너뛸 필요가 없으면, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.ComponentModel.TypeConverter.GetStandardValues*>"
  overload: System.ComponentModel.TypeConverter.GetStandardValuesSupported*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.IsValid(System.Object)
  id: IsValid(System.Object)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: IsValid(Object)
  nameWithType: TypeConverter.IsValid(Object)
  fullName: System.ComponentModel.TypeConverter.IsValid(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "지정된 된 값 개체가이 형식에 대해 올바른지 여부를 반환 합니다."
  remarks: "부터는 [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)], <xref:System.ComponentModel.TypeConverter.IsValid%2A>메서드 예외를 catch는 <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A>및 <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A>메서드.</xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> </xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> </xref:System.ComponentModel.TypeConverter.IsValid%2A> 입력된 값 형식 발생 하는 경우 <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A>반환할 `false`, 입력된 값에 따른 경우 또는 <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A>에서 예외가 발생 하는 <xref:System.ComponentModel.TypeConverter.IsValid%2A>메서드 반환 `false`.</xref:System.ComponentModel.TypeConverter.IsValid%2A> </xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> </xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A>       레거시 동작을 사용 하려면 예를 들어 application1.exe.config 응용 프로그램의 구성 파일에 다음 줄을 삽입 합니다.      ```xml   <configuration>     <appSettings>       <add key=&quot;UseCompatibleTypeConverterBehavior&quot; value=&quot;true&quot; />     </appSettings>   </configuration>   ```"
  syntax:
    content: public bool IsValid (object value);
    parameters:
    - id: value
      type: System.Object
      description: "유효성을 테스트할 개체입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>지정된 된 값이이 개체에 대 한 유효한 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.ComponentModel.TypeConverter.IsValid*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  id: IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: IsValid(ITypeDescriptorContext,Object)
  nameWithType: TypeConverter.IsValid(ITypeDescriptorContext,Object)
  fullName: System.ComponentModel.TypeConverter.IsValid(ITypeDescriptorContext,Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "지정된 된 값 개체가 지정된 된 컨텍스트 및이 형식에 대해 유효한 지 여부를 반환 합니다."
  remarks: "사용 하 여 `context` 매개 변수를이 변환기가 호출 되는 환경에 대 한 추가 정보를 추출 합니다. 이 매개 변수 수 `null`, 항상 확인 합니다. 또한 컨텍스트 개체의 속성을 반환할 수 `null`합니다.       부터는 [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)], IsValid 메서드 예외를 catch는 <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A>및 <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A>메서드.</xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> </xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> 입력된 값 형식 발생 하는 경우 <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A>반환할 `false`, 입력된 값에 따른 경우 또는 <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A>IsValid 메서드는 예외를 발생 시키기 위해 반환 `false`.</xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> </xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A>       레거시 동작을 사용 하려면 예를 들어 application1.exe.config 응용 프로그램의 구성 파일에 다음 줄을 삽입 합니다.      ```xml   <configuration>     <appSettings>       <add key=&quot;UseCompatibleTypeConverterBehavior&quot; value=&quot;true&quot; />     </appSettings>   </configuration>   ```"
  example:
  - For an example of this function, see the <xref:System.ComponentModel.TypeConverter> class.
  syntax:
    content: public virtual bool IsValid (System.ComponentModel.ITypeDescriptorContext context, object value);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> 형식 컨텍스트를 제공 하는 합니다."
    - id: value
      type: System.Object
      description: "<xref:System.Object>유효성을 테스트할.</xref:System.Object>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>지정된 된 값이이 개체에 대 한 유효한 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.ComponentModel.TypeConverter.IsValid*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])
  id: SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: SortProperties(PropertyDescriptorCollection,String[])
  nameWithType: TypeConverter.SortProperties(PropertyDescriptorCollection,String[])
  fullName: System.ComponentModel.TypeConverter.SortProperties(PropertyDescriptorCollection,String[])
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "속성의 컬렉션을 정렬합니다."
  remarks: "아직 이름의 배열이 되지 않은 컬렉션의 모든 속성은 사전순으로 끝에 추가 됩니다. 경우는 `names` 매개 변수는 빈 배열 또는 `null`, 컬렉션의 모든 속성은 사전순으로 정렬 됩니다."
  syntax:
    content: protected System.ComponentModel.PropertyDescriptorCollection SortProperties (System.ComponentModel.PropertyDescriptorCollection props, string[] names);
    parameters:
    - id: props
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "A <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref> 정렬 속성이 있습니다."
    - id: names
      type: System.String[]
      description: "속성 컬렉션을 원하는 순서로 이름 배열입니다."
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "A <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref> 정렬된 속성이 들어 있는입니다."
  overload: System.ComponentModel.TypeConverter.SortProperties*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ComponentModel.TypeConverter.#ctor
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: TypeConverter()
  nameWithType: TypeConverter.TypeConverter()
  fullName: System.ComponentModel.TypeConverter.TypeConverter()
- uid: System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: CanConvertFrom(Type)
  nameWithType: TypeConverter.CanConvertFrom(Type)
  fullName: System.ComponentModel.TypeConverter.CanConvertFrom(Type)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: TypeConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.ComponentModel.TypeConverter.CanConvertFrom(ITypeDescriptorContext,Type)
- uid: System.ComponentModel.ITypeDescriptorContext
  parent: System.ComponentModel
  isExternal: false
  name: ITypeDescriptorContext
  nameWithType: ITypeDescriptorContext
  fullName: System.ComponentModel.ITypeDescriptorContext
- uid: System.ComponentModel.TypeConverter.CanConvertTo(System.Type)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: CanConvertTo(Type)
  nameWithType: TypeConverter.CanConvertTo(Type)
  fullName: System.ComponentModel.TypeConverter.CanConvertTo(Type)
- uid: System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: CanConvertTo(ITypeDescriptorContext,Type)
  nameWithType: TypeConverter.CanConvertTo(ITypeDescriptorContext,Type)
  fullName: System.ComponentModel.TypeConverter.CanConvertTo(ITypeDescriptorContext,Type)
- uid: System.ComponentModel.TypeConverter.ConvertFrom(System.Object)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: ConvertFrom(Object)
  nameWithType: TypeConverter.ConvertFrom(Object)
  fullName: System.ComponentModel.TypeConverter.ConvertFrom(Object)
- uid: System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: TypeConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.ComponentModel.TypeConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: ConvertFromInvariantString(String)
  nameWithType: TypeConverter.ConvertFromInvariantString(String)
  fullName: System.ComponentModel.TypeConverter.ConvertFromInvariantString(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: ConvertFromInvariantString(ITypeDescriptorContext,String)
  nameWithType: TypeConverter.ConvertFromInvariantString(ITypeDescriptorContext,String)
  fullName: System.ComponentModel.TypeConverter.ConvertFromInvariantString(ITypeDescriptorContext,String)
- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.String)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: ConvertFromString(String)
  nameWithType: TypeConverter.ConvertFromString(String)
  fullName: System.ComponentModel.TypeConverter.ConvertFromString(String)
- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: ConvertFromString(ITypeDescriptorContext,String)
  nameWithType: TypeConverter.ConvertFromString(ITypeDescriptorContext,String)
  fullName: System.ComponentModel.TypeConverter.ConvertFromString(ITypeDescriptorContext,String)
- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: ConvertFromString(ITypeDescriptorContext,CultureInfo,String)
  nameWithType: TypeConverter.ConvertFromString(ITypeDescriptorContext,CultureInfo,String)
  fullName: System.ComponentModel.TypeConverter.ConvertFromString(ITypeDescriptorContext,CultureInfo,String)
- uid: System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: ConvertTo(Object,Type)
  nameWithType: TypeConverter.ConvertTo(Object,Type)
  fullName: System.ComponentModel.TypeConverter.ConvertTo(Object,Type)
- uid: System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: TypeConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.ComponentModel.TypeConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
- uid: System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: ConvertToInvariantString(Object)
  nameWithType: TypeConverter.ConvertToInvariantString(Object)
  fullName: System.ComponentModel.TypeConverter.ConvertToInvariantString(Object)
- uid: System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: ConvertToInvariantString(ITypeDescriptorContext,Object)
  nameWithType: TypeConverter.ConvertToInvariantString(ITypeDescriptorContext,Object)
  fullName: System.ComponentModel.TypeConverter.ConvertToInvariantString(ITypeDescriptorContext,Object)
- uid: System.ComponentModel.TypeConverter.ConvertToString(System.Object)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: ConvertToString(Object)
  nameWithType: TypeConverter.ConvertToString(Object)
  fullName: System.ComponentModel.TypeConverter.ConvertToString(Object)
- uid: System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: ConvertToString(ITypeDescriptorContext,Object)
  nameWithType: TypeConverter.ConvertToString(ITypeDescriptorContext,Object)
  fullName: System.ComponentModel.TypeConverter.ConvertToString(ITypeDescriptorContext,Object)
- uid: System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: ConvertToString(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: TypeConverter.ConvertToString(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.ComponentModel.TypeConverter.ConvertToString(ITypeDescriptorContext,CultureInfo,Object)
- uid: System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: CreateInstance(IDictionary)
  nameWithType: TypeConverter.CreateInstance(IDictionary)
  fullName: System.ComponentModel.TypeConverter.CreateInstance(IDictionary)
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: CreateInstance(ITypeDescriptorContext,IDictionary)
  nameWithType: TypeConverter.CreateInstance(ITypeDescriptorContext,IDictionary)
  fullName: System.ComponentModel.TypeConverter.CreateInstance(ITypeDescriptorContext,IDictionary)
- uid: System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetConvertFromException(Object)
  nameWithType: TypeConverter.GetConvertFromException(Object)
  fullName: System.ComponentModel.TypeConverter.GetConvertFromException(Object)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetConvertToException(Object,Type)
  nameWithType: TypeConverter.GetConvertToException(Object,Type)
  fullName: System.ComponentModel.TypeConverter.GetConvertToException(Object,Type)
- uid: System.ComponentModel.TypeConverter.GetCreateInstanceSupported
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetCreateInstanceSupported()
  nameWithType: TypeConverter.GetCreateInstanceSupported()
  fullName: System.ComponentModel.TypeConverter.GetCreateInstanceSupported()
- uid: System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetCreateInstanceSupported(ITypeDescriptorContext)
  nameWithType: TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext)
  fullName: System.ComponentModel.TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext)
- uid: System.ComponentModel.TypeConverter.GetProperties(System.Object)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetProperties(Object)
  nameWithType: TypeConverter.GetProperties(Object)
  fullName: System.ComponentModel.TypeConverter.GetProperties(Object)
- uid: System.ComponentModel.PropertyDescriptorCollection
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptorCollection
  nameWithType: PropertyDescriptorCollection
  fullName: System.ComponentModel.PropertyDescriptorCollection
- uid: System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetProperties(ITypeDescriptorContext,Object)
  nameWithType: TypeConverter.GetProperties(ITypeDescriptorContext,Object)
  fullName: System.ComponentModel.TypeConverter.GetProperties(ITypeDescriptorContext,Object)
- uid: System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetProperties(ITypeDescriptorContext,Object,Attribute[])
  nameWithType: TypeConverter.GetProperties(ITypeDescriptorContext,Object,Attribute[])
  fullName: System.ComponentModel.TypeConverter.GetProperties(ITypeDescriptorContext,Object,Attribute[])
- uid: System.Attribute[]
  parent: System
  isExternal: true
  name: Attribute
  nameWithType: Attribute
  fullName: System.Attribute[]
  spec.csharp:
  - uid: System.Attribute
    name: Attribute
    nameWithType: Attribute
    fullName: Attribute[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ComponentModel.TypeConverter.GetPropertiesSupported
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetPropertiesSupported()
  nameWithType: TypeConverter.GetPropertiesSupported()
  fullName: System.ComponentModel.TypeConverter.GetPropertiesSupported()
- uid: System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetPropertiesSupported(ITypeDescriptorContext)
  nameWithType: TypeConverter.GetPropertiesSupported(ITypeDescriptorContext)
  fullName: System.ComponentModel.TypeConverter.GetPropertiesSupported(ITypeDescriptorContext)
- uid: System.ComponentModel.TypeConverter.GetStandardValues
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetStandardValues()
  nameWithType: TypeConverter.GetStandardValues()
  fullName: System.ComponentModel.TypeConverter.GetStandardValues()
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetStandardValues(ITypeDescriptorContext)
  nameWithType: TypeConverter.GetStandardValues(ITypeDescriptorContext)
  fullName: System.ComponentModel.TypeConverter.GetStandardValues(ITypeDescriptorContext)
- uid: System.ComponentModel.TypeConverter.StandardValuesCollection
  parent: System.ComponentModel
  isExternal: false
  name: TypeConverter+StandardValuesCollection
  nameWithType: TypeConverter+StandardValuesCollection
  fullName: System.ComponentModel.TypeConverter+StandardValuesCollection
- uid: System.ComponentModel.TypeConverter.GetStandardValuesExclusive
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetStandardValuesExclusive()
  nameWithType: TypeConverter.GetStandardValuesExclusive()
  fullName: System.ComponentModel.TypeConverter.GetStandardValuesExclusive()
- uid: System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetStandardValuesExclusive(ITypeDescriptorContext)
  nameWithType: TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
  fullName: System.ComponentModel.TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
- uid: System.ComponentModel.TypeConverter.GetStandardValuesSupported
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetStandardValuesSupported()
  nameWithType: TypeConverter.GetStandardValuesSupported()
  fullName: System.ComponentModel.TypeConverter.GetStandardValuesSupported()
- uid: System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetStandardValuesSupported(ITypeDescriptorContext)
  nameWithType: TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext)
  fullName: System.ComponentModel.TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext)
- uid: System.ComponentModel.TypeConverter.IsValid(System.Object)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: IsValid(Object)
  nameWithType: TypeConverter.IsValid(Object)
  fullName: System.ComponentModel.TypeConverter.IsValid(Object)
- uid: System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: IsValid(ITypeDescriptorContext,Object)
  nameWithType: TypeConverter.IsValid(ITypeDescriptorContext,Object)
  fullName: System.ComponentModel.TypeConverter.IsValid(ITypeDescriptorContext,Object)
- uid: System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: SortProperties(PropertyDescriptorCollection,String[])
  nameWithType: TypeConverter.SortProperties(PropertyDescriptorCollection,String[])
  fullName: System.ComponentModel.TypeConverter.SortProperties(PropertyDescriptorCollection,String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ComponentModel.TypeConverter.#ctor*
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: TypeConverter
  nameWithType: TypeConverter.TypeConverter
- uid: System.ComponentModel.TypeConverter.CanConvertFrom*
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: CanConvertFrom
  nameWithType: TypeConverter.CanConvertFrom
- uid: System.ComponentModel.TypeConverter.CanConvertTo*
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: CanConvertTo
  nameWithType: TypeConverter.CanConvertTo
- uid: System.ComponentModel.TypeConverter.ConvertFrom*
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: ConvertFrom
  nameWithType: TypeConverter.ConvertFrom
- uid: System.ComponentModel.TypeConverter.ConvertFromInvariantString*
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: ConvertFromInvariantString
  nameWithType: TypeConverter.ConvertFromInvariantString
- uid: System.ComponentModel.TypeConverter.ConvertFromString*
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: ConvertFromString
  nameWithType: TypeConverter.ConvertFromString
- uid: System.ComponentModel.TypeConverter.ConvertTo*
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: ConvertTo
  nameWithType: TypeConverter.ConvertTo
- uid: System.ComponentModel.TypeConverter.ConvertToInvariantString*
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: ConvertToInvariantString
  nameWithType: TypeConverter.ConvertToInvariantString
- uid: System.ComponentModel.TypeConverter.ConvertToString*
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: ConvertToString
  nameWithType: TypeConverter.ConvertToString
- uid: System.ComponentModel.TypeConverter.CreateInstance*
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: CreateInstance
  nameWithType: TypeConverter.CreateInstance
- uid: System.ComponentModel.TypeConverter.GetConvertFromException*
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetConvertFromException
  nameWithType: TypeConverter.GetConvertFromException
- uid: System.ComponentModel.TypeConverter.GetConvertToException*
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetConvertToException
  nameWithType: TypeConverter.GetConvertToException
- uid: System.ComponentModel.TypeConverter.GetCreateInstanceSupported*
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetCreateInstanceSupported
  nameWithType: TypeConverter.GetCreateInstanceSupported
- uid: System.ComponentModel.TypeConverter.GetProperties*
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetProperties
  nameWithType: TypeConverter.GetProperties
- uid: System.ComponentModel.TypeConverter.GetPropertiesSupported*
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetPropertiesSupported
  nameWithType: TypeConverter.GetPropertiesSupported
- uid: System.ComponentModel.TypeConverter.GetStandardValues*
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetStandardValues
  nameWithType: TypeConverter.GetStandardValues
- uid: System.ComponentModel.TypeConverter.GetStandardValuesExclusive*
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetStandardValuesExclusive
  nameWithType: TypeConverter.GetStandardValuesExclusive
- uid: System.ComponentModel.TypeConverter.GetStandardValuesSupported*
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetStandardValuesSupported
  nameWithType: TypeConverter.GetStandardValuesSupported
- uid: System.ComponentModel.TypeConverter.IsValid*
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: IsValid
  nameWithType: TypeConverter.IsValid
- uid: System.ComponentModel.TypeConverter.SortProperties*
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: SortProperties
  nameWithType: TypeConverter.SortProperties
