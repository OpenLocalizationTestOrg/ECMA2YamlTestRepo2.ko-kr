### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.Pkcs.SignerInfo
  id: SignerInfo
  children:
  - System.Security.Cryptography.Pkcs.SignerInfo.Certificate
  - System.Security.Cryptography.Pkcs.SignerInfo.CheckHash
  - System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Boolean)
  - System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)
  - System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature
  - System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature(System.Security.Cryptography.Pkcs.CmsSigner)
  - System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos
  - System.Security.Cryptography.Pkcs.SignerInfo.DigestAlgorithm
  - System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(System.Int32)
  - System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(System.Security.Cryptography.Pkcs.SignerInfo)
  - System.Security.Cryptography.Pkcs.SignerInfo.SignedAttributes
  - System.Security.Cryptography.Pkcs.SignerInfo.SignerIdentifier
  - System.Security.Cryptography.Pkcs.SignerInfo.UnsignedAttributes
  - System.Security.Cryptography.Pkcs.SignerInfo.Version
  langs:
  - csharp
  name: SignerInfo
  nameWithType: SignerInfo
  fullName: System.Security.Cryptography.Pkcs.SignerInfo
  type: Class
  summary: 'SignerInfo이 클래스와 관련 된 서명자 나타냅니다는 <xref href=&quot;System.Security.Cryptography.Pkcs.SignedCms&quot;> </xref> CMS/PKCS #7 메시지를 나타내는 개체입니다.'
  remarks: "메시지 내용 또는 서명을 통해 SignerInfo 클래스가 나타내는 서명 될 수 있습니다. 두 번째 종류의 서명이 라고는 *연대 서명을*합니다.       이 구현은 CMS/PKCS # 7의 한 수준의 연대를 지원합니다.  즉, 서명을 서명할 수 연대 형성할 하지만 해당의 연대를 다시 서명할 수 없습니다.       이 클래스는 공용 생성자;가 수 없습니다. 따라서 인스턴스화할 수 없습니다 공개적으로 합니다. 액세스할 수 있는 읽기 전용 클래스는 <xref:System.Security.Cryptography.Pkcs.SignedCms.SignerInfos%2A?displayProperty=fullName>속성.</xref:System.Security.Cryptography.Pkcs.SignedCms.SignerInfos%2A?displayProperty=fullName>"
  syntax:
    content: public sealed class SignerInfo
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignerInfo.Certificate
  id: Certificate
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  langs:
  - csharp
  name: Certificate
  nameWithType: SignerInfo.Certificate
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.Certificate
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: "인증서 속성 서명자 정보와 관련 된 서명 인증서를 검색 합니다."
  remarks: "서명 인증서를 서명할 때 사용 하 여 포함 되지 않은 경우는 <xref:System.Security.Cryptography.Pkcs.CmsSigner.IncludeOption%2A?displayProperty=fullName>속성을 다음 인증서 반환 되지 것입니다.</xref:System.Security.Cryptography.Pkcs.CmsSigner.IncludeOption%2A?displayProperty=fullName>"
  syntax:
    content: public System.Security.Cryptography.X509Certificates.X509Certificate2 Certificate { get; }
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
      description: "<xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> 서명 인증서를 나타내는 개체입니다."
  overload: System.Security.Cryptography.Pkcs.SignerInfo.Certificate*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignerInfo.CheckHash
  id: CheckHash
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  langs:
  - csharp
  name: CheckHash()
  nameWithType: SignerInfo.CheckHash()
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.CheckHash()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: 'CheckHash 메서드 CMS/PKCS #7 메시지 서명자 정보의 데이터 무결성을 확인합니다. CheckHash은 주체를 사용 하 여 특정 보안 인프라가 응용 프로그램에서 사용 하는 특수 한 방법의 **HashOnly** 의 멤버는 <xref href=&quot;System.Security.Cryptography.Pkcs.SubjectIdentifierType&quot;> </xref> 를 설정할 때 열거형은 <xref href=&quot;System.Security.Cryptography.Pkcs.CmsSigner&quot;> </xref> 개체입니다. 이 메서드는 디지털 서명 확인를 초래 하지 않습니다 CheckHash 서명자 정보를 인증 하지 않습니다. 범용 검사의 무결성과 CMS/PKCS #7 메시지 서명자 정보 및 연대 서명을의 신뢰성에 대 한 사용는 &lt;xref:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature%28System.Boolean%29&gt; 또는 &lt;xref:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature%28System.Security.Cryptography.X509Certificates.X509Certificate2Collection%2CSystem.Boolean%29&gt; 메서드.'
  remarks: '이 메서드는 인증의 CMS/PKCS #7 메시지 서명자 정보를 제공 하지 않습니다.'
  syntax:
    content: public void CheckHash ();
    parameters: []
  overload: System.Security.Cryptography.Pkcs.SignerInfo.CheckHash*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "암호화 작업을 완료할 수 없습니다."
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Boolean)
  id: CheckSignature(System.Boolean)
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  langs:
  - csharp
  name: CheckSignature(Boolean)
  nameWithType: SignerInfo.CheckSignature(Boolean)
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(Boolean)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: "CheckSignature 메서드는 메시지의 디지털 서명을 확인 하 고 필요에 따라 인증서의 유효성을 검사 합니다."
  remarks: "이 메서드는 디지털 서명 확인 하지 못하거나 모든 유효성 검사 요구 사항이 충족 되지 않으면 예외가 throw 됩니다.       더 복잡 한 유효성 검사 필요한 경우 호출자에 게 서명만 확인 되 고 사용 하 여 지정할 수는 <xref:System.Security.Cryptography.X509Certificates.X509Chain>개체 사용자 지정 유효성 검사를 수행 합니다.</xref:System.Security.Cryptography.X509Certificates.X509Chain>"
  syntax:
    content: public void CheckSignature (bool verifySignatureOnly);
    parameters:
    - id: verifySignatureOnly
      type: System.Boolean
      description: "디지털 서명에 확인 되는지 여부를 지정 하는 bool 값입니다. 경우 `verifySignatureOnly` 은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>는 서명을 확인 합니다. 경우 `verifySignatureOnly` 은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, 디지털 서명을 확인, 인증서 체인의 유효성을 검사 및 인증서는 유효성을 검사 합니다. 인증서에 키 용도가 또는 디지털 서명이 나 부인 방지 키 사용을 지원 하는 경우 인증서의 목적으로 유효한 것으로 간주 됩니다."
  overload: System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Null 참조를 올바른 인수로 받아들이지 않는 메서드에 전달 되었습니다."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "암호화 작업을 완료할 수 없습니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "메서드 호출이 개체의 현재 상태에 대해 올바르지 않습니다."
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)
  id: CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  langs:
  - csharp
  name: CheckSignature(X509Certificate2Collection,Boolean)
  nameWithType: SignerInfo.CheckSignature(X509Certificate2Collection,Boolean)
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(X509Certificate2Collection,Boolean)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: "CheckSignature 메서드 지정된 된 컬렉션의 인증서를 사용 하 여 메시지의 디지털 서명을 확인 하 고 필요에 따라 인증서의 유효성을 검사 합니다."
  remarks: "이 메서드는 디지털 서명 확인 하지 못하거나 모든 유효성 검사 요구 사항이 충족 되지 않으면 예외가 throw 됩니다.       더 복잡 한 유효성 검사 필요한 경우 호출자에 게 서명만 확인 되 고 사용 하 여 지정할 수는 <xref:System.Security.Cryptography.X509Certificates.X509Chain>개체 사용자 지정 유효성 검사를 수행 합니다.</xref:System.Security.Cryptography.X509Certificates.X509Chain>"
  syntax:
    content: public void CheckSignature (System.Security.Cryptography.X509Certificates.X509Certificate2Collection extraStore, bool verifySignatureOnly);
    parameters:
    - id: extraStore
      type: System.Security.Cryptography.X509Certificates.X509Certificate2Collection
      description: "<xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2Collection&quot;> </xref> 체인의 유효성을 검사 하는 데 사용할 수 있습니다. 추가 인증서 체인 유효성 검사를 사용 하 여 사용 하려는 경우 &lt;xref:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature%28System.Boolean%29&gt; CheckSignature 대신 합니다."
    - id: verifySignatureOnly
      type: System.Boolean
      description: "디지털 서명에 확인 되는지 여부를 지정 하는 bool 값입니다. 경우 `verifySignatureOnly` 은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>는 서명을 확인 합니다. 경우 `verifySignatureOnly` 은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, 디지털 서명을 확인, 인증서 체인의 유효성을 검사 및 인증서는 유효성을 검사 합니다. 인증서에 키 용도가 또는 디지털 서명이 나 부인 방지 키 사용을 지원 하는 경우 인증서의 목적으로 유효한 것으로 간주 됩니다."
  overload: System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Null 참조를 올바른 인수로 받아들이지 않는 메서드에 전달 되었습니다."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "암호화 작업을 완료할 수 없습니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "메서드 호출이 개체의 현재 상태에 대해 올바르지 않습니다."
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature
  id: ComputeCounterSignature
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  langs:
  - csharp
  name: ComputeCounterSignature()
  nameWithType: SignerInfo.ComputeCounterSignature()
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: 'ComputeCounterSignature 메서드 서명 인증서를 선택 하 라는 메시지 연대 만들고 CMS/PKCS #7 메시지 서명을 추가 합니다. 연대 서명을 한 수준으로 제한 됩니다.'
  remarks: "이 구현은 CMS/PKCS # 7의 한 수준의 연대를 지원합니다.  즉, 서명을 서명할 수 연대 형성할 하지만 해당의 연대를 다시 서명할 수 없습니다.       이 메서드는이 메시지에 대 한 서명자를 선택할 수 있는 사용자 인터페이스를 표시 합니다. 현재 프로세스 실행 되 고 있는지 그러려면 *사용자 대화형 모드로*즉, 하는 <xref:System.Environment.UserInteractive%2A?displayProperty=fullName>속성이로 설정 되어 `true`.</xref:System.Environment.UserInteractive%2A?displayProperty=fullName> 프로세스는 서비스 프로세스 또는 웹 응용 프로그램 내에서 실행 하지 않은 사용자 대화형 모드로 일반적으로 합니다.       해당 인증서는 다음 조건을 충족 하는 서명자의 목록에 표시 됩니다:-인증서에 관련된 된 개인 키입니다.      -인증서가 유효 기간 내에 있습니다.      -인증서에 키 용도가 또는 디지털 서명이 나 부인 방지를 지 원하는 키 사용 합니다.       서명자의 인증서는에서 선택의 내 저장소입니다.      ## .NET framework 보안 사용자 인터페이스를 표시 하려면 다음 권한이 필요 합니다:- <xref:System.Security.Permissions.UIPermissionWindow?displayProperty=fullName>서명 키에 액세스 하려면 다음 권한이 필요 합니다:- <xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName>- <xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName></xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName> </xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName> </xref:System.Security.Permissions.UIPermissionWindow?displayProperty=fullName>"
  syntax:
    content: public void ComputeCounterSignature ();
    parameters: []
  overload: System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Null 참조를 올바른 인수로 받아들이지 않는 메서드에 전달 되었습니다."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "암호화 작업을 완료할 수 없습니다."
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature(System.Security.Cryptography.Pkcs.CmsSigner)
  id: ComputeCounterSignature(System.Security.Cryptography.Pkcs.CmsSigner)
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  langs:
  - csharp
  name: ComputeCounterSignature(CmsSigner)
  nameWithType: SignerInfo.ComputeCounterSignature(CmsSigner)
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature(CmsSigner)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: 'ComputeCounterSignature 메서드 연대를 만들고 지정된 된 서명자를 사용 하 여 CMS/PKCS #7 메시지 시그니처를 추가 합니다. 연대 서명을 한 수준으로 제한 됩니다.'
  remarks: "이 구현은 CMS/PKCS # 7의 한 수준의 연대를 지원합니다.  즉, 서명을 서명할 수 연대 형성할 하지만 해당의 연대를 다시 서명할 수 없습니다.      ## .NET framework 보안 서명 키에 액세스 하려면 다음 권한이 필요 합니다:- <xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName>- <xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName></xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName> </xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName>"
  syntax:
    content: public void ComputeCounterSignature (System.Security.Cryptography.Pkcs.CmsSigner signer);
    parameters:
    - id: signer
      type: System.Security.Cryptography.Pkcs.CmsSigner
      description: "A <xref href=&quot;System.Security.Cryptography.Pkcs.CmsSigner&quot;> </xref> 카운터 서명자를 나타내는 개체입니다."
  overload: System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Null 참조를 올바른 인수로 받아들이지 않는 메서드에 전달 되었습니다."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "암호화 작업을 완료할 수 없습니다."
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos
  id: CounterSignerInfos
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  langs:
  - csharp
  name: CounterSignerInfos
  nameWithType: SignerInfo.CounterSignerInfos
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: "CounterSignerInfos 속성 서명자 정보와 관련 된 카운터 서명자의 집합을 검색 합니다."
  remarks: '이 구현은 CMS/PKCS # 7의 한 수준의 연대를 지원합니다. 즉, 서명을 서명할 수 연대 형성할 하지만 해당의 연대를 다시 서명할 수 없습니다.'
  syntax:
    content: public System.Security.Cryptography.Pkcs.SignerInfoCollection CounterSignerInfos { get; }
    return:
      type: System.Security.Cryptography.Pkcs.SignerInfoCollection
      description: "A <xref href=&quot;System.Security.Cryptography.Pkcs.SignerInfoCollection&quot;> </xref> 서명자 정보에 대 한 카운터 서명자를 나타내는 컬렉션입니다. 연대 서명자가 없을 경우이 속성은 빈 컬렉션입니다."
  overload: System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignerInfo.DigestAlgorithm
  id: DigestAlgorithm
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  langs:
  - csharp
  name: DigestAlgorithm
  nameWithType: SignerInfo.DigestAlgorithm
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.DigestAlgorithm
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: "DigestAlgorithm 속성 검색에서 <xref href=&quot;System.Security.Cryptography.Oid&quot;> </xref> 은 서명 계산에 사용 되는 해시 알고리즘을 나타내는 개체입니다."
  syntax:
    content: public System.Security.Cryptography.Oid DigestAlgorithm { get; }
    return:
      type: System.Security.Cryptography.Oid
      description: "<xref href=&quot;System.Security.Cryptography.Oid&quot;> </xref> 서명과 함께 사용 되는 해시 알고리즘을 나타내는 개체입니다."
  overload: System.Security.Cryptography.Pkcs.SignerInfo.DigestAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(System.Int32)
  id: RemoveCounterSignature(System.Int32)
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  langs:
  - csharp
  name: RemoveCounterSignature(Int32)
  nameWithType: SignerInfo.RemoveCounterSignature(Int32)
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(Int32)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: "RemoveCounterSignature 메서드 제거의 지정된 된 인덱스에 연대는 <xref:System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos*>컬렉션.</xref:System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos*>"
  syntax:
    content: public void RemoveCounterSignature (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "제거할 연대의&0;부터 시작 하는 인덱스입니다."
  overload: System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "암호화 작업을 완료할 수 없습니다."
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(System.Security.Cryptography.Pkcs.SignerInfo)
  id: RemoveCounterSignature(System.Security.Cryptography.Pkcs.SignerInfo)
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  langs:
  - csharp
  name: RemoveCounterSignature(SignerInfo)
  nameWithType: SignerInfo.RemoveCounterSignature(SignerInfo)
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(SignerInfo)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: "RemoveCounterSignature 메서드는 지정 된 연대 서명을 제거 <xref href=&quot;System.Security.Cryptography.Pkcs.SignerInfo&quot;> </xref> 개체입니다."
  syntax:
    content: public void RemoveCounterSignature (System.Security.Cryptography.Pkcs.SignerInfo counterSignerInfo);
    parameters:
    - id: counterSignerInfo
      type: System.Security.Cryptography.Pkcs.SignerInfo
      description: "A <xref href=&quot;System.Security.Cryptography.Pkcs.SignerInfo&quot;> </xref> 제거할을 나타내는 개체입니다."
  overload: System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Null 참조를 올바른 인수로 받아들이지 않는 메서드에 전달 되었습니다."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "인수 값이 호출 된 메서드가 정의 된 대로 값의 허용 범위 밖에 있습니다."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "암호화 작업을 완료할 수 없습니다."
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignerInfo.SignedAttributes
  id: SignedAttributes
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  langs:
  - csharp
  name: SignedAttributes
  nameWithType: SignerInfo.SignedAttributes
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.SignedAttributes
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: "SignedAttributes 속성 검색에서 <xref href=&quot;System.Security.Cryptography.CryptographicAttributeObjectCollection&quot;> </xref> 서명자 정보와 연결 된 서명 된 특성의 컬렉션입니다. 서명 된 특성은 메시지 내용과 함께 서명 됩니다."
  remarks: "에 포함 될 수 있는 부호 있는 특성의 예로 <xref:System.Security.Cryptography.CryptographicAttributeObjectCollection>SignedAttributes 속성에서 검색 하는 컬렉션은는 <xref:System.Security.Cryptography.Pkcs.Pkcs9SigningTime>서명 시간 특성.</xref:System.Security.Cryptography.Pkcs.Pkcs9SigningTime> </xref:System.Security.Cryptography.CryptographicAttributeObjectCollection>       서명 된 특성의 나머지 부분과 함께 서명 됩니다는 <xref:System.Security.Cryptography.Pkcs.SignedCms>메시지 콘텐츠.</xref:System.Security.Cryptography.Pkcs.SignedCms> 즉, 성공적으로 서명을 확인 하는 당사자가 이러한 특성의 내용을 진짜 콘텐츠 여야 하 고 변경 되지 않았음을 신뢰를 있을 수 있습니다.       A <xref:System.Security.Cryptography.Pkcs.Pkcs9ContentType>개체 및 <xref:System.Security.Cryptography.Pkcs.Pkcs9MessageDigest>개체가 자동으로 생성 되며 SignedAttributes 속성에 포함 될 때마다는 <xref:System.Security.Cryptography.Pkcs.CmsSigner.SignedAttributes%2A?displayProperty=fullName>해당 서명자에 대 한 속성을 비어 있지 않습니다.</xref:System.Security.Cryptography.Pkcs.CmsSigner.SignedAttributes%2A?displayProperty=fullName> </xref:System.Security.Cryptography.Pkcs.Pkcs9MessageDigest> </xref:System.Security.Cryptography.Pkcs.Pkcs9ContentType>"
  syntax:
    content: public System.Security.Cryptography.CryptographicAttributeObjectCollection SignedAttributes { get; }
    return:
      type: System.Security.Cryptography.CryptographicAttributeObjectCollection
      description: "A <xref href=&quot;System.Security.Cryptography.CryptographicAttributeObjectCollection&quot;> </xref> 서명 된 특성을 나타내는 컬렉션입니다. 서명 된 특성이 없으면 인 속성은 빈 컬렉션입니다."
  overload: System.Security.Cryptography.Pkcs.SignerInfo.SignedAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignerInfo.SignerIdentifier
  id: SignerIdentifier
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  langs:
  - csharp
  name: SignerIdentifier
  nameWithType: SignerInfo.SignerIdentifier
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.SignerIdentifier
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: "SignerIdentifier 속성 서명자 정보와 관련 된 서명자의 인증서 식별자를 검색 합니다."
  syntax:
    content: public System.Security.Cryptography.Pkcs.SubjectIdentifier SignerIdentifier { get; }
    return:
      type: System.Security.Cryptography.Pkcs.SubjectIdentifier
      description: "A <xref href=&quot;System.Security.Cryptography.Pkcs.SubjectIdentifier&quot;> </xref> 서명자 정보와 연결 된 인증서를 고유 하 게 식별 하는 개체입니다."
  overload: System.Security.Cryptography.Pkcs.SignerInfo.SignerIdentifier*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignerInfo.UnsignedAttributes
  id: UnsignedAttributes
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  langs:
  - csharp
  name: UnsignedAttributes
  nameWithType: SignerInfo.UnsignedAttributes
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.UnsignedAttributes
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: "UnsignedAttributes 속성 검색에서 <xref href=&quot;System.Security.Cryptography.CryptographicAttributeObjectCollection&quot;> </xref> 연관 된 서명 되지 않은 특성의 컬렉션은 <xref href=&quot;System.Security.Cryptography.Pkcs.SignerInfo&quot;> </xref> 콘텐츠입니다. 서명을 무효화 하지 않고 서명 되지 않은 특성을 수정할 수 있습니다."
  remarks: "서명 되지 않은 특성의 나머지 부분과 함께 서명 되지 않은 <xref:System.Security.Cryptography.Pkcs.SignedCms>메시지 콘텐츠.</xref:System.Security.Cryptography.Pkcs.SignedCms> 파티에서 성공적으로 서명을 확인 하는 경우에 서명 되지 않은 특성 변경 되었습니다 및 신뢰성 또는 무결성 간주 되지 않아야 합니다.       에 포함 될 수 있는 서명 되지 않은 특성의 예로 <xref:System.Security.Cryptography.CryptographicAttributeObjectCollection>UnsignedAttributes 속성에서 검색 하는 컬렉션은 연대.</xref:System.Security.Cryptography.CryptographicAttributeObjectCollection>"
  syntax:
    content: public System.Security.Cryptography.CryptographicAttributeObjectCollection UnsignedAttributes { get; }
    return:
      type: System.Security.Cryptography.CryptographicAttributeObjectCollection
      description: "A <xref href=&quot;System.Security.Cryptography.CryptographicAttributeObjectCollection&quot;> </xref> 서명 되지 않은 특성을 나타내는 컬렉션입니다. 서명 되지 않은 특성이 없는 경우이 속성은 빈 컬렉션입니다."
  overload: System.Security.Cryptography.Pkcs.SignerInfo.UnsignedAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignerInfo.Version
  id: Version
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  langs:
  - csharp
  name: Version
  nameWithType: SignerInfo.Version
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.Version
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: "Version 속성 서명자 정보 버전을 검색합니다."
  remarks: '버전은 PKCS #7 메시지 또는 암호화 메시지 구문 (CMS) 메시지 인지를 결정 합니다. CMS는 PKCS # 7의 최신 상위 집합입니다.'
  syntax:
    content: public int Version { get; }
    return:
      type: System.Int32
      description: "서명자 정보 버전을 지정 하는 정수 값입니다."
  overload: System.Security.Cryptography.Pkcs.SignerInfo.Version*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Security.Cryptography.Pkcs.SignerInfo.Certificate
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: Certificate
  nameWithType: SignerInfo.Certificate
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.Certificate
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509Certificate2
  nameWithType: X509Certificate2
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2
- uid: System.Security.Cryptography.Pkcs.SignerInfo.CheckHash
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: CheckHash()
  nameWithType: SignerInfo.CheckHash()
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.CheckHash()
- uid: System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Boolean)
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: CheckSignature(Boolean)
  nameWithType: SignerInfo.CheckSignature(Boolean)
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: CheckSignature(X509Certificate2Collection,Boolean)
  nameWithType: SignerInfo.CheckSignature(X509Certificate2Collection,Boolean)
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(X509Certificate2Collection,Boolean)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2Collection
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509Certificate2Collection
  nameWithType: X509Certificate2Collection
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2Collection
- uid: System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: ComputeCounterSignature()
  nameWithType: SignerInfo.ComputeCounterSignature()
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature()
- uid: System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature(System.Security.Cryptography.Pkcs.CmsSigner)
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: ComputeCounterSignature(CmsSigner)
  nameWithType: SignerInfo.ComputeCounterSignature(CmsSigner)
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature(CmsSigner)
- uid: System.Security.Cryptography.Pkcs.CmsSigner
  parent: System.Security.Cryptography.Pkcs
  isExternal: false
  name: CmsSigner
  nameWithType: CmsSigner
  fullName: System.Security.Cryptography.Pkcs.CmsSigner
- uid: System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: CounterSignerInfos
  nameWithType: SignerInfo.CounterSignerInfos
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos
- uid: System.Security.Cryptography.Pkcs.SignerInfoCollection
  parent: System.Security.Cryptography.Pkcs
  isExternal: false
  name: SignerInfoCollection
  nameWithType: SignerInfoCollection
  fullName: System.Security.Cryptography.Pkcs.SignerInfoCollection
- uid: System.Security.Cryptography.Pkcs.SignerInfo.DigestAlgorithm
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: DigestAlgorithm
  nameWithType: SignerInfo.DigestAlgorithm
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.DigestAlgorithm
- uid: System.Security.Cryptography.Oid
  parent: System.Security.Cryptography
  isExternal: false
  name: Oid
  nameWithType: Oid
  fullName: System.Security.Cryptography.Oid
- uid: System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(System.Int32)
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: RemoveCounterSignature(Int32)
  nameWithType: SignerInfo.RemoveCounterSignature(Int32)
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(System.Security.Cryptography.Pkcs.SignerInfo)
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: RemoveCounterSignature(SignerInfo)
  nameWithType: SignerInfo.RemoveCounterSignature(SignerInfo)
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(SignerInfo)
- uid: System.Security.Cryptography.Pkcs.SignerInfo
  parent: System.Security.Cryptography.Pkcs
  isExternal: false
  name: SignerInfo
  nameWithType: SignerInfo
  fullName: System.Security.Cryptography.Pkcs.SignerInfo
- uid: System.Security.Cryptography.Pkcs.SignerInfo.SignedAttributes
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: SignedAttributes
  nameWithType: SignerInfo.SignedAttributes
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.SignedAttributes
- uid: System.Security.Cryptography.CryptographicAttributeObjectCollection
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicAttributeObjectCollection
  nameWithType: CryptographicAttributeObjectCollection
  fullName: System.Security.Cryptography.CryptographicAttributeObjectCollection
- uid: System.Security.Cryptography.Pkcs.SignerInfo.SignerIdentifier
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: SignerIdentifier
  nameWithType: SignerInfo.SignerIdentifier
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.SignerIdentifier
- uid: System.Security.Cryptography.Pkcs.SubjectIdentifier
  parent: System.Security.Cryptography.Pkcs
  isExternal: false
  name: SubjectIdentifier
  nameWithType: SubjectIdentifier
  fullName: System.Security.Cryptography.Pkcs.SubjectIdentifier
- uid: System.Security.Cryptography.Pkcs.SignerInfo.UnsignedAttributes
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: UnsignedAttributes
  nameWithType: SignerInfo.UnsignedAttributes
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.UnsignedAttributes
- uid: System.Security.Cryptography.Pkcs.SignerInfo.Version
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: Version
  nameWithType: SignerInfo.Version
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.Version
- uid: System.Security.Cryptography.Pkcs.SignerInfo.Certificate*
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: Certificate
  nameWithType: SignerInfo.Certificate
- uid: System.Security.Cryptography.Pkcs.SignerInfo.CheckHash*
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: CheckHash
  nameWithType: SignerInfo.CheckHash
- uid: System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature*
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: CheckSignature
  nameWithType: SignerInfo.CheckSignature
- uid: System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature*
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: ComputeCounterSignature
  nameWithType: SignerInfo.ComputeCounterSignature
- uid: System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos*
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: CounterSignerInfos
  nameWithType: SignerInfo.CounterSignerInfos
- uid: System.Security.Cryptography.Pkcs.SignerInfo.DigestAlgorithm*
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: DigestAlgorithm
  nameWithType: SignerInfo.DigestAlgorithm
- uid: System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature*
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: RemoveCounterSignature
  nameWithType: SignerInfo.RemoveCounterSignature
- uid: System.Security.Cryptography.Pkcs.SignerInfo.SignedAttributes*
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: SignedAttributes
  nameWithType: SignerInfo.SignedAttributes
- uid: System.Security.Cryptography.Pkcs.SignerInfo.SignerIdentifier*
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: SignerIdentifier
  nameWithType: SignerInfo.SignerIdentifier
- uid: System.Security.Cryptography.Pkcs.SignerInfo.UnsignedAttributes*
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: UnsignedAttributes
  nameWithType: SignerInfo.UnsignedAttributes
- uid: System.Security.Cryptography.Pkcs.SignerInfo.Version*
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: Version
  nameWithType: SignerInfo.Version
