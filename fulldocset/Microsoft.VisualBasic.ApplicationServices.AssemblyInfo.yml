### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  id: AssemblyInfo
  children:
  - Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.#ctor(System.Reflection.Assembly)
  - Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.AssemblyName
  - Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.CompanyName
  - Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Copyright
  - Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Description
  - Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.DirectoryPath
  - Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.LoadedAssemblies
  - Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.ProductName
  - Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.StackTrace
  - Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Title
  - Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Trademark
  - Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Version
  - Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.WorkingSet
  langs:
  - csharp
  name: AssemblyInfo
  nameWithType: AssemblyInfo
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  type: Class
  summary: "버전 번호, 설명, 로드 된 어셈블리 등 응용 프로그램에 대 한 정보를 가져오기 위한 속성을 제공 합니다."
  remarks: "표시 하는 속성 중 일부는 `My.Application.Info` 개체 응용 프로그램의 어셈블리 정보를 반환 합니다. 응용 프로그램의 어셈블리에 정보를 설정 하려면 사용 해야는 **어셈블리 정보** 에서 액세스할 수 있는 대화 상자는 **응용 프로그램** 의 창 고 **프로젝트 디자이너**합니다.       `My.Application.Info` 에 유사한 기능을 제공 하는 개체는 <xref:System.Diagnostics.FileVersionInfo>클래스 하지만 가장 일반적인 속성에 대 한 빠른 액세스를 제공 합니다.</xref:System.Diagnostics.FileVersionInfo>       다른 속성을 같은 `LoadedAssemblies`, 응용 프로그램의 현재 상태에 대 한 액세스를 제공 합니다."
  example:
  - "This example uses the `My.Application.Info.Version` property to display the version of the application.  \n  \n [!code-vb[VbVbalrMyApplication#30](~/add/codesnippet/visualbasic/VbVbalrMyApplication/Form1.vb#30)]"
  syntax:
    content: public class AssemblyInfo
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.#ctor(System.Reflection.Assembly)
  id: '#ctor(System.Reflection.Assembly)'
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  langs:
  - csharp
  name: AssemblyInfo(Assembly)
  nameWithType: AssemblyInfo.AssemblyInfo(Assembly)
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.AssemblyInfo(Assembly)
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "새 인스턴스를 초기화는 <xref href=&quot;Microsoft.VisualBasic.ApplicationServices.AssemblyInfo&quot;> </xref> 지정 된 어셈블리 정보를 사용 하 여 클래스입니다."
  syntax:
    content: public AssemblyInfo (System.Reflection.Assembly currentAssembly);
    parameters:
    - id: currentAssembly
      type: System.Reflection.Assembly
      description: "<xref:System.Reflection.Assembly>.</xref:System.Reflection.Assembly> 어셈블리 정보를 얻을 수입니다."
  overload: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.AssemblyName
  id: AssemblyName
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  langs:
  - csharp
  name: AssemblyName
  nameWithType: AssemblyInfo.AssemblyName
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.AssemblyName
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "응용 프로그램에 대 한 어셈블리 파일의 확장명을 제외한 이름을 가져옵니다."
  remarks: "`My.Application.Info.AssemblyName` 속성 매니페스트가 들어 있는 파일의 이름을 가져옵니다.      ## 프로젝트 형식에 따라 가용성 | 프로젝트 형식을 | 사용 가능한 |   |------------------|---------------|   | Windows Forms 응용 프로그램 | **Yes**|   | 클래스 라이브러리 | **Yes**|   | 콘솔 응용 프로그램 | **Yes**|   | Windows Forms 컨트롤 라이브러리 | **Yes**|   | 웹 컨트롤 라이브러리 | 더 |   | Windows 서비스 | **Yes**|   | 웹 사이트 | 더 |"
  example:
  - "This example uses the `My.Application.Info.AssemblyName` property to display the name of the application.  \n  \n [!code-vb[VbVbalrMyApplication#20](~/add/codesnippet/visualbasic/VbVbalrMyApplication/Form1.vb#20)]"
  syntax:
    content: public string AssemblyName { get; }
    return:
      type: System.String
      description: "A <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> 파일 이름이 들어 있는입니다."
  overload: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.AssemblyName*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.CompanyName
  id: CompanyName
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  langs:
  - csharp
  name: CompanyName
  nameWithType: AssemblyInfo.CompanyName
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.CompanyName
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "응용 프로그램과 관련 된 회사 이름을 가져옵니다."
  remarks: "`My.Application.Info.CompanyName` 속성은 응용 프로그램과 관련 된 회사 이름을 가져옵니다.       에 대 한 값을 변경 하 여 회사 이름을 변경할 수 있습니다 **회사** 에 **어셈블리 정보** 에서 액세스할 수 있는 대화 상자는 **응용 프로그램** 의 창 고 **프로젝트 디자이너**합니다.      ## 프로젝트 형식에 따라 가용성 | 프로젝트 형식을 | 사용 가능한 |   |------------------|---------------|   | Windows Forms 응용 프로그램 | **Yes**|   | 클래스 라이브러리 | **Yes**|   | 콘솔 응용 프로그램 | **Yes**|   | Windows Forms 컨트롤 라이브러리 | **Yes**|   | 웹 컨트롤 라이브러리 | 더 |   | Windows 서비스 | **Yes**|   | 웹 사이트 | 더 |"
  example:
  - "This example uses the `My.Application.Info.CompanyName` property to display the company name associated with the application.  \n  \n [!code-vb[VbVbalrMyApplication#21](~/add/codesnippet/visualbasic/VbVbalrMyApplication/Form1.vb#21)]"
  syntax:
    content: public string CompanyName { get; }
    return:
      type: System.String
      description: "A <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> 는 응용 프로그램과 관련 된 회사 이름이 들어 있는입니다."
  overload: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.CompanyName*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "어셈블리에 없는 <xref:System.Reflection.AssemblyCompanyAttribute>특성.</xref:System.Reflection.AssemblyCompanyAttribute>"
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Copyright
  id: Copyright
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  langs:
  - csharp
  name: Copyright
  nameWithType: AssemblyInfo.Copyright
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Copyright
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "응용 프로그램과 관련 된 저작권 표시를 가져옵니다."
  remarks: "`My.Application.Info.Copyright` 속성은 응용 프로그램과 관련 된 저작권 표시를 가져옵니다.       저작권 표시에 대 한 값을 변경 하 여 변경할 수 있습니다 **저작권** 에 **어셈블리 정보** 에서 액세스할 수 있는 대화 상자는 **응용 프로그램** 의 창 고 **프로젝트 디자이너**합니다.      ## 프로젝트 형식에 따라 가용성 | 프로젝트 형식을 | 사용 가능한 |   |------------------|---------------|   | Windows Forms 응용 프로그램 | **Yes**|   | 클래스 라이브러리 | **Yes**|   | 콘솔 응용 프로그램 | **Yes**|   | Windows Forms 컨트롤 라이브러리 | **Yes**|   | 웹 컨트롤 라이브러리 | 더 |   | Windows 서비스 | **Yes**|   | 웹 사이트 | 더 |"
  example:
  - "This example uses the `My.Application.Info.Copyright` property to display the company name associated with the application.  \n  \n [!code-vb[VbVbalrMyApplication#22](~/add/codesnippet/visualbasic/VbVbalrMyApplication/Form1.vb#22)]"
  syntax:
    content: public string Copyright { get; }
    return:
      type: System.String
      description: "A <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> 를 포함 하는 응용 프로그램과 관련 된 저작권 표시 합니다."
  overload: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Copyright*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "어셈블리에 없는 <xref:System.Reflection.AssemblyCopyrightAttribute>특성.</xref:System.Reflection.AssemblyCopyrightAttribute>"
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Description
  id: Description
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  langs:
  - csharp
  name: Description
  nameWithType: AssemblyInfo.Description
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Description
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "응용 프로그램과 관련 된 설명을 가져옵니다."
  remarks: "`My.Application.Info.Description` 속성에는 응용 프로그램과 관련 된 설명을 가져옵니다.       에 대 한 값을 변경 하 여 설명을 변경할 수 있습니다 **설명** 에 **어셈블리 정보** 에서 액세스할 수 있는 대화 상자는 **응용 프로그램** 의 창은 **프로젝트 디자이너**합니다.      ## 프로젝트 형식에 따라 가용성 | 프로젝트 형식을 | 사용 가능한 |   |------------------|---------------|   | Windows Forms 응용 프로그램 | **Yes**|   | 클래스 라이브러리 | **Yes**|   | 콘솔 응용 프로그램 | **Yes**|   | Windows Forms 컨트롤 라이브러리 | **Yes**|   | 웹 컨트롤 라이브러리 | 더 |   | Windows 서비스 | **Yes**|   | 웹 사이트 | 더 |"
  example:
  - "This example uses the `My.Application.Info.Description` property to display the description associated with the application.  \n  \n [!code-vb[VbVbalrMyApplication#23](~/add/codesnippet/visualbasic/VbVbalrMyApplication/Form1.vb#23)]"
  syntax:
    content: public string Description { get; }
    return:
      type: System.String
      description: "A <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> 는 응용 프로그램과 관련 된 설명을 포함 하 합니다."
  overload: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Description*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "어셈블리에 없는 <xref:System.Reflection.AssemblyDescriptionAttribute>특성.</xref:System.Reflection.AssemblyDescriptionAttribute>"
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.DirectoryPath
  id: DirectoryPath
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  langs:
  - csharp
  name: DirectoryPath
  nameWithType: AssemblyInfo.DirectoryPath
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.DirectoryPath
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "응용 프로그램이 저장 된 디렉터리를 가져옵니다."
  remarks: "`My.Application.Info.DirectoryPath` 속성 응용 프로그램이 저장 된 디렉터리를 가져옵니다.      ## 프로젝트 형식에 따라 가용성 | 프로젝트 형식을 | 사용 가능한 |   |------------------|---------------|   | Windows Forms 응용 프로그램 | **Yes**|   | 클래스 라이브러리 | **Yes**|   | 콘솔 응용 프로그램 | **Yes**|   | Windows Forms 컨트롤 라이브러리 | **Yes**|   | 웹 컨트롤 라이브러리 | 더 |   | Windows 서비스 | **Yes**|   | 웹 사이트 | 더 |"
  example:
  - "This example uses the `My.Application.Info.DirectoryPath` property to display the directory path where the application is stored.  \n  \n [!code-vb[VbVbalrMyApplication#24](~/add/codesnippet/visualbasic/VbVbalrMyApplication/Form1.vb#24)]"
  syntax:
    content: public string DirectoryPath { get; }
    return:
      type: System.String
      description: "A <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> 응용 프로그램이 저장 된 디렉터리를 포함 합니다."
  overload: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.DirectoryPath*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.LoadedAssemblies
  id: LoadedAssemblies
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  langs:
  - csharp
  name: LoadedAssemblies
  nameWithType: AssemblyInfo.LoadedAssemblies
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.LoadedAssemblies
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "응용 프로그램이 로드 하는 모든 어셈블리의 컬렉션을 가져옵니다."
  remarks: "`My.Application.Info.LoadedAssemblies` 속성은 비슷합니다는 <xref:System.AppDomain.GetAssemblies%2A>메서드.</xref:System.AppDomain.GetAssemblies%2A>      ## 프로젝트 형식에 따라 가용성 | 프로젝트 형식을 | 사용 가능한 |   |------------------|---------------|   | Windows Forms 응용 프로그램 | **Yes**|   | 클래스 라이브러리 | **Yes**|   | 콘솔 응용 프로그램 | **Yes**|   | Windows Forms 컨트롤 라이브러리 | **Yes**|   | 웹 컨트롤 라이브러리 | 더 |   | Windows 서비스 | **Yes**|   | 웹 사이트 | 더 |"
  example:
  - "This example uses the `My.Application.Info.LoadedAssemblies` property to display the assemblies loaded by the application.  \n  \n [!code-vb[VbVbalrMyApplication#25](~/add/codesnippet/visualbasic/VbVbalrMyApplication/Form1.vb#25)]  \n  \n This example requires that your Windows Forms application has a <xref:System.Windows.Forms.ListBox> control named `ListBox1`."
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Reflection.Assembly> LoadedAssemblies { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Reflection.Assembly}
      description: "A &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; 의 <xref:System.Reflection.Assembly>모든 어셈블리를 포함 하는 응용 프로그램에서 로드 합니다.</xref:System.Reflection.Assembly>"
  overload: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.LoadedAssemblies*
  exceptions:
  - type: System.AppDomainUnloadedException
    commentId: T:System.AppDomainUnloadedException
    description: "응용 프로그램 도메인이 로드 되지 않습니다."
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.ProductName
  id: ProductName
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  langs:
  - csharp
  name: ProductName
  nameWithType: AssemblyInfo.ProductName
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.ProductName
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "응용 프로그램과 관련 된 제품 이름을 가져옵니다."
  remarks: "`My.Application.Info.ProductName` 속성은 응용 프로그램과 관련 된 제품 이름을 가져옵니다.       제품 이름에 대 한 값을 변경 하 여 변경할 수 있습니다 **제품** 에 **어셈블리 정보** 에서 액세스할 수 있는 대화 상자는 **응용 프로그램** 의 창 고 **프로젝트 디자이너**합니다.      ## 프로젝트 형식에 따라 가용성 | 프로젝트 형식을 | 사용 가능한 |   |------------------|---------------|   | Windows Forms 응용 프로그램 | **Yes**|   | 클래스 라이브러리 | **Yes**|   | 콘솔 응용 프로그램 | **Yes**|   | Windows Forms 컨트롤 라이브러리 | **Yes**|   | 웹 컨트롤 라이브러리 | 더 |   | Windows 서비스 | **Yes**|   | 웹 사이트 | 더 |"
  example:
  - "This example uses the `My.Application.Info.ProductName` property to display the product name associated with the application.  \n  \n [!code-vb[VbVbalrMyApplication#26](~/add/codesnippet/visualbasic/VbVbalrMyApplication/Form1.vb#26)]"
  syntax:
    content: public string ProductName { get; }
    return:
      type: System.String
      description: "A <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> 제품 이름을 포함 하는 응용 프로그램과 관련 된 합니다."
  overload: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.ProductName*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "어셈블리에 없는 <xref:System.Reflection.AssemblyProductAttribute>특성.</xref:System.Reflection.AssemblyProductAttribute>"
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.StackTrace
  id: StackTrace
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  langs:
  - csharp
  name: StackTrace
  nameWithType: AssemblyInfo.StackTrace
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.StackTrace
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "현재 스택 추적 정보를 가져옵니다."
  remarks: "`My.Application.Info.StackTrace` 속성 목록 역시간순에서 메서드 호출-즉, 먼저, 가장 최근의 메서드 호출을 설명 하 고 별도 줄에 대 한 스택에서 각 메서드 호출을 나열 합니다. 그러나는 `My.Application.Info.StackTrace` 속성 최적화 하는 동안 발생 하는 코드 변환으로 인해 예상 만큼 많은 메서드 호출을 보고 하지 않을 수 있습니다.       일반적으로 스택 추적 정보는 응용 프로그램 디버깅에 사용 됩니다.       각 메서드 호출에 대 한 스택 추적 정보 형식은 다음과 같습니다: &quot;에서 *FullClassName*.* MethodName*(*MethodParams*)에서 *FileName*: 선 *LineNumber* &quot;&quot;at&quot;리터럴 앞에 공백을 세 개 및 리터럴&quot;in&quot;및&quot;: 줄 &quot;디버그 기호를 사용할 수 없는 경우 생략 됩니다. 자리 표시자 `FullClassName`, `MethodName`, `MethodParams`, `FileName`, 및 `LineNumber` 다음과 같이 정의 하는 실제 값으로 대체 됩니다. | 파트 | 설명 |   |----------|-----------------|   | *FullClassName*| 네임 스페이스를 포함 하는 클래스의 전체 이름입니다. |   | *MethodName*| 메서드의 이름입니다. |   | *MethodParams*| 매개 변수 형식/이름 쌍의 목록입니다. 각 쌍은 쉼표 (,)로 구분 됩니다. 이 정보를 생략 하면 *MethodName* 매개. |   | *FileName*| 원본의 이름을 파일 위치는 *MethodName* 메서드를 선언 합니다. 디버그 기호를 사용할 수 없는 경우이 정보가 생략 됩니다. |   | *LineNumber*| 줄 번호 *FileName* 에서 소스 코드를 포함 하는 *MethodName* 호출 스택에 있는 명령에 대 한 합니다. 디버그 기호를 사용할 수 없는 경우이 정보가 생략 됩니다. |       `My.Applicaiton.Info.StackTrace` 속성 비슷한 기능을 제공 된 <xref:System.Environment.StackTrace%2A>속성.</xref:System.Environment.StackTrace%2A>      ## 프로젝트 형식에 따라 가용성 | 프로젝트 형식을 | 사용 가능한 |   |------------------|---------------|   | Windows Forms 응용 프로그램 | **Yes**|   | 클래스 라이브러리 | **Yes**|   | 콘솔 응용 프로그램 | **Yes**|   | Windows Forms 컨트롤 라이브러리 | **Yes**|   | 웹 컨트롤 라이브러리 | 더 |   | Windows 서비스 | **Yes**|   | 웹 사이트 | 더 |"
  example:
  - "This example uses the `My.Application.Info.StackTrace` property to display the stack trace of the application from the point at which the code executes.  \n  \n [!code-vb[VbVbalrMyApplication#27](~/add/codesnippet/visualbasic/VbVbalrMyApplication/Form1.vb#27)]"
  syntax:
    content: public string StackTrace { get; }
    return:
      type: System.String
      description: "A <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> 현재 스택 추적 정보를 포함 합니다. 반환 값 <xref:System.String>입니다.</xref:System.String> 가능 합니다."
  overload: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.StackTrace*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "요청 된 스택 추적 정보가 범위를 벗어났습니다."
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Title
  id: Title
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  langs:
  - csharp
  name: Title
  nameWithType: AssemblyInfo.Title
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Title
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "연결 된 응용 프로그램 제목을 가져옵니다."
  remarks: "`My.Application.Info.Title` 속성 관련 된 응용 프로그램 제목을 가져옵니다.       에 대 한 값을 변경 하 여 제목을 변경할 수 **제목** 에 **어셈블리 정보** 에서 액세스할 수 있는 대화 상자는 **응용 프로그램** 의 창은 **프로젝트 디자이너**합니다.      ## 프로젝트 형식에 따라 가용성 | 프로젝트 형식을 | 사용 가능한 |   |------------------|---------------|   | Windows Forms 응용 프로그램 | **Yes**|   | 클래스 라이브러리 | **Yes**|   | 콘솔 응용 프로그램 | **Yes**|   | Windows Forms 컨트롤 라이브러리 | **Yes**|   | 웹 컨트롤 라이브러리 | 더 |   | Windows 서비스 | **Yes**|   | 웹 사이트 | 더 |"
  example:
  - "This example uses the `My.Application.Info.Title` property to display the title associated with the application.  \n  \n [!code-vb[VbVbalrMyApplication#28](~/add/codesnippet/visualbasic/VbVbalrMyApplication/Form1.vb#28)]"
  syntax:
    content: public string Title { get; }
    return:
      type: System.String
      description: "A <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> 포함 하는 <xref:System.Reflection.AssemblyTitleAttribute>응용 프로그램과 연관.</xref:System.Reflection.AssemblyTitleAttribute>"
  overload: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Title*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "어셈블리에 없는 <xref:System.Reflection.AssemblyTitleAttribute>특성.</xref:System.Reflection.AssemblyTitleAttribute>"
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Trademark
  id: Trademark
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  langs:
  - csharp
  name: Trademark
  nameWithType: AssemblyInfo.Trademark
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Trademark
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "응용 프로그램에 대 한 연결 상표 정보를 가져옵니다."
  remarks: "`My.Application.Info.Trademark` 상표 정보는 응용 프로그램과 관련 된 속성을 가져옵니다.       상표 정보에 대 한 값을 변경 하 여 변경할 수 있습니다 **상표** 에 **어셈블리 정보** 에서 액세스할 수 있는 대화 상자는 **응용 프로그램** 의 창 고 **프로젝트 디자이너**합니다.      ## 프로젝트 형식에 따라 가용성 | 프로젝트 형식을 | 사용 가능한 |   |------------------|---------------|   | Windows Forms 응용 프로그램 | **Yes**|   | 클래스 라이브러리 | **Yes**|   | 콘솔 응용 프로그램 | **Yes**|   | Windows Forms 컨트롤 라이브러리 | **Yes**|   | 웹 컨트롤 라이브러리 | 더 |   | Windows 서비스 | **Yes**|   | 웹 사이트 | 더 |"
  example:
  - "This example uses the `My.Application.Info.Trademark` property to display the trademark information associated with the application.  \n  \n [!code-vb[VbVbalrMyApplication#29](~/add/codesnippet/visualbasic/VbVbalrMyApplication/Form1.vb#29)]"
  syntax:
    content: public string Trademark { get; }
    return:
      type: System.String
      description: "A <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> 상표 정보를 포함 하는 응용 프로그램과 관련 된 합니다."
  overload: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Trademark*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "어셈블리에 없는 <xref:System.Reflection.AssemblyTrademarkAttribute>특성.</xref:System.Reflection.AssemblyTrademarkAttribute>"
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Version
  id: Version
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  langs:
  - csharp
  name: Version
  nameWithType: AssemblyInfo.Version
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Version
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "응용 프로그램의 버전 번호를 가져옵니다."
  remarks: "`My.Application.Info.Version` 속성 get는 <xref:System.Version>응용 프로그램의 버전 번호를 포함 하는 개체입니다.</xref:System.Version> 사용할 수 있습니다는 <xref:System.Version.Major%2A>, <xref:System.Version.Minor%2A>, <xref:System.Version.Build%2A>, 및 <xref:System.Version.Revision%2A>의 속성은 <xref:System.Version>응용 프로그램에 대 한 특정 버전 정보에 액세스할 수 있는 개체입니다.</xref:System.Version> </xref:System.Version.Revision%2A> </xref:System.Version.Build%2A> </xref:System.Version.Minor%2A> </xref:System.Version.Major%2A>       ClickOnce 배포 응용 프로그램 사용 해야는 <xref:System.Deployment.Application.ApplicationDeployment.CurrentVersion%2A>의 속성은 <xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.Deployment%2A>속성.</xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.Deployment%2A> </xref:System.Deployment.Application.ApplicationDeployment.CurrentVersion%2A>      ## 프로젝트 형식에 따라 가용성 | 프로젝트 형식을 | 사용 가능한 |   |------------------|---------------|   | Windows Forms 응용 프로그램 | **Yes**|   | 클래스 라이브러리 | **Yes**|   | 콘솔 응용 프로그램 | **Yes**|   | Windows Forms 컨트롤 라이브러리 | **Yes**|   | 웹 컨트롤 라이브러리 | 더 |   | Windows 서비스 | **Yes**|   | 웹 사이트 | 더 |"
  example:
  - "This example uses the `My.Application.Info.Version` property to display the version of the application.  \n  \n [!code-vb[VbVbalrMyApplication#30](~/add/codesnippet/visualbasic/VbVbalrMyApplication/Form1.vb#30)]"
  syntax:
    content: public Version Version { get; }
    return:
      type: System.Version
      description: "A <xref:System.Version>응용 프로그램의 버전 번호를 포함 하는 개체입니다.</xref:System.Version>"
  overload: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Version*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "응용 프로그램에가 어셈블리 버전에 액세스할 수 있는 권한이 없습니다."
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.WorkingSet
  id: WorkingSet
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  langs:
  - csharp
  name: WorkingSet
  nameWithType: AssemblyInfo.WorkingSet
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.WorkingSet
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "프로세스 컨텍스트에 매핑되는 실제 메모리의 양을 가져옵니다."
  remarks: "`My.Application.Info.WorkingSet` 속성에는 동일한 동작으로는 <xref:System.Environment.WorkingSet%2A>속성.</xref:System.Environment.WorkingSet%2A>      > [!NOTE] >이 속성은 항상 Windows 98 및 Windows Millennium Edition에 대해서는 0을 반환 합니다.      ## 프로젝트 형식에 따라 가용성 | 프로젝트 형식을 | 사용 가능한 |   |------------------|---------------|   | Windows Forms 응용 프로그램 | **Yes**|   | 클래스 라이브러리 | **Yes**|   | 콘솔 응용 프로그램 | **Yes**|   | Windows Forms 컨트롤 라이브러리 | **Yes**|   | 웹 컨트롤 라이브러리 | 더 |   | Windows 서비스 | **Yes**|   | 웹 사이트 | 더 |"
  example:
  - "This example uses the `My.Application.Info.WorkingSet` property to display the number of bytes of physical memory mapped to the application.  \n  \n [!code-vb[VbVbalrMyApplication#31](~/add/codesnippet/visualbasic/VbVbalrMyApplication/Form1.vb#31)]"
  syntax:
    content: public long WorkingSet { get; }
    return:
      type: System.Int64
      description: "A <xref uid=&quot;langword_csharp_Long&quot; name=&quot;Long&quot; href=&quot;&quot;> </xref> 프로세스 컨텍스트에 매핑되는 실제 메모리의 바이트 수를 포함 하 합니다."
  overload: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.WorkingSet*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "부분 신뢰 상태와 사용자의 상황에 필요한 권한이 부족 합니다."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.AppDomainUnloadedException
  parent: System
  isExternal: false
  name: AppDomainUnloadedException
  nameWithType: AppDomainUnloadedException
  fullName: System.AppDomainUnloadedException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.#ctor(System.Reflection.Assembly)
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  isExternal: false
  name: AssemblyInfo(Assembly)
  nameWithType: AssemblyInfo.AssemblyInfo(Assembly)
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.AssemblyInfo(Assembly)
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: true
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.AssemblyName
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  isExternal: false
  name: AssemblyName
  nameWithType: AssemblyInfo.AssemblyName
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.AssemblyName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.CompanyName
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  isExternal: false
  name: CompanyName
  nameWithType: AssemblyInfo.CompanyName
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.CompanyName
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Copyright
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  isExternal: false
  name: Copyright
  nameWithType: AssemblyInfo.Copyright
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Copyright
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Description
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  isExternal: false
  name: Description
  nameWithType: AssemblyInfo.Description
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Description
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.DirectoryPath
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  isExternal: false
  name: DirectoryPath
  nameWithType: AssemblyInfo.DirectoryPath
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.DirectoryPath
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.LoadedAssemblies
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  isExternal: false
  name: LoadedAssemblies
  nameWithType: AssemblyInfo.LoadedAssemblies
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.LoadedAssemblies
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Reflection.Assembly}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<Assembly>
  nameWithType: ReadOnlyCollection<Assembly>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Reflection.Assembly>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Reflection.Assembly>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Reflection.Assembly
    name: Assembly
    nameWithType: Assembly
    fullName: Assembly
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.ProductName
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  isExternal: false
  name: ProductName
  nameWithType: AssemblyInfo.ProductName
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.ProductName
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.StackTrace
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  isExternal: false
  name: StackTrace
  nameWithType: AssemblyInfo.StackTrace
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.StackTrace
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Title
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  isExternal: false
  name: Title
  nameWithType: AssemblyInfo.Title
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Title
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Trademark
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  isExternal: false
  name: Trademark
  nameWithType: AssemblyInfo.Trademark
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Trademark
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Version
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  isExternal: false
  name: Version
  nameWithType: AssemblyInfo.Version
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Version
- uid: System.Version
  parent: System
  isExternal: true
  name: Version
  nameWithType: Version
  fullName: System.Version
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.WorkingSet
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  isExternal: false
  name: WorkingSet
  nameWithType: AssemblyInfo.WorkingSet
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.WorkingSet
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.#ctor*
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  isExternal: false
  name: AssemblyInfo
  nameWithType: AssemblyInfo.AssemblyInfo
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.AssemblyName*
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  isExternal: false
  name: AssemblyName
  nameWithType: AssemblyInfo.AssemblyName
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.CompanyName*
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  isExternal: false
  name: CompanyName
  nameWithType: AssemblyInfo.CompanyName
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Copyright*
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  isExternal: false
  name: Copyright
  nameWithType: AssemblyInfo.Copyright
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Description*
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  isExternal: false
  name: Description
  nameWithType: AssemblyInfo.Description
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.DirectoryPath*
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  isExternal: false
  name: DirectoryPath
  nameWithType: AssemblyInfo.DirectoryPath
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.LoadedAssemblies*
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  isExternal: false
  name: LoadedAssemblies
  nameWithType: AssemblyInfo.LoadedAssemblies
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.ProductName*
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  isExternal: false
  name: ProductName
  nameWithType: AssemblyInfo.ProductName
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.StackTrace*
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  isExternal: false
  name: StackTrace
  nameWithType: AssemblyInfo.StackTrace
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Title*
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  isExternal: false
  name: Title
  nameWithType: AssemblyInfo.Title
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Trademark*
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  isExternal: false
  name: Trademark
  nameWithType: AssemblyInfo.Trademark
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Version*
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  isExternal: false
  name: Version
  nameWithType: AssemblyInfo.Version
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.WorkingSet*
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  isExternal: false
  name: WorkingSet
  nameWithType: AssemblyInfo.WorkingSet
