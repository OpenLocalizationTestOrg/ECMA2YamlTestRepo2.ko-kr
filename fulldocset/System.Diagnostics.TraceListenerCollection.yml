### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.TraceListenerCollection
  id: TraceListenerCollection
  children:
  - System.Diagnostics.TraceListenerCollection.Add(System.Diagnostics.TraceListener)
  - System.Diagnostics.TraceListenerCollection.AddRange(System.Diagnostics.TraceListener[])
  - System.Diagnostics.TraceListenerCollection.AddRange(System.Diagnostics.TraceListenerCollection)
  - System.Diagnostics.TraceListenerCollection.Clear
  - System.Diagnostics.TraceListenerCollection.Contains(System.Diagnostics.TraceListener)
  - System.Diagnostics.TraceListenerCollection.CopyTo(System.Diagnostics.TraceListener[],System.Int32)
  - System.Diagnostics.TraceListenerCollection.Count
  - System.Diagnostics.TraceListenerCollection.GetEnumerator
  - System.Diagnostics.TraceListenerCollection.IndexOf(System.Diagnostics.TraceListener)
  - System.Diagnostics.TraceListenerCollection.Insert(System.Int32,System.Diagnostics.TraceListener)
  - System.Diagnostics.TraceListenerCollection.Item(System.Int32)
  - System.Diagnostics.TraceListenerCollection.Item(System.String)
  - System.Diagnostics.TraceListenerCollection.Remove(System.Diagnostics.TraceListener)
  - System.Diagnostics.TraceListenerCollection.Remove(System.String)
  - System.Diagnostics.TraceListenerCollection.RemoveAt(System.Int32)
  - System.Diagnostics.TraceListenerCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Diagnostics.TraceListenerCollection.System#Collections#ICollection#IsSynchronized
  - System.Diagnostics.TraceListenerCollection.System#Collections#ICollection#SyncRoot
  - System.Diagnostics.TraceListenerCollection.System#Collections#IList#Add(System.Object)
  - System.Diagnostics.TraceListenerCollection.System#Collections#IList#Contains(System.Object)
  - System.Diagnostics.TraceListenerCollection.System#Collections#IList#IndexOf(System.Object)
  - System.Diagnostics.TraceListenerCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Diagnostics.TraceListenerCollection.System#Collections#IList#IsFixedSize
  - System.Diagnostics.TraceListenerCollection.System#Collections#IList#IsReadOnly
  - System.Diagnostics.TraceListenerCollection.System#Collections#IList#Item(System.Int32)
  - System.Diagnostics.TraceListenerCollection.System#Collections#IList#Remove(System.Object)
  langs:
  - csharp
  name: TraceListenerCollection
  nameWithType: TraceListenerCollection
  fullName: System.Diagnostics.TraceListenerCollection
  type: Class
  summary: "스레드로부터 안전한 목록이 제공 <xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref> 개체입니다."
  remarks: "에 대 한 출력 수신기를 지정할 수 있습니다 목록이 사용 되는 <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName>및 <xref:System.Diagnostics.Debug.Listeners%2A?displayProperty=fullName>컬렉션.</xref:System.Diagnostics.Debug.Listeners%2A?displayProperty=fullName> </xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName> 이 클래스의 인스턴스를 만들 수 없습니다.       이 목록은 스레드로부터 안전한 목록 및 열거자에 액세스 하는 데 사용 하는 메서드 동기화 잠금을 수행 하지 않습니다. 대신, 컬렉션을 복사 하 고 복사본을 수정 고 컬렉션의 복사본에 대 한 참조 설정 됩니다. 와 같은 메서드 <xref:System.Diagnostics.TraceListenerCollection.Add%2A>, <xref:System.Diagnostics.TraceListenerCollection.Remove%2A>, 및 <xref:System.Diagnostics.TraceListenerCollection.Clear%2A>컬렉션의 요소를 수정 합니다.</xref:System.Diagnostics.TraceListenerCollection.Clear%2A> </xref:System.Diagnostics.TraceListenerCollection.Remove%2A> </xref:System.Diagnostics.TraceListenerCollection.Add%2A>       있습니다 클래스를 제공는 <xref:System.Diagnostics.TraceListenerCollection.Count%2A>속성 목록에 대 한 정보에 대 한.</xref:System.Diagnostics.TraceListenerCollection.Count%2A> 또한 다음 메서드를 제공: <xref:System.Diagnostics.TraceListenerCollection.Contains%2A>, <xref:System.Diagnostics.TraceListenerCollection.GetEnumerator%2A> <xref:System.Diagnostics.TraceListenerCollection.IndexOf%2A>.</xref:System.Diagnostics.TraceListenerCollection.IndexOf%2A> </xref:System.Diagnostics.TraceListenerCollection.GetEnumerator%2A> </xref:System.Diagnostics.TraceListenerCollection.Contains%2A>       이 클래스는 또한 목록을 수정 하려면 다음 방법 제공: <xref:System.Diagnostics.TraceListenerCollection.Add%2A>, <xref:System.Diagnostics.TraceListenerCollection.Clear%2A>, <xref:System.Diagnostics.TraceListenerCollection.Insert%2A>, 및 <xref:System.Diagnostics.TraceListenerCollection.Remove%2A>.</xref:System.Diagnostics.TraceListenerCollection.Remove%2A> </xref:System.Diagnostics.TraceListenerCollection.Insert%2A> </xref:System.Diagnostics.TraceListenerCollection.Clear%2A> </xref:System.Diagnostics.TraceListenerCollection.Add%2A> <xref:System.Diagnostics.TraceListenerCollection.CopyTo%2A>메서드 목록의 일부를 배열에 복사 합니다.</xref:System.Diagnostics.TraceListenerCollection.CopyTo%2A> <xref:System.Diagnostics.TraceListenerCollection.RemoveAt%2A>메서드는 지정한 인덱스 번호에 목록 멤버를 삭제 합니다.</xref:System.Diagnostics.TraceListenerCollection.RemoveAt%2A>"
  example:
  - "The following example creates a <xref:System.Diagnostics.TextWriterTraceListener> that writes to the console screen. The code then adds the new listener to the <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName>.  \n  \n [!code-cs[Classic Trace.Listeners Example#1](~/add/codesnippet/csharp/t-system.diagnostics.tra_1_1.cs)]\n [!code-vb[Classic Trace.Listeners Example#1](~/add/codesnippet/visualbasic/t-system.diagnostics.tra_1_1.vb)]\n [!code-cpp[Classic Trace.Listeners Example#1](~/add/codesnippet/cpp/t-system.diagnostics.tra_1_1.cpp)]"
  syntax:
    content: 'public class TraceListenerCollection : System.Collections.IList'
  inheritance:
  - System.Object
  implements:
  - System.Collections.IList
  inheritedMembers: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListenerCollection.Add(System.Diagnostics.TraceListener)
  id: Add(System.Diagnostics.TraceListener)
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  name: Add(TraceListener)
  nameWithType: TraceListenerCollection.Add(TraceListener)
  fullName: System.Diagnostics.TraceListenerCollection.Add(TraceListener)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "추가 <xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref> 목록에 있습니다."
  remarks: ''
  example:
  - "The following example creates a <xref:System.Diagnostics.TextWriterTraceListener> that outputs to the console screen. The code then adds the new listener to the <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName>.  \n  \n [!code-cpp[Classic TraceListenerCollection.Add Example#1](~/add/codesnippet/cpp/06848b43-b480-461b-8d6e-_1.cpp)]\n [!code-vb[Classic TraceListenerCollection.Add Example#1](~/add/codesnippet/visualbasic/06848b43-b480-461b-8d6e-_1.vb)]\n [!code-cs[Classic TraceListenerCollection.Add Example#1](~/add/codesnippet/csharp/06848b43-b480-461b-8d6e-_1.cs)]"
  syntax:
    content: public int Add (System.Diagnostics.TraceListener listener);
    parameters:
    - id: listener
      type: System.Diagnostics.TraceListener
      description: "A <xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref> 목록에 추가 합니다."
    return:
      type: System.Int32
      description: "새 수신기 삽입 된 위치입니다."
  overload: System.Diagnostics.TraceListenerCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListenerCollection.AddRange(System.Diagnostics.TraceListener[])
  id: AddRange(System.Diagnostics.TraceListener[])
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  name: AddRange(TraceListener[])
  nameWithType: TraceListenerCollection.AddRange(TraceListener[])
  fullName: System.Diagnostics.TraceListenerCollection.AddRange(TraceListener[])
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "배열을 추가 <xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref> 목록에는 개체입니다."
  syntax:
    content: public void AddRange (System.Diagnostics.TraceListener[] value);
    parameters:
    - id: value
      type: System.Diagnostics.TraceListener[]
      description: "배열을 <xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref> 목록에 추가할 개체입니다."
  overload: System.Diagnostics.TraceListenerCollection.AddRange*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>value</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Diagnostics.TraceListenerCollection.AddRange(System.Diagnostics.TraceListenerCollection)
  id: AddRange(System.Diagnostics.TraceListenerCollection)
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  name: AddRange(TraceListenerCollection)
  nameWithType: TraceListenerCollection.AddRange(TraceListenerCollection)
  fullName: System.Diagnostics.TraceListenerCollection.AddRange(TraceListenerCollection)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "다른의 내용을 추가 <xref href=&quot;System.Diagnostics.TraceListenerCollection&quot;> </xref> 목록에 있습니다."
  syntax:
    content: public void AddRange (System.Diagnostics.TraceListenerCollection value);
    parameters:
    - id: value
      type: System.Diagnostics.TraceListenerCollection
      description: "다른 <xref href=&quot;System.Diagnostics.TraceListenerCollection&quot;> </xref> 내용이 목록에 추가 됩니다."
  overload: System.Diagnostics.TraceListenerCollection.AddRange*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>value</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Diagnostics.TraceListenerCollection.Clear
  id: Clear
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: TraceListenerCollection.Clear()
  fullName: System.Diagnostics.TraceListenerCollection.Clear()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "목록에서 모든 수신기를 지웁니다."
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Diagnostics.TraceListenerCollection.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListenerCollection.Contains(System.Diagnostics.TraceListener)
  id: Contains(System.Diagnostics.TraceListener)
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  name: Contains(TraceListener)
  nameWithType: TraceListenerCollection.Contains(TraceListener)
  fullName: System.Diagnostics.TraceListenerCollection.Contains(TraceListener)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "목록에 지정된 된 수신기 포함 되어 있는지 여부를 확인 합니다."
  remarks: "Contains 메서드의 존재 여부를 확인할 수는 <xref:System.Diagnostics.TraceListener>추가 작업을 하기 전에.</xref:System.Diagnostics.TraceListener>"
  syntax:
    content: public bool Contains (System.Diagnostics.TraceListener listener);
    parameters:
    - id: listener
      type: System.Diagnostics.TraceListener
      description: "A <xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref> 목록에서 찾을 수 있습니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>목록에 수신기가 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Diagnostics.TraceListenerCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListenerCollection.CopyTo(System.Diagnostics.TraceListener[],System.Int32)
  id: CopyTo(System.Diagnostics.TraceListener[],System.Int32)
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  name: CopyTo(TraceListener[],Int32)
  nameWithType: TraceListenerCollection.CopyTo(TraceListener[],Int32)
  fullName: System.Diagnostics.TraceListenerCollection.CopyTo(TraceListener[],Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "현재 섹션 복사 <xref href=&quot;System.Diagnostics.TraceListenerCollection&quot;> </xref> 지정된 된 인덱스에 지정 된 배열 목록입니다."
  syntax:
    content: public void CopyTo (System.Diagnostics.TraceListener[] listeners, int index);
    parameters:
    - id: listeners
      type: System.Diagnostics.TraceListener[]
      description: "형식의 배열 <xref:System.Array>에 요소를 복사해올.</xref:System.Array>"
    - id: index
      type: System.Int32
      description: "현재 목록에서 복사 하는 시작 인덱스 번호입니다."
  overload: System.Diagnostics.TraceListenerCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListenerCollection.Count
  id: Count
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  name: Count
  nameWithType: TraceListenerCollection.Count
  fullName: System.Diagnostics.TraceListenerCollection.Count
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "목록에서 수신기 수를 가져옵니다."
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "목록에서 수신기의 수입니다."
  overload: System.Diagnostics.TraceListenerCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListenerCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: TraceListenerCollection.GetEnumerator()
  fullName: System.Diagnostics.TraceListenerCollection.GetEnumerator()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "이 목록에 대 한 열거자를 가져옵니다."
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "<xref:System.Collections.IEnumerator>.</xref:System.Collections.IEnumerator> 형식의 열거자"
  overload: System.Diagnostics.TraceListenerCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListenerCollection.IndexOf(System.Diagnostics.TraceListener)
  id: IndexOf(System.Diagnostics.TraceListener)
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  name: IndexOf(TraceListener)
  nameWithType: TraceListenerCollection.IndexOf(TraceListener)
  fullName: System.Diagnostics.TraceListenerCollection.IndexOf(TraceListener)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "지정된 된 수신기의 인덱스를 가져옵니다."
  syntax:
    content: public int IndexOf (System.Diagnostics.TraceListener listener);
    parameters:
    - id: listener
      type: System.Diagnostics.TraceListener
      description: "A <xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref> 목록에서 찾을 수 있습니다."
    return:
      type: System.Int32
      description: "목록에 찾을 수 있는 경우 수신기의 인덱스 그렇지 않으면-1입니다."
  overload: System.Diagnostics.TraceListenerCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListenerCollection.Insert(System.Int32,System.Diagnostics.TraceListener)
  id: Insert(System.Int32,System.Diagnostics.TraceListener)
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  name: Insert(Int32,TraceListener)
  nameWithType: TraceListenerCollection.Insert(Int32,TraceListener)
  fullName: System.Diagnostics.TraceListenerCollection.Insert(Int32,TraceListener)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "수신기를 지정된 된 인덱스에 삽입합니다."
  remarks: "인덱스 목록의 항목 수와 같으면 수신기 목록의 끝에 추가 됩니다.       인덱스는&0;부터 시작 합니다. 따라서 세 번째 위치에 수신기를 삽입 하려는 경우 호출 해야 `myTraceListenerColl.Insert(2, myNewListener)`합니다."
  syntax:
    content: public void Insert (int index, System.Diagnostics.TraceListener listener);
    parameters:
    - id: index
      type: System.Int32
      description: "새 삽입 하려면 목록에서 위치 <xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref>합니다."
    - id: listener
      type: System.Diagnostics.TraceListener
      description: "A <xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref> 를 목록에 삽입 합니다."
  overload: System.Diagnostics.TraceListenerCollection.Insert*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> index </code> 목록에 유효한 인덱스가 아닙니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>listener</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Diagnostics.TraceListenerCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: TraceListenerCollection.Item(Int32)
  fullName: System.Diagnostics.TraceListenerCollection.Item(Int32)
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "가져오거나는 <xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref> 지정 된 인덱스입니다."
  remarks: "인덱스는&0;부터 시작 합니다. 따라서&1;을 빼야 위치는 특정 <xref:System.Diagnostics.TraceListener> <xref:System.Diagnostics.TraceListener>.</xref:System.Diagnostics.TraceListener> 액세스할 수</xref:System.Diagnostics.TraceListener> 의 숫자에서 예를 들어, 세 번째 가져오려는 <xref:System.Diagnostics.TraceListener>를 지정 하면 `myTraceListenerColl[2]`.</xref:System.Diagnostics.TraceListener>"
  syntax:
    content: public System.Diagnostics.TraceListener this[int i] { get; set; }
    parameters:
    - id: i
      type: System.Int32
      description: "0부터 시작 인덱스는 <xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref> 목록에서 가져올 수 있습니다."
    return:
      type: System.Diagnostics.TraceListener
      description: "A <xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref> 지정 된 인덱스입니다."
  overload: System.Diagnostics.TraceListenerCollection.Item*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "값은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Diagnostics.TraceListenerCollection.Item(System.String)
  id: Item(System.String)
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  name: Item(String)
  nameWithType: TraceListenerCollection.Item(String)
  fullName: System.Diagnostics.TraceListenerCollection.Item(String)
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "첫 번째 <xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref> 지정 된 이름의 목록에서입니다."
  remarks: "<xref:System.Diagnostics.TraceListenerCollection.Item%2A>속성은 이름을 검색할 때 대/소문자 구분.</xref:System.Diagnostics.TraceListenerCollection.Item%2A> 즉, 두 수신기 이름 &quot;Lname&quot; 및 &quot;lname&quot;가 있는 경우 <xref:System.Diagnostics.TraceListenerCollection.Item%2A>속성만 찾을 수는 <xref:System.Diagnostics.TraceListener>와 <xref:System.Diagnostics.TraceListener.Name%2A>지정 하는, 둘 중 하나입니다.</xref:System.Diagnostics.TraceListener.Name%2A> </xref:System.Diagnostics.TraceListener> </xref:System.Diagnostics.TraceListenerCollection.Item%2A>"
  syntax:
    content: public System.Diagnostics.TraceListener this[string name] { get; }
    parameters:
    - id: name
      type: System.String
      description: "이름에서 <xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref> 목록에서 가져올 수 있습니다."
    return:
      type: System.Diagnostics.TraceListener
      description: "첫 번째 <xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref> 주어진된 <xref:System.Diagnostics.TraceListener.Name*>.</xref:System.Diagnostics.TraceListener.Name*> 를 사용 하 여 목록에서 이 항목을 반환 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 없으면 <xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref> 지정 된 이름의 찾을 수 있습니다."
  overload: System.Diagnostics.TraceListenerCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListenerCollection.Remove(System.Diagnostics.TraceListener)
  id: Remove(System.Diagnostics.TraceListener)
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  name: Remove(TraceListener)
  nameWithType: TraceListenerCollection.Remove(TraceListener)
  fullName: System.Diagnostics.TraceListenerCollection.Remove(TraceListener)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "지정 된 컬렉션에서 제거 <xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref>합니다."
  syntax:
    content: public void Remove (System.Diagnostics.TraceListener listener);
    parameters:
    - id: listener
      type: System.Diagnostics.TraceListener
      description: "A <xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref> 를 목록에서 제거 합니다."
  overload: System.Diagnostics.TraceListenerCollection.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListenerCollection.Remove(System.String)
  id: Remove(System.String)
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  name: Remove(String)
  nameWithType: TraceListenerCollection.Remove(String)
  fullName: System.Diagnostics.TraceListenerCollection.Remove(String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "첫 번째 컬렉션에서 제거 <xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref> 지정 된 이름입니다."
  remarks: "`name` 매개 변수는 대/소문자 구분 합니다. 즉, &quot;rname&quot; 및 &quot;rname&quot;, 이라는 이름의 두 수신기가 있는 경우는 <xref:System.Diagnostics.TraceListenerCollection.Remove%2A>메서드 이름을 지정 하는 특정 수신기를 찾을 수 있습니다.</xref:System.Diagnostics.TraceListenerCollection.Remove%2A>"
  syntax:
    content: public void Remove (string name);
    parameters:
    - id: name
      type: System.String
      description: "이름에서 <xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref> 를 목록에서 제거 합니다."
  overload: System.Diagnostics.TraceListenerCollection.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListenerCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: TraceListenerCollection.RemoveAt(Int32)
  fullName: System.Diagnostics.TraceListenerCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "컬렉션에서 제거 된 <xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref> 지정 된 인덱스입니다."
  remarks: "인덱스는&0;부터 시작 합니다. 따라서&1;을 빼야 위치는 특정 <xref:System.Diagnostics.TraceListener> <xref:System.Diagnostics.TraceListener>.</xref:System.Diagnostics.TraceListener> 삭제할</xref:System.Diagnostics.TraceListener> 의 숫자에서 예를 들어, 세 번째 작업을 제거 하려면 <xref:System.Diagnostics.TraceListener>을 지정 하면 `myTraceListenerColl.RemoveAt(2)`.</xref:System.Diagnostics.TraceListener>"
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "0부터 시작 인덱스는 <xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref> 를 목록에서 제거 합니다."
  overload: System.Diagnostics.TraceListenerCollection.RemoveAt*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> index </code> 목록에 유효한 인덱스가 아닙니다."
  platform:
  - net462
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: TraceListenerCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Diagnostics.TraceListenerCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "현재 섹션 복사 <xref href=&quot;System.Diagnostics.TraceListenerCollection&quot;> </xref> 의 지정 된 배열 <xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref> 개체입니다."
  remarks: "사용 하 여는 <xref:System.Diagnostics.TraceListenerCollection.CopyTo%2A>의 메서드는 <xref:System.Diagnostics.TraceListenerCollection>배열에 컬렉션의 전체 또는 일부를 복사 하는 클래스입니다.</xref:System.Diagnostics.TraceListenerCollection> </xref:System.Diagnostics.TraceListenerCollection.CopyTo%2A>"
  syntax:
    content: void ICollection.CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "1 차원 배열을 <xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref> 에서 복사한 요소의 대상인 개체는 <xref href=&quot;System.Diagnostics.TraceListenerCollection&quot;> </xref>합니다. 배열에는&0;부터 시작 하는 인덱스가 있어야 합니다."
    - id: index
      type: System.Int32
      description: "인덱스는&0;부터 시작 `array` 복사가 시작 되는 합니다."
  overload: System.Diagnostics.TraceListenerCollection.System#Collections#ICollection#CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  isEii: true
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: TraceListenerCollection.System.Collections.ICollection.IsSynchronized
  fullName: System.Diagnostics.TraceListenerCollection.System.Collections.ICollection.IsSynchronized
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "에 대 한 액세스 여부를 나타내는 값을 가져옵니다는 <xref href=&quot;System.Diagnostics.TraceListenerCollection&quot;> </xref> 이 동기화 되었으면 (스레드로부터 안전 하 게 보호)."
  syntax:
    content: bool System.Collections.ICollection.IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "Always <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Diagnostics.TraceListenerCollection.System#Collections#ICollection#IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  isEii: true
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  name: System.Collections.ICollection.SyncRoot
  nameWithType: TraceListenerCollection.System.Collections.ICollection.SyncRoot
  fullName: System.Diagnostics.TraceListenerCollection.System.Collections.ICollection.SyncRoot
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "에 대 한 액세스를 동기화 하는 데 사용할 수 있는 개체를 가져옵니다는 <xref href=&quot;System.Diagnostics.TraceListenerCollection&quot;> </xref>합니다."
  syntax:
    content: object System.Collections.ICollection.SyncRoot { get; }
    return:
      type: System.Object
      description: "현재 <xref href=&quot;System.Diagnostics.TraceListenerCollection&quot;> </xref> 개체입니다."
  overload: System.Diagnostics.TraceListenerCollection.System#Collections#ICollection#SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#Add(System.Object)
  id: System#Collections#IList#Add(System.Object)
  isEii: true
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  name: System.Collections.IList.Add(Object)
  nameWithType: TraceListenerCollection.System.Collections.IList.Add(Object)
  fullName: System.Diagnostics.TraceListenerCollection.System.Collections.IList.Add(Object)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "추적 수신기를 추가 하는 <xref href=&quot;System.Diagnostics.TraceListenerCollection&quot;> </xref>합니다."
  remarks: "사용 하 여 <xref:System.Diagnostics.TraceListenerCollection.Add%2A>새 추적 수신기 컬렉션에 추가 하는 방법을.</xref:System.Diagnostics.TraceListenerCollection.Add%2A>"
  syntax:
    content: int IList.Add (object value);
    parameters:
    - id: value
      type: System.Object
      description: "에 추가할 개체는 <xref href=&quot;System.Diagnostics.TraceListenerCollection&quot;> </xref>합니다."
    return:
      type: System.Int32
      description: "새 추적 수신기 삽입 된 위치입니다."
  overload: System.Diagnostics.TraceListenerCollection.System#Collections#IList#Add*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>value</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>value</code> is not a <xref href=&quot;System.Diagnostics.TraceListener&quot;></xref>."
  platform:
  - net462
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#Contains(System.Object)
  id: System#Collections#IList#Contains(System.Object)
  isEii: true
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  name: System.Collections.IList.Contains(Object)
  nameWithType: TraceListenerCollection.System.Collections.IList.Contains(Object)
  fullName: System.Diagnostics.TraceListenerCollection.System.Collections.IList.Contains(Object)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "결정 여부는 <xref href=&quot;System.Diagnostics.TraceListenerCollection&quot;> </xref> 특정 개체를 포함 합니다."
  remarks: "사용 하 여는 <xref:System.Diagnostics.TraceListenerCollection.Contains%2A>의 메서드는 <xref:System.Diagnostics.TraceListenerCollection>특정 컬렉션에 포함 되어 있는지 여부를 확인 하려면 클래스 <xref:System.Diagnostics.TraceListener>개체입니다.</xref:System.Diagnostics.TraceListener> </xref:System.Diagnostics.TraceListenerCollection> </xref:System.Diagnostics.TraceListenerCollection.Contains%2A>"
  syntax:
    content: bool IList.Contains (object value);
    parameters:
    - id: value
      type: System.Object
      description: "찾을 개체의 <xref href=&quot;System.Diagnostics.TraceListenerCollection&quot;> </xref>합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우는 <xref:System.Object>에서 발견 되는 <xref href=&quot;System.Diagnostics.TraceListenerCollection&quot;> </xref>, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Object>"
  overload: System.Diagnostics.TraceListenerCollection.System#Collections#IList#Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#IndexOf(System.Object)
  id: System#Collections#IList#IndexOf(System.Object)
  isEii: true
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: TraceListenerCollection.System.Collections.IList.IndexOf(Object)
  fullName: System.Diagnostics.TraceListenerCollection.System.Collections.IList.IndexOf(Object)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "특정 개체의 인덱스를 결정은 <xref href=&quot;System.Diagnostics.TraceListenerCollection&quot;> </xref>합니다."
  remarks: "사용 하 여는 <xref:System.Diagnostics.TraceListenerCollection.IndexOf%2A>의 메서드는 <xref:System.Diagnostics.TraceListenerCollection>의 인덱스를 결정 하는 클래스는 <xref:System.Diagnostics.TraceListener>컬렉션의 개체입니다.</xref:System.Diagnostics.TraceListener> </xref:System.Diagnostics.TraceListenerCollection> </xref:System.Diagnostics.TraceListenerCollection.IndexOf%2A>"
  syntax:
    content: int IList.IndexOf (object value);
    parameters:
    - id: value
      type: System.Object
      description: "찾을 개체의 <xref href=&quot;System.Diagnostics.TraceListenerCollection&quot;> </xref>합니다."
    return:
      type: System.Int32
      description: "인덱스 <code> value </code> 하는 경우에 <xref href=&quot;System.Diagnostics.TraceListenerCollection&quot;> </xref>, 그렇지 않으면-1입니다."
  overload: System.Diagnostics.TraceListenerCollection.System#Collections#IList#IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  id: System#Collections#IList#Insert(System.Int32,System.Object)
  isEii: true
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: TraceListenerCollection.System.Collections.IList.Insert(Int32,Object)
  fullName: System.Diagnostics.TraceListenerCollection.System.Collections.IList.Insert(Int32,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "삽입 된 <xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref> 개체에서 지정된 된 위치에는 <xref href=&quot;System.Diagnostics.TraceListenerCollection&quot;> </xref>합니다."
  remarks: "사용 하 여는 <xref:System.Diagnostics.TraceListenerCollection.Insert%2A>의 메서드는 <xref:System.Diagnostics.TraceListenerCollection>삽입 하는 클래스는 <xref:System.Diagnostics.TraceListener>개체의 컬렉션에.</xref:System.Diagnostics.TraceListener> </xref:System.Diagnostics.TraceListenerCollection> </xref:System.Diagnostics.TraceListenerCollection.Insert%2A>"
  syntax:
    content: void IList.Insert (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: "인덱스&0;부터 시작 `value` 삽입 해야 합니다."
    - id: value
      type: System.Object
      description: "<xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref> 에 삽입할 개체는 <xref href=&quot;System.Diagnostics.TraceListenerCollection&quot;> </xref>합니다."
  overload: System.Diagnostics.TraceListenerCollection.System#Collections#IList#Insert*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>value</code>않습니다는 <xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref> 개체입니다."
  platform:
  - net462
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#IsFixedSize
  id: System#Collections#IList#IsFixedSize
  isEii: true
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  name: System.Collections.IList.IsFixedSize
  nameWithType: TraceListenerCollection.System.Collections.IList.IsFixedSize
  fullName: System.Diagnostics.TraceListenerCollection.System.Collections.IList.IsFixedSize
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "나타내는 값을 가져옵니다 여부는 <xref href=&quot;System.Diagnostics.TraceListenerCollection&quot;> </xref> 크기가 고정된 되어 있습니다."
  syntax:
    content: bool System.Collections.IList.IsFixedSize { get; }
    return:
      type: System.Boolean
      description: "Always <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Diagnostics.TraceListenerCollection.System#Collections#IList#IsFixedSize*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#IsReadOnly
  id: System#Collections#IList#IsReadOnly
  isEii: true
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  name: System.Collections.IList.IsReadOnly
  nameWithType: TraceListenerCollection.System.Collections.IList.IsReadOnly
  fullName: System.Diagnostics.TraceListenerCollection.System.Collections.IList.IsReadOnly
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "나타내는 값을 가져옵니다 여부는 <xref href=&quot;System.Diagnostics.TraceListenerCollection&quot;> </xref> 읽기 전용임"
  syntax:
    content: bool System.Collections.IList.IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "Always <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Diagnostics.TraceListenerCollection.System#Collections#IList#IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#Item(System.Int32)
  id: System#Collections#IList#Item(System.Int32)
  isEii: true
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  name: System.Collections.IList.Item(Int32)
  nameWithType: TraceListenerCollection.System.Collections.IList.Item(Int32)
  fullName: System.Diagnostics.TraceListenerCollection.System.Collections.IList.Item(Int32)
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "가져오거나는 <xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref> 에 지정된 된 인덱스에는 <xref href=&quot;System.Diagnostics.TraceListenerCollection&quot;> </xref>합니다."
  remarks: "사용 하 여는 <xref:System.Diagnostics.TraceListenerCollection.Item%2A>속성이 나 인덱서는 <xref:System.Diagnostics.TraceListenerCollection>가져오거나 설정 하는 클래스는 <xref:System.Diagnostics.TraceListener>컬렉션에.</xref:System.Diagnostics.TraceListener> </xref:System.Diagnostics.TraceListenerCollection> </xref:System.Diagnostics.TraceListenerCollection.Item%2A>"
  syntax:
    content: object System.Collections.IList.Item[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "0부터 시작 인덱스는 `value` 얻으려고 합니다."
    return:
      type: System.Object
      description: "<xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref> 지정 된 인덱스입니다."
  overload: System.Diagnostics.TraceListenerCollection.System#Collections#IList#Item*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#Remove(System.Object)
  id: System#Collections#IList#Remove(System.Object)
  isEii: true
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  name: System.Collections.IList.Remove(Object)
  nameWithType: TraceListenerCollection.System.Collections.IList.Remove(Object)
  fullName: System.Diagnostics.TraceListenerCollection.System.Collections.IList.Remove(Object)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "개체를 제거 하 고 <xref href=&quot;System.Diagnostics.TraceListenerCollection&quot;> </xref>합니다."
  remarks: "사용 하 여는 <xref:System.Diagnostics.TraceListenerCollection.Remove%2A>의 메서드는 <xref:System.Diagnostics.TraceListenerCollection>제거할 클래스는 <xref:System.Diagnostics.TraceListener>컬렉션에서.</xref:System.Diagnostics.TraceListener> </xref:System.Diagnostics.TraceListenerCollection> </xref:System.Diagnostics.TraceListenerCollection.Remove%2A>"
  syntax:
    content: void IList.Remove (object value);
    parameters:
    - id: value
      type: System.Object
      description: "제거할 개체의 <xref href=&quot;System.Diagnostics.TraceListenerCollection&quot;> </xref>합니다."
  overload: System.Diagnostics.TraceListenerCollection.System#Collections#IList#Remove*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Diagnostics.TraceListenerCollection.Add(System.Diagnostics.TraceListener)
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: Add(TraceListener)
  nameWithType: TraceListenerCollection.Add(TraceListener)
  fullName: System.Diagnostics.TraceListenerCollection.Add(TraceListener)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Diagnostics.TraceListener
  parent: System.Diagnostics
  isExternal: false
  name: TraceListener
  nameWithType: TraceListener
  fullName: System.Diagnostics.TraceListener
- uid: System.Diagnostics.TraceListenerCollection.AddRange(System.Diagnostics.TraceListener[])
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: AddRange(TraceListener[])
  nameWithType: TraceListenerCollection.AddRange(TraceListener[])
  fullName: System.Diagnostics.TraceListenerCollection.AddRange(TraceListener[])
- uid: System.Diagnostics.TraceListener[]
  parent: System.Diagnostics
  isExternal: false
  name: TraceListener
  nameWithType: TraceListener
  fullName: System.Diagnostics.TraceListener[]
  spec.csharp:
  - uid: System.Diagnostics.TraceListener
    name: TraceListener
    nameWithType: TraceListener
    fullName: TraceListener[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Diagnostics.TraceListenerCollection.AddRange(System.Diagnostics.TraceListenerCollection)
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: AddRange(TraceListenerCollection)
  nameWithType: TraceListenerCollection.AddRange(TraceListenerCollection)
  fullName: System.Diagnostics.TraceListenerCollection.AddRange(TraceListenerCollection)
- uid: System.Diagnostics.TraceListenerCollection
  parent: System.Diagnostics
  isExternal: false
  name: TraceListenerCollection
  nameWithType: TraceListenerCollection
  fullName: System.Diagnostics.TraceListenerCollection
- uid: System.Diagnostics.TraceListenerCollection.Clear
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: Clear()
  nameWithType: TraceListenerCollection.Clear()
  fullName: System.Diagnostics.TraceListenerCollection.Clear()
- uid: System.Diagnostics.TraceListenerCollection.Contains(System.Diagnostics.TraceListener)
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: Contains(TraceListener)
  nameWithType: TraceListenerCollection.Contains(TraceListener)
  fullName: System.Diagnostics.TraceListenerCollection.Contains(TraceListener)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.TraceListenerCollection.CopyTo(System.Diagnostics.TraceListener[],System.Int32)
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: CopyTo(TraceListener[],Int32)
  nameWithType: TraceListenerCollection.CopyTo(TraceListener[],Int32)
  fullName: System.Diagnostics.TraceListenerCollection.CopyTo(TraceListener[],Int32)
- uid: System.Diagnostics.TraceListenerCollection.Count
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: Count
  nameWithType: TraceListenerCollection.Count
  fullName: System.Diagnostics.TraceListenerCollection.Count
- uid: System.Diagnostics.TraceListenerCollection.GetEnumerator
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: TraceListenerCollection.GetEnumerator()
  fullName: System.Diagnostics.TraceListenerCollection.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Diagnostics.TraceListenerCollection.IndexOf(System.Diagnostics.TraceListener)
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: IndexOf(TraceListener)
  nameWithType: TraceListenerCollection.IndexOf(TraceListener)
  fullName: System.Diagnostics.TraceListenerCollection.IndexOf(TraceListener)
- uid: System.Diagnostics.TraceListenerCollection.Insert(System.Int32,System.Diagnostics.TraceListener)
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: Insert(Int32,TraceListener)
  nameWithType: TraceListenerCollection.Insert(Int32,TraceListener)
  fullName: System.Diagnostics.TraceListenerCollection.Insert(Int32,TraceListener)
- uid: System.Diagnostics.TraceListenerCollection.Item(System.Int32)
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: TraceListenerCollection.Item(Int32)
  fullName: System.Diagnostics.TraceListenerCollection.Item(Int32)
- uid: System.Diagnostics.TraceListenerCollection.Item(System.String)
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: Item(String)
  nameWithType: TraceListenerCollection.Item(String)
  fullName: System.Diagnostics.TraceListenerCollection.Item(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Diagnostics.TraceListenerCollection.Remove(System.Diagnostics.TraceListener)
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: Remove(TraceListener)
  nameWithType: TraceListenerCollection.Remove(TraceListener)
  fullName: System.Diagnostics.TraceListenerCollection.Remove(TraceListener)
- uid: System.Diagnostics.TraceListenerCollection.Remove(System.String)
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: Remove(String)
  nameWithType: TraceListenerCollection.Remove(String)
  fullName: System.Diagnostics.TraceListenerCollection.Remove(String)
- uid: System.Diagnostics.TraceListenerCollection.RemoveAt(System.Int32)
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: TraceListenerCollection.RemoveAt(Int32)
  fullName: System.Diagnostics.TraceListenerCollection.RemoveAt(Int32)
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: TraceListenerCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Diagnostics.TraceListenerCollection.System.Collections.ICollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#ICollection#IsSynchronized
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: TraceListenerCollection.System.Collections.ICollection.IsSynchronized
  fullName: System.Diagnostics.TraceListenerCollection.System.Collections.ICollection.IsSynchronized
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#ICollection#SyncRoot
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: TraceListenerCollection.System.Collections.ICollection.SyncRoot
  fullName: System.Diagnostics.TraceListenerCollection.System.Collections.ICollection.SyncRoot
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#Add(System.Object)
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: System.Collections.IList.Add(Object)
  nameWithType: TraceListenerCollection.System.Collections.IList.Add(Object)
  fullName: System.Diagnostics.TraceListenerCollection.System.Collections.IList.Add(Object)
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#Contains(System.Object)
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: System.Collections.IList.Contains(Object)
  nameWithType: TraceListenerCollection.System.Collections.IList.Contains(Object)
  fullName: System.Diagnostics.TraceListenerCollection.System.Collections.IList.Contains(Object)
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#IndexOf(System.Object)
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: TraceListenerCollection.System.Collections.IList.IndexOf(Object)
  fullName: System.Diagnostics.TraceListenerCollection.System.Collections.IList.IndexOf(Object)
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: TraceListenerCollection.System.Collections.IList.Insert(Int32,Object)
  fullName: System.Diagnostics.TraceListenerCollection.System.Collections.IList.Insert(Int32,Object)
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#IsFixedSize
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: TraceListenerCollection.System.Collections.IList.IsFixedSize
  fullName: System.Diagnostics.TraceListenerCollection.System.Collections.IList.IsFixedSize
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#IsReadOnly
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: System.Collections.IList.IsReadOnly
  nameWithType: TraceListenerCollection.System.Collections.IList.IsReadOnly
  fullName: System.Diagnostics.TraceListenerCollection.System.Collections.IList.IsReadOnly
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#Item(System.Int32)
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: System.Collections.IList.Item(Int32)
  nameWithType: TraceListenerCollection.System.Collections.IList.Item(Int32)
  fullName: System.Diagnostics.TraceListenerCollection.System.Collections.IList.Item(Int32)
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#Remove(System.Object)
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: System.Collections.IList.Remove(Object)
  nameWithType: TraceListenerCollection.System.Collections.IList.Remove(Object)
  fullName: System.Diagnostics.TraceListenerCollection.System.Collections.IList.Remove(Object)
- uid: System.Diagnostics.TraceListenerCollection.Add*
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: Add
  nameWithType: TraceListenerCollection.Add
- uid: System.Diagnostics.TraceListenerCollection.AddRange*
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: AddRange
  nameWithType: TraceListenerCollection.AddRange
- uid: System.Diagnostics.TraceListenerCollection.Clear*
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: Clear
  nameWithType: TraceListenerCollection.Clear
- uid: System.Diagnostics.TraceListenerCollection.Contains*
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: Contains
  nameWithType: TraceListenerCollection.Contains
- uid: System.Diagnostics.TraceListenerCollection.CopyTo*
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: CopyTo
  nameWithType: TraceListenerCollection.CopyTo
- uid: System.Diagnostics.TraceListenerCollection.Count*
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: Count
  nameWithType: TraceListenerCollection.Count
- uid: System.Diagnostics.TraceListenerCollection.GetEnumerator*
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: TraceListenerCollection.GetEnumerator
- uid: System.Diagnostics.TraceListenerCollection.IndexOf*
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: IndexOf
  nameWithType: TraceListenerCollection.IndexOf
- uid: System.Diagnostics.TraceListenerCollection.Insert*
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: Insert
  nameWithType: TraceListenerCollection.Insert
- uid: System.Diagnostics.TraceListenerCollection.Item*
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: Item
  nameWithType: TraceListenerCollection.Item
- uid: System.Diagnostics.TraceListenerCollection.Remove*
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: Remove
  nameWithType: TraceListenerCollection.Remove
- uid: System.Diagnostics.TraceListenerCollection.RemoveAt*
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: RemoveAt
  nameWithType: TraceListenerCollection.RemoveAt
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#ICollection#CopyTo*
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo
  nameWithType: TraceListenerCollection.System.Collections.ICollection.CopyTo
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#ICollection#IsSynchronized*
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: TraceListenerCollection.System.Collections.ICollection.IsSynchronized
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#ICollection#SyncRoot*
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: TraceListenerCollection.System.Collections.ICollection.SyncRoot
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#Add*
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: System.Collections.IList.Add
  nameWithType: TraceListenerCollection.System.Collections.IList.Add
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#Contains*
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: System.Collections.IList.Contains
  nameWithType: TraceListenerCollection.System.Collections.IList.Contains
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#IndexOf*
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: System.Collections.IList.IndexOf
  nameWithType: TraceListenerCollection.System.Collections.IList.IndexOf
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#Insert*
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: System.Collections.IList.Insert
  nameWithType: TraceListenerCollection.System.Collections.IList.Insert
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#IsFixedSize*
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: TraceListenerCollection.System.Collections.IList.IsFixedSize
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#IsReadOnly*
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: System.Collections.IList.IsReadOnly
  nameWithType: TraceListenerCollection.System.Collections.IList.IsReadOnly
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#Item*
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: System.Collections.IList.Item
  nameWithType: TraceListenerCollection.System.Collections.IList.Item
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#Remove*
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: System.Collections.IList.Remove
  nameWithType: TraceListenerCollection.System.Collections.IList.Remove
