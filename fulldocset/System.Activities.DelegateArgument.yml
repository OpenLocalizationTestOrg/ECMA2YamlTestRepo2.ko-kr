### YamlMime:ManagedReference
items:
- uid: System.Activities.DelegateArgument
  id: DelegateArgument
  children:
  - System.Activities.DelegateArgument.Direction
  - System.Activities.DelegateArgument.Get(System.Activities.ActivityContext)
  - System.Activities.DelegateArgument.GetLocation(System.Activities.ActivityContext)
  - System.Activities.DelegateArgument.Name
  - System.Activities.DelegateArgument.NameCore
  langs:
  - csharp
  name: DelegateArgument
  nameWithType: DelegateArgument
  fullName: System.Activities.DelegateArgument
  type: Class
  summary: "추상 기본 클래스 바인딩 터미널을 나타내는 내부 / 외부로 데이터 흐름을에 지는 <xref href=&quot;System.Activities.ActivityDelegate&quot;> </xref>합니다."
  syntax:
    content: 'public abstract class DelegateArgument : System.Activities.LocationReference'
  inheritance:
  - System.Object
  - System.Activities.LocationReference
  implements: []
  inheritedMembers:
  - System.Activities.LocationReference.Type
  - System.Activities.LocationReference.TypeCore
  platform:
  - net462
- uid: System.Activities.DelegateArgument.Direction
  id: Direction
  parent: System.Activities.DelegateArgument
  langs:
  - csharp
  name: Direction
  nameWithType: DelegateArgument.Direction
  fullName: System.Activities.DelegateArgument.Direction
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "가져옵니다는 <xref href=&quot;System.Activities.ArgumentDirection&quot;> </xref> 지정 하는 여부는 <xref href=&quot;System.Activities.DelegateArgument&quot;> </xref> 로 데이터 흐름을 나타내는 <xref href=&quot;System.Activities.ActivityDelegate&quot;> </xref>의 <xref href=&quot;System.Activities.ActivityDelegate&quot;> </xref>, 또는 내부 / 외부로 둘 다는 <xref href=&quot;System.Activities.ActivityDelegate&quot;> </xref>합니다."
  syntax:
    content: public System.Activities.ArgumentDirection Direction { get; }
    return:
      type: System.Activities.ArgumentDirection
      description: "통해 데이터 흐름의 방향을 지정 하는 열거형 값 중 하나는 <xref href=&quot;System.Activities.DelegateArgument&quot;> </xref>합니다."
  overload: System.Activities.DelegateArgument.Direction*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.DelegateArgument.Get(System.Activities.ActivityContext)
  id: Get(System.Activities.ActivityContext)
  parent: System.Activities.DelegateArgument
  langs:
  - csharp
  name: Get(ActivityContext)
  nameWithType: DelegateArgument.Get(ActivityContext)
  fullName: System.Activities.DelegateArgument.Get(ActivityContext)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "지정한 작업 컨텍스트를 사용 하 여 인수 값을 반환 합니다."
  syntax:
    content: public object Get (System.Activities.ActivityContext context);
    parameters:
    - id: context
      type: System.Activities.ActivityContext
      description: "현재 작업 컨텍스트입니다."
    return:
      type: System.Object
      description: "인수 값입니다."
  overload: System.Activities.DelegateArgument.Get*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.DelegateArgument.GetLocation(System.Activities.ActivityContext)
  id: GetLocation(System.Activities.ActivityContext)
  parent: System.Activities.DelegateArgument
  langs:
  - csharp
  name: GetLocation(ActivityContext)
  nameWithType: DelegateArgument.GetLocation(ActivityContext)
  fullName: System.Activities.DelegateArgument.GetLocation(ActivityContext)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "반환 된 <xref href=&quot;System.Activities.Location&quot;> </xref> 에서 참조 하는 값의는 <xref href=&quot;System.Activities.DelegateArgument&quot;> </xref>합니다."
  syntax:
    content: public override System.Activities.Location GetLocation (System.Activities.ActivityContext context);
    parameters:
    - id: context
      type: System.Activities.ActivityContext
      description: "현재 작업 컨텍스트입니다."
    return:
      type: System.Activities.Location
      description: "참조 하는 값의 위치는 <xref href=&quot;System.Activities.DelegateArgument&quot;> </xref>합니다."
  overload: System.Activities.DelegateArgument.GetLocation*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.DelegateArgument.Name
  id: Name
  parent: System.Activities.DelegateArgument
  langs:
  - csharp
  name: Name
  nameWithType: DelegateArgument.Name
  fullName: System.Activities.DelegateArgument.Name
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "이름을 가져오거나 설정 합니다.는 <xref href=&quot;System.Activities.DelegateArgument&quot;> </xref>합니다."
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "이름에서 <xref href=&quot;System.Activities.DelegateArgument&quot;> </xref>합니다."
  overload: System.Activities.DelegateArgument.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.DelegateArgument.NameCore
  id: NameCore
  parent: System.Activities.DelegateArgument
  langs:
  - csharp
  name: NameCore
  nameWithType: DelegateArgument.NameCore
  fullName: System.Activities.DelegateArgument.NameCore
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "<xref:System.Activities.DelegateArgument.Name*>.</xref:System.Activities.DelegateArgument.Name*> 에서 사용 하는 문자열 값을 가져옵니다."
  syntax:
    content: protected override string NameCore { get; }
    return:
      type: System.String
      description: "이름에서 <xref href=&quot;System.Activities.DelegateArgument&quot;> </xref>합니다."
  overload: System.Activities.DelegateArgument.NameCore*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Activities.LocationReference
  isExternal: false
  name: System.Activities.LocationReference
- uid: System.Activities.DelegateArgument.Direction
  parent: System.Activities.DelegateArgument
  isExternal: false
  name: Direction
  nameWithType: DelegateArgument.Direction
  fullName: System.Activities.DelegateArgument.Direction
- uid: System.Activities.ArgumentDirection
  parent: System.Activities
  isExternal: false
  name: ArgumentDirection
  nameWithType: ArgumentDirection
  fullName: System.Activities.ArgumentDirection
- uid: System.Activities.DelegateArgument.Get(System.Activities.ActivityContext)
  parent: System.Activities.DelegateArgument
  isExternal: false
  name: Get(ActivityContext)
  nameWithType: DelegateArgument.Get(ActivityContext)
  fullName: System.Activities.DelegateArgument.Get(ActivityContext)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Activities.ActivityContext
  parent: System.Activities
  isExternal: false
  name: ActivityContext
  nameWithType: ActivityContext
  fullName: System.Activities.ActivityContext
- uid: System.Activities.DelegateArgument.GetLocation(System.Activities.ActivityContext)
  parent: System.Activities.DelegateArgument
  isExternal: false
  name: GetLocation(ActivityContext)
  nameWithType: DelegateArgument.GetLocation(ActivityContext)
  fullName: System.Activities.DelegateArgument.GetLocation(ActivityContext)
- uid: System.Activities.Location
  parent: System.Activities
  isExternal: false
  name: Location
  nameWithType: Location
  fullName: System.Activities.Location
- uid: System.Activities.DelegateArgument.Name
  parent: System.Activities.DelegateArgument
  isExternal: false
  name: Name
  nameWithType: DelegateArgument.Name
  fullName: System.Activities.DelegateArgument.Name
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Activities.DelegateArgument.NameCore
  parent: System.Activities.DelegateArgument
  isExternal: false
  name: NameCore
  nameWithType: DelegateArgument.NameCore
  fullName: System.Activities.DelegateArgument.NameCore
- uid: System.Activities.DelegateArgument.Direction*
  parent: System.Activities.DelegateArgument
  isExternal: false
  name: Direction
  nameWithType: DelegateArgument.Direction
- uid: System.Activities.DelegateArgument.Get*
  parent: System.Activities.DelegateArgument
  isExternal: false
  name: Get
  nameWithType: DelegateArgument.Get
- uid: System.Activities.DelegateArgument.GetLocation*
  parent: System.Activities.DelegateArgument
  isExternal: false
  name: GetLocation
  nameWithType: DelegateArgument.GetLocation
- uid: System.Activities.DelegateArgument.Name*
  parent: System.Activities.DelegateArgument
  isExternal: false
  name: Name
  nameWithType: DelegateArgument.Name
- uid: System.Activities.DelegateArgument.NameCore*
  parent: System.Activities.DelegateArgument
  isExternal: false
  name: NameCore
  nameWithType: DelegateArgument.NameCore
