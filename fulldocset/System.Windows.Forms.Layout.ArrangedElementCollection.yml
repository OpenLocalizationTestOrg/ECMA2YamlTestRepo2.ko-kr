### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.Layout.ArrangedElementCollection
  id: ArrangedElementCollection
  children:
  - System.Windows.Forms.Layout.ArrangedElementCollection.CopyTo(System.Array,System.Int32)
  - System.Windows.Forms.Layout.ArrangedElementCollection.Count
  - System.Windows.Forms.Layout.ArrangedElementCollection.Equals(System.Object)
  - System.Windows.Forms.Layout.ArrangedElementCollection.GetEnumerator
  - System.Windows.Forms.Layout.ArrangedElementCollection.GetHashCode
  - System.Windows.Forms.Layout.ArrangedElementCollection.IsReadOnly
  - System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#ICollection#IsSynchronized
  - System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#ICollection#SyncRoot
  - System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Add(System.Object)
  - System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Clear
  - System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Contains(System.Object)
  - System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#IndexOf(System.Object)
  - System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#IsFixedSize
  - System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Item(System.Int32)
  - System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Remove(System.Object)
  - System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#RemoveAt(System.Int32)
  langs:
  - csharp
  name: ArrangedElementCollection
  nameWithType: ArrangedElementCollection
  fullName: System.Windows.Forms.Layout.ArrangedElementCollection
  type: Class
  summary: "개체의 컬렉션을 나타냅니다."
  remarks: "ArrangedElementCollection 클래스 디자인 화면의 또는 부모 <xref:System.Windows.Forms.ContainerControl?displayProperty=fullName>.</xref:System.Windows.Forms.ContainerControl?displayProperty=fullName> 내부 정렬 된 개체의 컬렉션을 나타냅니다.       내부적 으로만 사용할 지원 하기 때문에 ArrangedElementCollection에 공개적으로 정의 된 생성자 없음 없는 [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]합니다. 그러나 클래스에서에서 파생 된 ArrangedElementCollection와 같은 <xref:System.Windows.Forms.Control.ControlCollection?displayProperty=fullName>, 개발자에 게 사용할 수 있습니다.</xref:System.Windows.Forms.Control.ControlCollection?displayProperty=fullName>"
  syntax:
    content: 'public class ArrangedElementCollection : System.Collections.IList'
  inheritance:
  - System.Object
  implements:
  - System.Collections.IList
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Forms.Layout.ArrangedElementCollection.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Windows.Forms.Layout.ArrangedElementCollection
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: ArrangedElementCollection.CopyTo(Array,Int32)
  fullName: System.Windows.Forms.Layout.ArrangedElementCollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms.Layout
  summary: "이 컬렉션의 전체 내용을 복사 하 고 호환 되는&1; 차원 <xref:System.Array>대상 배열의 지정된 된 인덱스부터 시작 합니다.</xref:System.Array>"
  remarks: "지정 된 배열 형식에는 소스 컬렉션 호환 되어야 합니다.       이 메서드는 사용 된 <xref:System.Array.Copy%2A?displayProperty=fullName>요소를 복사해올 메서드.</xref:System.Array.Copy%2A?displayProperty=fullName>"
  syntax:
    content: public void CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "1 차원 <xref:System.Array>현재 컬렉션에서 복사한 요소의 대상인.</xref:System.Array> 배열에는&0;부터 시작 하는 인덱스가 있어야 합니다."
    - id: index
      type: System.Int32
      description: "인덱스는&0;부터 시작 `array` 복사가 시작 되는 합니다."
  overload: System.Windows.Forms.Layout.ArrangedElementCollection.CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>array</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>0 보다 작습니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>array</code>가 다차원 배열인 경우       -또는-소스 컬렉션의 요소 수가에서 사용 가능한 공간 보다 큽니다. <code>index</code> 의 끝에 <code>array</code>합니다."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "소스 요소의 형식을의 형식으로 자동 캐스팅할 수 없는 <code> array </code>합니다."
  platform:
  - net462
- uid: System.Windows.Forms.Layout.ArrangedElementCollection.Count
  id: Count
  parent: System.Windows.Forms.Layout.ArrangedElementCollection
  langs:
  - csharp
  name: Count
  nameWithType: ArrangedElementCollection.Count
  fullName: System.Windows.Forms.Layout.ArrangedElementCollection.Count
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms.Layout
  summary: "컬렉션의 요소 수를 가져옵니다."
  remarks: "필요한 경우 컬렉션의 용량 더 많은 요소를 허용 하도록 동적으로 증가 합니다."
  syntax:
    content: public virtual int Count { get; }
    return:
      type: System.Int32
      description: "현재 컬렉션에 포함 된 요소의 수입니다."
  overload: System.Windows.Forms.Layout.ArrangedElementCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Layout.ArrangedElementCollection.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Windows.Forms.Layout.ArrangedElementCollection
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: ArrangedElementCollection.Equals(Object)
  fullName: System.Windows.Forms.Layout.ArrangedElementCollection.Equals(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms.Layout
  summary: "두 결정 <xref href=&quot;System.Windows.Forms.Layout.ArrangedElementCollection&quot;> </xref> 인스턴스는 같습니다."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "<xref href=&quot;System.Windows.Forms.Layout.ArrangedElementCollection&quot;> </xref> 현재과 비교할 <xref href=&quot;System.Windows.Forms.Layout.ArrangedElementCollection&quot;> </xref>합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>하는 경우 지정 된 <xref href=&quot;System.Windows.Forms.Layout.ArrangedElementCollection&quot;> </xref> 현재 같은지 <xref href=&quot;System.Windows.Forms.Layout.ArrangedElementCollection&quot;> </xref>, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.Layout.ArrangedElementCollection.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Layout.ArrangedElementCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Windows.Forms.Layout.ArrangedElementCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: ArrangedElementCollection.GetEnumerator()
  fullName: System.Windows.Forms.Layout.ArrangedElementCollection.GetEnumerator()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms.Layout
  summary: "전체 컬렉션에 대 한 열거자를 반환합니다."
  remarks: "일반적으로 열거자가 없습니다; 컬렉션에 배타적으로 액세스 따라서 컬렉션을 열거 것은 본질적으로 스레드로부터 안전한 프로시저가 아닙니다. 컬렉션이 동기화 되어 있을 때 다른 스레드에서 수 수정할 열거자에서 예외가 발생 하는 컬렉션입니다. 을 열거 하는 동안 스레드로부터 안전을 보장 하려면 하나를 따르면 다음 전략 중:- <xref:System.Threading.Monitor>.</xref:System.Threading.Monitor> 를 사용 하 여 전체 열거 동안 컬렉션을 잠글      -Catch 하 고 다른 스레드에서 변경 된 내용에서 발생 하는 예외를 처리 합니다."
  syntax:
    content: public virtual System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "<xref:System.Collections.IEnumerator>전체 컬렉션에 대 한.</xref:System.Collections.IEnumerator>"
  overload: System.Windows.Forms.Layout.ArrangedElementCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Layout.ArrangedElementCollection.GetHashCode
  id: GetHashCode
  parent: System.Windows.Forms.Layout.ArrangedElementCollection
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: ArrangedElementCollection.GetHashCode()
  fullName: System.Windows.Forms.Layout.ArrangedElementCollection.GetHashCode()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms.Layout
  summary: "이 인스턴스에 대 한 해시 코드를 반환합니다."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "현재에 대 한 해시 코드 <xref href=&quot;System.Windows.Forms.Layout.ArrangedElementCollection&quot;> </xref>합니다."
  overload: System.Windows.Forms.Layout.ArrangedElementCollection.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Layout.ArrangedElementCollection.IsReadOnly
  id: IsReadOnly
  parent: System.Windows.Forms.Layout.ArrangedElementCollection
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: ArrangedElementCollection.IsReadOnly
  fullName: System.Windows.Forms.Layout.ArrangedElementCollection.IsReadOnly
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms.Layout
  summary: "컬렉션이 읽기 전용인 지 여부를 나타내는 값을 가져옵니다."
  remarks: "읽기 전용 컬렉션에서는 컬렉션을 만든 다음에 추가, 제거 또는 요소를 수정할 수 없습니다.       읽기 전용 컬렉션은 지정 된 컬렉션을 수정 하지 못하도록 하는 래퍼 컬렉션. 기본 컬렉션이 변경 될 경우 읽기 전용 컬렉션 해당 변경 내용을 반영 합니다."
  syntax:
    content: public virtual bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>컬렉션이 읽기 전용인 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.Layout.ArrangedElementCollection.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  isEii: true
  parent: System.Windows.Forms.Layout.ArrangedElementCollection
  langs:
  - csharp
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: ArrangedElementCollection.System.Collections.ICollection.IsSynchronized
  fullName: System.Windows.Forms.Layout.ArrangedElementCollection.System.Collections.ICollection.IsSynchronized
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms.Layout
  summary: "이 멤버에 대 한 참조는 &lt;xref:System.Collections.ICollection.IsSynchronized%2A?displayProperty=fullName&gt; 속성입니다."
  remarks: "이 메서드는 명시적 인터페이스 멤버 구현 합니다. 사용할 수 있습니다 경우에만 <xref:System.Windows.Forms.Layout.ArrangedElementCollection>인스턴스로 캐스팅 되는 <xref:System.Collections.ICollection>인터페이스.</xref:System.Collections.ICollection> </xref:System.Windows.Forms.Layout.ArrangedElementCollection>"
  syntax:
    content: bool System.Collections.ICollection.IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우에 대 한 액세스는 <xref href=&quot;System.Windows.Forms.Layout.ArrangedElementCollection&quot;> </xref> 은 동기화 (스레드로부터 안전함); 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#ICollection#IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  isEii: true
  parent: System.Windows.Forms.Layout.ArrangedElementCollection
  langs:
  - csharp
  name: System.Collections.ICollection.SyncRoot
  nameWithType: ArrangedElementCollection.System.Collections.ICollection.SyncRoot
  fullName: System.Windows.Forms.Layout.ArrangedElementCollection.System.Collections.ICollection.SyncRoot
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms.Layout
  summary: "이 멤버에 대 한 참조는 &lt;xref:System.Collections.ICollection.SyncRoot%2A?displayProperty=fullName&gt; 속성입니다."
  remarks: "이 메서드는 명시적 인터페이스 멤버 구현 합니다. 사용할 수 있습니다 경우에만 <xref:System.Windows.Forms.Layout.ArrangedElementCollection>인스턴스로 캐스팅 되는 <xref:System.Collections.ICollection>인터페이스.</xref:System.Collections.ICollection> </xref:System.Windows.Forms.Layout.ArrangedElementCollection>"
  syntax:
    content: object System.Collections.ICollection.SyncRoot { get; }
    return:
      type: System.Object
      description: "에 대 한 액세스를 동기화 하는 데 사용할 수 있는 개체는 <xref href=&quot;System.Windows.Forms.Layout.ArrangedElementCollection&quot;> </xref>합니다."
  overload: System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#ICollection#SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Add(System.Object)
  id: System#Collections#IList#Add(System.Object)
  isEii: true
  parent: System.Windows.Forms.Layout.ArrangedElementCollection
  langs:
  - csharp
  name: System.Collections.IList.Add(Object)
  nameWithType: ArrangedElementCollection.System.Collections.IList.Add(Object)
  fullName: System.Windows.Forms.Layout.ArrangedElementCollection.System.Collections.IList.Add(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms.Layout
  summary: "이 멤버에 대 한 참조는 &lt;xref:System.Collections.IList.Add%2A?displayProperty=fullName&gt; 메서드."
  remarks: "이 메서드는 명시적 인터페이스 멤버 구현 합니다. 사용할 수 있습니다 경우에만 <xref:System.Windows.Forms.Layout.ArrangedElementCollection>인스턴스로 캐스팅 되는 <xref:System.Collections.IList>인터페이스.</xref:System.Collections.IList> </xref:System.Windows.Forms.Layout.ArrangedElementCollection>"
  syntax:
    content: int IList.Add (object value);
    parameters:
    - id: value
      type: System.Object
      description: "<xref:System.Object> <xref:System.Collections.IList>.</xref:System.Collections.IList> 에 추가 하려면</xref:System.Object>"
    return:
      type: System.Int32
      description: "새 요소가 삽입 된 위치입니다."
  overload: System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Add*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Clear
  id: System#Collections#IList#Clear
  isEii: true
  parent: System.Windows.Forms.Layout.ArrangedElementCollection
  langs:
  - csharp
  name: System.Collections.IList.Clear()
  nameWithType: ArrangedElementCollection.System.Collections.IList.Clear()
  fullName: System.Windows.Forms.Layout.ArrangedElementCollection.System.Collections.IList.Clear()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms.Layout
  summary: "이 멤버에 대 한 참조는 &lt;xref:System.Collections.IList.Clear%2A?displayProperty=fullName&gt; 메서드."
  remarks: "이 메서드는 명시적 인터페이스 멤버 구현 합니다. 사용할 수 있습니다 경우에만 <xref:System.Windows.Forms.Layout.ArrangedElementCollection>인스턴스로 캐스팅 되는 <xref:System.Collections.IList>인터페이스.</xref:System.Collections.IList> </xref:System.Windows.Forms.Layout.ArrangedElementCollection>"
  syntax:
    content: void IList.Clear ();
    parameters: []
  overload: System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Contains(System.Object)
  id: System#Collections#IList#Contains(System.Object)
  isEii: true
  parent: System.Windows.Forms.Layout.ArrangedElementCollection
  langs:
  - csharp
  name: System.Collections.IList.Contains(Object)
  nameWithType: ArrangedElementCollection.System.Collections.IList.Contains(Object)
  fullName: System.Windows.Forms.Layout.ArrangedElementCollection.System.Collections.IList.Contains(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms.Layout
  summary: "이 멤버에 대 한 참조는 &lt;xref:System.Collections.IList.Contains%2A?displayProperty=fullName&gt; 메서드."
  remarks: "이 메서드는 명시적 인터페이스 멤버 구현 합니다. 사용할 수 있습니다 경우에만 <xref:System.Windows.Forms.Layout.ArrangedElementCollection>인스턴스로 캐스팅 되는 <xref:System.Collections.IList>인터페이스.</xref:System.Collections.IList> </xref:System.Windows.Forms.Layout.ArrangedElementCollection>"
  syntax:
    content: bool IList.Contains (object value);
    parameters:
    - id: value
      type: System.Object
      description: "<xref:System.Object> <xref:System.Collections.IList>.</xref:System.Collections.IList> 에서 찾을</xref:System.Object>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우는 <xref:System.Object>에서 발견 되는 <xref:System.Collections.IList>, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Collections.IList> </xref:System.Object>"
  overload: System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#IndexOf(System.Object)
  id: System#Collections#IList#IndexOf(System.Object)
  isEii: true
  parent: System.Windows.Forms.Layout.ArrangedElementCollection
  langs:
  - csharp
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: ArrangedElementCollection.System.Collections.IList.IndexOf(Object)
  fullName: System.Windows.Forms.Layout.ArrangedElementCollection.System.Collections.IList.IndexOf(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms.Layout
  summary: "이 멤버에 대 한 참조는 &lt;xref:System.Collections.IList.IndexOf%2A?displayProperty=fullName&gt; 메서드."
  remarks: "이 메서드는 명시적 인터페이스 멤버 구현 합니다. 사용할 수 있습니다 경우에만 <xref:System.Windows.Forms.Layout.ArrangedElementCollection>인스턴스로 캐스팅 되는 <xref:System.Collections.IList>인터페이스.</xref:System.Collections.IList> </xref:System.Windows.Forms.Layout.ArrangedElementCollection>"
  syntax:
    content: int IList.IndexOf (object value);
    parameters:
    - id: value
      type: System.Object
      description: "<xref:System.Object> <xref:System.Collections.IList>.</xref:System.Collections.IList> 에서 찾을</xref:System.Object>"
    return:
      type: System.Int32
      description: "인덱스 <code> value </code> 목록에 고, 그렇지 않으면-1입니다."
  overload: System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  id: System#Collections#IList#Insert(System.Int32,System.Object)
  isEii: true
  parent: System.Windows.Forms.Layout.ArrangedElementCollection
  langs:
  - csharp
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: ArrangedElementCollection.System.Collections.IList.Insert(Int32,Object)
  fullName: System.Windows.Forms.Layout.ArrangedElementCollection.System.Collections.IList.Insert(Int32,Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms.Layout
  summary: "이 멤버에 대 한 참조는 &lt;xref:System.Collections.IList.Insert%2A?displayProperty=fullName&gt; 메서드."
  remarks: "이 메서드는 명시적 인터페이스 멤버 구현 합니다. 사용할 수 있습니다 경우에만 <xref:System.Windows.Forms.Layout.ArrangedElementCollection>인스턴스로 캐스팅 되는 <xref:System.Collections.IList>인터페이스.</xref:System.Collections.IList> </xref:System.Windows.Forms.Layout.ArrangedElementCollection>"
  syntax:
    content: void IList.Insert (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: "인덱스&0;부터 시작 `value` 삽입 해야 합니다."
    - id: value
      type: System.Object
      description: "<xref:System.Object> <xref:System.Collections.IList>.</xref:System.Collections.IList> 에 삽입 하려면</xref:System.Object>"
  overload: System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Insert*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#IsFixedSize
  id: System#Collections#IList#IsFixedSize
  isEii: true
  parent: System.Windows.Forms.Layout.ArrangedElementCollection
  langs:
  - csharp
  name: System.Collections.IList.IsFixedSize
  nameWithType: ArrangedElementCollection.System.Collections.IList.IsFixedSize
  fullName: System.Windows.Forms.Layout.ArrangedElementCollection.System.Collections.IList.IsFixedSize
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms.Layout
  summary: "이 멤버에 대 한 참조는 &lt;xref:System.Collections.IList.IsFixedSize%2A?displayProperty=fullName&gt; 속성입니다."
  remarks: "이 메서드는 명시적 인터페이스 멤버 구현 합니다. 사용할 수 있습니다 경우에만 <xref:System.Windows.Forms.Layout.ArrangedElementCollection>인스턴스로 캐스팅 되는 <xref:System.Collections.IList>인터페이스.</xref:System.Collections.IList> </xref:System.Windows.Forms.Layout.ArrangedElementCollection>"
  syntax:
    content: bool System.Collections.IList.IsFixedSize { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우는 <xref:System.Collections.IList>고정 되어 고, 그렇지 않으면 크기가 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Collections.IList>"
  overload: System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#IsFixedSize*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Item(System.Int32)
  id: System#Collections#IList#Item(System.Int32)
  isEii: true
  parent: System.Windows.Forms.Layout.ArrangedElementCollection
  langs:
  - csharp
  name: System.Collections.IList.Item(Int32)
  nameWithType: ArrangedElementCollection.System.Collections.IList.Item(Int32)
  fullName: System.Windows.Forms.Layout.ArrangedElementCollection.System.Collections.IList.Item(Int32)
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms.Layout
  summary: "이 멤버에 대 한 참조는 &lt;xref:System.Collections.IList.Item%2A?displayProperty=fullName&gt; 속성입니다."
  remarks: "이 메서드는 명시적 인터페이스 멤버 구현 합니다. 사용할 수 있습니다 경우에만 <xref:System.Windows.Forms.Layout.ArrangedElementCollection>인스턴스로 캐스팅 되는 <xref:System.Collections.IList>인터페이스.</xref:System.Collections.IList> </xref:System.Windows.Forms.Layout.ArrangedElementCollection>"
  syntax:
    content: object System.Collections.IList.Item[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "가져올 요소의&0;부터 시작 하는 인덱스입니다."
    return:
      type: System.Object
      description: "지정된 된 인덱스에 요소입니다."
  overload: System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Item*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Remove(System.Object)
  id: System#Collections#IList#Remove(System.Object)
  isEii: true
  parent: System.Windows.Forms.Layout.ArrangedElementCollection
  langs:
  - csharp
  name: System.Collections.IList.Remove(Object)
  nameWithType: ArrangedElementCollection.System.Collections.IList.Remove(Object)
  fullName: System.Windows.Forms.Layout.ArrangedElementCollection.System.Collections.IList.Remove(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms.Layout
  summary: "이 멤버에 대 한 참조는 &lt;xref:System.Collections.IList.Remove%2A?displayProperty=fullName&gt; 메서드."
  remarks: "이 메서드는 명시적 인터페이스 멤버 구현 합니다. 사용할 수 있습니다 경우에만 <xref:System.Windows.Forms.Layout.ArrangedElementCollection>인스턴스로 캐스팅 되는 <xref:System.Collections.IList>인터페이스.</xref:System.Collections.IList> </xref:System.Windows.Forms.Layout.ArrangedElementCollection>"
  syntax:
    content: void IList.Remove (object value);
    parameters:
    - id: value
      type: System.Object
      description: "<xref:System.Object> <xref:System.Collections.IList>.</xref:System.Collections.IList> 에서 제거 하려면</xref:System.Object>"
  overload: System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#RemoveAt(System.Int32)
  id: System#Collections#IList#RemoveAt(System.Int32)
  isEii: true
  parent: System.Windows.Forms.Layout.ArrangedElementCollection
  langs:
  - csharp
  name: System.Collections.IList.RemoveAt(Int32)
  nameWithType: ArrangedElementCollection.System.Collections.IList.RemoveAt(Int32)
  fullName: System.Windows.Forms.Layout.ArrangedElementCollection.System.Collections.IList.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms.Layout
  summary: "이 멤버에 대 한 참조는 &lt;xref:System.Collections.IList.RemoveAt%2A?displayProperty=fullName&gt; 메서드."
  remarks: "이 메서드는 명시적 인터페이스 멤버 구현 합니다. 사용할 수 있습니다 경우에만 <xref:System.Windows.Forms.Layout.ArrangedElementCollection>인스턴스로 캐스팅 되는 <xref:System.Collections.IList>인터페이스.</xref:System.Collections.IList> </xref:System.Windows.Forms.Layout.ArrangedElementCollection>"
  syntax:
    content: void IList.RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "제거할 항목의&0;부터 시작 하는 인덱스입니다."
  overload: System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#RemoveAt*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidCastException
  isExternal: true
  name: System.InvalidCastException
- uid: System.Windows.Forms.Layout.ArrangedElementCollection.CopyTo(System.Array,System.Int32)
  parent: System.Windows.Forms.Layout.ArrangedElementCollection
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: ArrangedElementCollection.CopyTo(Array,Int32)
  fullName: System.Windows.Forms.Layout.ArrangedElementCollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Forms.Layout.ArrangedElementCollection.Count
  parent: System.Windows.Forms.Layout.ArrangedElementCollection
  isExternal: false
  name: Count
  nameWithType: ArrangedElementCollection.Count
  fullName: System.Windows.Forms.Layout.ArrangedElementCollection.Count
- uid: System.Windows.Forms.Layout.ArrangedElementCollection.Equals(System.Object)
  parent: System.Windows.Forms.Layout.ArrangedElementCollection
  isExternal: false
  name: Equals(Object)
  nameWithType: ArrangedElementCollection.Equals(Object)
  fullName: System.Windows.Forms.Layout.ArrangedElementCollection.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.Layout.ArrangedElementCollection.GetEnumerator
  parent: System.Windows.Forms.Layout.ArrangedElementCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: ArrangedElementCollection.GetEnumerator()
  fullName: System.Windows.Forms.Layout.ArrangedElementCollection.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Windows.Forms.Layout.ArrangedElementCollection.GetHashCode
  parent: System.Windows.Forms.Layout.ArrangedElementCollection
  isExternal: false
  name: GetHashCode()
  nameWithType: ArrangedElementCollection.GetHashCode()
  fullName: System.Windows.Forms.Layout.ArrangedElementCollection.GetHashCode()
- uid: System.Windows.Forms.Layout.ArrangedElementCollection.IsReadOnly
  parent: System.Windows.Forms.Layout.ArrangedElementCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: ArrangedElementCollection.IsReadOnly
  fullName: System.Windows.Forms.Layout.ArrangedElementCollection.IsReadOnly
- uid: System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#ICollection#IsSynchronized
  parent: System.Windows.Forms.Layout.ArrangedElementCollection
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: ArrangedElementCollection.System.Collections.ICollection.IsSynchronized
  fullName: System.Windows.Forms.Layout.ArrangedElementCollection.System.Collections.ICollection.IsSynchronized
- uid: System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#ICollection#SyncRoot
  parent: System.Windows.Forms.Layout.ArrangedElementCollection
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: ArrangedElementCollection.System.Collections.ICollection.SyncRoot
  fullName: System.Windows.Forms.Layout.ArrangedElementCollection.System.Collections.ICollection.SyncRoot
- uid: System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Add(System.Object)
  parent: System.Windows.Forms.Layout.ArrangedElementCollection
  isExternal: false
  name: System.Collections.IList.Add(Object)
  nameWithType: ArrangedElementCollection.System.Collections.IList.Add(Object)
  fullName: System.Windows.Forms.Layout.ArrangedElementCollection.System.Collections.IList.Add(Object)
- uid: System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Clear
  parent: System.Windows.Forms.Layout.ArrangedElementCollection
  isExternal: false
  name: System.Collections.IList.Clear()
  nameWithType: ArrangedElementCollection.System.Collections.IList.Clear()
  fullName: System.Windows.Forms.Layout.ArrangedElementCollection.System.Collections.IList.Clear()
- uid: System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Contains(System.Object)
  parent: System.Windows.Forms.Layout.ArrangedElementCollection
  isExternal: false
  name: System.Collections.IList.Contains(Object)
  nameWithType: ArrangedElementCollection.System.Collections.IList.Contains(Object)
  fullName: System.Windows.Forms.Layout.ArrangedElementCollection.System.Collections.IList.Contains(Object)
- uid: System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#IndexOf(System.Object)
  parent: System.Windows.Forms.Layout.ArrangedElementCollection
  isExternal: false
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: ArrangedElementCollection.System.Collections.IList.IndexOf(Object)
  fullName: System.Windows.Forms.Layout.ArrangedElementCollection.System.Collections.IList.IndexOf(Object)
- uid: System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  parent: System.Windows.Forms.Layout.ArrangedElementCollection
  isExternal: false
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: ArrangedElementCollection.System.Collections.IList.Insert(Int32,Object)
  fullName: System.Windows.Forms.Layout.ArrangedElementCollection.System.Collections.IList.Insert(Int32,Object)
- uid: System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#IsFixedSize
  parent: System.Windows.Forms.Layout.ArrangedElementCollection
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: ArrangedElementCollection.System.Collections.IList.IsFixedSize
  fullName: System.Windows.Forms.Layout.ArrangedElementCollection.System.Collections.IList.IsFixedSize
- uid: System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Item(System.Int32)
  parent: System.Windows.Forms.Layout.ArrangedElementCollection
  isExternal: false
  name: System.Collections.IList.Item(Int32)
  nameWithType: ArrangedElementCollection.System.Collections.IList.Item(Int32)
  fullName: System.Windows.Forms.Layout.ArrangedElementCollection.System.Collections.IList.Item(Int32)
- uid: System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Remove(System.Object)
  parent: System.Windows.Forms.Layout.ArrangedElementCollection
  isExternal: false
  name: System.Collections.IList.Remove(Object)
  nameWithType: ArrangedElementCollection.System.Collections.IList.Remove(Object)
  fullName: System.Windows.Forms.Layout.ArrangedElementCollection.System.Collections.IList.Remove(Object)
- uid: System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#RemoveAt(System.Int32)
  parent: System.Windows.Forms.Layout.ArrangedElementCollection
  isExternal: false
  name: System.Collections.IList.RemoveAt(Int32)
  nameWithType: ArrangedElementCollection.System.Collections.IList.RemoveAt(Int32)
  fullName: System.Windows.Forms.Layout.ArrangedElementCollection.System.Collections.IList.RemoveAt(Int32)
- uid: System.Windows.Forms.Layout.ArrangedElementCollection.CopyTo*
  parent: System.Windows.Forms.Layout.ArrangedElementCollection
  isExternal: false
  name: CopyTo
  nameWithType: ArrangedElementCollection.CopyTo
- uid: System.Windows.Forms.Layout.ArrangedElementCollection.Count*
  parent: System.Windows.Forms.Layout.ArrangedElementCollection
  isExternal: false
  name: Count
  nameWithType: ArrangedElementCollection.Count
- uid: System.Windows.Forms.Layout.ArrangedElementCollection.Equals*
  parent: System.Windows.Forms.Layout.ArrangedElementCollection
  isExternal: false
  name: Equals
  nameWithType: ArrangedElementCollection.Equals
- uid: System.Windows.Forms.Layout.ArrangedElementCollection.GetEnumerator*
  parent: System.Windows.Forms.Layout.ArrangedElementCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: ArrangedElementCollection.GetEnumerator
- uid: System.Windows.Forms.Layout.ArrangedElementCollection.GetHashCode*
  parent: System.Windows.Forms.Layout.ArrangedElementCollection
  isExternal: false
  name: GetHashCode
  nameWithType: ArrangedElementCollection.GetHashCode
- uid: System.Windows.Forms.Layout.ArrangedElementCollection.IsReadOnly*
  parent: System.Windows.Forms.Layout.ArrangedElementCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: ArrangedElementCollection.IsReadOnly
- uid: System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#ICollection#IsSynchronized*
  parent: System.Windows.Forms.Layout.ArrangedElementCollection
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: ArrangedElementCollection.System.Collections.ICollection.IsSynchronized
- uid: System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#ICollection#SyncRoot*
  parent: System.Windows.Forms.Layout.ArrangedElementCollection
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: ArrangedElementCollection.System.Collections.ICollection.SyncRoot
- uid: System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Add*
  parent: System.Windows.Forms.Layout.ArrangedElementCollection
  isExternal: false
  name: System.Collections.IList.Add
  nameWithType: ArrangedElementCollection.System.Collections.IList.Add
- uid: System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Clear*
  parent: System.Windows.Forms.Layout.ArrangedElementCollection
  isExternal: false
  name: System.Collections.IList.Clear
  nameWithType: ArrangedElementCollection.System.Collections.IList.Clear
- uid: System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Contains*
  parent: System.Windows.Forms.Layout.ArrangedElementCollection
  isExternal: false
  name: System.Collections.IList.Contains
  nameWithType: ArrangedElementCollection.System.Collections.IList.Contains
- uid: System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#IndexOf*
  parent: System.Windows.Forms.Layout.ArrangedElementCollection
  isExternal: false
  name: System.Collections.IList.IndexOf
  nameWithType: ArrangedElementCollection.System.Collections.IList.IndexOf
- uid: System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Insert*
  parent: System.Windows.Forms.Layout.ArrangedElementCollection
  isExternal: false
  name: System.Collections.IList.Insert
  nameWithType: ArrangedElementCollection.System.Collections.IList.Insert
- uid: System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#IsFixedSize*
  parent: System.Windows.Forms.Layout.ArrangedElementCollection
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: ArrangedElementCollection.System.Collections.IList.IsFixedSize
- uid: System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Item*
  parent: System.Windows.Forms.Layout.ArrangedElementCollection
  isExternal: false
  name: System.Collections.IList.Item
  nameWithType: ArrangedElementCollection.System.Collections.IList.Item
- uid: System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Remove*
  parent: System.Windows.Forms.Layout.ArrangedElementCollection
  isExternal: false
  name: System.Collections.IList.Remove
  nameWithType: ArrangedElementCollection.System.Collections.IList.Remove
- uid: System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#RemoveAt*
  parent: System.Windows.Forms.Layout.ArrangedElementCollection
  isExternal: false
  name: System.Collections.IList.RemoveAt
  nameWithType: ArrangedElementCollection.System.Collections.IList.RemoveAt
