### YamlMime:ManagedReference
items:
- uid: System.Web.Services.Protocols.SoapDocumentMethodAttribute
  id: SoapDocumentMethodAttribute
  children:
  - System.Web.Services.Protocols.SoapDocumentMethodAttribute.#ctor
  - System.Web.Services.Protocols.SoapDocumentMethodAttribute.#ctor(System.String)
  - System.Web.Services.Protocols.SoapDocumentMethodAttribute.Action
  - System.Web.Services.Protocols.SoapDocumentMethodAttribute.Binding
  - System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay
  - System.Web.Services.Protocols.SoapDocumentMethodAttribute.ParameterStyle
  - System.Web.Services.Protocols.SoapDocumentMethodAttribute.RequestElementName
  - System.Web.Services.Protocols.SoapDocumentMethodAttribute.RequestNamespace
  - System.Web.Services.Protocols.SoapDocumentMethodAttribute.ResponseElementName
  - System.Web.Services.Protocols.SoapDocumentMethodAttribute.ResponseNamespace
  - System.Web.Services.Protocols.SoapDocumentMethodAttribute.Use
  langs:
  - csharp
  name: SoapDocumentMethodAttribute
  nameWithType: SoapDocumentMethodAttribute
  fullName: System.Web.Services.Protocols.SoapDocumentMethodAttribute
  type: Class
  summary: "메서드에서 SOAP 메시지를 사용 하도록 지정에서 사용할 메서드에 적용 <xref uid=&quot;langword_csharp_Document&quot; name=&quot;Document&quot; href=&quot;&quot;> </xref> 서식 지정 합니다."
  remarks: "Web Services Description Language (WSDL) defines two styles for how an XML Web service method, which it calls an operation, can be formatted in a SOAP message: `RPC` and `Document`. `Document` refers to formatting the XML Web service method according to an XSD schema. The `Document` style refers to formatting the `Body` element as a series of one or more message parts following the `Body` element. Exactly how the individual message parts is determined by the <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.Use%2A> and <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.ParameterStyle%2A> properties. The <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.Use%2A> property determines whether parameters are formatted `Encoded` or `Literal`. The <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.ParameterStyle%2A> determines whether the parameters are encapsulated within a single message part following the `Body` element or whether each parameter is an individual message part.  \n  \n For more details, see [&#91;\\<topic://cpconCustomizingSOAPInASPNETWebServicesWebServiceClients>&#93;](http://msdn.microsoft.com/en-us/1d777288-c0d9-4e6a-b638-f010da031952)  \n  \n This attribute can be applied to both an XML Web service method on the server and a method of the proxy class on the client."
  example:
  - "The following code example sets the message style to `Document` for the `GetUserName` XML Web service method. Additionally, the XML element with the `Body` element for the SOAP request and SOAP response are set to `GetUserNameRequest` and `GetUserNameResponse`, respectively.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Method)]

      public sealed class SoapDocumentMethodAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapDocumentMethodAttribute.#ctor
  id: '#ctor'
  parent: System.Web.Services.Protocols.SoapDocumentMethodAttribute
  langs:
  - csharp
  name: SoapDocumentMethodAttribute()
  nameWithType: SoapDocumentMethodAttribute.SoapDocumentMethodAttribute()
  fullName: System.Web.Services.Protocols.SoapDocumentMethodAttribute.SoapDocumentMethodAttribute()
  type: Constructor
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.Services.Protocols.SoapDocumentMethodAttribute&quot;> </xref> 클래스입니다."
  syntax:
    content: public SoapDocumentMethodAttribute ();
    parameters: []
  overload: System.Web.Services.Protocols.SoapDocumentMethodAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapDocumentMethodAttribute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Web.Services.Protocols.SoapDocumentMethodAttribute
  langs:
  - csharp
  name: SoapDocumentMethodAttribute(String)
  nameWithType: SoapDocumentMethodAttribute.SoapDocumentMethodAttribute(String)
  fullName: System.Web.Services.Protocols.SoapDocumentMethodAttribute.SoapDocumentMethodAttribute(String)
  type: Constructor
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.Services.Protocols.SoapDocumentMethodAttribute&quot;> </xref> 설정 클래스는 <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.Action*>속성의 값을는 <code> action </code> 매개 변수.</xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.Action*>"
  syntax:
    content: public SoapDocumentMethodAttribute (string action);
    parameters:
    - id: action
      type: System.String
      description: "<xref uid=&quot;langword_csharp_SOAPAction&quot; name=&quot;SOAPAction&quot; href=&quot;&quot;> </xref> SOAP 요청의 HTTP 헤더 필드입니다. 설정 된 <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.Action*>속성.</xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.Action*>"
  overload: System.Web.Services.Protocols.SoapDocumentMethodAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapDocumentMethodAttribute.Action
  id: Action
  parent: System.Web.Services.Protocols.SoapDocumentMethodAttribute
  langs:
  - csharp
  name: Action
  nameWithType: SoapDocumentMethodAttribute.Action
  fullName: System.Web.Services.Protocols.SoapDocumentMethodAttribute.Action
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "가져오거나는 <xref uid=&quot;langword_csharp_SOAPAction&quot; name=&quot;SOAPAction&quot; href=&quot;&quot;> </xref> SOAP 요청의 HTTP 헤더 필드입니다."
  remarks: "일반적으로 작업 속성은 요청의 의도 나타내는 URI입니다. 그러나 SOAP 사양의 URI의 형식에 제한을 두지 또는 여부에 대 한 모든 규칙의 URI를 확인할 수 있습니다. 존재 여부와 Action 속성의 내용을 데 사용할 수 방화벽과 같은 웹 서버에서 적절 하 게 http에서 SOAP 요청 메시지를 필터링 합니다.       기본적으로.NET Framework 버전 1.1의 Action 속성을 게시는 `soapAction` 의 특성은 `soap:operation` 요소 각각에 대해 XML 웹 서비스에 대해 생성 된 WSDL 문서에서 SOAP 바인딩을 지원 합니다. SOAP 사양에 대 한 자세한 내용은 W3C 웹 사이트 (http://www.w3.org/TR/SOAP)을 참조 하십시오."
  example:
  - "The following code example sets the Action property to `http://www.contoso.com/GetUserName`.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public string Action { get; set; }
    return:
      type: System.String
      description: "<xref uid=&quot;langword_csharp_SOAPAction&quot; name=&quot;SOAPAction&quot; href=&quot;&quot;> </xref> SOAP 요청의 HTTP 헤더 필드입니다. 기본값이 http://tempuri.org/MethodName, 여기서 MethodName은 XML 웹 서비스 메서드의 이름입니다."
  overload: System.Web.Services.Protocols.SoapDocumentMethodAttribute.Action*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapDocumentMethodAttribute.Binding
  id: Binding
  parent: System.Web.Services.Protocols.SoapDocumentMethodAttribute
  langs:
  - csharp
  name: Binding
  nameWithType: SoapDocumentMethodAttribute.Binding
  fullName: System.Web.Services.Protocols.SoapDocumentMethodAttribute.Binding
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "XML 웹 서비스 메서드 구현에 대 한 작업 바인딩을 가져오거나 설정 합니다."
  remarks: "바인딩 정의 된 대로 하 여 WSDL 웹 서비스 설명 언어 ()는 인터페이스와 유사 구체적인 작업 집합을 정의 한다는 점에서 합니다. ASP.NET을 사용 하 여 만든 XML 웹 서비스와 관련 하 여 각 XML 웹 서비스 메서드는 바인딩에 작업. XML 웹 서비스 메서드는 XML 웹 서비스에 대 한 기본 바인딩 또는 내에서 지정 된 바인딩을의 멤버는 <xref:System.Web.Services.WebServiceBindingAttribute>XML 웹 서비스에 적용 합니다.</xref:System.Web.Services.WebServiceBindingAttribute> XML 웹 서비스는 여러 개의 바인딩을 구현할 수 있습니다 때 여러 <xref:System.Web.Services.WebServiceBindingAttribute>특성이 XML 웹 서비스에 적용 됩니다.</xref:System.Web.Services.WebServiceBindingAttribute>       한 번 이상의 <xref:System.Web.Services.WebServiceBindingAttribute>속성이 XML 웹 서비스에 적용 되는 <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute>또는 <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute>개별 XML 웹 서비스 메서드를 나타내는 특정 XML 웹 서비스 메서드에서 구현 되는 바인딩 작업에 적용할 수 있습니다.</xref:System.Web.Services.Protocols.SoapRpcMethodAttribute> </xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> </xref:System.Web.Services.WebServiceBindingAttribute> <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute>바인딩을 지정 하는 XML 웹 서비스 메서드 구현 하는 작업 >for</xref:System.Web.Services.Protocols.SoapRpcMethodAttribute> 또는</xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> 의 바인딩 속성을 설정 합니다. 하나의 <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute>또는 <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute>XML 웹 서비스 메서드에 적용할 수 있습니다.</xref:System.Web.Services.Protocols.SoapRpcMethodAttribute> </xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> 따라서는 XML 웹 서비스 검색 방법만 바인딩 두 개에 대 한 작업을 구현할 수 있습니다.       지정 된 WSDL에 대 한 자세한 내용은 W3C 웹 사이트 (http://www.w3.org/TR/wsdl)을 참조 하십시오."
  example:
  - '[!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]'
  syntax:
    content: public string Binding { get; set; }
    return:
      type: System.String
      description: "XML 웹 서비스 메서드 구현에 대 한 작업 하는 바인딩. 기본값은 &quot;Soap&quot;가 추가 된 XML 웹 서비스의 이름입니다."
  overload: System.Web.Services.Protocols.SoapDocumentMethodAttribute.Binding*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay
  id: OneWay
  parent: System.Web.Services.Protocols.SoapDocumentMethodAttribute
  langs:
  - csharp
  name: OneWay
  nameWithType: SoapDocumentMethodAttribute.OneWay
  fullName: System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "XML 웹 서비스 클라이언트 웹 서버가 XML 웹 서비스 메서드를 처리를 마칠 때까지 대기 하 고 있는지 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "XML 웹 서비스 메서드에 OneWay 속성이로 설정 하는 경우 `true`, XML 웹 서비스 클라이언트에서 웹 서버의 XML 웹 서비스 메서드에서 처리가 완료를 기다릴 필요가 없습니다. 웹 서버 deserialize 되는 즉시는 <xref:System.Web.Services.Protocols.SoapServerMessage>, XML 웹 서비스 메서드를 호출 하기 전에 서버는 HTTP 202 상태 코드가 반환 하지만.</xref:System.Web.Services.Protocols.SoapServerMessage> 메시지를 처리 하는 웹 서버에서 시작 클라이언트에는 HTTP 202 상태 코드가 나타냅니다. 따라서 XML 웹 서비스 클라이언트 웹 서버에 성공적으로 메시지 처리 응답을 받습니다.       단방향 메서드는 반환 값 또는 out 매개 변수를 가질 수 없습니다.       포함 하는.NET Framework 버전 1.0 XML 웹 서비스 메서드를 사용 하는 경우는 <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute>또는 <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute>OneWay 속성 집합을 사용 하 여 적용 된 특성 `true`에 액세스할 수 없는 자신의 <xref:System.Web.HttpContext>정적을 사용 하 여 <xref:System.Web.HttpContext.Current%2A>속성.</xref:System.Web.HttpContext.Current%2A> </xref:System.Web.HttpContext> </xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> </xref:System.Web.Services.Protocols.SoapRpcMethodAttribute> 액세스는 <xref:System.Web.HttpContext>에서 XML 웹 서비스 메서드를 구현 하는 클래스를 파생 <xref:System.Web.Services.WebService>액세스는 <xref:System.Web.Services.WebService.Context%2A>속성.</xref:System.Web.Services.WebService.Context%2A> </xref:System.Web.Services.WebService> </xref:System.Web.HttpContext>"
  example:
  - "The following code example is an XML Web service method that does not require the client to wait for the XML Web service method to complete. Therefore, the sample sets the OneWay property to `true`.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public bool OneWay { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>XML 웹 서비스 클라이언트 웹 서버에서 완전히 XML 웹 서비스 메서드를 처리할 때까지 대기 하지 않습니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapDocumentMethodAttribute.ParameterStyle
  id: ParameterStyle
  parent: System.Web.Services.Protocols.SoapDocumentMethodAttribute
  langs:
  - csharp
  name: ParameterStyle
  nameWithType: SoapDocumentMethodAttribute.ParameterStyle
  fullName: System.Web.Services.Protocols.SoapDocumentMethodAttribute.ParameterStyle
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "아래의 단일 XML 요소 내에서 캡슐화 되는지 여부를 가져오거나는 <xref uid=&quot;langword_csharp_Body&quot; name=&quot;Body&quot; href=&quot;&quot;> </xref> SOAP 메시지의 XML 부분에 요소입니다."
  remarks: ''
  example:
  - "The following code example specifies that parameters sent in the SOAP messages sent to and from the `PlaceOrder` XML Web service method are not encapsulated within one XML element.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public System.Web.Services.Protocols.SoapParameterStyle ParameterStyle { get; set; }
    return:
      type: System.Web.Services.Protocols.SoapParameterStyle
      description: "<xref href=&quot;System.Web.Services.Protocols.SoapParameterStyle&quot;> </xref> XML Web에서 보내고 받는 SOAP 메시지에 대 한 서비스 메서드가 있습니다. 기본값은 <xref href=&quot;System.Web.Services.Protocols.SoapParameterStyle&quot;> </xref>합니다."
  overload: System.Web.Services.Protocols.SoapDocumentMethodAttribute.ParameterStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapDocumentMethodAttribute.RequestElementName
  id: RequestElementName
  parent: System.Web.Services.Protocols.SoapDocumentMethodAttribute
  langs:
  - csharp
  name: RequestElementName
  nameWithType: SoapDocumentMethodAttribute.RequestElementName
  fullName: System.Web.Services.Protocols.SoapDocumentMethodAttribute.RequestElementName
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "연결 된 작업으로는 서비스 설명에서 정의 되는 XML 웹 서비스 메서드에 대 한 SOAP 요청 XML 요소를 가져오거나 설정 합니다."
  remarks: "RequestElementName 아래에 있는 매개 변수를 래핑하는 데 사용 하는 XML 요소 정의 `Body` 때 요소는 soap 요청 <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.ParameterStyle%2A>은 <xref:System.Web.Services.Protocols.SoapParameterStyle>.</xref:System.Web.Services.Protocols.SoapParameterStyle> </xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.ParameterStyle%2A> 이 옵션은 SOAP 요청 XML 웹 서비스에 대 한 서비스 설명에서 XML 웹 서비스 메서드를 나타내는 XSD 스키마에 반영 됩니다."
  example:
  - "The following code example sets the name of the XML element associated with the XML Web service method in the SOAP request to `MyCustomElement`.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public string RequestElementName { get; set; }
    return:
      type: System.String
      description: "연결 된 작업으로는 서비스 설명에서 정의 되는 XML 웹 서비스 메서드에 대 한 SOAP 요청 XML 요소입니다. 기본값은 XML 웹 서비스 메서드의 이름입니다."
  overload: System.Web.Services.Protocols.SoapDocumentMethodAttribute.RequestElementName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapDocumentMethodAttribute.RequestNamespace
  id: RequestNamespace
  parent: System.Web.Services.Protocols.SoapDocumentMethodAttribute
  langs:
  - csharp
  name: RequestNamespace
  nameWithType: SoapDocumentMethodAttribute.RequestNamespace
  fullName: System.Web.Services.Protocols.SoapDocumentMethodAttribute.RequestNamespace
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "XML 웹 서비스 메서드에 대 한 SOAP 요청에 연결 된 네임 스페이스를 가져오거나 설정 합니다."
  remarks: "RequestNamespace 해당 서비스 설명에서 XML 웹 서비스 메서드에 대 한 XSD 스키마에 사용 됩니다."
  example:
  - "The following code example sets the RequestNamespace property to `http://www.contoso.com`.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public string RequestNamespace { get; set; }
    return:
      type: System.String
      description: "XML 웹 서비스 메서드에 대 한 SOAP 요청에 연결 된 XML 네임 스페이스입니다. 기본값은 http://tempuri.org/ 합니다."
  overload: System.Web.Services.Protocols.SoapDocumentMethodAttribute.RequestNamespace*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapDocumentMethodAttribute.ResponseElementName
  id: ResponseElementName
  parent: System.Web.Services.Protocols.SoapDocumentMethodAttribute
  langs:
  - csharp
  name: ResponseElementName
  nameWithType: SoapDocumentMethodAttribute.ResponseElementName
  fullName: System.Web.Services.Protocols.SoapDocumentMethodAttribute.ResponseElementName
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "XML 웹 서비스 메서드에 대 한 SOAP 응답와 관련 된 XML 요소를 가져오거나 설정 합니다."
  remarks: "ResponseElementName 아래에 있는 매개 변수를 래핑하는 데 사용 하는 XML 요소 정의 `Body` 요소는 SOAP 응답의 경우 <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.ParameterStyle%2A>은 <xref:System.Web.Services.Protocols.SoapParameterStyle>.</xref:System.Web.Services.Protocols.SoapParameterStyle> </xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.ParameterStyle%2A> 이 옵션은 SOAP 응답 XML 웹 서비스의 서비스 설명에서 XML 웹 서비스 메서드를 나타내는 XSD 스키마에 반영 됩니다."
  example:
  - "The following code example sets the name of the XML element associated with the XML Web service method in the SOAP response to `MyCustomResponseElement`.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public string ResponseElementName { get; set; }
    return:
      type: System.String
      description: "XML 웹 서비스 메서드에 대 한 SOAP 요청에 연결 된 XML 요소입니다. 기본값은 WebServiceNameResult, 여기서 WebServiceName은 XML 웹 서비스 메서드의 이름입니다."
  overload: System.Web.Services.Protocols.SoapDocumentMethodAttribute.ResponseElementName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapDocumentMethodAttribute.ResponseNamespace
  id: ResponseNamespace
  parent: System.Web.Services.Protocols.SoapDocumentMethodAttribute
  langs:
  - csharp
  name: ResponseNamespace
  nameWithType: SoapDocumentMethodAttribute.ResponseNamespace
  fullName: System.Web.Services.Protocols.SoapDocumentMethodAttribute.ResponseNamespace
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "XML 웹 서비스 메서드에 대 한 SOAP 응답와 관련 된 XML 네임 스페이스를 가져오거나 설정 합니다."
  remarks: "ResponseNamespace 속성은 서비스 설명에서 XML 웹 서비스 메서드에 대 한 XSD 스키마에 사용 됩니다."
  example:
  - "The following code example sets the ResponseNamespace property to `http://www.contoso.com`.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public string ResponseNamespace { get; set; }
    return:
      type: System.String
      description: "XML 웹 서비스 메서드에 대 한 SOAP 응답와 관련 된 XML 네임 스페이스입니다. 기본값은 http://tempuri.org/ 합니다."
  overload: System.Web.Services.Protocols.SoapDocumentMethodAttribute.ResponseNamespace*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapDocumentMethodAttribute.Use
  id: Use
  parent: System.Web.Services.Protocols.SoapDocumentMethodAttribute
  langs:
  - csharp
  name: Use
  nameWithType: SoapDocumentMethodAttribute.Use
  fullName: System.Web.Services.Protocols.SoapDocumentMethodAttribute.Use
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "SOAP 메시지의 XML 부분에는 XML 웹 서비스 검색 방법에 대 한 서식을 매개 변수를 가져오거나 설정 합니다."
  remarks: "The Web Services Description Language (WSDL) defines two methods for formatting parameters: <xref:System.Web.Services.Description.SoapBindingUse> and <xref:System.Web.Services.Description.SoapBindingUse>. <xref:System.Web.Services.Description.SoapBindingUse> refers to formatting parameters using SOAP encoding, as outlined in the SOAP specification in section 5. <xref:System.Web.Services.Description.SoapBindingUse> refers to formatting the parameters using a pre-defined XSD schema for each parameter.  \n  \n For more details, see [&#91;\\<topic://cpconCustomizingSOAPInASPNETWebServicesWebServiceClients>&#93;](http://msdn.microsoft.com/en-us/1d777288-c0d9-4e6a-b638-f010da031952)."
  example:
  - "The following code example specifies that `Document` / `Encoded` SOAP messages must be sent to the `PlaceOrder` XML Web service method.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public System.Web.Services.Description.SoapBindingUse Use { get; set; }
    return:
      type: System.Web.Services.Description.SoapBindingUse
      description: "<xref href=&quot;System.Web.Services.Description.SoapBindingUse&quot;> </xref> XML 웹 서비스 메서드에 대 한 합니다. 기본값은 <xref href=&quot;System.Web.Services.Description.SoapBindingUse&quot;> </xref>합니다."
  overload: System.Web.Services.Protocols.SoapDocumentMethodAttribute.Use*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.Web.Services.Protocols.SoapDocumentMethodAttribute.#ctor
  parent: System.Web.Services.Protocols.SoapDocumentMethodAttribute
  isExternal: false
  name: SoapDocumentMethodAttribute()
  nameWithType: SoapDocumentMethodAttribute.SoapDocumentMethodAttribute()
  fullName: System.Web.Services.Protocols.SoapDocumentMethodAttribute.SoapDocumentMethodAttribute()
- uid: System.Web.Services.Protocols.SoapDocumentMethodAttribute.#ctor(System.String)
  parent: System.Web.Services.Protocols.SoapDocumentMethodAttribute
  isExternal: false
  name: SoapDocumentMethodAttribute(String)
  nameWithType: SoapDocumentMethodAttribute.SoapDocumentMethodAttribute(String)
  fullName: System.Web.Services.Protocols.SoapDocumentMethodAttribute.SoapDocumentMethodAttribute(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Services.Protocols.SoapDocumentMethodAttribute.Action
  parent: System.Web.Services.Protocols.SoapDocumentMethodAttribute
  isExternal: false
  name: Action
  nameWithType: SoapDocumentMethodAttribute.Action
  fullName: System.Web.Services.Protocols.SoapDocumentMethodAttribute.Action
- uid: System.Web.Services.Protocols.SoapDocumentMethodAttribute.Binding
  parent: System.Web.Services.Protocols.SoapDocumentMethodAttribute
  isExternal: false
  name: Binding
  nameWithType: SoapDocumentMethodAttribute.Binding
  fullName: System.Web.Services.Protocols.SoapDocumentMethodAttribute.Binding
- uid: System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay
  parent: System.Web.Services.Protocols.SoapDocumentMethodAttribute
  isExternal: false
  name: OneWay
  nameWithType: SoapDocumentMethodAttribute.OneWay
  fullName: System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Services.Protocols.SoapDocumentMethodAttribute.ParameterStyle
  parent: System.Web.Services.Protocols.SoapDocumentMethodAttribute
  isExternal: false
  name: ParameterStyle
  nameWithType: SoapDocumentMethodAttribute.ParameterStyle
  fullName: System.Web.Services.Protocols.SoapDocumentMethodAttribute.ParameterStyle
- uid: System.Web.Services.Protocols.SoapParameterStyle
  parent: System.Web.Services.Protocols
  isExternal: false
  name: SoapParameterStyle
  nameWithType: SoapParameterStyle
  fullName: System.Web.Services.Protocols.SoapParameterStyle
- uid: System.Web.Services.Protocols.SoapDocumentMethodAttribute.RequestElementName
  parent: System.Web.Services.Protocols.SoapDocumentMethodAttribute
  isExternal: false
  name: RequestElementName
  nameWithType: SoapDocumentMethodAttribute.RequestElementName
  fullName: System.Web.Services.Protocols.SoapDocumentMethodAttribute.RequestElementName
- uid: System.Web.Services.Protocols.SoapDocumentMethodAttribute.RequestNamespace
  parent: System.Web.Services.Protocols.SoapDocumentMethodAttribute
  isExternal: false
  name: RequestNamespace
  nameWithType: SoapDocumentMethodAttribute.RequestNamespace
  fullName: System.Web.Services.Protocols.SoapDocumentMethodAttribute.RequestNamespace
- uid: System.Web.Services.Protocols.SoapDocumentMethodAttribute.ResponseElementName
  parent: System.Web.Services.Protocols.SoapDocumentMethodAttribute
  isExternal: false
  name: ResponseElementName
  nameWithType: SoapDocumentMethodAttribute.ResponseElementName
  fullName: System.Web.Services.Protocols.SoapDocumentMethodAttribute.ResponseElementName
- uid: System.Web.Services.Protocols.SoapDocumentMethodAttribute.ResponseNamespace
  parent: System.Web.Services.Protocols.SoapDocumentMethodAttribute
  isExternal: false
  name: ResponseNamespace
  nameWithType: SoapDocumentMethodAttribute.ResponseNamespace
  fullName: System.Web.Services.Protocols.SoapDocumentMethodAttribute.ResponseNamespace
- uid: System.Web.Services.Protocols.SoapDocumentMethodAttribute.Use
  parent: System.Web.Services.Protocols.SoapDocumentMethodAttribute
  isExternal: false
  name: Use
  nameWithType: SoapDocumentMethodAttribute.Use
  fullName: System.Web.Services.Protocols.SoapDocumentMethodAttribute.Use
- uid: System.Web.Services.Description.SoapBindingUse
  parent: System.Web.Services.Description
  isExternal: false
  name: SoapBindingUse
  nameWithType: SoapBindingUse
  fullName: System.Web.Services.Description.SoapBindingUse
- uid: System.Web.Services.Protocols.SoapDocumentMethodAttribute.#ctor*
  parent: System.Web.Services.Protocols.SoapDocumentMethodAttribute
  isExternal: false
  name: SoapDocumentMethodAttribute
  nameWithType: SoapDocumentMethodAttribute.SoapDocumentMethodAttribute
- uid: System.Web.Services.Protocols.SoapDocumentMethodAttribute.Action*
  parent: System.Web.Services.Protocols.SoapDocumentMethodAttribute
  isExternal: false
  name: Action
  nameWithType: SoapDocumentMethodAttribute.Action
- uid: System.Web.Services.Protocols.SoapDocumentMethodAttribute.Binding*
  parent: System.Web.Services.Protocols.SoapDocumentMethodAttribute
  isExternal: false
  name: Binding
  nameWithType: SoapDocumentMethodAttribute.Binding
- uid: System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay*
  parent: System.Web.Services.Protocols.SoapDocumentMethodAttribute
  isExternal: false
  name: OneWay
  nameWithType: SoapDocumentMethodAttribute.OneWay
- uid: System.Web.Services.Protocols.SoapDocumentMethodAttribute.ParameterStyle*
  parent: System.Web.Services.Protocols.SoapDocumentMethodAttribute
  isExternal: false
  name: ParameterStyle
  nameWithType: SoapDocumentMethodAttribute.ParameterStyle
- uid: System.Web.Services.Protocols.SoapDocumentMethodAttribute.RequestElementName*
  parent: System.Web.Services.Protocols.SoapDocumentMethodAttribute
  isExternal: false
  name: RequestElementName
  nameWithType: SoapDocumentMethodAttribute.RequestElementName
- uid: System.Web.Services.Protocols.SoapDocumentMethodAttribute.RequestNamespace*
  parent: System.Web.Services.Protocols.SoapDocumentMethodAttribute
  isExternal: false
  name: RequestNamespace
  nameWithType: SoapDocumentMethodAttribute.RequestNamespace
- uid: System.Web.Services.Protocols.SoapDocumentMethodAttribute.ResponseElementName*
  parent: System.Web.Services.Protocols.SoapDocumentMethodAttribute
  isExternal: false
  name: ResponseElementName
  nameWithType: SoapDocumentMethodAttribute.ResponseElementName
- uid: System.Web.Services.Protocols.SoapDocumentMethodAttribute.ResponseNamespace*
  parent: System.Web.Services.Protocols.SoapDocumentMethodAttribute
  isExternal: false
  name: ResponseNamespace
  nameWithType: SoapDocumentMethodAttribute.ResponseNamespace
- uid: System.Web.Services.Protocols.SoapDocumentMethodAttribute.Use*
  parent: System.Web.Services.Protocols.SoapDocumentMethodAttribute
  isExternal: false
  name: Use
  nameWithType: SoapDocumentMethodAttribute.Use
