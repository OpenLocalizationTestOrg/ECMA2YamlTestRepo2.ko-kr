### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
  id: WebPartDisplayMode
  children:
  - System.Web.UI.WebControls.WebParts.WebPartDisplayMode.#ctor(System.String)
  - System.Web.UI.WebControls.WebParts.WebPartDisplayMode.AllowPageDesign
  - System.Web.UI.WebControls.WebParts.WebPartDisplayMode.AssociatedWithToolZone
  - System.Web.UI.WebControls.WebParts.WebPartDisplayMode.IsEnabled(System.Web.UI.WebControls.WebParts.WebPartManager)
  - System.Web.UI.WebControls.WebParts.WebPartDisplayMode.Name
  - System.Web.UI.WebControls.WebParts.WebPartDisplayMode.RequiresPersonalization
  - System.Web.UI.WebControls.WebParts.WebPartDisplayMode.ShowHiddenWebParts
  langs:
  - csharp
  name: WebPartDisplayMode
  nameWithType: WebPartDisplayMode
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
  type: Class
  summary: "웹 파트 페이지를 입력할 수 있는 몇 가지 표시 모드에 대 한 속성의 공통 집합을 정의 합니다."
  remarks: "웹 파트 페이지에는 다양 한 디스플레이 모드 입력할 수 있습니다. 각 디스플레이 모드에서 웹 파트 사용자 인터페이스 (UI)의 특정 요소는 하거나 숨기 거 나 표시 하 고 특정 종류의 페이지를 사용자 수정 작업 중 하나를 사용 합니다. <xref:System.Web.UI.WebControls.WebParts.WebPartManager>제어 웹 파트 컨트롤 집합에서 사용할 수 있는 디스플레이 모드에 대 한 구현을 포함 하 고 페이지에 대 한 디스플레이 모드를 관리 합니다.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>       다음 표에서 사용 가능한 표시 모드를 나타내는 필드를 나열 합니다.      | 디스플레이 모드 | 설명 |   |------------------|-----------------|   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode>| 최종 사용자가 페이지를 볼 수 있는 표준 모드에서 웹 파트 컨트롤 및 UI 요소를 표시 합니다. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode>| 영역 UI 요소를 표시 하며를 페이지의 레이아웃을 변경 하려면 웹 파트 컨트롤을 끌어 놓을 수 있습니다. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode>| 특별 한 편집 UI 요소를 표시 하 고 최종 사용자가 페이지에 컨트롤을 편집할 수 있습니다. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode>| 특수 카탈로그 UI 요소를 표시 하며 최종 사용자가 페이지 컨트롤을 추가 및 제거할 수 있습니다. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode>| 특수 연결 UI 요소를 표시 하며 최종 사용자가 웹 파트 컨트롤에 연결할 수 있습니다. |</xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode>"
  example:
  - "The following code examples demonstrate the declarative use of display modes on a Web Parts page. Each of these display modes, as implemented by the Web Parts control set, is derived from the WebPartDisplayMode class.  \n  \n This code example has four parts:  \n  \n-   A custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control.  \n  \n-   A Web page with a zone to host the custom control.  \n  \n-   A user control that enables users to change display modes on the Web page.  \n  \n-   An explanation of how the page works in a browser.  \n  \n The first part of the example is a custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control, `TextDisplayWebPart`. For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. For a demonstration of both methods of compiling, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[WebParts_WebPartDisplayMode_Overview#9](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_266_1.vb)]\n [!code-cs[WebParts_WebPartDisplayMode_Overview#9](~/add/codesnippet/csharp/t-system.web.ui.webcontr_266_1.cs)]  \n  \n The second part of the code example is a Web page that references a standard ASP.NET <xref:System.Web.UI.WebControls.Calendar> control within an `<asp:webpartzone>` element, so that the control is wrapped with a <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> control and given basic Web Parts functionality at run time. The page also references the `TextDisplayWebPart` control within an `<asp:catalogzone>` element, which demonstrates the end user's ability to switch to catalog mode and add controls to the page. The page also includes an `<asp:editorzone>` element, which enables users to edit the controls contained in the `<asp:webpartzone>` when the page is in edit mode. Near the top of the page are a `register` directive for the custom control and another one for the user control.  \n  \n [!code-cs[WebParts_WebPartDisplayMode_Overview#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_266_2.aspx)]\n [!code-vb[WebParts_WebPartDisplayMode_Overview#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_266_2.aspx)]  \n  \n The third part of the code example is a user control that enables users to switch display modes on a Web page. Save the source code for this control in a file named DisplayModeMenuCS.ascx or DisplayModeMenuVB.ascx (depending on which language you use for the code example), and put it in the same directory as the Web page. For more details about display modes and a description of the source code in this control, see the topic [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_WebPartDisplayMode_Overview#5](~/add/codesnippet/csharp/t-system.web.ui.webcontr_266_3.ascx)]\n [!code-vb[WebParts_WebPartDisplayMode_Overview#5](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_266_3.ascx)]  \n  \n When you load the page in a browser, you can use the **Display Mode** drop-down list control to switch to different display modes. To edit controls, select **Edit** in the drop-down list control. To edit a specific control, expose its verbs menu by clicking the arrow in the control's title bar, and then clicking **Edit** in the verbs menu. When a control is in edit mode, the editing controls added to this page enable you to change the edited control's appearance and layout. When you are finished, select **Browse** in the **Display Mode** drop-down list control to return the page to a normal view. To add controls to the page, switch to catalog mode. Notice that you can either use the **Display Mode** drop-down list control, or click the button near the bottom of the page. The inline code for the `Button1_Click` method demonstrates how to change display modes programmatically. While you are in catalog mode, you can add the custom `TextDisplayWebPart` control to the page."
  syntax:
    content: public abstract class WebPartDisplayMode
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
  langs:
  - csharp
  name: WebPartDisplayMode(String)
  nameWithType: WebPartDisplayMode.WebPartDisplayMode(String)
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.WebPartDisplayMode(String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "디스플레이 모드의 이름에 대 한 값을 초기화합니다."
  remarks: "A <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>클래스는 추상 개체가 만들어지지 않습니다.</xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> 런타임에 <xref:System.Web.UI.WebControls.WebParts.WebPartManager>컨트롤이 사용 하는 <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>각 다양 한 페이지 디스플레이 모드에 대 한 기본 클래스를 만드는 개체 클래스입니다.</xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> </xref:System.Web.UI.WebControls.WebParts.WebPartManager>"
  syntax:
    content: protected WebPartDisplayMode (string name);
    parameters:
    - id: name
      type: System.String
      description: "디스플레이 모드의 이름입니다."
  overload: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.AllowPageDesign
  id: AllowPageDesign
  parent: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
  langs:
  - csharp
  name: AllowPageDesign
  nameWithType: WebPartDisplayMode.AllowPageDesign
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.AllowPageDesign
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "페이지가 특정 디스플레이 모드에 있을 때 사용자가 웹 파트 페이지의 레이아웃을 변경할 수 있는지 여부를 결정 하는 값을 가져옵니다."
  syntax:
    content: public virtual bool AllowPageDesign { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>사용자가 페이지 레이아웃; 변경할 수 있는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.AllowPageDesign*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.AssociatedWithToolZone
  id: AssociatedWithToolZone
  parent: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
  langs:
  - csharp
  name: AssociatedWithToolZone
  nameWithType: WebPartDisplayMode.AssociatedWithToolZone
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.AssociatedWithToolZone
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "특정 디스플레이 모드는에서 파생 된 클래스와 연결 되어 있는지 여부를 나타내는 값을 가져옵니다는 <xref href=&quot;System.Web.UI.WebControls.WebParts.ToolZone&quot;> </xref> 클래스입니다."
  remarks: "웹 파트 페이지의 AssociatedWithToolZone 속성이로 설정 되는 디스플레이 모드를 입력 하는 경우 `true`, <xref:System.Web.UI.WebControls.WebParts.WebPartManager>제어를 해석 하는 연결된 된 클래스에서 파생 되었는지 것는 <xref:System.Web.UI.WebControls.WebParts.ToolZone>클래스 및 추가 사용자 인터페이스 (UI) 요소 표시 해야 합니다.</xref:System.Web.UI.WebControls.WebParts.ToolZone> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> 예를 들어 편집 모드로 전환 하는 페이지, 웹 파트 컨트롤을 편집 하기 위해 UI 요소를 포함 하는 특수 영역이 페이지에 표시 합니다. 이 문제는 있기 때문에 AssociatedWithToolZone 속성 값 때문에 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode>필드가로 설정 된 `true`.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode>"
  syntax:
    content: public virtual bool AssociatedWithToolZone { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>디스플레이 모드와 연결 된 경우는 <xref href=&quot;System.Web.UI.WebControls.WebParts.ToolZone&quot;> </xref> 클래스입니다; 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.AssociatedWithToolZone*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.IsEnabled(System.Web.UI.WebControls.WebParts.WebPartManager)
  id: IsEnabled(System.Web.UI.WebControls.WebParts.WebPartManager)
  parent: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
  langs:
  - csharp
  name: IsEnabled(WebPartManager)
  nameWithType: WebPartDisplayMode.IsEnabled(WebPartManager)
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.IsEnabled(WebPartManager)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "페이지가 있는 동안 특정 디스플레이 모드에 사용자가 페이지를 개인 설정할 수 있는지 여부를 나타내는 값을 가져옵니다."
  syntax:
    content: public virtual bool IsEnabled (System.Web.UI.WebControls.WebParts.WebPartManager webPartManager);
    parameters:
    - id: webPartManager
      type: System.Web.UI.WebControls.WebParts.WebPartManager
      description: "<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> 현재 페이지에 컨트롤 인스턴스."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>사용자가 페이지; 개인 설정할 수 있으면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다. 그러나 때 <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode.RequiresPersonalization*>로 설정 된 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, 개인 설정 페이지에서 사용 되지 않는지를 기본값 됩니다 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode.RequiresPersonalization*>"
  overload: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.IsEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.Name
  id: Name
  parent: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
  langs:
  - csharp
  name: Name
  nameWithType: WebPartDisplayMode.Name
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.Name
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "디스플레이 모드의 이름을 가져옵니다."
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "디스플레이 모드의 이름을 포함 하는 문자열입니다."
  overload: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.RequiresPersonalization
  id: RequiresPersonalization
  parent: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
  langs:
  - csharp
  name: RequiresPersonalization
  nameWithType: WebPartDisplayMode.RequiresPersonalization
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.RequiresPersonalization
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "특정 디스플레이 모드를 사용 하도록 설정할 개인 설정 하는지 여부를 나타내는 값을 가져옵니다."
  syntax:
    content: public virtual bool RequiresPersonalization { get; }
    return:
      type: System.Boolean
      description: "개인 설정 필요한 지 여부를 나타내는 부울 값입니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.RequiresPersonalization*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.ShowHiddenWebParts
  id: ShowHiddenWebParts
  parent: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
  langs:
  - csharp
  name: ShowHiddenWebParts
  nameWithType: WebPartDisplayMode.ShowHiddenWebParts
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.ShowHiddenWebParts
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "컨트롤 있는 되어 있는지 여부를 나타내는 값을 가져옵니다 자신의 <xref:System.Web.UI.WebControls.WebParts.WebPart.Hidden*>속성이로 설정 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> 표시 됩니다.</xref:System.Web.UI.WebControls.WebParts.WebPart.Hidden*>"
  syntax:
    content: public virtual bool ShowHiddenWebParts { get; }
    return:
      type: System.Boolean
      description: "숨겨진된 컨트롤을 표시할지 여부를 나타내는 부울 값입니다. 기본값은 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.ShowHiddenWebParts*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.#ctor(System.String)
  parent: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
  isExternal: false
  name: WebPartDisplayMode(String)
  nameWithType: WebPartDisplayMode.WebPartDisplayMode(String)
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.WebPartDisplayMode(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.AllowPageDesign
  parent: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
  isExternal: false
  name: AllowPageDesign
  nameWithType: WebPartDisplayMode.AllowPageDesign
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.AllowPageDesign
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.AssociatedWithToolZone
  parent: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
  isExternal: false
  name: AssociatedWithToolZone
  nameWithType: WebPartDisplayMode.AssociatedWithToolZone
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.AssociatedWithToolZone
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.IsEnabled(System.Web.UI.WebControls.WebParts.WebPartManager)
  parent: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
  isExternal: false
  name: IsEnabled(WebPartManager)
  nameWithType: WebPartDisplayMode.IsEnabled(WebPartManager)
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.IsEnabled(WebPartManager)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartManager
  nameWithType: WebPartManager
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.Name
  parent: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
  isExternal: false
  name: Name
  nameWithType: WebPartDisplayMode.Name
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.Name
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.RequiresPersonalization
  parent: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
  isExternal: false
  name: RequiresPersonalization
  nameWithType: WebPartDisplayMode.RequiresPersonalization
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.RequiresPersonalization
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.ShowHiddenWebParts
  parent: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
  isExternal: false
  name: ShowHiddenWebParts
  nameWithType: WebPartDisplayMode.ShowHiddenWebParts
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.ShowHiddenWebParts
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.#ctor*
  parent: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
  isExternal: false
  name: WebPartDisplayMode
  nameWithType: WebPartDisplayMode.WebPartDisplayMode
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.AllowPageDesign*
  parent: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
  isExternal: false
  name: AllowPageDesign
  nameWithType: WebPartDisplayMode.AllowPageDesign
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.AssociatedWithToolZone*
  parent: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
  isExternal: false
  name: AssociatedWithToolZone
  nameWithType: WebPartDisplayMode.AssociatedWithToolZone
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.IsEnabled*
  parent: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
  isExternal: false
  name: IsEnabled
  nameWithType: WebPartDisplayMode.IsEnabled
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.Name*
  parent: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
  isExternal: false
  name: Name
  nameWithType: WebPartDisplayMode.Name
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.RequiresPersonalization*
  parent: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
  isExternal: false
  name: RequiresPersonalization
  nameWithType: WebPartDisplayMode.RequiresPersonalization
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayMode.ShowHiddenWebParts*
  parent: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
  isExternal: false
  name: ShowHiddenWebParts
  nameWithType: WebPartDisplayMode.ShowHiddenWebParts
