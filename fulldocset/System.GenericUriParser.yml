### YamlMime:ManagedReference
items:
- uid: System.GenericUriParser
  id: GenericUriParser
  children:
  - System.GenericUriParser.#ctor(System.GenericUriParserOptions)
  langs:
  - csharp
  name: GenericUriParser
  nameWithType: GenericUriParser
  fullName: System.GenericUriParser
  type: Class
  summary: "계층적 URI에 대 한 사용자 지정 가능한 파서입니다."
  remarks: "만들려는 경우 잘 알려진 체계에 따라 파서를 사용 하 여 <xref:System.HttpStyleUriParser>, <xref:System.FtpStyleUriParser>, <xref:System.GopherStyleUriParser>, <xref:System.LdapStyleUriParser>, 또는 <xref:System.NewsStyleUriParser>.</xref:System.NewsStyleUriParser> </xref:System.LdapStyleUriParser> </xref:System.GopherStyleUriParser> </xref:System.FtpStyleUriParser> </xref:System.HttpStyleUriParser>       파서 동작에서 사용할 수 있는 값의 비트 조합을 전달 하 여 지정는 사용자 지정 가능한 파서를 만들 때의 <xref:System.GenericUriParserOptions?displayProperty=fullName>GenericUriParser 생성자에 열거형.</xref:System.GenericUriParserOptions?displayProperty=fullName>       기존 <xref:System.Uri?displayProperty=fullName>클래스 식별자 IRI (International Resource) 및 이름 IDN (Internationalized Domain)에 대 한 지원을 제공 하기 위해 확장 되었습니다.</xref:System.Uri?displayProperty=fullName> 현재 사용자는 특히 IRI를 사용 하지 않는 한 모든 변경 된.NET Framework 2.0 동작 표시 되지 않습니다. 이렇게 하면 이전 버전의.NET Framework와 응용 프로그램 호환성.       GenericUriParser에서 파생 된 모든 파서를 얻지 것입니다 IRI 및 IDN 기본적으로 지원 합니다. <xref:System.GenericUriParserOptions>IRI 및 IDN 옵션이 포함 되지 않습니다 지원.</xref:System.GenericUriParserOptions> 두 개의 새 값에 추가 되는 <xref:System.GenericUriParserOptions?displayProperty=fullName>를 사용자 지정 파서 IRI 및 IDN 지원 하는지 나타내는 열거형.</xref:System.GenericUriParserOptions?displayProperty=fullName>       IRI 및 IDN에 대 한 자세한 내용은 지원, <xref:System.Uri?displayProperty=fullName>클래스</xref:System.Uri?displayProperty=fullName> 에 대 한 설명 섹션을 참조"
  syntax:
    content: 'public class GenericUriParser : UriParser'
  inheritance:
  - System.Object
  - System.UriParser
  implements: []
  inheritedMembers:
  - System.UriParser.GetComponents(System.Uri,System.UriComponents,System.UriFormat)
  - System.UriParser.InitializeAndValidate(System.Uri,System.UriFormatException@)
  - System.UriParser.IsBaseOf(System.Uri,System.Uri)
  - System.UriParser.IsKnownScheme(System.String)
  - System.UriParser.IsWellFormedOriginalString(System.Uri)
  - System.UriParser.OnNewUri
  - System.UriParser.OnRegister(System.String,System.Int32)
  - System.UriParser.Register(System.UriParser,System.String,System.Int32)
  - System.UriParser.Resolve(System.Uri,System.Uri,System.UriFormatException@)
  platform:
  - net462
- uid: System.GenericUriParser.#ctor(System.GenericUriParserOptions)
  id: '#ctor(System.GenericUriParserOptions)'
  parent: System.GenericUriParser
  langs:
  - csharp
  name: GenericUriParser(GenericUriParserOptions)
  nameWithType: GenericUriParser.GenericUriParser(GenericUriParserOptions)
  fullName: System.GenericUriParser.GenericUriParser(GenericUriParserOptions)
  type: Constructor
  assemblies:
  - System
  namespace: System
  summary: "계층적 URI에 대 한 사용자 지정 가능한 파서를 만듭니다."
  remarks: "이 생성자에 인수로 사용 하 여 <xref:System.UriParser.Register%28System.UriParser%2CSystem.String%2CSystem.Int32%29?displayProperty=fullName>만들려는 경우 잘 알려진 체계에 따라 파서를 사용 하 여 <xref:System.HttpStyleUriParser>, <xref:System.FtpStyleUriParser>, <xref:System.GopherStyleUriParser>, <xref:System.LdapStyleUriParser>, 또는 <xref:System.NewsStyleUriParser>.</xref:System.NewsStyleUriParser> </xref:System.LdapStyleUriParser> </xref:System.GopherStyleUriParser> </xref:System.FtpStyleUriParser> </xref:System.HttpStyleUriParser> </xref:System.UriParser.Register%28System.UriParser%2CSystem.String%2CSystem.Int32%29?displayProperty=fullName>       파서 동작에서 사용할 수 있는 값의 비트 조합을 전달 하 여 지정는 사용자 지정 가능한 파서를 만들 때의 <xref:System.GenericUriParserOptions?displayProperty=fullName>열거형에는 <xref:System.GenericUriParser>생성자.</xref:System.GenericUriParser> </xref:System.GenericUriParserOptions?displayProperty=fullName>       기존 <xref:System.Uri?displayProperty=fullName>클래스 식별자 IRI (International Resource) 및 이름 IDN (Internationalized Domain)에 대 한 지원을 제공 하기 위해 확장 되었습니다.</xref:System.Uri?displayProperty=fullName> 현재 사용자는 특히 IRI를 사용 하지 않는 한 모든 변경 된.NET Framework 2.0 동작 표시 되지 않습니다. 이렇게 하면 이전 버전의.NET Framework와 응용 프로그램 호환성.       파생 된 모든 파서 <xref:System.GenericUriParser>기본적으로 IRI 및 IDN 지원을 얻지 것입니다.</xref:System.GenericUriParser> <xref:System.GenericUriParserOptions>IRI 및 IDN 옵션이 포함 되지 않습니다 지원.</xref:System.GenericUriParserOptions> 두 개의 새 값에 추가 되는 <xref:System.GenericUriParserOptions?displayProperty=fullName>를 사용자 지정 파서 IRI 및 IDN 지원 하는지 나타내는 열거형.</xref:System.GenericUriParserOptions?displayProperty=fullName>       <xref:System.GenericUriParserOptions>형식은 파서는 지원에 대 한 식별자 IRI (International Resource) RFC 3987에 지정 된 구문 분석 규칙을 나타냅니다.</xref:System.GenericUriParserOptions> IRI 사용 여부는 구성 값에 따라 결정 됩니다.       <xref:System.GenericUriParserOptions>형식은 파서는 지원 다국어 도메인 이름 (IDN)의 호스트 이름은 IDN ()을 구문 분석을 나타냅니다.</xref:System.GenericUriParserOptions> IDN 사용 여부는 구성 값에 따라 결정 됩니다.       <xref:System.Configuration.IdnElement?displayProperty=fullName> <xref:System.Configuration.IriParsingElement?displayProperty=fullName>IRI <xref:System.Uri?displayProperty=fullName>클래스</xref:System.Uri?displayProperty=fullName> 에서 처리를 제어 하는 구성 하는 설정</xref:System.Configuration.IriParsingElement?displayProperty=fullName> 에 의해 간접적으로 제어 됩니다</xref:System.Configuration.IdnElement?displayProperty=fullName> 에 대 한 구성 설정 IRI 처리를 가능 처리 IDN에 대 한 활성화 되어야 합니다. IRI 처리가 비활성화 되 IDN 처리의 호환성을 위해.NET Framework 2.0 동작을 사용 하 고 IDN 이름 사용 되지 않는 있는 기본 설정으로 설정 됩니다.       다국어 도메인 이름 (IDN) 특성 IDN 처리 하는 것을 제어합니다. 다른 모든 IRI 처리 (예: 문자 정규화)는 기본적으로 수행 됩니다.       IRI 및 IDN에 대 한 자세한 내용은 지원, <xref:System.Uri?displayProperty=fullName>클래스</xref:System.Uri?displayProperty=fullName> 에 대 한 설명 섹션을 참조"
  syntax:
    content: public GenericUriParser (GenericUriParserOptions options);
    parameters:
    - id: options
      type: System.GenericUriParserOptions
      description: "이 옵션을 지정 <xref href=&quot;System.GenericUriParser&quot;> </xref>합니다."
  overload: System.GenericUriParser.#ctor*
  exceptions: []
  platform:
  - net462
references:
- uid: System.UriParser
  isExternal: false
  name: System.UriParser
- uid: System.GenericUriParser.#ctor(System.GenericUriParserOptions)
  parent: System.GenericUriParser
  isExternal: false
  name: GenericUriParser(GenericUriParserOptions)
  nameWithType: GenericUriParser.GenericUriParser(GenericUriParserOptions)
  fullName: System.GenericUriParser.GenericUriParser(GenericUriParserOptions)
- uid: System.GenericUriParserOptions
  parent: System
  isExternal: false
  name: GenericUriParserOptions
  nameWithType: GenericUriParserOptions
  fullName: System.GenericUriParserOptions
- uid: System.GenericUriParser.#ctor*
  parent: System.GenericUriParser
  isExternal: false
  name: GenericUriParser
  nameWithType: GenericUriParser.GenericUriParser
