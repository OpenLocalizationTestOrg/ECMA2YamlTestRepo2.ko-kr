### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Selectors.X509SecurityTokenProvider
  id: X509SecurityTokenProvider
  children:
  - System.IdentityModel.Selectors.X509SecurityTokenProvider.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)
  - System.IdentityModel.Selectors.X509SecurityTokenProvider.#ctor(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)
  - System.IdentityModel.Selectors.X509SecurityTokenProvider.Certificate
  - System.IdentityModel.Selectors.X509SecurityTokenProvider.Dispose
  - System.IdentityModel.Selectors.X509SecurityTokenProvider.GetTokenCore(System.TimeSpan)
  langs:
  - csharp
  name: X509SecurityTokenProvider
  nameWithType: X509SecurityTokenProvider
  fullName: System.IdentityModel.Selectors.X509SecurityTokenProvider
  type: Class
  summary: "제공 하는 보안 토큰 공급자를 나타냅니다. <xref href=&quot;System.IdentityModel.Tokens.X509SecurityToken&quot;> </xref> SOAP에 대 한 보안 토큰 메시지 보낸 사람입니다."
  remarks: "대부분의 경우에서 필요한 경우가 아니라면 X509SecurityTokenProvider 클래스를 직접 호출 하는 클라이언트에서 요구 하는 SOAP 메시지를 보낼 때 호출 되기 때문에 <xref:System.IdentityModel.Tokens.X509SecurityToken>보안 토큰입니다.</xref:System.IdentityModel.Tokens.X509SecurityToken> 클라이언트를 사용 하 여 필요한 보안 토큰의 유형을 지정 하는 구체적으로,는 <xref:System.ServiceModel.Description.ClientCredentials>클래스 및 <xref:System.ServiceModel.Description.ClientCredentials>호출 클래스는 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A>메서드를 보안 토큰을 가져옵니다.</xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A> </xref:System.ServiceModel.Description.ClientCredentials> </xref:System.ServiceModel.Description.ClientCredentials> 필요한 보안 토큰의 경우는 <xref:System.IdentityModel.Tokens.X509SecurityToken>보안 토큰의 <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A>메서드 호출의 <xref:System.IdentityModel.Selectors.X509SecurityTokenProvider.GetTokenCore%2A>메서드.</xref:System.IdentityModel.Selectors.X509SecurityTokenProvider.GetTokenCore%2A> </xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A> </xref:System.IdentityModel.Tokens.X509SecurityToken>"
  syntax:
    content: 'public class X509SecurityTokenProvider : System.IdentityModel.Selectors.SecurityTokenProvider, IDisposable'
  inheritance:
  - System.Object
  - System.IdentityModel.Selectors.SecurityTokenProvider
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)
  - System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)
  - System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)
  - System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)
  - System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelToken(System.IAsyncResult)
  - System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelTokenCore(System.IAsyncResult)
  - System.IdentityModel.Selectors.SecurityTokenProvider.EndGetToken(System.IAsyncResult)
  - System.IdentityModel.Selectors.SecurityTokenProvider.EndGetTokenCore(System.IAsyncResult)
  - System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewToken(System.IAsyncResult)
  - System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewTokenCore(System.IAsyncResult)
  - System.IdentityModel.Selectors.SecurityTokenProvider.GetToken(System.TimeSpan)
  - System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenCancellation
  - System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenRenewal
  platform:
  - net462
- uid: System.IdentityModel.Selectors.X509SecurityTokenProvider.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)
  id: '#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)'
  parent: System.IdentityModel.Selectors.X509SecurityTokenProvider
  langs:
  - csharp
  name: X509SecurityTokenProvider(X509Certificate2)
  nameWithType: X509SecurityTokenProvider.X509SecurityTokenProvider(X509Certificate2)
  fullName: System.IdentityModel.Selectors.X509SecurityTokenProvider.X509SecurityTokenProvider(X509Certificate2)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.IdentityModel.Selectors.X509SecurityTokenProvider&quot;> </xref> 클래스 지정된 된 X.509 인증서를 사용 합니다."
  remarks: "<xref:System.IdentityModel.Selectors.X509SecurityTokenProvider.GetTokenCore%2A>메서드 보안 토큰을 가져옵니다에 지정 된 인증서를 기반으로 `certificate` 매개 변수.</xref:System.IdentityModel.Selectors.X509SecurityTokenProvider.GetTokenCore%2A>"
  syntax:
    content: public X509SecurityTokenProvider (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate);
    parameters:
    - id: certificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
      description: "<xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> 는 보안에 대 한 토큰을 가져옵니다."
  overload: System.IdentityModel.Selectors.X509SecurityTokenProvider.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>certificate</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Selectors.X509SecurityTokenProvider.#ctor(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)
  id: '#ctor(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)'
  parent: System.IdentityModel.Selectors.X509SecurityTokenProvider
  langs:
  - csharp
  name: X509SecurityTokenProvider(StoreLocation,StoreName,X509FindType,Object)
  nameWithType: X509SecurityTokenProvider.X509SecurityTokenProvider(StoreLocation,StoreName,X509FindType,Object)
  fullName: System.IdentityModel.Selectors.X509SecurityTokenProvider.X509SecurityTokenProvider(StoreLocation,StoreName,X509FindType,Object)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.IdentityModel.Selectors.X509SecurityTokenProvider&quot;> </xref> 지정된 된 인증서를 X.509 인증서를 가져와 클래스 조건을 저장 합니다."
  remarks: "<xref:System.IdentityModel.Selectors.X509SecurityTokenProvider.GetTokenCore%2A>저장소 기준 보안 토큰과 인증서를 기반으로 지정된 된 인증서와 일치 하는 메서드를 가져옵니다.</xref:System.IdentityModel.Selectors.X509SecurityTokenProvider.GetTokenCore%2A>"
  syntax:
    content: public X509SecurityTokenProvider (System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, System.Security.Cryptography.X509Certificates.StoreName storeName, System.Security.Cryptography.X509Certificates.X509FindType findType, object findValue);
    parameters:
    - id: storeLocation
      type: System.Security.Cryptography.X509Certificates.StoreLocation
      description: "중 하나는 <xref href=&quot;System.Security.Cryptography.X509Certificates.StoreLocation&quot;> </xref> 위치를 저장 하는 인증서를 지정 하는 값입니다."
    - id: storeName
      type: System.Security.Cryptography.X509Certificates.StoreName
      description: "중 하나는 <xref href=&quot;System.Security.Cryptography.X509Certificates.StoreName&quot;> </xref> 인증서를 지정 하는 값 이름을 저장 합니다."
    - id: findType
      type: System.Security.Cryptography.X509Certificates.X509FindType
      description: "중 하나는<xref href=&quot;System.Security.Cryptography.X509Certificates.X509FindType&quot;> </xref> 인증서 저장소를 검색 하는 방법을 지정 하는 값입니다."
    - id: findValue
      type: System.Object
      description: "인증서 저장소에서 X.509 인증서를 찾는 데 값입니다."
  overload: System.IdentityModel.Selectors.X509SecurityTokenProvider.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>findValue</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IdentityModel.Tokens.SecurityTokenException
    commentId: T:System.IdentityModel.Tokens.SecurityTokenException
    description: "지정 된 조건과 일치 하는 인증서가 없습니다.       -또는-지정된 된 조건과 일치 하는 둘 이상의 인증서."
  platform:
  - net462
- uid: System.IdentityModel.Selectors.X509SecurityTokenProvider.Certificate
  id: Certificate
  parent: System.IdentityModel.Selectors.X509SecurityTokenProvider
  langs:
  - csharp
  name: Certificate
  nameWithType: X509SecurityTokenProvider.Certificate
  fullName: System.IdentityModel.Selectors.X509SecurityTokenProvider.Certificate
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "와 연결 된 X.509 인증서를 가져옵니다는 <xref href=&quot;System.IdentityModel.Tokens.X509SecurityToken&quot;> </xref> 보안 토큰입니다."
  remarks: "<xref:System.IdentityModel.Selectors.X509SecurityTokenProvider.GetTokenCore%2A>메서드 보안 토큰을 가져옵니다 인증서 속성으로 표현 되는 인증서를 기반으로 합니다.</xref:System.IdentityModel.Selectors.X509SecurityTokenProvider.GetTokenCore%2A>"
  syntax:
    content: public System.Security.Cryptography.X509Certificates.X509Certificate2 Certificate { get; }
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
      description: "가져옵니다는 <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> 보안 토큰의 X.509 인증서를 나타내는입니다."
  overload: System.IdentityModel.Selectors.X509SecurityTokenProvider.Certificate*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.X509SecurityTokenProvider.Dispose
  id: Dispose
  parent: System.IdentityModel.Selectors.X509SecurityTokenProvider
  langs:
  - csharp
  name: Dispose()
  nameWithType: X509SecurityTokenProvider.Dispose()
  fullName: System.IdentityModel.Selectors.X509SecurityTokenProvider.Dispose()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "사용 하는 모든 리소스를 해제는 <xref href=&quot;System.IdentityModel.Selectors.X509SecurityTokenProvider&quot;> </xref>합니다."
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.IdentityModel.Selectors.X509SecurityTokenProvider.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.X509SecurityTokenProvider.GetTokenCore(System.TimeSpan)
  id: GetTokenCore(System.TimeSpan)
  parent: System.IdentityModel.Selectors.X509SecurityTokenProvider
  langs:
  - csharp
  name: GetTokenCore(TimeSpan)
  nameWithType: X509SecurityTokenProvider.GetTokenCore(TimeSpan)
  fullName: System.IdentityModel.Selectors.X509SecurityTokenProvider.GetTokenCore(TimeSpan)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "생성자에 지정 된 X.509 인증서를 사용 하 여 보안 토큰을 가져옵니다."
  remarks: "<xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A>메서드는 <xref:System.ServiceModel.Description.ClientCredentials>클래스는 클라이언트가 SOAP 메시지를 보내면 및는 <xref:System.IdentityModel.Tokens.X509SecurityToken>은 보안 토큰이 필요 합니다.</xref:System.IdentityModel.Tokens.X509SecurityToken> </xref:System.ServiceModel.Description.ClientCredentials> </xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A>       <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A>메서드 GetTokenCore 메서드를 호출 합니다.</xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A>"
  syntax:
    content: protected override System.IdentityModel.Tokens.SecurityToken GetTokenCore (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "A <xref:System.TimeSpan>보안 토큰을 가져오는 메시지에 대 한 제한 시간 값을 지정 하는.</xref:System.TimeSpan>"
    return:
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> 가져올 보안 토큰을 나타내는입니다."
  overload: System.IdentityModel.Selectors.X509SecurityTokenProvider.GetTokenCore*
  exceptions: []
  platform:
  - net462
references:
- uid: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: System.IdentityModel.Selectors.SecurityTokenProvider
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.IdentityModel.Tokens.SecurityTokenException
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityTokenException
  nameWithType: SecurityTokenException
  fullName: System.IdentityModel.Tokens.SecurityTokenException
- uid: System.IdentityModel.Selectors.X509SecurityTokenProvider.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)
  parent: System.IdentityModel.Selectors.X509SecurityTokenProvider
  isExternal: false
  name: X509SecurityTokenProvider(X509Certificate2)
  nameWithType: X509SecurityTokenProvider.X509SecurityTokenProvider(X509Certificate2)
  fullName: System.IdentityModel.Selectors.X509SecurityTokenProvider.X509SecurityTokenProvider(X509Certificate2)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509Certificate2
  nameWithType: X509Certificate2
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2
- uid: System.IdentityModel.Selectors.X509SecurityTokenProvider.#ctor(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)
  parent: System.IdentityModel.Selectors.X509SecurityTokenProvider
  isExternal: false
  name: X509SecurityTokenProvider(StoreLocation,StoreName,X509FindType,Object)
  nameWithType: X509SecurityTokenProvider.X509SecurityTokenProvider(StoreLocation,StoreName,X509FindType,Object)
  fullName: System.IdentityModel.Selectors.X509SecurityTokenProvider.X509SecurityTokenProvider(StoreLocation,StoreName,X509FindType,Object)
- uid: System.Security.Cryptography.X509Certificates.StoreLocation
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: StoreLocation
  nameWithType: StoreLocation
  fullName: System.Security.Cryptography.X509Certificates.StoreLocation
- uid: System.Security.Cryptography.X509Certificates.StoreName
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: StoreName
  nameWithType: StoreName
  fullName: System.Security.Cryptography.X509Certificates.StoreName
- uid: System.Security.Cryptography.X509Certificates.X509FindType
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509FindType
  nameWithType: X509FindType
  fullName: System.Security.Cryptography.X509Certificates.X509FindType
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IdentityModel.Selectors.X509SecurityTokenProvider.Certificate
  parent: System.IdentityModel.Selectors.X509SecurityTokenProvider
  isExternal: false
  name: Certificate
  nameWithType: X509SecurityTokenProvider.Certificate
  fullName: System.IdentityModel.Selectors.X509SecurityTokenProvider.Certificate
- uid: System.IdentityModel.Selectors.X509SecurityTokenProvider.Dispose
  parent: System.IdentityModel.Selectors.X509SecurityTokenProvider
  isExternal: false
  name: Dispose()
  nameWithType: X509SecurityTokenProvider.Dispose()
  fullName: System.IdentityModel.Selectors.X509SecurityTokenProvider.Dispose()
- uid: System.IdentityModel.Selectors.X509SecurityTokenProvider.GetTokenCore(System.TimeSpan)
  parent: System.IdentityModel.Selectors.X509SecurityTokenProvider
  isExternal: false
  name: GetTokenCore(TimeSpan)
  nameWithType: X509SecurityTokenProvider.GetTokenCore(TimeSpan)
  fullName: System.IdentityModel.Selectors.X509SecurityTokenProvider.GetTokenCore(TimeSpan)
- uid: System.IdentityModel.Tokens.SecurityToken
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityToken
  nameWithType: SecurityToken
  fullName: System.IdentityModel.Tokens.SecurityToken
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.IdentityModel.Selectors.X509SecurityTokenProvider.#ctor*
  parent: System.IdentityModel.Selectors.X509SecurityTokenProvider
  isExternal: false
  name: X509SecurityTokenProvider
  nameWithType: X509SecurityTokenProvider.X509SecurityTokenProvider
- uid: System.IdentityModel.Selectors.X509SecurityTokenProvider.Certificate*
  parent: System.IdentityModel.Selectors.X509SecurityTokenProvider
  isExternal: false
  name: Certificate
  nameWithType: X509SecurityTokenProvider.Certificate
- uid: System.IdentityModel.Selectors.X509SecurityTokenProvider.Dispose*
  parent: System.IdentityModel.Selectors.X509SecurityTokenProvider
  isExternal: false
  name: Dispose
  nameWithType: X509SecurityTokenProvider.Dispose
- uid: System.IdentityModel.Selectors.X509SecurityTokenProvider.GetTokenCore*
  parent: System.IdentityModel.Selectors.X509SecurityTokenProvider
  isExternal: false
  name: GetTokenCore
  nameWithType: X509SecurityTokenProvider.GetTokenCore
