### YamlMime:ManagedReference
items:
- uid: System.Windows.Int32Rect
  id: Int32Rect
  children:
  - System.Windows.Int32Rect.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Windows.Int32Rect.Empty
  - System.Windows.Int32Rect.Equals(System.Object)
  - System.Windows.Int32Rect.Equals(System.Windows.Int32Rect)
  - System.Windows.Int32Rect.Equals(System.Windows.Int32Rect,System.Windows.Int32Rect)
  - System.Windows.Int32Rect.GetHashCode
  - System.Windows.Int32Rect.HasArea
  - System.Windows.Int32Rect.Height
  - System.Windows.Int32Rect.IsEmpty
  - System.Windows.Int32Rect.op_Equality(System.Windows.Int32Rect,System.Windows.Int32Rect)
  - System.Windows.Int32Rect.op_Inequality(System.Windows.Int32Rect,System.Windows.Int32Rect)
  - System.Windows.Int32Rect.Parse(System.String)
  - System.Windows.Int32Rect.System#IFormattable#ToString(System.String,System.IFormatProvider)
  - System.Windows.Int32Rect.ToString
  - System.Windows.Int32Rect.ToString(System.IFormatProvider)
  - System.Windows.Int32Rect.Width
  - System.Windows.Int32Rect.X
  - System.Windows.Int32Rect.Y
  langs:
  - csharp
  name: Int32Rect
  nameWithType: Int32Rect
  fullName: System.Windows.Int32Rect
  type: Struct
  summary: "너비, 높이 및 정수 사각형의 위치를 설명합니다."
  remarks: "<a name=&quot;xamlAttributeUsage_Duration&quot;></a># # XAML 특성 사용 ```   <object property=&quot;X,Y,Width,Height&quot;/>   - or    <object property=&quot;Empty&quot;/>   ``` <a name=&quot;xamlValues_MinWidth&quot;> </a> # # XAML 값 *X* <xref:System.Int32?displayProperty=fullName> 사각형의 왼쪽 위 모퉁이의 x 좌표입니다.</xref:System.Int32?displayProperty=fullName>                 *Y* <xref:System.Int32?displayProperty=fullName> 사각형의 왼쪽 위 모퉁이의 y 좌표입니다.</xref:System.Int32?displayProperty=fullName>           *너비* <xref:System.Int32?displayProperty=fullName> 사각형의 너비입니다.</xref:System.Int32?displayProperty=fullName>           *높이* <xref:System.Int32?displayProperty=fullName> 사각형의 높이입니다.</xref:System.Int32?displayProperty=fullName>          <a name=&quot;xamlTextUsage_Int32Rect&quot;></a># # XAML 텍스트 사용 사용할 수도 있습니다 공백 쉼표 대신를 값을 구분 합니다. 쉼표로 구분 된 값이 설정 된 공백을 사용할 수도 있습니다."
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter(typeof(System.Windows.Int32RectConverter))]

      [System.Windows.Markup.ValueSerializer(typeof(System.Windows.Converters.Int32RectValueSerializer))]

      public struct Int32Rect : IFormattable
  inheritance:
  - System.ValueType
  implements:
  - System.IFormattable
  platform:
  - net462
- uid: System.Windows.Int32Rect.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32,System.Int32,System.Int32)'
  parent: System.Windows.Int32Rect
  langs:
  - csharp
  name: Int32Rect(Int32,Int32,Int32,Int32)
  nameWithType: Int32Rect.Int32Rect(Int32,Int32,Int32,Int32)
  fullName: System.Windows.Int32Rect.Int32Rect(Int32,Int32,Int32,Int32)
  type: Constructor
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "새 인스턴스를 초기화 한 <xref href=&quot;System.Windows.Int32Rect&quot;> </xref> 지정 된 <> </> *> 및 <> </> *> 좌표와 지정 된 <> </> *> 및 <> </> *> 합니다."
  syntax:
    content: public Int32Rect (int x, int y, int width, int height);
    parameters:
    - id: x
      type: System.Int32
      description: "<xref:System.Windows.Int32Rect.X*>새 <xref href=&quot;System.Windows.Int32Rect&quot;> </xref> 사각형의 왼쪽 위 모퉁이의 x 좌표를 지정 하는 인스턴스.</xref:System.Windows.Int32Rect.X*>"
    - id: y
      type: System.Int32
      description: "<xref:System.Windows.Int32Rect.Y*>새 <xref href=&quot;System.Windows.Int32Rect&quot;> </xref> 사각형의 왼쪽 위 모퉁이의 y 좌표를 지정 하는 인스턴스.</xref:System.Windows.Int32Rect.Y*>"
    - id: width
      type: System.Int32
      description: "<xref:System.Windows.Int32Rect.Width*>새 <xref href=&quot;System.Windows.Int32Rect&quot;> </xref> 사각형의 너비를 지정 하는 인스턴스.</xref:System.Windows.Int32Rect.Width*>"
    - id: height
      type: System.Int32
      description: "<xref:System.Windows.Int32Rect.Height*>새 <xref href=&quot;System.Windows.Int32Rect&quot;> </xref> 사각형의 높이 지정 하는 인스턴스.</xref:System.Windows.Int32Rect.Height*>"
  overload: System.Windows.Int32Rect.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Int32Rect.Empty
  id: Empty
  parent: System.Windows.Int32Rect
  langs:
  - csharp
  name: Empty
  nameWithType: Int32Rect.Empty
  fullName: System.Windows.Int32Rect.Empty
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "빈 사각형을 위치와 영역 없는 사각형을 나타내는 특수 한 값을 가져옵니다."
  remarks: "이 속성은 0을 사용 하 여 모든 매개 변수 값에 대 한 생성자를 호출 합니다.      <a name=&quot;xamlAttributeUsage_Automatic&quot;></a># # XAML 특성 사용 ```   <object property=&quot;Empty&quot; />   ``` <a name=&quot;xamlValues_Automatic&quot;> </a> # # XAML 값 *속성* 허용 하는 속성을 <xref:System.Windows.Int32Rect>값.</xref:System.Windows.Int32Rect>      "
  syntax:
    content: public static System.Windows.Int32Rect Empty { get; }
    return:
      type: System.Windows.Int32Rect
      description: "위치와 영역 없는 빈 사각형입니다."
  overload: System.Windows.Int32Rect.Empty*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Int32Rect.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Windows.Int32Rect
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: Int32Rect.Equals(Object)
  fullName: System.Windows.Int32Rect.Equals(Object)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "지정된 된 사각형이이 사각형와 같은지 여부를 결정 합니다."
  remarks: "이 작업 개체 같은지 테스트합니다."
  syntax:
    content: public override bool Equals (object o);
    parameters:
    - id: o
      type: System.Object
      description: "현재 사각형에 비교할 개체입니다."
    return:
      type: System.Boolean
      description: '**true** if *o* is an <xref href=&quot;System.Windows.Int32Rect&quot;></xref> and the same <>*>, <>*>, <>*>, and <>*> as this rectangle; otherwise, **false**.'
  overload: System.Windows.Int32Rect.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Int32Rect.Equals(System.Windows.Int32Rect)
  id: Equals(System.Windows.Int32Rect)
  parent: System.Windows.Int32Rect
  langs:
  - csharp
  name: Equals(Int32Rect)
  nameWithType: Int32Rect.Equals(Int32Rect)
  fullName: System.Windows.Int32Rect.Equals(Int32Rect)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "지정된 된 사각형이이 사각형와 같은지 여부를 결정 합니다."
  remarks: "이 작업 개체 같은지 테스트합니다."
  syntax:
    content: public bool Equals (System.Windows.Int32Rect value);
    parameters:
    - id: value
      type: System.Windows.Int32Rect
      description: "현재 사각형에 비교할 사각형입니다."
    return:
      type: System.Boolean
      description: '**true 이면** 동일한 경우에 두 개의 사각형이 <> </> *>, <> </> *>, <> </> *>, 및 <> </> *>;이 사각형으로 그렇지 않으면 **false**합니다.'
  overload: System.Windows.Int32Rect.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Int32Rect.Equals(System.Windows.Int32Rect,System.Windows.Int32Rect)
  id: Equals(System.Windows.Int32Rect,System.Windows.Int32Rect)
  parent: System.Windows.Int32Rect
  langs:
  - csharp
  name: Equals(Int32Rect,Int32Rect)
  nameWithType: Int32Rect.Equals(Int32Rect,Int32Rect)
  fullName: System.Windows.Int32Rect.Equals(Int32Rect,Int32Rect)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "지정된 된 사각형이 같은지 여부를 결정 합니다."
  remarks: "이 작업 개체 같은지 테스트합니다."
  syntax:
    content: public static bool Equals (System.Windows.Int32Rect int32Rect1, System.Windows.Int32Rect int32Rect2);
    parameters:
    - id: int32Rect1
      type: System.Windows.Int32Rect
      description: "비교할 첫 번째 사각형입니다."
    - id: int32Rect2
      type: System.Windows.Int32Rect
      description: "비교할 두 번째 사각형입니다."
    return:
      type: System.Boolean
      description: '**true** if *int32Rect1* and *int32Rect2* have the same <>*>, <>*>, <>*>, and <>*>; otherwise, **false**.'
  overload: System.Windows.Int32Rect.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Int32Rect.GetHashCode
  id: GetHashCode
  parent: System.Windows.Int32Rect
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: Int32Rect.GetHashCode()
  fullName: System.Windows.Int32Rect.GetHashCode()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "이 사각형의 해시 코드를 만듭니다 <> </> *>, <> </> *>, <> </> *>, 및 <> </> *> 값입니다."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "이 사각형의 해시 코드입니다."
  overload: System.Windows.Int32Rect.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Int32Rect.HasArea
  id: HasArea
  parent: System.Windows.Int32Rect
  langs:
  - csharp
  name: HasArea
  nameWithType: Int32Rect.HasArea
  fullName: System.Windows.Int32Rect.HasArea
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "나타내는 값을 가져옵니다 여부는 <> </> *> 및 <> </> *>의 속성은 <xref href=&quot;System.Windows.Int32Rect&quot;> </xref> 0 보다 큰 합니다."
  syntax:
    content: public bool HasArea { get; }
    return:
      type: System.Boolean
      description: "true 이면은 <> </> *> 및 <> </> *>의 속성은 <xref href=&quot;System.Windows.Int32Rect&quot;> </xref> 그렇지 않으면 0 보다 큰 <code> false </code>합니다."
  overload: System.Windows.Int32Rect.HasArea*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Int32Rect.Height
  id: Height
  parent: System.Windows.Int32Rect
  langs:
  - csharp
  name: Height
  nameWithType: Int32Rect.Height
  fullName: System.Windows.Int32Rect.Height
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "사각형의 높이 가져오거나 설정 합니다."
  syntax:
    content: public int Height { get; set; }
    return:
      type: System.Int32
      description: "사각형의 높이입니다. 기본값은 `0`입니다."
  overload: System.Windows.Int32Rect.Height*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Int32Rect.IsEmpty
  id: IsEmpty
  parent: System.Windows.Int32Rect
  langs:
  - csharp
  name: IsEmpty
  nameWithType: Int32Rect.IsEmpty
  fullName: System.Windows.Int32Rect.IsEmpty
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "사각형 비어 있는지 여부를 나타내는 값을 가져옵니다."
  syntax:
    content: public bool IsEmpty { get; }
    return:
      type: System.Boolean
      description: '**true 이면** 사각형이, 비어 있지 않으면 경우 **false**합니다. 기본값은 **true**합니다.'
  overload: System.Windows.Int32Rect.IsEmpty*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Int32Rect.op_Equality(System.Windows.Int32Rect,System.Windows.Int32Rect)
  id: op_Equality(System.Windows.Int32Rect,System.Windows.Int32Rect)
  parent: System.Windows.Int32Rect
  langs:
  - csharp
  name: op_Equality(Int32Rect,Int32Rect)
  nameWithType: Int32Rect.op_Equality(Int32Rect,Int32Rect)
  fullName: System.Windows.Int32Rect.op_Equality(Int32Rect,Int32Rect)
  type: Operator
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "두 개의 사각형 같은지 비교합니다."
  syntax:
    content: public static bool op_Equality (System.Windows.Int32Rect int32Rect1, System.Windows.Int32Rect int32Rect2);
    parameters:
    - id: int32Rect1
      type: System.Windows.Int32Rect
      description: "비교할 첫 번째 사각형입니다."
    - id: int32Rect2
      type: System.Windows.Int32Rect
      description: "비교할 두 번째 사각형입니다."
    return:
      type: System.Boolean
      description: '**true** if *int32Rect1* and *int32Rect2* have the same <>*>, <>*>, <>*>, and <>*>; otherwise, **false**.'
  overload: System.Windows.Int32Rect.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Int32Rect.op_Inequality(System.Windows.Int32Rect,System.Windows.Int32Rect)
  id: op_Inequality(System.Windows.Int32Rect,System.Windows.Int32Rect)
  parent: System.Windows.Int32Rect
  langs:
  - csharp
  name: op_Inequality(Int32Rect,Int32Rect)
  nameWithType: Int32Rect.op_Inequality(Int32Rect,Int32Rect)
  fullName: System.Windows.Int32Rect.op_Inequality(Int32Rect,Int32Rect)
  type: Operator
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "두 개의 사각형 같지 않은지 비교합니다."
  syntax:
    content: public static bool op_Inequality (System.Windows.Int32Rect int32Rect1, System.Windows.Int32Rect int32Rect2);
    parameters:
    - id: int32Rect1
      type: System.Windows.Int32Rect
      description: "비교할 첫 번째 사각형입니다."
    - id: int32Rect2
      type: System.Windows.Int32Rect
      description: "비교할 두 번째 사각형입니다."
    return:
      type: System.Boolean
      description: '**false** 경우 *int32Rect1* 및 *int32Rect2* 동일한 <> </> *>, <> </> *>, <> </> *>, 및 <> </> *> 고, 그러지 않으면 이러한 값 모두 동일 하지만, then **true**합니다.'
  overload: System.Windows.Int32Rect.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Int32Rect.Parse(System.String)
  id: Parse(System.String)
  parent: System.Windows.Int32Rect
  langs:
  - csharp
  name: Parse(String)
  nameWithType: Int32Rect.Parse(String)
  fullName: System.Windows.Int32Rect.Parse(String)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "만듭니다는 <xref href=&quot;System.Windows.Int32Rect&quot;> </xref> 구조 지정 된 위치에서 <xref:System.String>표현.</xref:System.String>"
  syntax:
    content: public static System.Windows.Int32Rect Parse (string source);
    parameters:
    - id: source
      type: System.String
      description: "문자열 표현을 <xref href=&quot;System.Windows.Int32Rect&quot;> </xref>합니다."
    return:
      type: System.Windows.Int32Rect
      description: "에 해당 하는 <xref href=&quot;System.Windows.Int32Rect&quot;> </xref> 구조입니다."
  overload: System.Windows.Int32Rect.Parse*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Int32Rect.System#IFormattable#ToString(System.String,System.IFormatProvider)
  id: System#IFormattable#ToString(System.String,System.IFormatProvider)
  isEii: true
  parent: System.Windows.Int32Rect
  langs:
  - csharp
  name: System.IFormattable.ToString(String,IFormatProvider)
  nameWithType: Int32Rect.System.IFormattable.ToString(String,IFormatProvider)
  fullName: System.Windows.Int32Rect.System.IFormattable.ToString(String,IFormatProvider)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "지정 된 형식을 사용 하 여 현재 인스턴스의 값에 서식을 지정 합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Windows.Int32Rect>인스턴스로 캐스팅 되는 <xref:System.IFormattable>인터페이스.</xref:System.IFormattable> </xref:System.Windows.Int32Rect>"
  syntax:
    content: string IFormattable.ToString (string format, IFormatProvider provider);
    parameters:
    - id: format
      type: System.String
      description: "사용할 형식입니다."
    - id: provider
      type: System.IFormatProvider
      description: "값의 서식을 지정 하는 데 공급자"
    return:
      type: System.String
      description: "지정된 된 형식에서 현재 인스턴스의 값입니다."
  overload: System.Windows.Int32Rect.System#IFormattable#ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Int32Rect.ToString
  id: ToString
  parent: System.Windows.Int32Rect
  langs:
  - csharp
  name: ToString()
  nameWithType: Int32Rect.ToString()
  fullName: System.Windows.Int32Rect.ToString()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "이 문자열 표현을 만듭니다 <xref href=&quot;System.Windows.Int32Rect&quot;> </xref>합니다."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "동일한를 포함 하는 문자열 <> </> *>, <> </> *>, <> </> *>, 및 <> </> *> 값이 <xref href=&quot;System.Windows.Int32Rect&quot;> </xref> 구조입니다."
  overload: System.Windows.Int32Rect.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Int32Rect.ToString(System.IFormatProvider)
  id: ToString(System.IFormatProvider)
  parent: System.Windows.Int32Rect
  langs:
  - csharp
  name: ToString(IFormatProvider)
  nameWithType: Int32Rect.ToString(IFormatProvider)
  fullName: System.Windows.Int32Rect.ToString(IFormatProvider)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "이 문자열 표현을 만듭니다 <xref href=&quot;System.Windows.Int32Rect&quot;> </xref> <xref:System.IFormatProvider>.</xref:System.IFormatProvider> 제공 된 기준"
  syntax:
    content: public string ToString (IFormatProvider provider);
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: "사용 하도록 형식 공급자입니다. 공급자가 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, 현재 문화권이 사용 됩니다."
    return:
      type: System.String
      description: "이 인스턴스의 문자열 표현을 <xref href=&quot;System.Windows.Int32Rect&quot;> </xref>합니다."
  overload: System.Windows.Int32Rect.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Int32Rect.Width
  id: Width
  parent: System.Windows.Int32Rect
  langs:
  - csharp
  name: Width
  nameWithType: Int32Rect.Width
  fullName: System.Windows.Int32Rect.Width
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "사각형의 너비를 가져오거나 설정 합니다."
  syntax:
    content: public int Width { get; set; }
    return:
      type: System.Int32
      description: "사각형의 너비입니다. 기본값은 `0`입니다."
  overload: System.Windows.Int32Rect.Width*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Int32Rect.X
  id: X
  parent: System.Windows.Int32Rect
  langs:
  - csharp
  name: X
  nameWithType: Int32Rect.X
  fullName: System.Windows.Int32Rect.X
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "사각형의 왼쪽 위 모퉁이의 x 좌표를 가져오거나 설정 합니다."
  syntax:
    content: public int X { get; set; }
    return:
      type: System.Int32
      description: "사각형의 왼쪽 위 모퉁이의 x 좌표입니다. 기본값은 `0`입니다."
  overload: System.Windows.Int32Rect.X*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Int32Rect.Y
  id: Y
  parent: System.Windows.Int32Rect
  langs:
  - csharp
  name: Y
  nameWithType: Int32Rect.Y
  fullName: System.Windows.Int32Rect.Y
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "사각형의 왼쪽 위 모퉁이의 y 좌표를 가져오거나 설정 합니다."
  syntax:
    content: public int Y { get; set; }
    return:
      type: System.Int32
      description: "사각형의 왼쪽 위 모퉁이의 y 좌표입니다. 기본값은 `0`입니다."
  overload: System.Windows.Int32Rect.Y*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Windows.Int32Rect.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Windows.Int32Rect
  isExternal: false
  name: Int32Rect(Int32,Int32,Int32,Int32)
  nameWithType: Int32Rect.Int32Rect(Int32,Int32,Int32,Int32)
  fullName: System.Windows.Int32Rect.Int32Rect(Int32,Int32,Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Int32Rect.Empty
  parent: System.Windows.Int32Rect
  isExternal: false
  name: Empty
  nameWithType: Int32Rect.Empty
  fullName: System.Windows.Int32Rect.Empty
- uid: System.Windows.Int32Rect
  parent: System.Windows
  isExternal: false
  name: Int32Rect
  nameWithType: Int32Rect
  fullName: System.Windows.Int32Rect
- uid: System.Windows.Int32Rect.Equals(System.Object)
  parent: System.Windows.Int32Rect
  isExternal: false
  name: Equals(Object)
  nameWithType: Int32Rect.Equals(Object)
  fullName: System.Windows.Int32Rect.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Int32Rect.Equals(System.Windows.Int32Rect)
  parent: System.Windows.Int32Rect
  isExternal: false
  name: Equals(Int32Rect)
  nameWithType: Int32Rect.Equals(Int32Rect)
  fullName: System.Windows.Int32Rect.Equals(Int32Rect)
- uid: System.Windows.Int32Rect.Equals(System.Windows.Int32Rect,System.Windows.Int32Rect)
  parent: System.Windows.Int32Rect
  isExternal: false
  name: Equals(Int32Rect,Int32Rect)
  nameWithType: Int32Rect.Equals(Int32Rect,Int32Rect)
  fullName: System.Windows.Int32Rect.Equals(Int32Rect,Int32Rect)
- uid: System.Windows.Int32Rect.GetHashCode
  parent: System.Windows.Int32Rect
  isExternal: false
  name: GetHashCode()
  nameWithType: Int32Rect.GetHashCode()
  fullName: System.Windows.Int32Rect.GetHashCode()
- uid: System.Windows.Int32Rect.HasArea
  parent: System.Windows.Int32Rect
  isExternal: false
  name: HasArea
  nameWithType: Int32Rect.HasArea
  fullName: System.Windows.Int32Rect.HasArea
- uid: System.Windows.Int32Rect.Height
  parent: System.Windows.Int32Rect
  isExternal: false
  name: Height
  nameWithType: Int32Rect.Height
  fullName: System.Windows.Int32Rect.Height
- uid: System.Windows.Int32Rect.IsEmpty
  parent: System.Windows.Int32Rect
  isExternal: false
  name: IsEmpty
  nameWithType: Int32Rect.IsEmpty
  fullName: System.Windows.Int32Rect.IsEmpty
- uid: System.Windows.Int32Rect.op_Equality(System.Windows.Int32Rect,System.Windows.Int32Rect)
  parent: System.Windows.Int32Rect
  isExternal: false
  name: op_Equality(Int32Rect,Int32Rect)
  nameWithType: Int32Rect.op_Equality(Int32Rect,Int32Rect)
  fullName: System.Windows.Int32Rect.op_Equality(Int32Rect,Int32Rect)
- uid: System.Windows.Int32Rect.op_Inequality(System.Windows.Int32Rect,System.Windows.Int32Rect)
  parent: System.Windows.Int32Rect
  isExternal: false
  name: op_Inequality(Int32Rect,Int32Rect)
  nameWithType: Int32Rect.op_Inequality(Int32Rect,Int32Rect)
  fullName: System.Windows.Int32Rect.op_Inequality(Int32Rect,Int32Rect)
- uid: System.Windows.Int32Rect.Parse(System.String)
  parent: System.Windows.Int32Rect
  isExternal: false
  name: Parse(String)
  nameWithType: Int32Rect.Parse(String)
  fullName: System.Windows.Int32Rect.Parse(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Int32Rect.System#IFormattable#ToString(System.String,System.IFormatProvider)
  parent: System.Windows.Int32Rect
  isExternal: false
  name: System.IFormattable.ToString(String,IFormatProvider)
  nameWithType: Int32Rect.System.IFormattable.ToString(String,IFormatProvider)
  fullName: System.Windows.Int32Rect.System.IFormattable.ToString(String,IFormatProvider)
- uid: System.IFormatProvider
  parent: System
  isExternal: true
  name: IFormatProvider
  nameWithType: IFormatProvider
  fullName: System.IFormatProvider
- uid: System.Windows.Int32Rect.ToString
  parent: System.Windows.Int32Rect
  isExternal: false
  name: ToString()
  nameWithType: Int32Rect.ToString()
  fullName: System.Windows.Int32Rect.ToString()
- uid: System.Windows.Int32Rect.ToString(System.IFormatProvider)
  parent: System.Windows.Int32Rect
  isExternal: false
  name: ToString(IFormatProvider)
  nameWithType: Int32Rect.ToString(IFormatProvider)
  fullName: System.Windows.Int32Rect.ToString(IFormatProvider)
- uid: System.Windows.Int32Rect.Width
  parent: System.Windows.Int32Rect
  isExternal: false
  name: Width
  nameWithType: Int32Rect.Width
  fullName: System.Windows.Int32Rect.Width
- uid: System.Windows.Int32Rect.X
  parent: System.Windows.Int32Rect
  isExternal: false
  name: X
  nameWithType: Int32Rect.X
  fullName: System.Windows.Int32Rect.X
- uid: System.Windows.Int32Rect.Y
  parent: System.Windows.Int32Rect
  isExternal: false
  name: Y
  nameWithType: Int32Rect.Y
  fullName: System.Windows.Int32Rect.Y
- uid: System.Windows.Int32Rect.#ctor*
  parent: System.Windows.Int32Rect
  isExternal: false
  name: Int32Rect
  nameWithType: Int32Rect.Int32Rect
- uid: System.Windows.Int32Rect.Empty*
  parent: System.Windows.Int32Rect
  isExternal: false
  name: Empty
  nameWithType: Int32Rect.Empty
- uid: System.Windows.Int32Rect.Equals*
  parent: System.Windows.Int32Rect
  isExternal: false
  name: Equals
  nameWithType: Int32Rect.Equals
- uid: System.Windows.Int32Rect.GetHashCode*
  parent: System.Windows.Int32Rect
  isExternal: false
  name: GetHashCode
  nameWithType: Int32Rect.GetHashCode
- uid: System.Windows.Int32Rect.HasArea*
  parent: System.Windows.Int32Rect
  isExternal: false
  name: HasArea
  nameWithType: Int32Rect.HasArea
- uid: System.Windows.Int32Rect.Height*
  parent: System.Windows.Int32Rect
  isExternal: false
  name: Height
  nameWithType: Int32Rect.Height
- uid: System.Windows.Int32Rect.IsEmpty*
  parent: System.Windows.Int32Rect
  isExternal: false
  name: IsEmpty
  nameWithType: Int32Rect.IsEmpty
- uid: System.Windows.Int32Rect.op_Equality*
  parent: System.Windows.Int32Rect
  isExternal: false
  name: op_Equality
  nameWithType: Int32Rect.op_Equality
- uid: System.Windows.Int32Rect.op_Inequality*
  parent: System.Windows.Int32Rect
  isExternal: false
  name: op_Inequality
  nameWithType: Int32Rect.op_Inequality
- uid: System.Windows.Int32Rect.Parse*
  parent: System.Windows.Int32Rect
  isExternal: false
  name: Parse
  nameWithType: Int32Rect.Parse
- uid: System.Windows.Int32Rect.System#IFormattable#ToString*
  parent: System.Windows.Int32Rect
  isExternal: false
  name: System.IFormattable.ToString
  nameWithType: Int32Rect.System.IFormattable.ToString
- uid: System.Windows.Int32Rect.ToString*
  parent: System.Windows.Int32Rect
  isExternal: false
  name: ToString
  nameWithType: Int32Rect.ToString
- uid: System.Windows.Int32Rect.Width*
  parent: System.Windows.Int32Rect
  isExternal: false
  name: Width
  nameWithType: Int32Rect.Width
- uid: System.Windows.Int32Rect.X*
  parent: System.Windows.Int32Rect
  isExternal: false
  name: X
  nameWithType: Int32Rect.X
- uid: System.Windows.Int32Rect.Y*
  parent: System.Windows.Int32Rect
  isExternal: false
  name: Y
  nameWithType: Int32Rect.Y
