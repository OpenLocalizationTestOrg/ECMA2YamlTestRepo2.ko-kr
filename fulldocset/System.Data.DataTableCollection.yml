### YamlMime:ManagedReference
items:
- uid: System.Data.DataTableCollection
  id: DataTableCollection
  children:
  - System.Data.DataTableCollection.Add
  - System.Data.DataTableCollection.Add(System.Data.DataTable)
  - System.Data.DataTableCollection.Add(System.String)
  - System.Data.DataTableCollection.Add(System.String,System.String)
  - System.Data.DataTableCollection.AddRange(System.Data.DataTable[])
  - System.Data.DataTableCollection.CanRemove(System.Data.DataTable)
  - System.Data.DataTableCollection.Clear
  - System.Data.DataTableCollection.CollectionChanged
  - System.Data.DataTableCollection.CollectionChanging
  - System.Data.DataTableCollection.Contains(System.String)
  - System.Data.DataTableCollection.Contains(System.String,System.String)
  - System.Data.DataTableCollection.CopyTo(System.Data.DataTable[],System.Int32)
  - System.Data.DataTableCollection.IndexOf(System.Data.DataTable)
  - System.Data.DataTableCollection.IndexOf(System.String)
  - System.Data.DataTableCollection.IndexOf(System.String,System.String)
  - System.Data.DataTableCollection.Item(System.Int32)
  - System.Data.DataTableCollection.Item(System.String)
  - System.Data.DataTableCollection.Item(System.String,System.String)
  - System.Data.DataTableCollection.List
  - System.Data.DataTableCollection.Remove(System.Data.DataTable)
  - System.Data.DataTableCollection.Remove(System.String)
  - System.Data.DataTableCollection.Remove(System.String,System.String)
  - System.Data.DataTableCollection.RemoveAt(System.Int32)
  langs:
  - csharp
  name: DataTableCollection
  nameWithType: DataTableCollection
  fullName: System.Data.DataTableCollection
  type: Class
  summary: "에 대 한 테이블의 컬렉션을 나타냅니다는 <xref href=&quot;System.Data.DataSet&quot;> </xref>합니다."
  remarks: "DataTableCollection 모든 <xref:System.Data.DataTable> <xref:System.Data.DataSet>.</xref:System.Data.DataSet> 특정 개체</xref:System.Data.DataTable> 를 포함합니다. DataTableCollection 액세스 하는 <xref:System.Data.DataSet>를 사용 하 여는 <xref:System.Data.DataSet.Tables%2A>속성.</xref:System.Data.DataSet.Tables%2A> </xref:System.Data.DataSet>       DataTableCollection 방법을 사용 하 여 같은 <xref:System.Data.DataTableCollection.Add%2A>, <xref:System.Data.DataTableCollection.Clear%2A>, 및 <xref:System.Data.DataTableCollection.Remove%2A>컬렉션에 항목을 관리할 수.</xref:System.Data.DataTableCollection.Remove%2A> </xref:System.Data.DataTableCollection.Clear%2A> </xref:System.Data.DataTableCollection.Add%2A>       사용 하 여는 <xref:System.Data.DataTableCollection.Contains%2A>메서드를 특정 테이블 (인덱스 또는 이름으로 지정 됨) 컬렉션에 있는지 확인 합니다.</xref:System.Data.DataTableCollection.Contains%2A>       사용을 이동 하려면 한 테이블에서 다른는 <xref:System.Data.DataTable.ChildRelations%2A>또는 <xref:System.Data.DataTable.ParentRelations%2A>속성은 <xref:System.Data.DataTable>의 해당 컬렉션에 액세스 하려면 <xref:System.Data.DataRelation>개체.</xref:System.Data.DataRelation> </xref:System.Data.DataTable> </xref:System.Data.DataTable.ParentRelations%2A> </xref:System.Data.DataTable.ChildRelations%2A> 사용할 수도 있습니다는 <xref:System.Data.DataSet.Relations%2A>속성의 부모/자식 관계를 통해 탐색 하는 `DataTables` 를 특정 <xref:System.Data.DataSet>컬렉션.</xref:System.Data.DataSet> </xref:System.Data.DataSet.Relations%2A>"
  example:
  - "The first procedure in this example retrieves the DataTableCollection of a <xref:System.Data.DataSet> and prints the value of each column, in each row, of each table. The second procedure creates a new <xref:System.Data.DataTable> with two columns, and adds it to the DataTableCollection.  \n  \n [!code-cs[Classic WebData DataTableCollection Example#1](~/add/codesnippet/csharp/t-system.data.datatablec_1.cs)]\n [!code-vb[Classic WebData DataTableCollection Example#1](~/add/codesnippet/visualbasic/t-system.data.datatablec_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("CollectionChanged")]

      [System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.TablesCollectionEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.ComponentModel.ListBindable(false)]

      public sealed class DataTableCollection : System.Data.InternalDataCollectionBase
  inheritance:
  - System.Object
  - System.Data.InternalDataCollectionBase
  implements: []
  inheritedMembers:
  - System.Data.InternalDataCollectionBase.CopyTo(System.Array,System.Int32)
  - System.Data.InternalDataCollectionBase.Count
  - System.Data.InternalDataCollectionBase.GetEnumerator
  - System.Data.InternalDataCollectionBase.IsReadOnly
  - System.Data.InternalDataCollectionBase.IsSynchronized
  - System.Data.InternalDataCollectionBase.SyncRoot
  platform:
  - net462
- uid: System.Data.DataTableCollection.Add
  id: Add
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: Add()
  nameWithType: DataTableCollection.Add()
  fullName: System.Data.DataTableCollection.Add()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "새 <xref href=&quot;System.Data.DataTable&quot;> </xref> 기본 이름을 사용 하 여 개체를 컬렉션에 추가 합니다."
  remarks: "이름이 지정 되어 있으므로 `DataTable` 추가한 순서에 따라는 기본 이름을 사용 하 여 만들어집니다. 기본 이름은 &quot;Table1&quot;       <xref:System.Data.DataTableCollection.CollectionChanged>이벤트 테이블 컬렉션에 추가 되는지 때 발생 합니다.</xref:System.Data.DataTableCollection.CollectionChanged>"
  example:
  - "The following example adds three new <xref:System.Data.DataTable> objects to the <xref:System.Data.DataTableCollection> using the <xref:System.Data.DataTableCollection.Add%2A> method without arguments.  \n  \n [!code-cs[Classic WebData DataTableCollection.Add2 Example#1](~/add/codesnippet/csharp/m-system.data.datatablec_8_1.cs)]\n [!code-vb[Classic WebData DataTableCollection.Add2 Example#1](~/add/codesnippet/visualbasic/m-system.data.datatablec_8_1.vb)]"
  syntax:
    content: public System.Data.DataTable Add ();
    parameters: []
    return:
      type: System.Data.DataTable
      description: "새로 만든 <xref href=&quot;System.Data.DataTable&quot;> </xref>합니다."
  overload: System.Data.DataTableCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableCollection.Add(System.Data.DataTable)
  id: Add(System.Data.DataTable)
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: Add(DataTable)
  nameWithType: DataTableCollection.Add(DataTable)
  fullName: System.Data.DataTableCollection.Add(DataTable)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "지정 된 추가 <xref uid=&quot;langword_csharp_DataTable&quot; name=&quot;DataTable&quot; href=&quot;&quot;> </xref> 컬렉션에 있습니다."
  remarks: "<xref:System.Data.DataTableCollection.CollectionChanged>이벤트 테이블 컬렉션에 추가 되는지 때 발생 합니다.</xref:System.Data.DataTableCollection.CollectionChanged>"
  example:
  - "The following example creates a <xref:System.Data.DataTable> and adds it to the <xref:System.Data.DataTableCollection> of a <xref:System.Data.DataSet>.  \n  \n [!code-cs[Classic WebData DataTableCollection.Add Example#1](~/add/codesnippet/csharp/m-system.data.datatablec_4_1.cs)]"
  syntax:
    content: public void Add (System.Data.DataTable table);
    parameters:
    - id: table
      type: System.Data.DataTable
      description: "<xref uid=&quot;langword_csharp_DataTable&quot; name=&quot;DataTable&quot; href=&quot;&quot;> </xref> 추가할 개체입니다."
  overload: System.Data.DataTableCollection.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "테이블은 지정 된 값은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "테이블에 이미이 컬렉션에 속해 또는 다른 컬렉션에 속해 있습니다."
  - type: System.Data.DuplicateNameException
    commentId: T:System.Data.DuplicateNameException
    description: "테이블 컬렉션에 동일한 이름이 있습니다. 비교 대/소문자 구분 합니다."
  platform:
  - net462
- uid: System.Data.DataTableCollection.Add(System.String)
  id: Add(System.String)
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: Add(String)
  nameWithType: DataTableCollection.Add(String)
  fullName: System.Data.DataTableCollection.Add(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "만듭니다는 <xref href=&quot;System.Data.DataTable&quot;> </xref> 지정된 된 이름을 사용 하 여 개체를 컬렉션에 추가 합니다."
  remarks: "경우 `null` 또는 빈 문자열 (&quot;&quot;) 전달, 기본 이름이 지정 됩니다에 새로 만든 `DataTable`합니다. 이 이름 (&quot;Table1&quot;, &quot;Table2&quot; 등에) 테이블이 추가 된 순서를 기반으로 합니다.       <xref:System.Data.DataTableCollection.CollectionChanged>이벤트 테이블 컬렉션에 성공적으로 추가 되는 경우에 발생 합니다.</xref:System.Data.DataTableCollection.CollectionChanged>"
  example:
  - "The following example adds a <xref:System.Data.DataTable> with the given name to the <xref:System.Data.DataTableCollection>.  \n  \n [!code-cs[Classic WebData DataTableCollection.Add1 Example#1](~/add/codesnippet/csharp/m-system.data.datatablec_9_1.cs)]\n [!code-vb[Classic WebData DataTableCollection.Add1 Example#1](~/add/codesnippet/visualbasic/m-system.data.datatablec_9_1.vb)]"
  syntax:
    content: public System.Data.DataTable Add (string name);
    parameters:
    - id: name
      type: System.String
      description: "만든 지정할 이름을 <xref href=&quot;System.Data.DataTable&quot;> </xref>합니다."
    return:
      type: System.Data.DataTable
      description: "새로 만든 <xref href=&quot;System.Data.DataTable&quot;> </xref>합니다."
  overload: System.Data.DataTableCollection.Add*
  exceptions:
  - type: System.Data.DuplicateNameException
    commentId: T:System.Data.DuplicateNameException
    description: "테이블 컬렉션에 동일한 이름이 있습니다. (비교는 대/소문자 구분.)"
  platform:
  - net462
- uid: System.Data.DataTableCollection.Add(System.String,System.String)
  id: Add(System.String,System.String)
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: Add(String,String)
  nameWithType: DataTableCollection.Add(String,String)
  fullName: System.Data.DataTableCollection.Add(String,String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "만듭니다는 <xref href=&quot;System.Data.DataTable&quot;> </xref> 지정된 된 이름을 사용 하 여 개체를 컬렉션에 추가 합니다."
  remarks: "경우 `null` 또는 빈 문자열 (&quot;&quot;) 전달, 기본 이름이 지정 됩니다에 새로 만든 `DataTable`합니다. 이 이름 (&quot;Table1&quot;, &quot;Table2&quot; 등에) 테이블이 추가 된 순서를 기반으로 합니다.       <xref:System.Data.DataTableCollection.CollectionChanged>이벤트 테이블 컬렉션에 성공적으로 추가 되는 경우에 발생 합니다.</xref:System.Data.DataTableCollection.CollectionChanged>"
  example:
  - "The following example adds a <xref:System.Data.DataTable> with the given name to the <xref:System.Data.DataTableCollection>.  \n  \n [!code-cs[Classic WebData DataTableCollection.Add1 Example#1](~/add/codesnippet/csharp/m-system.data.datatablec_1_1.cs)]\n [!code-vb[Classic WebData DataTableCollection.Add1 Example#1](~/add/codesnippet/visualbasic/m-system.data.datatablec_1_1.vb)]"
  syntax:
    content: public System.Data.DataTable Add (string name, string tableNamespace);
    parameters:
    - id: name
      type: System.String
      description: "만든 지정할 이름을 <xref href=&quot;System.Data.DataTable&quot;> </xref>합니다."
    - id: tableNamespace
      type: System.String
      description: "에 만든 지정할 네임 스페이스 <xref href=&quot;System.Data.DataTable&quot;> </xref>합니다."
    return:
      type: System.Data.DataTable
      description: "새로 만든 <xref href=&quot;System.Data.DataTable&quot;> </xref>합니다."
  overload: System.Data.DataTableCollection.Add*
  exceptions:
  - type: System.Data.DuplicateNameException
    commentId: T:System.Data.DuplicateNameException
    description: "테이블 컬렉션에 동일한 이름이 있습니다. (비교는 대/소문자 구분.)"
  platform:
  - net462
- uid: System.Data.DataTableCollection.AddRange(System.Data.DataTable[])
  id: AddRange(System.Data.DataTable[])
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: AddRange(DataTable[])
  nameWithType: DataTableCollection.AddRange(DataTable[])
  fullName: System.Data.DataTableCollection.AddRange(DataTable[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "지정 된 요소에 복사 <xref href=&quot;System.Data.DataTable&quot;> </xref> 배열 컬렉션의 끝입니다."
  remarks: ''
  example:
  - "The following example creates two <xref:System.Data.DataTable> objects and adds them to the <xref:System.Data.DataTableCollection> of a <xref:System.Data.DataSet>.  \n  \n [!code-vb[Classic WebData DataTableCollection.AddRange Example#1](~/add/codesnippet/visualbasic/m-system.data.datatablec_2_1.vb)]\n [!code-cs[Classic WebData DataTableCollection.AddRange Example#1](~/add/codesnippet/csharp/m-system.data.datatablec_2_1.cs)]"
  syntax:
    content: public void AddRange (System.Data.DataTable[] tables);
    parameters:
    - id: tables
      type: System.Data.DataTable[]
      description: "배열 <xref href=&quot;System.Data.DataTable&quot;> </xref> 컬렉션에 추가할 개체입니다."
  overload: System.Data.DataTableCollection.AddRange*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableCollection.CanRemove(System.Data.DataTable)
  id: CanRemove(System.Data.DataTable)
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: CanRemove(DataTable)
  nameWithType: DataTableCollection.CanRemove(DataTable)
  fullName: System.Data.DataTableCollection.CanRemove(DataTable)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "확인 여부를 지정 된 <xref href=&quot;System.Data.DataTable&quot;> </xref> 개체 컬렉션에서 제거할 수 있습니다."
  remarks: ''
  example:
  - "The following example uses the CanRemove to test whether each table can be removed from a <xref:System.Data.DataSet>. If so, the <xref:System.Data.DataTableCollection.Remove%2A> method is called to remove the table.  \n  \n [!code-vb[Classic WebData DataTableCollection.CanRemove Example#1](~/add/codesnippet/visualbasic/m-system.data.datatablec_5_1.vb)]\n [!code-cs[Classic WebData DataTableCollection.CanRemove Example#1](~/add/codesnippet/csharp/m-system.data.datatablec_5_1.cs)]"
  syntax:
    content: public bool CanRemove (System.Data.DataTable table);
    parameters:
    - id: table
      type: System.Data.DataTable
      description: "<xref uid=&quot;langword_csharp_DataTable&quot; name=&quot;DataTable&quot; href=&quot;&quot;> </xref> 에 대 한 확인을 수행 하는 컬렉션에 있습니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>테이블을 제거할 수 있으면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Data.DataTableCollection.CanRemove*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableCollection.Clear
  id: Clear
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: DataTableCollection.Clear()
  fullName: System.Data.DataTableCollection.Clear()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "모든 컬렉션을 지웁니다 <xref href=&quot;System.Data.DataTable&quot;> </xref> 개체입니다."
  remarks: "특정을 제거 하려면 `DataTable` 컬렉션에서 사용 하 여는 <xref:System.Data.DataTableCollection.Remove%2A>메서드.</xref:System.Data.DataTableCollection.Remove%2A>"
  example:
  - "The following example gets the <xref:System.Data.DataTableCollection> of a <xref:System.Data.DataSet>, and then clears the collection of all tables.  \n  \n [!code-cs[Classic WebData DataTableCollection.Clear Example#1](~/add/codesnippet/csharp/m-system.data.datatablec_10_1.cs)]\n [!code-vb[Classic WebData DataTableCollection.Clear Example#1](~/add/codesnippet/visualbasic/m-system.data.datatablec_10_1.vb)]"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Data.DataTableCollection.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableCollection.CollectionChanged
  id: CollectionChanged
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: CollectionChanged
  nameWithType: DataTableCollection.CollectionChanged
  fullName: System.Data.DataTableCollection.CollectionChanged
  type: Event
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "뒤에 오는 <xref href=&quot;System.Data.DataTableCollection&quot;> </xref> 때문에 변경 <xref href=&quot;System.Data.DataTable&quot;> </xref> 개체가 추가 되거나 제거 합니다."
  remarks: '이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.'
  example:
  - "The following example demonstrates how to use the CollectionChanged event.  \n  \n [!code-vb[Classic WebData DataTableCollection.CollectionChanged Example#1](~/add/codesnippet/visualbasic/e-system.data.datatablec_0_1.vb)]\n [!code-cs[Classic WebData DataTableCollection.CollectionChanged Example#1](~/add/codesnippet/csharp/e-system.data.datatablec_0_1.cs)]"
  syntax:
    content: public event System.ComponentModel.CollectionChangeEventHandler CollectionChanged;
    return:
      type: System.ComponentModel.CollectionChangeEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableCollection.CollectionChanging
  id: CollectionChanging
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: CollectionChanging
  nameWithType: DataTableCollection.CollectionChanging
  fullName: System.Data.DataTableCollection.CollectionChanging
  type: Event
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "발생 하는 동안는 <xref href=&quot;System.Data.DataTableCollection&quot;> </xref> 때문에 변경 <xref href=&quot;System.Data.DataTable&quot;> </xref> 개체가 추가 되거나 제거 합니다."
  remarks: '이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.'
  example:
  - "The following example demonstrates how to use the CollectionChanging event.  \n  \n [!code-cs[Classic WebData DataTableCollection.CollectionChanging Example#1](~/add/codesnippet/csharp/e-system.data.datatablec_1_1.cs)]\n [!code-vb[Classic WebData DataTableCollection.CollectionChanging Example#1](~/add/codesnippet/visualbasic/e-system.data.datatablec_1_1.vb)]"
  syntax:
    content: public event System.ComponentModel.CollectionChangeEventHandler CollectionChanging;
    return:
      type: System.ComponentModel.CollectionChangeEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableCollection.Contains(System.String)
  id: Contains(System.String)
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: Contains(String)
  nameWithType: DataTableCollection.Contains(String)
  fullName: System.Data.DataTableCollection.Contains(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "나타내는 값을 가져옵니다 여부는 <xref href=&quot;System.Data.DataTable&quot;> </xref> 지정한 이름 가진 개체가 컬렉션에 있습니다."
  remarks: "이름을 지정 하는 <xref:System.Data.DataTable>사용 하 여 개체는 <xref:System.Data.DataTable.TableName%2A>속성.</xref:System.Data.DataTable.TableName%2A> </xref:System.Data.DataTable> 추가 하는 경우는 <xref:System.Data.DataTable>사용 하 여 컬렉션에는 <xref:System.Data.DataTableCollection.Add%2A>메서드를 인수 없이, 전달 테이블 (&quot;Table1&quot;, &quot;Table2&quot; 등에) 테이블이 추가 된 순서에 따라 기본 이름이 지정 됩니다.</xref:System.Data.DataTableCollection.Add%2A> </xref:System.Data.DataTable>       인덱스를 가져옵니다는 <xref:System.Data.DataTable>를 사용 하 여는 <xref:System.Data.DataTableCollection.IndexOf%2A>메서드.</xref:System.Data.DataTableCollection.IndexOf%2A> </xref:System.Data.DataTable>      > [!NOTE] > 반환 `false` 동일 하지만 서로 다른 네임 스페이스의 이름을 두 개 이상의 테이블의 경우. 정확히 하나의 테이블에 테이블 이름을 일치 시킬 때 모든 모호성이 있으면 호출이 성공 하지 않습니다."
  example:
  - "The following example tests whether a table with the name \"Suppliers\" exists in the <xref:System.Data.DataTableCollection>.  \n  \n [!code-cs[Classic WebData DataTableCollection.Contains Example#1](~/add/codesnippet/csharp/m-system.data.datatablec_14_1.cs)]\n [!code-vb[Classic WebData DataTableCollection.Contains Example#1](~/add/codesnippet/visualbasic/m-system.data.datatablec_14_1.vb)]"
  syntax:
    content: public bool Contains (string name);
    parameters:
    - id: name
      type: System.String
      description: "이름에서 <xref href=&quot;System.Data.DataTable&quot;> </xref> 찾으려고 합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>지정 된 테이블이 있는; 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Data.DataTableCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableCollection.Contains(System.String,System.String)
  id: Contains(System.String,System.String)
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: Contains(String,String)
  nameWithType: DataTableCollection.Contains(String,String)
  fullName: System.Data.DataTableCollection.Contains(String,String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "나타내는 값을 가져옵니다 여부는 <xref href=&quot;System.Data.DataTable&quot;> </xref> 지정된 된 이름 및 테이블 네임 스페이스를 가진 개체가 컬렉션에 있습니다."
  remarks: "이름을 지정 하는 <xref:System.Data.DataTable>사용 하 여 개체는 <xref:System.Data.DataTable.TableName%2A>속성.</xref:System.Data.DataTable.TableName%2A> </xref:System.Data.DataTable> 추가 하는 경우는 <xref:System.Data.DataTable>사용 하 여 컬렉션에는 <xref:System.Data.DataTableCollection.Add%2A>메서드를 인수 없이, 전달 테이블 (&quot;Table1&quot;, &quot;Table2&quot; 등에) 테이블이 추가 된 순서에 따라 기본 이름이 지정 됩니다.</xref:System.Data.DataTableCollection.Add%2A> </xref:System.Data.DataTable>      > [!NOTE] > 반환 `false` 동일 하지만 서로 다른 네임 스페이스의 이름을 두 개 이상의 테이블의 경우. 정확히 하나의 테이블에 테이블 이름을 일치 시킬 때 모든 모호성이 있으면 호출이 성공 하지 않습니다.       인덱스를 가져옵니다는 <xref:System.Data.DataTable>를 사용 하 여는 <xref:System.Data.DataTableCollection.IndexOf%2A>메서드.</xref:System.Data.DataTableCollection.IndexOf%2A> </xref:System.Data.DataTable>"
  example:
  - "The following example tests whether a table with the name \"Suppliers\" exists in the <xref:System.Data.DataTableCollection>.  \n  \n [!code-cs[Classic WebData DataTableCollection.Contains Example#1](~/add/codesnippet/csharp/m-system.data.datatablec_6_1.cs)]\n [!code-vb[Classic WebData DataTableCollection.Contains Example#1](~/add/codesnippet/visualbasic/m-system.data.datatablec_6_1.vb)]"
  syntax:
    content: public bool Contains (string name, string tableNamespace);
    parameters:
    - id: name
      type: System.String
      description: "이름에서 <xref href=&quot;System.Data.DataTable&quot;> </xref> 찾으려고 합니다."
    - id: tableNamespace
      type: System.String
      description: "이름을 <xref href=&quot;System.Data.DataTable&quot;> </xref> 네임 스페이스를 확인 합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>지정 된 테이블이 있는; 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Data.DataTableCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableCollection.CopyTo(System.Data.DataTable[],System.Int32)
  id: CopyTo(System.Data.DataTable[],System.Int32)
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: CopyTo(DataTable[],Int32)
  nameWithType: DataTableCollection.CopyTo(DataTable[],Int32)
  fullName: System.Data.DataTableCollection.CopyTo(DataTable[],Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "현재 요소를 모두 복사 <xref href=&quot;System.Data.DataTableCollection&quot;> </xref> 를&1; 차원 <xref:System.Array>지정된 된 대상 배열 인덱스부터 시작 합니다.</xref:System.Array>"
  remarks: "이 메서드는 파생된 클래스에서 재정의할 수 있습니다."
  syntax:
    content: public void CopyTo (System.Data.DataTable[] array, int index);
    parameters:
    - id: array
      type: System.Data.DataTable[]
      description: "1 차원 <xref:System.Array>현재 복사할 <xref href=&quot;System.Data.DataTableCollection&quot;> </xref> 개체의 요소를.</xref:System.Array>"
    - id: index
      type: System.Int32
      description: "대상 <xref:System.Array>복사를 시작할 인덱스입니다.</xref:System.Array>"
  overload: System.Data.DataTableCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableCollection.IndexOf(System.Data.DataTable)
  id: IndexOf(System.Data.DataTable)
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: IndexOf(DataTable)
  nameWithType: DataTableCollection.IndexOf(DataTable)
  fullName: System.Data.DataTableCollection.IndexOf(DataTable)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "지정 된 인덱스를 가져옵니다 <xref href=&quot;System.Data.DataTable&quot;> </xref> 개체입니다."
  remarks: "IndexOf 메서드를 사용 하 여 지정된 된 테이블의 정확한 인덱스를 확인 합니다.       IndexOf를 호출 하기 전에 테스트할 수 있습니다 (인덱스 또는 이름으로 지정 됨) 하는 테이블의 존재 여부를 사용 하 여는 <xref:System.Data.DataTableCollection.Contains%2A>메서드.</xref:System.Data.DataTableCollection.Contains%2A>"
  example:
  - "The following example returns the index of each table in the <xref:System.Data.DataTableCollection>.  \n  \n [!code-cs[Classic WebData DataTableCollection.IndexOf Example#1](~/add/codesnippet/csharp/m-system.data.datatablec_3_1.cs)]\n [!code-vb[Classic WebData DataTableCollection.IndexOf Example#1](~/add/codesnippet/visualbasic/m-system.data.datatablec_3_1.vb)]"
  syntax:
    content: public int IndexOf (System.Data.DataTable table);
    parameters:
    - id: table
      type: System.Data.DataTable
      description: "<xref uid=&quot;langword_csharp_DataTable&quot; name=&quot;DataTable&quot; href=&quot;&quot;> </xref> 을 찾으려고 합니다."
    return:
      type: System.Int32
      description: "테이블 또는 테이블 컬렉션에 없는 경우-1의&0;부터 시작 하는 인덱스입니다."
  overload: System.Data.DataTableCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableCollection.IndexOf(System.String)
  id: IndexOf(System.String)
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: IndexOf(String)
  nameWithType: DataTableCollection.IndexOf(String)
  fullName: System.Data.DataTableCollection.IndexOf(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "컬렉션에서 인덱스를 가져옵니다는 <xref href=&quot;System.Data.DataTable&quot;> </xref> 지정한 이름 가진 개체입니다."
  remarks: "이름을 지정 하는 `DataTable` 사용 하 여 개체는 <xref:System.Data.DataTable.TableName%2A>속성.</xref:System.Data.DataTable.TableName%2A>"
  example:
  - "The following example returns the index of a named table in the <xref:System.Data.DataTableCollection>.  \n  \n [!code-cs[Classic WebData DataTableCollection.IndexOf1 Example#1](~/add/codesnippet/csharp/m-system.data.datatablec_12_1.cs)]\n [!code-vb[Classic WebData DataTableCollection.IndexOf1 Example#1](~/add/codesnippet/visualbasic/m-system.data.datatablec_12_1.vb)]"
  syntax:
    content: public int IndexOf (string tableName);
    parameters:
    - id: tableName
      type: System.String
      description: "이름에서 <xref uid=&quot;langword_csharp_DataTable&quot; name=&quot;DataTable&quot; href=&quot;&quot;> </xref> 찾을 개체입니다."
    return:
      type: System.Int32
      description: "0부터 시작 인덱스는 <xref uid=&quot;langword_csharp_DataTable&quot; name=&quot;DataTable&quot; href=&quot;&quot;> </xref> 지정 된 이름 또는 컬렉션에 있는 테이블이 존재 하지 않는 경우-1입니다.       <div class=&quot;alert NOTE&quot;>    두 개 이상의 테이블 스페이스가-1을 반환 하지만 서로 다른 네임 스페이스를 이름을 지정 합니다. 정확히 하나의 테이블에 테이블 이름을 일치 시킬 때 모든 모호성이 있으면 호출이 성공 하지 않습니다.      </div>"
  overload: System.Data.DataTableCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableCollection.IndexOf(System.String,System.String)
  id: IndexOf(System.String,System.String)
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: IndexOf(String,String)
  nameWithType: DataTableCollection.IndexOf(String,String)
  fullName: System.Data.DataTableCollection.IndexOf(String,String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "지정 된 컬렉션에서 인덱스를 가져옵니다 <xref href=&quot;System.Data.DataTable&quot;> </xref> 개체입니다."
  remarks: "이름을 지정 하는 <xref:System.Data.DataTable>사용 하 여 개체는 <xref:System.Data.DataTable.TableName%2A>속성.</xref:System.Data.DataTable.TableName%2A> </xref:System.Data.DataTable>"
  example:
  - "The following example returns the index of a named table in the <xref:System.Data.DataTableCollection>.  \n  \n [!code-cs[Classic WebData DataTableCollection.IndexOf1 Example#1](~/add/codesnippet/csharp/m-system.data.datatablec_11_1.cs)]\n [!code-vb[Classic WebData DataTableCollection.IndexOf1 Example#1](~/add/codesnippet/visualbasic/m-system.data.datatablec_11_1.vb)]"
  syntax:
    content: public int IndexOf (string tableName, string tableNamespace);
    parameters:
    - id: tableName
      type: System.String
      description: "이름에서 <xref href=&quot;System.Data.DataTable&quot;> </xref> 찾을 개체입니다."
    - id: tableNamespace
      type: System.String
      description: "이름을 <xref href=&quot;System.Data.DataTable&quot;> </xref> 네임 스페이스를 확인 합니다."
    return:
      type: System.Int32
      description: "0부터 시작 인덱스는 <xref href=&quot;System.Data.DataTable&quot;> </xref> 지정 된 이름 또는 컬렉션에 있는 테이블이 존재 하지 않는 경우-1입니다."
  overload: System.Data.DataTableCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: DataTableCollection.Item(Int32)
  fullName: System.Data.DataTableCollection.Item(Int32)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "가져옵니다는 <xref href=&quot;System.Data.DataTable&quot;> </xref> 지정된 된 인덱스에는 개체입니다."
  remarks: "사용 하 여는 <xref:System.Data.DataTableCollection.Contains%2A>특정 인덱스가 있는 테이블의 존재 여부를 결정 하는 메서드.</xref:System.Data.DataTableCollection.Contains%2A>       인덱스가 테이블의 이름을 있으면 사용 하 여는 <xref:System.Data.DataTableCollection.IndexOf%2A>메서드 인덱스를 반환 합니다.</xref:System.Data.DataTableCollection.IndexOf%2A>"
  example:
  - "The following example retrieves a <xref:System.Data.DataTable> by its index.  \n  \n [!code-cs[Classic WebData DataTableCollection.this Example#1](~/add/codesnippet/csharp/p-system.data.datatablec_1_1.cs)]\n [!code-vb[Classic WebData DataTableCollection.this Example#1](~/add/codesnippet/visualbasic/p-system.data.datatablec_1_1.vb)]"
  syntax:
    content: public System.Data.DataTable this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "0부터 시작 인덱스는 <xref href=&quot;System.Data.DataTable&quot;> </xref> 찾으려고 합니다."
    return:
      type: System.Data.DataTable
      description: "A <xref href=&quot;System.Data.DataTable&quot;> </xref>지정 된 인덱스; 그렇지 않으면 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 경우는 <xref href=&quot;System.Data.DataTable&quot;> </xref> 존재 하지 않습니다."
  overload: System.Data.DataTableCollection.Item*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "인덱스 값이 컬렉션의 항목 개수 보다 큽니다."
  platform:
  - net462
- uid: System.Data.DataTableCollection.Item(System.String)
  id: Item(System.String)
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: Item(String)
  nameWithType: DataTableCollection.Item(String)
  fullName: System.Data.DataTableCollection.Item(String)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "가져옵니다는 <xref href=&quot;System.Data.DataTable&quot;> </xref> 지정한 이름 가진 개체입니다."
  remarks: "경우는 <xref:System.Data.DataTable>반환 된 이름을 가진 검색 문자열의 대/소문자와 일치 하는.</xref:System.Data.DataTable> 대/소문자 구분 검색 수행 그렇지 않은 경우는 <xref:System.Data.DataTable>이 검색 일치 하는 이름, 반환 합니다.</xref:System.Data.DataTable>       사용 하 여는 <xref:System.Data.DataTableCollection.Contains%2A>메서드는 특정 사용자 이름 또는 인덱스가 있는 테이블에 있는지 여부를 확인 합니다.</xref:System.Data.DataTableCollection.Contains%2A>"
  example:
  - "The following example retrieves a single table by name from the <xref:System.Data.DataTableCollection>.  \n  \n [!code-cs[Classic WebData DataTableCollection.this1 Example#1](~/add/codesnippet/csharp/p-system.data.datatablec_0_1.cs)]\n [!code-vb[Classic WebData DataTableCollection.this1 Example#1](~/add/codesnippet/visualbasic/p-system.data.datatablec_0_1.vb)]"
  syntax:
    content: public System.Data.DataTable this[string name] { get; }
    parameters:
    - id: name
      type: System.String
      description: "이름에서 <xref uid=&quot;langword_csharp_DataTable&quot; name=&quot;DataTable&quot; href=&quot;&quot;> </xref> 찾으려고 합니다."
    return:
      type: System.Data.DataTable
      description: "A <xref href=&quot;System.Data.DataTable&quot;> </xref> ; 지정한 이름의 그렇지 않으면 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 경우는 <xref href=&quot;System.Data.DataTable&quot;> </xref> 존재 하지 않습니다."
  overload: System.Data.DataTableCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableCollection.Item(System.String,System.String)
  id: Item(System.String,System.String)
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: Item(String,String)
  nameWithType: DataTableCollection.Item(String,String)
  fullName: System.Data.DataTableCollection.Item(String,String)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "가져옵니다는 <xref href=&quot;System.Data.DataTable&quot;> </xref> 지정된 된 네임 스페이스에서 지정된 된 이름 가진 개체입니다."
  syntax:
    content: public System.Data.DataTable this[string name, string tableNamespace] { get; }
    parameters:
    - id: name
      type: System.String
      description: "이름에서 <xref uid=&quot;langword_csharp_DataTable&quot; name=&quot;DataTable&quot; href=&quot;&quot;> </xref> 찾으려고 합니다."
    - id: tableNamespace
      type: System.String
      description: "이름을 <xref href=&quot;System.Data.DataTable&quot;> </xref> 네임 스페이스를 확인 합니다."
    return:
      type: System.Data.DataTable
      description: "A <xref href=&quot;System.Data.DataTable&quot;> </xref> ; 지정한 이름의 그렇지 않으면 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 경우는 <xref href=&quot;System.Data.DataTable&quot;> </xref> 존재 하지 않습니다."
  overload: System.Data.DataTableCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableCollection.List
  id: List
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: List
  nameWithType: DataTableCollection.List
  fullName: System.Data.DataTableCollection.List
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  syntax:
    content: protected override System.Collections.ArrayList List { get; }
    return:
      type: System.Collections.ArrayList
      description: "추가할 수 있습니다."
  overload: System.Data.DataTableCollection.List*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableCollection.Remove(System.Data.DataTable)
  id: Remove(System.Data.DataTable)
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: Remove(DataTable)
  nameWithType: DataTableCollection.Remove(DataTable)
  fullName: System.Data.DataTableCollection.Remove(DataTable)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "지정 된 제거 <xref href=&quot;System.Data.DataTable&quot;> </xref> 컬렉션의 개체입니다."
  remarks: "<xref:System.Data.DataTableCollection.CollectionChanged>테이블을 성공적으로 제거 하면 오류가 발생 합니다.</xref:System.Data.DataTableCollection.CollectionChanged>       지정된 된 테이블 있고 제거를 호출 하기 전에 제거할 수 있는지 여부를 확인 하려면는 <xref:System.Data.DataTableCollection.Contains%2A>및 <xref:System.Data.DataTableCollection.CanRemove%2A>메서드.</xref:System.Data.DataTableCollection.CanRemove%2A> </xref:System.Data.DataTableCollection.Contains%2A>"
  example:
  - "The following example uses the <xref:System.Data.DataTableCollection.CanRemove%2A> method to test whether each table can be removed from a <xref:System.Data.DataSet>. If so, the Remove method is called to remove the table.  \n  \n [!code-cs[Classic WebData DataTableCollection.Remove Example#1](~/add/codesnippet/csharp/m-system.data.datatablec_0_1.cs)]\n [!code-vb[Classic WebData DataTableCollection.Remove Example#1](~/add/codesnippet/visualbasic/m-system.data.datatablec_0_1.vb)]"
  syntax:
    content: public void Remove (System.Data.DataTable table);
    parameters:
    - id: table
      type: System.Data.DataTable
      description: "<xref uid=&quot;langword_csharp_DataTable&quot; name=&quot;DataTable&quot; href=&quot;&quot;> </xref> 를 제거 합니다."
  overload: System.Data.DataTableCollection.Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "테이블은 지정 된 값은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "표에이 컬렉션에 속해 있지 않습니다.       -또는-테이블 관계의 일부가 됩니다."
  platform:
  - net462
- uid: System.Data.DataTableCollection.Remove(System.String)
  id: Remove(System.String)
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: Remove(String)
  nameWithType: DataTableCollection.Remove(String)
  fullName: System.Data.DataTableCollection.Remove(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "제거는 <xref href=&quot;System.Data.DataTable&quot;> </xref> 컬렉션에서 지정한 이름 가진 개체입니다."
  remarks: "<xref:System.Data.DataTableCollection.CollectionChanged>테이블을 성공적으로 제거 하면 오류가 발생 합니다.</xref:System.Data.DataTableCollection.CollectionChanged>       지정된 된 테이블 존재를 호출 하기 전에 제거 될 지 확인 하 <xref:System.Data.DataTableCollection.Remove%2A>를 사용 하 여는 <xref:System.Data.DataTableCollection.Contains%2A>및 <xref:System.Data.DataTableCollection.CanRemove%2A>메서드.</xref:System.Data.DataTableCollection.CanRemove%2A> </xref:System.Data.DataTableCollection.Contains%2A> </xref:System.Data.DataTableCollection.Remove%2A>"
  example:
  - "The following example uses the <xref:System.Data.DataTableCollection.Contains%2A> and <xref:System.Data.DataTableCollection.CanRemove%2A> methods to test whether a named table exists and can be removed. If so, the <xref:System.Data.DataTableCollection.Remove%2A> method is called to remove the table.  \n  \n [!code-cs[Classic WebData DataTableCollection.Remove1 Example#1](~/add/codesnippet/csharp/m-system.data.datatablec_7_1.cs)]\n [!code-vb[Classic WebData DataTableCollection.Remove1 Example#1](~/add/codesnippet/visualbasic/m-system.data.datatablec_7_1.vb)]"
  syntax:
    content: public void Remove (string name);
    parameters:
    - id: name
      type: System.String
      description: "이름에서 <xref href=&quot;System.Data.DataTable&quot;> </xref> 제거할 개체입니다."
  overload: System.Data.DataTableCollection.Remove*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "컬렉션에는 지정 된 이름의 테이블이 없습니다."
  platform:
  - net462
- uid: System.Data.DataTableCollection.Remove(System.String,System.String)
  id: Remove(System.String,System.String)
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: Remove(String,String)
  nameWithType: DataTableCollection.Remove(String,String)
  fullName: System.Data.DataTableCollection.Remove(String,String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "제거는 <xref href=&quot;System.Data.DataTable&quot;> </xref> 컬렉션에서 지정한 이름 가진 개체입니다."
  remarks: "<xref:System.Data.DataTableCollection.CollectionChanged>테이블을 성공적으로 제거 하면 오류가 발생 합니다.</xref:System.Data.DataTableCollection.CollectionChanged>       지정된 된 테이블 존재를 호출 하기 전에 제거 될 지 확인 하 <xref:System.Data.DataTableCollection.Remove%2A>를 사용 하 여는 <xref:System.Data.DataTableCollection.Contains%2A>및 <xref:System.Data.DataTableCollection.CanRemove%2A>메서드.</xref:System.Data.DataTableCollection.CanRemove%2A> </xref:System.Data.DataTableCollection.Contains%2A> </xref:System.Data.DataTableCollection.Remove%2A>"
  example:
  - "The following example uses the <xref:System.Data.DataTableCollection.Contains%2A> and <xref:System.Data.DataTableCollection.CanRemove%2A> methods to test whether a named table exists and can be removed. If so, the <xref:System.Data.DataTableCollection.Remove%2A> method is called to remove the table.  \n  \n [!code-cs[Classic WebData DataTableCollection.Remove1 Example#1](~/add/codesnippet/csharp/m-system.data.datatablec_13_1.cs)]\n [!code-vb[Classic WebData DataTableCollection.Remove1 Example#1](~/add/codesnippet/visualbasic/m-system.data.datatablec_13_1.vb)]"
  syntax:
    content: public void Remove (string name, string tableNamespace);
    parameters:
    - id: name
      type: System.String
      description: "이름에서 <xref href=&quot;System.Data.DataTable&quot;> </xref> 제거할 개체입니다."
    - id: tableNamespace
      type: System.String
      description: "이름을 <xref href=&quot;System.Data.DataTable&quot;> </xref> 네임 스페이스를 확인 합니다."
  overload: System.Data.DataTableCollection.Remove*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "컬렉션에는 지정 된 이름의 테이블이 없습니다."
  platform:
  - net462
- uid: System.Data.DataTableCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: DataTableCollection.RemoveAt(Int32)
  fullName: System.Data.DataTableCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "제거는 <xref href=&quot;System.Data.DataTable&quot;> </xref> 개체 컬렉션에서 지정 된 인덱스입니다."
  remarks: "<xref:System.Data.DataTableCollection.CollectionChanged>테이블을 성공적으로 제거 하면 오류가 발생 합니다.</xref:System.Data.DataTableCollection.CollectionChanged>"
  example:
  - "The following example uses the <xref:System.Data.DataTableCollection.Contains%2A> and <xref:System.Data.DataTableCollection.CanRemove%2A> methods to test whether a table exists with the index 10. If so, the RemoveAt method is called to remove the table.  \n  \n [!code-vb[Classic WebData DataTableCollection.RemoveAt#1](~/add/codesnippet/visualbasic/m-system.data.datatablec_15_1.vb)]\n [!code-cs[Classic WebData DataTableCollection.RemoveAt#1](~/add/codesnippet/csharp/m-system.data.datatablec_15_1.cs)]"
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "인덱스는 <xref uid=&quot;langword_csharp_DataTable&quot; name=&quot;DataTable&quot; href=&quot;&quot;> </xref> 를 제거 합니다."
  overload: System.Data.DataTableCollection.RemoveAt*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "지정된 된 인덱스에 컬렉션 테이블을 않아도 됩니다."
  platform:
  - net462
references:
- uid: System.Data.InternalDataCollectionBase
  isExternal: false
  name: System.Data.InternalDataCollectionBase
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Data.DuplicateNameException
  parent: System.Data
  isExternal: false
  name: DuplicateNameException
  nameWithType: DuplicateNameException
  fullName: System.Data.DuplicateNameException
- uid: System.IndexOutOfRangeException
  isExternal: true
  name: System.IndexOutOfRangeException
- uid: System.Data.DataTableCollection.Add
  parent: System.Data.DataTableCollection
  isExternal: false
  name: Add()
  nameWithType: DataTableCollection.Add()
  fullName: System.Data.DataTableCollection.Add()
- uid: System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Data.DataTableCollection.Add(System.Data.DataTable)
  parent: System.Data.DataTableCollection
  isExternal: false
  name: Add(DataTable)
  nameWithType: DataTableCollection.Add(DataTable)
  fullName: System.Data.DataTableCollection.Add(DataTable)
- uid: System.Data.DataTableCollection.Add(System.String)
  parent: System.Data.DataTableCollection
  isExternal: false
  name: Add(String)
  nameWithType: DataTableCollection.Add(String)
  fullName: System.Data.DataTableCollection.Add(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.DataTableCollection.Add(System.String,System.String)
  parent: System.Data.DataTableCollection
  isExternal: false
  name: Add(String,String)
  nameWithType: DataTableCollection.Add(String,String)
  fullName: System.Data.DataTableCollection.Add(String,String)
- uid: System.Data.DataTableCollection.AddRange(System.Data.DataTable[])
  parent: System.Data.DataTableCollection
  isExternal: false
  name: AddRange(DataTable[])
  nameWithType: DataTableCollection.AddRange(DataTable[])
  fullName: System.Data.DataTableCollection.AddRange(DataTable[])
- uid: System.Data.DataTable[]
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable[]
  spec.csharp:
  - uid: System.Data.DataTable
    name: DataTable
    nameWithType: DataTable
    fullName: DataTable[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.DataTableCollection.CanRemove(System.Data.DataTable)
  parent: System.Data.DataTableCollection
  isExternal: false
  name: CanRemove(DataTable)
  nameWithType: DataTableCollection.CanRemove(DataTable)
  fullName: System.Data.DataTableCollection.CanRemove(DataTable)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.DataTableCollection.Clear
  parent: System.Data.DataTableCollection
  isExternal: false
  name: Clear()
  nameWithType: DataTableCollection.Clear()
  fullName: System.Data.DataTableCollection.Clear()
- uid: System.Data.DataTableCollection.CollectionChanged
  parent: System.Data.DataTableCollection
  isExternal: false
  name: CollectionChanged
  nameWithType: DataTableCollection.CollectionChanged
  fullName: System.Data.DataTableCollection.CollectionChanged
- uid: System.ComponentModel.CollectionChangeEventHandler
  parent: System.ComponentModel
  isExternal: false
  name: CollectionChangeEventHandler
  nameWithType: CollectionChangeEventHandler
  fullName: System.ComponentModel.CollectionChangeEventHandler
- uid: System.Data.DataTableCollection.CollectionChanging
  parent: System.Data.DataTableCollection
  isExternal: false
  name: CollectionChanging
  nameWithType: DataTableCollection.CollectionChanging
  fullName: System.Data.DataTableCollection.CollectionChanging
- uid: System.Data.DataTableCollection.Contains(System.String)
  parent: System.Data.DataTableCollection
  isExternal: false
  name: Contains(String)
  nameWithType: DataTableCollection.Contains(String)
  fullName: System.Data.DataTableCollection.Contains(String)
- uid: System.Data.DataTableCollection.Contains(System.String,System.String)
  parent: System.Data.DataTableCollection
  isExternal: false
  name: Contains(String,String)
  nameWithType: DataTableCollection.Contains(String,String)
  fullName: System.Data.DataTableCollection.Contains(String,String)
- uid: System.Data.DataTableCollection.CopyTo(System.Data.DataTable[],System.Int32)
  parent: System.Data.DataTableCollection
  isExternal: false
  name: CopyTo(DataTable[],Int32)
  nameWithType: DataTableCollection.CopyTo(DataTable[],Int32)
  fullName: System.Data.DataTableCollection.CopyTo(DataTable[],Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.DataTableCollection.IndexOf(System.Data.DataTable)
  parent: System.Data.DataTableCollection
  isExternal: false
  name: IndexOf(DataTable)
  nameWithType: DataTableCollection.IndexOf(DataTable)
  fullName: System.Data.DataTableCollection.IndexOf(DataTable)
- uid: System.Data.DataTableCollection.IndexOf(System.String)
  parent: System.Data.DataTableCollection
  isExternal: false
  name: IndexOf(String)
  nameWithType: DataTableCollection.IndexOf(String)
  fullName: System.Data.DataTableCollection.IndexOf(String)
- uid: System.Data.DataTableCollection.IndexOf(System.String,System.String)
  parent: System.Data.DataTableCollection
  isExternal: false
  name: IndexOf(String,String)
  nameWithType: DataTableCollection.IndexOf(String,String)
  fullName: System.Data.DataTableCollection.IndexOf(String,String)
- uid: System.Data.DataTableCollection.Item(System.Int32)
  parent: System.Data.DataTableCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: DataTableCollection.Item(Int32)
  fullName: System.Data.DataTableCollection.Item(Int32)
- uid: System.Data.DataTableCollection.Item(System.String)
  parent: System.Data.DataTableCollection
  isExternal: false
  name: Item(String)
  nameWithType: DataTableCollection.Item(String)
  fullName: System.Data.DataTableCollection.Item(String)
- uid: System.Data.DataTableCollection.Item(System.String,System.String)
  parent: System.Data.DataTableCollection
  isExternal: false
  name: Item(String,String)
  nameWithType: DataTableCollection.Item(String,String)
  fullName: System.Data.DataTableCollection.Item(String,String)
- uid: System.Data.DataTableCollection.List
  parent: System.Data.DataTableCollection
  isExternal: false
  name: List
  nameWithType: DataTableCollection.List
  fullName: System.Data.DataTableCollection.List
- uid: System.Collections.ArrayList
  parent: System.Collections
  isExternal: false
  name: ArrayList
  nameWithType: ArrayList
  fullName: System.Collections.ArrayList
- uid: System.Data.DataTableCollection.Remove(System.Data.DataTable)
  parent: System.Data.DataTableCollection
  isExternal: false
  name: Remove(DataTable)
  nameWithType: DataTableCollection.Remove(DataTable)
  fullName: System.Data.DataTableCollection.Remove(DataTable)
- uid: System.Data.DataTableCollection.Remove(System.String)
  parent: System.Data.DataTableCollection
  isExternal: false
  name: Remove(String)
  nameWithType: DataTableCollection.Remove(String)
  fullName: System.Data.DataTableCollection.Remove(String)
- uid: System.Data.DataTableCollection.Remove(System.String,System.String)
  parent: System.Data.DataTableCollection
  isExternal: false
  name: Remove(String,String)
  nameWithType: DataTableCollection.Remove(String,String)
  fullName: System.Data.DataTableCollection.Remove(String,String)
- uid: System.Data.DataTableCollection.RemoveAt(System.Int32)
  parent: System.Data.DataTableCollection
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: DataTableCollection.RemoveAt(Int32)
  fullName: System.Data.DataTableCollection.RemoveAt(Int32)
- uid: System.Data.DataTableCollection.Add*
  parent: System.Data.DataTableCollection
  isExternal: false
  name: Add
  nameWithType: DataTableCollection.Add
- uid: System.Data.DataTableCollection.AddRange*
  parent: System.Data.DataTableCollection
  isExternal: false
  name: AddRange
  nameWithType: DataTableCollection.AddRange
- uid: System.Data.DataTableCollection.CanRemove*
  parent: System.Data.DataTableCollection
  isExternal: false
  name: CanRemove
  nameWithType: DataTableCollection.CanRemove
- uid: System.Data.DataTableCollection.Clear*
  parent: System.Data.DataTableCollection
  isExternal: false
  name: Clear
  nameWithType: DataTableCollection.Clear
- uid: System.Data.DataTableCollection.Contains*
  parent: System.Data.DataTableCollection
  isExternal: false
  name: Contains
  nameWithType: DataTableCollection.Contains
- uid: System.Data.DataTableCollection.CopyTo*
  parent: System.Data.DataTableCollection
  isExternal: false
  name: CopyTo
  nameWithType: DataTableCollection.CopyTo
- uid: System.Data.DataTableCollection.IndexOf*
  parent: System.Data.DataTableCollection
  isExternal: false
  name: IndexOf
  nameWithType: DataTableCollection.IndexOf
- uid: System.Data.DataTableCollection.Item*
  parent: System.Data.DataTableCollection
  isExternal: false
  name: Item
  nameWithType: DataTableCollection.Item
- uid: System.Data.DataTableCollection.List*
  parent: System.Data.DataTableCollection
  isExternal: false
  name: List
  nameWithType: DataTableCollection.List
- uid: System.Data.DataTableCollection.Remove*
  parent: System.Data.DataTableCollection
  isExternal: false
  name: Remove
  nameWithType: DataTableCollection.Remove
- uid: System.Data.DataTableCollection.RemoveAt*
  parent: System.Data.DataTableCollection
  isExternal: false
  name: RemoveAt
  nameWithType: DataTableCollection.RemoveAt
