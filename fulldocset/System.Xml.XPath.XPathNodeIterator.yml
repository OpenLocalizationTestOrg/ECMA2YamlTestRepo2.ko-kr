### YamlMime:ManagedReference
items:
- uid: System.Xml.XPath.XPathNodeIterator
  id: XPathNodeIterator
  children:
  - System.Xml.XPath.XPathNodeIterator.#ctor
  - System.Xml.XPath.XPathNodeIterator.Clone
  - System.Xml.XPath.XPathNodeIterator.Count
  - System.Xml.XPath.XPathNodeIterator.Current
  - System.Xml.XPath.XPathNodeIterator.CurrentPosition
  - System.Xml.XPath.XPathNodeIterator.GetEnumerator
  - System.Xml.XPath.XPathNodeIterator.MoveNext
  - System.Xml.XPath.XPathNodeIterator.System#ICloneable#Clone
  langs:
  - csharp
  name: XPathNodeIterator
  nameWithType: XPathNodeIterator
  fullName: System.Xml.XPath.XPathNodeIterator
  type: Class
  summary: "선택한 노드 집합에 대 한 반복기를 제공 합니다."
  remarks: "이 반환한 XPathNodeIterator 개체는 <xref:System.Xml.XPath.XPathNavigator>클래스는 선택한 노드 집합의 첫 번째 노드에 배치 되지 않았습니다.</xref:System.Xml.XPath.XPathNavigator> 에 대 한 호출에서 <xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A>XPathNodeIterator 클래스의 메서드는 선택된 된 노드 집합의 첫 번째 노드에서 XPathNodeIterator 개체 위치를 지정할 수 있어야 합니다.</xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A>       XPathNodeIterator를 사용 하 여 현재 노드 또는 상위 항목 중 하나를 편집 하는 경우, 현재 위치는 손실 됩니다. 여러 노드를 편집 하려면 선택한을 만듭니다는 <xref:System.Xml.XPath.XPathNavigator>배열, 배열에 XPathNodeIterator에서 복사할 모든 노드에 다음 배열에서 반복 및 노드 수정.</xref:System.Xml.XPath.XPathNavigator>       <xref:System.Xml.XPath.XPathNavigator>XPathNodeIterator 클래스를 사용 하 여 컬렉션</xref:System.Xml.XPath.XPathNavigator> 을 반복 하는 방법은 두 가지가       One way is to use the <xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A> method and then call <xref:System.Xml.XPath.XPathNodeIterator.Current%2A> to get the current <xref:System.Xml.XPath.XPathNavigator> instance, as in the following example:       [!code-cs[XPathNavigatorMethods#55](~/add/codesnippet/csharp/t-system.xml.xpath.xpath_1_1.cs)]  [!code-vb[XPathNavigatorMethods#55](~/add/codesnippet/visualbasic/t-system.xml.xpath.xpath_1_1.vb)]  [!code-cpp[XPathNavigatorMethods#55](~/add/codesnippet/cpp/t-system.xml.xpath.xpath_1_1.cpp)]       Another way is to use a `foreach` loop to call the <xref:System.Xml.XPath.XPathNodeIterator.GetEnumerator%2A> method and use the returned <xref:System.Collections.IEnumerator> interface to enumerate the nodes, as in the following example:       [!code-cs[XPathNavigatorMethods#56](~/add/codesnippet/csharp/t-system.xml.xpath.xpath_1_2.cs)]  [!code-vb[XPathNavigatorMethods#56](~/add/codesnippet/visualbasic/t-system.xml.xpath.xpath_1_2.vb)]  [!code-cpp[XPathNavigatorMethods#56](~/add/codesnippet/cpp/t-system.xml.xpath.xpath_1_2.cpp)]       You should either use <xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A> and <xref:System.Xml.XPath.XPathNodeIterator.Current%2A> or use <xref:System.Xml.XPath.XPathNodeIterator.GetEnumerator%2A>.</xref:System.Xml.XPath.XPathNodeIterator.GetEnumerator%2A></xref:System.Xml.XPath.XPathNodeIterator.Current%2A></xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A></xref:System.Collections.IEnumerator></xref:System.Xml.XPath.XPathNodeIterator.GetEnumerator%2A></xref:System.Xml.XPath.XPathNavigator></xref:System.Xml.XPath.XPathNodeIterator.Current%2A></xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A> 이러한 두 방법을 결합 예기치 않은 결과가 발생할 수 있습니다. 예를 들어 경우는 <xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A>메서드는 먼저 차례로 <xref:System.Xml.XPath.XPathNodeIterator.GetEnumerator%2A>메서드가 호출 되는지는 `foreach` 루프는 `foreach` 루프 않고 다음의 위치에서는 컬렉션의 시작 부분에서 결과 열거 하기 시작 되지 것입니다는 <xref:System.Xml.XPath.XPathNodeIterator.Current%2A>메서드.</xref:System.Xml.XPath.XPathNodeIterator.Current%2A> </xref:System.Xml.XPath.XPathNodeIterator.GetEnumerator%2A> </xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A>"
  example:
  - "The following example uses the <xref:System.Xml.XPath.XPathNavigator.Select%2A> method of the <xref:System.Xml.XPath.XPathNavigator> class to select a node set using the XPathNodeIterator class.  \n  \n [!code-cs[XPathNavigatorMethods#39](~/add/codesnippet/csharp/t-system.xml.xpath.xpath_1_3.cs)]\n [!code-vb[XPathNavigatorMethods#39](~/add/codesnippet/visualbasic/t-system.xml.xpath.xpath_1_3.vb)]\n [!code-cpp[XPathNavigatorMethods#39](~/add/codesnippet/cpp/t-system.xml.xpath.xpath_1_3.cpp)]  \n  \n The example takes the `books.xml` file as input.  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"utf-8\" ?>   \n<bookstore>  \n    <book genre=\"autobiography\" publicationdate=\"1981-03-22\" ISBN=\"1-861003-11-0\">  \n        <title>The Autobiography of Benjamin Franklin</title>  \n        <author>  \n            <first-name>Benjamin</first-name>  \n            <last-name>Franklin</last-name>  \n        </author>  \n        <price>8.99</price>  \n    </book>  \n    <book genre=\"novel\" publicationdate=\"1967-11-17\" ISBN=\"0-201-63361-2\">  \n        <title>The Confidence Man</title>  \n        <author>  \n            <first-name>Herman</first-name>  \n            <last-name>Melville</last-name>  \n        </author>  \n        <price>11.99</price>  \n    </book>  \n    <book genre=\"philosophy\" publicationdate=\"1991-02-15\" ISBN=\"1-861001-57-6\">  \n        <title>The Gorgias</title>  \n        <author>  \n            <name>Plato</name>  \n        </author>  \n        <price>9.99</price>  \n    </book>  \n</bookstore>  \n  \n```"
  syntax:
    content: >-
      [System.Diagnostics.DebuggerDisplay("Position={CurrentPosition}, Current={debuggerDisplayProxy}")]

      public abstract class XPathNodeIterator : ICloneable, System.Collections.IEnumerable
  inheritance:
  - System.Object
  implements:
  - System.Collections.IEnumerable
  - System.ICloneable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xml.XPath.XPathNodeIterator.#ctor
  id: '#ctor'
  parent: System.Xml.XPath.XPathNodeIterator
  langs:
  - csharp
  name: XPathNodeIterator()
  nameWithType: XPathNodeIterator.XPathNodeIterator()
  fullName: System.Xml.XPath.XPathNodeIterator.XPathNodeIterator()
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Xml.XPath.XPathNodeIterator&quot;> </xref> 클래스입니다."
  remarks: "이 생성자는이 형식으로 상태를 초기화 하는 파생된 클래스 생성자에서 호출 됩니다."
  syntax:
    content: protected XPathNodeIterator ();
    parameters: []
  overload: System.Xml.XPath.XPathNodeIterator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XPath.XPathNodeIterator.Clone
  id: Clone
  parent: System.Xml.XPath.XPathNodeIterator
  langs:
  - csharp
  name: Clone()
  nameWithType: XPathNodeIterator.Clone()
  fullName: System.Xml.XPath.XPathNodeIterator.Clone()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "파생된 클래스에서 재정의 되 면이 복제본을 반환 합니다. <xref href=&quot;System.Xml.XPath.XPathNodeIterator&quot;> </xref> 개체입니다."
  remarks: "복제 된 <xref:System.Xml.XPath.XPathNodeIterator>개체 노드 호출에 적용 된 경우 집합의 동일한 노드에 배치 되는 <xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A>메서드.</xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A> </xref:System.Xml.XPath.XPathNodeIterator> 복제 된 <xref:System.Xml.XPath.XPathNodeIterator>개체가이 변경으로 영향을 받지 않습니다 <xref:System.Xml.XPath.XPathNodeIterator>개체입니다.</xref:System.Xml.XPath.XPathNodeIterator> </xref:System.Xml.XPath.XPathNodeIterator>"
  syntax:
    content: public abstract System.Xml.XPath.XPathNodeIterator Clone ();
    parameters: []
    return:
      type: System.Xml.XPath.XPathNodeIterator
      description: "새 <xref href=&quot;System.Xml.XPath.XPathNodeIterator&quot;> </xref> 개체 복제본이 <xref href=&quot;System.Xml.XPath.XPathNodeIterator&quot;> </xref> 개체입니다."
  overload: System.Xml.XPath.XPathNodeIterator.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XPath.XPathNodeIterator.Count
  id: Count
  parent: System.Xml.XPath.XPathNodeIterator
  langs:
  - csharp
  name: Count
  nameWithType: XPathNodeIterator.Count
  fullName: System.Xml.XPath.XPathNodeIterator.Count
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "선택된 된 노드 집합에서 마지막 노드 인덱스를 가져옵니다."
  remarks: "Count 속성 <xref:System.Xml.XPath.XPathNodeIterator>.</xref:System.Xml.XPath.XPathNodeIterator> 의 위치에 영향을 주지 않습니다."
  syntax:
    content: public virtual int Count { get; }
    return:
      type: System.Int32
      description: "노드 또는 없으면 0입니다. 선택 된 노드가 선택된 된 집합의 마지막 노드의 인덱스입니다."
  overload: System.Xml.XPath.XPathNodeIterator.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XPath.XPathNodeIterator.Current
  id: Current
  parent: System.Xml.XPath.XPathNodeIterator
  langs:
  - csharp
  name: Current
  nameWithType: XPathNodeIterator.Current
  fullName: System.Xml.XPath.XPathNodeIterator.Current
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "파생된 클래스에서 재정의 되 면는 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> 이 대 한 개체 <xref href=&quot;System.Xml.XPath.XPathNodeIterator&quot;> </xref>현재 컨텍스트 노드에 배치 되어 있습니다."
  remarks: "반환 된 속성을 사용할 수 <xref:System.Xml.XPath.XPathNavigator>개체를 현재 노드에 대 한 정보를 가져옵니다.</xref:System.Xml.XPath.XPathNavigator> 그러나 반환 된 <xref:System.Xml.XPath.XPathNavigator>개체를 수정 하지 않아야 합니다.</xref:System.Xml.XPath.XPathNavigator> 반환 된 <xref:System.Xml.XPath.XPathNavigator>개체 선택된 된 노드 집합 밖으로 이동할 수 없습니다.</xref:System.Xml.XPath.XPathNavigator>       <xref:System.Xml.XPath.XPathNavigator> <xref:System.Xml.XPath.XPathNavigator.Clone%2A> <xref:System.Xml.XPath.XPathNavigator>클래스</xref:System.Xml.XPath.XPathNavigator> 의 메서드</xref:System.Xml.XPath.XPathNavigator.Clone%2A> 를 사용 하 여 개체</xref:System.Xml.XPath.XPathNavigator> 를 복제할 수 또는 복제 된 <xref:System.Xml.XPath.XPathNavigator>개체 선택된 된 노드 집합에서 이동할 수 있습니다.</xref:System.Xml.XPath.XPathNavigator> 이 메서드는 복제는 <xref:System.Xml.XPath.XPathNavigator>개체 XPath 쿼리의 성능에 영향을 줄 수 있습니다.</xref:System.Xml.XPath.XPathNavigator>       경우는 <xref:System.Xml.XPath.XPathNavigator.SelectAncestors%2A>, <xref:System.Xml.XPath.XPathNavigator.SelectDescendants%2A>, 및 <xref:System.Xml.XPath.XPathNavigator.SelectChildren%2A>메서드의 해지면 노드가 선택 되 고, 현재 속성 컨텍스트 노드를 가리킬 수 없습니다.</xref:System.Xml.XPath.XPathNavigator.SelectChildren%2A> </xref:System.Xml.XPath.XPathNavigator.SelectDescendants%2A> </xref:System.Xml.XPath.XPathNavigator.SelectAncestors%2A>       선택 된 노드가 있는지 여부를 테스트 하려면 사용 하 여 <xref:System.Xml.XPath.XPathNodeIterator.Count%2A>다음 예제와 같이 속성.</xref:System.Xml.XPath.XPathNodeIterator.Count%2A>"
  example:
  - "The following example gets all book titles authored by Herman Melville using the Current property of the <xref:System.Xml.XPath.XPathNodeIterator> object and the <xref:System.Xml.XPath.XPathNavigator.Clone%2A> method of the <xref:System.Xml.XPath.XPathNavigator> class.  \n  \n [!code-cs[XPathNavigatorMethods#6](~/add/codesnippet/csharp/p-system.xml.xpath.xpath_7_1.cs)]\n [!code-vb[XPathNavigatorMethods#6](~/add/codesnippet/visualbasic/p-system.xml.xpath.xpath_7_1.vb)]\n [!code-cpp[XPathNavigatorMethods#6](~/add/codesnippet/cpp/p-system.xml.xpath.xpath_7_1.cpp)]  \n  \n The example takes the `contosoBooks.xml` file as input.  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"utf-8\" ?>  \n<bookstore xmlns=\"http://www.contoso.com/books\">  \n    <book genre=\"autobiography\" publicationdate=\"1981-03-22\" ISBN=\"1-861003-11-0\">  \n        <title>The Autobiography of Benjamin Franklin</title>  \n        <author>  \n            <first-name>Benjamin</first-name>  \n            <last-name>Franklin</last-name>  \n        </author>  \n        <price>8.99</price>  \n    </book>  \n    <book genre=\"novel\" publicationdate=\"1967-11-17\" ISBN=\"0-201-63361-2\">  \n        <title>The Confidence Man</title>  \n        <author>  \n            <first-name>Herman</first-name>  \n            <last-name>Melville</last-name>  \n        </author>  \n        <price>11.99</price>  \n    </book>  \n    <book genre=\"philosophy\" publicationdate=\"1991-02-15\" ISBN=\"1-861001-57-6\">  \n        <title>The Gorgias</title>  \n        <author>  \n            <name>Plato</name>  \n        </author>  \n        <price>9.99</price>  \n    </book>  \n</bookstore>  \n  \n```"
  syntax:
    content: public abstract System.Xml.XPath.XPathNavigator Current { get; }
    return:
      type: System.Xml.XPath.XPathNavigator
      description: "<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> 개체 컨텍스트 노드에 있는 노드 집합이 선택 합니다. <xref:System.Xml.XPath.XPathNodeIterator.MoveNext*>이동 하려면 메서드를 호출 해야는 <xref href=&quot;System.Xml.XPath.XPathNodeIterator&quot;> </xref> 선택된 된 집합의 첫 번째 노드로.</xref:System.Xml.XPath.XPathNodeIterator.MoveNext*>"
  overload: System.Xml.XPath.XPathNodeIterator.Current*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XPath.XPathNodeIterator.CurrentPosition
  id: CurrentPosition
  parent: System.Xml.XPath.XPathNodeIterator
  langs:
  - csharp
  name: CurrentPosition
  nameWithType: XPathNodeIterator.CurrentPosition
  fullName: System.Xml.XPath.XPathNodeIterator.CurrentPosition
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "파생된 클래스에서 재정의 되 면 노드 중 선택된 된 집합의 현재 위치 인덱스를 가져옵니다."
  remarks: "인덱스는 1부터 시작 합니다. 따라서 첫 번째 노드에 인덱스 1에 있습니다. 인덱스 0에 선택 된 노드가 없으면 나타냅니다. 항상이 속성은 양의 정수를 반환합니다."
  syntax:
    content: public abstract int CurrentPosition { get; }
    return:
      type: System.Int32
      description: "현재 위치 인덱스입니다."
  overload: System.Xml.XPath.XPathNodeIterator.CurrentPosition*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XPath.XPathNodeIterator.GetEnumerator
  id: GetEnumerator
  parent: System.Xml.XPath.XPathNodeIterator
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: XPathNodeIterator.GetEnumerator()
  fullName: System.Xml.XPath.XPathNodeIterator.GetEnumerator()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "반환 된 <xref:System.Collections.IEnumerator>선택된 된 노드 집합을 반복 하는 개체입니다.</xref:System.Collections.IEnumerator>"
  remarks: "열거자의 현재 위치에 배치 되는 <xref:System.Xml.XPath.XPathNodeIterator>개체입니다.</xref:System.Xml.XPath.XPathNodeIterator>       <xref:System.Xml.XPath.XPathNavigator> <xref:System.Xml.XPath.XPathNodeIterator>클래스</xref:System.Xml.XPath.XPathNodeIterator> 를 사용 하 여 컬렉션</xref:System.Xml.XPath.XPathNavigator> 을 반복 하는 방법은 두 가지가       One way is to use the <xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A> method and then call <xref:System.Xml.XPath.XPathNodeIterator.Current%2A> to get the current <xref:System.Xml.XPath.XPathNavigator> instance, as in the following example:       [!code-cs[XPathNavigatorMethods#55](~/add/codesnippet/csharp/m-system.xml.xpath.xpath_41_1.cs)][!code-vb[XPathNavigatorMethods#55](~/add/codesnippet/visualbasic/m-system.xml.xpath.xpath_41_1.vb)][!code-cpp[XPathNavigatorMethods#55](~/add/codesnippet/cpp/m-system.xml.xpath.xpath_41_1.cpp)]       Another way is to use a `foreach` loop to call the GetEnumerator method and use the returned <xref:System.Collections.IEnumerator> interface to enumerate the nodes, as in the following example:       [!code-cs[XPathNavigatorMethods#56](~/add/codesnippet/csharp/m-system.xml.xpath.xpath_41_2.cs)][!code-vb[XPathNavigatorMethods#56](~/add/codesnippet/visualbasic/m-system.xml.xpath.xpath_41_2.vb)][!code-cpp[XPathNavigatorMethods#56](~/add/codesnippet/cpp/m-system.xml.xpath.xpath_41_2.cpp)]       You should either use the <xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A>메서드 및 <xref:System.Xml.XPath.XPathNodeIterator.Current%2A>하거나 GetEnumerator 메서드를 사용 합니다.</xref:System.Xml.XPath.XPathNodeIterator.Current%2A> </xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A>     </xref:System.Collections.IEnumerator>     </xref:System.Xml.XPath.XPathNavigator> </xref:System.Xml.XPath.XPathNodeIterator.Current%2A> </xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A> 이러한 두 방법을 결합 예기치 않은 결과가 발생할 수 있습니다. 예를 들어 경우는 <xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A>메서드가 먼저 호출 되 고 GetEnumerator 메서드가 호출 되는 다음의 `foreach` 루프는 `foreach` 루프 않고 다음의 위치에서는 컬렉션의 시작 부분에서 결과 열거 하기 시작 되지 것입니다는 <xref:System.Xml.XPath.XPathNodeIterator.Current%2A>메서드.</xref:System.Xml.XPath.XPathNodeIterator.Current%2A> </xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A>"
  syntax:
    content: public virtual System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "<xref:System.Collections.IEnumerator>선택된 된 노드 집합을 반복 하는 개체입니다.</xref:System.Collections.IEnumerator>"
  overload: System.Xml.XPath.XPathNodeIterator.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XPath.XPathNodeIterator.MoveNext
  id: MoveNext
  parent: System.Xml.XPath.XPathNodeIterator
  langs:
  - csharp
  name: MoveNext()
  nameWithType: XPathNodeIterator.MoveNext()
  fullName: System.Xml.XPath.XPathNodeIterator.MoveNext()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "파생된 클래스에서 재정의 된 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> 에서 반환 된 개체는 <xref:System.Xml.XPath.XPathNodeIterator.Current*>속성을 선택된 된 노드 집합에 있는 다음 노드에.</xref:System.Xml.XPath.XPathNodeIterator.Current*>"
  remarks: "<xref:System.Xml.XPath.XPathNodeIterator>개체 선택된 된 노드 MoveNext 메서드가 처음 호출 후에 집합에서 첫 번째 노드에 배치 됩니다.</xref:System.Xml.XPath.XPathNodeIterator> 문서 순서로 노드 집합이 생성 됩니다. 따라서 메서드는 문서 순서에 따라 다음 노드로 이동에서 MoveNext를 호출 합니다.       <xref:System.Xml.XPath.XPathNavigator> <xref:System.Xml.XPath.XPathNodeIterator>클래스</xref:System.Xml.XPath.XPathNodeIterator> 를 사용 하 여 컬렉션</xref:System.Xml.XPath.XPathNavigator> 을 반복 하는 방법은 두 가지가       One way is to use the MoveNext method and then call <xref:System.Xml.XPath.XPathNodeIterator.Current%2A> to get the current <xref:System.Xml.XPath.XPathNavigator> instance, as in the following example:       [!code-cs[XPathNavigatorMethods#55](~/add/codesnippet/csharp/m-system.xml.xpath.xpath_3_1.cs)][!code-vb[XPathNavigatorMethods#55](~/add/codesnippet/visualbasic/m-system.xml.xpath.xpath_3_1.vb)][!code-cpp[XPathNavigatorMethods#55](~/add/codesnippet/cpp/m-system.xml.xpath.xpath_3_1.cpp)]       Another way is to use a `foreach` loop to call the <xref:System.Xml.XPath.XPathNodeIterator.GetEnumerator%2A> method and use the returned <xref:System.Collections.IEnumerator> interface to enumerate the nodes, as in the following example:       [!code-cs[XPathNavigatorMethods#56](~/add/codesnippet/csharp/m-system.xml.xpath.xpath_3_2.cs)][!code-vb[XPathNavigatorMethods#56](~/add/codesnippet/visualbasic/m-system.xml.xpath.xpath_3_2.vb)][!code-cpp[XPathNavigatorMethods#56](~/add/codesnippet/cpp/m-system.xml.xpath.xpath_3_2.cpp)]       You should either use the MoveNext 메서드 및 <xref:System.Xml.XPath.XPathNodeIterator.Current%2A>사용 또는 <xref:System.Xml.XPath.XPathNodeIterator.GetEnumerator%2A>메서드.</xref:System.Xml.XPath.XPathNodeIterator.GetEnumerator%2A> </xref:System.Xml.XPath.XPathNodeIterator.Current%2A>     </xref:System.Collections.IEnumerator> </xref:System.Xml.XPath.XPathNodeIterator.GetEnumerator%2A>     </xref:System.Xml.XPath.XPathNavigator> </xref:System.Xml.XPath.XPathNodeIterator.Current%2A> 이러한 두 방법을 결합 예기치 않은 결과가 발생할 수 있습니다. MoveNext 메서드를 먼저 호출 하는 경우 등 차례로 <xref:System.Xml.XPath.XPathNodeIterator.GetEnumerator%2A>메서드가 호출 되는지는 `foreach` 루프는 `foreach` 루프 않고 다음의 위치에서는 컬렉션의 시작 부분에서 결과 열거 하기 시작 되지 것입니다는 <xref:System.Xml.XPath.XPathNodeIterator.Current%2A>메서드.</xref:System.Xml.XPath.XPathNodeIterator.Current%2A> </xref:System.Xml.XPath.XPathNodeIterator.GetEnumerator%2A>"
  example:
  - "The following example uses the <xref:System.Xml.XPath.XPathNavigator.Select%2A> method of the <xref:System.Xml.XPath.XPathNavigator> class to select a node set using the <xref:System.Xml.XPath.XPathNodeIterator> class.  \n  \n [!code-cs[XPathNavigatorMethods#39](~/add/codesnippet/csharp/m-system.xml.xpath.xpath_3_3.cs)]\n [!code-vb[XPathNavigatorMethods#39](~/add/codesnippet/visualbasic/m-system.xml.xpath.xpath_3_3.vb)]\n [!code-cpp[XPathNavigatorMethods#39](~/add/codesnippet/cpp/m-system.xml.xpath.xpath_3_3.cpp)]  \n  \n The example takes the `books.xml` file as input.  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"utf-8\" ?>   \n<bookstore>  \n    <book genre=\"autobiography\" publicationdate=\"1981-03-22\" ISBN=\"1-861003-11-0\">  \n        <title>The Autobiography of Benjamin Franklin</title>  \n        <author>  \n            <first-name>Benjamin</first-name>  \n            <last-name>Franklin</last-name>  \n        </author>  \n        <price>8.99</price>  \n    </book>  \n    <book genre=\"novel\" publicationdate=\"1967-11-17\" ISBN=\"0-201-63361-2\">  \n        <title>The Confidence Man</title>  \n        <author>  \n            <first-name>Herman</first-name>  \n            <last-name>Melville</last-name>  \n        </author>  \n        <price>11.99</price>  \n    </book>  \n    <book genre=\"philosophy\" publicationdate=\"1991-02-15\" ISBN=\"1-861001-57-6\">  \n        <title>The Gorgias</title>  \n        <author>  \n            <name>Plato</name>  \n        </author>  \n        <price>9.99</price>  \n    </book>  \n</bookstore>  \n  \n```"
  syntax:
    content: public abstract bool MoveNext ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우는 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> 다음 노드로 이동 하는 개체 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 노드가 더 이상 선택 합니다."
  overload: System.Xml.XPath.XPathNodeIterator.MoveNext*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XPath.XPathNodeIterator.System#ICloneable#Clone
  id: System#ICloneable#Clone
  isEii: true
  parent: System.Xml.XPath.XPathNodeIterator
  langs:
  - csharp
  name: System.ICloneable.Clone()
  nameWithType: XPathNodeIterator.System.ICloneable.Clone()
  fullName: System.Xml.XPath.XPathNodeIterator.System.ICloneable.Clone()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "현재 인스턴스의 복사본 인 새 개체를 만듭니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Xml.XPath.XPathNodeIterator>인스턴스로 캐스팅 되는 <xref:System.ICloneable>인터페이스.</xref:System.ICloneable> </xref:System.Xml.XPath.XPathNodeIterator>"
  syntax:
    content: object ICloneable.Clone ();
    parameters: []
    return:
      type: System.Object
      description: "이 인스턴스의 복사본 인 새 개체입니다."
  overload: System.Xml.XPath.XPathNodeIterator.System#ICloneable#Clone*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Xml.XPath.XPathNodeIterator.#ctor
  parent: System.Xml.XPath.XPathNodeIterator
  isExternal: false
  name: XPathNodeIterator()
  nameWithType: XPathNodeIterator.XPathNodeIterator()
  fullName: System.Xml.XPath.XPathNodeIterator.XPathNodeIterator()
- uid: System.Xml.XPath.XPathNodeIterator.Clone
  parent: System.Xml.XPath.XPathNodeIterator
  isExternal: false
  name: Clone()
  nameWithType: XPathNodeIterator.Clone()
  fullName: System.Xml.XPath.XPathNodeIterator.Clone()
- uid: System.Xml.XPath.XPathNodeIterator
  parent: System.Xml.XPath
  isExternal: false
  name: XPathNodeIterator
  nameWithType: XPathNodeIterator
  fullName: System.Xml.XPath.XPathNodeIterator
- uid: System.Xml.XPath.XPathNodeIterator.Count
  parent: System.Xml.XPath.XPathNodeIterator
  isExternal: false
  name: Count
  nameWithType: XPathNodeIterator.Count
  fullName: System.Xml.XPath.XPathNodeIterator.Count
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Xml.XPath.XPathNodeIterator.Current
  parent: System.Xml.XPath.XPathNodeIterator
  isExternal: false
  name: Current
  nameWithType: XPathNodeIterator.Current
  fullName: System.Xml.XPath.XPathNodeIterator.Current
- uid: System.Xml.XPath.XPathNavigator
  parent: System.Xml.XPath
  isExternal: false
  name: XPathNavigator
  nameWithType: XPathNavigator
  fullName: System.Xml.XPath.XPathNavigator
- uid: System.Xml.XPath.XPathNodeIterator.CurrentPosition
  parent: System.Xml.XPath.XPathNodeIterator
  isExternal: false
  name: CurrentPosition
  nameWithType: XPathNodeIterator.CurrentPosition
  fullName: System.Xml.XPath.XPathNodeIterator.CurrentPosition
- uid: System.Xml.XPath.XPathNodeIterator.GetEnumerator
  parent: System.Xml.XPath.XPathNodeIterator
  isExternal: false
  name: GetEnumerator()
  nameWithType: XPathNodeIterator.GetEnumerator()
  fullName: System.Xml.XPath.XPathNodeIterator.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Xml.XPath.XPathNodeIterator.MoveNext
  parent: System.Xml.XPath.XPathNodeIterator
  isExternal: false
  name: MoveNext()
  nameWithType: XPathNodeIterator.MoveNext()
  fullName: System.Xml.XPath.XPathNodeIterator.MoveNext()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.XPath.XPathNodeIterator.System#ICloneable#Clone
  parent: System.Xml.XPath.XPathNodeIterator
  isExternal: false
  name: System.ICloneable.Clone()
  nameWithType: XPathNodeIterator.System.ICloneable.Clone()
  fullName: System.Xml.XPath.XPathNodeIterator.System.ICloneable.Clone()
- uid: System.Xml.XPath.XPathNodeIterator.#ctor*
  parent: System.Xml.XPath.XPathNodeIterator
  isExternal: false
  name: XPathNodeIterator
  nameWithType: XPathNodeIterator.XPathNodeIterator
- uid: System.Xml.XPath.XPathNodeIterator.Clone*
  parent: System.Xml.XPath.XPathNodeIterator
  isExternal: false
  name: Clone
  nameWithType: XPathNodeIterator.Clone
- uid: System.Xml.XPath.XPathNodeIterator.Count*
  parent: System.Xml.XPath.XPathNodeIterator
  isExternal: false
  name: Count
  nameWithType: XPathNodeIterator.Count
- uid: System.Xml.XPath.XPathNodeIterator.Current*
  parent: System.Xml.XPath.XPathNodeIterator
  isExternal: false
  name: Current
  nameWithType: XPathNodeIterator.Current
- uid: System.Xml.XPath.XPathNodeIterator.CurrentPosition*
  parent: System.Xml.XPath.XPathNodeIterator
  isExternal: false
  name: CurrentPosition
  nameWithType: XPathNodeIterator.CurrentPosition
- uid: System.Xml.XPath.XPathNodeIterator.GetEnumerator*
  parent: System.Xml.XPath.XPathNodeIterator
  isExternal: false
  name: GetEnumerator
  nameWithType: XPathNodeIterator.GetEnumerator
- uid: System.Xml.XPath.XPathNodeIterator.MoveNext*
  parent: System.Xml.XPath.XPathNodeIterator
  isExternal: false
  name: MoveNext
  nameWithType: XPathNodeIterator.MoveNext
- uid: System.Xml.XPath.XPathNodeIterator.System#ICloneable#Clone*
  parent: System.Xml.XPath.XPathNodeIterator
  isExternal: false
  name: System.ICloneable.Clone
  nameWithType: XPathNodeIterator.System.ICloneable.Clone
