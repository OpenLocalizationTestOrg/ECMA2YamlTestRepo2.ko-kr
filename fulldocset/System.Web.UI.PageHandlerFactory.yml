### YamlMime:ManagedReference
items:
- uid: System.Web.UI.PageHandlerFactory
  id: PageHandlerFactory
  children:
  - System.Web.UI.PageHandlerFactory.#ctor
  - System.Web.UI.PageHandlerFactory.GetHandler(System.Web.HttpContext,System.String,System.String,System.String)
  - System.Web.UI.PageHandlerFactory.ReleaseHandler(System.Web.IHttpHandler)
  langs:
  - csharp
  name: PageHandlerFactory
  nameWithType: PageHandlerFactory
  fullName: System.Web.UI.PageHandlerFactory
  type: Class
  summary: "상속 된 클래스의 인스턴스를 만듭니다는 <xref href=&quot;System.Web.UI.Page&quot;> </xref> 클래스 및 구현 된 <xref href=&quot;System.Web.IHttpHandler&quot;> </xref> 인터페이스입니다. 인스턴스는 ASP.NET 파일에 대 한 요청을 처리 하도록 동적으로 생성 됩니다. PageHandlerFactory 클래스는 ASP.NET 페이지에 대 한 기본 처리기 팩터리 구현 합니다."
  remarks: "PageHandlerFactory 클래스가 구현 하는 <xref:System.Web.IHttpHandlerFactory>ASP.NET 파일에 대 한 기본 HTTP 처리기를 제공 하는 인터페이스입니다.</xref:System.Web.IHttpHandlerFactory> PageHandlerFactory 컴파일, 필요한 경우에 해당 하는 URL을 정확 하 게 형식을 반환 하는 데 ASP.NET 컴파일 시스템 호출 한 다음 해당 형식의 인스턴스를 만듭니다. 페이지에서 상속 된 <xref:System.Web.UI.Page>클래스 및 구현 하는 <xref:System.Web.IHttpHandler>인터페이스.</xref:System.Web.IHttpHandler> </xref:System.Web.UI.Page>       사용자 지정 페이지 처리기 팩터리를 작성 하려면 구현에서 <xref:System.Web.IHttpHandlerFactory>에서 응용 프로그램에 대 한 Web.config 파일에 사용자 지정 PageHandlerFactory 클래스를 등록 하 고는 [httpHandlers 요소 (ASP.NET 설정 스키마)](http://msdn.microsoft.com/en-us/24ca01f3-7141-4fdc-acac-71c0733cf6c2) 구성 섹션.</xref:System.Web.IHttpHandlerFactory>"
  syntax:
    content: public class PageHandlerFactory
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.PageHandlerFactory.#ctor
  id: '#ctor'
  parent: System.Web.UI.PageHandlerFactory
  langs:
  - csharp
  name: PageHandlerFactory()
  nameWithType: PageHandlerFactory.PageHandlerFactory()
  fullName: System.Web.UI.PageHandlerFactory.PageHandlerFactory()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.UI.PageHandlerFactory&quot;> </xref> 클래스입니다."
  remarks: "PageHandlerFactory 생성자는 기본 생성자를 호출 하 고 모든 필드를 기본값으로 초기화 합니다."
  syntax:
    content: protected PageHandlerFactory ();
    parameters: []
  overload: System.Web.UI.PageHandlerFactory.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.PageHandlerFactory.GetHandler(System.Web.HttpContext,System.String,System.String,System.String)
  id: GetHandler(System.Web.HttpContext,System.String,System.String,System.String)
  parent: System.Web.UI.PageHandlerFactory
  langs:
  - csharp
  name: GetHandler(HttpContext,String,String,String)
  nameWithType: PageHandlerFactory.GetHandler(HttpContext,String,String,String)
  fullName: System.Web.UI.PageHandlerFactory.GetHandler(HttpContext,String,String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "인스턴스를 반환 된 <xref href=&quot;System.Web.IHttpHandler&quot;> </xref> 요청된 된 리소스를 처리 하는 인터페이스입니다."
  remarks: "GetHandler 메서드는 실행 시간 ASP.NET에서 호출 되며의 올바른 인스턴스를 반환 된 <xref:System.Web.IHttpHandler>인터페이스 또는 `null`.</xref:System.Web.IHttpHandler>"
  syntax:
    content: public virtual System.Web.IHttpHandler GetHandler (System.Web.HttpContext context, string requestType, string virtualPath, string path);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "인스턴스는 <xref href=&quot;System.Web.HttpContext&quot;> </xref> HTTP 요청을 처리 하는 데 사용 내장 서버 개체 (예를 들어 요청, 응답, 세션 및 서버)에 대 한 참조를 제공 하는 클래스입니다."
    - id: requestType
      type: System.String
      description: "HTTP 데이터 전송 메서드 (GET 또는 POST)를 사용 하 여 클라이언트입니다."
    - id: virtualPath
      type: System.String
      description: "요청된 된 리소스에 대 한 가상 경로입니다."
    - id: path
      type: System.String
      description: "<xref:System.Web.HttpRequest.PhysicalApplicationPath*>요청된 된 리소스에 대 한 속성.</xref:System.Web.HttpRequest.PhysicalApplicationPath*>"
    return:
      type: System.Web.IHttpHandler
      description: "새 <xref href=&quot;System.Web.IHttpHandler&quot;> </xref> 요청을 처리 하 고, 그렇지 않으면, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.UI.PageHandlerFactory.GetHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.PageHandlerFactory.ReleaseHandler(System.Web.IHttpHandler)
  id: ReleaseHandler(System.Web.IHttpHandler)
  parent: System.Web.UI.PageHandlerFactory
  langs:
  - csharp
  name: ReleaseHandler(IHttpHandler)
  nameWithType: PageHandlerFactory.ReleaseHandler(IHttpHandler)
  fullName: System.Web.UI.PageHandlerFactory.ReleaseHandler(IHttpHandler)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "팩터리에서를를 처리기의 기존 인스턴스를 다시 사용할 수 있습니다."
  syntax:
    content: public virtual void ReleaseHandler (System.Web.IHttpHandler handler);
    parameters:
    - id: handler
      type: System.Web.IHttpHandler
      description: "<xref href=&quot;System.Web.IHttpHandler&quot;> </xref> 을 다시 사용 합니다."
  overload: System.Web.UI.PageHandlerFactory.ReleaseHandler*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.UI.PageHandlerFactory.#ctor
  parent: System.Web.UI.PageHandlerFactory
  isExternal: false
  name: PageHandlerFactory()
  nameWithType: PageHandlerFactory.PageHandlerFactory()
  fullName: System.Web.UI.PageHandlerFactory.PageHandlerFactory()
- uid: System.Web.UI.PageHandlerFactory.GetHandler(System.Web.HttpContext,System.String,System.String,System.String)
  parent: System.Web.UI.PageHandlerFactory
  isExternal: false
  name: GetHandler(HttpContext,String,String,String)
  nameWithType: PageHandlerFactory.GetHandler(HttpContext,String,String,String)
  fullName: System.Web.UI.PageHandlerFactory.GetHandler(HttpContext,String,String,String)
- uid: System.Web.IHttpHandler
  parent: System.Web
  isExternal: false
  name: IHttpHandler
  nameWithType: IHttpHandler
  fullName: System.Web.IHttpHandler
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.PageHandlerFactory.ReleaseHandler(System.Web.IHttpHandler)
  parent: System.Web.UI.PageHandlerFactory
  isExternal: false
  name: ReleaseHandler(IHttpHandler)
  nameWithType: PageHandlerFactory.ReleaseHandler(IHttpHandler)
  fullName: System.Web.UI.PageHandlerFactory.ReleaseHandler(IHttpHandler)
- uid: System.Web.UI.PageHandlerFactory.#ctor*
  parent: System.Web.UI.PageHandlerFactory
  isExternal: false
  name: PageHandlerFactory
  nameWithType: PageHandlerFactory.PageHandlerFactory
- uid: System.Web.UI.PageHandlerFactory.GetHandler*
  parent: System.Web.UI.PageHandlerFactory
  isExternal: false
  name: GetHandler
  nameWithType: PageHandlerFactory.GetHandler
- uid: System.Web.UI.PageHandlerFactory.ReleaseHandler*
  parent: System.Web.UI.PageHandlerFactory
  isExternal: false
  name: ReleaseHandler
  nameWithType: PageHandlerFactory.ReleaseHandler
