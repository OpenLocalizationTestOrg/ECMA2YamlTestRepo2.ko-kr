### YamlMime:ManagedReference
items:
- uid: System.Net.SocketPermissionAttribute
  id: SocketPermissionAttribute
  children:
  - System.Net.SocketPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)
  - System.Net.SocketPermissionAttribute.Access
  - System.Net.SocketPermissionAttribute.CreatePermission
  - System.Net.SocketPermissionAttribute.Host
  - System.Net.SocketPermissionAttribute.Port
  - System.Net.SocketPermissionAttribute.Transport
  langs:
  - csharp
  name: SocketPermissionAttribute
  nameWithType: SocketPermissionAttribute
  fullName: System.Net.SocketPermissionAttribute
  type: Class
  summary: "보안 동작을 제어 지정 <xref:System.Net.Sockets.Socket>연결.</xref:System.Net.Sockets.Socket> 이 클래스는 상속 될 수 없습니다."
  remarks: "이 특성을 사용 하 여 <xref:System.Net.Sockets.Socket>연결 프로그램 SocketPermissionAttribute에 지정 된 속성을 준수 해야 합니다.</xref:System.Net.Sockets.Socket> 예:에 사용 권한을 적용 하려면는 <xref:System.Net.Sockets.Socket>포트 80에서 연결 설정의 <xref:System.Net.SocketPermissionAttribute.Port%2A>SocketPermissionAttribute &quot;80&quot;의 속성입니다.</xref:System.Net.SocketPermissionAttribute.Port%2A> </xref:System.Net.Sockets.Socket> SocketPermissionAttribute에 지정 된 보안 정보는 SocketPermissionAttribute 적용 되는 클래스는 특성 대상의 메타 데이터에 저장 됩니다. 그러면 시스템 런타임에 정보를 액세스합니다. <xref:System.Security.Permissions.SecurityAction>에 전달 되는 생성자는 허용 가능한 SocketPermissionAttribute 대상을 결정 합니다.</xref:System.Security.Permissions.SecurityAction>      > [!NOTE] >는 SocketPermissionAttribute 속성 하지 않은 값이 있어야 `null`합니다. 또한 한 번 설정 속성의 값 변경할 수 없습니다.      > [!NOTE] > 특성을 사용 하는 방법에 대 한 자세한 내용은 참조 [특성](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Assembly | System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Constructor | System.AttributeTargets.Method, AllowMultiple=true, Inherited=false)]

      public sealed class SocketPermissionAttribute : System.Security.Permissions.CodeAccessSecurityAttribute
  inheritance:
  - System.Attribute
  - System.Security.Permissions.SecurityAttribute
  - System.Security.Permissions.CodeAccessSecurityAttribute
  implements: []
  inheritedMembers:
  - System.Security.Permissions.SecurityAttribute.Action
  - System.Security.Permissions.SecurityAttribute.Unrestricted
  platform:
  - net462
- uid: System.Net.SocketPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)
  id: '#ctor(System.Security.Permissions.SecurityAction)'
  parent: System.Net.SocketPermissionAttribute
  langs:
  - csharp
  name: SocketPermissionAttribute(SecurityAction)
  nameWithType: SocketPermissionAttribute.SocketPermissionAttribute(SecurityAction)
  fullName: System.Net.SocketPermissionAttribute.SocketPermissionAttribute(SecurityAction)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Net.SocketPermissionAttribute&quot;> </xref> 지정된 된 <xref href=&quot;System.Security.Permissions.SecurityAction&quot;> </xref> 값입니다."
  remarks: "<xref:System.Security.Permissions.SecurityAction>이 생성자에 전달 되는 값은 허용할 지정 <xref:System.Net.SocketPermissionAttribute>대상.</xref:System.Net.SocketPermissionAttribute> </xref:System.Security.Permissions.SecurityAction>"
  syntax:
    content: public SocketPermissionAttribute (System.Security.Permissions.SecurityAction action);
    parameters:
    - id: action
      type: System.Security.Permissions.SecurityAction
      description: "중 하나는 <xref href=&quot;System.Security.Permissions.SecurityAction&quot;> </xref> 값입니다."
  overload: System.Net.SocketPermissionAttribute.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>action</code>유효 하지 않거나 <xref href=&quot;System.Security.Permissions.SecurityAction&quot;> </xref> 값입니다."
  platform:
  - net462
- uid: System.Net.SocketPermissionAttribute.Access
  id: Access
  parent: System.Net.SocketPermissionAttribute
  langs:
  - csharp
  name: Access
  nameWithType: SocketPermissionAttribute.Access
  fullName: System.Net.SocketPermissionAttribute.Access
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "이 허용 되는 네트워크 액세스 메서드를 가져오거나 설정 합니다. <xref href=&quot;System.Net.SocketPermissionAttribute&quot;> </xref>합니다."
  remarks: "이 속성은 쓰기-되 면입니다. 이 속성에 대 한 유효한 값에 해당 <xref:System.Net.NetworkAccess>열거형 값입니다.</xref:System.Net.NetworkAccess>"
  syntax:
    content: public string Access { get; set; }
    return:
      type: System.String
      description: "이 인스턴스에서 허용 되는 네트워크 액세스 메서드를 포함 하는 문자열 <xref href=&quot;System.Net.SocketPermissionAttribute&quot;> </xref>합니다. 유효한 값은 &quot;동의&quot; 및 &quot;연결&quot;을 선택 합니다."
  overload: System.Net.SocketPermissionAttribute.Access*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "액세스 속성은 없습니다 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 값을 설정 하려고 합니다. 둘 이상의 액세스 메서드를 지정 하려면 추가 특성이 선언문을 사용 합니다."
  platform:
  - net462
- uid: System.Net.SocketPermissionAttribute.CreatePermission
  id: CreatePermission
  parent: System.Net.SocketPermissionAttribute
  langs:
  - csharp
  name: CreatePermission()
  nameWithType: SocketPermissionAttribute.CreatePermission()
  fullName: System.Net.SocketPermissionAttribute.CreatePermission()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "만들고의 새 인스턴스를 반환 합니다.는 <xref href=&quot;System.Net.SocketPermission&quot;> </xref> 클래스입니다."
  remarks: "CreatePermission 메서드는 응용 프로그램 코드가 아닌 보안 시스템에서 호출 됩니다. 설명 하는 보안 정보 <xref:System.Net.SocketPermissionAttribute>는 되는 클래스 특성 대상의 메타 데이터에 저장 됩니다는 <xref:System.Net.SocketPermissionAttribute>적용 됩니다.</xref:System.Net.SocketPermissionAttribute> </xref:System.Net.SocketPermissionAttribute> 그런 다음 시스템에서 런타임에 정보에 액세스 하 게 되 고 CreatePermission를 호출 합니다. 시스템에서 반환 된 사용 <xref:System.Security.IPermission>지정 된 보안 요구 사항을 적용할.</xref:System.Security.IPermission>"
  syntax:
    content: public override System.Security.IPermission CreatePermission ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "인스턴스는 <xref href=&quot;System.Net.SocketPermission&quot;> </xref> 보안 선언에 해당 하는 클래스입니다."
  overload: System.Net.SocketPermissionAttribute.CreatePermission*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "현재 인스턴스 중 하나 이상이 <> </> *>, <> </> *>, <> </> *>, 또는 <> </> *> 속성은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Net.SocketPermissionAttribute.Host
  id: Host
  parent: System.Net.SocketPermissionAttribute
  langs:
  - csharp
  name: Host
  nameWithType: SocketPermissionAttribute.Host
  fullName: System.Net.SocketPermissionAttribute.Host
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "DNS 호스트 이름이 나이 지정 된 IP 주소를 가져오거나 <xref href=&quot;System.Net.SocketPermissionAttribute&quot;> </xref>합니다."
  remarks: "이 속성은 쓰기-되 면이 권한이 적용 되는 서비스 DNS (Domain Name) 호스트 이름을 지정 합니다."
  syntax:
    content: public string Host { get; set; }
    return:
      type: System.String
      description: "DNS 호스트 이름이 나의이 인스턴스와 연결 된 IP 주소를 포함 하는 문자열 <xref href=&quot;System.Net.SocketPermissionAttribute&quot;> </xref>합니다."
  overload: System.Net.SocketPermissionAttribute.Host*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "호스트가 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 값을 설정 하려고 합니다. 둘 이상의 호스트를 지정 하려면 추가 특성이 선언문을 사용 합니다."
  platform:
  - net462
- uid: System.Net.SocketPermissionAttribute.Port
  id: Port
  parent: System.Net.SocketPermissionAttribute
  langs:
  - csharp
  name: Port
  nameWithType: SocketPermissionAttribute.Port
  fullName: System.Net.SocketPermissionAttribute.Port
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "연결 된 포트 번호를 가져오거나 설정 합니다. <xref href=&quot;System.Net.SocketPermissionAttribute&quot;> </xref>합니다."
  remarks: "이 속성은 쓰기-되 면이 권한이 적용 되는 포트 번호를 지정 합니다. 유효한 값은 문자열로 인코딩된 정수 또는 문자열 &quot;All&quot;입니다."
  syntax:
    content: public string Port { get; set; }
    return:
      type: System.String
      description: "이 인스턴스와 연결 된 포트 번호를 포함 하는 문자열 <xref href=&quot;System.Net.SocketPermissionAttribute&quot;> </xref>합니다."
  overload: System.Net.SocketPermissionAttribute.Port*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "포트 속성은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 값을 설정 하려고 합니다. 둘 이상의 포트를 지정 하려면 추가 특성이 선언문을 사용 합니다."
  platform:
  - net462
- uid: System.Net.SocketPermissionAttribute.Transport
  id: Transport
  parent: System.Net.SocketPermissionAttribute
  langs:
  - csharp
  name: Transport
  nameWithType: SocketPermissionAttribute.Transport
  fullName: System.Net.SocketPermissionAttribute.Transport
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "가져오거나는 <xref href=&quot;System.Net.TransportType&quot;> </xref> 이 지정 된 <xref href=&quot;System.Net.SocketPermissionAttribute&quot;> </xref>합니다."
  remarks: "이 속성의 가능한 문자열 값은 <xref:System.Net.TransportType>, <xref:System.Net.TransportType>, <xref:System.Net.TransportType>, <xref:System.Net.TransportType>, 및 <xref:System.Net.TransportType>.</xref:System.Net.TransportType> </xref:System.Net.TransportType> </xref:System.Net.TransportType> </xref:System.Net.TransportType> </xref:System.Net.TransportType>"
  syntax:
    content: public string Transport { get; set; }
    return:
      type: System.String
      description: "포함 하는 문자열은 <xref href=&quot;System.Net.TransportType&quot;> </xref> 이와 연결 된 <xref href=&quot;System.Net.SocketPermissionAttribute&quot;> </xref>합니다."
  overload: System.Net.SocketPermissionAttribute.Transport*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "전송 않습니다 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 값을 설정 하려고 합니다. 둘 이상의 전송 종류를 지정 하려면 추가 특성이 선언문을 사용 합니다."
  platform:
  - net462
references:
- uid: System.Security.Permissions.CodeAccessSecurityAttribute
  isExternal: false
  name: System.Security.Permissions.CodeAccessSecurityAttribute
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Net.SocketPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)
  parent: System.Net.SocketPermissionAttribute
  isExternal: false
  name: SocketPermissionAttribute(SecurityAction)
  nameWithType: SocketPermissionAttribute.SocketPermissionAttribute(SecurityAction)
  fullName: System.Net.SocketPermissionAttribute.SocketPermissionAttribute(SecurityAction)
- uid: System.Security.Permissions.SecurityAction
  parent: System.Security.Permissions
  isExternal: false
  name: SecurityAction
  nameWithType: SecurityAction
  fullName: System.Security.Permissions.SecurityAction
- uid: System.Net.SocketPermissionAttribute.Access
  parent: System.Net.SocketPermissionAttribute
  isExternal: false
  name: Access
  nameWithType: SocketPermissionAttribute.Access
  fullName: System.Net.SocketPermissionAttribute.Access
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.SocketPermissionAttribute.CreatePermission
  parent: System.Net.SocketPermissionAttribute
  isExternal: false
  name: CreatePermission()
  nameWithType: SocketPermissionAttribute.CreatePermission()
  fullName: System.Net.SocketPermissionAttribute.CreatePermission()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Net.SocketPermissionAttribute.Host
  parent: System.Net.SocketPermissionAttribute
  isExternal: false
  name: Host
  nameWithType: SocketPermissionAttribute.Host
  fullName: System.Net.SocketPermissionAttribute.Host
- uid: System.Net.SocketPermissionAttribute.Port
  parent: System.Net.SocketPermissionAttribute
  isExternal: false
  name: Port
  nameWithType: SocketPermissionAttribute.Port
  fullName: System.Net.SocketPermissionAttribute.Port
- uid: System.Net.SocketPermissionAttribute.Transport
  parent: System.Net.SocketPermissionAttribute
  isExternal: false
  name: Transport
  nameWithType: SocketPermissionAttribute.Transport
  fullName: System.Net.SocketPermissionAttribute.Transport
- uid: System.Net.SocketPermissionAttribute.#ctor*
  parent: System.Net.SocketPermissionAttribute
  isExternal: false
  name: SocketPermissionAttribute
  nameWithType: SocketPermissionAttribute.SocketPermissionAttribute
- uid: System.Net.SocketPermissionAttribute.Access*
  parent: System.Net.SocketPermissionAttribute
  isExternal: false
  name: Access
  nameWithType: SocketPermissionAttribute.Access
- uid: System.Net.SocketPermissionAttribute.CreatePermission*
  parent: System.Net.SocketPermissionAttribute
  isExternal: false
  name: CreatePermission
  nameWithType: SocketPermissionAttribute.CreatePermission
- uid: System.Net.SocketPermissionAttribute.Host*
  parent: System.Net.SocketPermissionAttribute
  isExternal: false
  name: Host
  nameWithType: SocketPermissionAttribute.Host
- uid: System.Net.SocketPermissionAttribute.Port*
  parent: System.Net.SocketPermissionAttribute
  isExternal: false
  name: Port
  nameWithType: SocketPermissionAttribute.Port
- uid: System.Net.SocketPermissionAttribute.Transport*
  parent: System.Net.SocketPermissionAttribute
  isExternal: false
  name: Transport
  nameWithType: SocketPermissionAttribute.Transport
