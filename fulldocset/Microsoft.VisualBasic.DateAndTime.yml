### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.DateAndTime
  id: DateAndTime
  children:
  - Microsoft.VisualBasic.DateAndTime.DateAdd(Microsoft.VisualBasic.DateInterval,System.Double,System.DateTime)
  - Microsoft.VisualBasic.DateAndTime.DateAdd(System.String,System.Double,System.Object)
  - Microsoft.VisualBasic.DateAndTime.DateDiff(Microsoft.VisualBasic.DateInterval,System.DateTime,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)
  - Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)
  - Microsoft.VisualBasic.DateAndTime.DatePart(Microsoft.VisualBasic.DateInterval,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)
  - Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)
  - Microsoft.VisualBasic.DateAndTime.DateSerial(System.Int32,System.Int32,System.Int32)
  - Microsoft.VisualBasic.DateAndTime.DateString
  - Microsoft.VisualBasic.DateAndTime.DateValue(System.String)
  - Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)
  - Microsoft.VisualBasic.DateAndTime.Hour(System.DateTime)
  - Microsoft.VisualBasic.DateAndTime.Minute(System.DateTime)
  - Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)
  - Microsoft.VisualBasic.DateAndTime.MonthName(System.Int32,System.Boolean)
  - Microsoft.VisualBasic.DateAndTime.Now
  - Microsoft.VisualBasic.DateAndTime.Second(System.DateTime)
  - Microsoft.VisualBasic.DateAndTime.TimeOfDay
  - Microsoft.VisualBasic.DateAndTime.Timer
  - Microsoft.VisualBasic.DateAndTime.TimeSerial(System.Int32,System.Int32,System.Int32)
  - Microsoft.VisualBasic.DateAndTime.TimeString
  - Microsoft.VisualBasic.DateAndTime.TimeValue(System.String)
  - Microsoft.VisualBasic.DateAndTime.Today
  - Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)
  - Microsoft.VisualBasic.DateAndTime.WeekdayName(System.Int32,System.Boolean,Microsoft.VisualBasic.FirstDayOfWeek)
  - Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)
  langs:
  - csharp
  name: DateAndTime
  nameWithType: DateAndTime
  fullName: Microsoft.VisualBasic.DateAndTime
  type: Class
  summary: "<xref uid=&quot;langword_csharp_DateAndTime&quot; name=&quot;DateAndTime&quot; href=&quot;&quot;> </xref> 모듈은 절차와 날짜 및 시간 작업에 사용 되는 속성에 포함 되어 있습니다."
  remarks: "이 모듈은 Visual Basic 언어 키워드 및 런타임 라이브러리 멤버를 현재 날짜 또는 시간, 날짜를 계산, 날짜 또는 시간을 반환, 날짜 또는 시간을 설정 또는 시간 프로세스의 기간을 지원 합니다."
  example:
  - "This example uses the `Today` property to return the current system date.  \n  \n```  \nDim thisDate As Date  \nthisDate = Today   \n```"
  syntax:
    content: >-
      [Microsoft.VisualBasic.CompilerServices.StandardModule]

      public sealed class DateAndTime
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.DateAdd(Microsoft.VisualBasic.DateInterval,System.Double,System.DateTime)
  id: DateAdd(Microsoft.VisualBasic.DateInterval,System.Double,System.DateTime)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: DateAdd(DateInterval,Double,DateTime)
  nameWithType: DateAndTime.DateAdd(DateInterval,Double,DateTime)
  fullName: Microsoft.VisualBasic.DateAndTime.DateAdd(DateInterval,Double,DateTime)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "반환 된 <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> 지정한 시간 간격이 추가 된 날짜 및 시간 값을 포함 하는 값입니다."
  remarks: "사용할 수는 `DateAdd` 함수를 추가 하거나 뺄 날짜에서 특정된 시간 간격입니다. 예를 들어 이제 오늘 또는 시간 전에 45 분에서 30 일 날짜를 계산할 수 있습니다.       날짜를 추가 하려면 `DateValue`를 사용할 수 있습니다 `DateInterval.Day`, `DateInterval.DayOfYear`, 또는 `DateInterval.Weekday`합니다. 이러한 때문에 동등한 것으로 취급 됩니다 `DayOfYear` 및 `Weekday` 의미 있는 시간 간격을 하지 않습니다.       `DateAdd` 함수는 잘못 된 날짜를 반환 하지 않습니다. 필요한 경우 결과 날짜의 날짜 부분 결과 연도에 결과 달의 마지막 날 하향 조정 됩니다. 다음 예제에서는 1 월 31 일에 1 개월을 더: ```vb#   Dim NextMonth As Date = DateAdd(DateInterval.Month, 1, #1/31/1995#)   ``` 이 예에서 `DateAdd` 반환 `#2/28/1995#`이 아니라 `#2/31/1995#`합니다. 경우 `DateValue` 은 `#1/31/1996#`, 반환 `#2/29/1996#` 1996 윤년 이므로 합니다.      > [!NOTE]  >   `DateAdd` 에서 현재 달력 설정을 사용 하 여는 <xref:System.Globalization.CultureInfo.CurrentCulture%2A>의 속성은 <xref:System.Globalization.CultureInfo>클래스에 <xref:System.Globalization>네임 스페이스.</xref:System.Globalization> </xref:System.Globalization.CultureInfo> </xref:System.Globalization.CultureInfo.CurrentCulture%2A> 기본 <xref:System.Globalization.CultureInfo.CurrentCulture%2A>값에 따라 결정 됩니다 **제어판** 설정.</xref:System.Globalization.CultureInfo.CurrentCulture%2A>       이후 모든 `Date` 값으로 사용할 수는 <xref:System.DateTime>구조를 해당 메서드에 추가 하는 옵션 제공 시간 간격을 추가 합니다.</xref:System.DateTime> 예를 들어 일 전 부터는 가장 가까운 밀리초로 반올림의 소수를 추가할 수 있습니다는 `Date` 다음과 같이 변수: ```vb#   Dim NextTime As Date = Now        &quot; Current date and time.   NextTime = NextTime.AddDays(3.4)  &quot; Increment by 3 2/5 days.   ``` 는 `Interval` 인수의 다음 설정 중 하나를 사용할 수 있습니다.      | 열거형 값 | 문자열 | 시간 간격의 단위를 추가 하려면 |   |-----------------------|------------|----------------------------------|   | `DateInterval.Day`|d| Day 정수 값으로 잘린 |   | `DateInterval.DayOfYear`|y| Day 정수 값으로 잘린 |   | `DateInterval.Hour`|h| 시간; 가장 가까운 밀리초로 반올림 |   | `DateInterval.Minute`|n| 분; 가장 가까운 밀리초로 반올림 |   | `DateInterval.Month`|m| 월; 정수 값으로 잘린 |   | `DateInterval.Quarter`|q| 분기; 정수 값으로 잘린 |   | `DateInterval.Second`|s| 초입니다. 가장 가까운 밀리초로 반올림 |   | `DateInterval.Weekday`|w| Day 정수 값으로 잘린 |   | `DateInterval.WeekOfYear`|ww| 주; 정수 값으로 잘린 |   | `DateInterval.Year`|yyyy| 연도 정수 값으로 잘린 |"
  example:
  - "This example takes a date and, using the `DateAdd` function, displays a corresponding date a specified number of months in the future.  \n  \n [!code-vb[VbVbalrFunctions#25](~/add/codesnippet/visualbasic/1a306149-706d-46fd-9b1a-_1.vb)]"
  syntax:
    content: public static DateTime DateAdd (Microsoft.VisualBasic.DateInterval Interval, double Number, DateTime DateValue);
    parameters:
    - id: Interval
      type: Microsoft.VisualBasic.DateInterval
      description: "필수 사항입니다. <xref uid=&quot;langword_csharp_DateInterval&quot; name=&quot;DateInterval&quot; href=&quot;&quot;></xref>열거형 값 또는 <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> 추가 하려는 시간 간격을 나타내는 식입니다."
    - id: Number
      type: System.Double
      description: "필수 사항입니다. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>. 부동 소수점 추가 하려는 간격의 수를 나타내는 식입니다. `Number`(날짜/시간 값을 앞으로 가져오기)을 양수 또는 음수 (과거에서 날짜/시간 값 가져오기)을 수 있습니다. 소수 자릿수를 포함할 수 있습니다 때 부 `Interval` 시간, 분 또는 초를 지정 합니다. 다른 값에 대 한 `Interval`소수 부분의 `Number` 는 무시 됩니다."
    - id: DateValue
      type: System.DateTime
      description: "필수 사항입니다. <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;></xref>. 날짜 및 간격을 추가할 수는 시간을 나타내는 식입니다. `DateValue`호출 프로그램에서 자체 변경 되지 않습니다."
    return:
      type: System.DateTime
      description: "반환 된 <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> 지정한 시간 간격이 추가 된 날짜 및 시간 값을 포함 하는 값입니다."
  overload: Microsoft.VisualBasic.DateAndTime.DateAdd*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "<code>DateValue</code>으로 강제 변환 될 <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref>합니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Interval</code>잘못 되었습니다."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "계산 된 날짜는 1 일 12 월 31 일 23시 59분: 59 보다 이후 이거나 년 1 월 1 일 00시: 00에서 9999입니다."
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.DateAdd(System.String,System.Double,System.Object)
  id: DateAdd(System.String,System.Double,System.Object)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: DateAdd(String,Double,Object)
  nameWithType: DateAndTime.DateAdd(String,Double,Object)
  fullName: Microsoft.VisualBasic.DateAndTime.DateAdd(String,Double,Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "반환 된 <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> 지정한 시간 간격이 추가 된 날짜 및 시간 값을 포함 하는 값입니다."
  remarks: "사용할 수는 `DateAdd` 함수를 추가 하거나 뺄 날짜에서 특정된 시간 간격입니다. 예를 들어 이제 오늘 또는 시간 전에 45 분에서 30 일 날짜를 계산할 수 있습니다.       날짜를 추가 하려면 `DateValue`를 사용할 수 있습니다 `DateInterval.Day`, `DateInterval.DayOfYear`, 또는 `DateInterval.Weekday`합니다. 이러한 때문에 동등한 것으로 취급 됩니다 `DayOfYear` 및 `Weekday` 의미 있는 시간 간격을 하지 않습니다.       `DateAdd` 함수는 잘못 된 날짜를 반환 하지 않습니다. 필요한 경우 결과 날짜의 날짜 부분 결과 연도에 결과 달의 마지막 날 하향 조정 됩니다. 다음 예제에서는 1 월 31 일에 1 개월을 더: ```vb#   Dim NextMonth As Date = DateAdd(DateInterval.Month, 1, #1/31/1995#)   ``` 이 예에서 `DateAdd` 반환 `#2/28/1995#`이 아니라 `#2/31/1995#`합니다. 경우 `DateValue` 은 `#1/31/1996#`, 반환 `#2/29/1996#` 1996 윤년 이므로 합니다.      > [!NOTE]  >   `DateAdd` 에서 현재 달력 설정을 사용 하 여는 <xref:System.Globalization.CultureInfo.CurrentCulture%2A>의 속성은 <xref:System.Globalization.CultureInfo>클래스에 <xref:System.Globalization>네임 스페이스.</xref:System.Globalization> </xref:System.Globalization.CultureInfo> </xref:System.Globalization.CultureInfo.CurrentCulture%2A> 기본 <xref:System.Globalization.CultureInfo.CurrentCulture%2A>값에 따라 결정 됩니다 **제어판** 설정.</xref:System.Globalization.CultureInfo.CurrentCulture%2A>       이후 모든 `Date` 값으로 사용할 수는 <xref:System.DateTime>구조를 해당 메서드에 추가 하는 옵션 제공 시간 간격을 추가 합니다.</xref:System.DateTime> 예를 들어 일 전 부터는 가장 가까운 밀리초로 반올림의 소수를 추가할 수 있습니다는 `Date` 다음과 같이 변수: ```vb#   Dim NextTime As Date = Now        &quot; Current date and time.   NextTime = NextTime.AddDays(3.4)  &quot; Increment by 3 2/5 days.   ``` 는 `Interval` 인수의 다음 설정 중 하나를 사용할 수 있습니다.      | 열거형 값 | 문자열 | 시간 간격의 단위를 추가 하려면 |   |-----------------------|------------|----------------------------------|   | `DateInterval.Day`|d| Day 정수 값으로 잘린 |   | `DateInterval.DayOfYear`|y| Day 정수 값으로 잘린 |   | `DateInterval.Hour`|h| 시간; 가장 가까운 밀리초로 반올림 |   | `DateInterval.Minute`|n| 분; 가장 가까운 밀리초로 반올림 |   | `DateInterval.Month`|m| 월; 정수 값으로 잘린 |   | `DateInterval.Quarter`|q| 분기; 정수 값으로 잘린 |   | `DateInterval.Second`|s| 초입니다. 가장 가까운 밀리초로 반올림 |   | `DateInterval.Weekday`|w| Day 정수 값으로 잘린 |   | `DateInterval.WeekOfYear`|ww| 주; 정수 값으로 잘린 |   | `DateInterval.Year`|yyyy| 연도 정수 값으로 잘린 |"
  example:
  - "This example takes a date and, using the `DateAdd` function, displays a corresponding date a specified number of months in the future.  \n  \n [!code-vb[VbVbalrFunctions#25](~/add/codesnippet/visualbasic/8ee426fa-d573-45a5-a0f5-_1.vb)]"
  syntax:
    content: public static DateTime DateAdd (string Interval, double Number, object DateValue);
    parameters:
    - id: Interval
      type: System.String
      description: "필수 사항입니다. <xref uid=&quot;langword_csharp_DateInterval&quot; name=&quot;DateInterval&quot; href=&quot;&quot;></xref>열거형 값 또는 <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> 추가 하려는 시간 간격을 나타내는 식입니다."
    - id: Number
      type: System.Double
      description: "필수 사항입니다. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>. 부동 소수점 추가 하려는 간격의 수를 나타내는 식입니다. `Number`(날짜/시간 값을 앞으로 가져오기)을 양수 또는 음수 (과거에서 날짜/시간 값 가져오기)을 수 있습니다. 소수 자릿수를 포함할 수 있습니다 때 부 `Interval` 시간, 분 또는 초를 지정 합니다. 다른 값에 대 한 `Interval`소수 부분의 `Number` 는 무시 됩니다."
    - id: DateValue
      type: System.Object
      description: "필수 사항입니다. <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;></xref>. 날짜 및 간격을 추가할 수는 시간을 나타내는 식입니다. `DateValue`호출 프로그램에서 자체 변경 되지 않습니다."
    return:
      type: System.DateTime
      description: "반환 된 <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> 지정한 시간 간격이 추가 된 날짜 및 시간 값을 포함 하는 값입니다."
  overload: Microsoft.VisualBasic.DateAndTime.DateAdd*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "<code>DateValue</code>으로 강제 변환 될 <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref>합니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Interval</code>잘못 되었습니다."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "계산 된 날짜는 1 일 12 월 31 일 23시 59분: 59 보다 이후 이거나 년 1 월 1 일 00시: 00에서 9999입니다."
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.DateDiff(Microsoft.VisualBasic.DateInterval,System.DateTime,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)
  id: DateDiff(Microsoft.VisualBasic.DateInterval,System.DateTime,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: DateDiff(DateInterval,DateTime,DateTime,FirstDayOfWeek,FirstWeekOfYear)
  nameWithType: DateAndTime.DateDiff(DateInterval,DateTime,DateTime,FirstDayOfWeek,FirstWeekOfYear)
  fullName: Microsoft.VisualBasic.DateAndTime.DateDiff(DateInterval,DateTime,DateTime,FirstDayOfWeek,FirstWeekOfYear)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "반환 된 <xref uid=&quot;langword_csharp_Long&quot; name=&quot;Long&quot; href=&quot;&quot;> </xref> 두 사이 시간 간격의 수를 지정 하는 값 <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> 값입니다."
  remarks: "사용할 수는 `DateDiff` 두 개의 날짜/시간 값 사이 있는 개수 지정 된 시간 간격을 결정 하는 함수입니다. 사용할 수는 예를 들어 `DateDiff` 오늘과 연도의 마지막 사이의 주 수 또는 두 날짜 사이의 일 수를 계산 합니다.      ## 동작- **매개 변수 처리 합니다.** `DateDiff`값을 빼고 `Date1` 의 값에서 `Date2` 시간차를 구합니다. 호출 프로그램에서 두 값이 변경 됩니다.      - **값을 반환 합니다.** 때문에 `Date1` 및 `Date2` 의 `Date` 데이터 형식 이므로 날짜 및 시간 값 100 나노초까지 정확한 타이머에서 저장 된 시스템입니다. 그러나 `DateDiff` 항상로 시간 간격의 수를 반환 합니다.는 `Long` 값입니다.           경우 `Date1` 이후 날짜 및 시간 보다 나타냅니다 `Date2`, `DateDiff` 는 음수를 반환 합니다.      - **일 간격입니다.** 경우 `Interval` 로 설정 되어 `DateInterval.DayOfYear`, 취급 됩니다 동일 `DateInterval.Day`때문에, `DayOfYear` 시간 간격에 대 한 의미 있는 단위 않습니다.      - **주 간격입니다.** 경우 `Interval` 로 설정 된 `DateInterval.WeekOfYear`, 반환 값은 첫 번째 요일 포함 하는 주 사이의 주 수를 나타냅니다. `Date1` 및 포함 하는 주에 대 한 첫 번째 요일 `Date2`합니다. 다음 예제에서는 다른 결과를 생성 되는 방식을 보여 줍니다. `DateInterval.Weekday`합니다.           [!code-vb[VbVbalrFunctions #60](~/add/codesnippet/visualbasic/e9b06095-1039-4b68-96e4-_1.vb) ] 앞의 예제에서 `DateDiff` 0을 반환 `wD` 두 날짜 간의 차이 7 일 이내 이지만 1을 반환 하기 때문에 `wY` 해당 주일간의 첫 번째 날에는 7 일 차이가 있기 때문입니다.      - **더 큰 간격입니다.** 경우 `Interval` 로 설정 된 `DateInterval.Year`, 반환 값의 연도 부분에서 순수 하 게 계산 됩니다 `Date1` 및 `Date2`합니다. 마찬가지로, 반환 값에 대 한 `DateInterval.Month` 인수는 및에 대 한 연도 및 월 부분에서 순수 하 게 계산 `DateInterval.Quarter` 두 날짜를 포함 하는 분기에서입니다.           예를 들어, 다음 연도의 1 년 1 월 12 월 31 일을 비교할 때 `DateDiff` 에 대 한 1을 반환 `DateInterval.Year`, `DateInterval.Quarter`, 또는 `DateInterval.Month`최대 하루가 경과 된 경우에 합니다.           여러 연대를 가진 일본 같은 문화권은 `DateDiff` 메서드 두 개 이상의 연대에 걸쳐 있는 경우 연도 차이 반환 하지 않습니다. 대신, 반환 값의 차이 계산할 수 있습니다는 <xref:System.DateTime.Year%2A>속성을 다음 예에서 같이: `date2.Year - date1.Year`.</xref:System.DateTime.Year%2A>      - **기타 간격입니다.** 이후 모든 `Date` 값으로 사용할 수는 <xref:System.DateTime>구조를 해당 메서드에 추가 하는 옵션 제공 시간 간격을 찾는 데.</xref:System.DateTime> 예를 들어 사용할 수 있습니다는 `Subtract` 메서드 오버 로드 된 중 하나로: <xref:System.DateTime.Subtract%2A?displayProperty=fullName>뺍니다는 <xref:System.TimeSpan>에서 `Date` 두 `Date` 값 및 <xref:System.DateTime.Subtract%2A?displayProperty=fullName>뺍니다는 `Date` <xref:System.TimeSpan>.</xref:System.TimeSpan> 반환할 값</xref:System.DateTime.Subtract%2A?displayProperty=fullName> </xref:System.TimeSpan> </xref:System.DateTime.Subtract%2A?displayProperty=fullName> 다음 예제와 같이 걸리는 시간을 밀리초 단위로 찾으려고 프로세스의 시간 수 있습니다.           [!code-vb[VbVbalrFunctions&#61;](~/add/codesnippet/visualbasic/e9b06095-1039-4b68-96e4-_2.vb) ] 는 `Interval` 인수의 다음 설정 중 하나를 사용할 수 있습니다.      | 열거형 값 | 문자열 값 | 단위 시간 차이를 |   |-----------------------|------------------|-----------------------------|   | `DateInterval.Day`|&quot; d &quot;| 일 |   | `DateInterval.DayOfYear`|&quot; y &quot;| 일 |   | `DateInterval.Hour`|&quot; h &quot;| 시간 |   | `DateInterval.Minute`|&quot; n &quot;| 분 |   | `DateInterval.Month`|&quot; m &quot;| 월 |   | `DateInterval.Quarter`|&quot; q: &quot;| 분기 |   | `DateInterval.Second`|&quot; s &quot;| 두 번째 |   | `DateInterval.Weekday`|&quot; w &quot;| 주 |   | `DateInterval.WeekOfYear`|&quot; ww &quot;| 주일간 |   | `DateInterval.Year`|&quot; yyyy &quot;| 연도 |       `DayOfWeek` 인수의 다음 설정 중 하나를 사용할 수 있습니다.      | 열거형 값 | 값 | 설명 |   |-----------------------|-----------|-----------------|   | `FirstDayOfWeek.System`|0| 시스템 설정에 지정 된 주의 첫 번째 날 |   | `FirstDayOfWeek.Sunday`|1| (기본값) 일요일 |   | `FirstDayOfWeek.Monday`|2| 월요일 (ISO 8601 표준, 3.17) |   | `FirstDayOfWeek.Tuesday`|3| 화요일 |   | `FirstDayOfWeek.Wednesday`|4| 수요일 |   | `FirstDayOfWeek.Thursday`|5| 목요일 |   | `FirstDayOfWeek.Friday`|6| 금요일 |   | `FirstDayOfWeek.Saturday`|7| 토요일 |       `WeekOfYear` 인수의 다음 설정 중 하나를 사용할 수 있습니다.      | 열거형 값 | 값 | 설명 |   |-----------------------|-----------|-----------------|   | `FirstWeekOfYear.System`|0| 시스템 설정에 지정 된 연도의 첫 번째 주 |   | `FirstWeekOfYear.Jan1`|1| 주를 1 월 1 일 (기본값) |   | `FirstWeekOfYear.FirstFourDays`|2| 주 (ISO 8601 표준, 3.17 준수 함) 새 해 4 일 이상에 속하는 주 |   | `FirstWeekOfYear.FirstFullWeek`|3| 올해에는 완전 한 첫 번째 주 |"
  example:
  - "This example uses the `DateDiff` function to display the number of days between a given date and today.  \n  \n [!code-vb[VbVbalrFunctions#26](~/add/codesnippet/visualbasic/e9b06095-1039-4b68-96e4-_3.vb)]"
  syntax:
    content: public static long DateDiff (Microsoft.VisualBasic.DateInterval Interval, DateTime Date1, DateTime Date2, Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday, Microsoft.VisualBasic.FirstWeekOfYear WeekOfYear = Microsoft.VisualBasic.FirstWeekOfYear.Jan1);
    parameters:
    - id: Interval
      type: Microsoft.VisualBasic.DateInterval
      description: "필수 사항입니다. <xref uid=&quot;langword_csharp_DateInterval&quot; name=&quot;DateInterval&quot; href=&quot;&quot;></xref>열거형 값 또는 <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> 차이 단위로 사용 하려는 시간 간격을 나타내는 식 `Date1` 및 `Date2`합니다."
    - id: Date1
      type: System.DateTime
      description: "필수 사항입니다. <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;></xref>. 계산에 사용 하려는 첫 번째 날짜/시간 값입니다."
    - id: Date2
      type: System.DateTime
      description: "필수 사항입니다. <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;></xref>. 두 번째 날짜/시간 계산에 사용 하려는 값입니다."
    - id: DayOfWeek
      type: Microsoft.VisualBasic.FirstDayOfWeek
      description: "선택 사항입니다. 선택 된 값은 <xref uid=&quot;langword_csharp_FirstDayOfWeek&quot; name=&quot;FirstDayOfWeek&quot; href=&quot;&quot;> </xref> 첫 번째 요일을 지정 하는 열거형입니다. 지정 하지 않으면 <xref uid=&quot;langword_csharp_FirstDayOfWeek.Sunday&quot; name=&quot;FirstDayOfWeek.Sunday&quot; href=&quot;&quot;> </xref> 사용 됩니다."
    - id: WeekOfYear
      type: Microsoft.VisualBasic.FirstWeekOfYear
      description: "선택 사항입니다. 선택 된 값은 <xref uid=&quot;langword_csharp_FirstWeekOfYear&quot; name=&quot;FirstWeekOfYear&quot; href=&quot;&quot;> </xref> 해당 연도의 첫째 주를 지정 하는 열거형입니다. 지정 하지 않으면 <xref uid=&quot;langword_csharp_FirstWeekOfYear.Jan1&quot; name=&quot;FirstWeekOfYear.Jan1&quot; href=&quot;&quot;> </xref> 사용 됩니다."
    return:
      type: System.Int64
      description: "반환 된 <xref uid=&quot;langword_csharp_Long&quot; name=&quot;Long&quot; href=&quot;&quot;> </xref> 두 사이 시간 간격의 수를 지정 하는 값 <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> 값입니다."
  overload: Microsoft.VisualBasic.DateAndTime.DateDiff*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Date1</code><code>Date2</code>, 또는 <code>DayofWeek</code> 범위를 벗어났습니다."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "<code>Date1</code>또는 <code>Date2</code> 는 잘못 된 형식입니다."
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)
  id: DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: DateDiff(String,Object,Object,FirstDayOfWeek,FirstWeekOfYear)
  nameWithType: DateAndTime.DateDiff(String,Object,Object,FirstDayOfWeek,FirstWeekOfYear)
  fullName: Microsoft.VisualBasic.DateAndTime.DateDiff(String,Object,Object,FirstDayOfWeek,FirstWeekOfYear)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "반환 된 <xref uid=&quot;langword_csharp_Long&quot; name=&quot;Long&quot; href=&quot;&quot;> </xref> 두 사이 시간 간격의 수를 지정 하는 값 <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> 값입니다."
  remarks: "사용할 수는 `DateDiff` 두 개의 날짜/시간 값 사이 있는 개수 지정 된 시간 간격을 결정 하는 함수입니다. 사용할 수는 예를 들어 `DateDiff` 오늘과 연도의 마지막 사이의 주 수 또는 두 날짜 사이의 일 수를 계산 합니다.      ## 동작- **매개 변수 처리 합니다.** `DateDiff`값을 빼고 `Date1` 의 값에서 `Date2` 시간차를 구합니다. 호출 프로그램에서 두 값이 변경 됩니다.      - **값을 반환 합니다.** 때문에 `Date1` 및 `Date2` 의 `Date` 데이터 형식 이므로 날짜 및 시간 값 100 나노초까지 정확한 타이머에서 저장 된 시스템입니다. 그러나 `DateDiff` 항상로 시간 간격의 수를 반환 합니다.는 `Long` 값입니다.           경우 `Date1` 이후 날짜 및 시간 보다 나타냅니다 `Date2`, `DateDiff` 는 음수를 반환 합니다.      - **일 간격입니다.** 경우 `Interval` 로 설정 되어 `DateInterval.DayOfYear`, 취급 됩니다 동일 `DateInterval.Day`때문에, `DayOfYear` 시간 간격에 대 한 의미 있는 단위 않습니다.      - **주 간격입니다.** 경우 `Interval` 로 설정 된 `DateInterval.WeekOfYear`, 반환 값은 첫 번째 요일 포함 하는 주 사이의 주 수를 나타냅니다. `Date1` 및 포함 하는 주에 대 한 첫 번째 요일 `Date2`합니다. 다음 예제에서는 다른 결과를 생성 되는 방식을 보여 줍니다. `DateInterval.Weekday`합니다.           [!code-vb[VbVbalrFunctions #60](~/add/codesnippet/visualbasic/46a9da0a-21fc-441c-a532-_1.vb) ] 앞의 예제에서 `DateDiff` 0을 반환 `wD` 두 날짜 간의 차이 7 일 이내 이지만 1을 반환 하기 때문에 `wY` 해당 주일간의 첫 번째 날에는 7 일 차이가 있기 때문입니다.      - **더 큰 간격입니다.** 경우 `Interval` 로 설정 된 `DateInterval.Year`, 반환 값의 연도 부분에서 순수 하 게 계산 됩니다 `Date1` 및 `Date2`합니다. 마찬가지로, 반환 값에 대 한 `DateInterval.Month` 인수는 및에 대 한 연도 및 월 부분에서 순수 하 게 계산 `DateInterval.Quarter` 두 날짜를 포함 하는 분기에서입니다.           예를 들어, 다음 연도의 1 년 1 월 12 월 31 일을 비교할 때 `DateDiff` 에 대 한 1을 반환 `DateInterval.Year`, `DateInterval.Quarter`, 또는 `DateInterval.Month`최대 하루가 경과 된 경우에 합니다.           여러 연대를 가진 일본 같은 문화권은 `DateDiff` 메서드 두 개 이상의 연대에 걸쳐 있는 경우 연도 차이 반환 하지 않습니다. 대신, 반환 값의 차이 계산할 수 있습니다는 <xref:System.DateTime.Year%2A>속성을 다음 예에서 같이: `date2.Year - date1.Year`.</xref:System.DateTime.Year%2A>      - **기타 간격입니다.** 이후 모든 `Date` 값으로 사용할 수는 <xref:System.DateTime>구조를 해당 메서드에 추가 하는 옵션 제공 시간 간격을 찾는 데.</xref:System.DateTime> 예를 들어 사용할 수 있습니다는 `Subtract` 메서드 오버 로드 된 중 하나로: <xref:System.DateTime.Subtract%2A?displayProperty=fullName>뺍니다는 <xref:System.TimeSpan>에서 `Date` 두 `Date` 값 및 <xref:System.DateTime.Subtract%2A?displayProperty=fullName>뺍니다는 `Date` <xref:System.TimeSpan>.</xref:System.TimeSpan> 반환할 값</xref:System.DateTime.Subtract%2A?displayProperty=fullName> </xref:System.TimeSpan> </xref:System.DateTime.Subtract%2A?displayProperty=fullName> 다음 예제와 같이 걸리는 시간을 밀리초 단위로 찾으려고 프로세스의 시간 수 있습니다.           [!code-vb[VbVbalrFunctions&#61;](~/add/codesnippet/visualbasic/46a9da0a-21fc-441c-a532-_2.vb) ] 는 `Interval` 인수의 다음 설정 중 하나를 사용할 수 있습니다.      | 열거형 값 | 문자열 값 | 단위 시간 차이를 |   |-----------------------|------------------|-----------------------------|   | `DateInterval.Day`|&quot; d &quot;| 일 |   | `DateInterval.DayOfYear`|&quot; y &quot;| 일 |   | `DateInterval.Hour`|&quot; h &quot;| 시간 |   | `DateInterval.Minute`|&quot; n &quot;| 분 |   | `DateInterval.Month`|&quot; m &quot;| 월 |   | `DateInterval.Quarter`|&quot; q: &quot;| 분기 |   | `DateInterval.Second`|&quot; s &quot;| 두 번째 |   | `DateInterval.Weekday`|&quot; w &quot;| 주 |   | `DateInterval.WeekOfYear`|&quot; ww &quot;| 주일간 |   | `DateInterval.Year`|&quot; yyyy &quot;| 연도 |       `DayOfWeek` 인수의 다음 설정 중 하나를 사용할 수 있습니다.      | 열거형 값 | 값 | 설명 |   |-----------------------|-----------|-----------------|   | `FirstDayOfWeek.System`|0| 시스템 설정에 지정 된 주의 첫 번째 날 |   | `FirstDayOfWeek.Sunday`|1| (기본값) 일요일 |   | `FirstDayOfWeek.Monday`|2| 월요일 (ISO 8601 표준, 3.17) |   | `FirstDayOfWeek.Tuesday`|3| 화요일 |   | `FirstDayOfWeek.Wednesday`|4| 수요일 |   | `FirstDayOfWeek.Thursday`|5| 목요일 |   | `FirstDayOfWeek.Friday`|6| 금요일 |   | `FirstDayOfWeek.Saturday`|7| 토요일 |       `WeekOfYear` 인수의 다음 설정 중 하나를 사용할 수 있습니다.      | 열거형 값 | 값 | 설명 |   |-----------------------|-----------|-----------------|   | `FirstWeekOfYear.System`|0| 시스템 설정에 지정 된 연도의 첫 번째 주 |   | `FirstWeekOfYear.Jan1`|1| 주를 1 월 1 일 (기본값) |   | `FirstWeekOfYear.FirstFourDays`|2| 주 (ISO 8601 표준, 3.17 준수 함) 새 해 4 일 이상에 속하는 주 |   | `FirstWeekOfYear.FirstFullWeek`|3| 올해에는 완전 한 첫 번째 주 |"
  example:
  - "This example uses the `DateDiff` function to display the number of days between a given date and today.  \n  \n [!code-vb[VbVbalrFunctions#26](~/add/codesnippet/visualbasic/46a9da0a-21fc-441c-a532-_3.vb)]"
  syntax:
    content: public static long DateDiff (string Interval, object Date1, object Date2, Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday, Microsoft.VisualBasic.FirstWeekOfYear WeekOfYear = Microsoft.VisualBasic.FirstWeekOfYear.Jan1);
    parameters:
    - id: Interval
      type: System.String
      description: "필수 사항입니다. <xref uid=&quot;langword_csharp_DateInterval&quot; name=&quot;DateInterval&quot; href=&quot;&quot;></xref>열거형 값 또는 <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> 차이 단위로 사용 하려는 시간 간격을 나타내는 식 `Date1` 및 `Date2`합니다."
    - id: Date1
      type: System.Object
      description: "필수 사항입니다. <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;></xref>. 계산에 사용 하려는 첫 번째 날짜/시간 값입니다."
    - id: Date2
      type: System.Object
      description: "필수 사항입니다. <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;></xref>. 두 번째 날짜/시간 계산에 사용 하려는 값입니다."
    - id: DayOfWeek
      type: Microsoft.VisualBasic.FirstDayOfWeek
      description: "선택 사항입니다. 선택 된 값은 <xref uid=&quot;langword_csharp_FirstDayOfWeek&quot; name=&quot;FirstDayOfWeek&quot; href=&quot;&quot;> </xref> 첫 번째 요일을 지정 하는 열거형입니다. 지정 하지 않으면 <xref uid=&quot;langword_csharp_FirstDayOfWeek.Sunday&quot; name=&quot;FirstDayOfWeek.Sunday&quot; href=&quot;&quot;> </xref> 사용 됩니다."
    - id: WeekOfYear
      type: Microsoft.VisualBasic.FirstWeekOfYear
      description: "선택 사항입니다. 선택 된 값은 <xref uid=&quot;langword_csharp_FirstWeekOfYear&quot; name=&quot;FirstWeekOfYear&quot; href=&quot;&quot;> </xref> 해당 연도의 첫째 주를 지정 하는 열거형입니다. 지정 하지 않으면 <xref uid=&quot;langword_csharp_FirstWeekOfYear.Jan1&quot; name=&quot;FirstWeekOfYear.Jan1&quot; href=&quot;&quot;> </xref> 사용 됩니다."
    return:
      type: System.Int64
      description: "반환 된 <xref uid=&quot;langword_csharp_Long&quot; name=&quot;Long&quot; href=&quot;&quot;> </xref> 두 사이 시간 간격의 수를 지정 하는 값 <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> 값입니다."
  overload: Microsoft.VisualBasic.DateAndTime.DateDiff*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Date1</code><code>Date2</code>, 또는 <code>DayofWeek</code> 범위를 벗어났습니다."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "<code>Date1</code>또는 <code>Date2</code> 는 잘못 된 형식입니다."
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.DatePart(Microsoft.VisualBasic.DateInterval,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)
  id: DatePart(Microsoft.VisualBasic.DateInterval,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: DatePart(DateInterval,DateTime,FirstDayOfWeek,FirstWeekOfYear)
  nameWithType: DateAndTime.DatePart(DateInterval,DateTime,FirstDayOfWeek,FirstWeekOfYear)
  fullName: Microsoft.VisualBasic.DateAndTime.DatePart(DateInterval,DateTime,FirstDayOfWeek,FirstWeekOfYear)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "반환 된 <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> 값의 지정된 된 구성 요소를 포함 하는 지정 된 <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> 값입니다."
  remarks: "사용할 수는 `DatePart` 함수는 날짜/시간 값을 평가 하 고 특정 구성 요소를 반환 합니다. 사용할 수는 예를 들어 `DatePart` 주 나 현재 시간을 계산 하 합니다.       선택 하면 `DateInterval.Weekday` 에 대 한는 `Interval` 인수, 반환된 값은의 값과 일치는 `FirstDayOfWeek` 열거형입니다. 선택 하면 `DateInterval.WeekOfYear`, `DatePart` 사용 하 여는 <xref:System.Globalization.Calendar>및 <xref:System.Globalization.CultureInfo>의 클래스는 <xref:System.Globalization>현재 설정을 확인 하려면 네임 스페이스.</xref:System.Globalization> </xref:System.Globalization.CultureInfo> </xref:System.Globalization.Calendar>       `FirstDayOfWeekValue` 인수를 사용 하는 계산에 영향을 줍니다는 `DateInterval.Weekday` 및 `DateInterval.WeekOfYear` `Interval` 설정 합니다. `FirstWeekOfYearValue` 인수를 지정 하는 계산에 영향을 줍니다 `DateInterval.WeekOfYear` 에 대 한 `Interval`합니다.       이후 모든 `Date` 값으로 사용할 수는 <xref:System.DateTime>구조를 해당 메서드에 추가 하는 옵션 제공 날짜/시간 부분을 검색 합니다.</xref:System.DateTime> 예를 들어의 전체 날짜 값을 가져올 수 있습니다는 `Date` 시간 값으로 변수를 다음과 같이 자정으로 설정: ```vb#   Dim CurrDatTim As Date = Now   &quot; Current date and time.   Dim LastMidnight As Date = CurrDatTim.Date   &quot; At midnight.   ``` 는 `Interval` 인수의 다음 설정 중 하나를 사용할 수 있습니다.      | 열거형 값 | 문자열 | 반환할 날짜/시간 값의 일부 |   |-----------------------|------------|----------------------------------------|   | `DateInterval.Day`|d| 월 (1-31)의 일 |   | `DateInterval.DayOfYear`|y| 일 연도 (1-366) |   | `DateInterval.Hour`|h| 시간 |   | `DateInterval.Minute`|n| 분 |   | `DateInterval.Month`|m| 월 |   | `DateInterval.Quarter`|q| 분기 |   | `DateInterval.Second`|s| 두 번째 |   | `DateInterval.Weekday`|w| 요일 (1-7) |   | `DateInterval.WeekOfYear`|ww| 연도 (1-53)의 주 |   | `DateInterval.Year`|yyyy| 연도 |       `FirstDayOfWeekValue` 인수의 다음 설정 중 하나를 사용할 수 있습니다.      | 열거형 값 | 값 | 설명 |   |-----------------------|-----------|-----------------|   | `FirstDayOfWeek.System`|0| 시스템 설정에 지정 된 주의 첫 번째 날 |   | `FirstDayOfWeek.Sunday`|1| (기본값) 일요일 |   | `FirstDayOfWeek.Monday`|2| 월요일 (ISO 8601 표준, 3.17) |   | `FirstDayOfWeek.Tuesday`|3| 화요일 |   | `FirstDayOfWeek.Wednesday`|4| 수요일 |   | `FirstDayOfWeek.Thursday`|5| 목요일 |   | `FirstDayOfWeek.Friday`|6| 금요일 |   | `FirstDayOfWeek.Saturday`|7| 토요일 |       `FirstWeekOfYearValue` 인수의 다음 설정 중 하나를 사용할 수 있습니다.      | 열거형 값 | 값 | 설명 |   |-----------------------|-----------|-----------------|   | `FirstWeekOfYear.System`|0| 시스템 설정에 지정 된 연도의 첫 번째 주 |   | `FirstWeekOfYear.Jan1`|1| 주를 1 월 1 일 (기본값) |   | `FirstWeekOfYear.FirstFourDays`|2| 주 (ISO 8601 표준, 3.17 준수 함) 새 해 4 일 이상에 속하는 주 |   | `FirstWeekOfYear.FirstFullWeek`|3| 새 해 첫 번째 전체 주간 |"
  example:
  - "This example takes a date and, using the `DatePart` function, displays the quarter of the year in which it occurs.  \n  \n [!code-vb[VbVbalrFunctions#27](~/add/codesnippet/visualbasic/982d49dd-7819-40e1-9b19-_1.vb)]"
  syntax:
    content: public static int DatePart (Microsoft.VisualBasic.DateInterval Interval, DateTime DateValue, Microsoft.VisualBasic.FirstDayOfWeek FirstDayOfWeekValue = Microsoft.VisualBasic.FirstDayOfWeek.Sunday, Microsoft.VisualBasic.FirstWeekOfYear FirstWeekOfYearValue = Microsoft.VisualBasic.FirstWeekOfYear.Jan1);
    parameters:
    - id: Interval
      type: Microsoft.VisualBasic.DateInterval
      description: "필수 사항입니다. <xref uid=&quot;langword_csharp_DateInterval&quot; name=&quot;DateInterval&quot; href=&quot;&quot;></xref>열거형 값 또는 <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> 반환할 날짜/시간 값의 부분을 나타내는 식입니다."
    - id: DateValue
      type: System.DateTime
      description: "필수 사항입니다. <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;></xref>평가 하려는 값입니다."
    - id: FirstDayOfWeekValue
      type: Microsoft.VisualBasic.FirstDayOfWeek
      description: "선택 사항입니다. 선택 된 값은 <xref uid=&quot;langword_csharp_FirstDayOfWeek&quot; name=&quot;FirstDayOfWeek&quot; href=&quot;&quot;> </xref> 첫 번째 요일을 지정 하는 열거형입니다. 지정 하지 않으면 <xref uid=&quot;langword_csharp_FirstDayOfWeek.Sunday&quot; name=&quot;FirstDayOfWeek.Sunday&quot; href=&quot;&quot;> </xref> 사용 됩니다."
    - id: FirstWeekOfYearValue
      type: Microsoft.VisualBasic.FirstWeekOfYear
      description: "선택 사항입니다. 선택 된 값은 <xref uid=&quot;langword_csharp_FirstWeekOfYear&quot; name=&quot;FirstWeekOfYear&quot; href=&quot;&quot;> </xref> 해당 연도의 첫째 주를 지정 하는 열거형입니다. 지정 하지 않으면 <xref uid=&quot;langword_csharp_FirstWeekOfYear.Jan1&quot; name=&quot;FirstWeekOfYear.Jan1&quot; href=&quot;&quot;> </xref> 사용 됩니다."
    return:
      type: System.Int32
      description: "반환 된 <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> 값의 지정된 된 구성 요소를 포함 하는 지정 된 <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> 값입니다."
  overload: Microsoft.VisualBasic.DateAndTime.DatePart*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Interval</code>잘못 되었습니다."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "<code>DateValue</code>으로 강제 변환 될 <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref>합니다."
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)
  id: DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: DatePart(String,Object,FirstDayOfWeek,FirstWeekOfYear)
  nameWithType: DateAndTime.DatePart(String,Object,FirstDayOfWeek,FirstWeekOfYear)
  fullName: Microsoft.VisualBasic.DateAndTime.DatePart(String,Object,FirstDayOfWeek,FirstWeekOfYear)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "반환 된 <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> 값의 지정된 된 구성 요소를 포함 하는 지정 된 <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> 값입니다."
  remarks: "사용할 수는 `DatePart` 함수는 날짜/시간 값을 평가 하 고 특정 구성 요소를 반환 합니다. 사용할 수는 예를 들어 `DatePart` 주 나 현재 시간을 계산 하 합니다.       선택 하면 `DateInterval.Weekday` 에 대 한는 `Interval` 인수, 반환된 값은의 값과 일치는 `FirstDayOfWeek` 열거형입니다. 선택 하면 `DateInterval.WeekOfYear`, `DatePart` 사용 하 여는 <xref:System.Globalization.Calendar>및 <xref:System.Globalization.CultureInfo>의 클래스는 <xref:System.Globalization>현재 설정을 확인 하려면 네임 스페이스.</xref:System.Globalization> </xref:System.Globalization.CultureInfo> </xref:System.Globalization.Calendar>       `FirstDayOfWeekValue` 인수를 사용 하는 계산에 영향을 줍니다는 `DateInterval.Weekday` 및 `DateInterval.WeekOfYear` `Interval` 설정 합니다. `FirstWeekOfYearValue` 인수를 지정 하는 계산에 영향을 줍니다 `DateInterval.WeekOfYear` 에 대 한 `Interval`합니다.       이후 모든 `Date` 값으로 사용할 수는 <xref:System.DateTime>구조를 해당 메서드에 추가 하는 옵션 제공 날짜/시간 부분을 검색 합니다.</xref:System.DateTime> 예를 들어의 전체 날짜 값을 가져올 수 있습니다는 `Date` 시간 값으로 변수를 다음과 같이 자정으로 설정: ```vb#   Dim CurrDatTim As Date = Now   &quot; Current date and time.   Dim LastMidnight As Date = CurrDatTim.Date   &quot; At midnight.   ``` 는 `Interval` 인수의 다음 설정 중 하나를 사용할 수 있습니다.      | 열거형 값 | 문자열 | 반환할 날짜/시간 값의 일부 |   |-----------------------|------------|----------------------------------------|   | `DateInterval.Day`|d| 월 (1-31)의 일 |   | `DateInterval.DayOfYear`|y| 일 연도 (1-366) |   | `DateInterval.Hour`|h| 시간 |   | `DateInterval.Minute`|n| 분 |   | `DateInterval.Month`|m| 월 |   | `DateInterval.Quarter`|q| 분기 |   | `DateInterval.Second`|s| 두 번째 |   | `DateInterval.Weekday`|w| 요일 (1-7) |   | `DateInterval.WeekOfYear`|ww| 연도 (1-53)의 주 |   | `DateInterval.Year`|yyyy| 연도 |       `FirstDayOfWeekValue` 인수의 다음 설정 중 하나를 사용할 수 있습니다.      | 열거형 값 | 값 | 설명 |   |-----------------------|-----------|-----------------|   | `FirstDayOfWeek.System`|0| 시스템 설정에 지정 된 주의 첫 번째 날 |   | `FirstDayOfWeek.Sunday`|1| (기본값) 일요일 |   | `FirstDayOfWeek.Monday`|2| 월요일 (ISO 8601 표준, 3.17) |   | `FirstDayOfWeek.Tuesday`|3| 화요일 |   | `FirstDayOfWeek.Wednesday`|4| 수요일 |   | `FirstDayOfWeek.Thursday`|5| 목요일 |   | `FirstDayOfWeek.Friday`|6| 금요일 |   | `FirstDayOfWeek.Saturday`|7| 토요일 |       `FirstWeekOfYearValue` 인수의 다음 설정 중 하나를 사용할 수 있습니다.      | 열거형 값 | 값 | 설명 |   |-----------------------|-----------|-----------------|   | `FirstWeekOfYear.System`|0| 시스템 설정에 지정 된 연도의 첫 번째 주 |   | `FirstWeekOfYear.Jan1`|1| 주를 1 월 1 일 (기본값) |   | `FirstWeekOfYear.FirstFourDays`|2| 주 (ISO 8601 표준, 3.17 준수 함) 새 해 4 일 이상에 속하는 주 |   | `FirstWeekOfYear.FirstFullWeek`|3| 새 해 첫 번째 전체 주간 |"
  example:
  - "This example takes a date and, using the `DatePart` function, displays the quarter of the year in which it occurs.  \n  \n [!code-vb[VbVbalrFunctions#27](~/add/codesnippet/visualbasic/682455c0-1619-4c4c-8238-_1.vb)]"
  syntax:
    content: public static int DatePart (string Interval, object DateValue, Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday, Microsoft.VisualBasic.FirstWeekOfYear WeekOfYear = Microsoft.VisualBasic.FirstWeekOfYear.Jan1);
    parameters:
    - id: Interval
      type: System.String
      description: "필수 사항입니다. <xref uid=&quot;langword_csharp_DateInterval&quot; name=&quot;DateInterval&quot; href=&quot;&quot;></xref>열거형 값 또는 <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> 반환할 날짜/시간 값의 부분을 나타내는 식입니다."
    - id: DateValue
      type: System.Object
      description: "필수 사항입니다. <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;></xref>평가 하려는 값입니다."
    - id: DayOfWeek
      type: Microsoft.VisualBasic.FirstDayOfWeek
      description: "선택 사항입니다. 선택 된 값은 <xref uid=&quot;langword_csharp_FirstDayOfWeek&quot; name=&quot;FirstDayOfWeek&quot; href=&quot;&quot;> </xref> 첫 번째 요일을 지정 하는 열거형입니다. 지정 하지 않으면 <xref uid=&quot;langword_csharp_FirstDayOfWeek.Sunday&quot; name=&quot;FirstDayOfWeek.Sunday&quot; href=&quot;&quot;> </xref> 사용 됩니다."
    - id: WeekOfYear
      type: Microsoft.VisualBasic.FirstWeekOfYear
      description: "선택 사항입니다. 선택 된 값은 <xref uid=&quot;langword_csharp_FirstWeekOfYear&quot; name=&quot;FirstWeekOfYear&quot; href=&quot;&quot;> </xref> 해당 연도의 첫째 주를 지정 하는 열거형입니다. 지정 하지 않으면 <xref uid=&quot;langword_csharp_FirstWeekOfYear.Jan1&quot; name=&quot;FirstWeekOfYear.Jan1&quot; href=&quot;&quot;> </xref> 사용 됩니다."
    return:
      type: System.Int32
      description: "반환 된 <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> 값의 지정된 된 구성 요소를 포함 하는 지정 된 <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> 값입니다."
  overload: Microsoft.VisualBasic.DateAndTime.DatePart*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Interval</code>잘못 되었습니다."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "<code>DateValue</code>으로 강제 변환 될 <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref>합니다."
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.DateSerial(System.Int32,System.Int32,System.Int32)
  id: DateSerial(System.Int32,System.Int32,System.Int32)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: DateSerial(Int32,Int32,Int32)
  nameWithType: DateAndTime.DateSerial(Int32,Int32,Int32)
  fullName: Microsoft.VisualBasic.DateAndTime.DateSerial(Int32,Int32,Int32)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "반환 된 <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> 자정으로 설정 된 시간 정보와 함께 지정 된 연도, 월 및 일을 나타내는 값입니다 (00:&00;:00)."
  remarks: "Windows 98 또는 Windows 2000에 대 한 두 자리 연도 `Year` 인수를 사용자가 정의한 컴퓨터 설정에 따라 해석 됩니다. 기본 설정은 0부터 29 까지의 값 2000 년으로 해석 되 고 30부터 99 까지의 값 1930 – 1999 년으로 해석 됩니다. 다른 모든 `Year` 인수, 사용 하 여 4 자리 연도, 예를 들어 1924 합니다.       이전 버전의 Windows에는 두 자리 연도 이전에 설명 된 기본값에 따라 해석 됩니다. 함수는 올바른 값을 반환 하도록 하려면,&4; 자리를 사용 하 여 `Year`합니다.       다음 예제에서는 음수,&0; 및 양의 인수 값입니다. 여기에서 `DateSerial` 함수에서 반환 된 `Date` 현재 연도의; 10 년 전 년에서 3 월 1 일 이전 날짜를 나타내는 10 년이 넘은 년 2 월의 마지막 날 즉, 합니다.      ```vb#   Dim EndFeb As Date = DateSerial(-10, 3, 0)   ```어느 경우 `Month` 또는 `Day` 정상 범위를 초과 하면, 다음으로 큰 단위가에 적용 됩니다. 예를 들어 32 일을 지정 하는 경우 것으로 계산 됩니다 한 달의 값에 따라 4 일에서 `Month`합니다. 경우 `Year` 9999 년 보다 큰 인수가-2147483648 ~ 2147483647, 범위 밖에 있으면 또는 <xref:System.ArgumentException>오류가 발생 합니다.</xref:System.ArgumentException> 3 개 인수에 의해 지정 된 날짜 이전 이면 년 12 월 31 일 23시 59분: 59 보다 이후 이거나 1, 1 월 1 일 00: 00시 9999는 <xref:System.ArgumentOutOfRangeException>오류가 발생 합니다.</xref:System.ArgumentOutOfRangeException>       `Date` 시간 구성 요소를 포함 하는 데이터 형식입니다. `DateSerial`0으로 이러한 모든 설정 하므로 반환 되는 값은 계산 된 날짜의 시작을 나타냅니다.       이후 모든 `Date` 값으로 사용할 수는 <xref:System.DateTime>구조를 해당 메서드에 추가 하는 옵션 제공 어셈블하는 방법에 `Date` 값.</xref:System.DateTime> 오버 로드 된 중 하나를 사용할 수는 예를 들어 <xref:System.DateTime.%23ctor%2A>생성자를 채우는 한 `Date` 원하는 조합의 구성 요소를 사용 하 여 변수.</xref:System.DateTime.%23ctor%2A> 다음 예제에서는 `NewDateTime` 6, 1978 년 5 월 초 아침에 8시 30분 전의 0.1에:```vb#   Dim NewDateTime As Date = New Date(1978, 5, 6, 8, 29, 59, 900)   ```"
  example:
  - "This example uses the `DateSerial` function to return the date for the specified year, month, and day.  \n  \n [!code-vb[VbVbalrFunctions#28](~/add/codesnippet/visualbasic/2c6c2f83-8b90-492d-bf33-_1.vb)]"
  syntax:
    content: public static DateTime DateSerial (int Year, int Month, int Day);
    parameters:
    - id: Year
      type: System.Int32
      description: "필수 사항입니다. <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>1에서 9999 까지의 식입니다. 그러나 값이이 범위 아래로 사용할 수 있습니다. 경우 `Year` 가 0부터 99, 아래 &quot;주의&quot; 섹션에 설명 된 대로를, 되 고로 해석 됩니다. 경우 `Year` 1 보다 작으면 현재 연도에서 뺍니다."
    - id: Month
      type: System.Int32
      description: "필수 사항입니다. <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>1부터 12 까지의 식입니다. 그러나이 범위를 벗어나는 값도 사용할 수 있습니다. 값 `Month` 1 만큼 오프셋 되 고 계산된 연도의 1 월에 적용 됩니다. 즉, (`Month` -1) 년 1 월에 추가 됩니다. 연도는 필요한 경우 다시 계산 됩니다. 다음과 같은 결과가이 효과 보여 줍니다: 경우 `Month` 이 1 이면 계산 연도의 1 월.       경우 `Month` 가 0 이면 결과 12 월 이전 연도입니다.       경우 `Month` 은-1 년&11; 월.       경우 `Month` 13 이면 다음 연도의 1 월."
    - id: Day
      type: System.Int32
      description: "필수 사항입니다. <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>1부터 31 까지의 식입니다. 그러나이 범위를 벗어나는 값도 사용할 수 있습니다. 값 `Day` 1 만큼 오프셋 되 고 계산된 된 월의 첫째 날에 적용 됩니다. 즉, (`Day` -1)에 추가 되는 월의 첫 번째입니다. 월과 연도 필요한 경우 다시 계산 됩니다. 다음과 같은 결과가이 효과 보여 줍니다: 경우 `Day` 이 1 이면 결과 계산된 된 월의 첫 번째 날입니다.       경우 `Day` 가 0 이면 결과 이전 달의 마지막 날입니다.       경우 `Day` -1 이면 결과 이전 달의 끝에서 두 번째 날입니다.       경우 `Day` 은 현재 월, 결과의 끝에 다음 달의 적절 한 날이 지났습니다. 예를 들어 경우 `Month` 은 4 및 `Day` 는 31, 결과 1 년 5 월."
    return:
      type: System.DateTime
      description: "반환 된 <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> 자정으로 설정 된 시간 정보와 함께 지정 된 연도, 월 및 일을 나타내는 값입니다 (00:&00;:00)."
  overload: Microsoft.VisualBasic.DateAndTime.DateSerial*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.DateString
  id: DateString
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: DateString
  nameWithType: DateAndTime.DateString
  fullName: Microsoft.VisualBasic.DateAndTime.DateString
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "반환 하거나 설정는 <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> 시스템의 현재 날짜를 나타내는 값입니다."
  remarks: "`DateString`약식된 월 이름을 사용 하는 MM 될 형식의 시스템 날짜를 반환 합니다. 허용 되는 날짜 형식 M-d-yyyy는 y-M-d, M/d/yyyy 및 M/d/y 합니다. 더블 바이트 문자 집합 (DBCS)를 사용 하는 것을 제외한 모든 시스템 로캘에 대해서도 마찬가지입니다. 시스템 로캘을 더블 바이트 문자 집합을 사용 하는 경우 `DateString` yyyy-월-일 형식의 시스템 날짜를에서 반환 합니다. 시스템 로캘을 사용 하 여 설정 된 **시계, 언어 및 국가별** 항목에 **제어판**합니다.       **참고** 는 `DateString` yyyy-월-일 형식에 대 한 시스템 날짜를 반환 하는 속성의 `zh` (중국어 간체) `ko` (한국어) 및 `ja` (일본어) 시스템 로캘에 Visual Basic Silverlight 내에서 실행 하는 경우.       가져오거나 현재 시스템 시간을 설정 하는 `String`를 사용 하 여는 <xref:Microsoft.VisualBasic.DateAndTime.TimeString%2A>속성.</xref:Microsoft.VisualBasic.DateAndTime.TimeString%2A>       현재 시스템 날짜 또는 시간을 얻으려면 해당 로캘 형식이 나 사용자 지정 형식을 제공는 <xref:Microsoft.VisualBasic.DateAndTime.Now%2A>속성을는 <xref:Microsoft.VisualBasic.Strings.Format%2A>미리 정의 된 또는 사용자 정의 날짜/시간 형식 중 하나를 지정 하는 함수.</xref:Microsoft.VisualBasic.Strings.Format%2A> </xref:Microsoft.VisualBasic.DateAndTime.Now%2A> 다음 예제에서는이 보여 줍니다.      ```   MsgBox(&quot;The formatted date is &quot; & Format(Now, &quot;dddd, d MMM yyyy&quot;))   ```현재 시스템 날짜를 액세스 하는 `Date`를 사용 하 여는 <xref:Microsoft.VisualBasic.DateAndTime.Today%2A>속성.</xref:Microsoft.VisualBasic.DateAndTime.Today%2A>      > [!IMPORTANT] > 비관리 코드 권한이 필요한 시스템 날짜 또는 시간을 설정 합니다. 자세한 내용은 참조 <xref:System.Security.Permissions.SecurityPermission>및 [코드 액세스 권한](http://msdn.microsoft.com/en-us/e5ae402f-6dda-4732-bbe8-77296630f675).</xref:System.Security.Permissions.SecurityPermission>"
  example:
  - "The following example uses the `DateString` property to display the current system date.  \n  \n [!code-vb[VbVbalrDateProperties#1](~/add/codesnippet/visualbasic/VbVbalrDateProperties/Module1.vb#1)]"
  syntax:
    content: public static string DateString { get; set; }
    return:
      type: System.String
      description: "반환 하거나 설정는 <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> 시스템의 현재 날짜를 나타내는 값입니다."
  overload: Microsoft.VisualBasic.DateAndTime.DateString*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "값을 설정 하는 데 사용 되는 잘못 된 형식 <xref uid=&quot;langword_csharp_DateString&quot; name=&quot;DateString&quot; href=&quot;&quot;> </xref>합니다."
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.DateValue(System.String)
  id: DateValue(System.String)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: DateValue(String)
  nameWithType: DateAndTime.DateValue(String)
  fullName: Microsoft.VisualBasic.DateAndTime.DateValue(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "반환 된 <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> 시간 정보가 자정으로 설정 된 상태에서 문자열로 표현 된 날짜 정보를 포함 하는 값 (00:&00;:00)."
  remarks: "경우 `StringDate` 유효한 날짜 구분 기호로 구분 된 1부터 12 까지의 숫자만 포함 `DateValue` 월, 일 및 연도 시스템에 대해 지정 된 간단한 날짜 형식으로의 순서를 인식 합니다. `DateValue`현재 달력 설정을 사용 하 여는 <xref:System.Globalization.CultureInfo.CurrentCulture%2A>의 속성은 <xref:System.Globalization.CultureInfo>클래스에 <xref:System.Globalization>네임 스페이스.</xref:System.Globalization> </xref:System.Globalization.CultureInfo> </xref:System.Globalization.CultureInfo.CurrentCulture%2A> 기본 <xref:System.Globalization.CultureInfo.CurrentCulture%2A>값에 따라 결정 됩니다 **제어판** 설정.</xref:System.Globalization.CultureInfo.CurrentCulture%2A> 간단한 날짜 형식 설정 하 여 재정의할 수 있습니다는 <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A>의 속성은 <xref:System.Globalization.DateTimeFormatInfo>클래스에 <xref:System.Globalization>네임 스페이스.</xref:System.Globalization> </xref:System.Globalization.DateTimeFormatInfo> </xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A>       `DateValue`약식 길고 숫자 형태로 월 이름을 인식합니다. 예를 들어 외에 12/30/1991 및 12/30/91 `DateValue` 1991 년 12 월 30 일 및 1991 년 12 월 30 일도 인식 합니다.       하는 경우의 연도 부분 `StringDate` 를 생략 하면 `DateValue` 컴퓨터의 시스템 날짜는 현재 연도가 사용 합니다.       경우는 `StringDate` 시간 정보를 포함 하는 인수 `DateValue` 반환된 된 값에 포함 되지 않습니다. 그러나 경우 `StringDate` &quot;89:&quot;98 같이 잘못 된 시간 정보를 포함 한 <xref:System.InvalidCastException>오류가 발생 합니다.</xref:System.InvalidCastException>"
  example:
  - "This example uses the `DateValue` function to convert a string to a date. You can also use date literals to directly assign a date to an `Object` or `Date` variable, for example, `oldDate = #2/12/69#`.  \n  \n [!code-vb[VbVbalrFunctions#29](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._84_1.vb)]"
  syntax:
    content: public static DateTime DateValue (string StringDate);
    parameters:
    - id: StringDate
      type: System.String
      description: "필수 사항입니다. <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>9999 년 12 월 31 일 23시 59분: 59 까지의 1 년 1 월 1 일 00: 00시에서 날짜/시간 값을 나타내는 식입니다."
    return:
      type: System.DateTime
      description: "<xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;></xref>시간 정보가 자정으로 설정 된 상태에서 문자열로 표현 된 날짜 정보를 포함 하는 값 (00:&00;:00)."
  overload: Microsoft.VisualBasic.DateAndTime.DateValue*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "<code>StringDate</code>잘못 된 시간 정보가 포함 됩니다."
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)
  id: Day(System.DateTime)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: Day(DateTime)
  nameWithType: DateAndTime.Day(DateTime)
  fullName: Microsoft.VisualBasic.DateAndTime.Day(DateTime)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "반환 된 <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> 월의 일을 나타내는 1부터 31 까지의 값입니다."
  remarks: "사용 하는 경우는 `Day` 함수를 사용 하 여 정규화 해야 할 수 있습니다는 `Microsoft.VisualBasic` 네임 스페이스, 때문에 <xref:System.Windows.Forms>네임 스페이스를 정의 <xref:System.Windows.Forms.Day>열거.</xref:System.Windows.Forms.Day> </xref:System.Windows.Forms> 다음 예제와 조건에 맞는 방법을 `Day` 이 모호성을 해결: ```vb#   Dim thisDay As Integer = Microsoft.VisualBasic.DateAndTime.Day(Now)   ``` 호출 하 여 해당 월의 일을 가져올 수도 있습니다 `DatePart` 지정 하 고 `DateInterval.Day` 에 대 한는 *간격* 인수입니다."
  example:
  - "The following example uses the `Day` function to obtain the day of the month from a specified date. In the development environment, the date literal is displayed in standard short format (such as \"02/12/1969\") using the locale settings of your code.  \n  \n [!code-vb[VbVbalrFunctions#30](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._126_1.vb)]  \n  \n `Day` is qualified to distinguish it from the <xref:System.Windows.Forms.Day?displayProperty=fullName> enumeration."
  syntax:
    content: public static int Day (DateTime DateValue);
    parameters:
    - id: DateValue
      type: System.DateTime
      description: "필수 사항입니다. <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;></xref>일을 추출 하려는 값입니다."
    return:
      type: System.Int32
      description: "반환 된 <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> 월의 일을 나타내는 1부터 31 까지의 값입니다."
  overload: Microsoft.VisualBasic.DateAndTime.Day*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.Hour(System.DateTime)
  id: Hour(System.DateTime)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: Hour(DateTime)
  nameWithType: DateAndTime.Hour(DateTime)
  fullName: Microsoft.VisualBasic.DateAndTime.Hour(DateTime)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "반환 된 <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> 하루의 시간을 나타내는 0부터 23 까지의 값입니다."
  remarks: "호출 하 여 하루 중 시간을 가져올 수도 있습니다 `DatePart` 지정 하 고 `DateInterval.Hour` 에 대 한는 `Interval` 인수입니다."
  example:
  - "This example uses the `Hour` function to obtain the hour from a specified time. In the development environment, the time literal is displayed in short time format using the locale settings of your code.  \n  \n [!code-vb[VbVbalrFunctions#32](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._192_1.vb)]"
  syntax:
    content: public static int Hour (DateTime TimeValue);
    parameters:
    - id: TimeValue
      type: System.DateTime
      description: "필수 사항입니다. <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;></xref>시간을 추출 하려는 값입니다."
    return:
      type: System.Int32
      description: "반환 된 <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> 하루의 시간을 나타내는 0부터 23 까지의 값입니다."
  overload: Microsoft.VisualBasic.DateAndTime.Hour*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.Minute(System.DateTime)
  id: Minute(System.DateTime)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: Minute(DateTime)
  nameWithType: DateAndTime.Minute(DateTime)
  fullName: Microsoft.VisualBasic.DateAndTime.Minute(DateTime)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "반환 된 <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> 0부터 59까지 분을 나타내는 값입니다."
  remarks: "분을 호출 하 여 가져올 수도 있습니다 `DatePart` 지정 하 고 `DateInterval.Minute` 에 대 한는 `Interval` 인수입니다."
  example:
  - "This example uses the `Minute` function to obtain the minute of the hour from a specified time. In the development environment, the time literal is displayed in short time format using the locale settings of your code.  \n  \n [!code-vb[VbVbalrFunctions#42](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._195_1.vb)]"
  syntax:
    content: public static int Minute (DateTime TimeValue);
    parameters:
    - id: TimeValue
      type: System.DateTime
      description: "필수 사항입니다. <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;></xref>분을 추출 하려는 값입니다."
    return:
      type: System.Int32
      description: "반환 된 <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> 0부터 59까지 분을 나타내는 값입니다."
  overload: Microsoft.VisualBasic.DateAndTime.Minute*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)
  id: Month(System.DateTime)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: Month(DateTime)
  nameWithType: DateAndTime.Month(DateTime)
  fullName: Microsoft.VisualBasic.DateAndTime.Month(DateTime)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "반환 된 <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> 월을 나타내는 1부터 12 까지의 값입니다."
  remarks: "월을 호출 하 여 가져올 수도 있습니다 `DatePart` 지정 하 고 `DateInterval.Month` 에 대 한는 `Interval` 인수입니다."
  example:
  - "This example uses the `Month` function to obtain the month from a specified date. In the development environment, the date literal is displayed in short date format using the locale settings of your code.  \n  \n [!code-vb[VbVbalrFunctions#43](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._213_1.vb)]"
  syntax:
    content: public static int Month (DateTime DateValue);
    parameters:
    - id: DateValue
      type: System.DateTime
      description: "필수 사항입니다. <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;></xref>월을 추출 하려는 값입니다."
    return:
      type: System.Int32
      description: "반환 된 <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> 월을 나타내는 1부터 12 까지의 값입니다."
  overload: Microsoft.VisualBasic.DateAndTime.Month*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.MonthName(System.Int32,System.Boolean)
  id: MonthName(System.Int32,System.Boolean)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: MonthName(Int32,Boolean)
  nameWithType: DateAndTime.MonthName(Int32,Boolean)
  fullName: Microsoft.VisualBasic.DateAndTime.MonthName(Int32,Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "반환 된 <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> 지정 된 월 이름을 포함 하는 값입니다."
  remarks: "반환한 문자열 `MonthName` 의존 입력된 인수에서 뿐만 아니라 뿐만 아니라는 **국가별 옵션** Windows에 지정 된 설정을 **제어판**합니다.      > [!NOTE]  >   `MonthName` 에서 현재 달력 설정을 사용 하 여는 <xref:System.Globalization.CultureInfo.CurrentCulture%2A>의 속성은 <xref:System.Globalization.CultureInfo>클래스에 <xref:System.Globalization>네임 스페이스.</xref:System.Globalization> </xref:System.Globalization.CultureInfo> </xref:System.Globalization.CultureInfo.CurrentCulture%2A> 기본 <xref:System.Globalization.CultureInfo.CurrentCulture%2A>값에 따라 결정 됩니다 **제어판** 설정.</xref:System.Globalization.CultureInfo.CurrentCulture%2A>"
  example:
  - "This example uses the `MonthName` function to determine the name of the month, by the integer given. The Boolean value will determine whether the full name (`False`) or the abbreviated name (`True`) will be displayed.  \n  \n [!code-vb[VbVbalrFunctions#44](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._194_1.vb)]"
  syntax:
    content: public static string MonthName (int Month, bool Abbreviate = false);
    parameters:
    - id: Month
      type: System.Int32
      description: "필수 사항입니다. <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>. 1부터 13;에서 해당 월의 지정 된 숫자 값 1 년 1 월 나타내고 12는 12 월을 나타냅니다. 값이 13 13 개월 달력으로 사용할 수 있습니다. 시스템 12 개월 달력을 사용 하는 경우 및 `Month` 13,이 <xref uid=&quot;langword_csharp_MonthName&quot; name=&quot;MonthName&quot; href=&quot;&quot;> </xref> 빈 문자열을 반환 합니다."
    - id: Abbreviate
      type: System.Boolean
      description: "선택 사항입니다. <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;></xref>약식 월 이름 인지를 나타내는 값입니다. 생략할 경우 기본값은 <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>을 월 이름 약식 이름이 아님을 나타냅니다."
    return:
      type: System.String
      description: "반환 된 <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> 지정 된 월 이름을 포함 하는 값입니다."
  overload: Microsoft.VisualBasic.DateAndTime.MonthName*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Month</code>가 1 보다 작은 13 보다 큽니다."
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.Now
  id: Now
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: Now
  nameWithType: DateAndTime.Now
  fullName: Microsoft.VisualBasic.DateAndTime.Now
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "반환 된 <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> 현재 날짜와 시스템에 따른 시간을 포함 하는 값입니다."
  remarks: "시스템 날짜를 설정 하려면 사용 하 여는 <xref:Microsoft.VisualBasic.DateAndTime.Today%2A>속성.</xref:Microsoft.VisualBasic.DateAndTime.Today%2A> 시스템 시간을 설정 하려면는 <xref:Microsoft.VisualBasic.DateAndTime.TimeOfDay%2A>속성.</xref:Microsoft.VisualBasic.DateAndTime.TimeOfDay%2A>"
  example:
  - "The following example uses the `Now` property to return the current system date and time.  \n  \n [!code-vb[VbVbalrDateProperties#4](~/add/codesnippet/visualbasic/VbVbalrDateProperties/Module1.vb#4)]"
  syntax:
    content: public static DateTime Now { get; }
    return:
      type: System.DateTime
      description: "반환 된 <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> 현재 날짜와 시스템에 따른 시간을 포함 하는 값입니다."
  overload: Microsoft.VisualBasic.DateAndTime.Now*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.Second(System.DateTime)
  id: Second(System.DateTime)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: Second(DateTime)
  nameWithType: DateAndTime.Second(DateTime)
  fullName: Microsoft.VisualBasic.DateAndTime.Second(DateTime)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "반환 된 <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> 0부터 59 까지의 분의 초를 나타내는 값입니다."
  remarks: "분의 두 번째 호출 하 여 가져올 수도 있습니다 `DatePart` 지정 하 고 `DateInterval.Second` 에 대 한는 `Interval` 인수입니다."
  example:
  - "The following example uses the `Second` function to obtain the second of the minute from a specified time. In the development environment, the time literal is displayed in short time format using the locale settings of your code.  \n  \n [!code-vb[VbVbalrFunctions#46](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._54_1.vb)]"
  syntax:
    content: public static int Second (DateTime TimeValue);
    parameters:
    - id: TimeValue
      type: System.DateTime
      description: "필수 사항입니다. <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;></xref>두 번째 추출 하려는 값입니다."
    return:
      type: System.Int32
      description: "반환 된 <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> 0부터 59 까지의 분의 초를 나타내는 값입니다."
  overload: Microsoft.VisualBasic.DateAndTime.Second*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.TimeOfDay
  id: TimeOfDay
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: TimeOfDay
  nameWithType: DateAndTime.TimeOfDay
  fullName: Microsoft.VisualBasic.DateAndTime.TimeOfDay
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "반환 하거나 설정는 <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> 시스템의 현재 시간을 포함 하는 값입니다."
  remarks: "`Date` 데이터 형식은 날짜 구성 요소를 포함 합니다. 시스템 시간을 반환 하는 경우 `TimeOfDay` 이러한 모두 1로 설정 하는 하므로 반환 된 값은 1 년의 첫 번째 날을 나타냅니다. 시스템 시간을 설정할 때 `TimeOfDay` 날짜 구성 요소를 무시 합니다.       현재 시스템 시간을 액세스 하는 `String`를 사용 하 여는 <xref:Microsoft.VisualBasic.DateAndTime.TimeString%2A>속성.</xref:Microsoft.VisualBasic.DateAndTime.TimeString%2A>       를 가져오거나 현재 시스템 날짜를 설정 하려면 사용 하 여는 <xref:Microsoft.VisualBasic.DateAndTime.Today%2A>속성.</xref:Microsoft.VisualBasic.DateAndTime.Today%2A>      > [!IMPORTANT] > 비관리 코드 권한이 필요한 시스템 날짜 또는 시간을 설정 합니다. 자세한 내용은 참조 <xref:System.Security.Permissions.SecurityPermission>및 [코드 액세스 권한](http://msdn.microsoft.com/en-us/e5ae402f-6dda-4732-bbe8-77296630f675).</xref:System.Security.Permissions.SecurityPermission>"
  example:
  - "This example uses the `TimeOfDay` property to return the current system time.  \n  \n [!code-vb[VbVbalrDateProperties#3](~/add/codesnippet/visualbasic/VbVbalrDateProperties/Module1.vb#3)]"
  syntax:
    content: public static DateTime TimeOfDay { get; set; }
    return:
      type: System.DateTime
      description: "반환 하거나 설정는 <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> 시스템의 현재 시간을 포함 하는 값입니다."
  overload: Microsoft.VisualBasic.DateAndTime.TimeOfDay*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.Timer
  id: Timer
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: Timer
  nameWithType: DateAndTime.Timer
  fullName: Microsoft.VisualBasic.DateAndTime.Timer
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "반환 된 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> 자정 이후 경과 된 초 수를 나타내는 값입니다."
  remarks: "`Timer` 속성은 가장 최근의 자정 이후 초와 밀리초를 반환 합니다. 반환 값의 정수 부분에는 초 있으며 밀리초 소수 부분에 있습니다."
  example:
  - "This example uses the `Timer` property to pause the application. It can perform other processing during the pause.  \n  \n [!code-vb[VbVbalrTimerProperty#1](~/add/codesnippet/visualbasic/VbVbalrTimerProperty/Form1.vb#1)]  \n  \n Note that you must qualify the `Timer` property with the <xref:Microsoft.VisualBasic?displayProperty=fullName> namespace, because `Timer` is also a defined class in the <xref:System.Threading?displayProperty=fullName>, <xref:System.Timers?displayProperty=fullName>, and <xref:System.Windows.Forms?displayProperty=fullName> namespaces."
  syntax:
    content: public static double Timer { get; }
    return:
      type: System.Double
      description: "반환 된 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> 자정 이후 경과 된 초 수를 나타내는 값입니다."
  overload: Microsoft.VisualBasic.DateAndTime.Timer*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.TimeSerial(System.Int32,System.Int32,System.Int32)
  id: TimeSerial(System.Int32,System.Int32,System.Int32)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: TimeSerial(Int32,Int32,Int32)
  nameWithType: DateAndTime.TimeSerial(Int32,Int32,Int32)
  fullName: Microsoft.VisualBasic.DateAndTime.TimeSerial(Int32,Int32,Int32)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "반환 된 <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> 날짜 정보가 1 년 1 월 1 일로 설정 지정 된 시간, 분 및 초를 나타내는 값입니다."
  remarks: "다음 예제에서는 음수,&0; 및 양의 인수 값입니다. `TimeSerial` 함수 3 정오에 또는 오전 8시 45분: 00 시간 전에 15 분을 나타내는 시간을 반환 합니다.      ```vb#   Dim alarmTime As Date = TimeSerial(12 - 3, -15, 0)   ```어느 경우 `Minute` 또는 `Second` 정상 범위를 초과 하면, 다음으로 큰 단위가에 적용 됩니다. 예를 들어 75 분을 지정 하는 경우 1 시간 15 분으로 평가 됩니다.       `TimeSerial`하루에서 시간 (초) 수 인 86,400, 모듈로 총 초를 줄입니다. 따라서 반환 값은 항상 00시: 00에서 23시 59분: 59 사이의 값입니다.       `Date` 데이터 형식은 날짜 구성 요소를 포함 합니다. `TimeSerial`1로의 모든 설정 하므로 반환 되는 값 1 년의 첫 번째 날을 나타냅니다. 그러나, 인수의 값 24 시간을 초과 하는 계산 된 시간, 경우에 일 필요에 따라 증가 합니다. 다음 예에서 값 `Hour` 및 `Minute` 결과가 24 시간 이상 결합 된 시간입니다.      ```vb#   MsgBox(TimeSerial(23, 75, 0))    &quot; The preceding statement displays &quot;1/2/0001 12:15:00 AM&quot;.   ```인수의 값 결과가 음수 계산 된 시간, 날짜 정보가 1/1/0001로 설정 되어 고 시간 정보는 00시: 00에서 23시 59분: 59 사이 여야 합니다. 그러나, 계산 된 시간 보다 작은 음의 24 시간,이 <xref:System.ArgumentOutOfRangeException>오류가 발생 합니다.</xref:System.ArgumentOutOfRangeException>       이후 모든 `Date` 값으로 사용할 수는 <xref:System.DateTime?displayProperty=fullName>구조를 해당 메서드에 추가 하는 옵션 제공 어셈블하는 방법에 `Date` 값.</xref:System.DateTime?displayProperty=fullName> 오버 로드 된 중 하나를 사용할 수는 예를 들어 <xref:System.DateTime.%23ctor%2A>생성자를 채우는 한 `Date` 원하는 조합의 구성 요소를 사용 하 여 변수.</xref:System.DateTime.%23ctor%2A> 다음 예제에서는 `newDateTime` 6, 1978 년 5 월 초 아침에 8시 30분 전의 0.1에:```vb#   Dim newDateTime As Date = New Date(1978, 5, 6, 8, 29, 59, 900)   ```"
  example:
  - "The following example uses the `TimeSerial` function to return a time for the specified hour, minute, and second.  \n  \n [!code-vb[VbVbalrFunctions#50](~/add/codesnippet/visualbasic/4788d161-48a1-4476-aa26-_1.vb)]"
  syntax:
    content: public static DateTime TimeSerial (int Hour, int Minute, int Second);
    parameters:
    - id: Hour
      type: System.Int32
      description: "필수 사항입니다. <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>0부터 23 까지의 식입니다. 그러나이 범위를 벗어나는 값도 사용할 수 있습니다."
    - id: Minute
      type: System.Int32
      description: "필수 사항입니다. <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>0부터 59 까지의 식입니다. 그러나이 범위를 벗어나는 값도 사용할 수 있습니다. 값 `Minute` 에 더해지므로 분을 지정 하는 음수 값을 계산 된 시간에 추가 됩니다."
    - id: Second
      type: System.Int32
      description: "필수 사항입니다. <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>0부터 59 까지의 식입니다. 그러나이 범위를 벗어나는 값도 사용할 수 있습니다. 값 `Second` 에 더해지므로 초를 지정 하는 음수 값을 계산 된 분에 추가 됩니다."
    return:
      type: System.DateTime
      description: "반환 된 <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> 날짜 정보가 1 년 1 월 1 일로 설정 지정 된 시간, 분 및 초를 나타내는 값입니다."
  overload: Microsoft.VisualBasic.DateAndTime.TimeSerial*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "인수는-2147483648 ~ 2147483647 범위를 벗어납니다."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "계산 된 시간은 음수 24 시간 보다 작아야 합니다."
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.TimeString
  id: TimeString
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: TimeString
  nameWithType: DateAndTime.TimeString
  fullName: Microsoft.VisualBasic.DateAndTime.TimeString
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "반환 하거나 설정는 <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> 시스템의 현재 시간을 나타내는 값입니다."
  remarks: "`TimeString`항상 반환 하는 24 시간 형식 &quot;h:mm: ss&quot;로 시스템 시간 합니다. 이 형식은 고정 문화권을 변경 해도 변경 되지 않습니다 즉는 **국가별 옵션** 에 **제어판**합니다.       가져오거나 현재 시스템 날짜를 설정 하는 `String`를 사용 하 여는 <xref:Microsoft.VisualBasic.DateAndTime.DateString%2A>속성.</xref:Microsoft.VisualBasic.DateAndTime.DateString%2A>       현재 시스템 날짜 또는 시간을 얻으려면 해당 로캘 형식이 나 사용자 지정 형식을 제공는 <xref:Microsoft.VisualBasic.DateAndTime.Now%2A>속성을는 <xref:Microsoft.VisualBasic.Strings.Format%2A>미리 정의 된 또는 사용자 정의 날짜/시간 형식 중 하나를 지정 하는 함수.</xref:Microsoft.VisualBasic.Strings.Format%2A> </xref:Microsoft.VisualBasic.DateAndTime.Now%2A> 다음 예제에서는이 보여 줍니다.      ```   MsgBox(&quot;The formatted time is &quot; & Format(Now, &quot;hh.mm.ss.fff tt&quot;))   ```현재 시스템 시간을 액세스 하는 `Date`를 사용 하 여는 <xref:Microsoft.VisualBasic.DateAndTime.TimeOfDay%2A>속성.</xref:Microsoft.VisualBasic.DateAndTime.TimeOfDay%2A>      > [!IMPORTANT] > 비관리 코드 권한이 필요한 시스템 날짜 또는 시간을 설정 합니다. 자세한 내용은 참조 <xref:System.Security.Permissions.SecurityPermission>및 [코드 액세스 권한](http://msdn.microsoft.com/en-us/e5ae402f-6dda-4732-bbe8-77296630f675).</xref:System.Security.Permissions.SecurityPermission>"
  example:
  - "This example uses the `TimeString` property to display the current system time.  \n  \n [!code-vb[VbVbalrDateProperties#2](~/add/codesnippet/visualbasic/VbVbalrDateProperties/Module1.vb#2)]"
  syntax:
    content: public static string TimeString { get; set; }
    return:
      type: System.String
      description: "반환 하거나 설정는 <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> 시스템의 현재 시간을 나타내는 값입니다."
  overload: Microsoft.VisualBasic.DateAndTime.TimeString*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "값을 설정 하는 데 사용 되는 잘못 된 형식 <xref uid=&quot;langword_csharp_TimeString&quot; name=&quot;TimeString&quot; href=&quot;&quot;> </xref>합니다."
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.TimeValue(System.String)
  id: TimeValue(System.String)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: TimeValue(String)
  nameWithType: DateAndTime.TimeValue(String)
  fullName: Microsoft.VisualBasic.DateAndTime.TimeValue(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "반환 된 <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> 날짜 정보가 1 년 1 월 1 설정 된 상태에서 문자열로 표현 된 시간 정보를 포함 하는 값입니다."
  remarks: "유효한 시간을 입력할 수 12 시간제 또는 24 시간 시계를 사용 하 여 합니다. 예를 들어 `&quot;2:24 P.M.&quot;` 및 `&quot;14:24&quot;` 은 모두 유효 `StringTime` 인수입니다.       경우는 `StringTime` 날짜 정보를 포함 하는 인수 `TimeValue` 반환된 된 값에 포함 되지 않습니다. 그러나 경우 `StringTime` 예를 들어 &quot;년 1 월 32,&quot; 잘못 된 날짜 정보를 포함 한 <xref:System.InvalidCastException>오류가 발생 합니다.</xref:System.InvalidCastException>"
  example:
  - "The following example uses the `TimeValue` function to convert a string to a time. You can also use date literals to directly assign a time to a `Date` variable.  \n  \n [!code-vb[VbVbalrFunctions#51](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._232_1.vb)]"
  syntax:
    content: public static DateTime TimeValue (string StringTime);
    parameters:
    - id: StringTime
      type: System.String
      description: "필수 사항입니다. <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>9999 년 12 월 31 일 23시 59분: 59 까지의 1 년 1 월 1 일 00: 00시에서 날짜/시간 값을 나타내는 식입니다."
    return:
      type: System.DateTime
      description: "반환 된 <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> 날짜 정보가 1 년 1 월 1 설정 된 상태에서 문자열로 표현 된 시간 정보를 포함 하는 값입니다."
  overload: Microsoft.VisualBasic.DateAndTime.TimeValue*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "<code>StringTime</code>잘못 된 날짜 정보가 포함 됩니다."
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.Today
  id: Today
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: Today
  nameWithType: DateAndTime.Today
  fullName: Microsoft.VisualBasic.DateAndTime.Today
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "반환 하거나 설정는 <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> 시스템의 현재 날짜를 포함 하는 값입니다."
  remarks: "`Date` 시간 구성 요소를 포함 하는 데이터 형식입니다. 시스템 날짜를 반환 하는 경우 `Today` 하므로 반환 된 값은 자정 나타냅니다 모두 0으로 설정 (00: 00:00). 시스템 날짜를 설정할 때 `Today` 시간 구성 요소를 무시 합니다.       현재 시스템 날짜를 액세스 하는 `String`를 사용 하 여는 <xref:Microsoft.VisualBasic.DateAndTime.DateString%2A>속성.</xref:Microsoft.VisualBasic.DateAndTime.DateString%2A>       을 가져오거나 현재 시스템 시간을 설정 하려면 사용 하 여는 <xref:Microsoft.VisualBasic.DateAndTime.TimeOfDay%2A>속성.</xref:Microsoft.VisualBasic.DateAndTime.TimeOfDay%2A>      > [!IMPORTANT] > 비관리 코드 권한이 필요한 시스템 날짜 또는 시간을 설정 합니다. 자세한 내용은 참조 <xref:System.Security.Permissions.SecurityPermission>및 [코드 액세스 권한](http://msdn.microsoft.com/en-us/e5ae402f-6dda-4732-bbe8-77296630f675).</xref:System.Security.Permissions.SecurityPermission>"
  example:
  - "This example uses the `Today` property to return the current system date.  \n  \n [!code-vb[VbVbalrDateProperties#5](~/add/codesnippet/visualbasic/VbVbalrDateProperties/Module1.vb#5)]"
  syntax:
    content: public static DateTime Today { get; set; }
    return:
      type: System.DateTime
      description: "반환 하거나 설정는 <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> 시스템의 현재 날짜를 포함 하는 값입니다."
  overload: Microsoft.VisualBasic.DateAndTime.Today*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)
  id: Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: Weekday(DateTime,FirstDayOfWeek)
  nameWithType: DateAndTime.Weekday(DateTime,FirstDayOfWeek)
  fullName: Microsoft.VisualBasic.DateAndTime.Weekday(DateTime,FirstDayOfWeek)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "반환 된 <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> 는 요일을 나타내는 숫자를 포함 하는 값입니다."
  remarks: "반환한 값은 `Weekday` 의 값에 해당 하는 함수는 `FirstDayOfWeek` 열거형, 즉 함수에서 반환 하 고 값입니다.      > [!NOTE]  >   `Weekday` 에서 현재 달력 설정을 사용 하 여는 <xref:System.Globalization.CultureInfo.CurrentCulture%2A>의 속성은 <xref:System.Globalization.CultureInfo>클래스에 <xref:System.Globalization>네임 스페이스.</xref:System.Globalization> </xref:System.Globalization.CultureInfo> </xref:System.Globalization.CultureInfo.CurrentCulture%2A> 기본 <xref:System.Globalization.CultureInfo.CurrentCulture%2A>값에 따라 결정 됩니다 **제어판** 설정.</xref:System.Globalization.CultureInfo.CurrentCulture%2A>       `DayOfWeek` 인수의 다음 설정 중 하나를 사용할 수 있습니다.      | 열거형 값 | 값 | 설명 |   |-----------------------|-----------|-----------------|   | `FirstDayOfWeek.System`|0| 시스템 설정에 지정 된 주의 첫 번째 날 |   | `FirstDayOfWeek.Sunday`|1| (기본값) 일요일 |   | `FirstDayOfWeek.Monday`|2| 월요일 (ISO 8601 표준, 3.17) |   | `FirstDayOfWeek.Tuesday`|3| 화요일 |   | `FirstDayOfWeek.Wednesday`|4| 수요일 |   | `FirstDayOfWeek.Thursday`|5| 목요일 |   | `FirstDayOfWeek.Friday`|6| 금요일 |   | `FirstDayOfWeek.Saturday`|7| 토요일 |"
  example:
  - "The following example uses the `Weekday` function to obtain the day of the week from a specified date.  \n  \n [!code-vb[VbVbalrFunctions#57](~/add/codesnippet/visualbasic/369e7ed8-1790-4eb8-9e17-_1.vb)]"
  syntax:
    content: public static int Weekday (DateTime DateValue, Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday);
    parameters:
    - id: DateValue
      type: System.DateTime
      description: "필수 사항입니다. <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;></xref>해당 주의 일을 확인 하려는 값입니다."
    - id: DayOfWeek
      type: Microsoft.VisualBasic.FirstDayOfWeek
      description: "선택 사항입니다. 선택 된 값은 <xref uid=&quot;langword_csharp_FirstDayOfWeek&quot; name=&quot;FirstDayOfWeek&quot; href=&quot;&quot;> </xref> 첫 번째 요일을 지정 하는 열거형입니다. 지정 하지 않으면 <xref uid=&quot;langword_csharp_FirstDayOfWeek.Sunday&quot; name=&quot;FirstDayOfWeek.Sunday&quot; href=&quot;&quot;> </xref> 사용 됩니다."
    return:
      type: System.Int32
      description: "반환 된 <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> 는 요일을 나타내는 숫자를 포함 하는 값입니다."
  overload: Microsoft.VisualBasic.DateAndTime.Weekday*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>DayOfWeek</code>가 0 보다 작은 7 보다 큽니다."
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.WeekdayName(System.Int32,System.Boolean,Microsoft.VisualBasic.FirstDayOfWeek)
  id: WeekdayName(System.Int32,System.Boolean,Microsoft.VisualBasic.FirstDayOfWeek)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: WeekdayName(Int32,Boolean,FirstDayOfWeek)
  nameWithType: DateAndTime.WeekdayName(Int32,Boolean,FirstDayOfWeek)
  fullName: Microsoft.VisualBasic.DateAndTime.WeekdayName(Int32,Boolean,FirstDayOfWeek)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "반환 된 <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> 지정 된 요일 이름을 포함 하는 값입니다."
  remarks: "반환한 문자열 `WeekdayName` 의존 입력된 인수에서 뿐만 아니라 뿐만 아니라는 **국가별 옵션** Windows에 지정 된 설정을 **제어판**합니다.      > [!NOTE]  >   `WeekdayName` 에서 현재 달력 설정을 사용 하 여는 <xref:System.Globalization.CultureInfo.CurrentCulture%2A>의 속성은 <xref:System.Globalization.CultureInfo>클래스에 <xref:System.Globalization>네임 스페이스.</xref:System.Globalization> </xref:System.Globalization.CultureInfo> </xref:System.Globalization.CultureInfo.CurrentCulture%2A> 기본 <xref:System.Globalization.CultureInfo.CurrentCulture%2A>값에 따라 결정 됩니다 **제어판** 설정.</xref:System.Globalization.CultureInfo.CurrentCulture%2A>       `FirstDayOfWeekValue` 인수의 다음 설정 중 하나를 사용할 수 있습니다.      | 열거형 값 | 값 | 설명 |   |-----------------------|-----------|-----------------|   | `FirstDayOfWeek.System`|0| 시스템에 지정 된 주의 첫 번째 요일을 설정 (기본값) |   | `FirstDayOfWeek.Sunday`|1| 일요일 |   | `FirstDayOfWeek.Monday`|2| 월요일 (ISO 8601 표준, 3.17) |   | `FirstDayOfWeek.Tuesday`|3| 화요일 |   | `FirstDayOfWeek.Wednesday`|4| 수요일 |   | `FirstDayOfWeek.Thursday`|5| 목요일 |   | `FirstDayOfWeek.Friday`|6| 금요일 |   | `FirstDayOfWeek.Saturday`|7| 토요일 |"
  example:
  - "The following example uses the `Weekday` function to obtain the day of the week from a specified date, and then the `WeekDayName` function to obtain the name of the weekday from its number.  \n  \n [!code-vb[VbVbalrFunctions#58](~/add/codesnippet/visualbasic/3ef2fbeb-749b-412a-a8c7-_1.vb)]"
  syntax:
    content: public static string WeekdayName (int Weekday, bool Abbreviate = false, Microsoft.VisualBasic.FirstDayOfWeek FirstDayOfWeekValue = Microsoft.VisualBasic.FirstDayOfWeek.System);
    parameters:
    - id: Weekday
      type: System.Int32
      description: "필수 사항입니다. <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>. 주중 매일, 1-7;에 대 한 지정 된 숫자 값 1은 첫 번째 요일 나타내고 7 주의 마지막 날짜를 나타냅니다. 첫 번째 및 마지막 날의 id의 설정에 따라 달라 `FirstDayOfWeekValue`합니다."
    - id: Abbreviate
      type: System.Boolean
      description: "선택 사항입니다. <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;></xref>약식 요일 이름을 인지를 나타내는 값입니다. 생략할 경우 기본값은 <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>, 요일 이름을 약식 이름이 아님을 나타냅니다."
    - id: FirstDayOfWeekValue
      type: Microsoft.VisualBasic.FirstDayOfWeek
      description: "선택 사항입니다. 선택 된 값은 <xref uid=&quot;langword_csharp_FirstDayOfWeek&quot; name=&quot;FirstDayOfWeek&quot; href=&quot;&quot;> </xref> 첫 번째 요일을 지정 하는 열거형입니다. 지정 하지 않으면 <xref uid=&quot;langword_csharp_FirstDayOfWeek.System&quot; name=&quot;FirstDayOfWeek.System&quot; href=&quot;&quot;> </xref> 사용 됩니다."
    return:
      type: System.String
      description: "반환 된 <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> 지정 된 요일 이름을 포함 하는 값입니다."
  overload: Microsoft.VisualBasic.DateAndTime.WeekdayName*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Weekday</code>가 1 보다 작은 7, 보다 큰 또는 <code>FirstDayOfWeekValue</code> 가 0 보다 작거나 7 보다 큽니다."
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)
  id: Year(System.DateTime)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: Year(DateTime)
  nameWithType: DateAndTime.Year(DateTime)
  fullName: Microsoft.VisualBasic.DateAndTime.Year(DateTime)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "반환 된 <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> 1부터 9999 년을 나타내는 값입니다."
  remarks: "호출 하 여 연도 구할 수도 `DatePart` 지정 하 고 `DateInterval.Year` 에 대 한는 `Interval` 인수입니다."
  example:
  - "The following example uses the `Year` function to obtain the year from a specified date. In the development environment, the date literal is displayed in short date format using the locale settings of your code.  \n  \n [!code-vb[VbVbalrFunctions#59](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._223_1.vb)]"
  syntax:
    content: public static int Year (DateTime DateValue);
    parameters:
    - id: DateValue
      type: System.DateTime
      description: "필수 사항입니다. <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;></xref>연도 추출 하려는 값입니다."
    return:
      type: System.Int32
      description: "반환 된 <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> 1부터 9999 년을 나타내는 값입니다."
  overload: Microsoft.VisualBasic.DateAndTime.Year*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidCastException
  isExternal: true
  name: System.InvalidCastException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: Microsoft.VisualBasic.DateAndTime.DateAdd(Microsoft.VisualBasic.DateInterval,System.Double,System.DateTime)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: DateAdd(DateInterval,Double,DateTime)
  nameWithType: DateAndTime.DateAdd(DateInterval,Double,DateTime)
  fullName: Microsoft.VisualBasic.DateAndTime.DateAdd(DateInterval,Double,DateTime)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: Microsoft.VisualBasic.DateInterval
  parent: Microsoft.VisualBasic
  isExternal: false
  name: DateInterval
  nameWithType: DateInterval
  fullName: Microsoft.VisualBasic.DateInterval
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: Microsoft.VisualBasic.DateAndTime.DateAdd(System.String,System.Double,System.Object)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: DateAdd(String,Double,Object)
  nameWithType: DateAndTime.DateAdd(String,Double,Object)
  fullName: Microsoft.VisualBasic.DateAndTime.DateAdd(String,Double,Object)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.VisualBasic.DateAndTime.DateDiff(Microsoft.VisualBasic.DateInterval,System.DateTime,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: DateDiff(DateInterval,DateTime,DateTime,FirstDayOfWeek,FirstWeekOfYear)
  nameWithType: DateAndTime.DateDiff(DateInterval,DateTime,DateTime,FirstDayOfWeek,FirstWeekOfYear)
  fullName: Microsoft.VisualBasic.DateAndTime.DateDiff(DateInterval,DateTime,DateTime,FirstDayOfWeek,FirstWeekOfYear)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Microsoft.VisualBasic.FirstDayOfWeek
  parent: Microsoft.VisualBasic
  isExternal: false
  name: FirstDayOfWeek
  nameWithType: FirstDayOfWeek
  fullName: Microsoft.VisualBasic.FirstDayOfWeek
- uid: Microsoft.VisualBasic.FirstWeekOfYear
  parent: Microsoft.VisualBasic
  isExternal: false
  name: FirstWeekOfYear
  nameWithType: FirstWeekOfYear
  fullName: Microsoft.VisualBasic.FirstWeekOfYear
- uid: Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: DateDiff(String,Object,Object,FirstDayOfWeek,FirstWeekOfYear)
  nameWithType: DateAndTime.DateDiff(String,Object,Object,FirstDayOfWeek,FirstWeekOfYear)
  fullName: Microsoft.VisualBasic.DateAndTime.DateDiff(String,Object,Object,FirstDayOfWeek,FirstWeekOfYear)
- uid: Microsoft.VisualBasic.DateAndTime.DatePart(Microsoft.VisualBasic.DateInterval,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: DatePart(DateInterval,DateTime,FirstDayOfWeek,FirstWeekOfYear)
  nameWithType: DateAndTime.DatePart(DateInterval,DateTime,FirstDayOfWeek,FirstWeekOfYear)
  fullName: Microsoft.VisualBasic.DateAndTime.DatePart(DateInterval,DateTime,FirstDayOfWeek,FirstWeekOfYear)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: DatePart(String,Object,FirstDayOfWeek,FirstWeekOfYear)
  nameWithType: DateAndTime.DatePart(String,Object,FirstDayOfWeek,FirstWeekOfYear)
  fullName: Microsoft.VisualBasic.DateAndTime.DatePart(String,Object,FirstDayOfWeek,FirstWeekOfYear)
- uid: Microsoft.VisualBasic.DateAndTime.DateSerial(System.Int32,System.Int32,System.Int32)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: DateSerial(Int32,Int32,Int32)
  nameWithType: DateAndTime.DateSerial(Int32,Int32,Int32)
  fullName: Microsoft.VisualBasic.DateAndTime.DateSerial(Int32,Int32,Int32)
- uid: Microsoft.VisualBasic.DateAndTime.DateString
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: DateString
  nameWithType: DateAndTime.DateString
  fullName: Microsoft.VisualBasic.DateAndTime.DateString
- uid: Microsoft.VisualBasic.DateAndTime.DateValue(System.String)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: DateValue(String)
  nameWithType: DateAndTime.DateValue(String)
  fullName: Microsoft.VisualBasic.DateAndTime.DateValue(String)
- uid: Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Day(DateTime)
  nameWithType: DateAndTime.Day(DateTime)
  fullName: Microsoft.VisualBasic.DateAndTime.Day(DateTime)
- uid: Microsoft.VisualBasic.DateAndTime.Hour(System.DateTime)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Hour(DateTime)
  nameWithType: DateAndTime.Hour(DateTime)
  fullName: Microsoft.VisualBasic.DateAndTime.Hour(DateTime)
- uid: Microsoft.VisualBasic.DateAndTime.Minute(System.DateTime)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Minute(DateTime)
  nameWithType: DateAndTime.Minute(DateTime)
  fullName: Microsoft.VisualBasic.DateAndTime.Minute(DateTime)
- uid: Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Month(DateTime)
  nameWithType: DateAndTime.Month(DateTime)
  fullName: Microsoft.VisualBasic.DateAndTime.Month(DateTime)
- uid: Microsoft.VisualBasic.DateAndTime.MonthName(System.Int32,System.Boolean)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: MonthName(Int32,Boolean)
  nameWithType: DateAndTime.MonthName(Int32,Boolean)
  fullName: Microsoft.VisualBasic.DateAndTime.MonthName(Int32,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.VisualBasic.DateAndTime.Now
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Now
  nameWithType: DateAndTime.Now
  fullName: Microsoft.VisualBasic.DateAndTime.Now
- uid: Microsoft.VisualBasic.DateAndTime.Second(System.DateTime)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Second(DateTime)
  nameWithType: DateAndTime.Second(DateTime)
  fullName: Microsoft.VisualBasic.DateAndTime.Second(DateTime)
- uid: Microsoft.VisualBasic.DateAndTime.TimeOfDay
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: TimeOfDay
  nameWithType: DateAndTime.TimeOfDay
  fullName: Microsoft.VisualBasic.DateAndTime.TimeOfDay
- uid: Microsoft.VisualBasic.DateAndTime.Timer
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Timer
  nameWithType: DateAndTime.Timer
  fullName: Microsoft.VisualBasic.DateAndTime.Timer
- uid: Microsoft.VisualBasic.DateAndTime.TimeSerial(System.Int32,System.Int32,System.Int32)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: TimeSerial(Int32,Int32,Int32)
  nameWithType: DateAndTime.TimeSerial(Int32,Int32,Int32)
  fullName: Microsoft.VisualBasic.DateAndTime.TimeSerial(Int32,Int32,Int32)
- uid: Microsoft.VisualBasic.DateAndTime.TimeString
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: TimeString
  nameWithType: DateAndTime.TimeString
  fullName: Microsoft.VisualBasic.DateAndTime.TimeString
- uid: Microsoft.VisualBasic.DateAndTime.TimeValue(System.String)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: TimeValue(String)
  nameWithType: DateAndTime.TimeValue(String)
  fullName: Microsoft.VisualBasic.DateAndTime.TimeValue(String)
- uid: Microsoft.VisualBasic.DateAndTime.Today
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Today
  nameWithType: DateAndTime.Today
  fullName: Microsoft.VisualBasic.DateAndTime.Today
- uid: Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Weekday(DateTime,FirstDayOfWeek)
  nameWithType: DateAndTime.Weekday(DateTime,FirstDayOfWeek)
  fullName: Microsoft.VisualBasic.DateAndTime.Weekday(DateTime,FirstDayOfWeek)
- uid: Microsoft.VisualBasic.DateAndTime.WeekdayName(System.Int32,System.Boolean,Microsoft.VisualBasic.FirstDayOfWeek)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: WeekdayName(Int32,Boolean,FirstDayOfWeek)
  nameWithType: DateAndTime.WeekdayName(Int32,Boolean,FirstDayOfWeek)
  fullName: Microsoft.VisualBasic.DateAndTime.WeekdayName(Int32,Boolean,FirstDayOfWeek)
- uid: Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Year(DateTime)
  nameWithType: DateAndTime.Year(DateTime)
  fullName: Microsoft.VisualBasic.DateAndTime.Year(DateTime)
- uid: Microsoft.VisualBasic.DateAndTime.DateAdd*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: DateAdd
  nameWithType: DateAndTime.DateAdd
- uid: Microsoft.VisualBasic.DateAndTime.DateDiff*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: DateDiff
  nameWithType: DateAndTime.DateDiff
- uid: Microsoft.VisualBasic.DateAndTime.DatePart*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: DatePart
  nameWithType: DateAndTime.DatePart
- uid: Microsoft.VisualBasic.DateAndTime.DateSerial*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: DateSerial
  nameWithType: DateAndTime.DateSerial
- uid: Microsoft.VisualBasic.DateAndTime.DateString*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: DateString
  nameWithType: DateAndTime.DateString
- uid: Microsoft.VisualBasic.DateAndTime.DateValue*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: DateValue
  nameWithType: DateAndTime.DateValue
- uid: Microsoft.VisualBasic.DateAndTime.Day*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Day
  nameWithType: DateAndTime.Day
- uid: Microsoft.VisualBasic.DateAndTime.Hour*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Hour
  nameWithType: DateAndTime.Hour
- uid: Microsoft.VisualBasic.DateAndTime.Minute*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Minute
  nameWithType: DateAndTime.Minute
- uid: Microsoft.VisualBasic.DateAndTime.Month*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Month
  nameWithType: DateAndTime.Month
- uid: Microsoft.VisualBasic.DateAndTime.MonthName*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: MonthName
  nameWithType: DateAndTime.MonthName
- uid: Microsoft.VisualBasic.DateAndTime.Now*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Now
  nameWithType: DateAndTime.Now
- uid: Microsoft.VisualBasic.DateAndTime.Second*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Second
  nameWithType: DateAndTime.Second
- uid: Microsoft.VisualBasic.DateAndTime.TimeOfDay*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: TimeOfDay
  nameWithType: DateAndTime.TimeOfDay
- uid: Microsoft.VisualBasic.DateAndTime.Timer*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Timer
  nameWithType: DateAndTime.Timer
- uid: Microsoft.VisualBasic.DateAndTime.TimeSerial*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: TimeSerial
  nameWithType: DateAndTime.TimeSerial
- uid: Microsoft.VisualBasic.DateAndTime.TimeString*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: TimeString
  nameWithType: DateAndTime.TimeString
- uid: Microsoft.VisualBasic.DateAndTime.TimeValue*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: TimeValue
  nameWithType: DateAndTime.TimeValue
- uid: Microsoft.VisualBasic.DateAndTime.Today*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Today
  nameWithType: DateAndTime.Today
- uid: Microsoft.VisualBasic.DateAndTime.Weekday*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Weekday
  nameWithType: DateAndTime.Weekday
- uid: Microsoft.VisualBasic.DateAndTime.WeekdayName*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: WeekdayName
  nameWithType: DateAndTime.WeekdayName
- uid: Microsoft.VisualBasic.DateAndTime.Year*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Year
  nameWithType: DateAndTime.Year
