### YamlMime:ManagedReference
items:
- uid: System.Windows.LocalValueEntry
  id: LocalValueEntry
  children:
  - System.Windows.LocalValueEntry.Equals(System.Object)
  - System.Windows.LocalValueEntry.GetHashCode
  - System.Windows.LocalValueEntry.op_Equality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)
  - System.Windows.LocalValueEntry.op_Inequality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)
  - System.Windows.LocalValueEntry.Property
  - System.Windows.LocalValueEntry.Value
  langs:
  - csharp
  name: LocalValueEntry
  nameWithType: LocalValueEntry
  fullName: System.Windows.LocalValueEntry
  type: Struct
  summary: "속성 식별자 및 로컬로 설정에 대 한 속성 값을 나타내는 종속성 속성입니다."
  remarks: "이 클래스의 인스턴스는 <xref:System.Windows.LocalValueEnumerator.Current%2A> <xref:System.Windows.LocalValueEnumerator>.</xref:System.Windows.LocalValueEnumerator> 속성</xref:System.Windows.LocalValueEnumerator.Current%2A> 의 값을 가져올 때 반환 됩니다. 모든 LocalValueEntry 속성은 읽기 전용입니다.       이 클래스는 공용 생성자가 없습니다. 호출한 다음이 클래스의 인스턴스를 가져오려면 <xref:System.Windows.DependencyObject.GetLocalValueEnumerator%2A>, <xref:System.Windows.LocalValueEnumerator.Current%2A>반환 된 <xref:System.Windows.LocalValueEnumerator>.</xref:System.Windows.LocalValueEnumerator> </xref:System.Windows.LocalValueEnumerator.Current%2A> 의 값을 가져온 후</xref:System.Windows.DependencyObject.GetLocalValueEnumerator%2A>"
  example:
  - "The following example iterates locally set values of a <xref:System.Windows.DependencyObject> and queries LocalValueEntry properties.  \n  \n [!code-cs[DPClearValue#IterateLocalValuesAndClear](~/add/codesnippet/csharp/DPClearValue/default.xaml.cs#iteratelocalvaluesandclear)]\n [!code-vb[DPClearValue#IterateLocalValuesAndClear](~/add/codesnippet/visualbasic/DPClearValue/default.xaml.vb#iteratelocalvaluesandclear)]"
  syntax:
    content: public struct LocalValueEntry
  inheritance:
  - System.ValueType
  implements: []
  platform:
  - net462
- uid: System.Windows.LocalValueEntry.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Windows.LocalValueEntry
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: LocalValueEntry.Equals(Object)
  fullName: System.Windows.LocalValueEntry.Equals(Object)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "두 결정 <xref href=&quot;System.Windows.LocalValueEntry&quot;> </xref> 인스턴스는 같습니다."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "<xref href=&quot;System.Windows.LocalValueEntry&quot;> </xref> 현재과 비교할 <xref href=&quot;System.Windows.LocalValueEntry&quot;> </xref>합니다."
    return:
      type: System.Boolean
      description: "이 <> </> *>의 값을 비교 하는 구현에서 <> </> *>, 잠재적으로 값을 비교 하 고 <> </> *> 합니다. <> </> *>의 구성 요소는 <xref href=&quot;System.Windows.LocalValueEntry&quot;> </xref> 이므로 항상 비트 비교 값 형식입니다. 에 대 한는 <xref:System.Windows.LocalValueEntry.Value*>구성 요소를이 구현에서는 비트 비교 값 형식이 면.</xref:System.Windows.LocalValueEntry.Value*> 로컬에서 설정한 속성은 참조 형식에 대 한 동작은 지연 해당 형식의 같은지 여부를 결정 하는 메커니즘을 사용 하기 때문에 내부적으로 두 개의 값 연산자 = = 합니다. 기본적으로 일 값의 참조 일치와 전체 같음 <xref href=&quot;System.Windows.LocalValueEntry&quot;> </xref> 가 참조 일치 하지 않습니다."
  overload: System.Windows.LocalValueEntry.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.LocalValueEntry.GetHashCode
  id: GetHashCode
  parent: System.Windows.LocalValueEntry
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: LocalValueEntry.GetHashCode()
  fullName: System.Windows.LocalValueEntry.GetHashCode()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "이 대 한 해시 코드를 반환 합니다. <xref href=&quot;System.Windows.LocalValueEntry&quot;> </xref>합니다."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "부호 있는 32 비트 정수 값입니다."
  overload: System.Windows.LocalValueEntry.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.LocalValueEntry.op_Equality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)
  id: op_Equality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)
  parent: System.Windows.LocalValueEntry
  langs:
  - csharp
  name: op_Equality(LocalValueEntry,LocalValueEntry)
  nameWithType: LocalValueEntry.op_Equality(LocalValueEntry,LocalValueEntry)
  fullName: System.Windows.LocalValueEntry.op_Equality(LocalValueEntry,LocalValueEntry)
  type: Operator
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "지정 된 비교 <xref href=&quot;System.Windows.LocalValueEntry&quot;> </xref> 인스턴스를 동일한 지 여부를 결정 합니다."
  remarks: "값을 비교 하는이 같음 구현은 <xref:System.Windows.LocalValueEntry.Property%2A>, 잠재적으로 <xref:System.Windows.LocalValueEntry.Value%2A>.</xref:System.Windows.LocalValueEntry.Value%2A> 의 값을 비교 하 고</xref:System.Windows.LocalValueEntry.Property%2A> <xref:System.Windows.LocalValueEntry.Property%2A>의 구성 요소는 <xref:System.Windows.LocalValueEntry>은 항상 값 형식 이므로이 비교는 항상 비트 값 비교 합니다.</xref:System.Windows.LocalValueEntry> </xref:System.Windows.LocalValueEntry.Property%2A> 에 대 한는 <xref:System.Windows.LocalValueEntry.Value%2A>구성 요소를이 구현에서는 비트 비교 값 형식이 면.</xref:System.Windows.LocalValueEntry.Value%2A>       로컬에서 설정한 속성은 참조 형식에 대 한 동작은 지연 해당 형식의 같은지 여부를 결정 하는 메커니즘을 사용 하기 때문에 `==` 연산자의 두 값이 내부적으로 합니다. 기본적으로이 값의 참조 일치 합니다."
  syntax:
    content: public static bool op_Equality (System.Windows.LocalValueEntry obj1, System.Windows.LocalValueEntry obj2);
    parameters:
    - id: obj1
      type: System.Windows.LocalValueEntry
      description: "비교할 첫 번째 인스턴스입니다."
    - id: obj2
      type: System.Windows.LocalValueEntry
      description: "비교할 두 번째 인스턴스입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if the <code>obj1</code><xref href=&quot;System.Windows.LocalValueEntry&quot;></xref> is equal to the <code>obj2</code><xref href=&quot;System.Windows.LocalValueEntry&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.LocalValueEntry.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.LocalValueEntry.op_Inequality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)
  id: op_Inequality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)
  parent: System.Windows.LocalValueEntry
  langs:
  - csharp
  name: op_Inequality(LocalValueEntry,LocalValueEntry)
  nameWithType: LocalValueEntry.op_Inequality(LocalValueEntry,LocalValueEntry)
  fullName: System.Windows.LocalValueEntry.op_Inequality(LocalValueEntry,LocalValueEntry)
  type: Operator
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "지정 된 비교 <xref href=&quot;System.Windows.LocalValueEnumerator&quot;> </xref> 인스턴스를 다른 지 여부를 확인 합니다."
  syntax:
    content: public static bool op_Inequality (System.Windows.LocalValueEntry obj1, System.Windows.LocalValueEntry obj2);
    parameters:
    - id: obj1
      type: System.Windows.LocalValueEntry
      description: "비교할 첫 번째 인스턴스입니다."
    - id: obj2
      type: System.Windows.LocalValueEntry
      description: "비교할 두 번째 인스턴스입니다."
    return:
      type: System.Boolean
      description: "값을 비교 하는이 구현에서 <> </> *> 및 <> </> *>의 구성 요소는 <xref href=&quot;System.Windows.LocalValueEntry&quot;> </xref>합니다. <> </> *>의 구성 요소는 <xref href=&quot;System.Windows.LocalValueEntry&quot;> </xref> 은 항상 값 형식 이므로이 비교는 항상 비트 비교 합니다. 에 대 한는 <> </> *> 구성 요소를이 구현에서는 비트 비교 값 형식인 경우.       로컬에서 설정한 속성은 참조 형식에 대 한 동작은 지연 해당 형식의 같은지 여부를 결정 하는 메커니즘을 사용 하기 때문에 <xref uid=&quot;langword_csharp_==&quot; name=&quot;==&quot; href=&quot;&quot;> </xref> 연산자의 두 값이 내부적으로 합니다. 기본적으로이 값의 참조 일치 합니다."
  overload: System.Windows.LocalValueEntry.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.LocalValueEntry.Property
  id: Property
  parent: System.Windows.LocalValueEntry
  langs:
  - csharp
  name: Property
  nameWithType: LocalValueEntry.Property
  fullName: System.Windows.LocalValueEntry.Property
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "로컬에서 설정에 대 한 식별자를 가져옵니다.이 항목에 의해 표시 되는 종속성 속성입니다."
  remarks: "이 속성을 사용 하 여 로컬로 설정의 식별자를 쿼리하고을 종속성 속성의 메타 데이터를 가져옵니다. 이렇게 가져온된 메타 데이터 속성 및 속성의 속성 값 상속이 지원 하는지 여부의 초기 기본값을 포함 될 수 있습니다."
  syntax:
    content: public System.Windows.DependencyProperty Property { get; }
    return:
      type: System.Windows.DependencyProperty
      description: "로컬에서 설정에 대 한 식별자 종속성 속성입니다."
  overload: System.Windows.LocalValueEntry.Property*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.LocalValueEntry.Value
  id: Value
  parent: System.Windows.LocalValueEntry
  langs:
  - csharp
  name: Value
  nameWithType: LocalValueEntry.Value
  fullName: System.Windows.LocalValueEntry.Value
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "로컬에서 설정의 값을 가져옵니다 종속성 속성입니다."
  remarks: "이 값에 대해 더 구체적인 형식을 확인 하려면 <xref:System.Windows.LocalValueEntry.Property%2A>현재 <xref:System.Windows.LocalValueEntry>해당 <xref:System.Windows.DependencyProperty.PropertyType%2A>.</xref:System.Windows.DependencyProperty.PropertyType%2A> 가져오기 및</xref:System.Windows.LocalValueEntry> </xref:System.Windows.LocalValueEntry.Property%2A> 확인"
  syntax:
    content: public object Value { get; }
    return:
      type: System.Object
      description: "로컬에서 설정의 값으로 개체 종속성 속성입니다."
  overload: System.Windows.LocalValueEntry.Value*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Windows.LocalValueEntry.Equals(System.Object)
  parent: System.Windows.LocalValueEntry
  isExternal: false
  name: Equals(Object)
  nameWithType: LocalValueEntry.Equals(Object)
  fullName: System.Windows.LocalValueEntry.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.LocalValueEntry.GetHashCode
  parent: System.Windows.LocalValueEntry
  isExternal: false
  name: GetHashCode()
  nameWithType: LocalValueEntry.GetHashCode()
  fullName: System.Windows.LocalValueEntry.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.LocalValueEntry.op_Equality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)
  parent: System.Windows.LocalValueEntry
  isExternal: false
  name: op_Equality(LocalValueEntry,LocalValueEntry)
  nameWithType: LocalValueEntry.op_Equality(LocalValueEntry,LocalValueEntry)
  fullName: System.Windows.LocalValueEntry.op_Equality(LocalValueEntry,LocalValueEntry)
- uid: System.Windows.LocalValueEntry
  parent: System.Windows
  isExternal: false
  name: LocalValueEntry
  nameWithType: LocalValueEntry
  fullName: System.Windows.LocalValueEntry
- uid: System.Windows.LocalValueEntry.op_Inequality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)
  parent: System.Windows.LocalValueEntry
  isExternal: false
  name: op_Inequality(LocalValueEntry,LocalValueEntry)
  nameWithType: LocalValueEntry.op_Inequality(LocalValueEntry,LocalValueEntry)
  fullName: System.Windows.LocalValueEntry.op_Inequality(LocalValueEntry,LocalValueEntry)
- uid: System.Windows.LocalValueEntry.Property
  parent: System.Windows.LocalValueEntry
  isExternal: false
  name: Property
  nameWithType: LocalValueEntry.Property
  fullName: System.Windows.LocalValueEntry.Property
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.LocalValueEntry.Value
  parent: System.Windows.LocalValueEntry
  isExternal: false
  name: Value
  nameWithType: LocalValueEntry.Value
  fullName: System.Windows.LocalValueEntry.Value
- uid: System.Windows.LocalValueEntry.Equals*
  parent: System.Windows.LocalValueEntry
  isExternal: false
  name: Equals
  nameWithType: LocalValueEntry.Equals
- uid: System.Windows.LocalValueEntry.GetHashCode*
  parent: System.Windows.LocalValueEntry
  isExternal: false
  name: GetHashCode
  nameWithType: LocalValueEntry.GetHashCode
- uid: System.Windows.LocalValueEntry.op_Equality*
  parent: System.Windows.LocalValueEntry
  isExternal: false
  name: op_Equality
  nameWithType: LocalValueEntry.op_Equality
- uid: System.Windows.LocalValueEntry.op_Inequality*
  parent: System.Windows.LocalValueEntry
  isExternal: false
  name: op_Inequality
  nameWithType: LocalValueEntry.op_Inequality
- uid: System.Windows.LocalValueEntry.Property*
  parent: System.Windows.LocalValueEntry
  isExternal: false
  name: Property
  nameWithType: LocalValueEntry.Property
- uid: System.Windows.LocalValueEntry.Value*
  parent: System.Windows.LocalValueEntry
  isExternal: false
  name: Value
  nameWithType: LocalValueEntry.Value
