### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.DataGridViewCellCollection
  id: DataGridViewCellCollection
  children:
  - System.Windows.Forms.DataGridViewCellCollection.#ctor(System.Windows.Forms.DataGridViewRow)
  - System.Windows.Forms.DataGridViewCellCollection.Add(System.Windows.Forms.DataGridViewCell)
  - System.Windows.Forms.DataGridViewCellCollection.AddRange(System.Windows.Forms.DataGridViewCell[])
  - System.Windows.Forms.DataGridViewCellCollection.Clear
  - System.Windows.Forms.DataGridViewCellCollection.CollectionChanged
  - System.Windows.Forms.DataGridViewCellCollection.Contains(System.Windows.Forms.DataGridViewCell)
  - System.Windows.Forms.DataGridViewCellCollection.CopyTo(System.Windows.Forms.DataGridViewCell[],System.Int32)
  - System.Windows.Forms.DataGridViewCellCollection.IndexOf(System.Windows.Forms.DataGridViewCell)
  - System.Windows.Forms.DataGridViewCellCollection.Insert(System.Int32,System.Windows.Forms.DataGridViewCell)
  - System.Windows.Forms.DataGridViewCellCollection.Item(System.Int32)
  - System.Windows.Forms.DataGridViewCellCollection.Item(System.String)
  - System.Windows.Forms.DataGridViewCellCollection.List
  - System.Windows.Forms.DataGridViewCellCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)
  - System.Windows.Forms.DataGridViewCellCollection.Remove(System.Windows.Forms.DataGridViewCell)
  - System.Windows.Forms.DataGridViewCellCollection.RemoveAt(System.Int32)
  - System.Windows.Forms.DataGridViewCellCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Windows.Forms.DataGridViewCellCollection.System#Collections#ICollection#Count
  - System.Windows.Forms.DataGridViewCellCollection.System#Collections#ICollection#IsSynchronized
  - System.Windows.Forms.DataGridViewCellCollection.System#Collections#ICollection#SyncRoot
  - System.Windows.Forms.DataGridViewCellCollection.System#Collections#IEnumerable#GetEnumerator
  - System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#Add(System.Object)
  - System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#Clear
  - System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#Contains(System.Object)
  - System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#IndexOf(System.Object)
  - System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#IsFixedSize
  - System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#IsReadOnly
  - System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#Item(System.Int32)
  - System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#Remove(System.Object)
  - System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#RemoveAt(System.Int32)
  langs:
  - csharp
  name: DataGridViewCellCollection
  nameWithType: DataGridViewCellCollection
  fullName: System.Windows.Forms.DataGridViewCellCollection
  type: Class
  summary: "에 있는 셀의 컬렉션을 나타냅니다는 <xref href=&quot;System.Windows.Forms.DataGridViewRow&quot;> </xref>합니다."
  remarks: "DataGridViewCellCollection 개체에서 검색 되는 <xref:System.Windows.Forms.DataGridViewRow.Cells%2A?displayProperty=fullName>속성.</xref:System.Windows.Forms.DataGridViewRow.Cells%2A?displayProperty=fullName>"
  syntax:
    content: >-
      [System.ComponentModel.ListBindable(false)]

      public class DataGridViewCellCollection : System.Windows.Forms.BaseCollection, System.Collections.IList
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.Windows.Forms.BaseCollection
  implements:
  - System.Collections.IList
  inheritedMembers:
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  - System.Windows.Forms.BaseCollection.CopyTo(System.Array,System.Int32)
  - System.Windows.Forms.BaseCollection.Count
  - System.Windows.Forms.BaseCollection.GetEnumerator
  - System.Windows.Forms.BaseCollection.IsReadOnly
  - System.Windows.Forms.BaseCollection.IsSynchronized
  - System.Windows.Forms.BaseCollection.SyncRoot
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCellCollection.#ctor(System.Windows.Forms.DataGridViewRow)
  id: '#ctor(System.Windows.Forms.DataGridViewRow)'
  parent: System.Windows.Forms.DataGridViewCellCollection
  langs:
  - csharp
  name: DataGridViewCellCollection(DataGridViewRow)
  nameWithType: DataGridViewCellCollection.DataGridViewCellCollection(DataGridViewRow)
  fullName: System.Windows.Forms.DataGridViewCellCollection.DataGridViewCellCollection(DataGridViewRow)
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Windows.Forms.DataGridViewCellCollection&quot;> </xref> 클래스입니다."
  syntax:
    content: public DataGridViewCellCollection (System.Windows.Forms.DataGridViewRow dataGridViewRow);
    parameters:
    - id: dataGridViewRow
      type: System.Windows.Forms.DataGridViewRow
      description: "<xref href=&quot;System.Windows.Forms.DataGridViewRow&quot;> </xref> 컬렉션을 소유 하 합니다."
  overload: System.Windows.Forms.DataGridViewCellCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCellCollection.Add(System.Windows.Forms.DataGridViewCell)
  id: Add(System.Windows.Forms.DataGridViewCell)
  parent: System.Windows.Forms.DataGridViewCellCollection
  langs:
  - csharp
  name: Add(DataGridViewCell)
  nameWithType: DataGridViewCellCollection.Add(DataGridViewCell)
  fullName: System.Windows.Forms.DataGridViewCellCollection.Add(DataGridViewCell)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컬렉션에 있는 셀을 추가합니다."
  remarks: "이 방법을 사용 하 여 채우기는 <xref:System.Windows.Forms.DataGridViewRow>셀 행을 추가 하기 전에 <xref:System.Windows.Forms.DataGridView>컨트롤.</xref:System.Windows.Forms.DataGridView> </xref:System.Windows.Forms.DataGridViewRow> 컨트롤에 행을 추가 하면이 메서드는 더 이상 유용 하므로 항상 포함 된 셀 수 컨트롤에서 열 수를 찾습니다."
  syntax:
    content: public virtual int Add (System.Windows.Forms.DataGridViewCell dataGridViewCell);
    parameters:
    - id: dataGridViewCell
      type: System.Windows.Forms.DataGridViewCell
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewCell&quot;> </xref> 컬렉션에 추가 합니다."
    return:
      type: System.Int32
      description: "새 요소를 삽입할 위치입니다."
  overload: System.Windows.Forms.DataGridViewCellCollection.Add*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "이 소유 하는 행 <xref href=&quot;System.Windows.Forms.DataGridViewCellCollection&quot;> </xref> 에 이미 속해는 <xref href=&quot;System.Windows.Forms.DataGridView&quot;> </xref> 제어 합니다.       -or-       <code>dataGridViewCell</code> already belongs to a <xref href=&quot;System.Windows.Forms.DataGridViewRow&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCellCollection.AddRange(System.Windows.Forms.DataGridViewCell[])
  id: AddRange(System.Windows.Forms.DataGridViewCell[])
  parent: System.Windows.Forms.DataGridViewCellCollection
  langs:
  - csharp
  name: AddRange(DataGridViewCell[])
  nameWithType: DataGridViewCellCollection.AddRange(DataGridViewCell[])
  fullName: System.Windows.Forms.DataGridViewCellCollection.AddRange(DataGridViewCell[])
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "셀의 배열을 컬렉션에 추가 합니다."
  remarks: "이 방법을 사용 하 여 채우기는 <xref:System.Windows.Forms.DataGridViewRow>셀 행을 추가 하기 전에 <xref:System.Windows.Forms.DataGridView>컨트롤.</xref:System.Windows.Forms.DataGridView> </xref:System.Windows.Forms.DataGridViewRow> 컨트롤에 행을 추가 하면이 메서드는 더 이상 유용 하므로 항상 포함 된 셀 수 컨트롤에서 열 수를 찾습니다."
  syntax:
    content: public virtual void AddRange (System.Windows.Forms.DataGridViewCell[] dataGridViewCells);
    parameters:
    - id: dataGridViewCells
      type: System.Windows.Forms.DataGridViewCell[]
      description: "배열 <xref href=&quot;System.Windows.Forms.DataGridViewCell&quot;> </xref> 컬렉션에 추가할 개체입니다."
  overload: System.Windows.Forms.DataGridViewCellCollection.AddRange*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>dataGridViewCells</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "이 소유 하는 행 <xref href=&quot;System.Windows.Forms.DataGridViewCellCollection&quot;> </xref> 에 이미 속해는 <xref href=&quot;System.Windows.Forms.DataGridView&quot;> </xref> 제어 합니다.       -or-       At least one value in <code>dataGridViewCells</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -또는-하나 이상의 셀에 <code> dataGridViewCells </code> 에 이미 속해는 <xref href=&quot;System.Windows.Forms.DataGridViewRow&quot;> </xref>합니다.       -또는-두 개 이상의 값에 <code> dataGridViewCells </code> 동일에 대 한 참조가 <xref href=&quot;System.Windows.Forms.DataGridViewCell&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCellCollection.Clear
  id: Clear
  parent: System.Windows.Forms.DataGridViewCellCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: DataGridViewCellCollection.Clear()
  fullName: System.Windows.Forms.DataGridViewCellCollection.Clear()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컬렉션에서 모든 셀을 지웁니다."
  remarks: "사용 하 여 행을 포함 하는 추가 하기 전에 컬렉션을 변경 하려면이 메서드는 <xref:System.Windows.Forms.DataGridView>컨트롤.</xref:System.Windows.Forms.DataGridView> 컨트롤에 행을 추가 하면이 메서드는 더 이상 유용 하므로 항상 포함 된 셀 수 컨트롤에서 열 수를 찾습니다."
  syntax:
    content: public virtual void Clear ();
    parameters: []
  overload: System.Windows.Forms.DataGridViewCellCollection.Clear*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "이 소유 하는 행 <xref href=&quot;System.Windows.Forms.DataGridViewCellCollection&quot;> </xref> 에 이미 속해는 <xref href=&quot;System.Windows.Forms.DataGridView&quot;> </xref> 제어 합니다."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCellCollection.CollectionChanged
  id: CollectionChanged
  parent: System.Windows.Forms.DataGridViewCellCollection
  langs:
  - csharp
  name: CollectionChanged
  nameWithType: DataGridViewCellCollection.CollectionChanged
  fullName: System.Windows.Forms.DataGridViewCellCollection.CollectionChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컬렉션이 변경 되 면 발생 합니다."
  remarks: ''
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the CollectionChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.DataGridViewCellCollection> named `DataGridViewCellCollection1`. Then ensure that the event handler is associated with the CollectionChanged event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#371](~/add/codesnippet/csharp/e-system.windows.forms.d_133_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#371](~/add/codesnippet/visualbasic/e-system.windows.forms.d_133_1.vb)]"
  syntax:
    content: public event System.ComponentModel.CollectionChangeEventHandler CollectionChanged;
    return:
      type: System.ComponentModel.CollectionChangeEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCellCollection.Contains(System.Windows.Forms.DataGridViewCell)
  id: Contains(System.Windows.Forms.DataGridViewCell)
  parent: System.Windows.Forms.DataGridViewCellCollection
  langs:
  - csharp
  name: Contains(DataGridViewCell)
  nameWithType: DataGridViewCellCollection.Contains(DataGridViewCell)
  fullName: System.Windows.Forms.DataGridViewCellCollection.Contains(DataGridViewCell)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "지정된 된 셀 컬렉션에 포함 되는지 여부를 결정 합니다."
  syntax:
    content: public virtual bool Contains (System.Windows.Forms.DataGridViewCell dataGridViewCell);
    parameters:
    - id: dataGridViewCell
      type: System.Windows.Forms.DataGridViewCell
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewCell&quot;> </xref> 컬렉션에서 찾을 수 있습니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우 <code> dataGridViewCell </code> 는 컬렉션에 있으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Forms.DataGridViewCellCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCellCollection.CopyTo(System.Windows.Forms.DataGridViewCell[],System.Int32)
  id: CopyTo(System.Windows.Forms.DataGridViewCell[],System.Int32)
  parent: System.Windows.Forms.DataGridViewCellCollection
  langs:
  - csharp
  name: CopyTo(DataGridViewCell[],Int32)
  nameWithType: DataGridViewCellCollection.CopyTo(DataGridViewCell[],Int32)
  fullName: System.Windows.Forms.DataGridViewCellCollection.CopyTo(DataGridViewCell[],Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "셀의 전체 컬렉션을 배열 내에서 지정된 된 위치에서 배열에 복사합니다."
  syntax:
    content: public void CopyTo (System.Windows.Forms.DataGridViewCell[] array, int index);
    parameters:
    - id: array
      type: System.Windows.Forms.DataGridViewCell[]
      description: "내용의 복사할 대상 배열입니다."
    - id: index
      type: System.Int32
      description: "에 있는 요소의 인덱스 `array` 복사를 시작할입니다."
  overload: System.Windows.Forms.DataGridViewCellCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCellCollection.IndexOf(System.Windows.Forms.DataGridViewCell)
  id: IndexOf(System.Windows.Forms.DataGridViewCell)
  parent: System.Windows.Forms.DataGridViewCellCollection
  langs:
  - csharp
  name: IndexOf(DataGridViewCell)
  nameWithType: DataGridViewCellCollection.IndexOf(DataGridViewCell)
  fullName: System.Windows.Forms.DataGridViewCellCollection.IndexOf(DataGridViewCell)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "지정된 된 셀의 인덱스를 반환합니다."
  syntax:
    content: public int IndexOf (System.Windows.Forms.DataGridViewCell dataGridViewCell);
    parameters:
    - id: dataGridViewCell
      type: System.Windows.Forms.DataGridViewCell
      description: "셀 컬렉션에서 찾을입니다."
    return:
      type: System.Int32
      description: "값의&0;부터 시작 인덱스 <code> dataGridViewCell </code> 매개 변수를 컬렉션에 없는 경우-1입니다."
  overload: System.Windows.Forms.DataGridViewCellCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCellCollection.Insert(System.Int32,System.Windows.Forms.DataGridViewCell)
  id: Insert(System.Int32,System.Windows.Forms.DataGridViewCell)
  parent: System.Windows.Forms.DataGridViewCellCollection
  langs:
  - csharp
  name: Insert(Int32,DataGridViewCell)
  nameWithType: DataGridViewCellCollection.Insert(Int32,DataGridViewCell)
  fullName: System.Windows.Forms.DataGridViewCellCollection.Insert(Int32,DataGridViewCell)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "셀을 컬렉션 내의 지정한 인덱스에 삽입합니다."
  remarks: "사용 하 여 행을 포함 하는 추가 하기 전에 컬렉션을 변경 하려면이 메서드는 <xref:System.Windows.Forms.DataGridView>컨트롤.</xref:System.Windows.Forms.DataGridView> 컨트롤에 행을 추가 하면이 메서드는 더 이상 유용 하므로 항상 포함 된 셀 수 컨트롤에서 열 수를 찾습니다."
  syntax:
    content: public virtual void Insert (int index, System.Windows.Forms.DataGridViewCell dataGridViewCell);
    parameters:
    - id: index
      type: System.Int32
      description: "0부터 시작 하는 인덱스를 배치할 `dataGridViewCell`합니다."
    - id: dataGridViewCell
      type: System.Windows.Forms.DataGridViewCell
      description: "<xref href=&quot;System.Windows.Forms.DataGridViewCell&quot;> </xref> 를 삽입 합니다."
  overload: System.Windows.Forms.DataGridViewCellCollection.Insert*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "이 소유 하는 행 <xref href=&quot;System.Windows.Forms.DataGridViewCellCollection&quot;> </xref> 에 이미 속해는 <xref href=&quot;System.Windows.Forms.DataGridView&quot;> </xref> 제어 합니다.       -or-       <code>dataGridViewCell</code> already belongs to a <xref href=&quot;System.Windows.Forms.DataGridViewRow&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCellCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Windows.Forms.DataGridViewCellCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: DataGridViewCellCollection.Item(Int32)
  fullName: System.Windows.Forms.DataGridViewCellCollection.Item(Int32)
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "지정 된 인덱스 위치에 대 한 셀을 가져오거나 설정 합니다. C#에서이 속성은에 대 한 인덱서는 <xref href=&quot;System.Windows.Forms.DataGridViewCellCollection&quot;> </xref> 클래스입니다."
  syntax:
    content: public System.Windows.Forms.DataGridViewCell this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "가져오거나 설정할 셀의&0;부터 시작 하는 인덱스입니다."
    return:
      type: System.Windows.Forms.DataGridViewCell
      description: "<xref href=&quot;System.Windows.Forms.DataGridViewCell&quot;> </xref> 지정된 된 인덱스에 저장 합니다."
  overload: System.Windows.Forms.DataGridViewCellCollection.Item*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "이 속성을 설정할 때 지정 된 값이 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "지정 된 셀이 속한 이미이 속성을 설정할 때는 <xref href=&quot;System.Windows.Forms.DataGridView&quot;> </xref> 제어 합니다.       -또는-지정 된 셀이 속한 이미이 속성을 설정할 때는 <xref href=&quot;System.Windows.Forms.DataGridViewRow&quot;> </xref>합니다."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>0 보다 작습니다.       -또는- <code>index</code> 가 셀 개수 보다 크거나 같은 컬렉션에 있습니다."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCellCollection.Item(System.String)
  id: Item(System.String)
  parent: System.Windows.Forms.DataGridViewCellCollection
  langs:
  - csharp
  name: Item(String)
  nameWithType: DataGridViewCellCollection.Item(String)
  fullName: System.Windows.Forms.DataGridViewCellCollection.Item(String)
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "제공된 된 이름 가진 열에 셀을 가져오거나 설정 합니다. C#에서이 속성은에 대 한 인덱서는 <xref href=&quot;System.Windows.Forms.DataGridViewCellCollection&quot;> </xref> 클래스입니다."
  syntax:
    content: public System.Windows.Forms.DataGridViewCell this[string columnName] { get; set; }
    parameters:
    - id: columnName
      type: System.String
      description: "열을 가져오거나 설정할 셀의 이름입니다."
    return:
      type: System.Windows.Forms.DataGridViewCell
      description: "<xref href=&quot;System.Windows.Forms.DataGridViewCell&quot;> </xref> 지정한 이름을 가진 열에 저장 합니다."
  overload: System.Windows.Forms.DataGridViewCellCollection.Item*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>columnName</code>컨트롤의 모든 열 이름을 일치 하지 않습니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "이 속성을 설정할 때 지정 된 값이 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "지정 된 셀이 속한 이미이 속성을 설정할 때는 <xref href=&quot;System.Windows.Forms.DataGridView&quot;> </xref> 제어 합니다.       -또는-지정 된 셀이 속한 이미이 속성을 설정할 때는 <xref href=&quot;System.Windows.Forms.DataGridViewRow&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCellCollection.List
  id: List
  parent: System.Windows.Forms.DataGridViewCellCollection
  langs:
  - csharp
  name: List
  nameWithType: DataGridViewCellCollection.List
  fullName: System.Windows.Forms.DataGridViewCellCollection.List
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "가져옵니다는 <xref href=&quot;System.Collections.ArrayList&quot;> </xref> 포함 된 <xref href=&quot;System.Windows.Forms.DataGridViewCellCollection&quot;> </xref> 개체입니다."
  syntax:
    content: protected override System.Collections.ArrayList List { get; }
    return:
      type: System.Collections.ArrayList
      description: "<xref href=&quot;System.Collections.ArrayList&quot;></xref>."
  overload: System.Windows.Forms.DataGridViewCellCollection.List*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCellCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)
  id: OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)
  parent: System.Windows.Forms.DataGridViewCellCollection
  langs:
  - csharp
  name: OnCollectionChanged(CollectionChangeEventArgs)
  nameWithType: DataGridViewCellCollection.OnCollectionChanged(CollectionChangeEventArgs)
  fullName: System.Windows.Forms.DataGridViewCellCollection.OnCollectionChanged(CollectionChangeEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.DataGridViewCellCollection.CollectionChanged&quot;> </xref> 이벤트입니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [NIB: 이벤트를 발생 시키는](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)합니다.       OnCollectionChanged 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected void OnCollectionChanged (System.ComponentModel.CollectionChangeEventArgs e);
    parameters:
    - id: e
      type: System.ComponentModel.CollectionChangeEventArgs
      description: "A <xref href=&quot;System.ComponentModel.CollectionChangeEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Windows.Forms.DataGridViewCellCollection.OnCollectionChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCellCollection.Remove(System.Windows.Forms.DataGridViewCell)
  id: Remove(System.Windows.Forms.DataGridViewCell)
  parent: System.Windows.Forms.DataGridViewCellCollection
  langs:
  - csharp
  name: Remove(DataGridViewCell)
  nameWithType: DataGridViewCellCollection.Remove(DataGridViewCell)
  fullName: System.Windows.Forms.DataGridViewCellCollection.Remove(DataGridViewCell)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컬렉션에서 지정된 된 셀을 제거합니다."
  remarks: "사용 하 여 행을 포함 하는 추가 하기 전에 컬렉션을 변경 하려면이 메서드는 <xref:System.Windows.Forms.DataGridView>컨트롤.</xref:System.Windows.Forms.DataGridView> 컨트롤에 행을 추가 하면이 메서드는 더 이상 유용 하므로 항상 포함 된 셀 수 컨트롤에서 열 수를 찾습니다."
  syntax:
    content: public virtual void Remove (System.Windows.Forms.DataGridViewCell cell);
    parameters:
    - id: cell
      type: System.Windows.Forms.DataGridViewCell
      description: "<xref href=&quot;System.Windows.Forms.DataGridViewCell&quot;> </xref> 는 컬렉션에서 제거할 수 있습니다."
  overload: System.Windows.Forms.DataGridViewCellCollection.Remove*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "이 소유 하는 행 <xref href=&quot;System.Windows.Forms.DataGridViewCellCollection&quot;> </xref> 에 이미 속해는 <xref href=&quot;System.Windows.Forms.DataGridView&quot;> </xref> 제어 합니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>cell</code>컬렉션에서 찾을 수 없습니다."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCellCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Windows.Forms.DataGridViewCellCollection
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: DataGridViewCellCollection.RemoveAt(Int32)
  fullName: System.Windows.Forms.DataGridViewCellCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "지정된 된 인덱스에 있는 셀을 제거합니다."
  remarks: "사용 하 여 행을 포함 하는 추가 하기 전에 컬렉션을 변경 하려면이 메서드는 <xref:System.Windows.Forms.DataGridView>컨트롤.</xref:System.Windows.Forms.DataGridView> 컨트롤에 행을 추가 하면이 메서드는 더 이상 유용 하므로 항상 포함 된 셀 수 컨트롤에서 열 수를 찾습니다."
  syntax:
    content: public virtual void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "0부터 시작 인덱스는 <xref href=&quot;System.Windows.Forms.DataGridViewCell&quot;> </xref> 제거 됩니다."
  overload: System.Windows.Forms.DataGridViewCellCollection.RemoveAt*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "이 소유 하는 행 <xref href=&quot;System.Windows.Forms.DataGridViewCellCollection&quot;> </xref> 에 이미 속해는 <xref href=&quot;System.Windows.Forms.DataGridView&quot;> </xref> 제어 합니다."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCellCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: System.Windows.Forms.DataGridViewCellCollection
  langs:
  - csharp
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: DataGridViewCellCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Windows.Forms.DataGridViewCellCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "지정된 된 인덱스에서 시작 하 여 지정 된 배열에 컬렉션의 요소를 복사 합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Windows.Forms.DataGridViewCellCollection>인스턴스로 캐스팅 되는 <xref:System.Collections.ICollection>인터페이스.</xref:System.Collections.ICollection> </xref:System.Windows.Forms.DataGridViewCellCollection>"
  syntax:
    content: void ICollection.CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "컬렉션에서 복사한 요소의 대상인&1; 차원 배열입니다. 배열에는&0;부터 시작 하는 인덱스가 있어야 합니다."
    - id: index
      type: System.Int32
      description: "복사를 시작할 배열 인덱스는&0;부터 시작을 시작 합니다."
  overload: System.Windows.Forms.DataGridViewCellCollection.System#Collections#ICollection#CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>array</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>가&0; 보다 작습니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>array</code>가 다차원 배열인 경우       -또는-에 있는 요소의 수는 <xref href=&quot;System.Windows.Forms.DataGridViewCellCollection&quot;> </xref> 에서 사용 가능한 공간 보다 큰 <code>index</code> 의 끝에 <code>array</code>합니다."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "<xref href=&quot;System.Windows.Forms.DataGridViewCellCollection&quot;> </xref> 의 형식으로 자동 캐스팅할 수 없는 <code> array </code>합니다."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCellCollection.System#Collections#ICollection#Count
  id: System#Collections#ICollection#Count
  isEii: true
  parent: System.Windows.Forms.DataGridViewCellCollection
  langs:
  - csharp
  name: System.Collections.ICollection.Count
  nameWithType: DataGridViewCellCollection.System.Collections.ICollection.Count
  fullName: System.Windows.Forms.DataGridViewCellCollection.System.Collections.ICollection.Count
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컬렉션에 포함 된 요소의 수를 가져옵니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Windows.Forms.DataGridViewCellCollection>인스턴스로 캐스팅 되는 <xref:System.Collections.ICollection>인터페이스.</xref:System.Collections.ICollection> </xref:System.Windows.Forms.DataGridViewCellCollection>"
  syntax:
    content: int System.Collections.ICollection.Count { get; }
    return:
      type: System.Int32
      description: "에 있는 요소의 수는 <xref href=&quot;System.Windows.Forms.DataGridViewCellCollection&quot;> </xref>합니다."
  overload: System.Windows.Forms.DataGridViewCellCollection.System#Collections#ICollection#Count*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCellCollection.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  isEii: true
  parent: System.Windows.Forms.DataGridViewCellCollection
  langs:
  - csharp
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: DataGridViewCellCollection.System.Collections.ICollection.IsSynchronized
  fullName: System.Windows.Forms.DataGridViewCellCollection.System.Collections.ICollection.IsSynchronized
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "스레드로부터 안전한 컬렉션에 대 한 액세스가 동기화 되어 있는지 여부를 나타내는 값을 가져옵니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Windows.Forms.DataGridViewCellCollection>인스턴스로 캐스팅 되는 <xref:System.Collections.ICollection>인터페이스.</xref:System.Collections.ICollection> </xref:System.Windows.Forms.DataGridViewCellCollection>"
  syntax:
    content: bool System.Collections.ICollection.IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>모든 경우"
  overload: System.Windows.Forms.DataGridViewCellCollection.System#Collections#ICollection#IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCellCollection.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  isEii: true
  parent: System.Windows.Forms.DataGridViewCellCollection
  langs:
  - csharp
  name: System.Collections.ICollection.SyncRoot
  nameWithType: DataGridViewCellCollection.System.Collections.ICollection.SyncRoot
  fullName: System.Windows.Forms.DataGridViewCellCollection.System.Collections.ICollection.SyncRoot
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컬렉션에 대 한 액세스를 동기화 하는 데 사용할 수 있는 개체를 가져옵니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Windows.Forms.DataGridViewCellCollection>인스턴스로 캐스팅 되는 <xref:System.Collections.ICollection>인터페이스.</xref:System.Collections.ICollection> </xref:System.Windows.Forms.DataGridViewCellCollection>"
  syntax:
    content: object System.Collections.ICollection.SyncRoot { get; }
    return:
      type: System.Object
      description: "에 대 한 액세스를 동기화 하는 데 사용할 수 있는 개체는 <xref href=&quot;System.Windows.Forms.DataGridViewCellCollection&quot;> </xref>합니다."
  overload: System.Windows.Forms.DataGridViewCellCollection.System#Collections#ICollection#SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCellCollection.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Windows.Forms.DataGridViewCellCollection
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: DataGridViewCellCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Windows.Forms.DataGridViewCellCollection.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컬렉션을 반복 하는 열거자를 반환 합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Windows.Forms.DataGridViewCellCollection>인스턴스로 캐스팅 되는 <xref:System.Collections.IEnumerable>인터페이스.</xref:System.Collections.IEnumerable> </xref:System.Windows.Forms.DataGridViewCellCollection>"
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "<xref:System.Collections.IEnumerator>컬렉션을 반복에 사용할 수 있는.</xref:System.Collections.IEnumerator>"
  overload: System.Windows.Forms.DataGridViewCellCollection.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#Add(System.Object)
  id: System#Collections#IList#Add(System.Object)
  isEii: true
  parent: System.Windows.Forms.DataGridViewCellCollection
  langs:
  - csharp
  name: System.Collections.IList.Add(Object)
  nameWithType: DataGridViewCellCollection.System.Collections.IList.Add(Object)
  fullName: System.Windows.Forms.DataGridViewCellCollection.System.Collections.IList.Add(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컬렉션에 항목을 추가 합니다."
  remarks: "컨트롤에 행을 추가 하면이 메서드는 더 이상 유용 하므로 항상 포함 된 셀 수 컨트롤에서 열 수를 찾습니다.       이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Windows.Forms.DataGridViewCellCollection>인스턴스로 캐스팅 되는 <xref:System.Collections.IList>인터페이스.</xref:System.Collections.IList> </xref:System.Windows.Forms.DataGridViewCellCollection>"
  syntax:
    content: int IList.Add (object value);
    parameters:
    - id: value
      type: System.Object
      description: "<xref href=&quot;System.Windows.Forms.DataGridViewCell&quot;> </xref> 컬렉션에 추가 합니다."
    return:
      type: System.Int32
      description: "새 요소가 삽입 된 위치입니다."
  overload: System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#Add*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "<code>value</code>is not a <xref href=&quot;System.Windows.Forms.DataGridViewCell&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "이 소유 하는 행 <xref href=&quot;System.Windows.Forms.DataGridViewCellCollection&quot;> </xref> 에 이미 속해는 <xref href=&quot;System.Windows.Forms.DataGridView&quot;> </xref> 제어 합니다.       -또는- <code> value </code> 에 이미 속해 있는 셀을 나타내는 한 <xref href=&quot;System.Windows.Forms.DataGridViewRow&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#Clear
  id: System#Collections#IList#Clear
  isEii: true
  parent: System.Windows.Forms.DataGridViewCellCollection
  langs:
  - csharp
  name: System.Collections.IList.Clear()
  nameWithType: DataGridViewCellCollection.System.Collections.IList.Clear()
  fullName: System.Windows.Forms.DataGridViewCellCollection.System.Collections.IList.Clear()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컬렉션을 지웁니다."
  remarks: "컨트롤에 행을 추가 하면이 메서드는 더 이상 유용 하므로 항상 포함 된 셀 수 컨트롤에서 열 수를 찾습니다.       이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Windows.Forms.DataGridViewCellCollection>인스턴스로 캐스팅 되는 <xref:System.Collections.IList>인터페이스.</xref:System.Collections.IList> </xref:System.Windows.Forms.DataGridViewCellCollection>"
  syntax:
    content: void IList.Clear ();
    parameters: []
  overload: System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#Clear*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "이 소유 하는 행 <xref href=&quot;System.Windows.Forms.DataGridViewCellCollection&quot;> </xref> 에 이미 속해는 <xref href=&quot;System.Windows.Forms.DataGridView&quot;> </xref> 제어 합니다."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#Contains(System.Object)
  id: System#Collections#IList#Contains(System.Object)
  isEii: true
  parent: System.Windows.Forms.DataGridViewCellCollection
  langs:
  - csharp
  name: System.Collections.IList.Contains(Object)
  nameWithType: DataGridViewCellCollection.System.Collections.IList.Contains(Object)
  fullName: System.Windows.Forms.DataGridViewCellCollection.System.Collections.IList.Contains(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컬렉션에 지정된 된 값이 포함 되어 있는지 여부를 결정 합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Windows.Forms.DataGridViewCellCollection>인스턴스로 캐스팅 되는 <xref:System.Collections.IList>인터페이스.</xref:System.Collections.IList> </xref:System.Windows.Forms.DataGridViewCellCollection>"
  syntax:
    content: bool IList.Contains (object value);
    parameters:
    - id: value
      type: System.Object
      description: "찾을 개체의 <xref href=&quot;System.Windows.Forms.DataGridViewCellCollection&quot;> </xref>합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if the <code>value</code> is found in the <xref href=&quot;System.Windows.Forms.DataGridViewCellCollection&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#IndexOf(System.Object)
  id: System#Collections#IList#IndexOf(System.Object)
  isEii: true
  parent: System.Windows.Forms.DataGridViewCellCollection
  langs:
  - csharp
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: DataGridViewCellCollection.System.Collections.IList.IndexOf(Object)
  fullName: System.Windows.Forms.DataGridViewCellCollection.System.Collections.IList.IndexOf(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컬렉션에서 특정 항목의 인덱스를 결정합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Windows.Forms.DataGridViewCellCollection>인스턴스로 캐스팅 되는 <xref:System.Collections.IList>인터페이스.</xref:System.Collections.IList> </xref:System.Windows.Forms.DataGridViewCellCollection>"
  syntax:
    content: int IList.IndexOf (object value);
    parameters:
    - id: value
      type: System.Object
      description: "찾을 개체의 <xref href=&quot;System.Windows.Forms.DataGridViewCellCollection&quot;> </xref>합니다."
    return:
      type: System.Int32
      description: "값의 인덱스 경우; 목록에서 찾을 수 그렇지 않으면-1입니다."
  overload: System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  id: System#Collections#IList#Insert(System.Int32,System.Object)
  isEii: true
  parent: System.Windows.Forms.DataGridViewCellCollection
  langs:
  - csharp
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: DataGridViewCellCollection.System.Collections.IList.Insert(Int32,Object)
  fullName: System.Windows.Forms.DataGridViewCellCollection.System.Collections.IList.Insert(Int32,Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "항목을 컬렉션 내의 지정된 된 위치에 삽입 합니다."
  remarks: "컨트롤에 행을 추가 하면이 메서드는 더 이상 유용 하므로 항상 포함 된 셀 수 컨트롤에서 열 수를 찾습니다.       이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Windows.Forms.DataGridViewCellCollection>인스턴스로 캐스팅 되는 <xref:System.Collections.IList>인터페이스.</xref:System.Collections.IList> </xref:System.Windows.Forms.DataGridViewCellCollection>"
  syntax:
    content: void IList.Insert (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: "값을 삽입할&0;부터 시작 하는 인덱스입니다."
    - id: value
      type: System.Object
      description: "<xref href=&quot;System.Windows.Forms.DataGridViewCell&quot;> </xref> 는 IList.Insert 삽입 합니다."
  overload: System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#Insert*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "<code>value</code>is not a <xref href=&quot;System.Windows.Forms.DataGridViewCell&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "이 소유 하는 행 <xref href=&quot;System.Windows.Forms.DataGridViewCellCollection&quot;> </xref> 에 이미 속해는 <xref href=&quot;System.Windows.Forms.DataGridView&quot;> </xref> 제어 합니다.       -or-       <code>dataGridViewCell</code> already belongs to a <xref href=&quot;System.Windows.Forms.DataGridViewRow&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#IsFixedSize
  id: System#Collections#IList#IsFixedSize
  isEii: true
  parent: System.Windows.Forms.DataGridViewCellCollection
  langs:
  - csharp
  name: System.Collections.IList.IsFixedSize
  nameWithType: DataGridViewCellCollection.System.Collections.IList.IsFixedSize
  fullName: System.Windows.Forms.DataGridViewCellCollection.System.Collections.IList.IsFixedSize
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컬렉션의 크기가 고정 되어 있는지 여부를 나타내는 값을 가져옵니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Windows.Forms.DataGridViewCellCollection>인스턴스로 캐스팅 되는 <xref:System.Collections.IList>인터페이스.</xref:System.Collections.IList> </xref:System.Windows.Forms.DataGridViewCellCollection>"
  syntax:
    content: bool System.Collections.IList.IsFixedSize { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>모든 경우"
  overload: System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#IsFixedSize*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#IsReadOnly
  id: System#Collections#IList#IsReadOnly
  isEii: true
  parent: System.Windows.Forms.DataGridViewCellCollection
  langs:
  - csharp
  name: System.Collections.IList.IsReadOnly
  nameWithType: DataGridViewCellCollection.System.Collections.IList.IsReadOnly
  fullName: System.Windows.Forms.DataGridViewCellCollection.System.Collections.IList.IsReadOnly
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컬렉션의 크기가 고정 되어 있는지 여부를 나타내는 값을 가져옵니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Windows.Forms.DataGridViewCellCollection>인스턴스로 캐스팅 되는 <xref:System.Collections.IList>인터페이스.</xref:System.Collections.IList> </xref:System.Windows.Forms.DataGridViewCellCollection>"
  syntax:
    content: bool System.Collections.IList.IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>모든 경우"
  overload: System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#Item(System.Int32)
  id: System#Collections#IList#Item(System.Int32)
  isEii: true
  parent: System.Windows.Forms.DataGridViewCellCollection
  langs:
  - csharp
  name: System.Collections.IList.Item(Int32)
  nameWithType: DataGridViewCellCollection.System.Collections.IList.Item(Int32)
  fullName: System.Windows.Forms.DataGridViewCellCollection.System.Collections.IList.Item(Int32)
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "지정된 된 인덱스에 요소를 가져오거나 설정 합니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Windows.Forms.DataGridViewCellCollection>인스턴스로 캐스팅 되는 <xref:System.Collections.IList>인터페이스.</xref:System.Collections.IList> </xref:System.Windows.Forms.DataGridViewCellCollection>"
  syntax:
    content: object System.Collections.IList.Item[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "가져오거나 설정할 항목의 인덱스입니다."
    return:
      type: System.Object
      description: "<xref href=&quot;System.Windows.Forms.DataGridViewCell&quot;> </xref> 지정 된 인덱스입니다."
  overload: System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#Item*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "지정 된 값이이 속성을 설정 하지는 <xref href=&quot;System.Windows.Forms.DataGridViewCell&quot;> </xref>합니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "이 속성을 설정할 때 지정 된 값이 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "지정 된 셀이 속한 이미이 속성을 설정할 때는 <xref href=&quot;System.Windows.Forms.DataGridView&quot;> </xref> 제어 합니다.       -또는-지정 된 셀이 속한 이미이 속성을 설정할 때는 <xref href=&quot;System.Windows.Forms.DataGridViewRow&quot;> </xref>합니다."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>0 보다 작습니다.       -또는- <code>index</code> 가 셀 개수 보다 크거나 같은 컬렉션에 있습니다."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#Remove(System.Object)
  id: System#Collections#IList#Remove(System.Object)
  isEii: true
  parent: System.Windows.Forms.DataGridViewCellCollection
  langs:
  - csharp
  name: System.Collections.IList.Remove(Object)
  nameWithType: DataGridViewCellCollection.System.Collections.IList.Remove(Object)
  fullName: System.Windows.Forms.DataGridViewCellCollection.System.Collections.IList.Remove(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "컬렉션에서 맨 처음 발견 되는 특정 개체를 제거합니다."
  remarks: "컨트롤에 행을 추가 하면이 메서드는 더 이상 유용 하므로 항상 포함 된 셀 수 컨트롤에서 열 수를 찾습니다.       이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Windows.Forms.DataGridViewCellCollection>인스턴스로 캐스팅 되는 <xref:System.Collections.IList>인터페이스.</xref:System.Collections.IList> </xref:System.Windows.Forms.DataGridViewCellCollection>"
  syntax:
    content: void IList.Remove (object value);
    parameters:
    - id: value
      type: System.Object
      description: "<xref href=&quot;System.Windows.Forms.DataGridViewCell&quot;> </xref> 는 컬렉션에서 제거할 수 있습니다."
  overload: System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#Remove*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "<code>value</code>is not a <xref href=&quot;System.Windows.Forms.DataGridViewCell&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "이 소유 하는 행 <xref href=&quot;System.Windows.Forms.DataGridViewCellCollection&quot;> </xref> 에 이미 속해는 <xref href=&quot;System.Windows.Forms.DataGridView&quot;> </xref> 제어 합니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>cell</code>컬렉션에서 찾을 수 없습니다."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#RemoveAt(System.Int32)
  id: System#Collections#IList#RemoveAt(System.Int32)
  isEii: true
  parent: System.Windows.Forms.DataGridViewCellCollection
  langs:
  - csharp
  name: System.Collections.IList.RemoveAt(Int32)
  nameWithType: DataGridViewCellCollection.System.Collections.IList.RemoveAt(Int32)
  fullName: System.Windows.Forms.DataGridViewCellCollection.System.Collections.IList.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "제거는 <xref href=&quot;System.Windows.Forms.DataGridViewCell&quot;> </xref> 지정 된 인덱스입니다."
  remarks: "컨트롤에 행을 추가 하면이 메서드는 더 이상 유용 하므로 항상 포함 된 셀 수 컨트롤에서 열 수를 찾습니다.       이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Windows.Forms.DataGridViewCellCollection>인스턴스로 캐스팅 되는 <xref:System.Collections.IList>인터페이스.</xref:System.Collections.IList> </xref:System.Windows.Forms.DataGridViewCellCollection>"
  syntax:
    content: void IList.RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "제거할 대상이 되는 위치는 <xref href=&quot;System.Windows.Forms.DataGridViewCell&quot;> </xref>합니다."
  overload: System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#RemoveAt*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "이 소유 하는 행 <xref href=&quot;System.Windows.Forms.DataGridViewCellCollection&quot;> </xref> 에 이미 속해는 <xref href=&quot;System.Windows.Forms.DataGridView&quot;> </xref> 제어 합니다."
  platform:
  - net462
references:
- uid: System.Windows.Forms.BaseCollection
  isExternal: false
  name: System.Windows.Forms.BaseCollection
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidCastException
  isExternal: true
  name: System.InvalidCastException
- uid: System.Windows.Forms.DataGridViewCellCollection.#ctor(System.Windows.Forms.DataGridViewRow)
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: DataGridViewCellCollection(DataGridViewRow)
  nameWithType: DataGridViewCellCollection.DataGridViewCellCollection(DataGridViewRow)
  fullName: System.Windows.Forms.DataGridViewCellCollection.DataGridViewCellCollection(DataGridViewRow)
- uid: System.Windows.Forms.DataGridViewRow
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewRow
  nameWithType: DataGridViewRow
  fullName: System.Windows.Forms.DataGridViewRow
- uid: System.Windows.Forms.DataGridViewCellCollection.Add(System.Windows.Forms.DataGridViewCell)
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: Add(DataGridViewCell)
  nameWithType: DataGridViewCellCollection.Add(DataGridViewCell)
  fullName: System.Windows.Forms.DataGridViewCellCollection.Add(DataGridViewCell)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Forms.DataGridViewCell
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewCell
  nameWithType: DataGridViewCell
  fullName: System.Windows.Forms.DataGridViewCell
- uid: System.Windows.Forms.DataGridViewCellCollection.AddRange(System.Windows.Forms.DataGridViewCell[])
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: AddRange(DataGridViewCell[])
  nameWithType: DataGridViewCellCollection.AddRange(DataGridViewCell[])
  fullName: System.Windows.Forms.DataGridViewCellCollection.AddRange(DataGridViewCell[])
- uid: System.Windows.Forms.DataGridViewCell[]
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewCell
  nameWithType: DataGridViewCell
  fullName: System.Windows.Forms.DataGridViewCell[]
  spec.csharp:
  - uid: System.Windows.Forms.DataGridViewCell
    name: DataGridViewCell
    nameWithType: DataGridViewCell
    fullName: DataGridViewCell[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Forms.DataGridViewCellCollection.Clear
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: Clear()
  nameWithType: DataGridViewCellCollection.Clear()
  fullName: System.Windows.Forms.DataGridViewCellCollection.Clear()
- uid: System.Windows.Forms.DataGridViewCellCollection.CollectionChanged
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: CollectionChanged
  nameWithType: DataGridViewCellCollection.CollectionChanged
  fullName: System.Windows.Forms.DataGridViewCellCollection.CollectionChanged
- uid: System.ComponentModel.CollectionChangeEventHandler
  parent: System.ComponentModel
  isExternal: false
  name: CollectionChangeEventHandler
  nameWithType: CollectionChangeEventHandler
  fullName: System.ComponentModel.CollectionChangeEventHandler
- uid: System.Windows.Forms.DataGridViewCellCollection.Contains(System.Windows.Forms.DataGridViewCell)
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: Contains(DataGridViewCell)
  nameWithType: DataGridViewCellCollection.Contains(DataGridViewCell)
  fullName: System.Windows.Forms.DataGridViewCellCollection.Contains(DataGridViewCell)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.DataGridViewCellCollection.CopyTo(System.Windows.Forms.DataGridViewCell[],System.Int32)
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: CopyTo(DataGridViewCell[],Int32)
  nameWithType: DataGridViewCellCollection.CopyTo(DataGridViewCell[],Int32)
  fullName: System.Windows.Forms.DataGridViewCellCollection.CopyTo(DataGridViewCell[],Int32)
- uid: System.Windows.Forms.DataGridViewCellCollection.IndexOf(System.Windows.Forms.DataGridViewCell)
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: IndexOf(DataGridViewCell)
  nameWithType: DataGridViewCellCollection.IndexOf(DataGridViewCell)
  fullName: System.Windows.Forms.DataGridViewCellCollection.IndexOf(DataGridViewCell)
- uid: System.Windows.Forms.DataGridViewCellCollection.Insert(System.Int32,System.Windows.Forms.DataGridViewCell)
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: Insert(Int32,DataGridViewCell)
  nameWithType: DataGridViewCellCollection.Insert(Int32,DataGridViewCell)
  fullName: System.Windows.Forms.DataGridViewCellCollection.Insert(Int32,DataGridViewCell)
- uid: System.Windows.Forms.DataGridViewCellCollection.Item(System.Int32)
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: DataGridViewCellCollection.Item(Int32)
  fullName: System.Windows.Forms.DataGridViewCellCollection.Item(Int32)
- uid: System.Windows.Forms.DataGridViewCellCollection.Item(System.String)
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: Item(String)
  nameWithType: DataGridViewCellCollection.Item(String)
  fullName: System.Windows.Forms.DataGridViewCellCollection.Item(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Forms.DataGridViewCellCollection.List
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: List
  nameWithType: DataGridViewCellCollection.List
  fullName: System.Windows.Forms.DataGridViewCellCollection.List
- uid: System.Collections.ArrayList
  parent: System.Collections
  isExternal: false
  name: ArrayList
  nameWithType: ArrayList
  fullName: System.Collections.ArrayList
- uid: System.Windows.Forms.DataGridViewCellCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: OnCollectionChanged(CollectionChangeEventArgs)
  nameWithType: DataGridViewCellCollection.OnCollectionChanged(CollectionChangeEventArgs)
  fullName: System.Windows.Forms.DataGridViewCellCollection.OnCollectionChanged(CollectionChangeEventArgs)
- uid: System.ComponentModel.CollectionChangeEventArgs
  parent: System.ComponentModel
  isExternal: false
  name: CollectionChangeEventArgs
  nameWithType: CollectionChangeEventArgs
  fullName: System.ComponentModel.CollectionChangeEventArgs
- uid: System.Windows.Forms.DataGridViewCellCollection.Remove(System.Windows.Forms.DataGridViewCell)
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: Remove(DataGridViewCell)
  nameWithType: DataGridViewCellCollection.Remove(DataGridViewCell)
  fullName: System.Windows.Forms.DataGridViewCellCollection.Remove(DataGridViewCell)
- uid: System.Windows.Forms.DataGridViewCellCollection.RemoveAt(System.Int32)
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: DataGridViewCellCollection.RemoveAt(Int32)
  fullName: System.Windows.Forms.DataGridViewCellCollection.RemoveAt(Int32)
- uid: System.Windows.Forms.DataGridViewCellCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: DataGridViewCellCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Windows.Forms.DataGridViewCellCollection.System.Collections.ICollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Windows.Forms.DataGridViewCellCollection.System#Collections#ICollection#Count
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: System.Collections.ICollection.Count
  nameWithType: DataGridViewCellCollection.System.Collections.ICollection.Count
  fullName: System.Windows.Forms.DataGridViewCellCollection.System.Collections.ICollection.Count
- uid: System.Windows.Forms.DataGridViewCellCollection.System#Collections#ICollection#IsSynchronized
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: DataGridViewCellCollection.System.Collections.ICollection.IsSynchronized
  fullName: System.Windows.Forms.DataGridViewCellCollection.System.Collections.ICollection.IsSynchronized
- uid: System.Windows.Forms.DataGridViewCellCollection.System#Collections#ICollection#SyncRoot
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: DataGridViewCellCollection.System.Collections.ICollection.SyncRoot
  fullName: System.Windows.Forms.DataGridViewCellCollection.System.Collections.ICollection.SyncRoot
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Forms.DataGridViewCellCollection.System#Collections#IEnumerable#GetEnumerator
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: DataGridViewCellCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Windows.Forms.DataGridViewCellCollection.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#Add(System.Object)
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: System.Collections.IList.Add(Object)
  nameWithType: DataGridViewCellCollection.System.Collections.IList.Add(Object)
  fullName: System.Windows.Forms.DataGridViewCellCollection.System.Collections.IList.Add(Object)
- uid: System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#Clear
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: System.Collections.IList.Clear()
  nameWithType: DataGridViewCellCollection.System.Collections.IList.Clear()
  fullName: System.Windows.Forms.DataGridViewCellCollection.System.Collections.IList.Clear()
- uid: System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#Contains(System.Object)
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: System.Collections.IList.Contains(Object)
  nameWithType: DataGridViewCellCollection.System.Collections.IList.Contains(Object)
  fullName: System.Windows.Forms.DataGridViewCellCollection.System.Collections.IList.Contains(Object)
- uid: System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#IndexOf(System.Object)
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: DataGridViewCellCollection.System.Collections.IList.IndexOf(Object)
  fullName: System.Windows.Forms.DataGridViewCellCollection.System.Collections.IList.IndexOf(Object)
- uid: System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: DataGridViewCellCollection.System.Collections.IList.Insert(Int32,Object)
  fullName: System.Windows.Forms.DataGridViewCellCollection.System.Collections.IList.Insert(Int32,Object)
- uid: System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#IsFixedSize
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: DataGridViewCellCollection.System.Collections.IList.IsFixedSize
  fullName: System.Windows.Forms.DataGridViewCellCollection.System.Collections.IList.IsFixedSize
- uid: System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#IsReadOnly
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: System.Collections.IList.IsReadOnly
  nameWithType: DataGridViewCellCollection.System.Collections.IList.IsReadOnly
  fullName: System.Windows.Forms.DataGridViewCellCollection.System.Collections.IList.IsReadOnly
- uid: System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#Item(System.Int32)
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: System.Collections.IList.Item(Int32)
  nameWithType: DataGridViewCellCollection.System.Collections.IList.Item(Int32)
  fullName: System.Windows.Forms.DataGridViewCellCollection.System.Collections.IList.Item(Int32)
- uid: System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#Remove(System.Object)
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: System.Collections.IList.Remove(Object)
  nameWithType: DataGridViewCellCollection.System.Collections.IList.Remove(Object)
  fullName: System.Windows.Forms.DataGridViewCellCollection.System.Collections.IList.Remove(Object)
- uid: System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#RemoveAt(System.Int32)
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: System.Collections.IList.RemoveAt(Int32)
  nameWithType: DataGridViewCellCollection.System.Collections.IList.RemoveAt(Int32)
  fullName: System.Windows.Forms.DataGridViewCellCollection.System.Collections.IList.RemoveAt(Int32)
- uid: System.Windows.Forms.DataGridViewCellCollection.#ctor*
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: DataGridViewCellCollection
  nameWithType: DataGridViewCellCollection.DataGridViewCellCollection
- uid: System.Windows.Forms.DataGridViewCellCollection.Add*
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: Add
  nameWithType: DataGridViewCellCollection.Add
- uid: System.Windows.Forms.DataGridViewCellCollection.AddRange*
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: AddRange
  nameWithType: DataGridViewCellCollection.AddRange
- uid: System.Windows.Forms.DataGridViewCellCollection.Clear*
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: Clear
  nameWithType: DataGridViewCellCollection.Clear
- uid: System.Windows.Forms.DataGridViewCellCollection.Contains*
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: Contains
  nameWithType: DataGridViewCellCollection.Contains
- uid: System.Windows.Forms.DataGridViewCellCollection.CopyTo*
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: CopyTo
  nameWithType: DataGridViewCellCollection.CopyTo
- uid: System.Windows.Forms.DataGridViewCellCollection.IndexOf*
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: IndexOf
  nameWithType: DataGridViewCellCollection.IndexOf
- uid: System.Windows.Forms.DataGridViewCellCollection.Insert*
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: Insert
  nameWithType: DataGridViewCellCollection.Insert
- uid: System.Windows.Forms.DataGridViewCellCollection.Item*
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: Item
  nameWithType: DataGridViewCellCollection.Item
- uid: System.Windows.Forms.DataGridViewCellCollection.List*
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: List
  nameWithType: DataGridViewCellCollection.List
- uid: System.Windows.Forms.DataGridViewCellCollection.OnCollectionChanged*
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: OnCollectionChanged
  nameWithType: DataGridViewCellCollection.OnCollectionChanged
- uid: System.Windows.Forms.DataGridViewCellCollection.Remove*
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: Remove
  nameWithType: DataGridViewCellCollection.Remove
- uid: System.Windows.Forms.DataGridViewCellCollection.RemoveAt*
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: RemoveAt
  nameWithType: DataGridViewCellCollection.RemoveAt
- uid: System.Windows.Forms.DataGridViewCellCollection.System#Collections#ICollection#CopyTo*
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo
  nameWithType: DataGridViewCellCollection.System.Collections.ICollection.CopyTo
- uid: System.Windows.Forms.DataGridViewCellCollection.System#Collections#ICollection#Count*
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: System.Collections.ICollection.Count
  nameWithType: DataGridViewCellCollection.System.Collections.ICollection.Count
- uid: System.Windows.Forms.DataGridViewCellCollection.System#Collections#ICollection#IsSynchronized*
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: DataGridViewCellCollection.System.Collections.ICollection.IsSynchronized
- uid: System.Windows.Forms.DataGridViewCellCollection.System#Collections#ICollection#SyncRoot*
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: DataGridViewCellCollection.System.Collections.ICollection.SyncRoot
- uid: System.Windows.Forms.DataGridViewCellCollection.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: DataGridViewCellCollection.System.Collections.IEnumerable.GetEnumerator
- uid: System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#Add*
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: System.Collections.IList.Add
  nameWithType: DataGridViewCellCollection.System.Collections.IList.Add
- uid: System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#Clear*
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: System.Collections.IList.Clear
  nameWithType: DataGridViewCellCollection.System.Collections.IList.Clear
- uid: System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#Contains*
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: System.Collections.IList.Contains
  nameWithType: DataGridViewCellCollection.System.Collections.IList.Contains
- uid: System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#IndexOf*
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: System.Collections.IList.IndexOf
  nameWithType: DataGridViewCellCollection.System.Collections.IList.IndexOf
- uid: System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#Insert*
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: System.Collections.IList.Insert
  nameWithType: DataGridViewCellCollection.System.Collections.IList.Insert
- uid: System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#IsFixedSize*
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: DataGridViewCellCollection.System.Collections.IList.IsFixedSize
- uid: System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#IsReadOnly*
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: System.Collections.IList.IsReadOnly
  nameWithType: DataGridViewCellCollection.System.Collections.IList.IsReadOnly
- uid: System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#Item*
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: System.Collections.IList.Item
  nameWithType: DataGridViewCellCollection.System.Collections.IList.Item
- uid: System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#Remove*
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: System.Collections.IList.Remove
  nameWithType: DataGridViewCellCollection.System.Collections.IList.Remove
- uid: System.Windows.Forms.DataGridViewCellCollection.System#Collections#IList#RemoveAt*
  parent: System.Windows.Forms.DataGridViewCellCollection
  isExternal: false
  name: System.Collections.IList.RemoveAt
  nameWithType: DataGridViewCellCollection.System.Collections.IList.RemoveAt
