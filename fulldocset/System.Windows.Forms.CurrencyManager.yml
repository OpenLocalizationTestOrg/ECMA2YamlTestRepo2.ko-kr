### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.CurrencyManager
  id: CurrencyManager
  children:
  - System.Windows.Forms.CurrencyManager.AddNew
  - System.Windows.Forms.CurrencyManager.CancelCurrentEdit
  - System.Windows.Forms.CurrencyManager.CheckEmpty
  - System.Windows.Forms.CurrencyManager.Count
  - System.Windows.Forms.CurrencyManager.Current
  - System.Windows.Forms.CurrencyManager.EndCurrentEdit
  - System.Windows.Forms.CurrencyManager.finalType
  - System.Windows.Forms.CurrencyManager.GetItemProperties
  - System.Windows.Forms.CurrencyManager.GetListName(System.Collections.ArrayList)
  - System.Windows.Forms.CurrencyManager.ItemChanged
  - System.Windows.Forms.CurrencyManager.List
  - System.Windows.Forms.CurrencyManager.ListChanged
  - System.Windows.Forms.CurrencyManager.listposition
  - System.Windows.Forms.CurrencyManager.MetaDataChanged
  - System.Windows.Forms.CurrencyManager.OnCurrentChanged(System.EventArgs)
  - System.Windows.Forms.CurrencyManager.OnCurrentItemChanged(System.EventArgs)
  - System.Windows.Forms.CurrencyManager.OnItemChanged(System.Windows.Forms.ItemChangedEventArgs)
  - System.Windows.Forms.CurrencyManager.OnMetaDataChanged(System.EventArgs)
  - System.Windows.Forms.CurrencyManager.OnPositionChanged(System.EventArgs)
  - System.Windows.Forms.CurrencyManager.Position
  - System.Windows.Forms.CurrencyManager.Refresh
  - System.Windows.Forms.CurrencyManager.RemoveAt(System.Int32)
  - System.Windows.Forms.CurrencyManager.ResumeBinding
  - System.Windows.Forms.CurrencyManager.SuspendBinding
  - System.Windows.Forms.CurrencyManager.UpdateIsBinding
  langs:
  - csharp
  name: CurrencyManager
  nameWithType: CurrencyManager
  fullName: System.Windows.Forms.CurrencyManager
  type: Class
  summary: "목록을 관리 <xref href=&quot;System.Windows.Forms.Binding&quot;> </xref> 개체입니다."
  remarks: "CurrencyManager는 <xref:System.Windows.Forms.BindingManagerBase>클래스</xref:System.Windows.Forms.BindingManagerBase> 에서 파생 됩니다. <xref:System.Windows.Forms.BindingContext>CurrencyManager 또는 <xref:System.Windows.Forms.PropertyManager>.</xref:System.Windows.Forms.PropertyManager> 반환할를</xref:System.Windows.Forms.BindingContext> 사용 하 여 반환 되는 실제 개체 <xref:System.Windows.Forms.BindingContext.Item%2A> <xref:System.Windows.Forms.BindingContext>.</xref:System.Windows.Forms.BindingContext> 속성</xref:System.Windows.Forms.BindingContext.Item%2A> 에 전달 된 데이터 원본 및 데이터 멤버에 따라 다릅니다. 형식이 <xref:System.Windows.Forms.PropertyManager>.</xref:System.Windows.Forms.PropertyManager> 됩니다 (개체의 목록) 하는 대신 하나의 속성만 반환할 수 있는 개체 데이터 원본이 사용 하는 경우 예를 들어, 지정 하는 경우는 <xref:System.Windows.Forms.TextBox>데이터 원본으로는 <xref:System.Windows.Forms.PropertyManager>반환 됩니다.</xref:System.Windows.Forms.PropertyManager> </xref:System.Windows.Forms.TextBox> 반면에 데이터 원본이 개체를 구현 하는 경우는 <xref:System.Collections.IList>, <xref:System.ComponentModel.IListSource>, 또는 <xref:System.ComponentModel.IBindingList>인터페이스가 CurrencyManager 반환 됩니다.</xref:System.ComponentModel.IBindingList> </xref:System.ComponentModel.IListSource> </xref:System.Collections.IList>       <xref:System.Windows.Forms.BindingManagerBase.Current%2A>속성 기본 목록의 현재 항목을 반환 합니다.</xref:System.Windows.Forms.BindingManagerBase.Current%2A> 현재 항목을 변경 하려면는 <xref:System.Windows.Forms.BindingManagerBase.Position%2A>속성을 새 값입니다.</xref:System.Windows.Forms.BindingManagerBase.Position%2A> 값 0 보다 커야 하며의 값 보다 작아야 합니다.는 <xref:System.Windows.Forms.BindingManagerBase.Count%2A>속성.</xref:System.Windows.Forms.BindingManagerBase.Count%2A>       기본 데이터 원본 구현 하는 경우는 <xref:System.ComponentModel.IBindingList>인터페이스 및 <xref:System.ComponentModel.IBindingList.AllowNew%2A>속성이로 설정 되어 `true`를 사용할 수 있습니다는 <xref:System.Windows.Forms.CurrencyManager.AddNew%2A>메서드.</xref:System.Windows.Forms.CurrencyManager.AddNew%2A> </xref:System.ComponentModel.IBindingList.AllowNew%2A> </xref:System.ComponentModel.IBindingList>"
  example:
  - "The following code example binds a <xref:System.Windows.Forms.TextBox> control to a column in a <xref:System.Data.DataTable>, gets the CurrencyManager for the binding, and sets its position.  \n  \n [!code-cs[Classic CurrencyManager Example#1](~/add/codesnippet/csharp/t-system.windows.forms.c_31_1.cs)]\n [!code-cpp[Classic CurrencyManager Example#1](~/add/codesnippet/cpp/t-system.windows.forms.c_31_1.cpp)]\n [!code-vb[Classic CurrencyManager Example#1](~/add/codesnippet/visualbasic/t-system.windows.forms.c_31_1.vb)]"
  syntax:
    content: 'public class CurrencyManager : System.Windows.Forms.BindingManagerBase'
  inheritance:
  - System.Object
  - System.Windows.Forms.BindingManagerBase
  implements: []
  inheritedMembers:
  - System.Windows.Forms.BindingManagerBase.BindingComplete
  - System.Windows.Forms.BindingManagerBase.Bindings
  - System.Windows.Forms.BindingManagerBase.CurrentChanged
  - System.Windows.Forms.BindingManagerBase.CurrentItemChanged
  - System.Windows.Forms.BindingManagerBase.DataError
  - System.Windows.Forms.BindingManagerBase.GetItemProperties(System.Collections.ArrayList,System.Collections.ArrayList)
  - System.Windows.Forms.BindingManagerBase.GetItemProperties(System.Type,System.Int32,System.Collections.ArrayList,System.Collections.ArrayList)
  - System.Windows.Forms.BindingManagerBase.IsBindingSuspended
  - System.Windows.Forms.BindingManagerBase.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)
  - System.Windows.Forms.BindingManagerBase.onCurrentChangedHandler
  - System.Windows.Forms.BindingManagerBase.OnDataError(System.Exception)
  - System.Windows.Forms.BindingManagerBase.onPositionChangedHandler
  - System.Windows.Forms.BindingManagerBase.PositionChanged
  - System.Windows.Forms.BindingManagerBase.PullData
  - System.Windows.Forms.BindingManagerBase.PushData
  platform:
  - net462
- uid: System.Windows.Forms.CurrencyManager.AddNew
  id: AddNew
  parent: System.Windows.Forms.CurrencyManager
  langs:
  - csharp
  name: AddNew()
  nameWithType: CurrencyManager.AddNew()
  fullName: System.Windows.Forms.CurrencyManager.AddNew()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "내부 목록에 새 항목을 추가 합니다."
  remarks: "데이터 원본 구현 하는 경우에이 메서드는 지원의 <xref:System.ComponentModel.IBindingList>인터페이스와 데이터 소스 행을 추가할 수 있습니다 (<xref:System.ComponentModel.IBindingList.AllowNew%2A> 은 `true`).</xref:System.ComponentModel.IBindingList.AllowNew%2A> </xref:System.ComponentModel.IBindingList>      > [!NOTE] >이 속성은 복합 바인딩된 컨트롤을와 같은 허용 하도록 설계 된는 <xref:System.Windows.Forms.DataGrid>컨트롤 목록에 새 항목을 추가 합니다.</xref:System.Windows.Forms.DataGrid>       <xref:System.Windows.Forms.CurrencyManager>.</xref:System.Windows.Forms.CurrencyManager> 를 통합 하는 사용자 고유의 컨트롤을 만드는 경우에이 속성을 일반적으로 사용 그렇지 않은 경우 추가 하는 <xref:System.Data.DataView> <xref:System.Data.DataView.AddNew%2A?displayProperty=fullName> <xref:System.Data.DataView>클래스</xref:System.Data.DataView> 의 메서드</xref:System.Data.DataView.AddNew%2A?displayProperty=fullName> 를 사용 하 여</xref:System.Data.DataView> 데이터 원본이 있으면 항목 데이터 원본이 있으면는 <xref:System.Data.DataTable>를 사용 하 여는 <xref:System.Data.DataTable.NewRow%2A>메서드 <xref:System.Data.DataRowCollection>.</xref:System.Data.DataRowCollection> 에 행을 추가할 및</xref:System.Data.DataTable.NewRow%2A> </xref:System.Data.DataTable>"
  example:
  - "The following code example adds a new item to the list with the AddNew method.  \n  \n [!code-cpp[Classic CurrencyManager.AddNew Example#1](~/add/codesnippet/cpp/m-system.windows.forms.c_53_1.cpp)]\n [!code-cs[Classic CurrencyManager.AddNew Example#1](~/add/codesnippet/csharp/m-system.windows.forms.c_53_1.cs)]\n [!code-vb[Classic CurrencyManager.AddNew Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_53_1.vb)]"
  syntax:
    content: public override void AddNew ();
    parameters: []
  overload: System.Windows.Forms.CurrencyManager.AddNew*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "내부 데이터 소스를 구현 하지 않는 <xref href=&quot;System.ComponentModel.IBindingList&quot;> </xref>, 데이터 소스는 사용자가을 읽기 전용 또는 고정 크기의 행을 추가 하려고 하기 때문에 예외를 throw 했는지 또는 <xref href=&quot;System.Data.DataView&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.Windows.Forms.CurrencyManager.CancelCurrentEdit
  id: CancelCurrentEdit
  parent: System.Windows.Forms.CurrencyManager
  langs:
  - csharp
  name: CancelCurrentEdit()
  nameWithType: CurrencyManager.CancelCurrentEdit()
  fullName: System.Windows.Forms.CurrencyManager.CancelCurrentEdit()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "현재 편집 작업을 취소합니다."
  remarks: "데이터 소스에 포함 된 개체를 구현 하는 경우에이 메서드는 지원의 <xref:System.ComponentModel.IEditableObject>인터페이스.</xref:System.ComponentModel.IEditableObject> 데이터 원본에 포함 된 개체를 구현 하지 않는 경우는 <xref:System.ComponentModel.IEditableObject>인터페이스에는 데이터 변경 내용이 삭제 되지 것입니다.</xref:System.ComponentModel.IEditableObject>      > [!NOTE] >이 속성은 같은 복잡 한 데이터 바인딩된 컨트롤에서 사용 하도록 설계 된는 <xref:System.Windows.Forms.DataGrid>편집 취소를 제어 합니다.</xref:System.Windows.Forms.DataGrid> 예를 들어 사용자가 ESC 키를 누르면 CancelCurrentEdit 메서드는 <xref:System.Windows.Forms.CurrencyManager> <xref:System.Windows.Forms.DataGrid>.</xref:System.Windows.Forms.DataGrid> </xref:System.Windows.Forms.CurrencyManager> 에 이 기능을 필요로 하는 컨트롤을 만드는 경우가 아니면에이 메서드를 사용 해야 합니다. 대신 <xref:System.Data.DataRowView.CancelEdit%2A> <xref:System.Data.DataRowView>클래스</xref:System.Data.DataRowView> 의 메서드</xref:System.Data.DataRowView.CancelEdit%2A> 를 사용합니다"
  example:
  - "The following code example uses the CancelCurrentEdit when the user presses the ESC key.  \n  \n [!code-cs[Classic CurrencyManager.CancelCurrentEdit Example#1](~/add/codesnippet/csharp/m-system.windows.forms.c_77_1.cs)]\n [!code-vb[Classic CurrencyManager.CancelCurrentEdit Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_77_1.vb)]\n [!code-cpp[Classic CurrencyManager.CancelCurrentEdit Example#1](~/add/codesnippet/cpp/m-system.windows.forms.c_77_1.cpp)]"
  syntax:
    content: public override void CancelCurrentEdit ();
    parameters: []
  overload: System.Windows.Forms.CurrencyManager.CancelCurrentEdit*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.CurrencyManager.CheckEmpty
  id: CheckEmpty
  parent: System.Windows.Forms.CurrencyManager
  langs:
  - csharp
  name: CheckEmpty()
  nameWithType: CurrencyManager.CheckEmpty()
  fullName: System.Windows.Forms.CurrencyManager.CheckEmpty()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "목록에 없으면 또는 목록이 비어 있는 경우 예외를 throw 합니다."
  syntax:
    content: protected void CheckEmpty ();
    parameters: []
  overload: System.Windows.Forms.CurrencyManager.CheckEmpty*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "목록에 없으면 또는 목록이 비어 있습니다."
  platform:
  - net462
- uid: System.Windows.Forms.CurrencyManager.Count
  id: Count
  parent: System.Windows.Forms.CurrencyManager
  langs:
  - csharp
  name: Count
  nameWithType: CurrencyManager.Count
  fullName: System.Windows.Forms.CurrencyManager.Count
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "목록의 항목 수를 가져옵니다."
  remarks: "목록의 끝에 도달한 경우를 확인 하려면 count 속성을 사용 합니다. 때문에 <xref:System.Windows.Forms.CurrencyManager>항목을 목록의 끝의 0부터 시작 배열은 항상 유지 개수에서 1을 뺀.</xref:System.Windows.Forms.CurrencyManager>"
  example:
  - "The following code example iterates through the list until the final item, determined by the Count property, is reached.  \n  \n [!code-cs[Classic CurrencyManager.Count Example#1](~/add/codesnippet/csharp/p-system.windows.forms.c_28_1.cs)]\n [!code-cpp[Classic CurrencyManager.Count Example#1](~/add/codesnippet/cpp/p-system.windows.forms.c_28_1.cpp)]\n [!code-vb[Classic CurrencyManager.Count Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.c_28_1.vb)]"
  syntax:
    content: public override int Count { get; }
    return:
      type: System.Int32
      description: "목록에 있는 항목의 수입니다."
  overload: System.Windows.Forms.CurrencyManager.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.CurrencyManager.Current
  id: Current
  parent: System.Windows.Forms.CurrencyManager
  langs:
  - csharp
  name: Current
  nameWithType: CurrencyManager.Current
  fullName: System.Windows.Forms.CurrencyManager.Current
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "목록의 현재 항목을 가져옵니다."
  remarks: "현재 항목을 얻으려면 잘못 캐스팅 하기 위해 해당 데이터 형식을 알아야 합니다. 예를 들어 데이터 소스는 <xref:System.Data.DataView>또는 <xref:System.Data.DataTable>, 현재 항목으로 캐스팅 해야는 <xref:System.Data.DataRowView>개체입니다.</xref:System.Data.DataRowView> </xref:System.Data.DataTable> </xref:System.Data.DataView>"
  example:
  - "The following code example uses the Current property to print the `ContactName` field for the current item in the list.  \n  \n [!code-cs[Classic CurrencyManager.Current Example#1](~/add/codesnippet/csharp/p-system.windows.forms.c_57_1.cs)]\n [!code-vb[Classic CurrencyManager.Current Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.c_57_1.vb)]\n [!code-cpp[Classic CurrencyManager.Current Example#1](~/add/codesnippet/cpp/p-system.windows.forms.c_57_1.cpp)]"
  syntax:
    content: public override object Current { get; }
    return:
      type: System.Object
      description: "<xref:System.Object>.</xref:System.Object> 형식의 목록 항목"
  overload: System.Windows.Forms.CurrencyManager.Current*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.CurrencyManager.EndCurrentEdit
  id: EndCurrentEdit
  parent: System.Windows.Forms.CurrencyManager
  langs:
  - csharp
  name: EndCurrentEdit()
  nameWithType: CurrencyManager.EndCurrentEdit()
  fullName: System.Windows.Forms.CurrencyManager.EndCurrentEdit()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "현재 편집 작업을 종료합니다."
  remarks: "데이터 소스에 포함 된 개체를 구현 하는 경우에이 메서드는 지원의 <xref:System.ComponentModel.IEditableObject>또는 <xref:System.ComponentModel.ICancelAddNew>인터페이스.</xref:System.ComponentModel.ICancelAddNew> </xref:System.ComponentModel.IEditableObject>      > [!NOTE] >이 속성은 같은 복잡 한 데이터 바인딩된 컨트롤에서 사용 하도록 설계 된는 <xref:System.Windows.Forms.DataGridView>컨트롤.</xref:System.Windows.Forms.DataGridView> 이 기능을 필요로 하는 컨트롤을 만드는 경우가 아니면에이 메서드를 사용 해야 합니다. 대신, 데이터 원본이 있으면 중 하나는 <xref:System.Data.DataView> <xref:System.Data.DataTable> <xref:System.Data.DataRowView.EndEdit%2A> <xref:System.Data.DataRowView>클래스</xref:System.Data.DataRowView> 의 메서드</xref:System.Data.DataRowView.EndEdit%2A> 를 사용 하 여,</xref:System.Data.DataTable> 또는</xref:System.Data.DataView>"
  example:
  - "The following code example demonstrates how to use the EndCurrentEdit method.  \n  \n [!code-cpp[Classic CurrencyManager.EndCurrentEdit Example#1](~/add/codesnippet/cpp/m-system.windows.forms.c_109_1.cpp)]\n [!code-vb[Classic CurrencyManager.EndCurrentEdit Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_109_1.vb)]\n [!code-cs[Classic CurrencyManager.EndCurrentEdit Example#1](~/add/codesnippet/csharp/m-system.windows.forms.c_109_1.cs)]"
  syntax:
    content: public override void EndCurrentEdit ();
    parameters: []
  overload: System.Windows.Forms.CurrencyManager.EndCurrentEdit*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.CurrencyManager.finalType
  id: finalType
  parent: System.Windows.Forms.CurrencyManager
  langs:
  - csharp
  name: finalType
  nameWithType: CurrencyManager.finalType
  fullName: System.Windows.Forms.CurrencyManager.finalType
  type: Field
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "목록의 데이터 형식을 지정합니다."
  syntax:
    content: protected Type finalType;
    return:
      type: System.Type
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.CurrencyManager.GetItemProperties
  id: GetItemProperties
  parent: System.Windows.Forms.CurrencyManager
  langs:
  - csharp
  name: GetItemProperties()
  nameWithType: CurrencyManager.GetItemProperties()
  fullName: System.Windows.Forms.CurrencyManager.GetItemProperties()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "내부 목록에 대 한 속성 설명자 컬렉션을 가져옵니다."
  remarks: "<xref:System.ComponentModel.PropertyDescriptorCollection>에 대 한는 <xref:System.Windows.Forms.CurrencyManager>목록에서 열을 지정 하는 데 사용 됩니다.</xref:System.Windows.Forms.CurrencyManager> </xref:System.ComponentModel.PropertyDescriptorCollection>"
  example:
  - "The following code example uses the GetItemProperties method to return a <xref:System.ComponentModel.PropertyDescriptorCollection> for a <xref:System.Windows.Forms.BindingManagerBase>. The example then prints out the <xref:System.ComponentModel.MemberDescriptor.Name%2A> and <xref:System.ComponentModel.PropertyDescriptor.PropertyType%2A> of each <xref:System.ComponentModel.PropertyDescriptor> in the collection.  \n  \n [!code-cs[Classic CurrencyManager.GetItemProperties Example#1](~/add/codesnippet/csharp/m-system.windows.forms.c_97_1.cs)]\n [!code-cpp[Classic CurrencyManager.GetItemProperties Example#1](~/add/codesnippet/cpp/m-system.windows.forms.c_97_1.cpp)]\n [!code-vb[Classic CurrencyManager.GetItemProperties Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_97_1.vb)]"
  syntax:
    content: public override System.ComponentModel.PropertyDescriptorCollection GetItemProperties ();
    parameters: []
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "A <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref> 목록에 대 한 합니다."
  overload: System.Windows.Forms.CurrencyManager.GetItemProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.CurrencyManager.GetListName(System.Collections.ArrayList)
  id: GetListName(System.Collections.ArrayList)
  parent: System.Windows.Forms.CurrencyManager
  langs:
  - csharp
  name: GetListName(ArrayList)
  nameWithType: CurrencyManager.GetListName(ArrayList)
  fullName: System.Windows.Forms.CurrencyManager.GetListName(ArrayList)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "지정한 바인딩된 속성 집합을 사용 하 여 바인딩에 대 한 데이터를 제공 하는 목록 이름을 가져옵니다."
  remarks: "찾기가 성공 하려면 GetListName 방법의 경우 기본 목록 <xref:System.ComponentModel.ITypedList>.</xref:System.ComponentModel.ITypedList> 형식 이어야 합니다."
  syntax:
    content: protected override string GetListName (System.Collections.ArrayList listAccessors);
    parameters:
    - id: listAccessors
      type: System.Collections.ArrayList
      description: "<xref href=&quot;System.Collections.ArrayList&quot;> </xref> 속성을 데이터 원본에서 찾을 수 있습니다."
    return:
      type: System.String
      description: "성공 하면는 <xref:System.String>고, 그렇지 않으면 바인딩에 대 한 데이터를 제공 하는 목록 이름을 포함 하는 <xref:System.String>문자열.</xref:System.String> </xref:System.String>"
  overload: System.Windows.Forms.CurrencyManager.GetListName*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.CurrencyManager.ItemChanged
  id: ItemChanged
  parent: System.Windows.Forms.CurrencyManager
  langs:
  - csharp
  name: ItemChanged
  nameWithType: CurrencyManager.ItemChanged
  fullName: System.Windows.Forms.CurrencyManager.ItemChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "현재 항목이 변경 되 면 발생 합니다."
  remarks: "사용자를 호출할 때 ItemChanged 이벤트가 발생 하는 <xref:System.Windows.Forms.BindingManagerBase.ResumeBinding%2A>또는 <xref:System.Windows.Forms.BindingManagerBase.SuspendBinding%2A>메서드.</xref:System.Windows.Forms.BindingManagerBase.SuspendBinding%2A> </xref:System.Windows.Forms.BindingManagerBase.ResumeBinding%2A>       ItemChanged 이벤트에는 다른 방법으로 항목 자체가 변경 된 경우에 발생 합니다. 예를 들어 항목의 값 42 10에서 변경 되 면 이벤트가 발생 합니다. 와 일치 하지 않습니다이 <xref:System.Windows.Forms.BindingManagerBase.PositionChanged>새 항목에는 항목이 변경 되어 있는 이벤트입니다.</xref:System.Windows.Forms.BindingManagerBase.PositionChanged>       이 이벤트는 기본 데이터가 변경 하는 경우에 발생 합니다. 예를 들어, 값을 변경 하는 경우는 <xref:System.Data.DataRowView>, ItemChanged 이벤트가 발생 합니다.</xref:System.Data.DataRowView>      > [!NOTE] >를 사용 하는 사용자 고유의 컨트롤을 만들려는 경우에 <xref:System.Windows.Forms.CurrencyManager>, 사용할지는 <xref:System.ComponentModel.IBindingList.ListChanged?displayProperty=fullName>ItemChanged 이벤트 대신.</xref:System.ComponentModel.IBindingList.ListChanged?displayProperty=fullName> </xref:System.Windows.Forms.CurrencyManager> <xref:System.ComponentModel.ListChangedEventArgs.ListChangedType%2A>의 속성은 <xref:System.ComponentModel.ListChangedEventArgs>발생 한 동작의 유형을 확인할 수 있습니다.</xref:System.ComponentModel.ListChangedEventArgs> </xref:System.ComponentModel.ListChangedEventArgs.ListChangedType%2A>       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example adds event handlers for the ItemChanged and <xref:System.Windows.Forms.BindingManagerBase.PositionChanged> events.  \n  \n [!code-cpp[Classic CurrencyManager.ItemChanged Example#1](~/add/codesnippet/cpp/e-system.windows.forms.c_44_1.cpp)]\n [!code-vb[Classic CurrencyManager.ItemChanged Example#1](~/add/codesnippet/visualbasic/e-system.windows.forms.c_44_1.vb)]\n [!code-cs[Classic CurrencyManager.ItemChanged Example#1](~/add/codesnippet/csharp/e-system.windows.forms.c_44_1.cs)]"
  syntax:
    content: public event System.Windows.Forms.ItemChangedEventHandler ItemChanged;
    return:
      type: System.Windows.Forms.ItemChangedEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.CurrencyManager.List
  id: List
  parent: System.Windows.Forms.CurrencyManager
  langs:
  - csharp
  name: List
  nameWithType: CurrencyManager.List
  fullName: System.Windows.Forms.CurrencyManager.List
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "이 대 한 목록을 가져옵니다 <xref href=&quot;System.Windows.Forms.CurrencyManager&quot;> </xref>합니다."
  remarks: "목록 속성에서 반환 된 개체를 구현 하는 형식으로 캐스팅 될 수는 <xref:System.Collections.IList>인터페이스.</xref:System.Collections.IList> 이 일반적으로 사용 됩니다 기본 목록의 형식을 확인할 수 있습니다. 예를 들어 사용자는 데이터 바인딩된은 <xref:System.Data.DataSet>, 기본 목록이 <xref:System.Data.DataView>(구현 하는 <xref:System.Collections.IList>).</xref:System.Collections.IList> </xref:System.Data.DataView> </xref:System.Data.DataSet> (이것은 전체 목록이 아님) 인터페이스를 구현 하는 다른 클래스에는 <xref:System.Array>, <xref:System.Collections.ArrayList>, 및 <xref:System.Collections.CollectionBase>.</xref:System.Collections.CollectionBase> </xref:System.Collections.ArrayList> </xref:System.Array>       구현 하는 클래스에 따라 달라 집니다 목록 속성을 사용 하는 방법의 <xref:System.Collections.IList>인터페이스.</xref:System.Collections.IList> 예를 들어 목록의 이름을 확인 하려면 목록 속성을 사용할 수 있습니다. 데이터 원본 구현 하는 경우는 <xref:System.ComponentModel.ITypedList>사용할 수 있습니다 인터페이스는 <xref:System.ComponentModel.ITypedList.GetListName%2A>현재 테이블의 이름을 반환 하는 메서드.</xref:System.ComponentModel.ITypedList.GetListName%2A> </xref:System.ComponentModel.ITypedList> 이 C# 코드 아래에 표시 됩니다.```c#   private void PrintCurrentListName(DataGrid myDataGrid){       CurrencyManager myCM = (CurrencyManager)       BindingContext[myDataGrid.DataSource, myDataGrid.DataMember];       IList myList = myCM.List;       ITypedList thisList = (ITypedList) myList;       Console.WriteLine(thisList.GetListName(null));    }   ```"
  example:
  - "The following code example allows users to edit a set of records, but not add any new ones. In the <xref:System.Windows.Forms.DataGrid.Navigate> event of a <xref:System.Windows.Forms.DataGrid> control, the <xref:System.Collections.IList> returned by the List property is cast to a <xref:System.Data.DataView> variable. The <xref:System.Data.DataView.AllowNew%2A> property of the <xref:System.Data.DataView> is set to `false`.  \n  \n [!code-cs[CurrencyManager.List Example#1](~/add/codesnippet/csharp/p-system.windows.forms.c_107_1.cs)]\n [!code-cpp[CurrencyManager.List Example#1](~/add/codesnippet/cpp/p-system.windows.forms.c_107_1.cpp)]\n [!code-vb[CurrencyManager.List Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.c_107_1.vb)]"
  syntax:
    content: public System.Collections.IList List { get; }
    return:
      type: System.Collections.IList
      description: "<xref:System.Collections.IList>목록이 포함 된.</xref:System.Collections.IList>"
  overload: System.Windows.Forms.CurrencyManager.List*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.CurrencyManager.ListChanged
  id: ListChanged
  parent: System.Windows.Forms.CurrencyManager
  langs:
  - csharp
  name: ListChanged
  nameWithType: CurrencyManager.ListChanged
  fullName: System.Windows.Forms.CurrencyManager.ListChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "목록에서 항목 또는 목록 변경 될 때 발생 합니다."
  remarks: "ListChanged 이벤트에 의해 throw 되는 <xref:System.Windows.Forms.CurrencyManager>항목에 변경 될 때와 같은 방법을 사용 하 여 클래스 <xref:System.Windows.Forms.CurrencyManager.EndCurrentEdit%2A>, <xref:System.Windows.Forms.CurrencyManager.CancelCurrentEdit%2A>, 및 <xref:System.Windows.Forms.CurrencyManager.Refresh%2A>.</xref:System.Windows.Forms.CurrencyManager.Refresh%2A> </xref:System.Windows.Forms.CurrencyManager.CancelCurrentEdit%2A> </xref:System.Windows.Forms.CurrencyManager.EndCurrentEdit%2A> </xref:System.Windows.Forms.CurrencyManager> 이 이벤트는 구현 하는 경우 데이터 원본을 직접 편집 되는 경우에 발생할 수 있습니다는 <xref:System.ComponentModel.IBindingListView>인터페이스.</xref:System.ComponentModel.IBindingListView>       연결 된 `OnListChanged` 메서드는이 클래스의 private 메서드가 있습니다.       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the ListChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.CurrencyManager> named `CurrencyManager1`. Then ensure that the event handler is associated with the ListChanged event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#192](~/add/codesnippet/csharp/e-system.windows.forms.c_59_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#192](~/add/codesnippet/visualbasic/e-system.windows.forms.c_59_1.vb)]"
  syntax:
    content: public event System.ComponentModel.ListChangedEventHandler ListChanged;
    return:
      type: System.ComponentModel.ListChangedEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.CurrencyManager.listposition
  id: listposition
  parent: System.Windows.Forms.CurrencyManager
  langs:
  - csharp
  name: listposition
  nameWithType: CurrencyManager.listposition
  fullName: System.Windows.Forms.CurrencyManager.listposition
  type: Field
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "현재 위치를 지정 된 <xref href=&quot;System.Windows.Forms.CurrencyManager&quot;> </xref> 목록에 있습니다."
  remarks: "하는 경우의 값은 <xref:System.Windows.Forms.CurrencyManager.Count%2A>속성이 0 보다 크면, listposition 필드는 0 사이의 숫자 및 <xref:System.Windows.Forms.CurrencyManager.Count%2A>1을 뺀 값입니다.</xref:System.Windows.Forms.CurrencyManager.Count%2A> </xref:System.Windows.Forms.CurrencyManager.Count%2A> 경우 <xref:System.Windows.Forms.CurrencyManager.Count%2A>은 0, listposition은-1.</xref:System.Windows.Forms.CurrencyManager.Count%2A>"
  syntax:
    content: protected int listposition;
    return:
      type: System.Int32
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.CurrencyManager.MetaDataChanged
  id: MetaDataChanged
  parent: System.Windows.Forms.CurrencyManager
  langs:
  - csharp
  name: MetaDataChanged
  nameWithType: CurrencyManager.MetaDataChanged
  fullName: System.Windows.Forms.CurrencyManager.MetaDataChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 경우의 메타 데이터는 <xref:System.Windows.Forms.CurrencyManager.List*>변경 되었습니다.</xref:System.Windows.Forms.CurrencyManager.List*>"
  remarks: "<xref:System.Windows.Forms.CurrencyManager.List%2A>기본 <xref:System.Windows.Forms.Binding.DataSource%2A?displayProperty=fullName>.</xref:System.Windows.Forms.Binding.DataSource%2A?displayProperty=fullName> 의 스키마 구성</xref:System.Windows.Forms.CurrencyManager.List%2A> 의 메타 데이터 MetaDataChanged 이벤트는 해당 스키마가 변경 되었을 때 발생 합니다. 예를 들어 MetaDataChanged는 이벤트가 <xref:System.Data.DataColumn> <xref:System.Data.DataTable>.</xref:System.Data.DataTable> 에 프로그래밍 방식으로 추가 되</xref:System.Data.DataColumn> 면       이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트](~/add/includes/ajax-current-ext-md.md)합니다."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the MetaDataChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.CurrencyManager> named `CurrencyManager1`. Then ensure that the event handler is associated with the MetaDataChanged event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#193](~/add/codesnippet/csharp/e-system.windows.forms.c_76_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#193](~/add/codesnippet/visualbasic/e-system.windows.forms.c_76_1.vb)]"
  syntax:
    content: public event EventHandler MetaDataChanged;
    return:
      type: System.EventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.CurrencyManager.OnCurrentChanged(System.EventArgs)
  id: OnCurrentChanged(System.EventArgs)
  parent: System.Windows.Forms.CurrencyManager
  langs:
  - csharp
  name: OnCurrentChanged(EventArgs)
  nameWithType: CurrencyManager.OnCurrentChanged(EventArgs)
  fullName: System.Windows.Forms.CurrencyManager.OnCurrentChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.BindingManagerBase.CurrentChanged&quot;> </xref> 이벤트입니다."
  syntax:
    content: protected override void OnCurrentChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Windows.Forms.CurrencyManager.OnCurrentChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.CurrencyManager.OnCurrentItemChanged(System.EventArgs)
  id: OnCurrentItemChanged(System.EventArgs)
  parent: System.Windows.Forms.CurrencyManager
  langs:
  - csharp
  name: OnCurrentItemChanged(EventArgs)
  nameWithType: CurrencyManager.OnCurrentItemChanged(EventArgs)
  fullName: System.Windows.Forms.CurrencyManager.OnCurrentItemChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.BindingManagerBase.CurrentItemChanged&quot;> </xref> 이벤트입니다."
  syntax:
    content: protected override void OnCurrentItemChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Windows.Forms.CurrencyManager.OnCurrentItemChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.CurrencyManager.OnItemChanged(System.Windows.Forms.ItemChangedEventArgs)
  id: OnItemChanged(System.Windows.Forms.ItemChangedEventArgs)
  parent: System.Windows.Forms.CurrencyManager
  langs:
  - csharp
  name: OnItemChanged(ItemChangedEventArgs)
  nameWithType: CurrencyManager.OnItemChanged(ItemChangedEventArgs)
  fullName: System.Windows.Forms.CurrencyManager.OnItemChanged(ItemChangedEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.CurrencyManager.ItemChanged&quot;> </xref> 이벤트입니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트](~/add/includes/ajax-current-ext-md.md)합니다.       OnItemChanged 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnItemChanged (System.Windows.Forms.ItemChangedEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.ItemChangedEventArgs
      description: "<xref href=&quot;System.Windows.Forms.ItemChangedEventArgs&quot;> </xref> 하는 이벤트 데이터를 포함 합니다."
  overload: System.Windows.Forms.CurrencyManager.OnItemChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.CurrencyManager.OnMetaDataChanged(System.EventArgs)
  id: OnMetaDataChanged(System.EventArgs)
  parent: System.Windows.Forms.CurrencyManager
  langs:
  - csharp
  name: OnMetaDataChanged(EventArgs)
  nameWithType: CurrencyManager.OnMetaDataChanged(EventArgs)
  fullName: System.Windows.Forms.CurrencyManager.OnMetaDataChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.CurrencyManager.MetaDataChanged&quot;> </xref> 이벤트입니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트](~/add/includes/ajax-current-ext-md.md)합니다.       OnMetaDataChanged 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected void OnMetaDataChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Windows.Forms.CurrencyManager.OnMetaDataChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.CurrencyManager.OnPositionChanged(System.EventArgs)
  id: OnPositionChanged(System.EventArgs)
  parent: System.Windows.Forms.CurrencyManager
  langs:
  - csharp
  name: OnPositionChanged(EventArgs)
  nameWithType: CurrencyManager.OnPositionChanged(EventArgs)
  fullName: System.Windows.Forms.CurrencyManager.OnPositionChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "발생 된 <xref href=&quot;System.Windows.Forms.BindingManagerBase.PositionChanged&quot;> </xref> 이벤트입니다."
  remarks: "이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다. 자세한 내용은 참조 [이벤트](~/add/includes/ajax-current-ext-md.md)합니다.       OnPositionChanged 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다. 이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다."
  syntax:
    content: protected virtual void OnPositionChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>이벤트 데이터를 포함 하는.</xref:System.EventArgs>"
  overload: System.Windows.Forms.CurrencyManager.OnPositionChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.CurrencyManager.Position
  id: Position
  parent: System.Windows.Forms.CurrencyManager
  langs:
  - csharp
  name: Position
  nameWithType: CurrencyManager.Position
  fullName: System.Windows.Forms.CurrencyManager.Position
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "목록 내에 있는 위치를 가져오거나 설정 합니다."
  remarks: "중요 한 속성은 <xref:System.Windows.Forms.CurrencyManager>클래스는 Position 속성.</xref:System.Windows.Forms.CurrencyManager> 항목의 목록에서 전체 목록에서 하나의 항목을 볼 수 있습니다. 어떤 항목을 볼를 확인 하려면 위치를 0 (목록의 시작 부분) 사이의 숫자로 설정 하 고 <xref:System.Windows.Forms.CurrencyManager.Count%2A>값-1 (목록의 끝).</xref:System.Windows.Forms.CurrencyManager.Count%2A>       위치 통화 또는 <xref:System.Windows.Forms.CurrencyManager>.</xref:System.Windows.Forms.CurrencyManager> 동일에 바인딩된 모든 컨트롤의 목록에서 위치를 결정 하는 따라서 예를 들어 &quot;FirstName&quot; 및 &quot;LastName&quot; 이라는 두 개의 열으로 구성 된 목록을 한다고 가정 합니다. 두 개의 <xref:System.Windows.Forms.TextBox>같은 목록에 바인딩된 컨트롤이 첫 번째 컨트롤이 첫 번째 열에 바인딩된 하 고 두 번째 컨트롤은 두 번째 열에 바인딩된.</xref:System.Windows.Forms.TextBox> 때 일반 위치 <xref:System.Windows.Forms.CurrencyManager>설정 된 세 번째 위치로 두 컨트롤 목록에서 해당 위치에 대 한 적절 한 값을 표시 합니다.</xref:System.Windows.Forms.CurrencyManager> 즉, 세 위치에 있는 항목으로 구성 된 경우 &quot;John&quot; 첫 번째 이름 및 성 &quot;Smith&quot;에 &quot;John&quot; 및 &quot;Smith&quot; 바인딩된 컨트롤 표시 됩니다."
  example:
  - "The following code examples use the Position property to allow navigation through a list.  \n  \n [!code-cpp[Classic CurrencyManager.Position Example#1](~/add/codesnippet/cpp/p-system.windows.forms.c_83_1.cpp)]\n [!code-cs[Classic CurrencyManager.Position Example#1](~/add/codesnippet/csharp/p-system.windows.forms.c_83_1.cs)]\n [!code-vb[Classic CurrencyManager.Position Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.c_83_1.vb)]"
  syntax:
    content: public override int Position { get; set; }
    return:
      type: System.Int32
      description: "0 사이의 숫자 및 <xref:System.Windows.Forms.CurrencyManager.Count*>1을 뺀 값입니다.</xref:System.Windows.Forms.CurrencyManager.Count*>"
  overload: System.Windows.Forms.CurrencyManager.Position*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.CurrencyManager.Refresh
  id: Refresh
  parent: System.Windows.Forms.CurrencyManager
  langs:
  - csharp
  name: Refresh()
  nameWithType: CurrencyManager.Refresh()
  fullName: System.Windows.Forms.CurrencyManager.Refresh()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "강제로 데이터 바인딩된 목록 다시 채웁니다."
  remarks: "데이터 소스 변경 될 때 알림을 지원 하지 않을 때 Refresh 메서드를 사용 하 여 (이 경우에 예를 들어는 <xref:System.Array>).</xref:System.Array>"
  example:
  - "The following code example creates an array and binds it to a <xref:System.Windows.Forms.TextBox> control, and then changes one value. The Refresh method can be called to update the value displayed by the <xref:System.Windows.Forms.TextBox> control.  \n  \n [!code-cs[Classic CurrencyManager.Refresh Example#1](~/add/codesnippet/csharp/m-system.windows.forms.c_16_1.cs)]\n [!code-cpp[Classic CurrencyManager.Refresh Example#1](~/add/codesnippet/cpp/m-system.windows.forms.c_16_1.cpp)]\n [!code-vb[Classic CurrencyManager.Refresh Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_16_1.vb)]"
  syntax:
    content: public void Refresh ();
    parameters: []
  overload: System.Windows.Forms.CurrencyManager.Refresh*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.CurrencyManager.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Windows.Forms.CurrencyManager
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: CurrencyManager.RemoveAt(Int32)
  fullName: System.Windows.Forms.CurrencyManager.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "지정된 된 인덱스에 항목을 제거 합니다."
  remarks: "RemoveAt 메서드는와 같은 복잡 한 제어를 허용 하도록 설계 된는 <xref:System.Windows.Forms.DataGrid>컨트롤 목록에서 항목을 제거 합니다.</xref:System.Windows.Forms.DataGrid> 하지 실제로 항목을 제거 하려면이 메서드를 사용 해야 합니다. 대신를 사용 하 여는 <xref:System.Data.DataView.Delete%2A>의 메서드는 <xref:System.Data.DataView>항목을 삭제 하는 클래스입니다.</xref:System.Data.DataView> </xref:System.Data.DataView.Delete%2A>"
  example:
  - "The following code example uses the RemoveAt method to remove the item at position 0 in the list.  \n  \n [!code-cs[Classic CurrencyManager.RemoveAt Example#1](~/add/codesnippet/csharp/m-system.windows.forms.c_71_1.cs)]\n [!code-cpp[Classic CurrencyManager.RemoveAt Example#1](~/add/codesnippet/cpp/m-system.windows.forms.c_71_1.cpp)]\n [!code-vb[Classic CurrencyManager.RemoveAt Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_71_1.vb)]"
  syntax:
    content: public override void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "목록에서 제거할 항목의 인덱스입니다."
  overload: System.Windows.Forms.CurrencyManager.RemoveAt*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "지정 된 행이 <code> index </code>합니다."
  platform:
  - net462
- uid: System.Windows.Forms.CurrencyManager.ResumeBinding
  id: ResumeBinding
  parent: System.Windows.Forms.CurrencyManager
  langs:
  - csharp
  name: ResumeBinding()
  nameWithType: CurrencyManager.ResumeBinding()
  fullName: System.Windows.Forms.CurrencyManager.ResumeBinding()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "데이터 바인딩을 다시 시작 합니다."
  remarks: "<xref:System.Windows.Forms.CurrencyManager.SuspendBinding%2A>및 ResumeBinding은 단순 데이터 바인딩 시나리오에서 일시적 중단 및 다시 시작을 허용 하는 메서드입니다.</xref:System.Windows.Forms.CurrencyManager.SuspendBinding%2A> 데이터 바인딩 사용자 유효성 검사를 수행 하기 전에 데이터 필드에 몇 가지 편집 하도록 허용 해야 하는 경우에 일반적으로 일시 합니다. 예를 들어 하지만 유효성을 검사 하는 두 번째에 따라 한 필드를 변경 해야 하는 경우 첫 번째 필드에 오류에 포함 되도록 두 번째 필드를 리라 예상 되었습니다.      > [!NOTE] >를 사용 하 여 <xref:System.Windows.Forms.CurrencyManager.SuspendBinding%2A>ResumeBinding가 호출 되지만 바인딩된 컨트롤에 영향을 미치는 데이터 원본 변경 하지 않는 데이터 원본에 밀어 넣는에서 변경할 수 없습니다.</xref:System.Windows.Forms.CurrencyManager.SuspendBinding%2A> 와 같은 복잡 한 데이터 바인딩을 사용 하는 컨트롤의 <xref:System.Windows.Forms.DataGridView>제어와 같은 변경 이벤트에 따라 해당 값을 업데이트는 <xref:System.Windows.Forms.CurrencyManager.ListChanged>이벤트.</xref:System.Windows.Forms.CurrencyManager.ListChanged> </xref:System.Windows.Forms.DataGridView> 이 메서드를 호출 해도 이러한 이벤트가 발생 합니다. 이러한 이유로, <xref:System.Windows.Forms.CurrencyManager.SuspendBinding%2A>ResumeBinding <xref:System.Windows.Forms.TextBox>.</xref:System.Windows.Forms.TextBox> 등의 단순 바인딩된 컨트롤에 사용 하기 위한 및</xref:System.Windows.Forms.CurrencyManager.SuspendBinding%2A> 또는 경우 사용할 수 있습니다 이러한 메서드는 복합 바인딩 시나리오에 표시 하지 않으려면 <xref:System.Windows.Forms.BindingSource.ListChanged>설정 하 여 이벤트는 <xref:System.Windows.Forms.BindingSource.RaiseListChangedEvents%2A>속성을 `false`.</xref:System.Windows.Forms.BindingSource.RaiseListChangedEvents%2A> </xref:System.Windows.Forms.BindingSource.ListChanged>"
  example:
  - "The following code example demonstrates how to use the ResumeBinding method.  \n  \n [!code-vb[BindingManagerBase_Suspend_Resume_Binding#2](~/add/codesnippet/visualbasic/m-system.windows.forms.c_40_1.vb)]\n [!code-cs[BindingManagerBase_Suspend_Resume_Binding#2](~/add/codesnippet/csharp/m-system.windows.forms.c_40_1.cs)]\n [!code-cpp[BindingManagerBase_Suspend_Resume_Binding#2](~/add/codesnippet/cpp/m-system.windows.forms.c_40_1.cpp)]"
  syntax:
    content: public override void ResumeBinding ();
    parameters: []
  overload: System.Windows.Forms.CurrencyManager.ResumeBinding*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.CurrencyManager.SuspendBinding
  id: SuspendBinding
  parent: System.Windows.Forms.CurrencyManager
  langs:
  - csharp
  name: SuspendBinding()
  nameWithType: CurrencyManager.SuspendBinding()
  fullName: System.Windows.Forms.CurrencyManager.SuspendBinding()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "에 바인딩된 데이터 소스 업데이트에서 변경할 수 없습니다. 데이터 바인딩을 일시 중단 합니다."
  remarks: "SuspendBinding 및 <xref:System.Windows.Forms.BindingSource.ResumeBinding%2A>단순 바인딩 시나리오에는 일시 중단 했다가 데이터 바인딩 메서드를 사용 합니다.</xref:System.Windows.Forms.BindingSource.ResumeBinding%2A> 데이터 바인딩 유효성 검사를 수행 하기 전에 사용자를 데이터 필드에 몇 가지 편집 내용을 확인 해야 하는 경우에 일반적으로 일시 합니다. 예를 들어 하지만 유효성을 검사 하는 두 번째에 따라 한 필드를 변경 해야 하는 경우 첫 번째 필드에 오류에 포함 되도록 두 번째 필드를 리라 예상 되었습니다.      > [!NOTE] > <xref:System.Windows.Forms.BindingSource.SuspendBinding%2A>변경 될 때까지 데이터 원본에 적용 되지 않도록 방지 <xref:System.Windows.Forms.BindingSource.ResumeBinding%2A>호출 되지만 실제로 발생 이벤트를 억제 하지 않습니다.</xref:System.Windows.Forms.BindingSource.ResumeBinding%2A> </xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> 와 같은 복잡 한 데이터 바인딩을 사용 하는 컨트롤의 <xref:System.Windows.Forms.DataGridView>제어, 예: 변경 이벤트에 따라 해당 값을 업데이트는 <xref:System.Windows.Forms.CurrencyManager.ListChanged>이벤트.</xref:System.Windows.Forms.CurrencyManager.ListChanged> </xref:System.Windows.Forms.DataGridView> 따라서 호출 <xref:System.Windows.Forms.BindingSource.SuspendBinding%2A>복합 바인딩된 컨트롤에서 데이터 소스를 업데이트 하는 이벤트를 받을 않도록 방지 되지는 것입니다.</xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> 이러한 이유로 <xref:System.Windows.Forms.BindingSource.SuspendBinding%2A>및 <xref:System.Windows.Forms.BindingSource.ResumeBinding%2A>와 같은 단순 바인딩된 컨트롤을 사용 하도록 설계 되는 <xref:System.Windows.Forms.TextBox>컨트롤.</xref:System.Windows.Forms.TextBox> </xref:System.Windows.Forms.BindingSource.ResumeBinding%2A> </xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> 또는 경우 사용할 수 있습니다 이러한 메서드는 복합 바인딩 시나리오에 표시 하지 않으려면 <xref:System.Windows.Forms.BindingSource.ListChanged>설정 하 여 이벤트는 <xref:System.Windows.Forms.BindingSource.RaiseListChangedEvents%2A>속성을 `false`.</xref:System.Windows.Forms.BindingSource.RaiseListChangedEvents%2A> </xref:System.Windows.Forms.BindingSource.ListChanged>"
  example:
  - "The following code example demonstrates how to use the SuspendBinding method.  \n  \n [!code-vb[BindingManagerBase_Suspend_Resume_Binding#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_69_1.vb)]\n [!code-cs[BindingManagerBase_Suspend_Resume_Binding#1](~/add/codesnippet/csharp/m-system.windows.forms.c_69_1.cs)]\n [!code-cpp[BindingManagerBase_Suspend_Resume_Binding#1](~/add/codesnippet/cpp/m-system.windows.forms.c_69_1.cpp)]"
  syntax:
    content: public override void SuspendBinding ();
    parameters: []
  overload: System.Windows.Forms.CurrencyManager.SuspendBinding*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.CurrencyManager.UpdateIsBinding
  id: UpdateIsBinding
  parent: System.Windows.Forms.CurrencyManager
  langs:
  - csharp
  name: UpdateIsBinding()
  nameWithType: CurrencyManager.UpdateIsBinding()
  fullName: System.Windows.Forms.CurrencyManager.UpdateIsBinding()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "바인딩 상태를 업데이트합니다."
  syntax:
    content: protected override void UpdateIsBinding ();
    parameters: []
  overload: System.Windows.Forms.CurrencyManager.UpdateIsBinding*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Forms.BindingManagerBase
  isExternal: false
  name: System.Windows.Forms.BindingManagerBase
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Exception
  isExternal: true
  name: System.Exception
- uid: System.IndexOutOfRangeException
  isExternal: true
  name: System.IndexOutOfRangeException
- uid: System.Windows.Forms.CurrencyManager.AddNew
  parent: System.Windows.Forms.CurrencyManager
  isExternal: false
  name: AddNew()
  nameWithType: CurrencyManager.AddNew()
  fullName: System.Windows.Forms.CurrencyManager.AddNew()
- uid: System.Windows.Forms.CurrencyManager.CancelCurrentEdit
  parent: System.Windows.Forms.CurrencyManager
  isExternal: false
  name: CancelCurrentEdit()
  nameWithType: CurrencyManager.CancelCurrentEdit()
  fullName: System.Windows.Forms.CurrencyManager.CancelCurrentEdit()
- uid: System.Windows.Forms.CurrencyManager.CheckEmpty
  parent: System.Windows.Forms.CurrencyManager
  isExternal: false
  name: CheckEmpty()
  nameWithType: CurrencyManager.CheckEmpty()
  fullName: System.Windows.Forms.CurrencyManager.CheckEmpty()
- uid: System.Windows.Forms.CurrencyManager.Count
  parent: System.Windows.Forms.CurrencyManager
  isExternal: false
  name: Count
  nameWithType: CurrencyManager.Count
  fullName: System.Windows.Forms.CurrencyManager.Count
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Forms.CurrencyManager.Current
  parent: System.Windows.Forms.CurrencyManager
  isExternal: false
  name: Current
  nameWithType: CurrencyManager.Current
  fullName: System.Windows.Forms.CurrencyManager.Current
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Forms.CurrencyManager.EndCurrentEdit
  parent: System.Windows.Forms.CurrencyManager
  isExternal: false
  name: EndCurrentEdit()
  nameWithType: CurrencyManager.EndCurrentEdit()
  fullName: System.Windows.Forms.CurrencyManager.EndCurrentEdit()
- uid: System.Windows.Forms.CurrencyManager.finalType
  parent: System.Windows.Forms.CurrencyManager
  isExternal: false
  name: finalType
  nameWithType: CurrencyManager.finalType
  fullName: System.Windows.Forms.CurrencyManager.finalType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Windows.Forms.CurrencyManager.GetItemProperties
  parent: System.Windows.Forms.CurrencyManager
  isExternal: false
  name: GetItemProperties()
  nameWithType: CurrencyManager.GetItemProperties()
  fullName: System.Windows.Forms.CurrencyManager.GetItemProperties()
- uid: System.ComponentModel.PropertyDescriptorCollection
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptorCollection
  nameWithType: PropertyDescriptorCollection
  fullName: System.ComponentModel.PropertyDescriptorCollection
- uid: System.Windows.Forms.CurrencyManager.GetListName(System.Collections.ArrayList)
  parent: System.Windows.Forms.CurrencyManager
  isExternal: false
  name: GetListName(ArrayList)
  nameWithType: CurrencyManager.GetListName(ArrayList)
  fullName: System.Windows.Forms.CurrencyManager.GetListName(ArrayList)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.ArrayList
  parent: System.Collections
  isExternal: false
  name: ArrayList
  nameWithType: ArrayList
  fullName: System.Collections.ArrayList
- uid: System.Windows.Forms.CurrencyManager.ItemChanged
  parent: System.Windows.Forms.CurrencyManager
  isExternal: false
  name: ItemChanged
  nameWithType: CurrencyManager.ItemChanged
  fullName: System.Windows.Forms.CurrencyManager.ItemChanged
- uid: System.Windows.Forms.ItemChangedEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: ItemChangedEventHandler
  nameWithType: ItemChangedEventHandler
  fullName: System.Windows.Forms.ItemChangedEventHandler
- uid: System.Windows.Forms.CurrencyManager.List
  parent: System.Windows.Forms.CurrencyManager
  isExternal: false
  name: List
  nameWithType: CurrencyManager.List
  fullName: System.Windows.Forms.CurrencyManager.List
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Windows.Forms.CurrencyManager.ListChanged
  parent: System.Windows.Forms.CurrencyManager
  isExternal: false
  name: ListChanged
  nameWithType: CurrencyManager.ListChanged
  fullName: System.Windows.Forms.CurrencyManager.ListChanged
- uid: System.ComponentModel.ListChangedEventHandler
  parent: System.ComponentModel
  isExternal: false
  name: ListChangedEventHandler
  nameWithType: ListChangedEventHandler
  fullName: System.ComponentModel.ListChangedEventHandler
- uid: System.Windows.Forms.CurrencyManager.listposition
  parent: System.Windows.Forms.CurrencyManager
  isExternal: false
  name: listposition
  nameWithType: CurrencyManager.listposition
  fullName: System.Windows.Forms.CurrencyManager.listposition
- uid: System.Windows.Forms.CurrencyManager.MetaDataChanged
  parent: System.Windows.Forms.CurrencyManager
  isExternal: false
  name: MetaDataChanged
  nameWithType: CurrencyManager.MetaDataChanged
  fullName: System.Windows.Forms.CurrencyManager.MetaDataChanged
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Windows.Forms.CurrencyManager.OnCurrentChanged(System.EventArgs)
  parent: System.Windows.Forms.CurrencyManager
  isExternal: false
  name: OnCurrentChanged(EventArgs)
  nameWithType: CurrencyManager.OnCurrentChanged(EventArgs)
  fullName: System.Windows.Forms.CurrencyManager.OnCurrentChanged(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Windows.Forms.CurrencyManager.OnCurrentItemChanged(System.EventArgs)
  parent: System.Windows.Forms.CurrencyManager
  isExternal: false
  name: OnCurrentItemChanged(EventArgs)
  nameWithType: CurrencyManager.OnCurrentItemChanged(EventArgs)
  fullName: System.Windows.Forms.CurrencyManager.OnCurrentItemChanged(EventArgs)
- uid: System.Windows.Forms.CurrencyManager.OnItemChanged(System.Windows.Forms.ItemChangedEventArgs)
  parent: System.Windows.Forms.CurrencyManager
  isExternal: false
  name: OnItemChanged(ItemChangedEventArgs)
  nameWithType: CurrencyManager.OnItemChanged(ItemChangedEventArgs)
  fullName: System.Windows.Forms.CurrencyManager.OnItemChanged(ItemChangedEventArgs)
- uid: System.Windows.Forms.ItemChangedEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: ItemChangedEventArgs
  nameWithType: ItemChangedEventArgs
  fullName: System.Windows.Forms.ItemChangedEventArgs
- uid: System.Windows.Forms.CurrencyManager.OnMetaDataChanged(System.EventArgs)
  parent: System.Windows.Forms.CurrencyManager
  isExternal: false
  name: OnMetaDataChanged(EventArgs)
  nameWithType: CurrencyManager.OnMetaDataChanged(EventArgs)
  fullName: System.Windows.Forms.CurrencyManager.OnMetaDataChanged(EventArgs)
- uid: System.Windows.Forms.CurrencyManager.OnPositionChanged(System.EventArgs)
  parent: System.Windows.Forms.CurrencyManager
  isExternal: false
  name: OnPositionChanged(EventArgs)
  nameWithType: CurrencyManager.OnPositionChanged(EventArgs)
  fullName: System.Windows.Forms.CurrencyManager.OnPositionChanged(EventArgs)
- uid: System.Windows.Forms.CurrencyManager.Position
  parent: System.Windows.Forms.CurrencyManager
  isExternal: false
  name: Position
  nameWithType: CurrencyManager.Position
  fullName: System.Windows.Forms.CurrencyManager.Position
- uid: System.Windows.Forms.CurrencyManager.Refresh
  parent: System.Windows.Forms.CurrencyManager
  isExternal: false
  name: Refresh()
  nameWithType: CurrencyManager.Refresh()
  fullName: System.Windows.Forms.CurrencyManager.Refresh()
- uid: System.Windows.Forms.CurrencyManager.RemoveAt(System.Int32)
  parent: System.Windows.Forms.CurrencyManager
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: CurrencyManager.RemoveAt(Int32)
  fullName: System.Windows.Forms.CurrencyManager.RemoveAt(Int32)
- uid: System.Windows.Forms.CurrencyManager.ResumeBinding
  parent: System.Windows.Forms.CurrencyManager
  isExternal: false
  name: ResumeBinding()
  nameWithType: CurrencyManager.ResumeBinding()
  fullName: System.Windows.Forms.CurrencyManager.ResumeBinding()
- uid: System.Windows.Forms.CurrencyManager.SuspendBinding
  parent: System.Windows.Forms.CurrencyManager
  isExternal: false
  name: SuspendBinding()
  nameWithType: CurrencyManager.SuspendBinding()
  fullName: System.Windows.Forms.CurrencyManager.SuspendBinding()
- uid: System.Windows.Forms.CurrencyManager.UpdateIsBinding
  parent: System.Windows.Forms.CurrencyManager
  isExternal: false
  name: UpdateIsBinding()
  nameWithType: CurrencyManager.UpdateIsBinding()
  fullName: System.Windows.Forms.CurrencyManager.UpdateIsBinding()
- uid: System.Windows.Forms.CurrencyManager.AddNew*
  parent: System.Windows.Forms.CurrencyManager
  isExternal: false
  name: AddNew
  nameWithType: CurrencyManager.AddNew
- uid: System.Windows.Forms.CurrencyManager.CancelCurrentEdit*
  parent: System.Windows.Forms.CurrencyManager
  isExternal: false
  name: CancelCurrentEdit
  nameWithType: CurrencyManager.CancelCurrentEdit
- uid: System.Windows.Forms.CurrencyManager.CheckEmpty*
  parent: System.Windows.Forms.CurrencyManager
  isExternal: false
  name: CheckEmpty
  nameWithType: CurrencyManager.CheckEmpty
- uid: System.Windows.Forms.CurrencyManager.Count*
  parent: System.Windows.Forms.CurrencyManager
  isExternal: false
  name: Count
  nameWithType: CurrencyManager.Count
- uid: System.Windows.Forms.CurrencyManager.Current*
  parent: System.Windows.Forms.CurrencyManager
  isExternal: false
  name: Current
  nameWithType: CurrencyManager.Current
- uid: System.Windows.Forms.CurrencyManager.EndCurrentEdit*
  parent: System.Windows.Forms.CurrencyManager
  isExternal: false
  name: EndCurrentEdit
  nameWithType: CurrencyManager.EndCurrentEdit
- uid: System.Windows.Forms.CurrencyManager.GetItemProperties*
  parent: System.Windows.Forms.CurrencyManager
  isExternal: false
  name: GetItemProperties
  nameWithType: CurrencyManager.GetItemProperties
- uid: System.Windows.Forms.CurrencyManager.GetListName*
  parent: System.Windows.Forms.CurrencyManager
  isExternal: false
  name: GetListName
  nameWithType: CurrencyManager.GetListName
- uid: System.Windows.Forms.CurrencyManager.List*
  parent: System.Windows.Forms.CurrencyManager
  isExternal: false
  name: List
  nameWithType: CurrencyManager.List
- uid: System.Windows.Forms.CurrencyManager.OnCurrentChanged*
  parent: System.Windows.Forms.CurrencyManager
  isExternal: false
  name: OnCurrentChanged
  nameWithType: CurrencyManager.OnCurrentChanged
- uid: System.Windows.Forms.CurrencyManager.OnCurrentItemChanged*
  parent: System.Windows.Forms.CurrencyManager
  isExternal: false
  name: OnCurrentItemChanged
  nameWithType: CurrencyManager.OnCurrentItemChanged
- uid: System.Windows.Forms.CurrencyManager.OnItemChanged*
  parent: System.Windows.Forms.CurrencyManager
  isExternal: false
  name: OnItemChanged
  nameWithType: CurrencyManager.OnItemChanged
- uid: System.Windows.Forms.CurrencyManager.OnMetaDataChanged*
  parent: System.Windows.Forms.CurrencyManager
  isExternal: false
  name: OnMetaDataChanged
  nameWithType: CurrencyManager.OnMetaDataChanged
- uid: System.Windows.Forms.CurrencyManager.OnPositionChanged*
  parent: System.Windows.Forms.CurrencyManager
  isExternal: false
  name: OnPositionChanged
  nameWithType: CurrencyManager.OnPositionChanged
- uid: System.Windows.Forms.CurrencyManager.Position*
  parent: System.Windows.Forms.CurrencyManager
  isExternal: false
  name: Position
  nameWithType: CurrencyManager.Position
- uid: System.Windows.Forms.CurrencyManager.Refresh*
  parent: System.Windows.Forms.CurrencyManager
  isExternal: false
  name: Refresh
  nameWithType: CurrencyManager.Refresh
- uid: System.Windows.Forms.CurrencyManager.RemoveAt*
  parent: System.Windows.Forms.CurrencyManager
  isExternal: false
  name: RemoveAt
  nameWithType: CurrencyManager.RemoveAt
- uid: System.Windows.Forms.CurrencyManager.ResumeBinding*
  parent: System.Windows.Forms.CurrencyManager
  isExternal: false
  name: ResumeBinding
  nameWithType: CurrencyManager.ResumeBinding
- uid: System.Windows.Forms.CurrencyManager.SuspendBinding*
  parent: System.Windows.Forms.CurrencyManager
  isExternal: false
  name: SuspendBinding
  nameWithType: CurrencyManager.SuspendBinding
- uid: System.Windows.Forms.CurrencyManager.UpdateIsBinding*
  parent: System.Windows.Forms.CurrencyManager
  isExternal: false
  name: UpdateIsBinding
  nameWithType: CurrencyManager.UpdateIsBinding
