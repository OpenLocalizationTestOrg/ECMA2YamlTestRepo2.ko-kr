### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Claims.ClaimSet
  id: ClaimSet
  children:
  - System.IdentityModel.Claims.ClaimSet.#ctor
  - System.IdentityModel.Claims.ClaimSet.ContainsClaim(System.IdentityModel.Claims.Claim)
  - System.IdentityModel.Claims.ClaimSet.ContainsClaim(System.IdentityModel.Claims.Claim,System.Collections.Generic.IEqualityComparer{System.IdentityModel.Claims.Claim})
  - System.IdentityModel.Claims.ClaimSet.Count
  - System.IdentityModel.Claims.ClaimSet.FindClaims(System.String,System.String)
  - System.IdentityModel.Claims.ClaimSet.GetEnumerator
  - System.IdentityModel.Claims.ClaimSet.Issuer
  - System.IdentityModel.Claims.ClaimSet.Item(System.Int32)
  - System.IdentityModel.Claims.ClaimSet.System
  - System.IdentityModel.Claims.ClaimSet.System#Collections#IEnumerable#GetEnumerator
  - System.IdentityModel.Claims.ClaimSet.Windows
  langs:
  - csharp
  name: ClaimSet
  nameWithType: ClaimSet
  fullName: System.IdentityModel.Claims.ClaimSet
  type: Class
  summary: "엔터티와 연결된 된 클레임의 컬렉션을 나타냅니다."
  remarks: "ClaimSet 클래스를 만든 후에 변경할 수 없습니다.       특정 형식의 클레임에 대 한 ClaimSet의 내용을 검사 하는 것은 클레임 기반 권한 부여를 사용 하는 경우 일반적인 작업입니다. 사용 하 여 특정 클레임이 있는지에 대 한 ClaimSet을 검사 하려면는 <xref:System.IdentityModel.Claims.ClaimSet.FindClaims%2A>메서드.</xref:System.IdentityModel.Claims.ClaimSet.FindClaims%2A> 메서드는 ClaimSet 직접 반복 하는 보다 더 나은 성능을 제공 합니다."
  example:
  - >-
    [!code-cs[c_ClaimSet#1](~/add/codesnippet/csharp/t-system.identitymodel.c_1_1.cs)]
     [!code-vb[c_ClaimSet#1](~/add/codesnippet/visualbasic/t-system.identitymodel.c_1_1.vb)]
  syntax:
    content: >-
      [System.Runtime.Serialization.DataContract(Namespace="http://schemas.xmlsoap.org/ws/2005/05/identity")]

      public abstract class ClaimSet : System.Collections.Generic.IEnumerable<System.IdentityModel.Claims.Claim>
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IEnumerable<System.IdentityModel.Claims.Claim>
  inheritedMembers: []
  platform:
  - net462
- uid: System.IdentityModel.Claims.ClaimSet.#ctor
  id: '#ctor'
  parent: System.IdentityModel.Claims.ClaimSet
  langs:
  - csharp
  name: ClaimSet()
  nameWithType: ClaimSet.ClaimSet()
  fullName: System.IdentityModel.Claims.ClaimSet.ClaimSet()
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Claims
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.IdentityModel.Claims.ClaimSet&quot;> </xref> 클래스입니다."
  remarks: "나중에 사용하도록 예약되어 있습니다."
  syntax:
    content: protected ClaimSet ();
    parameters: []
  overload: System.IdentityModel.Claims.ClaimSet.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Claims.ClaimSet.ContainsClaim(System.IdentityModel.Claims.Claim)
  id: ContainsClaim(System.IdentityModel.Claims.Claim)
  parent: System.IdentityModel.Claims.ClaimSet
  langs:
  - csharp
  name: ContainsClaim(Claim)
  nameWithType: ClaimSet.ContainsClaim(Claim)
  fullName: System.IdentityModel.Claims.ClaimSet.ContainsClaim(Claim)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Claims
  summary: "결정 여부는 <xref href=&quot;System.IdentityModel.Claims.ClaimSet&quot;> </xref> 에 지정 된 <xref href=&quot;System.IdentityModel.Claims.Claim&quot;> </xref>합니다."
  remarks: "지정 된 클레임을 찾으려면 호출는 <xref:System.IdentityModel.Claims.ClaimSet.FindClaims%28System.String%2CSystem.String%29>메서드.</xref:System.IdentityModel.Claims.ClaimSet.FindClaims%28System.String%2CSystem.String%29>"
  syntax:
    content: public virtual bool ContainsClaim (System.IdentityModel.Claims.Claim claim);
    parameters:
    - id: claim
      type: System.IdentityModel.Claims.Claim
      description: "<xref href=&quot;System.IdentityModel.Claims.Claim&quot;> </xref> 검색 대상으로 합니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>지정 된 클레임에 포함 되어 있으면는 <xref href=&quot;System.IdentityModel.Claims.ClaimSet&quot;> </xref>고, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.IdentityModel.Claims.ClaimSet.ContainsClaim*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Claims.ClaimSet.ContainsClaim(System.IdentityModel.Claims.Claim,System.Collections.Generic.IEqualityComparer{System.IdentityModel.Claims.Claim})
  id: ContainsClaim(System.IdentityModel.Claims.Claim,System.Collections.Generic.IEqualityComparer{System.IdentityModel.Claims.Claim})
  parent: System.IdentityModel.Claims.ClaimSet
  langs:
  - csharp
  name: ContainsClaim(Claim,IEqualityComparer<Claim>)
  nameWithType: ClaimSet.ContainsClaim(Claim,IEqualityComparer<Claim>)
  fullName: System.IdentityModel.Claims.ClaimSet.ContainsClaim(Claim,IEqualityComparer<Claim>)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Claims
  summary: "결정 여부는 <xref href=&quot;System.IdentityModel.Claims.ClaimSet&quot;> </xref> 에 지정 된 <xref href=&quot;System.IdentityModel.Claims.Claim&quot;> </xref>, 지정 된를 사용 하 여 &lt;xref:System.Collections.Generic.IEqualityComparer%601&gt; 개체입니다."
  remarks: "지정 된 클레임을 찾으려면 호출는 <xref:System.IdentityModel.Claims.ClaimSet.FindClaims%28System.String%2CSystem.String%29>메서드.</xref:System.IdentityModel.Claims.ClaimSet.FindClaims%28System.String%2CSystem.String%29>"
  syntax:
    content: public virtual bool ContainsClaim (System.IdentityModel.Claims.Claim claim, System.Collections.Generic.IEqualityComparer<System.IdentityModel.Claims.Claim> comparer);
    parameters:
    - id: claim
      type: System.IdentityModel.Claims.Claim
      description: "<xref href=&quot;System.IdentityModel.Claims.Claim&quot;> </xref> 검색 대상으로 합니다."
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{System.IdentityModel.Claims.Claim}
      description: "&lt;xref:System.Collections.Generic.IEqualityComparer%601&gt; 비교에 사용 되는 개체입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>지정 된 클레임에 포함 되어 있으면는 <xref href=&quot;System.IdentityModel.Claims.ClaimSet&quot;> </xref>고, 그렇지 않으면<xref uid=&quot;langword_csharp_false.&quot; name=&quot;false.&quot; href=&quot;&quot;></xref>"
  overload: System.IdentityModel.Claims.ClaimSet.ContainsClaim*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Claims.ClaimSet.Count
  id: Count
  parent: System.IdentityModel.Claims.ClaimSet
  langs:
  - csharp
  name: Count
  nameWithType: ClaimSet.Count
  fullName: System.IdentityModel.Claims.ClaimSet.Count
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Claims
  summary: "파생된 클래스에서 재정의 되 면이 클레임 집합에 클레임의 수를 가져옵니다."
  remarks: "개별 클레임을 사용는 <xref:System.IdentityModel.Claims.ClaimSet.Item%2A>속성.</xref:System.IdentityModel.Claims.ClaimSet.Item%2A>"
  syntax:
    content: public abstract int Count { get; }
    return:
      type: System.Int32
      description: "이 클레임의 수 <xref href=&quot;System.IdentityModel.Claims.ClaimSet&quot;> </xref>합니다."
  overload: System.IdentityModel.Claims.ClaimSet.Count*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Claims.ClaimSet.FindClaims(System.String,System.String)
  id: FindClaims(System.String,System.String)
  parent: System.IdentityModel.Claims.ClaimSet
  langs:
  - csharp
  name: FindClaims(String,String)
  nameWithType: ClaimSet.FindClaims(String,String)
  fullName: System.IdentityModel.Claims.ClaimSet.FindClaims(String,String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Claims
  summary: "파생된 클래스에서 재정의 되 면 검색 된 <xref href=&quot;System.IdentityModel.Claims.Claim&quot;> </xref> 지정 된 클레임 형식 및에서 권한과 일치 하는 개체는 <xref href=&quot;System.IdentityModel.Claims.ClaimSet&quot;> </xref>합니다."
  remarks: "이 있는지 확인 하려면 <xref:System.IdentityModel.Claims.ClaimSet>호출 클레임을 반환 하지 않고 클레임이 포함 된 <xref:System.IdentityModel.Claims.ClaimSet.ContainsClaim%2A>메서드.</xref:System.IdentityModel.Claims.ClaimSet.ContainsClaim%2A> </xref:System.IdentityModel.Claims.ClaimSet>"
  example:
  - >-
    [!code-cs[c_ClaimSet#2](~/add/codesnippet/csharp/m-system.identitymodel.c_1.cs)]
     [!code-vb[c_ClaimSet#2](~/add/codesnippet/visualbasic/m-system.identitymodel.c_1.vb)]
  syntax:
    content: public abstract System.Collections.Generic.IEnumerable<System.IdentityModel.Claims.Claim> FindClaims (string claimType, string right);
    parameters:
    - id: claimType
      type: System.String
      description: "클레임 유형의 uniform resource identifier (URI). 몇 가지 클레임 형식을의 정적 속성으로 사용할 수는 <xref href=&quot;System.IdentityModel.Claims.ClaimTypes&quot;> </xref> 클래스입니다."
    - id: right
      type: System.String
      description: "새 클레임과 연결 된 권한의 URI입니다. 일부의 권한을의 정적 속성으로 사용할 수는 <xref href=&quot;System.IdentityModel.Claims.Rights&quot;> </xref> 클래스입니다."
    return:
      type: System.Collections.Generic.IEnumerable{System.IdentityModel.Claims.Claim}
      description: "A &lt;xref:System.Collections.Generic.IEnumerable%601&gt; 형식의 <xref href=&quot;System.IdentityModel.Claims.Claim&quot;> </xref> 지정된 된 조건과 일치 하는 클레임을 열거할 수 있습니다."
  overload: System.IdentityModel.Claims.ClaimSet.FindClaims*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Claims.ClaimSet.GetEnumerator
  id: GetEnumerator
  parent: System.IdentityModel.Claims.ClaimSet
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: ClaimSet.GetEnumerator()
  fullName: System.IdentityModel.Claims.ClaimSet.GetEnumerator()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Claims
  summary: "파생된 클래스에서 재정의 되 면 한 &lt;xref:System.Collections.Generic.IEnumerator%601&gt; 열거를 사용할 수 있는 <xref href=&quot;System.IdentityModel.Claims.Claim&quot;> </xref> 개체는 <xref href=&quot;System.IdentityModel.Claims.ClaimSet&quot;> </xref>합니다."
  remarks: "`foreach` C# 언어의 (`for each` Visual basic에서)은 열거자의 복잡성을 숨깁니다. 따라서 사용 하 여 `foreach` 열거자를 직접 조작 하는 대신이 좋습니다.       열거자는 컬렉션의에서 데이터를 읽는 데 사용할 수 있지만 기본 컬렉션을 수정 하는 사용할 수 없습니다."
  syntax:
    content: public abstract System.Collections.Generic.IEnumerator<System.IdentityModel.Claims.Claim> GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerator{System.IdentityModel.Claims.Claim}
      description: "A &lt;xref:System.Collections.Generic.IEnumerator%601&gt; 열거를 사용할 수 있는 <xref href=&quot;System.IdentityModel.Claims.Claim&quot;> </xref> 개체는 <xref href=&quot;System.IdentityModel.Claims.ClaimSet&quot;> </xref>합니다."
  overload: System.IdentityModel.Claims.ClaimSet.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Claims.ClaimSet.Issuer
  id: Issuer
  parent: System.IdentityModel.Claims.ClaimSet
  langs:
  - csharp
  name: Issuer
  nameWithType: ClaimSet.Issuer
  fullName: System.IdentityModel.Claims.ClaimSet.Issuer
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Claims
  summary: "파생된 클래스에서 재정의 하는 경우이 발급 한 엔터티 가져옵니다 <xref href=&quot;System.IdentityModel.Claims.ClaimSet&quot;> </xref>합니다."
  remarks: "<xref:System.IdentityModel.Claims.ClaimSet.System%2A>속성은 <xref:System.IdentityModel.Claims.DefaultClaimSet>.</xref:System.IdentityModel.Claims.DefaultClaimSet> </xref:System.IdentityModel.Claims.ClaimSet.System%2A> 에서 반환 된 집합을 클레임의 발급자"
  syntax:
    content: public abstract System.IdentityModel.Claims.ClaimSet Issuer { get; }
    return:
      type: System.IdentityModel.Claims.ClaimSet
      description: "<xref href=&quot;System.IdentityModel.Claims.ClaimSet&quot;> </xref> 를이 발급 한 개체 <xref href=&quot;System.IdentityModel.Claims.ClaimSet&quot;> </xref> 개체입니다."
  overload: System.IdentityModel.Claims.ClaimSet.Issuer*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Claims.ClaimSet.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.IdentityModel.Claims.ClaimSet
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: ClaimSet.Item(Int32)
  fullName: System.IdentityModel.Claims.ClaimSet.Item(Int32)
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Claims
  summary: "파생된 클래스에서 재정의 되 면는 <xref href=&quot;System.IdentityModel.Claims.Claim&quot;> </xref> 지정된 된 인덱스에 대 한 합니다."
  syntax:
    content: public abstract System.IdentityModel.Claims.Claim this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "검색할 클레임의 인덱스입니다."
    return:
      type: System.IdentityModel.Claims.Claim
      description: "<xref href=&quot;System.IdentityModel.Claims.Claim&quot;> </xref> 지정 된 인덱스입니다."
  overload: System.IdentityModel.Claims.ClaimSet.Item*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Claims.ClaimSet.System
  id: System
  parent: System.IdentityModel.Claims.ClaimSet
  langs:
  - csharp
  name: System
  nameWithType: ClaimSet.System
  fullName: System.IdentityModel.Claims.ClaimSet.System
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Claims
  summary: "가져옵니다는 <xref href=&quot;System.IdentityModel.Claims.ClaimSet&quot;> </xref> 신뢰할 수 있는 발급자 응용 프로그램을 나타내는 개체입니다."
  remarks: "이 유형의 <xref:System.IdentityModel.Claims.ClaimSet>개체의 값으로 사용 되는 일반적으로 <xref:System.IdentityModel.Claims.ClaimSet.Issuer%2A>속성에 대 한는 <xref:System.IdentityModel.Claims.ClaimSet>현재 응용 프로그램에서 발급 된.</xref:System.IdentityModel.Claims.ClaimSet> </xref:System.IdentityModel.Claims.ClaimSet.Issuer%2A> </xref:System.IdentityModel.Claims.ClaimSet>       예를 들어, 응용 프로그램에서 사용자 이름 및 암호를 인증 한 다음 생성 한 <xref:System.IdentityModel.Claims.ClaimSet>사용 하 여 사용자를 나타내는 <xref:System.IdentityModel.Claims.ClaimSet.Issuer%2A>속성이 시스템으로 설정 합니다.</xref:System.IdentityModel.Claims.ClaimSet.Issuer%2A> </xref:System.IdentityModel.Claims.ClaimSet>"
  syntax:
    content: public static System.IdentityModel.Claims.ClaimSet System { get; }
    return:
      type: System.IdentityModel.Claims.ClaimSet
      description: "시스템 <xref href=&quot;System.IdentityModel.Claims.ClaimSet&quot;> </xref> 개체입니다."
  overload: System.IdentityModel.Claims.ClaimSet.System*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Claims.ClaimSet.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.IdentityModel.Claims.ClaimSet
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: ClaimSet.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.IdentityModel.Claims.ClaimSet.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Claims
  summary: "가져옵니다는 &lt;xref:System.Collections.Generic.IEnumerator%601&gt; 열거를 사용할 수 있는 <xref href=&quot;System.IdentityModel.Claims.Claim&quot;> </xref> 개체는 <xref href=&quot;System.IdentityModel.Claims.ClaimSet&quot;> </xref>합니다."
  remarks: "`foreach` C# 언어의 (`for each` Visual basic에서)은 열거자의 복잡성을 숨깁니다. 따라서 사용 하 여 `foreach` 열거자를 직접 조작 하는 대신이 좋습니다.       열거자는 컬렉션의에서 데이터를 읽는 데 사용할 수 있지만 기본 컬렉션을 수정 하는 사용할 수 없습니다."
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "A &lt;xref:System.Collections.Generic.IEnumerator%601&gt; 열거를 사용할 수 있는 <xref href=&quot;System.IdentityModel.Claims.Claim&quot;> </xref> 개체는 <xref href=&quot;System.IdentityModel.Claims.ClaimSet&quot;> </xref>합니다."
  overload: System.IdentityModel.Claims.ClaimSet.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Claims.ClaimSet.Windows
  id: Windows
  parent: System.IdentityModel.Claims.ClaimSet
  langs:
  - csharp
  name: Windows
  nameWithType: ClaimSet.Windows
  fullName: System.IdentityModel.Claims.ClaimSet.Windows
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Claims
  summary: "Windows 보안 식별자를 포함 하는 클레임 집합을 가져옵니다."
  remarks: "이 유형의 <xref:System.IdentityModel.Claims.ClaimSet>개체의 값으로 사용 되는 일반적으로 <xref:System.IdentityModel.Claims.ClaimSet.Issuer%2A>속성에 대 한는 <xref:System.IdentityModel.Claims.ClaimSet>Windows에서 발급 된.</xref:System.IdentityModel.Claims.ClaimSet> </xref:System.IdentityModel.Claims.ClaimSet.Issuer%2A> </xref:System.IdentityModel.Claims.ClaimSet> 예를 들어, 응용 프로그램에서 사용자 이름 및 Windows 인증을 사용 하 여 암호를 인증 한 다음 생성 된 <xref:System.IdentityModel.Claims.ClaimSet>와 <xref:System.IdentityModel.Claims.ClaimSet.Issuer%2A>속성이 Windows로 설정 합니다.</xref:System.IdentityModel.Claims.ClaimSet.Issuer%2A> </xref:System.IdentityModel.Claims.ClaimSet>"
  syntax:
    content: public static System.IdentityModel.Claims.ClaimSet Windows { get; }
    return:
      type: System.IdentityModel.Claims.ClaimSet
      description: "A <xref href=&quot;System.IdentityModel.Claims.ClaimSet&quot;> </xref> <xref:System.IdentityModel.Claims.ClaimTypes.Sid*>.</xref:System.IdentityModel.Claims.ClaimTypes.Sid*> 형식의 클레임이 하나 이상 포함 된"
  overload: System.IdentityModel.Claims.ClaimSet.Windows*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.IdentityModel.Claims.ClaimSet.#ctor
  parent: System.IdentityModel.Claims.ClaimSet
  isExternal: false
  name: ClaimSet()
  nameWithType: ClaimSet.ClaimSet()
  fullName: System.IdentityModel.Claims.ClaimSet.ClaimSet()
- uid: System.IdentityModel.Claims.ClaimSet.ContainsClaim(System.IdentityModel.Claims.Claim)
  parent: System.IdentityModel.Claims.ClaimSet
  isExternal: false
  name: ContainsClaim(Claim)
  nameWithType: ClaimSet.ContainsClaim(Claim)
  fullName: System.IdentityModel.Claims.ClaimSet.ContainsClaim(Claim)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Claims.Claim
  parent: System.IdentityModel.Claims
  isExternal: false
  name: Claim
  nameWithType: Claim
  fullName: System.IdentityModel.Claims.Claim
- uid: System.IdentityModel.Claims.ClaimSet.ContainsClaim(System.IdentityModel.Claims.Claim,System.Collections.Generic.IEqualityComparer{System.IdentityModel.Claims.Claim})
  parent: System.IdentityModel.Claims.ClaimSet
  isExternal: false
  name: ContainsClaim(Claim,IEqualityComparer<Claim>)
  nameWithType: ClaimSet.ContainsClaim(Claim,IEqualityComparer<Claim>)
  fullName: System.IdentityModel.Claims.ClaimSet.ContainsClaim(Claim,IEqualityComparer<Claim>)
- uid: System.Collections.Generic.IEqualityComparer{System.IdentityModel.Claims.Claim}
  parent: System.Collections.Generic
  isExternal: true
  name: IEqualityComparer<Claim>
  nameWithType: IEqualityComparer<Claim>
  fullName: System.Collections.Generic.IEqualityComparer<System.IdentityModel.Claims.Claim>
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: IEqualityComparer<System.IdentityModel.Claims.Claim>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: Claim
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Claims.ClaimSet.Count
  parent: System.IdentityModel.Claims.ClaimSet
  isExternal: false
  name: Count
  nameWithType: ClaimSet.Count
  fullName: System.IdentityModel.Claims.ClaimSet.Count
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IdentityModel.Claims.ClaimSet.FindClaims(System.String,System.String)
  parent: System.IdentityModel.Claims.ClaimSet
  isExternal: false
  name: FindClaims(String,String)
  nameWithType: ClaimSet.FindClaims(String,String)
  fullName: System.IdentityModel.Claims.ClaimSet.FindClaims(String,String)
- uid: System.Collections.Generic.IEnumerable{System.IdentityModel.Claims.Claim}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<Claim>
  nameWithType: IEnumerable<Claim>
  fullName: System.Collections.Generic.IEnumerable<System.IdentityModel.Claims.Claim>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.IdentityModel.Claims.Claim>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: Claim
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IdentityModel.Claims.ClaimSet.GetEnumerator
  parent: System.IdentityModel.Claims.ClaimSet
  isExternal: false
  name: GetEnumerator()
  nameWithType: ClaimSet.GetEnumerator()
  fullName: System.IdentityModel.Claims.ClaimSet.GetEnumerator()
- uid: System.Collections.Generic.IEnumerator{System.IdentityModel.Claims.Claim}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerator<Claim>
  nameWithType: IEnumerator<Claim>
  fullName: System.Collections.Generic.IEnumerator<System.IdentityModel.Claims.Claim>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator<System.IdentityModel.Claims.Claim>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: Claim
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Claims.ClaimSet.Issuer
  parent: System.IdentityModel.Claims.ClaimSet
  isExternal: false
  name: Issuer
  nameWithType: ClaimSet.Issuer
  fullName: System.IdentityModel.Claims.ClaimSet.Issuer
- uid: System.IdentityModel.Claims.ClaimSet
  parent: System.IdentityModel.Claims
  isExternal: false
  name: ClaimSet
  nameWithType: ClaimSet
  fullName: System.IdentityModel.Claims.ClaimSet
- uid: System.IdentityModel.Claims.ClaimSet.Item(System.Int32)
  parent: System.IdentityModel.Claims.ClaimSet
  isExternal: false
  name: Item(Int32)
  nameWithType: ClaimSet.Item(Int32)
  fullName: System.IdentityModel.Claims.ClaimSet.Item(Int32)
- uid: System.IdentityModel.Claims.ClaimSet.System
  parent: System.IdentityModel.Claims.ClaimSet
  isExternal: false
  name: System
  nameWithType: ClaimSet.System
  fullName: System.IdentityModel.Claims.ClaimSet.System
- uid: System.IdentityModel.Claims.ClaimSet.System#Collections#IEnumerable#GetEnumerator
  parent: System.IdentityModel.Claims.ClaimSet
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: ClaimSet.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.IdentityModel.Claims.ClaimSet.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.IdentityModel.Claims.ClaimSet.Windows
  parent: System.IdentityModel.Claims.ClaimSet
  isExternal: false
  name: Windows
  nameWithType: ClaimSet.Windows
  fullName: System.IdentityModel.Claims.ClaimSet.Windows
- uid: System.IdentityModel.Claims.ClaimSet.#ctor*
  parent: System.IdentityModel.Claims.ClaimSet
  isExternal: false
  name: ClaimSet
  nameWithType: ClaimSet.ClaimSet
- uid: System.IdentityModel.Claims.ClaimSet.ContainsClaim*
  parent: System.IdentityModel.Claims.ClaimSet
  isExternal: false
  name: ContainsClaim
  nameWithType: ClaimSet.ContainsClaim
- uid: System.IdentityModel.Claims.ClaimSet.Count*
  parent: System.IdentityModel.Claims.ClaimSet
  isExternal: false
  name: Count
  nameWithType: ClaimSet.Count
- uid: System.IdentityModel.Claims.ClaimSet.FindClaims*
  parent: System.IdentityModel.Claims.ClaimSet
  isExternal: false
  name: FindClaims
  nameWithType: ClaimSet.FindClaims
- uid: System.IdentityModel.Claims.ClaimSet.GetEnumerator*
  parent: System.IdentityModel.Claims.ClaimSet
  isExternal: false
  name: GetEnumerator
  nameWithType: ClaimSet.GetEnumerator
- uid: System.IdentityModel.Claims.ClaimSet.Issuer*
  parent: System.IdentityModel.Claims.ClaimSet
  isExternal: false
  name: Issuer
  nameWithType: ClaimSet.Issuer
- uid: System.IdentityModel.Claims.ClaimSet.Item*
  parent: System.IdentityModel.Claims.ClaimSet
  isExternal: false
  name: Item
  nameWithType: ClaimSet.Item
- uid: System.IdentityModel.Claims.ClaimSet.System*
  parent: System.IdentityModel.Claims.ClaimSet
  isExternal: false
  name: System
  nameWithType: ClaimSet.System
- uid: System.IdentityModel.Claims.ClaimSet.System#Collections#IEnumerable#GetEnumerator*
  parent: System.IdentityModel.Claims.ClaimSet
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: ClaimSet.System.Collections.IEnumerable.GetEnumerator
- uid: System.IdentityModel.Claims.ClaimSet.Windows*
  parent: System.IdentityModel.Claims.ClaimSet
  isExternal: false
  name: Windows
  nameWithType: ClaimSet.Windows
