### YamlMime:ManagedReference
items:
- uid: System.IO.Pipes.NamedPipeClientStream
  id: NamedPipeClientStream
  children:
  - System.IO.Pipes.NamedPipeClientStream.#ctor(System.String)
  - System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String)
  - System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection)
  - System.IO.Pipes.NamedPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,System.Boolean,System.Boolean,Microsoft.Win32.SafeHandles.SafePipeHandle)
  - System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions)
  - System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel)
  - System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeAccessRights,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)
  - System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)
  - System.IO.Pipes.NamedPipeClientStream.CheckPipePropertyOperations
  - System.IO.Pipes.NamedPipeClientStream.Connect
  - System.IO.Pipes.NamedPipeClientStream.Connect(System.Int32)
  - System.IO.Pipes.NamedPipeClientStream.ConnectAsync
  - System.IO.Pipes.NamedPipeClientStream.ConnectAsync(System.Int32)
  - System.IO.Pipes.NamedPipeClientStream.ConnectAsync(System.Threading.CancellationToken)
  - System.IO.Pipes.NamedPipeClientStream.ConnectAsync(System.Int32,System.Threading.CancellationToken)
  - System.IO.Pipes.NamedPipeClientStream.Finalize
  - System.IO.Pipes.NamedPipeClientStream.NumberOfServerInstances
  langs:
  - csharp
  name: NamedPipeClientStream
  nameWithType: NamedPipeClientStream
  fullName: System.IO.Pipes.NamedPipeClientStream
  type: Class
  summary: "노출 된 <xref:System.IO.Stream>지 원하는 동기 및 비동기 읽기 / 쓰기 작업 명명된 된 파이프 주위의.</xref:System.IO.Stream>"
  remarks: "명명 된 파이프 파이프 서버와 하나 이상의 파이프 클라이언트 간의 통신에 대 한 단방향 또는 이중 파이프를 제공합니다. 로컬 또는 네트워크를 통해 명명 된 파이프를 프로세스 간 통신에 사용할 수 있습니다. 여러 NamedPipeClientStream 개체에서 하나의 파이프 이름을 공유할 수 있습니다.       모든 프로세스는 명명된 된 파이프 서버 또는 클라이언트 또는 둘 다로 작동할 수 있습니다.      > [!NOTE] >에 대 한 [!INCLUDE[winxppro](~/add/includes/winxppro-md.md)] 및 [!INCLUDE[win2kserver](~/add/includes/win2kserver-md.md)], 최대 10 개의 파이프는 네트워크를 통해 동시에 연결할 수 있습니다."
  example:
  - "The following example demonstrates a way to send a string from a parent process to a child process on the same computer using named pipes. This example creates a <xref:System.IO.Pipes.NamedPipeServerStream> object in a parent process. The <xref:System.IO.Pipes.NamedPipeServerStream> object has a <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection>. The server then waits for a NamedPipeClientStream object in a child process to connect to it. In this example, both processes are on the same computer and the NamedPipeClientStream object has a <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection>. The parent process then sends a user-supplied string to the child process. The string is displayed to the console.  \n  \n This example is for the client process, which connects to the server process. For the entire code sample, including the code for both the pipe client and server, see [How to: Use Named Pipes for Network Interprocess Communication](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.IO.Pipes.NamedPipeClientStream_Sample1#01](~/add/codesnippet/visualbasic/t-system.io.pipes.namedp_1_1.vb)]\n [!code-cs[System.IO.Pipes.NamedPipeClientStream_Sample1#01](~/add/codesnippet/csharp/t-system.io.pipes.namedp_1_1.cs)]"
  syntax:
    content: 'public sealed class NamedPipeClientStream : System.IO.Pipes.PipeStream'
  inheritance:
  - System.IO.Stream
  - System.IO.Pipes.PipeStream
  implements: []
  inheritedMembers:
  - System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.IO.Pipes.PipeStream.CanRead
  - System.IO.Pipes.PipeStream.CanSeek
  - System.IO.Pipes.PipeStream.CanWrite
  - System.IO.Pipes.PipeStream.CheckReadOperations
  - System.IO.Pipes.PipeStream.CheckWriteOperations
  - System.IO.Pipes.PipeStream.Dispose(System.Boolean)
  - System.IO.Pipes.PipeStream.EndRead(System.IAsyncResult)
  - System.IO.Pipes.PipeStream.EndWrite(System.IAsyncResult)
  - System.IO.Pipes.PipeStream.Flush
  - System.IO.Pipes.PipeStream.GetAccessControl
  - System.IO.Pipes.PipeStream.InBufferSize
  - System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)
  - System.IO.Pipes.PipeStream.IsAsync
  - System.IO.Pipes.PipeStream.IsConnected
  - System.IO.Pipes.PipeStream.IsHandleExposed
  - System.IO.Pipes.PipeStream.IsMessageComplete
  - System.IO.Pipes.PipeStream.Length
  - System.IO.Pipes.PipeStream.OutBufferSize
  - System.IO.Pipes.PipeStream.Position
  - System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)
  - System.IO.Pipes.PipeStream.ReadByte
  - System.IO.Pipes.PipeStream.ReadMode
  - System.IO.Pipes.PipeStream.SafePipeHandle
  - System.IO.Pipes.PipeStream.Seek(System.Int64,System.IO.SeekOrigin)
  - System.IO.Pipes.PipeStream.SetAccessControl(System.IO.Pipes.PipeSecurity)
  - System.IO.Pipes.PipeStream.SetLength(System.Int64)
  - System.IO.Pipes.PipeStream.TransmissionMode
  - System.IO.Pipes.PipeStream.WaitForPipeDrain
  - System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)
  - System.IO.Pipes.PipeStream.WriteByte(System.Byte)
  platform:
  - net462
- uid: System.IO.Pipes.NamedPipeClientStream.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.IO.Pipes.NamedPipeClientStream
  langs:
  - csharp
  name: NamedPipeClientStream(String)
  nameWithType: NamedPipeClientStream.NamedPipeClientStream(String)
  fullName: System.IO.Pipes.NamedPipeClientStream.NamedPipeClientStream(String)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.IO.Pipes.NamedPipeClientStream&quot;> </xref> 지정 된 파이프 이름 사용 합니다."
  remarks: "이 생성자는 다음과 같은 기본값을 사용:-의 기본 서버 이름은 &quot;.&quot;입니다.      -기본 <xref:System.IO.Pipes.PipeDirection> <xref:System.IO.Pipes.PipeDirection>안내 하십시오.</xref:System.IO.Pipes.PipeDirection> 값</xref:System.IO.Pipes.PipeDirection>      -기본 <xref:System.IO.Pipes.PipeOptions> <xref:System.IO.Pipes.PipeOptions>안내 하십시오.</xref:System.IO.Pipes.PipeOptions> 값</xref:System.IO.Pipes.PipeOptions>      -기본 <xref:System.Security.Principal.TokenImpersonationLevel> <xref:System.Security.Principal.TokenImpersonationLevel>안내 하십시오.</xref:System.Security.Principal.TokenImpersonationLevel> 값</xref:System.Security.Principal.TokenImpersonationLevel>      -기본 <xref:System.IO.HandleInheritability> <xref:System.IO.HandleInheritability>안내 하십시오.</xref:System.IO.HandleInheritability> 값</xref:System.IO.HandleInheritability>"
  syntax:
    content: public NamedPipeClientStream (string pipeName);
    parameters:
    - id: pipeName
      type: System.String
      description: "파이프의 이름입니다."
  overload: System.IO.Pipes.NamedPipeClientStream.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pipeName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>pipeName</code>빈 문자열입니다."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>pipeName</code>&quot;anonymous&quot;로 설정 합니다."
  platform:
  - net462
- uid: System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.IO.Pipes.NamedPipeClientStream
  langs:
  - csharp
  name: NamedPipeClientStream(String,String)
  nameWithType: NamedPipeClientStream.NamedPipeClientStream(String,String)
  fullName: System.IO.Pipes.NamedPipeClientStream.NamedPipeClientStream(String,String)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.IO.Pipes.NamedPipeClientStream&quot;> </xref> 클래스 지정 된 파이프 및 서버 이름 사용 합니다."
  remarks: "이 생성자는 다음과 같은 기본값을 사용:-A <xref:System.IO.Pipes.PipeDirection> <xref:System.IO.Pipes.PipeDirection>안내 하십시오.</xref:System.IO.Pipes.PipeDirection> </xref:System.IO.Pipes.PipeDirection> 기본값      -기본 <xref:System.IO.Pipes.PipeOptions> <xref:System.IO.Pipes.PipeOptions>안내 하십시오.</xref:System.IO.Pipes.PipeOptions> 값</xref:System.IO.Pipes.PipeOptions>      -기본 <xref:System.Security.Principal.TokenImpersonationLevel> <xref:System.Security.Principal.TokenImpersonationLevel>안내 하십시오.</xref:System.Security.Principal.TokenImpersonationLevel> 값</xref:System.Security.Principal.TokenImpersonationLevel>      -기본 <xref:System.IO.HandleInheritability> <xref:System.IO.HandleInheritability>안내 하십시오.</xref:System.IO.HandleInheritability> 값</xref:System.IO.HandleInheritability>"
  syntax:
    content: public NamedPipeClientStream (string serverName, string pipeName);
    parameters:
    - id: serverName
      type: System.String
      description: "에 연결 하는 원격 컴퓨터의 이름 또는 &quot;.&quot; 로컬 컴퓨터를 지정 합니다."
    - id: pipeName
      type: System.String
      description: "파이프의 이름입니다."
  overload: System.IO.Pipes.NamedPipeClientStream.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pipeName</code>or <code>serverName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>pipeName</code>또는 <code>serverName</code> 은 길이가&0; 인 문자열입니다."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>pipeName</code>&quot;anonymous&quot;로 설정 합니다."
  platform:
  - net462
- uid: System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection)
  id: '#ctor(System.String,System.String,System.IO.Pipes.PipeDirection)'
  parent: System.IO.Pipes.NamedPipeClientStream
  langs:
  - csharp
  name: NamedPipeClientStream(String,String,PipeDirection)
  nameWithType: NamedPipeClientStream.NamedPipeClientStream(String,String,PipeDirection)
  fullName: System.IO.Pipes.NamedPipeClientStream.NamedPipeClientStream(String,String,PipeDirection)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.IO.Pipes.NamedPipeClientStream&quot;> </xref> 된 지정 된 파이프와 서버 이름 및 지정 된 파이프 방향입니다."
  remarks: "이 생성자는 다음과 같은 기본값을 사용:-A <xref:System.IO.Pipes.PipeOptions> <xref:System.IO.Pipes.PipeOptions>안내 하십시오.</xref:System.IO.Pipes.PipeOptions> </xref:System.IO.Pipes.PipeOptions> 기본값      -기본 <xref:System.Security.Principal.TokenImpersonationLevel> <xref:System.Security.Principal.TokenImpersonationLevel>안내 하십시오.</xref:System.Security.Principal.TokenImpersonationLevel> 값</xref:System.Security.Principal.TokenImpersonationLevel>      -기본 <xref:System.IO.HandleInheritability> <xref:System.IO.HandleInheritability>안내 하십시오.</xref:System.IO.HandleInheritability> 값</xref:System.IO.HandleInheritability>"
  example:
  - "The following example demonstrates a method to send a string from a parent process to a child process using named pipes. This example creates a <xref:System.IO.Pipes.NamedPipeClientStream> object in a child process, which then connects to a pipe on the local computer. The server example can be seen in the <xref:System.IO.Pipes.NamedPipeServerStream> class. This example is part of a larger example provided for the <xref:System.IO.Pipes.NamedPipeServerStream> and <xref:System.IO.Pipes.NamedPipeClientStream> classes.  \n  \n [!code-vb[System.IO.Pipes.NamedPipeClientStream_Sample1#01](~/add/codesnippet/visualbasic/4b637d6e-09dd-4dd0-9a45-_1.vb)]\n [!code-cs[System.IO.Pipes.NamedPipeClientStream_Sample1#01](~/add/codesnippet/csharp/4b637d6e-09dd-4dd0-9a45-_1.cs)]"
  syntax:
    content: public NamedPipeClientStream (string serverName, string pipeName, System.IO.Pipes.PipeDirection direction);
    parameters:
    - id: serverName
      type: System.String
      description: "에 연결 하는 원격 컴퓨터의 이름 또는 &quot;.&quot; 로컬 컴퓨터를 지정 합니다."
    - id: pipeName
      type: System.String
      description: "파이프의 이름입니다."
    - id: direction
      type: System.IO.Pipes.PipeDirection
      description: "파이프의 방향을 결정 하는 열거형 값 중 하나입니다."
  overload: System.IO.Pipes.NamedPipeClientStream.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pipeName</code>or <code>serverName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>pipeName</code>또는 <code>serverName</code> 은 길이가&0; 인 문자열입니다."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>pipeName</code>&quot;anonymous&quot;로 설정 합니다.       -또는- <code>direction</code> 유효 하지 않거나 <xref href=&quot;System.IO.Pipes.PipeDirection&quot;> </xref> 값입니다."
  platform:
  - net462
- uid: System.IO.Pipes.NamedPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,System.Boolean,System.Boolean,Microsoft.Win32.SafeHandles.SafePipeHandle)
  id: '#ctor(System.IO.Pipes.PipeDirection,System.Boolean,System.Boolean,Microsoft.Win32.SafeHandles.SafePipeHandle)'
  parent: System.IO.Pipes.NamedPipeClientStream
  langs:
  - csharp
  name: NamedPipeClientStream(PipeDirection,Boolean,Boolean,SafePipeHandle)
  nameWithType: NamedPipeClientStream.NamedPipeClientStream(PipeDirection,Boolean,Boolean,SafePipeHandle)
  fullName: System.IO.Pipes.NamedPipeClientStream.NamedPipeClientStream(PipeDirection,Boolean,Boolean,SafePipeHandle)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.IO.Pipes.NamedPipeClientStream&quot;> </xref> 지정 된 파이프 방향으로 지정 된 파이프 핸들에 대 한 클래스입니다."
  syntax:
    content: public NamedPipeClientStream (System.IO.Pipes.PipeDirection direction, bool isAsync, bool isConnected, Microsoft.Win32.SafeHandles.SafePipeHandle safePipeHandle);
    parameters:
    - id: direction
      type: System.IO.Pipes.PipeDirection
      description: "파이프의 방향을 결정 하는 열거형 값 중 하나입니다."
    - id: isAsync
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>핸들이 비동기적으로 열렸으면 나타내기 위해 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
    - id: isConnected
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>파이프가; 연결을 나타내기 위해 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
    - id: safePipeHandle
      type: Microsoft.Win32.SafeHandles.SafePipeHandle
      description: "이 파이프에 대 한 안전 하 게 처리 <xref href=&quot;System.IO.Pipes.NamedPipeClientStream&quot;> </xref> 개체가 캡슐화 됩니다."
  overload: System.IO.Pipes.NamedPipeClientStream.#ctor*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "스트림이 닫혔습니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>safePipeHandle</code>유효한 핸들이 않습니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>safePipeHandle</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>direction</code>유효 하지 않거나 <xref href=&quot;System.IO.Pipes.PipeDirection&quot;> </xref> 값입니다."
  platform:
  - net462
- uid: System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions)
  id: '#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions)'
  parent: System.IO.Pipes.NamedPipeClientStream
  langs:
  - csharp
  name: NamedPipeClientStream(String,String,PipeDirection,PipeOptions)
  nameWithType: NamedPipeClientStream.NamedPipeClientStream(String,String,PipeDirection,PipeOptions)
  fullName: System.IO.Pipes.NamedPipeClientStream.NamedPipeClientStream(String,String,PipeDirection,PipeOptions)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.IO.Pipes.NamedPipeClientStream&quot;> </xref> 지정 된 파이프와 서버 이름 및 지정 된 파이프 방향 및 파이프 옵션 클래스입니다."
  remarks: "이 생성자는 다음과 같은 기본값을 사용:-A <xref:System.Security.Principal.TokenImpersonationLevel> <xref:System.Security.Principal.TokenImpersonationLevel>안내 하십시오.</xref:System.Security.Principal.TokenImpersonationLevel> </xref:System.Security.Principal.TokenImpersonationLevel> 기본값      -기본 <xref:System.IO.HandleInheritability> <xref:System.IO.HandleInheritability>안내 하십시오.</xref:System.IO.HandleInheritability> 값</xref:System.IO.HandleInheritability>"
  syntax:
    content: public NamedPipeClientStream (string serverName, string pipeName, System.IO.Pipes.PipeDirection direction, System.IO.Pipes.PipeOptions options);
    parameters:
    - id: serverName
      type: System.String
      description: "에 연결 하는 원격 컴퓨터의 이름 또는 &quot;.&quot; 로컬 컴퓨터를 지정 합니다."
    - id: pipeName
      type: System.String
      description: "파이프의 이름입니다."
    - id: direction
      type: System.IO.Pipes.PipeDirection
      description: "파이프의 방향을 결정 하는 열거형 값 중 하나입니다."
    - id: options
      type: System.IO.Pipes.PipeOptions
      description: "열거나 파이프를 만드는 방법을 결정 하는 열거형 값 중 하나입니다."
  overload: System.IO.Pipes.NamedPipeClientStream.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pipeName</code>or <code>serverName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>pipeName</code>또는 <code>serverName</code> 은 길이가&0; 인 문자열입니다."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>pipeName</code>&quot;anonymous&quot;로 설정 합니다.       -또는- <code>direction</code> 유효 하지 않거나 <xref href=&quot;System.IO.Pipes.PipeDirection&quot;> </xref> 값입니다.       -또는- <code>options</code> 유효 하지 않거나 <xref href=&quot;System.IO.Pipes.PipeOptions&quot;> </xref> 값입니다."
  platform:
  - net462
- uid: System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel)
  id: '#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel)'
  parent: System.IO.Pipes.NamedPipeClientStream
  langs:
  - csharp
  name: NamedPipeClientStream(String,String,PipeDirection,PipeOptions,TokenImpersonationLevel)
  nameWithType: NamedPipeClientStream.NamedPipeClientStream(String,String,PipeDirection,PipeOptions,TokenImpersonationLevel)
  fullName: System.IO.Pipes.NamedPipeClientStream.NamedPipeClientStream(String,String,PipeDirection,PipeOptions,TokenImpersonationLevel)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.IO.Pipes.NamedPipeClientStream&quot;> </xref> 지정 된 파이프와 서버 이름 및 지정 된 파이프 방향, 파이프 옵션 및 보안 가장 수준을 클래스입니다."
  remarks: "이 생성자는 기본 <xref:System.IO.HandleInheritability> <xref:System.IO.HandleInheritability>.</xref:System.IO.HandleInheritability> 의 값</xref:System.IO.HandleInheritability> 을 사용합니다."
  syntax:
    content: public NamedPipeClientStream (string serverName, string pipeName, System.IO.Pipes.PipeDirection direction, System.IO.Pipes.PipeOptions options, System.Security.Principal.TokenImpersonationLevel impersonationLevel);
    parameters:
    - id: serverName
      type: System.String
      description: "에 연결 하는 원격 컴퓨터의 이름 또는 &quot;.&quot; 로컬 컴퓨터를 지정 합니다."
    - id: pipeName
      type: System.String
      description: "파이프의 이름입니다."
    - id: direction
      type: System.IO.Pipes.PipeDirection
      description: "파이프의 방향을 결정 하는 열거형 값 중 하나입니다."
    - id: options
      type: System.IO.Pipes.PipeOptions
      description: "열거나 파이프를 만드는 방법을 결정 하는 열거형 값 중 하나입니다."
    - id: impersonationLevel
      type: System.Security.Principal.TokenImpersonationLevel
      description: "보안 가장 수준을 결정 하는 열거형 값 중 하나입니다."
  overload: System.IO.Pipes.NamedPipeClientStream.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pipeName</code>or <code>serverName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>pipeName</code>또는 <code>serverName</code> 은 길이가&0; 인 문자열입니다."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>pipeName</code>&quot;anonymous&quot;로 설정 합니다.       -또는- <code>direction</code> 유효 하지 않거나 <xref href=&quot;System.IO.Pipes.PipeDirection&quot;> </xref> 값입니다.       -또는- <code>options</code> 유효 하지 않거나 <xref href=&quot;System.IO.Pipes.PipeOptions&quot;> </xref> 값입니다.       -또는- <code>impersonationLevel</code> 유효 하지 않거나 <xref:System.Security.Principal.TokenImpersonationLevel> 값입니다."
  platform:
  - net462
- uid: System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeAccessRights,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)
  id: '#ctor(System.String,System.String,System.IO.Pipes.PipeAccessRights,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)'
  parent: System.IO.Pipes.NamedPipeClientStream
  langs:
  - csharp
  name: NamedPipeClientStream(String,String,PipeAccessRights,PipeOptions,TokenImpersonationLevel,HandleInheritability)
  nameWithType: NamedPipeClientStream.NamedPipeClientStream(String,String,PipeAccessRights,PipeOptions,TokenImpersonationLevel,HandleInheritability)
  fullName: System.IO.Pipes.NamedPipeClientStream.NamedPipeClientStream(String,String,PipeAccessRights,PipeOptions,TokenImpersonationLevel,HandleInheritability)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.IO.Pipes.NamedPipeClientStream&quot;> </xref> 된 지정 된 파이프와 서버 이름 및 지정 된 파이프 옵션, 보안 가장 수준 및 상속 모드입니다."
  remarks: "이 생성자에 대 한 파이프 방향을 따라 사용자가 `desiredAccessRights` 매개 변수입니다. 경우는 `desiredAccessRights` 값은 <xref:System.IO.Pipes.PipeAccessRights>의 파이프 방향은 <xref:System.IO.Pipes.PipeDirection>.</xref:System.IO.Pipes.PipeDirection> 됩니다</xref:System.IO.Pipes.PipeAccessRights> 하는 경우의 값 `desiredAccessRights` <xref:System.IO.Pipes.PipeAccessRights>의 파이프 방향은 <xref:System.IO.Pipes.PipeDirection>.</xref:System.IO.Pipes.PipeDirection> 됩니다</xref:System.IO.Pipes.PipeAccessRights> , 하는 경우의 값 `desiredAccessRights` 모두 포함 <xref:System.IO.Pipes.PipeAccessRights>및 <xref:System.IO.Pipes.PipeAccessRights>의 파이프 방향은 <xref:System.IO.Pipes.PipeDirection>.</xref:System.IO.Pipes.PipeDirection> 됩니다,</xref:System.IO.Pipes.PipeAccessRights> </xref:System.IO.Pipes.PipeAccessRights>"
  syntax:
    content: public NamedPipeClientStream (string serverName, string pipeName, System.IO.Pipes.PipeAccessRights desiredAccessRights, System.IO.Pipes.PipeOptions options, System.Security.Principal.TokenImpersonationLevel impersonationLevel, System.IO.HandleInheritability inheritability);
    parameters:
    - id: serverName
      type: System.String
      description: "에 연결 하는 원격 컴퓨터의 이름 또는 &quot;.&quot; 로컬 컴퓨터를 지정 합니다."
    - id: pipeName
      type: System.String
      description: "파이프의 이름입니다."
    - id: desiredAccessRights
      type: System.IO.Pipes.PipeAccessRights
      description: "파이프의 적절된 한 액세스 권한을 지정 하는 열거형 값 중 하나입니다."
    - id: options
      type: System.IO.Pipes.PipeOptions
      description: "열거나 파이프를 만드는 방법을 결정 하는 열거형 값 중 하나입니다."
    - id: impersonationLevel
      type: System.Security.Principal.TokenImpersonationLevel
      description: "보안 가장 수준을 결정 하는 열거형 값 중 하나입니다."
    - id: inheritability
      type: System.IO.HandleInheritability
      description: "기본 핸들이 자식 프로세스로 상속 됩니다 수 있는지 여부를 결정 하는 열거형 값 중 하나입니다."
  overload: System.IO.Pipes.NamedPipeClientStream.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pipeName</code>or <code>serverName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>pipeName</code>또는 <code>serverName</code> 은 길이가&0; 인 문자열입니다."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>pipeName</code>&quot;anonymous&quot;로 설정 합니다.       -또는- <code>options</code> 유효 하지 않거나 <xref href=&quot;System.IO.Pipes.PipeOptions&quot;> </xref> 값입니다.       -또는- <code>impersonationLevel</code> 유효 하지 않거나 <xref:System.Security.Principal.TokenImpersonationLevel> 값입니다.       -또는- <code>inheritability</code> 유효 하지 않거나 <xref:System.IO.HandleInheritability> 값입니다."
  platform:
  - net462
- uid: System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)
  id: '#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)'
  parent: System.IO.Pipes.NamedPipeClientStream
  langs:
  - csharp
  name: NamedPipeClientStream(String,String,PipeDirection,PipeOptions,TokenImpersonationLevel,HandleInheritability)
  nameWithType: NamedPipeClientStream.NamedPipeClientStream(String,String,PipeDirection,PipeOptions,TokenImpersonationLevel,HandleInheritability)
  fullName: System.IO.Pipes.NamedPipeClientStream.NamedPipeClientStream(String,String,PipeDirection,PipeOptions,TokenImpersonationLevel,HandleInheritability)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.IO.Pipes.NamedPipeClientStream&quot;> </xref> 된 지정 된 파이프와 서버 이름 및 지정 된 파이프 방향, 파이프 옵션, 보안 가장 수준 및 상속 모드입니다."
  syntax:
    content: public NamedPipeClientStream (string serverName, string pipeName, System.IO.Pipes.PipeDirection direction, System.IO.Pipes.PipeOptions options, System.Security.Principal.TokenImpersonationLevel impersonationLevel, System.IO.HandleInheritability inheritability);
    parameters:
    - id: serverName
      type: System.String
      description: "에 연결 하는 원격 컴퓨터의 이름 또는 &quot;.&quot; 로컬 컴퓨터를 지정 합니다."
    - id: pipeName
      type: System.String
      description: "파이프의 이름입니다."
    - id: direction
      type: System.IO.Pipes.PipeDirection
      description: "파이프의 방향을 결정 하는 열거형 값 중 하나입니다."
    - id: options
      type: System.IO.Pipes.PipeOptions
      description: "열거나 파이프를 만드는 방법을 결정 하는 열거형 값 중 하나입니다."
    - id: impersonationLevel
      type: System.Security.Principal.TokenImpersonationLevel
      description: "보안 가장 수준을 결정 하는 열거형 값 중 하나입니다."
    - id: inheritability
      type: System.IO.HandleInheritability
      description: "기본 핸들이 자식 프로세스로 상속 됩니다 수 있는지 여부를 결정 하는 열거형 값 중 하나입니다."
  overload: System.IO.Pipes.NamedPipeClientStream.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pipeName</code>or <code>serverName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>pipeName</code>또는 <code>serverName</code> 은 길이가&0; 인 문자열입니다."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>pipeName</code>&quot;anonymous&quot;로 설정 합니다.       -또는- <code>direction</code> 유효 하지 않거나 <xref href=&quot;System.IO.Pipes.PipeDirection&quot;> </xref> 값입니다.       -또는- <code>options</code> 유효 하지 않거나 <xref href=&quot;System.IO.Pipes.PipeOptions&quot;> </xref> 값입니다.       -또는- <code>impersonationLevel</code> 유효 하지 않거나 <xref:System.Security.Principal.TokenImpersonationLevel> 값입니다.       -또는- <code>inheritability</code> 유효 하지 않거나 <xref:System.IO.HandleInheritability> 값입니다."
  platform:
  - net462
- uid: System.IO.Pipes.NamedPipeClientStream.CheckPipePropertyOperations
  id: CheckPipePropertyOperations
  parent: System.IO.Pipes.NamedPipeClientStream
  langs:
  - csharp
  name: CheckPipePropertyOperations()
  nameWithType: NamedPipeClientStream.CheckPipePropertyOperations()
  fullName: System.IO.Pipes.NamedPipeClientStream.CheckPipePropertyOperations()
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  syntax:
    content: protected override void CheckPipePropertyOperations ();
    parameters: []
  overload: System.IO.Pipes.NamedPipeClientStream.CheckPipePropertyOperations*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.NamedPipeClientStream.Connect
  id: Connect
  parent: System.IO.Pipes.NamedPipeClientStream
  langs:
  - csharp
  name: Connect()
  nameWithType: NamedPipeClientStream.Connect()
  fullName: System.IO.Pipes.NamedPipeClientStream.Connect()
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "무한 시간 제한 값을 사용 하 여 대기 서버에 연결합니다."
  remarks: "이 메서드는 <xref:System.IO.Pipes.NamedPipeClientStream.Connect%28System.Int32%29>메서드는 무한 시간 제한 값을 사용 합니다.</xref:System.IO.Pipes.NamedPipeClientStream.Connect%28System.Int32%29>       이 메서드는 파이프 인스턴스를 사용할 수 있을 때까지 대기 합니다. <xref:System.IO.Pipes.NamedPipeClientStream.Connect%2A>전에 반환 될 수 <xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A>에서 호출 되는 <xref:System.IO.Pipes.NamedPipeServerStream>개체 하지만 <xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A>될 때까지 반환 되지 것입니다 <xref:System.IO.Pipes.NamedPipeClientStream.Connect%2A>반환 했습니다.</xref:System.IO.Pipes.NamedPipeClientStream.Connect%2A> </xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A> </xref:System.IO.Pipes.NamedPipeServerStream> </xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A></xref:System.IO.Pipes.NamedPipeClientStream.Connect%2A>       파이프에 쓴 데이터는 <xref:System.IO.Pipes.NamedPipeClientStream>개체가 연결 <xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A> <xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A>.</xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A> 를 호출한 다음 서버에 사용할 수 있습니다,</xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A> 서버가 호출 되기 전에</xref:System.IO.Pipes.NamedPipeClientStream>"
  example:
  - "The following example demonstrates a method to send a string from a parent process to a child process using named pipes. This example creates a <xref:System.IO.Pipes.NamedPipeClientStream> object in a child process, which then connects to a pipe on the local computer. The server example can be seen in the <xref:System.IO.Pipes.NamedPipeServerStream> class. This example is part of a larger example provided for the <xref:System.IO.Pipes.NamedPipeServerStream> and <xref:System.IO.Pipes.NamedPipeClientStream> classes.  \n  \n [!code-vb[System.IO.Pipes.NamedPipeClientStream_Sample1#01](~/add/codesnippet/visualbasic/m-system.io.pipes.namedp_1_1.vb)]\n [!code-cs[System.IO.Pipes.NamedPipeClientStream_Sample1#01](~/add/codesnippet/csharp/m-system.io.pipes.namedp_1_1.cs)]"
  syntax:
    content: public void Connect ();
    parameters: []
  overload: System.IO.Pipes.NamedPipeClientStream.Connect*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "클라이언트가 이미 연결 되었습니다."
  platform:
  - net462
- uid: System.IO.Pipes.NamedPipeClientStream.Connect(System.Int32)
  id: Connect(System.Int32)
  parent: System.IO.Pipes.NamedPipeClientStream
  langs:
  - csharp
  name: Connect(Int32)
  nameWithType: NamedPipeClientStream.Connect(Int32)
  fullName: System.IO.Pipes.NamedPipeClientStream.Connect(Int32)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "지정된 된 제한 시간 내에 대기 중인 서버에 연결 합니다."
  remarks: "이 메서드는 파이프 인스턴스를 사용할 수 있을 때까지 대기 합니다. <xref:System.IO.Pipes.NamedPipeClientStream.Connect%2A>전에 반환 될 수 <xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A>에서 호출 되는 <xref:System.IO.Pipes.NamedPipeServerStream>, 하지만 <xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A>될 때까지 반환 되지 것입니다 <xref:System.IO.Pipes.NamedPipeClientStream.Connect%2A>반환 했습니다.</xref:System.IO.Pipes.NamedPipeClientStream.Connect%2A> </xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A> </xref:System.IO.Pipes.NamedPipeServerStream> </xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A></xref:System.IO.Pipes.NamedPipeClientStream.Connect%2A> 설정한는 `timeout` 매개 변수를 <xref:System.Threading.Timeout.Infinite>무한 시간 제한 값을 지정 하려면.</xref:System.Threading.Timeout.Infinite>       파이프에 쓴 데이터는 <xref:System.IO.Pipes.NamedPipeClientStream>개체가 연결 <xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A> <xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A>.</xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A> 를 호출한 다음 서버에 사용할 수 있습니다,</xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A> 서버가 호출 되기 전에</xref:System.IO.Pipes.NamedPipeClientStream>"
  syntax:
    content: public void Connect (int timeout);
    parameters:
    - id: timeout
      type: System.Int32
      description: "서버 연결 시간 초과 되기 전에 응답을 기다릴 밀리초 수입니다."
  overload: System.IO.Pipes.NamedPipeClientStream.Connect*
  exceptions:
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "지정 된 서버에 연결 하지 못했습니다 <code> timeout </code> 기간입니다."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>가 0 보다 작은 및로 설정 되지 않은 <xref:System.Threading.Timeout.Infinite>합니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "클라이언트가 이미 연결 되었습니다."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "서버가 다른 클라이언트에 연결 되어 및 시간 제한 기간이 만료 되었습니다."
  platform:
  - net462
- uid: System.IO.Pipes.NamedPipeClientStream.ConnectAsync
  id: ConnectAsync
  parent: System.IO.Pipes.NamedPipeClientStream
  langs:
  - csharp
  name: ConnectAsync()
  nameWithType: NamedPipeClientStream.ConnectAsync()
  fullName: System.IO.Pipes.NamedPipeClientStream.ConnectAsync()
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "비동기적으로 무한 한 제한 시간을 사용 하 여 대기 서버에 연결합니다."
  syntax:
    content: public System.Threading.Tasks.Task ConnectAsync ();
    parameters: []
    return:
      type: System.Threading.Tasks.Task
      description: "연결 작업을 나타내는 비동기 작업입니다."
  overload: System.IO.Pipes.NamedPipeClientStream.ConnectAsync*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.NamedPipeClientStream.ConnectAsync(System.Int32)
  id: ConnectAsync(System.Int32)
  parent: System.IO.Pipes.NamedPipeClientStream
  langs:
  - csharp
  name: ConnectAsync(Int32)
  nameWithType: NamedPipeClientStream.ConnectAsync(Int32)
  fullName: System.IO.Pipes.NamedPipeClientStream.ConnectAsync(Int32)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "비동기적으로 지정된 된 제한 시간 내에서 대기 중인 서버에 연결합니다."
  syntax:
    content: public System.Threading.Tasks.Task ConnectAsync (int timeout);
    parameters:
    - id: timeout
      type: System.Int32
      description: "서버 연결 시간 초과 되기 전에 응답을 기다릴 밀리초 수입니다."
    return:
      type: System.Threading.Tasks.Task
      description: "연결 작업을 나타내는 비동기 작업입니다."
  overload: System.IO.Pipes.NamedPipeClientStream.ConnectAsync*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.NamedPipeClientStream.ConnectAsync(System.Threading.CancellationToken)
  id: ConnectAsync(System.Threading.CancellationToken)
  parent: System.IO.Pipes.NamedPipeClientStream
  langs:
  - csharp
  name: ConnectAsync(CancellationToken)
  nameWithType: NamedPipeClientStream.ConnectAsync(CancellationToken)
  fullName: System.IO.Pipes.NamedPipeClientStream.ConnectAsync(CancellationToken)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "비동기적으로 대기 중인 서버에 연결 하 고 취소 요청을 모니터링 합니다."
  syntax:
    content: public System.Threading.Tasks.Task ConnectAsync (System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "취소 요청을 모니터링할 토큰입니다. 기본값은 <xref:System.Threading.CancellationToken.None*>.</xref:System.Threading.CancellationToken.None*>"
    return:
      type: System.Threading.Tasks.Task
      description: "연결 작업을 나타내는 비동기 작업입니다."
  overload: System.IO.Pipes.NamedPipeClientStream.ConnectAsync*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.NamedPipeClientStream.ConnectAsync(System.Int32,System.Threading.CancellationToken)
  id: ConnectAsync(System.Int32,System.Threading.CancellationToken)
  parent: System.IO.Pipes.NamedPipeClientStream
  langs:
  - csharp
  name: ConnectAsync(Int32,CancellationToken)
  nameWithType: NamedPipeClientStream.ConnectAsync(Int32,CancellationToken)
  fullName: System.IO.Pipes.NamedPipeClientStream.ConnectAsync(Int32,CancellationToken)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "비동기적으로 지정된 된 제한 시간 내에 대기 중인 서버에 연결 하 고 취소 요청을 모니터링 합니다."
  syntax:
    content: public System.Threading.Tasks.Task ConnectAsync (int timeout, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: timeout
      type: System.Int32
      description: "서버 연결 시간 초과 되기 전에 응답을 기다릴 밀리초 수입니다."
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "취소 요청을 모니터링할 토큰입니다. 기본값은 <xref:System.Threading.CancellationToken.None*>.</xref:System.Threading.CancellationToken.None*>"
    return:
      type: System.Threading.Tasks.Task
      description: "연결 작업을 나타내는 비동기 작업입니다."
  overload: System.IO.Pipes.NamedPipeClientStream.ConnectAsync*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.NamedPipeClientStream.Finalize
  id: Finalize
  parent: System.IO.Pipes.NamedPipeClientStream
  langs:
  - csharp
  name: Finalize()
  nameWithType: NamedPipeClientStream.Finalize()
  fullName: System.IO.Pipes.NamedPipeClientStream.Finalize()
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "관리 되지 않는 리소스를 해제 하 고 기타 정리 작업 하기 전에 수행 된 <xref href=&quot;System.IO.Pipes.NamedPipeClientStream&quot;> </xref> 인스턴스 가비지 컬렉션이 회수 합니다."
  syntax:
    content: ~NamedPipeClientStream ();
    parameters: []
  overload: System.IO.Pipes.NamedPipeClientStream.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.NamedPipeClientStream.NumberOfServerInstances
  id: NumberOfServerInstances
  parent: System.IO.Pipes.NamedPipeClientStream
  langs:
  - csharp
  name: NumberOfServerInstances
  nameWithType: NamedPipeClientStream.NumberOfServerInstances
  fullName: System.IO.Pipes.NamedPipeClientStream.NumberOfServerInstances
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "같은 파이프 이름을 공유 하는 서버 인스턴스의 수를 가져옵니다."
  remarks: "이 속성에 대 한 서버 인스턴스의 수를 반환 합니다.는 <xref:System.IO.Pipes.NamedPipeServerStream>개체를 현재 <xref:System.IO.Pipes.NamedPipeClientStream>개체에 대 한 핸들을가지고 있거나에 연결 되어 있습니다.</xref:System.IO.Pipes.NamedPipeClientStream> </xref:System.IO.Pipes.NamedPipeServerStream> 하는 경우 현재 <xref:System.IO.Pipes.NamedPipeClientStream>개체가 명명 된 파이프 서버에 아직 연결 하거나이 속성 <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> throw 현재 파이프 핸들이 설정 되지 않은 경우</xref:System.IO.Pipes.NamedPipeClientStream>"
  example:
  - "The following example demonstrates a method to send a string from a parent process to a child process using named pipes. In this example, a <xref:System.IO.Pipes.NamedPipeClientStream> object is created in a child process, which then connects to a pipe on the local computer. The server example can be seen in the <xref:System.IO.Pipes.NamedPipeServerStream> class. This example is part of a larger example provided for the <xref:System.IO.Pipes.NamedPipeServerStream> and <xref:System.IO.Pipes.NamedPipeClientStream> classes.  \n  \n [!code-vb[System.IO.Pipes.NamedPipeClientStream_Sample1#01](~/add/codesnippet/visualbasic/p-system.io.pipes.namedp_1.vb)]\n [!code-cs[System.IO.Pipes.NamedPipeClientStream_Sample1#01](~/add/codesnippet/csharp/p-system.io.pipes.namedp_1.cs)]"
  syntax:
    content: public int NumberOfServerInstances { get; }
    return:
      type: System.Int32
      description: "같은 파이프 이름을 공유 하는 서버 인스턴스의 수입니다."
  overload: System.IO.Pipes.NamedPipeClientStream.NumberOfServerInstances*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "파이프 핸들이 설정 되지 않았습니다.       -또는-현재 <xref href=&quot;System.IO.Pipes.NamedPipeClientStream&quot;> </xref> 개체에 아직 연결 되지 않은 한 <xref href=&quot;System.IO.Pipes.NamedPipeServerStream&quot;> </xref> 개체입니다."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "파이프가 손상 또는 I/O 오류가 발생 했습니다."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "기본 파이프 핸들이 닫혀 있습니다."
  platform:
  - net462
references:
- uid: System.IO.Pipes.PipeStream
  isExternal: false
  name: System.IO.Pipes.PipeStream
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.TimeoutException
  isExternal: true
  name: System.TimeoutException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.IO.Pipes.NamedPipeClientStream.#ctor(System.String)
  parent: System.IO.Pipes.NamedPipeClientStream
  isExternal: false
  name: NamedPipeClientStream(String)
  nameWithType: NamedPipeClientStream.NamedPipeClientStream(String)
  fullName: System.IO.Pipes.NamedPipeClientStream.NamedPipeClientStream(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String)
  parent: System.IO.Pipes.NamedPipeClientStream
  isExternal: false
  name: NamedPipeClientStream(String,String)
  nameWithType: NamedPipeClientStream.NamedPipeClientStream(String,String)
  fullName: System.IO.Pipes.NamedPipeClientStream.NamedPipeClientStream(String,String)
- uid: System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection)
  parent: System.IO.Pipes.NamedPipeClientStream
  isExternal: false
  name: NamedPipeClientStream(String,String,PipeDirection)
  nameWithType: NamedPipeClientStream.NamedPipeClientStream(String,String,PipeDirection)
  fullName: System.IO.Pipes.NamedPipeClientStream.NamedPipeClientStream(String,String,PipeDirection)
- uid: System.IO.Pipes.PipeDirection
  parent: System.IO.Pipes
  isExternal: false
  name: PipeDirection
  nameWithType: PipeDirection
  fullName: System.IO.Pipes.PipeDirection
- uid: System.IO.Pipes.NamedPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,System.Boolean,System.Boolean,Microsoft.Win32.SafeHandles.SafePipeHandle)
  parent: System.IO.Pipes.NamedPipeClientStream
  isExternal: false
  name: NamedPipeClientStream(PipeDirection,Boolean,Boolean,SafePipeHandle)
  nameWithType: NamedPipeClientStream.NamedPipeClientStream(PipeDirection,Boolean,Boolean,SafePipeHandle)
  fullName: System.IO.Pipes.NamedPipeClientStream.NamedPipeClientStream(PipeDirection,Boolean,Boolean,SafePipeHandle)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Win32.SafeHandles.SafePipeHandle
  parent: Microsoft.Win32.SafeHandles
  isExternal: false
  name: SafePipeHandle
  nameWithType: SafePipeHandle
  fullName: Microsoft.Win32.SafeHandles.SafePipeHandle
- uid: System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions)
  parent: System.IO.Pipes.NamedPipeClientStream
  isExternal: false
  name: NamedPipeClientStream(String,String,PipeDirection,PipeOptions)
  nameWithType: NamedPipeClientStream.NamedPipeClientStream(String,String,PipeDirection,PipeOptions)
  fullName: System.IO.Pipes.NamedPipeClientStream.NamedPipeClientStream(String,String,PipeDirection,PipeOptions)
- uid: System.IO.Pipes.PipeOptions
  parent: System.IO.Pipes
  isExternal: false
  name: PipeOptions
  nameWithType: PipeOptions
  fullName: System.IO.Pipes.PipeOptions
- uid: System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel)
  parent: System.IO.Pipes.NamedPipeClientStream
  isExternal: false
  name: NamedPipeClientStream(String,String,PipeDirection,PipeOptions,TokenImpersonationLevel)
  nameWithType: NamedPipeClientStream.NamedPipeClientStream(String,String,PipeDirection,PipeOptions,TokenImpersonationLevel)
  fullName: System.IO.Pipes.NamedPipeClientStream.NamedPipeClientStream(String,String,PipeDirection,PipeOptions,TokenImpersonationLevel)
- uid: System.Security.Principal.TokenImpersonationLevel
  parent: System.Security.Principal
  isExternal: true
  name: TokenImpersonationLevel
  nameWithType: TokenImpersonationLevel
  fullName: System.Security.Principal.TokenImpersonationLevel
- uid: System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeAccessRights,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)
  parent: System.IO.Pipes.NamedPipeClientStream
  isExternal: false
  name: NamedPipeClientStream(String,String,PipeAccessRights,PipeOptions,TokenImpersonationLevel,HandleInheritability)
  nameWithType: NamedPipeClientStream.NamedPipeClientStream(String,String,PipeAccessRights,PipeOptions,TokenImpersonationLevel,HandleInheritability)
  fullName: System.IO.Pipes.NamedPipeClientStream.NamedPipeClientStream(String,String,PipeAccessRights,PipeOptions,TokenImpersonationLevel,HandleInheritability)
- uid: System.IO.Pipes.PipeAccessRights
  parent: System.IO.Pipes
  isExternal: false
  name: PipeAccessRights
  nameWithType: PipeAccessRights
  fullName: System.IO.Pipes.PipeAccessRights
- uid: System.IO.HandleInheritability
  parent: System.IO
  isExternal: true
  name: HandleInheritability
  nameWithType: HandleInheritability
  fullName: System.IO.HandleInheritability
- uid: System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)
  parent: System.IO.Pipes.NamedPipeClientStream
  isExternal: false
  name: NamedPipeClientStream(String,String,PipeDirection,PipeOptions,TokenImpersonationLevel,HandleInheritability)
  nameWithType: NamedPipeClientStream.NamedPipeClientStream(String,String,PipeDirection,PipeOptions,TokenImpersonationLevel,HandleInheritability)
  fullName: System.IO.Pipes.NamedPipeClientStream.NamedPipeClientStream(String,String,PipeDirection,PipeOptions,TokenImpersonationLevel,HandleInheritability)
- uid: System.IO.Pipes.NamedPipeClientStream.CheckPipePropertyOperations
  parent: System.IO.Pipes.NamedPipeClientStream
  isExternal: false
  name: CheckPipePropertyOperations()
  nameWithType: NamedPipeClientStream.CheckPipePropertyOperations()
  fullName: System.IO.Pipes.NamedPipeClientStream.CheckPipePropertyOperations()
- uid: System.IO.Pipes.NamedPipeClientStream.Connect
  parent: System.IO.Pipes.NamedPipeClientStream
  isExternal: false
  name: Connect()
  nameWithType: NamedPipeClientStream.Connect()
  fullName: System.IO.Pipes.NamedPipeClientStream.Connect()
- uid: System.IO.Pipes.NamedPipeClientStream.Connect(System.Int32)
  parent: System.IO.Pipes.NamedPipeClientStream
  isExternal: false
  name: Connect(Int32)
  nameWithType: NamedPipeClientStream.Connect(Int32)
  fullName: System.IO.Pipes.NamedPipeClientStream.Connect(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IO.Pipes.NamedPipeClientStream.ConnectAsync
  parent: System.IO.Pipes.NamedPipeClientStream
  isExternal: false
  name: ConnectAsync()
  nameWithType: NamedPipeClientStream.ConnectAsync()
  fullName: System.IO.Pipes.NamedPipeClientStream.ConnectAsync()
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.IO.Pipes.NamedPipeClientStream.ConnectAsync(System.Int32)
  parent: System.IO.Pipes.NamedPipeClientStream
  isExternal: false
  name: ConnectAsync(Int32)
  nameWithType: NamedPipeClientStream.ConnectAsync(Int32)
  fullName: System.IO.Pipes.NamedPipeClientStream.ConnectAsync(Int32)
- uid: System.IO.Pipes.NamedPipeClientStream.ConnectAsync(System.Threading.CancellationToken)
  parent: System.IO.Pipes.NamedPipeClientStream
  isExternal: false
  name: ConnectAsync(CancellationToken)
  nameWithType: NamedPipeClientStream.ConnectAsync(CancellationToken)
  fullName: System.IO.Pipes.NamedPipeClientStream.ConnectAsync(CancellationToken)
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.IO.Pipes.NamedPipeClientStream.ConnectAsync(System.Int32,System.Threading.CancellationToken)
  parent: System.IO.Pipes.NamedPipeClientStream
  isExternal: false
  name: ConnectAsync(Int32,CancellationToken)
  nameWithType: NamedPipeClientStream.ConnectAsync(Int32,CancellationToken)
  fullName: System.IO.Pipes.NamedPipeClientStream.ConnectAsync(Int32,CancellationToken)
- uid: System.IO.Pipes.NamedPipeClientStream.Finalize
  parent: System.IO.Pipes.NamedPipeClientStream
  isExternal: false
  name: Finalize()
  nameWithType: NamedPipeClientStream.Finalize()
  fullName: System.IO.Pipes.NamedPipeClientStream.Finalize()
- uid: System.IO.Pipes.NamedPipeClientStream.NumberOfServerInstances
  parent: System.IO.Pipes.NamedPipeClientStream
  isExternal: false
  name: NumberOfServerInstances
  nameWithType: NamedPipeClientStream.NumberOfServerInstances
  fullName: System.IO.Pipes.NamedPipeClientStream.NumberOfServerInstances
- uid: System.IO.Pipes.NamedPipeClientStream.#ctor*
  parent: System.IO.Pipes.NamedPipeClientStream
  isExternal: false
  name: NamedPipeClientStream
  nameWithType: NamedPipeClientStream.NamedPipeClientStream
- uid: System.IO.Pipes.NamedPipeClientStream.CheckPipePropertyOperations*
  parent: System.IO.Pipes.NamedPipeClientStream
  isExternal: false
  name: CheckPipePropertyOperations
  nameWithType: NamedPipeClientStream.CheckPipePropertyOperations
- uid: System.IO.Pipes.NamedPipeClientStream.Connect*
  parent: System.IO.Pipes.NamedPipeClientStream
  isExternal: false
  name: Connect
  nameWithType: NamedPipeClientStream.Connect
- uid: System.IO.Pipes.NamedPipeClientStream.ConnectAsync*
  parent: System.IO.Pipes.NamedPipeClientStream
  isExternal: false
  name: ConnectAsync
  nameWithType: NamedPipeClientStream.ConnectAsync
- uid: System.IO.Pipes.NamedPipeClientStream.Finalize*
  parent: System.IO.Pipes.NamedPipeClientStream
  isExternal: false
  name: Finalize
  nameWithType: NamedPipeClientStream.Finalize
- uid: System.IO.Pipes.NamedPipeClientStream.NumberOfServerInstances*
  parent: System.IO.Pipes.NamedPipeClientStream
  isExternal: false
  name: NumberOfServerInstances
  nameWithType: NamedPipeClientStream.NumberOfServerInstances
