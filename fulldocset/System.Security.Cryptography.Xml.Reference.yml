### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.Xml.Reference
  id: Reference
  children:
  - System.Security.Cryptography.Xml.Reference.#ctor
  - System.Security.Cryptography.Xml.Reference.#ctor(System.IO.Stream)
  - System.Security.Cryptography.Xml.Reference.#ctor(System.String)
  - System.Security.Cryptography.Xml.Reference.AddTransform(System.Security.Cryptography.Xml.Transform)
  - System.Security.Cryptography.Xml.Reference.DigestMethod
  - System.Security.Cryptography.Xml.Reference.DigestValue
  - System.Security.Cryptography.Xml.Reference.GetXml
  - System.Security.Cryptography.Xml.Reference.Id
  - System.Security.Cryptography.Xml.Reference.LoadXml(System.Xml.XmlElement)
  - System.Security.Cryptography.Xml.Reference.TransformChain
  - System.Security.Cryptography.Xml.Reference.Type
  - System.Security.Cryptography.Xml.Reference.Uri
  langs:
  - csharp
  name: Reference
  nameWithType: Reference
  fullName: System.Security.Cryptography.Xml.Reference
  type: Class
  summary: "나타냅니다는 <xref uid=&quot;langword_csharp_&lt;reference&gt;&quot; name=&quot;&lt;reference&gt;&quot; href=&quot;&quot;> </xref> XML 서명의 요소입니다."
  remarks: "참조 개체가 나타내는 `reference`> 요소의 XML 디지털 서명 사양에 정의 된 XML 디지털 서명 합니다.       다음 정보를 지정 하는 참조 방식 개체를 사용 하 여:-데이터 개체의 서명에 사용 되는 다이제스트 알고리즘입니다.  이 값은 필수입니다.      -식별자 URI (Uniform Resource)의 데이터 개체에 서명 합니다. URI 파일 경로 또는 XML 문서 내의 특정 요소에 지정할 수 있습니다.  이 값은 필수입니다.      -A 체인 다이제스트를 생성 하기 전에 적용할 변환입니다. 이 값은 선택 사항입니다.      -서명 하는 개체의 형식입니다.  이 값은 선택 사항입니다.      -현재 참조 하는 데 한 고유 식별자 `<reference>` 요소입니다.  이 값은 선택 사항입니다.       에 대 한 자세한 내용은 `reference`> 요소를 www.w3.org/TR/xmldsig-core/에 참조 W3C 사양입니다."
  example:
  - "The following code example demonstrates how to generate and verify an enveloped XML signature using the Reference object.  \n  \n [!code-cs[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/add/codesnippet/csharp/t-system.security.crypto_86_1.cs)]\n [!code-cpp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/add/codesnippet/cpp/t-system.security.crypto_86_1.cpp)]\n [!code-vb[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/add/codesnippet/visualbasic/t-system.security.crypto_86_1.vb)]"
  syntax:
    content: public class Reference
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.Reference.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.Xml.Reference
  langs:
  - csharp
  name: Reference()
  nameWithType: Reference.Reference()
  fullName: System.Security.Cryptography.Xml.Reference.Reference()
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Security.Cryptography.Xml.Reference&quot;> </xref> 클래스 기본 속성을 사용 합니다."
  remarks: ''
  example:
  - "The following code example demonstrates how to generate and verify an enveloped XML signature using the <xref:System.Security.Cryptography.Xml.Reference> object.  \n  \n [!code-cs[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/add/codesnippet/csharp/m-system.security.crypto_16_1.cs)]\n [!code-cpp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/add/codesnippet/cpp/m-system.security.crypto_16_1.cpp)]\n [!code-vb[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/add/codesnippet/visualbasic/m-system.security.crypto_16_1.vb)]  \n  \n The following code example demonstrates how to generate and verify a detached XML signature using the <xref:System.Security.Cryptography.Xml.Reference> object.  \n  \n [!code-cs[System.Security.Cryptography.XML-XMLDsigDetached#1](~/add/codesnippet/csharp/m-system.security.crypto_16_2.cs)]\n [!code-vb[System.Security.Cryptography.XML-XMLDsigDetached#1](~/add/codesnippet/visualbasic/m-system.security.crypto_16_2.vb)]\n [!code-cpp[System.Security.Cryptography.XML-XMLDsigDetached#1](~/add/codesnippet/cpp/m-system.security.crypto_16_2.cpp)]"
  syntax:
    content: public Reference ();
    parameters: []
  overload: System.Security.Cryptography.Xml.Reference.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.Reference.#ctor(System.IO.Stream)
  id: '#ctor(System.IO.Stream)'
  parent: System.Security.Cryptography.Xml.Reference
  langs:
  - csharp
  name: Reference(Stream)
  nameWithType: Reference.Reference(Stream)
  fullName: System.Security.Cryptography.Xml.Reference.Reference(Stream)
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Security.Cryptography.Xml.Reference&quot;> </xref> 지정된 <xref:System.IO.Stream>.</xref:System.IO.Stream> 의 해시 값을 가진 클래스"
  remarks: "이 생성자는 <xref:System.Security.Cryptography.Xml.Reference>개체에 해당 하는 해시 값은 `stream` 매개 변수.</xref:System.Security.Cryptography.Xml.Reference>"
  syntax:
    content: public Reference (System.IO.Stream stream);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "<xref:System.IO.Stream>의 새 인스턴스를 초기화 하는 <xref href=&quot;System.Security.Cryptography.Xml.Reference&quot;> </xref>.</xref:System.IO.Stream>"
  overload: System.Security.Cryptography.Xml.Reference.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.Reference.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Security.Cryptography.Xml.Reference
  langs:
  - csharp
  name: Reference(String)
  nameWithType: Reference.Reference(String)
  fullName: System.Security.Cryptography.Xml.Reference.Reference(String)
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Security.Cryptography.Xml.Reference&quot;> </xref> 지정 <xref:System.Uri>.</xref:System.Uri> 클래스"
  remarks: "이 생성자는 <xref:System.Security.Cryptography.Xml.Reference>특별 한 처리를 사용 하는 URI에 있는 데이터 개체 `&quot;&quot;`, `#xpointer(/)`, 및 `#xxxx`.</xref:System.Security.Cryptography.Xml.Reference>"
  example:
  - "The following code example uses the <xref:System.Security.Cryptography.Xml.Reference> class to sign and verify an XML document using an envelope signature.  \n  \n [!code-cs[Cryptography.XML.Signature - Envelope#1](~/add/codesnippet/csharp/m-system.security.crypto_34_1.cs)]\n [!code-vb[Cryptography.XML.Signature - Envelope#1](~/add/codesnippet/visualbasic/m-system.security.crypto_34_1.vb)]\n [!code-cpp[Cryptography.XML.Signature - Envelope#1](~/add/codesnippet/cpp/m-system.security.crypto_34_1.cpp)]"
  syntax:
    content: public Reference (string uri);
    parameters:
    - id: uri
      type: System.String
      description: "<xref:System.Uri>의 새 인스턴스를 초기화 하는 <xref href=&quot;System.Security.Cryptography.Xml.Reference&quot;> </xref>.</xref:System.Uri>"
  overload: System.Security.Cryptography.Xml.Reference.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.Reference.AddTransform(System.Security.Cryptography.Xml.Transform)
  id: AddTransform(System.Security.Cryptography.Xml.Transform)
  parent: System.Security.Cryptography.Xml.Reference
  langs:
  - csharp
  name: AddTransform(Transform)
  nameWithType: Reference.AddTransform(Transform)
  fullName: System.Security.Cryptography.Xml.Reference.AddTransform(Transform)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "추가 <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;> </xref> 개체 다이제스트 알고리즘을 전달 하기 전에 데이터에서 수행 해야 하는 변환 목록입니다."
  remarks: "AddTransform 메서드 수정는 `<Transform>` 요소와 관련된 하위 XML 디지털 서명 합니다.       변환은 추가 된 순서에 적용 됩니다. 없는 변환을 지정 하는 경우는 최소한 변환을 자동으로 추가 됩니다.       XML 디지털 서명 하는 방법에 대 한 자세한 내용은 www.w3.org/TR/xmldsig-core/에 W3C 사양을 참조 하십시오."
  example:
  - "The following code example demonstrates how to generate and verify an enveloped XML signature using the <xref:System.Security.Cryptography.Xml.Reference> object.  \n  \n [!code-cs[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/add/codesnippet/csharp/c6da303c-11bb-4549-9dc7-_1.cs)]\n [!code-cpp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/add/codesnippet/cpp/c6da303c-11bb-4549-9dc7-_1.cpp)]\n [!code-vb[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/add/codesnippet/visualbasic/c6da303c-11bb-4549-9dc7-_1.vb)]  \n  \n The following code example demonstrates how to generate and verify a detached XML signature using the <xref:System.Security.Cryptography.Xml.Reference> object.  \n  \n [!code-cs[System.Security.Cryptography.XML-XMLDsigDetached#1](~/add/codesnippet/csharp/c6da303c-11bb-4549-9dc7-_2.cs)]\n [!code-vb[System.Security.Cryptography.XML-XMLDsigDetached#1](~/add/codesnippet/visualbasic/c6da303c-11bb-4549-9dc7-_2.vb)]\n [!code-cpp[System.Security.Cryptography.XML-XMLDsigDetached#1](~/add/codesnippet/cpp/c6da303c-11bb-4549-9dc7-_2.cpp)]"
  syntax:
    content: public void AddTransform (System.Security.Cryptography.Xml.Transform transform);
    parameters:
    - id: transform
      type: System.Security.Cryptography.Xml.Transform
      description: "변환을 변환 목록에 추가할 수 있습니다."
  overload: System.Security.Cryptography.Xml.Reference.AddTransform*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>transform</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.Reference.DigestMethod
  id: DigestMethod
  parent: System.Security.Cryptography.Xml.Reference
  langs:
  - csharp
  name: DigestMethod
  nameWithType: Reference.DigestMethod
  fullName: System.Security.Cryptography.Xml.Reference.DigestMethod
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "식별자 URI (Uniform Resource) 현재 다이제스트 메서드를 가져오거나 설정 합니다. <xref href=&quot;System.Security.Cryptography.Xml.Reference&quot;> </xref>합니다."
  remarks: "DigestMethod 속성이을 나타내는 URI 문자열을 사용 하는 `DigestMethod`> 요소의 XML 디지털 서명 합니다.       다이제스트 방법은 <xref:System.Security.Cryptography.Xml.Reference>.</xref:System.Security.Cryptography.Xml.Reference> 을 해시 하는 데 사용 되는 알고리즘을 수행 하는 기본 알고리즘은 <xref:System.Security.Cryptography.SHA1>.</xref:System.Security.Cryptography.SHA1>       XML 디지털 서명 하는 방법에 대 한 자세한 내용은 www.w3.org/TR/xmldsig-core/에 W3C 사양을 참조 하십시오."
  syntax:
    content: public string DigestMethod { get; set; }
    return:
      type: System.String
      description: "현재 URI 다이제스트 방법 <xref href=&quot;System.Security.Cryptography.Xml.Reference&quot;> </xref>합니다. 기본값은 &quot;http://www.w3.org/2000/09/xmldsig#sha1&quot;입니다."
  overload: System.Security.Cryptography.Xml.Reference.DigestMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.Reference.DigestValue
  id: DigestValue
  parent: System.Security.Cryptography.Xml.Reference
  langs:
  - csharp
  name: DigestValue
  nameWithType: Reference.DigestValue
  fullName: System.Security.Cryptography.Xml.Reference.DigestValue
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "현재의 다이제스트 값을 가져오거나 설정 합니다. <xref href=&quot;System.Security.Cryptography.Xml.Reference&quot;> </xref>합니다."
  remarks: "DigestValue 속성을 나타내는 바이트 배열을 사용은 `DigestValue`> 요소의 XML 디지털 서명 합니다.       DigestValue 속성 설명 개체의 다이제스트의 Base 64로 인코딩된 값이 포함 된 <xref:System.Security.Cryptography.Xml.Reference.Uri%2A>속성.</xref:System.Security.Cryptography.Xml.Reference.Uri%2A>       하면 DigestValue 속성 <xref:System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature%2A>.</xref:System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature%2A> 에 대 한 호출을 만들 때마다 자동으로 적절 한 값으로 입력 됩니다.       XML 디지털 서명 하는 방법에 대 한 자세한 내용은 www.w3.org/TR/xmldsig-core/에 W3C 사양을 참조 하십시오."
  syntax:
    content: public byte[] DigestValue { get; set; }
    return:
      type: System.Byte[]
      description: "현재의 다이제스트 값 <xref href=&quot;System.Security.Cryptography.Xml.Reference&quot;> </xref>합니다."
  overload: System.Security.Cryptography.Xml.Reference.DigestValue*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.Reference.GetXml
  id: GetXml
  parent: System.Security.Cryptography.Xml.Reference
  langs:
  - csharp
  name: GetXml()
  nameWithType: Reference.GetXml()
  fullName: System.Security.Cryptography.Xml.Reference.GetXml()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "XML 표현을 반환 된 <xref href=&quot;System.Security.Cryptography.Xml.Reference&quot;> </xref>합니다."
  syntax:
    content: public System.Xml.XmlElement GetXml ();
    parameters: []
    return:
      type: System.Xml.XmlElement
      description: "XML 표현을 <xref href=&quot;System.Security.Cryptography.Xml.Reference&quot;> </xref>합니다."
  overload: System.Security.Cryptography.Xml.Reference.GetXml*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "The <>*> property is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       The <>*> property is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.Reference.Id
  id: Id
  parent: System.Security.Cryptography.Xml.Reference
  langs:
  - csharp
  name: Id
  nameWithType: Reference.Id
  fullName: System.Security.Cryptography.Xml.Reference.Id
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "현재 ID를 가져오거나 설정 합니다. <xref href=&quot;System.Security.Cryptography.Xml.Reference&quot;> </xref>합니다."
  remarks: "Id 속성을 사용 하 여 현재의 XML 표현에 문자열 ID를 추가 하려면 <xref:System.Security.Cryptography.Xml.Reference>요소.</xref:System.Security.Cryptography.Xml.Reference> ID가 사용 참조에는 <xref:System.Security.Cryptography.Xml.Reference>다른 위치에서 요소.</xref:System.Security.Cryptography.Xml.Reference>"
  syntax:
    content: public string Id { get; set; }
    return:
      type: System.String
      description: "현재 ID <xref href=&quot;System.Security.Cryptography.Xml.Reference&quot;> </xref>합니다. 기본값은 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Security.Cryptography.Xml.Reference.Id*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.Reference.LoadXml(System.Xml.XmlElement)
  id: LoadXml(System.Xml.XmlElement)
  parent: System.Security.Cryptography.Xml.Reference
  langs:
  - csharp
  name: LoadXml(XmlElement)
  nameWithType: Reference.LoadXml(XmlElement)
  fullName: System.Security.Cryptography.Xml.Reference.LoadXml(XmlElement)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "로드 한 <xref href=&quot;System.Security.Cryptography.Xml.Reference&quot;> </xref> XML 요소에서 상태입니다."
  syntax:
    content: public void LoadXml (System.Xml.XmlElement value);
    parameters:
    - id: value
      type: System.Xml.XmlElement
      description: "로드할 XML 요소는 <xref href=&quot;System.Security.Cryptography.Xml.Reference&quot;> </xref> 상태입니다."
  overload: System.Security.Cryptography.Xml.Reference.LoadXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>value</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "<code> value </code> 매개 변수 변환이 포함 되지 않습니다.       -또는- <code> value </code> 매개 변수에 들어 있는 알 수 없는 변환 합니다."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.Reference.TransformChain
  id: TransformChain
  parent: System.Security.Cryptography.Xml.Reference
  langs:
  - csharp
  name: TransformChain
  nameWithType: Reference.TransformChain
  fullName: System.Security.Cryptography.Xml.Reference.TransformChain
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "현재 변환 체인 가져옵니다 <xref href=&quot;System.Security.Cryptography.Xml.Reference&quot;> </xref>합니다."
  remarks: "TransformChain 속성이 나타내는 `Transform`> 요소와 관련된 하위 XML 디지털 서명 합니다.       변환 체인은 변환의 정렬된 된 목록입니다. 이러한 변환의 출력에 지정 된 해시 알고리즘에 대 한 입력으로 구성 된 <xref:System.Security.Cryptography.Xml.Reference.DigestMethod%2A>속성.</xref:System.Security.Cryptography.Xml.Reference.DigestMethod%2A>       XML 디지털 서명 하는 방법에 대 한 자세한 내용은 www.w3.org/TR/xmldsig-core/에 W3C 사양을 참조 하십시오."
  syntax:
    content: public System.Security.Cryptography.Xml.TransformChain TransformChain { get; set; }
    return:
      type: System.Security.Cryptography.Xml.TransformChain
      description: "현재 변환 체인 <xref href=&quot;System.Security.Cryptography.Xml.Reference&quot;> </xref>합니다."
  overload: System.Security.Cryptography.Xml.Reference.TransformChain*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.Reference.Type
  id: Type
  parent: System.Security.Cryptography.Xml.Reference
  langs:
  - csharp
  name: Type
  nameWithType: Reference.Type
  fullName: System.Security.Cryptography.Xml.Reference.Type
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "서명 중인 개체의 형식을 가져오거나 설정 합니다."
  syntax:
    content: public string Type { get; set; }
    return:
      type: System.String
      description: "서명 중인 개체의 형식입니다."
  overload: System.Security.Cryptography.Xml.Reference.Type*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.Reference.Uri
  id: Uri
  parent: System.Security.Cryptography.Xml.Reference
  langs:
  - csharp
  name: Uri
  nameWithType: Reference.Uri
  fullName: System.Security.Cryptography.Xml.Reference.Uri
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "가져오거나는 <xref:System.Uri>현재 <xref href=&quot;System.Security.Cryptography.Xml.Reference&quot;> </xref>.</xref:System.Uri>"
  remarks: "The Uri property uses a string Uniform Resource Identifier (URI) to represent the <`URI`> element of an XML digital signature.  \n  \n Use the Uri property to specify the location of a document to sign, and to specify which element of the current XML document to sign or to indicate that the entire document should be signed.  \n  \n To successfully create an XML digital signature, you must set the Uri property. The following table describes the values that you can pass to the Uri property.  \n  \n|Object to sign|Value passed to the Uri property|  \n|--------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|  \n|An entire XML document using an enveloped signature.|An empty string: \"\"|  \n|A specific element within an XML document using an enveloped signature.|The name of an XML element identified by an attribute name ID. The string should take the following form where `IDname` is the name of a valid attribute name ID:<br /><br /> \"#Idname\"|  \n|A file using a detached signature.|The URI of a file: \"c:\\data.jpg\" or \"c:\\data.xml\".|  \n  \n For more information about XML digital signatures, see the World Wide Web Consortium (W3C) [XML Signature Syntax and Processing Specification](http://www.w3.org/TR/xmldsig-core/)."
  example:
  - "The following code example demonstrates how to generate and verify an enveloped XML signature using the <xref:System.Security.Cryptography.Xml.Reference> object.  \n  \n [!code-cs[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/add/codesnippet/csharp/p-system.security.crypto_25_1.cs)]\n [!code-cpp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/add/codesnippet/cpp/p-system.security.crypto_25_1.cpp)]\n [!code-vb[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/add/codesnippet/visualbasic/p-system.security.crypto_25_1.vb)]"
  syntax:
    content: public string Uri { get; set; }
    return:
      type: System.String
      description: "<xref:System.Uri>현재 <xref href=&quot;System.Security.Cryptography.Xml.Reference&quot;> </xref>.</xref:System.Uri>"
  overload: System.Security.Cryptography.Xml.Reference.Uri*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.Security.Cryptography.Xml.Reference.#ctor
  parent: System.Security.Cryptography.Xml.Reference
  isExternal: false
  name: Reference()
  nameWithType: Reference.Reference()
  fullName: System.Security.Cryptography.Xml.Reference.Reference()
- uid: System.Security.Cryptography.Xml.Reference.#ctor(System.IO.Stream)
  parent: System.Security.Cryptography.Xml.Reference
  isExternal: false
  name: Reference(Stream)
  nameWithType: Reference.Reference(Stream)
  fullName: System.Security.Cryptography.Xml.Reference.Reference(Stream)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Security.Cryptography.Xml.Reference.#ctor(System.String)
  parent: System.Security.Cryptography.Xml.Reference
  isExternal: false
  name: Reference(String)
  nameWithType: Reference.Reference(String)
  fullName: System.Security.Cryptography.Xml.Reference.Reference(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.Xml.Reference.AddTransform(System.Security.Cryptography.Xml.Transform)
  parent: System.Security.Cryptography.Xml.Reference
  isExternal: false
  name: AddTransform(Transform)
  nameWithType: Reference.AddTransform(Transform)
  fullName: System.Security.Cryptography.Xml.Reference.AddTransform(Transform)
- uid: System.Security.Cryptography.Xml.Transform
  parent: System.Security.Cryptography.Xml
  isExternal: false
  name: Transform
  nameWithType: Transform
  fullName: System.Security.Cryptography.Xml.Transform
- uid: System.Security.Cryptography.Xml.Reference.DigestMethod
  parent: System.Security.Cryptography.Xml.Reference
  isExternal: false
  name: DigestMethod
  nameWithType: Reference.DigestMethod
  fullName: System.Security.Cryptography.Xml.Reference.DigestMethod
- uid: System.Security.Cryptography.Xml.Reference.DigestValue
  parent: System.Security.Cryptography.Xml.Reference
  isExternal: false
  name: DigestValue
  nameWithType: Reference.DigestValue
  fullName: System.Security.Cryptography.Xml.Reference.DigestValue
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.Xml.Reference.GetXml
  parent: System.Security.Cryptography.Xml.Reference
  isExternal: false
  name: GetXml()
  nameWithType: Reference.GetXml()
  fullName: System.Security.Cryptography.Xml.Reference.GetXml()
- uid: System.Xml.XmlElement
  parent: System.Xml
  isExternal: false
  name: XmlElement
  nameWithType: XmlElement
  fullName: System.Xml.XmlElement
- uid: System.Security.Cryptography.Xml.Reference.Id
  parent: System.Security.Cryptography.Xml.Reference
  isExternal: false
  name: Id
  nameWithType: Reference.Id
  fullName: System.Security.Cryptography.Xml.Reference.Id
- uid: System.Security.Cryptography.Xml.Reference.LoadXml(System.Xml.XmlElement)
  parent: System.Security.Cryptography.Xml.Reference
  isExternal: false
  name: LoadXml(XmlElement)
  nameWithType: Reference.LoadXml(XmlElement)
  fullName: System.Security.Cryptography.Xml.Reference.LoadXml(XmlElement)
- uid: System.Security.Cryptography.Xml.Reference.TransformChain
  parent: System.Security.Cryptography.Xml.Reference
  isExternal: false
  name: TransformChain
  nameWithType: Reference.TransformChain
  fullName: System.Security.Cryptography.Xml.Reference.TransformChain
- uid: System.Security.Cryptography.Xml.TransformChain
  parent: System.Security.Cryptography.Xml
  isExternal: false
  name: TransformChain
  nameWithType: TransformChain
  fullName: System.Security.Cryptography.Xml.TransformChain
- uid: System.Security.Cryptography.Xml.Reference.Type
  parent: System.Security.Cryptography.Xml.Reference
  isExternal: false
  name: Type
  nameWithType: Reference.Type
  fullName: System.Security.Cryptography.Xml.Reference.Type
- uid: System.Security.Cryptography.Xml.Reference.Uri
  parent: System.Security.Cryptography.Xml.Reference
  isExternal: false
  name: Uri
  nameWithType: Reference.Uri
  fullName: System.Security.Cryptography.Xml.Reference.Uri
- uid: System.Security.Cryptography.Xml.Reference.#ctor*
  parent: System.Security.Cryptography.Xml.Reference
  isExternal: false
  name: Reference
  nameWithType: Reference.Reference
- uid: System.Security.Cryptography.Xml.Reference.AddTransform*
  parent: System.Security.Cryptography.Xml.Reference
  isExternal: false
  name: AddTransform
  nameWithType: Reference.AddTransform
- uid: System.Security.Cryptography.Xml.Reference.DigestMethod*
  parent: System.Security.Cryptography.Xml.Reference
  isExternal: false
  name: DigestMethod
  nameWithType: Reference.DigestMethod
- uid: System.Security.Cryptography.Xml.Reference.DigestValue*
  parent: System.Security.Cryptography.Xml.Reference
  isExternal: false
  name: DigestValue
  nameWithType: Reference.DigestValue
- uid: System.Security.Cryptography.Xml.Reference.GetXml*
  parent: System.Security.Cryptography.Xml.Reference
  isExternal: false
  name: GetXml
  nameWithType: Reference.GetXml
- uid: System.Security.Cryptography.Xml.Reference.Id*
  parent: System.Security.Cryptography.Xml.Reference
  isExternal: false
  name: Id
  nameWithType: Reference.Id
- uid: System.Security.Cryptography.Xml.Reference.LoadXml*
  parent: System.Security.Cryptography.Xml.Reference
  isExternal: false
  name: LoadXml
  nameWithType: Reference.LoadXml
- uid: System.Security.Cryptography.Xml.Reference.TransformChain*
  parent: System.Security.Cryptography.Xml.Reference
  isExternal: false
  name: TransformChain
  nameWithType: Reference.TransformChain
- uid: System.Security.Cryptography.Xml.Reference.Type*
  parent: System.Security.Cryptography.Xml.Reference
  isExternal: false
  name: Type
  nameWithType: Reference.Type
- uid: System.Security.Cryptography.Xml.Reference.Uri*
  parent: System.Security.Cryptography.Xml.Reference
  isExternal: false
  name: Uri
  nameWithType: Reference.Uri
