### YamlMime:ManagedReference
items:
- uid: System.Windows.Media.StreamGeometryContext
  id: StreamGeometryContext
  children:
  - System.Windows.Media.StreamGeometryContext.ArcTo(System.Windows.Point,System.Windows.Size,System.Double,System.Boolean,System.Windows.Media.SweepDirection,System.Boolean,System.Boolean)
  - System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)
  - System.Windows.Media.StreamGeometryContext.BezierTo(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)
  - System.Windows.Media.StreamGeometryContext.Close
  - System.Windows.Media.StreamGeometryContext.LineTo(System.Windows.Point,System.Boolean,System.Boolean)
  - System.Windows.Media.StreamGeometryContext.PolyBezierTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)
  - System.Windows.Media.StreamGeometryContext.PolyLineTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)
  - System.Windows.Media.StreamGeometryContext.PolyQuadraticBezierTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)
  - System.Windows.Media.StreamGeometryContext.QuadraticBezierTo(System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)
  - System.Windows.Media.StreamGeometryContext.System#IDisposable#Dispose
  langs:
  - csharp
  name: StreamGeometryContext
  nameWithType: StreamGeometryContext
  fullName: System.Windows.Media.StreamGeometryContext
  type: Class
  summary: "그리기 명령을 사용 하 여 기 하 도형에 설명 합니다. 이 클래스와 함께 사용 되는 <xref href=&quot;System.Windows.Media.StreamGeometry&quot;> </xref> 데이터 바인딩, 애니메이션 또는 수정을 지원 하지 않는 간단한 geometry를 만들려면 클래스입니다."
  syntax:
    content: 'public abstract class StreamGeometryContext : System.Windows.Threading.DispatcherObject, IDisposable'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Media.StreamGeometryContext.ArcTo(System.Windows.Point,System.Windows.Size,System.Double,System.Boolean,System.Windows.Media.SweepDirection,System.Boolean,System.Boolean)
  id: ArcTo(System.Windows.Point,System.Windows.Size,System.Double,System.Boolean,System.Windows.Media.SweepDirection,System.Boolean,System.Boolean)
  parent: System.Windows.Media.StreamGeometryContext
  langs:
  - csharp
  name: ArcTo(Point,Size,Double,Boolean,SweepDirection,Boolean,Boolean)
  nameWithType: StreamGeometryContext.ArcTo(Point,Size,Double,Boolean,SweepDirection,Boolean,Boolean)
  fullName: System.Windows.Media.StreamGeometryContext.ArcTo(Point,Size,Double,Boolean,SweepDirection,Boolean,Boolean)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "지정된 된 위치에 호를 그립니다."
  remarks: "이 메서드는 기준으로 이전 세그먼트의 끝점을 사용 합니다. 지정 된 점을 사용 하 여 도형에 있는 첫 번째 세그먼트 인 경우는 <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A>메서드 시작 점으로.</xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A>       A <xref:System.Windows.Media.StreamGeometry>포함 된 경우 직렬화 할 수 없습니다는 <xref:System.Windows.Media.Transform>스트로크 되지 않은 일부 또는 채워지지 않은 세그먼트 또는.</xref:System.Windows.Media.Transform> </xref:System.Windows.Media.StreamGeometry>"
  example:
  - "The following example shows how to draw an arc using the ArcTo method.  \n  \n [!code-vb[GeometriesMiscSnippets_procedural_snip#StreamGeometryArcToExampleWholePage](~/add/codesnippet/visualbasic/geometriesmiscsnippets_procedural/streamgeometryarctoexample.vb#streamgeometryarctoexamplewholepage)]\n [!code-cs[GeometriesMiscSnippets_procedural_snip#StreamGeometryArcToExampleWholePage](~/add/codesnippet/csharp/GeometriesMiscSnippets_procedural/StreamGeometryArcToExample.cs#streamgeometryarctoexamplewholepage)]"
  syntax:
    content: public abstract void ArcTo (System.Windows.Point point, System.Windows.Size size, double rotationAngle, bool isLargeArc, System.Windows.Media.SweepDirection sweepDirection, bool isStroked, bool isSmoothJoin);
    parameters:
    - id: point
      type: System.Windows.Point
      description: "원호의 끝에 대 한 대상 지점입니다."
    - id: size
      type: System.Windows.Size
      description: "반지름 (너비 및 높이 절반) 인 경계 각도 그리는 데 사용 되는 타원의 합니다. 타원 이면 매우 둥근 모든 방향으로 호 반올림 됩니다, 거의 플랫 이면 호가 됩니다. 예를 들어 매우 큰 너비와 높이 각도에 약간의 곡률 지정 매우 큰 타원을 나타냅니다."
    - id: rotationAngle
      type: System.Double
      description: "곡선을 지정 하는 타원의 회전 각도입니다. 이 매개 변수와 함께 호 곡률 회전할 수 있습니다."
    - id: isLargeArc
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>180도 보다 큰 호를 그리려면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
    - id: sweepDirection
      type: System.Windows.Media.SweepDirection
      description: "호를 그릴지 여부를 나타내는 값의 <xref href=&quot;System.Windows.Media.SweepDirection&quot;> </xref> 또는 <xref href=&quot;System.Windows.Media.SweepDirection&quot;> </xref> 방향입니다."
    - id: isStroked
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>세그먼트를 스트로크 시기는 <xref href=&quot;System.Windows.Media.Pen&quot;> </xref> 사용 하는 세그먼트를 렌더링 하 고, 그러지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
    - id: isSmoothJoin
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>이 세그먼트는 이전 세그먼트 간의 조인을 사용 하 여 스트로크 하는 경우 모퉁이으로 처리 하는 <xref href=&quot;System.Windows.Media.Pen&quot;> </xref>, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Media.StreamGeometryContext.ArcTo*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)
  id: BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)
  parent: System.Windows.Media.StreamGeometryContext
  langs:
  - csharp
  name: BeginFigure(Point,Boolean,Boolean)
  nameWithType: StreamGeometryContext.BeginFigure(Point,Boolean,Boolean)
  fullName: System.Windows.Media.StreamGeometryContext.BeginFigure(Point,Boolean,Boolean)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "새 그림에 대 한 시작 지점을 지정 합니다."
  remarks: "이 메서드를 여러 번 호출 하 여이 <xref:System.Windows.Media.StreamGeometryContext>.</xref:System.Windows.Media.StreamGeometryContext> 내에서 여러 그림 (자체 포함 된 기 하 도형을)를 만들 수 있습니다.       A <xref:System.Windows.Media.StreamGeometry>포함 된 경우 직렬화 할 수 없습니다는 <xref:System.Windows.Media.Transform>스트로크 되지 않은 일부 또는 채워지지 않은 세그먼트 또는.</xref:System.Windows.Media.Transform> </xref:System.Windows.Media.StreamGeometry>"
  syntax:
    content: public abstract void BeginFigure (System.Windows.Point startPoint, bool isFilled, bool isClosed);
    parameters:
    - id: startPoint
      type: System.Windows.Point
      description: "<xref href=&quot;System.Windows.Point&quot;> </xref> 그림을 시작 합니다."
    - id: isFilled
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>이 그림 적중 테스트, 렌더링 및 클리핑;에 포함 된 영역을 사용 하려면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
    - id: isClosed
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>그림;을 닫으려면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. 예를 들어 두 개의 연결 선이 그려집니다, 그리고 및 `isClosed` 로 설정 된 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, 드로잉은 두 선 으로만 이루어지지만 `isClosed` 로 설정 되어 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, 삼각형이 생성 두 선이 닫혀 있습니다."
  overload: System.Windows.Media.StreamGeometryContext.BeginFigure*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.StreamGeometryContext.BezierTo(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)
  id: BezierTo(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)
  parent: System.Windows.Media.StreamGeometryContext
  langs:
  - csharp
  name: BezierTo(Point,Point,Point,Boolean,Boolean)
  nameWithType: StreamGeometryContext.BezierTo(Point,Point,Point,Boolean,Boolean)
  fullName: System.Windows.Media.StreamGeometryContext.BezierTo(Point,Point,Point,Boolean,Boolean)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "지정된 된 위치에 베 지 어 곡선을 그립니다."
  remarks: "입방 형&3; 차원 곡선을 시작점, 끝점 및 두 개의 제어점에 의해 정의 됩니다. 첫 번째 제어점 곡률은 세그먼트의 첫 번째 부분을 결정 하 고 두 번째 제어점 세그먼트의 두 번째 절반 곡률을 결정 합니다.       이 메서드는 기준으로 이전 세그먼트의 끝점을 사용 합니다. 지정 된 점을 사용 하 여 도형에 있는 첫 번째 세그먼트 인 경우는 <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A>메서드 시작 점으로.</xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A>       A <xref:System.Windows.Media.StreamGeometry>포함 된 경우 직렬화 할 수 없습니다는 <xref:System.Windows.Media.Transform>스트로크 되지 않은 일부 또는 채워지지 않은 세그먼트 또는.</xref:System.Windows.Media.Transform> </xref:System.Windows.Media.StreamGeometry>"
  example:
  - "The following example shows how to draw a Bezier curve using the BezierTo method.  \n  \n [!code-vb[GeometriesMiscSnippets_procedural_snip#StreamGeometryBezierToExampleWholePage](~/add/codesnippet/visualbasic/geometriesmiscsnippets_procedural/streamgeometrybeziertoexample.vb#streamgeometrybeziertoexamplewholepage)]\n [!code-cs[GeometriesMiscSnippets_procedural_snip#StreamGeometryBezierToExampleWholePage](~/add/codesnippet/csharp/GeometriesMiscSnippets_procedural/StreamGeometryBezierToExample.cs#streamgeometrybeziertoexamplewholepage)]"
  syntax:
    content: public abstract void BezierTo (System.Windows.Point point1, System.Windows.Point point2, System.Windows.Point point3, bool isStroked, bool isSmoothJoin);
    parameters:
    - id: point1
      type: System.Windows.Point
      description: "곡선의 모양을 지정 하는 데는 첫 번째 제어점입니다."
    - id: point2
      type: System.Windows.Point
      description: "곡선의 모양을 지정 하는 데는 두 번째 제어점입니다."
    - id: point3
      type: System.Windows.Point
      description: "곡선의 끝에 대 한 대상 지점입니다."
    - id: isStroked
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>세그먼트를 스트로크 시기는 <xref href=&quot;System.Windows.Media.Pen&quot;> </xref> 사용 하는 세그먼트를 렌더링 하 고, 그러지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
    - id: isSmoothJoin
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>이 세그먼트는 이전 세그먼트 간의 조인을 사용 하 여 스트로크 하는 경우 모퉁이으로 처리 하는 <xref href=&quot;System.Windows.Media.Pen&quot;> </xref>, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Media.StreamGeometryContext.BezierTo*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "호출 하 여 그림을 시작 하지 않고 세그먼트를 추가 하려고 했습니다는 <xref:System.Windows.Media.StreamGeometryContext.BeginFigure*>메서드.</xref:System.Windows.Media.StreamGeometryContext.BeginFigure*>"
  platform:
  - net462
- uid: System.Windows.Media.StreamGeometryContext.Close
  id: Close
  parent: System.Windows.Media.StreamGeometryContext
  langs:
  - csharp
  name: Close()
  nameWithType: StreamGeometryContext.Close()
  fullName: System.Windows.Media.StreamGeometryContext.Close()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "이 컨텍스트를 닫고 해당 콘텐츠를 렌더링할 수 있도록 플러시합니다."
  remarks: "를 닫은 후에 컨텍스트를 수정할 수 없습니다. 해당 콘텐츠를 렌더링할 수 전에 컨텍스트를 닫아야 합니다."
  syntax:
    content: public virtual void Close ();
    parameters: []
  overload: System.Windows.Media.StreamGeometryContext.Close*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "이 컨텍스트에서 이미 닫혀 있거나 삭제 합니다."
  platform:
  - net462
- uid: System.Windows.Media.StreamGeometryContext.LineTo(System.Windows.Point,System.Boolean,System.Boolean)
  id: LineTo(System.Windows.Point,System.Boolean,System.Boolean)
  parent: System.Windows.Media.StreamGeometryContext
  langs:
  - csharp
  name: LineTo(Point,Boolean,Boolean)
  nameWithType: StreamGeometryContext.LineTo(Point,Boolean,Boolean)
  fullName: System.Windows.Media.StreamGeometryContext.LineTo(Point,Boolean,Boolean)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "지정 된 직선을 그립니다 <xref href=&quot;System.Windows.Point&quot;> </xref>합니다."
  remarks: "이 메서드는 기준으로 이전 세그먼트의 끝점을 사용 합니다. 지정 된 점을 사용 하 여 도형에 있는 첫 번째 세그먼트 인 경우는 <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A>메서드 시작 점으로.</xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A>       A <xref:System.Windows.Media.StreamGeometry>포함 된 경우 직렬화 할 수 없습니다는 <xref:System.Windows.Media.Transform>스트로크 되지 않은 일부 또는 채워지지 않은 세그먼트 또는.</xref:System.Windows.Media.Transform> </xref:System.Windows.Media.StreamGeometry>"
  example:
  - "The following example shows how to draw a triangle using the LineTo method.  \n  \n [!code-vb[GeometriesMiscSnippets_procedural_snip#StreamGeometryTriangleExampleWholePage](~/add/codesnippet/visualbasic/geometriesmiscsnippets_procedural/streamgeometrytriangleexample.vb#streamgeometrytriangleexamplewholepage)]\n [!code-cs[GeometriesMiscSnippets_procedural_snip#StreamGeometryTriangleExampleWholePage](~/add/codesnippet/csharp/GeometriesMiscSnippets_procedural/StreamGeometryTriangleExample.cs#streamgeometrytriangleexamplewholepage)]"
  syntax:
    content: public abstract void LineTo (System.Windows.Point point, bool isStroked, bool isSmoothJoin);
    parameters:
    - id: point
      type: System.Windows.Point
      description: "줄의 끝에 대 한 대상 지점입니다."
    - id: isStroked
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>세그먼트를 스트로크 시기는 <xref href=&quot;System.Windows.Media.Pen&quot;> </xref> 사용 하는 세그먼트를 렌더링 하 고, 그러지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
    - id: isSmoothJoin
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>이 세그먼트는 이전 세그먼트 간의 조인을 사용 하 여 스트로크 하는 경우 모퉁이으로 처리 하는 <xref href=&quot;System.Windows.Media.Pen&quot;> </xref>, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Media.StreamGeometryContext.LineTo*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "호출 하 여 그림을 시작 하지 않고 세그먼트를 추가 하려고 했습니다는 <xref:System.Windows.Media.StreamGeometryContext.BeginFigure*>메서드.</xref:System.Windows.Media.StreamGeometryContext.BeginFigure*>"
  platform:
  - net462
- uid: System.Windows.Media.StreamGeometryContext.PolyBezierTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)
  id: PolyBezierTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)
  parent: System.Windows.Media.StreamGeometryContext
  langs:
  - csharp
  name: PolyBezierTo(IList<Point>,Boolean,Boolean)
  nameWithType: StreamGeometryContext.PolyBezierTo(IList<Point>,Boolean,Boolean)
  fullName: System.Windows.Media.StreamGeometryContext.PolyBezierTo(IList<Point>,Boolean,Boolean)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "하나 이상의 연결 된 그립니다 베 지 어 곡선으로 분할 합니다."
  remarks: "첫 번째 지점 `points` 첫 번째 제어점 지정 두 번째 제어점을 지정, 세 번째 점과 끝점을 지정 하 고, 다음 곡선의 첫째 제어점 지정 합니다.       이 메서드는 기준으로 이전 세그먼트의 끝점을 사용 합니다. 지정 된 점을 사용 하 여 도형에 있는 첫 번째 세그먼트 인 경우는 <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A>메서드 시작 점으로.</xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A>       A <xref:System.Windows.Media.StreamGeometry>포함 된 경우 직렬화 할 수 없습니다는 <xref:System.Windows.Media.Transform>스트로크 되지 않은 일부 또는 채워지지 않은 세그먼트 또는.</xref:System.Windows.Media.Transform> </xref:System.Windows.Media.StreamGeometry>"
  example:
  - "The following example shows how to draw multiple connected Bezier curves using the PolyBezierTo method.  \n  \n [!code-vb[GeometriesMiscSnippets_procedural_snip#StreamGeometryPolyBezierToExampleWholePage](~/add/codesnippet/visualbasic/geometriesmiscsnippets_procedural/streamgeometrypolybeziertoexample.vb#streamgeometrypolybeziertoexamplewholepage)]\n [!code-cs[GeometriesMiscSnippets_procedural_snip#StreamGeometryPolyBezierToExampleWholePage](~/add/codesnippet/csharp/GeometriesMiscSnippets_procedural/StreamGeometryPolyBezierToExample.cs#streamgeometrypolybeziertoexamplewholepage)]"
  syntax:
    content: public abstract void PolyBezierTo (System.Collections.Generic.IList<System.Windows.Point> points, bool isStroked, bool isSmoothJoin);
    parameters:
    - id: points
      type: System.Collections.Generic.IList{System.Windows.Point}
      description: "목록 제어점 및 하나 이상의 베 지 어 곡선으로 분할에 대 한 대상 점은 지정 하는 지점입니다. 이 목록에 있는 점의 개수는&3;의 배수 여야 합니다."
    - id: isStroked
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>세그먼트를 스트로크 시기는 <xref href=&quot;System.Windows.Media.Pen&quot;> </xref> 사용 하는 세그먼트를 렌더링 하 고, 그러지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
    - id: isSmoothJoin
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>이 세그먼트는 이전 세그먼트 간의 조인을 사용 하 여 스트로크 하는 경우 모퉁이으로 처리 하는 <xref href=&quot;System.Windows.Media.Pen&quot;> </xref>, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Media.StreamGeometryContext.PolyBezierTo*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "호출 하 여 그림을 시작 하지 않고 세그먼트를 추가 하려고 했습니다는 <xref:System.Windows.Media.StreamGeometryContext.BeginFigure*>메서드.</xref:System.Windows.Media.StreamGeometryContext.BeginFigure*>"
  platform:
  - net462
- uid: System.Windows.Media.StreamGeometryContext.PolyLineTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)
  id: PolyLineTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)
  parent: System.Windows.Media.StreamGeometryContext
  langs:
  - csharp
  name: PolyLineTo(IList<Point>,Boolean,Boolean)
  nameWithType: StreamGeometryContext.PolyLineTo(IList<Point>,Boolean,Boolean)
  fullName: System.Windows.Media.StreamGeometryContext.PolyLineTo(IList<Point>,Boolean,Boolean)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "연결 된 직선을 그립니다 하나 이상 있습니다."
  remarks: "이 메서드는 기준으로 이전 세그먼트의 끝점을 사용 합니다. 지정 된 점을 사용 하 여 도형에 있는 첫 번째 세그먼트 인 경우는 <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A>메서드 시작 점으로.</xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A>       A <xref:System.Windows.Media.StreamGeometry>포함 된 경우 직렬화 할 수 없습니다는 <xref:System.Windows.Media.Transform>스트로크 되지 않은 일부 또는 채워지지 않은 세그먼트 또는.</xref:System.Windows.Media.Transform> </xref:System.Windows.Media.StreamGeometry>"
  example:
  - "The following example shows how to draw a triangle using the PolyLineTo method.  \n  \n [!code-cs[GeometriesMiscSnippets_procedural_snip#StreamGeometryPolyLineToExampleWholePage](~/add/codesnippet/csharp/GeometriesMiscSnippets_procedural/StreamGeometryPolyLineToExample.cs#streamgeometrypolylinetoexamplewholepage)]\n [!code-vb[GeometriesMiscSnippets_procedural_snip#StreamGeometryPolyLineToExampleWholePage](~/add/codesnippet/visualbasic/geometriesmiscsnippets_procedural/streamgeometrypolylinetoexample.vb#streamgeometrypolylinetoexamplewholepage)]"
  syntax:
    content: public abstract void PolyLineTo (System.Collections.Generic.IList<System.Windows.Point> points, bool isStroked, bool isSmoothJoin);
    parameters:
    - id: points
      type: System.Collections.Generic.IList{System.Windows.Point}
      description: "연결 된 직선을 하나 이상에 대 한 대상 포인트를 지정 하는 요소의 컬렉션입니다."
    - id: isStroked
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>세그먼트를 스트로크 시기는 <xref href=&quot;System.Windows.Media.Pen&quot;> </xref> 사용 하는 세그먼트를 렌더링 하 고, 그러지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
    - id: isSmoothJoin
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>이 세그먼트는 이전 세그먼트 간의 조인을 사용 하 여 스트로크 하는 경우 모퉁이으로 처리 하는 <xref href=&quot;System.Windows.Media.Pen&quot;> </xref>, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Media.StreamGeometryContext.PolyLineTo*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "호출 하 여 그림을 시작 하지 않고 세그먼트를 추가 하려고 했습니다는 <xref:System.Windows.Media.StreamGeometryContext.BeginFigure*>메서드.</xref:System.Windows.Media.StreamGeometryContext.BeginFigure*>"
  platform:
  - net462
- uid: System.Windows.Media.StreamGeometryContext.PolyQuadraticBezierTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)
  id: PolyQuadraticBezierTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)
  parent: System.Windows.Media.StreamGeometryContext
  langs:
  - csharp
  name: PolyQuadraticBezierTo(IList<Point>,Boolean,Boolean)
  nameWithType: StreamGeometryContext.PolyQuadraticBezierTo(IList<Point>,Boolean,Boolean)
  fullName: System.Windows.Media.StreamGeometryContext.PolyQuadraticBezierTo(IList<Point>,Boolean,Boolean)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "연결 된 정방형&3; 차원 곡선을 하나 이상의 그립니다."
  remarks: "이 메서드는 기준으로 이전 세그먼트의 끝점을 사용 합니다. 지정 된 점을 사용 하 여 도형에 있는 첫 번째 세그먼트 인 경우는 <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A>메서드 시작 점으로.</xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A>       A <xref:System.Windows.Media.StreamGeometry>포함 된 경우 직렬화 할 수 없습니다는 <xref:System.Windows.Media.Transform>스트로크 되지 않은 일부 또는 채워지지 않은 세그먼트 또는.</xref:System.Windows.Media.Transform> </xref:System.Windows.Media.StreamGeometry>"
  example:
  - "The following example shows how to draw multiple connected quadratic Bezier curves using the PolyQuadraticBezierTo method.  \n  \n [!code-vb[GeometriesMiscSnippets_procedural_snip#StreamGeometryPolyQuadraticBezierToExampleWholePage](~/add/codesnippet/visualbasic/geometriesmiscsnippets_procedural/streamgeometrypolyquadraticbeziertoexample.vb#streamgeometrypolyquadraticbeziertoexamplewholepage)]\n [!code-cs[GeometriesMiscSnippets_procedural_snip#StreamGeometryPolyQuadraticBezierToExampleWholePage](~/add/codesnippet/csharp/GeometriesMiscSnippets_procedural/StreamGeometryPolyQuadraticBezierToExample.cs#streamgeometrypolyquadraticbeziertoexamplewholepage)]"
  syntax:
    content: public abstract void PolyQuadraticBezierTo (System.Collections.Generic.IList<System.Windows.Point> points, bool isStroked, bool isSmoothJoin);
    parameters:
    - id: points
      type: System.Collections.Generic.IList{System.Windows.Point}
      description: "제어점 및 대상 지정 하는 지점 컬렉션을 하나 이상의 정방형&3; 차원 곡선을 가리킵니다. 목록에서 첫 번째 지점 곡선의 제어점을 지정 하 고, 대상 지점 지정 하 고, 다음 곡선의 제어점 지정. 목록에는 짝수 요소 수 있어야 합니다."
    - id: isStroked
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>세그먼트를 스트로크 시기는 <xref href=&quot;System.Windows.Media.Pen&quot;> </xref> 사용 하는 세그먼트를 렌더링 하 고, 그러지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
    - id: isSmoothJoin
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>이 세그먼트는 이전 세그먼트 간의 조인을 사용 하 여 스트로크 하는 경우 모퉁이으로 처리 하는 <xref href=&quot;System.Windows.Media.Pen&quot;> </xref>, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Media.StreamGeometryContext.PolyQuadraticBezierTo*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "호출 하 여 그림을 시작 하지 않고 세그먼트를 추가 하려고 했습니다는 <xref:System.Windows.Media.StreamGeometryContext.BeginFigure*>메서드.</xref:System.Windows.Media.StreamGeometryContext.BeginFigure*>"
  platform:
  - net462
- uid: System.Windows.Media.StreamGeometryContext.QuadraticBezierTo(System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)
  id: QuadraticBezierTo(System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)
  parent: System.Windows.Media.StreamGeometryContext
  langs:
  - csharp
  name: QuadraticBezierTo(Point,Point,Boolean,Boolean)
  nameWithType: StreamGeometryContext.QuadraticBezierTo(Point,Point,Boolean,Boolean)
  fullName: System.Windows.Media.StreamGeometryContext.QuadraticBezierTo(Point,Point,Boolean,Boolean)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "정방형&3; 차원 곡선을 그립니다."
  remarks: "정방형 입방 형&3; 차원 곡선을 두 개의 제어점을 사용 하는 입방 형&3; 차원 곡선 달리 단일 제어 지점을 사용 합니다.       이 메서드는 기준으로 이전 세그먼트의 끝점을 사용 합니다. 지정 된 점을 사용 하 여 도형에 있는 첫 번째 세그먼트 인 경우는 <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A>메서드 시작 점으로.</xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A>       A <xref:System.Windows.Media.StreamGeometry>포함 된 경우 직렬화 할 수 없습니다는 <xref:System.Windows.Media.Transform>스트로크 되지 않은 일부 또는 채워지지 않은 세그먼트 또는.</xref:System.Windows.Media.Transform> </xref:System.Windows.Media.StreamGeometry>"
  example:
  - "The following example shows how to draw a quadratic Bezier curve using the QuadraticBezierTo method.  \n  \n [!code-cs[GeometriesMiscSnippets_procedural_snip#StreamGeometryQuadraticBezierToExampleWholePage](~/add/codesnippet/csharp/GeometriesMiscSnippets_procedural/StreamGeometryQuadraticBezierToExample.cs#streamgeometryquadraticbeziertoexamplewholepage)]\n [!code-vb[GeometriesMiscSnippets_procedural_snip#StreamGeometryQuadraticBezierToExampleWholePage](~/add/codesnippet/visualbasic/geometriesmiscsnippets_procedural/streamgeometryquadraticbeziertoexample.vb#streamgeometryquadraticbeziertoexamplewholepage)]"
  syntax:
    content: public abstract void QuadraticBezierTo (System.Windows.Point point1, System.Windows.Point point2, bool isStroked, bool isSmoothJoin);
    parameters:
    - id: point1
      type: System.Windows.Point
      description: "곡선의 모양을 지정 하는 데 제어점입니다."
    - id: point2
      type: System.Windows.Point
      description: "곡선의 끝에 대 한 대상 지점입니다."
    - id: isStroked
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>세그먼트를 스트로크 시기는 <xref href=&quot;System.Windows.Media.Pen&quot;> </xref> 사용 하는 세그먼트를 렌더링 하 고, 그러지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
    - id: isSmoothJoin
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>이 세그먼트는 이전 세그먼트 간의 조인을 사용 하 여 스트로크 하는 경우 모퉁이으로 처리 하는 <xref href=&quot;System.Windows.Media.Pen&quot;> </xref>, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Media.StreamGeometryContext.QuadraticBezierTo*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "호출 하 여 그림을 시작 하지 않고 세그먼트를 추가 하려고 했습니다는 <xref:System.Windows.Media.StreamGeometryContext.BeginFigure*>메서드.</xref:System.Windows.Media.StreamGeometryContext.BeginFigure*>"
  platform:
  - net462
- uid: System.Windows.Media.StreamGeometryContext.System#IDisposable#Dispose
  id: System#IDisposable#Dispose
  isEii: true
  parent: System.Windows.Media.StreamGeometryContext
  langs:
  - csharp
  name: System.IDisposable.Dispose()
  nameWithType: StreamGeometryContext.System.IDisposable.Dispose()
  fullName: System.Windows.Media.StreamGeometryContext.System.IDisposable.Dispose()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "이 멤버는 [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] 인프라 하며 사용자 코드에서 직접 사용할 수 없습니다."
  syntax:
    content: void IDisposable.Dispose ();
    parameters: []
  overload: System.Windows.Media.StreamGeometryContext.System#IDisposable#Dispose*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Threading.DispatcherObject
  isExternal: false
  name: System.Windows.Threading.DispatcherObject
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.Windows.Media.StreamGeometryContext.ArcTo(System.Windows.Point,System.Windows.Size,System.Double,System.Boolean,System.Windows.Media.SweepDirection,System.Boolean,System.Boolean)
  parent: System.Windows.Media.StreamGeometryContext
  isExternal: false
  name: ArcTo(Point,Size,Double,Boolean,SweepDirection,Boolean,Boolean)
  nameWithType: StreamGeometryContext.ArcTo(Point,Size,Double,Boolean,SweepDirection,Boolean,Boolean)
  fullName: System.Windows.Media.StreamGeometryContext.ArcTo(Point,Size,Double,Boolean,SweepDirection,Boolean,Boolean)
- uid: System.Windows.Point
  parent: System.Windows
  isExternal: false
  name: Point
  nameWithType: Point
  fullName: System.Windows.Point
- uid: System.Windows.Size
  parent: System.Windows
  isExternal: false
  name: Size
  nameWithType: Size
  fullName: System.Windows.Size
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Media.SweepDirection
  parent: System.Windows.Media
  isExternal: false
  name: SweepDirection
  nameWithType: SweepDirection
  fullName: System.Windows.Media.SweepDirection
- uid: System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)
  parent: System.Windows.Media.StreamGeometryContext
  isExternal: false
  name: BeginFigure(Point,Boolean,Boolean)
  nameWithType: StreamGeometryContext.BeginFigure(Point,Boolean,Boolean)
  fullName: System.Windows.Media.StreamGeometryContext.BeginFigure(Point,Boolean,Boolean)
- uid: System.Windows.Media.StreamGeometryContext.BezierTo(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)
  parent: System.Windows.Media.StreamGeometryContext
  isExternal: false
  name: BezierTo(Point,Point,Point,Boolean,Boolean)
  nameWithType: StreamGeometryContext.BezierTo(Point,Point,Point,Boolean,Boolean)
  fullName: System.Windows.Media.StreamGeometryContext.BezierTo(Point,Point,Point,Boolean,Boolean)
- uid: System.Windows.Media.StreamGeometryContext.Close
  parent: System.Windows.Media.StreamGeometryContext
  isExternal: false
  name: Close()
  nameWithType: StreamGeometryContext.Close()
  fullName: System.Windows.Media.StreamGeometryContext.Close()
- uid: System.Windows.Media.StreamGeometryContext.LineTo(System.Windows.Point,System.Boolean,System.Boolean)
  parent: System.Windows.Media.StreamGeometryContext
  isExternal: false
  name: LineTo(Point,Boolean,Boolean)
  nameWithType: StreamGeometryContext.LineTo(Point,Boolean,Boolean)
  fullName: System.Windows.Media.StreamGeometryContext.LineTo(Point,Boolean,Boolean)
- uid: System.Windows.Media.StreamGeometryContext.PolyBezierTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)
  parent: System.Windows.Media.StreamGeometryContext
  isExternal: false
  name: PolyBezierTo(IList<Point>,Boolean,Boolean)
  nameWithType: StreamGeometryContext.PolyBezierTo(IList<Point>,Boolean,Boolean)
  fullName: System.Windows.Media.StreamGeometryContext.PolyBezierTo(IList<Point>,Boolean,Boolean)
- uid: System.Collections.Generic.IList{System.Windows.Point}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<Point>
  nameWithType: IList<Point>
  fullName: System.Collections.Generic.IList<System.Windows.Point>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.Windows.Point>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Point
    name: Point
    nameWithType: Point
    fullName: Point
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Media.StreamGeometryContext.PolyLineTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)
  parent: System.Windows.Media.StreamGeometryContext
  isExternal: false
  name: PolyLineTo(IList<Point>,Boolean,Boolean)
  nameWithType: StreamGeometryContext.PolyLineTo(IList<Point>,Boolean,Boolean)
  fullName: System.Windows.Media.StreamGeometryContext.PolyLineTo(IList<Point>,Boolean,Boolean)
- uid: System.Windows.Media.StreamGeometryContext.PolyQuadraticBezierTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)
  parent: System.Windows.Media.StreamGeometryContext
  isExternal: false
  name: PolyQuadraticBezierTo(IList<Point>,Boolean,Boolean)
  nameWithType: StreamGeometryContext.PolyQuadraticBezierTo(IList<Point>,Boolean,Boolean)
  fullName: System.Windows.Media.StreamGeometryContext.PolyQuadraticBezierTo(IList<Point>,Boolean,Boolean)
- uid: System.Windows.Media.StreamGeometryContext.QuadraticBezierTo(System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)
  parent: System.Windows.Media.StreamGeometryContext
  isExternal: false
  name: QuadraticBezierTo(Point,Point,Boolean,Boolean)
  nameWithType: StreamGeometryContext.QuadraticBezierTo(Point,Point,Boolean,Boolean)
  fullName: System.Windows.Media.StreamGeometryContext.QuadraticBezierTo(Point,Point,Boolean,Boolean)
- uid: System.Windows.Media.StreamGeometryContext.System#IDisposable#Dispose
  parent: System.Windows.Media.StreamGeometryContext
  isExternal: false
  name: System.IDisposable.Dispose()
  nameWithType: StreamGeometryContext.System.IDisposable.Dispose()
  fullName: System.Windows.Media.StreamGeometryContext.System.IDisposable.Dispose()
- uid: System.Windows.Media.StreamGeometryContext.ArcTo*
  parent: System.Windows.Media.StreamGeometryContext
  isExternal: false
  name: ArcTo
  nameWithType: StreamGeometryContext.ArcTo
- uid: System.Windows.Media.StreamGeometryContext.BeginFigure*
  parent: System.Windows.Media.StreamGeometryContext
  isExternal: false
  name: BeginFigure
  nameWithType: StreamGeometryContext.BeginFigure
- uid: System.Windows.Media.StreamGeometryContext.BezierTo*
  parent: System.Windows.Media.StreamGeometryContext
  isExternal: false
  name: BezierTo
  nameWithType: StreamGeometryContext.BezierTo
- uid: System.Windows.Media.StreamGeometryContext.Close*
  parent: System.Windows.Media.StreamGeometryContext
  isExternal: false
  name: Close
  nameWithType: StreamGeometryContext.Close
- uid: System.Windows.Media.StreamGeometryContext.LineTo*
  parent: System.Windows.Media.StreamGeometryContext
  isExternal: false
  name: LineTo
  nameWithType: StreamGeometryContext.LineTo
- uid: System.Windows.Media.StreamGeometryContext.PolyBezierTo*
  parent: System.Windows.Media.StreamGeometryContext
  isExternal: false
  name: PolyBezierTo
  nameWithType: StreamGeometryContext.PolyBezierTo
- uid: System.Windows.Media.StreamGeometryContext.PolyLineTo*
  parent: System.Windows.Media.StreamGeometryContext
  isExternal: false
  name: PolyLineTo
  nameWithType: StreamGeometryContext.PolyLineTo
- uid: System.Windows.Media.StreamGeometryContext.PolyQuadraticBezierTo*
  parent: System.Windows.Media.StreamGeometryContext
  isExternal: false
  name: PolyQuadraticBezierTo
  nameWithType: StreamGeometryContext.PolyQuadraticBezierTo
- uid: System.Windows.Media.StreamGeometryContext.QuadraticBezierTo*
  parent: System.Windows.Media.StreamGeometryContext
  isExternal: false
  name: QuadraticBezierTo
  nameWithType: StreamGeometryContext.QuadraticBezierTo
- uid: System.Windows.Media.StreamGeometryContext.System#IDisposable#Dispose*
  parent: System.Windows.Media.StreamGeometryContext
  isExternal: false
  name: System.IDisposable.Dispose
  nameWithType: StreamGeometryContext.System.IDisposable.Dispose
