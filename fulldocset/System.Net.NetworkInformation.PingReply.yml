### YamlMime:ManagedReference
items:
- uid: System.Net.NetworkInformation.PingReply
  id: PingReply
  children:
  - System.Net.NetworkInformation.PingReply.Address
  - System.Net.NetworkInformation.PingReply.Buffer
  - System.Net.NetworkInformation.PingReply.Options
  - System.Net.NetworkInformation.PingReply.RoundtripTime
  - System.Net.NetworkInformation.PingReply.Status
  langs:
  - csharp
  name: PingReply
  nameWithType: PingReply
  fullName: System.Net.NetworkInformation.PingReply
  type: Class
  summary: "상태 및 가져온 데이터에 대 한 정보를 제공는 <> </> *> 또는 <> </> *> 작업입니다."
  remarks: "<xref:System.Net.NetworkInformation.Ping>클래스는 원격 컴퓨터에 제어 메시지 ICMP (Internet Protocol) 에코 요청을 보내고 ICMP 에코 응답 메시지를 통해 컴퓨터에서 다시 정보를 수신 하려고 합니다.</xref:System.Net.NetworkInformation.Ping> <xref:System.Net.NetworkInformation.Ping>클래스 PingReply 클래스의 인스턴스를 사용 하 여 해당 상태 및 요청을 보내고 응답을 수신 하는 데 걸리는 시간과 같은 작업에 대 한 정보를 반환 합니다.</xref:System.Net.NetworkInformation.Ping>       <xref:System.Net.NetworkInformation.Ping.Send%2A>메서드 직접 PingReply 클래스의 인스턴스를 반환 합니다.</xref:System.Net.NetworkInformation.Ping.Send%2A> <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>메서드 반환에 PingReply는 <xref:System.Net.NetworkInformation.PingCompletedEventHandler>메서드의 <xref:System.Net.NetworkInformation.PingCompletedEventArgs>매개 변수.</xref:System.Net.NetworkInformation.PingCompletedEventArgs> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> PingReply 통해 액세스 되는 <xref:System.Net.NetworkInformation.PingCompletedEventArgs.Reply%2A>속성.</xref:System.Net.NetworkInformation.PingCompletedEventArgs.Reply%2A>       하는 경우의 값 <xref:System.Net.NetworkInformation.PingReply.Status%2A>않습니다 <xref:System.Net.NetworkInformation.IPStatus>를 반환 하는 값을 사용 하지 않아야는 <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A>, <xref:System.Net.NetworkInformation.PingReply.Options%2A>또는 <xref:System.Net.NetworkInformation.PingReply.Buffer%2A>속성.</xref:System.Net.NetworkInformation.PingReply.Buffer%2A> </xref:System.Net.NetworkInformation.PingReply.Options%2A> </xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A> </xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A> <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A>속성은&0;을 반환 합니다.는 <xref:System.Net.NetworkInformation.PingReply.Buffer%2A>속성은 빈 배열을 반환 및 <xref:System.Net.NetworkInformation.PingReply.Options%2A>속성은 반환 `null`.</xref:System.Net.NetworkInformation.PingReply.Options%2A> </xref:System.Net.NetworkInformation.PingReply.Buffer%2A> </xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A>"
  example:
  - "The following code example demonstrates using <xref:System.Net.NetworkInformation.Ping> class to send an ICMP echo request synchronously and display the response.  \n  \n [!code-cs[NCLPingSync#1](~/add/codesnippet/csharp/t-system.net.networkinfo_6_1.cs)]\n [!code-cpp[NCLPingSync#1](~/add/codesnippet/cpp/t-system.net.networkinfo_6_1.cpp)]"
  syntax:
    content: public class PingReply
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.PingReply.Address
  id: Address
  parent: System.Net.NetworkInformation.PingReply
  langs:
  - csharp
  name: Address
  nameWithType: PingReply.Address
  fullName: System.Net.NetworkInformation.PingReply.Address
  type: Property
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "제어 메시지 ICMP (Internet Protocol) 에코 응답을 전송 하는 호스트의 주소를 가져옵니다."
  remarks: "주소 중 하나에서 반환 된 <xref:System.Net.NetworkInformation.Ping.Send%2A>오버 로드는 악의적인 원격 컴퓨터에서 발생할 수 있습니다.</xref:System.Net.NetworkInformation.Ping.Send%2A> 이 주소를 사용 하 여 원격 컴퓨터에 연결 하지 않습니다. DNS를 사용 하 여 연결 하려는 컴퓨터의 IP 주소를 결정 합니다."
  example:
  - "The following code example sends an ICMP echo request synchronously and displays the value of this property.  \n  \n [!code-cs[NclPingSampler#2](~/add/codesnippet/csharp/p-system.net.networkinfo_2_1.cs)]\n [!code-cpp[NclPingSampler#2](~/add/codesnippet/cpp/p-system.net.networkinfo_2_1.cpp)]"
  syntax:
    content: public System.Net.IPAddress Address { get; }
    return:
      type: System.Net.IPAddress
      description: "<xref:System.Net.IPAddress>ICMP 에코 메시지의 대상을 포함 합니다.</xref:System.Net.IPAddress>"
  overload: System.Net.NetworkInformation.PingReply.Address*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.PingReply.Buffer
  id: Buffer
  parent: System.Net.NetworkInformation.PingReply
  langs:
  - csharp
  name: Buffer
  nameWithType: PingReply.Buffer
  fullName: System.Net.NetworkInformation.PingReply.Buffer
  type: Property
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "제어 메시지 ICMP (Internet Protocol) 에코 응답 메시지에 받은 데이터의 버퍼를 가져옵니다."
  remarks: "ICMP 에코 요청 함께 보낸 데이터 버퍼는 알려진된 크기의 패킷을 왕복 이동 시간을 계산할 수 있도록 에코 응답에 보낸 사람에 게 반환 됩니다. 와 함께 데이터 버퍼는 <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>옵션, 원본 및 대상 컴퓨터 간의 네트워크 경로 대 한 최대 전송 단위를 검색 하는 사용할 수 있습니다.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> 자세한 내용은 &quot;Traceroute&quot; 섹션 3.2, http://www.ietf.org에서 RFC 1574에서 참조 하십시오.       사용할 버퍼의 기본 <xref:System.Net.NetworkInformation.Ping.Send%2A>및 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>32 바이트의 데이터를 포함 합니다.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A>"
  example:
  - "The following code example sends an ICMP echo request synchronously and displays the size of the buffer returned by this property.  \n  \n [!code-cs[NclPingSampler#4](~/add/codesnippet/csharp/p-system.net.networkinfo_1_1.cs)]\n [!code-cpp[NclPingSampler#4](~/add/codesnippet/cpp/p-system.net.networkinfo_1_1.cpp)]"
  syntax:
    content: public byte[] Buffer { get; }
    return:
      type: System.Byte[]
      description: "A <xref:System.Byte>응답이 없을 경우에 ICMP 에코 응답 메시지 이거나 빈 배열이 면 받은 데이터를 포함 된 배열.</xref:System.Byte>"
  overload: System.Net.NetworkInformation.PingReply.Buffer*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.PingReply.Options
  id: Options
  parent: System.Net.NetworkInformation.PingReply
  langs:
  - csharp
  name: Options
  nameWithType: PingReply.Options
  fullName: System.Net.NetworkInformation.PingReply.Options
  type: Property
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "제어 메시지 ICMP (Internet Protocol) 에코 요청에 회신을 전송 하는 데 사용 되는 옵션을 가져옵니다."
  remarks: "TTL은 소스와 대상 사이 이동 노드 패킷을 전달할 수는 횟수를 정의 합니다. 홉이 라고도 전달 횟수 TTL에 지정 된 값을 초과 하면 패킷이 배달할 수 없는 것으로 간주 됩니다 한 삭제 됩니다.       <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>ICMP 에코 요청 컨트롤 패킷 조각화에 지정 된 값.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> 경우 <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>은 `true` 및 패킷 크기가 초과 패킷에 사용 된 네트워크 경로의 최대 전송 단위, 패킷이 삭제 됩니다 및 <xref:System.Net.NetworkInformation.IPStatus>오류가 반환 됩니다.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>"
  example:
  - "The following code example sends an ICMP echo request synchronously and displays the values stored in the <xref:System.Net.NetworkInformation.PingOptions> object returned by this property.  \n  \n [!code-cs[NclPingSampler#3](~/add/codesnippet/csharp/p-system.net.networkinfo_3_1.cs)]\n [!code-cpp[NclPingSampler#3](~/add/codesnippet/cpp/p-system.net.networkinfo_3_1.cpp)]"
  syntax:
    content: public System.Net.NetworkInformation.PingOptions Options { get; }
    return:
      type: System.Net.NetworkInformation.PingOptions
      description: "A <xref href=&quot;System.Net.NetworkInformation.PingOptions&quot;> </xref> TTL (Live)을 조각화 지시문 이면 회신을 전송에 사용 되는 시간을 포함 하는 개체 <xref:System.Net.NetworkInformation.PingReply.Status*>은 <xref href=&quot;System.Net.NetworkInformation.IPStatus&quot;> </xref>, 그렇지 않으면 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Net.NetworkInformation.PingReply.Status*>"
  overload: System.Net.NetworkInformation.PingReply.Options*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.PingReply.RoundtripTime
  id: RoundtripTime
  parent: System.Net.NetworkInformation.PingReply
  langs:
  - csharp
  name: RoundtripTime
  nameWithType: PingReply.RoundtripTime
  fullName: System.Net.NetworkInformation.PingReply.RoundtripTime
  type: Property
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "제어 메시지 ICMP (Internet Protocol) 에코 요청을 보내고 해당 ICMP 에코 응답 메시지를 수신 하는 데 걸린 시간 (밀리초)의 수를 가져옵니다."
  remarks: "에코 요청에 실패 하면 RoundtripTime 시간은도 유효한 값이 요청에 성공 하면 0으로 보고 됩니다. 확인 해야 합니다는 <xref:System.Net.NetworkInformation.PingReply.Status%2A>이 속성에서 반환 되는 값을 무시할지 여부를 확인 하려면.</xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - "The following code example sends an ICMP echo request synchronously and displays the size of the buffer returned by this property.  \n  \n [!code-cs[NclPingSampler#4](~/add/codesnippet/csharp/p-system.net.networkinfo_4_1.cs)]\n [!code-cpp[NclPingSampler#4](~/add/codesnippet/cpp/p-system.net.networkinfo_4_1.cpp)]"
  syntax:
    content: public long RoundtripTime { get; }
    return:
      type: System.Int64
      description: "<xref:System.Int64>왕복 시간을 밀리초 단위로 지정 하는.</xref:System.Int64>"
  overload: System.Net.NetworkInformation.PingReply.RoundtripTime*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.PingReply.Status
  id: Status
  parent: System.Net.NetworkInformation.PingReply
  langs:
  - csharp
  name: Status
  nameWithType: PingReply.Status
  fullName: System.Net.NetworkInformation.PingReply.Status
  type: Property
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "제어 메시지 ICMP (Internet Protocol) 에코 요청을 보내고 해당 ICMP 에코 응답 메시지를 받을 시도의 상태를 가져옵니다."
  remarks: "상태 값 없으면 <xref:System.Net.NetworkInformation.IPStatus>를 반환 하는 값을 사용 하지 않아야는 <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A>, <xref:System.Net.NetworkInformation.PingReply.Options%2A>또는 <xref:System.Net.NetworkInformation.PingReply.Buffer%2A>속성.</xref:System.Net.NetworkInformation.PingReply.Buffer%2A> </xref:System.Net.NetworkInformation.PingReply.Options%2A> </xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A> </xref:System.Net.NetworkInformation.IPStatus> <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A>및 <xref:System.Net.NetworkInformation.PingReply.Buffer%2A>속성은&0;을 반환 하며 <xref:System.Net.NetworkInformation.PingReply.Options%2A>속성은 반환 `null`.</xref:System.Net.NetworkInformation.PingReply.Options%2A> </xref:System.Net.NetworkInformation.PingReply.Buffer%2A> </xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A>"
  example:
  - "The following code example demonstrates using <xref:System.Net.NetworkInformation.Ping> class to send an ICMP echo request synchronously and display the response.  \n  \n [!code-cs[NCLPingSync#1](~/add/codesnippet/csharp/p-system.net.networkinfo_8_1.cs)]\n [!code-cpp[NCLPingSync#1](~/add/codesnippet/cpp/p-system.net.networkinfo_8_1.cpp)]"
  syntax:
    content: public System.Net.NetworkInformation.IPStatus Status { get; }
    return:
      type: System.Net.NetworkInformation.IPStatus
      description: "<xref href=&quot;System.Net.NetworkInformation.IPStatus&quot;> </xref> 요청의 결과 나타내는 값입니다."
  overload: System.Net.NetworkInformation.PingReply.Status*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Net.NetworkInformation.PingReply.Address
  parent: System.Net.NetworkInformation.PingReply
  isExternal: false
  name: Address
  nameWithType: PingReply.Address
  fullName: System.Net.NetworkInformation.PingReply.Address
- uid: System.Net.IPAddress
  parent: System.Net
  isExternal: true
  name: IPAddress
  nameWithType: IPAddress
  fullName: System.Net.IPAddress
- uid: System.Net.NetworkInformation.PingReply.Buffer
  parent: System.Net.NetworkInformation.PingReply
  isExternal: false
  name: Buffer
  nameWithType: PingReply.Buffer
  fullName: System.Net.NetworkInformation.PingReply.Buffer
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Net.NetworkInformation.PingReply.Options
  parent: System.Net.NetworkInformation.PingReply
  isExternal: false
  name: Options
  nameWithType: PingReply.Options
  fullName: System.Net.NetworkInformation.PingReply.Options
- uid: System.Net.NetworkInformation.PingOptions
  parent: System.Net.NetworkInformation
  isExternal: false
  name: PingOptions
  nameWithType: PingOptions
  fullName: System.Net.NetworkInformation.PingOptions
- uid: System.Net.NetworkInformation.PingReply.RoundtripTime
  parent: System.Net.NetworkInformation.PingReply
  isExternal: false
  name: RoundtripTime
  nameWithType: PingReply.RoundtripTime
  fullName: System.Net.NetworkInformation.PingReply.RoundtripTime
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Net.NetworkInformation.PingReply.Status
  parent: System.Net.NetworkInformation.PingReply
  isExternal: false
  name: Status
  nameWithType: PingReply.Status
  fullName: System.Net.NetworkInformation.PingReply.Status
- uid: System.Net.NetworkInformation.IPStatus
  parent: System.Net.NetworkInformation
  isExternal: false
  name: IPStatus
  nameWithType: IPStatus
  fullName: System.Net.NetworkInformation.IPStatus
- uid: System.Net.NetworkInformation.PingReply.Address*
  parent: System.Net.NetworkInformation.PingReply
  isExternal: false
  name: Address
  nameWithType: PingReply.Address
- uid: System.Net.NetworkInformation.PingReply.Buffer*
  parent: System.Net.NetworkInformation.PingReply
  isExternal: false
  name: Buffer
  nameWithType: PingReply.Buffer
- uid: System.Net.NetworkInformation.PingReply.Options*
  parent: System.Net.NetworkInformation.PingReply
  isExternal: false
  name: Options
  nameWithType: PingReply.Options
- uid: System.Net.NetworkInformation.PingReply.RoundtripTime*
  parent: System.Net.NetworkInformation.PingReply
  isExternal: false
  name: RoundtripTime
  nameWithType: PingReply.RoundtripTime
- uid: System.Net.NetworkInformation.PingReply.Status*
  parent: System.Net.NetworkInformation.PingReply
  isExternal: false
  name: Status
  nameWithType: PingReply.Status
