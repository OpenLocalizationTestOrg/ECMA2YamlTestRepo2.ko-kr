### YamlMime:ManagedReference
items:
- uid: System.Windows.Media.Effects.EmbossBitmapEffect
  id: EmbossBitmapEffect
  children:
  - System.Windows.Media.Effects.EmbossBitmapEffect.#ctor
  - System.Windows.Media.Effects.EmbossBitmapEffect.Clone
  - System.Windows.Media.Effects.EmbossBitmapEffect.CloneCurrentValue
  - System.Windows.Media.Effects.EmbossBitmapEffect.CreateInstanceCore
  - System.Windows.Media.Effects.EmbossBitmapEffect.CreateUnmanagedEffect
  - System.Windows.Media.Effects.EmbossBitmapEffect.LightAngle
  - System.Windows.Media.Effects.EmbossBitmapEffect.LightAngleProperty
  - System.Windows.Media.Effects.EmbossBitmapEffect.Relief
  - System.Windows.Media.Effects.EmbossBitmapEffect.ReliefProperty
  - System.Windows.Media.Effects.EmbossBitmapEffect.UpdateUnmanagedPropertyState(System.Runtime.InteropServices.SafeHandle)
  langs:
  - csharp
  name: EmbossBitmapEffect
  nameWithType: EmbossBitmapEffect
  fullName: System.Windows.Media.Effects.EmbossBitmapEffect
  type: Class
  summary: '**참고:이 API는 이제 사용 되지 않습니다.** 사용 되는 대체 항목은 <xref href=&quot;System.Windows.Media.Effects.Effect&quot;> </xref>합니다. 인공 광원에서 깊이 및 질감 효과 주기 위해 시각적 개체의 범프 매핑을 만듭니다.'
  remarks: "> [!NOTE] >  [!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]비트맵 효과 소프트웨어 렌더링 합니다. 효과 적용 하는 모든 개체도 소프트웨어에서 렌더링 됩니다. 성능이 저하 될 수 있습니다이 처럼 큰 시각적 개체에 애니메이션 비트맵 효과 적용 하지 안 합니다.       EmbossBitmapEffect은 SDK와 함께 제공 되는 여러 가지 효과 중 하나입니다. 기타 효과 포함:- <xref:System.Windows.Media.Effects.OuterGlowBitmapEffect>- <xref:System.Windows.Media.Effects.BlurBitmapEffect>- <xref:System.Windows.Media.Effects.BevelBitmapEffect>- <xref:System.Windows.Media.Effects.DropShadowBitmapEffect>볼록이 높이 거 나 채우기 색을 회색으로 변환 하 고 원래 채우기 색을 사용 하 여 가장자리 여 스탬프가 지정 된 표시 항목을 선택 합니다.</xref:System.Windows.Media.Effects.DropShadowBitmapEffect> </xref:System.Windows.Media.Effects.BevelBitmapEffect> </xref:System.Windows.Media.Effects.BlurBitmapEffect> </xref:System.Windows.Media.Effects.OuterGlowBitmapEffect> 다음 그림에서는 시각적 개체에 적용 된 EmbossBitmapEffect를 보여 줍니다 (이 경우에 적용 한 <xref:System.Windows.Controls.Image>).</xref:System.Windows.Controls.Image>       ![스크린 샷: 비교 이미지와 없는 볼록](~/add/media/effects-embosssimple.png &quot;스크린 샷: 비교 이미지와 없는 볼록&quot;) 볼록의 시각 효과 사용 하 여 수정할 수는 <xref:System.Windows.Media.Effects.EmbossBitmapEffect.Relief%2A>및 <xref:System.Windows.Media.Effects.EmbossBitmapEffect.LightAngle%2A>속성.</xref:System.Windows.Media.Effects.EmbossBitmapEffect.LightAngle%2A> </xref:System.Windows.Media.Effects.EmbossBitmapEffect.Relief%2A>"
  syntax:
    content: 'public sealed class EmbossBitmapEffect : System.Windows.Media.Effects.BitmapEffect'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  - System.Windows.Freezable
  - System.Windows.Media.Animation.Animatable
  - System.Windows.Media.Effects.BitmapEffect
  implements: []
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Freezable.CanFreeze
  - System.Windows.Freezable.Changed
  - System.Windows.Freezable.CloneCore(System.Windows.Freezable)
  - System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)
  - System.Windows.Freezable.CreateInstance
  - System.Windows.Freezable.Freeze
  - System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)
  - System.Windows.Freezable.GetAsFrozen
  - System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Freezable.GetCurrentValueAsFrozen
  - System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Freezable.IsFrozen
  - System.Windows.Freezable.OnChanged
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)
  - System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.Freezable.ReadPreamble
  - System.Windows.Freezable.WritePostscript
  - System.Windows.Freezable.WritePreamble
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)
  - System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)
  - System.Windows.Media.Animation.Animatable.HasAnimatedProperties
  - System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)
  - System.Windows.Media.Effects.BitmapEffect.CreateBitmapEffectOuter
  - System.Windows.Media.Effects.BitmapEffect.GetOutput(System.Windows.Media.Effects.BitmapEffectInput)
  - System.Windows.Media.Effects.BitmapEffect.InitializeBitmapEffect(System.Runtime.InteropServices.SafeHandle,System.Runtime.InteropServices.SafeHandle)
  - System.Windows.Media.Effects.BitmapEffect.SetValue(System.Runtime.InteropServices.SafeHandle,System.String,System.Object)
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Media.Effects.EmbossBitmapEffect.#ctor
  id: '#ctor'
  parent: System.Windows.Media.Effects.EmbossBitmapEffect
  langs:
  - csharp
  name: EmbossBitmapEffect()
  nameWithType: EmbossBitmapEffect.EmbossBitmapEffect()
  fullName: System.Windows.Media.Effects.EmbossBitmapEffect.EmbossBitmapEffect()
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: '**참고:이 API는 이제 사용 되지 않습니다.** 사용 되는 대체 항목은 <xref href=&quot;System.Windows.Media.Effects.Effect&quot;> </xref>합니다. 새 인스턴스를 초기화는 <xref href=&quot;System.Windows.Media.Effects.EmbossBitmapEffect&quot;> </xref> 클래스입니다.'
  syntax:
    content: public EmbossBitmapEffect ();
    parameters: []
  overload: System.Windows.Media.Effects.EmbossBitmapEffect.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.EmbossBitmapEffect.Clone
  id: Clone
  parent: System.Windows.Media.Effects.EmbossBitmapEffect
  langs:
  - csharp
  name: Clone()
  nameWithType: EmbossBitmapEffect.Clone()
  fullName: System.Windows.Media.Effects.EmbossBitmapEffect.Clone()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: '**Note: This API is now obsolete.** The non-obsolete alternative is <xref href="System.Windows.Media.Effects.Effect"></xref>. Creates a modifiable clone of this <xref href="System.Windows.Media.Effects.EmbossBitmapEffect"></xref>, making deep copies of this object''s values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.'
  remarks: "수정 가능한 복사본을 생성 하기 위해이 메서드는 고정 된 <xref:System.Windows.Freezable>개체 (또는 모든 <xref:System.Windows.Freezable>개체).</xref:System.Windows.Freezable> </xref:System.Windows.Freezable> 편의 위해이 메서드는 상속 된 버전을 숨깁니다.       자세한 내용은 <xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>.</xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName> 을 참조 하십시오."
  syntax:
    content: public System.Windows.Media.Effects.EmbossBitmapEffect Clone ();
    parameters: []
    return:
      type: System.Windows.Media.Effects.EmbossBitmapEffect
      description: "현재 개체의 수정 가능한 복제본입니다. 복제 된 개체의 <> </> *> 속성은 됩니다 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 경우에 원본의 <> </> *> 속성은<xref uid=&quot;langword_csharp_true.&quot; name=&quot;true.&quot; href=&quot;&quot;></xref>"
  overload: System.Windows.Media.Effects.EmbossBitmapEffect.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.EmbossBitmapEffect.CloneCurrentValue
  id: CloneCurrentValue
  parent: System.Windows.Media.Effects.EmbossBitmapEffect
  langs:
  - csharp
  name: CloneCurrentValue()
  nameWithType: EmbossBitmapEffect.CloneCurrentValue()
  fullName: System.Windows.Media.Effects.EmbossBitmapEffect.CloneCurrentValue()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: '**Note: This API is now obsolete.** The non-obsolete alternative is <xref href="System.Windows.Media.Effects.Effect"></xref>. Creates a modifiable clone of this <xref href="System.Windows.Media.Effects.EmbossBitmapEffect"></xref> object, making deep copies of this object''s current values. Resource references, data bindings, and animations are not copied, but their current values are.'
  remarks: "수정 가능한 복사본을 생성 하기 위해이 메서드는 고정 된 <xref:System.Windows.Freezable>개체 (또는 모든 <xref:System.Windows.Freezable>개체).</xref:System.Windows.Freezable> </xref:System.Windows.Freezable> 편의 위해이 메서드는 상속 된 버전을 숨깁니다.       자세한 내용은 <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>.</xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName> 을 참조 하십시오."
  syntax:
    content: public System.Windows.Media.Effects.EmbossBitmapEffect CloneCurrentValue ();
    parameters: []
    return:
      type: System.Windows.Media.Effects.EmbossBitmapEffect
      description: "현재 개체의 수정 가능한 복제본입니다. 복제 된 개체의 <> </> *> 속성은 됩니다 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 경우에 원본의 <> </> *> 속성은 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Media.Effects.EmbossBitmapEffect.CloneCurrentValue*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.EmbossBitmapEffect.CreateInstanceCore
  id: CreateInstanceCore
  parent: System.Windows.Media.Effects.EmbossBitmapEffect
  langs:
  - csharp
  name: CreateInstanceCore()
  nameWithType: EmbossBitmapEffect.CreateInstanceCore()
  fullName: System.Windows.Media.Effects.EmbossBitmapEffect.CreateInstanceCore()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  syntax:
    content: protected override System.Windows.Freezable CreateInstanceCore ();
    parameters: []
    return:
      type: System.Windows.Freezable
      description: "추가할 수 있습니다."
  overload: System.Windows.Media.Effects.EmbossBitmapEffect.CreateInstanceCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.EmbossBitmapEffect.CreateUnmanagedEffect
  id: CreateUnmanagedEffect
  parent: System.Windows.Media.Effects.EmbossBitmapEffect
  langs:
  - csharp
  name: CreateUnmanagedEffect()
  nameWithType: EmbossBitmapEffect.CreateUnmanagedEffect()
  fullName: System.Windows.Media.Effects.EmbossBitmapEffect.CreateUnmanagedEffect()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  syntax:
    content: protected override System.Runtime.InteropServices.SafeHandle CreateUnmanagedEffect ();
    parameters: []
    return:
      type: System.Runtime.InteropServices.SafeHandle
      description: "추가할 수 있습니다."
  overload: System.Windows.Media.Effects.EmbossBitmapEffect.CreateUnmanagedEffect*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.EmbossBitmapEffect.LightAngle
  id: LightAngle
  parent: System.Windows.Media.Effects.EmbossBitmapEffect
  langs:
  - csharp
  name: LightAngle
  nameWithType: EmbossBitmapEffect.LightAngle
  fullName: System.Windows.Media.Effects.EmbossBitmapEffect.LightAngle
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: '**참고:이 API는 이제 사용 되지 않습니다.** 사용 되는 대체 항목은 <xref href=&quot;System.Windows.Media.Effects.Effect&quot;> </xref>합니다. 인공 조명이 볼록한 개체에 캐스트 되는 방향을 가져오거나 설정 합니다.'
  remarks: "볼록한 개체에 조명이 캐스팅 방향 볼록한 시각적 개체를 숨기는 영향을 줍니다.       다음 다이어그램은이 속성의 지정 된 값에서 밝은 방향을 제공 보여줍니다: ![다이어그램: DropShadow 방향](~/add/media/effects-dropshadowdirection2.png &quot;다이어그램: DropShadow 방향&quot;) <a name=&quot;dependencyPropertyInfo_LightAngle&quot;> </a> # # 종속성 속성 정보 | | |   |-|-|   | 식별자 필드 | <xref:System.Windows.Media.Effects.EmbossBitmapEffect.LightAngleProperty>|   | 메타 데이터 속성이 `true`| None |</xref:System.Windows.Media.Effects.EmbossBitmapEffect.LightAngleProperty>      "
  syntax:
    content: public double LightAngle { get; set; }
    return:
      type: System.Double
      description: "인공 조명이 볼록한 개체에 캐스트 되는 방향입니다. 유효한 범위는 `0-360` (도)와 `0` 개체와 개체 주위를 시계 반대 방향으로 이동 하는 연속 값의 오른쪽을 지정 합니다. 기본값은 `45`입니다."
  overload: System.Windows.Media.Effects.EmbossBitmapEffect.LightAngle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.EmbossBitmapEffect.LightAngleProperty
  id: LightAngleProperty
  parent: System.Windows.Media.Effects.EmbossBitmapEffect
  langs:
  - csharp
  name: LightAngleProperty
  nameWithType: EmbossBitmapEffect.LightAngleProperty
  fullName: System.Windows.Media.Effects.EmbossBitmapEffect.LightAngleProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: '**참고:이 API는 이제 사용 되지 않습니다.** 사용 되는 대체 항목은 <xref href=&quot;System.Windows.Media.Effects.Effect&quot;> </xref>합니다. 식별 된 <xref:System.Windows.Media.Effects.EmbossBitmapEffect.LightAngle*>종속성 속성입니다.</xref:System.Windows.Media.Effects.EmbossBitmapEffect.LightAngle*>'
  syntax:
    content: public static readonly System.Windows.DependencyProperty LightAngleProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.EmbossBitmapEffect.Relief
  id: Relief
  parent: System.Windows.Media.Effects.EmbossBitmapEffect
  langs:
  - csharp
  name: Relief
  nameWithType: EmbossBitmapEffect.Relief
  fullName: System.Windows.Media.Effects.EmbossBitmapEffect.Relief
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: '**참고:이 API는 이제 사용 되지 않습니다.** 사용 되는 대체 항목은 <xref href=&quot;System.Windows.Media.Effects.Effect&quot;> </xref>합니다. 볼록의 릴리프 크기를 가져오거나 설정 합니다.'
  remarks: "다음 그림은이 속성의 효과 보여 줍니다: ![스크린 샷: 최소 및 최대 양각 비교](~/add/media/effects-embossrelief.png &quot;스크린 샷: 최소 및 최대 양각 비교&quot;) <a name=&quot;dependencyPropertyInfo_Relief&quot;> </a> # # 종속성 속성 정보 | | |   |-|-|   | 식별자 필드 | <xref:System.Windows.Media.Effects.EmbossBitmapEffect.ReliefProperty>|   | 메타 데이터 속성이 `true`| None |</xref:System.Windows.Media.Effects.EmbossBitmapEffect.ReliefProperty>      "
  syntax:
    content: public double Relief { get; set; }
    return:
      type: System.Double
      description: "볼록의 릴리프 크기를 지정 합니다. 값의 유효 범위는 `0-1` 와 `0` 최소 릴리프 및 `1` 최대 릴리프입니다. 기본값은 `0.44`입니다."
  overload: System.Windows.Media.Effects.EmbossBitmapEffect.Relief*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.EmbossBitmapEffect.ReliefProperty
  id: ReliefProperty
  parent: System.Windows.Media.Effects.EmbossBitmapEffect
  langs:
  - csharp
  name: ReliefProperty
  nameWithType: EmbossBitmapEffect.ReliefProperty
  fullName: System.Windows.Media.Effects.EmbossBitmapEffect.ReliefProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: '**참고:이 API는 이제 사용 되지 않습니다.** 사용 되는 대체 항목은 <xref href=&quot;System.Windows.Media.Effects.Effect&quot;> </xref>합니다. 식별 된 <xref:System.Windows.Media.Effects.EmbossBitmapEffect.Relief*>종속성 속성입니다.</xref:System.Windows.Media.Effects.EmbossBitmapEffect.Relief*>'
  syntax:
    content: public static readonly System.Windows.DependencyProperty ReliefProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.EmbossBitmapEffect.UpdateUnmanagedPropertyState(System.Runtime.InteropServices.SafeHandle)
  id: UpdateUnmanagedPropertyState(System.Runtime.InteropServices.SafeHandle)
  parent: System.Windows.Media.Effects.EmbossBitmapEffect
  langs:
  - csharp
  name: UpdateUnmanagedPropertyState(SafeHandle)
  nameWithType: EmbossBitmapEffect.UpdateUnmanagedPropertyState(SafeHandle)
  fullName: System.Windows.Media.Effects.EmbossBitmapEffect.UpdateUnmanagedPropertyState(SafeHandle)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  syntax:
    content: protected override void UpdateUnmanagedPropertyState (System.Runtime.InteropServices.SafeHandle unmanagedEffect);
    parameters:
    - id: unmanagedEffect
      type: System.Runtime.InteropServices.SafeHandle
      description: "추가할 수 있습니다."
  overload: System.Windows.Media.Effects.EmbossBitmapEffect.UpdateUnmanagedPropertyState*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Media.Effects.BitmapEffect
  isExternal: false
  name: System.Windows.Media.Effects.BitmapEffect
- uid: System.Windows.Media.Effects.EmbossBitmapEffect.#ctor
  parent: System.Windows.Media.Effects.EmbossBitmapEffect
  isExternal: false
  name: EmbossBitmapEffect()
  nameWithType: EmbossBitmapEffect.EmbossBitmapEffect()
  fullName: System.Windows.Media.Effects.EmbossBitmapEffect.EmbossBitmapEffect()
- uid: System.Windows.Media.Effects.EmbossBitmapEffect.Clone
  parent: System.Windows.Media.Effects.EmbossBitmapEffect
  isExternal: false
  name: Clone()
  nameWithType: EmbossBitmapEffect.Clone()
  fullName: System.Windows.Media.Effects.EmbossBitmapEffect.Clone()
- uid: System.Windows.Media.Effects.EmbossBitmapEffect
  parent: System.Windows.Media.Effects
  isExternal: false
  name: EmbossBitmapEffect
  nameWithType: EmbossBitmapEffect
  fullName: System.Windows.Media.Effects.EmbossBitmapEffect
- uid: System.Windows.Media.Effects.EmbossBitmapEffect.CloneCurrentValue
  parent: System.Windows.Media.Effects.EmbossBitmapEffect
  isExternal: false
  name: CloneCurrentValue()
  nameWithType: EmbossBitmapEffect.CloneCurrentValue()
  fullName: System.Windows.Media.Effects.EmbossBitmapEffect.CloneCurrentValue()
- uid: System.Windows.Media.Effects.EmbossBitmapEffect.CreateInstanceCore
  parent: System.Windows.Media.Effects.EmbossBitmapEffect
  isExternal: false
  name: CreateInstanceCore()
  nameWithType: EmbossBitmapEffect.CreateInstanceCore()
  fullName: System.Windows.Media.Effects.EmbossBitmapEffect.CreateInstanceCore()
- uid: System.Windows.Freezable
  parent: System.Windows
  isExternal: false
  name: Freezable
  nameWithType: Freezable
  fullName: System.Windows.Freezable
- uid: System.Windows.Media.Effects.EmbossBitmapEffect.CreateUnmanagedEffect
  parent: System.Windows.Media.Effects.EmbossBitmapEffect
  isExternal: false
  name: CreateUnmanagedEffect()
  nameWithType: EmbossBitmapEffect.CreateUnmanagedEffect()
  fullName: System.Windows.Media.Effects.EmbossBitmapEffect.CreateUnmanagedEffect()
- uid: System.Runtime.InteropServices.SafeHandle
  parent: System.Runtime.InteropServices
  isExternal: true
  name: SafeHandle
  nameWithType: SafeHandle
  fullName: System.Runtime.InteropServices.SafeHandle
- uid: System.Windows.Media.Effects.EmbossBitmapEffect.LightAngle
  parent: System.Windows.Media.Effects.EmbossBitmapEffect
  isExternal: false
  name: LightAngle
  nameWithType: EmbossBitmapEffect.LightAngle
  fullName: System.Windows.Media.Effects.EmbossBitmapEffect.LightAngle
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.Media.Effects.EmbossBitmapEffect.LightAngleProperty
  parent: System.Windows.Media.Effects.EmbossBitmapEffect
  isExternal: false
  name: LightAngleProperty
  nameWithType: EmbossBitmapEffect.LightAngleProperty
  fullName: System.Windows.Media.Effects.EmbossBitmapEffect.LightAngleProperty
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.Media.Effects.EmbossBitmapEffect.Relief
  parent: System.Windows.Media.Effects.EmbossBitmapEffect
  isExternal: false
  name: Relief
  nameWithType: EmbossBitmapEffect.Relief
  fullName: System.Windows.Media.Effects.EmbossBitmapEffect.Relief
- uid: System.Windows.Media.Effects.EmbossBitmapEffect.ReliefProperty
  parent: System.Windows.Media.Effects.EmbossBitmapEffect
  isExternal: false
  name: ReliefProperty
  nameWithType: EmbossBitmapEffect.ReliefProperty
  fullName: System.Windows.Media.Effects.EmbossBitmapEffect.ReliefProperty
- uid: System.Windows.Media.Effects.EmbossBitmapEffect.UpdateUnmanagedPropertyState(System.Runtime.InteropServices.SafeHandle)
  parent: System.Windows.Media.Effects.EmbossBitmapEffect
  isExternal: false
  name: UpdateUnmanagedPropertyState(SafeHandle)
  nameWithType: EmbossBitmapEffect.UpdateUnmanagedPropertyState(SafeHandle)
  fullName: System.Windows.Media.Effects.EmbossBitmapEffect.UpdateUnmanagedPropertyState(SafeHandle)
- uid: System.Windows.Media.Effects.EmbossBitmapEffect.#ctor*
  parent: System.Windows.Media.Effects.EmbossBitmapEffect
  isExternal: false
  name: EmbossBitmapEffect
  nameWithType: EmbossBitmapEffect.EmbossBitmapEffect
- uid: System.Windows.Media.Effects.EmbossBitmapEffect.Clone*
  parent: System.Windows.Media.Effects.EmbossBitmapEffect
  isExternal: false
  name: Clone
  nameWithType: EmbossBitmapEffect.Clone
- uid: System.Windows.Media.Effects.EmbossBitmapEffect.CloneCurrentValue*
  parent: System.Windows.Media.Effects.EmbossBitmapEffect
  isExternal: false
  name: CloneCurrentValue
  nameWithType: EmbossBitmapEffect.CloneCurrentValue
- uid: System.Windows.Media.Effects.EmbossBitmapEffect.CreateInstanceCore*
  parent: System.Windows.Media.Effects.EmbossBitmapEffect
  isExternal: false
  name: CreateInstanceCore
  nameWithType: EmbossBitmapEffect.CreateInstanceCore
- uid: System.Windows.Media.Effects.EmbossBitmapEffect.CreateUnmanagedEffect*
  parent: System.Windows.Media.Effects.EmbossBitmapEffect
  isExternal: false
  name: CreateUnmanagedEffect
  nameWithType: EmbossBitmapEffect.CreateUnmanagedEffect
- uid: System.Windows.Media.Effects.EmbossBitmapEffect.LightAngle*
  parent: System.Windows.Media.Effects.EmbossBitmapEffect
  isExternal: false
  name: LightAngle
  nameWithType: EmbossBitmapEffect.LightAngle
- uid: System.Windows.Media.Effects.EmbossBitmapEffect.Relief*
  parent: System.Windows.Media.Effects.EmbossBitmapEffect
  isExternal: false
  name: Relief
  nameWithType: EmbossBitmapEffect.Relief
- uid: System.Windows.Media.Effects.EmbossBitmapEffect.UpdateUnmanagedPropertyState*
  parent: System.Windows.Media.Effects.EmbossBitmapEffect
  isExternal: false
  name: UpdateUnmanagedPropertyState
  nameWithType: EmbossBitmapEffect.UpdateUnmanagedPropertyState
