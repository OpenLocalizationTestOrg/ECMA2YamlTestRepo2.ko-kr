### YamlMime:ManagedReference
items:
- uid: System.Data.ITableMappingCollection
  id: ITableMappingCollection
  children:
  - System.Data.ITableMappingCollection.Add(System.String,System.String)
  - System.Data.ITableMappingCollection.Contains(System.String)
  - System.Data.ITableMappingCollection.GetByDataSetTable(System.String)
  - System.Data.ITableMappingCollection.IndexOf(System.String)
  - System.Data.ITableMappingCollection.Item(System.String)
  - System.Data.ITableMappingCollection.RemoveAt(System.String)
  langs:
  - csharp
  name: ITableMappingCollection
  nameWithType: ITableMappingCollection
  fullName: System.Data.ITableMappingCollection
  type: Interface
  summary: "TableMapping 개체의 컬렉션을 포함 하 고 구현한는 <xref href=&quot;System.Data.Common.DataTableMappingCollection&quot;> </xref>,.NET Framework 데이터 공급자에 공통으로 사용 되는 합니다."
  remarks: "ITableMappingCollection 인터페이스 TableMapping 컬렉션 구현 상속 하는 클래스를 허용 합니다. 자세한 내용은 참조 [DataAdapter DataTable 및 DataColumn 매핑](~/add/includes/ajax-current-ext-md.md)합니다.       응용 프로그램을 직접 ITableMappingCollection 인터페이스의 인스턴스를 만들지 않는 있지만 ITableMappingCollection 상속 하는 클래스의 인스턴스를 만듭니다.       ITableMappingCollection 상속 된 클래스는 상속 된 멤버를 구현 하 고 일반적으로 공급자 특정 기능을 추가 하려면 추가 멤버를 정의 해야 합니다. ITableMappingCollection 인터페이스 구현의 하나를 정의 하는 예를 들어는 <xref:System.Data.ITableMappingCollection.RemoveAt%2A>메서드.</xref:System.Data.ITableMappingCollection.RemoveAt%2A> <xref:System.Data.Common.DataTableMappingCollection>클래스는이 메서드를 상속 하 고 <xref:System.Data.Common.DataTableMappingCollection.RemoveAt%2A>안내 하십시오.</xref:System.Data.Common.DataTableMappingCollection.RemoveAt%2A> 두 개의 추가 오버 로드를 정의</xref:System.Data.Common.DataTableMappingCollection> 차례로"
  example:
  - "The following example creates an instance of the derived class, <xref:System.Data.Common.DataTableMapping>, and adds it to a <xref:System.Data.Common.DataTableMappingCollection> collection. It then informs the user that the mapping was added to the collection.  \n  \n [!code-vb[Classic WebData DataTableMapping Example#1](~/add/codesnippet/visualbasic/t-system.data.itablemapp_1_1.vb)]\n [!code-cs[Classic WebData DataTableMapping Example#1](~/add/codesnippet/csharp/t-system.data.itablemapp_1_1.cs)]"
  syntax:
    content: 'public interface ITableMappingCollection : System.Collections.IList'
  implements:
  - System.Collections.IList
  platform:
  - net462
- uid: System.Data.ITableMappingCollection.Add(System.String,System.String)
  id: Add(System.String,System.String)
  parent: System.Data.ITableMappingCollection
  langs:
  - csharp
  name: Add(String,String)
  nameWithType: ITableMappingCollection.Add(String,String)
  fullName: System.Data.ITableMappingCollection.Add(String,String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "테이블 매핑을 컬렉션에 추가 합니다."
  syntax:
    content: public System.Data.ITableMapping Add (string sourceTableName, string dataSetTableName);
    parameters:
    - id: sourceTableName
      type: System.String
      description: "대/소문자 구분 원본 테이블의 이름입니다."
    - id: dataSetTableName
      type: System.String
      description: "이름에서 <xref href=&quot;System.Data.DataSet&quot;> </xref> 테이블입니다."
    return:
      type: System.Data.ITableMapping
      description: "새로 매핑된에 대 한 참조 <xref href=&quot;System.Data.ITableMapping&quot;> </xref> 개체입니다."
  overload: System.Data.ITableMappingCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Data.ITableMappingCollection.Contains(System.String)
  id: Contains(System.String)
  parent: System.Data.ITableMappingCollection
  langs:
  - csharp
  name: Contains(String)
  nameWithType: ITableMappingCollection.Contains(String)
  fullName: System.Data.ITableMappingCollection.Contains(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "테이블 매핑에 지정 된 원본 테이블 이름으로 컬렉션에 포함 되어 있는지 여부를 나타내는 값을 가져옵니다."
  syntax:
    content: public bool Contains (string sourceTableName);
    parameters:
    - id: sourceTableName
      type: System.String
      description: "대/소문자 구분 원본 테이블의 이름입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>지정 된 원본 테이블 이름으로 테이블 매핑에 있으면 고, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Data.ITableMappingCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Data.ITableMappingCollection.GetByDataSetTable(System.String)
  id: GetByDataSetTable(System.String)
  parent: System.Data.ITableMappingCollection
  langs:
  - csharp
  name: GetByDataSetTable(String)
  nameWithType: ITableMappingCollection.GetByDataSetTable(String)
  fullName: System.Data.ITableMappingCollection.GetByDataSetTable(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "지정 된 TableMapping 개체를 가져옵니다 <xref href=&quot;System.Data.DataSet&quot;> </xref> 테이블 이름입니다."
  syntax:
    content: public System.Data.ITableMapping GetByDataSetTable (string dataSetTableName);
    parameters:
    - id: dataSetTableName
      type: System.String
      description: "이름에서 <xref uid=&quot;langword_csharp_DataSet&quot; name=&quot;DataSet&quot; href=&quot;&quot;> </xref> 컬렉션 내에서 테이블입니다."
    return:
      type: System.Data.ITableMapping
      description: "지정 된 TableMapping 개체 <xref uid=&quot;langword_csharp_DataSet&quot; name=&quot;DataSet&quot; href=&quot;&quot;> </xref> 테이블 이름입니다."
  overload: System.Data.ITableMappingCollection.GetByDataSetTable*
  exceptions: []
  platform:
  - net462
- uid: System.Data.ITableMappingCollection.IndexOf(System.String)
  id: IndexOf(System.String)
  parent: System.Data.ITableMappingCollection
  langs:
  - csharp
  name: IndexOf(String)
  nameWithType: ITableMappingCollection.IndexOf(String)
  fullName: System.Data.ITableMappingCollection.IndexOf(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "위치를 가져옵니다는 <xref href=&quot;System.Data.ITableMapping&quot;> </xref> 컬렉션에서 개체입니다."
  syntax:
    content: public int IndexOf (string sourceTableName);
    parameters:
    - id: sourceTableName
      type: System.String
      description: "대/소문자 구분 원본 테이블의 이름입니다."
    return:
      type: System.Int32
      description: "0부터 시작 위치는 <xref href=&quot;System.Data.ITableMapping&quot;> </xref> 컬렉션에서 개체입니다."
  overload: System.Data.ITableMappingCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Data.ITableMappingCollection.Item(System.String)
  id: Item(System.String)
  parent: System.Data.ITableMappingCollection
  langs:
  - csharp
  name: Item(String)
  nameWithType: ITableMappingCollection.Item(String)
  fullName: System.Data.ITableMappingCollection.Item(String)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "인스턴스를 가져오거나 설정 합니다. <xref href=&quot;System.Data.ITableMapping&quot;> </xref> 지정 된 <xref:System.Data.ITableMapping.SourceTable*>이름.</xref:System.Data.ITableMapping.SourceTable*>"
  syntax:
    content: public object this[string index] { get; set; }
    parameters:
    - id: index
      type: System.String
      description: "The <xref uid=&quot;langword_csharp_SourceTable&quot; name=&quot;SourceTable&quot; href=&quot;&quot;></xref> name of the <xref href=&quot;System.Data.ITableMapping&quot;></xref>."
    return:
      type: System.Object
      description: "인스턴스 <xref href=&quot;System.Data.ITableMapping&quot;> </xref> 지정 된 <xref uid=&quot;langword_csharp_SourceTable&quot; name=&quot;SourceTable&quot; href=&quot;&quot;> </xref> 이름입니다."
  overload: System.Data.ITableMappingCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Data.ITableMappingCollection.RemoveAt(System.String)
  id: RemoveAt(System.String)
  parent: System.Data.ITableMappingCollection
  langs:
  - csharp
  name: RemoveAt(String)
  nameWithType: ITableMappingCollection.RemoveAt(String)
  fullName: System.Data.ITableMappingCollection.RemoveAt(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "제거는 <xref href=&quot;System.Data.ITableMapping&quot;> </xref> 개체를 지정 된 <xref:System.Data.ITableMapping.SourceTable*>컬렉션에서 이름이.</xref:System.Data.ITableMapping.SourceTable*>"
  syntax:
    content: public void RemoveAt (string sourceTableName);
    parameters:
    - id: sourceTableName
      type: System.String
      description: "대/소문자 구분 이름을 <xref uid=&quot;langword_csharp_SourceTable&quot; name=&quot;SourceTable&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Data.ITableMappingCollection.RemoveAt*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.ITableMappingCollection.Add(System.String,System.String)
  parent: System.Data.ITableMappingCollection
  isExternal: false
  name: Add(String,String)
  nameWithType: ITableMappingCollection.Add(String,String)
  fullName: System.Data.ITableMappingCollection.Add(String,String)
- uid: System.Data.ITableMapping
  parent: System.Data
  isExternal: false
  name: ITableMapping
  nameWithType: ITableMapping
  fullName: System.Data.ITableMapping
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.ITableMappingCollection.Contains(System.String)
  parent: System.Data.ITableMappingCollection
  isExternal: false
  name: Contains(String)
  nameWithType: ITableMappingCollection.Contains(String)
  fullName: System.Data.ITableMappingCollection.Contains(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.ITableMappingCollection.GetByDataSetTable(System.String)
  parent: System.Data.ITableMappingCollection
  isExternal: false
  name: GetByDataSetTable(String)
  nameWithType: ITableMappingCollection.GetByDataSetTable(String)
  fullName: System.Data.ITableMappingCollection.GetByDataSetTable(String)
- uid: System.Data.ITableMappingCollection.IndexOf(System.String)
  parent: System.Data.ITableMappingCollection
  isExternal: false
  name: IndexOf(String)
  nameWithType: ITableMappingCollection.IndexOf(String)
  fullName: System.Data.ITableMappingCollection.IndexOf(String)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.ITableMappingCollection.Item(System.String)
  parent: System.Data.ITableMappingCollection
  isExternal: false
  name: Item(String)
  nameWithType: ITableMappingCollection.Item(String)
  fullName: System.Data.ITableMappingCollection.Item(String)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.ITableMappingCollection.RemoveAt(System.String)
  parent: System.Data.ITableMappingCollection
  isExternal: false
  name: RemoveAt(String)
  nameWithType: ITableMappingCollection.RemoveAt(String)
  fullName: System.Data.ITableMappingCollection.RemoveAt(String)
- uid: System.Data.ITableMappingCollection.Add*
  parent: System.Data.ITableMappingCollection
  isExternal: false
  name: Add
  nameWithType: ITableMappingCollection.Add
- uid: System.Data.ITableMappingCollection.Contains*
  parent: System.Data.ITableMappingCollection
  isExternal: false
  name: Contains
  nameWithType: ITableMappingCollection.Contains
- uid: System.Data.ITableMappingCollection.GetByDataSetTable*
  parent: System.Data.ITableMappingCollection
  isExternal: false
  name: GetByDataSetTable
  nameWithType: ITableMappingCollection.GetByDataSetTable
- uid: System.Data.ITableMappingCollection.IndexOf*
  parent: System.Data.ITableMappingCollection
  isExternal: false
  name: IndexOf
  nameWithType: ITableMappingCollection.IndexOf
- uid: System.Data.ITableMappingCollection.Item*
  parent: System.Data.ITableMappingCollection
  isExternal: false
  name: Item
  nameWithType: ITableMappingCollection.Item
- uid: System.Data.ITableMappingCollection.RemoveAt*
  parent: System.Data.ITableMappingCollection
  isExternal: false
  name: RemoveAt
  nameWithType: ITableMappingCollection.RemoveAt
