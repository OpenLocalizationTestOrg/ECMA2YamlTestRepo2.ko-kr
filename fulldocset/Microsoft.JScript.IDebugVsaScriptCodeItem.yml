### YamlMime:ManagedReference
items:
- uid: Microsoft.JScript.IDebugVsaScriptCodeItem
  id: IDebugVsaScriptCodeItem
  children:
  - Microsoft.JScript.IDebugVsaScriptCodeItem.Evaluate
  - Microsoft.JScript.IDebugVsaScriptCodeItem.ParseNamedBreakPoint(System.String,System.String@,System.Int32@,System.String@,System.String@,System.UInt64@)
  langs:
  - csharp
  name: IDebugVsaScriptCodeItem
  nameWithType: IDebugVsaScriptCodeItem
  fullName: Microsoft.JScript.IDebugVsaScriptCodeItem
  type: Interface
  summary: "식을 계산 하 고 문자열 구문 분석 하는 메서드를 정의 합니다. 이 인터페이스는 일반적으로 코드 블록을 나타내는 개체에서 구현 하 고 디버거에 의해 호출 됩니다. 이 인터페이스는 IActiveScript 호스트에 필요한 추가 기능을 제공 합니다."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      [System.Runtime.InteropServices.Guid("6DFE759A-CB8B-4ca0-A973-1D04E0BF0B53")]

      public interface IDebugVsaScriptCodeItem
  implements: []
  platform:
  - net462
- uid: Microsoft.JScript.IDebugVsaScriptCodeItem.Evaluate
  id: Evaluate
  parent: Microsoft.JScript.IDebugVsaScriptCodeItem
  langs:
  - csharp
  name: Evaluate()
  nameWithType: IDebugVsaScriptCodeItem.Evaluate()
  fullName: Microsoft.JScript.IDebugVsaScriptCodeItem.Evaluate()
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "클래스에서 구현 된 경우 블록, 식 또는 문 코드 항목이 나타내는 평가 하 고 값을 반환 합니다. 일반적으로 호출 (예: 조사식 창)에서 식을 계산 해야 하는 디버거에서 합니다. 식의 값은 식의 결과입니다. 블록 및 문의 결과 식은 계산 블록 또는 문에 의해 마지막 식이입니다."
  remarks: "Evaluate 메서드는 기능적으로 동일는 <xref:Microsoft.JScript.IVsaScriptCodeItem.Execute%2A>메서드.</xref:Microsoft.JScript.IVsaScriptCodeItem.Execute%2A> 마샬링 특성에만 다릅니다. 인터페이스의이 버전으로 반환 값을 가져올 수는 관리 되지 않는 디버거를 사용 하면 한 `IUnknown` 포인터 대신 `VARIANT`합니다."
  syntax:
    content: public object Evaluate ();
    parameters: []
    return:
      type: System.Object
      description: "문, 식 또는 블록의 평가 나타내는 값을 반환 합니다."
  overload: Microsoft.JScript.IDebugVsaScriptCodeItem.Evaluate*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.IDebugVsaScriptCodeItem.ParseNamedBreakPoint(System.String,System.String@,System.Int32@,System.String@,System.String@,System.UInt64@)
  id: ParseNamedBreakPoint(System.String,System.String@,System.Int32@,System.String@,System.String@,System.UInt64@)
  parent: Microsoft.JScript.IDebugVsaScriptCodeItem
  langs:
  - csharp
  name: ParseNamedBreakPoint(String,String,Int32,String,String,UInt64)
  nameWithType: IDebugVsaScriptCodeItem.ParseNamedBreakPoint(String,String,Int32,String,String,UInt64)
  fullName: Microsoft.JScript.IDebugVsaScriptCodeItem.ParseNamedBreakPoint(String,String,Int32,String,String,UInt64)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: '클래스에서 구현 하는 경우 문자열을 구문 분석 하 고 구문 분석 된 정보를 반환 합니다. 이 메서드를 나타내는 중단점에 대 한 정보를 구문 분석 하는 디버거는 일반적으로 <xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;> </xref>합니다. 디버거는 중단점에 폼에서 사용자가 입력 한 있을 수 *functionname-인수-ILoffset*합니다. 명명 된 중단점 문자열 복잡 한 형식에 예를 들어 있을 수 `F.B(C.D[], int, arg : double ) : C.Abc + 123.` 매개 변수 목록은 선택적 요소는 IL 오프셋입니다.'
  syntax:
    content: public bool ParseNamedBreakPoint (string input, out string functionName, out int nargs, out string arguments, out string returnType, out ulong offset);
    parameters:
    - id: input
      type: System.String
      description: "함수, 선택적 인수 목록 및 선택적 IL 오프셋을 제공 하는 잘 구성 된 명명 된 중단점 문자열입니다."
    - id: functionName
      type: System.String
      description: "Out 매개 변수는 함수의 이름을 반환 경우 구문 분석 입력된 문자열 토큰이 나 빈 문자열 입력된 문자열 잘 구성 되지 않았습니다."
    - id: nargs
      type: System.Int32
      description: "Out 매개 변수는 선택적 인수 목록에서 인수 개수를 반환합니다. 인수 목록이 없습니다 문자열이 올바른 형식이 아니면&0;을 반환 합니다."
    - id: arguments
      type: System.String
      description: "Out 매개 변수 반환에서 모든 인수의 형식 이름 공백으로 구분 된 목록이 인수 목록 또는 빈 문자열에 인수 목록이 없거나 입력된 문자열 형식이 잘못 되었습니다."
    - id: returnType
      type: System.String
      description: "Out 매개 변수는 입력에 명명 된 함수의 반환 형식을 포함 하는 문자열 또는 반환 형식이 없거나 경우 빈 문자열 이거나 입력된 문자열을 반환 형식이 잘못 되었습니다."
    - id: offset
      type: System.UInt64
      description: "부호 없는 정수 (long) IL 오프셋 없이 했습니다 또는 문자열 형식이 잘못 된 경우&0; 또는 입력된 문자열에서 IL 오프셋을 제공 합니다."
    return:
      type: System.Boolean
      description: "반환 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> 명명 된 중단점의 구문 분석 되 면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 그렇지 않은 경우."
  overload: Microsoft.JScript.IDebugVsaScriptCodeItem.ParseNamedBreakPoint*
  exceptions: []
  platform:
  - net462
references:
- uid: Microsoft.JScript.IDebugVsaScriptCodeItem.Evaluate
  parent: Microsoft.JScript.IDebugVsaScriptCodeItem
  isExternal: false
  name: Evaluate()
  nameWithType: IDebugVsaScriptCodeItem.Evaluate()
  fullName: Microsoft.JScript.IDebugVsaScriptCodeItem.Evaluate()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.JScript.IDebugVsaScriptCodeItem.ParseNamedBreakPoint(System.String,System.String@,System.Int32@,System.String@,System.String@,System.UInt64@)
  parent: Microsoft.JScript.IDebugVsaScriptCodeItem
  isExternal: false
  name: ParseNamedBreakPoint(String,String,Int32,String,String,UInt64)
  nameWithType: IDebugVsaScriptCodeItem.ParseNamedBreakPoint(String,String,Int32,String,String,UInt64)
  fullName: Microsoft.JScript.IDebugVsaScriptCodeItem.ParseNamedBreakPoint(String,String,Int32,String,String,UInt64)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.UInt64
  parent: System
  isExternal: true
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: Microsoft.JScript.IDebugVsaScriptCodeItem.Evaluate*
  parent: Microsoft.JScript.IDebugVsaScriptCodeItem
  isExternal: false
  name: Evaluate
  nameWithType: IDebugVsaScriptCodeItem.Evaluate
- uid: Microsoft.JScript.IDebugVsaScriptCodeItem.ParseNamedBreakPoint*
  parent: Microsoft.JScript.IDebugVsaScriptCodeItem
  isExternal: false
  name: ParseNamedBreakPoint
  nameWithType: IDebugVsaScriptCodeItem.ParseNamedBreakPoint
