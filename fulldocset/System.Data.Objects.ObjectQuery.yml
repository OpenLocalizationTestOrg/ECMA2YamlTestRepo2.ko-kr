### YamlMime:ManagedReference
items:
- uid: System.Data.Objects.ObjectQuery
  id: ObjectQuery
  children:
  - System.Data.Objects.ObjectQuery.CommandText
  - System.Data.Objects.ObjectQuery.Context
  - System.Data.Objects.ObjectQuery.EnablePlanCaching
  - System.Data.Objects.ObjectQuery.Execute(System.Data.Objects.MergeOption)
  - System.Data.Objects.ObjectQuery.GetResultType
  - System.Data.Objects.ObjectQuery.MergeOption
  - System.Data.Objects.ObjectQuery.Parameters
  - System.Data.Objects.ObjectQuery.System#Collections#IEnumerable#GetEnumerator
  - System.Data.Objects.ObjectQuery.System#ComponentModel#IListSource#ContainsListCollection
  - System.Data.Objects.ObjectQuery.System#ComponentModel#IListSource#GetList
  - System.Data.Objects.ObjectQuery.System#Linq#IQueryable#ElementType
  - System.Data.Objects.ObjectQuery.System#Linq#IQueryable#Expression
  - System.Data.Objects.ObjectQuery.System#Linq#IQueryable#Provider
  - System.Data.Objects.ObjectQuery.ToTraceString
  langs:
  - csharp
  name: ObjectQuery
  nameWithType: ObjectQuery
  fullName: System.Data.Objects.ObjectQuery
  type: Class
  summary: "두 LINQ to Entities 사용 하 여 개념적 모델에 대 한 쿼리의 일반 기능을 구현 하 고 &lt;xref:System.Data.Objects.ObjectQuery%601&gt;합니다."
  remarks: "ObjectQuery는 개념적 모델에 대 한 쿼리의 기본 클래스입니다. LINQ to Entities 쿼리 <xref:System.Data.Objects.ObjectQuery%601>.</xref:System.Data.Objects.ObjectQuery%601> 를 사용 하 여 실행 되는 쿼리와 동일한 기능을 갖도록 하는 데 ObjectQuery 제공 사용 해야 <xref:System.Data.Objects.ObjectQuery%601>개념적 모델을 쿼리 하는 지정 된 형식을 사용 합니다.</xref:System.Data.Objects.ObjectQuery%601> 자세한 내용은 참조 [개체 쿼리](http://msdn.microsoft.com/en-us/0768033c-876f-471d-85d5-264884349276)합니다."
  syntax:
    content: 'public abstract class ObjectQuery : System.Collections.IEnumerable, System.ComponentModel.IListSource, System.Linq.IOrderedQueryable'
  inheritance:
  - System.Object
  implements:
  - System.Collections.IEnumerable
  - System.ComponentModel.IListSource
  - System.Linq.IOrderedQueryable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.Objects.ObjectQuery.CommandText
  id: CommandText
  parent: System.Data.Objects.ObjectQuery
  langs:
  - csharp
  name: CommandText
  nameWithType: ObjectQuery.CommandText
  fullName: System.Data.Objects.ObjectQuery.CommandText
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "쿼리에 대 한 명령 텍스트를 반환합니다."
  syntax:
    content: public string CommandText { get; }
    return:
      type: System.String
      description: "A <xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;></xref> value."
  overload: System.Data.Objects.ObjectQuery.CommandText*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.ObjectQuery.Context
  id: Context
  parent: System.Data.Objects.ObjectQuery
  langs:
  - csharp
  name: Context
  nameWithType: ObjectQuery.Context
  fullName: System.Data.Objects.ObjectQuery.Context
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "이 개체 쿼리와 관련 된 개체 컨텍스트를 가져옵니다."
  remarks: "쿼리에 대 한 컨텍스트는 연결, 캐시 및 메타 데이터를 포함합니다. 자세한 내용은 참조 [개체 서비스 개요 (Entity Framework)](http://msdn.microsoft.com/en-us/43014cf9-c9cb-4538-bfbb-197820b60038)합니다.       연결 속성은 변경할 수 및는 쿼리를 실행 하기 전에 설정 해야 합니다. 자세한 내용은 참조 [개체 서비스 (Entity Framework)의 연결 관리](http://msdn.microsoft.com/en-us/a1df87ef-6441-417d-b264-bb58360e5d67)합니다."
  example:
  - "The example in this topic is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/en-us/f16cd988-673f-4376-b034-129ca93c7832). The example gets the <xref:System.Data.Objects.ObjectContext> object associated with this <xref:System.Data.Objects.ObjectQuery%601> object.  \n  \n [!code-vb[DP ObjectServices Concepts#ObjectQuery_Context](~/add/codesnippet/visualbasic/objectservicesconceptsvb/Source.vb#objectquery_context)]\n [!code-cs[DP ObjectServices Concepts#ObjectQuery_Context](~/add/codesnippet/csharp/objectservicesconceptscs/Source.cs#objectquery_context)]"
  syntax:
    content: public System.Data.Objects.ObjectContext Context { get; }
    return:
      type: System.Data.Objects.ObjectContext
      description: "<xref href=&quot;System.Data.Objects.ObjectContext&quot;> </xref> 이 연관 &lt;xref:System.Data.Objects.ObjectQuery%601&gt; 인스턴스."
  overload: System.Data.Objects.ObjectQuery.Context*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.ObjectQuery.EnablePlanCaching
  id: EnablePlanCaching
  parent: System.Data.Objects.ObjectQuery
  langs:
  - csharp
  name: EnablePlanCaching
  nameWithType: ObjectQuery.EnablePlanCaching
  fullName: System.Data.Objects.ObjectQuery.EnablePlanCaching
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "쿼리 계획을 캐시 해야 하는지 여부를 나타내는 값을 가져오거나 설정 합니다."
  remarks: "자세한 내용은 참조 [쿼리 계획 캐싱](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public bool EnablePlanCaching { get; set; }
    return:
      type: System.Boolean
      description: "쿼리 계획을 캐시 해야 하는지 여부를 나타내는 값입니다."
  overload: System.Data.Objects.ObjectQuery.EnablePlanCaching*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.ObjectQuery.Execute(System.Data.Objects.MergeOption)
  id: Execute(System.Data.Objects.MergeOption)
  parent: System.Data.Objects.ObjectQuery
  langs:
  - csharp
  name: Execute(MergeOption)
  nameWithType: ObjectQuery.Execute(MergeOption)
  fullName: System.Data.Objects.ObjectQuery.Execute(MergeOption)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "지정 된 병합 옵션을 사용 하 여 형식화 되지 않은 개체 쿼리를 실행합니다."
  remarks: "개체 쿼리에 대 한 기본 병합 옵션은 <xref:System.Data.Objects.MergeOption>.</xref:System.Data.Objects.MergeOption> 자세한 내용은 참조 [Id 확인, 상태 관리 및 변경 내용 추적](http://msdn.microsoft.com/en-us/3bd49311-0e72-4ea4-8355-38fe57036ba0)합니다.       호출 된 <xref:System.Data.Objects.ObjectQuery%601.Execute%2A>메서드를 <xref:System.Data.Objects.ObjectQuery%601>형식화 된 개체 쿼리에 대 한.</xref:System.Data.Objects.ObjectQuery%601> </xref:System.Data.Objects.ObjectQuery%601.Execute%2A>"
  syntax:
    content: public System.Data.Objects.ObjectResult Execute (System.Data.Objects.MergeOption mergeOption);
    parameters:
    - id: mergeOption
      type: System.Data.Objects.MergeOption
      description: "<xref href=&quot;System.Data.Objects.MergeOption&quot;> </xref> 쿼리를 실행할 때 사용 하도록 합니다. 기본값은 <xref href=&quot;System.Data.Objects.MergeOption&quot;> </xref>합니다."
    return:
      type: System.Data.Objects.ObjectResult
      description: "&lt;xref:System.Data.Objects.ObjectResult%601&gt; 쿼리에서 반환 된 엔터티 개체의 컬렉션을 포함 합니다."
  overload: System.Data.Objects.ObjectQuery.Execute*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.ObjectQuery.GetResultType
  id: GetResultType
  parent: System.Data.Objects.ObjectQuery
  langs:
  - csharp
  name: GetResultType()
  nameWithType: ObjectQuery.GetResultType()
  fullName: System.Data.Objects.ObjectQuery.GetResultType()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "쿼리의 결과 형식에 대 한 정보를 반환합니다."
  remarks: ''
  example:
  - "This example is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/en-us/f16cd988-673f-4376-b034-129ca93c7832). The example creates an <xref:System.Data.Objects.ObjectQuery%601> of type <xref:System.Data.Common.DbDataRecord> and uses GetResultType to determine whether the type returned represents a row.  \n  \n [!code-vb[DP ObjectServices Concepts#GetResultType](~/add/codesnippet/visualbasic/objectservicesconceptsvb/Source.vb#getresulttype)]\n [!code-cs[DP ObjectServices Concepts#GetResultType](~/add/codesnippet/csharp/objectservicesconceptscs/Source.cs#getresulttype)]"
  syntax:
    content: public System.Data.Metadata.Edm.TypeUsage GetResultType ();
    parameters: []
    return:
      type: System.Data.Metadata.Edm.TypeUsage
      description: "A <xref href=&quot;System.Data.Metadata.Edm.TypeUsage&quot;> </xref> 쿼리의 결과 형식에 대 한 정보를 포함 하는 값입니다."
  overload: System.Data.Objects.ObjectQuery.GetResultType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.ObjectQuery.MergeOption
  id: MergeOption
  parent: System.Data.Objects.ObjectQuery
  langs:
  - csharp
  name: MergeOption
  nameWithType: ObjectQuery.MergeOption
  fullName: System.Data.Objects.ObjectQuery.MergeOption
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "쿼리에서 반환 된 개체를 개체 컨텍스트에 추가 하는 방법을 가져오거나 설정 합니다."
  remarks: "<xref:System.Data.Objects.MergeOption>기본값은 <xref:System.Data.Objects.MergeOption>.</xref:System.Data.Objects.MergeOption> 지정는</xref:System.Data.Objects.MergeOption> 없는 경우 자세한 내용은 참조 [Id 확인, 상태 관리 및 변경 내용 추적](http://msdn.microsoft.com/en-us/3bd49311-0e72-4ea4-8355-38fe57036ba0)합니다."
  syntax:
    content: public System.Data.Objects.MergeOption MergeOption { get; set; }
    return:
      type: System.Data.Objects.MergeOption
      description: "쿼리 <xref href=&quot;System.Data.Objects.MergeOption&quot;> </xref>합니다."
  overload: System.Data.Objects.ObjectQuery.MergeOption*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.ObjectQuery.Parameters
  id: Parameters
  parent: System.Data.Objects.ObjectQuery
  langs:
  - csharp
  name: Parameters
  nameWithType: ObjectQuery.Parameters
  fullName: System.Data.Objects.ObjectQuery.Parameters
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "이 개체 쿼리에 대 한 매개 변수 컬렉션을 가져옵니다."
  remarks: "사용 하 여 반환 된 <xref:System.Data.Objects.ObjectParameterCollection>쿼리에 전달 되는 매개 변수를 지정 합니다.</xref:System.Data.Objects.ObjectParameterCollection> 자세한 내용은 참조 [쿼리 작성기 메서드가](http://msdn.microsoft.com/en-us/05685434-05e6-41c2-8d5e-8933b88a40b0)합니다."
  example:
  - "This example is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/en-us/f16cd988-673f-4376-b034-129ca93c7832). The example adds new parameters to the collection and then gets the parameter collection for this <xref:System.Data.Objects.ObjectQuery%601>. Then it iterates through the <xref:System.Data.Objects.ObjectParameterCollection> and displays the name, type, and value of each parameter in the collection.  \n  \n [!code-vb[DP ObjectServices Concepts#ObjectQuery_Parameters](~/add/codesnippet/visualbasic/objectservicesconceptsvb/Source.vb#objectquery_parameters)]\n [!code-cs[DP ObjectServices Concepts#ObjectQuery_Parameters](~/add/codesnippet/csharp/objectservicesconceptscs/Source.cs#objectquery_parameters)]"
  syntax:
    content: public System.Data.Objects.ObjectParameterCollection Parameters { get; }
    return:
      type: System.Data.Objects.ObjectParameterCollection
      description: "이 매개 변수 컬렉션 &lt;xref:System.Data.Objects.ObjectQuery%601&gt;합니다."
  overload: System.Data.Objects.ObjectQuery.Parameters*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.ObjectQuery.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Data.Objects.ObjectQuery
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: ObjectQuery.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Data.Objects.ObjectQuery.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "컬렉션을 반복 하는 열거자를 반환 합니다."
  remarks: "지정 된 병합 옵션을 사용 쿼리를 실행 IEnumerable.GetEnumerator 호출는 <xref:System.Data.Objects.ObjectQuery.MergeOption%2A>속성.</xref:System.Data.Objects.ObjectQuery.MergeOption%2A>       `foreach` C# 언어의 (`For Each` Visual basic에서)은 열거자의 복잡성을 숨깁니다. 따라서 사용 하 여 `foreach` 열거자를 직접 조작 하는 대신이 좋습니다.       열거자는 컬렉션의에서 데이터를 읽는 데 사용할 수 있지만 기본 컬렉션을 수정 하는 사용할 수 없습니다."
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "<xref:System.Collections.IEnumerator>컬렉션을 반복에 사용할 수 있는.</xref:System.Collections.IEnumerator>"
  overload: System.Data.Objects.ObjectQuery.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.ObjectQuery.System#ComponentModel#IListSource#ContainsListCollection
  id: System#ComponentModel#IListSource#ContainsListCollection
  isEii: true
  parent: System.Data.Objects.ObjectQuery
  langs:
  - csharp
  name: System.ComponentModel.IListSource.ContainsListCollection
  nameWithType: ObjectQuery.System.ComponentModel.IListSource.ContainsListCollection
  fullName: System.Data.Objects.ObjectQuery.System.ComponentModel.IListSource.ContainsListCollection
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "컬렉션 개체의 쿼리에 의해 반환 되는 컬렉션에 포함 되는지 여부를 나타내는 값을 가져옵니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Data.Objects.ObjectQuery%601>인스턴스로 캐스팅 되는 <xref:System.ComponentModel.IListSource>인터페이스.</xref:System.ComponentModel.IListSource> </xref:System.Data.Objects.ObjectQuery%601>       이 속성은 항상 반환 `false` 쿼리에 의해 반환 되는 컬렉션 개체와 컬렉션이 아닌를 포함 하기 때문에 있습니다."
  syntax:
    content: bool System.ComponentModel.IListSource.ContainsListCollection { get; }
    return:
      type: System.Boolean
      description: "부울 값입니다."
  overload: System.Data.Objects.ObjectQuery.System#ComponentModel#IListSource#ContainsListCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.ObjectQuery.System#ComponentModel#IListSource#GetList
  id: System#ComponentModel#IListSource#GetList
  isEii: true
  parent: System.Data.Objects.ObjectQuery
  langs:
  - csharp
  name: System.ComponentModel.IListSource.GetList()
  nameWithType: ObjectQuery.System.ComponentModel.IListSource.GetList()
  fullName: System.Data.Objects.ObjectQuery.System.ComponentModel.IListSource.GetList()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "컬렉션으로 반환 된 <xref:System.Collections.IList>데이터 바인딩에 사용 됩니다.</xref:System.Collections.IList>"
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Data.Objects.ObjectQuery%601>인스턴스로 캐스팅 되는 <xref:System.ComponentModel.IListSource>인터페이스.</xref:System.ComponentModel.IListSource> </xref:System.Data.Objects.ObjectQuery%601>       이 메서드는 쿼리의 결과에 대 한 데이터 바인딩을 활성화합니다. 컬렉션에 바인딩된 컨트롤에 의해 호출 됩니다. 자세한 내용은 참조 [컨트롤에 개체 바인딩](http://msdn.microsoft.com/en-us/2fd34855-929b-4303-a91e-4bb69d958f2b)합니다."
  syntax:
    content: System.Collections.IList IListSource.GetList ();
    parameters: []
    return:
      type: System.Collections.IList
      description: "<xref:System.Collections.IList>엔터티 개체의.</xref:System.Collections.IList>"
  overload: System.Data.Objects.ObjectQuery.System#ComponentModel#IListSource#GetList*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.ObjectQuery.System#Linq#IQueryable#ElementType
  id: System#Linq#IQueryable#ElementType
  isEii: true
  parent: System.Data.Objects.ObjectQuery
  langs:
  - csharp
  name: System.Linq.IQueryable.ElementType
  nameWithType: ObjectQuery.System.Linq.IQueryable.ElementType
  fullName: System.Data.Objects.ObjectQuery.System.Linq.IQueryable.ElementType
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "이 쿼리 인스턴스에 대 한 결과 요소 형식을 가져옵니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Data.Objects.ObjectQuery%601>인스턴스로 캐스팅 되는 <xref:System.ComponentModel.IListSource>인터페이스.</xref:System.ComponentModel.IListSource> </xref:System.Data.Objects.ObjectQuery%601>"
  syntax:
    content: Type System.Linq.IQueryable.ElementType { get; }
    return:
      type: System.Type
      description: "A <xref:System.Type>이 쿼리 인스턴스에 대 한 결과 요소 형식을 즉.</xref:System.Type>"
  overload: System.Data.Objects.ObjectQuery.System#Linq#IQueryable#ElementType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.ObjectQuery.System#Linq#IQueryable#Expression
  id: System#Linq#IQueryable#Expression
  isEii: true
  parent: System.Data.Objects.ObjectQuery
  langs:
  - csharp
  name: System.Linq.IQueryable.Expression
  nameWithType: ObjectQuery.System.Linq.IQueryable.Expression
  fullName: System.Data.Objects.ObjectQuery.System.Linq.IQueryable.Expression
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "이 쿼리를 설명 하는 식을 가져옵니다."
  remarks: "LINQ 작성기 패턴을 사용 하 여 작성 하는 쿼리에 대 한 전체 LINQ 식 트리가; 반환 그렇지 않으면이 쿼리를 래핑하는 상수 식이 반환 합니다. 참고 기본 식은 캐시 되지 않습니다. 따라서 프레임 워크를 LINQ 쿼리와 Entity SQL 쿼리를 구별할 수 있습니다.       이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Data.Objects.ObjectQuery%601>인스턴스로 캐스팅 되는 <xref:System.ComponentModel.IListSource>인터페이스.</xref:System.ComponentModel.IListSource> </xref:System.Data.Objects.ObjectQuery%601>"
  syntax:
    content: System.Linq.Expressions.Expression System.Linq.IQueryable.Expression { get; }
    return:
      type: System.Linq.Expressions.Expression
      description: "LINQ <xref:System.Linq.Expressions.Expression>이 쿼리를 설명 하는.</xref:System.Linq.Expressions.Expression>"
  overload: System.Data.Objects.ObjectQuery.System#Linq#IQueryable#Expression*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.ObjectQuery.System#Linq#IQueryable#Provider
  id: System#Linq#IQueryable#Provider
  isEii: true
  parent: System.Data.Objects.ObjectQuery
  langs:
  - csharp
  name: System.Linq.IQueryable.Provider
  nameWithType: ObjectQuery.System.Linq.IQueryable.Provider
  fullName: System.Data.Objects.ObjectQuery.System.Linq.IQueryable.Provider
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "LINQ 가져옵니다 <xref:System.Linq.IQueryProvider>이 쿼리 인스턴스와 관련 된.</xref:System.Linq.IQueryProvider>"
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Data.Objects.ObjectQuery%601>인스턴스로 캐스팅 되는 <xref:System.ComponentModel.IListSource>인터페이스.</xref:System.ComponentModel.IListSource> </xref:System.Data.Objects.ObjectQuery%601>"
  syntax:
    content: System.Linq.IQueryProvider System.Linq.IQueryable.Provider { get; }
    return:
      type: System.Linq.IQueryProvider
      description: "<xref:System.Linq.IQueryProvider>이 쿼리 인스턴스와 관련 된.</xref:System.Linq.IQueryProvider>"
  overload: System.Data.Objects.ObjectQuery.System#Linq#IQueryable#Provider*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.ObjectQuery.ToTraceString
  id: ToTraceString
  parent: System.Data.Objects.ObjectQuery
  langs:
  - csharp
  name: ToTraceString()
  nameWithType: ObjectQuery.ToTraceString()
  fullName: System.Data.Objects.ObjectQuery.ToTraceString()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "데이터 원본에 대해 실행할 명령을 반환 합니다."
  remarks: ''
  example:
  - "The example in this topic is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/en-us/f16cd988-673f-4376-b034-129ca93c7832).  \n  \n [!code-vb[DP ObjectServices Concepts#ObjectQuery_ToTraceString](~/add/codesnippet/visualbasic/objectservicesconceptsvb/Source.vb#objectquery_totracestring)]\n [!code-cs[DP ObjectServices Concepts#ObjectQuery_ToTraceString](~/add/codesnippet/csharp/objectservicesconceptscs/Source.cs#objectquery_totracestring)]"
  syntax:
    content: public string ToTraceString ();
    parameters: []
    return:
      type: System.String
      description: "A <xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;> </xref> 데이터 원본에 대해 쿼리를 실행 하는 명령을 나타내는입니다."
  overload: System.Data.Objects.ObjectQuery.ToTraceString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Data.Objects.ObjectQuery.CommandText
  parent: System.Data.Objects.ObjectQuery
  isExternal: false
  name: CommandText
  nameWithType: ObjectQuery.CommandText
  fullName: System.Data.Objects.ObjectQuery.CommandText
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Objects.ObjectQuery.Context
  parent: System.Data.Objects.ObjectQuery
  isExternal: false
  name: Context
  nameWithType: ObjectQuery.Context
  fullName: System.Data.Objects.ObjectQuery.Context
- uid: System.Data.Objects.ObjectContext
  parent: System.Data.Objects
  isExternal: false
  name: ObjectContext
  nameWithType: ObjectContext
  fullName: System.Data.Objects.ObjectContext
- uid: System.Data.Objects.ObjectQuery.EnablePlanCaching
  parent: System.Data.Objects.ObjectQuery
  isExternal: false
  name: EnablePlanCaching
  nameWithType: ObjectQuery.EnablePlanCaching
  fullName: System.Data.Objects.ObjectQuery.EnablePlanCaching
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Objects.ObjectQuery.Execute(System.Data.Objects.MergeOption)
  parent: System.Data.Objects.ObjectQuery
  isExternal: false
  name: Execute(MergeOption)
  nameWithType: ObjectQuery.Execute(MergeOption)
  fullName: System.Data.Objects.ObjectQuery.Execute(MergeOption)
- uid: System.Data.Objects.ObjectResult
  parent: System.Data.Objects
  isExternal: false
  name: ObjectResult
  nameWithType: ObjectResult
  fullName: System.Data.Objects.ObjectResult
- uid: System.Data.Objects.MergeOption
  parent: System.Data.Objects
  isExternal: false
  name: MergeOption
  nameWithType: MergeOption
  fullName: System.Data.Objects.MergeOption
- uid: System.Data.Objects.ObjectQuery.GetResultType
  parent: System.Data.Objects.ObjectQuery
  isExternal: false
  name: GetResultType()
  nameWithType: ObjectQuery.GetResultType()
  fullName: System.Data.Objects.ObjectQuery.GetResultType()
- uid: System.Data.Metadata.Edm.TypeUsage
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: TypeUsage
  nameWithType: TypeUsage
  fullName: System.Data.Metadata.Edm.TypeUsage
- uid: System.Data.Objects.ObjectQuery.MergeOption
  parent: System.Data.Objects.ObjectQuery
  isExternal: false
  name: MergeOption
  nameWithType: ObjectQuery.MergeOption
  fullName: System.Data.Objects.ObjectQuery.MergeOption
- uid: System.Data.Objects.ObjectQuery.Parameters
  parent: System.Data.Objects.ObjectQuery
  isExternal: false
  name: Parameters
  nameWithType: ObjectQuery.Parameters
  fullName: System.Data.Objects.ObjectQuery.Parameters
- uid: System.Data.Objects.ObjectParameterCollection
  parent: System.Data.Objects
  isExternal: false
  name: ObjectParameterCollection
  nameWithType: ObjectParameterCollection
  fullName: System.Data.Objects.ObjectParameterCollection
- uid: System.Data.Objects.ObjectQuery.System#Collections#IEnumerable#GetEnumerator
  parent: System.Data.Objects.ObjectQuery
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: ObjectQuery.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Data.Objects.ObjectQuery.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Data.Objects.ObjectQuery.System#ComponentModel#IListSource#ContainsListCollection
  parent: System.Data.Objects.ObjectQuery
  isExternal: false
  name: System.ComponentModel.IListSource.ContainsListCollection
  nameWithType: ObjectQuery.System.ComponentModel.IListSource.ContainsListCollection
  fullName: System.Data.Objects.ObjectQuery.System.ComponentModel.IListSource.ContainsListCollection
- uid: System.Data.Objects.ObjectQuery.System#ComponentModel#IListSource#GetList
  parent: System.Data.Objects.ObjectQuery
  isExternal: false
  name: System.ComponentModel.IListSource.GetList()
  nameWithType: ObjectQuery.System.ComponentModel.IListSource.GetList()
  fullName: System.Data.Objects.ObjectQuery.System.ComponentModel.IListSource.GetList()
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Data.Objects.ObjectQuery.System#Linq#IQueryable#ElementType
  parent: System.Data.Objects.ObjectQuery
  isExternal: false
  name: System.Linq.IQueryable.ElementType
  nameWithType: ObjectQuery.System.Linq.IQueryable.ElementType
  fullName: System.Data.Objects.ObjectQuery.System.Linq.IQueryable.ElementType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Data.Objects.ObjectQuery.System#Linq#IQueryable#Expression
  parent: System.Data.Objects.ObjectQuery
  isExternal: false
  name: System.Linq.IQueryable.Expression
  nameWithType: ObjectQuery.System.Linq.IQueryable.Expression
  fullName: System.Data.Objects.ObjectQuery.System.Linq.IQueryable.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: true
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Data.Objects.ObjectQuery.System#Linq#IQueryable#Provider
  parent: System.Data.Objects.ObjectQuery
  isExternal: false
  name: System.Linq.IQueryable.Provider
  nameWithType: ObjectQuery.System.Linq.IQueryable.Provider
  fullName: System.Data.Objects.ObjectQuery.System.Linq.IQueryable.Provider
- uid: System.Linq.IQueryProvider
  parent: System.Linq
  isExternal: true
  name: IQueryProvider
  nameWithType: IQueryProvider
  fullName: System.Linq.IQueryProvider
- uid: System.Data.Objects.ObjectQuery.ToTraceString
  parent: System.Data.Objects.ObjectQuery
  isExternal: false
  name: ToTraceString()
  nameWithType: ObjectQuery.ToTraceString()
  fullName: System.Data.Objects.ObjectQuery.ToTraceString()
- uid: System.Data.Objects.ObjectQuery.CommandText*
  parent: System.Data.Objects.ObjectQuery
  isExternal: false
  name: CommandText
  nameWithType: ObjectQuery.CommandText
- uid: System.Data.Objects.ObjectQuery.Context*
  parent: System.Data.Objects.ObjectQuery
  isExternal: false
  name: Context
  nameWithType: ObjectQuery.Context
- uid: System.Data.Objects.ObjectQuery.EnablePlanCaching*
  parent: System.Data.Objects.ObjectQuery
  isExternal: false
  name: EnablePlanCaching
  nameWithType: ObjectQuery.EnablePlanCaching
- uid: System.Data.Objects.ObjectQuery.Execute*
  parent: System.Data.Objects.ObjectQuery
  isExternal: false
  name: Execute
  nameWithType: ObjectQuery.Execute
- uid: System.Data.Objects.ObjectQuery.GetResultType*
  parent: System.Data.Objects.ObjectQuery
  isExternal: false
  name: GetResultType
  nameWithType: ObjectQuery.GetResultType
- uid: System.Data.Objects.ObjectQuery.MergeOption*
  parent: System.Data.Objects.ObjectQuery
  isExternal: false
  name: MergeOption
  nameWithType: ObjectQuery.MergeOption
- uid: System.Data.Objects.ObjectQuery.Parameters*
  parent: System.Data.Objects.ObjectQuery
  isExternal: false
  name: Parameters
  nameWithType: ObjectQuery.Parameters
- uid: System.Data.Objects.ObjectQuery.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Data.Objects.ObjectQuery
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: ObjectQuery.System.Collections.IEnumerable.GetEnumerator
- uid: System.Data.Objects.ObjectQuery.System#ComponentModel#IListSource#ContainsListCollection*
  parent: System.Data.Objects.ObjectQuery
  isExternal: false
  name: System.ComponentModel.IListSource.ContainsListCollection
  nameWithType: ObjectQuery.System.ComponentModel.IListSource.ContainsListCollection
- uid: System.Data.Objects.ObjectQuery.System#ComponentModel#IListSource#GetList*
  parent: System.Data.Objects.ObjectQuery
  isExternal: false
  name: System.ComponentModel.IListSource.GetList
  nameWithType: ObjectQuery.System.ComponentModel.IListSource.GetList
- uid: System.Data.Objects.ObjectQuery.System#Linq#IQueryable#ElementType*
  parent: System.Data.Objects.ObjectQuery
  isExternal: false
  name: System.Linq.IQueryable.ElementType
  nameWithType: ObjectQuery.System.Linq.IQueryable.ElementType
- uid: System.Data.Objects.ObjectQuery.System#Linq#IQueryable#Expression*
  parent: System.Data.Objects.ObjectQuery
  isExternal: false
  name: System.Linq.IQueryable.Expression
  nameWithType: ObjectQuery.System.Linq.IQueryable.Expression
- uid: System.Data.Objects.ObjectQuery.System#Linq#IQueryable#Provider*
  parent: System.Data.Objects.ObjectQuery
  isExternal: false
  name: System.Linq.IQueryable.Provider
  nameWithType: ObjectQuery.System.Linq.IQueryable.Provider
- uid: System.Data.Objects.ObjectQuery.ToTraceString*
  parent: System.Data.Objects.ObjectQuery
  isExternal: false
  name: ToTraceString
  nameWithType: ObjectQuery.ToTraceString
