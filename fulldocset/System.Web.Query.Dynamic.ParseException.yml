### YamlMime:ManagedReference
items:
- uid: System.Web.Query.Dynamic.ParseException
  id: ParseException
  children:
  - System.Web.Query.Dynamic.ParseException.#ctor(System.String,System.Int32)
  - System.Web.Query.Dynamic.ParseException.Position
  - System.Web.Query.Dynamic.ParseException.ToString
  langs:
  - csharp
  name: ParseException
  nameWithType: ParseException
  fullName: System.Web.Query.Dynamic.ParseException
  type: Class
  summary: "발생 하는 오류를 나타냅니다 때는 <xref href=&quot;System.Web.UI.WebControls.LinqDataSource&quot;> </xref> 제어는 쿼리를 만드는 값을 구문 분석 합니다."
  remarks: "발생 하는 예외에 대 한 정보를 포함 하는 ParseException 개체 때는 <xref:System.Web.UI.WebControls.LinqDataSource>컨트롤 값을 구문 분석 하는 쿼리를 동적으로 만들기 위해.</xref:System.Web.UI.WebControls.LinqDataSource>       경우는 <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>데이터 개체에 있지 않은 속성을 포함 하는 속성의 <xref:System.Web.UI.WebControls.LinqDataSource>제어 ParseException 예외를 발생 시킵니다.</xref:System.Web.UI.WebControls.LinqDataSource> </xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> 메시지는 데이터 개체에는 속성이 존재 하지 않는 것을 나타냅니다.       데이터 개체에 할당할 수는 <xref:System.Web.UI.WebControls.LinqDataSource.Selecting>설정 하 여 이벤트는 <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A>속성을 쿼리에서 반환 되는 개체로.</xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A> </xref:System.Web.UI.WebControls.LinqDataSource.Selecting> 데이터 개체에 존재 하지 않는 속성을 선택 하는 경우는 <xref:System.Web.UI.WebControls.LinqDataSource>제어 ParseException 예외를 발생 시킵니다.</xref:System.Web.UI.WebControls.LinqDataSource> 메시지는 특정 속성에 존재 하지 않는 나타냅니다는 `AnonymousType` 개체입니다."
  syntax:
    content: 'public class ParseException : Exception'
  inheritance:
  - System.Exception
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Query.Dynamic.ParseException.#ctor(System.String,System.Int32)
  id: '#ctor(System.String,System.Int32)'
  parent: System.Web.Query.Dynamic.ParseException
  langs:
  - csharp
  name: ParseException(String,Int32)
  nameWithType: ParseException.ParseException(String,Int32)
  fullName: System.Web.Query.Dynamic.ParseException.ParseException(String,Int32)
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Query.Dynamic
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.Query.Dynamic.ParseException&quot;> </xref> 클래스입니다."
  syntax:
    content: public ParseException (string message, int position);
    parameters:
    - id: message
      type: System.String
      description: "오류를 설명 하는 메시지입니다."
    - id: position
      type: System.Int32
      description: "오류 위치를 지정 합니다."
  overload: System.Web.Query.Dynamic.ParseException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Query.Dynamic.ParseException.Position
  id: Position
  parent: System.Web.Query.Dynamic.ParseException
  langs:
  - csharp
  name: Position
  nameWithType: ParseException.Position
  fullName: System.Web.Query.Dynamic.ParseException.Position
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Query.Dynamic
  summary: "오류의 위치를 가져옵니다."
  syntax:
    content: public int Position { get; }
    return:
      type: System.Int32
      description: "예외가 발생 한 위치입니다."
  overload: System.Web.Query.Dynamic.ParseException.Position*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Query.Dynamic.ParseException.ToString
  id: ToString
  parent: System.Web.Query.Dynamic.ParseException
  langs:
  - csharp
  name: ToString()
  nameWithType: ParseException.ToString()
  fullName: System.Web.Query.Dynamic.ParseException.ToString()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Query.Dynamic
  summary: "오류 메시지와 오류의 위치를 반환합니다."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "메시지와 오류의 위치입니다."
  overload: System.Web.Query.Dynamic.ParseException.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Exception
  isExternal: false
  name: System.Exception
- uid: System.Web.Query.Dynamic.ParseException.#ctor(System.String,System.Int32)
  parent: System.Web.Query.Dynamic.ParseException
  isExternal: false
  name: ParseException(String,Int32)
  nameWithType: ParseException.ParseException(String,Int32)
  fullName: System.Web.Query.Dynamic.ParseException.ParseException(String,Int32)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.Query.Dynamic.ParseException.Position
  parent: System.Web.Query.Dynamic.ParseException
  isExternal: false
  name: Position
  nameWithType: ParseException.Position
  fullName: System.Web.Query.Dynamic.ParseException.Position
- uid: System.Web.Query.Dynamic.ParseException.ToString
  parent: System.Web.Query.Dynamic.ParseException
  isExternal: false
  name: ToString()
  nameWithType: ParseException.ToString()
  fullName: System.Web.Query.Dynamic.ParseException.ToString()
- uid: System.Web.Query.Dynamic.ParseException.#ctor*
  parent: System.Web.Query.Dynamic.ParseException
  isExternal: false
  name: ParseException
  nameWithType: ParseException.ParseException
- uid: System.Web.Query.Dynamic.ParseException.Position*
  parent: System.Web.Query.Dynamic.ParseException
  isExternal: false
  name: Position
  nameWithType: ParseException.Position
- uid: System.Web.Query.Dynamic.ParseException.ToString*
  parent: System.Web.Query.Dynamic.ParseException
  isExternal: false
  name: ToString
  nameWithType: ParseException.ToString
