### YamlMime:ManagedReference
items:
- uid: System.Web.ApplicationServices.RoleService
  id: RoleService
  children:
  - System.Web.ApplicationServices.RoleService.#ctor
  - System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser
  - System.Web.ApplicationServices.RoleService.IsCurrentUserInRole(System.String)
  - System.Web.ApplicationServices.RoleService.SelectingProvider
  langs:
  - csharp
  name: RoleService
  nameWithType: RoleService
  fullName: System.Web.ApplicationServices.RoleService
  type: Class
  summary: "WCF 웹 서비스에서 ASP.NET 역할 공급자에 액세스할 수 있도록 합니다."
  remarks: "RoleService 개체를 사용 하면 Windows Communication Foundation (WCF) 서비스를 통해 사용자의 역할을 읽을 수 있습니다. 역할 서비스를 사용 하려면 웹 서버에서 역할 서비스를 사용 하도록 설정 하 고 WCF 호환 클라이언트 응용 프로그램 웹 서비스를 연결 해야 합니다. 역할 서비스를 구성 하는 방법에 대 한 정보를 참조 하십시오. [하는 방법: WCF 역할 서비스를 사용 하도록 설정](~/add/includes/ajax-current-ext-md.md)합니다.       사용자의 역할을 읽을 수는 사용자를 인증 해야 합니다. 역할 서비스는 모든 종류의 ASP.NET 인증 함께 작동합니다. WCF 서비스를 통해 사용자가 로그인 하는 방법에 대 한 정보를 참조 하십시오. [Windows Communication Foundation 인증 서비스 개요](~/add/includes/ajax-current-ext-md.md)합니다.       RoleService 클래스는 WCF 서비스를 사용할 때만 액세스 해야 하는 두 메서드를 노출:는 <xref:System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser%2A>메서드 및 <xref:System.Web.ApplicationServices.RoleService.IsCurrentUserInRole%2A>메서드.</xref:System.Web.ApplicationServices.RoleService.IsCurrentUserInRole%2A> </xref:System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser%2A> <xref:System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser%2A>메서드 로그인 한 사용자에 대 한 모든 역할을 반환 합니다.</xref:System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser%2A> <xref:System.Web.ApplicationServices.RoleService.IsCurrentUserInRole%2A>메서드는 지정된 된 역할에 사용자가 인지 확인 합니다.</xref:System.Web.ApplicationServices.RoleService.IsCurrentUserInRole%2A>       RoleService 개체 발생는 <xref:System.Web.ApplicationServices.RoleService.SelectingProvider>이벤트.</xref:System.Web.ApplicationServices.RoleService.SelectingProvider> 에 대 한 이벤트 처리기를 만들고는 <xref:System.Web.ApplicationServices.RoleService.SelectingProvider>이벤트를 런타임 시 사용 하는 역할 공급자를 선택 합니다.</xref:System.Web.ApplicationServices.RoleService.SelectingProvider>       콘솔 응용 프로그램에서 WCF 역할 서비스를 사용 하는 방법의 예제를 보려면 [연습: ASP.NET 응용 프로그램 서비스를 사용 하 여](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: >-
      [System.ServiceModel.Activation.AspNetCompatibilityRequirements(RequirementsMode=System.ServiceModel.Activation.AspNetCompatibilityRequirementsMode.Required)]

      [System.ServiceModel.ServiceBehavior(ConcurrencyMode=System.ServiceModel.ConcurrencyMode.Multiple, InstanceContextMode=System.ServiceModel.InstanceContextMode.Single, Namespace="http://asp.net/ApplicationServices/v200")]

      [System.ServiceModel.ServiceContract(Namespace="http://asp.net/ApplicationServices/v200")]

      public class RoleService
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.ApplicationServices.RoleService.#ctor
  id: '#ctor'
  parent: System.Web.ApplicationServices.RoleService
  langs:
  - csharp
  name: RoleService()
  nameWithType: RoleService.RoleService()
  fullName: System.Web.ApplicationServices.RoleService.RoleService()
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ApplicationServices
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Web.ApplicationServices.RoleService&quot;> </xref> 클래스입니다."
  syntax:
    content: public RoleService ();
    parameters: []
  overload: System.Web.ApplicationServices.RoleService.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser
  id: GetRolesForCurrentUser
  parent: System.Web.ApplicationServices.RoleService
  langs:
  - csharp
  name: GetRolesForCurrentUser()
  nameWithType: RoleService.GetRolesForCurrentUser()
  fullName: System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ApplicationServices
  summary: "로그인 한 사용자에 대 한 모든 역할을 반환합니다."
  remarks: "GetRolesForCurrentUser 메서드는 사용자에 대 한 모든 역할을 반환합니다. 확인 하거나 사용자에 게 사용할 수 있는 리소스를 결정 하는 사용자의 모든 역할을 유지 해야 하는 경우에 GetRolesForCurrentUser 메서드를 사용 합니다. 에 대 한 여러 호출을 방지 하기 위해이 메서드를 사용할 수는 <xref:System.Web.ApplicationServices.RoleService.IsCurrentUserInRole%2A>메서드.</xref:System.Web.ApplicationServices.RoleService.IsCurrentUserInRole%2A>       GetRolesForCurrentUser 메서드 호출의 <xref:System.Web.ApplicationServices.RoleService.SelectingProvider>이벤트.</xref:System.Web.ApplicationServices.RoleService.SelectingProvider>      > [!NOTE] > 웹 서버에서 실행 되는 코드에서 GetRolesForCurrentUser 메서드를 호출 하지 마세요. WCF 서비스의 일부로 GetRolesForCurrentUser 메서드를 호출 합니다. 웹 서버에서 실행 되는 코드에서 사용자의 역할을 읽는 방법에 대 한 자세한 내용은 참조는 <xref:System.Web.Security.Roles.GetRolesForUser%2A>메서드.</xref:System.Web.Security.Roles.GetRolesForUser%2A>"
  syntax:
    content: public string[] GetRolesForCurrentUser ();
    parameters: []
    return:
      type: System.String[]
      description: "배열에 속하는 사용자 역할의 이름입니다."
  overload: System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "역할 관리를 사용할 수 없습니다."
  platform:
  - net462
- uid: System.Web.ApplicationServices.RoleService.IsCurrentUserInRole(System.String)
  id: IsCurrentUserInRole(System.String)
  parent: System.Web.ApplicationServices.RoleService
  langs:
  - csharp
  name: IsCurrentUserInRole(String)
  nameWithType: RoleService.IsCurrentUserInRole(String)
  fullName: System.Web.ApplicationServices.RoleService.IsCurrentUserInRole(String)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ApplicationServices
  summary: "로그인 한 사용자 지정된 된 역할에 속하는지 여부를 결정 합니다."
  remarks: "IsCurrentUserInRole 메서드 로그인 한 사용자 지정된 된 역할에 속하는지 여부를 확인 합니다. IsCurrentUserInRole 메서드는 <xref:System.Web.ApplicationServices.RoleService.SelectingProvider>이벤트.</xref:System.Web.ApplicationServices.RoleService.SelectingProvider>      > [!NOTE] > 웹 서버에서 실행 되는 코드에서 IsCurrentUserInRole 메서드를 호출 하지 마세요. WCF 서비스의 일부로 IsCurrentUserInRole 메서드를 호출 합니다. 웹 서버에서 실행 되는 코드에서 사용자 지정된 된 그룹에 속하는지 여부를 확인 하는 방법에 대 한 자세한 내용은 참조는 <xref:System.Web.Security.Roles.IsUserInRole%2A>메서드.</xref:System.Web.Security.Roles.IsUserInRole%2A>"
  syntax:
    content: public bool IsCurrentUserInRole (string role);
    parameters:
    - id: role
      type: System.String
      description: "확인할 역할의 이름입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>사용자가 지정된 된 역할의 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Web.ApplicationServices.RoleService.IsCurrentUserInRole*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>role</code><xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 또는 사용자가 로그인 하지 않은 합니다."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "역할 관리를 사용할 수 없습니다."
  platform:
  - net462
- uid: System.Web.ApplicationServices.RoleService.SelectingProvider
  id: SelectingProvider
  parent: System.Web.ApplicationServices.RoleService
  langs:
  - csharp
  name: SelectingProvider
  nameWithType: RoleService.SelectingProvider
  fullName: System.Web.ApplicationServices.RoleService.SelectingProvider
  type: Event
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ApplicationServices
  summary: "발생 경우는 <xref href=&quot;System.Web.ApplicationServices.RoleService&quot;> </xref> 인스턴스 역할 공급자를 사용 하 여 사용자의 역할을 검사에 대 한 결정 합니다."
  remarks: "<xref:System.Web.ApplicationServices.RoleService>클래스에 사용자의 역할을 검색 하기 위해 사용 하는 역할 공급자를 결정할 때 SelectingProvider 이벤트를 발생 시킵니다.</xref:System.Web.ApplicationServices.RoleService> 역할 공급자를 사용 하 여 런타임 시 선택할 SelectingProvider 이벤트에 대 한 이벤트 처리기를 만들 수 있습니다."
  example:
  - "The following example shows how to bind an event handler to the SelectingProvider event in the Global.asax file. The event handler determines at run time which role provider to use, based on the user name.  \n  \n [!code-vb[System.Web.Security.SelectingProviderEventHandler#1](~/add/codesnippet/visualbasic/e-system.web.application_3_1.asax)]\n [!code-cs[System.Web.Security.SelectingProviderEventHandler#1](~/add/codesnippet/csharp/e-system.web.application_3_1.asax)]"
  syntax:
    content: public static event EventHandler<System.Web.ApplicationServices.SelectingProviderEventArgs> SelectingProvider;
    return:
      type: System.EventHandler{System.Web.ApplicationServices.SelectingProviderEventArgs}
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Configuration.Provider.ProviderException
  parent: System.Configuration.Provider
  isExternal: false
  name: ProviderException
  nameWithType: ProviderException
  fullName: System.Configuration.Provider.ProviderException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.ApplicationServices.RoleService.#ctor
  parent: System.Web.ApplicationServices.RoleService
  isExternal: false
  name: RoleService()
  nameWithType: RoleService.RoleService()
  fullName: System.Web.ApplicationServices.RoleService.RoleService()
- uid: System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser
  parent: System.Web.ApplicationServices.RoleService
  isExternal: false
  name: GetRolesForCurrentUser()
  nameWithType: RoleService.GetRolesForCurrentUser()
  fullName: System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser()
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.ApplicationServices.RoleService.IsCurrentUserInRole(System.String)
  parent: System.Web.ApplicationServices.RoleService
  isExternal: false
  name: IsCurrentUserInRole(String)
  nameWithType: RoleService.IsCurrentUserInRole(String)
  fullName: System.Web.ApplicationServices.RoleService.IsCurrentUserInRole(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.ApplicationServices.RoleService.SelectingProvider
  parent: System.Web.ApplicationServices.RoleService
  isExternal: false
  name: SelectingProvider
  nameWithType: RoleService.SelectingProvider
  fullName: System.Web.ApplicationServices.RoleService.SelectingProvider
- uid: System.EventHandler{System.Web.ApplicationServices.SelectingProviderEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<SelectingProviderEventArgs>
  nameWithType: EventHandler<SelectingProviderEventArgs>
  fullName: System.EventHandler<System.Web.ApplicationServices.SelectingProviderEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Web.ApplicationServices.SelectingProviderEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.ApplicationServices.SelectingProviderEventArgs
    name: SelectingProviderEventArgs
    nameWithType: SelectingProviderEventArgs
    fullName: SelectingProviderEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.ApplicationServices.RoleService.#ctor*
  parent: System.Web.ApplicationServices.RoleService
  isExternal: false
  name: RoleService
  nameWithType: RoleService.RoleService
- uid: System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser*
  parent: System.Web.ApplicationServices.RoleService
  isExternal: false
  name: GetRolesForCurrentUser
  nameWithType: RoleService.GetRolesForCurrentUser
- uid: System.Web.ApplicationServices.RoleService.IsCurrentUserInRole*
  parent: System.Web.ApplicationServices.RoleService
  isExternal: false
  name: IsCurrentUserInRole
  nameWithType: RoleService.IsCurrentUserInRole
