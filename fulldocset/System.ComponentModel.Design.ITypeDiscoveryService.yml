### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.ITypeDiscoveryService
  id: ITypeDiscoveryService
  children:
  - System.ComponentModel.Design.ITypeDiscoveryService.GetTypes(System.Type,System.Boolean)
  langs:
  - csharp
  name: ITypeDiscoveryService
  nameWithType: ITypeDiscoveryService
  fullName: System.ComponentModel.Design.ITypeDiscoveryService
  type: Interface
  summary: "디자인 타임에 사용할 수 있는 유형을 검색합니다."
  remarks: "서비스의 클라이언트는 기존 형식 또는 참조 된 어셈블리의 이름을 모릅니다 디자인 타임에 사용할 수 있는 형식을 검색 하는 ITypeDiscoveryService 사용 됩니다."
  syntax:
    content: public interface ITypeDiscoveryService
  implements: []
  platform:
  - net462
- uid: System.ComponentModel.Design.ITypeDiscoveryService.GetTypes(System.Type,System.Boolean)
  id: GetTypes(System.Type,System.Boolean)
  parent: System.ComponentModel.Design.ITypeDiscoveryService
  langs:
  - csharp
  name: GetTypes(Type,Boolean)
  nameWithType: ITypeDiscoveryService.GetTypes(Type,Boolean)
  fullName: System.ComponentModel.Design.ITypeDiscoveryService.GetTypes(Type,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "사용 가능한 형식 목록을 검색합니다."
  remarks: "경우 `baseType` 은 `null`, 모든 유형이 반환 됩니다. 그렇지 않으면 지정된 된 기본 형식에서 파생 된 형식만 반환 됩니다. 경우 `excludeGlobalTypes` 은 `false`, 참조 되는 모든 어셈블리에서 형식을 확인 합니다. 그렇지 않은 경우에 비-GAC 전역 어셈블리 캐시 참조 된 어셈블리에서 형식만 확인 됩니다. 자세한 내용은 참조 [어셈블리 및 전역 어셈블리 캐시 사용](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public System.Collections.ICollection GetTypes (Type baseType, bool excludeGlobalTypes);
    parameters:
    - id: baseType
      type: System.Type
      description: "와 일치 하도록 기본 형식입니다. Can be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    - id: excludeGlobalTypes
      type: System.Boolean
      description: "모든 참조 된 어셈블리에서 형식을 검사할지 여부를 나타냅니다."
    return:
      type: System.Collections.ICollection
      description: "로 지정 된 조건과 일치 하는 형식의 컬렉션인 <code> baseType </code> 및 <code> excludeGlobalTypes </code>합니다."
  overload: System.ComponentModel.Design.ITypeDiscoveryService.GetTypes*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.Design.ITypeDiscoveryService.GetTypes(System.Type,System.Boolean)
  parent: System.ComponentModel.Design.ITypeDiscoveryService
  isExternal: false
  name: GetTypes(Type,Boolean)
  nameWithType: ITypeDiscoveryService.GetTypes(Type,Boolean)
  fullName: System.ComponentModel.Design.ITypeDiscoveryService.GetTypes(Type,Boolean)
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Design.ITypeDiscoveryService.GetTypes*
  parent: System.ComponentModel.Design.ITypeDiscoveryService
  isExternal: false
  name: GetTypes
  nameWithType: ITypeDiscoveryService.GetTypes
