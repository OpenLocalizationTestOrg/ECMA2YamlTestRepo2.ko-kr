### YamlMime:ManagedReference
items:
- uid: System.Windows.Markup.InternalTypeHelper
  id: InternalTypeHelper
  children:
  - System.Windows.Markup.InternalTypeHelper.#ctor
  - System.Windows.Markup.InternalTypeHelper.AddEventHandler(System.Reflection.EventInfo,System.Object,System.Delegate)
  - System.Windows.Markup.InternalTypeHelper.CreateDelegate(System.Type,System.Object,System.String)
  - System.Windows.Markup.InternalTypeHelper.CreateInstance(System.Type,System.Globalization.CultureInfo)
  - System.Windows.Markup.InternalTypeHelper.GetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Globalization.CultureInfo)
  - System.Windows.Markup.InternalTypeHelper.SetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Object,System.Globalization.CultureInfo)
  langs:
  - csharp
  name: InternalTypeHelper
  nameWithType: InternalTypeHelper
  fullName: System.Windows.Markup.InternalTypeHelper
  type: Class
  summary: "내부 형식의 사용을 지원 하기 위해 WPF XAML 컴파일러에서 내부적으로 사용 하는 추상 클래스입니다."
  remarks: "InternalTypeHelper 클래스는 WPF XAML 태그 컴파일러 이외의 값으로 사용 하기 위해 없습니다.       XAML 파일을 컴파일할 때 공용 형식을 사용할 수 있습니다 하지만 동일한 제한 사항이 존재 하는 내부 형식을 내부 형식에 대 한 코드 액세스에 사용할 수도 있습니다. InternalTypeHelper 태그에 대 한 내부 액세스 수준 형식 지원할 수 있게 합니다. InternalTypeHelper에서 파생 되 고 해당 멤버를 구현 하는 생성 된 클래스를 만드는 컴파일러가 포함 됩니다. 생성 된 클래스는 동일한 어셈블리에만 또는 내부 공유 액세스에 대해 구체적으로 특성을 사용 하는 다른 어셈블리 생성된 된 클래스와 내부 형식을 참조할 수 있도록 보안 및 액세스 컨텍스트에 존재 합니다.      <a name=&quot;xamlTextUsage_InternalTypeHelper&quot;></a># # XAML 텍스트 사용"
  syntax:
    content: >-
      [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]

      public abstract class InternalTypeHelper
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Markup.InternalTypeHelper.#ctor
  id: '#ctor'
  parent: System.Windows.Markup.InternalTypeHelper
  langs:
  - csharp
  name: InternalTypeHelper()
  nameWithType: InternalTypeHelper.InternalTypeHelper()
  fullName: System.Windows.Markup.InternalTypeHelper.InternalTypeHelper()
  type: Constructor
  assemblies:
  - WindowsBase
  namespace: System.Windows.Markup
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Windows.Markup.InternalTypeHelper&quot;> </xref> 클래스입니다."
  syntax:
    content: protected InternalTypeHelper ();
    parameters: []
  overload: System.Windows.Markup.InternalTypeHelper.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Markup.InternalTypeHelper.AddEventHandler(System.Reflection.EventInfo,System.Object,System.Delegate)
  id: AddEventHandler(System.Reflection.EventInfo,System.Object,System.Delegate)
  parent: System.Windows.Markup.InternalTypeHelper
  langs:
  - csharp
  name: AddEventHandler(EventInfo,Object,Delegate)
  nameWithType: InternalTypeHelper.AddEventHandler(EventInfo,Object,Delegate)
  fullName: System.Windows.Markup.InternalTypeHelper.AddEventHandler(EventInfo,Object,Delegate)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Markup
  summary: "(생성 된) 파생된 클래스에서 재정의 되 면 내부 이벤트에 이벤트 처리기 대리자를 연결 합니다."
  remarks: "<xref:System.Windows.Markup.InternalTypeHelper>클래스 사용 하기 위해가 없는 WPF XAML 태그 컴파일러 이외의.</xref:System.Windows.Markup.InternalTypeHelper>"
  syntax:
    content: protected abstract void AddEventHandler (System.Reflection.EventInfo eventInfo, object target, Delegate handler);
    parameters:
    - id: eventInfo
      type: System.Reflection.EventInfo
      description: "이벤트 (CLR 리플렉션 정보)에 대 한 이벤트 정보입니다."
    - id: target
      type: System.Object
      description: "처리기가 연결 되어 있는 대상입니다."
    - id: handler
      type: System.Delegate
      description: "이벤트 처리기입니다."
  overload: System.Windows.Markup.InternalTypeHelper.AddEventHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Markup.InternalTypeHelper.CreateDelegate(System.Type,System.Object,System.String)
  id: CreateDelegate(System.Type,System.Object,System.String)
  parent: System.Windows.Markup.InternalTypeHelper
  langs:
  - csharp
  name: CreateDelegate(Type,Object,String)
  nameWithType: InternalTypeHelper.CreateDelegate(Type,Object,String)
  fullName: System.Windows.Markup.InternalTypeHelper.CreateDelegate(Type,Object,String)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Markup
  summary: "(생성 된) 파생된 클래스에서 재정의 되 면 public이 아닌 처리기 메서드를 참조 하는 이벤트 대리자를 만듭니다."
  remarks: "<xref:System.Windows.Markup.InternalTypeHelper>클래스 사용 하기 위해가 없는 WPF XAML 태그 컴파일러 이외의.</xref:System.Windows.Markup.InternalTypeHelper>"
  syntax:
    content: protected abstract Delegate CreateDelegate (Type delegateType, object target, string handler);
    parameters:
    - id: delegateType
      type: System.Type
      description: "<xref:System.Type>대리자의.</xref:System.Type>"
    - id: target
      type: System.Object
      description: "처리기가 연결 되어 있는 대상입니다."
    - id: handler
      type: System.String
      description: "처리기 구현의 이름입니다."
    return:
      type: System.Delegate
      description: "대리자에 대 한 참조입니다."
  overload: System.Windows.Markup.InternalTypeHelper.CreateDelegate*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Markup.InternalTypeHelper.CreateInstance(System.Type,System.Globalization.CultureInfo)
  id: CreateInstance(System.Type,System.Globalization.CultureInfo)
  parent: System.Windows.Markup.InternalTypeHelper
  langs:
  - csharp
  name: CreateInstance(Type,CultureInfo)
  nameWithType: InternalTypeHelper.CreateInstance(Type,CultureInfo)
  fullName: System.Windows.Markup.InternalTypeHelper.CreateInstance(Type,CultureInfo)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Markup
  summary: "(생성 된) 파생된 클래스에서 재정의 되 면 내부 형식의 인스턴스를 만듭니다."
  remarks: "<xref:System.Windows.Markup.InternalTypeHelper>클래스 사용 하기 위해가 없는 WPF XAML 태그 컴파일러 이외의.</xref:System.Windows.Markup.InternalTypeHelper>"
  syntax:
    content: protected abstract object CreateInstance (Type type, System.Globalization.CultureInfo culture);
    parameters:
    - id: type
      type: System.Type
      description: "<xref:System.Type>만들려는.</xref:System.Type>"
    - id: culture
      type: System.Globalization.CultureInfo
      description: "문화권별 정보입니다."
    return:
      type: System.Object
      description: "만든된 인스턴스입니다."
  overload: System.Windows.Markup.InternalTypeHelper.CreateInstance*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Markup.InternalTypeHelper.GetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Globalization.CultureInfo)
  id: GetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Globalization.CultureInfo)
  parent: System.Windows.Markup.InternalTypeHelper
  langs:
  - csharp
  name: GetPropertyValue(PropertyInfo,Object,CultureInfo)
  nameWithType: InternalTypeHelper.GetPropertyValue(PropertyInfo,Object,CultureInfo)
  fullName: System.Windows.Markup.InternalTypeHelper.GetPropertyValue(PropertyInfo,Object,CultureInfo)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Markup
  summary: "(생성 된) 파생된 클래스에서 재정의 되 면 대상 개체의 내부 속성의 값을 가져옵니다."
  remarks: "<xref:System.Windows.Markup.InternalTypeHelper>클래스 사용 하기 위해가 없는 WPF XAML 태그 컴파일러 이외의.</xref:System.Windows.Markup.InternalTypeHelper>"
  syntax:
    content: protected abstract object GetPropertyValue (System.Reflection.PropertyInfo propertyInfo, object target, System.Globalization.CultureInfo culture);
    parameters:
    - id: propertyInfo
      type: System.Reflection.PropertyInfo
      description: "가져올 속성에 대 한 속성 정보입니다."
    - id: target
      type: System.Object
      description: "원하는 속성 값을 보유 하는 개체입니다."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "문화권별 정보입니다."
    return:
      type: System.Object
      description: "속성의 값입니다."
  overload: System.Windows.Markup.InternalTypeHelper.GetPropertyValue*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Markup.InternalTypeHelper.SetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Object,System.Globalization.CultureInfo)
  id: SetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Object,System.Globalization.CultureInfo)
  parent: System.Windows.Markup.InternalTypeHelper
  langs:
  - csharp
  name: SetPropertyValue(PropertyInfo,Object,Object,CultureInfo)
  nameWithType: InternalTypeHelper.SetPropertyValue(PropertyInfo,Object,Object,CultureInfo)
  fullName: System.Windows.Markup.InternalTypeHelper.SetPropertyValue(PropertyInfo,Object,Object,CultureInfo)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Markup
  summary: "(생성 된) 파생된 클래스에서 재정의 되 면 대상 개체의 내부 속성에 값을 설정 합니다."
  remarks: "<xref:System.Windows.Markup.InternalTypeHelper>클래스 사용 하기 위해가 없는 WPF XAML 태그 컴파일러 이외의.</xref:System.Windows.Markup.InternalTypeHelper>"
  syntax:
    content: protected abstract void SetPropertyValue (System.Reflection.PropertyInfo propertyInfo, object target, object value, System.Globalization.CultureInfo culture);
    parameters:
    - id: propertyInfo
      type: System.Reflection.PropertyInfo
      description: "설정할 속성에 대 한 속성 정보입니다."
    - id: target
      type: System.Object
      description: "원하는 속성 값을 보유 하는 개체입니다."
    - id: value
      type: System.Object
      description: "설정할 값입니다."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "문화권별 정보입니다."
  overload: System.Windows.Markup.InternalTypeHelper.SetPropertyValue*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Windows.Markup.InternalTypeHelper.#ctor
  parent: System.Windows.Markup.InternalTypeHelper
  isExternal: false
  name: InternalTypeHelper()
  nameWithType: InternalTypeHelper.InternalTypeHelper()
  fullName: System.Windows.Markup.InternalTypeHelper.InternalTypeHelper()
- uid: System.Windows.Markup.InternalTypeHelper.AddEventHandler(System.Reflection.EventInfo,System.Object,System.Delegate)
  parent: System.Windows.Markup.InternalTypeHelper
  isExternal: false
  name: AddEventHandler(EventInfo,Object,Delegate)
  nameWithType: InternalTypeHelper.AddEventHandler(EventInfo,Object,Delegate)
  fullName: System.Windows.Markup.InternalTypeHelper.AddEventHandler(EventInfo,Object,Delegate)
- uid: System.Reflection.EventInfo
  parent: System.Reflection
  isExternal: true
  name: EventInfo
  nameWithType: EventInfo
  fullName: System.Reflection.EventInfo
- uid: System.Delegate
  parent: System
  isExternal: true
  name: Delegate
  nameWithType: Delegate
  fullName: System.Delegate
- uid: System.Windows.Markup.InternalTypeHelper.CreateDelegate(System.Type,System.Object,System.String)
  parent: System.Windows.Markup.InternalTypeHelper
  isExternal: false
  name: CreateDelegate(Type,Object,String)
  nameWithType: InternalTypeHelper.CreateDelegate(Type,Object,String)
  fullName: System.Windows.Markup.InternalTypeHelper.CreateDelegate(Type,Object,String)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Markup.InternalTypeHelper.CreateInstance(System.Type,System.Globalization.CultureInfo)
  parent: System.Windows.Markup.InternalTypeHelper
  isExternal: false
  name: CreateInstance(Type,CultureInfo)
  nameWithType: InternalTypeHelper.CreateInstance(Type,CultureInfo)
  fullName: System.Windows.Markup.InternalTypeHelper.CreateInstance(Type,CultureInfo)
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Windows.Markup.InternalTypeHelper.GetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Globalization.CultureInfo)
  parent: System.Windows.Markup.InternalTypeHelper
  isExternal: false
  name: GetPropertyValue(PropertyInfo,Object,CultureInfo)
  nameWithType: InternalTypeHelper.GetPropertyValue(PropertyInfo,Object,CultureInfo)
  fullName: System.Windows.Markup.InternalTypeHelper.GetPropertyValue(PropertyInfo,Object,CultureInfo)
- uid: System.Reflection.PropertyInfo
  parent: System.Reflection
  isExternal: true
  name: PropertyInfo
  nameWithType: PropertyInfo
  fullName: System.Reflection.PropertyInfo
- uid: System.Windows.Markup.InternalTypeHelper.SetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Object,System.Globalization.CultureInfo)
  parent: System.Windows.Markup.InternalTypeHelper
  isExternal: false
  name: SetPropertyValue(PropertyInfo,Object,Object,CultureInfo)
  nameWithType: InternalTypeHelper.SetPropertyValue(PropertyInfo,Object,Object,CultureInfo)
  fullName: System.Windows.Markup.InternalTypeHelper.SetPropertyValue(PropertyInfo,Object,Object,CultureInfo)
- uid: System.Windows.Markup.InternalTypeHelper.#ctor*
  parent: System.Windows.Markup.InternalTypeHelper
  isExternal: false
  name: InternalTypeHelper
  nameWithType: InternalTypeHelper.InternalTypeHelper
- uid: System.Windows.Markup.InternalTypeHelper.AddEventHandler*
  parent: System.Windows.Markup.InternalTypeHelper
  isExternal: false
  name: AddEventHandler
  nameWithType: InternalTypeHelper.AddEventHandler
- uid: System.Windows.Markup.InternalTypeHelper.CreateDelegate*
  parent: System.Windows.Markup.InternalTypeHelper
  isExternal: false
  name: CreateDelegate
  nameWithType: InternalTypeHelper.CreateDelegate
- uid: System.Windows.Markup.InternalTypeHelper.CreateInstance*
  parent: System.Windows.Markup.InternalTypeHelper
  isExternal: false
  name: CreateInstance
  nameWithType: InternalTypeHelper.CreateInstance
- uid: System.Windows.Markup.InternalTypeHelper.GetPropertyValue*
  parent: System.Windows.Markup.InternalTypeHelper
  isExternal: false
  name: GetPropertyValue
  nameWithType: InternalTypeHelper.GetPropertyValue
- uid: System.Windows.Markup.InternalTypeHelper.SetPropertyValue*
  parent: System.Windows.Markup.InternalTypeHelper
  isExternal: false
  name: SetPropertyValue
  nameWithType: InternalTypeHelper.SetPropertyValue
