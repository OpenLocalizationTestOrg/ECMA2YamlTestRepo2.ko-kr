### YamlMime:ManagedReference
items:
- uid: System.CodeDom.CodeDefaultValueExpression
  id: CodeDefaultValueExpression
  children:
  - System.CodeDom.CodeDefaultValueExpression.#ctor
  - System.CodeDom.CodeDefaultValueExpression.#ctor(System.CodeDom.CodeTypeReference)
  - System.CodeDom.CodeDefaultValueExpression.Type
  langs:
  - csharp
  name: CodeDefaultValueExpression
  nameWithType: CodeDefaultValueExpression
  fullName: System.CodeDom.CodeDefaultValueExpression
  type: Class
  summary: "기본 값에 대 한 참조를 나타냅니다."
  remarks: "CodeDefaultValueExpression 기본 값에 대 한 참조를 나타내는 데 사용할 수 있습니다.       <xref:System.CodeDom.CodeDefaultValueExpression.Type%2A>속성 값 형식에 대 한 참조를 지정 합니다.</xref:System.CodeDom.CodeDefaultValueExpression.Type%2A> CodeDefaultValueExpression 클래스는 제네릭 기반 코드의 생성에 사용 됩니다. 제네릭에 대 한 자세한 내용은 참조 하십시오. [.NET Framework 클래스 라이브러리의 제네릭](~/add/includes/ajax-current-ext-md.md)합니다. 다음 코드 단계는 새 기본값 코드 그래프에 추가할 CodeDefaultValueExpression 클래스의 용도 더 세밀 하 게이 섹션에 나와 있습니다.       1 단계에서 코드는 <xref:System.CodeDom.CodeTypeParameter>클래스</xref:System.CodeDom.CodeTypeParameter> 에 대해 제공 된 큰 예제의 일부 2 부에 표시 되는 C# 코드에서이 코드에서는 C# 코드 생성기를 통해 실행 될 때 발생 합니다. 이 코드는 파트 3 문에서 호출 되 면 4 단계에 나와 있는 출력 됩니다.      ```   // Part 1: Code to create a generic Print method.               CodeMemberMethod printMethod = new CodeMemberMethod();               CodeTypeParameter sType = new CodeTypeParameter(&quot;S&quot;);               sType.HasConstructorConstraint = true;               CodeTypeParameter tType = new CodeTypeParameter(&quot;T&quot;);               sType.HasConstructorConstraint = true;                  printMethod.Name = &quot;Print&quot;;               printMethod.TypeParameters.Add(sType);               printMethod.TypeParameters.Add(tType);               printMethod.Statements.Add(ConsoleWriteLineStatement(                   new CodeDefaultValueExpression(new CodeTypeReference(&quot;T&quot;))));               printMethod.Statements.Add(ConsoleWriteLineStatement(                   new CodeDefaultValueExpression(new CodeTypeReference(&quot;S&quot;))));   ```      ```   // Part 2: Code generated by code in part 1.   public virtual void Print<S, T>()               where S : new()            {               Console.WriteLine(default(T));               Console.WriteLine(default(S));           }   ```      ```   // Part 3: Call to the generated method.   dict.Print<System.Decimal, int>();   ```      ```   // Part 4: Output of the generated method.   0   0      ```"
  example:
  - "The following code example shows the use of the CodeDefaultValueExpression to create default values for decimal and integer parameters. This example is part of a larger example provided for the <xref:System.CodeDom.CodeTypeParameter> class.  \n  \n [!code-vb[System.CodeDOM.Generics.1#7](~/add/codesnippet/visualbasic/t-system.codedom.codedef_1.vb)]\n [!code-cs[System.CodeDOM.Generics.1#7](~/add/codesnippet/csharp/t-system.codedom.codedef_1.cs)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)]

      [System.Runtime.InteropServices.ComVisible(true)]

      public class CodeDefaultValueExpression : System.CodeDom.CodeExpression
  inheritance:
  - System.Object
  - System.CodeDom.CodeObject
  - System.CodeDom.CodeExpression
  implements: []
  inheritedMembers:
  - System.CodeDom.CodeObject.UserData
  platform:
  - net462
- uid: System.CodeDom.CodeDefaultValueExpression.#ctor
  id: '#ctor'
  parent: System.CodeDom.CodeDefaultValueExpression
  langs:
  - csharp
  name: CodeDefaultValueExpression()
  nameWithType: CodeDefaultValueExpression.CodeDefaultValueExpression()
  fullName: System.CodeDom.CodeDefaultValueExpression.CodeDefaultValueExpression()
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.CodeDom.CodeDefaultValueExpression&quot;> </xref> 클래스입니다."
  syntax:
    content: public CodeDefaultValueExpression ();
    parameters: []
  overload: System.CodeDom.CodeDefaultValueExpression.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeDefaultValueExpression.#ctor(System.CodeDom.CodeTypeReference)
  id: '#ctor(System.CodeDom.CodeTypeReference)'
  parent: System.CodeDom.CodeDefaultValueExpression
  langs:
  - csharp
  name: CodeDefaultValueExpression(CodeTypeReference)
  nameWithType: CodeDefaultValueExpression.CodeDefaultValueExpression(CodeTypeReference)
  fullName: System.CodeDom.CodeDefaultValueExpression.CodeDefaultValueExpression(CodeTypeReference)
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.CodeDom.CodeDefaultValueExpression&quot;> </xref> 클래스 지정 된 코드 형식 참조를 사용 합니다."
  syntax:
    content: public CodeDefaultValueExpression (System.CodeDom.CodeTypeReference type);
    parameters:
    - id: type
      type: System.CodeDom.CodeTypeReference
      description: "A <xref href=&quot;System.CodeDom.CodeTypeReference&quot;> </xref> 값 형식에 대 한 참조를 지정 하는 합니다."
  overload: System.CodeDom.CodeDefaultValueExpression.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeDefaultValueExpression.Type
  id: Type
  parent: System.CodeDom.CodeDefaultValueExpression
  langs:
  - csharp
  name: Type
  nameWithType: CodeDefaultValueExpression.Type
  fullName: System.CodeDom.CodeDefaultValueExpression.Type
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "기본 값에 대 한 데이터 형식 참조를 가져오거나 설정 합니다."
  syntax:
    content: public System.CodeDom.CodeTypeReference Type { get; set; }
    return:
      type: System.CodeDom.CodeTypeReference
      description: "A <xref href=&quot;System.CodeDom.CodeTypeReference&quot;> </xref> 기본 값 데이터 형식을 나타내는 개체입니다."
  overload: System.CodeDom.CodeDefaultValueExpression.Type*
  exceptions: []
  platform:
  - net462
references:
- uid: System.CodeDom.CodeExpression
  isExternal: false
  name: System.CodeDom.CodeExpression
- uid: System.CodeDom.CodeDefaultValueExpression.#ctor
  parent: System.CodeDom.CodeDefaultValueExpression
  isExternal: false
  name: CodeDefaultValueExpression()
  nameWithType: CodeDefaultValueExpression.CodeDefaultValueExpression()
  fullName: System.CodeDom.CodeDefaultValueExpression.CodeDefaultValueExpression()
- uid: System.CodeDom.CodeDefaultValueExpression.#ctor(System.CodeDom.CodeTypeReference)
  parent: System.CodeDom.CodeDefaultValueExpression
  isExternal: false
  name: CodeDefaultValueExpression(CodeTypeReference)
  nameWithType: CodeDefaultValueExpression.CodeDefaultValueExpression(CodeTypeReference)
  fullName: System.CodeDom.CodeDefaultValueExpression.CodeDefaultValueExpression(CodeTypeReference)
- uid: System.CodeDom.CodeTypeReference
  parent: System.CodeDom
  isExternal: false
  name: CodeTypeReference
  nameWithType: CodeTypeReference
  fullName: System.CodeDom.CodeTypeReference
- uid: System.CodeDom.CodeDefaultValueExpression.Type
  parent: System.CodeDom.CodeDefaultValueExpression
  isExternal: false
  name: Type
  nameWithType: CodeDefaultValueExpression.Type
  fullName: System.CodeDom.CodeDefaultValueExpression.Type
- uid: System.CodeDom.CodeDefaultValueExpression.#ctor*
  parent: System.CodeDom.CodeDefaultValueExpression
  isExternal: false
  name: CodeDefaultValueExpression
  nameWithType: CodeDefaultValueExpression.CodeDefaultValueExpression
- uid: System.CodeDom.CodeDefaultValueExpression.Type*
  parent: System.CodeDom.CodeDefaultValueExpression
  isExternal: false
  name: Type
  nameWithType: CodeDefaultValueExpression.Type
