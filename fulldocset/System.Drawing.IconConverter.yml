### YamlMime:ManagedReference
items:
- uid: System.Drawing.IconConverter
  id: IconConverter
  children:
  - System.Drawing.IconConverter.#ctor
  - System.Drawing.IconConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.Drawing.IconConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.Drawing.IconConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.Drawing.IconConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  langs:
  - csharp
  name: IconConverter
  nameWithType: IconConverter
  fullName: System.Drawing.IconConverter
  type: Class
  summary: "변환 된 <xref href=&quot;System.Drawing.Icon&quot;> </xref> 데이터 형식에서 개체를 다른 합니다. 이 클래스를 통해 액세스는 <xref href=&quot;System.ComponentModel.TypeDescriptor&quot;> </xref> 개체입니다."
  syntax:
    content: 'public class IconConverter : System.ComponentModel.ExpandableObjectConverter'
  inheritance:
  - System.Object
  - System.ComponentModel.TypeConverter
  - System.ComponentModel.ExpandableObjectConverter
  implements: []
  inheritedMembers:
  - System.ComponentModel.ExpandableObjectConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  - System.ComponentModel.ExpandableObjectConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)
  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)
  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)
  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)
  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.GetProperties(System.Object)
  - System.ComponentModel.TypeConverter.GetPropertiesSupported
  - System.ComponentModel.TypeConverter.GetStandardValues
  - System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.IsValid(System.Object)
  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])
  platform:
  - net462
- uid: System.Drawing.IconConverter.#ctor
  id: '#ctor'
  parent: System.Drawing.IconConverter
  langs:
  - csharp
  name: IconConverter()
  nameWithType: IconConverter.IconConverter()
  fullName: System.Drawing.IconConverter.IconConverter()
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Drawing.IconConverter&quot;> </xref> 클래스입니다."
  syntax:
    content: public IconConverter ();
    parameters: []
  overload: System.Drawing.IconConverter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.IconConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Drawing.IconConverter
  langs:
  - csharp
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: IconConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.Drawing.IconConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "결정 여부이 <xref href=&quot;System.Drawing.IconConverter&quot;> </xref> 에 지정 된 형식의 인스턴스를 변환할 수는 <xref href=&quot;System.Drawing.Icon&quot;> </xref>, 지정된 된 컨텍스트를 사용 하 여 합니다."
  remarks: "이 메서드가 반환 `true` 경우에만 `sourceType` 바이트 배열로 같습니다."
  syntax:
    content: public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> 형식 컨텍스트를 제공 하는 합니다."
    - id: sourceType
      type: System.Type
      description: "A <xref:System.Type>변환할 원본 형식을 지정 하는.</xref:System.Type>"
    return:
      type: System.Boolean
      description: "이 메서드가 반환 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> 이 <xref href=&quot;System.Drawing.IconConverter&quot;> </xref> 에서 변환을 수행할 수, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Drawing.IconConverter.CanConvertFrom*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.IconConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Drawing.IconConverter
  langs:
  - csharp
  name: CanConvertTo(ITypeDescriptorContext,Type)
  nameWithType: IconConverter.CanConvertTo(ITypeDescriptorContext,Type)
  fullName: System.Drawing.IconConverter.CanConvertTo(ITypeDescriptorContext,Type)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "결정 여부이 <xref href=&quot;System.Drawing.IconConverter&quot;> </xref> 변환할 수는 <xref href=&quot;System.Drawing.Icon&quot;> </xref> 인스턴스로 지정 된 형식의 지정된 된 컨텍스트를 사용 하 여 합니다."
  remarks: "이 메서드가 반환 `true` 경우에만 `destinationType` 은 바이트 배열 또는 문자열과 같습니다."
  syntax:
    content: public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> 형식 컨텍스트를 제공 하는 합니다."
    - id: destinationType
      type: System.Type
      description: "A <xref:System.Type>를 변환할 형식을 지정 하는.</xref:System.Type>"
    return:
      type: System.Boolean
      description: "이 메서드가 반환 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> 이 <xref href=&quot;System.Drawing.IconConverter&quot;> </xref> 에서 변환을 수행할 수, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Drawing.IconConverter.CanConvertTo*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.IconConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.Drawing.IconConverter
  langs:
  - csharp
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: IconConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.Drawing.IconConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "지정된 된 개체를 변환는 <xref href=&quot;System.Drawing.Icon&quot;> </xref>합니다."
  syntax:
    content: public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> 형식 컨텍스트를 제공 하는 합니다."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "A <xref:System.Globalization.CultureInfo>특정 문화권에 대 한 정보를 보유 하는.</xref:System.Globalization.CultureInfo>"
    - id: value
      type: System.Object
      description: "<xref:System.Object>변환 될 수 있습니다.</xref:System.Object>"
    return:
      type: System.Object
      description: "이 메서드가 성공 하면 반환는 <xref href=&quot;System.Drawing.Icon&quot;> </xref> 지정된 된 개체를 변환 하 여 만든 것입니다. 그렇지 않으면 예외를 throw 합니다."
  overload: System.Drawing.IconConverter.ConvertFrom*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "변환을 수행할 수 없습니다."
  platform:
  - net462
- uid: System.Drawing.IconConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  id: ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.Drawing.IconConverter
  langs:
  - csharp
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: IconConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.Drawing.IconConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "변환는 <xref href=&quot;System.Drawing.Icon&quot;> </xref> (또는으로 캐스팅 될 수 있는 개체는 <xref href=&quot;System.Drawing.Icon&quot;> </xref>)를 지정 된 형식입니다."
  remarks: "기본 구현 호출은 <xref:System.Object.ToString%2A>개체의 메서드는 개체가 올바른지와 대상 형식이 `string`.</xref:System.Object.ToString%2A> 이 메서드가 대상 형식으로 변환할 수 없는 경우 throw 한 <xref:System.NotSupportedException>예외.</xref:System.NotSupportedException>"
  syntax:
    content: public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> 형식 컨텍스트를 제공 하는 합니다."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "A <xref:System.Globalization.CultureInfo>특정 문화권에서 사용 되는 형식 지정 규칙을 지정 하는 개체입니다.</xref:System.Globalization.CultureInfo>"
    - id: value
      type: System.Object
      description: "변환할 개체입니다. 이 개체가 유형 아이콘 또는으로 캐스팅 될 수 있는 형식 이어야 합니다 <xref href=&quot;System.Drawing.Icon&quot;> </xref>합니다."
    - id: destinationType
      type: System.Type
      description: "아이콘을 변환할 형식입니다."
    return:
      type: System.Object
      description: "이 메서드는 변환 된 개체를 반환합니다."
  overload: System.Drawing.IconConverter.ConvertTo*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "변환을 수행할 수 없습니다."
  platform:
  - net462
references:
- uid: System.ComponentModel.ExpandableObjectConverter
  isExternal: false
  name: System.ComponentModel.ExpandableObjectConverter
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Drawing.IconConverter.#ctor
  parent: System.Drawing.IconConverter
  isExternal: false
  name: IconConverter()
  nameWithType: IconConverter.IconConverter()
  fullName: System.Drawing.IconConverter.IconConverter()
- uid: System.Drawing.IconConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Drawing.IconConverter
  isExternal: false
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: IconConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.Drawing.IconConverter.CanConvertFrom(ITypeDescriptorContext,Type)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.ITypeDescriptorContext
  parent: System.ComponentModel
  isExternal: false
  name: ITypeDescriptorContext
  nameWithType: ITypeDescriptorContext
  fullName: System.ComponentModel.ITypeDescriptorContext
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Drawing.IconConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Drawing.IconConverter
  isExternal: false
  name: CanConvertTo(ITypeDescriptorContext,Type)
  nameWithType: IconConverter.CanConvertTo(ITypeDescriptorContext,Type)
  fullName: System.Drawing.IconConverter.CanConvertTo(ITypeDescriptorContext,Type)
- uid: System.Drawing.IconConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.Drawing.IconConverter
  isExternal: false
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: IconConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.Drawing.IconConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Drawing.IconConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.Drawing.IconConverter
  isExternal: false
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: IconConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.Drawing.IconConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
- uid: System.Drawing.IconConverter.#ctor*
  parent: System.Drawing.IconConverter
  isExternal: false
  name: IconConverter
  nameWithType: IconConverter.IconConverter
- uid: System.Drawing.IconConverter.CanConvertFrom*
  parent: System.Drawing.IconConverter
  isExternal: false
  name: CanConvertFrom
  nameWithType: IconConverter.CanConvertFrom
- uid: System.Drawing.IconConverter.CanConvertTo*
  parent: System.Drawing.IconConverter
  isExternal: false
  name: CanConvertTo
  nameWithType: IconConverter.CanConvertTo
- uid: System.Drawing.IconConverter.ConvertFrom*
  parent: System.Drawing.IconConverter
  isExternal: false
  name: ConvertFrom
  nameWithType: IconConverter.ConvertFrom
- uid: System.Drawing.IconConverter.ConvertTo*
  parent: System.Drawing.IconConverter
  isExternal: false
  name: ConvertTo
  nameWithType: IconConverter.ConvertTo
