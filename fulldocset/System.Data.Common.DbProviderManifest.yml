### YamlMime:ManagedReference
items:
- uid: System.Data.Common.DbProviderManifest
  id: DbProviderManifest
  children:
  - System.Data.Common.DbProviderManifest.#ctor
  - System.Data.Common.DbProviderManifest.ConceptualSchemaDefinition
  - System.Data.Common.DbProviderManifest.ConceptualSchemaDefinitionVersion3
  - System.Data.Common.DbProviderManifest.EscapeLikeArgument(System.String)
  - System.Data.Common.DbProviderManifest.GetDbInformation(System.String)
  - System.Data.Common.DbProviderManifest.GetEdmType(System.Data.Metadata.Edm.TypeUsage)
  - System.Data.Common.DbProviderManifest.GetFacetDescriptions(System.Data.Metadata.Edm.EdmType)
  - System.Data.Common.DbProviderManifest.GetInformation(System.String)
  - System.Data.Common.DbProviderManifest.GetStoreFunctions
  - System.Data.Common.DbProviderManifest.GetStoreType(System.Data.Metadata.Edm.TypeUsage)
  - System.Data.Common.DbProviderManifest.GetStoreTypes
  - System.Data.Common.DbProviderManifest.NamespaceName
  - System.Data.Common.DbProviderManifest.StoreSchemaDefinition
  - System.Data.Common.DbProviderManifest.StoreSchemaDefinitionVersion3
  - System.Data.Common.DbProviderManifest.StoreSchemaMapping
  - System.Data.Common.DbProviderManifest.StoreSchemaMappingVersion3
  - System.Data.Common.DbProviderManifest.SupportsEscapingLikeArgument(System.Char@)
  langs:
  - csharp
  name: DbProviderManifest
  nameWithType: DbProviderManifest
  fullName: System.Data.Common.DbProviderManifest
  type: Class
  summary: "모든 CLR 형식 형식에 대 한 메타 데이터 인터페이스"
  remarks: "이 콘텐츠 없음 업데이트 됩니다. 여기에 자료를 추가 하지 마십시오."
  syntax:
    content: public abstract class DbProviderManifest
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.Common.DbProviderManifest.#ctor
  id: '#ctor'
  parent: System.Data.Common.DbProviderManifest
  langs:
  - csharp
  name: DbProviderManifest()
  nameWithType: DbProviderManifest.DbProviderManifest()
  fullName: System.Data.Common.DbProviderManifest.DbProviderManifest()
  type: Constructor
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Data.Common.DbProviderManifest&quot;> </xref> 클래스입니다."
  syntax:
    content: protected DbProviderManifest ();
    parameters: []
  overload: System.Data.Common.DbProviderManifest.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbProviderManifest.ConceptualSchemaDefinition
  id: ConceptualSchemaDefinition
  parent: System.Data.Common.DbProviderManifest
  langs:
  - csharp
  name: ConceptualSchemaDefinition
  nameWithType: DbProviderManifest.ConceptualSchemaDefinition
  fullName: System.Data.Common.DbProviderManifest.ConceptualSchemaDefinition
  type: Field
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common
  summary: "ConceptualSchemaDefinitionVersion 가져오려는 GetInformation를 전달 하는 값입니다."
  syntax:
    content: public static readonly string ConceptualSchemaDefinition;
    return:
      type: System.String
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbProviderManifest.ConceptualSchemaDefinitionVersion3
  id: ConceptualSchemaDefinitionVersion3
  parent: System.Data.Common.DbProviderManifest
  langs:
  - csharp
  name: ConceptualSchemaDefinitionVersion3
  nameWithType: DbProviderManifest.ConceptualSchemaDefinitionVersion3
  fullName: System.Data.Common.DbProviderManifest.ConceptualSchemaDefinitionVersion3
  type: Field
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common
  summary: "ConceptualSchemaDefinitionVersion3 가져오려는 GetInformation를 전달 하는 값입니다."
  syntax:
    content: public static readonly string ConceptualSchemaDefinitionVersion3;
    return:
      type: System.String
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbProviderManifest.EscapeLikeArgument(System.String)
  id: EscapeLikeArgument(System.String)
  parent: System.Data.Common.DbProviderManifest
  langs:
  - csharp
  name: EscapeLikeArgument(String)
  nameWithType: DbProviderManifest.EscapeLikeArgument(String)
  fullName: System.Data.Common.DbProviderManifest.EscapeLikeArgument(String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common
  summary: "공급자 기록기는 인수 이름에 와일드 카드와 이스케이프 이스케이프 문자를 반환 하려면이 메서드를 재정의 해야 합니다. 이 메서드는 SupportsEscapingLikeArgument true를 반환 하는 경우에 사용 됩니다."
  syntax:
    content: public virtual string EscapeLikeArgument (string argument);
    parameters:
    - id: argument
      type: System.String
      description: "이스케이프 인수입니다."
    return:
      type: System.String
      description: "인수 이름에 와일드 카드와 이스케이프 문자를 이스케이프합니다."
  overload: System.Data.Common.DbProviderManifest.EscapeLikeArgument*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbProviderManifest.GetDbInformation(System.String)
  id: GetDbInformation(System.String)
  parent: System.Data.Common.DbProviderManifest
  langs:
  - csharp
  name: GetDbInformation(String)
  nameWithType: DbProviderManifest.GetDbInformation(String)
  fullName: System.Data.Common.DbProviderManifest.GetDbInformation(String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common
  summary: "파생된 클래스에서 재정의 되 면이 메서드는 공급자 특정 정보를 반환 합니다."
  syntax:
    content: protected abstract System.Xml.XmlReader GetDbInformation (string informationType);
    parameters:
    - id: informationType
      type: System.String
      description: "반환할 정보 유형입니다."
    return:
      type: System.Xml.XmlReader
      description: "기본 데이터에 대 한 매핑을 나타내는 XmlReader 개체에는 카탈로그를 저장 합니다."
  overload: System.Data.Common.DbProviderManifest.GetDbInformation*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbProviderManifest.GetEdmType(System.Data.Metadata.Edm.TypeUsage)
  id: GetEdmType(System.Data.Metadata.Edm.TypeUsage)
  parent: System.Data.Common.DbProviderManifest
  langs:
  - csharp
  name: GetEdmType(TypeUsage)
  nameWithType: DbProviderManifest.GetEdmType(TypeUsage)
  fullName: System.Data.Common.DbProviderManifest.GetEdmType(TypeUsage)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common
  summary: "파생된 클래스에서 재정의 되 면이 메서드는 지정 된 저장소 형식과 해당 형식의 패싯 집합 EDM 형식에 매핑합니다."
  syntax:
    content: public abstract System.Data.Metadata.Edm.TypeUsage GetEdmType (System.Data.Metadata.Edm.TypeUsage storeType);
    parameters:
    - id: storeType
      type: System.Data.Metadata.Edm.TypeUsage
      description: "EDM 형식에 매핑할 수는 저장소 유형 및 해당 형식의 패싯 집합을 설명 하는 TypeUsage 인스턴스."
    return:
      type: System.Data.Metadata.Edm.TypeUsage
      description: "<xref href=&quot;System.Data.Metadata.Edm.TypeUsage&quot;> </xref> EDM 형식 및 해당 형식의 패싯 집합을 설명 하는 인스턴스."
  overload: System.Data.Common.DbProviderManifest.GetEdmType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbProviderManifest.GetFacetDescriptions(System.Data.Metadata.Edm.EdmType)
  id: GetFacetDescriptions(System.Data.Metadata.Edm.EdmType)
  parent: System.Data.Common.DbProviderManifest
  langs:
  - csharp
  name: GetFacetDescriptions(EdmType)
  nameWithType: DbProviderManifest.GetFacetDescriptions(EdmType)
  fullName: System.Data.Common.DbProviderManifest.GetFacetDescriptions(EdmType)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common
  summary: "특정 형식에 대 한 FacetDescription 개체를 반환합니다."
  syntax:
    content: public abstract System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Metadata.Edm.FacetDescription> GetFacetDescriptions (System.Data.Metadata.Edm.EdmType edmType);
    parameters:
    - id: edmType
      type: System.Data.Metadata.Edm.EdmType
      description: "에 대 한 패싯 설명을 반환 하는 EDM 형식입니다."
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Metadata.Edm.FacetDescription}
      description: "지정된 된 EDM 형식에 대 한 FacetDescription 개체입니다."
  overload: System.Data.Common.DbProviderManifest.GetFacetDescriptions*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbProviderManifest.GetInformation(System.String)
  id: GetInformation(System.String)
  parent: System.Data.Common.DbProviderManifest
  langs:
  - csharp
  name: GetInformation(String)
  nameWithType: DbProviderManifest.GetInformation(String)
  fullName: System.Data.Common.DbProviderManifest.GetInformation(String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common
  summary: "공급자 관련 정보를 가져옵니다."
  syntax:
    content: public System.Xml.XmlReader GetInformation (string informationType);
    parameters:
    - id: informationType
      type: System.String
      description: "반환할 정보 유형입니다."
    return:
      type: System.Xml.XmlReader
      description: "공급자 관련 정보입니다."
  overload: System.Data.Common.DbProviderManifest.GetInformation*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbProviderManifest.GetStoreFunctions
  id: GetStoreFunctions
  parent: System.Data.Common.DbProviderManifest
  langs:
  - csharp
  name: GetStoreFunctions()
  nameWithType: DbProviderManifest.GetStoreFunctions()
  fullName: System.Data.Common.DbProviderManifest.GetStoreFunctions()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common
  summary: "파생된 클래스에서 재정의 되 면 공급자 매니페스트에서 지원 되는 EDM 함수가의 컬렉션을 반환 합니다."
  syntax:
    content: public abstract System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Metadata.Edm.EdmFunction> GetStoreFunctions ();
    parameters: []
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Metadata.Edm.EdmFunction}
      description: "EDM 함수의 컬렉션입니다."
  overload: System.Data.Common.DbProviderManifest.GetStoreFunctions*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbProviderManifest.GetStoreType(System.Data.Metadata.Edm.TypeUsage)
  id: GetStoreType(System.Data.Metadata.Edm.TypeUsage)
  parent: System.Data.Common.DbProviderManifest
  langs:
  - csharp
  name: GetStoreType(TypeUsage)
  nameWithType: DbProviderManifest.GetStoreType(TypeUsage)
  fullName: System.Data.Common.DbProviderManifest.GetStoreType(TypeUsage)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common
  summary: "파생된 클래스에서 재정의 되 면이 메서드는 지정 된 EDM 형식과 해당 형식의 패싯 집합 저장소 형식으로 매핑합니다."
  syntax:
    content: public abstract System.Data.Metadata.Edm.TypeUsage GetStoreType (System.Data.Metadata.Edm.TypeUsage edmType);
    parameters:
    - id: edmType
      type: System.Data.Metadata.Edm.TypeUsage
      description: "EDM 형식 및 해당 형식의 패싯 집합 저장소 형식에 매핑할 수를 설명 하는 TypeUsage 인스턴스."
    return:
      type: System.Data.Metadata.Edm.TypeUsage
      description: "저장소 유형 및 해당 형식의 패싯 집합에 설명 하는 TypeUsage 인스턴스."
  overload: System.Data.Common.DbProviderManifest.GetStoreType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbProviderManifest.GetStoreTypes
  id: GetStoreTypes
  parent: System.Data.Common.DbProviderManifest
  langs:
  - csharp
  name: GetStoreTypes()
  nameWithType: DbProviderManifest.GetStoreTypes()
  fullName: System.Data.Common.DbProviderManifest.GetStoreTypes()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common
  summary: "파생된 클래스에서 재정의 되 면 데이터 원본에 의해 지원 되는 기본 형식 집합을 반환 합니다."
  syntax:
    content: public abstract System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Metadata.Edm.PrimitiveType> GetStoreTypes ();
    parameters: []
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Metadata.Edm.PrimitiveType}
      description: "데이터 원본에 의해 지원 되는 형식의 집합입니다."
  overload: System.Data.Common.DbProviderManifest.GetStoreTypes*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbProviderManifest.NamespaceName
  id: NamespaceName
  parent: System.Data.Common.DbProviderManifest
  langs:
  - csharp
  name: NamespaceName
  nameWithType: DbProviderManifest.NamespaceName
  fullName: System.Data.Common.DbProviderManifest.NamespaceName
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common
  summary: "이 공급자 매니페스트에서 사용 하는 네임 스페이스를 가져옵니다."
  syntax:
    content: public abstract string NamespaceName { get; }
    return:
      type: System.String
      description: "이 공급자 매니페스트에서 사용 하는 네임 스페이스입니다."
  overload: System.Data.Common.DbProviderManifest.NamespaceName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbProviderManifest.StoreSchemaDefinition
  id: StoreSchemaDefinition
  parent: System.Data.Common.DbProviderManifest
  langs:
  - csharp
  name: StoreSchemaDefinition
  nameWithType: DbProviderManifest.StoreSchemaDefinition
  fullName: System.Data.Common.DbProviderManifest.StoreSchemaDefinition
  type: Field
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common
  summary: "StoreSchemaDefinitionVersion 가져오려는 GetInformation를 전달 하는 값입니다."
  syntax:
    content: public static readonly string StoreSchemaDefinition;
    return:
      type: System.String
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbProviderManifest.StoreSchemaDefinitionVersion3
  id: StoreSchemaDefinitionVersion3
  parent: System.Data.Common.DbProviderManifest
  langs:
  - csharp
  name: StoreSchemaDefinitionVersion3
  nameWithType: DbProviderManifest.StoreSchemaDefinitionVersion3
  fullName: System.Data.Common.DbProviderManifest.StoreSchemaDefinitionVersion3
  type: Field
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common
  summary: "StoreSchemaDefinitionVersion3 가져오려는 GetInformation를 전달 하는 값입니다."
  syntax:
    content: public static readonly string StoreSchemaDefinitionVersion3;
    return:
      type: System.String
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbProviderManifest.StoreSchemaMapping
  id: StoreSchemaMapping
  parent: System.Data.Common.DbProviderManifest
  langs:
  - csharp
  name: StoreSchemaMapping
  nameWithType: DbProviderManifest.StoreSchemaMapping
  fullName: System.Data.Common.DbProviderManifest.StoreSchemaMapping
  type: Field
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common
  summary: "StoreSchemaMappingVersion 가져오려는 GetInformation를 전달 하는 값입니다."
  syntax:
    content: public static readonly string StoreSchemaMapping;
    return:
      type: System.String
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbProviderManifest.StoreSchemaMappingVersion3
  id: StoreSchemaMappingVersion3
  parent: System.Data.Common.DbProviderManifest
  langs:
  - csharp
  name: StoreSchemaMappingVersion3
  nameWithType: DbProviderManifest.StoreSchemaMappingVersion3
  fullName: System.Data.Common.DbProviderManifest.StoreSchemaMappingVersion3
  type: Field
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common
  summary: "StoreSchemaMappingVersion3 가져오려는 GetInformation를 전달 하는 값입니다."
  syntax:
    content: public static readonly string StoreSchemaMappingVersion3;
    return:
      type: System.String
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbProviderManifest.SupportsEscapingLikeArgument(System.Char@)
  id: SupportsEscapingLikeArgument(System.Char@)
  parent: System.Data.Common.DbProviderManifest
  langs:
  - csharp
  name: SupportsEscapingLikeArgument(Char)
  nameWithType: DbProviderManifest.SupportsEscapingLikeArgument(Char)
  fullName: System.Data.Common.DbProviderManifest.SupportsEscapingLikeArgument(Char)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common
  summary: "공급자가 Like 식의 패턴으로 사용 하도록 이스케이프 문자열을 지원 하는 경우를 나타냅니다."
  syntax:
    content: public virtual bool SupportsEscapingLikeArgument (out char escapeCharacter);
    parameters:
    - id: escapeCharacter
      type: System.Char
      description: "이스케이프 문자를 이스케이프 문자로 사용 되는 공급자를 지원 하는 경우."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>이 공급자에 이스케이프 문자열을; Like 식에서 패턴으로 사용 하도록 지 원하는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Data.Common.DbProviderManifest.SupportsEscapingLikeArgument*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Data.Common.DbProviderManifest.#ctor
  parent: System.Data.Common.DbProviderManifest
  isExternal: false
  name: DbProviderManifest()
  nameWithType: DbProviderManifest.DbProviderManifest()
  fullName: System.Data.Common.DbProviderManifest.DbProviderManifest()
- uid: System.Data.Common.DbProviderManifest.ConceptualSchemaDefinition
  parent: System.Data.Common.DbProviderManifest
  isExternal: false
  name: ConceptualSchemaDefinition
  nameWithType: DbProviderManifest.ConceptualSchemaDefinition
  fullName: System.Data.Common.DbProviderManifest.ConceptualSchemaDefinition
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Common.DbProviderManifest.ConceptualSchemaDefinitionVersion3
  parent: System.Data.Common.DbProviderManifest
  isExternal: false
  name: ConceptualSchemaDefinitionVersion3
  nameWithType: DbProviderManifest.ConceptualSchemaDefinitionVersion3
  fullName: System.Data.Common.DbProviderManifest.ConceptualSchemaDefinitionVersion3
- uid: System.Data.Common.DbProviderManifest.EscapeLikeArgument(System.String)
  parent: System.Data.Common.DbProviderManifest
  isExternal: false
  name: EscapeLikeArgument(String)
  nameWithType: DbProviderManifest.EscapeLikeArgument(String)
  fullName: System.Data.Common.DbProviderManifest.EscapeLikeArgument(String)
- uid: System.Data.Common.DbProviderManifest.GetDbInformation(System.String)
  parent: System.Data.Common.DbProviderManifest
  isExternal: false
  name: GetDbInformation(String)
  nameWithType: DbProviderManifest.GetDbInformation(String)
  fullName: System.Data.Common.DbProviderManifest.GetDbInformation(String)
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Data.Common.DbProviderManifest.GetEdmType(System.Data.Metadata.Edm.TypeUsage)
  parent: System.Data.Common.DbProviderManifest
  isExternal: false
  name: GetEdmType(TypeUsage)
  nameWithType: DbProviderManifest.GetEdmType(TypeUsage)
  fullName: System.Data.Common.DbProviderManifest.GetEdmType(TypeUsage)
- uid: System.Data.Metadata.Edm.TypeUsage
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: TypeUsage
  nameWithType: TypeUsage
  fullName: System.Data.Metadata.Edm.TypeUsage
- uid: System.Data.Common.DbProviderManifest.GetFacetDescriptions(System.Data.Metadata.Edm.EdmType)
  parent: System.Data.Common.DbProviderManifest
  isExternal: false
  name: GetFacetDescriptions(EdmType)
  nameWithType: DbProviderManifest.GetFacetDescriptions(EdmType)
  fullName: System.Data.Common.DbProviderManifest.GetFacetDescriptions(EdmType)
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Metadata.Edm.FacetDescription}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<FacetDescription>
  nameWithType: ReadOnlyCollection<FacetDescription>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Metadata.Edm.FacetDescription>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Data.Metadata.Edm.FacetDescription>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.Metadata.Edm.FacetDescription
    name: FacetDescription
    nameWithType: FacetDescription
    fullName: FacetDescription
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Metadata.Edm.EdmType
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: EdmType
  nameWithType: EdmType
  fullName: System.Data.Metadata.Edm.EdmType
- uid: System.Data.Common.DbProviderManifest.GetInformation(System.String)
  parent: System.Data.Common.DbProviderManifest
  isExternal: false
  name: GetInformation(String)
  nameWithType: DbProviderManifest.GetInformation(String)
  fullName: System.Data.Common.DbProviderManifest.GetInformation(String)
- uid: System.Data.Common.DbProviderManifest.GetStoreFunctions
  parent: System.Data.Common.DbProviderManifest
  isExternal: false
  name: GetStoreFunctions()
  nameWithType: DbProviderManifest.GetStoreFunctions()
  fullName: System.Data.Common.DbProviderManifest.GetStoreFunctions()
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Metadata.Edm.EdmFunction}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<EdmFunction>
  nameWithType: ReadOnlyCollection<EdmFunction>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Metadata.Edm.EdmFunction>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Data.Metadata.Edm.EdmFunction>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.Metadata.Edm.EdmFunction
    name: EdmFunction
    nameWithType: EdmFunction
    fullName: EdmFunction
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Common.DbProviderManifest.GetStoreType(System.Data.Metadata.Edm.TypeUsage)
  parent: System.Data.Common.DbProviderManifest
  isExternal: false
  name: GetStoreType(TypeUsage)
  nameWithType: DbProviderManifest.GetStoreType(TypeUsage)
  fullName: System.Data.Common.DbProviderManifest.GetStoreType(TypeUsage)
- uid: System.Data.Common.DbProviderManifest.GetStoreTypes
  parent: System.Data.Common.DbProviderManifest
  isExternal: false
  name: GetStoreTypes()
  nameWithType: DbProviderManifest.GetStoreTypes()
  fullName: System.Data.Common.DbProviderManifest.GetStoreTypes()
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Metadata.Edm.PrimitiveType}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<PrimitiveType>
  nameWithType: ReadOnlyCollection<PrimitiveType>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Metadata.Edm.PrimitiveType>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Data.Metadata.Edm.PrimitiveType>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.Metadata.Edm.PrimitiveType
    name: PrimitiveType
    nameWithType: PrimitiveType
    fullName: PrimitiveType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Common.DbProviderManifest.NamespaceName
  parent: System.Data.Common.DbProviderManifest
  isExternal: false
  name: NamespaceName
  nameWithType: DbProviderManifest.NamespaceName
  fullName: System.Data.Common.DbProviderManifest.NamespaceName
- uid: System.Data.Common.DbProviderManifest.StoreSchemaDefinition
  parent: System.Data.Common.DbProviderManifest
  isExternal: false
  name: StoreSchemaDefinition
  nameWithType: DbProviderManifest.StoreSchemaDefinition
  fullName: System.Data.Common.DbProviderManifest.StoreSchemaDefinition
- uid: System.Data.Common.DbProviderManifest.StoreSchemaDefinitionVersion3
  parent: System.Data.Common.DbProviderManifest
  isExternal: false
  name: StoreSchemaDefinitionVersion3
  nameWithType: DbProviderManifest.StoreSchemaDefinitionVersion3
  fullName: System.Data.Common.DbProviderManifest.StoreSchemaDefinitionVersion3
- uid: System.Data.Common.DbProviderManifest.StoreSchemaMapping
  parent: System.Data.Common.DbProviderManifest
  isExternal: false
  name: StoreSchemaMapping
  nameWithType: DbProviderManifest.StoreSchemaMapping
  fullName: System.Data.Common.DbProviderManifest.StoreSchemaMapping
- uid: System.Data.Common.DbProviderManifest.StoreSchemaMappingVersion3
  parent: System.Data.Common.DbProviderManifest
  isExternal: false
  name: StoreSchemaMappingVersion3
  nameWithType: DbProviderManifest.StoreSchemaMappingVersion3
  fullName: System.Data.Common.DbProviderManifest.StoreSchemaMappingVersion3
- uid: System.Data.Common.DbProviderManifest.SupportsEscapingLikeArgument(System.Char@)
  parent: System.Data.Common.DbProviderManifest
  isExternal: false
  name: SupportsEscapingLikeArgument(Char)
  nameWithType: DbProviderManifest.SupportsEscapingLikeArgument(Char)
  fullName: System.Data.Common.DbProviderManifest.SupportsEscapingLikeArgument(Char)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Data.Common.DbProviderManifest.#ctor*
  parent: System.Data.Common.DbProviderManifest
  isExternal: false
  name: DbProviderManifest
  nameWithType: DbProviderManifest.DbProviderManifest
- uid: System.Data.Common.DbProviderManifest.EscapeLikeArgument*
  parent: System.Data.Common.DbProviderManifest
  isExternal: false
  name: EscapeLikeArgument
  nameWithType: DbProviderManifest.EscapeLikeArgument
- uid: System.Data.Common.DbProviderManifest.GetDbInformation*
  parent: System.Data.Common.DbProviderManifest
  isExternal: false
  name: GetDbInformation
  nameWithType: DbProviderManifest.GetDbInformation
- uid: System.Data.Common.DbProviderManifest.GetEdmType*
  parent: System.Data.Common.DbProviderManifest
  isExternal: false
  name: GetEdmType
  nameWithType: DbProviderManifest.GetEdmType
- uid: System.Data.Common.DbProviderManifest.GetFacetDescriptions*
  parent: System.Data.Common.DbProviderManifest
  isExternal: false
  name: GetFacetDescriptions
  nameWithType: DbProviderManifest.GetFacetDescriptions
- uid: System.Data.Common.DbProviderManifest.GetInformation*
  parent: System.Data.Common.DbProviderManifest
  isExternal: false
  name: GetInformation
  nameWithType: DbProviderManifest.GetInformation
- uid: System.Data.Common.DbProviderManifest.GetStoreFunctions*
  parent: System.Data.Common.DbProviderManifest
  isExternal: false
  name: GetStoreFunctions
  nameWithType: DbProviderManifest.GetStoreFunctions
- uid: System.Data.Common.DbProviderManifest.GetStoreType*
  parent: System.Data.Common.DbProviderManifest
  isExternal: false
  name: GetStoreType
  nameWithType: DbProviderManifest.GetStoreType
- uid: System.Data.Common.DbProviderManifest.GetStoreTypes*
  parent: System.Data.Common.DbProviderManifest
  isExternal: false
  name: GetStoreTypes
  nameWithType: DbProviderManifest.GetStoreTypes
- uid: System.Data.Common.DbProviderManifest.NamespaceName*
  parent: System.Data.Common.DbProviderManifest
  isExternal: false
  name: NamespaceName
  nameWithType: DbProviderManifest.NamespaceName
- uid: System.Data.Common.DbProviderManifest.SupportsEscapingLikeArgument*
  parent: System.Data.Common.DbProviderManifest
  isExternal: false
  name: SupportsEscapingLikeArgument
  nameWithType: DbProviderManifest.SupportsEscapingLikeArgument
