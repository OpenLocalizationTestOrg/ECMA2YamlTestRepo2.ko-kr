### YamlMime:ManagedReference
items:
- uid: System.Net.PeerToPeer.ResolveCompletedEventArgs
  id: ResolveCompletedEventArgs
  children:
  - System.Net.PeerToPeer.ResolveCompletedEventArgs.#ctor(System.Net.PeerToPeer.PeerNameRecordCollection,System.Exception,System.Boolean,System.Object)
  - System.Net.PeerToPeer.ResolveCompletedEventArgs.PeerNameRecordCollection
  langs:
  - csharp
  name: ResolveCompletedEventArgs
  nameWithType: ResolveCompletedEventArgs
  fullName: System.Net.PeerToPeer.ResolveCompletedEventArgs
  type: Class
  summary: "와 함께 사용는 <xref href=&quot;System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted&quot;> </xref> 이벤트는 특정 한 확인 요청이 면 신호를 받는 <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> 완료 되었습니다."
  remarks: "ResolveCompletedEventArgs 개체를 사용 하려면 인스턴스화하는 <xref:System.Net.PeerToPeer.PeerNameResolver>개체 및 해결 방법 중 하나를 사용 합니다.</xref:System.Net.PeerToPeer.PeerNameResolver> 비동기 처리를 위해 사용 하 여는 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A>메서드.</xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A>       해결 프로그램에 대 한 쿼리를 클라우드에의 끝에 도달 하는 경우는 <xref:System.Net.PeerToPeer.PeerName>, 항목을 기록의 최대 수에 도달 하면는 <xref:System.Net.PeerToPeer.PeerNameRecordCollection>를 생성, 확인 프로세스를 완료 하는 이벤트가 및 연결 된 대리자에서 ResolveAsync 완료를 발생 합니다.</xref:System.Net.PeerToPeer.PeerNameRecordCollection> </xref:System.Net.PeerToPeer.PeerName> 이벤트는 컬렉션을 반환 하지 않는 비정상적 완료도 발생할 수 있습니다.       이 이벤트는 모든 끝점을 찾은 후 때 한 번만 발생 합니다.       확인자 개체의이 인스턴스에 대 한 모든 참조는이 비동기 확인 요청에 대 한 고유 개발자에 의해 결정 된 식별자는 제공 된 토큰에 맞게 조정 합니다."
  syntax:
    content: 'public class ResolveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs'
  inheritance:
  - System.ComponentModel.AsyncCompletedEventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.ResolveCompletedEventArgs.#ctor(System.Net.PeerToPeer.PeerNameRecordCollection,System.Exception,System.Boolean,System.Object)
  id: '#ctor(System.Net.PeerToPeer.PeerNameRecordCollection,System.Exception,System.Boolean,System.Object)'
  parent: System.Net.PeerToPeer.ResolveCompletedEventArgs
  langs:
  - csharp
  name: ResolveCompletedEventArgs(PeerNameRecordCollection,Exception,Boolean,Object)
  nameWithType: ResolveCompletedEventArgs.ResolveCompletedEventArgs(PeerNameRecordCollection,Exception,Boolean,Object)
  fullName: System.Net.PeerToPeer.ResolveCompletedEventArgs.ResolveCompletedEventArgs(PeerNameRecordCollection,Exception,Boolean,Object)
  type: Constructor
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Net.PeerToPeer.ResolveCompletedEventArgs&quot;> </xref> 클래스입니다."
  syntax:
    content: public ResolveCompletedEventArgs (System.Net.PeerToPeer.PeerNameRecordCollection peerNameRecordCollection, Exception error, bool canceled, object userToken);
    parameters:
    - id: peerNameRecordCollection
      type: System.Net.PeerToPeer.PeerNameRecordCollection
      description: "확인 된 피어 이름과 연결 된 컬렉션입니다."
    - id: error
      type: System.Exception
      description: "오류가 발생 한 경우 예외를 반환 합니다."
    - id: canceled
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>경우는 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync*>그렇지 않으면 작업이 취소 되었으므로 <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>.</xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync*>"
    - id: userToken
      type: System.Object
      description: "사용자 토큰을 지정 하는 경우는 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync*>작업이 시작 되었습니다.</xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync*>"
  overload: System.Net.PeerToPeer.ResolveCompletedEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.ResolveCompletedEventArgs.PeerNameRecordCollection
  id: PeerNameRecordCollection
  parent: System.Net.PeerToPeer.ResolveCompletedEventArgs
  langs:
  - csharp
  name: PeerNameRecordCollection
  nameWithType: ResolveCompletedEventArgs.PeerNameRecordCollection
  fullName: System.Net.PeerToPeer.ResolveCompletedEventArgs.PeerNameRecordCollection
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "가져옵니다는 <xref href=&quot;System.Net.PeerToPeer.PeerNameRecordCollection&quot;> </xref> 확인할 개체입니다."
  remarks: "이 이벤트는이 피어 이름에 대 한 모든 클라우드 쿼리하거나 때나 피어 이름 레코드의 최대 수를 검색할 때 발생 합니다. 피어 이름 레코드 컬렉션에 배치 하 여 발생는 <xref:System.Net.PeerToPeer.ResolveCompletedEventArgs>OnResolveCompleted 메서드 대기 하는 이벤트 인수입니다.</xref:System.Net.PeerToPeer.ResolveCompletedEventArgs>  상태가 변경 되 면 프로세스가 활성화 됩니다.       모든 속성에 대 한 기본 값은 명시적으로 지정 하지 않으면 `null` 참조 형식 및 영 (0) 속성에 대 한 형식에 대 한 `int`합니다. 레코드가 없는 발견 될 경우 `null` 반환 됩니다."
  syntax:
    content: public System.Net.PeerToPeer.PeerNameRecordCollection PeerNameRecordCollection { get; }
    return:
      type: System.Net.PeerToPeer.PeerNameRecordCollection
      description: "<xref href=&quot;System.Net.PeerToPeer.PeerNameRecordCollection&quot;> </xref> 를 해결 하려면이 개체에 대 한 응답에는 한 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync*>특정 작업 <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref>.</xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync*>"
  overload: System.Net.PeerToPeer.ResolveCompletedEventArgs.PeerNameRecordCollection*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.AsyncCompletedEventArgs
  isExternal: false
  name: System.ComponentModel.AsyncCompletedEventArgs
- uid: System.Net.PeerToPeer.ResolveCompletedEventArgs.#ctor(System.Net.PeerToPeer.PeerNameRecordCollection,System.Exception,System.Boolean,System.Object)
  parent: System.Net.PeerToPeer.ResolveCompletedEventArgs
  isExternal: false
  name: ResolveCompletedEventArgs(PeerNameRecordCollection,Exception,Boolean,Object)
  nameWithType: ResolveCompletedEventArgs.ResolveCompletedEventArgs(PeerNameRecordCollection,Exception,Boolean,Object)
  fullName: System.Net.PeerToPeer.ResolveCompletedEventArgs.ResolveCompletedEventArgs(PeerNameRecordCollection,Exception,Boolean,Object)
- uid: System.Net.PeerToPeer.PeerNameRecordCollection
  parent: System.Net.PeerToPeer
  isExternal: false
  name: PeerNameRecordCollection
  nameWithType: PeerNameRecordCollection
  fullName: System.Net.PeerToPeer.PeerNameRecordCollection
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Net.PeerToPeer.ResolveCompletedEventArgs.PeerNameRecordCollection
  parent: System.Net.PeerToPeer.ResolveCompletedEventArgs
  isExternal: false
  name: PeerNameRecordCollection
  nameWithType: ResolveCompletedEventArgs.PeerNameRecordCollection
  fullName: System.Net.PeerToPeer.ResolveCompletedEventArgs.PeerNameRecordCollection
- uid: System.Net.PeerToPeer.ResolveCompletedEventArgs.#ctor*
  parent: System.Net.PeerToPeer.ResolveCompletedEventArgs
  isExternal: false
  name: ResolveCompletedEventArgs
  nameWithType: ResolveCompletedEventArgs.ResolveCompletedEventArgs
- uid: System.Net.PeerToPeer.ResolveCompletedEventArgs.PeerNameRecordCollection*
  parent: System.Net.PeerToPeer.ResolveCompletedEventArgs
  isExternal: false
  name: PeerNameRecordCollection
  nameWithType: ResolveCompletedEventArgs.PeerNameRecordCollection
