### YamlMime:ManagedReference
items:
- uid: System.Data.OracleClient.OracleConnection
  id: OracleConnection
  children:
  - System.Data.OracleClient.OracleConnection.#ctor
  - System.Data.OracleClient.OracleConnection.#ctor(System.String)
  - System.Data.OracleClient.OracleConnection.BeginDbTransaction(System.Data.IsolationLevel)
  - System.Data.OracleClient.OracleConnection.BeginTransaction
  - System.Data.OracleClient.OracleConnection.BeginTransaction(System.Data.IsolationLevel)
  - System.Data.OracleClient.OracleConnection.ChangeDatabase(System.String)
  - System.Data.OracleClient.OracleConnection.ClearAllPools
  - System.Data.OracleClient.OracleConnection.ClearPool(System.Data.OracleClient.OracleConnection)
  - System.Data.OracleClient.OracleConnection.Close
  - System.Data.OracleClient.OracleConnection.ConnectionString
  - System.Data.OracleClient.OracleConnection.ConnectionTimeout
  - System.Data.OracleClient.OracleConnection.CreateCommand
  - System.Data.OracleClient.OracleConnection.CreateDbCommand
  - System.Data.OracleClient.OracleConnection.Database
  - System.Data.OracleClient.OracleConnection.DataSource
  - System.Data.OracleClient.OracleConnection.Dispose(System.Boolean)
  - System.Data.OracleClient.OracleConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)
  - System.Data.OracleClient.OracleConnection.EnlistTransaction(System.Transactions.Transaction)
  - System.Data.OracleClient.OracleConnection.GetSchema
  - System.Data.OracleClient.OracleConnection.GetSchema(System.String)
  - System.Data.OracleClient.OracleConnection.GetSchema(System.String,System.String[])
  - System.Data.OracleClient.OracleConnection.InfoMessage
  - System.Data.OracleClient.OracleConnection.Open
  - System.Data.OracleClient.OracleConnection.ServerVersion
  - System.Data.OracleClient.OracleConnection.State
  - System.Data.OracleClient.OracleConnection.System#ICloneable#Clone
  langs:
  - csharp
  name: OracleConnection
  nameWithType: OracleConnection
  fullName: System.Data.OracleClient.OracleConnection
  type: Class
  summary: "데이터베이스에 대해 열린 연결을 나타냅니다. 이 클래스는 상속 될 수 없습니다."
  remarks: "이 형식은 사용 되지 않으며.NET Framework의 이후 버전에서 제거 됩니다. 자세한 내용은 참조 [Oracle 및 ADO.NET](~/add/includes/ajax-current-ext-md.md)합니다.       OracleConnection 개체 Oracle 데이터베이스에 고유한 연결을 나타냅니다. 클라이언트/서버 데이터베이스 시스템의 경우 네트워크 연결 서버에 해당 합니다.       OracleConnection 개체의 인스턴스를 만드는 응용 프로그램을 모든 직접 및 간접 호출자가 코드에 적합 한 권한을 갖도록 요구 하는 선언적 이거나 명령 보안 요청을 설정할 수 있습니다. OracleConnection 사용 하 여 보안 요청을 만듭니다는 <xref:System.Data.OracleClient.OraclePermission>개체입니다.</xref:System.Data.OracleClient.OraclePermission> 사용자가 해당 코드를 사용 하 여 적절 한 권한이 있는지 확인할 수는 <xref:System.Data.OracleClient.OraclePermissionAttribute>개체입니다.</xref:System.Data.OracleClient.OraclePermissionAttribute> 사용자와 관리자가 컴퓨터, 사용자 및 엔터프라이즈 수준에서 보안 정책을 수정 하려면 코드 액세스 보안 정책 도구 (Caspol.exe) 사용할 수 있습니다. 자세한 내용은 참조 [보안](~/add/includes/ajax-current-ext-md.md)합니다.      > [!NOTE] > 달리는 **연결** 개체는 다른.NET Framework 데이터 공급자 (SQL Server, OLE DB 및 ODBC), OracleConnection 지원 하지 않습니다는 <xref:System.Data.OracleClient.OracleConnection.ConnectionTimeout%2A>속성.</xref:System.Data.OracleClient.OracleConnection.ConnectionTimeout%2A> 속성 또는 연결 문자열에 연결 제한 시간을 설정 해도 아무런 영향이 없습니다 개이고 반환 되는 값은 항상&0;입니다. OracleConnection를 지원 하지 않습니다는 <xref:System.Data.OracleClient.OracleConnection.Database%2A>속성 또는 <xref:System.Data.OracleClient.OracleConnection.ChangeDatabase%2A>메서드.</xref:System.Data.OracleClient.OracleConnection.ChangeDatabase%2A> </xref:System.Data.OracleClient.OracleConnection.Database%2A>       OracleConnection 개체 범위를 벗어나면 계속 열려 있습니다. 따라서 항상 닫아야 OracleConnection 개체를 호출 하 여 <xref:System.Data.OracleClient.OracleConnection.Close%2A>또는 **Dispose**, 또는 OracleConnection 개체 내에서 사용 하 여 한 `Using` 문.</xref:System.Data.OracleClient.OracleConnection.Close%2A> 이렇게 하지 않으면 가비지 컬렉션이 해제 되지 않습니다 즉시 합니다. 이러한 지연을 최대 연결 수에 도달한 후에 가비지 수집기에 의해 삭제 될 연결 수가 대기 하는 동안 오류가 발생할 수 있습니다. 이와 반대로 호출 하 여 연결을 닫는 <xref:System.Data.OracleClient.OracleConnection.Close%2A>확장성 하 고 전체 응용 프로그램 성능을 향상 시키는 네이티브 리소스를 보다 효율적으로 사용 합니다.</xref:System.Data.OracleClient.OracleConnection.Close%2A> 내에서 연결을 열고 연결이 항상 종료 되도록 한 `Using` 블록입니다.      > [!NOTE] > 고성능 응용 프로그램을 배포 종종 하려면 연결 풀링을 사용 합니다. 그러나.NET Framework Data Provider for Oracle을 사용 하면 않아도 공급자 자동으로이 관리 하기 때문에 연결 풀링을 사용 하도록 합니다."
  example:
  - "The following example creates an <xref:System.Data.OracleClient.OracleCommand> and an OracleConnection. The OracleConnection is opened and set as the <xref:System.Data.OracleClient.OracleCommand.Connection%2A?displayProperty=fullName> property. The example then calls <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A>, and closes the connection. To accomplish this, the <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A> is passed a connection string and a query string that is an SQL INSERT statement.  \n  \n [!code-vb[Classic WebData OracleConnection#1](~/add/codesnippet/visualbasic/t-system.data.oracleclie_5_1.vb)]\n [!code-cs[Classic WebData OracleConnection#1](~/add/codesnippet/csharp/t-system.data.oracleclie_5_1.cs)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("InfoMessage")]

      [System.Obsolete("OracleConnection has been deprecated. http://go.microsoft.com/fwlink/?LinkID=144260", false)]

      public sealed class OracleConnection : System.Data.Common.DbConnection, ICloneable
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Data.Common.DbConnection
  implements:
  - System.ICloneable
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.Data.Common.DbConnection.DbProviderFactory
  - System.Data.Common.DbConnection.OnStateChange(System.Data.StateChangeEventArgs)
  - System.Data.Common.DbConnection.OpenAsync
  - System.Data.Common.DbConnection.OpenAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbConnection.StateChange
  - System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction
  - System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction(System.Data.IsolationLevel)
  - System.Data.Common.DbConnection.System#Data#IDbConnection#CreateCommand
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.#ctor
  id: '#ctor'
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: OracleConnection()
  nameWithType: OracleConnection.OracleConnection()
  fullName: System.Data.OracleClient.OracleConnection.OracleConnection()
  type: Constructor
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Data.OracleClient.OracleConnection&quot;> </xref>합니다."
  remarks: ''
  example:
  - "The following example creates and opens an <xref:System.Data.OracleClient.OracleConnection>.  \n  \n [!code-vb[Classic WebData OracleConnection.OracleConnection1#1](~/add/codesnippet/visualbasic/m-system.data.oracleclie_0_1.vb)]\n [!code-cs[Classic WebData OracleConnection.OracleConnection1#1](~/add/codesnippet/csharp/m-system.data.oracleclie_0_1.cs)]"
  syntax:
    content: public OracleConnection ();
    parameters: []
  overload: System.Data.OracleClient.OracleConnection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: OracleConnection(String)
  nameWithType: OracleConnection.OracleConnection(String)
  fullName: System.Data.OracleClient.OracleConnection.OracleConnection(String)
  type: Constructor
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Data.OracleClient.OracleConnection&quot;> </xref> 지정 된 연결 문자열을 사용 합니다."
  remarks: ''
  example:
  - "The following example creates and opens an <xref:System.Data.OracleClient.OracleConnection>.  \n  \n [!code-vb[Classic WebData OracleConnection.OracleConnection1#1](~/add/codesnippet/visualbasic/m-system.data.oracleclie_9_1.vb)]\n [!code-cs[Classic WebData OracleConnection.OracleConnection1#1](~/add/codesnippet/csharp/m-system.data.oracleclie_9_1.cs)]"
  syntax:
    content: public OracleConnection (string connectionString);
    parameters:
    - id: connectionString
      type: System.String
      description: "데이터베이스를 열지 사용 되는 연결 합니다."
  overload: System.Data.OracleClient.OracleConnection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.BeginDbTransaction(System.Data.IsolationLevel)
  id: BeginDbTransaction(System.Data.IsolationLevel)
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: BeginDbTransaction(IsolationLevel)
  nameWithType: OracleConnection.BeginDbTransaction(IsolationLevel)
  fullName: System.Data.OracleClient.OracleConnection.BeginDbTransaction(IsolationLevel)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  syntax:
    content: protected override System.Data.Common.DbTransaction BeginDbTransaction (System.Data.IsolationLevel isolationLevel);
    parameters:
    - id: isolationLevel
      type: System.Data.IsolationLevel
      description: "추가할 수 있습니다."
    return:
      type: System.Data.Common.DbTransaction
      description: "추가할 수 있습니다."
  overload: System.Data.OracleClient.OracleConnection.BeginDbTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.BeginTransaction
  id: BeginTransaction
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: BeginTransaction()
  nameWithType: OracleConnection.BeginTransaction()
  fullName: System.Data.OracleClient.OracleConnection.BeginTransaction()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "데이터베이스에서 트랜잭션을 시작합니다."
  remarks: "커밋하거나 트랜잭션을 명시적으로 사용 해야는 <xref:System.Data.OracleClient.OracleTransaction.Commit%2A>또는 <xref:System.Data.OracleClient.OracleTransaction.Rollback%2A>메서드.</xref:System.Data.OracleClient.OracleTransaction.Rollback%2A> </xref:System.Data.OracleClient.OracleTransaction.Commit%2A>       Oracle 트랜잭션 관리 모델에 대 한.NET Framework Data Provider 올바르게 수행 되도록 하려면 데이터베이스에서 제공 하는 다른 트랜잭션 관리 모델을 사용 하지 마십시오.      > [!NOTE] > 격리 수준을 지정 하지 않으면 기본 격리 수준 사용 됩니다. 격리 수준을 BeginTransaction 메서드를 지정 하려면 사용 된 <xref:System.Data.OracleClient.OracleConnection.BeginTransaction%2A>오버 로드.</xref:System.Data.OracleClient.OracleConnection.BeginTransaction%2A>"
  example:
  - "The following example creates an <xref:System.Data.OracleClient.OracleConnection> and an <xref:System.Data.OracleClient.OracleTransaction>. It also demonstrates how to use the BeginTransaction, <xref:System.Data.OracleClient.OracleTransaction.Commit%2A>, and <xref:System.Data.OracleClient.OracleTransaction.Rollback%2A> methods.  \n  \n [!code-vb[Classic WebData OracleConnection.BeginTransaction#1](~/add/codesnippet/visualbasic/m-system.data.oracleclie_11_1.vb)]\n [!code-cs[Classic WebData OracleConnection.BeginTransaction#1](~/add/codesnippet/csharp/m-system.data.oracleclie_11_1.cs)]"
  syntax:
    content: public System.Data.OracleClient.OracleTransaction BeginTransaction ();
    parameters: []
    return:
      type: System.Data.OracleClient.OracleTransaction
      description: "새 트랜잭션을 나타내는 개체입니다."
  overload: System.Data.OracleClient.OracleConnection.BeginTransaction*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "병렬 트랜잭션은 지원 되지 않습니다."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.BeginTransaction(System.Data.IsolationLevel)
  id: BeginTransaction(System.Data.IsolationLevel)
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: BeginTransaction(IsolationLevel)
  nameWithType: OracleConnection.BeginTransaction(IsolationLevel)
  fullName: System.Data.OracleClient.OracleConnection.BeginTransaction(IsolationLevel)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "지정 된 데이터베이스에서 트랜잭션을 시작 <xref href=&quot;System.Data.IsolationLevel&quot;> </xref> 값입니다."
  remarks: "커밋하거나 트랜잭션을 명시적으로 사용 해야는 <xref:System.Data.OracleClient.OracleTransaction.Commit%2A>또는 <xref:System.Data.OracleClient.OracleTransaction.Rollback%2A>메서드.</xref:System.Data.OracleClient.OracleTransaction.Rollback%2A> </xref:System.Data.OracleClient.OracleTransaction.Commit%2A>       Oracle 트랜잭션 관리 모델에 대 한.NET Framework Data Provider 올바르게 수행 되도록 하려면 데이터베이스에서 제공 하는 다른 트랜잭션 관리 모델을 사용 하지 마십시오."
  example:
  - "The following example creates an <xref:System.Data.OracleClient.OracleConnection> and an <xref:System.Data.OracleClient.OracleTransaction>. It also demonstrates how to use the <xref:System.Data.OracleClient.OracleConnection.BeginTransaction%2A>, <xref:System.Data.OracleClient.OracleTransaction.Commit%2A>, and <xref:System.Data.OracleClient.OracleTransaction.Rollback%2A> methods.  \n  \n [!code-vb[Classic WebData OracleConnection.BeginTransaction#1](~/add/codesnippet/visualbasic/12fabef6-623c-46b8-b1c3-_1.vb)]\n [!code-cs[Classic WebData OracleConnection.BeginTransaction#1](~/add/codesnippet/csharp/12fabef6-623c-46b8-b1c3-_1.cs)]"
  syntax:
    content: public System.Data.OracleClient.OracleTransaction BeginTransaction (System.Data.IsolationLevel il);
    parameters:
    - id: il
      type: System.Data.IsolationLevel
      description: "이 연결에 대 한 트랜잭션 격리 수준입니다."
    return:
      type: System.Data.OracleClient.OracleTransaction
      description: "새 트랜잭션을 나타내는 개체입니다."
  overload: System.Data.OracleClient.OracleConnection.BeginTransaction*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "병렬 트랜잭션은 지원 되지 않습니다."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.ChangeDatabase(System.String)
  id: ChangeDatabase(System.String)
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: ChangeDatabase(String)
  nameWithType: OracleConnection.ChangeDatabase(String)
  fullName: System.Data.OracleClient.OracleConnection.ChangeDatabase(String)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "열린에 대 한 현재 데이터베이스 변경 <xref href=&quot;System.Data.OracleClient.OracleConnection&quot;> </xref>합니다."
  remarks: "`value` 매개 변수는 유효한 데이터베이스 이름을 포함 해야 하며 null 값, 빈 문자열을 포함할 수 없습니다 (&quot;&quot;), 또는 빈 문자로 구성 된 문자열입니다.      > [!NOTE] > 달리는 **연결** 다른.NET Framework 데이터 공급자 (SQL Server, OLE DB 및 ODBC)의 개체 <xref:System.Data.OracleClient.OracleConnection>지원 하지 않습니다는 <xref:System.Data.OracleClient.OracleConnection.ConnectionTimeout%2A>속성.</xref:System.Data.OracleClient.OracleConnection.ConnectionTimeout%2A> </xref:System.Data.OracleClient.OracleConnection> 속성 또는 연결 문자열에 연결 제한 시간을 설정 해도 아무런 영향이 없습니다 개이고 반환 되는 값은 항상&0;입니다. <xref:System.Data.OracleClient.OracleConnection>또한 지원 하지 않습니다는 <xref:System.Data.OracleClient.OracleConnection.Database%2A>ChangeDatabase 메서드나 속성.</xref:System.Data.OracleClient.OracleConnection.Database%2A></xref:System.Data.OracleClient.OracleConnection>"
  syntax:
    content: public override void ChangeDatabase (string value);
    parameters:
    - id: value
      type: System.String
      description: "현재 데이터베이스 대신 사용할 데이터베이스의 이름입니다."
  overload: System.Data.OracleClient.OracleConnection.ChangeDatabase*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "데이터베이스 이름이 올바르지 않습니다."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "연결이 열려 있지 않습니다."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "데이터베이스를 변경할 수 없습니다."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.ClearAllPools
  id: ClearAllPools
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: ClearAllPools()
  nameWithType: OracleConnection.ClearAllPools()
  fullName: System.Data.OracleClient.OracleConnection.ClearAllPools()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "연결 풀을 비웁니다."
  remarks: "ClearAllPools 다시 설정 하거나 비웁니다 연결 풀. 적절 하 게 표시 되 고는 연결 인 메서드를 호출할 때 사용에서 될 때 삭제 <xref:System.Data.OracleClient.OracleConnection.Close%2A>가 호출 됩니다.</xref:System.Data.OracleClient.OracleConnection.Close%2A>"
  syntax:
    content: public static void ClearAllPools ();
    parameters: []
  overload: System.Data.OracleClient.OracleConnection.ClearAllPools*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.ClearPool(System.Data.OracleClient.OracleConnection)
  id: ClearPool(System.Data.OracleClient.OracleConnection)
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: ClearPool(OracleConnection)
  nameWithType: OracleConnection.ClearPool(OracleConnection)
  fullName: System.Data.OracleClient.OracleConnection.ClearPool(OracleConnection)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "지정 된 연결과 관련 된 연결 풀을 비웁니다."
  remarks: "ClearPool 메서드 연관 된 연결 풀을 지웁니다 `connection`합니다. 추가 연결에 연결 된 경우 `connection` 는 메서드를 호출할 때에서 사용 중인, 표시 되 적절 하 고는 될 때 삭제 <xref:System.Data.OracleClient.OracleConnection.Close%2A>가 호출 됩니다.</xref:System.Data.OracleClient.OracleConnection.Close%2A>"
  syntax:
    content: public static void ClearPool (System.Data.OracleClient.OracleConnection connection);
    parameters:
    - id: connection
      type: System.Data.OracleClient.OracleConnection
      description: "<xref href=&quot;System.Data.OracleClient.OracleConnection&quot;> </xref> 풀에서 지워집니다."
  overload: System.Data.OracleClient.OracleConnection.ClearPool*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.Close
  id: Close
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: Close()
  nameWithType: OracleConnection.Close()
  fullName: System.Data.OracleClient.OracleConnection.Close()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "데이터베이스에 연결을 닫습니다."
  remarks: "Close 메서드가 보류 중인 모든 트랜잭션을 롤백합니다. 그런 다음 연결 풀에 대 한 연결을 해제 하거나 연결 풀링을 사용 하지 않도록 설정 하는 경우 연결을 닫습니다.       응용 프로그램은 예외를 생성 하지 않고 닫기 작업을 두 번 이상 호출할 수 있습니다.      > [!NOTE] >.NET Framework Data Provider for Oracle을 사용 하면 불필요 공급자 자동으로이 관리 하기 때문에 연결 풀링을 사용 하도록 합니다.      > [!CAUTION] >에서 Close를 호출 하지 않는 한 <xref:System.Data.OracleClient.OracleConnection>, <xref:System.Data.OracleClient.OracleDataReader>, 또는 다른 관리 되는 개체에는 `Finalize` 프로그램 클래스의 메서드</xref:System.Data.OracleClient.OracleDataReader> </xref:System.Data.OracleClient.OracleConnection> 종료자에서만 클래스에 직접 속한 관리 되지 않는 리소스를 해제 해야 합니다. 클래스에 관리 되지 않는 리소스가 없는 경우 포함 되지 않습니다는 `Finalize` 클래스 정의에 메서드. 자세한 내용은 참조 [가비지 수집](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public override void Close ();
    parameters: []
  overload: System.Data.OracleClient.OracleConnection.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.ConnectionString
  id: ConnectionString
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: ConnectionString
  nameWithType: OracleConnection.ConnectionString
  fullName: System.Data.OracleClient.OracleConnection.ConnectionString
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Oracle 데이터베이스를 여는 데 사용 하는 문자열을 가져오거나 설정 합니다."
  remarks: "ConnectionString은 연결이 닫힌 경우에 설정할 수 있습니다.       ConnectionString 속성 데이터베이스에 연결 하는 데 사용할 수 있습니다. 다음 예제에서는 일반적인 연결 문자열을 보여 줍니다.      ```   &quot;Data Source=Oracle8i;Integrated Security=yes&quot;   ```문자열에 지정 된 설정 중 대부분에 해당 읽기 전용 속성 (예를 들어 `Data Source=MyServer`에 해당 하는 <xref:System.Data.OracleClient.OracleConnection.DataSource%2A>속성).</xref:System.Data.OracleClient.OracleConnection.DataSource%2A> 연결 문자열을 설정 하는 경우 이러한 모든 속성 업데이트 됩니다, 속성이 없는 업데이트 되는 경우 오류가 검색 되지 않는 한 합니다. <xref:System.Data.OracleClient.OracleConnection>속성의 연결 문자열에 지정 된 문자열이 나 기본 설정을 반환 합니다.</xref:System.Data.OracleClient.OracleConnection>       닫힌된 연결에서의 연결 문자열 다시 설정 하면 모든 연결 문자열 값 (및 관련된 속성)의 암호를 포함 하 여 다시 설정 합니다.       설정 된 후 바로 연결 문자열 구문 분석 됩니다. 구문 분석에서 나타나면 구문 런타임 예외에서에서 오류와 같은 <xref:System.ArgumentException>, 생성 됩니다.</xref:System.ArgumentException> 연결 설정 하려고 시도 하는 경우에 다른 오류를 찾을 수 있습니다.       연결 문자열의 기본 형식은 세미콜론으로 구분 하는 키워드/값 쌍입니다. 등호 (=)는 각 키워드와 해당 값을 연결 합니다. 세미콜론, 작은따옴표 문자 또는 큰따옴표를 포함 하는 값에 포함 하려면 값을 큰따옴표로 묶어야 합니다. 세미콜론과 큰따옴표 문자를 모두 포함 된 값을 값을 따옴표로 묶을 수 있습니다. 작은따옴표 값 큰따옴표 문자로 시작 하는 경우 도움이 됩니다. 반대로, 값이 작은따옴표로 시작 하는 경우 큰따옴표를 사용할 수 있습니다. 작은따옴표 및 큰따옴표 문자를 모두 포함 된 값, 값을 포함 하는 데 사용 하는 인용 문자 값 내에서 발생할 때마다 배가 되어야 합니다.       선행 또는 후행 공백의 문자열 값에서을 포함 하려면 값 작은따옴표 또는 큰따옴표로 묶어야 합니다. 따옴표로 묶여 있는 경우에 정수, 부울 또는 열거 값 주위 선행 또는 후행 공백은 모두 무시 됩니다. 그러나 문자열 리터럴 키워드 또는 값 내에 공백이 유지 됩니다. 예를 들어 인용 문자가 고 값에 첫 번째 또는 마지막 문자가 아닌 경우 구분 기호를 사용 하지 않고 연결 문자열에서 작은따옴표 또는 큰따옴표를 사용할 수 있습니다 `Data Source= my&quot;Server` 또는 `Data Source= my&quot;Server`합니다.       키워드 또는 값에는 등호 (=)를 포함 하려면 앞에 다른 등호 합니다. 예를 들어 가상의 연결 문자열에에서 ```   &quot;key==word=value&quot;   ``` 키워드는 &quot;키 단어 =&quot;이 고 값이 &quot;value&quot;입니다.       키워드/값 쌍의 특정 키워드는 연결 문자열에 두 번 이상 발생 하는 경우 마지막으로 설정 된 값에에서 사용 됩니다.       키워드 대/소문자를 구분 합니다.       다음 표에서 값의 연결 문자열 내에서 유효한 이름을 나열합니다.      | 이름 | 기본 | 설명 |   |----------|-------------|-----------------|   | 데이터 원본<br /><br /> -또는-<br /><br /> 서버 | | Oracle에 연결 하는 데 인스턴스의 이름이 나 네트워크 주소입니다. |   | 통합 보안 |&quot; false&quot;| 연결이 보안 연결을 인지 여부입니다.<br /><br /> 인식 되는 값은 `true` (권장 사항) `false`, `yes`, 및 `no`. |   | 암호 | | 에 대 한 로깅을 Oracle 계정에 대 한 암호입니다. 높은 수준의 보안을 유지 하려면 좋습니다 통합 보안 키워드를 대신 사용 합니다. |   | 보안 정보 유지 |&quot; false&quot;| 로 설정 하면 `false` 또는 `no` (권장 사항) 연결이 현재 열려 있거나 열린 <xref:System.Data.OracleClient.OracleConnection.State%2A>.</xref:System.Data.OracleClient.OracleConnection.State%2A> 경우 암호와 같은 보안 관련 정보는 연결의 일부로 반환 되지 않습니다 연결 문자열을 다시 암호를 포함 한 모든 연결 문자열 값을 다시 설정 합니다.<br /><br /> 인식 되는 값은 `true`, `false`, `yes`, 및 `no`. |   | 유니코드 |&quot; false&quot;| .NET Framework Data Provider for Oracle UTF16 모드 API 호출을 사용 하는지 여부를 지정 합니다. 이 키워드는 Oracle9i 클라이언트 소프트웨어를 사용 하 여는 경우를 제외 하 고 무시 됩니다. |   | 사용자 ID | | Oracle 로그인 계정입니다. 높은 수준의 보안을 유지 하려면 좋습니다 통합 보안 키워드를 대신 사용 합니다. |       다음 표에서 연결 풀링의 연결 문자열 내의 값에 대 한 유효한 이름을 나열 합니다.      | 이름 | 기본 | 설명 |   |----------|-------------|-----------------|   | 연결 수명 |&0; | 연결이 풀으로 반환 되, 만든 시간을 현재 시간으로 비교 하 고, 해당 시간 간격 (초)으로 지정 된 값을 초과 하면 연결이 제거 됩니다 `Connection Lifetime`합니다. 실행 중인 서버와 방금 온라인 상태가 된 서버 간의 부하 분산을 강제로 클러스터링 된 구성에 유용 합니다.<br /><br /> 값&0;은 최대 연결 제한 시간을 풀링된 연결입니다. |   | 참여 |&quot; true&quot;| 때 `true` 또는 `yes`, 풀러에서 만들기 스레드의 현재 트랜잭션 컨텍스트에 연결을 자동으로 참여 합니다.<br /><br /> 인식 되는 값은 `true`, `false`, `yes`, 및 `no`. |   | 최대 풀 크기 |&100; | 풀에 허용 되는 연결의 최대 수입니다. 설정의 `Max Pool Size` ConnectionString의 값 성능에 영향을 줄 수 있습니다. 만들려는 및 적극적으로 사용 하 여 둘 이상의 100 개의 연결을 늘려야 하는 경우 `Max Pool Size` 응용 프로그램에 대 한 넘는 사용 수 있는 값에. |   | 최소 풀 크기 | 0 | 풀에 허용 되는 연결의 최소 수입니다. |   | 풀링 |&quot; true&quot;| 때 `true` 또는 `yes`, <xref:System.Data.OracleClient.OracleConnection>적절 한 풀에서 출발 개체나 필요한 경우를 만들고 적절 한 풀에 추가 합니다.</xref:System.Data.OracleClient.OracleConnection><br /><br /> 인식 되는 값은 `true`, `false`, `yes`, 및 `no`. |       키워드 또는 연결 풀링 부울 값을 필요로 하는 값을 설정할 때 사용할 수 있습니다 &quot;예&quot; 대신 &quot;true&quot; 및 &quot;false&quot; 대신 &quot;아니요&quot;. 정수 값은 문자열로 표시 됩니다."
  example:
  - "The following example creates an <xref:System.Data.OracleClient.OracleConnection> and sets some of its properties in the connection string.  \n  \n [!code-vb[Classic WebData OracleConnection.DataSource#1](~/add/codesnippet/visualbasic/p-system.data.oracleclie_15_1.vb)]\n [!code-cs[Classic WebData OracleConnection.DataSource#1](~/add/codesnippet/csharp/p-system.data.oracleclie_15_1.cs)]"
  syntax:
    content: public override string ConnectionString { get; set; }
    return:
      type: System.String
      description: "초기 연결을 설정 하는 데 필요한 서버 이름과 같이 설정을 포함 하는 Oracle 연결 문자열입니다. 기본값은 빈 문자열 (&quot;&quot;)."
  overload: System.Data.OracleClient.OracleConnection.ConnectionString*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.ConnectionTimeout
  id: ConnectionTimeout
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: ConnectionTimeout
  nameWithType: OracleConnection.ConnectionTimeout
  fullName: System.Data.OracleClient.OracleConnection.ConnectionTimeout
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "연결 시도 종료 하 고 오류를 생성 하기 전에 대기할 시간을을 가져옵니다."
  remarks: "사용 하 여 시간 제한 초과 연결 대기 시간을 설정할 수 있습니다는 `Connect Timeout` 또는 `Connection Timeout` 연결 문자열에서 키워드입니다. 값 0은 제한 없음을 나타냄에 피해 야 합니다.는 <xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A>무기한 없음을 의미 하기 때문에.</xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A>      > [!NOTE] > 달리는 `Connection` 다른.NET Framework 데이터 공급자 (SQL Server, OLE DB 및 ODBC)의 개체 <xref:System.Data.OracleClient.OracleConnection>ConnectionTimeout 속성을 지원 하지 않습니다.</xref:System.Data.OracleClient.OracleConnection> 속성 또는 연결 문자열에 연결 제한 시간을 설정 해도 아무런 영향이 없습니다 개이고 반환 되는 값은 항상&0;입니다. <xref:System.Data.OracleClient.OracleConnection>또한 지원 하지 않습니다는 <xref:System.Data.OracleClient.OracleConnection.Database%2A>속성 또는 <xref:System.Data.OracleClient.OracleConnection.ChangeDatabase%2A>메서드.</xref:System.Data.OracleClient.OracleConnection.ChangeDatabase%2A> </xref:System.Data.OracleClient.OracleConnection.Database%2A></xref:System.Data.OracleClient.OracleConnection>"
  syntax:
    content: public override int ConnectionTimeout { get; }
    return:
      type: System.Int32
      description: "시간 (초) 연결이 열리기 전까지 기다려야 합니다. 기본값은 15 초입니다."
  overload: System.Data.OracleClient.OracleConnection.ConnectionTimeout*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "지정 된 값이 0 보다 작습니다."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.CreateCommand
  id: CreateCommand
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: CreateCommand()
  nameWithType: OracleConnection.CreateCommand()
  fullName: System.Data.OracleClient.OracleConnection.CreateCommand()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "만들고 반환는 <xref href=&quot;System.Data.OracleClient.OracleCommand&quot;> </xref> 연관 된 개체는 <xref href=&quot;System.Data.OracleClient.OracleConnection&quot;> </xref>합니다."
  syntax:
    content: public System.Data.OracleClient.OracleCommand CreateCommand ();
    parameters: []
    return:
      type: System.Data.OracleClient.OracleCommand
      description: "<xref href=&quot;System.Data.OracleClient.OracleCommand&quot;> </xref> 개체입니다."
  overload: System.Data.OracleClient.OracleConnection.CreateCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.CreateDbCommand
  id: CreateDbCommand
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: CreateDbCommand()
  nameWithType: OracleConnection.CreateDbCommand()
  fullName: System.Data.OracleClient.OracleConnection.CreateDbCommand()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  syntax:
    content: protected override System.Data.Common.DbCommand CreateDbCommand ();
    parameters: []
    return:
      type: System.Data.Common.DbCommand
      description: "추가할 수 있습니다."
  overload: System.Data.OracleClient.OracleConnection.CreateDbCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.Database
  id: Database
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: Database
  nameWithType: OracleConnection.Database
  fullName: System.Data.OracleClient.OracleConnection.Database
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "현재 데이터베이스 이름이 나 연결이 열린 후 사용할 데이터베이스의 이름을 가져옵니다."
  remarks: "데이터베이스 속성을 동적으로 업데이트합니다. SQL 문을 사용 하 여 현재 데이터베이스를 변경 하면 또는 <xref:System.Data.OracleClient.OracleConnection.ChangeDatabase%2A>정보 메시지가 전송 되는 메서드와 속성을 자동으로 업데이트 됩니다.</xref:System.Data.OracleClient.OracleConnection.ChangeDatabase%2A>      > [!NOTE] > 달리는 `Connection` 다른.NET Framework 데이터 공급자 (SQL Server, OLE DB 및 ODBC)의 개체 <xref:System.Data.OracleClient.OracleConnection>지원 하지 않습니다는 <xref:System.Data.OracleClient.OracleConnection.ConnectionTimeout%2A>속성.</xref:System.Data.OracleClient.OracleConnection.ConnectionTimeout%2A> </xref:System.Data.OracleClient.OracleConnection> 속성 또는 연결 문자열에 연결 제한 시간을 설정 해도 아무런 영향이 없습니다 개이고 반환 되는 값은 항상&0;입니다. <xref:System.Data.OracleClient.OracleConnection>또한 데이터베이스 속성을 지원 하지 않습니다 또는 <xref:System.Data.OracleClient.OracleConnection.ChangeDatabase%2A>메서드.</xref:System.Data.OracleClient.OracleConnection.ChangeDatabase%2A></xref:System.Data.OracleClient.OracleConnection>"
  syntax:
    content: public override string Database { get; }
    return:
      type: System.String
      description: "현재 데이터베이스 이름이 나 연결이 열린 후 사용할 데이터베이스의 이름을의 이름입니다. 기본값은 빈 문자열입니다."
  overload: System.Data.OracleClient.OracleConnection.Database*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.DataSource
  id: DataSource
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: DataSource
  nameWithType: OracleConnection.DataSource
  fullName: System.Data.OracleClient.OracleConnection.DataSource
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Oracle 서버를 연결 하는 데의 이름을 가져옵니다."
  remarks: ''
  example:
  - "The following example creates an <xref:System.Data.OracleClient.OracleConnection> and displays some of its read-only properties.  \n  \n [!code-vb[Classic WebData OracleConnection.DataSource#1](~/add/codesnippet/visualbasic/p-system.data.oracleclie_7_1.vb)]\n [!code-cs[Classic WebData OracleConnection.DataSource#1](~/add/codesnippet/csharp/p-system.data.oracleclie_7_1.cs)]"
  syntax:
    content: public override string DataSource { get; }
    return:
      type: System.String
      description: "연결 하는 데에 Oracle 서버의 이름입니다. 기본값은 빈 문자열 (&quot;&quot;)."
  overload: System.Data.OracleClient.OracleConnection.DataSource*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: OracleConnection.Dispose(Boolean)
  fullName: System.Data.OracleClient.OracleConnection.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "추가할 수 있습니다."
  overload: System.Data.OracleClient.OracleConnection.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)
  id: EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: EnlistDistributedTransaction(ITransaction)
  nameWithType: OracleConnection.EnlistDistributedTransaction(ITransaction)
  fullName: System.Data.OracleClient.OracleConnection.EnlistDistributedTransaction(ITransaction)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "지정된 된 트랜잭션에 분산 트랜잭션으로 참여합니다."
  remarks: "새 ADO.NET 2.0에서 지원은 사용에 대 한는 <xref:System.Data.Common.DbConnection.EnlistTransaction%2A>메서드를 분산된 트랜잭션에 참여 합니다.</xref:System.Data.Common.DbConnection.EnlistTransaction%2A> 연결을 참여 하기 때문에 <xref:System.Transactions.Transaction>인스턴스에 **EnlistTransaction** 에서 사용할 수 있는 기능을 활용는 <xref:System.Transactions>분산 트랜잭션에서, 보다 더 자주 사용 하는 네임 스페이스를 관리 하기 위한 **참여가** 이 목적을 위해.</xref:System.Transactions> </xref:System.Transactions.Transaction> 자세한 내용은 참조 [분산 트랜잭션](~/add/includes/ajax-current-ext-md.md)합니다.       자동 인 리스트 먼 트 하지 않으면 참여가 메서드를 사용 하 여 기존 분산된 트랜잭션에 인 리스트 먼 트 할 수 있습니다. 즉, 트랜잭션이 커밋되거나 롤백될 경우 데이터 소스 코드에 의해 수정 된는 또한 트랜잭션이 커밋 또는 롤백됨 되도록 기존 분산된 트랜잭션에 인 리스트 먼 트 합니다.       참여가 예외를 반환 하는 경우 <xref:System.Data.OracleClient.OracleConnection> <xref:System.Data.OracleClient.OracleConnection.BeginTransaction%2A>.</xref:System.Data.OracleClient.OracleConnection.BeginTransaction%2A> 를 사용 하는 트랜잭션이 이미 시작</xref:System.Data.OracleClient.OracleConnection> 그러나 트랜잭션이 데이터 소스에서 시작 된 로컬 트랜잭션 인지 (명시적으로 사용 하 여 BEGIN TRANSACTION 문을 실행 하는 예를 들어 여는 <xref:System.Data.OracleClient.OracleCommand>개체), 참여가 로컬 트랜잭션을 롤백하고 요청에 따라 기존 분산된 트랜잭션에 인 리스트 먼 트 합니다.</xref:System.Data.OracleClient.OracleCommand> 로컬 트랜잭션이 롤백 되었습니다 및 <xref:System.Data.OracleClient.OracleConnection.BeginTransaction%2A>.</xref:System.Data.OracleClient.OracleConnection.BeginTransaction%2A> 를 사용 하 여 시작 되지 않는 모든 로컬 트랜잭션을 관리 해야 하는 통지를 받지 못할"
  syntax:
    content: public void EnlistDistributedTransaction (System.EnterpriseServices.ITransaction distributedTransaction);
    parameters:
    - id: distributedTransaction
      type: System.EnterpriseServices.ITransaction
      description: "기존에 대 한 참조 <xref href=&quot;System.EnterpriseServices.ITransaction&quot;> </xref> 를 등록 합니다."
  overload: System.Data.OracleClient.OracleConnection.EnlistDistributedTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.EnlistTransaction(System.Transactions.Transaction)
  id: EnlistTransaction(System.Transactions.Transaction)
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: EnlistTransaction(Transaction)
  nameWithType: OracleConnection.EnlistTransaction(Transaction)
  fullName: System.Data.OracleClient.OracleConnection.EnlistTransaction(Transaction)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "지정된 된 트랜잭션에 분산 트랜잭션으로 참여합니다."
  remarks: "새 ADO.NET 2.0에서 지원은 사용에 대 한는 <xref:System.Data.Common.DbConnection.EnlistTransaction%2A>메서드를 분산된 트랜잭션에 참여 합니다.</xref:System.Data.Common.DbConnection.EnlistTransaction%2A> 연결을 참여 하기 때문에 <xref:System.Transactions.Transaction>인스턴스에 **EnlistTransaction** 에서 사용할 수 있는 기능을 활용는 <xref:System.Transactions>분산 트랜잭션에서, 보다 더 자주 사용 하는 네임 스페이스를 관리 하기 위한 **참여가**, 사용 하는 **System.EnterpriseServices.ITransaction** 개체.</xref:System.Transactions> </xref:System.Transactions.Transaction> 역시 약간 다른 의미 체계: 트랜잭션에 연결을 명시적으로 등록 된, 등록 취소 하거나 수 첫 번째 트랜잭션이 완료 될 때까지 다른 트랜잭션에 참여 합니다. 분산된 트랜잭션에 대 한 자세한 내용은 참조 [분산 트랜잭션을](~/add/includes/ajax-current-ext-md.md)합니다."
  syntax:
    content: public override void EnlistTransaction (System.Transactions.Transaction transaction);
    parameters:
    - id: transaction
      type: System.Transactions.Transaction
      description: "기존에 대 한 참조 <xref href=&quot;System.Transactions.Transaction&quot;> </xref> 를 등록 합니다."
  overload: System.Data.OracleClient.OracleConnection.EnlistTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.GetSchema
  id: GetSchema
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: GetSchema()
  nameWithType: OracleConnection.GetSchema()
  fullName: System.Data.OracleClient.OracleConnection.GetSchema()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "이 데이터 원본에 대 한 스키마 정보를 반환 <xref href=&quot;System.Data.OracleClient.OracleConnection&quot;> </xref>합니다."
  syntax:
    content: public override System.Data.DataTable GetSchema ();
    parameters: []
    return:
      type: System.Data.DataTable
      description: "A <xref href=&quot;System.Data.DataTable&quot;> </xref> 스키마 정보가 들어 있는입니다."
  overload: System.Data.OracleClient.OracleConnection.GetSchema*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.GetSchema(System.String)
  id: GetSchema(System.String)
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: GetSchema(String)
  nameWithType: OracleConnection.GetSchema(String)
  fullName: System.Data.OracleClient.OracleConnection.GetSchema(String)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "이 데이터 원본에 대 한 스키마 정보를 반환 <xref href=&quot;System.Data.OracleClient.OracleConnection&quot;> </xref> 스키마 이름에 지정된 된 문자열을 사용 하 여 합니다."
  remarks: "GetSchema를 사용 하는 쿼리 대/소문자를 구분 합니다. 경우 Oracle의 처리 인해 스키마를 처음 만들이 예기치 않은 결과가 발생할 수 있습니다.       따옴표 없이 스키마를 만든 경우`,` Oracle 개체 이름은 대문자로 저장 합니다. 따옴표에서 스키마를 만든 경우 Oracle 개체 이름이 제공 하는 대/소문자에 저장 합니다.       예를 들어, 다음 두 문 중 하나를 사용 하 여 MyTable 이라는 테이블을 만들: `CREATE TABLE MyTable ...` `CREATE TABLE &quot;MyTable&quot; ...` 를 통해이 테이블에 대 한 정보를 검색 하는 **GetSchema** 인수로 &quot;MYTABLE&quot;을 전달 해야 첫 번째 경우에서 메서드를 합니다.        두 번째 경우에 &quot;MyTable&quot;는 인수로 전달 해야 합니다."
  syntax:
    content: public override System.Data.DataTable GetSchema (string collectionName);
    parameters:
    - id: collectionName
      type: System.String
      description: "반환할 스키마의 이름을 지정 합니다."
    return:
      type: System.Data.DataTable
      description: "A <xref href=&quot;System.Data.DataTable&quot;> </xref> 스키마 정보가 들어 있는입니다."
  overload: System.Data.OracleClient.OracleConnection.GetSchema*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>collectionName</code>null로 지정 됩니다."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.GetSchema(System.String,System.String[])
  id: GetSchema(System.String,System.String[])
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: GetSchema(String,String[])
  nameWithType: OracleConnection.GetSchema(String,String[])
  fullName: System.Data.OracleClient.OracleConnection.GetSchema(String,String[])
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "이 데이터 원본에 대 한 스키마 정보를 반환 <xref href=&quot;System.Data.OracleClient.OracleConnection&quot;> </xref> 스키마 이름 및 제한 값에 대 한 지정 된 문자열 배열에 대 한 지정된 된 문자열을 사용 하 여 합니다."
  remarks: "`restrictionValues` 매개 변수 n 수준의 특정 컬렉션에 대 한 제한 컬렉션에서 지정 된 값을 제공할 수 있습니다. 특정된 제한에 값을 설정 하 고 다른 제한 값을 설정 하지 않으려면, 앞의 제한을 null 하 고 다음 값을 지정 하려면 원하는 제한에 적절 한 값을 설정 해야 합니다.       이 예는 &quot;Table&quot; 컬렉션입니다. &quot;Tables&quot; 컬렉션에 3 제한 하는 경우: 데이터베이스, 소유자 및 테이블 이름입니다. &quot;칼&quot; 소유자와 연결 된 테이블에만 다시 확보 하려는 힙이고 (최소한) 다음 값을 전달 해야: null, &quot;칼&quot;입니다. 에 제한 값이 전달 되지 않으면, 기본 값은 해당 제한에 사용 됩니다. 이 null 전달 하는 대로 동일한 매핑을 다른 매개 변수 값에 대 한 빈 문자열을 전달 합니다. 그러면 빈 문자열 (&quot;&quot;)의 지정된 된 매개 변수 값으로 간주 됩니다.       사용 하 여 쿼리 <xref:System.Data.OracleClient.OracleConnection.GetSchema%2A>대 소문자를 구분 합니다.</xref:System.Data.OracleClient.OracleConnection.GetSchema%2A> 경우 Oracle의 처리 인해 스키마를 처음 만들이 예기치 않은 결과가 발생할 수 있습니다.       따옴표 없이 스키마를 만든 경우`,` Oracle 개체 이름은 대문자로 저장 합니다. 따옴표에서 스키마를 만든 경우 Oracle 개체 이름이 제공 하는 대/소문자에 저장 합니다.       예를 들어, 다음 두 문 중 하나를 사용 하 여 MyTable 이라는 테이블을 만들: `CREATE TABLE MyTable ...` `CREATE TABLE &quot;MyTable&quot; ...` 를 통해이 테이블에 대 한 정보를 검색 하는 **GetSchema** 인수로 &quot;MYTABLE&quot;을 전달 해야 첫 번째 경우에서 메서드를 합니다.        두 번째 경우에 &quot;MyTable&quot;는 인수로 전달 해야 합니다."
  syntax:
    content: public override System.Data.DataTable GetSchema (string collectionName, string[] restrictionValues);
    parameters:
    - id: collectionName
      type: System.String
      description: "반환할 스키마의 이름을 지정 합니다."
    - id: restrictionValues
      type: System.String[]
      description: "요청된 된 스키마에 대 한 제한 값의 집합입니다."
    return:
      type: System.Data.DataTable
      description: "A <xref href=&quot;System.Data.DataTable&quot;> </xref> 스키마 정보가 들어 있는입니다."
  overload: System.Data.OracleClient.OracleConnection.GetSchema*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>collectionName</code>null로 지정 됩니다."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.InfoMessage
  id: InfoMessage
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: InfoMessage
  nameWithType: OracleConnection.InfoMessage
  fullName: System.Data.OracleClient.OracleConnection.InfoMessage
  type: Event
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Oracle에서 경고 또는 정보 메시지를 보낼 때 발생 합니다."
  remarks: ".NET Framework Data Provider for Oracle 사용 하므로 호출 인터페이스 OCI (Oracle), 데이터 공급자는 성공와 정보 메시지를 받을 때마다 InfoMessage 이벤트 생성 됩니다. 예제 구문 오류가 포함 된 저장된 프로시저를 만드는 것입니다. 에 대 한 호출에서 <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A>메서드는 성공.</xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A> 그러나 InfoMessage 이벤트 발생 하면 구문 오류가 발생 했습니다.       클라이언트는 서버에서 보낸 정보 메시지를 처리 하려는 만들어야는 <xref:System.Data.OracleClient.OracleInfoMessageEventHandler>이 이벤트를 수신 하는 대리자입니다.</xref:System.Data.OracleClient.OracleInfoMessageEventHandler>"
  syntax:
    content: public event System.Data.OracleClient.OracleInfoMessageEventHandler InfoMessage;
    return:
      type: System.Data.OracleClient.OracleInfoMessageEventHandler
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.Open
  id: Open
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: Open()
  nameWithType: OracleConnection.Open()
  fullName: System.Data.OracleClient.OracleConnection.Open()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "에 <xref:System.Data.OracleClient.OracleConnection.ConnectionString*>.</xref:System.Data.OracleClient.OracleConnection.ConnectionString*> 지정 하는 속성이 설정 된 데이터베이스에 대 한 연결을 엽니다."
  remarks: "<xref:System.Data.OracleClient.OracleConnection>사용 가능한 경우 연결 풀에서 열려 있는 연결을 그립니다.</xref:System.Data.OracleClient.OracleConnection> 그렇지 않으면 데이터베이스에 새 연결을 설정 합니다.      > [!NOTE] > 경우는 <xref:System.Data.OracleClient.OracleConnection>범위를 벗어나면 나타나는 연결은 자동으로 닫히지 않습니다.</xref:System.Data.OracleClient.OracleConnection> 따라서 명시적으로 닫아야 연결 <xref:System.Data.OracleClient.OracleConnection.Close%2A>.</xref:System.Data.OracleClient.OracleConnection.Close%2A> 를 호출 하 여"
  syntax:
    content: public override void Open ();
    parameters: []
  overload: System.Data.OracleClient.OracleConnection.Open*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "연결이 열려 있지 않습니다."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "데이터베이스를 변경할 수 없습니다."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.ServerVersion
  id: ServerVersion
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: ServerVersion
  nameWithType: OracleConnection.ServerVersion
  fullName: System.Data.OracleClient.OracleConnection.ServerVersion
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "버전의 클라이언트가 연결 된 서버를 포함 하는 문자열을 가져옵니다."
  remarks: "ServerVersion 속성은 Oracle 버전 형식입니다. 예를 들어 열고 Oracle8 릴리스에 대 한 형식은 형식에서 문자열 &quot;8.1.7.0.0 열고 Oracle8 8.1.7.0.0-프로덕션을 해제 합니다.&quot;"
  example:
  - "The following example creates an <xref:System.Data.OracleClient.OracleConnection> and displays some of its read-only properties.  \n  \n [!code-vb[Classic WebData OracleConnection.ServerVersion#1](~/add/codesnippet/visualbasic/p-system.data.oracleclie_3_1.vb)]\n [!code-cs[Classic WebData OracleConnection.ServerVersion#1](~/add/codesnippet/csharp/p-system.data.oracleclie_3_1.cs)]"
  syntax:
    content: public override string ServerVersion { get; }
    return:
      type: System.String
      description: "연결 된 서버의 버전입니다."
  overload: System.Data.OracleClient.OracleConnection.ServerVersion*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "연결이 닫혀 있습니다."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.State
  id: State
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: State
  nameWithType: OracleConnection.State
  fullName: System.Data.OracleClient.OracleConnection.State
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "연결의 현재 상태를 가져옵니다."
  remarks: "허용 되는 상태 변경이:-에서 `Closed` 를 `Open`를 사용 하 여는 `Open` 의 메서드는 <xref:System.Data.OracleClient.OracleConnection>개체입니다.</xref:System.Data.OracleClient.OracleConnection>      `Open` 를 `Closed`를 사용 하 여는 <xref:System.Data.OracleClient.OracleConnection.Close%2A>의 메서드는 <xref:System.Data.OracleClient.OracleConnection>개체입니다.</xref:System.Data.OracleClient.OracleConnection> </xref:System.Data.OracleClient.OracleConnection.Close%2A>"
  example:
  - "The following example creates an instance of a derived class, <xref:System.Data.OracleClient.OracleConnection>, sets its <xref:System.Data.IDbConnection.ConnectionString%2A>, and displays its State.  \n  \n [!code-cs[Classic WebData OracleConnection.State#1](~/add/codesnippet/csharp/p-system.data.oracleclie_9_1.cs)]\n [!code-vb[Classic WebData OracleConnection.State#1](~/add/codesnippet/visualbasic/p-system.data.oracleclie_9_1.vb)]"
  syntax:
    content: public override System.Data.ConnectionState State { get; }
    return:
      type: System.Data.ConnectionState
      description: "비트 조합 된 <xref href=&quot;System.Data.ConnectionState&quot;> </xref> 값입니다. 기본값은 <xref uid=&quot;langword_csharp_Closed&quot; name=&quot;Closed&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Data.OracleClient.OracleConnection.State*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.System#ICloneable#Clone
  id: System#ICloneable#Clone
  isEii: true
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: System.ICloneable.Clone()
  nameWithType: OracleConnection.System.ICloneable.Clone()
  fullName: System.Data.OracleClient.OracleConnection.System.ICloneable.Clone()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "현재 인스턴스의 복사본 인 새 개체를 만듭니다."
  remarks: "이 멤버는 명시적 인터페이스 멤버 구현 이며 사용할 수 있습니다 경우에만 <xref:System.Data.OracleClient.OracleConnection>인스턴스로 캐스팅 되는 <xref:System.ICloneable>인터페이스.</xref:System.ICloneable> </xref:System.Data.OracleClient.OracleConnection>"
  syntax:
    content: object ICloneable.Clone ();
    parameters: []
    return:
      type: System.Object
      description: "이 인스턴스의 복사본 인 새 개체입니다."
  overload: System.Data.OracleClient.OracleConnection.System#ICloneable#Clone*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Common.DbConnection
  isExternal: false
  name: System.Data.Common.DbConnection
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Data.OracleClient.OracleException
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleException
  nameWithType: OracleException
  fullName: System.Data.OracleClient.OracleException
- uid: System.Data.OracleClient.OracleConnection.#ctor
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: OracleConnection()
  nameWithType: OracleConnection.OracleConnection()
  fullName: System.Data.OracleClient.OracleConnection.OracleConnection()
- uid: System.Data.OracleClient.OracleConnection.#ctor(System.String)
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: OracleConnection(String)
  nameWithType: OracleConnection.OracleConnection(String)
  fullName: System.Data.OracleClient.OracleConnection.OracleConnection(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.OracleClient.OracleConnection.BeginDbTransaction(System.Data.IsolationLevel)
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: BeginDbTransaction(IsolationLevel)
  nameWithType: OracleConnection.BeginDbTransaction(IsolationLevel)
  fullName: System.Data.OracleClient.OracleConnection.BeginDbTransaction(IsolationLevel)
- uid: System.Data.Common.DbTransaction
  parent: System.Data.Common
  isExternal: false
  name: DbTransaction
  nameWithType: DbTransaction
  fullName: System.Data.Common.DbTransaction
- uid: System.Data.IsolationLevel
  parent: System.Data
  isExternal: false
  name: IsolationLevel
  nameWithType: IsolationLevel
  fullName: System.Data.IsolationLevel
- uid: System.Data.OracleClient.OracleConnection.BeginTransaction
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: BeginTransaction()
  nameWithType: OracleConnection.BeginTransaction()
  fullName: System.Data.OracleClient.OracleConnection.BeginTransaction()
- uid: System.Data.OracleClient.OracleTransaction
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleTransaction
  nameWithType: OracleTransaction
  fullName: System.Data.OracleClient.OracleTransaction
- uid: System.Data.OracleClient.OracleConnection.BeginTransaction(System.Data.IsolationLevel)
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: BeginTransaction(IsolationLevel)
  nameWithType: OracleConnection.BeginTransaction(IsolationLevel)
  fullName: System.Data.OracleClient.OracleConnection.BeginTransaction(IsolationLevel)
- uid: System.Data.OracleClient.OracleConnection.ChangeDatabase(System.String)
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: ChangeDatabase(String)
  nameWithType: OracleConnection.ChangeDatabase(String)
  fullName: System.Data.OracleClient.OracleConnection.ChangeDatabase(String)
- uid: System.Data.OracleClient.OracleConnection.ClearAllPools
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: ClearAllPools()
  nameWithType: OracleConnection.ClearAllPools()
  fullName: System.Data.OracleClient.OracleConnection.ClearAllPools()
- uid: System.Data.OracleClient.OracleConnection.ClearPool(System.Data.OracleClient.OracleConnection)
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: ClearPool(OracleConnection)
  nameWithType: OracleConnection.ClearPool(OracleConnection)
  fullName: System.Data.OracleClient.OracleConnection.ClearPool(OracleConnection)
- uid: System.Data.OracleClient.OracleConnection
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleConnection
  nameWithType: OracleConnection
  fullName: System.Data.OracleClient.OracleConnection
- uid: System.Data.OracleClient.OracleConnection.Close
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: Close()
  nameWithType: OracleConnection.Close()
  fullName: System.Data.OracleClient.OracleConnection.Close()
- uid: System.Data.OracleClient.OracleConnection.ConnectionString
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: ConnectionString
  nameWithType: OracleConnection.ConnectionString
  fullName: System.Data.OracleClient.OracleConnection.ConnectionString
- uid: System.Data.OracleClient.OracleConnection.ConnectionTimeout
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: ConnectionTimeout
  nameWithType: OracleConnection.ConnectionTimeout
  fullName: System.Data.OracleClient.OracleConnection.ConnectionTimeout
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.OracleClient.OracleConnection.CreateCommand
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: CreateCommand()
  nameWithType: OracleConnection.CreateCommand()
  fullName: System.Data.OracleClient.OracleConnection.CreateCommand()
- uid: System.Data.OracleClient.OracleCommand
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleCommand
  nameWithType: OracleCommand
  fullName: System.Data.OracleClient.OracleCommand
- uid: System.Data.OracleClient.OracleConnection.CreateDbCommand
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: CreateDbCommand()
  nameWithType: OracleConnection.CreateDbCommand()
  fullName: System.Data.OracleClient.OracleConnection.CreateDbCommand()
- uid: System.Data.Common.DbCommand
  parent: System.Data.Common
  isExternal: false
  name: DbCommand
  nameWithType: DbCommand
  fullName: System.Data.Common.DbCommand
- uid: System.Data.OracleClient.OracleConnection.Database
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: Database
  nameWithType: OracleConnection.Database
  fullName: System.Data.OracleClient.OracleConnection.Database
- uid: System.Data.OracleClient.OracleConnection.DataSource
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: DataSource
  nameWithType: OracleConnection.DataSource
  fullName: System.Data.OracleClient.OracleConnection.DataSource
- uid: System.Data.OracleClient.OracleConnection.Dispose(System.Boolean)
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: OracleConnection.Dispose(Boolean)
  fullName: System.Data.OracleClient.OracleConnection.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.OracleClient.OracleConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: EnlistDistributedTransaction(ITransaction)
  nameWithType: OracleConnection.EnlistDistributedTransaction(ITransaction)
  fullName: System.Data.OracleClient.OracleConnection.EnlistDistributedTransaction(ITransaction)
- uid: System.EnterpriseServices.ITransaction
  parent: System.EnterpriseServices
  isExternal: false
  name: ITransaction
  nameWithType: ITransaction
  fullName: System.EnterpriseServices.ITransaction
- uid: System.Data.OracleClient.OracleConnection.EnlistTransaction(System.Transactions.Transaction)
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: EnlistTransaction(Transaction)
  nameWithType: OracleConnection.EnlistTransaction(Transaction)
  fullName: System.Data.OracleClient.OracleConnection.EnlistTransaction(Transaction)
- uid: System.Transactions.Transaction
  parent: System.Transactions
  isExternal: false
  name: Transaction
  nameWithType: Transaction
  fullName: System.Transactions.Transaction
- uid: System.Data.OracleClient.OracleConnection.GetSchema
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: GetSchema()
  nameWithType: OracleConnection.GetSchema()
  fullName: System.Data.OracleClient.OracleConnection.GetSchema()
- uid: System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Data.OracleClient.OracleConnection.GetSchema(System.String)
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: GetSchema(String)
  nameWithType: OracleConnection.GetSchema(String)
  fullName: System.Data.OracleClient.OracleConnection.GetSchema(String)
- uid: System.Data.OracleClient.OracleConnection.GetSchema(System.String,System.String[])
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: GetSchema(String,String[])
  nameWithType: OracleConnection.GetSchema(String,String[])
  fullName: System.Data.OracleClient.OracleConnection.GetSchema(String,String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.OracleClient.OracleConnection.InfoMessage
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: InfoMessage
  nameWithType: OracleConnection.InfoMessage
  fullName: System.Data.OracleClient.OracleConnection.InfoMessage
- uid: System.Data.OracleClient.OracleInfoMessageEventHandler
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleInfoMessageEventHandler
  nameWithType: OracleInfoMessageEventHandler
  fullName: System.Data.OracleClient.OracleInfoMessageEventHandler
- uid: System.Data.OracleClient.OracleConnection.Open
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: Open()
  nameWithType: OracleConnection.Open()
  fullName: System.Data.OracleClient.OracleConnection.Open()
- uid: System.Data.OracleClient.OracleConnection.ServerVersion
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: ServerVersion
  nameWithType: OracleConnection.ServerVersion
  fullName: System.Data.OracleClient.OracleConnection.ServerVersion
- uid: System.Data.OracleClient.OracleConnection.State
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: State
  nameWithType: OracleConnection.State
  fullName: System.Data.OracleClient.OracleConnection.State
- uid: System.Data.ConnectionState
  parent: System.Data
  isExternal: false
  name: ConnectionState
  nameWithType: ConnectionState
  fullName: System.Data.ConnectionState
- uid: System.Data.OracleClient.OracleConnection.System#ICloneable#Clone
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: System.ICloneable.Clone()
  nameWithType: OracleConnection.System.ICloneable.Clone()
  fullName: System.Data.OracleClient.OracleConnection.System.ICloneable.Clone()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.OracleClient.OracleConnection.#ctor*
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: OracleConnection
  nameWithType: OracleConnection.OracleConnection
- uid: System.Data.OracleClient.OracleConnection.BeginDbTransaction*
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: BeginDbTransaction
  nameWithType: OracleConnection.BeginDbTransaction
- uid: System.Data.OracleClient.OracleConnection.BeginTransaction*
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: BeginTransaction
  nameWithType: OracleConnection.BeginTransaction
- uid: System.Data.OracleClient.OracleConnection.ChangeDatabase*
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: ChangeDatabase
  nameWithType: OracleConnection.ChangeDatabase
- uid: System.Data.OracleClient.OracleConnection.ClearAllPools*
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: ClearAllPools
  nameWithType: OracleConnection.ClearAllPools
- uid: System.Data.OracleClient.OracleConnection.ClearPool*
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: ClearPool
  nameWithType: OracleConnection.ClearPool
- uid: System.Data.OracleClient.OracleConnection.Close*
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: Close
  nameWithType: OracleConnection.Close
- uid: System.Data.OracleClient.OracleConnection.ConnectionString*
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: ConnectionString
  nameWithType: OracleConnection.ConnectionString
- uid: System.Data.OracleClient.OracleConnection.ConnectionTimeout*
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: ConnectionTimeout
  nameWithType: OracleConnection.ConnectionTimeout
- uid: System.Data.OracleClient.OracleConnection.CreateCommand*
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: CreateCommand
  nameWithType: OracleConnection.CreateCommand
- uid: System.Data.OracleClient.OracleConnection.CreateDbCommand*
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: CreateDbCommand
  nameWithType: OracleConnection.CreateDbCommand
- uid: System.Data.OracleClient.OracleConnection.Database*
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: Database
  nameWithType: OracleConnection.Database
- uid: System.Data.OracleClient.OracleConnection.DataSource*
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: DataSource
  nameWithType: OracleConnection.DataSource
- uid: System.Data.OracleClient.OracleConnection.Dispose*
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: Dispose
  nameWithType: OracleConnection.Dispose
- uid: System.Data.OracleClient.OracleConnection.EnlistDistributedTransaction*
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: EnlistDistributedTransaction
  nameWithType: OracleConnection.EnlistDistributedTransaction
- uid: System.Data.OracleClient.OracleConnection.EnlistTransaction*
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: EnlistTransaction
  nameWithType: OracleConnection.EnlistTransaction
- uid: System.Data.OracleClient.OracleConnection.GetSchema*
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: GetSchema
  nameWithType: OracleConnection.GetSchema
- uid: System.Data.OracleClient.OracleConnection.Open*
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: Open
  nameWithType: OracleConnection.Open
- uid: System.Data.OracleClient.OracleConnection.ServerVersion*
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: ServerVersion
  nameWithType: OracleConnection.ServerVersion
- uid: System.Data.OracleClient.OracleConnection.State*
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: State
  nameWithType: OracleConnection.State
- uid: System.Data.OracleClient.OracleConnection.System#ICloneable#Clone*
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: System.ICloneable.Clone
  nameWithType: OracleConnection.System.ICloneable.Clone
