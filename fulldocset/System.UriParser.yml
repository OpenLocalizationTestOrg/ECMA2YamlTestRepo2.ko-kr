### YamlMime:ManagedReference
items:
- uid: System.UriParser
  id: UriParser
  children:
  - System.UriParser.#ctor
  - System.UriParser.GetComponents(System.Uri,System.UriComponents,System.UriFormat)
  - System.UriParser.InitializeAndValidate(System.Uri,System.UriFormatException@)
  - System.UriParser.IsBaseOf(System.Uri,System.Uri)
  - System.UriParser.IsKnownScheme(System.String)
  - System.UriParser.IsWellFormedOriginalString(System.Uri)
  - System.UriParser.OnNewUri
  - System.UriParser.OnRegister(System.String,System.Int32)
  - System.UriParser.Register(System.UriParser,System.String,System.Int32)
  - System.UriParser.Resolve(System.Uri,System.Uri,System.UriFormatException@)
  langs:
  - csharp
  name: UriParser
  nameWithType: UriParser
  fullName: System.UriParser
  type: Class
  summary: "새 URI 체계를 구문 분석합니다. 이 클래스는 추상 클래스입니다."
  remarks: "UriParser 클래스를 사용 하면 새 URI 체계에 대 한 파서를 만들 수 있습니다. 전체적으로 이러한 파서 쓰거나 파서 (HTTP, FTP 및 네트워크 프로토콜에 따라 다른 체계) 잘 알려진 구성표 중에서 파생 될 수 있습니다. 완전히 새로운 구문 분석기를 만들려는 경우 <xref:System.GenericUriParser>.</xref:System.GenericUriParser> 에서 상속 상속 하는 잘 알려진 URI 체계를 확장 하는 파서를 만들려는 경우 <xref:System.FtpStyleUriParser>, <xref:System.HttpStyleUriParser>, <xref:System.FileStyleUriParser>, <xref:System.GopherStyleUriParser>, 또는 <xref:System.LdapStyleUriParser>.</xref:System.LdapStyleUriParser> </xref:System.GopherStyleUriParser> </xref:System.FileStyleUriParser> </xref:System.HttpStyleUriParser> </xref:System.FtpStyleUriParser>       .NET Framework와 함께 제공 되는 파서를 사용 하는 것이 좋습니다. 자체 파서를 응용 프로그램의 복잡성을 증가 하 고 제공 된 파서와 수행 하지 않습니다."
  syntax:
    content: public abstract class UriParser
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.UriParser.#ctor
  id: '#ctor'
  parent: System.UriParser
  langs:
  - csharp
  name: UriParser()
  nameWithType: UriParser.UriParser()
  fullName: System.UriParser.UriParser()
  type: Constructor
  assemblies:
  - System
  namespace: System
  summary: "기본 URI 파서를 생성합니다."
  syntax:
    content: protected UriParser ();
    parameters: []
  overload: System.UriParser.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.UriParser.GetComponents(System.Uri,System.UriComponents,System.UriFormat)
  id: GetComponents(System.Uri,System.UriComponents,System.UriFormat)
  parent: System.UriParser
  langs:
  - csharp
  name: GetComponents(Uri,UriComponents,UriFormat)
  nameWithType: UriParser.GetComponents(Uri,UriComponents,UriFormat)
  fullName: System.UriParser.GetComponents(Uri,UriComponents,UriFormat)
  type: Method
  assemblies:
  - System
  namespace: System
  summary: "URI에서 구성 요소를 가져옵니다."
  remarks: "GetComponents 메서드를 사용 하 여와 같은 다양 한 부분의 URI의 값을 확인 하 고 <xref:System.UriComponents>, <xref:System.UriComponents>, 또는 <xref:System.UriComponents>.</xref:System.UriComponents> </xref:System.UriComponents> </xref:System.UriComponents>       구성 요소는 URI에 나타나는 순서 대로 반환 됩니다. 예를 들어 경우 <xref:System.UriComponents>지정, 가장 먼저 나타납니다.</xref:System.UriComponents>"
  syntax:
    content: protected virtual string GetComponents (Uri uri, UriComponents components, UriFormat format);
    parameters:
    - id: uri
      type: System.Uri
      description: "구문 분석할 URI입니다."
    - id: components
      type: System.UriComponents
      description: "<xref:System.UriComponents>에서 검색할 `uri`.</xref:System.UriComponents>"
    - id: format
      type: System.UriFormat
      description: "중 하나는 <xref:System.UriFormat>방법을 특수 문자를 제어 하는 값은 이스케이프 됩니다.</xref:System.UriFormat>"
    return:
      type: System.String
      description: "구성 요소를 포함 하는 문자열입니다."
  overload: System.UriParser.GetComponents*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>uriFormat</code> is invalid.  \n  \n \\- or -  \n  \n <code>uriComponents</code> is not a combination of valid <xref:System.UriComponents> values."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>uri</code> requires user-driven parsing  \n  \n \\- or -  \n  \n <code>uri</code> is not an absolute URI. Relative URIs cannot be used with this method."
  platform:
  - net462
- uid: System.UriParser.InitializeAndValidate(System.Uri,System.UriFormatException@)
  id: InitializeAndValidate(System.Uri,System.UriFormatException@)
  parent: System.UriParser
  langs:
  - csharp
  name: InitializeAndValidate(Uri,UriFormatException)
  nameWithType: UriParser.InitializeAndValidate(Uri,UriFormatException)
  fullName: System.UriParser.InitializeAndValidate(Uri,UriFormatException)
  type: Method
  assemblies:
  - System
  namespace: System
  summary: "파서 상태를 초기화 하 고 URI의 유효성을 검사 합니다."
  remarks: "InitializeAndValidate 메서드가 호출 될 때마다 한 <xref:System.Uri>인스턴스화됩니다.</xref:System.Uri>"
  syntax:
    content: protected virtual void InitializeAndValidate (Uri uri, out UriFormatException parsingError);
    parameters:
    - id: uri
      type: System.Uri
      description: "유효성을 검사할 T:System.Uri 합니다."
    - id: parsingError
      type: System.UriFormatException
      description: "유효성 검사 오류가 있는 경우입니다."
  overload: System.UriParser.InitializeAndValidate*
  exceptions: []
  platform:
  - net462
- uid: System.UriParser.IsBaseOf(System.Uri,System.Uri)
  id: IsBaseOf(System.Uri,System.Uri)
  parent: System.UriParser
  langs:
  - csharp
  name: IsBaseOf(Uri,Uri)
  nameWithType: UriParser.IsBaseOf(Uri,Uri)
  fullName: System.UriParser.IsBaseOf(Uri,Uri)
  type: Method
  assemblies:
  - System
  namespace: System
  summary: "결정 여부 <code> baseUri </code> 에 대 한 기본 URI가 <code> relativeUri </code>합니다."
  syntax:
    content: protected virtual bool IsBaseOf (Uri baseUri, Uri relativeUri);
    parameters:
    - id: baseUri
      type: System.Uri
      description: "기본 URI입니다."
    - id: relativeUri
      type: System.Uri
      description: "테스트에 대 한 URI입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>baseUri</code> is a base URI for <code>relativeUri</code>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.UriParser.IsBaseOf*
  exceptions: []
  platform:
  - net462
- uid: System.UriParser.IsKnownScheme(System.String)
  id: IsKnownScheme(System.String)
  parent: System.UriParser
  langs:
  - csharp
  name: IsKnownScheme(String)
  nameWithType: UriParser.IsKnownScheme(String)
  fullName: System.UriParser.IsKnownScheme(String)
  type: Method
  assemblies:
  - System
  namespace: System
  summary: "구성표에 대 한 파서 등록 되었는지 여부를 나타냅니다."
  syntax:
    content: public static bool IsKnownScheme (string schemeName);
    parameters:
    - id: schemeName
      type: System.String
      description: "확인할 체계 이름입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우 <code> schemeName </code> 등록 않았으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.UriParser.IsKnownScheme*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> schemeName </code> 매개 변수가 null입니다."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> schemeName </code> 매개 변수가 올바르지 않습니다."
  platform:
  - net462
- uid: System.UriParser.IsWellFormedOriginalString(System.Uri)
  id: IsWellFormedOriginalString(System.Uri)
  parent: System.UriParser
  langs:
  - csharp
  name: IsWellFormedOriginalString(Uri)
  nameWithType: UriParser.IsWellFormedOriginalString(Uri)
  fullName: System.UriParser.IsWellFormedOriginalString(Uri)
  type: Method
  assemblies:
  - System
  namespace: System
  summary: "URI 형식이 올바른지 여부를 나타냅니다."
  remarks: "IsWellFormedOriginalString 메서드 false를 반환 합니다:-문자열 RFC 2396 올바르게 이스케이프 되지 않습니다.      -문자열 URI 암시적 파일을 참조 하는 절대 URI를 나타냅니다.      -문자열 경로 구성 요소 앞에 슬래시가 없는 절대 URI를 나타냅니다.      -문자열 이스케이프 백슬래시가 포함 슬래시도 간주 합니다."
  syntax:
    content: protected virtual bool IsWellFormedOriginalString (Uri uri);
    parameters:
    - id: uri
      type: System.Uri
      description: "확인할 URI입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우 <code> uri </code> 제대로 구성 되지 않았으면, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.UriParser.IsWellFormedOriginalString*
  exceptions: []
  platform:
  - net462
- uid: System.UriParser.OnNewUri
  id: OnNewUri
  parent: System.UriParser
  langs:
  - csharp
  name: OnNewUri()
  nameWithType: UriParser.OnNewUri()
  fullName: System.UriParser.OnNewUri()
  type: Method
  assemblies:
  - System
  namespace: System
  summary: "호출 하 여 한 <xref:System.Uri>를 가져오기 위해 생성자는 <xref href=&quot;System.UriParser&quot;> </xref> 인스턴스</xref:System.Uri>"
  remarks: "기본 구현은 반환 동일한 <xref:System.UriParser>인스턴스.</xref:System.UriParser> 이 메서드를 재정의 하 고 다른 반환 해야 할 수 있습니다 <xref:System.UriParser>다중 스레드 환경에서 작동 하는 경우에 각 호출에 대해.</xref:System.UriParser>"
  syntax:
    content: protected virtual UriParser OnNewUri ();
    parameters: []
    return:
      type: System.UriParser
      description: "A <xref href=&quot;System.UriParser&quot;> </xref> <xref:System.Uri>.</xref:System.Uri> 생성"
  overload: System.UriParser.OnNewUri*
  exceptions: []
  platform:
  - net462
- uid: System.UriParser.OnRegister(System.String,System.Int32)
  id: OnRegister(System.String,System.Int32)
  parent: System.UriParser
  langs:
  - csharp
  name: OnRegister(String,Int32)
  nameWithType: UriParser.OnRegister(String,Int32)
  fullName: System.UriParser.OnRegister(String,Int32)
  type: Method
  assemblies:
  - System
  namespace: System
  summary: "프레임 워크에서 호출 되는 경우는 <xref href=&quot;System.UriParser&quot;> </xref> 메서드가 등록 됩니다."
  syntax:
    content: protected virtual void OnRegister (string schemeName, int defaultPort);
    parameters:
    - id: schemeName
      type: System.String
      description: "과 관련 된 구성표가 <xref href=&quot;System.UriParser&quot;> </xref>합니다."
    - id: defaultPort
      type: System.Int32
      description: "구성표의 포트 번호입니다."
  overload: System.UriParser.OnRegister*
  exceptions: []
  platform:
  - net462
- uid: System.UriParser.Register(System.UriParser,System.String,System.Int32)
  id: Register(System.UriParser,System.String,System.Int32)
  parent: System.UriParser
  langs:
  - csharp
  name: Register(UriParser,String,Int32)
  nameWithType: UriParser.Register(UriParser,String,Int32)
  fullName: System.UriParser.Register(UriParser,String,Int32)
  type: Method
  assemblies:
  - System
  namespace: System
  summary: "구성표 및 포트 번호와 연결 된 <xref href=&quot;System.UriParser&quot;> </xref>합니다."
  remarks: "경우는 `defaultPort` 매개 변수가-1로 설정 된, 레지스터 메서드 등록 하는 포트 번호에 대 한 기본값이 없습니다."
  syntax:
    content: public static void Register (UriParser uriParser, string schemeName, int defaultPort);
    parameters:
    - id: uriParser
      type: System.UriParser
      description: "등록할 URI 파서입니다."
    - id: schemeName
      type: System.String
      description: "이 파서 연관 된 구성표의 이름입니다."
    - id: defaultPort
      type: System.Int32
      description: "지정된 된 스키마에 대 한 기본 포트 번호입니다."
  overload: System.UriParser.Register*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>uriParser</code> parameter is null  \n  \n \\- or -  \n  \n <code>schemeName</code> parameter is null."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>schemeName</code> parameter is not valid  \n  \n \\- or -  \n  \n <code>defaultPort</code> parameter is not valid. The <code>defaultPort</code> parameter is less than -1 or greater than 65,534."
  platform:
  - net462
- uid: System.UriParser.Resolve(System.Uri,System.Uri,System.UriFormatException@)
  id: Resolve(System.Uri,System.Uri,System.UriFormatException@)
  parent: System.UriParser
  langs:
  - csharp
  name: Resolve(Uri,Uri,UriFormatException)
  nameWithType: UriParser.Resolve(Uri,Uri,UriFormatException)
  fullName: System.UriParser.Resolve(Uri,Uri,UriFormatException)
  type: Method
  assemblies:
  - System
  namespace: System
  summary: "에 의해 호출 <xref:System.Uri>생성자 및 &lt;xref:System.Uri.TryCreate%2A?displayProperty=fullName&gt; 상대 URI를 확인 하려면.</xref:System.Uri>"
  remarks: "<xref:System.Uri>생성자 및 <xref:System.Uri.TryCreate%2A?displayProperty=fullName>확인에서 URI를 사용 하 여 `baseUri` 및 `relativeUri`.</xref:System.Uri.TryCreate%2A?displayProperty=fullName></xref:System.Uri>       구문 분석 오류가 발생 하며, 확인된 된 상대에 대 한 반환 된 문자열 <xref:System.Uri>null입니다.</xref:System.Uri>"
  syntax:
    content: protected virtual string Resolve (Uri baseUri, Uri relativeUri, out UriFormatException parsingError);
    parameters:
    - id: baseUri
      type: System.Uri
      description: "기본 URI입니다."
    - id: relativeUri
      type: System.Uri
      description: "상대 URI입니다."
    - id: parsingError
      type: System.UriFormatException
      description: "있는 경우에 확인 프로세스 동안 오류가 발생 했습니다."
    return:
      type: System.String
      description: "확인된 된 상대 <xref:System.Uri>.</xref:System.Uri> 문자열"
  overload: System.UriParser.Resolve*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>baseUri</code> parameter is not an absolute <xref:System.Uri>  \n  \n \\- or -  \n  \n <code>baseUri</code> parameter requires user-driven parsing."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.UriParser.#ctor
  parent: System.UriParser
  isExternal: false
  name: UriParser()
  nameWithType: UriParser.UriParser()
  fullName: System.UriParser.UriParser()
- uid: System.UriParser.GetComponents(System.Uri,System.UriComponents,System.UriFormat)
  parent: System.UriParser
  isExternal: false
  name: GetComponents(Uri,UriComponents,UriFormat)
  nameWithType: UriParser.GetComponents(Uri,UriComponents,UriFormat)
  fullName: System.UriParser.GetComponents(Uri,UriComponents,UriFormat)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.UriComponents
  parent: System
  isExternal: true
  name: UriComponents
  nameWithType: UriComponents
  fullName: System.UriComponents
- uid: System.UriFormat
  parent: System
  isExternal: true
  name: UriFormat
  nameWithType: UriFormat
  fullName: System.UriFormat
- uid: System.UriParser.InitializeAndValidate(System.Uri,System.UriFormatException@)
  parent: System.UriParser
  isExternal: false
  name: InitializeAndValidate(Uri,UriFormatException)
  nameWithType: UriParser.InitializeAndValidate(Uri,UriFormatException)
  fullName: System.UriParser.InitializeAndValidate(Uri,UriFormatException)
- uid: System.UriFormatException
  parent: System
  isExternal: true
  name: UriFormatException
  nameWithType: UriFormatException
  fullName: System.UriFormatException
- uid: System.UriParser.IsBaseOf(System.Uri,System.Uri)
  parent: System.UriParser
  isExternal: false
  name: IsBaseOf(Uri,Uri)
  nameWithType: UriParser.IsBaseOf(Uri,Uri)
  fullName: System.UriParser.IsBaseOf(Uri,Uri)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.UriParser.IsKnownScheme(System.String)
  parent: System.UriParser
  isExternal: false
  name: IsKnownScheme(String)
  nameWithType: UriParser.IsKnownScheme(String)
  fullName: System.UriParser.IsKnownScheme(String)
- uid: System.UriParser.IsWellFormedOriginalString(System.Uri)
  parent: System.UriParser
  isExternal: false
  name: IsWellFormedOriginalString(Uri)
  nameWithType: UriParser.IsWellFormedOriginalString(Uri)
  fullName: System.UriParser.IsWellFormedOriginalString(Uri)
- uid: System.UriParser.OnNewUri
  parent: System.UriParser
  isExternal: false
  name: OnNewUri()
  nameWithType: UriParser.OnNewUri()
  fullName: System.UriParser.OnNewUri()
- uid: System.UriParser
  parent: System
  isExternal: false
  name: UriParser
  nameWithType: UriParser
  fullName: System.UriParser
- uid: System.UriParser.OnRegister(System.String,System.Int32)
  parent: System.UriParser
  isExternal: false
  name: OnRegister(String,Int32)
  nameWithType: UriParser.OnRegister(String,Int32)
  fullName: System.UriParser.OnRegister(String,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.UriParser.Register(System.UriParser,System.String,System.Int32)
  parent: System.UriParser
  isExternal: false
  name: Register(UriParser,String,Int32)
  nameWithType: UriParser.Register(UriParser,String,Int32)
  fullName: System.UriParser.Register(UriParser,String,Int32)
- uid: System.UriParser.Resolve(System.Uri,System.Uri,System.UriFormatException@)
  parent: System.UriParser
  isExternal: false
  name: Resolve(Uri,Uri,UriFormatException)
  nameWithType: UriParser.Resolve(Uri,Uri,UriFormatException)
  fullName: System.UriParser.Resolve(Uri,Uri,UriFormatException)
- uid: System.UriParser.#ctor*
  parent: System.UriParser
  isExternal: false
  name: UriParser
  nameWithType: UriParser.UriParser
- uid: System.UriParser.GetComponents*
  parent: System.UriParser
  isExternal: false
  name: GetComponents
  nameWithType: UriParser.GetComponents
- uid: System.UriParser.InitializeAndValidate*
  parent: System.UriParser
  isExternal: false
  name: InitializeAndValidate
  nameWithType: UriParser.InitializeAndValidate
- uid: System.UriParser.IsBaseOf*
  parent: System.UriParser
  isExternal: false
  name: IsBaseOf
  nameWithType: UriParser.IsBaseOf
- uid: System.UriParser.IsKnownScheme*
  parent: System.UriParser
  isExternal: false
  name: IsKnownScheme
  nameWithType: UriParser.IsKnownScheme
- uid: System.UriParser.IsWellFormedOriginalString*
  parent: System.UriParser
  isExternal: false
  name: IsWellFormedOriginalString
  nameWithType: UriParser.IsWellFormedOriginalString
- uid: System.UriParser.OnNewUri*
  parent: System.UriParser
  isExternal: false
  name: OnNewUri
  nameWithType: UriParser.OnNewUri
- uid: System.UriParser.OnRegister*
  parent: System.UriParser
  isExternal: false
  name: OnRegister
  nameWithType: UriParser.OnRegister
- uid: System.UriParser.Register*
  parent: System.UriParser
  isExternal: false
  name: Register
  nameWithType: UriParser.Register
- uid: System.UriParser.Resolve*
  parent: System.UriParser
  isExternal: false
  name: Resolve
  nameWithType: UriParser.Resolve
