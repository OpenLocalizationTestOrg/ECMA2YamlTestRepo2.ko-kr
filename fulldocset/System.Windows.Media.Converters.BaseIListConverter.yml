### YamlMime:ManagedReference
items:
- uid: System.Windows.Media.Converters.BaseIListConverter
  id: BaseIListConverter
  children:
  - System.Windows.Media.Converters.BaseIListConverter.#ctor
  - System.Windows.Media.Converters.BaseIListConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.Windows.Media.Converters.BaseIListConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.Windows.Media.Converters.BaseIListConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.Windows.Media.Converters.BaseIListConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  langs:
  - csharp
  name: BaseIListConverter
  nameWithType: BaseIListConverter
  fullName: System.Windows.Media.Converters.BaseIListConverter
  type: Class
  summary: "<xref:System.Collections.IList>컬렉션 멤버 <xref:System.String>안내 하십시오.</xref:System.String> 인스턴스 간에</xref:System.Collections.IList> 변환 하는 데 사용 되는 메서드를 정의"
  remarks: "이 클래스와 해당 파생 클래스에서 사용 하는 데 사용 됩니다는 <xref:System.Windows.Markup.Primitives.MarkupWriter>의 serialization에 대 한 [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)].</xref:System.Windows.Markup.Primitives.MarkupWriter>"
  syntax:
    content: 'public abstract class BaseIListConverter : System.ComponentModel.TypeConverter'
  inheritance:
  - System.Object
  - System.ComponentModel.TypeConverter
  implements: []
  inheritedMembers:
  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)
  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)
  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)
  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)
  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  - System.ComponentModel.TypeConverter.GetProperties(System.Object)
  - System.ComponentModel.TypeConverter.GetPropertiesSupported
  - System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValues
  - System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.IsValid(System.Object)
  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])
  platform:
  - net462
- uid: System.Windows.Media.Converters.BaseIListConverter.#ctor
  id: '#ctor'
  parent: System.Windows.Media.Converters.BaseIListConverter
  langs:
  - csharp
  name: BaseIListConverter()
  nameWithType: BaseIListConverter.BaseIListConverter()
  fullName: System.Windows.Media.Converters.BaseIListConverter.BaseIListConverter()
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Converters
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Windows.Media.Converters.BaseIListConverter&quot;> </xref> 클래스입니다."
  syntax:
    content: protected BaseIListConverter ();
    parameters: []
  overload: System.Windows.Media.Converters.BaseIListConverter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Converters.BaseIListConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Windows.Media.Converters.BaseIListConverter
  langs:
  - csharp
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: BaseIListConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.Windows.Media.Converters.BaseIListConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Converters
  summary: "지정된 된 형식으로 변환할 수 있는지 확인 합니다."
  remarks: "<xref:System.String>변환에 대 한 지원 되는 유일한 형식이입니다.</xref:System.String>"
  syntax:
    content: public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext td, Type t);
    parameters:
    - id: td
      type: System.ComponentModel.ITypeDescriptorContext
      description: "변환에 필요한 컨텍스트 정보를 제공 합니다."
    - id: t
      type: System.Type
      description: "변환에 대해 계산 되는 형식입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>이 형식은; 변환할 수 있는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Media.Converters.BaseIListConverter.CanConvertFrom*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Converters.BaseIListConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Windows.Media.Converters.BaseIListConverter
  langs:
  - csharp
  name: CanConvertTo(ITypeDescriptorContext,Type)
  nameWithType: BaseIListConverter.CanConvertTo(ITypeDescriptorContext,Type)
  fullName: System.Windows.Media.Converters.BaseIListConverter.CanConvertTo(ITypeDescriptorContext,Type)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Converters
  summary: "지정된 된 형식에 <xref:System.String>.</xref:System.String> 변환할 수 있는지 확인 합니다."
  remarks: "<xref:System.String>변환에 대 한 지원 되는 유일한 형식이입니다.</xref:System.String>"
  syntax:
    content: public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "변환에 필요한 컨텍스트 정보를 제공 합니다."
    - id: destinationType
      type: System.Type
      description: "변환에 대해 계산 되는 형식입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>이 형식은; 변환할 수 있는 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Media.Converters.BaseIListConverter.CanConvertTo*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Converters.BaseIListConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.Windows.Media.Converters.BaseIListConverter
  langs:
  - csharp
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: BaseIListConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.Windows.Media.Converters.BaseIListConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Converters
  summary: "<xref:System.String> <xref:System.Collections.IList>안내 하십시오.</xref:System.Collections.IList> 지원 되는 인스턴스로</xref:System.String> 변환"
  syntax:
    content: public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext td, System.Globalization.CultureInfo ci, object value);
    parameters:
    - id: td
      type: System.ComponentModel.ITypeDescriptorContext
      description: "변환에 필요한 컨텍스트 정보를 제공 합니다."
    - id: ci
      type: System.Globalization.CultureInfo
      description: "변환 하는 동안 적용할 문화권 정보입니다."
    - id: value
      type: System.Object
      description: "변환에 사용 되는 문자열입니다."
    return:
      type: System.Object
      description: "<xref:System.Object>변환의 결과 나타내는입니다.</xref:System.Object>"
  overload: System.Windows.Media.Converters.BaseIListConverter.ConvertFrom*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "값이 발생 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 및 <xref:System.String>.</xref:System.String> 하지"
  platform:
  - net462
- uid: System.Windows.Media.Converters.BaseIListConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  id: ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.Windows.Media.Converters.BaseIListConverter
  langs:
  - csharp
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: BaseIListConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.Windows.Media.Converters.BaseIListConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Converters
  summary: "<xref:System.Collections.IList> <xref:System.String>.</xref:System.String> </xref:System.Collections.IList> 의 지원 되는 인스턴스를 변환합니다."
  syntax:
    content: public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "변환에 필요한 컨텍스트 정보를 제공 합니다."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "변환 하는 동안 적용할 문화권 정보입니다."
    - id: value
      type: System.Object
      description: "변환에 대해 계산 되는 개체입니다."
    - id: destinationType
      type: System.Type
      description: "변환에 대해 계산 되는 대상 형식입니다."
    return:
      type: System.Object
      description: "문자열 표현에서 <xref:System.Collections.IList>컬렉션.</xref:System.Collections.IList>"
  overload: System.Windows.Media.Converters.BaseIListConverter.ConvertTo*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.TypeConverter
  isExternal: false
  name: System.ComponentModel.TypeConverter
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Windows.Media.Converters.BaseIListConverter.#ctor
  parent: System.Windows.Media.Converters.BaseIListConverter
  isExternal: false
  name: BaseIListConverter()
  nameWithType: BaseIListConverter.BaseIListConverter()
  fullName: System.Windows.Media.Converters.BaseIListConverter.BaseIListConverter()
- uid: System.Windows.Media.Converters.BaseIListConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Windows.Media.Converters.BaseIListConverter
  isExternal: false
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: BaseIListConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.Windows.Media.Converters.BaseIListConverter.CanConvertFrom(ITypeDescriptorContext,Type)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.ITypeDescriptorContext
  parent: System.ComponentModel
  isExternal: false
  name: ITypeDescriptorContext
  nameWithType: ITypeDescriptorContext
  fullName: System.ComponentModel.ITypeDescriptorContext
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Windows.Media.Converters.BaseIListConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Windows.Media.Converters.BaseIListConverter
  isExternal: false
  name: CanConvertTo(ITypeDescriptorContext,Type)
  nameWithType: BaseIListConverter.CanConvertTo(ITypeDescriptorContext,Type)
  fullName: System.Windows.Media.Converters.BaseIListConverter.CanConvertTo(ITypeDescriptorContext,Type)
- uid: System.Windows.Media.Converters.BaseIListConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.Windows.Media.Converters.BaseIListConverter
  isExternal: false
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: BaseIListConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.Windows.Media.Converters.BaseIListConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Windows.Media.Converters.BaseIListConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.Windows.Media.Converters.BaseIListConverter
  isExternal: false
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: BaseIListConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.Windows.Media.Converters.BaseIListConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
- uid: System.Windows.Media.Converters.BaseIListConverter.#ctor*
  parent: System.Windows.Media.Converters.BaseIListConverter
  isExternal: false
  name: BaseIListConverter
  nameWithType: BaseIListConverter.BaseIListConverter
- uid: System.Windows.Media.Converters.BaseIListConverter.CanConvertFrom*
  parent: System.Windows.Media.Converters.BaseIListConverter
  isExternal: false
  name: CanConvertFrom
  nameWithType: BaseIListConverter.CanConvertFrom
- uid: System.Windows.Media.Converters.BaseIListConverter.CanConvertTo*
  parent: System.Windows.Media.Converters.BaseIListConverter
  isExternal: false
  name: CanConvertTo
  nameWithType: BaseIListConverter.CanConvertTo
- uid: System.Windows.Media.Converters.BaseIListConverter.ConvertFrom*
  parent: System.Windows.Media.Converters.BaseIListConverter
  isExternal: false
  name: ConvertFrom
  nameWithType: BaseIListConverter.ConvertFrom
- uid: System.Windows.Media.Converters.BaseIListConverter.ConvertTo*
  parent: System.Windows.Media.Converters.BaseIListConverter
  isExternal: false
  name: ConvertTo
  nameWithType: BaseIListConverter.ConvertTo
