### YamlMime:ManagedReference
items:
- uid: System.Windows.Automation.AutomationElementCollection
  id: AutomationElementCollection
  children:
  - System.Windows.Automation.AutomationElementCollection.CopyTo(System.Array,System.Int32)
  - System.Windows.Automation.AutomationElementCollection.CopyTo(System.Windows.Automation.AutomationElement[],System.Int32)
  - System.Windows.Automation.AutomationElementCollection.Count
  - System.Windows.Automation.AutomationElementCollection.GetEnumerator
  - System.Windows.Automation.AutomationElementCollection.IsSynchronized
  - System.Windows.Automation.AutomationElementCollection.Item(System.Int32)
  - System.Windows.Automation.AutomationElementCollection.SyncRoot
  langs:
  - csharp
  name: AutomationElementCollection
  nameWithType: AutomationElementCollection
  fullName: System.Windows.Automation.AutomationElementCollection
  type: Class
  summary: "컬렉션을 나타냅니다 <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref> 개체입니다."
  remarks: "AutomationElementCollection <xref:System.Windows.Automation.AutomationElement.FindAll%2A>.</xref:System.Windows.Automation.AutomationElement.FindAll%2A> 같은 메서드의 반환 형식으로 사용 <xref:System.Collections.ArrayList>.</xref:System.Collections.ArrayList> 같은 보다 일반적인 클래스를 사용 해야 하는 응용 프로그램 정의 컬렉션에 사용할에 적합 하지 않습니다."
  syntax:
    content: 'public class AutomationElementCollection : System.Collections.ICollection'
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElementCollection.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Windows.Automation.AutomationElementCollection
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: AutomationElementCollection.CopyTo(Array,Int32)
  fullName: System.Windows.Automation.AutomationElementCollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "대상 배열의 지정한 인덱스에서 시작 하 여 배열에 컬렉션의 요소를 복사 합니다."
  remarks: ''
  example:
  - "The following example shows how to copy an <xref:System.Windows.Automation.AutomationElementCollection> to an array of objects.  \n  \n [!code-vb[UIAClient_snip#118](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#118)]\n [!code-cs[UIAClient_snip#118](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#118)]"
  syntax:
    content: public virtual void CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "컬렉션에서 복사한 요소의 대상입니다."
    - id: index
      type: System.Int32
      description: "복사를 시작할 대상 배열의&0;부터 시작 하는 인덱스입니다."
  overload: System.Windows.Automation.AutomationElementCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElementCollection.CopyTo(System.Windows.Automation.AutomationElement[],System.Int32)
  id: CopyTo(System.Windows.Automation.AutomationElement[],System.Int32)
  parent: System.Windows.Automation.AutomationElementCollection
  langs:
  - csharp
  name: CopyTo(AutomationElement[],Int32)
  nameWithType: AutomationElementCollection.CopyTo(AutomationElement[],Int32)
  fullName: System.Windows.Automation.AutomationElementCollection.CopyTo(AutomationElement[],Int32)
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "컬렉션의 요소를 대상 배열의 지정한 인덱스에서 시작 하는 특수 배열 인스턴스에 복사 합니다."
  remarks: ''
  example:
  - "The following example shows how to copy an <xref:System.Windows.Automation.AutomationElementCollection> to an array of <xref:System.Windows.Automation.AutomationElement> objects.  \n  \n [!code-vb[UIAClient_snip#117](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#117)]\n [!code-cs[UIAClient_snip#117](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#117)]"
  syntax:
    content: public void CopyTo (System.Windows.Automation.AutomationElement[] array, int index);
    parameters:
    - id: array
      type: System.Windows.Automation.AutomationElement[]
      description: "컬렉션에서 복사한 요소의 대상입니다."
    - id: index
      type: System.Int32
      description: "복사를 시작할 대상 배열의&0;부터 시작 하는 인덱스입니다."
  overload: System.Windows.Automation.AutomationElementCollection.CopyTo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "대상 배열이 없습니다 또는 <code> index </code> 배열 범위를 벗어납니다."
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElementCollection.Count
  id: Count
  parent: System.Windows.Automation.AutomationElementCollection
  langs:
  - csharp
  name: Count
  nameWithType: AutomationElementCollection.Count
  fullName: System.Windows.Automation.AutomationElementCollection.Count
  type: Property
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "이 컬렉션의 요소 수를 가져옵니다."
  remarks: ''
  example:
  - "The following example shows the Count property being used.  \n  \n [!code-vb[UIAClient_snip#117](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#117)]\n [!code-cs[UIAClient_snip#117](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#117)]"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "요소의 수입니다."
  overload: System.Windows.Automation.AutomationElementCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElementCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Windows.Automation.AutomationElementCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: AutomationElementCollection.GetEnumerator()
  fullName: System.Windows.Automation.AutomationElementCollection.GetEnumerator()
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "컬렉션의 항목을 반복 하는 데 사용할 수 있는 열거자를 반환 합니다."
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "반복 하는 데 사용할 수 있는 열거자는 <xref href=&quot;System.Windows.Automation.AutomationElementCollection&quot;> </xref>합니다."
  overload: System.Windows.Automation.AutomationElementCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElementCollection.IsSynchronized
  id: IsSynchronized
  parent: System.Windows.Automation.AutomationElementCollection
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: AutomationElementCollection.IsSynchronized
  fullName: System.Windows.Automation.AutomationElementCollection.IsSynchronized
  type: Property
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "나타내는 값을 가져옵니다 여부는 <xref href=&quot;System.Windows.Automation.AutomationElementCollection&quot;> </xref> 개체는 동기화 (스레드로부터 안전한 지)."
  remarks: "<xref:System.Windows.Automation.AutomationElementCollection>스레드로부터 안전 하지 않습니다.</xref:System.Windows.Automation.AutomationElementCollection>"
  syntax:
    content: public virtual bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "항상 반환 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Automation.AutomationElementCollection.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElementCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Windows.Automation.AutomationElementCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: AutomationElementCollection.Item(Int32)
  fullName: System.Windows.Automation.AutomationElementCollection.Item(Int32)
  type: Property
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "가져옵니다는 <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref> 지정 된 인덱스입니다."
  remarks: ''
  example:
  - "In the following example, the first element is retrieved from an <xref:System.Windows.Automation.AutomationElementCollection>.  \n  \n [!code-vb[UIAClient_snip#182](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#182)]\n [!code-cs[UIAClient_snip#182](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#182)]"
  syntax:
    content: public System.Windows.Automation.AutomationElement this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "컬렉션에 있는 요소의&0;부터 시작 하는 인덱스입니다."
    return:
      type: System.Windows.Automation.AutomationElement
      description: "<xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref> 지정 된 인덱스입니다."
  overload: System.Windows.Automation.AutomationElementCollection.Item*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "음의 정수에 대해 지정 된 <code> index </code>, 또는 <code> index </code> <xref:System.Windows.Automation.AutomationElementCollection.Count*>.</xref:System.Windows.Automation.AutomationElementCollection.Count*> 보다 크거나"
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElementCollection.SyncRoot
  id: SyncRoot
  parent: System.Windows.Automation.AutomationElementCollection
  langs:
  - csharp
  name: SyncRoot
  nameWithType: AutomationElementCollection.SyncRoot
  fullName: System.Windows.Automation.AutomationElementCollection.SyncRoot
  type: Property
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "에 대 한 액세스를 동기화 하는 데 사용할 수 있는 개체를 가져옵니다는 <xref href=&quot;System.Windows.Automation.AutomationElementCollection&quot;> </xref> 컬렉션입니다."
  syntax:
    content: public virtual object SyncRoot { get; }
    return:
      type: System.Object
      description: "컬렉션에 대 한 액세스를 동기화 하는 데 사용할 수 있는 개체입니다."
  overload: System.Windows.Automation.AutomationElementCollection.SyncRoot*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.IndexOutOfRangeException
  isExternal: true
  name: System.IndexOutOfRangeException
- uid: System.Windows.Automation.AutomationElementCollection.CopyTo(System.Array,System.Int32)
  parent: System.Windows.Automation.AutomationElementCollection
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: AutomationElementCollection.CopyTo(Array,Int32)
  fullName: System.Windows.Automation.AutomationElementCollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Automation.AutomationElementCollection.CopyTo(System.Windows.Automation.AutomationElement[],System.Int32)
  parent: System.Windows.Automation.AutomationElementCollection
  isExternal: false
  name: CopyTo(AutomationElement[],Int32)
  nameWithType: AutomationElementCollection.CopyTo(AutomationElement[],Int32)
  fullName: System.Windows.Automation.AutomationElementCollection.CopyTo(AutomationElement[],Int32)
- uid: System.Windows.Automation.AutomationElement[]
  parent: System.Windows.Automation
  isExternal: false
  name: AutomationElement
  nameWithType: AutomationElement
  fullName: System.Windows.Automation.AutomationElement[]
  spec.csharp:
  - uid: System.Windows.Automation.AutomationElement
    name: AutomationElement
    nameWithType: AutomationElement
    fullName: AutomationElement[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Automation.AutomationElementCollection.Count
  parent: System.Windows.Automation.AutomationElementCollection
  isExternal: false
  name: Count
  nameWithType: AutomationElementCollection.Count
  fullName: System.Windows.Automation.AutomationElementCollection.Count
- uid: System.Windows.Automation.AutomationElementCollection.GetEnumerator
  parent: System.Windows.Automation.AutomationElementCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: AutomationElementCollection.GetEnumerator()
  fullName: System.Windows.Automation.AutomationElementCollection.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Windows.Automation.AutomationElementCollection.IsSynchronized
  parent: System.Windows.Automation.AutomationElementCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: AutomationElementCollection.IsSynchronized
  fullName: System.Windows.Automation.AutomationElementCollection.IsSynchronized
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Automation.AutomationElementCollection.Item(System.Int32)
  parent: System.Windows.Automation.AutomationElementCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: AutomationElementCollection.Item(Int32)
  fullName: System.Windows.Automation.AutomationElementCollection.Item(Int32)
- uid: System.Windows.Automation.AutomationElement
  parent: System.Windows.Automation
  isExternal: false
  name: AutomationElement
  nameWithType: AutomationElement
  fullName: System.Windows.Automation.AutomationElement
- uid: System.Windows.Automation.AutomationElementCollection.SyncRoot
  parent: System.Windows.Automation.AutomationElementCollection
  isExternal: false
  name: SyncRoot
  nameWithType: AutomationElementCollection.SyncRoot
  fullName: System.Windows.Automation.AutomationElementCollection.SyncRoot
- uid: System.Windows.Automation.AutomationElementCollection.CopyTo*
  parent: System.Windows.Automation.AutomationElementCollection
  isExternal: false
  name: CopyTo
  nameWithType: AutomationElementCollection.CopyTo
- uid: System.Windows.Automation.AutomationElementCollection.Count*
  parent: System.Windows.Automation.AutomationElementCollection
  isExternal: false
  name: Count
  nameWithType: AutomationElementCollection.Count
- uid: System.Windows.Automation.AutomationElementCollection.GetEnumerator*
  parent: System.Windows.Automation.AutomationElementCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: AutomationElementCollection.GetEnumerator
- uid: System.Windows.Automation.AutomationElementCollection.IsSynchronized*
  parent: System.Windows.Automation.AutomationElementCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: AutomationElementCollection.IsSynchronized
- uid: System.Windows.Automation.AutomationElementCollection.Item*
  parent: System.Windows.Automation.AutomationElementCollection
  isExternal: false
  name: Item
  nameWithType: AutomationElementCollection.Item
- uid: System.Windows.Automation.AutomationElementCollection.SyncRoot*
  parent: System.Windows.Automation.AutomationElementCollection
  isExternal: false
  name: SyncRoot
  nameWithType: AutomationElementCollection.SyncRoot
