### YamlMime:ManagedReference
items:
- uid: System.Windows.ExpressionConverter
  id: ExpressionConverter
  children:
  - System.Windows.ExpressionConverter.#ctor
  - System.Windows.ExpressionConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.Windows.ExpressionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.Windows.ExpressionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.Windows.ExpressionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  langs:
  - csharp
  name: ExpressionConverter
  nameWithType: ExpressionConverter
  fullName: System.Windows.ExpressionConverter
  type: Class
  summary: "인스턴스를 변환 <xref href=&quot;System.Windows.Expression&quot;> </xref> 를 다른 형식입니다."
  remarks: "<xref:System.Windows.Expression>유형 (대신 사용 해야 태그 확장) 값으로 변환할 유형 변환기 경로 사용 하지 않아야 합니다.</xref:System.Windows.Expression> 이러한 이유로 <xref:System.Windows.ExpressionConverter.CanConvertFrom%2A?displayProperty=fullName>및 <xref:System.Windows.ExpressionConverter.CanConvertTo%2A?displayProperty=fullName>항상 반환 `false`.</xref:System.Windows.ExpressionConverter.CanConvertTo%2A?displayProperty=fullName> </xref:System.Windows.ExpressionConverter.CanConvertFrom%2A?displayProperty=fullName> <xref:System.Windows.ExpressionConverter.ConvertFrom%2A?displayProperty=fullName>및 <xref:System.Windows.ExpressionConverter.ConvertTo%2A?displayProperty=fullName>항상 예외를 throw 합니다.</xref:System.Windows.ExpressionConverter.ConvertTo%2A?displayProperty=fullName></xref:System.Windows.ExpressionConverter.ConvertFrom%2A?displayProperty=fullName>      <a name=&quot;XAMLTextUsage_ExpressionConverter&quot;></a># # XAML 텍스트 사용"
  syntax:
    content: 'public class ExpressionConverter : System.ComponentModel.TypeConverter'
  inheritance:
  - System.Object
  - System.ComponentModel.TypeConverter
  implements: []
  inheritedMembers:
  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)
  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)
  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)
  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)
  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  - System.ComponentModel.TypeConverter.GetProperties(System.Object)
  - System.ComponentModel.TypeConverter.GetPropertiesSupported
  - System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValues
  - System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.IsValid(System.Object)
  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])
  platform:
  - net462
- uid: System.Windows.ExpressionConverter.#ctor
  id: '#ctor'
  parent: System.Windows.ExpressionConverter
  langs:
  - csharp
  name: ExpressionConverter()
  nameWithType: ExpressionConverter.ExpressionConverter()
  fullName: System.Windows.ExpressionConverter.ExpressionConverter()
  type: Constructor
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Windows.ExpressionConverter&quot;> </xref> 클래스입니다."
  syntax:
    content: public ExpressionConverter ();
    parameters: []
  overload: System.Windows.ExpressionConverter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ExpressionConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Windows.ExpressionConverter
  langs:
  - csharp
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: ExpressionConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.Windows.ExpressionConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "이 변환기에는 원본 개체에서 변환할 수 있는지 여부를 반환 합니다.는 <xref href=&quot;System.Windows.Expression&quot;> </xref> 개체입니다."
  syntax:
    content: public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> 형식 컨텍스트를 제공 하는 합니다."
    - id: sourceType
      type: System.Type
      description: "A <xref:System.Type>변환할 원본 형식을 나타내는.</xref:System.Type>"
    return:
      type: System.Boolean
      description: "Always <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.ExpressionConverter.CanConvertFrom*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ExpressionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Windows.ExpressionConverter
  langs:
  - csharp
  name: CanConvertTo(ITypeDescriptorContext,Type)
  nameWithType: ExpressionConverter.CanConvertTo(ITypeDescriptorContext,Type)
  fullName: System.Windows.ExpressionConverter.CanConvertTo(ITypeDescriptorContext,Type)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "이 변환기는 변환할 수 있는지 여부를 반환 합니다.는 <xref href=&quot;System.Windows.Expression&quot;> </xref> 개체를 특정 대상 형식입니다."
  syntax:
    content: public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> 형식 컨텍스트를 제공 하는 합니다."
    - id: destinationType
      type: System.Type
      description: "A <xref:System.Type>를 변환할 형식을 나타내는.</xref:System.Type>"
    return:
      type: System.Boolean
      description: "Always <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.ExpressionConverter.CanConvertTo*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ExpressionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.Windows.ExpressionConverter
  langs:
  - csharp
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: ExpressionConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.Windows.ExpressionConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "제공 된 값을 변환의 <xref href=&quot;System.Windows.Expression&quot;> </xref> 유형입니다."
  syntax:
    content: public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> 형식 컨텍스트를 제공 하는 합니다."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "<xref:System.Globalization.CultureInfo>현재 문화권으로 사용할.</xref:System.Globalization.CultureInfo>"
    - id: value
      type: System.Object
      description: "변환할 개체입니다."
    return:
      type: System.Object
      description: "항상 예외를 throw 하 고 반환 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.ExpressionConverter.ConvertFrom*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ExpressionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  id: ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.Windows.ExpressionConverter
  langs:
  - csharp
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: ExpressionConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.Windows.ExpressionConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "제공 된 변환 <xref href=&quot;System.Windows.Expression&quot;> </xref> 개체를 지정 된 형식입니다."
  syntax:
    content: public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> 형식 컨텍스트를 제공 하는 합니다."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "<xref:System.Globalization.CultureInfo>현재 문화권으로 사용할.</xref:System.Globalization.CultureInfo>"
    - id: value
      type: System.Object
      description: "변환할 개체입니다."
    - id: destinationType
      type: System.Type
      description: "A <xref:System.Type>를 변환할 형식을 나타내는.</xref:System.Type>"
    return:
      type: System.Object
      description: "항상 예외를 throw 하 고 반환 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.ExpressionConverter.ConvertTo*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.TypeConverter
  isExternal: false
  name: System.ComponentModel.TypeConverter
- uid: System.Windows.ExpressionConverter.#ctor
  parent: System.Windows.ExpressionConverter
  isExternal: false
  name: ExpressionConverter()
  nameWithType: ExpressionConverter.ExpressionConverter()
  fullName: System.Windows.ExpressionConverter.ExpressionConverter()
- uid: System.Windows.ExpressionConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Windows.ExpressionConverter
  isExternal: false
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: ExpressionConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.Windows.ExpressionConverter.CanConvertFrom(ITypeDescriptorContext,Type)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.ITypeDescriptorContext
  parent: System.ComponentModel
  isExternal: false
  name: ITypeDescriptorContext
  nameWithType: ITypeDescriptorContext
  fullName: System.ComponentModel.ITypeDescriptorContext
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Windows.ExpressionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Windows.ExpressionConverter
  isExternal: false
  name: CanConvertTo(ITypeDescriptorContext,Type)
  nameWithType: ExpressionConverter.CanConvertTo(ITypeDescriptorContext,Type)
  fullName: System.Windows.ExpressionConverter.CanConvertTo(ITypeDescriptorContext,Type)
- uid: System.Windows.ExpressionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.Windows.ExpressionConverter
  isExternal: false
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: ExpressionConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.Windows.ExpressionConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Windows.ExpressionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.Windows.ExpressionConverter
  isExternal: false
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: ExpressionConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.Windows.ExpressionConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
- uid: System.Windows.ExpressionConverter.#ctor*
  parent: System.Windows.ExpressionConverter
  isExternal: false
  name: ExpressionConverter
  nameWithType: ExpressionConverter.ExpressionConverter
- uid: System.Windows.ExpressionConverter.CanConvertFrom*
  parent: System.Windows.ExpressionConverter
  isExternal: false
  name: CanConvertFrom
  nameWithType: ExpressionConverter.CanConvertFrom
- uid: System.Windows.ExpressionConverter.CanConvertTo*
  parent: System.Windows.ExpressionConverter
  isExternal: false
  name: CanConvertTo
  nameWithType: ExpressionConverter.CanConvertTo
- uid: System.Windows.ExpressionConverter.ConvertFrom*
  parent: System.Windows.ExpressionConverter
  isExternal: false
  name: ConvertFrom
  nameWithType: ExpressionConverter.ConvertFrom
- uid: System.Windows.ExpressionConverter.ConvertTo*
  parent: System.Windows.ExpressionConverter
  isExternal: false
  name: ConvertTo
  nameWithType: ExpressionConverter.ConvertTo
