### YamlMime:ManagedReference
items:
- uid: System.Net.Cache.HttpRequestCacheLevel
  id: HttpRequestCacheLevel
  children:
  - System.Net.Cache.HttpRequestCacheLevel.BypassCache
  - System.Net.Cache.HttpRequestCacheLevel.CacheIfAvailable
  - System.Net.Cache.HttpRequestCacheLevel.CacheOnly
  - System.Net.Cache.HttpRequestCacheLevel.CacheOrNextCacheOnly
  - System.Net.Cache.HttpRequestCacheLevel.Default
  - System.Net.Cache.HttpRequestCacheLevel.NoCacheNoStore
  - System.Net.Cache.HttpRequestCacheLevel.Refresh
  - System.Net.Cache.HttpRequestCacheLevel.Reload
  - System.Net.Cache.HttpRequestCacheLevel.Revalidate
  langs:
  - csharp
  name: HttpRequestCacheLevel
  nameWithType: HttpRequestCacheLevel
  fullName: System.Net.Cache.HttpRequestCacheLevel
  type: Enum
  summary: "하이퍼텍스트 전송 프로토콜 (HTTP)를 사용 하 여 얻은 리소스에 대 한 캐싱 동작을 지정 합니다."
  remarks: "이 열거형을 사용 하 여 지정 된 캐시 수준 설정를 <xref:System.Net.Cache.HttpRequestCachePolicy>개체입니다.</xref:System.Net.Cache.HttpRequestCachePolicy>       이 BypassCache 값은.NET Framework와 함께 제공 되는 컴퓨터 구성 파일에 지정 된 기본 캐시 동작입니다. 항목이 없습니다. 캐시에서 가져온, 캐시의 경우 추가 되거나 캐시 클라이언트와 서버에서에서 제거 합니다.       <xref:System.Net.HttpWebRequest.DefaultCachePolicy%2A?displayProperty=fullName>속성은 가져오기 또는 설정에 대 한 기본 캐시 정책을 사용 <xref:System.Net.HttpWebRequest>인스턴스.</xref:System.Net.HttpWebRequest> </xref:System.Net.HttpWebRequest.DefaultCachePolicy%2A?displayProperty=fullName> <xref:System.Net.WebRequest.CachePolicy%2A?displayProperty=fullName>속성은에 대 한 기본 캐시 정책을 가져오거나 설정 하는 데 사용 되는 <xref:System.Net.WebRequest>인스턴스.</xref:System.Net.WebRequest> </xref:System.Net.WebRequest.CachePolicy%2A?displayProperty=fullName> <xref:System.Net.WebRequest.CachePolicy%2A?displayProperty=fullName>속성은 특정 요청에 대 한 캐시 정책을 가져오거나 설정 하는 데 사용 됩니다.</xref:System.Net.WebRequest.CachePolicy%2A?displayProperty=fullName>       리소스에 대 한 응답 스트림을 검색 하는 스트림의 끝에 대 한 읽기 경우에 리소스의 복사본을 캐시에 추가 됩니다. 이므로 동일한 리소스에 대 한 다른 요청에는이 요청에 대 한 기본 캐시 정책 수준에 따라 캐시 된 복사본을 사용할 수 있습니다."
  example:
  - "The following code example sets the application domain's caching policy to Default.  \n  \n [!code-cpp[NCLSimpleCache#2](~/add/codesnippet/cpp/t-system.net.cache.httpr_1_1.cpp)]\n [!code-cs[NCLSimpleCache#2](~/add/codesnippet/csharp/t-system.net.cache.httpr_1_1.cs)]"
  syntax:
    content: public enum HttpRequestCacheLevel
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.Net.Cache.HttpRequestCacheLevel.BypassCache
  id: BypassCache
  parent: System.Net.Cache.HttpRequestCacheLevel
  langs:
  - csharp
  name: BypassCache
  nameWithType: HttpRequestCacheLevel.BypassCache
  fullName: System.Net.Cache.HttpRequestCacheLevel.BypassCache
  type: Field
  assemblies:
  - System
  namespace: System.Net.Cache
  summary: "서버를 사용 하 여 요청을 만족 시킵니다. 항목이 없습니다. 캐시에서 가져온, 캐시의 경우 추가 되거나 캐시 클라이언트와 서버에서에서 제거 합니다. 항목이 없습니다. 캐시에서 가져온, 캐시의 경우 추가 되거나 캐시 클라이언트와 서버에서에서 제거 합니다. 이 동작은.NET Framework와 함께 제공 되는 컴퓨터 구성 파일에 지정 된 기본 캐시 동작 합니다."
  syntax:
    content: BypassCache
    return:
      type: System.Net.Cache.HttpRequestCacheLevel
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Net.Cache.HttpRequestCacheLevel.CacheIfAvailable
  id: CacheIfAvailable
  parent: System.Net.Cache.HttpRequestCacheLevel
  langs:
  - csharp
  name: CacheIfAvailable
  nameWithType: HttpRequestCacheLevel.CacheIfAvailable
  fullName: System.Net.Cache.HttpRequestCacheLevel.CacheIfAvailable
  type: Field
  assemblies:
  - System
  namespace: System.Net.Cache
  summary: "리소스가 있는 경우 사용할 수 있습니다; 캐시에서 리소스에 대 한 요청을 만족 시킵니다. 그렇지 않으면 서버에는 리소스에 대 한 요청을 보냅니다. 요청 된 항목이 클라이언트와 서버 간의 모든 캐시에 표시 되 면 중간 캐시에서 요청을 충족할 수 있습니다."
  syntax:
    content: CacheIfAvailable
    return:
      type: System.Net.Cache.HttpRequestCacheLevel
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Net.Cache.HttpRequestCacheLevel.CacheOnly
  id: CacheOnly
  parent: System.Net.Cache.HttpRequestCacheLevel
  langs:
  - csharp
  name: CacheOnly
  nameWithType: HttpRequestCacheLevel.CacheOnly
  fullName: System.Net.Cache.HttpRequestCacheLevel.CacheOnly
  type: Field
  assemblies:
  - System
  namespace: System.Net.Cache
  summary: "로컬로 캐시 된 리소스를 사용 하 여 요청을 충족 합니다. 캐시에 없는 항목에 대 한 요청을 보내지 않습니다. 이 캐시 정책 수준이 지정 된 경우는 <xref:System.Net.WebException>클라이언트 캐시에는 항목이 없는 경우 예외가 throw 됩니다.</xref:System.Net.WebException>"
  syntax:
    content: CacheOnly
    return:
      type: System.Net.Cache.HttpRequestCacheLevel
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Net.Cache.HttpRequestCacheLevel.CacheOrNextCacheOnly
  id: CacheOrNextCacheOnly
  parent: System.Net.Cache.HttpRequestCacheLevel
  langs:
  - csharp
  name: CacheOrNextCacheOnly
  nameWithType: HttpRequestCacheLevel.CacheOrNextCacheOnly
  fullName: System.Net.Cache.HttpRequestCacheLevel.CacheOrNextCacheOnly
  type: Field
  assemblies:
  - System
  namespace: System.Net.Cache
  summary: "로컬 컴퓨터의 캐시 또는 로컬 영역 네트워크에 원격 캐시에서 리소스에 대 한 요청을 충족합니다. 요청을 처리 하는 경우는 <xref:System.Net.WebException>예외가 throw 됩니다.</xref:System.Net.WebException> HTTP 프로토콜 캐싱에서 작업을 수행를 사용 하는 <xref uid=&quot;langword_csharp_only-if-cached&quot; name=&quot;only-if-cached&quot; href=&quot;&quot;> </xref> 캐시 제어 지시문입니다."
  syntax:
    content: CacheOrNextCacheOnly
    return:
      type: System.Net.Cache.HttpRequestCacheLevel
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Net.Cache.HttpRequestCacheLevel.Default
  id: Default
  parent: System.Net.Cache.HttpRequestCacheLevel
  langs:
  - csharp
  name: Default
  nameWithType: HttpRequestCacheLevel.Default
  fullName: System.Net.Cache.HttpRequestCacheLevel.Default
  type: Field
  assemblies:
  - System
  namespace: System.Net.Cache
  summary: "리소스의 캐시 된 복사본을 사용 하거나 서버에 리소스에 대 한 요청을 전송 하 여 리소스에 대 한 요청을 충족 합니다. 수행 되는 작업은 현재 캐시 정책 및 캐시에 콘텐츠의 나 이에 의해 결정 됩니다. 대부분의 응용 프로그램에서 사용 해야 하는 캐시 수준입니다."
  syntax:
    content: Default
    return:
      type: System.Net.Cache.HttpRequestCacheLevel
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Net.Cache.HttpRequestCacheLevel.NoCacheNoStore
  id: NoCacheNoStore
  parent: System.Net.Cache.HttpRequestCacheLevel
  langs:
  - csharp
  name: NoCacheNoStore
  nameWithType: HttpRequestCacheLevel.NoCacheNoStore
  fullName: System.Net.Cache.HttpRequestCacheLevel.NoCacheNoStore
  type: Field
  assemblies:
  - System
  namespace: System.Net.Cache
  summary: "캐시에서 리소스를 사용 하 여 요청을 만족시 키 지 않고 및 리소스를 캐시 하지 않습니다. 리소스는 로컬 캐시에 있는 경우 제거 됩니다. 이 정책 수준의 리소스를 제거 해야 함을 중간 캐시를 나타냅니다. Http 프로토콜 캐싱, 아니요 캐시 캐시 제어 지시문을 사용 하 여이 이루어집니다."
  syntax:
    content: NoCacheNoStore
    return:
      type: System.Net.Cache.HttpRequestCacheLevel
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Net.Cache.HttpRequestCacheLevel.Refresh
  id: Refresh
  parent: System.Net.Cache.HttpRequestCacheLevel
  langs:
  - csharp
  name: Refresh
  nameWithType: HttpRequestCacheLevel.Refresh
  fullName: System.Net.Cache.HttpRequestCacheLevel.Refresh
  type: Field
  assemblies:
  - System
  namespace: System.Net.Cache
  summary: "로컬 캐시 이외의 서버 또는 캐시를 사용 하 여 요청을 만족 시킵니다. 중간 캐시 하 여 요청을 충족할 수 있습니다, 전에 해당 캐시 서버와 캐시 된 엔트리의 유효성 다시 검사 해야 합니다. HTTP 프로토콜 캐싱에서 작업을 수행 최대 처리 기간을 사용 하 여 = 0 캐시 제어 지시문 및 no-cache <xref uid=&quot;langword_csharp_Pragma&quot; name=&quot;Pragma&quot; href=&quot;&quot;> </xref> 헤더입니다."
  syntax:
    content: Refresh
    return:
      type: System.Net.Cache.HttpRequestCacheLevel
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Net.Cache.HttpRequestCacheLevel.Reload
  id: Reload
  parent: System.Net.Cache.HttpRequestCacheLevel
  langs:
  - csharp
  name: Reload
  nameWithType: HttpRequestCacheLevel.Reload
  fullName: System.Net.Cache.HttpRequestCacheLevel.Reload
  type: Field
  assemblies:
  - System
  namespace: System.Net.Cache
  summary: "서버를 사용 하 여 요청을 만족 시킵니다. 응답을 캐시에 저장 되어 있습니다. HTTP 프로토콜 캐싱에서 작업을 수행 아니요 캐시 캐시 제어 지시문 및 없음 캐시를 사용 하 여 <xref uid=&quot;langword_csharp_Pragma&quot; name=&quot;Pragma&quot; href=&quot;&quot;> </xref> 헤더입니다."
  syntax:
    content: Reload
    return:
      type: System.Net.Cache.HttpRequestCacheLevel
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Net.Cache.HttpRequestCacheLevel.Revalidate
  id: Revalidate
  parent: System.Net.Cache.HttpRequestCacheLevel
  langs:
  - csharp
  name: Revalidate
  nameWithType: HttpRequestCacheLevel.Revalidate
  fullName: System.Net.Cache.HttpRequestCacheLevel.Revalidate
  type: Field
  assemblies:
  - System
  namespace: System.Net.Cache
  summary: "서버에 있는 복사본과 캐시에 있는 리소스의 복사본을 비교합니다. 서버에 사본을 새 버전인 경우 요청을 처리 하는 데 사용 하 고 캐시의 복사본을 대체 합니다. 캐시에 복사본의 서버 복사본과 동일한 경우에 캐시 된 복사본이 사용 됩니다. 캐싱 프로토콜 http에서 조건부 요청을 사용 하 여 이루어집니다."
  syntax:
    content: Revalidate
    return:
      type: System.Net.Cache.HttpRequestCacheLevel
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.Net.Cache.HttpRequestCacheLevel.BypassCache
  parent: System.Net.Cache.HttpRequestCacheLevel
  isExternal: false
  name: BypassCache
  nameWithType: HttpRequestCacheLevel.BypassCache
  fullName: System.Net.Cache.HttpRequestCacheLevel.BypassCache
- uid: System.Net.Cache.HttpRequestCacheLevel
  parent: System.Net.Cache
  isExternal: false
  name: HttpRequestCacheLevel
  nameWithType: HttpRequestCacheLevel
  fullName: System.Net.Cache.HttpRequestCacheLevel
- uid: System.Net.Cache.HttpRequestCacheLevel.CacheIfAvailable
  parent: System.Net.Cache.HttpRequestCacheLevel
  isExternal: false
  name: CacheIfAvailable
  nameWithType: HttpRequestCacheLevel.CacheIfAvailable
  fullName: System.Net.Cache.HttpRequestCacheLevel.CacheIfAvailable
- uid: System.Net.Cache.HttpRequestCacheLevel.CacheOnly
  parent: System.Net.Cache.HttpRequestCacheLevel
  isExternal: false
  name: CacheOnly
  nameWithType: HttpRequestCacheLevel.CacheOnly
  fullName: System.Net.Cache.HttpRequestCacheLevel.CacheOnly
- uid: System.Net.Cache.HttpRequestCacheLevel.CacheOrNextCacheOnly
  parent: System.Net.Cache.HttpRequestCacheLevel
  isExternal: false
  name: CacheOrNextCacheOnly
  nameWithType: HttpRequestCacheLevel.CacheOrNextCacheOnly
  fullName: System.Net.Cache.HttpRequestCacheLevel.CacheOrNextCacheOnly
- uid: System.Net.Cache.HttpRequestCacheLevel.Default
  parent: System.Net.Cache.HttpRequestCacheLevel
  isExternal: false
  name: Default
  nameWithType: HttpRequestCacheLevel.Default
  fullName: System.Net.Cache.HttpRequestCacheLevel.Default
- uid: System.Net.Cache.HttpRequestCacheLevel.NoCacheNoStore
  parent: System.Net.Cache.HttpRequestCacheLevel
  isExternal: false
  name: NoCacheNoStore
  nameWithType: HttpRequestCacheLevel.NoCacheNoStore
  fullName: System.Net.Cache.HttpRequestCacheLevel.NoCacheNoStore
- uid: System.Net.Cache.HttpRequestCacheLevel.Refresh
  parent: System.Net.Cache.HttpRequestCacheLevel
  isExternal: false
  name: Refresh
  nameWithType: HttpRequestCacheLevel.Refresh
  fullName: System.Net.Cache.HttpRequestCacheLevel.Refresh
- uid: System.Net.Cache.HttpRequestCacheLevel.Reload
  parent: System.Net.Cache.HttpRequestCacheLevel
  isExternal: false
  name: Reload
  nameWithType: HttpRequestCacheLevel.Reload
  fullName: System.Net.Cache.HttpRequestCacheLevel.Reload
- uid: System.Net.Cache.HttpRequestCacheLevel.Revalidate
  parent: System.Net.Cache.HttpRequestCacheLevel
  isExternal: false
  name: Revalidate
  nameWithType: HttpRequestCacheLevel.Revalidate
  fullName: System.Net.Cache.HttpRequestCacheLevel.Revalidate
