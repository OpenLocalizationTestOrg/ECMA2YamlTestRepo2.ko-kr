### YamlMime:ManagedReference
items:
- uid: System.Windows.Data.BindingOperations
  id: BindingOperations
  children:
  - System.Windows.Data.BindingOperations.AccessCollection(System.Collections.IEnumerable,System.Action,System.Boolean)
  - System.Windows.Data.BindingOperations.ClearAllBindings(System.Windows.DependencyObject)
  - System.Windows.Data.BindingOperations.ClearBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)
  - System.Windows.Data.BindingOperations.CollectionRegistering
  - System.Windows.Data.BindingOperations.CollectionViewRegistering
  - System.Windows.Data.BindingOperations.DisableCollectionSynchronization(System.Collections.IEnumerable)
  - System.Windows.Data.BindingOperations.DisconnectedSource
  - System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)
  - System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)
  - System.Windows.Data.BindingOperations.GetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)
  - System.Windows.Data.BindingOperations.GetBindingBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)
  - System.Windows.Data.BindingOperations.GetBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)
  - System.Windows.Data.BindingOperations.GetBindingExpressionBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)
  - System.Windows.Data.BindingOperations.GetMultiBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)
  - System.Windows.Data.BindingOperations.GetMultiBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)
  - System.Windows.Data.BindingOperations.GetPriorityBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)
  - System.Windows.Data.BindingOperations.GetPriorityBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)
  - System.Windows.Data.BindingOperations.GetSourceUpdatingBindingGroups(System.Windows.DependencyObject)
  - System.Windows.Data.BindingOperations.GetSourceUpdatingBindings(System.Windows.DependencyObject)
  - System.Windows.Data.BindingOperations.IsDataBound(System.Windows.DependencyObject,System.Windows.DependencyProperty)
  - System.Windows.Data.BindingOperations.SetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Windows.Data.BindingBase)
  langs:
  - csharp
  name: BindingOperations
  nameWithType: BindingOperations
  fullName: System.Windows.Data.BindingOperations
  type: Class
  summary: "를 포함 하 여 바인딩을 조작 하는 정적 메서드를 제공 <xref href=&quot;System.Windows.Data.Binding&quot;> </xref>, <xref href=&quot;System.Windows.Data.MultiBinding&quot;> </xref>, 및 <xref href=&quot;System.Windows.Data.PriorityBinding&quot;> </xref> 개체입니다."
  remarks: "이 클래스에 대 한 데이터 바인딩의 도우미 작업으로 사용 하는 정적 메서드 집합을 노출 합니다."
  syntax:
    content: public static class BindingOperations
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Data.BindingOperations.AccessCollection(System.Collections.IEnumerable,System.Action,System.Boolean)
  id: AccessCollection(System.Collections.IEnumerable,System.Action,System.Boolean)
  parent: System.Windows.Data.BindingOperations
  langs:
  - csharp
  name: AccessCollection(IEnumerable,Action,Boolean)
  nameWithType: BindingOperations.AccessCollection(IEnumerable,Action,Boolean)
  fullName: System.Windows.Data.BindingOperations.AccessCollection(IEnumerable,Action,Boolean)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "응용 프로그램 EnableCollectionSynchronization를 호출할 때 지정 된 동기화 메커니즘을 사용 하 여 컬렉션에 대 한 액세스를 제공 합니다."
  syntax:
    content: public static void AccessCollection (System.Collections.IEnumerable collection, Action accessMethod, bool writeAccess);
    parameters:
    - id: collection
      type: System.Collections.IEnumerable
      description: "컬렉션에 액세스입니다."
    - id: accessMethod
      type: System.Action
      description: "컬렉션에서 수행할 동작입니다."
    - id: writeAccess
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>경우 `accessMethod` 컬렉션;에 쓸 그렇지 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Data.BindingOperations.AccessCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingOperations.ClearAllBindings(System.Windows.DependencyObject)
  id: ClearAllBindings(System.Windows.DependencyObject)
  parent: System.Windows.Data.BindingOperations
  langs:
  - csharp
  name: ClearAllBindings(DependencyObject)
  nameWithType: BindingOperations.ClearAllBindings(DependencyObject)
  fullName: System.Windows.Data.BindingOperations.ClearAllBindings(DependencyObject)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "형식의 바인딩을 포함 한 모든 바인딩을 제거 <xref href=&quot;System.Windows.Data.Binding&quot;> </xref>, <xref href=&quot;System.Windows.Data.MultiBinding&quot;> </xref>, 및 <xref href=&quot;System.Windows.Data.PriorityBinding&quot;> </xref>, 지정 된 위치에서 <xref href=&quot;System.Windows.DependencyObject&quot;> </xref>합니다."
  remarks: "지정된 된 개체 데이터 바인딩된 없으면이 메서드는 영향을 주지 않습니다."
  syntax:
    content: public static void ClearAllBindings (System.Windows.DependencyObject target);
    parameters:
    - id: target
      type: System.Windows.DependencyObject
      description: "바인딩을 제거할 개체입니다."
  overload: System.Windows.Data.BindingOperations.ClearAllBindings*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "If <code>target</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Data.BindingOperations.ClearBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)
  id: ClearBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)
  parent: System.Windows.Data.BindingOperations
  langs:
  - csharp
  name: ClearBinding(DependencyObject,DependencyProperty)
  nameWithType: BindingOperations.ClearBinding(DependencyObject,DependencyProperty)
  fullName: System.Windows.Data.BindingOperations.ClearBinding(DependencyObject,DependencyProperty)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "있는 경우 속성에서 바인딩을 제거 합니다."
  remarks: "지정된 된 속성은 데이터 바인딩 사용 하는 경우는 <xref:System.Windows.Data.Binding>, <xref:System.Windows.Data.PriorityBinding>, 또는 <xref:System.Windows.Data.MultiBinding>,이 메서드는 해당 바인딩 식 및 바인딩을 통해 전에 지역 값 속성의 값이 설정으로 복원 제거.</xref:System.Windows.Data.MultiBinding> </xref:System.Windows.Data.PriorityBinding> </xref:System.Windows.Data.Binding>       지정된 된 속성 데이터 바인딩된 없으면이 메서드는 영향을 주지 않습니다."
  syntax:
    content: public static void ClearBinding (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp);
    parameters:
    - id: target
      type: System.Windows.DependencyObject
      description: "바인딩을 제거할 개체입니다."
    - id: dp
      type: System.Windows.DependencyProperty
      description: "바인딩을 제거 하는 종속성 속성입니다."
  overload: System.Windows.Data.BindingOperations.ClearBinding*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>target</code> and <code>dp</code> parameters cannot be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Data.BindingOperations.CollectionRegistering
  id: CollectionRegistering
  parent: System.Windows.Data.BindingOperations
  langs:
  - csharp
  name: CollectionRegistering
  nameWithType: BindingOperations.CollectionRegistering
  fullName: System.Windows.Data.BindingOperations.CollectionRegistering
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "데이터 바인딩 시스템과 알림 컬렉션 때 발생 합니다."
  syntax:
    content: public static event EventHandler<System.Windows.Data.CollectionRegisteringEventArgs> CollectionRegistering;
    return:
      type: System.EventHandler{System.Windows.Data.CollectionRegisteringEventArgs}
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingOperations.CollectionViewRegistering
  id: CollectionViewRegistering
  parent: System.Windows.Data.BindingOperations
  langs:
  - csharp
  name: CollectionViewRegistering
  nameWithType: BindingOperations.CollectionViewRegistering
  fullName: System.Windows.Data.BindingOperations.CollectionViewRegistering
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "컬렉션 뷰 정보는 데이터 바인딩 시스템과 때 발생 합니다."
  syntax:
    content: public static event EventHandler<System.Windows.Data.CollectionViewRegisteringEventArgs> CollectionViewRegistering;
    return:
      type: System.EventHandler{System.Windows.Data.CollectionViewRegisteringEventArgs}
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingOperations.DisableCollectionSynchronization(System.Collections.IEnumerable)
  id: DisableCollectionSynchronization(System.Collections.IEnumerable)
  parent: System.Windows.Data.BindingOperations
  langs:
  - csharp
  name: DisableCollectionSynchronization(IEnumerable)
  nameWithType: BindingOperations.DisableCollectionSynchronization(IEnumerable)
  fullName: System.Windows.Data.BindingOperations.DisableCollectionSynchronization(IEnumerable)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "지정된 된 컬렉션에 대해 등록 된 동기화를 제거 합니다."
  syntax:
    content: public static void DisableCollectionSynchronization (System.Collections.IEnumerable collection);
    parameters:
    - id: collection
      type: System.Collections.IEnumerable
      description: "동기화 된 액세스를 제거 하려면 컬렉션입니다."
  overload: System.Windows.Data.BindingOperations.DisableCollectionSynchronization*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingOperations.DisconnectedSource
  id: DisconnectedSource
  parent: System.Windows.Data.BindingOperations
  langs:
  - csharp
  name: DisconnectedSource
  nameWithType: BindingOperations.DisconnectedSource
  fullName: System.Windows.Data.BindingOperations.DisconnectedSource
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "대체 하는 개체를 가져옵니다는 <xref:System.Windows.FrameworkElement.DataContext*>항목 컨테이너 시각적 트리에서 제거 되는 경우.</xref:System.Windows.FrameworkElement.DataContext*>"
  remarks: "처리 하는 경우이 속성을 사용 하 여는 <xref:System.Windows.FrameworkElement.DataContext%2A>항목 컨테이너의.</xref:System.Windows.FrameworkElement.DataContext%2A>  항목 컨테이너는 <xref:System.Windows.Controls.ItemsControl>.</xref:System.Windows.Controls.ItemsControl> 항목을 표시 하는 UI 요소  경우는 <xref:System.Windows.Controls.ItemsControl>는 데이터 컬렉션에 바인딩된 항목 컨테이너는 각 항목에 대해 생성 됩니다.</xref:System.Windows.Controls.ItemsControl>  경우에 따라 컨테이너의 항목은 시각적 트리에서 제거 됩니다.  두 가지 일반적인 경우 항목 컨테이너 제거 되는 가상화 <xref:System.Windows.Controls.ItemsControl>.</xref:System.Windows.Controls.ItemsControl> 에서 설정 및 기본 컬렉션에서 항목이 제거 될 때  이러한 경우에는 <xref:System.Windows.FrameworkElement.DataContext%2A>항목 컨테이너의 속성을 확인 해야 DisconnectedSource 속성으로 설정 됩니다 여부는 <xref:System.Windows.FrameworkElement.DataContext%2A>같은지는 DisconnectedSource에 액세스 하기 전에 <xref:System.Windows.FrameworkElement.DataContext%2A>에 <xref:System.Windows.FrameworkElement.DataContextChanged>컨테이너의 항목에 대 한 이벤트.</xref:System.Windows.FrameworkElement.DataContextChanged> </xref:System.Windows.FrameworkElement.DataContext%2A> </xref:System.Windows.FrameworkElement.DataContext%2A> </xref:System.Windows.FrameworkElement.DataContext%2A> 컨테이너의 항목 및 가상화에 대 한 자세한 내용은 <xref:System.Windows.Controls.VirtualizingStackPanel>클래스</xref:System.Windows.Controls.VirtualizingStackPanel> 의 설명 부분을 참조 하십시오."
  syntax:
    content: public static object DisconnectedSource { get; }
    return:
      type: System.Object
      description: "대체 하는 개체는 <xref:System.Windows.FrameworkElement.DataContext*>항목 컨테이너 시각적 트리에서 제거 되는 경우.</xref:System.Windows.FrameworkElement.DataContext*>"
  overload: System.Windows.Data.BindingOperations.DisconnectedSource*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)
  id: EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)
  parent: System.Windows.Data.BindingOperations
  langs:
  - csharp
  name: EnableCollectionSynchronization(IEnumerable,Object)
  nameWithType: BindingOperations.EnableCollectionSynchronization(IEnumerable,Object)
  fullName: System.Windows.Data.BindingOperations.EnableCollectionSynchronization(IEnumerable,Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "에 액세스 하 여 여러 스레드에서 컬렉션을 설정 하 고 컬렉션에 대 한 액세스를 동기화 하는 데 사용 해야 하는 잠금 개체를 지정 합니다."
  remarks: "많은 데이터를 수집 하거나 수정 하는 경우에 백그라운드 스레드를 사용 하 여를 수집 하 여 사용자 인터페이스에 입력 사후 계속 데이터를 수정 하는 것이 좋습니다.  컬렉션에 액세스 하는 여러 스레드를 사용 하도록 설정 하려면 EnableCollectionSynchronization 메서드를 호출 합니다.  EnableCollectionSynchronization 메서드의이 오버 로드를 호출 하면 액세스 하는 경우 시스템 컬렉션을 잠급니다.  호출 컬렉션을 직접 잠금에 대 한 콜백을 지정 하려면는 <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%28System.Collections.IEnumerable%2CSystem.Object%2CSystem.Windows.Data.CollectionSynchronizationCallback%29>오버 로드.</xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%28System.Collections.IEnumerable%2CSystem.Object%2CSystem.Windows.Data.CollectionSynchronizationCallback%29>"
  syntax:
    content: public static void EnableCollectionSynchronization (System.Collections.IEnumerable collection, object lockObject);
    parameters:
    - id: collection
      type: System.Collections.IEnumerable
      description: "동기화 된 액세스를 필요로 하는 컬렉션입니다."
    - id: lockObject
      type: System.Object
      description: "개체 컬렉션에 액세스할 때 잠글입니다."
  overload: System.Windows.Data.BindingOperations.EnableCollectionSynchronization*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)
  id: EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)
  parent: System.Windows.Data.BindingOperations
  langs:
  - csharp
  name: EnableCollectionSynchronization(IEnumerable,Object,CollectionSynchronizationCallback)
  nameWithType: BindingOperations.EnableCollectionSynchronization(IEnumerable,Object,CollectionSynchronizationCallback)
  fullName: System.Windows.Data.BindingOperations.EnableCollectionSynchronization(IEnumerable,Object,CollectionSynchronizationCallback)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "컬렉션에 여러 스레드에서 액세스할 수 있으며 특정 컬렉션에 대 한 액세스를 동기화 하는 데 사용 해야 하는 콜백을 지정 합니다."
  remarks: "많은 데이터를 수집 하거나 수정 하는 경우에 백그라운드 스레드를 사용 하 여를 수집 하 여 사용자 인터페이스에 입력 사후 계속 데이터를 수정 하는 것이 좋습니다.  컬렉션에 액세스 하는 여러 스레드를 사용 하도록 설정 하려면 EnableCollectionSynchronization 메서드를 호출 합니다.  EnableCollectionSynchronization 메서드의이 오버 로드를 사용 하면 한 번에 한 스레드에서 컬렉션에 액세스할 수 있는지는 보장 하는 콜백을 지정할 수 있습니다.  호출 하 여 컬렉션을 잠글 시스템을 사용할 수 있습니다는 <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%28System.Collections.IEnumerable%2CSystem.Object%29>오버 로드.</xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%28System.Collections.IEnumerable%2CSystem.Object%29>  `context` 매개 변수는 컬렉션의 동기화를 사용 하도록 설정 하면 알려진 정보를 사용할 수 있는 임의의 개체입니다. 이 콜백에 전달 되 고 액세스를 제어 하는 데는 동기화 메커니즘을 결정 하는 데 사용할 수 `collection`합니다. `Context`수 `null`합니다."
  syntax:
    content: public static void EnableCollectionSynchronization (System.Collections.IEnumerable collection, object context, System.Windows.Data.CollectionSynchronizationCallback synchronizationCallback);
    parameters:
    - id: collection
      type: System.Collections.IEnumerable
      description: "동기화 된 액세스를 필요로 하는 컬렉션입니다."
    - id: context
      type: System.Object
      description: "콜백에 전달 되는 개체입니다."
    - id: synchronizationCallback
      type: System.Windows.Data.CollectionSynchronizationCallback
      description: "컬렉션에 대 한 액세스가 필요할 때마다 호출 되는 콜백."
  overload: System.Windows.Data.BindingOperations.EnableCollectionSynchronization*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingOperations.GetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)
  id: GetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)
  parent: System.Windows.Data.BindingOperations
  langs:
  - csharp
  name: GetBinding(DependencyObject,DependencyProperty)
  nameWithType: BindingOperations.GetBinding(DependencyObject,DependencyProperty)
  fullName: System.Windows.Data.BindingOperations.GetBinding(DependencyObject,DependencyProperty)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "검색 된 <xref href=&quot;System.Windows.Data.Binding&quot;> </xref> 지정된 된 속성에 설정 된 개체입니다."
  syntax:
    content: public static System.Windows.Data.Binding GetBinding (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp);
    parameters:
    - id: target
      type: System.Windows.DependencyObject
      description: "개체가 있는 `dp` 됩니다."
    - id: dp
      type: System.Windows.DependencyProperty
      description: "바인딩을 검색할 바인딩 대상 속성입니다."
    return:
      type: System.Windows.Data.Binding
      description: "<xref href=&quot;System.Windows.Data.Binding&quot;> </xref> 지정된 된 속성에 설정 하는 개체 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 없으면 <xref href=&quot;System.Windows.Data.Binding&quot;> </xref> 개체를 설정 합니다."
  overload: System.Windows.Data.BindingOperations.GetBinding*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> target </code> 및 <code> dp </code> 매개 변수는 null 일 수 없습니다."
  platform:
  - net462
- uid: System.Windows.Data.BindingOperations.GetBindingBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)
  id: GetBindingBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)
  parent: System.Windows.Data.BindingOperations
  langs:
  - csharp
  name: GetBindingBase(DependencyObject,DependencyProperty)
  nameWithType: BindingOperations.GetBindingBase(DependencyObject,DependencyProperty)
  fullName: System.Windows.Data.BindingOperations.GetBindingBase(DependencyObject,DependencyProperty)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "검색 된 <xref href=&quot;System.Windows.Data.BindingBase&quot;> </xref> 지정된 된 속성에 설정 된 개체입니다."
  remarks: "<xref:System.Windows.Data.BindingBase>클래스에 대 한 공통 기본 클래스는는 <xref:System.Windows.Data.Binding>, <xref:System.Windows.Data.PriorityBinding>, 및 <xref:System.Windows.Data.MultiBinding>클래스.</xref:System.Windows.Data.MultiBinding> </xref:System.Windows.Data.PriorityBinding> </xref:System.Windows.Data.Binding> </xref:System.Windows.Data.BindingBase> 사용할 수는 <xref:System.Windows.Data.BindingOperations.GetBinding%2A>, <xref:System.Windows.Data.BindingOperations.GetPriorityBinding%2A>, 및 <xref:System.Windows.Data.BindingOperations.GetMultiBinding%2A>된 바인딩 형식을 미리 알고 있으면 메서드는 속성에 설정 합니다.</xref:System.Windows.Data.BindingOperations.GetMultiBinding%2A> </xref:System.Windows.Data.BindingOperations.GetPriorityBinding%2A> </xref:System.Windows.Data.BindingOperations.GetBinding%2A>"
  syntax:
    content: public static System.Windows.Data.BindingBase GetBindingBase (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp);
    parameters:
    - id: target
      type: System.Windows.DependencyObject
      description: "개체가 있는 `dp` 됩니다."
    - id: dp
      type: System.Windows.DependencyProperty
      description: "검색할 바인딩 대상 속성은 <xref href=&quot;System.Windows.Data.BindingBase&quot;> </xref> 개체입니다."
    return:
      type: System.Windows.Data.BindingBase
      description: "<xref href=&quot;System.Windows.Data.BindingBase&quot;> </xref> 지정된 된 속성에 설정 된 개체 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 바인딩 개체가 설정 된 경우."
  overload: System.Windows.Data.BindingOperations.GetBindingBase*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>target</code> and <code>dp</code> parameters cannot be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Data.BindingOperations.GetBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)
  id: GetBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)
  parent: System.Windows.Data.BindingOperations
  langs:
  - csharp
  name: GetBindingExpression(DependencyObject,DependencyProperty)
  nameWithType: BindingOperations.GetBindingExpression(DependencyObject,DependencyProperty)
  fullName: System.Windows.Data.BindingOperations.GetBindingExpression(DependencyObject,DependencyProperty)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "반환 된 <xref href=&quot;System.Windows.Data.BindingExpression&quot;> </xref> 지정된 된 개체에서 지정 된 바인딩 대상 속성과 연결 된 개체입니다."
  remarks: "<xref:System.Windows.Data.BindingExpression>개체 바인딩 소스에서 바인딩 대상 사이의 연결을 유지 합니다.</xref:System.Windows.Data.BindingExpression> 가져올 수 있습니다는 <xref:System.Windows.Data.BindingExpression>이 정적 메서드를 호출 하 여 또는 호출 하 여 개체는 <xref:System.Windows.FrameworkElement.GetBindingExpression%2A>메서드를 데이터 바인딩된 <xref:System.Windows.FrameworkElement>또는 <xref:System.Windows.FrameworkContentElement>개체입니다.</xref:System.Windows.FrameworkContentElement> </xref:System.Windows.FrameworkElement> </xref:System.Windows.FrameworkElement.GetBindingExpression%2A> </xref:System.Windows.Data.BindingExpression>"
  example:
  - "The following example shows the implementation of a <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event handler that uses the GetBindingExpression method to obtain the <xref:System.Windows.Data.BindingExpression> and then calls the <xref:System.Windows.Data.BindingExpression.DataItem%2A> property to access the binding source object.  \n  \n The <xref:System.Windows.Controls.TextBlock>`SavingsText` is the binding target object and <xref:System.Windows.Controls.TextBlock.Text%2A> is the binding target property.  \n  \n [!code-cs[DirectionalBinding#OnRentRaise](~/add/codesnippet/csharp/DirectionalBinding/Page1.xaml.cs#onrentraise)]\n [!code-vb[DirectionalBinding#OnRentRaise](~/add/codesnippet/visualbasic/DirectionalBinding_VB/DirectionalBinding.vb#onrentraise)]"
  syntax:
    content: public static System.Windows.Data.BindingExpression GetBindingExpression (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp);
    parameters:
    - id: target
      type: System.Windows.DependencyObject
      description: "바인딩 대상 개체를 `dp` 됩니다."
    - id: dp
      type: System.Windows.DependencyProperty
      description: "검색할 바인딩 대상 속성은 <xref href=&quot;System.Windows.Data.BindingExpression&quot;> </xref> 개체입니다."
    return:
      type: System.Windows.Data.BindingExpression
      description: "<xref href=&quot;System.Windows.Data.BindingExpression&quot;> </xref> 지정된 된 속성과 연관 된 개체 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 이름이 없는 경우. 경우는 <xref href=&quot;System.Windows.Data.PriorityBindingExpression&quot;> </xref> 개체의 속성에 설정 되어는 <xref:System.Windows.Data.PriorityBindingExpression.ActiveBindingExpression*>반환 됩니다.</xref:System.Windows.Data.PriorityBindingExpression.ActiveBindingExpression*>"
  overload: System.Windows.Data.BindingOperations.GetBindingExpression*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>target</code> and <code>dp</code> parameters cannot be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Data.BindingOperations.GetBindingExpressionBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)
  id: GetBindingExpressionBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)
  parent: System.Windows.Data.BindingOperations
  langs:
  - csharp
  name: GetBindingExpressionBase(DependencyObject,DependencyProperty)
  nameWithType: BindingOperations.GetBindingExpressionBase(DependencyObject,DependencyProperty)
  fullName: System.Windows.Data.BindingOperations.GetBindingExpressionBase(DependencyObject,DependencyProperty)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "검색 된 <xref href=&quot;System.Windows.Data.BindingExpressionBase&quot;> </xref> 지정된 된 속성에 설정 된 개체입니다."
  remarks: "<xref:System.Windows.Data.BindingExpressionBase>클래스에 대 한 공통 기본 클래스는는 <xref:System.Windows.Data.BindingExpression>, <xref:System.Windows.Data.PriorityBindingExpression>, 및 <xref:System.Windows.Data.MultiBindingExpression>클래스.</xref:System.Windows.Data.MultiBindingExpression> </xref:System.Windows.Data.PriorityBindingExpression> </xref:System.Windows.Data.BindingExpression> </xref:System.Windows.Data.BindingExpressionBase> 사용할 수는 <xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A>, <xref:System.Windows.Data.BindingOperations.GetPriorityBindingExpression%2A>, 및 <xref:System.Windows.Data.BindingOperations.GetMultiBindingExpression%2A>메서드는 속성에 설정 되어 있는 바인딩 형식을 미리 알고 있으면.</xref:System.Windows.Data.BindingOperations.GetMultiBindingExpression%2A> </xref:System.Windows.Data.BindingOperations.GetPriorityBindingExpression%2A> </xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A>"
  syntax:
    content: public static System.Windows.Data.BindingExpressionBase GetBindingExpressionBase (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp);
    parameters:
    - id: target
      type: System.Windows.DependencyObject
      description: "개체가 있는 `dp` 됩니다."
    - id: dp
      type: System.Windows.DependencyProperty
      description: "검색할 바인딩 대상 속성은 <xref href=&quot;System.Windows.Data.BindingExpressionBase&quot;> </xref> 개체입니다."
    return:
      type: System.Windows.Data.BindingExpressionBase
      description: "<xref href=&quot;System.Windows.Data.BindingExpressionBase&quot;> </xref> 지정된 된 속성에 설정 된 개체 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 바인딩 개체가 설정 된 경우."
  overload: System.Windows.Data.BindingOperations.GetBindingExpressionBase*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> target </code> 및 <code> dp </code> 매개 변수는 null 일 수 없습니다."
  platform:
  - net462
- uid: System.Windows.Data.BindingOperations.GetMultiBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)
  id: GetMultiBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)
  parent: System.Windows.Data.BindingOperations
  langs:
  - csharp
  name: GetMultiBinding(DependencyObject,DependencyProperty)
  nameWithType: BindingOperations.GetMultiBinding(DependencyObject,DependencyProperty)
  fullName: System.Windows.Data.BindingOperations.GetMultiBinding(DependencyObject,DependencyProperty)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "검색 된 <xref href=&quot;System.Windows.Data.MultiBinding&quot;> </xref> 지정된 된 속성에 설정 된 개체입니다."
  syntax:
    content: public static System.Windows.Data.MultiBinding GetMultiBinding (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp);
    parameters:
    - id: target
      type: System.Windows.DependencyObject
      description: "개체가 있는 `dp` 됩니다."
    - id: dp
      type: System.Windows.DependencyProperty
      description: "바인딩을 검색할 바인딩 대상 속성입니다."
    return:
      type: System.Windows.Data.MultiBinding
      description: "<xref href=&quot;System.Windows.Data.MultiBinding&quot;> </xref> 지정된 된 속성에 설정 하는 개체 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 없으면 <xref href=&quot;System.Windows.Data.MultiBinding&quot;> </xref> 개체를 설정 합니다."
  overload: System.Windows.Data.BindingOperations.GetMultiBinding*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> target </code> 및 <code> dp </code> 매개 변수는 null 일 수 없습니다."
  platform:
  - net462
- uid: System.Windows.Data.BindingOperations.GetMultiBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)
  id: GetMultiBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)
  parent: System.Windows.Data.BindingOperations
  langs:
  - csharp
  name: GetMultiBindingExpression(DependencyObject,DependencyProperty)
  nameWithType: BindingOperations.GetMultiBindingExpression(DependencyObject,DependencyProperty)
  fullName: System.Windows.Data.BindingOperations.GetMultiBindingExpression(DependencyObject,DependencyProperty)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "반환 된 <xref href=&quot;System.Windows.Data.MultiBindingExpression&quot;> </xref> 지정된 된 개체에서 지정 된 바인딩 대상 속성과 연결 된 개체입니다."
  remarks: "<xref:System.Windows.Data.MultiBindingExpression>지정된 된 속성과 연관 된 개체 또는 `null` 존재 하지 않는 경우.</xref:System.Windows.Data.MultiBindingExpression>"
  syntax:
    content: public static System.Windows.Data.MultiBindingExpression GetMultiBindingExpression (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp);
    parameters:
    - id: target
      type: System.Windows.DependencyObject
      description: "바인딩 대상 개체를 `dp` 됩니다."
    - id: dp
      type: System.Windows.DependencyProperty
      description: "검색할 바인딩 대상 속성은 <xref href=&quot;System.Windows.Data.MultiBindingExpression&quot;> </xref> 개체입니다."
    return:
      type: System.Windows.Data.MultiBindingExpression
      description: "<xref href=&quot;System.Windows.Data.MultiBindingExpression&quot;> </xref> 지정된 된 속성과 연관 된 개체 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 이름이 없는 경우."
  overload: System.Windows.Data.BindingOperations.GetMultiBindingExpression*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>target</code> and <code>dp</code> parameters cannot be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Data.BindingOperations.GetPriorityBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)
  id: GetPriorityBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)
  parent: System.Windows.Data.BindingOperations
  langs:
  - csharp
  name: GetPriorityBinding(DependencyObject,DependencyProperty)
  nameWithType: BindingOperations.GetPriorityBinding(DependencyObject,DependencyProperty)
  fullName: System.Windows.Data.BindingOperations.GetPriorityBinding(DependencyObject,DependencyProperty)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "검색 된 <xref href=&quot;System.Windows.Data.PriorityBinding&quot;> </xref> 지정된 된 속성에 설정 된 개체입니다."
  syntax:
    content: public static System.Windows.Data.PriorityBinding GetPriorityBinding (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp);
    parameters:
    - id: target
      type: System.Windows.DependencyObject
      description: "개체가 있는 `dp` 됩니다."
    - id: dp
      type: System.Windows.DependencyProperty
      description: "바인딩을 검색할 바인딩 대상 속성입니다."
    return:
      type: System.Windows.Data.PriorityBinding
      description: "<xref href=&quot;System.Windows.Data.PriorityBinding&quot;> </xref> 지정된 된 속성에 설정 하는 개체 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 없으면 <xref href=&quot;System.Windows.Data.PriorityBinding&quot;> </xref> 개체를 설정 합니다."
  overload: System.Windows.Data.BindingOperations.GetPriorityBinding*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> target </code> 및 <code> dp </code> 매개 변수는 null 일 수 없습니다."
  platform:
  - net462
- uid: System.Windows.Data.BindingOperations.GetPriorityBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)
  id: GetPriorityBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)
  parent: System.Windows.Data.BindingOperations
  langs:
  - csharp
  name: GetPriorityBindingExpression(DependencyObject,DependencyProperty)
  nameWithType: BindingOperations.GetPriorityBindingExpression(DependencyObject,DependencyProperty)
  fullName: System.Windows.Data.BindingOperations.GetPriorityBindingExpression(DependencyObject,DependencyProperty)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "반환 된 <xref href=&quot;System.Windows.Data.PriorityBindingExpression&quot;> </xref> 지정된 된 개체에서 지정 된 바인딩 대상 속성과 연결 된 개체입니다."
  syntax:
    content: public static System.Windows.Data.PriorityBindingExpression GetPriorityBindingExpression (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp);
    parameters:
    - id: target
      type: System.Windows.DependencyObject
      description: "바인딩 대상 개체를 `dp` 됩니다."
    - id: dp
      type: System.Windows.DependencyProperty
      description: "검색할 바인딩 대상 속성은 <xref href=&quot;System.Windows.Data.PriorityBindingExpression&quot;> </xref> 개체입니다."
    return:
      type: System.Windows.Data.PriorityBindingExpression
      description: "<xref href=&quot;System.Windows.Data.PriorityBindingExpression&quot;> </xref> 지정된 된 속성과 연관 된 개체 또는 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> 이름이 없는 경우."
  overload: System.Windows.Data.BindingOperations.GetPriorityBindingExpression*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>target</code> and <code>dp</code> parameters cannot be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Data.BindingOperations.GetSourceUpdatingBindingGroups(System.Windows.DependencyObject)
  id: GetSourceUpdatingBindingGroups(System.Windows.DependencyObject)
  parent: System.Windows.Data.BindingOperations
  langs:
  - csharp
  name: GetSourceUpdatingBindingGroups(DependencyObject)
  nameWithType: BindingOperations.GetSourceUpdatingBindingGroups(DependencyObject)
  fullName: System.Windows.Data.BindingOperations.GetSourceUpdatingBindingGroups(DependencyObject)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "모든 가져옵니다 <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref> 않은 잘못 된 값 또는 대상 값이 있는 개체 소스를 업데이트 합니다."
  remarks: "경우 `root` 은 `null`, 모든 GetSourceUpdatingBindingGroups 반환 <xref:System.Windows.Data.BindingGroup>유효 하지 않거나 업데이트 되지 않은 하는 개체입니다.</xref:System.Windows.Data.BindingGroup>"
  syntax:
    content: public static System.Collections.ObjectModel.ReadOnlyCollection<System.Windows.Data.BindingGroup> GetSourceUpdatingBindingGroups (System.Windows.DependencyObject root);
    parameters:
    - id: root
      type: System.Windows.DependencyObject
      description: "루트 <xref href=&quot;System.Windows.UIElement&quot;> </xref> 에 대 한 바인딩 그룹 얻으려고 합니다.  이 메서드가 반환 <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref> 이 요소 또는 해당 하위 요소와 연결 된 개체입니다."
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Windows.Data.BindingGroup}
      description: "컬렉션 <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref> 개체를 지정 된 요소와 관련 된 잘못 된 값 또는 대상 값이 적용 되지 않은 소스를 업데이트 합니다."
  overload: System.Windows.Data.BindingOperations.GetSourceUpdatingBindingGroups*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingOperations.GetSourceUpdatingBindings(System.Windows.DependencyObject)
  id: GetSourceUpdatingBindings(System.Windows.DependencyObject)
  parent: System.Windows.Data.BindingOperations
  langs:
  - csharp
  name: GetSourceUpdatingBindings(DependencyObject)
  nameWithType: BindingOperations.GetSourceUpdatingBindings(DependencyObject)
  fullName: System.Windows.Data.BindingOperations.GetSourceUpdatingBindings(DependencyObject)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "모든 가져옵니다 <xref href=&quot;System.Windows.Data.BindingExpressionBase&quot;> </xref> 않은 잘못 된 값 또는 대상 값이 있는 개체 소스를 업데이트 합니다."
  remarks: "경우 `root` 은 `null`, 모든 GetSourceUpdatingBindings 반환 <xref:System.Windows.Data.BindingExpressionBase>유효 하지 않거나 업데이트 되지 않은 하는 개체입니다.</xref:System.Windows.Data.BindingExpressionBase>"
  syntax:
    content: public static System.Collections.ObjectModel.ReadOnlyCollection<System.Windows.Data.BindingExpressionBase> GetSourceUpdatingBindings (System.Windows.DependencyObject root);
    parameters:
    - id: root
      type: System.Windows.DependencyObject
      description: "루트 <xref href=&quot;System.Windows.UIElement&quot;> </xref> 에 대 한 바인딩 그룹 얻으려고 합니다.  이 메서드가 반환 <xref href=&quot;System.Windows.Data.BindingExpressionBase&quot;> </xref> 이 요소 또는 해당 하위 요소와 연결 된 개체입니다."
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Windows.Data.BindingExpressionBase}
      description: "컬렉션 <xref href=&quot;System.Windows.Data.BindingExpressionBase&quot;> </xref> 개체를 지정 된 요소와 관련 된 잘못 된 값 또는 대상 값이 적용 되지 않은 소스를 업데이트 합니다."
  overload: System.Windows.Data.BindingOperations.GetSourceUpdatingBindings*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingOperations.IsDataBound(System.Windows.DependencyObject,System.Windows.DependencyProperty)
  id: IsDataBound(System.Windows.DependencyObject,System.Windows.DependencyProperty)
  parent: System.Windows.Data.BindingOperations
  langs:
  - csharp
  name: IsDataBound(DependencyObject,DependencyProperty)
  nameWithType: BindingOperations.IsDataBound(DependencyObject,DependencyProperty)
  fullName: System.Windows.Data.BindingOperations.IsDataBound(DependencyObject,DependencyProperty)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "지정된 된 속성은 현재 데이터 바인딩된 있는지 여부를 나타내는 값을 반환 합니다."
  syntax:
    content: public static bool IsDataBound (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp);
    parameters:
    - id: target
      type: System.Windows.DependencyObject
      description: "개체가 있는 `dp` 됩니다."
    - id: dp
      type: System.Windows.DependencyProperty
      description: "확인할 종속성 속성입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>지정된 된 속성은 데이터 바인딩된; 경우 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Windows.Data.BindingOperations.IsDataBound*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "If <code>target</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Data.BindingOperations.SetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Windows.Data.BindingBase)
  id: SetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Windows.Data.BindingBase)
  parent: System.Windows.Data.BindingOperations
  langs:
  - csharp
  name: SetBinding(DependencyObject,DependencyProperty,BindingBase)
  nameWithType: BindingOperations.SetBinding(DependencyObject,DependencyProperty,BindingBase)
  fullName: System.Windows.Data.BindingOperations.SetBinding(DependencyObject,DependencyProperty,BindingBase)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "만들어지고의 새 인스턴스를 연결 <xref href=&quot;System.Windows.Data.BindingExpressionBase&quot;> </xref> 지정 된 바인딩 대상 속성과 합니다."
  remarks: "이 메서드는의 새 인스턴스를 만듭니다는 <xref:System.Windows.Data.BindingExpressionBase>특정된 종속성 속성이 지정된 된 개체의 인스턴스를 연결 하 고.</xref:System.Windows.Data.BindingExpressionBase> 이 메서드는 임의의에 바인딩을 연결 하는 방법은 <xref:System.Windows.DependencyObject>자체 SetBinding 메서드를 노출 하지 않을 수 있습니다.</xref:System.Windows.DependencyObject>"
  example:
  - "The following example shows how to use this method to set a binding. In this example, `myNewBindDef` is a <xref:System.Windows.Data.Binding> object that describes the binding. The binding target is `myDateText`, an instance of the <xref:System.Windows.Controls.TextBlock> class.  \n  \n [!code-cs[BindConversion#BOSetBinding](~/add/codesnippet/csharp/BindConversion/Window1.xaml.cs#bosetbinding)]\n [!code-vb[BindConversion#BOSetBinding](~/add/codesnippet/visualbasic/bindconversion/window1.xaml.vb#bosetbinding)]"
  syntax:
    content: public static System.Windows.Data.BindingExpressionBase SetBinding (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp, System.Windows.Data.BindingBase binding);
    parameters:
    - id: target
      type: System.Windows.DependencyObject
      description: "바인딩의 바인딩 대상입니다."
    - id: dp
      type: System.Windows.DependencyProperty
      description: "바인딩의 대상 속성입니다."
    - id: binding
      type: System.Windows.Data.BindingBase
      description: "<xref href=&quot;System.Windows.Data.BindingBase&quot;> </xref> 바인딩을 설명 하는 개체입니다."
    return:
      type: System.Windows.Data.BindingExpressionBase
      description: "인스턴스 <xref href=&quot;System.Windows.Data.BindingExpressionBase&quot;> </xref> 만들고 지정 된 속성에 연결 합니다. The <xref href=&quot;System.Windows.Data.BindingExpressionBase&quot;></xref> class is the base class of <xref href=&quot;System.Windows.Data.BindingExpression&quot;></xref>, <xref href=&quot;System.Windows.Data.MultiBindingExpression&quot;></xref>, and <xref href=&quot;System.Windows.Data.PriorityBindingExpression&quot;></xref>."
  overload: System.Windows.Data.BindingOperations.SetBinding*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> binding </code> 매개 변수 여야 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Windows.Data.BindingOperations.AccessCollection(System.Collections.IEnumerable,System.Action,System.Boolean)
  parent: System.Windows.Data.BindingOperations
  isExternal: false
  name: AccessCollection(IEnumerable,Action,Boolean)
  nameWithType: BindingOperations.AccessCollection(IEnumerable,Action,Boolean)
  fullName: System.Windows.Data.BindingOperations.AccessCollection(IEnumerable,Action,Boolean)
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Action
  parent: System
  isExternal: true
  name: Action
  nameWithType: Action
  fullName: System.Action
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Data.BindingOperations.ClearAllBindings(System.Windows.DependencyObject)
  parent: System.Windows.Data.BindingOperations
  isExternal: false
  name: ClearAllBindings(DependencyObject)
  nameWithType: BindingOperations.ClearAllBindings(DependencyObject)
  fullName: System.Windows.Data.BindingOperations.ClearAllBindings(DependencyObject)
- uid: System.Windows.DependencyObject
  parent: System.Windows
  isExternal: false
  name: DependencyObject
  nameWithType: DependencyObject
  fullName: System.Windows.DependencyObject
- uid: System.Windows.Data.BindingOperations.ClearBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)
  parent: System.Windows.Data.BindingOperations
  isExternal: false
  name: ClearBinding(DependencyObject,DependencyProperty)
  nameWithType: BindingOperations.ClearBinding(DependencyObject,DependencyProperty)
  fullName: System.Windows.Data.BindingOperations.ClearBinding(DependencyObject,DependencyProperty)
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.Data.BindingOperations.CollectionRegistering
  parent: System.Windows.Data.BindingOperations
  isExternal: false
  name: CollectionRegistering
  nameWithType: BindingOperations.CollectionRegistering
  fullName: System.Windows.Data.BindingOperations.CollectionRegistering
- uid: System.EventHandler{System.Windows.Data.CollectionRegisteringEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<CollectionRegisteringEventArgs>
  nameWithType: EventHandler<CollectionRegisteringEventArgs>
  fullName: System.EventHandler<System.Windows.Data.CollectionRegisteringEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Windows.Data.CollectionRegisteringEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Data.CollectionRegisteringEventArgs
    name: CollectionRegisteringEventArgs
    nameWithType: CollectionRegisteringEventArgs
    fullName: CollectionRegisteringEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Data.BindingOperations.CollectionViewRegistering
  parent: System.Windows.Data.BindingOperations
  isExternal: false
  name: CollectionViewRegistering
  nameWithType: BindingOperations.CollectionViewRegistering
  fullName: System.Windows.Data.BindingOperations.CollectionViewRegistering
- uid: System.EventHandler{System.Windows.Data.CollectionViewRegisteringEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<CollectionViewRegisteringEventArgs>
  nameWithType: EventHandler<CollectionViewRegisteringEventArgs>
  fullName: System.EventHandler<System.Windows.Data.CollectionViewRegisteringEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Windows.Data.CollectionViewRegisteringEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Data.CollectionViewRegisteringEventArgs
    name: CollectionViewRegisteringEventArgs
    nameWithType: CollectionViewRegisteringEventArgs
    fullName: CollectionViewRegisteringEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Data.BindingOperations.DisableCollectionSynchronization(System.Collections.IEnumerable)
  parent: System.Windows.Data.BindingOperations
  isExternal: false
  name: DisableCollectionSynchronization(IEnumerable)
  nameWithType: BindingOperations.DisableCollectionSynchronization(IEnumerable)
  fullName: System.Windows.Data.BindingOperations.DisableCollectionSynchronization(IEnumerable)
- uid: System.Windows.Data.BindingOperations.DisconnectedSource
  parent: System.Windows.Data.BindingOperations
  isExternal: false
  name: DisconnectedSource
  nameWithType: BindingOperations.DisconnectedSource
  fullName: System.Windows.Data.BindingOperations.DisconnectedSource
- uid: System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)
  parent: System.Windows.Data.BindingOperations
  isExternal: false
  name: EnableCollectionSynchronization(IEnumerable,Object)
  nameWithType: BindingOperations.EnableCollectionSynchronization(IEnumerable,Object)
  fullName: System.Windows.Data.BindingOperations.EnableCollectionSynchronization(IEnumerable,Object)
- uid: System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)
  parent: System.Windows.Data.BindingOperations
  isExternal: false
  name: EnableCollectionSynchronization(IEnumerable,Object,CollectionSynchronizationCallback)
  nameWithType: BindingOperations.EnableCollectionSynchronization(IEnumerable,Object,CollectionSynchronizationCallback)
  fullName: System.Windows.Data.BindingOperations.EnableCollectionSynchronization(IEnumerable,Object,CollectionSynchronizationCallback)
- uid: System.Windows.Data.CollectionSynchronizationCallback
  parent: System.Windows.Data
  isExternal: false
  name: CollectionSynchronizationCallback
  nameWithType: CollectionSynchronizationCallback
  fullName: System.Windows.Data.CollectionSynchronizationCallback
- uid: System.Windows.Data.BindingOperations.GetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)
  parent: System.Windows.Data.BindingOperations
  isExternal: false
  name: GetBinding(DependencyObject,DependencyProperty)
  nameWithType: BindingOperations.GetBinding(DependencyObject,DependencyProperty)
  fullName: System.Windows.Data.BindingOperations.GetBinding(DependencyObject,DependencyProperty)
- uid: System.Windows.Data.Binding
  parent: System.Windows.Data
  isExternal: false
  name: Binding
  nameWithType: Binding
  fullName: System.Windows.Data.Binding
- uid: System.Windows.Data.BindingOperations.GetBindingBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)
  parent: System.Windows.Data.BindingOperations
  isExternal: false
  name: GetBindingBase(DependencyObject,DependencyProperty)
  nameWithType: BindingOperations.GetBindingBase(DependencyObject,DependencyProperty)
  fullName: System.Windows.Data.BindingOperations.GetBindingBase(DependencyObject,DependencyProperty)
- uid: System.Windows.Data.BindingBase
  parent: System.Windows.Data
  isExternal: false
  name: BindingBase
  nameWithType: BindingBase
  fullName: System.Windows.Data.BindingBase
- uid: System.Windows.Data.BindingOperations.GetBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)
  parent: System.Windows.Data.BindingOperations
  isExternal: false
  name: GetBindingExpression(DependencyObject,DependencyProperty)
  nameWithType: BindingOperations.GetBindingExpression(DependencyObject,DependencyProperty)
  fullName: System.Windows.Data.BindingOperations.GetBindingExpression(DependencyObject,DependencyProperty)
- uid: System.Windows.Data.BindingExpression
  parent: System.Windows.Data
  isExternal: false
  name: BindingExpression
  nameWithType: BindingExpression
  fullName: System.Windows.Data.BindingExpression
- uid: System.Windows.Data.BindingOperations.GetBindingExpressionBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)
  parent: System.Windows.Data.BindingOperations
  isExternal: false
  name: GetBindingExpressionBase(DependencyObject,DependencyProperty)
  nameWithType: BindingOperations.GetBindingExpressionBase(DependencyObject,DependencyProperty)
  fullName: System.Windows.Data.BindingOperations.GetBindingExpressionBase(DependencyObject,DependencyProperty)
- uid: System.Windows.Data.BindingExpressionBase
  parent: System.Windows.Data
  isExternal: false
  name: BindingExpressionBase
  nameWithType: BindingExpressionBase
  fullName: System.Windows.Data.BindingExpressionBase
- uid: System.Windows.Data.BindingOperations.GetMultiBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)
  parent: System.Windows.Data.BindingOperations
  isExternal: false
  name: GetMultiBinding(DependencyObject,DependencyProperty)
  nameWithType: BindingOperations.GetMultiBinding(DependencyObject,DependencyProperty)
  fullName: System.Windows.Data.BindingOperations.GetMultiBinding(DependencyObject,DependencyProperty)
- uid: System.Windows.Data.MultiBinding
  parent: System.Windows.Data
  isExternal: false
  name: MultiBinding
  nameWithType: MultiBinding
  fullName: System.Windows.Data.MultiBinding
- uid: System.Windows.Data.BindingOperations.GetMultiBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)
  parent: System.Windows.Data.BindingOperations
  isExternal: false
  name: GetMultiBindingExpression(DependencyObject,DependencyProperty)
  nameWithType: BindingOperations.GetMultiBindingExpression(DependencyObject,DependencyProperty)
  fullName: System.Windows.Data.BindingOperations.GetMultiBindingExpression(DependencyObject,DependencyProperty)
- uid: System.Windows.Data.MultiBindingExpression
  parent: System.Windows.Data
  isExternal: false
  name: MultiBindingExpression
  nameWithType: MultiBindingExpression
  fullName: System.Windows.Data.MultiBindingExpression
- uid: System.Windows.Data.BindingOperations.GetPriorityBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)
  parent: System.Windows.Data.BindingOperations
  isExternal: false
  name: GetPriorityBinding(DependencyObject,DependencyProperty)
  nameWithType: BindingOperations.GetPriorityBinding(DependencyObject,DependencyProperty)
  fullName: System.Windows.Data.BindingOperations.GetPriorityBinding(DependencyObject,DependencyProperty)
- uid: System.Windows.Data.PriorityBinding
  parent: System.Windows.Data
  isExternal: false
  name: PriorityBinding
  nameWithType: PriorityBinding
  fullName: System.Windows.Data.PriorityBinding
- uid: System.Windows.Data.BindingOperations.GetPriorityBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)
  parent: System.Windows.Data.BindingOperations
  isExternal: false
  name: GetPriorityBindingExpression(DependencyObject,DependencyProperty)
  nameWithType: BindingOperations.GetPriorityBindingExpression(DependencyObject,DependencyProperty)
  fullName: System.Windows.Data.BindingOperations.GetPriorityBindingExpression(DependencyObject,DependencyProperty)
- uid: System.Windows.Data.PriorityBindingExpression
  parent: System.Windows.Data
  isExternal: false
  name: PriorityBindingExpression
  nameWithType: PriorityBindingExpression
  fullName: System.Windows.Data.PriorityBindingExpression
- uid: System.Windows.Data.BindingOperations.GetSourceUpdatingBindingGroups(System.Windows.DependencyObject)
  parent: System.Windows.Data.BindingOperations
  isExternal: false
  name: GetSourceUpdatingBindingGroups(DependencyObject)
  nameWithType: BindingOperations.GetSourceUpdatingBindingGroups(DependencyObject)
  fullName: System.Windows.Data.BindingOperations.GetSourceUpdatingBindingGroups(DependencyObject)
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Windows.Data.BindingGroup}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<BindingGroup>
  nameWithType: ReadOnlyCollection<BindingGroup>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Windows.Data.BindingGroup>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Windows.Data.BindingGroup>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Data.BindingGroup
    name: BindingGroup
    nameWithType: BindingGroup
    fullName: BindingGroup
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Data.BindingOperations.GetSourceUpdatingBindings(System.Windows.DependencyObject)
  parent: System.Windows.Data.BindingOperations
  isExternal: false
  name: GetSourceUpdatingBindings(DependencyObject)
  nameWithType: BindingOperations.GetSourceUpdatingBindings(DependencyObject)
  fullName: System.Windows.Data.BindingOperations.GetSourceUpdatingBindings(DependencyObject)
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Windows.Data.BindingExpressionBase}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<BindingExpressionBase>
  nameWithType: ReadOnlyCollection<BindingExpressionBase>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Windows.Data.BindingExpressionBase>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Windows.Data.BindingExpressionBase>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Data.BindingExpressionBase
    name: BindingExpressionBase
    nameWithType: BindingExpressionBase
    fullName: BindingExpressionBase
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Data.BindingOperations.IsDataBound(System.Windows.DependencyObject,System.Windows.DependencyProperty)
  parent: System.Windows.Data.BindingOperations
  isExternal: false
  name: IsDataBound(DependencyObject,DependencyProperty)
  nameWithType: BindingOperations.IsDataBound(DependencyObject,DependencyProperty)
  fullName: System.Windows.Data.BindingOperations.IsDataBound(DependencyObject,DependencyProperty)
- uid: System.Windows.Data.BindingOperations.SetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Windows.Data.BindingBase)
  parent: System.Windows.Data.BindingOperations
  isExternal: false
  name: SetBinding(DependencyObject,DependencyProperty,BindingBase)
  nameWithType: BindingOperations.SetBinding(DependencyObject,DependencyProperty,BindingBase)
  fullName: System.Windows.Data.BindingOperations.SetBinding(DependencyObject,DependencyProperty,BindingBase)
- uid: System.Windows.Data.BindingOperations.AccessCollection*
  parent: System.Windows.Data.BindingOperations
  isExternal: false
  name: AccessCollection
  nameWithType: BindingOperations.AccessCollection
- uid: System.Windows.Data.BindingOperations.ClearAllBindings*
  parent: System.Windows.Data.BindingOperations
  isExternal: false
  name: ClearAllBindings
  nameWithType: BindingOperations.ClearAllBindings
- uid: System.Windows.Data.BindingOperations.ClearBinding*
  parent: System.Windows.Data.BindingOperations
  isExternal: false
  name: ClearBinding
  nameWithType: BindingOperations.ClearBinding
- uid: System.Windows.Data.BindingOperations.DisableCollectionSynchronization*
  parent: System.Windows.Data.BindingOperations
  isExternal: false
  name: DisableCollectionSynchronization
  nameWithType: BindingOperations.DisableCollectionSynchronization
- uid: System.Windows.Data.BindingOperations.DisconnectedSource*
  parent: System.Windows.Data.BindingOperations
  isExternal: false
  name: DisconnectedSource
  nameWithType: BindingOperations.DisconnectedSource
- uid: System.Windows.Data.BindingOperations.EnableCollectionSynchronization*
  parent: System.Windows.Data.BindingOperations
  isExternal: false
  name: EnableCollectionSynchronization
  nameWithType: BindingOperations.EnableCollectionSynchronization
- uid: System.Windows.Data.BindingOperations.GetBinding*
  parent: System.Windows.Data.BindingOperations
  isExternal: false
  name: GetBinding
  nameWithType: BindingOperations.GetBinding
- uid: System.Windows.Data.BindingOperations.GetBindingBase*
  parent: System.Windows.Data.BindingOperations
  isExternal: false
  name: GetBindingBase
  nameWithType: BindingOperations.GetBindingBase
- uid: System.Windows.Data.BindingOperations.GetBindingExpression*
  parent: System.Windows.Data.BindingOperations
  isExternal: false
  name: GetBindingExpression
  nameWithType: BindingOperations.GetBindingExpression
- uid: System.Windows.Data.BindingOperations.GetBindingExpressionBase*
  parent: System.Windows.Data.BindingOperations
  isExternal: false
  name: GetBindingExpressionBase
  nameWithType: BindingOperations.GetBindingExpressionBase
- uid: System.Windows.Data.BindingOperations.GetMultiBinding*
  parent: System.Windows.Data.BindingOperations
  isExternal: false
  name: GetMultiBinding
  nameWithType: BindingOperations.GetMultiBinding
- uid: System.Windows.Data.BindingOperations.GetMultiBindingExpression*
  parent: System.Windows.Data.BindingOperations
  isExternal: false
  name: GetMultiBindingExpression
  nameWithType: BindingOperations.GetMultiBindingExpression
- uid: System.Windows.Data.BindingOperations.GetPriorityBinding*
  parent: System.Windows.Data.BindingOperations
  isExternal: false
  name: GetPriorityBinding
  nameWithType: BindingOperations.GetPriorityBinding
- uid: System.Windows.Data.BindingOperations.GetPriorityBindingExpression*
  parent: System.Windows.Data.BindingOperations
  isExternal: false
  name: GetPriorityBindingExpression
  nameWithType: BindingOperations.GetPriorityBindingExpression
- uid: System.Windows.Data.BindingOperations.GetSourceUpdatingBindingGroups*
  parent: System.Windows.Data.BindingOperations
  isExternal: false
  name: GetSourceUpdatingBindingGroups
  nameWithType: BindingOperations.GetSourceUpdatingBindingGroups
- uid: System.Windows.Data.BindingOperations.GetSourceUpdatingBindings*
  parent: System.Windows.Data.BindingOperations
  isExternal: false
  name: GetSourceUpdatingBindings
  nameWithType: BindingOperations.GetSourceUpdatingBindings
- uid: System.Windows.Data.BindingOperations.IsDataBound*
  parent: System.Windows.Data.BindingOperations
  isExternal: false
  name: IsDataBound
  nameWithType: BindingOperations.IsDataBound
- uid: System.Windows.Data.BindingOperations.SetBinding*
  parent: System.Windows.Data.BindingOperations
  isExternal: false
  name: SetBinding
  nameWithType: BindingOperations.SetBinding
