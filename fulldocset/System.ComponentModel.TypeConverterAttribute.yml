### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.TypeConverterAttribute
  id: TypeConverterAttribute
  children:
  - System.ComponentModel.TypeConverterAttribute.#ctor
  - System.ComponentModel.TypeConverterAttribute.#ctor(System.String)
  - System.ComponentModel.TypeConverterAttribute.#ctor(System.Type)
  - System.ComponentModel.TypeConverterAttribute.ConverterTypeName
  - System.ComponentModel.TypeConverterAttribute.Default
  - System.ComponentModel.TypeConverterAttribute.Equals(System.Object)
  - System.ComponentModel.TypeConverterAttribute.GetHashCode
  langs:
  - csharp
  name: TypeConverterAttribute
  nameWithType: TypeConverterAttribute
  fullName: System.ComponentModel.TypeConverterAttribute
  type: Class
  summary: "에 바인딩되이 특성은 개체에 대 한 변환기로 사용할 형식을 지정 합니다."
  remarks: "변환을 위해 사용 하는 클래스 <xref:System.ComponentModel.TypeConverter>.</xref:System.ComponentModel.TypeConverter> 에서 상속 해야 합니다. 사용 하 여는 <xref:System.ComponentModel.TypeConverterAttribute.ConverterTypeName%2A>바인딩되는 개체에 대 한 데이터 변환이이 특성을 제공 하는 클래스의 이름을 가져올 속성입니다.</xref:System.ComponentModel.TypeConverterAttribute.ConverterTypeName%2A>       특성에 대 한 자세한 내용은 참조 [특성](~/add/includes/ajax-current-ext-md.md)합니다. 형식 변환기에 대 한 자세한 내용은 참조는 <xref:System.ComponentModel.TypeConverter>기본 클래스 및 [하는 방법: 형식 변환기 구현](~/add/includes/ajax-current-ext-md.md).</xref:System.ComponentModel.TypeConverter>       XAML에 대 한 형식 변환 동작을 제공 하는 사용자 지정 클래스에는 형식 변환기를 설정 하기 위해 해당 형식과 TypeConverterAttribute 특성을 적용 합니다. 특성의 인수는 형식 변환기 구현이 참조합니다. 형식 변환기를 특성이 나 XAML 태그에 대 한 초기화 텍스트에 사용 되는 문자열의 값을 허용할 수 하 고 해당 문자열이 지정 된 대상 형식으로 변환 해야 합니다. 자세한 내용은 참조[TypeConverters 및 XAML](~/add/includes/ajax-current-ext-md.md)합니다.       XAML 위한 형식 변환기 동작에는 형식의 모든 값을 적용 하는 대신 특정 속성에 구성 될 수도 있습니다. 이 경우, TypeConverterAttribute 속성 정의에 적용 (외부 정의 특정 하지 `get` 및 `set` 정의).       TypeConverterAttribute를 적용 하 여 사용자 지정 연결 가능한 멤버의 XAML 사용에 대 한 형식 변환기 동작을 지정할 수는 `get` XAML 사용을 지 원하는 메서드 접근자입니다. 자세한 내용은 참조 [연결 된 속성 개요](~/add/includes/ajax-current-ext-md.md)합니다.       복잡 한 XAML 직렬화 해야 하는 경우 추가 상태에서 개체 런타임에, 사용자 정의 형식 또는 사용자 지정 멤버에 형식 변환기 및 특성 외에도 값 직렬 변환기 모두 지원 클래스를 정의 하는 것이 좋습니다. 자세한 내용은 <xref:System.Windows.Markup.ValueSerializer>.</xref:System.Windows.Markup.ValueSerializer> 을 참조 하십시오."
  example:
  - "The following example declares `MyClass` to use the type converter called `MyClassConverter`. This example assumes that `MyClassConverter` has been implemented elsewhere. The class implementing the converter (`MyClassConverter`) must inherit from the <xref:System.ComponentModel.TypeConverter> class.  \n  \n [!code-vb[Classic TypeConverterAttribute Example#1](~/add/codesnippet/visualbasic/t-system.componentmodel._140_1.vb)]\n [!code-cpp[Classic TypeConverterAttribute Example#1](~/add/codesnippet/cpp/t-system.componentmodel._140_1.cpp)]\n [!code-cs[Classic TypeConverterAttribute Example#1](~/add/codesnippet/csharp/t-system.componentmodel._140_1.cs)]  \n  \n The next example creates an instance of `MyClass`. Then it gets the attributes for the class, and prints the name of the type converter used by `MyClass`.  \n  \n [!code-vb[Classic TypeConverterAttribute Example#2](~/add/codesnippet/visualbasic/t-system.componentmodel._140_2.vb)]\n [!code-cpp[Classic TypeConverterAttribute Example#2](~/add/codesnippet/cpp/t-system.componentmodel._140_2.cpp)]\n [!code-cs[Classic TypeConverterAttribute Example#2](~/add/codesnippet/csharp/t-system.componentmodel._140_2.cs)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.All)]

      public sealed class TypeConverterAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.TypeConverterAttribute.#ctor
  id: '#ctor'
  parent: System.ComponentModel.TypeConverterAttribute
  langs:
  - csharp
  name: TypeConverterAttribute()
  nameWithType: TypeConverterAttribute.TypeConverterAttribute()
  fullName: System.ComponentModel.TypeConverterAttribute.TypeConverterAttribute()
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.ComponentModel.TypeConverterAttribute&quot;> </xref> 은 빈 문자열은 기본 형식 변환기를 사용 하 여 클래스 (&quot;&quot;)."
  remarks: "데이터 변환 중에 제공 하는 클래스 <xref:System.ComponentModel.TypeConverter>.</xref:System.ComponentModel.TypeConverter> 에서 상속 해야 합니다."
  syntax:
    content: public TypeConverterAttribute ();
    parameters: []
  overload: System.ComponentModel.TypeConverterAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeConverterAttribute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.ComponentModel.TypeConverterAttribute
  langs:
  - csharp
  name: TypeConverterAttribute(String)
  nameWithType: TypeConverterAttribute.TypeConverterAttribute(String)
  fullName: System.ComponentModel.TypeConverterAttribute.TypeConverterAttribute(String)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.ComponentModel.TypeConverterAttribute&quot;> </xref> 클래스,이 특성이 바인딩되는 개체에 대 한 데이터 변환기로 지정된 된 형식 이름을 사용 합니다."
  remarks: "데이터 변환 중에 제공 하는 클래스 <xref:System.ComponentModel.TypeConverter>.</xref:System.ComponentModel.TypeConverter> 에서 상속 해야 합니다."
  syntax:
    content: public TypeConverterAttribute (string typeName);
    parameters:
    - id: typeName
      type: System.String
      description: "이 특성이 바인딩되는 개체에 대 한 데이터 변환에 사용할 클래스의 정규화 된 이름입니다."
  overload: System.ComponentModel.TypeConverterAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeConverterAttribute.#ctor(System.Type)
  id: '#ctor(System.Type)'
  parent: System.ComponentModel.TypeConverterAttribute
  langs:
  - csharp
  name: TypeConverterAttribute(Type)
  nameWithType: TypeConverterAttribute.TypeConverterAttribute(Type)
  fullName: System.ComponentModel.TypeConverterAttribute.TypeConverterAttribute(Type)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.ComponentModel.TypeConverterAttribute&quot;> </xref> 클래스,이 특성이 바인딩되는 개체에 대 한 데이터 변환기로 지정 된 형식을 사용 합니다."
  remarks: "데이터 변환 중에 제공 하는 클래스 <xref:System.ComponentModel.TypeConverter>.</xref:System.ComponentModel.TypeConverter> 에서 상속 해야 합니다."
  syntax:
    content: public TypeConverterAttribute (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "A <xref:System.Type>이 특성에 바인딩된 개체에 대 한 데이터 변환에 사용할 변환기 클래스의 형식을 나타내는.</xref:System.Type>"
  overload: System.ComponentModel.TypeConverterAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeConverterAttribute.ConverterTypeName
  id: ConverterTypeName
  parent: System.ComponentModel.TypeConverterAttribute
  langs:
  - csharp
  name: ConverterTypeName
  nameWithType: TypeConverterAttribute.ConverterTypeName
  fullName: System.ComponentModel.TypeConverterAttribute.ConverterTypeName
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "정규화 된 유형 이름을 가져옵니다는 <xref:System.Type>이 특성에 바인딩된 개체에 대 한 변환기로 사용할.</xref:System.Type>"
  syntax:
    content: public string ConverterTypeName { get; }
    return:
      type: System.String
      description: "정규화 된 형식 이름을 <xref:System.Type>이 특성이 바인딩되는 개체 또는 빈 문자열에 대 한 변환기로 사용할 (&quot;&quot;) 존재 하지 않는 경우.</xref:System.Type> 기본값은 빈 문자열 (&quot;&quot;)."
  overload: System.ComponentModel.TypeConverterAttribute.ConverterTypeName*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeConverterAttribute.Default
  id: Default
  parent: System.ComponentModel.TypeConverterAttribute
  langs:
  - csharp
  name: Default
  nameWithType: TypeConverterAttribute.Default
  fullName: System.ComponentModel.TypeConverterAttribute.Default
  type: Field
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "이 특성에 바인딩된 개체에 대 한 변환기로 사용할 형식을 지정 합니다."
  syntax:
    content: public static readonly System.ComponentModel.TypeConverterAttribute Default;
    return:
      type: System.ComponentModel.TypeConverterAttribute
      description: "추가할 수 있습니다."
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeConverterAttribute.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.ComponentModel.TypeConverterAttribute
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: TypeConverterAttribute.Equals(Object)
  fullName: System.ComponentModel.TypeConverterAttribute.Equals(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "지정된 된 개체의 값을 현재 같은지 여부를 반환 <xref href=&quot;System.ComponentModel.TypeConverterAttribute&quot;> </xref>합니다."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "값이 같은지를 테스트 하는 개체입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>지정된 된 개체의 값은 현재와 같은 경우 <xref href=&quot;System.ComponentModel.TypeConverterAttribute&quot;> </xref>, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.ComponentModel.TypeConverterAttribute.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeConverterAttribute.GetHashCode
  id: GetHashCode
  parent: System.ComponentModel.TypeConverterAttribute
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: TypeConverterAttribute.GetHashCode()
  fullName: System.ComponentModel.TypeConverterAttribute.GetHashCode()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "이 인스턴스에 대 한 해시 코드를 반환합니다."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "현재에 대 한 해시 코드 <xref href=&quot;System.ComponentModel.TypeConverterAttribute&quot;> </xref>합니다."
  overload: System.ComponentModel.TypeConverterAttribute.GetHashCode*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.ComponentModel.TypeConverterAttribute.#ctor
  parent: System.ComponentModel.TypeConverterAttribute
  isExternal: false
  name: TypeConverterAttribute()
  nameWithType: TypeConverterAttribute.TypeConverterAttribute()
  fullName: System.ComponentModel.TypeConverterAttribute.TypeConverterAttribute()
- uid: System.ComponentModel.TypeConverterAttribute.#ctor(System.String)
  parent: System.ComponentModel.TypeConverterAttribute
  isExternal: false
  name: TypeConverterAttribute(String)
  nameWithType: TypeConverterAttribute.TypeConverterAttribute(String)
  fullName: System.ComponentModel.TypeConverterAttribute.TypeConverterAttribute(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.TypeConverterAttribute.#ctor(System.Type)
  parent: System.ComponentModel.TypeConverterAttribute
  isExternal: false
  name: TypeConverterAttribute(Type)
  nameWithType: TypeConverterAttribute.TypeConverterAttribute(Type)
  fullName: System.ComponentModel.TypeConverterAttribute.TypeConverterAttribute(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.TypeConverterAttribute.ConverterTypeName
  parent: System.ComponentModel.TypeConverterAttribute
  isExternal: false
  name: ConverterTypeName
  nameWithType: TypeConverterAttribute.ConverterTypeName
  fullName: System.ComponentModel.TypeConverterAttribute.ConverterTypeName
- uid: System.ComponentModel.TypeConverterAttribute.Default
  parent: System.ComponentModel.TypeConverterAttribute
  isExternal: false
  name: Default
  nameWithType: TypeConverterAttribute.Default
  fullName: System.ComponentModel.TypeConverterAttribute.Default
- uid: System.ComponentModel.TypeConverterAttribute
  parent: System.ComponentModel
  isExternal: false
  name: TypeConverterAttribute
  nameWithType: TypeConverterAttribute
  fullName: System.ComponentModel.TypeConverterAttribute
- uid: System.ComponentModel.TypeConverterAttribute.Equals(System.Object)
  parent: System.ComponentModel.TypeConverterAttribute
  isExternal: false
  name: Equals(Object)
  nameWithType: TypeConverterAttribute.Equals(Object)
  fullName: System.ComponentModel.TypeConverterAttribute.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ComponentModel.TypeConverterAttribute.GetHashCode
  parent: System.ComponentModel.TypeConverterAttribute
  isExternal: false
  name: GetHashCode()
  nameWithType: TypeConverterAttribute.GetHashCode()
  fullName: System.ComponentModel.TypeConverterAttribute.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ComponentModel.TypeConverterAttribute.#ctor*
  parent: System.ComponentModel.TypeConverterAttribute
  isExternal: false
  name: TypeConverterAttribute
  nameWithType: TypeConverterAttribute.TypeConverterAttribute
- uid: System.ComponentModel.TypeConverterAttribute.ConverterTypeName*
  parent: System.ComponentModel.TypeConverterAttribute
  isExternal: false
  name: ConverterTypeName
  nameWithType: TypeConverterAttribute.ConverterTypeName
- uid: System.ComponentModel.TypeConverterAttribute.Equals*
  parent: System.ComponentModel.TypeConverterAttribute
  isExternal: false
  name: Equals
  nameWithType: TypeConverterAttribute.Equals
- uid: System.ComponentModel.TypeConverterAttribute.GetHashCode*
  parent: System.ComponentModel.TypeConverterAttribute
  isExternal: false
  name: GetHashCode
  nameWithType: TypeConverterAttribute.GetHashCode
