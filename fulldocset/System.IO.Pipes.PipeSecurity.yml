### YamlMime:ManagedReference
items:
- uid: System.IO.Pipes.PipeSecurity
  id: PipeSecurity
  children:
  - System.IO.Pipes.PipeSecurity.#ctor
  - System.IO.Pipes.PipeSecurity.AccessRightType
  - System.IO.Pipes.PipeSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  - System.IO.Pipes.PipeSecurity.AccessRuleType
  - System.IO.Pipes.PipeSecurity.AddAccessRule(System.IO.Pipes.PipeAccessRule)
  - System.IO.Pipes.PipeSecurity.AddAuditRule(System.IO.Pipes.PipeAuditRule)
  - System.IO.Pipes.PipeSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  - System.IO.Pipes.PipeSecurity.AuditRuleType
  - System.IO.Pipes.PipeSecurity.Persist(System.Runtime.InteropServices.SafeHandle)
  - System.IO.Pipes.PipeSecurity.Persist(System.String)
  - System.IO.Pipes.PipeSecurity.RemoveAccessRule(System.IO.Pipes.PipeAccessRule)
  - System.IO.Pipes.PipeSecurity.RemoveAccessRuleSpecific(System.IO.Pipes.PipeAccessRule)
  - System.IO.Pipes.PipeSecurity.RemoveAuditRule(System.IO.Pipes.PipeAuditRule)
  - System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll(System.IO.Pipes.PipeAuditRule)
  - System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific(System.IO.Pipes.PipeAuditRule)
  - System.IO.Pipes.PipeSecurity.ResetAccessRule(System.IO.Pipes.PipeAccessRule)
  - System.IO.Pipes.PipeSecurity.SetAccessRule(System.IO.Pipes.PipeAccessRule)
  - System.IO.Pipes.PipeSecurity.SetAuditRule(System.IO.Pipes.PipeAuditRule)
  langs:
  - csharp
  name: PipeSecurity
  nameWithType: PipeSecurity
  fullName: System.IO.Pipes.PipeSecurity
  type: Class
  summary: "액세스 제어 나타냅니다 및 감사 보안을 파이프 합니다."
  remarks: "PipeSecurity 클래스에는 파이프 및 액세스 시도 감사 하는 방법에 대 한 액세스 권한을 지정 합니다.  이 클래스는 규칙의 집합으로 액세스 및 감사 권한을 나타냅니다. 각 액세스 규칙으로 표시 됩니다는 <xref:System.IO.Pipes.PipeAccessRule>개체를 나타내는 각 감사 규칙이 동안는 <xref:System.IO.Pipes.PipeAuditRule>개체입니다.</xref:System.IO.Pipes.PipeAuditRule> </xref:System.IO.Pipes.PipeAccessRule>       PipeSecurity 클래스는 기본 Microsoft Windows 파일 보안 시스템 추상화 합니다. 이 시스템에서 각 파이프에 파이프에 대 한 액세스를 제어 하는 임의 액세스 제어 목록 (DACL) 및 시스템 액세스 제어 목록 (SACL) 감사가 수행 되는 액세스 제어 시도 지정 하는 있습니다.  <xref:System.IO.Pipes.PipeAccessRule>및 <xref:System.IO.Pipes.PipeAuditRule>클래스 Dacl과 Sacl을 구성 하는 액세스 제어 항목 (Ace)의 추상화는.</xref:System.IO.Pipes.PipeAuditRule> </xref:System.IO.Pipes.PipeAccessRule>       대부분의 Dacl과 Sacl;의 세부 PipeSecurity 클래스가 숨깁니다. ACE 순서를 지정 하거나 null DACL 걱정할 필요가 없습니다.       검색, 추가 또는 DACL 및 파이프의 SACL을 나타내는 액세스 규칙을 변경 하려면 PipeSecurity 클래스를 사용 합니다.       를 새로 추가 되거나 변경에 대 한 액세스를 유지 하거나 감사 파이프에 대 한 규칙은 <xref:System.IO.Pipes.PipeStream.SetAccessControl%2A>메서드.</xref:System.IO.Pipes.PipeStream.SetAccessControl%2A> 액세스 또는 검색 하려면 감사 기존 파일에서 규칙을 사용 하 여는 <xref:System.IO.Pipes.PipeStream.GetAccessControl%2A>메서드.</xref:System.IO.Pipes.PipeStream.GetAccessControl%2A>"
  syntax:
    content: 'public class PipeSecurity : System.Security.AccessControl.NativeObjectSecurity'
  inheritance:
  - System.Object
  - System.Security.AccessControl.ObjectSecurity
  - System.Security.AccessControl.CommonObjectSecurity
  - System.Security.AccessControl.NativeObjectSecurity
  implements: []
  inheritedMembers:
  - System.Security.AccessControl.CommonObjectSecurity.AddAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.AddAuditRule(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)
  - System.Security.AccessControl.CommonObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)
  - System.Security.AccessControl.CommonObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  - System.Security.AccessControl.CommonObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.SetAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.SetAuditRule(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections,System.Object)
  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections,System.Object)
  - System.Security.AccessControl.ObjectSecurity.AccessRulesModified
  - System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical
  - System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected
  - System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical
  - System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected
  - System.Security.AccessControl.ObjectSecurity.AuditRulesModified
  - System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)
  - System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)
  - System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm
  - System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.GroupModified
  - System.Security.AccessControl.ObjectSecurity.IsContainer
  - System.Security.AccessControl.ObjectSecurity.IsDS
  - System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported
  - System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  - System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  - System.Security.AccessControl.ObjectSecurity.OwnerModified
  - System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.ReadLock
  - System.Security.AccessControl.ObjectSecurity.ReadUnlock
  - System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)
  - System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)
  - System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.WriteLock
  - System.Security.AccessControl.ObjectSecurity.WriteUnlock
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.#ctor
  id: '#ctor'
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: PipeSecurity()
  nameWithType: PipeSecurity.PipeSecurity()
  fullName: System.IO.Pipes.PipeSecurity.PipeSecurity()
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> 클래스입니다."
  remarks: "이 생성자는 빈 만듭니다 <xref:System.IO.Pipes.PipeSecurity>기존 파이프를 기반으로 하지 않는 개체입니다.</xref:System.IO.Pipes.PipeSecurity> 다음 파이프에 적용할을 액세스 제어 정보를 사용 하 여 개체를 채울 수 있습니다.       액세스 권한을 추가 하거나 감사 규칙 수는 <xref:System.IO.Pipes.PipeSecurity>를 사용 하 여 개체는 <xref:System.IO.Pipes.PipeSecurity.AddAccessRule%2A>메서드.</xref:System.IO.Pipes.PipeSecurity.AddAccessRule%2A> </xref:System.IO.Pipes.PipeSecurity> 액세스 권한을 제거 하거나 감사를 사용 하 여 규칙 수는 <xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A>메서드.</xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A>       를 새로 추가 되거나 변경에 대 한 액세스를 유지 하거나 감사 파이프에 대 한 규칙은 <xref:System.IO.Pipes.PipeStream.SetAccessControl%2A>메서드.</xref:System.IO.Pipes.PipeStream.SetAccessControl%2A> 액세스 또는 검색 하려면 감사 기존 파일에서 규칙을 사용 하 여는 <xref:System.IO.Pipes.PipeStream.GetAccessControl%2A>메서드.</xref:System.IO.Pipes.PipeStream.GetAccessControl%2A>"
  syntax:
    content: public PipeSecurity ();
    parameters: []
  overload: System.IO.Pipes.PipeSecurity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.AccessRightType
  id: AccessRightType
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: AccessRightType
  nameWithType: PipeSecurity.AccessRightType
  fullName: System.IO.Pipes.PipeSecurity.AccessRightType
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "가져옵니다는 <xref:System.Type>현재와 연결 된 보안 개체의 <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> 개체입니다.</xref:System.Type>"
  remarks: "파생 된 클래스는 <xref:System.Security.AccessControl.ObjectSecurity>재정의 클래스는 <xref:System.Security.AccessControl.ObjectSecurity.AccessRightType%2A>속성 및 액세스 권한을 나타내는 데 사용 하는 형식 반환 합니다.</xref:System.Security.AccessControl.ObjectSecurity.AccessRightType%2A> </xref:System.Security.AccessControl.ObjectSecurity> 배열 또는 여러 유형의 보안 개체를 포함 하는 컬렉션으로 작업할 때 각 보안 개체에 사용할 올바른 열거형 형식을 확인 하려면이 속성을 사용 합니다."
  syntax:
    content: public override Type AccessRightType { get; }
    return:
      type: System.Type
      description: "현재와 연결 된 보안 개체의 형식 <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> 개체입니다."
  overload: System.IO.Pipes.PipeSecurity.AccessRightType*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  id: AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
  nameWithType: PipeSecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
  fullName: System.IO.Pipes.PipeSecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Security.AccessControl.AccessRule&quot;> </xref> 지정된 된 값을 사용 하 여 클래스입니다."
  remarks: "<xref:System.IO.Pipes.PipeAccessRule>클래스</xref:System.IO.Pipes.PipeAccessRule> 의 생성자를 사용 하는 액세스 제어 규칙을 작성 하는 권장된 방법"
  syntax:
    content: public override System.Security.AccessControl.AccessRule AccessRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type);
    parameters:
    - id: identityReference
      type: System.Security.Principal.IdentityReference
      description: "액세스 규칙에 적용 되는 id입니다. 로 캐스팅 될 수 있는 개체 여야는 <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> 개체입니다."
    - id: accessMask
      type: System.Int32
      description: "이 규칙의 액세스 마스크입니다. 액세스 마스크는 개별 통합 자가 정의 하는 의미 익명 비트의 32 비트에 대 한 컬렉션"
    - id: isInherited
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>이 규칙은 부모 컨테이너;에서 상속 되는 경우 그렇지 않으면 false입니다."
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: "중 하나는 <xref href=&quot;System.Security.AccessControl.InheritanceFlags&quot;> </xref> 액세스 규칙의 상속 속성을 지정 하는 값입니다."
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: "중 하나는 <xref href=&quot;System.Security.AccessControl.PropagationFlags&quot;> </xref> 상속 된 액세스 규칙의 자동 전파 여부를 지정 하는 값입니다. 면 전파 플래그는 무시 됩니다 `inheritanceFlags` 로 설정 된 <xref href=&quot;System.Security.AccessControl.InheritanceFlags&quot;> </xref>합니다."
    - id: type
      type: System.Security.AccessControl.AccessControlType
      description: "유효한 액세스 제어 형식을 지정합니다."
    return:
      type: System.Security.AccessControl.AccessRule
      description: "<xref href=&quot;System.Security.AccessControl.AccessRule&quot;> </xref> 이 메서드가 만드는 개체입니다."
  overload: System.IO.Pipes.PipeSecurity.AccessRuleFactory*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>accessMask</code><code>inheritanceFlags</code>, <code>propagationFlags</code>, 또는 <code>type</code> 잘못 된 값을 지정 합니다."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>identityReference</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -또는- <code>accessMask</code> 은&0;입니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>identityReference</code>형식이 <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> 아니며와 같은 <xref href=&quot;System.Security.Principal.NTAccount&quot;> </xref>, 변환할 수 있는 <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.AccessRuleType
  id: AccessRuleType
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: AccessRuleType
  nameWithType: PipeSecurity.AccessRuleType
  fullName: System.IO.Pipes.PipeSecurity.AccessRuleType
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "가져옵니다는 <xref:System.Type>현재의 액세스 규칙과 연관 된 개체의 <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> 개체입니다.</xref:System.Type>"
  remarks: "파생 된 클래스는 <xref:System.Security.AccessControl.ObjectSecurity>재정의 클래스는 <xref:System.Security.AccessControl.ObjectSecurity.AccessRuleType%2A>속성 및 액세스 권한을 나타내는 데 사용 하는 형식 반환 합니다.</xref:System.Security.AccessControl.ObjectSecurity.AccessRuleType%2A> </xref:System.Security.AccessControl.ObjectSecurity> 배열 또는 여러 유형의 보안 개체를 포함 하는 컬렉션으로 작업할 때 각 보안 개체에 사용할 올바른 열거형 형식을 확인 하려면이 속성을 사용 합니다."
  syntax:
    content: public override Type AccessRuleType { get; }
    return:
      type: System.Type
      description: "현재의 액세스 규칙과 연관 된 개체의 형식 <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> 개체입니다."
  overload: System.IO.Pipes.PipeSecurity.AccessRuleType*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.AddAccessRule(System.IO.Pipes.PipeAccessRule)
  id: AddAccessRule(System.IO.Pipes.PipeAccessRule)
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: AddAccessRule(PipeAccessRule)
  nameWithType: PipeSecurity.AddAccessRule(PipeAccessRule)
  fullName: System.IO.Pipes.PipeSecurity.AddAccessRule(PipeAccessRule)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "에 액세스 규칙에는 액세스 제어 목록 DACL (임의)와 현재 연결 된 추가 <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> 개체입니다."
  remarks: 'AddAccessRule 메서드 <xref:System.IO.Pipes.PipeSecurity>개체를 포함 하는 규칙의 목록에 새 규칙을 추가 합니다. AddAccessRule 메서드 예외적으로 규칙을 지정된 된 규칙에 대 한 액세스 제어 목록 (ACL)가 이미 있는 경우 추가 여전히 합니다:는 <xref:System.IO.Pipes.PipeAccessRule>를 사용 하 여 만든 개체는 <xref:System.Security.AccessControl.AccessControlType>값 대체를 사용 하 여 만든 개체는 <xref:System.Security.AccessControl.AccessControlType>값.</xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.AccessControlType> </xref:System.IO.Pipes.PipeAccessRule> </xref:System.IO.Pipes.PipeSecurity>'
  syntax:
    content: public void AddAccessRule (System.IO.Pipes.PipeAccessRule rule);
    parameters:
    - id: rule
      type: System.IO.Pipes.PipeAccessRule
      description: "액세스 규칙 추가입니다."
  overload: System.IO.Pipes.PipeSecurity.AddAccessRule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.AddAuditRule(System.IO.Pipes.PipeAuditRule)
  id: AddAuditRule(System.IO.Pipes.PipeAuditRule)
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: AddAuditRule(PipeAuditRule)
  nameWithType: PipeSecurity.AddAuditRule(PipeAuditRule)
  fullName: System.IO.Pipes.PipeSecurity.AddAuditRule(PipeAuditRule)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "에 액세스 제어 목록 SACL (시스템)와 현재 연결 된 감사 규칙을 추가 <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> 개체입니다."
  remarks: "메서드는 새 감사 규칙의 목록에 추가 AddAuditRule 규칙을 한 <xref:System.IO.Pipes.PipeSecurity>개체에 포함 되어 있습니다.</xref:System.IO.Pipes.PipeSecurity>       감사 규칙에 이미 있으면 지정된 된 규칙에 대 한에 여전히 AddAuditRule 메서드는 규칙을 추가 합니다."
  syntax:
    content: public void AddAuditRule (System.IO.Pipes.PipeAuditRule rule);
    parameters:
    - id: rule
      type: System.IO.Pipes.PipeAuditRule
      description: "추가 된 감사 규칙입니다."
  overload: System.IO.Pipes.PipeSecurity.AddAuditRule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  id: AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
  nameWithType: PipeSecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
  fullName: System.IO.Pipes.PipeSecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Security.AccessControl.AuditRule&quot;> </xref> 지정된 된 값을 사용 하 여 클래스입니다."
  remarks: "<xref:System.IO.Pipes.PipeAuditRule>클래스</xref:System.IO.Pipes.PipeAuditRule> 의 생성자를 사용 하는 감사 규칙을 만드는 권장된 방법을"
  syntax:
    content: public override sealed System.Security.AccessControl.AuditRule AuditRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);
    parameters:
    - id: identityReference
      type: System.Security.Principal.IdentityReference
      description: "액세스 규칙에 적용 되는 id입니다. 로 캐스팅 될 수 있는 개체 여야는 <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> 개체입니다."
    - id: accessMask
      type: System.Int32
      description: "이 규칙의 액세스 마스크입니다. 액세스 마스크는 개별 통합 자가 정의 하는 의미 익명 비트의 32 비트에 대 한 컬렉션"
    - id: isInherited
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>이 규칙은 부모 컨테이너;에서 상속 되는 경우 그렇지 않으면 false입니다."
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: "중 하나는 <xref href=&quot;System.Security.AccessControl.InheritanceFlags&quot;> </xref> 액세스 규칙의 상속 속성을 지정 하는 값입니다."
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: "중 하나는 <xref href=&quot;System.Security.AccessControl.PropagationFlags&quot;> </xref> 상속 된 액세스 규칙의 자동 전파 여부를 지정 하는 값입니다. 면 전파 플래그는 무시 됩니다 `inheritanceFlags` 로 설정 된 <xref href=&quot;System.Security.AccessControl.InheritanceFlags&quot;> </xref>합니다."
    - id: flags
      type: System.Security.AccessControl.AuditFlags
      description: "중 하나는 <xref href=&quot;System.Security.AccessControl.AuditFlags&quot;> </xref> 유효한 액세스를 지정 하는 값 유형을 제어 합니다."
    return:
      type: System.Security.AccessControl.AuditRule
      description: "<xref href=&quot;System.Security.AccessControl.AuditRule&quot;> </xref> 이 메서드가 만드는 개체입니다."
  overload: System.IO.Pipes.PipeSecurity.AuditRuleFactory*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The <code>accessMask</code>, <code>inheritanceFlags</code>, <code>propagationFlags</code>, or <code>flags</code> properties specify an invalid value."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>identityReference</code> property is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -또는- <code> accessMask </code> 속성은&0;입니다."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> identityReference </code> 속성은 형식이 <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> 아니며와 같은 <xref href=&quot;System.Security.Principal.NTAccount&quot;> </xref>, 변환할 수 있는 <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref>합니다."
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.AuditRuleType
  id: AuditRuleType
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: AuditRuleType
  nameWithType: PipeSecurity.AuditRuleType
  fullName: System.IO.Pipes.PipeSecurity.AuditRuleType
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "가져옵니다는 <xref:System.Type>현재의 감사 규칙과 연결 된 개체 <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> 개체입니다.</xref:System.Type>"
  remarks: "파생 된 클래스는 <xref:System.Security.AccessControl.ObjectSecurity>재정의 클래스는 <xref:System.Security.AccessControl.ObjectSecurity.AuditRuleType%2A>속성 및 액세스 권한을 나타내는 데 사용 하는 형식 반환 합니다.</xref:System.Security.AccessControl.ObjectSecurity.AuditRuleType%2A> </xref:System.Security.AccessControl.ObjectSecurity> 배열 또는 여러 유형의 보안 개체를 포함 하는 컬렉션으로 작업할 때 각 보안 개체에 사용할 올바른 열거형 형식을 확인 하려면이 속성을 사용 합니다."
  syntax:
    content: public override Type AuditRuleType { get; }
    return:
      type: System.Type
      description: "현재의 감사 규칙과 연관 된 개체의 형식 <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> 개체입니다."
  overload: System.IO.Pipes.PipeSecurity.AuditRuleType*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.Persist(System.Runtime.InteropServices.SafeHandle)
  id: Persist(System.Runtime.InteropServices.SafeHandle)
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: Persist(SafeHandle)
  nameWithType: PipeSecurity.Persist(SafeHandle)
  fullName: System.IO.Pipes.PipeSecurity.Persist(SafeHandle)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "현재와 연결 된 보안 설명자의 지정된 된 섹션 저장 <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> 영구 저장소에는 개체입니다."
  syntax:
    content: protected void Persist (System.Runtime.InteropServices.SafeHandle handle);
    parameters:
    - id: handle
      type: System.Runtime.InteropServices.SafeHandle
      description: "보안 개체의 핸들 개체를 현재 <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> 개체가 연결 되어 있습니다."
  overload: System.IO.Pipes.PipeSecurity.Persist*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.Persist(System.String)
  id: Persist(System.String)
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: Persist(String)
  nameWithType: PipeSecurity.Persist(String)
  fullName: System.IO.Pipes.PipeSecurity.Persist(String)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "현재와 연결 된 보안 설명자의 지정된 된 섹션 저장 <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> 영구 저장소에는 개체입니다."
  syntax:
    content: protected void Persist (string name);
    parameters:
    - id: name
      type: System.String
      description: "보안 개체의 이름 개체를 현재 <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> 개체가 연결 되어 있습니다."
  overload: System.IO.Pipes.PipeSecurity.Persist*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.RemoveAccessRule(System.IO.Pipes.PipeAccessRule)
  id: RemoveAccessRule(System.IO.Pipes.PipeAccessRule)
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: RemoveAccessRule(PipeAccessRule)
  nameWithType: PipeSecurity.RemoveAccessRule(PipeAccessRule)
  fullName: System.IO.Pipes.PipeSecurity.RemoveAccessRule(PipeAccessRule)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "액세스 제어 목록 DACL (임의)와 현재 연결 된 액세스 규칙을 제거 <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> 개체입니다."
  remarks: "RemoveAccessRule 메서드 제거 일치 <xref:System.Security.AccessControl.AccessControlType>액세스 규칙 또는 일치 하는 모든 <xref:System.Security.AccessControl.AccessControlType>액세스 규칙에서 현재 <xref:System.IO.Pipes.PipeSecurity>개체입니다.</xref:System.IO.Pipes.PipeSecurity> </xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.AccessControlType> 예를 들어 모든 제거 하려면이 방법을 사용할 수 있습니다 <xref:System.Security.AccessControl.AccessControlType>전달 하 여 사용자에 대 한 액세스는 <xref:System.IO.Pipes.PipeAccessRule>사용 하 여 만든 개체는 <xref:System.Security.AccessControl.AccessControlType>값은 <xref:System.IO.Pipes.PipeAccessRights>값 및 사용자 계정.</xref:System.IO.Pipes.PipeAccessRights> </xref:System.Security.AccessControl.AccessControlType> </xref:System.IO.Pipes.PipeAccessRule> </xref:System.Security.AccessControl.AccessControlType> RemoveAccessRule 메서드를 지정 하는 모든 거부 규칙을 제거는 <xref:System.IO.Pipes.PipeAccessRights>값 또는 <xref:System.IO.Pipes.PipeAccessRights>값.</xref:System.IO.Pipes.PipeAccessRights> </xref:System.IO.Pipes.PipeAccessRights>"
  syntax:
    content: public bool RemoveAccessRule (System.IO.Pipes.PipeAccessRule rule);
    parameters:
    - id: rule
      type: System.IO.Pipes.PipeAccessRule
      description: "액세스 규칙을 제거 하는입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>작업에 성공 하면 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.IO.Pipes.PipeSecurity.RemoveAccessRule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.RemoveAccessRuleSpecific(System.IO.Pipes.PipeAccessRule)
  id: RemoveAccessRuleSpecific(System.IO.Pipes.PipeAccessRule)
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: RemoveAccessRuleSpecific(PipeAccessRule)
  nameWithType: PipeSecurity.RemoveAccessRuleSpecific(PipeAccessRule)
  fullName: System.IO.Pipes.PipeSecurity.RemoveAccessRuleSpecific(PipeAccessRule)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "지정된 된 액세스 규칙에서 액세스 제어 목록 (DACL 임의) 연결 된 현재 제거 <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> 개체입니다."
  remarks: "<xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A>메서드 제거 일치 <xref:System.Security.AccessControl.AccessControlType>액세스 규칙 또는 일치 하는 모든 <xref:System.Security.AccessControl.AccessControlType>액세스 규칙에서 현재 <xref:System.IO.Pipes.PipeSecurity>개체입니다.</xref:System.IO.Pipes.PipeSecurity> </xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.AccessControlType> </xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A> 예를 들어 모든 제거 하려면이 방법을 사용할 수 있습니다 <xref:System.Security.AccessControl.AccessControlType>전달 하 여 사용자에 대 한 액세스는 <xref:System.IO.Pipes.PipeAccessRule>사용 하 여 만든 개체는 <xref:System.Security.AccessControl.AccessControlType>값은 <xref:System.IO.Pipes.PipeAccessRights>값 및 사용자 계정.</xref:System.IO.Pipes.PipeAccessRights> </xref:System.Security.AccessControl.AccessControlType> </xref:System.IO.Pipes.PipeAccessRule> </xref:System.Security.AccessControl.AccessControlType> <xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A>지정 하는 모든 거부 규칙을 제거 하는 메서드는 <xref:System.IO.Pipes.PipeAccessRights>값 또는 <xref:System.IO.Pipes.PipeAccessRights>값.</xref:System.IO.Pipes.PipeAccessRights> </xref:System.IO.Pipes.PipeAccessRights> </xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A>"
  syntax:
    content: public void RemoveAccessRuleSpecific (System.IO.Pipes.PipeAccessRule rule);
    parameters:
    - id: rule
      type: System.IO.Pipes.PipeAccessRule
      description: "액세스 규칙을 제거 하는입니다."
  overload: System.IO.Pipes.PipeSecurity.RemoveAccessRuleSpecific*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.RemoveAuditRule(System.IO.Pipes.PipeAuditRule)
  id: RemoveAuditRule(System.IO.Pipes.PipeAuditRule)
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: RemoveAuditRule(PipeAuditRule)
  nameWithType: PipeSecurity.RemoveAuditRule(PipeAuditRule)
  fullName: System.IO.Pipes.PipeSecurity.RemoveAuditRule(PipeAuditRule)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "액세스 제어 목록 SACL (시스템)와 현재 연결 된 감사 규칙을 제거 <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> 개체입니다."
  remarks: "RemoveAuditRule 메서드 제거 일치 <xref:System.Security.AccessControl.AccessControlType>감사 규칙 또는 일치 하는 모든 <xref:System.Security.AccessControl.AccessControlType>감사는 현재 규칙 <xref:System.IO.Pipes.PipeSecurity>개체입니다.</xref:System.IO.Pipes.PipeSecurity> </xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.AccessControlType>  예를 들어 모든 제거 하려면이 방법을 사용할 수 있습니다 <xref:System.Security.AccessControl.AccessControlType>전달 하 여 사용자에 대 한 규칙을 감사는 <xref:System.Security.AccessControl.FileSystemAuditRule>사용 하 여 만든 개체는 <xref:System.Security.AccessControl.AccessControlType>값은 <xref:System.Security.AccessControl.AuditFlags>값 및 사용자 계정.</xref:System.Security.AccessControl.AuditFlags> </xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.FileSystemAuditRule> </xref:System.Security.AccessControl.AccessControlType>  RemoveAuditRule 메서드를 지정 하는 모든 거부 규칙 제거이 작업을 수행 하는 경우는 <xref:System.Security.AccessControl.AuditFlags>값 또는 <xref:System.Security.AccessControl.AuditFlags>값.</xref:System.Security.AccessControl.AuditFlags> </xref:System.Security.AccessControl.AuditFlags>"
  syntax:
    content: public bool RemoveAuditRule (System.IO.Pipes.PipeAuditRule rule);
    parameters:
    - id: rule
      type: System.IO.Pipes.PipeAuditRule
      description: "감사 규칙 제거입니다."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>감사 규칙이 제거 되었으면; 그렇지 않은 경우<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>"
  overload: System.IO.Pipes.PipeSecurity.RemoveAuditRule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll(System.IO.Pipes.PipeAuditRule)
  id: RemoveAuditRuleAll(System.IO.Pipes.PipeAuditRule)
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: RemoveAuditRuleAll(PipeAuditRule)
  nameWithType: PipeSecurity.RemoveAuditRuleAll(PipeAuditRule)
  fullName: System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll(PipeAuditRule)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "지정 된 감사 규칙에서 액세스 제어 목록 SACL (시스템)와 현재 연결 된 동일한 보안 식별자가 있는 모든 감사 규칙 제거 <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> 개체입니다."
  remarks: "RemoveAuditRuleAll 메서드는 지정된 된 사용자에 대 한 모든 감사 규칙을 제거합니다.  모든 값은 무시는 <xref:System.IO.Pipes.PipeAuditRule>개체에서 사용자 계정 제외한.</xref:System.IO.Pipes.PipeAuditRule>"
  syntax:
    content: public void RemoveAuditRuleAll (System.IO.Pipes.PipeAuditRule rule);
    parameters:
    - id: rule
      type: System.IO.Pipes.PipeAuditRule
      description: "감사 규칙 제거입니다."
  overload: System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific(System.IO.Pipes.PipeAuditRule)
  id: RemoveAuditRuleSpecific(System.IO.Pipes.PipeAuditRule)
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: RemoveAuditRuleSpecific(PipeAuditRule)
  nameWithType: PipeSecurity.RemoveAuditRuleSpecific(PipeAuditRule)
  fullName: System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific(PipeAuditRule)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "액세스 제어 목록 SACL (시스템)와 현재 연결 된 지정 된 감사 규칙이 제거 <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> 개체입니다."
  remarks: "RemoveAuditRuleSpecific 메서드는 일치 하는 지정 된 제거 <xref:System.Security.AccessControl.AccessControlType>감사 규칙이 나 특정 <xref:System.Security.AccessControl.AccessControlType>현재에서 감사 규칙 <xref:System.IO.Pipes.PipeSecurity>개체입니다.</xref:System.IO.Pipes.PipeSecurity> </xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.AccessControlType>  지정 된 제거 하려면이 메서드를 사용할 수는 예를 들어 <xref:System.Security.AccessControl.AccessControlType>전달 하 여 사용자에 대 한 감사 규칙은 <xref:System.Security.AccessControl.FileSystemAuditRule>사용 하 여 만든 개체는 <xref:System.Security.AccessControl.AccessControlType>값은 <xref:System.Security.AccessControl.AuditFlags>값 및 사용자 계정.</xref:System.Security.AccessControl.AuditFlags> </xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.FileSystemAuditRule> </xref:System.Security.AccessControl.AccessControlType>  이렇게 하면 RemoveAuditRuleSpecific도 제거는 거부 규칙을 지정 하는 <xref:System.Security.AccessControl.AuditFlags>값.</xref:System.Security.AccessControl.AuditFlags>  지정 된 거부 규칙을 제거 하지 않습니다는 <xref:System.Security.AccessControl.AuditFlags>값.</xref:System.Security.AccessControl.AuditFlags>"
  syntax:
    content: public void RemoveAuditRuleSpecific (System.IO.Pipes.PipeAuditRule rule);
    parameters:
    - id: rule
      type: System.IO.Pipes.PipeAuditRule
      description: "감사 규칙 제거입니다."
  overload: System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.ResetAccessRule(System.IO.Pipes.PipeAccessRule)
  id: ResetAccessRule(System.IO.Pipes.PipeAccessRule)
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: ResetAccessRule(PipeAccessRule)
  nameWithType: PipeSecurity.ResetAccessRule(PipeAccessRule)
  fullName: System.IO.Pipes.PipeSecurity.ResetAccessRule(PipeAccessRule)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "에 액세스 제어 목록 DACL (임의)와 현재 연결 된 모든 액세스 규칙을 제거 <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> 개체를 다음 지정 된 액세스 규칙을 추가 합니다."
  remarks: "ResetAccessRule 메서드를 지정 된 액세스 제어 목록 (ACL) 규칙을 추가 하거나 일치 하는 동일한 모든 ACL 규칙을 덮어씁니다는 `rule` 매개 변수입니다.  예를 들어 경우는 `rule` 매개 변수 지정는 <xref:System.IO.Pipes.PipeAccessRights>값과 ResetAccessRule 메서드 동일한 규칙을 찾으면 ACL을 지정 하는 <xref:System.IO.Pipes.PipeAccessRights>값을 동일한 규칙 덮어쓰게 됩니다.</xref:System.IO.Pipes.PipeAccessRights> </xref:System.IO.Pipes.PipeAccessRights>  경우 ResetAccessRule 찾으면 동일한 ACL 규칙을 지정 하는 <xref:System.IO.Pipes.PipeAccessRights>값을 동일한 규칙도 덮어쓰게 됩니다.</xref:System.IO.Pipes.PipeAccessRights>"
  syntax:
    content: public void ResetAccessRule (System.IO.Pipes.PipeAccessRule rule);
    parameters:
    - id: rule
      type: System.IO.Pipes.PipeAccessRule
      description: "액세스 규칙 추가입니다."
  overload: System.IO.Pipes.PipeSecurity.ResetAccessRule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.SetAccessRule(System.IO.Pipes.PipeAccessRule)
  id: SetAccessRule(System.IO.Pipes.PipeAccessRule)
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: SetAccessRule(PipeAccessRule)
  nameWithType: PipeSecurity.SetAccessRule(PipeAccessRule)
  fullName: System.IO.Pipes.PipeSecurity.SetAccessRule(PipeAccessRule)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "에 액세스 제어 목록 DACL (임의)와 현재 연결 된 액세스 규칙을 설정 <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> 개체입니다."
  remarks: "SetAccessRule 메서드를 지정 된 액세스 제어 목록 (ACL) 규칙을 추가 하거나 일치 하는 동일한 모든 ACL 규칙을 덮어씁니다는 <xref:System.IO.Pipes.PipeAccessRights>의 값은 `rule` 매개 변수.</xref:System.IO.Pipes.PipeAccessRights>  예를 들어 경우는 `rule` 매개 변수 지정는 <xref:System.IO.Pipes.PipeAccessRights>값과 SetAccessRule 메서드 동일한 규칙을 찾으면 ACL을 지정 하는 <xref:System.IO.Pipes.PipeAccessRights>값을 동일한 규칙 덮어쓰게 됩니다.</xref:System.IO.Pipes.PipeAccessRights> </xref:System.IO.Pipes.PipeAccessRights>  경우 SetAccessRule 찾으면 동일한 ACL 규칙을 지정 하는 <xref:System.IO.Pipes.PipeAccessRights>값을 동일한 규칙 하지 덮어쓰게 됩니다.</xref:System.IO.Pipes.PipeAccessRights>"
  syntax:
    content: public void SetAccessRule (System.IO.Pipes.PipeAccessRule rule);
    parameters:
    - id: rule
      type: System.IO.Pipes.PipeAccessRule
      description: "설정 하려면 규칙입니다."
  overload: System.IO.Pipes.PipeSecurity.SetAccessRule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.SetAuditRule(System.IO.Pipes.PipeAuditRule)
  id: SetAuditRule(System.IO.Pipes.PipeAuditRule)
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: SetAuditRule(PipeAuditRule)
  nameWithType: PipeSecurity.SetAuditRule(PipeAuditRule)
  fullName: System.IO.Pipes.PipeSecurity.SetAuditRule(PipeAuditRule)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "에 액세스 제어 목록 SACL (시스템)와 현재 연결 된 감사 규칙을 설정 <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> 개체입니다."
  remarks: "SetAuditRule 메서드는 지정 된 감사 규칙을 추가 하거나 일치 하는 모든 동일한 감사 규칙을 덮어씁니다는 <xref:System.IO.Pipes.PipeAccessRights>의 값은 `rule` 매개 변수.</xref:System.IO.Pipes.PipeAccessRights>  예를 들어 경우는 `rule` 매개 변수 지정는 <xref:System.IO.Pipes.PipeAccessRights>지정 하는 동일한 감사 규칙을 찾으면 값과 SetAuditRule 메서드는 <xref:System.IO.Pipes.PipeAccessRights>값을 동일한 규칙 덮어쓰게 됩니다.</xref:System.IO.Pipes.PipeAccessRights> </xref:System.IO.Pipes.PipeAccessRights>  SetAuditRule 메서드는 동일한 감사 규칙을 찾을 경우를 지정 하는 <xref:System.IO.Pipes.PipeAccessRights>값을 동일한 규칙 하지 덮어쓰게 됩니다.</xref:System.IO.Pipes.PipeAccessRights>"
  syntax:
    content: public void SetAuditRule (System.IO.Pipes.PipeAuditRule rule);
    parameters:
    - id: rule
      type: System.IO.Pipes.PipeAuditRule
      description: "설정 하려면 규칙입니다."
  overload: System.IO.Pipes.PipeSecurity.SetAuditRule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Security.AccessControl.NativeObjectSecurity
  isExternal: false
  name: System.Security.AccessControl.NativeObjectSecurity
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.IO.Pipes.PipeSecurity.#ctor
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: PipeSecurity()
  nameWithType: PipeSecurity.PipeSecurity()
  fullName: System.IO.Pipes.PipeSecurity.PipeSecurity()
- uid: System.IO.Pipes.PipeSecurity.AccessRightType
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: AccessRightType
  nameWithType: PipeSecurity.AccessRightType
  fullName: System.IO.Pipes.PipeSecurity.AccessRightType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.IO.Pipes.PipeSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
  nameWithType: PipeSecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
  fullName: System.IO.Pipes.PipeSecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
- uid: System.Security.AccessControl.AccessRule
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessRule
  nameWithType: AccessRule
  fullName: System.Security.AccessControl.AccessRule
- uid: System.Security.Principal.IdentityReference
  parent: System.Security.Principal
  isExternal: false
  name: IdentityReference
  nameWithType: IdentityReference
  fullName: System.Security.Principal.IdentityReference
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.AccessControl.InheritanceFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: InheritanceFlags
  nameWithType: InheritanceFlags
  fullName: System.Security.AccessControl.InheritanceFlags
- uid: System.Security.AccessControl.PropagationFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: PropagationFlags
  nameWithType: PropagationFlags
  fullName: System.Security.AccessControl.PropagationFlags
- uid: System.Security.AccessControl.AccessControlType
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessControlType
  nameWithType: AccessControlType
  fullName: System.Security.AccessControl.AccessControlType
- uid: System.IO.Pipes.PipeSecurity.AccessRuleType
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: AccessRuleType
  nameWithType: PipeSecurity.AccessRuleType
  fullName: System.IO.Pipes.PipeSecurity.AccessRuleType
- uid: System.IO.Pipes.PipeSecurity.AddAccessRule(System.IO.Pipes.PipeAccessRule)
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: AddAccessRule(PipeAccessRule)
  nameWithType: PipeSecurity.AddAccessRule(PipeAccessRule)
  fullName: System.IO.Pipes.PipeSecurity.AddAccessRule(PipeAccessRule)
- uid: System.IO.Pipes.PipeAccessRule
  parent: System.IO.Pipes
  isExternal: false
  name: PipeAccessRule
  nameWithType: PipeAccessRule
  fullName: System.IO.Pipes.PipeAccessRule
- uid: System.IO.Pipes.PipeSecurity.AddAuditRule(System.IO.Pipes.PipeAuditRule)
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: AddAuditRule(PipeAuditRule)
  nameWithType: PipeSecurity.AddAuditRule(PipeAuditRule)
  fullName: System.IO.Pipes.PipeSecurity.AddAuditRule(PipeAuditRule)
- uid: System.IO.Pipes.PipeAuditRule
  parent: System.IO.Pipes
  isExternal: false
  name: PipeAuditRule
  nameWithType: PipeAuditRule
  fullName: System.IO.Pipes.PipeAuditRule
- uid: System.IO.Pipes.PipeSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
  nameWithType: PipeSecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
  fullName: System.IO.Pipes.PipeSecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
- uid: System.Security.AccessControl.AuditRule
  parent: System.Security.AccessControl
  isExternal: false
  name: AuditRule
  nameWithType: AuditRule
  fullName: System.Security.AccessControl.AuditRule
- uid: System.Security.AccessControl.AuditFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: AuditFlags
  nameWithType: AuditFlags
  fullName: System.Security.AccessControl.AuditFlags
- uid: System.IO.Pipes.PipeSecurity.AuditRuleType
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: AuditRuleType
  nameWithType: PipeSecurity.AuditRuleType
  fullName: System.IO.Pipes.PipeSecurity.AuditRuleType
- uid: System.IO.Pipes.PipeSecurity.Persist(System.Runtime.InteropServices.SafeHandle)
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: Persist(SafeHandle)
  nameWithType: PipeSecurity.Persist(SafeHandle)
  fullName: System.IO.Pipes.PipeSecurity.Persist(SafeHandle)
- uid: System.Runtime.InteropServices.SafeHandle
  parent: System.Runtime.InteropServices
  isExternal: true
  name: SafeHandle
  nameWithType: SafeHandle
  fullName: System.Runtime.InteropServices.SafeHandle
- uid: System.IO.Pipes.PipeSecurity.Persist(System.String)
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: Persist(String)
  nameWithType: PipeSecurity.Persist(String)
  fullName: System.IO.Pipes.PipeSecurity.Persist(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.Pipes.PipeSecurity.RemoveAccessRule(System.IO.Pipes.PipeAccessRule)
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: RemoveAccessRule(PipeAccessRule)
  nameWithType: PipeSecurity.RemoveAccessRule(PipeAccessRule)
  fullName: System.IO.Pipes.PipeSecurity.RemoveAccessRule(PipeAccessRule)
- uid: System.IO.Pipes.PipeSecurity.RemoveAccessRuleSpecific(System.IO.Pipes.PipeAccessRule)
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: RemoveAccessRuleSpecific(PipeAccessRule)
  nameWithType: PipeSecurity.RemoveAccessRuleSpecific(PipeAccessRule)
  fullName: System.IO.Pipes.PipeSecurity.RemoveAccessRuleSpecific(PipeAccessRule)
- uid: System.IO.Pipes.PipeSecurity.RemoveAuditRule(System.IO.Pipes.PipeAuditRule)
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: RemoveAuditRule(PipeAuditRule)
  nameWithType: PipeSecurity.RemoveAuditRule(PipeAuditRule)
  fullName: System.IO.Pipes.PipeSecurity.RemoveAuditRule(PipeAuditRule)
- uid: System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll(System.IO.Pipes.PipeAuditRule)
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: RemoveAuditRuleAll(PipeAuditRule)
  nameWithType: PipeSecurity.RemoveAuditRuleAll(PipeAuditRule)
  fullName: System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll(PipeAuditRule)
- uid: System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific(System.IO.Pipes.PipeAuditRule)
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: RemoveAuditRuleSpecific(PipeAuditRule)
  nameWithType: PipeSecurity.RemoveAuditRuleSpecific(PipeAuditRule)
  fullName: System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific(PipeAuditRule)
- uid: System.IO.Pipes.PipeSecurity.ResetAccessRule(System.IO.Pipes.PipeAccessRule)
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: ResetAccessRule(PipeAccessRule)
  nameWithType: PipeSecurity.ResetAccessRule(PipeAccessRule)
  fullName: System.IO.Pipes.PipeSecurity.ResetAccessRule(PipeAccessRule)
- uid: System.IO.Pipes.PipeSecurity.SetAccessRule(System.IO.Pipes.PipeAccessRule)
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: SetAccessRule(PipeAccessRule)
  nameWithType: PipeSecurity.SetAccessRule(PipeAccessRule)
  fullName: System.IO.Pipes.PipeSecurity.SetAccessRule(PipeAccessRule)
- uid: System.IO.Pipes.PipeSecurity.SetAuditRule(System.IO.Pipes.PipeAuditRule)
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: SetAuditRule(PipeAuditRule)
  nameWithType: PipeSecurity.SetAuditRule(PipeAuditRule)
  fullName: System.IO.Pipes.PipeSecurity.SetAuditRule(PipeAuditRule)
- uid: System.IO.Pipes.PipeSecurity.#ctor*
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: PipeSecurity
  nameWithType: PipeSecurity.PipeSecurity
- uid: System.IO.Pipes.PipeSecurity.AccessRightType*
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: AccessRightType
  nameWithType: PipeSecurity.AccessRightType
- uid: System.IO.Pipes.PipeSecurity.AccessRuleFactory*
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: AccessRuleFactory
  nameWithType: PipeSecurity.AccessRuleFactory
- uid: System.IO.Pipes.PipeSecurity.AccessRuleType*
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: AccessRuleType
  nameWithType: PipeSecurity.AccessRuleType
- uid: System.IO.Pipes.PipeSecurity.AddAccessRule*
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: AddAccessRule
  nameWithType: PipeSecurity.AddAccessRule
- uid: System.IO.Pipes.PipeSecurity.AddAuditRule*
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: AddAuditRule
  nameWithType: PipeSecurity.AddAuditRule
- uid: System.IO.Pipes.PipeSecurity.AuditRuleFactory*
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: AuditRuleFactory
  nameWithType: PipeSecurity.AuditRuleFactory
- uid: System.IO.Pipes.PipeSecurity.AuditRuleType*
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: AuditRuleType
  nameWithType: PipeSecurity.AuditRuleType
- uid: System.IO.Pipes.PipeSecurity.Persist*
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: Persist
  nameWithType: PipeSecurity.Persist
- uid: System.IO.Pipes.PipeSecurity.RemoveAccessRule*
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: RemoveAccessRule
  nameWithType: PipeSecurity.RemoveAccessRule
- uid: System.IO.Pipes.PipeSecurity.RemoveAccessRuleSpecific*
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: RemoveAccessRuleSpecific
  nameWithType: PipeSecurity.RemoveAccessRuleSpecific
- uid: System.IO.Pipes.PipeSecurity.RemoveAuditRule*
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: RemoveAuditRule
  nameWithType: PipeSecurity.RemoveAuditRule
- uid: System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll*
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: RemoveAuditRuleAll
  nameWithType: PipeSecurity.RemoveAuditRuleAll
- uid: System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific*
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: RemoveAuditRuleSpecific
  nameWithType: PipeSecurity.RemoveAuditRuleSpecific
- uid: System.IO.Pipes.PipeSecurity.ResetAccessRule*
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: ResetAccessRule
  nameWithType: PipeSecurity.ResetAccessRule
- uid: System.IO.Pipes.PipeSecurity.SetAccessRule*
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: SetAccessRule
  nameWithType: PipeSecurity.SetAccessRule
- uid: System.IO.Pipes.PipeSecurity.SetAuditRule*
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: SetAuditRule
  nameWithType: PipeSecurity.SetAuditRule
