### YamlMime:ManagedReference
items:
- uid: System.Net.PeerToPeer.Collaboration.PeerApplication
  id: PeerApplication
  children:
  - System.Net.PeerToPeer.Collaboration.PeerApplication.#ctor
  - System.Net.PeerToPeer.Collaboration.PeerApplication.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Net.PeerToPeer.Collaboration.PeerApplication.#ctor(System.Guid,System.String,System.Byte[],System.String,System.String,System.Net.PeerToPeer.Collaboration.PeerScope)
  - System.Net.PeerToPeer.Collaboration.PeerApplication.ApplicationChanged
  - System.Net.PeerToPeer.Collaboration.PeerApplication.CommandLineArgs
  - System.Net.PeerToPeer.Collaboration.PeerApplication.Data
  - System.Net.PeerToPeer.Collaboration.PeerApplication.Description
  - System.Net.PeerToPeer.Collaboration.PeerApplication.Dispose
  - System.Net.PeerToPeer.Collaboration.PeerApplication.Dispose(System.Boolean)
  - System.Net.PeerToPeer.Collaboration.PeerApplication.Equals(System.Net.PeerToPeer.Collaboration.PeerApplication)
  - System.Net.PeerToPeer.Collaboration.PeerApplication.Equals(System.Object)
  - System.Net.PeerToPeer.Collaboration.PeerApplication.Equals(System.Object,System.Object)
  - System.Net.PeerToPeer.Collaboration.PeerApplication.GetHashCode
  - System.Net.PeerToPeer.Collaboration.PeerApplication.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Net.PeerToPeer.Collaboration.PeerApplication.Id
  - System.Net.PeerToPeer.Collaboration.PeerApplication.OnApplicationChanged(System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs)
  - System.Net.PeerToPeer.Collaboration.PeerApplication.Path
  - System.Net.PeerToPeer.Collaboration.PeerApplication.PeerScope
  - System.Net.PeerToPeer.Collaboration.PeerApplication.SynchronizingObject
  - System.Net.PeerToPeer.Collaboration.PeerApplication.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Net.PeerToPeer.Collaboration.PeerApplication.ToString
  langs:
  - csharp
  name: PeerApplication
  nameWithType: PeerApplication
  fullName: System.Net.PeerToPeer.Collaboration.PeerApplication
  type: Class
  summary: "피어 공동 작업 인프라를 사용할 수 있는 응용을 프로그램을 나타냅니다."
  remarks: "응용 프로그램에서 끝점에서 피어 소프트웨어 또는 사용할 수 있는 소프트웨어 기능 집합입니다. 일반적으로 게임이 나 기타 공동 작업 응용 프로그램 등의 네트워크 사용 소프트웨어 패키지를 나타냅니다. 소프트웨어 응용 프로그램 또는 함께 사용할 수 있는 구성 요소 집합을 정의 하는 한 PeerApplication는 <xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration>네트워크.</xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration> 이 네트워크 인프라 참가자가이 응용 프로그램의 사용을 시작할 수 있습니다. 이 클래스에 의해 식별 된 응용 프로그램을 사용 하 여 공동 작업 세션을 시작할 수 있습니다.       이 클래스의 인스턴스를 생성 하 고 적절 한 속성을 설정 후이 개체에서 사용할 수 있습니다 <xref:System.Net.PeerToPeer>공동 작업 세션.</xref:System.Net.PeerToPeer>  사용에 피어 공동 작업 <xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.RegisterApplication%2A>및 <xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.UnregisterApplication%2A>메서드를 하는 여부를 결정 합니다.</xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.UnregisterApplication%2A> </xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.RegisterApplication%2A> 전달 하 여 이루어집니다.       전역 고유 <xref:System.Net.PeerToPeer.Collaboration.PeerApplication.Id%2A>및 <xref:System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType>응용 프로그램을 성공적으로 등록 하려면이 인스턴스의 속성을 설정 해야 합니다.</xref:System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType> </xref:System.Net.PeerToPeer.Collaboration.PeerApplication.Id%2A>       피어 공동 작업 인프라와 응용 프로그램을 등록 한 후 레지스트리에 등록 정보 유지 합니다.  이렇게 하면 응용 프로그램 공동 작업 응용 프로그램을 응용 프로그램을 등록 한 프로그램이 종료 된 후에 있습니다.       등록 된 후 응용 프로그램 인스턴스에 대 한 속성을 변경 해도 등록에는 영향이 없습니다. 등록을 업데이트 하려면 응용 프로그램 등록을 취소 및 새 정보로 다시 등록 되어야 합니다."
  syntax:
    content: 'public class PeerApplication : IDisposable, IEquatable<System.Net.PeerToPeer.Collaboration.PeerApplication>, System.Runtime.Serialization.ISerializable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  - System.IEquatable<System.Net.PeerToPeer.Collaboration.PeerApplication>
  - System.Runtime.Serialization.ISerializable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.PeerApplication.#ctor
  id: '#ctor'
  parent: System.Net.PeerToPeer.Collaboration.PeerApplication
  langs:
  - csharp
  name: PeerApplication()
  nameWithType: PeerApplication.PeerApplication()
  fullName: System.Net.PeerToPeer.Collaboration.PeerApplication.PeerApplication()
  type: Constructor
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "새로운 기본 인스턴스를 초기화는 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplication&quot;> </xref> 유형입니다."
  remarks: "전역 고유 <xref:System.Net.PeerToPeer.Collaboration.PeerApplication.Id%2A>및 <xref:System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType>응용 프로그램을 성공적으로 등록 하려면이 인스턴스의 속성을 설정 해야 합니다.</xref:System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType> </xref:System.Net.PeerToPeer.Collaboration.PeerApplication.Id%2A>"
  syntax:
    content: public PeerApplication ();
    parameters: []
  overload: System.Net.PeerToPeer.Collaboration.PeerApplication.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.PeerApplication.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.Net.PeerToPeer.Collaboration.PeerApplication
  langs:
  - csharp
  name: PeerApplication(SerializationInfo,StreamingContext)
  nameWithType: PeerApplication.PeerApplication(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.Collaboration.PeerApplication.PeerApplication(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "새 인스턴스를 초기화는 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplication&quot;> </xref> 유형 직렬화에 필요한 데이터를 사용 합니다."
  remarks: "<xref:System.Net.PeerToPeer.Collaboration.PeerApplication> <xref:System.Net.PeerToPeer.PeerName>합니다. 내의 개체</xref:System.Net.PeerToPeer.PeerName> 에 의해 정규화 된 이름 가진 개체</xref:System.Net.PeerToPeer.Collaboration.PeerApplication> 를 반환합니다.       전역 고유 <xref:System.Net.PeerToPeer.Collaboration.PeerApplication.Id%2A>및 <xref:System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType>응용 프로그램을 성공적으로 등록 하려면이 인스턴스의 속성을 설정 해야 합니다.</xref:System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType> </xref:System.Net.PeerToPeer.Collaboration.PeerApplication.Id%2A>"
  syntax:
    content: protected PeerApplication (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);
    parameters:
    - id: serializationInfo
      type: System.Runtime.Serialization.SerializationInfo
      description: "<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> 연관 된 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerEndPoint&quot;> </xref>합니다."
    - id: streamingContext
      type: System.Runtime.Serialization.StreamingContext
      description: "와 연결 된 직렬화 대상은 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerEndPoint&quot;> </xref>합니다."
  overload: System.Net.PeerToPeer.Collaboration.PeerApplication.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.PeerApplication.#ctor(System.Guid,System.String,System.Byte[],System.String,System.String,System.Net.PeerToPeer.Collaboration.PeerScope)
  id: '#ctor(System.Guid,System.String,System.Byte[],System.String,System.String,System.Net.PeerToPeer.Collaboration.PeerScope)'
  parent: System.Net.PeerToPeer.Collaboration.PeerApplication
  langs:
  - csharp
  name: PeerApplication(Guid,String,Byte[],String,String,PeerScope)
  nameWithType: PeerApplication.PeerApplication(Guid,String,Byte[],String,String,PeerScope)
  fullName: System.Net.PeerToPeer.Collaboration.PeerApplication.PeerApplication(Guid,String,Byte[],String,String,PeerScope)
  type: Constructor
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "새 초기화 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplication&quot;> </xref> 제공 된 응용 프로그램 ID, 설명, 범위 및 데이터 요소를 사용 하 여 인스턴스."
  remarks: "전역 고유 <xref:System.Net.PeerToPeer.Collaboration.PeerApplication.Id%2A>및 <xref:System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType>응용 프로그램을 성공적으로 등록 하려면이 인스턴스의 속성을 설정 해야 합니다.</xref:System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType> </xref:System.Net.PeerToPeer.Collaboration.PeerApplication.Id%2A>"
  syntax:
    content: public PeerApplication (Guid id, string description, byte[] data, string path, string commandLineArgs, System.Net.PeerToPeer.Collaboration.PeerScope peerScope);
    parameters:
    - id: id
      type: System.Guid
      description: "사용자가 지정한 <xref:System.Guid>식별 하는 데는 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplication&quot;> </xref>.</xref:System.Guid>"
    - id: description
      type: System.String
      description: "A <xref:System.String>는 피어 응용 프로그램 설명.</xref:System.String>"
    - id: data
      type: System.Byte[]
      description: "작은 이미지와 같은 피어 응용 프로그램에 연결 하는 이진 데이터 개체입니다."
    - id: path
      type: System.String
      description: "피어 응용 프로그램에 로컬 파일 시스템 경로입니다."
    - id: commandLineArgs
      type: System.String
      description: "피어 응용 프로그램을 시작 하기 위한 명령줄 인수입니다."
    - id: peerScope
      type: System.Net.PeerToPeer.Collaboration.PeerScope
      description: "피어 공동 작업에 대 한 응용 프로그램이 등록 될 범위입니다."
  overload: System.Net.PeerToPeer.Collaboration.PeerApplication.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "-이진 데이터 개체의 길이 1 보다 작거나 16k 보다 클 수 없습니다.      -   <code>id</code> is set to <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.PeerApplication.ApplicationChanged
  id: ApplicationChanged
  parent: System.Net.PeerToPeer.Collaboration.PeerApplication
  langs:
  - csharp
  name: ApplicationChanged
  nameWithType: PeerApplication.ApplicationChanged
  fullName: System.Net.PeerToPeer.Collaboration.PeerApplication.ApplicationChanged
  type: Event
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "이 이벤트는 때마다는 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplication&quot;> </xref> 추가, 업데이트 또는 구독 된 끝점에서 원격 피어가 됩니다."
  remarks: "이 이벤트의 사용의 값이 필요한 <xref:System.Security.Permissions.PermissionState>에 <xref:System.Security.Permissions.PermissionState>의 <xref:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission>피어 공동 작업 세션이 시작 될 때 만들어진 개체는.</xref:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission> </xref:System.Security.Permissions.PermissionState> </xref:System.Security.Permissions.PermissionState>"
  syntax:
    content: public event EventHandler<System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs> ApplicationChanged;
    return:
      type: System.EventHandler{System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs}
      description: "추가할 수 있습니다."
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplication&quot;> </xref> 개체가 삭제 되었습니다."
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.PeerApplication.CommandLineArgs
  id: CommandLineArgs
  parent: System.Net.PeerToPeer.Collaboration.PeerApplication
  langs:
  - csharp
  name: CommandLineArgs
  nameWithType: PeerApplication.CommandLineArgs
  fullName: System.Net.PeerToPeer.Collaboration.PeerApplication.CommandLineArgs
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "시작할 때 사용할 명령줄 매개 변수를 가져오거나 설정 합니다.는 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplication&quot;> </xref>합니다."
  syntax:
    content: public string CommandLineArgs { get; set; }
    return:
      type: System.String
      description: "<xref:System.String>시작할 때 사용할 응용 프로그램 관련 명령줄 매개 변수를 나타내는 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplication&quot;> </xref>합니다.</xref:System.String>"
  overload: System.Net.PeerToPeer.Collaboration.PeerApplication.CommandLineArgs*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplication&quot;> </xref> 개체가 삭제 되었습니다."
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.PeerApplication.Data
  id: Data
  parent: System.Net.PeerToPeer.Collaboration.PeerApplication
  langs:
  - csharp
  name: Data
  nameWithType: PeerApplication.Data
  fullName: System.Net.PeerToPeer.Collaboration.PeerApplication.Data
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "현재 연관 된 데이터를 가져오거나 설정 합니다. <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplication&quot;> </xref> 인스턴스."
  remarks: "이 데이터는 자유 형식 이며 호스팅 피어가 제공 됩니다. 제공 될 수 있는 데이터의 최대 크기는 4, 096 바이트입니다. 이 데이터를의 일부가 <xref:System.Net.PeerToPeer.Collaboration.PeerApplication>초대를 대신 추가 데이터를 로컬 피어에 응용 프로그램과 연결 될 수 있습니다.</xref:System.Net.PeerToPeer.Collaboration.PeerApplication>"
  syntax:
    content: public byte[] Data { get; set; }
    return:
      type: System.Byte[]
      description: "배열 <xref:System.Byte>피어 응용 프로그램과 연결할 이진 개체를 포함 하는 데이터입니다.</xref:System.Byte> 이 일반적으로 작은 이미지 또는 XML blob입니다."
  overload: System.Net.PeerToPeer.Collaboration.PeerApplication.Data*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "이 이진 데이터 개체의 크기는 0 보다 작거나 4, 096 바이트를 초과 합니다."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplication&quot;> </xref> 개체가 삭제 되었습니다."
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.PeerApplication.Description
  id: Description
  parent: System.Net.PeerToPeer.Collaboration.PeerApplication
  langs:
  - csharp
  name: Description
  nameWithType: PeerApplication.Description
  fullName: System.Net.PeerToPeer.Collaboration.PeerApplication.Description
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "유니코드를 가져오거나 설정 합니다. <xref:System.String>설명 하는 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplication&quot;> </xref>.</xref:System.String>"
  remarks: "이 데이터를 포함 한 <xref:System.Net.PeerToPeer.Collaboration.PeerApplication>초대.</xref:System.Net.PeerToPeer.Collaboration.PeerApplication> 사용자에 표시 되는 반면 인터페이스는 <xref:System.Net.PeerToPeer.Collaboration.Peer>응용 프로그램에 대 한 초대를 받습니다.</xref:System.Net.PeerToPeer.Collaboration.Peer>"
  syntax:
    content: public string Description { get; set; }
    return:
      type: System.String
      description: "<xref:System.String>응용 프로그램을 설명 하는 값입니다.</xref:System.String> 이 속성에 대 한 기본값은 지정 되지 않으면 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Net.PeerToPeer.Collaboration.PeerApplication.Description*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplication&quot;> </xref> 개체가 삭제 되었습니다."
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.PeerApplication.Dispose
  id: Dispose
  parent: System.Net.PeerToPeer.Collaboration.PeerApplication
  langs:
  - csharp
  name: Dispose()
  nameWithType: PeerApplication.Dispose()
  fullName: System.Net.PeerToPeer.Collaboration.PeerApplication.Dispose()
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "사용 하는 리소스를 해제는 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplication&quot;> </xref> 개체입니다."
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Net.PeerToPeer.Collaboration.PeerApplication.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.PeerApplication.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Net.PeerToPeer.Collaboration.PeerApplication
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: PeerApplication.Dispose(Boolean)
  fullName: System.Net.PeerToPeer.Collaboration.PeerApplication.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "사용 하는 관리 되지 않는 리소스를 해제는 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplication&quot;> </xref> 개체를 선택적으로 관리 되는 리소스를 해제 합니다."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "로 설정 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> 와 관리 되지 않는 리소스만 해제 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 만 관리 되지 않는 리소스를 해제 합니다."
  overload: System.Net.PeerToPeer.Collaboration.PeerApplication.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.PeerApplication.Equals(System.Net.PeerToPeer.Collaboration.PeerApplication)
  id: Equals(System.Net.PeerToPeer.Collaboration.PeerApplication)
  parent: System.Net.PeerToPeer.Collaboration.PeerApplication
  langs:
  - csharp
  name: Equals(PeerApplication)
  nameWithType: PeerApplication.Equals(PeerApplication)
  fullName: System.Net.PeerToPeer.Collaboration.PeerApplication.Equals(PeerApplication)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "비교는 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplication&quot;> </xref> 지정 된 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplication&quot;> </xref> 인스턴스."
  remarks: "정규화 문자열 비교 하기 전에 수행 됩니다.  모든 정규화 완료 되어야 하는 동안 또는 PeerApplication 개체를 생성 하기 전에."
  syntax:
    content: public bool Equals (System.Net.PeerToPeer.Collaboration.PeerApplication other);
    parameters:
    - id: other
      type: System.Net.PeerToPeer.Collaboration.PeerApplication
      description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplication&quot;> </xref> 같은지 여부를 테스트할 인스턴스."
    return:
      type: System.Boolean
      description: "반환 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> 경우는 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplication&quot;> </xref> 인스턴스 공급자에 데이터를 다른 일치 하는 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다. This method also returns <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> if <code>other</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Net.PeerToPeer.Collaboration.PeerApplication.Equals*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "이 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplication&quot;> </xref> 개체가 삭제 되었습니다."
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.PeerApplication.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Net.PeerToPeer.Collaboration.PeerApplication
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: PeerApplication.Equals(Object)
  fullName: System.Net.PeerToPeer.Collaboration.PeerApplication.Equals(Object)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "비교는 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplication&quot;> </xref> <xref:System.Object>.</xref:System.Object> 지정"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "<xref:System.Object>같은지 여부를 테스트할.</xref:System.Object>"
    return:
      type: System.Boolean
      description: "반환 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> 경우는 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplication&quot;> </xref> 다른 지정한 개체가 인스턴스와 같으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Net.PeerToPeer.Collaboration.PeerApplication.Equals*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref:System.Object>삭제 되었습니다.</xref:System.Object>"
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.PeerApplication.Equals(System.Object,System.Object)
  id: Equals(System.Object,System.Object)
  parent: System.Net.PeerToPeer.Collaboration.PeerApplication
  langs:
  - csharp
  name: Equals(Object,Object)
  nameWithType: PeerApplication.Equals(Object,Object)
  fullName: System.Net.PeerToPeer.Collaboration.PeerApplication.Equals(Object,Object)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "확인 여부를 지정 된 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplication&quot;> </xref> 개체가 같은 개체로 간주 됩니다."
  syntax:
    content: public static bool Equals (object objA, object objB);
    parameters:
    - id: objA
      type: System.Object
      description: "첫 번째 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplication&quot;> </xref> 을 비교 합니다."
    - id: objB
      type: System.Object
      description: "두 번째 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplication&quot;> </xref> 을 비교 합니다."
    return:
      type: System.Boolean
      description: "반환 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> 지정한 개체가 같은 전역적으로 고유 응용 프로그램을 설치 하는 경우 <> </> *> 및 <> </> *>, 그렇지 않으면 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Net.PeerToPeer.Collaboration.PeerApplication.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.PeerApplication.GetHashCode
  id: GetHashCode
  parent: System.Net.PeerToPeer.Collaboration.PeerApplication
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: PeerApplication.GetHashCode()
  fullName: System.Net.PeerToPeer.Collaboration.PeerApplication.GetHashCode()
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "에 대 한 해시 코드를 반환 하는 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplication&quot;> </xref> 인스턴스."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "이 형식의 인스턴스를 비교 하는 데 사용 하는 정수 해시 코드는 부호 있는 32 비트 합니다."
  overload: System.Net.PeerToPeer.Collaboration.PeerApplication.GetHashCode*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplication&quot;> </xref> 개체가 삭제 되었습니다."
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.PeerApplication.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Net.PeerToPeer.Collaboration.PeerApplication
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: PeerApplication.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.Collaboration.PeerApplication.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "정보를 표시 한 <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> 대상 serialize 하는 데 필요한 데이터로 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplication&quot;> </xref>합니다."
  syntax:
    content: protected virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> 데이터로 채울 합니다."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "이 serialization에 대 한 대상입니다."
  overload: System.Net.PeerToPeer.Collaboration.PeerApplication.GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.PeerApplication.Id
  id: Id
  parent: System.Net.PeerToPeer.Collaboration.PeerApplication
  langs:
  - csharp
  name: Id
  nameWithType: PeerApplication.Id
  fullName: System.Net.PeerToPeer.Collaboration.PeerApplication.Id
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "사용자 지정을 가져오거나 <xref:System.Guid>연관 된 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplication&quot;> </xref>.</xref:System.Guid>"
  remarks: '`Null`항목이 허용 되지 않습니다.'
  syntax:
    content: public Guid Id { get; set; }
    return:
      type: System.Guid
      description: "<xref:System.Guid>연관 된 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplication&quot;> </xref> 인스턴스.</xref:System.Guid> 이 속성에 대 한 기본값은 지정 되지 않으면 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Net.PeerToPeer.Collaboration.PeerApplication.Id*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplication&quot;> </xref> 개체가 삭제 되었습니다."
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.PeerApplication.OnApplicationChanged(System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs)
  id: OnApplicationChanged(System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs)
  parent: System.Net.PeerToPeer.Collaboration.PeerApplication
  langs:
  - csharp
  name: OnApplicationChanged(ApplicationChangedEventArgs)
  nameWithType: PeerApplication.OnApplicationChanged(ApplicationChangedEventArgs)
  fullName: System.Net.PeerToPeer.Collaboration.PeerApplication.OnApplicationChanged(ApplicationChangedEventArgs)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "발생 된 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplication.ApplicationChanged&quot;> </xref> 이벤트입니다."
  remarks: "이 클래스에서 상속 된 클래스는 추가 작업을 수행할 이벤트가 발생할 때이 대리자를 재정의할 수 있습니다."
  syntax:
    content: protected virtual void OnApplicationChanged (System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs appChangedArgs);
    parameters:
    - id: appChangedArgs
      type: System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs
      description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs&quot;> </xref> 개체에 대 한 대리자에 전달할 데이터를 포함 하는 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplication.ApplicationChanged&quot;> </xref> 이벤트입니다."
  overload: System.Net.PeerToPeer.Collaboration.PeerApplication.OnApplicationChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.PeerApplication.Path
  id: Path
  parent: System.Net.PeerToPeer.Collaboration.PeerApplication
  langs:
  - csharp
  name: Path
  nameWithType: PeerApplication.Path
  fullName: System.Net.PeerToPeer.Collaboration.PeerApplication.Path
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "위치를 지정 하는 경로 가져오거나 설정 합니다.는 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplication&quot;> </xref> 실행 파일이 로컬 파일 시스템에 상주 합니다."
  remarks: '`Null`또는 <xref:System.String.Empty>허용 되지 않습니다.</xref:System.String.Empty>'
  syntax:
    content: public string Path { get; set; }
    return:
      type: System.String
      description: "<xref:System.String>파일 경로 나타내는입니다.</xref:System.String> 이 속성에 대 한 기본 값은 명시적으로 지정 하지 않으면 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>합니다."
  overload: System.Net.PeerToPeer.Collaboration.PeerApplication.Path*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplication&quot;> </xref> 개체가 삭제 되었습니다."
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.PeerApplication.PeerScope
  id: PeerScope
  parent: System.Net.PeerToPeer.Collaboration.PeerApplication
  langs:
  - csharp
  name: PeerScope
  nameWithType: PeerApplication.PeerScope
  fullName: System.Net.PeerToPeer.Collaboration.PeerApplication.PeerScope
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "범위를 가져오거나는 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplication&quot;> </xref> 공동 작업에 대해 등록 됩니다."
  syntax:
    content: public System.Net.PeerToPeer.Collaboration.PeerScope PeerScope { get; set; }
    return:
      type: System.Net.PeerToPeer.Collaboration.PeerScope
      description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerScope&quot;></xref>개체는 범위를 지정 하는 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplication&quot;> </xref> 공동 작업을 수행 합니다."
  overload: System.Net.PeerToPeer.Collaboration.PeerApplication.PeerScope*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplication&quot;> </xref> 개체가 삭제 되었습니다."
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.PeerApplication.SynchronizingObject
  id: SynchronizingObject
  parent: System.Net.PeerToPeer.Collaboration.PeerApplication
  langs:
  - csharp
  name: SynchronizingObject
  nameWithType: PeerApplication.SynchronizingObject
  fullName: System.Net.PeerToPeer.Collaboration.PeerApplication.SynchronizingObject
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "이 속성 값을 설정 하는 경우 하지는 비동기 작업의 결과로 발생 하는 모든 이벤트 <xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint.SynchronizingObject*>.</xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint.SynchronizingObject*> 특정 작성 된 스레드에서 다시 호출 하는 연결 된 이벤트 처리기 것"
  remarks: "이 속성에 대 한 기본 설정 값은 `null`를 나타내는 모든 이벤트 처리기 시스템 스레드 풀 스레드에서 호출 됩니다.       이 속성은 일반적으로 같은으로 설정 UI 요소는 <xref:System.Windows.Forms.Form>인스턴스.</xref:System.Windows.Forms.Form>"
  syntax:
    content: public System.ComponentModel.ISynchronizeInvoke SynchronizingObject { get; set; }
    return:
      type: System.ComponentModel.ISynchronizeInvoke
      description: "구현 하는 개체는 <xref href=&quot;System.ComponentModel.ISynchronizeInvoke&quot;> </xref> 인터페이스를 작성 하는 스레드에서 이벤트 처리기 동기화에이 유형의 인스턴스에서 사용 됩니다."
  overload: System.Net.PeerToPeer.Collaboration.PeerApplication.SynchronizingObject*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "호출 하는 개체가 삭제 되었습니다."
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.PeerApplication.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  isEii: true
  parent: System.Net.PeerToPeer.Collaboration.PeerApplication
  langs:
  - csharp
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: PeerApplication.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.Collaboration.PeerApplication.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "구현 된 <xref href=&quot;System.Runtime.Serialization.ISerializable&quot;> </xref> 인터페이스 및 대상 serialize 하는 데 필요한 데이터를 반환 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplication&quot;> </xref>합니다."
  syntax:
    content: void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> 데이터로 채울 개체입니다."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "이 serialization에 대 한 대상입니다."
  overload: System.Net.PeerToPeer.Collaboration.PeerApplication.System#Runtime#Serialization#ISerializable#GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.PeerApplication.ToString
  id: ToString
  parent: System.Net.PeerToPeer.Collaboration.PeerApplication
  langs:
  - csharp
  name: ToString()
  nameWithType: PeerApplication.ToString()
  fullName: System.Net.PeerToPeer.Collaboration.PeerApplication.ToString()
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "포함 된 문자열을 반환 된 <> </> *> 및 <> </> *>의 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplication&quot;> </xref> 인스턴스."
  remarks: "이 메서드는 기본 서명 및 <xref:System.Object>.</xref:System.Object> 동작 상속"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "포함 하는 문자열은 <> </> *> 및 <> </> *>의 <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplication&quot;> </xref> 공백으로 구분 된 인스턴스."
  overload: System.Net.PeerToPeer.Collaboration.PeerApplication.ToString*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplication&quot;> </xref> 개체가 삭제 되었습니다."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.Net.PeerToPeer.Collaboration.PeerApplication.#ctor
  parent: System.Net.PeerToPeer.Collaboration.PeerApplication
  isExternal: false
  name: PeerApplication()
  nameWithType: PeerApplication.PeerApplication()
  fullName: System.Net.PeerToPeer.Collaboration.PeerApplication.PeerApplication()
- uid: System.Net.PeerToPeer.Collaboration.PeerApplication.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Net.PeerToPeer.Collaboration.PeerApplication
  isExternal: false
  name: PeerApplication(SerializationInfo,StreamingContext)
  nameWithType: PeerApplication.PeerApplication(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.Collaboration.PeerApplication.PeerApplication(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Net.PeerToPeer.Collaboration.PeerApplication.#ctor(System.Guid,System.String,System.Byte[],System.String,System.String,System.Net.PeerToPeer.Collaboration.PeerScope)
  parent: System.Net.PeerToPeer.Collaboration.PeerApplication
  isExternal: false
  name: PeerApplication(Guid,String,Byte[],String,String,PeerScope)
  nameWithType: PeerApplication.PeerApplication(Guid,String,Byte[],String,String,PeerScope)
  fullName: System.Net.PeerToPeer.Collaboration.PeerApplication.PeerApplication(Guid,String,Byte[],String,String,PeerScope)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Net.PeerToPeer.Collaboration.PeerScope
  parent: System.Net.PeerToPeer.Collaboration
  isExternal: false
  name: PeerScope
  nameWithType: PeerScope
  fullName: System.Net.PeerToPeer.Collaboration.PeerScope
- uid: System.Net.PeerToPeer.Collaboration.PeerApplication.ApplicationChanged
  parent: System.Net.PeerToPeer.Collaboration.PeerApplication
  isExternal: false
  name: ApplicationChanged
  nameWithType: PeerApplication.ApplicationChanged
  fullName: System.Net.PeerToPeer.Collaboration.PeerApplication.ApplicationChanged
- uid: System.EventHandler{System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<ApplicationChangedEventArgs>
  nameWithType: EventHandler<ApplicationChangedEventArgs>
  fullName: System.EventHandler<System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs
    name: ApplicationChangedEventArgs
    nameWithType: ApplicationChangedEventArgs
    fullName: ApplicationChangedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.PeerToPeer.Collaboration.PeerApplication.CommandLineArgs
  parent: System.Net.PeerToPeer.Collaboration.PeerApplication
  isExternal: false
  name: CommandLineArgs
  nameWithType: PeerApplication.CommandLineArgs
  fullName: System.Net.PeerToPeer.Collaboration.PeerApplication.CommandLineArgs
- uid: System.Net.PeerToPeer.Collaboration.PeerApplication.Data
  parent: System.Net.PeerToPeer.Collaboration.PeerApplication
  isExternal: false
  name: Data
  nameWithType: PeerApplication.Data
  fullName: System.Net.PeerToPeer.Collaboration.PeerApplication.Data
- uid: System.Net.PeerToPeer.Collaboration.PeerApplication.Description
  parent: System.Net.PeerToPeer.Collaboration.PeerApplication
  isExternal: false
  name: Description
  nameWithType: PeerApplication.Description
  fullName: System.Net.PeerToPeer.Collaboration.PeerApplication.Description
- uid: System.Net.PeerToPeer.Collaboration.PeerApplication.Dispose
  parent: System.Net.PeerToPeer.Collaboration.PeerApplication
  isExternal: false
  name: Dispose()
  nameWithType: PeerApplication.Dispose()
  fullName: System.Net.PeerToPeer.Collaboration.PeerApplication.Dispose()
- uid: System.Net.PeerToPeer.Collaboration.PeerApplication.Dispose(System.Boolean)
  parent: System.Net.PeerToPeer.Collaboration.PeerApplication
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: PeerApplication.Dispose(Boolean)
  fullName: System.Net.PeerToPeer.Collaboration.PeerApplication.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.PeerToPeer.Collaboration.PeerApplication.Equals(System.Net.PeerToPeer.Collaboration.PeerApplication)
  parent: System.Net.PeerToPeer.Collaboration.PeerApplication
  isExternal: false
  name: Equals(PeerApplication)
  nameWithType: PeerApplication.Equals(PeerApplication)
  fullName: System.Net.PeerToPeer.Collaboration.PeerApplication.Equals(PeerApplication)
- uid: System.Net.PeerToPeer.Collaboration.PeerApplication
  parent: System.Net.PeerToPeer.Collaboration
  isExternal: false
  name: PeerApplication
  nameWithType: PeerApplication
  fullName: System.Net.PeerToPeer.Collaboration.PeerApplication
- uid: System.Net.PeerToPeer.Collaboration.PeerApplication.Equals(System.Object)
  parent: System.Net.PeerToPeer.Collaboration.PeerApplication
  isExternal: false
  name: Equals(Object)
  nameWithType: PeerApplication.Equals(Object)
  fullName: System.Net.PeerToPeer.Collaboration.PeerApplication.Equals(Object)
- uid: System.Net.PeerToPeer.Collaboration.PeerApplication.Equals(System.Object,System.Object)
  parent: System.Net.PeerToPeer.Collaboration.PeerApplication
  isExternal: false
  name: Equals(Object,Object)
  nameWithType: PeerApplication.Equals(Object,Object)
  fullName: System.Net.PeerToPeer.Collaboration.PeerApplication.Equals(Object,Object)
- uid: System.Net.PeerToPeer.Collaboration.PeerApplication.GetHashCode
  parent: System.Net.PeerToPeer.Collaboration.PeerApplication
  isExternal: false
  name: GetHashCode()
  nameWithType: PeerApplication.GetHashCode()
  fullName: System.Net.PeerToPeer.Collaboration.PeerApplication.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.PeerToPeer.Collaboration.PeerApplication.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Net.PeerToPeer.Collaboration.PeerApplication
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: PeerApplication.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.Collaboration.PeerApplication.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Net.PeerToPeer.Collaboration.PeerApplication.Id
  parent: System.Net.PeerToPeer.Collaboration.PeerApplication
  isExternal: false
  name: Id
  nameWithType: PeerApplication.Id
  fullName: System.Net.PeerToPeer.Collaboration.PeerApplication.Id
- uid: System.Net.PeerToPeer.Collaboration.PeerApplication.OnApplicationChanged(System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs)
  parent: System.Net.PeerToPeer.Collaboration.PeerApplication
  isExternal: false
  name: OnApplicationChanged(ApplicationChangedEventArgs)
  nameWithType: PeerApplication.OnApplicationChanged(ApplicationChangedEventArgs)
  fullName: System.Net.PeerToPeer.Collaboration.PeerApplication.OnApplicationChanged(ApplicationChangedEventArgs)
- uid: System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs
  parent: System.Net.PeerToPeer.Collaboration
  isExternal: false
  name: ApplicationChangedEventArgs
  nameWithType: ApplicationChangedEventArgs
  fullName: System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs
- uid: System.Net.PeerToPeer.Collaboration.PeerApplication.Path
  parent: System.Net.PeerToPeer.Collaboration.PeerApplication
  isExternal: false
  name: Path
  nameWithType: PeerApplication.Path
  fullName: System.Net.PeerToPeer.Collaboration.PeerApplication.Path
- uid: System.Net.PeerToPeer.Collaboration.PeerApplication.PeerScope
  parent: System.Net.PeerToPeer.Collaboration.PeerApplication
  isExternal: false
  name: PeerScope
  nameWithType: PeerApplication.PeerScope
  fullName: System.Net.PeerToPeer.Collaboration.PeerApplication.PeerScope
- uid: System.Net.PeerToPeer.Collaboration.PeerApplication.SynchronizingObject
  parent: System.Net.PeerToPeer.Collaboration.PeerApplication
  isExternal: false
  name: SynchronizingObject
  nameWithType: PeerApplication.SynchronizingObject
  fullName: System.Net.PeerToPeer.Collaboration.PeerApplication.SynchronizingObject
- uid: System.ComponentModel.ISynchronizeInvoke
  parent: System.ComponentModel
  isExternal: false
  name: ISynchronizeInvoke
  nameWithType: ISynchronizeInvoke
  fullName: System.ComponentModel.ISynchronizeInvoke
- uid: System.Net.PeerToPeer.Collaboration.PeerApplication.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Net.PeerToPeer.Collaboration.PeerApplication
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: PeerApplication.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.Collaboration.PeerApplication.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Net.PeerToPeer.Collaboration.PeerApplication.ToString
  parent: System.Net.PeerToPeer.Collaboration.PeerApplication
  isExternal: false
  name: ToString()
  nameWithType: PeerApplication.ToString()
  fullName: System.Net.PeerToPeer.Collaboration.PeerApplication.ToString()
- uid: System.Net.PeerToPeer.Collaboration.PeerApplication.#ctor*
  parent: System.Net.PeerToPeer.Collaboration.PeerApplication
  isExternal: false
  name: PeerApplication
  nameWithType: PeerApplication.PeerApplication
- uid: System.Net.PeerToPeer.Collaboration.PeerApplication.CommandLineArgs*
  parent: System.Net.PeerToPeer.Collaboration.PeerApplication
  isExternal: false
  name: CommandLineArgs
  nameWithType: PeerApplication.CommandLineArgs
- uid: System.Net.PeerToPeer.Collaboration.PeerApplication.Data*
  parent: System.Net.PeerToPeer.Collaboration.PeerApplication
  isExternal: false
  name: Data
  nameWithType: PeerApplication.Data
- uid: System.Net.PeerToPeer.Collaboration.PeerApplication.Description*
  parent: System.Net.PeerToPeer.Collaboration.PeerApplication
  isExternal: false
  name: Description
  nameWithType: PeerApplication.Description
- uid: System.Net.PeerToPeer.Collaboration.PeerApplication.Dispose*
  parent: System.Net.PeerToPeer.Collaboration.PeerApplication
  isExternal: false
  name: Dispose
  nameWithType: PeerApplication.Dispose
- uid: System.Net.PeerToPeer.Collaboration.PeerApplication.Equals*
  parent: System.Net.PeerToPeer.Collaboration.PeerApplication
  isExternal: false
  name: Equals
  nameWithType: PeerApplication.Equals
- uid: System.Net.PeerToPeer.Collaboration.PeerApplication.GetHashCode*
  parent: System.Net.PeerToPeer.Collaboration.PeerApplication
  isExternal: false
  name: GetHashCode
  nameWithType: PeerApplication.GetHashCode
- uid: System.Net.PeerToPeer.Collaboration.PeerApplication.GetObjectData*
  parent: System.Net.PeerToPeer.Collaboration.PeerApplication
  isExternal: false
  name: GetObjectData
  nameWithType: PeerApplication.GetObjectData
- uid: System.Net.PeerToPeer.Collaboration.PeerApplication.Id*
  parent: System.Net.PeerToPeer.Collaboration.PeerApplication
  isExternal: false
  name: Id
  nameWithType: PeerApplication.Id
- uid: System.Net.PeerToPeer.Collaboration.PeerApplication.OnApplicationChanged*
  parent: System.Net.PeerToPeer.Collaboration.PeerApplication
  isExternal: false
  name: OnApplicationChanged
  nameWithType: PeerApplication.OnApplicationChanged
- uid: System.Net.PeerToPeer.Collaboration.PeerApplication.Path*
  parent: System.Net.PeerToPeer.Collaboration.PeerApplication
  isExternal: false
  name: Path
  nameWithType: PeerApplication.Path
- uid: System.Net.PeerToPeer.Collaboration.PeerApplication.PeerScope*
  parent: System.Net.PeerToPeer.Collaboration.PeerApplication
  isExternal: false
  name: PeerScope
  nameWithType: PeerApplication.PeerScope
- uid: System.Net.PeerToPeer.Collaboration.PeerApplication.SynchronizingObject*
  parent: System.Net.PeerToPeer.Collaboration.PeerApplication
  isExternal: false
  name: SynchronizingObject
  nameWithType: PeerApplication.SynchronizingObject
- uid: System.Net.PeerToPeer.Collaboration.PeerApplication.System#Runtime#Serialization#ISerializable#GetObjectData*
  parent: System.Net.PeerToPeer.Collaboration.PeerApplication
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData
  nameWithType: PeerApplication.System.Runtime.Serialization.ISerializable.GetObjectData
- uid: System.Net.PeerToPeer.Collaboration.PeerApplication.ToString*
  parent: System.Net.PeerToPeer.Collaboration.PeerApplication
  isExternal: false
  name: ToString
  nameWithType: PeerApplication.ToString
